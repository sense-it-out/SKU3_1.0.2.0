
SKU3_1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000716  00800200  0001e0b2  0001e146  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0001e0b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001013  00800916  00800916  0001e85c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0001e85c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0001e8b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000011f0  00000000  00000000  0001e8f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00048b2b  00000000  00000000  0001fae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00007e2c  00000000  00000000  00068613  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00016e9b  00000000  00000000  0007043f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000040ec  00000000  00000000  000872dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00014d35  00000000  00000000  0008b3c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0001a053  00000000  00000000  000a00fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001520  00000000  00000000  000ba150  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8e 23 	jmp	0x471c	; 0x471c <__ctors_end>
       4:	0c 94 b5 e2 	jmp	0x1c56a	; 0x1c56a <__vector_1>
       8:	0c 94 e0 e2 	jmp	0x1c5c0	; 0x1c5c0 <__vector_2>
       c:	0c 94 0b e3 	jmp	0x1c616	; 0x1c616 <__vector_3>
      10:	0c 94 36 e3 	jmp	0x1c66c	; 0x1c66c <__vector_4>
      14:	0c 94 61 e3 	jmp	0x1c6c2	; 0x1c6c2 <__vector_5>
      18:	0c 94 8c e3 	jmp	0x1c718	; 0x1c718 <__vector_6>
      1c:	0c 94 b7 e3 	jmp	0x1c76e	; 0x1c76e <__vector_7>
      20:	0c 94 e2 e3 	jmp	0x1c7c4	; 0x1c7c4 <__vector_8>
      24:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      28:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      2c:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      30:	0c 94 44 63 	jmp	0xc688	; 0xc688 <__vector_12>
      34:	0c 94 4e 65 	jmp	0xca9c	; 0xca9c <__vector_13>
      38:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      3c:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      40:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      44:	0c 94 9a 63 	jmp	0xc734	; 0xc734 <__vector_17>
      48:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      4c:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      50:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      54:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      58:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      5c:	0c 94 94 d6 	jmp	0x1ad28	; 0x1ad28 <__vector_23>
      60:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      64:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      68:	0c 94 a7 d3 	jmp	0x1a74e	; 0x1a74e <__vector_26>
      6c:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      70:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      74:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      78:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      7c:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      80:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      84:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      88:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      8c:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      90:	0c 94 0f 63 	jmp	0xc61e	; 0xc61e <__vector_36>
      94:	0c 94 fd d3 	jmp	0x1a7fa	; 0x1a7fa <__vector_37>
      98:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      9c:	0c 94 b2 e7 	jmp	0x1cf64	; 0x1cf64 <__vector_39>
      a0:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      a4:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      a8:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      ac:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      b0:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      b4:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      b8:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      bc:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      c0:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      c4:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      c8:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      cc:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      d0:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      d4:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      d8:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      dc:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      e0:	0c 94 bf 23 	jmp	0x477e	; 0x477e <__bad_interrupt>
      e4:	b7 32       	cpi	r27, 0x27	; 39
      e6:	b7 32       	cpi	r27, 0x27	; 39
      e8:	ed 32       	cpi	r30, 0x2D	; 45
      ea:	b7 32       	cpi	r27, 0x27	; 39
      ec:	d5 32       	cpi	r29, 0x25	; 37
      ee:	b7 32       	cpi	r27, 0x27	; 39
      f0:	d5 32       	cpi	r29, 0x25	; 37
      f2:	b7 32       	cpi	r27, 0x27	; 39
      f4:	b7 32       	cpi	r27, 0x27	; 39
      f6:	d5 32       	cpi	r29, 0x25	; 37
      f8:	b7 32       	cpi	r27, 0x27	; 39
      fa:	d5 32       	cpi	r29, 0x25	; 37
      fc:	c4 32       	cpi	r28, 0x24	; 36
      fe:	c6 32       	cpi	r28, 0x26	; 38
     100:	c9 32       	cpi	r28, 0x29	; 41
     102:	cb 32       	cpi	r28, 0x2B	; 43
     104:	c9 32       	cpi	r28, 0x29	; 41
     106:	cd 32       	cpi	r28, 0x2D	; 45
     108:	c9 32       	cpi	r28, 0x29	; 41
     10a:	cf 32       	cpi	r28, 0x2F	; 47
     10c:	d1 32       	cpi	r29, 0x21	; 33
     10e:	c9 32       	cpi	r28, 0x29	; 41
     110:	d3 32       	cpi	r29, 0x23	; 35
     112:	ab 33       	cpi	r26, 0x3B	; 59
     114:	ad 33       	cpi	r26, 0x3D	; 61
     116:	af 33       	cpi	r26, 0x3F	; 63
     118:	b6 33       	cpi	r27, 0x36	; 54
     11a:	b8 33       	cpi	r27, 0x38	; 56
     11c:	ba 33       	cpi	r27, 0x3A	; 58
     11e:	bc 33       	cpi	r27, 0x3C	; 60
     120:	be 33       	cpi	r27, 0x3E	; 62
     122:	c0 33       	cpi	r28, 0x30	; 48
     124:	c2 33       	cpi	r28, 0x32	; 50
     126:	c4 33       	cpi	r28, 0x34	; 52
     128:	c7 33       	cpi	r28, 0x37	; 55
     12a:	d3 33       	cpi	r29, 0x33	; 51
     12c:	d7 33       	cpi	r29, 0x37	; 55
     12e:	db 33       	cpi	r29, 0x3B	; 59
     130:	e4 33       	cpi	r30, 0x34	; 52
     132:	e8 33       	cpi	r30, 0x38	; 56
     134:	ec 33       	cpi	r30, 0x3C	; 60
     136:	f0 33       	cpi	r31, 0x30	; 48
     138:	f4 33       	cpi	r31, 0x34	; 52
     13a:	f8 33       	cpi	r31, 0x38	; 56
     13c:	fc 33       	cpi	r31, 0x3C	; 60
     13e:	00 34       	cpi	r16, 0x40	; 64
     140:	04 34       	cpi	r16, 0x44	; 68
     142:	f7 34       	cpi	r31, 0x47	; 71
     144:	d8 35       	cpi	r29, 0x58	; 88
     146:	2f 35       	cpi	r18, 0x5F	; 95
     148:	1f 36       	cpi	r17, 0x6F	; 111
     14a:	50 35       	cpi	r21, 0x50	; 80
     14c:	41 36       	cpi	r20, 0x61	; 97
     14e:	72 35       	cpi	r23, 0x52	; 82
     150:	94 35       	cpi	r25, 0x54	; 84
     152:	63 36       	cpi	r22, 0x63	; 99
     154:	b6 35       	cpi	r27, 0x56	; 86
     156:	83 36       	cpi	r24, 0x63	; 99
     158:	cf 34       	cpi	r28, 0x4F	; 79
     15a:	08 37       	cpi	r16, 0x78	; 120
     15c:	cd 37       	cpi	r28, 0x7D	; 125
     15e:	28 37       	cpi	r18, 0x78	; 120
     160:	12 38       	cpi	r17, 0x82	; 130
     162:	49 37       	cpi	r20, 0x79	; 121
     164:	33 38       	cpi	r19, 0x83	; 131
     166:	6a 37       	cpi	r22, 0x7A	; 122
     168:	8b 37       	cpi	r24, 0x7B	; 123
     16a:	54 38       	cpi	r21, 0x84	; 132
     16c:	ac 37       	cpi	r26, 0x7C	; 124
     16e:	74 38       	cpi	r23, 0x84	; 132
     170:	d2 36       	cpi	r29, 0x62	; 98
     172:	bc 39       	cpi	r27, 0x9C	; 156
     174:	7c 3a       	cpi	r23, 0xAC	; 172
     176:	dc 39       	cpi	r29, 0x9C	; 156
     178:	bf 3a       	cpi	r27, 0xAF	; 175
     17a:	fc 39       	cpi	r31, 0x9C	; 156
     17c:	df 3a       	cpi	r29, 0xAF	; 175
     17e:	1c 3a       	cpi	r17, 0xAC	; 172
     180:	3c 3a       	cpi	r19, 0xAC	; 172
     182:	ff 3a       	cpi	r31, 0xAF	; 175
     184:	5c 3a       	cpi	r21, 0xAC	; 172
     186:	1e 3b       	cpi	r17, 0xBE	; 190
     188:	94 39       	cpi	r25, 0x94	; 148
     18a:	a4 3b       	cpi	r26, 0xB4	; 180
     18c:	5e 3c       	cpi	r21, 0xCE	; 206
     18e:	c3 3b       	cpi	r28, 0xB3	; 179
     190:	9f 3c       	cpi	r25, 0xCF	; 207
     192:	e2 3b       	cpi	r30, 0xB2	; 178
     194:	be 3c       	cpi	r27, 0xCE	; 206
     196:	01 3c       	cpi	r16, 0xC1	; 193
     198:	20 3c       	cpi	r18, 0xC0	; 192
     19a:	dd 3c       	cpi	r29, 0xCD	; 205
     19c:	3f 3c       	cpi	r19, 0xCF	; 207
     19e:	03 3d       	cpi	r16, 0xD3	; 211
     1a0:	87 3b       	cpi	r24, 0xB7	; 183
     1a2:	81 46       	sbci	r24, 0x61	; 97
     1a4:	34 46       	sbci	r19, 0x64	; 100
     1a6:	4e 46       	sbci	r20, 0x6E	; 110
     1a8:	7e 46       	sbci	r23, 0x6E	; 110
     1aa:	81 46       	sbci	r24, 0x61	; 97
     1ac:	7e 46       	sbci	r23, 0x6E	; 110
     1ae:	81 46       	sbci	r24, 0x61	; 97
     1b0:	81 46       	sbci	r24, 0x61	; 97
     1b2:	7e 46       	sbci	r23, 0x6E	; 110
     1b4:	81 46       	sbci	r24, 0x61	; 97
     1b6:	7e 46       	sbci	r23, 0x6E	; 110
     1b8:	81 46       	sbci	r24, 0x61	; 97
     1ba:	5d 6c       	ori	r21, 0xCD	; 205
     1bc:	63 6c       	ori	r22, 0xC3	; 195
     1be:	6c 6c       	ori	r22, 0xCC	; 204
     1c0:	79 6c       	ori	r23, 0xC9	; 201
     1c2:	88 6c       	ori	r24, 0xC8	; 200
     1c4:	95 6c       	ori	r25, 0xC5	; 197
     1c6:	a2 6c       	ori	r26, 0xC2	; 194
     1c8:	b0 6c       	ori	r27, 0xC0	; 192
     1ca:	b7 6c       	ori	r27, 0xC7	; 199
     1cc:	c2 6c       	ori	r28, 0xC2	; 194
     1ce:	ab 92       	.word	0x92ab	; ????
     1d0:	a1 92       	st	Z+, r10
     1d2:	bf 92       	push	r11
     1d4:	b2 92       	st	-Z, r11
     1d6:	af 92       	push	r10
     1d8:	77 92       	lat	Z, r7
     1da:	99 92       	st	Y+, r9
     1dc:	6c 92       	st	X, r6
     1de:	43 9c       	mul	r4, r3
     1e0:	53 9d       	mul	r21, r3
     1e2:	76 9d       	mul	r23, r6
     1e4:	90 9d       	mul	r25, r0
     1e6:	c3 9d       	mul	r28, r3
     1e8:	db 9d       	mul	r29, r11
     1ea:	f2 9d       	mul	r31, r2
     1ec:	07 9e       	mul	r0, r23
     1ee:	d1 d7       	rcall	.+4002   	; 0x1192 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10+0x25>
     1f0:	d4 d7       	rcall	.+4008   	; 0x119a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10+0x2d>
     1f2:	c3 d7       	rcall	.+3974   	; 0x117a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10+0xd>
     1f4:	c7 d7       	rcall	.+3982   	; 0x1184 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10+0x17>
     1f6:	cd d7       	rcall	.+3994   	; 0x1192 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10+0x25>
     1f8:	0b d8       	rcall	.-4074   	; 0xfffff210 <__eeprom_end+0xff7ef210>
     1fa:	d8 d7       	rcall	.+4016   	; 0x11ac <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9+0x4>
     1fc:	dc d7       	rcall	.+4024   	; 0x11b6 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9+0xe>
     1fe:	e2 d7       	rcall	.+4036   	; 0x11c4 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8+0x9>
     200:	e6 d7       	rcall	.+4044   	; 0x11ce <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8+0x13>
     202:	ea d7       	rcall	.+4052   	; 0x11d8 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8+0x1d>
     204:	f0 d7       	rcall	.+4064   	; 0x11e6 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7>
     206:	f4 d7       	rcall	.+4072   	; 0x11f0 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7+0xa>
     208:	f8 d7       	rcall	.+4080   	; 0x11fa <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7+0x14>
     20a:	0b d8       	rcall	.-4074   	; 0xfffff222 <__eeprom_end+0xff7ef222>
     20c:	fe d7       	rcall	.+4092   	; 0x120a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_6+0x6>
     20e:	02 d8       	rcall	.-4092   	; 0xfffff214 <__eeprom_end+0xff7ef214>
     210:	06 d8       	rcall	.-4084   	; 0xfffff21e <__eeprom_end+0xff7ef21e>
     212:	30 e1       	ldi	r19, 0x10	; 16
     214:	1d e1       	ldi	r17, 0x1D	; 29
     216:	1f e1       	ldi	r17, 0x1F	; 31
     218:	21 e1       	ldi	r18, 0x11	; 17
     21a:	23 e1       	ldi	r18, 0x13	; 19
     21c:	25 e1       	ldi	r18, 0x15	; 21
     21e:	27 e1       	ldi	r18, 0x17	; 23
     220:	29 e1       	ldi	r18, 0x19	; 25
     222:	8f e2       	ldi	r24, 0x2F	; 47
     224:	59 e2       	ldi	r21, 0x29	; 41
     226:	61 e2       	ldi	r22, 0x21	; 33
     228:	6d e2       	ldi	r22, 0x2D	; 45
     22a:	7a e2       	ldi	r23, 0x2A	; 42
     22c:	9b e2       	ldi	r25, 0x2B	; 43
     22e:	a8 e2       	ldi	r26, 0x28	; 40
     230:	07 63       	ori	r16, 0x37	; 55
     232:	42 36       	cpi	r20, 0x62	; 98
     234:	b7 9b       	sbis	0x16, 7	; 22
     236:	d8 a7       	std	Y+40, r29	; 0x28
     238:	1a 39       	cpi	r17, 0x9A	; 154
     23a:	68 56       	subi	r22, 0x68	; 104
     23c:	18 ae       	std	Y+56, r1	; 0x38
     23e:	ba ab       	std	Y+50, r27	; 0x32
     240:	55 8c       	ldd	r5, Z+29	; 0x1d
     242:	1d 3c       	cpi	r17, 0xCD	; 205
     244:	b7 cc       	rjmp	.-1682   	; 0xfffffbb4 <__eeprom_end+0xff7efbb4>
     246:	57 63       	ori	r21, 0x37	; 55
     248:	bd 6d       	ori	r27, 0xDD	; 221
     24a:	ed fd       	.word	0xfded	; ????
     24c:	75 3e       	cpi	r23, 0xE5	; 229
     24e:	f6 17       	cp	r31, r22
     250:	72 31       	cpi	r23, 0x12	; 18
     252:	bf 00       	.word	0x00bf	; ????
     254:	00 00       	nop
     256:	80 3f       	cpi	r24, 0xF0	; 240
     258:	08 00       	.word	0x0008	; ????
     25a:	00 00       	nop
     25c:	be 92       	st	-X, r11
     25e:	24 49       	sbci	r18, 0x94	; 148
     260:	12 3e       	cpi	r17, 0xE2	; 226
     262:	ab aa       	std	Y+51, r10	; 0x33
     264:	aa 2a       	or	r10, r26
     266:	be cd       	rjmp	.-1156   	; 0xfffffde4 <__eeprom_end+0xff7efde4>
     268:	cc cc       	rjmp	.-1640   	; 0xfffffc02 <__eeprom_end+0xff7efc02>
     26a:	4c 3e       	cpi	r20, 0xEC	; 236
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
     270:	be ab       	std	Y+54, r27	; 0x36
     272:	aa aa       	std	Y+50, r10	; 0x32
     274:	aa 3e       	cpi	r26, 0xEA	; 234
     276:	00 00       	nop
     278:	00 00       	nop
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	00 00       	nop
     282:	00 00       	nop
     284:	00 08       	sbc	r0, r0
     286:	41 78       	andi	r20, 0x81	; 129
     288:	d3 bb       	out	0x13, r29	; 19
     28a:	43 87       	std	Z+11, r20	; 0x0b
     28c:	d1 13       	cpse	r29, r17
     28e:	3d 19       	sub	r19, r13
     290:	0e 3c       	cpi	r16, 0xCE	; 206
     292:	c3 bd       	out	0x23, r28	; 35
     294:	42 82       	std	Z+2, r4	; 0x02
     296:	ad 2b       	or	r26, r29
     298:	3e 68       	ori	r19, 0x8E	; 142
     29a:	ec 82       	std	Y+4, r14	; 0x04
     29c:	76 be       	out	0x36, r7	; 54
     29e:	d9 8f       	std	Y+25, r29	; 0x19
     2a0:	e1 a9       	ldd	r30, Z+49	; 0x31
     2a2:	3e 4c       	sbci	r19, 0xCE	; 206
     2a4:	80 ef       	ldi	r24, 0xF0	; 240
     2a6:	ff be       	out	0x3f, r15	; 63
     2a8:	01 c4       	rjmp	.+2050   	; 0xaac <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x3b>
     2aa:	ff 7f       	andi	r31, 0xFF	; 255
     2ac:	3f 00       	.word	0x003f	; ????
     2ae:	00 00       	nop
	...

000002b2 <__trampolines_end>:
     2b2:	46 6c       	ori	r20, 0xC6	; 198
     2b4:	75 73       	andi	r23, 0x35	; 53
     2b6:	68 5f       	subi	r22, 0xF8	; 248
     2b8:	52 75       	andi	r21, 0x52	; 82
     2ba:	6e 6e       	ori	r22, 0xEE	; 238
     2bc:	69 6e       	ori	r22, 0xE9	; 233
     2be:	67 20       	and	r6, r7
     2c0:	36 3a       	cpi	r19, 0xA6	; 166
     2c2:	20 00       	.word	0x0020	; ????

000002c4 <_ZZ17Flush_ControllingvE3__c_1>:
     2c4:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 33 3a     Flush_Running 3:
     2d4:	20 00                                                .

000002d6 <_ZZ17Flush_ControllingvE3__c_0>:
     2d6:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 32 3a     Flush_Running 2:
     2e6:	20 00                                                .

000002e8 <_ZZ17Flush_ControllingvE3__c>:
     2e8:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 30 3a     Flush_Running 0:
     2f8:	20 00                                                .

000002fa <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_42>:
     2fa:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     30a:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000319 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_41>:
     319:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     329:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     339:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     349:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000354 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_40>:
     354:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     364:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     374:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     384:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000038f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_39>:
     38f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     39f:	69 6c 00                                            il.

000003a2 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_38>:
     3a2:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     3b2:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     3c2:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000003cd <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_37>:
     3cd:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     3dd:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000003eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_36>:
     3eb:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     3fb:	74 61 20 3a 20 00                                   ta : .

00000401 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_35>:
     401:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     411:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     421:	65 20 31 00                                         e 1.

00000425 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_34>:
     425:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     435:	6d 62 65 72 20 00                                   mber .

0000043b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_33>:
     43b:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     44b:	6f 2e 20 00                                         o. .

0000044f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_32>:
     44f:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
     45f:	6e 6f 20 3a 20 00                                   no : .

00000465 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_31>:
     465:	20 00                                                .

00000467 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_30>:
     467:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00000475 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_29>:
     475:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     485:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000494 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_28>:
     494:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4a4:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4b4:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4c4:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000004cf <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_27>:
     4cf:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4df:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4ef:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4ff:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000050a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_26>:
     50a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     51a:	4f 5f 46 45 45 44 42 41 43 4b 20 31 00              O_FEEDBACK 1.

00000527 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_25>:
     527:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     537:	69 6c 00                                            il.

0000053a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_24>:
     53a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     54a:	4f 5f 46 45 45 44 42 41 43 4b 20 30 00              O_FEEDBACK 0.

00000557 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_23>:
     557:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     567:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     577:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00000582 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_22>:
     582:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     592:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000005a0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_21>:
     5a0:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     5b0:	74 61 20 3a 20 00                                   ta : .

000005b6 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_20>:
     5b6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     5c6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     5d6:	65 20 31 00                                         e 1.

000005da <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_19>:
     5da:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     5ea:	6d 62 65 72 20 00                                   mber .

000005f0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_18>:
     5f0:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     600:	6f 2e 20 00                                         o. .

00000604 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_17>:
     604:	54 61 72 67 65 74 5f 50 6c 6f 74 5f 4e 75 6d 20     Target_Plot_Num 
     614:	70 6c 6f 74 20 6e 6f 20 3a 20 00                    plot no : .

0000061f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_16>:
     61f:	20 00                                                .

00000621 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_15>:
     621:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

0000062f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_14>:
     62f:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
     63f:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
     64f:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

0000065d <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_13>:
     65d:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     66d:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
     67d:	29 00                                               ).

0000067f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_12>:
     67f:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     68f:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     69f:	20 6f 6e 6e 29 00                                    onn).

000006a5 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_11>:
     6a5:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     6b5:	61 20 3a 20 00                                      a : .

000006ba <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_10>:
     6ba:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     6ca:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     6da:	65 20 3b 00                                         e ;.

000006de <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_9>:
     6de:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     6ee:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     6fe:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00000709 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_8>:
     709:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
     719:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
     729:	61 64 79 20 6f 6e 00                                ady on.

00000730 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_7>:
     730:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     740:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00000751 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_6>:
     751:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     761:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     771:	20 6f 6e 29 00                                       on).

00000776 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_5>:
     776:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     786:	61 20 3a 20 00                                      a : .

0000078b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_4>:
     78b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     79b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     7ab:	65 20 00                                            e .

000007ae <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_3>:
     7ae:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     7be:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     7ce:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

000007d9 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_2>:
     7d9:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     7e9:	20 00                                                .

000007eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_1>:
     7eb:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

000007fc <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_0>:
     7fc:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     80c:	20 00                                                .

0000080e <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c>:
     80e:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000081f <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_5>:
     81f:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000830 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_4>:
     830:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 20     wireless pump 3 
	...

00000841 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_3>:
     841:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000852 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_2>:
     852:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 34 20     wireless pump 4 
     862:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     872:	23 23 23 23 23 23 23 23 23 23 00                    ##########.

0000087d <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_1>:
     87d:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 2e     wireless pump 3.
     88d:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
     89d:	2e 2e 2e 2c 2c 2c 2c 2c 2c 2c 20 00                 ...,,,,,,, .

000008a9 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_0>:
     8a9:	53 65 6c 65 63 74 65 64 20 77 69 72 65 6c 65 73     Selected wireles
     8b9:	73 20 70 75 6d 70 20 3e 20 00                       s pump > .

000008c3 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c>:
     8c3:	53 65 6c 65 63 74 65 64 20 76 61 6c 76 65 20 6e     Selected valve n
     8d3:	75 6d 62 65 72 20 77 69 72 65 6c 65 73 73 20 70     umber wireless p
     8e3:	75 6d 70 20 3e 20 00                                ump > .

000008ea <_ZZ16Set_Trigger_TimevE3__c>:
     8ea:	74 72 69 67 67 65 72 20 74 69 6d 65 20 73 65 74     trigger time set
	...

000008fb <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_12>:
     8fb:	63 68 65 63 6b 5f 74 72 75 65 5f 63 6f 6e 64 69     check_true_condi
     90b:	74 69 6f 6e 00                                      tion.

00000910 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_11>:
     910:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     920:	30 2e 34 00                                         0.4.

00000924 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_10>:
     924:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 33 00     sc 1 enter 15.3.

00000934 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_9>:
     934:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 32 00     sc 1 enter 15.2.

00000944 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_8>:
     944:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 31 00     sc 1 enter 15.1.

00000954 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_7>:
     954:	73 63 20 31 20 65 6e 74 65 72 20 31 35 00           sc 1 enter 15.

00000962 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_6>:
     962:	73 63 20 31 20 65 6e 74 65 72 20 31 34 00           sc 1 enter 14.

00000970 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_5>:
     970:	73 63 20 31 20 65 6e 74 65 72 20 31 33 00           sc 1 enter 13.

0000097e <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_4>:
     97e:	73 63 20 31 20 65 6e 74 65 72 20 31 32 00           sc 1 enter 12.

0000098c <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_3>:
     98c:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     99c:	30 2e 32 00                                         0.2.

000009a0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_2>:
     9a0:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     9b0:	30 2e 31 00                                         0.1.

000009b4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_1>:
     9b4:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 00     sc 1 enter 12.0.

000009c4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_0>:
     9c4:	73 63 20 65 6e 74 65 72 20 32 33 00                 sc enter 23.

000009d0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c>:
     9d0:	73 63 20 65 6e 74 65 72 20 32 32 00                 sc enter 22.

000009dc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_9>:
     9dc:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     9ec:	75 70 61 64 74 65 20 35 2e 32 2f 2f 2f 2f 2f 2f     upadte 5.2//////
     9fc:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a0c:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a1c:	2f 2f 2f 2f 2f 00                                   /////.

00000a22 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8>:
     a22:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     a32:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     a42:	35 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     5.1/////////////
     a52:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a62:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000a71 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7>:
     a71:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     a81:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     a91:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     aa1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ab1:	2f 2f 2f 00                                         ///.

00000ab5 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6>:
     ab5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     ac5:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     ad5:	34 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4.1/////////////
     ae5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     af5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000b04 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5>:
     b04:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     b14:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     b24:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     b34:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     b44:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000b51 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_4>:
     b51:	73 63 20 65 6e 74 65 72 20 33 30 2e 31 2e 31 00     sc enter 30.1.1.

00000b61 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_3>:
     b61:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 30 2e     sc enter 11.2.0.
     b71:	32 00                                               2.

00000b73 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2>:
     b73:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b83:	31 00                                               1.

00000b85 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1>:
     b85:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b95:	30 2e 30 00                                         0.0.

00000b99 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0>:
     b99:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     ba9:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     bb9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bc9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bd9:	2f 2f 2f 00                                         ///.

00000bdd <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c>:
     bdd:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     bed:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     bfd:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     c0d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     c1d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000c2a <_ZZ18Next_Day_CalculatehhE3__c_3>:
     c2a:	43 75 72 72 65 6e 74 20 64 61 74 65 20 3a 20 00     Current date : .

00000c3a <_ZZ18Next_Day_CalculatehhE3__c_2>:
     c3a:	52 65 71 75 69 72 65 64 20 64 61 74 65 20 3a 20     Required date : 
	...

00000c4b <_ZZ18Next_Day_CalculatehhE3__c_1>:
     c4b:	64 69 61 79 73 20 69 6e 20 62 65 74 65 77 65 65     diays in betewee
     c5b:	65 6e 20 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     en .............
     c6b:	3a 20 00                                            : .

00000c6e <_ZZ18Next_Day_CalculatehhE3__c_0>:
     c6e:	43 75 72 72 65 6e 74 20 64 61 74 65 20 32 3a 20     Current date 2: 
	...

00000c7f <_ZZ18Next_Day_CalculatehhE3__c>:
     c7f:	43 75 72 72 65 6e 74 20 64 61 74 65 20 31 3a 20     Current date 1: 
	...

00000c90 <_ZZ22Do_Not_Repeat_SchedulevE3__c_1>:
     c90:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     ca0:	68 65 64 75 6c 65 20 32 20 23 23 23 23 23 23 23     hedule 2 #######
     cb0:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cc0:	23 23 23 23 23 23 23 00                             #######.

00000cc8 <_ZZ22Do_Not_Repeat_SchedulevE3__c_0>:
     cc8:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     cd8:	68 65 64 75 6c 65 20 31 2e 31 20 23 23 23 23 23     hedule 1.1 #####
     ce8:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cf8:	23 23 23 23 23 23 23 23 23 00                       #########.

00000d02 <_ZZ22Do_Not_Repeat_SchedulevE3__c>:
     d02:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     d12:	68 65 64 75 6c 65 20 31 20 23 23 23 23 23 23 23     hedule 1 #######
     d22:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     d32:	23 23 23 23 23 23 23 00                             #######.

00000d3a <_ZZ18Edited_In_SchedulevE3__c_21>:
     d3a:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     d4a:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     d5a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d6a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d7a:	2f 2f 2f 2f 00                                      ////.

00000d7f <_ZZ18Edited_In_SchedulevE3__c_20>:
     d7f:	6d 79 20 31 34 00                                   my 14.

00000d85 <_ZZ18Edited_In_SchedulevE3__c_19>:
     d85:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     d95:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     da5:	61 74 65 64 5f 44 61 74 65 20 34 2f 2f 2f 2f 20     ated_Date 4//// 
     db5:	3a 00                                               :.

00000db7 <_ZZ18Edited_In_SchedulevE3__c_18>:
     db7:	6d 79 20 39 00                                      my 9.

00000dbc <_ZZ18Edited_In_SchedulevE3__c_17>:
     dbc:	6d 79 20 38 00                                      my 8.

00000dc1 <_ZZ18Edited_In_SchedulevE3__c_16>:
     dc1:	6d 79 20 37 00                                      my 7.

00000dc6 <_ZZ18Edited_In_SchedulevE3__c_15>:
     dc6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     dd6:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     de6:	61 74 65 64 5f 44 61 74 65 20 31 2f 2f 2f 2f 20     ated_Date 1//// 
     df6:	3a 00                                               :.

00000df8 <_ZZ18Edited_In_SchedulevE3__c_14>:
     df8:	6d 79 20 36 2e 32 00                                my 6.2.

00000dff <_ZZ18Edited_In_SchedulevE3__c_13>:
     dff:	6d 79 20 36 2e 31 00                                my 6.1.

00000e06 <_ZZ18Edited_In_SchedulevE3__c_12>:
     e06:	6d 79 20 36 00                                      my 6.

00000e0b <_ZZ18Edited_In_SchedulevE3__c_11>:
     e0b:	6d 79 20 35 00                                      my 5.

00000e10 <_ZZ18Edited_In_SchedulevE3__c_10>:
     e10:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     e20:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     e30:	61 74 65 64 5f 44 61 74 65 20 33 2f 2f 2f 2f 20     ated_Date 3//// 
     e40:	3a 00                                               :.

00000e42 <_ZZ18Edited_In_SchedulevE3__c_9>:
     e42:	6d 79 20 34 00                                      my 4.

00000e47 <_ZZ18Edited_In_SchedulevE3__c_8>:
     e47:	6d 79 20 33 00                                      my 3.

00000e4c <_ZZ18Edited_In_SchedulevE3__c_7>:
     e4c:	42 61 63 6b 20 75 70 20 73 63 68 65 64 75 6c 65     Back up schedule
     e5c:	20 3a 00                                             :.

00000e5f <_ZZ18Edited_In_SchedulevE3__c_6>:
     e5f:	52 75 6e 6e 69 6e 67 20 73 63 68 65 64 75 6c 65     Running schedule
     e6f:	20 3a 00                                             :.

00000e72 <_ZZ18Edited_In_SchedulevE3__c_5>:
     e72:	6d 79 20 32 00                                      my 2.

00000e77 <_ZZ18Edited_In_SchedulevE3__c_4>:
     e77:	6d 79 20 31 00                                      my 1.

00000e7c <_ZZ18Edited_In_SchedulevE3__c_3>:
     e7c:	6d 79 20 30 00                                      my 0.

00000e81 <_ZZ18Edited_In_SchedulevE3__c_2>:
     e81:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     e91:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     ea1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     eb1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ec1:	2f 2f 2f 2f 00                                      ////.

00000ec6 <_ZZ18Edited_In_SchedulevE3__c_1>:
     ec6:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 6d 6f 6e     Running list mon
     ed6:	74 68 20 00                                         th .

00000eda <_ZZ18Edited_In_SchedulevE3__c_0>:
     eda:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 64 61 74     Running list dat
     eea:	65 20 00                                            e .

00000eed <_ZZ18Edited_In_SchedulevE3__c>:
     eed:	6d 79 20 31 34 00                                   my 14.

00000ef3 <_ZZ17Blower_MonitoringhE3__c_0>:
     ef3:	62 6c 6f 77 65 72 20 67 65 74 73 20 32 2e 31 20     blower gets 2.1 
     f03:	3a 20 00                                            : .

00000f06 <_ZZ17Blower_MonitoringhE3__c>:
     f06:	62 6c 6f 77 65 72 20 67 65 74 73 20 31 2e 31 20     blower gets 1.1 
     f16:	3a 20 00                                            : .

00000f19 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c_0>:
     f19:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 67 65 74 73     tank number gets
     f29:	20 74 6f 20 6f 66 66 20 73 61 66 65 6c 79 00         to off safely.

00000f38 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c>:
     f38:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 6c 69 73 74     tank number list
	...

00000f49 <_ZZ17Doser_Pump_On_OffhE3__c_10>:
     f49:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     f59:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000f68 <_ZZ17Doser_Pump_On_OffhE3__c_9>:
     f68:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     f78:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     f88:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     f98:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000fa3 <_ZZ17Doser_Pump_On_OffhE3__c_8>:
     fa3:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fb3:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     fc3:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     fd3:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00000fde <_ZZ17Doser_Pump_On_OffhE3__c_7>:
     fde:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fee:	69 6c 00                                            il.

00000ff1 <_ZZ17Doser_Pump_On_OffhE3__c_6>:
     ff1:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    1001:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    1011:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

0000101c <_ZZ17Doser_Pump_On_OffhE3__c_5>:
    101c:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    102c:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

0000103a <_ZZ17Doser_Pump_On_OffhE3__c_4>:
    103a:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    104a:	74 61 20 3a 20 00                                   ta : .

00001050 <_ZZ17Doser_Pump_On_OffhE3__c_3>:
    1050:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    1060:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    1070:	65 20 31 00                                         e 1.

00001074 <_ZZ17Doser_Pump_On_OffhE3__c_2>:
    1074:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    1084:	6d 62 65 72 20 00                                   mber .

0000108a <_ZZ17Doser_Pump_On_OffhE3__c_1>:
    108a:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    109a:	6f 2e 20 00                                         o. .

0000109e <_ZZ17Doser_Pump_On_OffhE3__c_0>:
    109e:	20 00                                                .

000010a0 <_ZZ17Doser_Pump_On_OffhE3__c>:
    10a0:	64 6f 73 65 72 20 70 75 6d 70 20 76 61 6c 76 65     doser pump valve
    10b0:	20 6c 69 73 74 20 3a 20 00                           list : .

000010b9 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_15>:
    10b9:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10c9:	65 64 75 6c 65 20 4f 4e 20 3a 20 00                 edule ON : .

000010d5 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_14>:
    10d5:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10e5:	65 64 75 6c 65 20 4f 66 66 20 31 20 3a 20 00        edule Off 1 : .

000010f4 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_13>:
    10f4:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    1104:	65 64 75 6c 65 20 4f 66 66 20 30 20 3a 20 00        edule Off 0 : .

00001113 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_12>:
    1113:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    1123:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00001132 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_11>:
    1132:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    1142:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    1152:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    1162:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

0000116d <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10>:
    116d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    117d:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    118d:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    119d:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

000011a8 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9>:
    11a8:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    11b8:	69 6c 00                                            il.

000011bb <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8>:
    11bb:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    11cb:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    11db:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000011e6 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7>:
    11e6:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    11f6:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00001204 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_6>:
    1204:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    1214:	74 61 20 3a 20 00                                   ta : .

0000121a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_5>:
    121a:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    122a:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    123a:	65 20 31 00                                         e 1.

0000123e <_ZZ22Fertilizer_Tank_On_OffhhE3__c_4>:
    123e:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    124e:	6d 62 65 72 20 00                                   mber .

00001254 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_3>:
    1254:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    1264:	6f 2e 20 00                                         o. .

00001268 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_2>:
    1268:	20 00                                                .

0000126a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_1>:
    126a:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    127a:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00001288 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_0>:
    1288:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1298:	6e 75 6d 62 65 72 20 3a 20 00                       number : .

000012a2 <_ZZ22Fertilizer_Tank_On_OffhhE3__c>:
    12a2:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    12b2:	6e 75 6d 62 65 72 20 69 73 20 6c 65 73 73 20 74     number is less t
    12c2:	68 61 6e 20 31 30 30 20 3a 20 00                    han 100 : .

000012cd <_ZZ26Fertilizer_Tank_MonitoringvE3__c_0>:
    12cd:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12dd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 31 20 3a 20 00     Monitoring 1 : .

000012ed <_ZZ26Fertilizer_Tank_MonitoringvE3__c>:
    12ed:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12fd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 3a 20 00           Monitoring : .

0000130b <_ZZ20Schedules_MonitoringvE3__c_37>:
    130b:	73 63 20 65 6e 74 65 72 20 35 39 2e 31 00           sc enter 59.1.

00001319 <_ZZ20Schedules_MonitoringvE3__c_36>:
    1319:	53 63 68 65 64 75 6c 65 72 20 67 65 74 73 20 6f     Scheduler gets o
    1329:	66 66 20 31 31 20 3a 20 00                          ff 11 : .

00001332 <_ZZ20Schedules_MonitoringvE3__c_35>:
    1332:	73 63 20 65 6e 74 65 72 20 36 32 00                 sc enter 62.

0000133e <_ZZ20Schedules_MonitoringvE3__c_34>:
    133e:	73 63 20 65 6e 74 65 72 20 36 31 00                 sc enter 61.

0000134a <_ZZ20Schedules_MonitoringvE3__c_33>:
    134a:	73 63 20 65 6e 74 65 72 20 36 30 00                 sc enter 60.

00001356 <_ZZ20Schedules_MonitoringvE3__c_32>:
    1356:	73 63 20 65 6e 74 65 72 20 35 39 00                 sc enter 59.

00001362 <_ZZ20Schedules_MonitoringvE3__c_31>:
    1362:	73 63 20 65 6e 74 65 72 20 35 38 00                 sc enter 58.

0000136e <_ZZ20Schedules_MonitoringvE3__c_30>:
    136e:	73 63 20 65 6e 74 65 72 20 35 35 00                 sc enter 55.

0000137a <_ZZ20Schedules_MonitoringvE3__c_29>:
    137a:	73 63 20 65 6e 74 65 72 20 35 30 00                 sc enter 50.

00001386 <_ZZ20Schedules_MonitoringvE3__c_28>:
    1386:	73 63 20 65 6e 74 65 72 20 34 39 00                 sc enter 49.

00001392 <_ZZ20Schedules_MonitoringvE3__c_27>:
    1392:	73 63 20 65 6e 74 65 72 20 34 34 00                 sc enter 44.

0000139e <_ZZ20Schedules_MonitoringvE3__c_26>:
    139e:	73 63 20 65 6e 74 65 72 20 33 39 00                 sc enter 39.

000013aa <_ZZ20Schedules_MonitoringvE3__c_25>:
    13aa:	73 63 20 65 6e 74 65 72 20 33 38 00                 sc enter 38.

000013b6 <_ZZ20Schedules_MonitoringvE3__c_24>:
    13b6:	73 63 20 65 6e 74 65 72 20 33 37 00                 sc enter 37.

000013c2 <_ZZ20Schedules_MonitoringvE3__c_23>:
    13c2:	73 63 20 65 6e 74 65 72 20 33 32 00                 sc enter 32.

000013ce <_ZZ20Schedules_MonitoringvE3__c_22>:
    13ce:	73 63 20 65 6e 74 65 72 20 32 37 00                 sc enter 27.

000013da <_ZZ20Schedules_MonitoringvE3__c_21>:
    13da:	73 63 20 65 6e 74 65 72 20 32 36 00                 sc enter 26.

000013e6 <_ZZ20Schedules_MonitoringvE3__c_20>:
    13e6:	73 63 20 65 6e 74 65 72 20 31 37 00                 sc enter 17.

000013f2 <_ZZ20Schedules_MonitoringvE3__c_19>:
    13f2:	73 63 20 65 6e 74 65 72 20 31 36 00                 sc enter 16.

000013fe <_ZZ20Schedules_MonitoringvE3__c_18>:
    13fe:	73 63 20 65 6e 74 65 72 20 37 2e 31 00              sc enter 7.1.

0000140b <_ZZ20Schedules_MonitoringvE3__c_17>:
    140b:	73 63 20 65 6e 74 65 72 20 36 2e 31 2e 2e 2e 2e     sc enter 6.1....
    141b:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    142b:	2e 2e 2e 2e 2e 2e 00                                .......

00001432 <_ZZ20Schedules_MonitoringvE3__c_16>:
    1432:	73 63 20 65 6e 74 65 72 20 36 2e 30 2e 2e 2e 2e     sc enter 6.0....
    1442:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1452:	2e 2e 2e 2e 2e 2e 00                                .......

00001459 <_ZZ20Schedules_MonitoringvE3__c_15>:
    1459:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 31 00     sc enter 11.2.1.

00001469 <_ZZ20Schedules_MonitoringvE3__c_14>:
    1469:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 00           sc enter 11.2.

00001477 <_ZZ20Schedules_MonitoringvE3__c_13>:
    1477:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 00           sc enter 11.1.

00001485 <_ZZ20Schedules_MonitoringvE3__c_12>:
    1485:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1495:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    14a5:	61 74 65 64 5f 44 61 74 65 20 32 2f 2f 2f 2f 20     ated_Date 2//// 
    14b5:	3a 00                                               :.

000014b7 <_ZZ20Schedules_MonitoringvE3__c_11>:
    14b7:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000014c3 <_ZZ20Schedules_MonitoringvE3__c_10>:
    14c3:	73 63 20 65 6e 74 65 72 20 31 30 00                 sc enter 10.

000014cf <_ZZ20Schedules_MonitoringvE3__c_9>:
    14cf:	73 63 20 65 6e 74 65 72 20 39 00                    sc enter 9.

000014da <_ZZ20Schedules_MonitoringvE3__c_8>:
    14da:	73 63 20 65 6e 74 65 72 20 38 2e 2e 2e 2e 2e 2e     sc enter 8......
    14ea:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    14fa:	2e 2e 2e 2e 2e 00                                   ......

00001500 <_ZZ20Schedules_MonitoringvE3__c_7>:
    1500:	73 63 20 65 6e 74 65 72 20 37 2e 2e 2e 2e 2e 2e     sc enter 7......
    1510:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1520:	2e 2e 2e 2e 2e 2e 2e 2e 00                          .........

00001529 <_ZZ20Schedules_MonitoringvE3__c_6>:
    1529:	73 63 20 65 6e 74 65 72 20 36 2e 2e 2e 2e 2e 2e     sc enter 6......
    1539:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001547 <_ZZ20Schedules_MonitoringvE3__c_5>:
    1547:	73 63 20 65 6e 74 65 72 20 35 2e 2e 2e 2e 2e 2e     sc enter 5......
    1557:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001565 <_ZZ20Schedules_MonitoringvE3__c_4>:
    1565:	73 63 20 65 6e 74 65 72 20 34 2e 2e 2e 2e 2e 2e     sc enter 4......
    1575:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00              .............

00001582 <_ZZ20Schedules_MonitoringvE3__c_3>:
    1582:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1592:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15a2:	61 74 65 64 5f 44 61 74 65 20 30 2f 2f 2f 2f 20     ated_Date 0//// 
    15b2:	3a 00                                               :.

000015b4 <_ZZ20Schedules_MonitoringvE3__c_2>:
    15b4:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000015c0 <_ZZ20Schedules_MonitoringvE3__c_1>:
    15c0:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    15d0:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15e0:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2e 30 2f     ated_Date 0.0.0/
    15f0:	2f 2f 2f 20 3a 00                                   /// :.

000015f6 <_ZZ20Schedules_MonitoringvE3__c_0>:
    15f6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1606:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1616:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2f 2f 2f     ated_Date 0.0///
    1626:	2f 20 3a 00                                         / :.

0000162a <_ZZ20Schedules_MonitoringvE3__c>:
    162a:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    163a:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    164a:	61 74 65 64 5f 44 61 74 65 20 30 2e 2f 2f 2f 2f     ated_Date 0.////
    165a:	20 3a 00                                             :.

0000165d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_65>:
    165d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 2e 31 00     day in btw 11.1.

0000166d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_64>:
    166d:	64 61 79 20 69 6e 20 62 74 77 20 31 30 2e 31 00     day in btw 10.1.

0000167d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_63>:
    167d:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

0000168c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_62>:
    168c:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

0000169b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_61>:
    169b:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016aa <_ZZ22Day_In_Bet_SchedullinghhhE3__c_60>:
    16aa:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016b7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_59>:
    16b7:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016c6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_58>:
    16c6:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016d3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_57>:
    16d3:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016e2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_56>:
    16e2:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

000016f1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_55>:
    16f1:	64 61 79 20 69 6e 20 62 74 77 20 37 2e 31 00        day in btw 7.1.

00001700 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_54>:
    1700:	64 61 79 20 69 6e 20 62 74 77 20 36 2e 31 00        day in btw 6.1.

0000170f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_53>:
    170f:	64 61 79 20 69 6e 20 62 74 77 20 35 2e 31 00        day in btw 5.1.

0000171e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_52>:
    171e:	64 61 79 20 69 6e 20 62 74 77 20 34 2e 31 00        day in btw 4.1.

0000172d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_51>:
    172d:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000173c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_50>:
    173c:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

0000174b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_49>:
    174b:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000175a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_48>:
    175a:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001769 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_47>:
    1769:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001778 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_46>:
    1778:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001787 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_45>:
    1787:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001796 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_44>:
    1796:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017a5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_43>:
    17a5:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_42>:
    17b4:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017c3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_41>:
    17c3:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017d2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_40>:
    17d2:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_39>:
    17e1:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017f0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_38>:
    17f0:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017ff <_ZZ22Day_In_Bet_SchedullinghhhE3__c_37>:
    17ff:	64 61 79 20 69 6e 20 62 74 77 20 31 2e 31 00        day in btw 1.1.

0000180e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_36>:
    180e:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    181e:	74 20 31 3a 20 00                                   t 1: .

00001824 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_35>:
    1824:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001832 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_34>:
    1832:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001840 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_33>:
    1840:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000184d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_32>:
    184d:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000185a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_31>:
    185a:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001867 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_30>:
    1867:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001874 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_29>:
    1874:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001881 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_28>:
    1881:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000188e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_27>:
    188e:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000189b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_26>:
    189b:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000018a8 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_25>:
    18a8:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

000018b5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_24>:
    18b5:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

000018c2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_23>:
    18c2:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

000018cf <_ZZ22Day_In_Bet_SchedullinghhhE3__c_22>:
    18cf:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

000018dc <_ZZ22Day_In_Bet_SchedullinghhhE3__c_21>:
    18dc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_20>:
    18e9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

000018f6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_19>:
    18f6:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001903 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_18>:
    1903:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001910 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_17>:
    1910:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000191d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_16>:
    191d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000192a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_15>:
    192a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001937 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_14>:
    1937:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001944 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_13>:
    1944:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001951 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_12>:
    1951:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000195e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_11>:
    195e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000196b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_10>:
    196b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001978 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_9>:
    1978:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001985 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_8>:
    1985:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001992 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_7>:
    1992:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

0000199f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_6>:
    199f:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    19af:	74 20 3a 20 00                                      t : .

000019b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_5>:
    19b4:	64 61 79 20 69 6e 20 62 74 77 20 73 74 61 72 74     day in btw start
    19c4:	65 64 00                                            ed.

000019c7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_4>:
    19c7:	6c 61 73 74 20 6d 6f 6e 74 68 20 3a 20 00           last month : .

000019d5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_3>:
    19d5:	6c 61 73 74 20 64 61 74 65 3a 20 00                 last date: .

000019e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_2>:
    19e1:	79 65 61 72 20 3a 20 00                             year : .

000019e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_1>:
    19e9:	6d 6f 6e 74 68 20 3a 20 00                          month : .

000019f2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_0>:
    19f2:	64 61 74 65 20 3a 20 00                             date : .

000019fa <_ZZ22Day_In_Bet_SchedullinghhhE3__c>:
    19fa:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    1a0a:	3a 20 00                                            : .

00001a0d <_ZZ22Day_In_Bet_SchedullinghE3__c_61>:
    1a0d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001a1b <_ZZ22Day_In_Bet_SchedullinghE3__c_60>:
    1a1b:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001a29 <_ZZ22Day_In_Bet_SchedullinghE3__c_59>:
    1a29:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a36 <_ZZ22Day_In_Bet_SchedullinghE3__c_58>:
    1a36:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a43 <_ZZ22Day_In_Bet_SchedullinghE3__c_57>:
    1a43:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a50 <_ZZ22Day_In_Bet_SchedullinghE3__c_56>:
    1a50:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a5d <_ZZ22Day_In_Bet_SchedullinghE3__c_55>:
    1a5d:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a6a <_ZZ22Day_In_Bet_SchedullinghE3__c_54>:
    1a6a:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a77 <_ZZ22Day_In_Bet_SchedullinghE3__c_53>:
    1a77:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a84 <_ZZ22Day_In_Bet_SchedullinghE3__c_52>:
    1a84:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a91 <_ZZ22Day_In_Bet_SchedullinghE3__c_51>:
    1a91:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001a9e <_ZZ22Day_In_Bet_SchedullinghE3__c_50>:
    1a9e:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001aab <_ZZ22Day_In_Bet_SchedullinghE3__c_49>:
    1aab:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001ab8 <_ZZ22Day_In_Bet_SchedullinghE3__c_48>:
    1ab8:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001ac5 <_ZZ22Day_In_Bet_SchedullinghE3__c_47>:
    1ac5:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ad2 <_ZZ22Day_In_Bet_SchedullinghE3__c_46>:
    1ad2:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001adf <_ZZ22Day_In_Bet_SchedullinghE3__c_45>:
    1adf:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001aec <_ZZ22Day_In_Bet_SchedullinghE3__c_44>:
    1aec:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001af9 <_ZZ22Day_In_Bet_SchedullinghE3__c_43>:
    1af9:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b06 <_ZZ22Day_In_Bet_SchedullinghE3__c_42>:
    1b06:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b13 <_ZZ22Day_In_Bet_SchedullinghE3__c_41>:
    1b13:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b20 <_ZZ22Day_In_Bet_SchedullinghE3__c_40>:
    1b20:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b2d <_ZZ22Day_In_Bet_SchedullinghE3__c_39>:
    1b2d:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b3a <_ZZ22Day_In_Bet_SchedullinghE3__c_38>:
    1b3a:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b47 <_ZZ22Day_In_Bet_SchedullinghE3__c_37>:
    1b47:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b54 <_ZZ22Day_In_Bet_SchedullinghE3__c_36>:
    1b54:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b61 <_ZZ22Day_In_Bet_SchedullinghE3__c_35>:
    1b61:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b6e <_ZZ22Day_In_Bet_SchedullinghE3__c_34>:
    1b6e:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b7b <_ZZ22Day_In_Bet_SchedullinghE3__c_33>:
    1b7b:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001b88 <_ZZ22Day_In_Bet_SchedullinghE3__c_32>:
    1b88:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001b96 <_ZZ22Day_In_Bet_SchedullinghE3__c_31>:
    1b96:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001ba4 <_ZZ22Day_In_Bet_SchedullinghE3__c_30>:
    1ba4:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bb1 <_ZZ22Day_In_Bet_SchedullinghE3__c_29>:
    1bb1:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bbe <_ZZ22Day_In_Bet_SchedullinghE3__c_28>:
    1bbe:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bcb <_ZZ22Day_In_Bet_SchedullinghE3__c_27>:
    1bcb:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bd8 <_ZZ22Day_In_Bet_SchedullinghE3__c_26>:
    1bd8:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001be5 <_ZZ22Day_In_Bet_SchedullinghE3__c_25>:
    1be5:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bf2 <_ZZ22Day_In_Bet_SchedullinghE3__c_24>:
    1bf2:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bff <_ZZ22Day_In_Bet_SchedullinghE3__c_23>:
    1bff:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001c0c <_ZZ22Day_In_Bet_SchedullinghE3__c_22>:
    1c0c:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001c19 <_ZZ22Day_In_Bet_SchedullinghE3__c_21>:
    1c19:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001c26 <_ZZ22Day_In_Bet_SchedullinghE3__c_20>:
    1c26:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001c33 <_ZZ22Day_In_Bet_SchedullinghE3__c_19>:
    1c33:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001c40 <_ZZ22Day_In_Bet_SchedullinghE3__c_18>:
    1c40:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c4d <_ZZ22Day_In_Bet_SchedullinghE3__c_17>:
    1c4d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c5a <_ZZ22Day_In_Bet_SchedullinghE3__c_16>:
    1c5a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c67 <_ZZ22Day_In_Bet_SchedullinghE3__c_15>:
    1c67:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c74 <_ZZ22Day_In_Bet_SchedullinghE3__c_14>:
    1c74:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c81 <_ZZ22Day_In_Bet_SchedullinghE3__c_13>:
    1c81:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c8e <_ZZ22Day_In_Bet_SchedullinghE3__c_12>:
    1c8e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c9b <_ZZ22Day_In_Bet_SchedullinghE3__c_11>:
    1c9b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001ca8 <_ZZ22Day_In_Bet_SchedullinghE3__c_10>:
    1ca8:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001cb5 <_ZZ22Day_In_Bet_SchedullinghE3__c_9>:
    1cb5:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cc2 <_ZZ22Day_In_Bet_SchedullinghE3__c_8>:
    1cc2:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ccf <_ZZ22Day_In_Bet_SchedullinghE3__c_7>:
    1ccf:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cdc <_ZZ22Day_In_Bet_SchedullinghE3__c_6>:
    1cdc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ce9 <_ZZ22Day_In_Bet_SchedullinghE3__c_5>:
    1ce9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cf6 <_ZZ22Day_In_Bet_SchedullinghE3__c_4>:
    1cf6:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001d03 <_ZZ22Day_In_Bet_SchedullinghE3__c_3>:
    1d03:	69 72 72 69 67 61 74 69 6e 67 20 6d 6f 6e 74 68     irrigating month
    1d13:	20 3a 20 00                                          : .

00001d17 <_ZZ22Day_In_Bet_SchedullinghE3__c_2>:
    1d17:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d27:	3a 20 00                                            : .

00001d2a <_ZZ22Day_In_Bet_SchedullinghE3__c_1>:
    1d2a:	79 65 61 72 20 3a 20 00                             year : .

00001d32 <_ZZ22Day_In_Bet_SchedullinghE3__c_0>:
    1d32:	6d 6f 6e 74 68 20 3a 20 00                          month : .

00001d3b <_ZZ22Day_In_Bet_SchedullinghE3__c>:
    1d3b:	64 61 74 65 20 3a 20 00                             date : .

00001d43 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_2>:
    1d43:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d53:	65 6d 70 5f 4d 6f 6e 74 68 00                       emp_Month.

00001d5d <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_1>:
    1d5d:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d6d:	65 6d 70 5f 64 61 74 65 00                          emp_date.

00001d76 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_0>:
    1d76:	73 63 20 6d 61 6b 65 20 64 61 74 65 00              sc make date.

00001d83 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c>:
    1d83:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d93:	75 70 61 64 74 65 20 31 2f 2f 2f 2f 2f 2f 2f 2f     upadte 1////////
    1da3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1db3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1dc3:	2f 2f 2f 00                                         ///.

00001dc7 <_ZZ25Update_Wireless_Pump_DataPhE3__c>:
    1dc7:	57 49 52 45 4c 45 53 53 20 50 55 4d 50 20 44 41     WIRELESS PUMP DA
    1dd7:	54 41 20 52 45 43 49 45 56 45 44 00                 TA RECIEVED.

00001de3 <_ZZ22Update_Euro_Valve_DataPhE3__c_16>:
    1de3:	41 43 4b 30 20 53 45 4e 44 20 54 4f 20 56 41 4c     ACK0 SEND TO VAL
    1df3:	56 45 20 00                                         VE .

00001df7 <_ZZ22Update_Euro_Valve_DataPhE3__c_15>:
    1df7:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e07:	4f 57 20 31 20 00                                   OW 1 .

00001e0d <_ZZ22Update_Euro_Valve_DataPhE3__c_14>:
    1e0d:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e1d:	30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     0000000000000000
    1e2d:	30 30 00                                            00.

00001e30 <_ZZ22Update_Euro_Valve_DataPhE3__c_13>:
    1e30:	66 6f 67 67 65 72 3a 20 76 61 6c 76 65 20 66 61     fogger: valve fa
    1e40:	75 6c 74 20 6f 63 63 75 72 65 20 70 6c 65 61 73     ult occure pleas
    1e50:	65 20 74 75 72 6e 20 6f 66 66 20 74 68 65 20 70     e turn off the p
    1e60:	75 6d 70 00                                         ump.

00001e64 <_ZZ22Update_Euro_Valve_DataPhE3__c_12>:
    1e64:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e74:	4f 57 00                                            OW.

00001e77 <_ZZ22Update_Euro_Valve_DataPhE3__c_11>:
    1e77:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e87:	31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31     1111111111111111
    1e97:	31 31 31 31 00                                      1111.

00001e9c <_ZZ22Update_Euro_Valve_DataPhE3__c_10>:
    1e9c:	76 61 6c 76 65 20 66 61 75 6c 74 20 6f 63 63 75     valve fault occu
    1eac:	72 65 20 70 6c 65 61 73 65 20 74 75 72 6e 20 6f     re please turn o
    1ebc:	66 66 20 74 68 65 20 70 75 6d 70 00                 ff the pump.

00001ec8 <_ZZ22Update_Euro_Valve_DataPhE3__c_9>:
    1ec8:	45 55 52 4f 20 50 41 43 4b 45 54 20 49 53 20 4e     EURO PACKET IS N
    1ed8:	4f 54 20 41 50 50 4c 49 43 41 42 4c 45 00           OT APPLICABLE.

00001ee6 <_ZZ22Update_Euro_Valve_DataPhE3__c_8>:
    1ee6:	45 75 72 6f 20 73 74 61 74 75 73 20 3a 20 00        Euro status : .

00001ef5 <_ZZ22Update_Euro_Valve_DataPhE3__c_7>:
    1ef5:	45 75 72 6f 20 6f 6e 6c 69 6e 65 2f 6f 66 66 6c     Euro online/offl
    1f05:	69 6e 65 20 3a 20 00                                ine : .

00001f0c <_ZZ22Update_Euro_Valve_DataPhE3__c_6>:
    1f0c:	42 61 74 74 65 72 79 20 6c 65 76 65 6c 20 3a 20     Battery level : 
	...

00001f1d <_ZZ22Update_Euro_Valve_DataPhE3__c_5>:
    1f1d:	44 61 74 61 20 72 65 63 76 64 20 46 72 6f 6d 20     Data recvd From 
    1f2d:	45 75 72 6f 20 3a 20 00                             Euro : .

00001f35 <_ZZ22Update_Euro_Valve_DataPhE3__c_4>:
    1f35:	64 65 66 61 75 6c 74 20 63 6f 6d 6d 61 6e 64 20     default command 
	...

00001f46 <_ZZ22Update_Euro_Valve_DataPhE3__c_3>:
    1f46:	6c 6f 77 20 62 61 74 74 65 72 79 20 66 61 75 6c     low battery faul
    1f56:	74 00                                               t.

00001f58 <_ZZ22Update_Euro_Valve_DataPhE3__c_2>:
    1f58:	6e 6f 74 20 61 6e 79 20 70 6c 6f 74 20 69 73 20     not any plot is 
    1f68:	69 72 72 69 67 61 74 69 6e 67 00                    irrigating.

00001f73 <_ZZ22Update_Euro_Valve_DataPhE3__c_1>:
    1f73:	5f 65 4e 4f 5f 46 41 55 4c 54 20 00                 _eNO_FAULT .

00001f7f <_ZZ22Update_Euro_Valve_DataPhE3__c_0>:
    1f7f:	5f 65 45 55 52 4f 5f 56 41 4c 56 45 5f 46 41 55     _eEURO_VALVE_FAU
    1f8f:	4c 54 5f 44 41 54 41 00                             LT_DATA.

00001f97 <_ZZ22Update_Euro_Valve_DataPhE3__c>:
    1f97:	45 55 52 4f 20 44 41 54 41 20 52 45 43 49 45 56     EURO DATA RECIEV
    1fa7:	45 44 00                                            ED.

00001faa <_ZZ16Gsm_Gprs_NetworkvE3__c_10>:
    1faa:	41 54 45 30 00                                      ATE0.

00001faf <_ZZ16Gsm_Gprs_NetworkvE3__c_9>:
    1faf:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00001fbb <_ZZ16Gsm_Gprs_NetworkvE3__c_8>:
    1fbb:	66 61 69 6c 20 74 6f 20 63 6f 6e 6e 65 63 74 20     fail to connect 
    1fcb:	67 73 6d 2f 47 50 52 53 20 6e 65 74 77 6f 72 6b     gsm/GPRS network
	...

00001fdc <_ZZ16Gsm_Gprs_NetworkvE3__c_7>:
    1fdc:	53 75 63 63 73 20 43 6f 6e 6e 65 63 74 65 64 20     Succs Connected 
    1fec:	74 6f 20 47 50 52 53 20 6e 65 74 77 6f 72 6b 00     to GPRS network.

00001ffc <_ZZ16Gsm_Gprs_NetworkvE3__c_6>:
    1ffc:	41 54 45 30 00                                      ATE0.

00002001 <_ZZ16Gsm_Gprs_NetworkvE3__c_5>:
    2001:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000200d <_ZZ16Gsm_Gprs_NetworkvE3__c_4>:
    200d:	46 61 69 6c 20 74 6f 20 43 6f 6e 6e 65 63 74 20     Fail to Connect 
    201d:	47 50 52 53 00                                      GPRS.

00002022 <_ZZ16Gsm_Gprs_NetworkvE3__c_3>:
    2022:	43 61 6e 27 74 20 67 65 74 20 6f 70 65 61 72 74     Can't get opeart
    2032:	6f 72 20 4e 61 6d 65 00                             or Name.

0000203a <_ZZ16Gsm_Gprs_NetworkvE3__c_2>:
    203a:	6a 69 6f 00                                         jio.

0000203e <_ZZ16Gsm_Gprs_NetworkvE3__c_1>:
    203e:	41 69 72 74 65 6c 00                                Airtel.

00002045 <_ZZ16Gsm_Gprs_NetworkvE3__c_0>:
    2045:	56 6f 64 61 66 6f 6e 65 00                          Vodafone.

0000204e <_ZZ16Gsm_Gprs_NetworkvE3__c>:
    204e:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 20 67 73 6d     Connected to gsm
    205e:	2f 47 50 52 53 20 6e 65 74 77 6f 72 6b 20 30 00     /GPRS network 0.

0000206e <_ZZ14Get_Local_TimevE3__c_6>:
    206e:	6d 79 20 79 65 61 72 20 3a 20 00                    my year : .

00002079 <_ZZ14Get_Local_TimevE3__c_5>:
    2079:	6d 79 20 6d 6f 6e 74 68 20 3a 20 00                 my month : .

00002085 <_ZZ14Get_Local_TimevE3__c_4>:
    2085:	6d 79 20 64 61 74 65 20 3a 20 00                    my date : .

00002090 <_ZZ14Get_Local_TimevE3__c_3>:
    2090:	41 54 2b 43 43 4c 4b 3f 00                          AT+CCLK?.

00002099 <_ZZ14Get_Local_TimevE3__c_2>:
    2099:	41 54 2b 43 4e 54 50 00                             AT+CNTP.

000020a1 <_ZZ14Get_Local_TimevE3__c_1>:
    20a1:	41 54 2b 43 4e 54 50 3d 22 69 6e 2e 70 6f 6f 6c     AT+CNTP="in.pool
    20b1:	2e 6e 74 70 2e 6f 72 67 22 2c 32 32 00              .ntp.org",22.

000020be <_ZZ14Get_Local_TimevE3__c_0>:
    20be:	41 54 2b 43 54 5a 52 3d 31 00                       AT+CTZR=1.

000020c8 <_ZZ14Get_Local_TimevE3__c>:
    20c8:	41 54 2b 43 54 5a 55 3d 31 00                       AT+CTZU=1.

000020d2 <_ZZ16Display_Update_1vE3__c_25>:
    20d2:	20 20 50 55 4d 50 20 4f 46 46 20 20 00                PUMP OFF  .

000020df <_ZZ16Display_Update_1vE3__c_24>:
    20df:	20 20 20 50 55 4d 50 20 4f 4e 20 20 00                 PUMP ON  .

000020ec <_ZZ16Display_Update_1vE3__c_23>:
    20ec:	20 20 20 20 20 20 49 52 52 49 47 41 54 45 44 20           IRRIGATED 
    20fc:	20 20 20 20 00                                          .

00002101 <_ZZ16Display_Update_1vE3__c_22>:
    2101:	20 4e 4f 20 50 4c 4f 54 20 49 53 20 47 45 54 54      NO PLOT IS GETT
    2111:	49 4e 47 20 00                                      ING .

00002116 <_ZZ16Display_Update_1vE3__c_21>:
    2116:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2126:	20 20 20 20 00                                          .

0000212b <_ZZ16Display_Update_1vE3__c_20>:
    212b:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    213b:	20 20 20 20 00                                          .

00002140 <_ZZ16Display_Update_1vE3__c_19>:
    2140:	20 4e 4f 20 50 4c 4f 54 20 41 44 44 45 44 20 59      NO PLOT ADDED Y
    2150:	45 54 21 20 00                                      ET! .

00002155 <_ZZ16Display_Update_1vE3__c_18>:
    2155:	20 20 20 20 20 4d 41 4e 55 41 4c 20 4d 4f 44 45          MANUAL MODE
    2165:	20 20 20 20 00                                          .

0000216a <_ZZ16Display_Update_1vE3__c_17>:
    216a:	20 20 20 20 20 54 49 4d 45 52 20 4d 4f 44 45 20          TIMER MODE 
    217a:	20 20 20 20 00                                          .

0000217f <_ZZ16Display_Update_1vE3__c_16>:
    217f:	20 20 20 53 43 48 45 44 55 4c 45 52 20 4d 4f 44        SCHEDULER MOD
    218f:	45 20 20 20 00                                      E   .

00002194 <_ZZ16Display_Update_1vE3__c_15>:
    2194:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21a4:	20 20 20 20 00                                          .

000021a9 <_ZZ16Display_Update_1vE3__c_14>:
    21a9:	44 41 54 41 20 49 4e 49 54 49 41 4c 49 53 49 4e     DATA INITIALISIN
    21b9:	47 00                                               G.

000021bb <_ZZ16Display_Update_1vE3__c_13>:
    21bb:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21cb:	20 20 20 20 00                                          .

000021d0 <_ZZ16Display_Update_1vE3__c_12>:
    21d0:	20 20 20 20 20 20 54 48 41 4e 4b 20 59 4f 55 20           THANK YOU 
    21e0:	20 20 20 20 00                                          .

000021e5 <_ZZ16Display_Update_1vE3__c_11>:
    21e5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21f5:	20 20 20 20 00                                          .

000021fa <_ZZ16Display_Update_1vE3__c_10>:
    21fa:	43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 53 45 52     CONNECTED TO SER
    220a:	56 45 52 20 00                                      VER .

0000220f <_ZZ16Display_Update_1vE3__c_9>:
    220f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    221f:	20 20 20 20 00                                          .

00002224 <_ZZ16Display_Update_1vE3__c_8>:
    2224:	20 20 4e 45 54 57 4f 52 4b 20 53 45 4c 45 43 54       NETWORK SELECT
    2234:	45 44 20 20 00                                      ED  .

00002239 <_ZZ16Display_Update_1vE3__c_7>:
    2239:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2249:	20 20 20 20 00                                          .

0000224e <_ZZ16Display_Update_1vE3__c_6>:
    224e:	53 45 41 52 43 48 49 4e 47 20 46 4f 52 20 4e 45     SEARCHING FOR NE
    225e:	54 2e 2e 2e 00                                      T....

00002263 <_ZZ16Display_Update_1vE3__c_5>:
    2263:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2273:	20 20 20 20 00                                          .

00002278 <_ZZ16Display_Update_1vE3__c_4>:
    2278:	52 45 47 49 53 54 45 52 45 44 20 54 4f 20 53 45     REGISTERED TO SE
    2288:	52 56 45 52 00                                      RVER.

0000228d <_ZZ16Display_Update_1vE3__c_3>:
    228d:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    229d:	20 20 20 20 00                                          .

000022a2 <_ZZ16Display_Update_1vE3__c_2>:
    22a2:	20 20 20 20 20 52 45 47 49 53 54 45 52 49 4e 47          REGISTERING
    22b2:	20 20 20 20 00                                          .

000022b7 <_ZZ16Display_Update_1vE3__c_1>:
    22b7:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    22c7:	20 20 20 20 00                                          .

000022cc <_ZZ16Display_Update_1vE3__c_0>:
    22cc:	43 4f 4e 4e 45 43 54 49 4e 47 20 54 4f 20 53 45     CONNECTING TO SE
    22dc:	52 56 45 52 00                                      RVER.

000022e1 <_ZZ16Display_Update_1vE3__c>:
    22e1:	20 20 20 20 20 50 4c 45 41 53 45 20 57 41 49 54          PLEASE WAIT
    22f1:	20 20 20 20 00                                          .

000022f6 <_ZZ21Subscribed_data_checkvE3__c_0>:
    22f6:	54 4f 50 49 43 20 4d 41 54 43 48 00                 TOPIC MATCH.

00002302 <_ZZ21Subscribed_data_checkvE3__c>:
    2302:	65 6e 74 65 72 20 31 00                             enter 1.

0000230a <_ZZ17Is_MQTT_ConnectedvE3__c_1>:
    230a:	63 68 65 63 6b 20 6e 6f 74 20 43 6f 6e 6e 65 63     check not Connec
    231a:	74 65 64 20 74 6f 20 6d 71 74 74 00                 ted to mqtt.

00002326 <_ZZ17Is_MQTT_ConnectedvE3__c_0>:
    2326:	63 68 65 63 6b 20 43 6f 6e 6e 65 63 74 65 64 20     check Connected 
    2336:	74 6f 20 6d 71 74 74 00                             to mqtt.

0000233e <_ZZ17Is_MQTT_ConnectedvE3__c>:
    233e:	41 54 2b 43 4d 51 54 54 43 4f 4e 4e 45 43 54 3f     AT+CMQTTCONNECT?
	...

0000234f <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_1>:
    234f:	41 54 2b 43 4d 51 54 54 53 54 41 52 54 00           AT+CMQTTSTART.

0000235d <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_0>:
    235d:	41 54 2b 43 4d 51 54 54 52 45 4c 3d 30 00           AT+CMQTTREL=0.

0000236b <_ZZ12MQTT_ConnectPKcS0_S0_E3__c>:
    236b:	41 54 2b 43 4d 51 54 54 44 49 53 43 3d 30 2c 31     AT+CMQTTDISC=0,1
    237b:	32 30 00                                            20.

0000237e <_ZZ14MQTT_SUBSCRIBEPcE3__c>:
    237e:	53 55 42 20 53 55 43 43 45 53 53 00                 SUB SUCCESS.

0000238a <_ZZ12MQTT_PublishPhS_E3__c>:
    238a:	41 54 2b 43 46 55 4e 3d 31 00                       AT+CFUN=1.

00002394 <_ZZ12Gprs_ConnectPcE3__c>:
    2394:	21 21 21 21 21 53 55 43 43 45 53 53 46 55 4c 4c     !!!!!SUCCESSFULL
    23a4:	59 20 43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 47     Y CONNECTED TO G
    23b4:	50 52 53 21 21 21 21 21 00                          PRS!!!!!.

000023bd <_ZZ17Get_Operator_NamePcE3__c>:
    23bd:	41 54 2b 43 53 50 4e 3f 00                          AT+CSPN?.

000023c6 <_ZZ20Check_Gsm_ConnectionvE3__c_7>:
    23c6:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023d0 <_ZZ20Check_Gsm_ConnectionvE3__c_6>:
    23d0:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023db <_ZZ20Check_Gsm_ConnectionvE3__c_5>:
    23db:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023e5 <_ZZ20Check_Gsm_ConnectionvE3__c_4>:
    23e5:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023f0 <_ZZ20Check_Gsm_ConnectionvE3__c_3>:
    23f0:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000023f9 <_ZZ20Check_Gsm_ConnectionvE3__c_2>:
    23f9:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002403 <_ZZ20Check_Gsm_ConnectionvE3__c_1>:
    2403:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

0000240c <_ZZ20Check_Gsm_ConnectionvE3__c_0>:
    240c:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002416 <_ZZ20Check_Gsm_ConnectionvE3__c>:
    2416:	41 54 2b 43 4e 4d 50 3d 33 38 00                    AT+CNMP=38.

00002421 <_ZZ8Gsm_InitvE3__c_1>:
    2421:	41 54 2b 43 4d 45 45 3d 30 00                       AT+CMEE=0.

0000242b <_ZZ8Gsm_InitvE3__c_0>:
    242b:	41 54 2b 49 50 52 45 58 3d 39 36 30 30 00           AT+IPREX=9600.

00002439 <_ZZ8Gsm_InitvE3__c>:
    2439:	41 54 00                                            AT.

0000243c <_ZZ18_kGSM_SIG_STRENGTHvE3__c_0>:
    243c:	43 53 51 20 52 45 54 45 55 52 4e 20 30 20 00        CSQ RETEURN 0 .

0000244b <_ZZ18_kGSM_SIG_STRENGTHvE3__c>:
    244b:	41 54 2b 43 53 51 00                                AT+CSQ.

00002452 <_ZZ14Lora_Data_SendhE3__c_1>:
    2452:	53 45 4e 54 20 73 75 63 63 00                       SENT succ.

0000245c <_ZZ14Lora_Data_SendhE3__c_0>:
    245c:	53 45 4e 54 20 57 41 49 54 49 4e 47 00              SENT WAITING.

00002469 <_ZZ14Lora_Data_SendhE3__c>:
    2469:	6c 6f 72 61 20 64 61 74 61 20 73 65 6e 64 20 6c     lora data send l
    2479:	65 6e 20 3a 20 00                                   en : .

0000247f <_ZZ19Initialise_HardwarevE3__c_6>:
    247f:	47 53 4d 20 4e 4f 54 20 49 4e 49 54 49 41 54 45     GSM NOT INITIATE
    248f:	44 00                                               D.

00002491 <_ZZ19Initialise_HardwarevE3__c_5>:
    2491:	47 53 4d 20 49 4e 49 54 49 41 54 45 44 00           GSM INITIATED.

0000249f <_ZZ19Initialise_HardwarevE3__c_4>:
    249f:	4c 4f 52 41 20 4e 4f 54 20 49 4e 49 54 49 41 54     LORA NOT INITIAT
    24af:	45 44 00                                            ED.

000024b2 <_ZZ19Initialise_HardwarevE3__c_3>:
    24b2:	4c 4f 52 41 20 49 4e 49 54 49 41 54 45 44 00        LORA INITIATED.

000024c1 <_ZZ19Initialise_HardwarevE3__c_2>:
    24c1:	53 45 4e 53 45 20 49 54 20 4f 55 54 00              SENSE IT OUT.

000024ce <_ZZ19Initialise_HardwarevE3__c_1>:
    24ce:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24de:	20 20 20 20 00                                          .

000024e3 <_ZZ19Initialise_HardwarevE3__c_0>:
    24e3:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24f3:	20 20 20 20 00                                          .

000024f8 <_ZZ19Initialise_HardwarevE3__c>:
    24f8:	20 20 46 56 20 3a 20 53 4b 55 33 5f 31 2e 30 2e       FV : SKU3_1.0.
    2508:	30 2e 31 20 00                                      0.1 .

0000250d <_ZZ21Exra_Plot_Data_EEPROMhE3__c_2>:
    250d:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002519 <_ZZ21Exra_Plot_Data_EEPROMhE3__c_1>:
    2519:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    2529:	72 2e 3a 20 00                                      r.: .

0000252e <_ZZ21Exra_Plot_Data_EEPROMhE3__c_0>:
    252e:	64 61 74 61 20 73 61 76 69 6e 67 20 69 6e 20 65     data saving in e
    253e:	65 70 72 6f 6d 20 00                                eprom .

00002545 <_ZZ21Exra_Plot_Data_EEPROMhE3__c>:
    2545:	65 78 74 72 61 20 70 6c 6f 74 20 3a 20 00           extra plot : .

00002553 <_ZZ18Local_Time_SettingvE3__c_2>:
    2553:	63 68 65 63 6b 20 73 69 6d 20 6d 65 00              check sim me.

00002560 <_ZZ18Local_Time_SettingvE3__c_1>:
    2560:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

00002569 <_ZZ18Local_Time_SettingvE3__c_0>:
    2569:	41 54 45 30 00                                      ATE0.

0000256e <_ZZ18Local_Time_SettingvE3__c>:
    256e:	41 54 00                                            AT.

00002571 <_ZZ9Check_SimcE3__c_1>:
    2571:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

0000257a <_ZZ9Check_SimcE3__c_0>:
    257a:	41 54 45 30 00                                      ATE0.

0000257f <_ZZ9Check_SimcE3__c>:
    257f:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000258b <_ZZ14Faults_HandlervE3__c_5>:
    258b:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 00     Pump Line Fault.

0000259b <_ZZ14Faults_HandlervE3__c_4>:
    259b:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 20     Pump Line Fault 
	...

000025ac <_ZZ14Faults_HandlervE3__c_3>:
    25ac:	50 75 6d 70 20 44 72 79 20 52 75 6e 00              Pump Dry Run.

000025b9 <_ZZ14Faults_HandlervE3__c_2>:
    25b9:	50 75 6d 70 20 44 72 79 20 52 75 6e 20 00           Pump Dry Run .

000025c7 <_ZZ14Faults_HandlervE3__c_1>:
    25c7:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 00     Pump Overlaoded.

000025d7 <_ZZ14Faults_HandlervE3__c_0>:
    25d7:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 20     Pump Overlaoded 
	...

000025e8 <_ZZ14Faults_HandlervE3__c>:
    25e8:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 61     Wireless Pump Fa
    25f8:	75 6c 74 20 6f 63 75 75 72 65 2e 2e 2e 2e 2e 2e     ult ocuure......
    2608:	2e 2e 2e 2e 2e 2e 20 00                             ...... .

00002610 <_ZZ19Calibration_Of_PumpvE3__c>:
    2610:	50 75 6d 70 20 43 61 6c 69 62 72 61 74 69 6f 6e     Pump Calibration
    2620:	20 69 73 20 64 6f 6e 65 00                           is done.

00002629 <_ZZ11Read_EEPROMvE3__c_2>:
    2629:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002635 <_ZZ11Read_EEPROMvE3__c_1>:
    2635:	45 78 74 72 61 20 6e 6f 74 20 50 6c 6f 74 20 52     Extra not Plot R
    2645:	75 6e 20 54 69 6d 65 72 20 3a 20 00                 un Timer : .

00002651 <_ZZ11Read_EEPROMvE3__c_0>:
    2651:	45 78 74 72 61 20 50 6c 6f 74 20 52 75 6e 20 54     Extra Plot Run T
    2661:	69 6d 65 72 20 3a 20 00                             imer : .

00002669 <_ZZ11Read_EEPROMvE3__c>:
    2669:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    2679:	72 20 3a 20 00                                      r : .

0000267e <_ZZ20Param_InitializationvE3__c_3>:
    267e:	47 53 4d 20 41 4e 44 20 4d 51 54 54 20 57 49 4c     GSM AND MQTT WIL
    268e:	4c 20 4e 4f 54 20 57 4f 52 4b 00                    L NOT WORK.

00002699 <_ZZ20Param_InitializationvE3__c_2>:
    2699:	4e 4f 54 20 52 45 47 49 53 54 45 52 20 41 4e 44     NOT REGISTER AND
    26a9:	20 41 4c 53 4f 20 4d 4f 44 55 4c 45 20 4e 4f 54      ALSO MODULE NOT
    26b9:	20 57 4f 52 4b 2c 20 50 4c 45 41 53 45 20 43 48      WORK, PLEASE CH
    26c9:	45 43 4b 20 54 48 45 20 4d 4f 44 55 4c 45 20 41     ECK THE MODULE A
    26d9:	4e 44 20 52 45 53 54 41 52 54 20 54 48 45 20 44     ND RESTART THE D
    26e9:	45 56 49 43 45 00                                   EVICE.

000026ef <_ZZ20Param_InitializationvE3__c_1>:
    26ef:	50 6c 65 61 73 65 20 49 6e 73 65 72 74 20 53 69     Please Insert Si
    26ff:	6d 20 43 61 72 64 00                                m Card.

00002706 <_ZZ20Param_InitializationvE3__c_0>:
    2706:	52 75 62 6c 65 20 69 73 20 6e 6f 74 20 52 65 67     Ruble is not Reg
    2716:	69 73 74 65 72 65 64 20 54 6f 20 53 65 76 65 72     istered To Sever
	...

00002727 <_ZZ20Param_InitializationvE3__c>:
    2727:	52 75 62 6c 65 20 69 73 20 61 6c 72 65 61 64 79     Ruble is already
    2737:	20 52 65 67 69 73 74 65 72 65 64 20 54 6f 20 53      Registered To S
    2747:	65 76 65 72 00                                      ever.

0000274c <_ZZ21Subscribe_MQTT_TopicsvE3__c>:
    274c:	5f 73 53 75 62 73 63 72 69 62 65 5f 54 6f 70 69     _sSubscribe_Topi
    275c:	63 2e 52 75 62 6c 65 5f 45 75 72 6f 5f 56 61 6c     c.Ruble_Euro_Val
    276c:	76 65 5f 53 65 74 20 66 61 69 6c 00                 ve_Set fail.

00002778 <_ZZ14Ping_to_ServervE3__c_10>:
    2778:	41 54 45 30 00                                      ATE0.

0000277d <_ZZ14Ping_to_ServervE3__c_9>:
    277d:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00002789 <_ZZ14Ping_to_ServervE3__c_8>:
    2789:	46 61 69 6c 20 54 6f 20 63 6f 6e 6e 65 63 74 20     Fail To connect 
    2799:	74 68 65 20 73 65 72 76 65 72 00                    the server.

000027a4 <_ZZ14Ping_to_ServervE3__c_7>:
    27a4:	61 6c 6c 20 74 6f 70 69 63 20 6e 6f 74 20 73 75     all topic not su
    27b4:	62 73 63 72 69 62 65 64 00                          bscribed.

000027bd <_ZZ14Ping_to_ServervE3__c_6>:
    27bd:	61 6c 6c 20 74 6f 70 69 63 20 73 75 62 73 63 72     all topic subscr
    27cd:	69 62 65 64 00                                      ibed.

000027d2 <_ZZ14Ping_to_ServervE3__c_5>:
    27d2:	43 6f 6e 6e 65 63 74 65 64 20 54 6f 20 73 65 72     Connected To ser
    27e2:	76 65 72 00                                         ver.

000027e6 <_ZZ14Ping_to_ServervE3__c_4>:
    27e6:	54 72 79 20 74 6f 20 63 6f 6e 6e 65 63 74 20 74     Try to connect t
    27f6:	68 65 20 73 65 72 76 65 72 00                       he server.

00002800 <_ZZ14Ping_to_ServervE3__c_3>:
    2800:	41 54 2b 51 4d 54 43 4c 4f 53 45 20 4e 4f 54 20     AT+QMTCLOSE NOT 
    2810:	43 4c 4f 53 45 20 00                                CLOSE .

00002817 <_ZZ14Ping_to_ServervE3__c_2>:
    2817:	41 54 2b 51 4d 54 43 4c 4f 53 45 00                 AT+QMTCLOSE.

00002823 <_ZZ14Ping_to_ServervE3__c_1>:
    2823:	41 54 2b 51 4d 54 43 4c 4f 53 45 3d 30 00           AT+QMTCLOSE=0.

00002831 <_ZZ14Ping_to_ServervE3__c_0>:
    2831:	53 69 6d 20 69 73 20 6e 6f 74 20 74 68 65 72 65     Sim is not there
	...

00002842 <_ZZ14Ping_to_ServervE3__c>:
    2842:	41 54 45 30 00                                      ATE0.

00002847 <_ZZ11Init_BrokervE3__c_4>:
    2847:	52 75 62 6c 65 20 63 6f 6e 74 72 6f 6c 6c 65 72     Ruble controller
    2857:	20 69 73 20 72 65 67 69 73 74 65 72 65 64 00         is registered.

00002866 <_ZZ11Init_BrokervE3__c_3>:
    2866:	77 61 69 74 20 72 65 67 69 73 74 65 72 69 6e 67     wait registering
    2876:	20 73 74 61 74 75 73 20 3a 20 00                     status : .

00002881 <_ZZ11Init_BrokervE3__c_2>:
    2881:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    2891:	76 65 72 00                                         ver.

00002895 <_ZZ11Init_BrokervE3__c_1>:
    2895:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 00        Ping to server.

000028a4 <_ZZ11Init_BrokervE3__c_0>:
    28a4:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    28b4:	76 65 72 20 30 00                                   ver 0.

000028ba <_ZZ11Init_BrokervE3__c>:
    28ba:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 20 30     Ping to server 0
	...

000028cb <_ZZ4mainE3__c_0>:
    28cb:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    28db:	3a 20 00                                            : .

000028de <_ZZ4mainE3__c>:
    28de:	4e 4f 4d 49 4e 41 4c 20 43 55 52 52 45 4e 54 20     NOMINAL CURRENT 
    28ee:	3a 20 00                                            : .

000028f1 <_ZZ24Pump_Status_List_MonitorvE3__c>:
    28f1:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2901:	72 20 35 35 35 35 35 35 35 35 35 35 35 35 35 35     r 55555555555555
    2911:	35 35 35 35 35 35 35 35 00                          55555555.

0000291a <_ZZ24Plot_Status_List_MonitorvE3__c_11>:
    291a:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    292a:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002939 <_ZZ24Plot_Status_List_MonitorvE3__c_10>:
    2939:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2949:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2959:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2969:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002974 <_ZZ24Plot_Status_List_MonitorvE3__c_9>:
    2974:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2984:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2994:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    29a4:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

000029af <_ZZ24Plot_Status_List_MonitorvE3__c_8>:
    29af:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29bf:	69 6c 00                                            il.

000029c2 <_ZZ24Plot_Status_List_MonitorvE3__c_7>:
    29c2:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    29d2:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    29e2:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000029ed <_ZZ24Plot_Status_List_MonitorvE3__c_6>:
    29ed:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    29fd:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002a0b <_ZZ24Plot_Status_List_MonitorvE3__c_5>:
    2a0b:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2a1b:	74 61 20 3a 20 00                                   ta : .

00002a21 <_ZZ24Plot_Status_List_MonitorvE3__c_4>:
    2a21:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2a31:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2a41:	65 20 31 00                                         e 1.

00002a45 <_ZZ24Plot_Status_List_MonitorvE3__c_3>:
    2a45:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2a55:	6d 62 65 72 20 00                                   mber .

00002a5b <_ZZ24Plot_Status_List_MonitorvE3__c_2>:
    2a5b:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2a6b:	6f 2e 20 00                                         o. .

00002a6f <_ZZ24Plot_Status_List_MonitorvE3__c_1>:
    2a6f:	6c 61 73 74 20 70 6c 6f 74 20 6e 6f 20 3a 20 00     last plot no : .

00002a7f <_ZZ24Plot_Status_List_MonitorvE3__c_0>:
    2a7f:	20 00                                                .

00002a81 <_ZZ24Plot_Status_List_MonitorvE3__c>:
    2a81:	6c 61 73 74 20 70 6c 6f 74 20 76 76 61 6c 76 65     last plot vvalve
    2a91:	20 6c 69 73 74 20 3a 20 00                           list : .

00002a9a <_ZZ20Wireless_Pump_On_OffhhE3__c_21>:
    2a9a:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2aaa:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002ab8 <_ZZ20Wireless_Pump_On_OffhhE3__c_20>:
    2ab8:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2ac8:	20 64 61 74 61 20 3a 20 00                           data : .

00002ad1 <_ZZ20Wireless_Pump_On_OffhhE3__c_19>:
    2ad1:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2ae1:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2af1:	50 75 6d 70 20 31 00                                Pump 1.

00002af8 <_ZZ20Wireless_Pump_On_OffhhE3__c_18>:
    2af8:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2b08:	2e 20 00                                            . .

00002b0b <_ZZ20Wireless_Pump_On_OffhhE3__c_14>:
    2b0b:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b1b:	61 69 6c 61 62 6c 65 20 37 3a 20 00                 ailable 7: .

00002b27 <_ZZ20Wireless_Pump_On_OffhhE3__c_13>:
    2b27:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b37:	61 69 6c 61 62 6c 65 20 36 3a 20 00                 ailable 6: .

00002b43 <_ZZ20Wireless_Pump_On_OffhhE3__c_12>:
    2b43:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2b53:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002b5f <_ZZ20Wireless_Pump_On_OffhhE3__c_11>:
    2b5f:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2b6f:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002b7d <_ZZ20Wireless_Pump_On_OffhhE3__c_10>:
    2b7d:	5f 65 50 55 4d 50 5f 4f 46 46 00                    _ePUMP_OFF.

00002b88 <_ZZ20Wireless_Pump_On_OffhhE3__c_9>:
    2b88:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2b98:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002ba4 <_ZZ20Wireless_Pump_On_OffhhE3__c_8>:
    2ba4:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2bb4:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002bc2 <_ZZ20Wireless_Pump_On_OffhhE3__c_7>:
    2bc2:	5f 65 50 55 4d 50 5f 4f 4e 00                       _ePUMP_ON.

00002bcc <_ZZ20Wireless_Pump_On_OffhhE3__c_6>:
    2bcc:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2bdc:	61 69 6c 61 62 6c 65 20 34 3a 20 00                 ailable 4: .

00002be8 <_ZZ20Wireless_Pump_On_OffhhE3__c_5>:
    2be8:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2bf8:	61 69 6c 61 62 6c 65 20 34 2e 31 3a 20 00           ailable 4.1: .

00002c06 <_ZZ20Wireless_Pump_On_OffhhE3__c_4>:
    2c06:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2c16:	69 74 68 20 70 75 6d 70 20 77 68 69 63 68 20 69     ith pump which i
    2c26:	73 20 72 65 70 6c 69 65 64 20 34 00                 s replied 4.

00002c32 <_ZZ20Wireless_Pump_On_OffhhE3__c_3>:
    2c32:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 76 61     wireless pump va
    2c42:	6c 76 65 20 49 44 20 77 68 69 63 68 20 69 73 20     lve ID which is 
    2c52:	53 65 6e 74 20 3a 00                                Sent :.

00002c59 <_ZZ20Wireless_Pump_On_OffhhE3__c_2>:
    2c59:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2c69:	20 64 61 74 61 20 3a 20 00                           data : .

00002c72 <_ZZ20Wireless_Pump_On_OffhhE3__c_1>:
    2c72:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c82:	61 69 6c 61 62 6c 65 20 31 3a 20 00                 ailable 1: .

00002c8e <_ZZ20Wireless_Pump_On_OffhhE3__c_0>:
    2c8e:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2c9e:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2cae:	50 75 6d 70 20 31 00                                Pump 1.

00002cb5 <_ZZ20Wireless_Pump_On_OffhhE3__c>:
    2cb5:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2cc5:	2e 20 00                                            . .

00002cc8 <_ZZ20Handle_Wireless_PumpvE3__c_0>:
    2cc8:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2cd8:	72 20 34 34 34 34 34 34 34 34 34 34 34 34 34 34     r 44444444444444
    2ce8:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 00        44444444444444.

00002cf7 <_ZZ20Handle_Wireless_PumpvE3__c>:
    2cf7:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d07:	72 20 33 33 33 33 33 33 33 33 33 33 33 33 33 33     r 33333333333333
    2d17:	33 33 33 33 33 33 33 33 33 33 00                    3333333333.

00002d22 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_11>:
    2d22:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2d32:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002d41 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_10>:
    2d41:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2d51:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2d61:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2d71:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002d7c <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_9>:
    2d7c:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2d8c:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2d9c:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2dac:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002db7 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_8>:
    2db7:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2dc7:	69 6c 00                                            il.

00002dca <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_7>:
    2dca:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2dda:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2dea:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002df5 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_6>:
    2df5:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2e05:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002e13 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_5>:
    2e13:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2e23:	74 61 20 3a 20 00                                   ta : .

00002e29 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_4>:
    2e29:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2e39:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2e49:	65 20 31 00                                         e 1.

00002e4d <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_3>:
    2e4d:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2e5d:	6d 62 65 72 20 00                                   mber .

00002e63 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_2>:
    2e63:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2e73:	6f 2e 20 00                                         o. .

00002e77 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_1>:
    2e77:	49 72 72 69 67 61 74 69 6e 67 20 45 78 74 72 61     Irrigating Extra
    2e87:	20 70 6c 6f 74 20 6e 6f 20 3a 20 00                  plot no : .

00002e93 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_0>:
    2e93:	20 00                                                .

00002e95 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c>:
    2e95:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00002ea3 <_ZZ25Stop_Extra_Plot_OperationhE3__c_4>:
    2ea3:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     Extra plot fails
    2eb3:	20 74 6f 20 53 74 6f 70 00                           to Stop.

00002ebc <_ZZ25Stop_Extra_Plot_OperationhE3__c_3>:
    2ebc:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
	...

00002ecd <_ZZ25Stop_Extra_Plot_OperationhE3__c_2>:
    2ecd:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 20     Extra plot fail 
    2edd:	74 6f 20 53 74 6f 70 73 20 66 6f 67 67 65 72 20     to Stops fogger 
    2eed:	62 61 63 6b 20 75 70 00                             back up.

00002ef5 <_ZZ25Stop_Extra_Plot_OperationhE3__c_1>:
    2ef5:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
    2f05:	20 66 6f 67 67 65 72 20 62 61 63 6b 20 75 70 00      fogger back up.

00002f15 <_ZZ25Stop_Extra_Plot_OperationhE3__c_0>:
    2f15:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f25:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34     4444444444444444
    2f35:	34 34 34 34 34 00                                   44444.

00002f3b <_ZZ25Stop_Extra_Plot_OperationhE3__c>:
    2f3b:	54 72 79 20 74 6f 20 73 74 6f 70 20 45 78 74 72     Try to stop Extr
    2f4b:	61 00                                               a.

00002f4d <_ZZ26Start_Extra_Plot_OperationhE3__c_2>:
    2f4d:	65 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     extra plot fails
    2f5d:	20 74 6f 20 6f 6e 00                                 to on.

00002f64 <_ZZ26Start_Extra_Plot_OperationhE3__c_1>:
    2f64:	45 78 74 72 61 20 50 6c 6f 74 20 4f 4e 00           Extra Plot ON.

00002f72 <_ZZ26Start_Extra_Plot_OperationhE3__c_0>:
    2f72:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f82:	33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33     3333333333333333
    2f92:	33 33 33 33 00                                      3333.

00002f97 <_ZZ26Start_Extra_Plot_OperationhE3__c>:
    2f97:	54 72 79 20 74 6f 20 53 74 61 72 74 20 65 78 74     Try to Start ext
    2fa7:	72 61 20 70 6c 6f 74 00                             ra plot.

00002faf <_ZZ24Run_Extra_Plot_OperationvE3__c>:
    2faf:	66 6f 67 67 65 72 3a 20 66 61 75 6c 74 20 6f 63     fogger: fault oc
    2fbf:	63 75 72 65 00                                      cure.

00002fc4 <_ZZ12Publish_DatavE3__c_78>:
    2fc4:	70 6c 6f 74 00                                      plot.

00002fc9 <_ZZ12Publish_DatavE3__c_77>:
    2fc9:	74 69 6d 65 00                                      time.

00002fce <_ZZ12Publish_DatavE3__c_76>:
    2fce:	70 6c 6f 74 00                                      plot.

00002fd3 <_ZZ12Publish_DatavE3__c_75>:
    2fd3:	74 69 6d 65 00                                      time.

00002fd8 <_ZZ12Publish_DatavE3__c_74>:
    2fd8:	6d 65 64 69 75 6d 00                                medium.

00002fdf <_ZZ12Publish_DatavE3__c_73>:
    2fdf:	70 53 74 61 74 75 73 00                             pStatus.

00002fe7 <_ZZ12Publish_DatavE3__c_72>:
    2fe7:	70 53 74 61 74 75 73 00                             pStatus.

00002fef <_ZZ12Publish_DatavE3__c_71>:
    2fef:	70 53 74 61 74 75 73 00                             pStatus.

00002ff7 <_ZZ12Publish_DatavE3__c_70>:
    2ff7:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3007:	20 46 62 20 72 65 73 65 6e 64 20 00                  Fb resend .

00003013 <_ZZ12Publish_DatavE3__c_69>:
    3013:	73 74 61 74 75 73 00                                status.

0000301a <_ZZ12Publish_DatavE3__c_68>:
    301a:	73 74 61 74 75 73 00                                status.

00003021 <_ZZ12Publish_DatavE3__c_67>:
    3021:	73 74 61 74 75 73 00                                status.

00003028 <_ZZ12Publish_DatavE3__c_66>:
    3028:	73 74 61 74 75 73 00                                status.

0000302f <_ZZ12Publish_DatavE3__c_65>:
    302f:	73 74 61 74 75 73 00                                status.

00003036 <_ZZ12Publish_DatavE3__c_64>:
    3036:	73 74 61 74 75 73 00                                status.

0000303d <_ZZ12Publish_DatavE3__c_63>:
    303d:	70 4e 6f 00                                         pNo.

00003041 <_ZZ12Publish_DatavE3__c_62>:
    3041:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    3051:	63 6b 20 72 65 73 65 6e 64 20 00                    ck resend .

0000305c <_ZZ12Publish_DatavE3__c_61>:
    305c:	74 68 72 65 65 5f 70 68 61 73 65 00                 three_phase.

00003068 <_ZZ12Publish_DatavE3__c_60>:
    3068:	70 75 6d 70 5f 6e 75 6d 00                          pump_num.

00003071 <_ZZ12Publish_DatavE3__c_59>:
    3071:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

00003080 <_ZZ12Publish_DatavE3__c_58>:
    3080:	73 63 5f 69 6e 64 65 78 00                          sc_index.

00003089 <_ZZ12Publish_DatavE3__c_57>:
    3089:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

00003098 <_ZZ12Publish_DatavE3__c_56>:
    3098:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030a1 <_ZZ12Publish_DatavE3__c_55>:
    30a1:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030b0 <_ZZ12Publish_DatavE3__c_54>:
    30b0:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030b9 <_ZZ12Publish_DatavE3__c_53>:
    30b9:	70 6c 6f 74 00                                      plot.

000030be <_ZZ12Publish_DatavE3__c_52>:
    30be:	70 6c 6f 74 00                                      plot.

000030c3 <_ZZ12Publish_DatavE3__c_51>:
    30c3:	63 75 72 72 65 6e 74 54 72 61 6e 73 66 6f 72 6d     currentTransform
    30d3:	65 72 00                                            er.

000030d6 <_ZZ12Publish_DatavE3__c_50>:
    30d6:	6d 6f 64 65 00                                      mode.

000030db <_ZZ12Publish_DatavE3__c_49>:
    30db:	70 53 74 61 74 75 73 00                             pStatus.

000030e3 <_ZZ12Publish_DatavE3__c_48>:
    30e3:	70 53 74 61 74 75 73 00                             pStatus.

000030eb <_ZZ12Publish_DatavE3__c_47>:
    30eb:	70 53 74 61 74 75 73 00                             pStatus.

000030f3 <_ZZ12Publish_DatavE3__c_46>:
    30f3:	73 74 61 74 75 73 00                                status.

000030fa <_ZZ12Publish_DatavE3__c_45>:
    30fa:	73 74 61 74 75 73 00                                status.

00003101 <_ZZ12Publish_DatavE3__c_44>:
    3101:	73 74 61 74 75 73 00                                status.

00003108 <_ZZ12Publish_DatavE3__c_43>:
    3108:	73 74 61 74 75 73 00                                status.

0000310f <_ZZ12Publish_DatavE3__c_42>:
    310f:	73 74 61 74 75 73 00                                status.

00003116 <_ZZ12Publish_DatavE3__c_41>:
    3116:	6f 6e 65 20 74 6f 75 63 68 20 6f 6e 2e 2e 2e 2e     one touch on....
    3126:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3136:	2e 00                                               ..

00003138 <_ZZ12Publish_DatavE3__c_40>:
    3138:	73 74 61 74 75 73 00                                status.

0000313f <_ZZ12Publish_DatavE3__c_39>:
    313f:	6f 6e 65 20 74 6f 75 63 68 20 6f 66 66 2e 2e 2e     one touch off...
    314f:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

00003160 <_ZZ12Publish_DatavE3__c_38>:
    3160:	70 4e 6f 00                                         pNo.

00003164 <_ZZ12Publish_DatavE3__c_37>:
    3164:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    3174:	63 6b 00                                            ck.

00003177 <_ZZ12Publish_DatavE3__c_36>:
    3177:	70 6c 6f 74 00                                      plot.

0000317c <_ZZ12Publish_DatavE3__c_35>:
    317c:	74 69 6d 65 00                                      time.

00003181 <_ZZ12Publish_DatavE3__c_34>:
    3181:	70 6c 6f 74 00                                      plot.

00003186 <_ZZ12Publish_DatavE3__c_33>:
    3186:	74 69 6d 65 00                                      time.

0000318b <_ZZ12Publish_DatavE3__c_32>:
    318b:	6d 65 64 69 75 6d 00                                medium.

00003192 <_ZZ12Publish_DatavE3__c_31>:
    3192:	70 53 74 61 74 75 73 00                             pStatus.

0000319a <_ZZ12Publish_DatavE3__c_30>:
    319a:	70 53 74 61 74 75 73 00                             pStatus.

000031a2 <_ZZ12Publish_DatavE3__c_29>:
    31a2:	70 53 74 61 74 75 73 00                             pStatus.

000031aa <_ZZ12Publish_DatavE3__c_28>:
    31aa:	70 53 74 61 74 75 73 00                             pStatus.

000031b2 <_ZZ12Publish_DatavE3__c_27>:
    31b2:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    31c2:	20 46 62 00                                          Fb.

000031c6 <_ZZ12Publish_DatavE3__c_26>:
    31c6:	63 6f 64 65 73 00                                   codes.

000031cc <_ZZ12Publish_DatavE3__c_25>:
    31cc:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    31dc:	5f 44 41 54 41 00                                   _DATA.

000031e2 <_ZZ12Publish_DatavE3__c_24>:
    31e2:	76 61 6c 76 65 4f 70 65 6e 00                       valveOpen.

000031ec <_ZZ12Publish_DatavE3__c_23>:
    31ec:	76 42 61 74 00                                      vBat.

000031f1 <_ZZ12Publish_DatavE3__c_22>:
    31f1:	76 61 6c 76 65 53 74 61 74 75 73 00                 valveStatus.

000031fd <_ZZ12Publish_DatavE3__c_21>:
    31fd:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    320d:	5f 44 41 54 41 00                                   _DATA.

00003213 <_ZZ12Publish_DatavE3__c_20>:
    3213:	76 42 61 74 00                                      vBat.

00003218 <_ZZ12Publish_DatavE3__c_19>:
    3218:	6c 69 67 68 74 00                                   light.

0000321e <_ZZ12Publish_DatavE3__c_18>:
    321e:	68 75 6d 69 64 69 74 79 00                          humidity.

00003227 <_ZZ12Publish_DatavE3__c_17>:
    3227:	74 65 6d 70 65 72 61 74 75 72 65 00                 temperature.

00003233 <_ZZ12Publish_DatavE3__c_16>:
    3233:	73 6f 69 6c 5f 74 65 6d 70 00                       soil_temp.

0000323d <_ZZ12Publish_DatavE3__c_15>:
    323d:	73 6d 34 00                                         sm4.

00003241 <_ZZ12Publish_DatavE3__c_14>:
    3241:	73 6d 33 00                                         sm3.

00003245 <_ZZ12Publish_DatavE3__c_13>:
    3245:	73 6d 32 00                                         sm2.

00003249 <_ZZ12Publish_DatavE3__c_12>:
    3249:	73 6d 31 00                                         sm1.

0000324d <_ZZ12Publish_DatavE3__c_11>:
    324d:	70 61 63 6b 65 74 5f 69 64 00                       packet_id.

00003257 <_ZZ12Publish_DatavE3__c_10>:
    3257:	5f 65 50 55 42 5f 4c 49 52 41 5f 4e 4f 44 45 5f     _ePUB_LIRA_NODE_
    3267:	44 41 54 41 00                                      DATA.

0000326c <_ZZ12Publish_DatavE3__c_9>:
    326c:	63 6f 64 65 73 00                                   codes.

00003272 <_ZZ12Publish_DatavE3__c_8>:
    3272:	70 6c 6f 74 00                                      plot.

00003277 <_ZZ12Publish_DatavE3__c_7>:
    3277:	70 6c 6f 74 00                                      plot.

0000327c <_ZZ12Publish_DatavE3__c_6>:
    327c:	74 69 6d 65 00                                      time.

00003281 <_ZZ12Publish_DatavE3__c_5>:
    3281:	74 69 6d 65 00                                      time.

00003286 <_ZZ12Publish_DatavE3__c_4>:
    3286:	6d 65 64 69 75 6d 00                                medium.

0000328d <_ZZ12Publish_DatavE3__c_3>:
    328d:	70 53 74 61 74 75 73 00                             pStatus.

00003295 <_ZZ12Publish_DatavE3__c_2>:
    3295:	5f 65 50 55 42 5f 54 49 4d 45 52 5f 46 45 45 44     _ePUB_TIMER_FEED
    32a5:	42 41 43 4b 00                                      BACK.

000032aa <_ZZ12Publish_DatavE3__c_1>:
    32aa:	74 65 73 74 00                                      test.

000032af <_ZZ12Publish_DatavE3__c_0>:
    32af:	74 65 73 74 00                                      test.

000032b4 <_ZZ12Publish_DatavE3__c>:
    32b4:	63 6f 64 65 73 00                                   codes.

000032ba <_ZZ12Pub_Sub_DataPcPhjhE3__c_123>:
    32ba:	70 6c 6f 74 20 6d 61 74 63 68 2e 2e 2e 2e 2e 2e     plot match......
    32ca:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    32da:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    32ea:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

000032fb <_ZZ12Pub_Sub_DataPcPhjhE3__c_122>:
    32fb:	73 74 61 74 75 73 00                                status.

00003302 <_ZZ12Pub_Sub_DataPcPhjhE3__c_121>:
    3302:	70 4e 6f 00                                         pNo.

00003306 <_ZZ12Pub_Sub_DataPcPhjhE3__c_120>:
    3306:	43 61 6c 69 62 72 61 74 69 6f 6e 20 6f 76 65 72     Calibration over
    3316:	20 72 75 6c 65 64 00                                 ruled.

0000331d <_ZZ12Pub_Sub_DataPcPhjhE3__c_119>:
    331d:	43 61 6c 69 62 72 61 74 69 6f 6e 20 74 6f 70 69     Calibration topi
    332d:	63 20 67 65 74 20 66 72 6f 6d 20 73 65 72 76 65     c get from serve
    333d:	72 00                                               r.

0000333f <_ZZ12Pub_Sub_DataPcPhjhE3__c_118>:
    333f:	43 61 6c 69 62 72 61 74 69 6f 6e 00                 Calibration.

0000334b <_ZZ12Pub_Sub_DataPcPhjhE3__c_117>:
    334b:	53 43 20 53 54 41 52 54 20 46 52 4f 4d 20 3a 20     SC START FROM : 
	...

0000335c <_ZZ12Pub_Sub_DataPcPhjhE3__c_116>:
    335c:	54 41 4e 4b 20 44 75 72 61 74 69 6f 6e 3a 20 00     TANK Duration: .

0000336c <_ZZ12Pub_Sub_DataPcPhjhE3__c_115>:
    336c:	54 41 4e 4b 20 6f 6e 20 61 66 74 65 72 3a 20 00     TANK on after: .

0000337c <_ZZ12Pub_Sub_DataPcPhjhE3__c_114>:
    337c:	54 41 4e 4b 20 4e 4f 3a 20 00                       TANK NO: .

00003386 <_ZZ12Pub_Sub_DataPcPhjhE3__c_113>:
    3386:	54 41 4e 4b 20 53 54 41 54 3a 20 00                 TANK STAT: .

00003392 <_ZZ12Pub_Sub_DataPcPhjhE3__c_112>:
    3392:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

0000339c <_ZZ12Pub_Sub_DataPcPhjhE3__c_111>:
    339c:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    33ac:	20 00                                                .

000033ae <_ZZ12Pub_Sub_DataPcPhjhE3__c_110>:
    33ae:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

000033b9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_109>:
    33b9:	54 6e 4f 66 00                                      TnOf.

000033be <_ZZ12Pub_Sub_DataPcPhjhE3__c_108>:
    33be:	54 6e 4f 6e 00                                      TnOn.

000033c3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_107>:
    33c3:	54 6e 4e 6f 00                                      TnNo.

000033c8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_106>:
    33c8:	54 6e 53 74 00                                      TnSt.

000033cd <_ZZ12Pub_Sub_DataPcPhjhE3__c_105>:
    33cd:	47 65 74 20 54 61 6e 6b 5f 53 63 68 65 64 75 6c     Get Tank_Schedul
    33dd:	65 20 66 72 6f 6d 20 53 65 72 76 65 72 00           e from Server.

000033eb <_ZZ12Pub_Sub_DataPcPhjhE3__c_104>:
    33eb:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

000033f6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_103>:
    33f6:	53 63 53 74 61 74 00                                ScStat.

000033fd <_ZZ12Pub_Sub_DataPcPhjhE3__c_102>:
    33fd:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    340d:	20 00                                                .

0000340f <_ZZ12Pub_Sub_DataPcPhjhE3__c_101>:
    340f:	53 63 4f 6e 00                                      ScOn.

00003414 <_ZZ12Pub_Sub_DataPcPhjhE3__c_100>:
    3414:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

0000341e <_ZZ12Pub_Sub_DataPcPhjhE3__c_99>:
    341e:	53 63 4e 75 6d 00                                   ScNum.

00003424 <_ZZ12Pub_Sub_DataPcPhjhE3__c_98>:
    3424:	53 63 4f 66 66 00                                   ScOff.

0000342a <_ZZ12Pub_Sub_DataPcPhjhE3__c_97>:
    342a:	53 63 4f 6e 00                                      ScOn.

0000342f <_ZZ12Pub_Sub_DataPcPhjhE3__c_96>:
    342f:	53 65 6e 00                                         Sen.

00003433 <_ZZ12Pub_Sub_DataPcPhjhE3__c_95>:
    3433:	53 63 68 65 64 75 6c 65 20 74 6f 70 69 63 20 67     Schedule topic g
    3443:	65 74 20 66 72 6f 6d 20 73 65 72 76 65 72 20 3a     et from server :
    3453:	20 00                                                .

00003455 <_ZZ12Pub_Sub_DataPcPhjhE3__c_94>:
    3455:	73 6d 73 20 61 6c 65 72 74 20 6f 66 66 00           sms alert off.

00003463 <_ZZ12Pub_Sub_DataPcPhjhE3__c_93>:
    3463:	73 6d 73 20 61 6c 65 72 74 20 6f 6e 00              sms alert on.

00003470 <_ZZ12Pub_Sub_DataPcPhjhE3__c_92>:
    3470:	73 6d 73 00                                         sms.

00003474 <_ZZ12Pub_Sub_DataPcPhjhE3__c_91>:
    3474:	64 65 76 69 63 65 4e 75 6d 62 65 72 00              deviceNumber.

00003481 <_ZZ12Pub_Sub_DataPcPhjhE3__c_90>:
    3481:	66 61 72 6d 65 72 4e 75 6d 62 65 72 00              farmerNumber.

0000348e <_ZZ12Pub_Sub_DataPcPhjhE3__c_89>:
    348e:	66 6f 72 63 65 20 73 74 6f 70 20 72 65 73 75 6d     force stop resum
    349e:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

000034a9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_88>:
    34a9:	66 6f 72 63 65 20 73 74 6f 70 20 74 6f 70 69 63     force stop topic
    34b9:	20 3a 20 00                                          : .

000034bd <_ZZ12Pub_Sub_DataPcPhjhE3__c_87>:
    34bd:	72 65 73 75 6d 65 20 73 63 68 65 64 75 6c 65 20     resume schedule 
    34cd:	74 6f 70 69 63 20 3a 20 00                          topic : .

000034d6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_86>:
    34d6:	70 61 75 73 65 20 73 63 68 65 64 75 6c 65 20 74     pause schedule t
    34e6:	6f 70 69 63 20 3a 20 00                             opic : .

000034ee <_ZZ12Pub_Sub_DataPcPhjhE3__c_85>:
    34ee:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

000034f7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_84>:
    34f7:	65 78 74 72 61 20 70 6c 6f 74 20 64 65 6c 65 74     extra plot delet
    3507:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003512 <_ZZ12Pub_Sub_DataPcPhjhE3__c_83>:
    3512:	53 43 48 45 44 5f 4e 55 4d 00                       SCHED_NUM.

0000351c <_ZZ12Pub_Sub_DataPcPhjhE3__c_82>:
    351c:	73 63 68 65 64 75 6c 65 20 70 6c 6f 74 20 64 65     schedule plot de
    352c:	6c 65 74 65 20 74 6f 70 69 63 20 3a 20 00           lete topic : .

0000353a <_ZZ12Pub_Sub_DataPcPhjhE3__c_81>:
    353a:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

00003543 <_ZZ12Pub_Sub_DataPcPhjhE3__c_80>:
    3543:	70 6c 6f 74 20 64 65 6c 65 74 65 20 74 6f 70 69     plot delete topi
    3553:	63 20 3a 20 00                                      c : .

00003558 <_ZZ12Pub_Sub_DataPcPhjhE3__c_79>:
    3558:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

00003563 <_ZZ12Pub_Sub_DataPcPhjhE3__c_78>:
    3563:	56 41 4c 56 45 20 64 65 6c 65 74 65 20 66 72 6f     VALVE delete fro
    3573:	6d 20 50 6c 6f 74 20 6e 6f 2e 3a 20 00              m Plot no.: .

00003580 <_ZZ12Pub_Sub_DataPcPhjhE3__c_77>:
    3580:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

0000358b <_ZZ12Pub_Sub_DataPcPhjhE3__c_76>:
    358b:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

00003596 <_ZZ12Pub_Sub_DataPcPhjhE3__c_75>:
    3596:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    35a6:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

000035b1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_74>:
    35b1:	76 49 64 00                                         vId.

000035b5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_73>:
    35b5:	76 61 6c 76 65 20 64 65 6c 65 74 65 20 74 6f 70     valve delete top
    35c5:	69 63 20 3a 20 00                                   ic : .

000035cb <_ZZ12Pub_Sub_DataPcPhjhE3__c_72>:
    35cb:	63 6f 64 65 00                                      code.

000035d0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_71>:
    35d0:	70 6c 6f 74 20 73 65 6c 20 3a 20 00                 plot sel : .

000035dc <_ZZ12Pub_Sub_DataPcPhjhE3__c_70>:
    35dc:	6d 61 78 20 3a 20 00                                max : .

000035e3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_69>:
    35e3:	6d 69 6e 20 3a 20 00                                min : .

000035ea <_ZZ12Pub_Sub_DataPcPhjhE3__c_68>:
    35ea:	73 65 6c 5f 70 6c 6f 74 00                          sel_plot.

000035f3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_67>:
    35f3:	6d 61 78 00                                         max.

000035f7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_66>:
    35f7:	6d 61 78 00                                         max.

000035fb <_ZZ12Pub_Sub_DataPcPhjhE3__c_65>:
    35fb:	6d 69 6e 00                                         min.

000035ff <_ZZ12Pub_Sub_DataPcPhjhE3__c_64>:
    35ff:	6d 69 6e 00                                         min.

00003603 <_ZZ12Pub_Sub_DataPcPhjhE3__c_63>:
    3603:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

0000360f <_ZZ12Pub_Sub_DataPcPhjhE3__c_62>:
    360f:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    361f:	72 2e 3a 20 00                                      r.: .

00003624 <_ZZ12Pub_Sub_DataPcPhjhE3__c_61>:
    3624:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3634:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

00003640 <_ZZ12Pub_Sub_DataPcPhjhE3__c_60>:
    3640:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

0000364b <_ZZ12Pub_Sub_DataPcPhjhE3__c_59>:
    364b:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00003657 <_ZZ12Pub_Sub_DataPcPhjhE3__c_58>:
    3657:	76 61 6c 76 65 20 35 3a 20 00                       valve 5: .

00003661 <_ZZ12Pub_Sub_DataPcPhjhE3__c_57>:
    3661:	76 61 6c 76 65 20 34 3a 20 00                       valve 4: .

0000366b <_ZZ12Pub_Sub_DataPcPhjhE3__c_56>:
    366b:	76 61 6c 76 65 20 33 3a 20 00                       valve 3: .

00003675 <_ZZ12Pub_Sub_DataPcPhjhE3__c_55>:
    3675:	76 61 6c 76 65 20 32 3a 20 00                       valve 2: .

0000367f <_ZZ12Pub_Sub_DataPcPhjhE3__c_54>:
    367f:	76 61 6c 76 65 20 31 3a 20 00                       valve 1: .

00003689 <_ZZ12Pub_Sub_DataPcPhjhE3__c_53>:
    3689:	53 65 6e 73 6f 72 20 4e 6f 2e 3a 20 00              Sensor No.: .

00003696 <_ZZ12Pub_Sub_DataPcPhjhE3__c_52>:
    3696:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    36a6:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

000036b2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_51>:
    36b2:	6f 70 4d 6f 64 65 00                                opMode.

000036b9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_50>:
    36b9:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    36c9:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000036d4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_49>:
    36d4:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    36e4:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000036ef <_ZZ12Pub_Sub_DataPcPhjhE3__c_48>:
    36ef:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    36ff:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000370a <_ZZ12Pub_Sub_DataPcPhjhE3__c_47>:
    370a:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    371a:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003729 <_ZZ12Pub_Sub_DataPcPhjhE3__c_46>:
    3729:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3739:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003748 <_ZZ12Pub_Sub_DataPcPhjhE3__c_45>:
    3748:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3758:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003767 <_ZZ12Pub_Sub_DataPcPhjhE3__c_44>:
    3767:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 44 41     wireless pump DA
    3777:	54 41 20 47 45 54 20 46 52 4f 4d 20 53 45 52 56     TA GET FROM SERV
    3787:	45 52 00                                            ER.

0000378a <_ZZ12Pub_Sub_DataPcPhjhE3__c_43>:
    378a:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    379a:	6f 6e 20 00                                         on .

0000379e <_ZZ12Pub_Sub_DataPcPhjhE3__c_42>:
    379e:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    37ae:	74 68 65 20 6c 69 73 74 00                          the list.

000037b7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_41>:
    37b7:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

000037c8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_40>:
    37c8:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    37d8:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000037e3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_39>:
    37e3:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    37f3:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000037fe <_ZZ12Pub_Sub_DataPcPhjhE3__c_38>:
    37fe:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    380e:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003819 <_ZZ12Pub_Sub_DataPcPhjhE3__c_37>:
    3819:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3829:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003834 <_ZZ12Pub_Sub_DataPcPhjhE3__c_36>:
    3834:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3844:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000384f <_ZZ12Pub_Sub_DataPcPhjhE3__c_35>:
    384f:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    385f:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000386a <_ZZ12Pub_Sub_DataPcPhjhE3__c_34>:
    386a:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    387a:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003885 <_ZZ12Pub_Sub_DataPcPhjhE3__c_33>:
    3885:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3895:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038a0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_32>:
    38a0:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    38b0:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038bb <_ZZ12Pub_Sub_DataPcPhjhE3__c_31>:
    38bb:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    38cb:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000038da <_ZZ12Pub_Sub_DataPcPhjhE3__c_30>:
    38da:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38ea:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000038f9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_29>:
    38f9:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3909:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003918 <_ZZ12Pub_Sub_DataPcPhjhE3__c_28>:
    3918:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

00003923 <_ZZ12Pub_Sub_DataPcPhjhE3__c_27>:
    3923:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

0000392e <_ZZ12Pub_Sub_DataPcPhjhE3__c_26>:
    392e:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    393e:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

00003949 <_ZZ12Pub_Sub_DataPcPhjhE3__c_25>:
    3949:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    3959:	6f 6e 20 00                                         on .

0000395d <_ZZ12Pub_Sub_DataPcPhjhE3__c_24>:
    395d:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    396d:	74 68 65 20 6c 69 73 74 00                          the list.

00003976 <_ZZ12Pub_Sub_DataPcPhjhE3__c_23>:
    3976:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

00003987 <_ZZ12Pub_Sub_DataPcPhjhE3__c_22>:
    3987:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3997:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039a2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_21>:
    39a2:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    39b2:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039bd <_ZZ12Pub_Sub_DataPcPhjhE3__c_20>:
    39bd:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    39cd:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039d8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_19>:
    39d8:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    39e8:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039f3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_18>:
    39f3:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3a03:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a0e <_ZZ12Pub_Sub_DataPcPhjhE3__c_17>:
    3a0e:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a1e:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a29 <_ZZ12Pub_Sub_DataPcPhjhE3__c_16>:
    3a29:	76 61 6c 76 65 35 00                                valve5.

00003a30 <_ZZ12Pub_Sub_DataPcPhjhE3__c_15>:
    3a30:	76 61 6c 76 65 34 00                                valve4.

00003a37 <_ZZ12Pub_Sub_DataPcPhjhE3__c_14>:
    3a37:	76 61 6c 76 65 33 00                                valve3.

00003a3e <_ZZ12Pub_Sub_DataPcPhjhE3__c_13>:
    3a3e:	76 61 6c 76 65 32 00                                valve2.

00003a45 <_ZZ12Pub_Sub_DataPcPhjhE3__c_12>:
    3a45:	76 61 6c 76 65 31 00                                valve1.

00003a4c <_ZZ12Pub_Sub_DataPcPhjhE3__c_11>:
    3a4c:	70 4e 6f 00                                         pNo.

00003a50 <_ZZ12Pub_Sub_DataPcPhjhE3__c_10>:
    3a50:	53 65 74 20 63 6f 65 66 66 65 63 69 65 6e 74 20     Set coeffecient 
    3a60:	54 6f 70 69 63 20 66 72 6f 6d 20 73 65 72 76 65     Topic from serve
    3a70:	72 00                                               r.

00003a72 <_ZZ12Pub_Sub_DataPcPhjhE3__c_6>:
    3a72:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 00     Irrigating plot.

00003a82 <_ZZ12Pub_Sub_DataPcPhjhE3__c_5>:
    3a82:	50 55 4d 50 20 52 55 4e 20 54 49 4d 45 52 00        PUMP RUN TIMER.

00003a91 <_ZZ12Pub_Sub_DataPcPhjhE3__c_4>:
    3a91:	74 00                                               t.

00003a93 <_ZZ12Pub_Sub_DataPcPhjhE3__c_3>:
    3a93:	70 4e 6f 00                                         pNo.

00003a97 <_ZZ12Pub_Sub_DataPcPhjhE3__c_2>:
    3a97:	67 65 74 20 54 49 4d 45 52 20 66 72 6f 6d 20 73     get TIMER from s
    3aa7:	65 72 76 65 72 00                                   erver.

00003aad <_ZZ12Pub_Sub_DataPcPhjhE3__c_1>:
    3aad:	47 65 74 20 43 6f 6e 74 72 6f 6c 6c 65 72 20 69     Get Controller i
    3abd:	73 20 72 65 67 69 73 74 65 72 65 64 20 74 6f 20     s registered to 
    3acd:	53 65 76 65 72 20 54 6f 70 69 63 00                 Sever Topic.

00003ad9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_0>:
    3ad9:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3ae9:	6e 63 74 69 6f 6e 20 32 00                          nction 2.

00003af2 <_ZZ12Pub_Sub_DataPcPhjhE3__c>:
    3af2:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b02:	6e 63 74 69 6f 6e 20 31 00                          nction 1.

00003b0b <_ZZ14Lora_OperationvE3__c>:
    3b0b:	4c 6f 72 61 20 44 61 74 61 20 52 65 63 69 76 65     Lora Data Recive
    3b1b:	64 00                                               d.

00003b1d <_ZZ22Valve_Grouping_HandlerhE3__c_40>:
    3b1d:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3b2d:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003b3c <_ZZ22Valve_Grouping_HandlerhE3__c_39>:
    3b3c:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3b4c:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3b5c:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3b6c:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003b77 <_ZZ22Valve_Grouping_HandlerhE3__c_38>:
    3b77:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3b87:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3b97:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3ba7:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003bb2 <_ZZ22Valve_Grouping_HandlerhE3__c_37>:
    3bb2:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3bc2:	69 6c 00                                            il.

00003bc5 <_ZZ22Valve_Grouping_HandlerhE3__c_36>:
    3bc5:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3bd5:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3be5:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003bf0 <_ZZ22Valve_Grouping_HandlerhE3__c_35>:
    3bf0:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3c00:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003c0e <_ZZ22Valve_Grouping_HandlerhE3__c_34>:
    3c0e:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3c1e:	74 61 20 3a 20 00                                   ta : .

00003c24 <_ZZ22Valve_Grouping_HandlerhE3__c_33>:
    3c24:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3c34:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3c44:	65 20 31 00                                         e 1.

00003c48 <_ZZ22Valve_Grouping_HandlerhE3__c_32>:
    3c48:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3c58:	6d 62 65 72 20 00                                   mber .

00003c5e <_ZZ22Valve_Grouping_HandlerhE3__c_31>:
    3c5e:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3c6e:	6f 2e 20 00                                         o. .

00003c72 <_ZZ22Valve_Grouping_HandlerhE3__c_30>:
    3c72:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3c82:	6e 6f 20 3a 20 00                                   no : .

00003c88 <_ZZ22Valve_Grouping_HandlerhE3__c_29>:
    3c88:	20 00                                                .

00003c8a <_ZZ22Valve_Grouping_HandlerhE3__c_28>:
    3c8a:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003c98 <_ZZ22Valve_Grouping_HandlerhE3__c_27>:
    3c98:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3ca8:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003cb7 <_ZZ22Valve_Grouping_HandlerhE3__c_26>:
    3cb7:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3cc7:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3cd7:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3ce7:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003cf2 <_ZZ22Valve_Grouping_HandlerhE3__c_25>:
    3cf2:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d02:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d12:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d22:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003d2d <_ZZ22Valve_Grouping_HandlerhE3__c_24>:
    3d2d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d3d:	69 6c 00                                            il.

00003d40 <_ZZ22Valve_Grouping_HandlerhE3__c_23>:
    3d40:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3d50:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3d60:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003d6b <_ZZ22Valve_Grouping_HandlerhE3__c_22>:
    3d6b:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3d7b:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003d89 <_ZZ22Valve_Grouping_HandlerhE3__c_21>:
    3d89:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3d99:	74 61 20 3a 20 00                                   ta : .

00003d9f <_ZZ22Valve_Grouping_HandlerhE3__c_20>:
    3d9f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3daf:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3dbf:	65 20 31 00                                         e 1.

00003dc3 <_ZZ22Valve_Grouping_HandlerhE3__c_19>:
    3dc3:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3dd3:	6d 62 65 72 20 00                                   mber .

00003dd9 <_ZZ22Valve_Grouping_HandlerhE3__c_18>:
    3dd9:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3de9:	6f 2e 20 00                                         o. .

00003ded <_ZZ22Valve_Grouping_HandlerhE3__c_17>:
    3ded:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3dfd:	6e 6f 20 3a 20 00                                   no : .

00003e03 <_ZZ22Valve_Grouping_HandlerhE3__c_16>:
    3e03:	20 00                                                .

00003e05 <_ZZ22Valve_Grouping_HandlerhE3__c_15>:
    3e05:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003e13 <_ZZ22Valve_Grouping_HandlerhE3__c_14>:
    3e13:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
    3e23:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
    3e33:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

00003e41 <_ZZ22Valve_Grouping_HandlerhE3__c_13>:
    3e41:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3e51:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
    3e61:	29 00                                               ).

00003e63 <_ZZ22Valve_Grouping_HandlerhE3__c_12>:
    3e63:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3e73:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3e83:	20 6f 6e 6e 29 00                                    onn).

00003e89 <_ZZ22Valve_Grouping_HandlerhE3__c_11>:
    3e89:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3e99:	61 20 3a 20 00                                      a : .

00003e9e <_ZZ22Valve_Grouping_HandlerhE3__c_10>:
    3e9e:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3eae:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3ebe:	65 20 3b 00                                         e ;.

00003ec2 <_ZZ22Valve_Grouping_HandlerhE3__c_9>:
    3ec2:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3ed2:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3ee2:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003eed <_ZZ22Valve_Grouping_HandlerhE3__c_8>:
    3eed:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
    3efd:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
    3f0d:	61 64 79 20 6f 6e 00                                ady on.

00003f14 <_ZZ22Valve_Grouping_HandlerhE3__c_7>:
    3f14:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3f24:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00003f35 <_ZZ22Valve_Grouping_HandlerhE3__c_6>:
    3f35:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3f45:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3f55:	20 6f 6e 29 00                                       on).

00003f5a <_ZZ22Valve_Grouping_HandlerhE3__c_5>:
    3f5a:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3f6a:	61 20 3a 20 00                                      a : .

00003f6f <_ZZ22Valve_Grouping_HandlerhE3__c_4>:
    3f6f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3f7f:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3f8f:	65 20 00                                            e .

00003f92 <_ZZ22Valve_Grouping_HandlerhE3__c_3>:
    3f92:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3fa2:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3fb2:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003fbd <_ZZ22Valve_Grouping_HandlerhE3__c_2>:
    3fbd:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    3fcd:	20 00                                                .

00003fcf <_ZZ22Valve_Grouping_HandlerhE3__c_1>:
    3fcf:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00003fe0 <_ZZ22Valve_Grouping_HandlerhE3__c_0>:
    3fe0:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    3ff0:	20 00                                                .

00003ff2 <_ZZ22Valve_Grouping_HandlerhE3__c>:
    3ff2:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00004003 <_ZZ15Stop_IrrigationvE3__c_3>:
    4003:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4013:	74 6f 20 53 74 6f 70 00                             to Stop.

0000401b <_ZZ15Stop_IrrigationvE3__c_2>:
    401b:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

0000402c <_ZZ15Stop_IrrigationvE3__c_1>:
    402c:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

0000403d <_ZZ15Stop_IrrigationvE3__c_0>:
    403d:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    404d:	72 20 32 32 32 32 32 32 32 32 32 32 32 32 32 32     r 22222222222222
    405d:	32 32 32 32 32 32 32 32 32 00                       222222222.

00004067 <_ZZ15Stop_IrrigationvE3__c>:
    4067:	54 72 79 20 74 6f 20 73 74 6f 70 20 49 72 72 69     Try to stop Irri
    4077:	67 61 74 69 6f 6e 00                                gation.

0000407e <_ZZ16Start_IrrigationvE3__c_5>:
    407e:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    408e:	53 74 61 72 74 00                                   Start.

00004094 <_ZZ16Start_IrrigationvE3__c_4>:
    4094:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 61 72 74     Irrigation Start
	...

000040a5 <_ZZ16Start_IrrigationvE3__c_3>:
    40a5:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    40b5:	53 74 61 72 74 00                                   Start.

000040bb <_ZZ16Start_IrrigationvE3__c_2>:
    40bb:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40cb:	72 20 66 61 69 6c 20 74 6f 20 6f 6e 00              r fail to on.

000040d8 <_ZZ16Start_IrrigationvE3__c_1>:
    40d8:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40e8:	72 20 6f 6e 00                                      r on.

000040ed <_ZZ16Start_IrrigationvE3__c_0>:
    40ed:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40fd:	72 20 31 31 31 31 31 31 31 31 31 31 31 31 31 31     r 11111111111111
    410d:	31 31 31 31 31 31 00                                111111.

00004114 <_ZZ16Start_IrrigationvE3__c>:
    4114:	54 72 79 20 74 6f 20 53 74 61 72 74 20 54 68 65     Try to Start The
    4124:	20 49 72 72 69 67 61 74 69 6f 6e 00                  Irrigation.

00004130 <_ZZ13Run_OperationvE3__c_21>:
    4130:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    4140:	2c 20 49 72 72 69 67 61 74 69 6f 6e 00              , Irrigation.

0000414d <_ZZ13Run_OperationvE3__c_19>:
    414d:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    415d:	6d 6f 64 65 20 2c 20 4f 70 65 72 61 74 69 6f 6e     mode , Operation
    416d:	20 53 74 61 72 74 00                                 Start.

00004174 <_ZZ13Run_OperationvE3__c_18>:
    4174:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4184:	2c 20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68     , kill switch th
    4194:	72 6f 75 67 68 20 61 70 70 00                       rough app.

0000419e <_ZZ13Run_OperationvE3__c_17>:
    419e:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41ae:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    41be:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    41ce:	20 33 00                                             3.

000041d1 <_ZZ13Run_OperationvE3__c_16>:
    41d1:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41e1:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    41f1:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4201:	20 32 00                                             2.

00004204 <_ZZ13Run_OperationvE3__c_15>:
    4204:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4214:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    4224:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4234:	20 31 00                                             1.

00004237 <_ZZ13Run_OperationvE3__c_14>:
    4237:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4247:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    4257:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4267:	20 30 00                                             0.

0000426a <_ZZ13Run_OperationvE3__c_13>:
    426a:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    427a:	20 2c 20 54 69 6d 65 20 4f 76 65 72 00               , Time Over.

00004287 <_ZZ13Run_OperationvE3__c_12>:
    4287:	50 75 6d 70 20 52 75 6e 20 54 69 6d 65 72 20 69     Pump Run Timer i
    4297:	6e 20 54 69 6d 65 72 20 3a 20 00                    n Timer : .

000042a2 <_ZZ13Run_OperationvE3__c_11>:
    42a2:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42b2:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    42c2:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    42d2:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    42e2:	74 6f 70 20 30 2e 31 00                             top 0.1.

000042ea <_ZZ13Run_OperationvE3__c_10>:
    42ea:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42fa:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    430a:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    431a:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    432a:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004332 <_ZZ13Run_OperationvE3__c_9>:
    4332:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4342:	20 2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61      , Irrigation fa
    4352:	69 6c 73 20 74 6f 20 73 74 6f 70 20 62 75 74 20     ils to stop but 
    4362:	72 75 6e 20 66 6f 72 20 6e 65 78 74 20 70 6c 6f     run for next plo
    4372:	74 20 00                                            t .

00004375 <_ZZ13Run_OperationvE3__c_8>:
    4375:	4d 6f 64 65 3a 54 69 6d 65 72 20 4d 6f 64 65 20     Mode:Timer Mode 
    4385:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    4395:	74 00                                               t.

00004397 <_ZZ13Run_OperationvE3__c_7>:
    4397:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    43a7:	20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68 72      kill switch thr
    43b7:	6f 75 67 68 20 61 70 70 00                          ough app.

000043c0 <_ZZ13Run_OperationvE3__c_6>:
    43c0:	66 6f 67 67 65 72 20 6f 6e 20 49 72 72 69 67 61     fogger on Irriga
    43d0:	74 69 6f 6e 20 73 74 6f 70 73 00                    tion stops.

000043db <_ZZ13Run_OperationvE3__c_5>:
    43db:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    43eb:	49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c 61 74     Irrigation Relat
    43fb:	65 64 20 46 61 75 6c 74 20 6f 63 63 75 72 00        ed Fault occur.

0000440a <_ZZ13Run_OperationvE3__c_3>:
    440a:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    441a:	2c 20 47 6f 69 6e 67 20 54 6f 20 53 74 61 72 74     , Going To Start
	...

0000442b <_ZZ13Run_OperationvE3__c_2>:
    442b:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    443b:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61 69     , Irrigation fai
    444b:	6c 73 20 74 6f 20 73 74 6f 70 00                    ls to stop.

00004456 <_ZZ13Run_OperationvE3__c_1>:
    4456:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4466:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    4476:	74 00                                               t.

00004478 <_ZZ13Run_OperationvE3__c_0>:
    4478:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 2c 20 49     Mode: Manual , I
    4488:	72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 73 20     rrigation fails 
    4498:	74 6f 20 73 74 6f 70 00                             to stop.

000044a0 <_ZZ13Run_OperationvE3__c>:
    44a0:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 73 65 6c     Mode: Manual sel
    44b0:	65 63 74 65 64 2c 20 20 4f 70 65 72 61 74 69 6f     ected,  Operatio
    44c0:	6e 20 53 74 61 72 74 00                             n Start.

000044c8 <_ZZ21Select_Operation_ModevE3__c_11>:
    44c8:	41 75 74 6f 20 4d 6f 64 65 20 73 65 6c 65 63 74     Auto Mode select
    44d8:	65 64 00                                            ed.

000044db <_ZZ21Select_Operation_ModevE3__c_10>:
    44db:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    44eb:	65 64 00                                            ed.

000044ee <_ZZ21Select_Operation_ModevE3__c_9>:
    44ee:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    44fe:	63 74 65 64 00                                      cted.

00004503 <_ZZ21Select_Operation_ModevE3__c_8>:
    4503:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4513:	65 64 00                                            ed.

00004516 <_ZZ21Select_Operation_ModevE3__c_7>:
    4516:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4526:	63 74 65 64 00                                      cted.

0000452b <_ZZ21Select_Operation_ModevE3__c_6>:
    452b:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    453b:	63 74 65 64 00                                      cted.

00004540 <_ZZ21Select_Operation_ModevE3__c_5>:
    4540:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    4550:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

0000455c <_ZZ21Select_Operation_ModevE3__c_4>:
    455c:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    456c:	65 64 00                                            ed.

0000456f <_ZZ21Select_Operation_ModevE3__c_3>:
    456f:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    457f:	74 65 64 00                                         ted.

00004583 <_ZZ21Select_Operation_ModevE3__c_2>:
    4583:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    4593:	74 65 64 00                                         ted.

00004597 <_ZZ21Select_Operation_ModevE3__c_1>:
    4597:	44 61 74 61 20 4c 6f 67 67 65 72 20 4d 6f 64 65     Data Logger Mode
    45a7:	20 73 65 6c 65 63 74 65 64 00                        selected.

000045b1 <_ZZ21Select_Operation_ModevE3__c_0>:
    45b1:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    45c1:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

000045cd <_ZZ21Select_Operation_ModevE3__c>:
    45cd:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    45dd:	63 74 65 64 00                                      cted.

000045e2 <digital_pin_to_timer_PGM>:
    45e2:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    460e:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00004628 <digital_pin_to_bit_mask_PGM>:
    4628:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    4638:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    4648:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    4658:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    4668:	04 08 10 20 40 80                                   ... @.

0000466e <digital_pin_to_port_PGM>:
    466e:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    467e:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    468e:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    469e:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    46ae:	0b 0b 0b 0b 0b 0b                                   ......

000046b4 <port_to_input_PGM>:
    46b4:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    46c4:	00 01 00 00 03 01 06 01 09 01                       ..........

000046ce <port_to_output_PGM>:
    46ce:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    46de:	02 01 00 00 05 01 08 01 0b 01                       ..........

000046e8 <port_to_mode_PGM>:
    46e8:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    46f8:	01 01 00 00 04 01 07 01 0a 01                       ..........

00004702 <_ZL18MODEM_CONFIG_TABLE>:
    4702:	72 74 04 92 74 04 48 94 04 78 c4 0c 72 b4 04 00     rt..t.H..x..r...

00004712 <__ctors_start>:
    4712:	ef 67       	ori	r30, 0x7F	; 127
    4714:	d0 d3       	rcall	.+1952   	; 0x4eb6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x50>
    4716:	26 d4       	rcall	.+2124   	; 0x4f64 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfe>
    4718:	82 dc       	rcall	.-1788   	; 0x401e <_ZZ15Stop_IrrigationvE3__c_2+0x3>
    471a:	38 e2       	ldi	r19, 0x28	; 40

0000471c <__ctors_end>:
    471c:	11 24       	eor	r1, r1
    471e:	1f be       	out	0x3f, r1	; 63
    4720:	cf ef       	ldi	r28, 0xFF	; 255
    4722:	d1 e2       	ldi	r29, 0x21	; 33
    4724:	de bf       	out	0x3e, r29	; 62
    4726:	cd bf       	out	0x3d, r28	; 61
    4728:	00 e0       	ldi	r16, 0x00	; 0
    472a:	0c bf       	out	0x3c, r16	; 60

0000472c <__do_copy_data>:
    472c:	19 e0       	ldi	r17, 0x09	; 9
    472e:	a0 e0       	ldi	r26, 0x00	; 0
    4730:	b2 e0       	ldi	r27, 0x02	; 2
    4732:	e2 eb       	ldi	r30, 0xB2	; 178
    4734:	f0 ee       	ldi	r31, 0xE0	; 224
    4736:	01 e0       	ldi	r16, 0x01	; 1
    4738:	0b bf       	out	0x3b, r16	; 59
    473a:	02 c0       	rjmp	.+4      	; 0x4740 <__do_copy_data+0x14>
    473c:	07 90       	elpm	r0, Z+
    473e:	0d 92       	st	X+, r0
    4740:	a6 31       	cpi	r26, 0x16	; 22
    4742:	b1 07       	cpc	r27, r17
    4744:	d9 f7       	brne	.-10     	; 0x473c <__do_copy_data+0x10>

00004746 <__do_clear_bss>:
    4746:	29 e1       	ldi	r18, 0x19	; 25
    4748:	a6 e1       	ldi	r26, 0x16	; 22
    474a:	b9 e0       	ldi	r27, 0x09	; 9
    474c:	01 c0       	rjmp	.+2      	; 0x4750 <.do_clear_bss_start>

0000474e <.do_clear_bss_loop>:
    474e:	1d 92       	st	X+, r1

00004750 <.do_clear_bss_start>:
    4750:	a9 32       	cpi	r26, 0x29	; 41
    4752:	b2 07       	cpc	r27, r18
    4754:	e1 f7       	brne	.-8      	; 0x474e <.do_clear_bss_loop>

00004756 <__do_global_ctors>:
    4756:	13 e2       	ldi	r17, 0x23	; 35
    4758:	ce e8       	ldi	r28, 0x8E	; 142
    475a:	d3 e2       	ldi	r29, 0x23	; 35
    475c:	00 e0       	ldi	r16, 0x00	; 0
    475e:	06 c0       	rjmp	.+12     	; 0x476c <__do_global_ctors+0x16>
    4760:	21 97       	sbiw	r28, 0x01	; 1
    4762:	01 09       	sbc	r16, r1
    4764:	80 2f       	mov	r24, r16
    4766:	fe 01       	movw	r30, r28
    4768:	0e 94 1d eb 	call	0x1d63a	; 0x1d63a <__tablejump2__>
    476c:	c9 38       	cpi	r28, 0x89	; 137
    476e:	d1 07       	cpc	r29, r17
    4770:	80 e0       	ldi	r24, 0x00	; 0
    4772:	08 07       	cpc	r16, r24
    4774:	a9 f7       	brne	.-22     	; 0x4760 <__do_global_ctors+0xa>
    4776:	0e 94 fe 83 	call	0x107fc	; 0x107fc <main>
    477a:	0c 94 57 f0 	jmp	0x1e0ae	; 0x1e0ae <_exit>

0000477e <__bad_interrupt>:
    477e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00004782 <_ZN5Print5writeEPKcj>:
			}
			Wireless_Pump_On_Off(_ePUMP_OFF,i);
			//Wireless_Pump_On_Off(i,_kOFF);
		}
	}
}
    4782:	dc 01       	movw	r26, r24
    4784:	ed 91       	ld	r30, X+
    4786:	fc 91       	ld	r31, X
    4788:	02 80       	ldd	r0, Z+2	; 0x02
    478a:	f3 81       	ldd	r31, Z+3	; 0x03
    478c:	e0 2d       	mov	r30, r0
    478e:	19 94       	eijmp

00004790 <_ZN5EERef6updateEh>:
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    4790:	ff 92       	push	r15
    4792:	0f 93       	push	r16
    4794:	1f 93       	push	r17
    4796:	cf 93       	push	r28
    4798:	df 93       	push	r29
    479a:	ec 01       	movw	r28, r24
    479c:	f6 2e       	mov	r15, r22

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    479e:	08 81       	ld	r16, Y
    47a0:	19 81       	ldd	r17, Y+1	; 0x01
    47a2:	c8 01       	movw	r24, r16
    47a4:	0e 94 3b f0 	call	0x1e076	; 0x1e076 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47a8:	f8 16       	cp	r15, r24
    47aa:	21 f0       	breq	.+8      	; 0x47b4 <_ZN5EERef6updateEh+0x24>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    47ac:	6f 2d       	mov	r22, r15
    47ae:	c8 01       	movw	r24, r16
    47b0:	0e 94 43 f0 	call	0x1e086	; 0x1e086 <eeprom_write_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47b4:	ce 01       	movw	r24, r28
    47b6:	df 91       	pop	r29
    47b8:	cf 91       	pop	r28
    47ba:	1f 91       	pop	r17
    47bc:	0f 91       	pop	r16
    47be:	ff 90       	pop	r15
    47c0:	08 95       	ret

000047c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>:
    47c2:	0f 93       	push	r16
    47c4:	1f 93       	push	r17
    47c6:	cf 93       	push	r28
    47c8:	df 93       	push	r29
    47ca:	1f 92       	push	r1
    47cc:	1f 92       	push	r1
    47ce:	cd b7       	in	r28, 0x3d	; 61
    47d0:	de b7       	in	r29, 0x3e	; 62
    47d2:	8b 01       	movw	r16, r22
    47d4:	fb 01       	movw	r30, r22
    47d6:	60 81       	ld	r22, Z
    47d8:	9a 83       	std	Y+2, r25	; 0x02
    47da:	89 83       	std	Y+1, r24	; 0x01
    47dc:	ce 01       	movw	r24, r28
    47de:	01 96       	adiw	r24, 0x01	; 1
    47e0:	d7 df       	rcall	.-82     	; 0x4790 <_ZN5EERef6updateEh>
    47e2:	c8 01       	movw	r24, r16
    47e4:	0f 90       	pop	r0
    47e6:	0f 90       	pop	r0
    47e8:	df 91       	pop	r29
    47ea:	cf 91       	pop	r28
    47ec:	1f 91       	pop	r17
    47ee:	0f 91       	pop	r16
    47f0:	08 95       	ret

000047f2 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>:
    47f2:	ef 92       	push	r14
    47f4:	ff 92       	push	r15
    47f6:	0f 93       	push	r16
    47f8:	1f 93       	push	r17
    47fa:	cf 93       	push	r28
    47fc:	df 93       	push	r29
    47fe:	1f 92       	push	r1
    4800:	1f 92       	push	r1
    4802:	cd b7       	in	r28, 0x3d	; 61
    4804:	de b7       	in	r29, 0x3e	; 62
    4806:	8b e9       	ldi	r24, 0x9B	; 155
    4808:	e8 2e       	mov	r14, r24
    480a:	84 e1       	ldi	r24, 0x14	; 20
    480c:	f8 2e       	mov	r15, r24
    480e:	0d ea       	ldi	r16, 0xAD	; 173
    4810:	1e e0       	ldi	r17, 0x0E	; 14
    4812:	f7 01       	movw	r30, r14
    4814:	61 91       	ld	r22, Z+
    4816:	7f 01       	movw	r14, r30
    4818:	1a 83       	std	Y+2, r17	; 0x02
    481a:	09 83       	std	Y+1, r16	; 0x01
    481c:	ce 01       	movw	r24, r28
    481e:	01 96       	adiw	r24, 0x01	; 1
    4820:	b7 df       	rcall	.-146    	; 0x4790 <_ZN5EERef6updateEh>
    4822:	0f 5f       	subi	r16, 0xFF	; 255
    4824:	1f 4f       	sbci	r17, 0xFF	; 255
    4826:	01 3b       	cpi	r16, 0xB1	; 177
    4828:	fe e0       	ldi	r31, 0x0E	; 14
    482a:	1f 07       	cpc	r17, r31
    482c:	91 f7       	brne	.-28     	; 0x4812 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3+0x20>
    482e:	8b e9       	ldi	r24, 0x9B	; 155
    4830:	94 e1       	ldi	r25, 0x14	; 20
    4832:	0f 90       	pop	r0
    4834:	0f 90       	pop	r0
    4836:	df 91       	pop	r29
    4838:	cf 91       	pop	r28
    483a:	1f 91       	pop	r17
    483c:	0f 91       	pop	r16
    483e:	ff 90       	pop	r15
    4840:	ef 90       	pop	r14
    4842:	08 95       	ret

00004844 <_Z22Hard_Coded_Flush_Valveh>:
    4844:	81 e0       	ldi	r24, 0x01	; 1
    4846:	08 95       	ret

00004848 <_Z35Wireless_Motor_Enable_Disable_Checkv>:

unsigned char Wireless_Motor_Enable_Disable_Check(void)
{
	if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kWIRELESS_PUMP_ENABLE_DISABLE_PLOT)
    4848:	80 91 c1 0e 	lds	r24, 0x0EC1	; 0x800ec1 <_sExtra_Plot+0xd9>
    484c:	8d 36       	cpi	r24, 0x6D	; 109
    484e:	09 f0       	breq	.+2      	; 0x4852 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xa>
    4850:	7c c0       	rjmp	.+248    	; 0x494a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x102>
	{
		if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET &&
    4852:	80 91 c0 0e 	lds	r24, 0x0EC0	; 0x800ec0 <_sExtra_Plot+0xd8>
    4856:	88 23       	and	r24, r24
    4858:	09 f4       	brne	.+2      	; 0x485c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14>
    485a:	56 c0       	rjmp	.+172    	; 0x4908 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xc0>
		_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number != 0)
		{
			switch(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0])
    485c:	80 91 c5 0e 	lds	r24, 0x0EC5	; 0x800ec5 <_sExtra_Plot+0xdd>
    4860:	86 36       	cpi	r24, 0x66	; 102
    4862:	31 f0       	breq	.+12     	; 0x4870 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x28>
    4864:	87 36       	cpi	r24, 0x67	; 103
    4866:	41 f0       	breq	.+16     	; 0x4878 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x30>
    4868:	85 36       	cpi	r24, 0x65	; 101
    486a:	41 f4       	brne	.+16     	; 0x487c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x34>
			{
				case 101:
				{
					
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    486c:	82 e0       	ldi	r24, 0x02	; 2
    486e:	01 c0       	rjmp	.+2      	; 0x4872 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				case 102:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 3;
    4870:	83 e0       	ldi	r24, 0x03	; 3
    4872:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>

				}break;
    4876:	2d c0       	rjmp	.+90     	; 0x48d2 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
				
				case 103:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 4;
    4878:	84 e0       	ldi	r24, 0x04	; 4
    487a:	fb cf       	rjmp	.-10     	; 0x4872 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				default:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    487c:	82 e0       	ldi	r24, 0x02	; 2
    487e:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    4882:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4886:	81 30       	cpi	r24, 0x01	; 1
    4888:	21 f5       	brne	.+72     	; 0x48d2 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
					{
						_kSERAIL_MON_WRITE("Selected valve number wireless pump > ");
    488a:	63 ec       	ldi	r22, 0xC3	; 195
    488c:	78 e0       	ldi	r23, 0x08	; 8
    488e:	86 ec       	ldi	r24, 0xC6	; 198
    4890:	94 e1       	ldi	r25, 0x14	; 20
    4892:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0]);
    4896:	4a e0       	ldi	r20, 0x0A	; 10
    4898:	50 e0       	ldi	r21, 0x00	; 0
    489a:	60 91 c5 0e 	lds	r22, 0x0EC5	; 0x800ec5 <_sExtra_Plot+0xdd>
    489e:	86 ec       	ldi	r24, 0xC6	; 198
    48a0:	94 e1       	ldi	r25, 0x14	; 20
    48a2:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    48a6:	86 ec       	ldi	r24, 0xC6	; 198
    48a8:	94 e1       	ldi	r25, 0x14	; 20
    48aa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE("Selected wireless pump > ");
    48ae:	69 ea       	ldi	r22, 0xA9	; 169
    48b0:	78 e0       	ldi	r23, 0x08	; 8
    48b2:	86 ec       	ldi	r24, 0xC6	; 198
    48b4:	94 e1       	ldi	r25, 0x14	; 20
    48b6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Pump_Selected_For_Irrigation);
    48ba:	4a e0       	ldi	r20, 0x0A	; 10
    48bc:	50 e0       	ldi	r21, 0x00	; 0
    48be:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    48c2:	86 ec       	ldi	r24, 0xC6	; 198
    48c4:	94 e1       	ldi	r25, 0x14	; 20
    48c6:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    48ca:	86 ec       	ldi	r24, 0xC6	; 198
    48cc:	94 e1       	ldi	r25, 0x14	; 20
    48ce:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
				}break;
			}
			
			if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    48d2:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    48d6:	81 11       	cpse	r24, r1
    48d8:	46 c0       	rjmp	.+140    	; 0x4966 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    48da:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    48de:	81 30       	cpi	r24, 0x01	; 1
    48e0:	51 f4       	brne	.+20     	; 0x48f6 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xae>
				{
					_kSERAIL_MON_WRITE("wireless pump 3....................,,,,,,, ");
    48e2:	6d e7       	ldi	r22, 0x7D	; 125
    48e4:	78 e0       	ldi	r23, 0x08	; 8
    48e6:	86 ec       	ldi	r24, 0xC6	; 198
    48e8:	94 e1       	ldi	r25, 0x14	; 20
    48ea:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    48ee:	86 ec       	ldi	r24, 0xC6	; 198
    48f0:	94 e1       	ldi	r25, 0x14	; 20
    48f2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    48f6:	83 e0       	ldi	r24, 0x03	; 3
    48f8:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    48fc:	6b e7       	ldi	r22, 0x7B	; 123
    48fe:	74 e1       	ldi	r23, 0x14	; 20
    4900:	88 ea       	ldi	r24, 0xA8	; 168
    4902:	9c e0       	ldi	r25, 0x0C	; 12
    4904:	5e df       	rcall	.-324    	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4906:	2f c0       	rjmp	.+94     	; 0x4966 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
		else
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    4908:	81 e0       	ldi	r24, 0x01	; 1
    490a:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    490e:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4912:	88 23       	and	r24, r24
    4914:	09 f4       	brne	.+2      	; 0x4918 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xd0>
    4916:	48 c0       	rjmp	.+144    	; 0x49a8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4918:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    491c:	81 30       	cpi	r24, 0x01	; 1
    491e:	51 f4       	brne	.+20     	; 0x4934 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
				{
					_kSERAIL_MON_WRITE("wireless pump 4 ##########################");
    4920:	62 e5       	ldi	r22, 0x52	; 82
    4922:	78 e0       	ldi	r23, 0x08	; 8
    4924:	86 ec       	ldi	r24, 0xC6	; 198
    4926:	94 e1       	ldi	r25, 0x14	; 20
    4928:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    492c:	86 ec       	ldi	r24, 0xC6	; 198
    492e:	94 e1       	ldi	r25, 0x14	; 20
    4930:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    4934:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4938:	6b e7       	ldi	r22, 0x7B	; 123
    493a:	74 e1       	ldi	r23, 0x14	; 20
    493c:	88 ea       	ldi	r24, 0xA8	; 168
    493e:	9c e0       	ldi	r25, 0x0C	; 12
    4940:	40 df       	rcall	.-384    	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
    4942:	85 e0       	ldi	r24, 0x05	; 5
    4944:	0e 94 8a ae 	call	0x15d14	; 0x15d14 <_Z22Valve_Grouping_Handlerh>
    4948:	0e c0       	rjmp	.+28     	; 0x4966 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
	}
	else
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    494a:	81 e0       	ldi	r24, 0x01	; 1
    494c:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
		
		if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4950:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4954:	88 23       	and	r24, r24
    4956:	41 f1       	breq	.+80     	; 0x49a8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    4958:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    495c:	81 30       	cpi	r24, 0x01	; 1
    495e:	51 f7       	brne	.-44     	; 0x4934 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
			{
				_kSERAIL_MON_WRITE("wireless pump 5 ");
    4960:	61 e4       	ldi	r22, 0x41	; 65
    4962:	78 e0       	ldi	r23, 0x08	; 8
    4964:	df cf       	rjmp	.-66     	; 0x4924 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xdc>
	
	
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    4966:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    496a:	82 30       	cpi	r24, 0x02	; 2
    496c:	d8 f0       	brcs	.+54     	; 0x49a4 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x15c>
	{
		if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    496e:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4972:	81 11       	cpse	r24, r1
    4974:	32 c0       	rjmp	.+100    	; 0x49da <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    4976:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    497a:	81 30       	cpi	r24, 0x01	; 1
    497c:	51 f4       	brne	.+20     	; 0x4992 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14a>
			{
				_kSERAIL_MON_WRITE("wireless pump 3 ");
    497e:	60 e3       	ldi	r22, 0x30	; 48
    4980:	78 e0       	ldi	r23, 0x08	; 8
    4982:	86 ec       	ldi	r24, 0xC6	; 198
    4984:	94 e1       	ldi	r25, 0x14	; 20
    4986:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    498a:	86 ec       	ldi	r24, 0xC6	; 198
    498c:	94 e1       	ldi	r25, 0x14	; 20
    498e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    4992:	83 e0       	ldi	r24, 0x03	; 3
    4994:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
			_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4998:	6b e7       	ldi	r22, 0x7B	; 123
    499a:	74 e1       	ldi	r23, 0x14	; 20
    499c:	88 ea       	ldi	r24, 0xA8	; 168
    499e:	9c e0       	ldi	r25, 0x0C	; 12
    49a0:	10 cf       	rjmp	.-480    	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    49a2:	08 95       	ret
		}
	}
	else
	{
		/* Turn on wired motor */
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation == 1)
    49a4:	81 30       	cpi	r24, 0x01	; 1
    49a6:	c9 f4       	brne	.+50     	; 0x49da <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    49a8:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    49ac:	88 23       	and	r24, r24
    49ae:	a9 f0       	breq	.+42     	; 0x49da <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    49b0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    49b4:	81 30       	cpi	r24, 0x01	; 1
    49b6:	51 f4       	brne	.+20     	; 0x49cc <_Z35Wireless_Motor_Enable_Disable_Checkv+0x184>
				{
					_kSERAIL_MON_WRITE("wireless pump 5 ");
    49b8:	6f e1       	ldi	r22, 0x1F	; 31
    49ba:	78 e0       	ldi	r23, 0x08	; 8
    49bc:	86 ec       	ldi	r24, 0xC6	; 198
    49be:	94 e1       	ldi	r25, 0x14	; 20
    49c0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    49c4:	86 ec       	ldi	r24, 0xC6	; 198
    49c6:	94 e1       	ldi	r25, 0x14	; 20
    49c8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    49cc:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    49d0:	6b e7       	ldi	r22, 0x7B	; 123
    49d2:	74 e1       	ldi	r23, 0x14	; 20
    49d4:	88 ea       	ldi	r24, 0xA8	; 168
    49d6:	9c e0       	ldi	r25, 0x0C	; 12
    49d8:	f4 ce       	rjmp	.-536    	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				// ######################### what should to to switch the pump ###################// 
				//Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
			}
		}
	}
}
    49da:	08 95       	ret

000049dc <_Z17Flush_Controllingv>:
		}break;
	}
}

unsigned char Flush_Controlling(void)
{	
    49dc:	e9 e5       	ldi	r30, 0x59	; 89
    49de:	fe e0       	ldi	r31, 0x0E	; 14
    49e0:	2e e5       	ldi	r18, 0x5E	; 94
    49e2:	3e e0       	ldi	r19, 0x0E	; 14
    49e4:	80 e0       	ldi	r24, 0x00	; 0
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
	{
		if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[valve_num] != _kRESET)
    49e6:	91 91       	ld	r25, Z+
    49e8:	91 11       	cpse	r25, r1
		{
			total_valve++;
    49ea:	8f 5f       	subi	r24, 0xFF	; 255
	static unsigned int flush_monitor_timer = _kRESET;
	static unsigned char flush_monitoring_trigger = _kRESET;
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
    49ec:	2e 17       	cp	r18, r30
    49ee:	3f 07       	cpc	r19, r31
    49f0:	d1 f7       	brne	.-12     	; 0x49e6 <_Z17Flush_Controllingv+0xa>
    49f2:	80 93 1a 09 	sts	0x091A, r24	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
		{
			total_valve++;
		}
	}
	
	if(total_valve < 2)
    49f6:	82 30       	cpi	r24, 0x02	; 2
    49f8:	18 f4       	brcc	.+6      	; 0x4a00 <_Z17Flush_Controllingv+0x24>
	{
		_gRunning_Flush_Num = _kSET;
    49fa:	81 e0       	ldi	r24, 0x01	; 1
    49fc:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
	}
	
	
	
	
	if(_sSchedules.Flush_Schedule_In_Every > 14400)
    4a00:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4a04:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
    4a08:	81 34       	cpi	r24, 0x41	; 65
    4a0a:	98 43       	sbci	r25, 0x38	; 56
    4a0c:	30 f0       	brcs	.+12     	; 0x4a1a <_Z17Flush_Controllingv+0x3e>
	{
		_sSchedules.Flush_Schedule_In_Every = 14400;
    4a0e:	80 e4       	ldi	r24, 0x40	; 64
    4a10:	98 e3       	ldi	r25, 0x38	; 56
    4a12:	90 93 e9 0b 	sts	0x0BE9, r25	; 0x800be9 <_sSchedules+0x2cb>
    4a16:	80 93 e8 0b 	sts	0x0BE8, r24	; 0x800be8 <_sSchedules+0x2ca>
		
	}
	
	if(_sSchedules.Flush_Schedule_For > 900)
    4a1a:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <_sSchedules+0x2cc>
    4a1e:	90 91 eb 0b 	lds	r25, 0x0BEB	; 0x800beb <_sSchedules+0x2cd>
    4a22:	85 38       	cpi	r24, 0x85	; 133
    4a24:	93 40       	sbci	r25, 0x03	; 3
    4a26:	30 f0       	brcs	.+12     	; 0x4a34 <_Z17Flush_Controllingv+0x58>
	{
		_sSchedules.Flush_Schedule_For = 900;
    4a28:	84 e8       	ldi	r24, 0x84	; 132
    4a2a:	93 e0       	ldi	r25, 0x03	; 3
    4a2c:	90 93 eb 0b 	sts	0x0BEB, r25	; 0x800beb <_sSchedules+0x2cd>
    4a30:	80 93 ea 0b 	sts	0x0BEA, r24	; 0x800bea <_sSchedules+0x2cc>
	}
	
	
	if(flush_time_save > 40)
    4a34:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
    4a38:	89 32       	cpi	r24, 0x29	; 41
    4a3a:	20 f0       	brcs	.+8      	; 0x4a44 <_Z17Flush_Controllingv+0x68>
	{
		flush_time_save = 0;
    4a3c:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
		_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a40:	d8 de       	rcall	.-592    	; 0x47f2 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4a42:	03 c0       	rjmp	.+6      	; 0x4a4a <_Z17Flush_Controllingv+0x6e>
	}
	else
	{
		flush_time_save++;
    4a44:	8f 5f       	subi	r24, 0xFF	; 255
    4a46:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
	}
	
	
	
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER)
    4a4a:	80 91 55 0e 	lds	r24, 0x0E55	; 0x800e55 <_sExtra_Plot+0x6d>
    4a4e:	89 36       	cpi	r24, 0x69	; 105
    4a50:	09 f0       	breq	.+2      	; 0x4a54 <_Z17Flush_Controllingv+0x78>
    4a52:	38 c1       	rjmp	.+624    	; 0x4cc4 <_Z17Flush_Controllingv+0x2e8>
	{
		if(_sRuble_Parameters.Operation_Mode != _eOPER_MOD_MANUAL)
    4a54:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4a58:	82 30       	cpi	r24, 0x02	; 2
    4a5a:	09 f4       	brne	.+2      	; 0x4a5e <_Z17Flush_Controllingv+0x82>
    4a5c:	f9 c0       	rjmp	.+498    	; 0x4c50 <_Z17Flush_Controllingv+0x274>
		{
			if(!_sRuble_Parameters.Flush_Retry)
    4a5e:	80 91 a5 14 	lds	r24, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    4a62:	90 91 a6 14 	lds	r25, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4a66:	89 2b       	or	r24, r25
    4a68:	09 f0       	breq	.+2      	; 0x4a6c <_Z17Flush_Controllingv+0x90>
    4a6a:	2c c1       	rjmp	.+600    	; 0x4cc4 <_Z17Flush_Controllingv+0x2e8>
			{
				_kSERAIL_MON_WRITE("Flush_Running 0: ");
    4a6c:	68 ee       	ldi	r22, 0xE8	; 232
    4a6e:	72 e0       	ldi	r23, 0x02	; 2
    4a70:	86 ec       	ldi	r24, 0xC6	; 198
    4a72:	94 e1       	ldi	r25, 0x14	; 20
    4a74:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a78:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    4a7c:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    4a80:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    4a84:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    4a88:	2a e0       	ldi	r18, 0x0A	; 10
    4a8a:	30 e0       	ldi	r19, 0x00	; 0
    4a8c:	86 ec       	ldi	r24, 0xC6	; 198
    4a8e:	94 e1       	ldi	r25, 0x14	; 20
    4a90:	0e 94 18 d5 	call	0x1aa30	; 0x1aa30 <_ZN5Print5printEmi>
				Serial.println();
    4a94:	86 ec       	ldi	r24, 0xC6	; 198
    4a96:	94 e1       	ldi	r25, 0x14	; 20
    4a98:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    4a9c:	86 ec       	ldi	r24, 0xC6	; 198
    4a9e:	94 e1       	ldi	r25, 0x14	; 20
    4aa0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				
				if(_sRuble_Parameters.Pump_Run_Timer_for_flush > _sSchedules.Flush_Schedule_In_Every)
    4aa4:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4aa8:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
    4aac:	a0 e0       	ldi	r26, 0x00	; 0
    4aae:	b0 e0       	ldi	r27, 0x00	; 0
    4ab0:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    4ab4:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    4ab8:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    4abc:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    4ac0:	84 17       	cp	r24, r20
    4ac2:	95 07       	cpc	r25, r21
    4ac4:	a6 07       	cpc	r26, r22
    4ac6:	b7 07       	cpc	r27, r23
    4ac8:	08 f0       	brcs	.+2      	; 0x4acc <_Z17Flush_Controllingv+0xf0>
    4aca:	fc c0       	rjmp	.+504    	; 0x4cc4 <_Z17Flush_Controllingv+0x2e8>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 1: ");
					//_kSERIAL_MON_CLEAR();
					if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    4acc:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4ad0:	81 30       	cpi	r24, 0x01	; 1
    4ad2:	09 f0       	breq	.+2      	; 0x4ad6 <_Z17Flush_Controllingv+0xfa>
    4ad4:	68 c0       	rjmp	.+208    	; 0x4ba6 <_Z17Flush_Controllingv+0x1ca>
					{
						if(_sRuble_Parameters.Flush_Running)
    4ad6:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    4ada:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4ade:	89 2b       	or	r24, r25
    4ae0:	f9 f0       	breq	.+62     	; 0x4b20 <_Z17Flush_Controllingv+0x144>
						{
							Hard_Coded_Flush_Valve(_kON);
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    4ae2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4ae6:	81 30       	cpi	r24, 0x01	; 1
    4ae8:	51 f4       	brne	.+20     	; 0x4afe <_Z17Flush_Controllingv+0x122>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
    4aea:	66 ed       	ldi	r22, 0xD6	; 214
    4aec:	72 e0       	ldi	r23, 0x02	; 2
    4aee:	86 ec       	ldi	r24, 0xC6	; 198
    4af0:	94 e1       	ldi	r25, 0x14	; 20
    4af2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    4af6:	86 ec       	ldi	r24, 0xC6	; 198
    4af8:	94 e1       	ldi	r25, 0x14	; 20
    4afa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4afe:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    4b02:	81 11       	cpse	r24, r1
    4b04:	13 c1       	rjmp	.+550    	; 0x4d2c <_Z17Flush_Controllingv+0x350>
    4b06:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4b0a:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
								_kSERIAL_MON_CLEAR();
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
    4b0e:	89 2b       	or	r24, r25
    4b10:	09 f4       	brne	.+2      	; 0x4b14 <_Z17Flush_Controllingv+0x138>
    4b12:	0c c1       	rjmp	.+536    	; 0x4d2c <_Z17Flush_Controllingv+0x350>
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b14:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    4b18:	81 30       	cpi	r24, 0x01	; 1
    4b1a:	09 f0       	breq	.+2      	; 0x4b1e <_Z17Flush_Controllingv+0x142>
    4b1c:	d3 c0       	rjmp	.+422    	; 0x4cc4 <_Z17Flush_Controllingv+0x2e8>
    4b1e:	06 c1       	rjmp	.+524    	; 0x4d2c <_Z17Flush_Controllingv+0x350>
								//_kSERAIL_MON_WRITE("Flush_Running 4: ");
								//_kSERIAL_MON_CLEAR();
								
								//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
							
								if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER)
    4b20:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4b24:	83 30       	cpi	r24, 0x03	; 3
    4b26:	49 f4       	brne	.+18     	; 0x4b3a <_Z17Flush_Controllingv+0x15e>
								{
									_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    4b28:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4b2c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b30:	88 60       	ori	r24, 0x08	; 8
    4b32:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b36:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								}
							
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4b3a:	84 e0       	ldi	r24, 0x04	; 4
    4b3c:	0e 94 6a c9 	call	0x192d4	; 0x192d4 <_Z25Stop_Extra_Plot_Operationh>
								{
								
								}
							
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4b40:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4b44:	88 23       	and	r24, r24
    4b46:	09 f4       	brne	.+2      	; 0x4b4a <_Z17Flush_Controllingv+0x16e>
    4b48:	7d c0       	rjmp	.+250    	; 0x4c44 <_Z17Flush_Controllingv+0x268>
								{
									
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4b4a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4b4e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b52:	90 62       	ori	r25, 0x20	; 32
    4b54:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b58:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4b5c:	84 e0       	ldi	r24, 0x04	; 4
    4b5e:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4b62:	82 e0       	ldi	r24, 0x02	; 2
    4b64:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
								
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4b68:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4b6c:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4b70:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4b74:	91 e0       	ldi	r25, 0x01	; 1
    4b76:	90 93 16 09 	sts	0x0916, r25	; 0x800916 <__data_end>
									
									if(_gRunning_Flush_Num >= total_valve)
    4b7a:	80 91 eb 0c 	lds	r24, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
    4b7e:	20 91 1a 09 	lds	r18, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4b82:	82 17       	cp	r24, r18
    4b84:	58 f0       	brcs	.+22     	; 0x4b9c <_Z17Flush_Controllingv+0x1c0>
									{
										_gRunning_Flush_Num = _kSET;
    4b86:	90 93 eb 0c 	sts	0x0CEB, r25	; 0x800ceb <_gRunning_Flush_Num>
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4b8a:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4b8e:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4b92:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4b96:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
    4b9a:	03 c0       	rjmp	.+6      	; 0x4ba2 <_Z17Flush_Controllingv+0x1c6>
									}
									else
									{
										_gRunning_Flush_Num++;
    4b9c:	8f 5f       	subi	r24, 0xFF	; 255
    4b9e:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
									}
									
									_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4ba2:	27 de       	rcall	.-946    	; 0x47f2 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4ba4:	4f c0       	rjmp	.+158    	; 0x4c44 <_Z17Flush_Controllingv+0x268>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4ba6:	90 91 54 0e 	lds	r25, 0x0E54	; 0x800e54 <_sExtra_Plot+0x6c>
    4baa:	91 11       	cpse	r25, r1
    4bac:	bd c0       	rjmp	.+378    	; 0x4d28 <_Z17Flush_Controllingv+0x34c>
						_sSchedules.Flush_Schedule_In_Every == 0)
    4bae:	20 91 e8 0b 	lds	r18, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4bb2:	30 91 e9 0b 	lds	r19, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4bb6:	23 2b       	or	r18, r19
    4bb8:	09 f4       	brne	.+2      	; 0x4bbc <_Z17Flush_Controllingv+0x1e0>
    4bba:	b6 c0       	rjmp	.+364    	; 0x4d28 <_Z17Flush_Controllingv+0x34c>
							return 1;
						}
						
						
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4bbc:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    4bc0:	91 11       	cpse	r25, r1
    4bc2:	03 c0       	rjmp	.+6      	; 0x4bca <_Z17Flush_Controllingv+0x1ee>
    4bc4:	88 23       	and	r24, r24
    4bc6:	09 f4       	brne	.+2      	; 0x4bca <_Z17Flush_Controllingv+0x1ee>
    4bc8:	81 c0       	rjmp	.+258    	; 0x4ccc <_Z17Flush_Controllingv+0x2f0>
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4bca:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    4bce:	81 30       	cpi	r24, 0x01	; 1
    4bd0:	09 f0       	breq	.+2      	; 0x4bd4 <_Z17Flush_Controllingv+0x1f8>
    4bd2:	1a c1       	rjmp	.+564    	; 0x4e08 <_Z17Flush_Controllingv+0x42c>
    4bd4:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    4bd8:	81 30       	cpi	r24, 0x01	; 1
    4bda:	09 f4       	brne	.+2      	; 0x4bde <_Z17Flush_Controllingv+0x202>
    4bdc:	42 c1       	rjmp	.+644    	; 0x4e62 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING)
								{
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    4bde:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4be2:	85 30       	cpi	r24, 0x05	; 5
    4be4:	09 f4       	brne	.+2      	; 0x4be8 <_Z17Flush_Controllingv+0x20c>
    4be6:	2d c1       	rjmp	.+602    	; 0x4e42 <_Z17Flush_Controllingv+0x466>
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
									return 0;
								}
							}
							
							if(Start_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4be8:	84 e0       	ldi	r24, 0x04	; 4
    4bea:	0e 94 aa c8 	call	0x19154	; 0x19154 <_Z26Start_Extra_Plot_Operationh>
    4bee:	88 23       	and	r24, r24
    4bf0:	09 f4       	brne	.+2      	; 0x4bf4 <_Z17Flush_Controllingv+0x218>
    4bf2:	da c0       	rjmp	.+436    	; 0x4da8 <_Z17Flush_Controllingv+0x3cc>
							{
							     if(_sRuble_Parameters.Debug_Mode == _kSET)
    4bf4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4bf8:	81 30       	cpi	r24, 0x01	; 1
    4bfa:	51 f4       	brne	.+20     	; 0x4c10 <_Z17Flush_Controllingv+0x234>
							     {
									_kSERAIL_MON_WRITE("Flush_Running 6: ");
    4bfc:	62 eb       	ldi	r22, 0xB2	; 178
    4bfe:	72 e0       	ldi	r23, 0x02	; 2
    4c00:	86 ec       	ldi	r24, 0xC6	; 198
    4c02:	94 e1       	ldi	r25, 0x14	; 20
    4c04:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4c08:	86 ec       	ldi	r24, 0xC6	; 198
    4c0a:	94 e1       	ldi	r25, 0x14	; 20
    4c0c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								 }
								
								_sRuble_Parameters.Flush_Running =  _sSchedules.Flush_Schedule_For;
    4c10:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <_sSchedules+0x2cc>
    4c14:	90 91 eb 0b 	lds	r25, 0x0BEB	; 0x800beb <_sSchedules+0x2cd>
    4c18:	90 93 a0 14 	sts	0x14A0, r25	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4c1c:	80 93 9f 14 	sts	0x149F, r24	; 0x80149f <_sRuble_Parameters+0xf1>
								_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c20:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4c24:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c28:	90 62       	ori	r25, 0x20	; 32
    4c2a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c2e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c32:	84 e0       	ldi	r24, 0x04	; 4
    4c34:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c38:	82 e0       	ldi	r24, 0x02	; 2
    4c3a:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
							
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_ON;
							
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kSET;
    4c3e:	81 e0       	ldi	r24, 0x01	; 1
    4c40:	80 93 6d 0e 	sts	0x0E6D, r24	; 0x800e6d <_sExtra_Plot+0x85>
							
								Hard_Coded_Flush_Valve(_kOFF);
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4c44:	6b ee       	ldi	r22, 0xEB	; 235
    4c46:	7c e0       	ldi	r23, 0x0C	; 12
    4c48:	87 eb       	ldi	r24, 0xB7	; 183
    4c4a:	9e e0       	ldi	r25, 0x0E	; 14
    4c4c:	ba dd       	rcall	.-1164   	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4c4e:	3a c0       	rjmp	.+116    	; 0x4cc4 <_Z17Flush_Controllingv+0x2e8>
				
			}
		}
		else
		{
			if(_sRuble_Parameters.Flush_Running || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c50:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    4c54:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4c58:	89 2b       	or	r24, r25
    4c5a:	21 f4       	brne	.+8      	; 0x4c64 <_Z17Flush_Controllingv+0x288>
    4c5c:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4c60:	88 23       	and	r24, r24
    4c62:	a1 f1       	breq	.+104    	; 0x4ccc <_Z17Flush_Controllingv+0x2f0>
			{
				//_kSERAIL_MON_WRITE("Flush_Running 7: ");
				//_kSERIAL_MON_CLEAR();
				_sRuble_Parameters.Flush_Running = _kRESET;
    4c64:	10 92 a0 14 	sts	0x14A0, r1	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4c68:	10 92 9f 14 	sts	0x149F, r1	; 0x80149f <_sRuble_Parameters+0xf1>
				
				
				if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4c6c:	84 e0       	ldi	r24, 0x04	; 4
    4c6e:	0e 94 6a c9 	call	0x192d4	; 0x192d4 <_Z25Stop_Extra_Plot_Operationh>
				{
					
				}
				
				//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
				if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c72:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4c76:	88 23       	and	r24, r24
    4c78:	09 f1       	breq	.+66     	; 0x4cbc <_Z17Flush_Controllingv+0x2e0>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 8: ");
					//_kSERIAL_MON_CLEAR();
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c7a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4c7e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c82:	90 62       	ori	r25, 0x20	; 32
    4c84:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c88:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c8c:	84 e0       	ldi	r24, 0x04	; 4
    4c8e:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c92:	82 e0       	ldi	r24, 0x02	; 2
    4c94:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
					
					//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4c98:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
					flush_monitor_timer = _kRESET;
    4c9c:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4ca0:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
					flush_monitoring_trigger = _kSET;
    4ca4:	81 e0       	ldi	r24, 0x01	; 1
    4ca6:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
					_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4caa:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4cae:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4cb2:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4cb6:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
					_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4cba:	9b dd       	rcall	.-1226   	; 0x47f2 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
				}
				_sRuble_Parameters.Flush_Valve_Off_Timer = _kRESET;
    4cbc:	10 92 a8 14 	sts	0x14A8, r1	; 0x8014a8 <_sRuble_Parameters+0xfa>
    4cc0:	10 92 a7 14 	sts	0x14A7, r1	; 0x8014a7 <_sRuble_Parameters+0xf9>
		}
	}
	
	
	
	if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation == _kRESET)
    4cc4:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4cc8:	81 11       	cpse	r24, r1
    4cca:	1d c0       	rjmp	.+58     	; 0x4d06 <_Z17Flush_Controllingv+0x32a>
	{
		if(flush_monitoring_trigger)
    4ccc:	80 91 16 09 	lds	r24, 0x0916	; 0x800916 <__data_end>
    4cd0:	88 23       	and	r24, r24
    4cd2:	c9 f0       	breq	.+50     	; 0x4d06 <_Z17Flush_Controllingv+0x32a>
		{
			if(flush_monitor_timer > 60)
    4cd4:	80 91 17 09 	lds	r24, 0x0917	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
    4cd8:	90 91 18 09 	lds	r25, 0x0918	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4cdc:	8d 33       	cpi	r24, 0x3D	; 61
    4cde:	91 05       	cpc	r25, r1
    4ce0:	68 f0       	brcs	.+26     	; 0x4cfc <_Z17Flush_Controllingv+0x320>
			{
				flush_monitor_timer = _kRESET;
    4ce2:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4ce6:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
				if(flush_monitoring_trigger)
				{
					Hard_Coded_Flush_Valve(_kON);
					if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)))
    4cea:	64 e0       	ldi	r22, 0x04	; 4
    4cec:	80 e0       	ldi	r24, 0x00	; 0
    4cee:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    4cf2:	88 23       	and	r24, r24
    4cf4:	41 f0       	breq	.+16     	; 0x4d06 <_Z17Flush_Controllingv+0x32a>
					{
						flush_monitoring_trigger = _kRESET;
    4cf6:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <__data_end>
    4cfa:	05 c0       	rjmp	.+10     	; 0x4d06 <_Z17Flush_Controllingv+0x32a>
				}
			
			}
			else
			{
				flush_monitor_timer++;
    4cfc:	01 96       	adiw	r24, 0x01	; 1
    4cfe:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d02:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
			}
		}
	}
	
	
	if(_gRunning_Flush_Num == _kRESET || _gRunning_Flush_Num > total_valve)
    4d06:	80 91 eb 0c 	lds	r24, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
    4d0a:	88 23       	and	r24, r24
    4d0c:	21 f0       	breq	.+8      	; 0x4d16 <_Z17Flush_Controllingv+0x33a>
    4d0e:	90 91 1a 09 	lds	r25, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4d12:	98 17       	cp	r25, r24
    4d14:	40 f4       	brcc	.+16     	; 0x4d26 <_Z17Flush_Controllingv+0x34a>
	{
		_gRunning_Flush_Num = _kSET;
    4d16:	81 e0       	ldi	r24, 0x01	; 1
    4d18:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
		_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d1c:	6b ee       	ldi	r22, 0xEB	; 235
    4d1e:	7c e0       	ldi	r23, 0x0C	; 12
    4d20:	87 eb       	ldi	r24, 0xB7	; 183
    4d22:	9e e0       	ldi	r25, 0x0E	; 14
    4d24:	4e cd       	rjmp	.-1380   	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
	}
	
}
    4d26:	08 95       	ret
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
						_sSchedules.Flush_Schedule_In_Every == 0)
						{
							//_kSERAIL_MON_WRITE("Flush_Running 5: ");
							//_kSERIAL_MON_CLEAR();
							return 1;
    4d28:	81 e0       	ldi	r24, 0x01	; 1
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d2a:	08 95       	ret
    4d2c:	6b ee       	ldi	r22, 0xEB	; 235
    4d2e:	7c e0       	ldi	r23, 0x0C	; 12
    4d30:	87 eb       	ldi	r24, 0xB7	; 183
    4d32:	9e e0       	ldi	r25, 0x0E	; 14
    4d34:	46 dd       	rcall	.-1396   	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
								
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    4d36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4d3a:	81 30       	cpi	r24, 0x01	; 1
    4d3c:	51 f4       	brne	.+20     	; 0x4d52 <_Z17Flush_Controllingv+0x376>
								{
									_kSERAIL_MON_WRITE("Flush_Running 3: ");
    4d3e:	64 ec       	ldi	r22, 0xC4	; 196
    4d40:	72 e0       	ldi	r23, 0x02	; 2
    4d42:	86 ec       	ldi	r24, 0xC6	; 198
    4d44:	94 e1       	ldi	r25, 0x14	; 20
    4d46:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4d4a:	86 ec       	ldi	r24, 0xC6	; 198
    4d4c:	94 e1       	ldi	r25, 0x14	; 20
    4d4e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								
								if(_sPump_Parameter.Irrigation_Status || _sPump_Parameter.Irrigation_Status == _kSET)
    4d52:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    4d56:	88 23       	and	r24, r24
    4d58:	31 f0       	breq	.+12     	; 0x4d66 <_Z17Flush_Controllingv+0x38a>
								{
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4d5a:	88 e5       	ldi	r24, 0x58	; 88
    4d5c:	92 e0       	ldi	r25, 0x02	; 2
    4d5e:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4d62:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
								}
								
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4d66:	84 e0       	ldi	r24, 0x04	; 4
    4d68:	0e 94 6a c9 	call	0x192d4	; 0x192d4 <_Z25Stop_Extra_Plot_Operationh>
								{
									
								}
								
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4d6c:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4d70:	88 23       	and	r24, r24
    4d72:	09 f4       	brne	.+2      	; 0x4d76 <_Z17Flush_Controllingv+0x39a>
    4d74:	ab cf       	rjmp	.-170    	; 0x4ccc <_Z17Flush_Controllingv+0x2f0>
								{
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4d76:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4d7a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4d7e:	90 62       	ori	r25, 0x20	; 32
    4d80:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4d84:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4d88:	84 e0       	ldi	r24, 0x04	; 4
    4d8a:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4d8e:	82 e0       	ldi	r24, 0x02	; 2
    4d90:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
									
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4d94:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4d98:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d9c:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4da0:	81 e0       	ldi	r24, 0x01	; 1
    4da2:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
    4da6:	2e c0       	rjmp	.+92     	; 0x4e04 <_Z17Flush_Controllingv+0x428>
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kSET)
								if(1)
								{
									//_kSERAIL_MON_WRITE("Flush_Running 6.1: ");
									//_kSERIAL_MON_CLEAR();
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4da8:	88 e5       	ldi	r24, 0x58	; 88
    4daa:	92 e0       	ldi	r25, 0x02	; 2
    4dac:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4db0:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
								
									if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4db4:	84 e0       	ldi	r24, 0x04	; 4
    4db6:	0e 94 6a c9 	call	0x192d4	; 0x192d4 <_Z25Stop_Extra_Plot_Operationh>
									{
									
									}
								
									if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4dba:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4dbe:	88 23       	and	r24, r24
    4dc0:	09 f4       	brne	.+2      	; 0x4dc4 <_Z17Flush_Controllingv+0x3e8>
    4dc2:	84 cf       	rjmp	.-248    	; 0x4ccc <_Z17Flush_Controllingv+0x2f0>
									{
										_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4dc4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4dc8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4dcc:	90 62       	ori	r25, 0x20	; 32
    4dce:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4dd2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
										_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4dd6:	84 e0       	ldi	r24, 0x04	; 4
    4dd8:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4ddc:	82 e0       	ldi	r24, 0x02	; 2
    4dde:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
									
										//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4de2:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
										flush_monitor_timer = _kRESET;
    4de6:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4dea:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
										flush_monitoring_trigger = _kSET;
    4dee:	81 e0       	ldi	r24, 0x01	; 1
    4df0:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
									
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4df4:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4df8:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4dfc:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4e00:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
										_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4e04:	f6 dc       	rcall	.-1556   	; 0x47f2 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4e06:	5e cf       	rjmp	.-324    	; 0x4cc4 <_Z17Flush_Controllingv+0x2e8>
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
							}
							
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    4e08:	82 30       	cpi	r24, 0x02	; 2
    4e0a:	08 f4       	brcc	.+2      	; 0x4e0e <_Z17Flush_Controllingv+0x432>
    4e0c:	e8 ce       	rjmp	.-560    	; 0x4bde <_Z17Flush_Controllingv+0x202>
							{
								if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    4e0e:	90 e0       	ldi	r25, 0x00	; 0
    4e10:	02 97       	sbiw	r24, 0x02	; 2
    4e12:	2b e0       	ldi	r18, 0x0B	; 11
    4e14:	28 9f       	mul	r18, r24
    4e16:	f0 01       	movw	r30, r0
    4e18:	29 9f       	mul	r18, r25
    4e1a:	f0 0d       	add	r31, r0
    4e1c:	11 24       	eor	r1, r1
    4e1e:	ec 50       	subi	r30, 0x0C	; 12
    4e20:	f4 4f       	sbci	r31, 0xF4	; 244
    4e22:	80 85       	ldd	r24, Z+8	; 0x08
    4e24:	91 85       	ldd	r25, Z+9	; 0x09
    4e26:	9c 01       	movw	r18, r24
    4e28:	23 70       	andi	r18, 0x03	; 3
    4e2a:	33 27       	eor	r19, r19
    4e2c:	23 30       	cpi	r18, 0x03	; 3
    4e2e:	31 05       	cpc	r19, r1
    4e30:	c1 f4       	brne	.+48     	; 0x4e62 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    4e32:	82 ff       	sbrs	r24, 2
    4e34:	16 c0       	rjmp	.+44     	; 0x4e62 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    4e36:	88 7b       	andi	r24, 0xB8	; 184
    4e38:	92 70       	andi	r25, 0x02	; 2
    4e3a:	89 2b       	or	r24, r25
    4e3c:	09 f4       	brne	.+2      	; 0x4e40 <_Z17Flush_Controllingv+0x464>
    4e3e:	cf ce       	rjmp	.-610    	; 0x4bde <_Z17Flush_Controllingv+0x202>
    4e40:	10 c0       	rjmp	.+32     	; 0x4e62 <_Z17Flush_Controllingv+0x486>
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
							{
								if(_sSchedules.Scheduler_Retry_Timer != 0)
    4e42:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4e46:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4e4a:	89 2b       	or	r24, r25
    4e4c:	09 f4       	brne	.+2      	; 0x4e50 <_Z17Flush_Controllingv+0x474>
    4e4e:	cc ce       	rjmp	.-616    	; 0x4be8 <_Z17Flush_Controllingv+0x20c>
								{
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
    4e50:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4e54:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4e58:	44 96       	adiw	r24, 0x14	; 20
    4e5a:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4e5e:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
    4e62:	80 e0       	ldi	r24, 0x00	; 0
    4e64:	08 95       	ret

00004e66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>:
		}
	}
}

char Valve_Grouping_Handler_For_wireless_Pump(unsigned char Target_Plot_Num, unsigned char on_off)
{
    4e66:	2f 92       	push	r2
    4e68:	3f 92       	push	r3
    4e6a:	4f 92       	push	r4
    4e6c:	5f 92       	push	r5
    4e6e:	6f 92       	push	r6
    4e70:	7f 92       	push	r7
    4e72:	8f 92       	push	r8
    4e74:	9f 92       	push	r9
    4e76:	af 92       	push	r10
    4e78:	bf 92       	push	r11
    4e7a:	cf 92       	push	r12
    4e7c:	df 92       	push	r13
    4e7e:	ef 92       	push	r14
    4e80:	ff 92       	push	r15
    4e82:	0f 93       	push	r16
    4e84:	1f 93       	push	r17
    4e86:	cf 93       	push	r28
    4e88:	df 93       	push	r29
    4e8a:	cd b7       	in	r28, 0x3d	; 61
    4e8c:	de b7       	in	r29, 0x3e	; 62
    4e8e:	e9 97       	sbiw	r28, 0x39	; 57
    4e90:	0f b6       	in	r0, 0x3f	; 63
    4e92:	f8 94       	cli
    4e94:	de bf       	out	0x3e, r29	; 62
    4e96:	0f be       	out	0x3f, r0	; 63
    4e98:	cd bf       	out	0x3d, r28	; 61
    4e9a:	78 2e       	mov	r7, r24
    4e9c:	6b ab       	std	Y+51, r22	; 0x33
	unsigned char i,j,k,count=0,current_valve_number,compare_id,id_len,data_send_counter = 0,temp_data[30];
	unsigned char valve_number_list[_kMAX_LIRA_SENSOR_NODE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO], total_valve_number,valve_number_not_match_flag=0;
	unsigned char hex_array[] = {0x01,0x02,0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
    4e9e:	88 e0       	ldi	r24, 0x08	; 8
    4ea0:	e3 e6       	ldi	r30, 0x63	; 99
    4ea2:	f2 e0       	ldi	r31, 0x02	; 2
    4ea4:	de 01       	movw	r26, r28
    4ea6:	9b 96       	adiw	r26, 0x2b	; 43
    4ea8:	01 90       	ld	r0, Z+
    4eaa:	0d 92       	st	X+, r0
    4eac:	8a 95       	dec	r24
    4eae:	e1 f7       	brne	.-8      	; 0x4ea8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x42>
	
	/******************************************* check weather all valves status is off before starts the irrigation *******************************/
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
    4eb0:	9e 01       	movw	r18, r28
    4eb2:	2f 5f       	subi	r18, 0xFF	; 255
    4eb4:	3f 4f       	sbci	r19, 0xFF	; 255
    4eb6:	29 01       	movw	r4, r18
    4eb8:	8a e2       	ldi	r24, 0x2A	; 42
    4eba:	d9 01       	movw	r26, r18
    4ebc:	1d 92       	st	X+, r1
    4ebe:	8a 95       	dec	r24
    4ec0:	e9 f7       	brne	.-6      	; 0x4ebc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56>
    4ec2:	2e e4       	ldi	r18, 0x4E	; 78
    4ec4:	a2 2e       	mov	r10, r18
    4ec6:	2d e0       	ldi	r18, 0x0D	; 13
    4ec8:	b2 2e       	mov	r11, r18
    4eca:	22 ea       	ldi	r18, 0xA2	; 162
    4ecc:	3d e0       	ldi	r19, 0x0D	; 13
    4ece:	65 01       	movw	r12, r10
	total_valve_number = _kRESET;
    4ed0:	f1 2c       	mov	r15, r1
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
    4ed2:	f6 01       	movw	r30, r12
    4ed4:	80 81       	ld	r24, Z
    4ed6:	81 50       	subi	r24, 0x01	; 1
    4ed8:	8e 30       	cpi	r24, 0x0E	; 14
    4eda:	d8 f5       	brcc	.+118    	; 0x4f52 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xec>
    4edc:	d6 01       	movw	r26, r12
    4ede:	65 e0       	ldi	r22, 0x05	; 5
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
    4ee0:	89 81       	ldd	r24, Y+1	; 0x01
    4ee2:	88 23       	and	r24, r24
    4ee4:	f9 f0       	breq	.+62     	; 0x4f24 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
    4ee6:	10 e0       	ldi	r17, 0x00	; 0
    4ee8:	70 e0       	ldi	r23, 0x00	; 0
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4eea:	87 2f       	mov	r24, r23
    4eec:	90 e0       	ldi	r25, 0x00	; 0
    4eee:	a2 01       	movw	r20, r4
    4ef0:	48 0f       	add	r20, r24
    4ef2:	59 1f       	adc	r21, r25
    4ef4:	fa 01       	movw	r30, r20
    4ef6:	50 81       	ld	r21, Z
    4ef8:	55 23       	and	r21, r21
    4efa:	d1 f0       	breq	.+52     	; 0x4f30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
					{
						if(_sLira_Node_Param[i].Euro_Valve_Group[j])
    4efc:	11 96       	adiw	r26, 0x01	; 1
    4efe:	4c 91       	ld	r20, X
    4f00:	11 97       	sbiw	r26, 0x01	; 1
    4f02:	44 23       	and	r20, r20
    4f04:	69 f0       	breq	.+26     	; 0x4f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
						{
							if(valve_number_list[k] == _sLira_Node_Param[i].Euro_Valve_Group[j])
    4f06:	54 17       	cp	r21, r20
    4f08:	99 f0       	breq	.+38     	; 0x4f30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
							{
								break;
							}
							
							if(valve_number_list[k] != _sLira_Node_Param[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4f0a:	42 e0       	ldi	r20, 0x02	; 2
    4f0c:	50 e0       	ldi	r21, 0x00	; 0
    4f0e:	4c 0f       	add	r20, r28
    4f10:	5d 1f       	adc	r21, r29
    4f12:	84 0f       	add	r24, r20
    4f14:	95 1f       	adc	r25, r21
    4f16:	fc 01       	movw	r30, r24
    4f18:	80 81       	ld	r24, Z
    4f1a:	81 11       	cpse	r24, r1
    4f1c:	01 c0       	rjmp	.+2      	; 0x4f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
							{
								valve_number_not_match_flag = _kSET;
    4f1e:	11 e0       	ldi	r17, 0x01	; 1
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f20:	7f 5f       	subi	r23, 0xFF	; 255
    4f22:	e3 cf       	rjmp	.-58     	; 0x4eea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84>
						}
					}
				}
				else
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j])   // check weather valve is there or not
    4f24:	11 96       	adiw	r26, 0x01	; 1
    4f26:	8c 91       	ld	r24, X
    4f28:	11 97       	sbiw	r26, 0x01	; 1
    4f2a:	81 11       	cpse	r24, r1
    4f2c:	03 c0       	rjmp	.+6      	; 0x4f34 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xce>
    4f2e:	0d c0       	rjmp	.+26     	; 0x4f4a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_not_match_flag = _kSET;
					}
				}
				if(valve_number_not_match_flag)
    4f30:	11 23       	and	r17, r17
    4f32:	59 f0       	breq	.+22     	; 0x4f4a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    4f34:	11 96       	adiw	r26, 0x01	; 1
    4f36:	4c 91       	ld	r20, X
    4f38:	11 97       	sbiw	r26, 0x01	; 1
    4f3a:	43 31       	cpi	r20, 0x13	; 19
    4f3c:	30 f4       	brcc	.+12     	; 0x4f4a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_list[total_valve_number] = _sLira_Node_Param[i].Euro_Valve_Group[j];
    4f3e:	c2 01       	movw	r24, r4
    4f40:	8f 0d       	add	r24, r15
    4f42:	91 1d       	adc	r25, r1
    4f44:	fc 01       	movw	r30, r24
    4f46:	40 83       	st	Z, r20
						total_valve_number++;
    4f48:	f3 94       	inc	r15
    4f4a:	61 50       	subi	r22, 0x01	; 1
    4f4c:	11 96       	adiw	r26, 0x01	; 1
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    4f4e:	61 11       	cpse	r22, r1
    4f50:	c7 cf       	rjmp	.-114    	; 0x4ee0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7a>
    4f52:	f6 e0       	ldi	r31, 0x06	; 6
    4f54:	cf 0e       	add	r12, r31
    4f56:	d1 1c       	adc	r13, r1
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
	total_valve_number = _kRESET;
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    4f58:	2c 15       	cp	r18, r12
    4f5a:	3d 05       	cpc	r19, r13
    4f5c:	09 f0       	breq	.+2      	; 0x4f60 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfa>
    4f5e:	b9 cf       	rjmp	.-142    	; 0x4ed2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6c>
			}
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    4f60:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4f64:	81 30       	cpi	r24, 0x01	; 1
    4f66:	59 f5       	brne	.+86     	; 0x4fbe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
	{
		_kSERAIL_MON_WRITE("valve list is : ");
    4f68:	6e e0       	ldi	r22, 0x0E	; 14
    4f6a:	78 e0       	ldi	r23, 0x08	; 8
    4f6c:	86 ec       	ldi	r24, 0xC6	; 198
    4f6e:	94 e1       	ldi	r25, 0x14	; 20
    4f70:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    4f74:	86 ec       	ldi	r24, 0xC6	; 198
    4f76:	94 e1       	ldi	r25, 0x14	; 20
    4f78:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
		for(i=0;valve_number_list[i]!=0;i++)
    4f7c:	e1 2c       	mov	r14, r1
    4f7e:	82 01       	movw	r16, r4
    4f80:	0e 0d       	add	r16, r14
    4f82:	11 1d       	adc	r17, r1
    4f84:	d8 01       	movw	r26, r16
    4f86:	8c 91       	ld	r24, X
    4f88:	88 23       	and	r24, r24
    4f8a:	c9 f0       	breq	.+50     	; 0x4fbe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
		{
			_kSERAIL_MON_WRITE("valve list enter ");
    4f8c:	6c ef       	ldi	r22, 0xFC	; 252
    4f8e:	77 e0       	ldi	r23, 0x07	; 7
    4f90:	86 ec       	ldi	r24, 0xC6	; 198
    4f92:	94 e1       	ldi	r25, 0x14	; 20
    4f94:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    4f98:	f8 01       	movw	r30, r16
    4f9a:	60 81       	ld	r22, Z
    4f9c:	70 e0       	ldi	r23, 0x00	; 0
    4f9e:	4a e0       	ldi	r20, 0x0A	; 10
    4fa0:	50 e0       	ldi	r21, 0x00	; 0
    4fa2:	86 ec       	ldi	r24, 0xC6	; 198
    4fa4:	94 e1       	ldi	r25, 0x14	; 20
    4fa6:	0e 94 a4 d5 	call	0x1ab48	; 0x1ab48 <_ZN5Print5printEii>
			Serial.println();
    4faa:	86 ec       	ldi	r24, 0xC6	; 198
    4fac:	94 e1       	ldi	r25, 0x14	; 20
    4fae:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
			_kSERIAL_MON_CLEAR();
    4fb2:	86 ec       	ldi	r24, 0xC6	; 198
    4fb4:	94 e1       	ldi	r25, 0x14	; 20
    4fb6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("valve list is : ");
		_kSERIAL_MON_CLEAR();
	
		for(i=0;valve_number_list[i]!=0;i++)
    4fba:	e3 94       	inc	r14
    4fbc:	e0 cf       	rjmp	.-64     	; 0x4f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x118>
	}
	
	
	
	
	if(on_off == _kFORCEFULYY_OFF)
    4fbe:	fb a9       	ldd	r31, Y+51	; 0x33
    4fc0:	f3 30       	cpi	r31, 0x03	; 3
    4fc2:	09 f0       	breq	.+2      	; 0x4fc6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x160>
    4fc4:	7d c0       	rjmp	.+250    	; 0x50c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x25a>
    4fc6:	98 ee       	ldi	r25, 0xE8	; 232
    4fc8:	c9 2e       	mov	r12, r25
    4fca:	9d e0       	ldi	r25, 0x0D	; 13
    4fcc:	d9 2e       	mov	r13, r25
    4fce:	22 e6       	ldi	r18, 0x62	; 98
    4fd0:	3f e0       	ldi	r19, 0x0F	; 15
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
    4fd2:	d6 01       	movw	r26, r12
    4fd4:	11 96       	adiw	r26, 0x01	; 1
    4fd6:	8c 91       	ld	r24, X
    4fd8:	11 97       	sbiw	r26, 0x01	; 1
    4fda:	85 56       	subi	r24, 0x65	; 101
    4fdc:	8e 30       	cpi	r24, 0x0E	; 14
    4fde:	d0 f5       	brcc	.+116    	; 0x5054 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ee>
    4fe0:	65 e0       	ldi	r22, 0x05	; 5
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
    4fe2:	89 81       	ldd	r24, Y+1	; 0x01
    4fe4:	88 23       	and	r24, r24
    4fe6:	f9 f0       	breq	.+62     	; 0x5026 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1c0>
    4fe8:	10 e0       	ldi	r17, 0x00	; 0
    4fea:	70 e0       	ldi	r23, 0x00	; 0
					{
						for(k=0;valve_number_list[k]!=0;k++)
    4fec:	87 2f       	mov	r24, r23
    4fee:	90 e0       	ldi	r25, 0x00	; 0
    4ff0:	a2 01       	movw	r20, r4
    4ff2:	48 0f       	add	r20, r24
    4ff4:	59 1f       	adc	r21, r25
    4ff6:	fa 01       	movw	r30, r20
    4ff8:	50 81       	ld	r21, Z
    4ffa:	55 23       	and	r21, r21
    4ffc:	d1 f0       	breq	.+52     	; 0x5032 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1cc>
						{
							if(_sExtra_Plot[i].Euro_Valve_Group[j])
    4ffe:	15 96       	adiw	r26, 0x05	; 5
    5000:	4c 91       	ld	r20, X
    5002:	15 97       	sbiw	r26, 0x05	; 5
    5004:	44 23       	and	r20, r20
    5006:	69 f0       	breq	.+26     	; 0x5022 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1bc>
							{
								if(valve_number_list[k] == _sExtra_Plot[i].Euro_Valve_Group[j])
    5008:	54 17       	cp	r21, r20
    500a:	99 f0       	breq	.+38     	; 0x5032 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1cc>
								{
									break;
								}
								
								if(valve_number_list[k] != _sExtra_Plot[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    500c:	42 e0       	ldi	r20, 0x02	; 2
    500e:	50 e0       	ldi	r21, 0x00	; 0
    5010:	4c 0f       	add	r20, r28
    5012:	5d 1f       	adc	r21, r29
    5014:	84 0f       	add	r24, r20
    5016:	95 1f       	adc	r25, r21
    5018:	fc 01       	movw	r30, r24
    501a:	80 81       	ld	r24, Z
    501c:	81 11       	cpse	r24, r1
    501e:	01 c0       	rjmp	.+2      	; 0x5022 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1bc>
								{
									valve_number_not_match_flag = _kSET;
    5020:	11 e0       	ldi	r17, 0x01	; 1
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
					{
						for(k=0;valve_number_list[k]!=0;k++)
    5022:	7f 5f       	subi	r23, 0xFF	; 255
    5024:	e3 cf       	rjmp	.-58     	; 0x4fec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x186>
							}
						}
					}
					else
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j])   // check weather valve is there or not
    5026:	15 96       	adiw	r26, 0x05	; 5
    5028:	8c 91       	ld	r24, X
    502a:	15 97       	sbiw	r26, 0x05	; 5
    502c:	81 11       	cpse	r24, r1
    502e:	03 c0       	rjmp	.+6      	; 0x5036 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d0>
    5030:	0d c0       	rjmp	.+26     	; 0x504c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
						{
							valve_number_not_match_flag = _kSET;
						}
					}
					if(valve_number_not_match_flag)
    5032:	11 23       	and	r17, r17
    5034:	59 f0       	breq	.+22     	; 0x504c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5036:	15 96       	adiw	r26, 0x05	; 5
    5038:	4c 91       	ld	r20, X
    503a:	15 97       	sbiw	r26, 0x05	; 5
    503c:	43 31       	cpi	r20, 0x13	; 19
    503e:	30 f4       	brcc	.+12     	; 0x504c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
						{
							valve_number_list[total_valve_number] = _sExtra_Plot[i].Euro_Valve_Group[j];
    5040:	c2 01       	movw	r24, r4
    5042:	8f 0d       	add	r24, r15
    5044:	91 1d       	adc	r25, r1
    5046:	fc 01       	movw	r30, r24
    5048:	40 83       	st	Z, r20
							total_valve_number++;
    504a:	f3 94       	inc	r15
    504c:	61 50       	subi	r22, 0x01	; 1
    504e:	11 96       	adiw	r26, 0x01	; 1
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    5050:	61 11       	cpse	r22, r1
    5052:	c7 cf       	rjmp	.-114    	; 0x4fe2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x17c>
    5054:	fb e1       	ldi	r31, 0x1B	; 27
    5056:	cf 0e       	add	r12, r31
    5058:	d1 1c       	adc	r13, r1
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    505a:	2c 15       	cp	r18, r12
    505c:	3d 05       	cpc	r19, r13
    505e:	09 f0       	breq	.+2      	; 0x5062 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1fc>
    5060:	b8 cf       	rjmp	.-144    	; 0x4fd2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x16c>
				}
				
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5062:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5066:	81 30       	cpi	r24, 0x01	; 1
    5068:	e9 f5       	brne	.+122    	; 0x50e4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27e>
		{
			_kSERAIL_MON_WRITE("valve list is : ");
    506a:	6b ee       	ldi	r22, 0xEB	; 235
    506c:	77 e0       	ldi	r23, 0x07	; 7
    506e:	86 ec       	ldi	r24, 0xC6	; 198
    5070:	94 e1       	ldi	r25, 0x14	; 20
    5072:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    5076:	86 ec       	ldi	r24, 0xC6	; 198
    5078:	94 e1       	ldi	r25, 0x14	; 20
    507a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		
			for(i=0;valve_number_list[i]!=0;i++)
    507e:	f1 2c       	mov	r15, r1
    5080:	82 01       	movw	r16, r4
    5082:	0f 0d       	add	r16, r15
    5084:	11 1d       	adc	r17, r1
    5086:	d8 01       	movw	r26, r16
    5088:	8c 91       	ld	r24, X
    508a:	88 23       	and	r24, r24
    508c:	e9 f0       	breq	.+58     	; 0x50c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x262>
			{
				_kSERAIL_MON_WRITE("valve list enter ");
    508e:	69 ed       	ldi	r22, 0xD9	; 217
    5090:	77 e0       	ldi	r23, 0x07	; 7
    5092:	86 ec       	ldi	r24, 0xC6	; 198
    5094:	94 e1       	ldi	r25, 0x14	; 20
    5096:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    509a:	f8 01       	movw	r30, r16
    509c:	60 81       	ld	r22, Z
    509e:	70 e0       	ldi	r23, 0x00	; 0
    50a0:	4a e0       	ldi	r20, 0x0A	; 10
    50a2:	50 e0       	ldi	r21, 0x00	; 0
    50a4:	86 ec       	ldi	r24, 0xC6	; 198
    50a6:	94 e1       	ldi	r25, 0x14	; 20
    50a8:	0e 94 a4 d5 	call	0x1ab48	; 0x1ab48 <_ZN5Print5printEii>
				Serial.println();
    50ac:	86 ec       	ldi	r24, 0xC6	; 198
    50ae:	94 e1       	ldi	r25, 0x14	; 20
    50b0:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    50b4:	86 ec       	ldi	r24, 0xC6	; 198
    50b6:	94 e1       	ldi	r25, 0x14	; 20
    50b8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    50bc:	f3 94       	inc	r15
    50be:	e0 cf       	rjmp	.-64     	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x21a>
			}
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    50c0:	8b a9       	ldd	r24, Y+51	; 0x33
    50c2:	85 30       	cpi	r24, 0x05	; 5
    50c4:	09 f0       	breq	.+2      	; 0x50c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x262>
    50c6:	9b c1       	rjmp	.+822    	; 0x53fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x598>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    50c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    50cc:	81 30       	cpi	r24, 0x01	; 1
    50ce:	51 f4       	brne	.+20     	; 0x50e4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27e>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    50d0:	6e ea       	ldi	r22, 0xAE	; 174
    50d2:	77 e0       	ldi	r23, 0x07	; 7
    50d4:	86 ec       	ldi	r24, 0xC6	; 198
    50d6:	94 e1       	ldi	r25, 0x14	; 20
    50d8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    50dc:	86 ec       	ldi	r24, 0xC6	; 198
    50de:	94 e1       	ldi	r25, 0x14	; 20
    50e0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    50e4:	05 e1       	ldi	r16, 0x15	; 21
    50e6:	1c e0       	ldi	r17, 0x0C	; 12
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    50e8:	b4 e0       	ldi	r27, 0x04	; 4
    50ea:	cb 2e       	mov	r12, r27
    50ec:	d1 2c       	mov	r13, r1
    50ee:	e1 2c       	mov	r14, r1
    50f0:	f1 2c       	mov	r15, r1
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    50f2:	8d e0       	ldi	r24, 0x0D	; 13
    50f4:	28 2e       	mov	r2, r24
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    50f6:	d8 01       	movw	r26, r16
    50f8:	8c 91       	ld	r24, X
    50fa:	88 23       	and	r24, r24
    50fc:	21 f1       	breq	.+72     	; 0x5146 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2e0>
    50fe:	31 2c       	mov	r3, r1
    5100:	40 e0       	ldi	r20, 0x00	; 0
    5102:	39 c0       	rjmp	.+114    	; 0x5176 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x310>
    5104:	9e 01       	movw	r18, r28
    5106:	25 5d       	subi	r18, 0xD5	; 213
    5108:	3f 4f       	sbci	r19, 0xFF	; 255
    510a:	3d ab       	std	Y+53, r19	; 0x35
    510c:	2c ab       	std	Y+52, r18	; 0x34
			{
				for(k=0;valve_number_list[k]!=0;k++)
    510e:	99 24       	eor	r9, r9
    5110:	93 94       	inc	r9
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
								_kSERIAL_MON_PRINT_NUM(i+1);
    5112:	a7 01       	movw	r20, r14
    5114:	4f 5f       	subi	r20, 0xFF	; 255
    5116:	5f 4f       	sbci	r21, 0xFF	; 255
    5118:	5f ab       	std	Y+55, r21	; 0x37
    511a:	4e ab       	std	Y+54, r20	; 0x36
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    511c:	2e 9c       	mul	r2, r14
    511e:	c0 01       	movw	r24, r0
    5120:	2f 9c       	mul	r2, r15
    5122:	90 0d       	add	r25, r0
    5124:	11 24       	eor	r1, r1
    5126:	dc 01       	movw	r26, r24
    5128:	ab 5e       	subi	r26, 0xEB	; 235
    512a:	b3 4f       	sbci	r27, 0xF3	; 243
    512c:	b9 af       	std	Y+57, r27	; 0x39
    512e:	a8 af       	std	Y+56, r26	; 0x38
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    5130:	ec a9       	ldd	r30, Y+52	; 0x34
    5132:	fd a9       	ldd	r31, Y+53	; 0x35
    5134:	81 91       	ld	r24, Z+
    5136:	fd ab       	std	Y+53, r31	; 0x35
    5138:	ec ab       	std	Y+52, r30	; 0x34
    513a:	83 21       	and	r24, r3
    513c:	49 f5       	brne	.+82     	; 0x5190 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x32a>
    513e:	93 94       	inc	r9
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    5140:	f4 e0       	ldi	r31, 0x04	; 4
    5142:	9f 12       	cpse	r9, r31
    5144:	f5 cf       	rjmp	.-22     	; 0x5130 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2ca>
    5146:	bf ef       	ldi	r27, 0xFF	; 255
    5148:	eb 1a       	sub	r14, r27
    514a:	fb 0a       	sbc	r15, r27
    514c:	03 5f       	subi	r16, 0xF3	; 243
    514e:	1f 4f       	sbci	r17, 0xFF	; 255
    5150:	e3 e0       	ldi	r30, 0x03	; 3
    5152:	ce 0e       	add	r12, r30
    5154:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
    5156:	f5 e0       	ldi	r31, 0x05	; 5
    5158:	ef 16       	cp	r14, r31
    515a:	f1 04       	cpc	r15, r1
    515c:	61 f6       	brne	.-104    	; 0x50f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x290>
    515e:	02 c1       	rjmp	.+516    	; 0x5364 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4fe>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5160:	82 17       	cp	r24, r18
    5162:	93 07       	cpc	r25, r19
    5164:	11 f4       	brne	.+4      	; 0x516a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x304>
						{
							total_valve_number |= hex_array[j];
    5166:	50 81       	ld	r21, Z
    5168:	35 2a       	or	r3, r21
    516a:	01 96       	adiw	r24, 0x01	; 1
    516c:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    516e:	c8 16       	cp	r12, r24
    5170:	d9 06       	cpc	r13, r25
    5172:	b1 f7       	brne	.-20     	; 0x5160 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fa>
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    5174:	4f 5f       	subi	r20, 0xFF	; 255
    5176:	f2 01       	movw	r30, r4
    5178:	e4 0f       	add	r30, r20
    517a:	f1 1d       	adc	r31, r1
    517c:	20 81       	ld	r18, Z
    517e:	22 23       	and	r18, r18
    5180:	09 f4       	brne	.+2      	; 0x5184 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x31e>
    5182:	c0 cf       	rjmp	.-128    	; 0x5104 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x29e>
    5184:	c6 01       	movw	r24, r12
    5186:	03 97       	sbiw	r24, 0x03	; 3
    5188:	fe 01       	movw	r30, r28
    518a:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    518c:	30 e0       	ldi	r19, 0x00	; 0
    518e:	e8 cf       	rjmp	.-48     	; 0x5160 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fa>
    5190:	81 2c       	mov	r8, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    5192:	83 94       	inc	r8
							/****************** if any valve on then turn off that valve first *******************************/
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5194:	a5 ef       	ldi	r26, 0xF5	; 245
    5196:	b3 e1       	ldi	r27, 0x13	; 19
    5198:	e4 e1       	ldi	r30, 0x14	; 20
    519a:	1d 92       	st	X+, r1
    519c:	ea 95       	dec	r30
    519e:	e9 f7       	brne	.-6      	; 0x519a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x334>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    51a0:	d8 01       	movw	r26, r16
    51a2:	11 96       	adiw	r26, 0x01	; 1
    51a4:	8c 91       	ld	r24, X
    51a6:	11 97       	sbiw	r26, 0x01	; 1
    51a8:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    51ac:	12 96       	adiw	r26, 0x02	; 2
    51ae:	8c 91       	ld	r24, X
    51b0:	12 97       	sbiw	r26, 0x02	; 2
    51b2:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    51b6:	13 96       	adiw	r26, 0x03	; 3
    51b8:	8c 91       	ld	r24, X
    51ba:	13 97       	sbiw	r26, 0x03	; 3
    51bc:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    51c0:	14 96       	adiw	r26, 0x04	; 4
    51c2:	8c 91       	ld	r24, X
    51c4:	14 97       	sbiw	r26, 0x04	; 4
    51c6:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    51ca:	15 96       	adiw	r26, 0x05	; 5
    51cc:	8c 91       	ld	r24, X
    51ce:	15 97       	sbiw	r26, 0x05	; 5
    51d0:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    51d4:	16 96       	adiw	r26, 0x06	; 6
    51d6:	8c 91       	ld	r24, X
    51d8:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    51dc:	b2 e0       	ldi	r27, 0x02	; 2
    51de:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
							
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    51e2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    51e6:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    51ea:	90 92 00 14 	sts	0x1400, r9	; 0x801400 <_sRuble_Parameters+0x52>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    51ee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    51f2:	81 30       	cpi	r24, 0x01	; 1
    51f4:	39 f5       	brne	.+78     	; 0x5244 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3de>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
    51f6:	6b e8       	ldi	r22, 0x8B	; 139
    51f8:	77 e0       	ldi	r23, 0x07	; 7
    51fa:	86 ec       	ldi	r24, 0xC6	; 198
    51fc:	94 e1       	ldi	r25, 0x14	; 20
    51fe:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    5202:	4a e0       	ldi	r20, 0x0A	; 10
    5204:	50 e0       	ldi	r21, 0x00	; 0
    5206:	6e a9       	ldd	r22, Y+54	; 0x36
    5208:	7f a9       	ldd	r23, Y+55	; 0x37
    520a:	86 ec       	ldi	r24, 0xC6	; 198
    520c:	94 e1       	ldi	r25, 0x14	; 20
    520e:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    5212:	86 ec       	ldi	r24, 0xC6	; 198
    5214:	94 e1       	ldi	r25, 0x14	; 20
    5216:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    521a:	66 e7       	ldi	r22, 0x76	; 118
    521c:	77 e0       	ldi	r23, 0x07	; 7
    521e:	86 ec       	ldi	r24, 0xC6	; 198
    5220:	94 e1       	ldi	r25, 0x14	; 20
    5222:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,count);
    5226:	4c e0       	ldi	r20, 0x0C	; 12
    5228:	50 e0       	ldi	r21, 0x00	; 0
    522a:	65 ef       	ldi	r22, 0xF5	; 245
    522c:	73 e1       	ldi	r23, 0x13	; 19
    522e:	86 ec       	ldi	r24, 0xC6	; 198
    5230:	94 e1       	ldi	r25, 0x14	; 20
    5232:	a7 da       	rcall	.-2738   	; 0x4782 <_ZN5Print5writeEPKcj>
								Serial.println();
    5234:	86 ec       	ldi	r24, 0xC6	; 198
    5236:	94 e1       	ldi	r25, 0x14	; 20
    5238:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    523c:	86 ec       	ldi	r24, 0xC6	; 198
    523e:	94 e1       	ldi	r25, 0x14	; 20
    5240:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();   // 20/1/2022
    5244:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    5248:	8c e0       	ldi	r24, 0x0C	; 12
    524a:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
							
							
							if(Subscribed_data_check())
    524e:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    5252:	88 23       	and	r24, r24
    5254:	a1 f0       	breq	.+40     	; 0x527e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x418>
							{
								if(Seperate_Out_Sub_Data())
    5256:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    525a:	88 23       	and	r24, r24
    525c:	81 f0       	breq	.+32     	; 0x527e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x418>
								{
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    525e:	e0 ed       	ldi	r30, 0xD0	; 208
    5260:	ff e0       	ldi	r31, 0x0F	; 15
    5262:	01 90       	ld	r0, Z+
    5264:	00 20       	and	r0, r0
    5266:	e9 f7       	brne	.-6      	; 0x5262 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3fc>
    5268:	31 97       	sbiw	r30, 0x01	; 1
    526a:	af 01       	movw	r20, r30
    526c:	40 5d       	subi	r20, 0xD0	; 208
    526e:	5f 40       	sbci	r21, 0x0F	; 15
    5270:	21 e0       	ldi	r18, 0x01	; 1
    5272:	60 ed       	ldi	r22, 0xD0	; 208
    5274:	7f e0       	ldi	r23, 0x0F	; 15
    5276:	82 e6       	ldi	r24, 0x62	; 98
    5278:	9f e0       	ldi	r25, 0x0F	; 15
    527a:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    527e:	88 eb       	ldi	r24, 0xB8	; 184
    5280:	9b e0       	ldi	r25, 0x0B	; 11
    5282:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
    5286:	88 23       	and	r24, r24
    5288:	09 f4       	brne	.+2      	; 0x528c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x426>
    528a:	59 c0       	rjmp	.+178    	; 0x533e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4d8>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    528c:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
								
								if(Subscribed_data_check())
    5290:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    5294:	88 23       	and	r24, r24
    5296:	a1 f0       	breq	.+40     	; 0x52c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45a>
								{
									if(Seperate_Out_Sub_Data())
    5298:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    529c:	88 23       	and	r24, r24
    529e:	81 f0       	breq	.+32     	; 0x52c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45a>
									{
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    52a0:	e0 ed       	ldi	r30, 0xD0	; 208
    52a2:	ff e0       	ldi	r31, 0x0F	; 15
    52a4:	01 90       	ld	r0, Z+
    52a6:	00 20       	and	r0, r0
    52a8:	e9 f7       	brne	.-6      	; 0x52a4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x43e>
    52aa:	31 97       	sbiw	r30, 0x01	; 1
    52ac:	af 01       	movw	r20, r30
    52ae:	40 5d       	subi	r20, 0xD0	; 208
    52b0:	5f 40       	sbci	r21, 0x0F	; 15
    52b2:	21 e0       	ldi	r18, 0x01	; 1
    52b4:	60 ed       	ldi	r22, 0xD0	; 208
    52b6:	7f e0       	ldi	r23, 0x0F	; 15
    52b8:	82 e6       	ldi	r24, 0x62	; 98
    52ba:	9f e0       	ldi	r25, 0x0F	; 15
    52bc:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
								
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    52c0:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    52c2:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    52c4:	28 2f       	mov	r18, r24
    52c6:	30 e0       	ldi	r19, 0x00	; 0
    52c8:	e8 ad       	ldd	r30, Y+56	; 0x38
    52ca:	f9 ad       	ldd	r31, Y+57	; 0x39
    52cc:	e2 0f       	add	r30, r18
    52ce:	f3 1f       	adc	r31, r19
    52d0:	d9 01       	movw	r26, r18
    52d2:	a7 5f       	subi	r26, 0xF7	; 247
    52d4:	bb 4e       	sbci	r27, 0xEB	; 235
    52d6:	41 81       	ldd	r20, Z+1	; 0x01
    52d8:	2c 91       	ld	r18, X
    52da:	42 17       	cp	r20, r18
    52dc:	11 f0       	breq	.+4      	; 0x52e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x47c>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    52de:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    52e0:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    52e2:	9f 5f       	subi	r25, 0xFF	; 255
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    52e4:	8f 5f       	subi	r24, 0xFF	; 255
    52e6:	86 30       	cpi	r24, 0x06	; 6
    52e8:	68 f3       	brcs	.-38     	; 0x52c4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45e>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    52ea:	96 30       	cpi	r25, 0x06	; 6
    52ec:	c9 f4       	brne	.+50     	; 0x5320 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ba>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    52ee:	81 e0       	ldi	r24, 0x01	; 1
    52f0:	f8 01       	movw	r30, r16
    52f2:	83 87       	std	Z+11, r24	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    52f4:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    52f8:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    52fa:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    52fe:	90 e0       	ldi	r25, 0x00	; 0
    5300:	98 2f       	mov	r25, r24
    5302:	88 27       	eor	r24, r24
    5304:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    5308:	83 2b       	or	r24, r19
    530a:	91 87       	std	Z+9, r25	; 0x09
    530c:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    530e:	22 23       	and	r18, r18
    5310:	e9 f0       	breq	.+58     	; 0x534c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4e6>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5312:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5316:	81 30       	cpi	r24, 0x01	; 1
    5318:	d9 f4       	brne	.+54     	; 0x5350 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier on)");
    531a:	61 e5       	ldi	r22, 0x51	; 81
    531c:	77 e0       	ldi	r23, 0x07	; 7
    531e:	06 c0       	rjmp	.+12     	; 0x532c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4c6>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5320:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5324:	81 30       	cpi	r24, 0x01	; 1
    5326:	a1 f4       	brne	.+40     	; 0x5350 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
									{
										_kSERAIL_MON_WRITE("valve id not match(before start)");
    5328:	60 e3       	ldi	r22, 0x30	; 48
    532a:	77 e0       	ldi	r23, 0x07	; 7
    532c:	86 ec       	ldi	r24, 0xC6	; 198
    532e:	94 e1       	ldi	r25, 0x14	; 20
    5330:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5334:	86 ec       	ldi	r24, 0xC6	; 198
    5336:	94 e1       	ldi	r25, 0x14	; 20
    5338:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    533c:	09 c0       	rjmp	.+18     	; 0x5350 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    533e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5342:	81 30       	cpi	r24, 0x01	; 1
    5344:	29 f4       	brne	.+10     	; 0x5350 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
    5346:	69 e0       	ldi	r22, 0x09	; 9
    5348:	77 e0       	ldi	r23, 0x07	; 7
    534a:	f0 cf       	rjmp	.-32     	; 0x532c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4c6>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    534c:	e3 e0       	ldi	r30, 0x03	; 3
    534e:	8e 2e       	mov	r8, r30
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    5350:	68 ee       	ldi	r22, 0xE8	; 232
    5352:	73 e0       	ldi	r23, 0x03	; 3
    5354:	80 e0       	ldi	r24, 0x00	; 0
    5356:	90 e0       	ldi	r25, 0x00	; 0
    5358:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    535c:	f3 e0       	ldi	r31, 0x03	; 3
    535e:	8f 12       	cpse	r8, r31
    5360:	18 cf       	rjmp	.-464    	; 0x5192 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x32c>
    5362:	ed ce       	rjmp	.-550    	; 0x513e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2d8>
			}
			
		}
	}
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    5364:	2b a9       	ldd	r18, Y+51	; 0x33
    5366:	23 30       	cpi	r18, 0x03	; 3
    5368:	11 f4       	brne	.+4      	; 0x536e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x508>
    536a:	0c 94 69 32 	jmp	0x64d2	; 0x64d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
    536e:	25 30       	cpi	r18, 0x05	; 5
    5370:	09 f0       	breq	.+2      	; 0x5374 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x50e>
    5372:	45 c0       	rjmp	.+138    	; 0x53fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x598>
    5374:	7e e0       	ldi	r23, 0x0E	; 14
    5376:	f7 2e       	mov	r15, r23
    5378:	00 e0       	ldi	r16, 0x00	; 0
    537a:	10 e0       	ldi	r17, 0x00	; 0
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    537c:	f5 01       	movw	r30, r10
    537e:	e0 0f       	add	r30, r16
    5380:	f1 1f       	adc	r31, r17
    5382:	e1 81       	ldd	r30, Z+1	; 0x01
    5384:	e3 31       	cpi	r30, 0x13	; 19
    5386:	68 f0       	brcs	.+26     	; 0x53a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x53c>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5388:	f0 e0       	ldi	r31, 0x00	; 0
    538a:	e7 5c       	subi	r30, 0xC7	; 199
    538c:	fb 4e       	sbci	r31, 0xEB	; 235
    538e:	61 e0       	ldi	r22, 0x01	; 1
    5390:	80 81       	ld	r24, Z
    5392:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
						_kDELAY_MS(200);
    5396:	68 ec       	ldi	r22, 0xC8	; 200
    5398:	70 e0       	ldi	r23, 0x00	; 0
    539a:	80 e0       	ldi	r24, 0x00	; 0
    539c:	90 e0       	ldi	r25, 0x00	; 0
    539e:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    53a2:	0f 5f       	subi	r16, 0xFF	; 255
    53a4:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    53a6:	05 30       	cpi	r16, 0x05	; 5
    53a8:	11 05       	cpc	r17, r1
    53aa:	41 f7       	brne	.-48     	; 0x537c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x516>
    53ac:	fa 94       	dec	r15
    53ae:	36 e0       	ldi	r19, 0x06	; 6
    53b0:	a3 0e       	add	r10, r19
    53b2:	b1 1c       	adc	r11, r1
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
    53b4:	f1 10       	cpse	r15, r1
    53b6:	e0 cf       	rjmp	.-64     	; 0x5378 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x512>
						_kDELAY_MS(200);
					}
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
    53b8:	80 91 3a 0e 	lds	r24, 0x0E3A	; 0x800e3a <_sExtra_Plot+0x52>
    53bc:	88 36       	cpi	r24, 0x68	; 104
    53be:	11 f0       	breq	.+4      	; 0x53c4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x55e>
    53c0:	0c 94 69 32 	jmp	0x64d2	; 0x64d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
    53c4:	0e e3       	ldi	r16, 0x3E	; 62
    53c6:	1e e0       	ldi	r17, 0x0E	; 14
    53c8:	63 e4       	ldi	r22, 0x43	; 67
    53ca:	e6 2e       	mov	r14, r22
    53cc:	6e e0       	ldi	r22, 0x0E	; 14
    53ce:	f6 2e       	mov	r15, r22
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    53d0:	d8 01       	movw	r26, r16
    53d2:	ed 91       	ld	r30, X+
    53d4:	8d 01       	movw	r16, r26
    53d6:	e3 31       	cpi	r30, 0x13	; 19
    53d8:	68 f0       	brcs	.+26     	; 0x53f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x58e>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    53da:	f0 e0       	ldi	r31, 0x00	; 0
    53dc:	e7 5c       	subi	r30, 0xC7	; 199
    53de:	fb 4e       	sbci	r31, 0xEB	; 235
    53e0:	61 e0       	ldi	r22, 0x01	; 1
    53e2:	80 81       	ld	r24, Z
    53e4:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
						_kDELAY_MS(200);
    53e8:	68 ec       	ldi	r22, 0xC8	; 200
    53ea:	70 e0       	ldi	r23, 0x00	; 0
    53ec:	80 e0       	ldi	r24, 0x00	; 0
    53ee:	90 e0       	ldi	r25, 0x00	; 0
    53f0:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    53f4:	e0 16       	cp	r14, r16
    53f6:	f1 06       	cpc	r15, r17
    53f8:	59 f7       	brne	.-42     	; 0x53d0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56a>
    53fa:	0c 94 69 32 	jmp	0x64d2	; 0x64d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
	
	
	
	
	
	if(on_off == _kON)
    53fe:	bb a9       	ldd	r27, Y+51	; 0x33
    5400:	b1 30       	cpi	r27, 0x01	; 1
    5402:	09 f0       	breq	.+2      	; 0x5406 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5a0>
    5404:	49 c1       	rjmp	.+658    	; 0x5698 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x832>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5406:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    540a:	81 30       	cpi	r24, 0x01	; 1
    540c:	51 f4       	brne	.+20     	; 0x5422 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5bc>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    540e:	6e ed       	ldi	r22, 0xDE	; 222
    5410:	76 e0       	ldi	r23, 0x06	; 6
    5412:	86 ec       	ldi	r24, 0xC6	; 198
    5414:	94 e1       	ldi	r25, 0x14	; 20
    5416:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    541a:	86 ec       	ldi	r24, 0xC6	; 198
    541c:	94 e1       	ldi	r25, 0x14	; 20
    541e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    5422:	05 e1       	ldi	r16, 0x15	; 21
    5424:	1c e0       	ldi	r17, 0x0C	; 12
    5426:	44 e0       	ldi	r20, 0x04	; 4
    5428:	a4 2e       	mov	r10, r20
    542a:	b1 2c       	mov	r11, r1
    542c:	e1 2c       	mov	r14, r1
    542e:	f1 2c       	mov	r15, r1
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5430:	5d e0       	ldi	r21, 0x0D	; 13
    5432:	85 2e       	mov	r8, r21
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    5434:	f8 01       	movw	r30, r16
    5436:	82 85       	ldd	r24, Z+10	; 0x0a
    5438:	88 23       	and	r24, r24
    543a:	01 f1       	breq	.+64     	; 0x547c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x616>
    543c:	91 2c       	mov	r9, r1
    543e:	40 e0       	ldi	r20, 0x00	; 0
    5440:	35 c0       	rjmp	.+106    	; 0x54ac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x646>
    5442:	ae 01       	movw	r20, r28
    5444:	45 5d       	subi	r20, 0xD5	; 213
    5446:	5f 4f       	sbci	r21, 0xFF	; 255
    5448:	1a 01       	movw	r2, r20
			{
				for(k=0;valve_number_list[k]!=0;k++)
    544a:	dd 24       	eor	r13, r13
    544c:	d3 94       	inc	r13
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
								_kSERIAL_MON_PRINT_NUM(i+1);
    544e:	c7 01       	movw	r24, r14
    5450:	01 96       	adiw	r24, 0x01	; 1
    5452:	9d ab       	std	Y+53, r25	; 0x35
    5454:	8c ab       	std	Y+52, r24	; 0x34
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5456:	8e 9c       	mul	r8, r14
    5458:	c0 01       	movw	r24, r0
    545a:	8f 9c       	mul	r8, r15
    545c:	90 0d       	add	r25, r0
    545e:	11 24       	eor	r1, r1
    5460:	dc 01       	movw	r26, r24
    5462:	ab 5e       	subi	r26, 0xEB	; 235
    5464:	b3 4f       	sbci	r27, 0xF3	; 243
    5466:	bf ab       	std	Y+55, r27	; 0x37
    5468:	ae ab       	std	Y+54, r26	; 0x36
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    546a:	f1 01       	movw	r30, r2
    546c:	81 91       	ld	r24, Z+
    546e:	1f 01       	movw	r2, r30
    5470:	89 21       	and	r24, r9
    5472:	41 f5       	brne	.+80     	; 0x54c4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x65e>
    5474:	d3 94       	inc	r13
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    5476:	f4 e0       	ldi	r31, 0x04	; 4
    5478:	df 12       	cpse	r13, r31
    547a:	f7 cf       	rjmp	.-18     	; 0x546a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x604>
    547c:	ff ef       	ldi	r31, 0xFF	; 255
    547e:	ef 1a       	sub	r14, r31
    5480:	ff 0a       	sbc	r15, r31
    5482:	03 5f       	subi	r16, 0xF3	; 243
    5484:	1f 4f       	sbci	r17, 0xFF	; 255
    5486:	23 e0       	ldi	r18, 0x03	; 3
    5488:	a2 0e       	add	r10, r18
    548a:	b1 1c       	adc	r11, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
    548c:	36 e0       	ldi	r19, 0x06	; 6
    548e:	e3 16       	cp	r14, r19
    5490:	f1 04       	cpc	r15, r1
    5492:	81 f6       	brne	.-96     	; 0x5434 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5ce>
    5494:	05 c1       	rjmp	.+522    	; 0x56a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x83a>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5496:	28 17       	cp	r18, r24
    5498:	39 07       	cpc	r19, r25
    549a:	11 f4       	brne	.+4      	; 0x54a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x63a>
						{
							total_valve_number |= hex_array[j];
    549c:	50 81       	ld	r21, Z
    549e:	95 2a       	or	r9, r21
    54a0:	01 96       	adiw	r24, 0x01	; 1
    54a2:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    54a4:	a8 16       	cp	r10, r24
    54a6:	b9 06       	cpc	r11, r25
    54a8:	b1 f7       	brne	.-20     	; 0x5496 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x630>
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    54aa:	4f 5f       	subi	r20, 0xFF	; 255
    54ac:	f2 01       	movw	r30, r4
    54ae:	e4 0f       	add	r30, r20
    54b0:	f1 1d       	adc	r31, r1
    54b2:	20 81       	ld	r18, Z
    54b4:	22 23       	and	r18, r18
    54b6:	29 f2       	breq	.-118    	; 0x5442 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5dc>
    54b8:	c5 01       	movw	r24, r10
    54ba:	03 97       	sbiw	r24, 0x03	; 3
    54bc:	fe 01       	movw	r30, r28
    54be:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    54c0:	30 e0       	ldi	r19, 0x00	; 0
    54c2:	e9 cf       	rjmp	.-46     	; 0x5496 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x630>
    54c4:	c1 2c       	mov	r12, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    54c6:	c3 94       	inc	r12
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    54c8:	a5 ef       	ldi	r26, 0xF5	; 245
    54ca:	b3 e1       	ldi	r27, 0x13	; 19
    54cc:	e4 e1       	ldi	r30, 0x14	; 20
    54ce:	1d 92       	st	X+, r1
    54d0:	ea 95       	dec	r30
    54d2:	e9 f7       	brne	.-6      	; 0x54ce <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x668>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    54d4:	d8 01       	movw	r26, r16
    54d6:	11 96       	adiw	r26, 0x01	; 1
    54d8:	8c 91       	ld	r24, X
    54da:	11 97       	sbiw	r26, 0x01	; 1
    54dc:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    54e0:	12 96       	adiw	r26, 0x02	; 2
    54e2:	8c 91       	ld	r24, X
    54e4:	12 97       	sbiw	r26, 0x02	; 2
    54e6:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    54ea:	13 96       	adiw	r26, 0x03	; 3
    54ec:	8c 91       	ld	r24, X
    54ee:	13 97       	sbiw	r26, 0x03	; 3
    54f0:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    54f4:	14 96       	adiw	r26, 0x04	; 4
    54f6:	8c 91       	ld	r24, X
    54f8:	14 97       	sbiw	r26, 0x04	; 4
    54fa:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    54fe:	15 96       	adiw	r26, 0x05	; 5
    5500:	8c 91       	ld	r24, X
    5502:	15 97       	sbiw	r26, 0x05	; 5
    5504:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    5508:	16 96       	adiw	r26, 0x06	; 6
    550a:	8c 91       	ld	r24, X
    550c:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5510:	b2 e0       	ldi	r27, 0x02	; 2
    5512:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5516:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    551a:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    551e:	d0 92 00 14 	sts	0x1400, r13	; 0x801400 <_sRuble_Parameters+0x52>
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5522:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5526:	81 30       	cpi	r24, 0x01	; 1
    5528:	39 f5       	brne	.+78     	; 0x5578 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x712>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
    552a:	6a eb       	ldi	r22, 0xBA	; 186
    552c:	76 e0       	ldi	r23, 0x06	; 6
    552e:	86 ec       	ldi	r24, 0xC6	; 198
    5530:	94 e1       	ldi	r25, 0x14	; 20
    5532:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    5536:	4a e0       	ldi	r20, 0x0A	; 10
    5538:	50 e0       	ldi	r21, 0x00	; 0
    553a:	6c a9       	ldd	r22, Y+52	; 0x34
    553c:	7d a9       	ldd	r23, Y+53	; 0x35
    553e:	86 ec       	ldi	r24, 0xC6	; 198
    5540:	94 e1       	ldi	r25, 0x14	; 20
    5542:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    5546:	86 ec       	ldi	r24, 0xC6	; 198
    5548:	94 e1       	ldi	r25, 0x14	; 20
    554a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    554e:	65 ea       	ldi	r22, 0xA5	; 165
    5550:	76 e0       	ldi	r23, 0x06	; 6
    5552:	86 ec       	ldi	r24, 0xC6	; 198
    5554:	94 e1       	ldi	r25, 0x14	; 20
    5556:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,6);
    555a:	46 e0       	ldi	r20, 0x06	; 6
    555c:	50 e0       	ldi	r21, 0x00	; 0
    555e:	65 ef       	ldi	r22, 0xF5	; 245
    5560:	73 e1       	ldi	r23, 0x13	; 19
    5562:	86 ec       	ldi	r24, 0xC6	; 198
    5564:	94 e1       	ldi	r25, 0x14	; 20
    5566:	0d d9       	rcall	.-3558   	; 0x4782 <_ZN5Print5writeEPKcj>
								Serial.println();
    5568:	86 ec       	ldi	r24, 0xC6	; 198
    556a:	94 e1       	ldi	r25, 0x14	; 20
    556c:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    5570:	86 ec       	ldi	r24, 0xC6	; 198
    5572:	94 e1       	ldi	r25, 0x14	; 20
    5574:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    5578:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    557c:	8c e0       	ldi	r24, 0x0C	; 12
    557e:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
							
							if(Subscribed_data_check())
    5582:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    5586:	88 23       	and	r24, r24
    5588:	a1 f0       	breq	.+40     	; 0x55b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74c>
							{
								if(Seperate_Out_Sub_Data())
    558a:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    558e:	88 23       	and	r24, r24
    5590:	81 f0       	breq	.+32     	; 0x55b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74c>
								{
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5592:	e0 ed       	ldi	r30, 0xD0	; 208
    5594:	ff e0       	ldi	r31, 0x0F	; 15
    5596:	01 90       	ld	r0, Z+
    5598:	00 20       	and	r0, r0
    559a:	e9 f7       	brne	.-6      	; 0x5596 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x730>
    559c:	31 97       	sbiw	r30, 0x01	; 1
    559e:	af 01       	movw	r20, r30
    55a0:	40 5d       	subi	r20, 0xD0	; 208
    55a2:	5f 40       	sbci	r21, 0x0F	; 15
    55a4:	21 e0       	ldi	r18, 0x01	; 1
    55a6:	60 ed       	ldi	r22, 0xD0	; 208
    55a8:	7f e0       	ldi	r23, 0x0F	; 15
    55aa:	82 e6       	ldi	r24, 0x62	; 98
    55ac:	9f e0       	ldi	r25, 0x0F	; 15
    55ae:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    55b2:	88 eb       	ldi	r24, 0xB8	; 184
    55b4:	9b e0       	ldi	r25, 0x0B	; 11
    55b6:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
    55ba:	88 23       	and	r24, r24
    55bc:	09 f4       	brne	.+2      	; 0x55c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75a>
    55be:	59 c0       	rjmp	.+178    	; 0x5672 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x80c>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    55c0:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
								
								if(Subscribed_data_check())
    55c4:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    55c8:	88 23       	and	r24, r24
    55ca:	a1 f0       	breq	.+40     	; 0x55f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x78e>
								{
									if(Seperate_Out_Sub_Data())
    55cc:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    55d0:	88 23       	and	r24, r24
    55d2:	81 f0       	breq	.+32     	; 0x55f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x78e>
									{
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    55d4:	e0 ed       	ldi	r30, 0xD0	; 208
    55d6:	ff e0       	ldi	r31, 0x0F	; 15
    55d8:	01 90       	ld	r0, Z+
    55da:	00 20       	and	r0, r0
    55dc:	e9 f7       	brne	.-6      	; 0x55d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x772>
    55de:	31 97       	sbiw	r30, 0x01	; 1
    55e0:	af 01       	movw	r20, r30
    55e2:	40 5d       	subi	r20, 0xD0	; 208
    55e4:	5f 40       	sbci	r21, 0x0F	; 15
    55e6:	21 e0       	ldi	r18, 0x01	; 1
    55e8:	60 ed       	ldi	r22, 0xD0	; 208
    55ea:	7f e0       	ldi	r23, 0x0F	; 15
    55ec:	82 e6       	ldi	r24, 0x62	; 98
    55ee:	9f e0       	ldi	r25, 0x0F	; 15
    55f0:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
									}
								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    55f4:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    55f6:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    55f8:	28 2f       	mov	r18, r24
    55fa:	30 e0       	ldi	r19, 0x00	; 0
    55fc:	ee a9       	ldd	r30, Y+54	; 0x36
    55fe:	ff a9       	ldd	r31, Y+55	; 0x37
    5600:	e2 0f       	add	r30, r18
    5602:	f3 1f       	adc	r31, r19
    5604:	d9 01       	movw	r26, r18
    5606:	a7 5f       	subi	r26, 0xF7	; 247
    5608:	bb 4e       	sbci	r27, 0xEB	; 235
    560a:	41 81       	ldd	r20, Z+1	; 0x01
    560c:	2c 91       	ld	r18, X
    560e:	42 17       	cp	r20, r18
    5610:	11 f0       	breq	.+4      	; 0x5616 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7b0>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    5612:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    5614:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    5616:	9f 5f       	subi	r25, 0xFF	; 255
								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5618:	8f 5f       	subi	r24, 0xFF	; 255
    561a:	86 30       	cpi	r24, 0x06	; 6
    561c:	68 f3       	brcs	.-38     	; 0x55f8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x792>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    561e:	96 30       	cpi	r25, 0x06	; 6
    5620:	c9 f4       	brne	.+50     	; 0x5654 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7ee>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5622:	81 e0       	ldi	r24, 0x01	; 1
    5624:	f8 01       	movw	r30, r16
    5626:	83 87       	std	Z+11, r24	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    5628:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    562c:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    562e:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    5632:	90 e0       	ldi	r25, 0x00	; 0
    5634:	98 2f       	mov	r25, r24
    5636:	88 27       	eor	r24, r24
    5638:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    563c:	83 2b       	or	r24, r19
    563e:	91 87       	std	Z+9, r25	; 0x09
    5640:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    5642:	22 23       	and	r18, r18
    5644:	e9 f0       	breq	.+58     	; 0x5680 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81a>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5646:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    564a:	81 30       	cpi	r24, 0x01	; 1
    564c:	d9 f4       	brne	.+54     	; 0x5684 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier onn)");
    564e:	6f e7       	ldi	r22, 0x7F	; 127
    5650:	76 e0       	ldi	r23, 0x06	; 6
    5652:	06 c0       	rjmp	.+12     	; 0x5660 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7fa>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5654:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5658:	81 30       	cpi	r24, 0x01	; 1
    565a:	a1 f4       	brne	.+40     	; 0x5684 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
									{
										_kSERAIL_MON_WRITE("valve id not match(before startt)");
    565c:	6d e5       	ldi	r22, 0x5D	; 93
    565e:	76 e0       	ldi	r23, 0x06	; 6
    5660:	86 ec       	ldi	r24, 0xC6	; 198
    5662:	94 e1       	ldi	r25, 0x14	; 20
    5664:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5668:	86 ec       	ldi	r24, 0xC6	; 198
    566a:	94 e1       	ldi	r25, 0x14	; 20
    566c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    5670:	09 c0       	rjmp	.+18     	; 0x5684 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    5672:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5676:	81 30       	cpi	r24, 0x01	; 1
    5678:	29 f4       	brne	.+10     	; 0x5684 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
    567a:	6f e2       	ldi	r22, 0x2F	; 47
    567c:	76 e0       	ldi	r23, 0x06	; 6
    567e:	f0 cf       	rjmp	.-32     	; 0x5660 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7fa>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    5680:	23 e0       	ldi	r18, 0x03	; 3
    5682:	c2 2e       	mov	r12, r18
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    5684:	68 ee       	ldi	r22, 0xE8	; 232
    5686:	73 e0       	ldi	r23, 0x03	; 3
    5688:	80 e0       	ldi	r24, 0x00	; 0
    568a:	90 e0       	ldi	r25, 0x00	; 0
    568c:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    5690:	f3 e0       	ldi	r31, 0x03	; 3
    5692:	cf 12       	cpse	r12, r31
    5694:	18 cf       	rjmp	.-464    	; 0x54c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x660>
    5696:	ee ce       	rjmp	.-548    	; 0x5474 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x60e>
	}
	
	
	/************************************************* if everything ok then turn on or off the valves *********************************************/
	
	switch(on_off)
    5698:	2b a9       	ldd	r18, Y+51	; 0x33
    569a:	22 30       	cpi	r18, 0x02	; 2
    569c:	08 f0       	brcs	.+2      	; 0x56a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x83a>
    569e:	18 c7       	rjmp	.+3632   	; 0x64d0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166a>
    56a0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
		case _kON:
		case _kOFF:
		{
			/* check weather the plot is already irrigating or not  to stop the irrigation */
			
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
    56a4:	3e e0       	ldi	r19, 0x0E	; 14
    56a6:	37 15       	cp	r19, r7
    56a8:	08 f4       	brcc	.+2      	; 0x56ac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x846>
    56aa:	b4 c3       	rjmp	.+1896   	; 0x5e14 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfae>
    56ac:	46 e0       	ldi	r20, 0x06	; 6
    56ae:	74 9e       	mul	r7, r20
    56b0:	80 01       	movw	r16, r0
    56b2:	11 24       	eor	r1, r1
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    56b4:	81 30       	cpi	r24, 0x01	; 1
    56b6:	d9 f5       	brne	.+118    	; 0x572e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8c8>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    56b8:	61 e2       	ldi	r22, 0x21	; 33
    56ba:	76 e0       	ldi	r23, 0x06	; 6
    56bc:	86 ec       	ldi	r24, 0xC6	; 198
    56be:	94 e1       	ldi	r25, 0x14	; 20
    56c0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    56c4:	86 ec       	ldi	r24, 0xC6	; 198
    56c6:	94 e1       	ldi	r25, 0x14	; 20
    56c8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    56cc:	e1 2c       	mov	r14, r1
    56ce:	f1 2c       	mov	r15, r1
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
    56d0:	c7 2c       	mov	r12, r7
    56d2:	d1 2c       	mov	r13, r1
    56d4:	51 e0       	ldi	r21, 0x01	; 1
    56d6:	c5 1a       	sub	r12, r21
    56d8:	d1 08       	sbc	r13, r1
    56da:	f7 01       	movw	r30, r14
    56dc:	e0 0f       	add	r30, r16
    56de:	f1 1f       	adc	r31, r17
    56e0:	e7 5b       	subi	r30, 0xB7	; 183
    56e2:	f2 4f       	sbci	r31, 0xF2	; 242
    56e4:	4a e0       	ldi	r20, 0x0A	; 10
    56e6:	50 e0       	ldi	r21, 0x00	; 0
    56e8:	60 81       	ld	r22, Z
    56ea:	86 ec       	ldi	r24, 0xC6	; 198
    56ec:	94 e1       	ldi	r25, 0x14	; 20
    56ee:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
						_kSERAIL_MON_WRITE_NO_LN(" ");
    56f2:	6f e1       	ldi	r22, 0x1F	; 31
    56f4:	76 e0       	ldi	r23, 0x06	; 6
    56f6:	86 ec       	ldi	r24, 0xC6	; 198
    56f8:	94 e1       	ldi	r25, 0x14	; 20
    56fa:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    56fe:	8f ef       	ldi	r24, 0xFF	; 255
    5700:	e8 1a       	sub	r14, r24
    5702:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5704:	95 e0       	ldi	r25, 0x05	; 5
    5706:	e9 16       	cp	r14, r25
    5708:	f1 04       	cpc	r15, r1
    570a:	39 f7       	brne	.-50     	; 0x56da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x874>
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
						_kSERAIL_MON_WRITE_NO_LN(" ");
					}
				
					_kSERAIL_MON_WRITE_NO_LN("Target_Plot_Num plot no : ");
    570c:	64 e0       	ldi	r22, 0x04	; 4
    570e:	76 e0       	ldi	r23, 0x06	; 6
    5710:	86 ec       	ldi	r24, 0xC6	; 198
    5712:	94 e1       	ldi	r25, 0x14	; 20
    5714:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5718:	4a e0       	ldi	r20, 0x0A	; 10
    571a:	50 e0       	ldi	r21, 0x00	; 0
    571c:	b6 01       	movw	r22, r12
    571e:	86 ec       	ldi	r24, 0xC6	; 198
    5720:	94 e1       	ldi	r25, 0x14	; 20
    5722:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5726:	86 ec       	ldi	r24, 0xC6	; 198
    5728:	94 e1       	ldi	r25, 0x14	; 20
    572a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    572e:	07 5b       	subi	r16, 0xB7	; 183
    5730:	12 4f       	sbci	r17, 0xF2	; 242
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
    5732:	b5 e0       	ldi	r27, 0x05	; 5
    5734:	2b 2e       	mov	r2, r27
    5736:	80 e0       	ldi	r24, 0x00	; 0
					if(same_valve == _kRESET)
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    5738:	e7 2c       	mov	r14, r7
    573a:	f1 2c       	mov	r15, r1
    573c:	a1 e0       	ldi	r26, 0x01	; 1
    573e:	ea 1a       	sub	r14, r26
    5740:	f1 08       	sbc	r15, r1
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5742:	9b a9       	ldd	r25, Y+51	; 0x33
    5744:	b1 e0       	ldi	r27, 0x01	; 1
    5746:	9b 27       	eor	r25, r27
    5748:	91 70       	andi	r25, 0x01	; 1
    574a:	9e ab       	std	Y+54, r25	; 0x36
								if(Subscribed_data_check())
								{
									if(Seperate_Out_Sub_Data())
									{
										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    574c:	90 ed       	ldi	r25, 0xD0	; 208
    574e:	a9 2e       	mov	r10, r25
    5750:	9f e0       	ldi	r25, 0x0F	; 15
    5752:	b9 2e       	mov	r11, r25
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(on_off == _kOFF)
    5754:	eb a9       	ldd	r30, Y+51	; 0x33
    5756:	e1 11       	cpse	r30, r1
    5758:	1f c0       	rjmp	.+62     	; 0x5798 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x932>
					{
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
    575a:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    575e:	72 16       	cp	r7, r18
    5760:	c9 f0       	breq	.+50     	; 0x5794 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x92e>
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
    5762:	22 23       	and	r18, r18
    5764:	c9 f0       	breq	.+50     	; 0x5798 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x932>
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    5766:	d8 01       	movw	r26, r16
    5768:	9c 91       	ld	r25, X
    576a:	b6 e0       	ldi	r27, 0x06	; 6
    576c:	2b 9f       	mul	r18, r27
    576e:	90 01       	movw	r18, r0
    5770:	11 24       	eor	r1, r1
    5772:	40 e0       	ldi	r20, 0x00	; 0
    5774:	50 e0       	ldi	r21, 0x00	; 0
    5776:	80 e0       	ldi	r24, 0x00	; 0
    5778:	fa 01       	movw	r30, r20
    577a:	e2 0f       	add	r30, r18
    577c:	f3 1f       	adc	r31, r19
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
    577e:	e7 5b       	subi	r30, 0xB7	; 183
    5780:	f2 4f       	sbci	r31, 0xF2	; 242
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    5782:	60 81       	ld	r22, Z
    5784:	96 13       	cpse	r25, r22
    5786:	01 c0       	rjmp	.+2      	; 0x578a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x924>
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
									{
										same_valve = _kSET;
    5788:	81 e0       	ldi	r24, 0x01	; 1
    578a:	4f 5f       	subi	r20, 0xFF	; 255
    578c:	5f 4f       	sbci	r21, 0xFF	; 255
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
    578e:	45 30       	cpi	r20, 0x05	; 5
    5790:	51 05       	cpc	r21, r1
    5792:	91 f7       	brne	.-28     	; 0x5778 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x912>
					else
					{
						same_valve = _kRESET;
					}
					
					if(same_valve == _kRESET)
    5794:	81 11       	cpse	r24, r1
    5796:	2e c3       	rjmp	.+1628   	; 0x5df4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf8e>
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    5798:	f8 01       	movw	r30, r16
    579a:	d0 80       	ld	r13, Z
    579c:	8f ef       	ldi	r24, 0xFF	; 255
    579e:	8d 0d       	add	r24, r13
    57a0:	82 31       	cpi	r24, 0x12	; 18
    57a2:	08 f0       	brcs	.+2      	; 0x57a6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x940>
    57a4:	fb c2       	rjmp	.+1526   	; 0x5d9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf36>
							unsigned char valve_number =0;
							unsigned char euro_valve_num=0,command_valve=0;
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    57a6:	f3 e0       	ldi	r31, 0x03	; 3
    57a8:	fd 15       	cp	r31, r13
    57aa:	a8 f4       	brcc	.+42     	; 0x57d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x970>
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    57ac:	8d 2d       	mov	r24, r13
    57ae:	63 e0       	ldi	r22, 0x03	; 3
    57b0:	0e 94 ac ea 	call	0x1d558	; 0x1d558 <__udivmodqi4>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    57b4:	6b ea       	ldi	r22, 0xAB	; 171
    57b6:	d6 9e       	mul	r13, r22
    57b8:	61 2d       	mov	r22, r1
    57ba:	11 24       	eor	r1, r1
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    57bc:	99 23       	and	r25, r25
    57be:	31 f0       	breq	.+12     	; 0x57cc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x966>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    57c0:	66 95       	lsr	r22
    57c2:	cc 24       	eor	r12, r12
    57c4:	c3 94       	inc	r12
    57c6:	c6 0e       	add	r12, r22
    57c8:	d9 2e       	mov	r13, r25
    57ca:	07 c0       	rjmp	.+14     	; 0x57da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x974>
									command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								}
								else
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    57cc:	c6 2e       	mov	r12, r22
    57ce:	c6 94       	lsr	r12
									command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    57d0:	a3 e0       	ldi	r26, 0x03	; 3
    57d2:	da 2e       	mov	r13, r26
    57d4:	02 c0       	rjmp	.+4      	; 0x57da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x974>
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
							{
								euro_valve_num = 1;
    57d6:	cc 24       	eor	r12, r12
    57d8:	c3 94       	inc	r12
								}
							
							}
						
							/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    57da:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    57de:	81 30       	cpi	r24, 0x01	; 1
    57e0:	89 f4       	brne	.+34     	; 0x5804 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x99e>
							{
								_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    57e2:	60 ef       	ldi	r22, 0xF0	; 240
    57e4:	75 e0       	ldi	r23, 0x05	; 5
    57e6:	86 ec       	ldi	r24, 0xC6	; 198
    57e8:	94 e1       	ldi	r25, 0x14	; 20
    57ea:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    57ee:	4a e0       	ldi	r20, 0x0A	; 10
    57f0:	50 e0       	ldi	r21, 0x00	; 0
    57f2:	6c 2d       	mov	r22, r12
    57f4:	86 ec       	ldi	r24, 0xC6	; 198
    57f6:	94 e1       	ldi	r25, 0x14	; 20
    57f8:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    57fc:	86 ec       	ldi	r24, 0xC6	; 198
    57fe:	94 e1       	ldi	r25, 0x14	; 20
    5800:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
						
							if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5804:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
    5808:	81 11       	cpse	r24, r1
							{
								_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    580a:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
							}
						
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    580e:	84 e1       	ldi	r24, 0x14	; 20
    5810:	e5 ef       	ldi	r30, 0xF5	; 245
    5812:	f3 e1       	ldi	r31, 0x13	; 19
    5814:	df 01       	movw	r26, r30
    5816:	1d 92       	st	X+, r1
    5818:	8a 95       	dec	r24
    581a:	e9 f7       	brne	.-6      	; 0x5816 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9b0>
							count = _kRESET;
							/********************************** wireless valve command (on/off) **********************************/
							/* valve id, on/off command, pump run timer */
						
							/************************************* copy the euro valve ID *********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    581c:	6c 2d       	mov	r22, r12
    581e:	70 e0       	ldi	r23, 0x00	; 0
    5820:	61 50       	subi	r22, 0x01	; 1
    5822:	71 09       	sbc	r23, r1
    5824:	b7 e0       	ldi	r27, 0x07	; 7
    5826:	b6 9f       	mul	r27, r22
    5828:	c0 01       	movw	r24, r0
    582a:	b7 9f       	mul	r27, r23
    582c:	90 0d       	add	r25, r0
    582e:	11 24       	eor	r1, r1
    5830:	82 55       	subi	r24, 0x52	; 82
    5832:	9c 4e       	sbci	r25, 0xEC	; 236
    5834:	fc 01       	movw	r30, r24
    5836:	ec 58       	subi	r30, 0x8C	; 140
    5838:	ff 4f       	sbci	r31, 0xFF	; 255
    583a:	20 81       	ld	r18, Z
    583c:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5840:	31 96       	adiw	r30, 0x01	; 1
    5842:	20 81       	ld	r18, Z
    5844:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5848:	31 96       	adiw	r30, 0x01	; 1
    584a:	20 81       	ld	r18, Z
    584c:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5850:	31 96       	adiw	r30, 0x01	; 1
    5852:	20 81       	ld	r18, Z
    5854:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5858:	31 96       	adiw	r30, 0x01	; 1
    585a:	20 81       	ld	r18, Z
    585c:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    5860:	31 96       	adiw	r30, 0x01	; 1
    5862:	20 81       	ld	r18, Z
    5864:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
						
							/*********************************** packet_id ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5868:	22 e0       	ldi	r18, 0x02	; 2
    586a:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
						
							/*********************************** copy on/off command ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    586e:	eb a9       	ldd	r30, Y+51	; 0x33
    5870:	e0 93 fc 13 	sts	0x13FC, r30	; 0x8013fc <_sRuble_Parameters+0x4e>
						
							/********************************** copy operation mode ************************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5874:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    5878:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
						
							/******************************** copy pump timer (used if selected mode is timer) *********************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    587c:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    5880:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    5884:	d0 92 00 14 	sts	0x1400, r13	; 0x801400 <_sRuble_Parameters+0x52>
    5888:	40 e0       	ldi	r20, 0x00	; 0
    588a:	50 e0       	ldi	r21, 0x00	; 0
    588c:	94 2e       	mov	r9, r20
    588e:	c1 2c       	mov	r12, r1
    5890:	d1 2c       	mov	r13, r1
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5892:	fd e0       	ldi	r31, 0x0D	; 13
    5894:	f4 9f       	mul	r31, r20
    5896:	b0 01       	movw	r22, r0
    5898:	f5 9f       	mul	r31, r21
    589a:	70 0d       	add	r23, r0
    589c:	11 24       	eor	r1, r1
    589e:	6b 5e       	subi	r22, 0xEB	; 235
    58a0:	73 4f       	sbci	r23, 0xF3	; 243
    58a2:	2d 2d       	mov	r18, r13
    58a4:	30 e0       	ldi	r19, 0x00	; 0
    58a6:	fb 01       	movw	r30, r22
    58a8:	e2 0f       	add	r30, r18
    58aa:	f3 1f       	adc	r31, r19
    58ac:	28 0f       	add	r18, r24
    58ae:	39 1f       	adc	r19, r25
    58b0:	d9 01       	movw	r26, r18
    58b2:	ac 58       	subi	r26, 0x8C	; 140
    58b4:	bf 4f       	sbci	r27, 0xFF	; 255
    58b6:	31 81       	ldd	r19, Z+1	; 0x01
    58b8:	2c 91       	ld	r18, X
    58ba:	32 17       	cp	r19, r18
    58bc:	19 f0       	breq	.+6      	; 0x58c4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa5e>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    58be:	c1 2c       	mov	r12, r1
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    58c0:	f6 e0       	ldi	r31, 0x06	; 6
    58c2:	df 2e       	mov	r13, r31
										id_len = _kRESET;
									}
									id_len++;
    58c4:	c3 94       	inc	r12
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    58c6:	d3 94       	inc	r13
    58c8:	25 e0       	ldi	r18, 0x05	; 5
    58ca:	2d 15       	cp	r18, r13
    58cc:	50 f7       	brcc	.-44     	; 0x58a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa3c>
										id_len = _kRESET;
									}
									id_len++;
								}
							
								if(id_len == _kVALVE_ID_LEN)
    58ce:	36 e0       	ldi	r19, 0x06	; 6
    58d0:	c3 16       	cp	r12, r19
    58d2:	31 f0       	breq	.+12     	; 0x58e0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa7a>
    58d4:	4f 5f       	subi	r20, 0xFF	; 255
    58d6:	5f 4f       	sbci	r21, 0xFF	; 255
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
    58d8:	46 30       	cpi	r20, 0x06	; 6
    58da:	51 05       	cpc	r21, r1
    58dc:	b9 f6       	brne	.-82     	; 0x588c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa26>
    58de:	01 c0       	rjmp	.+2      	; 0x58e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa7c>
    58e0:	69 2c       	mov	r6, r9
								{
									current_valve_number = j;    /* data send will update of this valve because valve get match */
									break;
								}
							}
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    58e2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    58e6:	81 30       	cpi	r24, 0x01	; 1
    58e8:	89 f4       	brne	.+34     	; 0x590c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xaa6>
							{
								_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    58ea:	6a ed       	ldi	r22, 0xDA	; 218
    58ec:	75 e0       	ldi	r23, 0x05	; 5
    58ee:	86 ec       	ldi	r24, 0xC6	; 198
    58f0:	94 e1       	ldi	r25, 0x14	; 20
    58f2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    58f6:	4a e0       	ldi	r20, 0x0A	; 10
    58f8:	50 e0       	ldi	r21, 0x00	; 0
    58fa:	66 2d       	mov	r22, r6
    58fc:	86 ec       	ldi	r24, 0xC6	; 198
    58fe:	94 e1       	ldi	r25, 0x14	; 20
    5900:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
								_kSERIAL_MON_CLEAR();
    5904:	86 ec       	ldi	r24, 0xC6	; 198
    5906:	94 e1       	ldi	r25, 0x14	; 20
    5908:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    590c:	4d e0       	ldi	r20, 0x0D	; 13
    590e:	64 9e       	mul	r6, r20
    5910:	40 01       	movw	r8, r0
    5912:	11 24       	eor	r1, r1
    5914:	31 2c       	mov	r3, r1
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5916:	5d e0       	ldi	r21, 0x0D	; 13
    5918:	56 9d       	mul	r21, r6
    591a:	c0 01       	movw	r24, r0
    591c:	11 24       	eor	r1, r1
    591e:	9c 01       	movw	r18, r24
    5920:	2b 5e       	subi	r18, 0xEB	; 235
    5922:	33 4f       	sbci	r19, 0xF3	; 243
    5924:	29 01       	movw	r4, r18
    5926:	ab e0       	ldi	r26, 0x0B	; 11
    5928:	4a 0e       	add	r4, r26
    592a:	51 1c       	adc	r5, r1
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    592c:	f9 01       	movw	r30, r18
    592e:	38 96       	adiw	r30, 0x08	; 8
    5930:	fd ab       	std	Y+53, r31	; 0x35
    5932:	ec ab       	std	Y+52, r30	; 0x34
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
											Serial.println();
											_kSERIAL_MON_CLEAR();
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5934:	9c 01       	movw	r18, r24
    5936:	2a 5e       	subi	r18, 0xEA	; 234
    5938:	33 4f       	sbci	r19, 0xF3	; 243
    593a:	69 01       	movw	r12, r18
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
							{
								if(Subscribed_data_check())
    593c:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    5940:	88 23       	and	r24, r24
    5942:	99 f0       	breq	.+38     	; 0x596a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb04>
								{
									if(Seperate_Out_Sub_Data())
    5944:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    5948:	88 23       	and	r24, r24
    594a:	79 f0       	breq	.+30     	; 0x596a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb04>
									{
										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    594c:	f5 01       	movw	r30, r10
    594e:	01 90       	ld	r0, Z+
    5950:	00 20       	and	r0, r0
    5952:	e9 f7       	brne	.-6      	; 0x594e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xae8>
    5954:	31 97       	sbiw	r30, 0x01	; 1
    5956:	af 01       	movw	r20, r30
    5958:	40 5d       	subi	r20, 0xD0	; 208
    595a:	5f 40       	sbci	r21, 0x0F	; 15
    595c:	21 e0       	ldi	r18, 0x01	; 1
    595e:	60 ed       	ldi	r22, 0xD0	; 208
    5960:	7f e0       	ldi	r23, 0x0F	; 15
    5962:	82 e6       	ldi	r24, 0x62	; 98
    5964:	9f e0       	ldi	r25, 0x0F	; 15
    5966:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
									}
								}
								data_send_counter++;
    596a:	33 94       	inc	r3
							
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    596c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5970:	81 30       	cpi	r24, 0x01	; 1
    5972:	51 f4       	brne	.+20     	; 0x5988 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb22>
								{
									_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    5974:	66 eb       	ldi	r22, 0xB6	; 182
    5976:	75 e0       	ldi	r23, 0x05	; 5
    5978:	86 ec       	ldi	r24, 0xC6	; 198
    597a:	94 e1       	ldi	r25, 0x14	; 20
    597c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    5980:	86 ec       	ldi	r24, 0xC6	; 198
    5982:	94 e1       	ldi	r25, 0x14	; 20
    5984:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								
								Display_Update_1();    // 20/1/2022
    5988:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
								_kLORA_SEND_DATA(count);
    598c:	8c e0       	ldi	r24, 0x0C	; 12
    598e:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
							
								if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5992:	88 eb       	ldi	r24, 0xB8	; 184
    5994:	9b e0       	ldi	r25, 0x0B	; 11
    5996:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
    599a:	88 23       	and	r24, r24
    599c:	09 f4       	brne	.+2      	; 0x59a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb3a>
    599e:	9a c1       	rjmp	.+820    	; 0x5cd4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe6e>
								{
									/**************************** update the received data in buff lora rx_tx **********************/
									if(_kLORA_RECV_DATA())            /* check the received data */
    59a0:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
    59a4:	88 23       	and	r24, r24
    59a6:	09 f4       	brne	.+2      	; 0x59aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb44>
    59a8:	3b c1       	rjmp	.+630    	; 0x5c20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdba>
									{
										if(Subscribed_data_check())
    59aa:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    59ae:	88 23       	and	r24, r24
    59b0:	99 f0       	breq	.+38     	; 0x59d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb72>
										{
											if(Seperate_Out_Sub_Data())
    59b2:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    59b6:	88 23       	and	r24, r24
    59b8:	79 f0       	breq	.+30     	; 0x59d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb72>
											{
												//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
												Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    59ba:	f5 01       	movw	r30, r10
    59bc:	01 90       	ld	r0, Z+
    59be:	00 20       	and	r0, r0
    59c0:	e9 f7       	brne	.-6      	; 0x59bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb56>
    59c2:	31 97       	sbiw	r30, 0x01	; 1
    59c4:	af 01       	movw	r20, r30
    59c6:	40 5d       	subi	r20, 0xD0	; 208
    59c8:	5f 40       	sbci	r21, 0x0F	; 15
    59ca:	21 e0       	ldi	r18, 0x01	; 1
    59cc:	60 ed       	ldi	r22, 0xD0	; 208
    59ce:	7f e0       	ldi	r23, 0x0F	; 15
    59d0:	82 e6       	ldi	r24, 0x62	; 98
    59d2:	9f e0       	ldi	r25, 0x0F	; 15
    59d4:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
											}
										}
										//RF95_setModeRx_Continuous();
										/* check the id get matched to the valve or not */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    59d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    59dc:	81 30       	cpi	r24, 0x01	; 1
    59de:	59 f5       	brne	.+86     	; 0x5a36 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbd0>
										{
											_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    59e0:	60 ea       	ldi	r22, 0xA0	; 160
    59e2:	75 e0       	ldi	r23, 0x05	; 5
    59e4:	86 ec       	ldi	r24, 0xC6	; 198
    59e6:	94 e1       	ldi	r25, 0x14	; 20
    59e8:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    59ec:	4a e0       	ldi	r20, 0x0A	; 10
    59ee:	50 e0       	ldi	r21, 0x00	; 0
    59f0:	69 e0       	ldi	r22, 0x09	; 9
    59f2:	74 e1       	ldi	r23, 0x14	; 20
    59f4:	86 ec       	ldi	r24, 0xC6	; 198
    59f6:	94 e1       	ldi	r25, 0x14	; 20
    59f8:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
											Serial.println();
    59fc:	86 ec       	ldi	r24, 0xC6	; 198
    59fe:	94 e1       	ldi	r25, 0x14	; 20
    5a00:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    5a04:	86 ec       	ldi	r24, 0xC6	; 198
    5a06:	94 e1       	ldi	r25, 0x14	; 20
    5a08:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    5a0c:	62 e8       	ldi	r22, 0x82	; 130
    5a0e:	75 e0       	ldi	r23, 0x05	; 5
    5a10:	86 ec       	ldi	r24, 0xC6	; 198
    5a12:	94 e1       	ldi	r25, 0x14	; 20
    5a14:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5a18:	47 e0       	ldi	r20, 0x07	; 7
    5a1a:	50 e0       	ldi	r21, 0x00	; 0
    5a1c:	b6 01       	movw	r22, r12
    5a1e:	86 ec       	ldi	r24, 0xC6	; 198
    5a20:	94 e1       	ldi	r25, 0x14	; 20
    5a22:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
											Serial.println();
    5a26:	86 ec       	ldi	r24, 0xC6	; 198
    5a28:	94 e1       	ldi	r25, 0x14	; 20
    5a2a:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    5a2e:	86 ec       	ldi	r24, 0xC6	; 198
    5a30:	94 e1       	ldi	r25, 0x14	; 20
    5a32:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    5a36:	a9 e0       	ldi	r26, 0x09	; 9
    5a38:	b4 e1       	ldi	r27, 0x14	; 20
    5a3a:	80 e0       	ldi	r24, 0x00	; 0
    5a3c:	90 e0       	ldi	r25, 0x00	; 0
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
										{
											if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    5a3e:	2d 91       	ld	r18, X+
    5a40:	f4 01       	movw	r30, r8
    5a42:	e8 0f       	add	r30, r24
    5a44:	f9 1f       	adc	r31, r25
    5a46:	eb 5e       	subi	r30, 0xEB	; 235
    5a48:	f3 4f       	sbci	r31, 0xF3	; 243
    5a4a:	31 81       	ldd	r19, Z+1	; 0x01
    5a4c:	32 17       	cp	r19, r18
    5a4e:	09 f4       	brne	.+2      	; 0x5a52 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbec>
    5a50:	7c c0       	rjmp	.+248    	; 0x5b4a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xce4>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5a52:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5a56:	81 30       	cpi	r24, 0x01	; 1
    5a58:	51 f4       	brne	.+20     	; 0x5a6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc08>
												{
													_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    5a5a:	67 e5       	ldi	r22, 0x57	; 87
    5a5c:	75 e0       	ldi	r23, 0x05	; 5
    5a5e:	86 ec       	ldi	r24, 0xC6	; 198
    5a60:	94 e1       	ldi	r25, 0x14	; 20
    5a62:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    5a66:	86 ec       	ldi	r24, 0xC6	; 198
    5a68:	94 e1       	ldi	r25, 0x14	; 20
    5a6a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5a6e:	32 e0       	ldi	r19, 0x02	; 2
    5a70:	33 16       	cp	r3, r19
    5a72:	b9 f0       	breq	.+46     	; 0x5aa2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc3c>
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5a74:	e1 e0       	ldi	r30, 0x01	; 1
    5a76:	d2 01       	movw	r26, r4
    5a78:	ec 93       	st	X, r30
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5a7a:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    5a7e:	90 e0       	ldi	r25, 0x00	; 0
    5a80:	98 2f       	mov	r25, r24
    5a82:	88 27       	eor	r24, r24
    5a84:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    5a88:	82 2b       	or	r24, r18
    5a8a:	ac a9       	ldd	r26, Y+52	; 0x34
    5a8c:	bd a9       	ldd	r27, Y+53	; 0x35
    5a8e:	8d 93       	st	X+, r24
    5a90:	9c 93       	st	X, r25
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    5a92:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    5a96:	bb a9       	ldd	r27, Y+51	; 0x33
    5a98:	b8 13       	cpse	r27, r24
    5a9a:	5d c0       	rjmp	.+186    	; 0x5b56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcf0>
												return 0;
											}
										}
										else
										{
											data_send_counter = 3;
    5a9c:	73 e0       	ldi	r23, 0x03	; 3
    5a9e:	37 2e       	mov	r3, r23
    5aa0:	73 c1       	rjmp	.+742    	; 0x5d88 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
													_kSERIAL_MON_CLEAR();
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
												{
													_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5aa2:	86 e0       	ldi	r24, 0x06	; 6
    5aa4:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
													_gfault_Occure = _kFAULT_RESET_TIMER;
    5aa8:	84 e6       	ldi	r24, 0x64	; 100
    5aaa:	90 e0       	ldi	r25, 0x00	; 0
    5aac:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5ab0:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ab4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5ab8:	81 30       	cpi	r24, 0x01	; 1
    5aba:	31 f4       	brne	.+12     	; 0x5ac8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc62>
													{
														_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 0");
    5abc:	6a e3       	ldi	r22, 0x3A	; 58
    5abe:	75 e0       	ldi	r23, 0x05	; 5
    5ac0:	86 ec       	ldi	r24, 0xC6	; 198
    5ac2:	94 e1       	ldi	r25, 0x14	; 20
    5ac4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5ac8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5acc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5ad0:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5ad4:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5ad8:	a0 62       	ori	r26, 0x20	; 32
    5ada:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5ade:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5ae2:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5ae6:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
													_sRuble_Parameters.Last_Valve = current_valve_number;
    5aea:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5aee:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5af2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5af6:	82 60       	ori	r24, 0x02	; 2
    5af8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5afc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5b00:	86 e0       	ldi	r24, 0x06	; 6
    5b02:	8e 9d       	mul	r24, r14
    5b04:	80 01       	movw	r16, r0
    5b06:	8f 9d       	mul	r24, r15
    5b08:	10 0d       	add	r17, r0
    5b0a:	11 24       	eor	r1, r1
    5b0c:	e1 2c       	mov	r14, r1
    5b0e:	f1 2c       	mov	r15, r1
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
													{
														if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5b10:	f8 01       	movw	r30, r16
    5b12:	ee 0d       	add	r30, r14
    5b14:	ff 1d       	adc	r31, r15
    5b16:	e2 5b       	subi	r30, 0xB2	; 178
    5b18:	f2 4f       	sbci	r31, 0xF2	; 242
    5b1a:	e1 81       	ldd	r30, Z+1	; 0x01
    5b1c:	e3 31       	cpi	r30, 0x13	; 19
    5b1e:	68 f0       	brcs	.+26     	; 0x5b3a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcd4>
														{
															/********************************* turn on/off the wired valve *********************************/
															_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5b20:	f0 e0       	ldi	r31, 0x00	; 0
    5b22:	e7 5c       	subi	r30, 0xC7	; 199
    5b24:	fb 4e       	sbci	r31, 0xEB	; 235
    5b26:	61 e0       	ldi	r22, 0x01	; 1
    5b28:	80 81       	ld	r24, Z
    5b2a:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
															_kDELAY_MS(200);
    5b2e:	68 ec       	ldi	r22, 0xC8	; 200
    5b30:	70 e0       	ldi	r23, 0x00	; 0
    5b32:	80 e0       	ldi	r24, 0x00	; 0
    5b34:	90 e0       	ldi	r25, 0x00	; 0
    5b36:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    5b3a:	ef ef       	ldi	r30, 0xFF	; 255
    5b3c:	ee 1a       	sub	r14, r30
    5b3e:	fe 0a       	sbc	r15, r30
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
													_sRuble_Parameters.Last_Valve = current_valve_number;
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5b40:	f5 e0       	ldi	r31, 0x05	; 5
    5b42:	ef 16       	cp	r14, r31
    5b44:	f1 04       	cpc	r15, r1
    5b46:	21 f7       	brne	.-56     	; 0x5b10 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcaa>
    5b48:	72 c4       	rjmp	.+2276   	; 0x642e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
    5b4a:	01 96       	adiw	r24, 0x01	; 1
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
											Serial.println();
											_kSERIAL_MON_CLEAR();
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
    5b4c:	86 30       	cpi	r24, 0x06	; 6
    5b4e:	91 05       	cpc	r25, r1
    5b50:	09 f0       	breq	.+2      	; 0x5b54 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcee>
    5b52:	75 cf       	rjmp	.-278    	; 0x5a3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbd8>
    5b54:	8f cf       	rjmp	.-226    	; 0x5a74 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc0e>
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    5b56:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5b5a:	81 30       	cpi	r24, 0x01	; 1
    5b5c:	51 f4       	brne	.+20     	; 0x5b72 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd0c>
											{
												_kSERAIL_MON_WRITE("Euro Feedback fail");
    5b5e:	67 e2       	ldi	r22, 0x27	; 39
    5b60:	75 e0       	ldi	r23, 0x05	; 5
    5b62:	86 ec       	ldi	r24, 0xC6	; 198
    5b64:	94 e1       	ldi	r25, 0x14	; 20
    5b66:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    5b6a:	86 ec       	ldi	r24, 0xC6	; 198
    5b6c:	94 e1       	ldi	r25, 0x14	; 20
    5b6e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5b72:	22 e0       	ldi	r18, 0x02	; 2
    5b74:	32 12       	cpse	r3, r18
    5b76:	08 c1       	rjmp	.+528    	; 0x5d88 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5b78:	86 e0       	ldi	r24, 0x06	; 6
    5b7a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    5b7e:	84 e6       	ldi	r24, 0x64	; 100
    5b80:	90 e0       	ldi	r25, 0x00	; 0
    5b82:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5b86:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5b8a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5b8e:	81 30       	cpi	r24, 0x01	; 1
    5b90:	31 f4       	brne	.+12     	; 0x5b9e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd38>
												{
													_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 1");
    5b92:	6a e0       	ldi	r22, 0x0A	; 10
    5b94:	75 e0       	ldi	r23, 0x05	; 5
    5b96:	86 ec       	ldi	r24, 0xC6	; 198
    5b98:	94 e1       	ldi	r25, 0x14	; 20
    5b9a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5b9e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5ba2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5ba6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5baa:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5bae:	a0 62       	ori	r26, 0x20	; 32
    5bb0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5bb4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5bb8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5bbc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    5bc0:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5bc4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5bc8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5bcc:	82 60       	ori	r24, 0x02	; 2
    5bce:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5bd2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5bd6:	86 e0       	ldi	r24, 0x06	; 6
    5bd8:	8e 9d       	mul	r24, r14
    5bda:	80 01       	movw	r16, r0
    5bdc:	8f 9d       	mul	r24, r15
    5bde:	10 0d       	add	r17, r0
    5be0:	11 24       	eor	r1, r1
    5be2:	e1 2c       	mov	r14, r1
    5be4:	f1 2c       	mov	r15, r1
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5be6:	f8 01       	movw	r30, r16
    5be8:	ee 0d       	add	r30, r14
    5bea:	ff 1d       	adc	r31, r15
    5bec:	e2 5b       	subi	r30, 0xB2	; 178
    5bee:	f2 4f       	sbci	r31, 0xF2	; 242
    5bf0:	e1 81       	ldd	r30, Z+1	; 0x01
    5bf2:	e3 31       	cpi	r30, 0x13	; 19
    5bf4:	68 f0       	brcs	.+26     	; 0x5c10 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdaa>
													{
														/********************************* turn on/off the wired valve *********************************/
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5bf6:	f0 e0       	ldi	r31, 0x00	; 0
    5bf8:	e7 5c       	subi	r30, 0xC7	; 199
    5bfa:	fb 4e       	sbci	r31, 0xEB	; 235
    5bfc:	61 e0       	ldi	r22, 0x01	; 1
    5bfe:	80 81       	ld	r24, Z
    5c00:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
														_kDELAY_MS(200);
    5c04:	68 ec       	ldi	r22, 0xC8	; 200
    5c06:	70 e0       	ldi	r23, 0x00	; 0
    5c08:	80 e0       	ldi	r24, 0x00	; 0
    5c0a:	90 e0       	ldi	r25, 0x00	; 0
    5c0c:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    5c10:	3f ef       	ldi	r19, 0xFF	; 255
    5c12:	e3 1a       	sub	r14, r19
    5c14:	f3 0a       	sbc	r15, r19
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5c16:	45 e0       	ldi	r20, 0x05	; 5
    5c18:	e4 16       	cp	r14, r20
    5c1a:	f1 04       	cpc	r15, r1
    5c1c:	21 f7       	brne	.-56     	; 0x5be6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd80>
    5c1e:	07 c4       	rjmp	.+2062   	; 0x642e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
											data_send_counter = 3;
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5c20:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5c24:	81 30       	cpi	r24, 0x01	; 1
    5c26:	51 f4       	brne	.+20     	; 0x5c3c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdd6>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    5c28:	6f ec       	ldi	r22, 0xCF	; 207
    5c2a:	74 e0       	ldi	r23, 0x04	; 4
    5c2c:	86 ec       	ldi	r24, 0xC6	; 198
    5c2e:	94 e1       	ldi	r25, 0x14	; 20
    5c30:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    5c34:	86 ec       	ldi	r24, 0xC6	; 198
    5c36:	94 e1       	ldi	r25, 0x14	; 20
    5c38:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    5c3c:	52 e0       	ldi	r21, 0x02	; 2
    5c3e:	35 12       	cpse	r3, r21
    5c40:	a3 c0       	rjmp	.+326    	; 0x5d88 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5c42:	26 e0       	ldi	r18, 0x06	; 6
    5c44:	20 93 ac 13 	sts	0x13AC, r18	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    5c48:	84 e6       	ldi	r24, 0x64	; 100
    5c4a:	90 e0       	ldi	r25, 0x00	; 0
    5c4c:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5c50:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5c54:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5c58:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5c5c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5c60:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5c64:	a0 62       	ori	r26, 0x20	; 32
    5c66:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5c6a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5c6e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5c72:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    5c76:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5c7a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5c7e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5c82:	82 60       	ori	r24, 0x02	; 2
    5c84:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5c88:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5c8c:	2e 9d       	mul	r18, r14
    5c8e:	80 01       	movw	r16, r0
    5c90:	2f 9d       	mul	r18, r15
    5c92:	10 0d       	add	r17, r0
    5c94:	11 24       	eor	r1, r1
    5c96:	e1 2c       	mov	r14, r1
    5c98:	f1 2c       	mov	r15, r1
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5c9a:	f8 01       	movw	r30, r16
    5c9c:	ee 0d       	add	r30, r14
    5c9e:	ff 1d       	adc	r31, r15
    5ca0:	e2 5b       	subi	r30, 0xB2	; 178
    5ca2:	f2 4f       	sbci	r31, 0xF2	; 242
    5ca4:	e1 81       	ldd	r30, Z+1	; 0x01
    5ca6:	e3 31       	cpi	r30, 0x13	; 19
    5ca8:	68 f0       	brcs	.+26     	; 0x5cc4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe5e>
												{
													/********************************* turn on/off the wired valve *********************************/
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5caa:	f0 e0       	ldi	r31, 0x00	; 0
    5cac:	e7 5c       	subi	r30, 0xC7	; 199
    5cae:	fb 4e       	sbci	r31, 0xEB	; 235
    5cb0:	61 e0       	ldi	r22, 0x01	; 1
    5cb2:	80 81       	ld	r24, Z
    5cb4:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
													_kDELAY_MS(200);
    5cb8:	68 ec       	ldi	r22, 0xC8	; 200
    5cba:	70 e0       	ldi	r23, 0x00	; 0
    5cbc:	80 e0       	ldi	r24, 0x00	; 0
    5cbe:	90 e0       	ldi	r25, 0x00	; 0
    5cc0:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    5cc4:	8f ef       	ldi	r24, 0xFF	; 255
    5cc6:	e8 1a       	sub	r14, r24
    5cc8:	f8 0a       	sbc	r15, r24
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
											_gfault_Occure = _kFAULT_RESET_TIMER;
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5cca:	95 e0       	ldi	r25, 0x05	; 5
    5ccc:	e9 16       	cp	r14, r25
    5cce:	f1 04       	cpc	r15, r1
    5cd0:	21 f7       	brne	.-56     	; 0x5c9a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe34>
    5cd2:	ad c3       	rjmp	.+1882   	; 0x642e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
										}
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5cd4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5cd8:	81 30       	cpi	r24, 0x01	; 1
    5cda:	51 f4       	brne	.+20     	; 0x5cf0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe8a>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    5cdc:	64 e9       	ldi	r22, 0x94	; 148
    5cde:	74 e0       	ldi	r23, 0x04	; 4
    5ce0:	86 ec       	ldi	r24, 0xC6	; 198
    5ce2:	94 e1       	ldi	r25, 0x14	; 20
    5ce4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5ce8:	86 ec       	ldi	r24, 0xC6	; 198
    5cea:	94 e1       	ldi	r25, 0x14	; 20
    5cec:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									}
									//RF95_setModeRx_Continuous();
								
									if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5cf0:	a2 e0       	ldi	r26, 0x02	; 2
    5cf2:	3a 12       	cpse	r3, r26
    5cf4:	49 c0       	rjmp	.+146    	; 0x5d88 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5cf6:	26 e0       	ldi	r18, 0x06	; 6
    5cf8:	20 93 ac 13 	sts	0x13AC, r18	; 0x8013ac <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    5cfc:	84 e6       	ldi	r24, 0x64	; 100
    5cfe:	90 e0       	ldi	r25, 0x00	; 0
    5d00:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5d04:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5d08:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5d0c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5d10:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5d14:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5d18:	a0 62       	ori	r26, 0x20	; 32
    5d1a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5d1e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5d22:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5d26:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    5d2a:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5d2e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5d32:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5d36:	82 60       	ori	r24, 0x02	; 2
    5d38:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5d3c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5d40:	2e 9d       	mul	r18, r14
    5d42:	80 01       	movw	r16, r0
    5d44:	2f 9d       	mul	r18, r15
    5d46:	10 0d       	add	r17, r0
    5d48:	11 24       	eor	r1, r1
    5d4a:	e1 2c       	mov	r14, r1
    5d4c:	f1 2c       	mov	r15, r1
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5d4e:	f8 01       	movw	r30, r16
    5d50:	ee 0d       	add	r30, r14
    5d52:	ff 1d       	adc	r31, r15
    5d54:	e2 5b       	subi	r30, 0xB2	; 178
    5d56:	f2 4f       	sbci	r31, 0xF2	; 242
    5d58:	e1 81       	ldd	r30, Z+1	; 0x01
    5d5a:	e3 31       	cpi	r30, 0x13	; 19
    5d5c:	68 f0       	brcs	.+26     	; 0x5d78 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf12>
											{
												/********************************* turn on/off the wired valve *********************************/
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5d5e:	f0 e0       	ldi	r31, 0x00	; 0
    5d60:	e7 5c       	subi	r30, 0xC7	; 199
    5d62:	fb 4e       	sbci	r31, 0xEB	; 235
    5d64:	61 e0       	ldi	r22, 0x01	; 1
    5d66:	80 81       	ld	r24, Z
    5d68:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
												_kDELAY_MS(200);
    5d6c:	68 ec       	ldi	r22, 0xC8	; 200
    5d6e:	70 e0       	ldi	r23, 0x00	; 0
    5d70:	80 e0       	ldi	r24, 0x00	; 0
    5d72:	90 e0       	ldi	r25, 0x00	; 0
    5d74:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    5d78:	bf ef       	ldi	r27, 0xFF	; 255
    5d7a:	eb 1a       	sub	r14, r27
    5d7c:	fb 0a       	sbc	r15, r27
										_gfault_Occure = _kFAULT_RESET_TIMER;
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5d7e:	e5 e0       	ldi	r30, 0x05	; 5
    5d80:	ee 16       	cp	r14, r30
    5d82:	f1 04       	cpc	r15, r1
    5d84:	21 f7       	brne	.-56     	; 0x5d4e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xee8>
    5d86:	53 c3       	rjmp	.+1702   	; 0x642e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
											}
										}
										return 0;          /* no data available */
									}
								}
								_kDELAY_MS(1000);
    5d88:	68 ee       	ldi	r22, 0xE8	; 232
    5d8a:	73 e0       	ldi	r23, 0x03	; 3
    5d8c:	80 e0       	ldi	r24, 0x00	; 0
    5d8e:	90 e0       	ldi	r25, 0x00	; 0
    5d90:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
								_kSERIAL_MON_CLEAR();
							}
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    5d94:	f3 e0       	ldi	r31, 0x03	; 3
    5d96:	3f 12       	cpse	r3, r31
    5d98:	d1 cd       	rjmp	.-1118   	; 0x593c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xad6>
    5d9a:	2e c0       	rjmp	.+92     	; 0x5df8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
						
						}
					
						/******************************************************** handle wired valve *******************************************************************/
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
    5d9c:	8d ee       	ldi	r24, 0xED	; 237
    5d9e:	8d 0d       	add	r24, r13
    5da0:	81 35       	cpi	r24, 0x51	; 81
    5da2:	78 f4       	brcc	.+30     	; 0x5dc2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf5c>
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5da4:	ed 2d       	mov	r30, r13
    5da6:	f0 e0       	ldi	r31, 0x00	; 0
    5da8:	e7 5c       	subi	r30, 0xC7	; 199
    5daa:	fb 4e       	sbci	r31, 0xEB	; 235
    5dac:	6e a9       	ldd	r22, Y+54	; 0x36
    5dae:	80 81       	ld	r24, Z
    5db0:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
							_kDELAY_MS(200);
    5db4:	68 ec       	ldi	r22, 0xC8	; 200
    5db6:	70 e0       	ldi	r23, 0x00	; 0
    5db8:	80 e0       	ldi	r24, 0x00	; 0
    5dba:	90 e0       	ldi	r25, 0x00	; 0
    5dbc:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    5dc0:	1b c0       	rjmp	.+54     	; 0x5df8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
							
							}
						}
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
						{
							if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    5dc2:	25 e6       	ldi	r18, 0x65	; 101
    5dc4:	d2 12       	cpse	r13, r18
    5dc6:	18 c0       	rjmp	.+48     	; 0x5df8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
    5dc8:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
							{
								if(on_off == _kON)
    5dcc:	3b a9       	ldd	r19, Y+51	; 0x33
    5dce:	31 30       	cpi	r19, 0x01	; 1
    5dd0:	29 f4       	brne	.+10     	; 0x5ddc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf76>
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5dd2:	88 23       	and	r24, r24
    5dd4:	89 f0       	breq	.+34     	; 0x5df8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    5dd6:	30 93 7b 14 	sts	0x147B, r19	; 0x80147b <_sRuble_Parameters+0xcd>
    5dda:	05 c0       	rjmp	.+10     	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf80>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
									}
								}
								else
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5ddc:	88 23       	and	r24, r24
    5dde:	61 f0       	breq	.+24     	; 0x5df8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5de0:	82 e0       	ldi	r24, 0x02	; 2
    5de2:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    5de6:	6b e7       	ldi	r22, 0x7B	; 123
    5de8:	74 e1       	ldi	r23, 0x14	; 20
    5dea:	88 ea       	ldi	r24, 0xA8	; 168
    5dec:	9c e0       	ldi	r25, 0x0C	; 12
    5dee:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    5df2:	02 c0       	rjmp	.+4      	; 0x5df8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
    5df4:	81 e0       	ldi	r24, 0x01	; 1
    5df6:	01 c0       	rjmp	.+2      	; 0x5dfa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf94>
    5df8:	80 e0       	ldi	r24, 0x00	; 0
    5dfa:	2a 94       	dec	r2
    5dfc:	0f 5f       	subi	r16, 0xFF	; 255
    5dfe:	1f 4f       	sbci	r17, 0xFF	; 255
					_kSERIAL_MON_CLEAR();
				}
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    5e00:	21 10       	cpse	r2, r1
    5e02:	a8 cc       	rjmp	.-1712   	; 0x5754 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8ee>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e04:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5e08:	81 30       	cpi	r24, 0x01	; 1
    5e0a:	09 f0       	breq	.+2      	; 0x5e0e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfa8>
    5e0c:	62 c3       	rjmp	.+1732   	; 0x64d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    5e0e:	65 e7       	ldi	r22, 0x75	; 117
    5e10:	74 e0       	ldi	r23, 0x04	; 4
    5e12:	55 c3       	rjmp	.+1706   	; 0x64be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1658>
				}
				return 1;
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e14:	81 30       	cpi	r24, 0x01	; 1
    5e16:	51 f4       	brne	.+20     	; 0x5e2c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfc6>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5e18:	67 e6       	ldi	r22, 0x67	; 103
    5e1a:	74 e0       	ldi	r23, 0x04	; 4
    5e1c:	86 ec       	ldi	r24, 0xC6	; 198
    5e1e:	94 e1       	ldi	r25, 0x14	; 20
    5e20:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5e24:	86 ec       	ldi	r24, 0xC6	; 198
    5e26:	94 e1       	ldi	r25, 0x14	; 20
    5e28:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    5e2c:	4b e1       	ldi	r20, 0x1B	; 27
    5e2e:	74 9e       	mul	r7, r20
    5e30:	50 01       	movw	r10, r0
    5e32:	11 24       	eor	r1, r1
    5e34:	e1 2c       	mov	r14, r1
    5e36:	f1 2c       	mov	r15, r1
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
				{
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
    5e38:	07 2d       	mov	r16, r7
    5e3a:	10 e0       	ldi	r17, 0x00	; 0
    5e3c:	68 01       	movw	r12, r16
    5e3e:	55 e6       	ldi	r21, 0x65	; 101
    5e40:	c5 1a       	sub	r12, r21
    5e42:	d1 08       	sbc	r13, r1
    5e44:	f7 01       	movw	r30, r14
    5e46:	ea 0d       	add	r30, r10
    5e48:	fb 1d       	adc	r31, r11
    5e4a:	ea 5b       	subi	r30, 0xBA	; 186
    5e4c:	fc 4f       	sbci	r31, 0xFC	; 252
    5e4e:	4a e0       	ldi	r20, 0x0A	; 10
    5e50:	50 e0       	ldi	r21, 0x00	; 0
    5e52:	60 81       	ld	r22, Z
    5e54:	86 ec       	ldi	r24, 0xC6	; 198
    5e56:	94 e1       	ldi	r25, 0x14	; 20
    5e58:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
					_kSERAIL_MON_WRITE_NO_LN(" ");
    5e5c:	65 e6       	ldi	r22, 0x65	; 101
    5e5e:	74 e0       	ldi	r23, 0x04	; 4
    5e60:	86 ec       	ldi	r24, 0xC6	; 198
    5e62:	94 e1       	ldi	r25, 0x14	; 20
    5e64:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5e68:	86 ec       	ldi	r24, 0xC6	; 198
    5e6a:	94 e1       	ldi	r25, 0x14	; 20
    5e6c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    5e70:	8f ef       	ldi	r24, 0xFF	; 255
    5e72:	e8 1a       	sub	r14, r24
    5e74:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5e76:	95 e0       	ldi	r25, 0x05	; 5
    5e78:	e9 16       	cp	r14, r25
    5e7a:	f1 04       	cpc	r15, r1
    5e7c:	19 f7       	brne	.-58     	; 0x5e44 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfde>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
					_kSERAIL_MON_WRITE_NO_LN(" ");
					_kSERIAL_MON_CLEAR();
				}
				
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5e82:	81 30       	cpi	r24, 0x01	; 1
    5e84:	99 f4       	brne	.+38     	; 0x5eac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1046>
				{
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
    5e86:	6f e4       	ldi	r22, 0x4F	; 79
    5e88:	74 e0       	ldi	r23, 0x04	; 4
    5e8a:	86 ec       	ldi	r24, 0xC6	; 198
    5e8c:	94 e1       	ldi	r25, 0x14	; 20
    5e8e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5e92:	b8 01       	movw	r22, r16
    5e94:	61 50       	subi	r22, 0x01	; 1
    5e96:	71 09       	sbc	r23, r1
    5e98:	4a e0       	ldi	r20, 0x0A	; 10
    5e9a:	50 e0       	ldi	r21, 0x00	; 0
    5e9c:	86 ec       	ldi	r24, 0xC6	; 198
    5e9e:	94 e1       	ldi	r25, 0x14	; 20
    5ea0:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5ea4:	86 ec       	ldi	r24, 0xC6	; 198
    5ea6:	94 e1       	ldi	r25, 0x14	; 20
    5ea8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    5eac:	8b e1       	ldi	r24, 0x1B	; 27
    5eae:	8c 9d       	mul	r24, r12
    5eb0:	80 01       	movw	r16, r0
    5eb2:	8d 9d       	mul	r24, r13
    5eb4:	10 0d       	add	r17, r0
    5eb6:	11 24       	eor	r1, r1
    5eb8:	08 51       	subi	r16, 0x18	; 24
    5eba:	12 4f       	sbci	r17, 0xF2	; 242
    5ebc:	a6 e0       	ldi	r26, 0x06	; 6
    5ebe:	7a 9e       	mul	r7, r26
    5ec0:	50 01       	movw	r10, r0
    5ec2:	11 24       	eor	r1, r1
    5ec4:	e1 2c       	mov	r14, r1
    5ec6:	f1 2c       	mov	r15, r1
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5ec8:	52 e0       	ldi	r21, 0x02	; 2
    5eca:	d5 2e       	mov	r13, r21
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    5ecc:	cc 24       	eor	r12, r12
    5ece:	c3 94       	inc	r12
    5ed0:	8b a9       	ldd	r24, Y+51	; 0x33
    5ed2:	8c 25       	eor	r24, r12
    5ed4:	81 70       	andi	r24, 0x01	; 1
    5ed6:	88 af       	std	Y+56, r24	; 0x38
							if(Subscribed_data_check())
							{
								if(Seperate_Out_Sub_Data())
								{
									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5ed8:	60 ed       	ldi	r22, 0xD0	; 208
    5eda:	26 2e       	mov	r2, r22
    5edc:	6f e0       	ldi	r22, 0x0F	; 15
    5ede:	36 2e       	mov	r3, r22
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > 0)
    5ee0:	f8 01       	movw	r30, r16
    5ee2:	ee 0d       	add	r30, r14
    5ee4:	ff 1d       	adc	r31, r15
    5ee6:	85 80       	ldd	r8, Z+5	; 0x05
    5ee8:	8f ef       	ldi	r24, 0xFF	; 255
    5eea:	88 0d       	add	r24, r8
    5eec:	82 31       	cpi	r24, 0x12	; 18
    5eee:	08 f0       	brcs	.+2      	; 0x5ef2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x108c>
    5ef0:	aa c2       	rjmp	.+1364   	; 0x6446 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15e0>
						unsigned char valve_number =0;
						unsigned char euro_valve_num=0,command_valve=0;
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5ef2:	b3 e0       	ldi	r27, 0x03	; 3
    5ef4:	b8 15       	cp	r27, r8
    5ef6:	90 f4       	brcc	.+36     	; 0x5f1c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10b6>
							euro_valve_num = 1;
							command_valve = valve_number;
						}
						else
						{
							if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5ef8:	8b ea       	ldi	r24, 0xAB	; 171
    5efa:	88 9e       	mul	r8, r24
    5efc:	91 2c       	mov	r9, r1
    5efe:	11 24       	eor	r1, r1
    5f00:	89 2d       	mov	r24, r9
    5f02:	86 95       	lsr	r24
    5f04:	98 2f       	mov	r25, r24
    5f06:	99 0f       	add	r25, r25
    5f08:	89 0f       	add	r24, r25
    5f0a:	88 1a       	sub	r8, r24
    5f0c:	96 94       	lsr	r9
    5f0e:	88 20       	and	r8, r8
    5f10:	11 f0       	breq	.+4      	; 0x5f16 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10b0>
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5f12:	93 94       	inc	r9
    5f14:	05 c0       	rjmp	.+10     	; 0x5f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10ba>
								command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							else
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    5f16:	43 e0       	ldi	r20, 0x03	; 3
    5f18:	84 2e       	mov	r8, r20
    5f1a:	02 c0       	rjmp	.+4      	; 0x5f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10ba>
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
						{
							euro_valve_num = 1;
    5f1c:	99 24       	eor	r9, r9
    5f1e:	93 94       	inc	r9
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							
						}
						/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f20:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5f24:	81 30       	cpi	r24, 0x01	; 1
    5f26:	89 f4       	brne	.+34     	; 0x5f4a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10e4>
						{
							_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5f28:	6b e3       	ldi	r22, 0x3B	; 59
    5f2a:	74 e0       	ldi	r23, 0x04	; 4
    5f2c:	86 ec       	ldi	r24, 0xC6	; 198
    5f2e:	94 e1       	ldi	r25, 0x14	; 20
    5f30:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    5f34:	4a e0       	ldi	r20, 0x0A	; 10
    5f36:	50 e0       	ldi	r21, 0x00	; 0
    5f38:	69 2d       	mov	r22, r9
    5f3a:	86 ec       	ldi	r24, 0xC6	; 198
    5f3c:	94 e1       	ldi	r25, 0x14	; 20
    5f3e:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
							_kSERIAL_MON_CLEAR();
    5f42:	86 ec       	ldi	r24, 0xC6	; 198
    5f44:	94 e1       	ldi	r25, 0x14	; 20
    5f46:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						
						
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5f4a:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
    5f4e:	81 11       	cpse	r24, r1
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5f50:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5f54:	84 e1       	ldi	r24, 0x14	; 20
    5f56:	e5 ef       	ldi	r30, 0xF5	; 245
    5f58:	f3 e1       	ldi	r31, 0x13	; 19
    5f5a:	11 92       	st	Z+, r1
    5f5c:	8a 95       	dec	r24
    5f5e:	e9 f7       	brne	.-6      	; 0x5f5a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10f4>
						count = _kRESET;
						/********************************** wireless valve command (on/off) **********************************/
						/* valve id, on/off command, pump run timer */
						
						/************************************* copy the euro valve ID *********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5f60:	29 2d       	mov	r18, r9
    5f62:	30 e0       	ldi	r19, 0x00	; 0
    5f64:	21 50       	subi	r18, 0x01	; 1
    5f66:	31 09       	sbc	r19, r1
    5f68:	f7 e0       	ldi	r31, 0x07	; 7
    5f6a:	f2 9f       	mul	r31, r18
    5f6c:	c0 01       	movw	r24, r0
    5f6e:	f3 9f       	mul	r31, r19
    5f70:	90 0d       	add	r25, r0
    5f72:	11 24       	eor	r1, r1
    5f74:	82 55       	subi	r24, 0x52	; 82
    5f76:	9c 4e       	sbci	r25, 0xEC	; 236
    5f78:	fc 01       	movw	r30, r24
    5f7a:	ec 58       	subi	r30, 0x8C	; 140
    5f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    5f7e:	20 81       	ld	r18, Z
    5f80:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5f84:	31 96       	adiw	r30, 0x01	; 1
    5f86:	20 81       	ld	r18, Z
    5f88:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5f8c:	31 96       	adiw	r30, 0x01	; 1
    5f8e:	20 81       	ld	r18, Z
    5f90:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5f94:	31 96       	adiw	r30, 0x01	; 1
    5f96:	20 81       	ld	r18, Z
    5f98:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5f9c:	31 96       	adiw	r30, 0x01	; 1
    5f9e:	20 81       	ld	r18, Z
    5fa0:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    5fa4:	31 96       	adiw	r30, 0x01	; 1
    5fa6:	20 81       	ld	r18, Z
    5fa8:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
						
						/*********************************** packet_id ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5fac:	d0 92 fb 13 	sts	0x13FB, r13	; 0x8013fb <_sRuble_Parameters+0x4d>
						
						/*********************************** copy on/off command ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    5fb0:	2b a9       	ldd	r18, Y+51	; 0x33
    5fb2:	20 93 fc 13 	sts	0x13FC, r18	; 0x8013fc <_sRuble_Parameters+0x4e>
						
						/********************************** copy operation mode ************************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5fb6:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    5fba:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
						
						/******************************** copy pump timer (used if selected mode is timer) *********************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    5fbe:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    5fc2:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    5fc6:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    5fca:	40 e0       	ldi	r20, 0x00	; 0
    5fcc:	50 e0       	ldi	r21, 0x00	; 0
    5fce:	74 2e       	mov	r7, r20
    5fd0:	81 2c       	mov	r8, r1
    5fd2:	91 2c       	mov	r9, r1
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5fd4:	3d e0       	ldi	r19, 0x0D	; 13
    5fd6:	34 9f       	mul	r19, r20
    5fd8:	b0 01       	movw	r22, r0
    5fda:	35 9f       	mul	r19, r21
    5fdc:	70 0d       	add	r23, r0
    5fde:	11 24       	eor	r1, r1
    5fe0:	6b 5e       	subi	r22, 0xEB	; 235
    5fe2:	73 4f       	sbci	r23, 0xF3	; 243
    5fe4:	29 2d       	mov	r18, r9
    5fe6:	30 e0       	ldi	r19, 0x00	; 0
    5fe8:	fb 01       	movw	r30, r22
    5fea:	e2 0f       	add	r30, r18
    5fec:	f3 1f       	adc	r31, r19
    5fee:	28 0f       	add	r18, r24
    5ff0:	39 1f       	adc	r19, r25
    5ff2:	d9 01       	movw	r26, r18
    5ff4:	ac 58       	subi	r26, 0x8C	; 140
    5ff6:	bf 4f       	sbci	r27, 0xFF	; 255
    5ff8:	21 81       	ldd	r18, Z+1	; 0x01
    5ffa:	3c 91       	ld	r19, X
    5ffc:	23 17       	cp	r18, r19
    5ffe:	19 f0       	breq	.+6      	; 0x6006 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11a0>
								{
									compare_id = _kVALVE_ID_LEN;
									id_len = _kRESET;
    6000:	81 2c       	mov	r8, r1
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
								{
									compare_id = _kVALVE_ID_LEN;
    6002:	36 e0       	ldi	r19, 0x06	; 6
    6004:	93 2e       	mov	r9, r19
									id_len = _kRESET;
								}
								id_len++;
    6006:	83 94       	inc	r8
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    6008:	93 94       	inc	r9
    600a:	a5 e0       	ldi	r26, 0x05	; 5
    600c:	a9 15       	cp	r26, r9
    600e:	50 f7       	brcc	.-44     	; 0x5fe4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x117e>
									id_len = _kRESET;
								}
								id_len++;
							}
							
							if(id_len == _kVALVE_ID_LEN)
    6010:	b6 e0       	ldi	r27, 0x06	; 6
    6012:	8b 16       	cp	r8, r27
    6014:	31 f0       	breq	.+12     	; 0x6022 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11bc>
    6016:	4f 5f       	subi	r20, 0xFF	; 255
    6018:	5f 4f       	sbci	r21, 0xFF	; 255
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
    601a:	46 30       	cpi	r20, 0x06	; 6
    601c:	51 05       	cpc	r21, r1
    601e:	b9 f6       	brne	.-82     	; 0x5fce <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1168>
    6020:	01 c0       	rjmp	.+2      	; 0x6024 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11be>
    6022:	67 2c       	mov	r6, r7
							{
								current_valve_number = j;    /* data send will update of this valve because valve get match */
								break;
							}
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6024:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6028:	81 30       	cpi	r24, 0x01	; 1
    602a:	89 f4       	brne	.+34     	; 0x604e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11e8>
						{
							_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    602c:	65 e2       	ldi	r22, 0x25	; 37
    602e:	74 e0       	ldi	r23, 0x04	; 4
    6030:	86 ec       	ldi	r24, 0xC6	; 198
    6032:	94 e1       	ldi	r25, 0x14	; 20
    6034:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    6038:	4a e0       	ldi	r20, 0x0A	; 10
    603a:	50 e0       	ldi	r21, 0x00	; 0
    603c:	66 2d       	mov	r22, r6
    603e:	86 ec       	ldi	r24, 0xC6	; 198
    6040:	94 e1       	ldi	r25, 0x14	; 20
    6042:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
							_kSERIAL_MON_CLEAR();
    6046:	86 ec       	ldi	r24, 0xC6	; 198
    6048:	94 e1       	ldi	r25, 0x14	; 20
    604a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    604e:	ed e0       	ldi	r30, 0x0D	; 13
    6050:	6e 9e       	mul	r6, r30
    6052:	20 01       	movw	r4, r0
    6054:	11 24       	eor	r1, r1
    6056:	71 2c       	mov	r7, r1
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    6058:	fd e0       	ldi	r31, 0x0D	; 13
    605a:	f6 9d       	mul	r31, r6
    605c:	c0 01       	movw	r24, r0
    605e:	11 24       	eor	r1, r1
    6060:	9c 01       	movw	r18, r24
    6062:	2b 5e       	subi	r18, 0xEB	; 235
    6064:	33 4f       	sbci	r19, 0xF3	; 243
    6066:	a9 01       	movw	r20, r18
    6068:	45 5f       	subi	r20, 0xF5	; 245
    606a:	5f 4f       	sbci	r21, 0xFF	; 255
    606c:	5d ab       	std	Y+53, r21	; 0x35
    606e:	4c ab       	std	Y+52, r20	; 0x34
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    6070:	d9 01       	movw	r26, r18
    6072:	18 96       	adiw	r26, 0x08	; 8
    6074:	bf ab       	std	Y+55, r27	; 0x37
    6076:	ae ab       	std	Y+54, r26	; 0x36
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    6078:	fc 01       	movw	r30, r24
    607a:	ea 5e       	subi	r30, 0xEA	; 234
    607c:	f3 4f       	sbci	r31, 0xF3	; 243
    607e:	4f 01       	movw	r8, r30
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							if(Subscribed_data_check())
    6080:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    6084:	88 23       	and	r24, r24
    6086:	99 f0       	breq	.+38     	; 0x60ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1248>
							{
								if(Seperate_Out_Sub_Data())
    6088:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    608c:	88 23       	and	r24, r24
    608e:	79 f0       	breq	.+30     	; 0x60ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1248>
								{
									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    6090:	f1 01       	movw	r30, r2
    6092:	01 90       	ld	r0, Z+
    6094:	00 20       	and	r0, r0
    6096:	e9 f7       	brne	.-6      	; 0x6092 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x122c>
    6098:	31 97       	sbiw	r30, 0x01	; 1
    609a:	af 01       	movw	r20, r30
    609c:	40 5d       	subi	r20, 0xD0	; 208
    609e:	5f 40       	sbci	r21, 0x0F	; 15
    60a0:	21 e0       	ldi	r18, 0x01	; 1
    60a2:	60 ed       	ldi	r22, 0xD0	; 208
    60a4:	7f e0       	ldi	r23, 0x0F	; 15
    60a6:	82 e6       	ldi	r24, 0x62	; 98
    60a8:	9f e0       	ldi	r25, 0x0F	; 15
    60aa:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							data_send_counter++;
    60ae:	73 94       	inc	r7
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    60b0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    60b4:	81 30       	cpi	r24, 0x01	; 1
    60b6:	51 f4       	brne	.+20     	; 0x60cc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1266>
							{
								_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    60b8:	61 e0       	ldi	r22, 0x01	; 1
    60ba:	74 e0       	ldi	r23, 0x04	; 4
    60bc:	86 ec       	ldi	r24, 0xC6	; 198
    60be:	94 e1       	ldi	r25, 0x14	; 20
    60c0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    60c4:	86 ec       	ldi	r24, 0xC6	; 198
    60c6:	94 e1       	ldi	r25, 0x14	; 20
    60c8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    60cc:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    60d0:	8c e0       	ldi	r24, 0x0C	; 12
    60d2:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    60d6:	88 eb       	ldi	r24, 0xB8	; 184
    60d8:	9b e0       	ldi	r25, 0x0B	; 11
    60da:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
    60de:	88 23       	and	r24, r24
    60e0:	09 f4       	brne	.+2      	; 0x60e4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x127e>
    60e2:	6f c1       	rjmp	.+734    	; 0x63c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x155c>
							{
								/**************************** update the received data in buff lora rx_tx **********************/
								if(_kLORA_RECV_DATA())            /* check the received data */
    60e4:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
    60e8:	88 23       	and	r24, r24
    60ea:	09 f4       	brne	.+2      	; 0x60ee <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1288>
    60ec:	17 c1       	rjmp	.+558    	; 0x631c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14b6>
								{
									if(Subscribed_data_check())
    60ee:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    60f2:	88 23       	and	r24, r24
    60f4:	99 f0       	breq	.+38     	; 0x611c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12b6>
									{
										if(Seperate_Out_Sub_Data())
    60f6:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    60fa:	88 23       	and	r24, r24
    60fc:	79 f0       	breq	.+30     	; 0x611c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12b6>
										{
											//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
											Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    60fe:	f1 01       	movw	r30, r2
    6100:	01 90       	ld	r0, Z+
    6102:	00 20       	and	r0, r0
    6104:	e9 f7       	brne	.-6      	; 0x6100 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x129a>
    6106:	31 97       	sbiw	r30, 0x01	; 1
    6108:	af 01       	movw	r20, r30
    610a:	40 5d       	subi	r20, 0xD0	; 208
    610c:	5f 40       	sbci	r21, 0x0F	; 15
    610e:	21 e0       	ldi	r18, 0x01	; 1
    6110:	60 ed       	ldi	r22, 0xD0	; 208
    6112:	7f e0       	ldi	r23, 0x0F	; 15
    6114:	82 e6       	ldi	r24, 0x62	; 98
    6116:	9f e0       	ldi	r25, 0x0F	; 15
    6118:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
										}
									}
									//RF95_setModeRx_Continuous();
									/* check the id get matched to the valve or not */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    611c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6120:	81 30       	cpi	r24, 0x01	; 1
    6122:	59 f5       	brne	.+86     	; 0x617a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1314>
									{
										_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    6124:	6b ee       	ldi	r22, 0xEB	; 235
    6126:	73 e0       	ldi	r23, 0x03	; 3
    6128:	86 ec       	ldi	r24, 0xC6	; 198
    612a:	94 e1       	ldi	r25, 0x14	; 20
    612c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    6130:	4a e0       	ldi	r20, 0x0A	; 10
    6132:	50 e0       	ldi	r21, 0x00	; 0
    6134:	69 e0       	ldi	r22, 0x09	; 9
    6136:	74 e1       	ldi	r23, 0x14	; 20
    6138:	86 ec       	ldi	r24, 0xC6	; 198
    613a:	94 e1       	ldi	r25, 0x14	; 20
    613c:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
										Serial.println();
    6140:	86 ec       	ldi	r24, 0xC6	; 198
    6142:	94 e1       	ldi	r25, 0x14	; 20
    6144:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    6148:	86 ec       	ldi	r24, 0xC6	; 198
    614a:	94 e1       	ldi	r25, 0x14	; 20
    614c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    6150:	6d ec       	ldi	r22, 0xCD	; 205
    6152:	73 e0       	ldi	r23, 0x03	; 3
    6154:	86 ec       	ldi	r24, 0xC6	; 198
    6156:	94 e1       	ldi	r25, 0x14	; 20
    6158:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    615c:	47 e0       	ldi	r20, 0x07	; 7
    615e:	50 e0       	ldi	r21, 0x00	; 0
    6160:	b4 01       	movw	r22, r8
    6162:	86 ec       	ldi	r24, 0xC6	; 198
    6164:	94 e1       	ldi	r25, 0x14	; 20
    6166:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
										Serial.println();
    616a:	86 ec       	ldi	r24, 0xC6	; 198
    616c:	94 e1       	ldi	r25, 0x14	; 20
    616e:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    6172:	86 ec       	ldi	r24, 0xC6	; 198
    6174:	94 e1       	ldi	r25, 0x14	; 20
    6176:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    617a:	a9 e0       	ldi	r26, 0x09	; 9
    617c:	b4 e1       	ldi	r27, 0x14	; 20
    617e:	80 e0       	ldi	r24, 0x00	; 0
    6180:	90 e0       	ldi	r25, 0x00	; 0
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
									{
										if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    6182:	2d 91       	ld	r18, X+
    6184:	f2 01       	movw	r30, r4
    6186:	e8 0f       	add	r30, r24
    6188:	f9 1f       	adc	r31, r25
    618a:	eb 5e       	subi	r30, 0xEB	; 235
    618c:	f3 4f       	sbci	r31, 0xF3	; 243
    618e:	31 81       	ldd	r19, Z+1	; 0x01
    6190:	32 17       	cp	r19, r18
    6192:	09 f4       	brne	.+2      	; 0x6196 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1330>
    6194:	6a c0       	rjmp	.+212    	; 0x626a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1404>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    6196:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    619a:	81 30       	cpi	r24, 0x01	; 1
    619c:	51 f4       	brne	.+20     	; 0x61b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x134c>
											{
												_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    619e:	62 ea       	ldi	r22, 0xA2	; 162
    61a0:	73 e0       	ldi	r23, 0x03	; 3
    61a2:	86 ec       	ldi	r24, 0xC6	; 198
    61a4:	94 e1       	ldi	r25, 0x14	; 20
    61a6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    61aa:	86 ec       	ldi	r24, 0xC6	; 198
    61ac:	94 e1       	ldi	r25, 0x14	; 20
    61ae:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    61b2:	f2 e0       	ldi	r31, 0x02	; 2
    61b4:	7f 16       	cp	r7, r31
    61b6:	b9 f0       	breq	.+46     	; 0x61e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1380>
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    61b8:	ac a9       	ldd	r26, Y+52	; 0x34
    61ba:	bd a9       	ldd	r27, Y+53	; 0x35
    61bc:	cc 92       	st	X, r12
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    61be:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    61c2:	90 e0       	ldi	r25, 0x00	; 0
    61c4:	98 2f       	mov	r25, r24
    61c6:	88 27       	eor	r24, r24
    61c8:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    61cc:	82 2b       	or	r24, r18
    61ce:	ee a9       	ldd	r30, Y+54	; 0x36
    61d0:	ff a9       	ldd	r31, Y+55	; 0x37
    61d2:	91 83       	std	Z+1, r25	; 0x01
    61d4:	80 83       	st	Z, r24
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    61d6:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    61da:	fb a9       	ldd	r31, Y+51	; 0x33
    61dc:	f8 13       	cpse	r31, r24
    61de:	4b c0       	rjmp	.+150    	; 0x6276 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1410>
											return 0;
										}
									}
									else
									{
										data_send_counter = 3;
    61e0:	83 e0       	ldi	r24, 0x03	; 3
    61e2:	78 2e       	mov	r7, r24
    61e4:	26 c1       	rjmp	.+588    	; 0x6432 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
												_kSERIAL_MON_CLEAR();
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    61e6:	86 e0       	ldi	r24, 0x06	; 6
    61e8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    61ec:	84 e6       	ldi	r24, 0x64	; 100
    61ee:	90 e0       	ldi	r25, 0x00	; 0
    61f0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    61f4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    61f8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    61fc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    6200:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6204:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6208:	a0 62       	ori	r26, 0x20	; 32
    620a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    620e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    6212:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6216:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    621a:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    621e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    6222:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6226:	82 60       	ori	r24, 0x02	; 2
    6228:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    622c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    6230:	e1 2c       	mov	r14, r1
    6232:	f1 2c       	mov	r15, r1
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6234:	f8 01       	movw	r30, r16
    6236:	ee 0d       	add	r30, r14
    6238:	ff 1d       	adc	r31, r15
    623a:	e5 81       	ldd	r30, Z+5	; 0x05
    623c:	e3 31       	cpi	r30, 0x13	; 19
    623e:	68 f0       	brcs	.+26     	; 0x625a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13f4>
													{
														/********************************* turn on/off the wired valve *********************************/
														
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6240:	f0 e0       	ldi	r31, 0x00	; 0
    6242:	e7 5c       	subi	r30, 0xC7	; 199
    6244:	fb 4e       	sbci	r31, 0xEB	; 235
    6246:	61 e0       	ldi	r22, 0x01	; 1
    6248:	80 81       	ld	r24, Z
    624a:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
														_kDELAY_MS(200);
    624e:	68 ec       	ldi	r22, 0xC8	; 200
    6250:	70 e0       	ldi	r23, 0x00	; 0
    6252:	80 e0       	ldi	r24, 0x00	; 0
    6254:	90 e0       	ldi	r25, 0x00	; 0
    6256:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    625a:	2f ef       	ldi	r18, 0xFF	; 255
    625c:	e2 1a       	sub	r14, r18
    625e:	f2 0a       	sbc	r15, r18
												_gfault_Occure = _kFAULT_RESET_TIMER;
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6260:	35 e0       	ldi	r19, 0x05	; 5
    6262:	e3 16       	cp	r14, r19
    6264:	f1 04       	cpc	r15, r1
    6266:	31 f7       	brne	.-52     	; 0x6234 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13ce>
    6268:	e2 c0       	rjmp	.+452    	; 0x642e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
    626a:	01 96       	adiw	r24, 0x01	; 1
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
    626c:	86 30       	cpi	r24, 0x06	; 6
    626e:	91 05       	cpc	r25, r1
    6270:	09 f0       	breq	.+2      	; 0x6274 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x140e>
    6272:	87 cf       	rjmp	.-242    	; 0x6182 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x131c>
    6274:	a1 cf       	rjmp	.-190    	; 0x61b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1352>
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    6276:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    627a:	81 30       	cpi	r24, 0x01	; 1
    627c:	51 f4       	brne	.+20     	; 0x6292 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x142c>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail");
    627e:	6f e8       	ldi	r22, 0x8F	; 143
    6280:	73 e0       	ldi	r23, 0x03	; 3
    6282:	86 ec       	ldi	r24, 0xC6	; 198
    6284:	94 e1       	ldi	r25, 0x14	; 20
    6286:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    628a:	86 ec       	ldi	r24, 0xC6	; 198
    628c:	94 e1       	ldi	r25, 0x14	; 20
    628e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    6292:	42 e0       	ldi	r20, 0x02	; 2
    6294:	74 12       	cpse	r7, r20
    6296:	cd c0       	rjmp	.+410    	; 0x6432 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6298:	86 e0       	ldi	r24, 0x06	; 6
    629a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    629e:	84 e6       	ldi	r24, 0x64	; 100
    62a0:	90 e0       	ldi	r25, 0x00	; 0
    62a2:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    62a6:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    62aa:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    62ae:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    62b2:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    62b6:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    62ba:	a0 62       	ori	r26, 0x20	; 32
    62bc:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    62c0:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    62c4:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    62c8:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    62cc:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    62d0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    62d4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    62d8:	82 60       	ori	r24, 0x02	; 2
    62da:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    62de:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    62e2:	e1 2c       	mov	r14, r1
    62e4:	f1 2c       	mov	r15, r1
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    62e6:	f8 01       	movw	r30, r16
    62e8:	ee 0d       	add	r30, r14
    62ea:	ff 1d       	adc	r31, r15
    62ec:	e5 81       	ldd	r30, Z+5	; 0x05
    62ee:	e3 31       	cpi	r30, 0x13	; 19
    62f0:	68 f0       	brcs	.+26     	; 0x630c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14a6>
												{
													/********************************* turn on/off the wired valve *********************************/
													
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    62f2:	f0 e0       	ldi	r31, 0x00	; 0
    62f4:	e7 5c       	subi	r30, 0xC7	; 199
    62f6:	fb 4e       	sbci	r31, 0xEB	; 235
    62f8:	61 e0       	ldi	r22, 0x01	; 1
    62fa:	80 81       	ld	r24, Z
    62fc:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
													_kDELAY_MS(200);
    6300:	68 ec       	ldi	r22, 0xC8	; 200
    6302:	70 e0       	ldi	r23, 0x00	; 0
    6304:	80 e0       	ldi	r24, 0x00	; 0
    6306:	90 e0       	ldi	r25, 0x00	; 0
    6308:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    630c:	5f ef       	ldi	r21, 0xFF	; 255
    630e:	e5 1a       	sub	r14, r21
    6310:	f5 0a       	sbc	r15, r21
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6312:	85 e0       	ldi	r24, 0x05	; 5
    6314:	e8 16       	cp	r14, r24
    6316:	f1 04       	cpc	r15, r1
    6318:	31 f7       	brne	.-52     	; 0x62e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1480>
    631a:	89 c0       	rjmp	.+274    	; 0x642e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
										data_send_counter = 3;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    631c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6320:	81 30       	cpi	r24, 0x01	; 1
    6322:	51 f4       	brne	.+20     	; 0x6338 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14d2>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    6324:	64 e5       	ldi	r22, 0x54	; 84
    6326:	73 e0       	ldi	r23, 0x03	; 3
    6328:	86 ec       	ldi	r24, 0xC6	; 198
    632a:	94 e1       	ldi	r25, 0x14	; 20
    632c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    6330:	86 ec       	ldi	r24, 0xC6	; 198
    6332:	94 e1       	ldi	r25, 0x14	; 20
    6334:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									}
									if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    6338:	92 e0       	ldi	r25, 0x02	; 2
    633a:	79 12       	cpse	r7, r25
    633c:	7a c0       	rjmp	.+244    	; 0x6432 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    633e:	86 e0       	ldi	r24, 0x06	; 6
    6340:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    6344:	84 e6       	ldi	r24, 0x64	; 100
    6346:	90 e0       	ldi	r25, 0x00	; 0
    6348:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    634c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6350:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    6354:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    6358:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    635c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6360:	a0 62       	ori	r26, 0x20	; 32
    6362:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    6366:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    636a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    636e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    6372:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    6376:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    637a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    637e:	82 60       	ori	r24, 0x02	; 2
    6380:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    6384:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    6388:	e1 2c       	mov	r14, r1
    638a:	f1 2c       	mov	r15, r1
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    638c:	f8 01       	movw	r30, r16
    638e:	ee 0d       	add	r30, r14
    6390:	ff 1d       	adc	r31, r15
    6392:	e5 81       	ldd	r30, Z+5	; 0x05
    6394:	e3 31       	cpi	r30, 0x13	; 19
    6396:	68 f0       	brcs	.+26     	; 0x63b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x154c>
											{
												/********************************* turn on/off the wired valve *********************************/
												
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6398:	f0 e0       	ldi	r31, 0x00	; 0
    639a:	e7 5c       	subi	r30, 0xC7	; 199
    639c:	fb 4e       	sbci	r31, 0xEB	; 235
    639e:	61 e0       	ldi	r22, 0x01	; 1
    63a0:	80 81       	ld	r24, Z
    63a2:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
												_kDELAY_MS(200);
    63a6:	68 ec       	ldi	r22, 0xC8	; 200
    63a8:	70 e0       	ldi	r23, 0x00	; 0
    63aa:	80 e0       	ldi	r24, 0x00	; 0
    63ac:	90 e0       	ldi	r25, 0x00	; 0
    63ae:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    63b2:	af ef       	ldi	r26, 0xFF	; 255
    63b4:	ea 1a       	sub	r14, r26
    63b6:	fa 0a       	sbc	r15, r26
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    63b8:	b5 e0       	ldi	r27, 0x05	; 5
    63ba:	eb 16       	cp	r14, r27
    63bc:	f1 04       	cpc	r15, r1
    63be:	31 f7       	brne	.-52     	; 0x638c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
    63c0:	36 c0       	rjmp	.+108    	; 0x642e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    63c2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    63c6:	81 30       	cpi	r24, 0x01	; 1
    63c8:	51 f4       	brne	.+20     	; 0x63de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1578>
								{
									_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    63ca:	69 e1       	ldi	r22, 0x19	; 25
    63cc:	73 e0       	ldi	r23, 0x03	; 3
    63ce:	86 ec       	ldi	r24, 0xC6	; 198
    63d0:	94 e1       	ldi	r25, 0x14	; 20
    63d2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    63d6:	86 ec       	ldi	r24, 0xC6	; 198
    63d8:	94 e1       	ldi	r25, 0x14	; 20
    63da:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								//RF95_setModeRx_Continuous();
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    63de:	e2 e0       	ldi	r30, 0x02	; 2
    63e0:	7e 12       	cpse	r7, r30
    63e2:	27 c0       	rjmp	.+78     	; 0x6432 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
								{
									_gfault_Occure = _kFAULT_RESET_TIMER;
    63e4:	84 e6       	ldi	r24, 0x64	; 100
    63e6:	90 e0       	ldi	r25, 0x00	; 0
    63e8:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    63ec:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    63f0:	86 e0       	ldi	r24, 0x06	; 6
    63f2:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    63f6:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    63fa:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    63fe:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6402:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6406:	a0 62       	ori	r26, 0x20	; 32
    6408:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    640c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    6410:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6414:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    6418:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    641c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    6420:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6424:	82 60       	ori	r24, 0x02	; 2
    6426:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    642a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									return 0;          /* no data available */
    642e:	80 e0       	ldi	r24, 0x00	; 0
    6430:	51 c0       	rjmp	.+162    	; 0x64d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166e>
								}
							}
							_kDELAY_MS(1000);
    6432:	68 ee       	ldi	r22, 0xE8	; 232
    6434:	73 e0       	ldi	r23, 0x03	; 3
    6436:	80 e0       	ldi	r24, 0x00	; 0
    6438:	90 e0       	ldi	r25, 0x00	; 0
    643a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
							_kSERIAL_MON_CLEAR();
						}
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    643e:	f3 e0       	ldi	r31, 0x03	; 3
    6440:	7f 12       	cpse	r7, r31
    6442:	1e ce       	rjmp	.-964    	; 0x6080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x121a>
    6444:	2e c0       	rjmp	.+92     	; 0x64a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
						}
					}
					
					/******************************************************** handle wired valve *******************************************************************/
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6446:	22 e1       	ldi	r18, 0x12	; 18
    6448:	28 15       	cp	r18, r8
    644a:	78 f4       	brcc	.+30     	; 0x646a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1604>
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    644c:	e8 2d       	mov	r30, r8
    644e:	f0 e0       	ldi	r31, 0x00	; 0
    6450:	e7 5c       	subi	r30, 0xC7	; 199
    6452:	fb 4e       	sbci	r31, 0xEB	; 235
    6454:	68 ad       	ldd	r22, Y+56	; 0x38
    6456:	80 81       	ld	r24, Z
    6458:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
						_kDELAY_MS(200);
    645c:	68 ec       	ldi	r22, 0xC8	; 200
    645e:	70 e0       	ldi	r23, 0x00	; 0
    6460:	80 e0       	ldi	r24, 0x00	; 0
    6462:	90 e0       	ldi	r25, 0x00	; 0
    6464:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    6468:	1c c0       	rjmp	.+56     	; 0x64a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
    646a:	f5 01       	movw	r30, r10
    646c:	ee 0d       	add	r30, r14
    646e:	ff 1d       	adc	r31, r15
						if(on_off == _kON)
						{
						}
					}
					
					else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
    6470:	e7 5b       	subi	r30, 0xB7	; 183
    6472:	f2 4f       	sbci	r31, 0xF2	; 242
					{
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    6474:	80 81       	ld	r24, Z
    6476:	85 36       	cpi	r24, 0x65	; 101
    6478:	a1 f4       	brne	.+40     	; 0x64a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
    647a:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
						{
							if(on_off == _kON)
    647e:	3b a9       	ldd	r19, Y+51	; 0x33
    6480:	31 30       	cpi	r19, 0x01	; 1
    6482:	29 f4       	brne	.+10     	; 0x648e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1628>
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    6484:	88 23       	and	r24, r24
    6486:	69 f0       	breq	.+26     	; 0x64a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    6488:	30 93 7b 14 	sts	0x147B, r19	; 0x80147b <_sRuble_Parameters+0xcd>
    648c:	04 c0       	rjmp	.+8      	; 0x6496 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1630>
								}
								
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    648e:	88 23       	and	r24, r24
    6490:	41 f0       	breq	.+16     	; 0x64a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    6492:	d0 92 7b 14 	sts	0x147B, r13	; 0x80147b <_sRuble_Parameters+0xcd>
									_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    6496:	6b e7       	ldi	r22, 0x7B	; 123
    6498:	74 e1       	ldi	r23, 0x14	; 20
    649a:	88 ea       	ldi	r24, 0xA8	; 168
    649c:	9c e0       	ldi	r25, 0x0C	; 12
    649e:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    64a2:	4f ef       	ldi	r20, 0xFF	; 255
    64a4:	e4 1a       	sub	r14, r20
    64a6:	f4 0a       	sbc	r15, r20
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    64a8:	55 e0       	ldi	r21, 0x05	; 5
    64aa:	e5 16       	cp	r14, r21
    64ac:	f1 04       	cpc	r15, r1
    64ae:	09 f0       	breq	.+2      	; 0x64b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x164c>
    64b0:	17 cd       	rjmp	.-1490   	; 0x5ee0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x107a>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    64b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    64b6:	81 30       	cpi	r24, 0x01	; 1
    64b8:	61 f4       	brne	.+24     	; 0x64d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    64ba:	6a ef       	ldi	r22, 0xFA	; 250
    64bc:	72 e0       	ldi	r23, 0x02	; 2
    64be:	86 ec       	ldi	r24, 0xC6	; 198
    64c0:	94 e1       	ldi	r25, 0x14	; 20
    64c2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    64c6:	86 ec       	ldi	r24, 0xC6	; 198
    64c8:	94 e1       	ldi	r25, 0x14	; 20
    64ca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    64ce:	01 c0       	rjmp	.+2      	; 0x64d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				return 1;
			}
			
		}break;
	}
}
    64d0:	01 c0       	rjmp	.+2      	; 0x64d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166e>
						_kDELAY_MS(200);
					}
				}
			}
		}
		return 1;
    64d2:	81 e0       	ldi	r24, 0x01	; 1
				return 1;
			}
			
		}break;
	}
}
    64d4:	e9 96       	adiw	r28, 0x39	; 57
    64d6:	0f b6       	in	r0, 0x3f	; 63
    64d8:	f8 94       	cli
    64da:	de bf       	out	0x3e, r29	; 62
    64dc:	0f be       	out	0x3f, r0	; 63
    64de:	cd bf       	out	0x3d, r28	; 61
    64e0:	df 91       	pop	r29
    64e2:	cf 91       	pop	r28
    64e4:	1f 91       	pop	r17
    64e6:	0f 91       	pop	r16
    64e8:	ff 90       	pop	r15
    64ea:	ef 90       	pop	r14
    64ec:	df 90       	pop	r13
    64ee:	cf 90       	pop	r12
    64f0:	bf 90       	pop	r11
    64f2:	af 90       	pop	r10
    64f4:	9f 90       	pop	r9
    64f6:	8f 90       	pop	r8
    64f8:	7f 90       	pop	r7
    64fa:	6f 90       	pop	r6
    64fc:	5f 90       	pop	r5
    64fe:	4f 90       	pop	r4
    6500:	3f 90       	pop	r3
    6502:	2f 90       	pop	r2
    6504:	08 95       	ret

00006506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>:
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
		_kSERIAL_MON_CLEAR();
	}
}
    6506:	ff 92       	push	r15
    6508:	0f 93       	push	r16
    650a:	1f 93       	push	r17
    650c:	cf 93       	push	r28
    650e:	df 93       	push	r29
    6510:	0e e1       	ldi	r16, 0x1E	; 30
    6512:	19 e0       	ldi	r17, 0x09	; 9
    6514:	ca e1       	ldi	r28, 0x1A	; 26
    6516:	d5 e0       	ldi	r29, 0x05	; 5
    6518:	f8 01       	movw	r30, r16
    651a:	f1 90       	ld	r15, Z+
    651c:	8f 01       	movw	r16, r30
    651e:	ce 01       	movw	r24, r28
    6520:	0e 94 3b f0 	call	0x1e076	; 0x1e076 <eeprom_read_byte>
    6524:	f8 16       	cp	r15, r24
    6526:	21 f0       	breq	.+8      	; 0x6530 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x2a>
    6528:	6f 2d       	mov	r22, r15
    652a:	ce 01       	movw	r24, r28
    652c:	0e 94 43 f0 	call	0x1e086	; 0x1e086 <eeprom_write_byte>
    6530:	21 96       	adiw	r28, 0x01	; 1
    6532:	c0 3f       	cpi	r28, 0xF0	; 240
    6534:	f7 e0       	ldi	r31, 0x07	; 7
    6536:	df 07       	cpc	r29, r31
    6538:	79 f7       	brne	.-34     	; 0x6518 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x12>
    653a:	8e e1       	ldi	r24, 0x1E	; 30
    653c:	99 e0       	ldi	r25, 0x09	; 9
    653e:	df 91       	pop	r29
    6540:	cf 91       	pop	r28
    6542:	1f 91       	pop	r17
    6544:	0f 91       	pop	r16
    6546:	ff 90       	pop	r15
    6548:	08 95       	ret

0000654a <_Z24Return_Previous_Day_Datev>:
    654a:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    654e:	20 91 f3 13 	lds	r18, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    6552:	42 2f       	mov	r20, r18
    6554:	50 e0       	ldi	r21, 0x00	; 0
    6556:	fa 01       	movw	r30, r20
    6558:	31 97       	sbiw	r30, 0x01	; 1
    655a:	ec 30       	cpi	r30, 0x0C	; 12
    655c:	f1 05       	cpc	r31, r1
    655e:	08 f0       	brcs	.+2      	; 0x6562 <_Z24Return_Previous_Day_Datev+0x18>
    6560:	52 c0       	rjmp	.+164    	; 0x6606 <_Z24Return_Previous_Day_Datev+0xbc>
    6562:	88 27       	eor	r24, r24
    6564:	ee 58       	subi	r30, 0x8E	; 142
    6566:	ff 4f       	sbci	r31, 0xFF	; 255
    6568:	8f 4f       	sbci	r24, 0xFF	; 255
    656a:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
    656e:	91 30       	cpi	r25, 0x01	; 1
    6570:	89 f5       	brne	.+98     	; 0x65d4 <_Z24Return_Previous_Day_Datev+0x8a>
    6572:	fa 01       	movw	r30, r20
    6574:	31 97       	sbiw	r30, 0x01	; 1
    6576:	eb 30       	cpi	r30, 0x0B	; 11
    6578:	f1 05       	cpc	r31, r1
    657a:	58 f4       	brcc	.+22     	; 0x6592 <_Z24Return_Previous_Day_Datev+0x48>
    657c:	88 27       	eor	r24, r24
    657e:	e2 58       	subi	r30, 0x82	; 130
    6580:	ff 4f       	sbci	r31, 0xFF	; 255
    6582:	8f 4f       	sbci	r24, 0xFF	; 255
    6584:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
    6588:	8c e0       	ldi	r24, 0x0C	; 12
    658a:	01 c0       	rjmp	.+2      	; 0x658e <_Z24Return_Previous_Day_Datev+0x44>
    658c:	81 e0       	ldi	r24, 0x01	; 1
    658e:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6592:	8f e1       	ldi	r24, 0x1F	; 31
    6594:	08 95       	ret
    6596:	83 e0       	ldi	r24, 0x03	; 3
    6598:	fa cf       	rjmp	.-12     	; 0x658e <_Z24Return_Previous_Day_Datev+0x44>
    659a:	85 e0       	ldi	r24, 0x05	; 5
    659c:	f8 cf       	rjmp	.-16     	; 0x658e <_Z24Return_Previous_Day_Datev+0x44>
    659e:	87 e0       	ldi	r24, 0x07	; 7
    65a0:	f6 cf       	rjmp	.-20     	; 0x658e <_Z24Return_Previous_Day_Datev+0x44>
    65a2:	88 e0       	ldi	r24, 0x08	; 8
    65a4:	f4 cf       	rjmp	.-24     	; 0x658e <_Z24Return_Previous_Day_Datev+0x44>
    65a6:	8a e0       	ldi	r24, 0x0A	; 10
    65a8:	f2 cf       	rjmp	.-28     	; 0x658e <_Z24Return_Previous_Day_Datev+0x44>
    65aa:	91 30       	cpi	r25, 0x01	; 1
    65ac:	99 f4       	brne	.+38     	; 0x65d4 <_Z24Return_Previous_Day_Datev+0x8a>
    65ae:	27 30       	cpi	r18, 0x07	; 7
    65b0:	59 f0       	breq	.+22     	; 0x65c8 <_Z24Return_Previous_Day_Datev+0x7e>
    65b2:	20 f4       	brcc	.+8      	; 0x65bc <_Z24Return_Previous_Day_Datev+0x72>
    65b4:	25 30       	cpi	r18, 0x05	; 5
    65b6:	41 f5       	brne	.+80     	; 0x6608 <_Z24Return_Previous_Day_Datev+0xbe>
    65b8:	84 e0       	ldi	r24, 0x04	; 4
    65ba:	09 c0       	rjmp	.+18     	; 0x65ce <_Z24Return_Previous_Day_Datev+0x84>
    65bc:	2a 30       	cpi	r18, 0x0A	; 10
    65be:	31 f0       	breq	.+12     	; 0x65cc <_Z24Return_Previous_Day_Datev+0x82>
    65c0:	2c 30       	cpi	r18, 0x0C	; 12
    65c2:	11 f5       	brne	.+68     	; 0x6608 <_Z24Return_Previous_Day_Datev+0xbe>
    65c4:	8b e0       	ldi	r24, 0x0B	; 11
    65c6:	03 c0       	rjmp	.+6      	; 0x65ce <_Z24Return_Previous_Day_Datev+0x84>
    65c8:	86 e0       	ldi	r24, 0x06	; 6
    65ca:	01 c0       	rjmp	.+2      	; 0x65ce <_Z24Return_Previous_Day_Datev+0x84>
    65cc:	89 e0       	ldi	r24, 0x09	; 9
    65ce:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    65d2:	1a c0       	rjmp	.+52     	; 0x6608 <_Z24Return_Previous_Day_Datev+0xbe>
    65d4:	20 93 2b 09 	sts	0x092B, r18	; 0x80092b <_sSchedules+0xd>
    65d8:	13 c0       	rjmp	.+38     	; 0x6600 <_Z24Return_Previous_Day_Datev+0xb6>
    65da:	91 30       	cpi	r25, 0x01	; 1
    65dc:	71 f4       	brne	.+28     	; 0x65fa <_Z24Return_Previous_Day_Datev+0xb0>
    65de:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    65e2:	83 70       	andi	r24, 0x03	; 3
    65e4:	29 f0       	breq	.+10     	; 0x65f0 <_Z24Return_Previous_Day_Datev+0xa6>
    65e6:	82 e0       	ldi	r24, 0x02	; 2
    65e8:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    65ec:	8c e1       	ldi	r24, 0x1C	; 28
    65ee:	08 95       	ret
    65f0:	82 e0       	ldi	r24, 0x02	; 2
    65f2:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    65f6:	8d e1       	ldi	r24, 0x1D	; 29
    65f8:	08 95       	ret
    65fa:	83 e0       	ldi	r24, 0x03	; 3
    65fc:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6600:	8f ef       	ldi	r24, 0xFF	; 255
    6602:	89 0f       	add	r24, r25
    6604:	08 95       	ret
    6606:	08 95       	ret
    6608:	8e e1       	ldi	r24, 0x1E	; 30
    660a:	08 95       	ret

0000660c <_Z15Delete_Scheduleh>:
    660c:	88 23       	and	r24, r24
    660e:	a9 f1       	breq	.+106    	; 0x667a <_Z15Delete_Scheduleh+0x6e>
    6610:	30 91 d8 0b 	lds	r19, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    6614:	33 23       	and	r19, r19
    6616:	89 f1       	breq	.+98     	; 0x667a <_Z15Delete_Scheduleh+0x6e>
    6618:	30 91 d8 0b 	lds	r19, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    661c:	83 13       	cpse	r24, r19
    661e:	2d c0       	rjmp	.+90     	; 0x667a <_Z15Delete_Scheduleh+0x6e>
    6620:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
    6624:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
    6628:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    662c:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
    6630:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    6634:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    6638:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    663c:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    6640:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    6644:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
    6648:	23 30       	cpi	r18, 0x03	; 3
    664a:	51 f0       	breq	.+20     	; 0x6660 <_Z15Delete_Scheduleh+0x54>
    664c:	e2 2f       	mov	r30, r18
    664e:	f0 e0       	ldi	r31, 0x00	; 0
    6650:	ee 0f       	add	r30, r30
    6652:	ff 1f       	adc	r31, r31
    6654:	ee 57       	subi	r30, 0x7E	; 126
    6656:	f4 4f       	sbci	r31, 0xF4	; 244
    6658:	11 82       	std	Z+1, r1	; 0x01
    665a:	10 82       	st	Z, r1
    665c:	2f 5f       	subi	r18, 0xFF	; 255
    665e:	f4 cf       	rjmp	.-24     	; 0x6648 <_Z15Delete_Scheduleh+0x3c>
    6660:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    6664:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    6668:	93 30       	cpi	r25, 0x03	; 3
    666a:	39 f0       	breq	.+14     	; 0x667a <_Z15Delete_Scheduleh+0x6e>
    666c:	e9 2f       	mov	r30, r25
    666e:	f0 e0       	ldi	r31, 0x00	; 0
    6670:	e2 58       	subi	r30, 0x82	; 130
    6672:	f4 4f       	sbci	r31, 0xF4	; 244
    6674:	10 82       	st	Z, r1
    6676:	9f 5f       	subi	r25, 0xFF	; 255
    6678:	f7 cf       	rjmp	.-18     	; 0x6668 <_Z15Delete_Scheduleh+0x5c>
    667a:	08 95       	ret

0000667c <_Z35Return_Calculated_Previous_Day_Dateh>:

unsigned char Return_Calculated_Previous_Day_Date(unsigned char days_in_bet_schedule)
{
    667c:	ff 92       	push	r15
    667e:	0f 93       	push	r16
    6680:	1f 93       	push	r17
    6682:	cf 93       	push	r28
    6684:	df 93       	push	r29
	int make_date;
	unsigned char return_date, return_month;
	unsigned char year;
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6686:	f0 90 f4 13 	lds	r15, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Irrigating_Date == 0)
    668a:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    668e:	81 11       	cpse	r24, r1
    6690:	20 c0       	rjmp	.+64     	; 0x66d2 <_Z35Return_Calculated_Previous_Day_Dateh+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    6692:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6696:	81 30       	cpi	r24, 0x01	; 1
    6698:	51 f4       	brne	.+20     	; 0x66ae <_Z35Return_Calculated_Previous_Day_Dateh+0x32>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 1///////////////////////////////////////////");
    669a:	63 e8       	ldi	r22, 0x83	; 131
    669c:	7d e1       	ldi	r23, 0x1D	; 29
    669e:	86 ec       	ldi	r24, 0xC6	; 198
    66a0:	94 e1       	ldi	r25, 0x14	; 20
    66a2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    66a6:	86 ec       	ldi	r24, 0xC6	; 198
    66a8:	94 e1       	ldi	r25, 0x14	; 20
    66aa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Irrigating_Date = _sRuble_Parameters.Update_Local_Date[0];
    66ae:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    66b2:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    66b6:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    66ba:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		make_date = _sSchedules.Irrigating_Date - (_sSchedules.Days_In_Between_Schedules+1);
    66be:	00 91 28 09 	lds	r16, 0x0928	; 0x800928 <_sSchedules+0xa>
    66c2:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    66c6:	10 e0       	ldi	r17, 0x00	; 0
    66c8:	90 e0       	ldi	r25, 0x00	; 0
    66ca:	01 96       	adiw	r24, 0x01	; 1
    66cc:	08 1b       	sub	r16, r24
    66ce:	19 0b       	sbc	r17, r25
    66d0:	13 c0       	rjmp	.+38     	; 0x66f8 <_Z35Return_Calculated_Previous_Day_Dateh+0x7c>
		if(_sSchedules.Irrigating_Month == 0)
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
		}*/
		
		make_date = _sRuble_Parameters.Update_Local_Date[0] - (_sSchedules.Days_In_Between_Schedules+1);
    66d2:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    66d6:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    66da:	10 e0       	ldi	r17, 0x00	; 0
    66dc:	90 e0       	ldi	r25, 0x00	; 0
    66de:	01 96       	adiw	r24, 0x01	; 1
    66e0:	08 1b       	sub	r16, r24
    66e2:	19 0b       	sbc	r17, r25
		if(_sSchedules.Irrigating_Month == 0)
    66e4:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    66e8:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    66ec:	91 11       	cpse	r25, r1
    66ee:	02 c0       	rjmp	.+4      	; 0x66f4 <_Z35Return_Calculated_Previous_Day_Dateh+0x78>
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    66f0:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		}
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    66f4:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
	}
	
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    66f8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    66fc:	81 30       	cpi	r24, 0x01	; 1
    66fe:	89 f4       	brne	.+34     	; 0x6722 <_Z35Return_Calculated_Previous_Day_Dateh+0xa6>
	{
		_kSERAIL_MON_WRITE("sc make date");
    6700:	66 e7       	ldi	r22, 0x76	; 118
    6702:	7d e1       	ldi	r23, 0x1D	; 29
    6704:	86 ec       	ldi	r24, 0xC6	; 198
    6706:	94 e1       	ldi	r25, 0x14	; 20
    6708:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(make_date);
    670c:	4a e0       	ldi	r20, 0x0A	; 10
    670e:	50 e0       	ldi	r21, 0x00	; 0
    6710:	b8 01       	movw	r22, r16
    6712:	86 ec       	ldi	r24, 0xC6	; 198
    6714:	94 e1       	ldi	r25, 0x14	; 20
    6716:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
		_kSERIAL_MON_CLEAR();
    671a:	86 ec       	ldi	r24, 0xC6	; 198
    671c:	94 e1       	ldi	r25, 0x14	; 20
    671e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	
	
	if(make_date > 0)
    6722:	10 16       	cp	r1, r16
    6724:	11 06       	cpc	r1, r17
    6726:	24 f4       	brge	.+8      	; 0x6730 <_Z35Return_Calculated_Previous_Day_Dateh+0xb4>
	{
		return_date = make_date;
    6728:	d0 2f       	mov	r29, r16
		return_month = _sSchedules.Irrigating_Month;
    672a:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    672e:	71 c0       	rjmp	.+226    	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
	}
	else if(make_date == 0)
	{
		switch(_sSchedules.Irrigating_Month)
    6730:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6734:	8e 2f       	mov	r24, r30
    6736:	90 e0       	ldi	r25, 0x00	; 0
    6738:	fc 01       	movw	r30, r24
    673a:	31 97       	sbiw	r30, 0x01	; 1
	if(make_date > 0)
	{
		return_date = make_date;
		return_month = _sSchedules.Irrigating_Month;
	}
	else if(make_date == 0)
    673c:	01 15       	cp	r16, r1
    673e:	11 05       	cpc	r17, r1
    6740:	49 f5       	brne	.+82     	; 0x6794 <_Z35Return_Calculated_Previous_Day_Dateh+0x118>
	{
		switch(_sSchedules.Irrigating_Month)
    6742:	ec 30       	cpi	r30, 0x0C	; 12
    6744:	f1 05       	cpc	r31, r1
    6746:	08 f0       	brcs	.+2      	; 0x674a <_Z35Return_Calculated_Previous_Day_Dateh+0xce>
    6748:	64 c0       	rjmp	.+200    	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    674a:	88 27       	eor	r24, r24
    674c:	e7 57       	subi	r30, 0x77	; 119
    674e:	ff 4f       	sbci	r31, 0xFF	; 255
    6750:	8f 4f       	sbci	r24, 0xFF	; 255
    6752:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31;
				return_month = _eDEC;
    6756:	cc e0       	ldi	r28, 0x0C	; 12
    6758:	18 c0       	rjmp	.+48     	; 0x678a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eFEB:
			{
				return_date = 31;
				return_month = _eJAN;
    675a:	c1 e0       	ldi	r28, 0x01	; 1
    675c:	16 c0       	rjmp	.+44     	; 0x678a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMARCH:
			{
				if(year%4)
    675e:	8f 2d       	mov	r24, r15
    6760:	83 70       	andi	r24, 0x03	; 3
				else
				{
					return_date = 29;
				}
				
				return_month = _eFEB;
    6762:	c2 e0       	ldi	r28, 0x02	; 2
				return_date = 31;
				return_month = _eJAN;
			}break;
			case _eMARCH:
			{
				if(year%4)
    6764:	09 f0       	breq	.+2      	; 0x6768 <_Z35Return_Calculated_Previous_Day_Dateh+0xec>
    6766:	54 c0       	rjmp	.+168    	; 0x6810 <_Z35Return_Calculated_Previous_Day_Dateh+0x194>
				{
					return_date = 28;
				}
				else
				{
					return_date = 29;
    6768:	dd e1       	ldi	r29, 0x1D	; 29
    676a:	53 c0       	rjmp	.+166    	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
				return_month = _eFEB;
			}break;
			case _eAPR:
			{
				return_date = 31;
				return_month = _eMARCH;
    676c:	c3 e0       	ldi	r28, 0x03	; 3
    676e:	0d c0       	rjmp	.+26     	; 0x678a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMAY:
			{
				return_date = 30;
				return_month = _eAPR;
    6770:	c4 e0       	ldi	r28, 0x04	; 4
    6772:	0e c0       	rjmp	.+28     	; 0x6790 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eJUN:
			{
				return_date = 31;
				return_month = _eMAY;
    6774:	c5 e0       	ldi	r28, 0x05	; 5
    6776:	09 c0       	rjmp	.+18     	; 0x678a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eJUL:
			{
				return_date = 30;
				return_month = _eJUN;
    6778:	c6 e0       	ldi	r28, 0x06	; 6
    677a:	0a c0       	rjmp	.+20     	; 0x6790 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eAUG:
			{
				return_date = 31;
				return_month = _eJUL;
    677c:	c7 e0       	ldi	r28, 0x07	; 7
    677e:	05 c0       	rjmp	.+10     	; 0x678a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eSEP:
			{
				return_date = 31;
				return_month = _eAUG;
    6780:	c8 e0       	ldi	r28, 0x08	; 8
    6782:	03 c0       	rjmp	.+6      	; 0x678a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eOCT:
			{
				return_date = 30;
				return_month = _eSEP;
    6784:	c9 e0       	ldi	r28, 0x09	; 9
    6786:	04 c0       	rjmp	.+8      	; 0x6790 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eNOV:
			{
				return_date = 31;
				return_month = _eOCT;
    6788:	ca e0       	ldi	r28, 0x0A	; 10
				return_date = 30;
				return_month = _eSEP;
			}break;
			case _eNOV:
			{
				return_date = 31;
    678a:	df e1       	ldi	r29, 0x1F	; 31
				return_month = _eOCT;
			}break;
    678c:	42 c0       	rjmp	.+132    	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30;
				return_month = _eNOV;
    678e:	cb e0       	ldi	r28, 0x0B	; 11
				return_date = 31;
				return_month = _eOCT;
			}break;
			case _eDEC:
			{
				return_date = 30;
    6790:	de e1       	ldi	r29, 0x1E	; 30
				return_month = _eNOV;
			}break;
    6792:	3f c0       	rjmp	.+126    	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
		}
	}
	
	else if(make_date < 0)
	{
		switch(_sSchedules.Irrigating_Month)
    6794:	ec 30       	cpi	r30, 0x0C	; 12
    6796:	f1 05       	cpc	r31, r1
    6798:	e0 f5       	brcc	.+120    	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    679a:	88 27       	eor	r24, r24
    679c:	eb 56       	subi	r30, 0x6B	; 107
    679e:	ff 4f       	sbci	r31, 0xFF	; 255
    67a0:	8f 4f       	sbci	r24, 0xFF	; 255
    67a2:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31 +  make_date;
    67a6:	df e1       	ldi	r29, 0x1F	; 31
    67a8:	d0 0f       	add	r29, r16
				return_month = _eDEC;
    67aa:	cc e0       	ldi	r28, 0x0C	; 12
			}break;
    67ac:	32 c0       	rjmp	.+100    	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eFEB:
			{
				return_date = 31+  make_date;
    67ae:	df e1       	ldi	r29, 0x1F	; 31
    67b0:	d0 0f       	add	r29, r16
				return_month = _eJAN;
    67b2:	c1 e0       	ldi	r28, 0x01	; 1
			}break;
    67b4:	2e c0       	rjmp	.+92     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMARCH:
			{
				if(year%4)
    67b6:	8f 2d       	mov	r24, r15
    67b8:	83 70       	andi	r24, 0x03	; 3
    67ba:	11 f0       	breq	.+4      	; 0x67c0 <_Z35Return_Calculated_Previous_Day_Dateh+0x144>
				{
					return_date = 28+  make_date;
    67bc:	dc e1       	ldi	r29, 0x1C	; 28
    67be:	01 c0       	rjmp	.+2      	; 0x67c2 <_Z35Return_Calculated_Previous_Day_Dateh+0x146>
				}
				else
				{
					return_date = 29+  make_date;
    67c0:	dd e1       	ldi	r29, 0x1D	; 29
    67c2:	d0 0f       	add	r29, r16
				}
				
				return_month = _eFEB;
    67c4:	c2 e0       	ldi	r28, 0x02	; 2
    67c6:	25 c0       	rjmp	.+74     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eAPR:
			{
				return_date = 31+  make_date;
    67c8:	df e1       	ldi	r29, 0x1F	; 31
    67ca:	d0 0f       	add	r29, r16
				return_month = _eMARCH;
    67cc:	c3 e0       	ldi	r28, 0x03	; 3
			}break;
    67ce:	21 c0       	rjmp	.+66     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMAY:
			{
				return_date = 30+  make_date;
    67d0:	de e1       	ldi	r29, 0x1E	; 30
    67d2:	d0 0f       	add	r29, r16
				return_month = _eAPR;
    67d4:	c4 e0       	ldi	r28, 0x04	; 4
			}break;
    67d6:	1d c0       	rjmp	.+58     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUN:
			{
				return_date = 31+  make_date;
    67d8:	df e1       	ldi	r29, 0x1F	; 31
    67da:	d0 0f       	add	r29, r16
				return_month = _eMAY;
    67dc:	c5 e0       	ldi	r28, 0x05	; 5
			}break;
    67de:	19 c0       	rjmp	.+50     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUL:
			{
				return_date = 30+  make_date;
    67e0:	de e1       	ldi	r29, 0x1E	; 30
    67e2:	d0 0f       	add	r29, r16
				return_month = _eJUN;
    67e4:	c6 e0       	ldi	r28, 0x06	; 6
			}break;
    67e6:	15 c0       	rjmp	.+42     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eAUG:
			{
				return_date = 31+  make_date;
    67e8:	df e1       	ldi	r29, 0x1F	; 31
    67ea:	d0 0f       	add	r29, r16
				return_month = _eJUL;
    67ec:	c7 e0       	ldi	r28, 0x07	; 7
			}break;
    67ee:	11 c0       	rjmp	.+34     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eSEP:
			{
				return_date = 31+  make_date;
    67f0:	df e1       	ldi	r29, 0x1F	; 31
    67f2:	d0 0f       	add	r29, r16
				return_month = _eAUG;
    67f4:	c8 e0       	ldi	r28, 0x08	; 8
			}break;
    67f6:	0d c0       	rjmp	.+26     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eOCT:
			{
				return_date = 30+  make_date;
    67f8:	de e1       	ldi	r29, 0x1E	; 30
    67fa:	d0 0f       	add	r29, r16
				return_month = _eSEP;
    67fc:	c9 e0       	ldi	r28, 0x09	; 9
			}break;
    67fe:	09 c0       	rjmp	.+18     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eNOV:
			{
				return_date = 31+  make_date;
    6800:	df e1       	ldi	r29, 0x1F	; 31
    6802:	d0 0f       	add	r29, r16
				return_month = _eOCT;
    6804:	ca e0       	ldi	r28, 0x0A	; 10
			}break;
    6806:	05 c0       	rjmp	.+10     	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30+  make_date;
    6808:	de e1       	ldi	r29, 0x1E	; 30
    680a:	d0 0f       	add	r29, r16
				return_month = _eNOV;
    680c:	cb e0       	ldi	r28, 0x0B	; 11
			}break;
    680e:	01 c0       	rjmp	.+2      	; 0x6812 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eMARCH:
			{
				if(year%4)
				{
					return_date = 28;
    6810:	dc e1       	ldi	r29, 0x1C	; 28
			}break;
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6812:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6816:	81 30       	cpi	r24, 0x01	; 1
    6818:	51 f4       	brne	.+20     	; 0x682e <_Z35Return_Calculated_Previous_Day_Dateh+0x1b2>
	{
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_date");
    681a:	6d e5       	ldi	r22, 0x5D	; 93
    681c:	7d e1       	ldi	r23, 0x1D	; 29
    681e:	86 ec       	ldi	r24, 0xC6	; 198
    6820:	94 e1       	ldi	r25, 0x14	; 20
    6822:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    6826:	86 ec       	ldi	r24, 0xC6	; 198
    6828:	94 e1       	ldi	r25, 0x14	; 20
    682a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_date  = return_date;
    682e:	d0 93 ec 0b 	sts	0x0BEC, r29	; 0x800bec <_sSchedules+0x2ce>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6832:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6836:	81 30       	cpi	r24, 0x01	; 1
    6838:	91 f4       	brne	.+36     	; 0x685e <_Z35Return_Calculated_Previous_Day_Dateh+0x1e2>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_date);
    683a:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    683e:	4a e0       	ldi	r20, 0x0A	; 10
    6840:	50 e0       	ldi	r21, 0x00	; 0
    6842:	86 ec       	ldi	r24, 0xC6	; 198
    6844:	94 e1       	ldi	r25, 0x14	; 20
    6846:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_Month");
    684a:	63 e4       	ldi	r22, 0x43	; 67
    684c:	7d e1       	ldi	r23, 0x1D	; 29
    684e:	86 ec       	ldi	r24, 0xC6	; 198
    6850:	94 e1       	ldi	r25, 0x14	; 20
    6852:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    6856:	86 ec       	ldi	r24, 0xC6	; 198
    6858:	94 e1       	ldi	r25, 0x14	; 20
    685a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_Month = return_month;
    685e:	c0 93 ed 0b 	sts	0x0BED, r28	; 0x800bed <_sSchedules+0x2cf>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6862:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6866:	81 30       	cpi	r24, 0x01	; 1
    6868:	61 f4       	brne	.+24     	; 0x6882 <_Z35Return_Calculated_Previous_Day_Dateh+0x206>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
    686a:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    686e:	4a e0       	ldi	r20, 0x0A	; 10
    6870:	50 e0       	ldi	r21, 0x00	; 0
    6872:	86 ec       	ldi	r24, 0xC6	; 198
    6874:	94 e1       	ldi	r25, 0x14	; 20
    6876:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    687a:	86 ec       	ldi	r24, 0xC6	; 198
    687c:	94 e1       	ldi	r25, 0x14	; 20
    687e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
}
    6882:	df 91       	pop	r29
    6884:	cf 91       	pop	r28
    6886:	1f 91       	pop	r17
    6888:	0f 91       	pop	r16
    688a:	ff 90       	pop	r15
    688c:	08 95       	ret

0000688e <_Z22Day_In_Bet_Schedullingh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules)
{
    688e:	bf 92       	push	r11
    6890:	cf 92       	push	r12
    6892:	df 92       	push	r13
    6894:	ef 92       	push	r14
    6896:	ff 92       	push	r15
    6898:	0f 93       	push	r16
    689a:	1f 93       	push	r17
    689c:	cf 93       	push	r28
    689e:	df 93       	push	r29
    68a0:	e8 2e       	mov	r14, r24
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	date  = _sRuble_Parameters.Update_Local_Date[0];
    68a2:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
	month = _sRuble_Parameters.Update_Local_Date[1];
    68a6:	d0 91 f3 13 	lds	r29, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
	year  = _sRuble_Parameters.Update_Local_Date[2];
    68aa:	b0 90 f4 13 	lds	r11, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    68ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    68b2:	81 30       	cpi	r24, 0x01	; 1
    68b4:	09 f0       	breq	.+2      	; 0x68b8 <_Z22Day_In_Bet_Schedullingh+0x2a>
    68b6:	5a c0       	rjmp	.+180    	; 0x696c <_Z22Day_In_Bet_Schedullingh+0xde>
	{
		_kSERAIL_MON_WRITE("date : ");
    68b8:	6b e3       	ldi	r22, 0x3B	; 59
    68ba:	7d e1       	ldi	r23, 0x1D	; 29
    68bc:	86 ec       	ldi	r24, 0xC6	; 198
    68be:	94 e1       	ldi	r25, 0x14	; 20
    68c0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    68c4:	4a e0       	ldi	r20, 0x0A	; 10
    68c6:	50 e0       	ldi	r21, 0x00	; 0
    68c8:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    68cc:	86 ec       	ldi	r24, 0xC6	; 198
    68ce:	94 e1       	ldi	r25, 0x14	; 20
    68d0:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    68d4:	86 ec       	ldi	r24, 0xC6	; 198
    68d6:	94 e1       	ldi	r25, 0x14	; 20
    68d8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("month : ");
    68dc:	62 e3       	ldi	r22, 0x32	; 50
    68de:	7d e1       	ldi	r23, 0x1D	; 29
    68e0:	86 ec       	ldi	r24, 0xC6	; 198
    68e2:	94 e1       	ldi	r25, 0x14	; 20
    68e4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    68e8:	4a e0       	ldi	r20, 0x0A	; 10
    68ea:	50 e0       	ldi	r21, 0x00	; 0
    68ec:	60 91 f3 13 	lds	r22, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    68f0:	86 ec       	ldi	r24, 0xC6	; 198
    68f2:	94 e1       	ldi	r25, 0x14	; 20
    68f4:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    68f8:	86 ec       	ldi	r24, 0xC6	; 198
    68fa:	94 e1       	ldi	r25, 0x14	; 20
    68fc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("year : ");
    6900:	6a e2       	ldi	r22, 0x2A	; 42
    6902:	7d e1       	ldi	r23, 0x1D	; 29
    6904:	86 ec       	ldi	r24, 0xC6	; 198
    6906:	94 e1       	ldi	r25, 0x14	; 20
    6908:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    690c:	4a e0       	ldi	r20, 0x0A	; 10
    690e:	50 e0       	ldi	r21, 0x00	; 0
    6910:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    6914:	86 ec       	ldi	r24, 0xC6	; 198
    6916:	94 e1       	ldi	r25, 0x14	; 20
    6918:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    691c:	86 ec       	ldi	r24, 0xC6	; 198
    691e:	94 e1       	ldi	r25, 0x14	; 20
    6920:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating date : ");
    6924:	67 e1       	ldi	r22, 0x17	; 23
    6926:	7d e1       	ldi	r23, 0x1D	; 29
    6928:	86 ec       	ldi	r24, 0xC6	; 198
    692a:	94 e1       	ldi	r25, 0x14	; 20
    692c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Date);
    6930:	60 91 28 09 	lds	r22, 0x0928	; 0x800928 <_sSchedules+0xa>
    6934:	4a e0       	ldi	r20, 0x0A	; 10
    6936:	50 e0       	ldi	r21, 0x00	; 0
    6938:	86 ec       	ldi	r24, 0xC6	; 198
    693a:	94 e1       	ldi	r25, 0x14	; 20
    693c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6940:	86 ec       	ldi	r24, 0xC6	; 198
    6942:	94 e1       	ldi	r25, 0x14	; 20
    6944:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating month : ");
    6948:	63 e0       	ldi	r22, 0x03	; 3
    694a:	7d e1       	ldi	r23, 0x1D	; 29
    694c:	86 ec       	ldi	r24, 0xC6	; 198
    694e:	94 e1       	ldi	r25, 0x14	; 20
    6950:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Month);
    6954:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <_sSchedules+0xb>
    6958:	4a e0       	ldi	r20, 0x0A	; 10
    695a:	50 e0       	ldi	r21, 0x00	; 0
    695c:	86 ec       	ldi	r24, 0xC6	; 198
    695e:	94 e1       	ldi	r25, 0x14	; 20
    6960:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6964:	86 ec       	ldi	r24, 0xC6	; 198
    6966:	94 e1       	ldi	r25, 0x14	; 20
    6968:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    696c:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    6970:	cc 24       	eor	r12, r12
    6972:	c3 94       	inc	r12
    6974:	ce 0c       	add	r12, r14
    6976:	d1 2c       	mov	r13, r1
    6978:	10 e0       	ldi	r17, 0x00	; 0
    697a:	96 01       	movw	r18, r12
    697c:	28 0f       	add	r18, r24
    697e:	31 1d       	adc	r19, r1
    6980:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6984:	02 17       	cp	r16, r18
    6986:	13 07       	cpc	r17, r19
    6988:	0c f4       	brge	.+2      	; 0x698c <_Z22Day_In_Bet_Schedullingh+0xfe>
    698a:	44 c0       	rjmp	.+136    	; 0x6a14 <_Z22Day_In_Bet_Schedullingh+0x186>
    698c:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6990:	d8 13       	cpse	r29, r24
    6992:	40 c0       	rjmp	.+128    	; 0x6a14 <_Z22Day_In_Bet_Schedullingh+0x186>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6994:	91 30       	cpi	r25, 0x01	; 1
    6996:	d9 f5       	brne	.+118    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6998:	66 ef       	ldi	r22, 0xF6	; 246
    699a:	7c e1       	ldi	r23, 0x1C	; 28
    699c:	1f c0       	rjmp	.+62     	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    699e:	91 30       	cpi	r25, 0x01	; 1
    69a0:	51 f4       	brne	.+20     	; 0x69b6 <_Z22Day_In_Bet_Schedullingh+0x128>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    69a2:	69 ee       	ldi	r22, 0xE9	; 233
    69a4:	7c e1       	ldi	r23, 0x1C	; 28
    69a6:	86 ec       	ldi	r24, 0xC6	; 198
    69a8:	94 e1       	ldi	r25, 0x14	; 20
    69aa:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    69ae:	86 ec       	ldi	r24, 0xC6	; 198
    69b0:	94 e1       	ldi	r25, 0x14	; 20
    69b2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    69b6:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    69ba:	d1 30       	cpi	r29, 0x01	; 1
    69bc:	41 f5       	brne	.+80     	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    69be:	8f e1       	ldi	r24, 0x1F	; 31
    69c0:	89 1b       	sub	r24, r25
    69c2:	98 01       	movw	r18, r16
    69c4:	28 0f       	add	r18, r24
    69c6:	31 1d       	adc	r19, r1
    69c8:	2c 15       	cp	r18, r12
    69ca:	3d 05       	cpc	r19, r13
    69cc:	0c f4       	brge	.+2      	; 0x69d0 <_Z22Day_In_Bet_Schedullingh+0x142>
    69ce:	bb c1       	rjmp	.+886    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    69d0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    69d4:	81 30       	cpi	r24, 0x01	; 1
    69d6:	d9 f4       	brne	.+54     	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    69d8:	6c ed       	ldi	r22, 0xDC	; 220
    69da:	7c e1       	ldi	r23, 0x1C	; 28
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    69dc:	86 ec       	ldi	r24, 0xC6	; 198
    69de:	94 e1       	ldi	r25, 0x14	; 20
    69e0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    69e4:	86 ec       	ldi	r24, 0xC6	; 198
    69e6:	94 e1       	ldi	r25, 0x14	; 20
    69e8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    69ec:	10 c0       	rjmp	.+32     	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    69ee:	91 30       	cpi	r25, 0x01	; 1
    69f0:	51 f4       	brne	.+20     	; 0x6a06 <_Z22Day_In_Bet_Schedullingh+0x178>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    69f2:	6f ec       	ldi	r22, 0xCF	; 207
    69f4:	7c e1       	ldi	r23, 0x1C	; 28
    69f6:	86 ec       	ldi	r24, 0xC6	; 198
    69f8:	94 e1       	ldi	r25, 0x14	; 20
    69fa:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    69fe:	86 ec       	ldi	r24, 0xC6	; 198
    6a00:	94 e1       	ldi	r25, 0x14	; 20
    6a02:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a06:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6a0a:	d2 30       	cpi	r29, 0x02	; 2
    6a0c:	c1 f0       	breq	.+48     	; 0x6a3e <_Z22Day_In_Bet_Schedullingh+0x1b0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("day in btw 1");
				_kSERIAL_MON_CLEAR();
			}
			return 2;
    6a0e:	c2 e0       	ldi	r28, 0x02	; 2
    6a10:	8c 2f       	mov	r24, r28
    6a12:	a9 c3       	rjmp	.+1874   	; 0x7166 <_Z22Day_In_Bet_Schedullingh+0x8d8>
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6a14:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6a18:	d8 17       	cp	r29, r24
    6a1a:	09 f4       	brne	.+2      	; 0x6a1e <_Z22Day_In_Bet_Schedullingh+0x190>
    6a1c:	9b c1       	rjmp	.+822    	; 0x6d54 <_Z22Day_In_Bet_Schedullingh+0x4c6>
			{
				switch(_sSchedules.Irrigating_Month)
    6a1e:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    6a22:	4c 2f       	mov	r20, r28
    6a24:	50 e0       	ldi	r21, 0x00	; 0
    6a26:	fa 01       	movw	r30, r20
    6a28:	31 97       	sbiw	r30, 0x01	; 1
    6a2a:	ec 30       	cpi	r30, 0x0C	; 12
    6a2c:	f1 05       	cpc	r31, r1
    6a2e:	08 f0       	brcs	.+2      	; 0x6a32 <_Z22Day_In_Bet_Schedullingh+0x1a4>
    6a30:	8a c1       	rjmp	.+788    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
    6a32:	88 27       	eor	r24, r24
    6a34:	ef 55       	subi	r30, 0x5F	; 95
    6a36:	ff 4f       	sbci	r31, 0xFF	; 255
    6a38:	8f 4f       	sbci	r24, 0xFF	; 255
    6a3a:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eFEB)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a3e:	8f e1       	ldi	r24, 0x1F	; 31
    6a40:	89 1b       	sub	r24, r25
    6a42:	98 01       	movw	r18, r16
    6a44:	28 0f       	add	r18, r24
    6a46:	31 1d       	adc	r19, r1
    6a48:	2c 15       	cp	r18, r12
    6a4a:	3d 05       	cpc	r19, r13
    6a4c:	0c f4       	brge	.+2      	; 0x6a50 <_Z22Day_In_Bet_Schedullingh+0x1c2>
    6a4e:	7b c1       	rjmp	.+758    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a50:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6a54:	81 30       	cpi	r24, 0x01	; 1
    6a56:	d9 f6       	brne	.-74     	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6a58:	62 ec       	ldi	r22, 0xC2	; 194
    6a5a:	7c e1       	ldi	r23, 0x1C	; 28
    6a5c:	bf cf       	rjmp	.-130    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a5e:	91 30       	cpi	r25, 0x01	; 1
    6a60:	51 f4       	brne	.+20     	; 0x6a76 <_Z22Day_In_Bet_Schedullingh+0x1e8>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6a62:	65 eb       	ldi	r22, 0xB5	; 181
    6a64:	7c e1       	ldi	r23, 0x1C	; 28
    6a66:	86 ec       	ldi	r24, 0xC6	; 198
    6a68:	94 e1       	ldi	r25, 0x14	; 20
    6a6a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a6e:	86 ec       	ldi	r24, 0xC6	; 198
    6a70:	94 e1       	ldi	r25, 0x14	; 20
    6a72:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a76:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6a7a:	d4 30       	cpi	r29, 0x04	; 4
    6a7c:	41 f6       	brne	.-112    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a7e:	8f e1       	ldi	r24, 0x1F	; 31
    6a80:	89 1b       	sub	r24, r25
    6a82:	98 01       	movw	r18, r16
    6a84:	28 0f       	add	r18, r24
    6a86:	31 1d       	adc	r19, r1
    6a88:	2c 15       	cp	r18, r12
    6a8a:	3d 05       	cpc	r19, r13
    6a8c:	0c f4       	brge	.+2      	; 0x6a90 <_Z22Day_In_Bet_Schedullingh+0x202>
    6a8e:	5b c1       	rjmp	.+694    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6a94:	81 30       	cpi	r24, 0x01	; 1
    6a96:	09 f0       	breq	.+2      	; 0x6a9a <_Z22Day_In_Bet_Schedullingh+0x20c>
    6a98:	ba cf       	rjmp	.-140    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6a9a:	68 ea       	ldi	r22, 0xA8	; 168
    6a9c:	7c e1       	ldi	r23, 0x1C	; 28
    6a9e:	9e cf       	rjmp	.-196    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aa0:	91 30       	cpi	r25, 0x01	; 1
    6aa2:	51 f4       	brne	.+20     	; 0x6ab8 <_Z22Day_In_Bet_Schedullingh+0x22a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6aa4:	6b e9       	ldi	r22, 0x9B	; 155
    6aa6:	7c e1       	ldi	r23, 0x1C	; 28
    6aa8:	86 ec       	ldi	r24, 0xC6	; 198
    6aaa:	94 e1       	ldi	r25, 0x14	; 20
    6aac:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ab0:	86 ec       	ldi	r24, 0xC6	; 198
    6ab2:	94 e1       	ldi	r25, 0x14	; 20
    6ab4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6ab8:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6abc:	d6 30       	cpi	r29, 0x06	; 6
    6abe:	09 f0       	breq	.+2      	; 0x6ac2 <_Z22Day_In_Bet_Schedullingh+0x234>
    6ac0:	a6 cf       	rjmp	.-180    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ac2:	8f e1       	ldi	r24, 0x1F	; 31
    6ac4:	89 1b       	sub	r24, r25
    6ac6:	98 01       	movw	r18, r16
    6ac8:	28 0f       	add	r18, r24
    6aca:	31 1d       	adc	r19, r1
    6acc:	2c 15       	cp	r18, r12
    6ace:	3d 05       	cpc	r19, r13
    6ad0:	0c f4       	brge	.+2      	; 0x6ad4 <_Z22Day_In_Bet_Schedullingh+0x246>
    6ad2:	39 c1       	rjmp	.+626    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ad4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ad8:	81 30       	cpi	r24, 0x01	; 1
    6ada:	09 f0       	breq	.+2      	; 0x6ade <_Z22Day_In_Bet_Schedullingh+0x250>
    6adc:	98 cf       	rjmp	.-208    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ade:	6e e8       	ldi	r22, 0x8E	; 142
    6ae0:	7c e1       	ldi	r23, 0x1C	; 28
    6ae2:	7c cf       	rjmp	.-264    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ae4:	91 30       	cpi	r25, 0x01	; 1
    6ae6:	51 f4       	brne	.+20     	; 0x6afc <_Z22Day_In_Bet_Schedullingh+0x26e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ae8:	61 e8       	ldi	r22, 0x81	; 129
    6aea:	7c e1       	ldi	r23, 0x1C	; 28
    6aec:	86 ec       	ldi	r24, 0xC6	; 198
    6aee:	94 e1       	ldi	r25, 0x14	; 20
    6af0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6af4:	86 ec       	ldi	r24, 0xC6	; 198
    6af6:	94 e1       	ldi	r25, 0x14	; 20
    6af8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6afc:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6b00:	d8 30       	cpi	r29, 0x08	; 8
    6b02:	09 f0       	breq	.+2      	; 0x6b06 <_Z22Day_In_Bet_Schedullingh+0x278>
    6b04:	84 cf       	rjmp	.-248    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b06:	8f e1       	ldi	r24, 0x1F	; 31
    6b08:	89 1b       	sub	r24, r25
    6b0a:	98 01       	movw	r18, r16
    6b0c:	28 0f       	add	r18, r24
    6b0e:	31 1d       	adc	r19, r1
    6b10:	2c 15       	cp	r18, r12
    6b12:	3d 05       	cpc	r19, r13
    6b14:	0c f4       	brge	.+2      	; 0x6b18 <_Z22Day_In_Bet_Schedullingh+0x28a>
    6b16:	17 c1       	rjmp	.+558    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b18:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6b1c:	81 30       	cpi	r24, 0x01	; 1
    6b1e:	09 f0       	breq	.+2      	; 0x6b22 <_Z22Day_In_Bet_Schedullingh+0x294>
    6b20:	76 cf       	rjmp	.-276    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6b22:	64 e7       	ldi	r22, 0x74	; 116
    6b24:	7c e1       	ldi	r23, 0x1C	; 28
    6b26:	5a cf       	rjmp	.-332    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b28:	91 30       	cpi	r25, 0x01	; 1
    6b2a:	51 f4       	brne	.+20     	; 0x6b40 <_Z22Day_In_Bet_Schedullingh+0x2b2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b2c:	67 e6       	ldi	r22, 0x67	; 103
    6b2e:	7c e1       	ldi	r23, 0x1C	; 28
    6b30:	86 ec       	ldi	r24, 0xC6	; 198
    6b32:	94 e1       	ldi	r25, 0x14	; 20
    6b34:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b38:	86 ec       	ldi	r24, 0xC6	; 198
    6b3a:	94 e1       	ldi	r25, 0x14	; 20
    6b3c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b40:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6b44:	d9 30       	cpi	r29, 0x09	; 9
    6b46:	09 f0       	breq	.+2      	; 0x6b4a <_Z22Day_In_Bet_Schedullingh+0x2bc>
    6b48:	62 cf       	rjmp	.-316    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b4a:	8f e1       	ldi	r24, 0x1F	; 31
    6b4c:	89 1b       	sub	r24, r25
    6b4e:	98 01       	movw	r18, r16
    6b50:	28 0f       	add	r18, r24
    6b52:	31 1d       	adc	r19, r1
    6b54:	2c 15       	cp	r18, r12
    6b56:	3d 05       	cpc	r19, r13
    6b58:	0c f4       	brge	.+2      	; 0x6b5c <_Z22Day_In_Bet_Schedullingh+0x2ce>
    6b5a:	f5 c0       	rjmp	.+490    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b5c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6b60:	81 30       	cpi	r24, 0x01	; 1
    6b62:	09 f0       	breq	.+2      	; 0x6b66 <_Z22Day_In_Bet_Schedullingh+0x2d8>
    6b64:	54 cf       	rjmp	.-344    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6b66:	6a e5       	ldi	r22, 0x5A	; 90
    6b68:	7c e1       	ldi	r23, 0x1C	; 28
    6b6a:	38 cf       	rjmp	.-400    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b6c:	91 30       	cpi	r25, 0x01	; 1
    6b6e:	51 f4       	brne	.+20     	; 0x6b84 <_Z22Day_In_Bet_Schedullingh+0x2f6>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b70:	6d e4       	ldi	r22, 0x4D	; 77
    6b72:	7c e1       	ldi	r23, 0x1C	; 28
    6b74:	86 ec       	ldi	r24, 0xC6	; 198
    6b76:	94 e1       	ldi	r25, 0x14	; 20
    6b78:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b7c:	86 ec       	ldi	r24, 0xC6	; 198
    6b7e:	94 e1       	ldi	r25, 0x14	; 20
    6b80:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b84:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6b88:	db 30       	cpi	r29, 0x0B	; 11
    6b8a:	09 f0       	breq	.+2      	; 0x6b8e <_Z22Day_In_Bet_Schedullingh+0x300>
    6b8c:	40 cf       	rjmp	.-384    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b8e:	8f e1       	ldi	r24, 0x1F	; 31
    6b90:	89 1b       	sub	r24, r25
    6b92:	98 01       	movw	r18, r16
    6b94:	28 0f       	add	r18, r24
    6b96:	31 1d       	adc	r19, r1
    6b98:	2c 15       	cp	r18, r12
    6b9a:	3d 05       	cpc	r19, r13
    6b9c:	0c f4       	brge	.+2      	; 0x6ba0 <_Z22Day_In_Bet_Schedullingh+0x312>
    6b9e:	d3 c0       	rjmp	.+422    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ba0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ba4:	81 30       	cpi	r24, 0x01	; 1
    6ba6:	09 f0       	breq	.+2      	; 0x6baa <_Z22Day_In_Bet_Schedullingh+0x31c>
    6ba8:	32 cf       	rjmp	.-412    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6baa:	60 e4       	ldi	r22, 0x40	; 64
    6bac:	7c e1       	ldi	r23, 0x1C	; 28
    6bae:	16 cf       	rjmp	.-468    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6bb0:	8b 2d       	mov	r24, r11
    6bb2:	83 70       	andi	r24, 0x03	; 3
    6bb4:	11 f1       	breq	.+68     	; 0x6bfa <_Z22Day_In_Bet_Schedullingh+0x36c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bb6:	91 30       	cpi	r25, 0x01	; 1
    6bb8:	51 f4       	brne	.+20     	; 0x6bce <_Z22Day_In_Bet_Schedullingh+0x340>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6bba:	63 e3       	ldi	r22, 0x33	; 51
    6bbc:	7c e1       	ldi	r23, 0x1C	; 28
    6bbe:	86 ec       	ldi	r24, 0xC6	; 198
    6bc0:	94 e1       	ldi	r25, 0x14	; 20
    6bc2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6bc6:	86 ec       	ldi	r24, 0xC6	; 198
    6bc8:	94 e1       	ldi	r25, 0x14	; 20
    6bca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6bce:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6bd2:	d3 30       	cpi	r29, 0x03	; 3
    6bd4:	09 f0       	breq	.+2      	; 0x6bd8 <_Z22Day_In_Bet_Schedullingh+0x34a>
    6bd6:	b7 c0       	rjmp	.+366    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6bd8:	8c e1       	ldi	r24, 0x1C	; 28
    6bda:	89 1b       	sub	r24, r25
    6bdc:	98 01       	movw	r18, r16
    6bde:	28 0f       	add	r18, r24
    6be0:	31 1d       	adc	r19, r1
    6be2:	2c 15       	cp	r18, r12
    6be4:	3d 05       	cpc	r19, r13
    6be6:	0c f4       	brge	.+2      	; 0x6bea <_Z22Day_In_Bet_Schedullingh+0x35c>
    6be8:	ae c0       	rjmp	.+348    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6bee:	81 30       	cpi	r24, 0x01	; 1
    6bf0:	09 f0       	breq	.+2      	; 0x6bf4 <_Z22Day_In_Bet_Schedullingh+0x366>
    6bf2:	0d cf       	rjmp	.-486    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6bf4:	66 e2       	ldi	r22, 0x26	; 38
    6bf6:	7c e1       	ldi	r23, 0x1C	; 28
    6bf8:	cc c0       	rjmp	.+408    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
								}
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bfa:	91 30       	cpi	r25, 0x01	; 1
    6bfc:	51 f4       	brne	.+20     	; 0x6c12 <_Z22Day_In_Bet_Schedullingh+0x384>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6bfe:	69 e1       	ldi	r22, 0x19	; 25
    6c00:	7c e1       	ldi	r23, 0x1C	; 28
    6c02:	86 ec       	ldi	r24, 0xC6	; 198
    6c04:	94 e1       	ldi	r25, 0x14	; 20
    6c06:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6c0a:	86 ec       	ldi	r24, 0xC6	; 198
    6c0c:	94 e1       	ldi	r25, 0x14	; 20
    6c0e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6c12:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6c16:	d3 30       	cpi	r29, 0x03	; 3
    6c18:	09 f0       	breq	.+2      	; 0x6c1c <_Z22Day_In_Bet_Schedullingh+0x38e>
    6c1a:	f9 ce       	rjmp	.-526    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6c1c:	8d e1       	ldi	r24, 0x1D	; 29
    6c1e:	89 1b       	sub	r24, r25
    6c20:	98 01       	movw	r18, r16
    6c22:	28 0f       	add	r18, r24
    6c24:	31 1d       	adc	r19, r1
    6c26:	2c 15       	cp	r18, r12
    6c28:	3d 05       	cpc	r19, r13
    6c2a:	0c f4       	brge	.+2      	; 0x6c2e <_Z22Day_In_Bet_Schedullingh+0x3a0>
    6c2c:	8c c0       	rjmp	.+280    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c32:	81 30       	cpi	r24, 0x01	; 1
    6c34:	09 f0       	breq	.+2      	; 0x6c38 <_Z22Day_In_Bet_Schedullingh+0x3aa>
    6c36:	eb ce       	rjmp	.-554    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6c38:	6c e0       	ldi	r22, 0x0C	; 12
    6c3a:	7c e1       	ldi	r23, 0x1C	; 28
    6c3c:	aa c0       	rjmp	.+340    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c3e:	91 30       	cpi	r25, 0x01	; 1
    6c40:	51 f4       	brne	.+20     	; 0x6c56 <_Z22Day_In_Bet_Schedullingh+0x3c8>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6c42:	6f ef       	ldi	r22, 0xFF	; 255
    6c44:	7b e1       	ldi	r23, 0x1B	; 27
    6c46:	86 ec       	ldi	r24, 0xC6	; 198
    6c48:	94 e1       	ldi	r25, 0x14	; 20
    6c4a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6c4e:	86 ec       	ldi	r24, 0xC6	; 198
    6c50:	94 e1       	ldi	r25, 0x14	; 20
    6c52:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6c56:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    6c5a:	d5 30       	cpi	r29, 0x05	; 5
    6c5c:	09 f0       	breq	.+2      	; 0x6c60 <_Z22Day_In_Bet_Schedullingh+0x3d2>
    6c5e:	73 c0       	rjmp	.+230    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6c60:	8e e1       	ldi	r24, 0x1E	; 30
    6c62:	89 1b       	sub	r24, r25
    6c64:	98 01       	movw	r18, r16
    6c66:	28 0f       	add	r18, r24
    6c68:	31 1d       	adc	r19, r1
    6c6a:	2c 15       	cp	r18, r12
    6c6c:	3d 05       	cpc	r19, r13
    6c6e:	0c f4       	brge	.+2      	; 0x6c72 <_Z22Day_In_Bet_Schedullingh+0x3e4>
    6c70:	6a c0       	rjmp	.+212    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c72:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c76:	81 30       	cpi	r24, 0x01	; 1
    6c78:	09 f0       	breq	.+2      	; 0x6c7c <_Z22Day_In_Bet_Schedullingh+0x3ee>
    6c7a:	c9 ce       	rjmp	.-622    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6c7c:	62 ef       	ldi	r22, 0xF2	; 242
    6c7e:	7b e1       	ldi	r23, 0x1B	; 27
    6c80:	ad ce       	rjmp	.-678    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c82:	91 30       	cpi	r25, 0x01	; 1
    6c84:	51 f4       	brne	.+20     	; 0x6c9a <_Z22Day_In_Bet_Schedullingh+0x40c>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6c86:	65 ee       	ldi	r22, 0xE5	; 229
    6c88:	7b e1       	ldi	r23, 0x1B	; 27
    6c8a:	86 ec       	ldi	r24, 0xC6	; 198
    6c8c:	94 e1       	ldi	r25, 0x14	; 20
    6c8e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6c92:	86 ec       	ldi	r24, 0xC6	; 198
    6c94:	94 e1       	ldi	r25, 0x14	; 20
    6c96:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6c9a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    6c9e:	d7 30       	cpi	r29, 0x07	; 7
    6ca0:	09 f0       	breq	.+2      	; 0x6ca4 <_Z22Day_In_Bet_Schedullingh+0x416>
    6ca2:	51 c0       	rjmp	.+162    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ca4:	8e e1       	ldi	r24, 0x1E	; 30
    6ca6:	89 1b       	sub	r24, r25
    6ca8:	98 01       	movw	r18, r16
    6caa:	28 0f       	add	r18, r24
    6cac:	31 1d       	adc	r19, r1
    6cae:	2c 15       	cp	r18, r12
    6cb0:	3d 05       	cpc	r19, r13
    6cb2:	0c f4       	brge	.+2      	; 0x6cb6 <_Z22Day_In_Bet_Schedullingh+0x428>
    6cb4:	48 c0       	rjmp	.+144    	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cb6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6cba:	81 30       	cpi	r24, 0x01	; 1
    6cbc:	09 f0       	breq	.+2      	; 0x6cc0 <_Z22Day_In_Bet_Schedullingh+0x432>
    6cbe:	a7 ce       	rjmp	.-690    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6cc0:	68 ed       	ldi	r22, 0xD8	; 216
    6cc2:	7b e1       	ldi	r23, 0x1B	; 27
    6cc4:	8b ce       	rjmp	.-746    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cc6:	91 30       	cpi	r25, 0x01	; 1
    6cc8:	51 f4       	brne	.+20     	; 0x6cde <_Z22Day_In_Bet_Schedullingh+0x450>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6cca:	6b ec       	ldi	r22, 0xCB	; 203
    6ccc:	7b e1       	ldi	r23, 0x1B	; 27
    6cce:	86 ec       	ldi	r24, 0xC6	; 198
    6cd0:	94 e1       	ldi	r25, 0x14	; 20
    6cd2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cd6:	86 ec       	ldi	r24, 0xC6	; 198
    6cd8:	94 e1       	ldi	r25, 0x14	; 20
    6cda:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6cde:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    6ce2:	da 30       	cpi	r29, 0x0A	; 10
    6ce4:	81 f5       	brne	.+96     	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ce6:	8e e1       	ldi	r24, 0x1E	; 30
    6ce8:	89 1b       	sub	r24, r25
    6cea:	98 01       	movw	r18, r16
    6cec:	28 0f       	add	r18, r24
    6cee:	31 1d       	adc	r19, r1
    6cf0:	2c 15       	cp	r18, r12
    6cf2:	3d 05       	cpc	r19, r13
    6cf4:	44 f1       	brlt	.+80     	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cf6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6cfa:	81 30       	cpi	r24, 0x01	; 1
    6cfc:	09 f0       	breq	.+2      	; 0x6d00 <_Z22Day_In_Bet_Schedullingh+0x472>
    6cfe:	87 ce       	rjmp	.-754    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d00:	6e eb       	ldi	r22, 0xBE	; 190
    6d02:	7b e1       	ldi	r23, 0x1B	; 27
    6d04:	6b ce       	rjmp	.-810    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d06:	91 30       	cpi	r25, 0x01	; 1
    6d08:	51 f4       	brne	.+20     	; 0x6d1e <_Z22Day_In_Bet_Schedullingh+0x490>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6d0a:	61 eb       	ldi	r22, 0xB1	; 177
    6d0c:	7b e1       	ldi	r23, 0x1B	; 27
    6d0e:	86 ec       	ldi	r24, 0xC6	; 198
    6d10:	94 e1       	ldi	r25, 0x14	; 20
    6d12:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d16:	86 ec       	ldi	r24, 0xC6	; 198
    6d18:	94 e1       	ldi	r25, 0x14	; 20
    6d1a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6d1e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    6d22:	dc 30       	cpi	r29, 0x0C	; 12
    6d24:	81 f4       	brne	.+32     	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d26:	8e e1       	ldi	r24, 0x1E	; 30
    6d28:	89 1b       	sub	r24, r25
    6d2a:	98 01       	movw	r18, r16
    6d2c:	28 0f       	add	r18, r24
    6d2e:	31 1d       	adc	r19, r1
    6d30:	2c 15       	cp	r18, r12
    6d32:	3d 05       	cpc	r19, r13
    6d34:	44 f0       	brlt	.+16     	; 0x6d46 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d3a:	81 30       	cpi	r24, 0x01	; 1
    6d3c:	09 f0       	breq	.+2      	; 0x6d40 <_Z22Day_In_Bet_Schedullingh+0x4b2>
    6d3e:	67 ce       	rjmp	.-818    	; 0x6a0e <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d40:	64 ea       	ldi	r22, 0xA4	; 164
    6d42:	7b e1       	ldi	r23, 0x1B	; 27
    6d44:	4b ce       	rjmp	.-874    	; 0x69dc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d46:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d4a:	81 30       	cpi	r24, 0x01	; 1
    6d4c:	79 f4       	brne	.+30     	; 0x6d6c <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6d4e:	66 e9       	ldi	r22, 0x96	; 150
    6d50:	7b e1       	ldi	r23, 0x1B	; 27
    6d52:	04 c0       	rjmp	.+8      	; 0x6d5c <_Z22Day_In_Bet_Schedullingh+0x4ce>
					_kSERIAL_MON_CLEAR();
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d54:	91 30       	cpi	r25, 0x01	; 1
    6d56:	51 f4       	brne	.+20     	; 0x6d6c <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6d58:	68 e8       	ldi	r22, 0x88	; 136
    6d5a:	7b e1       	ldi	r23, 0x1B	; 27
    6d5c:	86 ec       	ldi	r24, 0xC6	; 198
    6d5e:	94 e1       	ldi	r25, 0x14	; 20
    6d60:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6d64:	86 ec       	ldi	r24, 0xC6	; 198
    6d66:	94 e1       	ldi	r25, 0x14	; 20
    6d68:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		
		//printf("\n");
		
		Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    6d6c:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    6d70:	f1 2c       	mov	r15, r1
    6d72:	97 01       	movw	r18, r14
    6d74:	28 0f       	add	r18, r24
    6d76:	31 1d       	adc	r19, r1
    6d78:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d7c:	02 17       	cp	r16, r18
    6d7e:	13 07       	cpc	r17, r19
    6d80:	1c f1       	brlt	.+70     	; 0x6dc8 <_Z22Day_In_Bet_Schedullingh+0x53a>
    6d82:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6d86:	d8 13       	cpse	r29, r24
    6d88:	1f c0       	rjmp	.+62     	; 0x6dc8 <_Z22Day_In_Bet_Schedullingh+0x53a>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d8a:	c1 30       	cpi	r28, 0x01	; 1
    6d8c:	d9 f4       	brne	.+54     	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6d8e:	6b e7       	ldi	r22, 0x7B	; 123
    6d90:	7b e1       	ldi	r23, 0x1B	; 27
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d92:	86 ec       	ldi	r24, 0xC6	; 198
    6d94:	94 e1       	ldi	r25, 0x14	; 20
    6d96:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6d9a:	86 ec       	ldi	r24, 0xC6	; 198
    6d9c:	94 e1       	ldi	r25, 0x14	; 20
    6d9e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    6da2:	36 ce       	rjmp	.-916    	; 0x6a10 <_Z22Day_In_Bet_Schedullingh+0x182>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6da4:	c1 30       	cpi	r28, 0x01	; 1
    6da6:	51 f4       	brne	.+20     	; 0x6dbc <_Z22Day_In_Bet_Schedullingh+0x52e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6da8:	6e e6       	ldi	r22, 0x6E	; 110
    6daa:	7b e1       	ldi	r23, 0x1B	; 27
    6dac:	86 ec       	ldi	r24, 0xC6	; 198
    6dae:	94 e1       	ldi	r25, 0x14	; 20
    6db0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6db4:	86 ec       	ldi	r24, 0xC6	; 198
    6db6:	94 e1       	ldi	r25, 0x14	; 20
    6db8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6dbc:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6dc0:	d1 30       	cpi	r29, 0x01	; 1
    6dc2:	b9 f0       	breq	.+46     	; 0x6df2 <_Z22Day_In_Bet_Schedullingh+0x564>
								return 1;
							}
						}
						else
						{
							return 1;
    6dc4:	c1 e0       	ldi	r28, 0x01	; 1
    6dc6:	24 ce       	rjmp	.-952    	; 0x6a10 <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			return 1;
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6dc8:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6dcc:	d8 17       	cp	r29, r24
    6dce:	09 f4       	brne	.+2      	; 0x6dd2 <_Z22Day_In_Bet_Schedullingh+0x544>
    6dd0:	ba c1       	rjmp	.+884    	; 0x7146 <_Z22Day_In_Bet_Schedullingh+0x8b8>
			{
				switch(_sSchedules.Irrigating_Month)
    6dd2:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6dd6:	8e 2f       	mov	r24, r30
    6dd8:	90 e0       	ldi	r25, 0x00	; 0
    6dda:	fc 01       	movw	r30, r24
    6ddc:	31 97       	sbiw	r30, 0x01	; 1
    6dde:	ec 30       	cpi	r30, 0x0C	; 12
    6de0:	f1 05       	cpc	r31, r1
    6de2:	08 f0       	brcs	.+2      	; 0x6de6 <_Z22Day_In_Bet_Schedullingh+0x558>
    6de4:	a1 c1       	rjmp	.+834    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
    6de6:	88 27       	eor	r24, r24
    6de8:	e3 55       	subi	r30, 0x53	; 83
    6dea:	ff 4f       	sbci	r31, 0xFF	; 255
    6dec:	8f 4f       	sbci	r24, 0xFF	; 255
    6dee:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eJAN)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6df2:	8f e1       	ldi	r24, 0x1F	; 31
    6df4:	89 1b       	sub	r24, r25
    6df6:	08 0f       	add	r16, r24
    6df8:	11 1d       	adc	r17, r1
    6dfa:	0e 15       	cp	r16, r14
    6dfc:	1f 05       	cpc	r17, r15
    6dfe:	0c f4       	brge	.+2      	; 0x6e02 <_Z22Day_In_Bet_Schedullingh+0x574>
    6e00:	93 c1       	rjmp	.+806    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e02:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6e06:	c1 30       	cpi	r28, 0x01	; 1
    6e08:	e9 f6       	brne	.-70     	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e0a:	61 e6       	ldi	r22, 0x61	; 97
    6e0c:	7b e1       	ldi	r23, 0x1B	; 27
    6e0e:	c1 cf       	rjmp	.-126    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e10:	c1 30       	cpi	r28, 0x01	; 1
    6e12:	51 f4       	brne	.+20     	; 0x6e28 <_Z22Day_In_Bet_Schedullingh+0x59a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e14:	64 e5       	ldi	r22, 0x54	; 84
    6e16:	7b e1       	ldi	r23, 0x1B	; 27
    6e18:	86 ec       	ldi	r24, 0xC6	; 198
    6e1a:	94 e1       	ldi	r25, 0x14	; 20
    6e1c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e20:	86 ec       	ldi	r24, 0xC6	; 198
    6e22:	94 e1       	ldi	r25, 0x14	; 20
    6e24:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e28:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6e2c:	d2 30       	cpi	r29, 0x02	; 2
    6e2e:	51 f6       	brne	.-108    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e30:	8f e1       	ldi	r24, 0x1F	; 31
    6e32:	89 1b       	sub	r24, r25
    6e34:	08 0f       	add	r16, r24
    6e36:	11 1d       	adc	r17, r1
    6e38:	0e 15       	cp	r16, r14
    6e3a:	1f 05       	cpc	r17, r15
    6e3c:	0c f4       	brge	.+2      	; 0x6e40 <_Z22Day_In_Bet_Schedullingh+0x5b2>
    6e3e:	74 c1       	rjmp	.+744    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e40:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6e44:	c1 30       	cpi	r28, 0x01	; 1
    6e46:	09 f0       	breq	.+2      	; 0x6e4a <_Z22Day_In_Bet_Schedullingh+0x5bc>
    6e48:	bd cf       	rjmp	.-134    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e4a:	67 e4       	ldi	r22, 0x47	; 71
    6e4c:	7b e1       	ldi	r23, 0x1B	; 27
    6e4e:	a1 cf       	rjmp	.-190    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e50:	c1 30       	cpi	r28, 0x01	; 1
    6e52:	51 f4       	brne	.+20     	; 0x6e68 <_Z22Day_In_Bet_Schedullingh+0x5da>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e54:	6a e3       	ldi	r22, 0x3A	; 58
    6e56:	7b e1       	ldi	r23, 0x1B	; 27
    6e58:	86 ec       	ldi	r24, 0xC6	; 198
    6e5a:	94 e1       	ldi	r25, 0x14	; 20
    6e5c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e60:	86 ec       	ldi	r24, 0xC6	; 198
    6e62:	94 e1       	ldi	r25, 0x14	; 20
    6e64:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e68:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6e6c:	d4 30       	cpi	r29, 0x04	; 4
    6e6e:	09 f0       	breq	.+2      	; 0x6e72 <_Z22Day_In_Bet_Schedullingh+0x5e4>
    6e70:	a9 cf       	rjmp	.-174    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e72:	8f e1       	ldi	r24, 0x1F	; 31
    6e74:	89 1b       	sub	r24, r25
    6e76:	08 0f       	add	r16, r24
    6e78:	11 1d       	adc	r17, r1
    6e7a:	0e 15       	cp	r16, r14
    6e7c:	1f 05       	cpc	r17, r15
    6e7e:	0c f4       	brge	.+2      	; 0x6e82 <_Z22Day_In_Bet_Schedullingh+0x5f4>
    6e80:	53 c1       	rjmp	.+678    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e82:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6e86:	c1 30       	cpi	r28, 0x01	; 1
    6e88:	09 f0       	breq	.+2      	; 0x6e8c <_Z22Day_In_Bet_Schedullingh+0x5fe>
    6e8a:	9c cf       	rjmp	.-200    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e8c:	6d e2       	ldi	r22, 0x2D	; 45
    6e8e:	7b e1       	ldi	r23, 0x1B	; 27
    6e90:	80 cf       	rjmp	.-256    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e92:	c1 30       	cpi	r28, 0x01	; 1
    6e94:	51 f4       	brne	.+20     	; 0x6eaa <_Z22Day_In_Bet_Schedullingh+0x61c>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e96:	60 e2       	ldi	r22, 0x20	; 32
    6e98:	7b e1       	ldi	r23, 0x1B	; 27
    6e9a:	86 ec       	ldi	r24, 0xC6	; 198
    6e9c:	94 e1       	ldi	r25, 0x14	; 20
    6e9e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ea2:	86 ec       	ldi	r24, 0xC6	; 198
    6ea4:	94 e1       	ldi	r25, 0x14	; 20
    6ea6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6eaa:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6eae:	d6 30       	cpi	r29, 0x06	; 6
    6eb0:	09 f0       	breq	.+2      	; 0x6eb4 <_Z22Day_In_Bet_Schedullingh+0x626>
    6eb2:	88 cf       	rjmp	.-240    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6eb4:	8f e1       	ldi	r24, 0x1F	; 31
    6eb6:	89 1b       	sub	r24, r25
    6eb8:	08 0f       	add	r16, r24
    6eba:	11 1d       	adc	r17, r1
    6ebc:	0e 15       	cp	r16, r14
    6ebe:	1f 05       	cpc	r17, r15
    6ec0:	0c f4       	brge	.+2      	; 0x6ec4 <_Z22Day_In_Bet_Schedullingh+0x636>
    6ec2:	32 c1       	rjmp	.+612    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ec4:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ec8:	c1 30       	cpi	r28, 0x01	; 1
    6eca:	09 f0       	breq	.+2      	; 0x6ece <_Z22Day_In_Bet_Schedullingh+0x640>
    6ecc:	7b cf       	rjmp	.-266    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ece:	63 e1       	ldi	r22, 0x13	; 19
    6ed0:	7b e1       	ldi	r23, 0x1B	; 27
    6ed2:	5f cf       	rjmp	.-322    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ed4:	c1 30       	cpi	r28, 0x01	; 1
    6ed6:	51 f4       	brne	.+20     	; 0x6eec <_Z22Day_In_Bet_Schedullingh+0x65e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ed8:	66 e0       	ldi	r22, 0x06	; 6
    6eda:	7b e1       	ldi	r23, 0x1B	; 27
    6edc:	86 ec       	ldi	r24, 0xC6	; 198
    6ede:	94 e1       	ldi	r25, 0x14	; 20
    6ee0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ee4:	86 ec       	ldi	r24, 0xC6	; 198
    6ee6:	94 e1       	ldi	r25, 0x14	; 20
    6ee8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6eec:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6ef0:	d8 30       	cpi	r29, 0x08	; 8
    6ef2:	09 f0       	breq	.+2      	; 0x6ef6 <_Z22Day_In_Bet_Schedullingh+0x668>
    6ef4:	67 cf       	rjmp	.-306    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ef6:	8f e1       	ldi	r24, 0x1F	; 31
    6ef8:	89 1b       	sub	r24, r25
    6efa:	08 0f       	add	r16, r24
    6efc:	11 1d       	adc	r17, r1
    6efe:	0e 15       	cp	r16, r14
    6f00:	1f 05       	cpc	r17, r15
    6f02:	0c f4       	brge	.+2      	; 0x6f06 <_Z22Day_In_Bet_Schedullingh+0x678>
    6f04:	11 c1       	rjmp	.+546    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f06:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6f0a:	c1 30       	cpi	r28, 0x01	; 1
    6f0c:	09 f0       	breq	.+2      	; 0x6f10 <_Z22Day_In_Bet_Schedullingh+0x682>
    6f0e:	5a cf       	rjmp	.-332    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6f10:	69 ef       	ldi	r22, 0xF9	; 249
    6f12:	7a e1       	ldi	r23, 0x1A	; 26
    6f14:	3e cf       	rjmp	.-388    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f16:	c1 30       	cpi	r28, 0x01	; 1
    6f18:	51 f4       	brne	.+20     	; 0x6f2e <_Z22Day_In_Bet_Schedullingh+0x6a0>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6f1a:	6c ee       	ldi	r22, 0xEC	; 236
    6f1c:	7a e1       	ldi	r23, 0x1A	; 26
    6f1e:	86 ec       	ldi	r24, 0xC6	; 198
    6f20:	94 e1       	ldi	r25, 0x14	; 20
    6f22:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f26:	86 ec       	ldi	r24, 0xC6	; 198
    6f28:	94 e1       	ldi	r25, 0x14	; 20
    6f2a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f2e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6f32:	d9 30       	cpi	r29, 0x09	; 9
    6f34:	09 f0       	breq	.+2      	; 0x6f38 <_Z22Day_In_Bet_Schedullingh+0x6aa>
    6f36:	46 cf       	rjmp	.-372    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f38:	8f e1       	ldi	r24, 0x1F	; 31
    6f3a:	89 1b       	sub	r24, r25
    6f3c:	08 0f       	add	r16, r24
    6f3e:	11 1d       	adc	r17, r1
    6f40:	0e 15       	cp	r16, r14
    6f42:	1f 05       	cpc	r17, r15
    6f44:	0c f4       	brge	.+2      	; 0x6f48 <_Z22Day_In_Bet_Schedullingh+0x6ba>
    6f46:	f0 c0       	rjmp	.+480    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f48:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6f4c:	c1 30       	cpi	r28, 0x01	; 1
    6f4e:	09 f0       	breq	.+2      	; 0x6f52 <_Z22Day_In_Bet_Schedullingh+0x6c4>
    6f50:	39 cf       	rjmp	.-398    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6f52:	6f ed       	ldi	r22, 0xDF	; 223
    6f54:	7a e1       	ldi	r23, 0x1A	; 26
    6f56:	1d cf       	rjmp	.-454    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f58:	c1 30       	cpi	r28, 0x01	; 1
    6f5a:	51 f4       	brne	.+20     	; 0x6f70 <_Z22Day_In_Bet_Schedullingh+0x6e2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6f5c:	62 ed       	ldi	r22, 0xD2	; 210
    6f5e:	7a e1       	ldi	r23, 0x1A	; 26
    6f60:	86 ec       	ldi	r24, 0xC6	; 198
    6f62:	94 e1       	ldi	r25, 0x14	; 20
    6f64:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f68:	86 ec       	ldi	r24, 0xC6	; 198
    6f6a:	94 e1       	ldi	r25, 0x14	; 20
    6f6c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f70:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6f74:	db 30       	cpi	r29, 0x0B	; 11
    6f76:	09 f0       	breq	.+2      	; 0x6f7a <_Z22Day_In_Bet_Schedullingh+0x6ec>
    6f78:	25 cf       	rjmp	.-438    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f7a:	8f e1       	ldi	r24, 0x1F	; 31
    6f7c:	89 1b       	sub	r24, r25
    6f7e:	08 0f       	add	r16, r24
    6f80:	11 1d       	adc	r17, r1
    6f82:	0e 15       	cp	r16, r14
    6f84:	1f 05       	cpc	r17, r15
    6f86:	0c f4       	brge	.+2      	; 0x6f8a <_Z22Day_In_Bet_Schedullingh+0x6fc>
    6f88:	cf c0       	rjmp	.+414    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f8a:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6f8e:	c1 30       	cpi	r28, 0x01	; 1
    6f90:	09 f0       	breq	.+2      	; 0x6f94 <_Z22Day_In_Bet_Schedullingh+0x706>
    6f92:	18 cf       	rjmp	.-464    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6f94:	65 ec       	ldi	r22, 0xC5	; 197
    6f96:	7a e1       	ldi	r23, 0x1A	; 26
    6f98:	fc ce       	rjmp	.-520    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6f9a:	8b 2d       	mov	r24, r11
    6f9c:	83 70       	andi	r24, 0x03	; 3
    6f9e:	09 f1       	breq	.+66     	; 0x6fe2 <_Z22Day_In_Bet_Schedullingh+0x754>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fa0:	c1 30       	cpi	r28, 0x01	; 1
    6fa2:	51 f4       	brne	.+20     	; 0x6fb8 <_Z22Day_In_Bet_Schedullingh+0x72a>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6fa4:	68 eb       	ldi	r22, 0xB8	; 184
    6fa6:	7a e1       	ldi	r23, 0x1A	; 26
    6fa8:	86 ec       	ldi	r24, 0xC6	; 198
    6faa:	94 e1       	ldi	r25, 0x14	; 20
    6fac:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6fb0:	86 ec       	ldi	r24, 0xC6	; 198
    6fb2:	94 e1       	ldi	r25, 0x14	; 20
    6fb4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6fb8:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6fbc:	d3 30       	cpi	r29, 0x03	; 3
    6fbe:	09 f0       	breq	.+2      	; 0x6fc2 <_Z22Day_In_Bet_Schedullingh+0x734>
    6fc0:	01 cf       	rjmp	.-510    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6fc2:	8c e1       	ldi	r24, 0x1C	; 28
    6fc4:	89 1b       	sub	r24, r25
    6fc6:	08 0f       	add	r16, r24
    6fc8:	11 1d       	adc	r17, r1
    6fca:	0e 15       	cp	r16, r14
    6fcc:	1f 05       	cpc	r17, r15
    6fce:	0c f4       	brge	.+2      	; 0x6fd2 <_Z22Day_In_Bet_Schedullingh+0x744>
    6fd0:	ab c0       	rjmp	.+342    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fd2:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6fd6:	c1 30       	cpi	r28, 0x01	; 1
    6fd8:	09 f0       	breq	.+2      	; 0x6fdc <_Z22Day_In_Bet_Schedullingh+0x74e>
    6fda:	f4 ce       	rjmp	.-536    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6fdc:	6b ea       	ldi	r22, 0xAB	; 171
    6fde:	7a e1       	ldi	r23, 0x1A	; 26
    6fe0:	d8 ce       	rjmp	.-592    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
								return 1;
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fe2:	c1 30       	cpi	r28, 0x01	; 1
    6fe4:	51 f4       	brne	.+20     	; 0x6ffa <_Z22Day_In_Bet_Schedullingh+0x76c>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6fe6:	6e e9       	ldi	r22, 0x9E	; 158
    6fe8:	7a e1       	ldi	r23, 0x1A	; 26
    6fea:	86 ec       	ldi	r24, 0xC6	; 198
    6fec:	94 e1       	ldi	r25, 0x14	; 20
    6fee:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6ff2:	86 ec       	ldi	r24, 0xC6	; 198
    6ff4:	94 e1       	ldi	r25, 0x14	; 20
    6ff6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6ffa:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6ffe:	d3 30       	cpi	r29, 0x03	; 3
    7000:	09 f0       	breq	.+2      	; 0x7004 <_Z22Day_In_Bet_Schedullingh+0x776>
    7002:	e0 ce       	rjmp	.-576    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    7004:	8d e1       	ldi	r24, 0x1D	; 29
    7006:	89 1b       	sub	r24, r25
    7008:	08 0f       	add	r16, r24
    700a:	11 1d       	adc	r17, r1
    700c:	0e 15       	cp	r16, r14
    700e:	1f 05       	cpc	r17, r15
    7010:	0c f4       	brge	.+2      	; 0x7014 <_Z22Day_In_Bet_Schedullingh+0x786>
    7012:	8a c0       	rjmp	.+276    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    7014:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7018:	c1 30       	cpi	r28, 0x01	; 1
    701a:	09 f0       	breq	.+2      	; 0x701e <_Z22Day_In_Bet_Schedullingh+0x790>
    701c:	d3 ce       	rjmp	.-602    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    701e:	61 e9       	ldi	r22, 0x91	; 145
    7020:	7a e1       	ldi	r23, 0x1A	; 26
    7022:	b7 ce       	rjmp	.-658    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7024:	c1 30       	cpi	r28, 0x01	; 1
    7026:	51 f4       	brne	.+20     	; 0x703c <_Z22Day_In_Bet_Schedullingh+0x7ae>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    7028:	64 e8       	ldi	r22, 0x84	; 132
    702a:	7a e1       	ldi	r23, 0x1A	; 26
    702c:	86 ec       	ldi	r24, 0xC6	; 198
    702e:	94 e1       	ldi	r25, 0x14	; 20
    7030:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7034:	86 ec       	ldi	r24, 0xC6	; 198
    7036:	94 e1       	ldi	r25, 0x14	; 20
    7038:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    703c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    7040:	d5 30       	cpi	r29, 0x05	; 5
    7042:	09 f0       	breq	.+2      	; 0x7046 <_Z22Day_In_Bet_Schedullingh+0x7b8>
    7044:	bf ce       	rjmp	.-642    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    7046:	8e e1       	ldi	r24, 0x1E	; 30
    7048:	89 1b       	sub	r24, r25
    704a:	08 0f       	add	r16, r24
    704c:	11 1d       	adc	r17, r1
    704e:	0e 15       	cp	r16, r14
    7050:	1f 05       	cpc	r17, r15
    7052:	0c f4       	brge	.+2      	; 0x7056 <_Z22Day_In_Bet_Schedullingh+0x7c8>
    7054:	69 c0       	rjmp	.+210    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7056:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    705a:	c1 30       	cpi	r28, 0x01	; 1
    705c:	09 f0       	breq	.+2      	; 0x7060 <_Z22Day_In_Bet_Schedullingh+0x7d2>
    705e:	b2 ce       	rjmp	.-668    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7060:	67 e7       	ldi	r22, 0x77	; 119
    7062:	7a e1       	ldi	r23, 0x1A	; 26
    7064:	96 ce       	rjmp	.-724    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7066:	c1 30       	cpi	r28, 0x01	; 1
    7068:	51 f4       	brne	.+20     	; 0x707e <_Z22Day_In_Bet_Schedullingh+0x7f0>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    706a:	6a e6       	ldi	r22, 0x6A	; 106
    706c:	7a e1       	ldi	r23, 0x1A	; 26
    706e:	86 ec       	ldi	r24, 0xC6	; 198
    7070:	94 e1       	ldi	r25, 0x14	; 20
    7072:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7076:	86 ec       	ldi	r24, 0xC6	; 198
    7078:	94 e1       	ldi	r25, 0x14	; 20
    707a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    707e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    7082:	d7 30       	cpi	r29, 0x07	; 7
    7084:	09 f0       	breq	.+2      	; 0x7088 <_Z22Day_In_Bet_Schedullingh+0x7fa>
    7086:	9e ce       	rjmp	.-708    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    7088:	8e e1       	ldi	r24, 0x1E	; 30
    708a:	89 1b       	sub	r24, r25
    708c:	08 0f       	add	r16, r24
    708e:	11 1d       	adc	r17, r1
    7090:	0e 15       	cp	r16, r14
    7092:	1f 05       	cpc	r17, r15
    7094:	0c f4       	brge	.+2      	; 0x7098 <_Z22Day_In_Bet_Schedullingh+0x80a>
    7096:	48 c0       	rjmp	.+144    	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7098:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    709c:	c1 30       	cpi	r28, 0x01	; 1
    709e:	09 f0       	breq	.+2      	; 0x70a2 <_Z22Day_In_Bet_Schedullingh+0x814>
    70a0:	91 ce       	rjmp	.-734    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    70a2:	6d e5       	ldi	r22, 0x5D	; 93
    70a4:	7a e1       	ldi	r23, 0x1A	; 26
    70a6:	75 ce       	rjmp	.-790    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    70a8:	c1 30       	cpi	r28, 0x01	; 1
    70aa:	51 f4       	brne	.+20     	; 0x70c0 <_Z22Day_In_Bet_Schedullingh+0x832>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    70ac:	60 e5       	ldi	r22, 0x50	; 80
    70ae:	7a e1       	ldi	r23, 0x1A	; 26
    70b0:	86 ec       	ldi	r24, 0xC6	; 198
    70b2:	94 e1       	ldi	r25, 0x14	; 20
    70b4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    70b8:	86 ec       	ldi	r24, 0xC6	; 198
    70ba:	94 e1       	ldi	r25, 0x14	; 20
    70bc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    70c0:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    70c4:	da 30       	cpi	r29, 0x0A	; 10
    70c6:	09 f0       	breq	.+2      	; 0x70ca <_Z22Day_In_Bet_Schedullingh+0x83c>
    70c8:	7d ce       	rjmp	.-774    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    70ca:	8e e1       	ldi	r24, 0x1E	; 30
    70cc:	89 1b       	sub	r24, r25
    70ce:	08 0f       	add	r16, r24
    70d0:	11 1d       	adc	r17, r1
    70d2:	0e 15       	cp	r16, r14
    70d4:	1f 05       	cpc	r17, r15
    70d6:	44 f1       	brlt	.+80     	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    70d8:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    70dc:	c1 30       	cpi	r28, 0x01	; 1
    70de:	09 f0       	breq	.+2      	; 0x70e2 <_Z22Day_In_Bet_Schedullingh+0x854>
    70e0:	71 ce       	rjmp	.-798    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    70e2:	63 e4       	ldi	r22, 0x43	; 67
    70e4:	7a e1       	ldi	r23, 0x1A	; 26
    70e6:	55 ce       	rjmp	.-854    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    70e8:	c1 30       	cpi	r28, 0x01	; 1
    70ea:	51 f4       	brne	.+20     	; 0x7100 <_Z22Day_In_Bet_Schedullingh+0x872>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    70ec:	66 e3       	ldi	r22, 0x36	; 54
    70ee:	7a e1       	ldi	r23, 0x1A	; 26
    70f0:	86 ec       	ldi	r24, 0xC6	; 198
    70f2:	94 e1       	ldi	r25, 0x14	; 20
    70f4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    70f8:	86 ec       	ldi	r24, 0xC6	; 198
    70fa:	94 e1       	ldi	r25, 0x14	; 20
    70fc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    7100:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    7104:	dc 30       	cpi	r29, 0x0C	; 12
    7106:	09 f0       	breq	.+2      	; 0x710a <_Z22Day_In_Bet_Schedullingh+0x87c>
    7108:	5d ce       	rjmp	.-838    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    710a:	8e e1       	ldi	r24, 0x1E	; 30
    710c:	89 1b       	sub	r24, r25
    710e:	08 0f       	add	r16, r24
    7110:	11 1d       	adc	r17, r1
    7112:	0e 15       	cp	r16, r14
    7114:	1f 05       	cpc	r17, r15
    7116:	44 f0       	brlt	.+16     	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7118:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    711c:	c1 30       	cpi	r28, 0x01	; 1
    711e:	09 f0       	breq	.+2      	; 0x7122 <_Z22Day_In_Bet_Schedullingh+0x894>
    7120:	51 ce       	rjmp	.-862    	; 0x6dc4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7122:	69 e2       	ldi	r22, 0x29	; 41
    7124:	7a e1       	ldi	r23, 0x1A	; 26
    7126:	35 ce       	rjmp	.-918    	; 0x6d92 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7128:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    712c:	81 30       	cpi	r24, 0x01	; 1
    712e:	c1 f4       	brne	.+48     	; 0x7160 <_Z22Day_In_Bet_Schedullingh+0x8d2>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    7130:	6b e1       	ldi	r22, 0x1B	; 27
    7132:	7a e1       	ldi	r23, 0x1A	; 26
    7134:	86 ec       	ldi	r24, 0xC6	; 198
    7136:	94 e1       	ldi	r25, 0x14	; 20
    7138:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    713c:	86 ec       	ldi	r24, 0xC6	; 198
    713e:	94 e1       	ldi	r25, 0x14	; 20
    7140:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    7144:	0d c0       	rjmp	.+26     	; 0x7160 <_Z22Day_In_Bet_Schedullingh+0x8d2>
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7146:	c1 30       	cpi	r28, 0x01	; 1
    7148:	61 f4       	brne	.+24     	; 0x7162 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    714a:	6d e0       	ldi	r22, 0x0D	; 13
    714c:	7a e1       	ldi	r23, 0x1A	; 26
    714e:	86 ec       	ldi	r24, 0xC6	; 198
    7150:	94 e1       	ldi	r25, 0x14	; 20
    7152:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7156:	86 ec       	ldi	r24, 0xC6	; 198
    7158:	94 e1       	ldi	r25, 0x14	; 20
    715a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    715e:	01 c0       	rjmp	.+2      	; 0x7162 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				//printf("deny 4");
				return 0;
			}
			
		}
}
    7160:	02 c0       	rjmp	.+4      	; 0x7166 <_Z22Day_In_Bet_Schedullingh+0x8d8>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
					_kSERIAL_MON_CLEAR();
				}
				//printf("deny 4");
				return 0;
    7162:	c0 e0       	ldi	r28, 0x00	; 0
    7164:	55 cc       	rjmp	.-1878   	; 0x6a10 <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			
		}
}
    7166:	df 91       	pop	r29
    7168:	cf 91       	pop	r28
    716a:	1f 91       	pop	r17
    716c:	0f 91       	pop	r16
    716e:	ff 90       	pop	r15
    7170:	ef 90       	pop	r14
    7172:	df 90       	pop	r13
    7174:	cf 90       	pop	r12
    7176:	bf 90       	pop	r11
    7178:	08 95       	ret

0000717a <_Z22Day_In_Bet_Schedullinghhh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules, unsigned char last_schedule_date,
unsigned char last_schedule_month)
{
    717a:	7f 92       	push	r7
    717c:	8f 92       	push	r8
    717e:	9f 92       	push	r9
    7180:	af 92       	push	r10
    7182:	bf 92       	push	r11
    7184:	cf 92       	push	r12
    7186:	df 92       	push	r13
    7188:	ef 92       	push	r14
    718a:	ff 92       	push	r15
    718c:	0f 93       	push	r16
    718e:	1f 93       	push	r17
    7190:	cf 93       	push	r28
    7192:	df 93       	push	r29
    7194:	c8 2e       	mov	r12, r24
    7196:	f6 2e       	mov	r15, r22
    7198:	74 2e       	mov	r7, r20
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    719a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    719e:	81 30       	cpi	r24, 0x01	; 1
    71a0:	69 f4       	brne	.+26     	; 0x71bc <_Z22Day_In_Bet_Schedullinghhh+0x42>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
    71a2:	6a ef       	ldi	r22, 0xFA	; 250
    71a4:	79 e1       	ldi	r23, 0x19	; 25
    71a6:	86 ec       	ldi	r24, 0xC6	; 198
    71a8:	94 e1       	ldi	r25, 0x14	; 20
    71aa:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(Days_In_Between_Schedules);
    71ae:	4a e0       	ldi	r20, 0x0A	; 10
    71b0:	50 e0       	ldi	r21, 0x00	; 0
    71b2:	6c 2d       	mov	r22, r12
    71b4:	86 ec       	ldi	r24, 0xC6	; 198
    71b6:	94 e1       	ldi	r25, 0x14	; 20
    71b8:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
	}
	
	
	year  = _sRuble_Parameters.Update_Local_Date[2];
    71bc:	e0 90 f4 13 	lds	r14, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Started_Date != 0)
    71c0:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    71c4:	88 23       	and	r24, r24
    71c6:	71 f0       	breq	.+28     	; 0x71e4 <_Z22Day_In_Bet_Schedullinghhh+0x6a>
	{
		if(_sSchedules.Which_Sheduler_Is_Running == 1)
    71c8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    71cc:	81 30       	cpi	r24, 0x01	; 1
    71ce:	29 f4       	brne	.+10     	; 0x71da <_Z22Day_In_Bet_Schedullinghhh+0x60>
		{
			date  = _sSchedules.Started_Date;
    71d0:	00 91 2a 09 	lds	r16, 0x092A	; 0x80092a <_sSchedules+0xc>
			month = _sSchedules.Started_Month;
    71d4:	d0 91 2b 09 	lds	r29, 0x092B	; 0x80092b <_sSchedules+0xd>
    71d8:	09 c0       	rjmp	.+18     	; 0x71ec <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		else
		{
			date  = _sSchedules.First_Schedule_Irrigated_Date;
    71da:	00 91 ee 0b 	lds	r16, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
			month = _sSchedules.First_Schedule_Irrigated_Month;
    71de:	d0 91 ef 0b 	lds	r29, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    71e2:	04 c0       	rjmp	.+8      	; 0x71ec <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		
	}
	else
	{
		date  = _sRuble_Parameters.Update_Local_Date[0];
    71e4:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
		month = _sRuble_Parameters.Update_Local_Date[1];
    71e8:	d0 91 f3 13 	lds	r29, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
	}
	
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
    71ec:	aa 24       	eor	r10, r10
    71ee:	a3 94       	inc	r10
    71f0:	ac 0c       	add	r10, r12
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    71f2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    71f6:	81 30       	cpi	r24, 0x01	; 1
    71f8:	09 f0       	breq	.+2      	; 0x71fc <_Z22Day_In_Bet_Schedullinghhh+0x82>
    71fa:	71 c0       	rjmp	.+226    	; 0x72de <_Z22Day_In_Bet_Schedullinghhh+0x164>
	{
		_kSERAIL_MON_WRITE("date : ");
    71fc:	62 ef       	ldi	r22, 0xF2	; 242
    71fe:	79 e1       	ldi	r23, 0x19	; 25
    7200:	86 ec       	ldi	r24, 0xC6	; 198
    7202:	94 e1       	ldi	r25, 0x14	; 20
    7204:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    7208:	4a e0       	ldi	r20, 0x0A	; 10
    720a:	50 e0       	ldi	r21, 0x00	; 0
    720c:	60 2f       	mov	r22, r16
    720e:	86 ec       	ldi	r24, 0xC6	; 198
    7210:	94 e1       	ldi	r25, 0x14	; 20
    7212:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7216:	86 ec       	ldi	r24, 0xC6	; 198
    7218:	94 e1       	ldi	r25, 0x14	; 20
    721a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("month : ");
    721e:	69 ee       	ldi	r22, 0xE9	; 233
    7220:	79 e1       	ldi	r23, 0x19	; 25
    7222:	86 ec       	ldi	r24, 0xC6	; 198
    7224:	94 e1       	ldi	r25, 0x14	; 20
    7226:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(month);
    722a:	4a e0       	ldi	r20, 0x0A	; 10
    722c:	50 e0       	ldi	r21, 0x00	; 0
    722e:	6d 2f       	mov	r22, r29
    7230:	86 ec       	ldi	r24, 0xC6	; 198
    7232:	94 e1       	ldi	r25, 0x14	; 20
    7234:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7238:	86 ec       	ldi	r24, 0xC6	; 198
    723a:	94 e1       	ldi	r25, 0x14	; 20
    723c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>

		_kSERAIL_MON_WRITE("year : ");
    7240:	61 ee       	ldi	r22, 0xE1	; 225
    7242:	79 e1       	ldi	r23, 0x19	; 25
    7244:	86 ec       	ldi	r24, 0xC6	; 198
    7246:	94 e1       	ldi	r25, 0x14	; 20
    7248:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    724c:	4a e0       	ldi	r20, 0x0A	; 10
    724e:	50 e0       	ldi	r21, 0x00	; 0
    7250:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    7254:	86 ec       	ldi	r24, 0xC6	; 198
    7256:	94 e1       	ldi	r25, 0x14	; 20
    7258:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    725c:	86 ec       	ldi	r24, 0xC6	; 198
    725e:	94 e1       	ldi	r25, 0x14	; 20
    7260:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last date: ");
    7264:	65 ed       	ldi	r22, 0xD5	; 213
    7266:	79 e1       	ldi	r23, 0x19	; 25
    7268:	86 ec       	ldi	r24, 0xC6	; 198
    726a:	94 e1       	ldi	r25, 0x14	; 20
    726c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_date);
    7270:	4a e0       	ldi	r20, 0x0A	; 10
    7272:	50 e0       	ldi	r21, 0x00	; 0
    7274:	6f 2d       	mov	r22, r15
    7276:	86 ec       	ldi	r24, 0xC6	; 198
    7278:	94 e1       	ldi	r25, 0x14	; 20
    727a:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    727e:	86 ec       	ldi	r24, 0xC6	; 198
    7280:	94 e1       	ldi	r25, 0x14	; 20
    7282:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last month : ");
    7286:	67 ec       	ldi	r22, 0xC7	; 199
    7288:	79 e1       	ldi	r23, 0x19	; 25
    728a:	86 ec       	ldi	r24, 0xC6	; 198
    728c:	94 e1       	ldi	r25, 0x14	; 20
    728e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_month);
    7292:	4a e0       	ldi	r20, 0x0A	; 10
    7294:	50 e0       	ldi	r21, 0x00	; 0
    7296:	67 2d       	mov	r22, r7
    7298:	86 ec       	ldi	r24, 0xC6	; 198
    729a:	94 e1       	ldi	r25, 0x14	; 20
    729c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72a0:	86 ec       	ldi	r24, 0xC6	; 198
    72a2:	94 e1       	ldi	r25, 0x14	; 20
    72a4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("day in btw started");
    72a8:	64 eb       	ldi	r22, 0xB4	; 180
    72aa:	79 e1       	ldi	r23, 0x19	; 25
    72ac:	86 ec       	ldi	r24, 0xC6	; 198
    72ae:	94 e1       	ldi	r25, 0x14	; 20
    72b0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    72b4:	86 ec       	ldi	r24, 0xC6	; 198
    72b6:	94 e1       	ldi	r25, 0x14	; 20
    72b8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("No of days in bet : ");
    72bc:	6f e9       	ldi	r22, 0x9F	; 159
    72be:	79 e1       	ldi	r23, 0x19	; 25
    72c0:	86 ec       	ldi	r24, 0xC6	; 198
    72c2:	94 e1       	ldi	r25, 0x14	; 20
    72c4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    72c8:	4a e0       	ldi	r20, 0x0A	; 10
    72ca:	50 e0       	ldi	r21, 0x00	; 0
    72cc:	6a 2d       	mov	r22, r10
    72ce:	86 ec       	ldi	r24, 0xC6	; 198
    72d0:	94 e1       	ldi	r25, 0x14	; 20
    72d2:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72d6:	86 ec       	ldi	r24, 0xC6	; 198
    72d8:	94 e1       	ldi	r25, 0x14	; 20
    72da:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
	
	
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    72de:	8f 2c       	mov	r8, r15
    72e0:	91 2c       	mov	r9, r1
    72e2:	b1 2c       	mov	r11, r1
    72e4:	10 e0       	ldi	r17, 0x00	; 0
    72e6:	94 01       	movw	r18, r8
    72e8:	2a 0d       	add	r18, r10
    72ea:	3b 1d       	adc	r19, r11
    72ec:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    72f0:	02 17       	cp	r16, r18
    72f2:	13 07       	cpc	r17, r19
    72f4:	44 f0       	brlt	.+16     	; 0x7306 <_Z22Day_In_Bet_Schedullinghhh+0x18c>
    72f6:	d7 11       	cpse	r29, r7
    72f8:	09 c0       	rjmp	.+18     	; 0x730c <_Z22Day_In_Bet_Schedullinghhh+0x192>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    72fa:	91 30       	cpi	r25, 0x01	; 1
    72fc:	09 f0       	breq	.+2      	; 0x7300 <_Z22Day_In_Bet_Schedullinghhh+0x186>
    72fe:	be c3       	rjmp	.+1916   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
    7300:	62 e9       	ldi	r22, 0x92	; 146
    7302:	79 e1       	ldi	r23, 0x19	; 25
    7304:	30 c0       	rjmp	.+96     	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
		
		return 2;
	}
	else
	{
		if(last_schedule_month != month)
    7306:	d7 15       	cp	r29, r7
    7308:	09 f4       	brne	.+2      	; 0x730c <_Z22Day_In_Bet_Schedullinghhh+0x192>
    730a:	be c1       	rjmp	.+892    	; 0x7688 <_Z22Day_In_Bet_Schedullinghhh+0x50e>
		{
			switch(last_schedule_month)
    730c:	47 2d       	mov	r20, r7
    730e:	50 e0       	ldi	r21, 0x00	; 0
    7310:	fa 01       	movw	r30, r20
    7312:	31 97       	sbiw	r30, 0x01	; 1
    7314:	ec 30       	cpi	r30, 0x0C	; 12
    7316:	f1 05       	cpc	r31, r1
    7318:	08 f0       	brcs	.+2      	; 0x731c <_Z22Day_In_Bet_Schedullinghhh+0x1a2>
    731a:	af c1       	rjmp	.+862    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
    731c:	88 27       	eor	r24, r24
    731e:	e7 54       	subi	r30, 0x47	; 71
    7320:	ff 4f       	sbci	r31, 0xFF	; 255
    7322:	8f 4f       	sbci	r24, 0xFF	; 255
    7324:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7328:	91 30       	cpi	r25, 0x01	; 1
    732a:	51 f4       	brne	.+20     	; 0x7340 <_Z22Day_In_Bet_Schedullinghhh+0x1c6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    732c:	65 e8       	ldi	r22, 0x85	; 133
    732e:	79 e1       	ldi	r23, 0x19	; 25
    7330:	86 ec       	ldi	r24, 0xC6	; 198
    7332:	94 e1       	ldi	r25, 0x14	; 20
    7334:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7338:	86 ec       	ldi	r24, 0xC6	; 198
    733a:	94 e1       	ldi	r25, 0x14	; 20
    733c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    7340:	d1 30       	cpi	r29, 0x01	; 1
    7342:	09 f0       	breq	.+2      	; 0x7346 <_Z22Day_In_Bet_Schedullinghhh+0x1cc>
    7344:	9b c3       	rjmp	.+1846   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7346:	8f e1       	ldi	r24, 0x1F	; 31
    7348:	8f 19       	sub	r24, r15
    734a:	98 01       	movw	r18, r16
    734c:	28 0f       	add	r18, r24
    734e:	31 1d       	adc	r19, r1
    7350:	2a 15       	cp	r18, r10
    7352:	3b 05       	cpc	r19, r11
    7354:	0c f4       	brge	.+2      	; 0x7358 <_Z22Day_In_Bet_Schedullinghhh+0x1de>
    7356:	91 c1       	rjmp	.+802    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7358:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    735c:	81 30       	cpi	r24, 0x01	; 1
    735e:	09 f0       	breq	.+2      	; 0x7362 <_Z22Day_In_Bet_Schedullinghhh+0x1e8>
    7360:	8d c3       	rjmp	.+1818   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7362:	68 e7       	ldi	r22, 0x78	; 120
    7364:	79 e1       	ldi	r23, 0x19	; 25
    7366:	86 ec       	ldi	r24, 0xC6	; 198
    7368:	94 e1       	ldi	r25, 0x14	; 20
    736a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    736e:	86 ec       	ldi	r24, 0xC6	; 198
    7370:	94 e1       	ldi	r25, 0x14	; 20
    7372:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    7376:	82 c3       	rjmp	.+1796   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7378:	91 30       	cpi	r25, 0x01	; 1
    737a:	51 f4       	brne	.+20     	; 0x7390 <_Z22Day_In_Bet_Schedullinghhh+0x216>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    737c:	6b e6       	ldi	r22, 0x6B	; 107
    737e:	79 e1       	ldi	r23, 0x19	; 25
    7380:	86 ec       	ldi	r24, 0xC6	; 198
    7382:	94 e1       	ldi	r25, 0x14	; 20
    7384:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7388:	86 ec       	ldi	r24, 0xC6	; 198
    738a:	94 e1       	ldi	r25, 0x14	; 20
    738c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    7390:	d2 30       	cpi	r29, 0x02	; 2
    7392:	09 f0       	breq	.+2      	; 0x7396 <_Z22Day_In_Bet_Schedullinghhh+0x21c>
    7394:	73 c3       	rjmp	.+1766   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7396:	8f e1       	ldi	r24, 0x1F	; 31
    7398:	8f 19       	sub	r24, r15
    739a:	98 01       	movw	r18, r16
    739c:	28 0f       	add	r18, r24
    739e:	31 1d       	adc	r19, r1
    73a0:	2a 15       	cp	r18, r10
    73a2:	3b 05       	cpc	r19, r11
    73a4:	0c f4       	brge	.+2      	; 0x73a8 <_Z22Day_In_Bet_Schedullinghhh+0x22e>
    73a6:	69 c1       	rjmp	.+722    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73a8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    73ac:	81 30       	cpi	r24, 0x01	; 1
    73ae:	09 f0       	breq	.+2      	; 0x73b2 <_Z22Day_In_Bet_Schedullinghhh+0x238>
    73b0:	65 c3       	rjmp	.+1738   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    73b2:	6e e5       	ldi	r22, 0x5E	; 94
    73b4:	79 e1       	ldi	r23, 0x19	; 25
    73b6:	d7 cf       	rjmp	.-82     	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73b8:	91 30       	cpi	r25, 0x01	; 1
    73ba:	51 f4       	brne	.+20     	; 0x73d0 <_Z22Day_In_Bet_Schedullinghhh+0x256>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    73bc:	61 e5       	ldi	r22, 0x51	; 81
    73be:	79 e1       	ldi	r23, 0x19	; 25
    73c0:	86 ec       	ldi	r24, 0xC6	; 198
    73c2:	94 e1       	ldi	r25, 0x14	; 20
    73c4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    73c8:	86 ec       	ldi	r24, 0xC6	; 198
    73ca:	94 e1       	ldi	r25, 0x14	; 20
    73cc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    73d0:	d4 30       	cpi	r29, 0x04	; 4
    73d2:	09 f0       	breq	.+2      	; 0x73d6 <_Z22Day_In_Bet_Schedullinghhh+0x25c>
    73d4:	53 c3       	rjmp	.+1702   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73d6:	8f e1       	ldi	r24, 0x1F	; 31
    73d8:	8f 19       	sub	r24, r15
    73da:	98 01       	movw	r18, r16
    73dc:	28 0f       	add	r18, r24
    73de:	31 1d       	adc	r19, r1
    73e0:	2a 15       	cp	r18, r10
    73e2:	3b 05       	cpc	r19, r11
    73e4:	0c f4       	brge	.+2      	; 0x73e8 <_Z22Day_In_Bet_Schedullinghhh+0x26e>
    73e6:	49 c1       	rjmp	.+658    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73e8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    73ec:	81 30       	cpi	r24, 0x01	; 1
    73ee:	09 f0       	breq	.+2      	; 0x73f2 <_Z22Day_In_Bet_Schedullinghhh+0x278>
    73f0:	45 c3       	rjmp	.+1674   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    73f2:	64 e4       	ldi	r22, 0x44	; 68
    73f4:	79 e1       	ldi	r23, 0x19	; 25
    73f6:	b7 cf       	rjmp	.-146    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73f8:	91 30       	cpi	r25, 0x01	; 1
    73fa:	51 f4       	brne	.+20     	; 0x7410 <_Z22Day_In_Bet_Schedullinghhh+0x296>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    73fc:	67 e3       	ldi	r22, 0x37	; 55
    73fe:	79 e1       	ldi	r23, 0x19	; 25
    7400:	86 ec       	ldi	r24, 0xC6	; 198
    7402:	94 e1       	ldi	r25, 0x14	; 20
    7404:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7408:	86 ec       	ldi	r24, 0xC6	; 198
    740a:	94 e1       	ldi	r25, 0x14	; 20
    740c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    7410:	d6 30       	cpi	r29, 0x06	; 6
    7412:	09 f0       	breq	.+2      	; 0x7416 <_Z22Day_In_Bet_Schedullinghhh+0x29c>
    7414:	33 c3       	rjmp	.+1638   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7416:	8f e1       	ldi	r24, 0x1F	; 31
    7418:	8f 19       	sub	r24, r15
    741a:	98 01       	movw	r18, r16
    741c:	28 0f       	add	r18, r24
    741e:	31 1d       	adc	r19, r1
    7420:	2a 15       	cp	r18, r10
    7422:	3b 05       	cpc	r19, r11
    7424:	0c f4       	brge	.+2      	; 0x7428 <_Z22Day_In_Bet_Schedullinghhh+0x2ae>
    7426:	29 c1       	rjmp	.+594    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7428:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    742c:	81 30       	cpi	r24, 0x01	; 1
    742e:	09 f0       	breq	.+2      	; 0x7432 <_Z22Day_In_Bet_Schedullinghhh+0x2b8>
    7430:	25 c3       	rjmp	.+1610   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7432:	6a e2       	ldi	r22, 0x2A	; 42
    7434:	79 e1       	ldi	r23, 0x19	; 25
    7436:	97 cf       	rjmp	.-210    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7438:	91 30       	cpi	r25, 0x01	; 1
    743a:	51 f4       	brne	.+20     	; 0x7450 <_Z22Day_In_Bet_Schedullinghhh+0x2d6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    743c:	6d e1       	ldi	r22, 0x1D	; 29
    743e:	79 e1       	ldi	r23, 0x19	; 25
    7440:	86 ec       	ldi	r24, 0xC6	; 198
    7442:	94 e1       	ldi	r25, 0x14	; 20
    7444:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7448:	86 ec       	ldi	r24, 0xC6	; 198
    744a:	94 e1       	ldi	r25, 0x14	; 20
    744c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    7450:	d8 30       	cpi	r29, 0x08	; 8
    7452:	09 f0       	breq	.+2      	; 0x7456 <_Z22Day_In_Bet_Schedullinghhh+0x2dc>
    7454:	13 c3       	rjmp	.+1574   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7456:	8f e1       	ldi	r24, 0x1F	; 31
    7458:	8f 19       	sub	r24, r15
    745a:	98 01       	movw	r18, r16
    745c:	28 0f       	add	r18, r24
    745e:	31 1d       	adc	r19, r1
    7460:	2a 15       	cp	r18, r10
    7462:	3b 05       	cpc	r19, r11
    7464:	0c f4       	brge	.+2      	; 0x7468 <_Z22Day_In_Bet_Schedullinghhh+0x2ee>
    7466:	09 c1       	rjmp	.+530    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7468:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    746c:	81 30       	cpi	r24, 0x01	; 1
    746e:	09 f0       	breq	.+2      	; 0x7472 <_Z22Day_In_Bet_Schedullinghhh+0x2f8>
    7470:	05 c3       	rjmp	.+1546   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7472:	60 e1       	ldi	r22, 0x10	; 16
    7474:	79 e1       	ldi	r23, 0x19	; 25
    7476:	77 cf       	rjmp	.-274    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7478:	91 30       	cpi	r25, 0x01	; 1
    747a:	51 f4       	brne	.+20     	; 0x7490 <_Z22Day_In_Bet_Schedullinghhh+0x316>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    747c:	63 e0       	ldi	r22, 0x03	; 3
    747e:	79 e1       	ldi	r23, 0x19	; 25
    7480:	86 ec       	ldi	r24, 0xC6	; 198
    7482:	94 e1       	ldi	r25, 0x14	; 20
    7484:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7488:	86 ec       	ldi	r24, 0xC6	; 198
    748a:	94 e1       	ldi	r25, 0x14	; 20
    748c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    7490:	d9 30       	cpi	r29, 0x09	; 9
    7492:	09 f0       	breq	.+2      	; 0x7496 <_Z22Day_In_Bet_Schedullinghhh+0x31c>
    7494:	f3 c2       	rjmp	.+1510   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7496:	8f e1       	ldi	r24, 0x1F	; 31
    7498:	8f 19       	sub	r24, r15
    749a:	98 01       	movw	r18, r16
    749c:	28 0f       	add	r18, r24
    749e:	31 1d       	adc	r19, r1
    74a0:	2a 15       	cp	r18, r10
    74a2:	3b 05       	cpc	r19, r11
    74a4:	0c f4       	brge	.+2      	; 0x74a8 <_Z22Day_In_Bet_Schedullinghhh+0x32e>
    74a6:	e9 c0       	rjmp	.+466    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    74a8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    74ac:	81 30       	cpi	r24, 0x01	; 1
    74ae:	09 f0       	breq	.+2      	; 0x74b2 <_Z22Day_In_Bet_Schedullinghhh+0x338>
    74b0:	e5 c2       	rjmp	.+1482   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    74b2:	66 ef       	ldi	r22, 0xF6	; 246
    74b4:	78 e1       	ldi	r23, 0x18	; 24
    74b6:	57 cf       	rjmp	.-338    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    74b8:	91 30       	cpi	r25, 0x01	; 1
    74ba:	51 f4       	brne	.+20     	; 0x74d0 <_Z22Day_In_Bet_Schedullinghhh+0x356>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    74bc:	69 ee       	ldi	r22, 0xE9	; 233
    74be:	78 e1       	ldi	r23, 0x18	; 24
    74c0:	86 ec       	ldi	r24, 0xC6	; 198
    74c2:	94 e1       	ldi	r25, 0x14	; 20
    74c4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74c8:	86 ec       	ldi	r24, 0xC6	; 198
    74ca:	94 e1       	ldi	r25, 0x14	; 20
    74cc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    74d0:	db 30       	cpi	r29, 0x0B	; 11
    74d2:	09 f0       	breq	.+2      	; 0x74d6 <_Z22Day_In_Bet_Schedullinghhh+0x35c>
    74d4:	d3 c2       	rjmp	.+1446   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    74d6:	8f e1       	ldi	r24, 0x1F	; 31
    74d8:	8f 19       	sub	r24, r15
    74da:	98 01       	movw	r18, r16
    74dc:	28 0f       	add	r18, r24
    74de:	31 1d       	adc	r19, r1
    74e0:	2a 15       	cp	r18, r10
    74e2:	3b 05       	cpc	r19, r11
    74e4:	0c f4       	brge	.+2      	; 0x74e8 <_Z22Day_In_Bet_Schedullinghhh+0x36e>
    74e6:	c9 c0       	rjmp	.+402    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    74e8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    74ec:	81 30       	cpi	r24, 0x01	; 1
    74ee:	09 f0       	breq	.+2      	; 0x74f2 <_Z22Day_In_Bet_Schedullinghhh+0x378>
    74f0:	c5 c2       	rjmp	.+1418   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    74f2:	6c ed       	ldi	r22, 0xDC	; 220
    74f4:	78 e1       	ldi	r23, 0x18	; 24
    74f6:	37 cf       	rjmp	.-402    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    74f8:	8e 2d       	mov	r24, r14
    74fa:	83 70       	andi	r24, 0x03	; 3
    74fc:	01 f1       	breq	.+64     	; 0x753e <_Z22Day_In_Bet_Schedullinghhh+0x3c4>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    74fe:	91 30       	cpi	r25, 0x01	; 1
    7500:	51 f4       	brne	.+20     	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x39c>
						{
							_kSERAIL_MON_WRITE("day in btw 4");
    7502:	6f ec       	ldi	r22, 0xCF	; 207
    7504:	78 e1       	ldi	r23, 0x18	; 24
    7506:	86 ec       	ldi	r24, 0xC6	; 198
    7508:	94 e1       	ldi	r25, 0x14	; 20
    750a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    750e:	86 ec       	ldi	r24, 0xC6	; 198
    7510:	94 e1       	ldi	r25, 0x14	; 20
    7512:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    7516:	d3 30       	cpi	r29, 0x03	; 3
    7518:	09 f0       	breq	.+2      	; 0x751c <_Z22Day_In_Bet_Schedullinghhh+0x3a2>
    751a:	b0 c2       	rjmp	.+1376   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    751c:	8c e1       	ldi	r24, 0x1C	; 28
    751e:	8f 19       	sub	r24, r15
    7520:	98 01       	movw	r18, r16
    7522:	28 0f       	add	r18, r24
    7524:	31 1d       	adc	r19, r1
    7526:	2a 15       	cp	r18, r10
    7528:	3b 05       	cpc	r19, r11
    752a:	0c f4       	brge	.+2      	; 0x752e <_Z22Day_In_Bet_Schedullinghhh+0x3b4>
    752c:	a6 c0       	rjmp	.+332    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    752e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7532:	81 30       	cpi	r24, 0x01	; 1
    7534:	09 f0       	breq	.+2      	; 0x7538 <_Z22Day_In_Bet_Schedullinghhh+0x3be>
    7536:	a2 c2       	rjmp	.+1348   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 5");
    7538:	62 ec       	ldi	r22, 0xC2	; 194
    753a:	78 e1       	ldi	r23, 0x18	; 24
    753c:	14 cf       	rjmp	.-472    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
							return 2;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    753e:	91 30       	cpi	r25, 0x01	; 1
    7540:	51 f4       	brne	.+20     	; 0x7556 <_Z22Day_In_Bet_Schedullinghhh+0x3dc>
						{
							_kSERAIL_MON_WRITE("day in btw 6");
    7542:	65 eb       	ldi	r22, 0xB5	; 181
    7544:	78 e1       	ldi	r23, 0x18	; 24
    7546:	86 ec       	ldi	r24, 0xC6	; 198
    7548:	94 e1       	ldi	r25, 0x14	; 20
    754a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    754e:	86 ec       	ldi	r24, 0xC6	; 198
    7550:	94 e1       	ldi	r25, 0x14	; 20
    7552:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    7556:	d3 30       	cpi	r29, 0x03	; 3
    7558:	09 f0       	breq	.+2      	; 0x755c <_Z22Day_In_Bet_Schedullinghhh+0x3e2>
    755a:	90 c2       	rjmp	.+1312   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    755c:	8d e1       	ldi	r24, 0x1D	; 29
    755e:	8f 19       	sub	r24, r15
    7560:	98 01       	movw	r18, r16
    7562:	28 0f       	add	r18, r24
    7564:	31 1d       	adc	r19, r1
    7566:	2a 15       	cp	r18, r10
    7568:	3b 05       	cpc	r19, r11
    756a:	0c f4       	brge	.+2      	; 0x756e <_Z22Day_In_Bet_Schedullinghhh+0x3f4>
    756c:	86 c0       	rjmp	.+268    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    756e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7572:	81 30       	cpi	r24, 0x01	; 1
    7574:	09 f0       	breq	.+2      	; 0x7578 <_Z22Day_In_Bet_Schedullinghhh+0x3fe>
    7576:	82 c2       	rjmp	.+1284   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 7");
    7578:	68 ea       	ldi	r22, 0xA8	; 168
    757a:	78 e1       	ldi	r23, 0x18	; 24
    757c:	f4 ce       	rjmp	.-536    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    757e:	91 30       	cpi	r25, 0x01	; 1
    7580:	51 f4       	brne	.+20     	; 0x7596 <_Z22Day_In_Bet_Schedullinghhh+0x41c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7582:	6b e9       	ldi	r22, 0x9B	; 155
    7584:	78 e1       	ldi	r23, 0x18	; 24
    7586:	86 ec       	ldi	r24, 0xC6	; 198
    7588:	94 e1       	ldi	r25, 0x14	; 20
    758a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    758e:	86 ec       	ldi	r24, 0xC6	; 198
    7590:	94 e1       	ldi	r25, 0x14	; 20
    7592:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    7596:	d5 30       	cpi	r29, 0x05	; 5
    7598:	09 f0       	breq	.+2      	; 0x759c <_Z22Day_In_Bet_Schedullinghhh+0x422>
    759a:	70 c2       	rjmp	.+1248   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    759c:	8e e1       	ldi	r24, 0x1E	; 30
    759e:	8f 19       	sub	r24, r15
    75a0:	98 01       	movw	r18, r16
    75a2:	28 0f       	add	r18, r24
    75a4:	31 1d       	adc	r19, r1
    75a6:	2a 15       	cp	r18, r10
    75a8:	3b 05       	cpc	r19, r11
    75aa:	0c f4       	brge	.+2      	; 0x75ae <_Z22Day_In_Bet_Schedullinghhh+0x434>
    75ac:	66 c0       	rjmp	.+204    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    75ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    75b2:	81 30       	cpi	r24, 0x01	; 1
    75b4:	09 f0       	breq	.+2      	; 0x75b8 <_Z22Day_In_Bet_Schedullinghhh+0x43e>
    75b6:	62 c2       	rjmp	.+1220   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    75b8:	6e e8       	ldi	r22, 0x8E	; 142
    75ba:	78 e1       	ldi	r23, 0x18	; 24
    75bc:	d4 ce       	rjmp	.-600    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75be:	91 30       	cpi	r25, 0x01	; 1
    75c0:	51 f4       	brne	.+20     	; 0x75d6 <_Z22Day_In_Bet_Schedullinghhh+0x45c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    75c2:	61 e8       	ldi	r22, 0x81	; 129
    75c4:	78 e1       	ldi	r23, 0x18	; 24
    75c6:	86 ec       	ldi	r24, 0xC6	; 198
    75c8:	94 e1       	ldi	r25, 0x14	; 20
    75ca:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    75ce:	86 ec       	ldi	r24, 0xC6	; 198
    75d0:	94 e1       	ldi	r25, 0x14	; 20
    75d2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    75d6:	d7 30       	cpi	r29, 0x07	; 7
    75d8:	09 f0       	breq	.+2      	; 0x75dc <_Z22Day_In_Bet_Schedullinghhh+0x462>
    75da:	50 c2       	rjmp	.+1184   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    75dc:	8e e1       	ldi	r24, 0x1E	; 30
    75de:	8f 19       	sub	r24, r15
    75e0:	98 01       	movw	r18, r16
    75e2:	28 0f       	add	r18, r24
    75e4:	31 1d       	adc	r19, r1
    75e6:	2a 15       	cp	r18, r10
    75e8:	3b 05       	cpc	r19, r11
    75ea:	0c f4       	brge	.+2      	; 0x75ee <_Z22Day_In_Bet_Schedullinghhh+0x474>
    75ec:	46 c0       	rjmp	.+140    	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    75ee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    75f2:	81 30       	cpi	r24, 0x01	; 1
    75f4:	09 f0       	breq	.+2      	; 0x75f8 <_Z22Day_In_Bet_Schedullinghhh+0x47e>
    75f6:	42 c2       	rjmp	.+1156   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    75f8:	64 e7       	ldi	r22, 0x74	; 116
    75fa:	78 e1       	ldi	r23, 0x18	; 24
    75fc:	b4 ce       	rjmp	.-664    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75fe:	91 30       	cpi	r25, 0x01	; 1
    7600:	51 f4       	brne	.+20     	; 0x7616 <_Z22Day_In_Bet_Schedullinghhh+0x49c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7602:	67 e6       	ldi	r22, 0x67	; 103
    7604:	78 e1       	ldi	r23, 0x18	; 24
    7606:	86 ec       	ldi	r24, 0xC6	; 198
    7608:	94 e1       	ldi	r25, 0x14	; 20
    760a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    760e:	86 ec       	ldi	r24, 0xC6	; 198
    7610:	94 e1       	ldi	r25, 0x14	; 20
    7612:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    7616:	da 30       	cpi	r29, 0x0A	; 10
    7618:	09 f0       	breq	.+2      	; 0x761c <_Z22Day_In_Bet_Schedullinghhh+0x4a2>
    761a:	30 c2       	rjmp	.+1120   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    761c:	8e e1       	ldi	r24, 0x1E	; 30
    761e:	8f 19       	sub	r24, r15
    7620:	98 01       	movw	r18, r16
    7622:	28 0f       	add	r18, r24
    7624:	31 1d       	adc	r19, r1
    7626:	2a 15       	cp	r18, r10
    7628:	3b 05       	cpc	r19, r11
    762a:	3c f1       	brlt	.+78     	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    762c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7630:	81 30       	cpi	r24, 0x01	; 1
    7632:	09 f0       	breq	.+2      	; 0x7636 <_Z22Day_In_Bet_Schedullinghhh+0x4bc>
    7634:	23 c2       	rjmp	.+1094   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7636:	6a e5       	ldi	r22, 0x5A	; 90
    7638:	78 e1       	ldi	r23, 0x18	; 24
    763a:	95 ce       	rjmp	.-726    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
						return 2;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    763c:	91 30       	cpi	r25, 0x01	; 1
    763e:	51 f4       	brne	.+20     	; 0x7654 <_Z22Day_In_Bet_Schedullinghhh+0x4da>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7640:	6d e4       	ldi	r22, 0x4D	; 77
    7642:	78 e1       	ldi	r23, 0x18	; 24
    7644:	86 ec       	ldi	r24, 0xC6	; 198
    7646:	94 e1       	ldi	r25, 0x14	; 20
    7648:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    764c:	86 ec       	ldi	r24, 0xC6	; 198
    764e:	94 e1       	ldi	r25, 0x14	; 20
    7650:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7654:	dc 30       	cpi	r29, 0x0C	; 12
    7656:	09 f0       	breq	.+2      	; 0x765a <_Z22Day_In_Bet_Schedullinghhh+0x4e0>
    7658:	11 c2       	rjmp	.+1058   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    765a:	8e e1       	ldi	r24, 0x1E	; 30
    765c:	8f 19       	sub	r24, r15
    765e:	98 01       	movw	r18, r16
    7660:	28 0f       	add	r18, r24
    7662:	31 1d       	adc	r19, r1
    7664:	2a 15       	cp	r18, r10
    7666:	3b 05       	cpc	r19, r11
    7668:	44 f0       	brlt	.+16     	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    766a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    766e:	81 30       	cpi	r24, 0x01	; 1
    7670:	09 f0       	breq	.+2      	; 0x7674 <_Z22Day_In_Bet_Schedullinghhh+0x4fa>
    7672:	04 c2       	rjmp	.+1032   	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7674:	60 e4       	ldi	r22, 0x40	; 64
    7676:	78 e1       	ldi	r23, 0x18	; 24
    7678:	76 ce       	rjmp	.-788    	; 0x7366 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    767a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    767e:	81 30       	cpi	r24, 0x01	; 1
    7680:	21 f5       	brne	.+72     	; 0x76ca <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 10");
    7682:	62 e3       	ldi	r22, 0x32	; 50
    7684:	78 e1       	ldi	r23, 0x18	; 24
    7686:	04 c0       	rjmp	.+8      	; 0x7690 <_Z22Day_In_Bet_Schedullinghhh+0x516>
				_kSERIAL_MON_CLEAR();
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7688:	91 30       	cpi	r25, 0x01	; 1
    768a:	f9 f4       	brne	.+62     	; 0x76ca <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 11");
    768c:	64 e2       	ldi	r22, 0x24	; 36
    768e:	78 e1       	ldi	r23, 0x18	; 24
    7690:	86 ec       	ldi	r24, 0xC6	; 198
    7692:	94 e1       	ldi	r25, 0x14	; 20
    7694:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7698:	86 ec       	ldi	r24, 0xC6	; 198
    769a:	94 e1       	ldi	r25, 0x14	; 20
    769c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
	//printf("\n");
	
	Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    76a0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    76a4:	81 30       	cpi	r24, 0x01	; 1
    76a6:	89 f4       	brne	.+34     	; 0x76ca <_Z22Day_In_Bet_Schedullinghhh+0x550>
	{
		_kSERAIL_MON_WRITE("No of days in bet 1: ");
    76a8:	6e e0       	ldi	r22, 0x0E	; 14
    76aa:	78 e1       	ldi	r23, 0x18	; 24
    76ac:	86 ec       	ldi	r24, 0xC6	; 198
    76ae:	94 e1       	ldi	r25, 0x14	; 20
    76b0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    76b4:	4a e0       	ldi	r20, 0x0A	; 10
    76b6:	50 e0       	ldi	r21, 0x00	; 0
    76b8:	6c 2d       	mov	r22, r12
    76ba:	86 ec       	ldi	r24, 0xC6	; 198
    76bc:	94 e1       	ldi	r25, 0x14	; 20
    76be:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    76c2:	86 ec       	ldi	r24, 0xC6	; 198
    76c4:	94 e1       	ldi	r25, 0x14	; 20
    76c6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    76ca:	d1 2c       	mov	r13, r1
    76cc:	8c 0c       	add	r8, r12
    76ce:	9d 1c       	adc	r9, r13
    76d0:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    76d4:	08 15       	cp	r16, r8
    76d6:	19 05       	cpc	r17, r9
    76d8:	4c f0       	brlt	.+18     	; 0x76ec <_Z22Day_In_Bet_Schedullinghhh+0x572>
    76da:	d7 11       	cpse	r29, r7
    76dc:	0a c0       	rjmp	.+20     	; 0x76f2 <_Z22Day_In_Bet_Schedullinghhh+0x578>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    76de:	c1 30       	cpi	r28, 0x01	; 1
    76e0:	11 f0       	breq	.+4      	; 0x76e6 <_Z22Day_In_Bet_Schedullinghhh+0x56c>
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 1;
    76e2:	c1 e0       	ldi	r28, 0x01	; 1
    76e4:	ce c1       	rjmp	.+924    	; 0x7a82 <_Z22Day_In_Bet_Schedullinghhh+0x908>
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
    76e6:	6f ef       	ldi	r22, 0xFF	; 255
    76e8:	77 e1       	ldi	r23, 0x17	; 23
    76ea:	84 c1       	rjmp	.+776    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
		
		return 1;
	}
	else
	{
		if(last_schedule_month != month)
    76ec:	d7 15       	cp	r29, r7
    76ee:	09 f4       	brne	.+2      	; 0x76f2 <_Z22Day_In_Bet_Schedullinghhh+0x578>
    76f0:	b7 c1       	rjmp	.+878    	; 0x7a60 <_Z22Day_In_Bet_Schedullinghhh+0x8e6>
		{
			switch(last_schedule_month)
    76f2:	47 2d       	mov	r20, r7
    76f4:	50 e0       	ldi	r21, 0x00	; 0
    76f6:	fa 01       	movw	r30, r20
    76f8:	31 97       	sbiw	r30, 0x01	; 1
    76fa:	ec 30       	cpi	r30, 0x0C	; 12
    76fc:	f1 05       	cpc	r31, r1
    76fe:	08 f0       	brcs	.+2      	; 0x7702 <_Z22Day_In_Bet_Schedullinghhh+0x588>
    7700:	a0 c1       	rjmp	.+832    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
    7702:	88 27       	eor	r24, r24
    7704:	eb 53       	subi	r30, 0x3B	; 59
    7706:	ff 4f       	sbci	r31, 0xFF	; 255
    7708:	8f 4f       	sbci	r24, 0xFF	; 255
    770a:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    770e:	c1 30       	cpi	r28, 0x01	; 1
    7710:	51 f4       	brne	.+20     	; 0x7726 <_Z22Day_In_Bet_Schedullinghhh+0x5ac>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7712:	60 ef       	ldi	r22, 0xF0	; 240
    7714:	77 e1       	ldi	r23, 0x17	; 23
    7716:	86 ec       	ldi	r24, 0xC6	; 198
    7718:	94 e1       	ldi	r25, 0x14	; 20
    771a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    771e:	86 ec       	ldi	r24, 0xC6	; 198
    7720:	94 e1       	ldi	r25, 0x14	; 20
    7722:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    7726:	d1 30       	cpi	r29, 0x01	; 1
    7728:	e1 f6       	brne	.-72     	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    772a:	8f e1       	ldi	r24, 0x1F	; 31
    772c:	8f 19       	sub	r24, r15
    772e:	08 0f       	add	r16, r24
    7730:	11 1d       	adc	r17, r1
    7732:	0c 15       	cp	r16, r12
    7734:	1d 05       	cpc	r17, r13
    7736:	0c f4       	brge	.+2      	; 0x773a <_Z22Day_In_Bet_Schedullinghhh+0x5c0>
    7738:	84 c1       	rjmp	.+776    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    773a:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    773e:	c1 30       	cpi	r28, 0x01	; 1
    7740:	81 f6       	brne	.-96     	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7742:	61 ee       	ldi	r22, 0xE1	; 225
    7744:	77 e1       	ldi	r23, 0x17	; 23
    7746:	56 c1       	rjmp	.+684    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7748:	c1 30       	cpi	r28, 0x01	; 1
    774a:	51 f4       	brne	.+20     	; 0x7760 <_Z22Day_In_Bet_Schedullinghhh+0x5e6>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    774c:	62 ed       	ldi	r22, 0xD2	; 210
    774e:	77 e1       	ldi	r23, 0x17	; 23
    7750:	86 ec       	ldi	r24, 0xC6	; 198
    7752:	94 e1       	ldi	r25, 0x14	; 20
    7754:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7758:	86 ec       	ldi	r24, 0xC6	; 198
    775a:	94 e1       	ldi	r25, 0x14	; 20
    775c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    7760:	d2 30       	cpi	r29, 0x02	; 2
    7762:	09 f0       	breq	.+2      	; 0x7766 <_Z22Day_In_Bet_Schedullinghhh+0x5ec>
    7764:	be cf       	rjmp	.-132    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7766:	8f e1       	ldi	r24, 0x1F	; 31
    7768:	8f 19       	sub	r24, r15
    776a:	08 0f       	add	r16, r24
    776c:	11 1d       	adc	r17, r1
    776e:	0c 15       	cp	r16, r12
    7770:	1d 05       	cpc	r17, r13
    7772:	0c f4       	brge	.+2      	; 0x7776 <_Z22Day_In_Bet_Schedullinghhh+0x5fc>
    7774:	66 c1       	rjmp	.+716    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7776:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    777a:	c1 30       	cpi	r28, 0x01	; 1
    777c:	09 f0       	breq	.+2      	; 0x7780 <_Z22Day_In_Bet_Schedullinghhh+0x606>
    777e:	b1 cf       	rjmp	.-158    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7780:	63 ec       	ldi	r22, 0xC3	; 195
    7782:	77 e1       	ldi	r23, 0x17	; 23
    7784:	37 c1       	rjmp	.+622    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7786:	c1 30       	cpi	r28, 0x01	; 1
    7788:	51 f4       	brne	.+20     	; 0x779e <_Z22Day_In_Bet_Schedullinghhh+0x624>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    778a:	64 eb       	ldi	r22, 0xB4	; 180
    778c:	77 e1       	ldi	r23, 0x17	; 23
    778e:	86 ec       	ldi	r24, 0xC6	; 198
    7790:	94 e1       	ldi	r25, 0x14	; 20
    7792:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7796:	86 ec       	ldi	r24, 0xC6	; 198
    7798:	94 e1       	ldi	r25, 0x14	; 20
    779a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    779e:	d4 30       	cpi	r29, 0x04	; 4
    77a0:	09 f0       	breq	.+2      	; 0x77a4 <_Z22Day_In_Bet_Schedullinghhh+0x62a>
    77a2:	9f cf       	rjmp	.-194    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    77a4:	8f e1       	ldi	r24, 0x1F	; 31
    77a6:	8f 19       	sub	r24, r15
    77a8:	08 0f       	add	r16, r24
    77aa:	11 1d       	adc	r17, r1
    77ac:	0c 15       	cp	r16, r12
    77ae:	1d 05       	cpc	r17, r13
    77b0:	0c f4       	brge	.+2      	; 0x77b4 <_Z22Day_In_Bet_Schedullinghhh+0x63a>
    77b2:	47 c1       	rjmp	.+654    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    77b4:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    77b8:	c1 30       	cpi	r28, 0x01	; 1
    77ba:	09 f0       	breq	.+2      	; 0x77be <_Z22Day_In_Bet_Schedullinghhh+0x644>
    77bc:	92 cf       	rjmp	.-220    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    77be:	65 ea       	ldi	r22, 0xA5	; 165
    77c0:	77 e1       	ldi	r23, 0x17	; 23
    77c2:	18 c1       	rjmp	.+560    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77c4:	c1 30       	cpi	r28, 0x01	; 1
    77c6:	51 f4       	brne	.+20     	; 0x77dc <_Z22Day_In_Bet_Schedullinghhh+0x662>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    77c8:	66 e9       	ldi	r22, 0x96	; 150
    77ca:	77 e1       	ldi	r23, 0x17	; 23
    77cc:	86 ec       	ldi	r24, 0xC6	; 198
    77ce:	94 e1       	ldi	r25, 0x14	; 20
    77d0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77d4:	86 ec       	ldi	r24, 0xC6	; 198
    77d6:	94 e1       	ldi	r25, 0x14	; 20
    77d8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    77dc:	d6 30       	cpi	r29, 0x06	; 6
    77de:	09 f0       	breq	.+2      	; 0x77e2 <_Z22Day_In_Bet_Schedullinghhh+0x668>
    77e0:	80 cf       	rjmp	.-256    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    77e2:	8f e1       	ldi	r24, 0x1F	; 31
    77e4:	8f 19       	sub	r24, r15
    77e6:	08 0f       	add	r16, r24
    77e8:	11 1d       	adc	r17, r1
    77ea:	0c 15       	cp	r16, r12
    77ec:	1d 05       	cpc	r17, r13
    77ee:	0c f4       	brge	.+2      	; 0x77f2 <_Z22Day_In_Bet_Schedullinghhh+0x678>
    77f0:	28 c1       	rjmp	.+592    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    77f2:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    77f6:	c1 30       	cpi	r28, 0x01	; 1
    77f8:	09 f0       	breq	.+2      	; 0x77fc <_Z22Day_In_Bet_Schedullinghhh+0x682>
    77fa:	73 cf       	rjmp	.-282    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    77fc:	67 e8       	ldi	r22, 0x87	; 135
    77fe:	77 e1       	ldi	r23, 0x17	; 23
    7800:	f9 c0       	rjmp	.+498    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7802:	c1 30       	cpi	r28, 0x01	; 1
    7804:	51 f4       	brne	.+20     	; 0x781a <_Z22Day_In_Bet_Schedullinghhh+0x6a0>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7806:	68 e7       	ldi	r22, 0x78	; 120
    7808:	77 e1       	ldi	r23, 0x17	; 23
    780a:	86 ec       	ldi	r24, 0xC6	; 198
    780c:	94 e1       	ldi	r25, 0x14	; 20
    780e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7812:	86 ec       	ldi	r24, 0xC6	; 198
    7814:	94 e1       	ldi	r25, 0x14	; 20
    7816:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    781a:	d8 30       	cpi	r29, 0x08	; 8
    781c:	09 f0       	breq	.+2      	; 0x7820 <_Z22Day_In_Bet_Schedullinghhh+0x6a6>
    781e:	61 cf       	rjmp	.-318    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7820:	8f e1       	ldi	r24, 0x1F	; 31
    7822:	8f 19       	sub	r24, r15
    7824:	08 0f       	add	r16, r24
    7826:	11 1d       	adc	r17, r1
    7828:	0c 15       	cp	r16, r12
    782a:	1d 05       	cpc	r17, r13
    782c:	0c f4       	brge	.+2      	; 0x7830 <_Z22Day_In_Bet_Schedullinghhh+0x6b6>
    782e:	09 c1       	rjmp	.+530    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7830:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7834:	c1 30       	cpi	r28, 0x01	; 1
    7836:	09 f0       	breq	.+2      	; 0x783a <_Z22Day_In_Bet_Schedullinghhh+0x6c0>
    7838:	54 cf       	rjmp	.-344    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    783a:	69 e6       	ldi	r22, 0x69	; 105
    783c:	77 e1       	ldi	r23, 0x17	; 23
    783e:	da c0       	rjmp	.+436    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7840:	c1 30       	cpi	r28, 0x01	; 1
    7842:	51 f4       	brne	.+20     	; 0x7858 <_Z22Day_In_Bet_Schedullinghhh+0x6de>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7844:	6a e5       	ldi	r22, 0x5A	; 90
    7846:	77 e1       	ldi	r23, 0x17	; 23
    7848:	86 ec       	ldi	r24, 0xC6	; 198
    784a:	94 e1       	ldi	r25, 0x14	; 20
    784c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7850:	86 ec       	ldi	r24, 0xC6	; 198
    7852:	94 e1       	ldi	r25, 0x14	; 20
    7854:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    7858:	d9 30       	cpi	r29, 0x09	; 9
    785a:	09 f0       	breq	.+2      	; 0x785e <_Z22Day_In_Bet_Schedullinghhh+0x6e4>
    785c:	42 cf       	rjmp	.-380    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    785e:	8f e1       	ldi	r24, 0x1F	; 31
    7860:	8f 19       	sub	r24, r15
    7862:	08 0f       	add	r16, r24
    7864:	11 1d       	adc	r17, r1
    7866:	0c 15       	cp	r16, r12
    7868:	1d 05       	cpc	r17, r13
    786a:	0c f4       	brge	.+2      	; 0x786e <_Z22Day_In_Bet_Schedullinghhh+0x6f4>
    786c:	ea c0       	rjmp	.+468    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    786e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7872:	c1 30       	cpi	r28, 0x01	; 1
    7874:	09 f0       	breq	.+2      	; 0x7878 <_Z22Day_In_Bet_Schedullinghhh+0x6fe>
    7876:	35 cf       	rjmp	.-406    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7878:	6b e4       	ldi	r22, 0x4B	; 75
    787a:	77 e1       	ldi	r23, 0x17	; 23
    787c:	bb c0       	rjmp	.+374    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    787e:	c1 30       	cpi	r28, 0x01	; 1
    7880:	51 f4       	brne	.+20     	; 0x7896 <_Z22Day_In_Bet_Schedullinghhh+0x71c>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7882:	6c e3       	ldi	r22, 0x3C	; 60
    7884:	77 e1       	ldi	r23, 0x17	; 23
    7886:	86 ec       	ldi	r24, 0xC6	; 198
    7888:	94 e1       	ldi	r25, 0x14	; 20
    788a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    788e:	86 ec       	ldi	r24, 0xC6	; 198
    7890:	94 e1       	ldi	r25, 0x14	; 20
    7892:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    7896:	db 30       	cpi	r29, 0x0B	; 11
    7898:	09 f0       	breq	.+2      	; 0x789c <_Z22Day_In_Bet_Schedullinghhh+0x722>
    789a:	23 cf       	rjmp	.-442    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    789c:	8f e1       	ldi	r24, 0x1F	; 31
    789e:	8f 19       	sub	r24, r15
    78a0:	08 0f       	add	r16, r24
    78a2:	11 1d       	adc	r17, r1
    78a4:	0c 15       	cp	r16, r12
    78a6:	1d 05       	cpc	r17, r13
    78a8:	0c f4       	brge	.+2      	; 0x78ac <_Z22Day_In_Bet_Schedullinghhh+0x732>
    78aa:	cb c0       	rjmp	.+406    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    78ac:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    78b0:	c1 30       	cpi	r28, 0x01	; 1
    78b2:	09 f0       	breq	.+2      	; 0x78b6 <_Z22Day_In_Bet_Schedullinghhh+0x73c>
    78b4:	16 cf       	rjmp	.-468    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    78b6:	6d e2       	ldi	r22, 0x2D	; 45
    78b8:	77 e1       	ldi	r23, 0x17	; 23
    78ba:	9c c0       	rjmp	.+312    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    78bc:	8e 2d       	mov	r24, r14
    78be:	83 70       	andi	r24, 0x03	; 3
    78c0:	f9 f0       	breq	.+62     	; 0x7900 <_Z22Day_In_Bet_Schedullinghhh+0x786>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    78c2:	c1 30       	cpi	r28, 0x01	; 1
    78c4:	51 f4       	brne	.+20     	; 0x78da <_Z22Day_In_Bet_Schedullinghhh+0x760>
						{
							_kSERAIL_MON_WRITE("day in btw 4.1");
    78c6:	6e e1       	ldi	r22, 0x1E	; 30
    78c8:	77 e1       	ldi	r23, 0x17	; 23
    78ca:	86 ec       	ldi	r24, 0xC6	; 198
    78cc:	94 e1       	ldi	r25, 0x14	; 20
    78ce:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    78d2:	86 ec       	ldi	r24, 0xC6	; 198
    78d4:	94 e1       	ldi	r25, 0x14	; 20
    78d6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    78da:	d3 30       	cpi	r29, 0x03	; 3
    78dc:	09 f0       	breq	.+2      	; 0x78e0 <_Z22Day_In_Bet_Schedullinghhh+0x766>
    78de:	01 cf       	rjmp	.-510    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    78e0:	8c e1       	ldi	r24, 0x1C	; 28
    78e2:	8f 19       	sub	r24, r15
    78e4:	08 0f       	add	r16, r24
    78e6:	11 1d       	adc	r17, r1
    78e8:	0c 15       	cp	r16, r12
    78ea:	1d 05       	cpc	r17, r13
    78ec:	0c f4       	brge	.+2      	; 0x78f0 <_Z22Day_In_Bet_Schedullinghhh+0x776>
    78ee:	a9 c0       	rjmp	.+338    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    78f0:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    78f4:	c1 30       	cpi	r28, 0x01	; 1
    78f6:	09 f0       	breq	.+2      	; 0x78fa <_Z22Day_In_Bet_Schedullinghhh+0x780>
    78f8:	f4 ce       	rjmp	.-536    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 5.1");
    78fa:	6f e0       	ldi	r22, 0x0F	; 15
    78fc:	77 e1       	ldi	r23, 0x17	; 23
    78fe:	7a c0       	rjmp	.+244    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
							return 1;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7900:	c1 30       	cpi	r28, 0x01	; 1
    7902:	51 f4       	brne	.+20     	; 0x7918 <_Z22Day_In_Bet_Schedullinghhh+0x79e>
						{
							_kSERAIL_MON_WRITE("day in btw 6.1");
    7904:	60 e0       	ldi	r22, 0x00	; 0
    7906:	77 e1       	ldi	r23, 0x17	; 23
    7908:	86 ec       	ldi	r24, 0xC6	; 198
    790a:	94 e1       	ldi	r25, 0x14	; 20
    790c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7910:	86 ec       	ldi	r24, 0xC6	; 198
    7912:	94 e1       	ldi	r25, 0x14	; 20
    7914:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    7918:	d3 30       	cpi	r29, 0x03	; 3
    791a:	09 f0       	breq	.+2      	; 0x791e <_Z22Day_In_Bet_Schedullinghhh+0x7a4>
    791c:	e2 ce       	rjmp	.-572    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    791e:	8d e1       	ldi	r24, 0x1D	; 29
    7920:	8f 19       	sub	r24, r15
    7922:	08 0f       	add	r16, r24
    7924:	11 1d       	adc	r17, r1
    7926:	0c 15       	cp	r16, r12
    7928:	1d 05       	cpc	r17, r13
    792a:	0c f4       	brge	.+2      	; 0x792e <_Z22Day_In_Bet_Schedullinghhh+0x7b4>
    792c:	8a c0       	rjmp	.+276    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    792e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7932:	c1 30       	cpi	r28, 0x01	; 1
    7934:	09 f0       	breq	.+2      	; 0x7938 <_Z22Day_In_Bet_Schedullinghhh+0x7be>
    7936:	d5 ce       	rjmp	.-598    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 7.1");
    7938:	61 ef       	ldi	r22, 0xF1	; 241
    793a:	76 e1       	ldi	r23, 0x16	; 22
    793c:	5b c0       	rjmp	.+182    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    793e:	c1 30       	cpi	r28, 0x01	; 1
    7940:	51 f4       	brne	.+20     	; 0x7956 <_Z22Day_In_Bet_Schedullinghhh+0x7dc>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    7942:	62 ee       	ldi	r22, 0xE2	; 226
    7944:	76 e1       	ldi	r23, 0x16	; 22
    7946:	86 ec       	ldi	r24, 0xC6	; 198
    7948:	94 e1       	ldi	r25, 0x14	; 20
    794a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    794e:	86 ec       	ldi	r24, 0xC6	; 198
    7950:	94 e1       	ldi	r25, 0x14	; 20
    7952:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    7956:	d5 30       	cpi	r29, 0x05	; 5
    7958:	09 f0       	breq	.+2      	; 0x795c <_Z22Day_In_Bet_Schedullinghhh+0x7e2>
    795a:	c3 ce       	rjmp	.-634    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    795c:	8e e1       	ldi	r24, 0x1E	; 30
    795e:	8f 19       	sub	r24, r15
    7960:	08 0f       	add	r16, r24
    7962:	11 1d       	adc	r17, r1
    7964:	0c 15       	cp	r16, r12
    7966:	1d 05       	cpc	r17, r13
    7968:	0c f4       	brge	.+2      	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x7f2>
    796a:	6b c0       	rjmp	.+214    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    796c:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7970:	c1 30       	cpi	r28, 0x01	; 1
    7972:	09 f0       	breq	.+2      	; 0x7976 <_Z22Day_In_Bet_Schedullinghhh+0x7fc>
    7974:	b6 ce       	rjmp	.-660    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7976:	63 ed       	ldi	r22, 0xD3	; 211
    7978:	76 e1       	ldi	r23, 0x16	; 22
    797a:	3c c0       	rjmp	.+120    	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    797c:	c1 30       	cpi	r28, 0x01	; 1
    797e:	51 f4       	brne	.+20     	; 0x7994 <_Z22Day_In_Bet_Schedullinghhh+0x81a>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7980:	66 ec       	ldi	r22, 0xC6	; 198
    7982:	76 e1       	ldi	r23, 0x16	; 22
    7984:	86 ec       	ldi	r24, 0xC6	; 198
    7986:	94 e1       	ldi	r25, 0x14	; 20
    7988:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    798c:	86 ec       	ldi	r24, 0xC6	; 198
    798e:	94 e1       	ldi	r25, 0x14	; 20
    7990:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    7994:	d7 30       	cpi	r29, 0x07	; 7
    7996:	09 f0       	breq	.+2      	; 0x799a <_Z22Day_In_Bet_Schedullinghhh+0x820>
    7998:	a4 ce       	rjmp	.-696    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    799a:	8e e1       	ldi	r24, 0x1E	; 30
    799c:	8f 19       	sub	r24, r15
    799e:	08 0f       	add	r16, r24
    79a0:	11 1d       	adc	r17, r1
    79a2:	0c 15       	cp	r16, r12
    79a4:	1d 05       	cpc	r17, r13
    79a6:	0c f4       	brge	.+2      	; 0x79aa <_Z22Day_In_Bet_Schedullinghhh+0x830>
    79a8:	4c c0       	rjmp	.+152    	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    79aa:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    79ae:	c1 30       	cpi	r28, 0x01	; 1
    79b0:	09 f0       	breq	.+2      	; 0x79b4 <_Z22Day_In_Bet_Schedullinghhh+0x83a>
    79b2:	97 ce       	rjmp	.-722    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    79b4:	67 eb       	ldi	r22, 0xB7	; 183
    79b6:	76 e1       	ldi	r23, 0x16	; 22
    79b8:	1d c0       	rjmp	.+58     	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    79ba:	c1 30       	cpi	r28, 0x01	; 1
    79bc:	51 f4       	brne	.+20     	; 0x79d2 <_Z22Day_In_Bet_Schedullinghhh+0x858>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    79be:	6a ea       	ldi	r22, 0xAA	; 170
    79c0:	76 e1       	ldi	r23, 0x16	; 22
    79c2:	86 ec       	ldi	r24, 0xC6	; 198
    79c4:	94 e1       	ldi	r25, 0x14	; 20
    79c6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    79ca:	86 ec       	ldi	r24, 0xC6	; 198
    79cc:	94 e1       	ldi	r25, 0x14	; 20
    79ce:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    79d2:	da 30       	cpi	r29, 0x0A	; 10
    79d4:	09 f0       	breq	.+2      	; 0x79d8 <_Z22Day_In_Bet_Schedullinghhh+0x85e>
    79d6:	85 ce       	rjmp	.-758    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    79d8:	8e e1       	ldi	r24, 0x1E	; 30
    79da:	8f 19       	sub	r24, r15
    79dc:	08 0f       	add	r16, r24
    79de:	11 1d       	adc	r17, r1
    79e0:	0c 15       	cp	r16, r12
    79e2:	1d 05       	cpc	r17, r13
    79e4:	74 f1       	brlt	.+92     	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    79e6:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    79ea:	c1 30       	cpi	r28, 0x01	; 1
    79ec:	09 f0       	breq	.+2      	; 0x79f0 <_Z22Day_In_Bet_Schedullinghhh+0x876>
    79ee:	79 ce       	rjmp	.-782    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    79f0:	6b e9       	ldi	r22, 0x9B	; 155
    79f2:	76 e1       	ldi	r23, 0x16	; 22
    79f4:	86 ec       	ldi	r24, 0xC6	; 198
    79f6:	94 e1       	ldi	r25, 0x14	; 20
    79f8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    79fc:	86 ec       	ldi	r24, 0xC6	; 198
    79fe:	94 e1       	ldi	r25, 0x14	; 20
    7a00:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    7a04:	3e c0       	rjmp	.+124    	; 0x7a82 <_Z22Day_In_Bet_Schedullinghhh+0x908>
						return 1;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a06:	c1 30       	cpi	r28, 0x01	; 1
    7a08:	51 f4       	brne	.+20     	; 0x7a1e <_Z22Day_In_Bet_Schedullinghhh+0x8a4>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    7a0a:	6c e8       	ldi	r22, 0x8C	; 140
    7a0c:	76 e1       	ldi	r23, 0x16	; 22
    7a0e:	86 ec       	ldi	r24, 0xC6	; 198
    7a10:	94 e1       	ldi	r25, 0x14	; 20
    7a12:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7a16:	86 ec       	ldi	r24, 0xC6	; 198
    7a18:	94 e1       	ldi	r25, 0x14	; 20
    7a1a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7a1e:	dc 30       	cpi	r29, 0x0C	; 12
    7a20:	09 f0       	breq	.+2      	; 0x7a24 <_Z22Day_In_Bet_Schedullinghhh+0x8aa>
    7a22:	5f ce       	rjmp	.-834    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7a24:	8e e1       	ldi	r24, 0x1E	; 30
    7a26:	8f 19       	sub	r24, r15
    7a28:	08 0f       	add	r16, r24
    7a2a:	11 1d       	adc	r17, r1
    7a2c:	0c 15       	cp	r16, r12
    7a2e:	1d 05       	cpc	r17, r13
    7a30:	44 f0       	brlt	.+16     	; 0x7a42 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a32:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a36:	c1 30       	cpi	r28, 0x01	; 1
    7a38:	09 f0       	breq	.+2      	; 0x7a3c <_Z22Day_In_Bet_Schedullinghhh+0x8c2>
    7a3a:	53 ce       	rjmp	.-858    	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7a3c:	6d e7       	ldi	r22, 0x7D	; 125
    7a3e:	76 e1       	ldi	r23, 0x16	; 22
    7a40:	d9 cf       	rjmp	.-78     	; 0x79f4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a42:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a46:	81 30       	cpi	r24, 0x01	; 1
    7a48:	c1 f4       	brne	.+48     	; 0x7a7a <_Z22Day_In_Bet_Schedullinghhh+0x900>
			{
				_kSERAIL_MON_WRITE("day in btw 10.1");
    7a4a:	6d e6       	ldi	r22, 0x6D	; 109
    7a4c:	76 e1       	ldi	r23, 0x16	; 22
    7a4e:	86 ec       	ldi	r24, 0xC6	; 198
    7a50:	94 e1       	ldi	r25, 0x14	; 20
    7a52:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7a56:	86 ec       	ldi	r24, 0xC6	; 198
    7a58:	94 e1       	ldi	r25, 0x14	; 20
    7a5a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    7a5e:	0d c0       	rjmp	.+26     	; 0x7a7a <_Z22Day_In_Bet_Schedullinghhh+0x900>
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a60:	c1 30       	cpi	r28, 0x01	; 1
    7a62:	71 f4       	brne	.+28     	; 0x7a80 <_Z22Day_In_Bet_Schedullinghhh+0x906>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
    7a64:	6d e5       	ldi	r22, 0x5D	; 93
    7a66:	76 e1       	ldi	r23, 0x16	; 22
    7a68:	86 ec       	ldi	r24, 0xC6	; 198
    7a6a:	94 e1       	ldi	r25, 0x14	; 20
    7a6c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7a70:	86 ec       	ldi	r24, 0xC6	; 198
    7a72:	94 e1       	ldi	r25, 0x14	; 20
    7a74:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    7a78:	03 c0       	rjmp	.+6      	; 0x7a80 <_Z22Day_In_Bet_Schedullinghhh+0x906>
			return 0;
		}
		
	}
	
}	
    7a7a:	04 c0       	rjmp	.+8      	; 0x7a84 <_Z22Day_In_Bet_Schedullinghhh+0x90a>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 2;
    7a7c:	c2 e0       	ldi	r28, 0x02	; 2
    7a7e:	01 c0       	rjmp	.+2      	; 0x7a82 <_Z22Day_In_Bet_Schedullinghhh+0x908>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
				_kSERIAL_MON_CLEAR();
			}
			//printf("deny 4");
			return 0;
    7a80:	c0 e0       	ldi	r28, 0x00	; 0
    7a82:	8c 2f       	mov	r24, r28
		}
		
	}
	
}	
    7a84:	df 91       	pop	r29
    7a86:	cf 91       	pop	r28
    7a88:	1f 91       	pop	r17
    7a8a:	0f 91       	pop	r16
    7a8c:	ff 90       	pop	r15
    7a8e:	ef 90       	pop	r14
    7a90:	df 90       	pop	r13
    7a92:	cf 90       	pop	r12
    7a94:	bf 90       	pop	r11
    7a96:	af 90       	pop	r10
    7a98:	9f 90       	pop	r9
    7a9a:	8f 90       	pop	r8
    7a9c:	7f 90       	pop	r7
    7a9e:	08 95       	ret

00007aa0 <_Z28Turn_Off_All_Tank_For_Safetyv>:
	
	return 1;
}

char Turn_Off_All_Tank_For_Safety(void)
{
    7aa0:	8f 92       	push	r8
    7aa2:	9f 92       	push	r9
    7aa4:	af 92       	push	r10
    7aa6:	bf 92       	push	r11
    7aa8:	cf 92       	push	r12
    7aaa:	df 92       	push	r13
    7aac:	ef 92       	push	r14
    7aae:	ff 92       	push	r15
    7ab0:	0f 93       	push	r16
    7ab2:	1f 93       	push	r17
    7ab4:	cf 93       	push	r28
    7ab6:	df 93       	push	r29
    7ab8:	cd b7       	in	r28, 0x3d	; 61
    7aba:	de b7       	in	r29, 0x3e	; 62
    7abc:	aa 97       	sbiw	r28, 0x2a	; 42
    7abe:	0f b6       	in	r0, 0x3f	; 63
    7ac0:	f8 94       	cli
    7ac2:	de bf       	out	0x3e, r29	; 62
    7ac4:	0f be       	out	0x3f, r0	; 63
    7ac6:	cd bf       	out	0x3d, r28	; 61
	unsigned char tank_number_list[_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK], tank_number;
	
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
    7ac8:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    7acc:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    7ad0:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    7ad4:	9e 01       	movw	r18, r28
    7ad6:	2f 5f       	subi	r18, 0xFF	; 255
    7ad8:	3f 4f       	sbci	r19, 0xFF	; 255
    7ada:	69 01       	movw	r12, r18
    7adc:	ce 01       	movw	r24, r28
    7ade:	8b 96       	adiw	r24, 0x2b	; 43
    7ae0:	f9 01       	movw	r30, r18
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
	{
		tank_number_list[i] = 0;
    7ae2:	11 92       	st	Z+, r1
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
    7ae4:	e8 17       	cp	r30, r24
    7ae6:	f9 07       	cpc	r31, r25
    7ae8:	e1 f7       	brne	.-8      	; 0x7ae2 <_Z28Turn_Off_All_Tank_For_Safetyv+0x42>
    7aea:	20 e0       	ldi	r18, 0x00	; 0
    7aec:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
	{
		if(check_tank == 0)
    7aee:	21 15       	cp	r18, r1
    7af0:	31 05       	cpc	r19, r1
    7af2:	39 f4       	brne	.+14     	; 0x7b02 <_Z28Turn_Off_All_Tank_For_Safetyv+0x62>
		{
			if(tank_number_list[check_tank] == 0)
    7af4:	89 81       	ldd	r24, Y+1	; 0x01
    7af6:	81 11       	cpse	r24, r1
    7af8:	1a c0       	rjmp	.+52     	; 0x7b2e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
			{
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    7afa:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <_sSchedules+0x7a>
    7afe:	89 83       	std	Y+1, r24	; 0x01
    7b00:	16 c0       	rjmp	.+44     	; 0x7b2e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
    7b02:	f6 01       	movw	r30, r12
    7b04:	80 e0       	ldi	r24, 0x00	; 0
    7b06:	90 e0       	ldi	r25, 0x00	; 0
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
			{
				if(tank_number_list[check_tank2] == _sSchedules.Fertilizer_Tank_Number[check_tank])
    7b08:	d9 01       	movw	r26, r18
    7b0a:	a8 56       	subi	r26, 0x68	; 104
    7b0c:	b6 4f       	sbci	r27, 0xF6	; 246
    7b0e:	41 91       	ld	r20, Z+
    7b10:	5c 91       	ld	r21, X
    7b12:	45 17       	cp	r20, r21
    7b14:	61 f0       	breq	.+24     	; 0x7b2e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				{
					break;
				}
				if(tank_number_list[check_tank2] == 0)
    7b16:	41 11       	cpse	r20, r1
    7b18:	06 c0       	rjmp	.+12     	; 0x7b26 <_Z28Turn_Off_All_Tank_For_Safetyv+0x86>
				{
					tank_number_list[check_tank2] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    7b1a:	4c 91       	ld	r20, X
    7b1c:	f6 01       	movw	r30, r12
    7b1e:	e8 0f       	add	r30, r24
    7b20:	f9 1f       	adc	r31, r25
    7b22:	40 83       	st	Z, r20
					break;
    7b24:	04 c0       	rjmp	.+8      	; 0x7b2e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
			}
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
    7b26:	01 96       	adiw	r24, 0x01	; 1
    7b28:	8a 32       	cpi	r24, 0x2A	; 42
    7b2a:	91 05       	cpc	r25, r1
    7b2c:	81 f7       	brne	.-32     	; 0x7b0e <_Z28Turn_Off_All_Tank_For_Safetyv+0x6e>
	{
		tank_number_list[i] = 0;
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
    7b2e:	2f 5f       	subi	r18, 0xFF	; 255
    7b30:	3f 4f       	sbci	r19, 0xFF	; 255
    7b32:	2a 32       	cpi	r18, 0x2A	; 42
    7b34:	31 05       	cpc	r19, r1
    7b36:	d9 f6       	brne	.-74     	; 0x7aee <_Z28Turn_Off_All_Tank_For_Safetyv+0x4e>
					break;
				}
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7b38:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7b3c:	81 30       	cpi	r24, 0x01	; 1
    7b3e:	51 f4       	brne	.+20     	; 0x7b54 <_Z28Turn_Off_All_Tank_For_Safetyv+0xb4>
	{
		_kSERAIL_MON_WRITE("tank number list");
    7b40:	68 e3       	ldi	r22, 0x38	; 56
    7b42:	7f e0       	ldi	r23, 0x0F	; 15
    7b44:	86 ec       	ldi	r24, 0xC6	; 198
    7b46:	94 e1       	ldi	r25, 0x14	; 20
    7b48:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7b4c:	86 ec       	ldi	r24, 0xC6	; 198
    7b4e:	94 e1       	ldi	r25, 0x14	; 20
    7b50:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7b54:	8b e1       	ldi	r24, 0x1B	; 27
    7b56:	e8 2e       	mov	r14, r24
						_kSERIAL_MON_CLEAR();
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7b58:	92 e0       	ldi	r25, 0x02	; 2
    7b5a:	89 2e       	mov	r8, r25
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7b5c:	25 e0       	ldi	r18, 0x05	; 5
    7b5e:	92 2e       	mov	r9, r18
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7b60:	f6 01       	movw	r30, r12
    7b62:	f1 90       	ld	r15, Z+
    7b64:	6f 01       	movw	r12, r30
    7b66:	ff 20       	and	r15, r15
    7b68:	09 f4       	brne	.+2      	; 0x7b6c <_Z28Turn_Off_All_Tank_For_Safetyv+0xcc>
    7b6a:	4c c0       	rjmp	.+152    	; 0x7c04 <_Z28Turn_Off_All_Tank_For_Safetyv+0x164>
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
    7b6c:	4a e0       	ldi	r20, 0x0A	; 10
    7b6e:	50 e0       	ldi	r21, 0x00	; 0
    7b70:	6f 2d       	mov	r22, r15
    7b72:	86 ec       	ldi	r24, 0xC6	; 198
    7b74:	94 e1       	ldi	r25, 0x14	; 20
    7b76:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7b7a:	0f 2d       	mov	r16, r15
    7b7c:	10 e0       	ldi	r17, 0x00	; 0
    7b7e:	05 56       	subi	r16, 0x65	; 101
    7b80:	11 09       	sbc	r17, r1
    7b82:	e0 9e       	mul	r14, r16
    7b84:	c0 01       	movw	r24, r0
    7b86:	e1 9e       	mul	r14, r17
    7b88:	90 0d       	add	r25, r0
    7b8a:	11 24       	eor	r1, r1
    7b8c:	9c 01       	movw	r18, r24
    7b8e:	28 51       	subi	r18, 0x18	; 24
    7b90:	32 4f       	sbci	r19, 0xF2	; 242
    7b92:	59 01       	movw	r10, r18
    7b94:	f9 01       	movw	r30, r18
    7b96:	80 81       	ld	r24, Z
    7b98:	81 11       	cpse	r24, r1
    7b9a:	e2 cf       	rjmp	.-60     	; 0x7b60 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
		{
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM))
    7b9c:	6b e9       	ldi	r22, 0x9B	; 155
    7b9e:	6f 0d       	add	r22, r15
    7ba0:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7ba4:	88 23       	and	r24, r24
    7ba6:	e1 f2       	breq	.-72     	; 0x7b60 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			{
				//_kSERAIL_MON_WRITE("tank number list with tank number array : ");
				//_kSERIAL_MON_PRINT_NUM(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				
				if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7ba8:	f5 01       	movw	r30, r10
    7baa:	82 81       	ldd	r24, Z+2	; 0x02
    7bac:	85 30       	cpi	r24, 0x05	; 5
    7bae:	c1 f2       	breq	.-80     	; 0x7b60 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7bb0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7bb4:	81 30       	cpi	r24, 0x01	; 1
    7bb6:	89 f4       	brne	.+34     	; 0x7bda <_Z28Turn_Off_All_Tank_For_Safetyv+0x13a>
					{
						_kSERAIL_MON_WRITE("tank number gets to off safely");
    7bb8:	69 e1       	ldi	r22, 0x19	; 25
    7bba:	7f e0       	ldi	r23, 0x0F	; 15
    7bbc:	86 ec       	ldi	r24, 0xC6	; 198
    7bbe:	94 e1       	ldi	r25, 0x14	; 20
    7bc0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM);
    7bc4:	4a e0       	ldi	r20, 0x0A	; 10
    7bc6:	50 e0       	ldi	r21, 0x00	; 0
    7bc8:	b8 01       	movw	r22, r16
    7bca:	86 ec       	ldi	r24, 0xC6	; 198
    7bcc:	94 e1       	ldi	r25, 0x14	; 20
    7bce:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
						_kSERIAL_MON_CLEAR();
    7bd2:	86 ec       	ldi	r24, 0xC6	; 198
    7bd4:	94 e1       	ldi	r25, 0x14	; 20
    7bd6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7bda:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    7bde:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    7be2:	90 62       	ori	r25, 0x20	; 32
    7be4:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    7be8:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
    7bec:	f0 92 72 14 	sts	0x1472, r15	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7bf0:	e0 9e       	mul	r14, r16
    7bf2:	f0 01       	movw	r30, r0
    7bf4:	e1 9e       	mul	r14, r17
    7bf6:	f0 0d       	add	r31, r0
    7bf8:	11 24       	eor	r1, r1
    7bfa:	e8 51       	subi	r30, 0x18	; 24
    7bfc:	f2 4f       	sbci	r31, 0xF2	; 242
    7bfe:	82 8e       	std	Z+26, r8	; 0x1a
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7c00:	92 82       	std	Z+2, r9	; 0x02
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7c02:	ae cf       	rjmp	.-164    	; 0x7b60 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			}
			//return 1;
		}
	}
	
}
    7c04:	aa 96       	adiw	r28, 0x2a	; 42
    7c06:	0f b6       	in	r0, 0x3f	; 63
    7c08:	f8 94       	cli
    7c0a:	de bf       	out	0x3e, r29	; 62
    7c0c:	0f be       	out	0x3f, r0	; 63
    7c0e:	cd bf       	out	0x3d, r28	; 61
    7c10:	df 91       	pop	r29
    7c12:	cf 91       	pop	r28
    7c14:	1f 91       	pop	r17
    7c16:	0f 91       	pop	r16
    7c18:	ff 90       	pop	r15
    7c1a:	ef 90       	pop	r14
    7c1c:	df 90       	pop	r13
    7c1e:	cf 90       	pop	r12
    7c20:	bf 90       	pop	r11
    7c22:	af 90       	pop	r10
    7c24:	9f 90       	pop	r9
    7c26:	8f 90       	pop	r8
    7c28:	08 95       	ret

00007c2a <_Z17Blower_Monitoringh>:

char Blower_Monitoring(unsigned char Forcefully_Off)
{	
    7c2a:	cf 92       	push	r12
    7c2c:	df 92       	push	r13
    7c2e:	ef 92       	push	r14
    7c30:	ff 92       	push	r15
    7c32:	0f 93       	push	r16
    7c34:	1f 93       	push	r17
	unsigned char tank_number,time_buffer;
	static unsigned char temp_number;
	
	if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Extra_Plot_Number == _kBLOWER_PLOT_NUMBER)
    7c36:	90 91 04 0e 	lds	r25, 0x0E04	; 0x800e04 <_sExtra_Plot+0x1c>
    7c3a:	96 36       	cpi	r25, 0x66	; 102
    7c3c:	09 f0       	breq	.+2      	; 0x7c40 <_Z17Blower_Monitoringh+0x16>
    7c3e:	49 c0       	rjmp	.+146    	; 0x7cd2 <_Z17Blower_Monitoringh+0xa8>
	{
		
		if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status == _kRESET)
    7c40:	90 91 03 0e 	lds	r25, 0x0E03	; 0x800e03 <_sExtra_Plot+0x1b>
    7c44:	91 11       	cpse	r25, r1
    7c46:	45 c0       	rjmp	.+138    	; 0x7cd2 <_Z17Blower_Monitoringh+0xa8>
		{
			if(Forcefully_Off == _kFORCEFULYY_OFF)
    7c48:	83 30       	cpi	r24, 0x03	; 3
    7c4a:	09 f0       	breq	.+2      	; 0x7c4e <_Z17Blower_Monitoringh+0x24>
    7c4c:	42 c0       	rjmp	.+132    	; 0x7cd2 <_Z17Blower_Monitoringh+0xa8>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7c4e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7c52:	81 30       	cpi	r24, 0x01	; 1
    7c54:	51 f4       	brne	.+20     	; 0x7c6a <_Z17Blower_Monitoringh+0x40>
				{
					_kSERAIL_MON_WRITE("blower gets 1.1 : ");
    7c56:	66 e0       	ldi	r22, 0x06	; 6
    7c58:	7f e0       	ldi	r23, 0x0F	; 15
    7c5a:	86 ec       	ldi	r24, 0xC6	; 198
    7c5c:	94 e1       	ldi	r25, 0x14	; 20
    7c5e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7c62:	86 ec       	ldi	r24, 0xC6	; 198
    7c64:	94 e1       	ldi	r25, 0x14	; 20
    7c66:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				
				_sSchedules.Blower_On_Scheduler_Status =_kOFF;
    7c6a:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
				_sSchedules.Blower_On_Retry = _kRESET;
    7c6e:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
				_sSchedules.Blower_On_Time = _kRESET;
    7c72:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
				temp_number = 0;
				/* turn off blower */
				
				if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7c76:	61 e0       	ldi	r22, 0x01	; 1
    7c78:	80 e0       	ldi	r24, 0x00	; 0
    7c7a:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7c7e:	88 23       	and	r24, r24
    7c80:	21 f1       	breq	.+72     	; 0x7cca <_Z17Blower_Monitoringh+0xa0>
				{
					//_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					//_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
					
					if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7c82:	80 91 05 0e 	lds	r24, 0x0E05	; 0x800e05 <_sExtra_Plot+0x1d>
    7c86:	85 30       	cpi	r24, 0x05	; 5
    7c88:	01 f1       	breq	.+64     	; 0x7cca <_Z17Blower_Monitoringh+0xa0>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7c8a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7c8e:	81 30       	cpi	r24, 0x01	; 1
    7c90:	51 f4       	brne	.+20     	; 0x7ca6 <_Z17Blower_Monitoringh+0x7c>
						{
							_kSERAIL_MON_WRITE("blower gets 2.1 : ");
    7c92:	63 ef       	ldi	r22, 0xF3	; 243
    7c94:	7e e0       	ldi	r23, 0x0E	; 14
    7c96:	86 ec       	ldi	r24, 0xC6	; 198
    7c98:	94 e1       	ldi	r25, 0x14	; 20
    7c9a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7c9e:	86 ec       	ldi	r24, 0xC6	; 198
    7ca0:	94 e1       	ldi	r25, 0x14	; 20
    7ca2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7ca6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    7caa:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    7cae:	90 62       	ori	r25, 0x20	; 32
    7cb0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    7cb4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7cb8:	81 e0       	ldi	r24, 0x01	; 1
    7cba:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7cbe:	82 e0       	ldi	r24, 0x02	; 2
    7cc0:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7cc4:	85 e0       	ldi	r24, 0x05	; 5
    7cc6:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
					}
				}
				
				_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    7cca:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
				return 1;
    7cce:	81 e0       	ldi	r24, 0x01	; 1
    7cd0:	d5 c1       	rjmp	.+938    	; 0x807c <_Z17Blower_Monitoringh+0x452>
				
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
    7cd2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7cd6:	90 e0       	ldi	r25, 0x00	; 0
    7cd8:	01 97       	sbiw	r24, 0x01	; 1
    7cda:	fc 01       	movw	r30, r24
    7cdc:	ee 0f       	add	r30, r30
    7cde:	ff 1f       	adc	r31, r31
    7ce0:	e8 0f       	add	r30, r24
    7ce2:	f9 1f       	adc	r31, r25
    7ce4:	ee 0f       	add	r30, r30
    7ce6:	ff 1f       	adc	r31, r31
    7ce8:	ed 53       	subi	r30, 0x3D	; 61
    7cea:	f6 4f       	sbci	r31, 0xF6	; 246
    7cec:	20 81       	ld	r18, Z
    7cee:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7cf0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7cf4:	90 e0       	ldi	r25, 0x00	; 0
    7cf6:	01 97       	sbiw	r24, 0x01	; 1
    7cf8:	fc 01       	movw	r30, r24
    7cfa:	ee 0f       	add	r30, r30
    7cfc:	ff 1f       	adc	r31, r31
    7cfe:	e8 0f       	add	r30, r24
    7d00:	f9 1f       	adc	r31, r25
    7d02:	ee 0f       	add	r30, r30
    7d04:	ff 1f       	adc	r31, r31
    7d06:	e7 5e       	subi	r30, 0xE7	; 231
    7d08:	f5 4f       	sbci	r31, 0xF5	; 245
    7d0a:	40 81       	ld	r20, Z
    7d0c:	51 81       	ldd	r21, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
    7d0e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d12:	90 e0       	ldi	r25, 0x00	; 0
    7d14:	01 97       	sbiw	r24, 0x01	; 1
    7d16:	fc 01       	movw	r30, r24
    7d18:	ee 0f       	add	r30, r30
    7d1a:	ff 1f       	adc	r31, r31
    7d1c:	8e 0f       	add	r24, r30
    7d1e:	9f 1f       	adc	r25, r31
    7d20:	fc 01       	movw	r30, r24
    7d22:	e1 59       	subi	r30, 0x91	; 145
    7d24:	f5 4f       	sbci	r31, 0xF5	; 245
    7d26:	80 81       	ld	r24, Z
    7d28:	81 30       	cpi	r24, 0x01	; 1
    7d2a:	29 f4       	brne	.+10     	; 0x7d36 <_Z17Blower_Monitoringh+0x10c>
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7d2c:	42 0f       	add	r20, r18
    7d2e:	53 1f       	adc	r21, r19
    7d30:	60 e0       	ldi	r22, 0x00	; 0
    7d32:	70 e0       	ldi	r23, 0x00	; 0
    7d34:	03 c0       	rjmp	.+6      	; 0x7d3c <_Z17Blower_Monitoringh+0x112>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
	{
		tank1_time = _kRESET;
    7d36:	40 e0       	ldi	r20, 0x00	; 0
    7d38:	50 e0       	ldi	r21, 0x00	; 0
    7d3a:	ba 01       	movw	r22, r20
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
    7d3c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d40:	90 e0       	ldi	r25, 0x00	; 0
    7d42:	01 97       	sbiw	r24, 0x01	; 1
    7d44:	fc 01       	movw	r30, r24
    7d46:	ee 0f       	add	r30, r30
    7d48:	ff 1f       	adc	r31, r31
    7d4a:	e8 0f       	add	r30, r24
    7d4c:	f9 1f       	adc	r31, r25
    7d4e:	ee 0f       	add	r30, r30
    7d50:	ff 1f       	adc	r31, r31
    7d52:	eb 53       	subi	r30, 0x3B	; 59
    7d54:	f6 4f       	sbci	r31, 0xF6	; 246
    7d56:	20 81       	ld	r18, Z
    7d58:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7d5a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d5e:	90 e0       	ldi	r25, 0x00	; 0
    7d60:	01 97       	sbiw	r24, 0x01	; 1
    7d62:	fc 01       	movw	r30, r24
    7d64:	ee 0f       	add	r30, r30
    7d66:	ff 1f       	adc	r31, r31
    7d68:	e8 0f       	add	r30, r24
    7d6a:	f9 1f       	adc	r31, r25
    7d6c:	ee 0f       	add	r30, r30
    7d6e:	ff 1f       	adc	r31, r31
    7d70:	e5 5e       	subi	r30, 0xE5	; 229
    7d72:	f5 4f       	sbci	r31, 0xF5	; 245
    7d74:	c0 80       	ld	r12, Z
    7d76:	d1 80       	ldd	r13, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
    7d78:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d7c:	90 e0       	ldi	r25, 0x00	; 0
    7d7e:	01 97       	sbiw	r24, 0x01	; 1
    7d80:	fc 01       	movw	r30, r24
    7d82:	ee 0f       	add	r30, r30
    7d84:	ff 1f       	adc	r31, r31
    7d86:	8e 0f       	add	r24, r30
    7d88:	9f 1f       	adc	r25, r31
    7d8a:	fc 01       	movw	r30, r24
    7d8c:	e0 59       	subi	r30, 0x90	; 144
    7d8e:	f5 4f       	sbci	r31, 0xF5	; 245
    7d90:	80 81       	ld	r24, Z
    7d92:	81 30       	cpi	r24, 0x01	; 1
    7d94:	29 f4       	brne	.+10     	; 0x7da0 <_Z17Blower_Monitoringh+0x176>
	{
		tank1_time = _kRESET;
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7d96:	c2 0e       	add	r12, r18
    7d98:	d3 1e       	adc	r13, r19
    7d9a:	e1 2c       	mov	r14, r1
    7d9c:	f1 2c       	mov	r15, r1
    7d9e:	03 c0       	rjmp	.+6      	; 0x7da6 <_Z17Blower_Monitoringh+0x17c>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
	{
		tank2_time = _kRESET;
    7da0:	c1 2c       	mov	r12, r1
    7da2:	d1 2c       	mov	r13, r1
    7da4:	76 01       	movw	r14, r12
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
    7da6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7daa:	90 e0       	ldi	r25, 0x00	; 0
    7dac:	01 97       	sbiw	r24, 0x01	; 1
    7dae:	fc 01       	movw	r30, r24
    7db0:	ee 0f       	add	r30, r30
    7db2:	ff 1f       	adc	r31, r31
    7db4:	e8 0f       	add	r30, r24
    7db6:	f9 1f       	adc	r31, r25
    7db8:	ee 0f       	add	r30, r30
    7dba:	ff 1f       	adc	r31, r31
    7dbc:	e9 53       	subi	r30, 0x39	; 57
    7dbe:	f6 4f       	sbci	r31, 0xF6	; 246
    7dc0:	20 81       	ld	r18, Z
    7dc2:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7dc4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7dc8:	90 e0       	ldi	r25, 0x00	; 0
    7dca:	01 97       	sbiw	r24, 0x01	; 1
    7dcc:	fc 01       	movw	r30, r24
    7dce:	ee 0f       	add	r30, r30
    7dd0:	ff 1f       	adc	r31, r31
    7dd2:	e8 0f       	add	r30, r24
    7dd4:	f9 1f       	adc	r31, r25
    7dd6:	ee 0f       	add	r30, r30
    7dd8:	ff 1f       	adc	r31, r31
    7dda:	e3 5e       	subi	r30, 0xE3	; 227
    7ddc:	f5 4f       	sbci	r31, 0xF5	; 245
    7dde:	00 81       	ld	r16, Z
    7de0:	11 81       	ldd	r17, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
    7de2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7de6:	90 e0       	ldi	r25, 0x00	; 0
    7de8:	01 97       	sbiw	r24, 0x01	; 1
    7dea:	fc 01       	movw	r30, r24
    7dec:	ee 0f       	add	r30, r30
    7dee:	ff 1f       	adc	r31, r31
    7df0:	8e 0f       	add	r24, r30
    7df2:	9f 1f       	adc	r25, r31
    7df4:	fc 01       	movw	r30, r24
    7df6:	ef 58       	subi	r30, 0x8F	; 143
    7df8:	f5 4f       	sbci	r31, 0xF5	; 245
    7dfa:	80 81       	ld	r24, Z
    7dfc:	81 30       	cpi	r24, 0x01	; 1
    7dfe:	29 f4       	brne	.+10     	; 0x7e0a <_Z17Blower_Monitoringh+0x1e0>
	{
		tank2_time = _kRESET;
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7e00:	02 0f       	add	r16, r18
    7e02:	13 1f       	adc	r17, r19
    7e04:	20 e0       	ldi	r18, 0x00	; 0
    7e06:	30 e0       	ldi	r19, 0x00	; 0
    7e08:	03 c0       	rjmp	.+6      	; 0x7e10 <_Z17Blower_Monitoringh+0x1e6>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
	{
		tank3_time = _kRESET;
    7e0a:	00 e0       	ldi	r16, 0x00	; 0
    7e0c:	10 e0       	ldi	r17, 0x00	; 0
    7e0e:	98 01       	movw	r18, r16
	}
	
	if(_sSchedules.Blower_On_Retry != 0 || _sSchedules.Scheduler_Retry_Timer != 0)
    7e10:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    7e14:	81 11       	cpse	r24, r1
    7e16:	06 c0       	rjmp	.+12     	; 0x7e24 <_Z17Blower_Monitoringh+0x1fa>
    7e18:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    7e1c:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    7e20:	89 2b       	or	r24, r25
    7e22:	11 f0       	breq	.+4      	; 0x7e28 <_Z17Blower_Monitoringh+0x1fe>
	{
		return 0;
    7e24:	80 e0       	ldi	r24, 0x00	; 0
    7e26:	2a c1       	rjmp	.+596    	; 0x807c <_Z17Blower_Monitoringh+0x452>
	_kSERAIL_MON_WRITE("tank2_time : ");
	_kSERIAL_MON_PRINT_NUM(tank2_time);
	_kSERAIL_MON_WRITE("tank3_time : ");
	_kSERIAL_MON_PRINT_NUM(tank3_time);*/
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
    7e28:	80 91 8b 0b 	lds	r24, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
    7e2c:	81 30       	cpi	r24, 0x01	; 1
    7e2e:	89 f1       	breq	.+98     	; 0x7e92 <_Z17Blower_Monitoringh+0x268>
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
    7e30:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e34:	90 e0       	ldi	r25, 0x00	; 0
    7e36:	01 97       	sbiw	r24, 0x01	; 1
    7e38:	fc 01       	movw	r30, r24
    7e3a:	ee 0f       	add	r30, r30
    7e3c:	ff 1f       	adc	r31, r31
    7e3e:	8e 0f       	add	r24, r30
    7e40:	9f 1f       	adc	r25, r31
    7e42:	fc 01       	movw	r30, r24
    7e44:	e1 59       	subi	r30, 0x91	; 145
    7e46:	f5 4f       	sbci	r31, 0xF5	; 245
    7e48:	80 81       	ld	r24, Z
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7e4a:	81 30       	cpi	r24, 0x01	; 1
    7e4c:	09 f4       	brne	.+2      	; 0x7e50 <_Z17Blower_Monitoringh+0x226>
    7e4e:	cf c0       	rjmp	.+414    	; 0x7fee <_Z17Blower_Monitoringh+0x3c4>
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
    7e50:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e54:	90 e0       	ldi	r25, 0x00	; 0
    7e56:	01 97       	sbiw	r24, 0x01	; 1
    7e58:	fc 01       	movw	r30, r24
    7e5a:	ee 0f       	add	r30, r30
    7e5c:	ff 1f       	adc	r31, r31
    7e5e:	8e 0f       	add	r24, r30
    7e60:	9f 1f       	adc	r25, r31
    7e62:	fc 01       	movw	r30, r24
    7e64:	e0 59       	subi	r30, 0x90	; 144
    7e66:	f5 4f       	sbci	r31, 0xF5	; 245
    7e68:	80 81       	ld	r24, Z
    7e6a:	81 30       	cpi	r24, 0x01	; 1
    7e6c:	09 f4       	brne	.+2      	; 0x7e70 <_Z17Blower_Monitoringh+0x246>
    7e6e:	bf c0       	rjmp	.+382    	; 0x7fee <_Z17Blower_Monitoringh+0x3c4>
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7e70:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e74:	90 e0       	ldi	r25, 0x00	; 0
    7e76:	01 97       	sbiw	r24, 0x01	; 1
    7e78:	fc 01       	movw	r30, r24
    7e7a:	ee 0f       	add	r30, r30
    7e7c:	ff 1f       	adc	r31, r31
    7e7e:	8e 0f       	add	r24, r30
    7e80:	9f 1f       	adc	r25, r31
    7e82:	fc 01       	movw	r30, r24
    7e84:	ef 58       	subi	r30, 0x8F	; 143
    7e86:	f5 4f       	sbci	r31, 0xF5	; 245
    7e88:	80 81       	ld	r24, Z
    7e8a:	81 30       	cpi	r24, 0x01	; 1
    7e8c:	09 f0       	breq	.+2      	; 0x7e90 <_Z17Blower_Monitoringh+0x266>
    7e8e:	ae c0       	rjmp	.+348    	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
    7e90:	ae c0       	rjmp	.+348    	; 0x7fee <_Z17Blower_Monitoringh+0x3c4>
		
	}
	else
	{
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
    7e92:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    7e96:	88 23       	and	r24, r24
    7e98:	21 f1       	breq	.+72     	; 0x7ee2 <_Z17Blower_Monitoringh+0x2b8>
    7e9a:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7e9e:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7ea2:	a0 e0       	ldi	r26, 0x00	; 0
    7ea4:	b0 e0       	ldi	r27, 0x00	; 0
    7ea6:	84 17       	cp	r24, r20
    7ea8:	95 07       	cpc	r25, r21
    7eaa:	a6 07       	cpc	r26, r22
    7eac:	b7 07       	cpc	r27, r23
    7eae:	08 f4       	brcc	.+2      	; 0x7eb2 <_Z17Blower_Monitoringh+0x288>
    7eb0:	9d c0       	rjmp	.+314    	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
    7eb2:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7eb6:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7eba:	a0 e0       	ldi	r26, 0x00	; 0
    7ebc:	b0 e0       	ldi	r27, 0x00	; 0
    7ebe:	8c 15       	cp	r24, r12
    7ec0:	9d 05       	cpc	r25, r13
    7ec2:	ae 05       	cpc	r26, r14
    7ec4:	bf 05       	cpc	r27, r15
    7ec6:	08 f4       	brcc	.+2      	; 0x7eca <_Z17Blower_Monitoringh+0x2a0>
    7ec8:	91 c0       	rjmp	.+290    	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
    7eca:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7ece:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7ed2:	a0 e0       	ldi	r26, 0x00	; 0
    7ed4:	b0 e0       	ldi	r27, 0x00	; 0
    7ed6:	80 17       	cp	r24, r16
    7ed8:	91 07       	cpc	r25, r17
    7eda:	a2 07       	cpc	r26, r18
    7edc:	b3 07       	cpc	r27, r19
    7ede:	08 f4       	brcc	.+2      	; 0x7ee2 <_Z17Blower_Monitoringh+0x2b8>
    7ee0:	85 c0       	rjmp	.+266    	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
    7ee2:	20 e0       	ldi	r18, 0x00	; 0
    7ee4:	30 e0       	ldi	r19, 0x00	; 0
    7ee6:	40 e0       	ldi	r20, 0x00	; 0
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
    7ee8:	5b e1       	ldi	r21, 0x1B	; 27
    7eea:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7eee:	90 e0       	ldi	r25, 0x00	; 0
    7ef0:	01 97       	sbiw	r24, 0x01	; 1
    7ef2:	fc 01       	movw	r30, r24
    7ef4:	ee 0f       	add	r30, r30
    7ef6:	ff 1f       	adc	r31, r31
    7ef8:	e8 0f       	add	r30, r24
    7efa:	f9 1f       	adc	r31, r25
    7efc:	e2 0f       	add	r30, r18
    7efe:	f3 1f       	adc	r31, r19
    7f00:	e8 56       	subi	r30, 0x68	; 104
    7f02:	f6 4f       	sbci	r31, 0xF6	; 246
    7f04:	80 81       	ld	r24, Z
    7f06:	90 e0       	ldi	r25, 0x00	; 0
    7f08:	85 56       	subi	r24, 0x65	; 101
    7f0a:	91 09       	sbc	r25, r1
    7f0c:	58 9f       	mul	r21, r24
    7f0e:	f0 01       	movw	r30, r0
    7f10:	59 9f       	mul	r21, r25
    7f12:	f0 0d       	add	r31, r0
    7f14:	11 24       	eor	r1, r1
    7f16:	e8 51       	subi	r30, 0x18	; 24
    7f18:	f2 4f       	sbci	r31, 0xF2	; 242
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7f1a:	81 81       	ldd	r24, Z+1	; 0x01
    7f1c:	88 23       	and	r24, r24
    7f1e:	b9 f1       	breq	.+110    	; 0x7f8e <_Z17Blower_Monitoringh+0x364>
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
    7f20:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7f24:	90 e0       	ldi	r25, 0x00	; 0
    7f26:	01 97       	sbiw	r24, 0x01	; 1
    7f28:	fc 01       	movw	r30, r24
    7f2a:	ee 0f       	add	r30, r30
    7f2c:	ff 1f       	adc	r31, r31
    7f2e:	e8 0f       	add	r30, r24
    7f30:	f9 1f       	adc	r31, r25
    7f32:	e2 0f       	add	r30, r18
    7f34:	f3 1f       	adc	r31, r19
    7f36:	e8 56       	subi	r30, 0x68	; 104
    7f38:	f6 4f       	sbci	r31, 0xF6	; 246
    7f3a:	80 81       	ld	r24, Z
    7f3c:	90 e0       	ldi	r25, 0x00	; 0
    7f3e:	85 56       	subi	r24, 0x65	; 101
    7f40:	91 09       	sbc	r25, r1
    7f42:	58 9f       	mul	r21, r24
    7f44:	f0 01       	movw	r30, r0
    7f46:	59 9f       	mul	r21, r25
    7f48:	f0 0d       	add	r31, r0
    7f4a:	11 24       	eor	r1, r1
    7f4c:	e8 51       	subi	r30, 0x18	; 24
    7f4e:	f2 4f       	sbci	r31, 0xF2	; 242
    7f50:	81 81       	ldd	r24, Z+1	; 0x01
    7f52:	85 36       	cpi	r24, 0x65	; 101
    7f54:	e0 f0       	brcs	.+56     	; 0x7f8e <_Z17Blower_Monitoringh+0x364>
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7f56:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7f5a:	90 e0       	ldi	r25, 0x00	; 0
    7f5c:	01 97       	sbiw	r24, 0x01	; 1
    7f5e:	fc 01       	movw	r30, r24
    7f60:	ee 0f       	add	r30, r30
    7f62:	ff 1f       	adc	r31, r31
    7f64:	e8 0f       	add	r30, r24
    7f66:	f9 1f       	adc	r31, r25
    7f68:	e2 0f       	add	r30, r18
    7f6a:	f3 1f       	adc	r31, r19
    7f6c:	e8 56       	subi	r30, 0x68	; 104
    7f6e:	f6 4f       	sbci	r31, 0xF6	; 246
    7f70:	80 81       	ld	r24, Z
    7f72:	90 e0       	ldi	r25, 0x00	; 0
    7f74:	85 56       	subi	r24, 0x65	; 101
    7f76:	91 09       	sbc	r25, r1
    7f78:	58 9f       	mul	r21, r24
    7f7a:	f0 01       	movw	r30, r0
    7f7c:	59 9f       	mul	r21, r25
    7f7e:	f0 0d       	add	r31, r0
    7f80:	11 24       	eor	r1, r1
    7f82:	e8 51       	subi	r30, 0x18	; 24
    7f84:	f2 4f       	sbci	r31, 0xF2	; 242
    7f86:	82 81       	ldd	r24, Z+2	; 0x02
    7f88:	84 30       	cpi	r24, 0x04	; 4
    7f8a:	09 f4       	brne	.+2      	; 0x7f8e <_Z17Blower_Monitoringh+0x364>
				{
					check_tank_status = 1;
    7f8c:	41 e0       	ldi	r20, 0x01	; 1
    7f8e:	2f 5f       	subi	r18, 0xFF	; 255
    7f90:	3f 4f       	sbci	r19, 0xFF	; 255
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    7f92:	23 30       	cpi	r18, 0x03	; 3
    7f94:	31 05       	cpc	r19, r1
    7f96:	09 f0       	breq	.+2      	; 0x7f9a <_Z17Blower_Monitoringh+0x370>
    7f98:	a8 cf       	rjmp	.-176    	; 0x7eea <_Z17Blower_Monitoringh+0x2c0>
				{
					check_tank_status = 1;
				}
			}
			
			if(check_tank_status)
    7f9a:	44 23       	and	r20, r20
    7f9c:	19 f0       	breq	.+6      	; 0x7fa4 <_Z17Blower_Monitoringh+0x37a>
			{
				_gWait_Blower_Time = _kMAX_BLOWER_REPEAT_TIME;
    7f9e:	88 e0       	ldi	r24, 0x08	; 8
    7fa0:	97 e0       	ldi	r25, 0x07	; 7
    7fa2:	02 c0       	rjmp	.+4      	; 0x7fa8 <_Z17Blower_Monitoringh+0x37e>
			}
			else
			{
				_gWait_Blower_Time = 60 * 60;
    7fa4:	80 e1       	ldi	r24, 0x10	; 16
    7fa6:	9e e0       	ldi	r25, 0x0E	; 14
    7fa8:	90 93 ef 0c 	sts	0x0CEF, r25	; 0x800cef <_gWait_Blower_Time+0x1>
    7fac:	80 93 ee 0c 	sts	0x0CEE, r24	; 0x800cee <_gWait_Blower_Time>
			}
			
			_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    7fb0:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
			//_kSERAIL_MON_WRITE("blower gets 5 : ");
			
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7fb4:	61 e0       	ldi	r22, 0x01	; 1
    7fb6:	80 e0       	ldi	r24, 0x00	; 0
    7fb8:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7fbc:	88 23       	and	r24, r24
    7fbe:	b1 f0       	breq	.+44     	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 6 : ");
				//_kSERIAL_MON_CLEAR();
				if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7fc0:	80 91 05 0e 	lds	r24, 0x0E05	; 0x800e05 <_sExtra_Plot+0x1d>
    7fc4:	85 30       	cpi	r24, 0x05	; 5
    7fc6:	91 f0       	breq	.+36     	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
				{
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7fc8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    7fcc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    7fd0:	90 62       	ori	r25, 0x20	; 32
    7fd2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    7fd6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7fda:	81 e0       	ldi	r24, 0x01	; 1
    7fdc:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7fe0:	82 e0       	ldi	r24, 0x02	; 2
    7fe2:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7fe6:	85 e0       	ldi	r24, 0x05	; 5
    7fe8:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
				}
			}
		}
	}	
}
    7fec:	47 c0       	rjmp	.+142    	; 0x807c <_Z17Blower_Monitoringh+0x452>
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
		{
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
    7fee:	80 91 ee 0c 	lds	r24, 0x0CEE	; 0x800cee <_gWait_Blower_Time>
    7ff2:	90 91 ef 0c 	lds	r25, 0x0CEF	; 0x800cef <_gWait_Blower_Time+0x1>
    7ff6:	89 2b       	or	r24, r25
    7ff8:	c9 f7       	brne	.-14     	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
    7ffa:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7ffe:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    8002:	a0 e0       	ldi	r26, 0x00	; 0
    8004:	b0 e0       	ldi	r27, 0x00	; 0
    8006:	84 17       	cp	r24, r20
    8008:	95 07       	cpc	r25, r21
    800a:	a6 07       	cpc	r26, r22
    800c:	b7 07       	cpc	r27, r23
    800e:	b0 f0       	brcs	.+44     	; 0x803c <_Z17Blower_Monitoringh+0x412>
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
    8010:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8014:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8018:	a0 e0       	ldi	r26, 0x00	; 0
    801a:	b0 e0       	ldi	r27, 0x00	; 0
    801c:	8c 15       	cp	r24, r12
    801e:	9d 05       	cpc	r25, r13
    8020:	ae 05       	cpc	r26, r14
    8022:	bf 05       	cpc	r27, r15
    8024:	58 f0       	brcs	.+22     	; 0x803c <_Z17Blower_Monitoringh+0x412>
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    8026:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    802a:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    802e:	a0 e0       	ldi	r26, 0x00	; 0
    8030:	b0 e0       	ldi	r27, 0x00	; 0
    8032:	80 17       	cp	r24, r16
    8034:	91 07       	cpc	r25, r17
    8036:	a2 07       	cpc	r26, r18
    8038:	b3 07       	cpc	r27, r19
    803a:	c0 f6       	brcc	.-80     	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
				{
					if(Extra_Plot_Valve_Grouping_Handler(_kON, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    803c:	61 e0       	ldi	r22, 0x01	; 1
    803e:	81 e0       	ldi	r24, 0x01	; 1
    8040:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    8044:	88 23       	and	r24, r24
    8046:	b1 f0       	breq	.+44     	; 0x8074 <_Z17Blower_Monitoringh+0x44a>
					{
						//_kSERAIL_MON_WRITE("blower gets 4 : ");
						//_kSERIAL_MON_CLEAR();
						_sSchedules.Blower_On_Scheduler_Status = _kON;
    8048:	21 e0       	ldi	r18, 0x01	; 1
    804a:	20 93 8b 0b 	sts	0x0B8B, r18	; 0x800b8b <_sSchedules+0x26d>
						_sSchedules.Blower_On_Time = _kBLOWER_ON_TIME;
    804e:	8a e5       	ldi	r24, 0x5A	; 90
    8050:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    8054:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    8058:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    805c:	90 62       	ori	r25, 0x20	; 32
    805e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    8062:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    8066:	20 93 72 14 	sts	0x1472, r18	; 0x801472 <_sRuble_Parameters+0xc4>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    806a:	82 e0       	ldi	r24, 0x02	; 2
    806c:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    8070:	84 e0       	ldi	r24, 0x04	; 4
    8072:	ba cf       	rjmp	.-140    	; 0x7fe8 <_Z17Blower_Monitoringh+0x3be>
					}
					else
					{
						_sSchedules.Blower_On_Retry = _kMAX_BLOWER_RETRY_TIME;
    8074:	84 eb       	ldi	r24, 0xB4	; 180
    8076:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
    807a:	b8 cf       	rjmp	.-144    	; 0x7fec <_Z17Blower_Monitoringh+0x3c2>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
				}
			}
		}
	}	
}
    807c:	1f 91       	pop	r17
    807e:	0f 91       	pop	r16
    8080:	ff 90       	pop	r15
    8082:	ef 90       	pop	r14
    8084:	df 90       	pop	r13
    8086:	cf 90       	pop	r12
    8088:	08 95       	ret

0000808a <_Z18Edited_In_Schedulev>:
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    808a:	ef 92       	push	r14
    808c:	ff 92       	push	r15
    808e:	0f 93       	push	r16
    8090:	1f 93       	push	r17
    8092:	cf 93       	push	r28
    8094:	df 93       	push	r29
	/* edit in the current schedule */
	/* edit in the current schedule */
	if(_sSchedules.Running_Schedule_At == 0)
    8096:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    809a:	81 11       	cpse	r24, r1
    809c:	ca c0       	rjmp	.+404    	; 0x8232 <_Z18Edited_In_Schedulev+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    809e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    80a2:	81 30       	cpi	r24, 0x01	; 1
    80a4:	51 f4       	brne	.+20     	; 0x80ba <_Z18Edited_In_Schedulev+0x30>
		{
			_kSERAIL_MON_WRITE("my 14");
    80a6:	6d ee       	ldi	r22, 0xED	; 237
    80a8:	7e e0       	ldi	r23, 0x0E	; 14
    80aa:	86 ec       	ldi	r24, 0xC6	; 198
    80ac:	94 e1       	ldi	r25, 0x14	; 20
    80ae:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    80b2:	86 ec       	ldi	r24, 0xC6	; 198
    80b4:	94 e1       	ldi	r25, 0x14	; 20
    80b6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    80ba:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    80be:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    80c2:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    80c6:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    80ca:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    80ce:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    80d2:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    80d6:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    80da:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    80de:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    80e2:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    80e6:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    80ea:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    80ee:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    80f2:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    80f6:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    80fa:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    80fe:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    8102:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    8106:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    810a:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
		}
		
		//_sSchedules.Schedule_Start_From_Today = 1;
		
		if(_sSchedules.Schedule_Start_From_Today != 1)
    810e:	80 91 f2 0b 	lds	r24, 0x0BF2	; 0x800bf2 <_sSchedules+0x2d4>
    8112:	81 30       	cpi	r24, 0x01	; 1
    8114:	21 f0       	breq	.+8      	; 0x811e <_Z18Edited_In_Schedulev+0x94>
		{
			Return_Calculated_Previous_Day_Date(1);
    8116:	81 e0       	ldi	r24, 0x01	; 1
    8118:	0e 94 3e 33 	call	0x667c	; 0x667c <_Z35Return_Calculated_Previous_Day_Dateh>
    811c:	18 c0       	rjmp	.+48     	; 0x814e <_Z18Edited_In_Schedulev+0xc4>
		}
		else
		{
			_sSchedules.Temp_date  = _sRuble_Parameters.Update_Local_Date[0];
    811e:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8122:	80 93 ec 0b 	sts	0x0BEC, r24	; 0x800bec <_sSchedules+0x2ce>
			_sSchedules.Temp_Month = _sRuble_Parameters.Update_Local_Date[1];
    8126:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    812a:	80 93 ed 0b 	sts	0x0BED, r24	; 0x800bed <_sSchedules+0x2cf>
			_sSchedules.Started_Date = _sSchedules.Temp_date;
    812e:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8132:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
			_sSchedules.Started_Month = _sSchedules.Temp_Month;
    8136:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    813a:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
    813e:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8142:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
    8146:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    814a:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    814e:	00 e0       	ldi	r16, 0x00	; 0
    8150:	10 e0       	ldi	r17, 0x00	; 0
    8152:	e1 2c       	mov	r14, r1
    8154:	f1 2c       	mov	r15, r1
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    8156:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    815a:	e7 01       	movw	r28, r14
    815c:	c2 5e       	subi	r28, 0xE2	; 226
    815e:	d6 4f       	sbci	r29, 0xF6	; 246
    8160:	81 30       	cpi	r24, 0x01	; 1
    8162:	01 f5       	brne	.+64     	; 0x81a4 <_Z18Edited_In_Schedulev+0x11a>
			{
				Serial.println(F("Running list date "));
    8164:	6a ed       	ldi	r22, 0xDA	; 218
    8166:	7e e0       	ldi	r23, 0x0E	; 14
    8168:	86 ec       	ldi	r24, 0xC6	; 198
    816a:	94 e1       	ldi	r25, 0x14	; 20
    816c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run[index_num]);
    8170:	fe 01       	movw	r30, r28
    8172:	e5 5a       	subi	r30, 0xA5	; 165
    8174:	ff 4f       	sbci	r31, 0xFF	; 255
    8176:	60 81       	ld	r22, Z
    8178:	4a e0       	ldi	r20, 0x0A	; 10
    817a:	50 e0       	ldi	r21, 0x00	; 0
    817c:	86 ec       	ldi	r24, 0xC6	; 198
    817e:	94 e1       	ldi	r25, 0x14	; 20
    8180:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
				Serial.println(F("Running list month "));
    8184:	66 ec       	ldi	r22, 0xC6	; 198
    8186:	7e e0       	ldi	r23, 0x0E	; 14
    8188:	86 ec       	ldi	r24, 0xC6	; 198
    818a:	94 e1       	ldi	r25, 0x14	; 20
    818c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run_Month[index_num]);
    8190:	fe 01       	movw	r30, r28
    8192:	e6 59       	subi	r30, 0x96	; 150
    8194:	ff 4f       	sbci	r31, 0xFF	; 255
    8196:	60 81       	ld	r22, Z
    8198:	4a e0       	ldi	r20, 0x0A	; 10
    819a:	50 e0       	ldi	r21, 0x00	; 0
    819c:	86 ec       	ldi	r24, 0xC6	; 198
    819e:	94 e1       	ldi	r25, 0x14	; 20
    81a0:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
			}
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    81a4:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    81a8:	fe 01       	movw	r30, r28
    81aa:	e5 5a       	subi	r30, 0xA5	; 165
    81ac:	ff 4f       	sbci	r31, 0xFF	; 255
    81ae:	80 83       	st	Z, r24
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    81b0:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    81b4:	c6 59       	subi	r28, 0x96	; 150
    81b6:	df 4f       	sbci	r29, 0xFF	; 255
    81b8:	88 83       	st	Y, r24
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    81ba:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    81be:	90 e0       	ldi	r25, 0x00	; 0
    81c0:	f8 01       	movw	r30, r16
    81c2:	ee 0f       	add	r30, r30
    81c4:	ff 1f       	adc	r31, r31
    81c6:	e5 5e       	subi	r30, 0xE5	; 229
    81c8:	f4 4f       	sbci	r31, 0xF4	; 244
    81ca:	91 83       	std	Z+1, r25	; 0x01
    81cc:	80 83       	st	Z, r24
    81ce:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    81d2:	90 e0       	ldi	r25, 0x00	; 0
    81d4:	f8 01       	movw	r30, r16
    81d6:	ee 0f       	add	r30, r30
    81d8:	ff 1f       	adc	r31, r31
    81da:	e3 5e       	subi	r30, 0xE3	; 227
    81dc:	f4 4f       	sbci	r31, 0xF4	; 244
    81de:	91 83       	std	Z+1, r25	; 0x01
    81e0:	80 83       	st	Z, r24
    81e2:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    81e6:	90 e0       	ldi	r25, 0x00	; 0
    81e8:	f8 01       	movw	r30, r16
    81ea:	ee 0f       	add	r30, r30
    81ec:	ff 1f       	adc	r31, r31
    81ee:	e1 5e       	subi	r30, 0xE1	; 225
    81f0:	f4 4f       	sbci	r31, 0xF4	; 244
    81f2:	91 83       	std	Z+1, r25	; 0x01
    81f4:	80 83       	st	Z, r24
    81f6:	2f ef       	ldi	r18, 0xFF	; 255
    81f8:	e2 1a       	sub	r14, r18
    81fa:	f2 0a       	sbc	r15, r18
    81fc:	0d 5f       	subi	r16, 0xFD	; 253
    81fe:	1f 4f       	sbci	r17, 0xFF	; 255
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    8200:	8e e0       	ldi	r24, 0x0E	; 14
    8202:	e8 16       	cp	r14, r24
    8204:	f1 04       	cpc	r15, r1
    8206:	09 f0       	breq	.+2      	; 0x820a <_Z18Edited_In_Schedulev+0x180>
    8208:	a6 cf       	rjmp	.-180    	; 0x8156 <_Z18Edited_In_Schedulev+0xcc>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    820a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    820e:	81 30       	cpi	r24, 0x01	; 1
    8210:	31 f4       	brne	.+12     	; 0x821e <_Z18Edited_In_Schedulev+0x194>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8212:	61 e8       	ldi	r22, 0x81	; 129
    8214:	7e e0       	ldi	r23, 0x0E	; 14
    8216:	86 ec       	ldi	r24, 0xC6	; 198
    8218:	94 e1       	ldi	r25, 0x14	; 20
    821a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    821e:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8222:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8226:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    822a:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		return 1;
    822e:	81 e0       	ldi	r24, 0x01	; 1
    8230:	c0 c4       	rjmp	.+2432   	; 0x8bb2 <_Z18Edited_In_Schedulev+0xb28>
		/* add previous dates here */
	}
	
	if(_sSchedules.Scheduler_Retry_Timer == _kRESET && _sSchedules.Running_Schedule_At !=0)
    8232:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8236:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    823a:	89 2b       	or	r24, r25
    823c:	09 f0       	breq	.+2      	; 0x8240 <_Z18Edited_In_Schedulev+0x1b6>
    823e:	18 c4       	rjmp	.+2096   	; 0x8a70 <_Z18Edited_In_Schedulev+0x9e6>
    8240:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8244:	88 23       	and	r24, r24
    8246:	09 f4       	brne	.+2      	; 0x824a <_Z18Edited_In_Schedulev+0x1c0>
    8248:	13 c4       	rjmp	.+2086   	; 0x8a70 <_Z18Edited_In_Schedulev+0x9e6>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    824a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    824e:	81 30       	cpi	r24, 0x01	; 1
    8250:	31 f4       	brne	.+12     	; 0x825e <_Z18Edited_In_Schedulev+0x1d4>
		{
			_kSERAIL_MON_WRITE("my 0");
    8252:	6c e7       	ldi	r22, 0x7C	; 124
    8254:	7e e0       	ldi	r23, 0x0E	; 14
    8256:	86 ec       	ldi	r24, 0xC6	; 198
    8258:	94 e1       	ldi	r25, 0x14	; 20
    825a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sSchedules.Back_Up_Running_Scheduler_Number)
    825e:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8262:	88 23       	and	r24, r24
    8264:	09 f4       	brne	.+2      	; 0x8268 <_Z18Edited_In_Schedulev+0x1de>
    8266:	8f c4       	rjmp	.+2334   	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    8268:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    826c:	81 30       	cpi	r24, 0x01	; 1
    826e:	31 f4       	brne	.+12     	; 0x827c <_Z18Edited_In_Schedulev+0x1f2>
			{
				_kSERAIL_MON_WRITE("my 1");
    8270:	67 e7       	ldi	r22, 0x77	; 119
    8272:	7e e0       	ldi	r23, 0x0E	; 14
    8274:	86 ec       	ldi	r24, 0xC6	; 198
    8276:	94 e1       	ldi	r25, 0x14	; 20
    8278:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			
			if(_sSchedules.Back_Up_Running_Schedule_Plot_Number)
    827c:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
    8280:	88 23       	and	r24, r24
    8282:	09 f4       	brne	.+2      	; 0x8286 <_Z18Edited_In_Schedulev+0x1fc>
    8284:	80 c4       	rjmp	.+2304   	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8286:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    828a:	81 30       	cpi	r24, 0x01	; 1
    828c:	51 f5       	brne	.+84     	; 0x82e2 <_Z18Edited_In_Schedulev+0x258>
				{
					_kSERAIL_MON_WRITE("my 2");
    828e:	62 e7       	ldi	r22, 0x72	; 114
    8290:	7e e0       	ldi	r23, 0x0E	; 14
    8292:	86 ec       	ldi	r24, 0xC6	; 198
    8294:	94 e1       	ldi	r25, 0x14	; 20
    8296:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("Running schedule :");
    829a:	6f e5       	ldi	r22, 0x5F	; 95
    829c:	7e e0       	ldi	r23, 0x0E	; 14
    829e:	86 ec       	ldi	r24, 0xC6	; 198
    82a0:	94 e1       	ldi	r25, 0x14	; 20
    82a2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    82a6:	86 ec       	ldi	r24, 0xC6	; 198
    82a8:	94 e1       	ldi	r25, 0x14	; 20
    82aa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Running_Schedule_At);
    82ae:	60 91 e6 0b 	lds	r22, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    82b2:	4a e0       	ldi	r20, 0x0A	; 10
    82b4:	50 e0       	ldi	r21, 0x00	; 0
    82b6:	86 ec       	ldi	r24, 0xC6	; 198
    82b8:	94 e1       	ldi	r25, 0x14	; 20
    82ba:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
					_kSERAIL_MON_WRITE("Back up schedule :");
    82be:	6c e4       	ldi	r22, 0x4C	; 76
    82c0:	7e e0       	ldi	r23, 0x0E	; 14
    82c2:	86 ec       	ldi	r24, 0xC6	; 198
    82c4:	94 e1       	ldi	r25, 0x14	; 20
    82c6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    82ca:	86 ec       	ldi	r24, 0xC6	; 198
    82cc:	94 e1       	ldi	r25, 0x14	; 20
    82ce:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Back_Up_Running_Scheduler_Number);
    82d2:	60 91 d8 0b 	lds	r22, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    82d6:	4a e0       	ldi	r20, 0x0A	; 10
    82d8:	50 e0       	ldi	r21, 0x00	; 0
    82da:	86 ec       	ldi	r24, 0xC6	; 198
    82dc:	94 e1       	ldi	r25, 0x14	; 20
    82de:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
				}
				
				if(_sSchedules.Running_Schedule_At == _sSchedules.Back_Up_Running_Scheduler_Number)
    82e2:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    82e6:	90 91 d8 0b 	lds	r25, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    82ea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    82ee:	29 13       	cpse	r18, r25
    82f0:	1f c1       	rjmp	.+574    	; 0x8530 <_Z18Edited_In_Schedulev+0x4a6>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    82f2:	81 30       	cpi	r24, 0x01	; 1
    82f4:	51 f4       	brne	.+20     	; 0x830a <_Z18Edited_In_Schedulev+0x280>
					{
						_kSERAIL_MON_WRITE("my 3");
    82f6:	67 e4       	ldi	r22, 0x47	; 71
    82f8:	7e e0       	ldi	r23, 0x0E	; 14
    82fa:	86 ec       	ldi	r24, 0xC6	; 198
    82fc:	94 e1       	ldi	r25, 0x14	; 20
    82fe:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8302:	86 ec       	ldi	r24, 0xC6	; 198
    8304:	94 e1       	ldi	r25, 0x14	; 20
    8306:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					
					if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    830a:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    830e:	f0 e0       	ldi	r31, 0x00	; 0
    8310:	e7 59       	subi	r30, 0x97	; 151
    8312:	f6 4f       	sbci	r31, 0xF6	; 246
    8314:	90 81       	ld	r25, Z
    8316:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
					|| _sSchedules.Running_Schedule_At == _kRESET)
    831a:	98 13       	cpse	r25, r24
    831c:	04 c0       	rjmp	.+8      	; 0x8326 <_Z18Edited_In_Schedulev+0x29c>
    831e:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8322:	81 11       	cpse	r24, r1
    8324:	41 c0       	rjmp	.+130    	; 0x83a8 <_Z18Edited_In_Schedulev+0x31e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8326:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    832a:	81 30       	cpi	r24, 0x01	; 1
    832c:	51 f4       	brne	.+20     	; 0x8342 <_Z18Edited_In_Schedulev+0x2b8>
						{
							_kSERAIL_MON_WRITE("my 4");
    832e:	62 e4       	ldi	r22, 0x42	; 66
    8330:	7e e0       	ldi	r23, 0x0E	; 14
    8332:	86 ec       	ldi	r24, 0xC6	; 198
    8334:	94 e1       	ldi	r25, 0x14	; 20
    8336:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    833a:	86 ec       	ldi	r24, 0xC6	; 198
    833c:	94 e1       	ldi	r25, 0x14	; 20
    833e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Running_Schedule_At != _kRESET)
    8342:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8346:	88 23       	and	r24, r24
    8348:	09 f4       	brne	.+2      	; 0x834c <_Z18Edited_In_Schedulev+0x2c2>
    834a:	2a c4       	rjmp	.+2132   	; 0x8ba0 <_Z18Edited_In_Schedulev+0xb16>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    834c:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8350:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8354:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
						_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8358:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
						_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    835c:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    8360:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
						
						for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
						{
							_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8364:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    8368:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    836c:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    8370:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8374:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8378:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
						}
				
						for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    837c:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8380:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8384:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8388:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    838c:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    8390:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
						}
				
						_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8394:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8398:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
						for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Running_Tank[tank_number] = _kOFF;
    839c:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    83a0:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    83a4:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
    83a8:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    83ac:	82 30       	cpi	r24, 0x02	; 2
    83ae:	08 f4       	brcc	.+2      	; 0x83b2 <_Z18Edited_In_Schedulev+0x328>
    83b0:	82 c0       	rjmp	.+260    	; 0x84b6 <_Z18Edited_In_Schedulev+0x42c>
    83b2:	40 e0       	ldi	r20, 0x00	; 0
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    83b4:	84 2f       	mov	r24, r20
    83b6:	90 e0       	ldi	r25, 0x00	; 0
    83b8:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    83bc:	30 e0       	ldi	r19, 0x00	; 0
    83be:	21 50       	subi	r18, 0x01	; 1
    83c0:	31 09       	sbc	r19, r1
    83c2:	82 17       	cp	r24, r18
    83c4:	93 07       	cpc	r25, r19
    83c6:	84 f5       	brge	.+96     	; 0x8428 <_Z18Edited_In_Schedulev+0x39e>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    83c8:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    83cc:	82 5e       	subi	r24, 0xE2	; 226
    83ce:	96 4f       	sbci	r25, 0xF6	; 246
    83d0:	fc 01       	movw	r30, r24
    83d2:	e5 5a       	subi	r30, 0xA5	; 165
    83d4:	ff 4f       	sbci	r31, 0xFF	; 255
    83d6:	20 83       	st	Z, r18
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    83d8:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    83dc:	3f 96       	adiw	r30, 0x0f	; 15
    83de:	20 83       	st	Z, r18
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    83e0:	23 e0       	ldi	r18, 0x03	; 3
    83e2:	42 9f       	mul	r20, r18
    83e4:	c0 01       	movw	r24, r0
    83e6:	11 24       	eor	r1, r1
    83e8:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    83ec:	30 e0       	ldi	r19, 0x00	; 0
    83ee:	fc 01       	movw	r30, r24
    83f0:	ee 0f       	add	r30, r30
    83f2:	ff 1f       	adc	r31, r31
    83f4:	e5 5e       	subi	r30, 0xE5	; 229
    83f6:	f4 4f       	sbci	r31, 0xF4	; 244
    83f8:	31 83       	std	Z+1, r19	; 0x01
    83fa:	20 83       	st	Z, r18
    83fc:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8400:	30 e0       	ldi	r19, 0x00	; 0
    8402:	fc 01       	movw	r30, r24
    8404:	ee 0f       	add	r30, r30
    8406:	ff 1f       	adc	r31, r31
    8408:	e3 5e       	subi	r30, 0xE3	; 227
    840a:	f4 4f       	sbci	r31, 0xF4	; 244
    840c:	31 83       	std	Z+1, r19	; 0x01
    840e:	20 83       	st	Z, r18
    8410:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8414:	30 e0       	ldi	r19, 0x00	; 0
    8416:	88 0f       	add	r24, r24
    8418:	99 1f       	adc	r25, r25
    841a:	fc 01       	movw	r30, r24
    841c:	e1 5e       	subi	r30, 0xE1	; 225
    841e:	f4 4f       	sbci	r31, 0xF4	; 244
    8420:	31 83       	std	Z+1, r19	; 0x01
    8422:	20 83       	st	Z, r18
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8424:	4f 5f       	subi	r20, 0xFF	; 255
    8426:	c6 cf       	rjmp	.-116    	; 0x83b4 <_Z18Edited_In_Schedulev+0x32a>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8428:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    842c:	81 50       	subi	r24, 0x01	; 1
    842e:	8f 30       	cpi	r24, 0x0F	; 15
    8430:	90 f5       	brcc	.+100    	; 0x8496 <_Z18Edited_In_Schedulev+0x40c>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8432:	28 2f       	mov	r18, r24
    8434:	30 e0       	ldi	r19, 0x00	; 0
    8436:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    843a:	22 5e       	subi	r18, 0xE2	; 226
    843c:	36 4f       	sbci	r19, 0xF6	; 246
    843e:	f9 01       	movw	r30, r18
    8440:	e5 5a       	subi	r30, 0xA5	; 165
    8442:	ff 4f       	sbci	r31, 0xFF	; 255
    8444:	90 83       	st	Z, r25
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8446:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    844a:	3f 96       	adiw	r30, 0x0f	; 15
    844c:	90 83       	st	Z, r25
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    844e:	93 e0       	ldi	r25, 0x03	; 3
    8450:	89 9f       	mul	r24, r25
    8452:	90 01       	movw	r18, r0
    8454:	11 24       	eor	r1, r1
    8456:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    845a:	50 e0       	ldi	r21, 0x00	; 0
    845c:	f9 01       	movw	r30, r18
    845e:	ee 0f       	add	r30, r30
    8460:	ff 1f       	adc	r31, r31
    8462:	e5 5e       	subi	r30, 0xE5	; 229
    8464:	f4 4f       	sbci	r31, 0xF4	; 244
    8466:	51 83       	std	Z+1, r21	; 0x01
    8468:	40 83       	st	Z, r20
    846a:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    846e:	50 e0       	ldi	r21, 0x00	; 0
    8470:	f9 01       	movw	r30, r18
    8472:	ee 0f       	add	r30, r30
    8474:	ff 1f       	adc	r31, r31
    8476:	e3 5e       	subi	r30, 0xE3	; 227
    8478:	f4 4f       	sbci	r31, 0xF4	; 244
    847a:	51 83       	std	Z+1, r21	; 0x01
    847c:	40 83       	st	Z, r20
    847e:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8482:	50 e0       	ldi	r21, 0x00	; 0
    8484:	22 0f       	add	r18, r18
    8486:	33 1f       	adc	r19, r19
    8488:	f9 01       	movw	r30, r18
    848a:	e1 5e       	subi	r30, 0xE1	; 225
    848c:	f4 4f       	sbci	r31, 0xF4	; 244
    848e:	51 83       	std	Z+1, r21	; 0x01
    8490:	40 83       	st	Z, r20
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8492:	8f 5f       	subi	r24, 0xFF	; 255
    8494:	cc cf       	rjmp	.-104    	; 0x842e <_Z18Edited_In_Schedulev+0x3a4>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
							}
						}
						_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8496:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    849a:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    849e:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    84a2:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    84a6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    84aa:	81 30       	cpi	r24, 0x01	; 1
    84ac:	09 f0       	breq	.+2      	; 0x84b0 <_Z18Edited_In_Schedulev+0x426>
    84ae:	6b c3       	rjmp	.+1750   	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
						{
							_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 3//// :");
    84b0:	60 e1       	ldi	r22, 0x10	; 16
    84b2:	7e e0       	ldi	r23, 0x0E	; 14
    84b4:	45 c1       	rjmp	.+650    	; 0x8740 <_Z18Edited_In_Schedulev+0x6b6>
							_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
							_kSERIAL_MON_CLEAR();
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
    84b6:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    84ba:	81 30       	cpi	r24, 0x01	; 1
    84bc:	09 f0       	breq	.+2      	; 0x84c0 <_Z18Edited_In_Schedulev+0x436>
    84be:	63 c3       	rjmp	.+1734   	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
					{
						Return_Calculated_Previous_Day_Date(1);
    84c0:	0e 94 3e 33 	call	0x667c	; 0x667c <_Z35Return_Calculated_Previous_Day_Dateh>
    84c4:	80 e0       	ldi	r24, 0x00	; 0
    84c6:	90 e0       	ldi	r25, 0x00	; 0
    84c8:	20 e0       	ldi	r18, 0x00	; 0
    84ca:	30 e0       	ldi	r19, 0x00	; 0
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    84cc:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    84d0:	a9 01       	movw	r20, r18
    84d2:	42 5e       	subi	r20, 0xE2	; 226
    84d4:	56 4f       	sbci	r21, 0xF6	; 246
    84d6:	fa 01       	movw	r30, r20
    84d8:	e5 5a       	subi	r30, 0xA5	; 165
    84da:	ff 4f       	sbci	r31, 0xFF	; 255
    84dc:	60 83       	st	Z, r22
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    84de:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    84e2:	3f 96       	adiw	r30, 0x0f	; 15
    84e4:	60 83       	st	Z, r22
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    84e6:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    84ea:	50 e0       	ldi	r21, 0x00	; 0
    84ec:	fc 01       	movw	r30, r24
    84ee:	ee 0f       	add	r30, r30
    84f0:	ff 1f       	adc	r31, r31
    84f2:	e5 5e       	subi	r30, 0xE5	; 229
    84f4:	f4 4f       	sbci	r31, 0xF4	; 244
    84f6:	51 83       	std	Z+1, r21	; 0x01
    84f8:	40 83       	st	Z, r20
    84fa:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    84fe:	50 e0       	ldi	r21, 0x00	; 0
    8500:	fc 01       	movw	r30, r24
    8502:	ee 0f       	add	r30, r30
    8504:	ff 1f       	adc	r31, r31
    8506:	e3 5e       	subi	r30, 0xE3	; 227
    8508:	f4 4f       	sbci	r31, 0xF4	; 244
    850a:	51 83       	std	Z+1, r21	; 0x01
    850c:	40 83       	st	Z, r20
    850e:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8512:	50 e0       	ldi	r21, 0x00	; 0
    8514:	fc 01       	movw	r30, r24
    8516:	ee 0f       	add	r30, r30
    8518:	ff 1f       	adc	r31, r31
    851a:	e1 5e       	subi	r30, 0xE1	; 225
    851c:	f4 4f       	sbci	r31, 0xF4	; 244
    851e:	51 83       	std	Z+1, r21	; 0x01
    8520:	40 83       	st	Z, r20
    8522:	2f 5f       	subi	r18, 0xFF	; 255
    8524:	3f 4f       	sbci	r19, 0xFF	; 255
    8526:	03 96       	adiw	r24, 0x03	; 3
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
					{
						Return_Calculated_Previous_Day_Date(1);
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8528:	2f 30       	cpi	r18, 0x0F	; 15
    852a:	31 05       	cpc	r19, r1
    852c:	79 f6       	brne	.-98     	; 0x84cc <_Z18Edited_In_Schedulev+0x442>
    852e:	23 c3       	rjmp	.+1606   	; 0x8b76 <_Z18Edited_In_Schedulev+0xaec>
						_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
					}
				}
				else 
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8530:	81 30       	cpi	r24, 0x01	; 1
    8532:	51 f4       	brne	.+20     	; 0x8548 <_Z18Edited_In_Schedulev+0x4be>
					{
						_kSERAIL_MON_WRITE("my 5");
    8534:	6b e0       	ldi	r22, 0x0B	; 11
    8536:	7e e0       	ldi	r23, 0x0E	; 14
    8538:	86 ec       	ldi	r24, 0xC6	; 198
    853a:	94 e1       	ldi	r25, 0x14	; 20
    853c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8540:	86 ec       	ldi	r24, 0xC6	; 198
    8542:	94 e1       	ldi	r25, 0x14	; 20
    8544:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Running_Schedule_At < _sSchedules.Back_Up_Running_Scheduler_Number)
    8548:	90 91 e6 0b 	lds	r25, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    854c:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8550:	98 17       	cp	r25, r24
    8552:	08 f0       	brcs	.+2      	; 0x8556 <_Z18Edited_In_Schedulev+0x4cc>
    8554:	43 c1       	rjmp	.+646    	; 0x87dc <_Z18Edited_In_Schedulev+0x752>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8556:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    855a:	81 30       	cpi	r24, 0x01	; 1
    855c:	51 f4       	brne	.+20     	; 0x8572 <_Z18Edited_In_Schedulev+0x4e8>
						{
							_kSERAIL_MON_WRITE("my 6");
    855e:	66 e0       	ldi	r22, 0x06	; 6
    8560:	7e e0       	ldi	r23, 0x0E	; 14
    8562:	86 ec       	ldi	r24, 0xC6	; 198
    8564:	94 e1       	ldi	r25, 0x14	; 20
    8566:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    856a:	86 ec       	ldi	r24, 0xC6	; 198
    856c:	94 e1       	ldi	r25, 0x14	; 20
    856e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    8572:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8576:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    857a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    857e:	81 30       	cpi	r24, 0x01	; 1
    8580:	51 f4       	brne	.+20     	; 0x8596 <_Z18Edited_In_Schedulev+0x50c>
						{
							_kSERAIL_MON_WRITE("my 6.1");
    8582:	6f ef       	ldi	r22, 0xFF	; 255
    8584:	7d e0       	ldi	r23, 0x0D	; 13
    8586:	86 ec       	ldi	r24, 0xC6	; 198
    8588:	94 e1       	ldi	r25, 0x14	; 20
    858a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    858e:	86 ec       	ldi	r24, 0xC6	; 198
    8590:	94 e1       	ldi	r25, 0x14	; 20
    8592:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    8596:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    859a:	f0 e0       	ldi	r31, 0x00	; 0
    859c:	e7 59       	subi	r30, 0x97	; 151
    859e:	f6 4f       	sbci	r31, 0xF6	; 246
    85a0:	90 81       	ld	r25, Z
    85a2:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    85a6:	98 13       	cpse	r25, r24
    85a8:	04 c0       	rjmp	.+8      	; 0x85b2 <_Z18Edited_In_Schedulev+0x528>
    85aa:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    85ae:	81 11       	cpse	r24, r1
    85b0:	41 c0       	rjmp	.+130    	; 0x8634 <_Z18Edited_In_Schedulev+0x5aa>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    85b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    85b6:	81 30       	cpi	r24, 0x01	; 1
    85b8:	51 f4       	brne	.+20     	; 0x85ce <_Z18Edited_In_Schedulev+0x544>
							{
								_kSERAIL_MON_WRITE("my 6.2");
    85ba:	68 ef       	ldi	r22, 0xF8	; 248
    85bc:	7d e0       	ldi	r23, 0x0D	; 13
    85be:	86 ec       	ldi	r24, 0xC6	; 198
    85c0:	94 e1       	ldi	r25, 0x14	; 20
    85c2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    85c6:	86 ec       	ldi	r24, 0xC6	; 198
    85c8:	94 e1       	ldi	r25, 0x14	; 20
    85ca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    85ce:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    85d2:	88 23       	and	r24, r24
    85d4:	09 f4       	brne	.+2      	; 0x85d8 <_Z18Edited_In_Schedulev+0x54e>
    85d6:	e7 c2       	rjmp	.+1486   	; 0x8ba6 <_Z18Edited_In_Schedulev+0xb1c>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    85d8:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    85dc:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    85e0:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    85e4:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    85e8:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    85ec:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    85f0:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    85f4:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    85f8:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    85fc:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8600:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8604:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8608:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    860c:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8610:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8614:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8618:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    861c:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8620:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8624:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    8628:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    862c:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8630:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8634:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8638:	82 30       	cpi	r24, 0x02	; 2
    863a:	08 f4       	brcc	.+2      	; 0x863e <_Z18Edited_In_Schedulev+0x5b4>
    863c:	92 c0       	rjmp	.+292    	; 0x8762 <_Z18Edited_In_Schedulev+0x6d8>
    863e:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8640:	84 2f       	mov	r24, r20
    8642:	90 e0       	ldi	r25, 0x00	; 0
    8644:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8648:	30 e0       	ldi	r19, 0x00	; 0
    864a:	21 50       	subi	r18, 0x01	; 1
    864c:	31 09       	sbc	r19, r1
    864e:	82 17       	cp	r24, r18
    8650:	93 07       	cpc	r25, r19
    8652:	84 f5       	brge	.+96     	; 0x86b4 <_Z18Edited_In_Schedulev+0x62a>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8654:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8658:	82 5e       	subi	r24, 0xE2	; 226
    865a:	96 4f       	sbci	r25, 0xF6	; 246
    865c:	fc 01       	movw	r30, r24
    865e:	e5 5a       	subi	r30, 0xA5	; 165
    8660:	ff 4f       	sbci	r31, 0xFF	; 255
    8662:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8664:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    8668:	3f 96       	adiw	r30, 0x0f	; 15
    866a:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    866c:	23 e0       	ldi	r18, 0x03	; 3
    866e:	42 9f       	mul	r20, r18
    8670:	c0 01       	movw	r24, r0
    8672:	11 24       	eor	r1, r1
    8674:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8678:	30 e0       	ldi	r19, 0x00	; 0
    867a:	fc 01       	movw	r30, r24
    867c:	ee 0f       	add	r30, r30
    867e:	ff 1f       	adc	r31, r31
    8680:	e5 5e       	subi	r30, 0xE5	; 229
    8682:	f4 4f       	sbci	r31, 0xF4	; 244
    8684:	31 83       	std	Z+1, r19	; 0x01
    8686:	20 83       	st	Z, r18
    8688:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    868c:	30 e0       	ldi	r19, 0x00	; 0
    868e:	fc 01       	movw	r30, r24
    8690:	ee 0f       	add	r30, r30
    8692:	ff 1f       	adc	r31, r31
    8694:	e3 5e       	subi	r30, 0xE3	; 227
    8696:	f4 4f       	sbci	r31, 0xF4	; 244
    8698:	31 83       	std	Z+1, r19	; 0x01
    869a:	20 83       	st	Z, r18
    869c:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86a0:	30 e0       	ldi	r19, 0x00	; 0
    86a2:	88 0f       	add	r24, r24
    86a4:	99 1f       	adc	r25, r25
    86a6:	fc 01       	movw	r30, r24
    86a8:	e1 5e       	subi	r30, 0xE1	; 225
    86aa:	f4 4f       	sbci	r31, 0xF4	; 244
    86ac:	31 83       	std	Z+1, r19	; 0x01
    86ae:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    86b0:	4f 5f       	subi	r20, 0xFF	; 255
    86b2:	c6 cf       	rjmp	.-116    	; 0x8640 <_Z18Edited_In_Schedulev+0x5b6>
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    86b4:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    86b8:	81 50       	subi	r24, 0x01	; 1
    86ba:	8f 30       	cpi	r24, 0x0F	; 15
    86bc:	90 f5       	brcc	.+100    	; 0x8722 <_Z18Edited_In_Schedulev+0x698>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    86be:	28 2f       	mov	r18, r24
    86c0:	30 e0       	ldi	r19, 0x00	; 0
    86c2:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    86c6:	22 5e       	subi	r18, 0xE2	; 226
    86c8:	36 4f       	sbci	r19, 0xF6	; 246
    86ca:	f9 01       	movw	r30, r18
    86cc:	e5 5a       	subi	r30, 0xA5	; 165
    86ce:	ff 4f       	sbci	r31, 0xFF	; 255
    86d0:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    86d2:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    86d6:	3f 96       	adiw	r30, 0x0f	; 15
    86d8:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    86da:	93 e0       	ldi	r25, 0x03	; 3
    86dc:	89 9f       	mul	r24, r25
    86de:	90 01       	movw	r18, r0
    86e0:	11 24       	eor	r1, r1
    86e2:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    86e6:	50 e0       	ldi	r21, 0x00	; 0
    86e8:	f9 01       	movw	r30, r18
    86ea:	ee 0f       	add	r30, r30
    86ec:	ff 1f       	adc	r31, r31
    86ee:	e5 5e       	subi	r30, 0xE5	; 229
    86f0:	f4 4f       	sbci	r31, 0xF4	; 244
    86f2:	51 83       	std	Z+1, r21	; 0x01
    86f4:	40 83       	st	Z, r20
    86f6:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    86fa:	50 e0       	ldi	r21, 0x00	; 0
    86fc:	f9 01       	movw	r30, r18
    86fe:	ee 0f       	add	r30, r30
    8700:	ff 1f       	adc	r31, r31
    8702:	e3 5e       	subi	r30, 0xE3	; 227
    8704:	f4 4f       	sbci	r31, 0xF4	; 244
    8706:	51 83       	std	Z+1, r21	; 0x01
    8708:	40 83       	st	Z, r20
    870a:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    870e:	50 e0       	ldi	r21, 0x00	; 0
    8710:	22 0f       	add	r18, r18
    8712:	33 1f       	adc	r19, r19
    8714:	f9 01       	movw	r30, r18
    8716:	e1 5e       	subi	r30, 0xE1	; 225
    8718:	f4 4f       	sbci	r31, 0xF4	; 244
    871a:	51 83       	std	Z+1, r21	; 0x01
    871c:	40 83       	st	Z, r20
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    871e:	8f 5f       	subi	r24, 0xFF	; 255
    8720:	cc cf       	rjmp	.-104    	; 0x86ba <_Z18Edited_In_Schedulev+0x630>
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8722:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8726:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    872a:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    872e:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8732:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8736:	81 30       	cpi	r24, 0x01	; 1
    8738:	09 f0       	breq	.+2      	; 0x873c <_Z18Edited_In_Schedulev+0x6b2>
    873a:	25 c2       	rjmp	.+1098   	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 1//// :");
    873c:	66 ec       	ldi	r22, 0xC6	; 198
    873e:	7d e0       	ldi	r23, 0x0D	; 13
    8740:	86 ec       	ldi	r24, 0xC6	; 198
    8742:	94 e1       	ldi	r25, 0x14	; 20
    8744:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    8748:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    874c:	4a e0       	ldi	r20, 0x0A	; 10
    874e:	50 e0       	ldi	r21, 0x00	; 0
    8750:	86 ec       	ldi	r24, 0xC6	; 198
    8752:	94 e1       	ldi	r25, 0x14	; 20
    8754:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    8758:	86 ec       	ldi	r24, 0xC6	; 198
    875a:	94 e1       	ldi	r25, 0x14	; 20
    875c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    8760:	12 c2       	rjmp	.+1060   	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    8762:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8766:	81 30       	cpi	r24, 0x01	; 1
    8768:	09 f0       	breq	.+2      	; 0x876c <_Z18Edited_In_Schedulev+0x6e2>
    876a:	0d c2       	rjmp	.+1050   	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    876c:	0e 94 3e 33 	call	0x667c	; 0x667c <_Z35Return_Calculated_Previous_Day_Dateh>
    8770:	80 e0       	ldi	r24, 0x00	; 0
    8772:	90 e0       	ldi	r25, 0x00	; 0
    8774:	20 e0       	ldi	r18, 0x00	; 0
    8776:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8778:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    877c:	a9 01       	movw	r20, r18
    877e:	42 5e       	subi	r20, 0xE2	; 226
    8780:	56 4f       	sbci	r21, 0xF6	; 246
    8782:	fa 01       	movw	r30, r20
    8784:	e5 5a       	subi	r30, 0xA5	; 165
    8786:	ff 4f       	sbci	r31, 0xFF	; 255
    8788:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    878a:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    878e:	3f 96       	adiw	r30, 0x0f	; 15
    8790:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8792:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8796:	50 e0       	ldi	r21, 0x00	; 0
    8798:	fc 01       	movw	r30, r24
    879a:	ee 0f       	add	r30, r30
    879c:	ff 1f       	adc	r31, r31
    879e:	e5 5e       	subi	r30, 0xE5	; 229
    87a0:	f4 4f       	sbci	r31, 0xF4	; 244
    87a2:	51 83       	std	Z+1, r21	; 0x01
    87a4:	40 83       	st	Z, r20
    87a6:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    87aa:	50 e0       	ldi	r21, 0x00	; 0
    87ac:	fc 01       	movw	r30, r24
    87ae:	ee 0f       	add	r30, r30
    87b0:	ff 1f       	adc	r31, r31
    87b2:	e3 5e       	subi	r30, 0xE3	; 227
    87b4:	f4 4f       	sbci	r31, 0xF4	; 244
    87b6:	51 83       	std	Z+1, r21	; 0x01
    87b8:	40 83       	st	Z, r20
    87ba:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    87be:	50 e0       	ldi	r21, 0x00	; 0
    87c0:	fc 01       	movw	r30, r24
    87c2:	ee 0f       	add	r30, r30
    87c4:	ff 1f       	adc	r31, r31
    87c6:	e1 5e       	subi	r30, 0xE1	; 225
    87c8:	f4 4f       	sbci	r31, 0xF4	; 244
    87ca:	51 83       	std	Z+1, r21	; 0x01
    87cc:	40 83       	st	Z, r20
    87ce:	2f 5f       	subi	r18, 0xFF	; 255
    87d0:	3f 4f       	sbci	r19, 0xFF	; 255
    87d2:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    87d4:	2f 30       	cpi	r18, 0x0F	; 15
    87d6:	31 05       	cpc	r19, r1
    87d8:	79 f6       	brne	.-98     	; 0x8778 <_Z18Edited_In_Schedulev+0x6ee>
    87da:	cd c1       	rjmp	.+922    	; 0x8b76 <_Z18Edited_In_Schedulev+0xaec>
							_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
						}
						
					}
					
					else if(_sSchedules.Running_Schedule_At > _sSchedules.Back_Up_Running_Scheduler_Number)
    87dc:	90 91 e6 0b 	lds	r25, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    87e0:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    87e4:	89 17       	cp	r24, r25
    87e6:	08 f0       	brcs	.+2      	; 0x87ea <_Z18Edited_In_Schedulev+0x760>
    87e8:	ce c1       	rjmp	.+924    	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    87ea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    87ee:	81 30       	cpi	r24, 0x01	; 1
    87f0:	51 f4       	brne	.+20     	; 0x8806 <_Z18Edited_In_Schedulev+0x77c>
						{
							_kSERAIL_MON_WRITE("my 7");
    87f2:	61 ec       	ldi	r22, 0xC1	; 193
    87f4:	7d e0       	ldi	r23, 0x0D	; 13
    87f6:	86 ec       	ldi	r24, 0xC6	; 198
    87f8:	94 e1       	ldi	r25, 0x14	; 20
    87fa:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    87fe:	86 ec       	ldi	r24, 0xC6	; 198
    8800:	94 e1       	ldi	r25, 0x14	; 20
    8802:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    8806:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    880a:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    880e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8812:	81 30       	cpi	r24, 0x01	; 1
    8814:	51 f4       	brne	.+20     	; 0x882a <_Z18Edited_In_Schedulev+0x7a0>
						{
							_kSERAIL_MON_WRITE("my 8");
    8816:	6c eb       	ldi	r22, 0xBC	; 188
    8818:	7d e0       	ldi	r23, 0x0D	; 13
    881a:	86 ec       	ldi	r24, 0xC6	; 198
    881c:	94 e1       	ldi	r25, 0x14	; 20
    881e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8822:	86 ec       	ldi	r24, 0xC6	; 198
    8824:	94 e1       	ldi	r25, 0x14	; 20
    8826:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    882a:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    882e:	f0 e0       	ldi	r31, 0x00	; 0
    8830:	e7 59       	subi	r30, 0x97	; 151
    8832:	f6 4f       	sbci	r31, 0xF6	; 246
    8834:	90 81       	ld	r25, Z
    8836:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    883a:	98 13       	cpse	r25, r24
    883c:	04 c0       	rjmp	.+8      	; 0x8846 <_Z18Edited_In_Schedulev+0x7bc>
    883e:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8842:	81 11       	cpse	r24, r1
    8844:	41 c0       	rjmp	.+130    	; 0x88c8 <_Z18Edited_In_Schedulev+0x83e>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8846:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    884a:	81 30       	cpi	r24, 0x01	; 1
    884c:	51 f4       	brne	.+20     	; 0x8862 <_Z18Edited_In_Schedulev+0x7d8>
							{
								_kSERAIL_MON_WRITE("my 9");
    884e:	67 eb       	ldi	r22, 0xB7	; 183
    8850:	7d e0       	ldi	r23, 0x0D	; 13
    8852:	86 ec       	ldi	r24, 0xC6	; 198
    8854:	94 e1       	ldi	r25, 0x14	; 20
    8856:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    885a:	86 ec       	ldi	r24, 0xC6	; 198
    885c:	94 e1       	ldi	r25, 0x14	; 20
    885e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    8862:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8866:	88 23       	and	r24, r24
    8868:	09 f4       	brne	.+2      	; 0x886c <_Z18Edited_In_Schedulev+0x7e2>
    886a:	a0 c1       	rjmp	.+832    	; 0x8bac <_Z18Edited_In_Schedulev+0xb22>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    886c:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8870:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8874:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8878:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    887c:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    8880:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8884:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    8888:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    888c:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    8890:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8894:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8898:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    889c:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    88a0:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    88a4:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    88a8:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    88ac:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    88b0:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    88b4:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    88b8:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    88bc:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    88c0:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    88c4:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    88c8:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    88cc:	82 30       	cpi	r24, 0x02	; 2
    88ce:	08 f4       	brcc	.+2      	; 0x88d2 <_Z18Edited_In_Schedulev+0x848>
    88d0:	92 c0       	rjmp	.+292    	; 0x89f6 <_Z18Edited_In_Schedulev+0x96c>
    88d2:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    88d4:	84 2f       	mov	r24, r20
    88d6:	90 e0       	ldi	r25, 0x00	; 0
    88d8:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    88dc:	30 e0       	ldi	r19, 0x00	; 0
    88de:	21 50       	subi	r18, 0x01	; 1
    88e0:	31 09       	sbc	r19, r1
    88e2:	82 17       	cp	r24, r18
    88e4:	93 07       	cpc	r25, r19
    88e6:	84 f5       	brge	.+96     	; 0x8948 <_Z18Edited_In_Schedulev+0x8be>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    88e8:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    88ec:	82 5e       	subi	r24, 0xE2	; 226
    88ee:	96 4f       	sbci	r25, 0xF6	; 246
    88f0:	fc 01       	movw	r30, r24
    88f2:	e5 5a       	subi	r30, 0xA5	; 165
    88f4:	ff 4f       	sbci	r31, 0xFF	; 255
    88f6:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    88f8:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    88fc:	3f 96       	adiw	r30, 0x0f	; 15
    88fe:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    8900:	23 e0       	ldi	r18, 0x03	; 3
    8902:	42 9f       	mul	r20, r18
    8904:	c0 01       	movw	r24, r0
    8906:	11 24       	eor	r1, r1
    8908:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    890c:	30 e0       	ldi	r19, 0x00	; 0
    890e:	fc 01       	movw	r30, r24
    8910:	ee 0f       	add	r30, r30
    8912:	ff 1f       	adc	r31, r31
    8914:	e5 5e       	subi	r30, 0xE5	; 229
    8916:	f4 4f       	sbci	r31, 0xF4	; 244
    8918:	31 83       	std	Z+1, r19	; 0x01
    891a:	20 83       	st	Z, r18
    891c:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8920:	30 e0       	ldi	r19, 0x00	; 0
    8922:	fc 01       	movw	r30, r24
    8924:	ee 0f       	add	r30, r30
    8926:	ff 1f       	adc	r31, r31
    8928:	e3 5e       	subi	r30, 0xE3	; 227
    892a:	f4 4f       	sbci	r31, 0xF4	; 244
    892c:	31 83       	std	Z+1, r19	; 0x01
    892e:	20 83       	st	Z, r18
    8930:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8934:	30 e0       	ldi	r19, 0x00	; 0
    8936:	88 0f       	add	r24, r24
    8938:	99 1f       	adc	r25, r25
    893a:	fc 01       	movw	r30, r24
    893c:	e1 5e       	subi	r30, 0xE1	; 225
    893e:	f4 4f       	sbci	r31, 0xF4	; 244
    8940:	31 83       	std	Z+1, r19	; 0x01
    8942:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8944:	4f 5f       	subi	r20, 0xFF	; 255
    8946:	c6 cf       	rjmp	.-116    	; 0x88d4 <_Z18Edited_In_Schedulev+0x84a>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8948:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    894c:	81 50       	subi	r24, 0x01	; 1
    894e:	8f 30       	cpi	r24, 0x0F	; 15
    8950:	90 f5       	brcc	.+100    	; 0x89b6 <_Z18Edited_In_Schedulev+0x92c>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8952:	28 2f       	mov	r18, r24
    8954:	30 e0       	ldi	r19, 0x00	; 0
    8956:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    895a:	22 5e       	subi	r18, 0xE2	; 226
    895c:	36 4f       	sbci	r19, 0xF6	; 246
    895e:	f9 01       	movw	r30, r18
    8960:	e5 5a       	subi	r30, 0xA5	; 165
    8962:	ff 4f       	sbci	r31, 0xFF	; 255
    8964:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8966:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    896a:	3f 96       	adiw	r30, 0x0f	; 15
    896c:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    896e:	93 e0       	ldi	r25, 0x03	; 3
    8970:	89 9f       	mul	r24, r25
    8972:	90 01       	movw	r18, r0
    8974:	11 24       	eor	r1, r1
    8976:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    897a:	50 e0       	ldi	r21, 0x00	; 0
    897c:	f9 01       	movw	r30, r18
    897e:	ee 0f       	add	r30, r30
    8980:	ff 1f       	adc	r31, r31
    8982:	e5 5e       	subi	r30, 0xE5	; 229
    8984:	f4 4f       	sbci	r31, 0xF4	; 244
    8986:	51 83       	std	Z+1, r21	; 0x01
    8988:	40 83       	st	Z, r20
    898a:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    898e:	50 e0       	ldi	r21, 0x00	; 0
    8990:	f9 01       	movw	r30, r18
    8992:	ee 0f       	add	r30, r30
    8994:	ff 1f       	adc	r31, r31
    8996:	e3 5e       	subi	r30, 0xE3	; 227
    8998:	f4 4f       	sbci	r31, 0xF4	; 244
    899a:	51 83       	std	Z+1, r21	; 0x01
    899c:	40 83       	st	Z, r20
    899e:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    89a2:	50 e0       	ldi	r21, 0x00	; 0
    89a4:	22 0f       	add	r18, r18
    89a6:	33 1f       	adc	r19, r19
    89a8:	f9 01       	movw	r30, r18
    89aa:	e1 5e       	subi	r30, 0xE1	; 225
    89ac:	f4 4f       	sbci	r31, 0xF4	; 244
    89ae:	51 83       	std	Z+1, r21	; 0x01
    89b0:	40 83       	st	Z, r20
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    89b2:	8f 5f       	subi	r24, 0xFF	; 255
    89b4:	cc cf       	rjmp	.-104    	; 0x894e <_Z18Edited_In_Schedulev+0x8c4>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    89b6:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    89ba:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    89be:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    89c2:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    89c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    89ca:	81 30       	cpi	r24, 0x01	; 1
    89cc:	09 f0       	breq	.+2      	; 0x89d0 <_Z18Edited_In_Schedulev+0x946>
    89ce:	db c0       	rjmp	.+438    	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 4//// :");
    89d0:	65 e8       	ldi	r22, 0x85	; 133
    89d2:	7d e0       	ldi	r23, 0x0D	; 13
    89d4:	86 ec       	ldi	r24, 0xC6	; 198
    89d6:	94 e1       	ldi	r25, 0x14	; 20
    89d8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    89dc:	86 ec       	ldi	r24, 0xC6	; 198
    89de:	94 e1       	ldi	r25, 0x14	; 20
    89e0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    89e4:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    89e8:	4a e0       	ldi	r20, 0x0A	; 10
    89ea:	50 e0       	ldi	r21, 0x00	; 0
    89ec:	86 ec       	ldi	r24, 0xC6	; 198
    89ee:	94 e1       	ldi	r25, 0x14	; 20
    89f0:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
    89f4:	c8 c0       	rjmp	.+400    	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    89f6:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    89fa:	81 30       	cpi	r24, 0x01	; 1
    89fc:	09 f0       	breq	.+2      	; 0x8a00 <_Z18Edited_In_Schedulev+0x976>
    89fe:	c3 c0       	rjmp	.+390    	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    8a00:	0e 94 3e 33 	call	0x667c	; 0x667c <_Z35Return_Calculated_Previous_Day_Dateh>
    8a04:	80 e0       	ldi	r24, 0x00	; 0
    8a06:	90 e0       	ldi	r25, 0x00	; 0
    8a08:	20 e0       	ldi	r18, 0x00	; 0
    8a0a:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8a0c:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a10:	a9 01       	movw	r20, r18
    8a12:	42 5e       	subi	r20, 0xE2	; 226
    8a14:	56 4f       	sbci	r21, 0xF6	; 246
    8a16:	fa 01       	movw	r30, r20
    8a18:	e5 5a       	subi	r30, 0xA5	; 165
    8a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    8a1c:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    8a1e:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8a22:	3f 96       	adiw	r30, 0x0f	; 15
    8a24:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8a26:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a2a:	50 e0       	ldi	r21, 0x00	; 0
    8a2c:	fc 01       	movw	r30, r24
    8a2e:	ee 0f       	add	r30, r30
    8a30:	ff 1f       	adc	r31, r31
    8a32:	e5 5e       	subi	r30, 0xE5	; 229
    8a34:	f4 4f       	sbci	r31, 0xF4	; 244
    8a36:	51 83       	std	Z+1, r21	; 0x01
    8a38:	40 83       	st	Z, r20
    8a3a:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a3e:	50 e0       	ldi	r21, 0x00	; 0
    8a40:	fc 01       	movw	r30, r24
    8a42:	ee 0f       	add	r30, r30
    8a44:	ff 1f       	adc	r31, r31
    8a46:	e3 5e       	subi	r30, 0xE3	; 227
    8a48:	f4 4f       	sbci	r31, 0xF4	; 244
    8a4a:	51 83       	std	Z+1, r21	; 0x01
    8a4c:	40 83       	st	Z, r20
    8a4e:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a52:	50 e0       	ldi	r21, 0x00	; 0
    8a54:	fc 01       	movw	r30, r24
    8a56:	ee 0f       	add	r30, r30
    8a58:	ff 1f       	adc	r31, r31
    8a5a:	e1 5e       	subi	r30, 0xE1	; 225
    8a5c:	f4 4f       	sbci	r31, 0xF4	; 244
    8a5e:	51 83       	std	Z+1, r21	; 0x01
    8a60:	40 83       	st	Z, r20
    8a62:	2f 5f       	subi	r18, 0xFF	; 255
    8a64:	3f 4f       	sbci	r19, 0xFF	; 255
    8a66:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8a68:	2f 30       	cpi	r18, 0x0F	; 15
    8a6a:	31 05       	cpc	r19, r1
    8a6c:	79 f6       	brne	.-98     	; 0x8a0c <_Z18Edited_In_Schedulev+0x982>
    8a6e:	83 c0       	rjmp	.+262    	; 0x8b76 <_Z18Edited_In_Schedulev+0xaec>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8a70:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8a74:	81 11       	cpse	r24, r1
    8a76:	88 c0       	rjmp	.+272    	; 0x8b88 <_Z18Edited_In_Schedulev+0xafe>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8a78:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8a7c:	88 23       	and	r24, r24
    8a7e:	09 f4       	brne	.+2      	; 0x8a82 <_Z18Edited_In_Schedulev+0x9f8>
    8a80:	83 c0       	rjmp	.+262    	; 0x8b88 <_Z18Edited_In_Schedulev+0xafe>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8a82:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8a86:	81 30       	cpi	r24, 0x01	; 1
    8a88:	51 f4       	brne	.+20     	; 0x8a9e <_Z18Edited_In_Schedulev+0xa14>
		{
			_kSERAIL_MON_WRITE("my 14");
    8a8a:	6f e7       	ldi	r22, 0x7F	; 127
    8a8c:	7d e0       	ldi	r23, 0x0D	; 13
    8a8e:	86 ec       	ldi	r24, 0xC6	; 198
    8a90:	94 e1       	ldi	r25, 0x14	; 20
    8a92:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    8a96:	86 ec       	ldi	r24, 0xC6	; 198
    8a98:	94 e1       	ldi	r25, 0x14	; 20
    8a9a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8a9e:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8aa2:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8aa6:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    8aaa:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8aae:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    8ab2:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    8ab6:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    8aba:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8abe:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8ac2:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8ac6:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8aca:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8ace:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8ad2:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8ad6:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    8ada:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8ade:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8ae2:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    8ae6:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    8aea:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8aee:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
		}
		
		Return_Calculated_Previous_Day_Date(1);
    8af2:	81 e0       	ldi	r24, 0x01	; 1
    8af4:	0e 94 3e 33 	call	0x667c	; 0x667c <_Z35Return_Calculated_Previous_Day_Dateh>
    8af8:	80 e0       	ldi	r24, 0x00	; 0
    8afa:	90 e0       	ldi	r25, 0x00	; 0
    8afc:	20 e0       	ldi	r18, 0x00	; 0
    8afe:	30 e0       	ldi	r19, 0x00	; 0
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    8b00:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b04:	a9 01       	movw	r20, r18
    8b06:	42 5e       	subi	r20, 0xE2	; 226
    8b08:	56 4f       	sbci	r21, 0xF6	; 246
    8b0a:	fa 01       	movw	r30, r20
    8b0c:	e5 5a       	subi	r30, 0xA5	; 165
    8b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    8b10:	60 83       	st	Z, r22
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    8b12:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8b16:	3f 96       	adiw	r30, 0x0f	; 15
    8b18:	60 83       	st	Z, r22
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8b1a:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b1e:	50 e0       	ldi	r21, 0x00	; 0
    8b20:	fc 01       	movw	r30, r24
    8b22:	ee 0f       	add	r30, r30
    8b24:	ff 1f       	adc	r31, r31
    8b26:	e5 5e       	subi	r30, 0xE5	; 229
    8b28:	f4 4f       	sbci	r31, 0xF4	; 244
    8b2a:	51 83       	std	Z+1, r21	; 0x01
    8b2c:	40 83       	st	Z, r20
    8b2e:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b32:	50 e0       	ldi	r21, 0x00	; 0
    8b34:	fc 01       	movw	r30, r24
    8b36:	ee 0f       	add	r30, r30
    8b38:	ff 1f       	adc	r31, r31
    8b3a:	e3 5e       	subi	r30, 0xE3	; 227
    8b3c:	f4 4f       	sbci	r31, 0xF4	; 244
    8b3e:	51 83       	std	Z+1, r21	; 0x01
    8b40:	40 83       	st	Z, r20
    8b42:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b46:	50 e0       	ldi	r21, 0x00	; 0
    8b48:	fc 01       	movw	r30, r24
    8b4a:	ee 0f       	add	r30, r30
    8b4c:	ff 1f       	adc	r31, r31
    8b4e:	e1 5e       	subi	r30, 0xE1	; 225
    8b50:	f4 4f       	sbci	r31, 0xF4	; 244
    8b52:	51 83       	std	Z+1, r21	; 0x01
    8b54:	40 83       	st	Z, r20
    8b56:	2f 5f       	subi	r18, 0xFF	; 255
    8b58:	3f 4f       	sbci	r19, 0xFF	; 255
    8b5a:	03 96       	adiw	r24, 0x03	; 3
			_sSchedules.Running_Tank[tank_number] = _kOFF;
		}
		
		Return_Calculated_Previous_Day_Date(1);
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    8b5c:	2e 30       	cpi	r18, 0x0E	; 14
    8b5e:	31 05       	cpc	r19, r1
    8b60:	79 f6       	brne	.-98     	; 0x8b00 <_Z18Edited_In_Schedulev+0xa76>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8b62:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8b66:	81 30       	cpi	r24, 0x01	; 1
    8b68:	31 f4       	brne	.+12     	; 0x8b76 <_Z18Edited_In_Schedulev+0xaec>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8b6a:	6a e3       	ldi	r22, 0x3A	; 58
    8b6c:	7d e0       	ldi	r23, 0x0D	; 13
    8b6e:	86 ec       	ldi	r24, 0xC6	; 198
    8b70:	94 e1       	ldi	r25, 0x14	; 20
    8b72:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    8b76:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b7a:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8b7e:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8b82:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8b86:	15 c0       	rjmp	.+42     	; 0x8bb2 <_Z18Edited_In_Schedulev+0xb28>
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8b88:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8b8c:	81 11       	cpse	r24, r1
    8b8e:	fb cf       	rjmp	.-10     	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
    8b90:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8b94:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    8b98:	89 2b       	or	r24, r25
    8b9a:	09 f4       	brne	.+2      	; 0x8b9e <_Z18Edited_In_Schedulev+0xb14>
    8b9c:	72 cf       	rjmp	.-284    	; 0x8a82 <_Z18Edited_In_Schedulev+0x9f8>
    8b9e:	f3 cf       	rjmp	.-26     	; 0x8b86 <_Z18Edited_In_Schedulev+0xafc>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
						}
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8ba0:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8ba4:	d7 cb       	rjmp	.-2130   	; 0x8354 <_Z18Edited_In_Schedulev+0x2ca>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8ba6:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8baa:	1a cd       	rjmp	.-1484   	; 0x85e0 <_Z18Edited_In_Schedulev+0x556>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8bac:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8bb0:	61 ce       	rjmp	.-830    	; 0x8874 <_Z18Edited_In_Schedulev+0x7ea>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8bb2:	df 91       	pop	r29
    8bb4:	cf 91       	pop	r28
    8bb6:	1f 91       	pop	r17
    8bb8:	0f 91       	pop	r16
    8bba:	ff 90       	pop	r15
    8bbc:	ef 90       	pop	r14
    8bbe:	08 95       	ret

00008bc0 <_Z18Next_Day_Calculatehh>:
		return 0;
	}
}

unsigned char Next_Day_Calculate(unsigned char date,unsigned char month)
{
    8bc0:	1f 93       	push	r17
    8bc2:	cf 93       	push	r28
    8bc4:	df 93       	push	r29
    8bc6:	c8 2f       	mov	r28, r24
    8bc8:	16 2f       	mov	r17, r22
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8bca:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8bce:	81 30       	cpi	r24, 0x01	; 1
    8bd0:	89 f4       	brne	.+34     	; 0x8bf4 <_Z18Next_Day_Calculatehh+0x34>
	{
		_kSERAIL_MON_WRITE("Current date 1: ");
    8bd2:	6f e7       	ldi	r22, 0x7F	; 127
    8bd4:	7c e0       	ldi	r23, 0x0C	; 12
    8bd6:	86 ec       	ldi	r24, 0xC6	; 198
    8bd8:	94 e1       	ldi	r25, 0x14	; 20
    8bda:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8bde:	4a e0       	ldi	r20, 0x0A	; 10
    8be0:	50 e0       	ldi	r21, 0x00	; 0
    8be2:	6c 2f       	mov	r22, r28
    8be4:	86 ec       	ldi	r24, 0xC6	; 198
    8be6:	94 e1       	ldi	r25, 0x14	; 20
    8be8:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8bec:	86 ec       	ldi	r24, 0xC6	; 198
    8bee:	94 e1       	ldi	r25, 0x14	; 20
    8bf0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	
	date = date + _sSchedules.Days_In_Between_Schedules;
    8bf4:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8bf8:	c8 0f       	add	r28, r24
	unsigned char c_month = month;
	unsigned char year = _sRuble_Parameters.Update_Local_Date[2];
    8bfa:	d0 91 f4 13 	lds	r29, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8bfe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8c02:	81 30       	cpi	r24, 0x01	; 1
    8c04:	19 f5       	brne	.+70     	; 0x8c4c <_Z18Next_Day_Calculatehh+0x8c>
	{
		_kSERAIL_MON_WRITE("Current date 2: ");
    8c06:	6e e6       	ldi	r22, 0x6E	; 110
    8c08:	7c e0       	ldi	r23, 0x0C	; 12
    8c0a:	86 ec       	ldi	r24, 0xC6	; 198
    8c0c:	94 e1       	ldi	r25, 0x14	; 20
    8c0e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8c12:	4a e0       	ldi	r20, 0x0A	; 10
    8c14:	50 e0       	ldi	r21, 0x00	; 0
    8c16:	6c 2f       	mov	r22, r28
    8c18:	86 ec       	ldi	r24, 0xC6	; 198
    8c1a:	94 e1       	ldi	r25, 0x14	; 20
    8c1c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8c20:	86 ec       	ldi	r24, 0xC6	; 198
    8c22:	94 e1       	ldi	r25, 0x14	; 20
    8c24:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("diays in beteweeen .............: ");
    8c28:	6b e4       	ldi	r22, 0x4B	; 75
    8c2a:	7c e0       	ldi	r23, 0x0C	; 12
    8c2c:	86 ec       	ldi	r24, 0xC6	; 198
    8c2e:	94 e1       	ldi	r25, 0x14	; 20
    8c30:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
    8c34:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8c38:	4a e0       	ldi	r20, 0x0A	; 10
    8c3a:	50 e0       	ldi	r21, 0x00	; 0
    8c3c:	86 ec       	ldi	r24, 0xC6	; 198
    8c3e:	94 e1       	ldi	r25, 0x14	; 20
    8c40:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8c44:	86 ec       	ldi	r24, 0xC6	; 198
    8c46:	94 e1       	ldi	r25, 0x14	; 20
    8c48:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	
	switch(month)
    8c4c:	81 2f       	mov	r24, r17
    8c4e:	90 e0       	ldi	r25, 0x00	; 0
    8c50:	fc 01       	movw	r30, r24
    8c52:	31 97       	sbiw	r30, 0x01	; 1
    8c54:	ec 30       	cpi	r30, 0x0C	; 12
    8c56:	f1 05       	cpc	r31, r1
    8c58:	08 f0       	brcs	.+2      	; 0x8c5c <_Z18Next_Day_Calculatehh+0x9c>
    8c5a:	56 c0       	rjmp	.+172    	; 0x8d08 <_Z18Next_Day_Calculatehh+0x148>
    8c5c:	88 27       	eor	r24, r24
    8c5e:	ef 52       	subi	r30, 0x2F	; 47
    8c60:	ff 4f       	sbci	r31, 0xFF	; 255
    8c62:	8f 4f       	sbci	r24, 0xFF	; 255
    8c64:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
    8c68:	8d 2f       	mov	r24, r29
    8c6a:	83 70       	andi	r24, 0x03	; 3
			
		}break;
		
		case _eFEB:
		{
			if(year%4)
    8c6c:	61 f0       	breq	.+24     	; 0x8c86 <_Z18Next_Day_Calculatehh+0xc6>
			{
				if(date > 28)
    8c6e:	cd 31       	cpi	r28, 0x1D	; 29
    8c70:	08 f0       	brcs	.+2      	; 0x8c74 <_Z18Next_Day_Calculatehh+0xb4>
    8c72:	4a c0       	rjmp	.+148    	; 0x8d08 <_Z18Next_Day_Calculatehh+0x148>
					
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >=  date)
    8c74:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8c78:	8c 17       	cp	r24, r28
    8c7a:	08 f4       	brcc	.+2      	; 0x8c7e <_Z18Next_Day_Calculatehh+0xbe>
    8c7c:	45 c0       	rjmp	.+138    	; 0x8d08 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8c7e:	c8 13       	cpse	r28, r24
    8c80:	0b c0       	rjmp	.+22     	; 0x8c98 <_Z18Next_Day_Calculatehh+0xd8>
					{
						return 1;
    8c82:	81 e0       	ldi	r24, 0x01	; 1
    8c84:	42 c0       	rjmp	.+132    	; 0x8d0a <_Z18Next_Day_Calculatehh+0x14a>
					}
				}
			}
			else
			{
				if(date > 29)
    8c86:	ce 31       	cpi	r28, 0x1E	; 30
    8c88:	08 f0       	brcs	.+2      	; 0x8c8c <_Z18Next_Day_Calculatehh+0xcc>
    8c8a:	3f c0       	rjmp	.+126    	; 0x8d0a <_Z18Next_Day_Calculatehh+0x14a>
						}
					}
				}
				else
				{
					if( _sRuble_Parameters.Update_Local_Date[0] >=   date)
    8c8c:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8c90:	9c 17       	cp	r25, r28
    8c92:	d8 f1       	brcs	.+118    	; 0x8d0a <_Z18Next_Day_Calculatehh+0x14a>
					{
						if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8c94:	c9 17       	cp	r28, r25
    8c96:	a9 f3       	breq	.-22     	; 0x8c82 <_Z18Next_Day_Calculatehh+0xc2>
					{
						return 1;
					}
					else
					{
						return 2;
    8c98:	82 e0       	ldi	r24, 0x02	; 2
    8c9a:	37 c0       	rjmp	.+110    	; 0x8d0a <_Z18Next_Day_Calculatehh+0x14a>
			
		}break;
		
		case _eMARCH:
		{
			if(date > 31)
    8c9c:	c0 32       	cpi	r28, 0x20	; 32
    8c9e:	a0 f5       	brcc	.+104    	; 0x8d08 <_Z18Next_Day_Calculatehh+0x148>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >= date)
    8ca0:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8ca4:	8c 17       	cp	r24, r28
    8ca6:	80 f1       	brcs	.+96     	; 0x8d08 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ca8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8cac:	81 30       	cpi	r24, 0x01	; 1
    8cae:	19 f5       	brne	.+70     	; 0x8cf6 <_Z18Next_Day_Calculatehh+0x136>
					{
						_kSERAIL_MON_WRITE("Required date : ");
    8cb0:	6a e3       	ldi	r22, 0x3A	; 58
    8cb2:	7c e0       	ldi	r23, 0x0C	; 12
    8cb4:	86 ec       	ldi	r24, 0xC6	; 198
    8cb6:	94 e1       	ldi	r25, 0x14	; 20
    8cb8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(date);
    8cbc:	4a e0       	ldi	r20, 0x0A	; 10
    8cbe:	50 e0       	ldi	r21, 0x00	; 0
    8cc0:	6c 2f       	mov	r22, r28
    8cc2:	86 ec       	ldi	r24, 0xC6	; 198
    8cc4:	94 e1       	ldi	r25, 0x14	; 20
    8cc6:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8cca:	86 ec       	ldi	r24, 0xC6	; 198
    8ccc:	94 e1       	ldi	r25, 0x14	; 20
    8cce:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						
						_kSERAIL_MON_WRITE("Current date : ");
    8cd2:	6a e2       	ldi	r22, 0x2A	; 42
    8cd4:	7c e0       	ldi	r23, 0x0C	; 12
    8cd6:	86 ec       	ldi	r24, 0xC6	; 198
    8cd8:	94 e1       	ldi	r25, 0x14	; 20
    8cda:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    8cde:	4a e0       	ldi	r20, 0x0A	; 10
    8ce0:	50 e0       	ldi	r21, 0x00	; 0
    8ce2:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8ce6:	86 ec       	ldi	r24, 0xC6	; 198
    8ce8:	94 e1       	ldi	r25, 0x14	; 20
    8cea:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8cee:	86 ec       	ldi	r24, 0xC6	; 198
    8cf0:	94 e1       	ldi	r25, 0x14	; 20
    8cf2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					
					
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8cf6:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8cfa:	c1 cf       	rjmp	.-126    	; 0x8c7e <_Z18Next_Day_Calculatehh+0xbe>
			
		}break;
		
		case _eNOV:
		{
			if(date > 30)
    8cfc:	cf 31       	cpi	r28, 0x1F	; 31
    8cfe:	20 f4       	brcc	.+8      	; 0x8d08 <_Z18Next_Day_Calculatehh+0x148>
    8d00:	b9 cf       	rjmp	.-142    	; 0x8c74 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
		case _eDEC:
		{
			if(date > 31)
    8d02:	c0 32       	cpi	r28, 0x20	; 32
    8d04:	08 f4       	brcc	.+2      	; 0x8d08 <_Z18Next_Day_Calculatehh+0x148>
    8d06:	b6 cf       	rjmp	.-148    	; 0x8c74 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
	}
	
	return 0;
    8d08:	80 e0       	ldi	r24, 0x00	; 0
	
}
    8d0a:	df 91       	pop	r29
    8d0c:	cf 91       	pop	r28
    8d0e:	1f 91       	pop	r17
    8d10:	08 95       	ret

00008d12 <_Z22Do_Not_Repeat_Schedulev>:
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}

unsigned char Do_Not_Repeat_Schedule(void)
{
    8d12:	cf 93       	push	r28
	unsigned char check_for_repeat;
	
	if(_sSchedules.Cyclic_Schedule_Flag != _kSET)
    8d14:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    8d18:	81 30       	cpi	r24, 0x01	; 1
    8d1a:	09 f4       	brne	.+2      	; 0x8d1e <_Z22Do_Not_Repeat_Schedulev+0xc>
    8d1c:	4b c0       	rjmp	.+150    	; 0x8db4 <_Z22Do_Not_Repeat_Schedulev+0xa2>
	{
		if(_sSchedules.Which_Sheduler_Is_Running)
    8d1e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d22:	88 23       	and	r24, r24
    8d24:	09 f4       	brne	.+2      	; 0x8d28 <_Z22Do_Not_Repeat_Schedulev+0x16>
    8d26:	46 c0       	rjmp	.+140    	; 0x8db4 <_Z22Do_Not_Repeat_Schedulev+0xa2>
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8d28:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d2c:	81 30       	cpi	r24, 0x01	; 1
    8d2e:	29 f4       	brne	.+10     	; 0x8d3a <_Z22Do_Not_Repeat_Schedulev+0x28>
			{
				
				check_for_repeat = Next_Day_Calculate(_sSchedules.Started_Date,_sSchedules.Started_Month);
    8d30:	60 91 2b 09 	lds	r22, 0x092B	; 0x80092b <_sSchedules+0xd>
    8d34:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8d38:	04 c0       	rjmp	.+8      	; 0x8d42 <_Z22Do_Not_Repeat_Schedulev+0x30>
			}
			else
			{
				check_for_repeat = Next_Day_Calculate(_sSchedules.First_Schedule_Irrigated_Date,_sSchedules.First_Schedule_Irrigated_Month);
    8d3a:	60 91 ef 0b 	lds	r22, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8d3e:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8d42:	3e df       	rcall	.-388    	; 0x8bc0 <_Z18Next_Day_Calculatehh>
			}
			
			if(check_for_repeat == 1)
    8d44:	81 30       	cpi	r24, 0x01	; 1
    8d46:	09 f0       	breq	.+2      	; 0x8d4a <_Z22Do_Not_Repeat_Schedulev+0x38>
    8d48:	53 c0       	rjmp	.+166    	; 0x8df0 <_Z22Do_Not_Repeat_Schedulev+0xde>
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8d4a:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8d4e:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8d52:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8d56:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8d5a:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    8d5e:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    8d62:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    8d66:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    8d6a:	48 17       	cp	r20, r24
    8d6c:	59 07       	cpc	r21, r25
    8d6e:	6a 07       	cpc	r22, r26
    8d70:	7b 07       	cpc	r23, r27
    8d72:	00 f5       	brcc	.+64     	; 0x8db4 <_Z22Do_Not_Repeat_Schedulev+0xa2>
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8d74:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d78:	81 30       	cpi	r24, 0x01	; 1
    8d7a:	f1 f4       	brne	.+60     	; 0x8db8 <_Z22Do_Not_Repeat_Schedulev+0xa6>
						/*for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
						}*/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d7c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8d80:	81 30       	cpi	r24, 0x01	; 1
    8d82:	51 f4       	brne	.+20     	; 0x8d98 <_Z22Do_Not_Repeat_Schedulev+0x86>
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1 ##############################");
    8d84:	62 e0       	ldi	r22, 0x02	; 2
    8d86:	7d e0       	ldi	r23, 0x0D	; 13
    8d88:	86 ec       	ldi	r24, 0xC6	; 198
    8d8a:	94 e1       	ldi	r25, 0x14	; 20
    8d8c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8d90:	86 ec       	ldi	r24, 0xC6	; 198
    8d92:	94 e1       	ldi	r25, 0x14	; 20
    8d94:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
    8d98:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d9c:	f0 e0       	ldi	r31, 0x00	; 0
    8d9e:	ee 0f       	add	r30, r30
    8da0:	ff 1f       	adc	r31, r31
    8da2:	e4 5e       	subi	r30, 0xE4	; 228
    8da4:	f6 4f       	sbci	r31, 0xF6	; 246
    8da6:	87 8d       	ldd	r24, Z+31	; 0x1f
    8da8:	90 a1       	ldd	r25, Z+32	; 0x20
    8daa:	01 96       	adiw	r24, 0x01	; 1
    8dac:	90 93 27 09 	sts	0x0927, r25	; 0x800927 <_sSchedules+0x9>
    8db0:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <_sSchedules+0x8>
						return 0;
    8db4:	c0 e0       	ldi	r28, 0x00	; 0
    8db6:	3f c0       	rjmp	.+126    	; 0x8e36 <_Z22Do_Not_Repeat_Schedulev+0x124>
			
			if(check_for_repeat == 1)
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8db8:	80 e0       	ldi	r24, 0x00	; 0
    8dba:	90 e0       	ldi	r25, 0x00	; 0
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8dbc:	40 91 ee 0b 	lds	r20, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8dc0:	9c 01       	movw	r18, r24
    8dc2:	22 5e       	subi	r18, 0xE2	; 226
    8dc4:	36 4f       	sbci	r19, 0xF6	; 246
    8dc6:	f9 01       	movw	r30, r18
    8dc8:	e5 5a       	subi	r30, 0xA5	; 165
    8dca:	ff 4f       	sbci	r31, 0xFF	; 255
    8dcc:	40 83       	st	Z, r20
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8dce:	40 91 ef 0b 	lds	r20, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8dd2:	3f 96       	adiw	r30, 0x0f	; 15
    8dd4:	40 83       	st	Z, r20
    8dd6:	01 96       	adiw	r24, 0x01	; 1
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
						return 0;
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8dd8:	8f 30       	cpi	r24, 0x0F	; 15
    8dda:	91 05       	cpc	r25, r1
    8ddc:	79 f7       	brne	.-34     	; 0x8dbc <_Z22Do_Not_Repeat_Schedulev+0xaa>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8dde:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8de2:	c1 30       	cpi	r28, 0x01	; 1
    8de4:	11 f0       	breq	.+4      	; 0x8dea <_Z22Do_Not_Repeat_Schedulev+0xd8>
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
							_kSERIAL_MON_CLEAR();
						}
					}
					
					return 1;
    8de6:	c1 e0       	ldi	r28, 0x01	; 1
    8de8:	26 c0       	rjmp	.+76     	; 0x8e36 <_Z22Do_Not_Repeat_Schedulev+0x124>
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
    8dea:	68 ec       	ldi	r22, 0xC8	; 200
    8dec:	7c e0       	ldi	r23, 0x0C	; 12
    8dee:	1b c0       	rjmp	.+54     	; 0x8e26 <_Z22Do_Not_Repeat_Schedulev+0x114>
					}
					
					return 1;
				}
			}
			if(check_for_repeat == 2)
    8df0:	82 30       	cpi	r24, 0x02	; 2
    8df2:	01 f7       	brne	.-64     	; 0x8db4 <_Z22Do_Not_Repeat_Schedulev+0xa2>
    8df4:	80 e0       	ldi	r24, 0x00	; 0
    8df6:	90 e0       	ldi	r25, 0x00	; 0
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8df8:	40 91 ee 0b 	lds	r20, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8dfc:	9c 01       	movw	r18, r24
    8dfe:	22 5e       	subi	r18, 0xE2	; 226
    8e00:	36 4f       	sbci	r19, 0xF6	; 246
    8e02:	f9 01       	movw	r30, r18
    8e04:	e5 5a       	subi	r30, 0xA5	; 165
    8e06:	ff 4f       	sbci	r31, 0xFF	; 255
    8e08:	40 83       	st	Z, r20
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8e0a:	40 91 ef 0b 	lds	r20, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8e0e:	3f 96       	adiw	r30, 0x0f	; 15
    8e10:	40 83       	st	Z, r20
    8e12:	01 96       	adiw	r24, 0x01	; 1
					return 1;
				}
			}
			if(check_for_repeat == 2)
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8e14:	8f 30       	cpi	r24, 0x0F	; 15
    8e16:	91 05       	cpc	r25, r1
    8e18:	79 f7       	brne	.-34     	; 0x8df8 <_Z22Do_Not_Repeat_Schedulev+0xe6>
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e1a:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8e1e:	c1 30       	cpi	r28, 0x01	; 1
    8e20:	11 f7       	brne	.-60     	; 0x8de6 <_Z22Do_Not_Repeat_Schedulev+0xd4>
				{
					_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 2 ##############################");
    8e22:	60 e9       	ldi	r22, 0x90	; 144
    8e24:	7c e0       	ldi	r23, 0x0C	; 12
    8e26:	86 ec       	ldi	r24, 0xC6	; 198
    8e28:	94 e1       	ldi	r25, 0x14	; 20
    8e2a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8e2e:	86 ec       	ldi	r24, 0xC6	; 198
    8e30:	94 e1       	ldi	r25, 0x14	; 20
    8e32:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	else
	{
		return 0;
	}
}
    8e36:	8c 2f       	mov	r24, r28
    8e38:	cf 91       	pop	r28
    8e3a:	08 95       	ret

00008e3c <_Z34Check_Time_For_Schedule_To_Triggerhh>:
	return 0;
	
}

unsigned char Check_Time_For_Schedule_To_Trigger(unsigned char Case_Number, unsigned char check_days)
{
    8e3c:	cf 93       	push	r28
    8e3e:	df 93       	push	r29
    8e40:	c8 2f       	mov	r28, r24
    8e42:	d6 2f       	mov	r29, r22
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;   /* turn on the last schedule or new schedule */
    8e44:	81 e0       	ldi	r24, 0x01	; 1
    8e46:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
	
	if(_sSchedules.Which_Sheduler_Is_Running == _kRESET)
    8e4a:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8e4e:	91 11       	cpse	r25, r1
    8e50:	06 c0       	rjmp	.+12     	; 0x8e5e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22>
	{
		//_kSERAIL_MON_WRITE("sc enter 28");
		_sSchedules.Which_Sheduler_Is_Running = _kSET;
    8e52:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8e56:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8e5a:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
	}
	
	/* check weather schedules are already started save in eeprom */
	if(_sSchedules.Schedule_Are_Started == _kRESET || (_sSchedules.Which_Sheduler_Is_Running == 1))
    8e5e:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    8e62:	88 23       	and	r24, r24
    8e64:	29 f0       	breq	.+10     	; 0x8e70 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8e66:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8e6a:	81 30       	cpi	r24, 0x01	; 1
    8e6c:	09 f0       	breq	.+2      	; 0x8e70 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8e6e:	79 c1       	rjmp	.+754    	; 0x9162 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
	{
		//_kSERAIL_MON_WRITE("sc enter 29");
		_sSchedules.Schedule_Are_Started = _kSET;
    8e70:	81 e0       	ldi	r24, 0x01	; 1
    8e72:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
		
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8e76:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8e7a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8e7e:	91 30       	cpi	r25, 0x01	; 1
    8e80:	91 f4       	brne	.+36     	; 0x8ea6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x6a>
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8e82:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8e86:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8e8a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8e8e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8e92:	43 34       	cpi	r20, 0x43	; 67
    8e94:	51 45       	sbci	r21, 0x51	; 81
    8e96:	61 40       	sbci	r22, 0x01	; 1
    8e98:	71 05       	cpc	r23, r1
    8e9a:	08 f0       	brcs	.+2      	; 0x8e9e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x62>
    8e9c:	56 c0       	rjmp	.+172    	; 0x8f4a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8e9e:	c1 30       	cpi	r28, 0x01	; 1
    8ea0:	09 f0       	breq	.+2      	; 0x8ea4 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x68>
    8ea2:	53 c0       	rjmp	.+166    	; 0x8f4a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8ea4:	6f c0       	rjmp	.+222    	; 0x8f84 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x148>
				
			}
		}
		else
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1 && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    8ea6:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8eaa:	91 30       	cpi	r25, 0x01	; 1
    8eac:	d1 f5       	brne	.+116    	; 0x8f22 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
    8eae:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    8eb2:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    8eb6:	23 2b       	or	r18, r19
    8eb8:	a1 f5       	brne	.+104    	; 0x8f22 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
    8eba:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8ebe:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8ec2:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8ec6:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8eca:	48 35       	cpi	r20, 0x58	; 88
    8ecc:	52 40       	sbci	r21, 0x02	; 2
    8ece:	61 05       	cpc	r22, r1
    8ed0:	71 05       	cpc	r23, r1
    8ed2:	08 f4       	brcc	.+2      	; 0x8ed6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x9a>
    8ed4:	d5 c0       	rjmp	.+426    	; 0x9080 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x244>
					_sSchedules.Trigger_Time = 600;
					_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
				}
				else
				{
					if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    8ed6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8eda:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8ede:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8ee2:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8ee6:	4c 32       	cpi	r20, 0x2C	; 44
    8ee8:	51 40       	sbci	r21, 0x01	; 1
    8eea:	61 05       	cpc	r22, r1
    8eec:	71 05       	cpc	r23, r1
    8eee:	08 f0       	brcs	.+2      	; 0x8ef2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xb6>
    8ef0:	e0 c0       	rjmp	.+448    	; 0x90b2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x276>
					{
						_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    8ef2:	47 e1       	ldi	r20, 0x17	; 23
    8ef4:	50 e5       	ldi	r21, 0x50	; 80
    8ef6:	61 e0       	ldi	r22, 0x01	; 1
    8ef8:	70 e0       	ldi	r23, 0x00	; 0
    8efa:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    8efe:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    8f02:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    8f06:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f0a:	81 30       	cpi	r24, 0x01	; 1
    8f0c:	51 f4       	brne	.+20     	; 0x8f22 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
						{
							_kSERAIL_MON_WRITE("sc enter 11.1.0.1");
    8f0e:	63 e7       	ldi	r22, 0x73	; 115
    8f10:	7b e0       	ldi	r23, 0x0B	; 11
    8f12:	86 ec       	ldi	r24, 0xC6	; 198
    8f14:	94 e1       	ldi	r25, 0x14	; 20
    8f16:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8f1a:	86 ec       	ldi	r24, 0xC6	; 198
    8f1c:	94 e1       	ldi	r25, 0x14	; 20
    8f1e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
					}
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8f22:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f26:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f2a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f2e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8f36:	43 34       	cpi	r20, 0x43	; 67
    8f38:	51 45       	sbci	r21, 0x51	; 81
    8f3a:	61 40       	sbci	r22, 0x01	; 1
    8f3c:	71 05       	cpc	r23, r1
    8f3e:	08 f0       	brcs	.+2      	; 0x8f42 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x106>
    8f40:	63 c0       	rjmp	.+198    	; 0x9008 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8f42:	c1 30       	cpi	r28, 0x01	; 1
    8f44:	09 f0       	breq	.+2      	; 0x8f48 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10c>
    8f46:	60 c0       	rjmp	.+192    	; 0x9008 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8f48:	34 c0       	rjmp	.+104    	; 0x8fb2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x176>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f4a:	81 30       	cpi	r24, 0x01	; 1
    8f4c:	51 f4       	brne	.+20     	; 0x8f62 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x126>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8f4e:	69 e9       	ldi	r22, 0x99	; 153
    8f50:	7b e0       	ldi	r23, 0x0B	; 11
    8f52:	86 ec       	ldi	r24, 0xC6	; 198
    8f54:	94 e1       	ldi	r25, 0x14	; 20
    8f56:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8f5a:	86 ec       	ldi	r24, 0xC6	; 198
    8f5c:	94 e1       	ldi	r25, 0x14	; 20
    8f5e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8f62:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8f66:	81 30       	cpi	r24, 0x01	; 1
    8f68:	09 f0       	breq	.+2      	; 0x8f6c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x130>
    8f6a:	fb c0       	rjmp	.+502    	; 0x9162 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8f6c:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8f70:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8f74:	89 2b       	or	r24, r25
    8f76:	09 f0       	breq	.+2      	; 0x8f7a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x13e>
    8f78:	f4 c0       	rjmp	.+488    	; 0x9162 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
    8f7a:	0e 94 a5 32 	call	0x654a	; 0x654a <_Z24Return_Previous_Day_Datev>
    8f7e:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    8f82:	7b c0       	rjmp	.+246    	; 0x907a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x23e>
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				//_kSERAIL_MON_WRITE("sc enter 30");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f84:	81 30       	cpi	r24, 0x01	; 1
    8f86:	51 f4       	brne	.+20     	; 0x8f9c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x160>
				{
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8f88:	6d ed       	ldi	r22, 0xDD	; 221
    8f8a:	7b e0       	ldi	r23, 0x0B	; 11
    8f8c:	86 ec       	ldi	r24, 0xC6	; 198
    8f8e:	94 e1       	ldi	r25, 0x14	; 20
    8f90:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8f94:	86 ec       	ldi	r24, 0xC6	; 198
    8f96:	94 e1       	ldi	r25, 0x14	; 20
    8f98:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8f9c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8fa0:	81 30       	cpi	r24, 0x01	; 1
    8fa2:	f1 f4       	brne	.+60     	; 0x8fe0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8fa4:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8fa8:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8fac:	89 2b       	or	r24, r25
    8fae:	09 f1       	breq	.+66     	; 0x8ff2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1b6>
    8fb0:	17 c0       	rjmp	.+46     	; 0x8fe0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8fb2:	81 30       	cpi	r24, 0x01	; 1
    8fb4:	81 f4       	brne	.+32     	; 0x8fd6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x19a>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
    8fb6:	61 e5       	ldi	r22, 0x51	; 81
    8fb8:	7b e0       	ldi	r23, 0x0B	; 11
    8fba:	86 ec       	ldi	r24, 0xC6	; 198
    8fbc:	94 e1       	ldi	r25, 0x14	; 20
    8fbe:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8fc2:	64 e0       	ldi	r22, 0x04	; 4
    8fc4:	7b e0       	ldi	r23, 0x0B	; 11
    8fc6:	86 ec       	ldi	r24, 0xC6	; 198
    8fc8:	94 e1       	ldi	r25, 0x14	; 20
    8fca:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8fce:	86 ec       	ldi	r24, 0xC6	; 198
    8fd0:	94 e1       	ldi	r25, 0x14	; 20
    8fd2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8fd6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8fda:	81 30       	cpi	r24, 0x01	; 1
    8fdc:	09 f4       	brne	.+2      	; 0x8fe0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8fde:	8a c0       	rjmp	.+276    	; 0x90f4 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2b8>
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
				}
				
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
    8fe0:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <_sSchedules+0xc>
    8fe4:	4a e0       	ldi	r20, 0x0A	; 10
    8fe6:	50 e0       	ldi	r21, 0x00	; 0
    8fe8:	86 ec       	ldi	r24, 0xC6	; 198
    8fea:	94 e1       	ldi	r25, 0x14	; 20
    8fec:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
    8ff0:	b8 c0       	rjmp	.+368    	; 0x9162 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8ff2:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8ff6:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8ffa:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    8ffe:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    9002:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    9006:	ec cf       	rjmp	.-40     	; 0x8fe0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31.1.2");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9008:	81 30       	cpi	r24, 0x01	; 1
    900a:	51 f4       	brne	.+20     	; 0x9020 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1e4>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    900c:	61 e7       	ldi	r22, 0x71	; 113
    900e:	7a e0       	ldi	r23, 0x0A	; 10
    9010:	86 ec       	ldi	r24, 0xC6	; 198
    9012:	94 e1       	ldi	r25, 0x14	; 20
    9014:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9018:	86 ec       	ldi	r24, 0xC6	; 198
    901a:	94 e1       	ldi	r25, 0x14	; 20
    901c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    9020:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    9024:	81 30       	cpi	r24, 0x01	; 1
    9026:	09 f0       	breq	.+2      	; 0x902a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1ee>
    9028:	9c c0       	rjmp	.+312    	; 0x9162 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    902a:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    902e:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    9032:	89 2b       	or	r24, r25
    9034:	09 f0       	breq	.+2      	; 0x9038 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1fc>
    9036:	95 c0       	rjmp	.+298    	; 0x9162 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    9038:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
				{
					if(check_days == 2)
    903c:	d2 30       	cpi	r29, 0x02	; 2
    903e:	09 f0       	breq	.+2      	; 0x9042 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x206>
    9040:	7f c0       	rjmp	.+254    	; 0x9140 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x304>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9042:	81 30       	cpi	r24, 0x01	; 1
    9044:	51 f4       	brne	.+20     	; 0x905a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x21e>
						{
							_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 5.1///////////////////////////////////////////");
    9046:	62 e2       	ldi	r22, 0x22	; 34
    9048:	7a e0       	ldi	r23, 0x0A	; 10
    904a:	86 ec       	ldi	r24, 0xC6	; 198
    904c:	94 e1       	ldi	r25, 0x14	; 20
    904e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9052:	86 ec       	ldi	r24, 0xC6	; 198
    9054:	94 e1       	ldi	r25, 0x14	; 20
    9056:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    905a:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    905e:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
						_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    9062:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    9066:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
							_kSERIAL_MON_CLEAR();
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
						_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    906a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    906e:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    9072:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    9076:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    907a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    907e:	71 c0       	rjmp	.+226    	; 0x9162 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9080:	81 30       	cpi	r24, 0x01	; 1
    9082:	51 f4       	brne	.+20     	; 0x9098 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x25c>
					{
						_kSERAIL_MON_WRITE("sc enter 11.1.0.0.0");
    9084:	65 e8       	ldi	r22, 0x85	; 133
    9086:	7b e0       	ldi	r23, 0x0B	; 11
    9088:	86 ec       	ldi	r24, 0xC6	; 198
    908a:	94 e1       	ldi	r25, 0x14	; 20
    908c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9090:	86 ec       	ldi	r24, 0xC6	; 198
    9092:	94 e1       	ldi	r25, 0x14	; 20
    9094:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					_sSchedules.Trigger_Time = 600;
    9098:	88 e5       	ldi	r24, 0x58	; 88
    909a:	92 e0       	ldi	r25, 0x02	; 2
    909c:	a0 e0       	ldi	r26, 0x00	; 0
    909e:	b0 e0       	ldi	r27, 0x00	; 0
    90a0:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    90a4:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    90a8:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    90ac:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
    90b0:	0c c0       	rjmp	.+24     	; 0x90ca <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
							_kSERIAL_MON_CLEAR();
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    90b2:	81 30       	cpi	r24, 0x01	; 1
    90b4:	51 f4       	brne	.+20     	; 0x90ca <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
						{
							_kSERAIL_MON_WRITE("sc enter 11.2.0.2");
    90b6:	61 e6       	ldi	r22, 0x61	; 97
    90b8:	7b e0       	ldi	r23, 0x0B	; 11
    90ba:	86 ec       	ldi	r24, 0xC6	; 198
    90bc:	94 e1       	ldi	r25, 0x14	; 20
    90be:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    90c2:	86 ec       	ldi	r24, 0xC6	; 198
    90c4:	94 e1       	ldi	r25, 0x14	; 20
    90c6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    90ca:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    90ce:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    90d2:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    90d6:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    90da:	8c 52       	subi	r24, 0x2C	; 44
    90dc:	91 40       	sbci	r25, 0x01	; 1
    90de:	a1 09       	sbc	r26, r1
    90e0:	b1 09       	sbc	r27, r1
    90e2:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    90e6:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    90ea:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    90ee:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
    90f2:	17 cf       	rjmp	.-466    	; 0x8f22 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    90f4:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    90f8:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    90fc:	89 2b       	or	r24, r25
    90fe:	09 f0       	breq	.+2      	; 0x9102 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2c6>
    9100:	6f cf       	rjmp	.-290    	; 0x8fe0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9102:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9106:	81 30       	cpi	r24, 0x01	; 1
    9108:	51 f4       	brne	.+20     	; 0x911e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2e2>
					{
						_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4.1///////////////////////////////////////////");
    910a:	65 eb       	ldi	r22, 0xB5	; 181
    910c:	7a e0       	ldi	r23, 0x0A	; 10
    910e:	86 ec       	ldi	r24, 0xC6	; 198
    9110:	94 e1       	ldi	r25, 0x14	; 20
    9112:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9116:	86 ec       	ldi	r24, 0xC6	; 198
    9118:	94 e1       	ldi	r25, 0x14	; 20
    911a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    911e:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    9122:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    9126:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    912a:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    912e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    9132:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    9136:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    913a:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
    913e:	61 cf       	rjmp	.-318    	; 0x9002 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1c6>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
						_sSchedules.Pump_On_In_Scheduler = _kRESET;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9140:	81 30       	cpi	r24, 0x01	; 1
    9142:	51 f4       	brne	.+20     	; 0x9158 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x31c>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
    9144:	6c ed       	ldi	r22, 0xDC	; 220
    9146:	79 e0       	ldi	r23, 0x09	; 9
    9148:	86 ec       	ldi	r24, 0xC6	; 198
    914a:	94 e1       	ldi	r25, 0x14	; 20
    914c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9150:	86 ec       	ldi	r24, 0xC6	; 198
    9152:	94 e1       	ldi	r25, 0x14	; 20
    9154:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
    9158:	0e 94 a5 32 	call	0x654a	; 0x654a <_Z24Return_Previous_Day_Datev>
    915c:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    9160:	84 cf       	rjmp	.-248    	; 0x906a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22e>
			}
		}
		/* save in eeprom */
	}
	
	_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    9162:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
}
    9166:	80 e0       	ldi	r24, 0x00	; 0
    9168:	df 91       	pop	r29
    916a:	cf 91       	pop	r28
    916c:	08 95       	ret

0000916e <_Z30Compare_Trigger_And_Reset_Timev>:

unsigned char Compare_Trigger_And_Reset_Time(void)
{
    916e:	0f 93       	push	r16
    9170:	1f 93       	push	r17
    9172:	cf 93       	push	r28
	unsigned char check_true_condition = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _kSET)
    9174:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    9178:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    917c:	91 30       	cpi	r25, 0x01	; 1
    917e:	09 f0       	breq	.+2      	; 0x9182 <_Z30Compare_Trigger_And_Reset_Timev+0x14>
    9180:	51 c0       	rjmp	.+162    	; 0x9224 <_Z30Compare_Trigger_And_Reset_Timev+0xb6>
	{
		if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    9182:	20 91 d7 0b 	lds	r18, 0x0BD7	; 0x800bd7 <_sSchedules+0x2b9>
    9186:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    918a:	29 13       	cpse	r18, r25
    918c:	17 c0       	rjmp	.+46     	; 0x91bc <_Z30Compare_Trigger_And_Reset_Timev+0x4e>
		{
			if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    918e:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    9192:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    9196:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    919a:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    919e:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    91a2:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    91a6:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    91aa:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    91ae:	48 17       	cp	r20, r24
    91b0:	59 07       	cpc	r21, r25
    91b2:	6a 07       	cpc	r22, r26
    91b4:	7b 07       	cpc	r23, r27
    91b6:	08 f4       	brcc	.+2      	; 0x91ba <_Z30Compare_Trigger_And_Reset_Timev+0x4c>
    91b8:	7f c0       	rjmp	.+254    	; 0x92b8 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
    91ba:	f9 c0       	rjmp	.+498    	; 0x93ae <_Z30Compare_Trigger_And_Reset_Timev+0x240>
		}
		else
		{
			/* check which is the current date */
			//_kSERAIL_MON_WRITE("sc enter 21.1");
			if(_sSchedules.all_schedule_done_flag == _eSET)
    91bc:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    91c0:	92 30       	cpi	r25, 0x02	; 2
    91c2:	09 f0       	breq	.+2      	; 0x91c6 <_Z30Compare_Trigger_And_Reset_Timev+0x58>
    91c4:	f6 c0       	rjmp	.+492    	; 0x93b2 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    91c6:	81 30       	cpi	r24, 0x01	; 1
    91c8:	51 f4       	brne	.+20     	; 0x91de <_Z30Compare_Trigger_And_Reset_Timev+0x70>
				{
					_kSERAIL_MON_WRITE("sc enter 22");
    91ca:	60 ed       	ldi	r22, 0xD0	; 208
    91cc:	79 e0       	ldi	r23, 0x09	; 9
    91ce:	86 ec       	ldi	r24, 0xC6	; 198
    91d0:	94 e1       	ldi	r25, 0x14	; 20
    91d2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    91d6:	86 ec       	ldi	r24, 0xC6	; 198
    91d8:	94 e1       	ldi	r25, 0x14	; 20
    91da:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				
				check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    91de:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    91e2:	0e 94 47 34 	call	0x688e	; 0x688e <_Z22Day_In_Bet_Schedullingh>
    91e6:	c8 2f       	mov	r28, r24
				
				if(check_true_condition == 2)
    91e8:	82 30       	cpi	r24, 0x02	; 2
    91ea:	41 f4       	brne	.+16     	; 0x91fc <_Z30Compare_Trigger_And_Reset_Timev+0x8e>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    91ec:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    91f0:	81 30       	cpi	r24, 0x01	; 1
    91f2:	09 f0       	breq	.+2      	; 0x91f6 <_Z30Compare_Trigger_And_Reset_Timev+0x88>
    91f4:	b2 c0       	rjmp	.+356    	; 0x935a <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
					{
						_kSERAIL_MON_WRITE("sc enter 23");
    91f6:	64 ec       	ldi	r22, 0xC4	; 196
    91f8:	79 e0       	ldi	r23, 0x09	; 9
    91fa:	a7 c0       	rjmp	.+334    	; 0x934a <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
					_sSchedules.all_schedule_done_flag = _eNOT_SET;
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
				}
				else
				{
					if(check_true_condition == 1)
    91fc:	81 30       	cpi	r24, 0x01	; 1
    91fe:	09 f0       	breq	.+2      	; 0x9202 <_Z30Compare_Trigger_And_Reset_Timev+0x94>
    9200:	d6 c0       	rjmp	.+428    	; 0x93ae <_Z30Compare_Trigger_And_Reset_Timev+0x240>
					{
						if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9202:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    9206:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    920a:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    920e:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    9212:	83 34       	cpi	r24, 0x43	; 67
    9214:	91 45       	sbci	r25, 0x51	; 81
    9216:	a1 40       	sbci	r26, 0x01	; 1
    9218:	b1 05       	cpc	r27, r1
    921a:	08 f0       	brcs	.+2      	; 0x921e <_Z30Compare_Trigger_And_Reset_Timev+0xb0>
    921c:	c8 c0       	rjmp	.+400    	; 0x93ae <_Z30Compare_Trigger_And_Reset_Timev+0x240>
						{
							//_kSERAIL_MON_WRITE("sc enter 24");
							check_true_condition = 1;
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
    921e:	c0 93 3c 09 	sts	0x093C, r28	; 0x80093c <_sSchedules+0x1e>
    9222:	9e c0       	rjmp	.+316    	; 0x9360 <_Z30Compare_Trigger_And_Reset_Timev+0x1f2>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9224:	20 91 39 09 	lds	r18, 0x0939	; 0x800939 <_sSchedules+0x1b>
    9228:	90 91 6a 14 	lds	r25, 0x146A	; 0x80146a <_sRuble_Parameters+0xbc>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    922c:	21 11       	cpse	r18, r1
    922e:	1a c0       	rjmp	.+52     	; 0x9264 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    9230:	20 91 21 09 	lds	r18, 0x0921	; 0x800921 <_sSchedules+0x3>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9234:	21 11       	cpse	r18, r1
    9236:	16 c0       	rjmp	.+44     	; 0x9264 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    9238:	91 30       	cpi	r25, 0x01	; 1
    923a:	a1 f4       	brne	.+40     	; 0x9264 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    923c:	20 91 da 0b 	lds	r18, 0x0BDA	; 0x800bda <_sSchedules+0x2bc>
    9240:	30 91 db 0b 	lds	r19, 0x0BDB	; 0x800bdb <_sSchedules+0x2bd>
    9244:	23 2b       	or	r18, r19
    9246:	89 f4       	brne	.+34     	; 0x926a <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    9248:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    924c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    9250:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9254:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    9258:	45 2b       	or	r20, r21
    925a:	46 2b       	or	r20, r22
    925c:	47 2b       	or	r20, r23
    925e:	09 f4       	brne	.+2      	; 0x9262 <_Z30Compare_Trigger_And_Reset_Timev+0xf4>
    9260:	bf c0       	rjmp	.+382    	; 0x93e0 <_Z30Compare_Trigger_And_Reset_Timev+0x272>
    9262:	03 c0       	rjmp	.+6      	; 0x926a <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
			}
			check_true_condition = 1;
		}
		else
		{
			if(_sRuble_Parameters.Electricity_Status == _kON)
    9264:	91 30       	cpi	r25, 0x01	; 1
    9266:	09 f0       	breq	.+2      	; 0x926a <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    9268:	96 c0       	rjmp	.+300    	; 0x9396 <_Z30Compare_Trigger_And_Reset_Timev+0x228>
			{
				if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    926a:	20 91 d7 0b 	lds	r18, 0x0BD7	; 0x800bd7 <_sSchedules+0x2b9>
    926e:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    9272:	29 13       	cpse	r18, r25
    9274:	2a c0       	rjmp	.+84     	; 0x92ca <_Z30Compare_Trigger_And_Reset_Timev+0x15c>
				{
					if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    9276:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    927a:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    927e:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    9282:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    9286:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    928a:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    928e:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    9292:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    9296:	04 17       	cp	r16, r20
    9298:	15 07       	cpc	r17, r21
    929a:	26 07       	cpc	r18, r22
    929c:	37 07       	cpc	r19, r23
    929e:	78 f4       	brcc	.+30     	; 0x92be <_Z30Compare_Trigger_And_Reset_Timev+0x150>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    92a0:	81 30       	cpi	r24, 0x01	; 1
    92a2:	51 f4       	brne	.+20     	; 0x92b8 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.1");
    92a4:	60 ea       	ldi	r22, 0xA0	; 160
    92a6:	79 e0       	ldi	r23, 0x09	; 9
    92a8:	86 ec       	ldi	r24, 0xC6	; 198
    92aa:	94 e1       	ldi	r25, 0x14	; 20
    92ac:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    92b0:	86 ec       	ldi	r24, 0xC6	; 198
    92b2:	94 e1       	ldi	r25, 0x14	; 20
    92b4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.New_Schedul_Date = _kRESET;
    92b8:	10 92 d7 0b 	sts	0x0BD7, r1	; 0x800bd7 <_sSchedules+0x2b9>
    92bc:	7a c0       	rjmp	.+244    	; 0x93b2 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
						check_true_condition = 1;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    92be:	81 30       	cpi	r24, 0x01	; 1
    92c0:	09 f0       	breq	.+2      	; 0x92c4 <_Z30Compare_Trigger_And_Reset_Timev+0x156>
    92c2:	93 c0       	rjmp	.+294    	; 0x93ea <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.2");
    92c4:	6c e8       	ldi	r22, 0x8C	; 140
    92c6:	79 e0       	ldi	r23, 0x09	; 9
    92c8:	6a c0       	rjmp	.+212    	; 0x939e <_Z30Compare_Trigger_And_Reset_Timev+0x230>
						check_true_condition = _kRESET;
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    92ca:	81 30       	cpi	r24, 0x01	; 1
    92cc:	51 f4       	brne	.+20     	; 0x92e2 <_Z30Compare_Trigger_And_Reset_Timev+0x174>
					{
						_kSERAIL_MON_WRITE("sc 1 enter 12");
    92ce:	6e e7       	ldi	r22, 0x7E	; 126
    92d0:	79 e0       	ldi	r23, 0x09	; 9
    92d2:	86 ec       	ldi	r24, 0xC6	; 198
    92d4:	94 e1       	ldi	r25, 0x14	; 20
    92d6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    92da:	86 ec       	ldi	r24, 0xC6	; 198
    92dc:	94 e1       	ldi	r25, 0x14	; 20
    92de:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.all_schedule_done_flag == _eSET)
    92e2:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    92e6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    92ea:	92 30       	cpi	r25, 0x02	; 2
    92ec:	09 f0       	breq	.+2      	; 0x92f0 <_Z30Compare_Trigger_And_Reset_Timev+0x182>
    92ee:	46 c0       	rjmp	.+140    	; 0x937c <_Z30Compare_Trigger_And_Reset_Timev+0x20e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    92f0:	81 30       	cpi	r24, 0x01	; 1
    92f2:	51 f4       	brne	.+20     	; 0x9308 <_Z30Compare_Trigger_And_Reset_Timev+0x19a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 13");
    92f4:	60 e7       	ldi	r22, 0x70	; 112
    92f6:	79 e0       	ldi	r23, 0x09	; 9
    92f8:	86 ec       	ldi	r24, 0xC6	; 198
    92fa:	94 e1       	ldi	r25, 0x14	; 20
    92fc:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9300:	86 ec       	ldi	r24, 0xC6	; 198
    9302:	94 e1       	ldi	r25, 0x14	; 20
    9304:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    9308:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    930c:	0e 94 47 34 	call	0x688e	; 0x688e <_Z22Day_In_Bet_Schedullingh>
    9310:	c8 2f       	mov	r28, r24
    9312:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
							
						if(check_true_condition == 2)
    9316:	c2 30       	cpi	r28, 0x02	; 2
    9318:	29 f4       	brne	.+10     	; 0x9324 <_Z30Compare_Trigger_And_Reset_Timev+0x1b6>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    931a:	81 30       	cpi	r24, 0x01	; 1
    931c:	f1 f4       	brne	.+60     	; 0x935a <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
							{
								_kSERAIL_MON_WRITE("sc 1 enter 14");
    931e:	62 e6       	ldi	r22, 0x62	; 98
    9320:	79 e0       	ldi	r23, 0x09	; 9
    9322:	13 c0       	rjmp	.+38     	; 0x934a <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
						}
						else
						{
							if(check_true_condition == 1)
    9324:	c1 30       	cpi	r28, 0x01	; 1
    9326:	29 f5       	brne	.+74     	; 0x9372 <_Z30Compare_Trigger_And_Reset_Timev+0x204>
							{
								if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9328:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    932c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    9330:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9334:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    9338:	43 34       	cpi	r20, 0x43	; 67
    933a:	51 45       	sbci	r21, 0x51	; 81
    933c:	61 40       	sbci	r22, 0x01	; 1
    933e:	71 05       	cpc	r23, r1
    9340:	90 f4       	brcc	.+36     	; 0x9366 <_Z30Compare_Trigger_And_Reset_Timev+0x1f8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    9342:	81 30       	cpi	r24, 0x01	; 1
    9344:	51 f4       	brne	.+20     	; 0x935a <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15");
    9346:	64 e5       	ldi	r22, 0x54	; 84
    9348:	79 e0       	ldi	r23, 0x09	; 9
    934a:	86 ec       	ldi	r24, 0xC6	; 198
    934c:	94 e1       	ldi	r25, 0x14	; 20
    934e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    9352:	86 ec       	ldi	r24, 0xC6	; 198
    9354:	94 e1       	ldi	r25, 0x14	; 20
    9356:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									}
									check_true_condition = 1;
									_sSchedules.all_schedule_done_flag = _eNOT_SET;
    935a:	81 e0       	ldi	r24, 0x01	; 1
    935c:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    9360:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
    9364:	27 c0       	rjmp	.+78     	; 0x93b4 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    9366:	81 30       	cpi	r24, 0x01	; 1
    9368:	09 f0       	breq	.+2      	; 0x936c <_Z30Compare_Trigger_And_Reset_Timev+0x1fe>
    936a:	3f c0       	rjmp	.+126    	; 0x93ea <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15.1");
    936c:	64 e4       	ldi	r22, 0x44	; 68
    936e:	79 e0       	ldi	r23, 0x09	; 9
    9370:	16 c0       	rjmp	.+44     	; 0x939e <_Z30Compare_Trigger_And_Reset_Timev+0x230>
									check_true_condition = 0;
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9372:	81 30       	cpi	r24, 0x01	; 1
    9374:	d1 f5       	brne	.+116    	; 0x93ea <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
								{
									_kSERAIL_MON_WRITE("sc 1 enter 15.2");
    9376:	64 e3       	ldi	r22, 0x34	; 52
    9378:	79 e0       	ldi	r23, 0x09	; 9
    937a:	11 c0       	rjmp	.+34     	; 0x939e <_Z30Compare_Trigger_And_Reset_Timev+0x230>
							}
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    937c:	81 30       	cpi	r24, 0x01	; 1
    937e:	b9 f5       	brne	.+110    	; 0x93ee <_Z30Compare_Trigger_And_Reset_Timev+0x280>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 15.3");
    9380:	64 e2       	ldi	r22, 0x24	; 36
    9382:	79 e0       	ldi	r23, 0x09	; 9
    9384:	86 ec       	ldi	r24, 0xC6	; 198
    9386:	94 e1       	ldi	r25, 0x14	; 20
    9388:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    938c:	86 ec       	ldi	r24, 0xC6	; 198
    938e:	94 e1       	ldi	r25, 0x14	; 20
    9390:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    9394:	0e c0       	rjmp	.+28     	; 0x93b2 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9396:	81 30       	cpi	r24, 0x01	; 1
    9398:	41 f5       	brne	.+80     	; 0x93ea <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
				{
					_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.4");
    939a:	60 e1       	ldi	r22, 0x10	; 16
    939c:	79 e0       	ldi	r23, 0x09	; 9
    939e:	86 ec       	ldi	r24, 0xC6	; 198
    93a0:	94 e1       	ldi	r25, 0x14	; 20
    93a2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    93a6:	86 ec       	ldi	r24, 0xC6	; 198
    93a8:	94 e1       	ldi	r25, 0x14	; 20
    93aa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				check_true_condition = _kRESET;
    93ae:	c0 e0       	ldi	r28, 0x00	; 0
    93b0:	01 c0       	rjmp	.+2      	; 0x93b4 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    93b2:	c1 e0       	ldi	r28, 0x01	; 1
				}
				check_true_condition = _kRESET;
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    93b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    93b8:	81 30       	cpi	r24, 0x01	; 1
    93ba:	d1 f4       	brne	.+52     	; 0x93f0 <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		_kSERAIL_MON_WRITE("check_true_condition");
    93bc:	6b ef       	ldi	r22, 0xFB	; 251
    93be:	78 e0       	ldi	r23, 0x08	; 8
    93c0:	86 ec       	ldi	r24, 0xC6	; 198
    93c2:	94 e1       	ldi	r25, 0x14	; 20
    93c4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
    93c8:	4a e0       	ldi	r20, 0x0A	; 10
    93ca:	50 e0       	ldi	r21, 0x00	; 0
    93cc:	6c 2f       	mov	r22, r28
    93ce:	86 ec       	ldi	r24, 0xC6	; 198
    93d0:	94 e1       	ldi	r25, 0x14	; 20
    93d2:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    93d6:	86 ec       	ldi	r24, 0xC6	; 198
    93d8:	94 e1       	ldi	r25, 0x14	; 20
    93da:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    93de:	08 c0       	rjmp	.+16     	; 0x93f0 <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    93e0:	81 30       	cpi	r24, 0x01	; 1
    93e2:	29 f4       	brne	.+10     	; 0x93ee <_Z30Compare_Trigger_And_Reset_Timev+0x280>
			{
				_kSERAIL_MON_WRITE("sc 1 enter 12.0");
    93e4:	64 eb       	ldi	r22, 0xB4	; 180
    93e6:	79 e0       	ldi	r23, 0x09	; 9
    93e8:	cd cf       	rjmp	.-102    	; 0x9384 <_Z30Compare_Trigger_And_Reset_Timev+0x216>
				check_true_condition = 1;
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 21.0.1");
				check_true_condition = 0;
    93ea:	c0 e0       	ldi	r28, 0x00	; 0
    93ec:	01 c0       	rjmp	.+2      	; 0x93f0 <_Z30Compare_Trigger_And_Reset_Timev+0x282>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    93ee:	c1 e0       	ldi	r28, 0x01	; 1
		_kSERAIL_MON_WRITE("check_true_condition");
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
		_kSERIAL_MON_CLEAR();
	}
	return check_true_condition;
}
    93f0:	8c 2f       	mov	r24, r28
    93f2:	cf 91       	pop	r28
    93f4:	1f 91       	pop	r17
    93f6:	0f 91       	pop	r16
    93f8:	08 95       	ret

000093fa <_Z16Set_Trigger_Timev>:

unsigned char Set_Trigger_Time(void)
{
	unsigned char i = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY)
    93fa:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    93fe:	81 11       	cpse	r24, r1
    9400:	2a c0       	rjmp	.+84     	; 0x9456 <_Z16Set_Trigger_Timev+0x5c>
	{
		for(i=0; _sSchedules.Schedule_Status[i]>0; i++)
    9402:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <_sSchedules+0x3d>
		{
			break;
		}
		
		if(_sSchedules.Which_Sheduler_Is_Running-1 == i && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    9406:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    940a:	81 30       	cpi	r24, 0x01	; 1
    940c:	21 f5       	brne	.+72     	; 0x9456 <_Z16Set_Trigger_Timev+0x5c>
    940e:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9412:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    9416:	89 2b       	or	r24, r25
    9418:	f1 f4       	brne	.+60     	; 0x9456 <_Z16Set_Trigger_Timev+0x5c>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    941a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    941e:	81 30       	cpi	r24, 0x01	; 1
    9420:	51 f4       	brne	.+20     	; 0x9436 <_Z16Set_Trigger_Timev+0x3c>
			{
				_kSERAIL_MON_WRITE("trigger time set");
    9422:	6a ee       	ldi	r22, 0xEA	; 234
    9424:	78 e0       	ldi	r23, 0x08	; 8
    9426:	86 ec       	ldi	r24, 0xC6	; 198
    9428:	94 e1       	ldi	r25, 0x14	; 20
    942a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    942e:	86 ec       	ldi	r24, 0xC6	; 198
    9430:	94 e1       	ldi	r25, 0x14	; 20
    9432:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			_sSchedules.Trigger_Time = _sRuble_Parameters.Current_Time_In_Sec;
    9436:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    943a:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    943e:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    9442:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    9446:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    944a:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    944e:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    9452:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
			//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
		}
	}	
}
    9456:	80 e0       	ldi	r24, 0x00	; 0
    9458:	08 95       	ret

0000945a <_Z17Doser_Pump_On_Offh>:
	
	return 1;
}

char Doser_Pump_On_Off(unsigned char on_off)
{
    945a:	2f 92       	push	r2
    945c:	3f 92       	push	r3
    945e:	4f 92       	push	r4
    9460:	5f 92       	push	r5
    9462:	6f 92       	push	r6
    9464:	7f 92       	push	r7
    9466:	8f 92       	push	r8
    9468:	9f 92       	push	r9
    946a:	af 92       	push	r10
    946c:	bf 92       	push	r11
    946e:	cf 92       	push	r12
    9470:	df 92       	push	r13
    9472:	ef 92       	push	r14
    9474:	ff 92       	push	r15
    9476:	0f 93       	push	r16
    9478:	1f 93       	push	r17
    947a:	cf 93       	push	r28
    947c:	df 93       	push	r29
    947e:	00 d0       	rcall	.+0      	; 0x9480 <_Z17Doser_Pump_On_Offh+0x26>
    9480:	1f 92       	push	r1
    9482:	cd b7       	in	r28, 0x3d	; 61
    9484:	de b7       	in	r29, 0x3e	; 62
    9486:	18 2f       	mov	r17, r24
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	unsigned char tank_number,number_of_running_tanks; 
	number_of_running_tanks = 0;
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number == 0 || 
    9488:	80 91 e9 0d 	lds	r24, 0x0DE9	; 0x800de9 <_sExtra_Plot+0x1>
    948c:	84 36       	cpi	r24, 0x64	; 100
    948e:	08 f4       	brcc	.+2      	; 0x9492 <_Z17Doser_Pump_On_Offh+0x38>
    9490:	77 c3       	rjmp	.+1774   	; 0x9b80 <_Z17Doser_Pump_On_Offh+0x726>
	_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number < 100)
	{
		return 1;
	}
	
	if(on_off == _kON && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    9492:	11 30       	cpi	r17, 0x01	; 1
    9494:	29 f4       	brne	.+10     	; 0x94a0 <_Z17Doser_Pump_On_Offh+0x46>
    9496:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    949a:	84 30       	cpi	r24, 0x04	; 4
    949c:	c1 f4       	brne	.+48     	; 0x94ce <_Z17Doser_Pump_On_Offh+0x74>
    949e:	70 c3       	rjmp	.+1760   	; 0x9b80 <_Z17Doser_Pump_On_Offh+0x726>
	{
		return 1;
	}
	
	if(on_off == _kOFF)
    94a0:	11 11       	cpse	r17, r1
    94a2:	12 c0       	rjmp	.+36     	; 0x94c8 <_Z17Doser_Pump_On_Offh+0x6e>
    94a4:	80 e0       	ldi	r24, 0x00	; 0
    94a6:	90 e0       	ldi	r25, 0x00	; 0
    94a8:	20 e0       	ldi	r18, 0x00	; 0
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
		{
			if(_sSchedules.Running_Tank[tank_number] == _kON)
    94aa:	fc 01       	movw	r30, r24
    94ac:	e2 58       	subi	r30, 0x82	; 130
    94ae:	f4 4f       	sbci	r31, 0xF4	; 244
    94b0:	30 81       	ld	r19, Z
    94b2:	31 30       	cpi	r19, 0x01	; 1
    94b4:	09 f4       	brne	.+2      	; 0x94b8 <_Z17Doser_Pump_On_Offh+0x5e>
			{
				number_of_running_tanks++;
    94b6:	2f 5f       	subi	r18, 0xFF	; 255
    94b8:	01 96       	adiw	r24, 0x01	; 1
		return 1;
	}
	
	if(on_off == _kOFF)
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    94ba:	83 30       	cpi	r24, 0x03	; 3
    94bc:	91 05       	cpc	r25, r1
    94be:	a9 f7       	brne	.-22     	; 0x94aa <_Z17Doser_Pump_On_Offh+0x50>
			if(_sSchedules.Running_Tank[tank_number] == _kON)
			{
				number_of_running_tanks++;
			}
		}
		if(number_of_running_tanks > 1)
    94c0:	22 30       	cpi	r18, 0x02	; 2
    94c2:	08 f0       	brcs	.+2      	; 0x94c6 <_Z17Doser_Pump_On_Offh+0x6c>
    94c4:	5d c3       	rjmp	.+1722   	; 0x9b80 <_Z17Doser_Pump_On_Offh+0x726>
    94c6:	03 c0       	rjmp	.+6      	; 0x94ce <_Z17Doser_Pump_On_Offh+0x74>
			return 1;
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
    94c8:	13 30       	cpi	r17, 0x03	; 3
    94ca:	09 f4       	brne	.+2      	; 0x94ce <_Z17Doser_Pump_On_Offh+0x74>
	{
		on_off = _kOFF;
    94cc:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].On_Off_Status == _kSET)
    94ce:	80 91 e8 0d 	lds	r24, 0x0DE8	; 0x800de8 <_sExtra_Plot>
    94d2:	81 11       	cpse	r24, r1
    94d4:	55 c3       	rjmp	.+1706   	; 0x9b80 <_Z17Doser_Pump_On_Offh+0x726>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    94d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    94da:	81 30       	cpi	r24, 0x01	; 1
    94dc:	41 f5       	brne	.+80     	; 0x952e <_Z17Doser_Pump_On_Offh+0xd4>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
    94de:	60 ea       	ldi	r22, 0xA0	; 160
    94e0:	70 e1       	ldi	r23, 0x10	; 16
    94e2:	86 ec       	ldi	r24, 0xC6	; 198
    94e4:	94 e1       	ldi	r25, 0x14	; 20
    94e6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    94ea:	86 ec       	ldi	r24, 0xC6	; 198
    94ec:	94 e1       	ldi	r25, 0x14	; 20
    94ee:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    94f2:	2d ee       	ldi	r18, 0xED	; 237
    94f4:	3d e0       	ldi	r19, 0x0D	; 13
    94f6:	3a 83       	std	Y+2, r19	; 0x02
    94f8:	29 83       	std	Y+1, r18	; 0x01
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]);
    94fa:	a9 81       	ldd	r26, Y+1	; 0x01
    94fc:	ba 81       	ldd	r27, Y+2	; 0x02
    94fe:	6d 91       	ld	r22, X+
    9500:	ba 83       	std	Y+2, r27	; 0x02
    9502:	a9 83       	std	Y+1, r26	; 0x01
    9504:	4a e0       	ldi	r20, 0x0A	; 10
    9506:	50 e0       	ldi	r21, 0x00	; 0
    9508:	86 ec       	ldi	r24, 0xC6	; 198
    950a:	94 e1       	ldi	r25, 0x14	; 20
    950c:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    9510:	6e e9       	ldi	r22, 0x9E	; 158
    9512:	70 e1       	ldi	r23, 0x10	; 16
    9514:	86 ec       	ldi	r24, 0xC6	; 198
    9516:	94 e1       	ldi	r25, 0x14	; 20
    9518:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    951c:	86 ec       	ldi	r24, 0xC6	; 198
    951e:	94 e1       	ldi	r25, 0x14	; 20
    9520:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9524:	e9 81       	ldd	r30, Y+1	; 0x01
    9526:	fa 81       	ldd	r31, Y+2	; 0x02
    9528:	e2 5f       	subi	r30, 0xF2	; 242
    952a:	fd 40       	sbci	r31, 0x0D	; 13
    952c:	31 f7       	brne	.-52     	; 0x94fa <_Z17Doser_Pump_On_Offh+0xa0>
    952e:	4d ee       	ldi	r20, 0xED	; 237
    9530:	5d e0       	ldi	r21, 0x0D	; 13
    9532:	5c 83       	std	Y+4, r21	; 0x04
    9534:	4b 83       	std	Y+3, r20	; 0x03
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		on_off = _kOFF;
    9536:	7a 01       	movw	r14, r20
    9538:	00 e0       	ldi	r16, 0x00	; 0
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    953a:	99 24       	eor	r9, r9
    953c:	93 94       	inc	r9
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    953e:	57 e0       	ldi	r21, 0x07	; 7
    9540:	c5 2e       	mov	r12, r21
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9542:	6d e0       	ldi	r22, 0x0D	; 13
    9544:	d6 2e       	mov	r13, r22
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9546:	70 ed       	ldi	r23, 0xD0	; 208
    9548:	47 2e       	mov	r4, r23
    954a:	7f e0       	ldi	r23, 0x0F	; 15
    954c:	57 2e       	mov	r5, r23
    954e:	5a c1       	rjmp	.+692    	; 0x9804 <_Z17Doser_Pump_On_Offh+0x3aa>
			unsigned char valve_number =0;
			unsigned char euro_valve_num=0,command_valve=0;
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9550:	b3 e0       	ldi	r27, 0x03	; 3
    9552:	b8 15       	cp	r27, r8
    9554:	08 f0       	brcs	.+2      	; 0x9558 <_Z17Doser_Pump_On_Offh+0xfe>
    9556:	64 c1       	rjmp	.+712    	; 0x9820 <_Z17Doser_Pump_On_Offh+0x3c6>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9558:	88 2d       	mov	r24, r8
    955a:	63 e0       	ldi	r22, 0x03	; 3
    955c:	0e 94 ac ea 	call	0x1d558	; 0x1d558 <__udivmodqi4>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9560:	2b ea       	ldi	r18, 0xAB	; 171
    9562:	82 9e       	mul	r8, r18
    9564:	21 2d       	mov	r18, r1
    9566:	11 24       	eor	r1, r1
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9568:	99 23       	and	r25, r25
    956a:	09 f4       	brne	.+2      	; 0x956e <_Z17Doser_Pump_On_Offh+0x114>
    956c:	54 c1       	rjmp	.+680    	; 0x9816 <_Z17Doser_Pump_On_Offh+0x3bc>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    956e:	26 95       	lsr	r18
    9570:	77 24       	eor	r7, r7
    9572:	73 94       	inc	r7
    9574:	72 0e       	add	r7, r18
    9576:	89 2e       	mov	r8, r25
				}
				
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9578:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    957c:	81 30       	cpi	r24, 0x01	; 1
    957e:	89 f4       	brne	.+34     	; 0x95a2 <_Z17Doser_Pump_On_Offh+0x148>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9580:	6a e8       	ldi	r22, 0x8A	; 138
    9582:	70 e1       	ldi	r23, 0x10	; 16
    9584:	86 ec       	ldi	r24, 0xC6	; 198
    9586:	94 e1       	ldi	r25, 0x14	; 20
    9588:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    958c:	4a e0       	ldi	r20, 0x0A	; 10
    958e:	50 e0       	ldi	r21, 0x00	; 0
    9590:	67 2d       	mov	r22, r7
    9592:	86 ec       	ldi	r24, 0xC6	; 198
    9594:	94 e1       	ldi	r25, 0x14	; 20
    9596:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    959a:	86 ec       	ldi	r24, 0xC6	; 198
    959c:	94 e1       	ldi	r25, 0x14	; 20
    959e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    95a2:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
    95a6:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    95a8:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    95ac:	e5 ef       	ldi	r30, 0xF5	; 245
    95ae:	f3 e1       	ldi	r31, 0x13	; 19
    95b0:	24 e1       	ldi	r18, 0x14	; 20
    95b2:	11 92       	st	Z+, r1
    95b4:	2a 95       	dec	r18
    95b6:	e9 f7       	brne	.-6      	; 0x95b2 <_Z17Doser_Pump_On_Offh+0x158>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    95b8:	27 2d       	mov	r18, r7
    95ba:	30 e0       	ldi	r19, 0x00	; 0
    95bc:	21 50       	subi	r18, 0x01	; 1
    95be:	31 09       	sbc	r19, r1
    95c0:	c2 9e       	mul	r12, r18
    95c2:	c0 01       	movw	r24, r0
    95c4:	c3 9e       	mul	r12, r19
    95c6:	90 0d       	add	r25, r0
    95c8:	11 24       	eor	r1, r1
    95ca:	82 55       	subi	r24, 0x52	; 82
    95cc:	9c 4e       	sbci	r25, 0xEC	; 236
    95ce:	fc 01       	movw	r30, r24
    95d0:	ec 58       	subi	r30, 0x8C	; 140
    95d2:	ff 4f       	sbci	r31, 0xFF	; 255
    95d4:	20 81       	ld	r18, Z
    95d6:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    95da:	31 96       	adiw	r30, 0x01	; 1
    95dc:	20 81       	ld	r18, Z
    95de:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    95e2:	31 96       	adiw	r30, 0x01	; 1
    95e4:	20 81       	ld	r18, Z
    95e6:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    95ea:	31 96       	adiw	r30, 0x01	; 1
    95ec:	20 81       	ld	r18, Z
    95ee:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    95f2:	31 96       	adiw	r30, 0x01	; 1
    95f4:	20 81       	ld	r18, Z
    95f6:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    95fa:	31 96       	adiw	r30, 0x01	; 1
    95fc:	20 81       	ld	r18, Z
    95fe:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9602:	32 e0       	ldi	r19, 0x02	; 2
    9604:	30 93 fb 13 	sts	0x13FB, r19	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9608:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    960c:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    9610:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9614:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    9618:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    961c:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    9620:	40 e0       	ldi	r20, 0x00	; 0
    9622:	50 e0       	ldi	r21, 0x00	; 0
    9624:	64 2e       	mov	r6, r20
    9626:	71 2c       	mov	r7, r1
    9628:	81 2c       	mov	r8, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    962a:	d4 9e       	mul	r13, r20
    962c:	b0 01       	movw	r22, r0
    962e:	d5 9e       	mul	r13, r21
    9630:	70 0d       	add	r23, r0
    9632:	11 24       	eor	r1, r1
    9634:	6b 5e       	subi	r22, 0xEB	; 235
    9636:	73 4f       	sbci	r23, 0xF3	; 243
    9638:	28 2d       	mov	r18, r8
    963a:	30 e0       	ldi	r19, 0x00	; 0
    963c:	fb 01       	movw	r30, r22
    963e:	e2 0f       	add	r30, r18
    9640:	f3 1f       	adc	r31, r19
    9642:	28 0f       	add	r18, r24
    9644:	39 1f       	adc	r19, r25
    9646:	d9 01       	movw	r26, r18
    9648:	ac 58       	subi	r26, 0x8C	; 140
    964a:	bf 4f       	sbci	r27, 0xFF	; 255
    964c:	31 81       	ldd	r19, Z+1	; 0x01
    964e:	2c 91       	ld	r18, X
    9650:	32 17       	cp	r19, r18
    9652:	19 f0       	breq	.+6      	; 0x965a <_Z17Doser_Pump_On_Offh+0x200>
					{
						compare_id = _kVALVE_ID_LEN;
    9654:	36 e0       	ldi	r19, 0x06	; 6
    9656:	83 2e       	mov	r8, r19
						id_len = _kRESET;
    9658:	71 2c       	mov	r7, r1
					}
					id_len++;
    965a:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    965c:	83 94       	inc	r8
    965e:	a5 e0       	ldi	r26, 0x05	; 5
    9660:	a8 15       	cp	r26, r8
    9662:	50 f7       	brcc	.-44     	; 0x9638 <_Z17Doser_Pump_On_Offh+0x1de>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9664:	b6 e0       	ldi	r27, 0x06	; 6
    9666:	7b 16       	cp	r7, r27
    9668:	09 f4       	brne	.+2      	; 0x966c <_Z17Doser_Pump_On_Offh+0x212>
    966a:	dd c0       	rjmp	.+442    	; 0x9826 <_Z17Doser_Pump_On_Offh+0x3cc>
    966c:	4f 5f       	subi	r20, 0xFF	; 255
    966e:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    9670:	46 30       	cpi	r20, 0x06	; 6
    9672:	51 05       	cpc	r21, r1
    9674:	b9 f6       	brne	.-82     	; 0x9624 <_Z17Doser_Pump_On_Offh+0x1ca>
				{
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9676:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    967a:	81 30       	cpi	r24, 0x01	; 1
    967c:	89 f4       	brne	.+34     	; 0x96a0 <_Z17Doser_Pump_On_Offh+0x246>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    967e:	64 e7       	ldi	r22, 0x74	; 116
    9680:	70 e1       	ldi	r23, 0x10	; 16
    9682:	86 ec       	ldi	r24, 0xC6	; 198
    9684:	94 e1       	ldi	r25, 0x14	; 20
    9686:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    968a:	4a e0       	ldi	r20, 0x0A	; 10
    968c:	50 e0       	ldi	r21, 0x00	; 0
    968e:	60 2f       	mov	r22, r16
    9690:	86 ec       	ldi	r24, 0xC6	; 198
    9692:	94 e1       	ldi	r25, 0x14	; 20
    9694:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9698:	86 ec       	ldi	r24, 0xC6	; 198
    969a:	94 e1       	ldi	r25, 0x14	; 20
    969c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    96a0:	ed e0       	ldi	r30, 0x0D	; 13
    96a2:	0e 9f       	mul	r16, r30
    96a4:	50 01       	movw	r10, r0
    96a6:	11 24       	eor	r1, r1
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    96a8:	81 2c       	mov	r8, r1
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    96aa:	d0 9e       	mul	r13, r16
    96ac:	c0 01       	movw	r24, r0
    96ae:	11 24       	eor	r1, r1
    96b0:	9c 01       	movw	r18, r24
    96b2:	2b 5e       	subi	r18, 0xEB	; 235
    96b4:	33 4f       	sbci	r19, 0xF3	; 243
    96b6:	a9 01       	movw	r20, r18
    96b8:	45 5f       	subi	r20, 0xF5	; 245
    96ba:	5f 4f       	sbci	r21, 0xFF	; 255
    96bc:	5a 83       	std	Y+2, r21	; 0x02
    96be:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    96c0:	19 01       	movw	r2, r18
    96c2:	58 e0       	ldi	r21, 0x08	; 8
    96c4:	25 0e       	add	r2, r21
    96c6:	31 1c       	adc	r3, r1
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    96c8:	dc 01       	movw	r26, r24
    96ca:	aa 5e       	subi	r26, 0xEA	; 234
    96cc:	b3 4f       	sbci	r27, 0xF3	; 243
    96ce:	3d 01       	movw	r6, r26
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    96d0:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    96d4:	81 11       	cpse	r24, r1
    96d6:	a9 c0       	rjmp	.+338    	; 0x982a <_Z17Doser_Pump_On_Offh+0x3d0>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    96d8:	83 94       	inc	r8
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    96da:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    96de:	81 30       	cpi	r24, 0x01	; 1
    96e0:	51 f4       	brne	.+20     	; 0x96f6 <_Z17Doser_Pump_On_Offh+0x29c>
				{
					_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    96e2:	60 e5       	ldi	r22, 0x50	; 80
    96e4:	70 e1       	ldi	r23, 0x10	; 16
    96e6:	86 ec       	ldi	r24, 0xC6	; 198
    96e8:	94 e1       	ldi	r25, 0x14	; 20
    96ea:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    96ee:	86 ec       	ldi	r24, 0xC6	; 198
    96f0:	94 e1       	ldi	r25, 0x14	; 20
    96f2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				Display_Update_1();    // 20/1/2022
    96f6:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    96fa:	8c e0       	ldi	r24, 0x0C	; 12
    96fc:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    9700:	88 eb       	ldi	r24, 0xB8	; 184
    9702:	9b e0       	ldi	r25, 0x0B	; 11
    9704:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
    9708:	88 23       	and	r24, r24
    970a:	09 f4       	brne	.+2      	; 0x970e <_Z17Doser_Pump_On_Offh+0x2b4>
    970c:	9e c1       	rjmp	.+828    	; 0x9a4a <_Z17Doser_Pump_On_Offh+0x5f0>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    970e:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
    9712:	88 23       	and	r24, r24
    9714:	09 f4       	brne	.+2      	; 0x9718 <_Z17Doser_Pump_On_Offh+0x2be>
    9716:	49 c1       	rjmp	.+658    	; 0x99aa <_Z17Doser_Pump_On_Offh+0x550>
					{
						
						if(Subscribed_data_check())
    9718:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    971c:	81 11       	cpse	r24, r1
    971e:	9a c0       	rjmp	.+308    	; 0x9854 <_Z17Doser_Pump_On_Offh+0x3fa>
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
							}
						}
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9720:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9724:	81 30       	cpi	r24, 0x01	; 1
    9726:	59 f5       	brne	.+86     	; 0x977e <_Z17Doser_Pump_On_Offh+0x324>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9728:	6a e3       	ldi	r22, 0x3A	; 58
    972a:	70 e1       	ldi	r23, 0x10	; 16
    972c:	86 ec       	ldi	r24, 0xC6	; 198
    972e:	94 e1       	ldi	r25, 0x14	; 20
    9730:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    9734:	4a e0       	ldi	r20, 0x0A	; 10
    9736:	50 e0       	ldi	r21, 0x00	; 0
    9738:	69 e0       	ldi	r22, 0x09	; 9
    973a:	74 e1       	ldi	r23, 0x14	; 20
    973c:	86 ec       	ldi	r24, 0xC6	; 198
    973e:	94 e1       	ldi	r25, 0x14	; 20
    9740:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    9744:	86 ec       	ldi	r24, 0xC6	; 198
    9746:	94 e1       	ldi	r25, 0x14	; 20
    9748:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    974c:	86 ec       	ldi	r24, 0xC6	; 198
    974e:	94 e1       	ldi	r25, 0x14	; 20
    9750:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9754:	6c e1       	ldi	r22, 0x1C	; 28
    9756:	70 e1       	ldi	r23, 0x10	; 16
    9758:	86 ec       	ldi	r24, 0xC6	; 198
    975a:	94 e1       	ldi	r25, 0x14	; 20
    975c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9760:	47 e0       	ldi	r20, 0x07	; 7
    9762:	50 e0       	ldi	r21, 0x00	; 0
    9764:	b3 01       	movw	r22, r6
    9766:	86 ec       	ldi	r24, 0xC6	; 198
    9768:	94 e1       	ldi	r25, 0x14	; 20
    976a:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
							Serial.println();
    976e:	86 ec       	ldi	r24, 0xC6	; 198
    9770:	94 e1       	ldi	r25, 0x14	; 20
    9772:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9776:	86 ec       	ldi	r24, 0xC6	; 198
    9778:	94 e1       	ldi	r25, 0x14	; 20
    977a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    977e:	a9 e0       	ldi	r26, 0x09	; 9
    9780:	b4 e1       	ldi	r27, 0x14	; 20
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9782:	80 e0       	ldi	r24, 0x00	; 0
    9784:	90 e0       	ldi	r25, 0x00	; 0
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    9786:	2d 91       	ld	r18, X+
    9788:	f5 01       	movw	r30, r10
    978a:	e8 0f       	add	r30, r24
    978c:	f9 1f       	adc	r31, r25
    978e:	eb 5e       	subi	r30, 0xEB	; 235
    9790:	f3 4f       	sbci	r31, 0xF3	; 243
    9792:	31 81       	ldd	r19, Z+1	; 0x01
    9794:	32 17       	cp	r19, r18
    9796:	09 f4       	brne	.+2      	; 0x979a <_Z17Doser_Pump_On_Offh+0x340>
    9798:	b2 c0       	rjmp	.+356    	; 0x98fe <_Z17Doser_Pump_On_Offh+0x4a4>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    979a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    979e:	81 30       	cpi	r24, 0x01	; 1
    97a0:	51 f4       	brne	.+20     	; 0x97b6 <_Z17Doser_Pump_On_Offh+0x35c>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    97a2:	61 ef       	ldi	r22, 0xF1	; 241
    97a4:	7f e0       	ldi	r23, 0x0F	; 15
    97a6:	86 ec       	ldi	r24, 0xC6	; 198
    97a8:	94 e1       	ldi	r25, 0x14	; 20
    97aa:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    97ae:	86 ec       	ldi	r24, 0xC6	; 198
    97b0:	94 e1       	ldi	r25, 0x14	; 20
    97b2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    97b6:	b2 e0       	ldi	r27, 0x02	; 2
    97b8:	8b 16       	cp	r8, r27
    97ba:	09 f4       	brne	.+2      	; 0x97be <_Z17Doser_Pump_On_Offh+0x364>
    97bc:	60 c0       	rjmp	.+192    	; 0x987e <_Z17Doser_Pump_On_Offh+0x424>
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    97be:	e9 81       	ldd	r30, Y+1	; 0x01
    97c0:	fa 81       	ldd	r31, Y+2	; 0x02
    97c2:	90 82       	st	Z, r9
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    97c4:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    97c8:	90 e0       	ldi	r25, 0x00	; 0
    97ca:	98 2f       	mov	r25, r24
    97cc:	88 27       	eor	r24, r24
    97ce:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    97d2:	82 2b       	or	r24, r18
    97d4:	d1 01       	movw	r26, r2
    97d6:	8d 93       	st	X+, r24
    97d8:	9c 93       	st	X, r25
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    97da:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    97de:	18 13       	cpse	r17, r24
    97e0:	94 c0       	rjmp	.+296    	; 0x990a <_Z17Doser_Pump_On_Offh+0x4b0>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    97e2:	83 e0       	ldi	r24, 0x03	; 3
    97e4:	88 2e       	mov	r8, r24
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    97e6:	68 ee       	ldi	r22, 0xE8	; 232
    97e8:	73 e0       	ldi	r23, 0x03	; 3
    97ea:	80 e0       	ldi	r24, 0x00	; 0
    97ec:	90 e0       	ldi	r25, 0x00	; 0
    97ee:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    97f2:	33 e0       	ldi	r19, 0x03	; 3
    97f4:	83 12       	cpse	r8, r19
    97f6:	6c cf       	rjmp	.-296    	; 0x96d0 <_Z17Doser_Pump_On_Offh+0x276>
			_kSERIAL_MON_CLEAR();
		}
	}
	
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    97f8:	52 ef       	ldi	r21, 0xF2	; 242
    97fa:	e5 16       	cp	r14, r21
    97fc:	5d e0       	ldi	r21, 0x0D	; 13
    97fe:	f5 06       	cpc	r15, r21
    9800:	09 f4       	brne	.+2      	; 0x9804 <_Z17Doser_Pump_On_Offh+0x3aa>
    9802:	89 c1       	rjmp	.+786    	; 0x9b16 <_Z17Doser_Pump_On_Offh+0x6bc>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > 0)
    9804:	d7 01       	movw	r26, r14
    9806:	8d 90       	ld	r8, X+
    9808:	7d 01       	movw	r14, r26
    980a:	8f ef       	ldi	r24, 0xFF	; 255
    980c:	88 0d       	add	r24, r8
    980e:	82 31       	cpi	r24, 0x12	; 18
    9810:	08 f0       	brcs	.+2      	; 0x9814 <_Z17Doser_Pump_On_Offh+0x3ba>
    9812:	6b c1       	rjmp	.+726    	; 0x9aea <_Z17Doser_Pump_On_Offh+0x690>
    9814:	9d ce       	rjmp	.-710    	; 0x9550 <_Z17Doser_Pump_On_Offh+0xf6>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9816:	72 2e       	mov	r7, r18
    9818:	76 94       	lsr	r7
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    981a:	43 e0       	ldi	r20, 0x03	; 3
    981c:	84 2e       	mov	r8, r20
    981e:	ac ce       	rjmp	.-680    	; 0x9578 <_Z17Doser_Pump_On_Offh+0x11e>
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    9820:	77 24       	eor	r7, r7
    9822:	73 94       	inc	r7
    9824:	a9 ce       	rjmp	.-686    	; 0x9578 <_Z17Doser_Pump_On_Offh+0x11e>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9826:	06 2d       	mov	r16, r6
    9828:	26 cf       	rjmp	.-436    	; 0x9676 <_Z17Doser_Pump_On_Offh+0x21c>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    982a:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    982e:	88 23       	and	r24, r24
    9830:	09 f4       	brne	.+2      	; 0x9834 <_Z17Doser_Pump_On_Offh+0x3da>
    9832:	52 cf       	rjmp	.-348    	; 0x96d8 <_Z17Doser_Pump_On_Offh+0x27e>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9834:	f2 01       	movw	r30, r4
    9836:	01 90       	ld	r0, Z+
    9838:	00 20       	and	r0, r0
    983a:	e9 f7       	brne	.-6      	; 0x9836 <_Z17Doser_Pump_On_Offh+0x3dc>
    983c:	31 97       	sbiw	r30, 0x01	; 1
    983e:	af 01       	movw	r20, r30
    9840:	40 5d       	subi	r20, 0xD0	; 208
    9842:	5f 40       	sbci	r21, 0x0F	; 15
    9844:	21 e0       	ldi	r18, 0x01	; 1
    9846:	60 ed       	ldi	r22, 0xD0	; 208
    9848:	7f e0       	ldi	r23, 0x0F	; 15
    984a:	82 e6       	ldi	r24, 0x62	; 98
    984c:	9f e0       	ldi	r25, 0x0F	; 15
    984e:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
    9852:	42 cf       	rjmp	.-380    	; 0x96d8 <_Z17Doser_Pump_On_Offh+0x27e>
					if(_kLORA_RECV_DATA())            /* check the received data */
					{
						
						if(Subscribed_data_check())
						{
							if(Seperate_Out_Sub_Data())
    9854:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    9858:	88 23       	and	r24, r24
    985a:	09 f4       	brne	.+2      	; 0x985e <_Z17Doser_Pump_On_Offh+0x404>
    985c:	61 cf       	rjmp	.-318    	; 0x9720 <_Z17Doser_Pump_On_Offh+0x2c6>
							{
								//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    985e:	f2 01       	movw	r30, r4
    9860:	01 90       	ld	r0, Z+
    9862:	00 20       	and	r0, r0
    9864:	e9 f7       	brne	.-6      	; 0x9860 <_Z17Doser_Pump_On_Offh+0x406>
    9866:	31 97       	sbiw	r30, 0x01	; 1
    9868:	af 01       	movw	r20, r30
    986a:	40 5d       	subi	r20, 0xD0	; 208
    986c:	5f 40       	sbci	r21, 0x0F	; 15
    986e:	21 e0       	ldi	r18, 0x01	; 1
    9870:	60 ed       	ldi	r22, 0xD0	; 208
    9872:	7f e0       	ldi	r23, 0x0F	; 15
    9874:	82 e6       	ldi	r24, 0x62	; 98
    9876:	9f e0       	ldi	r25, 0x0F	; 15
    9878:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
    987c:	51 cf       	rjmp	.-350    	; 0x9720 <_Z17Doser_Pump_On_Offh+0x2c6>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    987e:	86 e0       	ldi	r24, 0x06	; 6
    9880:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    9884:	84 e6       	ldi	r24, 0x64	; 100
    9886:	90 e0       	ldi	r25, 0x00	; 0
    9888:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    988c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9890:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    9894:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    9898:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    989c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    98a0:	a0 62       	ori	r26, 0x20	; 32
    98a2:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    98a6:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    98aa:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    98ae:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    98b2:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    98b6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    98ba:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    98be:	82 60       	ori	r24, 0x02	; 2
    98c0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    98c4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
									{
										if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    98c8:	ab 81       	ldd	r26, Y+3	; 0x03
    98ca:	bc 81       	ldd	r27, Y+4	; 0x04
    98cc:	ed 91       	ld	r30, X+
    98ce:	bc 83       	std	Y+4, r27	; 0x04
    98d0:	ab 83       	std	Y+3, r26	; 0x03
    98d2:	e3 31       	cpi	r30, 0x13	; 19
    98d4:	68 f0       	brcs	.+26     	; 0x98f0 <_Z17Doser_Pump_On_Offh+0x496>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    98d6:	f0 e0       	ldi	r31, 0x00	; 0
    98d8:	e7 5c       	subi	r30, 0xC7	; 199
    98da:	fb 4e       	sbci	r31, 0xEB	; 235
    98dc:	61 e0       	ldi	r22, 0x01	; 1
    98de:	80 81       	ld	r24, Z
    98e0:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
											_kDELAY_MS(200);
    98e4:	68 ec       	ldi	r22, 0xC8	; 200
    98e6:	70 e0       	ldi	r23, 0x00	; 0
    98e8:	80 e0       	ldi	r24, 0x00	; 0
    98ea:	90 e0       	ldi	r25, 0x00	; 0
    98ec:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    98f0:	eb 81       	ldd	r30, Y+3	; 0x03
    98f2:	fc 81       	ldd	r31, Y+4	; 0x04
    98f4:	e2 5f       	subi	r30, 0xF2	; 242
    98f6:	fd 40       	sbci	r31, 0x0D	; 13
    98f8:	39 f7       	brne	.-50     	; 0x98c8 <_Z17Doser_Pump_On_Offh+0x46e>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    98fa:	80 e0       	ldi	r24, 0x00	; 0
    98fc:	42 c1       	rjmp	.+644    	; 0x9b82 <_Z17Doser_Pump_On_Offh+0x728>
    98fe:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    9900:	86 30       	cpi	r24, 0x06	; 6
    9902:	91 05       	cpc	r25, r1
    9904:	09 f0       	breq	.+2      	; 0x9908 <_Z17Doser_Pump_On_Offh+0x4ae>
    9906:	3f cf       	rjmp	.-386    	; 0x9786 <_Z17Doser_Pump_On_Offh+0x32c>
    9908:	5a cf       	rjmp	.-332    	; 0x97be <_Z17Doser_Pump_On_Offh+0x364>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    990a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    990e:	81 30       	cpi	r24, 0x01	; 1
    9910:	51 f4       	brne	.+20     	; 0x9926 <_Z17Doser_Pump_On_Offh+0x4cc>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    9912:	6e ed       	ldi	r22, 0xDE	; 222
    9914:	7f e0       	ldi	r23, 0x0F	; 15
    9916:	86 ec       	ldi	r24, 0xC6	; 198
    9918:	94 e1       	ldi	r25, 0x14	; 20
    991a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    991e:	86 ec       	ldi	r24, 0xC6	; 198
    9920:	94 e1       	ldi	r25, 0x14	; 20
    9922:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9926:	32 e0       	ldi	r19, 0x02	; 2
    9928:	83 12       	cpse	r8, r19
    992a:	5d cf       	rjmp	.-326    	; 0x97e6 <_Z17Doser_Pump_On_Offh+0x38c>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    992c:	86 e0       	ldi	r24, 0x06	; 6
    992e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    9932:	84 e6       	ldi	r24, 0x64	; 100
    9934:	90 e0       	ldi	r25, 0x00	; 0
    9936:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    993a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    993e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    9942:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    9946:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    994a:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    994e:	a0 62       	ori	r26, 0x20	; 32
    9950:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9954:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9958:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    995c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    9960:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9964:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9968:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    996c:	82 60       	ori	r24, 0x02	; 2
    996e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9972:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
								{
									if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9976:	ab 81       	ldd	r26, Y+3	; 0x03
    9978:	bc 81       	ldd	r27, Y+4	; 0x04
    997a:	ed 91       	ld	r30, X+
    997c:	bc 83       	std	Y+4, r27	; 0x04
    997e:	ab 83       	std	Y+3, r26	; 0x03
    9980:	e3 31       	cpi	r30, 0x13	; 19
    9982:	68 f0       	brcs	.+26     	; 0x999e <_Z17Doser_Pump_On_Offh+0x544>
									{
										/********************************* turn on/off the wired valve *********************************/
																				
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9984:	f0 e0       	ldi	r31, 0x00	; 0
    9986:	e7 5c       	subi	r30, 0xC7	; 199
    9988:	fb 4e       	sbci	r31, 0xEB	; 235
    998a:	61 e0       	ldi	r22, 0x01	; 1
    998c:	80 81       	ld	r24, Z
    998e:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
										_kDELAY_MS(200);
    9992:	68 ec       	ldi	r22, 0xC8	; 200
    9994:	70 e0       	ldi	r23, 0x00	; 0
    9996:	80 e0       	ldi	r24, 0x00	; 0
    9998:	90 e0       	ldi	r25, 0x00	; 0
    999a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    999e:	eb 81       	ldd	r30, Y+3	; 0x03
    99a0:	fc 81       	ldd	r31, Y+4	; 0x04
    99a2:	e2 5f       	subi	r30, 0xF2	; 242
    99a4:	fd 40       	sbci	r31, 0x0D	; 13
    99a6:	39 f7       	brne	.-50     	; 0x9976 <_Z17Doser_Pump_On_Offh+0x51c>
    99a8:	a8 cf       	rjmp	.-176    	; 0x98fa <_Z17Doser_Pump_On_Offh+0x4a0>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    99aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    99ae:	81 30       	cpi	r24, 0x01	; 1
    99b0:	51 f4       	brne	.+20     	; 0x99c6 <_Z17Doser_Pump_On_Offh+0x56c>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    99b2:	63 ea       	ldi	r22, 0xA3	; 163
    99b4:	7f e0       	ldi	r23, 0x0F	; 15
    99b6:	86 ec       	ldi	r24, 0xC6	; 198
    99b8:	94 e1       	ldi	r25, 0x14	; 20
    99ba:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    99be:	86 ec       	ldi	r24, 0xC6	; 198
    99c0:	94 e1       	ldi	r25, 0x14	; 20
    99c2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    99c6:	32 e0       	ldi	r19, 0x02	; 2
    99c8:	83 12       	cpse	r8, r19
    99ca:	0d cf       	rjmp	.-486    	; 0x97e6 <_Z17Doser_Pump_On_Offh+0x38c>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    99cc:	86 e0       	ldi	r24, 0x06	; 6
    99ce:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    99d2:	84 e6       	ldi	r24, 0x64	; 100
    99d4:	90 e0       	ldi	r25, 0x00	; 0
    99d6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    99da:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    99de:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    99e2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    99e6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    99ea:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    99ee:	a0 62       	ori	r26, 0x20	; 32
    99f0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    99f4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    99f8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    99fc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    9a00:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9a04:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9a08:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9a0c:	82 60       	ori	r24, 0x02	; 2
    9a0e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9a12:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
							{
								if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9a16:	ab 81       	ldd	r26, Y+3	; 0x03
    9a18:	bc 81       	ldd	r27, Y+4	; 0x04
    9a1a:	ed 91       	ld	r30, X+
    9a1c:	bc 83       	std	Y+4, r27	; 0x04
    9a1e:	ab 83       	std	Y+3, r26	; 0x03
    9a20:	e3 31       	cpi	r30, 0x13	; 19
    9a22:	68 f0       	brcs	.+26     	; 0x9a3e <_Z17Doser_Pump_On_Offh+0x5e4>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9a24:	f0 e0       	ldi	r31, 0x00	; 0
    9a26:	e7 5c       	subi	r30, 0xC7	; 199
    9a28:	fb 4e       	sbci	r31, 0xEB	; 235
    9a2a:	61 e0       	ldi	r22, 0x01	; 1
    9a2c:	80 81       	ld	r24, Z
    9a2e:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
									_kDELAY_MS(200);
    9a32:	68 ec       	ldi	r22, 0xC8	; 200
    9a34:	70 e0       	ldi	r23, 0x00	; 0
    9a36:	80 e0       	ldi	r24, 0x00	; 0
    9a38:	90 e0       	ldi	r25, 0x00	; 0
    9a3a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9a3e:	eb 81       	ldd	r30, Y+3	; 0x03
    9a40:	fc 81       	ldd	r31, Y+4	; 0x04
    9a42:	e2 5f       	subi	r30, 0xF2	; 242
    9a44:	fd 40       	sbci	r31, 0x0D	; 13
    9a46:	39 f7       	brne	.-50     	; 0x9a16 <_Z17Doser_Pump_On_Offh+0x5bc>
    9a48:	58 cf       	rjmp	.-336    	; 0x98fa <_Z17Doser_Pump_On_Offh+0x4a0>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9a4a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9a4e:	81 30       	cpi	r24, 0x01	; 1
    9a50:	51 f4       	brne	.+20     	; 0x9a66 <_Z17Doser_Pump_On_Offh+0x60c>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    9a52:	68 e6       	ldi	r22, 0x68	; 104
    9a54:	7f e0       	ldi	r23, 0x0F	; 15
    9a56:	86 ec       	ldi	r24, 0xC6	; 198
    9a58:	94 e1       	ldi	r25, 0x14	; 20
    9a5a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9a5e:	86 ec       	ldi	r24, 0xC6	; 198
    9a60:	94 e1       	ldi	r25, 0x14	; 20
    9a62:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					//RF95_setModeRx_Continuous();
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9a66:	32 e0       	ldi	r19, 0x02	; 2
    9a68:	83 12       	cpse	r8, r19
    9a6a:	bd ce       	rjmp	.-646    	; 0x97e6 <_Z17Doser_Pump_On_Offh+0x38c>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9a6c:	86 e0       	ldi	r24, 0x06	; 6
    9a6e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    9a72:	84 e6       	ldi	r24, 0x64	; 100
    9a74:	90 e0       	ldi	r25, 0x00	; 0
    9a76:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    9a7a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9a7e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    9a82:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    9a86:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    9a8a:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    9a8e:	a0 62       	ori	r26, 0x20	; 32
    9a90:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9a94:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9a98:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    9a9c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    9aa0:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9aa4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9aa8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9aac:	82 60       	ori	r24, 0x02	; 2
    9aae:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9ab2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
						{
							if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9ab6:	ab 81       	ldd	r26, Y+3	; 0x03
    9ab8:	bc 81       	ldd	r27, Y+4	; 0x04
    9aba:	ed 91       	ld	r30, X+
    9abc:	bc 83       	std	Y+4, r27	; 0x04
    9abe:	ab 83       	std	Y+3, r26	; 0x03
    9ac0:	e3 31       	cpi	r30, 0x13	; 19
    9ac2:	68 f0       	brcs	.+26     	; 0x9ade <_Z17Doser_Pump_On_Offh+0x684>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9ac4:	f0 e0       	ldi	r31, 0x00	; 0
    9ac6:	e7 5c       	subi	r30, 0xC7	; 199
    9ac8:	fb 4e       	sbci	r31, 0xEB	; 235
    9aca:	61 e0       	ldi	r22, 0x01	; 1
    9acc:	80 81       	ld	r24, Z
    9ace:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
								_kDELAY_MS(200);
    9ad2:	68 ec       	ldi	r22, 0xC8	; 200
    9ad4:	70 e0       	ldi	r23, 0x00	; 0
    9ad6:	80 e0       	ldi	r24, 0x00	; 0
    9ad8:	90 e0       	ldi	r25, 0x00	; 0
    9ada:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9ade:	eb 81       	ldd	r30, Y+3	; 0x03
    9ae0:	fc 81       	ldd	r31, Y+4	; 0x04
    9ae2:	e2 5f       	subi	r30, 0xF2	; 242
    9ae4:	fd 40       	sbci	r31, 0x0D	; 13
    9ae6:	39 f7       	brne	.-50     	; 0x9ab6 <_Z17Doser_Pump_On_Offh+0x65c>
    9ae8:	08 cf       	rjmp	.-496    	; 0x98fa <_Z17Doser_Pump_On_Offh+0x4a0>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9aea:	42 e1       	ldi	r20, 0x12	; 18
    9aec:	48 15       	cp	r20, r8
    9aee:	08 f0       	brcs	.+2      	; 0x9af2 <_Z17Doser_Pump_On_Offh+0x698>
    9af0:	83 ce       	rjmp	.-762    	; 0x97f8 <_Z17Doser_Pump_On_Offh+0x39e>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9af2:	61 e0       	ldi	r22, 0x01	; 1
    9af4:	11 11       	cpse	r17, r1
    9af6:	60 e0       	ldi	r22, 0x00	; 0
    9af8:	28 2d       	mov	r18, r8
    9afa:	30 e0       	ldi	r19, 0x00	; 0
    9afc:	f9 01       	movw	r30, r18
    9afe:	e7 5c       	subi	r30, 0xC7	; 199
    9b00:	fb 4e       	sbci	r31, 0xEB	; 235
    9b02:	80 81       	ld	r24, Z
    9b04:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
			_kDELAY_MS(200);
    9b08:	68 ec       	ldi	r22, 0xC8	; 200
    9b0a:	70 e0       	ldi	r23, 0x00	; 0
    9b0c:	80 e0       	ldi	r24, 0x00	; 0
    9b0e:	90 e0       	ldi	r25, 0x00	; 0
    9b10:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    9b14:	71 ce       	rjmp	.-798    	; 0x97f8 <_Z17Doser_Pump_On_Offh+0x39e>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9b16:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9b1a:	81 30       	cpi	r24, 0x01	; 1
    9b1c:	51 f4       	brne	.+20     	; 0x9b32 <_Z17Doser_Pump_On_Offh+0x6d8>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9b1e:	69 e4       	ldi	r22, 0x49	; 73
    9b20:	7f e0       	ldi	r23, 0x0F	; 15
    9b22:	86 ec       	ldi	r24, 0xC6	; 198
    9b24:	94 e1       	ldi	r25, 0x14	; 20
    9b26:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9b2a:	86 ec       	ldi	r24, 0xC6	; 198
    9b2c:	94 e1       	ldi	r25, 0x14	; 20
    9b2e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	
	
	
	if(on_off == _kOFF)
    9b32:	11 11       	cpse	r17, r1
    9b34:	14 c0       	rjmp	.+40     	; 0x9b5e <_Z17Doser_Pump_On_Offh+0x704>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status != _kSCHEDULER_OFF)
    9b36:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    9b3a:	85 30       	cpi	r24, 0x05	; 5
    9b3c:	09 f1       	breq	.+66     	; 0x9b80 <_Z17Doser_Pump_On_Offh+0x726>
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9b3e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9b42:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b46:	90 62       	ori	r25, 0x20	; 32
    9b48:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b4c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    9b50:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9b54:	82 e0       	ldi	r24, 0x02	; 2
    9b56:	80 93 02 0e 	sts	0x0E02, r24	; 0x800e02 <_sExtra_Plot+0x1a>
			
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_OFF;
    9b5a:	85 e0       	ldi	r24, 0x05	; 5
    9b5c:	0f c0       	rjmp	.+30     	; 0x9b7c <_Z17Doser_Pump_On_Offh+0x722>
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9b5e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9b62:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b66:	90 62       	ori	r25, 0x20	; 32
    9b68:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b6c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    9b70:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9b74:	82 e0       	ldi	r24, 0x02	; 2
    9b76:	80 93 02 0e 	sts	0x0E02, r24	; 0x800e02 <_sExtra_Plot+0x1a>
		
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_ON;
    9b7a:	84 e0       	ldi	r24, 0x04	; 4
    9b7c:	80 93 ea 0d 	sts	0x0DEA, r24	; 0x800dea <_sExtra_Plot+0x2>
	}
	
	return 1;
    9b80:	81 e0       	ldi	r24, 0x01	; 1
}
    9b82:	0f 90       	pop	r0
    9b84:	0f 90       	pop	r0
    9b86:	0f 90       	pop	r0
    9b88:	0f 90       	pop	r0
    9b8a:	df 91       	pop	r29
    9b8c:	cf 91       	pop	r28
    9b8e:	1f 91       	pop	r17
    9b90:	0f 91       	pop	r16
    9b92:	ff 90       	pop	r15
    9b94:	ef 90       	pop	r14
    9b96:	df 90       	pop	r13
    9b98:	cf 90       	pop	r12
    9b9a:	bf 90       	pop	r11
    9b9c:	af 90       	pop	r10
    9b9e:	9f 90       	pop	r9
    9ba0:	8f 90       	pop	r8
    9ba2:	7f 90       	pop	r7
    9ba4:	6f 90       	pop	r6
    9ba6:	5f 90       	pop	r5
    9ba8:	4f 90       	pop	r4
    9baa:	3f 90       	pop	r3
    9bac:	2f 90       	pop	r2
    9bae:	08 95       	ret

00009bb0 <_Z22Fertilizer_Tank_On_Offhh>:
		}
	}
}

char Fertilizer_Tank_On_Off(unsigned char tank_number, unsigned char on_off)
{
    9bb0:	2f 92       	push	r2
    9bb2:	3f 92       	push	r3
    9bb4:	4f 92       	push	r4
    9bb6:	5f 92       	push	r5
    9bb8:	6f 92       	push	r6
    9bba:	7f 92       	push	r7
    9bbc:	8f 92       	push	r8
    9bbe:	9f 92       	push	r9
    9bc0:	af 92       	push	r10
    9bc2:	bf 92       	push	r11
    9bc4:	cf 92       	push	r12
    9bc6:	df 92       	push	r13
    9bc8:	ef 92       	push	r14
    9bca:	ff 92       	push	r15
    9bcc:	0f 93       	push	r16
    9bce:	1f 93       	push	r17
    9bd0:	cf 93       	push	r28
    9bd2:	df 93       	push	r29
    9bd4:	00 d0       	rcall	.+0      	; 0x9bd6 <_Z22Fertilizer_Tank_On_Offhh+0x26>
    9bd6:	00 d0       	rcall	.+0      	; 0x9bd8 <_Z22Fertilizer_Tank_On_Offhh+0x28>
    9bd8:	cd b7       	in	r28, 0x3d	; 61
    9bda:	de b7       	in	r29, 0x3e	; 62
    9bdc:	f8 2e       	mov	r15, r24
    9bde:	b6 2e       	mov	r11, r22
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	
	if(_sSchedules.Fertilizer_Tank_Number[tank_number] < 100)
    9be0:	28 2f       	mov	r18, r24
    9be2:	30 e0       	ldi	r19, 0x00	; 0
    9be4:	22 5e       	subi	r18, 0xE2	; 226
    9be6:	36 4f       	sbci	r19, 0xF6	; 246
    9be8:	3e 83       	std	Y+6, r19	; 0x06
    9bea:	2d 83       	std	Y+5, r18	; 0x05
    9bec:	89 01       	movw	r16, r18
    9bee:	06 58       	subi	r16, 0x86	; 134
    9bf0:	1f 4f       	sbci	r17, 0xFF	; 255
    9bf2:	f8 01       	movw	r30, r16
    9bf4:	80 81       	ld	r24, Z
    9bf6:	84 36       	cpi	r24, 0x64	; 100
    9bf8:	60 f4       	brcc	.+24     	; 0x9c12 <_Z22Fertilizer_Tank_On_Offhh+0x62>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9bfa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9bfe:	81 30       	cpi	r24, 0x01	; 1
    9c00:	09 f0       	breq	.+2      	; 0x9c04 <_Z22Fertilizer_Tank_On_Offhh+0x54>
    9c02:	46 c2       	rjmp	.+1164   	; 0xa090 <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("fertilizer tank number is less than 100 : ");
    9c04:	62 ea       	ldi	r22, 0xA2	; 162
    9c06:	72 e1       	ldi	r23, 0x12	; 18
    9c08:	86 ec       	ldi	r24, 0xC6	; 198
    9c0a:	94 e1       	ldi	r25, 0x14	; 20
    9c0c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    9c10:	3b c2       	rjmp	.+1142   	; 0xa088 <_Z22Fertilizer_Tank_On_Offhh+0x4d8>
			_kSERIAL_MON_CLEAR();
		}
		return 1;
	}
	
	if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number] - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET)
    9c12:	f8 01       	movw	r30, r16
    9c14:	80 81       	ld	r24, Z
    9c16:	90 e0       	ldi	r25, 0x00	; 0
    9c18:	85 56       	subi	r24, 0x65	; 101
    9c1a:	91 09       	sbc	r25, r1
    9c1c:	2b e1       	ldi	r18, 0x1B	; 27
    9c1e:	28 9f       	mul	r18, r24
    9c20:	f0 01       	movw	r30, r0
    9c22:	29 9f       	mul	r18, r25
    9c24:	f0 0d       	add	r31, r0
    9c26:	11 24       	eor	r1, r1
    9c28:	e8 51       	subi	r30, 0x18	; 24
    9c2a:	f2 4f       	sbci	r31, 0xF2	; 242
    9c2c:	80 81       	ld	r24, Z
    9c2e:	81 11       	cpse	r24, r1
    9c30:	2f c2       	rjmp	.+1118   	; 0xa090 <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9c36:	81 30       	cpi	r24, 0x01	; 1
    9c38:	91 f0       	breq	.+36     	; 0x9c5e <_Z22Fertilizer_Tank_On_Offhh+0xae>
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
		_kSERIAL_MON_CLEAR();
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
    9c3a:	e1 2c       	mov	r14, r1
    9c3c:	f1 2c       	mov	r15, r1
    9c3e:	10 e0       	ldi	r17, 0x00	; 0
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9c40:	cd 80       	ldd	r12, Y+5	; 0x05
    9c42:	de 80       	ldd	r13, Y+6	; 0x06
    9c44:	fa e7       	ldi	r31, 0x7A	; 122
    9c46:	cf 0e       	add	r12, r31
    9c48:	d1 1c       	adc	r13, r1
    9c4a:	0b e1       	ldi	r16, 0x1B	; 27
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9c4c:	b7 e0       	ldi	r27, 0x07	; 7
    9c4e:	9b 2e       	mov	r9, r27
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9c50:	8d e0       	ldi	r24, 0x0D	; 13
    9c52:	a8 2e       	mov	r10, r24
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9c54:	90 ed       	ldi	r25, 0xD0	; 208
    9c56:	29 2e       	mov	r2, r25
    9c58:	9f e0       	ldi	r25, 0x0F	; 15
    9c5a:	39 2e       	mov	r3, r25
    9c5c:	c2 c1       	rjmp	.+900    	; 0x9fe2 <_Z22Fertilizer_Tank_On_Offhh+0x432>
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
    9c5e:	68 e8       	ldi	r22, 0x88	; 136
    9c60:	72 e1       	ldi	r23, 0x12	; 18
    9c62:	86 ec       	ldi	r24, 0xC6	; 198
    9c64:	94 e1       	ldi	r25, 0x14	; 20
    9c66:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9c6a:	86 ec       	ldi	r24, 0xC6	; 198
    9c6c:	94 e1       	ldi	r25, 0x14	; 20
    9c6e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
    9c72:	4a e0       	ldi	r20, 0x0A	; 10
    9c74:	50 e0       	ldi	r21, 0x00	; 0
    9c76:	6f 2d       	mov	r22, r15
    9c78:	86 ec       	ldi	r24, 0xC6	; 198
    9c7a:	94 e1       	ldi	r25, 0x14	; 20
    9c7c:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
		_kSERIAL_MON_CLEAR();
    9c80:	86 ec       	ldi	r24, 0xC6	; 198
    9c82:	94 e1       	ldi	r25, 0x14	; 20
    9c84:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
    9c88:	6a e6       	ldi	r22, 0x6A	; 106
    9c8a:	72 e1       	ldi	r23, 0x12	; 18
    9c8c:	86 ec       	ldi	r24, 0xC6	; 198
    9c8e:	94 e1       	ldi	r25, 0x14	; 20
    9c90:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9c94:	86 ec       	ldi	r24, 0xC6	; 198
    9c96:	94 e1       	ldi	r25, 0x14	; 20
    9c98:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    9c9c:	e1 2c       	mov	r14, r1
    9c9e:	f1 2c       	mov	r15, r1
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]);
    9ca0:	ab e1       	ldi	r26, 0x1B	; 27
    9ca2:	da 2e       	mov	r13, r26
    9ca4:	f8 01       	movw	r30, r16
    9ca6:	80 81       	ld	r24, Z
    9ca8:	90 e0       	ldi	r25, 0x00	; 0
    9caa:	85 56       	subi	r24, 0x65	; 101
    9cac:	91 09       	sbc	r25, r1
    9cae:	d8 9e       	mul	r13, r24
    9cb0:	f0 01       	movw	r30, r0
    9cb2:	d9 9e       	mul	r13, r25
    9cb4:	f0 0d       	add	r31, r0
    9cb6:	11 24       	eor	r1, r1
    9cb8:	e8 51       	subi	r30, 0x18	; 24
    9cba:	f2 4f       	sbci	r31, 0xF2	; 242
    9cbc:	ee 0d       	add	r30, r14
    9cbe:	ff 1d       	adc	r31, r15
    9cc0:	4a e0       	ldi	r20, 0x0A	; 10
    9cc2:	50 e0       	ldi	r21, 0x00	; 0
    9cc4:	65 81       	ldd	r22, Z+5	; 0x05
    9cc6:	86 ec       	ldi	r24, 0xC6	; 198
    9cc8:	94 e1       	ldi	r25, 0x14	; 20
    9cca:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    9cce:	68 e6       	ldi	r22, 0x68	; 104
    9cd0:	72 e1       	ldi	r23, 0x12	; 18
    9cd2:	86 ec       	ldi	r24, 0xC6	; 198
    9cd4:	94 e1       	ldi	r25, 0x14	; 20
    9cd6:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    9cda:	ff ef       	ldi	r31, 0xFF	; 255
    9cdc:	ef 1a       	sub	r14, r31
    9cde:	ff 0a       	sbc	r15, r31
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9ce0:	25 e0       	ldi	r18, 0x05	; 5
    9ce2:	e2 16       	cp	r14, r18
    9ce4:	f1 04       	cpc	r15, r1
    9ce6:	f1 f6       	brne	.-68     	; 0x9ca4 <_Z22Fertilizer_Tank_On_Offhh+0xf4>
    9ce8:	a8 cf       	rjmp	.-176    	; 0x9c3a <_Z22Fertilizer_Tank_On_Offhh+0x8a>
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9cea:	f6 01       	movw	r30, r12
    9cec:	80 81       	ld	r24, Z
    9cee:	90 e0       	ldi	r25, 0x00	; 0
    9cf0:	85 56       	subi	r24, 0x65	; 101
    9cf2:	91 09       	sbc	r25, r1
    9cf4:	08 9f       	mul	r16, r24
    9cf6:	f0 01       	movw	r30, r0
    9cf8:	09 9f       	mul	r16, r25
    9cfa:	f0 0d       	add	r31, r0
    9cfc:	11 24       	eor	r1, r1
    9cfe:	e8 51       	subi	r30, 0x18	; 24
    9d00:	f2 4f       	sbci	r31, 0xF2	; 242
    9d02:	ee 0d       	add	r30, r14
    9d04:	ff 1d       	adc	r31, r15
    9d06:	85 81       	ldd	r24, Z+5	; 0x05
    9d08:	88 23       	and	r24, r24
    9d0a:	09 f4       	brne	.+2      	; 0x9d0e <_Z22Fertilizer_Tank_On_Offhh+0x15e>
    9d0c:	c3 c1       	rjmp	.+902    	; 0xa094 <_Z22Fertilizer_Tank_On_Offhh+0x4e4>
		{
			unsigned char valve_number = 0;
			unsigned char euro_valve_num = 0,command_valve = 0;
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
    9d0e:	f6 01       	movw	r30, r12
    9d10:	80 81       	ld	r24, Z
    9d12:	90 e0       	ldi	r25, 0x00	; 0
    9d14:	85 56       	subi	r24, 0x65	; 101
    9d16:	91 09       	sbc	r25, r1
    9d18:	08 9f       	mul	r16, r24
    9d1a:	f0 01       	movw	r30, r0
    9d1c:	09 9f       	mul	r16, r25
    9d1e:	f0 0d       	add	r31, r0
    9d20:	11 24       	eor	r1, r1
    9d22:	e8 51       	subi	r30, 0x18	; 24
    9d24:	f2 4f       	sbci	r31, 0xF2	; 242
    9d26:	ee 0d       	add	r30, r14
    9d28:	ff 1d       	adc	r31, r15
    9d2a:	85 80       	ldd	r8, Z+5	; 0x05
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9d2c:	f3 e0       	ldi	r31, 0x03	; 3
    9d2e:	f8 15       	cp	r31, r8
    9d30:	08 f0       	brcs	.+2      	; 0x9d34 <_Z22Fertilizer_Tank_On_Offhh+0x184>
    9d32:	63 c2       	rjmp	.+1222   	; 0xa1fa <_Z22Fertilizer_Tank_On_Offhh+0x64a>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9d34:	6b ea       	ldi	r22, 0xAB	; 171
    9d36:	86 9e       	mul	r8, r22
    9d38:	71 2c       	mov	r7, r1
    9d3a:	11 24       	eor	r1, r1
    9d3c:	87 2d       	mov	r24, r7
    9d3e:	86 95       	lsr	r24
    9d40:	98 2f       	mov	r25, r24
    9d42:	99 0f       	add	r25, r25
    9d44:	89 0f       	add	r24, r25
    9d46:	88 1a       	sub	r8, r24
    9d48:	67 2d       	mov	r22, r7
    9d4a:	66 95       	lsr	r22
    9d4c:	88 20       	and	r8, r8
    9d4e:	09 f4       	brne	.+2      	; 0x9d52 <_Z22Fertilizer_Tank_On_Offhh+0x1a2>
    9d50:	50 c2       	rjmp	.+1184   	; 0xa1f2 <_Z22Fertilizer_Tank_On_Offhh+0x642>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9d52:	77 24       	eor	r7, r7
    9d54:	73 94       	inc	r7
    9d56:	76 0e       	add	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9d58:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9d5c:	81 30       	cpi	r24, 0x01	; 1
    9d5e:	89 f4       	brne	.+34     	; 0x9d82 <_Z22Fertilizer_Tank_On_Offhh+0x1d2>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9d60:	64 e5       	ldi	r22, 0x54	; 84
    9d62:	72 e1       	ldi	r23, 0x12	; 18
    9d64:	86 ec       	ldi	r24, 0xC6	; 198
    9d66:	94 e1       	ldi	r25, 0x14	; 20
    9d68:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    9d6c:	4a e0       	ldi	r20, 0x0A	; 10
    9d6e:	50 e0       	ldi	r21, 0x00	; 0
    9d70:	67 2d       	mov	r22, r7
    9d72:	86 ec       	ldi	r24, 0xC6	; 198
    9d74:	94 e1       	ldi	r25, 0x14	; 20
    9d76:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    9d7a:	86 ec       	ldi	r24, 0xC6	; 198
    9d7c:	94 e1       	ldi	r25, 0x14	; 20
    9d7e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9d82:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
    9d86:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9d88:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9d8c:	84 e1       	ldi	r24, 0x14	; 20
    9d8e:	e5 ef       	ldi	r30, 0xF5	; 245
    9d90:	f3 e1       	ldi	r31, 0x13	; 19
    9d92:	11 92       	st	Z+, r1
    9d94:	8a 95       	dec	r24
    9d96:	e9 f7       	brne	.-6      	; 0x9d92 <_Z22Fertilizer_Tank_On_Offhh+0x1e2>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9d98:	67 2d       	mov	r22, r7
    9d9a:	70 e0       	ldi	r23, 0x00	; 0
    9d9c:	61 50       	subi	r22, 0x01	; 1
    9d9e:	71 09       	sbc	r23, r1
    9da0:	96 9e       	mul	r9, r22
    9da2:	c0 01       	movw	r24, r0
    9da4:	97 9e       	mul	r9, r23
    9da6:	90 0d       	add	r25, r0
    9da8:	11 24       	eor	r1, r1
    9daa:	82 55       	subi	r24, 0x52	; 82
    9dac:	9c 4e       	sbci	r25, 0xEC	; 236
    9dae:	fc 01       	movw	r30, r24
    9db0:	ec 58       	subi	r30, 0x8C	; 140
    9db2:	ff 4f       	sbci	r31, 0xFF	; 255
    9db4:	20 81       	ld	r18, Z
    9db6:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9dba:	31 96       	adiw	r30, 0x01	; 1
    9dbc:	20 81       	ld	r18, Z
    9dbe:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9dc2:	31 96       	adiw	r30, 0x01	; 1
    9dc4:	20 81       	ld	r18, Z
    9dc6:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9dca:	31 96       	adiw	r30, 0x01	; 1
    9dcc:	20 81       	ld	r18, Z
    9dce:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9dd2:	31 96       	adiw	r30, 0x01	; 1
    9dd4:	20 81       	ld	r18, Z
    9dd6:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9dda:	31 96       	adiw	r30, 0x01	; 1
    9ddc:	20 81       	ld	r18, Z
    9dde:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9de2:	22 e0       	ldi	r18, 0x02	; 2
    9de4:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9de8:	b0 92 fc 13 	sts	0x13FC, r11	; 0x8013fc <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    9dec:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    9df0:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9df4:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    9df8:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9dfc:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    9e00:	40 e0       	ldi	r20, 0x00	; 0
    9e02:	50 e0       	ldi	r21, 0x00	; 0
    9e04:	64 2e       	mov	r6, r20
    9e06:	81 2c       	mov	r8, r1
    9e08:	71 2c       	mov	r7, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9e0a:	a4 9e       	mul	r10, r20
    9e0c:	b0 01       	movw	r22, r0
    9e0e:	a5 9e       	mul	r10, r21
    9e10:	70 0d       	add	r23, r0
    9e12:	11 24       	eor	r1, r1
    9e14:	6b 5e       	subi	r22, 0xEB	; 235
    9e16:	73 4f       	sbci	r23, 0xF3	; 243
    9e18:	28 2d       	mov	r18, r8
    9e1a:	30 e0       	ldi	r19, 0x00	; 0
    9e1c:	fb 01       	movw	r30, r22
    9e1e:	e2 0f       	add	r30, r18
    9e20:	f3 1f       	adc	r31, r19
    9e22:	28 0f       	add	r18, r24
    9e24:	39 1f       	adc	r19, r25
    9e26:	d9 01       	movw	r26, r18
    9e28:	ac 58       	subi	r26, 0x8C	; 140
    9e2a:	bf 4f       	sbci	r27, 0xFF	; 255
    9e2c:	31 81       	ldd	r19, Z+1	; 0x01
    9e2e:	2c 91       	ld	r18, X
    9e30:	32 17       	cp	r19, r18
    9e32:	19 f0       	breq	.+6      	; 0x9e3a <_Z22Fertilizer_Tank_On_Offhh+0x28a>
					{
						compare_id = _kVALVE_ID_LEN;
    9e34:	e6 e0       	ldi	r30, 0x06	; 6
    9e36:	8e 2e       	mov	r8, r30
						id_len = _kRESET;
    9e38:	71 2c       	mov	r7, r1
					}
					id_len++;
    9e3a:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    9e3c:	83 94       	inc	r8
    9e3e:	f5 e0       	ldi	r31, 0x05	; 5
    9e40:	f8 15       	cp	r31, r8
    9e42:	50 f7       	brcc	.-44     	; 0x9e18 <_Z22Fertilizer_Tank_On_Offhh+0x268>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9e44:	26 e0       	ldi	r18, 0x06	; 6
    9e46:	72 16       	cp	r7, r18
    9e48:	09 f4       	brne	.+2      	; 0x9e4c <_Z22Fertilizer_Tank_On_Offhh+0x29c>
    9e4a:	da c1       	rjmp	.+948    	; 0xa200 <_Z22Fertilizer_Tank_On_Offhh+0x650>
    9e4c:	4f 5f       	subi	r20, 0xFF	; 255
    9e4e:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    9e50:	46 30       	cpi	r20, 0x06	; 6
    9e52:	51 05       	cpc	r21, r1
    9e54:	b9 f6       	brne	.-82     	; 0x9e04 <_Z22Fertilizer_Tank_On_Offhh+0x254>
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9e56:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9e5a:	81 30       	cpi	r24, 0x01	; 1
    9e5c:	89 f4       	brne	.+34     	; 0x9e80 <_Z22Fertilizer_Tank_On_Offhh+0x2d0>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    9e5e:	6e e3       	ldi	r22, 0x3E	; 62
    9e60:	72 e1       	ldi	r23, 0x12	; 18
    9e62:	86 ec       	ldi	r24, 0xC6	; 198
    9e64:	94 e1       	ldi	r25, 0x14	; 20
    9e66:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9e6a:	4a e0       	ldi	r20, 0x0A	; 10
    9e6c:	50 e0       	ldi	r21, 0x00	; 0
    9e6e:	61 2f       	mov	r22, r17
    9e70:	86 ec       	ldi	r24, 0xC6	; 198
    9e72:	94 e1       	ldi	r25, 0x14	; 20
    9e74:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9e78:	86 ec       	ldi	r24, 0xC6	; 198
    9e7a:	94 e1       	ldi	r25, 0x14	; 20
    9e7c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    9e80:	3d e0       	ldi	r19, 0x0D	; 13
    9e82:	13 9f       	mul	r17, r19
    9e84:	20 01       	movw	r4, r0
    9e86:	11 24       	eor	r1, r1
    9e88:	81 2c       	mov	r8, r1
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9e8a:	a1 9e       	mul	r10, r17
    9e8c:	c0 01       	movw	r24, r0
    9e8e:	11 24       	eor	r1, r1
    9e90:	9c 01       	movw	r18, r24
    9e92:	2b 5e       	subi	r18, 0xEB	; 235
    9e94:	33 4f       	sbci	r19, 0xF3	; 243
    9e96:	a9 01       	movw	r20, r18
    9e98:	45 5f       	subi	r20, 0xF5	; 245
    9e9a:	5f 4f       	sbci	r21, 0xFF	; 255
    9e9c:	5a 83       	std	Y+2, r21	; 0x02
    9e9e:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9ea0:	f9 01       	movw	r30, r18
    9ea2:	38 96       	adiw	r30, 0x08	; 8
    9ea4:	fc 83       	std	Y+4, r31	; 0x04
    9ea6:	eb 83       	std	Y+3, r30	; 0x03
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9ea8:	9c 01       	movw	r18, r24
    9eaa:	2a 5e       	subi	r18, 0xEA	; 234
    9eac:	33 4f       	sbci	r19, 0xF3	; 243
    9eae:	39 01       	movw	r6, r18
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    9eb0:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    9eb4:	81 11       	cpse	r24, r1
    9eb6:	a6 c1       	rjmp	.+844    	; 0xa204 <_Z22Fertilizer_Tank_On_Offhh+0x654>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    9eb8:	83 94       	inc	r8
				
				_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9eba:	6a e1       	ldi	r22, 0x1A	; 26
    9ebc:	72 e1       	ldi	r23, 0x12	; 18
    9ebe:	86 ec       	ldi	r24, 0xC6	; 198
    9ec0:	94 e1       	ldi	r25, 0x14	; 20
    9ec2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    9ec6:	86 ec       	ldi	r24, 0xC6	; 198
    9ec8:	94 e1       	ldi	r25, 0x14	; 20
    9eca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				Display_Update_1();    // 20/1/2022
    9ece:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9ed2:	8c e0       	ldi	r24, 0x0C	; 12
    9ed4:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    9ed8:	88 eb       	ldi	r24, 0xB8	; 184
    9eda:	9b e0       	ldi	r25, 0x0B	; 11
    9edc:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
    9ee0:	88 23       	and	r24, r24
    9ee2:	09 f4       	brne	.+2      	; 0x9ee6 <_Z22Fertilizer_Tank_On_Offhh+0x336>
    9ee4:	0e c3       	rjmp	.+1564   	; 0xa502 <_Z22Fertilizer_Tank_On_Offhh+0x952>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    9ee6:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
    9eea:	88 23       	and	r24, r24
    9eec:	09 f4       	brne	.+2      	; 0x9ef0 <_Z22Fertilizer_Tank_On_Offhh+0x340>
    9eee:	94 c2       	rjmp	.+1320   	; 0xa418 <_Z22Fertilizer_Tank_On_Offhh+0x868>
					{
						
						if(Subscribed_data_check())
    9ef0:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
    9ef4:	81 11       	cpse	r24, r1
    9ef6:	9b c1       	rjmp	.+822    	; 0xa22e <_Z22Fertilizer_Tank_On_Offhh+0x67e>
							}
						}
						
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9ef8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9efc:	81 30       	cpi	r24, 0x01	; 1
    9efe:	59 f5       	brne	.+86     	; 0x9f56 <_Z22Fertilizer_Tank_On_Offhh+0x3a6>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9f00:	64 e0       	ldi	r22, 0x04	; 4
    9f02:	72 e1       	ldi	r23, 0x12	; 18
    9f04:	86 ec       	ldi	r24, 0xC6	; 198
    9f06:	94 e1       	ldi	r25, 0x14	; 20
    9f08:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    9f0c:	4a e0       	ldi	r20, 0x0A	; 10
    9f0e:	50 e0       	ldi	r21, 0x00	; 0
    9f10:	69 e0       	ldi	r22, 0x09	; 9
    9f12:	74 e1       	ldi	r23, 0x14	; 20
    9f14:	86 ec       	ldi	r24, 0xC6	; 198
    9f16:	94 e1       	ldi	r25, 0x14	; 20
    9f18:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    9f1c:	86 ec       	ldi	r24, 0xC6	; 198
    9f1e:	94 e1       	ldi	r25, 0x14	; 20
    9f20:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9f24:	86 ec       	ldi	r24, 0xC6	; 198
    9f26:	94 e1       	ldi	r25, 0x14	; 20
    9f28:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9f2c:	66 ee       	ldi	r22, 0xE6	; 230
    9f2e:	71 e1       	ldi	r23, 0x11	; 17
    9f30:	86 ec       	ldi	r24, 0xC6	; 198
    9f32:	94 e1       	ldi	r25, 0x14	; 20
    9f34:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9f38:	47 e0       	ldi	r20, 0x07	; 7
    9f3a:	50 e0       	ldi	r21, 0x00	; 0
    9f3c:	b3 01       	movw	r22, r6
    9f3e:	86 ec       	ldi	r24, 0xC6	; 198
    9f40:	94 e1       	ldi	r25, 0x14	; 20
    9f42:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
							Serial.println();
    9f46:	86 ec       	ldi	r24, 0xC6	; 198
    9f48:	94 e1       	ldi	r25, 0x14	; 20
    9f4a:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9f4e:	86 ec       	ldi	r24, 0xC6	; 198
    9f50:	94 e1       	ldi	r25, 0x14	; 20
    9f52:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    9f56:	a9 e0       	ldi	r26, 0x09	; 9
    9f58:	b4 e1       	ldi	r27, 0x14	; 20
    9f5a:	80 e0       	ldi	r24, 0x00	; 0
    9f5c:	90 e0       	ldi	r25, 0x00	; 0
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    9f5e:	2d 91       	ld	r18, X+
    9f60:	f2 01       	movw	r30, r4
    9f62:	e8 0f       	add	r30, r24
    9f64:	f9 1f       	adc	r31, r25
    9f66:	eb 5e       	subi	r30, 0xEB	; 235
    9f68:	f3 4f       	sbci	r31, 0xF3	; 243
    9f6a:	31 81       	ldd	r19, Z+1	; 0x01
    9f6c:	32 17       	cp	r19, r18
    9f6e:	09 f4       	brne	.+2      	; 0x9f72 <_Z22Fertilizer_Tank_On_Offhh+0x3c2>
    9f70:	d8 c1       	rjmp	.+944    	; 0xa322 <_Z22Fertilizer_Tank_On_Offhh+0x772>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9f72:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9f76:	81 30       	cpi	r24, 0x01	; 1
    9f78:	51 f4       	brne	.+20     	; 0x9f8e <_Z22Fertilizer_Tank_On_Offhh+0x3de>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9f7a:	6b eb       	ldi	r22, 0xBB	; 187
    9f7c:	71 e1       	ldi	r23, 0x11	; 17
    9f7e:	86 ec       	ldi	r24, 0xC6	; 198
    9f80:	94 e1       	ldi	r25, 0x14	; 20
    9f82:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9f86:	86 ec       	ldi	r24, 0xC6	; 198
    9f88:	94 e1       	ldi	r25, 0x14	; 20
    9f8a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9f8e:	32 e0       	ldi	r19, 0x02	; 2
    9f90:	83 16       	cp	r8, r19
    9f92:	09 f4       	brne	.+2      	; 0x9f96 <_Z22Fertilizer_Tank_On_Offhh+0x3e6>
    9f94:	61 c1       	rjmp	.+706    	; 0xa258 <_Z22Fertilizer_Tank_On_Offhh+0x6a8>
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9f96:	21 e0       	ldi	r18, 0x01	; 1
    9f98:	e9 81       	ldd	r30, Y+1	; 0x01
    9f9a:	fa 81       	ldd	r31, Y+2	; 0x02
    9f9c:	20 83       	st	Z, r18
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9f9e:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    9fa2:	90 e0       	ldi	r25, 0x00	; 0
    9fa4:	98 2f       	mov	r25, r24
    9fa6:	88 27       	eor	r24, r24
    9fa8:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    9fac:	82 2b       	or	r24, r18
    9fae:	eb 81       	ldd	r30, Y+3	; 0x03
    9fb0:	fc 81       	ldd	r31, Y+4	; 0x04
    9fb2:	91 83       	std	Z+1, r25	; 0x01
    9fb4:	80 83       	st	Z, r24
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    9fb6:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    9fba:	b8 12       	cpse	r11, r24
    9fbc:	b8 c1       	rjmp	.+880    	; 0xa32e <_Z22Fertilizer_Tank_On_Offhh+0x77e>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    9fbe:	43 e0       	ldi	r20, 0x03	; 3
    9fc0:	84 2e       	mov	r8, r20
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    9fc2:	68 ee       	ldi	r22, 0xE8	; 232
    9fc4:	73 e0       	ldi	r23, 0x03	; 3
    9fc6:	80 e0       	ldi	r24, 0x00	; 0
    9fc8:	90 e0       	ldi	r25, 0x00	; 0
    9fca:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    9fce:	f3 e0       	ldi	r31, 0x03	; 3
    9fd0:	8f 12       	cpse	r8, r31
    9fd2:	6e cf       	rjmp	.-292    	; 0x9eb0 <_Z22Fertilizer_Tank_On_Offhh+0x300>
    9fd4:	ff ef       	ldi	r31, 0xFF	; 255
    9fd6:	ef 1a       	sub	r14, r31
    9fd8:	ff 0a       	sbc	r15, r31
		}
	}
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    9fda:	25 e0       	ldi	r18, 0x05	; 5
    9fdc:	e2 16       	cp	r14, r18
    9fde:	f1 04       	cpc	r15, r1
    9fe0:	99 f0       	breq	.+38     	; 0xa008 <_Z22Fertilizer_Tank_On_Offhh+0x458>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9fe2:	f6 01       	movw	r30, r12
    9fe4:	80 81       	ld	r24, Z
    9fe6:	90 e0       	ldi	r25, 0x00	; 0
    9fe8:	85 56       	subi	r24, 0x65	; 101
    9fea:	91 09       	sbc	r25, r1
    9fec:	08 9f       	mul	r16, r24
    9fee:	f0 01       	movw	r30, r0
    9ff0:	09 9f       	mul	r16, r25
    9ff2:	f0 0d       	add	r31, r0
    9ff4:	11 24       	eor	r1, r1
    9ff6:	e8 51       	subi	r30, 0x18	; 24
    9ff8:	f2 4f       	sbci	r31, 0xF2	; 242
    9ffa:	ee 0d       	add	r30, r14
    9ffc:	ff 1d       	adc	r31, r15
    9ffe:	85 81       	ldd	r24, Z+5	; 0x05
    a000:	83 31       	cpi	r24, 0x13	; 19
    a002:	08 f0       	brcs	.+2      	; 0xa006 <_Z22Fertilizer_Tank_On_Offhh+0x456>
    a004:	47 c0       	rjmp	.+142    	; 0xa094 <_Z22Fertilizer_Tank_On_Offhh+0x4e4>
    a006:	71 ce       	rjmp	.-798    	; 0x9cea <_Z22Fertilizer_Tank_On_Offhh+0x13a>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    a008:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a00c:	81 30       	cpi	r24, 0x01	; 1
    a00e:	51 f4       	brne	.+20     	; 0xa024 <_Z22Fertilizer_Tank_On_Offhh+0x474>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    a010:	63 e1       	ldi	r22, 0x13	; 19
    a012:	71 e1       	ldi	r23, 0x11	; 17
    a014:	86 ec       	ldi	r24, 0xC6	; 198
    a016:	94 e1       	ldi	r25, 0x14	; 20
    a018:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    a01c:	86 ec       	ldi	r24, 0xC6	; 198
    a01e:	94 e1       	ldi	r25, 0x14	; 20
    a020:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    a024:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
	// 	else
	// 	{
	// 		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
	// 	}
	
	if(on_off == _kOFF)
    a028:	b1 10       	cpse	r11, r1
    a02a:	a7 c0       	rjmp	.+334    	; 0xa17a <_Z22Fertilizer_Tank_On_Offhh+0x5ca>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    a02c:	0d 81       	ldd	r16, Y+5	; 0x05
    a02e:	1e 81       	ldd	r17, Y+6	; 0x06
    a030:	06 58       	subi	r16, 0x86	; 134
    a032:	1f 4f       	sbci	r17, 0xFF	; 255
    a034:	f8 01       	movw	r30, r16
    a036:	80 81       	ld	r24, Z
    a038:	90 e0       	ldi	r25, 0x00	; 0
    a03a:	85 56       	subi	r24, 0x65	; 101
    a03c:	91 09       	sbc	r25, r1
    a03e:	3b e1       	ldi	r19, 0x1B	; 27
    a040:	38 9f       	mul	r19, r24
    a042:	f0 01       	movw	r30, r0
    a044:	39 9f       	mul	r19, r25
    a046:	f0 0d       	add	r31, r0
    a048:	11 24       	eor	r1, r1
    a04a:	e8 51       	subi	r30, 0x18	; 24
    a04c:	f2 4f       	sbci	r31, 0xF2	; 242
    a04e:	82 81       	ldd	r24, Z+2	; 0x02
    a050:	85 30       	cpi	r24, 0x05	; 5
    a052:	09 f0       	breq	.+2      	; 0xa056 <_Z22Fertilizer_Tank_On_Offhh+0x4a6>
    a054:	50 c0       	rjmp	.+160    	; 0xa0f6 <_Z22Fertilizer_Tank_On_Offhh+0x546>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				_kSERIAL_MON_CLEAR();
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a056:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a05a:	81 30       	cpi	r24, 0x01	; 1
    a05c:	c9 f4       	brne	.+50     	; 0xa090 <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("tank to send schedule Off 1 : ");
    a05e:	65 ed       	ldi	r22, 0xD5	; 213
    a060:	70 e1       	ldi	r23, 0x10	; 16
    a062:	86 ec       	ldi	r24, 0xC6	; 198
    a064:	94 e1       	ldi	r25, 0x14	; 20
    a066:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a06a:	2d 81       	ldd	r18, Y+5	; 0x05
    a06c:	3e 81       	ldd	r19, Y+6	; 0x06
    a06e:	26 58       	subi	r18, 0x86	; 134
    a070:	3f 4f       	sbci	r19, 0xFF	; 255
    a072:	f9 01       	movw	r30, r18
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a074:	60 81       	ld	r22, Z
    a076:	70 e0       	ldi	r23, 0x00	; 0
    a078:	65 56       	subi	r22, 0x65	; 101
    a07a:	71 09       	sbc	r23, r1
    a07c:	4a e0       	ldi	r20, 0x0A	; 10
    a07e:	50 e0       	ldi	r21, 0x00	; 0
    a080:	86 ec       	ldi	r24, 0xC6	; 198
    a082:	94 e1       	ldi	r25, 0x14	; 20
    a084:	0e 94 a4 d5 	call	0x1ab48	; 0x1ab48 <_ZN5Print5printEii>
			_kSERIAL_MON_CLEAR();
    a088:	86 ec       	ldi	r24, 0xC6	; 198
    a08a:	94 e1       	ldi	r25, 0x14	; 20
    a08c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		//_kSERAIL_MON_WRITE("publish status : ");
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
    a090:	81 e0       	ldi	r24, 0x01	; 1
    a092:	ac c2       	rjmp	.+1368   	; 0xa5ec <_Z22Fertilizer_Tank_On_Offhh+0xa3c>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a094:	f6 01       	movw	r30, r12
    a096:	80 81       	ld	r24, Z
    a098:	90 e0       	ldi	r25, 0x00	; 0
    a09a:	85 56       	subi	r24, 0x65	; 101
    a09c:	91 09       	sbc	r25, r1
    a09e:	08 9f       	mul	r16, r24
    a0a0:	f0 01       	movw	r30, r0
    a0a2:	09 9f       	mul	r16, r25
    a0a4:	f0 0d       	add	r31, r0
    a0a6:	11 24       	eor	r1, r1
    a0a8:	e8 51       	subi	r30, 0x18	; 24
    a0aa:	f2 4f       	sbci	r31, 0xF2	; 242
    a0ac:	ee 0d       	add	r30, r14
    a0ae:	ff 1d       	adc	r31, r15
    a0b0:	85 81       	ldd	r24, Z+5	; 0x05
    a0b2:	83 31       	cpi	r24, 0x13	; 19
    a0b4:	08 f4       	brcc	.+2      	; 0xa0b8 <_Z22Fertilizer_Tank_On_Offhh+0x508>
    a0b6:	8e cf       	rjmp	.-228    	; 0x9fd4 <_Z22Fertilizer_Tank_On_Offhh+0x424>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    a0b8:	f6 01       	movw	r30, r12
    a0ba:	80 81       	ld	r24, Z
    a0bc:	61 e0       	ldi	r22, 0x01	; 1
    a0be:	b1 10       	cpse	r11, r1
    a0c0:	60 e0       	ldi	r22, 0x00	; 0
    a0c2:	90 e0       	ldi	r25, 0x00	; 0
    a0c4:	85 56       	subi	r24, 0x65	; 101
    a0c6:	91 09       	sbc	r25, r1
    a0c8:	08 9f       	mul	r16, r24
    a0ca:	f0 01       	movw	r30, r0
    a0cc:	09 9f       	mul	r16, r25
    a0ce:	f0 0d       	add	r31, r0
    a0d0:	11 24       	eor	r1, r1
    a0d2:	e8 51       	subi	r30, 0x18	; 24
    a0d4:	f2 4f       	sbci	r31, 0xF2	; 242
    a0d6:	ee 0d       	add	r30, r14
    a0d8:	ff 1d       	adc	r31, r15
    a0da:	e5 81       	ldd	r30, Z+5	; 0x05
    a0dc:	f0 e0       	ldi	r31, 0x00	; 0
    a0de:	e7 5c       	subi	r30, 0xC7	; 199
    a0e0:	fb 4e       	sbci	r31, 0xEB	; 235
    a0e2:	80 81       	ld	r24, Z
    a0e4:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
			_kDELAY_MS(200);
    a0e8:	68 ec       	ldi	r22, 0xC8	; 200
    a0ea:	70 e0       	ldi	r23, 0x00	; 0
    a0ec:	80 e0       	ldi	r24, 0x00	; 0
    a0ee:	90 e0       	ldi	r25, 0x00	; 0
    a0f0:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    a0f4:	6f cf       	rjmp	.-290    	; 0x9fd4 <_Z22Fertilizer_Tank_On_Offhh+0x424>
	
	if(on_off == _kOFF)
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a0f6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a0fa:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a0fe:	90 62       	ori	r25, 0x20	; 32
    a100:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a104:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a108:	f8 01       	movw	r30, r16
    a10a:	80 81       	ld	r24, Z
    a10c:	85 56       	subi	r24, 0x65	; 101
    a10e:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a112:	80 81       	ld	r24, Z
    a114:	90 e0       	ldi	r25, 0x00	; 0
    a116:	85 56       	subi	r24, 0x65	; 101
    a118:	91 09       	sbc	r25, r1
    a11a:	38 9f       	mul	r19, r24
    a11c:	f0 01       	movw	r30, r0
    a11e:	39 9f       	mul	r19, r25
    a120:	f0 0d       	add	r31, r0
    a122:	11 24       	eor	r1, r1
    a124:	e8 51       	subi	r30, 0x18	; 24
    a126:	f2 4f       	sbci	r31, 0xF2	; 242
    a128:	82 e0       	ldi	r24, 0x02	; 2
    a12a:	82 8f       	std	Z+26, r24	; 0x1a
			
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    a12c:	f8 01       	movw	r30, r16
    a12e:	80 81       	ld	r24, Z
    a130:	90 e0       	ldi	r25, 0x00	; 0
    a132:	85 56       	subi	r24, 0x65	; 101
    a134:	91 09       	sbc	r25, r1
    a136:	38 9f       	mul	r19, r24
    a138:	f0 01       	movw	r30, r0
    a13a:	39 9f       	mul	r19, r25
    a13c:	f0 0d       	add	r31, r0
    a13e:	11 24       	eor	r1, r1
    a140:	e8 51       	subi	r30, 0x18	; 24
    a142:	f2 4f       	sbci	r31, 0xF2	; 242
    a144:	85 e0       	ldi	r24, 0x05	; 5
    a146:	82 83       	std	Z+2, r24	; 0x02
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a148:	21 30       	cpi	r18, 0x01	; 1
    a14a:	09 f0       	breq	.+2      	; 0xa14e <_Z22Fertilizer_Tank_On_Offhh+0x59e>
    a14c:	a1 cf       	rjmp	.-190    	; 0xa090 <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
			{
				_kSERAIL_MON_WRITE("tank to send schedule Off 0 : ");
    a14e:	64 ef       	ldi	r22, 0xF4	; 244
    a150:	70 e1       	ldi	r23, 0x10	; 16
    a152:	86 ec       	ldi	r24, 0xC6	; 198
    a154:	94 e1       	ldi	r25, 0x14	; 20
    a156:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a15a:	f8 01       	movw	r30, r16
    a15c:	60 81       	ld	r22, Z
    a15e:	70 e0       	ldi	r23, 0x00	; 0
    a160:	65 56       	subi	r22, 0x65	; 101
    a162:	71 09       	sbc	r23, r1
    a164:	4a e0       	ldi	r20, 0x0A	; 10
    a166:	50 e0       	ldi	r21, 0x00	; 0
    a168:	86 ec       	ldi	r24, 0xC6	; 198
    a16a:	94 e1       	ldi	r25, 0x14	; 20
    a16c:	0e 94 a4 d5 	call	0x1ab48	; 0x1ab48 <_ZN5Print5printEii>
				_kSERIAL_MON_CLEAR();
    a170:	86 ec       	ldi	r24, 0xC6	; 198
    a172:	94 e1       	ldi	r25, 0x14	; 20
    a174:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    a178:	6e cf       	rjmp	.-292    	; 0xa056 <_Z22Fertilizer_Tank_On_Offhh+0x4a6>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a17a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a17e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a182:	90 62       	ori	r25, 0x20	; 32
    a184:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a188:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a18c:	4d 81       	ldd	r20, Y+5	; 0x05
    a18e:	5e 81       	ldd	r21, Y+6	; 0x06
    a190:	46 58       	subi	r20, 0x86	; 134
    a192:	5f 4f       	sbci	r21, 0xFF	; 255
    a194:	5a 83       	std	Y+2, r21	; 0x02
    a196:	49 83       	std	Y+1, r20	; 0x01
    a198:	fa 01       	movw	r30, r20
    a19a:	80 81       	ld	r24, Z
    a19c:	85 56       	subi	r24, 0x65	; 101
    a19e:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a1a2:	80 81       	ld	r24, Z
    a1a4:	90 e0       	ldi	r25, 0x00	; 0
    a1a6:	85 56       	subi	r24, 0x65	; 101
    a1a8:	91 09       	sbc	r25, r1
    a1aa:	3b e1       	ldi	r19, 0x1B	; 27
    a1ac:	38 9f       	mul	r19, r24
    a1ae:	f0 01       	movw	r30, r0
    a1b0:	39 9f       	mul	r19, r25
    a1b2:	f0 0d       	add	r31, r0
    a1b4:	11 24       	eor	r1, r1
    a1b6:	e8 51       	subi	r30, 0x18	; 24
    a1b8:	f2 4f       	sbci	r31, 0xF2	; 242
    a1ba:	82 e0       	ldi	r24, 0x02	; 2
    a1bc:	82 8f       	std	Z+26, r24	; 0x1a
		
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    a1be:	fa 01       	movw	r30, r20
    a1c0:	80 81       	ld	r24, Z
    a1c2:	90 e0       	ldi	r25, 0x00	; 0
    a1c4:	85 56       	subi	r24, 0x65	; 101
    a1c6:	91 09       	sbc	r25, r1
    a1c8:	38 9f       	mul	r19, r24
    a1ca:	f0 01       	movw	r30, r0
    a1cc:	39 9f       	mul	r19, r25
    a1ce:	f0 0d       	add	r31, r0
    a1d0:	11 24       	eor	r1, r1
    a1d2:	e8 51       	subi	r30, 0x18	; 24
    a1d4:	f2 4f       	sbci	r31, 0xF2	; 242
    a1d6:	84 e0       	ldi	r24, 0x04	; 4
    a1d8:	82 83       	std	Z+2, r24	; 0x02
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a1da:	21 30       	cpi	r18, 0x01	; 1
    a1dc:	09 f0       	breq	.+2      	; 0xa1e0 <_Z22Fertilizer_Tank_On_Offhh+0x630>
    a1de:	58 cf       	rjmp	.-336    	; 0xa090 <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
    a1e0:	69 eb       	ldi	r22, 0xB9	; 185
    a1e2:	70 e1       	ldi	r23, 0x10	; 16
    a1e4:	86 ec       	ldi	r24, 0xC6	; 198
    a1e6:	94 e1       	ldi	r25, 0x14	; 20
    a1e8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a1ec:	e9 81       	ldd	r30, Y+1	; 0x01
    a1ee:	fa 81       	ldd	r31, Y+2	; 0x02
    a1f0:	41 cf       	rjmp	.-382    	; 0xa074 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    a1f2:	76 2e       	mov	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    a1f4:	f3 e0       	ldi	r31, 0x03	; 3
    a1f6:	8f 2e       	mov	r8, r31
    a1f8:	af cd       	rjmp	.-1186   	; 0x9d58 <_Z22Fertilizer_Tank_On_Offhh+0x1a8>
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    a1fa:	77 24       	eor	r7, r7
    a1fc:	73 94       	inc	r7
    a1fe:	ac cd       	rjmp	.-1192   	; 0x9d58 <_Z22Fertilizer_Tank_On_Offhh+0x1a8>
    a200:	16 2d       	mov	r17, r6
    a202:	29 ce       	rjmp	.-942    	; 0x9e56 <_Z22Fertilizer_Tank_On_Offhh+0x2a6>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    a204:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    a208:	88 23       	and	r24, r24
    a20a:	09 f4       	brne	.+2      	; 0xa20e <_Z22Fertilizer_Tank_On_Offhh+0x65e>
    a20c:	55 ce       	rjmp	.-854    	; 0x9eb8 <_Z22Fertilizer_Tank_On_Offhh+0x308>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    a20e:	f1 01       	movw	r30, r2
    a210:	01 90       	ld	r0, Z+
    a212:	00 20       	and	r0, r0
    a214:	e9 f7       	brne	.-6      	; 0xa210 <_Z22Fertilizer_Tank_On_Offhh+0x660>
    a216:	31 97       	sbiw	r30, 0x01	; 1
    a218:	af 01       	movw	r20, r30
    a21a:	40 5d       	subi	r20, 0xD0	; 208
    a21c:	5f 40       	sbci	r21, 0x0F	; 15
    a21e:	21 e0       	ldi	r18, 0x01	; 1
    a220:	60 ed       	ldi	r22, 0xD0	; 208
    a222:	7f e0       	ldi	r23, 0x0F	; 15
    a224:	82 e6       	ldi	r24, 0x62	; 98
    a226:	9f e0       	ldi	r25, 0x0F	; 15
    a228:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
    a22c:	45 ce       	rjmp	.-886    	; 0x9eb8 <_Z22Fertilizer_Tank_On_Offhh+0x308>
					if(_kLORA_RECV_DATA())            /* check the received data */
					{
						
						if(Subscribed_data_check())
						{
							if(Seperate_Out_Sub_Data())
    a22e:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    a232:	88 23       	and	r24, r24
    a234:	09 f4       	brne	.+2      	; 0xa238 <_Z22Fertilizer_Tank_On_Offhh+0x688>
    a236:	60 ce       	rjmp	.-832    	; 0x9ef8 <_Z22Fertilizer_Tank_On_Offhh+0x348>
							{
								//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    a238:	f1 01       	movw	r30, r2
    a23a:	01 90       	ld	r0, Z+
    a23c:	00 20       	and	r0, r0
    a23e:	e9 f7       	brne	.-6      	; 0xa23a <_Z22Fertilizer_Tank_On_Offhh+0x68a>
    a240:	31 97       	sbiw	r30, 0x01	; 1
    a242:	af 01       	movw	r20, r30
    a244:	40 5d       	subi	r20, 0xD0	; 208
    a246:	5f 40       	sbci	r21, 0x0F	; 15
    a248:	21 e0       	ldi	r18, 0x01	; 1
    a24a:	60 ed       	ldi	r22, 0xD0	; 208
    a24c:	7f e0       	ldi	r23, 0x0F	; 15
    a24e:	82 e6       	ldi	r24, 0x62	; 98
    a250:	9f e0       	ldi	r25, 0x0F	; 15
    a252:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
    a256:	50 ce       	rjmp	.-864    	; 0x9ef8 <_Z22Fertilizer_Tank_On_Offhh+0x348>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a258:	86 e0       	ldi	r24, 0x06	; 6
    a25a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    a25e:	84 e6       	ldi	r24, 0x64	; 100
    a260:	90 e0       	ldi	r25, 0x00	; 0
    a262:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a266:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a26a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a26e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a272:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a276:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a27a:	a0 62       	ori	r26, 0x20	; 32
    a27c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a280:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a284:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a288:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    a28c:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a290:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a294:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a298:	82 60       	ori	r24, 0x02	; 2
    a29a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a29e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a2a2:	00 e0       	ldi	r16, 0x00	; 0
    a2a4:	10 e0       	ldi	r17, 0x00	; 0
									{
										if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a2a6:	2d 81       	ldd	r18, Y+5	; 0x05
    a2a8:	3e 81       	ldd	r19, Y+6	; 0x06
    a2aa:	26 58       	subi	r18, 0x86	; 134
    a2ac:	3f 4f       	sbci	r19, 0xFF	; 255
    a2ae:	3a 83       	std	Y+2, r19	; 0x02
    a2b0:	29 83       	std	Y+1, r18	; 0x01
    a2b2:	3b e1       	ldi	r19, 0x1B	; 27
    a2b4:	f3 2e       	mov	r15, r19
    a2b6:	e9 81       	ldd	r30, Y+1	; 0x01
    a2b8:	fa 81       	ldd	r31, Y+2	; 0x02
    a2ba:	80 81       	ld	r24, Z
    a2bc:	90 e0       	ldi	r25, 0x00	; 0
    a2be:	85 56       	subi	r24, 0x65	; 101
    a2c0:	91 09       	sbc	r25, r1
    a2c2:	f8 9e       	mul	r15, r24
    a2c4:	f0 01       	movw	r30, r0
    a2c6:	f9 9e       	mul	r15, r25
    a2c8:	f0 0d       	add	r31, r0
    a2ca:	11 24       	eor	r1, r1
    a2cc:	e8 51       	subi	r30, 0x18	; 24
    a2ce:	f2 4f       	sbci	r31, 0xF2	; 242
    a2d0:	e0 0f       	add	r30, r16
    a2d2:	f1 1f       	adc	r31, r17
    a2d4:	85 81       	ldd	r24, Z+5	; 0x05
    a2d6:	83 31       	cpi	r24, 0x13	; 19
    a2d8:	e8 f0       	brcs	.+58     	; 0xa314 <_Z22Fertilizer_Tank_On_Offhh+0x764>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a2da:	e9 81       	ldd	r30, Y+1	; 0x01
    a2dc:	fa 81       	ldd	r31, Y+2	; 0x02
    a2de:	80 81       	ld	r24, Z
    a2e0:	90 e0       	ldi	r25, 0x00	; 0
    a2e2:	85 56       	subi	r24, 0x65	; 101
    a2e4:	91 09       	sbc	r25, r1
    a2e6:	f8 9e       	mul	r15, r24
    a2e8:	f0 01       	movw	r30, r0
    a2ea:	f9 9e       	mul	r15, r25
    a2ec:	f0 0d       	add	r31, r0
    a2ee:	11 24       	eor	r1, r1
    a2f0:	e8 51       	subi	r30, 0x18	; 24
    a2f2:	f2 4f       	sbci	r31, 0xF2	; 242
    a2f4:	e0 0f       	add	r30, r16
    a2f6:	f1 1f       	adc	r31, r17
    a2f8:	e5 81       	ldd	r30, Z+5	; 0x05
    a2fa:	f0 e0       	ldi	r31, 0x00	; 0
    a2fc:	e7 5c       	subi	r30, 0xC7	; 199
    a2fe:	fb 4e       	sbci	r31, 0xEB	; 235
    a300:	61 e0       	ldi	r22, 0x01	; 1
    a302:	80 81       	ld	r24, Z
    a304:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
											_kDELAY_MS(200);
    a308:	68 ec       	ldi	r22, 0xC8	; 200
    a30a:	70 e0       	ldi	r23, 0x00	; 0
    a30c:	80 e0       	ldi	r24, 0x00	; 0
    a30e:	90 e0       	ldi	r25, 0x00	; 0
    a310:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a314:	0f 5f       	subi	r16, 0xFF	; 255
    a316:	1f 4f       	sbci	r17, 0xFF	; 255
    a318:	05 30       	cpi	r16, 0x05	; 5
    a31a:	11 05       	cpc	r17, r1
    a31c:	61 f6       	brne	.-104    	; 0xa2b6 <_Z22Fertilizer_Tank_On_Offhh+0x706>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    a31e:	80 e0       	ldi	r24, 0x00	; 0
    a320:	65 c1       	rjmp	.+714    	; 0xa5ec <_Z22Fertilizer_Tank_On_Offhh+0xa3c>
    a322:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    a324:	86 30       	cpi	r24, 0x06	; 6
    a326:	91 05       	cpc	r25, r1
    a328:	09 f0       	breq	.+2      	; 0xa32c <_Z22Fertilizer_Tank_On_Offhh+0x77c>
    a32a:	19 ce       	rjmp	.-974    	; 0x9f5e <_Z22Fertilizer_Tank_On_Offhh+0x3ae>
    a32c:	34 ce       	rjmp	.-920    	; 0x9f96 <_Z22Fertilizer_Tank_On_Offhh+0x3e6>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    a32e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a332:	81 30       	cpi	r24, 0x01	; 1
    a334:	51 f4       	brne	.+20     	; 0xa34a <_Z22Fertilizer_Tank_On_Offhh+0x79a>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    a336:	68 ea       	ldi	r22, 0xA8	; 168
    a338:	71 e1       	ldi	r23, 0x11	; 17
    a33a:	86 ec       	ldi	r24, 0xC6	; 198
    a33c:	94 e1       	ldi	r25, 0x14	; 20
    a33e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    a342:	86 ec       	ldi	r24, 0xC6	; 198
    a344:	94 e1       	ldi	r25, 0x14	; 20
    a346:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a34a:	f2 e0       	ldi	r31, 0x02	; 2
    a34c:	8f 12       	cpse	r8, r31
    a34e:	39 ce       	rjmp	.-910    	; 0x9fc2 <_Z22Fertilizer_Tank_On_Offhh+0x412>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a350:	86 e0       	ldi	r24, 0x06	; 6
    a352:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    a356:	84 e6       	ldi	r24, 0x64	; 100
    a358:	90 e0       	ldi	r25, 0x00	; 0
    a35a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a35e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a362:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a366:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a36a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a36e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a372:	a0 62       	ori	r26, 0x20	; 32
    a374:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a378:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a37c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a380:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    a384:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a388:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a38c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a390:	82 60       	ori	r24, 0x02	; 2
    a392:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a396:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a39a:	00 e0       	ldi	r16, 0x00	; 0
    a39c:	10 e0       	ldi	r17, 0x00	; 0
								{
									if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a39e:	2d 81       	ldd	r18, Y+5	; 0x05
    a3a0:	3e 81       	ldd	r19, Y+6	; 0x06
    a3a2:	26 58       	subi	r18, 0x86	; 134
    a3a4:	3f 4f       	sbci	r19, 0xFF	; 255
    a3a6:	3a 83       	std	Y+2, r19	; 0x02
    a3a8:	29 83       	std	Y+1, r18	; 0x01
    a3aa:	2b e1       	ldi	r18, 0x1B	; 27
    a3ac:	f2 2e       	mov	r15, r18
    a3ae:	e9 81       	ldd	r30, Y+1	; 0x01
    a3b0:	fa 81       	ldd	r31, Y+2	; 0x02
    a3b2:	80 81       	ld	r24, Z
    a3b4:	90 e0       	ldi	r25, 0x00	; 0
    a3b6:	85 56       	subi	r24, 0x65	; 101
    a3b8:	91 09       	sbc	r25, r1
    a3ba:	f8 9e       	mul	r15, r24
    a3bc:	f0 01       	movw	r30, r0
    a3be:	f9 9e       	mul	r15, r25
    a3c0:	f0 0d       	add	r31, r0
    a3c2:	11 24       	eor	r1, r1
    a3c4:	e8 51       	subi	r30, 0x18	; 24
    a3c6:	f2 4f       	sbci	r31, 0xF2	; 242
    a3c8:	e0 0f       	add	r30, r16
    a3ca:	f1 1f       	adc	r31, r17
    a3cc:	85 81       	ldd	r24, Z+5	; 0x05
    a3ce:	83 31       	cpi	r24, 0x13	; 19
    a3d0:	e8 f0       	brcs	.+58     	; 0xa40c <_Z22Fertilizer_Tank_On_Offhh+0x85c>
									{
										/********************************* turn on/off the wired valve *********************************/
										
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a3d2:	e9 81       	ldd	r30, Y+1	; 0x01
    a3d4:	fa 81       	ldd	r31, Y+2	; 0x02
    a3d6:	80 81       	ld	r24, Z
    a3d8:	90 e0       	ldi	r25, 0x00	; 0
    a3da:	85 56       	subi	r24, 0x65	; 101
    a3dc:	91 09       	sbc	r25, r1
    a3de:	f8 9e       	mul	r15, r24
    a3e0:	f0 01       	movw	r30, r0
    a3e2:	f9 9e       	mul	r15, r25
    a3e4:	f0 0d       	add	r31, r0
    a3e6:	11 24       	eor	r1, r1
    a3e8:	e8 51       	subi	r30, 0x18	; 24
    a3ea:	f2 4f       	sbci	r31, 0xF2	; 242
    a3ec:	e0 0f       	add	r30, r16
    a3ee:	f1 1f       	adc	r31, r17
    a3f0:	e5 81       	ldd	r30, Z+5	; 0x05
    a3f2:	f0 e0       	ldi	r31, 0x00	; 0
    a3f4:	e7 5c       	subi	r30, 0xC7	; 199
    a3f6:	fb 4e       	sbci	r31, 0xEB	; 235
    a3f8:	61 e0       	ldi	r22, 0x01	; 1
    a3fa:	80 81       	ld	r24, Z
    a3fc:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
										_kDELAY_MS(200);
    a400:	68 ec       	ldi	r22, 0xC8	; 200
    a402:	70 e0       	ldi	r23, 0x00	; 0
    a404:	80 e0       	ldi	r24, 0x00	; 0
    a406:	90 e0       	ldi	r25, 0x00	; 0
    a408:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a40c:	0f 5f       	subi	r16, 0xFF	; 255
    a40e:	1f 4f       	sbci	r17, 0xFF	; 255
    a410:	05 30       	cpi	r16, 0x05	; 5
    a412:	11 05       	cpc	r17, r1
    a414:	61 f6       	brne	.-104    	; 0xa3ae <_Z22Fertilizer_Tank_On_Offhh+0x7fe>
    a416:	83 cf       	rjmp	.-250    	; 0xa31e <_Z22Fertilizer_Tank_On_Offhh+0x76e>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    a418:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a41c:	81 30       	cpi	r24, 0x01	; 1
    a41e:	51 f4       	brne	.+20     	; 0xa434 <_Z22Fertilizer_Tank_On_Offhh+0x884>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    a420:	6d e6       	ldi	r22, 0x6D	; 109
    a422:	71 e1       	ldi	r23, 0x11	; 17
    a424:	86 ec       	ldi	r24, 0xC6	; 198
    a426:	94 e1       	ldi	r25, 0x14	; 20
    a428:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    a42c:	86 ec       	ldi	r24, 0xC6	; 198
    a42e:	94 e1       	ldi	r25, 0x14	; 20
    a430:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    a434:	f2 e0       	ldi	r31, 0x02	; 2
    a436:	8f 12       	cpse	r8, r31
    a438:	c4 cd       	rjmp	.-1144   	; 0x9fc2 <_Z22Fertilizer_Tank_On_Offhh+0x412>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a43a:	86 e0       	ldi	r24, 0x06	; 6
    a43c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    a440:	84 e6       	ldi	r24, 0x64	; 100
    a442:	90 e0       	ldi	r25, 0x00	; 0
    a444:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a448:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a44c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a450:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a454:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a458:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a45c:	a0 62       	ori	r26, 0x20	; 32
    a45e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a462:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a466:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a46a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    a46e:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a472:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a476:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a47a:	82 60       	ori	r24, 0x02	; 2
    a47c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a480:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a484:	00 e0       	ldi	r16, 0x00	; 0
    a486:	10 e0       	ldi	r17, 0x00	; 0
							{
								if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a488:	2d 81       	ldd	r18, Y+5	; 0x05
    a48a:	3e 81       	ldd	r19, Y+6	; 0x06
    a48c:	26 58       	subi	r18, 0x86	; 134
    a48e:	3f 4f       	sbci	r19, 0xFF	; 255
    a490:	3a 83       	std	Y+2, r19	; 0x02
    a492:	29 83       	std	Y+1, r18	; 0x01
    a494:	9b e1       	ldi	r25, 0x1B	; 27
    a496:	f9 2e       	mov	r15, r25
    a498:	e9 81       	ldd	r30, Y+1	; 0x01
    a49a:	fa 81       	ldd	r31, Y+2	; 0x02
    a49c:	80 81       	ld	r24, Z
    a49e:	90 e0       	ldi	r25, 0x00	; 0
    a4a0:	85 56       	subi	r24, 0x65	; 101
    a4a2:	91 09       	sbc	r25, r1
    a4a4:	f8 9e       	mul	r15, r24
    a4a6:	f0 01       	movw	r30, r0
    a4a8:	f9 9e       	mul	r15, r25
    a4aa:	f0 0d       	add	r31, r0
    a4ac:	11 24       	eor	r1, r1
    a4ae:	e8 51       	subi	r30, 0x18	; 24
    a4b0:	f2 4f       	sbci	r31, 0xF2	; 242
    a4b2:	e0 0f       	add	r30, r16
    a4b4:	f1 1f       	adc	r31, r17
    a4b6:	85 81       	ldd	r24, Z+5	; 0x05
    a4b8:	83 31       	cpi	r24, 0x13	; 19
    a4ba:	e8 f0       	brcs	.+58     	; 0xa4f6 <_Z22Fertilizer_Tank_On_Offhh+0x946>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a4bc:	e9 81       	ldd	r30, Y+1	; 0x01
    a4be:	fa 81       	ldd	r31, Y+2	; 0x02
    a4c0:	80 81       	ld	r24, Z
    a4c2:	90 e0       	ldi	r25, 0x00	; 0
    a4c4:	85 56       	subi	r24, 0x65	; 101
    a4c6:	91 09       	sbc	r25, r1
    a4c8:	f8 9e       	mul	r15, r24
    a4ca:	f0 01       	movw	r30, r0
    a4cc:	f9 9e       	mul	r15, r25
    a4ce:	f0 0d       	add	r31, r0
    a4d0:	11 24       	eor	r1, r1
    a4d2:	e8 51       	subi	r30, 0x18	; 24
    a4d4:	f2 4f       	sbci	r31, 0xF2	; 242
    a4d6:	e0 0f       	add	r30, r16
    a4d8:	f1 1f       	adc	r31, r17
    a4da:	e5 81       	ldd	r30, Z+5	; 0x05
    a4dc:	f0 e0       	ldi	r31, 0x00	; 0
    a4de:	e7 5c       	subi	r30, 0xC7	; 199
    a4e0:	fb 4e       	sbci	r31, 0xEB	; 235
    a4e2:	61 e0       	ldi	r22, 0x01	; 1
    a4e4:	80 81       	ld	r24, Z
    a4e6:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
									_kDELAY_MS(200);
    a4ea:	68 ec       	ldi	r22, 0xC8	; 200
    a4ec:	70 e0       	ldi	r23, 0x00	; 0
    a4ee:	80 e0       	ldi	r24, 0x00	; 0
    a4f0:	90 e0       	ldi	r25, 0x00	; 0
    a4f2:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a4f6:	0f 5f       	subi	r16, 0xFF	; 255
    a4f8:	1f 4f       	sbci	r17, 0xFF	; 255
    a4fa:	05 30       	cpi	r16, 0x05	; 5
    a4fc:	11 05       	cpc	r17, r1
    a4fe:	61 f6       	brne	.-104    	; 0xa498 <_Z22Fertilizer_Tank_On_Offhh+0x8e8>
    a500:	0e cf       	rjmp	.-484    	; 0xa31e <_Z22Fertilizer_Tank_On_Offhh+0x76e>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a502:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a506:	81 30       	cpi	r24, 0x01	; 1
    a508:	51 f4       	brne	.+20     	; 0xa51e <_Z22Fertilizer_Tank_On_Offhh+0x96e>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    a50a:	62 e3       	ldi	r22, 0x32	; 50
    a50c:	71 e1       	ldi	r23, 0x11	; 17
    a50e:	86 ec       	ldi	r24, 0xC6	; 198
    a510:	94 e1       	ldi	r25, 0x14	; 20
    a512:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a516:	86 ec       	ldi	r24, 0xC6	; 198
    a518:	94 e1       	ldi	r25, 0x14	; 20
    a51a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a51e:	f2 e0       	ldi	r31, 0x02	; 2
    a520:	8f 12       	cpse	r8, r31
    a522:	4f cd       	rjmp	.-1378   	; 0x9fc2 <_Z22Fertilizer_Tank_On_Offhh+0x412>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a524:	86 e0       	ldi	r24, 0x06	; 6
    a526:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    a52a:	84 e6       	ldi	r24, 0x64	; 100
    a52c:	90 e0       	ldi	r25, 0x00	; 0
    a52e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a532:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a536:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a53a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a53e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a542:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a546:	a0 62       	ori	r26, 0x20	; 32
    a548:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a54c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a550:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a554:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    a558:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a55c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a560:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a564:	82 60       	ori	r24, 0x02	; 2
    a566:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a56a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a56e:	00 e0       	ldi	r16, 0x00	; 0
    a570:	10 e0       	ldi	r17, 0x00	; 0
						{
							if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a572:	2d 81       	ldd	r18, Y+5	; 0x05
    a574:	3e 81       	ldd	r19, Y+6	; 0x06
    a576:	26 58       	subi	r18, 0x86	; 134
    a578:	3f 4f       	sbci	r19, 0xFF	; 255
    a57a:	3a 83       	std	Y+2, r19	; 0x02
    a57c:	29 83       	std	Y+1, r18	; 0x01
    a57e:	8b e1       	ldi	r24, 0x1B	; 27
    a580:	f8 2e       	mov	r15, r24
    a582:	e9 81       	ldd	r30, Y+1	; 0x01
    a584:	fa 81       	ldd	r31, Y+2	; 0x02
    a586:	80 81       	ld	r24, Z
    a588:	90 e0       	ldi	r25, 0x00	; 0
    a58a:	85 56       	subi	r24, 0x65	; 101
    a58c:	91 09       	sbc	r25, r1
    a58e:	f8 9e       	mul	r15, r24
    a590:	f0 01       	movw	r30, r0
    a592:	f9 9e       	mul	r15, r25
    a594:	f0 0d       	add	r31, r0
    a596:	11 24       	eor	r1, r1
    a598:	e8 51       	subi	r30, 0x18	; 24
    a59a:	f2 4f       	sbci	r31, 0xF2	; 242
    a59c:	e0 0f       	add	r30, r16
    a59e:	f1 1f       	adc	r31, r17
    a5a0:	85 81       	ldd	r24, Z+5	; 0x05
    a5a2:	83 31       	cpi	r24, 0x13	; 19
    a5a4:	e8 f0       	brcs	.+58     	; 0xa5e0 <_Z22Fertilizer_Tank_On_Offhh+0xa30>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a5a6:	e9 81       	ldd	r30, Y+1	; 0x01
    a5a8:	fa 81       	ldd	r31, Y+2	; 0x02
    a5aa:	80 81       	ld	r24, Z
    a5ac:	90 e0       	ldi	r25, 0x00	; 0
    a5ae:	85 56       	subi	r24, 0x65	; 101
    a5b0:	91 09       	sbc	r25, r1
    a5b2:	f8 9e       	mul	r15, r24
    a5b4:	f0 01       	movw	r30, r0
    a5b6:	f9 9e       	mul	r15, r25
    a5b8:	f0 0d       	add	r31, r0
    a5ba:	11 24       	eor	r1, r1
    a5bc:	e8 51       	subi	r30, 0x18	; 24
    a5be:	f2 4f       	sbci	r31, 0xF2	; 242
    a5c0:	e0 0f       	add	r30, r16
    a5c2:	f1 1f       	adc	r31, r17
    a5c4:	e5 81       	ldd	r30, Z+5	; 0x05
    a5c6:	f0 e0       	ldi	r31, 0x00	; 0
    a5c8:	e7 5c       	subi	r30, 0xC7	; 199
    a5ca:	fb 4e       	sbci	r31, 0xEB	; 235
    a5cc:	61 e0       	ldi	r22, 0x01	; 1
    a5ce:	80 81       	ld	r24, Z
    a5d0:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
								_kDELAY_MS(200);
    a5d4:	68 ec       	ldi	r22, 0xC8	; 200
    a5d6:	70 e0       	ldi	r23, 0x00	; 0
    a5d8:	80 e0       	ldi	r24, 0x00	; 0
    a5da:	90 e0       	ldi	r25, 0x00	; 0
    a5dc:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a5e0:	0f 5f       	subi	r16, 0xFF	; 255
    a5e2:	1f 4f       	sbci	r17, 0xFF	; 255
    a5e4:	05 30       	cpi	r16, 0x05	; 5
    a5e6:	11 05       	cpc	r17, r1
    a5e8:	61 f6       	brne	.-104    	; 0xa582 <_Z22Fertilizer_Tank_On_Offhh+0x9d2>
    a5ea:	99 ce       	rjmp	.-718    	; 0xa31e <_Z22Fertilizer_Tank_On_Offhh+0x76e>
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
}
    a5ec:	26 96       	adiw	r28, 0x06	; 6
    a5ee:	0f b6       	in	r0, 0x3f	; 63
    a5f0:	f8 94       	cli
    a5f2:	de bf       	out	0x3e, r29	; 62
    a5f4:	0f be       	out	0x3f, r0	; 63
    a5f6:	cd bf       	out	0x3d, r28	; 61
    a5f8:	df 91       	pop	r29
    a5fa:	cf 91       	pop	r28
    a5fc:	1f 91       	pop	r17
    a5fe:	0f 91       	pop	r16
    a600:	ff 90       	pop	r15
    a602:	ef 90       	pop	r14
    a604:	df 90       	pop	r13
    a606:	cf 90       	pop	r12
    a608:	bf 90       	pop	r11
    a60a:	af 90       	pop	r10
    a60c:	9f 90       	pop	r9
    a60e:	8f 90       	pop	r8
    a610:	7f 90       	pop	r7
    a612:	6f 90       	pop	r6
    a614:	5f 90       	pop	r5
    a616:	4f 90       	pop	r4
    a618:	3f 90       	pop	r3
    a61a:	2f 90       	pop	r2
    a61c:	08 95       	ret

0000a61e <_Z26Fertilizer_Tank_Monitoringv>:
	}
	
}					

void Fertilizer_Tank_Monitoring(void)
{
    a61e:	af 92       	push	r10
    a620:	bf 92       	push	r11
    a622:	df 92       	push	r13
    a624:	ef 92       	push	r14
    a626:	ff 92       	push	r15
    a628:	0f 93       	push	r16
    a62a:	1f 93       	push	r17
    a62c:	cf 93       	push	r28
    a62e:	df 93       	push	r29
	unsigned char tank_number;
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    a630:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    a634:	81 30       	cpi	r24, 0x01	; 1
    a636:	29 f5       	brne	.+74     	; 0xa682 <_Z26Fertilizer_Tank_Monitoringv+0x64>
	{	
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a638:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a63c:	81 30       	cpi	r24, 0x01	; 1
    a63e:	31 f4       	brne	.+12     	; 0xa64c <_Z26Fertilizer_Tank_Monitoringv+0x2e>
		{
			_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring : ");
    a640:	6d ee       	ldi	r22, 0xED	; 237
    a642:	72 e1       	ldi	r23, 0x12	; 18
    a644:	86 ec       	ldi	r24, 0xC6	; 198
    a646:	94 e1       	ldi	r25, 0x14	; 20
    a648:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    a64c:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    a650:	84 30       	cpi	r24, 0x04	; 4
    a652:	09 f0       	breq	.+2      	; 0xa656 <_Z26Fertilizer_Tank_Monitoringv+0x38>
    a654:	46 c1       	rjmp	.+652    	; 0xa8e2 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a656:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a65a:	81 30       	cpi	r24, 0x01	; 1
    a65c:	31 f4       	brne	.+12     	; 0xa66a <_Z26Fertilizer_Tank_Monitoringv+0x4c>
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
    a65e:	6d ec       	ldi	r22, 0xCD	; 205
    a660:	72 e1       	ldi	r23, 0x12	; 18
    a662:	86 ec       	ldi	r24, 0xC6	; 198
    a664:	94 e1       	ldi	r25, 0x14	; 20
    a666:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a66a:	83 e0       	ldi	r24, 0x03	; 3
					}
				}
			}
		}
	}
}
    a66c:	df 91       	pop	r29
    a66e:	cf 91       	pop	r28
    a670:	1f 91       	pop	r17
    a672:	0f 91       	pop	r16
    a674:	ff 90       	pop	r15
    a676:	ef 90       	pop	r14
    a678:	df 90       	pop	r13
    a67a:	bf 90       	pop	r11
    a67c:	af 90       	pop	r10
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a67e:	0c 94 2d 4a 	jmp	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
    a682:	c0 e0       	ldi	r28, 0x00	; 0
    a684:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a686:	3b e1       	ldi	r19, 0x1B	; 27
    a688:	f3 2e       	mov	r15, r19
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a68a:	48 e7       	ldi	r20, 0x78	; 120
    a68c:	d4 2e       	mov	r13, r20
    a68e:	ec 2e       	mov	r14, r28
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
    a690:	8e 01       	movw	r16, r28
    a692:	02 5e       	subi	r16, 0xE2	; 226
    a694:	16 4f       	sbci	r17, 0xF6	; 246
    a696:	f8 01       	movw	r30, r16
    a698:	ed 5a       	subi	r30, 0xAD	; 173
    a69a:	fd 4f       	sbci	r31, 0xFD	; 253
    a69c:	80 81       	ld	r24, Z
    a69e:	81 11       	cpse	r24, r1
    a6a0:	7a c0       	rjmp	.+244    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
    a6a2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a6a6:	90 e0       	ldi	r25, 0x00	; 0
    a6a8:	01 97       	sbiw	r24, 0x01	; 1
    a6aa:	fc 01       	movw	r30, r24
    a6ac:	ee 0f       	add	r30, r30
    a6ae:	ff 1f       	adc	r31, r31
    a6b0:	e8 0f       	add	r30, r24
    a6b2:	f9 1f       	adc	r31, r25
    a6b4:	ec 0f       	add	r30, r28
    a6b6:	fd 1f       	adc	r31, r29
    a6b8:	e1 59       	subi	r30, 0x91	; 145
    a6ba:	f5 4f       	sbci	r31, 0xF5	; 245
    a6bc:	80 81       	ld	r24, Z
    a6be:	81 30       	cpi	r24, 0x01	; 1
    a6c0:	09 f0       	breq	.+2      	; 0xa6c4 <_Z26Fertilizer_Tank_Monitoringv+0xa6>
    a6c2:	69 c0       	rjmp	.+210    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a6c4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a6c8:	90 e0       	ldi	r25, 0x00	; 0
    a6ca:	01 97       	sbiw	r24, 0x01	; 1
    a6cc:	fc 01       	movw	r30, r24
    a6ce:	ee 0f       	add	r30, r30
    a6d0:	ff 1f       	adc	r31, r31
    a6d2:	e8 0f       	add	r30, r24
    a6d4:	f9 1f       	adc	r31, r25
    a6d6:	ec 0f       	add	r30, r28
    a6d8:	fd 1f       	adc	r31, r29
    a6da:	e8 56       	subi	r30, 0x68	; 104
    a6dc:	f6 4f       	sbci	r31, 0xF6	; 246
    a6de:	80 81       	ld	r24, Z
    a6e0:	90 e0       	ldi	r25, 0x00	; 0
    a6e2:	85 56       	subi	r24, 0x65	; 101
    a6e4:	91 09       	sbc	r25, r1
    a6e6:	f8 9e       	mul	r15, r24
    a6e8:	f0 01       	movw	r30, r0
    a6ea:	f9 9e       	mul	r15, r25
    a6ec:	f0 0d       	add	r31, r0
    a6ee:	11 24       	eor	r1, r1
    a6f0:	e8 51       	subi	r30, 0x18	; 24
    a6f2:	f2 4f       	sbci	r31, 0xF2	; 242
    a6f4:	81 81       	ldd	r24, Z+1	; 0x01
    a6f6:	88 23       	and	r24, r24
    a6f8:	09 f4       	brne	.+2      	; 0xa6fc <_Z26Fertilizer_Tank_Monitoringv+0xde>
    a6fa:	4d c0       	rjmp	.+154    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
    a6fc:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a700:	90 e0       	ldi	r25, 0x00	; 0
    a702:	01 97       	sbiw	r24, 0x01	; 1
    a704:	fc 01       	movw	r30, r24
    a706:	ee 0f       	add	r30, r30
    a708:	ff 1f       	adc	r31, r31
    a70a:	e8 0f       	add	r30, r24
    a70c:	f9 1f       	adc	r31, r25
    a70e:	ec 0f       	add	r30, r28
    a710:	fd 1f       	adc	r31, r29
    a712:	e8 56       	subi	r30, 0x68	; 104
    a714:	f6 4f       	sbci	r31, 0xF6	; 246
    a716:	80 81       	ld	r24, Z
    a718:	90 e0       	ldi	r25, 0x00	; 0
    a71a:	85 56       	subi	r24, 0x65	; 101
    a71c:	91 09       	sbc	r25, r1
    a71e:	f8 9e       	mul	r15, r24
    a720:	f0 01       	movw	r30, r0
    a722:	f9 9e       	mul	r15, r25
    a724:	f0 0d       	add	r31, r0
    a726:	11 24       	eor	r1, r1
    a728:	e8 51       	subi	r30, 0x18	; 24
    a72a:	f2 4f       	sbci	r31, 0xF2	; 242
    a72c:	81 81       	ldd	r24, Z+1	; 0x01
    a72e:	85 36       	cpi	r24, 0x65	; 101
    a730:	90 f1       	brcs	.+100    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
				{
					/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 1: ");*/
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    a732:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a736:	90 e0       	ldi	r25, 0x00	; 0
    a738:	01 97       	sbiw	r24, 0x01	; 1
    a73a:	fc 01       	movw	r30, r24
    a73c:	ee 0f       	add	r30, r30
    a73e:	ff 1f       	adc	r31, r31
    a740:	e8 0f       	add	r30, r24
    a742:	f9 1f       	adc	r31, r25
    a744:	ec 0f       	add	r30, r28
    a746:	fd 1f       	adc	r31, r29
    a748:	e8 56       	subi	r30, 0x68	; 104
    a74a:	f6 4f       	sbci	r31, 0xF6	; 246
    a74c:	80 81       	ld	r24, Z
    a74e:	90 e0       	ldi	r25, 0x00	; 0
    a750:	85 56       	subi	r24, 0x65	; 101
    a752:	91 09       	sbc	r25, r1
    a754:	f8 9e       	mul	r15, r24
    a756:	f0 01       	movw	r30, r0
    a758:	f9 9e       	mul	r15, r25
    a75a:	f0 0d       	add	r31, r0
    a75c:	11 24       	eor	r1, r1
    a75e:	e8 51       	subi	r30, 0x18	; 24
    a760:	f2 4f       	sbci	r31, 0xF2	; 242
    a762:	80 81       	ld	r24, Z
    a764:	81 11       	cpse	r24, r1
    a766:	17 c0       	rjmp	.+46     	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a768:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a76c:	90 e0       	ldi	r25, 0x00	; 0
    a76e:	01 97       	sbiw	r24, 0x01	; 1
    a770:	fc 01       	movw	r30, r24
    a772:	ee 0f       	add	r30, r30
    a774:	ff 1f       	adc	r31, r31
    a776:	e8 0f       	add	r30, r24
    a778:	f9 1f       	adc	r31, r25
    a77a:	ec 0f       	add	r30, r28
    a77c:	fd 1f       	adc	r31, r29
    a77e:	ee 0f       	add	r30, r30
    a780:	ff 1f       	adc	r31, r31
    a782:	e5 5e       	subi	r30, 0xE5	; 229
    a784:	f4 4f       	sbci	r31, 0xF4	; 244
    a786:	20 81       	ld	r18, Z
    a788:	31 81       	ldd	r19, Z+1	; 0x01
    a78a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a78e:	90 e0       	ldi	r25, 0x00	; 0
    a790:	28 17       	cp	r18, r24
    a792:	39 07       	cpc	r19, r25
    a794:	31 f4       	brne	.+12     	; 0xa7a2 <_Z26Fertilizer_Tank_Monitoringv+0x184>
    a796:	21 96       	adiw	r28, 0x01	; 1
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
		}
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    a798:	c3 30       	cpi	r28, 0x03	; 3
    a79a:	d1 05       	cpc	r29, r1
    a79c:	09 f0       	breq	.+2      	; 0xa7a0 <_Z26Fertilizer_Tank_Monitoringv+0x182>
    a79e:	77 cf       	rjmp	.-274    	; 0xa68e <_Z26Fertilizer_Tank_Monitoringv+0x70>
    a7a0:	a0 c0       	rjmp	.+320    	; 0xa8e2 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
						{	
							/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 3: ");*/
							if(_sSchedules.Running_Tank[tank_number] == _kON)
    a7a2:	58 01       	movw	r10, r16
    a7a4:	80 ea       	ldi	r24, 0xA0	; 160
    a7a6:	a8 1a       	sub	r10, r24
    a7a8:	8d ef       	ldi	r24, 0xFD	; 253
    a7aa:	b8 0a       	sbc	r11, r24
    a7ac:	f5 01       	movw	r30, r10
    a7ae:	80 81       	ld	r24, Z
    a7b0:	81 30       	cpi	r24, 0x01	; 1
    a7b2:	09 f0       	breq	.+2      	; 0xa7b6 <_Z26Fertilizer_Tank_Monitoringv+0x198>
    a7b4:	45 c0       	rjmp	.+138    	; 0xa840 <_Z26Fertilizer_Tank_Monitoringv+0x222>
							{
								Doser_Pump_On_Off(_kON);
    a7b6:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
								/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 4: ");*/
								if(_sSchedules.Tank_Running_Timer[tank_number] > _sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a7ba:	8e 01       	movw	r16, r28
    a7bc:	00 0f       	add	r16, r16
    a7be:	11 1f       	adc	r17, r17
    a7c0:	0e 57       	subi	r16, 0x7E	; 126
    a7c2:	14 4f       	sbci	r17, 0xF4	; 244
    a7c4:	f8 01       	movw	r30, r16
    a7c6:	20 81       	ld	r18, Z
    a7c8:	31 81       	ldd	r19, Z+1	; 0x01
    a7ca:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a7ce:	90 e0       	ldi	r25, 0x00	; 0
    a7d0:	01 97       	sbiw	r24, 0x01	; 1
    a7d2:	fc 01       	movw	r30, r24
    a7d4:	ee 0f       	add	r30, r30
    a7d6:	ff 1f       	adc	r31, r31
    a7d8:	e8 0f       	add	r30, r24
    a7da:	f9 1f       	adc	r31, r25
    a7dc:	ec 0f       	add	r30, r28
    a7de:	fd 1f       	adc	r31, r29
    a7e0:	ee 0f       	add	r30, r30
    a7e2:	ff 1f       	adc	r31, r31
    a7e4:	e7 5e       	subi	r30, 0xE7	; 231
    a7e6:	f5 4f       	sbci	r31, 0xF5	; 245
    a7e8:	80 81       	ld	r24, Z
    a7ea:	91 81       	ldd	r25, Z+1	; 0x01
    a7ec:	82 17       	cp	r24, r18
    a7ee:	93 07       	cpc	r25, r19
    a7f0:	90 f6       	brcc	.-92     	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									/* stop tank schedule */
									Doser_Pump_On_Off(_kOFF);
    a7f2:	80 e0       	ldi	r24, 0x00	; 0
    a7f4:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
									_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    a7f8:	f8 01       	movw	r30, r16
    a7fa:	11 82       	std	Z+1, r1	; 0x01
    a7fc:	10 82       	st	Z, r1
									_sSchedules.Running_Tank[tank_number] = _kOFF;
    a7fe:	f5 01       	movw	r30, r10
    a800:	10 82       	st	Z, r1
									//_sSchedules.Already_Fertilze_Status[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
									_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;	
    a802:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a806:	90 e0       	ldi	r25, 0x00	; 0
    a808:	01 97       	sbiw	r24, 0x01	; 1
    a80a:	fc 01       	movw	r30, r24
    a80c:	ee 0f       	add	r30, r30
    a80e:	ff 1f       	adc	r31, r31
    a810:	e8 0f       	add	r30, r24
    a812:	f9 1f       	adc	r31, r25
    a814:	ec 0f       	add	r30, r28
    a816:	fd 1f       	adc	r31, r29
    a818:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a81c:	90 e0       	ldi	r25, 0x00	; 0
    a81e:	ee 0f       	add	r30, r30
    a820:	ff 1f       	adc	r31, r31
    a822:	e5 5e       	subi	r30, 0xE5	; 229
    a824:	f4 4f       	sbci	r31, 0xF4	; 244
    a826:	91 83       	std	Z+1, r25	; 0x01
    a828:	80 83       	st	Z, r24
									Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kOFF);
    a82a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a82e:	90 e0       	ldi	r25, 0x00	; 0
    a830:	01 97       	sbiw	r24, 0x01	; 1
    a832:	98 2f       	mov	r25, r24
    a834:	99 0f       	add	r25, r25
    a836:	89 0f       	add	r24, r25
    a838:	60 e0       	ldi	r22, 0x00	; 0
    a83a:	8e 0d       	add	r24, r14
    a83c:	b9 d9       	rcall	.-3214   	; 0x9bb0 <_Z22Fertilizer_Tank_On_Offhh>
    a83e:	ab cf       	rjmp	.-170    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									
								}
							}
							else
							{
								if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a840:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    a844:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    a848:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a84c:	90 e0       	ldi	r25, 0x00	; 0
    a84e:	01 97       	sbiw	r24, 0x01	; 1
    a850:	fc 01       	movw	r30, r24
    a852:	ee 0f       	add	r30, r30
    a854:	ff 1f       	adc	r31, r31
    a856:	e8 0f       	add	r30, r24
    a858:	f9 1f       	adc	r31, r25
    a85a:	ec 0f       	add	r30, r28
    a85c:	fd 1f       	adc	r31, r29
    a85e:	ee 0f       	add	r30, r30
    a860:	ff 1f       	adc	r31, r31
    a862:	ed 53       	subi	r30, 0x3D	; 61
    a864:	f6 4f       	sbci	r31, 0xF6	; 246
    a866:	80 81       	ld	r24, Z
    a868:	91 81       	ldd	r25, Z+1	; 0x01
    a86a:	82 17       	cp	r24, r18
    a86c:	93 07       	cpc	r25, r19
    a86e:	08 f0       	brcs	.+2      	; 0xa872 <_Z26Fertilizer_Tank_Monitoringv+0x254>
    a870:	92 cf       	rjmp	.-220    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a872:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a876:	90 e0       	ldi	r25, 0x00	; 0
    a878:	01 97       	sbiw	r24, 0x01	; 1
    a87a:	fc 01       	movw	r30, r24
    a87c:	ee 0f       	add	r30, r30
    a87e:	ff 1f       	adc	r31, r31
    a880:	e8 0f       	add	r30, r24
    a882:	f9 1f       	adc	r31, r25
    a884:	ec 0f       	add	r30, r28
    a886:	fd 1f       	adc	r31, r29
    a888:	ee 0f       	add	r30, r30
    a88a:	ff 1f       	adc	r31, r31
    a88c:	e5 5e       	subi	r30, 0xE5	; 229
    a88e:	f4 4f       	sbci	r31, 0xF4	; 244
    a890:	20 81       	ld	r18, Z
    a892:	31 81       	ldd	r19, Z+1	; 0x01
    a894:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a898:	90 e0       	ldi	r25, 0x00	; 0
    a89a:	28 17       	cp	r18, r24
    a89c:	39 07       	cpc	r19, r25
    a89e:	09 f4       	brne	.+2      	; 0xa8a2 <_Z26Fertilizer_Tank_Monitoringv+0x284>
    a8a0:	7a cf       	rjmp	.-268    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									{
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
    a8a2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8a6:	90 e0       	ldi	r25, 0x00	; 0
    a8a8:	01 97       	sbiw	r24, 0x01	; 1
    a8aa:	98 2f       	mov	r25, r24
    a8ac:	99 0f       	add	r25, r25
    a8ae:	89 0f       	add	r24, r25
    a8b0:	61 e0       	ldi	r22, 0x01	; 1
    a8b2:	8e 0d       	add	r24, r14
    a8b4:	7d d9       	rcall	.-3334   	; 0x9bb0 <_Z22Fertilizer_Tank_On_Offhh>
    a8b6:	88 23       	and	r24, r24
    a8b8:	79 f0       	breq	.+30     	; 0xa8d8 <_Z26Fertilizer_Tank_Monitoringv+0x2ba>
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
    a8ba:	10 92 ef 0c 	sts	0x0CEF, r1	; 0x800cef <_gWait_Blower_Time+0x1>
    a8be:	10 92 ee 0c 	sts	0x0CEE, r1	; 0x800cee <_gWait_Blower_Time>
											if(Doser_Pump_On_Off(_kON))
    a8c2:	81 e0       	ldi	r24, 0x01	; 1
    a8c4:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a8c8:	f8 01       	movw	r30, r16
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
											if(Doser_Pump_On_Off(_kON))
    a8ca:	88 23       	and	r24, r24
    a8cc:	31 f0       	breq	.+12     	; 0xa8da <_Z26Fertilizer_Tank_Monitoringv+0x2bc>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a8ce:	e0 5a       	subi	r30, 0xA0	; 160
    a8d0:	fd 4f       	sbci	r31, 0xFD	; 253
    a8d2:	81 e0       	ldi	r24, 0x01	; 1
    a8d4:	80 83       	st	Z, r24
    a8d6:	5f cf       	rjmp	.-322    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a8d8:	f8 01       	movw	r30, r16
    a8da:	ed 5a       	subi	r30, 0xAD	; 173
    a8dc:	fd 4f       	sbci	r31, 0xFD	; 253
    a8de:	d0 82       	st	Z, r13
    a8e0:	5a cf       	rjmp	.-332    	; 0xa796 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					}
				}
			}
		}
	}
}
    a8e2:	df 91       	pop	r29
    a8e4:	cf 91       	pop	r28
    a8e6:	1f 91       	pop	r17
    a8e8:	0f 91       	pop	r16
    a8ea:	ff 90       	pop	r15
    a8ec:	ef 90       	pop	r14
    a8ee:	df 90       	pop	r13
    a8f0:	bf 90       	pop	r11
    a8f2:	af 90       	pop	r10
    a8f4:	08 95       	ret

0000a8f6 <_Z20Schedules_Monitoringv>:
	
}	
	
	
void Schedules_Monitoring(void)
{
    a8f6:	0f 93       	push	r16
    a8f8:	1f 93       	push	r17
    a8fa:	cf 93       	push	r28
    a8fc:	df 93       	push	r29
	unsigned char check_new_true_condition;
	unsigned char Check_for_no_repeat;
	static unsigned char irrigation_Start_Set = _kRESET,flush_running_status=_kRESET;
	static unsigned char mode_change = 0;
	
	_sSchedules.Schedule_Pause_Resume = _kRESET;
    a8fe:	10 92 e5 0b 	sts	0x0BE5, r1	; 0x800be5 <_sSchedules+0x2c7>
	_sSchedules.Based_On_Trigger_Time = _sSchedules.Based_On_Trigger_Time;
    a902:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a906:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
	
	switch(_sSchedules.Based_On_Trigger_Time)
    a90a:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a90e:	82 30       	cpi	r24, 0x02	; 2
    a910:	90 f4       	brcc	.+36     	; 0xa936 <_Z20Schedules_Monitoringv+0x40>
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a912:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a916:	81 30       	cpi	r24, 0x01	; 1
    a918:	91 f4       	brne	.+36     	; 0xa93e <_Z20Schedules_Monitoringv+0x48>
	switch(_sSchedules.Based_On_Trigger_Time)
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a91a:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <_sSchedules+0x1>
    a91e:	91 11       	cpse	r25, r1
    a920:	0e c0       	rjmp	.+28     	; 0xa93e <_Z20Schedules_Monitoringv+0x48>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a922:	90 91 e5 0b 	lds	r25, 0x0BE5	; 0x800be5 <_sSchedules+0x2c7>
    a926:	91 30       	cpi	r25, 0x01	; 1
    a928:	51 f0       	breq	.+20     	; 0xa93e <_Z20Schedules_Monitoringv+0x48>
    a92a:	90 91 f4 13 	lds	r25, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    a92e:	96 34       	cpi	r25, 0x46	; 70
    a930:	09 f0       	breq	.+2      	; 0xa934 <_Z20Schedules_Monitoringv+0x3e>
    a932:	a7 c0       	rjmp	.+334    	; 0xaa82 <_Z20Schedules_Monitoringv+0x18c>
    a934:	04 c0       	rjmp	.+8      	; 0xa93e <_Z20Schedules_Monitoringv+0x48>
			}
		}break;
		
		default:
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
    a936:	81 e0       	ldi	r24, 0x01	; 1
    a938:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
		}break;
	}
	
}					
    a93c:	77 c7       	rjmp	.+3822   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a93e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a942:	88 23       	and	r24, r24
    a944:	21 f0       	breq	.+8      	; 0xa94e <_Z20Schedules_Monitoringv+0x58>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a946:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    a94a:	81 11       	cpse	r24, r1
    a94c:	07 c0       	rjmp	.+14     	; 0xa95c <_Z20Schedules_Monitoringv+0x66>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a94e:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a952:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a956:	89 2b       	or	r24, r25
    a958:	09 f4       	brne	.+2      	; 0xa95c <_Z20Schedules_Monitoringv+0x66>
    a95a:	67 c0       	rjmp	.+206    	; 0xaa2a <_Z20Schedules_Monitoringv+0x134>
				{
					if(_sPump_Parameter.Irrigation_Status)
    a95c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    a960:	81 11       	cpse	r24, r1
					{
						_sPump_Parameter.Irrigation_Status = _kRESET;
    a962:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
					}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a966:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a96a:	81 30       	cpi	r24, 0x01	; 1
    a96c:	51 f4       	brne	.+20     	; 0xa982 <_Z20Schedules_Monitoringv+0x8c>
					{
						_kSERAIL_MON_WRITE("sc enter 60");
    a96e:	6a e4       	ldi	r22, 0x4A	; 74
    a970:	73 e1       	ldi	r23, 0x13	; 19
    a972:	86 ec       	ldi	r24, 0xC6	; 198
    a974:	94 e1       	ldi	r25, 0x14	; 20
    a976:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a97a:	86 ec       	ldi	r24, 0xC6	; 198
    a97c:	94 e1       	ldi	r25, 0x14	; 20
    a97e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
    a982:	80 91 e5 0b 	lds	r24, 0x0BE5	; 0x800be5 <_sSchedules+0x2c7>
    a986:	81 11       	cpse	r24, r1
    a988:	0f c7       	rjmp	.+3614   	; 0xb7a8 <_Z20Schedules_Monitoringv+0xeb2>
    a98a:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    a98e:	81 30       	cpi	r24, 0x01	; 1
    a990:	09 f4       	brne	.+2      	; 0xa994 <_Z20Schedules_Monitoringv+0x9e>
    a992:	0a c7       	rjmp	.+3604   	; 0xb7a8 <_Z20Schedules_Monitoringv+0xeb2>
    a994:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    a998:	86 34       	cpi	r24, 0x46	; 70
    a99a:	09 f4       	brne	.+2      	; 0xa99e <_Z20Schedules_Monitoringv+0xa8>
    a99c:	05 c7       	rjmp	.+3594   	; 0xb7a8 <_Z20Schedules_Monitoringv+0xeb2>
					}
					
					
					
					/* what should happen when scheduler mode id not enabled */
					_sSchedules.New_Schedules_Occur = _kRESET;
    a99e:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    a9a2:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    a9a6:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a9aa:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    a9ae:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a9b2:	81 11       	cpse	r24, r1
    a9b4:	d9 c6       	rjmp	.+3506   	; 0xb768 <_Z20Schedules_Monitoringv+0xe72>
						Turn_Off_Blower_For_Safety();
					}
					
					//_sSchedules.Which_Sheduler_Is_Running = _kRESET;  // 17/02/2023
					
						if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a9b6:	0e 94 f7 c0 	call	0x181ee	; 0x181ee <_Z15Stop_Irrigationv>
    a9ba:	81 11       	cpse	r24, r1
    a9bc:	03 c0       	rjmp	.+6      	; 0xa9c4 <_Z20Schedules_Monitoringv+0xce>
						{
							_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    a9be:	84 e0       	ldi	r24, 0x04	; 4
    a9c0:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
						}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9c4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a9c8:	81 30       	cpi	r24, 0x01	; 1
    a9ca:	e1 f4       	brne	.+56     	; 0xaa04 <_Z20Schedules_Monitoringv+0x10e>
					{
						_kSERAIL_MON_WRITE("Scheduler gets off 11 : ");
    a9cc:	69 e1       	ldi	r22, 0x19	; 25
    a9ce:	73 e1       	ldi	r23, 0x13	; 19
    a9d0:	86 ec       	ldi	r24, 0xC6	; 198
    a9d2:	94 e1       	ldi	r25, 0x14	; 20
    a9d4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a9d8:	86 ec       	ldi	r24, 0xC6	; 198
    a9da:	94 e1       	ldi	r25, 0x14	; 20
    a9dc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running);
    a9e0:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    a9e4:	4a e0       	ldi	r20, 0x0A	; 10
    a9e6:	50 e0       	ldi	r21, 0x00	; 0
    a9e8:	86 ec       	ldi	r24, 0xC6	; 198
    a9ea:	94 e1       	ldi	r25, 0x14	; 20
    a9ec:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						
						_kSERAIL_MON_WRITE("sc enter 59.1");
    a9f0:	6b e0       	ldi	r22, 0x0B	; 11
    a9f2:	73 e1       	ldi	r23, 0x13	; 19
    a9f4:	86 ec       	ldi	r24, 0xC6	; 198
    a9f6:	94 e1       	ldi	r25, 0x14	; 20
    a9f8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a9fc:	86 ec       	ldi	r24, 0xC6	; 198
    a9fe:	94 e1       	ldi	r25, 0x14	; 20
    aa00:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    aa04:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aa08:	81 e0       	ldi	r24, 0x01	; 1
    aa0a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    aa0e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					
					_sSchedules.Schedule_Are_Started = _kRESET;
    aa12:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    aa16:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    aa1a:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    aa1e:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    aa22:	89 13       	cpse	r24, r25
    aa24:	b8 c6       	rjmp	.+3440   	; 0xb796 <_Z20Schedules_Monitoringv+0xea0>
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
						}
					}
					
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aa26:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
					
				}
				
				if(_sSchedules.New_Schedules_Occur != _kRESET)
    aa2a:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    aa2e:	88 23       	and	r24, r24
    aa30:	b9 f0       	breq	.+46     	; 0xaa60 <_Z20Schedules_Monitoringv+0x16a>
				{
					_sSchedules.New_Schedules_Occur = _kRESET;
    aa32:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    aa36:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aa3a:	81 e0       	ldi	r24, 0x01	; 1
    aa3c:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    aa40:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    aa44:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    aa48:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					_sSchedules.New_Schedules_Occur = _kRESET;
    aa4c:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    aa50:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    aa54:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    aa58:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
				
				
				
					Edited_In_Schedule();
    aa5c:	0e 94 45 40 	call	0x808a	; 0x808a <_Z18Edited_In_Schedulev>
				}
				
				if(_sRuble_Parameters.Irrigating_Plot && _sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    aa60:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    aa64:	88 23       	and	r24, r24
    aa66:	09 f4       	brne	.+2      	; 0xaa6a <_Z20Schedules_Monitoringv+0x174>
    aa68:	e1 c6       	rjmp	.+3522   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    aa6a:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    aa6e:	85 30       	cpi	r24, 0x05	; 5
    aa70:	09 f0       	breq	.+2      	; 0xaa74 <_Z20Schedules_Monitoringv+0x17e>
    aa72:	dc c6       	rjmp	.+3512   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
				{
					Stop_Irrigation();
    aa74:	0e 94 f7 c0 	call	0x181ee	; 0x181ee <_Z15Stop_Irrigationv>
					_sRuble_Parameters.Pump_Run_Timer = _kRESET;
    aa78:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
    aa7c:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
    aa80:	d5 c6       	rjmp	.+3498   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
			_sRuble_Parameters.Update_Local_Date[2] != 70)
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    aa82:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    aa86:	95 30       	cpi	r25, 0x05	; 5
    aa88:	09 f0       	breq	.+2      	; 0xaa8c <_Z20Schedules_Monitoringv+0x196>
    aa8a:	42 c0       	rjmp	.+132    	; 0xab10 <_Z20Schedules_Monitoringv+0x21a>
				{
					mode_change = _kSET;
    aa8c:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
					if(flush_running_status == _kSET)
    aa90:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
    aa94:	81 30       	cpi	r24, 0x01	; 1
    aa96:	61 f4       	brne	.+24     	; 0xaab0 <_Z20Schedules_Monitoringv+0x1ba>
					{
						if(_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    aa98:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    aa9c:	81 30       	cpi	r24, 0x01	; 1
    aa9e:	41 f0       	breq	.+16     	; 0xaab0 <_Z20Schedules_Monitoringv+0x1ba>
						&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET)
    aaa0:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
    aaa4:	81 11       	cpse	r24, r1
    aaa6:	04 c0       	rjmp	.+8      	; 0xaab0 <_Z20Schedules_Monitoringv+0x1ba>
						{
							flush_running_status = _kRESET;
    aaa8:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aaac:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						{
							
						}
					}
					
					if(irrigation_Start_Set == _kSET)
    aab0:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
    aab4:	81 30       	cpi	r24, 0x01	; 1
    aab6:	79 f4       	brne	.+30     	; 0xaad6 <_Z20Schedules_Monitoringv+0x1e0>
					{
						irrigation_Start_Set = _kRESET;
    aab8:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    aabc:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    aac0:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    aac4:	89 17       	cp	r24, r25
    aac6:	39 f0       	breq	.+14     	; 0xaad6 <_Z20Schedules_Monitoringv+0x1e0>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    aac8:	88 23       	and	r24, r24
    aaca:	29 f0       	breq	.+10     	; 0xaad6 <_Z20Schedules_Monitoringv+0x1e0>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    aacc:	60 e0       	ldi	r22, 0x00	; 0
    aace:	0e 94 33 27 	call	0x4e66	; 0x4e66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    aad2:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
							}
						}
					}
					
					//_kSERAIL_MON_WRITE("sc enter 0.1");   //1/05
					if(_sSchedules.Scheduler_Retry_Timer == _kRESET)   /* if there is no wait timer to start the schedule again */
    aad6:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    aada:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    aade:	89 2b       	or	r24, r25
    aae0:	41 f4       	brne	.+16     	; 0xaaf2 <_Z20Schedules_Monitoringv+0x1fc>
					{
						//_kSERAIL_MON_WRITE("sc enter 0.2");     //1/05
						flush_running_status = _kRESET;
    aae2:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
						if(_sSchedules.Shedule_Run_Status_Is_Triggered == _kSET && flush_running_status == _kRESET)
    aae6:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <_sSchedules+0x6>
    aaea:	81 30       	cpi	r24, 0x01	; 1
    aaec:	09 f0       	breq	.+2      	; 0xaaf0 <_Z20Schedules_Monitoringv+0x1fa>
    aaee:	ea c0       	rjmp	.+468    	; 0xacc4 <_Z20Schedules_Monitoringv+0x3ce>
    aaf0:	60 c0       	rjmp	.+192    	; 0xabb2 <_Z20Schedules_Monitoringv+0x2bc>
							/*********************************************************************************/
						}
					}
					else
					{
						if(_sSchedules.Scheduler_Retry_Timer < 10)
    aaf2:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    aaf6:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    aafa:	0a 97       	sbiw	r24, 0x0a	; 10
    aafc:	08 f0       	brcs	.+2      	; 0xab00 <_Z20Schedules_Monitoringv+0x20a>
    aafe:	96 c6       	rjmp	.+3372   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
						{	
							if(_sPump_Parameter.Irrigation_Status)
    ab00:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    ab04:	88 23       	and	r24, r24
    ab06:	09 f4       	brne	.+2      	; 0xab0a <_Z20Schedules_Monitoringv+0x214>
    ab08:	91 c6       	rjmp	.+3362   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
							{
								_sPump_Parameter.Irrigation_Status = _kRESET;
    ab0a:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
    ab0e:	8e c6       	rjmp	.+3356   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
					}
				}
				else
				{
					/* what should happen if scheduler operation mode is not selected */
					if(mode_change)
    ab10:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
    ab14:	88 23       	and	r24, r24
    ab16:	09 f4       	brne	.+2      	; 0xab1a <_Z20Schedules_Monitoringv+0x224>
    ab18:	89 c6       	rjmp	.+3346   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
					{
						mode_change = _kRESET;
    ab1a:	10 92 1d 09 	sts	0x091D, r1	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
						if(_sPump_Parameter.Irrigation_Status)
    ab1e:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    ab22:	81 11       	cpse	r24, r1
						{
							_sPump_Parameter.Irrigation_Status = _kRESET;
    ab24:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
						}
						if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    ab28:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ab2c:	88 23       	and	r24, r24
    ab2e:	89 f1       	breq	.+98     	; 0xab92 <_Z20Schedules_Monitoringv+0x29c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    ab30:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ab34:	81 30       	cpi	r24, 0x01	; 1
    ab36:	51 f4       	brne	.+20     	; 0xab4c <_Z20Schedules_Monitoringv+0x256>
							{
								_kSERAIL_MON_WRITE("sc enter 58");
    ab38:	62 e6       	ldi	r22, 0x62	; 98
    ab3a:	73 e1       	ldi	r23, 0x13	; 19
    ab3c:	86 ec       	ldi	r24, 0xC6	; 198
    ab3e:	94 e1       	ldi	r25, 0x14	; 20
    ab40:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    ab44:	86 ec       	ldi	r24, 0xC6	; 198
    ab46:	94 e1       	ldi	r25, 0x14	; 20
    ab48:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    ab4c:	83 e0       	ldi	r24, 0x03	; 3
    ab4e:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
							Turn_Off_All_Tank_For_Safety();
    ab52:	0e 94 50 3d 	call	0x7aa0	; 0x7aa0 <_Z28Turn_Off_All_Tank_For_Safetyv>
							Blower_Monitoring(_kFORCEFULYY_OFF);    // 11-4
    ab56:	83 e0       	ldi	r24, 0x03	; 3
    ab58:	0e 94 15 3e 	call	0x7c2a	; 0x7c2a <_Z17Blower_Monitoringh>
							Turn_Off_Blower_For_Safety();
						
							//_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    ab5c:	0e 94 f7 c0 	call	0x181ee	; 0x181ee <_Z15Stop_Irrigationv>
    ab60:	81 11       	cpse	r24, r1
    ab62:	11 c0       	rjmp	.+34     	; 0xab86 <_Z20Schedules_Monitoringv+0x290>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    ab64:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ab68:	81 30       	cpi	r24, 0x01	; 1
    ab6a:	51 f4       	brne	.+20     	; 0xab80 <_Z20Schedules_Monitoringv+0x28a>
								{
									_kSERAIL_MON_WRITE("sc enter 59");
    ab6c:	66 e5       	ldi	r22, 0x56	; 86
    ab6e:	73 e1       	ldi	r23, 0x13	; 19
    ab70:	86 ec       	ldi	r24, 0xC6	; 198
    ab72:	94 e1       	ldi	r25, 0x14	; 20
    ab74:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    ab78:	86 ec       	ldi	r24, 0xC6	; 198
    ab7a:	94 e1       	ldi	r25, 0x14	; 20
    ab7c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								
								_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    ab80:	84 e0       	ldi	r24, 0x04	; 4
    ab82:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
							}				
							_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    ab86:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
							_sSchedules.Pump_On_In_Scheduler = _kRESET;
    ab8a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);	
    ab8e:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						}
						
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    ab92:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    ab96:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ab9a:	89 17       	cp	r24, r25
    ab9c:	09 f4       	brne	.+2      	; 0xaba0 <_Z20Schedules_Monitoringv+0x2aa>
    ab9e:	46 c6       	rjmp	.+3212   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    aba0:	88 23       	and	r24, r24
    aba2:	09 f4       	brne	.+2      	; 0xaba6 <_Z20Schedules_Monitoringv+0x2b0>
    aba4:	43 c6       	rjmp	.+3206   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    aba6:	60 e0       	ldi	r22, 0x00	; 0
    aba8:	0e 94 33 27 	call	0x4e66	; 0x4e66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    abac:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
    abb0:	3d c6       	rjmp	.+3194   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    abb2:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    abb6:	f0 e0       	ldi	r31, 0x00	; 0
    abb8:	e9 57       	subi	r30, 0x79	; 121
    abba:	f6 4f       	sbci	r31, 0xF6	; 246
    abbc:	40 81       	ld	r20, Z
													
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
    abbe:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    abc2:	f0 e0       	ldi	r31, 0x00	; 0
    abc4:	e8 58       	subi	r30, 0x88	; 136
    abc6:	f6 4f       	sbci	r31, 0xF6	; 246
    abc8:	60 81       	ld	r22, Z
    abca:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    abce:	0e 94 bd 38 	call	0x717a	; 0x717a <_Z22Day_In_Bet_Schedullinghhh>
								
								if(check_new_true_condition == 2)
								{
									check_new_true_condition = _kSET;
								}
								else if(check_new_true_condition == 1)
    abd2:	81 50       	subi	r24, 0x01	; 1
    abd4:	82 30       	cpi	r24, 0x02	; 2
    abd6:	08 f4       	brcc	.+2      	; 0xabda <_Z20Schedules_Monitoringv+0x2e4>
    abd8:	8d c1       	rjmp	.+794    	; 0xaef4 <_Z20Schedules_Monitoringv+0x5fe>
									}
								}
							}
							else
							{
								if(_sSchedules.Which_Sheduler_Is_Running > _kNUMBER_OF_SCHEDULES+1) /* when reach to the last scheduler */
    abda:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    abde:	80 31       	cpi	r24, 0x10	; 16
    abe0:	90 f1       	brcs	.+100    	; 0xac46 <_Z20Schedules_Monitoringv+0x350>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    abe2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    abe6:	81 30       	cpi	r24, 0x01	; 1
    abe8:	31 f4       	brne	.+12     	; 0xabf6 <_Z20Schedules_Monitoringv+0x300>
									{
										_kSERAIL_MON_WRITE("sc enter 10");
    abea:	63 ec       	ldi	r22, 0xC3	; 195
    abec:	74 e1       	ldi	r23, 0x14	; 20
    abee:	86 ec       	ldi	r24, 0xC6	; 198
    abf0:	94 e1       	ldi	r25, 0x14	; 20
    abf2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									}
									_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    abf6:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
									_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    abfa:	81 e0       	ldi	r24, 0x01	; 1
    abfc:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
									_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    ac00:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
									
									if(_sSchedules.Schedule_Are_Started == _kSET)
    ac04:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    ac08:	81 30       	cpi	r24, 0x01	; 1
    ac0a:	61 f4       	brne	.+24     	; 0xac24 <_Z20Schedules_Monitoringv+0x32e>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac0c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ac10:	81 30       	cpi	r24, 0x01	; 1
    ac12:	31 f4       	brne	.+12     	; 0xac20 <_Z20Schedules_Monitoringv+0x32a>
										{
											_kSERAIL_MON_WRITE("sc enter 11");
    ac14:	67 eb       	ldi	r22, 0xB7	; 183
    ac16:	74 e1       	ldi	r23, 0x14	; 20
    ac18:	86 ec       	ldi	r24, 0xC6	; 198
    ac1a:	94 e1       	ldi	r25, 0x14	; 20
    ac1c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										}
										_sSchedules.Schedule_Are_Started = _kRESET;
    ac20:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										/* save in eeprom */
									}
									
									_sSchedules.all_schedule_done_flag = _eSET;								
    ac24:	82 e0       	ldi	r24, 0x02	; 2
    ac26:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    ac2a:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    ac2e:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
									_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    ac32:	80 91 ef 0b 	lds	r24, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    ac36:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    ac3a:	df 91       	pop	r29
    ac3c:	cf 91       	pop	r28
    ac3e:	1f 91       	pop	r17
    ac40:	0f 91       	pop	r16
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
										}
																					
										Set_Trigger_Time();								
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ac42:	0c 94 83 32 	jmp	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									/* save in eeprom */
								}
								else
								{
									_sSchedules.Which_Sheduler_Is_Running++;  /* when time of current schedule over then next scheduler should be select */
    ac46:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac4a:	8f 5f       	subi	r24, 0xFF	; 255
    ac4c:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
									if(_sSchedules.Which_Sheduler_Is_Running == 1)
    ac50:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac54:	81 30       	cpi	r24, 0x01	; 1
    ac56:	09 f0       	breq	.+2      	; 0xac5a <_Z20Schedules_Monitoringv+0x364>
    ac58:	e9 c5       	rjmp	.+3026   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
									{
										_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    ac5a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    ac5e:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
										_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    ac62:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    ac66:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac6a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ac6e:	81 30       	cpi	r24, 0x01	; 1
    ac70:	91 f4       	brne	.+36     	; 0xac96 <_Z20Schedules_Monitoringv+0x3a0>
										{
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
    ac72:	65 e8       	ldi	r22, 0x85	; 133
    ac74:	74 e1       	ldi	r23, 0x14	; 20
    ac76:	86 ec       	ldi	r24, 0xC6	; 198
    ac78:	94 e1       	ldi	r25, 0x14	; 20
    ac7a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
    ac7e:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    ac82:	4a e0       	ldi	r20, 0x0A	; 10
    ac84:	50 e0       	ldi	r21, 0x00	; 0
    ac86:	86 ec       	ldi	r24, 0xC6	; 198
    ac88:	94 e1       	ldi	r25, 0x14	; 20
    ac8a:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
											_kSERIAL_MON_CLEAR();
    ac8e:	86 ec       	ldi	r24, 0xC6	; 198
    ac90:	94 e1       	ldi	r25, 0x14	; 20
    ac92:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										Return_Calculated_Previous_Day_Date(1);										
    ac96:	81 e0       	ldi	r24, 0x01	; 1
    ac98:	0e 94 3e 33 	call	0x667c	; 0x667c <_Z35Return_Calculated_Previous_Day_Dateh>
    ac9c:	81 e0       	ldi	r24, 0x01	; 1
    ac9e:	90 e0       	ldi	r25, 0x00	; 0
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
										{
											_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    aca0:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    aca4:	9c 01       	movw	r18, r24
    aca6:	22 5e       	subi	r18, 0xE2	; 226
    aca8:	36 4f       	sbci	r19, 0xF6	; 246
    acaa:	f9 01       	movw	r30, r18
    acac:	e5 5a       	subi	r30, 0xA5	; 165
    acae:	ff 4f       	sbci	r31, 0xFF	; 255
    acb0:	40 83       	st	Z, r20
											_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    acb2:	40 91 ed 0b 	lds	r20, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    acb6:	3f 96       	adiw	r30, 0x0f	; 15
    acb8:	40 83       	st	Z, r20
    acba:	01 96       	adiw	r24, 0x01	; 1
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
											_kSERIAL_MON_CLEAR();
										}
										Return_Calculated_Previous_Day_Date(1);										
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    acbc:	8e 30       	cpi	r24, 0x0E	; 14
    acbe:	91 05       	cpc	r25, r1
    acc0:	79 f7       	brne	.-34     	; 0xaca0 <_Z20Schedules_Monitoringv+0x3aa>
    acc2:	b4 c5       	rjmp	.+2920   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
// 							{
// 								return;
// 							}
							/* write logic to trigger the schedule */
							/* calculate trigger reset of time *there will be lag of 2 min* */
							if(_sSchedules.Based_On_Trigger_Time == _kSET)
    acc4:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    acc8:	81 30       	cpi	r24, 0x01	; 1
    acca:	b1 f5       	brne	.+108    	; 0xad38 <_Z20Schedules_Monitoringv+0x442>
							{
								if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    accc:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    acd0:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    acd4:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    acd8:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    acdc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ace0:	4c 32       	cpi	r20, 0x2C	; 44
    ace2:	51 40       	sbci	r21, 0x01	; 1
    ace4:	61 05       	cpc	r22, r1
    ace6:	71 05       	cpc	r23, r1
    ace8:	d0 f4       	brcc	.+52     	; 0xad1e <_Z20Schedules_Monitoringv+0x428>
								{
									_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    acea:	47 e1       	ldi	r20, 0x17	; 23
    acec:	50 e5       	ldi	r21, 0x50	; 80
    acee:	61 e0       	ldi	r22, 0x01	; 1
    acf0:	70 e0       	ldi	r23, 0x00	; 0
    acf2:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    acf6:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    acfa:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    acfe:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad02:	81 30       	cpi	r24, 0x01	; 1
    ad04:	09 f0       	breq	.+2      	; 0xad08 <_Z20Schedules_Monitoringv+0x412>
    ad06:	47 c0       	rjmp	.+142    	; 0xad96 <_Z20Schedules_Monitoringv+0x4a0>
									{
										_kSERAIL_MON_WRITE("sc enter 11.1");
    ad08:	67 e7       	ldi	r22, 0x77	; 119
    ad0a:	74 e1       	ldi	r23, 0x14	; 20
    ad0c:	86 ec       	ldi	r24, 0xC6	; 198
    ad0e:	94 e1       	ldi	r25, 0x14	; 20
    ad10:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    ad14:	86 ec       	ldi	r24, 0xC6	; 198
    ad16:	94 e1       	ldi	r25, 0x14	; 20
    ad18:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    ad1c:	3c c0       	rjmp	.+120    	; 0xad96 <_Z20Schedules_Monitoringv+0x4a0>
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad1e:	81 30       	cpi	r24, 0x01	; 1
    ad20:	31 f5       	brne	.+76     	; 0xad6e <_Z20Schedules_Monitoringv+0x478>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2");
    ad22:	69 e6       	ldi	r22, 0x69	; 105
    ad24:	74 e1       	ldi	r23, 0x14	; 20
    ad26:	86 ec       	ldi	r24, 0xC6	; 198
    ad28:	94 e1       	ldi	r25, 0x14	; 20
    ad2a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    ad2e:	86 ec       	ldi	r24, 0xC6	; 198
    ad30:	94 e1       	ldi	r25, 0x14	; 20
    ad32:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    ad36:	1b c0       	rjmp	.+54     	; 0xad6e <_Z20Schedules_Monitoringv+0x478>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ad38:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    ad3c:	81 11       	cpse	r24, r1
    ad3e:	4e c3       	rjmp	.+1692   	; 0xb3dc <_Z20Schedules_Monitoringv+0xae6>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ad40:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    ad44:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    ad48:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    ad4c:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    ad50:	89 2b       	or	r24, r25
    ad52:	8a 2b       	or	r24, r26
    ad54:	8b 2b       	or	r24, r27
    ad56:	09 f0       	breq	.+2      	; 0xad5a <_Z20Schedules_Monitoringv+0x464>
    ad58:	41 c3       	rjmp	.+1666   	; 0xb3dc <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    ad5a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ad5e:	81 11       	cpse	r24, r1
    ad60:	3d c3       	rjmp	.+1658   	; 0xb3dc <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    ad62:	80 91 6a 14 	lds	r24, 0x146A	; 0x80146a <_sRuble_Parameters+0xbc>
    ad66:	81 30       	cpi	r24, 0x01	; 1
    ad68:	09 f0       	breq	.+2      	; 0xad6c <_Z20Schedules_Monitoringv+0x476>
    ad6a:	38 c3       	rjmp	.+1648   	; 0xb3dc <_Z20Schedules_Monitoringv+0xae6>
    ad6c:	20 c3       	rjmp	.+1600   	; 0xb3ae <_Z20Schedules_Monitoringv+0xab8>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
										}
										else
										{
											_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    ad6e:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    ad72:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    ad76:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    ad7a:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    ad7e:	8c 52       	subi	r24, 0x2C	; 44
    ad80:	91 40       	sbci	r25, 0x01	; 1
    ad82:	a1 09       	sbc	r26, r1
    ad84:	b1 09       	sbc	r27, r1
    ad86:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    ad8a:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    ad8e:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    ad92:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
										}
									}
								}
							}	
							
							irrigation_Start_Set = _kRESET;
    ad96:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    ad9a:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    ad9e:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ada2:	89 17       	cp	r24, r25
    ada4:	59 f0       	breq	.+22     	; 0xadbc <_Z20Schedules_Monitoringv+0x4c6>
							{
								if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    ada6:	88 23       	and	r24, r24
    ada8:	49 f0       	breq	.+18     	; 0xadbc <_Z20Schedules_Monitoringv+0x4c6>
								{
									Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    adaa:	60 e0       	ldi	r22, 0x00	; 0
    adac:	0e 94 33 27 	call	0x4e66	; 0x4e66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
									_kSERIAL_MON_CLEAR();
    adb0:	86 ec       	ldi	r24, 0xC6	; 198
    adb2:	94 e1       	ldi	r25, 0x14	; 20
    adb4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    adb8:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
								}
							}	
													
							if(_sRuble_Parameters.Irrigating_Plot != _kRESET)
    adbc:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    adc0:	88 23       	and	r24, r24
    adc2:	09 f4       	brne	.+2      	; 0xadc6 <_Z20Schedules_Monitoringv+0x4d0>
    adc4:	43 c0       	rjmp	.+134    	; 0xae4c <_Z20Schedules_Monitoringv+0x556>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    adc6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    adca:	81 30       	cpi	r24, 0x01	; 1
    adcc:	51 f4       	brne	.+20     	; 0xade2 <_Z20Schedules_Monitoringv+0x4ec>
								{
									_kSERAIL_MON_WRITE("sc enter 6.0..........................");
    adce:	62 e3       	ldi	r22, 0x32	; 50
    add0:	74 e1       	ldi	r23, 0x14	; 20
    add2:	86 ec       	ldi	r24, 0xC6	; 198
    add4:	94 e1       	ldi	r25, 0x14	; 20
    add6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    adda:	86 ec       	ldi	r24, 0xC6	; 198
    addc:	94 e1       	ldi	r25, 0x14	; 20
    adde:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status          !=_kSCHEDULER_ON
    ade2:	80 91 56 0e 	lds	r24, 0x0E56	; 0x800e56 <_sExtra_Plot+0x6e>
    ade6:	84 30       	cpi	r24, 0x04	; 4
    ade8:	89 f1       	breq	.+98     	; 0xae4c <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    adea:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    adee:	81 30       	cpi	r24, 0x01	; 1
    adf0:	69 f1       	breq	.+90     	; 0xae4c <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET
    adf2:	80 91 54 0e 	lds	r24, 0x0E54	; 0x800e54 <_sExtra_Plot+0x6c>
    adf6:	81 11       	cpse	r24, r1
    adf8:	29 c0       	rjmp	.+82     	; 0xae4c <_Z20Schedules_Monitoringv+0x556>
								/*&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET
								&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET*/)
								{
									if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    adfa:	0e 94 f7 c0 	call	0x181ee	; 0x181ee <_Z15Stop_Irrigationv>
    adfe:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ae02:	81 11       	cpse	r24, r1
    ae04:	13 c0       	rjmp	.+38     	; 0xae2c <_Z20Schedules_Monitoringv+0x536>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae06:	91 30       	cpi	r25, 0x01	; 1
    ae08:	51 f4       	brne	.+20     	; 0xae1e <_Z20Schedules_Monitoringv+0x528>
										{
											_kSERAIL_MON_WRITE("sc enter 6.1..........................");
    ae0a:	6b e0       	ldi	r22, 0x0B	; 11
    ae0c:	74 e1       	ldi	r23, 0x14	; 20
    ae0e:	86 ec       	ldi	r24, 0xC6	; 198
    ae10:	94 e1       	ldi	r25, 0x14	; 20
    ae12:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ae16:	86 ec       	ldi	r24, 0xC6	; 198
    ae18:	94 e1       	ldi	r25, 0x14	; 20
    ae1a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ae1e:	88 e5       	ldi	r24, 0x58	; 88
    ae20:	92 e0       	ldi	r25, 0x02	; 2
    ae22:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ae26:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    ae2a:	0c c0       	rjmp	.+24     	; 0xae44 <_Z20Schedules_Monitoringv+0x54e>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae2c:	91 30       	cpi	r25, 0x01	; 1
    ae2e:	51 f4       	brne	.+20     	; 0xae44 <_Z20Schedules_Monitoringv+0x54e>
										{
											_kSERAIL_MON_WRITE("sc enter 7.1");
    ae30:	6e ef       	ldi	r22, 0xFE	; 254
    ae32:	73 e1       	ldi	r23, 0x13	; 19
    ae34:	86 ec       	ldi	r24, 0xC6	; 198
    ae36:	94 e1       	ldi	r25, 0x14	; 20
    ae38:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ae3c:	86 ec       	ldi	r24, 0xC6	; 198
    ae3e:	94 e1       	ldi	r25, 0x14	; 20
    ae40:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ae44:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ae48:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
								}
							}							
							/* check the current time with trigger reset time */
							/*********************************************************************************/
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
    ae4c:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    ae50:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    ae54:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    ae58:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    ae5c:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    ae60:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    ae64:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    ae68:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    ae6c:	48 17       	cp	r20, r24
    ae6e:	59 07       	cpc	r21, r25
    ae70:	6a 07       	cpc	r22, r26
    ae72:	7b 07       	cpc	r23, r27
    ae74:	80 f4       	brcc	.+32     	; 0xae96 <_Z20Schedules_Monitoringv+0x5a0>
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
    ae76:	0e 94 b7 48 	call	0x916e	; 0x916e <_Z30Compare_Trigger_And_Reset_Timev>
    ae7a:	c8 2f       	mov	r28, r24
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    ae7c:	81 11       	cpse	r24, r1
    ae7e:	ce c2       	rjmp	.+1436   	; 0xb41c <_Z20Schedules_Monitoringv+0xb26>
    ae80:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    ae84:	81 30       	cpi	r24, 0x01	; 1
    ae86:	09 f0       	breq	.+2      	; 0xae8a <_Z20Schedules_Monitoringv+0x594>
    ae88:	d1 c4       	rjmp	.+2466   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    ae8a:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    ae8e:	81 30       	cpi	r24, 0x01	; 1
    ae90:	09 f0       	breq	.+2      	; 0xae94 <_Z20Schedules_Monitoringv+0x59e>
    ae92:	cc c4       	rjmp	.+2456   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    ae94:	c3 c2       	rjmp	.+1414   	; 0xb41c <_Z20Schedules_Monitoringv+0xb26>
									}
								}
							}
							else
							{
								if(_sSchedules.Trigger_Time >= _sSchedules.Trigger_Reset)
    ae96:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    ae9a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    ae9e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    aea2:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    aea6:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    aeaa:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    aeae:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    aeb2:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    aeb6:	48 17       	cp	r20, r24
    aeb8:	59 07       	cpc	r21, r25
    aeba:	6a 07       	cpc	r22, r26
    aebc:	7b 07       	cpc	r23, r27
    aebe:	08 f4       	brcc	.+2      	; 0xaec2 <_Z20Schedules_Monitoringv+0x5cc>
    aec0:	b5 c4       	rjmp	.+2410   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
								{
									check_true_condition = Compare_Trigger_And_Reset_Time();
    aec2:	0e 94 b7 48 	call	0x916e	; 0x916e <_Z30Compare_Trigger_And_Reset_Timev>
    aec6:	c8 2f       	mov	r28, r24
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    aec8:	81 11       	cpse	r24, r1
    aeca:	ed c2       	rjmp	.+1498   	; 0xb4a6 <_Z20Schedules_Monitoringv+0xbb0>
    aecc:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    aed0:	81 30       	cpi	r24, 0x01	; 1
    aed2:	29 f4       	brne	.+10     	; 0xaede <_Z20Schedules_Monitoringv+0x5e8>
    aed4:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    aed8:	81 30       	cpi	r24, 0x01	; 1
    aeda:	09 f4       	brne	.+2      	; 0xaede <_Z20Schedules_Monitoringv+0x5e8>
    aedc:	e4 c2       	rjmp	.+1480   	; 0xb4a6 <_Z20Schedules_Monitoringv+0xbb0>
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
										}
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    aede:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    aee2:	81 30       	cpi	r24, 0x01	; 1
    aee4:	09 f0       	breq	.+2      	; 0xaee8 <_Z20Schedules_Monitoringv+0x5f2>
    aee6:	a2 c4       	rjmp	.+2372   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    aee8:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    aeec:	81 30       	cpi	r24, 0x01	; 1
    aeee:	09 f0       	breq	.+2      	; 0xaef2 <_Z20Schedules_Monitoringv+0x5fc>
    aef0:	9d c4       	rjmp	.+2362   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    aef2:	36 c3       	rjmp	.+1644   	; 0xb560 <_Z20Schedules_Monitoringv+0xc6a>
									check_new_true_condition = _kRESET;
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
    aef4:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    aef8:	f0 e0       	ldi	r31, 0x00	; 0
    aefa:	e3 5e       	subi	r30, 0xE3	; 227
    aefc:	f6 4f       	sbci	r31, 0xF6	; 246
    aefe:	15 ad       	ldd	r17, Z+61	; 0x3d
    af00:	11 30       	cpi	r17, 0x01	; 1
    af02:	09 f0       	breq	.+2      	; 0xaf06 <_Z20Schedules_Monitoringv+0x610>
    af04:	6a ce       	rjmp	.-812    	; 0xabda <_Z20Schedules_Monitoringv+0x2e4>
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    af06:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af0a:	f0 e0       	ldi	r31, 0x00	; 0
    af0c:	e7 59       	subi	r30, 0x97	; 151
    af0e:	f6 4f       	sbci	r31, 0xF6	; 246
    af10:	80 81       	ld	r24, Z
    af12:	90 e0       	ldi	r25, 0x00	; 0
    af14:	01 97       	sbiw	r24, 0x01	; 1
    af16:	26 e0       	ldi	r18, 0x06	; 6
    af18:	28 9f       	mul	r18, r24
    af1a:	f0 01       	movw	r30, r0
    af1c:	29 9f       	mul	r18, r25
    af1e:	f0 0d       	add	r31, r0
    af20:	11 24       	eor	r1, r1
    af22:	e2 5b       	subi	r30, 0xB2	; 178
    af24:	f2 4f       	sbci	r31, 0xF2	; 242
    af26:	80 81       	ld	r24, Z
    af28:	88 23       	and	r24, r24
    af2a:	09 f4       	brne	.+2      	; 0xaf2e <_Z20Schedules_Monitoringv+0x638>
    af2c:	56 ce       	rjmp	.-852    	; 0xabda <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
    af2e:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af32:	f0 e0       	ldi	r31, 0x00	; 0
    af34:	e7 59       	subi	r30, 0x97	; 151
    af36:	f6 4f       	sbci	r31, 0xF6	; 246
    af38:	80 81       	ld	r24, Z
    af3a:	90 e0       	ldi	r25, 0x00	; 0
    af3c:	01 97       	sbiw	r24, 0x01	; 1
    af3e:	28 9f       	mul	r18, r24
    af40:	f0 01       	movw	r30, r0
    af42:	29 9f       	mul	r18, r25
    af44:	f0 0d       	add	r31, r0
    af46:	11 24       	eor	r1, r1
    af48:	e2 5b       	subi	r30, 0xB2	; 178
    af4a:	f2 4f       	sbci	r31, 0xF2	; 242
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    af4c:	80 81       	ld	r24, Z
    af4e:	8f 30       	cpi	r24, 0x0F	; 15
    af50:	08 f0       	brcs	.+2      	; 0xaf54 <_Z20Schedules_Monitoringv+0x65e>
    af52:	43 ce       	rjmp	.-890    	; 0xabda <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
							{
								Check_for_no_repeat = Do_Not_Repeat_Schedule();	
    af54:	0e 94 89 46 	call	0x8d12	; 0x8d12 <_Z22Do_Not_Repeat_Schedulev>
    af58:	d8 2f       	mov	r29, r24
								//_kSERAIL_MON_WRITE("sc enter 0.3");   //1/05
								/* save which scheduler is running in eeprom */
								if(_sSchedules.Pump_On_In_Scheduler == _kSET)   /* turn on scheduler */
    af5a:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <_sSchedules+0x79>
    af5e:	81 30       	cpi	r24, 0x01	; 1
    af60:	09 f0       	breq	.+2      	; 0xaf64 <_Z20Schedules_Monitoringv+0x66e>
    af62:	41 c1       	rjmp	.+642    	; 0xb1e6 <_Z20Schedules_Monitoringv+0x8f0>
								{
									/* save running time in eeprom  when no tank is running */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    af64:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    af68:	81 30       	cpi	r24, 0x01	; 1
    af6a:	89 f5       	brne	.+98     	; 0xafce <_Z20Schedules_Monitoringv+0x6d8>
									{
										Serial.println("Running time in sec");
    af6c:	6f ee       	ldi	r22, 0xEF	; 239
    af6e:	72 e0       	ldi	r23, 0x02	; 2
    af70:	86 ec       	ldi	r24, 0xC6	; 198
    af72:	94 e1       	ldi	r25, 0x14	; 20
    af74:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Keep_Scheduler_Run_Timer);
    af78:	60 91 26 09 	lds	r22, 0x0926	; 0x800926 <_sSchedules+0x8>
    af7c:	70 91 27 09 	lds	r23, 0x0927	; 0x800927 <_sSchedules+0x9>
    af80:	4a e0       	ldi	r20, 0x0A	; 10
    af82:	50 e0       	ldi	r21, 0x00	; 0
    af84:	86 ec       	ldi	r24, 0xC6	; 198
    af86:	94 e1       	ldi	r25, 0x14	; 20
    af88:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
										Serial.println();
    af8c:	86 ec       	ldi	r24, 0xC6	; 198
    af8e:	94 e1       	ldi	r25, 0x14	; 20
    af90:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    af94:	86 ec       	ldi	r24, 0xC6	; 198
    af96:	94 e1       	ldi	r25, 0x14	; 20
    af98:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										Serial.println("Running schedule");
    af9c:	63 e0       	ldi	r22, 0x03	; 3
    af9e:	73 e0       	ldi	r23, 0x03	; 3
    afa0:	86 ec       	ldi	r24, 0xC6	; 198
    afa2:	94 e1       	ldi	r25, 0x14	; 20
    afa4:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running-1);
    afa8:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    afac:	70 e0       	ldi	r23, 0x00	; 0
    afae:	61 50       	subi	r22, 0x01	; 1
    afb0:	71 09       	sbc	r23, r1
    afb2:	4a e0       	ldi	r20, 0x0A	; 10
    afb4:	50 e0       	ldi	r21, 0x00	; 0
    afb6:	86 ec       	ldi	r24, 0xC6	; 198
    afb8:	94 e1       	ldi	r25, 0x14	; 20
    afba:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
										Serial.println(); //1/05
    afbe:	86 ec       	ldi	r24, 0xC6	; 198
    afc0:	94 e1       	ldi	r25, 0x14	; 20
    afc2:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    afc6:	86 ec       	ldi	r24, 0xC6	; 198
    afc8:	94 e1       	ldi	r25, 0x14	; 20
    afca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									}
									
									Fertilizer_Tank_Monitoring();
    afce:	27 db       	rcall	.-2482   	; 0xa61e <_Z26Fertilizer_Tank_Monitoringv>
									
									Blower_Monitoring(_kON);  // 11-4
    afd0:	81 e0       	ldi	r24, 0x01	; 1
    afd2:	0e 94 15 3e 	call	0x7c2a	; 0x7c2a <_Z17Blower_Monitoringh>
									
									if(_sSchedules.Save_Schedule_Data_In_Eeprom > 90)
    afd6:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    afda:	8b 35       	cpi	r24, 0x5B	; 91
    afdc:	98 f4       	brcc	.+38     	; 0xb004 <_Z20Schedules_Monitoringv+0x70e>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
    afde:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    afe2:	84 32       	cpi	r24, 0x24	; 36
    afe4:	98 f0       	brcs	.+38     	; 0xb00c <_Z20Schedules_Monitoringv+0x716>
    afe6:	80 e0       	ldi	r24, 0x00	; 0
    afe8:	90 e0       	ldi	r25, 0x00	; 0
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
											{
												if(_sSchedules.Running_Tank[tank_number] == _kON)
    afea:	fc 01       	movw	r30, r24
    afec:	e2 58       	subi	r30, 0x82	; 130
    afee:	f4 4f       	sbci	r31, 0xF4	; 244
    aff0:	20 81       	ld	r18, Z
    aff2:	21 30       	cpi	r18, 0x01	; 1
    aff4:	09 f4       	brne	.+2      	; 0xaff8 <_Z20Schedules_Monitoringv+0x702>
												{
													number_of_running_tanks++;
    aff6:	cf 5f       	subi	r28, 0xFF	; 255
    aff8:	01 96       	adiw	r24, 0x01	; 1
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    affa:	83 30       	cpi	r24, 0x03	; 3
    affc:	91 05       	cpc	r25, r1
    affe:	a9 f7       	brne	.-22     	; 0xafea <_Z20Schedules_Monitoringv+0x6f4>
												if(_sSchedules.Running_Tank[tank_number] == _kON)
												{
													number_of_running_tanks++;
												}
											}
											if(number_of_running_tanks > 0)
    b000:	cc 23       	and	r28, r28
    b002:	21 f0       	breq	.+8      	; 0xb00c <_Z20Schedules_Monitoringv+0x716>
											{
												_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    b004:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
												_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b008:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
											}
										}
									}
									
									/* while running schedule check the time and compare with schedule time with that plot  */
									if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1]
    b00c:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    b010:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    b014:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b018:	f0 e0       	ldi	r31, 0x00	; 0
    b01a:	ee 0f       	add	r30, r30
    b01c:	ff 1f       	adc	r31, r31
    b01e:	e4 5e       	subi	r30, 0xE4	; 228
    b020:	f6 4f       	sbci	r31, 0xF6	; 246
    b022:	87 8d       	ldd	r24, Z+31	; 0x1f
    b024:	90 a1       	ldd	r25, Z+32	; 0x20
									||  Check_for_no_repeat != 0)
    b026:	82 17       	cp	r24, r18
    b028:	93 07       	cpc	r25, r19
    b02a:	18 f0       	brcs	.+6      	; 0xb032 <_Z20Schedules_Monitoringv+0x73c>
    b02c:	dd 23       	and	r29, r29
    b02e:	09 f4       	brne	.+2      	; 0xb032 <_Z20Schedules_Monitoringv+0x73c>
    b030:	5f c0       	rjmp	.+190    	; 0xb0f0 <_Z20Schedules_Monitoringv+0x7fa>
									{
										_sRuble_Parameters.Last_Irrigating_Schedule = _sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    b032:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b036:	f0 e0       	ldi	r31, 0x00	; 0
    b038:	e7 59       	subi	r30, 0x97	; 151
    b03a:	f6 4f       	sbci	r31, 0xF6	; 246
    b03c:	80 81       	ld	r24, Z
    b03e:	80 93 7a 14 	sts	0x147A, r24	; 0x80147a <_sRuble_Parameters+0xcc>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b042:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										Serial.println("time over");
    b046:	64 e1       	ldi	r22, 0x14	; 20
    b048:	73 e0       	ldi	r23, 0x03	; 3
    b04a:	86 ec       	ldi	r24, 0xC6	; 198
    b04c:	94 e1       	ldi	r25, 0x14	; 20
    b04e:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b052:	83 e0       	ldi	r24, 0x03	; 3
    b054:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b058:	0e 94 50 3d 	call	0x7aa0	; 0x7aa0 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    b05c:	83 e0       	ldi	r24, 0x03	; 3
    b05e:	0e 94 15 3e 	call	0x7c2a	; 0x7c2a <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    b062:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    b066:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    b06a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
										if(Check_for_no_repeat != 1)
    b06e:	d1 30       	cpi	r29, 0x01	; 1
    b070:	09 f4       	brne	.+2      	; 0xb074 <_Z20Schedules_Monitoringv+0x77e>
    b072:	27 c1       	rjmp	.+590    	; 0xb2c2 <_Z20Schedules_Monitoringv+0x9cc>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b074:	81 30       	cpi	r24, 0x01	; 1
    b076:	51 f4       	brne	.+20     	; 0xb08c <_Z20Schedules_Monitoringv+0x796>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.//// :");
    b078:	6a e2       	ldi	r22, 0x2A	; 42
    b07a:	76 e1       	ldi	r23, 0x16	; 22
    b07c:	86 ec       	ldi	r24, 0xC6	; 198
    b07e:	94 e1       	ldi	r25, 0x14	; 20
    b080:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b084:	86 ec       	ldi	r24, 0xC6	; 198
    b086:	94 e1       	ldi	r25, 0x14	; 20
    b088:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
    b08c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b090:	f0 e0       	ldi	r31, 0x00	; 0
    b092:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b096:	e8 58       	subi	r30, 0x88	; 136
    b098:	f6 4f       	sbci	r31, 0xF6	; 246
    b09a:	80 83       	st	Z, r24
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
    b09c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b0a0:	f0 e0       	ldi	r31, 0x00	; 0
    b0a2:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    b0a6:	e9 57       	subi	r30, 0x79	; 121
    b0a8:	f6 4f       	sbci	r31, 0xF6	; 246
    b0aa:	80 83       	st	Z, r24
    b0ac:	20 e0       	ldi	r18, 0x00	; 0
    b0ae:	30 e0       	ldi	r19, 0x00	; 0
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
											{
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    b0b0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b0b4:	90 e0       	ldi	r25, 0x00	; 0
    b0b6:	01 97       	sbiw	r24, 0x01	; 1
    b0b8:	fc 01       	movw	r30, r24
    b0ba:	ee 0f       	add	r30, r30
    b0bc:	ff 1f       	adc	r31, r31
    b0be:	e8 0f       	add	r30, r24
    b0c0:	f9 1f       	adc	r31, r25
    b0c2:	e2 0f       	add	r30, r18
    b0c4:	f3 1f       	adc	r31, r19
    b0c6:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b0ca:	90 e0       	ldi	r25, 0x00	; 0
    b0cc:	ee 0f       	add	r30, r30
    b0ce:	ff 1f       	adc	r31, r31
    b0d0:	e5 5e       	subi	r30, 0xE5	; 229
    b0d2:	f4 4f       	sbci	r31, 0xF4	; 244
    b0d4:	91 83       	std	Z+1, r25	; 0x01
    b0d6:	80 83       	st	Z, r24
    b0d8:	2f 5f       	subi	r18, 0xFF	; 255
    b0da:	3f 4f       	sbci	r19, 0xFF	; 255
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
    b0dc:	23 30       	cpi	r18, 0x03	; 3
    b0de:	31 05       	cpc	r19, r1
    b0e0:	39 f7       	brne	.-50     	; 0xb0b0 <_Z20Schedules_Monitoringv+0x7ba>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
    b0e2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b0e6:	81 30       	cpi	r24, 0x01	; 1
    b0e8:	09 f4       	brne	.+2      	; 0xb0ec <_Z20Schedules_Monitoringv+0x7f6>
    b0ea:	2c c1       	rjmp	.+600    	; 0xb344 <_Z20Schedules_Monitoringv+0xa4e>
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
											} // 22/8/2023
										}
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b0ec:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
									
									if(_sPump_Parameter.Irrigation_Status /*||
    b0f0:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    b0f4:	88 23       	and	r24, r24
    b0f6:	09 f4       	brne	.+2      	; 0xb0fa <_Z20Schedules_Monitoringv+0x804>
    b0f8:	40 c0       	rjmp	.+128    	; 0xb17a <_Z20Schedules_Monitoringv+0x884>
									(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status != _kRESET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation != _kRESET)*/)
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    b0fa:	0e 94 f7 c0 	call	0x181ee	; 0x181ee <_Z15Stop_Irrigationv>
    b0fe:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b102:	81 11       	cpse	r24, r1
    b104:	05 c0       	rjmp	.+10     	; 0xb110 <_Z20Schedules_Monitoringv+0x81a>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b106:	91 30       	cpi	r25, 0x01	; 1
    b108:	79 f4       	brne	.+30     	; 0xb128 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 4..................");
    b10a:	65 e6       	ldi	r22, 0x65	; 101
    b10c:	75 e1       	ldi	r23, 0x15	; 21
    b10e:	04 c0       	rjmp	.+8      	; 0xb118 <_Z20Schedules_Monitoringv+0x822>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b110:	91 30       	cpi	r25, 0x01	; 1
    b112:	51 f4       	brne	.+20     	; 0xb128 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 5...................");
    b114:	67 e4       	ldi	r22, 0x47	; 71
    b116:	75 e1       	ldi	r23, 0x15	; 21
    b118:	86 ec       	ldi	r24, 0xC6	; 198
    b11a:	94 e1       	ldi	r25, 0x14	; 20
    b11c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b120:	86 ec       	ldi	r24, 0xC6	; 198
    b122:	94 e1       	ldi	r25, 0x14	; 20
    b124:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											if(_sPump_Parameter.Irrigation_Status)
    b128:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    b12c:	88 23       	and	r24, r24
    b12e:	89 f0       	breq	.+34     	; 0xb152 <_Z20Schedules_Monitoringv+0x85c>
											{
												if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    b130:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    b134:	81 30       	cpi	r24, 0x01	; 1
    b136:	39 f4       	brne	.+14     	; 0xb146 <_Z20Schedules_Monitoringv+0x850>
    b138:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    b13c:	81 30       	cpi	r24, 0x01	; 1
    b13e:	19 f4       	brne	.+6      	; 0xb146 <_Z20Schedules_Monitoringv+0x850>
												{
													_sSchedules.Scheduler_Retry_Timer = 4*60;
    b140:	80 ef       	ldi	r24, 0xF0	; 240
    b142:	90 e0       	ldi	r25, 0x00	; 0
    b144:	02 c0       	rjmp	.+4      	; 0xb14a <_Z20Schedules_Monitoringv+0x854>
												}
												else
												{
													_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b146:	88 e5       	ldi	r24, 0x58	; 88
    b148:	92 e0       	ldi	r25, 0x02	; 2
    b14a:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b14e:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											}
											else
											{
												//flush_running_status = _kSET;
											}
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b152:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b156:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b15a:	83 e0       	ldi	r24, 0x03	; 3
    b15c:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b160:	0e 94 50 3d 	call	0x7aa0	; 0x7aa0 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    b164:	83 e0       	ldi	r24, 0x03	; 3
    b166:	0e 94 15 3e 	call	0x7c2a	; 0x7c2a <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b16a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b16e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										
										_sSchedules.Schedule_Are_Started = _kRESET;
    b172:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    b176:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
									}
									
									if(_sRuble_Parameters.Switch_To_Battery == _eELECTRICITY_IS_NOT_THERE)
    b17a:	80 91 ab 14 	lds	r24, 0x14AB	; 0x8014ab <_sRuble_Parameters+0xfd>
    b17e:	81 11       	cpse	r24, r1
    b180:	55 c3       	rjmp	.+1706   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    b182:	0e 94 f7 c0 	call	0x181ee	; 0x181ee <_Z15Stop_Irrigationv>
    b186:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b18a:	81 11       	cpse	r24, r1
    b18c:	05 c0       	rjmp	.+10     	; 0xb198 <_Z20Schedules_Monitoringv+0x8a2>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b18e:	91 30       	cpi	r25, 0x01	; 1
    b190:	79 f4       	brne	.+30     	; 0xb1b0 <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 6...................");
    b192:	69 e2       	ldi	r22, 0x29	; 41
    b194:	75 e1       	ldi	r23, 0x15	; 21
    b196:	04 c0       	rjmp	.+8      	; 0xb1a0 <_Z20Schedules_Monitoringv+0x8aa>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b198:	91 30       	cpi	r25, 0x01	; 1
    b19a:	51 f4       	brne	.+20     	; 0xb1b0 <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 7..............................");
    b19c:	60 e0       	ldi	r22, 0x00	; 0
    b19e:	75 e1       	ldi	r23, 0x15	; 21
    b1a0:	86 ec       	ldi	r24, 0xC6	; 198
    b1a2:	94 e1       	ldi	r25, 0x14	; 20
    b1a4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b1a8:	86 ec       	ldi	r24, 0xC6	; 198
    b1aa:	94 e1       	ldi	r25, 0x14	; 20
    b1ac:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b1b0:	88 e5       	ldi	r24, 0x58	; 88
    b1b2:	92 e0       	ldi	r25, 0x02	; 2
    b1b4:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b1b8:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b1bc:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b1c0:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b1c4:	83 e0       	ldi	r24, 0x03	; 3
    b1c6:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b1ca:	0e 94 50 3d 	call	0x7aa0	; 0x7aa0 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b1ce:	83 e0       	ldi	r24, 0x03	; 3
    b1d0:	0e 94 15 3e 	call	0x7c2a	; 0x7c2a <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b1d4:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b1d8:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Schedule_Are_Started = _kRESET;
    b1dc:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    b1e0:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
    b1e4:	23 c3       	rjmp	.+1606   	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
									}
								}
								else
								{
									_sRuble_Parameters.Irrigating_Plot =_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    b1e6:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b1ea:	f0 e0       	ldi	r31, 0x00	; 0
    b1ec:	e7 59       	subi	r30, 0x97	; 151
    b1ee:	f6 4f       	sbci	r31, 0xF6	; 246
    b1f0:	80 81       	ld	r24, Z
    b1f2:	80 93 1e 14 	sts	0x141E, r24	; 0x80141e <_sRuble_Parameters+0x70>
									//_sRuble_Parameters.Pump_Selected_For_Irrigation = _sSchedules.Pump_Selected_For_Schedule;
									_sRuble_Parameters.Pump_Selected_For_Irrigation = _sRuble_Parameters.Pump_Selected_For_Irrigation;
									if(!Start_Irrigation())
    b1f6:	0e 94 b3 c4 	call	0x18966	; 0x18966 <_Z16Start_Irrigationv>
    b1fa:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b1fe:	81 11       	cpse	r24, r1
    b200:	22 c0       	rjmp	.+68     	; 0xb246 <_Z20Schedules_Monitoringv+0x950>
									{
										/* what should happen if irrigation doesn't start */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b202:	91 30       	cpi	r25, 0x01	; 1
    b204:	51 f4       	brne	.+20     	; 0xb21a <_Z20Schedules_Monitoringv+0x924>
										{
											_kSERAIL_MON_WRITE("sc enter 8...........................");
    b206:	6a ed       	ldi	r22, 0xDA	; 218
    b208:	74 e1       	ldi	r23, 0x14	; 20
    b20a:	86 ec       	ldi	r24, 0xC6	; 198
    b20c:	94 e1       	ldi	r25, 0x14	; 20
    b20e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b212:	86 ec       	ldi	r24, 0xC6	; 198
    b214:	94 e1       	ldi	r25, 0x14	; 20
    b216:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b21a:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;  // 15/09/2023
    b21e:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										
										if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    b222:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    b226:	81 30       	cpi	r24, 0x01	; 1
    b228:	39 f4       	brne	.+14     	; 0xb238 <_Z20Schedules_Monitoringv+0x942>
    b22a:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    b22e:	81 30       	cpi	r24, 0x01	; 1
    b230:	19 f4       	brne	.+6      	; 0xb238 <_Z20Schedules_Monitoringv+0x942>
										{
											_sSchedules.Scheduler_Retry_Timer = 4*60;
    b232:	80 ef       	ldi	r24, 0xF0	; 240
    b234:	90 e0       	ldi	r25, 0x00	; 0
    b236:	02 c0       	rjmp	.+4      	; 0xb23c <_Z20Schedules_Monitoringv+0x946>
										}
										else
										{
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b238:	88 e5       	ldi	r24, 0x58	; 88
    b23a:	92 e0       	ldi	r25, 0x02	; 2
    b23c:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b240:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    b244:	fa cc       	rjmp	.-1548   	; 0xac3a <_Z20Schedules_Monitoringv+0x344>
										
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										irrigation_Start_Set = _kSET;
    b246:	10 93 1b 09 	sts	0x091B, r17	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b24a:	91 30       	cpi	r25, 0x01	; 1
    b24c:	51 f4       	brne	.+20     	; 0xb262 <_Z20Schedules_Monitoringv+0x96c>
										{
											_kSERAIL_MON_WRITE("sc enter 9");
    b24e:	6f ec       	ldi	r22, 0xCF	; 207
    b250:	74 e1       	ldi	r23, 0x14	; 20
    b252:	86 ec       	ldi	r24, 0xC6	; 198
    b254:	94 e1       	ldi	r25, 0x14	; 20
    b256:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b25a:	86 ec       	ldi	r24, 0xC6	; 198
    b25c:	94 e1       	ldi	r25, 0x14	; 20
    b25e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Pump_On_In_Scheduler = _kSET;   /* pump on by the scheduler */
    b262:	81 e0       	ldi	r24, 0x01	; 1
    b264:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;
    b268:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b26c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b270:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
										_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b274:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    b278:	80 93 d9 0b 	sts	0x0BD9, r24	; 0x800bd9 <_sSchedules+0x2bb>
										_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;						
    b27c:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b280:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b284:	90 93 db 0b 	sts	0x0BDB, r25	; 0x800bdb <_sSchedules+0x2bd>
    b288:	80 93 da 0b 	sts	0x0BDA, r24	; 0x800bda <_sSchedules+0x2bc>
										
										for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b28c:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <_sSchedules+0x264>
    b290:	90 91 83 0b 	lds	r25, 0x0B83	; 0x800b83 <_sSchedules+0x265>
    b294:	90 93 dd 0b 	sts	0x0BDD, r25	; 0x800bdd <_sSchedules+0x2bf>
    b298:	80 93 dc 0b 	sts	0x0BDC, r24	; 0x800bdc <_sSchedules+0x2be>
    b29c:	80 91 84 0b 	lds	r24, 0x0B84	; 0x800b84 <_sSchedules+0x266>
    b2a0:	90 91 85 0b 	lds	r25, 0x0B85	; 0x800b85 <_sSchedules+0x267>
    b2a4:	90 93 df 0b 	sts	0x0BDF, r25	; 0x800bdf <_sSchedules+0x2c1>
    b2a8:	80 93 de 0b 	sts	0x0BDE, r24	; 0x800bde <_sSchedules+0x2c0>
    b2ac:	80 91 86 0b 	lds	r24, 0x0B86	; 0x800b86 <_sSchedules+0x268>
    b2b0:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    b2b4:	90 93 e1 0b 	sts	0x0BE1, r25	; 0x800be1 <_sSchedules+0x2c3>
    b2b8:	80 93 e0 0b 	sts	0x0BE0, r24	; 0x800be0 <_sSchedules+0x2c2>
										}
																					
										Set_Trigger_Time();								
    b2bc:	0e 94 fd 49 	call	0x93fa	; 0x93fa <_Z16Set_Trigger_Timev>
    b2c0:	bc cc       	rjmp	.-1672   	; 0xac3a <_Z20Schedules_Monitoringv+0x344>
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
											}
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b2c2:	81 30       	cpi	r24, 0x01	; 1
    b2c4:	51 f4       	brne	.+20     	; 0xb2da <_Z20Schedules_Monitoringv+0x9e4>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0//// :");
    b2c6:	66 ef       	ldi	r22, 0xF6	; 246
    b2c8:	75 e1       	ldi	r23, 0x15	; 21
    b2ca:	86 ec       	ldi	r24, 0xC6	; 198
    b2cc:	94 e1       	ldi	r25, 0x14	; 20
    b2ce:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b2d2:	86 ec       	ldi	r24, 0xC6	; 198
    b2d4:	94 e1       	ldi	r25, 0x14	; 20
    b2d6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											if(Check_for_no_repeat == 1)
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b2da:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b2de:	81 30       	cpi	r24, 0x01	; 1
    b2e0:	51 f4       	brne	.+20     	; 0xb2f6 <_Z20Schedules_Monitoringv+0xa00>
												{
													_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0.0//// :");
    b2e2:	60 ec       	ldi	r22, 0xC0	; 192
    b2e4:	75 e1       	ldi	r23, 0x15	; 21
    b2e6:	86 ec       	ldi	r24, 0xC6	; 198
    b2e8:	94 e1       	ldi	r25, 0x14	; 20
    b2ea:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b2ee:	86 ec       	ldi	r24, 0xC6	; 198
    b2f0:	94 e1       	ldi	r25, 0x14	; 20
    b2f2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
												}
												_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    b2f6:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
												_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    b2fa:	81 e0       	ldi	r24, 0x01	; 1
    b2fc:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
												_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    b300:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
												
												if(_sSchedules.Schedule_Are_Started == _kSET)
    b304:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    b308:	81 30       	cpi	r24, 0x01	; 1
    b30a:	81 f4       	brne	.+32     	; 0xb32c <_Z20Schedules_Monitoringv+0xa36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b30c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b310:	81 30       	cpi	r24, 0x01	; 1
    b312:	51 f4       	brne	.+20     	; 0xb328 <_Z20Schedules_Monitoringv+0xa32>
													{
														_kSERAIL_MON_WRITE("sc enter 11");
    b314:	64 eb       	ldi	r22, 0xB4	; 180
    b316:	75 e1       	ldi	r23, 0x15	; 21
    b318:	86 ec       	ldi	r24, 0xC6	; 198
    b31a:	94 e1       	ldi	r25, 0x14	; 20
    b31c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b320:	86 ec       	ldi	r24, 0xC6	; 198
    b322:	94 e1       	ldi	r25, 0x14	; 20
    b324:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
													}
													_sSchedules.Schedule_Are_Started = _kRESET;
    b328:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
													/* save in eeprom */
												}
												_sSchedules.all_schedule_done_flag = _eSET;
    b32c:	82 e0       	ldi	r24, 0x02	; 2
    b32e:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    b332:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    b336:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    b33a:	80 91 ef 0b 	lds	r24, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    b33e:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
    b342:	cf ce       	rjmp	.-610    	; 0xb0e2 <_Z20Schedules_Monitoringv+0x7ec>
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
										{
											_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    b344:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b348:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
											_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    b34c:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    b350:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b354:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b358:	81 30       	cpi	r24, 0x01	; 1
    b35a:	91 f4       	brne	.+36     	; 0xb380 <_Z20Schedules_Monitoringv+0xa8a>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0//// :");
    b35c:	62 e8       	ldi	r22, 0x82	; 130
    b35e:	75 e1       	ldi	r23, 0x15	; 21
    b360:	86 ec       	ldi	r24, 0xC6	; 198
    b362:	94 e1       	ldi	r25, 0x14	; 20
    b364:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    b368:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    b36c:	4a e0       	ldi	r20, 0x0A	; 10
    b36e:	50 e0       	ldi	r21, 0x00	; 0
    b370:	86 ec       	ldi	r24, 0xC6	; 198
    b372:	94 e1       	ldi	r25, 0x14	; 20
    b374:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
												_kSERIAL_MON_CLEAR();
    b378:	86 ec       	ldi	r24, 0xC6	; 198
    b37a:	94 e1       	ldi	r25, 0x14	; 20
    b37c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											Return_Calculated_Previous_Day_Date(1);	
    b380:	81 e0       	ldi	r24, 0x01	; 1
    b382:	0e 94 3e 33 	call	0x667c	; 0x667c <_Z35Return_Calculated_Previous_Day_Dateh>
    b386:	81 e0       	ldi	r24, 0x01	; 1
    b388:	90 e0       	ldi	r25, 0x00	; 0
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    b38a:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    b38e:	9c 01       	movw	r18, r24
    b390:	22 5e       	subi	r18, 0xE2	; 226
    b392:	36 4f       	sbci	r19, 0xF6	; 246
    b394:	f9 01       	movw	r30, r18
    b396:	e5 5a       	subi	r30, 0xA5	; 165
    b398:	ff 4f       	sbci	r31, 0xFF	; 255
    b39a:	40 83       	st	Z, r20
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    b39c:	40 91 ed 0b 	lds	r20, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    b3a0:	3f 96       	adiw	r30, 0x0f	; 15
    b3a2:	40 83       	st	Z, r20
    b3a4:	01 96       	adiw	r24, 0x01	; 1
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
												_kSERIAL_MON_CLEAR();
											}
											Return_Calculated_Previous_Day_Date(1);	
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    b3a6:	8e 30       	cpi	r24, 0x0E	; 14
    b3a8:	91 05       	cpc	r25, r1
    b3aa:	79 f7       	brne	.-34     	; 0xb38a <_Z20Schedules_Monitoringv+0xa94>
    b3ac:	9f ce       	rjmp	.-706    	; 0xb0ec <_Z20Schedules_Monitoringv+0x7f6>
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b3ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b3b2:	81 30       	cpi	r24, 0x01	; 1
    b3b4:	51 f4       	brne	.+20     	; 0xb3ca <_Z20Schedules_Monitoringv+0xad4>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2.1");
    b3b6:	69 e5       	ldi	r22, 0x59	; 89
    b3b8:	74 e1       	ldi	r23, 0x14	; 20
    b3ba:	86 ec       	ldi	r24, 0xC6	; 198
    b3bc:	94 e1       	ldi	r25, 0x14	; 20
    b3be:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b3c2:	86 ec       	ldi	r24, 0xC6	; 198
    b3c4:	94 e1       	ldi	r25, 0x14	; 20
    b3c6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									}
									_sSchedules.Trigger_Reset = _kRESET;
    b3ca:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
    b3ce:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
    b3d2:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
    b3d6:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
    b3da:	dd cc       	rjmp	.-1606   	; 0xad96 <_Z20Schedules_Monitoringv+0x4a0>
								}
								else
								{
									if(_sSchedules.Trigger_Time != 0)
    b3dc:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b3e0:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b3e4:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b3e8:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b3ec:	89 2b       	or	r24, r25
    b3ee:	8a 2b       	or	r24, r26
    b3f0:	8b 2b       	or	r24, r27
    b3f2:	09 f4       	brne	.+2      	; 0xb3f6 <_Z20Schedules_Monitoringv+0xb00>
    b3f4:	d0 cc       	rjmp	.-1632   	; 0xad96 <_Z20Schedules_Monitoringv+0x4a0>
									{
										if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    b3f6:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b3fa:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b3fe:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b402:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b406:	8c 32       	cpi	r24, 0x2C	; 44
    b408:	91 40       	sbci	r25, 0x01	; 1
    b40a:	a1 05       	cpc	r26, r1
    b40c:	b1 05       	cpc	r27, r1
    b40e:	08 f0       	brcs	.+2      	; 0xb412 <_Z20Schedules_Monitoringv+0xb1c>
    b410:	ae cc       	rjmp	.-1700   	; 0xad6e <_Z20Schedules_Monitoringv+0x478>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    b412:	87 e1       	ldi	r24, 0x17	; 23
    b414:	90 e5       	ldi	r25, 0x50	; 80
    b416:	a1 e0       	ldi	r26, 0x01	; 1
    b418:	b0 e0       	ldi	r27, 0x00	; 0
    b41a:	b5 cc       	rjmp	.-1686   	; 0xad86 <_Z20Schedules_Monitoringv+0x490>
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b41c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b420:	81 30       	cpi	r24, 0x01	; 1
    b422:	51 f4       	brne	.+20     	; 0xb438 <_Z20Schedules_Monitoringv+0xb42>
									{
										_kSERAIL_MON_WRITE("sc enter 16");
    b424:	62 ef       	ldi	r22, 0xF2	; 242
    b426:	73 e1       	ldi	r23, 0x13	; 19
    b428:	86 ec       	ldi	r24, 0xC6	; 198
    b42a:	94 e1       	ldi	r25, 0x14	; 20
    b42c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b430:	86 ec       	ldi	r24, 0xC6	; 198
    b432:	94 e1       	ldi	r25, 0x14	; 20
    b434:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									}
									if((_sRuble_Parameters.Current_Time_In_Sec >= _sSchedules.Trigger_Time) &&(_sRuble_Parameters.Current_Time_In_Sec < _sSchedules.Trigger_Reset))
    b438:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b43c:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b440:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b444:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b448:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b44c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b450:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b454:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b458:	84 17       	cp	r24, r20
    b45a:	95 07       	cpc	r25, r21
    b45c:	a6 07       	cpc	r26, r22
    b45e:	b7 07       	cpc	r27, r23
    b460:	08 f4       	brcc	.+2      	; 0xb464 <_Z20Schedules_Monitoringv+0xb6e>
    b462:	e4 c1       	rjmp	.+968    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    b464:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b468:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b46c:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b470:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b474:	84 17       	cp	r24, r20
    b476:	95 07       	cpc	r25, r21
    b478:	a6 07       	cpc	r26, r22
    b47a:	b7 07       	cpc	r27, r23
    b47c:	08 f0       	brcs	.+2      	; 0xb480 <_Z20Schedules_Monitoringv+0xb8a>
    b47e:	d6 c1       	rjmp	.+940    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b480:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b484:	81 30       	cpi	r24, 0x01	; 1
    b486:	51 f4       	brne	.+20     	; 0xb49c <_Z20Schedules_Monitoringv+0xba6>
										{
											_kSERAIL_MON_WRITE("sc enter 17");
    b488:	66 ee       	ldi	r22, 0xE6	; 230
    b48a:	73 e1       	ldi	r23, 0x13	; 19
    b48c:	86 ec       	ldi	r24, 0xC6	; 198
    b48e:	94 e1       	ldi	r25, 0x14	; 20
    b490:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b494:	86 ec       	ldi	r24, 0xC6	; 198
    b496:	94 e1       	ldi	r25, 0x14	; 20
    b498:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										/* set the trigger time for ON */
										Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b49c:	6c 2f       	mov	r22, r28
    b49e:	81 e0       	ldi	r24, 0x01	; 1
    b4a0:	0e 94 1e 47 	call	0x8e3c	; 0x8e3c <_Z34Check_Time_For_Schedule_To_Triggerhh>
    b4a4:	ca cb       	rjmp	.-2156   	; 0xac3a <_Z20Schedules_Monitoringv+0x344>
									check_true_condition = Compare_Trigger_And_Reset_Time();
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
									{
										/* no need to check next date */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b4a6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b4aa:	81 30       	cpi	r24, 0x01	; 1
    b4ac:	51 f4       	brne	.+20     	; 0xb4c2 <_Z20Schedules_Monitoringv+0xbcc>
										{
											_kSERAIL_MON_WRITE("sc enter 26");
    b4ae:	6a ed       	ldi	r22, 0xDA	; 218
    b4b0:	73 e1       	ldi	r23, 0x13	; 19
    b4b2:	86 ec       	ldi	r24, 0xC6	; 198
    b4b4:	94 e1       	ldi	r25, 0x14	; 20
    b4b6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b4ba:	86 ec       	ldi	r24, 0xC6	; 198
    b4bc:	94 e1       	ldi	r25, 0x14	; 20
    b4be:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b4c2:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b4c6:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b4ca:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b4ce:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b4d2:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b4d6:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b4da:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b4de:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b4e2:	84 17       	cp	r24, r20
    b4e4:	95 07       	cpc	r25, r21
    b4e6:	a6 07       	cpc	r26, r22
    b4e8:	b7 07       	cpc	r27, r23
    b4ea:	68 f0       	brcs	.+26     	; 0xb506 <_Z20Schedules_Monitoringv+0xc10>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b4ec:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b4f0:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b4f4:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b4f8:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b4fc:	48 17       	cp	r20, r24
    b4fe:	59 07       	cpc	r21, r25
    b500:	6a 07       	cpc	r22, r26
    b502:	7b 07       	cpc	r23, r27
    b504:	e8 f0       	brcs	.+58     	; 0xb540 <_Z20Schedules_Monitoringv+0xc4a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b506:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b50a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b50e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b512:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b516:	48 17       	cp	r20, r24
    b518:	59 07       	cpc	r21, r25
    b51a:	6a 07       	cpc	r22, r26
    b51c:	7b 07       	cpc	r23, r27
    b51e:	08 f4       	brcc	.+2      	; 0xb522 <_Z20Schedules_Monitoringv+0xc2c>
    b520:	85 c1       	rjmp	.+778    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b522:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b526:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b52a:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b52e:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b532:	84 17       	cp	r24, r20
    b534:	95 07       	cpc	r25, r21
    b536:	a6 07       	cpc	r26, r22
    b538:	b7 07       	cpc	r27, r23
    b53a:	08 f4       	brcc	.+2      	; 0xb53e <_Z20Schedules_Monitoringv+0xc48>
    b53c:	78 c0       	rjmp	.+240    	; 0xb62e <_Z20Schedules_Monitoringv+0xd38>
    b53e:	76 c1       	rjmp	.+748    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b540:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b544:	81 30       	cpi	r24, 0x01	; 1
    b546:	51 f4       	brne	.+20     	; 0xb55c <_Z20Schedules_Monitoringv+0xc66>
											{
												_kSERAIL_MON_WRITE("sc enter 27");
    b548:	6e ec       	ldi	r22, 0xCE	; 206
    b54a:	73 e1       	ldi	r23, 0x13	; 19
    b54c:	86 ec       	ldi	r24, 0xC6	; 198
    b54e:	94 e1       	ldi	r25, 0x14	; 20
    b550:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b554:	86 ec       	ldi	r24, 0xC6	; 198
    b556:	94 e1       	ldi	r25, 0x14	; 20
    b558:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
    b55c:	6c 2f       	mov	r22, r28
    b55e:	65 c0       	rjmp	.+202    	; 0xb62a <_Z20Schedules_Monitoringv+0xd34>
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b560:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b564:	81 30       	cpi	r24, 0x01	; 1
    b566:	51 f4       	brne	.+20     	; 0xb57c <_Z20Schedules_Monitoringv+0xc86>
											{
												_kSERAIL_MON_WRITE("sc enter 37");
    b568:	66 eb       	ldi	r22, 0xB6	; 182
    b56a:	73 e1       	ldi	r23, 0x13	; 19
    b56c:	86 ec       	ldi	r24, 0xC6	; 198
    b56e:	94 e1       	ldi	r25, 0x14	; 20
    b570:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b574:	86 ec       	ldi	r24, 0xC6	; 198
    b576:	94 e1       	ldi	r25, 0x14	; 20
    b578:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											if(_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec)
    b57c:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    b580:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    b584:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    b588:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    b58c:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b590:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b594:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b598:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b59c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b5a0:	04 17       	cp	r16, r20
    b5a2:	15 07       	cpc	r17, r21
    b5a4:	26 07       	cpc	r18, r22
    b5a6:	37 07       	cpc	r19, r23
    b5a8:	08 f4       	brcc	.+2      	; 0xb5ac <_Z20Schedules_Monitoringv+0xcb6>
    b5aa:	57 c0       	rjmp	.+174    	; 0xb65a <_Z20Schedules_Monitoringv+0xd64>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b5ac:	81 30       	cpi	r24, 0x01	; 1
    b5ae:	51 f4       	brne	.+20     	; 0xb5c4 <_Z20Schedules_Monitoringv+0xcce>
												{
													_kSERAIL_MON_WRITE("sc enter 38");
    b5b0:	6a ea       	ldi	r22, 0xAA	; 170
    b5b2:	73 e1       	ldi	r23, 0x13	; 19
    b5b4:	86 ec       	ldi	r24, 0xC6	; 198
    b5b6:	94 e1       	ldi	r25, 0x14	; 20
    b5b8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b5bc:	86 ec       	ldi	r24, 0xC6	; 198
    b5be:	94 e1       	ldi	r25, 0x14	; 20
    b5c0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b5c4:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b5c8:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b5cc:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b5d0:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b5d4:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b5d8:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b5dc:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b5e0:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b5e4:	84 17       	cp	r24, r20
    b5e6:	95 07       	cpc	r25, r21
    b5e8:	a6 07       	cpc	r26, r22
    b5ea:	b7 07       	cpc	r27, r23
    b5ec:	08 f4       	brcc	.+2      	; 0xb5f0 <_Z20Schedules_Monitoringv+0xcfa>
    b5ee:	65 c0       	rjmp	.+202    	; 0xb6ba <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b5f0:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b5f4:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b5f8:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b5fc:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 38");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b600:	48 17       	cp	r20, r24
    b602:	59 07       	cpc	r21, r25
    b604:	6a 07       	cpc	r22, r26
    b606:	7b 07       	cpc	r23, r27
    b608:	08 f0       	brcs	.+2      	; 0xb60c <_Z20Schedules_Monitoringv+0xd16>
    b60a:	57 c0       	rjmp	.+174    	; 0xb6ba <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b60c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b610:	81 30       	cpi	r24, 0x01	; 1
    b612:	51 f4       	brne	.+20     	; 0xb628 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 39");
    b614:	6e e9       	ldi	r22, 0x9E	; 158
    b616:	73 e1       	ldi	r23, 0x13	; 19
    b618:	86 ec       	ldi	r24, 0xC6	; 198
    b61a:	94 e1       	ldi	r25, 0x14	; 20
    b61c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b620:	86 ec       	ldi	r24, 0xC6	; 198
    b622:	94 e1       	ldi	r25, 0x14	; 20
    b624:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b628:	60 e0       	ldi	r22, 0x00	; 0
    b62a:	81 e0       	ldi	r24, 0x01	; 1
    b62c:	10 c0       	rjmp	.+32     	; 0xb64e <_Z20Schedules_Monitoringv+0xd58>
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
										{
											/* set the trigger time for ON */
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b62e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b632:	81 30       	cpi	r24, 0x01	; 1
    b634:	51 f4       	brne	.+20     	; 0xb64a <_Z20Schedules_Monitoringv+0xd54>
											{
												_kSERAIL_MON_WRITE("sc enter 32");
    b636:	62 ec       	ldi	r22, 0xC2	; 194
    b638:	73 e1       	ldi	r23, 0x13	; 19
    b63a:	86 ec       	ldi	r24, 0xC6	; 198
    b63c:	94 e1       	ldi	r25, 0x14	; 20
    b63e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b642:	86 ec       	ldi	r24, 0xC6	; 198
    b644:	94 e1       	ldi	r25, 0x14	; 20
    b646:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b64a:	6c 2f       	mov	r22, r28
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b64c:	82 e0       	ldi	r24, 0x02	; 2
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b64e:	df 91       	pop	r29
    b650:	cf 91       	pop	r28
    b652:	1f 91       	pop	r17
    b654:	0f 91       	pop	r16
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b656:	0c 94 1e 47 	jmp	0x8e3c	; 0x8e3c <_Z34Check_Time_For_Schedule_To_Triggerhh>
												}
												
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b65a:	81 30       	cpi	r24, 0x01	; 1
    b65c:	51 f4       	brne	.+20     	; 0xb672 <_Z20Schedules_Monitoringv+0xd7c>
												{
													_kSERAIL_MON_WRITE("sc enter 49");
    b65e:	66 e8       	ldi	r22, 0x86	; 134
    b660:	73 e1       	ldi	r23, 0x13	; 19
    b662:	86 ec       	ldi	r24, 0xC6	; 198
    b664:	94 e1       	ldi	r25, 0x14	; 20
    b666:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b66a:	86 ec       	ldi	r24, 0xC6	; 198
    b66c:	94 e1       	ldi	r25, 0x14	; 20
    b66e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b672:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b676:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b67a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b67e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b682:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b686:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b68a:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b68e:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b692:	84 17       	cp	r24, r20
    b694:	95 07       	cpc	r25, r21
    b696:	a6 07       	cpc	r26, r22
    b698:	b7 07       	cpc	r27, r23
    b69a:	08 f4       	brcc	.+2      	; 0xb69e <_Z20Schedules_Monitoringv+0xda8>
    b69c:	42 c0       	rjmp	.+132    	; 0xb722 <_Z20Schedules_Monitoringv+0xe2c>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b69e:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b6a2:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b6a6:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b6aa:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 49");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b6ae:	48 17       	cp	r20, r24
    b6b0:	59 07       	cpc	r21, r25
    b6b2:	6a 07       	cpc	r22, r26
    b6b4:	7b 07       	cpc	r23, r27
    b6b6:	68 f1       	brcs	.+90     	; 0xb712 <_Z20Schedules_Monitoringv+0xe1c>
    b6b8:	34 c0       	rjmp	.+104    	; 0xb722 <_Z20Schedules_Monitoringv+0xe2c>
														_kSERIAL_MON_CLEAR();
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b6ba:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b6be:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b6c2:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b6c6:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b6ca:	48 17       	cp	r20, r24
    b6cc:	59 07       	cpc	r21, r25
    b6ce:	6a 07       	cpc	r22, r26
    b6d0:	7b 07       	cpc	r23, r27
    b6d2:	08 f4       	brcc	.+2      	; 0xb6d6 <_Z20Schedules_Monitoringv+0xde0>
    b6d4:	ab c0       	rjmp	.+342    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    b6d6:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b6da:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b6de:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b6e2:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b6e6:	84 17       	cp	r24, r20
    b6e8:	95 07       	cpc	r25, r21
    b6ea:	a6 07       	cpc	r26, r22
    b6ec:	b7 07       	cpc	r27, r23
    b6ee:	08 f0       	brcs	.+2      	; 0xb6f2 <_Z20Schedules_Monitoringv+0xdfc>
    b6f0:	9d c0       	rjmp	.+314    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6f2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b6f6:	81 30       	cpi	r24, 0x01	; 1
    b6f8:	51 f4       	brne	.+20     	; 0xb70e <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 44");
    b6fa:	62 e9       	ldi	r22, 0x92	; 146
    b6fc:	73 e1       	ldi	r23, 0x13	; 19
    b6fe:	86 ec       	ldi	r24, 0xC6	; 198
    b700:	94 e1       	ldi	r25, 0x14	; 20
    b702:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b706:	86 ec       	ldi	r24, 0xC6	; 198
    b708:	94 e1       	ldi	r25, 0x14	; 20
    b70a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b70e:	60 e0       	ldi	r22, 0x00	; 0
    b710:	9d cf       	rjmp	.-198    	; 0xb64c <_Z20Schedules_Monitoringv+0xd56>
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b712:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b716:	81 30       	cpi	r24, 0x01	; 1
    b718:	09 f0       	breq	.+2      	; 0xb71c <_Z20Schedules_Monitoringv+0xe26>
    b71a:	86 cf       	rjmp	.-244    	; 0xb628 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 50");
    b71c:	6a e7       	ldi	r22, 0x7A	; 122
    b71e:	73 e1       	ldi	r23, 0x13	; 19
    b720:	7b cf       	rjmp	.-266    	; 0xb618 <_Z20Schedules_Monitoringv+0xd22>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b722:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b726:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b72a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b72e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b732:	48 17       	cp	r20, r24
    b734:	59 07       	cpc	r21, r25
    b736:	6a 07       	cpc	r22, r26
    b738:	7b 07       	cpc	r23, r27
    b73a:	08 f4       	brcc	.+2      	; 0xb73e <_Z20Schedules_Monitoringv+0xe48>
    b73c:	77 c0       	rjmp	.+238    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
    b73e:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b742:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b746:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b74a:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b74e:	84 17       	cp	r24, r20
    b750:	95 07       	cpc	r25, r21
    b752:	a6 07       	cpc	r26, r22
    b754:	b7 07       	cpc	r27, r23
    b756:	08 f0       	brcs	.+2      	; 0xb75a <_Z20Schedules_Monitoringv+0xe64>
    b758:	69 c0       	rjmp	.+210    	; 0xb82c <_Z20Schedules_Monitoringv+0xf36>
												{
													/* set the trigger time for ON */
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b75a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b75e:	81 30       	cpi	r24, 0x01	; 1
    b760:	b1 f6       	brne	.-84     	; 0xb70e <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 55");
    b762:	6e e6       	ldi	r22, 0x6E	; 110
    b764:	73 e1       	ldi	r23, 0x13	; 19
    b766:	cb cf       	rjmp	.-106    	; 0xb6fe <_Z20Schedules_Monitoringv+0xe08>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    b768:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b76c:	81 30       	cpi	r24, 0x01	; 1
    b76e:	51 f4       	brne	.+20     	; 0xb784 <_Z20Schedules_Monitoringv+0xe8e>
						{
							_kSERAIL_MON_WRITE("sc enter 62");
    b770:	62 e3       	ldi	r22, 0x32	; 50
    b772:	73 e1       	ldi	r23, 0x13	; 19
    b774:	86 ec       	ldi	r24, 0xC6	; 198
    b776:	94 e1       	ldi	r25, 0x14	; 20
    b778:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    b77c:	86 ec       	ldi	r24, 0xC6	; 198
    b77e:	94 e1       	ldi	r25, 0x14	; 20
    b780:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b784:	83 e0       	ldi	r24, 0x03	; 3
    b786:	0e 94 2d 4a 	call	0x945a	; 0x945a <_Z17Doser_Pump_On_Offh>
						Turn_Off_All_Tank_For_Safety();
    b78a:	0e 94 50 3d 	call	0x7aa0	; 0x7aa0 <_Z28Turn_Off_All_Tank_For_Safetyv>
						Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b78e:	83 e0       	ldi	r24, 0x03	; 3
    b790:	0e 94 15 3e 	call	0x7c2a	; 0x7c2a <_Z17Blower_Monitoringh>
    b794:	10 c9       	rjmp	.-3552   	; 0xa9b6 <_Z20Schedules_Monitoringv+0xc0>
					_sSchedules.Schedule_Are_Started = _kRESET;
					_sSchedules.all_schedule_done_flag = _kRESET;
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
					{
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    b796:	88 23       	and	r24, r24
    b798:	09 f4       	brne	.+2      	; 0xb79c <_Z20Schedules_Monitoringv+0xea6>
    b79a:	45 c9       	rjmp	.-3446   	; 0xaa26 <_Z20Schedules_Monitoringv+0x130>
						{
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    b79c:	60 e0       	ldi	r22, 0x00	; 0
    b79e:	0e 94 33 27 	call	0x4e66	; 0x4e66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    b7a2:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
    b7a6:	3f c9       	rjmp	.-3458   	; 0xaa26 <_Z20Schedules_Monitoringv+0x130>
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
					{
						/* should add what happen if schedule pause */
						/* in ruble data resume section will be there */
						
						if(_sSchedules.Which_Sheduler_Is_Running)
    b7a8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b7ac:	88 23       	and	r24, r24
    b7ae:	b1 f1       	breq	.+108    	; 0xb81c <_Z20Schedules_Monitoringv+0xf26>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7b0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b7b4:	81 30       	cpi	r24, 0x01	; 1
    b7b6:	51 f4       	brne	.+20     	; 0xb7cc <_Z20Schedules_Monitoringv+0xed6>
							{
								_kSERAIL_MON_WRITE("sc enter 61");
    b7b8:	6e e3       	ldi	r22, 0x3E	; 62
    b7ba:	73 e1       	ldi	r23, 0x13	; 19
    b7bc:	86 ec       	ldi	r24, 0xC6	; 198
    b7be:	94 e1       	ldi	r25, 0x14	; 20
    b7c0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b7c4:	86 ec       	ldi	r24, 0xC6	; 198
    b7c6:	94 e1       	ldi	r25, 0x14	; 20
    b7c8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b7cc:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b7d0:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b7d4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    b7d8:	80 93 d9 0b 	sts	0x0BD9, r24	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;
    b7dc:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b7e0:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b7e4:	90 93 db 0b 	sts	0x0BDB, r25	; 0x800bdb <_sSchedules+0x2bd>
    b7e8:	80 93 da 0b 	sts	0x0BDA, r24	; 0x800bda <_sSchedules+0x2bc>
							
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b7ec:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <_sSchedules+0x264>
    b7f0:	90 91 83 0b 	lds	r25, 0x0B83	; 0x800b83 <_sSchedules+0x265>
    b7f4:	90 93 dd 0b 	sts	0x0BDD, r25	; 0x800bdd <_sSchedules+0x2bf>
    b7f8:	80 93 dc 0b 	sts	0x0BDC, r24	; 0x800bdc <_sSchedules+0x2be>
    b7fc:	80 91 84 0b 	lds	r24, 0x0B84	; 0x800b84 <_sSchedules+0x266>
    b800:	90 91 85 0b 	lds	r25, 0x0B85	; 0x800b85 <_sSchedules+0x267>
    b804:	90 93 df 0b 	sts	0x0BDF, r25	; 0x800bdf <_sSchedules+0x2c1>
    b808:	80 93 de 0b 	sts	0x0BDE, r24	; 0x800bde <_sSchedules+0x2c0>
    b80c:	80 91 86 0b 	lds	r24, 0x0B86	; 0x800b86 <_sSchedules+0x268>
    b810:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    b814:	90 93 e1 0b 	sts	0x0BE1, r25	; 0x800be1 <_sSchedules+0x2c3>
    b818:	80 93 e0 0b 	sts	0x0BE0, r24	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							/* ########################## add schedule pause to ruble data topic ############# */
						}
						
						if(_sSchedules.New_Schedules_Occur == _kSET)
    b81c:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    b820:	81 30       	cpi	r24, 0x01	; 1
    b822:	09 f0       	breq	.+2      	; 0xb826 <_Z20Schedules_Monitoringv+0xf30>
    b824:	bc c8       	rjmp	.-3720   	; 0xa99e <_Z20Schedules_Monitoringv+0xa8>
						{
							Edited_In_Schedule();
    b826:	0e 94 45 40 	call	0x808a	; 0x808a <_Z18Edited_In_Schedulev>
    b82a:	b9 c8       	rjmp	.-3726   	; 0xa99e <_Z20Schedules_Monitoringv+0xa8>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b82c:	df 91       	pop	r29
    b82e:	cf 91       	pop	r28
    b830:	1f 91       	pop	r17
    b832:	0f 91       	pop	r16
    b834:	08 95       	ret

0000b836 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>:
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
        return t;
    }
    
    template< typename T > const T &put( int idx, const T &t ){
    b836:	cf 93       	push	r28
    b838:	df 93       	push	r29
    b83a:	1f 92       	push	r1
    b83c:	1f 92       	push	r1
    b83e:	cd b7       	in	r28, 0x3d	; 61
    b840:	de b7       	in	r29, 0x3e	; 62
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b842:	60 91 7c 14 	lds	r22, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    b846:	8d ea       	ldi	r24, 0xAD	; 173
    b848:	9c e0       	ldi	r25, 0x0C	; 12
    b84a:	9a 83       	std	Y+2, r25	; 0x02
    b84c:	89 83       	std	Y+1, r24	; 0x01
    b84e:	ce 01       	movw	r24, r28
    b850:	01 96       	adiw	r24, 0x01	; 1
    b852:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
        return t;
    }
    b856:	8c e7       	ldi	r24, 0x7C	; 124
    b858:	94 e1       	ldi	r25, 0x14	; 20
    b85a:	0f 90       	pop	r0
    b85c:	0f 90       	pop	r0
    b85e:	df 91       	pop	r29
    b860:	cf 91       	pop	r28
    b862:	08 95       	ret

0000b864 <_Z16Euro_Data_EEPROMh>:
	}
	return 0;
}

void Euro_Data_EEPROM(unsigned char valve_number)
{
    b864:	cf 92       	push	r12
    b866:	df 92       	push	r13
    b868:	ef 92       	push	r14
    b86a:	ff 92       	push	r15
    b86c:	0f 93       	push	r16
    b86e:	1f 93       	push	r17
    b870:	cf 93       	push	r28
    b872:	df 93       	push	r29
    b874:	1f 92       	push	r1
    b876:	1f 92       	push	r1
    b878:	cd b7       	in	r28, 0x3d	; 61
    b87a:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
    b87c:	94 e1       	ldi	r25, 0x14	; 20
    b87e:	89 9f       	mul	r24, r25
    b880:	90 01       	movw	r18, r0
    b882:	11 24       	eor	r1, r1
    b884:	69 01       	movw	r12, r18
    b886:	e6 e3       	ldi	r30, 0x36	; 54
    b888:	ce 1a       	sub	r12, r30
    b88a:	ec ef       	ldi	r30, 0xFC	; 252
    b88c:	de 0a       	sbc	r13, r30
    b88e:	fd e0       	ldi	r31, 0x0D	; 13
    b890:	8f 9f       	mul	r24, r31
    b892:	80 01       	movw	r16, r0
    b894:	11 24       	eor	r1, r1
    b896:	0b 5e       	subi	r16, 0xEB	; 235
    b898:	13 4f       	sbci	r17, 0xF3	; 243
    b89a:	79 01       	movw	r14, r18
    b89c:	89 e2       	ldi	r24, 0x29	; 41
    b89e:	e8 1a       	sub	r14, r24
    b8a0:	8c ef       	ldi	r24, 0xFC	; 252
    b8a2:	f8 0a       	sbc	r15, r24
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b8a4:	f8 01       	movw	r30, r16
    b8a6:	61 91       	ld	r22, Z+
    b8a8:	8f 01       	movw	r16, r30
    b8aa:	da 82       	std	Y+2, r13	; 0x02
    b8ac:	c9 82       	std	Y+1, r12	; 0x01
    b8ae:	ce 01       	movw	r24, r28
    b8b0:	01 96       	adiw	r24, 0x01	; 1
    b8b2:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
    b8b6:	ff ef       	ldi	r31, 0xFF	; 255
    b8b8:	cf 1a       	sub	r12, r31
    b8ba:	df 0a       	sbc	r13, r31
    b8bc:	ce 14       	cp	r12, r14
    b8be:	df 04       	cpc	r13, r15
    b8c0:	89 f7       	brne	.-30     	; 0xb8a4 <_Z16Euro_Data_EEPROMh+0x40>
	return;
}
    b8c2:	0f 90       	pop	r0
    b8c4:	0f 90       	pop	r0
    b8c6:	df 91       	pop	r29
    b8c8:	cf 91       	pop	r28
    b8ca:	1f 91       	pop	r17
    b8cc:	0f 91       	pop	r16
    b8ce:	ff 90       	pop	r15
    b8d0:	ef 90       	pop	r14
    b8d2:	df 90       	pop	r13
    b8d4:	cf 90       	pop	r12
    b8d6:	08 95       	ret

0000b8d8 <_Z20Wireless_Pump_EEPROMh>:
	
	return 0;
}

void Wireless_Pump_EEPROM(unsigned char Pump_Number)
{
    b8d8:	cf 92       	push	r12
    b8da:	df 92       	push	r13
    b8dc:	ef 92       	push	r14
    b8de:	ff 92       	push	r15
    b8e0:	0f 93       	push	r16
    b8e2:	1f 93       	push	r17
    b8e4:	cf 93       	push	r28
    b8e6:	df 93       	push	r29
    b8e8:	1f 92       	push	r1
    b8ea:	1f 92       	push	r1
    b8ec:	cd b7       	in	r28, 0x3d	; 61
    b8ee:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kWIRELESS_PUMP_DATA_SAVE(Pump_Number), _sWireless_Pump_Param[Pump_Number]);
    b8f0:	94 e1       	ldi	r25, 0x14	; 20
    b8f2:	89 9f       	mul	r24, r25
    b8f4:	90 01       	movw	r18, r0
    b8f6:	11 24       	eor	r1, r1
    b8f8:	69 01       	movw	r12, r18
    b8fa:	e2 e5       	ldi	r30, 0x52	; 82
    b8fc:	ce 1a       	sub	r12, r30
    b8fe:	e3 ef       	ldi	r30, 0xF3	; 243
    b900:	de 0a       	sbc	r13, r30
    b902:	fb e0       	ldi	r31, 0x0B	; 11
    b904:	8f 9f       	mul	r24, r31
    b906:	80 01       	movw	r16, r0
    b908:	11 24       	eor	r1, r1
    b90a:	0c 50       	subi	r16, 0x0C	; 12
    b90c:	14 4f       	sbci	r17, 0xF4	; 244
    b90e:	79 01       	movw	r14, r18
    b910:	87 e4       	ldi	r24, 0x47	; 71
    b912:	e8 1a       	sub	r14, r24
    b914:	83 ef       	ldi	r24, 0xF3	; 243
    b916:	f8 0a       	sbc	r15, r24
    b918:	f8 01       	movw	r30, r16
    b91a:	61 91       	ld	r22, Z+
    b91c:	8f 01       	movw	r16, r30
    b91e:	da 82       	std	Y+2, r13	; 0x02
    b920:	c9 82       	std	Y+1, r12	; 0x01
    b922:	ce 01       	movw	r24, r28
    b924:	01 96       	adiw	r24, 0x01	; 1
    b926:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
    b92a:	ff ef       	ldi	r31, 0xFF	; 255
    b92c:	cf 1a       	sub	r12, r31
    b92e:	df 0a       	sbc	r13, r31
    b930:	ce 14       	cp	r12, r14
    b932:	df 04       	cpc	r13, r15
    b934:	89 f7       	brne	.-30     	; 0xb918 <_Z20Wireless_Pump_EEPROMh+0x40>
	return;
    b936:	0f 90       	pop	r0
    b938:	0f 90       	pop	r0
    b93a:	df 91       	pop	r29
    b93c:	cf 91       	pop	r28
    b93e:	1f 91       	pop	r17
    b940:	0f 91       	pop	r16
    b942:	ff 90       	pop	r15
    b944:	ef 90       	pop	r14
    b946:	df 90       	pop	r13
    b948:	cf 90       	pop	r12
    b94a:	08 95       	ret

0000b94c <_Z22Update_Euro_Valve_DataPh>:
Euro_Valve_Param _sEuro_Valve_Param[_kMAX_EURO_VALVE];
Wireless_Pump_Param _sWireless_Pump_Param[_kMAX_WIRELESS_PUMP];


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
    b94c:	ef 92       	push	r14
    b94e:	ff 92       	push	r15
    b950:	0f 93       	push	r16
    b952:	1f 93       	push	r17
    b954:	cf 93       	push	r28
    b956:	df 93       	push	r29
    b958:	fc 01       	movw	r30, r24
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b95a:	81 e0       	ldi	r24, 0x01	; 1
    b95c:	80 93 f4 0b 	sts	0x0BF4, r24	; 0x800bf4 <_sWireless_Pump_Param>
    b960:	c0 e0       	ldi	r28, 0x00	; 0
    b962:	d0 e0       	ldi	r29, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b964:	8d e0       	ldi	r24, 0x0D	; 13
    b966:	fc 2e       	mov	r15, r28


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b968:	20 e0       	ldi	r18, 0x00	; 0
    b96a:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b96c:	8c 9f       	mul	r24, r28
    b96e:	b0 01       	movw	r22, r0
    b970:	8d 9f       	mul	r24, r29
    b972:	70 0d       	add	r23, r0
    b974:	11 24       	eor	r1, r1
    b976:	6b 5e       	subi	r22, 0xEB	; 235
    b978:	73 4f       	sbci	r23, 0xF3	; 243
    b97a:	49 2f       	mov	r20, r25
    b97c:	50 e0       	ldi	r21, 0x00	; 0
    b97e:	df 01       	movw	r26, r30
    b980:	a4 0f       	add	r26, r20
    b982:	b5 1f       	adc	r27, r21
    b984:	46 0f       	add	r20, r22
    b986:	57 1f       	adc	r21, r23
    b988:	1c 91       	ld	r17, X
    b98a:	da 01       	movw	r26, r20
    b98c:	11 96       	adiw	r26, 0x01	; 1
    b98e:	3c 91       	ld	r19, X
    b990:	13 17       	cp	r17, r19
    b992:	11 f0       	breq	.+4      	; 0xb998 <_Z22Update_Euro_Valve_DataPh+0x4c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    b994:	20 e0       	ldi	r18, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
			{
				i = _kVALVE_ID_LEN;
    b996:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    b998:	2f 5f       	subi	r18, 0xFF	; 255
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    b99a:	9f 5f       	subi	r25, 0xFF	; 255
    b99c:	96 30       	cpi	r25, 0x06	; 6
    b99e:	68 f3       	brcs	.-38     	; 0xb97a <_Z22Update_Euro_Valve_DataPh+0x2e>
			
			id_len++;
		}
		count = 0;
		
		if(id_len == _kVALVE_ID_LEN)
    b9a0:	26 30       	cpi	r18, 0x06	; 6
    b9a2:	09 f0       	breq	.+2      	; 0xb9a6 <_Z22Update_Euro_Valve_DataPh+0x5a>
    b9a4:	b7 c2       	rjmp	.+1390   	; 0xbf14 <_Z22Update_Euro_Valve_DataPh+0x5c8>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    b9a6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b9aa:	81 30       	cpi	r24, 0x01	; 1
    b9ac:	51 f4       	brne	.+20     	; 0xb9c2 <_Z22Update_Euro_Valve_DataPh+0x76>
			{
				_kSERAIL_MON_WRITE("EURO DATA RECIEVED");                /* for debugging purpose */
    b9ae:	67 e9       	ldi	r22, 0x97	; 151
    b9b0:	7f e1       	ldi	r23, 0x1F	; 31
    b9b2:	86 ec       	ldi	r24, 0xC6	; 198
    b9b4:	94 e1       	ldi	r25, 0x14	; 20
    b9b6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    b9ba:	86 ec       	ldi	r24, 0xC6	; 198
    b9bc:	94 e1       	ldi	r25, 0x14	; 20
    b9be:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    b9c2:	90 91 0f 14 	lds	r25, 0x140F	; 0x80140f <_sRuble_Parameters+0x61>
    b9c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b9ca:	91 30       	cpi	r25, 0x01	; 1
    b9cc:	09 f0       	breq	.+2      	; 0xb9d0 <_Z22Update_Euro_Valve_DataPh+0x84>
    b9ce:	3e c1       	rjmp	.+636    	; 0xbc4c <_Z22Update_Euro_Valve_DataPh+0x300>
			{
				case _eEURO_VALVE_FAULT_DATA:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b9d0:	81 30       	cpi	r24, 0x01	; 1
    b9d2:	51 f4       	brne	.+20     	; 0xb9e8 <_Z22Update_Euro_Valve_DataPh+0x9c>
					{
						_kSERAIL_MON_WRITE("_eEURO_VALVE_FAULT_DATA");                /* for debugging purpose */
    b9d4:	6f e7       	ldi	r22, 0x7F	; 127
    b9d6:	7f e1       	ldi	r23, 0x1F	; 31
    b9d8:	86 ec       	ldi	r24, 0xC6	; 198
    b9da:	94 e1       	ldi	r25, 0x14	; 20
    b9dc:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    b9e0:	86 ec       	ldi	r24, 0xC6	; 198
    b9e2:	94 e1       	ldi	r25, 0x14	; 20
    b9e4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					
					switch(_sRuble_Parameters.Lora_Data_Rx[7])
    b9e8:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    b9ec:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b9f0:	99 23       	and	r25, r25
    b9f2:	19 f0       	breq	.+6      	; 0xb9fa <_Z22Update_Euro_Valve_DataPh+0xae>
    b9f4:	91 30       	cpi	r25, 0x01	; 1
    b9f6:	f1 f0       	breq	.+60     	; 0xba34 <_Z22Update_Euro_Valve_DataPh+0xe8>
    b9f8:	64 c0       	rjmp	.+200    	; 0xbac2 <_Z22Update_Euro_Valve_DataPh+0x176>
					{
						case _eNO_FAULT:
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b9fa:	81 30       	cpi	r24, 0x01	; 1
    b9fc:	51 f4       	brne	.+20     	; 0xba12 <_Z22Update_Euro_Valve_DataPh+0xc6>
							{
								_kSERAIL_MON_WRITE("_eNO_FAULT ");
    b9fe:	63 e7       	ldi	r22, 0x73	; 115
    ba00:	7f e1       	ldi	r23, 0x1F	; 31
    ba02:	86 ec       	ldi	r24, 0xC6	; 198
    ba04:	94 e1       	ldi	r25, 0x14	; 20
    ba06:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    ba0a:	86 ec       	ldi	r24, 0xC6	; 198
    ba0c:	94 e1       	ldi	r25, 0x14	; 20
    ba0e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    ba12:	8d e0       	ldi	r24, 0x0D	; 13
    ba14:	8c 9f       	mul	r24, r28
    ba16:	f0 01       	movw	r30, r0
    ba18:	8d 9f       	mul	r24, r29
    ba1a:	f0 0d       	add	r31, r0
    ba1c:	11 24       	eor	r1, r1
    ba1e:	eb 5e       	subi	r30, 0xEB	; 235
    ba20:	f3 4f       	sbci	r31, 0xF3	; 243
    ba22:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    ba26:	84 87       	std	Z+12, r24	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
    ba28:	81 e0       	ldi	r24, 0x01	; 1
    ba2a:	83 87       	std	Z+11, r24	; 0x0b
							_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _sRuble_Parameters.Lora_Data_Rx[9];    /* update valve status data  */
    ba2c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    ba30:	82 87       	std	Z+10, r24	; 0x0a
						}break;
    ba32:	55 c0       	rjmp	.+170    	; 0xbade <_Z22Update_Euro_Valve_DataPh+0x192>
						
						case _eLOW_BAT_FAULT:
						{
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    ba34:	2d e0       	ldi	r18, 0x0D	; 13
    ba36:	2c 9f       	mul	r18, r28
    ba38:	f0 01       	movw	r30, r0
    ba3a:	2d 9f       	mul	r18, r29
    ba3c:	f0 0d       	add	r31, r0
    ba3e:	11 24       	eor	r1, r1
    ba40:	eb 5e       	subi	r30, 0xEB	; 235
    ba42:	f3 4f       	sbci	r31, 0xF3	; 243
    ba44:	94 87       	std	Z+12, r25	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_OFFLINE;
    ba46:	13 86       	std	Z+11, r1	; 0x0b
							if(_sRuble_Parameters.Irrigating_Plot == 0) /* if not any plot is irrigating and valve status is still on then off the valve */
    ba48:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ba4c:	91 11       	cpse	r25, r1
    ba4e:	16 c0       	rjmp	.+44     	; 0xba7c <_Z22Update_Euro_Valve_DataPh+0x130>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba50:	81 30       	cpi	r24, 0x01	; 1
    ba52:	51 f4       	brne	.+20     	; 0xba68 <_Z22Update_Euro_Valve_DataPh+0x11c>
								{
									_kSERAIL_MON_WRITE_NO_LN("not any plot is irrigating");
    ba54:	68 e5       	ldi	r22, 0x58	; 88
    ba56:	7f e1       	ldi	r23, 0x1F	; 31
    ba58:	86 ec       	ldi	r24, 0xC6	; 198
    ba5a:	94 e1       	ldi	r25, 0x14	; 20
    ba5c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    ba60:	86 ec       	ldi	r24, 0xC6	; 198
    ba62:	94 e1       	ldi	r25, 0x14	; 20
    ba64:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
								}
								
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    ba68:	8d e0       	ldi	r24, 0x0D	; 13
    ba6a:	8c 9f       	mul	r24, r28
    ba6c:	f0 01       	movw	r30, r0
    ba6e:	8d 9f       	mul	r24, r29
    ba70:	f0 0d       	add	r31, r0
    ba72:	11 24       	eor	r1, r1
    ba74:	eb 5e       	subi	r30, 0xEB	; 235
    ba76:	f3 4f       	sbci	r31, 0xF3	; 243
    ba78:	81 e0       	ldi	r24, 0x01	; 1
    ba7a:	02 c0       	rjmp	.+4      	; 0xba80 <_Z22Update_Euro_Valve_DataPh+0x134>
							}
							else
							{
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status   = _sRuble_Parameters.Lora_Data_Rx[9];
    ba7c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    ba80:	82 87       	std	Z+10, r24	; 0x0a
							}
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba82:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ba86:	81 30       	cpi	r24, 0x01	; 1
    ba88:	51 f4       	brne	.+20     	; 0xba9e <_Z22Update_Euro_Valve_DataPh+0x152>
							{
								_kSERAIL_MON_WRITE_NO_LN("low battery fault");
    ba8a:	66 e4       	ldi	r22, 0x46	; 70
    ba8c:	7f e1       	ldi	r23, 0x1F	; 31
    ba8e:	86 ec       	ldi	r24, 0xC6	; 198
    ba90:	94 e1       	ldi	r25, 0x14	; 20
    ba92:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR(); 
    ba96:	86 ec       	ldi	r24, 0xC6	; 198
    ba98:	94 e1       	ldi	r25, 0x14	; 20
    ba9a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							_sGSM_Query.SMS_Alert |= _eEURO_BATT_LOW;
    ba9e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    baa2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    baa6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    baaa:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    baae:	a4 60       	ori	r26, 0x04	; 4
    bab0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    bab4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    bab8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    babc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						}break;
    bac0:	0e c0       	rjmp	.+28     	; 0xbade <_Z22Update_Euro_Valve_DataPh+0x192>
						
						default:
						{
							/* Fault not matched */
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    bac2:	81 30       	cpi	r24, 0x01	; 1
    bac4:	51 f4       	brne	.+20     	; 0xbada <_Z22Update_Euro_Valve_DataPh+0x18e>
							{
								_kSERAIL_MON_WRITE("default command ");
    bac6:	65 e3       	ldi	r22, 0x35	; 53
    bac8:	7f e1       	ldi	r23, 0x1F	; 31
    baca:	86 ec       	ldi	r24, 0xC6	; 198
    bacc:	94 e1       	ldi	r25, 0x14	; 20
    bace:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    bad2:	86 ec       	ldi	r24, 0xC6	; 198
    bad4:	94 e1       	ldi	r25, 0x14	; 20
    bad6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							return 0;
    bada:	80 e0       	ldi	r24, 0x00	; 0
    badc:	21 c2       	rjmp	.+1090   	; 0xbf20 <_Z22Update_Euro_Valve_DataPh+0x5d4>
						}break;
					}
					
					_sEuro_Valve_Param[valve_number].Euro_Battery_Level  = (_sRuble_Parameters.Lora_Data_Rx[10]<<8) | (_sRuble_Parameters.Lora_Data_Rx[11]);      /* update battery level */
    bade:	8d e0       	ldi	r24, 0x0D	; 13
    bae0:	8c 9f       	mul	r24, r28
    bae2:	80 01       	movw	r16, r0
    bae4:	8d 9f       	mul	r24, r29
    bae6:	10 0d       	add	r17, r0
    bae8:	11 24       	eor	r1, r1
    baea:	0b 5e       	subi	r16, 0xEB	; 235
    baec:	13 4f       	sbci	r17, 0xF3	; 243
    baee:	80 91 13 14 	lds	r24, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    baf2:	90 91 14 14 	lds	r25, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
    baf6:	98 27       	eor	r25, r24
    baf8:	89 27       	eor	r24, r25
    bafa:	98 27       	eor	r25, r24
    bafc:	f8 01       	movw	r30, r16
    bafe:	91 87       	std	Z+9, r25	; 0x09
    bb00:	80 87       	std	Z+8, r24	; 0x08
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb02:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bb06:	81 30       	cpi	r24, 0x01	; 1
    bb08:	09 f0       	breq	.+2      	; 0xbb0c <_Z22Update_Euro_Valve_DataPh+0x1c0>
    bb0a:	52 c0       	rjmp	.+164    	; 0xbbb0 <_Z22Update_Euro_Valve_DataPh+0x264>
					{
						_kSERAIL_MON_WRITE_NO_LN("Data recvd From Euro : "); 
    bb0c:	6d e1       	ldi	r22, 0x1D	; 29
    bb0e:	7f e1       	ldi	r23, 0x1F	; 31
    bb10:	86 ec       	ldi	r24, 0xC6	; 198
    bb12:	94 e1       	ldi	r25, 0x14	; 20
    bb14:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                         /* for debugging purpose */
    bb18:	86 ec       	ldi	r24, 0xC6	; 198
    bb1a:	94 e1       	ldi	r25, 0x14	; 20
    bb1c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Number);
    bb20:	4a e0       	ldi	r20, 0x0A	; 10
    bb22:	50 e0       	ldi	r21, 0x00	; 0
    bb24:	d8 01       	movw	r26, r16
    bb26:	6c 91       	ld	r22, X
    bb28:	86 ec       	ldi	r24, 0xC6	; 198
    bb2a:	94 e1       	ldi	r25, 0x14	; 20
    bb2c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    bb30:	86 ec       	ldi	r24, 0xC6	; 198
    bb32:	94 e1       	ldi	r25, 0x14	; 20
    bb34:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Battery level : ");                                 /* for debugging purpose */
    bb38:	6c e0       	ldi	r22, 0x0C	; 12
    bb3a:	7f e1       	ldi	r23, 0x1F	; 31
    bb3c:	86 ec       	ldi	r24, 0xC6	; 198
    bb3e:	94 e1       	ldi	r25, 0x14	; 20
    bb40:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Battery_Level);
    bb44:	f8 01       	movw	r30, r16
    bb46:	60 85       	ldd	r22, Z+8	; 0x08
    bb48:	71 85       	ldd	r23, Z+9	; 0x09
    bb4a:	4a e0       	ldi	r20, 0x0A	; 10
    bb4c:	50 e0       	ldi	r21, 0x00	; 0
    bb4e:	86 ec       	ldi	r24, 0xC6	; 198
    bb50:	94 e1       	ldi	r25, 0x14	; 20
    bb52:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
						_kSERIAL_MON_CLEAR();
    bb56:	86 ec       	ldi	r24, 0xC6	; 198
    bb58:	94 e1       	ldi	r25, 0x14	; 20
    bb5a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Euro online/offline : ");      
    bb5e:	65 ef       	ldi	r22, 0xF5	; 245
    bb60:	7e e1       	ldi	r23, 0x1E	; 30
    bb62:	86 ec       	ldi	r24, 0xC6	; 198
    bb64:	94 e1       	ldi	r25, 0x14	; 20
    bb66:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                     /* for debugging purpose */
    bb6a:	86 ec       	ldi	r24, 0xC6	; 198
    bb6c:	94 e1       	ldi	r25, 0x14	; 20
    bb6e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Online);
    bb72:	4a e0       	ldi	r20, 0x0A	; 10
    bb74:	50 e0       	ldi	r21, 0x00	; 0
    bb76:	d8 01       	movw	r26, r16
    bb78:	1b 96       	adiw	r26, 0x0b	; 11
    bb7a:	6c 91       	ld	r22, X
    bb7c:	86 ec       	ldi	r24, 0xC6	; 198
    bb7e:	94 e1       	ldi	r25, 0x14	; 20
    bb80:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						_kSERAIL_MON_WRITE_NO_LN("Euro status : "); 
    bb84:	66 ee       	ldi	r22, 0xE6	; 230
    bb86:	7e e1       	ldi	r23, 0x1E	; 30
    bb88:	86 ec       	ldi	r24, 0xC6	; 198
    bb8a:	94 e1       	ldi	r25, 0x14	; 20
    bb8c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                                  /* for debugging purpose */
    bb90:	86 ec       	ldi	r24, 0xC6	; 198
    bb92:	94 e1       	ldi	r25, 0x14	; 20
    bb94:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Status);
    bb98:	4a e0       	ldi	r20, 0x0A	; 10
    bb9a:	50 e0       	ldi	r21, 0x00	; 0
    bb9c:	f8 01       	movw	r30, r16
    bb9e:	62 85       	ldd	r22, Z+10	; 0x0a
    bba0:	86 ec       	ldi	r24, 0xC6	; 198
    bba2:	94 e1       	ldi	r25, 0x14	; 20
    bba4:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    bba8:	86 ec       	ldi	r24, 0xC6	; 198
    bbaa:	94 e1       	ldi	r25, 0x14	; 20
    bbac:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    bbb0:	84 e1       	ldi	r24, 0x14	; 20
    bbb2:	e5 ef       	ldi	r30, 0xF5	; 245
    bbb4:	f3 e1       	ldi	r31, 0x13	; 19
    bbb6:	df 01       	movw	r26, r30
    bbb8:	1d 92       	st	X+, r1
    bbba:	8a 95       	dec	r24
    bbbc:	e9 f7       	brne	.-6      	; 0xbbb8 <_Z22Update_Euro_Valve_DataPh+0x26c>
    bbbe:	8f 01       	movw	r16, r30
    bbc0:	8d e0       	ldi	r24, 0x0D	; 13
    bbc2:	8c 9f       	mul	r24, r28
    bbc4:	a0 01       	movw	r20, r0
    bbc6:	8d 9f       	mul	r24, r29
    bbc8:	50 0d       	add	r21, r0
    bbca:	11 24       	eor	r1, r1
    bbcc:	df 01       	movw	r26, r30
    bbce:	80 e0       	ldi	r24, 0x00	; 0
    bbd0:	90 e0       	ldi	r25, 0x00	; 0
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
    bbd2:	fa 01       	movw	r30, r20
    bbd4:	e8 0f       	add	r30, r24
    bbd6:	f9 1f       	adc	r31, r25
    bbd8:	eb 5e       	subi	r30, 0xEB	; 235
    bbda:	f3 4f       	sbci	r31, 0xF3	; 243
    bbdc:	21 81       	ldd	r18, Z+1	; 0x01
    bbde:	2d 93       	st	X+, r18
    bbe0:	01 96       	adiw	r24, 0x01	; 1
						_kSERIAL_MON_CLEAR();
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
    bbe2:	86 30       	cpi	r24, 0x06	; 6
    bbe4:	91 05       	cpc	r25, r1
    bbe6:	a9 f7       	brne	.-22     	; 0xbbd2 <_Z22Update_Euro_Valve_DataPh+0x286>
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
					}
					_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_FAULT_DATA;
    bbe8:	81 e0       	ldi	r24, 0x01	; 1
    bbea:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Lora_Data_Rx[7];
    bbee:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    bbf2:	80 93 fc 13 	sts	0x13FC, r24	; 0x8013fc <_sRuble_Parameters+0x4e>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
    bbf6:	8d e0       	ldi	r24, 0x0D	; 13
    bbf8:	8c 9f       	mul	r24, r28
    bbfa:	f0 01       	movw	r30, r0
    bbfc:	8d 9f       	mul	r24, r29
    bbfe:	f0 0d       	add	r31, r0
    bc00:	11 24       	eor	r1, r1
    bc02:	eb 5e       	subi	r30, 0xEB	; 235
    bc04:	f3 4f       	sbci	r31, 0xF3	; 243
    bc06:	83 85       	ldd	r24, Z+11	; 0x0b
    bc08:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
			switch(_sRuble_Parameters.Lora_Data_TX[6])
			{
				case _eEURO_VALVE_FAULT_DATA:
				case _eVALVE_OFFLINE_FAULT:
				{
					_sRuble_Parameters.Last_Valve = valve_number;   /* update last valve number to publish the data */
    bc0c:	f0 92 6e 14 	sts	0x146E, r15	; 0x80146e <_sRuble_Parameters+0xc0>
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
    bc10:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    bc14:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    bc18:	80 68       	ori	r24, 0x80	; 128
    bc1a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    bc1e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					Euro_Data_EEPROM(valve_number);
    bc22:	8f 2d       	mov	r24, r15
    bc24:	1f de       	rcall	.-962    	; 0xb864 <_Z16Euro_Data_EEPROMh>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
    bc26:	40 91 1e 14 	lds	r20, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    bc2a:	ce 01       	movw	r24, r28
    bc2c:	88 0f       	add	r24, r24
    bc2e:	99 1f       	adc	r25, r25
    bc30:	44 23       	and	r20, r20
    bc32:	09 f4       	brne	.+2      	; 0xbc36 <_Z22Update_Euro_Valve_DataPh+0x2ea>
    bc34:	94 c0       	rjmp	.+296    	; 0xbd5e <_Z22Update_Euro_Valve_DataPh+0x412>
    bc36:	9c 01       	movw	r18, r24
    bc38:	2c 0f       	add	r18, r28
    bc3a:	3d 1f       	adc	r19, r29
    bc3c:	2f 5f       	subi	r18, 0xFF	; 255
    bc3e:	3f 4f       	sbci	r19, 0xFF	; 255
    bc40:	b6 e0       	ldi	r27, 0x06	; 6
    bc42:	4b 9f       	mul	r20, r27
    bc44:	a0 01       	movw	r20, r0
    bc46:	11 24       	eor	r1, r1
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bc48:	e3 e0       	ldi	r30, 0x03	; 3
    bc4a:	1b c0       	rjmp	.+54     	; 0xbc82 <_Z22Update_Euro_Valve_DataPh+0x336>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
				}break;
				
				default:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    bc4c:	81 30       	cpi	r24, 0x01	; 1
    bc4e:	09 f0       	breq	.+2      	; 0xbc52 <_Z22Update_Euro_Valve_DataPh+0x306>
    bc50:	44 cf       	rjmp	.-376    	; 0xbada <_Z22Update_Euro_Valve_DataPh+0x18e>
					{
						_kSERAIL_MON_WRITE("EURO PACKET IS NOT APPLICABLE");
    bc52:	68 ec       	ldi	r22, 0xC8	; 200
    bc54:	7e e1       	ldi	r23, 0x1E	; 30
    bc56:	39 cf       	rjmp	.-398    	; 0xbaca <_Z22Update_Euro_Valve_DataPh+0x17e>
    bc58:	da 01       	movw	r26, r20
    bc5a:	a6 0f       	add	r26, r22
    bc5c:	b7 1f       	adc	r27, r23
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bc5e:	a7 5b       	subi	r26, 0xB7	; 183
    bc60:	b2 4f       	sbci	r27, 0xF2	; 242
    bc62:	ac 91       	ld	r26, X
    bc64:	b0 e0       	ldi	r27, 0x00	; 0
    bc66:	a2 17       	cp	r26, r18
    bc68:	b3 07       	cpc	r27, r19
    bc6a:	71 f0       	breq	.+28     	; 0xbc88 <_Z22Update_Euro_Valve_DataPh+0x33c>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bc6c:	6f 5f       	subi	r22, 0xFF	; 255
    bc6e:	7f 4f       	sbci	r23, 0xFF	; 255
    bc70:	65 30       	cpi	r22, 0x05	; 5
    bc72:	71 05       	cpc	r23, r1
    bc74:	89 f7       	brne	.-30     	; 0xbc58 <_Z22Update_Euro_Valve_DataPh+0x30c>
    bc76:	e1 50       	subi	r30, 0x01	; 1
    bc78:	2f 5f       	subi	r18, 0xFF	; 255
    bc7a:	3f 4f       	sbci	r19, 0xFF	; 255
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
					Euro_Data_EEPROM(valve_number);
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    bc7c:	ee 23       	and	r30, r30
    bc7e:	09 f4       	brne	.+2      	; 0xbc82 <_Z22Update_Euro_Valve_DataPh+0x336>
    bc80:	6e c0       	rjmp	.+220    	; 0xbd5e <_Z22Update_Euro_Valve_DataPh+0x412>
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bc82:	60 e0       	ldi	r22, 0x00	; 0
    bc84:	70 e0       	ldi	r23, 0x00	; 0
    bc86:	e8 cf       	rjmp	.-48     	; 0xbc58 <_Z22Update_Euro_Valve_DataPh+0x30c>
								{
									/********* if valve is on and there is some fault then stop the irrigation process **********/
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    bc88:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bc8c:	81 30       	cpi	r24, 0x01	; 1
    bc8e:	51 f4       	brne	.+20     	; 0xbca4 <_Z22Update_Euro_Valve_DataPh+0x358>
									{
										_kSERAIL_MON_WRITE("valve fault occure please turn off the pump");
    bc90:	6c e9       	ldi	r22, 0x9C	; 156
    bc92:	7e e1       	ldi	r23, 0x1E	; 30
    bc94:	86 ec       	ldi	r24, 0xC6	; 198
    bc96:	94 e1       	ldi	r25, 0x14	; 20
    bc98:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    bc9c:	86 ec       	ldi	r24, 0xC6	; 198
    bc9e:	94 e1       	ldi	r25, 0x14	; 20
    bca0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
									}
									_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_SUSPENDED;   // suspend the operation if fault occur in running valve
    bca4:	81 e0       	ldi	r24, 0x01	; 1
    bca6:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
									// turn off the pump immediately
									if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    bcaa:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    bcae:	81 11       	cpse	r24, r1
    bcb0:	13 c0       	rjmp	.+38     	; 0xbcd8 <_Z22Update_Euro_Valve_DataPh+0x38c>
									{
										if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    bcb2:	8a e0       	ldi	r24, 0x0A	; 10
    bcb4:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
    bcb8:	01 97       	sbiw	r24, 0x01	; 1
    bcba:	21 f0       	breq	.+8      	; 0xbcc4 <_Z22Update_Euro_Valve_DataPh+0x378>
										{
											_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    bcbc:	61 e0       	ldi	r22, 0x01	; 1
    bcbe:	8a e0       	ldi	r24, 0x0A	; 10
    bcc0:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
										}
										
										if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    bcc4:	8b e0       	ldi	r24, 0x0B	; 11
    bcc6:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
    bcca:	01 97       	sbiw	r24, 0x01	; 1
    bccc:	71 f1       	breq	.+92     	; 0xbd2a <_Z22Update_Euro_Valve_DataPh+0x3de>
										{
											_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    bcce:	61 e0       	ldi	r22, 0x01	; 1
    bcd0:	8b e0       	ldi	r24, 0x0B	; 11
    bcd2:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
    bcd6:	29 c0       	rjmp	.+82     	; 0xbd2a <_Z22Update_Euro_Valve_DataPh+0x3de>
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    bcd8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bcdc:	81 30       	cpi	r24, 0x01	; 1
    bcde:	51 f4       	brne	.+20     	; 0xbcf4 <_Z22Update_Euro_Valve_DataPh+0x3a8>
										{
											_kSERAIL_MON_WRITE("wl pump trigger 11111111111111111111");
    bce0:	67 e7       	ldi	r22, 0x77	; 119
    bce2:	7e e1       	ldi	r23, 0x1E	; 30
    bce4:	86 ec       	ldi	r24, 0xC6	; 198
    bce6:	94 e1       	ldi	r25, 0x14	; 20
    bce8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    bcec:	86 ec       	ldi	r24, 0xC6	; 198
    bcee:	94 e1       	ldi	r25, 0x14	; 20
    bcf0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
										}
										if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    bcf4:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    bcf8:	62 50       	subi	r22, 0x02	; 2
    bcfa:	84 e0       	ldi	r24, 0x04	; 4
    bcfc:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
    bd00:	81 11       	cpse	r24, r1
    bd02:	10 c0       	rjmp	.+32     	; 0xbd24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
										}
										else
										{
											if(_sRuble_Parameters.Irrigating_Plot == _kRESET 
    bd04:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    bd08:	81 11       	cpse	r24, r1
    bd0a:	0c c0       	rjmp	.+24     	; 0xbd24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    bd0c:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    bd10:	81 30       	cpi	r24, 0x01	; 1
    bd12:	41 f0       	breq	.+16     	; 0xbd24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    bd14:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    bd18:	81 30       	cpi	r24, 0x01	; 1
    bd1a:	21 f0       	breq	.+8      	; 0xbd24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    bd1c:	81 e0       	ldi	r24, 0x01	; 1
    bd1e:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
    bd22:	02 c0       	rjmp	.+4      	; 0xbd28 <_Z22Update_Euro_Valve_DataPh+0x3dc>
											}
											else
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;	
    bd24:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
											}
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    bd28:	86 dd       	rcall	.-1268   	; 0xb836 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
										}
									}				
									_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bd2a:	8d e0       	ldi	r24, 0x0D	; 13
    bd2c:	8c 9f       	mul	r24, r28
    bd2e:	f0 01       	movw	r30, r0
    bd30:	8d 9f       	mul	r24, r29
    bd32:	f0 0d       	add	r31, r0
    bd34:	11 24       	eor	r1, r1
    bd36:	eb 5e       	subi	r30, 0xEB	; 235
    bd38:	f3 4f       	sbci	r31, 0xF3	; 243
    bd3a:	91 e0       	ldi	r25, 0x01	; 1
    bd3c:	92 87       	std	Z+10, r25	; 0x0a
									_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bd3e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    bd42:	84 e6       	ldi	r24, 0x64	; 100
    bd44:	90 e0       	ldi	r25, 0x00	; 0
    bd46:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    bd4a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    bd4e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bd52:	81 30       	cpi	r24, 0x01	; 1
    bd54:	09 f0       	breq	.+2      	; 0xbd58 <_Z22Update_Euro_Valve_DataPh+0x40c>
    bd56:	9b c0       	rjmp	.+310    	; 0xbe8e <_Z22Update_Euro_Valve_DataPh+0x542>
									{
										_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW");
    bd58:	64 e6       	ldi	r22, 0x64	; 100
    bd5a:	7e e1       	ldi	r23, 0x1E	; 30
    bd5c:	94 c0       	rjmp	.+296    	; 0xbe86 <_Z22Update_Euro_Valve_DataPh+0x53a>
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bd5e:	8c 0f       	add	r24, r28
    bd60:	9d 1f       	adc	r25, r29
    bd62:	e8 ee       	ldi	r30, 0xE8	; 232
    bd64:	fd e0       	ldi	r31, 0x0D	; 13
    bd66:	20 e0       	ldi	r18, 0x00	; 0
    bd68:	30 e0       	ldi	r19, 0x00	; 0
    bd6a:	7c 01       	movw	r14, r24
    bd6c:	44 e0       	ldi	r20, 0x04	; 4
    bd6e:	e4 0e       	add	r14, r20
    bd70:	f1 1c       	adc	r15, r1
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
    bd72:	41 81       	ldd	r20, Z+1	; 0x01
    bd74:	44 23       	and	r20, r20
    bd76:	09 f4       	brne	.+2      	; 0xbd7a <_Z22Update_Euro_Valve_DataPh+0x42e>
    bd78:	a0 c0       	rjmp	.+320    	; 0xbeba <_Z22Update_Euro_Valve_DataPh+0x56e>
    bd7a:	ac 01       	movw	r20, r24
    bd7c:	4f 5f       	subi	r20, 0xFF	; 255
    bd7e:	5f 4f       	sbci	r21, 0xFF	; 255
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bd80:	60 e0       	ldi	r22, 0x00	; 0
    bd82:	70 e0       	ldi	r23, 0x00	; 0
    bd84:	df 01       	movw	r26, r30
    bd86:	a6 0f       	add	r26, r22
    bd88:	b7 1f       	adc	r27, r23
    bd8a:	15 96       	adiw	r26, 0x05	; 5
    bd8c:	ac 91       	ld	r26, X
    bd8e:	b0 e0       	ldi	r27, 0x00	; 0
    bd90:	a4 17       	cp	r26, r20
    bd92:	b5 07       	cpc	r27, r21
    bd94:	09 f0       	breq	.+2      	; 0xbd98 <_Z22Update_Euro_Valve_DataPh+0x44c>
    bd96:	85 c0       	rjmp	.+266    	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x556>
								{
									if(_sExtra_Plot[check_plot].On_Off_Status == _kSET || _sExtra_Plot[check_plot].Auto_Operation == _kSET)
    bd98:	a0 81       	ld	r26, Z
    bd9a:	a1 11       	cpse	r26, r1
    bd9c:	04 c0       	rjmp	.+8      	; 0xbda6 <_Z22Update_Euro_Valve_DataPh+0x45a>
    bd9e:	a1 8d       	ldd	r26, Z+25	; 0x19
    bda0:	a1 30       	cpi	r26, 0x01	; 1
    bda2:	09 f0       	breq	.+2      	; 0xbda6 <_Z22Update_Euro_Valve_DataPh+0x45a>
    bda4:	7e c0       	rjmp	.+252    	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x556>
									{
										if((check_plot+_kEXTRA_PLOT_START_FROM) == _kFOOGER_PLOT_NUMBER)
    bda6:	23 30       	cpi	r18, 0x03	; 3
    bda8:	31 05       	cpc	r19, r1
    bdaa:	09 f0       	breq	.+2      	; 0xbdae <_Z22Update_Euro_Valve_DataPh+0x462>
    bdac:	7a c0       	rjmp	.+244    	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x556>
										{
											/********* if valve is on and there is some fault then stop the irrigation process **********/
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    bdae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bdb2:	81 30       	cpi	r24, 0x01	; 1
    bdb4:	51 f4       	brne	.+20     	; 0xbdca <_Z22Update_Euro_Valve_DataPh+0x47e>
											{
												_kSERAIL_MON_WRITE("fogger: valve fault occure please turn off the pump");
    bdb6:	60 e3       	ldi	r22, 0x30	; 48
    bdb8:	7e e1       	ldi	r23, 0x1E	; 30
    bdba:	86 ec       	ldi	r24, 0xC6	; 198
    bdbc:	94 e1       	ldi	r25, 0x14	; 20
    bdbe:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();	
    bdc2:	86 ec       	ldi	r24, 0xC6	; 198
    bdc4:	94 e1       	ldi	r25, 0x14	; 20
    bdc6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
											}
											if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    bdca:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    bdce:	81 11       	cpse	r24, r1
    bdd0:	13 c0       	rjmp	.+38     	; 0xbdf8 <_Z22Update_Euro_Valve_DataPh+0x4ac>
											{
												if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    bdd2:	8a e0       	ldi	r24, 0x0A	; 10
    bdd4:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
    bdd8:	01 97       	sbiw	r24, 0x01	; 1
    bdda:	21 f0       	breq	.+8      	; 0xbde4 <_Z22Update_Euro_Valve_DataPh+0x498>
												{
													_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    bddc:	61 e0       	ldi	r22, 0x01	; 1
    bdde:	8a e0       	ldi	r24, 0x0A	; 10
    bde0:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
												}
												
												if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    bde4:	8b e0       	ldi	r24, 0x0B	; 11
    bde6:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
    bdea:	01 97       	sbiw	r24, 0x01	; 1
    bdec:	71 f1       	breq	.+92     	; 0xbe4a <_Z22Update_Euro_Valve_DataPh+0x4fe>
												{
													_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    bdee:	61 e0       	ldi	r22, 0x01	; 1
    bdf0:	8b e0       	ldi	r24, 0x0B	; 11
    bdf2:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
    bdf6:	29 c0       	rjmp	.+82     	; 0xbe4a <_Z22Update_Euro_Valve_DataPh+0x4fe>
												}
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    bdf8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bdfc:	81 30       	cpi	r24, 0x01	; 1
    bdfe:	51 f4       	brne	.+20     	; 0xbe14 <_Z22Update_Euro_Valve_DataPh+0x4c8>
												{
													_kSERAIL_MON_WRITE("wl pump trigger 000000000000000000");
    be00:	6d e0       	ldi	r22, 0x0D	; 13
    be02:	7e e1       	ldi	r23, 0x1E	; 30
    be04:	86 ec       	ldi	r24, 0xC6	; 198
    be06:	94 e1       	ldi	r25, 0x14	; 20
    be08:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    be0c:	86 ec       	ldi	r24, 0xC6	; 198
    be0e:	94 e1       	ldi	r25, 0x14	; 20
    be10:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
												}
												if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    be14:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    be18:	62 50       	subi	r22, 0x02	; 2
    be1a:	84 e0       	ldi	r24, 0x04	; 4
    be1c:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
    be20:	81 11       	cpse	r24, r1
    be22:	10 c0       	rjmp	.+32     	; 0xbe44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
												}
												else
												{
													if(_sRuble_Parameters.Irrigating_Plot == _kRESET
    be24:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    be28:	81 11       	cpse	r24, r1
    be2a:	0c c0       	rjmp	.+24     	; 0xbe44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    be2c:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    be30:	81 30       	cpi	r24, 0x01	; 1
    be32:	41 f0       	breq	.+16     	; 0xbe44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    be34:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    be38:	81 30       	cpi	r24, 0x01	; 1
    be3a:	21 f0       	breq	.+8      	; 0xbe44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    be3c:	81 e0       	ldi	r24, 0x01	; 1
    be3e:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
    be42:	02 c0       	rjmp	.+4      	; 0xbe48 <_Z22Update_Euro_Valve_DataPh+0x4fc>
													}
													else
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
    be44:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
													}
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    be48:	f6 dc       	rcall	.-1556   	; 0xb836 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
												}
											}
											_sExtra_Plot[check_plot].Run_Timer = _kRESET;
    be4a:	10 92 3d 0e 	sts	0x0E3D, r1	; 0x800e3d <_sExtra_Plot+0x55>
    be4e:	10 92 3c 0e 	sts	0x0E3C, r1	; 0x800e3c <_sExtra_Plot+0x54>
											_sExtra_Plot[check_plot].One_Touch = _kRESET;					
    be52:	10 92 43 0e 	sts	0x0E43, r1	; 0x800e43 <_sExtra_Plot+0x5b>
											_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    be56:	8d e0       	ldi	r24, 0x0D	; 13
    be58:	8c 9f       	mul	r24, r28
    be5a:	f0 01       	movw	r30, r0
    be5c:	8d 9f       	mul	r24, r29
    be5e:	f0 0d       	add	r31, r0
    be60:	11 24       	eor	r1, r1
    be62:	eb 5e       	subi	r30, 0xEB	; 235
    be64:	f3 4f       	sbci	r31, 0xF3	; 243
    be66:	91 e0       	ldi	r25, 0x01	; 1
    be68:	92 87       	std	Z+10, r25	; 0x0a
											_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    be6a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    be6e:	84 e6       	ldi	r24, 0x64	; 100
    be70:	90 e0       	ldi	r25, 0x00	; 0
    be72:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    be76:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    be7a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    be7e:	81 30       	cpi	r24, 0x01	; 1
    be80:	31 f4       	brne	.+12     	; 0xbe8e <_Z22Update_Euro_Valve_DataPh+0x542>
											{
												_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW 1 ");
    be82:	67 ef       	ldi	r22, 0xF7	; 247
    be84:	7d e1       	ldi	r23, 0x1D	; 29
    be86:	86 ec       	ldi	r24, 0xC6	; 198
    be88:	94 e1       	ldi	r25, 0x14	; 20
    be8a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
											}
											_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    be8e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    be92:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    be96:	82 60       	ori	r24, 0x02	; 2
    be98:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    be9c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    bea0:	34 c0       	rjmp	.+104    	; 0xbf0a <_Z22Update_Euro_Valve_DataPh+0x5be>
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bea2:	6f 5f       	subi	r22, 0xFF	; 255
    bea4:	7f 4f       	sbci	r23, 0xFF	; 255
    bea6:	65 30       	cpi	r22, 0x05	; 5
    bea8:	71 05       	cpc	r23, r1
    beaa:	09 f0       	breq	.+2      	; 0xbeae <_Z22Update_Euro_Valve_DataPh+0x562>
    beac:	6b cf       	rjmp	.-298    	; 0xbd84 <_Z22Update_Euro_Valve_DataPh+0x438>
    beae:	4f 5f       	subi	r20, 0xFF	; 255
    beb0:	5f 4f       	sbci	r21, 0xFF	; 255
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    beb2:	4e 15       	cp	r20, r14
    beb4:	5f 05       	cpc	r21, r15
    beb6:	09 f0       	breq	.+2      	; 0xbeba <_Z22Update_Euro_Valve_DataPh+0x56e>
    beb8:	63 cf       	rjmp	.-314    	; 0xbd80 <_Z22Update_Euro_Valve_DataPh+0x434>
								}
							}
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
    beba:	2f 5f       	subi	r18, 0xFF	; 255
    bebc:	3f 4f       	sbci	r19, 0xFF	; 255
    bebe:	7b 96       	adiw	r30, 0x1b	; 27
    bec0:	2e 30       	cpi	r18, 0x0E	; 14
    bec2:	31 05       	cpc	r19, r1
    bec4:	09 f0       	breq	.+2      	; 0xbec8 <_Z22Update_Euro_Valve_DataPh+0x57c>
    bec6:	55 cf       	rjmp	.-342    	; 0xbd72 <_Z22Update_Euro_Valve_DataPh+0x426>
							}
						}						
					}
				}
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    bec8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    becc:	81 30       	cpi	r24, 0x01	; 1
    bece:	c9 f4       	brne	.+50     	; 0xbf02 <_Z22Update_Euro_Valve_DataPh+0x5b6>
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
    bed0:	63 ee       	ldi	r22, 0xE3	; 227
    bed2:	7d e1       	ldi	r23, 0x1D	; 29
    bed4:	86 ec       	ldi	r24, 0xC6	; 198
    bed6:	94 e1       	ldi	r25, 0x14	; 20
    bed8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    bedc:	86 ec       	ldi	r24, 0xC6	; 198
    bede:	94 e1       	ldi	r25, 0x14	; 20
    bee0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    bee4:	ce ef       	ldi	r28, 0xFE	; 254
    bee6:	d3 e1       	ldi	r29, 0x13	; 19
					for(int k =0; k<count; k++)
    bee8:	c0 17       	cp	r28, r16
    beea:	d1 07       	cpc	r29, r17
    beec:	51 f0       	breq	.+20     	; 0xbf02 <_Z22Update_Euro_Valve_DataPh+0x5b6>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
    beee:	d8 01       	movw	r26, r16
    bef0:	6d 91       	ld	r22, X+
    bef2:	8d 01       	movw	r16, r26
    bef4:	4a e0       	ldi	r20, 0x0A	; 10
    bef6:	50 e0       	ldi	r21, 0x00	; 0
    bef8:	86 ec       	ldi	r24, 0xC6	; 198
    befa:	94 e1       	ldi	r25, 0x14	; 20
    befc:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
					_kSERIAL_MON_CLEAR();
					for(int k =0; k<count; k++)
    bf00:	f3 cf       	rjmp	.-26     	; 0xbee8 <_Z22Update_Euro_Valve_DataPh+0x59c>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
    bf02:	86 ec       	ldi	r24, 0xC6	; 198
    bf04:	94 e1       	ldi	r25, 0x14	; 20
    bf06:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
					_kLORA_SEND_DATA(count);
    bf0a:	89 e0       	ldi	r24, 0x09	; 9
    bf0c:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
					}
					_kLORA_SEND_DATA(count);
					_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
				}break;
			}
			return 1;
    bf10:	81 e0       	ldi	r24, 0x01	; 1
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
					_kLORA_SEND_DATA(count);
				}break;
    bf12:	06 c0       	rjmp	.+12     	; 0xbf20 <_Z22Update_Euro_Valve_DataPh+0x5d4>
    bf14:	21 96       	adiw	r28, 0x01	; 1
bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
    bf16:	c6 30       	cpi	r28, 0x06	; 6
    bf18:	d1 05       	cpc	r29, r1
    bf1a:	09 f0       	breq	.+2      	; 0xbf1e <_Z22Update_Euro_Valve_DataPh+0x5d2>
    bf1c:	24 cd       	rjmp	.-1464   	; 0xb966 <_Z22Update_Euro_Valve_DataPh+0x1a>
    bf1e:	dd cd       	rjmp	.-1094   	; 0xbada <_Z22Update_Euro_Valve_DataPh+0x18e>
			}
			return 1;
		}
	}
	return 0;
}
    bf20:	df 91       	pop	r29
    bf22:	cf 91       	pop	r28
    bf24:	1f 91       	pop	r17
    bf26:	0f 91       	pop	r16
    bf28:	ff 90       	pop	r15
    bf2a:	ef 90       	pop	r14
    bf2c:	08 95       	ret

0000bf2e <_Z25Update_Wireless_Pump_DataPh>:
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bf2e:	1f 93       	push	r17
    bf30:	cf 93       	push	r28
    bf32:	df 93       	push	r29
    bf34:	dc 01       	movw	r26, r24
    bf36:	20 e0       	ldi	r18, 0x00	; 0
    bf38:	30 e0       	ldi	r19, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bf3a:	8b e0       	ldi	r24, 0x0B	; 11
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bf3c:	40 e0       	ldi	r20, 0x00	; 0
    bf3e:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bf40:	82 9f       	mul	r24, r18
    bf42:	f0 01       	movw	r30, r0
    bf44:	83 9f       	mul	r24, r19
    bf46:	f0 0d       	add	r31, r0
    bf48:	11 24       	eor	r1, r1
    bf4a:	ec 50       	subi	r30, 0x0C	; 12
    bf4c:	f4 4f       	sbci	r31, 0xF4	; 244
    bf4e:	69 2f       	mov	r22, r25
    bf50:	70 e0       	ldi	r23, 0x00	; 0
    bf52:	ed 01       	movw	r28, r26
    bf54:	c6 0f       	add	r28, r22
    bf56:	d7 1f       	adc	r29, r23
    bf58:	6e 0f       	add	r22, r30
    bf5a:	7f 1f       	adc	r23, r31
    bf5c:	18 81       	ld	r17, Y
    bf5e:	eb 01       	movw	r28, r22
    bf60:	59 81       	ldd	r21, Y+1	; 0x01
    bf62:	15 17       	cp	r17, r21
    bf64:	11 f0       	breq	.+4      	; 0xbf6a <_Z25Update_Wireless_Pump_DataPh+0x3c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    bf66:	40 e0       	ldi	r20, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
			{
				i = _kVALVE_ID_LEN;
    bf68:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    bf6a:	4f 5f       	subi	r20, 0xFF	; 255
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    bf6c:	9f 5f       	subi	r25, 0xFF	; 255
    bf6e:	96 30       	cpi	r25, 0x06	; 6
    bf70:	70 f3       	brcs	.-36     	; 0xbf4e <_Z25Update_Wireless_Pump_DataPh+0x20>
			}
			
			id_len++;
		}
		count = 0;
		if(id_len == _kVALVE_ID_LEN)
    bf72:	46 30       	cpi	r20, 0x06	; 6
    bf74:	09 f0       	breq	.+2      	; 0xbf78 <_Z25Update_Wireless_Pump_DataPh+0x4a>
    bf76:	59 c0       	rjmp	.+178    	; 0xc02a <_Z25Update_Wireless_Pump_DataPh+0xfc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    bf78:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bf7c:	81 30       	cpi	r24, 0x01	; 1
    bf7e:	51 f4       	brne	.+20     	; 0xbf94 <_Z25Update_Wireless_Pump_DataPh+0x66>
			{
				_kSERAIL_MON_WRITE("WIRELESS PUMP DATA RECIEVED");
    bf80:	67 ec       	ldi	r22, 0xC7	; 199
    bf82:	7d e1       	ldi	r23, 0x1D	; 29
    bf84:	86 ec       	ldi	r24, 0xC6	; 198
    bf86:	94 e1       	ldi	r25, 0x14	; 20
    bf88:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    bf8c:	86 ec       	ldi	r24, 0xC6	; 198
    bf8e:	94 e1       	ldi	r25, 0x14	; 20
    bf90:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			
			pump_number =  _sRuble_Parameters.Lora_Data_Rx[10];
    bf94:	c0 91 13 14 	lds	r28, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
			pump_number = pump_number-1;
    bf98:	c1 50       	subi	r28, 0x01	; 1
			
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    bf9a:	80 91 0f 14 	lds	r24, 0x140F	; 0x80140f <_sRuble_Parameters+0x61>
    bf9e:	82 30       	cpi	r24, 0x02	; 2
    bfa0:	b9 f0       	breq	.+46     	; 0xbfd0 <_Z25Update_Wireless_Pump_DataPh+0xa2>
    bfa2:	83 30       	cpi	r24, 0x03	; 3
    bfa4:	01 f5       	brne	.+64     	; 0xbfe6 <_Z25Update_Wireless_Pump_DataPh+0xb8>
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
				}break;
				
				case _eWIRELESS_FAULT:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
    bfa6:	8b e0       	ldi	r24, 0x0B	; 11
    bfa8:	c8 9f       	mul	r28, r24
    bfaa:	f0 01       	movw	r30, r0
    bfac:	11 24       	eor	r1, r1
    bfae:	ec 50       	subi	r30, 0x0C	; 12
    bfb0:	f4 4f       	sbci	r31, 0xF4	; 244
    bfb2:	92 85       	ldd	r25, Z+10	; 0x0a
    bfb4:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    bfb8:	89 2b       	or	r24, r25
    bfba:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
    bfbc:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    bfc0:	90 91 12 14 	lds	r25, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    bfc4:	98 27       	eor	r25, r24
    bfc6:	89 27       	eor	r24, r25
    bfc8:	98 27       	eor	r25, r24
    bfca:	91 87       	std	Z+9, r25	; 0x09
    bfcc:	80 87       	std	Z+8, r24	; 0x08
				}break;
    bfce:	0b c0       	rjmp	.+22     	; 0xbfe6 <_Z25Update_Wireless_Pump_DataPh+0xb8>
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
			{
				case _eCALIBRATION_RESPONSE:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
    bfd0:	db e0       	ldi	r29, 0x0B	; 11
    bfd2:	cd 9f       	mul	r28, r29
    bfd4:	f0 01       	movw	r30, r0
    bfd6:	11 24       	eor	r1, r1
    bfd8:	ec 50       	subi	r30, 0x0C	; 12
    bfda:	f4 4f       	sbci	r31, 0xF4	; 244
    bfdc:	92 85       	ldd	r25, Z+10	; 0x0a
    bfde:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    bfe2:	89 2b       	or	r24, r25
    bfe4:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    bfe6:	84 e1       	ldi	r24, 0x14	; 20
    bfe8:	e5 ef       	ldi	r30, 0xF5	; 245
    bfea:	f3 e1       	ldi	r31, 0x13	; 19
    bfec:	df 01       	movw	r26, r30
    bfee:	1d 92       	st	X+, r1
    bff0:	8a 95       	dec	r24
    bff2:	e9 f7       	brne	.-6      	; 0xbfee <_Z25Update_Wireless_Pump_DataPh+0xc0>
    bff4:	df 01       	movw	r26, r30
    bff6:	db e0       	ldi	r29, 0x0B	; 11
    bff8:	cd 9f       	mul	r28, r29
    bffa:	a0 01       	movw	r20, r0
    bffc:	11 24       	eor	r1, r1
    bffe:	80 e0       	ldi	r24, 0x00	; 0
    c000:	90 e0       	ldi	r25, 0x00	; 0
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
    c002:	fc 01       	movw	r30, r24
    c004:	e4 0f       	add	r30, r20
    c006:	f5 1f       	adc	r31, r21
    c008:	ec 50       	subi	r30, 0x0C	; 12
    c00a:	f4 4f       	sbci	r31, 0xF4	; 244
    c00c:	21 81       	ldd	r18, Z+1	; 0x01
    c00e:	2d 93       	st	X+, r18
    c010:	01 96       	adiw	r24, 0x01	; 1
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
    c012:	86 30       	cpi	r24, 0x06	; 6
    c014:	91 05       	cpc	r25, r1
    c016:	a9 f7       	brne	.-22     	; 0xc002 <_Z25Update_Wireless_Pump_DataPh+0xd4>
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
			}
			
			_sRuble_Parameters.Lora_Data_TX[count++] = _eGOT_DATA;
    c018:	81 e0       	ldi	r24, 0x01	; 1
    c01a:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			_kLORA_SEND_DATA(count);
    c01e:	87 e0       	ldi	r24, 0x07	; 7
    c020:	ed d7       	rcall	.+4058   	; 0xcffc <_Z14Lora_Data_Sendh>
			
			Wireless_Pump_EEPROM(pump_number);
    c022:	8c 2f       	mov	r24, r28
    c024:	59 dc       	rcall	.-1870   	; 0xb8d8 <_Z20Wireless_Pump_EEPROMh>
			
			return 1;
    c026:	81 e0       	ldi	r24, 0x01	; 1
    c028:	07 c0       	rjmp	.+14     	; 0xc038 <_Z25Update_Wireless_Pump_DataPh+0x10a>
    c02a:	2f 5f       	subi	r18, 0xFF	; 255
    c02c:	3f 4f       	sbci	r19, 0xFF	; 255

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
	unsigned char pump_number=0,i=0,count = 0,id_len;
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
    c02e:	23 30       	cpi	r18, 0x03	; 3
    c030:	31 05       	cpc	r19, r1
    c032:	09 f0       	breq	.+2      	; 0xc036 <_Z25Update_Wireless_Pump_DataPh+0x108>
    c034:	83 cf       	rjmp	.-250    	; 0xbf3c <_Z25Update_Wireless_Pump_DataPh+0xe>
			return 1;
			
		}
	}
	
	return 0;
    c036:	80 e0       	ldi	r24, 0x00	; 0
}
    c038:	df 91       	pop	r29
    c03a:	cf 91       	pop	r28
    c03c:	1f 91       	pop	r17
    c03e:	08 95       	ret

0000c040 <_Z13Store_All_APNv>:
    c040:	08 95       	ret

0000c042 <_Z16Check_GSM_Signalv>:
// 	sprintf(_sSim_APNs.Jio,"jionet");
}


void Check_GSM_Signal(void)
{
    c042:	cf 93       	push	r28
    c044:	df 93       	push	r29
	static unsigned char counter;
	int temp_sig_strenght;
	
	counter++;
    c046:	80 91 63 0c 	lds	r24, 0x0C63	; 0x800c63 <_ZZ16Check_GSM_SignalvE7counter>
    c04a:	8f 5f       	subi	r24, 0xFF	; 255
    c04c:	80 93 63 0c 	sts	0x0C63, r24	; 0x800c63 <_ZZ16Check_GSM_SignalvE7counter>
	
	if(_kSERIAL_AT.available() != 0)
    c050:	83 e8       	ldi	r24, 0x83	; 131
    c052:	96 e1       	ldi	r25, 0x16	; 22
    c054:	0e 94 64 d2 	call	0x1a4c8	; 0x1a4c8 <_ZN14HardwareSerial9availableEv>
    c058:	89 2b       	or	r24, r25
    c05a:	c9 f5       	brne	.+114    	; 0xc0ce <_Z16Check_GSM_Signalv+0x8c>
	{
		return;
	}
		
	if(_sRuble_Parameters.Sim_Check == _eSIM_INSERTED)
    c05c:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    c060:	82 30       	cpi	r24, 0x02	; 2
    c062:	a1 f4       	brne	.+40     	; 0xc08c <_Z16Check_GSM_Signalv+0x4a>
	{
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */		
    c064:	0e 94 f2 6a 	call	0xd5e4	; 0xd5e4 <_Z18_kGSM_SIG_STRENGTHv>
    c068:	ec 01       	movw	r28, r24
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
    c06a:	4a e0       	ldi	r20, 0x0A	; 10
    c06c:	50 e0       	ldi	r21, 0x00	; 0
    c06e:	bc 01       	movw	r22, r24
    c070:	86 ec       	ldi	r24, 0xC6	; 198
    c072:	94 e1       	ldi	r25, 0x14	; 20
    c074:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
	else
	{
		temp_sig_strenght = 0;
	}
	
	if(temp_sig_strenght > 19)                 /* if there is weak signal */
    c078:	c4 31       	cpi	r28, 0x14	; 20
    c07a:	d1 05       	cpc	r29, r1
    c07c:	4c f0       	brlt	.+18     	; 0xc090 <_Z16Check_GSM_Signalv+0x4e>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c07e:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c082:	88 7f       	andi	r24, 0xF8	; 248
    c084:	88 60       	ori	r24, 0x08	; 8
    c086:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    c08a:	02 c0       	rjmp	.+4      	; 0xc090 <_Z16Check_GSM_Signalv+0x4e>
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */		
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
	}
	else
	{
		temp_sig_strenght = 0;
    c08c:	c0 e0       	ldi	r28, 0x00	; 0
    c08e:	d0 e0       	ldi	r29, 0x00	; 0
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
	}
	 
	if(temp_sig_strenght < 20 && temp_sig_strenght > 13)   /* if there is moderate signal */
    c090:	ce 01       	movw	r24, r28
    c092:	0e 97       	sbiw	r24, 0x0e	; 14
    c094:	06 97       	sbiw	r24, 0x06	; 6
    c096:	30 f4       	brcc	.+12     	; 0xc0a4 <_Z16Check_GSM_Signalv+0x62>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c098:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c09c:	84 7f       	andi	r24, 0xF4	; 244
    c09e:	84 60       	ori	r24, 0x04	; 4
    c0a0:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
	}
	 
	 if(temp_sig_strenght < 14 && temp_sig_strenght > 5)   /* if there is strong signal */
    c0a4:	ce 01       	movw	r24, r28
    c0a6:	06 97       	sbiw	r24, 0x06	; 6
    c0a8:	08 97       	sbiw	r24, 0x08	; 8
    c0aa:	28 f4       	brcc	.+10     	; 0xc0b6 <_Z16Check_GSM_Signalv+0x74>
	{
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c0ac:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c0b0:	82 7f       	andi	r24, 0xF2	; 242
    c0b2:	82 60       	ori	r24, 0x02	; 2
    c0b4:	0a c0       	rjmp	.+20     	; 0xc0ca <_Z16Check_GSM_Signalv+0x88>
	}
	 
	if(temp_sig_strenght < 5)                           /* if there is no signal */
    c0b6:	c5 30       	cpi	r28, 0x05	; 5
    c0b8:	d1 05       	cpc	r29, r1
    c0ba:	1c f0       	brlt	.+6      	; 0xc0c2 <_Z16Check_GSM_Signalv+0x80>
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
	}
	
	if (temp_sig_strenght >= 99) 
    c0bc:	c3 36       	cpi	r28, 0x63	; 99
    c0be:	d1 05       	cpc	r29, r1
    c0c0:	34 f0       	brlt	.+12     	; 0xc0ce <_Z16Check_GSM_Signalv+0x8c>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
    c0c2:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c0c6:	81 7f       	andi	r24, 0xF1	; 241
    c0c8:	81 60       	ori	r24, 0x01	; 1
    c0ca:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
	}
	
}
    c0ce:	df 91       	pop	r29
    c0d0:	cf 91       	pop	r28
    c0d2:	08 95       	ret

0000c0d4 <_Z14Get_Local_Timev>:


void Get_Local_Time(void)
{
    c0d4:	8f 92       	push	r8
    c0d6:	9f 92       	push	r9
    c0d8:	af 92       	push	r10
    c0da:	bf 92       	push	r11
    c0dc:	ef 92       	push	r14
    c0de:	ff 92       	push	r15
    c0e0:	0f 93       	push	r16
    c0e2:	1f 93       	push	r17
    c0e4:	cf 93       	push	r28
    c0e6:	df 93       	push	r29
	char i;
	
	for(unsigned char count=0; count <2; count++)
    c0e8:	10 e0       	ldi	r17, 0x00	; 0
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    c0ea:	84 ed       	ldi	r24, 0xD4	; 212
    c0ec:	e8 2e       	mov	r14, r24
    c0ee:	83 e0       	ldi	r24, 0x03	; 3
    c0f0:	f8 2e       	mov	r15, r24
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
	{
		if(count == 0)
    c0f2:	11 11       	cpse	r17, r1
    c0f4:	1f c0       	rjmp	.+62     	; 0xc134 <_Z14Get_Local_Timev+0x60>
		{
			Reset_Buffer();
    c0f6:	5c d7       	rcall	.+3768   	; 0xcfb0 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZU=1"));
    c0f8:	68 ec       	ldi	r22, 0xC8	; 200
    c0fa:	70 e2       	ldi	r23, 0x20	; 32
    c0fc:	83 e8       	ldi	r24, 0x83	; 131
    c0fe:	96 e1       	ldi	r25, 0x16	; 22
    c100:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c104:	02 e0       	ldi	r16, 0x02	; 2
    c106:	28 eb       	ldi	r18, 0xB8	; 184
    c108:	3b e0       	ldi	r19, 0x0B	; 11
    c10a:	40 e0       	ldi	r20, 0x00	; 0
    c10c:	50 e0       	ldi	r21, 0x00	; 0
    c10e:	6e e1       	ldi	r22, 0x1E	; 30
    c110:	73 e0       	ldi	r23, 0x03	; 3
    c112:	80 e0       	ldi	r24, 0x00	; 0
    c114:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    c116:	b1 d7       	rcall	.+3938   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    c118:	4b d7       	rcall	.+3734   	; 0xcfb0 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZR=1"));
    c11a:	6e eb       	ldi	r22, 0xBE	; 190
    c11c:	70 e2       	ldi	r23, 0x20	; 32
    c11e:	83 e8       	ldi	r24, 0x83	; 131
    c120:	96 e1       	ldi	r25, 0x16	; 22
    c122:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK1",  NULL,3000,2);
    c126:	28 eb       	ldi	r18, 0xB8	; 184
    c128:	3b e0       	ldi	r19, 0x0B	; 11
    c12a:	40 e0       	ldi	r20, 0x00	; 0
    c12c:	50 e0       	ldi	r21, 0x00	; 0
    c12e:	61 e2       	ldi	r22, 0x21	; 33
    c130:	73 e0       	ldi	r23, 0x03	; 3
		}
		else
		{
			Reset_Buffer();
    c132:	1e c0       	rjmp	.+60     	; 0xc170 <_Z14Get_Local_Timev+0x9c>
    c134:	3d d7       	rcall	.+3706   	; 0xcfb0 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP=\"in.pool.ntp.org\",22"));
    c136:	61 ea       	ldi	r22, 0xA1	; 161
    c138:	70 e2       	ldi	r23, 0x20	; 32
    c13a:	83 e8       	ldi	r24, 0x83	; 131
    c13c:	96 e1       	ldi	r25, 0x16	; 22
    c13e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,5000,2);
    c142:	02 e0       	ldi	r16, 0x02	; 2
    c144:	28 e8       	ldi	r18, 0x88	; 136
    c146:	33 e1       	ldi	r19, 0x13	; 19
    c148:	40 e0       	ldi	r20, 0x00	; 0
    c14a:	50 e0       	ldi	r21, 0x00	; 0
    c14c:	6e e1       	ldi	r22, 0x1E	; 30
    c14e:	73 e0       	ldi	r23, 0x03	; 3
    c150:	80 e0       	ldi	r24, 0x00	; 0
    c152:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    c154:	92 d7       	rcall	.+3876   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    c156:	2c d7       	rcall	.+3672   	; 0xcfb0 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP"));
    c158:	69 e9       	ldi	r22, 0x99	; 153
    c15a:	70 e2       	ldi	r23, 0x20	; 32
    c15c:	83 e8       	ldi	r24, 0x83	; 131
    c15e:	96 e1       	ldi	r25, 0x16	; 22
    c160:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "+CNTP: 0",  NULL,3000,2);
    c164:	28 eb       	ldi	r18, 0xB8	; 184
    c166:	3b e0       	ldi	r19, 0x0B	; 11
    c168:	40 e0       	ldi	r20, 0x00	; 0
    c16a:	50 e0       	ldi	r21, 0x00	; 0
    c16c:	65 e2       	ldi	r22, 0x25	; 37
    c16e:	73 e0       	ldi	r23, 0x03	; 3
    c170:	80 e0       	ldi	r24, 0x00	; 0
    c172:	90 e0       	ldi	r25, 0x00	; 0
		// 	_kSERIAL_AT.println(F("AT+CHTPUPDATE"));
		// 	Send_AT_Command(NULL, "OK",  NULL,5000,2);
		
		// 	_kSERIAL_AT.println(F("AT+CTZU=1"));
		// 	Send_AT_Command(NULL, "OK",  NULL,3000,2);
		Reset_Buffer();
    c174:	82 d7       	rcall	.+3844   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    c176:	1c d7       	rcall	.+3640   	; 0xcfb0 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CCLK?"));
    c178:	60 e9       	ldi	r22, 0x90	; 144
    c17a:	70 e2       	ldi	r23, 0x20	; 32
    c17c:	83 e8       	ldi	r24, 0x83	; 131
    c17e:	96 e1       	ldi	r25, 0x16	; 22
    c180:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK", NULL,2000,2);
    c184:	02 e0       	ldi	r16, 0x02	; 2
    c186:	20 ed       	ldi	r18, 0xD0	; 208
    c188:	37 e0       	ldi	r19, 0x07	; 7
    c18a:	40 e0       	ldi	r20, 0x00	; 0
    c18c:	50 e0       	ldi	r21, 0x00	; 0
    c18e:	6e e1       	ldi	r22, 0x1E	; 30
    c190:	73 e0       	ldi	r23, 0x03	; 3
    c192:	80 e0       	ldi	r24, 0x00	; 0
    c194:	90 e0       	ldi	r25, 0x00	; 0
    c196:	71 d7       	rcall	.+3810   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
		
		//if(strstr((char *)_gRecvd_Data,"+CCLK") != 0)
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
    c198:	6e e2       	ldi	r22, 0x2E	; 46
    c19a:	73 e0       	ldi	r23, 0x03	; 3
    c19c:	80 ed       	ldi	r24, 0xD0	; 208
    c19e:	9f e0       	ldi	r25, 0x0F	; 15
    c1a0:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    c1a4:	89 2b       	or	r24, r25
    c1a6:	09 f4       	brne	.+2      	; 0xc1aa <_Z14Get_Local_Timev+0xd6>
    c1a8:	0f c1       	rjmp	.+542    	; 0xc3c8 <_Z14Get_Local_Timev+0x2f4>
    c1aa:	80 e0       	ldi	r24, 0x00	; 0
    c1ac:	90 e0       	ldi	r25, 0x00	; 0
    c1ae:	c8 2f       	mov	r28, r24
		{
			for(i=0;i<20;i++)
			{
				//if(_gRecvd_Data[i] == '+' && _gRecvd_Data[i+5] == ':')
				if(_gPub_Buff[i] == '+' && _gPub_Buff[i+5] == ':')
    c1b0:	fc 01       	movw	r30, r24
    c1b2:	e0 53       	subi	r30, 0x30	; 48
    c1b4:	f0 4f       	sbci	r31, 0xF0	; 240
    c1b6:	20 81       	ld	r18, Z
    c1b8:	2b 32       	cpi	r18, 0x2B	; 43
    c1ba:	31 f4       	brne	.+12     	; 0xc1c8 <_Z14Get_Local_Timev+0xf4>
    c1bc:	fc 01       	movw	r30, r24
    c1be:	eb 52       	subi	r30, 0x2B	; 43
    c1c0:	f0 4f       	sbci	r31, 0xF0	; 240
    c1c2:	20 81       	ld	r18, Z
    c1c4:	2a 33       	cpi	r18, 0x3A	; 58
    c1c6:	29 f0       	breq	.+10     	; 0xc1d2 <_Z14Get_Local_Timev+0xfe>
    c1c8:	01 96       	adiw	r24, 0x01	; 1
		Send_AT_Command(NULL, "OK", NULL,2000,2);
		
		//if(strstr((char *)_gRecvd_Data,"+CCLK") != 0)
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
		{
			for(i=0;i<20;i++)
    c1ca:	84 31       	cpi	r24, 0x14	; 20
    c1cc:	91 05       	cpc	r25, r1
    c1ce:	79 f7       	brne	.-34     	; 0xc1ae <_Z14Get_Local_Timev+0xda>
    c1d0:	c4 e1       	ldi	r28, 0x14	; 20
		
// 		_sRuble_Parameters.Update_Local_Time[0] = ((_gRecvd_Data[i+17]-0x30)*10) + (_gRecvd_Data[i+18]-0x30);    /* hold hour */
// 		_sRuble_Parameters.Update_Local_Time[1] = ((_gRecvd_Data[i+20]-0X30)*10) + (_gRecvd_Data[i+21]-0X30);    /* hold minute */
// 		_sRuble_Parameters.Update_Local_Time[2] = ((_gRecvd_Data[i+23]-0X30)*10) + (_gRecvd_Data[i+24]-0X30);    /* hold second */
		
		_sRuble_Parameters.Update_Local_Time[0] = ((_gPub_Buff[i+17]-0x30)*10) + (_gPub_Buff[i+18]-0x30);    /* hold hour */
    c1d2:	d0 e0       	ldi	r29, 0x00	; 0
    c1d4:	fe 01       	movw	r30, r28
    c1d6:	ef 51       	subi	r30, 0x1F	; 31
    c1d8:	f0 4f       	sbci	r31, 0xF0	; 240
    c1da:	20 81       	ld	r18, Z
    c1dc:	fe 01       	movw	r30, r28
    c1de:	ee 51       	subi	r30, 0x1E	; 30
    c1e0:	f0 4f       	sbci	r31, 0xF0	; 240
    c1e2:	90 81       	ld	r25, Z
    c1e4:	22 0f       	add	r18, r18
    c1e6:	20 56       	subi	r18, 0x60	; 96
    c1e8:	82 2f       	mov	r24, r18
    c1ea:	88 0f       	add	r24, r24
    c1ec:	88 0f       	add	r24, r24
    c1ee:	28 0f       	add	r18, r24
    c1f0:	90 53       	subi	r25, 0x30	; 48
    c1f2:	82 2f       	mov	r24, r18
    c1f4:	89 0f       	add	r24, r25
    c1f6:	80 93 ef 13 	sts	0x13EF, r24	; 0x8013ef <_sRuble_Parameters+0x41>
		_sRuble_Parameters.Update_Local_Time[1] = ((_gPub_Buff[i+20]-0X30)*10) + (_gPub_Buff[i+21]-0X30);    /* hold minute */
    c1fa:	fe 01       	movw	r30, r28
    c1fc:	ec 51       	subi	r30, 0x1C	; 28
    c1fe:	f0 4f       	sbci	r31, 0xF0	; 240
    c200:	90 81       	ld	r25, Z
    c202:	fe 01       	movw	r30, r28
    c204:	eb 51       	subi	r30, 0x1B	; 27
    c206:	f0 4f       	sbci	r31, 0xF0	; 240
    c208:	30 81       	ld	r19, Z
    c20a:	99 0f       	add	r25, r25
    c20c:	90 56       	subi	r25, 0x60	; 96
    c20e:	29 2f       	mov	r18, r25
    c210:	22 0f       	add	r18, r18
    c212:	22 0f       	add	r18, r18
    c214:	29 0f       	add	r18, r25
    c216:	30 53       	subi	r19, 0x30	; 48
    c218:	42 2f       	mov	r20, r18
    c21a:	43 0f       	add	r20, r19
    c21c:	40 93 f0 13 	sts	0x13F0, r20	; 0x8013f0 <_sRuble_Parameters+0x42>
		_sRuble_Parameters.Update_Local_Time[2] = ((_gPub_Buff[i+23]-0X30)*10) + (_gPub_Buff[i+24]-0X30);    /* hold second */
    c220:	fe 01       	movw	r30, r28
    c222:	e9 51       	subi	r30, 0x19	; 25
    c224:	f0 4f       	sbci	r31, 0xF0	; 240
    c226:	90 81       	ld	r25, Z
    c228:	fe 01       	movw	r30, r28
    c22a:	e8 51       	subi	r30, 0x18	; 24
    c22c:	f0 4f       	sbci	r31, 0xF0	; 240
    c22e:	20 81       	ld	r18, Z
    c230:	99 0f       	add	r25, r25
    c232:	90 56       	subi	r25, 0x60	; 96
    c234:	39 2f       	mov	r19, r25
    c236:	33 0f       	add	r19, r19
    c238:	33 0f       	add	r19, r19
    c23a:	93 0f       	add	r25, r19
    c23c:	20 53       	subi	r18, 0x30	; 48
    c23e:	59 2f       	mov	r21, r25
    c240:	52 0f       	add	r21, r18
    c242:	50 93 f1 13 	sts	0x13F1, r21	; 0x8013f1 <_sRuble_Parameters+0x43>
		
		_sRuble_Parameters.Current_Time_In_Sec = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]) ;
    c246:	28 2f       	mov	r18, r24
    c248:	30 e0       	ldi	r19, 0x00	; 0
    c24a:	a0 e1       	ldi	r26, 0x10	; 16
    c24c:	be e0       	ldi	r27, 0x0E	; 14
    c24e:	0e 94 25 eb 	call	0x1d64a	; 0x1d64a <__umulhisi3>
    c252:	4b 01       	movw	r8, r22
    c254:	5c 01       	movw	r10, r24
    c256:	24 2f       	mov	r18, r20
    c258:	30 e0       	ldi	r19, 0x00	; 0
    c25a:	ac e3       	ldi	r26, 0x3C	; 60
    c25c:	b0 e0       	ldi	r27, 0x00	; 0
    c25e:	0e 94 25 eb 	call	0x1d64a	; 0x1d64a <__umulhisi3>
    c262:	dc 01       	movw	r26, r24
    c264:	cb 01       	movw	r24, r22
    c266:	88 0d       	add	r24, r8
    c268:	99 1d       	adc	r25, r9
    c26a:	aa 1d       	adc	r26, r10
    c26c:	bb 1d       	adc	r27, r11
    c26e:	85 0f       	add	r24, r21
    c270:	91 1d       	adc	r25, r1
    c272:	a1 1d       	adc	r26, r1
    c274:	b1 1d       	adc	r27, r1
    c276:	80 93 be 13 	sts	0x13BE, r24	; 0x8013be <_sRuble_Parameters+0x10>
    c27a:	90 93 bf 13 	sts	0x13BF, r25	; 0x8013bf <_sRuble_Parameters+0x11>
    c27e:	a0 93 c0 13 	sts	0x13C0, r26	; 0x8013c0 <_sRuble_Parameters+0x12>
    c282:	b0 93 c1 13 	sts	0x13C1, r27	; 0x8013c1 <_sRuble_Parameters+0x13>
		//_sRuble_Parameters.Current_Time_In_Sec = 36000;
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c286:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c28a:	81 30       	cpi	r24, 0x01	; 1
    c28c:	91 f4       	brne	.+36     	; 0xc2b2 <_Z14Get_Local_Timev+0x1de>
		{
			Serial.println();
    c28e:	86 ec       	ldi	r24, 0xC6	; 198
    c290:	94 e1       	ldi	r25, 0x14	; 20
    c292:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
			_kSERIAL_MON_PRINT_NUM((unsigned long int)_sRuble_Parameters.Current_Time_In_Sec);
    c296:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    c29a:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    c29e:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    c2a2:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    c2a6:	2a e0       	ldi	r18, 0x0A	; 10
    c2a8:	30 e0       	ldi	r19, 0x00	; 0
    c2aa:	86 ec       	ldi	r24, 0xC6	; 198
    c2ac:	94 e1       	ldi	r25, 0x14	; 20
    c2ae:	0e 94 4f d5 	call	0x1aa9e	; 0x1aa9e <_ZN5Print7printlnEmi>
		
// 		_sRuble_Parameters.Update_Local_Date[2] = ((_gRecvd_Data[i+8]-0X30)*10) +  (_gRecvd_Data[i+9]-0X30);      /* hold date */
// 		_sRuble_Parameters.Update_Local_Date[1] = ((_gRecvd_Data[i+11]-0X30)*10) + (_gRecvd_Data[i+12]-0X30);     /* hold month */
// 		_sRuble_Parameters.Update_Local_Date[0] = ((_gRecvd_Data[i+14]-0X30)*10) + (_gRecvd_Data[i+15]-0X30);
		
		_sRuble_Parameters.Update_Local_Date[2] = ((_gPub_Buff[i+8]-0X30)*10) +  (_gPub_Buff[i+9]-0X30);      /* hold date */
    c2b2:	fe 01       	movw	r30, r28
    c2b4:	e8 52       	subi	r30, 0x28	; 40
    c2b6:	f0 4f       	sbci	r31, 0xF0	; 240
    c2b8:	80 81       	ld	r24, Z
    c2ba:	fe 01       	movw	r30, r28
    c2bc:	e7 52       	subi	r30, 0x27	; 39
    c2be:	f0 4f       	sbci	r31, 0xF0	; 240
    c2c0:	90 81       	ld	r25, Z
    c2c2:	88 0f       	add	r24, r24
    c2c4:	80 56       	subi	r24, 0x60	; 96
    c2c6:	28 2f       	mov	r18, r24
    c2c8:	22 0f       	add	r18, r18
    c2ca:	22 0f       	add	r18, r18
    c2cc:	82 0f       	add	r24, r18
    c2ce:	90 53       	subi	r25, 0x30	; 48
    c2d0:	89 0f       	add	r24, r25
    c2d2:	80 93 f4 13 	sts	0x13F4, r24	; 0x8013f4 <_sRuble_Parameters+0x46>
		_sRuble_Parameters.Update_Local_Date[1] = ((_gPub_Buff[i+11]-0X30)*10) + (_gPub_Buff[i+12]-0X30);     /* hold month */
    c2d6:	fe 01       	movw	r30, r28
    c2d8:	e5 52       	subi	r30, 0x25	; 37
    c2da:	f0 4f       	sbci	r31, 0xF0	; 240
    c2dc:	80 81       	ld	r24, Z
    c2de:	fe 01       	movw	r30, r28
    c2e0:	e4 52       	subi	r30, 0x24	; 36
    c2e2:	f0 4f       	sbci	r31, 0xF0	; 240
    c2e4:	90 81       	ld	r25, Z
    c2e6:	88 0f       	add	r24, r24
    c2e8:	80 56       	subi	r24, 0x60	; 96
    c2ea:	28 2f       	mov	r18, r24
    c2ec:	22 0f       	add	r18, r18
    c2ee:	22 0f       	add	r18, r18
    c2f0:	82 0f       	add	r24, r18
    c2f2:	90 53       	subi	r25, 0x30	; 48
    c2f4:	89 0f       	add	r24, r25
    c2f6:	80 93 f3 13 	sts	0x13F3, r24	; 0x8013f3 <_sRuble_Parameters+0x45>
		_sRuble_Parameters.Update_Local_Date[0] = ((_gPub_Buff[i+14]-0X30)*10) + (_gPub_Buff[i+15]-0X30);
    c2fa:	fe 01       	movw	r30, r28
    c2fc:	e2 52       	subi	r30, 0x22	; 34
    c2fe:	f0 4f       	sbci	r31, 0xF0	; 240
    c300:	80 81       	ld	r24, Z
    c302:	c1 52       	subi	r28, 0x21	; 33
    c304:	d0 4f       	sbci	r29, 0xF0	; 240
    c306:	98 81       	ld	r25, Y
    c308:	88 0f       	add	r24, r24
    c30a:	80 56       	subi	r24, 0x60	; 96
    c30c:	28 2f       	mov	r18, r24
    c30e:	22 0f       	add	r18, r18
    c310:	22 0f       	add	r18, r18
    c312:	82 0f       	add	r24, r18
    c314:	90 53       	subi	r25, 0x30	; 48
    c316:	89 0f       	add	r24, r25
    c318:	80 93 f2 13 	sts	0x13F2, r24	; 0x8013f2 <_sRuble_Parameters+0x44>
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    c31c:	e0 ed       	ldi	r30, 0xD0	; 208
    c31e:	ff e0       	ldi	r31, 0x0F	; 15
    c320:	df 01       	movw	r26, r30
    c322:	c7 01       	movw	r24, r14
    c324:	1d 92       	st	X+, r1
    c326:	01 97       	sbiw	r24, 0x01	; 1
    c328:	e9 f7       	brne	.-6      	; 0xc324 <_Z14Get_Local_Timev+0x250>
		
		
		_kSERAIL_MON_WRITE("my date : ");
    c32a:	65 e8       	ldi	r22, 0x85	; 133
    c32c:	70 e2       	ldi	r23, 0x20	; 32
    c32e:	86 ec       	ldi	r24, 0xC6	; 198
    c330:	94 e1       	ldi	r25, 0x14	; 20
    c332:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    c336:	4a e0       	ldi	r20, 0x0A	; 10
    c338:	50 e0       	ldi	r21, 0x00	; 0
    c33a:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    c33e:	86 ec       	ldi	r24, 0xC6	; 198
    c340:	94 e1       	ldi	r25, 0x14	; 20
    c342:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c346:	86 ec       	ldi	r24, 0xC6	; 198
    c348:	94 e1       	ldi	r25, 0x14	; 20
    c34a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my month : ");
    c34e:	69 e7       	ldi	r22, 0x79	; 121
    c350:	70 e2       	ldi	r23, 0x20	; 32
    c352:	86 ec       	ldi	r24, 0xC6	; 198
    c354:	94 e1       	ldi	r25, 0x14	; 20
    c356:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    c35a:	4a e0       	ldi	r20, 0x0A	; 10
    c35c:	50 e0       	ldi	r21, 0x00	; 0
    c35e:	60 91 f3 13 	lds	r22, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    c362:	86 ec       	ldi	r24, 0xC6	; 198
    c364:	94 e1       	ldi	r25, 0x14	; 20
    c366:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c36a:	86 ec       	ldi	r24, 0xC6	; 198
    c36c:	94 e1       	ldi	r25, 0x14	; 20
    c36e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my year : ");
    c372:	6e e6       	ldi	r22, 0x6E	; 110
    c374:	70 e2       	ldi	r23, 0x20	; 32
    c376:	86 ec       	ldi	r24, 0xC6	; 198
    c378:	94 e1       	ldi	r25, 0x14	; 20
    c37a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    c37e:	4a e0       	ldi	r20, 0x0A	; 10
    c380:	50 e0       	ldi	r21, 0x00	; 0
    c382:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    c386:	86 ec       	ldi	r24, 0xC6	; 198
    c388:	94 e1       	ldi	r25, 0x14	; 20
    c38a:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c38e:	86 ec       	ldi	r24, 0xC6	; 198
    c390:	94 e1       	ldi	r25, 0x14	; 20
    c392:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		
		if(_sRuble_Parameters.Update_Local_Time[0] > 23 || _sRuble_Parameters.Update_Local_Time[1] > 59 ||  _sRuble_Parameters.Update_Local_Time[2] > 59)
    c396:	80 91 ef 13 	lds	r24, 0x13EF	; 0x8013ef <_sRuble_Parameters+0x41>
    c39a:	88 31       	cpi	r24, 0x18	; 24
    c39c:	a8 f4       	brcc	.+42     	; 0xc3c8 <_Z14Get_Local_Timev+0x2f4>
    c39e:	80 91 f0 13 	lds	r24, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0x42>
    c3a2:	8c 33       	cpi	r24, 0x3C	; 60
    c3a4:	88 f4       	brcc	.+34     	; 0xc3c8 <_Z14Get_Local_Timev+0x2f4>
    c3a6:	80 91 f1 13 	lds	r24, 0x13F1	; 0x8013f1 <_sRuble_Parameters+0x43>
    c3aa:	8c 33       	cpi	r24, 0x3C	; 60
    c3ac:	68 f4       	brcc	.+26     	; 0xc3c8 <_Z14Get_Local_Timev+0x2f4>
		{
			return;
		}
		_sRuble_Parameters.Display_Update  |= _kTIME_UPDATE;
    c3ae:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    c3b2:	81 60       	ori	r24, 0x01	; 1
    c3b4:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
		
		if(_sRuble_Parameters.Update_Local_Date[2] != 70)
    c3b8:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    c3bc:	86 34       	cpi	r24, 0x46	; 70
    c3be:	21 f4       	brne	.+8      	; 0xc3c8 <_Z14Get_Local_Timev+0x2f4>

void Get_Local_Time(void)
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
    c3c0:	1f 5f       	subi	r17, 0xFF	; 255
    c3c2:	12 30       	cpi	r17, 0x02	; 2
    c3c4:	09 f0       	breq	.+2      	; 0xc3c8 <_Z14Get_Local_Timev+0x2f4>
    c3c6:	95 ce       	rjmp	.-726    	; 0xc0f2 <_Z14Get_Local_Timev+0x1e>
		if(_sRuble_Parameters.Update_Local_Date[2] != 70)
		{
			return;
		}
	}
}
    c3c8:	df 91       	pop	r29
    c3ca:	cf 91       	pop	r28
    c3cc:	1f 91       	pop	r17
    c3ce:	0f 91       	pop	r16
    c3d0:	ff 90       	pop	r15
    c3d2:	ef 90       	pop	r14
    c3d4:	bf 90       	pop	r11
    c3d6:	af 90       	pop	r10
    c3d8:	9f 90       	pop	r9
    c3da:	8f 90       	pop	r8
    c3dc:	08 95       	ret

0000c3de <_Z16Gsm_Gprs_Networkv>:


bool Gsm_Gprs_Network(void)
{
    c3de:	ff 92       	push	r15
    c3e0:	0f 93       	push	r16
    c3e2:	1f 93       	push	r17
    c3e4:	cf 93       	push	r28
    c3e6:	df 93       	push	r29
    c3e8:	cd b7       	in	r28, 0x3d	; 61
    c3ea:	de b7       	in	r29, 0x3e	; 62
    c3ec:	c4 56       	subi	r28, 0x64	; 100
    c3ee:	d1 09       	sbc	r29, r1
    c3f0:	0f b6       	in	r0, 0x3f	; 63
    c3f2:	f8 94       	cli
    c3f4:	de bf       	out	0x3e, r29	; 62
    c3f6:	0f be       	out	0x3f, r0	; 63
    c3f8:	cd bf       	out	0x3d, r28	; 61
	char temp_data[100];
	unsigned char check_sim;
	/***************************************** wait for the netwrok *******************************************/ 
	check_sim = 0;
	if (_kIS_GSM_CONNECTED())
    c3fa:	2a d7       	rcall	.+3668   	; 0xd250 <_Z20Check_Gsm_Connectionv>
    c3fc:	f8 2e       	mov	r15, r24
    c3fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c402:	ff 20       	and	r15, r15
    c404:	09 f4       	brne	.+2      	; 0xc408 <_Z16Gsm_Gprs_Networkv+0x2a>
    c406:	bf c0       	rjmp	.+382    	; 0xc586 <_Z16Gsm_Gprs_Networkv+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c408:	81 30       	cpi	r24, 0x01	; 1
    c40a:	51 f4       	brne	.+20     	; 0xc420 <_Z16Gsm_Gprs_Networkv+0x42>
		{
			_kSERAIL_MON_WRITE("Connected to gsm/GPRS network 0");                /* for debugging purpose */
    c40c:	6e e4       	ldi	r22, 0x4E	; 78
    c40e:	70 e2       	ldi	r23, 0x20	; 32
    c410:	86 ec       	ldi	r24, 0xC6	; 198
    c412:	94 e1       	ldi	r25, 0x14	; 20
    c414:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c418:	86 ec       	ldi	r24, 0xC6	; 198
    c41a:	94 e1       	ldi	r25, 0x14	; 20
    c41c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		memset(temp_data,0,sizeof(temp_data));
    c420:	8e 01       	movw	r16, r28
    c422:	0f 5f       	subi	r16, 0xFF	; 255
    c424:	1f 4f       	sbci	r17, 0xFF	; 255
    c426:	84 e6       	ldi	r24, 0x64	; 100
    c428:	f8 01       	movw	r30, r16
    c42a:	11 92       	st	Z+, r1
    c42c:	8a 95       	dec	r24
    c42e:	e9 f7       	brne	.-6      	; 0xc42a <_Z16Gsm_Gprs_Networkv+0x4c>
		Get_Operator_Name(temp_data);
    c430:	c8 01       	movw	r24, r16
    c432:	c9 d7       	rcall	.+3986   	; 0xd3c6 <_Z17Get_Operator_NamePc>
		
		
		if(strstr(temp_data,"Vod") != 0 || strstr(temp_data,"Vi In") != 0)
    c434:	64 e3       	ldi	r22, 0x34	; 52
    c436:	73 e0       	ldi	r23, 0x03	; 3
    c438:	c8 01       	movw	r24, r16
    c43a:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    c43e:	89 2b       	or	r24, r25
    c440:	39 f4       	brne	.+14     	; 0xc450 <_Z16Gsm_Gprs_Networkv+0x72>
    c442:	68 e3       	ldi	r22, 0x38	; 56
    c444:	73 e0       	ldi	r23, 0x03	; 3
    c446:	c8 01       	movw	r24, r16
    c448:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    c44c:	89 2b       	or	r24, r25
    c44e:	49 f0       	breq	.+18     	; 0xc462 <_Z16Gsm_Gprs_Networkv+0x84>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"www"/*_sSim_APNs.Vodafone*/);
    c450:	6e e3       	ldi	r22, 0x3E	; 62
    c452:	73 e0       	ldi	r23, 0x03	; 3
    c454:	85 ea       	ldi	r24, 0xA5	; 165
    c456:	9d e0       	ldi	r25, 0x0D	; 13
    c458:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
			_kSERAIL_MON_WRITE("Vodafone");               
    c45c:	65 e4       	ldi	r22, 0x45	; 69
    c45e:	70 e2       	ldi	r23, 0x20	; 32
    c460:	2d c0       	rjmp	.+90     	; 0xc4bc <_Z16Gsm_Gprs_Networkv+0xde>
			_kSERIAL_MON_CLEAR();
			check_sim = 1;
		}
		
		else if (strstr(temp_data,"Air") != 0 || strstr(temp_data,"air") != 0)
    c462:	62 e4       	ldi	r22, 0x42	; 66
    c464:	73 e0       	ldi	r23, 0x03	; 3
    c466:	c8 01       	movw	r24, r16
    c468:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    c46c:	89 2b       	or	r24, r25
    c46e:	39 f4       	brne	.+14     	; 0xc47e <_Z16Gsm_Gprs_Networkv+0xa0>
    c470:	66 e4       	ldi	r22, 0x46	; 70
    c472:	73 e0       	ldi	r23, 0x03	; 3
    c474:	c8 01       	movw	r24, r16
    c476:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    c47a:	89 2b       	or	r24, r25
    c47c:	49 f0       	breq	.+18     	; 0xc490 <_Z16Gsm_Gprs_Networkv+0xb2>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"airtelgprs.com");
    c47e:	6a e4       	ldi	r22, 0x4A	; 74
    c480:	73 e0       	ldi	r23, 0x03	; 3
    c482:	85 ea       	ldi	r24, 0xA5	; 165
    c484:	9d e0       	ldi	r25, 0x0D	; 13
    c486:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
			_kSERAIL_MON_WRITE("Airtel");
    c48a:	6e e3       	ldi	r22, 0x3E	; 62
    c48c:	70 e2       	ldi	r23, 0x20	; 32
    c48e:	26 c0       	rjmp	.+76     	; 0xc4dc <_Z16Gsm_Gprs_Networkv+0xfe>
			/*strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,_sSim_APNs.BSNL);
			_kSERAIL_MON_WRITE("BSNL");               
			_kSERIAL_MON_CLEAR();
		}*/
		
		else if(strstr(temp_data,"jio") != 0  || strstr(temp_data,"Jio")!=0)
    c490:	69 e5       	ldi	r22, 0x59	; 89
    c492:	73 e0       	ldi	r23, 0x03	; 3
    c494:	c8 01       	movw	r24, r16
    c496:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    c49a:	89 2b       	or	r24, r25
    c49c:	39 f4       	brne	.+14     	; 0xc4ac <_Z16Gsm_Gprs_Networkv+0xce>
    c49e:	6d e5       	ldi	r22, 0x5D	; 93
    c4a0:	73 e0       	ldi	r23, 0x03	; 3
    c4a2:	c8 01       	movw	r24, r16
    c4a4:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    c4a8:	89 2b       	or	r24, r25
    c4aa:	b1 f0       	breq	.+44     	; 0xc4d8 <_Z16Gsm_Gprs_Networkv+0xfa>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"jionet"/*_sSim_APNs.Jio*/);
    c4ac:	61 e6       	ldi	r22, 0x61	; 97
    c4ae:	73 e0       	ldi	r23, 0x03	; 3
    c4b0:	85 ea       	ldi	r24, 0xA5	; 165
    c4b2:	9d e0       	ldi	r25, 0x0D	; 13
    c4b4:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
			_kSERAIL_MON_WRITE("jio");                /* for debugging purpose */
    c4b8:	6a e3       	ldi	r22, 0x3A	; 58
    c4ba:	70 e2       	ldi	r23, 0x20	; 32
    c4bc:	86 ec       	ldi	r24, 0xC6	; 198
    c4be:	94 e1       	ldi	r25, 0x14	; 20
    c4c0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c4c4:	86 ec       	ldi	r24, 0xC6	; 198
    c4c6:	94 e1       	ldi	r25, 0x14	; 20
    c4c8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			//return 0;
		}		
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
    c4cc:	85 ea       	ldi	r24, 0xA5	; 165
    c4ce:	9d e0       	ldi	r25, 0x0D	; 13
    c4d0:	97 d7       	rcall	.+3886   	; 0xd400 <_Z12Gprs_ConnectPc>
    c4d2:	81 11       	cpse	r24, r1
    c4d4:	48 c0       	rjmp	.+144    	; 0xc566 <_Z16Gsm_Gprs_Networkv+0x188>
    c4d6:	0b c0       	rjmp	.+22     	; 0xc4ee <_Z16Gsm_Gprs_Networkv+0x110>
			check_sim = 1;
		}
		
		else
		{
			_kSERAIL_MON_WRITE("Can't get opeartor Name");                /* for debugging purpose */
    c4d8:	62 e2       	ldi	r22, 0x22	; 34
    c4da:	70 e2       	ldi	r23, 0x20	; 32
    c4dc:	86 ec       	ldi	r24, 0xC6	; 198
    c4de:	94 e1       	ldi	r25, 0x14	; 20
    c4e0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c4e4:	86 ec       	ldi	r24, 0xC6	; 198
    c4e6:	94 e1       	ldi	r25, 0x14	; 20
    c4e8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    c4ec:	3c c0       	rjmp	.+120    	; 0xc566 <_Z16Gsm_Gprs_Networkv+0x188>
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
			{
				_kSERAIL_MON_WRITE("Fail to Connect GPRS");                /* for debugging purpose */
    c4ee:	6d e0       	ldi	r22, 0x0D	; 13
    c4f0:	70 e2       	ldi	r23, 0x20	; 32
    c4f2:	86 ec       	ldi	r24, 0xC6	; 198
    c4f4:	94 e1       	ldi	r25, 0x14	; 20
    c4f6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    c4fa:	86 ec       	ldi	r24, 0xC6	; 198
    c4fc:	94 e1       	ldi	r25, 0x14	; 20
    c4fe:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				Reset_Buffer();
    c502:	56 d5       	rcall	.+2732   	; 0xcfb0 <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c504:	61 e0       	ldi	r22, 0x01	; 1
    c506:	70 e2       	ldi	r23, 0x20	; 32
    c508:	83 e8       	ldi	r24, 0x83	; 131
    c50a:	96 e1       	ldi	r25, 0x16	; 22
    c50c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
    c510:	01 e0       	ldi	r16, 0x01	; 1
    c512:	20 e1       	ldi	r18, 0x10	; 16
    c514:	37 e2       	ldi	r19, 0x27	; 39
    c516:	40 e0       	ldi	r20, 0x00	; 0
    c518:	50 e0       	ldi	r21, 0x00	; 0
    c51a:	68 e6       	ldi	r22, 0x68	; 104
    c51c:	73 e0       	ldi	r23, 0x03	; 3
    c51e:	80 e0       	ldi	r24, 0x00	; 0
    c520:	90 e0       	ldi	r25, 0x00	; 0
    c522:	ab d5       	rcall	.+2902   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
				_kDELAY_MS(10000);
    c524:	60 e1       	ldi	r22, 0x10	; 16
    c526:	77 e2       	ldi	r23, 0x27	; 39
    c528:	80 e0       	ldi	r24, 0x00	; 0
    c52a:	90 e0       	ldi	r25, 0x00	; 0
    c52c:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
				if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c530:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
    c534:	81 30       	cpi	r24, 0x01	; 1
    c536:	31 f0       	breq	.+12     	; 0xc544 <_Z16Gsm_Gprs_Networkv+0x166>
				{
					_kDELAY_MS(120000);
    c538:	60 ec       	ldi	r22, 0xC0	; 192
    c53a:	74 ed       	ldi	r23, 0xD4	; 212
    c53c:	81 e0       	ldi	r24, 0x01	; 1
    c53e:	90 e0       	ldi	r25, 0x00	; 0
    c540:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
				}
				Reset_Buffer();
    c544:	35 d5       	rcall	.+2666   	; 0xcfb0 <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("ATE0"));
    c546:	6c ef       	ldi	r22, 0xFC	; 252
    c548:	7f e1       	ldi	r23, 0x1F	; 31
    c54a:	83 e8       	ldi	r24, 0x83	; 131
    c54c:	96 e1       	ldi	r25, 0x16	; 22
    c54e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c552:	02 e0       	ldi	r16, 0x02	; 2
    c554:	28 eb       	ldi	r18, 0xB8	; 184
    c556:	3b e0       	ldi	r19, 0x0B	; 11
    c558:	40 e0       	ldi	r20, 0x00	; 0
    c55a:	50 e0       	ldi	r21, 0x00	; 0
    c55c:	6e e1       	ldi	r22, 0x1E	; 30
    c55e:	73 e0       	ldi	r23, 0x03	; 3
    c560:	80 e0       	ldi	r24, 0x00	; 0
    c562:	90 e0       	ldi	r25, 0x00	; 0
    c564:	8a d5       	rcall	.+2836   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
				//return 0;
			}
		}


		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c566:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c56a:	81 30       	cpi	r24, 0x01	; 1
    c56c:	09 f0       	breq	.+2      	; 0xc570 <_Z16Gsm_Gprs_Networkv+0x192>
    c56e:	49 c0       	rjmp	.+146    	; 0xc602 <_Z16Gsm_Gprs_Networkv+0x224>
		{			
			_kSERAIL_MON_WRITE("Succs Connected to GPRS network");                /* for debugging purpose */
    c570:	6c ed       	ldi	r22, 0xDC	; 220
    c572:	7f e1       	ldi	r23, 0x1F	; 31
    c574:	86 ec       	ldi	r24, 0xC6	; 198
    c576:	94 e1       	ldi	r25, 0x14	; 20
    c578:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c57c:	86 ec       	ldi	r24, 0xC6	; 198
    c57e:	94 e1       	ldi	r25, 0x14	; 20
    c580:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    c584:	3e c0       	rjmp	.+124    	; 0xc602 <_Z16Gsm_Gprs_Networkv+0x224>
		return 1;
		
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c586:	81 30       	cpi	r24, 0x01	; 1
    c588:	51 f4       	brne	.+20     	; 0xc59e <_Z16Gsm_Gprs_Networkv+0x1c0>
		{
			_kSERAIL_MON_WRITE("fail to connect gsm/GPRS network");                /* for debugging purpose */
    c58a:	6b eb       	ldi	r22, 0xBB	; 187
    c58c:	7f e1       	ldi	r23, 0x1F	; 31
    c58e:	86 ec       	ldi	r24, 0xC6	; 198
    c590:	94 e1       	ldi	r25, 0x14	; 20
    c592:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c596:	86 ec       	ldi	r24, 0xC6	; 198
    c598:	94 e1       	ldi	r25, 0x14	; 20
    c59a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		Reset_Buffer();
    c59e:	08 d5       	rcall	.+2576   	; 0xcfb0 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c5a0:	6f ea       	ldi	r22, 0xAF	; 175
    c5a2:	7f e1       	ldi	r23, 0x1F	; 31
    c5a4:	83 e8       	ldi	r24, 0x83	; 131
    c5a6:	96 e1       	ldi	r25, 0x16	; 22
    c5a8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,10000,1);
    c5ac:	01 e0       	ldi	r16, 0x01	; 1
    c5ae:	20 e1       	ldi	r18, 0x10	; 16
    c5b0:	37 e2       	ldi	r19, 0x27	; 39
    c5b2:	40 e0       	ldi	r20, 0x00	; 0
    c5b4:	50 e0       	ldi	r21, 0x00	; 0
    c5b6:	6e e1       	ldi	r22, 0x1E	; 30
    c5b8:	73 e0       	ldi	r23, 0x03	; 3
    c5ba:	80 e0       	ldi	r24, 0x00	; 0
    c5bc:	90 e0       	ldi	r25, 0x00	; 0
    c5be:	5d d5       	rcall	.+2746   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
		_kDELAY_MS(10000);
    c5c0:	60 e1       	ldi	r22, 0x10	; 16
    c5c2:	77 e2       	ldi	r23, 0x27	; 39
    c5c4:	80 e0       	ldi	r24, 0x00	; 0
    c5c6:	90 e0       	ldi	r25, 0x00	; 0
    c5c8:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c5cc:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
    c5d0:	81 30       	cpi	r24, 0x01	; 1
		{
			_kDELAY_MS(120000);
    c5d2:	31 f0       	breq	.+12     	; 0xc5e0 <_Z16Gsm_Gprs_Networkv+0x202>
    c5d4:	60 ec       	ldi	r22, 0xC0	; 192
    c5d6:	74 ed       	ldi	r23, 0xD4	; 212
    c5d8:	81 e0       	ldi	r24, 0x01	; 1
    c5da:	90 e0       	ldi	r25, 0x00	; 0
    c5dc:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
		}
		Reset_Buffer();
    c5e0:	e7 d4       	rcall	.+2510   	; 0xcfb0 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("ATE0"));
    c5e2:	6a ea       	ldi	r22, 0xAA	; 170
    c5e4:	7f e1       	ldi	r23, 0x1F	; 31
    c5e6:	83 e8       	ldi	r24, 0x83	; 131
    c5e8:	96 e1       	ldi	r25, 0x16	; 22
    c5ea:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c5ee:	02 e0       	ldi	r16, 0x02	; 2
    c5f0:	28 eb       	ldi	r18, 0xB8	; 184
    c5f2:	3b e0       	ldi	r19, 0x0B	; 11
    c5f4:	40 e0       	ldi	r20, 0x00	; 0
    c5f6:	50 e0       	ldi	r21, 0x00	; 0
    c5f8:	6e e1       	ldi	r22, 0x1E	; 30
    c5fa:	73 e0       	ldi	r23, 0x03	; 3
    c5fc:	80 e0       	ldi	r24, 0x00	; 0
    c5fe:	90 e0       	ldi	r25, 0x00	; 0
    c600:	3c d5       	rcall	.+2680   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
		return 0;
	}
	
}
    c602:	8f 2d       	mov	r24, r15
    c604:	cc 59       	subi	r28, 0x9C	; 156
    c606:	df 4f       	sbci	r29, 0xFF	; 255
    c608:	0f b6       	in	r0, 0x3f	; 63
    c60a:	f8 94       	cli
    c60c:	de bf       	out	0x3e, r29	; 62
    c60e:	0f be       	out	0x3f, r0	; 63
    c610:	cd bf       	out	0x3d, r28	; 61
    c612:	df 91       	pop	r29
    c614:	cf 91       	pop	r28
    c616:	1f 91       	pop	r17
    c618:	0f 91       	pop	r16
    c61a:	ff 90       	pop	r15
    c61c:	08 95       	ret

0000c61e <__vector_36>:
		Serial.println(response);
		_kSERIAL_MON_CLEAR();
	}
	sprintf((char *)_gRecvd_Data,"%s",(char *)response);
	return answer;
}
    c61e:	1f 92       	push	r1
    c620:	0f 92       	push	r0
    c622:	0f b6       	in	r0, 0x3f	; 63
    c624:	0f 92       	push	r0
    c626:	11 24       	eor	r1, r1
    c628:	0b b6       	in	r0, 0x3b	; 59
    c62a:	0f 92       	push	r0
    c62c:	2f 93       	push	r18
    c62e:	3f 93       	push	r19
    c630:	8f 93       	push	r24
    c632:	9f 93       	push	r25
    c634:	ef 93       	push	r30
    c636:	ff 93       	push	r31
    c638:	80 91 79 0c 	lds	r24, 0x0C79	; 0x800c79 <int_counter>
    c63c:	90 91 7a 0c 	lds	r25, 0x0C7A	; 0x800c7a <int_counter+0x1>
    c640:	84 3d       	cpi	r24, 0xD4	; 212
    c642:	93 40       	sbci	r25, 0x03	; 3
    c644:	a0 f4       	brcc	.+40     	; 0xc66e <__vector_36+0x50>
    c646:	80 91 79 0c 	lds	r24, 0x0C79	; 0x800c79 <int_counter>
    c64a:	90 91 7a 0c 	lds	r25, 0x0C7A	; 0x800c7a <int_counter+0x1>
    c64e:	9c 01       	movw	r18, r24
    c650:	2f 5f       	subi	r18, 0xFF	; 255
    c652:	3f 4f       	sbci	r19, 0xFF	; 255
    c654:	30 93 7a 0c 	sts	0x0C7A, r19	; 0x800c7a <int_counter+0x1>
    c658:	20 93 79 0c 	sts	0x0C79, r18	; 0x800c79 <int_counter>
    c65c:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    c660:	fc 01       	movw	r30, r24
    c662:	e0 53       	subi	r30, 0x30	; 48
    c664:	f0 4f       	sbci	r31, 0xF0	; 240
    c666:	20 83       	st	Z, r18
    c668:	81 e0       	ldi	r24, 0x01	; 1
    c66a:	80 93 77 0c 	sts	0x0C77, r24	; 0x800c77 <rx_flag>
    c66e:	ff 91       	pop	r31
    c670:	ef 91       	pop	r30
    c672:	9f 91       	pop	r25
    c674:	8f 91       	pop	r24
    c676:	3f 91       	pop	r19
    c678:	2f 91       	pop	r18
    c67a:	0f 90       	pop	r0
    c67c:	0b be       	out	0x3b, r0	; 59
    c67e:	0f 90       	pop	r0
    c680:	0f be       	out	0x3f, r0	; 63
    c682:	0f 90       	pop	r0
    c684:	1f 90       	pop	r1
    c686:	18 95       	reti

0000c688 <__vector_12>:
    c688:	1f 92       	push	r1
    c68a:	0f 92       	push	r0
    c68c:	0f b6       	in	r0, 0x3f	; 63
    c68e:	0f 92       	push	r0
    c690:	11 24       	eor	r1, r1
    c692:	0b b6       	in	r0, 0x3b	; 59
    c694:	0f 92       	push	r0
    c696:	2f 93       	push	r18
    c698:	8f 93       	push	r24
    c69a:	9f 93       	push	r25
    c69c:	ef 93       	push	r30
    c69e:	ff 93       	push	r31
    c6a0:	e7 e0       	ldi	r30, 0x07	; 7
    c6a2:	f1 e0       	ldi	r31, 0x01	; 1
    c6a4:	80 81       	ld	r24, Z
    c6a6:	80 64       	ori	r24, 0x40	; 64
    c6a8:	80 83       	st	Z, r24
    c6aa:	e8 e0       	ldi	r30, 0x08	; 8
    c6ac:	f1 e0       	ldi	r31, 0x01	; 1
    c6ae:	80 81       	ld	r24, Z
    c6b0:	8f 7b       	andi	r24, 0xBF	; 191
    c6b2:	80 83       	st	Z, r24
    c6b4:	2f ef       	ldi	r18, 0xFF	; 255
    c6b6:	83 ed       	ldi	r24, 0xD3	; 211
    c6b8:	90 e3       	ldi	r25, 0x30	; 48
    c6ba:	21 50       	subi	r18, 0x01	; 1
    c6bc:	80 40       	sbci	r24, 0x00	; 0
    c6be:	90 40       	sbci	r25, 0x00	; 0
    c6c0:	e1 f7       	brne	.-8      	; 0xc6ba <__vector_12+0x32>
    c6c2:	00 c0       	rjmp	.+0      	; 0xc6c4 <__vector_12+0x3c>
    c6c4:	00 00       	nop
    c6c6:	80 81       	ld	r24, Z
    c6c8:	80 64       	ori	r24, 0x40	; 64
    c6ca:	80 83       	st	Z, r24
    c6cc:	0f b6       	in	r0, 0x3f	; 63
    c6ce:	f8 94       	cli
    c6d0:	a8 95       	wdr
    c6d2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c6d6:	88 61       	ori	r24, 0x18	; 24
    c6d8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c6dc:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c6e0:	0f be       	out	0x3f, r0	; 63
    c6e2:	ff 91       	pop	r31
    c6e4:	ef 91       	pop	r30
    c6e6:	9f 91       	pop	r25
    c6e8:	8f 91       	pop	r24
    c6ea:	2f 91       	pop	r18
    c6ec:	0f 90       	pop	r0
    c6ee:	0b be       	out	0x3b, r0	; 59
    c6f0:	0f 90       	pop	r0
    c6f2:	0f be       	out	0x3f, r0	; 63
    c6f4:	0f 90       	pop	r0
    c6f6:	1f 90       	pop	r1
    c6f8:	18 95       	reti

0000c6fa <_Z20Timer1_Interrupt_Intv>:
    c6fa:	f8 94       	cli
    c6fc:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    c700:	e1 e8       	ldi	r30, 0x81	; 129
    c702:	f0 e0       	ldi	r31, 0x00	; 0
    c704:	10 82       	st	Z, r1
    c706:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    c70a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    c70e:	88 e0       	ldi	r24, 0x08	; 8
    c710:	9d e3       	ldi	r25, 0x3D	; 61
    c712:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    c716:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    c71a:	80 81       	ld	r24, Z
    c71c:	88 60       	ori	r24, 0x08	; 8
    c71e:	80 83       	st	Z, r24
    c720:	80 81       	ld	r24, Z
    c722:	85 60       	ori	r24, 0x05	; 5
    c724:	80 83       	st	Z, r24
    c726:	ef e6       	ldi	r30, 0x6F	; 111
    c728:	f0 e0       	ldi	r31, 0x00	; 0
    c72a:	80 81       	ld	r24, Z
    c72c:	82 60       	ori	r24, 0x02	; 2
    c72e:	80 83       	st	Z, r24
    c730:	78 94       	sei
    c732:	08 95       	ret

0000c734 <__vector_17>:
    c734:	1f 92       	push	r1
    c736:	0f 92       	push	r0
    c738:	0f b6       	in	r0, 0x3f	; 63
    c73a:	0f 92       	push	r0
    c73c:	11 24       	eor	r1, r1
    c73e:	0b b6       	in	r0, 0x3b	; 59
    c740:	0f 92       	push	r0
    c742:	2f 93       	push	r18
    c744:	3f 93       	push	r19
    c746:	4f 93       	push	r20
    c748:	5f 93       	push	r21
    c74a:	6f 93       	push	r22
    c74c:	7f 93       	push	r23
    c74e:	8f 93       	push	r24
    c750:	9f 93       	push	r25
    c752:	af 93       	push	r26
    c754:	bf 93       	push	r27
    c756:	ef 93       	push	r30
    c758:	ff 93       	push	r31
    c75a:	80 91 ec 0c 	lds	r24, 0x0CEC	; 0x800cec <_gfault_Occure>
    c75e:	90 91 ed 0c 	lds	r25, 0x0CED	; 0x800ced <_gfault_Occure+0x1>
    c762:	00 97       	sbiw	r24, 0x00	; 0
    c764:	29 f0       	breq	.+10     	; 0xc770 <__vector_17+0x3c>
    c766:	01 97       	sbiw	r24, 0x01	; 1
    c768:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    c76c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
    c770:	81 e0       	ldi	r24, 0x01	; 1
    c772:	90 e0       	ldi	r25, 0x00	; 0
    c774:	a0 e0       	ldi	r26, 0x00	; 0
    c776:	b0 e0       	ldi	r27, 0x00	; 0
    c778:	80 93 cf 0c 	sts	0x0CCF, r24	; 0x800ccf <_g_1Sec_Time>
    c77c:	90 93 d0 0c 	sts	0x0CD0, r25	; 0x800cd0 <_g_1Sec_Time+0x1>
    c780:	a0 93 d1 0c 	sts	0x0CD1, r26	; 0x800cd1 <_g_1Sec_Time+0x2>
    c784:	b0 93 d2 0c 	sts	0x0CD2, r27	; 0x800cd2 <_g_1Sec_Time+0x3>
    c788:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c78c:	8e 33       	cpi	r24, 0x3E	; 62
    c78e:	28 f4       	brcc	.+10     	; 0xc79a <__vector_17+0x66>
    c790:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c794:	8f 5f       	subi	r24, 0xFF	; 255
    c796:	80 93 e4 0c 	sts	0x0CE4, r24	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c79a:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c79e:	8b 34       	cpi	r24, 0x4B	; 75
    c7a0:	28 f4       	brcc	.+10     	; 0xc7ac <__vector_17+0x78>
    c7a2:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c7a6:	8f 5f       	subi	r24, 0xFF	; 255
    c7a8:	80 93 e5 0c 	sts	0x0CE5, r24	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c7ac:	80 91 c8 13 	lds	r24, 0x13C8	; 0x8013c8 <_sRuble_Parameters+0x1a>
    c7b0:	90 91 c9 13 	lds	r25, 0x13C9	; 0x8013c9 <_sRuble_Parameters+0x1b>
    c7b4:	01 96       	adiw	r24, 0x01	; 1
    c7b6:	90 93 c9 13 	sts	0x13C9, r25	; 0x8013c9 <_sRuble_Parameters+0x1b>
    c7ba:	80 93 c8 13 	sts	0x13C8, r24	; 0x8013c8 <_sRuble_Parameters+0x1a>
    c7be:	80 91 73 0c 	lds	r24, 0x0C73	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c7c2:	8f 5f       	subi	r24, 0xFF	; 255
    c7c4:	85 30       	cpi	r24, 0x05	; 5
    c7c6:	18 f4       	brcc	.+6      	; 0xc7ce <__vector_17+0x9a>
    c7c8:	80 93 73 0c 	sts	0x0C73, r24	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c7cc:	05 c0       	rjmp	.+10     	; 0xc7d8 <__vector_17+0xa4>
    c7ce:	10 92 73 0c 	sts	0x0C73, r1	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c7d2:	81 e0       	ldi	r24, 0x01	; 1
    c7d4:	80 93 6d 14 	sts	0x146D, r24	; 0x80146d <_sRuble_Parameters+0xbf>
    c7d8:	80 91 72 0c 	lds	r24, 0x0C72	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c7dc:	8f 5f       	subi	r24, 0xFF	; 255
    c7de:	8a 30       	cpi	r24, 0x0A	; 10
    c7e0:	18 f4       	brcc	.+6      	; 0xc7e8 <__vector_17+0xb4>
    c7e2:	80 93 72 0c 	sts	0x0C72, r24	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c7e6:	08 c0       	rjmp	.+16     	; 0xc7f8 <__vector_17+0xc4>
    c7e8:	10 92 72 0c 	sts	0x0C72, r1	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c7ec:	81 e0       	ldi	r24, 0x01	; 1
    c7ee:	90 e0       	ldi	r25, 0x00	; 0
    c7f0:	90 93 cb 13 	sts	0x13CB, r25	; 0x8013cb <_sRuble_Parameters+0x1d>
    c7f4:	80 93 ca 13 	sts	0x13CA, r24	; 0x8013ca <_sRuble_Parameters+0x1c>
    c7f8:	80 91 78 14 	lds	r24, 0x1478	; 0x801478 <_sRuble_Parameters+0xca>
    c7fc:	88 23       	and	r24, r24
    c7fe:	19 f0       	breq	.+6      	; 0xc806 <__vector_17+0xd2>
    c800:	81 50       	subi	r24, 0x01	; 1
    c802:	80 93 78 14 	sts	0x1478, r24	; 0x801478 <_sRuble_Parameters+0xca>
    c806:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c80a:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c80e:	89 2b       	or	r24, r25
    c810:	49 f0       	breq	.+18     	; 0xc824 <__vector_17+0xf0>
    c812:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c816:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c81a:	01 97       	sbiw	r24, 0x01	; 1
    c81c:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    c820:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    c824:	80 91 70 0c 	lds	r24, 0x0C70	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c828:	90 91 71 0c 	lds	r25, 0x0C71	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c82c:	01 96       	adiw	r24, 0x01	; 1
    c82e:	8d 32       	cpi	r24, 0x2D	; 45
    c830:	21 e0       	ldi	r18, 0x01	; 1
    c832:	92 07       	cpc	r25, r18
    c834:	28 f4       	brcc	.+10     	; 0xc840 <__vector_17+0x10c>
    c836:	90 93 71 0c 	sts	0x0C71, r25	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c83a:	80 93 70 0c 	sts	0x0C70, r24	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c83e:	0d c0       	rjmp	.+26     	; 0xc85a <__vector_17+0x126>
    c840:	10 92 71 0c 	sts	0x0C71, r1	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c844:	10 92 70 0c 	sts	0x0C70, r1	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c848:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    c84c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    c850:	84 60       	ori	r24, 0x04	; 4
    c852:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    c856:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    c85a:	e8 ee       	ldi	r30, 0xE8	; 232
    c85c:	fd e0       	ldi	r31, 0x0D	; 13
    c85e:	22 e6       	ldi	r18, 0x62	; 98
    c860:	3f e0       	ldi	r19, 0x0F	; 15
    c862:	83 81       	ldd	r24, Z+3	; 0x03
    c864:	94 81       	ldd	r25, Z+4	; 0x04
    c866:	00 97       	sbiw	r24, 0x00	; 0
    c868:	19 f0       	breq	.+6      	; 0xc870 <__vector_17+0x13c>
    c86a:	01 97       	sbiw	r24, 0x01	; 1
    c86c:	94 83       	std	Z+4, r25	; 0x04
    c86e:	83 83       	std	Z+3, r24	; 0x03
    c870:	7b 96       	adiw	r30, 0x1b	; 27
    c872:	2e 17       	cp	r18, r30
    c874:	3f 07       	cpc	r19, r31
    c876:	a9 f7       	brne	.-22     	; 0xc862 <__vector_17+0x12e>
    c878:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    c87c:	81 30       	cpi	r24, 0x01	; 1
    c87e:	59 f4       	brne	.+22     	; 0xc896 <__vector_17+0x162>
    c880:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    c884:	88 23       	and	r24, r24
    c886:	09 f4       	brne	.+2      	; 0xc88a <__vector_17+0x156>
    c888:	75 c0       	rjmp	.+234    	; 0xc974 <__vector_17+0x240>
    c88a:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    c88e:	81 50       	subi	r24, 0x01	; 1
    c890:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
    c894:	6f c0       	rjmp	.+222    	; 0xc974 <__vector_17+0x240>
    c896:	20 91 a1 14 	lds	r18, 0x14A1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    c89a:	80 91 cc 13 	lds	r24, 0x13CC	; 0x8013cc <_sRuble_Parameters+0x1e>
    c89e:	90 91 cd 13 	lds	r25, 0x13CD	; 0x8013cd <_sRuble_Parameters+0x1f>
    c8a2:	22 23       	and	r18, r18
    c8a4:	e1 f1       	breq	.+120    	; 0xc91e <__vector_17+0x1ea>
    c8a6:	20 91 97 09 	lds	r18, 0x0997	; 0x800997 <_sSchedules+0x79>
    c8aa:	21 30       	cpi	r18, 0x01	; 1
    c8ac:	79 f4       	brne	.+30     	; 0xc8cc <__vector_17+0x198>
    c8ae:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    c8b2:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    c8b6:	2f 5f       	subi	r18, 0xFF	; 255
    c8b8:	3f 4f       	sbci	r19, 0xFF	; 255
    c8ba:	30 93 27 09 	sts	0x0927, r19	; 0x800927 <_sSchedules+0x9>
    c8be:	20 93 26 09 	sts	0x0926, r18	; 0x800926 <_sSchedules+0x8>
    c8c2:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    c8c6:	2f 5f       	subi	r18, 0xFF	; 255
    c8c8:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <_sSchedules+0x2b8>
    c8cc:	20 91 a5 14 	lds	r18, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    c8d0:	30 91 a6 14 	lds	r19, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    c8d4:	23 2b       	or	r18, r19
    c8d6:	a1 f4       	brne	.+40     	; 0xc900 <__vector_17+0x1cc>
    c8d8:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    c8dc:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    c8e0:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    c8e4:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    c8e8:	4f 5f       	subi	r20, 0xFF	; 255
    c8ea:	5f 4f       	sbci	r21, 0xFF	; 255
    c8ec:	6f 4f       	sbci	r22, 0xFF	; 255
    c8ee:	7f 4f       	sbci	r23, 0xFF	; 255
    c8f0:	40 93 9b 14 	sts	0x149B, r20	; 0x80149b <_sRuble_Parameters+0xed>
    c8f4:	50 93 9c 14 	sts	0x149C, r21	; 0x80149c <_sRuble_Parameters+0xee>
    c8f8:	60 93 9d 14 	sts	0x149D, r22	; 0x80149d <_sRuble_Parameters+0xef>
    c8fc:	70 93 9e 14 	sts	0x149E, r23	; 0x80149e <_sRuble_Parameters+0xf0>
    c900:	00 97       	sbiw	r24, 0x00	; 0
    c902:	79 f4       	brne	.+30     	; 0xc922 <__vector_17+0x1ee>
    c904:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    c908:	30 91 c5 13 	lds	r19, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
    c90c:	21 15       	cp	r18, r1
    c90e:	31 05       	cpc	r19, r1
    c910:	69 f0       	breq	.+26     	; 0xc92c <__vector_17+0x1f8>
    c912:	21 50       	subi	r18, 0x01	; 1
    c914:	31 09       	sbc	r19, r1
    c916:	30 93 c5 13 	sts	0x13C5, r19	; 0x8013c5 <_sRuble_Parameters+0x17>
    c91a:	20 93 c4 13 	sts	0x13C4, r18	; 0x8013c4 <_sRuble_Parameters+0x16>
    c91e:	00 97       	sbiw	r24, 0x00	; 0
    c920:	29 f0       	breq	.+10     	; 0xc92c <__vector_17+0x1f8>
    c922:	01 97       	sbiw	r24, 0x01	; 1
    c924:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
    c928:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
    c92c:	80 e0       	ldi	r24, 0x00	; 0
    c92e:	90 e0       	ldi	r25, 0x00	; 0
    c930:	9c 01       	movw	r18, r24
    c932:	22 5e       	subi	r18, 0xE2	; 226
    c934:	36 4f       	sbci	r19, 0xF6	; 246
    c936:	f9 01       	movw	r30, r18
    c938:	ed 5a       	subi	r30, 0xAD	; 173
    c93a:	fd 4f       	sbci	r31, 0xFD	; 253
    c93c:	40 81       	ld	r20, Z
    c93e:	44 23       	and	r20, r20
    c940:	19 f0       	breq	.+6      	; 0xc948 <__vector_17+0x214>
    c942:	40 81       	ld	r20, Z
    c944:	41 50       	subi	r20, 0x01	; 1
    c946:	40 83       	st	Z, r20
    c948:	f9 01       	movw	r30, r18
    c94a:	e0 5a       	subi	r30, 0xA0	; 160
    c94c:	fd 4f       	sbci	r31, 0xFD	; 253
    c94e:	20 81       	ld	r18, Z
    c950:	21 30       	cpi	r18, 0x01	; 1
    c952:	59 f4       	brne	.+22     	; 0xc96a <__vector_17+0x236>
    c954:	fc 01       	movw	r30, r24
    c956:	ee 0f       	add	r30, r30
    c958:	ff 1f       	adc	r31, r31
    c95a:	ee 57       	subi	r30, 0x7E	; 126
    c95c:	f4 4f       	sbci	r31, 0xF4	; 244
    c95e:	20 81       	ld	r18, Z
    c960:	31 81       	ldd	r19, Z+1	; 0x01
    c962:	2f 5f       	subi	r18, 0xFF	; 255
    c964:	3f 4f       	sbci	r19, 0xFF	; 255
    c966:	31 83       	std	Z+1, r19	; 0x01
    c968:	20 83       	st	Z, r18
    c96a:	01 96       	adiw	r24, 0x01	; 1
    c96c:	83 30       	cpi	r24, 0x03	; 3
    c96e:	91 05       	cpc	r25, r1
    c970:	f9 f6       	brne	.-66     	; 0xc930 <__vector_17+0x1fc>
    c972:	86 cf       	rjmp	.-244    	; 0xc880 <__vector_17+0x14c>
    c974:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    c978:	88 23       	and	r24, r24
    c97a:	29 f0       	breq	.+10     	; 0xc986 <__vector_17+0x252>
    c97c:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    c980:	81 50       	subi	r24, 0x01	; 1
    c982:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
    c986:	80 91 a5 14 	lds	r24, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    c98a:	90 91 a6 14 	lds	r25, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    c98e:	00 97       	sbiw	r24, 0x00	; 0
    c990:	61 f4       	brne	.+24     	; 0xc9aa <__vector_17+0x276>
    c992:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    c996:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    c99a:	00 97       	sbiw	r24, 0x00	; 0
    c99c:	59 f0       	breq	.+22     	; 0xc9b4 <__vector_17+0x280>
    c99e:	01 97       	sbiw	r24, 0x01	; 1
    c9a0:	90 93 a0 14 	sts	0x14A0, r25	; 0x8014a0 <_sRuble_Parameters+0xf2>
    c9a4:	80 93 9f 14 	sts	0x149F, r24	; 0x80149f <_sRuble_Parameters+0xf1>
    c9a8:	05 c0       	rjmp	.+10     	; 0xc9b4 <__vector_17+0x280>
    c9aa:	01 97       	sbiw	r24, 0x01	; 1
    c9ac:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    c9b0:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
    c9b4:	80 91 7d 14 	lds	r24, 0x147D	; 0x80147d <_sRuble_Parameters+0xcf>
    c9b8:	90 91 7e 14 	lds	r25, 0x147E	; 0x80147e <_sRuble_Parameters+0xd0>
    c9bc:	00 97       	sbiw	r24, 0x00	; 0
    c9be:	29 f0       	breq	.+10     	; 0xc9ca <__vector_17+0x296>
    c9c0:	01 97       	sbiw	r24, 0x01	; 1
    c9c2:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
    c9c6:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
    c9ca:	80 91 f0 0c 	lds	r24, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
    c9ce:	90 91 f1 0c 	lds	r25, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
    c9d2:	01 96       	adiw	r24, 0x01	; 1
    c9d4:	90 93 f1 0c 	sts	0x0CF1, r25	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
    c9d8:	80 93 f0 0c 	sts	0x0CF0, r24	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
    c9dc:	80 91 ee 0c 	lds	r24, 0x0CEE	; 0x800cee <_gWait_Blower_Time>
    c9e0:	90 91 ef 0c 	lds	r25, 0x0CEF	; 0x800cef <_gWait_Blower_Time+0x1>
    c9e4:	00 97       	sbiw	r24, 0x00	; 0
    c9e6:	29 f0       	breq	.+10     	; 0xc9f2 <__vector_17+0x2be>
    c9e8:	01 97       	sbiw	r24, 0x01	; 1
    c9ea:	90 93 ef 0c 	sts	0x0CEF, r25	; 0x800cef <_gWait_Blower_Time+0x1>
    c9ee:	80 93 ee 0c 	sts	0x0CEE, r24	; 0x800cee <_gWait_Blower_Time>
    c9f2:	80 91 e9 0c 	lds	r24, 0x0CE9	; 0x800ce9 <_gWdt_Counter>
    c9f6:	90 91 ea 0c 	lds	r25, 0x0CEA	; 0x800cea <_gWdt_Counter+0x1>
    c9fa:	01 96       	adiw	r24, 0x01	; 1
    c9fc:	90 93 ea 0c 	sts	0x0CEA, r25	; 0x800cea <_gWdt_Counter+0x1>
    ca00:	80 93 e9 0c 	sts	0x0CE9, r24	; 0x800ce9 <_gWdt_Counter>
    ca04:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
    ca08:	8c 33       	cpi	r24, 0x3C	; 60
    ca0a:	28 f4       	brcc	.+10     	; 0xca16 <__vector_17+0x2e2>
    ca0c:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
    ca10:	8f 5f       	subi	r24, 0xFF	; 255
    ca12:	80 93 e7 0c 	sts	0x0CE7, r24	; 0x800ce7 <_gTank_Topic_check>
    ca16:	80 91 e8 0c 	lds	r24, 0x0CE8	; 0x800ce8 <_gStart_Wdt>
    ca1a:	81 30       	cpi	r24, 0x01	; 1
    ca1c:	39 f4       	brne	.+14     	; 0xca2c <__vector_17+0x2f8>
    ca1e:	80 91 e9 0c 	lds	r24, 0x0CE9	; 0x800ce9 <_gWdt_Counter>
    ca22:	90 91 ea 0c 	lds	r25, 0x0CEA	; 0x800cea <_gWdt_Counter+0x1>
    ca26:	80 3f       	cpi	r24, 0xF0	; 240
    ca28:	91 05       	cpc	r25, r1
    ca2a:	08 f4       	brcc	.+2      	; 0xca2e <__vector_17+0x2fa>
    ca2c:	a8 95       	wdr
    ca2e:	0e 94 a3 86 	call	0x10d46	; 0x10d46 <_Z18Read_Switch_Statusv>
    ca32:	80 91 78 0c 	lds	r24, 0x0C78	; 0x800c78 <rx_complete>
    ca36:	88 23       	and	r24, r24
    ca38:	29 f0       	breq	.+10     	; 0xca44 <__vector_17+0x310>
    ca3a:	80 91 74 0c 	lds	r24, 0x0C74	; 0x800c74 <monitor_serial_start>
    ca3e:	8f 5f       	subi	r24, 0xFF	; 255
    ca40:	80 93 74 0c 	sts	0x0C74, r24	; 0x800c74 <monitor_serial_start>
    ca44:	ff 91       	pop	r31
    ca46:	ef 91       	pop	r30
    ca48:	bf 91       	pop	r27
    ca4a:	af 91       	pop	r26
    ca4c:	9f 91       	pop	r25
    ca4e:	8f 91       	pop	r24
    ca50:	7f 91       	pop	r23
    ca52:	6f 91       	pop	r22
    ca54:	5f 91       	pop	r21
    ca56:	4f 91       	pop	r20
    ca58:	3f 91       	pop	r19
    ca5a:	2f 91       	pop	r18
    ca5c:	0f 90       	pop	r0
    ca5e:	0b be       	out	0x3b, r0	; 59
    ca60:	0f 90       	pop	r0
    ca62:	0f be       	out	0x3f, r0	; 63
    ca64:	0f 90       	pop	r0
    ca66:	1f 90       	pop	r1
    ca68:	18 95       	reti

0000ca6a <_Z20Timer0_Interrupt_Intv>:
    ca6a:	f8 94       	cli
    ca6c:	a0 eb       	ldi	r26, 0xB0	; 176
    ca6e:	b0 e0       	ldi	r27, 0x00	; 0
    ca70:	1c 92       	st	X, r1
    ca72:	e1 eb       	ldi	r30, 0xB1	; 177
    ca74:	f0 e0       	ldi	r31, 0x00	; 0
    ca76:	10 82       	st	Z, r1
    ca78:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    ca7c:	8c e7       	ldi	r24, 0x7C	; 124
    ca7e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
    ca82:	8c 91       	ld	r24, X
    ca84:	82 60       	ori	r24, 0x02	; 2
    ca86:	8c 93       	st	X, r24
    ca88:	80 81       	ld	r24, Z
    ca8a:	85 60       	ori	r24, 0x05	; 5
    ca8c:	80 83       	st	Z, r24
    ca8e:	e0 e7       	ldi	r30, 0x70	; 112
    ca90:	f0 e0       	ldi	r31, 0x00	; 0
    ca92:	80 81       	ld	r24, Z
    ca94:	82 60       	ori	r24, 0x02	; 2
    ca96:	80 83       	st	Z, r24
    ca98:	78 94       	sei
    ca9a:	08 95       	ret

0000ca9c <__vector_13>:
    ca9c:	1f 92       	push	r1
    ca9e:	0f 92       	push	r0
    caa0:	0f b6       	in	r0, 0x3f	; 63
    caa2:	0f 92       	push	r0
    caa4:	11 24       	eor	r1, r1
    caa6:	2f 93       	push	r18
    caa8:	3f 93       	push	r19
    caaa:	8f 93       	push	r24
    caac:	9f 93       	push	r25
    caae:	80 91 77 0c 	lds	r24, 0x0C77	; 0x800c77 <rx_flag>
    cab2:	88 23       	and	r24, r24
    cab4:	49 f0       	breq	.+18     	; 0xcac8 <__vector_13+0x2c>
    cab6:	80 91 75 0c 	lds	r24, 0x0C75	; 0x800c75 <my_timer>
    caba:	90 91 76 0c 	lds	r25, 0x0C76	; 0x800c76 <my_timer+0x1>
    cabe:	01 96       	adiw	r24, 0x01	; 1
    cac0:	90 93 76 0c 	sts	0x0C76, r25	; 0x800c76 <my_timer+0x1>
    cac4:	80 93 75 0c 	sts	0x0C75, r24	; 0x800c75 <my_timer>
    cac8:	20 91 75 0c 	lds	r18, 0x0C75	; 0x800c75 <my_timer>
    cacc:	30 91 76 0c 	lds	r19, 0x0C76	; 0x800c76 <my_timer+0x1>
    cad0:	80 91 e2 0c 	lds	r24, 0x0CE2	; 0x800ce2 <Interrupt_Time_Out>
    cad4:	90 91 e3 0c 	lds	r25, 0x0CE3	; 0x800ce3 <Interrupt_Time_Out+0x1>
    cad8:	82 17       	cp	r24, r18
    cada:	93 07       	cpc	r25, r19
    cadc:	20 f4       	brcc	.+8      	; 0xcae6 <__vector_13+0x4a>
    cade:	80 91 77 0c 	lds	r24, 0x0C77	; 0x800c77 <rx_flag>
    cae2:	81 30       	cpi	r24, 0x01	; 1
    cae4:	c1 f0       	breq	.+48     	; 0xcb16 <__vector_13+0x7a>
    cae6:	90 91 77 0c 	lds	r25, 0x0C77	; 0x800c77 <rx_flag>
    caea:	80 91 6f 0c 	lds	r24, 0x0C6F	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    caee:	91 30       	cpi	r25, 0x01	; 1
    caf0:	41 f4       	brne	.+16     	; 0xcb02 <__vector_13+0x66>
    caf2:	81 11       	cpse	r24, r1
    caf4:	1f c0       	rjmp	.+62     	; 0xcb34 <__vector_13+0x98>
    caf6:	90 93 6f 0c 	sts	0x0C6F, r25	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cafa:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cafe:	8d 7f       	andi	r24, 0xFD	; 253
    cb00:	07 c0       	rjmp	.+14     	; 0xcb10 <__vector_13+0x74>
    cb02:	81 30       	cpi	r24, 0x01	; 1
    cb04:	b9 f4       	brne	.+46     	; 0xcb34 <__vector_13+0x98>
    cb06:	10 92 6f 0c 	sts	0x0C6F, r1	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cb0a:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb0e:	82 60       	ori	r24, 0x02	; 2
    cb10:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb14:	0f c0       	rjmp	.+30     	; 0xcb34 <__vector_13+0x98>
    cb16:	80 93 78 0c 	sts	0x0C78, r24	; 0x800c78 <rx_complete>
    cb1a:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    cb1e:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    cb22:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    cb26:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    cb2a:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    cb2e:	10 92 74 0c 	sts	0x0C74, r1	; 0x800c74 <monitor_serial_start>
    cb32:	d9 cf       	rjmp	.-78     	; 0xcae6 <__vector_13+0x4a>
    cb34:	9f 91       	pop	r25
    cb36:	8f 91       	pop	r24
    cb38:	3f 91       	pop	r19
    cb3a:	2f 91       	pop	r18
    cb3c:	0f 90       	pop	r0
    cb3e:	0f be       	out	0x3f, r0	; 63
    cb40:	0f 90       	pop	r0
    cb42:	1f 90       	pop	r1
    cb44:	18 95       	reti

0000cb46 <_Z8Lcd_Initv>:
    cb46:	83 ec       	ldi	r24, 0xC3	; 195
    cb48:	9c e0       	ldi	r25, 0x0C	; 12
    cb4a:	0c 94 c4 da 	jmp	0x1b588	; 0x1b588 <_ZN17LiquidCrystal_I2C4initEv>
    cb4e:	08 95       	ret

0000cb50 <_Z14Lcd_Print_BuffPchhh>:
    cb50:	cf 92       	push	r12
    cb52:	df 92       	push	r13
    cb54:	ef 92       	push	r14
    cb56:	ff 92       	push	r15
    cb58:	0f 93       	push	r16
    cb5a:	1f 93       	push	r17
    cb5c:	cf 93       	push	r28
    cb5e:	df 93       	push	r29
    cb60:	7c 01       	movw	r14, r24
    cb62:	c4 2e       	mov	r12, r20
    cb64:	ec 01       	movw	r28, r24
    cb66:	06 2f       	mov	r16, r22
    cb68:	10 e0       	ldi	r17, 0x00	; 0
    cb6a:	ce 01       	movw	r24, r28
    cb6c:	8e 19       	sub	r24, r14
    cb6e:	9f 09       	sbc	r25, r15
    cb70:	80 17       	cp	r24, r16
    cb72:	91 07       	cpc	r25, r17
    cb74:	84 f4       	brge	.+32     	; 0xcb96 <_Z14Lcd_Print_BuffPchhh+0x46>
    cb76:	dd 24       	eor	r13, r13
    cb78:	d3 94       	inc	r13
    cb7a:	d2 0e       	add	r13, r18
    cb7c:	4c 2d       	mov	r20, r12
    cb7e:	62 2f       	mov	r22, r18
    cb80:	83 ec       	ldi	r24, 0xC3	; 195
    cb82:	9c e0       	ldi	r25, 0x0C	; 12
    cb84:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cb88:	69 91       	ld	r22, Y+
    cb8a:	83 ec       	ldi	r24, 0xC3	; 195
    cb8c:	9c e0       	ldi	r25, 0x0C	; 12
    cb8e:	0e 94 a3 d4 	call	0x1a946	; 0x1a946 <_ZN5Print5printEc>
    cb92:	2d 2d       	mov	r18, r13
    cb94:	ea cf       	rjmp	.-44     	; 0xcb6a <_Z14Lcd_Print_BuffPchhh+0x1a>
    cb96:	df 91       	pop	r29
    cb98:	cf 91       	pop	r28
    cb9a:	1f 91       	pop	r17
    cb9c:	0f 91       	pop	r16
    cb9e:	ff 90       	pop	r15
    cba0:	ef 90       	pop	r14
    cba2:	df 90       	pop	r13
    cba4:	cf 90       	pop	r12
    cba6:	08 95       	ret

0000cba8 <_Z9Lcd_Clearv>:
    cba8:	83 ec       	ldi	r24, 0xC3	; 195
    cbaa:	9c e0       	ldi	r25, 0x0C	; 12
    cbac:	0c 94 05 da 	jmp	0x1b40a	; 0x1b40a <_ZN17LiquidCrystal_I2C5clearEv>

0000cbb0 <_Z9Lora_Initv>:
    cbb0:	8b e7       	ldi	r24, 0x7B	; 123
    cbb2:	9c e0       	ldi	r25, 0x0C	; 12
    cbb4:	0c 94 98 df 	jmp	0x1bf30	; 0x1bf30 <_ZN7RH_RF954initEv>

0000cbb8 <_Z14Lora_Availablev>:
    cbb8:	8b e7       	ldi	r24, 0x7B	; 123
    cbba:	9c e0       	ldi	r25, 0x0C	; 12
    cbbc:	0c 94 b8 de 	jmp	0x1bd70	; 0x1bd70 <_ZN7RH_RF959availableEv>

0000cbc0 <_Z17Lora_Data_Receivev>:
    cbc0:	cf 93       	push	r28
    cbc2:	df 93       	push	r29
    cbc4:	1f 92       	push	r1
    cbc6:	cd b7       	in	r28, 0x3d	; 61
    cbc8:	de b7       	in	r29, 0x3e	; 62
    cbca:	84 e1       	ldi	r24, 0x14	; 20
    cbcc:	e9 e0       	ldi	r30, 0x09	; 9
    cbce:	f4 e1       	ldi	r31, 0x14	; 20
    cbd0:	df 01       	movw	r26, r30
    cbd2:	98 2f       	mov	r25, r24
    cbd4:	1d 92       	st	X+, r1
    cbd6:	9a 95       	dec	r25
    cbd8:	e9 f7       	brne	.-6      	; 0xcbd4 <_Z17Lora_Data_Receivev+0x14>
    cbda:	89 83       	std	Y+1, r24	; 0x01
    cbdc:	ae 01       	movw	r20, r28
    cbde:	4f 5f       	subi	r20, 0xFF	; 255
    cbe0:	5f 4f       	sbci	r21, 0xFF	; 255
    cbe2:	bf 01       	movw	r22, r30
    cbe4:	8b e7       	ldi	r24, 0x7B	; 123
    cbe6:	9c e0       	ldi	r25, 0x0C	; 12
    cbe8:	0e 94 39 dd 	call	0x1ba72	; 0x1ba72 <_ZN7RH_RF954recvEPhS0_>
    cbec:	0f 90       	pop	r0
    cbee:	df 91       	pop	r29
    cbf0:	cf 91       	pop	r28
    cbf2:	08 95       	ret

0000cbf4 <_Z13Lora_Set_Freqv>:
    cbf4:	4a e5       	ldi	r20, 0x5A	; 90
    cbf6:	54 e4       	ldi	r21, 0x44	; 68
    cbf8:	68 e5       	ldi	r22, 0x58	; 88
    cbfa:	74 e4       	ldi	r23, 0x44	; 68
    cbfc:	8b e7       	ldi	r24, 0x7B	; 123
    cbfe:	9c e0       	ldi	r25, 0x0C	; 12
    cc00:	0c 94 77 dd 	jmp	0x1baee	; 0x1baee <_ZN7RH_RF9512setFrequencyEf>

0000cc04 <_Z14Lora_Set_Powerv>:
    cc04:	40 e0       	ldi	r20, 0x00	; 0
    cc06:	64 e1       	ldi	r22, 0x14	; 20
    cc08:	8b e7       	ldi	r24, 0x7B	; 123
    cc0a:	9c e0       	ldi	r25, 0x0C	; 12
    cc0c:	0c 94 2d df 	jmp	0x1be5a	; 0x1be5a <_ZN7RH_RF9510setTxPowerEab>

0000cc10 <_Z15Lora_Set_Configv>:
    cc10:	60 e0       	ldi	r22, 0x00	; 0
    cc12:	8b e7       	ldi	r24, 0x7B	; 123
    cc14:	9c e0       	ldi	r25, 0x0C	; 12
    cc16:	0e 94 60 df 	call	0x1bec0	; 0x1bec0 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
    cc1a:	6b e0       	ldi	r22, 0x0B	; 11
    cc1c:	8b e7       	ldi	r24, 0x7B	; 123
    cc1e:	9c e0       	ldi	r25, 0x0C	; 12
    cc20:	0c 94 9b e0 	jmp	0x1c136	; 0x1c136 <_ZN7RH_RF9518setSpreadingFactorEh>

0000cc24 <_Z20Check_Data_Availablej>:
    cc24:	bc 01       	movw	r22, r24
    cc26:	8b e7       	ldi	r24, 0x7B	; 123
    cc28:	9c e0       	ldi	r25, 0x0C	; 12
    cc2a:	0c 94 1e db 	jmp	0x1b63c	; 0x1b63c <_ZN15RHGenericDriver20waitAvailableTimeoutEj>

0000cc2e <_Z21Seperate_Out_Sub_Datav>:
    cc2e:	8f 92       	push	r8
    cc30:	9f 92       	push	r9
    cc32:	af 92       	push	r10
    cc34:	bf 92       	push	r11
    cc36:	cf 92       	push	r12
    cc38:	df 92       	push	r13
    cc3a:	ef 92       	push	r14
    cc3c:	ff 92       	push	r15
    cc3e:	0f 93       	push	r16
    cc40:	1f 93       	push	r17
    cc42:	cf 93       	push	r28
    cc44:	df 93       	push	r29
    cc46:	cd b7       	in	r28, 0x3d	; 61
    cc48:	de b7       	in	r29, 0x3e	; 62
    cc4a:	c0 53       	subi	r28, 0x30	; 48
    cc4c:	d4 40       	sbci	r29, 0x04	; 4
    cc4e:	0f b6       	in	r0, 0x3f	; 63
    cc50:	f8 94       	cli
    cc52:	de bf       	out	0x3e, r29	; 62
    cc54:	0f be       	out	0x3f, r0	; 63
    cc56:	cd bf       	out	0x3d, r28	; 61
    cc58:	22 e1       	ldi	r18, 0x12	; 18
    cc5a:	e3 e7       	ldi	r30, 0x73	; 115
    cc5c:	f3 e0       	ldi	r31, 0x03	; 3
    cc5e:	de 01       	movw	r26, r28
    cc60:	a5 5e       	subi	r26, 0xE5	; 229
    cc62:	bb 4f       	sbci	r27, 0xFB	; 251
    cc64:	01 90       	ld	r0, Z+
    cc66:	0d 92       	st	X+, r0
    cc68:	2a 95       	dec	r18
    cc6a:	e1 f7       	brne	.-8      	; 0xcc64 <_Z21Seperate_Out_Sub_Datav+0x36>
    cc6c:	24 e1       	ldi	r18, 0x14	; 20
    cc6e:	e5 e8       	ldi	r30, 0x85	; 133
    cc70:	f3 e0       	ldi	r31, 0x03	; 3
    cc72:	de 01       	movw	r26, r28
    cc74:	a9 5f       	subi	r26, 0xF9	; 249
    cc76:	bb 4f       	sbci	r27, 0xFB	; 251
    cc78:	01 90       	ld	r0, Z+
    cc7a:	0d 92       	st	X+, r0
    cc7c:	2a 95       	dec	r18
    cc7e:	e1 f7       	brne	.-8      	; 0xcc78 <_Z21Seperate_Out_Sub_Datav+0x4a>
    cc80:	8e 01       	movw	r16, r28
    cc82:	0f 5f       	subi	r16, 0xFF	; 255
    cc84:	1f 4f       	sbci	r17, 0xFF	; 255
    cc86:	24 ed       	ldi	r18, 0xD4	; 212
    cc88:	33 e0       	ldi	r19, 0x03	; 3
    cc8a:	d8 01       	movw	r26, r16
    cc8c:	f9 01       	movw	r30, r18
    cc8e:	1d 92       	st	X+, r1
    cc90:	31 97       	sbiw	r30, 0x01	; 1
    cc92:	e9 f7       	brne	.-6      	; 0xcc8e <_Z21Seperate_Out_Sub_Datav+0x60>
    cc94:	be 01       	movw	r22, r28
    cc96:	6b 52       	subi	r22, 0x2B	; 43
    cc98:	7c 4f       	sbci	r23, 0xFC	; 252
    cc9a:	22 e3       	ldi	r18, 0x32	; 50
    cc9c:	db 01       	movw	r26, r22
    cc9e:	1d 92       	st	X+, r1
    cca0:	2a 95       	dec	r18
    cca2:	e9 f7       	brne	.-6      	; 0xcc9e <_Z21Seperate_Out_Sub_Datav+0x70>
    cca4:	88 24       	eor	r8, r8
    cca6:	83 94       	inc	r8
    cca8:	91 2c       	mov	r9, r1
    ccaa:	40 e0       	ldi	r20, 0x00	; 0
    ccac:	50 e0       	ldi	r21, 0x00	; 0
    ccae:	20 e0       	ldi	r18, 0x00	; 0
    ccb0:	30 e0       	ldi	r19, 0x00	; 0
    ccb2:	fe 01       	movw	r30, r28
    ccb4:	e3 5d       	subi	r30, 0xD3	; 211
    ccb6:	fb 4f       	sbci	r31, 0xFB	; 251
    ccb8:	aa e0       	ldi	r26, 0x0A	; 10
    ccba:	fa 2e       	mov	r15, r26
    ccbc:	b4 e6       	ldi	r27, 0x64	; 100
    ccbe:	eb 2e       	mov	r14, r27
    ccc0:	d9 01       	movw	r26, r18
    ccc2:	a0 53       	subi	r26, 0x30	; 48
    ccc4:	b0 4f       	sbci	r27, 0xF0	; 240
    ccc6:	dc 90       	ld	r13, X
    ccc8:	dd 20       	and	r13, r13
    ccca:	09 f4       	brne	.+2      	; 0xccce <_Z21Seperate_Out_Sub_Datav+0xa0>
    cccc:	40 c1       	rjmp	.+640    	; 0xcf4e <_Z21Seperate_Out_Sub_Datav+0x320>
    ccce:	2f 5f       	subi	r18, 0xFF	; 255
    ccd0:	3f 4f       	sbci	r19, 0xFF	; 255
    ccd2:	24 3d       	cpi	r18, 0xD4	; 212
    ccd4:	b3 e0       	ldi	r27, 0x03	; 3
    ccd6:	3b 07       	cpc	r19, r27
    ccd8:	08 f0       	brcs	.+2      	; 0xccdc <_Z21Seperate_Out_Sub_Datav+0xae>
    ccda:	55 c1       	rjmp	.+682    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    ccdc:	d9 01       	movw	r26, r18
    ccde:	a0 53       	subi	r26, 0x30	; 48
    cce0:	b0 4f       	sbci	r27, 0xF0	; 240
    cce2:	6d 01       	movw	r12, r26
    cce4:	b1 e0       	ldi	r27, 0x01	; 1
    cce6:	8b 16       	cp	r8, r27
    cce8:	91 04       	cpc	r9, r1
    ccea:	31 f0       	breq	.+12     	; 0xccf8 <_Z21Seperate_Out_Sub_Datav+0xca>
    ccec:	a2 e0       	ldi	r26, 0x02	; 2
    ccee:	8a 16       	cp	r8, r26
    ccf0:	91 04       	cpc	r9, r1
    ccf2:	09 f4       	brne	.+2      	; 0xccf6 <_Z21Seperate_Out_Sub_Datav+0xc8>
    ccf4:	8f c0       	rjmp	.+286    	; 0xce14 <_Z21Seperate_Out_Sub_Datav+0x1e6>
    ccf6:	e4 cf       	rjmp	.-56     	; 0xccc0 <_Z21Seperate_Out_Sub_Datav+0x92>
    ccf8:	d6 01       	movw	r26, r12
    ccfa:	bc 90       	ld	r11, X
    ccfc:	bb e1       	ldi	r27, 0x1B	; 27
    ccfe:	cb 2e       	mov	r12, r27
    cd00:	b4 e0       	ldi	r27, 0x04	; 4
    cd02:	db 2e       	mov	r13, r27
    cd04:	cc 0e       	add	r12, r28
    cd06:	dd 1e       	adc	r13, r29
    cd08:	c4 0e       	add	r12, r20
    cd0a:	d5 1e       	adc	r13, r21
    cd0c:	d6 01       	movw	r26, r12
    cd0e:	dc 90       	ld	r13, X
    cd10:	bd 14       	cp	r11, r13
    cd12:	19 f0       	breq	.+6      	; 0xcd1a <_Z21Seperate_Out_Sub_Datav+0xec>
    cd14:	40 e0       	ldi	r20, 0x00	; 0
    cd16:	50 e0       	ldi	r21, 0x00	; 0
    cd18:	d3 cf       	rjmp	.-90     	; 0xccc0 <_Z21Seperate_Out_Sub_Datav+0x92>
    cd1a:	4f 5f       	subi	r20, 0xFF	; 255
    cd1c:	5f 4f       	sbci	r21, 0xFF	; 255
    cd1e:	ab e1       	ldi	r26, 0x1B	; 27
    cd20:	ca 2e       	mov	r12, r26
    cd22:	a4 e0       	ldi	r26, 0x04	; 4
    cd24:	da 2e       	mov	r13, r26
    cd26:	cc 0e       	add	r12, r28
    cd28:	dd 1e       	adc	r13, r29
    cd2a:	c4 0e       	add	r12, r20
    cd2c:	d5 1e       	adc	r13, r21
    cd2e:	d6 01       	movw	r26, r12
    cd30:	dc 90       	ld	r13, X
    cd32:	d1 10       	cpse	r13, r1
    cd34:	c5 cf       	rjmp	.-118    	; 0xccc0 <_Z21Seperate_Out_Sub_Datav+0x92>
    cd36:	af 01       	movw	r20, r30
    cd38:	5a 01       	movw	r10, r20
    cd3a:	ae 1a       	sub	r10, r30
    cd3c:	bf 0a       	sbc	r11, r31
    cd3e:	d9 01       	movw	r26, r18
    cd40:	a0 53       	subi	r26, 0x30	; 48
    cd42:	b0 4f       	sbci	r27, 0xF0	; 240
    cd44:	dc 90       	ld	r13, X
    cd46:	bd e0       	ldi	r27, 0x0D	; 13
    cd48:	db 16       	cp	r13, r27
    cd4a:	79 f0       	breq	.+30     	; 0xcd6a <_Z21Seperate_Out_Sub_Datav+0x13c>
    cd4c:	2f 5f       	subi	r18, 0xFF	; 255
    cd4e:	3f 4f       	sbci	r19, 0xFF	; 255
    cd50:	24 3d       	cpi	r18, 0xD4	; 212
    cd52:	a3 e0       	ldi	r26, 0x03	; 3
    cd54:	3a 07       	cpc	r19, r26
    cd56:	09 f4       	brne	.+2      	; 0xcd5a <_Z21Seperate_Out_Sub_Datav+0x12c>
    cd58:	16 c1       	rjmp	.+556    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cd5a:	d9 01       	movw	r26, r18
    cd5c:	a0 53       	subi	r26, 0x30	; 48
    cd5e:	b0 4f       	sbci	r27, 0xF0	; 240
    cd60:	dc 90       	ld	r13, X
    cd62:	da 01       	movw	r26, r20
    cd64:	dd 92       	st	X+, r13
    cd66:	ad 01       	movw	r20, r26
    cd68:	e7 cf       	rjmp	.-50     	; 0xcd38 <_Z21Seperate_Out_Sub_Datav+0x10a>
    cd6a:	d5 01       	movw	r26, r10
    cd6c:	ae 0f       	add	r26, r30
    cd6e:	bf 1f       	adc	r27, r31
    cd70:	1c 92       	st	X, r1
    cd72:	df 01       	movw	r26, r30
    cd74:	0d 90       	ld	r0, X+
    cd76:	00 20       	and	r0, r0
    cd78:	e9 f7       	brne	.-6      	; 0xcd74 <_Z21Seperate_Out_Sub_Datav+0x146>
    cd7a:	11 97       	sbiw	r26, 0x01	; 1
    cd7c:	ad 01       	movw	r20, r26
    cd7e:	4e 1b       	sub	r20, r30
    cd80:	5f 0b       	sbc	r21, r31
    cd82:	42 30       	cpi	r20, 0x02	; 2
    cd84:	51 05       	cpc	r21, r1
    cd86:	49 f0       	breq	.+18     	; 0xcd9a <_Z21Seperate_Out_Sub_Datav+0x16c>
    cd88:	08 f4       	brcc	.+2      	; 0xcd8c <_Z21Seperate_Out_Sub_Datav+0x15e>
    cd8a:	fd c0       	rjmp	.+506    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cd8c:	43 30       	cpi	r20, 0x03	; 3
    cd8e:	51 05       	cpc	r21, r1
    cd90:	49 f0       	breq	.+18     	; 0xcda4 <_Z21Seperate_Out_Sub_Datav+0x176>
    cd92:	44 30       	cpi	r20, 0x04	; 4
    cd94:	51 05       	cpc	r21, r1
    cd96:	d9 f4       	brne	.+54     	; 0xcdce <_Z21Seperate_Out_Sub_Datav+0x1a0>
    cd98:	f6 c0       	rjmp	.+492    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cd9a:	80 81       	ld	r24, Z
    cd9c:	90 e0       	ldi	r25, 0x00	; 0
    cd9e:	c0 97       	sbiw	r24, 0x30	; 48
    cda0:	b1 f4       	brne	.+44     	; 0xcdce <_Z21Seperate_Out_Sub_Datav+0x1a0>
    cda2:	f1 c0       	rjmp	.+482    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cda4:	80 81       	ld	r24, Z
    cda6:	90 e0       	ldi	r25, 0x00	; 0
    cda8:	c0 97       	sbiw	r24, 0x30	; 48
    cdaa:	f8 9e       	mul	r15, r24
    cdac:	a0 01       	movw	r20, r0
    cdae:	f9 9e       	mul	r15, r25
    cdb0:	50 0d       	add	r21, r0
    cdb2:	11 24       	eor	r1, r1
    cdb4:	91 81       	ldd	r25, Z+1	; 0x01
    cdb6:	89 2f       	mov	r24, r25
    cdb8:	90 e0       	ldi	r25, 0x00	; 0
    cdba:	c0 97       	sbiw	r24, 0x30	; 48
    cdbc:	84 0f       	add	r24, r20
    cdbe:	95 1f       	adc	r25, r21
    cdc0:	ac 01       	movw	r20, r24
    cdc2:	41 50       	subi	r20, 0x01	; 1
    cdc4:	51 09       	sbc	r21, r1
    cdc6:	42 33       	cpi	r20, 0x32	; 50
    cdc8:	51 05       	cpc	r21, r1
    cdca:	08 f0       	brcs	.+2      	; 0xcdce <_Z21Seperate_Out_Sub_Datav+0x1a0>
    cdcc:	dc c0       	rjmp	.+440    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cdce:	2e 5f       	subi	r18, 0xFE	; 254
    cdd0:	3f 4f       	sbci	r19, 0xFF	; 255
    cdd2:	24 3d       	cpi	r18, 0xD4	; 212
    cdd4:	b3 e0       	ldi	r27, 0x03	; 3
    cdd6:	3b 07       	cpc	r19, r27
    cdd8:	08 f0       	brcs	.+2      	; 0xcddc <_Z21Seperate_Out_Sub_Datav+0x1ae>
    cdda:	d5 c0       	rjmp	.+426    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cddc:	6b 01       	movw	r12, r22
    cdde:	a6 01       	movw	r20, r12
    cde0:	46 1b       	sub	r20, r22
    cde2:	57 0b       	sbc	r21, r23
    cde4:	48 17       	cp	r20, r24
    cde6:	59 07       	cpc	r21, r25
    cde8:	20 f0       	brcs	.+8      	; 0xcdf2 <_Z21Seperate_Out_Sub_Datav+0x1c4>
    cdea:	42 e0       	ldi	r20, 0x02	; 2
    cdec:	84 2e       	mov	r8, r20
    cdee:	91 2c       	mov	r9, r1
    cdf0:	91 cf       	rjmp	.-222    	; 0xcd14 <_Z21Seperate_Out_Sub_Datav+0xe6>
    cdf2:	a9 01       	movw	r20, r18
    cdf4:	4f 5f       	subi	r20, 0xFF	; 255
    cdf6:	5f 4f       	sbci	r21, 0xFF	; 255
    cdf8:	20 53       	subi	r18, 0x30	; 48
    cdfa:	30 4f       	sbci	r19, 0xF0	; 240
    cdfc:	d9 01       	movw	r26, r18
    cdfe:	2c 91       	ld	r18, X
    ce00:	d6 01       	movw	r26, r12
    ce02:	2d 93       	st	X+, r18
    ce04:	6d 01       	movw	r12, r26
    ce06:	44 3d       	cpi	r20, 0xD4	; 212
    ce08:	b3 e0       	ldi	r27, 0x03	; 3
    ce0a:	5b 07       	cpc	r21, r27
    ce0c:	09 f4       	brne	.+2      	; 0xce10 <_Z21Seperate_Out_Sub_Datav+0x1e2>
    ce0e:	bb c0       	rjmp	.+374    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    ce10:	9a 01       	movw	r18, r20
    ce12:	e5 cf       	rjmp	.-54     	; 0xcdde <_Z21Seperate_Out_Sub_Datav+0x1b0>
    ce14:	d6 01       	movw	r26, r12
    ce16:	bc 90       	ld	r11, X
    ce18:	b7 e0       	ldi	r27, 0x07	; 7
    ce1a:	cb 2e       	mov	r12, r27
    ce1c:	b4 e0       	ldi	r27, 0x04	; 4
    ce1e:	db 2e       	mov	r13, r27
    ce20:	cc 0e       	add	r12, r28
    ce22:	dd 1e       	adc	r13, r29
    ce24:	c4 0e       	add	r12, r20
    ce26:	d5 1e       	adc	r13, r21
    ce28:	d6 01       	movw	r26, r12
    ce2a:	dc 90       	ld	r13, X
    ce2c:	bd 10       	cpse	r11, r13
    ce2e:	72 cf       	rjmp	.-284    	; 0xcd14 <_Z21Seperate_Out_Sub_Datav+0xe6>
    ce30:	4f 5f       	subi	r20, 0xFF	; 255
    ce32:	5f 4f       	sbci	r21, 0xFF	; 255
    ce34:	a7 e0       	ldi	r26, 0x07	; 7
    ce36:	ca 2e       	mov	r12, r26
    ce38:	a4 e0       	ldi	r26, 0x04	; 4
    ce3a:	da 2e       	mov	r13, r26
    ce3c:	cc 0e       	add	r12, r28
    ce3e:	dd 1e       	adc	r13, r29
    ce40:	c4 0e       	add	r12, r20
    ce42:	d5 1e       	adc	r13, r21
    ce44:	d6 01       	movw	r26, r12
    ce46:	dc 90       	ld	r13, X
    ce48:	d1 10       	cpse	r13, r1
    ce4a:	3a cf       	rjmp	.-396    	; 0xccc0 <_Z21Seperate_Out_Sub_Datav+0x92>
    ce4c:	6f 01       	movw	r12, r30
    ce4e:	46 01       	movw	r8, r12
    ce50:	8e 1a       	sub	r8, r30
    ce52:	9f 0a       	sbc	r9, r31
    ce54:	d9 01       	movw	r26, r18
    ce56:	a0 53       	subi	r26, 0x30	; 48
    ce58:	b0 4f       	sbci	r27, 0xF0	; 240
    ce5a:	bc 90       	ld	r11, X
    ce5c:	bd e0       	ldi	r27, 0x0D	; 13
    ce5e:	bb 16       	cp	r11, r27
    ce60:	79 f0       	breq	.+30     	; 0xce80 <_Z21Seperate_Out_Sub_Datav+0x252>
    ce62:	2f 5f       	subi	r18, 0xFF	; 255
    ce64:	3f 4f       	sbci	r19, 0xFF	; 255
    ce66:	24 3d       	cpi	r18, 0xD4	; 212
    ce68:	a3 e0       	ldi	r26, 0x03	; 3
    ce6a:	3a 07       	cpc	r19, r26
    ce6c:	09 f4       	brne	.+2      	; 0xce70 <_Z21Seperate_Out_Sub_Datav+0x242>
    ce6e:	8b c0       	rjmp	.+278    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    ce70:	d9 01       	movw	r26, r18
    ce72:	a0 53       	subi	r26, 0x30	; 48
    ce74:	b0 4f       	sbci	r27, 0xF0	; 240
    ce76:	bc 90       	ld	r11, X
    ce78:	d6 01       	movw	r26, r12
    ce7a:	bd 92       	st	X+, r11
    ce7c:	6d 01       	movw	r12, r26
    ce7e:	e7 cf       	rjmp	.-50     	; 0xce4e <_Z21Seperate_Out_Sub_Datav+0x220>
    ce80:	d4 01       	movw	r26, r8
    ce82:	ae 0f       	add	r26, r30
    ce84:	bf 1f       	adc	r27, r31
    ce86:	1c 92       	st	X, r1
    ce88:	df 01       	movw	r26, r30
    ce8a:	0d 90       	ld	r0, X+
    ce8c:	00 20       	and	r0, r0
    ce8e:	e9 f7       	brne	.-6      	; 0xce8a <_Z21Seperate_Out_Sub_Datav+0x25c>
    ce90:	11 97       	sbiw	r26, 0x01	; 1
    ce92:	ae 1b       	sub	r26, r30
    ce94:	bf 0b       	sbc	r27, r31
    ce96:	a2 30       	cpi	r26, 0x02	; 2
    ce98:	b1 05       	cpc	r27, r1
    ce9a:	41 f0       	breq	.+16     	; 0xceac <_Z21Seperate_Out_Sub_Datav+0x27e>
    ce9c:	08 f4       	brcc	.+2      	; 0xcea0 <_Z21Seperate_Out_Sub_Datav+0x272>
    ce9e:	73 c0       	rjmp	.+230    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cea0:	a3 30       	cpi	r26, 0x03	; 3
    cea2:	b1 05       	cpc	r27, r1
    cea4:	39 f0       	breq	.+14     	; 0xceb4 <_Z21Seperate_Out_Sub_Datav+0x286>
    cea6:	14 97       	sbiw	r26, 0x04	; 4
    cea8:	a9 f0       	breq	.+42     	; 0xced4 <_Z21Seperate_Out_Sub_Datav+0x2a6>
    ceaa:	2f c0       	rjmp	.+94     	; 0xcf0a <_Z21Seperate_Out_Sub_Datav+0x2dc>
    ceac:	80 81       	ld	r24, Z
    ceae:	90 e0       	ldi	r25, 0x00	; 0
    ceb0:	c0 97       	sbiw	r24, 0x30	; 48
    ceb2:	0d c0       	rjmp	.+26     	; 0xcece <_Z21Seperate_Out_Sub_Datav+0x2a0>
    ceb4:	80 81       	ld	r24, Z
    ceb6:	90 e0       	ldi	r25, 0x00	; 0
    ceb8:	c0 97       	sbiw	r24, 0x30	; 48
    ceba:	f8 9e       	mul	r15, r24
    cebc:	d0 01       	movw	r26, r0
    cebe:	f9 9e       	mul	r15, r25
    cec0:	b0 0d       	add	r27, r0
    cec2:	11 24       	eor	r1, r1
    cec4:	81 81       	ldd	r24, Z+1	; 0x01
    cec6:	90 e0       	ldi	r25, 0x00	; 0
    cec8:	c0 97       	sbiw	r24, 0x30	; 48
    ceca:	8a 0f       	add	r24, r26
    cecc:	9b 1f       	adc	r25, r27
    cece:	00 97       	sbiw	r24, 0x00	; 0
    ced0:	e1 f4       	brne	.+56     	; 0xcf0a <_Z21Seperate_Out_Sub_Datav+0x2dc>
    ced2:	59 c0       	rjmp	.+178    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    ced4:	a0 81       	ld	r26, Z
    ced6:	b0 e0       	ldi	r27, 0x00	; 0
    ced8:	d0 97       	sbiw	r26, 0x30	; 48
    ceda:	ea 9e       	mul	r14, r26
    cedc:	c0 01       	movw	r24, r0
    cede:	eb 9e       	mul	r14, r27
    cee0:	90 0d       	add	r25, r0
    cee2:	11 24       	eor	r1, r1
    cee4:	a1 81       	ldd	r26, Z+1	; 0x01
    cee6:	b0 e0       	ldi	r27, 0x00	; 0
    cee8:	d0 97       	sbiw	r26, 0x30	; 48
    ceea:	fa 9e       	mul	r15, r26
    ceec:	60 01       	movw	r12, r0
    ceee:	fb 9e       	mul	r15, r27
    cef0:	d0 0c       	add	r13, r0
    cef2:	11 24       	eor	r1, r1
    cef4:	8c 0d       	add	r24, r12
    cef6:	9d 1d       	adc	r25, r13
    cef8:	a2 81       	ldd	r26, Z+2	; 0x02
    cefa:	b0 e0       	ldi	r27, 0x00	; 0
    cefc:	d0 97       	sbiw	r26, 0x30	; 48
    cefe:	8a 0f       	add	r24, r26
    cf00:	9b 1f       	adc	r25, r27
    cf02:	85 3d       	cpi	r24, 0xD5	; 213
    cf04:	b3 e0       	ldi	r27, 0x03	; 3
    cf06:	9b 07       	cpc	r25, r27
    cf08:	f0 f5       	brcc	.+124    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cf0a:	2e 5f       	subi	r18, 0xFE	; 254
    cf0c:	3f 4f       	sbci	r19, 0xFF	; 255
    cf0e:	24 3d       	cpi	r18, 0xD4	; 212
    cf10:	a3 e0       	ldi	r26, 0x03	; 3
    cf12:	3a 07       	cpc	r19, r26
    cf14:	c0 f5       	brcc	.+112    	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cf16:	58 01       	movw	r10, r16
    cf18:	65 01       	movw	r12, r10
    cf1a:	c0 1a       	sub	r12, r16
    cf1c:	d1 0a       	sbc	r13, r17
    cf1e:	c8 16       	cp	r12, r24
    cf20:	d9 06       	cpc	r13, r25
    cf22:	18 f0       	brcs	.+6      	; 0xcf2a <_Z21Seperate_Out_Sub_Datav+0x2fc>
    cf24:	81 2c       	mov	r8, r1
    cf26:	91 2c       	mov	r9, r1
    cf28:	cb ce       	rjmp	.-618    	; 0xccc0 <_Z21Seperate_Out_Sub_Datav+0x92>
    cf2a:	69 01       	movw	r12, r18
    cf2c:	bf ef       	ldi	r27, 0xFF	; 255
    cf2e:	cb 1a       	sub	r12, r27
    cf30:	db 0a       	sbc	r13, r27
    cf32:	20 53       	subi	r18, 0x30	; 48
    cf34:	30 4f       	sbci	r19, 0xF0	; 240
    cf36:	d9 01       	movw	r26, r18
    cf38:	2c 91       	ld	r18, X
    cf3a:	d5 01       	movw	r26, r10
    cf3c:	2d 93       	st	X+, r18
    cf3e:	5d 01       	movw	r10, r26
    cf40:	b4 ed       	ldi	r27, 0xD4	; 212
    cf42:	cb 16       	cp	r12, r27
    cf44:	b3 e0       	ldi	r27, 0x03	; 3
    cf46:	db 06       	cpc	r13, r27
    cf48:	f1 f0       	breq	.+60     	; 0xcf86 <_Z21Seperate_Out_Sub_Datav+0x358>
    cf4a:	96 01       	movw	r18, r12
    cf4c:	e5 cf       	rjmp	.-54     	; 0xcf18 <_Z21Seperate_Out_Sub_Datav+0x2ea>
    cf4e:	8e e6       	ldi	r24, 0x6E	; 110
    cf50:	e2 e6       	ldi	r30, 0x62	; 98
    cf52:	ff e0       	ldi	r31, 0x0F	; 15
    cf54:	df 01       	movw	r26, r30
    cf56:	1d 92       	st	X+, r1
    cf58:	8a 95       	dec	r24
    cf5a:	e9 f7       	brne	.-6      	; 0xcf56 <_Z21Seperate_Out_Sub_Datav+0x328>
    cf5c:	84 ed       	ldi	r24, 0xD4	; 212
    cf5e:	93 e0       	ldi	r25, 0x03	; 3
    cf60:	e0 ed       	ldi	r30, 0xD0	; 208
    cf62:	ff e0       	ldi	r31, 0x0F	; 15
    cf64:	df 01       	movw	r26, r30
    cf66:	9c 01       	movw	r18, r24
    cf68:	1d 92       	st	X+, r1
    cf6a:	21 50       	subi	r18, 0x01	; 1
    cf6c:	30 40       	sbci	r19, 0x00	; 0
    cf6e:	e1 f7       	brne	.-8      	; 0xcf68 <_Z21Seperate_Out_Sub_Datav+0x33a>
    cf70:	82 e6       	ldi	r24, 0x62	; 98
    cf72:	9f e0       	ldi	r25, 0x0F	; 15
    cf74:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
    cf78:	b8 01       	movw	r22, r16
    cf7a:	80 ed       	ldi	r24, 0xD0	; 208
    cf7c:	9f e0       	ldi	r25, 0x0F	; 15
    cf7e:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
    cf82:	81 e0       	ldi	r24, 0x01	; 1
    cf84:	01 c0       	rjmp	.+2      	; 0xcf88 <_Z21Seperate_Out_Sub_Datav+0x35a>
    cf86:	80 e0       	ldi	r24, 0x00	; 0
    cf88:	c0 5d       	subi	r28, 0xD0	; 208
    cf8a:	db 4f       	sbci	r29, 0xFB	; 251
    cf8c:	0f b6       	in	r0, 0x3f	; 63
    cf8e:	f8 94       	cli
    cf90:	de bf       	out	0x3e, r29	; 62
    cf92:	0f be       	out	0x3f, r0	; 63
    cf94:	cd bf       	out	0x3d, r28	; 61
    cf96:	df 91       	pop	r29
    cf98:	cf 91       	pop	r28
    cf9a:	1f 91       	pop	r17
    cf9c:	0f 91       	pop	r16
    cf9e:	ff 90       	pop	r15
    cfa0:	ef 90       	pop	r14
    cfa2:	df 90       	pop	r13
    cfa4:	cf 90       	pop	r12
    cfa6:	bf 90       	pop	r11
    cfa8:	af 90       	pop	r10
    cfaa:	9f 90       	pop	r9
    cfac:	8f 90       	pop	r8
    cfae:	08 95       	ret

0000cfb0 <_Z12Reset_Bufferv>:
    cfb0:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
    cfb4:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    cfb8:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    cfbc:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    cfc0:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    cfc4:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    cfc8:	84 ed       	ldi	r24, 0xD4	; 212
    cfca:	93 e0       	ldi	r25, 0x03	; 3
    cfcc:	e0 ed       	ldi	r30, 0xD0	; 208
    cfce:	ff e0       	ldi	r31, 0x0F	; 15
    cfd0:	df 01       	movw	r26, r30
    cfd2:	9c 01       	movw	r18, r24
    cfd4:	1d 92       	st	X+, r1
    cfd6:	21 50       	subi	r18, 0x01	; 1
    cfd8:	30 40       	sbci	r19, 0x00	; 0
    cfda:	e1 f7       	brne	.-8      	; 0xcfd4 <_Z12Reset_Bufferv+0x24>
    cfdc:	08 95       	ret

0000cfde <_GLOBAL__sub_I_g_uTick>:
    cfde:	24 e0       	ldi	r18, 0x04	; 4
    cfe0:	44 e1       	ldi	r20, 0x14	; 20
    cfe2:	67 e2       	ldi	r22, 0x27	; 39
    cfe4:	83 ec       	ldi	r24, 0xC3	; 195
    cfe6:	9c e0       	ldi	r25, 0x0C	; 12
    cfe8:	0e 94 ab d9 	call	0x1b356	; 0x1b356 <_ZN17LiquidCrystal_I2CC1Ehhh>
    cfec:	29 e4       	ldi	r18, 0x49	; 73
    cfee:	38 e1       	ldi	r19, 0x18	; 24
    cff0:	42 e0       	ldi	r20, 0x02	; 2
    cff2:	65 e3       	ldi	r22, 0x35	; 53
    cff4:	8b e7       	ldi	r24, 0x7B	; 123
    cff6:	9c e0       	ldi	r25, 0x0C	; 12
    cff8:	0c 94 f3 dc 	jmp	0x1b9e6	; 0x1b9e6 <_ZN7RH_RF95C1EhhR12RHGenericSPI>

0000cffc <_Z14Lora_Data_Sendh>:
    cffc:	cf 93       	push	r28
    cffe:	c8 2f       	mov	r28, r24
    d000:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d004:	81 30       	cpi	r24, 0x01	; 1
    d006:	89 f4       	brne	.+34     	; 0xd02a <_Z14Lora_Data_Sendh+0x2e>
    d008:	69 e6       	ldi	r22, 0x69	; 105
    d00a:	74 e2       	ldi	r23, 0x24	; 36
    d00c:	86 ec       	ldi	r24, 0xC6	; 198
    d00e:	94 e1       	ldi	r25, 0x14	; 20
    d010:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d014:	4a e0       	ldi	r20, 0x0A	; 10
    d016:	50 e0       	ldi	r21, 0x00	; 0
    d018:	6c 2f       	mov	r22, r28
    d01a:	86 ec       	ldi	r24, 0xC6	; 198
    d01c:	94 e1       	ldi	r25, 0x14	; 20
    d01e:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
    d022:	86 ec       	ldi	r24, 0xC6	; 198
    d024:	94 e1       	ldi	r25, 0x14	; 20
    d026:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    d02a:	4c 2f       	mov	r20, r28
    d02c:	65 ef       	ldi	r22, 0xF5	; 245
    d02e:	73 e1       	ldi	r23, 0x13	; 19
    d030:	8b e7       	ldi	r24, 0x7B	; 123
    d032:	9c e0       	ldi	r25, 0x0C	; 12
    d034:	0e 94 e6 de 	call	0x1bdcc	; 0x1bdcc <_ZN7RH_RF954sendEPKhh>
    d038:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d03c:	81 30       	cpi	r24, 0x01	; 1
    d03e:	51 f4       	brne	.+20     	; 0xd054 <_Z14Lora_Data_Sendh+0x58>
    d040:	6c e5       	ldi	r22, 0x5C	; 92
    d042:	74 e2       	ldi	r23, 0x24	; 36
    d044:	86 ec       	ldi	r24, 0xC6	; 198
    d046:	94 e1       	ldi	r25, 0x14	; 20
    d048:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d04c:	86 ec       	ldi	r24, 0xC6	; 198
    d04e:	94 e1       	ldi	r25, 0x14	; 20
    d050:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    d054:	64 ef       	ldi	r22, 0xF4	; 244
    d056:	71 e0       	ldi	r23, 0x01	; 1
    d058:	8b e7       	ldi	r24, 0x7B	; 123
    d05a:	9c e0       	ldi	r25, 0x0C	; 12
    d05c:	0e 94 52 db 	call	0x1b6a4	; 0x1b6a4 <_ZN15RHGenericDriver14waitPacketSentEj>
    d060:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d064:	81 30       	cpi	r24, 0x01	; 1
    d066:	39 f4       	brne	.+14     	; 0xd076 <_Z14Lora_Data_Sendh+0x7a>
    d068:	62 e5       	ldi	r22, 0x52	; 82
    d06a:	74 e2       	ldi	r23, 0x24	; 36
    d06c:	86 ec       	ldi	r24, 0xC6	; 198
    d06e:	94 e1       	ldi	r25, 0x14	; 20
    d070:	cf 91       	pop	r28
    d072:	0c 94 ae d4 	jmp	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d076:	cf 91       	pop	r28
    d078:	08 95       	ret

0000d07a <_Z15Send_AT_CommandPcS_S_jh>:
    d07a:	4f 92       	push	r4
    d07c:	5f 92       	push	r5
    d07e:	6f 92       	push	r6
    d080:	7f 92       	push	r7
    d082:	8f 92       	push	r8
    d084:	9f 92       	push	r9
    d086:	af 92       	push	r10
    d088:	bf 92       	push	r11
    d08a:	cf 92       	push	r12
    d08c:	df 92       	push	r13
    d08e:	ef 92       	push	r14
    d090:	ff 92       	push	r15
    d092:	0f 93       	push	r16
    d094:	1f 93       	push	r17
    d096:	cf 93       	push	r28
    d098:	df 93       	push	r29
    d09a:	1f 92       	push	r1
    d09c:	1f 92       	push	r1
    d09e:	cd b7       	in	r28, 0x3d	; 61
    d0a0:	de b7       	in	r29, 0x3e	; 62
    d0a2:	5c 01       	movw	r10, r24
    d0a4:	7b 01       	movw	r14, r22
    d0a6:	6a 01       	movw	r12, r20
    d0a8:	89 01       	movw	r16, r18
    d0aa:	89 2b       	or	r24, r25
    d0ac:	31 f0       	breq	.+12     	; 0xd0ba <_Z15Send_AT_CommandPcS_S_jh+0x40>
    d0ae:	64 e6       	ldi	r22, 0x64	; 100
    d0b0:	70 e0       	ldi	r23, 0x00	; 0
    d0b2:	80 e0       	ldi	r24, 0x00	; 0
    d0b4:	90 e0       	ldi	r25, 0x00	; 0
    d0b6:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    d0ba:	10 93 e3 0c 	sts	0x0CE3, r17	; 0x800ce3 <Interrupt_Time_Out+0x1>
    d0be:	00 93 e2 0c 	sts	0x0CE2, r16	; 0x800ce2 <Interrupt_Time_Out>
    d0c2:	a1 14       	cp	r10, r1
    d0c4:	b1 04       	cpc	r11, r1
    d0c6:	31 f0       	breq	.+12     	; 0xd0d4 <_Z15Send_AT_CommandPcS_S_jh+0x5a>
    d0c8:	73 df       	rcall	.-282    	; 0xcfb0 <_Z12Reset_Bufferv>
    d0ca:	b5 01       	movw	r22, r10
    d0cc:	83 e8       	ldi	r24, 0x83	; 131
    d0ce:	96 e1       	ldi	r25, 0x16	; 22
    d0d0:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
    d0d4:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    d0d8:	4b 01       	movw	r8, r22
    d0da:	5c 01       	movw	r10, r24
    d0dc:	28 01       	movw	r4, r16
    d0de:	61 2c       	mov	r6, r1
    d0e0:	71 2c       	mov	r7, r1
    d0e2:	b7 01       	movw	r22, r14
    d0e4:	80 ed       	ldi	r24, 0xD0	; 208
    d0e6:	9f e0       	ldi	r25, 0x0F	; 15
    d0e8:	c1 14       	cp	r12, r1
    d0ea:	d1 04       	cpc	r13, r1
    d0ec:	39 f0       	breq	.+14     	; 0xd0fc <_Z15Send_AT_CommandPcS_S_jh+0x82>
    d0ee:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    d0f2:	89 2b       	or	r24, r25
    d0f4:	b9 f4       	brne	.+46     	; 0xd124 <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    d0f6:	b6 01       	movw	r22, r12
    d0f8:	80 ed       	ldi	r24, 0xD0	; 208
    d0fa:	9f e0       	ldi	r25, 0x0F	; 15
    d0fc:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    d100:	89 2b       	or	r24, r25
    d102:	81 f4       	brne	.+32     	; 0xd124 <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    d104:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    d108:	dc 01       	movw	r26, r24
    d10a:	cb 01       	movw	r24, r22
    d10c:	88 19       	sub	r24, r8
    d10e:	99 09       	sbc	r25, r9
    d110:	aa 09       	sbc	r26, r10
    d112:	bb 09       	sbc	r27, r11
    d114:	84 15       	cp	r24, r4
    d116:	95 05       	cpc	r25, r5
    d118:	a6 05       	cpc	r26, r6
    d11a:	b7 05       	cpc	r27, r7
    d11c:	10 f3       	brcs	.-60     	; 0xd0e2 <_Z15Send_AT_CommandPcS_S_jh+0x68>
    d11e:	00 e0       	ldi	r16, 0x00	; 0
    d120:	10 e0       	ldi	r17, 0x00	; 0
    d122:	02 c0       	rjmp	.+4      	; 0xd128 <_Z15Send_AT_CommandPcS_S_jh+0xae>
    d124:	01 e0       	ldi	r16, 0x01	; 1
    d126:	10 e0       	ldi	r17, 0x00	; 0
    d128:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
    d12c:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    d130:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    d134:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    d138:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    d13c:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    d140:	84 e1       	ldi	r24, 0x14	; 20
    d142:	95 e0       	ldi	r25, 0x05	; 5
    d144:	90 93 e3 0c 	sts	0x0CE3, r25	; 0x800ce3 <Interrupt_Time_Out+0x1>
    d148:	80 93 e2 0c 	sts	0x0CE2, r24	; 0x800ce2 <Interrupt_Time_Out>
    d14c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d150:	81 30       	cpi	r24, 0x01	; 1
    d152:	51 f4       	brne	.+20     	; 0xd168 <_Z15Send_AT_CommandPcS_S_jh+0xee>
    d154:	60 ed       	ldi	r22, 0xD0	; 208
    d156:	7f e0       	ldi	r23, 0x0F	; 15
    d158:	86 ec       	ldi	r24, 0xC6	; 198
    d15a:	94 e1       	ldi	r25, 0x14	; 20
    d15c:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
    d160:	86 ec       	ldi	r24, 0xC6	; 198
    d162:	94 e1       	ldi	r25, 0x14	; 20
    d164:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    d168:	64 e6       	ldi	r22, 0x64	; 100
    d16a:	70 e0       	ldi	r23, 0x00	; 0
    d16c:	80 e0       	ldi	r24, 0x00	; 0
    d16e:	90 e0       	ldi	r25, 0x00	; 0
    d170:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    d174:	80 91 e1 0c 	lds	r24, 0x0CE1	; 0x800ce1 <Reading_Time>
    d178:	81 11       	cpse	r24, r1
    d17a:	0a c0       	rjmp	.+20     	; 0xd190 <_Z15Send_AT_CommandPcS_S_jh+0x116>
    d17c:	84 ed       	ldi	r24, 0xD4	; 212
    d17e:	93 e0       	ldi	r25, 0x03	; 3
    d180:	e0 ed       	ldi	r30, 0xD0	; 208
    d182:	ff e0       	ldi	r31, 0x0F	; 15
    d184:	df 01       	movw	r26, r30
    d186:	9c 01       	movw	r18, r24
    d188:	1d 92       	st	X+, r1
    d18a:	21 50       	subi	r18, 0x01	; 1
    d18c:	30 40       	sbci	r19, 0x00	; 0
    d18e:	e1 f7       	brne	.-8      	; 0xd188 <_Z15Send_AT_CommandPcS_S_jh+0x10e>
    d190:	0e 94 ce 7e 	call	0xfd9c	; 0xfd9c <_Z17Clear_Serial_Datav>
    d194:	01 15       	cp	r16, r1
    d196:	11 05       	cpc	r17, r1
    d198:	89 f4       	brne	.+34     	; 0xd1bc <_Z15Send_AT_CommandPcS_S_jh+0x142>
    d19a:	1a 82       	std	Y+2, r1	; 0x02
    d19c:	19 82       	std	Y+1, r1	; 0x01
    d19e:	69 e9       	ldi	r22, 0x99	; 153
    d1a0:	73 e0       	ldi	r23, 0x03	; 3
    d1a2:	86 ec       	ldi	r24, 0xC6	; 198
    d1a4:	94 e1       	ldi	r25, 0x14	; 20
    d1a6:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
    d1aa:	8a e1       	ldi	r24, 0x1A	; 26
    d1ac:	89 83       	std	Y+1, r24	; 0x01
    d1ae:	be 01       	movw	r22, r28
    d1b0:	6f 5f       	subi	r22, 0xFF	; 255
    d1b2:	7f 4f       	sbci	r23, 0xFF	; 255
    d1b4:	83 e8       	ldi	r24, 0x83	; 131
    d1b6:	96 e1       	ldi	r25, 0x16	; 22
    d1b8:	0e 94 a1 d4 	call	0x1a942	; 0x1a942 <_ZN5Print5printEPKc>
    d1bc:	80 2f       	mov	r24, r16
    d1be:	0f 90       	pop	r0
    d1c0:	0f 90       	pop	r0
    d1c2:	df 91       	pop	r29
    d1c4:	cf 91       	pop	r28
    d1c6:	1f 91       	pop	r17
    d1c8:	0f 91       	pop	r16
    d1ca:	ff 90       	pop	r15
    d1cc:	ef 90       	pop	r14
    d1ce:	df 90       	pop	r13
    d1d0:	cf 90       	pop	r12
    d1d2:	bf 90       	pop	r11
    d1d4:	af 90       	pop	r10
    d1d6:	9f 90       	pop	r9
    d1d8:	8f 90       	pop	r8
    d1da:	7f 90       	pop	r7
    d1dc:	6f 90       	pop	r6
    d1de:	5f 90       	pop	r5
    d1e0:	4f 90       	pop	r4
    d1e2:	08 95       	ret

0000d1e4 <_Z8Gsm_Initv>:
    d1e4:	0f 93       	push	r16
    d1e6:	e4 de       	rcall	.-568    	; 0xcfb0 <_Z12Reset_Bufferv>
    d1e8:	69 e3       	ldi	r22, 0x39	; 57
    d1ea:	74 e2       	ldi	r23, 0x24	; 36
    d1ec:	83 e8       	ldi	r24, 0x83	; 131
    d1ee:	96 e1       	ldi	r25, 0x16	; 22
    d1f0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d1f4:	02 e0       	ldi	r16, 0x02	; 2
    d1f6:	28 ee       	ldi	r18, 0xE8	; 232
    d1f8:	33 e0       	ldi	r19, 0x03	; 3
    d1fa:	40 e0       	ldi	r20, 0x00	; 0
    d1fc:	50 e0       	ldi	r21, 0x00	; 0
    d1fe:	6e e1       	ldi	r22, 0x1E	; 30
    d200:	73 e0       	ldi	r23, 0x03	; 3
    d202:	80 e0       	ldi	r24, 0x00	; 0
    d204:	90 e0       	ldi	r25, 0x00	; 0
    d206:	39 df       	rcall	.-398    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d208:	88 23       	and	r24, r24
    d20a:	f9 f0       	breq	.+62     	; 0xd24a <_Z8Gsm_Initv+0x66>
    d20c:	6b e2       	ldi	r22, 0x2B	; 43
    d20e:	74 e2       	ldi	r23, 0x24	; 36
    d210:	83 e8       	ldi	r24, 0x83	; 131
    d212:	96 e1       	ldi	r25, 0x16	; 22
    d214:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d218:	68 ee       	ldi	r22, 0xE8	; 232
    d21a:	73 e0       	ldi	r23, 0x03	; 3
    d21c:	80 e0       	ldi	r24, 0x00	; 0
    d21e:	90 e0       	ldi	r25, 0x00	; 0
    d220:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    d224:	c5 de       	rcall	.-630    	; 0xcfb0 <_Z12Reset_Bufferv>
    d226:	61 e2       	ldi	r22, 0x21	; 33
    d228:	74 e2       	ldi	r23, 0x24	; 36
    d22a:	83 e8       	ldi	r24, 0x83	; 131
    d22c:	96 e1       	ldi	r25, 0x16	; 22
    d22e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d232:	01 e0       	ldi	r16, 0x01	; 1
    d234:	28 eb       	ldi	r18, 0xB8	; 184
    d236:	3b e0       	ldi	r19, 0x0B	; 11
    d238:	40 e0       	ldi	r20, 0x00	; 0
    d23a:	50 e0       	ldi	r21, 0x00	; 0
    d23c:	6e e1       	ldi	r22, 0x1E	; 30
    d23e:	73 e0       	ldi	r23, 0x03	; 3
    d240:	80 e0       	ldi	r24, 0x00	; 0
    d242:	90 e0       	ldi	r25, 0x00	; 0
    d244:	1a df       	rcall	.-460    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d246:	81 e0       	ldi	r24, 0x01	; 1
    d248:	01 c0       	rjmp	.+2      	; 0xd24c <_Z8Gsm_Initv+0x68>
    d24a:	80 e0       	ldi	r24, 0x00	; 0
    d24c:	0f 91       	pop	r16
    d24e:	08 95       	ret

0000d250 <_Z20Check_Gsm_Connectionv>:
    d250:	0f 93       	push	r16
    d252:	ae de       	rcall	.-676    	; 0xcfb0 <_Z12Reset_Bufferv>
    d254:	66 e1       	ldi	r22, 0x16	; 22
    d256:	74 e2       	ldi	r23, 0x24	; 36
    d258:	83 e8       	ldi	r24, 0x83	; 131
    d25a:	96 e1       	ldi	r25, 0x16	; 22
    d25c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d260:	02 e0       	ldi	r16, 0x02	; 2
    d262:	28 e8       	ldi	r18, 0x88	; 136
    d264:	33 e1       	ldi	r19, 0x13	; 19
    d266:	40 e0       	ldi	r20, 0x00	; 0
    d268:	50 e0       	ldi	r21, 0x00	; 0
    d26a:	6e e1       	ldi	r22, 0x1E	; 30
    d26c:	73 e0       	ldi	r23, 0x03	; 3
    d26e:	80 e0       	ldi	r24, 0x00	; 0
    d270:	90 e0       	ldi	r25, 0x00	; 0
    d272:	03 df       	rcall	.-506    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d274:	20 ea       	ldi	r18, 0xA0	; 160
    d276:	3f e0       	ldi	r19, 0x0F	; 15
    d278:	40 e0       	ldi	r20, 0x00	; 0
    d27a:	50 e0       	ldi	r21, 0x00	; 0
    d27c:	6e e1       	ldi	r22, 0x1E	; 30
    d27e:	73 e0       	ldi	r23, 0x03	; 3
    d280:	80 e0       	ldi	r24, 0x00	; 0
    d282:	90 e0       	ldi	r25, 0x00	; 0
    d284:	fa de       	rcall	.-524    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d286:	94 de       	rcall	.-728    	; 0xcfb0 <_Z12Reset_Bufferv>
    d288:	6c e0       	ldi	r22, 0x0C	; 12
    d28a:	74 e2       	ldi	r23, 0x24	; 36
    d28c:	83 e8       	ldi	r24, 0x83	; 131
    d28e:	96 e1       	ldi	r25, 0x16	; 22
    d290:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d294:	28 eb       	ldi	r18, 0xB8	; 184
    d296:	3b e0       	ldi	r19, 0x0B	; 11
    d298:	40 e0       	ldi	r20, 0x00	; 0
    d29a:	50 e0       	ldi	r21, 0x00	; 0
    d29c:	6e e1       	ldi	r22, 0x1E	; 30
    d29e:	73 e0       	ldi	r23, 0x03	; 3
    d2a0:	80 e0       	ldi	r24, 0x00	; 0
    d2a2:	90 e0       	ldi	r25, 0x00	; 0
    d2a4:	ea de       	rcall	.-556    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d2a6:	84 de       	rcall	.-760    	; 0xcfb0 <_Z12Reset_Bufferv>
    d2a8:	63 e0       	ldi	r22, 0x03	; 3
    d2aa:	74 e2       	ldi	r23, 0x24	; 36
    d2ac:	83 e8       	ldi	r24, 0x83	; 131
    d2ae:	96 e1       	ldi	r25, 0x16	; 22
    d2b0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d2b4:	28 eb       	ldi	r18, 0xB8	; 184
    d2b6:	3b e0       	ldi	r19, 0x0B	; 11
    d2b8:	4c ea       	ldi	r20, 0xAC	; 172
    d2ba:	53 e0       	ldi	r21, 0x03	; 3
    d2bc:	67 eb       	ldi	r22, 0xB7	; 183
    d2be:	73 e0       	ldi	r23, 0x03	; 3
    d2c0:	80 e0       	ldi	r24, 0x00	; 0
    d2c2:	90 e0       	ldi	r25, 0x00	; 0
    d2c4:	da de       	rcall	.-588    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d2c6:	81 11       	cpse	r24, r1
    d2c8:	26 c0       	rjmp	.+76     	; 0xd316 <_Z20Check_Gsm_Connectionv+0xc6>
    d2ca:	68 eb       	ldi	r22, 0xB8	; 184
    d2cc:	7b e0       	ldi	r23, 0x0B	; 11
    d2ce:	80 e0       	ldi	r24, 0x00	; 0
    d2d0:	90 e0       	ldi	r25, 0x00	; 0
    d2d2:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    d2d6:	6c de       	rcall	.-808    	; 0xcfb0 <_Z12Reset_Bufferv>
    d2d8:	69 ef       	ldi	r22, 0xF9	; 249
    d2da:	73 e2       	ldi	r23, 0x23	; 35
    d2dc:	83 e8       	ldi	r24, 0x83	; 131
    d2de:	96 e1       	ldi	r25, 0x16	; 22
    d2e0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d2e4:	28 eb       	ldi	r18, 0xB8	; 184
    d2e6:	3b e0       	ldi	r19, 0x0B	; 11
    d2e8:	40 e0       	ldi	r20, 0x00	; 0
    d2ea:	50 e0       	ldi	r21, 0x00	; 0
    d2ec:	6e e1       	ldi	r22, 0x1E	; 30
    d2ee:	73 e0       	ldi	r23, 0x03	; 3
    d2f0:	80 e0       	ldi	r24, 0x00	; 0
    d2f2:	90 e0       	ldi	r25, 0x00	; 0
    d2f4:	c2 de       	rcall	.-636    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d2f6:	5c de       	rcall	.-840    	; 0xcfb0 <_Z12Reset_Bufferv>
    d2f8:	60 ef       	ldi	r22, 0xF0	; 240
    d2fa:	73 e2       	ldi	r23, 0x23	; 35
    d2fc:	83 e8       	ldi	r24, 0x83	; 131
    d2fe:	96 e1       	ldi	r25, 0x16	; 22
    d300:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d304:	28 eb       	ldi	r18, 0xB8	; 184
    d306:	3b e0       	ldi	r19, 0x0B	; 11
    d308:	4c ea       	ldi	r20, 0xAC	; 172
    d30a:	53 e0       	ldi	r21, 0x03	; 3
    d30c:	67 eb       	ldi	r22, 0xB7	; 183
    d30e:	73 e0       	ldi	r23, 0x03	; 3
    d310:	80 e0       	ldi	r24, 0x00	; 0
    d312:	90 e0       	ldi	r25, 0x00	; 0
    d314:	b2 de       	rcall	.-668    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d316:	68 ee       	ldi	r22, 0xE8	; 232
    d318:	73 e0       	ldi	r23, 0x03	; 3
    d31a:	80 e0       	ldi	r24, 0x00	; 0
    d31c:	90 e0       	ldi	r25, 0x00	; 0
    d31e:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    d322:	46 de       	rcall	.-884    	; 0xcfb0 <_Z12Reset_Bufferv>
    d324:	65 ee       	ldi	r22, 0xE5	; 229
    d326:	73 e2       	ldi	r23, 0x23	; 35
    d328:	83 e8       	ldi	r24, 0x83	; 131
    d32a:	96 e1       	ldi	r25, 0x16	; 22
    d32c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d330:	02 e0       	ldi	r16, 0x02	; 2
    d332:	28 eb       	ldi	r18, 0xB8	; 184
    d334:	3b e0       	ldi	r19, 0x0B	; 11
    d336:	40 e0       	ldi	r20, 0x00	; 0
    d338:	50 e0       	ldi	r21, 0x00	; 0
    d33a:	6e e1       	ldi	r22, 0x1E	; 30
    d33c:	73 e0       	ldi	r23, 0x03	; 3
    d33e:	80 e0       	ldi	r24, 0x00	; 0
    d340:	90 e0       	ldi	r25, 0x00	; 0
    d342:	9b de       	rcall	.-714    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d344:	35 de       	rcall	.-918    	; 0xcfb0 <_Z12Reset_Bufferv>
    d346:	6b ed       	ldi	r22, 0xDB	; 219
    d348:	73 e2       	ldi	r23, 0x23	; 35
    d34a:	83 e8       	ldi	r24, 0x83	; 131
    d34c:	96 e1       	ldi	r25, 0x16	; 22
    d34e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d352:	28 eb       	ldi	r18, 0xB8	; 184
    d354:	3b e0       	ldi	r19, 0x0B	; 11
    d356:	42 ec       	ldi	r20, 0xC2	; 194
    d358:	53 e0       	ldi	r21, 0x03	; 3
    d35a:	6e ec       	ldi	r22, 0xCE	; 206
    d35c:	73 e0       	ldi	r23, 0x03	; 3
    d35e:	80 e0       	ldi	r24, 0x00	; 0
    d360:	90 e0       	ldi	r25, 0x00	; 0
    d362:	8b de       	rcall	.-746    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d364:	81 11       	cpse	r24, r1
    d366:	2b c0       	rjmp	.+86     	; 0xd3be <_Z20Check_Gsm_Connectionv+0x16e>
    d368:	68 ee       	ldi	r22, 0xE8	; 232
    d36a:	73 e0       	ldi	r23, 0x03	; 3
    d36c:	80 e0       	ldi	r24, 0x00	; 0
    d36e:	90 e0       	ldi	r25, 0x00	; 0
    d370:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    d374:	1d de       	rcall	.-966    	; 0xcfb0 <_Z12Reset_Bufferv>
    d376:	60 ed       	ldi	r22, 0xD0	; 208
    d378:	73 e2       	ldi	r23, 0x23	; 35
    d37a:	83 e8       	ldi	r24, 0x83	; 131
    d37c:	96 e1       	ldi	r25, 0x16	; 22
    d37e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d382:	28 eb       	ldi	r18, 0xB8	; 184
    d384:	3b e0       	ldi	r19, 0x0B	; 11
    d386:	40 e0       	ldi	r20, 0x00	; 0
    d388:	50 e0       	ldi	r21, 0x00	; 0
    d38a:	6e e1       	ldi	r22, 0x1E	; 30
    d38c:	73 e0       	ldi	r23, 0x03	; 3
    d38e:	80 e0       	ldi	r24, 0x00	; 0
    d390:	90 e0       	ldi	r25, 0x00	; 0
    d392:	73 de       	rcall	.-794    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d394:	0d de       	rcall	.-998    	; 0xcfb0 <_Z12Reset_Bufferv>
    d396:	66 ec       	ldi	r22, 0xC6	; 198
    d398:	73 e2       	ldi	r23, 0x23	; 35
    d39a:	83 e8       	ldi	r24, 0x83	; 131
    d39c:	96 e1       	ldi	r25, 0x16	; 22
    d39e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3a2:	28 eb       	ldi	r18, 0xB8	; 184
    d3a4:	3b e0       	ldi	r19, 0x0B	; 11
    d3a6:	42 ec       	ldi	r20, 0xC2	; 194
    d3a8:	53 e0       	ldi	r21, 0x03	; 3
    d3aa:	6e ec       	ldi	r22, 0xCE	; 206
    d3ac:	73 e0       	ldi	r23, 0x03	; 3
    d3ae:	80 e0       	ldi	r24, 0x00	; 0
    d3b0:	90 e0       	ldi	r25, 0x00	; 0
    d3b2:	63 de       	rcall	.-826    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d3b4:	91 e0       	ldi	r25, 0x01	; 1
    d3b6:	81 11       	cpse	r24, r1
    d3b8:	03 c0       	rjmp	.+6      	; 0xd3c0 <_Z20Check_Gsm_Connectionv+0x170>
    d3ba:	90 e0       	ldi	r25, 0x00	; 0
    d3bc:	01 c0       	rjmp	.+2      	; 0xd3c0 <_Z20Check_Gsm_Connectionv+0x170>
    d3be:	91 e0       	ldi	r25, 0x01	; 1
    d3c0:	89 2f       	mov	r24, r25
    d3c2:	0f 91       	pop	r16
    d3c4:	08 95       	ret

0000d3c6 <_Z17Get_Operator_NamePc>:
    d3c6:	0f 93       	push	r16
    d3c8:	cf 93       	push	r28
    d3ca:	df 93       	push	r29
    d3cc:	ec 01       	movw	r28, r24
    d3ce:	f0 dd       	rcall	.-1056   	; 0xcfb0 <_Z12Reset_Bufferv>
    d3d0:	6d eb       	ldi	r22, 0xBD	; 189
    d3d2:	73 e2       	ldi	r23, 0x23	; 35
    d3d4:	83 e8       	ldi	r24, 0x83	; 131
    d3d6:	96 e1       	ldi	r25, 0x16	; 22
    d3d8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3dc:	02 e0       	ldi	r16, 0x02	; 2
    d3de:	28 eb       	ldi	r18, 0xB8	; 184
    d3e0:	3b e0       	ldi	r19, 0x0B	; 11
    d3e2:	40 e0       	ldi	r20, 0x00	; 0
    d3e4:	50 e0       	ldi	r21, 0x00	; 0
    d3e6:	6e e1       	ldi	r22, 0x1E	; 30
    d3e8:	73 e0       	ldi	r23, 0x03	; 3
    d3ea:	80 e0       	ldi	r24, 0x00	; 0
    d3ec:	90 e0       	ldi	r25, 0x00	; 0
    d3ee:	45 de       	rcall	.-886    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d3f0:	62 e6       	ldi	r22, 0x62	; 98
    d3f2:	7f e0       	ldi	r23, 0x0F	; 15
    d3f4:	ce 01       	movw	r24, r28
    d3f6:	df 91       	pop	r29
    d3f8:	cf 91       	pop	r28
    d3fa:	0f 91       	pop	r16
    d3fc:	0c 94 3f ed 	jmp	0x1da7e	; 0x1da7e <strcpy>

0000d400 <_Z12Gprs_ConnectPc>:
    d400:	ef 92       	push	r14
    d402:	ff 92       	push	r15
    d404:	0f 93       	push	r16
    d406:	cf 93       	push	r28
    d408:	df 93       	push	r29
    d40a:	cd b7       	in	r28, 0x3d	; 61
    d40c:	de b7       	in	r29, 0x3e	; 62
    d40e:	c4 56       	subi	r28, 0x64	; 100
    d410:	d1 09       	sbc	r29, r1
    d412:	0f b6       	in	r0, 0x3f	; 63
    d414:	f8 94       	cli
    d416:	de bf       	out	0x3e, r29	; 62
    d418:	0f be       	out	0x3f, r0	; 63
    d41a:	cd bf       	out	0x3d, r28	; 61
    d41c:	85 ea       	ldi	r24, 0xA5	; 165
    d41e:	9d e0       	ldi	r25, 0x0D	; 13
    d420:	9f 93       	push	r25
    d422:	8f 93       	push	r24
    d424:	8a ed       	ldi	r24, 0xDA	; 218
    d426:	93 e0       	ldi	r25, 0x03	; 3
    d428:	9f 93       	push	r25
    d42a:	8f 93       	push	r24
    d42c:	ce 01       	movw	r24, r28
    d42e:	01 96       	adiw	r24, 0x01	; 1
    d430:	7c 01       	movw	r14, r24
    d432:	9f 93       	push	r25
    d434:	8f 93       	push	r24
    d436:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
    d43a:	01 e0       	ldi	r16, 0x01	; 1
    d43c:	28 ee       	ldi	r18, 0xE8	; 232
    d43e:	33 e0       	ldi	r19, 0x03	; 3
    d440:	40 e0       	ldi	r20, 0x00	; 0
    d442:	50 e0       	ldi	r21, 0x00	; 0
    d444:	6e e1       	ldi	r22, 0x1E	; 30
    d446:	73 e0       	ldi	r23, 0x03	; 3
    d448:	c7 01       	movw	r24, r14
    d44a:	17 de       	rcall	.-978    	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d44c:	64 e9       	ldi	r22, 0x94	; 148
    d44e:	73 e2       	ldi	r23, 0x23	; 35
    d450:	86 ec       	ldi	r24, 0xC6	; 198
    d452:	94 e1       	ldi	r25, 0x14	; 20
    d454:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d458:	0f 90       	pop	r0
    d45a:	0f 90       	pop	r0
    d45c:	0f 90       	pop	r0
    d45e:	0f 90       	pop	r0
    d460:	0f 90       	pop	r0
    d462:	0f 90       	pop	r0
    d464:	81 e0       	ldi	r24, 0x01	; 1
    d466:	cc 59       	subi	r28, 0x9C	; 156
    d468:	df 4f       	sbci	r29, 0xFF	; 255
    d46a:	0f b6       	in	r0, 0x3f	; 63
    d46c:	f8 94       	cli
    d46e:	de bf       	out	0x3e, r29	; 62
    d470:	0f be       	out	0x3f, r0	; 63
    d472:	cd bf       	out	0x3d, r28	; 61
    d474:	df 91       	pop	r29
    d476:	cf 91       	pop	r28
    d478:	0f 91       	pop	r16
    d47a:	ff 90       	pop	r15
    d47c:	ef 90       	pop	r14
    d47e:	08 95       	ret

0000d480 <_Z12MQTT_PublishPhS_>:
    d480:	af 92       	push	r10
    d482:	bf 92       	push	r11
    d484:	cf 92       	push	r12
    d486:	df 92       	push	r13
    d488:	ef 92       	push	r14
    d48a:	ff 92       	push	r15
    d48c:	0f 93       	push	r16
    d48e:	1f 93       	push	r17
    d490:	cf 93       	push	r28
    d492:	df 93       	push	r29
    d494:	cd b7       	in	r28, 0x3d	; 61
    d496:	de b7       	in	r29, 0x3e	; 62
    d498:	6e 97       	sbiw	r28, 0x1e	; 30
    d49a:	0f b6       	in	r0, 0x3f	; 63
    d49c:	f8 94       	cli
    d49e:	de bf       	out	0x3e, r29	; 62
    d4a0:	0f be       	out	0x3f, r0	; 63
    d4a2:	cd bf       	out	0x3d, r28	; 61
    d4a4:	5c 01       	movw	r10, r24
    d4a6:	6b 01       	movw	r12, r22
    d4a8:	1e e1       	ldi	r17, 0x1E	; 30
    d4aa:	ce 01       	movw	r24, r28
    d4ac:	01 96       	adiw	r24, 0x01	; 1
    d4ae:	7c 01       	movw	r14, r24
    d4b0:	fc 01       	movw	r30, r24
    d4b2:	81 2f       	mov	r24, r17
    d4b4:	11 92       	st	Z+, r1
    d4b6:	8a 95       	dec	r24
    d4b8:	e9 f7       	brne	.-6      	; 0xd4b4 <_Z12MQTT_PublishPhS_+0x34>
    d4ba:	f5 01       	movw	r30, r10
    d4bc:	01 90       	ld	r0, Z+
    d4be:	00 20       	and	r0, r0
    d4c0:	e9 f7       	brne	.-6      	; 0xd4bc <_Z12MQTT_PublishPhS_+0x3c>
    d4c2:	31 97       	sbiw	r30, 0x01	; 1
    d4c4:	ea 19       	sub	r30, r10
    d4c6:	fb 09       	sbc	r31, r11
    d4c8:	ff 93       	push	r31
    d4ca:	ef 93       	push	r30
    d4cc:	81 ef       	ldi	r24, 0xF1	; 241
    d4ce:	93 e0       	ldi	r25, 0x03	; 3
    d4d0:	9f 93       	push	r25
    d4d2:	8f 93       	push	r24
    d4d4:	ff 92       	push	r15
    d4d6:	ef 92       	push	r14
    d4d8:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
    d4dc:	02 e0       	ldi	r16, 0x02	; 2
    d4de:	28 eb       	ldi	r18, 0xB8	; 184
    d4e0:	3b e0       	ldi	r19, 0x0B	; 11
    d4e2:	40 e0       	ldi	r20, 0x00	; 0
    d4e4:	50 e0       	ldi	r21, 0x00	; 0
    d4e6:	64 e0       	ldi	r22, 0x04	; 4
    d4e8:	74 e0       	ldi	r23, 0x04	; 4
    d4ea:	c7 01       	movw	r24, r14
    d4ec:	c6 dd       	rcall	.-1140   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d4ee:	0f 90       	pop	r0
    d4f0:	0f 90       	pop	r0
    d4f2:	0f 90       	pop	r0
    d4f4:	0f 90       	pop	r0
    d4f6:	0f 90       	pop	r0
    d4f8:	0f 90       	pop	r0
    d4fa:	81 11       	cpse	r24, r1
    d4fc:	22 c0       	rjmp	.+68     	; 0xd542 <_Z12MQTT_PublishPhS_+0xc2>
    d4fe:	58 dd       	rcall	.-1360   	; 0xcfb0 <_Z12Reset_Bufferv>
    d500:	6a e8       	ldi	r22, 0x8A	; 138
    d502:	73 e2       	ldi	r23, 0x23	; 35
    d504:	83 e8       	ldi	r24, 0x83	; 131
    d506:	96 e1       	ldi	r25, 0x16	; 22
    d508:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d50c:	01 e0       	ldi	r16, 0x01	; 1
    d50e:	28 ee       	ldi	r18, 0xE8	; 232
    d510:	33 e0       	ldi	r19, 0x03	; 3
    d512:	40 e0       	ldi	r20, 0x00	; 0
    d514:	50 e0       	ldi	r21, 0x00	; 0
    d516:	6e e1       	ldi	r22, 0x1E	; 30
    d518:	73 e0       	ldi	r23, 0x03	; 3
    d51a:	80 e0       	ldi	r24, 0x00	; 0
    d51c:	90 e0       	ldi	r25, 0x00	; 0
    d51e:	ad dd       	rcall	.-1190   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d520:	8e e1       	ldi	r24, 0x1E	; 30
    d522:	f7 01       	movw	r30, r14
    d524:	11 92       	st	Z+, r1
    d526:	8a 95       	dec	r24
    d528:	e9 f7       	brne	.-6      	; 0xd524 <_Z12MQTT_PublishPhS_+0xa4>
    d52a:	8a e1       	ldi	r24, 0x1A	; 26
    d52c:	89 83       	std	Y+1, r24	; 0x01
    d52e:	28 ec       	ldi	r18, 0xC8	; 200
    d530:	30 e0       	ldi	r19, 0x00	; 0
    d532:	40 e0       	ldi	r20, 0x00	; 0
    d534:	50 e0       	ldi	r21, 0x00	; 0
    d536:	6e e1       	ldi	r22, 0x1E	; 30
    d538:	73 e0       	ldi	r23, 0x03	; 3
    d53a:	c7 01       	movw	r24, r14
    d53c:	9e dd       	rcall	.-1220   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d53e:	80 e0       	ldi	r24, 0x00	; 0
    d540:	40 c0       	rjmp	.+128    	; 0xd5c2 <_Z12MQTT_PublishPhS_+0x142>
    d542:	36 dd       	rcall	.-1428   	; 0xcfb0 <_Z12Reset_Bufferv>
    d544:	b5 01       	movw	r22, r10
    d546:	83 e8       	ldi	r24, 0x83	; 131
    d548:	96 e1       	ldi	r25, 0x16	; 22
    d54a:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
    d54e:	f7 01       	movw	r30, r14
    d550:	11 92       	st	Z+, r1
    d552:	1a 95       	dec	r17
    d554:	e9 f7       	brne	.-6      	; 0xd550 <_Z12MQTT_PublishPhS_+0xd0>
    d556:	f6 01       	movw	r30, r12
    d558:	01 90       	ld	r0, Z+
    d55a:	00 20       	and	r0, r0
    d55c:	e9 f7       	brne	.-6      	; 0xd558 <_Z12MQTT_PublishPhS_+0xd8>
    d55e:	31 97       	sbiw	r30, 0x01	; 1
    d560:	ec 19       	sub	r30, r12
    d562:	fd 09       	sbc	r31, r13
    d564:	ff 93       	push	r31
    d566:	ef 93       	push	r30
    d568:	86 e0       	ldi	r24, 0x06	; 6
    d56a:	94 e0       	ldi	r25, 0x04	; 4
    d56c:	9f 93       	push	r25
    d56e:	8f 93       	push	r24
    d570:	ff 92       	push	r15
    d572:	ef 92       	push	r14
    d574:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
    d578:	02 e0       	ldi	r16, 0x02	; 2
    d57a:	28 eb       	ldi	r18, 0xB8	; 184
    d57c:	3b e0       	ldi	r19, 0x0B	; 11
    d57e:	40 e0       	ldi	r20, 0x00	; 0
    d580:	50 e0       	ldi	r21, 0x00	; 0
    d582:	64 e0       	ldi	r22, 0x04	; 4
    d584:	74 e0       	ldi	r23, 0x04	; 4
    d586:	c7 01       	movw	r24, r14
    d588:	78 dd       	rcall	.-1296   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d58a:	0f 90       	pop	r0
    d58c:	0f 90       	pop	r0
    d58e:	0f 90       	pop	r0
    d590:	0f 90       	pop	r0
    d592:	0f 90       	pop	r0
    d594:	0f 90       	pop	r0
    d596:	88 23       	and	r24, r24
    d598:	09 f4       	brne	.+2      	; 0xd59c <_Z12MQTT_PublishPhS_+0x11c>
    d59a:	b1 cf       	rjmp	.-158    	; 0xd4fe <_Z12MQTT_PublishPhS_+0x7e>
    d59c:	09 dd       	rcall	.-1518   	; 0xcfb0 <_Z12Reset_Bufferv>
    d59e:	b6 01       	movw	r22, r12
    d5a0:	83 e8       	ldi	r24, 0x83	; 131
    d5a2:	96 e1       	ldi	r25, 0x16	; 22
    d5a4:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
    d5a8:	28 eb       	ldi	r18, 0xB8	; 184
    d5aa:	3b e0       	ldi	r19, 0x0B	; 11
    d5ac:	40 e0       	ldi	r20, 0x00	; 0
    d5ae:	50 e0       	ldi	r21, 0x00	; 0
    d5b0:	6b e1       	ldi	r22, 0x1B	; 27
    d5b2:	74 e0       	ldi	r23, 0x04	; 4
    d5b4:	8a e2       	ldi	r24, 0x2A	; 42
    d5b6:	94 e0       	ldi	r25, 0x04	; 4
    d5b8:	60 dd       	rcall	.-1344   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d5ba:	88 23       	and	r24, r24
    d5bc:	09 f4       	brne	.+2      	; 0xd5c0 <_Z12MQTT_PublishPhS_+0x140>
    d5be:	9f cf       	rjmp	.-194    	; 0xd4fe <_Z12MQTT_PublishPhS_+0x7e>
    d5c0:	81 e0       	ldi	r24, 0x01	; 1
    d5c2:	6e 96       	adiw	r28, 0x1e	; 30
    d5c4:	0f b6       	in	r0, 0x3f	; 63
    d5c6:	f8 94       	cli
    d5c8:	de bf       	out	0x3e, r29	; 62
    d5ca:	0f be       	out	0x3f, r0	; 63
    d5cc:	cd bf       	out	0x3d, r28	; 61
    d5ce:	df 91       	pop	r29
    d5d0:	cf 91       	pop	r28
    d5d2:	1f 91       	pop	r17
    d5d4:	0f 91       	pop	r16
    d5d6:	ff 90       	pop	r15
    d5d8:	ef 90       	pop	r14
    d5da:	df 90       	pop	r13
    d5dc:	cf 90       	pop	r12
    d5de:	bf 90       	pop	r11
    d5e0:	af 90       	pop	r10
    d5e2:	08 95       	ret

0000d5e4 <_Z18_kGSM_SIG_STRENGTHv>:
    d5e4:	0f 93       	push	r16
    d5e6:	e4 dc       	rcall	.-1592   	; 0xcfb0 <_Z12Reset_Bufferv>
    d5e8:	6b e4       	ldi	r22, 0x4B	; 75
    d5ea:	74 e2       	ldi	r23, 0x24	; 36
    d5ec:	83 e8       	ldi	r24, 0x83	; 131
    d5ee:	96 e1       	ldi	r25, 0x16	; 22
    d5f0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d5f4:	01 e0       	ldi	r16, 0x01	; 1
    d5f6:	20 ed       	ldi	r18, 0xD0	; 208
    d5f8:	37 e0       	ldi	r19, 0x07	; 7
    d5fa:	40 e0       	ldi	r20, 0x00	; 0
    d5fc:	50 e0       	ldi	r21, 0x00	; 0
    d5fe:	6e e1       	ldi	r22, 0x1E	; 30
    d600:	73 e0       	ldi	r23, 0x03	; 3
    d602:	80 e0       	ldi	r24, 0x00	; 0
    d604:	90 e0       	ldi	r25, 0x00	; 0
    d606:	39 dd       	rcall	.-1422   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d608:	88 23       	and	r24, r24
    d60a:	81 f1       	breq	.+96     	; 0xd66c <_Z18_kGSM_SIG_STRENGTHv+0x88>
    d60c:	6d e3       	ldi	r22, 0x3D	; 61
    d60e:	74 e0       	ldi	r23, 0x04	; 4
    d610:	82 e6       	ldi	r24, 0x62	; 98
    d612:	9f e0       	ldi	r25, 0x0F	; 15
    d614:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    d618:	89 2b       	or	r24, r25
    d61a:	41 f1       	breq	.+80     	; 0xd66c <_Z18_kGSM_SIG_STRENGTHv+0x88>
    d61c:	80 e0       	ldi	r24, 0x00	; 0
    d61e:	90 e0       	ldi	r25, 0x00	; 0
    d620:	28 2f       	mov	r18, r24
    d622:	fc 01       	movw	r30, r24
    d624:	ee 59       	subi	r30, 0x9E	; 158
    d626:	f0 4f       	sbci	r31, 0xF0	; 240
    d628:	30 81       	ld	r19, Z
    d62a:	3b 32       	cpi	r19, 0x2B	; 43
    d62c:	31 f4       	brne	.+12     	; 0xd63a <_Z18_kGSM_SIG_STRENGTHv+0x56>
    d62e:	fc 01       	movw	r30, r24
    d630:	ea 59       	subi	r30, 0x9A	; 154
    d632:	f0 4f       	sbci	r31, 0xF0	; 240
    d634:	30 81       	ld	r19, Z
    d636:	3a 33       	cpi	r19, 0x3A	; 58
    d638:	29 f0       	breq	.+10     	; 0xd644 <_Z18_kGSM_SIG_STRENGTHv+0x60>
    d63a:	01 96       	adiw	r24, 0x01	; 1
    d63c:	84 31       	cpi	r24, 0x14	; 20
    d63e:	91 05       	cpc	r25, r1
    d640:	79 f7       	brne	.-34     	; 0xd620 <_Z18_kGSM_SIG_STRENGTHv+0x3c>
    d642:	24 e1       	ldi	r18, 0x14	; 20
    d644:	2a 5f       	subi	r18, 0xFA	; 250
    d646:	30 e0       	ldi	r19, 0x00	; 0
    d648:	f9 01       	movw	r30, r18
    d64a:	ee 59       	subi	r30, 0x9E	; 158
    d64c:	f0 4f       	sbci	r31, 0xF0	; 240
    d64e:	80 81       	ld	r24, Z
    d650:	f9 01       	movw	r30, r18
    d652:	ed 59       	subi	r30, 0x9D	; 157
    d654:	f0 4f       	sbci	r31, 0xF0	; 240
    d656:	90 81       	ld	r25, Z
    d658:	88 0f       	add	r24, r24
    d65a:	80 56       	subi	r24, 0x60	; 96
    d65c:	28 2f       	mov	r18, r24
    d65e:	22 0f       	add	r18, r18
    d660:	22 0f       	add	r18, r18
    d662:	82 0f       	add	r24, r18
    d664:	90 53       	subi	r25, 0x30	; 48
    d666:	89 0f       	add	r24, r25
    d668:	90 e0       	ldi	r25, 0x00	; 0
    d66a:	10 c0       	rjmp	.+32     	; 0xd68c <_Z18_kGSM_SIG_STRENGTHv+0xa8>
    d66c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d670:	81 30       	cpi	r24, 0x01	; 1
    d672:	51 f4       	brne	.+20     	; 0xd688 <_Z18_kGSM_SIG_STRENGTHv+0xa4>
    d674:	6c e3       	ldi	r22, 0x3C	; 60
    d676:	74 e2       	ldi	r23, 0x24	; 36
    d678:	86 ec       	ldi	r24, 0xC6	; 198
    d67a:	94 e1       	ldi	r25, 0x14	; 20
    d67c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    d680:	86 ec       	ldi	r24, 0xC6	; 198
    d682:	94 e1       	ldi	r25, 0x14	; 20
    d684:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    d688:	80 e0       	ldi	r24, 0x00	; 0
    d68a:	90 e0       	ldi	r25, 0x00	; 0
    d68c:	0f 91       	pop	r16
    d68e:	08 95       	ret

0000d690 <_Z17Is_MQTT_Connectedv>:
    d690:	0f 93       	push	r16
    d692:	8e dc       	rcall	.-1764   	; 0xcfb0 <_Z12Reset_Bufferv>
    d694:	6e e3       	ldi	r22, 0x3E	; 62
    d696:	73 e2       	ldi	r23, 0x23	; 35
    d698:	83 e8       	ldi	r24, 0x83	; 131
    d69a:	96 e1       	ldi	r25, 0x16	; 22
    d69c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d6a0:	01 e0       	ldi	r16, 0x01	; 1
    d6a2:	28 eb       	ldi	r18, 0xB8	; 184
    d6a4:	3b e0       	ldi	r19, 0x0B	; 11
    d6a6:	40 e0       	ldi	r20, 0x00	; 0
    d6a8:	50 e0       	ldi	r21, 0x00	; 0
    d6aa:	61 e4       	ldi	r22, 0x41	; 65
    d6ac:	74 e0       	ldi	r23, 0x04	; 4
    d6ae:	80 e0       	ldi	r24, 0x00	; 0
    d6b0:	90 e0       	ldi	r25, 0x00	; 0
    d6b2:	e3 dc       	rcall	.-1594   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d6b4:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d6b8:	88 23       	and	r24, r24
    d6ba:	69 f0       	breq	.+26     	; 0xd6d6 <_Z17Is_MQTT_Connectedv+0x46>
    d6bc:	91 30       	cpi	r25, 0x01	; 1
    d6be:	c1 f4       	brne	.+48     	; 0xd6f0 <_Z17Is_MQTT_Connectedv+0x60>
    d6c0:	66 e2       	ldi	r22, 0x26	; 38
    d6c2:	73 e2       	ldi	r23, 0x23	; 35
    d6c4:	86 ec       	ldi	r24, 0xC6	; 198
    d6c6:	94 e1       	ldi	r25, 0x14	; 20
    d6c8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d6cc:	86 ec       	ldi	r24, 0xC6	; 198
    d6ce:	94 e1       	ldi	r25, 0x14	; 20
    d6d0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    d6d4:	0d c0       	rjmp	.+26     	; 0xd6f0 <_Z17Is_MQTT_Connectedv+0x60>
    d6d6:	91 30       	cpi	r25, 0x01	; 1
    d6d8:	69 f4       	brne	.+26     	; 0xd6f4 <_Z17Is_MQTT_Connectedv+0x64>
    d6da:	6a e0       	ldi	r22, 0x0A	; 10
    d6dc:	73 e2       	ldi	r23, 0x23	; 35
    d6de:	86 ec       	ldi	r24, 0xC6	; 198
    d6e0:	94 e1       	ldi	r25, 0x14	; 20
    d6e2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d6e6:	86 ec       	ldi	r24, 0xC6	; 198
    d6e8:	94 e1       	ldi	r25, 0x14	; 20
    d6ea:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    d6ee:	02 c0       	rjmp	.+4      	; 0xd6f4 <_Z17Is_MQTT_Connectedv+0x64>
    d6f0:	81 e0       	ldi	r24, 0x01	; 1
    d6f2:	01 c0       	rjmp	.+2      	; 0xd6f6 <_Z17Is_MQTT_Connectedv+0x66>
    d6f4:	80 e0       	ldi	r24, 0x00	; 0
    d6f6:	0f 91       	pop	r16
    d6f8:	08 95       	ret

0000d6fa <_Z12MQTT_ConnectPKcS0_S0_>:
    d6fa:	af 92       	push	r10
    d6fc:	bf 92       	push	r11
    d6fe:	cf 92       	push	r12
    d700:	df 92       	push	r13
    d702:	ef 92       	push	r14
    d704:	ff 92       	push	r15
    d706:	0f 93       	push	r16
    d708:	1f 93       	push	r17
    d70a:	cf 93       	push	r28
    d70c:	df 93       	push	r29
    d70e:	cd b7       	in	r28, 0x3d	; 61
    d710:	de b7       	in	r29, 0x3e	; 62
    d712:	c8 57       	subi	r28, 0x78	; 120
    d714:	d1 09       	sbc	r29, r1
    d716:	0f b6       	in	r0, 0x3f	; 63
    d718:	f8 94       	cli
    d71a:	de bf       	out	0x3e, r29	; 62
    d71c:	0f be       	out	0x3f, r0	; 63
    d71e:	cd bf       	out	0x3d, r28	; 61
    d720:	d6 2e       	mov	r13, r22
    d722:	c7 2e       	mov	r12, r23
    d724:	b4 2e       	mov	r11, r20
    d726:	a5 2e       	mov	r10, r21
    d728:	18 e7       	ldi	r17, 0x78	; 120
    d72a:	9e 01       	movw	r18, r28
    d72c:	2f 5f       	subi	r18, 0xFF	; 255
    d72e:	3f 4f       	sbci	r19, 0xFF	; 255
    d730:	79 01       	movw	r14, r18
    d732:	f9 01       	movw	r30, r18
    d734:	21 2f       	mov	r18, r17
    d736:	11 92       	st	Z+, r1
    d738:	2a 95       	dec	r18
    d73a:	e9 f7       	brne	.-6      	; 0xd736 <_Z12MQTT_ConnectPKcS0_S0_+0x3c>
    d73c:	39 dc       	rcall	.-1934   	; 0xcfb0 <_Z12Reset_Bufferv>
    d73e:	6b e6       	ldi	r22, 0x6B	; 107
    d740:	73 e2       	ldi	r23, 0x23	; 35
    d742:	83 e8       	ldi	r24, 0x83	; 131
    d744:	96 e1       	ldi	r25, 0x16	; 22
    d746:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d74a:	02 e0       	ldi	r16, 0x02	; 2
    d74c:	28 eb       	ldi	r18, 0xB8	; 184
    d74e:	3b e0       	ldi	r19, 0x0B	; 11
    d750:	40 e0       	ldi	r20, 0x00	; 0
    d752:	50 e0       	ldi	r21, 0x00	; 0
    d754:	67 e5       	ldi	r22, 0x57	; 87
    d756:	74 e0       	ldi	r23, 0x04	; 4
    d758:	80 e0       	ldi	r24, 0x00	; 0
    d75a:	90 e0       	ldi	r25, 0x00	; 0
    d75c:	8e dc       	rcall	.-1764   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d75e:	28 dc       	rcall	.-1968   	; 0xcfb0 <_Z12Reset_Bufferv>
    d760:	6d e5       	ldi	r22, 0x5D	; 93
    d762:	73 e2       	ldi	r23, 0x23	; 35
    d764:	83 e8       	ldi	r24, 0x83	; 131
    d766:	96 e1       	ldi	r25, 0x16	; 22
    d768:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d76c:	28 eb       	ldi	r18, 0xB8	; 184
    d76e:	3b e0       	ldi	r19, 0x0B	; 11
    d770:	40 e0       	ldi	r20, 0x00	; 0
    d772:	50 e0       	ldi	r21, 0x00	; 0
    d774:	6e e1       	ldi	r22, 0x1E	; 30
    d776:	73 e0       	ldi	r23, 0x03	; 3
    d778:	80 e0       	ldi	r24, 0x00	; 0
    d77a:	90 e0       	ldi	r25, 0x00	; 0
    d77c:	7e dc       	rcall	.-1796   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d77e:	18 dc       	rcall	.-2000   	; 0xcfb0 <_Z12Reset_Bufferv>
    d780:	6f e4       	ldi	r22, 0x4F	; 79
    d782:	73 e2       	ldi	r23, 0x23	; 35
    d784:	83 e8       	ldi	r24, 0x83	; 131
    d786:	96 e1       	ldi	r25, 0x16	; 22
    d788:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    d78c:	28 eb       	ldi	r18, 0xB8	; 184
    d78e:	3b e0       	ldi	r19, 0x0B	; 11
    d790:	43 e6       	ldi	r20, 0x63	; 99
    d792:	54 e0       	ldi	r21, 0x04	; 4
    d794:	63 e7       	ldi	r22, 0x73	; 115
    d796:	74 e0       	ldi	r23, 0x04	; 4
    d798:	80 e0       	ldi	r24, 0x00	; 0
    d79a:	90 e0       	ldi	r25, 0x00	; 0
    d79c:	6e dc       	rcall	.-1828   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d79e:	82 e8       	ldi	r24, 0x82	; 130
    d7a0:	94 e0       	ldi	r25, 0x04	; 4
    d7a2:	9f 93       	push	r25
    d7a4:	8f 93       	push	r24
    d7a6:	89 e8       	ldi	r24, 0x89	; 137
    d7a8:	94 e0       	ldi	r25, 0x04	; 4
    d7aa:	9f 93       	push	r25
    d7ac:	8f 93       	push	r24
    d7ae:	ff 92       	push	r15
    d7b0:	ef 92       	push	r14
    d7b2:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
    d7b6:	01 e0       	ldi	r16, 0x01	; 1
    d7b8:	28 eb       	ldi	r18, 0xB8	; 184
    d7ba:	3b e0       	ldi	r19, 0x0B	; 11
    d7bc:	40 e0       	ldi	r20, 0x00	; 0
    d7be:	50 e0       	ldi	r21, 0x00	; 0
    d7c0:	6e e1       	ldi	r22, 0x1E	; 30
    d7c2:	73 e0       	ldi	r23, 0x03	; 3
    d7c4:	c7 01       	movw	r24, r14
    d7c6:	59 dc       	rcall	.-1870   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d7c8:	f7 01       	movw	r30, r14
    d7ca:	11 92       	st	Z+, r1
    d7cc:	1a 95       	dec	r17
    d7ce:	e9 f7       	brne	.-6      	; 0xd7ca <_Z12MQTT_ConnectPKcS0_S0_+0xd0>
    d7d0:	af 92       	push	r10
    d7d2:	bf 92       	push	r11
    d7d4:	cf 92       	push	r12
    d7d6:	df 92       	push	r13
    d7d8:	87 e0       	ldi	r24, 0x07	; 7
    d7da:	8f 93       	push	r24
    d7dc:	8b e5       	ldi	r24, 0x5B	; 91
    d7de:	8f 93       	push	r24
    d7e0:	8f e9       	ldi	r24, 0x9F	; 159
    d7e2:	94 e0       	ldi	r25, 0x04	; 4
    d7e4:	9f 93       	push	r25
    d7e6:	8f 93       	push	r24
    d7e8:	8d ea       	ldi	r24, 0xAD	; 173
    d7ea:	94 e0       	ldi	r25, 0x04	; 4
    d7ec:	9f 93       	push	r25
    d7ee:	8f 93       	push	r24
    d7f0:	ff 92       	push	r15
    d7f2:	ef 92       	push	r14
    d7f4:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
    d7f8:	28 e8       	ldi	r18, 0x88	; 136
    d7fa:	33 e1       	ldi	r19, 0x13	; 19
    d7fc:	40 e0       	ldi	r20, 0x00	; 0
    d7fe:	50 e0       	ldi	r21, 0x00	; 0
    d800:	6e e1       	ldi	r22, 0x1E	; 30
    d802:	73 e0       	ldi	r23, 0x03	; 3
    d804:	c7 01       	movw	r24, r14
    d806:	39 dc       	rcall	.-1934   	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    d808:	68 eb       	ldi	r22, 0xB8	; 184
    d80a:	7b e0       	ldi	r23, 0x0B	; 11
    d80c:	80 e0       	ldi	r24, 0x00	; 0
    d80e:	90 e0       	ldi	r25, 0x00	; 0
    d810:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    d814:	3d df       	rcall	.-390    	; 0xd690 <_Z17Is_MQTT_Connectedv>
    d816:	0f b6       	in	r0, 0x3f	; 63
    d818:	f8 94       	cli
    d81a:	de bf       	out	0x3e, r29	; 62
    d81c:	0f be       	out	0x3f, r0	; 63
    d81e:	cd bf       	out	0x3d, r28	; 61
    d820:	c8 58       	subi	r28, 0x88	; 136
    d822:	df 4f       	sbci	r29, 0xFF	; 255
    d824:	0f b6       	in	r0, 0x3f	; 63
    d826:	f8 94       	cli
    d828:	de bf       	out	0x3e, r29	; 62
    d82a:	0f be       	out	0x3f, r0	; 63
    d82c:	cd bf       	out	0x3d, r28	; 61
    d82e:	df 91       	pop	r29
    d830:	cf 91       	pop	r28
    d832:	1f 91       	pop	r17
    d834:	0f 91       	pop	r16
    d836:	ff 90       	pop	r15
    d838:	ef 90       	pop	r14
    d83a:	df 90       	pop	r13
    d83c:	cf 90       	pop	r12
    d83e:	bf 90       	pop	r11
    d840:	af 90       	pop	r10
    d842:	08 95       	ret

0000d844 <_Z9MQTT_Loopv>:
    d844:	83 e0       	ldi	r24, 0x03	; 3
    d846:	a8 d7       	rcall	.+3920   	; 0xe798 <_Z9Check_Simc>
    d848:	0e 94 21 60 	call	0xc042	; 0xc042 <_Z16Check_GSM_Signalv>
    d84c:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    d850:	81 30       	cpi	r24, 0x01	; 1
    d852:	39 f0       	breq	.+14     	; 0xd862 <_Z9MQTT_Loopv+0x1e>
    d854:	1d df       	rcall	.-454    	; 0xd690 <_Z17Is_MQTT_Connectedv>
    d856:	88 23       	and	r24, r24
    d858:	21 f0       	breq	.+8      	; 0xd862 <_Z9MQTT_Loopv+0x1e>
    d85a:	80 91 20 14 	lds	r24, 0x1420	; 0x801420 <_sRuble_Parameters+0x72>
    d85e:	81 30       	cpi	r24, 0x01	; 1
    d860:	11 f0       	breq	.+4      	; 0xd866 <_Z9MQTT_Loopv+0x22>
    d862:	80 e0       	ldi	r24, 0x00	; 0
    d864:	08 95       	ret
    d866:	81 e0       	ldi	r24, 0x01	; 1
    d868:	08 95       	ret

0000d86a <_Z16Lcd_Special_Charhhhh>:
    d86a:	df 92       	push	r13
    d86c:	ef 92       	push	r14
    d86e:	ff 92       	push	r15
    d870:	0f 93       	push	r16
    d872:	1f 93       	push	r17
    d874:	cf 93       	push	r28
    d876:	df 93       	push	r29
    d878:	cd b7       	in	r28, 0x3d	; 61
    d87a:	de b7       	in	r29, 0x3e	; 62
    d87c:	28 97       	sbiw	r28, 0x08	; 8
    d87e:	0f b6       	in	r0, 0x3f	; 63
    d880:	f8 94       	cli
    d882:	de bf       	out	0x3e, r29	; 62
    d884:	0f be       	out	0x3f, r0	; 63
    d886:	cd bf       	out	0x3d, r28	; 61
    d888:	f8 2e       	mov	r15, r24
    d88a:	e6 2e       	mov	r14, r22
    d88c:	d4 2e       	mov	r13, r20
    d88e:	8e 01       	movw	r16, r28
    d890:	0f 5f       	subi	r16, 0xFF	; 255
    d892:	1f 4f       	sbci	r17, 0xFF	; 255
    d894:	88 e0       	ldi	r24, 0x08	; 8
    d896:	f8 01       	movw	r30, r16
    d898:	11 92       	st	Z+, r1
    d89a:	8a 95       	dec	r24
    d89c:	e9 f7       	brne	.-6      	; 0xd898 <_Z16Lcd_Special_Charhhhh+0x2e>
    d89e:	82 2f       	mov	r24, r18
    d8a0:	90 e0       	ldi	r25, 0x00	; 0
    d8a2:	fc 01       	movw	r30, r24
    d8a4:	31 97       	sbiw	r30, 0x01	; 1
    d8a6:	ea 30       	cpi	r30, 0x0A	; 10
    d8a8:	f1 05       	cpc	r31, r1
    d8aa:	08 f0       	brcs	.+2      	; 0xd8ae <_Z16Lcd_Special_Charhhhh+0x44>
    d8ac:	86 c0       	rjmp	.+268    	; 0xd9ba <_Z16Lcd_Special_Charhhhh+0x150>
    d8ae:	88 27       	eor	r24, r24
    d8b0:	e3 52       	subi	r30, 0x23	; 35
    d8b2:	ff 4f       	sbci	r31, 0xFF	; 255
    d8b4:	8f 4f       	sbci	r24, 0xFF	; 255
    d8b6:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
    d8ba:	8f e1       	ldi	r24, 0x1F	; 31
    d8bc:	89 83       	std	Y+1, r24	; 0x01
    d8be:	81 e1       	ldi	r24, 0x11	; 17
    d8c0:	8a 83       	std	Y+2, r24	; 0x02
    d8c2:	8a e0       	ldi	r24, 0x0A	; 10
    d8c4:	58 c0       	rjmp	.+176    	; 0xd976 <_Z16Lcd_Special_Charhhhh+0x10c>
    d8c6:	9c e1       	ldi	r25, 0x1C	; 28
    d8c8:	99 83       	std	Y+1, r25	; 0x01
    d8ca:	80 e1       	ldi	r24, 0x10	; 16
    d8cc:	8a 83       	std	Y+2, r24	; 0x02
    d8ce:	28 e1       	ldi	r18, 0x18	; 24
    d8d0:	2b 83       	std	Y+3, r18	; 0x03
    d8d2:	8c 83       	std	Y+4, r24	; 0x04
    d8d4:	9d 83       	std	Y+5, r25	; 0x05
    d8d6:	0b c0       	rjmp	.+22     	; 0xd8ee <_Z16Lcd_Special_Charhhhh+0x84>
    d8d8:	8c e1       	ldi	r24, 0x1C	; 28
    d8da:	89 83       	std	Y+1, r24	; 0x01
    d8dc:	90 e1       	ldi	r25, 0x10	; 16
    d8de:	9a 83       	std	Y+2, r25	; 0x02
    d8e0:	28 e1       	ldi	r18, 0x18	; 24
    d8e2:	2b 83       	std	Y+3, r18	; 0x03
    d8e4:	9c 83       	std	Y+4, r25	; 0x04
    d8e6:	8d 83       	std	Y+5, r24	; 0x05
    d8e8:	84 e0       	ldi	r24, 0x04	; 4
    d8ea:	8f 83       	std	Y+7, r24	; 0x07
    d8ec:	84 e1       	ldi	r24, 0x14	; 20
    d8ee:	88 87       	std	Y+8, r24	; 0x08
    d8f0:	64 c0       	rjmp	.+200    	; 0xd9ba <_Z16Lcd_Special_Charhhhh+0x150>
    d8f2:	8c e1       	ldi	r24, 0x1C	; 28
    d8f4:	89 83       	std	Y+1, r24	; 0x01
    d8f6:	80 e1       	ldi	r24, 0x10	; 16
    d8f8:	8a 83       	std	Y+2, r24	; 0x02
    d8fa:	98 e1       	ldi	r25, 0x18	; 24
    d8fc:	9b 83       	std	Y+3, r25	; 0x03
    d8fe:	8c 83       	std	Y+4, r24	; 0x04
    d900:	8d e1       	ldi	r24, 0x1D	; 29
    d902:	8d 83       	std	Y+5, r24	; 0x05
    d904:	81 e0       	ldi	r24, 0x01	; 1
    d906:	8e 83       	std	Y+6, r24	; 0x06
    d908:	85 e0       	ldi	r24, 0x05	; 5
    d90a:	8f 83       	std	Y+7, r24	; 0x07
    d90c:	85 e1       	ldi	r24, 0x15	; 21
    d90e:	ef cf       	rjmp	.-34     	; 0xd8ee <_Z16Lcd_Special_Charhhhh+0x84>
    d910:	8c e1       	ldi	r24, 0x1C	; 28
    d912:	89 83       	std	Y+1, r24	; 0x01
    d914:	90 e1       	ldi	r25, 0x10	; 16
    d916:	9a 83       	std	Y+2, r25	; 0x02
    d918:	28 e1       	ldi	r18, 0x18	; 24
    d91a:	2b 83       	std	Y+3, r18	; 0x03
    d91c:	9c 83       	std	Y+4, r25	; 0x04
    d91e:	8d 83       	std	Y+5, r24	; 0x05
    d920:	85 e0       	ldi	r24, 0x05	; 5
    d922:	8e 83       	std	Y+6, r24	; 0x06
    d924:	92 e0       	ldi	r25, 0x02	; 2
    d926:	9f 83       	std	Y+7, r25	; 0x07
    d928:	e2 cf       	rjmp	.-60     	; 0xd8ee <_Z16Lcd_Special_Charhhhh+0x84>
    d92a:	9e e0       	ldi	r25, 0x0E	; 14
    d92c:	99 83       	std	Y+1, r25	; 0x01
    d92e:	81 e1       	ldi	r24, 0x11	; 17
    d930:	8a 83       	std	Y+2, r24	; 0x02
    d932:	8b 83       	std	Y+3, r24	; 0x03
    d934:	8c 83       	std	Y+4, r24	; 0x04
    d936:	8b e1       	ldi	r24, 0x1B	; 27
    d938:	8d 83       	std	Y+5, r24	; 0x05
    d93a:	25 e1       	ldi	r18, 0x15	; 21
    d93c:	2e 83       	std	Y+6, r18	; 0x06
    d93e:	8f 83       	std	Y+7, r24	; 0x07
    d940:	98 87       	std	Y+8, r25	; 0x08
    d942:	3b c0       	rjmp	.+118    	; 0xd9ba <_Z16Lcd_Special_Charhhhh+0x150>
    d944:	87 e0       	ldi	r24, 0x07	; 7
    d946:	89 83       	std	Y+1, r24	; 0x01
    d948:	89 e0       	ldi	r24, 0x09	; 9
    d94a:	8a 83       	std	Y+2, r24	; 0x02
    d94c:	81 e1       	ldi	r24, 0x11	; 17
    d94e:	8b 83       	std	Y+3, r24	; 0x03
    d950:	8c 83       	std	Y+4, r24	; 0x04
    d952:	8b e1       	ldi	r24, 0x1B	; 27
    d954:	8d 83       	std	Y+5, r24	; 0x05
    d956:	95 e1       	ldi	r25, 0x15	; 21
    d958:	9e 83       	std	Y+6, r25	; 0x06
    d95a:	8f 83       	std	Y+7, r24	; 0x07
    d95c:	8f e1       	ldi	r24, 0x1F	; 31
    d95e:	c7 cf       	rjmp	.-114    	; 0xd8ee <_Z16Lcd_Special_Charhhhh+0x84>
    d960:	84 e0       	ldi	r24, 0x04	; 4
    d962:	89 83       	std	Y+1, r24	; 0x01
    d964:	8a 83       	std	Y+2, r24	; 0x02
    d966:	8b 83       	std	Y+3, r24	; 0x03
    d968:	87 e0       	ldi	r24, 0x07	; 7
    d96a:	8c 83       	std	Y+4, r24	; 0x04
    d96c:	26 c0       	rjmp	.+76     	; 0xd9ba <_Z16Lcd_Special_Charhhhh+0x150>
    d96e:	8f e1       	ldi	r24, 0x1F	; 31
    d970:	89 83       	std	Y+1, r24	; 0x01
    d972:	8a 83       	std	Y+2, r24	; 0x02
    d974:	8e e0       	ldi	r24, 0x0E	; 14
    d976:	8b 83       	std	Y+3, r24	; 0x03
    d978:	84 e0       	ldi	r24, 0x04	; 4
    d97a:	8c 83       	std	Y+4, r24	; 0x04
    d97c:	8d 83       	std	Y+5, r24	; 0x05
    d97e:	8e 83       	std	Y+6, r24	; 0x06
    d980:	8f 83       	std	Y+7, r24	; 0x07
    d982:	1b c0       	rjmp	.+54     	; 0xd9ba <_Z16Lcd_Special_Charhhhh+0x150>
    d984:	80 91 f0 13 	lds	r24, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0x42>
    d988:	1f 92       	push	r1
    d98a:	8f 93       	push	r24
    d98c:	80 91 ef 13 	lds	r24, 0x13EF	; 0x8013ef <_sRuble_Parameters+0x41>
    d990:	1f 92       	push	r1
    d992:	8f 93       	push	r24
    d994:	8c ed       	ldi	r24, 0xDC	; 220
    d996:	94 e0       	ldi	r25, 0x04	; 4
    d998:	9f 93       	push	r25
    d99a:	8f 93       	push	r24
    d99c:	1f 93       	push	r17
    d99e:	0f 93       	push	r16
    d9a0:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
    d9a4:	2f e0       	ldi	r18, 0x0F	; 15
    d9a6:	40 e0       	ldi	r20, 0x00	; 0
    d9a8:	65 e0       	ldi	r22, 0x05	; 5
    d9aa:	c8 01       	movw	r24, r16
    d9ac:	d1 d8       	rcall	.-3678   	; 0xcb50 <_Z14Lcd_Print_BuffPchhh>
    d9ae:	0f b6       	in	r0, 0x3f	; 63
    d9b0:	f8 94       	cli
    d9b2:	de bf       	out	0x3e, r29	; 62
    d9b4:	0f be       	out	0x3f, r0	; 63
    d9b6:	cd bf       	out	0x3d, r28	; 61
    d9b8:	11 c0       	rjmp	.+34     	; 0xd9dc <_Z16Lcd_Special_Charhhhh+0x172>
    d9ba:	a8 01       	movw	r20, r16
    d9bc:	6f 2d       	mov	r22, r15
    d9be:	83 ec       	ldi	r24, 0xC3	; 195
    d9c0:	9c e0       	ldi	r25, 0x0C	; 12
    d9c2:	0e 94 43 da 	call	0x1b486	; 0x1b486 <_ZN17LiquidCrystal_I2C10createCharEhPh>
    d9c6:	4d 2d       	mov	r20, r13
    d9c8:	6e 2d       	mov	r22, r14
    d9ca:	83 ec       	ldi	r24, 0xC3	; 195
    d9cc:	9c e0       	ldi	r25, 0x0C	; 12
    d9ce:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d9d2:	6f 2d       	mov	r22, r15
    d9d4:	83 ec       	ldi	r24, 0xC3	; 195
    d9d6:	9c e0       	ldi	r25, 0x0C	; 12
    d9d8:	0e 94 6a da 	call	0x1b4d4	; 0x1b4d4 <_ZN17LiquidCrystal_I2C5writeEh>
    d9dc:	28 96       	adiw	r28, 0x08	; 8
    d9de:	0f b6       	in	r0, 0x3f	; 63
    d9e0:	f8 94       	cli
    d9e2:	de bf       	out	0x3e, r29	; 62
    d9e4:	0f be       	out	0x3f, r0	; 63
    d9e6:	cd bf       	out	0x3d, r28	; 61
    d9e8:	df 91       	pop	r29
    d9ea:	cf 91       	pop	r28
    d9ec:	1f 91       	pop	r17
    d9ee:	0f 91       	pop	r16
    d9f0:	ff 90       	pop	r15
    d9f2:	ef 90       	pop	r14
    d9f4:	df 90       	pop	r13
    d9f6:	08 95       	ret

0000d9f8 <_Z16Display_Update_1v>:
    d9f8:	ff 92       	push	r15
    d9fa:	0f 93       	push	r16
    d9fc:	1f 93       	push	r17
    d9fe:	cf 93       	push	r28
    da00:	df 93       	push	r29
    da02:	80 91 c2 0c 	lds	r24, 0x0CC2	; 0x800cc2 <Start_Display_In_Interrupt>
    da06:	81 11       	cpse	r24, r1
    da08:	7a c1       	rjmp	.+756    	; 0xdcfe <_Z16Display_Update_1v+0x306>
    da0a:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    da0e:	3e 2f       	mov	r19, r30
    da10:	32 70       	andi	r19, 0x02	; 2
    da12:	20 e0       	ldi	r18, 0x00	; 0
    da14:	40 e0       	ldi	r20, 0x00	; 0
    da16:	50 e0       	ldi	r21, 0x00	; 0
    da18:	60 e0       	ldi	r22, 0x00	; 0
    da1a:	70 e0       	ldi	r23, 0x00	; 0
    da1c:	90 e0       	ldi	r25, 0x00	; 0
    da1e:	a0 e0       	ldi	r26, 0x00	; 0
    da20:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    da24:	71 f0       	breq	.+28     	; 0xda42 <_Z16Display_Update_1v+0x4a>
    da26:	ed 7f       	andi	r30, 0xFD	; 253
    da28:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    da2c:	41 e0       	ldi	r20, 0x01	; 1
    da2e:	83 ec       	ldi	r24, 0xC3	; 195
    da30:	9c e0       	ldi	r25, 0x0C	; 12
    da32:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da36:	61 ee       	ldi	r22, 0xE1	; 225
    da38:	72 e2       	ldi	r23, 0x22	; 34
    da3a:	83 ec       	ldi	r24, 0xC3	; 195
    da3c:	9c e0       	ldi	r25, 0x0C	; 12
    da3e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    da42:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    da46:	3e 2f       	mov	r19, r30
    da48:	34 70       	andi	r19, 0x04	; 4
    da4a:	20 e0       	ldi	r18, 0x00	; 0
    da4c:	40 e0       	ldi	r20, 0x00	; 0
    da4e:	50 e0       	ldi	r21, 0x00	; 0
    da50:	60 e0       	ldi	r22, 0x00	; 0
    da52:	70 e0       	ldi	r23, 0x00	; 0
    da54:	80 e0       	ldi	r24, 0x00	; 0
    da56:	90 e0       	ldi	r25, 0x00	; 0
    da58:	a0 e0       	ldi	r26, 0x00	; 0
    da5a:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    da5e:	d1 f0       	breq	.+52     	; 0xda94 <_Z16Display_Update_1v+0x9c>
    da60:	eb 7f       	andi	r30, 0xFB	; 251
    da62:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    da66:	41 e0       	ldi	r20, 0x01	; 1
    da68:	83 ec       	ldi	r24, 0xC3	; 195
    da6a:	9c e0       	ldi	r25, 0x0C	; 12
    da6c:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da70:	6c ec       	ldi	r22, 0xCC	; 204
    da72:	72 e2       	ldi	r23, 0x22	; 34
    da74:	83 ec       	ldi	r24, 0xC3	; 195
    da76:	9c e0       	ldi	r25, 0x0C	; 12
    da78:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    da7c:	42 e0       	ldi	r20, 0x02	; 2
    da7e:	60 e0       	ldi	r22, 0x00	; 0
    da80:	83 ec       	ldi	r24, 0xC3	; 195
    da82:	9c e0       	ldi	r25, 0x0C	; 12
    da84:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da88:	67 eb       	ldi	r22, 0xB7	; 183
    da8a:	72 e2       	ldi	r23, 0x22	; 34
    da8c:	83 ec       	ldi	r24, 0xC3	; 195
    da8e:	9c e0       	ldi	r25, 0x0C	; 12
    da90:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    da94:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    da98:	3e 2f       	mov	r19, r30
    da9a:	38 70       	andi	r19, 0x08	; 8
    da9c:	20 e0       	ldi	r18, 0x00	; 0
    da9e:	40 e0       	ldi	r20, 0x00	; 0
    daa0:	50 e0       	ldi	r21, 0x00	; 0
    daa2:	60 e0       	ldi	r22, 0x00	; 0
    daa4:	70 e0       	ldi	r23, 0x00	; 0
    daa6:	80 e0       	ldi	r24, 0x00	; 0
    daa8:	90 e0       	ldi	r25, 0x00	; 0
    daaa:	a0 e0       	ldi	r26, 0x00	; 0
    daac:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    dab0:	d1 f0       	breq	.+52     	; 0xdae6 <_Z16Display_Update_1v+0xee>
    dab2:	e7 7f       	andi	r30, 0xF7	; 247
    dab4:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dab8:	41 e0       	ldi	r20, 0x01	; 1
    daba:	83 ec       	ldi	r24, 0xC3	; 195
    dabc:	9c e0       	ldi	r25, 0x0C	; 12
    dabe:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dac2:	62 ea       	ldi	r22, 0xA2	; 162
    dac4:	72 e2       	ldi	r23, 0x22	; 34
    dac6:	83 ec       	ldi	r24, 0xC3	; 195
    dac8:	9c e0       	ldi	r25, 0x0C	; 12
    daca:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dace:	42 e0       	ldi	r20, 0x02	; 2
    dad0:	60 e0       	ldi	r22, 0x00	; 0
    dad2:	83 ec       	ldi	r24, 0xC3	; 195
    dad4:	9c e0       	ldi	r25, 0x0C	; 12
    dad6:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dada:	6d e8       	ldi	r22, 0x8D	; 141
    dadc:	72 e2       	ldi	r23, 0x22	; 34
    dade:	83 ec       	ldi	r24, 0xC3	; 195
    dae0:	9c e0       	ldi	r25, 0x0C	; 12
    dae2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dae6:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    daea:	e0 71       	andi	r30, 0x10	; 16
    daec:	20 e0       	ldi	r18, 0x00	; 0
    daee:	3e 2f       	mov	r19, r30
    daf0:	40 e0       	ldi	r20, 0x00	; 0
    daf2:	50 e0       	ldi	r21, 0x00	; 0
    daf4:	60 e0       	ldi	r22, 0x00	; 0
    daf6:	70 e0       	ldi	r23, 0x00	; 0
    daf8:	80 e0       	ldi	r24, 0x00	; 0
    dafa:	90 e0       	ldi	r25, 0x00	; 0
    dafc:	a0 e0       	ldi	r26, 0x00	; 0
    dafe:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    db02:	39 f1       	breq	.+78     	; 0xdb52 <_Z16Display_Update_1v+0x15a>
    db04:	10 92 ae 13 	sts	0x13AE, r1	; 0x8013ae <_sRuble_Parameters>
    db08:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    db0c:	10 92 b0 13 	sts	0x13B0, r1	; 0x8013b0 <_sRuble_Parameters+0x2>
    db10:	10 92 b1 13 	sts	0x13B1, r1	; 0x8013b1 <_sRuble_Parameters+0x3>
    db14:	10 92 b2 13 	sts	0x13B2, r1	; 0x8013b2 <_sRuble_Parameters+0x4>
    db18:	10 92 b3 13 	sts	0x13B3, r1	; 0x8013b3 <_sRuble_Parameters+0x5>
    db1c:	10 92 b4 13 	sts	0x13B4, r1	; 0x8013b4 <_sRuble_Parameters+0x6>
    db20:	10 92 b5 13 	sts	0x13B5, r1	; 0x8013b5 <_sRuble_Parameters+0x7>
    db24:	41 e0       	ldi	r20, 0x01	; 1
    db26:	83 ec       	ldi	r24, 0xC3	; 195
    db28:	9c e0       	ldi	r25, 0x0C	; 12
    db2a:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db2e:	68 e7       	ldi	r22, 0x78	; 120
    db30:	72 e2       	ldi	r23, 0x22	; 34
    db32:	83 ec       	ldi	r24, 0xC3	; 195
    db34:	9c e0       	ldi	r25, 0x0C	; 12
    db36:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    db3a:	42 e0       	ldi	r20, 0x02	; 2
    db3c:	60 e0       	ldi	r22, 0x00	; 0
    db3e:	83 ec       	ldi	r24, 0xC3	; 195
    db40:	9c e0       	ldi	r25, 0x0C	; 12
    db42:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db46:	63 e6       	ldi	r22, 0x63	; 99
    db48:	72 e2       	ldi	r23, 0x22	; 34
    db4a:	83 ec       	ldi	r24, 0xC3	; 195
    db4c:	9c e0       	ldi	r25, 0x0C	; 12
    db4e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    db52:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    db56:	3e 2f       	mov	r19, r30
    db58:	30 72       	andi	r19, 0x20	; 32
    db5a:	20 e0       	ldi	r18, 0x00	; 0
    db5c:	40 e0       	ldi	r20, 0x00	; 0
    db5e:	50 e0       	ldi	r21, 0x00	; 0
    db60:	60 e0       	ldi	r22, 0x00	; 0
    db62:	70 e0       	ldi	r23, 0x00	; 0
    db64:	80 e0       	ldi	r24, 0x00	; 0
    db66:	90 e0       	ldi	r25, 0x00	; 0
    db68:	a0 e0       	ldi	r26, 0x00	; 0
    db6a:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    db6e:	d1 f0       	breq	.+52     	; 0xdba4 <_Z16Display_Update_1v+0x1ac>
    db70:	ef 7d       	andi	r30, 0xDF	; 223
    db72:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    db76:	41 e0       	ldi	r20, 0x01	; 1
    db78:	83 ec       	ldi	r24, 0xC3	; 195
    db7a:	9c e0       	ldi	r25, 0x0C	; 12
    db7c:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db80:	6e e4       	ldi	r22, 0x4E	; 78
    db82:	72 e2       	ldi	r23, 0x22	; 34
    db84:	83 ec       	ldi	r24, 0xC3	; 195
    db86:	9c e0       	ldi	r25, 0x0C	; 12
    db88:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    db8c:	42 e0       	ldi	r20, 0x02	; 2
    db8e:	60 e0       	ldi	r22, 0x00	; 0
    db90:	83 ec       	ldi	r24, 0xC3	; 195
    db92:	9c e0       	ldi	r25, 0x0C	; 12
    db94:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db98:	69 e3       	ldi	r22, 0x39	; 57
    db9a:	72 e2       	ldi	r23, 0x22	; 34
    db9c:	83 ec       	ldi	r24, 0xC3	; 195
    db9e:	9c e0       	ldi	r25, 0x0C	; 12
    dba0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dba4:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dba8:	3e 2f       	mov	r19, r30
    dbaa:	30 74       	andi	r19, 0x40	; 64
    dbac:	20 e0       	ldi	r18, 0x00	; 0
    dbae:	40 e0       	ldi	r20, 0x00	; 0
    dbb0:	50 e0       	ldi	r21, 0x00	; 0
    dbb2:	60 e0       	ldi	r22, 0x00	; 0
    dbb4:	70 e0       	ldi	r23, 0x00	; 0
    dbb6:	80 e0       	ldi	r24, 0x00	; 0
    dbb8:	90 e0       	ldi	r25, 0x00	; 0
    dbba:	a0 e0       	ldi	r26, 0x00	; 0
    dbbc:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    dbc0:	d1 f0       	breq	.+52     	; 0xdbf6 <_Z16Display_Update_1v+0x1fe>
    dbc2:	ef 7b       	andi	r30, 0xBF	; 191
    dbc4:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dbc8:	41 e0       	ldi	r20, 0x01	; 1
    dbca:	83 ec       	ldi	r24, 0xC3	; 195
    dbcc:	9c e0       	ldi	r25, 0x0C	; 12
    dbce:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbd2:	64 e2       	ldi	r22, 0x24	; 36
    dbd4:	72 e2       	ldi	r23, 0x22	; 34
    dbd6:	83 ec       	ldi	r24, 0xC3	; 195
    dbd8:	9c e0       	ldi	r25, 0x0C	; 12
    dbda:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dbde:	42 e0       	ldi	r20, 0x02	; 2
    dbe0:	60 e0       	ldi	r22, 0x00	; 0
    dbe2:	83 ec       	ldi	r24, 0xC3	; 195
    dbe4:	9c e0       	ldi	r25, 0x0C	; 12
    dbe6:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbea:	6f e0       	ldi	r22, 0x0F	; 15
    dbec:	72 e2       	ldi	r23, 0x22	; 34
    dbee:	83 ec       	ldi	r24, 0xC3	; 195
    dbf0:	9c e0       	ldi	r25, 0x0C	; 12
    dbf2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dbf6:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dbfa:	3e 2f       	mov	r19, r30
    dbfc:	30 78       	andi	r19, 0x80	; 128
    dbfe:	20 e0       	ldi	r18, 0x00	; 0
    dc00:	40 e0       	ldi	r20, 0x00	; 0
    dc02:	50 e0       	ldi	r21, 0x00	; 0
    dc04:	60 e0       	ldi	r22, 0x00	; 0
    dc06:	70 e0       	ldi	r23, 0x00	; 0
    dc08:	80 e0       	ldi	r24, 0x00	; 0
    dc0a:	90 e0       	ldi	r25, 0x00	; 0
    dc0c:	a0 e0       	ldi	r26, 0x00	; 0
    dc0e:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    dc12:	d1 f0       	breq	.+52     	; 0xdc48 <_Z16Display_Update_1v+0x250>
    dc14:	ef 77       	andi	r30, 0x7F	; 127
    dc16:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dc1a:	41 e0       	ldi	r20, 0x01	; 1
    dc1c:	83 ec       	ldi	r24, 0xC3	; 195
    dc1e:	9c e0       	ldi	r25, 0x0C	; 12
    dc20:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc24:	6a ef       	ldi	r22, 0xFA	; 250
    dc26:	71 e2       	ldi	r23, 0x21	; 33
    dc28:	83 ec       	ldi	r24, 0xC3	; 195
    dc2a:	9c e0       	ldi	r25, 0x0C	; 12
    dc2c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dc30:	42 e0       	ldi	r20, 0x02	; 2
    dc32:	60 e0       	ldi	r22, 0x00	; 0
    dc34:	83 ec       	ldi	r24, 0xC3	; 195
    dc36:	9c e0       	ldi	r25, 0x0C	; 12
    dc38:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc3c:	65 ee       	ldi	r22, 0xE5	; 229
    dc3e:	71 e2       	ldi	r23, 0x21	; 33
    dc40:	83 ec       	ldi	r24, 0xC3	; 195
    dc42:	9c e0       	ldi	r25, 0x0C	; 12
    dc44:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dc48:	e0 91 b0 13 	lds	r30, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    dc4c:	4e 2f       	mov	r20, r30
    dc4e:	41 70       	andi	r20, 0x01	; 1
    dc50:	20 e0       	ldi	r18, 0x00	; 0
    dc52:	30 e0       	ldi	r19, 0x00	; 0
    dc54:	50 e0       	ldi	r21, 0x00	; 0
    dc56:	60 e0       	ldi	r22, 0x00	; 0
    dc58:	70 e0       	ldi	r23, 0x00	; 0
    dc5a:	80 e0       	ldi	r24, 0x00	; 0
    dc5c:	90 e0       	ldi	r25, 0x00	; 0
    dc5e:	a0 e0       	ldi	r26, 0x00	; 0
    dc60:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    dc64:	d1 f0       	breq	.+52     	; 0xdc9a <_Z16Display_Update_1v+0x2a2>
    dc66:	ee 7f       	andi	r30, 0xFE	; 254
    dc68:	e0 93 b0 13 	sts	0x13B0, r30	; 0x8013b0 <_sRuble_Parameters+0x2>
    dc6c:	41 e0       	ldi	r20, 0x01	; 1
    dc6e:	83 ec       	ldi	r24, 0xC3	; 195
    dc70:	9c e0       	ldi	r25, 0x0C	; 12
    dc72:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc76:	60 ed       	ldi	r22, 0xD0	; 208
    dc78:	71 e2       	ldi	r23, 0x21	; 33
    dc7a:	83 ec       	ldi	r24, 0xC3	; 195
    dc7c:	9c e0       	ldi	r25, 0x0C	; 12
    dc7e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dc82:	42 e0       	ldi	r20, 0x02	; 2
    dc84:	60 e0       	ldi	r22, 0x00	; 0
    dc86:	83 ec       	ldi	r24, 0xC3	; 195
    dc88:	9c e0       	ldi	r25, 0x0C	; 12
    dc8a:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc8e:	6b eb       	ldi	r22, 0xBB	; 187
    dc90:	71 e2       	ldi	r23, 0x21	; 33
    dc92:	83 ec       	ldi	r24, 0xC3	; 195
    dc94:	9c e0       	ldi	r25, 0x0C	; 12
    dc96:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dc9a:	e0 91 b0 13 	lds	r30, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    dc9e:	4e 2f       	mov	r20, r30
    dca0:	44 70       	andi	r20, 0x04	; 4
    dca2:	20 e0       	ldi	r18, 0x00	; 0
    dca4:	30 e0       	ldi	r19, 0x00	; 0
    dca6:	50 e0       	ldi	r21, 0x00	; 0
    dca8:	60 e0       	ldi	r22, 0x00	; 0
    dcaa:	70 e0       	ldi	r23, 0x00	; 0
    dcac:	80 e0       	ldi	r24, 0x00	; 0
    dcae:	90 e0       	ldi	r25, 0x00	; 0
    dcb0:	a0 e0       	ldi	r26, 0x00	; 0
    dcb2:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    dcb6:	d9 f0       	breq	.+54     	; 0xdcee <_Z16Display_Update_1v+0x2f6>
    dcb8:	eb 7f       	andi	r30, 0xFB	; 251
    dcba:	e0 93 b0 13 	sts	0x13B0, r30	; 0x8013b0 <_sRuble_Parameters+0x2>
    dcbe:	41 e0       	ldi	r20, 0x01	; 1
    dcc0:	61 e0       	ldi	r22, 0x01	; 1
    dcc2:	83 ec       	ldi	r24, 0xC3	; 195
    dcc4:	9c e0       	ldi	r25, 0x0C	; 12
    dcc6:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dcca:	69 ea       	ldi	r22, 0xA9	; 169
    dccc:	71 e2       	ldi	r23, 0x21	; 33
    dcce:	83 ec       	ldi	r24, 0xC3	; 195
    dcd0:	9c e0       	ldi	r25, 0x0C	; 12
    dcd2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dcd6:	42 e0       	ldi	r20, 0x02	; 2
    dcd8:	60 e0       	ldi	r22, 0x00	; 0
    dcda:	83 ec       	ldi	r24, 0xC3	; 195
    dcdc:	9c e0       	ldi	r25, 0x0C	; 12
    dcde:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dce2:	64 e9       	ldi	r22, 0x94	; 148
    dce4:	71 e2       	ldi	r23, 0x21	; 33
    dce6:	83 ec       	ldi	r24, 0xC3	; 195
    dce8:	9c e0       	ldi	r25, 0x0C	; 12
    dcea:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dcee:	10 92 6b 0c 	sts	0x0C6B, r1	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dcf2:	10 92 6c 0c 	sts	0x0C6C, r1	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    dcf6:	10 92 6d 0c 	sts	0x0C6D, r1	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    dcfa:	10 92 6e 0c 	sts	0x0C6E, r1	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    dcfe:	80 91 c2 0c 	lds	r24, 0x0CC2	; 0x800cc2 <Start_Display_In_Interrupt>
    dd02:	88 23       	and	r24, r24
    dd04:	09 f4       	brne	.+2      	; 0xdd08 <_Z16Display_Update_1v+0x310>
    dd06:	96 c1       	rjmp	.+812    	; 0xe034 <_Z16Display_Update_1v+0x63c>
    dd08:	80 91 69 0c 	lds	r24, 0x0C69	; 0x800c69 <_sGSM_Query+0x5>
    dd0c:	e0 91 d9 13 	lds	r30, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    dd10:	81 30       	cpi	r24, 0x01	; 1
    dd12:	09 f4       	brne	.+2      	; 0xdd16 <_Z16Display_Update_1v+0x31e>
    dd14:	9f c0       	rjmp	.+318    	; 0xde54 <_Z16Display_Update_1v+0x45c>
    dd16:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    dd1a:	81 30       	cpi	r24, 0x01	; 1
    dd1c:	09 f4       	brne	.+2      	; 0xdd20 <_Z16Display_Update_1v+0x328>
    dd1e:	9a c0       	rjmp	.+308    	; 0xde54 <_Z16Display_Update_1v+0x45c>
    dd20:	f0 91 ae 13 	lds	r31, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    dd24:	2f 2f       	mov	r18, r31
    dd26:	21 70       	andi	r18, 0x01	; 1
    dd28:	30 e0       	ldi	r19, 0x00	; 0
    dd2a:	40 e0       	ldi	r20, 0x00	; 0
    dd2c:	50 e0       	ldi	r21, 0x00	; 0
    dd2e:	60 e0       	ldi	r22, 0x00	; 0
    dd30:	70 e0       	ldi	r23, 0x00	; 0
    dd32:	80 e0       	ldi	r24, 0x00	; 0
    dd34:	90 e0       	ldi	r25, 0x00	; 0
    dd36:	a0 e0       	ldi	r26, 0x00	; 0
    dd38:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    dd3c:	b9 f0       	breq	.+46     	; 0xdd6c <_Z16Display_Update_1v+0x374>
    dd3e:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dd42:	80 fd       	sbrc	r24, 0
    dd44:	0e c0       	rjmp	.+28     	; 0xdd62 <_Z16Display_Update_1v+0x36a>
    dd46:	e2 fd       	sbrc	r30, 2
    dd48:	02 c0       	rjmp	.+4      	; 0xdd4e <_Z16Display_Update_1v+0x356>
    dd4a:	21 e0       	ldi	r18, 0x01	; 1
    dd4c:	03 c0       	rjmp	.+6      	; 0xdd54 <_Z16Display_Update_1v+0x35c>
    dd4e:	29 e0       	ldi	r18, 0x09	; 9
    dd50:	40 e0       	ldi	r20, 0x00	; 0
    dd52:	60 e0       	ldi	r22, 0x00	; 0
    dd54:	80 e0       	ldi	r24, 0x00	; 0
    dd56:	89 dd       	rcall	.-1262   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    dd58:	25 e0       	ldi	r18, 0x05	; 5
    dd5a:	40 e0       	ldi	r20, 0x00	; 0
    dd5c:	61 e0       	ldi	r22, 0x01	; 1
    dd5e:	81 e0       	ldi	r24, 0x01	; 1
    dd60:	84 dd       	rcall	.-1272   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    dd62:	81 ef       	ldi	r24, 0xF1	; 241
    dd64:	9f ef       	ldi	r25, 0xFF	; 255
    dd66:	af ef       	ldi	r26, 0xFF	; 255
    dd68:	b0 e0       	ldi	r27, 0x00	; 0
    dd6a:	6b c0       	rjmp	.+214    	; 0xde42 <_Z16Display_Update_1v+0x44a>
    dd6c:	2f 2f       	mov	r18, r31
    dd6e:	22 70       	andi	r18, 0x02	; 2
    dd70:	30 e0       	ldi	r19, 0x00	; 0
    dd72:	40 e0       	ldi	r20, 0x00	; 0
    dd74:	50 e0       	ldi	r21, 0x00	; 0
    dd76:	60 e0       	ldi	r22, 0x00	; 0
    dd78:	70 e0       	ldi	r23, 0x00	; 0
    dd7a:	80 e0       	ldi	r24, 0x00	; 0
    dd7c:	90 e0       	ldi	r25, 0x00	; 0
    dd7e:	a0 e0       	ldi	r26, 0x00	; 0
    dd80:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    dd84:	b9 f0       	breq	.+46     	; 0xddb4 <_Z16Display_Update_1v+0x3bc>
    dd86:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dd8a:	81 fd       	sbrc	r24, 1
    dd8c:	0e c0       	rjmp	.+28     	; 0xddaa <_Z16Display_Update_1v+0x3b2>
    dd8e:	e2 fd       	sbrc	r30, 2
    dd90:	02 c0       	rjmp	.+4      	; 0xdd96 <_Z16Display_Update_1v+0x39e>
    dd92:	21 e0       	ldi	r18, 0x01	; 1
    dd94:	03 c0       	rjmp	.+6      	; 0xdd9c <_Z16Display_Update_1v+0x3a4>
    dd96:	29 e0       	ldi	r18, 0x09	; 9
    dd98:	40 e0       	ldi	r20, 0x00	; 0
    dd9a:	60 e0       	ldi	r22, 0x00	; 0
    dd9c:	80 e0       	ldi	r24, 0x00	; 0
    dd9e:	65 dd       	rcall	.-1334   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    dda0:	22 e0       	ldi	r18, 0x02	; 2
    dda2:	40 e0       	ldi	r20, 0x00	; 0
    dda4:	61 e0       	ldi	r22, 0x01	; 1
    dda6:	89 e0       	ldi	r24, 0x09	; 9
    dda8:	60 dd       	rcall	.-1344   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    ddaa:	82 ef       	ldi	r24, 0xF2	; 242
    ddac:	9f ef       	ldi	r25, 0xFF	; 255
    ddae:	af ef       	ldi	r26, 0xFF	; 255
    ddb0:	b0 e0       	ldi	r27, 0x00	; 0
    ddb2:	47 c0       	rjmp	.+142    	; 0xde42 <_Z16Display_Update_1v+0x44a>
    ddb4:	2f 2f       	mov	r18, r31
    ddb6:	24 70       	andi	r18, 0x04	; 4
    ddb8:	30 e0       	ldi	r19, 0x00	; 0
    ddba:	40 e0       	ldi	r20, 0x00	; 0
    ddbc:	50 e0       	ldi	r21, 0x00	; 0
    ddbe:	60 e0       	ldi	r22, 0x00	; 0
    ddc0:	70 e0       	ldi	r23, 0x00	; 0
    ddc2:	80 e0       	ldi	r24, 0x00	; 0
    ddc4:	90 e0       	ldi	r25, 0x00	; 0
    ddc6:	a0 e0       	ldi	r26, 0x00	; 0
    ddc8:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    ddcc:	b9 f0       	breq	.+46     	; 0xddfc <_Z16Display_Update_1v+0x404>
    ddce:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    ddd2:	82 fd       	sbrc	r24, 2
    ddd4:	0e c0       	rjmp	.+28     	; 0xddf2 <_Z16Display_Update_1v+0x3fa>
    ddd6:	e2 fd       	sbrc	r30, 2
    ddd8:	02 c0       	rjmp	.+4      	; 0xddde <_Z16Display_Update_1v+0x3e6>
    ddda:	21 e0       	ldi	r18, 0x01	; 1
    dddc:	03 c0       	rjmp	.+6      	; 0xdde4 <_Z16Display_Update_1v+0x3ec>
    ddde:	29 e0       	ldi	r18, 0x09	; 9
    dde0:	40 e0       	ldi	r20, 0x00	; 0
    dde2:	60 e0       	ldi	r22, 0x00	; 0
    dde4:	80 e0       	ldi	r24, 0x00	; 0
    dde6:	41 dd       	rcall	.-1406   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    dde8:	23 e0       	ldi	r18, 0x03	; 3
    ddea:	40 e0       	ldi	r20, 0x00	; 0
    ddec:	61 e0       	ldi	r22, 0x01	; 1
    ddee:	8a e0       	ldi	r24, 0x0A	; 10
    ddf0:	3c dd       	rcall	.-1416   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    ddf2:	84 ef       	ldi	r24, 0xF4	; 244
    ddf4:	9f ef       	ldi	r25, 0xFF	; 255
    ddf6:	af ef       	ldi	r26, 0xFF	; 255
    ddf8:	b0 e0       	ldi	r27, 0x00	; 0
    ddfa:	23 c0       	rjmp	.+70     	; 0xde42 <_Z16Display_Update_1v+0x44a>
    ddfc:	2f 2f       	mov	r18, r31
    ddfe:	28 70       	andi	r18, 0x08	; 8
    de00:	30 e0       	ldi	r19, 0x00	; 0
    de02:	40 e0       	ldi	r20, 0x00	; 0
    de04:	50 e0       	ldi	r21, 0x00	; 0
    de06:	60 e0       	ldi	r22, 0x00	; 0
    de08:	70 e0       	ldi	r23, 0x00	; 0
    de0a:	80 e0       	ldi	r24, 0x00	; 0
    de0c:	90 e0       	ldi	r25, 0x00	; 0
    de0e:	a0 e0       	ldi	r26, 0x00	; 0
    de10:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    de14:	a9 f1       	breq	.+106    	; 0xde80 <_Z16Display_Update_1v+0x488>
    de16:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    de1a:	83 fd       	sbrc	r24, 3
    de1c:	0e c0       	rjmp	.+28     	; 0xde3a <_Z16Display_Update_1v+0x442>
    de1e:	e2 fd       	sbrc	r30, 2
    de20:	02 c0       	rjmp	.+4      	; 0xde26 <_Z16Display_Update_1v+0x42e>
    de22:	21 e0       	ldi	r18, 0x01	; 1
    de24:	03 c0       	rjmp	.+6      	; 0xde2c <_Z16Display_Update_1v+0x434>
    de26:	29 e0       	ldi	r18, 0x09	; 9
    de28:	40 e0       	ldi	r20, 0x00	; 0
    de2a:	60 e0       	ldi	r22, 0x00	; 0
    de2c:	80 e0       	ldi	r24, 0x00	; 0
    de2e:	1d dd       	rcall	.-1478   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    de30:	24 e0       	ldi	r18, 0x04	; 4
    de32:	40 e0       	ldi	r20, 0x00	; 0
    de34:	61 e0       	ldi	r22, 0x01	; 1
    de36:	82 e0       	ldi	r24, 0x02	; 2
    de38:	18 dd       	rcall	.-1488   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    de3a:	88 ef       	ldi	r24, 0xF8	; 248
    de3c:	9f ef       	ldi	r25, 0xFF	; 255
    de3e:	af ef       	ldi	r26, 0xFF	; 255
    de40:	b0 e0       	ldi	r27, 0x00	; 0
    de42:	80 93 6b 0c 	sts	0x0C6B, r24	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    de46:	90 93 6c 0c 	sts	0x0C6C, r25	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    de4a:	a0 93 6d 0c 	sts	0x0C6D, r26	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    de4e:	b0 93 6e 0c 	sts	0x0C6E, r27	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    de52:	16 c0       	rjmp	.+44     	; 0xde80 <_Z16Display_Update_1v+0x488>
    de54:	e2 fd       	sbrc	r30, 2
    de56:	02 c0       	rjmp	.+4      	; 0xde5c <_Z16Display_Update_1v+0x464>
    de58:	21 e0       	ldi	r18, 0x01	; 1
    de5a:	01 c0       	rjmp	.+2      	; 0xde5e <_Z16Display_Update_1v+0x466>
    de5c:	29 e0       	ldi	r18, 0x09	; 9
    de5e:	40 e0       	ldi	r20, 0x00	; 0
    de60:	60 e0       	ldi	r22, 0x00	; 0
    de62:	80 e0       	ldi	r24, 0x00	; 0
    de64:	02 dd       	rcall	.-1532   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    de66:	27 e0       	ldi	r18, 0x07	; 7
    de68:	40 e0       	ldi	r20, 0x00	; 0
    de6a:	61 e0       	ldi	r22, 0x01	; 1
    de6c:	82 e0       	ldi	r24, 0x02	; 2
    de6e:	fd dc       	rcall	.-1542   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    de70:	10 92 6b 0c 	sts	0x0C6B, r1	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    de74:	10 92 6c 0c 	sts	0x0C6C, r1	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    de78:	10 92 6d 0c 	sts	0x0C6D, r1	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    de7c:	10 92 6e 0c 	sts	0x0C6E, r1	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    de80:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    de84:	82 fd       	sbrc	r24, 2
    de86:	02 c0       	rjmp	.+4      	; 0xde8c <_Z16Display_Update_1v+0x494>
    de88:	21 e0       	ldi	r18, 0x01	; 1
    de8a:	01 c0       	rjmp	.+2      	; 0xde8e <_Z16Display_Update_1v+0x496>
    de8c:	29 e0       	ldi	r18, 0x09	; 9
    de8e:	40 e0       	ldi	r20, 0x00	; 0
    de90:	60 e0       	ldi	r22, 0x00	; 0
    de92:	80 e0       	ldi	r24, 0x00	; 0
    de94:	ea dc       	rcall	.-1580   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    de96:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    de9a:	3e 2f       	mov	r19, r30
    de9c:	31 70       	andi	r19, 0x01	; 1
    de9e:	20 e0       	ldi	r18, 0x00	; 0
    dea0:	40 e0       	ldi	r20, 0x00	; 0
    dea2:	50 e0       	ldi	r21, 0x00	; 0
    dea4:	60 e0       	ldi	r22, 0x00	; 0
    dea6:	70 e0       	ldi	r23, 0x00	; 0
    dea8:	80 e0       	ldi	r24, 0x00	; 0
    deaa:	90 e0       	ldi	r25, 0x00	; 0
    deac:	a0 e0       	ldi	r26, 0x00	; 0
    deae:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    deb2:	29 f0       	breq	.+10     	; 0xdebe <_Z16Display_Update_1v+0x4c6>
    deb4:	ee 7f       	andi	r30, 0xFE	; 254
    deb6:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    deba:	2a e0       	ldi	r18, 0x0A	; 10
    debc:	d6 dc       	rcall	.-1620   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    debe:	ee e4       	ldi	r30, 0x4E	; 78
    dec0:	fd e0       	ldi	r31, 0x0D	; 13
    dec2:	22 ea       	ldi	r18, 0xA2	; 162
    dec4:	3d e0       	ldi	r19, 0x0D	; 13
    dec6:	80 e0       	ldi	r24, 0x00	; 0
    dec8:	90 81       	ld	r25, Z
    deca:	91 11       	cpse	r25, r1
    decc:	8f 5f       	subi	r24, 0xFF	; 255
    dece:	36 96       	adiw	r30, 0x06	; 6
    ded0:	2e 17       	cp	r18, r30
    ded2:	3f 07       	cpc	r19, r31
    ded4:	c9 f7       	brne	.-14     	; 0xdec8 <_Z16Display_Update_1v+0x4d0>
    ded6:	80 93 6a 0c 	sts	0x0C6A, r24	; 0x800c6a <_ZZ16Display_Update_1vE10plot_added>
    deda:	80 91 6d 14 	lds	r24, 0x146D	; 0x80146d <_sRuble_Parameters+0xbf>
    dede:	88 23       	and	r24, r24
    dee0:	09 f4       	brne	.+2      	; 0xdee4 <_Z16Display_Update_1v+0x4ec>
    dee2:	a8 c0       	rjmp	.+336    	; 0xe034 <_Z16Display_Update_1v+0x63c>
    dee4:	10 92 6d 14 	sts	0x146D, r1	; 0x80146d <_sRuble_Parameters+0xbf>
    dee8:	80 91 6c 14 	lds	r24, 0x146C	; 0x80146c <_sRuble_Parameters+0xbe>
    deec:	81 11       	cpse	r24, r1
    deee:	05 c0       	rjmp	.+10     	; 0xdefa <_Z16Display_Update_1v+0x502>
    def0:	28 e0       	ldi	r18, 0x08	; 8
    def2:	40 e0       	ldi	r20, 0x00	; 0
    def4:	62 e0       	ldi	r22, 0x02	; 2
    def6:	84 e0       	ldi	r24, 0x04	; 4
    def8:	b8 dc       	rcall	.-1680   	; 0xd86a <_Z16Lcd_Special_Charhhhh>
    defa:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    defe:	83 30       	cpi	r24, 0x03	; 3
    df00:	b1 f0       	breq	.+44     	; 0xdf2e <_Z16Display_Update_1v+0x536>
    df02:	85 30       	cpi	r24, 0x05	; 5
    df04:	59 f0       	breq	.+22     	; 0xdf1c <_Z16Display_Update_1v+0x524>
    df06:	82 30       	cpi	r24, 0x02	; 2
    df08:	f1 f4       	brne	.+60     	; 0xdf46 <_Z16Display_Update_1v+0x54e>
    df0a:	41 e0       	ldi	r20, 0x01	; 1
    df0c:	60 e0       	ldi	r22, 0x00	; 0
    df0e:	83 ec       	ldi	r24, 0xC3	; 195
    df10:	9c e0       	ldi	r25, 0x0C	; 12
    df12:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df16:	65 e5       	ldi	r22, 0x55	; 85
    df18:	71 e2       	ldi	r23, 0x21	; 33
    df1a:	11 c0       	rjmp	.+34     	; 0xdf3e <_Z16Display_Update_1v+0x546>
    df1c:	41 e0       	ldi	r20, 0x01	; 1
    df1e:	60 e0       	ldi	r22, 0x00	; 0
    df20:	83 ec       	ldi	r24, 0xC3	; 195
    df22:	9c e0       	ldi	r25, 0x0C	; 12
    df24:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df28:	6f e7       	ldi	r22, 0x7F	; 127
    df2a:	71 e2       	ldi	r23, 0x21	; 33
    df2c:	08 c0       	rjmp	.+16     	; 0xdf3e <_Z16Display_Update_1v+0x546>
    df2e:	41 e0       	ldi	r20, 0x01	; 1
    df30:	60 e0       	ldi	r22, 0x00	; 0
    df32:	83 ec       	ldi	r24, 0xC3	; 195
    df34:	9c e0       	ldi	r25, 0x0C	; 12
    df36:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df3a:	6a e6       	ldi	r22, 0x6A	; 106
    df3c:	71 e2       	ldi	r23, 0x21	; 33
    df3e:	83 ec       	ldi	r24, 0xC3	; 195
    df40:	9c e0       	ldi	r25, 0x0C	; 12
    df42:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    df46:	80 91 6a 0c 	lds	r24, 0x0C6A	; 0x800c6a <_ZZ16Display_Update_1vE10plot_added>
    df4a:	81 11       	cpse	r24, r1
    df4c:	15 c0       	rjmp	.+42     	; 0xdf78 <_Z16Display_Update_1v+0x580>
    df4e:	42 e0       	ldi	r20, 0x02	; 2
    df50:	60 e0       	ldi	r22, 0x00	; 0
    df52:	83 ec       	ldi	r24, 0xC3	; 195
    df54:	9c e0       	ldi	r25, 0x0C	; 12
    df56:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df5a:	60 e4       	ldi	r22, 0x40	; 64
    df5c:	71 e2       	ldi	r23, 0x21	; 33
    df5e:	83 ec       	ldi	r24, 0xC3	; 195
    df60:	9c e0       	ldi	r25, 0x0C	; 12
    df62:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    df66:	43 e0       	ldi	r20, 0x03	; 3
    df68:	60 e0       	ldi	r22, 0x00	; 0
    df6a:	83 ec       	ldi	r24, 0xC3	; 195
    df6c:	9c e0       	ldi	r25, 0x0C	; 12
    df6e:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df72:	6b e2       	ldi	r22, 0x2B	; 43
    df74:	71 e2       	ldi	r23, 0x21	; 33
    df76:	3e c0       	rjmp	.+124    	; 0xdff4 <_Z16Display_Update_1v+0x5fc>
    df78:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    df7c:	88 23       	and	r24, r24
    df7e:	31 f1       	breq	.+76     	; 0xdfcc <_Z16Display_Update_1v+0x5d4>
    df80:	1f 92       	push	r1
    df82:	8f 93       	push	r24
    df84:	86 ee       	ldi	r24, 0xE6	; 230
    df86:	94 e0       	ldi	r25, 0x04	; 4
    df88:	9f 93       	push	r25
    df8a:	8f 93       	push	r24
    df8c:	8a ed       	ldi	r24, 0xDA	; 218
    df8e:	93 e1       	ldi	r25, 0x13	; 19
    df90:	9f 93       	push	r25
    df92:	8f 93       	push	r24
    df94:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
    df98:	20 e0       	ldi	r18, 0x00	; 0
    df9a:	42 e0       	ldi	r20, 0x02	; 2
    df9c:	64 e1       	ldi	r22, 0x14	; 20
    df9e:	8a ed       	ldi	r24, 0xDA	; 218
    dfa0:	93 e1       	ldi	r25, 0x13	; 19
    dfa2:	0e 94 a8 65 	call	0xcb50	; 0xcb50 <_Z14Lcd_Print_BuffPchhh>
    dfa6:	43 e0       	ldi	r20, 0x03	; 3
    dfa8:	60 e0       	ldi	r22, 0x00	; 0
    dfaa:	83 ec       	ldi	r24, 0xC3	; 195
    dfac:	9c e0       	ldi	r25, 0x0C	; 12
    dfae:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dfb2:	66 e1       	ldi	r22, 0x16	; 22
    dfb4:	71 e2       	ldi	r23, 0x21	; 33
    dfb6:	83 ec       	ldi	r24, 0xC3	; 195
    dfb8:	9c e0       	ldi	r25, 0x0C	; 12
    dfba:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dfbe:	0f 90       	pop	r0
    dfc0:	0f 90       	pop	r0
    dfc2:	0f 90       	pop	r0
    dfc4:	0f 90       	pop	r0
    dfc6:	0f 90       	pop	r0
    dfc8:	0f 90       	pop	r0
    dfca:	18 c0       	rjmp	.+48     	; 0xdffc <_Z16Display_Update_1v+0x604>
    dfcc:	42 e0       	ldi	r20, 0x02	; 2
    dfce:	60 e0       	ldi	r22, 0x00	; 0
    dfd0:	83 ec       	ldi	r24, 0xC3	; 195
    dfd2:	9c e0       	ldi	r25, 0x0C	; 12
    dfd4:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dfd8:	61 e0       	ldi	r22, 0x01	; 1
    dfda:	71 e2       	ldi	r23, 0x21	; 33
    dfdc:	83 ec       	ldi	r24, 0xC3	; 195
    dfde:	9c e0       	ldi	r25, 0x0C	; 12
    dfe0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dfe4:	43 e0       	ldi	r20, 0x03	; 3
    dfe6:	60 e0       	ldi	r22, 0x00	; 0
    dfe8:	83 ec       	ldi	r24, 0xC3	; 195
    dfea:	9c e0       	ldi	r25, 0x0C	; 12
    dfec:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dff0:	6c ee       	ldi	r22, 0xEC	; 236
    dff2:	70 e2       	ldi	r23, 0x20	; 32
    dff4:	83 ec       	ldi	r24, 0xC3	; 195
    dff6:	9c e0       	ldi	r25, 0x0C	; 12
    dff8:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    dffc:	80 91 a1 14 	lds	r24, 0x14A1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    e000:	40 e0       	ldi	r20, 0x00	; 0
    e002:	63 e0       	ldi	r22, 0x03	; 3
    e004:	81 30       	cpi	r24, 0x01	; 1
    e006:	39 f4       	brne	.+14     	; 0xe016 <_Z16Display_Update_1v+0x61e>
    e008:	83 ec       	ldi	r24, 0xC3	; 195
    e00a:	9c e0       	ldi	r25, 0x0C	; 12
    e00c:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e010:	6f ed       	ldi	r22, 0xDF	; 223
    e012:	70 e2       	ldi	r23, 0x20	; 32
    e014:	06 c0       	rjmp	.+12     	; 0xe022 <_Z16Display_Update_1v+0x62a>
    e016:	83 ec       	ldi	r24, 0xC3	; 195
    e018:	9c e0       	ldi	r25, 0x0C	; 12
    e01a:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e01e:	62 ed       	ldi	r22, 0xD2	; 210
    e020:	70 e2       	ldi	r23, 0x20	; 32
    e022:	83 ec       	ldi	r24, 0xC3	; 195
    e024:	9c e0       	ldi	r25, 0x0C	; 12
    e026:	df 91       	pop	r29
    e028:	cf 91       	pop	r28
    e02a:	1f 91       	pop	r17
    e02c:	0f 91       	pop	r16
    e02e:	ff 90       	pop	r15
    e030:	0c 94 7d d4 	jmp	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    e034:	df 91       	pop	r29
    e036:	cf 91       	pop	r28
    e038:	1f 91       	pop	r17
    e03a:	0f 91       	pop	r16
    e03c:	ff 90       	pop	r15
    e03e:	08 95       	ret

0000e040 <_Z19Initialise_Hardwarev>:
    e040:	0f 93       	push	r16
    e042:	1f 93       	push	r17
    e044:	cf 93       	push	r28
    e046:	df 93       	push	r29
    e048:	00 d0       	rcall	.+0      	; 0xe04a <_Z19Initialise_Hardwarev+0xa>
    e04a:	cd b7       	in	r28, 0x3d	; 61
    e04c:	de b7       	in	r29, 0x3e	; 62
    e04e:	18 e1       	ldi	r17, 0x18	; 24
    e050:	89 e2       	ldi	r24, 0x29	; 41
    e052:	0f b6       	in	r0, 0x3f	; 63
    e054:	f8 94       	cli
    e056:	a8 95       	wdr
    e058:	10 93 60 00 	sts	0x0060, r17	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    e05c:	0f be       	out	0x3f, r0	; 63
    e05e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    e062:	10 92 e8 0c 	sts	0x0CE8, r1	; 0x800ce8 <_gStart_Wdt>
    e066:	0e 94 7d 63 	call	0xc6fa	; 0xc6fa <_Z20Timer1_Interrupt_Intv>
    e06a:	0e 94 35 65 	call	0xca6a	; 0xca6a <_Z20Timer0_Interrupt_Intv>
    e06e:	0e 94 a3 65 	call	0xcb46	; 0xcb46 <_Z8Lcd_Initv>
    e072:	26 e0       	ldi	r18, 0x06	; 6
    e074:	40 e8       	ldi	r20, 0x80	; 128
    e076:	55 e2       	ldi	r21, 0x25	; 37
    e078:	60 e0       	ldi	r22, 0x00	; 0
    e07a:	70 e0       	ldi	r23, 0x00	; 0
    e07c:	86 ec       	ldi	r24, 0xC6	; 198
    e07e:	94 e1       	ldi	r25, 0x14	; 20
    e080:	0e 94 3e d3 	call	0x1a67c	; 0x1a67c <_ZN14HardwareSerial5beginEmh>
    e084:	26 e0       	ldi	r18, 0x06	; 6
    e086:	40 e8       	ldi	r20, 0x80	; 128
    e088:	55 e2       	ldi	r21, 0x25	; 37
    e08a:	60 e0       	ldi	r22, 0x00	; 0
    e08c:	70 e0       	ldi	r23, 0x00	; 0
    e08e:	83 e8       	ldi	r24, 0x83	; 131
    e090:	96 e1       	ldi	r25, 0x16	; 22
    e092:	0e 94 3e d3 	call	0x1a67c	; 0x1a67c <_ZN14HardwareSerial5beginEmh>
    e096:	62 e0       	ldi	r22, 0x02	; 2
    e098:	83 e1       	ldi	r24, 0x13	; 19
    e09a:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e09e:	41 e0       	ldi	r20, 0x01	; 1
    e0a0:	60 e0       	ldi	r22, 0x00	; 0
    e0a2:	83 ec       	ldi	r24, 0xC3	; 195
    e0a4:	9c e0       	ldi	r25, 0x0C	; 12
    e0a6:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e0aa:	68 ef       	ldi	r22, 0xF8	; 248
    e0ac:	74 e2       	ldi	r23, 0x24	; 36
    e0ae:	83 ec       	ldi	r24, 0xC3	; 195
    e0b0:	9c e0       	ldi	r25, 0x0C	; 12
    e0b2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    e0b6:	42 e0       	ldi	r20, 0x02	; 2
    e0b8:	60 e0       	ldi	r22, 0x00	; 0
    e0ba:	83 ec       	ldi	r24, 0xC3	; 195
    e0bc:	9c e0       	ldi	r25, 0x0C	; 12
    e0be:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e0c2:	63 ee       	ldi	r22, 0xE3	; 227
    e0c4:	74 e2       	ldi	r23, 0x24	; 36
    e0c6:	83 ec       	ldi	r24, 0xC3	; 195
    e0c8:	9c e0       	ldi	r25, 0x0C	; 12
    e0ca:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    e0ce:	68 eb       	ldi	r22, 0xB8	; 184
    e0d0:	7b e0       	ldi	r23, 0x0B	; 11
    e0d2:	80 e0       	ldi	r24, 0x00	; 0
    e0d4:	90 e0       	ldi	r25, 0x00	; 0
    e0d6:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e0da:	41 e0       	ldi	r20, 0x01	; 1
    e0dc:	60 e0       	ldi	r22, 0x00	; 0
    e0de:	83 ec       	ldi	r24, 0xC3	; 195
    e0e0:	9c e0       	ldi	r25, 0x0C	; 12
    e0e2:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e0e6:	6e ec       	ldi	r22, 0xCE	; 206
    e0e8:	74 e2       	ldi	r23, 0x24	; 36
    e0ea:	83 ec       	ldi	r24, 0xC3	; 195
    e0ec:	9c e0       	ldi	r25, 0x0C	; 12
    e0ee:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    e0f2:	41 e0       	ldi	r20, 0x01	; 1
    e0f4:	65 e0       	ldi	r22, 0x05	; 5
    e0f6:	83 ec       	ldi	r24, 0xC3	; 195
    e0f8:	9c e0       	ldi	r25, 0x0C	; 12
    e0fa:	0e 94 0f da 	call	0x1b41e	; 0x1b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e0fe:	61 ec       	ldi	r22, 0xC1	; 193
    e100:	74 e2       	ldi	r23, 0x24	; 36
    e102:	83 ec       	ldi	r24, 0xC3	; 195
    e104:	9c e0       	ldi	r25, 0x0C	; 12
    e106:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
    e10a:	86 ec       	ldi	r24, 0xC6	; 198
    e10c:	94 e1       	ldi	r25, 0x14	; 20
    e10e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    e112:	61 e0       	ldi	r22, 0x01	; 1
    e114:	8d e0       	ldi	r24, 0x0D	; 13
    e116:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e11a:	61 e0       	ldi	r22, 0x01	; 1
    e11c:	8a e0       	ldi	r24, 0x0A	; 10
    e11e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e122:	61 e0       	ldi	r22, 0x01	; 1
    e124:	8b e0       	ldi	r24, 0x0B	; 11
    e126:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e12a:	61 e0       	ldi	r22, 0x01	; 1
    e12c:	86 e1       	ldi	r24, 0x16	; 22
    e12e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e132:	61 e0       	ldi	r22, 0x01	; 1
    e134:	88 e1       	ldi	r24, 0x18	; 24
    e136:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e13a:	61 e0       	ldi	r22, 0x01	; 1
    e13c:	8a e1       	ldi	r24, 0x1A	; 26
    e13e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e142:	61 e0       	ldi	r22, 0x01	; 1
    e144:	8c e1       	ldi	r24, 0x1C	; 28
    e146:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e14a:	61 e0       	ldi	r22, 0x01	; 1
    e14c:	85 e2       	ldi	r24, 0x25	; 37
    e14e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e152:	61 e0       	ldi	r22, 0x01	; 1
    e154:	82 e2       	ldi	r24, 0x22	; 34
    e156:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e15a:	61 e0       	ldi	r22, 0x01	; 1
    e15c:	80 e2       	ldi	r24, 0x20	; 32
    e15e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e162:	61 e0       	ldi	r22, 0x01	; 1
    e164:	8e e1       	ldi	r24, 0x1E	; 30
    e166:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e16a:	61 e0       	ldi	r22, 0x01	; 1
    e16c:	87 e1       	ldi	r24, 0x17	; 23
    e16e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e172:	61 e0       	ldi	r22, 0x01	; 1
    e174:	89 e1       	ldi	r24, 0x19	; 25
    e176:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e17a:	61 e0       	ldi	r22, 0x01	; 1
    e17c:	8b e1       	ldi	r24, 0x1B	; 27
    e17e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e182:	61 e0       	ldi	r22, 0x01	; 1
    e184:	8d e1       	ldi	r24, 0x1D	; 29
    e186:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e18a:	61 e0       	ldi	r22, 0x01	; 1
    e18c:	83 e2       	ldi	r24, 0x23	; 35
    e18e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e192:	61 e0       	ldi	r22, 0x01	; 1
    e194:	81 e2       	ldi	r24, 0x21	; 33
    e196:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e19a:	61 e0       	ldi	r22, 0x01	; 1
    e19c:	8f e1       	ldi	r24, 0x1F	; 31
    e19e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1a2:	61 e0       	ldi	r22, 0x01	; 1
    e1a4:	81 e3       	ldi	r24, 0x31	; 49
    e1a6:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1aa:	61 e0       	ldi	r22, 0x01	; 1
    e1ac:	86 e0       	ldi	r24, 0x06	; 6
    e1ae:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1b2:	61 e0       	ldi	r22, 0x01	; 1
    e1b4:	87 e0       	ldi	r24, 0x07	; 7
    e1b6:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1ba:	61 e0       	ldi	r22, 0x01	; 1
    e1bc:	88 e0       	ldi	r24, 0x08	; 8
    e1be:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1c2:	61 e0       	ldi	r22, 0x01	; 1
    e1c4:	89 e0       	ldi	r24, 0x09	; 9
    e1c6:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1ca:	61 e0       	ldi	r22, 0x01	; 1
    e1cc:	80 e3       	ldi	r24, 0x30	; 48
    e1ce:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1d2:	61 e0       	ldi	r22, 0x01	; 1
    e1d4:	8f e2       	ldi	r24, 0x2F	; 47
    e1d6:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1da:	61 e0       	ldi	r22, 0x01	; 1
    e1dc:	8e e2       	ldi	r24, 0x2E	; 46
    e1de:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1e2:	61 e0       	ldi	r22, 0x01	; 1
    e1e4:	8d e2       	ldi	r24, 0x2D	; 45
    e1e6:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1ea:	61 e0       	ldi	r22, 0x01	; 1
    e1ec:	85 e3       	ldi	r24, 0x35	; 53
    e1ee:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1f2:	61 e0       	ldi	r22, 0x01	; 1
    e1f4:	84 e2       	ldi	r24, 0x24	; 36
    e1f6:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e1fa:	61 e0       	ldi	r22, 0x01	; 1
    e1fc:	81 e0       	ldi	r24, 0x01	; 1
    e1fe:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e202:	61 e0       	ldi	r22, 0x01	; 1
    e204:	8c e0       	ldi	r24, 0x0C	; 12
    e206:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e20a:	61 e0       	ldi	r22, 0x01	; 1
    e20c:	87 e2       	ldi	r24, 0x27	; 39
    e20e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e212:	61 e0       	ldi	r22, 0x01	; 1
    e214:	8e e1       	ldi	r24, 0x1E	; 30
    e216:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e21a:	61 e0       	ldi	r22, 0x01	; 1
    e21c:	8e e1       	ldi	r24, 0x1E	; 30
    e21e:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
    e222:	60 e0       	ldi	r22, 0x00	; 0
    e224:	87 e3       	ldi	r24, 0x37	; 55
    e226:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e22a:	60 e0       	ldi	r22, 0x00	; 0
    e22c:	88 e3       	ldi	r24, 0x38	; 56
    e22e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e232:	62 e0       	ldi	r22, 0x02	; 2
    e234:	89 e3       	ldi	r24, 0x39	; 57
    e236:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e23a:	61 e0       	ldi	r22, 0x01	; 1
    e23c:	8a e0       	ldi	r24, 0x0A	; 10
    e23e:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
    e242:	61 e0       	ldi	r22, 0x01	; 1
    e244:	8b e0       	ldi	r24, 0x0B	; 11
    e246:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
    e24a:	60 e0       	ldi	r22, 0x00	; 0
    e24c:	89 e3       	ldi	r24, 0x39	; 57
    e24e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e252:	60 e0       	ldi	r22, 0x00	; 0
    e254:	8a e3       	ldi	r24, 0x3A	; 58
    e256:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e25a:	60 e0       	ldi	r22, 0x00	; 0
    e25c:	8b e3       	ldi	r24, 0x3B	; 59
    e25e:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    e262:	86 e1       	ldi	r24, 0x16	; 22
    e264:	80 93 4c 14 	sts	0x144C, r24	; 0x80144c <_sRuble_Parameters+0x9e>
    e268:	10 93 4d 14 	sts	0x144D, r17	; 0x80144d <_sRuble_Parameters+0x9f>
    e26c:	8a e1       	ldi	r24, 0x1A	; 26
    e26e:	80 93 4e 14 	sts	0x144E, r24	; 0x80144e <_sRuble_Parameters+0xa0>
    e272:	8c e1       	ldi	r24, 0x1C	; 28
    e274:	80 93 4f 14 	sts	0x144F, r24	; 0x80144f <_sRuble_Parameters+0xa1>
    e278:	85 e2       	ldi	r24, 0x25	; 37
    e27a:	80 93 50 14 	sts	0x1450, r24	; 0x801450 <_sRuble_Parameters+0xa2>
    e27e:	82 e2       	ldi	r24, 0x22	; 34
    e280:	80 93 51 14 	sts	0x1451, r24	; 0x801451 <_sRuble_Parameters+0xa3>
    e284:	80 e2       	ldi	r24, 0x20	; 32
    e286:	80 93 52 14 	sts	0x1452, r24	; 0x801452 <_sRuble_Parameters+0xa4>
    e28a:	8e e1       	ldi	r24, 0x1E	; 30
    e28c:	80 93 53 14 	sts	0x1453, r24	; 0x801453 <_sRuble_Parameters+0xa5>
    e290:	87 e1       	ldi	r24, 0x17	; 23
    e292:	80 93 54 14 	sts	0x1454, r24	; 0x801454 <_sRuble_Parameters+0xa6>
    e296:	89 e1       	ldi	r24, 0x19	; 25
    e298:	80 93 55 14 	sts	0x1455, r24	; 0x801455 <_sRuble_Parameters+0xa7>
    e29c:	8b e1       	ldi	r24, 0x1B	; 27
    e29e:	80 93 56 14 	sts	0x1456, r24	; 0x801456 <_sRuble_Parameters+0xa8>
    e2a2:	8d e1       	ldi	r24, 0x1D	; 29
    e2a4:	80 93 57 14 	sts	0x1457, r24	; 0x801457 <_sRuble_Parameters+0xa9>
    e2a8:	83 e2       	ldi	r24, 0x23	; 35
    e2aa:	80 93 58 14 	sts	0x1458, r24	; 0x801458 <_sRuble_Parameters+0xaa>
    e2ae:	81 e2       	ldi	r24, 0x21	; 33
    e2b0:	80 93 59 14 	sts	0x1459, r24	; 0x801459 <_sRuble_Parameters+0xab>
    e2b4:	8f e1       	ldi	r24, 0x1F	; 31
    e2b6:	80 93 5a 14 	sts	0x145A, r24	; 0x80145a <_sRuble_Parameters+0xac>
    e2ba:	81 e3       	ldi	r24, 0x31	; 49
    e2bc:	80 93 5b 14 	sts	0x145B, r24	; 0x80145b <_sRuble_Parameters+0xad>
    e2c0:	86 e0       	ldi	r24, 0x06	; 6
    e2c2:	80 93 5c 14 	sts	0x145C, r24	; 0x80145c <_sRuble_Parameters+0xae>
    e2c6:	87 e0       	ldi	r24, 0x07	; 7
    e2c8:	80 93 5d 14 	sts	0x145D, r24	; 0x80145d <_sRuble_Parameters+0xaf>
    e2cc:	88 e0       	ldi	r24, 0x08	; 8
    e2ce:	80 93 5e 14 	sts	0x145E, r24	; 0x80145e <_sRuble_Parameters+0xb0>
    e2d2:	89 e0       	ldi	r24, 0x09	; 9
    e2d4:	80 93 5f 14 	sts	0x145F, r24	; 0x80145f <_sRuble_Parameters+0xb1>
    e2d8:	80 e3       	ldi	r24, 0x30	; 48
    e2da:	80 93 60 14 	sts	0x1460, r24	; 0x801460 <_sRuble_Parameters+0xb2>
    e2de:	8f e2       	ldi	r24, 0x2F	; 47
    e2e0:	80 93 61 14 	sts	0x1461, r24	; 0x801461 <_sRuble_Parameters+0xb3>
    e2e4:	8e e2       	ldi	r24, 0x2E	; 46
    e2e6:	80 93 62 14 	sts	0x1462, r24	; 0x801462 <_sRuble_Parameters+0xb4>
    e2ea:	8d e2       	ldi	r24, 0x2D	; 45
    e2ec:	80 93 63 14 	sts	0x1463, r24	; 0x801463 <_sRuble_Parameters+0xb5>
    e2f0:	0c e4       	ldi	r16, 0x4C	; 76
    e2f2:	14 e1       	ldi	r17, 0x14	; 20
    e2f4:	61 e0       	ldi	r22, 0x01	; 1
    e2f6:	f8 01       	movw	r30, r16
    e2f8:	81 91       	ld	r24, Z+
    e2fa:	8f 01       	movw	r16, r30
    e2fc:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
    e300:	f4 e1       	ldi	r31, 0x14	; 20
    e302:	04 36       	cpi	r16, 0x64	; 100
    e304:	1f 07       	cpc	r17, r31
    e306:	b1 f7       	brne	.-20     	; 0xe2f4 <_Z19Initialise_Hardwarev+0x2b4>
    e308:	6e 98       	cbi	0x0d, 6	; 13
    e30a:	76 9a       	sbi	0x0e, 6	; 14
    e30c:	68 ee       	ldi	r22, 0xE8	; 232
    e30e:	73 e0       	ldi	r23, 0x03	; 3
    e310:	80 e0       	ldi	r24, 0x00	; 0
    e312:	90 e0       	ldi	r25, 0x00	; 0
    e314:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e318:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e31c:	88 69       	ori	r24, 0x98	; 152
    e31e:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e322:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e326:	86 60       	ori	r24, 0x06	; 6
    e328:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e32c:	78 94       	sei
    e32e:	68 ee       	ldi	r22, 0xE8	; 232
    e330:	73 e0       	ldi	r23, 0x03	; 3
    e332:	80 e0       	ldi	r24, 0x00	; 0
    e334:	90 e0       	ldi	r25, 0x00	; 0
    e336:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e33a:	7f d3       	rcall	.+1790   	; 0xea3a <_Z11Debug_Checkv>
    e33c:	0e 94 d8 65 	call	0xcbb0	; 0xcbb0 <_Z9Lora_Initv>
    e340:	88 23       	and	r24, r24
    e342:	79 f0       	breq	.+30     	; 0xe362 <_Z19Initialise_Hardwarev+0x322>
    e344:	0e 94 fa 65 	call	0xcbf4	; 0xcbf4 <_Z13Lora_Set_Freqv>
    e348:	0e 94 08 66 	call	0xcc10	; 0xcc10 <_Z15Lora_Set_Configv>
    e34c:	0e 94 02 66 	call	0xcc04	; 0xcc04 <_Z14Lora_Set_Powerv>
    e350:	10 92 6c 14 	sts	0x146C, r1	; 0x80146c <_sRuble_Parameters+0xbe>
    e354:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e358:	81 30       	cpi	r24, 0x01	; 1
    e35a:	11 f5       	brne	.+68     	; 0xe3a0 <_Z19Initialise_Hardwarev+0x360>
    e35c:	62 eb       	ldi	r22, 0xB2	; 178
    e35e:	74 e2       	ldi	r23, 0x24	; 36
    e360:	17 c0       	rjmp	.+46     	; 0xe390 <_Z19Initialise_Hardwarev+0x350>
    e362:	80 91 1d 14 	lds	r24, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
    e366:	82 60       	ori	r24, 0x02	; 2
    e368:	80 93 1d 14 	sts	0x141D, r24	; 0x80141d <_sRuble_Parameters+0x6f>
    e36c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    e370:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    e374:	91 60       	ori	r25, 0x01	; 1
    e376:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    e37a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    e37e:	81 e0       	ldi	r24, 0x01	; 1
    e380:	80 93 6c 14 	sts	0x146C, r24	; 0x80146c <_sRuble_Parameters+0xbe>
    e384:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e388:	81 30       	cpi	r24, 0x01	; 1
    e38a:	51 f4       	brne	.+20     	; 0xe3a0 <_Z19Initialise_Hardwarev+0x360>
    e38c:	6f e9       	ldi	r22, 0x9F	; 159
    e38e:	74 e2       	ldi	r23, 0x24	; 36
    e390:	86 ec       	ldi	r24, 0xC6	; 198
    e392:	94 e1       	ldi	r25, 0x14	; 20
    e394:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    e398:	86 ec       	ldi	r24, 0xC6	; 198
    e39a:	94 e1       	ldi	r25, 0x14	; 20
    e39c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    e3a0:	80 9a       	sbi	0x10, 0	; 16
    e3a2:	88 98       	cbi	0x11, 0	; 17
    e3a4:	68 e8       	ldi	r22, 0x88	; 136
    e3a6:	73 e1       	ldi	r23, 0x13	; 19
    e3a8:	80 e0       	ldi	r24, 0x00	; 0
    e3aa:	90 e0       	ldi	r25, 0x00	; 0
    e3ac:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e3b0:	81 b3       	in	r24, 0x11	; 17
    e3b2:	8e 6f       	ori	r24, 0xFE	; 254
    e3b4:	81 bb       	out	0x11, r24	; 17
    e3b6:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    e3ba:	84 60       	ori	r24, 0x04	; 4
    e3bc:	80 93 b0 13 	sts	0x13B0, r24	; 0x8013b0 <_sRuble_Parameters+0x2>
    e3c0:	1b db       	rcall	.-2506   	; 0xd9f8 <_Z16Display_Update_1v>
    e3c2:	68 e8       	ldi	r22, 0x88	; 136
    e3c4:	73 e1       	ldi	r23, 0x13	; 19
    e3c6:	80 e0       	ldi	r24, 0x00	; 0
    e3c8:	90 e0       	ldi	r25, 0x00	; 0
    e3ca:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e3ce:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    e3d2:	82 60       	ori	r24, 0x02	; 2
    e3d4:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
    e3d8:	0f db       	rcall	.-2530   	; 0xd9f8 <_Z16Display_Update_1v>
    e3da:	68 e8       	ldi	r22, 0x88	; 136
    e3dc:	73 e1       	ldi	r23, 0x13	; 19
    e3de:	80 e0       	ldi	r24, 0x00	; 0
    e3e0:	90 e0       	ldi	r25, 0x00	; 0
    e3e2:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e3e6:	68 e8       	ldi	r22, 0x88	; 136
    e3e8:	73 e1       	ldi	r23, 0x13	; 19
    e3ea:	80 e0       	ldi	r24, 0x00	; 0
    e3ec:	90 e0       	ldi	r25, 0x00	; 0
    e3ee:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e3f2:	68 e8       	ldi	r22, 0x88	; 136
    e3f4:	73 e1       	ldi	r23, 0x13	; 19
    e3f6:	80 e0       	ldi	r24, 0x00	; 0
    e3f8:	90 e0       	ldi	r25, 0x00	; 0
    e3fa:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e3fe:	68 e8       	ldi	r22, 0x88	; 136
    e400:	73 e1       	ldi	r23, 0x13	; 19
    e402:	80 e0       	ldi	r24, 0x00	; 0
    e404:	90 e0       	ldi	r25, 0x00	; 0
    e406:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e40a:	68 e8       	ldi	r22, 0x88	; 136
    e40c:	73 e1       	ldi	r23, 0x13	; 19
    e40e:	80 e0       	ldi	r24, 0x00	; 0
    e410:	90 e0       	ldi	r25, 0x00	; 0
    e412:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
    e416:	ce 01       	movw	r24, r28
    e418:	01 96       	adiw	r24, 0x01	; 1
    e41a:	23 e0       	ldi	r18, 0x03	; 3
    e41c:	fc 01       	movw	r30, r24
    e41e:	11 92       	st	Z+, r1
    e420:	2a 95       	dec	r18
    e422:	e9 f7       	brne	.-6      	; 0xe41e <_Z19Initialise_Hardwarev+0x3de>
    e424:	2a e1       	ldi	r18, 0x1A	; 26
    e426:	29 83       	std	Y+1, r18	; 0x01
    e428:	01 e0       	ldi	r16, 0x01	; 1
    e42a:	28 e8       	ldi	r18, 0x88	; 136
    e42c:	33 e1       	ldi	r19, 0x13	; 19
    e42e:	40 e0       	ldi	r20, 0x00	; 0
    e430:	50 e0       	ldi	r21, 0x00	; 0
    e432:	6e e1       	ldi	r22, 0x1E	; 30
    e434:	73 e0       	ldi	r23, 0x03	; 3
    e436:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    e43a:	0e 94 f2 68 	call	0xd1e4	; 0xd1e4 <_Z8Gsm_Initv>
    e43e:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e442:	88 23       	and	r24, r24
    e444:	29 f0       	breq	.+10     	; 0xe450 <_Z19Initialise_Hardwarev+0x410>
    e446:	21 30       	cpi	r18, 0x01	; 1
    e448:	e9 f4       	brne	.+58     	; 0xe484 <_Z19Initialise_Hardwarev+0x444>
    e44a:	61 e9       	ldi	r22, 0x91	; 145
    e44c:	74 e2       	ldi	r23, 0x24	; 36
    e44e:	12 c0       	rjmp	.+36     	; 0xe474 <_Z19Initialise_Hardwarev+0x434>
    e450:	80 91 1d 14 	lds	r24, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
    e454:	81 60       	ori	r24, 0x01	; 1
    e456:	80 93 1d 14 	sts	0x141D, r24	; 0x80141d <_sRuble_Parameters+0x6f>
    e45a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    e45e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    e462:	91 60       	ori	r25, 0x01	; 1
    e464:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    e468:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    e46c:	21 30       	cpi	r18, 0x01	; 1
    e46e:	51 f4       	brne	.+20     	; 0xe484 <_Z19Initialise_Hardwarev+0x444>
    e470:	6f e7       	ldi	r22, 0x7F	; 127
    e472:	74 e2       	ldi	r23, 0x24	; 36
    e474:	86 ec       	ldi	r24, 0xC6	; 198
    e476:	94 e1       	ldi	r25, 0x14	; 20
    e478:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    e47c:	86 ec       	ldi	r24, 0xC6	; 198
    e47e:	94 e1       	ldi	r25, 0x14	; 20
    e480:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    e484:	81 e0       	ldi	r24, 0x01	; 1
    e486:	80 93 ab 14 	sts	0x14AB, r24	; 0x8014ab <_sRuble_Parameters+0xfd>
    e48a:	0f 90       	pop	r0
    e48c:	0f 90       	pop	r0
    e48e:	0f 90       	pop	r0
    e490:	df 91       	pop	r29
    e492:	cf 91       	pop	r28
    e494:	1f 91       	pop	r17
    e496:	0f 91       	pop	r16
    e498:	08 95       	ret

0000e49a <_Z14MQTT_SUBSCRIBEPc>:
	return 0;
	
}

bool MQTT_SUBSCRIBE(char topic[])
{
    e49a:	cf 92       	push	r12
    e49c:	df 92       	push	r13
    e49e:	ef 92       	push	r14
    e4a0:	ff 92       	push	r15
    e4a2:	0f 93       	push	r16
    e4a4:	cf 93       	push	r28
    e4a6:	df 93       	push	r29
    e4a8:	cd b7       	in	r28, 0x3d	; 61
    e4aa:	de b7       	in	r29, 0x3e	; 62
    e4ac:	c4 56       	subi	r28, 0x64	; 100
    e4ae:	d1 09       	sbc	r29, r1
    e4b0:	0f b6       	in	r0, 0x3f	; 63
    e4b2:	f8 94       	cli
    e4b4:	de bf       	out	0x3e, r29	; 62
    e4b6:	0f be       	out	0x3f, r0	; 63
    e4b8:	cd bf       	out	0x3d, r28	; 61
    e4ba:	7c 01       	movw	r14, r24
	char temp_data[100];
	memset(temp_data,0,sizeof(temp_data));
    e4bc:	ce 01       	movw	r24, r28
    e4be:	01 96       	adiw	r24, 0x01	; 1
    e4c0:	6c 01       	movw	r12, r24
    e4c2:	84 e6       	ldi	r24, 0x64	; 100
    e4c4:	f6 01       	movw	r30, r12
    e4c6:	11 92       	st	Z+, r1
    e4c8:	8a 95       	dec	r24
    e4ca:	e9 f7       	brne	.-6      	; 0xe4c6 <_Z14MQTT_SUBSCRIBEPc+0x2c>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    e4cc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e4d0:	81 30       	cpi	r24, 0x01	; 1
    e4d2:	69 f4       	brne	.+26     	; 0xe4ee <_Z14MQTT_SUBSCRIBEPc+0x54>
	{
		_kSERIAL_MON_WRITE(topic,strlen(topic));
    e4d4:	f7 01       	movw	r30, r14
    e4d6:	01 90       	ld	r0, Z+
    e4d8:	00 20       	and	r0, r0
    e4da:	e9 f7       	brne	.-6      	; 0xe4d6 <_Z14MQTT_SUBSCRIBEPc+0x3c>
    e4dc:	31 97       	sbiw	r30, 0x01	; 1
    e4de:	af 01       	movw	r20, r30
    e4e0:	4e 19       	sub	r20, r14
    e4e2:	5f 09       	sbc	r21, r15
    e4e4:	b7 01       	movw	r22, r14
    e4e6:	86 ec       	ldi	r24, 0xC6	; 198
    e4e8:	94 e1       	ldi	r25, 0x14	; 20
    e4ea:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
	}
	
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
    e4ee:	f7 01       	movw	r30, r14
    e4f0:	01 90       	ld	r0, Z+
    e4f2:	00 20       	and	r0, r0
    e4f4:	e9 f7       	brne	.-6      	; 0xe4f0 <_Z14MQTT_SUBSCRIBEPc+0x56>
    e4f6:	31 97       	sbiw	r30, 0x01	; 1
    e4f8:	ee 19       	sub	r30, r14
    e4fa:	ff 09       	sbc	r31, r15
    e4fc:	ff 93       	push	r31
    e4fe:	ef 93       	push	r30
    e500:	8d ef       	ldi	r24, 0xFD	; 253
    e502:	94 e0       	ldi	r25, 0x04	; 4
    e504:	9f 93       	push	r25
    e506:	8f 93       	push	r24
    e508:	df 92       	push	r13
    e50a:	cf 92       	push	r12
    e50c:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
    e510:	02 e0       	ldi	r16, 0x02	; 2
    e512:	28 eb       	ldi	r18, 0xB8	; 184
    e514:	3b e0       	ldi	r19, 0x0B	; 11
    e516:	40 e0       	ldi	r20, 0x00	; 0
    e518:	50 e0       	ldi	r21, 0x00	; 0
    e51a:	64 e0       	ldi	r22, 0x04	; 4
    e51c:	74 e0       	ldi	r23, 0x04	; 4
    e51e:	c6 01       	movw	r24, r12
    e520:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    e524:	0f 90       	pop	r0
    e526:	0f 90       	pop	r0
    e528:	0f 90       	pop	r0
    e52a:	0f 90       	pop	r0
    e52c:	0f 90       	pop	r0
    e52e:	0f 90       	pop	r0
    e530:	81 11       	cpse	r24, r1
    e532:	02 c0       	rjmp	.+4      	; 0xe538 <_Z14MQTT_SUBSCRIBEPc+0x9e>
				}
				return 1;
			}
		}
	}
	return 0;
    e534:	80 e0       	ldi	r24, 0x00	; 0
    e536:	36 c0       	rjmp	.+108    	; 0xe5a4 <_Z14MQTT_SUBSCRIBEPc+0x10a>
	
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
	{
		Reset_Buffer();
    e538:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(topic);
    e53c:	b7 01       	movw	r22, r14
    e53e:	83 e8       	ldi	r24, 0x83	; 131
    e540:	96 e1       	ldi	r25, 0x16	; 22
    e542:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
		if(_kSEND_AT_COMMAND("AT+CMQTTSUB=0,10,1,1",">",NULL,3000,2))
    e546:	02 e0       	ldi	r16, 0x02	; 2
    e548:	28 eb       	ldi	r18, 0xB8	; 184
    e54a:	3b e0       	ldi	r19, 0x0B	; 11
    e54c:	40 e0       	ldi	r20, 0x00	; 0
    e54e:	50 e0       	ldi	r21, 0x00	; 0
    e550:	64 e0       	ldi	r22, 0x04	; 4
    e552:	74 e0       	ldi	r23, 0x04	; 4
    e554:	85 e1       	ldi	r24, 0x15	; 21
    e556:	95 e0       	ldi	r25, 0x05	; 5
    e558:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    e55c:	88 23       	and	r24, r24
    e55e:	51 f3       	breq	.-44     	; 0xe534 <_Z14MQTT_SUBSCRIBEPc+0x9a>
		{
			Reset_Buffer();
    e560:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(topic);
    e564:	b7 01       	movw	r22, r14
    e566:	83 e8       	ldi	r24, 0x83	; 131
    e568:	96 e1       	ldi	r25, 0x16	; 22
    e56a:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
			if((_kSEND_AT_COMMAND(NULL,"+CMQTTSUB: 0,0",NULL,5000,2)))
    e56e:	28 e8       	ldi	r18, 0x88	; 136
    e570:	33 e1       	ldi	r19, 0x13	; 19
    e572:	40 e0       	ldi	r20, 0x00	; 0
    e574:	50 e0       	ldi	r21, 0x00	; 0
    e576:	6a e2       	ldi	r22, 0x2A	; 42
    e578:	75 e0       	ldi	r23, 0x05	; 5
    e57a:	80 e0       	ldi	r24, 0x00	; 0
    e57c:	90 e0       	ldi	r25, 0x00	; 0
    e57e:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    e582:	88 23       	and	r24, r24
    e584:	b9 f2       	breq	.-82     	; 0xe534 <_Z14MQTT_SUBSCRIBEPc+0x9a>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    e586:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e58a:	81 30       	cpi	r24, 0x01	; 1
    e58c:	51 f4       	brne	.+20     	; 0xe5a2 <_Z14MQTT_SUBSCRIBEPc+0x108>
				{
					_kSERAIL_MON_WRITE("SUB SUCCESS");
    e58e:	6e e7       	ldi	r22, 0x7E	; 126
    e590:	73 e2       	ldi	r23, 0x23	; 35
    e592:	86 ec       	ldi	r24, 0xC6	; 198
    e594:	94 e1       	ldi	r25, 0x14	; 20
    e596:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    e59a:	86 ec       	ldi	r24, 0xC6	; 198
    e59c:	94 e1       	ldi	r25, 0x14	; 20
    e59e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				}
				return 1;
    e5a2:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	return 0;
}
    e5a4:	cc 59       	subi	r28, 0x9C	; 156
    e5a6:	df 4f       	sbci	r29, 0xFF	; 255
    e5a8:	0f b6       	in	r0, 0x3f	; 63
    e5aa:	f8 94       	cli
    e5ac:	de bf       	out	0x3e, r29	; 62
    e5ae:	0f be       	out	0x3f, r0	; 63
    e5b0:	cd bf       	out	0x3d, r28	; 61
    e5b2:	df 91       	pop	r29
    e5b4:	cf 91       	pop	r28
    e5b6:	0f 91       	pop	r16
    e5b8:	ff 90       	pop	r15
    e5ba:	ef 90       	pop	r14
    e5bc:	df 90       	pop	r13
    e5be:	cf 90       	pop	r12
    e5c0:	08 95       	ret

0000e5c2 <_Z21Subscribed_data_checkv>:
}

bool Subscribed_data_check(void)
{
	
	if(rx_complete)
    e5c2:	80 91 78 0c 	lds	r24, 0x0C78	; 0x800c78 <rx_complete>
    e5c6:	88 23       	and	r24, r24
    e5c8:	09 f4       	brne	.+2      	; 0xe5cc <_Z21Subscribed_data_checkv+0xa>
    e5ca:	48 c0       	rjmp	.+144    	; 0xe65c <_Z21Subscribed_data_checkv+0x9a>
	{
		rx_complete = _kRESET;
    e5cc:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    e5d0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e5d4:	81 30       	cpi	r24, 0x01	; 1
    e5d6:	a9 f4       	brne	.+42     	; 0xe602 <_Z21Subscribed_data_checkv+0x40>
		{
			_kSERAIL_MON_WRITE("enter 1");
    e5d8:	62 e0       	ldi	r22, 0x02	; 2
    e5da:	73 e2       	ldi	r23, 0x23	; 35
    e5dc:	86 ec       	ldi	r24, 0xC6	; 198
    e5de:	94 e1       	ldi	r25, 0x14	; 20
    e5e0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_WRITE((const char*)_gPub_Buff,strlen((const char*)_gPub_Buff));
    e5e4:	e0 ed       	ldi	r30, 0xD0	; 208
    e5e6:	ff e0       	ldi	r31, 0x0F	; 15
    e5e8:	01 90       	ld	r0, Z+
    e5ea:	00 20       	and	r0, r0
    e5ec:	e9 f7       	brne	.-6      	; 0xe5e8 <_Z21Subscribed_data_checkv+0x26>
    e5ee:	31 97       	sbiw	r30, 0x01	; 1
    e5f0:	af 01       	movw	r20, r30
    e5f2:	40 5d       	subi	r20, 0xD0	; 208
    e5f4:	5f 40       	sbci	r21, 0x0F	; 15
    e5f6:	60 ed       	ldi	r22, 0xD0	; 208
    e5f8:	7f e0       	ldi	r23, 0x0F	; 15
    e5fa:	86 ec       	ldi	r24, 0xC6	; 198
    e5fc:	94 e1       	ldi	r25, 0x14	; 20
    e5fe:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
		}
		if(strstr((const char *)_gPub_Buff,"+CMQTTRX") && monitor_serial_start < 7)
    e602:	69 e3       	ldi	r22, 0x39	; 57
    e604:	75 e0       	ldi	r23, 0x05	; 5
    e606:	80 ed       	ldi	r24, 0xD0	; 208
    e608:	9f e0       	ldi	r25, 0x0F	; 15
    e60a:	0e 94 46 ed 	call	0x1da8c	; 0x1da8c <strstr>
    e60e:	89 2b       	or	r24, r25
    e610:	b1 f0       	breq	.+44     	; 0xe63e <_Z21Subscribed_data_checkv+0x7c>
    e612:	80 91 74 0c 	lds	r24, 0x0C74	; 0x800c74 <monitor_serial_start>
    e616:	87 30       	cpi	r24, 0x07	; 7
    e618:	90 f4       	brcc	.+36     	; 0xe63e <_Z21Subscribed_data_checkv+0x7c>
		{
			monitor_serial_start = 0;
    e61a:	10 92 74 0c 	sts	0x0C74, r1	; 0x800c74 <monitor_serial_start>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    e61e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e622:	81 30       	cpi	r24, 0x01	; 1
    e624:	51 f4       	brne	.+20     	; 0xe63a <_Z21Subscribed_data_checkv+0x78>
			{
				_kSERAIL_MON_WRITE("TOPIC MATCH");
    e626:	66 ef       	ldi	r22, 0xF6	; 246
    e628:	72 e2       	ldi	r23, 0x22	; 34
    e62a:	86 ec       	ldi	r24, 0xC6	; 198
    e62c:	94 e1       	ldi	r25, 0x14	; 20
    e62e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    e632:	86 ec       	ldi	r24, 0xC6	; 198
    e634:	94 e1       	ldi	r25, 0x14	; 20
    e636:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			return 1;
    e63a:	81 e0       	ldi	r24, 0x01	; 1
    e63c:	08 95       	ret
		}
		
		memset((char*)_gPub_Buff,0,strlen((const char*)_gPub_Buff));
    e63e:	e0 ed       	ldi	r30, 0xD0	; 208
    e640:	ff e0       	ldi	r31, 0x0F	; 15
    e642:	01 90       	ld	r0, Z+
    e644:	00 20       	and	r0, r0
    e646:	e9 f7       	brne	.-6      	; 0xe642 <_Z21Subscribed_data_checkv+0x80>
    e648:	31 97       	sbiw	r30, 0x01	; 1
    e64a:	af 01       	movw	r20, r30
    e64c:	40 5d       	subi	r20, 0xD0	; 208
    e64e:	5f 40       	sbci	r21, 0x0F	; 15
    e650:	60 e0       	ldi	r22, 0x00	; 0
    e652:	70 e0       	ldi	r23, 0x00	; 0
    e654:	80 ed       	ldi	r24, 0xD0	; 208
    e656:	9f e0       	ldi	r25, 0x0F	; 15
    e658:	0e 94 2f ed 	call	0x1da5e	; 0x1da5e <memset>
	}
	
	return 0;
    e65c:	80 e0       	ldi	r24, 0x00	; 0
			return 1;
		}
	}
	
	return 0;
}
    e65e:	08 95       	ret

0000e660 <_ZNK5EERefdeEv>:
	}
}


void Kill_Switch_Through_SMS(void)
{
    e660:	fc 01       	movw	r30, r24
    e662:	80 81       	ld	r24, Z
    e664:	91 81       	ldd	r25, Z+1	; 0x01
    e666:	0c 94 3b f0 	jmp	0x1e076	; 0x1e076 <eeprom_read_byte>

0000e66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>:
    e66a:	0f 93       	push	r16
    e66c:	1f 93       	push	r17
    e66e:	cf 93       	push	r28
    e670:	df 93       	push	r29
    e672:	1f 92       	push	r1
    e674:	1f 92       	push	r1
    e676:	cd b7       	in	r28, 0x3d	; 61
    e678:	de b7       	in	r29, 0x3e	; 62
    e67a:	8b 01       	movw	r16, r22
    e67c:	9a 83       	std	Y+2, r25	; 0x02
    e67e:	89 83       	std	Y+1, r24	; 0x01
    e680:	ce 01       	movw	r24, r28
    e682:	01 96       	adiw	r24, 0x01	; 1
    e684:	ed df       	rcall	.-38     	; 0xe660 <_ZNK5EERefdeEv>
    e686:	f8 01       	movw	r30, r16
    e688:	80 83       	st	Z, r24
    e68a:	c8 01       	movw	r24, r16
    e68c:	0f 90       	pop	r0
    e68e:	0f 90       	pop	r0
    e690:	df 91       	pop	r29
    e692:	cf 91       	pop	r28
    e694:	1f 91       	pop	r17
    e696:	0f 91       	pop	r16
    e698:	08 95       	ret

0000e69a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.3>:
    e69a:	af 92       	push	r10
    e69c:	bf 92       	push	r11
    e69e:	cf 92       	push	r12
    e6a0:	df 92       	push	r13
    e6a2:	ef 92       	push	r14
    e6a4:	ff 92       	push	r15
    e6a6:	0f 93       	push	r16
    e6a8:	1f 93       	push	r17
    e6aa:	cf 93       	push	r28
    e6ac:	df 93       	push	r29
    e6ae:	1f 92       	push	r1
    e6b0:	1f 92       	push	r1
    e6b2:	cd b7       	in	r28, 0x3d	; 61
    e6b4:	de b7       	in	r29, 0x3e	; 62
    e6b6:	8b 01       	movw	r16, r22
    e6b8:	6b 01       	movw	r12, r22
    e6ba:	24 e0       	ldi	r18, 0x04	; 4
    e6bc:	c2 0e       	add	r12, r18
    e6be:	d1 1c       	adc	r13, r1
    e6c0:	7b 01       	movw	r14, r22
    e6c2:	5c 01       	movw	r10, r24
    e6c4:	a6 1a       	sub	r10, r22
    e6c6:	b7 0a       	sbc	r11, r23
    e6c8:	c5 01       	movw	r24, r10
    e6ca:	8e 0d       	add	r24, r14
    e6cc:	9f 1d       	adc	r25, r15
    e6ce:	9a 83       	std	Y+2, r25	; 0x02
    e6d0:	89 83       	std	Y+1, r24	; 0x01
    e6d2:	ce 01       	movw	r24, r28
    e6d4:	01 96       	adiw	r24, 0x01	; 1
    e6d6:	c4 df       	rcall	.-120    	; 0xe660 <_ZNK5EERefdeEv>
    e6d8:	f7 01       	movw	r30, r14
    e6da:	81 93       	st	Z+, r24
    e6dc:	7f 01       	movw	r14, r30
    e6de:	ec 15       	cp	r30, r12
    e6e0:	fd 05       	cpc	r31, r13
    e6e2:	91 f7       	brne	.-28     	; 0xe6c8 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.3+0x2e>
    e6e4:	c8 01       	movw	r24, r16
    e6e6:	0f 90       	pop	r0
    e6e8:	0f 90       	pop	r0
    e6ea:	df 91       	pop	r29
    e6ec:	cf 91       	pop	r28
    e6ee:	1f 91       	pop	r17
    e6f0:	0f 91       	pop	r16
    e6f2:	ff 90       	pop	r15
    e6f4:	ef 90       	pop	r14
    e6f6:	df 90       	pop	r13
    e6f8:	cf 90       	pop	r12
    e6fa:	bf 90       	pop	r11
    e6fc:	af 90       	pop	r10
    e6fe:	08 95       	ret

0000e700 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.14>:
    e700:	af 92       	push	r10
    e702:	bf 92       	push	r11
    e704:	cf 92       	push	r12
    e706:	df 92       	push	r13
    e708:	ef 92       	push	r14
    e70a:	ff 92       	push	r15
    e70c:	0f 93       	push	r16
    e70e:	1f 93       	push	r17
    e710:	cf 93       	push	r28
    e712:	df 93       	push	r29
    e714:	1f 92       	push	r1
    e716:	1f 92       	push	r1
    e718:	cd b7       	in	r28, 0x3d	; 61
    e71a:	de b7       	in	r29, 0x3e	; 62
    e71c:	8b 01       	movw	r16, r22
    e71e:	6b 01       	movw	r12, r22
    e720:	2b e0       	ldi	r18, 0x0B	; 11
    e722:	c2 0e       	add	r12, r18
    e724:	d1 1c       	adc	r13, r1
    e726:	7b 01       	movw	r14, r22
    e728:	5c 01       	movw	r10, r24
    e72a:	a6 1a       	sub	r10, r22
    e72c:	b7 0a       	sbc	r11, r23
    e72e:	c5 01       	movw	r24, r10
    e730:	8e 0d       	add	r24, r14
    e732:	9f 1d       	adc	r25, r15
    e734:	9a 83       	std	Y+2, r25	; 0x02
    e736:	89 83       	std	Y+1, r24	; 0x01
    e738:	ce 01       	movw	r24, r28
    e73a:	01 96       	adiw	r24, 0x01	; 1
    e73c:	91 df       	rcall	.-222    	; 0xe660 <_ZNK5EERefdeEv>
    e73e:	f7 01       	movw	r30, r14
    e740:	81 93       	st	Z+, r24
    e742:	7f 01       	movw	r14, r30
    e744:	ec 15       	cp	r30, r12
    e746:	fd 05       	cpc	r31, r13
    e748:	91 f7       	brne	.-28     	; 0xe72e <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.14+0x2e>
    e74a:	c8 01       	movw	r24, r16
    e74c:	0f 90       	pop	r0
    e74e:	0f 90       	pop	r0
    e750:	df 91       	pop	r29
    e752:	cf 91       	pop	r28
    e754:	1f 91       	pop	r17
    e756:	0f 91       	pop	r16
    e758:	ff 90       	pop	r15
    e75a:	ef 90       	pop	r14
    e75c:	df 90       	pop	r13
    e75e:	cf 90       	pop	r12
    e760:	bf 90       	pop	r11
    e762:	af 90       	pop	r10
    e764:	08 95       	ret

0000e766 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.2>:
    e766:	0f 93       	push	r16
    e768:	1f 93       	push	r17
    e76a:	cf 93       	push	r28
    e76c:	df 93       	push	r29
    e76e:	1f 92       	push	r1
    e770:	1f 92       	push	r1
    e772:	cd b7       	in	r28, 0x3d	; 61
    e774:	de b7       	in	r29, 0x3e	; 62
    e776:	8b 01       	movw	r16, r22
    e778:	fb 01       	movw	r30, r22
    e77a:	60 81       	ld	r22, Z
    e77c:	9a 83       	std	Y+2, r25	; 0x02
    e77e:	89 83       	std	Y+1, r24	; 0x01
    e780:	ce 01       	movw	r24, r28
    e782:	01 96       	adiw	r24, 0x01	; 1
    e784:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
    e788:	c8 01       	movw	r24, r16
    e78a:	0f 90       	pop	r0
    e78c:	0f 90       	pop	r0
    e78e:	df 91       	pop	r29
    e790:	cf 91       	pop	r28
    e792:	1f 91       	pop	r17
    e794:	0f 91       	pop	r16
    e796:	08 95       	ret

0000e798 <_Z9Check_Simc>:
    e798:	0f 93       	push	r16
    e79a:	cf 93       	push	r28
    e79c:	df 93       	push	r29
    e79e:	1f 92       	push	r1
    e7a0:	1f 92       	push	r1
    e7a2:	cd b7       	in	r28, 0x3d	; 61
    e7a4:	de b7       	in	r29, 0x3e	; 62
    e7a6:	90 91 de 0c 	lds	r25, 0x0CDE	; 0x800cde <_ZZ9Check_SimcE7counter>
    e7aa:	9f 5f       	subi	r25, 0xFF	; 255
    e7ac:	90 93 de 0c 	sts	0x0CDE, r25	; 0x800cde <_ZZ9Check_SimcE7counter>
    e7b0:	83 30       	cpi	r24, 0x03	; 3
    e7b2:	09 f0       	breq	.+2      	; 0xe7b6 <_Z9Check_Simc+0x1e>
    e7b4:	62 c0       	rjmp	.+196    	; 0xe87a <_Z9Check_Simc+0xe2>
    e7b6:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    e7ba:	81 30       	cpi	r24, 0x01	; 1
    e7bc:	d1 f5       	brne	.+116    	; 0xe832 <_Z9Check_Simc+0x9a>
    e7be:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    e7c2:	80 7f       	andi	r24, 0xF0	; 240
    e7c4:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    e7c8:	1a 82       	std	Y+2, r1	; 0x02
    e7ca:	19 82       	std	Y+1, r1	; 0x01
    e7cc:	8a e1       	ldi	r24, 0x1A	; 26
    e7ce:	89 83       	std	Y+1, r24	; 0x01
    e7d0:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
    e7d4:	be 01       	movw	r22, r28
    e7d6:	6f 5f       	subi	r22, 0xFF	; 255
    e7d8:	7f 4f       	sbci	r23, 0xFF	; 255
    e7da:	83 e8       	ldi	r24, 0x83	; 131
    e7dc:	96 e1       	ldi	r25, 0x16	; 22
    e7de:	0e 94 be d4 	call	0x1a97c	; 0x1a97c <_ZN5Print7printlnEPKc>
    e7e2:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
    e7e6:	6f e7       	ldi	r22, 0x7F	; 127
    e7e8:	75 e2       	ldi	r23, 0x25	; 37
    e7ea:	83 e8       	ldi	r24, 0x83	; 131
    e7ec:	96 e1       	ldi	r25, 0x16	; 22
    e7ee:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    e7f2:	01 e0       	ldi	r16, 0x01	; 1
    e7f4:	20 e1       	ldi	r18, 0x10	; 16
    e7f6:	37 e2       	ldi	r19, 0x27	; 39
    e7f8:	40 e0       	ldi	r20, 0x00	; 0
    e7fa:	50 e0       	ldi	r21, 0x00	; 0
    e7fc:	6e e1       	ldi	r22, 0x1E	; 30
    e7fe:	73 e0       	ldi	r23, 0x03	; 3
    e800:	80 e0       	ldi	r24, 0x00	; 0
    e802:	90 e0       	ldi	r25, 0x00	; 0
    e804:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    e808:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
    e80c:	6a e7       	ldi	r22, 0x7A	; 122
    e80e:	75 e2       	ldi	r23, 0x25	; 37
    e810:	83 e8       	ldi	r24, 0x83	; 131
    e812:	96 e1       	ldi	r25, 0x16	; 22
    e814:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    e818:	02 e0       	ldi	r16, 0x02	; 2
    e81a:	28 eb       	ldi	r18, 0xB8	; 184
    e81c:	3b e0       	ldi	r19, 0x0B	; 11
    e81e:	40 e0       	ldi	r20, 0x00	; 0
    e820:	50 e0       	ldi	r21, 0x00	; 0
    e822:	6e e1       	ldi	r22, 0x1E	; 30
    e824:	73 e0       	ldi	r23, 0x03	; 3
    e826:	80 e0       	ldi	r24, 0x00	; 0
    e828:	90 e0       	ldi	r25, 0x00	; 0
    e82a:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    e82e:	0e 94 f2 68 	call	0xd1e4	; 0xd1e4 <_Z8Gsm_Initv>
    e832:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
    e836:	61 e7       	ldi	r22, 0x71	; 113
    e838:	75 e2       	ldi	r23, 0x25	; 37
    e83a:	83 e8       	ldi	r24, 0x83	; 131
    e83c:	96 e1       	ldi	r25, 0x16	; 22
    e83e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    e842:	02 e0       	ldi	r16, 0x02	; 2
    e844:	20 ed       	ldi	r18, 0xD0	; 208
    e846:	37 e0       	ldi	r19, 0x07	; 7
    e848:	40 e0       	ldi	r20, 0x00	; 0
    e84a:	50 e0       	ldi	r21, 0x00	; 0
    e84c:	6e e1       	ldi	r22, 0x1E	; 30
    e84e:	73 e0       	ldi	r23, 0x03	; 3
    e850:	80 e0       	ldi	r24, 0x00	; 0
    e852:	90 e0       	ldi	r25, 0x00	; 0
    e854:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    e858:	81 11       	cpse	r24, r1
    e85a:	0a c0       	rjmp	.+20     	; 0xe870 <_Z9Check_Simc+0xd8>
    e85c:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    e860:	80 7f       	andi	r24, 0xF0	; 240
    e862:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    e866:	81 e0       	ldi	r24, 0x01	; 1
    e868:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    e86c:	80 e0       	ldi	r24, 0x00	; 0
    e86e:	05 c0       	rjmp	.+10     	; 0xe87a <_Z9Check_Simc+0xe2>
    e870:	82 e0       	ldi	r24, 0x02	; 2
    e872:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    e876:	81 e0       	ldi	r24, 0x01	; 1
    e878:	00 c0       	rjmp	.+0      	; 0xe87a <_Z9Check_Simc+0xe2>
    e87a:	0f 90       	pop	r0
    e87c:	0f 90       	pop	r0
    e87e:	df 91       	pop	r29
    e880:	cf 91       	pop	r28
    e882:	0f 91       	pop	r16
    e884:	08 95       	ret

0000e886 <_Z31Keeps_Monitor_Server_Connectionv>:
{
	static uint32_t server_wait_timer;
	static unsigned char timer_count,connect_count,ping_timer,ping_req_timer;
	if(_sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)
	{
		ping_req_timer = 100;
    e886:	84 e6       	ldi	r24, 0x64	; 100
    e888:	80 93 dd 0c 	sts	0x0CDD, r24	; 0x800cdd <_ZZ31Keeps_Monitor_Server_ConnectionvE14ping_req_timer>
	else
	{
		ping_req_timer = 100;
	}
				
	if(!_sRuble_Parameters.Wait_Server_Not_Reachable)
    e88c:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    e890:	81 11       	cpse	r24, r1
    e892:	40 c0       	rjmp	.+128    	; 0xe914 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
	{
		if(ping_timer > ping_req_timer)
    e894:	80 91 dc 0c 	lds	r24, 0x0CDC	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e898:	85 36       	cpi	r24, 0x65	; 101
    e89a:	a8 f1       	brcs	.+106    	; 0xe906 <_Z31Keeps_Monitor_Server_Connectionv+0x80>
		{
			ping_timer = 0;
    e89c:	10 92 dc 0c 	sts	0x0CDC, r1	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
			if(!_kMQTT_LOOP())
    e8a0:	0e 94 22 6c 	call	0xd844	; 0xd844 <_Z9MQTT_Loopv>
    e8a4:	81 11       	cpse	r24, r1
    e8a6:	32 c0       	rjmp	.+100    	; 0xe90c <_Z31Keeps_Monitor_Server_Connectionv+0x86>
			{
				_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
    e8a8:	82 e0       	ldi	r24, 0x02	; 2
    e8aa:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
				_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
    e8ae:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    e8b2:	8b 7f       	andi	r24, 0xFB	; 251
    e8b4:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				if(connect_count < _kRETRY_TO_CONNECT_SERVER)
    e8b8:	80 91 db 0c 	lds	r24, 0x0CDB	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e8bc:	83 30       	cpi	r24, 0x03	; 3
    e8be:	78 f4       	brcc	.+30     	; 0xe8de <_Z31Keeps_Monitor_Server_Connectionv+0x58>
				{
					_sRuble_Parameters.Wait_Server_Not_Reachable = _kRESET;
    e8c0:	10 92 68 14 	sts	0x1468, r1	; 0x801468 <_sRuble_Parameters+0xba>
					if(!Ping_to_Server())
    e8c4:	0e 94 8b 80 	call	0x10116	; 0x10116 <_Z14Ping_to_Serverv>
    e8c8:	81 11       	cpse	r24, r1
    e8ca:	06 c0       	rjmp	.+12     	; 0xe8d8 <_Z31Keeps_Monitor_Server_Connectionv+0x52>
					{
						connect_count++;
    e8cc:	80 91 db 0c 	lds	r24, 0x0CDB	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e8d0:	8f 5f       	subi	r24, 0xFF	; 255
    e8d2:	80 93 db 0c 	sts	0x0CDB, r24	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e8d6:	1a c0       	rjmp	.+52     	; 0xe90c <_Z31Keeps_Monitor_Server_Connectionv+0x86>
					}
					else
					{
						connect_count = _kRESET;
    e8d8:	10 92 db 0c 	sts	0x0CDB, r1	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e8dc:	17 c0       	rjmp	.+46     	; 0xe90c <_Z31Keeps_Monitor_Server_Connectionv+0x86>
					}
				}
				else
				{
					if(_sRuble_Parameters.Wait_Server_Not_Reachable != _kSET)
    e8de:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    e8e2:	81 30       	cpi	r24, 0x01	; 1
    e8e4:	b9 f0       	breq	.+46     	; 0xe914 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
					{
						_sRuble_Parameters.Wait_Server_Not_Reachable = _kSET;
    e8e6:	81 e0       	ldi	r24, 0x01	; 1
    e8e8:	80 93 68 14 	sts	0x1468, r24	; 0x801468 <_sRuble_Parameters+0xba>
						server_wait_timer = _kWAIT_DUE_TO_SERVER_NOT_RECHABLE;
    e8ec:	8e e1       	ldi	r24, 0x1E	; 30
    e8ee:	90 e0       	ldi	r25, 0x00	; 0
    e8f0:	a0 e0       	ldi	r26, 0x00	; 0
    e8f2:	b0 e0       	ldi	r27, 0x00	; 0
    e8f4:	80 93 d7 0c 	sts	0x0CD7, r24	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e8f8:	90 93 d8 0c 	sts	0x0CD8, r25	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e8fc:	a0 93 d9 0c 	sts	0x0CD9, r26	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e900:	b0 93 da 0c 	sts	0x0CDA, r27	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e904:	03 c0       	rjmp	.+6      	; 0xe90c <_Z31Keeps_Monitor_Server_Connectionv+0x86>
				}
			}
		}
		else
		{
			ping_timer++;
    e906:	8f 5f       	subi	r24, 0xFF	; 255
    e908:	80 93 dc 0c 	sts	0x0CDC, r24	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
		}
	}
						
	if(_sRuble_Parameters.Wait_Server_Not_Reachable)  /* don't try again and again to connect the server have to wait for some time */
    e90c:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    e910:	88 23       	and	r24, r24
    e912:	e1 f0       	breq	.+56     	; 0xe94c <_Z31Keeps_Monitor_Server_Connectionv+0xc6>
	{
		if(server_wait_timer)
    e914:	80 91 d7 0c 	lds	r24, 0x0CD7	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e918:	90 91 d8 0c 	lds	r25, 0x0CD8	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e91c:	a0 91 d9 0c 	lds	r26, 0x0CD9	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e920:	b0 91 da 0c 	lds	r27, 0x0CDA	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e924:	00 97       	sbiw	r24, 0x00	; 0
    e926:	a1 05       	cpc	r26, r1
    e928:	b1 05       	cpc	r27, r1
    e92a:	61 f0       	breq	.+24     	; 0xe944 <_Z31Keeps_Monitor_Server_Connectionv+0xbe>
		{
			server_wait_timer--;
    e92c:	01 97       	sbiw	r24, 0x01	; 1
    e92e:	a1 09       	sbc	r26, r1
    e930:	b1 09       	sbc	r27, r1
    e932:	80 93 d7 0c 	sts	0x0CD7, r24	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e936:	90 93 d8 0c 	sts	0x0CD8, r25	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e93a:	a0 93 d9 0c 	sts	0x0CD9, r26	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e93e:	b0 93 da 0c 	sts	0x0CDA, r27	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e942:	08 95       	ret
		}
		else
		{
			_sRuble_Parameters.Wait_Server_Not_Reachable = _kRESET;
    e944:	10 92 68 14 	sts	0x1468, r1	; 0x801468 <_sRuble_Parameters+0xba>
			connect_count = _kRESET;
    e948:	10 92 db 0c 	sts	0x0CDB, r1	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e94c:	08 95       	ret

0000e94e <_Z19Pump_Run_Monitoringv>:
	return;
}


char Pump_Run_Monitoring(void)
{
    e94e:	cf 92       	push	r12
    e950:	df 92       	push	r13
    e952:	ef 92       	push	r14
    e954:	ff 92       	push	r15
    e956:	cf 93       	push	r28
	if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    e958:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    e95c:	81 11       	cpse	r24, r1
    e95e:	50 c0       	rjmp	.+160    	; 0xea00 <_Z19Pump_Run_Monitoringv+0xb2>
	{
		if(_sRuble_Parameters.By_Pass_CT == _kSET)
    e960:	c0 91 79 14 	lds	r28, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
    e964:	c1 30       	cpi	r28, 0x01	; 1
    e966:	09 f0       	breq	.+2      	; 0xe96a <_Z19Pump_Run_Monitoringv+0x1c>
    e968:	42 c0       	rjmp	.+132    	; 0xe9ee <_Z19Pump_Run_Monitoringv+0xa0>
		{
			if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current) - ((_sPump_Parameter.Pump_Nominal_Current/100) * 90)))   // DEMO ONLY
    e96a:	c0 90 a4 13 	lds	r12, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    e96e:	d0 90 a5 13 	lds	r13, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    e972:	e0 90 a6 13 	lds	r14, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    e976:	f0 90 a7 13 	lds	r15, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    e97a:	20 e0       	ldi	r18, 0x00	; 0
    e97c:	30 e0       	ldi	r19, 0x00	; 0
    e97e:	48 ec       	ldi	r20, 0xC8	; 200
    e980:	52 e4       	ldi	r21, 0x42	; 66
    e982:	c7 01       	movw	r24, r14
    e984:	b6 01       	movw	r22, r12
    e986:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
    e98a:	20 e0       	ldi	r18, 0x00	; 0
    e98c:	30 e0       	ldi	r19, 0x00	; 0
    e98e:	44 eb       	ldi	r20, 0xB4	; 180
    e990:	52 e4       	ldi	r21, 0x42	; 66
    e992:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    e996:	9b 01       	movw	r18, r22
    e998:	ac 01       	movw	r20, r24
    e99a:	c7 01       	movw	r24, r14
    e99c:	b6 01       	movw	r22, r12
    e99e:	0e 94 4e d0 	call	0x1a09c	; 0x1a09c <__subsf3>
    e9a2:	9b 01       	movw	r18, r22
    e9a4:	ac 01       	movw	r20, r24
    e9a6:	60 91 a8 13 	lds	r22, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    e9aa:	70 91 a9 13 	lds	r23, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    e9ae:	80 91 aa 13 	lds	r24, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    e9b2:	90 91 ab 13 	lds	r25, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    e9b6:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
    e9ba:	18 16       	cp	r1, r24
    e9bc:	24 f4       	brge	.+8      	; 0xe9c6 <_Z19Pump_Run_Monitoringv+0x78>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
    e9be:	c0 93 a1 14 	sts	0x14A1, r28	; 0x8014a1 <_sRuble_Parameters+0xf3>
				_sRuble_Parameters.Pump_On_Flag = _ePUMP_ON;	
    e9c2:	82 e0       	ldi	r24, 0x02	; 2
    e9c4:	03 c0       	rjmp	.+6      	; 0xe9cc <_Z19Pump_Run_Monitoringv+0x7e>
			}
			else
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
    e9c6:	10 92 a1 14 	sts	0x14A1, r1	; 0x8014a1 <_sRuble_Parameters+0xf3>
				_sRuble_Parameters.Pump_On_Flag = _ePUMP_OFF;
    e9ca:	84 e0       	ldi	r24, 0x04	; 4
    e9cc:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    e9d0:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    e9d4:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    e9d8:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    e9dc:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    e9e0:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    e9e4:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    e9e8:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
    e9ec:	20 c0       	rjmp	.+64     	; 0xea2e <_Z19Pump_Run_Monitoringv+0xe0>
			}
		}
		else
		{
			if(!_kGPIO_GET(_kPUMP_1))
    e9ee:	8a e0       	ldi	r24, 0x0A	; 10
    e9f0:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
    e9f4:	89 2b       	or	r24, r25
    e9f6:	41 f4       	brne	.+16     	; 0xea08 <_Z19Pump_Run_Monitoringv+0xba>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
    e9f8:	81 e0       	ldi	r24, 0x01	; 1
    e9fa:	80 93 a1 14 	sts	0x14A1, r24	; 0x8014a1 <_sRuble_Parameters+0xf3>
    e9fe:	17 c0       	rjmp	.+46     	; 0xea2e <_Z19Pump_Run_Monitoringv+0xe0>
			}
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
    ea00:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    ea04:	81 30       	cpi	r24, 0x01	; 1
    ea06:	19 f0       	breq	.+6      	; 0xea0e <_Z19Pump_Run_Monitoringv+0xc0>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
			}
			else
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
    ea08:	10 92 a1 14 	sts	0x14A1, r1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    ea0c:	10 c0       	rjmp	.+32     	; 0xea2e <_Z19Pump_Run_Monitoringv+0xe0>
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
		(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_STATUS) == _ePUMP_STATUS)
    ea0e:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    ea12:	90 e0       	ldi	r25, 0x00	; 0
    ea14:	02 97       	sbiw	r24, 0x02	; 2
    ea16:	2b e0       	ldi	r18, 0x0B	; 11
    ea18:	28 9f       	mul	r18, r24
    ea1a:	f0 01       	movw	r30, r0
    ea1c:	29 9f       	mul	r18, r25
    ea1e:	f0 0d       	add	r31, r0
    ea20:	11 24       	eor	r1, r1
    ea22:	ec 50       	subi	r30, 0x0C	; 12
    ea24:	f4 4f       	sbci	r31, 0xF4	; 244
			}
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
    ea26:	80 85       	ldd	r24, Z+8	; 0x08
    ea28:	86 ff       	sbrs	r24, 6
    ea2a:	ee cf       	rjmp	.-36     	; 0xea08 <_Z19Pump_Run_Monitoringv+0xba>
    ea2c:	e5 cf       	rjmp	.-54     	; 0xe9f8 <_Z19Pump_Run_Monitoringv+0xaa>
		{
			_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
		}
		
	}
}
    ea2e:	cf 91       	pop	r28
    ea30:	ff 90       	pop	r15
    ea32:	ef 90       	pop	r14
    ea34:	df 90       	pop	r13
    ea36:	cf 90       	pop	r12
    ea38:	08 95       	ret

0000ea3a <_Z11Debug_Checkv>:


unsigned char Debug_Check(void)
{
	if(_kGPIO_GET(_kDEBUG_PIN))
    ea3a:	88 e3       	ldi	r24, 0x38	; 56
    ea3c:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
    ea40:	89 2b       	or	r24, r25
    ea42:	21 f0       	breq	.+8      	; 0xea4c <_Z11Debug_Checkv+0x12>
	{
		_sRuble_Parameters.Debug_Mode = _kRESET;
    ea44:	10 92 ac 14 	sts	0x14AC, r1	; 0x8014ac <_sRuble_Parameters+0xfe>
		return	1;	
    ea48:	81 e0       	ldi	r24, 0x01	; 1
    ea4a:	08 95       	ret
	}
	
	_sRuble_Parameters.Debug_Mode = _kSET;
    ea4c:	81 e0       	ldi	r24, 0x01	; 1
    ea4e:	80 93 ac 14 	sts	0x14AC, r24	; 0x8014ac <_sRuble_Parameters+0xfe>
	return 0;
    ea52:	80 e0       	ldi	r24, 0x00	; 0
}
    ea54:	08 95       	ret

0000ea56 <_Z8My_Delayj>:


void My_Delay(unsigned int my_delay)
{
    ea56:	ef 92       	push	r14
    ea58:	ff 92       	push	r15
    ea5a:	0f 93       	push	r16
    ea5c:	1f 93       	push	r17
    ea5e:	cf 93       	push	r28
	for(unsigned char i=0; i< my_delay/1000; i++)
    ea60:	68 ee       	ldi	r22, 0xE8	; 232
    ea62:	73 e0       	ldi	r23, 0x03	; 3
    ea64:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
    ea68:	8b 01       	movw	r16, r22
    ea6a:	c0 e0       	ldi	r28, 0x00	; 0
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    ea6c:	80 ed       	ldi	r24, 0xD0	; 208
    ea6e:	e8 2e       	mov	r14, r24
    ea70:	8f e0       	ldi	r24, 0x0F	; 15
    ea72:	f8 2e       	mov	r15, r24
}


void My_Delay(unsigned int my_delay)
{
	for(unsigned char i=0; i< my_delay/1000; i++)
    ea74:	8c 2f       	mov	r24, r28
    ea76:	90 e0       	ldi	r25, 0x00	; 0
    ea78:	80 17       	cp	r24, r16
    ea7a:	91 07       	cpc	r25, r17
    ea7c:	f0 f4       	brcc	.+60     	; 0xeaba <_Z8My_Delayj+0x64>
	{
		delay(1000);
    ea7e:	68 ee       	ldi	r22, 0xE8	; 232
    ea80:	73 e0       	ldi	r23, 0x03	; 3
    ea82:	80 e0       	ldi	r24, 0x00	; 0
    ea84:	90 e0       	ldi	r25, 0x00	; 0
    ea86:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
		
		if(Subscribed_data_check())
    ea8a:	9b dd       	rcall	.-1226   	; 0xe5c2 <_Z21Subscribed_data_checkv>
    ea8c:	88 23       	and	r24, r24
    ea8e:	99 f0       	breq	.+38     	; 0xeab6 <_Z8My_Delayj+0x60>
		{
			if(Seperate_Out_Sub_Data())
    ea90:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
    ea94:	88 23       	and	r24, r24
    ea96:	79 f0       	breq	.+30     	; 0xeab6 <_Z8My_Delayj+0x60>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    ea98:	f7 01       	movw	r30, r14
    ea9a:	01 90       	ld	r0, Z+
    ea9c:	00 20       	and	r0, r0
    ea9e:	e9 f7       	brne	.-6      	; 0xea9a <_Z8My_Delayj+0x44>
    eaa0:	31 97       	sbiw	r30, 0x01	; 1
    eaa2:	af 01       	movw	r20, r30
    eaa4:	40 5d       	subi	r20, 0xD0	; 208
    eaa6:	5f 40       	sbci	r21, 0x0F	; 15
    eaa8:	21 e0       	ldi	r18, 0x01	; 1
    eaaa:	60 ed       	ldi	r22, 0xD0	; 208
    eaac:	7f e0       	ldi	r23, 0x0F	; 15
    eaae:	82 e6       	ldi	r24, 0x62	; 98
    eab0:	9f e0       	ldi	r25, 0x0F	; 15
    eab2:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
}


void My_Delay(unsigned int my_delay)
{
	for(unsigned char i=0; i< my_delay/1000; i++)
    eab6:	cf 5f       	subi	r28, 0xFF	; 255
    eab8:	dd cf       	rjmp	.-70     	; 0xea74 <_Z8My_Delayj+0x1e>
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
			}
		}
	}
}	
    eaba:	cf 91       	pop	r28
    eabc:	1f 91       	pop	r17
    eabe:	0f 91       	pop	r16
    eac0:	ff 90       	pop	r15
    eac2:	ef 90       	pop	r14
    eac4:	08 95       	ret

0000eac6 <_Z19Calibration_Of_Pumpv>:
	
}


int Calibration_Of_Pump(void)
{
    eac6:	2f 92       	push	r2
    eac8:	3f 92       	push	r3
    eaca:	4f 92       	push	r4
    eacc:	5f 92       	push	r5
    eace:	6f 92       	push	r6
    ead0:	7f 92       	push	r7
    ead2:	8f 92       	push	r8
    ead4:	9f 92       	push	r9
    ead6:	af 92       	push	r10
    ead8:	bf 92       	push	r11
    eada:	cf 92       	push	r12
    eadc:	df 92       	push	r13
    eade:	ef 92       	push	r14
    eae0:	ff 92       	push	r15
    eae2:	0f 93       	push	r16
    eae4:	1f 93       	push	r17
    eae6:	cf 93       	push	r28
    eae8:	df 93       	push	r29
    eaea:	cd b7       	in	r28, 0x3d	; 61
    eaec:	de b7       	in	r29, 0x3e	; 62
    eaee:	c0 54       	subi	r28, 0x40	; 64
    eaf0:	d1 09       	sbc	r29, r1
    eaf2:	0f b6       	in	r0, 0x3f	; 63
    eaf4:	f8 94       	cli
    eaf6:	de bf       	out	0x3e, r29	; 62
    eaf8:	0f be       	out	0x3f, r0	; 63
    eafa:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_topic[40];
	
	
	
	
	if(_sRuble_Parameters.Do_Calibration == _kSET)
    eafc:	60 91 67 14 	lds	r22, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    eb00:	61 30       	cpi	r22, 0x01	; 1
    eb02:	09 f0       	breq	.+2      	; 0xeb06 <_Z19Calibration_Of_Pumpv+0x40>
    eb04:	ec c0       	rjmp	.+472    	; 0xecde <_Z19Calibration_Of_Pumpv+0x218>
	{
		_sRuble_Parameters.Do_Calibration = _kRESET;
    eb06:	10 92 67 14 	sts	0x1467, r1	; 0x801467 <_sRuble_Parameters+0xb9>
		
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    eb0a:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    eb0e:	62 30       	cpi	r22, 0x02	; 2
    eb10:	d8 f1       	brcs	.+118    	; 0xeb88 <_Z19Calibration_Of_Pumpv+0xc2>
		{
			memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    eb12:	84 ed       	ldi	r24, 0xD4	; 212
    eb14:	93 e0       	ldi	r25, 0x03	; 3
    eb16:	e0 ed       	ldi	r30, 0xD0	; 208
    eb18:	ff e0       	ldi	r31, 0x0F	; 15
    eb1a:	df 01       	movw	r26, r30
    eb1c:	9c 01       	movw	r18, r24
    eb1e:	1d 92       	st	X+, r1
    eb20:	21 50       	subi	r18, 0x01	; 1
    eb22:	30 40       	sbci	r19, 0x00	; 0
    eb24:	e1 f7       	brne	.-8      	; 0xeb1e <_Z19Calibration_Of_Pumpv+0x58>
			if(Wireless_Pump_On_Off(_eDO_CALIBRATION,_sRuble_Parameters.Pump_Selected_For_Irrigation - 2))
    eb26:	62 50       	subi	r22, 0x02	; 2
    eb28:	81 e0       	ldi	r24, 0x01	; 1
    eb2a:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
    eb2e:	88 23       	and	r24, r24
    eb30:	19 f0       	breq	.+6      	; 0xeb38 <_Z19Calibration_Of_Pumpv+0x72>
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");
    eb32:	62 e4       	ldi	r22, 0x42	; 66
    eb34:	75 e0       	ldi	r23, 0x05	; 5
    eb36:	02 c0       	rjmp	.+4      	; 0xeb3c <_Z19Calibration_Of_Pumpv+0x76>
			}
			else
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    eb38:	66 e5       	ldi	r22, 0x56	; 86
    eb3a:	75 e0       	ldi	r23, 0x05	; 5
    eb3c:	80 ed       	ldi	r24, 0xD0	; 208
    eb3e:	9f e0       	ldi	r25, 0x0F	; 15
    eb40:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
			}
			
			memset((char *)temp_topic,0,sizeof(temp_topic));
    eb44:	8e 01       	movw	r16, r28
    eb46:	0f 5f       	subi	r16, 0xFF	; 255
    eb48:	1f 4f       	sbci	r17, 0xFF	; 255
    eb4a:	88 e2       	ldi	r24, 0x28	; 40
    eb4c:	d8 01       	movw	r26, r16
    eb4e:	1d 92       	st	X+, r1
    eb50:	8a 95       	dec	r24
    eb52:	e9 f7       	brne	.-6      	; 0xeb4e <_Z19Calibration_Of_Pumpv+0x88>
			sprintf((char *)temp_topic,"SICCA/CALIBRATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    eb54:	8e ec       	ldi	r24, 0xCE	; 206
    eb56:	93 e1       	ldi	r25, 0x13	; 19
    eb58:	9f 93       	push	r25
    eb5a:	8f 93       	push	r24
    eb5c:	8b e6       	ldi	r24, 0x6B	; 107
    eb5e:	95 e0       	ldi	r25, 0x05	; 5
    eb60:	9f 93       	push	r25
    eb62:	8f 93       	push	r24
    eb64:	1f 93       	push	r17
    eb66:	0f 93       	push	r16
    eb68:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
			
			_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
    eb6c:	60 ed       	ldi	r22, 0xD0	; 208
    eb6e:	7f e0       	ldi	r23, 0x0F	; 15
    eb70:	c8 01       	movw	r24, r16
    eb72:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
			
			return 1;
    eb76:	81 e0       	ldi	r24, 0x01	; 1
    eb78:	90 e0       	ldi	r25, 0x00	; 0
    eb7a:	0f 90       	pop	r0
    eb7c:	0f 90       	pop	r0
    eb7e:	0f 90       	pop	r0
    eb80:	0f 90       	pop	r0
    eb82:	0f 90       	pop	r0
    eb84:	0f 90       	pop	r0
    eb86:	5d c1       	rjmp	.+698    	; 0xee42 <_Z19Calibration_Of_Pumpv+0x37c>
		}
		
		
		previous = millis();
    eb88:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    eb8c:	21 96       	adiw	r28, 0x01	; 1
    eb8e:	6c af       	std	Y+60, r22	; 0x3c
    eb90:	7d af       	std	Y+61, r23	; 0x3d
    eb92:	8e af       	std	Y+62, r24	; 0x3e
    eb94:	9f af       	std	Y+63, r25	; 0x3f
    eb96:	21 97       	sbiw	r28, 0x01	; 1
    eb98:	1e 01       	movw	r2, r28
    eb9a:	bd e3       	ldi	r27, 0x3D	; 61
    eb9c:	2b 0e       	add	r2, r27
    eb9e:	31 1c       	adc	r3, r1
    eba0:	6e 01       	movw	r12, r28
    eba2:	e9 e2       	ldi	r30, 0x29	; 41
    eba4:	ce 0e       	add	r12, r30
    eba6:	d1 1c       	adc	r13, r1
	
}


int Calibration_Of_Pump(void)
{
    eba8:	86 01       	movw	r16, r12
		previous = millis();
		do
		{
			for(i=0;i<5;i++)
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    ebaa:	68 ec       	ldi	r22, 0xC8	; 200
    ebac:	75 e0       	ldi	r23, 0x05	; 5
    ebae:	82 ef       	ldi	r24, 0xF2	; 242
    ebb0:	9c e0       	ldi	r25, 0x0C	; 12
    ebb2:	0e 94 db d8 	call	0x1b1b6	; 0x1b1b6 <_ZN13EnergyMonitor8calcIrmsEj>
    ebb6:	d8 01       	movw	r26, r16
    ebb8:	6d 93       	st	X+, r22
    ebba:	7d 93       	st	X+, r23
    ebbc:	8d 93       	st	X+, r24
    ebbe:	9d 93       	st	X+, r25
    ebc0:	8d 01       	movw	r16, r26
		
		
		previous = millis();
		do
		{
			for(i=0;i<5;i++)
    ebc2:	a2 15       	cp	r26, r2
    ebc4:	b3 05       	cpc	r27, r3
    ebc6:	89 f7       	brne	.-30     	; 0xebaa <_Z19Calibration_Of_Pumpv+0xe4>
    ebc8:	00 e0       	ldi	r16, 0x00	; 0
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
			{
				for (j = i + 1; j < 5; j++)
    ebca:	0f 5f       	subi	r16, 0xFF	; 255
    ebcc:	10 2f       	mov	r17, r16
    ebce:	15 30       	cpi	r17, 0x05	; 5
    ebd0:	31 f4       	brne	.+12     	; 0xebde <_Z19Calibration_Of_Pumpv+0x118>
    ebd2:	b4 e0       	ldi	r27, 0x04	; 4
    ebd4:	cb 0e       	add	r12, r27
    ebd6:	d1 1c       	adc	r13, r1
		{
			for(i=0;i<5;i++)
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
    ebd8:	05 30       	cpi	r16, 0x05	; 5
    ebda:	b9 f7       	brne	.-18     	; 0xebca <_Z19Calibration_Of_Pumpv+0x104>
    ebdc:	2c c0       	rjmp	.+88     	; 0xec36 <_Z19Calibration_Of_Pumpv+0x170>
			{
				for (j = i + 1; j < 5; j++)
				{
					if (filter_data[i] > filter_data[j])
    ebde:	f6 01       	movw	r30, r12
    ebe0:	80 80       	ld	r8, Z
    ebe2:	91 80       	ldd	r9, Z+1	; 0x01
    ebe4:	a2 80       	ldd	r10, Z+2	; 0x02
    ebe6:	b3 80       	ldd	r11, Z+3	; 0x03
    ebe8:	ee 24       	eor	r14, r14
    ebea:	e3 94       	inc	r14
    ebec:	f1 2c       	mov	r15, r1
    ebee:	ec 0e       	add	r14, r28
    ebf0:	fd 1e       	adc	r15, r29
    ebf2:	f4 e0       	ldi	r31, 0x04	; 4
    ebf4:	1f 9f       	mul	r17, r31
    ebf6:	e0 0c       	add	r14, r0
    ebf8:	f1 1c       	adc	r15, r1
    ebfa:	11 24       	eor	r1, r1
    ebfc:	d7 01       	movw	r26, r14
    ebfe:	98 96       	adiw	r26, 0x28	; 40
    ec00:	4d 90       	ld	r4, X+
    ec02:	5d 90       	ld	r5, X+
    ec04:	6d 90       	ld	r6, X+
    ec06:	7c 90       	ld	r7, X
    ec08:	9b 97       	sbiw	r26, 0x2b	; 43
    ec0a:	a3 01       	movw	r20, r6
    ec0c:	92 01       	movw	r18, r4
    ec0e:	c5 01       	movw	r24, r10
    ec10:	b4 01       	movw	r22, r8
    ec12:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
    ec16:	18 16       	cp	r1, r24
    ec18:	64 f4       	brge	.+24     	; 0xec32 <_Z19Calibration_Of_Pumpv+0x16c>
					{
						filter_data_1 = filter_data[i];
						filter_data[i] = filter_data[j];
    ec1a:	f6 01       	movw	r30, r12
    ec1c:	40 82       	st	Z, r4
    ec1e:	51 82       	std	Z+1, r5	; 0x01
    ec20:	62 82       	std	Z+2, r6	; 0x02
    ec22:	73 82       	std	Z+3, r7	; 0x03
						filter_data[j] = filter_data_1;
    ec24:	d7 01       	movw	r26, r14
    ec26:	98 96       	adiw	r26, 0x28	; 40
    ec28:	8d 92       	st	X+, r8
    ec2a:	9d 92       	st	X+, r9
    ec2c:	ad 92       	st	X+, r10
    ec2e:	bc 92       	st	X, r11
    ec30:	9b 97       	sbiw	r26, 0x2b	; 43
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
			{
				for (j = i + 1; j < 5; j++)
    ec32:	1f 5f       	subi	r17, 0xFF	; 255
    ec34:	cc cf       	rjmp	.-104    	; 0xebce <_Z19Calibration_Of_Pumpv+0x108>
						filter_data[i] = filter_data[j];
						filter_data[j] = filter_data_1;
					}
				}
			}
			_sPump_Parameter.Pump_Run_Current =  filter_data[2];      // RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    ec36:	69 a9       	ldd	r22, Y+49	; 0x31
    ec38:	7a a9       	ldd	r23, Y+50	; 0x32
    ec3a:	8b a9       	ldd	r24, Y+51	; 0x33
    ec3c:	9c a9       	ldd	r25, Y+52	; 0x34
    ec3e:	60 93 a8 13 	sts	0x13A8, r22	; 0x8013a8 <_sPump_Parameter+0x4>
    ec42:	70 93 a9 13 	sts	0x13A9, r23	; 0x8013a9 <_sPump_Parameter+0x5>
    ec46:	80 93 aa 13 	sts	0x13AA, r24	; 0x8013aa <_sPump_Parameter+0x6>
    ec4a:	90 93 ab 13 	sts	0x13AB, r25	; 0x8013ab <_sPump_Parameter+0x7>
			
			if(_sPump_Parameter.Pump_Run_Current > 2)
    ec4e:	20 e0       	ldi	r18, 0x00	; 0
    ec50:	30 e0       	ldi	r19, 0x00	; 0
    ec52:	40 e0       	ldi	r20, 0x00	; 0
    ec54:	50 e4       	ldi	r21, 0x40	; 64
    ec56:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
    ec5a:	18 16       	cp	r1, r24
    ec5c:	54 f5       	brge	.+84     	; 0xecb2 <_Z19Calibration_Of_Pumpv+0x1ec>
    ec5e:	88 ea       	ldi	r24, 0xA8	; 168
    ec60:	e8 2e       	mov	r14, r24
    ec62:	83 e1       	ldi	r24, 0x13	; 19
    ec64:	f8 2e       	mov	r15, r24
    ec66:	0f e0       	ldi	r16, 0x0F	; 15
    ec68:	15 e0       	ldi	r17, 0x05	; 5
    ec6a:	f7 01       	movw	r30, r14
    ec6c:	61 91       	ld	r22, Z+
    ec6e:	7f 01       	movw	r14, r30
    ec70:	1a 83       	std	Y+2, r17	; 0x02
    ec72:	09 83       	std	Y+1, r16	; 0x01
    ec74:	ce 01       	movw	r24, r28
    ec76:	01 96       	adiw	r24, 0x01	; 1
    ec78:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    ec7c:	0f 5f       	subi	r16, 0xFF	; 255
    ec7e:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    ec80:	03 31       	cpi	r16, 0x13	; 19
    ec82:	f5 e0       	ldi	r31, 0x05	; 5
    ec84:	1f 07       	cpc	r17, r31
    ec86:	89 f7       	brne	.-30     	; 0xec6a <_Z19Calibration_Of_Pumpv+0x1a4>
			{
				_kEEPROM_WRITE(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Run_Current);     /* save the pump current */
				_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read pump nominal current */
    ec88:	64 ea       	ldi	r22, 0xA4	; 164
    ec8a:	73 e1       	ldi	r23, 0x13	; 19
    ec8c:	8f e0       	ldi	r24, 0x0F	; 15
    ec8e:	95 e0       	ldi	r25, 0x05	; 5
    ec90:	04 dd       	rcall	.-1528   	; 0xe69a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.3>
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    ec92:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ec96:	81 30       	cpi	r24, 0x01	; 1
    ec98:	09 f0       	breq	.+2      	; 0xec9c <_Z19Calibration_Of_Pumpv+0x1d6>
    ec9a:	4e c0       	rjmp	.+156    	; 0xed38 <_Z19Calibration_Of_Pumpv+0x272>
				{
					_kSERAIL_MON_WRITE("Pump Calibration is done");                /* for debugging purpose */
    ec9c:	60 e1       	ldi	r22, 0x10	; 16
    ec9e:	76 e2       	ldi	r23, 0x26	; 38
    eca0:	86 ec       	ldi	r24, 0xC6	; 198
    eca2:	94 e1       	ldi	r25, 0x14	; 20
    eca4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    eca8:	86 ec       	ldi	r24, 0xC6	; 198
    ecaa:	94 e1       	ldi	r25, 0x14	; 20
    ecac:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    ecb0:	43 c0       	rjmp	.+134    	; 0xed38 <_Z19Calibration_Of_Pumpv+0x272>
				}
				answer = 1;
			}	
		}while ((answer == 0) && ((millis() - previous) < timeout));
    ecb2:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    ecb6:	dc 01       	movw	r26, r24
    ecb8:	cb 01       	movw	r24, r22
    ecba:	21 96       	adiw	r28, 0x01	; 1
    ecbc:	2c ad       	ldd	r18, Y+60	; 0x3c
    ecbe:	3d ad       	ldd	r19, Y+61	; 0x3d
    ecc0:	4e ad       	ldd	r20, Y+62	; 0x3e
    ecc2:	5f ad       	ldd	r21, Y+63	; 0x3f
    ecc4:	21 97       	sbiw	r28, 0x01	; 1
    ecc6:	82 1b       	sub	r24, r18
    ecc8:	93 0b       	sbc	r25, r19
    ecca:	a4 0b       	sbc	r26, r20
    eccc:	b5 0b       	sbc	r27, r21
    ecce:	80 31       	cpi	r24, 0x10	; 16
    ecd0:	97 42       	sbci	r25, 0x27	; 39
    ecd2:	a1 05       	cpc	r26, r1
    ecd4:	b1 05       	cpc	r27, r1
    ecd6:	08 f4       	brcc	.+2      	; 0xecda <_Z19Calibration_Of_Pumpv+0x214>
    ecd8:	63 cf       	rjmp	.-314    	; 0xeba0 <_Z19Calibration_Of_Pumpv+0xda>
    ecda:	80 e0       	ldi	r24, 0x00	; 0
    ecdc:	2e c0       	rjmp	.+92     	; 0xed3a <_Z19Calibration_Of_Pumpv+0x274>
		
		_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
	}
	else
	{
		if(_sRuble_Parameters.Do_Calibration > _kWIRED_PUMP_NUMBER)
    ecde:	62 30       	cpi	r22, 0x02	; 2
    ece0:	08 f4       	brcc	.+2      	; 0xece4 <_Z19Calibration_Of_Pumpv+0x21e>
    ece2:	64 c0       	rjmp	.+200    	; 0xedac <_Z19Calibration_Of_Pumpv+0x2e6>
		{
			//Wireless_Pump_On_Off(_kDO_CALIBRATION);
			Wireless_Pump_On_Off(_kDO_CALIBRATION,_sRuble_Parameters.Do_Calibration -2);
    ece4:	62 50       	subi	r22, 0x02	; 2
    ece6:	86 e0       	ldi	r24, 0x06	; 6
    ece8:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
			
			_sRuble_Parameters.Do_Calibration = _kRESET;
    ecec:	10 92 67 14 	sts	0x1467, r1	; 0x801467 <_sRuble_Parameters+0xb9>
			previous = millis();
    ecf0:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    ecf4:	6b 01       	movw	r12, r22
    ecf6:	7c 01       	movw	r14, r24
			do
			{
				Lora_Operation();
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
    ecf8:	1b e0       	ldi	r17, 0x0B	; 11
			
			_sRuble_Parameters.Do_Calibration = _kRESET;
			previous = millis();
			do
			{
				Lora_Operation();
    ecfa:	0e 94 f1 cf 	call	0x19fe2	; 0x19fe2 <_Z14Lora_Operationv>
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
    ecfe:	80 91 67 14 	lds	r24, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    ed02:	90 e0       	ldi	r25, 0x00	; 0
    ed04:	02 97       	sbiw	r24, 0x02	; 2
    ed06:	18 9f       	mul	r17, r24
    ed08:	f0 01       	movw	r30, r0
    ed0a:	19 9f       	mul	r17, r25
    ed0c:	f0 0d       	add	r31, r0
    ed0e:	11 24       	eor	r1, r1
    ed10:	ec 50       	subi	r30, 0x0C	; 12
    ed12:	f4 4f       	sbci	r31, 0xF4	; 244
    ed14:	82 85       	ldd	r24, Z+10	; 0x0a
    ed16:	80 fd       	sbrc	r24, 0
    ed18:	4d c0       	rjmp	.+154    	; 0xedb4 <_Z19Calibration_Of_Pumpv+0x2ee>
				{
					answer = 1;
				}
			}while ((answer == 0) && ((millis() - previous) < timeout));
    ed1a:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    ed1e:	dc 01       	movw	r26, r24
    ed20:	cb 01       	movw	r24, r22
    ed22:	8c 19       	sub	r24, r12
    ed24:	9d 09       	sbc	r25, r13
    ed26:	ae 09       	sbc	r26, r14
    ed28:	bf 09       	sbc	r27, r15
    ed2a:	80 31       	cpi	r24, 0x10	; 16
    ed2c:	97 42       	sbci	r25, 0x27	; 39
    ed2e:	a1 05       	cpc	r26, r1
    ed30:	b1 05       	cpc	r27, r1
    ed32:	18 f3       	brcs	.-58     	; 0xecfa <_Z19Calibration_Of_Pumpv+0x234>
    ed34:	80 e0       	ldi	r24, 0x00	; 0
    ed36:	3f c0       	rjmp	.+126    	; 0xedb6 <_Z19Calibration_Of_Pumpv+0x2f0>
					}
				}
			}
			_sPump_Parameter.Pump_Run_Current =  filter_data[2];      // RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			
			if(_sPump_Parameter.Pump_Run_Current > 2)
    ed38:	81 e0       	ldi	r24, 0x01	; 1
				}
				answer = 1;
			}	
		}while ((answer == 0) && ((millis() - previous) < timeout));
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    ed3a:	24 ed       	ldi	r18, 0xD4	; 212
    ed3c:	33 e0       	ldi	r19, 0x03	; 3
    ed3e:	e0 ed       	ldi	r30, 0xD0	; 208
    ed40:	ff e0       	ldi	r31, 0x0F	; 15
    ed42:	df 01       	movw	r26, r30
    ed44:	a9 01       	movw	r20, r18
    ed46:	1d 92       	st	X+, r1
    ed48:	41 50       	subi	r20, 0x01	; 1
    ed4a:	50 40       	sbci	r21, 0x00	; 0
    ed4c:	e1 f7       	brne	.-8      	; 0xed46 <_Z19Calibration_Of_Pumpv+0x280>
		if(answer)
    ed4e:	88 23       	and	r24, r24
    ed50:	71 f1       	breq	.+92     	; 0xedae <_Z19Calibration_Of_Pumpv+0x2e8>
		{
			_sRuble_Parameters.By_Pass_CT = _kSET;
    ed52:	81 e0       	ldi	r24, 0x01	; 1
    ed54:	80 93 79 14 	sts	0x1479, r24	; 0x801479 <_sRuble_Parameters+0xcb>
			_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    ed58:	69 e7       	ldi	r22, 0x79	; 121
    ed5a:	74 e1       	ldi	r23, 0x14	; 20
    ed5c:	81 ea       	ldi	r24, 0xA1	; 161
    ed5e:	9c e0       	ldi	r25, 0x0C	; 12
    ed60:	02 dd       	rcall	.-1532   	; 0xe766 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.2>
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");	
    ed62:	62 e4       	ldi	r22, 0x42	; 66
    ed64:	75 e0       	ldi	r23, 0x05	; 5
		}
		else
		{
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    ed66:	80 ed       	ldi	r24, 0xD0	; 208
    ed68:	9f e0       	ldi	r25, 0x0F	; 15
    ed6a:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
		}
		
		memset((char *)temp_topic,0,sizeof(temp_topic));
    ed6e:	8e 01       	movw	r16, r28
    ed70:	0f 5f       	subi	r16, 0xFF	; 255
    ed72:	1f 4f       	sbci	r17, 0xFF	; 255
    ed74:	88 e2       	ldi	r24, 0x28	; 40
    ed76:	d8 01       	movw	r26, r16
    ed78:	1d 92       	st	X+, r1
    ed7a:	8a 95       	dec	r24
    ed7c:	e9 f7       	brne	.-6      	; 0xed78 <_Z19Calibration_Of_Pumpv+0x2b2>
		sprintf((char *)temp_topic,"SICCA/CALIBRATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    ed7e:	8e ec       	ldi	r24, 0xCE	; 206
    ed80:	93 e1       	ldi	r25, 0x13	; 19
    ed82:	9f 93       	push	r25
    ed84:	8f 93       	push	r24
    ed86:	8b e6       	ldi	r24, 0x6B	; 107
    ed88:	95 e0       	ldi	r25, 0x05	; 5
    ed8a:	9f 93       	push	r25
    ed8c:	8f 93       	push	r24
    ed8e:	1f 93       	push	r17
    ed90:	0f 93       	push	r16
    ed92:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
		
		_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
    ed96:	60 ed       	ldi	r22, 0xD0	; 208
    ed98:	7f e0       	ldi	r23, 0x0F	; 15
    ed9a:	c8 01       	movw	r24, r16
    ed9c:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
    eda0:	0f 90       	pop	r0
    eda2:	0f 90       	pop	r0
    eda4:	0f 90       	pop	r0
    eda6:	0f 90       	pop	r0
    eda8:	0f 90       	pop	r0
    edaa:	0f 90       	pop	r0
			_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBARATION_SUCCESS;
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBRATION_FAIL;
		}
	}
}
    edac:	4a c0       	rjmp	.+148    	; 0xee42 <_Z19Calibration_Of_Pumpv+0x37c>
			_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");	
		}
		else
		{
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    edae:	66 e5       	ldi	r22, 0x56	; 86
    edb0:	75 e0       	ldi	r23, 0x05	; 5
    edb2:	d9 cf       	rjmp	.-78     	; 0xed66 <_Z19Calibration_Of_Pumpv+0x2a0>
			{
				Lora_Operation();
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
				{
					answer = 1;
    edb4:	81 e0       	ldi	r24, 0x01	; 1
				}
			}while ((answer == 0) && ((millis() - previous) < timeout));
			
			memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    edb6:	24 ed       	ldi	r18, 0xD4	; 212
    edb8:	33 e0       	ldi	r19, 0x03	; 3
    edba:	e0 ed       	ldi	r30, 0xD0	; 208
    edbc:	ff e0       	ldi	r31, 0x0F	; 15
    edbe:	df 01       	movw	r26, r30
    edc0:	a9 01       	movw	r20, r18
    edc2:	1d 92       	st	X+, r1
    edc4:	41 50       	subi	r20, 0x01	; 1
    edc6:	50 40       	sbci	r21, 0x00	; 0
    edc8:	e1 f7       	brne	.-8      	; 0xedc2 <_Z19Calibration_Of_Pumpv+0x2fc>
			if(answer)
    edca:	88 23       	and	r24, r24
    edcc:	59 f0       	breq	.+22     	; 0xede4 <_Z19Calibration_Of_Pumpv+0x31e>
			{
				_sRuble_Parameters.By_Pass_CT = _kSET;
    edce:	81 e0       	ldi	r24, 0x01	; 1
    edd0:	80 93 79 14 	sts	0x1479, r24	; 0x801479 <_sRuble_Parameters+0xcb>
				_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    edd4:	69 e7       	ldi	r22, 0x79	; 121
    edd6:	74 e1       	ldi	r23, 0x14	; 20
    edd8:	81 ea       	ldi	r24, 0xA1	; 161
    edda:	9c e0       	ldi	r25, 0x0C	; 12
    eddc:	c4 dc       	rcall	.-1656   	; 0xe766 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.2>
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");
    edde:	62 e4       	ldi	r22, 0x42	; 66
    ede0:	75 e0       	ldi	r23, 0x05	; 5
    ede2:	02 c0       	rjmp	.+4      	; 0xede8 <_Z19Calibration_Of_Pumpv+0x322>
			}
			else
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    ede4:	66 e5       	ldi	r22, 0x56	; 86
    ede6:	75 e0       	ldi	r23, 0x05	; 5
    ede8:	80 ed       	ldi	r24, 0xD0	; 208
    edea:	9f e0       	ldi	r25, 0x0F	; 15
    edec:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
			}
			
			memset((char *)temp_topic,0,sizeof(temp_topic));
    edf0:	8e 01       	movw	r16, r28
    edf2:	0f 5f       	subi	r16, 0xFF	; 255
    edf4:	1f 4f       	sbci	r17, 0xFF	; 255
    edf6:	88 e2       	ldi	r24, 0x28	; 40
    edf8:	d8 01       	movw	r26, r16
    edfa:	1d 92       	st	X+, r1
    edfc:	8a 95       	dec	r24
    edfe:	e9 f7       	brne	.-6      	; 0xedfa <_Z19Calibration_Of_Pumpv+0x334>
			sprintf((char *)temp_topic,"SICCA/CALIBRATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    ee00:	8e ec       	ldi	r24, 0xCE	; 206
    ee02:	93 e1       	ldi	r25, 0x13	; 19
    ee04:	9f 93       	push	r25
    ee06:	8f 93       	push	r24
    ee08:	8b e6       	ldi	r24, 0x6B	; 107
    ee0a:	95 e0       	ldi	r25, 0x05	; 5
    ee0c:	9f 93       	push	r25
    ee0e:	8f 93       	push	r24
    ee10:	1f 93       	push	r17
    ee12:	0f 93       	push	r16
    ee14:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
			
			_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
    ee18:	60 ed       	ldi	r22, 0xD0	; 208
    ee1a:	7f e0       	ldi	r23, 0x0F	; 15
    ee1c:	c8 01       	movw	r24, r16
    ee1e:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBARATION_SUCCESS;
    ee22:	80 91 67 14 	lds	r24, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    ee26:	90 e0       	ldi	r25, 0x00	; 0
    ee28:	02 97       	sbiw	r24, 0x02	; 2
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBRATION_FAIL;
    ee2a:	2b e0       	ldi	r18, 0x0B	; 11
    ee2c:	28 9f       	mul	r18, r24
    ee2e:	f0 01       	movw	r30, r0
    ee30:	29 9f       	mul	r18, r25
    ee32:	f0 0d       	add	r31, r0
    ee34:	11 24       	eor	r1, r1
    ee36:	ec 50       	subi	r30, 0x0C	; 12
    ee38:	f4 4f       	sbci	r31, 0xF4	; 244
    ee3a:	82 85       	ldd	r24, Z+10	; 0x0a
    ee3c:	8c 7f       	andi	r24, 0xFC	; 252
    ee3e:	82 87       	std	Z+10, r24	; 0x0a
    ee40:	af cf       	rjmp	.-162    	; 0xeda0 <_Z19Calibration_Of_Pumpv+0x2da>
		}
	}
}
    ee42:	c0 5c       	subi	r28, 0xC0	; 192
    ee44:	df 4f       	sbci	r29, 0xFF	; 255
    ee46:	0f b6       	in	r0, 0x3f	; 63
    ee48:	f8 94       	cli
    ee4a:	de bf       	out	0x3e, r29	; 62
    ee4c:	0f be       	out	0x3f, r0	; 63
    ee4e:	cd bf       	out	0x3d, r28	; 61
    ee50:	df 91       	pop	r29
    ee52:	cf 91       	pop	r28
    ee54:	1f 91       	pop	r17
    ee56:	0f 91       	pop	r16
    ee58:	ff 90       	pop	r15
    ee5a:	ef 90       	pop	r14
    ee5c:	df 90       	pop	r13
    ee5e:	cf 90       	pop	r12
    ee60:	bf 90       	pop	r11
    ee62:	af 90       	pop	r10
    ee64:	9f 90       	pop	r9
    ee66:	8f 90       	pop	r8
    ee68:	7f 90       	pop	r7
    ee6a:	6f 90       	pop	r6
    ee6c:	5f 90       	pop	r5
    ee6e:	4f 90       	pop	r4
    ee70:	3f 90       	pop	r3
    ee72:	2f 90       	pop	r2
    ee74:	08 95       	ret

0000ee76 <_Z14Faults_Handlerv>:


void Faults_Handler(void)
{
    ee76:	4f 92       	push	r4
    ee78:	5f 92       	push	r5
    ee7a:	6f 92       	push	r6
    ee7c:	7f 92       	push	r7
    ee7e:	8f 92       	push	r8
    ee80:	9f 92       	push	r9
    ee82:	af 92       	push	r10
    ee84:	bf 92       	push	r11
    ee86:	cf 92       	push	r12
    ee88:	df 92       	push	r13
    ee8a:	ef 92       	push	r14
    ee8c:	ff 92       	push	r15
	static unsigned char temp_back_up;
	static unsigned char faults_check_timer = 0,fault_occure = 0;
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    ee8e:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    ee92:	82 30       	cpi	r24, 0x02	; 2
    ee94:	08 f4       	brcc	.+2      	; 0xee98 <_Z14Faults_Handlerv+0x22>
    ee96:	52 c0       	rjmp	.+164    	; 0xef3c <_Z14Faults_Handlerv+0xc6>
	{
		if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    ee98:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    ee9c:	29 2f       	mov	r18, r25
    ee9e:	2d 7f       	andi	r18, 0xFD	; 253
    eea0:	21 30       	cpi	r18, 0x01	; 1
    eea2:	19 f0       	breq	.+6      	; 0xeeaa <_Z14Faults_Handlerv+0x34>
    eea4:	95 30       	cpi	r25, 0x05	; 5
    eea6:	09 f0       	breq	.+2      	; 0xeeaa <_Z14Faults_Handlerv+0x34>
    eea8:	d4 c2       	rjmp	.+1448   	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
		_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
		{
			if(_sRuble_Parameters.Wirelss_Pump_Status == _kON)
    eeaa:	90 91 7c 14 	lds	r25, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    eeae:	91 30       	cpi	r25, 0x01	; 1
    eeb0:	09 f0       	breq	.+2      	; 0xeeb4 <_Z14Faults_Handlerv+0x3e>
    eeb2:	cf c2       	rjmp	.+1438   	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
			{
				/* check faults */
				//_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults;
				if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    eeb4:	90 e0       	ldi	r25, 0x00	; 0
    eeb6:	02 97       	sbiw	r24, 0x02	; 2
    eeb8:	2b e0       	ldi	r18, 0x0B	; 11
    eeba:	28 9f       	mul	r18, r24
    eebc:	f0 01       	movw	r30, r0
    eebe:	29 9f       	mul	r18, r25
    eec0:	f0 0d       	add	r31, r0
    eec2:	11 24       	eor	r1, r1
    eec4:	ec 50       	subi	r30, 0x0C	; 12
    eec6:	f4 4f       	sbci	r31, 0xF4	; 244
    eec8:	80 85       	ldd	r24, Z+8	; 0x08
    eeca:	91 85       	ldd	r25, Z+9	; 0x09
    eecc:	9c 01       	movw	r18, r24
    eece:	23 70       	andi	r18, 0x03	; 3
    eed0:	33 27       	eor	r19, r19
    eed2:	23 30       	cpi	r18, 0x03	; 3
    eed4:	31 05       	cpc	r19, r1
    eed6:	39 f4       	brne	.+14     	; 0xeee6 <_Z14Faults_Handlerv+0x70>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    eed8:	82 ff       	sbrs	r24, 2
    eeda:	05 c0       	rjmp	.+10     	; 0xeee6 <_Z14Faults_Handlerv+0x70>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    eedc:	88 7b       	andi	r24, 0xB8	; 184
    eede:	92 70       	andi	r25, 0x02	; 2
    eee0:	89 2b       	or	r24, r25
    eee2:	09 f4       	brne	.+2      	; 0xeee6 <_Z14Faults_Handlerv+0x70>
    eee4:	b6 c2       	rjmp	.+1388   	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING /*||
				   _sRuble_Parameters.Update_Local_Date[2] == 70*/)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    eee6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    eeea:	81 30       	cpi	r24, 0x01	; 1
    eeec:	d1 f4       	brne	.+52     	; 0xef22 <_Z14Faults_Handlerv+0xac>
					{
						_kSERAIL_MON_WRITE("Wireless Pump Fault ocuure............ ");
    eeee:	68 ee       	ldi	r22, 0xE8	; 232
    eef0:	75 e2       	ldi	r23, 0x25	; 37
    eef2:	86 ec       	ldi	r24, 0xC6	; 198
    eef4:	94 e1       	ldi	r25, 0x14	; 20
    eef6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults);
    eefa:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    eefe:	90 e0       	ldi	r25, 0x00	; 0
    ef00:	02 97       	sbiw	r24, 0x02	; 2
    ef02:	2b e0       	ldi	r18, 0x0B	; 11
    ef04:	28 9f       	mul	r18, r24
    ef06:	f0 01       	movw	r30, r0
    ef08:	29 9f       	mul	r18, r25
    ef0a:	f0 0d       	add	r31, r0
    ef0c:	11 24       	eor	r1, r1
    ef0e:	ec 50       	subi	r30, 0x0C	; 12
    ef10:	f4 4f       	sbci	r31, 0xF4	; 244
    ef12:	60 85       	ldd	r22, Z+8	; 0x08
    ef14:	71 85       	ldd	r23, Z+9	; 0x09
    ef16:	4a e0       	ldi	r20, 0x0A	; 10
    ef18:	50 e0       	ldi	r21, 0x00	; 0
    ef1a:	86 ec       	ldi	r24, 0xC6	; 198
    ef1c:	94 e1       	ldi	r25, 0x14	; 20
    ef1e:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
					}
					_sPump_Parameter.Irrigation_Status = _eWIRELESS_PUMP_FAIL_FAULT;
					_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    ef22:	84 e0       	ldi	r24, 0x04	; 4
    ef24:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
					_sRuble_Parameters.Publish_Topic  |= _ePUB_RUBLE_FAULTS; 
    ef28:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    ef2c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    ef30:	82 60       	ori	r24, 0x02	; 2
    ef32:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    ef36:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    ef3a:	8b c2       	rjmp	.+1302   	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
		return ;
	}
	
	
	
	if(_sPump_Parameter.Irrigation_Status != 0)
    ef3c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    ef40:	88 23       	and	r24, r24
    ef42:	41 f0       	breq	.+16     	; 0xef54 <_Z14Faults_Handlerv+0xde>
	{
		if(_gfault_Occure == 0)
    ef44:	80 91 ec 0c 	lds	r24, 0x0CEC	; 0x800cec <_gfault_Occure>
    ef48:	90 91 ed 0c 	lds	r25, 0x0CED	; 0x800ced <_gfault_Occure+0x1>
    ef4c:	89 2b       	or	r24, r25
    ef4e:	11 f4       	brne	.+4      	; 0xef54 <_Z14Faults_Handlerv+0xde>
		{
			_sPump_Parameter.Irrigation_Status = 0;
    ef50:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
		}	
	}
	
	
	
	if(_sRuble_Parameters.Read_Ct_Value_Timer)
    ef54:	80 91 ca 13 	lds	r24, 0x13CA	; 0x8013ca <_sRuble_Parameters+0x1c>
    ef58:	90 91 cb 13 	lds	r25, 0x13CB	; 0x8013cb <_sRuble_Parameters+0x1d>
    ef5c:	89 2b       	or	r24, r25
    ef5e:	e9 f0       	breq	.+58     	; 0xef9a <_Z14Faults_Handlerv+0x124>
	{
		if(fault_occure)
    ef60:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    ef64:	88 23       	and	r24, r24
    ef66:	39 f0       	breq	.+14     	; 0xef76 <_Z14Faults_Handlerv+0x100>
		{
			fault_occure = _kRESET;
    ef68:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer++;
    ef6c:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    ef70:	8f 5f       	subi	r24, 0xFF	; 255
    ef72:	80 93 df 0c 	sts	0x0CDF, r24	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
		}
		
		_sRuble_Parameters.Read_Ct_Value_Timer = _kRESET;
    ef76:	10 92 cb 13 	sts	0x13CB, r1	; 0x8013cb <_sRuble_Parameters+0x1d>
    ef7a:	10 92 ca 13 	sts	0x13CA, r1	; 0x8013ca <_sRuble_Parameters+0x1c>
		_sPump_Parameter.Pump_Run_Current = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    ef7e:	68 ec       	ldi	r22, 0xC8	; 200
    ef80:	75 e0       	ldi	r23, 0x05	; 5
    ef82:	82 ef       	ldi	r24, 0xF2	; 242
    ef84:	9c e0       	ldi	r25, 0x0C	; 12
    ef86:	0e 94 db d8 	call	0x1b1b6	; 0x1b1b6 <_ZN13EnergyMonitor8calcIrmsEj>
    ef8a:	60 93 a8 13 	sts	0x13A8, r22	; 0x8013a8 <_sPump_Parameter+0x4>
    ef8e:	70 93 a9 13 	sts	0x13A9, r23	; 0x8013a9 <_sPump_Parameter+0x5>
    ef92:	80 93 aa 13 	sts	0x13AA, r24	; 0x8013aa <_sPump_Parameter+0x6>
    ef96:	90 93 ab 13 	sts	0x13AB, r25	; 0x8013ab <_sPump_Parameter+0x7>
	}
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER)
    ef9a:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    ef9e:	81 30       	cpi	r24, 0x01	; 1
    efa0:	19 f4       	brne	.+6      	; 0xefa8 <_Z14Faults_Handlerv+0x132>
				_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
			}
		}
		else
		{
			if(_sRuble_Parameters.Line_Fault_Flag)
    efa2:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    efa6:	81 11       	cpse	r24, r1
			{
				_sRuble_Parameters.Line_Fault_Flag = _kRESET;
    efa8:	10 92 70 14 	sts	0x1470, r1	; 0x801470 <_sRuble_Parameters+0xc2>
		_sRuble_Parameters.Line_Fault_Flag = _kRESET;
	}
	
	
	
	if(!_sRuble_Parameters.By_Pass_CT)
    efac:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
    efb0:	88 23       	and	r24, r24
    efb2:	09 f4       	brne	.+2      	; 0xefb6 <_Z14Faults_Handlerv+0x140>
    efb4:	4e c2       	rjmp	.+1180   	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
	{
		return;
	}
	
	if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 15))
    efb6:	c0 90 a8 13 	lds	r12, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    efba:	d0 90 a9 13 	lds	r13, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    efbe:	e0 90 aa 13 	lds	r14, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    efc2:	f0 90 ab 13 	lds	r15, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    efc6:	40 90 a4 13 	lds	r4, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    efca:	50 90 a5 13 	lds	r5, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    efce:	60 90 a6 13 	lds	r6, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    efd2:	70 90 a7 13 	lds	r7, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    efd6:	20 e0       	ldi	r18, 0x00	; 0
    efd8:	30 e0       	ldi	r19, 0x00	; 0
    efda:	48 ec       	ldi	r20, 0xC8	; 200
    efdc:	52 e4       	ldi	r21, 0x42	; 66
    efde:	c3 01       	movw	r24, r6
    efe0:	b2 01       	movw	r22, r4
    efe2:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
    efe6:	4b 01       	movw	r8, r22
    efe8:	5c 01       	movw	r10, r24
    efea:	20 e0       	ldi	r18, 0x00	; 0
    efec:	30 e0       	ldi	r19, 0x00	; 0
    efee:	40 e7       	ldi	r20, 0x70	; 112
    eff0:	51 e4       	ldi	r21, 0x41	; 65
    eff2:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    eff6:	9b 01       	movw	r18, r22
    eff8:	ac 01       	movw	r20, r24
    effa:	c7 01       	movw	r24, r14
    effc:	b6 01       	movw	r22, r12
    effe:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
    f002:	87 ff       	sbrs	r24, 7
    f004:	43 c0       	rjmp	.+134    	; 0xf08c <_Z14Faults_Handlerv+0x216>
	{
		if(_sRuble_Parameters.Pump_On_Flag == _ePUMP_ON)
    f006:	20 91 b6 13 	lds	r18, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
    f00a:	30 91 b7 13 	lds	r19, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
    f00e:	40 91 b8 13 	lds	r20, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
    f012:	50 91 b9 13 	lds	r21, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
    f016:	60 91 ba 13 	lds	r22, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
    f01a:	70 91 bb 13 	lds	r23, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
    f01e:	80 91 bc 13 	lds	r24, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
    f022:	90 91 bd 13 	lds	r25, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
    f026:	a2 e0       	ldi	r26, 0x02	; 2
    f028:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    f02c:	79 f5       	brne	.+94     	; 0xf08c <_Z14Faults_Handlerv+0x216>
		{
			fault_occure = _kRESET;
    f02e:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer = _kRESET;
    f032:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
			_sRuble_Parameters.Pump_On_Flag = _ePUMP_OFF;
    f036:	84 e0       	ldi	r24, 0x04	; 4
    f038:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    f03c:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    f040:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    f044:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    f048:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    f04c:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    f050:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    f054:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
			_sGSM_Query.SMS_Alert |= _ePUMP_OFF;
    f058:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f05c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f060:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f064:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f068:	84 60       	ori	r24, 0x04	; 4
    f06a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f06e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f072:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f076:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
			_sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
    f07a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f07e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f082:	84 60       	ori	r24, 0x04	; 4
    f084:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f088:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		}
	}
	
	if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current/100) * 18))
    f08c:	20 e0       	ldi	r18, 0x00	; 0
    f08e:	30 e0       	ldi	r19, 0x00	; 0
    f090:	40 e9       	ldi	r20, 0x90	; 144
    f092:	51 e4       	ldi	r21, 0x41	; 65
    f094:	c5 01       	movw	r24, r10
    f096:	b4 01       	movw	r22, r8
    f098:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    f09c:	9b 01       	movw	r18, r22
    f09e:	ac 01       	movw	r20, r24
    f0a0:	c7 01       	movw	r24, r14
    f0a2:	b6 01       	movw	r22, r12
    f0a4:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
    f0a8:	18 16       	cp	r1, r24
    f0aa:	0c f0       	brlt	.+2      	; 0xf0ae <_Z14Faults_Handlerv+0x238>
    f0ac:	43 c0       	rjmp	.+134    	; 0xf134 <_Z14Faults_Handlerv+0x2be>
	{
		if(_sRuble_Parameters.Pump_On_Flag == _ePUMP_OFF)
    f0ae:	20 91 b6 13 	lds	r18, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
    f0b2:	30 91 b7 13 	lds	r19, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
    f0b6:	40 91 b8 13 	lds	r20, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
    f0ba:	50 91 b9 13 	lds	r21, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
    f0be:	60 91 ba 13 	lds	r22, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
    f0c2:	70 91 bb 13 	lds	r23, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
    f0c6:	80 91 bc 13 	lds	r24, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
    f0ca:	90 91 bd 13 	lds	r25, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
    f0ce:	a4 e0       	ldi	r26, 0x04	; 4
    f0d0:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
    f0d4:	79 f5       	brne	.+94     	; 0xf134 <_Z14Faults_Handlerv+0x2be>
		{
			fault_occure = _kRESET;
    f0d6:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer = _kRESET;
    f0da:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
			_sGSM_Query.SMS_Alert |=  _ePUMP_ON;
    f0de:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f0e2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f0e6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f0ea:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f0ee:	82 60       	ori	r24, 0x02	; 2
    f0f0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f0f4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f0f8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f0fc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
			_sRuble_Parameters.Pump_On_Flag = _ePUMP_ON;
    f100:	82 e0       	ldi	r24, 0x02	; 2
    f102:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    f106:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    f10a:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    f10e:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    f112:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    f116:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    f11a:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    f11e:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
			_sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
    f122:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f126:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f12a:	84 60       	ori	r24, 0x04	; 4
    f12c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f130:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
	}
	
	//_kSERAIL_MON_WRITE("Faults_Handler 9 ");
	
	
	if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_MANUAL || ( (_sRuble_Parameters.Start_Monitoring_Pump_Faults_Timer > _kSTART_MONITORING_PUMP_FAULTS_TIMER) && ((_sRuble_Parameters.Irrigating_Plot !=0) ||( _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET) || (_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET))))
    f134:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f138:	82 30       	cpi	r24, 0x02	; 2
    f13a:	a9 f0       	breq	.+42     	; 0xf166 <_Z14Faults_Handlerv+0x2f0>
    f13c:	80 91 c8 13 	lds	r24, 0x13C8	; 0x8013c8 <_sRuble_Parameters+0x1a>
    f140:	90 91 c9 13 	lds	r25, 0x13C9	; 0x8013c9 <_sRuble_Parameters+0x1b>
    f144:	89 37       	cpi	r24, 0x79	; 121
    f146:	91 05       	cpc	r25, r1
    f148:	08 f4       	brcc	.+2      	; 0xf14c <_Z14Faults_Handlerv+0x2d6>
    f14a:	83 c1       	rjmp	.+774    	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
    f14c:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    f150:	81 11       	cpse	r24, r1
    f152:	09 c0       	rjmp	.+18     	; 0xf166 <_Z14Faults_Handlerv+0x2f0>
    f154:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
    f158:	81 11       	cpse	r24, r1
    f15a:	05 c0       	rjmp	.+10     	; 0xf166 <_Z14Faults_Handlerv+0x2f0>
    f15c:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    f160:	81 30       	cpi	r24, 0x01	; 1
    f162:	09 f0       	breq	.+2      	; 0xf166 <_Z14Faults_Handlerv+0x2f0>
    f164:	76 c1       	rjmp	.+748    	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
	// || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET))
	{
		_sRuble_Parameters.Start_Monitoring_Pump_Faults_Timer = _kSTART_MONITORING_PUMP_FAULTS_TIMER+1;   /* don't want to overflow */
    f166:	89 e7       	ldi	r24, 0x79	; 121
    f168:	90 e0       	ldi	r25, 0x00	; 0
    f16a:	90 93 c9 13 	sts	0x13C9, r25	; 0x8013c9 <_sRuble_Parameters+0x1b>
    f16e:	80 93 c8 13 	sts	0x13C8, r24	; 0x8013c8 <_sRuble_Parameters+0x1a>
		
		if(_sPump_Parameter.Pump_Run_Current > (_sPump_Parameter.Pump_Nominal_Current) + ((_sPump_Parameter.Pump_Nominal_Current/100) * 32))
    f172:	20 e0       	ldi	r18, 0x00	; 0
    f174:	30 e0       	ldi	r19, 0x00	; 0
    f176:	40 e0       	ldi	r20, 0x00	; 0
    f178:	52 e4       	ldi	r21, 0x42	; 66
    f17a:	c5 01       	movw	r24, r10
    f17c:	b4 01       	movw	r22, r8
    f17e:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    f182:	a3 01       	movw	r20, r6
    f184:	92 01       	movw	r18, r4
    f186:	0e 94 4f d0 	call	0x1a09e	; 0x1a09e <__addsf3>
    f18a:	9b 01       	movw	r18, r22
    f18c:	ac 01       	movw	r20, r24
    f18e:	c7 01       	movw	r24, r14
    f190:	b6 01       	movw	r22, r12
    f192:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
    f196:	18 16       	cp	r1, r24
    f198:	0c f0       	brlt	.+2      	; 0xf19c <_Z14Faults_Handlerv+0x326>
    f19a:	52 c0       	rjmp	.+164    	; 0xf240 <_Z14Faults_Handlerv+0x3ca>
		{
			if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_OVER_LOAD))
    f19c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f1a0:	89 30       	cpi	r24, 0x09	; 9
    f1a2:	09 f4       	brne	.+2      	; 0xf1a6 <_Z14Faults_Handlerv+0x330>
    f1a4:	53 c0       	rjmp	.+166    	; 0xf24c <_Z14Faults_Handlerv+0x3d6>
			{
				fault_occure = _eIRRIG_STAT_OVER_LOAD;
    f1a6:	89 e0       	ldi	r24, 0x09	; 9
    f1a8:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    f1ac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f1b0:	81 30       	cpi	r24, 0x01	; 1
    f1b2:	71 f4       	brne	.+28     	; 0xf1d0 <_Z14Faults_Handlerv+0x35a>
				{
					_kSERAIL_MON_WRITE("Pump Overlaoded ");
    f1b4:	67 ed       	ldi	r22, 0xD7	; 215
    f1b6:	75 e2       	ldi	r23, 0x25	; 37
    f1b8:	86 ec       	ldi	r24, 0xC6	; 198
    f1ba:	94 e1       	ldi	r25, 0x14	; 20
    f1bc:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(faults_check_timer);
    f1c0:	4a e0       	ldi	r20, 0x0A	; 10
    f1c2:	50 e0       	ldi	r21, 0x00	; 0
    f1c4:	60 91 df 0c 	lds	r22, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f1c8:	86 ec       	ldi	r24, 0xC6	; 198
    f1ca:	94 e1       	ldi	r25, 0x14	; 20
    f1cc:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
				}
				if(faults_check_timer > 3)
    f1d0:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f1d4:	84 30       	cpi	r24, 0x04	; 4
    f1d6:	d0 f1       	brcs	.+116    	; 0xf24c <_Z14Faults_Handlerv+0x3d6>
				{
					faults_check_timer = 0;
    f1d8:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    f1dc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f1e0:	81 30       	cpi	r24, 0x01	; 1
    f1e2:	51 f4       	brne	.+20     	; 0xf1f8 <_Z14Faults_Handlerv+0x382>
					{
						_kSERAIL_MON_WRITE("Pump Overlaoded");
    f1e4:	67 ec       	ldi	r22, 0xC7	; 199
    f1e6:	75 e2       	ldi	r23, 0x25	; 37
    f1e8:	86 ec       	ldi	r24, 0xC6	; 198
    f1ea:	94 e1       	ldi	r25, 0x14	; 20
    f1ec:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    f1f0:	86 ec       	ldi	r24, 0xC6	; 198
    f1f2:	94 e1       	ldi	r25, 0x14	; 20
    f1f4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					}
					_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_OVER_LOAD;
    f1f8:	89 e0       	ldi	r24, 0x09	; 9
    f1fa:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
					_gfault_Occure = _kFAULT_RESET_TIMER;
    f1fe:	84 e6       	ldi	r24, 0x64	; 100
    f200:	90 e0       	ldi	r25, 0x00	; 0
    f202:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f206:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
					_sGSM_Query.SMS_Alert |=  _ePUMP_OVERLOAD;
    f20a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f20e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f212:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f216:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f21a:	80 62       	ori	r24, 0x20	; 32
    f21c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f220:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f224:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f228:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
					_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    f22c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f230:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f234:	82 60       	ori	r24, 0x02	; 2
    f236:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f23a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f23e:	06 c0       	rjmp	.+12     	; 0xf24c <_Z14Faults_Handlerv+0x3d6>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_OVER_LOAD)
    f240:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f244:	89 30       	cpi	r24, 0x09	; 9
    f246:	11 f4       	brne	.+4      	; 0xf24c <_Z14Faults_Handlerv+0x3d6>
			{
				fault_occure = _kRESET;
    f248:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
		
		//_kSERAIL_MON_WRITE("Faults_Handler 10 ");
		
		/*********if pump consume less current which is 60% less than nominal current then there is dry run fault *******************/
		
		if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 58))
    f24c:	c0 90 a8 13 	lds	r12, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f250:	d0 90 a9 13 	lds	r13, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f254:	e0 90 aa 13 	lds	r14, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f258:	f0 90 ab 13 	lds	r15, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f25c:	20 e0       	ldi	r18, 0x00	; 0
    f25e:	30 e0       	ldi	r19, 0x00	; 0
    f260:	48 ec       	ldi	r20, 0xC8	; 200
    f262:	52 e4       	ldi	r21, 0x42	; 66
    f264:	60 91 a4 13 	lds	r22, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f268:	70 91 a5 13 	lds	r23, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f26c:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f270:	90 91 a7 13 	lds	r25, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f274:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
    f278:	4b 01       	movw	r8, r22
    f27a:	5c 01       	movw	r10, r24
    f27c:	20 e0       	ldi	r18, 0x00	; 0
    f27e:	30 e0       	ldi	r19, 0x00	; 0
    f280:	48 e6       	ldi	r20, 0x68	; 104
    f282:	52 e4       	ldi	r21, 0x42	; 66
    f284:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    f288:	9b 01       	movw	r18, r22
    f28a:	ac 01       	movw	r20, r24
    f28c:	c7 01       	movw	r24, r14
    f28e:	b6 01       	movw	r22, r12
    f290:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
    f294:	87 ff       	sbrs	r24, 7
    f296:	63 c0       	rjmp	.+198    	; 0xf35e <_Z14Faults_Handlerv+0x4e8>
		{
			if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current/100) * 20))
    f298:	20 e0       	ldi	r18, 0x00	; 0
    f29a:	30 e0       	ldi	r19, 0x00	; 0
    f29c:	40 ea       	ldi	r20, 0xA0	; 160
    f29e:	51 e4       	ldi	r21, 0x41	; 65
    f2a0:	c5 01       	movw	r24, r10
    f2a2:	b4 01       	movw	r22, r8
    f2a4:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    f2a8:	9b 01       	movw	r18, r22
    f2aa:	ac 01       	movw	r20, r24
    f2ac:	c7 01       	movw	r24, r14
    f2ae:	b6 01       	movw	r22, r12
    f2b0:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
    f2b4:	18 16       	cp	r1, r24
    f2b6:	0c f0       	brlt	.+2      	; 0xf2ba <_Z14Faults_Handlerv+0x444>
    f2b8:	58 c0       	rjmp	.+176    	; 0xf36a <_Z14Faults_Handlerv+0x4f4>
			{
				if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_DRY_RUN))
    f2ba:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f2be:	81 30       	cpi	r24, 0x01	; 1
    f2c0:	09 f4       	brne	.+2      	; 0xf2c4 <_Z14Faults_Handlerv+0x44e>
    f2c2:	53 c0       	rjmp	.+166    	; 0xf36a <_Z14Faults_Handlerv+0x4f4>
				{
					fault_occure = _eIRRIG_STAT_DRY_RUN;
    f2c4:	81 e0       	ldi	r24, 0x01	; 1
    f2c6:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    f2ca:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f2ce:	81 30       	cpi	r24, 0x01	; 1
    f2d0:	71 f4       	brne	.+28     	; 0xf2ee <_Z14Faults_Handlerv+0x478>
					{
						_kSERAIL_MON_WRITE("Pump Dry Run ");
    f2d2:	69 eb       	ldi	r22, 0xB9	; 185
    f2d4:	75 e2       	ldi	r23, 0x25	; 37
    f2d6:	86 ec       	ldi	r24, 0xC6	; 198
    f2d8:	94 e1       	ldi	r25, 0x14	; 20
    f2da:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(faults_check_timer);
    f2de:	4a e0       	ldi	r20, 0x0A	; 10
    f2e0:	50 e0       	ldi	r21, 0x00	; 0
    f2e2:	60 91 df 0c 	lds	r22, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f2e6:	86 ec       	ldi	r24, 0xC6	; 198
    f2e8:	94 e1       	ldi	r25, 0x14	; 20
    f2ea:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
					}
					if(faults_check_timer > 3)
    f2ee:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f2f2:	84 30       	cpi	r24, 0x04	; 4
    f2f4:	d0 f1       	brcs	.+116    	; 0xf36a <_Z14Faults_Handlerv+0x4f4>
					{
						faults_check_timer = 0;
    f2f6:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    f2fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f2fe:	81 30       	cpi	r24, 0x01	; 1
    f300:	51 f4       	brne	.+20     	; 0xf316 <_Z14Faults_Handlerv+0x4a0>
						{
							_kSERAIL_MON_WRITE("Pump Dry Run");
    f302:	6c ea       	ldi	r22, 0xAC	; 172
    f304:	75 e2       	ldi	r23, 0x25	; 37
    f306:	86 ec       	ldi	r24, 0xC6	; 198
    f308:	94 e1       	ldi	r25, 0x14	; 20
    f30a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    f30e:	86 ec       	ldi	r24, 0xC6	; 198
    f310:	94 e1       	ldi	r25, 0x14	; 20
    f312:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
						}
						_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_DRY_RUN;
    f316:	81 e0       	ldi	r24, 0x01	; 1
    f318:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    f31c:	84 e6       	ldi	r24, 0x64	; 100
    f31e:	90 e0       	ldi	r25, 0x00	; 0
    f320:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f324:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |=  _eDRY_RUN;
    f328:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f32c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f330:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f334:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f338:	90 61       	ori	r25, 0x10	; 16
    f33a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f33e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f342:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f346:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    f34a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f34e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f352:	82 60       	ori	r24, 0x02	; 2
    f354:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f358:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f35c:	06 c0       	rjmp	.+12     	; 0xf36a <_Z14Faults_Handlerv+0x4f4>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_DRY_RUN)
    f35e:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f362:	81 30       	cpi	r24, 0x01	; 1
    f364:	11 f4       	brne	.+4      	; 0xf36a <_Z14Faults_Handlerv+0x4f4>
			{
				fault_occure = _kRESET;
    f366:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
		}
		
		//_kSERAIL_MON_WRITE("Faults_Handler 11 ");
		
		/*********if pump consume less current which is 90% less than nominal current then there is line fault *******************/
		if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 15))
    f36a:	20 e0       	ldi	r18, 0x00	; 0
    f36c:	30 e0       	ldi	r19, 0x00	; 0
    f36e:	48 ec       	ldi	r20, 0xC8	; 200
    f370:	52 e4       	ldi	r21, 0x42	; 66
    f372:	60 91 a4 13 	lds	r22, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f376:	70 91 a5 13 	lds	r23, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f37a:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f37e:	90 91 a7 13 	lds	r25, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f382:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
    f386:	20 e0       	ldi	r18, 0x00	; 0
    f388:	30 e0       	ldi	r19, 0x00	; 0
    f38a:	40 e7       	ldi	r20, 0x70	; 112
    f38c:	51 e4       	ldi	r21, 0x41	; 65
    f38e:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    f392:	9b 01       	movw	r18, r22
    f394:	ac 01       	movw	r20, r24
    f396:	60 91 a8 13 	lds	r22, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f39a:	70 91 a9 13 	lds	r23, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f39e:	80 91 aa 13 	lds	r24, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f3a2:	90 91 ab 13 	lds	r25, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f3a6:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
    f3aa:	87 ff       	sbrs	r24, 7
    f3ac:	46 c0       	rjmp	.+140    	; 0xf43a <_Z14Faults_Handlerv+0x5c4>
		{
			if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    f3ae:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f3b2:	98 2f       	mov	r25, r24
    f3b4:	9d 7f       	andi	r25, 0xFD	; 253
    f3b6:	91 30       	cpi	r25, 0x01	; 1
    f3b8:	19 f0       	breq	.+6      	; 0xf3c0 <_Z14Faults_Handlerv+0x54a>
    f3ba:	85 30       	cpi	r24, 0x05	; 5
    f3bc:	09 f0       	breq	.+2      	; 0xf3c0 <_Z14Faults_Handlerv+0x54a>
    f3be:	43 c0       	rjmp	.+134    	; 0xf446 <_Z14Faults_Handlerv+0x5d0>
			_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
			{
				if(_kGPIO_GET(_kPUMP_1) == _kPUMP_ON)
    f3c0:	8a e0       	ldi	r24, 0x0A	; 10
    f3c2:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
    f3c6:	89 2b       	or	r24, r25
    f3c8:	f1 f5       	brne	.+124    	; 0xf446 <_Z14Faults_Handlerv+0x5d0>
				{
					if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_LINE_FAULT))
    f3ca:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f3ce:	84 30       	cpi	r24, 0x04	; 4
    f3d0:	d1 f1       	breq	.+116    	; 0xf446 <_Z14Faults_Handlerv+0x5d0>
					{
						fault_occure = _eIRRIG_STAT_LINE_FAULT;
						fault_occure = _eIRRIG_STAT_DRY_RUN;
    f3d2:	81 e0       	ldi	r24, 0x01	; 1
    f3d4:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    f3d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f3dc:	81 30       	cpi	r24, 0x01	; 1
    f3de:	31 f4       	brne	.+12     	; 0xf3ec <_Z14Faults_Handlerv+0x576>
						{
							_kSERAIL_MON_WRITE("Pump Line Fault ");
    f3e0:	6b e9       	ldi	r22, 0x9B	; 155
    f3e2:	75 e2       	ldi	r23, 0x25	; 37
    f3e4:	86 ec       	ldi	r24, 0xC6	; 198
    f3e6:	94 e1       	ldi	r25, 0x14	; 20
    f3e8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
						}
						if(faults_check_timer > 3)
    f3ec:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f3f0:	84 30       	cpi	r24, 0x04	; 4
    f3f2:	48 f1       	brcs	.+82     	; 0xf446 <_Z14Faults_Handlerv+0x5d0>
						{
							faults_check_timer = _kRESET;
    f3f4:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    f3f8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f3fc:	81 30       	cpi	r24, 0x01	; 1
    f3fe:	51 f4       	brne	.+20     	; 0xf414 <_Z14Faults_Handlerv+0x59e>
							{
								_kSERAIL_MON_WRITE("Pump Line Fault");
    f400:	6b e8       	ldi	r22, 0x8B	; 139
    f402:	75 e2       	ldi	r23, 0x25	; 37
    f404:	86 ec       	ldi	r24, 0xC6	; 198
    f406:	94 e1       	ldi	r25, 0x14	; 20
    f408:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    f40c:	86 ec       	ldi	r24, 0xC6	; 198
    f40e:	94 e1       	ldi	r25, 0x14	; 20
    f410:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
							}
							
							_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    f414:	84 e0       	ldi	r24, 0x04	; 4
    f416:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    f41a:	84 e6       	ldi	r24, 0x64	; 100
    f41c:	90 e0       	ldi	r25, 0x00	; 0
    f41e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f422:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							{
								_sRuble_Parameters.Line_Fault_Flag = _kSET;
								_sGSM_Query.SMS_Alert |=  _eLINE_FAULT_SMS;
							}*/
							
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    f426:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f42a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f42e:	82 60       	ori	r24, 0x02	; 2
    f430:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f434:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f438:	06 c0       	rjmp	.+12     	; 0xf446 <_Z14Faults_Handlerv+0x5d0>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_LINE_FAULT)
    f43a:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f43e:	84 30       	cpi	r24, 0x04	; 4
    f440:	11 f4       	brne	.+4      	; 0xf446 <_Z14Faults_Handlerv+0x5d0>
			{
				fault_occure = _kRESET;
    f442:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
				_sRuble_Parameters.Line_Fault_Flag = _kRESET;
				//_sGSM_Query.SMS_Alert |=  _e3PHASE_POWER_INTERRUPTED;
			}*/
		}
		
		if(fault_occure == _kRESET)
    f446:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f44a:	81 11       	cpse	r24, r1
    f44c:	02 c0       	rjmp	.+4      	; 0xf452 <_Z14Faults_Handlerv+0x5dc>
		{
			faults_check_timer = _kRESET;
    f44e:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
		}
	}
	
	//_kSERAIL_MON_WRITE("Faults_Handler 12 ");
}
    f452:	ff 90       	pop	r15
    f454:	ef 90       	pop	r14
    f456:	df 90       	pop	r13
    f458:	cf 90       	pop	r12
    f45a:	bf 90       	pop	r11
    f45c:	af 90       	pop	r10
    f45e:	9f 90       	pop	r9
    f460:	8f 90       	pop	r8
    f462:	7f 90       	pop	r7
    f464:	6f 90       	pop	r6
    f466:	5f 90       	pop	r5
    f468:	4f 90       	pop	r4
    f46a:	08 95       	ret

0000f46c <_Z18Local_Time_Settingv>:
	}
}


void Local_Time_Setting(void)
{
    f46c:	0f 93       	push	r16
	Reset_Buffer();
    f46e:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
	_kSERIAL_AT.println(F("AT"));
    f472:	6e e6       	ldi	r22, 0x6E	; 110
    f474:	75 e2       	ldi	r23, 0x25	; 37
    f476:	83 e8       	ldi	r24, 0x83	; 131
    f478:	96 e1       	ldi	r25, 0x16	; 22
    f47a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(Send_AT_Command(NULL, "OK",  NULL,3000,2))
    f47e:	02 e0       	ldi	r16, 0x02	; 2
    f480:	28 eb       	ldi	r18, 0xB8	; 184
    f482:	3b e0       	ldi	r19, 0x0B	; 11
    f484:	40 e0       	ldi	r20, 0x00	; 0
    f486:	50 e0       	ldi	r21, 0x00	; 0
    f488:	6e e1       	ldi	r22, 0x1E	; 30
    f48a:	73 e0       	ldi	r23, 0x03	; 3
    f48c:	80 e0       	ldi	r24, 0x00	; 0
    f48e:	90 e0       	ldi	r25, 0x00	; 0
    f490:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    f494:	88 23       	and	r24, r24
    f496:	c1 f1       	breq	.+112    	; 0xf508 <_Z18Local_Time_Settingv+0x9c>
	{	
		Reset_Buffer();		
    f498:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("ATE0"));
    f49c:	69 e6       	ldi	r22, 0x69	; 105
    f49e:	75 e2       	ldi	r23, 0x25	; 37
    f4a0:	83 e8       	ldi	r24, 0x83	; 131
    f4a2:	96 e1       	ldi	r25, 0x16	; 22
    f4a4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    f4a8:	28 eb       	ldi	r18, 0xB8	; 184
    f4aa:	3b e0       	ldi	r19, 0x0B	; 11
    f4ac:	40 e0       	ldi	r20, 0x00	; 0
    f4ae:	50 e0       	ldi	r21, 0x00	; 0
    f4b0:	6e e1       	ldi	r22, 0x1E	; 30
    f4b2:	73 e0       	ldi	r23, 0x03	; 3
    f4b4:	80 e0       	ldi	r24, 0x00	; 0
    f4b6:	90 e0       	ldi	r25, 0x00	; 0
    f4b8:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
		
		Reset_Buffer();
    f4bc:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CPIN?"));
    f4c0:	60 e6       	ldi	r22, 0x60	; 96
    f4c2:	75 e2       	ldi	r23, 0x25	; 37
    f4c4:	83 e8       	ldi	r24, 0x83	; 131
    f4c6:	96 e1       	ldi	r25, 0x16	; 22
    f4c8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		
		if(!Send_AT_Command(NULL, "OK",  NULL,10000,2))
    f4cc:	20 e1       	ldi	r18, 0x10	; 16
    f4ce:	37 e2       	ldi	r19, 0x27	; 39
    f4d0:	40 e0       	ldi	r20, 0x00	; 0
    f4d2:	50 e0       	ldi	r21, 0x00	; 0
    f4d4:	6e e1       	ldi	r22, 0x1E	; 30
    f4d6:	73 e0       	ldi	r23, 0x03	; 3
    f4d8:	80 e0       	ldi	r24, 0x00	; 0
    f4da:	90 e0       	ldi	r25, 0x00	; 0
    f4dc:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
    f4e0:	81 11       	cpse	r24, r1
    f4e2:	15 c0       	rjmp	.+42     	; 0xf50e <_Z18Local_Time_Settingv+0xa2>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f4e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f4e8:	81 30       	cpi	r24, 0x01	; 1
    f4ea:	51 f4       	brne	.+20     	; 0xf500 <_Z18Local_Time_Settingv+0x94>
			{
				_kSERAIL_MON_WRITE("check sim me");
    f4ec:	63 e5       	ldi	r22, 0x53	; 83
    f4ee:	75 e2       	ldi	r23, 0x25	; 37
    f4f0:	86 ec       	ldi	r24, 0xC6	; 198
    f4f2:	94 e1       	ldi	r25, 0x14	; 20
    f4f4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    f4f8:	86 ec       	ldi	r24, 0xC6	; 198
    f4fa:	94 e1       	ldi	r25, 0x14	; 20
    f4fc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Sim_Check = _eSIM_NOT_INSERTED;
    f500:	81 e0       	ldi	r24, 0x01	; 1
    f502:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    f506:	03 c0       	rjmp	.+6      	; 0xf50e <_Z18Local_Time_Settingv+0xa2>
		}
	}
	else
	{
		_sGSM_Query.Gsm_Module_Test = _kSET;
    f508:	81 e0       	ldi	r24, 0x01	; 1
    f50a:	80 93 69 0c 	sts	0x0C69, r24	; 0x800c69 <_sGSM_Query+0x5>
	}
}
    f50e:	0f 91       	pop	r16
    f510:	08 95       	ret

0000f512 <_Z21Exra_Plot_Data_EEPROMh>:


void Exra_Plot_Data_EEPROM(unsigned char plot_number)
{
    f512:	cf 92       	push	r12
    f514:	df 92       	push	r13
    f516:	ef 92       	push	r14
    f518:	ff 92       	push	r15
    f51a:	0f 93       	push	r16
    f51c:	1f 93       	push	r17
    f51e:	cf 93       	push	r28
    f520:	df 93       	push	r29
    f522:	1f 92       	push	r1
    f524:	1f 92       	push	r1
    f526:	cd b7       	in	r28, 0x3d	; 61
    f528:	de b7       	in	r29, 0x3e	; 62
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    f52a:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f52e:	08 2f       	mov	r16, r24
    f530:	10 e0       	ldi	r17, 0x00	; 0
    f532:	91 30       	cpi	r25, 0x01	; 1
    f534:	d9 f0       	breq	.+54     	; 0xf56c <_Z21Exra_Plot_Data_EEPROMh+0x5a>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[plot_number-1].Euro_Valve_Group[i]);
			_kSERIAL_MON_CLEAR();
		}
	}
	
	_kEEPROM_WRITE(_kEEPROM_EXTRA_PLOT_DATA(plot_number), _sExtra_Plot[plot_number-1]);
    f536:	01 50       	subi	r16, 0x01	; 1
    f538:	11 09       	sbc	r17, r1
    f53a:	8e e1       	ldi	r24, 0x1E	; 30
    f53c:	80 9f       	mul	r24, r16
    f53e:	90 01       	movw	r18, r0
    f540:	81 9f       	mul	r24, r17
    f542:	30 0d       	add	r19, r0
    f544:	11 24       	eor	r1, r1
    f546:	79 01       	movw	r14, r18
    f548:	8f e0       	ldi	r24, 0x0F	; 15
    f54a:	e8 1a       	sub	r14, r24
    f54c:	86 ef       	ldi	r24, 0xF6	; 246
    f54e:	f8 0a       	sbc	r15, r24
    f550:	8b e1       	ldi	r24, 0x1B	; 27
    f552:	80 9f       	mul	r24, r16
    f554:	a0 01       	movw	r20, r0
    f556:	81 9f       	mul	r24, r17
    f558:	50 0d       	add	r21, r0
    f55a:	11 24       	eor	r1, r1
    f55c:	fa 01       	movw	r30, r20
    f55e:	e8 51       	subi	r30, 0x18	; 24
    f560:	f2 4f       	sbci	r31, 0xF2	; 242
    f562:	6f 01       	movw	r12, r30
    f564:	89 01       	movw	r16, r18
    f566:	04 5f       	subi	r16, 0xF4	; 244
    f568:	15 4f       	sbci	r17, 0xF5	; 245
    f56a:	5f c0       	rjmp	.+190    	; 0xf62a <_Z21Exra_Plot_Data_EEPROMh+0x118>

void Exra_Plot_Data_EEPROM(unsigned char plot_number)
{
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		Serial.println();
    f56c:	86 ec       	ldi	r24, 0xC6	; 198
    f56e:	94 e1       	ldi	r25, 0x14	; 20
    f570:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
		_kSERAIL_MON_WRITE_NO_LN("extra plot : ");
    f574:	65 e4       	ldi	r22, 0x45	; 69
    f576:	75 e2       	ldi	r23, 0x25	; 37
    f578:	86 ec       	ldi	r24, 0xC6	; 198
    f57a:	94 e1       	ldi	r25, 0x14	; 20
    f57c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM((int )plot_number);
    f580:	4a e0       	ldi	r20, 0x0A	; 10
    f582:	50 e0       	ldi	r21, 0x00	; 0
    f584:	b8 01       	movw	r22, r16
    f586:	86 ec       	ldi	r24, 0xC6	; 198
    f588:	94 e1       	ldi	r25, 0x14	; 20
    f58a:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
		Serial.println();
    f58e:	86 ec       	ldi	r24, 0xC6	; 198
    f590:	94 e1       	ldi	r25, 0x14	; 20
    f592:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
		_kSERIAL_MON_CLEAR();
    f596:	86 ec       	ldi	r24, 0xC6	; 198
    f598:	94 e1       	ldi	r25, 0x14	; 20
    f59a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("data saving in eeprom ");
    f59e:	6e e2       	ldi	r22, 0x2E	; 46
    f5a0:	75 e2       	ldi	r23, 0x25	; 37
    f5a2:	86 ec       	ldi	r24, 0xC6	; 198
    f5a4:	94 e1       	ldi	r25, 0x14	; 20
    f5a6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number.: ");
    f5aa:	69 e1       	ldi	r22, 0x19	; 25
    f5ac:	75 e2       	ldi	r23, 0x25	; 37
    f5ae:	86 ec       	ldi	r24, 0xC6	; 198
    f5b0:	94 e1       	ldi	r25, 0x14	; 20
    f5b2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[plot_number-1].Extra_Plot_Number);
    f5b6:	c8 01       	movw	r24, r16
    f5b8:	01 97       	sbiw	r24, 0x01	; 1
    f5ba:	2b e1       	ldi	r18, 0x1B	; 27
    f5bc:	28 9f       	mul	r18, r24
    f5be:	60 01       	movw	r12, r0
    f5c0:	29 9f       	mul	r18, r25
    f5c2:	d0 0c       	add	r13, r0
    f5c4:	11 24       	eor	r1, r1
    f5c6:	f6 01       	movw	r30, r12
    f5c8:	e8 51       	subi	r30, 0x18	; 24
    f5ca:	f2 4f       	sbci	r31, 0xF2	; 242
    f5cc:	4a e0       	ldi	r20, 0x0A	; 10
    f5ce:	50 e0       	ldi	r21, 0x00	; 0
    f5d0:	61 81       	ldd	r22, Z+1	; 0x01
    f5d2:	86 ec       	ldi	r24, 0xC6	; 198
    f5d4:	94 e1       	ldi	r25, 0x14	; 20
    f5d6:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    f5da:	86 ec       	ldi	r24, 0xC6	; 198
    f5dc:	94 e1       	ldi	r25, 0x14	; 20
    f5de:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
		for(int i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    f5e2:	e1 2c       	mov	r14, r1
    f5e4:	f1 2c       	mov	r15, r1
		{
			Serial.println();
    f5e6:	86 ec       	ldi	r24, 0xC6	; 198
    f5e8:	94 e1       	ldi	r25, 0x14	; 20
    f5ea:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
			_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    f5ee:	6d e0       	ldi	r22, 0x0D	; 13
    f5f0:	75 e2       	ldi	r23, 0x25	; 37
    f5f2:	86 ec       	ldi	r24, 0xC6	; 198
    f5f4:	94 e1       	ldi	r25, 0x14	; 20
    f5f6:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[plot_number-1].Euro_Valve_Group[i]);
    f5fa:	f7 01       	movw	r30, r14
    f5fc:	ec 0d       	add	r30, r12
    f5fe:	fd 1d       	adc	r31, r13
    f600:	e8 51       	subi	r30, 0x18	; 24
    f602:	f2 4f       	sbci	r31, 0xF2	; 242
    f604:	4a e0       	ldi	r20, 0x0A	; 10
    f606:	50 e0       	ldi	r21, 0x00	; 0
    f608:	65 81       	ldd	r22, Z+5	; 0x05
    f60a:	86 ec       	ldi	r24, 0xC6	; 198
    f60c:	94 e1       	ldi	r25, 0x14	; 20
    f60e:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
			_kSERIAL_MON_CLEAR();
    f612:	86 ec       	ldi	r24, 0xC6	; 198
    f614:	94 e1       	ldi	r25, 0x14	; 20
    f616:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("data saving in eeprom ");
		_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number.: ");
		_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[plot_number-1].Extra_Plot_Number);
		_kSERIAL_MON_CLEAR();
	
		for(int i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    f61a:	ff ef       	ldi	r31, 0xFF	; 255
    f61c:	ef 1a       	sub	r14, r31
    f61e:	ff 0a       	sbc	r15, r31
    f620:	85 e0       	ldi	r24, 0x05	; 5
    f622:	e8 16       	cp	r14, r24
    f624:	f1 04       	cpc	r15, r1
    f626:	f9 f6       	brne	.-66     	; 0xf5e6 <_Z21Exra_Plot_Data_EEPROMh+0xd4>
    f628:	86 cf       	rjmp	.-244    	; 0xf536 <_Z21Exra_Plot_Data_EEPROMh+0x24>
    f62a:	f6 01       	movw	r30, r12
    f62c:	61 91       	ld	r22, Z+
    f62e:	6f 01       	movw	r12, r30
    f630:	fa 82       	std	Y+2, r15	; 0x02
    f632:	e9 82       	std	Y+1, r14	; 0x01
    f634:	ce 01       	movw	r24, r28
    f636:	01 96       	adiw	r24, 0x01	; 1
    f638:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
    f63c:	ff ef       	ldi	r31, 0xFF	; 255
    f63e:	ef 1a       	sub	r14, r31
    f640:	ff 0a       	sbc	r15, r31
    f642:	e0 16       	cp	r14, r16
    f644:	f1 06       	cpc	r15, r17
    f646:	89 f7       	brne	.-30     	; 0xf62a <_Z21Exra_Plot_Data_EEPROMh+0x118>
		}
	}
	
	_kEEPROM_WRITE(_kEEPROM_EXTRA_PLOT_DATA(plot_number), _sExtra_Plot[plot_number-1]);
	return;
}
    f648:	0f 90       	pop	r0
    f64a:	0f 90       	pop	r0
    f64c:	df 91       	pop	r29
    f64e:	cf 91       	pop	r28
    f650:	1f 91       	pop	r17
    f652:	0f 91       	pop	r16
    f654:	ff 90       	pop	r15
    f656:	ef 90       	pop	r14
    f658:	df 90       	pop	r13
    f65a:	cf 90       	pop	r12
    f65c:	08 95       	ret

0000f65e <_Z11Read_EEPROMv>:
	
}


void Read_EEPROM(void)
{
    f65e:	4f 92       	push	r4
    f660:	5f 92       	push	r5
    f662:	6f 92       	push	r6
    f664:	7f 92       	push	r7
    f666:	8f 92       	push	r8
    f668:	9f 92       	push	r9
    f66a:	af 92       	push	r10
    f66c:	bf 92       	push	r11
    f66e:	cf 92       	push	r12
    f670:	df 92       	push	r13
    f672:	ef 92       	push	r14
    f674:	ff 92       	push	r15
    f676:	0f 93       	push	r16
    f678:	1f 93       	push	r17
    f67a:	cf 93       	push	r28
    f67c:	df 93       	push	r29
    f67e:	cd b7       	in	r28, 0x3d	; 61
    f680:	de b7       	in	r29, 0x3e	; 62
    f682:	e4 97       	sbiw	r28, 0x34	; 52
    f684:	0f b6       	in	r0, 0x3f	; 63
    f686:	f8 94       	cli
    f688:	de bf       	out	0x3e, r29	; 62
    f68a:	0f be       	out	0x3f, r0	; 63
    f68c:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_data[50],count=0,i=0,j=0;
	
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
    f68e:	64 ea       	ldi	r22, 0xA4	; 164
    f690:	73 e1       	ldi	r23, 0x13	; 19
    f692:	8f e0       	ldi	r24, 0x0F	; 15
    f694:	95 e0       	ldi	r25, 0x05	; 5
    f696:	01 d8       	rcall	.-4094   	; 0xe69a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.3>
    f698:	fe ec       	ldi	r31, 0xCE	; 206
    f69a:	ef 2e       	mov	r14, r31
    f69c:	f3 e1       	ldi	r31, 0x13	; 19
    f69e:	ff 2e       	mov	r15, r31
    f6a0:	67 01       	movw	r12, r14
    f6a2:	00 e0       	ldi	r16, 0x00	; 0
    f6a4:	10 e0       	ldi	r17, 0x00	; 0
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f6a6:	ce 01       	movw	r24, r28
    f6a8:	01 96       	adiw	r24, 0x01	; 1
    f6aa:	3c 01       	movw	r6, r24
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f6ac:	1a 83       	std	Y+2, r17	; 0x02
    f6ae:	09 83       	std	Y+1, r16	; 0x01
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f6b0:	c3 01       	movw	r24, r6
    f6b2:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f6b6:	f6 01       	movw	r30, r12
    f6b8:	81 93       	st	Z+, r24
    f6ba:	6f 01       	movw	r12, r30
    f6bc:	0f 5f       	subi	r16, 0xFF	; 255
    f6be:	1f 4f       	sbci	r17, 0xFF	; 255
    f6c0:	07 30       	cpi	r16, 0x07	; 7
    f6c2:	11 05       	cpc	r17, r1
    f6c4:	99 f7       	brne	.-26     	; 0xf6ac <_Z11Read_EEPROMv+0x4e>
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);
    f6c6:	f7 01       	movw	r30, r14
    f6c8:	61 91       	ld	r22, Z+
    f6ca:	7f 01       	movw	r14, r30
    f6cc:	86 ec       	ldi	r24, 0xC6	; 198
    f6ce:	94 e1       	ldi	r25, 0x14	; 20
    f6d0:	0e 94 d3 d2 	call	0x1a5a6	; 0x1a5a6 <_ZN14HardwareSerial5writeEh>
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
    f6d4:	f4 ed       	ldi	r31, 0xD4	; 212
    f6d6:	ef 16       	cp	r14, r31
    f6d8:	f3 e1       	ldi	r31, 0x13	; 19
    f6da:	ff 06       	cpc	r15, r31
    f6dc:	a1 f7       	brne	.-24     	; 0xf6c6 <_Z11Read_EEPROMv+0x68>
    f6de:	7e e4       	ldi	r23, 0x4E	; 78
    f6e0:	c7 2e       	mov	r12, r23
    f6e2:	7d e0       	ldi	r23, 0x0D	; 13
    f6e4:	d7 2e       	mov	r13, r23
    f6e6:	08 e0       	ldi	r16, 0x08	; 8
    f6e8:	10 e0       	ldi	r17, 0x00	; 0
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		memset(temp_data,0,sizeof(temp_data));
    f6ea:	e2 e3       	ldi	r30, 0x32	; 50
    f6ec:	5e 2e       	mov	r5, r30
    f6ee:	f3 01       	movw	r30, r6
    f6f0:	85 2d       	mov	r24, r5
    f6f2:	11 92       	st	Z+, r1
    f6f4:	8a 95       	dec	r24
    f6f6:	e9 f7       	brne	.-6      	; 0xf6f2 <_Z11Read_EEPROMv+0x94>
    f6f8:	48 01       	movw	r8, r16
    f6fa:	96 e0       	ldi	r25, 0x06	; 6
    f6fc:	89 0e       	add	r8, r25
    f6fe:	91 1c       	adc	r9, r1
    f700:	56 01       	movw	r10, r12
    f702:	78 01       	movw	r14, r16
    f704:	fc aa       	std	Y+52, r15	; 0x34
    f706:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f708:	ce 01       	movw	r24, r28
    f70a:	c3 96       	adiw	r24, 0x33	; 51
    f70c:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f710:	f5 01       	movw	r30, r10
    f712:	81 93       	st	Z+, r24
    f714:	5f 01       	movw	r10, r30
    f716:	ff ef       	ldi	r31, 0xFF	; 255
    f718:	ef 1a       	sub	r14, r31
    f71a:	ff 0a       	sbc	r15, r31
    f71c:	8e 14       	cp	r8, r14
    f71e:	9f 04       	cpc	r9, r15
    f720:	89 f7       	brne	.-30     	; 0xf704 <_Z11Read_EEPROMv+0xa6>
    f722:	08 5d       	subi	r16, 0xD8	; 216
    f724:	1f 4f       	sbci	r17, 0xFF	; 255
    f726:	86 e0       	ldi	r24, 0x06	; 6
    f728:	c8 0e       	add	r12, r24
    f72a:	d1 1c       	adc	r13, r1
	/************************* Read FC value ******************************/
	//_kEEPROM_READ(_kEEPROM_LOC_FC_VALUE,_sRuble_Parameters.FC_Value_Deafault);
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    f72c:	08 33       	cpi	r16, 0x38	; 56
    f72e:	92 e0       	ldi	r25, 0x02	; 2
    f730:	19 07       	cpc	r17, r25
    f732:	e9 f6       	brne	.-70     	; 0xf6ee <_Z11Read_EEPROMv+0x90>
    f734:	65 e1       	ldi	r22, 0x15	; 21
    f736:	c6 2e       	mov	r12, r22
    f738:	6c e0       	ldi	r22, 0x0C	; 12
    f73a:	d6 2e       	mov	r13, r22
    f73c:	0a ec       	ldi	r16, 0xCA	; 202
    f73e:	13 e0       	ldi	r17, 0x03	; 3
    f740:	48 01       	movw	r8, r16
    f742:	ed e0       	ldi	r30, 0x0D	; 13
    f744:	8e 0e       	add	r8, r30
    f746:	91 1c       	adc	r9, r1
    f748:	56 01       	movw	r10, r12
    f74a:	78 01       	movw	r14, r16
    f74c:	fc aa       	std	Y+52, r15	; 0x34
    f74e:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f750:	ce 01       	movw	r24, r28
    f752:	c3 96       	adiw	r24, 0x33	; 51
    f754:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f758:	f5 01       	movw	r30, r10
    f75a:	81 93       	st	Z+, r24
    f75c:	5f 01       	movw	r10, r30
    f75e:	ff ef       	ldi	r31, 0xFF	; 255
    f760:	ef 1a       	sub	r14, r31
    f762:	ff 0a       	sbc	r15, r31
    f764:	8e 14       	cp	r8, r14
    f766:	9f 04       	cpc	r9, r15
    f768:	89 f7       	brne	.-30     	; 0xf74c <_Z11Read_EEPROMv+0xee>
    f76a:	0c 5e       	subi	r16, 0xEC	; 236
    f76c:	1f 4f       	sbci	r17, 0xFF	; 255
    f76e:	8d e0       	ldi	r24, 0x0D	; 13
    f770:	c8 0e       	add	r12, r24
    f772:	d1 1c       	adc	r13, r1
		_kEEPROM_READ(_kEEPROM_LOC_LIRA_SENSOR_DATA(i),_sLira_Node_Param[i]);
	}
	
	/*************************** Update all euro valve data ********************************/
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f774:	02 34       	cpi	r16, 0x42	; 66
    f776:	94 e0       	ldi	r25, 0x04	; 4
    f778:	19 07       	cpc	r17, r25
    f77a:	11 f7       	brne	.-60     	; 0xf740 <_Z11Read_EEPROMv+0xe2>
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_sEuro_Valve_Param[i].Euro_Valve_Status = _kUNDEFINED;
    f77c:	14 e0       	ldi	r17, 0x04	; 4
    f77e:	10 93 1f 0c 	sts	0x0C1F, r17	; 0x800c1f <_sEuro_Valve_Param+0xa>
    f782:	10 93 2c 0c 	sts	0x0C2C, r17	; 0x800c2c <_sEuro_Valve_Param+0x17>
    f786:	10 93 39 0c 	sts	0x0C39, r17	; 0x800c39 <_sEuro_Valve_Param+0x24>
    f78a:	10 93 46 0c 	sts	0x0C46, r17	; 0x800c46 <_sEuro_Valve_Param+0x31>
    f78e:	10 93 53 0c 	sts	0x0C53, r17	; 0x800c53 <_sEuro_Valve_Param+0x3e>
    f792:	10 93 60 0c 	sts	0x0C60, r17	; 0x800c60 <_sEuro_Valve_Param+0x4b>
	/******************************************* update hardware version **************************/
	//_kEEPROM_READ(_kEEPROM_LOC_HARDWARE_VESRION,_sRuble_Parameters.Hardware_Version);
	
	
	/******************************************* update operation mode **************************/
	_kEEPROM_READ(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f796:	65 ed       	ldi	r22, 0xD5	; 213
    f798:	73 e1       	ldi	r23, 0x13	; 19
    f79a:	88 ed       	ldi	r24, 0xD8	; 216
    f79c:	94 e0       	ldi	r25, 0x04	; 4
    f79e:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
	
	switch(_sRuble_Parameters.Operation_Mode)
    f7a2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f7a6:	83 30       	cpi	r24, 0x03	; 3
    f7a8:	99 f0       	breq	.+38     	; 0xf7d0 <_Z11Read_EEPROMv+0x172>
    f7aa:	28 f4       	brcc	.+10     	; 0xf7b6 <_Z11Read_EEPROMv+0x158>
    f7ac:	81 30       	cpi	r24, 0x01	; 1
    f7ae:	39 f0       	breq	.+14     	; 0xf7be <_Z11Read_EEPROMv+0x160>
    f7b0:	82 30       	cpi	r24, 0x02	; 2
    f7b2:	c9 f1       	breq	.+114    	; 0xf826 <_Z11Read_EEPROMv+0x1c8>
    f7b4:	41 c0       	rjmp	.+130    	; 0xf838 <_Z11Read_EEPROMv+0x1da>
    f7b6:	84 30       	cpi	r24, 0x04	; 4
    f7b8:	b1 f1       	breq	.+108    	; 0xf826 <_Z11Read_EEPROMv+0x1c8>
    f7ba:	85 30       	cpi	r24, 0x05	; 5
    f7bc:	e9 f5       	brne	.+122    	; 0xf838 <_Z11Read_EEPROMv+0x1da>
	{
		case _eOPER_MOD_AUTO:
		case _eOPER_MOD_SCHEDULER:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f7be:	85 e0       	ldi	r24, 0x05	; 5
    f7c0:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f7c4:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f7c8:	8e 7f       	andi	r24, 0xFE	; 254
    f7ca:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f7ce:	37 c0       	rjmp	.+110    	; 0xf83e <_Z11Read_EEPROMv+0x1e0>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
		}break;
		
		case _eOPER_MOD_TIMER:
		{
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f7d0:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f7d4:	8e 7f       	andi	r24, 0xFE	; 254
    f7d6:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f7da:	10 93 d6 13 	sts	0x13D6, r17	; 0x8013d6 <_sRuble_Parameters+0x28>
			
			_kEEPROM_READ(_kTIMER_IRRIGATING_PLOT,_sRuble_Parameters.Temp_Irrigating_Plot);
    f7de:	65 e6       	ldi	r22, 0x65	; 101
    f7e0:	74 e1       	ldi	r23, 0x14	; 20
    f7e2:	86 e9       	ldi	r24, 0x96	; 150
    f7e4:	9c e0       	ldi	r25, 0x0C	; 12
    f7e6:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
    f7ea:	88 e9       	ldi	r24, 0x98	; 152
    f7ec:	9c e0       	ldi	r25, 0x0C	; 12
    f7ee:	9c ab       	std	Y+52, r25	; 0x34
    f7f0:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f7f2:	ce 01       	movw	r24, r28
    f7f4:	c3 96       	adiw	r24, 0x33	; 51
    f7f6:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f7fa:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
    f7fe:	89 e9       	ldi	r24, 0x99	; 153
    f800:	9c e0       	ldi	r25, 0x0C	; 12
    f802:	9c ab       	std	Y+52, r25	; 0x34
    f804:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f806:	ce 01       	movw	r24, r28
    f808:	c3 96       	adiw	r24, 0x33	; 51
    f80a:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f80e:	80 93 c5 13 	sts	0x13C5, r24	; 0x8013c5 <_sRuble_Parameters+0x17>
			_kEEPROM_READ(_kPUMP_REMAINING_TIME,_sRuble_Parameters.Pump_Run_Timer);
			//_sRuble_Parameters.Temp_Irrigating_Plot = _sRuble_Parameters.Irrigating_Plot;
			_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    f812:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f816:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f81a:	88 60       	ori	r24, 0x08	; 8
    f81c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f820:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		}break;
    f824:	15 c0       	rjmp	.+42     	; 0xf850 <_Z11Read_EEPROMv+0x1f2>
		
		case _eOPER_MOD_MANUAL:
		case _eOPER_MOD_DATALOG:
		{
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f826:	84 e0       	ldi	r24, 0x04	; 4
    f828:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			_sRuble_Parameters.lndications   |= _eRUBL_INDI_AUTO_MANUAL;
    f82c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f830:	81 60       	ori	r24, 0x01	; 1
    f832:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
		}break;
    f836:	0c c0       	rjmp	.+24     	; 0xf850 <_Z11Read_EEPROMv+0x1f2>
		default:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f838:	85 e0       	ldi	r24, 0x05	; 5
    f83a:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f83e:	84 e0       	ldi	r24, 0x04	; 4
    f840:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f844:	65 ed       	ldi	r22, 0xD5	; 213
    f846:	73 e1       	ldi	r23, 0x13	; 19
    f848:	88 ed       	ldi	r24, 0xD8	; 216
    f84a:	94 e0       	ldi	r25, 0x04	; 4
    f84c:	0e 94 b3 73 	call	0xe766	; 0xe766 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.2>
		}break;
	}
	
	/******************************************* update ruble sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_SIM_NUM,_sNetwork_and_Usr_Info.Ruble_SIM_No);
    f850:	69 eb       	ldi	r22, 0xB9	; 185
    f852:	7d e0       	ldi	r23, 0x0D	; 13
    f854:	8a ed       	ldi	r24, 0xDA	; 218
    f856:	94 e0       	ldi	r25, 0x04	; 4
    f858:	0e 94 80 73 	call	0xe700	; 0xe700 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.14>
	
	
	/******************************************* update user sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_USER_SIM_NUM,_sNetwork_and_Usr_Info.User_Sim_No);
    f85c:	64 ec       	ldi	r22, 0xC4	; 196
    f85e:	7d e0       	ldi	r23, 0x0D	; 13
    f860:	87 ee       	ldi	r24, 0xE7	; 231
    f862:	94 e0       	ldi	r25, 0x04	; 4
    f864:	0e 94 80 73 	call	0xe700	; 0xe700 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.14>
	/***************************************** Update coefficient 3 *************************************/
	//_kEEPROM_READ(_kEEPROM_LOC_COEFF_3,_sRuble_Parameters.Coeff_3);
	
	
	/***************************************** update the sms alert ***********************************/
	_kEEPROM_READ(_kEEPROM_SMS_ALERT_START,_sRuble_Parameters.SMS_Alert_Start);
    f868:	69 e6       	ldi	r22, 0x69	; 105
    f86a:	74 e1       	ldi	r23, 0x14	; 20
    f86c:	88 e1       	ldi	r24, 0x18	; 24
    f86e:	95 e0       	ldi	r25, 0x05	; 5
    f870:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
	
	
	/**************************************** update the kill switch **********************************/
	_kEEPROM_READ(_kEEPROM_KILL_SWITCH,_sRuble_Parameters.Kill_Switch);
    f874:	61 e7       	ldi	r22, 0x71	; 113
    f876:	74 e1       	ldi	r23, 0x14	; 20
    f878:	89 e1       	ldi	r24, 0x19	; 25
    f87a:	95 e0       	ldi	r25, 0x05	; 5
    f87c:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
    f880:	5e e1       	ldi	r21, 0x1E	; 30
    f882:	e5 2e       	mov	r14, r21
    f884:	59 e0       	ldi	r21, 0x09	; 9
    f886:	f5 2e       	mov	r15, r21
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f888:	0a e1       	ldi	r16, 0x1A	; 26
    f88a:	15 e0       	ldi	r17, 0x05	; 5
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f88c:	1c ab       	std	Y+52, r17	; 0x34
    f88e:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f890:	ce 01       	movw	r24, r28
    f892:	c3 96       	adiw	r24, 0x33	; 51
    f894:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f898:	f7 01       	movw	r30, r14
    f89a:	81 93       	st	Z+, r24
    f89c:	7f 01       	movw	r14, r30
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f89e:	0f 5f       	subi	r16, 0xFF	; 255
    f8a0:	1f 4f       	sbci	r17, 0xFF	; 255
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f8a2:	00 3f       	cpi	r16, 0xF0	; 240
    f8a4:	f7 e0       	ldi	r31, 0x07	; 7
    f8a6:	1f 07       	cpc	r17, r31
    f8a8:	89 f7       	brne	.-30     	; 0xf88c <_Z11Read_EEPROMv+0x22e>
	
	/*************************************** read schedule data ******************************************/
	_kEEPROM_READ(_kEEPROM_SCHEDULE_DATA, _sSchedules);
	
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
    f8aa:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    f8ae:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sSchedules.Fertilizer_On_Scheduler_Status = _kRESET;
    f8b2:	10 92 75 0b 	sts	0x0B75, r1	; 0x800b75 <_sSchedules+0x257>
	_sSchedules.New_Schedules_Occur = _kRESET;
    f8b6:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    f8ba:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
    f8be:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    f8c2:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
	_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    f8c6:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
	
	for(unsigned char tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		_sSchedules.Running_Tank[tank_number] = _kRESET;
    f8ca:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    f8ce:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    f8d2:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
	
	
	
	
	
	if(_sSchedules.Schedule_Enable)   /* schedules are enable then change the mode from auto to scheduler */
    f8d6:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
    f8da:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f8de:	99 23       	and	r25, r25
    f8e0:	21 f1       	breq	.+72     	; 0xf92a <_Z11Read_EEPROMv+0x2cc>
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f8e2:	81 30       	cpi	r24, 0x01	; 1
    f8e4:	11 f0       	breq	.+4      	; 0xf8ea <_Z11Read_EEPROMv+0x28c>
    f8e6:	85 30       	cpi	r24, 0x05	; 5
    f8e8:	89 f4       	brne	.+34     	; 0xf90c <_Z11Read_EEPROMv+0x2ae>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f8ea:	85 e0       	ldi	r24, 0x05	; 5
    f8ec:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f8f0:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f8f4:	8e 7f       	andi	r24, 0xFE	; 254
    f8f6:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f8fa:	84 e0       	ldi	r24, 0x04	; 4
    f8fc:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
				_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f900:	65 ed       	ldi	r22, 0xD5	; 213
    f902:	73 e1       	ldi	r23, 0x13	; 19
    f904:	88 ed       	ldi	r24, 0xD8	; 216
    f906:	94 e0       	ldi	r25, 0x04	; 4
    f908:	0e 94 b3 73 	call	0xe766	; 0xe766 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.2>
    f90c:	08 ee       	ldi	r16, 0xE8	; 232
    f90e:	1d e0       	ldi	r17, 0x0D	; 13
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f910:	91 ef       	ldi	r25, 0xF1	; 241
    f912:	e9 2e       	mov	r14, r25
    f914:	99 e0       	ldi	r25, 0x09	; 9
    f916:	f9 2e       	mov	r15, r25
    f918:	2e ef       	ldi	r18, 0xFE	; 254
    f91a:	72 2e       	mov	r7, r18
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
				_kSERIAL_MON_CLEAR();
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f91c:	66 24       	eor	r6, r6
    f91e:	63 94       	inc	r6
			
			default:
			{
				if(i < 2 || i > 9)
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    f920:	35 e0       	ldi	r19, 0x05	; 5
    f922:	53 2e       	mov	r5, r19
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    f924:	42 e0       	ldi	r20, 0x02	; 2
    f926:	44 2e       	mov	r4, r20
    f928:	14 c0       	rjmp	.+40     	; 0xf952 <_Z11Read_EEPROMv+0x2f4>
			}break;
		}
	}
	else    /* schedules are not enable then change the mode from scheduler to auto */
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f92a:	81 30       	cpi	r24, 0x01	; 1
    f92c:	11 f0       	breq	.+4      	; 0xf932 <_Z11Read_EEPROMv+0x2d4>
    f92e:	85 30       	cpi	r24, 0x05	; 5
    f930:	69 f7       	brne	.-38     	; 0xf90c <_Z11Read_EEPROMv+0x2ae>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Manual_Mode_Wait = 0;
    f932:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
    f936:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;   // 5/5
    f93a:	85 e0       	ldi	r24, 0x05	; 5
    f93c:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f940:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f944:	8e 7f       	andi	r24, 0xFE	; 254
    f946:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f94a:	84 e0       	ldi	r24, 0x04	; 4
    f94c:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			}break;
    f950:	dd cf       	rjmp	.-70     	; 0xf90c <_Z11Read_EEPROMv+0x2ae>
    f952:	47 01       	movw	r8, r14
    f954:	8b e1       	ldi	r24, 0x1B	; 27
    f956:	88 0e       	add	r8, r24
    f958:	91 1c       	adc	r9, r1
    f95a:	58 01       	movw	r10, r16
    f95c:	67 01       	movw	r12, r14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f95e:	dc aa       	std	Y+52, r13	; 0x34
    f960:	cb aa       	std	Y+51, r12	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f962:	ce 01       	movw	r24, r28
    f964:	c3 96       	adiw	r24, 0x33	; 51
    f966:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f96a:	f5 01       	movw	r30, r10
    f96c:	81 93       	st	Z+, r24
    f96e:	5f 01       	movw	r10, r30
    f970:	ff ef       	ldi	r31, 0xFF	; 255
    f972:	cf 1a       	sub	r12, r31
    f974:	df 0a       	sbc	r13, r31
    f976:	8c 14       	cp	r8, r12
    f978:	9d 04       	cpc	r9, r13
    f97a:	89 f7       	brne	.-30     	; 0xf95e <_Z11Read_EEPROMv+0x300>
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
	{
		_kEEPROM_READ(_kEEPROM_EXTRA_PLOT_DATA(i+1),_sExtra_Plot[i]);
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f97c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f980:	81 30       	cpi	r24, 0x01	; 1
    f982:	91 f4       	brne	.+36     	; 0xf9a8 <_Z11Read_EEPROMv+0x34a>
		{
			_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number : ");
    f984:	69 e6       	ldi	r22, 0x69	; 105
    f986:	76 e2       	ldi	r23, 0x26	; 38
    f988:	86 ec       	ldi	r24, 0xC6	; 198
    f98a:	94 e1       	ldi	r25, 0x14	; 20
    f98c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Extra_Plot_Number);
    f990:	4a e0       	ldi	r20, 0x0A	; 10
    f992:	50 e0       	ldi	r21, 0x00	; 0
    f994:	f8 01       	movw	r30, r16
    f996:	61 81       	ldd	r22, Z+1	; 0x01
    f998:	86 ec       	ldi	r24, 0xC6	; 198
    f99a:	94 e1       	ldi	r25, 0x14	; 20
    f99c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
			_kSERIAL_MON_CLEAR();
    f9a0:	86 ec       	ldi	r24, 0xC6	; 198
    f9a2:	94 e1       	ldi	r25, 0x14	; 20
    f9a4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		
		if(_sExtra_Plot[i].Run_Timer)    /* check if timer was set for the extra plot */
    f9a8:	f8 01       	movw	r30, r16
    f9aa:	83 81       	ldd	r24, Z+3	; 0x03
    f9ac:	94 81       	ldd	r25, Z+4	; 0x04
    f9ae:	89 2b       	or	r24, r25
    f9b0:	c9 f0       	breq	.+50     	; 0xf9e4 <_Z11Read_EEPROMv+0x386>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f9b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f9b6:	81 30       	cpi	r24, 0x01	; 1
    f9b8:	99 f4       	brne	.+38     	; 0xf9e0 <_Z11Read_EEPROMv+0x382>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
    f9ba:	61 e5       	ldi	r22, 0x51	; 81
    f9bc:	76 e2       	ldi	r23, 0x26	; 38
    f9be:	86 ec       	ldi	r24, 0xC6	; 198
    f9c0:	94 e1       	ldi	r25, 0x14	; 20
    f9c2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
    f9c6:	f8 01       	movw	r30, r16
    f9c8:	63 81       	ldd	r22, Z+3	; 0x03
    f9ca:	74 81       	ldd	r23, Z+4	; 0x04
    f9cc:	4a e0       	ldi	r20, 0x0A	; 10
    f9ce:	50 e0       	ldi	r21, 0x00	; 0
    f9d0:	86 ec       	ldi	r24, 0xC6	; 198
    f9d2:	94 e1       	ldi	r25, 0x14	; 20
    f9d4:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
				_kSERIAL_MON_CLEAR();
    f9d8:	86 ec       	ldi	r24, 0xC6	; 198
    f9da:	94 e1       	ldi	r25, 0x14	; 20
    f9dc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f9e0:	f8 01       	movw	r30, r16
    f9e2:	63 86       	std	Z+11, r6	; 0x0b
		}
		
		if(!_sExtra_Plot[i].Run_Timer &&  !_sExtra_Plot[i].One_Touch)   /* if user not took any action earlier */
    f9e4:	f8 01       	movw	r30, r16
    f9e6:	83 81       	ldd	r24, Z+3	; 0x03
    f9e8:	94 81       	ldd	r25, Z+4	; 0x04
    f9ea:	89 2b       	or	r24, r25
    f9ec:	a1 f4       	brne	.+40     	; 0xfa16 <_Z11Read_EEPROMv+0x3b8>
    f9ee:	82 85       	ldd	r24, Z+10	; 0x0a
    f9f0:	81 11       	cpse	r24, r1
    f9f2:	11 c0       	rjmp	.+34     	; 0xfa16 <_Z11Read_EEPROMv+0x3b8>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f9f4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f9f8:	81 30       	cpi	r24, 0x01	; 1
    f9fa:	51 f4       	brne	.+20     	; 0xfa10 <_Z11Read_EEPROMv+0x3b2>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra not Plot Run Timer : ");
    f9fc:	65 e3       	ldi	r22, 0x35	; 53
    f9fe:	76 e2       	ldi	r23, 0x26	; 38
    fa00:	86 ec       	ldi	r24, 0xC6	; 198
    fa02:	94 e1       	ldi	r25, 0x14	; 20
    fa04:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    fa08:	86 ec       	ldi	r24, 0xC6	; 198
    fa0a:	94 e1       	ldi	r25, 0x14	; 20
    fa0c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    fa10:	f8 01       	movw	r30, r16
    fa12:	62 82       	std	Z+2, r6	; 0x02
			_sExtra_Plot[i].Set_Through_Timer = _kRESET;
    fa14:	13 86       	std	Z+11, r1	; 0x0b
		}
		
		_sExtra_Plot[i].On_Off_Status = _kRESET;   /* initially off the status */
    fa16:	f8 01       	movw	r30, r16
    fa18:	10 82       	st	Z, r1
		
		switch(_sExtra_Plot[i].Status)
    fa1a:	82 81       	ldd	r24, Z+2	; 0x02
    fa1c:	82 30       	cpi	r24, 0x02	; 2
    fa1e:	49 f0       	breq	.+18     	; 0xfa32 <_Z11Read_EEPROMv+0x3d4>
    fa20:	83 30       	cpi	r24, 0x03	; 3
    fa22:	11 f4       	brne	.+4      	; 0xfa28 <_Z11Read_EEPROMv+0x3ca>
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    fa24:	42 82       	std	Z+2, r4	; 0x02
			}break;
    fa26:	05 c0       	rjmp	.+10     	; 0xfa32 <_Z11Read_EEPROMv+0x3d4>
			
			default:
			{
				if(i < 2 || i > 9)
    fa28:	f7 e0       	ldi	r31, 0x07	; 7
    fa2a:	f7 15       	cp	r31, r7
    fa2c:	28 f4       	brcc	.+10     	; 0xfa38 <_Z11Read_EEPROMv+0x3da>
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    fa2e:	f8 01       	movw	r30, r16
    fa30:	52 82       	std	Z+2, r5	; 0x02
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fa32:	c1 2c       	mov	r12, r1
    fa34:	d1 2c       	mov	r13, r1
    fa36:	0a c0       	rjmp	.+20     	; 0xfa4c <_Z11Read_EEPROMv+0x3ee>
					
				}
				else
				{
					_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    fa38:	f8 01       	movw	r30, r16
    fa3a:	62 82       	std	Z+2, r6	; 0x02
    fa3c:	fa cf       	rjmp	.-12     	; 0xfa32 <_Z11Read_EEPROMv+0x3d4>
				}
				//_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
			}break;
		}
		
		for(int k=0;k<_kMAX_VALVE_FOR_1PLOT;k++)
    fa3e:	ff ef       	ldi	r31, 0xFF	; 255
    fa40:	cf 1a       	sub	r12, r31
    fa42:	df 0a       	sbc	r13, r31
    fa44:	85 e0       	ldi	r24, 0x05	; 5
    fa46:	c8 16       	cp	r12, r24
    fa48:	d1 04       	cpc	r13, r1
    fa4a:	e9 f0       	breq	.+58     	; 0xfa86 <_Z11Read_EEPROMv+0x428>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fa4c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fa50:	81 30       	cpi	r24, 0x01	; 1
    fa52:	a9 f7       	brne	.-22     	; 0xfa3e <_Z11Read_EEPROMv+0x3e0>
			{
				Serial.println();
    fa54:	86 ec       	ldi	r24, 0xC6	; 198
    fa56:	94 e1       	ldi	r25, 0x14	; 20
    fa58:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
				_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    fa5c:	69 e2       	ldi	r22, 0x29	; 41
    fa5e:	76 e2       	ldi	r23, 0x26	; 38
    fa60:	86 ec       	ldi	r24, 0xC6	; 198
    fa62:	94 e1       	ldi	r25, 0x14	; 20
    fa64:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[i].Euro_Valve_Group[k]);
    fa68:	4a e0       	ldi	r20, 0x0A	; 10
    fa6a:	50 e0       	ldi	r21, 0x00	; 0
    fa6c:	f8 01       	movw	r30, r16
    fa6e:	ec 0d       	add	r30, r12
    fa70:	fd 1d       	adc	r31, r13
    fa72:	65 81       	ldd	r22, Z+5	; 0x05
    fa74:	86 ec       	ldi	r24, 0xC6	; 198
    fa76:	94 e1       	ldi	r25, 0x14	; 20
    fa78:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    fa7c:	86 ec       	ldi	r24, 0xC6	; 198
    fa7e:	94 e1       	ldi	r25, 0x14	; 20
    fa80:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    fa84:	dc cf       	rjmp	.-72     	; 0xfa3e <_Z11Read_EEPROMv+0x3e0>
    fa86:	05 5e       	subi	r16, 0xE5	; 229
    fa88:	1f 4f       	sbci	r17, 0xFF	; 255
    fa8a:	73 94       	inc	r7
    fa8c:	9e e1       	ldi	r25, 0x1E	; 30
    fa8e:	e9 0e       	add	r14, r25
    fa90:	f1 1c       	adc	r15, r1
	}
	
	
	/*********************************** update extra plot ***************************/
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    fa92:	e5 e9       	ldi	r30, 0x95	; 149
    fa94:	ee 16       	cp	r14, r30
    fa96:	eb e0       	ldi	r30, 0x0B	; 11
    fa98:	fe 06       	cpc	r15, r30
    fa9a:	09 f0       	breq	.+2      	; 0xfa9e <_Z11Read_EEPROMv+0x440>
    fa9c:	5a cf       	rjmp	.-332    	; 0xf952 <_Z11Read_EEPROMv+0x2f4>
		}
	}
	
	
	
	_kEEPROM_READ(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    fa9e:	69 e7       	ldi	r22, 0x79	; 121
    faa0:	74 e1       	ldi	r23, 0x14	; 20
    faa2:	81 ea       	ldi	r24, 0xA1	; 161
    faa4:	9c e0       	ldi	r25, 0x0C	; 12
    faa6:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    faaa:	6b e7       	ldi	r22, 0x7B	; 123
    faac:	74 e1       	ldi	r23, 0x14	; 20
    faae:	88 ea       	ldi	r24, 0xA8	; 168
    fab0:	9c e0       	ldi	r25, 0x0C	; 12
    fab2:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    fab6:	6c e7       	ldi	r22, 0x7C	; 124
    fab8:	74 e1       	ldi	r23, 0x14	; 20
    faba:	8d ea       	ldi	r24, 0xAD	; 173
    fabc:	9c e0       	ldi	r25, 0x0C	; 12
    fabe:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
    fac2:	83 e9       	ldi	r24, 0x93	; 147
    fac4:	e8 2e       	mov	r14, r24
    fac6:	84 e1       	ldi	r24, 0x14	; 20
    fac8:	f8 2e       	mov	r15, r24
    faca:	08 e8       	ldi	r16, 0x88	; 136
    facc:	1e e0       	ldi	r17, 0x0E	; 14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    face:	1c ab       	std	Y+52, r17	; 0x34
    fad0:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    fad2:	ce 01       	movw	r24, r28
    fad4:	c3 96       	adiw	r24, 0x33	; 51
    fad6:	0e 94 30 73 	call	0xe660	; 0xe660 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fada:	f7 01       	movw	r30, r14
    fadc:	81 93       	st	Z+, r24
    fade:	7f 01       	movw	r14, r30
    fae0:	0f 5f       	subi	r16, 0xFF	; 255
    fae2:	1f 4f       	sbci	r17, 0xFF	; 255
    fae4:	0d 38       	cpi	r16, 0x8D	; 141
    fae6:	fe e0       	ldi	r31, 0x0E	; 14
    fae8:	1f 07       	cpc	r17, r31
    faea:	89 f7       	brne	.-30     	; 0xface <_Z11Read_EEPROMv+0x470>
	
	_kEEPROM_READ(_kHANDLE_WIRELESS_STATUS_LIST,_sRuble_Parameters.Wireless_Pump_Handle_List);
	
	_kEEPROM_READ(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    faec:	68 e9       	ldi	r22, 0x98	; 152
    faee:	74 e1       	ldi	r23, 0x14	; 20
    faf0:	8b ea       	ldi	r24, 0xAB	; 171
    faf2:	9e e0       	ldi	r25, 0x0E	; 14
    faf4:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kRESET || _sRuble_Parameters.Pump_Selected_For_Irrigation > _kMAX_WIRELESS_PUMP+1)
    faf8:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    fafc:	81 50       	subi	r24, 0x01	; 1
    fafe:	84 30       	cpi	r24, 0x04	; 4
    fb00:	48 f0       	brcs	.+18     	; 0xfb14 <_Z11Read_EEPROMv+0x4b6>
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = _kWIRED_PUMP_NUMBER;
    fb02:	81 e0       	ldi	r24, 0x01	; 1
    fb04:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
		_kEEPROM_WRITE(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    fb08:	68 e9       	ldi	r22, 0x98	; 152
    fb0a:	74 e1       	ldi	r23, 0x14	; 20
    fb0c:	8b ea       	ldi	r24, 0xAB	; 171
    fb0e:	9e e0       	ldi	r25, 0x0E	; 14
    fb10:	0e 94 b3 73 	call	0xe766	; 0xe766 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.2>
	}
	
	_kEEPROM_READ(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    fb14:	6b e9       	ldi	r22, 0x9B	; 155
    fb16:	74 e1       	ldi	r23, 0x14	; 20
    fb18:	8d ea       	ldi	r24, 0xAD	; 173
    fb1a:	9e e0       	ldi	r25, 0x0E	; 14
    fb1c:	0e 94 4d 73 	call	0xe69a	; 0xe69a <_ZN11EEPROMClass3getIfEERT_iS2_.isra.3>
	
	for(unsigned char wl_pump_num=0; wl_pump_num < _kMAX_WIRELESS_PUMP; wl_pump_num++)
	{
		_kEEPROM_READ(_kWIRELESS_PUMP_DATA_SAVE(wl_pump_num), _sWireless_Pump_Param[wl_pump_num]);
    fb20:	64 ef       	ldi	r22, 0xF4	; 244
    fb22:	7b e0       	ldi	r23, 0x0B	; 11
    fb24:	8e ea       	ldi	r24, 0xAE	; 174
    fb26:	9c e0       	ldi	r25, 0x0C	; 12
    fb28:	0e 94 80 73 	call	0xe700	; 0xe700 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.14>
    fb2c:	6f ef       	ldi	r22, 0xFF	; 255
    fb2e:	7b e0       	ldi	r23, 0x0B	; 11
    fb30:	82 ec       	ldi	r24, 0xC2	; 194
    fb32:	9c e0       	ldi	r25, 0x0C	; 12
    fb34:	0e 94 80 73 	call	0xe700	; 0xe700 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.14>
    fb38:	6a e0       	ldi	r22, 0x0A	; 10
    fb3a:	7c e0       	ldi	r23, 0x0C	; 12
    fb3c:	86 ed       	ldi	r24, 0xD6	; 214
    fb3e:	9c e0       	ldi	r25, 0x0C	; 12
    fb40:	0e 94 80 73 	call	0xe700	; 0xe700 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.14>
	}
	
	_kEEPROM_READ(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    fb44:	6b ee       	ldi	r22, 0xEB	; 235
    fb46:	7c e0       	ldi	r23, 0x0C	; 12
    fb48:	87 eb       	ldi	r24, 0xB7	; 183
    fb4a:	9e e0       	ldi	r25, 0x0E	; 14
    fb4c:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
	
}
    fb50:	e4 96       	adiw	r28, 0x34	; 52
    fb52:	0f b6       	in	r0, 0x3f	; 63
    fb54:	f8 94       	cli
    fb56:	de bf       	out	0x3e, r29	; 62
    fb58:	0f be       	out	0x3f, r0	; 63
    fb5a:	cd bf       	out	0x3d, r28	; 61
    fb5c:	df 91       	pop	r29
    fb5e:	cf 91       	pop	r28
    fb60:	1f 91       	pop	r17
    fb62:	0f 91       	pop	r16
    fb64:	ff 90       	pop	r15
    fb66:	ef 90       	pop	r14
    fb68:	df 90       	pop	r13
    fb6a:	cf 90       	pop	r12
    fb6c:	bf 90       	pop	r11
    fb6e:	af 90       	pop	r10
    fb70:	9f 90       	pop	r9
    fb72:	8f 90       	pop	r8
    fb74:	7f 90       	pop	r7
    fb76:	6f 90       	pop	r6
    fb78:	5f 90       	pop	r5
    fb7a:	4f 90       	pop	r4
    fb7c:	08 95       	ret

0000fb7e <_Z20Param_Initializationv>:
volatile unsigned int Interrupt_Time_Out;
volatile unsigned char Reading_Time;


void Param_Initialization(void)
{
    fb7e:	cf 92       	push	r12
    fb80:	df 92       	push	r13
    fb82:	ef 92       	push	r14
    fb84:	ff 92       	push	r15
    fb86:	0f 93       	push	r16
    fb88:	1f 93       	push	r17
    fb8a:	cf 93       	push	r28
    fb8c:	df 93       	push	r29
    fb8e:	00 d0       	rcall	.+0      	; 0xfb90 <_Z20Param_Initializationv+0x12>
    fb90:	cd b7       	in	r28, 0x3d	; 61
    fb92:	de b7       	in	r29, 0x3e	; 62
	char temp = 0;
    fb94:	1b 82       	std	Y+3, r1	; 0x03
	unsigned int i;
	
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
    fb96:	62 e8       	ldi	r22, 0x82	; 130
    fb98:	74 e0       	ldi	r23, 0x04	; 4
    fb9a:	8e ec       	ldi	r24, 0xCE	; 206
    fb9c:	93 e1       	ldi	r25, 0x13	; 19
    fb9e:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
    fba2:	8e ec       	ldi	r24, 0xCE	; 206
    fba4:	e8 2e       	mov	r14, r24
    fba6:	83 e1       	ldi	r24, 0x13	; 19
    fba8:	f8 2e       	mov	r15, r24
    fbaa:	67 01       	movw	r12, r14
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fbac:	00 e0       	ldi	r16, 0x00	; 0
    fbae:	10 e0       	ldi	r17, 0x00	; 0
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fbb0:	f6 01       	movw	r30, r12
    fbb2:	61 91       	ld	r22, Z+
    fbb4:	6f 01       	movw	r12, r30
    fbb6:	1a 83       	std	Y+2, r17	; 0x02
    fbb8:	09 83       	std	Y+1, r16	; 0x01
    fbba:	ce 01       	movw	r24, r28
    fbbc:	01 96       	adiw	r24, 0x01	; 1
    fbbe:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    fbc2:	0f 5f       	subi	r16, 0xFF	; 255
    fbc4:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fbc6:	07 30       	cpi	r16, 0x07	; 7
    fbc8:	11 05       	cpc	r17, r1
    fbca:	91 f7       	brne	.-28     	; 0xfbb0 <_Z20Param_Initializationv+0x32>
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
    fbcc:	86 ec       	ldi	r24, 0xC6	; 198
    fbce:	94 e1       	ldi	r25, 0x14	; 20
    fbd0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	
	_kSERIAL_MON_PRINT_NUM();
    fbd4:	86 ec       	ldi	r24, 0xC6	; 198
    fbd6:	94 e1       	ldi	r25, 0x14	; 20
    fbd8:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
    fbdc:	f7 01       	movw	r30, r14
    fbde:	61 91       	ld	r22, Z+
    fbe0:	7f 01       	movw	r14, r30
    fbe2:	86 ec       	ldi	r24, 0xC6	; 198
    fbe4:	94 e1       	ldi	r25, 0x14	; 20
    fbe6:	0e 94 d3 d2 	call	0x1a5a6	; 0x1a5a6 <_ZN14HardwareSerial5writeEh>
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
	
	_kSERIAL_MON_PRINT_NUM();
	for(i=0;i<6;i++)
    fbea:	f4 ed       	ldi	r31, 0xD4	; 212
    fbec:	ef 16       	cp	r14, r31
    fbee:	f3 e1       	ldi	r31, 0x13	; 19
    fbf0:	ff 06       	cpc	r15, r31
    fbf2:	a1 f7       	brne	.-24     	; 0xfbdc <_Z20Param_Initializationv+0x5e>
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
	}
	_kSERIAL_MON_PRINT_NUM();
    fbf4:	86 ec       	ldi	r24, 0xC6	; 198
    fbf6:	94 e1       	ldi	r25, 0x14	; 20
    fbf8:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
	
	Store_MQTT_Pub_Topics();                        /* store all publish topics */
    fbfc:	26 d1       	rcall	.+588    	; 0xfe4a <_Z21Store_MQTT_Pub_Topicsv>
	
	Store_MQTT_Sub_Topics();                        /* store all subscribe topics */
    fbfe:	26 d1       	rcall	.+588    	; 0xfe4c <_Z21Store_MQTT_Sub_Topicsv>
    fc00:	0e 94 20 60 	call	0xc040	; 0xc040 <_Z13Store_All_APNv>
	
	Store_All_APN();                                /* store all operating network's APN */
    fc04:	be 01       	movw	r22, r28
	
	
	_kEEPROM_READ(_kEEPROM_LOC_READ_REGISTRATION,temp);                     /* read that ruble is registered or not */
    fc06:	6d 5f       	subi	r22, 0xFD	; 253
    fc08:	7f 4f       	sbci	r23, 0xFF	; 255
    fc0a:	84 ef       	ldi	r24, 0xF4	; 244
    fc0c:	94 e0       	ldi	r25, 0x04	; 4
    fc0e:	0e 94 35 73 	call	0xe66a	; 0xe66a <_ZN11EEPROMClass3getIcEERT_iS2_.isra.1>
    fc12:	9b 81       	ldd	r25, Y+3	; 0x03

	if(temp == _kCHECK_REGISTRATION)  /* if _kEEPROM_LOC_READ_REGISTRATION location filled with 0x09 it means that ruble controller is already register */
    fc14:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fc18:	91 30       	cpi	r25, 0x01	; 1
    fc1a:	79 f4       	brne	.+30     	; 0xfc3a <_Z20Param_Initializationv+0xbc>
    fc1c:	90 93 1f 14 	sts	0x141F, r25	; 0x80141f <_sRuble_Parameters+0x71>
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_REGISTERED; /* update that ruble is already registered */
    fc20:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fc22:	e1 f4       	brne	.+56     	; 0xfc5c <_Z20Param_Initializationv+0xde>
    fc24:	67 e2       	ldi	r22, 0x27	; 39
		{	
			_kSERAIL_MON_WRITE("Ruble is already Registered To Sever");                /* for debugging purpose */
    fc26:	77 e2       	ldi	r23, 0x27	; 39
    fc28:	86 ec       	ldi	r24, 0xC6	; 198
    fc2a:	94 e1       	ldi	r25, 0x14	; 20
    fc2c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    fc30:	86 ec       	ldi	r24, 0xC6	; 198
			_kSERIAL_MON_CLEAR();
    fc32:	94 e1       	ldi	r25, 0x14	; 20
    fc34:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    fc38:	11 c0       	rjmp	.+34     	; 0xfc5c <_Z20Param_Initializationv+0xde>
    fc3a:	92 e0       	ldi	r25, 0x02	; 2
		}
	}
	else
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_NOT_REGISTERED;  /* set that ruble is not register to server */
    fc3c:	90 93 1f 14 	sts	0x141F, r25	; 0x80141f <_sRuble_Parameters+0x71>
    fc40:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fc42:	51 f4       	brne	.+20     	; 0xfc58 <_Z20Param_Initializationv+0xda>
    fc44:	66 e0       	ldi	r22, 0x06	; 6
		{
			_kSERAIL_MON_WRITE("Ruble is not Registered To Sever");                /* for debugging purpose */
    fc46:	77 e2       	ldi	r23, 0x27	; 39
    fc48:	86 ec       	ldi	r24, 0xC6	; 198
    fc4a:	94 e1       	ldi	r25, 0x14	; 20
    fc4c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    fc50:	86 ec       	ldi	r24, 0xC6	; 198
			_kSERIAL_MON_CLEAR();
    fc52:	94 e1       	ldi	r25, 0x14	; 20
    fc54:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    fc58:	0e 94 d8 86 	call	0x10db0	; 0x10db0 <_Z16Dummy_Data_Storev>
		}
		/****************************** Reset all the epprom location *************************************************/
		Dummy_Data_Store();
    fc5c:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	/********************************** Check gsm fault to init the gsm/gprs network and init broker **************************/
	_sRuble_Parameters.Sim_Check = _eSIM_INSERTED;   /* initially set sim is inserted, then we will check sim status using  AT command */
    fc5e:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
	
	
	Local_Time_Setting();
    fc62:	04 dc       	rcall	.-2040   	; 0xf46c <_Z18Local_Time_Settingv>
    fc64:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
	
	
	if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fc68:	81 30       	cpi	r24, 0x01	; 1
    fc6a:	e1 f0       	breq	.+56     	; 0xfca4 <_Z20Param_Initializationv+0x126>
    fc6c:	90 91 6b 14 	lds	r25, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
	{
		if(_sRuble_Parameters.Sim_Check == _eSIM_NOT_INSERTED)
    fc70:	91 30       	cpi	r25, 0x01	; 1
    fc72:	c1 f4       	brne	.+48     	; 0xfca4 <_Z20Param_Initializationv+0x126>
    fc74:	0e 94 d4 65 	call	0xcba8	; 0xcba8 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fc78:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: SIM",10,0,5);        /* print company name */
    fc7a:	40 e0       	ldi	r20, 0x00	; 0
    fc7c:	6a e0       	ldi	r22, 0x0A	; 10
    fc7e:	87 e8       	ldi	r24, 0x87	; 135
    fc80:	95 e0       	ldi	r25, 0x05	; 5
    fc82:	0e 94 a8 65 	call	0xcb50	; 0xcb50 <_Z14Lcd_Print_BuffPchhh>
    fc86:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fc8a:	81 30       	cpi	r24, 0x01	; 1
    fc8c:	51 f4       	brne	.+20     	; 0xfca2 <_Z20Param_Initializationv+0x124>
    fc8e:	6f ee       	ldi	r22, 0xEF	; 239
			{
				_kSERAIL_MON_WRITE("Please Insert Sim Card");  /* for debugging purpose */
    fc90:	76 e2       	ldi	r23, 0x26	; 38
    fc92:	86 ec       	ldi	r24, 0xC6	; 198
    fc94:	94 e1       	ldi	r25, 0x14	; 20
    fc96:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    fc9a:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fc9c:	94 e1       	ldi	r25, 0x14	; 20
    fc9e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    fca2:	ff cf       	rjmp	.-2      	; 0xfca2 <_Z20Param_Initializationv+0x124>
    fca4:	90 91 1d 14 	lds	r25, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
			}
			while(1);
		}
	}
	
	if(!(_sRuble_Parameters.Hardware_Faults & _eGSM_INIT_FAIL))
    fca8:	90 fd       	sbrc	r25, 0
    fcaa:	09 c0       	rjmp	.+18     	; 0xfcbe <_Z20Param_Initializationv+0x140>
    fcac:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
	{
		_sRuble_Parameters.Display_Update |= _eSEARCHING_FOR_NETWORK;
    fcb0:	80 62       	ori	r24, 0x20	; 32
    fcb2:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
		Display_Update_1();
    fcb6:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
		Init_Broker();          /* if gsm initialize successfully then call the init_broker() function */
    fcba:	86 d3       	rcall	.+1804   	; 0x103c8 <_Z11Init_Brokerv>
    fcbc:	28 c0       	rjmp	.+80     	; 0xfd0e <_Z20Param_Initializationv+0x190>
    fcbe:	81 30       	cpi	r24, 0x01	; 1
	}
	else
	{
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fcc0:	c1 f0       	breq	.+48     	; 0xfcf2 <_Z20Param_Initializationv+0x174>
    fcc2:	0e 94 d4 65 	call	0xcba8	; 0xcba8 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fcc6:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: GSM",10,0,5);        /* print company name */
    fcc8:	40 e0       	ldi	r20, 0x00	; 0
    fcca:	6a e0       	ldi	r22, 0x0A	; 10
    fccc:	82 e9       	ldi	r24, 0x92	; 146
    fcce:	95 e0       	ldi	r25, 0x05	; 5
    fcd0:	0e 94 a8 65 	call	0xcb50	; 0xcb50 <_Z14Lcd_Print_BuffPchhh>
    fcd4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fcd8:	81 30       	cpi	r24, 0x01	; 1
    fcda:	51 f4       	brne	.+20     	; 0xfcf0 <_Z20Param_Initializationv+0x172>
    fcdc:	69 e9       	ldi	r22, 0x99	; 153
			{
				_kSERAIL_MON_WRITE("NOT REGISTER AND ALSO MODULE NOT WORK, PLEASE CHECK THE MODULE AND RESTART THE DEVICE");  /* for debugging purpose */
    fcde:	76 e2       	ldi	r23, 0x26	; 38
    fce0:	86 ec       	ldi	r24, 0xC6	; 198
    fce2:	94 e1       	ldi	r25, 0x14	; 20
    fce4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    fce8:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fcea:	94 e1       	ldi	r25, 0x14	; 20
    fcec:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    fcf0:	ff cf       	rjmp	.-2      	; 0xfcf0 <_Z20Param_Initializationv+0x172>
    fcf2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			}
			while(1);
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fcf6:	81 30       	cpi	r24, 0x01	; 1
    fcf8:	51 f4       	brne	.+20     	; 0xfd0e <_Z20Param_Initializationv+0x190>
    fcfa:	6e e7       	ldi	r22, 0x7E	; 126
			{
				_kSERAIL_MON_WRITE("GSM AND MQTT WILL NOT WORK");                /* for debugging purpose */
    fcfc:	76 e2       	ldi	r23, 0x26	; 38
    fcfe:	86 ec       	ldi	r24, 0xC6	; 198
    fd00:	94 e1       	ldi	r25, 0x14	; 20
    fd02:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
    fd06:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fd08:	94 e1       	ldi	r25, 0x14	; 20
    fd0a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
		}
	}
	
	Read_EEPROM();                        /* read all the data which is stored in the EEPROM till now */
    fd0e:	a7 dc       	rcall	.-1714   	; 0xf65e <_Z11Read_EEPROMv>
    fd10:	05 e1       	ldi	r16, 0x15	; 21
    fd12:	1c e0       	ldi	r17, 0x0C	; 12
    fd14:	e1 2c       	mov	r14, r1
    fd16:	f1 2c       	mov	r15, r1
    fd18:	dd 24       	eor	r13, r13
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fd1a:	d3 94       	inc	r13
    fd1c:	b8 01       	movw	r22, r16
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
    fd1e:	6f 5f       	subi	r22, 0xFF	; 255
    fd20:	7f 4f       	sbci	r23, 0xFF	; 255
    fd22:	c7 01       	movw	r24, r14
    fd24:	8e 5d       	subi	r24, 0xDE	; 222
    fd26:	9b 4e       	sbci	r25, 0xEB	; 235
    fd28:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
    fd2c:	f8 01       	movw	r30, r16
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    fd2e:	80 81       	ld	r24, Z
    fd30:	81 11       	cpse	r24, r1
    fd32:	d3 86       	std	Z+11, r13	; 0x0b
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fd34:	f7 e0       	ldi	r31, 0x07	; 7
    fd36:	ef 0e       	add	r14, r31
    fd38:	f1 1c       	adc	r15, r1
    fd3a:	03 5f       	subi	r16, 0xF3	; 243
    fd3c:	1f 4f       	sbci	r17, 0xFF	; 255
    fd3e:	8a e2       	ldi	r24, 0x2A	; 42
	/******************************************************* Read the pump Nominal current **********************************/
	
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    fd40:	e8 16       	cp	r14, r24
    fd42:	f1 04       	cpc	r15, r1
    fd44:	59 f7       	brne	.-42     	; 0xfd1c <_Z20Param_Initializationv+0x19e>
    fd46:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
		}
	}
	
	
	/****************************************** set the operation mode if Read EEPROM function is not working *************************/
	switch(_sRuble_Parameters.Operation_Mode)
    fd4a:	81 50       	subi	r24, 0x01	; 1
    fd4c:	85 30       	cpi	r24, 0x05	; 5
    fd4e:	80 f0       	brcs	.+32     	; 0xfd70 <_Z20Param_Initializationv+0x1f2>
    fd50:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
		{
			
		}break;
		default:
		{
			_sRuble_Parameters.Manual_Mode_Wait = 0;
    fd54:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
    fd58:	85 e0       	ldi	r24, 0x05	; 5
			_sRuble_Parameters.Operation_Mode   = _eOPER_MOD_SCHEDULER;  // 5/5
    fd5a:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
    fd5e:	84 e0       	ldi	r24, 0x04	; 4
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fd60:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
    fd64:	65 ed       	ldi	r22, 0xD5	; 213
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    fd66:	73 e1       	ldi	r23, 0x13	; 19
    fd68:	88 ed       	ldi	r24, 0xD8	; 216
    fd6a:	94 e0       	ldi	r25, 0x04	; 4
    fd6c:	0e 94 b3 73 	call	0xe766	; 0xe766 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.2>
    fd70:	20 e0       	ldi	r18, 0x00	; 0
		}break;
	}
	
	/****************************************** set the CT calibration ************************************************/
	RUBLE_PUMP_CURRENT.current(_kADC_PUMP_CUR, _kCT_CALIBRATION_FACTOR);
    fd72:	30 e0       	ldi	r19, 0x00	; 0
    fd74:	40 ec       	ldi	r20, 0xC0	; 192
    fd76:	50 e4       	ldi	r21, 0x40	; 64
    fd78:	65 e4       	ldi	r22, 0x45	; 69
    fd7a:	70 e0       	ldi	r23, 0x00	; 0
    fd7c:	82 ef       	ldi	r24, 0xF2	; 242
    fd7e:	9c e0       	ldi	r25, 0x0C	; 12
    fd80:	0e 94 9e d8 	call	0x1b13c	; 0x1b13c <_ZN13EnergyMonitor7currentEjd>
    fd84:	0f 90       	pop	r0
	
}
    fd86:	0f 90       	pop	r0
    fd88:	0f 90       	pop	r0
    fd8a:	df 91       	pop	r29
    fd8c:	cf 91       	pop	r28
    fd8e:	1f 91       	pop	r17
    fd90:	0f 91       	pop	r16
    fd92:	ff 90       	pop	r15
    fd94:	ef 90       	pop	r14
    fd96:	df 90       	pop	r13
    fd98:	cf 90       	pop	r12
    fd9a:	08 95       	ret

0000fd9c <_Z17Clear_Serial_Datav>:
    fd9c:	cf 92       	push	r12
	}	
}


void Clear_Serial_Data(void)
{
    fd9e:	df 92       	push	r13
    fda0:	ef 92       	push	r14
    fda2:	ff 92       	push	r15
	unsigned long previous;
	previous = millis();
    fda4:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    fda8:	6b 01       	movw	r12, r22
    fdaa:	7c 01       	movw	r14, r24
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    fdac:	83 e8       	ldi	r24, 0x83	; 131
    fdae:	96 e1       	ldi	r25, 0x16	; 22
    fdb0:	0e 94 64 d2 	call	0x1a4c8	; 0x1a4c8 <_ZN14HardwareSerial9availableEv>
    fdb4:	18 16       	cp	r1, r24
    fdb6:	19 06       	cpc	r1, r25
    fdb8:	94 f4       	brge	.+36     	; 0xfdde <_Z17Clear_Serial_Datav+0x42>
    fdba:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
    fdbe:	dc 01       	movw	r26, r24
    fdc0:	cb 01       	movw	r24, r22
    fdc2:	8c 19       	sub	r24, r12
    fdc4:	9d 09       	sbc	r25, r13
    fdc6:	ae 09       	sbc	r26, r14
    fdc8:	bf 09       	sbc	r27, r15
    fdca:	84 36       	cpi	r24, 0x64	; 100
    fdcc:	91 05       	cpc	r25, r1
    fdce:	a1 05       	cpc	r26, r1
    fdd0:	b1 05       	cpc	r27, r1
    fdd2:	28 f4       	brcc	.+10     	; 0xfdde <_Z17Clear_Serial_Datav+0x42>
	{
		_kSERIAL_AT.read(); // clears the buffer
    fdd4:	83 e8       	ldi	r24, 0x83	; 131
    fdd6:	96 e1       	ldi	r25, 0x16	; 22
    fdd8:	0e 94 85 d2 	call	0x1a50a	; 0x1a50a <_ZN14HardwareSerial4readEv>

void Clear_Serial_Data(void)
{
	unsigned long previous;
	previous = millis();
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    fddc:	e7 cf       	rjmp	.-50     	; 0xfdac <_Z17Clear_Serial_Datav+0x10>
	{
		_kSERIAL_AT.read(); // clears the buffer
	}
}
    fdde:	ff 90       	pop	r15
    fde0:	ef 90       	pop	r14
    fde2:	df 90       	pop	r13
    fde4:	cf 90       	pop	r12
    fde6:	08 95       	ret

0000fde8 <_Z23Update_Lira_Sensor_DataPh>:
// 			return 1;    /* if id get matched lira sensor node */
// 		}
// 	}
	
	return 0;           /*  id not matched with any lira sensor node */
}
    fde8:	80 e0       	ldi	r24, 0x00	; 0
    fdea:	08 95       	ret

0000fdec <_Z16Lira_Data_EEPROMh>:


void Lira_Data_EEPROM(unsigned char plot_number)
{
    fdec:	df 92       	push	r13
    fdee:	ef 92       	push	r14
    fdf0:	ff 92       	push	r15
    fdf2:	0f 93       	push	r16
    fdf4:	1f 93       	push	r17
    fdf6:	cf 93       	push	r28
    fdf8:	df 93       	push	r29
	_kEEPROM_WRITE(_kEEPROM_LOC_LIRA_SENSOR_DATA(plot_number), _sLira_Node_Param[plot_number]);
    fdfa:	98 e2       	ldi	r25, 0x28	; 40
    fdfc:	89 9f       	mul	r24, r25
    fdfe:	90 01       	movw	r18, r0
    fe00:	11 24       	eor	r1, r1
    fe02:	89 01       	movw	r16, r18
    fe04:	08 5f       	subi	r16, 0xF8	; 248
    fe06:	1f 4f       	sbci	r17, 0xFF	; 255
    fe08:	96 e0       	ldi	r25, 0x06	; 6
    fe0a:	89 9f       	mul	r24, r25
    fe0c:	e0 01       	movw	r28, r0
    fe0e:	11 24       	eor	r1, r1
    fe10:	c2 5b       	subi	r28, 0xB2	; 178
    fe12:	d2 4f       	sbci	r29, 0xF2	; 242
    fe14:	79 01       	movw	r14, r18
    fe16:	8e e0       	ldi	r24, 0x0E	; 14
    fe18:	e8 0e       	add	r14, r24
    fe1a:	f1 1c       	adc	r15, r1
    fe1c:	d9 90       	ld	r13, Y+

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    fe1e:	c8 01       	movw	r24, r16
    fe20:	0e 94 3b f0 	call	0x1e076	; 0x1e076 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    fe24:	d8 16       	cp	r13, r24
    fe26:	21 f0       	breq	.+8      	; 0xfe30 <_Z16Lira_Data_EEPROMh+0x44>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    fe28:	6d 2d       	mov	r22, r13
    fe2a:	c8 01       	movw	r24, r16
    fe2c:	0e 94 43 f0 	call	0x1e086	; 0x1e086 <eeprom_write_byte>
    fe30:	0f 5f       	subi	r16, 0xFF	; 255
    fe32:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fe34:	0e 15       	cp	r16, r14
    fe36:	1f 05       	cpc	r17, r15
    fe38:	89 f7       	brne	.-30     	; 0xfe1c <_Z16Lira_Data_EEPROMh+0x30>
	return;
}
    fe3a:	df 91       	pop	r29
    fe3c:	cf 91       	pop	r28
    fe3e:	1f 91       	pop	r17
    fe40:	0f 91       	pop	r16
    fe42:	ff 90       	pop	r15
    fe44:	ef 90       	pop	r14
    fe46:	df 90       	pop	r13
    fe48:	08 95       	ret

0000fe4a <_Z21Store_MQTT_Pub_Topicsv>:
    fe4a:	08 95       	ret

0000fe4c <_Z21Store_MQTT_Sub_Topicsv>:
		
}


void Store_MQTT_Sub_Topics(void)
{	
    fe4c:	08 95       	ret

0000fe4e <_Z21Subscribe_MQTT_Topicsv>:
	}
}


bool Subscribe_MQTT_Topics(void)
{
    fe4e:	ff 92       	push	r15
    fe50:	0f 93       	push	r16
    fe52:	1f 93       	push	r17
    fe54:	cf 93       	push	r28
    fe56:	df 93       	push	r29
    fe58:	cd b7       	in	r28, 0x3d	; 61
    fe5a:	de b7       	in	r29, 0x3e	; 62
    fe5c:	a8 97       	sbiw	r28, 0x28	; 40
    fe5e:	0f b6       	in	r0, 0x3f	; 63
    fe60:	f8 94       	cli
    fe62:	de bf       	out	0x3e, r29	; 62
    fe64:	0f be       	out	0x3f, r0	; 63
    fe66:	cd bf       	out	0x3d, r28	; 61
	
	unsigned char temp_sub_topic[40];
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fe68:	8e 01       	movw	r16, r28
    fe6a:	0f 5f       	subi	r16, 0xFF	; 255
    fe6c:	1f 4f       	sbci	r17, 0xFF	; 255
    fe6e:	88 e2       	ldi	r24, 0x28	; 40
    fe70:	f8 01       	movw	r30, r16
    fe72:	11 92       	st	Z+, r1
    fe74:	8a 95       	dec	r24
    fe76:	e9 f7       	brne	.-6      	; 0xfe72 <_Z21Subscribe_MQTT_Topicsv+0x24>
	sprintf((char *)temp_sub_topic,"SICCA/DELETE/VALVE/%s",_sRuble_Parameters.Ruble_ID);
    fe78:	8e ec       	ldi	r24, 0xCE	; 206
    fe7a:	93 e1       	ldi	r25, 0x13	; 19
    fe7c:	9f 93       	push	r25
    fe7e:	8f 93       	push	r24
    fe80:	8d e9       	ldi	r24, 0x9D	; 157
    fe82:	95 e0       	ldi	r25, 0x05	; 5
    fe84:	9f 93       	push	r25
    fe86:	8f 93       	push	r24
    fe88:	1f 93       	push	r17
    fe8a:	0f 93       	push	r16
    fe8c:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fe90:	c8 01       	movw	r24, r16
    fe92:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
    fe96:	0f 90       	pop	r0
    fe98:	0f 90       	pop	r0
    fe9a:	0f 90       	pop	r0
    fe9c:	0f 90       	pop	r0
    fe9e:	0f 90       	pop	r0
    fea0:	0f 90       	pop	r0
    fea2:	81 11       	cpse	r24, r1
    fea4:	0f c0       	rjmp	.+30     	; 0xfec4 <_Z21Subscribe_MQTT_Topicsv+0x76>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fea6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    feaa:	81 30       	cpi	r24, 0x01	; 1
    feac:	69 f4       	brne	.+26     	; 0xfec8 <_Z21Subscribe_MQTT_Topicsv+0x7a>
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
    feae:	6c e4       	ldi	r22, 0x4C	; 76
    feb0:	77 e2       	ldi	r23, 0x27	; 39
    feb2:	86 ec       	ldi	r24, 0xC6	; 198
    feb4:	94 e1       	ldi	r25, 0x14	; 20
    feb6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    feba:	86 ec       	ldi	r24, 0xC6	; 198
    febc:	94 e1       	ldi	r25, 0x14	; 20
    febe:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
    fec2:	02 c0       	rjmp	.+4      	; 0xfec8 <_Z21Subscribe_MQTT_Topicsv+0x7a>
}


bool Subscribe_MQTT_Topics(void)
{
	char temp_flag = _kRESET;
    fec4:	f1 2c       	mov	r15, r1
    fec6:	02 c0       	rjmp	.+4      	; 0xfecc <_Z21Subscribe_MQTT_Topicsv+0x7e>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		temp_flag = _kSET;
    fec8:	ff 24       	eor	r15, r15
    feca:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fecc:	88 e2       	ldi	r24, 0x28	; 40
    fece:	f8 01       	movw	r30, r16
    fed0:	11 92       	st	Z+, r1
    fed2:	8a 95       	dec	r24
    fed4:	e9 f7       	brne	.-6      	; 0xfed0 <_Z21Subscribe_MQTT_Topicsv+0x82>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/PLOT/%s",_sRuble_Parameters.Ruble_ID);
    fed6:	8e ec       	ldi	r24, 0xCE	; 206
    fed8:	93 e1       	ldi	r25, 0x13	; 19
    feda:	9f 93       	push	r25
    fedc:	8f 93       	push	r24
    fede:	83 eb       	ldi	r24, 0xB3	; 179
    fee0:	95 e0       	ldi	r25, 0x05	; 5
    fee2:	9f 93       	push	r25
    fee4:	8f 93       	push	r24
    fee6:	1f 93       	push	r17
    fee8:	0f 93       	push	r16
    feea:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	//SICCA/CONFIG/SETUP/PLOT/
		
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    feee:	c8 01       	movw	r24, r16
    fef0:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
    fef4:	0f 90       	pop	r0
    fef6:	0f 90       	pop	r0
    fef8:	0f 90       	pop	r0
    fefa:	0f 90       	pop	r0
    fefc:	0f 90       	pop	r0
    fefe:	0f 90       	pop	r0
    ff00:	81 11       	cpse	r24, r1
    ff02:	02 c0       	rjmp	.+4      	; 0xff08 <_Z21Subscribe_MQTT_Topicsv+0xba>
	{
		temp_flag = _kSET;
    ff04:	ff 24       	eor	r15, r15
    ff06:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    ff08:	88 e2       	ldi	r24, 0x28	; 40
    ff0a:	f8 01       	movw	r30, r16
    ff0c:	11 92       	st	Z+, r1
    ff0e:	8a 95       	dec	r24
    ff10:	e9 f7       	brne	.-6      	; 0xff0c <_Z21Subscribe_MQTT_Topicsv+0xbe>
	sprintf((char *)temp_sub_topic,"SICCA/STATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    ff12:	8e ec       	ldi	r24, 0xCE	; 206
    ff14:	93 e1       	ldi	r25, 0x13	; 19
    ff16:	9f 93       	push	r25
    ff18:	8f 93       	push	r24
    ff1a:	8e ec       	ldi	r24, 0xCE	; 206
    ff1c:	95 e0       	ldi	r25, 0x05	; 5
    ff1e:	9f 93       	push	r25
    ff20:	8f 93       	push	r24
    ff22:	1f 93       	push	r17
    ff24:	0f 93       	push	r16
    ff26:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    ff2a:	c8 01       	movw	r24, r16
    ff2c:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
    ff30:	0f 90       	pop	r0
    ff32:	0f 90       	pop	r0
    ff34:	0f 90       	pop	r0
    ff36:	0f 90       	pop	r0
    ff38:	0f 90       	pop	r0
    ff3a:	0f 90       	pop	r0
    ff3c:	81 11       	cpse	r24, r1
    ff3e:	02 c0       	rjmp	.+4      	; 0xff44 <_Z21Subscribe_MQTT_Topicsv+0xf6>
	{
		temp_flag = _kSET;
    ff40:	ff 24       	eor	r15, r15
    ff42:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    ff44:	88 e2       	ldi	r24, 0x28	; 40
    ff46:	f8 01       	movw	r30, r16
    ff48:	11 92       	st	Z+, r1
    ff4a:	8a 95       	dec	r24
    ff4c:	e9 f7       	brne	.-6      	; 0xff48 <_Z21Subscribe_MQTT_Topicsv+0xfa>
	sprintf((char *)temp_sub_topic,"SICCA/TIMER/%s",_sRuble_Parameters.Ruble_ID);
    ff4e:	8e ec       	ldi	r24, 0xCE	; 206
    ff50:	93 e1       	ldi	r25, 0x13	; 19
    ff52:	9f 93       	push	r25
    ff54:	8f 93       	push	r24
    ff56:	86 ee       	ldi	r24, 0xE6	; 230
    ff58:	95 e0       	ldi	r25, 0x05	; 5
    ff5a:	9f 93       	push	r25
    ff5c:	8f 93       	push	r24
    ff5e:	1f 93       	push	r17
    ff60:	0f 93       	push	r16
    ff62:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    ff66:	c8 01       	movw	r24, r16
    ff68:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
    ff6c:	0f 90       	pop	r0
    ff6e:	0f 90       	pop	r0
    ff70:	0f 90       	pop	r0
    ff72:	0f 90       	pop	r0
    ff74:	0f 90       	pop	r0
    ff76:	0f 90       	pop	r0
    ff78:	81 11       	cpse	r24, r1
    ff7a:	02 c0       	rjmp	.+4      	; 0xff80 <_Z21Subscribe_MQTT_Topicsv+0x132>
	{
		temp_flag = _kSET;
    ff7c:	ff 24       	eor	r15, r15
    ff7e:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    ff80:	88 e2       	ldi	r24, 0x28	; 40
    ff82:	f8 01       	movw	r30, r16
    ff84:	11 92       	st	Z+, r1
    ff86:	8a 95       	dec	r24
    ff88:	e9 f7       	brne	.-6      	; 0xff84 <_Z21Subscribe_MQTT_Topicsv+0x136>
	sprintf((char *)temp_sub_topic,"SICCA/SOIL/COEFF/%s",_sRuble_Parameters.Ruble_ID);
    ff8a:	8e ec       	ldi	r24, 0xCE	; 206
    ff8c:	93 e1       	ldi	r25, 0x13	; 19
    ff8e:	9f 93       	push	r25
    ff90:	8f 93       	push	r24
    ff92:	85 ef       	ldi	r24, 0xF5	; 245
    ff94:	95 e0       	ldi	r25, 0x05	; 5
    ff96:	9f 93       	push	r25
    ff98:	8f 93       	push	r24
    ff9a:	1f 93       	push	r17
    ff9c:	0f 93       	push	r16
    ff9e:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    ffa2:	c8 01       	movw	r24, r16
    ffa4:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
    ffa8:	0f 90       	pop	r0
    ffaa:	0f 90       	pop	r0
    ffac:	0f 90       	pop	r0
    ffae:	0f 90       	pop	r0
    ffb0:	0f 90       	pop	r0
    ffb2:	0f 90       	pop	r0
    ffb4:	81 11       	cpse	r24, r1
    ffb6:	02 c0       	rjmp	.+4      	; 0xffbc <_Z21Subscribe_MQTT_Topicsv+0x16e>
	{
		temp_flag = _kSET;
    ffb8:	ff 24       	eor	r15, r15
    ffba:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    ffbc:	88 e2       	ldi	r24, 0x28	; 40
    ffbe:	f8 01       	movw	r30, r16
    ffc0:	11 92       	st	Z+, r1
    ffc2:	8a 95       	dec	r24
    ffc4:	e9 f7       	brne	.-6      	; 0xffc0 <_Z21Subscribe_MQTT_Topicsv+0x172>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/%s",_sRuble_Parameters.Ruble_ID);
    ffc6:	8e ec       	ldi	r24, 0xCE	; 206
    ffc8:	93 e1       	ldi	r25, 0x13	; 19
    ffca:	9f 93       	push	r25
    ffcc:	8f 93       	push	r24
    ffce:	89 e0       	ldi	r24, 0x09	; 9
    ffd0:	96 e0       	ldi	r25, 0x06	; 6
    ffd2:	9f 93       	push	r25
    ffd4:	8f 93       	push	r24
    ffd6:	1f 93       	push	r17
    ffd8:	0f 93       	push	r16
    ffda:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    ffde:	c8 01       	movw	r24, r16
    ffe0:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
    ffe4:	0f 90       	pop	r0
    ffe6:	0f 90       	pop	r0
    ffe8:	0f 90       	pop	r0
    ffea:	0f 90       	pop	r0
    ffec:	0f 90       	pop	r0
    ffee:	0f 90       	pop	r0
    fff0:	81 11       	cpse	r24, r1
    fff2:	02 c0       	rjmp	.+4      	; 0xfff8 <_Z21Subscribe_MQTT_Topicsv+0x1aa>
	{
		temp_flag = _kSET;
    fff4:	ff 24       	eor	r15, r15
    fff6:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}



	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fff8:	88 e2       	ldi	r24, 0x28	; 40
    fffa:	f8 01       	movw	r30, r16
    fffc:	11 92       	st	Z+, r1
    fffe:	8a 95       	dec	r24
   10000:	e9 f7       	brne	.-6      	; 0xfffc <_Z21Subscribe_MQTT_Topicsv+0x1ae>
	sprintf((char *)temp_sub_topic,"SICCA/CALIBRATE/%s",_sRuble_Parameters.Ruble_ID);
   10002:	8e ec       	ldi	r24, 0xCE	; 206
   10004:	93 e1       	ldi	r25, 0x13	; 19
   10006:	9f 93       	push	r25
   10008:	8f 93       	push	r24
   1000a:	8f e1       	ldi	r24, 0x1F	; 31
   1000c:	96 e0       	ldi	r25, 0x06	; 6
   1000e:	9f 93       	push	r25
   10010:	8f 93       	push	r24
   10012:	1f 93       	push	r17
   10014:	0f 93       	push	r16
   10016:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1001a:	c8 01       	movw	r24, r16
   1001c:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
   10020:	0f 90       	pop	r0
   10022:	0f 90       	pop	r0
   10024:	0f 90       	pop	r0
   10026:	0f 90       	pop	r0
   10028:	0f 90       	pop	r0
   1002a:	0f 90       	pop	r0
   1002c:	81 11       	cpse	r24, r1
   1002e:	02 c0       	rjmp	.+4      	; 0x10034 <_Z21Subscribe_MQTT_Topicsv+0x1e6>
	{
		temp_flag = _kSET;
   10030:	ff 24       	eor	r15, r15
   10032:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}

	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10034:	88 e2       	ldi	r24, 0x28	; 40
   10036:	f8 01       	movw	r30, r16
   10038:	11 92       	st	Z+, r1
   1003a:	8a 95       	dec	r24
   1003c:	e9 f7       	brne	.-6      	; 0x10038 <_Z21Subscribe_MQTT_Topicsv+0x1ea>
	sprintf((char *)temp_sub_topic,"SICCA/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
   1003e:	8e ec       	ldi	r24, 0xCE	; 206
   10040:	93 e1       	ldi	r25, 0x13	; 19
   10042:	9f 93       	push	r25
   10044:	8f 93       	push	r24
   10046:	82 e3       	ldi	r24, 0x32	; 50
   10048:	96 e0       	ldi	r25, 0x06	; 6
   1004a:	9f 93       	push	r25
   1004c:	8f 93       	push	r24
   1004e:	1f 93       	push	r17
   10050:	0f 93       	push	r16
   10052:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   10056:	c8 01       	movw	r24, r16
   10058:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
   1005c:	0f 90       	pop	r0
   1005e:	0f 90       	pop	r0
   10060:	0f 90       	pop	r0
   10062:	0f 90       	pop	r0
   10064:	0f 90       	pop	r0
   10066:	0f 90       	pop	r0
   10068:	81 11       	cpse	r24, r1
   1006a:	02 c0       	rjmp	.+4      	; 0x10070 <_Z21Subscribe_MQTT_Topicsv+0x222>
	{
		temp_flag = _kSET;
   1006c:	ff 24       	eor	r15, r15
   1006e:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10070:	88 e2       	ldi	r24, 0x28	; 40
   10072:	f8 01       	movw	r30, r16
   10074:	11 92       	st	Z+, r1
   10076:	8a 95       	dec	r24
   10078:	e9 f7       	brne	.-6      	; 0x10074 <_Z21Subscribe_MQTT_Topicsv+0x226>
	sprintf((char *)temp_sub_topic,"SICCA/DEVICE/%s",_sRuble_Parameters.Ruble_ID);
   1007a:	8e ec       	ldi	r24, 0xCE	; 206
   1007c:	93 e1       	ldi	r25, 0x13	; 19
   1007e:	9f 93       	push	r25
   10080:	8f 93       	push	r24
   10082:	84 e4       	ldi	r24, 0x44	; 68
   10084:	96 e0       	ldi	r25, 0x06	; 6
   10086:	9f 93       	push	r25
   10088:	8f 93       	push	r24
   1008a:	1f 93       	push	r17
   1008c:	0f 93       	push	r16
   1008e:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   10092:	c8 01       	movw	r24, r16
   10094:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
   10098:	0f 90       	pop	r0
   1009a:	0f 90       	pop	r0
   1009c:	0f 90       	pop	r0
   1009e:	0f 90       	pop	r0
   100a0:	0f 90       	pop	r0
   100a2:	0f 90       	pop	r0
   100a4:	81 11       	cpse	r24, r1
   100a6:	02 c0       	rjmp	.+4      	; 0x100ac <_Z21Subscribe_MQTT_Topicsv+0x25e>
	{
		temp_flag = _kSET;
   100a8:	ff 24       	eor	r15, r15
   100aa:	f3 94       	inc	r15
	}
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   100ac:	88 e2       	ldi	r24, 0x28	; 40
   100ae:	f8 01       	movw	r30, r16
   100b0:	11 92       	st	Z+, r1
   100b2:	8a 95       	dec	r24
   100b4:	e9 f7       	brne	.-6      	; 0x100b0 <_Z21Subscribe_MQTT_Topicsv+0x262>
	sprintf((char *)temp_sub_topic,"SICCA/TANK/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
   100b6:	8e ec       	ldi	r24, 0xCE	; 206
   100b8:	93 e1       	ldi	r25, 0x13	; 19
   100ba:	9f 93       	push	r25
   100bc:	8f 93       	push	r24
   100be:	84 e5       	ldi	r24, 0x54	; 84
   100c0:	96 e0       	ldi	r25, 0x06	; 6
   100c2:	9f 93       	push	r25
   100c4:	8f 93       	push	r24
   100c6:	1f 93       	push	r17
   100c8:	0f 93       	push	r16
   100ca:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   100ce:	c8 01       	movw	r24, r16
   100d0:	0e 94 4d 72 	call	0xe49a	; 0xe49a <_Z14MQTT_SUBSCRIBEPc>
   100d4:	0f 90       	pop	r0
   100d6:	0f 90       	pop	r0
   100d8:	0f 90       	pop	r0
   100da:	0f 90       	pop	r0
   100dc:	0f 90       	pop	r0
   100de:	0f 90       	pop	r0
   100e0:	88 23       	and	r24, r24
   100e2:	11 f0       	breq	.+4      	; 0x100e8 <_Z21Subscribe_MQTT_Topicsv+0x29a>
// 	{
// 		temp_flag = _kSET;
// 	}
	
	
	if(temp_flag)
   100e4:	ff 20       	and	r15, r15
   100e6:	31 f0       	breq	.+12     	; 0x100f4 <_Z21Subscribe_MQTT_Topicsv+0x2a6>
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
   100e8:	82 e0       	ldi	r24, 0x02	; 2
   100ea:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
   100ee:	ff 24       	eor	r15, r15
   100f0:	f3 94       	inc	r15
   100f2:	03 c0       	rjmp	.+6      	; 0x100fa <_Z21Subscribe_MQTT_Topicsv+0x2ac>
	}
	else
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_SUBSCRIBED;
   100f4:	81 e0       	ldi	r24, 0x01	; 1
   100f6:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
	}
	
	return !temp_flag;
}
   100fa:	81 e0       	ldi	r24, 0x01	; 1
   100fc:	8f 25       	eor	r24, r15
   100fe:	a8 96       	adiw	r28, 0x28	; 40
   10100:	0f b6       	in	r0, 0x3f	; 63
   10102:	f8 94       	cli
   10104:	de bf       	out	0x3e, r29	; 62
   10106:	0f be       	out	0x3f, r0	; 63
   10108:	cd bf       	out	0x3d, r28	; 61
   1010a:	df 91       	pop	r29
   1010c:	cf 91       	pop	r28
   1010e:	1f 91       	pop	r17
   10110:	0f 91       	pop	r16
   10112:	ff 90       	pop	r15
   10114:	08 95       	ret

00010116 <_Z14Ping_to_Serverv>:
	
}


bool Ping_to_Server(void)
{
   10116:	0f 93       	push	r16
   10118:	cf 93       	push	r28
	Reset_Buffer();
   1011a:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
   _kSERIAL_AT.println(F("ATE0"));
   1011e:	62 e4       	ldi	r22, 0x42	; 66
   10120:	78 e2       	ldi	r23, 0x28	; 40
   10122:	83 e8       	ldi	r24, 0x83	; 131
   10124:	96 e1       	ldi	r25, 0x16	; 22
   10126:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   Send_AT_Command(NULL, "OK",  NULL,3000,2);
   1012a:	02 e0       	ldi	r16, 0x02	; 2
   1012c:	28 eb       	ldi	r18, 0xB8	; 184
   1012e:	3b e0       	ldi	r19, 0x0B	; 11
   10130:	40 e0       	ldi	r20, 0x00	; 0
   10132:	50 e0       	ldi	r21, 0x00	; 0
   10134:	6e e1       	ldi	r22, 0x1E	; 30
   10136:	73 e0       	ldi	r23, 0x03	; 3
   10138:	80 e0       	ldi	r24, 0x00	; 0
   1013a:	90 e0       	ldi	r25, 0x00	; 0
   1013c:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
	
	
	if (!Check_Sim(_eDIRESCT_CHECK))
   10140:	83 e0       	ldi	r24, 0x03	; 3
   10142:	0e 94 cc 73 	call	0xe798	; 0xe798 <_Z9Check_Simc>
   10146:	c8 2f       	mov	r28, r24
   10148:	81 11       	cpse	r24, r1
   1014a:	10 c0       	rjmp	.+32     	; 0x1016c <_Z14Ping_to_Serverv+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   1014c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10150:	81 30       	cpi	r24, 0x01	; 1
   10152:	09 f0       	breq	.+2      	; 0x10156 <_Z14Ping_to_Serverv+0x40>
   10154:	35 c1       	rjmp	.+618    	; 0x103c0 <_Z14Ping_to_Serverv+0x2aa>
		{
			_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
   10156:	61 e3       	ldi	r22, 0x31	; 49
   10158:	78 e2       	ldi	r23, 0x28	; 40
   1015a:	86 ec       	ldi	r24, 0xC6	; 198
   1015c:	94 e1       	ldi	r25, 0x14	; 20
   1015e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   10162:	86 ec       	ldi	r24, 0xC6	; 198
   10164:	94 e1       	ldi	r25, 0x14	; 20
   10166:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1016a:	2a c1       	rjmp	.+596    	; 0x103c0 <_Z14Ping_to_Serverv+0x2aa>
		}
		return 0;
	}
	
	
	Reset_Buffer();
   1016c:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
	 _kSERIAL_AT.println(F("AT+QMTCLOSE=0"));
   10170:	63 e2       	ldi	r22, 0x23	; 35
   10172:	78 e2       	ldi	r23, 0x28	; 40
   10174:	83 e8       	ldi	r24, 0x83	; 131
   10176:	96 e1       	ldi	r25, 0x16	; 22
   10178:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(_kSEND_AT_COMMAND(NULL,"OK",NULL,3000,1))
   1017c:	01 e0       	ldi	r16, 0x01	; 1
   1017e:	28 eb       	ldi	r18, 0xB8	; 184
   10180:	3b e0       	ldi	r19, 0x0B	; 11
   10182:	40 e0       	ldi	r20, 0x00	; 0
   10184:	50 e0       	ldi	r21, 0x00	; 0
   10186:	6e e1       	ldi	r22, 0x1E	; 30
   10188:	73 e0       	ldi	r23, 0x03	; 3
   1018a:	80 e0       	ldi	r24, 0x00	; 0
   1018c:	90 e0       	ldi	r25, 0x00	; 0
   1018e:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
   10192:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10196:	88 23       	and	r24, r24
   10198:	29 f0       	breq	.+10     	; 0x101a4 <_Z14Ping_to_Serverv+0x8e>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   1019a:	91 30       	cpi	r25, 0x01	; 1
   1019c:	79 f4       	brne	.+30     	; 0x101bc <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE");                /* for debugging purpose */
   1019e:	67 e1       	ldi	r22, 0x17	; 23
   101a0:	78 e2       	ldi	r23, 0x28	; 40
   101a2:	04 c0       	rjmp	.+8      	; 0x101ac <_Z14Ping_to_Serverv+0x96>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   101a4:	91 30       	cpi	r25, 0x01	; 1
   101a6:	51 f4       	brne	.+20     	; 0x101bc <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE NOT CLOSE ");                /* for debugging purpose */
   101a8:	60 e0       	ldi	r22, 0x00	; 0
   101aa:	78 e2       	ldi	r23, 0x28	; 40
   101ac:	86 ec       	ldi	r24, 0xC6	; 198
   101ae:	94 e1       	ldi	r25, 0x14	; 20
   101b0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   101b4:	86 ec       	ldi	r24, 0xC6	; 198
   101b6:	94 e1       	ldi	r25, 0x14	; 20
   101b8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
	}
	
	if(!Gsm_Gprs_Network())
   101bc:	0e 94 ef 61 	call	0xc3de	; 0xc3de <_Z16Gsm_Gprs_Networkv>
   101c0:	c8 2f       	mov	r28, r24
   101c2:	81 11       	cpse	r24, r1
   101c4:	06 c0       	rjmp	.+12     	; 0x101d2 <_Z14Ping_to_Serverv+0xbc>
	{
		_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   101c6:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   101ca:	8b 7f       	andi	r24, 0xFB	; 251
   101cc:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   101d0:	f7 c0       	rjmp	.+494    	; 0x103c0 <_Z14Ping_to_Serverv+0x2aa>
		return 0;
		
	}
	
	_sRuble_Parameters.Display_Update |= _eNETWORK_SELECTED;
   101d2:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   101d6:	80 64       	ori	r24, 0x40	; 64
   101d8:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
	 Display_Update_1();  // 20/1/2022
   101dc:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
	
	
	if(!_kIS_MQTT_CONNECTED() ||  _sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)      /* check weather already connected to server */
   101e0:	0e 94 48 6b 	call	0xd690	; 0xd690 <_Z17Is_MQTT_Connectedv>
   101e4:	c8 2f       	mov	r28, r24
   101e6:	88 23       	and	r24, r24
   101e8:	29 f0       	breq	.+10     	; 0x101f4 <_Z14Ping_to_Serverv+0xde>
   101ea:	80 91 20 14 	lds	r24, 0x1420	; 0x801420 <_sRuble_Parameters+0x72>
   101ee:	82 30       	cpi	r24, 0x02	; 2
   101f0:	09 f0       	breq	.+2      	; 0x101f4 <_Z14Ping_to_Serverv+0xde>
   101f2:	e6 c0       	rjmp	.+460    	; 0x103c0 <_Z14Ping_to_Serverv+0x2aa>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   101f4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   101f8:	81 30       	cpi	r24, 0x01	; 1
   101fa:	51 f4       	brne	.+20     	; 0x10210 <_Z14Ping_to_Serverv+0xfa>
		{
			_kSERAIL_MON_WRITE("Try to connect the server");                /* for debugging purpose */
   101fc:	66 ee       	ldi	r22, 0xE6	; 230
   101fe:	77 e2       	ldi	r23, 0x27	; 39
   10200:	86 ec       	ldi	r24, 0xC6	; 198
   10202:	94 e1       	ldi	r25, 0x14	; 20
   10204:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   10208:	86 ec       	ldi	r24, 0xC6	; 198
   1020a:	94 e1       	ldi	r25, 0x14	; 20
   1020c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		
		_sRuble_Parameters.Display_Update =  _eCONNECTING_TO_SERVER;
   10210:	10 92 ae 13 	sts	0x13AE, r1	; 0x8013ae <_sRuble_Parameters>
   10214:	84 e0       	ldi	r24, 0x04	; 4
   10216:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
   1021a:	10 92 b0 13 	sts	0x13B0, r1	; 0x8013b0 <_sRuble_Parameters+0x2>
   1021e:	10 92 b1 13 	sts	0x13B1, r1	; 0x8013b1 <_sRuble_Parameters+0x3>
   10222:	10 92 b2 13 	sts	0x13B2, r1	; 0x8013b2 <_sRuble_Parameters+0x4>
   10226:	10 92 b3 13 	sts	0x13B3, r1	; 0x8013b3 <_sRuble_Parameters+0x5>
   1022a:	10 92 b4 13 	sts	0x13B4, r1	; 0x8013b4 <_sRuble_Parameters+0x6>
   1022e:	10 92 b5 13 	sts	0x13B5, r1	; 0x8013b5 <_sRuble_Parameters+0x7>
		Display_Update_1();    // 20/1/2022
   10232:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
		
		
		if(_kMQTT_CONNCET(_kMQTT_CLIENT_ID,_kMQTT_USER,_kMQTT_PASSWORD))
   10236:	4b e6       	ldi	r20, 0x6B	; 107
   10238:	56 e0       	ldi	r21, 0x06	; 6
   1023a:	6c e7       	ldi	r22, 0x7C	; 124
   1023c:	76 e0       	ldi	r23, 0x06	; 6
   1023e:	cb 01       	movw	r24, r22
   10240:	0e 94 7d 6b 	call	0xd6fa	; 0xd6fa <_Z12MQTT_ConnectPKcS0_S0_>
   10244:	c8 2f       	mov	r28, r24
   10246:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1024a:	88 23       	and	r24, r24
   1024c:	09 f4       	brne	.+2      	; 0x10250 <_Z14Ping_to_Serverv+0x13a>
   1024e:	6c c0       	rjmp	.+216    	; 0x10328 <_Z14Ping_to_Serverv+0x212>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   10250:	91 30       	cpi	r25, 0x01	; 1
   10252:	51 f4       	brne	.+20     	; 0x10268 <_Z14Ping_to_Serverv+0x152>
			{
				_kSERAIL_MON_WRITE("Connected To server");                /* for debugging purpose */
   10254:	62 ed       	ldi	r22, 0xD2	; 210
   10256:	77 e2       	ldi	r23, 0x27	; 39
   10258:	86 ec       	ldi	r24, 0xC6	; 198
   1025a:	94 e1       	ldi	r25, 0x14	; 20
   1025c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   10260:	86 ec       	ldi	r24, 0xC6	; 198
   10262:	94 e1       	ldi	r25, 0x14	; 20
   10264:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Display_Update |= _kDISP_RANGE_3;
			
			_sRuble_Parameters.Display_Update |=  _eCONNECTED_TO_SERVER;
   10268:	90 91 ae 13 	lds	r25, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   1026c:	98 60       	ori	r25, 0x08	; 8
   1026e:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   10272:	80 68       	ori	r24, 0x80	; 128
   10274:	90 93 ae 13 	sts	0x13AE, r25	; 0x8013ae <_sRuble_Parameters>
   10278:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
			Display_Update_1();   // 20/1/2022
   1027c:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
			
			 if(Subscribe_MQTT_Topics())
   10280:	e6 dd       	rcall	.-1076   	; 0xfe4e <_Z21Subscribe_MQTT_Topicsv>
   10282:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10286:	88 23       	and	r24, r24
   10288:	91 f0       	breq	.+36     	; 0x102ae <_Z14Ping_to_Serverv+0x198>
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1028a:	91 30       	cpi	r25, 0x01	; 1
   1028c:	51 f4       	brne	.+20     	; 0x102a2 <_Z14Ping_to_Serverv+0x18c>
				 {
					 _kSERAIL_MON_WRITE("all topic subscribed");                /* for debugging purpose */
   1028e:	6d eb       	ldi	r22, 0xBD	; 189
   10290:	77 e2       	ldi	r23, 0x27	; 39
   10292:	86 ec       	ldi	r24, 0xC6	; 198
   10294:	94 e1       	ldi	r25, 0x14	; 20
   10296:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   1029a:	86 ec       	ldi	r24, 0xC6	; 198
   1029c:	94 e1       	ldi	r25, 0x14	; 20
   1029e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
				 }
				  _sRuble_Parameters.lndications   |= _eRUBL_INDI_SERVER_CONN;
   102a2:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   102a6:	84 60       	ori	r24, 0x04	; 4
   102a8:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   102ac:	08 c0       	rjmp	.+16     	; 0x102be <_Z14Ping_to_Serverv+0x1a8>
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   102ae:	91 30       	cpi	r25, 0x01	; 1
   102b0:	31 f4       	brne	.+12     	; 0x102be <_Z14Ping_to_Serverv+0x1a8>
				 {
					 _kSERAIL_MON_WRITE("all topic not subscribed");                /* for debugging purpose */
   102b2:	64 ea       	ldi	r22, 0xA4	; 164
   102b4:	77 e2       	ldi	r23, 0x27	; 39
   102b6:	86 ec       	ldi	r24, 0xC6	; 198
   102b8:	94 e1       	ldi	r25, 0x14	; 20
   102ba:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				 }
			 }
			 
			
			 _sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
   102be:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   102c2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   102c6:	84 60       	ori	r24, 0x04	; 4
   102c8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   102cc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			 
			 if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   102d0:	e0 91 1f 14 	lds	r30, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   102d4:	70 91 ae 13 	lds	r23, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   102d8:	90 91 af 13 	lds	r25, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   102dc:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
   102e0:	60 91 b1 13 	lds	r22, 0x13B1	; 0x8013b1 <_sRuble_Parameters+0x3>
   102e4:	50 91 b2 13 	lds	r21, 0x13B2	; 0x8013b2 <_sRuble_Parameters+0x4>
   102e8:	40 91 b3 13 	lds	r20, 0x13B3	; 0x8013b3 <_sRuble_Parameters+0x5>
   102ec:	30 91 b4 13 	lds	r19, 0x13B4	; 0x8013b4 <_sRuble_Parameters+0x6>
   102f0:	20 91 b5 13 	lds	r18, 0x13B5	; 0x8013b5 <_sRuble_Parameters+0x7>
   102f4:	e1 30       	cpi	r30, 0x01	; 1
   102f6:	21 f0       	breq	.+8      	; 0x10300 <_Z14Ping_to_Serverv+0x1ea>
			 {
				  _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   102f8:	98 60       	ori	r25, 0x08	; 8
   102fa:	90 93 af 13 	sts	0x13AF, r25	; 0x8013af <_sRuble_Parameters+0x1>
   102fe:	11 c0       	rjmp	.+34     	; 0x10322 <_Z14Ping_to_Serverv+0x20c>
				  Display_Update_1();   // 20/1/2022
			 }
			 else
			 {
				  _sRuble_Parameters.Display_Update |= _eTHANK_YOU_FOR_WAITING;
   10300:	81 60       	ori	r24, 0x01	; 1
   10302:	70 93 ae 13 	sts	0x13AE, r23	; 0x8013ae <_sRuble_Parameters>
   10306:	90 93 af 13 	sts	0x13AF, r25	; 0x8013af <_sRuble_Parameters+0x1>
   1030a:	80 93 b0 13 	sts	0x13B0, r24	; 0x8013b0 <_sRuble_Parameters+0x2>
   1030e:	60 93 b1 13 	sts	0x13B1, r22	; 0x8013b1 <_sRuble_Parameters+0x3>
   10312:	50 93 b2 13 	sts	0x13B2, r21	; 0x8013b2 <_sRuble_Parameters+0x4>
   10316:	40 93 b3 13 	sts	0x13B3, r20	; 0x8013b3 <_sRuble_Parameters+0x5>
   1031a:	30 93 b4 13 	sts	0x13B4, r19	; 0x8013b4 <_sRuble_Parameters+0x6>
   1031e:	20 93 b5 13 	sts	0x13B5, r18	; 0x8013b5 <_sRuble_Parameters+0x7>
				  Display_Update_1();   // 20/1/2022
   10322:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   10326:	4c c0       	rjmp	.+152    	; 0x103c0 <_Z14Ping_to_Serverv+0x2aa>
			 
			 return 1;
		}
		else
		{
			_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   10328:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1032c:	8b 7f       	andi	r24, 0xFB	; 251
   1032e:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Display_Update |= _kDISP_NO_RANGE;
   10332:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   10336:	81 60       	ori	r24, 0x01	; 1
   10338:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   1033c:	91 30       	cpi	r25, 0x01	; 1
   1033e:	51 f4       	brne	.+20     	; 0x10354 <_Z14Ping_to_Serverv+0x23e>
			{
				_kSERAIL_MON_WRITE("Fail To connect the server");                /* for debugging purpose */
   10340:	69 e8       	ldi	r22, 0x89	; 137
   10342:	77 e2       	ldi	r23, 0x27	; 39
   10344:	86 ec       	ldi	r24, 0xC6	; 198
   10346:	94 e1       	ldi	r25, 0x14	; 20
   10348:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   1034c:	86 ec       	ldi	r24, 0xC6	; 198
   1034e:	94 e1       	ldi	r25, 0x14	; 20
   10350:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
			}
			
			Reset_Buffer();
   10354:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("AT+CFUN=1,1"));
   10358:	6d e7       	ldi	r22, 0x7D	; 125
   1035a:	77 e2       	ldi	r23, 0x27	; 39
   1035c:	83 e8       	ldi	r24, 0x83	; 131
   1035e:	96 e1       	ldi	r25, 0x16	; 22
   10360:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL,"OK",  NULL,10000,1);     // 22/3/2022
   10364:	01 e0       	ldi	r16, 0x01	; 1
   10366:	20 e1       	ldi	r18, 0x10	; 16
   10368:	37 e2       	ldi	r19, 0x27	; 39
   1036a:	40 e0       	ldi	r20, 0x00	; 0
   1036c:	50 e0       	ldi	r21, 0x00	; 0
   1036e:	6e e1       	ldi	r22, 0x1E	; 30
   10370:	73 e0       	ldi	r23, 0x03	; 3
   10372:	80 e0       	ldi	r24, 0x00	; 0
   10374:	90 e0       	ldi	r25, 0x00	; 0
   10376:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
			_kDELAY_MS(10000);
   1037a:	60 e1       	ldi	r22, 0x10	; 16
   1037c:	77 e2       	ldi	r23, 0x27	; 39
   1037e:	80 e0       	ldi	r24, 0x00	; 0
   10380:	90 e0       	ldi	r25, 0x00	; 0
   10382:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
			if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10386:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   1038a:	81 30       	cpi	r24, 0x01	; 1
   1038c:	31 f0       	breq	.+12     	; 0x1039a <_Z14Ping_to_Serverv+0x284>
			{
				_kDELAY_MS(120000);
   1038e:	60 ec       	ldi	r22, 0xC0	; 192
   10390:	74 ed       	ldi	r23, 0xD4	; 212
   10392:	81 e0       	ldi	r24, 0x01	; 1
   10394:	90 e0       	ldi	r25, 0x00	; 0
   10396:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
			}
			
			Reset_Buffer();
   1039a:	0e 94 d8 67 	call	0xcfb0	; 0xcfb0 <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("ATE0"));
   1039e:	68 e7       	ldi	r22, 0x78	; 120
   103a0:	77 e2       	ldi	r23, 0x27	; 39
   103a2:	83 e8       	ldi	r24, 0x83	; 131
   103a4:	96 e1       	ldi	r25, 0x16	; 22
   103a6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
   103aa:	02 e0       	ldi	r16, 0x02	; 2
   103ac:	28 eb       	ldi	r18, 0xB8	; 184
   103ae:	3b e0       	ldi	r19, 0x0B	; 11
   103b0:	40 e0       	ldi	r20, 0x00	; 0
   103b2:	50 e0       	ldi	r21, 0x00	; 0
   103b4:	6e e1       	ldi	r22, 0x1E	; 30
   103b6:	73 e0       	ldi	r23, 0x03	; 3
   103b8:	80 e0       	ldi	r24, 0x00	; 0
   103ba:	90 e0       	ldi	r25, 0x00	; 0
   103bc:	0e 94 3d 68 	call	0xd07a	; 0xd07a <_Z15Send_AT_CommandPcS_S_jh>
	}
	else
	{
		return 1;
	}
}
   103c0:	8c 2f       	mov	r24, r28
   103c2:	cf 91       	pop	r28
   103c4:	0f 91       	pop	r16
   103c6:	08 95       	ret

000103c8 <_Z11Init_Brokerv>:
	
}


bool Init_Broker(void)
{
   103c8:	2f 92       	push	r2
   103ca:	3f 92       	push	r3
   103cc:	4f 92       	push	r4
   103ce:	5f 92       	push	r5
   103d0:	6f 92       	push	r6
   103d2:	7f 92       	push	r7
   103d4:	8f 92       	push	r8
   103d6:	9f 92       	push	r9
   103d8:	af 92       	push	r10
   103da:	bf 92       	push	r11
   103dc:	cf 92       	push	r12
   103de:	df 92       	push	r13
   103e0:	ef 92       	push	r14
   103e2:	ff 92       	push	r15
   103e4:	0f 93       	push	r16
   103e6:	1f 93       	push	r17
   103e8:	cf 93       	push	r28
   103ea:	df 93       	push	r29
   103ec:	cd b7       	in	r28, 0x3d	; 61
   103ee:	de b7       	in	r29, 0x3e	; 62
   103f0:	a8 97       	sbiw	r28, 0x28	; 40
   103f2:	0f b6       	in	r0, 0x3f	; 63
   103f4:	f8 94       	cli
   103f6:	de bf       	out	0x3e, r29	; 62
   103f8:	0f be       	out	0x3f, r0	; 63
   103fa:	cd bf       	out	0x3d, r28	; 61
	static unsigned char connect_count;
	static unsigned int loop_count;
	unsigned long previous;
	
	if(_sRuble_Parameters.Ruble_Registration_Status == _eRUBLE_REGISTERED)
   103fc:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10400:	81 30       	cpi	r24, 0x01	; 1
   10402:	89 f4       	brne	.+34     	; 0x10426 <_Z11Init_Brokerv+0x5e>
	{
		 if(Ping_to_Server())
   10404:	88 de       	rcall	.-752    	; 0x10116 <_Z14Ping_to_Serverv>
   10406:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1040a:	88 23       	and	r24, r24
   1040c:	c9 f0       	breq	.+50     	; 0x10440 <_Z11Init_Brokerv+0x78>
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1040e:	91 30       	cpi	r25, 0x01	; 1
   10410:	51 f4       	brne	.+20     	; 0x10426 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Ping to server 0");                /* for debugging purpose */
   10412:	6a eb       	ldi	r22, 0xBA	; 186
   10414:	78 e2       	ldi	r23, 0x28	; 40
   10416:	86 ec       	ldi	r24, 0xC6	; 198
   10418:	94 e1       	ldi	r25, 0x14	; 20
   1041a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
				 _kSERIAL_MON_CLEAR();
   1041e:	86 ec       	ldi	r24, 0xC6	; 198
   10420:	94 e1       	ldi	r25, 0x14	; 20
   10422:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
		 
		
		//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10426:	32 e6       	ldi	r19, 0x62	; 98
   10428:	a3 2e       	mov	r10, r19
   1042a:	3f e0       	ldi	r19, 0x0F	; 15
   1042c:	b3 2e       	mov	r11, r19
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
		
		//sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1042e:	4e ec       	ldi	r20, 0xCE	; 206
   10430:	e4 2e       	mov	r14, r20
   10432:	43 e1       	ldi	r20, 0x13	; 19
   10434:	f4 2e       	mov	r15, r20
			if(Subscribed_data_check())
			{
				if(Seperate_Out_Sub_Data())
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10436:	50 ed       	ldi	r21, 0xD0	; 208
   10438:	85 2e       	mov	r8, r21
   1043a:	5f e0       	ldi	r21, 0x0F	; 15
   1043c:	95 2e       	mov	r9, r21
   1043e:	18 c0       	rjmp	.+48     	; 0x10470 <_Z11Init_Brokerv+0xa8>
				 _kSERIAL_MON_CLEAR();
			 }
		 }
		 else
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10440:	91 30       	cpi	r25, 0x01	; 1
   10442:	89 f7       	brne	.-30     	; 0x10426 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Fail to Ping server 0");                /* for debugging purpose */
   10444:	64 ea       	ldi	r22, 0xA4	; 164
   10446:	78 e2       	ldi	r23, 0x28	; 40
   10448:	e6 cf       	rjmp	.-52     	; 0x10416 <_Z11Init_Brokerv+0x4e>
					 _kSERIAL_MON_CLEAR();
				 }
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1044a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1044e:	81 30       	cpi	r24, 0x01	; 1
   10450:	51 f4       	brne	.+20     	; 0x10466 <_Z11Init_Brokerv+0x9e>
				 {
					_kSERAIL_MON_WRITE("Fail to Ping server");                /* for debugging purpose */
   10452:	61 e8       	ldi	r22, 0x81	; 129
   10454:	78 e2       	ldi	r23, 0x28	; 40
   10456:	86 ec       	ldi	r24, 0xC6	; 198
   10458:	94 e1       	ldi	r25, 0x14	; 20
   1045a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
   1045e:	86 ec       	ldi	r24, 0xC6	; 198
   10460:	94 e1       	ldi	r25, 0x14	; 20
   10462:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   10466:	80 91 a4 0d 	lds	r24, 0x0DA4	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
   1046a:	83 30       	cpi	r24, 0x03	; 3
   1046c:	08 f4       	brcc	.+2      	; 0x10470 <_Z11Init_Brokerv+0xa8>
   1046e:	5c c0       	rjmp	.+184    	; 0x10528 <_Z11Init_Brokerv+0x160>
	
	//_kLCD_CLEAR();
	
	unsigned char temp_topic[40];   
	
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
   10470:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10474:	8e 01       	movw	r16, r28
   10476:	0f 5f       	subi	r16, 0xFF	; 255
   10478:	1f 4f       	sbci	r17, 0xFF	; 255
   1047a:	81 30       	cpi	r24, 0x01	; 1
   1047c:	f1 f1       	breq	.+124    	; 0x104fa <_Z11Init_Brokerv+0x132>
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
   1047e:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
		 
		
		//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10482:	8e e6       	ldi	r24, 0x6E	; 110
   10484:	d5 01       	movw	r26, r10
   10486:	1d 92       	st	X+, r1
   10488:	8a 95       	dec	r24
   1048a:	e9 f7       	brne	.-6      	; 0x10486 <_Z11Init_Brokerv+0xbe>
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   1048c:	88 e2       	ldi	r24, 0x28	; 40
   1048e:	f8 01       	movw	r30, r16
   10490:	11 92       	st	Z+, r1
   10492:	8a 95       	dec	r24
   10494:	e9 f7       	brne	.-6      	; 0x10490 <_Z11Init_Brokerv+0xc8>
		
		//sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   10496:	67 e8       	ldi	r22, 0x87	; 135
   10498:	76 e0       	ldi	r23, 0x06	; 6
   1049a:	82 e6       	ldi	r24, 0x62	; 98
   1049c:	9f e0       	ldi	r25, 0x0F	; 15
   1049e:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   104a2:	ff 92       	push	r15
   104a4:	ef 92       	push	r14
   104a6:	8a e9       	ldi	r24, 0x9A	; 154
   104a8:	96 e0       	ldi	r25, 0x06	; 6
   104aa:	9f 93       	push	r25
   104ac:	8f 93       	push	r24
   104ae:	1f 93       	push	r17
   104b0:	0f 93       	push	r16
   104b2:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
		//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
   104b6:	62 e6       	ldi	r22, 0x62	; 98
   104b8:	7f e0       	ldi	r23, 0x0F	; 15
   104ba:	cb 01       	movw	r24, r22
   104bc:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
		
		previous = millis();
   104c0:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
   104c4:	2b 01       	movw	r4, r22
   104c6:	3c 01       	movw	r6, r24
   104c8:	0f 90       	pop	r0
   104ca:	0f 90       	pop	r0
   104cc:	0f 90       	pop	r0
   104ce:	0f 90       	pop	r0
   104d0:	0f 90       	pop	r0
   104d2:	0f 90       	pop	r0
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   104d4:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
   104d8:	dc 01       	movw	r26, r24
   104da:	cb 01       	movw	r24, r22
   104dc:	84 19       	sub	r24, r4
   104de:	95 09       	sbc	r25, r5
   104e0:	a6 09       	sbc	r26, r6
   104e2:	b7 09       	sbc	r27, r7
   104e4:	88 39       	cpi	r24, 0x98	; 152
   104e6:	9a 43       	sbci	r25, 0x3A	; 58
   104e8:	a1 05       	cpc	r26, r1
   104ea:	b1 05       	cpc	r27, r1
   104ec:	b0 f4       	brcc	.+44     	; 0x1051a <_Z11Init_Brokerv+0x152>
   104ee:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   104f2:	81 30       	cpi	r24, 0x01	; 1
   104f4:	09 f0       	breq	.+2      	; 0x104f8 <_Z11Init_Brokerv+0x130>
   104f6:	65 c0       	rjmp	.+202    	; 0x105c2 <_Z11Init_Brokerv+0x1fa>
   104f8:	10 c0       	rjmp	.+32     	; 0x1051a <_Z11Init_Brokerv+0x152>
				}
			}
			loop_count =0;
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   104fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   104fe:	81 30       	cpi	r24, 0x01	; 1
   10500:	09 f0       	breq	.+2      	; 0x10504 <_Z11Init_Brokerv+0x13c>
   10502:	30 c1       	rjmp	.+608    	; 0x10764 <_Z11Init_Brokerv+0x39c>
	{
		_kSERAIL_MON_WRITE("Ruble controller is registered");                /* for debugging purpose */
   10504:	67 e4       	ldi	r22, 0x47	; 71
   10506:	78 e2       	ldi	r23, 0x28	; 40
   10508:	86 ec       	ldi	r24, 0xC6	; 198
   1050a:	94 e1       	ldi	r25, 0x14	; 20
   1050c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
 		_kSERIAL_MON_CLEAR();
   10510:	86 ec       	ldi	r24, 0xC6	; 198
   10512:	94 e1       	ldi	r25, 0x14	; 20
   10514:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   10518:	25 c1       	rjmp	.+586    	; 0x10764 <_Z11Init_Brokerv+0x39c>
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				}
			}
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   1051a:	10 92 a4 0d 	sts	0x0DA4, r1	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1051e:	8a e9       	ldi	r24, 0x9A	; 154
   10520:	c8 2e       	mov	r12, r24
   10522:	86 e0       	ldi	r24, 0x06	; 6
   10524:	d8 2e       	mov	r13, r24
   10526:	9f cf       	rjmp	.-194    	; 0x10466 <_Z11Init_Brokerv+0x9e>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   10528:	90 91 1f 14 	lds	r25, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   1052c:	91 30       	cpi	r25, 0x01	; 1
   1052e:	09 f4       	brne	.+2      	; 0x10532 <_Z11Init_Brokerv+0x16a>
   10530:	9f cf       	rjmp	.-194    	; 0x10470 <_Z11Init_Brokerv+0xa8>
		{
			connect_count++;                               /* increase each time to maintain the 30 count */                                
   10532:	8f 5f       	subi	r24, 0xFF	; 255
   10534:	80 93 a4 0d 	sts	0x0DA4, r24	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
			 if(Ping_to_Server())
   10538:	ee dd       	rcall	.-1060   	; 0x10116 <_Z14Ping_to_Serverv>
   1053a:	88 23       	and	r24, r24
   1053c:	09 f4       	brne	.+2      	; 0x10540 <_Z11Init_Brokerv+0x178>
   1053e:	85 cf       	rjmp	.-246    	; 0x1044a <_Z11Init_Brokerv+0x82>
			 {
				 _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   10540:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   10544:	88 60       	ori	r24, 0x08	; 8
   10546:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
				 Display_Update_1();   // 20/1/2022
   1054a:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
				 
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1054e:	8e e6       	ldi	r24, 0x6E	; 110
   10550:	d5 01       	movw	r26, r10
   10552:	1d 92       	st	X+, r1
   10554:	8a 95       	dec	r24
   10556:	e9 f7       	brne	.-6      	; 0x10552 <_Z11Init_Brokerv+0x18a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10558:	88 e2       	ldi	r24, 0x28	; 40
   1055a:	f8 01       	movw	r30, r16
   1055c:	11 92       	st	Z+, r1
   1055e:	8a 95       	dec	r24
   10560:	e9 f7       	brne	.-6      	; 0x1055c <_Z11Init_Brokerv+0x194>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   10562:	67 e8       	ldi	r22, 0x87	; 135
   10564:	76 e0       	ldi	r23, 0x06	; 6
   10566:	82 e6       	ldi	r24, 0x62	; 98
   10568:	9f e0       	ldi	r25, 0x0F	; 15
   1056a:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1056e:	ff 92       	push	r15
   10570:	ef 92       	push	r14
   10572:	df 92       	push	r13
   10574:	cf 92       	push	r12
   10576:	1f 93       	push	r17
   10578:	0f 93       	push	r16
   1057a:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
				 //MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   1057e:	62 e6       	ldi	r22, 0x62	; 98
   10580:	7f e0       	ldi	r23, 0x0F	; 15
   10582:	c8 01       	movw	r24, r16
   10584:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
				 
				previous = millis();
   10588:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
   1058c:	2b 01       	movw	r4, r22
   1058e:	3c 01       	movw	r6, r24
   10590:	0f 90       	pop	r0
   10592:	0f 90       	pop	r0
   10594:	0f 90       	pop	r0
   10596:	0f 90       	pop	r0
   10598:	0f 90       	pop	r0
   1059a:	0f 90       	pop	r0
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1059c:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
   105a0:	dc 01       	movw	r26, r24
   105a2:	cb 01       	movw	r24, r22
   105a4:	84 19       	sub	r24, r4
   105a6:	95 09       	sbc	r25, r5
   105a8:	a6 09       	sbc	r26, r6
   105aa:	b7 09       	sbc	r27, r7
   105ac:	88 39       	cpi	r24, 0x98	; 152
   105ae:	9a 43       	sbci	r25, 0x3A	; 58
   105b0:	a1 05       	cpc	r26, r1
   105b2:	b1 05       	cpc	r27, r1
   105b4:	00 f5       	brcc	.+64     	; 0x105f6 <_Z11Init_Brokerv+0x22e>
   105b6:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   105ba:	81 30       	cpi	r24, 0x01	; 1
   105bc:	09 f0       	breq	.+2      	; 0x105c0 <_Z11Init_Brokerv+0x1f8>
   105be:	86 c0       	rjmp	.+268    	; 0x106cc <_Z11Init_Brokerv+0x304>
   105c0:	1a c0       	rjmp	.+52     	; 0x105f6 <_Z11Init_Brokerv+0x22e>
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
		
		previous = millis();
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
		{
			if(Subscribed_data_check())
   105c2:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   105c6:	88 23       	and	r24, r24
   105c8:	09 f4       	brne	.+2      	; 0x105cc <_Z11Init_Brokerv+0x204>
   105ca:	84 cf       	rjmp	.-248    	; 0x104d4 <_Z11Init_Brokerv+0x10c>
			{
				if(Seperate_Out_Sub_Data())
   105cc:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   105d0:	88 23       	and	r24, r24
   105d2:	09 f4       	brne	.+2      	; 0x105d6 <_Z11Init_Brokerv+0x20e>
   105d4:	7f cf       	rjmp	.-258    	; 0x104d4 <_Z11Init_Brokerv+0x10c>
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   105d6:	f4 01       	movw	r30, r8
   105d8:	01 90       	ld	r0, Z+
   105da:	00 20       	and	r0, r0
   105dc:	e9 f7       	brne	.-6      	; 0x105d8 <_Z11Init_Brokerv+0x210>
   105de:	31 97       	sbiw	r30, 0x01	; 1
   105e0:	af 01       	movw	r20, r30
   105e2:	40 5d       	subi	r20, 0xD0	; 208
   105e4:	5f 40       	sbci	r21, 0x0F	; 15
   105e6:	21 e0       	ldi	r18, 0x01	; 1
   105e8:	60 ed       	ldi	r22, 0xD0	; 208
   105ea:	7f e0       	ldi	r23, 0x0F	; 15
   105ec:	82 e6       	ldi	r24, 0x62	; 98
   105ee:	9f e0       	ldi	r25, 0x0F	; 15
   105f0:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   105f4:	6f cf       	rjmp	.-290    	; 0x104d4 <_Z11Init_Brokerv+0x10c>
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						 }
					 }
				}
				 
				 connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   105f6:	10 92 a4 0d 	sts	0x0DA4, r1	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   105fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   105fe:	81 30       	cpi	r24, 0x01	; 1
   10600:	51 f4       	brne	.+20     	; 0x10616 <_Z11Init_Brokerv+0x24e>
				 {
					 _kSERAIL_MON_WRITE("Ping to server");                /* for debugging purpose */
   10602:	65 e9       	ldi	r22, 0x95	; 149
   10604:	78 e2       	ldi	r23, 0x28	; 40
   10606:	86 ec       	ldi	r24, 0xC6	; 198
   10608:	94 e1       	ldi	r25, 0x14	; 20
   1060a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   1060e:	86 ec       	ldi	r24, 0xC6	; 198
   10610:	94 e1       	ldi	r25, 0x14	; 20
   10612:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_CLEAR();
				 }
				 continue;
			 }
			 
			loop_count = 0;
   10616:	10 92 a3 0d 	sts	0x0DA3, r1	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   1061a:	10 92 a2 0d 	sts	0x0DA2, r1	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1061e:	9e e6       	ldi	r25, 0x6E	; 110
   10620:	79 2e       	mov	r7, r25
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10622:	28 e2       	ldi	r18, 0x28	; 40
   10624:	62 2e       	mov	r6, r18
				 continue;
			 }
			 
			loop_count = 0;
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
   10626:	80 91 a2 0d 	lds	r24, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   1062a:	90 91 a3 0d 	lds	r25, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   1062e:	0a 97       	sbiw	r24, 0x0a	; 10
   10630:	08 f0       	brcs	.+2      	; 0x10634 <_Z11Init_Brokerv+0x26c>
   10632:	47 c0       	rjmp	.+142    	; 0x106c2 <_Z11Init_Brokerv+0x2fa>
   10634:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10638:	81 30       	cpi	r24, 0x01	; 1
   1063a:	09 f4       	brne	.+2      	; 0x1063e <_Z11Init_Brokerv+0x276>
   1063c:	42 c0       	rjmp	.+132    	; 0x106c2 <_Z11Init_Brokerv+0x2fa>
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1063e:	d5 01       	movw	r26, r10
   10640:	e7 2d       	mov	r30, r7
   10642:	1d 92       	st	X+, r1
   10644:	ea 95       	dec	r30
   10646:	e9 f7       	brne	.-6      	; 0x10642 <_Z11Init_Brokerv+0x27a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10648:	d8 01       	movw	r26, r16
   1064a:	e6 2d       	mov	r30, r6
   1064c:	1d 92       	st	X+, r1
   1064e:	ea 95       	dec	r30
   10650:	e9 f7       	brne	.-6      	; 0x1064c <_Z11Init_Brokerv+0x284>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   10652:	67 e8       	ldi	r22, 0x87	; 135
   10654:	76 e0       	ldi	r23, 0x06	; 6
   10656:	82 e6       	ldi	r24, 0x62	; 98
   10658:	9f e0       	ldi	r25, 0x0F	; 15
   1065a:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1065e:	ff 92       	push	r15
   10660:	ef 92       	push	r14
   10662:	df 92       	push	r13
   10664:	cf 92       	push	r12
   10666:	1f 93       	push	r17
   10668:	0f 93       	push	r16
   1066a:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
				// MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   1066e:	62 e6       	ldi	r22, 0x62	; 98
   10670:	7f e0       	ldi	r23, 0x0F	; 15
   10672:	c8 01       	movw	r24, r16
   10674:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
				
				loop_count++;
   10678:	80 91 a2 0d 	lds	r24, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   1067c:	90 91 a3 0d 	lds	r25, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   10680:	01 96       	adiw	r24, 0x01	; 1
   10682:	90 93 a3 0d 	sts	0x0DA3, r25	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   10686:	80 93 a2 0d 	sts	0x0DA2, r24	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
				
				previous = millis();
   1068a:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
   1068e:	1b 01       	movw	r2, r22
   10690:	2c 01       	movw	r4, r24
   10692:	0f 90       	pop	r0
   10694:	0f 90       	pop	r0
   10696:	0f 90       	pop	r0
   10698:	0f 90       	pop	r0
   1069a:	0f 90       	pop	r0
   1069c:	0f 90       	pop	r0
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1069e:	0e 94 de d6 	call	0x1adbc	; 0x1adbc <millis>
   106a2:	dc 01       	movw	r26, r24
   106a4:	cb 01       	movw	r24, r22
   106a6:	82 19       	sub	r24, r2
   106a8:	93 09       	sbc	r25, r3
   106aa:	a4 09       	sbc	r26, r4
   106ac:	b5 09       	sbc	r27, r5
   106ae:	88 3a       	cpi	r24, 0xA8	; 168
   106b0:	91 46       	sbci	r25, 0x61	; 97
   106b2:	a1 05       	cpc	r26, r1
   106b4:	b1 05       	cpc	r27, r1
   106b6:	e0 f5       	brcc	.+120    	; 0x10730 <_Z11Init_Brokerv+0x368>
   106b8:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   106bc:	81 30       	cpi	r24, 0x01	; 1
   106be:	01 f5       	brne	.+64     	; 0x10700 <_Z11Init_Brokerv+0x338>
   106c0:	37 c0       	rjmp	.+110    	; 0x10730 <_Z11Init_Brokerv+0x368>
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
					_kSERIAL_MON_CLEAR();
				}
			}
			loop_count =0;
   106c2:	10 92 a3 0d 	sts	0x0DA3, r1	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   106c6:	10 92 a2 0d 	sts	0x0DA2, r1	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   106ca:	cd ce       	rjmp	.-614    	; 0x10466 <_Z11Init_Brokerv+0x9e>
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
				 
				previous = millis();
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{ 
					 if(Subscribed_data_check())
   106cc:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   106d0:	88 23       	and	r24, r24
   106d2:	09 f4       	brne	.+2      	; 0x106d6 <_Z11Init_Brokerv+0x30e>
   106d4:	63 cf       	rjmp	.-314    	; 0x1059c <_Z11Init_Brokerv+0x1d4>
					 {
						 if(Seperate_Out_Sub_Data())
   106d6:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   106da:	88 23       	and	r24, r24
   106dc:	09 f4       	brne	.+2      	; 0x106e0 <_Z11Init_Brokerv+0x318>
   106de:	5e cf       	rjmp	.-324    	; 0x1059c <_Z11Init_Brokerv+0x1d4>
						 {
							 //mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   106e0:	f4 01       	movw	r30, r8
   106e2:	01 90       	ld	r0, Z+
   106e4:	00 20       	and	r0, r0
   106e6:	e9 f7       	brne	.-6      	; 0x106e2 <_Z11Init_Brokerv+0x31a>
   106e8:	31 97       	sbiw	r30, 0x01	; 1
   106ea:	af 01       	movw	r20, r30
   106ec:	40 5d       	subi	r20, 0xD0	; 208
   106ee:	5f 40       	sbci	r21, 0x0F	; 15
   106f0:	21 e0       	ldi	r18, 0x01	; 1
   106f2:	60 ed       	ldi	r22, 0xD0	; 208
   106f4:	7f e0       	ldi	r23, 0x0F	; 15
   106f6:	82 e6       	ldi	r24, 0x62	; 98
   106f8:	9f e0       	ldi	r25, 0x0F	; 15
   106fa:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   106fe:	4e cf       	rjmp	.-356    	; 0x1059c <_Z11Init_Brokerv+0x1d4>
				loop_count++;
				
				previous = millis();
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{
					if(Subscribed_data_check())
   10700:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   10704:	88 23       	and	r24, r24
   10706:	59 f2       	breq	.-106    	; 0x1069e <_Z11Init_Brokerv+0x2d6>
					{
						if(Seperate_Out_Sub_Data())
   10708:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   1070c:	88 23       	and	r24, r24
   1070e:	39 f2       	breq	.-114    	; 0x1069e <_Z11Init_Brokerv+0x2d6>
						{
							//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10710:	f4 01       	movw	r30, r8
   10712:	01 90       	ld	r0, Z+
   10714:	00 20       	and	r0, r0
   10716:	e9 f7       	brne	.-6      	; 0x10712 <_Z11Init_Brokerv+0x34a>
   10718:	31 97       	sbiw	r30, 0x01	; 1
   1071a:	af 01       	movw	r20, r30
   1071c:	40 5d       	subi	r20, 0xD0	; 208
   1071e:	5f 40       	sbci	r21, 0x0F	; 15
   10720:	21 e0       	ldi	r18, 0x01	; 1
   10722:	60 ed       	ldi	r22, 0xD0	; 208
   10724:	7f e0       	ldi	r23, 0x0F	; 15
   10726:	82 e6       	ldi	r24, 0x62	; 98
   10728:	9f e0       	ldi	r25, 0x0F	; 15
   1072a:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   1072e:	b7 cf       	rjmp	.-146    	; 0x1069e <_Z11Init_Brokerv+0x2d6>
						}
					}
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
   10730:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10734:	81 30       	cpi	r24, 0x01	; 1
   10736:	09 f0       	breq	.+2      	; 0x1073a <_Z11Init_Brokerv+0x372>
   10738:	76 cf       	rjmp	.-276    	; 0x10626 <_Z11Init_Brokerv+0x25e>
				{
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
   1073a:	66 e6       	ldi	r22, 0x66	; 102
   1073c:	78 e2       	ldi	r23, 0x28	; 40
   1073e:	86 ec       	ldi	r24, 0xC6	; 198
   10740:	94 e1       	ldi	r25, 0x14	; 20
   10742:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
   10746:	60 91 a2 0d 	lds	r22, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   1074a:	70 91 a3 0d 	lds	r23, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   1074e:	4a e0       	ldi	r20, 0x0A	; 10
   10750:	50 e0       	ldi	r21, 0x00	; 0
   10752:	86 ec       	ldi	r24, 0xC6	; 198
   10754:	94 e1       	ldi	r25, 0x14	; 20
   10756:	0e 94 3a d5 	call	0x1aa74	; 0x1aa74 <_ZN5Print5printEji>
					_kSERIAL_MON_CLEAR();
   1075a:	86 ec       	ldi	r24, 0xC6	; 198
   1075c:	94 e1       	ldi	r25, 0x14	; 20
   1075e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   10762:	61 cf       	rjmp	.-318    	; 0x10626 <_Z11Init_Brokerv+0x25e>

	/******************* published the topic that Ruble is Restarted ********************/
	//unsigned char temp[33];
	//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
	
	memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10764:	8e e6       	ldi	r24, 0x6E	; 110
   10766:	e2 e6       	ldi	r30, 0x62	; 98
   10768:	ff e0       	ldi	r31, 0x0F	; 15
   1076a:	df 01       	movw	r26, r30
   1076c:	1d 92       	st	X+, r1
   1076e:	8a 95       	dec	r24
   10770:	e9 f7       	brne	.-6      	; 0x1076c <_Z11Init_Brokerv+0x3a4>
	sprintf((char *)_gRecvd_Data,"{\"sicca_start\": \"true\"}");
   10772:	69 ea       	ldi	r22, 0xA9	; 169
   10774:	76 e0       	ldi	r23, 0x06	; 6
   10776:	cf 01       	movw	r24, r30
   10778:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
	memset((char *)temp_topic, 0, sizeof(temp_topic));
   1077c:	88 e2       	ldi	r24, 0x28	; 40
   1077e:	f8 01       	movw	r30, r16
   10780:	11 92       	st	Z+, r1
   10782:	8a 95       	dec	r24
   10784:	e9 f7       	brne	.-6      	; 0x10780 <_Z11Init_Brokerv+0x3b8>
	
	sprintf((char *)temp_topic,"SICCA/CONTROLLER/RESTART/%s",_sRuble_Parameters.Ruble_ID);
   10786:	8e ec       	ldi	r24, 0xCE	; 206
   10788:	93 e1       	ldi	r25, 0x13	; 19
   1078a:	9f 93       	push	r25
   1078c:	8f 93       	push	r24
   1078e:	81 ec       	ldi	r24, 0xC1	; 193
   10790:	96 e0       	ldi	r25, 0x06	; 6
   10792:	9f 93       	push	r25
   10794:	8f 93       	push	r24
   10796:	1f 93       	push	r17
   10798:	0f 93       	push	r16
   1079a:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
	
	//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
	
	MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   1079e:	62 e6       	ldi	r22, 0x62	; 98
   107a0:	7f e0       	ldi	r23, 0x0F	; 15
   107a2:	c8 01       	movw	r24, r16
   107a4:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
	
	_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_DATA;
   107a8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   107ac:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   107b0:	84 60       	ori	r24, 0x04	; 4
   107b2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   107b6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
	
}
   107ba:	0f 90       	pop	r0
   107bc:	0f 90       	pop	r0
   107be:	0f 90       	pop	r0
   107c0:	0f 90       	pop	r0
   107c2:	0f 90       	pop	r0
   107c4:	0f 90       	pop	r0
   107c6:	80 e0       	ldi	r24, 0x00	; 0
   107c8:	a8 96       	adiw	r28, 0x28	; 40
   107ca:	0f b6       	in	r0, 0x3f	; 63
   107cc:	f8 94       	cli
   107ce:	de bf       	out	0x3e, r29	; 62
   107d0:	0f be       	out	0x3f, r0	; 63
   107d2:	cd bf       	out	0x3d, r28	; 61
   107d4:	df 91       	pop	r29
   107d6:	cf 91       	pop	r28
   107d8:	1f 91       	pop	r17
   107da:	0f 91       	pop	r16
   107dc:	ff 90       	pop	r15
   107de:	ef 90       	pop	r14
   107e0:	df 90       	pop	r13
   107e2:	cf 90       	pop	r12
   107e4:	bf 90       	pop	r11
   107e6:	af 90       	pop	r10
   107e8:	9f 90       	pop	r9
   107ea:	8f 90       	pop	r8
   107ec:	7f 90       	pop	r7
   107ee:	6f 90       	pop	r6
   107f0:	5f 90       	pop	r5
   107f2:	4f 90       	pop	r4
   107f4:	3f 90       	pop	r3
   107f6:	2f 90       	pop	r2
   107f8:	08 95       	ret

000107fa <initVariant>:
   107fa:	08 95       	ret

000107fc <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
   107fc:	0e 94 54 d7 	call	0x1aea8	; 0x1aea8 <init>

	initVariant();
   10800:	fc df       	rcall	.-8      	; 0x107fa <initVariant>
 
	static uint32_t tickcount;
	static unsigned char timer_count,i;
	i = 0;
	
	Interrupt_Time_Out = 1300;
   10802:	84 e1       	ldi	r24, 0x14	; 20
   10804:	95 e0       	ldi	r25, 0x05	; 5
   10806:	90 93 e3 0c 	sts	0x0CE3, r25	; 0x800ce3 <Interrupt_Time_Out+0x1>
   1080a:	80 93 e2 0c 	sts	0x0CE2, r24	; 0x800ce2 <Interrupt_Time_Out>
	
	Initialise_Hardware();
   1080e:	0e 94 20 70 	call	0xe040	; 0xe040 <_Z19Initialise_Hardwarev>
	
	Param_Initialization();
   10812:	b5 d9       	rcall	.-3222   	; 0xfb7e <_Z20Param_Initializationv>
	if(_sRuble_Parameters.SMS_Alert_Start == 0x08)
	{
		//_kSEND_SMS(_sNetwork_and_Usr_Info.User_Sim_No,"RUBLE RESTART");
	}
	
	while (_kSERAIL_AT_CHECK())
   10814:	83 e8       	ldi	r24, 0x83	; 131
   10816:	96 e1       	ldi	r25, 0x16	; 22
   10818:	0e 94 64 d2 	call	0x1a4c8	; 0x1a4c8 <_ZN14HardwareSerial9availableEv>
   1081c:	89 2b       	or	r24, r25
   1081e:	29 f0       	breq	.+10     	; 0x1082a <main+0x2e>
	{
		_kSERIAL_AT_READ();
   10820:	83 e8       	ldi	r24, 0x83	; 131
   10822:	96 e1       	ldi	r25, 0x16	; 22
   10824:	0e 94 85 d2 	call	0x1a50a	; 0x1a50a <_ZN14HardwareSerial4readEv>
	if(_sRuble_Parameters.SMS_Alert_Start == 0x08)
	{
		//_kSEND_SMS(_sNetwork_and_Usr_Info.User_Sim_No,"RUBLE RESTART");
	}
	
	while (_kSERAIL_AT_CHECK())
   10828:	f5 cf       	rjmp	.-22     	; 0x10814 <main+0x18>
	{
		_kSERIAL_AT_READ();
	}
	
	Reading_Time = _kSET;
   1082a:	c1 e0       	ldi	r28, 0x01	; 1
   1082c:	c0 93 e1 0c 	sts	0x0CE1, r28	; 0x800ce1 <Reading_Time>
	Get_Local_Time();
   10830:	0e 94 6a 60 	call	0xc0d4	; 0xc0d4 <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   10834:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
	Check_GSM_Signal();
   10838:	0e 94 21 60 	call	0xc042	; 0xc042 <_Z16Check_GSM_Signalv>
	
	Start_Display_In_Interrupt = 1;
   1083c:	c0 93 c2 0c 	sts	0x0CC2, r28	; 0x800cc2 <Start_Display_In_Interrupt>
   _sRuble_Parameters.Display_Refresh = _kSET;
   10840:	c0 93 6d 14 	sts	0x146D, r28	; 0x80146d <_sRuble_Parameters+0xbf>
   
	//Display_Update_1();    
	tickcount = g_uTick;
   10844:	80 91 d3 0c 	lds	r24, 0x0CD3	; 0x800cd3 <g_uTick>
   10848:	90 91 d4 0c 	lds	r25, 0x0CD4	; 0x800cd4 <g_uTick+0x1>
   1084c:	a0 91 d5 0c 	lds	r26, 0x0CD5	; 0x800cd5 <g_uTick+0x2>
   10850:	b0 91 d6 0c 	lds	r27, 0x0CD6	; 0x800cd6 <g_uTick+0x3>
	_sRuble_Parameters.Line_Fault_Flag = _kRESET;
   10854:	10 92 70 14 	sts	0x1470, r1	; 0x801470 <_sRuble_Parameters+0xc2>
	_sRuble_Parameters.Pump_On_Flag =_ePUMP_OFF;
   10858:	84 e0       	ldi	r24, 0x04	; 4
   1085a:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
   1085e:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
   10862:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
   10866:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
   1086a:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
   1086e:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
   10872:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
   10876:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
	
	Valve_Grouping_Handler(_kFORCEFULYY_OFF);
   1087a:	83 e0       	ldi	r24, 0x03	; 3
   1087c:	0e 94 8a ae 	call	0x15d14	; 0x15d14 <_Z22Valve_Grouping_Handlerh>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10880:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10884:	81 30       	cpi	r24, 0x01	; 1
   10886:	c1 f4       	brne	.+48     	; 0x108b8 <main+0xbc>
	{
		_kSERAIL_MON_WRITE("NOMINAL CURRENT : ");
   10888:	6e ed       	ldi	r22, 0xDE	; 222
   1088a:	78 e2       	ldi	r23, 0x28	; 40
   1088c:	86 ec       	ldi	r24, 0xC6	; 198
   1088e:	94 e1       	ldi	r25, 0x14	; 20
   10890:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sPump_Parameter.Pump_Nominal_Current);
   10894:	40 91 a4 13 	lds	r20, 0x13A4	; 0x8013a4 <_sPump_Parameter>
   10898:	50 91 a5 13 	lds	r21, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
   1089c:	60 91 a6 13 	lds	r22, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
   108a0:	70 91 a7 13 	lds	r23, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
   108a4:	22 e0       	ldi	r18, 0x02	; 2
   108a6:	30 e0       	ldi	r19, 0x00	; 0
   108a8:	86 ec       	ldi	r24, 0xC6	; 198
   108aa:	94 e1       	ldi	r25, 0x14	; 20
   108ac:	0e 94 84 d6 	call	0x1ad08	; 0x1ad08 <_ZN5Print7printlnEdi>
		_kSERIAL_MON_CLEAR();
   108b0:	86 ec       	ldi	r24, 0xC6	; 198
   108b2:	94 e1       	ldi	r25, 0x14	; 20
   108b4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
   108b8:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   108bc:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sRuble_Parameters.Wireless_Pump_Operate_Timer = _kMAX_TIME_TO_MONITOR_WIRELESS_PUMP;
   108c0:	86 e9       	ldi	r24, 0x96	; 150
   108c2:	90 e0       	ldi	r25, 0x00	; 0
   108c4:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   108c8:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   108cc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   108d0:	81 30       	cpi	r24, 0x01	; 1
   108d2:	91 f4       	brne	.+36     	; 0x108f8 <main+0xfc>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
   108d4:	6b ec       	ldi	r22, 0xCB	; 203
   108d6:	78 e2       	ldi	r23, 0x28	; 40
   108d8:	86 ec       	ldi	r24, 0xC6	; 198
   108da:	94 e1       	ldi	r25, 0x14	; 20
   108dc:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
   108e0:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
   108e4:	4a e0       	ldi	r20, 0x0A	; 10
   108e6:	50 e0       	ldi	r21, 0x00	; 0
   108e8:	86 ec       	ldi	r24, 0xC6	; 198
   108ea:	94 e1       	ldi	r25, 0x14	; 20
   108ec:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
   108f0:	86 ec       	ldi	r24, 0xC6	; 198
   108f2:	94 e1       	ldi	r25, 0x14	; 20
   108f4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
	}
	//Turn_Off_All_Pump_For_Safety();
	
	_sSchedules.Shedule_Run_Status_Is_Triggered  = _kRESET;
   108f8:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sRuble_Parameters.Immediately_Turn_Off_Pump = _kRESET;
   108fc:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
	_sRuble_Parameters.Wireless_Pump_Command     = _kRESET;
   10900:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
	_sRuble_Parameters.Electricity_Status        = _kON;
   10904:	c1 e0       	ldi	r28, 0x01	; 1
   10906:	c0 93 6a 14 	sts	0x146A, r28	; 0x80146a <_sRuble_Parameters+0xbc>
	
	Select_Operation_Mode();
   1090a:	0e 94 df c1 	call	0x183be	; 0x183be <_Z21Select_Operation_Modev>
	
	//_sRuble_Parameters.By_Pass_CT = _kRESET;
	//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status         = _kRESET;
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   1090e:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status  = _kRESET;
   10912:	10 92 54 0e 	sts	0x0E54, r1	; 0x800e54 <_sExtra_Plot+0x6c>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _eSTOP_EXTRA_PLOT_OPERATION;
   10916:	c0 93 56 0e 	sts	0x0E56, r28	; 0x800e56 <_sExtra_Plot+0x6e>
	
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   1091a:	10 92 03 0e 	sts	0x0E03, r1	; 0x800e03 <_sExtra_Plot+0x1b>
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
   1091e:	85 e0       	ldi	r24, 0x05	; 5
   10920:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
	
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10924:	10 92 39 0e 	sts	0x0E39, r1	; 0x800e39 <_sExtra_Plot+0x51>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10928:	10 92 52 0e 	sts	0x0E52, r1	; 0x800e52 <_sExtra_Plot+0x6a>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kRESET;
   1092c:	10 92 3b 0e 	sts	0x0E3B, r1	; 0x800e3b <_sExtra_Plot+0x53>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _kRESET;
   10930:	10 92 53 0e 	sts	0x0E53, r1	; 0x800e53 <_sExtra_Plot+0x6b>
	
	
	
	delay(5000);
   10934:	68 e8       	ldi	r22, 0x88	; 136
   10936:	73 e1       	ldi	r23, 0x13	; 19
   10938:	80 e0       	ldi	r24, 0x00	; 0
   1093a:	90 e0       	ldi	r25, 0x00	; 0
   1093c:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
	Reading_Time = _kSET;
   10940:	c0 93 e1 0c 	sts	0x0CE1, r28	; 0x800ce1 <Reading_Time>
	Get_Local_Time();
   10944:	0e 94 6a 60 	call	0xc0d4	; 0xc0d4 <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   10948:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
// 	delay(3000);  /* Done so that the Arduino doesn't keep resetting infinitely in case of wrong configuration */
// 	wdt_enable(WDTO_8S);
	//wdt_reset();
	
	unsigned int temp;
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0] !=0 &&
   1094c:	80 91 60 0e 	lds	r24, 0x0E60	; 0x800e60 <_sExtra_Plot+0x78>
   10950:	90 91 61 0e 	lds	r25, 0x0E61	; 0x800e61 <_sExtra_Plot+0x79>
   10954:	00 97       	sbiw	r24, 0x00	; 0
   10956:	01 f1       	breq	.+64     	; 0x10998 <main+0x19c>
   10958:	20 91 55 0e 	lds	r18, 0x0E55	; 0x800e55 <_sExtra_Plot+0x6d>
   1095c:	29 36       	cpi	r18, 0x69	; 105
   1095e:	e1 f4       	brne	.+56     	; 0x10998 <main+0x19c>
	(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER))
	{
		//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
		temp =  _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Max_Value[0];
		_sSchedules.Flush_Schedule_In_Every = temp *3600;
   10960:	60 91 66 0e 	lds	r22, 0x0E66	; 0x800e66 <_sExtra_Plot+0x7e>
   10964:	70 91 67 0e 	lds	r23, 0x0E67	; 0x800e67 <_sExtra_Plot+0x7f>
   10968:	40 e1       	ldi	r20, 0x10	; 16
   1096a:	5e e0       	ldi	r21, 0x0E	; 14
   1096c:	64 9f       	mul	r22, r20
   1096e:	90 01       	movw	r18, r0
   10970:	65 9f       	mul	r22, r21
   10972:	30 0d       	add	r19, r0
   10974:	74 9f       	mul	r23, r20
   10976:	30 0d       	add	r19, r0
   10978:	11 24       	eor	r1, r1
   1097a:	30 93 e9 0b 	sts	0x0BE9, r19	; 0x800be9 <_sSchedules+0x2cb>
   1097e:	20 93 e8 0b 	sts	0x0BE8, r18	; 0x800be8 <_sSchedules+0x2ca>
		temp = _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0];
		_sSchedules.Flush_Schedule_For = temp * 60;
   10982:	4c e3       	ldi	r20, 0x3C	; 60
   10984:	48 9f       	mul	r20, r24
   10986:	90 01       	movw	r18, r0
   10988:	49 9f       	mul	r20, r25
   1098a:	30 0d       	add	r19, r0
   1098c:	11 24       	eor	r1, r1
   1098e:	30 93 eb 0b 	sts	0x0BEB, r19	; 0x800beb <_sSchedules+0x2cd>
   10992:	20 93 ea 0b 	sts	0x0BEA, r18	; 0x800bea <_sSchedules+0x2cc>
   10996:	08 c0       	rjmp	.+16     	; 0x109a8 <main+0x1ac>
	}
	else
	{
		_sSchedules.Flush_Schedule_In_Every = 0;
   10998:	10 92 e9 0b 	sts	0x0BE9, r1	; 0x800be9 <_sSchedules+0x2cb>
   1099c:	10 92 e8 0b 	sts	0x0BE8, r1	; 0x800be8 <_sSchedules+0x2ca>
		_sSchedules.Flush_Schedule_For = 0;
   109a0:	10 92 eb 0b 	sts	0x0BEB, r1	; 0x800beb <_sSchedules+0x2cd>
   109a4:	10 92 ea 0b 	sts	0x0BEA, r1	; 0x800bea <_sSchedules+0x2cc>
	}
	
	_gStart_Wdt = _kSET;
   109a8:	81 e0       	ldi	r24, 0x01	; 1
   109aa:	80 93 e8 0c 	sts	0x0CE8, r24	; 0x800ce8 <_gStart_Wdt>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
   109ae:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	
	_gStart_Monitoring_Three_Phase = 0;
   109b2:	10 92 e5 0c 	sts	0x0CE5, r1	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
	_gTimer_For_Three_Phase_Testing = _kRESET;
   109b6:	10 92 e4 0c 	sts	0x0CE4, r1	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
			Keeps_Monitor_Server_Connection();	
			
			if(timer_count > 80)           /* update in every 1 minute */
			{
				timer_count = 0;
				Reading_Time = _kSET;
   109ba:	11 e0       	ldi	r17, 0x01	; 1
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   109bc:	c0 ed       	ldi	r28, 0xD0	; 208
   109be:	df e0       	ldi	r29, 0x0F	; 15
	_gTimer_For_Three_Phase_Testing = _kRESET;
	
	
	while (1)
	{
		if(_g_1Sec_Time)
   109c0:	80 91 cf 0c 	lds	r24, 0x0CCF	; 0x800ccf <_g_1Sec_Time>
   109c4:	90 91 d0 0c 	lds	r25, 0x0CD0	; 0x800cd0 <_g_1Sec_Time+0x1>
   109c8:	a0 91 d1 0c 	lds	r26, 0x0CD1	; 0x800cd1 <_g_1Sec_Time+0x2>
   109cc:	b0 91 d2 0c 	lds	r27, 0x0CD2	; 0x800cd2 <_g_1Sec_Time+0x3>
   109d0:	89 2b       	or	r24, r25
   109d2:	8a 2b       	or	r24, r26
   109d4:	8b 2b       	or	r24, r27
   109d6:	09 f4       	brne	.+2      	; 0x109da <main+0x1de>
   109d8:	46 c0       	rjmp	.+140    	; 0x10a66 <main+0x26a>
		{
			_g_1Sec_Time = _kRESET;
   109da:	10 92 cf 0c 	sts	0x0CCF, r1	; 0x800ccf <_g_1Sec_Time>
   109de:	10 92 d0 0c 	sts	0x0CD0, r1	; 0x800cd0 <_g_1Sec_Time+0x1>
   109e2:	10 92 d1 0c 	sts	0x0CD1, r1	; 0x800cd1 <_g_1Sec_Time+0x2>
   109e6:	10 92 d2 0c 	sts	0x0CD2, r1	; 0x800cd2 <_g_1Sec_Time+0x3>
			tickcount = g_uTick;
   109ea:	80 91 d3 0c 	lds	r24, 0x0CD3	; 0x800cd3 <g_uTick>
   109ee:	90 91 d4 0c 	lds	r25, 0x0CD4	; 0x800cd4 <g_uTick+0x1>
   109f2:	a0 91 d5 0c 	lds	r26, 0x0CD5	; 0x800cd5 <g_uTick+0x2>
   109f6:	b0 91 d6 0c 	lds	r27, 0x0CD6	; 0x800cd6 <g_uTick+0x3>
			timer_count++;
   109fa:	80 91 cf 0d 	lds	r24, 0x0DCF	; 0x800dcf <_ZZ4mainE11timer_count>
   109fe:	8f 5f       	subi	r24, 0xFF	; 255
   10a00:	80 93 cf 0d 	sts	0x0DCF, r24	; 0x800dcf <_ZZ4mainE11timer_count>
			
			_gWdt_Counter = 0;
   10a04:	10 92 ea 0c 	sts	0x0CEA, r1	; 0x800cea <_gWdt_Counter+0x1>
   10a08:	10 92 e9 0c 	sts	0x0CE9, r1	; 0x800ce9 <_gWdt_Counter>
			
			Publish_Data();
   10a0c:	0e 94 8f a4 	call	0x1491e	; 0x1491e <_Z12Publish_Datav>
			//Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_ePUBLSIH_DATA);
			
			Lora_Operation();
   10a10:	0e 94 f1 cf 	call	0x19fe2	; 0x19fe2 <_Z14Lora_Operationv>
			
			Run_Extra_Plot_Operation();	
   10a14:	0e 94 ad ca 	call	0x1955a	; 0x1955a <_Z24Run_Extra_Plot_Operationv>
			
			Run_Operation();             /* Run the operation as per the selected mode */
   10a18:	0e 94 9e c5 	call	0x18b3c	; 0x18b3c <_Z13Run_Operationv>
			
		   /* read strength of GSM signal and update the display update variable */
			
			Display_Update_1();
   10a1c:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
			
			Keeps_Monitor_Server_Connection();	
   10a20:	0e 94 43 74 	call	0xe886	; 0xe886 <_Z31Keeps_Monitor_Server_Connectionv>
			
			if(timer_count > 80)           /* update in every 1 minute */
   10a24:	80 91 cf 0d 	lds	r24, 0x0DCF	; 0x800dcf <_ZZ4mainE11timer_count>
   10a28:	81 35       	cpi	r24, 0x51	; 81
   10a2a:	58 f0       	brcs	.+22     	; 0x10a42 <main+0x246>
			{
				timer_count = 0;
   10a2c:	10 92 cf 0d 	sts	0x0DCF, r1	; 0x800dcf <_ZZ4mainE11timer_count>
				Reading_Time = _kSET;
   10a30:	10 93 e1 0c 	sts	0x0CE1, r17	; 0x800ce1 <Reading_Time>
				Get_Local_Time();
   10a34:	0e 94 6a 60 	call	0xc0d4	; 0xc0d4 <_Z14Get_Local_Timev>
				Reading_Time = _kRESET;
   10a38:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
				Hard_Coded_Flush_Valve(_kON);	
   10a3c:	81 e0       	ldi	r24, 0x01	; 1
   10a3e:	0e 94 22 24 	call	0x4844	; 0x4844 <_Z22Hard_Coded_Flush_Valveh>
			}
			
			Wireless_Motor_Enable_Disable_Check();  /* changed */
   10a42:	0e 94 24 24 	call	0x4848	; 0x4848 <_Z35Wireless_Motor_Enable_Disable_Checkv>
			
			Handle_Wireless_Pump();
   10a46:	0e 94 66 cb 	call	0x196cc	; 0x196cc <_Z20Handle_Wireless_Pumpv>
			
			Plot_Status_List_Monitor();
   10a4a:	0e 94 46 cc 	call	0x1988c	; 0x1988c <_Z24Plot_Status_List_Monitorv>
			
			Pump_Status_List_Monitor();
   10a4e:	0e 94 e9 cb 	call	0x197d2	; 0x197d2 <_Z24Pump_Status_List_Monitorv>
			
			Pump_Run_Monitoring();
   10a52:	0e 94 a7 74 	call	0xe94e	; 0xe94e <_Z19Pump_Run_Monitoringv>
			
			Flush_Controlling();
   10a56:	0e 94 ee 24 	call	0x49dc	; 0x49dc <_Z17Flush_Controllingv>
			
//			Debug_Check();
			
			Calibration_Of_Pump();
   10a5a:	0e 94 63 75 	call	0xeac6	; 0xeac6 <_Z19Calibration_Of_Pumpv>
			
			Select_Operation_Mode();
   10a5e:	0e 94 df c1 	call	0x183be	; 0x183be <_Z21Select_Operation_Modev>
			
			Faults_Handler();
   10a62:	0e 94 3b 77 	call	0xee76	; 0xee76 <_Z14Faults_Handlerv>
			
		}	
		
		if(Subscribed_data_check())
   10a66:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   10a6a:	88 23       	and	r24, r24
   10a6c:	09 f4       	brne	.+2      	; 0x10a70 <main+0x274>
   10a6e:	a8 cf       	rjmp	.-176    	; 0x109c0 <main+0x1c4>
		{
			if(Seperate_Out_Sub_Data())
   10a70:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   10a74:	88 23       	and	r24, r24
   10a76:	09 f4       	brne	.+2      	; 0x10a7a <main+0x27e>
   10a78:	a3 cf       	rjmp	.-186    	; 0x109c0 <main+0x1c4>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10a7a:	fe 01       	movw	r30, r28
   10a7c:	01 90       	ld	r0, Z+
   10a7e:	00 20       	and	r0, r0
   10a80:	e9 f7       	brne	.-6      	; 0x10a7c <main+0x280>
   10a82:	31 97       	sbiw	r30, 0x01	; 1
   10a84:	af 01       	movw	r20, r30
   10a86:	40 5d       	subi	r20, 0xD0	; 208
   10a88:	5f 40       	sbci	r21, 0x0F	; 15
   10a8a:	21 e0       	ldi	r18, 0x01	; 1
   10a8c:	60 ed       	ldi	r22, 0xD0	; 208
   10a8e:	7f e0       	ldi	r23, 0x0F	; 15
   10a90:	82 e6       	ldi	r24, 0x62	; 98
   10a92:	9f e0       	ldi	r25, 0x0F	; 15
   10a94:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   10a98:	93 cf       	rjmp	.-218    	; 0x109c0 <main+0x1c4>

00010a9a <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj>:
				/* if all valve gets on */
			
			}
		}
	}
}
   10a9a:	fc 01       	movw	r30, r24
   10a9c:	26 81       	ldd	r18, Z+6	; 0x06
   10a9e:	37 81       	ldd	r19, Z+7	; 0x07
   10aa0:	62 0f       	add	r22, r18
   10aa2:	73 1f       	adc	r23, r19
   10aa4:	84 81       	ldd	r24, Z+4	; 0x04
   10aa6:	95 81       	ldd	r25, Z+5	; 0x05
   10aa8:	86 17       	cp	r24, r22
   10aaa:	97 07       	cpc	r25, r23
   10aac:	38 f0       	brcs	.+14     	; 0x10abc <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj+0x22>
   10aae:	82 81       	ldd	r24, Z+2	; 0x02
   10ab0:	93 81       	ldd	r25, Z+3	; 0x03
   10ab2:	77 83       	std	Z+7, r23	; 0x07
   10ab4:	66 83       	std	Z+6, r22	; 0x06
   10ab6:	82 0f       	add	r24, r18
   10ab8:	93 1f       	adc	r25, r19
   10aba:	08 95       	ret
   10abc:	80 e0       	ldi	r24, 0x00	; 0
   10abe:	90 e0       	ldi	r25, 0x00	; 0
   10ac0:	08 95       	ret

00010ac2 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>:
   10ac2:	77 fd       	sbrc	r23, 7
   10ac4:	06 c0       	rjmp	.+12     	; 0x10ad2 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x10>
   10ac6:	ab 01       	movw	r20, r22
   10ac8:	77 0f       	add	r23, r23
   10aca:	66 0b       	sbc	r22, r22
   10acc:	77 0b       	sbc	r23, r23
   10ace:	24 e0       	ldi	r18, 0x04	; 4
   10ad0:	09 c0       	rjmp	.+18     	; 0x10ae4 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x22>
   10ad2:	44 27       	eor	r20, r20
   10ad4:	55 27       	eor	r21, r21
   10ad6:	46 1b       	sub	r20, r22
   10ad8:	57 0b       	sbc	r21, r23
   10ada:	05 2e       	mov	r0, r21
   10adc:	00 0c       	add	r0, r0
   10ade:	66 0b       	sbc	r22, r22
   10ae0:	77 0b       	sbc	r23, r23
   10ae2:	25 e0       	ldi	r18, 0x05	; 5
   10ae4:	fc 01       	movw	r30, r24
   10ae6:	20 83       	st	Z, r18
   10ae8:	41 83       	std	Z+1, r20	; 0x01
   10aea:	52 83       	std	Z+2, r21	; 0x02
   10aec:	63 83       	std	Z+3, r22	; 0x03
   10aee:	74 83       	std	Z+4, r23	; 0x04
   10af0:	81 e0       	ldi	r24, 0x01	; 1
   10af2:	08 95       	ret

00010af4 <_ZN5Print5writeEPKc>:
   10af4:	61 15       	cp	r22, r1
   10af6:	71 05       	cpc	r23, r1
   10af8:	79 f0       	breq	.+30     	; 0x10b18 <_ZN5Print5writeEPKc+0x24>
   10afa:	fb 01       	movw	r30, r22
   10afc:	01 90       	ld	r0, Z+
   10afe:	00 20       	and	r0, r0
   10b00:	e9 f7       	brne	.-6      	; 0x10afc <_ZN5Print5writeEPKc+0x8>
   10b02:	31 97       	sbiw	r30, 0x01	; 1
   10b04:	af 01       	movw	r20, r30
   10b06:	46 1b       	sub	r20, r22
   10b08:	57 0b       	sbc	r21, r23
   10b0a:	dc 01       	movw	r26, r24
   10b0c:	ed 91       	ld	r30, X+
   10b0e:	fc 91       	ld	r31, X
   10b10:	02 80       	ldd	r0, Z+2	; 0x02
   10b12:	f3 81       	ldd	r31, Z+3	; 0x03
   10b14:	e0 2d       	mov	r30, r0
   10b16:	19 94       	eijmp
   10b18:	80 e0       	ldi	r24, 0x00	; 0
   10b1a:	90 e0       	ldi	r25, 0x00	; 0
   10b1c:	08 95       	ret

00010b1e <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>:
   10b1e:	db 01       	movw	r26, r22
   10b20:	10 97       	sbiw	r26, 0x00	; 0
   10b22:	49 f0       	breq	.+18     	; 0x10b36 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE+0x18>
   10b24:	ed 91       	ld	r30, X+
   10b26:	fc 91       	ld	r31, X
   10b28:	11 97       	sbiw	r26, 0x01	; 1
   10b2a:	01 90       	ld	r0, Z+
   10b2c:	f0 81       	ld	r31, Z
   10b2e:	e0 2d       	mov	r30, r0
   10b30:	bc 01       	movw	r22, r24
   10b32:	cd 01       	movw	r24, r26
   10b34:	19 94       	eijmp
   10b36:	80 e0       	ldi	r24, 0x00	; 0
   10b38:	90 e0       	ldi	r25, 0x00	; 0
   10b3a:	08 95       	ret

00010b3c <_ZN11ArduinoJson9JsonArray7invalidEv>:
   10b3c:	80 91 ba 14 	lds	r24, 0x14BA	; 0x8014ba <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10b40:	81 11       	cpse	r24, r1
   10b42:	0b c0       	rjmp	.+22     	; 0x10b5a <_ZN11ArduinoJson9JsonArray7invalidEv+0x1e>
   10b44:	10 92 c3 14 	sts	0x14C3, r1	; 0x8014c3 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x1>
   10b48:	10 92 c2 14 	sts	0x14C2, r1	; 0x8014c2 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10b4c:	10 92 c5 14 	sts	0x14C5, r1	; 0x8014c5 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x3>
   10b50:	10 92 c4 14 	sts	0x14C4, r1	; 0x8014c4 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x2>
   10b54:	81 e0       	ldi	r24, 0x01	; 1
   10b56:	80 93 ba 14 	sts	0x14BA, r24	; 0x8014ba <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10b5a:	82 ec       	ldi	r24, 0xC2	; 194
   10b5c:	94 e1       	ldi	r25, 0x14	; 20
   10b5e:	08 95       	ret

00010b60 <_ZN11ArduinoJson10JsonObject7invalidEv>:
   10b60:	80 91 ae 14 	lds	r24, 0x14AE	; 0x8014ae <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10b64:	81 11       	cpse	r24, r1
   10b66:	0b c0       	rjmp	.+22     	; 0x10b7e <_ZN11ArduinoJson10JsonObject7invalidEv+0x1e>
   10b68:	10 92 b7 14 	sts	0x14B7, r1	; 0x8014b7 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x1>
   10b6c:	10 92 b6 14 	sts	0x14B6, r1	; 0x8014b6 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10b70:	10 92 b9 14 	sts	0x14B9, r1	; 0x8014b9 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x3>
   10b74:	10 92 b8 14 	sts	0x14B8, r1	; 0x8014b8 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x2>
   10b78:	81 e0       	ldi	r24, 0x01	; 1
   10b7a:	80 93 ae 14 	sts	0x14AE, r24	; 0x8014ae <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10b7e:	86 eb       	ldi	r24, 0xB6	; 182
   10b80:	94 e1       	ldi	r25, 0x14	; 20
   10b82:	08 95       	ret

00010b84 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>:
   10b84:	cf 93       	push	r28
   10b86:	df 93       	push	r29
   10b88:	ec 01       	movw	r28, r24
   10b8a:	bc 01       	movw	r22, r24
   10b8c:	84 e0       	ldi	r24, 0x04	; 4
   10b8e:	90 e0       	ldi	r25, 0x00	; 0
   10b90:	c6 df       	rcall	.-116    	; 0x10b1e <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   10b92:	00 97       	sbiw	r24, 0x00	; 0
   10b94:	41 f0       	breq	.+16     	; 0x10ba6 <_ZN11ArduinoJson10JsonBuffer12createObjectEv+0x22>
   10b96:	fc 01       	movw	r30, r24
   10b98:	d1 83       	std	Z+1, r29	; 0x01
   10b9a:	c0 83       	st	Z, r28
   10b9c:	13 82       	std	Z+3, r1	; 0x03
   10b9e:	12 82       	std	Z+2, r1	; 0x02
   10ba0:	df 91       	pop	r29
   10ba2:	cf 91       	pop	r28
   10ba4:	08 95       	ret
   10ba6:	df 91       	pop	r29
   10ba8:	cf 91       	pop	r28
   10baa:	da cf       	rjmp	.-76     	; 0x10b60 <_ZN11ArduinoJson10JsonObject7invalidEv>

00010bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
   10bac:	0f 93       	push	r16
   10bae:	1f 93       	push	r17
   10bb0:	cf 93       	push	r28
   10bb2:	df 93       	push	r29
   10bb4:	1f 92       	push	r1
   10bb6:	1f 92       	push	r1
   10bb8:	cd b7       	in	r28, 0x3d	; 61
   10bba:	de b7       	in	r29, 0x3e	; 62
   10bbc:	8b 01       	movw	r16, r22
   10bbe:	fb 01       	movw	r30, r22
   10bc0:	60 81       	ld	r22, Z
   10bc2:	9a 83       	std	Y+2, r25	; 0x02
   10bc4:	89 83       	std	Y+1, r24	; 0x01
   10bc6:	ce 01       	movw	r24, r28
   10bc8:	01 96       	adiw	r24, 0x01	; 1
   10bca:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   10bce:	c8 01       	movw	r24, r16
   10bd0:	0f 90       	pop	r0
   10bd2:	0f 90       	pop	r0
   10bd4:	df 91       	pop	r29
   10bd6:	cf 91       	pop	r28
   10bd8:	1f 91       	pop	r17
   10bda:	0f 91       	pop	r16
   10bdc:	08 95       	ret

00010bde <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>:
   10bde:	af 92       	push	r10
   10be0:	bf 92       	push	r11
   10be2:	cf 92       	push	r12
   10be4:	df 92       	push	r13
   10be6:	ef 92       	push	r14
   10be8:	ff 92       	push	r15
   10bea:	0f 93       	push	r16
   10bec:	1f 93       	push	r17
   10bee:	cf 93       	push	r28
   10bf0:	df 93       	push	r29
   10bf2:	1f 92       	push	r1
   10bf4:	1f 92       	push	r1
   10bf6:	cd b7       	in	r28, 0x3d	; 61
   10bf8:	de b7       	in	r29, 0x3e	; 62
   10bfa:	8b 01       	movw	r16, r22
   10bfc:	6b 01       	movw	r12, r22
   10bfe:	2b e0       	ldi	r18, 0x0B	; 11
   10c00:	c2 0e       	add	r12, r18
   10c02:	d1 1c       	adc	r13, r1
   10c04:	7b 01       	movw	r14, r22
   10c06:	5c 01       	movw	r10, r24
   10c08:	a6 1a       	sub	r10, r22
   10c0a:	b7 0a       	sbc	r11, r23
   10c0c:	c5 01       	movw	r24, r10
   10c0e:	8e 0d       	add	r24, r14
   10c10:	9f 1d       	adc	r25, r15
   10c12:	f7 01       	movw	r30, r14
   10c14:	61 91       	ld	r22, Z+
   10c16:	7f 01       	movw	r14, r30
   10c18:	9a 83       	std	Y+2, r25	; 0x02
   10c1a:	89 83       	std	Y+1, r24	; 0x01
   10c1c:	ce 01       	movw	r24, r28
   10c1e:	01 96       	adiw	r24, 0x01	; 1
   10c20:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   10c24:	ec 14       	cp	r14, r12
   10c26:	fd 04       	cpc	r15, r13
   10c28:	89 f7       	brne	.-30     	; 0x10c0c <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8+0x2e>
   10c2a:	c8 01       	movw	r24, r16
   10c2c:	0f 90       	pop	r0
   10c2e:	0f 90       	pop	r0
   10c30:	df 91       	pop	r29
   10c32:	cf 91       	pop	r28
   10c34:	1f 91       	pop	r17
   10c36:	0f 91       	pop	r16
   10c38:	ff 90       	pop	r15
   10c3a:	ef 90       	pop	r14
   10c3c:	df 90       	pop	r13
   10c3e:	cf 90       	pop	r12
   10c40:	bf 90       	pop	r11
   10c42:	af 90       	pop	r10
   10c44:	08 95       	ret

00010c46 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>:
   10c46:	ef 92       	push	r14
   10c48:	ff 92       	push	r15
   10c4a:	0f 93       	push	r16
   10c4c:	1f 93       	push	r17
   10c4e:	cf 93       	push	r28
   10c50:	df 93       	push	r29
   10c52:	1f 92       	push	r1
   10c54:	1f 92       	push	r1
   10c56:	cd b7       	in	r28, 0x3d	; 61
   10c58:	de b7       	in	r29, 0x3e	; 62
   10c5a:	8c 01       	movw	r16, r24
   10c5c:	8e ea       	ldi	r24, 0xAE	; 174
   10c5e:	e8 2e       	mov	r14, r24
   10c60:	83 e1       	ldi	r24, 0x13	; 19
   10c62:	f8 2e       	mov	r15, r24
   10c64:	f7 01       	movw	r30, r14
   10c66:	66 89       	ldd	r22, Z+22	; 0x16
   10c68:	1a 83       	std	Y+2, r17	; 0x02
   10c6a:	09 83       	std	Y+1, r16	; 0x01
   10c6c:	ce 01       	movw	r24, r28
   10c6e:	01 96       	adiw	r24, 0x01	; 1
   10c70:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   10c74:	f7 01       	movw	r30, r14
   10c76:	67 89       	ldd	r22, Z+23	; 0x17
   10c78:	0f 5f       	subi	r16, 0xFF	; 255
   10c7a:	1f 4f       	sbci	r17, 0xFF	; 255
   10c7c:	1a 83       	std	Y+2, r17	; 0x02
   10c7e:	09 83       	std	Y+1, r16	; 0x01
   10c80:	ce 01       	movw	r24, r28
   10c82:	01 96       	adiw	r24, 0x01	; 1
   10c84:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   10c88:	84 ec       	ldi	r24, 0xC4	; 196
   10c8a:	93 e1       	ldi	r25, 0x13	; 19
   10c8c:	0f 90       	pop	r0
   10c8e:	0f 90       	pop	r0
   10c90:	df 91       	pop	r29
   10c92:	cf 91       	pop	r28
   10c94:	1f 91       	pop	r17
   10c96:	0f 91       	pop	r16
   10c98:	ff 90       	pop	r15
   10c9a:	ef 90       	pop	r14
   10c9c:	08 95       	ret

00010c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>:
   10c9e:	ef 92       	push	r14
   10ca0:	ff 92       	push	r15
   10ca2:	0f 93       	push	r16
   10ca4:	1f 93       	push	r17
   10ca6:	cf 93       	push	r28
   10ca8:	df 93       	push	r29
   10caa:	1f 92       	push	r1
   10cac:	1f 92       	push	r1
   10cae:	cd b7       	in	r28, 0x3d	; 61
   10cb0:	de b7       	in	r29, 0x3e	; 62
   10cb2:	83 e9       	ldi	r24, 0x93	; 147
   10cb4:	e8 2e       	mov	r14, r24
   10cb6:	84 e1       	ldi	r24, 0x14	; 20
   10cb8:	f8 2e       	mov	r15, r24
   10cba:	08 e8       	ldi	r16, 0x88	; 136
   10cbc:	1e e0       	ldi	r17, 0x0E	; 14
   10cbe:	f7 01       	movw	r30, r14
   10cc0:	61 91       	ld	r22, Z+
   10cc2:	7f 01       	movw	r14, r30
   10cc4:	1a 83       	std	Y+2, r17	; 0x02
   10cc6:	09 83       	std	Y+1, r16	; 0x01
   10cc8:	ce 01       	movw	r24, r28
   10cca:	01 96       	adiw	r24, 0x01	; 1
   10ccc:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   10cd0:	0f 5f       	subi	r16, 0xFF	; 255
   10cd2:	1f 4f       	sbci	r17, 0xFF	; 255
   10cd4:	0d 38       	cpi	r16, 0x8D	; 141
   10cd6:	fe e0       	ldi	r31, 0x0E	; 14
   10cd8:	1f 07       	cpc	r17, r31
   10cda:	89 f7       	brne	.-30     	; 0x10cbe <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40+0x20>
   10cdc:	83 e9       	ldi	r24, 0x93	; 147
   10cde:	94 e1       	ldi	r25, 0x14	; 20
   10ce0:	0f 90       	pop	r0
   10ce2:	0f 90       	pop	r0
   10ce4:	df 91       	pop	r29
   10ce6:	cf 91       	pop	r28
   10ce8:	1f 91       	pop	r17
   10cea:	0f 91       	pop	r16
   10cec:	ff 90       	pop	r15
   10cee:	ef 90       	pop	r14
   10cf0:	08 95       	ret

00010cf2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>:
   10cf2:	ef 92       	push	r14
   10cf4:	ff 92       	push	r15
   10cf6:	0f 93       	push	r16
   10cf8:	1f 93       	push	r17
   10cfa:	cf 93       	push	r28
   10cfc:	df 93       	push	r29
   10cfe:	1f 92       	push	r1
   10d00:	1f 92       	push	r1
   10d02:	cd b7       	in	r28, 0x3d	; 61
   10d04:	de b7       	in	r29, 0x3e	; 62
   10d06:	8e e1       	ldi	r24, 0x1E	; 30
   10d08:	e8 2e       	mov	r14, r24
   10d0a:	89 e0       	ldi	r24, 0x09	; 9
   10d0c:	f8 2e       	mov	r15, r24
   10d0e:	0a e1       	ldi	r16, 0x1A	; 26
   10d10:	15 e0       	ldi	r17, 0x05	; 5
   10d12:	f7 01       	movw	r30, r14
   10d14:	61 91       	ld	r22, Z+
   10d16:	7f 01       	movw	r14, r30
   10d18:	1a 83       	std	Y+2, r17	; 0x02
   10d1a:	09 83       	std	Y+1, r16	; 0x01
   10d1c:	ce 01       	movw	r24, r28
   10d1e:	01 96       	adiw	r24, 0x01	; 1
   10d20:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   10d24:	0f 5f       	subi	r16, 0xFF	; 255
   10d26:	1f 4f       	sbci	r17, 0xFF	; 255
   10d28:	00 3f       	cpi	r16, 0xF0	; 240
   10d2a:	f7 e0       	ldi	r31, 0x07	; 7
   10d2c:	1f 07       	cpc	r17, r31
   10d2e:	89 f7       	brne	.-30     	; 0x10d12 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42+0x20>
   10d30:	8e e1       	ldi	r24, 0x1E	; 30
   10d32:	99 e0       	ldi	r25, 0x09	; 9
   10d34:	0f 90       	pop	r0
   10d36:	0f 90       	pop	r0
   10d38:	df 91       	pop	r29
   10d3a:	cf 91       	pop	r28
   10d3c:	1f 91       	pop	r17
   10d3e:	0f 91       	pop	r16
   10d40:	ff 90       	pop	r15
   10d42:	ef 90       	pop	r14
   10d44:	08 95       	ret

00010d46 <_Z18Read_Switch_Statusv>:
   10d46:	61 e0       	ldi	r22, 0x01	; 1
   10d48:	84 e2       	ldi	r24, 0x24	; 36
   10d4a:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   10d4e:	86 e2       	ldi	r24, 0x26	; 38
   10d50:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   10d54:	30 91 e7 0d 	lds	r19, 0x0DE7	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10d58:	33 23       	and	r19, r19
   10d5a:	b9 f0       	breq	.+46     	; 0x10d8a <_Z18Read_Switch_Statusv+0x44>
   10d5c:	90 91 e6 0d 	lds	r25, 0x0DE6	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10d60:	94 30       	cpi	r25, 0x04	; 4
   10d62:	30 f0       	brcs	.+12     	; 0x10d70 <_Z18Read_Switch_Statusv+0x2a>
   10d64:	31 30       	cpi	r19, 0x01	; 1
   10d66:	61 f4       	brne	.+24     	; 0x10d80 <_Z18Read_Switch_Statusv+0x3a>
   10d68:	82 e0       	ldi	r24, 0x02	; 2
   10d6a:	80 93 d8 13 	sts	0x13D8, r24	; 0x8013d8 <_sRuble_Parameters+0x2a>
   10d6e:	08 c0       	rjmp	.+16     	; 0x10d80 <_Z18Read_Switch_Statusv+0x3a>
   10d70:	21 e0       	ldi	r18, 0x01	; 1
   10d72:	82 27       	eor	r24, r18
   10d74:	38 13       	cpse	r19, r24
   10d76:	04 c0       	rjmp	.+8      	; 0x10d80 <_Z18Read_Switch_Statusv+0x3a>
   10d78:	9f 5f       	subi	r25, 0xFF	; 255
   10d7a:	90 93 e6 0d 	sts	0x0DE6, r25	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10d7e:	08 95       	ret
   10d80:	10 92 e6 0d 	sts	0x0DE6, r1	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10d84:	10 92 e7 0d 	sts	0x0DE7, r1	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10d88:	08 95       	ret
   10d8a:	91 e0       	ldi	r25, 0x01	; 1
   10d8c:	89 27       	eor	r24, r25
   10d8e:	80 93 e7 0d 	sts	0x0DE7, r24	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10d92:	81 11       	cpse	r24, r1
   10d94:	0c c0       	rjmp	.+24     	; 0x10dae <_Z18Read_Switch_Statusv+0x68>
   10d96:	80 91 e5 0d 	lds	r24, 0x0DE5	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10d9a:	84 30       	cpi	r24, 0x04	; 4
   10d9c:	28 f0       	brcs	.+10     	; 0x10da8 <_Z18Read_Switch_Statusv+0x62>
   10d9e:	10 92 e5 0d 	sts	0x0DE5, r1	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10da2:	90 93 d8 13 	sts	0x13D8, r25	; 0x8013d8 <_sRuble_Parameters+0x2a>
   10da6:	08 95       	ret
   10da8:	8f 5f       	subi	r24, 0xFF	; 255
   10daa:	80 93 e5 0d 	sts	0x0DE5, r24	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10dae:	08 95       	ret

00010db0 <_Z16Dummy_Data_Storev>:
   10db0:	8f 92       	push	r8
   10db2:	9f 92       	push	r9
   10db4:	af 92       	push	r10
   10db6:	bf 92       	push	r11
   10db8:	cf 92       	push	r12
   10dba:	df 92       	push	r13
   10dbc:	ef 92       	push	r14
   10dbe:	ff 92       	push	r15
   10dc0:	0f 93       	push	r16
   10dc2:	1f 93       	push	r17
   10dc4:	cf 93       	push	r28
   10dc6:	df 93       	push	r29
   10dc8:	1f 92       	push	r1
   10dca:	1f 92       	push	r1
   10dcc:	cd b7       	in	r28, 0x3d	; 61
   10dce:	de b7       	in	r29, 0x3e	; 62
   10dd0:	fe e4       	ldi	r31, 0x4E	; 78
   10dd2:	ef 2e       	mov	r14, r31
   10dd4:	fd e0       	ldi	r31, 0x0D	; 13
   10dd6:	ff 2e       	mov	r15, r31
   10dd8:	10 e0       	ldi	r17, 0x00	; 0
   10dda:	f7 01       	movw	r30, r14
   10ddc:	10 82       	st	Z, r1
   10dde:	81 2f       	mov	r24, r17
   10de0:	05 d8       	rcall	.-4086   	; 0xfdec <_Z16Lira_Data_EEPROMh>
   10de2:	f6 e0       	ldi	r31, 0x06	; 6
   10de4:	ef 0e       	add	r14, r31
   10de6:	f1 1c       	adc	r15, r1
   10de8:	1f 5f       	subi	r17, 0xFF	; 255
   10dea:	1e 30       	cpi	r17, 0x0E	; 14
   10dec:	b1 f7       	brne	.-20     	; 0x10dda <_Z16Dummy_Data_Storev+0x2a>
   10dee:	e5 e1       	ldi	r30, 0x15	; 21
   10df0:	ee 2e       	mov	r14, r30
   10df2:	ec e0       	ldi	r30, 0x0C	; 12
   10df4:	fe 2e       	mov	r15, r30
   10df6:	10 e0       	ldi	r17, 0x00	; 0
   10df8:	f7 01       	movw	r30, r14
   10dfa:	10 82       	st	Z, r1
   10dfc:	81 2f       	mov	r24, r17
   10dfe:	0e 94 32 5c 	call	0xb864	; 0xb864 <_Z16Euro_Data_EEPROMh>
   10e02:	fd e0       	ldi	r31, 0x0D	; 13
   10e04:	ef 0e       	add	r14, r31
   10e06:	f1 1c       	adc	r15, r1
   10e08:	1f 5f       	subi	r17, 0xFF	; 255
   10e0a:	16 30       	cpi	r17, 0x06	; 6
   10e0c:	a9 f7       	brne	.-22     	; 0x10df8 <_Z16Dummy_Data_Storev+0x48>
   10e0e:	69 eb       	ldi	r22, 0xB9	; 185
   10e10:	7d e0       	ldi	r23, 0x0D	; 13
   10e12:	8a ed       	ldi	r24, 0xDA	; 218
   10e14:	94 e0       	ldi	r25, 0x04	; 4
   10e16:	e3 de       	rcall	.-570    	; 0x10bde <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10e18:	64 ec       	ldi	r22, 0xC4	; 196
   10e1a:	7d e0       	ldi	r23, 0x0D	; 13
   10e1c:	87 ee       	ldi	r24, 0xE7	; 231
   10e1e:	94 e0       	ldi	r25, 0x04	; 4
   10e20:	de de       	rcall	.-580    	; 0x10bde <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10e22:	89 e0       	ldi	r24, 0x09	; 9
   10e24:	80 93 69 14 	sts	0x1469, r24	; 0x801469 <_sRuble_Parameters+0xbb>
   10e28:	69 e6       	ldi	r22, 0x69	; 105
   10e2a:	74 e1       	ldi	r23, 0x14	; 20
   10e2c:	88 e1       	ldi	r24, 0x18	; 24
   10e2e:	95 e0       	ldi	r25, 0x05	; 5
   10e30:	bd de       	rcall	.-646    	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e32:	82 e0       	ldi	r24, 0x02	; 2
   10e34:	80 93 71 14 	sts	0x1471, r24	; 0x801471 <_sRuble_Parameters+0xc3>
   10e38:	61 e7       	ldi	r22, 0x71	; 113
   10e3a:	74 e1       	ldi	r23, 0x14	; 20
   10e3c:	89 e1       	ldi	r24, 0x19	; 25
   10e3e:	95 e0       	ldi	r25, 0x05	; 5
   10e40:	b5 de       	rcall	.-662    	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e42:	10 92 1e 09 	sts	0x091E, r1	; 0x80091e <_sSchedules>
   10e46:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
   10e4a:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <_sSchedules+0x2>
   10e4e:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   10e52:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
   10e56:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   10e5a:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <_sSchedules+0x7>
   10e5e:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
   10e62:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
   10e66:	81 e0       	ldi	r24, 0x01	; 1
   10e68:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
   10e6c:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
   10e70:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
   10e74:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
   10e78:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
   10e7c:	41 e0       	ldi	r20, 0x01	; 1
   10e7e:	50 e0       	ldi	r21, 0x00	; 0
   10e80:	60 e0       	ldi	r22, 0x00	; 0
   10e82:	70 e0       	ldi	r23, 0x00	; 0
   10e84:	40 93 31 09 	sts	0x0931, r20	; 0x800931 <_sSchedules+0x13>
   10e88:	50 93 32 09 	sts	0x0932, r21	; 0x800932 <_sSchedules+0x14>
   10e8c:	60 93 33 09 	sts	0x0933, r22	; 0x800933 <_sSchedules+0x15>
   10e90:	70 93 34 09 	sts	0x0934, r23	; 0x800934 <_sSchedules+0x16>
   10e94:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
   10e98:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
   10e9c:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
   10ea0:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
   10ea4:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   10ea8:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <_sSchedules+0x1c>
   10eac:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <_sSchedules+0x1d>
   10eb0:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
   10eb4:	80 e0       	ldi	r24, 0x00	; 0
   10eb6:	90 e0       	ldi	r25, 0x00	; 0
   10eb8:	fc 01       	movw	r30, r24
   10eba:	ee 0f       	add	r30, r30
   10ebc:	ff 1f       	adc	r31, r31
   10ebe:	e2 5e       	subi	r30, 0xE2	; 226
   10ec0:	f6 4f       	sbci	r31, 0xF6	; 246
   10ec2:	10 a2       	std	Z+32, r1	; 0x20
   10ec4:	17 8e       	std	Z+31, r1	; 0x1f
   10ec6:	01 96       	adiw	r24, 0x01	; 1
   10ec8:	8f 30       	cpi	r24, 0x0F	; 15
   10eca:	91 05       	cpc	r25, r1
   10ecc:	a9 f7       	brne	.-22     	; 0x10eb8 <_Z16Dummy_Data_Storev+0x108>
   10ece:	80 e0       	ldi	r24, 0x00	; 0
   10ed0:	90 e0       	ldi	r25, 0x00	; 0
   10ed2:	fc 01       	movw	r30, r24
   10ed4:	e2 5e       	subi	r30, 0xE2	; 226
   10ed6:	f6 4f       	sbci	r31, 0xF6	; 246
   10ed8:	15 ae       	std	Z+61, r1	; 0x3d
   10eda:	01 96       	adiw	r24, 0x01	; 1
   10edc:	8f 30       	cpi	r24, 0x0F	; 15
   10ede:	91 05       	cpc	r25, r1
   10ee0:	c1 f7       	brne	.-16     	; 0x10ed2 <_Z16Dummy_Data_Storev+0x122>
   10ee2:	80 e0       	ldi	r24, 0x00	; 0
   10ee4:	90 e0       	ldi	r25, 0x00	; 0
   10ee6:	fc 01       	movw	r30, r24
   10ee8:	e6 59       	subi	r30, 0x96	; 150
   10eea:	f6 4f       	sbci	r31, 0xF6	; 246
   10eec:	10 82       	st	Z, r1
   10eee:	01 96       	adiw	r24, 0x01	; 1
   10ef0:	8f 30       	cpi	r24, 0x0F	; 15
   10ef2:	91 05       	cpc	r25, r1
   10ef4:	c1 f7       	brne	.-16     	; 0x10ee6 <_Z16Dummy_Data_Storev+0x136>
   10ef6:	80 e0       	ldi	r24, 0x00	; 0
   10ef8:	90 e0       	ldi	r25, 0x00	; 0
   10efa:	9c 01       	movw	r18, r24
   10efc:	22 5e       	subi	r18, 0xE2	; 226
   10efe:	36 4f       	sbci	r19, 0xF6	; 246
   10f00:	f9 01       	movw	r30, r18
   10f02:	e5 5a       	subi	r30, 0xA5	; 165
   10f04:	ff 4f       	sbci	r31, 0xFF	; 255
   10f06:	10 82       	st	Z, r1
   10f08:	3f 96       	adiw	r30, 0x0f	; 15
   10f0a:	10 82       	st	Z, r1
   10f0c:	01 96       	adiw	r24, 0x01	; 1
   10f0e:	8f 30       	cpi	r24, 0x0F	; 15
   10f10:	91 05       	cpc	r25, r1
   10f12:	99 f7       	brne	.-26     	; 0x10efa <_Z16Dummy_Data_Storev+0x14a>
   10f14:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   10f18:	80 e0       	ldi	r24, 0x00	; 0
   10f1a:	90 e0       	ldi	r25, 0x00	; 0
   10f1c:	fc 01       	movw	r30, r24
   10f1e:	e8 56       	subi	r30, 0x68	; 104
   10f20:	f6 4f       	sbci	r31, 0xF6	; 246
   10f22:	10 82       	st	Z, r1
   10f24:	01 96       	adiw	r24, 0x01	; 1
   10f26:	8b 32       	cpi	r24, 0x2B	; 43
   10f28:	91 05       	cpc	r25, r1
   10f2a:	c1 f7       	brne	.-16     	; 0x10f1c <_Z16Dummy_Data_Storev+0x16c>
   10f2c:	80 e0       	ldi	r24, 0x00	; 0
   10f2e:	90 e0       	ldi	r25, 0x00	; 0
   10f30:	fc 01       	movw	r30, r24
   10f32:	e8 56       	subi	r30, 0x68	; 104
   10f34:	f6 4f       	sbci	r31, 0xF6	; 246
   10f36:	10 82       	st	Z, r1
   10f38:	01 96       	adiw	r24, 0x01	; 1
   10f3a:	8b 32       	cpi	r24, 0x2B	; 43
   10f3c:	91 05       	cpc	r25, r1
   10f3e:	c1 f7       	brne	.-16     	; 0x10f30 <_Z16Dummy_Data_Storev+0x180>
   10f40:	80 e0       	ldi	r24, 0x00	; 0
   10f42:	90 e0       	ldi	r25, 0x00	; 0
   10f44:	fc 01       	movw	r30, r24
   10f46:	ee 0f       	add	r30, r30
   10f48:	ff 1f       	adc	r31, r31
   10f4a:	ed 53       	subi	r30, 0x3D	; 61
   10f4c:	f6 4f       	sbci	r31, 0xF6	; 246
   10f4e:	11 82       	std	Z+1, r1	; 0x01
   10f50:	10 82       	st	Z, r1
   10f52:	01 96       	adiw	r24, 0x01	; 1
   10f54:	8b 32       	cpi	r24, 0x2B	; 43
   10f56:	91 05       	cpc	r25, r1
   10f58:	a9 f7       	brne	.-22     	; 0x10f44 <_Z16Dummy_Data_Storev+0x194>
   10f5a:	80 e0       	ldi	r24, 0x00	; 0
   10f5c:	90 e0       	ldi	r25, 0x00	; 0
   10f5e:	fc 01       	movw	r30, r24
   10f60:	ee 0f       	add	r30, r30
   10f62:	ff 1f       	adc	r31, r31
   10f64:	e7 5e       	subi	r30, 0xE7	; 231
   10f66:	f5 4f       	sbci	r31, 0xF5	; 245
   10f68:	11 82       	std	Z+1, r1	; 0x01
   10f6a:	10 82       	st	Z, r1
   10f6c:	01 96       	adiw	r24, 0x01	; 1
   10f6e:	8b 32       	cpi	r24, 0x2B	; 43
   10f70:	91 05       	cpc	r25, r1
   10f72:	a9 f7       	brne	.-22     	; 0x10f5e <_Z16Dummy_Data_Storev+0x1ae>
   10f74:	80 e0       	ldi	r24, 0x00	; 0
   10f76:	90 e0       	ldi	r25, 0x00	; 0
   10f78:	fc 01       	movw	r30, r24
   10f7a:	e1 59       	subi	r30, 0x91	; 145
   10f7c:	f5 4f       	sbci	r31, 0xF5	; 245
   10f7e:	10 82       	st	Z, r1
   10f80:	01 96       	adiw	r24, 0x01	; 1
   10f82:	8b 32       	cpi	r24, 0x2B	; 43
   10f84:	91 05       	cpc	r25, r1
   10f86:	c1 f7       	brne	.-16     	; 0x10f78 <_Z16Dummy_Data_Storev+0x1c8>
   10f88:	80 e0       	ldi	r24, 0x00	; 0
   10f8a:	90 e0       	ldi	r25, 0x00	; 0
   10f8c:	fc 01       	movw	r30, r24
   10f8e:	ee 0f       	add	r30, r30
   10f90:	ff 1f       	adc	r31, r31
   10f92:	eb 53       	subi	r30, 0x3B	; 59
   10f94:	f5 4f       	sbci	r31, 0xF5	; 245
   10f96:	11 82       	std	Z+1, r1	; 0x01
   10f98:	10 82       	st	Z, r1
   10f9a:	01 96       	adiw	r24, 0x01	; 1
   10f9c:	8b 32       	cpi	r24, 0x2B	; 43
   10f9e:	91 05       	cpc	r25, r1
   10fa0:	a9 f7       	brne	.-22     	; 0x10f8c <_Z16Dummy_Data_Storev+0x1dc>
   10fa2:	80 e0       	ldi	r24, 0x00	; 0
   10fa4:	90 e0       	ldi	r25, 0x00	; 0
   10fa6:	fc 01       	movw	r30, r24
   10fa8:	ee 0f       	add	r30, r30
   10faa:	ff 1f       	adc	r31, r31
   10fac:	e5 5e       	subi	r30, 0xE5	; 229
   10fae:	f4 4f       	sbci	r31, 0xF4	; 244
   10fb0:	11 82       	std	Z+1, r1	; 0x01
   10fb2:	10 82       	st	Z, r1
   10fb4:	01 96       	adiw	r24, 0x01	; 1
   10fb6:	8b 32       	cpi	r24, 0x2B	; 43
   10fb8:	91 05       	cpc	r25, r1
   10fba:	a9 f7       	brne	.-22     	; 0x10fa6 <_Z16Dummy_Data_Storev+0x1f6>
   10fbc:	10 92 71 0b 	sts	0x0B71, r1	; 0x800b71 <_sSchedules+0x253>
   10fc0:	10 92 72 0b 	sts	0x0B72, r1	; 0x800b72 <_sSchedules+0x254>
   10fc4:	10 92 73 0b 	sts	0x0B73, r1	; 0x800b73 <_sSchedules+0x255>
   10fc8:	10 92 74 0b 	sts	0x0B74, r1	; 0x800b74 <_sSchedules+0x256>
   10fcc:	10 92 75 0b 	sts	0x0B75, r1	; 0x800b75 <_sSchedules+0x257>
   10fd0:	10 92 77 0b 	sts	0x0B77, r1	; 0x800b77 <_sSchedules+0x259>
   10fd4:	10 92 76 0b 	sts	0x0B76, r1	; 0x800b76 <_sSchedules+0x258>
   10fd8:	10 92 79 0b 	sts	0x0B79, r1	; 0x800b79 <_sSchedules+0x25b>
   10fdc:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
   10fe0:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
   10fe4:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
   10fe8:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
   10fec:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
   10ff0:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
   10ff4:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
   10ff8:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
   10ffc:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
   11000:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
   11004:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
   11008:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
   1100c:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
   11010:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
   11014:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
   11018:	10 92 89 0b 	sts	0x0B89, r1	; 0x800b89 <_sSchedules+0x26b>
   1101c:	10 92 88 0b 	sts	0x0B88, r1	; 0x800b88 <_sSchedules+0x26a>
   11020:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
   11024:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
   11028:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
   1102c:	10 92 91 0b 	sts	0x0B91, r1	; 0x800b91 <_sSchedules+0x273>
   11030:	10 92 92 0b 	sts	0x0B92, r1	; 0x800b92 <_sSchedules+0x274>
   11034:	10 92 93 0b 	sts	0x0B93, r1	; 0x800b93 <_sSchedules+0x275>
   11038:	10 92 94 0b 	sts	0x0B94, r1	; 0x800b94 <_sSchedules+0x276>
   1103c:	10 92 95 0b 	sts	0x0B95, r1	; 0x800b95 <_sSchedules+0x277>
   11040:	10 92 96 0b 	sts	0x0B96, r1	; 0x800b96 <_sSchedules+0x278>
   11044:	10 92 97 0b 	sts	0x0B97, r1	; 0x800b97 <_sSchedules+0x279>
   11048:	10 92 98 0b 	sts	0x0B98, r1	; 0x800b98 <_sSchedules+0x27a>
   1104c:	10 92 99 0b 	sts	0x0B99, r1	; 0x800b99 <_sSchedules+0x27b>
   11050:	80 e0       	ldi	r24, 0x00	; 0
   11052:	90 e0       	ldi	r25, 0x00	; 0
   11054:	fc 01       	movw	r30, r24
   11056:	ee 0f       	add	r30, r30
   11058:	ff 1f       	adc	r31, r31
   1105a:	e6 56       	subi	r30, 0x66	; 102
   1105c:	f4 4f       	sbci	r31, 0xF4	; 244
   1105e:	11 82       	std	Z+1, r1	; 0x01
   11060:	10 82       	st	Z, r1
   11062:	01 96       	adiw	r24, 0x01	; 1
   11064:	8f 30       	cpi	r24, 0x0F	; 15
   11066:	91 05       	cpc	r25, r1
   11068:	a9 f7       	brne	.-22     	; 0x11054 <_Z16Dummy_Data_Storev+0x2a4>
   1106a:	80 e0       	ldi	r24, 0x00	; 0
   1106c:	90 e0       	ldi	r25, 0x00	; 0
   1106e:	fc 01       	movw	r30, r24
   11070:	e8 54       	subi	r30, 0x48	; 72
   11072:	f4 4f       	sbci	r31, 0xF4	; 244
   11074:	10 82       	st	Z, r1
   11076:	01 96       	adiw	r24, 0x01	; 1
   11078:	8f 30       	cpi	r24, 0x0F	; 15
   1107a:	91 05       	cpc	r25, r1
   1107c:	c1 f7       	brne	.-16     	; 0x1106e <_Z16Dummy_Data_Storev+0x2be>
   1107e:	80 e0       	ldi	r24, 0x00	; 0
   11080:	90 e0       	ldi	r25, 0x00	; 0
   11082:	fc 01       	movw	r30, r24
   11084:	e9 53       	subi	r30, 0x39	; 57
   11086:	f4 4f       	sbci	r31, 0xF4	; 244
   11088:	10 82       	st	Z, r1
   1108a:	01 96       	adiw	r24, 0x01	; 1
   1108c:	8f 30       	cpi	r24, 0x0F	; 15
   1108e:	91 05       	cpc	r25, r1
   11090:	c1 f7       	brne	.-16     	; 0x11082 <_Z16Dummy_Data_Storev+0x2d2>
   11092:	80 e0       	ldi	r24, 0x00	; 0
   11094:	90 e0       	ldi	r25, 0x00	; 0
   11096:	fc 01       	movw	r30, r24
   11098:	e9 53       	subi	r30, 0x39	; 57
   1109a:	f4 4f       	sbci	r31, 0xF4	; 244
   1109c:	10 82       	st	Z, r1
   1109e:	01 96       	adiw	r24, 0x01	; 1
   110a0:	8b 32       	cpi	r24, 0x2B	; 43
   110a2:	91 05       	cpc	r25, r1
   110a4:	c1 f7       	brne	.-16     	; 0x11096 <_Z16Dummy_Data_Storev+0x2e6>
   110a6:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
   110aa:	10 92 8d 0b 	sts	0x0B8D, r1	; 0x800b8d <_sSchedules+0x26f>
   110ae:	10 92 8e 0b 	sts	0x0B8E, r1	; 0x800b8e <_sSchedules+0x270>
   110b2:	10 92 8f 0b 	sts	0x0B8F, r1	; 0x800b8f <_sSchedules+0x271>
   110b6:	10 92 90 0b 	sts	0x0B90, r1	; 0x800b90 <_sSchedules+0x272>
   110ba:	1b de       	rcall	.-970    	; 0x10cf2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   110bc:	98 ee       	ldi	r25, 0xE8	; 232
   110be:	e9 2e       	mov	r14, r25
   110c0:	9d e0       	ldi	r25, 0x0D	; 13
   110c2:	f9 2e       	mov	r15, r25
   110c4:	01 ef       	ldi	r16, 0xF1	; 241
   110c6:	19 e0       	ldi	r17, 0x09	; 9
   110c8:	f7 01       	movw	r30, r14
   110ca:	11 82       	std	Z+1, r1	; 0x01
   110cc:	10 92 ed 0d 	sts	0x0DED, r1	; 0x800ded <_sExtra_Plot+0x5>
   110d0:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x21>
   110d4:	10 92 25 0e 	sts	0x0E25, r1	; 0x800e25 <_sExtra_Plot+0x3d>
   110d8:	10 92 41 0e 	sts	0x0E41, r1	; 0x800e41 <_sExtra_Plot+0x59>
   110dc:	10 92 5d 0e 	sts	0x0E5D, r1	; 0x800e5d <_sExtra_Plot+0x75>
   110e0:	48 01       	movw	r8, r16
   110e2:	fb e1       	ldi	r31, 0x1B	; 27
   110e4:	8f 0e       	add	r8, r31
   110e6:	91 1c       	adc	r9, r1
   110e8:	57 01       	movw	r10, r14
   110ea:	68 01       	movw	r12, r16
   110ec:	f5 01       	movw	r30, r10
   110ee:	61 91       	ld	r22, Z+
   110f0:	5f 01       	movw	r10, r30
   110f2:	da 82       	std	Y+2, r13	; 0x02
   110f4:	c9 82       	std	Y+1, r12	; 0x01
   110f6:	ce 01       	movw	r24, r28
   110f8:	01 96       	adiw	r24, 0x01	; 1
   110fa:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   110fe:	ff ef       	ldi	r31, 0xFF	; 255
   11100:	cf 1a       	sub	r12, r31
   11102:	df 0a       	sbc	r13, r31
   11104:	8c 14       	cp	r8, r12
   11106:	9d 04       	cpc	r9, r13
   11108:	89 f7       	brne	.-30     	; 0x110ec <_Z16Dummy_Data_Storev+0x33c>
   1110a:	8b e1       	ldi	r24, 0x1B	; 27
   1110c:	e8 0e       	add	r14, r24
   1110e:	f1 1c       	adc	r15, r1
   11110:	02 5e       	subi	r16, 0xE2	; 226
   11112:	1f 4f       	sbci	r17, 0xFF	; 255
   11114:	05 39       	cpi	r16, 0x95	; 149
   11116:	eb e0       	ldi	r30, 0x0B	; 11
   11118:	1e 07       	cpc	r17, r30
   1111a:	b1 f6       	brne	.-84     	; 0x110c8 <_Z16Dummy_Data_Storev+0x318>
   1111c:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   11120:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   11124:	86 e9       	ldi	r24, 0x96	; 150
   11126:	9c e0       	ldi	r25, 0x0C	; 12
   11128:	8e dd       	rcall	.-1252   	; 0x10c46 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   1112a:	10 92 65 14 	sts	0x1465, r1	; 0x801465 <_sRuble_Parameters+0xb7>
   1112e:	65 e6       	ldi	r22, 0x65	; 101
   11130:	74 e1       	ldi	r23, 0x14	; 20
   11132:	86 e9       	ldi	r24, 0x96	; 150
   11134:	9c e0       	ldi	r25, 0x0C	; 12
   11136:	3a dd       	rcall	.-1420   	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   11138:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   1113c:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   11140:	85 e0       	ldi	r24, 0x05	; 5
   11142:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   11146:	65 ed       	ldi	r22, 0xD5	; 213
   11148:	73 e1       	ldi	r23, 0x13	; 19
   1114a:	88 ed       	ldi	r24, 0xD8	; 216
   1114c:	94 e0       	ldi	r25, 0x04	; 4
   1114e:	2e dd       	rcall	.-1444   	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   11150:	10 92 79 14 	sts	0x1479, r1	; 0x801479 <_sRuble_Parameters+0xcb>
   11154:	69 e7       	ldi	r22, 0x79	; 121
   11156:	74 e1       	ldi	r23, 0x14	; 20
   11158:	81 ea       	ldi	r24, 0xA1	; 161
   1115a:	9c e0       	ldi	r25, 0x0C	; 12
   1115c:	27 dd       	rcall	.-1458   	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1115e:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
   11162:	6b e7       	ldi	r22, 0x7B	; 123
   11164:	74 e1       	ldi	r23, 0x14	; 20
   11166:	88 ea       	ldi	r24, 0xA8	; 168
   11168:	9c e0       	ldi	r25, 0x0C	; 12
   1116a:	20 dd       	rcall	.-1472   	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1116c:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   11170:	6c e7       	ldi	r22, 0x7C	; 124
   11172:	74 e1       	ldi	r23, 0x14	; 20
   11174:	8d ea       	ldi	r24, 0xAD	; 173
   11176:	9c e0       	ldi	r25, 0x0C	; 12
   11178:	19 dd       	rcall	.-1486   	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1117a:	03 e9       	ldi	r16, 0x93	; 147
   1117c:	14 e1       	ldi	r17, 0x14	; 20
   1117e:	f8 01       	movw	r30, r16
   11180:	11 92       	st	Z+, r1
   11182:	8f 01       	movw	r16, r30
   11184:	8c dd       	rcall	.-1256   	; 0x10c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   11186:	f4 e1       	ldi	r31, 0x14	; 20
   11188:	08 39       	cpi	r16, 0x98	; 152
   1118a:	1f 07       	cpc	r17, r31
   1118c:	c1 f7       	brne	.-16     	; 0x1117e <_Z16Dummy_Data_Storev+0x3ce>
   1118e:	81 e0       	ldi	r24, 0x01	; 1
   11190:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
   11194:	68 e9       	ldi	r22, 0x98	; 152
   11196:	74 e1       	ldi	r23, 0x14	; 20
   11198:	8b ea       	ldi	r24, 0xAB	; 171
   1119a:	9e e0       	ldi	r25, 0x0E	; 14
   1119c:	07 dd       	rcall	.-1522   	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1119e:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
   111a2:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
   111a6:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
   111aa:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
   111ae:	8b e9       	ldi	r24, 0x9B	; 155
   111b0:	e8 2e       	mov	r14, r24
   111b2:	84 e1       	ldi	r24, 0x14	; 20
   111b4:	f8 2e       	mov	r15, r24
   111b6:	0d ea       	ldi	r16, 0xAD	; 173
   111b8:	1e e0       	ldi	r17, 0x0E	; 14
   111ba:	f7 01       	movw	r30, r14
   111bc:	61 91       	ld	r22, Z+
   111be:	7f 01       	movw	r14, r30
   111c0:	1a 83       	std	Y+2, r17	; 0x02
   111c2:	09 83       	std	Y+1, r16	; 0x01
   111c4:	ce 01       	movw	r24, r28
   111c6:	01 96       	adiw	r24, 0x01	; 1
   111c8:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN5EERef6updateEh>
   111cc:	0f 5f       	subi	r16, 0xFF	; 255
   111ce:	1f 4f       	sbci	r17, 0xFF	; 255
   111d0:	01 3b       	cpi	r16, 0xB1	; 177
   111d2:	fe e0       	ldi	r31, 0x0E	; 14
   111d4:	1f 07       	cpc	r17, r31
   111d6:	89 f7       	brne	.-30     	; 0x111ba <_Z16Dummy_Data_Storev+0x40a>
   111d8:	04 ef       	ldi	r16, 0xF4	; 244
   111da:	1b e0       	ldi	r17, 0x0B	; 11
   111dc:	f1 2c       	mov	r15, r1
   111de:	f8 01       	movw	r30, r16
   111e0:	11 86       	std	Z+9, r1	; 0x09
   111e2:	10 86       	std	Z+8, r1	; 0x08
   111e4:	10 82       	st	Z, r1
   111e6:	12 86       	std	Z+10, r1	; 0x0a
   111e8:	8f 2d       	mov	r24, r15
   111ea:	0e 94 6c 5c 	call	0xb8d8	; 0xb8d8 <_Z20Wireless_Pump_EEPROMh>
   111ee:	f3 94       	inc	r15
   111f0:	05 5f       	subi	r16, 0xF5	; 245
   111f2:	1f 4f       	sbci	r17, 0xFF	; 255
   111f4:	f3 e0       	ldi	r31, 0x03	; 3
   111f6:	ff 12       	cpse	r15, r31
   111f8:	f2 cf       	rjmp	.-28     	; 0x111de <_Z16Dummy_Data_Storev+0x42e>
   111fa:	0f 90       	pop	r0
   111fc:	0f 90       	pop	r0
   111fe:	df 91       	pop	r29
   11200:	cf 91       	pop	r28
   11202:	1f 91       	pop	r17
   11204:	0f 91       	pop	r16
   11206:	ff 90       	pop	r15
   11208:	ef 90       	pop	r14
   1120a:	df 90       	pop	r13
   1120c:	cf 90       	pop	r12
   1120e:	bf 90       	pop	r11
   11210:	af 90       	pop	r10
   11212:	9f 90       	pop	r9
   11214:	8f 90       	pop	r8
   11216:	08 95       	ret

00011218 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11218:	0f 93       	push	r16
   1121a:	1f 93       	push	r17
   1121c:	cf 93       	push	r28
   1121e:	df 93       	push	r29
   11220:	dc 01       	movw	r26, r24
   11222:	12 96       	adiw	r26, 0x02	; 2
   11224:	ed 91       	ld	r30, X+
   11226:	fc 91       	ld	r31, X
   11228:	13 97       	sbiw	r26, 0x03	; 3
   1122a:	30 97       	sbiw	r30, 0x00	; 0
   1122c:	a1 f0       	breq	.+40     	; 0x11256 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   1122e:	61 15       	cp	r22, r1
   11230:	71 05       	cpc	r23, r1
   11232:	31 f0       	breq	.+12     	; 0x11240 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x28>
   11234:	01 90       	ld	r0, Z+
   11236:	f0 81       	ld	r31, Z
   11238:	e0 2d       	mov	r30, r0
   1123a:	61 50       	subi	r22, 0x01	; 1
   1123c:	71 09       	sbc	r23, r1
   1123e:	f5 cf       	rjmp	.-22     	; 0x1122a <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x12>
   11240:	82 81       	ldd	r24, Z+2	; 0x02
   11242:	83 30       	cpi	r24, 0x03	; 3
   11244:	08 f0       	brcs	.+2      	; 0x11248 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x30>
   11246:	44 c0       	rjmp	.+136    	; 0x112d0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb8>
   11248:	81 30       	cpi	r24, 0x01	; 1
   1124a:	28 f0       	brcs	.+10     	; 0x11256 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   1124c:	03 80       	ldd	r0, Z+3	; 0x03
   1124e:	f4 81       	ldd	r31, Z+4	; 0x04
   11250:	e0 2d       	mov	r30, r0
   11252:	30 97       	sbiw	r30, 0x00	; 0
   11254:	21 f4       	brne	.+8      	; 0x1125e <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x46>
   11256:	60 e0       	ldi	r22, 0x00	; 0
   11258:	70 e0       	ldi	r23, 0x00	; 0
   1125a:	cb 01       	movw	r24, r22
   1125c:	4f c0       	rjmp	.+158    	; 0x112fc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   1125e:	80 81       	ld	r24, Z
   11260:	84 37       	cpi	r24, 0x74	; 116
   11262:	71 f1       	breq	.+92     	; 0x112c0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xa8>
   11264:	8b 32       	cpi	r24, 0x2B	; 43
   11266:	29 f0       	breq	.+10     	; 0x11272 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5a>
   11268:	8d 32       	cpi	r24, 0x2D	; 45
   1126a:	21 f4       	brne	.+8      	; 0x11274 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5c>
   1126c:	31 96       	adiw	r30, 0x01	; 1
   1126e:	d1 e0       	ldi	r29, 0x01	; 1
   11270:	02 c0       	rjmp	.+4      	; 0x11276 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5e>
   11272:	31 96       	adiw	r30, 0x01	; 1
   11274:	d0 e0       	ldi	r29, 0x00	; 0
   11276:	20 e0       	ldi	r18, 0x00	; 0
   11278:	30 e0       	ldi	r19, 0x00	; 0
   1127a:	a9 01       	movw	r20, r18
   1127c:	c1 91       	ld	r28, Z+
   1127e:	80 ed       	ldi	r24, 0xD0	; 208
   11280:	8c 0f       	add	r24, r28
   11282:	8a 30       	cpi	r24, 0x0A	; 10
   11284:	98 f4       	brcc	.+38     	; 0x112ac <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x94>
   11286:	aa e0       	ldi	r26, 0x0A	; 10
   11288:	b0 e0       	ldi	r27, 0x00	; 0
   1128a:	0e 94 34 eb 	call	0x1d668	; 0x1d668 <__muluhisi3>
   1128e:	2c 2f       	mov	r18, r28
   11290:	30 e0       	ldi	r19, 0x00	; 0
   11292:	20 53       	subi	r18, 0x30	; 48
   11294:	31 09       	sbc	r19, r1
   11296:	89 01       	movw	r16, r18
   11298:	33 0f       	add	r19, r19
   1129a:	22 0b       	sbc	r18, r18
   1129c:	33 0b       	sbc	r19, r19
   1129e:	a9 01       	movw	r20, r18
   112a0:	98 01       	movw	r18, r16
   112a2:	26 0f       	add	r18, r22
   112a4:	37 1f       	adc	r19, r23
   112a6:	48 1f       	adc	r20, r24
   112a8:	59 1f       	adc	r21, r25
   112aa:	e8 cf       	rjmp	.-48     	; 0x1127c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x64>
   112ac:	dd 23       	and	r29, r29
   112ae:	69 f0       	breq	.+26     	; 0x112ca <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb2>
   112b0:	66 27       	eor	r22, r22
   112b2:	77 27       	eor	r23, r23
   112b4:	cb 01       	movw	r24, r22
   112b6:	62 1b       	sub	r22, r18
   112b8:	73 0b       	sbc	r23, r19
   112ba:	84 0b       	sbc	r24, r20
   112bc:	95 0b       	sbc	r25, r21
   112be:	1e c0       	rjmp	.+60     	; 0x112fc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   112c0:	61 e0       	ldi	r22, 0x01	; 1
   112c2:	70 e0       	ldi	r23, 0x00	; 0
   112c4:	80 e0       	ldi	r24, 0x00	; 0
   112c6:	90 e0       	ldi	r25, 0x00	; 0
   112c8:	19 c0       	rjmp	.+50     	; 0x112fc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   112ca:	ca 01       	movw	r24, r20
   112cc:	b9 01       	movw	r22, r18
   112ce:	16 c0       	rjmp	.+44     	; 0x112fc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   112d0:	85 30       	cpi	r24, 0x05	; 5
   112d2:	28 f4       	brcc	.+10     	; 0x112de <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xc6>
   112d4:	63 81       	ldd	r22, Z+3	; 0x03
   112d6:	74 81       	ldd	r23, Z+4	; 0x04
   112d8:	85 81       	ldd	r24, Z+5	; 0x05
   112da:	96 81       	ldd	r25, Z+6	; 0x06
   112dc:	0f c0       	rjmp	.+30     	; 0x112fc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   112de:	85 30       	cpi	r24, 0x05	; 5
   112e0:	39 f4       	brne	.+14     	; 0x112f0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xd8>
   112e2:	83 81       	ldd	r24, Z+3	; 0x03
   112e4:	94 81       	ldd	r25, Z+4	; 0x04
   112e6:	a5 81       	ldd	r26, Z+5	; 0x05
   112e8:	b6 81       	ldd	r27, Z+6	; 0x06
   112ea:	9c 01       	movw	r18, r24
   112ec:	ad 01       	movw	r20, r26
   112ee:	e0 cf       	rjmp	.-64     	; 0x112b0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x98>
   112f0:	63 81       	ldd	r22, Z+3	; 0x03
   112f2:	74 81       	ldd	r23, Z+4	; 0x04
   112f4:	85 81       	ldd	r24, Z+5	; 0x05
   112f6:	96 81       	ldd	r25, Z+6	; 0x06
   112f8:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <__fixunssfsi>
   112fc:	df 91       	pop	r29
   112fe:	cf 91       	pop	r28
   11300:	1f 91       	pop	r17
   11302:	0f 91       	pop	r16
   11304:	08 95       	ret

00011306 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>:
   11306:	fc 01       	movw	r30, r24
   11308:	a0 81       	ld	r26, Z
   1130a:	b1 81       	ldd	r27, Z+1	; 0x01
   1130c:	8c 91       	ld	r24, X
   1130e:	8d 30       	cpi	r24, 0x0D	; 13
   11310:	51 f0       	breq	.+20     	; 0x11326 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   11312:	20 f4       	brcc	.+8      	; 0x1131c <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x16>
   11314:	89 50       	subi	r24, 0x09	; 9
   11316:	82 30       	cpi	r24, 0x02	; 2
   11318:	b8 f5       	brcc	.+110    	; 0x11388 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   1131a:	05 c0       	rjmp	.+10     	; 0x11326 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   1131c:	80 32       	cpi	r24, 0x20	; 32
   1131e:	19 f0       	breq	.+6      	; 0x11326 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   11320:	8f 32       	cpi	r24, 0x2F	; 47
   11322:	19 f0       	breq	.+6      	; 0x1132a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x24>
   11324:	08 95       	ret
   11326:	11 96       	adiw	r26, 0x01	; 1
   11328:	2c c0       	rjmp	.+88     	; 0x11382 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   1132a:	11 96       	adiw	r26, 0x01	; 1
   1132c:	8c 91       	ld	r24, X
   1132e:	11 97       	sbiw	r26, 0x01	; 1
   11330:	8a 32       	cpi	r24, 0x2A	; 42
   11332:	19 f0       	breq	.+6      	; 0x1133a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x34>
   11334:	8f 32       	cpi	r24, 0x2F	; 47
   11336:	d1 f0       	breq	.+52     	; 0x1136c <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x66>
   11338:	08 95       	ret
   1133a:	11 96       	adiw	r26, 0x01	; 1
   1133c:	b1 83       	std	Z+1, r27	; 0x01
   1133e:	a0 83       	st	Z, r26
   11340:	a0 81       	ld	r26, Z
   11342:	b1 81       	ldd	r27, Z+1	; 0x01
   11344:	cd 01       	movw	r24, r26
   11346:	01 96       	adiw	r24, 0x01	; 1
   11348:	91 83       	std	Z+1, r25	; 0x01
   1134a:	80 83       	st	Z, r24
   1134c:	11 96       	adiw	r26, 0x01	; 1
   1134e:	8c 91       	ld	r24, X
   11350:	11 97       	sbiw	r26, 0x01	; 1
   11352:	88 23       	and	r24, r24
   11354:	c9 f0       	breq	.+50     	; 0x11388 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11356:	8a 32       	cpi	r24, 0x2A	; 42
   11358:	99 f7       	brne	.-26     	; 0x11340 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   1135a:	12 96       	adiw	r26, 0x02	; 2
   1135c:	8c 91       	ld	r24, X
   1135e:	12 97       	sbiw	r26, 0x02	; 2
   11360:	8f 32       	cpi	r24, 0x2F	; 47
   11362:	71 f7       	brne	.-36     	; 0x11340 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   11364:	13 96       	adiw	r26, 0x03	; 3
   11366:	0d c0       	rjmp	.+26     	; 0x11382 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   11368:	8a 30       	cpi	r24, 0x0A	; 10
   1136a:	71 f2       	breq	.-100    	; 0x11308 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   1136c:	a0 81       	ld	r26, Z
   1136e:	b1 81       	ldd	r27, Z+1	; 0x01
   11370:	cd 01       	movw	r24, r26
   11372:	01 96       	adiw	r24, 0x01	; 1
   11374:	91 83       	std	Z+1, r25	; 0x01
   11376:	80 83       	st	Z, r24
   11378:	11 96       	adiw	r26, 0x01	; 1
   1137a:	8c 91       	ld	r24, X
   1137c:	81 11       	cpse	r24, r1
   1137e:	f4 cf       	rjmp	.-24     	; 0x11368 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x62>
   11380:	03 c0       	rjmp	.+6      	; 0x11388 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11382:	b1 83       	std	Z+1, r27	; 0x01
   11384:	a0 83       	st	Z, r26
   11386:	c0 cf       	rjmp	.-128    	; 0x11308 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   11388:	08 95       	ret

0001138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>:
   1138a:	1f 93       	push	r17
   1138c:	cf 93       	push	r28
   1138e:	df 93       	push	r29
   11390:	ec 01       	movw	r28, r24
   11392:	16 2f       	mov	r17, r22
   11394:	b8 df       	rcall	.-144    	; 0x11306 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11396:	e8 81       	ld	r30, Y
   11398:	f9 81       	ldd	r31, Y+1	; 0x01
   1139a:	80 81       	ld	r24, Z
   1139c:	18 13       	cpse	r17, r24
   1139e:	05 c0       	rjmp	.+10     	; 0x113aa <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x20>
   113a0:	31 96       	adiw	r30, 0x01	; 1
   113a2:	f9 83       	std	Y+1, r31	; 0x01
   113a4:	e8 83       	st	Y, r30
   113a6:	81 e0       	ldi	r24, 0x01	; 1
   113a8:	01 c0       	rjmp	.+2      	; 0x113ac <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x22>
   113aa:	80 e0       	ldi	r24, 0x00	; 0
   113ac:	df 91       	pop	r29
   113ae:	cf 91       	pop	r28
   113b0:	1f 91       	pop	r17
   113b2:	08 95       	ret

000113b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>:
   113b4:	0f 93       	push	r16
   113b6:	1f 93       	push	r17
   113b8:	cf 93       	push	r28
   113ba:	df 93       	push	r29
   113bc:	ec 01       	movw	r28, r24
   113be:	0c 81       	ldd	r16, Y+4	; 0x04
   113c0:	1d 81       	ldd	r17, Y+5	; 0x05
   113c2:	02 96       	adiw	r24, 0x02	; 2
   113c4:	a0 df       	rcall	.-192    	; 0x11306 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   113c6:	ea 81       	ldd	r30, Y+2	; 0x02
   113c8:	fb 81       	ldd	r31, Y+3	; 0x03
   113ca:	80 81       	ld	r24, Z
   113cc:	87 32       	cpi	r24, 0x27	; 39
   113ce:	31 f1       	breq	.+76     	; 0x1141c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   113d0:	82 32       	cpi	r24, 0x22	; 34
   113d2:	21 f1       	breq	.+72     	; 0x1141c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   113d4:	90 ed       	ldi	r25, 0xD0	; 208
   113d6:	98 0f       	add	r25, r24
   113d8:	9a 30       	cpi	r25, 0x0A	; 10
   113da:	70 f0       	brcs	.+28     	; 0x113f8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   113dc:	91 ea       	ldi	r25, 0xA1	; 161
   113de:	98 0f       	add	r25, r24
   113e0:	9c 31       	cpi	r25, 0x1C	; 28
   113e2:	50 f0       	brcs	.+20     	; 0x113f8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   113e4:	9f eb       	ldi	r25, 0xBF	; 191
   113e6:	98 0f       	add	r25, r24
   113e8:	9a 31       	cpi	r25, 0x1A	; 26
   113ea:	30 f0       	brcs	.+12     	; 0x113f8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   113ec:	8b 32       	cpi	r24, 0x2B	; 43
   113ee:	21 f0       	breq	.+8      	; 0x113f8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   113f0:	93 ed       	ldi	r25, 0xD3	; 211
   113f2:	98 0f       	add	r25, r24
   113f4:	92 30       	cpi	r25, 0x02	; 2
   113f6:	f0 f5       	brcc	.+124    	; 0x11474 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   113f8:	2a 81       	ldd	r18, Y+2	; 0x02
   113fa:	3b 81       	ldd	r19, Y+3	; 0x03
   113fc:	2f 5f       	subi	r18, 0xFF	; 255
   113fe:	3f 4f       	sbci	r19, 0xFF	; 255
   11400:	3b 83       	std	Y+3, r19	; 0x03
   11402:	2a 83       	std	Y+2, r18	; 0x02
   11404:	ec 81       	ldd	r30, Y+4	; 0x04
   11406:	fd 81       	ldd	r31, Y+5	; 0x05
   11408:	9f 01       	movw	r18, r30
   1140a:	2f 5f       	subi	r18, 0xFF	; 255
   1140c:	3f 4f       	sbci	r19, 0xFF	; 255
   1140e:	3d 83       	std	Y+5, r19	; 0x05
   11410:	2c 83       	std	Y+4, r18	; 0x04
   11412:	80 83       	st	Z, r24
   11414:	ea 81       	ldd	r30, Y+2	; 0x02
   11416:	fb 81       	ldd	r31, Y+3	; 0x03
   11418:	80 81       	ld	r24, Z
   1141a:	dc cf       	rjmp	.-72     	; 0x113d4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x20>
   1141c:	31 96       	adiw	r30, 0x01	; 1
   1141e:	fb 83       	std	Y+3, r31	; 0x03
   11420:	ea 83       	std	Y+2, r30	; 0x02
   11422:	ea 81       	ldd	r30, Y+2	; 0x02
   11424:	fb 81       	ldd	r31, Y+3	; 0x03
   11426:	90 81       	ld	r25, Z
   11428:	99 23       	and	r25, r25
   1142a:	21 f1       	breq	.+72     	; 0x11474 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   1142c:	9f 01       	movw	r18, r30
   1142e:	2f 5f       	subi	r18, 0xFF	; 255
   11430:	3f 4f       	sbci	r19, 0xFF	; 255
   11432:	3b 83       	std	Y+3, r19	; 0x03
   11434:	2a 83       	std	Y+2, r18	; 0x02
   11436:	98 17       	cp	r25, r24
   11438:	e9 f0       	breq	.+58     	; 0x11474 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   1143a:	9c 35       	cpi	r25, 0x5C	; 92
   1143c:	91 f4       	brne	.+36     	; 0x11462 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xae>
   1143e:	91 81       	ldd	r25, Z+1	; 0x01
   11440:	a1 ee       	ldi	r26, 0xE1	; 225
   11442:	b6 e0       	ldi	r27, 0x06	; 6
   11444:	2c 91       	ld	r18, X
   11446:	22 23       	and	r18, r18
   11448:	39 f0       	breq	.+14     	; 0x11458 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   1144a:	92 13       	cpse	r25, r18
   1144c:	03 c0       	rjmp	.+6      	; 0x11454 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa0>
   1144e:	11 96       	adiw	r26, 0x01	; 1
   11450:	9c 91       	ld	r25, X
   11452:	02 c0       	rjmp	.+4      	; 0x11458 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   11454:	12 96       	adiw	r26, 0x02	; 2
   11456:	f6 cf       	rjmp	.-20     	; 0x11444 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x90>
   11458:	99 23       	and	r25, r25
   1145a:	61 f0       	breq	.+24     	; 0x11474 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   1145c:	32 96       	adiw	r30, 0x02	; 2
   1145e:	fb 83       	std	Y+3, r31	; 0x03
   11460:	ea 83       	std	Y+2, r30	; 0x02
   11462:	ec 81       	ldd	r30, Y+4	; 0x04
   11464:	fd 81       	ldd	r31, Y+5	; 0x05
   11466:	9f 01       	movw	r18, r30
   11468:	2f 5f       	subi	r18, 0xFF	; 255
   1146a:	3f 4f       	sbci	r19, 0xFF	; 255
   1146c:	3d 83       	std	Y+5, r19	; 0x05
   1146e:	2c 83       	std	Y+4, r18	; 0x04
   11470:	90 83       	st	Z, r25
   11472:	d7 cf       	rjmp	.-82     	; 0x11422 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x6e>
   11474:	ec 81       	ldd	r30, Y+4	; 0x04
   11476:	fd 81       	ldd	r31, Y+5	; 0x05
   11478:	cf 01       	movw	r24, r30
   1147a:	01 96       	adiw	r24, 0x01	; 1
   1147c:	9d 83       	std	Y+5, r25	; 0x05
   1147e:	8c 83       	std	Y+4, r24	; 0x04
   11480:	10 82       	st	Z, r1
   11482:	c8 01       	movw	r24, r16
   11484:	df 91       	pop	r29
   11486:	cf 91       	pop	r28
   11488:	1f 91       	pop	r17
   1148a:	0f 91       	pop	r16
   1148c:	08 95       	ret

0001148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   1148e:	0f 93       	push	r16
   11490:	1f 93       	push	r17
   11492:	cf 93       	push	r28
   11494:	df 93       	push	r29
   11496:	8b 01       	movw	r16, r22
   11498:	fc 01       	movw	r30, r24
   1149a:	c2 81       	ldd	r28, Z+2	; 0x02
   1149c:	d3 81       	ldd	r29, Z+3	; 0x03
   1149e:	20 97       	sbiw	r28, 0x00	; 0
   114a0:	a1 f0       	breq	.+40     	; 0x114ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   114a2:	8a 81       	ldd	r24, Y+2	; 0x02
   114a4:	9b 81       	ldd	r25, Y+3	; 0x03
   114a6:	01 15       	cp	r16, r1
   114a8:	11 05       	cpc	r17, r1
   114aa:	11 f0       	breq	.+4      	; 0x114b0 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x22>
   114ac:	00 97       	sbiw	r24, 0x00	; 0
   114ae:	21 f4       	brne	.+8      	; 0x114b8 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2a>
   114b0:	80 17       	cp	r24, r16
   114b2:	91 07       	cpc	r25, r17
   114b4:	31 f4       	brne	.+12     	; 0x114c2 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x34>
   114b6:	09 c0       	rjmp	.+18     	; 0x114ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   114b8:	b8 01       	movw	r22, r16
   114ba:	0e 94 14 ed 	call	0x1da28	; 0x1da28 <strcmp_P>
   114be:	89 2b       	or	r24, r25
   114c0:	21 f0       	breq	.+8      	; 0x114ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   114c2:	09 90       	ld	r0, Y+
   114c4:	d8 81       	ld	r29, Y
   114c6:	c0 2d       	mov	r28, r0
   114c8:	ea cf       	rjmp	.-44     	; 0x1149e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   114ca:	ce 01       	movw	r24, r28
   114cc:	df 91       	pop	r29
   114ce:	cf 91       	pop	r28
   114d0:	1f 91       	pop	r17
   114d2:	0f 91       	pop	r16
   114d4:	08 95       	ret

000114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>:
   114d6:	cf 93       	push	r28
   114d8:	df 93       	push	r29
   114da:	ec 01       	movw	r28, r24
   114dc:	68 81       	ld	r22, Y
   114de:	79 81       	ldd	r23, Y+1	; 0x01
   114e0:	89 e0       	ldi	r24, 0x09	; 9
   114e2:	90 e0       	ldi	r25, 0x00	; 0
   114e4:	1c db       	rcall	.-2504   	; 0x10b1e <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   114e6:	00 97       	sbiw	r24, 0x00	; 0
   114e8:	21 f0       	breq	.+8      	; 0x114f2 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x1c>
   114ea:	fc 01       	movw	r30, r24
   114ec:	11 82       	std	Z+1, r1	; 0x01
   114ee:	10 82       	st	Z, r1
   114f0:	14 82       	std	Z+4, r1	; 0x04
   114f2:	ea 81       	ldd	r30, Y+2	; 0x02
   114f4:	fb 81       	ldd	r31, Y+3	; 0x03
   114f6:	30 97       	sbiw	r30, 0x00	; 0
   114f8:	51 f0       	breq	.+20     	; 0x1150e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x38>
   114fa:	20 81       	ld	r18, Z
   114fc:	31 81       	ldd	r19, Z+1	; 0x01
   114fe:	21 15       	cp	r18, r1
   11500:	31 05       	cpc	r19, r1
   11502:	11 f0       	breq	.+4      	; 0x11508 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x32>
   11504:	f9 01       	movw	r30, r18
   11506:	f9 cf       	rjmp	.-14     	; 0x114fa <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x24>
   11508:	91 83       	std	Z+1, r25	; 0x01
   1150a:	80 83       	st	Z, r24
   1150c:	02 c0       	rjmp	.+4      	; 0x11512 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x3c>
   1150e:	9b 83       	std	Y+3, r25	; 0x03
   11510:	8a 83       	std	Y+2, r24	; 0x02
   11512:	df 91       	pop	r29
   11514:	cf 91       	pop	r28
   11516:	08 95       	ret

00011518 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>:
   11518:	cf 92       	push	r12
   1151a:	df 92       	push	r13
   1151c:	ef 92       	push	r14
   1151e:	ff 92       	push	r15
   11520:	0f 93       	push	r16
   11522:	1f 93       	push	r17
   11524:	cf 93       	push	r28
   11526:	df 93       	push	r29
   11528:	41 15       	cp	r20, r1
   1152a:	51 05       	cpc	r21, r1
   1152c:	e1 f0       	breq	.+56     	; 0x11566 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x4e>
   1152e:	ea 01       	movw	r28, r20
   11530:	8b 01       	movw	r16, r22
   11532:	7c 01       	movw	r14, r24
   11534:	ca 01       	movw	r24, r20
   11536:	0e 94 1d ed 	call	0x1da3a	; 0x1da3a <__strlen_P>
   1153a:	01 96       	adiw	r24, 0x01	; 1
   1153c:	6c 01       	movw	r12, r24
   1153e:	d7 01       	movw	r26, r14
   11540:	ed 91       	ld	r30, X+
   11542:	fc 91       	ld	r31, X
   11544:	01 90       	ld	r0, Z+
   11546:	f0 81       	ld	r31, Z
   11548:	e0 2d       	mov	r30, r0
   1154a:	bc 01       	movw	r22, r24
   1154c:	c7 01       	movw	r24, r14
   1154e:	19 95       	eicall
   11550:	7c 01       	movw	r14, r24
   11552:	00 97       	sbiw	r24, 0x00	; 0
   11554:	69 f0       	breq	.+26     	; 0x11570 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x58>
   11556:	a6 01       	movw	r20, r12
   11558:	be 01       	movw	r22, r28
   1155a:	0e 94 0b ed 	call	0x1da16	; 0x1da16 <memcpy_P>
   1155e:	f8 01       	movw	r30, r16
   11560:	f1 82       	std	Z+1, r15	; 0x01
   11562:	e0 82       	st	Z, r14
   11564:	03 c0       	rjmp	.+6      	; 0x1156c <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x54>
   11566:	db 01       	movw	r26, r22
   11568:	1d 92       	st	X+, r1
   1156a:	1c 92       	st	X, r1
   1156c:	81 e0       	ldi	r24, 0x01	; 1
   1156e:	01 c0       	rjmp	.+2      	; 0x11572 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x5a>
   11570:	80 e0       	ldi	r24, 0x00	; 0
   11572:	df 91       	pop	r29
   11574:	cf 91       	pop	r28
   11576:	1f 91       	pop	r17
   11578:	0f 91       	pop	r16
   1157a:	ff 90       	pop	r15
   1157c:	ef 90       	pop	r14
   1157e:	df 90       	pop	r13
   11580:	cf 90       	pop	r12
   11582:	08 95       	ret

00011584 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>:
   11584:	cf 92       	push	r12
   11586:	df 92       	push	r13
   11588:	ef 92       	push	r14
   1158a:	ff 92       	push	r15
   1158c:	0f 93       	push	r16
   1158e:	1f 93       	push	r17
   11590:	cf 93       	push	r28
   11592:	df 93       	push	r29
   11594:	61 15       	cp	r22, r1
   11596:	71 05       	cpc	r23, r1
   11598:	11 f4       	brne	.+4      	; 0x1159e <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   1159a:	80 e0       	ldi	r24, 0x00	; 0
   1159c:	22 c0       	rjmp	.+68     	; 0x115e2 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1159e:	6a 01       	movw	r12, r20
   115a0:	7b 01       	movw	r14, r22
   115a2:	8c 01       	movw	r16, r24
   115a4:	74 df       	rcall	.-280    	; 0x1148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   115a6:	ec 01       	movw	r28, r24
   115a8:	89 2b       	or	r24, r25
   115aa:	79 f4       	brne	.+30     	; 0x115ca <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x46>
   115ac:	c8 01       	movw	r24, r16
   115ae:	93 df       	rcall	.-218    	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   115b0:	ec 01       	movw	r28, r24
   115b2:	00 97       	sbiw	r24, 0x00	; 0
   115b4:	91 f3       	breq	.-28     	; 0x1159a <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   115b6:	a7 01       	movw	r20, r14
   115b8:	bc 01       	movw	r22, r24
   115ba:	6e 5f       	subi	r22, 0xFE	; 254
   115bc:	7f 4f       	sbci	r23, 0xFF	; 255
   115be:	f8 01       	movw	r30, r16
   115c0:	80 81       	ld	r24, Z
   115c2:	91 81       	ldd	r25, Z+1	; 0x01
   115c4:	a9 df       	rcall	.-174    	; 0x11518 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   115c6:	88 23       	and	r24, r24
   115c8:	41 f3       	breq	.-48     	; 0x1159a <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   115ca:	f6 01       	movw	r30, r12
   115cc:	80 81       	ld	r24, Z
   115ce:	90 e0       	ldi	r25, 0x00	; 0
   115d0:	a0 e0       	ldi	r26, 0x00	; 0
   115d2:	b0 e0       	ldi	r27, 0x00	; 0
   115d4:	23 e0       	ldi	r18, 0x03	; 3
   115d6:	2c 83       	std	Y+4, r18	; 0x04
   115d8:	8d 83       	std	Y+5, r24	; 0x05
   115da:	9e 83       	std	Y+6, r25	; 0x06
   115dc:	af 83       	std	Y+7, r26	; 0x07
   115de:	b8 87       	std	Y+8, r27	; 0x08
   115e0:	81 e0       	ldi	r24, 0x01	; 1
   115e2:	df 91       	pop	r29
   115e4:	cf 91       	pop	r28
   115e6:	1f 91       	pop	r17
   115e8:	0f 91       	pop	r16
   115ea:	ff 90       	pop	r15
   115ec:	ef 90       	pop	r14
   115ee:	df 90       	pop	r13
   115f0:	cf 90       	pop	r12
   115f2:	08 95       	ret

000115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>:
   115f4:	cf 92       	push	r12
   115f6:	df 92       	push	r13
   115f8:	ef 92       	push	r14
   115fa:	ff 92       	push	r15
   115fc:	0f 93       	push	r16
   115fe:	1f 93       	push	r17
   11600:	cf 93       	push	r28
   11602:	df 93       	push	r29
   11604:	61 15       	cp	r22, r1
   11606:	71 05       	cpc	r23, r1
   11608:	11 f4       	brne	.+4      	; 0x1160e <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   1160a:	80 e0       	ldi	r24, 0x00	; 0
   1160c:	22 c0       	rjmp	.+68     	; 0x11652 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1160e:	6a 01       	movw	r12, r20
   11610:	7b 01       	movw	r14, r22
   11612:	8c 01       	movw	r16, r24
   11614:	3c df       	rcall	.-392    	; 0x1148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11616:	ec 01       	movw	r28, r24
   11618:	89 2b       	or	r24, r25
   1161a:	79 f4       	brne	.+30     	; 0x1163a <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x46>
   1161c:	c8 01       	movw	r24, r16
   1161e:	5b df       	rcall	.-330    	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11620:	ec 01       	movw	r28, r24
   11622:	00 97       	sbiw	r24, 0x00	; 0
   11624:	91 f3       	breq	.-28     	; 0x1160a <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11626:	a7 01       	movw	r20, r14
   11628:	bc 01       	movw	r22, r24
   1162a:	6e 5f       	subi	r22, 0xFE	; 254
   1162c:	7f 4f       	sbci	r23, 0xFF	; 255
   1162e:	f8 01       	movw	r30, r16
   11630:	80 81       	ld	r24, Z
   11632:	91 81       	ldd	r25, Z+1	; 0x01
   11634:	71 df       	rcall	.-286    	; 0x11518 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11636:	88 23       	and	r24, r24
   11638:	41 f3       	breq	.-48     	; 0x1160a <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1163a:	f6 01       	movw	r30, r12
   1163c:	80 81       	ld	r24, Z
   1163e:	91 81       	ldd	r25, Z+1	; 0x01
   11640:	a0 e0       	ldi	r26, 0x00	; 0
   11642:	b0 e0       	ldi	r27, 0x00	; 0
   11644:	24 e0       	ldi	r18, 0x04	; 4
   11646:	2c 83       	std	Y+4, r18	; 0x04
   11648:	8d 83       	std	Y+5, r24	; 0x05
   1164a:	9e 83       	std	Y+6, r25	; 0x06
   1164c:	af 83       	std	Y+7, r26	; 0x07
   1164e:	b8 87       	std	Y+8, r27	; 0x08
   11650:	81 e0       	ldi	r24, 0x01	; 1
   11652:	df 91       	pop	r29
   11654:	cf 91       	pop	r28
   11656:	1f 91       	pop	r17
   11658:	0f 91       	pop	r16
   1165a:	ff 90       	pop	r15
   1165c:	ef 90       	pop	r14
   1165e:	df 90       	pop	r13
   11660:	cf 90       	pop	r12
   11662:	08 95       	ret

00011664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>:
   11664:	cf 92       	push	r12
   11666:	df 92       	push	r13
   11668:	ef 92       	push	r14
   1166a:	ff 92       	push	r15
   1166c:	0f 93       	push	r16
   1166e:	1f 93       	push	r17
   11670:	cf 93       	push	r28
   11672:	df 93       	push	r29
   11674:	61 15       	cp	r22, r1
   11676:	71 05       	cpc	r23, r1
   11678:	21 f1       	breq	.+72     	; 0x116c2 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1167a:	6a 01       	movw	r12, r20
   1167c:	7b 01       	movw	r14, r22
   1167e:	8c 01       	movw	r16, r24
   11680:	06 df       	rcall	.-500    	; 0x1148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11682:	ec 01       	movw	r28, r24
   11684:	89 2b       	or	r24, r25
   11686:	79 f4       	brne	.+30     	; 0x116a6 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x42>
   11688:	c8 01       	movw	r24, r16
   1168a:	25 df       	rcall	.-438    	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1168c:	ec 01       	movw	r28, r24
   1168e:	00 97       	sbiw	r24, 0x00	; 0
   11690:	c1 f0       	breq	.+48     	; 0x116c2 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11692:	a7 01       	movw	r20, r14
   11694:	bc 01       	movw	r22, r24
   11696:	6e 5f       	subi	r22, 0xFE	; 254
   11698:	7f 4f       	sbci	r23, 0xFF	; 255
   1169a:	f8 01       	movw	r30, r16
   1169c:	80 81       	ld	r24, Z
   1169e:	91 81       	ldd	r25, Z+1	; 0x01
   116a0:	3b df       	rcall	.-394    	; 0x11518 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   116a2:	88 23       	and	r24, r24
   116a4:	71 f0       	breq	.+28     	; 0x116c2 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   116a6:	f6 01       	movw	r30, r12
   116a8:	60 81       	ld	r22, Z
   116aa:	71 81       	ldd	r23, Z+1	; 0x01
   116ac:	ce 01       	movw	r24, r28
   116ae:	04 96       	adiw	r24, 0x04	; 4
   116b0:	df 91       	pop	r29
   116b2:	cf 91       	pop	r28
   116b4:	1f 91       	pop	r17
   116b6:	0f 91       	pop	r16
   116b8:	ff 90       	pop	r15
   116ba:	ef 90       	pop	r14
   116bc:	df 90       	pop	r13
   116be:	cf 90       	pop	r12
   116c0:	00 ca       	rjmp	.-3072   	; 0x10ac2 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   116c2:	80 e0       	ldi	r24, 0x00	; 0
   116c4:	df 91       	pop	r29
   116c6:	cf 91       	pop	r28
   116c8:	1f 91       	pop	r17
   116ca:	0f 91       	pop	r16
   116cc:	ff 90       	pop	r15
   116ce:	ef 90       	pop	r14
   116d0:	df 90       	pop	r13
   116d2:	cf 90       	pop	r12
   116d4:	08 95       	ret

000116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>:
   116d6:	cf 92       	push	r12
   116d8:	df 92       	push	r13
   116da:	ef 92       	push	r14
   116dc:	ff 92       	push	r15
   116de:	0f 93       	push	r16
   116e0:	1f 93       	push	r17
   116e2:	cf 93       	push	r28
   116e4:	df 93       	push	r29
   116e6:	61 15       	cp	r22, r1
   116e8:	71 05       	cpc	r23, r1
   116ea:	11 f4       	brne	.+4      	; 0x116f0 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   116ec:	80 e0       	ldi	r24, 0x00	; 0
   116ee:	22 c0       	rjmp	.+68     	; 0x11734 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   116f0:	6a 01       	movw	r12, r20
   116f2:	7b 01       	movw	r14, r22
   116f4:	8c 01       	movw	r16, r24
   116f6:	cb de       	rcall	.-618    	; 0x1148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   116f8:	ec 01       	movw	r28, r24
   116fa:	89 2b       	or	r24, r25
   116fc:	79 f4       	brne	.+30     	; 0x1171c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x46>
   116fe:	c8 01       	movw	r24, r16
   11700:	ea de       	rcall	.-556    	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11702:	ec 01       	movw	r28, r24
   11704:	00 97       	sbiw	r24, 0x00	; 0
   11706:	91 f3       	breq	.-28     	; 0x116ec <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11708:	a7 01       	movw	r20, r14
   1170a:	bc 01       	movw	r22, r24
   1170c:	6e 5f       	subi	r22, 0xFE	; 254
   1170e:	7f 4f       	sbci	r23, 0xFF	; 255
   11710:	f8 01       	movw	r30, r16
   11712:	80 81       	ld	r24, Z
   11714:	91 81       	ldd	r25, Z+1	; 0x01
   11716:	00 df       	rcall	.-512    	; 0x11518 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11718:	88 23       	and	r24, r24
   1171a:	41 f3       	breq	.-48     	; 0x116ec <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1171c:	f6 01       	movw	r30, r12
   1171e:	80 81       	ld	r24, Z
   11720:	90 e0       	ldi	r25, 0x00	; 0
   11722:	a0 e0       	ldi	r26, 0x00	; 0
   11724:	b0 e0       	ldi	r27, 0x00	; 0
   11726:	24 e0       	ldi	r18, 0x04	; 4
   11728:	2c 83       	std	Y+4, r18	; 0x04
   1172a:	8d 83       	std	Y+5, r24	; 0x05
   1172c:	9e 83       	std	Y+6, r25	; 0x06
   1172e:	af 83       	std	Y+7, r26	; 0x07
   11730:	b8 87       	std	Y+8, r27	; 0x08
   11732:	81 e0       	ldi	r24, 0x01	; 1
   11734:	df 91       	pop	r29
   11736:	cf 91       	pop	r28
   11738:	1f 91       	pop	r17
   1173a:	0f 91       	pop	r16
   1173c:	ff 90       	pop	r15
   1173e:	ef 90       	pop	r14
   11740:	df 90       	pop	r13
   11742:	cf 90       	pop	r12
   11744:	08 95       	ret

00011746 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   11746:	0f 93       	push	r16
   11748:	1f 93       	push	r17
   1174a:	cf 93       	push	r28
   1174c:	df 93       	push	r29
   1174e:	8b 01       	movw	r16, r22
   11750:	fc 01       	movw	r30, r24
   11752:	c2 81       	ldd	r28, Z+2	; 0x02
   11754:	d3 81       	ldd	r29, Z+3	; 0x03
   11756:	20 97       	sbiw	r28, 0x00	; 0
   11758:	a9 f0       	breq	.+42     	; 0x11784 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   1175a:	6a 81       	ldd	r22, Y+2	; 0x02
   1175c:	7b 81       	ldd	r23, Y+3	; 0x03
   1175e:	01 15       	cp	r16, r1
   11760:	11 05       	cpc	r17, r1
   11762:	19 f0       	breq	.+6      	; 0x1176a <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x24>
   11764:	61 15       	cp	r22, r1
   11766:	71 05       	cpc	r23, r1
   11768:	21 f4       	brne	.+8      	; 0x11772 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2c>
   1176a:	60 17       	cp	r22, r16
   1176c:	71 07       	cpc	r23, r17
   1176e:	31 f4       	brne	.+12     	; 0x1177c <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x36>
   11770:	09 c0       	rjmp	.+18     	; 0x11784 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   11772:	c8 01       	movw	r24, r16
   11774:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   11778:	89 2b       	or	r24, r25
   1177a:	21 f0       	breq	.+8      	; 0x11784 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   1177c:	09 90       	ld	r0, Y+
   1177e:	d8 81       	ld	r29, Y
   11780:	c0 2d       	mov	r28, r0
   11782:	e9 cf       	rjmp	.-46     	; 0x11756 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   11784:	ce 01       	movw	r24, r28
   11786:	df 91       	pop	r29
   11788:	cf 91       	pop	r28
   1178a:	1f 91       	pop	r17
   1178c:	0f 91       	pop	r16
   1178e:	08 95       	ret

00011790 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>:
   11790:	ef 92       	push	r14
   11792:	ff 92       	push	r15
   11794:	0f 93       	push	r16
   11796:	1f 93       	push	r17
   11798:	cf 93       	push	r28
   1179a:	df 93       	push	r29
   1179c:	61 15       	cp	r22, r1
   1179e:	71 05       	cpc	r23, r1
   117a0:	c1 f0       	breq	.+48     	; 0x117d2 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   117a2:	7a 01       	movw	r14, r20
   117a4:	eb 01       	movw	r28, r22
   117a6:	8c 01       	movw	r16, r24
   117a8:	ce df       	rcall	.-100    	; 0x11746 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   117aa:	00 97       	sbiw	r24, 0x00	; 0
   117ac:	39 f4       	brne	.+14     	; 0x117bc <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x2c>
   117ae:	c8 01       	movw	r24, r16
   117b0:	92 de       	rcall	.-732    	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   117b2:	00 97       	sbiw	r24, 0x00	; 0
   117b4:	71 f0       	breq	.+28     	; 0x117d2 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   117b6:	fc 01       	movw	r30, r24
   117b8:	d3 83       	std	Z+3, r29	; 0x03
   117ba:	c2 83       	std	Z+2, r28	; 0x02
   117bc:	f7 01       	movw	r30, r14
   117be:	60 81       	ld	r22, Z
   117c0:	71 81       	ldd	r23, Z+1	; 0x01
   117c2:	04 96       	adiw	r24, 0x04	; 4
   117c4:	df 91       	pop	r29
   117c6:	cf 91       	pop	r28
   117c8:	1f 91       	pop	r17
   117ca:	0f 91       	pop	r16
   117cc:	ff 90       	pop	r15
   117ce:	ef 90       	pop	r14
   117d0:	78 c9       	rjmp	.-3344   	; 0x10ac2 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   117d2:	80 e0       	ldi	r24, 0x00	; 0
   117d4:	df 91       	pop	r29
   117d6:	cf 91       	pop	r28
   117d8:	1f 91       	pop	r17
   117da:	0f 91       	pop	r16
   117dc:	ff 90       	pop	r15
   117de:	ef 90       	pop	r14
   117e0:	08 95       	ret

000117e2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>:
   117e2:	cf 92       	push	r12
   117e4:	df 92       	push	r13
   117e6:	ef 92       	push	r14
   117e8:	ff 92       	push	r15
   117ea:	0f 93       	push	r16
   117ec:	1f 93       	push	r17
   117ee:	cf 93       	push	r28
   117f0:	df 93       	push	r29
   117f2:	00 d0       	rcall	.+0      	; 0x117f4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x12>
   117f4:	1f 92       	push	r1
   117f6:	1f 92       	push	r1
   117f8:	cd b7       	in	r28, 0x3d	; 61
   117fa:	de b7       	in	r29, 0x3e	; 62
   117fc:	7c 01       	movw	r14, r24
   117fe:	fc 01       	movw	r30, r24
   11800:	86 81       	ldd	r24, Z+6	; 0x06
   11802:	88 23       	and	r24, r24
   11804:	09 f4       	brne	.+2      	; 0x11808 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x26>
   11806:	67 c0       	rjmp	.+206    	; 0x118d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11808:	81 50       	subi	r24, 0x01	; 1
   1180a:	f7 01       	movw	r30, r14
   1180c:	86 83       	std	Z+6, r24	; 0x06
   1180e:	00 81       	ld	r16, Z
   11810:	11 81       	ldd	r17, Z+1	; 0x01
   11812:	b8 01       	movw	r22, r16
   11814:	84 e0       	ldi	r24, 0x04	; 4
   11816:	90 e0       	ldi	r25, 0x00	; 0
   11818:	82 d9       	rcall	.-3324   	; 0x10b1e <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   1181a:	00 97       	sbiw	r24, 0x00	; 0
   1181c:	09 f4       	brne	.+2      	; 0x11820 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x3e>
   1181e:	5d c0       	rjmp	.+186    	; 0x118da <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf8>
   11820:	fc 01       	movw	r30, r24
   11822:	11 83       	std	Z+1, r17	; 0x01
   11824:	00 83       	st	Z, r16
   11826:	13 82       	std	Z+3, r1	; 0x03
   11828:	12 82       	std	Z+2, r1	; 0x02
   1182a:	8c 01       	movw	r16, r24
   1182c:	67 01       	movw	r12, r14
   1182e:	f2 e0       	ldi	r31, 0x02	; 2
   11830:	cf 0e       	add	r12, r31
   11832:	d1 1c       	adc	r13, r1
   11834:	6b e5       	ldi	r22, 0x5B	; 91
   11836:	c6 01       	movw	r24, r12
   11838:	a8 dd       	rcall	.-1200   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1183a:	88 23       	and	r24, r24
   1183c:	09 f4       	brne	.+2      	; 0x11840 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x5e>
   1183e:	4b c0       	rjmp	.+150    	; 0x118d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11840:	6d e5       	ldi	r22, 0x5D	; 93
   11842:	c6 01       	movw	r24, r12
   11844:	a2 dd       	rcall	.-1212   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11846:	81 11       	cpse	r24, r1
   11848:	40 c0       	rjmp	.+128    	; 0x118ca <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   1184a:	19 82       	std	Y+1, r1	; 0x01
   1184c:	be 01       	movw	r22, r28
   1184e:	6f 5f       	subi	r22, 0xFF	; 255
   11850:	7f 4f       	sbci	r23, 0xFF	; 255
   11852:	c7 01       	movw	r24, r14
   11854:	52 d0       	rcall	.+164    	; 0x118fa <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   11856:	88 23       	and	r24, r24
   11858:	09 f4       	brne	.+2      	; 0x1185c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x7a>
   1185a:	3d c0       	rjmp	.+122    	; 0x118d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   1185c:	f8 01       	movw	r30, r16
   1185e:	60 81       	ld	r22, Z
   11860:	71 81       	ldd	r23, Z+1	; 0x01
   11862:	87 e0       	ldi	r24, 0x07	; 7
   11864:	90 e0       	ldi	r25, 0x00	; 0
   11866:	5b d9       	rcall	.-3402   	; 0x10b1e <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   11868:	dc 01       	movw	r26, r24
   1186a:	89 2b       	or	r24, r25
   1186c:	31 f0       	breq	.+12     	; 0x1187a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x98>
   1186e:	11 96       	adiw	r26, 0x01	; 1
   11870:	1c 92       	st	X, r1
   11872:	1e 92       	st	-X, r1
   11874:	12 96       	adiw	r26, 0x02	; 2
   11876:	1c 92       	st	X, r1
   11878:	12 97       	sbiw	r26, 0x02	; 2
   1187a:	f8 01       	movw	r30, r16
   1187c:	22 81       	ldd	r18, Z+2	; 0x02
   1187e:	33 81       	ldd	r19, Z+3	; 0x03
   11880:	21 15       	cp	r18, r1
   11882:	31 05       	cpc	r19, r1
   11884:	51 f0       	breq	.+20     	; 0x1189a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb8>
   11886:	f9 01       	movw	r30, r18
   11888:	80 81       	ld	r24, Z
   1188a:	91 81       	ldd	r25, Z+1	; 0x01
   1188c:	00 97       	sbiw	r24, 0x00	; 0
   1188e:	11 f0       	breq	.+4      	; 0x11894 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb2>
   11890:	9c 01       	movw	r18, r24
   11892:	f9 cf       	rjmp	.-14     	; 0x11886 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xa4>
   11894:	b1 83       	std	Z+1, r27	; 0x01
   11896:	a0 83       	st	Z, r26
   11898:	03 c0       	rjmp	.+6      	; 0x118a0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xbe>
   1189a:	f8 01       	movw	r30, r16
   1189c:	b3 83       	std	Z+3, r27	; 0x03
   1189e:	a2 83       	std	Z+2, r26	; 0x02
   118a0:	10 97       	sbiw	r26, 0x00	; 0
   118a2:	c9 f0       	breq	.+50     	; 0x118d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   118a4:	85 e0       	ldi	r24, 0x05	; 5
   118a6:	fe 01       	movw	r30, r28
   118a8:	31 96       	adiw	r30, 0x01	; 1
   118aa:	12 96       	adiw	r26, 0x02	; 2
   118ac:	01 90       	ld	r0, Z+
   118ae:	0d 92       	st	X+, r0
   118b0:	8a 95       	dec	r24
   118b2:	e1 f7       	brne	.-8      	; 0x118ac <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xca>
   118b4:	6d e5       	ldi	r22, 0x5D	; 93
   118b6:	c6 01       	movw	r24, r12
   118b8:	68 dd       	rcall	.-1328   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   118ba:	81 11       	cpse	r24, r1
   118bc:	06 c0       	rjmp	.+12     	; 0x118ca <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   118be:	6c e2       	ldi	r22, 0x2C	; 44
   118c0:	c6 01       	movw	r24, r12
   118c2:	63 dd       	rcall	.-1338   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   118c4:	81 11       	cpse	r24, r1
   118c6:	c1 cf       	rjmp	.-126    	; 0x1184a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x68>
   118c8:	06 c0       	rjmp	.+12     	; 0x118d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   118ca:	f7 01       	movw	r30, r14
   118cc:	86 81       	ldd	r24, Z+6	; 0x06
   118ce:	8f 5f       	subi	r24, 0xFF	; 255
   118d0:	86 83       	std	Z+6, r24	; 0x06
   118d2:	c8 01       	movw	r24, r16
   118d4:	04 c0       	rjmp	.+8      	; 0x118de <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   118d6:	32 d9       	rcall	.-3484   	; 0x10b3c <_ZN11ArduinoJson9JsonArray7invalidEv>
   118d8:	02 c0       	rjmp	.+4      	; 0x118de <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   118da:	30 d9       	rcall	.-3488   	; 0x10b3c <_ZN11ArduinoJson9JsonArray7invalidEv>
   118dc:	a6 cf       	rjmp	.-180    	; 0x1182a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x48>
   118de:	0f 90       	pop	r0
   118e0:	0f 90       	pop	r0
   118e2:	0f 90       	pop	r0
   118e4:	0f 90       	pop	r0
   118e6:	0f 90       	pop	r0
   118e8:	df 91       	pop	r29
   118ea:	cf 91       	pop	r28
   118ec:	1f 91       	pop	r17
   118ee:	0f 91       	pop	r16
   118f0:	ff 90       	pop	r15
   118f2:	ef 90       	pop	r14
   118f4:	df 90       	pop	r13
   118f6:	cf 90       	pop	r12
   118f8:	08 95       	ret

000118fa <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>:
   118fa:	ef 92       	push	r14
   118fc:	ff 92       	push	r15
   118fe:	0f 93       	push	r16
   11900:	1f 93       	push	r17
   11902:	cf 93       	push	r28
   11904:	7c 01       	movw	r14, r24
   11906:	8b 01       	movw	r16, r22
   11908:	02 96       	adiw	r24, 0x02	; 2
   1190a:	fd dc       	rcall	.-1542   	; 0x11306 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   1190c:	d7 01       	movw	r26, r14
   1190e:	12 96       	adiw	r26, 0x02	; 2
   11910:	ed 91       	ld	r30, X+
   11912:	fc 91       	ld	r31, X
   11914:	13 97       	sbiw	r26, 0x03	; 3
   11916:	80 81       	ld	r24, Z
   11918:	8b 35       	cpi	r24, 0x5B	; 91
   1191a:	19 f0       	breq	.+6      	; 0x11922 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x28>
   1191c:	8b 37       	cpi	r24, 0x7B	; 123
   1191e:	61 f0       	breq	.+24     	; 0x11938 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3e>
   11920:	14 c0       	rjmp	.+40     	; 0x1194a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x50>
   11922:	c7 01       	movw	r24, r14
   11924:	5e df       	rcall	.-324    	; 0x117e2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>
   11926:	fc 01       	movw	r30, r24
   11928:	20 81       	ld	r18, Z
   1192a:	31 81       	ldd	r19, Z+1	; 0x01
   1192c:	23 2b       	or	r18, r19
   1192e:	11 f4       	brne	.+4      	; 0x11934 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3a>
   11930:	c0 e0       	ldi	r28, 0x00	; 0
   11932:	25 c0       	rjmp	.+74     	; 0x1197e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   11934:	26 e0       	ldi	r18, 0x06	; 6
   11936:	1c c0       	rjmp	.+56     	; 0x11970 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   11938:	c7 01       	movw	r24, r14
   1193a:	28 d0       	rcall	.+80     	; 0x1198c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   1193c:	fc 01       	movw	r30, r24
   1193e:	20 81       	ld	r18, Z
   11940:	31 81       	ldd	r19, Z+1	; 0x01
   11942:	23 2b       	or	r18, r19
   11944:	a9 f3       	breq	.-22     	; 0x11930 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11946:	27 e0       	ldi	r18, 0x07	; 7
   11948:	13 c0       	rjmp	.+38     	; 0x11970 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   1194a:	c1 e0       	ldi	r28, 0x01	; 1
   1194c:	87 32       	cpi	r24, 0x27	; 39
   1194e:	19 f0       	breq	.+6      	; 0x11956 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11950:	82 32       	cpi	r24, 0x22	; 34
   11952:	09 f0       	breq	.+2      	; 0x11956 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11954:	c0 e0       	ldi	r28, 0x00	; 0
   11956:	c7 01       	movw	r24, r14
   11958:	2d dd       	rcall	.-1446   	; 0x113b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   1195a:	00 97       	sbiw	r24, 0x00	; 0
   1195c:	49 f3       	breq	.-46     	; 0x11930 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   1195e:	cc 23       	and	r28, r28
   11960:	31 f0       	breq	.+12     	; 0x1196e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x74>
   11962:	22 e0       	ldi	r18, 0x02	; 2
   11964:	f8 01       	movw	r30, r16
   11966:	20 83       	st	Z, r18
   11968:	92 83       	std	Z+2, r25	; 0x02
   1196a:	81 83       	std	Z+1, r24	; 0x01
   1196c:	08 c0       	rjmp	.+16     	; 0x1197e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   1196e:	21 e0       	ldi	r18, 0x01	; 1
   11970:	d8 01       	movw	r26, r16
   11972:	2c 93       	st	X, r18
   11974:	12 96       	adiw	r26, 0x02	; 2
   11976:	9c 93       	st	X, r25
   11978:	8e 93       	st	-X, r24
   1197a:	11 97       	sbiw	r26, 0x01	; 1
   1197c:	c1 e0       	ldi	r28, 0x01	; 1
   1197e:	8c 2f       	mov	r24, r28
   11980:	cf 91       	pop	r28
   11982:	1f 91       	pop	r17
   11984:	0f 91       	pop	r16
   11986:	ff 90       	pop	r15
   11988:	ef 90       	pop	r14
   1198a:	08 95       	ret

0001198c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>:
   1198c:	af 92       	push	r10
   1198e:	bf 92       	push	r11
   11990:	cf 92       	push	r12
   11992:	df 92       	push	r13
   11994:	ef 92       	push	r14
   11996:	ff 92       	push	r15
   11998:	0f 93       	push	r16
   1199a:	1f 93       	push	r17
   1199c:	cf 93       	push	r28
   1199e:	df 93       	push	r29
   119a0:	00 d0       	rcall	.+0      	; 0x119a2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x16>
   119a2:	1f 92       	push	r1
   119a4:	1f 92       	push	r1
   119a6:	cd b7       	in	r28, 0x3d	; 61
   119a8:	de b7       	in	r29, 0x3e	; 62
   119aa:	7c 01       	movw	r14, r24
   119ac:	fc 01       	movw	r30, r24
   119ae:	86 81       	ldd	r24, Z+6	; 0x06
   119b0:	88 23       	and	r24, r24
   119b2:	09 f4       	brne	.+2      	; 0x119b6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x2a>
   119b4:	4b c0       	rjmp	.+150    	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   119b6:	81 50       	subi	r24, 0x01	; 1
   119b8:	f7 01       	movw	r30, r14
   119ba:	86 83       	std	Z+6, r24	; 0x06
   119bc:	81 91       	ld	r24, Z+
   119be:	91 91       	ld	r25, Z+
   119c0:	6f 01       	movw	r12, r30
   119c2:	e0 d8       	rcall	.-3648   	; 0x10b84 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   119c4:	8c 01       	movw	r16, r24
   119c6:	6b e7       	ldi	r22, 0x7B	; 123
   119c8:	c6 01       	movw	r24, r12
   119ca:	df dc       	rcall	.-1602   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   119cc:	88 23       	and	r24, r24
   119ce:	09 f4       	brne	.+2      	; 0x119d2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x46>
   119d0:	3d c0       	rjmp	.+122    	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   119d2:	6d e7       	ldi	r22, 0x7D	; 125
   119d4:	c6 01       	movw	r24, r12
   119d6:	d9 dc       	rcall	.-1614   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   119d8:	81 11       	cpse	r24, r1
   119da:	32 c0       	rjmp	.+100    	; 0x11a40 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   119dc:	c7 01       	movw	r24, r14
   119de:	ea dc       	rcall	.-1580   	; 0x113b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   119e0:	5c 01       	movw	r10, r24
   119e2:	89 2b       	or	r24, r25
   119e4:	99 f1       	breq	.+102    	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   119e6:	6a e3       	ldi	r22, 0x3A	; 58
   119e8:	c6 01       	movw	r24, r12
   119ea:	cf dc       	rcall	.-1634   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   119ec:	88 23       	and	r24, r24
   119ee:	71 f1       	breq	.+92     	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   119f0:	19 82       	std	Y+1, r1	; 0x01
   119f2:	be 01       	movw	r22, r28
   119f4:	6f 5f       	subi	r22, 0xFF	; 255
   119f6:	7f 4f       	sbci	r23, 0xFF	; 255
   119f8:	c7 01       	movw	r24, r14
   119fa:	7f df       	rcall	.-258    	; 0x118fa <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   119fc:	88 23       	and	r24, r24
   119fe:	31 f1       	breq	.+76     	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11a00:	b5 01       	movw	r22, r10
   11a02:	c8 01       	movw	r24, r16
   11a04:	a0 de       	rcall	.-704    	; 0x11746 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11a06:	00 97       	sbiw	r24, 0x00	; 0
   11a08:	39 f4       	brne	.+14     	; 0x11a18 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x8c>
   11a0a:	c8 01       	movw	r24, r16
   11a0c:	64 dd       	rcall	.-1336   	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11a0e:	00 97       	sbiw	r24, 0x00	; 0
   11a10:	e9 f0       	breq	.+58     	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11a12:	fc 01       	movw	r30, r24
   11a14:	b3 82       	std	Z+3, r11	; 0x03
   11a16:	a2 82       	std	Z+2, r10	; 0x02
   11a18:	25 e0       	ldi	r18, 0x05	; 5
   11a1a:	fe 01       	movw	r30, r28
   11a1c:	31 96       	adiw	r30, 0x01	; 1
   11a1e:	dc 01       	movw	r26, r24
   11a20:	14 96       	adiw	r26, 0x04	; 4
   11a22:	01 90       	ld	r0, Z+
   11a24:	0d 92       	st	X+, r0
   11a26:	2a 95       	dec	r18
   11a28:	e1 f7       	brne	.-8      	; 0x11a22 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x96>
   11a2a:	6d e7       	ldi	r22, 0x7D	; 125
   11a2c:	c6 01       	movw	r24, r12
   11a2e:	ad dc       	rcall	.-1702   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11a30:	81 11       	cpse	r24, r1
   11a32:	06 c0       	rjmp	.+12     	; 0x11a40 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   11a34:	6c e2       	ldi	r22, 0x2C	; 44
   11a36:	c6 01       	movw	r24, r12
   11a38:	a8 dc       	rcall	.-1712   	; 0x1138a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11a3a:	81 11       	cpse	r24, r1
   11a3c:	cf cf       	rjmp	.-98     	; 0x119dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x50>
   11a3e:	06 c0       	rjmp	.+12     	; 0x11a4c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11a40:	f7 01       	movw	r30, r14
   11a42:	86 81       	ldd	r24, Z+6	; 0x06
   11a44:	8f 5f       	subi	r24, 0xFF	; 255
   11a46:	86 83       	std	Z+6, r24	; 0x06
   11a48:	c8 01       	movw	r24, r16
   11a4a:	01 c0       	rjmp	.+2      	; 0x11a4e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc2>
   11a4c:	89 d8       	rcall	.-3822   	; 0x10b60 <_ZN11ArduinoJson10JsonObject7invalidEv>
   11a4e:	0f 90       	pop	r0
   11a50:	0f 90       	pop	r0
   11a52:	0f 90       	pop	r0
   11a54:	0f 90       	pop	r0
   11a56:	0f 90       	pop	r0
   11a58:	df 91       	pop	r29
   11a5a:	cf 91       	pop	r28
   11a5c:	1f 91       	pop	r17
   11a5e:	0f 91       	pop	r16
   11a60:	ff 90       	pop	r15
   11a62:	ef 90       	pop	r14
   11a64:	df 90       	pop	r13
   11a66:	cf 90       	pop	r12
   11a68:	bf 90       	pop	r11
   11a6a:	af 90       	pop	r10
   11a6c:	08 95       	ret

00011a6e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>:
   11a6e:	0f cd       	rjmp	.-1506   	; 0x1148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11a70:	08 95       	ret

00011a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11a72:	1f 93       	push	r17
   11a74:	cf 93       	push	r28
   11a76:	df 93       	push	r29
   11a78:	fa df       	rcall	.-12     	; 0x11a6e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11a7a:	ec 01       	movw	r28, r24
   11a7c:	89 2b       	or	r24, r25
   11a7e:	a1 f0       	breq	.+40     	; 0x11aa8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11a80:	1c 81       	ldd	r17, Y+4	; 0x04
   11a82:	11 30       	cpi	r17, 0x01	; 1
   11a84:	59 f4       	brne	.+22     	; 0x11a9c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11a86:	6d 81       	ldd	r22, Y+5	; 0x05
   11a88:	7e 81       	ldd	r23, Y+6	; 0x06
   11a8a:	61 15       	cp	r22, r1
   11a8c:	71 05       	cpc	r23, r1
   11a8e:	31 f0       	breq	.+12     	; 0x11a9c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11a90:	8c ee       	ldi	r24, 0xEC	; 236
   11a92:	96 e0       	ldi	r25, 0x06	; 6
   11a94:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   11a98:	89 2b       	or	r24, r25
   11a9a:	31 f0       	breq	.+12     	; 0x11aa8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11a9c:	11 50       	subi	r17, 0x01	; 1
   11a9e:	12 30       	cpi	r17, 0x02	; 2
   11aa0:	18 f4       	brcc	.+6      	; 0x11aa8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11aa2:	8d 81       	ldd	r24, Y+5	; 0x05
   11aa4:	9e 81       	ldd	r25, Y+6	; 0x06
   11aa6:	02 c0       	rjmp	.+4      	; 0x11aac <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x3a>
   11aa8:	80 e0       	ldi	r24, 0x00	; 0
   11aaa:	90 e0       	ldi	r25, 0x00	; 0
   11aac:	df 91       	pop	r29
   11aae:	cf 91       	pop	r28
   11ab0:	1f 91       	pop	r17
   11ab2:	08 95       	ret

00011ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11ab4:	dc df       	rcall	.-72     	; 0x11a6e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11ab6:	00 97       	sbiw	r24, 0x00	; 0
   11ab8:	39 f0       	breq	.+14     	; 0x11ac8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11aba:	fc 01       	movw	r30, r24
   11abc:	24 81       	ldd	r18, Z+4	; 0x04
   11abe:	26 30       	cpi	r18, 0x06	; 6
   11ac0:	19 f4       	brne	.+6      	; 0x11ac8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11ac2:	85 81       	ldd	r24, Z+5	; 0x05
   11ac4:	96 81       	ldd	r25, Z+6	; 0x06
   11ac6:	08 95       	ret
   11ac8:	39 c8       	rjmp	.-3982   	; 0x10b3c <_ZN11ArduinoJson9JsonArray7invalidEv>

00011aca <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>:
   11aca:	fc 01       	movw	r30, r24
   11acc:	80 81       	ld	r24, Z
   11ace:	83 30       	cpi	r24, 0x03	; 3
   11ad0:	18 f4       	brcc	.+6      	; 0x11ad8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0xe>
   11ad2:	81 30       	cpi	r24, 0x01	; 1
   11ad4:	e8 f1       	brcs	.+122    	; 0x11b50 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11ad6:	0a c0       	rjmp	.+20     	; 0x11aec <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x22>
   11ad8:	85 30       	cpi	r24, 0x05	; 5
   11ada:	28 f0       	brcs	.+10     	; 0x11ae6 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x1c>
   11adc:	85 30       	cpi	r24, 0x05	; 5
   11ade:	89 f5       	brne	.+98     	; 0x11b42 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x78>
   11ae0:	61 81       	ldd	r22, Z+1	; 0x01
   11ae2:	72 81       	ldd	r23, Z+2	; 0x02
   11ae4:	29 c0       	rjmp	.+82     	; 0x11b38 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6e>
   11ae6:	81 81       	ldd	r24, Z+1	; 0x01
   11ae8:	92 81       	ldd	r25, Z+2	; 0x02
   11aea:	08 95       	ret
   11aec:	01 80       	ldd	r0, Z+1	; 0x01
   11aee:	f2 81       	ldd	r31, Z+2	; 0x02
   11af0:	e0 2d       	mov	r30, r0
   11af2:	30 97       	sbiw	r30, 0x00	; 0
   11af4:	69 f1       	breq	.+90     	; 0x11b50 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11af6:	80 81       	ld	r24, Z
   11af8:	84 37       	cpi	r24, 0x74	; 116
   11afa:	69 f1       	breq	.+90     	; 0x11b56 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x8c>
   11afc:	8b 32       	cpi	r24, 0x2B	; 43
   11afe:	29 f0       	breq	.+10     	; 0x11b0a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x40>
   11b00:	8d 32       	cpi	r24, 0x2D	; 45
   11b02:	21 f4       	brne	.+8      	; 0x11b0c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x42>
   11b04:	31 96       	adiw	r30, 0x01	; 1
   11b06:	91 e0       	ldi	r25, 0x01	; 1
   11b08:	02 c0       	rjmp	.+4      	; 0x11b0e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x44>
   11b0a:	31 96       	adiw	r30, 0x01	; 1
   11b0c:	90 e0       	ldi	r25, 0x00	; 0
   11b0e:	60 e0       	ldi	r22, 0x00	; 0
   11b10:	70 e0       	ldi	r23, 0x00	; 0
   11b12:	4a e0       	ldi	r20, 0x0A	; 10
   11b14:	81 91       	ld	r24, Z+
   11b16:	20 ed       	ldi	r18, 0xD0	; 208
   11b18:	28 0f       	add	r18, r24
   11b1a:	2a 30       	cpi	r18, 0x0A	; 10
   11b1c:	58 f4       	brcc	.+22     	; 0x11b34 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6a>
   11b1e:	46 9f       	mul	r20, r22
   11b20:	90 01       	movw	r18, r0
   11b22:	47 9f       	mul	r20, r23
   11b24:	30 0d       	add	r19, r0
   11b26:	11 24       	eor	r1, r1
   11b28:	b9 01       	movw	r22, r18
   11b2a:	60 53       	subi	r22, 0x30	; 48
   11b2c:	71 09       	sbc	r23, r1
   11b2e:	68 0f       	add	r22, r24
   11b30:	71 1d       	adc	r23, r1
   11b32:	f0 cf       	rjmp	.-32     	; 0x11b14 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x4a>
   11b34:	99 23       	and	r25, r25
   11b36:	91 f0       	breq	.+36     	; 0x11b5c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   11b38:	88 27       	eor	r24, r24
   11b3a:	99 27       	eor	r25, r25
   11b3c:	86 1b       	sub	r24, r22
   11b3e:	97 0b       	sbc	r25, r23
   11b40:	08 95       	ret
   11b42:	61 81       	ldd	r22, Z+1	; 0x01
   11b44:	72 81       	ldd	r23, Z+2	; 0x02
   11b46:	83 81       	ldd	r24, Z+3	; 0x03
   11b48:	94 81       	ldd	r25, Z+4	; 0x04
   11b4a:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <__fixunssfsi>
   11b4e:	06 c0       	rjmp	.+12     	; 0x11b5c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   11b50:	80 e0       	ldi	r24, 0x00	; 0
   11b52:	90 e0       	ldi	r25, 0x00	; 0
   11b54:	08 95       	ret
   11b56:	81 e0       	ldi	r24, 0x01	; 1
   11b58:	90 e0       	ldi	r25, 0x00	; 0
   11b5a:	08 95       	ret
   11b5c:	cb 01       	movw	r24, r22
   11b5e:	08 95       	ret

00011b60 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11b60:	86 df       	rcall	.-244    	; 0x11a6e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11b62:	00 97       	sbiw	r24, 0x00	; 0
   11b64:	11 f0       	breq	.+4      	; 0x11b6a <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   11b66:	04 96       	adiw	r24, 0x04	; 4
   11b68:	b0 cf       	rjmp	.-160    	; 0x11aca <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   11b6a:	80 e0       	ldi	r24, 0x00	; 0
   11b6c:	90 e0       	ldi	r25, 0x00	; 0
   11b6e:	08 95       	ret

00011b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11b70:	fc 01       	movw	r30, r24
   11b72:	82 81       	ldd	r24, Z+2	; 0x02
   11b74:	93 81       	ldd	r25, Z+3	; 0x03
   11b76:	00 97       	sbiw	r24, 0x00	; 0
   11b78:	59 f0       	breq	.+22     	; 0x11b90 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   11b7a:	61 15       	cp	r22, r1
   11b7c:	71 05       	cpc	r23, r1
   11b7e:	31 f0       	breq	.+12     	; 0x11b8c <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11b80:	fc 01       	movw	r30, r24
   11b82:	80 81       	ld	r24, Z
   11b84:	91 81       	ldd	r25, Z+1	; 0x01
   11b86:	61 50       	subi	r22, 0x01	; 1
   11b88:	71 09       	sbc	r23, r1
   11b8a:	f5 cf       	rjmp	.-22     	; 0x11b76 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11b8c:	02 96       	adiw	r24, 0x02	; 2
   11b8e:	9d cf       	rjmp	.-198    	; 0x11aca <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   11b90:	80 e0       	ldi	r24, 0x00	; 0
   11b92:	90 e0       	ldi	r25, 0x00	; 0
   11b94:	08 95       	ret

00011b96 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>:
   11b96:	fc 01       	movw	r30, r24
   11b98:	80 81       	ld	r24, Z
   11b9a:	83 30       	cpi	r24, 0x03	; 3
   11b9c:	18 f4       	brcc	.+6      	; 0x11ba4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0xe>
   11b9e:	81 30       	cpi	r24, 0x01	; 1
   11ba0:	98 f1       	brcs	.+102    	; 0x11c08 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11ba2:	08 c0       	rjmp	.+16     	; 0x11bb4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1e>
   11ba4:	85 30       	cpi	r24, 0x05	; 5
   11ba6:	20 f0       	brcs	.+8      	; 0x11bb0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1a>
   11ba8:	85 30       	cpi	r24, 0x05	; 5
   11baa:	39 f5       	brne	.+78     	; 0x11bfa <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x64>
   11bac:	61 81       	ldd	r22, Z+1	; 0x01
   11bae:	23 c0       	rjmp	.+70     	; 0x11bf6 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x60>
   11bb0:	61 81       	ldd	r22, Z+1	; 0x01
   11bb2:	2d c0       	rjmp	.+90     	; 0x11c0e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11bb4:	01 80       	ldd	r0, Z+1	; 0x01
   11bb6:	f2 81       	ldd	r31, Z+2	; 0x02
   11bb8:	e0 2d       	mov	r30, r0
   11bba:	30 97       	sbiw	r30, 0x00	; 0
   11bbc:	29 f1       	breq	.+74     	; 0x11c08 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11bbe:	80 81       	ld	r24, Z
   11bc0:	84 37       	cpi	r24, 0x74	; 116
   11bc2:	21 f1       	breq	.+72     	; 0x11c0c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x76>
   11bc4:	8b 32       	cpi	r24, 0x2B	; 43
   11bc6:	29 f0       	breq	.+10     	; 0x11bd2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3c>
   11bc8:	8d 32       	cpi	r24, 0x2D	; 45
   11bca:	21 f4       	brne	.+8      	; 0x11bd4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3e>
   11bcc:	31 96       	adiw	r30, 0x01	; 1
   11bce:	91 e0       	ldi	r25, 0x01	; 1
   11bd0:	02 c0       	rjmp	.+4      	; 0x11bd6 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x40>
   11bd2:	31 96       	adiw	r30, 0x01	; 1
   11bd4:	90 e0       	ldi	r25, 0x00	; 0
   11bd6:	60 e0       	ldi	r22, 0x00	; 0
   11bd8:	21 91       	ld	r18, Z+
   11bda:	80 ed       	ldi	r24, 0xD0	; 208
   11bdc:	82 0f       	add	r24, r18
   11bde:	8a 30       	cpi	r24, 0x0A	; 10
   11be0:	40 f4       	brcc	.+16     	; 0x11bf2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x5c>
   11be2:	66 0f       	add	r22, r22
   11be4:	86 2f       	mov	r24, r22
   11be6:	88 0f       	add	r24, r24
   11be8:	88 0f       	add	r24, r24
   11bea:	68 0f       	add	r22, r24
   11bec:	60 53       	subi	r22, 0x30	; 48
   11bee:	62 0f       	add	r22, r18
   11bf0:	f3 cf       	rjmp	.-26     	; 0x11bd8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x42>
   11bf2:	99 23       	and	r25, r25
   11bf4:	61 f0       	breq	.+24     	; 0x11c0e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11bf6:	61 95       	neg	r22
   11bf8:	0a c0       	rjmp	.+20     	; 0x11c0e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11bfa:	61 81       	ldd	r22, Z+1	; 0x01
   11bfc:	72 81       	ldd	r23, Z+2	; 0x02
   11bfe:	83 81       	ldd	r24, Z+3	; 0x03
   11c00:	94 81       	ldd	r25, Z+4	; 0x04
   11c02:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <__fixunssfsi>
   11c06:	03 c0       	rjmp	.+6      	; 0x11c0e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11c08:	60 e0       	ldi	r22, 0x00	; 0
   11c0a:	01 c0       	rjmp	.+2      	; 0x11c0e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11c0c:	61 e0       	ldi	r22, 0x01	; 1
   11c0e:	86 2f       	mov	r24, r22
   11c10:	08 95       	ret

00011c12 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11c12:	fc 01       	movw	r30, r24
   11c14:	82 81       	ldd	r24, Z+2	; 0x02
   11c16:	93 81       	ldd	r25, Z+3	; 0x03
   11c18:	00 97       	sbiw	r24, 0x00	; 0
   11c1a:	59 f0       	breq	.+22     	; 0x11c32 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   11c1c:	61 15       	cp	r22, r1
   11c1e:	71 05       	cpc	r23, r1
   11c20:	31 f0       	breq	.+12     	; 0x11c2e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11c22:	fc 01       	movw	r30, r24
   11c24:	80 81       	ld	r24, Z
   11c26:	91 81       	ldd	r25, Z+1	; 0x01
   11c28:	61 50       	subi	r22, 0x01	; 1
   11c2a:	71 09       	sbc	r23, r1
   11c2c:	f5 cf       	rjmp	.-22     	; 0x11c18 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11c2e:	02 96       	adiw	r24, 0x02	; 2
   11c30:	b2 cf       	rjmp	.-156    	; 0x11b96 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11c32:	80 e0       	ldi	r24, 0x00	; 0
   11c34:	08 95       	ret

00011c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11c36:	1b df       	rcall	.-458    	; 0x11a6e <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11c38:	00 97       	sbiw	r24, 0x00	; 0
   11c3a:	11 f0       	breq	.+4      	; 0x11c40 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   11c3c:	04 96       	adiw	r24, 0x04	; 4
   11c3e:	ab cf       	rjmp	.-170    	; 0x11b96 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11c40:	80 e0       	ldi	r24, 0x00	; 0
   11c42:	08 95       	ret

00011c44 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>:
   11c44:	2f 92       	push	r2
   11c46:	3f 92       	push	r3
   11c48:	4f 92       	push	r4
   11c4a:	5f 92       	push	r5
   11c4c:	6f 92       	push	r6
   11c4e:	7f 92       	push	r7
   11c50:	8f 92       	push	r8
   11c52:	9f 92       	push	r9
   11c54:	af 92       	push	r10
   11c56:	bf 92       	push	r11
   11c58:	cf 92       	push	r12
   11c5a:	df 92       	push	r13
   11c5c:	ef 92       	push	r14
   11c5e:	ff 92       	push	r15
   11c60:	0f 93       	push	r16
   11c62:	1f 93       	push	r17
   11c64:	cf 93       	push	r28
   11c66:	df 93       	push	r29
   11c68:	00 d0       	rcall	.+0      	; 0x11c6a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x26>
   11c6a:	1f 92       	push	r1
   11c6c:	cd b7       	in	r28, 0x3d	; 61
   11c6e:	de b7       	in	r29, 0x3e	; 62
   11c70:	1c 01       	movw	r2, r24
   11c72:	6a 01       	movw	r12, r20
   11c74:	7b 01       	movw	r14, r22
   11c76:	86 e0       	ldi	r24, 0x06	; 6
   11c78:	d1 01       	movw	r26, r2
   11c7a:	1a 96       	adiw	r26, 0x0a	; 10
   11c7c:	8c 93       	st	X, r24
   11c7e:	20 e8       	ldi	r18, 0x80	; 128
   11c80:	36 e9       	ldi	r19, 0x96	; 150
   11c82:	48 e1       	ldi	r20, 0x18	; 24
   11c84:	5b e4       	ldi	r21, 0x4B	; 75
   11c86:	c7 01       	movw	r24, r14
   11c88:	b6 01       	movw	r22, r12
   11c8a:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
   11c8e:	87 fd       	sbrc	r24, 7
   11c90:	3a c0       	rjmp	.+116    	; 0x11d06 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xc2>
   11c92:	52 e5       	ldi	r21, 0x52	; 82
   11c94:	85 2e       	mov	r8, r21
   11c96:	52 e0       	ldi	r21, 0x02	; 2
   11c98:	95 2e       	mov	r9, r21
   11c9a:	62 e2       	ldi	r22, 0x22	; 34
   11c9c:	a6 2e       	mov	r10, r22
   11c9e:	62 e0       	ldi	r22, 0x02	; 2
   11ca0:	b6 2e       	mov	r11, r22
   11ca2:	e0 e2       	ldi	r30, 0x20	; 32
   11ca4:	f0 e0       	ldi	r31, 0x00	; 0
   11ca6:	fa 83       	std	Y+2, r31	; 0x02
   11ca8:	e9 83       	std	Y+1, r30	; 0x01
   11caa:	00 e0       	ldi	r16, 0x00	; 0
   11cac:	10 e0       	ldi	r17, 0x00	; 0
   11cae:	a7 01       	movw	r20, r14
   11cb0:	96 01       	movw	r18, r12
   11cb2:	d4 01       	movw	r26, r8
   11cb4:	9e 91       	ld	r25, -X
   11cb6:	8e 91       	ld	r24, -X
   11cb8:	7e 91       	ld	r23, -X
   11cba:	6e 91       	ld	r22, -X
   11cbc:	4d 01       	movw	r8, r26
   11cbe:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
   11cc2:	18 16       	cp	r1, r24
   11cc4:	7c f0       	brlt	.+30     	; 0x11ce4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xa0>
   11cc6:	f5 01       	movw	r30, r10
   11cc8:	24 89       	ldd	r18, Z+20	; 0x14
   11cca:	35 89       	ldd	r19, Z+21	; 0x15
   11ccc:	46 89       	ldd	r20, Z+22	; 0x16
   11cce:	57 89       	ldd	r21, Z+23	; 0x17
   11cd0:	c7 01       	movw	r24, r14
   11cd2:	b6 01       	movw	r22, r12
   11cd4:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
   11cd8:	6b 01       	movw	r12, r22
   11cda:	7c 01       	movw	r14, r24
   11cdc:	89 81       	ldd	r24, Y+1	; 0x01
   11cde:	9a 81       	ldd	r25, Y+2	; 0x02
   11ce0:	08 0f       	add	r16, r24
   11ce2:	19 1f       	adc	r17, r25
   11ce4:	a9 81       	ldd	r26, Y+1	; 0x01
   11ce6:	ba 81       	ldd	r27, Y+2	; 0x02
   11ce8:	b5 95       	asr	r27
   11cea:	a7 95       	ror	r26
   11cec:	ba 83       	std	Y+2, r27	; 0x02
   11cee:	a9 83       	std	Y+1, r26	; 0x01
   11cf0:	b4 e0       	ldi	r27, 0x04	; 4
   11cf2:	ab 1a       	sub	r10, r27
   11cf4:	b1 08       	sbc	r11, r1
   11cf6:	ea e3       	ldi	r30, 0x3A	; 58
   11cf8:	8e 16       	cp	r8, r30
   11cfa:	e2 e0       	ldi	r30, 0x02	; 2
   11cfc:	9e 06       	cpc	r9, r30
   11cfe:	b9 f6       	brne	.-82     	; 0x11cae <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x6a>
   11d00:	bb 24       	eor	r11, r11
   11d02:	ba 94       	dec	r11
   11d04:	08 c0       	rjmp	.+16     	; 0x11d16 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xd2>
   11d06:	80 e2       	ldi	r24, 0x20	; 32
   11d08:	90 e0       	ldi	r25, 0x00	; 0
   11d0a:	9a 83       	std	Y+2, r25	; 0x02
   11d0c:	89 83       	std	Y+1, r24	; 0x01
   11d0e:	35 e0       	ldi	r19, 0x05	; 5
   11d10:	b3 2e       	mov	r11, r19
   11d12:	00 e0       	ldi	r16, 0x00	; 0
   11d14:	10 e0       	ldi	r17, 0x00	; 0
   11d16:	20 e0       	ldi	r18, 0x00	; 0
   11d18:	30 e0       	ldi	r19, 0x00	; 0
   11d1a:	a9 01       	movw	r20, r18
   11d1c:	c7 01       	movw	r24, r14
   11d1e:	b6 01       	movw	r22, r12
   11d20:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
   11d24:	18 16       	cp	r1, r24
   11d26:	c4 f5       	brge	.+112    	; 0x11d98 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11d28:	2c ea       	ldi	r18, 0xAC	; 172
   11d2a:	35 ec       	ldi	r19, 0xC5	; 197
   11d2c:	47 e2       	ldi	r20, 0x27	; 39
   11d2e:	57 e3       	ldi	r21, 0x37	; 55
   11d30:	c7 01       	movw	r24, r14
   11d32:	b6 01       	movw	r22, r12
   11d34:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
   11d38:	18 16       	cp	r1, r24
   11d3a:	74 f1       	brlt	.+92     	; 0x11d98 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11d3c:	9f ef       	ldi	r25, 0xFF	; 255
   11d3e:	b9 16       	cp	r11, r25
   11d40:	59 f1       	breq	.+86     	; 0x11d98 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11d42:	ab 2d       	mov	r26, r11
   11d44:	b4 e0       	ldi	r27, 0x04	; 4
   11d46:	ab 02       	muls	r26, r27
   11d48:	40 01       	movw	r8, r0
   11d4a:	11 24       	eor	r1, r1
   11d4c:	f4 01       	movw	r30, r8
   11d4e:	e6 5f       	subi	r30, 0xF6	; 246
   11d50:	fd 4f       	sbci	r31, 0xFD	; 253
   11d52:	a7 01       	movw	r20, r14
   11d54:	96 01       	movw	r18, r12
   11d56:	60 81       	ld	r22, Z
   11d58:	71 81       	ldd	r23, Z+1	; 0x01
   11d5a:	82 81       	ldd	r24, Z+2	; 0x02
   11d5c:	93 81       	ldd	r25, Z+3	; 0x03
   11d5e:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
   11d62:	18 16       	cp	r1, r24
   11d64:	8c f4       	brge	.+34     	; 0x11d88 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x144>
   11d66:	f4 01       	movw	r30, r8
   11d68:	e6 5c       	subi	r30, 0xC6	; 198
   11d6a:	fd 4f       	sbci	r31, 0xFD	; 253
   11d6c:	20 81       	ld	r18, Z
   11d6e:	31 81       	ldd	r19, Z+1	; 0x01
   11d70:	42 81       	ldd	r20, Z+2	; 0x02
   11d72:	53 81       	ldd	r21, Z+3	; 0x03
   11d74:	c7 01       	movw	r24, r14
   11d76:	b6 01       	movw	r22, r12
   11d78:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
   11d7c:	6b 01       	movw	r12, r22
   11d7e:	7c 01       	movw	r14, r24
   11d80:	e9 81       	ldd	r30, Y+1	; 0x01
   11d82:	fa 81       	ldd	r31, Y+2	; 0x02
   11d84:	0e 1b       	sub	r16, r30
   11d86:	1f 0b       	sbc	r17, r31
   11d88:	89 81       	ldd	r24, Y+1	; 0x01
   11d8a:	9a 81       	ldd	r25, Y+2	; 0x02
   11d8c:	95 95       	asr	r25
   11d8e:	87 95       	ror	r24
   11d90:	9a 83       	std	Y+2, r25	; 0x02
   11d92:	89 83       	std	Y+1, r24	; 0x01
   11d94:	ba 94       	dec	r11
   11d96:	d2 cf       	rjmp	.-92     	; 0x11d3c <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xf8>
   11d98:	d1 01       	movw	r26, r2
   11d9a:	19 96       	adiw	r26, 0x09	; 9
   11d9c:	1c 93       	st	X, r17
   11d9e:	0e 93       	st	-X, r16
   11da0:	18 97       	sbiw	r26, 0x08	; 8
   11da2:	c7 01       	movw	r24, r14
   11da4:	b6 01       	movw	r22, r12
   11da6:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <__fixunssfsi>
   11daa:	69 83       	std	Y+1, r22	; 0x01
   11dac:	7a 83       	std	Y+2, r23	; 0x02
   11dae:	8b 83       	std	Y+3, r24	; 0x03
   11db0:	9c 83       	std	Y+4, r25	; 0x04
   11db2:	f1 01       	movw	r30, r2
   11db4:	60 83       	st	Z, r22
   11db6:	71 83       	std	Z+1, r23	; 0x01
   11db8:	82 83       	std	Z+2, r24	; 0x02
   11dba:	93 83       	std	Z+3, r25	; 0x03
   11dbc:	2b 01       	movw	r4, r22
   11dbe:	3c 01       	movw	r6, r24
   11dc0:	90 e4       	ldi	r25, 0x40	; 64
   11dc2:	89 2e       	mov	r8, r25
   11dc4:	92 e4       	ldi	r25, 0x42	; 66
   11dc6:	99 2e       	mov	r9, r25
   11dc8:	9f e0       	ldi	r25, 0x0F	; 15
   11dca:	a9 2e       	mov	r10, r25
   11dcc:	b1 2c       	mov	r11, r1
   11dce:	fa e0       	ldi	r31, 0x0A	; 10
   11dd0:	4f 16       	cp	r4, r31
   11dd2:	51 04       	cpc	r5, r1
   11dd4:	61 04       	cpc	r6, r1
   11dd6:	71 04       	cpc	r7, r1
   11dd8:	e0 f0       	brcs	.+56     	; 0x11e12 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x1ce>
   11dda:	c5 01       	movw	r24, r10
   11ddc:	b4 01       	movw	r22, r8
   11dde:	2a e0       	ldi	r18, 0x0A	; 10
   11de0:	30 e0       	ldi	r19, 0x00	; 0
   11de2:	40 e0       	ldi	r20, 0x00	; 0
   11de4:	50 e0       	ldi	r21, 0x00	; 0
   11de6:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   11dea:	49 01       	movw	r8, r18
   11dec:	5a 01       	movw	r10, r20
   11dee:	d1 01       	movw	r26, r2
   11df0:	1a 96       	adiw	r26, 0x0a	; 10
   11df2:	8c 91       	ld	r24, X
   11df4:	1a 97       	sbiw	r26, 0x0a	; 10
   11df6:	81 50       	subi	r24, 0x01	; 1
   11df8:	1a 96       	adiw	r26, 0x0a	; 10
   11dfa:	8c 93       	st	X, r24
   11dfc:	c3 01       	movw	r24, r6
   11dfe:	b2 01       	movw	r22, r4
   11e00:	2a e0       	ldi	r18, 0x0A	; 10
   11e02:	30 e0       	ldi	r19, 0x00	; 0
   11e04:	40 e0       	ldi	r20, 0x00	; 0
   11e06:	50 e0       	ldi	r21, 0x00	; 0
   11e08:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   11e0c:	29 01       	movw	r4, r18
   11e0e:	3a 01       	movw	r6, r20
   11e10:	de cf       	rjmp	.-68     	; 0x11dce <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x18a>
   11e12:	69 81       	ldd	r22, Y+1	; 0x01
   11e14:	7a 81       	ldd	r23, Y+2	; 0x02
   11e16:	8b 81       	ldd	r24, Y+3	; 0x03
   11e18:	9c 81       	ldd	r25, Y+4	; 0x04
   11e1a:	0e 94 4b d1 	call	0x1a296	; 0x1a296 <__floatunsisf>
   11e1e:	9b 01       	movw	r18, r22
   11e20:	ac 01       	movw	r20, r24
   11e22:	c7 01       	movw	r24, r14
   11e24:	b6 01       	movw	r22, r12
   11e26:	0e 94 4e d0 	call	0x1a09c	; 0x1a09c <__subsf3>
   11e2a:	6b 01       	movw	r12, r22
   11e2c:	7c 01       	movw	r14, r24
   11e2e:	c5 01       	movw	r24, r10
   11e30:	b4 01       	movw	r22, r8
   11e32:	0e 94 4b d1 	call	0x1a296	; 0x1a296 <__floatunsisf>
   11e36:	9b 01       	movw	r18, r22
   11e38:	ac 01       	movw	r20, r24
   11e3a:	c7 01       	movw	r24, r14
   11e3c:	b6 01       	movw	r22, r12
   11e3e:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
   11e42:	2b 01       	movw	r4, r22
   11e44:	3c 01       	movw	r6, r24
   11e46:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <__fixunssfsi>
   11e4a:	6b 01       	movw	r12, r22
   11e4c:	7c 01       	movw	r14, r24
   11e4e:	0e 94 4b d1 	call	0x1a296	; 0x1a296 <__floatunsisf>
   11e52:	9b 01       	movw	r18, r22
   11e54:	ac 01       	movw	r20, r24
   11e56:	c3 01       	movw	r24, r6
   11e58:	b2 01       	movw	r22, r4
   11e5a:	0e 94 4e d0 	call	0x1a09c	; 0x1a09c <__subsf3>
   11e5e:	9b 01       	movw	r18, r22
   11e60:	ac 01       	movw	r20, r24
   11e62:	0e 94 4f d0 	call	0x1a09e	; 0x1a09e <__addsf3>
   11e66:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <__fixunssfsi>
   11e6a:	c6 0e       	add	r12, r22
   11e6c:	d7 1e       	adc	r13, r23
   11e6e:	e8 1e       	adc	r14, r24
   11e70:	f9 1e       	adc	r15, r25
   11e72:	c8 14       	cp	r12, r8
   11e74:	d9 04       	cpc	r13, r9
   11e76:	ea 04       	cpc	r14, r10
   11e78:	fb 04       	cpc	r15, r11
   11e7a:	30 f4       	brcc	.+12     	; 0x11e88 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x244>
   11e7c:	f1 01       	movw	r30, r2
   11e7e:	c4 82       	std	Z+4, r12	; 0x04
   11e80:	d5 82       	std	Z+5, r13	; 0x05
   11e82:	e6 82       	std	Z+6, r14	; 0x06
   11e84:	f7 82       	std	Z+7, r15	; 0x07
   11e86:	26 c0       	rjmp	.+76     	; 0x11ed4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11e88:	d1 01       	movw	r26, r2
   11e8a:	14 96       	adiw	r26, 0x04	; 4
   11e8c:	1d 92       	st	X+, r1
   11e8e:	1d 92       	st	X+, r1
   11e90:	1d 92       	st	X+, r1
   11e92:	1c 92       	st	X, r1
   11e94:	17 97       	sbiw	r26, 0x07	; 7
   11e96:	89 81       	ldd	r24, Y+1	; 0x01
   11e98:	9a 81       	ldd	r25, Y+2	; 0x02
   11e9a:	ab 81       	ldd	r26, Y+3	; 0x03
   11e9c:	bc 81       	ldd	r27, Y+4	; 0x04
   11e9e:	01 96       	adiw	r24, 0x01	; 1
   11ea0:	a1 1d       	adc	r26, r1
   11ea2:	b1 1d       	adc	r27, r1
   11ea4:	f1 01       	movw	r30, r2
   11ea6:	80 83       	st	Z, r24
   11ea8:	91 83       	std	Z+1, r25	; 0x01
   11eaa:	a2 83       	std	Z+2, r26	; 0x02
   11eac:	b3 83       	std	Z+3, r27	; 0x03
   11eae:	01 15       	cp	r16, r1
   11eb0:	11 05       	cpc	r17, r1
   11eb2:	81 f0       	breq	.+32     	; 0x11ed4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11eb4:	0a 97       	sbiw	r24, 0x0a	; 10
   11eb6:	a1 05       	cpc	r26, r1
   11eb8:	b1 05       	cpc	r27, r1
   11eba:	60 f0       	brcs	.+24     	; 0x11ed4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11ebc:	c8 01       	movw	r24, r16
   11ebe:	01 96       	adiw	r24, 0x01	; 1
   11ec0:	91 87       	std	Z+9, r25	; 0x09
   11ec2:	80 87       	std	Z+8, r24	; 0x08
   11ec4:	81 e0       	ldi	r24, 0x01	; 1
   11ec6:	90 e0       	ldi	r25, 0x00	; 0
   11ec8:	a0 e0       	ldi	r26, 0x00	; 0
   11eca:	b0 e0       	ldi	r27, 0x00	; 0
   11ecc:	80 83       	st	Z, r24
   11ece:	91 83       	std	Z+1, r25	; 0x01
   11ed0:	a2 83       	std	Z+2, r26	; 0x02
   11ed2:	b3 83       	std	Z+3, r27	; 0x03
   11ed4:	8a e0       	ldi	r24, 0x0A	; 10
   11ed6:	c8 2e       	mov	r12, r24
   11ed8:	d1 2c       	mov	r13, r1
   11eda:	e1 2c       	mov	r14, r1
   11edc:	f1 2c       	mov	r15, r1
   11ede:	d1 01       	movw	r26, r2
   11ee0:	14 96       	adiw	r26, 0x04	; 4
   11ee2:	6d 91       	ld	r22, X+
   11ee4:	7d 91       	ld	r23, X+
   11ee6:	8d 91       	ld	r24, X+
   11ee8:	9c 91       	ld	r25, X
   11eea:	17 97       	sbiw	r26, 0x07	; 7
   11eec:	a7 01       	movw	r20, r14
   11eee:	96 01       	movw	r18, r12
   11ef0:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   11ef4:	67 2b       	or	r22, r23
   11ef6:	68 2b       	or	r22, r24
   11ef8:	69 2b       	or	r22, r25
   11efa:	59 f4       	brne	.+22     	; 0x11f12 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11efc:	f1 01       	movw	r30, r2
   11efe:	82 85       	ldd	r24, Z+10	; 0x0a
   11f00:	18 16       	cp	r1, r24
   11f02:	3c f4       	brge	.+14     	; 0x11f12 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11f04:	24 83       	std	Z+4, r18	; 0x04
   11f06:	35 83       	std	Z+5, r19	; 0x05
   11f08:	46 83       	std	Z+6, r20	; 0x06
   11f0a:	57 83       	std	Z+7, r21	; 0x07
   11f0c:	81 50       	subi	r24, 0x01	; 1
   11f0e:	82 87       	std	Z+10, r24	; 0x0a
   11f10:	e6 cf       	rjmp	.-52     	; 0x11ede <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x29a>
   11f12:	0f 90       	pop	r0
   11f14:	0f 90       	pop	r0
   11f16:	0f 90       	pop	r0
   11f18:	0f 90       	pop	r0
   11f1a:	df 91       	pop	r29
   11f1c:	cf 91       	pop	r28
   11f1e:	1f 91       	pop	r17
   11f20:	0f 91       	pop	r16
   11f22:	ff 90       	pop	r15
   11f24:	ef 90       	pop	r14
   11f26:	df 90       	pop	r13
   11f28:	cf 90       	pop	r12
   11f2a:	bf 90       	pop	r11
   11f2c:	af 90       	pop	r10
   11f2e:	9f 90       	pop	r9
   11f30:	8f 90       	pop	r8
   11f32:	7f 90       	pop	r7
   11f34:	6f 90       	pop	r6
   11f36:	5f 90       	pop	r5
   11f38:	4f 90       	pop	r4
   11f3a:	3f 90       	pop	r3
   11f3c:	2f 90       	pop	r2
   11f3e:	08 95       	ret

00011f40 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>:
   11f40:	cf 93       	push	r28
   11f42:	df 93       	push	r29
   11f44:	fc 01       	movw	r30, r24
   11f46:	82 81       	ldd	r24, Z+2	; 0x02
   11f48:	87 ff       	sbrs	r24, 7
   11f4a:	32 c0       	rjmp	.+100    	; 0x11fb0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x70>
   11f4c:	40 e0       	ldi	r20, 0x00	; 0
   11f4e:	50 e0       	ldi	r21, 0x00	; 0
   11f50:	20 e0       	ldi	r18, 0x00	; 0
   11f52:	30 e0       	ldi	r19, 0x00	; 0
   11f54:	70 e2       	ldi	r23, 0x20	; 32
   11f56:	92 81       	ldd	r25, Z+2	; 0x02
   11f58:	89 2f       	mov	r24, r25
   11f5a:	8f 70       	andi	r24, 0x0F	; 15
   11f5c:	92 95       	swap	r25
   11f5e:	97 70       	andi	r25, 0x07	; 7
   11f60:	89 9f       	mul	r24, r25
   11f62:	c0 01       	movw	r24, r0
   11f64:	11 24       	eor	r1, r1
   11f66:	48 17       	cp	r20, r24
   11f68:	59 07       	cpc	r21, r25
   11f6a:	24 f5       	brge	.+72     	; 0x11fb4 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x74>
   11f6c:	a0 81       	ld	r26, Z
   11f6e:	b1 81       	ldd	r27, Z+1	; 0x01
   11f70:	12 96       	adiw	r26, 0x02	; 2
   11f72:	cd 91       	ld	r28, X+
   11f74:	dc 91       	ld	r29, X
   11f76:	13 97       	sbiw	r26, 0x03	; 3
   11f78:	8d 91       	ld	r24, X+
   11f7a:	9c 91       	ld	r25, X
   11f7c:	11 97       	sbiw	r26, 0x01	; 1
   11f7e:	c8 17       	cp	r28, r24
   11f80:	d9 07       	cpc	r29, r25
   11f82:	78 f4       	brcc	.+30     	; 0x11fa2 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x62>
   11f84:	ce 01       	movw	r24, r28
   11f86:	01 96       	adiw	r24, 0x01	; 1
   11f88:	13 96       	adiw	r26, 0x03	; 3
   11f8a:	9c 93       	st	X, r25
   11f8c:	8e 93       	st	-X, r24
   11f8e:	12 97       	sbiw	r26, 0x02	; 2
   11f90:	78 83       	st	Y, r23
   11f92:	12 96       	adiw	r26, 0x02	; 2
   11f94:	0d 90       	ld	r0, X+
   11f96:	bc 91       	ld	r27, X
   11f98:	a0 2d       	mov	r26, r0
   11f9a:	1c 92       	st	X, r1
   11f9c:	81 e0       	ldi	r24, 0x01	; 1
   11f9e:	90 e0       	ldi	r25, 0x00	; 0
   11fa0:	02 c0       	rjmp	.+4      	; 0x11fa6 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x66>
   11fa2:	80 e0       	ldi	r24, 0x00	; 0
   11fa4:	90 e0       	ldi	r25, 0x00	; 0
   11fa6:	28 0f       	add	r18, r24
   11fa8:	39 1f       	adc	r19, r25
   11faa:	4f 5f       	subi	r20, 0xFF	; 255
   11fac:	5f 4f       	sbci	r21, 0xFF	; 255
   11fae:	d3 cf       	rjmp	.-90     	; 0x11f56 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x16>
   11fb0:	20 e0       	ldi	r18, 0x00	; 0
   11fb2:	30 e0       	ldi	r19, 0x00	; 0
   11fb4:	a0 81       	ld	r26, Z
   11fb6:	b1 81       	ldd	r27, Z+1	; 0x01
   11fb8:	12 96       	adiw	r26, 0x02	; 2
   11fba:	cd 91       	ld	r28, X+
   11fbc:	dc 91       	ld	r29, X
   11fbe:	13 97       	sbiw	r26, 0x03	; 3
   11fc0:	8d 91       	ld	r24, X+
   11fc2:	9c 91       	ld	r25, X
   11fc4:	11 97       	sbiw	r26, 0x01	; 1
   11fc6:	c8 17       	cp	r28, r24
   11fc8:	d9 07       	cpc	r29, r25
   11fca:	78 f4       	brcc	.+30     	; 0x11fea <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xaa>
   11fcc:	ce 01       	movw	r24, r28
   11fce:	01 96       	adiw	r24, 0x01	; 1
   11fd0:	13 96       	adiw	r26, 0x03	; 3
   11fd2:	9c 93       	st	X, r25
   11fd4:	8e 93       	st	-X, r24
   11fd6:	12 97       	sbiw	r26, 0x02	; 2
   11fd8:	68 83       	st	Y, r22
   11fda:	12 96       	adiw	r26, 0x02	; 2
   11fdc:	0d 90       	ld	r0, X+
   11fde:	bc 91       	ld	r27, X
   11fe0:	a0 2d       	mov	r26, r0
   11fe2:	1c 92       	st	X, r1
   11fe4:	81 e0       	ldi	r24, 0x01	; 1
   11fe6:	90 e0       	ldi	r25, 0x00	; 0
   11fe8:	02 c0       	rjmp	.+4      	; 0x11fee <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xae>
   11fea:	80 e0       	ldi	r24, 0x00	; 0
   11fec:	90 e0       	ldi	r25, 0x00	; 0
   11fee:	51 e0       	ldi	r21, 0x01	; 1
   11ff0:	6a 30       	cpi	r22, 0x0A	; 10
   11ff2:	09 f0       	breq	.+2      	; 0x11ff6 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xb6>
   11ff4:	50 e0       	ldi	r21, 0x00	; 0
   11ff6:	42 81       	ldd	r20, Z+2	; 0x02
   11ff8:	50 fb       	bst	r21, 0
   11ffa:	47 f9       	bld	r20, 7
   11ffc:	42 83       	std	Z+2, r20	; 0x02
   11ffe:	82 0f       	add	r24, r18
   12000:	93 1f       	adc	r25, r19
   12002:	df 91       	pop	r29
   12004:	cf 91       	pop	r28
   12006:	08 95       	ret

00012008 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>:
   12008:	ef 92       	push	r14
   1200a:	ff 92       	push	r15
   1200c:	0f 93       	push	r16
   1200e:	1f 93       	push	r17
   12010:	cf 93       	push	r28
   12012:	df 93       	push	r29
   12014:	7c 01       	movw	r14, r24
   12016:	8b 01       	movw	r16, r22
   12018:	c0 e0       	ldi	r28, 0x00	; 0
   1201a:	d0 e0       	ldi	r29, 0x00	; 0
   1201c:	f8 01       	movw	r30, r16
   1201e:	61 91       	ld	r22, Z+
   12020:	8f 01       	movw	r16, r30
   12022:	66 23       	and	r22, r22
   12024:	29 f0       	breq	.+10     	; 0x12030 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x28>
   12026:	c7 01       	movw	r24, r14
   12028:	8b df       	rcall	.-234    	; 0x11f40 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   1202a:	c8 0f       	add	r28, r24
   1202c:	d9 1f       	adc	r29, r25
   1202e:	f6 cf       	rjmp	.-20     	; 0x1201c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x14>
   12030:	ce 01       	movw	r24, r28
   12032:	df 91       	pop	r29
   12034:	cf 91       	pop	r28
   12036:	1f 91       	pop	r17
   12038:	0f 91       	pop	r16
   1203a:	ff 90       	pop	r15
   1203c:	ef 90       	pop	r14
   1203e:	08 95       	ret

00012040 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>:
   12040:	fc 01       	movw	r30, r24
   12042:	90 81       	ld	r25, Z
   12044:	9f 7d       	andi	r25, 0xDF	; 223
   12046:	9b 35       	cpi	r25, 0x5B	; 91
   12048:	99 f4       	brne	.+38     	; 0x12070 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x30>
   1204a:	01 80       	ldd	r0, Z+1	; 0x01
   1204c:	f2 81       	ldd	r31, Z+2	; 0x02
   1204e:	e0 2d       	mov	r30, r0
   12050:	32 81       	ldd	r19, Z+2	; 0x02
   12052:	93 2f       	mov	r25, r19
   12054:	9f 70       	andi	r25, 0x0F	; 15
   12056:	9f 30       	cpi	r25, 0x0F	; 15
   12058:	39 f0       	breq	.+14     	; 0x12068 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x28>
   1205a:	9f 5f       	subi	r25, 0xFF	; 255
   1205c:	29 2f       	mov	r18, r25
   1205e:	2f 70       	andi	r18, 0x0F	; 15
   12060:	93 2f       	mov	r25, r19
   12062:	90 7f       	andi	r25, 0xF0	; 240
   12064:	92 2b       	or	r25, r18
   12066:	92 83       	std	Z+2, r25	; 0x02
   12068:	65 ef       	ldi	r22, 0xF5	; 245
   1206a:	76 e0       	ldi	r23, 0x06	; 6
   1206c:	cf 01       	movw	r24, r30
   1206e:	cc cf       	rjmp	.-104    	; 0x12008 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   12070:	80 e0       	ldi	r24, 0x00	; 0
   12072:	90 e0       	ldi	r25, 0x00	; 0
   12074:	08 95       	ret

00012076 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>:
   12076:	ff 92       	push	r15
   12078:	0f 93       	push	r16
   1207a:	1f 93       	push	r17
   1207c:	cf 93       	push	r28
   1207e:	df 93       	push	r29
   12080:	8c 01       	movw	r16, r24
   12082:	f6 2e       	mov	r15, r22
   12084:	8b e5       	ldi	r24, 0x5B	; 91
   12086:	68 17       	cp	r22, r24
   12088:	f9 f0       	breq	.+62     	; 0x120c8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   1208a:	86 17       	cp	r24, r22
   1208c:	98 f0       	brcs	.+38     	; 0x120b4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x3e>
   1208e:	ac e2       	ldi	r26, 0x2C	; 44
   12090:	6a 17       	cp	r22, r26
   12092:	09 f4       	brne	.+2      	; 0x12096 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x20>
   12094:	43 c0       	rjmp	.+134    	; 0x1211c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xa6>
   12096:	ba e3       	ldi	r27, 0x3A	; 58
   12098:	6b 17       	cp	r22, r27
   1209a:	c1 f1       	breq	.+112    	; 0x1210c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x96>
   1209c:	e2 e2       	ldi	r30, 0x22	; 34
   1209e:	6e 13       	cpse	r22, r30
   120a0:	4c c0       	rjmp	.+152    	; 0x1213a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   120a2:	81 e0       	ldi	r24, 0x01	; 1
   120a4:	d8 01       	movw	r26, r16
   120a6:	13 96       	adiw	r26, 0x03	; 3
   120a8:	8c 93       	st	X, r24
   120aa:	c8 01       	movw	r24, r16
   120ac:	c9 df       	rcall	.-110    	; 0x12040 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   120ae:	ec 01       	movw	r28, r24
   120b0:	62 e2       	ldi	r22, 0x22	; 34
   120b2:	3f c0       	rjmp	.+126    	; 0x12132 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   120b4:	fb e7       	ldi	r31, 0x7B	; 123
   120b6:	6f 17       	cp	r22, r31
   120b8:	39 f0       	breq	.+14     	; 0x120c8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   120ba:	8d e7       	ldi	r24, 0x7D	; 125
   120bc:	68 17       	cp	r22, r24
   120be:	39 f0       	breq	.+14     	; 0x120ce <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   120c0:	ad e5       	ldi	r26, 0x5D	; 93
   120c2:	6a 13       	cpse	r22, r26
   120c4:	3a c0       	rjmp	.+116    	; 0x1213a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   120c6:	03 c0       	rjmp	.+6      	; 0x120ce <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   120c8:	c8 01       	movw	r24, r16
   120ca:	ba df       	rcall	.-140    	; 0x12040 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   120cc:	1c c0       	rjmp	.+56     	; 0x12106 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x90>
   120ce:	d8 01       	movw	r26, r16
   120d0:	8c 91       	ld	r24, X
   120d2:	8f 7d       	andi	r24, 0xDF	; 223
   120d4:	8b 35       	cpi	r24, 0x5B	; 91
   120d6:	19 f4       	brne	.+6      	; 0x120de <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x68>
   120d8:	c0 e0       	ldi	r28, 0x00	; 0
   120da:	d0 e0       	ldi	r29, 0x00	; 0
   120dc:	15 c0       	rjmp	.+42     	; 0x12108 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x92>
   120de:	d8 01       	movw	r26, r16
   120e0:	11 96       	adiw	r26, 0x01	; 1
   120e2:	ed 91       	ld	r30, X+
   120e4:	fc 91       	ld	r31, X
   120e6:	12 97       	sbiw	r26, 0x02	; 2
   120e8:	32 81       	ldd	r19, Z+2	; 0x02
   120ea:	93 2f       	mov	r25, r19
   120ec:	9f 70       	andi	r25, 0x0F	; 15
   120ee:	39 f0       	breq	.+14     	; 0x120fe <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x88>
   120f0:	91 5f       	subi	r25, 0xF1	; 241
   120f2:	29 2f       	mov	r18, r25
   120f4:	2f 70       	andi	r18, 0x0F	; 15
   120f6:	93 2f       	mov	r25, r19
   120f8:	90 7f       	andi	r25, 0xF0	; 240
   120fa:	92 2b       	or	r25, r18
   120fc:	92 83       	std	Z+2, r25	; 0x02
   120fe:	65 ef       	ldi	r22, 0xF5	; 245
   12100:	76 e0       	ldi	r23, 0x06	; 6
   12102:	cf 01       	movw	r24, r30
   12104:	81 df       	rcall	.-254    	; 0x12008 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   12106:	ec 01       	movw	r28, r24
   12108:	6f 2d       	mov	r22, r15
   1210a:	13 c0       	rjmp	.+38     	; 0x12132 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   1210c:	61 ef       	ldi	r22, 0xF1	; 241
   1210e:	76 e0       	ldi	r23, 0x06	; 6
   12110:	d8 01       	movw	r26, r16
   12112:	11 96       	adiw	r26, 0x01	; 1
   12114:	8d 91       	ld	r24, X+
   12116:	9c 91       	ld	r25, X
   12118:	12 97       	sbiw	r26, 0x02	; 2
   1211a:	05 c0       	rjmp	.+10     	; 0x12126 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xb0>
   1211c:	64 ef       	ldi	r22, 0xF4	; 244
   1211e:	76 e0       	ldi	r23, 0x06	; 6
   12120:	f8 01       	movw	r30, r16
   12122:	81 81       	ldd	r24, Z+1	; 0x01
   12124:	92 81       	ldd	r25, Z+2	; 0x02
   12126:	df 91       	pop	r29
   12128:	cf 91       	pop	r28
   1212a:	1f 91       	pop	r17
   1212c:	0f 91       	pop	r16
   1212e:	ff 90       	pop	r15
   12130:	6b cf       	rjmp	.-298    	; 0x12008 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   12132:	f8 01       	movw	r30, r16
   12134:	81 81       	ldd	r24, Z+1	; 0x01
   12136:	92 81       	ldd	r25, Z+2	; 0x02
   12138:	09 c0       	rjmp	.+18     	; 0x1214c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xd6>
   1213a:	c8 01       	movw	r24, r16
   1213c:	81 df       	rcall	.-254    	; 0x12040 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   1213e:	ec 01       	movw	r28, r24
   12140:	6f 2d       	mov	r22, r15
   12142:	d8 01       	movw	r26, r16
   12144:	11 96       	adiw	r26, 0x01	; 1
   12146:	8d 91       	ld	r24, X+
   12148:	9c 91       	ld	r25, X
   1214a:	12 97       	sbiw	r26, 0x02	; 2
   1214c:	f9 de       	rcall	.-526    	; 0x11f40 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   1214e:	8c 0f       	add	r24, r28
   12150:	9d 1f       	adc	r25, r29
   12152:	df 91       	pop	r29
   12154:	cf 91       	pop	r28
   12156:	1f 91       	pop	r17
   12158:	0f 91       	pop	r16
   1215a:	ff 90       	pop	r15
   1215c:	08 95       	ret

0001215e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>:
   1215e:	1f 93       	push	r17
   12160:	cf 93       	push	r28
   12162:	df 93       	push	r29
   12164:	ec 01       	movw	r28, r24
   12166:	16 2f       	mov	r17, r22
   12168:	8b 81       	ldd	r24, Y+3	; 0x03
   1216a:	88 23       	and	r24, r24
   1216c:	51 f0       	breq	.+20     	; 0x12182 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x24>
   1216e:	62 32       	cpi	r22, 0x22	; 34
   12170:	19 f4       	brne	.+6      	; 0x12178 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>
   12172:	88 81       	ld	r24, Y
   12174:	8c 35       	cpi	r24, 0x5C	; 92
   12176:	61 f4       	brne	.+24     	; 0x12190 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x32>
   12178:	61 2f       	mov	r22, r17
   1217a:	89 81       	ldd	r24, Y+1	; 0x01
   1217c:	9a 81       	ldd	r25, Y+2	; 0x02
   1217e:	e0 de       	rcall	.-576    	; 0x11f40 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   12180:	02 c0       	rjmp	.+4      	; 0x12186 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x28>
   12182:	ce 01       	movw	r24, r28
   12184:	78 df       	rcall	.-272    	; 0x12076 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>
   12186:	18 83       	st	Y, r17
   12188:	df 91       	pop	r29
   1218a:	cf 91       	pop	r28
   1218c:	1f 91       	pop	r17
   1218e:	08 95       	ret
   12190:	1b 82       	std	Y+3, r1	; 0x03
   12192:	f2 cf       	rjmp	.-28     	; 0x12178 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>

00012194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>:
   12194:	cf 93       	push	r28
   12196:	df 93       	push	r29
   12198:	ec 01       	movw	r28, r24
   1219a:	88 81       	ld	r24, Y
   1219c:	99 81       	ldd	r25, Y+1	; 0x01
   1219e:	df df       	rcall	.-66     	; 0x1215e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   121a0:	2a 81       	ldd	r18, Y+2	; 0x02
   121a2:	3b 81       	ldd	r19, Y+3	; 0x03
   121a4:	82 0f       	add	r24, r18
   121a6:	93 1f       	adc	r25, r19
   121a8:	9b 83       	std	Y+3, r25	; 0x03
   121aa:	8a 83       	std	Y+2, r24	; 0x02
   121ac:	df 91       	pop	r29
   121ae:	cf 91       	pop	r28
   121b0:	08 95       	ret

000121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>:
   121b2:	cf 92       	push	r12
   121b4:	df 92       	push	r13
   121b6:	ef 92       	push	r14
   121b8:	ff 92       	push	r15
   121ba:	0f 93       	push	r16
   121bc:	1f 93       	push	r17
   121be:	cf 93       	push	r28
   121c0:	df 93       	push	r29
   121c2:	7c 01       	movw	r14, r24
   121c4:	fc 01       	movw	r30, r24
   121c6:	c0 80       	ld	r12, Z
   121c8:	d1 80       	ldd	r13, Z+1	; 0x01
   121ca:	8b 01       	movw	r16, r22
   121cc:	c0 e0       	ldi	r28, 0x00	; 0
   121ce:	d0 e0       	ldi	r29, 0x00	; 0
   121d0:	f8 01       	movw	r30, r16
   121d2:	61 91       	ld	r22, Z+
   121d4:	8f 01       	movw	r16, r30
   121d6:	66 23       	and	r22, r22
   121d8:	29 f0       	breq	.+10     	; 0x121e4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x32>
   121da:	c6 01       	movw	r24, r12
   121dc:	c0 df       	rcall	.-128    	; 0x1215e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   121de:	c8 0f       	add	r28, r24
   121e0:	d9 1f       	adc	r29, r25
   121e2:	f6 cf       	rjmp	.-20     	; 0x121d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x1e>
   121e4:	f7 01       	movw	r30, r14
   121e6:	82 81       	ldd	r24, Z+2	; 0x02
   121e8:	93 81       	ldd	r25, Z+3	; 0x03
   121ea:	c8 0f       	add	r28, r24
   121ec:	d9 1f       	adc	r29, r25
   121ee:	d3 83       	std	Z+3, r29	; 0x03
   121f0:	c2 83       	std	Z+2, r28	; 0x02
   121f2:	df 91       	pop	r29
   121f4:	cf 91       	pop	r28
   121f6:	1f 91       	pop	r17
   121f8:	0f 91       	pop	r16
   121fa:	ff 90       	pop	r15
   121fc:	ef 90       	pop	r14
   121fe:	df 90       	pop	r13
   12200:	cf 90       	pop	r12
   12202:	08 95       	ret

00012204 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>:
   12204:	ff 92       	push	r15
   12206:	0f 93       	push	r16
   12208:	1f 93       	push	r17
   1220a:	cf 93       	push	r28
   1220c:	df 93       	push	r29
   1220e:	61 15       	cp	r22, r1
   12210:	71 05       	cpc	r23, r1
   12212:	41 f4       	brne	.+16     	; 0x12224 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x20>
   12214:	6c ee       	ldi	r22, 0xEC	; 236
   12216:	76 e0       	ldi	r23, 0x06	; 6
   12218:	df 91       	pop	r29
   1221a:	cf 91       	pop	r28
   1221c:	1f 91       	pop	r17
   1221e:	0f 91       	pop	r16
   12220:	ff 90       	pop	r15
   12222:	c7 cf       	rjmp	.-114    	; 0x121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12224:	8b 01       	movw	r16, r22
   12226:	ec 01       	movw	r28, r24
   12228:	62 e2       	ldi	r22, 0x22	; 34
   1222a:	ce 01       	movw	r24, r28
   1222c:	b3 df       	rcall	.-154    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1222e:	f8 01       	movw	r30, r16
   12230:	61 91       	ld	r22, Z+
   12232:	8f 01       	movw	r16, r30
   12234:	66 23       	and	r22, r22
   12236:	51 f0       	breq	.+20     	; 0x1224c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x48>
   12238:	ed ed       	ldi	r30, 0xDD	; 221
   1223a:	f6 e0       	ldi	r31, 0x06	; 6
   1223c:	f0 80       	ld	r15, Z
   1223e:	ff 20       	and	r15, r15
   12240:	a1 f3       	breq	.-24     	; 0x1222a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>
   12242:	81 81       	ldd	r24, Z+1	; 0x01
   12244:	68 17       	cp	r22, r24
   12246:	51 f0       	breq	.+20     	; 0x1225c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x58>
   12248:	32 96       	adiw	r30, 0x02	; 2
   1224a:	f8 cf       	rjmp	.-16     	; 0x1223c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x38>
   1224c:	62 e2       	ldi	r22, 0x22	; 34
   1224e:	ce 01       	movw	r24, r28
   12250:	df 91       	pop	r29
   12252:	cf 91       	pop	r28
   12254:	1f 91       	pop	r17
   12256:	0f 91       	pop	r16
   12258:	ff 90       	pop	r15
   1225a:	9c cf       	rjmp	.-200    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1225c:	6c e5       	ldi	r22, 0x5C	; 92
   1225e:	ce 01       	movw	r24, r28
   12260:	99 df       	rcall	.-206    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12262:	6f 2d       	mov	r22, r15
   12264:	e2 cf       	rjmp	.-60     	; 0x1222a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>

00012266 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>:
   12266:	0f 93       	push	r16
   12268:	1f 93       	push	r17
   1226a:	cf 93       	push	r28
   1226c:	df 93       	push	r29
   1226e:	cd b7       	in	r28, 0x3d	; 61
   12270:	de b7       	in	r29, 0x3e	; 62
   12272:	66 97       	sbiw	r28, 0x16	; 22
   12274:	0f b6       	in	r0, 0x3f	; 63
   12276:	f8 94       	cli
   12278:	de bf       	out	0x3e, r29	; 62
   1227a:	0f be       	out	0x3f, r0	; 63
   1227c:	cd bf       	out	0x3d, r28	; 61
   1227e:	9c 01       	movw	r18, r24
   12280:	cb 01       	movw	r24, r22
   12282:	1e 8a       	std	Y+22, r1	; 0x16
   12284:	fe 01       	movw	r30, r28
   12286:	76 96       	adiw	r30, 0x16	; 22
   12288:	0a e0       	ldi	r16, 0x0A	; 10
   1228a:	10 e0       	ldi	r17, 0x00	; 0
   1228c:	b8 01       	movw	r22, r16
   1228e:	0e 94 cc ea 	call	0x1d598	; 0x1d598 <__divmodhi4>
   12292:	80 5d       	subi	r24, 0xD0	; 208
   12294:	82 93       	st	-Z, r24
   12296:	cb 01       	movw	r24, r22
   12298:	00 97       	sbiw	r24, 0x00	; 0
   1229a:	c1 f7       	brne	.-16     	; 0x1228c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_+0x26>
   1229c:	bf 01       	movw	r22, r30
   1229e:	c9 01       	movw	r24, r18
   122a0:	88 df       	rcall	.-240    	; 0x121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   122a2:	66 96       	adiw	r28, 0x16	; 22
   122a4:	0f b6       	in	r0, 0x3f	; 63
   122a6:	f8 94       	cli
   122a8:	de bf       	out	0x3e, r29	; 62
   122aa:	0f be       	out	0x3f, r0	; 63
   122ac:	cd bf       	out	0x3d, r28	; 61
   122ae:	df 91       	pop	r29
   122b0:	cf 91       	pop	r28
   122b2:	1f 91       	pop	r17
   122b4:	0f 91       	pop	r16
   122b6:	08 95       	ret

000122b8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>:
   122b8:	8f 92       	push	r8
   122ba:	9f 92       	push	r9
   122bc:	af 92       	push	r10
   122be:	bf 92       	push	r11
   122c0:	ef 92       	push	r14
   122c2:	ff 92       	push	r15
   122c4:	0f 93       	push	r16
   122c6:	1f 93       	push	r17
   122c8:	cf 93       	push	r28
   122ca:	df 93       	push	r29
   122cc:	cd b7       	in	r28, 0x3d	; 61
   122ce:	de b7       	in	r29, 0x3e	; 62
   122d0:	66 97       	sbiw	r28, 0x16	; 22
   122d2:	0f b6       	in	r0, 0x3f	; 63
   122d4:	f8 94       	cli
   122d6:	de bf       	out	0x3e, r29	; 62
   122d8:	0f be       	out	0x3f, r0	; 63
   122da:	cd bf       	out	0x3d, r28	; 61
   122dc:	7c 01       	movw	r14, r24
   122de:	1e 8a       	std	Y+22, r1	; 0x16
   122e0:	8e 01       	movw	r16, r28
   122e2:	0a 5e       	subi	r16, 0xEA	; 234
   122e4:	1f 4f       	sbci	r17, 0xFF	; 255
   122e6:	8a e0       	ldi	r24, 0x0A	; 10
   122e8:	88 2e       	mov	r8, r24
   122ea:	91 2c       	mov	r9, r1
   122ec:	a1 2c       	mov	r10, r1
   122ee:	b1 2c       	mov	r11, r1
   122f0:	cb 01       	movw	r24, r22
   122f2:	ba 01       	movw	r22, r20
   122f4:	a5 01       	movw	r20, r10
   122f6:	94 01       	movw	r18, r8
   122f8:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   122fc:	94 2f       	mov	r25, r20
   122fe:	85 2f       	mov	r24, r21
   12300:	60 5d       	subi	r22, 0xD0	; 208
   12302:	f8 01       	movw	r30, r16
   12304:	62 93       	st	-Z, r22
   12306:	8f 01       	movw	r16, r30
   12308:	a9 01       	movw	r20, r18
   1230a:	69 2f       	mov	r22, r25
   1230c:	78 2f       	mov	r23, r24
   1230e:	41 15       	cp	r20, r1
   12310:	51 05       	cpc	r21, r1
   12312:	61 05       	cpc	r22, r1
   12314:	71 05       	cpc	r23, r1
   12316:	61 f7       	brne	.-40     	; 0x122f0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_+0x38>
   12318:	bf 01       	movw	r22, r30
   1231a:	c7 01       	movw	r24, r14
   1231c:	4a df       	rcall	.-364    	; 0x121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1231e:	66 96       	adiw	r28, 0x16	; 22
   12320:	0f b6       	in	r0, 0x3f	; 63
   12322:	f8 94       	cli
   12324:	de bf       	out	0x3e, r29	; 62
   12326:	0f be       	out	0x3f, r0	; 63
   12328:	cd bf       	out	0x3d, r28	; 61
   1232a:	df 91       	pop	r29
   1232c:	cf 91       	pop	r28
   1232e:	1f 91       	pop	r17
   12330:	0f 91       	pop	r16
   12332:	ff 90       	pop	r15
   12334:	ef 90       	pop	r14
   12336:	bf 90       	pop	r11
   12338:	af 90       	pop	r10
   1233a:	9f 90       	pop	r9
   1233c:	8f 90       	pop	r8
   1233e:	08 95       	ret

00012340 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>:
   12340:	4f 92       	push	r4
   12342:	5f 92       	push	r5
   12344:	6f 92       	push	r6
   12346:	7f 92       	push	r7
   12348:	af 92       	push	r10
   1234a:	bf 92       	push	r11
   1234c:	cf 92       	push	r12
   1234e:	df 92       	push	r13
   12350:	ef 92       	push	r14
   12352:	ff 92       	push	r15
   12354:	0f 93       	push	r16
   12356:	1f 93       	push	r17
   12358:	cf 93       	push	r28
   1235a:	df 93       	push	r29
   1235c:	cd b7       	in	r28, 0x3d	; 61
   1235e:	de b7       	in	r29, 0x3e	; 62
   12360:	6b 97       	sbiw	r28, 0x1b	; 27
   12362:	0f b6       	in	r0, 0x3f	; 63
   12364:	f8 94       	cli
   12366:	de bf       	out	0x3e, r29	; 62
   12368:	0f be       	out	0x3f, r0	; 63
   1236a:	cd bf       	out	0x3d, r28	; 61
   1236c:	8c 01       	movw	r16, r24
   1236e:	6a 01       	movw	r12, r20
   12370:	7b 01       	movw	r14, r22
   12372:	9a 01       	movw	r18, r20
   12374:	ab 01       	movw	r20, r22
   12376:	c7 01       	movw	r24, r14
   12378:	b6 01       	movw	r22, r12
   1237a:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
   1237e:	88 23       	and	r24, r24
   12380:	19 f0       	breq	.+6      	; 0x12388 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x48>
   12382:	68 ef       	ldi	r22, 0xF8	; 248
   12384:	76 e0       	ldi	r23, 0x06	; 6
   12386:	29 c0       	rjmp	.+82     	; 0x123da <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x9a>
   12388:	20 e0       	ldi	r18, 0x00	; 0
   1238a:	30 e0       	ldi	r19, 0x00	; 0
   1238c:	a9 01       	movw	r20, r18
   1238e:	c7 01       	movw	r24, r14
   12390:	b6 01       	movw	r22, r12
   12392:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
   12396:	87 ff       	sbrs	r24, 7
   12398:	07 c0       	rjmp	.+14     	; 0x123a8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x68>
   1239a:	6d e2       	ldi	r22, 0x2D	; 45
   1239c:	c8 01       	movw	r24, r16
   1239e:	fa de       	rcall	.-524    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   123a0:	f7 fa       	bst	r15, 7
   123a2:	f0 94       	com	r15
   123a4:	f7 f8       	bld	r15, 7
   123a6:	f0 94       	com	r15
   123a8:	20 e0       	ldi	r18, 0x00	; 0
   123aa:	30 e0       	ldi	r19, 0x00	; 0
   123ac:	a9 01       	movw	r20, r18
   123ae:	c7 01       	movw	r24, r14
   123b0:	b6 01       	movw	r22, r12
   123b2:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
   123b6:	88 23       	and	r24, r24
   123b8:	99 f0       	breq	.+38     	; 0x123e0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   123ba:	a7 01       	movw	r20, r14
   123bc:	96 01       	movw	r18, r12
   123be:	c7 01       	movw	r24, r14
   123c0:	b6 01       	movw	r22, r12
   123c2:	0e 94 4f d0 	call	0x1a09e	; 0x1a09e <__addsf3>
   123c6:	9b 01       	movw	r18, r22
   123c8:	ac 01       	movw	r20, r24
   123ca:	c7 01       	movw	r24, r14
   123cc:	b6 01       	movw	r22, r12
   123ce:	0e 94 b3 d0 	call	0x1a166	; 0x1a166 <__cmpsf2>
   123d2:	81 11       	cpse	r24, r1
   123d4:	05 c0       	rjmp	.+10     	; 0x123e0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   123d6:	6f ef       	ldi	r22, 0xFF	; 255
   123d8:	76 e0       	ldi	r23, 0x06	; 6
   123da:	c8 01       	movw	r24, r16
   123dc:	ea de       	rcall	.-556    	; 0x121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   123de:	51 c0       	rjmp	.+162    	; 0x12482 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   123e0:	b7 01       	movw	r22, r14
   123e2:	a6 01       	movw	r20, r12
   123e4:	ce 01       	movw	r24, r28
   123e6:	41 96       	adiw	r24, 0x11	; 17
   123e8:	2d dc       	rcall	.-1958   	; 0x11c44 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>
   123ea:	49 89       	ldd	r20, Y+17	; 0x11
   123ec:	5a 89       	ldd	r21, Y+18	; 0x12
   123ee:	6b 89       	ldd	r22, Y+19	; 0x13
   123f0:	7c 89       	ldd	r23, Y+20	; 0x14
   123f2:	c8 01       	movw	r24, r16
   123f4:	61 df       	rcall	.-318    	; 0x122b8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   123f6:	bb 8c       	ldd	r11, Y+27	; 0x1b
   123f8:	bb 20       	and	r11, r11
   123fa:	41 f1       	breq	.+80     	; 0x1244c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x10c>
   123fc:	6d 89       	ldd	r22, Y+21	; 0x15
   123fe:	7e 89       	ldd	r23, Y+22	; 0x16
   12400:	8f 89       	ldd	r24, Y+23	; 0x17
   12402:	98 8d       	ldd	r25, Y+24	; 0x18
   12404:	18 8a       	std	Y+16, r1	; 0x10
   12406:	ab 2c       	mov	r10, r11
   12408:	6e 01       	movw	r12, r28
   1240a:	20 e1       	ldi	r18, 0x10	; 16
   1240c:	c2 0e       	add	r12, r18
   1240e:	d1 1c       	adc	r13, r1
   12410:	76 01       	movw	r14, r12
   12412:	2a e0       	ldi	r18, 0x0A	; 10
   12414:	42 2e       	mov	r4, r18
   12416:	51 2c       	mov	r5, r1
   12418:	61 2c       	mov	r6, r1
   1241a:	71 2c       	mov	r7, r1
   1241c:	aa 94       	dec	r10
   1241e:	ef ef       	ldi	r30, 0xFF	; 255
   12420:	ae 16       	cp	r10, r30
   12422:	59 f0       	breq	.+22     	; 0x1243a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xfa>
   12424:	a3 01       	movw	r20, r6
   12426:	92 01       	movw	r18, r4
   12428:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   1242c:	60 5d       	subi	r22, 0xD0	; 208
   1242e:	f6 01       	movw	r30, r12
   12430:	62 93       	st	-Z, r22
   12432:	6f 01       	movw	r12, r30
   12434:	b9 01       	movw	r22, r18
   12436:	ca 01       	movw	r24, r20
   12438:	f1 cf       	rjmp	.-30     	; 0x1241c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xdc>
   1243a:	b7 01       	movw	r22, r14
   1243c:	6b 19       	sub	r22, r11
   1243e:	71 09       	sbc	r23, r1
   12440:	8e e2       	ldi	r24, 0x2E	; 46
   12442:	fb 01       	movw	r30, r22
   12444:	82 93       	st	-Z, r24
   12446:	bf 01       	movw	r22, r30
   12448:	c8 01       	movw	r24, r16
   1244a:	b3 de       	rcall	.-666    	; 0x121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1244c:	89 8d       	ldd	r24, Y+25	; 0x19
   1244e:	9a 8d       	ldd	r25, Y+26	; 0x1a
   12450:	97 ff       	sbrs	r25, 7
   12452:	0b c0       	rjmp	.+22     	; 0x1246a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x12a>
   12454:	6c ef       	ldi	r22, 0xFC	; 252
   12456:	76 e0       	ldi	r23, 0x06	; 6
   12458:	c8 01       	movw	r24, r16
   1245a:	ab de       	rcall	.-682    	; 0x121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1245c:	69 8d       	ldd	r22, Y+25	; 0x19
   1245e:	7a 8d       	ldd	r23, Y+26	; 0x1a
   12460:	71 95       	neg	r23
   12462:	61 95       	neg	r22
   12464:	71 09       	sbc	r23, r1
   12466:	c8 01       	movw	r24, r16
   12468:	fe de       	rcall	.-516    	; 0x12266 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   1246a:	89 8d       	ldd	r24, Y+25	; 0x19
   1246c:	9a 8d       	ldd	r25, Y+26	; 0x1a
   1246e:	18 16       	cp	r1, r24
   12470:	19 06       	cpc	r1, r25
   12472:	3c f4       	brge	.+14     	; 0x12482 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   12474:	65 e6       	ldi	r22, 0x65	; 101
   12476:	c8 01       	movw	r24, r16
   12478:	8d de       	rcall	.-742    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1247a:	69 8d       	ldd	r22, Y+25	; 0x19
   1247c:	7a 8d       	ldd	r23, Y+26	; 0x1a
   1247e:	c8 01       	movw	r24, r16
   12480:	f2 de       	rcall	.-540    	; 0x12266 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   12482:	6b 96       	adiw	r28, 0x1b	; 27
   12484:	0f b6       	in	r0, 0x3f	; 63
   12486:	f8 94       	cli
   12488:	de bf       	out	0x3e, r29	; 62
   1248a:	0f be       	out	0x3f, r0	; 63
   1248c:	cd bf       	out	0x3d, r28	; 61
   1248e:	df 91       	pop	r29
   12490:	cf 91       	pop	r28
   12492:	1f 91       	pop	r17
   12494:	0f 91       	pop	r16
   12496:	ff 90       	pop	r15
   12498:	ef 90       	pop	r14
   1249a:	df 90       	pop	r13
   1249c:	cf 90       	pop	r12
   1249e:	bf 90       	pop	r11
   124a0:	af 90       	pop	r10
   124a2:	7f 90       	pop	r7
   124a4:	6f 90       	pop	r6
   124a6:	5f 90       	pop	r5
   124a8:	4f 90       	pop	r4
   124aa:	08 95       	ret

000124ac <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>:
   124ac:	0f 93       	push	r16
   124ae:	1f 93       	push	r17
   124b0:	cf 93       	push	r28
   124b2:	df 93       	push	r29
   124b4:	eb 01       	movw	r28, r22
   124b6:	dc 01       	movw	r26, r24
   124b8:	ec 91       	ld	r30, X
   124ba:	4e 2f       	mov	r20, r30
   124bc:	50 e0       	ldi	r21, 0x00	; 0
   124be:	fa 01       	movw	r30, r20
   124c0:	31 97       	sbiw	r30, 0x01	; 1
   124c2:	e8 30       	cpi	r30, 0x08	; 8
   124c4:	f1 05       	cpc	r31, r1
   124c6:	08 f0       	brcs	.+2      	; 0x124ca <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x1e>
   124c8:	6e c0       	rjmp	.+220    	; 0x125a6 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xfa>
   124ca:	8c 01       	movw	r16, r24
   124cc:	88 27       	eor	r24, r24
   124ce:	e9 51       	subi	r30, 0x19	; 25
   124d0:	ff 4f       	sbci	r31, 0xFF	; 255
   124d2:	8f 4f       	sbci	r24, 0xFF	; 255
   124d4:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
   124d8:	fd 01       	movw	r30, r26
   124da:	41 81       	ldd	r20, Z+1	; 0x01
   124dc:	52 81       	ldd	r21, Z+2	; 0x02
   124de:	63 81       	ldd	r22, Z+3	; 0x03
   124e0:	74 81       	ldd	r23, Z+4	; 0x04
   124e2:	ce 01       	movw	r24, r28
   124e4:	df 91       	pop	r29
   124e6:	cf 91       	pop	r28
   124e8:	1f 91       	pop	r17
   124ea:	0f 91       	pop	r16
   124ec:	29 cf       	rjmp	.-430    	; 0x12340 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>
   124ee:	11 96       	adiw	r26, 0x01	; 1
   124f0:	0d 91       	ld	r16, X+
   124f2:	1c 91       	ld	r17, X
   124f4:	12 97       	sbiw	r26, 0x02	; 2
   124f6:	6b e5       	ldi	r22, 0x5B	; 91
   124f8:	ce 01       	movw	r24, r28
   124fa:	4c de       	rcall	.-872    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   124fc:	f8 01       	movw	r30, r16
   124fe:	02 81       	ldd	r16, Z+2	; 0x02
   12500:	13 81       	ldd	r17, Z+3	; 0x03
   12502:	01 15       	cp	r16, r1
   12504:	11 05       	cpc	r17, r1
   12506:	71 f0       	breq	.+28     	; 0x12524 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   12508:	be 01       	movw	r22, r28
   1250a:	c8 01       	movw	r24, r16
   1250c:	02 96       	adiw	r24, 0x02	; 2
   1250e:	ce df       	rcall	.-100    	; 0x124ac <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   12510:	d8 01       	movw	r26, r16
   12512:	0d 91       	ld	r16, X+
   12514:	1c 91       	ld	r17, X
   12516:	01 15       	cp	r16, r1
   12518:	11 05       	cpc	r17, r1
   1251a:	21 f0       	breq	.+8      	; 0x12524 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   1251c:	6c e2       	ldi	r22, 0x2C	; 44
   1251e:	ce 01       	movw	r24, r28
   12520:	39 de       	rcall	.-910    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12522:	ef cf       	rjmp	.-34     	; 0x12502 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x56>
   12524:	6d e5       	ldi	r22, 0x5D	; 93
   12526:	ce 01       	movw	r24, r28
   12528:	df 91       	pop	r29
   1252a:	cf 91       	pop	r28
   1252c:	1f 91       	pop	r17
   1252e:	0f 91       	pop	r16
   12530:	31 ce       	rjmp	.-926    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12532:	fd 01       	movw	r30, r26
   12534:	81 81       	ldd	r24, Z+1	; 0x01
   12536:	92 81       	ldd	r25, Z+2	; 0x02
   12538:	df 91       	pop	r29
   1253a:	cf 91       	pop	r28
   1253c:	1f 91       	pop	r17
   1253e:	0f 91       	pop	r16
   12540:	37 c0       	rjmp	.+110    	; 0x125b0 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   12542:	11 96       	adiw	r26, 0x01	; 1
   12544:	6d 91       	ld	r22, X+
   12546:	7c 91       	ld	r23, X
   12548:	12 97       	sbiw	r26, 0x02	; 2
   1254a:	ce 01       	movw	r24, r28
   1254c:	df 91       	pop	r29
   1254e:	cf 91       	pop	r28
   12550:	1f 91       	pop	r17
   12552:	0f 91       	pop	r16
   12554:	57 ce       	rjmp	.-850    	; 0x12204 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   12556:	fd 01       	movw	r30, r26
   12558:	61 81       	ldd	r22, Z+1	; 0x01
   1255a:	72 81       	ldd	r23, Z+2	; 0x02
   1255c:	1e c0       	rjmp	.+60     	; 0x1259a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   1255e:	6d e2       	ldi	r22, 0x2D	; 45
   12560:	ce 01       	movw	r24, r28
   12562:	18 de       	rcall	.-976    	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12564:	d8 01       	movw	r26, r16
   12566:	11 96       	adiw	r26, 0x01	; 1
   12568:	4d 91       	ld	r20, X+
   1256a:	5d 91       	ld	r21, X+
   1256c:	6d 91       	ld	r22, X+
   1256e:	7c 91       	ld	r23, X
   12570:	14 97       	sbiw	r26, 0x04	; 4
   12572:	ce 01       	movw	r24, r28
   12574:	df 91       	pop	r29
   12576:	cf 91       	pop	r28
   12578:	1f 91       	pop	r17
   1257a:	0f 91       	pop	r16
   1257c:	9d ce       	rjmp	.-710    	; 0x122b8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   1257e:	fd 01       	movw	r30, r26
   12580:	81 81       	ldd	r24, Z+1	; 0x01
   12582:	92 81       	ldd	r25, Z+2	; 0x02
   12584:	a3 81       	ldd	r26, Z+3	; 0x03
   12586:	b4 81       	ldd	r27, Z+4	; 0x04
   12588:	89 2b       	or	r24, r25
   1258a:	8a 2b       	or	r24, r26
   1258c:	8b 2b       	or	r24, r27
   1258e:	19 f4       	brne	.+6      	; 0x12596 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xea>
   12590:	6d e0       	ldi	r22, 0x0D	; 13
   12592:	77 e0       	ldi	r23, 0x07	; 7
   12594:	02 c0       	rjmp	.+4      	; 0x1259a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   12596:	68 e0       	ldi	r22, 0x08	; 8
   12598:	77 e0       	ldi	r23, 0x07	; 7
   1259a:	ce 01       	movw	r24, r28
   1259c:	df 91       	pop	r29
   1259e:	cf 91       	pop	r28
   125a0:	1f 91       	pop	r17
   125a2:	0f 91       	pop	r16
   125a4:	06 ce       	rjmp	.-1012   	; 0x121b2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   125a6:	df 91       	pop	r29
   125a8:	cf 91       	pop	r28
   125aa:	1f 91       	pop	r17
   125ac:	0f 91       	pop	r16
   125ae:	08 95       	ret

000125b0 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>:
   125b0:	0f 93       	push	r16
   125b2:	1f 93       	push	r17
   125b4:	cf 93       	push	r28
   125b6:	df 93       	push	r29
   125b8:	8c 01       	movw	r16, r24
   125ba:	eb 01       	movw	r28, r22
   125bc:	6b e7       	ldi	r22, 0x7B	; 123
   125be:	ce 01       	movw	r24, r28
   125c0:	e9 dd       	rcall	.-1070   	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   125c2:	f8 01       	movw	r30, r16
   125c4:	02 81       	ldd	r16, Z+2	; 0x02
   125c6:	13 81       	ldd	r17, Z+3	; 0x03
   125c8:	01 15       	cp	r16, r1
   125ca:	11 05       	cpc	r17, r1
   125cc:	b1 f0       	breq	.+44     	; 0x125fa <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   125ce:	f8 01       	movw	r30, r16
   125d0:	62 81       	ldd	r22, Z+2	; 0x02
   125d2:	73 81       	ldd	r23, Z+3	; 0x03
   125d4:	ce 01       	movw	r24, r28
   125d6:	16 de       	rcall	.-980    	; 0x12204 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   125d8:	6a e3       	ldi	r22, 0x3A	; 58
   125da:	ce 01       	movw	r24, r28
   125dc:	db dd       	rcall	.-1098   	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   125de:	be 01       	movw	r22, r28
   125e0:	c8 01       	movw	r24, r16
   125e2:	04 96       	adiw	r24, 0x04	; 4
   125e4:	63 df       	rcall	.-314    	; 0x124ac <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   125e6:	f8 01       	movw	r30, r16
   125e8:	00 81       	ld	r16, Z
   125ea:	11 81       	ldd	r17, Z+1	; 0x01
   125ec:	01 15       	cp	r16, r1
   125ee:	11 05       	cpc	r17, r1
   125f0:	21 f0       	breq	.+8      	; 0x125fa <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   125f2:	6c e2       	ldi	r22, 0x2C	; 44
   125f4:	ce 01       	movw	r24, r28
   125f6:	ce dd       	rcall	.-1124   	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   125f8:	e7 cf       	rjmp	.-50     	; 0x125c8 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x18>
   125fa:	6d e7       	ldi	r22, 0x7D	; 125
   125fc:	ce 01       	movw	r24, r28
   125fe:	df 91       	pop	r29
   12600:	cf 91       	pop	r28
   12602:	1f 91       	pop	r17
   12604:	0f 91       	pop	r16
   12606:	c6 cd       	rjmp	.-1140   	; 0x12194 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>

00012608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>:
   12608:	cf 93       	push	r28
   1260a:	df 93       	push	r29
   1260c:	cd b7       	in	r28, 0x3d	; 61
   1260e:	de b7       	in	r29, 0x3e	; 62
   12610:	2f 97       	sbiw	r28, 0x0f	; 15
   12612:	0f b6       	in	r0, 0x3f	; 63
   12614:	f8 94       	cli
   12616:	de bf       	out	0x3e, r29	; 62
   12618:	0f be       	out	0x3f, r0	; 63
   1261a:	cd bf       	out	0x3d, r28	; 61
   1261c:	41 50       	subi	r20, 0x01	; 1
   1261e:	51 09       	sbc	r21, r1
   12620:	46 0f       	add	r20, r22
   12622:	57 1f       	adc	r21, r23
   12624:	5a 87       	std	Y+10, r21	; 0x0a
   12626:	49 87       	std	Y+9, r20	; 0x09
   12628:	7c 87       	std	Y+12, r23	; 0x0c
   1262a:	6b 87       	std	Y+11, r22	; 0x0b
   1262c:	fb 01       	movw	r30, r22
   1262e:	10 82       	st	Z, r1
   12630:	9e 01       	movw	r18, r28
   12632:	27 5f       	subi	r18, 0xF7	; 247
   12634:	3f 4f       	sbci	r19, 0xFF	; 255
   12636:	3e 87       	std	Y+14, r19	; 0x0e
   12638:	2d 87       	std	Y+13, r18	; 0x0d
   1263a:	2f 85       	ldd	r18, Y+15	; 0x0f
   1263c:	20 78       	andi	r18, 0x80	; 128
   1263e:	20 62       	ori	r18, 0x20	; 32
   12640:	20 68       	ori	r18, 0x80	; 128
   12642:	2f 87       	std	Y+15, r18	; 0x0f
   12644:	9e 01       	movw	r18, r28
   12646:	23 5f       	subi	r18, 0xF3	; 243
   12648:	3f 4f       	sbci	r19, 0xFF	; 255
   1264a:	3f 83       	std	Y+7, r19	; 0x07
   1264c:	2e 83       	std	Y+6, r18	; 0x06
   1264e:	1d 82       	std	Y+5, r1	; 0x05
   12650:	18 86       	std	Y+8, r1	; 0x08
   12652:	28 50       	subi	r18, 0x08	; 8
   12654:	31 09       	sbc	r19, r1
   12656:	3a 83       	std	Y+2, r19	; 0x02
   12658:	29 83       	std	Y+1, r18	; 0x01
   1265a:	1c 82       	std	Y+4, r1	; 0x04
   1265c:	1b 82       	std	Y+3, r1	; 0x03
   1265e:	be 01       	movw	r22, r28
   12660:	6f 5f       	subi	r22, 0xFF	; 255
   12662:	7f 4f       	sbci	r23, 0xFF	; 255
   12664:	a5 df       	rcall	.-182    	; 0x125b0 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   12666:	8b 81       	ldd	r24, Y+3	; 0x03
   12668:	9c 81       	ldd	r25, Y+4	; 0x04
   1266a:	2f 96       	adiw	r28, 0x0f	; 15
   1266c:	0f b6       	in	r0, 0x3f	; 63
   1266e:	f8 94       	cli
   12670:	de bf       	out	0x3e, r29	; 62
   12672:	0f be       	out	0x3f, r0	; 63
   12674:	cd bf       	out	0x3d, r28	; 61
   12676:	df 91       	pop	r29
   12678:	cf 91       	pop	r28
   1267a:	08 95       	ret

0001267c <_Z12Pub_Sub_DataPcPhjh>:
   1267c:	2f 92       	push	r2
   1267e:	3f 92       	push	r3
   12680:	4f 92       	push	r4
   12682:	5f 92       	push	r5
   12684:	6f 92       	push	r6
   12686:	7f 92       	push	r7
   12688:	8f 92       	push	r8
   1268a:	9f 92       	push	r9
   1268c:	af 92       	push	r10
   1268e:	bf 92       	push	r11
   12690:	cf 92       	push	r12
   12692:	df 92       	push	r13
   12694:	ef 92       	push	r14
   12696:	ff 92       	push	r15
   12698:	0f 93       	push	r16
   1269a:	1f 93       	push	r17
   1269c:	cf 93       	push	r28
   1269e:	df 93       	push	r29
   126a0:	cd b7       	in	r28, 0x3d	; 61
   126a2:	de b7       	in	r29, 0x3e	; 62
   126a4:	ce 5b       	subi	r28, 0xBE	; 190
   126a6:	d6 40       	sbci	r29, 0x06	; 6
   126a8:	0f b6       	in	r0, 0x3f	; 63
   126aa:	f8 94       	cli
   126ac:	de bf       	out	0x3e, r29	; 62
   126ae:	0f be       	out	0x3f, r0	; 63
   126b0:	cd bf       	out	0x3d, r28	; 61
   126b2:	ae 01       	movw	r20, r28
   126b4:	47 5f       	subi	r20, 0xF7	; 247
   126b6:	5f 4f       	sbci	r21, 0xFF	; 255
   126b8:	5c 83       	std	Y+4, r21	; 0x04
   126ba:	4b 83       	std	Y+3, r20	; 0x03
   126bc:	4c e2       	ldi	r20, 0x2C	; 44
   126be:	56 e0       	ldi	r21, 0x06	; 6
   126c0:	5e 83       	std	Y+6, r21	; 0x06
   126c2:	4d 83       	std	Y+5, r20	; 0x05
   126c4:	18 86       	std	Y+8, r1	; 0x08
   126c6:	1f 82       	std	Y+7, r1	; 0x07
   126c8:	43 ed       	ldi	r20, 0xD3	; 211
   126ca:	57 e0       	ldi	r21, 0x07	; 7
   126cc:	5a 83       	std	Y+2, r21	; 0x02
   126ce:	49 83       	std	Y+1, r20	; 0x01
   126d0:	21 30       	cpi	r18, 0x01	; 1
   126d2:	11 f0       	breq	.+4      	; 0x126d8 <_Z12Pub_Sub_DataPcPhjh+0x5c>
   126d4:	0c 94 75 a4 	jmp	0x148ea	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x226e>
   126d8:	61 15       	cp	r22, r1
   126da:	71 05       	cpc	r23, r1
   126dc:	19 f4       	brne	.+6      	; 0x126e4 <_Z12Pub_Sub_DataPcPhjh+0x68>
   126de:	2b ee       	ldi	r18, 0xEB	; 235
   126e0:	36 e0       	ldi	r19, 0x06	; 6
   126e2:	01 c0       	rjmp	.+2      	; 0x126e6 <_Z12Pub_Sub_DataPcPhjh+0x6a>
   126e4:	9b 01       	movw	r18, r22
   126e6:	ca 54       	subi	r28, 0x4A	; 74
   126e8:	d9 4f       	sbci	r29, 0xF9	; 249
   126ea:	99 83       	std	Y+1, r25	; 0x01
   126ec:	88 83       	st	Y, r24
   126ee:	c6 5b       	subi	r28, 0xB6	; 182
   126f0:	d6 40       	sbci	r29, 0x06	; 6
   126f2:	ae 01       	movw	r20, r28
   126f4:	4b 5c       	subi	r20, 0xCB	; 203
   126f6:	59 4f       	sbci	r21, 0xF9	; 249
   126f8:	c2 55       	subi	r28, 0x52	; 82
   126fa:	d9 4f       	sbci	r29, 0xF9	; 249
   126fc:	59 83       	std	Y+1, r21	; 0x01
   126fe:	48 83       	st	Y, r20
   12700:	ce 5a       	subi	r28, 0xAE	; 174
   12702:	d6 40       	sbci	r29, 0x06	; 6
   12704:	ce 01       	movw	r24, r28
   12706:	01 96       	adiw	r24, 0x01	; 1
   12708:	cb 5c       	subi	r28, 0xCB	; 203
   1270a:	d9 4f       	sbci	r29, 0xF9	; 249
   1270c:	99 83       	std	Y+1, r25	; 0x01
   1270e:	88 83       	st	Y, r24
   12710:	c5 53       	subi	r28, 0x35	; 53
   12712:	d6 40       	sbci	r29, 0x06	; 6
   12714:	c9 5c       	subi	r28, 0xC9	; 201
   12716:	d9 4f       	sbci	r29, 0xF9	; 249
   12718:	39 83       	std	Y+1, r19	; 0x01
   1271a:	28 83       	st	Y, r18
   1271c:	c7 53       	subi	r28, 0x37	; 55
   1271e:	d6 40       	sbci	r29, 0x06	; 6
   12720:	c7 5c       	subi	r28, 0xC7	; 199
   12722:	d9 4f       	sbci	r29, 0xF9	; 249
   12724:	79 83       	std	Y+1, r23	; 0x01
   12726:	68 83       	st	Y, r22
   12728:	c9 53       	subi	r28, 0x39	; 57
   1272a:	d6 40       	sbci	r29, 0x06	; 6
   1272c:	8a e0       	ldi	r24, 0x0A	; 10
   1272e:	c5 5c       	subi	r28, 0xC5	; 197
   12730:	d9 4f       	sbci	r29, 0xF9	; 249
   12732:	88 83       	st	Y, r24
   12734:	cb 53       	subi	r28, 0x3B	; 59
   12736:	d6 40       	sbci	r29, 0x06	; 6
   12738:	ca 01       	movw	r24, r20
   1273a:	28 d9       	rcall	.-3504   	; 0x1198c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   1273c:	2c 01       	movw	r4, r24
   1273e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12742:	81 30       	cpi	r24, 0x01	; 1
   12744:	31 f4       	brne	.+12     	; 0x12752 <_Z12Pub_Sub_DataPcPhjh+0xd6>
   12746:	62 ef       	ldi	r22, 0xF2	; 242
   12748:	7a e3       	ldi	r23, 0x3A	; 58
   1274a:	86 ec       	ldi	r24, 0xC6	; 198
   1274c:	94 e1       	ldi	r25, 0x14	; 20
   1274e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   12752:	d2 01       	movw	r26, r4
   12754:	8d 91       	ld	r24, X+
   12756:	9c 91       	ld	r25, X
   12758:	89 2b       	or	r24, r25
   1275a:	11 f4       	brne	.+4      	; 0x12760 <_Z12Pub_Sub_DataPcPhjh+0xe4>
   1275c:	0c 94 75 a4 	jmp	0x148ea	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x226e>
   12760:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12764:	81 30       	cpi	r24, 0x01	; 1
   12766:	31 f4       	brne	.+12     	; 0x12774 <_Z12Pub_Sub_DataPcPhjh+0xf8>
   12768:	69 ed       	ldi	r22, 0xD9	; 217
   1276a:	7a e3       	ldi	r23, 0x3A	; 58
   1276c:	86 ec       	ldi	r24, 0xC6	; 198
   1276e:	94 e1       	ldi	r25, 0x14	; 20
   12770:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   12774:	8e 01       	movw	r16, r28
   12776:	0b 57       	subi	r16, 0x7B	; 123
   12778:	19 4f       	sbci	r17, 0xF9	; 249
   1277a:	88 e2       	ldi	r24, 0x28	; 40
   1277c:	f8 01       	movw	r30, r16
   1277e:	11 92       	st	Z+, r1
   12780:	8a 95       	dec	r24
   12782:	e9 f7       	brne	.-6      	; 0x1277e <_Z12Pub_Sub_DataPcPhjh+0x102>
   12784:	8e ec       	ldi	r24, 0xCE	; 206
   12786:	93 e1       	ldi	r25, 0x13	; 19
   12788:	9f 93       	push	r25
   1278a:	8f 93       	push	r24
   1278c:	8e ec       	ldi	r24, 0xCE	; 206
   1278e:	95 e0       	ldi	r25, 0x05	; 5
   12790:	9f 93       	push	r25
   12792:	8f 93       	push	r24
   12794:	1f 93       	push	r17
   12796:	0f 93       	push	r16
   12798:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   1279c:	ca 54       	subi	r28, 0x4A	; 74
   1279e:	d9 4f       	sbci	r29, 0xF9	; 249
   127a0:	68 81       	ld	r22, Y
   127a2:	79 81       	ldd	r23, Y+1	; 0x01
   127a4:	c6 5b       	subi	r28, 0xB6	; 182
   127a6:	d6 40       	sbci	r29, 0x06	; 6
   127a8:	c8 01       	movw	r24, r16
   127aa:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   127ae:	0f 90       	pop	r0
   127b0:	0f 90       	pop	r0
   127b2:	0f 90       	pop	r0
   127b4:	0f 90       	pop	r0
   127b6:	0f 90       	pop	r0
   127b8:	0f 90       	pop	r0
   127ba:	89 2b       	or	r24, r25
   127bc:	31 f5       	brne	.+76     	; 0x1280a <_Z12Pub_Sub_DataPcPhjh+0x18e>
   127be:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   127c2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   127c6:	81 30       	cpi	r24, 0x01	; 1
   127c8:	51 f4       	brne	.+20     	; 0x127de <_Z12Pub_Sub_DataPcPhjh+0x162>
   127ca:	6d ea       	ldi	r22, 0xAD	; 173
   127cc:	7a e3       	ldi	r23, 0x3A	; 58
   127ce:	86 ec       	ldi	r24, 0xC6	; 198
   127d0:	94 e1       	ldi	r25, 0x14	; 20
   127d2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   127d6:	86 ec       	ldi	r24, 0xC6	; 198
   127d8:	94 e1       	ldi	r25, 0x14	; 20
   127da:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   127de:	81 e0       	ldi	r24, 0x01	; 1
   127e0:	80 93 1f 14 	sts	0x141F, r24	; 0x80141f <_sRuble_Parameters+0x71>
   127e4:	c3 55       	subi	r28, 0x53	; 83
   127e6:	d9 4f       	sbci	r29, 0xF9	; 249
   127e8:	88 83       	st	Y, r24
   127ea:	cd 5a       	subi	r28, 0xAD	; 173
   127ec:	d6 40       	sbci	r29, 0x06	; 6
   127ee:	be 01       	movw	r22, r28
   127f0:	63 55       	subi	r22, 0x53	; 83
   127f2:	79 4f       	sbci	r23, 0xF9	; 249
   127f4:	84 ef       	ldi	r24, 0xF4	; 244
   127f6:	94 e0       	ldi	r25, 0x04	; 4
   127f8:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   127fc:	f1 e0       	ldi	r31, 0x01	; 1
   127fe:	c0 55       	subi	r28, 0x50	; 80
   12800:	d9 4f       	sbci	r29, 0xF9	; 249
   12802:	f8 83       	st	Y, r31
   12804:	c0 5b       	subi	r28, 0xB0	; 176
   12806:	d6 40       	sbci	r29, 0x06	; 6
   12808:	05 c0       	rjmp	.+10     	; 0x12814 <_Z12Pub_Sub_DataPcPhjh+0x198>
   1280a:	c0 55       	subi	r28, 0x50	; 80
   1280c:	d9 4f       	sbci	r29, 0xF9	; 249
   1280e:	18 82       	st	Y, r1
   12810:	c0 5b       	subi	r28, 0xB0	; 176
   12812:	d6 40       	sbci	r29, 0x06	; 6
   12814:	88 e2       	ldi	r24, 0x28	; 40
   12816:	d8 01       	movw	r26, r16
   12818:	1d 92       	st	X+, r1
   1281a:	8a 95       	dec	r24
   1281c:	e9 f7       	brne	.-6      	; 0x12818 <_Z12Pub_Sub_DataPcPhjh+0x19c>
   1281e:	8e ec       	ldi	r24, 0xCE	; 206
   12820:	93 e1       	ldi	r25, 0x13	; 19
   12822:	9f 93       	push	r25
   12824:	8f 93       	push	r24
   12826:	86 ee       	ldi	r24, 0xE6	; 230
   12828:	95 e0       	ldi	r25, 0x05	; 5
   1282a:	9f 93       	push	r25
   1282c:	8f 93       	push	r24
   1282e:	1f 93       	push	r17
   12830:	0f 93       	push	r16
   12832:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   12836:	ca 54       	subi	r28, 0x4A	; 74
   12838:	d9 4f       	sbci	r29, 0xF9	; 249
   1283a:	68 81       	ld	r22, Y
   1283c:	79 81       	ldd	r23, Y+1	; 0x01
   1283e:	c6 5b       	subi	r28, 0xB6	; 182
   12840:	d6 40       	sbci	r29, 0x06	; 6
   12842:	c8 01       	movw	r24, r16
   12844:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   12848:	0f 90       	pop	r0
   1284a:	0f 90       	pop	r0
   1284c:	0f 90       	pop	r0
   1284e:	0f 90       	pop	r0
   12850:	0f 90       	pop	r0
   12852:	0f 90       	pop	r0
   12854:	89 2b       	or	r24, r25
   12856:	09 f0       	breq	.+2      	; 0x1285a <_Z12Pub_Sub_DataPcPhjh+0x1de>
   12858:	bd c0       	rjmp	.+378    	; 0x129d4 <_Z12Pub_Sub_DataPcPhjh+0x358>
   1285a:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   1285e:	86 34       	cpi	r24, 0x46	; 70
   12860:	10 f4       	brcc	.+4      	; 0x12866 <_Z12Pub_Sub_DataPcPhjh+0x1ea>
   12862:	0c 94 75 a4 	jmp	0x148ea	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x226e>
   12866:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   1286a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1286e:	81 30       	cpi	r24, 0x01	; 1
   12870:	51 f4       	brne	.+20     	; 0x12886 <_Z12Pub_Sub_DataPcPhjh+0x20a>
   12872:	67 e9       	ldi	r22, 0x97	; 151
   12874:	7a e3       	ldi	r23, 0x3A	; 58
   12876:	86 ec       	ldi	r24, 0xC6	; 198
   12878:	94 e1       	ldi	r25, 0x14	; 20
   1287a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1287e:	86 ec       	ldi	r24, 0xC6	; 198
   12880:	94 e1       	ldi	r25, 0x14	; 20
   12882:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12886:	80 91 71 14 	lds	r24, 0x1471	; 0x801471 <_sRuble_Parameters+0xc3>
   1288a:	81 30       	cpi	r24, 0x01	; 1
   1288c:	09 f4       	brne	.+2      	; 0x12890 <_Z12Pub_Sub_DataPcPhjh+0x214>
   1288e:	8e c0       	rjmp	.+284    	; 0x129ac <_Z12Pub_Sub_DataPcPhjh+0x330>
   12890:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   12894:	82 30       	cpi	r24, 0x02	; 2
   12896:	09 f4       	brne	.+2      	; 0x1289a <_Z12Pub_Sub_DataPcPhjh+0x21e>
   12898:	90 c0       	rjmp	.+288    	; 0x129ba <_Z12Pub_Sub_DataPcPhjh+0x33e>
   1289a:	84 30       	cpi	r24, 0x04	; 4
   1289c:	09 f4       	brne	.+2      	; 0x128a0 <_Z12Pub_Sub_DataPcPhjh+0x224>
   1289e:	94 c0       	rjmp	.+296    	; 0x129c8 <_Z12Pub_Sub_DataPcPhjh+0x34c>
   128a0:	63 e9       	ldi	r22, 0x93	; 147
   128a2:	7a e3       	ldi	r23, 0x3A	; 58
   128a4:	c2 01       	movw	r24, r4
   128a6:	c7 d9       	rcall	.-3186   	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   128a8:	88 23       	and	r24, r24
   128aa:	09 f4       	brne	.+2      	; 0x128ae <_Z12Pub_Sub_DataPcPhjh+0x232>
   128ac:	76 c0       	rjmp	.+236    	; 0x1299a <_Z12Pub_Sub_DataPcPhjh+0x31e>
   128ae:	8f 30       	cpi	r24, 0x0F	; 15
   128b0:	98 f4       	brcc	.+38     	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   128b2:	28 2f       	mov	r18, r24
   128b4:	30 e0       	ldi	r19, 0x00	; 0
   128b6:	21 50       	subi	r18, 0x01	; 1
   128b8:	31 09       	sbc	r19, r1
   128ba:	96 e0       	ldi	r25, 0x06	; 6
   128bc:	92 9f       	mul	r25, r18
   128be:	f0 01       	movw	r30, r0
   128c0:	93 9f       	mul	r25, r19
   128c2:	f0 0d       	add	r31, r0
   128c4:	11 24       	eor	r1, r1
   128c6:	e2 5b       	subi	r30, 0xB2	; 178
   128c8:	f2 4f       	sbci	r31, 0xF2	; 242
   128ca:	90 81       	ld	r25, Z
   128cc:	99 23       	and	r25, r25
   128ce:	21 f0       	breq	.+8      	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   128d0:	80 93 65 14 	sts	0x1465, r24	; 0x801465 <_sRuble_Parameters+0xb7>
   128d4:	81 30       	cpi	r24, 0x01	; 1
   128d6:	61 f4       	brne	.+24     	; 0x128f0 <_Z12Pub_Sub_DataPcPhjh+0x274>
   128d8:	84 ed       	ldi	r24, 0xD4	; 212
   128da:	93 e0       	ldi	r25, 0x03	; 3
   128dc:	e0 ed       	ldi	r30, 0xD0	; 208
   128de:	ff e0       	ldi	r31, 0x0F	; 15
   128e0:	df 01       	movw	r26, r30
   128e2:	9c 01       	movw	r18, r24
   128e4:	1d 92       	st	X+, r1
   128e6:	21 50       	subi	r18, 0x01	; 1
   128e8:	30 40       	sbci	r19, 0x00	; 0
   128ea:	e1 f7       	brne	.-8      	; 0x128e4 <_Z12Pub_Sub_DataPcPhjh+0x268>
   128ec:	0c 94 75 a4 	jmp	0x148ea	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x226e>
   128f0:	61 e9       	ldi	r22, 0x91	; 145
   128f2:	7a e3       	ldi	r23, 0x3A	; 58
   128f4:	c2 01       	movw	r24, r4
   128f6:	34 d9       	rcall	.-3480   	; 0x11b60 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   128f8:	2c e3       	ldi	r18, 0x3C	; 60
   128fa:	ac 01       	movw	r20, r24
   128fc:	24 9f       	mul	r18, r20
   128fe:	c0 01       	movw	r24, r0
   12900:	25 9f       	mul	r18, r21
   12902:	90 0d       	add	r25, r0
   12904:	11 24       	eor	r1, r1
   12906:	90 93 c5 13 	sts	0x13C5, r25	; 0x8013c5 <_sRuble_Parameters+0x17>
   1290a:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
   1290e:	83 e0       	ldi	r24, 0x03	; 3
   12910:	80 93 d7 13 	sts	0x13D7, r24	; 0x8013d7 <_sRuble_Parameters+0x29>
   12914:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12918:	81 30       	cpi	r24, 0x01	; 1
   1291a:	31 f5       	brne	.+76     	; 0x12968 <_Z12Pub_Sub_DataPcPhjh+0x2ec>
   1291c:	62 e8       	ldi	r22, 0x82	; 130
   1291e:	7a e3       	ldi	r23, 0x3A	; 58
   12920:	86 ec       	ldi	r24, 0xC6	; 198
   12922:	94 e1       	ldi	r25, 0x14	; 20
   12924:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12928:	86 ec       	ldi	r24, 0xC6	; 198
   1292a:	94 e1       	ldi	r25, 0x14	; 20
   1292c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12930:	60 91 c4 13 	lds	r22, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   12934:	70 91 c5 13 	lds	r23, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   12938:	4a e0       	ldi	r20, 0x0A	; 10
   1293a:	50 e0       	ldi	r21, 0x00	; 0
   1293c:	86 ec       	ldi	r24, 0xC6	; 198
   1293e:	94 e1       	ldi	r25, 0x14	; 20
   12940:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
   12944:	62 e7       	ldi	r22, 0x72	; 114
   12946:	7a e3       	ldi	r23, 0x3A	; 58
   12948:	86 ec       	ldi	r24, 0xC6	; 198
   1294a:	94 e1       	ldi	r25, 0x14	; 20
   1294c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12950:	86 ec       	ldi	r24, 0xC6	; 198
   12952:	94 e1       	ldi	r25, 0x14	; 20
   12954:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12958:	4a e0       	ldi	r20, 0x0A	; 10
   1295a:	50 e0       	ldi	r21, 0x00	; 0
   1295c:	60 91 65 14 	lds	r22, 0x1465	; 0x801465 <_sRuble_Parameters+0xb7>
   12960:	86 ec       	ldi	r24, 0xC6	; 198
   12962:	94 e1       	ldi	r25, 0x14	; 20
   12964:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   12968:	10 92 cd 13 	sts	0x13CD, r1	; 0x8013cd <_sRuble_Parameters+0x1f>
   1296c:	10 92 cc 13 	sts	0x13CC, r1	; 0x8013cc <_sRuble_Parameters+0x1e>
   12970:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
   12974:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
   12978:	88 e9       	ldi	r24, 0x98	; 152
   1297a:	9c e0       	ldi	r25, 0x0C	; 12
   1297c:	0e 94 23 86 	call	0x10c46	; 0x10c46 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   12980:	68 e9       	ldi	r22, 0x98	; 152
   12982:	74 e1       	ldi	r23, 0x14	; 20
   12984:	8b ea       	ldi	r24, 0xAB	; 171
   12986:	9e e0       	ldi	r25, 0x0E	; 14
   12988:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1298c:	51 e0       	ldi	r21, 0x01	; 1
   1298e:	c0 55       	subi	r28, 0x50	; 80
   12990:	d9 4f       	sbci	r29, 0xF9	; 249
   12992:	58 83       	st	Y, r21
   12994:	c0 5b       	subi	r28, 0xB0	; 176
   12996:	d6 40       	sbci	r29, 0x06	; 6
   12998:	1d c0       	rjmp	.+58     	; 0x129d4 <_Z12Pub_Sub_DataPcPhjh+0x358>
   1299a:	10 92 65 14 	sts	0x1465, r1	; 0x801465 <_sRuble_Parameters+0xb7>
   1299e:	81 e0       	ldi	r24, 0x01	; 1
   129a0:	c0 55       	subi	r28, 0x50	; 80
   129a2:	d9 4f       	sbci	r29, 0xF9	; 249
   129a4:	88 83       	st	Y, r24
   129a6:	c0 5b       	subi	r28, 0xB0	; 176
   129a8:	d6 40       	sbci	r29, 0x06	; 6
   129aa:	14 c0       	rjmp	.+40     	; 0x129d4 <_Z12Pub_Sub_DataPcPhjh+0x358>
   129ac:	91 e0       	ldi	r25, 0x01	; 1
   129ae:	c0 55       	subi	r28, 0x50	; 80
   129b0:	d9 4f       	sbci	r29, 0xF9	; 249
   129b2:	98 83       	st	Y, r25
   129b4:	c0 5b       	subi	r28, 0xB0	; 176
   129b6:	d6 40       	sbci	r29, 0x06	; 6
   129b8:	0d c0       	rjmp	.+26     	; 0x129d4 <_Z12Pub_Sub_DataPcPhjh+0x358>
   129ba:	a1 e0       	ldi	r26, 0x01	; 1
   129bc:	c0 55       	subi	r28, 0x50	; 80
   129be:	d9 4f       	sbci	r29, 0xF9	; 249
   129c0:	a8 83       	st	Y, r26
   129c2:	c0 5b       	subi	r28, 0xB0	; 176
   129c4:	d6 40       	sbci	r29, 0x06	; 6
   129c6:	06 c0       	rjmp	.+12     	; 0x129d4 <_Z12Pub_Sub_DataPcPhjh+0x358>
   129c8:	b1 e0       	ldi	r27, 0x01	; 1
   129ca:	c0 55       	subi	r28, 0x50	; 80
   129cc:	d9 4f       	sbci	r29, 0xF9	; 249
   129ce:	b8 83       	st	Y, r27
   129d0:	c0 5b       	subi	r28, 0xB0	; 176
   129d2:	d6 40       	sbci	r29, 0x06	; 6
   129d4:	88 e2       	ldi	r24, 0x28	; 40
   129d6:	f8 01       	movw	r30, r16
   129d8:	11 92       	st	Z+, r1
   129da:	8a 95       	dec	r24
   129dc:	e9 f7       	brne	.-6      	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x35c>
   129de:	8e ec       	ldi	r24, 0xCE	; 206
   129e0:	93 e1       	ldi	r25, 0x13	; 19
   129e2:	9f 93       	push	r25
   129e4:	8f 93       	push	r24
   129e6:	85 ef       	ldi	r24, 0xF5	; 245
   129e8:	95 e0       	ldi	r25, 0x05	; 5
   129ea:	9f 93       	push	r25
   129ec:	8f 93       	push	r24
   129ee:	1f 93       	push	r17
   129f0:	0f 93       	push	r16
   129f2:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   129f6:	ca 54       	subi	r28, 0x4A	; 74
   129f8:	d9 4f       	sbci	r29, 0xF9	; 249
   129fa:	68 81       	ld	r22, Y
   129fc:	79 81       	ldd	r23, Y+1	; 0x01
   129fe:	c6 5b       	subi	r28, 0xB6	; 182
   12a00:	d6 40       	sbci	r29, 0x06	; 6
   12a02:	c8 01       	movw	r24, r16
   12a04:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   12a08:	0f 90       	pop	r0
   12a0a:	0f 90       	pop	r0
   12a0c:	0f 90       	pop	r0
   12a0e:	0f 90       	pop	r0
   12a10:	0f 90       	pop	r0
   12a12:	0f 90       	pop	r0
   12a14:	89 2b       	or	r24, r25
   12a16:	e9 f4       	brne	.+58     	; 0x12a52 <_Z12Pub_Sub_DataPcPhjh+0x3d6>
   12a18:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12a1c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12a20:	81 30       	cpi	r24, 0x01	; 1
   12a22:	89 f4       	brne	.+34     	; 0x12a46 <_Z12Pub_Sub_DataPcPhjh+0x3ca>
   12a24:	60 e5       	ldi	r22, 0x50	; 80
   12a26:	7a e3       	ldi	r23, 0x3A	; 58
   12a28:	86 ec       	ldi	r24, 0xC6	; 198
   12a2a:	94 e1       	ldi	r25, 0x14	; 20
   12a2c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   12a30:	86 ec       	ldi	r24, 0xC6	; 198
   12a32:	94 e1       	ldi	r25, 0x14	; 20
   12a34:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12a38:	f1 e0       	ldi	r31, 0x01	; 1
   12a3a:	c0 55       	subi	r28, 0x50	; 80
   12a3c:	d9 4f       	sbci	r29, 0xF9	; 249
   12a3e:	f8 83       	st	Y, r31
   12a40:	c0 5b       	subi	r28, 0xB0	; 176
   12a42:	d6 40       	sbci	r29, 0x06	; 6
   12a44:	06 c0       	rjmp	.+12     	; 0x12a52 <_Z12Pub_Sub_DataPcPhjh+0x3d6>
   12a46:	21 e0       	ldi	r18, 0x01	; 1
   12a48:	c0 55       	subi	r28, 0x50	; 80
   12a4a:	d9 4f       	sbci	r29, 0xF9	; 249
   12a4c:	28 83       	st	Y, r18
   12a4e:	c0 5b       	subi	r28, 0xB0	; 176
   12a50:	d6 40       	sbci	r29, 0x06	; 6
   12a52:	88 e2       	ldi	r24, 0x28	; 40
   12a54:	d8 01       	movw	r26, r16
   12a56:	1d 92       	st	X+, r1
   12a58:	8a 95       	dec	r24
   12a5a:	e9 f7       	brne	.-6      	; 0x12a56 <_Z12Pub_Sub_DataPcPhjh+0x3da>
   12a5c:	8e ec       	ldi	r24, 0xCE	; 206
   12a5e:	93 e1       	ldi	r25, 0x13	; 19
   12a60:	9f 93       	push	r25
   12a62:	8f 93       	push	r24
   12a64:	83 eb       	ldi	r24, 0xB3	; 179
   12a66:	95 e0       	ldi	r25, 0x05	; 5
   12a68:	9f 93       	push	r25
   12a6a:	8f 93       	push	r24
   12a6c:	1f 93       	push	r17
   12a6e:	0f 93       	push	r16
   12a70:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   12a74:	ca 54       	subi	r28, 0x4A	; 74
   12a76:	d9 4f       	sbci	r29, 0xF9	; 249
   12a78:	68 81       	ld	r22, Y
   12a7a:	79 81       	ldd	r23, Y+1	; 0x01
   12a7c:	c6 5b       	subi	r28, 0xB6	; 182
   12a7e:	d6 40       	sbci	r29, 0x06	; 6
   12a80:	c8 01       	movw	r24, r16
   12a82:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   12a86:	0f 90       	pop	r0
   12a88:	0f 90       	pop	r0
   12a8a:	0f 90       	pop	r0
   12a8c:	0f 90       	pop	r0
   12a8e:	0f 90       	pop	r0
   12a90:	0f 90       	pop	r0
   12a92:	89 2b       	or	r24, r25
   12a94:	09 f0       	breq	.+2      	; 0x12a98 <_Z12Pub_Sub_DataPcPhjh+0x41c>
   12a96:	bc c6       	rjmp	.+3448   	; 0x13810 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   12a98:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12a9c:	6c e4       	ldi	r22, 0x4C	; 76
   12a9e:	7a e3       	ldi	r23, 0x3A	; 58
   12aa0:	c2 01       	movw	r24, r4
   12aa2:	c9 d8       	rcall	.-3694   	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12aa4:	98 2e       	mov	r9, r24
   12aa6:	b8 e6       	ldi	r27, 0x68	; 104
   12aa8:	8b 17       	cp	r24, r27
   12aaa:	11 f4       	brne	.+4      	; 0x12ab0 <_Z12Pub_Sub_DataPcPhjh+0x434>
   12aac:	0c 94 75 a4 	jmp	0x148ea	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x226e>
   12ab0:	ef ef       	ldi	r30, 0xFF	; 255
   12ab2:	e8 0f       	add	r30, r24
   12ab4:	c8 54       	subi	r28, 0x48	; 72
   12ab6:	d9 4f       	sbci	r29, 0xF9	; 249
   12ab8:	e8 83       	st	Y, r30
   12aba:	c8 5b       	subi	r28, 0xB8	; 184
   12abc:	d6 40       	sbci	r29, 0x06	; 6
   12abe:	e2 37       	cpi	r30, 0x72	; 114
   12ac0:	08 f0       	brcs	.+2      	; 0x12ac4 <_Z12Pub_Sub_DataPcPhjh+0x448>
   12ac2:	a6 c6       	rjmp	.+3404   	; 0x13810 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   12ac4:	fe e0       	ldi	r31, 0x0E	; 14
   12ac6:	f8 17       	cp	r31, r24
   12ac8:	60 f0       	brcs	.+24     	; 0x12ae2 <_Z12Pub_Sub_DataPcPhjh+0x466>
   12aca:	90 e0       	ldi	r25, 0x00	; 0
   12acc:	01 97       	sbiw	r24, 0x01	; 1
   12ace:	26 e0       	ldi	r18, 0x06	; 6
   12ad0:	28 9f       	mul	r18, r24
   12ad2:	f0 01       	movw	r30, r0
   12ad4:	29 9f       	mul	r18, r25
   12ad6:	f0 0d       	add	r31, r0
   12ad8:	11 24       	eor	r1, r1
   12ada:	e2 5b       	subi	r30, 0xB2	; 178
   12adc:	f2 4f       	sbci	r31, 0xF2	; 242
   12ade:	90 82       	st	Z, r9
   12ae0:	0f c0       	rjmp	.+30     	; 0x12b00 <_Z12Pub_Sub_DataPcPhjh+0x484>
   12ae2:	24 e6       	ldi	r18, 0x64	; 100
   12ae4:	28 17       	cp	r18, r24
   12ae6:	60 f4       	brcc	.+24     	; 0x12b00 <_Z12Pub_Sub_DataPcPhjh+0x484>
   12ae8:	90 e0       	ldi	r25, 0x00	; 0
   12aea:	85 56       	subi	r24, 0x65	; 101
   12aec:	91 09       	sbc	r25, r1
   12aee:	2b e1       	ldi	r18, 0x1B	; 27
   12af0:	28 9f       	mul	r18, r24
   12af2:	f0 01       	movw	r30, r0
   12af4:	29 9f       	mul	r18, r25
   12af6:	f0 0d       	add	r31, r0
   12af8:	11 24       	eor	r1, r1
   12afa:	e8 51       	subi	r30, 0x18	; 24
   12afc:	f2 4f       	sbci	r31, 0xF2	; 242
   12afe:	91 82       	std	Z+1, r9	; 0x01
   12b00:	3e 01       	movw	r6, r28
   12b02:	33 ea       	ldi	r19, 0xA3	; 163
   12b04:	63 1a       	sub	r6, r19
   12b06:	39 ef       	ldi	r19, 0xF9	; 249
   12b08:	73 0a       	sbc	r7, r19
   12b0a:	88 e0       	ldi	r24, 0x08	; 8
   12b0c:	d3 01       	movw	r26, r6
   12b0e:	e8 2f       	mov	r30, r24
   12b10:	1d 92       	st	X+, r1
   12b12:	ea 95       	dec	r30
   12b14:	e9 f7       	brne	.-6      	; 0x12b10 <_Z12Pub_Sub_DataPcPhjh+0x494>
   12b16:	53 01       	movw	r10, r6
   12b18:	f8 e0       	ldi	r31, 0x08	; 8
   12b1a:	af 0e       	add	r10, r31
   12b1c:	b1 1c       	adc	r11, r1
   12b1e:	d5 01       	movw	r26, r10
   12b20:	e8 2f       	mov	r30, r24
   12b22:	1d 92       	st	X+, r1
   12b24:	ea 95       	dec	r30
   12b26:	e9 f7       	brne	.-6      	; 0x12b22 <_Z12Pub_Sub_DataPcPhjh+0x4a6>
   12b28:	63 01       	movw	r12, r6
   12b2a:	f0 e1       	ldi	r31, 0x10	; 16
   12b2c:	cf 0e       	add	r12, r31
   12b2e:	d1 1c       	adc	r13, r1
   12b30:	d6 01       	movw	r26, r12
   12b32:	e8 2f       	mov	r30, r24
   12b34:	1d 92       	st	X+, r1
   12b36:	ea 95       	dec	r30
   12b38:	e9 f7       	brne	.-6      	; 0x12b34 <_Z12Pub_Sub_DataPcPhjh+0x4b8>
   12b3a:	73 01       	movw	r14, r6
   12b3c:	f8 e1       	ldi	r31, 0x18	; 24
   12b3e:	ef 0e       	add	r14, r31
   12b40:	f1 1c       	adc	r15, r1
   12b42:	d7 01       	movw	r26, r14
   12b44:	e8 2f       	mov	r30, r24
   12b46:	1d 92       	st	X+, r1
   12b48:	ea 95       	dec	r30
   12b4a:	e9 f7       	brne	.-6      	; 0x12b46 <_Z12Pub_Sub_DataPcPhjh+0x4ca>
   12b4c:	83 01       	movw	r16, r6
   12b4e:	00 5e       	subi	r16, 0xE0	; 224
   12b50:	1f 4f       	sbci	r17, 0xFF	; 255
   12b52:	d8 01       	movw	r26, r16
   12b54:	1d 92       	st	X+, r1
   12b56:	8a 95       	dec	r24
   12b58:	e9 f7       	brne	.-6      	; 0x12b54 <_Z12Pub_Sub_DataPcPhjh+0x4d8>
   12b5a:	65 e4       	ldi	r22, 0x45	; 69
   12b5c:	7a e3       	ldi	r23, 0x3A	; 58
   12b5e:	c2 01       	movw	r24, r4
   12b60:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12b64:	bc 01       	movw	r22, r24
   12b66:	c3 01       	movw	r24, r6
   12b68:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   12b6c:	6e e3       	ldi	r22, 0x3E	; 62
   12b6e:	7a e3       	ldi	r23, 0x3A	; 58
   12b70:	c2 01       	movw	r24, r4
   12b72:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12b76:	bc 01       	movw	r22, r24
   12b78:	c5 01       	movw	r24, r10
   12b7a:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   12b7e:	67 e3       	ldi	r22, 0x37	; 55
   12b80:	7a e3       	ldi	r23, 0x3A	; 58
   12b82:	c2 01       	movw	r24, r4
   12b84:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12b88:	bc 01       	movw	r22, r24
   12b8a:	c6 01       	movw	r24, r12
   12b8c:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   12b90:	60 e3       	ldi	r22, 0x30	; 48
   12b92:	7a e3       	ldi	r23, 0x3A	; 58
   12b94:	c2 01       	movw	r24, r4
   12b96:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12b9a:	bc 01       	movw	r22, r24
   12b9c:	c7 01       	movw	r24, r14
   12b9e:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   12ba2:	69 e2       	ldi	r22, 0x29	; 41
   12ba4:	7a e3       	ldi	r23, 0x3A	; 58
   12ba6:	c2 01       	movw	r24, r4
   12ba8:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12bac:	bc 01       	movw	r22, r24
   12bae:	c8 01       	movw	r24, r16
   12bb0:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   12bb4:	be e0       	ldi	r27, 0x0E	; 14
   12bb6:	b9 15       	cp	r27, r9
   12bb8:	98 f1       	brcs	.+102    	; 0x12c20 <_Z12Pub_Sub_DataPcPhjh+0x5a4>
   12bba:	89 2d       	mov	r24, r9
   12bbc:	90 e0       	ldi	r25, 0x00	; 0
   12bbe:	01 97       	sbiw	r24, 0x01	; 1
   12bc0:	26 e0       	ldi	r18, 0x06	; 6
   12bc2:	28 9f       	mul	r18, r24
   12bc4:	f0 01       	movw	r30, r0
   12bc6:	29 9f       	mul	r18, r25
   12bc8:	f0 0d       	add	r31, r0
   12bca:	11 24       	eor	r1, r1
   12bcc:	e1 5b       	subi	r30, 0xB1	; 177
   12bce:	f2 4f       	sbci	r31, 0xF2	; 242
   12bd0:	85 e0       	ldi	r24, 0x05	; 5
   12bd2:	df 01       	movw	r26, r30
   12bd4:	1d 92       	st	X+, r1
   12bd6:	8a 95       	dec	r24
   12bd8:	e9 f7       	brne	.-6      	; 0x12bd4 <_Z12Pub_Sub_DataPcPhjh+0x558>
   12bda:	13 01       	movw	r2, r6
   12bdc:	26 e0       	ldi	r18, 0x06	; 6
   12bde:	92 9e       	mul	r9, r18
   12be0:	f0 01       	movw	r30, r0
   12be2:	11 24       	eor	r1, r1
   12be4:	c5 54       	subi	r28, 0x45	; 69
   12be6:	d9 4f       	sbci	r29, 0xF9	; 249
   12be8:	f9 83       	std	Y+1, r31	; 0x01
   12bea:	e8 83       	st	Y, r30
   12bec:	cb 5b       	subi	r28, 0xBB	; 187
   12bee:	d6 40       	sbci	r29, 0x06	; 6
   12bf0:	e7 5b       	subi	r30, 0xB7	; 183
   12bf2:	f2 4f       	sbci	r31, 0xF2	; 242
   12bf4:	7f 01       	movw	r14, r30
   12bf6:	3b e1       	ldi	r19, 0x1B	; 27
   12bf8:	93 9e       	mul	r9, r19
   12bfa:	c0 01       	movw	r24, r0
   12bfc:	11 24       	eor	r1, r1
   12bfe:	ac 01       	movw	r20, r24
   12c00:	4a 5b       	subi	r20, 0xBA	; 186
   12c02:	5c 4f       	sbci	r21, 0xFC	; 252
   12c04:	6a 01       	movw	r12, r20
   12c06:	c3 01       	movw	r24, r6
   12c08:	88 96       	adiw	r24, 0x28	; 40
   12c0a:	c3 54       	subi	r28, 0x43	; 67
   12c0c:	d9 4f       	sbci	r29, 0xF9	; 249
   12c0e:	99 83       	std	Y+1, r25	; 0x01
   12c10:	88 83       	st	Y, r24
   12c12:	cd 5b       	subi	r28, 0xBD	; 189
   12c14:	d6 40       	sbci	r29, 0x06	; 6
   12c16:	96 e6       	ldi	r25, 0x66	; 102
   12c18:	89 2e       	mov	r8, r25
   12c1a:	25 e6       	ldi	r18, 0x65	; 101
   12c1c:	a2 2e       	mov	r10, r18
   12c1e:	3a c0       	rjmp	.+116    	; 0x12c94 <_Z12Pub_Sub_DataPcPhjh+0x618>
   12c20:	94 e6       	ldi	r25, 0x64	; 100
   12c22:	99 15       	cp	r25, r9
   12c24:	d0 f6       	brcc	.-76     	; 0x12bda <_Z12Pub_Sub_DataPcPhjh+0x55e>
   12c26:	89 2d       	mov	r24, r9
   12c28:	90 e0       	ldi	r25, 0x00	; 0
   12c2a:	85 56       	subi	r24, 0x65	; 101
   12c2c:	91 09       	sbc	r25, r1
   12c2e:	2b e1       	ldi	r18, 0x1B	; 27
   12c30:	28 9f       	mul	r18, r24
   12c32:	f0 01       	movw	r30, r0
   12c34:	29 9f       	mul	r18, r25
   12c36:	f0 0d       	add	r31, r0
   12c38:	11 24       	eor	r1, r1
   12c3a:	e3 51       	subi	r30, 0x13	; 19
   12c3c:	f2 4f       	sbci	r31, 0xF2	; 242
   12c3e:	c8 cf       	rjmp	.-112    	; 0x12bd0 <_Z12Pub_Sub_DataPcPhjh+0x554>
   12c40:	90 35       	cpi	r25, 0x50	; 80
   12c42:	09 f4       	brne	.+2      	; 0x12c46 <_Z12Pub_Sub_DataPcPhjh+0x5ca>
   12c44:	44 c2       	rjmp	.+1160   	; 0x130ce <_Z12Pub_Sub_DataPcPhjh+0xa52>
   12c46:	80 33       	cpi	r24, 0x30	; 48
   12c48:	c9 f1       	breq	.+114    	; 0x12cbc <_Z12Pub_Sub_DataPcPhjh+0x640>
   12c4a:	88 23       	and	r24, r24
   12c4c:	b9 f1       	breq	.+110    	; 0x12cbc <_Z12Pub_Sub_DataPcPhjh+0x640>
   12c4e:	80 53       	subi	r24, 0x30	; 48
   12c50:	91 81       	ldd	r25, Z+1	; 0x01
   12c52:	99 23       	and	r25, r25
   12c54:	31 f0       	breq	.+12     	; 0x12c62 <_Z12Pub_Sub_DataPcPhjh+0x5e6>
   12c56:	90 53       	subi	r25, 0x30	; 48
   12c58:	fa e0       	ldi	r31, 0x0A	; 10
   12c5a:	8f 9f       	mul	r24, r31
   12c5c:	90 0d       	add	r25, r0
   12c5e:	11 24       	eor	r1, r1
   12c60:	89 2f       	mov	r24, r25
   12c62:	2e e0       	ldi	r18, 0x0E	; 14
   12c64:	29 15       	cp	r18, r9
   12c66:	e8 f4       	brcc	.+58     	; 0x12ca2 <_Z12Pub_Sub_DataPcPhjh+0x626>
   12c68:	f4 e6       	ldi	r31, 0x64	; 100
   12c6a:	f9 15       	cp	r31, r9
   12c6c:	08 f1       	brcs	.+66     	; 0x12cb0 <_Z12Pub_Sub_DataPcPhjh+0x634>
   12c6e:	38 e0       	ldi	r19, 0x08	; 8
   12c70:	23 0e       	add	r2, r19
   12c72:	31 1c       	adc	r3, r1
   12c74:	4f ef       	ldi	r20, 0xFF	; 255
   12c76:	e4 1a       	sub	r14, r20
   12c78:	f4 0a       	sbc	r15, r20
   12c7a:	5f ef       	ldi	r21, 0xFF	; 255
   12c7c:	c5 1a       	sub	r12, r21
   12c7e:	d5 0a       	sbc	r13, r21
   12c80:	c3 54       	subi	r28, 0x43	; 67
   12c82:	d9 4f       	sbci	r29, 0xF9	; 249
   12c84:	88 81       	ld	r24, Y
   12c86:	99 81       	ldd	r25, Y+1	; 0x01
   12c88:	cd 5b       	subi	r28, 0xBD	; 189
   12c8a:	d6 40       	sbci	r29, 0x06	; 6
   12c8c:	28 16       	cp	r2, r24
   12c8e:	39 06       	cpc	r3, r25
   12c90:	09 f4       	brne	.+2      	; 0x12c94 <_Z12Pub_Sub_DataPcPhjh+0x618>
   12c92:	83 c3       	rjmp	.+1798   	; 0x1339a <_Z12Pub_Sub_DataPcPhjh+0xd1e>
   12c94:	f1 01       	movw	r30, r2
   12c96:	80 81       	ld	r24, Z
   12c98:	98 2f       	mov	r25, r24
   12c9a:	9f 7d       	andi	r25, 0xDF	; 223
   12c9c:	96 35       	cpi	r25, 0x56	; 86
   12c9e:	81 f6       	brne	.-96     	; 0x12c40 <_Z12Pub_Sub_DataPcPhjh+0x5c4>
   12ca0:	19 c0       	rjmp	.+50     	; 0x12cd4 <_Z12Pub_Sub_DataPcPhjh+0x658>
   12ca2:	8e 5e       	subi	r24, 0xEE	; 238
   12ca4:	8b 32       	cpi	r24, 0x2B	; 43
   12ca6:	10 f4       	brcc	.+4      	; 0x12cac <_Z12Pub_Sub_DataPcPhjh+0x630>
   12ca8:	d7 01       	movw	r26, r14
   12caa:	06 c0       	rjmp	.+12     	; 0x12cb8 <_Z12Pub_Sub_DataPcPhjh+0x63c>
   12cac:	f7 01       	movw	r30, r14
   12cae:	10 c0       	rjmp	.+32     	; 0x12cd0 <_Z12Pub_Sub_DataPcPhjh+0x654>
   12cb0:	8e 5e       	subi	r24, 0xEE	; 238
   12cb2:	8b 32       	cpi	r24, 0x2B	; 43
   12cb4:	60 f4       	brcc	.+24     	; 0x12cce <_Z12Pub_Sub_DataPcPhjh+0x652>
   12cb6:	d6 01       	movw	r26, r12
   12cb8:	8c 93       	st	X, r24
   12cba:	d9 cf       	rjmp	.-78     	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12cbc:	fe e0       	ldi	r31, 0x0E	; 14
   12cbe:	f9 15       	cp	r31, r9
   12cc0:	18 f0       	brcs	.+6      	; 0x12cc8 <_Z12Pub_Sub_DataPcPhjh+0x64c>
   12cc2:	d7 01       	movw	r26, r14
   12cc4:	1c 92       	st	X, r1
   12cc6:	d3 cf       	rjmp	.-90     	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12cc8:	b4 e6       	ldi	r27, 0x64	; 100
   12cca:	b9 15       	cp	r27, r9
   12ccc:	80 f6       	brcc	.-96     	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12cce:	f6 01       	movw	r30, r12
   12cd0:	10 82       	st	Z, r1
   12cd2:	cd cf       	rjmp	.-102    	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12cd4:	4e ea       	ldi	r20, 0xAE	; 174
   12cd6:	53 e1       	ldi	r21, 0x13	; 19
   12cd8:	80 e0       	ldi	r24, 0x00	; 0
   12cda:	90 e0       	ldi	r25, 0x00	; 0
   12cdc:	68 2f       	mov	r22, r24
   12cde:	20 e0       	ldi	r18, 0x00	; 0
   12ce0:	30 e0       	ldi	r19, 0x00	; 0
   12ce2:	70 e0       	ldi	r23, 0x00	; 0
   12ce4:	f9 01       	movw	r30, r18
   12ce6:	ec 58       	subi	r30, 0x8C	; 140
   12ce8:	ff 4f       	sbci	r31, 0xFF	; 255
   12cea:	e4 0f       	add	r30, r20
   12cec:	f5 1f       	adc	r31, r21
   12cee:	a0 81       	ld	r26, Z
   12cf0:	f1 01       	movw	r30, r2
   12cf2:	e2 0f       	add	r30, r18
   12cf4:	f3 1f       	adc	r31, r19
   12cf6:	e0 81       	ld	r30, Z
   12cf8:	ae 13       	cpse	r26, r30
   12cfa:	01 c0       	rjmp	.+2      	; 0x12cfe <_Z12Pub_Sub_DataPcPhjh+0x682>
   12cfc:	7f 5f       	subi	r23, 0xFF	; 255
   12cfe:	2f 5f       	subi	r18, 0xFF	; 255
   12d00:	3f 4f       	sbci	r19, 0xFF	; 255
   12d02:	26 30       	cpi	r18, 0x06	; 6
   12d04:	31 05       	cpc	r19, r1
   12d06:	71 f7       	brne	.-36     	; 0x12ce4 <_Z12Pub_Sub_DataPcPhjh+0x668>
   12d08:	76 30       	cpi	r23, 0x06	; 6
   12d0a:	09 f0       	breq	.+2      	; 0x12d0e <_Z12Pub_Sub_DataPcPhjh+0x692>
   12d0c:	7a c0       	rjmp	.+244    	; 0x12e02 <_Z12Pub_Sub_DataPcPhjh+0x786>
   12d0e:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12d12:	fe e0       	ldi	r31, 0x0E	; 14
   12d14:	f9 15       	cp	r31, r9
   12d16:	70 f1       	brcs	.+92     	; 0x12d74 <_Z12Pub_Sub_DataPcPhjh+0x6f8>
   12d18:	d1 01       	movw	r26, r2
   12d1a:	17 96       	adiw	r26, 0x07	; 7
   12d1c:	3c 91       	ld	r19, X
   12d1e:	32 33       	cpi	r19, 0x32	; 50
   12d20:	89 f0       	breq	.+34     	; 0x12d44 <_Z12Pub_Sub_DataPcPhjh+0x6c8>
   12d22:	33 33       	cpi	r19, 0x33	; 51
   12d24:	d9 f0       	breq	.+54     	; 0x12d5c <_Z12Pub_Sub_DataPcPhjh+0x6e0>
   12d26:	31 33       	cpi	r19, 0x31	; 49
   12d28:	09 f0       	breq	.+2      	; 0x12d2c <_Z12Pub_Sub_DataPcPhjh+0x6b0>
   12d2a:	5c c0       	rjmp	.+184    	; 0x12de4 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12d2c:	86 2f       	mov	r24, r22
   12d2e:	88 0f       	add	r24, r24
   12d30:	68 0f       	add	r22, r24
   12d32:	6f 5f       	subi	r22, 0xFF	; 255
   12d34:	f7 01       	movw	r30, r14
   12d36:	60 83       	st	Z, r22
   12d38:	21 30       	cpi	r18, 0x01	; 1
   12d3a:	09 f0       	breq	.+2      	; 0x12d3e <_Z12Pub_Sub_DataPcPhjh+0x6c2>
   12d3c:	69 c0       	rjmp	.+210    	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12d3e:	6e e0       	ldi	r22, 0x0E	; 14
   12d40:	7a e3       	ldi	r23, 0x3A	; 58
   12d42:	44 c0       	rjmp	.+136    	; 0x12dcc <_Z12Pub_Sub_DataPcPhjh+0x750>
   12d44:	86 2f       	mov	r24, r22
   12d46:	88 0f       	add	r24, r24
   12d48:	68 0f       	add	r22, r24
   12d4a:	6e 5f       	subi	r22, 0xFE	; 254
   12d4c:	d7 01       	movw	r26, r14
   12d4e:	6c 93       	st	X, r22
   12d50:	21 30       	cpi	r18, 0x01	; 1
   12d52:	09 f0       	breq	.+2      	; 0x12d56 <_Z12Pub_Sub_DataPcPhjh+0x6da>
   12d54:	5d c0       	rjmp	.+186    	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12d56:	63 ef       	ldi	r22, 0xF3	; 243
   12d58:	79 e3       	ldi	r23, 0x39	; 57
   12d5a:	38 c0       	rjmp	.+112    	; 0x12dcc <_Z12Pub_Sub_DataPcPhjh+0x750>
   12d5c:	01 96       	adiw	r24, 0x01	; 1
   12d5e:	98 2f       	mov	r25, r24
   12d60:	99 0f       	add	r25, r25
   12d62:	89 0f       	add	r24, r25
   12d64:	f7 01       	movw	r30, r14
   12d66:	80 83       	st	Z, r24
   12d68:	21 30       	cpi	r18, 0x01	; 1
   12d6a:	09 f0       	breq	.+2      	; 0x12d6e <_Z12Pub_Sub_DataPcPhjh+0x6f2>
   12d6c:	51 c0       	rjmp	.+162    	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12d6e:	68 ed       	ldi	r22, 0xD8	; 216
   12d70:	79 e3       	ldi	r23, 0x39	; 57
   12d72:	2c c0       	rjmp	.+88     	; 0x12dcc <_Z12Pub_Sub_DataPcPhjh+0x750>
   12d74:	f4 e6       	ldi	r31, 0x64	; 100
   12d76:	f9 15       	cp	r31, r9
   12d78:	a8 f5       	brcc	.+106    	; 0x12de4 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12d7a:	d1 01       	movw	r26, r2
   12d7c:	17 96       	adiw	r26, 0x07	; 7
   12d7e:	3c 91       	ld	r19, X
   12d80:	32 33       	cpi	r19, 0x32	; 50
   12d82:	79 f0       	breq	.+30     	; 0x12da2 <_Z12Pub_Sub_DataPcPhjh+0x726>
   12d84:	33 33       	cpi	r19, 0x33	; 51
   12d86:	c1 f0       	breq	.+48     	; 0x12db8 <_Z12Pub_Sub_DataPcPhjh+0x73c>
   12d88:	31 33       	cpi	r19, 0x31	; 49
   12d8a:	61 f5       	brne	.+88     	; 0x12de4 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12d8c:	86 2f       	mov	r24, r22
   12d8e:	88 0f       	add	r24, r24
   12d90:	68 0f       	add	r22, r24
   12d92:	6f 5f       	subi	r22, 0xFF	; 255
   12d94:	f6 01       	movw	r30, r12
   12d96:	60 83       	st	Z, r22
   12d98:	21 30       	cpi	r18, 0x01	; 1
   12d9a:	d1 f5       	brne	.+116    	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12d9c:	6d eb       	ldi	r22, 0xBD	; 189
   12d9e:	79 e3       	ldi	r23, 0x39	; 57
   12da0:	15 c0       	rjmp	.+42     	; 0x12dcc <_Z12Pub_Sub_DataPcPhjh+0x750>
   12da2:	86 2f       	mov	r24, r22
   12da4:	88 0f       	add	r24, r24
   12da6:	68 0f       	add	r22, r24
   12da8:	6e 5f       	subi	r22, 0xFE	; 254
   12daa:	d6 01       	movw	r26, r12
   12dac:	6c 93       	st	X, r22
   12dae:	21 30       	cpi	r18, 0x01	; 1
   12db0:	79 f5       	brne	.+94     	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12db2:	62 ea       	ldi	r22, 0xA2	; 162
   12db4:	79 e3       	ldi	r23, 0x39	; 57
   12db6:	0a c0       	rjmp	.+20     	; 0x12dcc <_Z12Pub_Sub_DataPcPhjh+0x750>
   12db8:	01 96       	adiw	r24, 0x01	; 1
   12dba:	98 2f       	mov	r25, r24
   12dbc:	99 0f       	add	r25, r25
   12dbe:	89 0f       	add	r24, r25
   12dc0:	f6 01       	movw	r30, r12
   12dc2:	80 83       	st	Z, r24
   12dc4:	21 30       	cpi	r18, 0x01	; 1
   12dc6:	21 f5       	brne	.+72     	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12dc8:	67 e8       	ldi	r22, 0x87	; 135
   12dca:	79 e3       	ldi	r23, 0x39	; 57
   12dcc:	86 ec       	ldi	r24, 0xC6	; 198
   12dce:	94 e1       	ldi	r25, 0x14	; 20
   12dd0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12dd4:	86 ec       	ldi	r24, 0xC6	; 198
   12dd6:	94 e1       	ldi	r25, 0x14	; 20
   12dd8:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   12ddc:	86 ec       	ldi	r24, 0xC6	; 198
   12dde:	94 e1       	ldi	r25, 0x14	; 20
   12de0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12de4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12de8:	81 30       	cpi	r24, 0x01	; 1
   12dea:	91 f4       	brne	.+36     	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12dec:	66 e7       	ldi	r22, 0x76	; 118
   12dee:	79 e3       	ldi	r23, 0x39	; 57
   12df0:	86 ec       	ldi	r24, 0xC6	; 198
   12df2:	94 e1       	ldi	r25, 0x14	; 20
   12df4:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12df8:	86 ec       	ldi	r24, 0xC6	; 198
   12dfa:	94 e1       	ldi	r25, 0x14	; 20
   12dfc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12e00:	07 c0       	rjmp	.+14     	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12e02:	01 96       	adiw	r24, 0x01	; 1
   12e04:	49 5f       	subi	r20, 0xF9	; 249
   12e06:	5f 4f       	sbci	r21, 0xFF	; 255
   12e08:	85 30       	cpi	r24, 0x05	; 5
   12e0a:	91 05       	cpc	r25, r1
   12e0c:	09 f0       	breq	.+2      	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x794>
   12e0e:	66 cf       	rjmp	.-308    	; 0x12cdc <_Z12Pub_Sub_DataPcPhjh+0x660>
   12e10:	d7 01       	movw	r26, r14
   12e12:	8c 91       	ld	r24, X
   12e14:	81 11       	cpse	r24, r1
   12e16:	03 c0       	rjmp	.+6      	; 0x12e1e <_Z12Pub_Sub_DataPcPhjh+0x7a2>
   12e18:	be e0       	ldi	r27, 0x0E	; 14
   12e1a:	b9 15       	cp	r27, r9
   12e1c:	40 f4       	brcc	.+16     	; 0x12e2e <_Z12Pub_Sub_DataPcPhjh+0x7b2>
   12e1e:	f6 01       	movw	r30, r12
   12e20:	80 81       	ld	r24, Z
   12e22:	81 11       	cpse	r24, r1
   12e24:	24 cf       	rjmp	.-440    	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e26:	fe e0       	ldi	r31, 0x0E	; 14
   12e28:	f9 15       	cp	r31, r9
   12e2a:	08 f0       	brcs	.+2      	; 0x12e2e <_Z12Pub_Sub_DataPcPhjh+0x7b2>
   12e2c:	20 cf       	rjmp	.-448    	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12e32:	81 30       	cpi	r24, 0x01	; 1
   12e34:	51 f4       	brne	.+20     	; 0x12e4a <_Z12Pub_Sub_DataPcPhjh+0x7ce>
   12e36:	6d e5       	ldi	r22, 0x5D	; 93
   12e38:	79 e3       	ldi	r23, 0x39	; 57
   12e3a:	86 ec       	ldi	r24, 0xC6	; 198
   12e3c:	94 e1       	ldi	r25, 0x14	; 20
   12e3e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12e42:	86 ec       	ldi	r24, 0xC6	; 198
   12e44:	94 e1       	ldi	r25, 0x14	; 20
   12e46:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12e4a:	e5 e1       	ldi	r30, 0x15	; 21
   12e4c:	fc e0       	ldi	r31, 0x0C	; 12
   12e4e:	b1 2c       	mov	r11, r1
   12e50:	80 81       	ld	r24, Z
   12e52:	88 23       	and	r24, r24
   12e54:	29 f0       	breq	.+10     	; 0x12e60 <_Z12Pub_Sub_DataPcPhjh+0x7e4>
   12e56:	b3 94       	inc	r11
   12e58:	3d 96       	adiw	r30, 0x0d	; 13
   12e5a:	25 e0       	ldi	r18, 0x05	; 5
   12e5c:	b2 12       	cpse	r11, r18
   12e5e:	f8 cf       	rjmp	.-16     	; 0x12e50 <_Z12Pub_Sub_DataPcPhjh+0x7d4>
   12e60:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12e64:	81 30       	cpi	r24, 0x01	; 1
   12e66:	c9 f4       	brne	.+50     	; 0x12e9a <_Z12Pub_Sub_DataPcPhjh+0x81e>
   12e68:	86 ec       	ldi	r24, 0xC6	; 198
   12e6a:	94 e1       	ldi	r25, 0x14	; 20
   12e6c:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   12e70:	69 e4       	ldi	r22, 0x49	; 73
   12e72:	79 e3       	ldi	r23, 0x39	; 57
   12e74:	86 ec       	ldi	r24, 0xC6	; 198
   12e76:	94 e1       	ldi	r25, 0x14	; 20
   12e78:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12e7c:	86 ec       	ldi	r24, 0xC6	; 198
   12e7e:	94 e1       	ldi	r25, 0x14	; 20
   12e80:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   12e84:	4a e0       	ldi	r20, 0x0A	; 10
   12e86:	50 e0       	ldi	r21, 0x00	; 0
   12e88:	6b 2d       	mov	r22, r11
   12e8a:	86 ec       	ldi	r24, 0xC6	; 198
   12e8c:	94 e1       	ldi	r25, 0x14	; 20
   12e8e:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   12e92:	86 ec       	ldi	r24, 0xC6	; 198
   12e94:	94 e1       	ldi	r25, 0x14	; 20
   12e96:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12e9a:	3d e0       	ldi	r19, 0x0D	; 13
   12e9c:	b3 9e       	mul	r11, r19
   12e9e:	a0 01       	movw	r20, r0
   12ea0:	11 24       	eor	r1, r1
   12ea2:	80 e0       	ldi	r24, 0x00	; 0
   12ea4:	90 e0       	ldi	r25, 0x00	; 0
   12ea6:	0b 2d       	mov	r16, r11
   12ea8:	10 e0       	ldi	r17, 0x00	; 0
   12eaa:	fa 01       	movw	r30, r20
   12eac:	e8 0f       	add	r30, r24
   12eae:	f9 1f       	adc	r31, r25
   12eb0:	eb 5e       	subi	r30, 0xEB	; 235
   12eb2:	f3 4f       	sbci	r31, 0xF3	; 243
   12eb4:	d1 01       	movw	r26, r2
   12eb6:	a8 0f       	add	r26, r24
   12eb8:	b9 1f       	adc	r27, r25
   12eba:	2c 91       	ld	r18, X
   12ebc:	21 83       	std	Z+1, r18	; 0x01
   12ebe:	01 96       	adiw	r24, 0x01	; 1
   12ec0:	86 30       	cpi	r24, 0x06	; 6
   12ec2:	91 05       	cpc	r25, r1
   12ec4:	91 f7       	brne	.-28     	; 0x12eaa <_Z12Pub_Sub_DataPcPhjh+0x82e>
   12ec6:	8d e0       	ldi	r24, 0x0D	; 13
   12ec8:	80 9f       	mul	r24, r16
   12eca:	a0 01       	movw	r20, r0
   12ecc:	81 9f       	mul	r24, r17
   12ece:	50 0d       	add	r21, r0
   12ed0:	11 24       	eor	r1, r1
   12ed2:	cc 54       	subi	r28, 0x4C	; 76
   12ed4:	d9 4f       	sbci	r29, 0xF9	; 249
   12ed6:	59 83       	std	Y+1, r21	; 0x01
   12ed8:	48 83       	st	Y, r20
   12eda:	c4 5b       	subi	r28, 0xB4	; 180
   12edc:	d6 40       	sbci	r29, 0x06	; 6
   12ede:	4a 5e       	subi	r20, 0xEA	; 234
   12ee0:	53 4f       	sbci	r21, 0xF3	; 243
   12ee2:	c7 54       	subi	r28, 0x47	; 71
   12ee4:	d9 4f       	sbci	r29, 0xF9	; 249
   12ee6:	59 83       	std	Y+1, r21	; 0x01
   12ee8:	48 83       	st	Y, r20
   12eea:	c9 5b       	subi	r28, 0xB9	; 185
   12eec:	d6 40       	sbci	r29, 0x06	; 6
   12eee:	a7 e0       	ldi	r26, 0x07	; 7
   12ef0:	a0 9f       	mul	r26, r16
   12ef2:	c0 01       	movw	r24, r0
   12ef4:	a1 9f       	mul	r26, r17
   12ef6:	90 0d       	add	r25, r0
   12ef8:	11 24       	eor	r1, r1
   12efa:	ba 01       	movw	r22, r20
   12efc:	8e 5d       	subi	r24, 0xDE	; 222
   12efe:	9b 4e       	sbci	r25, 0xEB	; 235
   12f00:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   12f04:	cc 54       	subi	r28, 0x4C	; 76
   12f06:	d9 4f       	sbci	r29, 0xF9	; 249
   12f08:	e8 81       	ld	r30, Y
   12f0a:	f9 81       	ldd	r31, Y+1	; 0x01
   12f0c:	c4 5b       	subi	r28, 0xB4	; 180
   12f0e:	d6 40       	sbci	r29, 0x06	; 6
   12f10:	eb 5e       	subi	r30, 0xEB	; 235
   12f12:	f3 4f       	sbci	r31, 0xF3	; 243
   12f14:	cc 54       	subi	r28, 0x4C	; 76
   12f16:	d9 4f       	sbci	r29, 0xF9	; 249
   12f18:	f9 83       	std	Y+1, r31	; 0x01
   12f1a:	e8 83       	st	Y, r30
   12f1c:	c4 5b       	subi	r28, 0xB4	; 180
   12f1e:	d6 40       	sbci	r29, 0x06	; 6
   12f20:	81 e0       	ldi	r24, 0x01	; 1
   12f22:	8b 0d       	add	r24, r11
   12f24:	80 83       	st	Z, r24
   12f26:	2f ef       	ldi	r18, 0xFF	; 255
   12f28:	30 e0       	ldi	r19, 0x00	; 0
   12f2a:	31 87       	std	Z+9, r19	; 0x09
   12f2c:	20 87       	std	Z+8, r18	; 0x08
   12f2e:	31 e0       	ldi	r19, 0x01	; 1
   12f30:	33 87       	std	Z+11, r19	; 0x0b
   12f32:	12 86       	std	Z+10, r1	; 0x0a
   12f34:	14 86       	std	Z+12, r1	; 0x0c
   12f36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12f3a:	81 30       	cpi	r24, 0x01	; 1
   12f3c:	09 f0       	breq	.+2      	; 0x12f40 <_Z12Pub_Sub_DataPcPhjh+0x8c4>
   12f3e:	45 c0       	rjmp	.+138    	; 0x12fca <_Z12Pub_Sub_DataPcPhjh+0x94e>
   12f40:	86 ec       	ldi	r24, 0xC6	; 198
   12f42:	94 e1       	ldi	r25, 0x14	; 20
   12f44:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   12f48:	6e e2       	ldi	r22, 0x2E	; 46
   12f4a:	79 e3       	ldi	r23, 0x39	; 57
   12f4c:	86 ec       	ldi	r24, 0xC6	; 198
   12f4e:	94 e1       	ldi	r25, 0x14	; 20
   12f50:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12f54:	86 ec       	ldi	r24, 0xC6	; 198
   12f56:	94 e1       	ldi	r25, 0x14	; 20
   12f58:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   12f5c:	86 ec       	ldi	r24, 0xC6	; 198
   12f5e:	94 e1       	ldi	r25, 0x14	; 20
   12f60:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12f64:	63 e2       	ldi	r22, 0x23	; 35
   12f66:	79 e3       	ldi	r23, 0x39	; 57
   12f68:	86 ec       	ldi	r24, 0xC6	; 198
   12f6a:	94 e1       	ldi	r25, 0x14	; 20
   12f6c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12f70:	4a e0       	ldi	r20, 0x0A	; 10
   12f72:	50 e0       	ldi	r21, 0x00	; 0
   12f74:	cc 54       	subi	r28, 0x4C	; 76
   12f76:	d9 4f       	sbci	r29, 0xF9	; 249
   12f78:	a8 81       	ld	r26, Y
   12f7a:	b9 81       	ldd	r27, Y+1	; 0x01
   12f7c:	c4 5b       	subi	r28, 0xB4	; 180
   12f7e:	d6 40       	sbci	r29, 0x06	; 6
   12f80:	6c 91       	ld	r22, X
   12f82:	86 ec       	ldi	r24, 0xC6	; 198
   12f84:	94 e1       	ldi	r25, 0x14	; 20
   12f86:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   12f8a:	86 ec       	ldi	r24, 0xC6	; 198
   12f8c:	94 e1       	ldi	r25, 0x14	; 20
   12f8e:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   12f92:	86 ec       	ldi	r24, 0xC6	; 198
   12f94:	94 e1       	ldi	r25, 0x14	; 20
   12f96:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12f9a:	68 e1       	ldi	r22, 0x18	; 24
   12f9c:	79 e3       	ldi	r23, 0x39	; 57
   12f9e:	86 ec       	ldi	r24, 0xC6	; 198
   12fa0:	94 e1       	ldi	r25, 0x14	; 20
   12fa2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   12fa6:	c7 54       	subi	r28, 0x47	; 71
   12fa8:	d9 4f       	sbci	r29, 0xF9	; 249
   12faa:	68 81       	ld	r22, Y
   12fac:	79 81       	ldd	r23, Y+1	; 0x01
   12fae:	c9 5b       	subi	r28, 0xB9	; 185
   12fb0:	d6 40       	sbci	r29, 0x06	; 6
   12fb2:	86 ec       	ldi	r24, 0xC6	; 198
   12fb4:	94 e1       	ldi	r25, 0x14	; 20
   12fb6:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   12fba:	86 ec       	ldi	r24, 0xC6	; 198
   12fbc:	94 e1       	ldi	r25, 0x14	; 20
   12fbe:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   12fc2:	86 ec       	ldi	r24, 0xC6	; 198
   12fc4:	94 e1       	ldi	r25, 0x14	; 20
   12fc6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   12fca:	be e0       	ldi	r27, 0x0E	; 14
   12fcc:	b9 15       	cp	r27, r9
   12fce:	a0 f1       	brcs	.+104    	; 0x13038 <_Z12Pub_Sub_DataPcPhjh+0x9bc>
   12fd0:	f1 01       	movw	r30, r2
   12fd2:	87 81       	ldd	r24, Z+7	; 0x07
   12fd4:	82 33       	cpi	r24, 0x32	; 50
   12fd6:	99 f0       	breq	.+38     	; 0x12ffe <_Z12Pub_Sub_DataPcPhjh+0x982>
   12fd8:	83 33       	cpi	r24, 0x33	; 51
   12fda:	f9 f0       	breq	.+62     	; 0x1301a <_Z12Pub_Sub_DataPcPhjh+0x99e>
   12fdc:	81 33       	cpi	r24, 0x31	; 49
   12fde:	09 f0       	breq	.+2      	; 0x12fe2 <_Z12Pub_Sub_DataPcPhjh+0x966>
   12fe0:	72 c0       	rjmp	.+228    	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   12fe2:	8b 2d       	mov	r24, r11
   12fe4:	88 0f       	add	r24, r24
   12fe6:	8b 0d       	add	r24, r11
   12fe8:	8f 5f       	subi	r24, 0xFF	; 255
   12fea:	d7 01       	movw	r26, r14
   12fec:	8c 93       	st	X, r24
   12fee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12ff2:	81 30       	cpi	r24, 0x01	; 1
   12ff4:	09 f0       	breq	.+2      	; 0x12ff8 <_Z12Pub_Sub_DataPcPhjh+0x97c>
   12ff6:	67 c0       	rjmp	.+206    	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   12ff8:	69 ef       	ldi	r22, 0xF9	; 249
   12ffa:	78 e3       	ldi	r23, 0x38	; 56
   12ffc:	58 c0       	rjmp	.+176    	; 0x130ae <_Z12Pub_Sub_DataPcPhjh+0xa32>
   12ffe:	8b 2d       	mov	r24, r11
   13000:	88 0f       	add	r24, r24
   13002:	8b 0d       	add	r24, r11
   13004:	8e 5f       	subi	r24, 0xFE	; 254
   13006:	f7 01       	movw	r30, r14
   13008:	80 83       	st	Z, r24
   1300a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1300e:	81 30       	cpi	r24, 0x01	; 1
   13010:	09 f0       	breq	.+2      	; 0x13014 <_Z12Pub_Sub_DataPcPhjh+0x998>
   13012:	59 c0       	rjmp	.+178    	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13014:	6a ed       	ldi	r22, 0xDA	; 218
   13016:	78 e3       	ldi	r23, 0x38	; 56
   13018:	4a c0       	rjmp	.+148    	; 0x130ae <_Z12Pub_Sub_DataPcPhjh+0xa32>
   1301a:	0f 5f       	subi	r16, 0xFF	; 255
   1301c:	1f 4f       	sbci	r17, 0xFF	; 255
   1301e:	80 2f       	mov	r24, r16
   13020:	88 0f       	add	r24, r24
   13022:	08 0f       	add	r16, r24
   13024:	d7 01       	movw	r26, r14
   13026:	0c 93       	st	X, r16
   13028:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1302c:	81 30       	cpi	r24, 0x01	; 1
   1302e:	09 f0       	breq	.+2      	; 0x13032 <_Z12Pub_Sub_DataPcPhjh+0x9b6>
   13030:	4a c0       	rjmp	.+148    	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13032:	6b eb       	ldi	r22, 0xBB	; 187
   13034:	78 e3       	ldi	r23, 0x38	; 56
   13036:	3b c0       	rjmp	.+118    	; 0x130ae <_Z12Pub_Sub_DataPcPhjh+0xa32>
   13038:	b4 e6       	ldi	r27, 0x64	; 100
   1303a:	b9 15       	cp	r27, r9
   1303c:	08 f0       	brcs	.+2      	; 0x13040 <_Z12Pub_Sub_DataPcPhjh+0x9c4>
   1303e:	43 c0       	rjmp	.+134    	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13040:	f1 01       	movw	r30, r2
   13042:	87 81       	ldd	r24, Z+7	; 0x07
   13044:	82 33       	cpi	r24, 0x32	; 50
   13046:	c9 f0       	breq	.+50     	; 0x1307a <_Z12Pub_Sub_DataPcPhjh+0x9fe>
   13048:	83 33       	cpi	r24, 0x33	; 51
   1304a:	21 f1       	breq	.+72     	; 0x13094 <_Z12Pub_Sub_DataPcPhjh+0xa18>
   1304c:	81 33       	cpi	r24, 0x31	; 49
   1304e:	d9 f5       	brne	.+118    	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13050:	8b 2d       	mov	r24, r11
   13052:	88 0f       	add	r24, r24
   13054:	8b 0d       	add	r24, r11
   13056:	8f 5f       	subi	r24, 0xFF	; 255
   13058:	d6 01       	movw	r26, r12
   1305a:	8c 93       	st	X, r24
   1305c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13060:	81 30       	cpi	r24, 0x01	; 1
   13062:	89 f5       	brne	.+98     	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13064:	60 ea       	ldi	r22, 0xA0	; 160
   13066:	78 e3       	ldi	r23, 0x38	; 56
   13068:	86 ec       	ldi	r24, 0xC6	; 198
   1306a:	94 e1       	ldi	r25, 0x14	; 20
   1306c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13070:	86 ec       	ldi	r24, 0xC6	; 198
   13072:	94 e1       	ldi	r25, 0x14	; 20
   13074:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   13078:	26 c0       	rjmp	.+76     	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1307a:	8b 2d       	mov	r24, r11
   1307c:	88 0f       	add	r24, r24
   1307e:	8b 0d       	add	r24, r11
   13080:	8e 5f       	subi	r24, 0xFE	; 254
   13082:	f6 01       	movw	r30, r12
   13084:	80 83       	st	Z, r24
   13086:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1308a:	81 30       	cpi	r24, 0x01	; 1
   1308c:	e1 f4       	brne	.+56     	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1308e:	65 e8       	ldi	r22, 0x85	; 133
   13090:	78 e3       	ldi	r23, 0x38	; 56
   13092:	0d c0       	rjmp	.+26     	; 0x130ae <_Z12Pub_Sub_DataPcPhjh+0xa32>
   13094:	0f 5f       	subi	r16, 0xFF	; 255
   13096:	1f 4f       	sbci	r17, 0xFF	; 255
   13098:	80 2f       	mov	r24, r16
   1309a:	88 0f       	add	r24, r24
   1309c:	08 0f       	add	r16, r24
   1309e:	d6 01       	movw	r26, r12
   130a0:	0c 93       	st	X, r16
   130a2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   130a6:	81 30       	cpi	r24, 0x01	; 1
   130a8:	71 f4       	brne	.+28     	; 0x130c6 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   130aa:	6a e6       	ldi	r22, 0x6A	; 106
   130ac:	78 e3       	ldi	r23, 0x38	; 56
   130ae:	86 ec       	ldi	r24, 0xC6	; 198
   130b0:	94 e1       	ldi	r25, 0x14	; 20
   130b2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   130b6:	86 ec       	ldi	r24, 0xC6	; 198
   130b8:	94 e1       	ldi	r25, 0x14	; 20
   130ba:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   130be:	86 ec       	ldi	r24, 0xC6	; 198
   130c0:	94 e1       	ldi	r25, 0x14	; 20
   130c2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   130c6:	8b 2d       	mov	r24, r11
   130c8:	0e 94 32 5c 	call	0xb864	; 0xb864 <_Z16Euro_Data_EEPROMh>
   130cc:	d0 cd       	rjmp	.-1120   	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   130ce:	4e ea       	ldi	r20, 0xAE	; 174
   130d0:	53 e1       	ldi	r21, 0x13	; 19
   130d2:	26 e0       	ldi	r18, 0x06	; 6
   130d4:	80 e0       	ldi	r24, 0x00	; 0
   130d6:	90 e0       	ldi	r25, 0x00	; 0
   130d8:	30 e0       	ldi	r19, 0x00	; 0
   130da:	fc 01       	movw	r30, r24
   130dc:	ec 58       	subi	r30, 0x8C	; 140
   130de:	ff 4f       	sbci	r31, 0xFF	; 255
   130e0:	e4 0f       	add	r30, r20
   130e2:	f5 1f       	adc	r31, r21
   130e4:	70 81       	ld	r23, Z
   130e6:	f1 01       	movw	r30, r2
   130e8:	e8 0f       	add	r30, r24
   130ea:	f9 1f       	adc	r31, r25
   130ec:	60 81       	ld	r22, Z
   130ee:	76 13       	cpse	r23, r22
   130f0:	01 c0       	rjmp	.+2      	; 0x130f4 <_Z12Pub_Sub_DataPcPhjh+0xa78>
   130f2:	3f 5f       	subi	r19, 0xFF	; 255
   130f4:	01 96       	adiw	r24, 0x01	; 1
   130f6:	86 30       	cpi	r24, 0x06	; 6
   130f8:	91 05       	cpc	r25, r1
   130fa:	79 f7       	brne	.-34     	; 0x130da <_Z12Pub_Sub_DataPcPhjh+0xa5e>
   130fc:	36 30       	cpi	r19, 0x06	; 6
   130fe:	09 f0       	breq	.+2      	; 0x13102 <_Z12Pub_Sub_DataPcPhjh+0xa86>
   13100:	63 c0       	rjmp	.+198    	; 0x131c8 <_Z12Pub_Sub_DataPcPhjh+0xb4c>
   13102:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13106:	be e0       	ldi	r27, 0x0E	; 14
   13108:	b9 15       	cp	r27, r9
   1310a:	10 f1       	brcs	.+68     	; 0x13150 <_Z12Pub_Sub_DataPcPhjh+0xad4>
   1310c:	f1 01       	movw	r30, r2
   1310e:	97 81       	ldd	r25, Z+7	; 0x07
   13110:	92 33       	cpi	r25, 0x32	; 50
   13112:	69 f0       	breq	.+26     	; 0x1312e <_Z12Pub_Sub_DataPcPhjh+0xab2>
   13114:	93 33       	cpi	r25, 0x33	; 51
   13116:	99 f0       	breq	.+38     	; 0x1313e <_Z12Pub_Sub_DataPcPhjh+0xac2>
   13118:	91 33       	cpi	r25, 0x31	; 49
   1311a:	09 f0       	breq	.+2      	; 0x1311e <_Z12Pub_Sub_DataPcPhjh+0xaa2>
   1311c:	46 c0       	rjmp	.+140    	; 0x131aa <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   1311e:	d7 01       	movw	r26, r14
   13120:	ac 92       	st	X, r10
   13122:	81 30       	cpi	r24, 0x01	; 1
   13124:	09 f0       	breq	.+2      	; 0x13128 <_Z12Pub_Sub_DataPcPhjh+0xaac>
   13126:	55 c0       	rjmp	.+170    	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13128:	6f e4       	ldi	r22, 0x4F	; 79
   1312a:	78 e3       	ldi	r23, 0x38	; 56
   1312c:	32 c0       	rjmp	.+100    	; 0x13192 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   1312e:	f7 01       	movw	r30, r14
   13130:	80 82       	st	Z, r8
   13132:	81 30       	cpi	r24, 0x01	; 1
   13134:	09 f0       	breq	.+2      	; 0x13138 <_Z12Pub_Sub_DataPcPhjh+0xabc>
   13136:	4d c0       	rjmp	.+154    	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13138:	64 e3       	ldi	r22, 0x34	; 52
   1313a:	78 e3       	ldi	r23, 0x38	; 56
   1313c:	2a c0       	rjmp	.+84     	; 0x13192 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   1313e:	e7 e6       	ldi	r30, 0x67	; 103
   13140:	d7 01       	movw	r26, r14
   13142:	ec 93       	st	X, r30
   13144:	81 30       	cpi	r24, 0x01	; 1
   13146:	09 f0       	breq	.+2      	; 0x1314a <_Z12Pub_Sub_DataPcPhjh+0xace>
   13148:	44 c0       	rjmp	.+136    	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   1314a:	69 e1       	ldi	r22, 0x19	; 25
   1314c:	78 e3       	ldi	r23, 0x38	; 56
   1314e:	21 c0       	rjmp	.+66     	; 0x13192 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   13150:	f4 e6       	ldi	r31, 0x64	; 100
   13152:	f9 15       	cp	r31, r9
   13154:	50 f5       	brcc	.+84     	; 0x131aa <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   13156:	d1 01       	movw	r26, r2
   13158:	17 96       	adiw	r26, 0x07	; 7
   1315a:	9c 91       	ld	r25, X
   1315c:	92 33       	cpi	r25, 0x32	; 50
   1315e:	59 f0       	breq	.+22     	; 0x13176 <_Z12Pub_Sub_DataPcPhjh+0xafa>
   13160:	93 33       	cpi	r25, 0x33	; 51
   13162:	81 f0       	breq	.+32     	; 0x13184 <_Z12Pub_Sub_DataPcPhjh+0xb08>
   13164:	91 33       	cpi	r25, 0x31	; 49
   13166:	09 f5       	brne	.+66     	; 0x131aa <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   13168:	f6 01       	movw	r30, r12
   1316a:	a0 82       	st	Z, r10
   1316c:	81 30       	cpi	r24, 0x01	; 1
   1316e:	89 f5       	brne	.+98     	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13170:	6e ef       	ldi	r22, 0xFE	; 254
   13172:	77 e3       	ldi	r23, 0x37	; 55
   13174:	0e c0       	rjmp	.+28     	; 0x13192 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   13176:	d6 01       	movw	r26, r12
   13178:	8c 92       	st	X, r8
   1317a:	81 30       	cpi	r24, 0x01	; 1
   1317c:	51 f5       	brne	.+84     	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   1317e:	63 ee       	ldi	r22, 0xE3	; 227
   13180:	77 e3       	ldi	r23, 0x37	; 55
   13182:	07 c0       	rjmp	.+14     	; 0x13192 <_Z12Pub_Sub_DataPcPhjh+0xb16>
   13184:	27 e6       	ldi	r18, 0x67	; 103
   13186:	f6 01       	movw	r30, r12
   13188:	20 83       	st	Z, r18
   1318a:	81 30       	cpi	r24, 0x01	; 1
   1318c:	11 f5       	brne	.+68     	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   1318e:	68 ec       	ldi	r22, 0xC8	; 200
   13190:	77 e3       	ldi	r23, 0x37	; 55
   13192:	86 ec       	ldi	r24, 0xC6	; 198
   13194:	94 e1       	ldi	r25, 0x14	; 20
   13196:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1319a:	86 ec       	ldi	r24, 0xC6	; 198
   1319c:	94 e1       	ldi	r25, 0x14	; 20
   1319e:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   131a2:	86 ec       	ldi	r24, 0xC6	; 198
   131a4:	94 e1       	ldi	r25, 0x14	; 20
   131a6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   131aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   131ae:	81 30       	cpi	r24, 0x01	; 1
   131b0:	81 f4       	brne	.+32     	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   131b2:	67 eb       	ldi	r22, 0xB7	; 183
   131b4:	77 e3       	ldi	r23, 0x37	; 55
   131b6:	86 ec       	ldi	r24, 0xC6	; 198
   131b8:	94 e1       	ldi	r25, 0x14	; 20
   131ba:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   131be:	86 ec       	ldi	r24, 0xC6	; 198
   131c0:	94 e1       	ldi	r25, 0x14	; 20
   131c2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   131c6:	05 c0       	rjmp	.+10     	; 0x131d2 <_Z12Pub_Sub_DataPcPhjh+0xb56>
   131c8:	21 50       	subi	r18, 0x01	; 1
   131ca:	49 5f       	subi	r20, 0xF9	; 249
   131cc:	5f 4f       	sbci	r21, 0xFF	; 255
   131ce:	21 11       	cpse	r18, r1
   131d0:	81 cf       	rjmp	.-254    	; 0x130d4 <_Z12Pub_Sub_DataPcPhjh+0xa58>
   131d2:	d7 01       	movw	r26, r14
   131d4:	8c 91       	ld	r24, X
   131d6:	81 11       	cpse	r24, r1
   131d8:	03 c0       	rjmp	.+6      	; 0x131e0 <_Z12Pub_Sub_DataPcPhjh+0xb64>
   131da:	be e0       	ldi	r27, 0x0E	; 14
   131dc:	b9 15       	cp	r27, r9
   131de:	40 f4       	brcc	.+16     	; 0x131f0 <_Z12Pub_Sub_DataPcPhjh+0xb74>
   131e0:	f6 01       	movw	r30, r12
   131e2:	80 81       	ld	r24, Z
   131e4:	81 11       	cpse	r24, r1
   131e6:	43 cd       	rjmp	.-1402   	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   131e8:	fe e0       	ldi	r31, 0x0E	; 14
   131ea:	f9 15       	cp	r31, r9
   131ec:	08 f0       	brcs	.+2      	; 0x131f0 <_Z12Pub_Sub_DataPcPhjh+0xb74>
   131ee:	3f cd       	rjmp	.-1410   	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   131f0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   131f4:	81 30       	cpi	r24, 0x01	; 1
   131f6:	51 f4       	brne	.+20     	; 0x1320c <_Z12Pub_Sub_DataPcPhjh+0xb90>
   131f8:	6e e9       	ldi	r22, 0x9E	; 158
   131fa:	77 e3       	ldi	r23, 0x37	; 55
   131fc:	86 ec       	ldi	r24, 0xC6	; 198
   131fe:	94 e1       	ldi	r25, 0x14	; 20
   13200:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13204:	86 ec       	ldi	r24, 0xC6	; 198
   13206:	94 e1       	ldi	r25, 0x14	; 20
   13208:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1320c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13210:	81 30       	cpi	r24, 0x01	; 1
   13212:	c9 f4       	brne	.+50     	; 0x13246 <_Z12Pub_Sub_DataPcPhjh+0xbca>
   13214:	86 ec       	ldi	r24, 0xC6	; 198
   13216:	94 e1       	ldi	r25, 0x14	; 20
   13218:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1321c:	6a e8       	ldi	r22, 0x8A	; 138
   1321e:	77 e3       	ldi	r23, 0x37	; 55
   13220:	86 ec       	ldi	r24, 0xC6	; 198
   13222:	94 e1       	ldi	r25, 0x14	; 20
   13224:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13228:	86 ec       	ldi	r24, 0xC6	; 198
   1322a:	94 e1       	ldi	r25, 0x14	; 20
   1322c:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   13230:	4a e0       	ldi	r20, 0x0A	; 10
   13232:	50 e0       	ldi	r21, 0x00	; 0
   13234:	65 e0       	ldi	r22, 0x05	; 5
   13236:	86 ec       	ldi	r24, 0xC6	; 198
   13238:	94 e1       	ldi	r25, 0x14	; 20
   1323a:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   1323e:	86 ec       	ldi	r24, 0xC6	; 198
   13240:	94 e1       	ldi	r25, 0x14	; 20
   13242:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13246:	e5 ef       	ldi	r30, 0xF5	; 245
   13248:	fb e0       	ldi	r31, 0x0B	; 11
   1324a:	80 e0       	ldi	r24, 0x00	; 0
   1324c:	90 e0       	ldi	r25, 0x00	; 0
   1324e:	d1 01       	movw	r26, r2
   13250:	a8 0f       	add	r26, r24
   13252:	b9 1f       	adc	r27, r25
   13254:	2c 91       	ld	r18, X
   13256:	21 93       	st	Z+, r18
   13258:	22 87       	std	Z+10, r18	; 0x0a
   1325a:	25 8b       	std	Z+21, r18	; 0x15
   1325c:	01 96       	adiw	r24, 0x01	; 1
   1325e:	86 30       	cpi	r24, 0x06	; 6
   13260:	91 05       	cpc	r25, r1
   13262:	a9 f7       	brne	.-22     	; 0x1324e <_Z12Pub_Sub_DataPcPhjh+0xbd2>
   13264:	21 e0       	ldi	r18, 0x01	; 1
   13266:	20 93 f4 0b 	sts	0x0BF4, r18	; 0x800bf4 <_sWireless_Pump_Param>
   1326a:	32 e0       	ldi	r19, 0x02	; 2
   1326c:	30 93 ff 0b 	sts	0x0BFF, r19	; 0x800bff <_sWireless_Pump_Param+0xb>
   13270:	43 e0       	ldi	r20, 0x03	; 3
   13272:	40 93 0a 0c 	sts	0x0C0A, r20	; 0x800c0a <_sWireless_Pump_Param+0x16>
   13276:	10 92 fe 0b 	sts	0x0BFE, r1	; 0x800bfe <_sWireless_Pump_Param+0xa>
   1327a:	10 92 09 0c 	sts	0x0C09, r1	; 0x800c09 <_sWireless_Pump_Param+0x15>
   1327e:	10 92 14 0c 	sts	0x0C14, r1	; 0x800c14 <_sWireless_Pump_Param+0x20>
   13282:	10 92 fd 0b 	sts	0x0BFD, r1	; 0x800bfd <_sWireless_Pump_Param+0x9>
   13286:	10 92 fc 0b 	sts	0x0BFC, r1	; 0x800bfc <_sWireless_Pump_Param+0x8>
   1328a:	10 92 08 0c 	sts	0x0C08, r1	; 0x800c08 <_sWireless_Pump_Param+0x14>
   1328e:	10 92 07 0c 	sts	0x0C07, r1	; 0x800c07 <_sWireless_Pump_Param+0x13>
   13292:	10 92 13 0c 	sts	0x0C13, r1	; 0x800c13 <_sWireless_Pump_Param+0x1f>
   13296:	10 92 12 0c 	sts	0x0C12, r1	; 0x800c12 <_sWireless_Pump_Param+0x1e>
   1329a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1329e:	81 30       	cpi	r24, 0x01	; 1
   132a0:	91 f4       	brne	.+36     	; 0x132c6 <_Z12Pub_Sub_DataPcPhjh+0xc4a>
   132a2:	86 ec       	ldi	r24, 0xC6	; 198
   132a4:	94 e1       	ldi	r25, 0x14	; 20
   132a6:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   132aa:	67 e6       	ldi	r22, 0x67	; 103
   132ac:	77 e3       	ldi	r23, 0x37	; 55
   132ae:	86 ec       	ldi	r24, 0xC6	; 198
   132b0:	94 e1       	ldi	r25, 0x14	; 20
   132b2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   132b6:	86 ec       	ldi	r24, 0xC6	; 198
   132b8:	94 e1       	ldi	r25, 0x14	; 20
   132ba:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   132be:	86 ec       	ldi	r24, 0xC6	; 198
   132c0:	94 e1       	ldi	r25, 0x14	; 20
   132c2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   132c6:	5e e0       	ldi	r21, 0x0E	; 14
   132c8:	59 15       	cp	r21, r9
   132ca:	90 f1       	brcs	.+100    	; 0x13330 <_Z12Pub_Sub_DataPcPhjh+0xcb4>
   132cc:	d1 01       	movw	r26, r2
   132ce:	17 96       	adiw	r26, 0x07	; 7
   132d0:	8c 91       	ld	r24, X
   132d2:	82 33       	cpi	r24, 0x32	; 50
   132d4:	d1 f0       	breq	.+52     	; 0x1330a <_Z12Pub_Sub_DataPcPhjh+0xc8e>
   132d6:	83 33       	cpi	r24, 0x33	; 51
   132d8:	09 f1       	breq	.+66     	; 0x1331c <_Z12Pub_Sub_DataPcPhjh+0xca0>
   132da:	81 33       	cpi	r24, 0x31	; 49
   132dc:	a1 f4       	brne	.+40     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   132de:	f7 01       	movw	r30, r14
   132e0:	a0 82       	st	Z, r10
   132e2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   132e6:	81 30       	cpi	r24, 0x01	; 1
   132e8:	71 f4       	brne	.+28     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   132ea:	68 e4       	ldi	r22, 0x48	; 72
   132ec:	77 e3       	ldi	r23, 0x37	; 55
   132ee:	86 ec       	ldi	r24, 0xC6	; 198
   132f0:	94 e1       	ldi	r25, 0x14	; 20
   132f2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   132f6:	86 ec       	ldi	r24, 0xC6	; 198
   132f8:	94 e1       	ldi	r25, 0x14	; 20
   132fa:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   132fe:	86 ec       	ldi	r24, 0xC6	; 198
   13300:	94 e1       	ldi	r25, 0x14	; 20
   13302:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13306:	10 e0       	ldi	r17, 0x00	; 0
   13308:	3b c0       	rjmp	.+118    	; 0x13380 <_Z12Pub_Sub_DataPcPhjh+0xd04>
   1330a:	d7 01       	movw	r26, r14
   1330c:	8c 92       	st	X, r8
   1330e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13312:	81 30       	cpi	r24, 0x01	; 1
   13314:	c1 f7       	brne	.-16     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13316:	69 e2       	ldi	r22, 0x29	; 41
   13318:	77 e3       	ldi	r23, 0x37	; 55
   1331a:	e9 cf       	rjmp	.-46     	; 0x132ee <_Z12Pub_Sub_DataPcPhjh+0xc72>
   1331c:	27 e6       	ldi	r18, 0x67	; 103
   1331e:	f7 01       	movw	r30, r14
   13320:	20 83       	st	Z, r18
   13322:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13326:	81 30       	cpi	r24, 0x01	; 1
   13328:	71 f7       	brne	.-36     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   1332a:	6a e0       	ldi	r22, 0x0A	; 10
   1332c:	77 e3       	ldi	r23, 0x37	; 55
   1332e:	df cf       	rjmp	.-66     	; 0x132ee <_Z12Pub_Sub_DataPcPhjh+0xc72>
   13330:	34 e6       	ldi	r19, 0x64	; 100
   13332:	39 15       	cp	r19, r9
   13334:	40 f7       	brcc	.-48     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13336:	d1 01       	movw	r26, r2
   13338:	17 96       	adiw	r26, 0x07	; 7
   1333a:	8c 91       	ld	r24, X
   1333c:	82 33       	cpi	r24, 0x32	; 50
   1333e:	69 f0       	breq	.+26     	; 0x1335a <_Z12Pub_Sub_DataPcPhjh+0xcde>
   13340:	83 33       	cpi	r24, 0x33	; 51
   13342:	a1 f0       	breq	.+40     	; 0x1336c <_Z12Pub_Sub_DataPcPhjh+0xcf0>
   13344:	81 33       	cpi	r24, 0x31	; 49
   13346:	f9 f6       	brne	.-66     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13348:	f6 01       	movw	r30, r12
   1334a:	a0 82       	st	Z, r10
   1334c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13350:	81 30       	cpi	r24, 0x01	; 1
   13352:	c9 f6       	brne	.-78     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13354:	6f ee       	ldi	r22, 0xEF	; 239
   13356:	76 e3       	ldi	r23, 0x36	; 54
   13358:	ca cf       	rjmp	.-108    	; 0x132ee <_Z12Pub_Sub_DataPcPhjh+0xc72>
   1335a:	d6 01       	movw	r26, r12
   1335c:	8c 92       	st	X, r8
   1335e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13362:	81 30       	cpi	r24, 0x01	; 1
   13364:	81 f6       	brne	.-96     	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13366:	64 ed       	ldi	r22, 0xD4	; 212
   13368:	76 e3       	ldi	r23, 0x36	; 54
   1336a:	c1 cf       	rjmp	.-126    	; 0x132ee <_Z12Pub_Sub_DataPcPhjh+0xc72>
   1336c:	27 e6       	ldi	r18, 0x67	; 103
   1336e:	f6 01       	movw	r30, r12
   13370:	20 83       	st	Z, r18
   13372:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13376:	81 30       	cpi	r24, 0x01	; 1
   13378:	31 f6       	brne	.-116    	; 0x13306 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   1337a:	69 eb       	ldi	r22, 0xB9	; 185
   1337c:	76 e3       	ldi	r23, 0x36	; 54
   1337e:	b7 cf       	rjmp	.-146    	; 0x132ee <_Z12Pub_Sub_DataPcPhjh+0xc72>
   13380:	81 2f       	mov	r24, r17
   13382:	0e 94 6c 5c 	call	0xb8d8	; 0xb8d8 <_Z20Wireless_Pump_EEPROMh>
   13386:	64 e6       	ldi	r22, 0x64	; 100
   13388:	70 e0       	ldi	r23, 0x00	; 0
   1338a:	80 e0       	ldi	r24, 0x00	; 0
   1338c:	90 e0       	ldi	r25, 0x00	; 0
   1338e:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   13392:	1f 5f       	subi	r17, 0xFF	; 255
   13394:	13 30       	cpi	r17, 0x03	; 3
   13396:	a1 f7       	brne	.-24     	; 0x13380 <_Z12Pub_Sub_DataPcPhjh+0xd04>
   13398:	6a cc       	rjmp	.-1836   	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   1339a:	9e e0       	ldi	r25, 0x0E	; 14
   1339c:	99 15       	cp	r25, r9
   1339e:	08 f4       	brcc	.+2      	; 0x133a2 <_Z12Pub_Sub_DataPcPhjh+0xd26>
   133a0:	f5 c0       	rjmp	.+490    	; 0x1358c <_Z12Pub_Sub_DataPcPhjh+0xf10>
   133a2:	62 eb       	ldi	r22, 0xB2	; 178
   133a4:	76 e3       	ldi	r23, 0x36	; 54
   133a6:	c2 01       	movw	r24, r4
   133a8:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   133ac:	c3 55       	subi	r28, 0x53	; 83
   133ae:	d9 4f       	sbci	r29, 0xF9	; 249
   133b0:	88 83       	st	Y, r24
   133b2:	cd 5a       	subi	r28, 0xAD	; 173
   133b4:	d6 40       	sbci	r29, 0x06	; 6
   133b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   133ba:	81 30       	cpi	r24, 0x01	; 1
   133bc:	09 f0       	breq	.+2      	; 0x133c0 <_Z12Pub_Sub_DataPcPhjh+0xd44>
   133be:	91 c0       	rjmp	.+290    	; 0x134e2 <_Z12Pub_Sub_DataPcPhjh+0xe66>
   133c0:	66 e9       	ldi	r22, 0x96	; 150
   133c2:	76 e3       	ldi	r23, 0x36	; 54
   133c4:	86 ec       	ldi	r24, 0xC6	; 198
   133c6:	94 e1       	ldi	r25, 0x14	; 20
   133c8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   133cc:	69 e8       	ldi	r22, 0x89	; 137
   133ce:	76 e3       	ldi	r23, 0x36	; 54
   133d0:	86 ec       	ldi	r24, 0xC6	; 198
   133d2:	94 e1       	ldi	r25, 0x14	; 20
   133d4:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   133d8:	86 ec       	ldi	r24, 0xC6	; 198
   133da:	94 e1       	ldi	r25, 0x14	; 20
   133dc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   133e0:	89 2d       	mov	r24, r9
   133e2:	90 e0       	ldi	r25, 0x00	; 0
   133e4:	01 97       	sbiw	r24, 0x01	; 1
   133e6:	26 e0       	ldi	r18, 0x06	; 6
   133e8:	28 9f       	mul	r18, r24
   133ea:	f0 01       	movw	r30, r0
   133ec:	29 9f       	mul	r18, r25
   133ee:	f0 0d       	add	r31, r0
   133f0:	11 24       	eor	r1, r1
   133f2:	e2 5b       	subi	r30, 0xB2	; 178
   133f4:	f2 4f       	sbci	r31, 0xF2	; 242
   133f6:	4a e0       	ldi	r20, 0x0A	; 10
   133f8:	50 e0       	ldi	r21, 0x00	; 0
   133fa:	60 81       	ld	r22, Z
   133fc:	86 ec       	ldi	r24, 0xC6	; 198
   133fe:	94 e1       	ldi	r25, 0x14	; 20
   13400:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   13404:	86 ec       	ldi	r24, 0xC6	; 198
   13406:	94 e1       	ldi	r25, 0x14	; 20
   13408:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1340c:	86 ec       	ldi	r24, 0xC6	; 198
   1340e:	94 e1       	ldi	r25, 0x14	; 20
   13410:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13414:	6f e7       	ldi	r22, 0x7F	; 127
   13416:	76 e3       	ldi	r23, 0x36	; 54
   13418:	86 ec       	ldi	r24, 0xC6	; 198
   1341a:	94 e1       	ldi	r25, 0x14	; 20
   1341c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13420:	b3 01       	movw	r22, r6
   13422:	86 ec       	ldi	r24, 0xC6	; 198
   13424:	94 e1       	ldi	r25, 0x14	; 20
   13426:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   1342a:	86 ec       	ldi	r24, 0xC6	; 198
   1342c:	94 e1       	ldi	r25, 0x14	; 20
   1342e:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   13432:	86 ec       	ldi	r24, 0xC6	; 198
   13434:	94 e1       	ldi	r25, 0x14	; 20
   13436:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1343a:	65 e7       	ldi	r22, 0x75	; 117
   1343c:	76 e3       	ldi	r23, 0x36	; 54
   1343e:	86 ec       	ldi	r24, 0xC6	; 198
   13440:	94 e1       	ldi	r25, 0x14	; 20
   13442:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13446:	b3 01       	movw	r22, r6
   13448:	68 5f       	subi	r22, 0xF8	; 248
   1344a:	7f 4f       	sbci	r23, 0xFF	; 255
   1344c:	86 ec       	ldi	r24, 0xC6	; 198
   1344e:	94 e1       	ldi	r25, 0x14	; 20
   13450:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   13454:	86 ec       	ldi	r24, 0xC6	; 198
   13456:	94 e1       	ldi	r25, 0x14	; 20
   13458:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1345c:	86 ec       	ldi	r24, 0xC6	; 198
   1345e:	94 e1       	ldi	r25, 0x14	; 20
   13460:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13464:	6b e6       	ldi	r22, 0x6B	; 107
   13466:	76 e3       	ldi	r23, 0x36	; 54
   13468:	86 ec       	ldi	r24, 0xC6	; 198
   1346a:	94 e1       	ldi	r25, 0x14	; 20
   1346c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13470:	b3 01       	movw	r22, r6
   13472:	60 5f       	subi	r22, 0xF0	; 240
   13474:	7f 4f       	sbci	r23, 0xFF	; 255
   13476:	86 ec       	ldi	r24, 0xC6	; 198
   13478:	94 e1       	ldi	r25, 0x14	; 20
   1347a:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   1347e:	86 ec       	ldi	r24, 0xC6	; 198
   13480:	94 e1       	ldi	r25, 0x14	; 20
   13482:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   13486:	86 ec       	ldi	r24, 0xC6	; 198
   13488:	94 e1       	ldi	r25, 0x14	; 20
   1348a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1348e:	61 e6       	ldi	r22, 0x61	; 97
   13490:	76 e3       	ldi	r23, 0x36	; 54
   13492:	86 ec       	ldi	r24, 0xC6	; 198
   13494:	94 e1       	ldi	r25, 0x14	; 20
   13496:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1349a:	b3 01       	movw	r22, r6
   1349c:	68 5e       	subi	r22, 0xE8	; 232
   1349e:	7f 4f       	sbci	r23, 0xFF	; 255
   134a0:	86 ec       	ldi	r24, 0xC6	; 198
   134a2:	94 e1       	ldi	r25, 0x14	; 20
   134a4:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   134a8:	86 ec       	ldi	r24, 0xC6	; 198
   134aa:	94 e1       	ldi	r25, 0x14	; 20
   134ac:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   134b0:	86 ec       	ldi	r24, 0xC6	; 198
   134b2:	94 e1       	ldi	r25, 0x14	; 20
   134b4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   134b8:	67 e5       	ldi	r22, 0x57	; 87
   134ba:	76 e3       	ldi	r23, 0x36	; 54
   134bc:	86 ec       	ldi	r24, 0xC6	; 198
   134be:	94 e1       	ldi	r25, 0x14	; 20
   134c0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   134c4:	b3 01       	movw	r22, r6
   134c6:	60 5e       	subi	r22, 0xE0	; 224
   134c8:	7f 4f       	sbci	r23, 0xFF	; 255
   134ca:	86 ec       	ldi	r24, 0xC6	; 198
   134cc:	94 e1       	ldi	r25, 0x14	; 20
   134ce:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   134d2:	86 ec       	ldi	r24, 0xC6	; 198
   134d4:	94 e1       	ldi	r25, 0x14	; 20
   134d6:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   134da:	86 ec       	ldi	r24, 0xC6	; 198
   134dc:	94 e1       	ldi	r25, 0x14	; 20
   134de:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   134e2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   134e6:	81 30       	cpi	r24, 0x01	; 1
   134e8:	71 f0       	breq	.+28     	; 0x13506 <_Z12Pub_Sub_DataPcPhjh+0xe8a>
   134ea:	c8 54       	subi	r28, 0x48	; 72
   134ec:	d9 4f       	sbci	r29, 0xF9	; 249
   134ee:	88 81       	ld	r24, Y
   134f0:	c8 5b       	subi	r28, 0xB8	; 184
   134f2:	d6 40       	sbci	r29, 0x06	; 6
   134f4:	0e 94 f6 7e 	call	0xfdec	; 0xfdec <_Z16Lira_Data_EEPROMh>
   134f8:	a1 e0       	ldi	r26, 0x01	; 1
   134fa:	c0 55       	subi	r28, 0x50	; 80
   134fc:	d9 4f       	sbci	r29, 0xF9	; 249
   134fe:	a8 83       	st	Y, r26
   13500:	c0 5b       	subi	r28, 0xB0	; 176
   13502:	d6 40       	sbci	r29, 0x06	; 6
   13504:	85 c1       	rjmp	.+778    	; 0x13810 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   13506:	00 e0       	ldi	r16, 0x00	; 0
   13508:	10 e0       	ldi	r17, 0x00	; 0
   1350a:	86 ec       	ldi	r24, 0xC6	; 198
   1350c:	94 e1       	ldi	r25, 0x14	; 20
   1350e:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   13512:	6b e4       	ldi	r22, 0x4B	; 75
   13514:	76 e3       	ldi	r23, 0x36	; 54
   13516:	86 ec       	ldi	r24, 0xC6	; 198
   13518:	94 e1       	ldi	r25, 0x14	; 20
   1351a:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1351e:	c5 54       	subi	r28, 0x45	; 69
   13520:	d9 4f       	sbci	r29, 0xF9	; 249
   13522:	e8 81       	ld	r30, Y
   13524:	f9 81       	ldd	r31, Y+1	; 0x01
   13526:	cb 5b       	subi	r28, 0xBB	; 187
   13528:	d6 40       	sbci	r29, 0x06	; 6
   1352a:	e0 0f       	add	r30, r16
   1352c:	f1 1f       	adc	r31, r17
   1352e:	e7 5b       	subi	r30, 0xB7	; 183
   13530:	f2 4f       	sbci	r31, 0xF2	; 242
   13532:	4a e0       	ldi	r20, 0x0A	; 10
   13534:	50 e0       	ldi	r21, 0x00	; 0
   13536:	60 81       	ld	r22, Z
   13538:	86 ec       	ldi	r24, 0xC6	; 198
   1353a:	94 e1       	ldi	r25, 0x14	; 20
   1353c:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   13540:	86 ec       	ldi	r24, 0xC6	; 198
   13542:	94 e1       	ldi	r25, 0x14	; 20
   13544:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13548:	0f 5f       	subi	r16, 0xFF	; 255
   1354a:	1f 4f       	sbci	r17, 0xFF	; 255
   1354c:	05 30       	cpi	r16, 0x05	; 5
   1354e:	11 05       	cpc	r17, r1
   13550:	e1 f6       	brne	.-72     	; 0x1350a <_Z12Pub_Sub_DataPcPhjh+0xe8e>
   13552:	00 e0       	ldi	r16, 0x00	; 0
   13554:	10 e0       	ldi	r17, 0x00	; 0
   13556:	86 ec       	ldi	r24, 0xC6	; 198
   13558:	94 e1       	ldi	r25, 0x14	; 20
   1355a:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1355e:	60 e4       	ldi	r22, 0x40	; 64
   13560:	76 e3       	ldi	r23, 0x36	; 54
   13562:	86 ec       	ldi	r24, 0xC6	; 198
   13564:	94 e1       	ldi	r25, 0x14	; 20
   13566:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1356a:	b8 01       	movw	r22, r16
   1356c:	6a 5e       	subi	r22, 0xEA	; 234
   1356e:	73 4f       	sbci	r23, 0xF3	; 243
   13570:	86 ec       	ldi	r24, 0xC6	; 198
   13572:	94 e1       	ldi	r25, 0x14	; 20
   13574:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   13578:	86 ec       	ldi	r24, 0xC6	; 198
   1357a:	94 e1       	ldi	r25, 0x14	; 20
   1357c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13580:	03 5f       	subi	r16, 0xF3	; 243
   13582:	1f 4f       	sbci	r17, 0xFF	; 255
   13584:	0e 34       	cpi	r16, 0x4E	; 78
   13586:	11 05       	cpc	r17, r1
   13588:	31 f7       	brne	.-52     	; 0x13556 <_Z12Pub_Sub_DataPcPhjh+0xeda>
   1358a:	af cf       	rjmp	.-162    	; 0x134ea <_Z12Pub_Sub_DataPcPhjh+0xe6e>
   1358c:	b4 e6       	ldi	r27, 0x64	; 100
   1358e:	b9 15       	cp	r27, r9
   13590:	08 f0       	brcs	.+2      	; 0x13594 <_Z12Pub_Sub_DataPcPhjh+0xf18>
   13592:	3e c1       	rjmp	.+636    	; 0x13810 <_Z12Pub_Sub_DataPcPhjh+0x1194>
   13594:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13598:	09 2d       	mov	r16, r9
   1359a:	10 e0       	ldi	r17, 0x00	; 0
   1359c:	81 30       	cpi	r24, 0x01	; 1
   1359e:	09 f4       	brne	.+2      	; 0x135a2 <_Z12Pub_Sub_DataPcPhjh+0xf26>
   135a0:	57 c0       	rjmp	.+174    	; 0x13650 <_Z12Pub_Sub_DataPcPhjh+0xfd4>
   135a2:	78 01       	movw	r14, r16
   135a4:	e5 e6       	ldi	r30, 0x65	; 101
   135a6:	ee 1a       	sub	r14, r30
   135a8:	f1 08       	sbc	r15, r1
   135aa:	6f ef       	ldi	r22, 0xFF	; 255
   135ac:	75 e3       	ldi	r23, 0x35	; 53
   135ae:	c2 01       	movw	r24, r4
   135b0:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   135b4:	60 e0       	ldi	r22, 0x00	; 0
   135b6:	70 e0       	ldi	r23, 0x00	; 0
   135b8:	0e 94 b8 8d 	call	0x11b70	; 0x11b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   135bc:	2b e1       	ldi	r18, 0x1B	; 27
   135be:	2e 9d       	mul	r18, r14
   135c0:	80 01       	movw	r16, r0
   135c2:	2f 9d       	mul	r18, r15
   135c4:	10 0d       	add	r17, r0
   135c6:	11 24       	eor	r1, r1
   135c8:	08 51       	subi	r16, 0x18	; 24
   135ca:	12 4f       	sbci	r17, 0xF2	; 242
   135cc:	d8 01       	movw	r26, r16
   135ce:	1d 96       	adiw	r26, 0x0d	; 13
   135d0:	9c 93       	st	X, r25
   135d2:	8e 93       	st	-X, r24
   135d4:	1c 97       	sbiw	r26, 0x0c	; 12
   135d6:	6b ef       	ldi	r22, 0xFB	; 251
   135d8:	75 e3       	ldi	r23, 0x35	; 53
   135da:	c2 01       	movw	r24, r4
   135dc:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   135e0:	61 e0       	ldi	r22, 0x01	; 1
   135e2:	70 e0       	ldi	r23, 0x00	; 0
   135e4:	0e 94 b8 8d 	call	0x11b70	; 0x11b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   135e8:	f8 01       	movw	r30, r16
   135ea:	97 87       	std	Z+15, r25	; 0x0f
   135ec:	86 87       	std	Z+14, r24	; 0x0e
   135ee:	67 ef       	ldi	r22, 0xF7	; 247
   135f0:	75 e3       	ldi	r23, 0x35	; 53
   135f2:	c2 01       	movw	r24, r4
   135f4:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   135f8:	60 e0       	ldi	r22, 0x00	; 0
   135fa:	70 e0       	ldi	r23, 0x00	; 0
   135fc:	0e 94 b8 8d 	call	0x11b70	; 0x11b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13600:	d8 01       	movw	r26, r16
   13602:	53 96       	adiw	r26, 0x13	; 19
   13604:	9c 93       	st	X, r25
   13606:	8e 93       	st	-X, r24
   13608:	52 97       	sbiw	r26, 0x12	; 18
   1360a:	63 ef       	ldi	r22, 0xF3	; 243
   1360c:	75 e3       	ldi	r23, 0x35	; 53
   1360e:	c2 01       	movw	r24, r4
   13610:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13614:	61 e0       	ldi	r22, 0x01	; 1
   13616:	70 e0       	ldi	r23, 0x00	; 0
   13618:	0e 94 b8 8d 	call	0x11b70	; 0x11b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1361c:	f8 01       	movw	r30, r16
   1361e:	95 8b       	std	Z+21, r25	; 0x15
   13620:	84 8b       	std	Z+20, r24	; 0x14
   13622:	6a ee       	ldi	r22, 0xEA	; 234
   13624:	75 e3       	ldi	r23, 0x35	; 53
   13626:	c2 01       	movw	r24, r4
   13628:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1362c:	d8 01       	movw	r26, r16
   1362e:	58 96       	adiw	r26, 0x18	; 24
   13630:	8c 93       	st	X, r24
   13632:	58 97       	sbiw	r26, 0x18	; 24
   13634:	1a 96       	adiw	r26, 0x0a	; 10
   13636:	1c 92       	st	X, r1
   13638:	1a 97       	sbiw	r26, 0x0a	; 10
   1363a:	1b 96       	adiw	r26, 0x0b	; 11
   1363c:	1c 92       	st	X, r1
   1363e:	1b 97       	sbiw	r26, 0x0b	; 11
   13640:	14 96       	adiw	r26, 0x04	; 4
   13642:	1c 92       	st	X, r1
   13644:	1e 92       	st	-X, r1
   13646:	13 97       	sbiw	r26, 0x03	; 3
   13648:	b9 e6       	ldi	r27, 0x69	; 105
   1364a:	9b 12       	cpse	r9, r27
   1364c:	7b c0       	rjmp	.+246    	; 0x13744 <_Z12Pub_Sub_DataPcPhjh+0x10c8>
   1364e:	47 c0       	rjmp	.+142    	; 0x136de <_Z12Pub_Sub_DataPcPhjh+0x1062>
   13650:	64 e2       	ldi	r22, 0x24	; 36
   13652:	76 e3       	ldi	r23, 0x36	; 54
   13654:	86 ec       	ldi	r24, 0xC6	; 198
   13656:	94 e1       	ldi	r25, 0x14	; 20
   13658:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1365c:	6f e0       	ldi	r22, 0x0F	; 15
   1365e:	76 e3       	ldi	r23, 0x36	; 54
   13660:	86 ec       	ldi	r24, 0xC6	; 198
   13662:	94 e1       	ldi	r25, 0x14	; 20
   13664:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13668:	c8 01       	movw	r24, r16
   1366a:	85 56       	subi	r24, 0x65	; 101
   1366c:	91 09       	sbc	r25, r1
   1366e:	2b e1       	ldi	r18, 0x1B	; 27
   13670:	28 9f       	mul	r18, r24
   13672:	60 01       	movw	r12, r0
   13674:	29 9f       	mul	r18, r25
   13676:	d0 0c       	add	r13, r0
   13678:	11 24       	eor	r1, r1
   1367a:	f6 01       	movw	r30, r12
   1367c:	e8 51       	subi	r30, 0x18	; 24
   1367e:	f2 4f       	sbci	r31, 0xF2	; 242
   13680:	4a e0       	ldi	r20, 0x0A	; 10
   13682:	50 e0       	ldi	r21, 0x00	; 0
   13684:	61 81       	ldd	r22, Z+1	; 0x01
   13686:	86 ec       	ldi	r24, 0xC6	; 198
   13688:	94 e1       	ldi	r25, 0x14	; 20
   1368a:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   1368e:	86 ec       	ldi	r24, 0xC6	; 198
   13690:	94 e1       	ldi	r25, 0x14	; 20
   13692:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13696:	e1 2c       	mov	r14, r1
   13698:	f1 2c       	mov	r15, r1
   1369a:	86 ec       	ldi	r24, 0xC6	; 198
   1369c:	94 e1       	ldi	r25, 0x14	; 20
   1369e:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   136a2:	63 e0       	ldi	r22, 0x03	; 3
   136a4:	76 e3       	ldi	r23, 0x36	; 54
   136a6:	86 ec       	ldi	r24, 0xC6	; 198
   136a8:	94 e1       	ldi	r25, 0x14	; 20
   136aa:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   136ae:	f6 01       	movw	r30, r12
   136b0:	ee 0d       	add	r30, r14
   136b2:	ff 1d       	adc	r31, r15
   136b4:	e8 51       	subi	r30, 0x18	; 24
   136b6:	f2 4f       	sbci	r31, 0xF2	; 242
   136b8:	4a e0       	ldi	r20, 0x0A	; 10
   136ba:	50 e0       	ldi	r21, 0x00	; 0
   136bc:	65 81       	ldd	r22, Z+5	; 0x05
   136be:	86 ec       	ldi	r24, 0xC6	; 198
   136c0:	94 e1       	ldi	r25, 0x14	; 20
   136c2:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   136c6:	86 ec       	ldi	r24, 0xC6	; 198
   136c8:	94 e1       	ldi	r25, 0x14	; 20
   136ca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   136ce:	ef ef       	ldi	r30, 0xFF	; 255
   136d0:	ee 1a       	sub	r14, r30
   136d2:	fe 0a       	sbc	r15, r30
   136d4:	f5 e0       	ldi	r31, 0x05	; 5
   136d6:	ef 16       	cp	r14, r31
   136d8:	f1 04       	cpc	r15, r1
   136da:	f9 f6       	brne	.-66     	; 0x1369a <_Z12Pub_Sub_DataPcPhjh+0x101e>
   136dc:	62 cf       	rjmp	.-316    	; 0x135a2 <_Z12Pub_Sub_DataPcPhjh+0xf26>
   136de:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
   136e2:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
   136e6:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
   136ea:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
   136ee:	d8 01       	movw	r26, r16
   136f0:	1c 96       	adiw	r26, 0x0c	; 12
   136f2:	8d 91       	ld	r24, X+
   136f4:	9c 91       	ld	r25, X
   136f6:	1d 97       	sbiw	r26, 0x0d	; 13
   136f8:	00 97       	sbiw	r24, 0x00	; 0
   136fa:	e1 f0       	breq	.+56     	; 0x13734 <_Z12Pub_Sub_DataPcPhjh+0x10b8>
   136fc:	52 96       	adiw	r26, 0x12	; 18
   136fe:	6d 91       	ld	r22, X+
   13700:	7c 91       	ld	r23, X
   13702:	53 97       	sbiw	r26, 0x13	; 19
   13704:	40 e1       	ldi	r20, 0x10	; 16
   13706:	5e e0       	ldi	r21, 0x0E	; 14
   13708:	64 9f       	mul	r22, r20
   1370a:	90 01       	movw	r18, r0
   1370c:	65 9f       	mul	r22, r21
   1370e:	30 0d       	add	r19, r0
   13710:	74 9f       	mul	r23, r20
   13712:	30 0d       	add	r19, r0
   13714:	11 24       	eor	r1, r1
   13716:	30 93 e9 0b 	sts	0x0BE9, r19	; 0x800be9 <_sSchedules+0x2cb>
   1371a:	20 93 e8 0b 	sts	0x0BE8, r18	; 0x800be8 <_sSchedules+0x2ca>
   1371e:	4c e3       	ldi	r20, 0x3C	; 60
   13720:	48 9f       	mul	r20, r24
   13722:	90 01       	movw	r18, r0
   13724:	49 9f       	mul	r20, r25
   13726:	30 0d       	add	r19, r0
   13728:	11 24       	eor	r1, r1
   1372a:	30 93 eb 0b 	sts	0x0BEB, r19	; 0x800beb <_sSchedules+0x2cd>
   1372e:	20 93 ea 0b 	sts	0x0BEA, r18	; 0x800bea <_sSchedules+0x2cc>
   13732:	08 c0       	rjmp	.+16     	; 0x13744 <_Z12Pub_Sub_DataPcPhjh+0x10c8>
   13734:	10 92 eb 0b 	sts	0x0BEB, r1	; 0x800beb <_sSchedules+0x2cd>
   13738:	10 92 ea 0b 	sts	0x0BEA, r1	; 0x800bea <_sSchedules+0x2cc>
   1373c:	10 92 e9 0b 	sts	0x0BE9, r1	; 0x800be9 <_sSchedules+0x2cb>
   13740:	10 92 e8 0b 	sts	0x0BE8, r1	; 0x800be8 <_sSchedules+0x2ca>
   13744:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13748:	81 30       	cpi	r24, 0x01	; 1
   1374a:	09 f0       	breq	.+2      	; 0x1374e <_Z12Pub_Sub_DataPcPhjh+0x10d2>
   1374c:	57 c0       	rjmp	.+174    	; 0x137fc <_Z12Pub_Sub_DataPcPhjh+0x1180>
   1374e:	8b e1       	ldi	r24, 0x1B	; 27
   13750:	8e 9d       	mul	r24, r14
   13752:	80 01       	movw	r16, r0
   13754:	8f 9d       	mul	r24, r15
   13756:	10 0d       	add	r17, r0
   13758:	11 24       	eor	r1, r1
   1375a:	0c 50       	subi	r16, 0x0C	; 12
   1375c:	12 4f       	sbci	r17, 0xF2	; 242
   1375e:	82 e0       	ldi	r24, 0x02	; 2
   13760:	d8 2e       	mov	r13, r24
   13762:	86 ec       	ldi	r24, 0xC6	; 198
   13764:	94 e1       	ldi	r25, 0x14	; 20
   13766:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1376a:	63 ee       	ldi	r22, 0xE3	; 227
   1376c:	75 e3       	ldi	r23, 0x35	; 53
   1376e:	86 ec       	ldi	r24, 0xC6	; 198
   13770:	94 e1       	ldi	r25, 0x14	; 20
   13772:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13776:	f8 01       	movw	r30, r16
   13778:	61 91       	ld	r22, Z+
   1377a:	71 91       	ld	r23, Z+
   1377c:	8f 01       	movw	r16, r30
   1377e:	4a e0       	ldi	r20, 0x0A	; 10
   13780:	50 e0       	ldi	r21, 0x00	; 0
   13782:	86 ec       	ldi	r24, 0xC6	; 198
   13784:	94 e1       	ldi	r25, 0x14	; 20
   13786:	0e 94 3a d5 	call	0x1aa74	; 0x1aa74 <_ZN5Print5printEji>
   1378a:	86 ec       	ldi	r24, 0xC6	; 198
   1378c:	94 e1       	ldi	r25, 0x14	; 20
   1378e:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   13792:	6c ed       	ldi	r22, 0xDC	; 220
   13794:	75 e3       	ldi	r23, 0x35	; 53
   13796:	86 ec       	ldi	r24, 0xC6	; 198
   13798:	94 e1       	ldi	r25, 0x14	; 20
   1379a:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1379e:	d8 01       	movw	r26, r16
   137a0:	14 96       	adiw	r26, 0x04	; 4
   137a2:	6d 91       	ld	r22, X+
   137a4:	7c 91       	ld	r23, X
   137a6:	15 97       	sbiw	r26, 0x05	; 5
   137a8:	4a e0       	ldi	r20, 0x0A	; 10
   137aa:	50 e0       	ldi	r21, 0x00	; 0
   137ac:	86 ec       	ldi	r24, 0xC6	; 198
   137ae:	94 e1       	ldi	r25, 0x14	; 20
   137b0:	0e 94 3a d5 	call	0x1aa74	; 0x1aa74 <_ZN5Print5printEji>
   137b4:	86 ec       	ldi	r24, 0xC6	; 198
   137b6:	94 e1       	ldi	r25, 0x14	; 20
   137b8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   137bc:	da 94       	dec	r13
   137be:	d1 10       	cpse	r13, r1
   137c0:	d0 cf       	rjmp	.-96     	; 0x13762 <_Z12Pub_Sub_DataPcPhjh+0x10e6>
   137c2:	86 ec       	ldi	r24, 0xC6	; 198
   137c4:	94 e1       	ldi	r25, 0x14	; 20
   137c6:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   137ca:	60 ed       	ldi	r22, 0xD0	; 208
   137cc:	75 e3       	ldi	r23, 0x35	; 53
   137ce:	86 ec       	ldi	r24, 0xC6	; 198
   137d0:	94 e1       	ldi	r25, 0x14	; 20
   137d2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   137d6:	8b e1       	ldi	r24, 0x1B	; 27
   137d8:	8e 9d       	mul	r24, r14
   137da:	f0 01       	movw	r30, r0
   137dc:	8f 9d       	mul	r24, r15
   137de:	f0 0d       	add	r31, r0
   137e0:	11 24       	eor	r1, r1
   137e2:	e8 51       	subi	r30, 0x18	; 24
   137e4:	f2 4f       	sbci	r31, 0xF2	; 242
   137e6:	4a e0       	ldi	r20, 0x0A	; 10
   137e8:	50 e0       	ldi	r21, 0x00	; 0
   137ea:	60 8d       	ldd	r22, Z+24	; 0x18
   137ec:	86 ec       	ldi	r24, 0xC6	; 198
   137ee:	94 e1       	ldi	r25, 0x14	; 20
   137f0:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   137f4:	86 ec       	ldi	r24, 0xC6	; 198
   137f6:	94 e1       	ldi	r25, 0x14	; 20
   137f8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   137fc:	8c e9       	ldi	r24, 0x9C	; 156
   137fe:	89 0d       	add	r24, r9
   13800:	0e 94 89 7a 	call	0xf512	; 0xf512 <_Z21Exra_Plot_Data_EEPROMh>
   13804:	b1 e0       	ldi	r27, 0x01	; 1
   13806:	c0 55       	subi	r28, 0x50	; 80
   13808:	d9 4f       	sbci	r29, 0xF9	; 249
   1380a:	b8 83       	st	Y, r27
   1380c:	c0 5b       	subi	r28, 0xB0	; 176
   1380e:	d6 40       	sbci	r29, 0x06	; 6
   13810:	8e 01       	movw	r16, r28
   13812:	0b 57       	subi	r16, 0x7B	; 123
   13814:	19 4f       	sbci	r17, 0xF9	; 249
   13816:	88 e2       	ldi	r24, 0x28	; 40
   13818:	f8 01       	movw	r30, r16
   1381a:	11 92       	st	Z+, r1
   1381c:	8a 95       	dec	r24
   1381e:	e9 f7       	brne	.-6      	; 0x1381a <_Z12Pub_Sub_DataPcPhjh+0x119e>
   13820:	8e ec       	ldi	r24, 0xCE	; 206
   13822:	93 e1       	ldi	r25, 0x13	; 19
   13824:	9f 93       	push	r25
   13826:	8f 93       	push	r24
   13828:	8d e9       	ldi	r24, 0x9D	; 157
   1382a:	95 e0       	ldi	r25, 0x05	; 5
   1382c:	9f 93       	push	r25
   1382e:	8f 93       	push	r24
   13830:	1f 93       	push	r17
   13832:	0f 93       	push	r16
   13834:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   13838:	ca 54       	subi	r28, 0x4A	; 74
   1383a:	d9 4f       	sbci	r29, 0xF9	; 249
   1383c:	68 81       	ld	r22, Y
   1383e:	79 81       	ldd	r23, Y+1	; 0x01
   13840:	c6 5b       	subi	r28, 0xB6	; 182
   13842:	d6 40       	sbci	r29, 0x06	; 6
   13844:	c8 01       	movw	r24, r16
   13846:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   1384a:	0f 90       	pop	r0
   1384c:	0f 90       	pop	r0
   1384e:	0f 90       	pop	r0
   13850:	0f 90       	pop	r0
   13852:	0f 90       	pop	r0
   13854:	0f 90       	pop	r0
   13856:	89 2b       	or	r24, r25
   13858:	09 f0       	breq	.+2      	; 0x1385c <_Z12Pub_Sub_DataPcPhjh+0x11e0>
   1385a:	f4 c1       	rjmp	.+1000   	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   1385c:	6b ec       	ldi	r22, 0xCB	; 203
   1385e:	75 e3       	ldi	r23, 0x35	; 53
   13860:	c2 01       	movw	r24, r4
   13862:	0e 94 b0 8d 	call	0x11b60	; 0x11b60 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13866:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   1386a:	fc 01       	movw	r30, r24
   1386c:	31 97       	sbiw	r30, 0x01	; 1
   1386e:	e8 30       	cpi	r30, 0x08	; 8
   13870:	f1 05       	cpc	r31, r1
   13872:	08 f0       	brcs	.+2      	; 0x13876 <_Z12Pub_Sub_DataPcPhjh+0x11fa>
   13874:	e1 c1       	rjmp	.+962    	; 0x13c38 <_Z12Pub_Sub_DataPcPhjh+0x15bc>
   13876:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1387a:	88 27       	eor	r24, r24
   1387c:	e1 51       	subi	r30, 0x11	; 17
   1387e:	ff 4f       	sbci	r31, 0xFF	; 255
   13880:	8f 4f       	sbci	r24, 0xFF	; 255
   13882:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
   13886:	91 30       	cpi	r25, 0x01	; 1
   13888:	51 f4       	brne	.+20     	; 0x1389e <_Z12Pub_Sub_DataPcPhjh+0x1222>
   1388a:	65 eb       	ldi	r22, 0xB5	; 181
   1388c:	75 e3       	ldi	r23, 0x35	; 53
   1388e:	86 ec       	ldi	r24, 0xC6	; 198
   13890:	94 e1       	ldi	r25, 0x14	; 20
   13892:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13896:	86 ec       	ldi	r24, 0xC6	; 198
   13898:	94 e1       	ldi	r25, 0x14	; 20
   1389a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1389e:	61 eb       	ldi	r22, 0xB1	; 177
   138a0:	75 e3       	ldi	r23, 0x35	; 53
   138a2:	c2 01       	movw	r24, r4
   138a4:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   138a8:	bc 01       	movw	r22, r24
   138aa:	ce 01       	movw	r24, r28
   138ac:	83 5a       	subi	r24, 0xA3	; 163
   138ae:	99 4f       	sbci	r25, 0xF9	; 249
   138b0:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   138b4:	25 e1       	ldi	r18, 0x15	; 21
   138b6:	3c e0       	ldi	r19, 0x0C	; 12
   138b8:	61 2c       	mov	r6, r1
   138ba:	71 2c       	mov	r7, r1
   138bc:	96 2c       	mov	r9, r6
   138be:	fe 01       	movw	r30, r28
   138c0:	e3 5a       	subi	r30, 0xA3	; 163
   138c2:	f9 4f       	sbci	r31, 0xF9	; 249
   138c4:	80 e0       	ldi	r24, 0x00	; 0
   138c6:	90 e0       	ldi	r25, 0x00	; 0
   138c8:	40 e0       	ldi	r20, 0x00	; 0
   138ca:	51 91       	ld	r21, Z+
   138cc:	d9 01       	movw	r26, r18
   138ce:	a8 0f       	add	r26, r24
   138d0:	b9 1f       	adc	r27, r25
   138d2:	11 96       	adiw	r26, 0x01	; 1
   138d4:	6c 91       	ld	r22, X
   138d6:	65 13       	cpse	r22, r21
   138d8:	01 c0       	rjmp	.+2      	; 0x138dc <_Z12Pub_Sub_DataPcPhjh+0x1260>
   138da:	4f 5f       	subi	r20, 0xFF	; 255
   138dc:	01 96       	adiw	r24, 0x01	; 1
   138de:	86 30       	cpi	r24, 0x06	; 6
   138e0:	91 05       	cpc	r25, r1
   138e2:	99 f7       	brne	.-26     	; 0x138ca <_Z12Pub_Sub_DataPcPhjh+0x124e>
   138e4:	c3 01       	movw	r24, r6
   138e6:	01 96       	adiw	r24, 0x01	; 1
   138e8:	7c 01       	movw	r14, r24
   138ea:	46 30       	cpi	r20, 0x06	; 6
   138ec:	09 f0       	breq	.+2      	; 0x138f0 <_Z12Pub_Sub_DataPcPhjh+0x1274>
   138ee:	b1 c0       	rjmp	.+354    	; 0x13a52 <_Z12Pub_Sub_DataPcPhjh+0x13d6>
   138f0:	8d e0       	ldi	r24, 0x0D	; 13
   138f2:	86 9d       	mul	r24, r6
   138f4:	60 01       	movw	r12, r0
   138f6:	87 9d       	mul	r24, r7
   138f8:	d0 0c       	add	r13, r0
   138fa:	11 24       	eor	r1, r1
   138fc:	d6 01       	movw	r26, r12
   138fe:	aa 5e       	subi	r26, 0xEA	; 234
   13900:	b3 4f       	sbci	r27, 0xF3	; 243
   13902:	5d 01       	movw	r10, r26
   13904:	63 e1       	ldi	r22, 0x13	; 19
   13906:	77 e0       	ldi	r23, 0x07	; 7
   13908:	cd 01       	movw	r24, r26
   1390a:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   1390e:	27 e0       	ldi	r18, 0x07	; 7
   13910:	26 9d       	mul	r18, r6
   13912:	c0 01       	movw	r24, r0
   13914:	27 9d       	mul	r18, r7
   13916:	90 0d       	add	r25, r0
   13918:	11 24       	eor	r1, r1
   1391a:	b5 01       	movw	r22, r10
   1391c:	8e 5d       	subi	r24, 0xDE	; 222
   1391e:	9b 4e       	sbci	r25, 0xEB	; 235
   13920:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   13924:	f6 01       	movw	r30, r12
   13926:	eb 5e       	subi	r30, 0xEB	; 235
   13928:	f3 4f       	sbci	r31, 0xF3	; 243
   1392a:	6f 01       	movw	r12, r30
   1392c:	10 82       	st	Z, r1
   1392e:	8f ef       	ldi	r24, 0xFF	; 255
   13930:	90 e0       	ldi	r25, 0x00	; 0
   13932:	91 87       	std	Z+9, r25	; 0x09
   13934:	80 87       	std	Z+8, r24	; 0x08
   13936:	81 e0       	ldi	r24, 0x01	; 1
   13938:	83 87       	std	Z+11, r24	; 0x0b
   1393a:	12 86       	std	Z+10, r1	; 0x0a
   1393c:	14 86       	std	Z+12, r1	; 0x0c
   1393e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13942:	81 30       	cpi	r24, 0x01	; 1
   13944:	79 f5       	brne	.+94     	; 0x139a4 <_Z12Pub_Sub_DataPcPhjh+0x1328>
   13946:	66 e9       	ldi	r22, 0x96	; 150
   13948:	75 e3       	ldi	r23, 0x35	; 53
   1394a:	86 ec       	ldi	r24, 0xC6	; 198
   1394c:	94 e1       	ldi	r25, 0x14	; 20
   1394e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13952:	86 ec       	ldi	r24, 0xC6	; 198
   13954:	94 e1       	ldi	r25, 0x14	; 20
   13956:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1395a:	6b e8       	ldi	r22, 0x8B	; 139
   1395c:	75 e3       	ldi	r23, 0x35	; 53
   1395e:	86 ec       	ldi	r24, 0xC6	; 198
   13960:	94 e1       	ldi	r25, 0x14	; 20
   13962:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13966:	86 ec       	ldi	r24, 0xC6	; 198
   13968:	94 e1       	ldi	r25, 0x14	; 20
   1396a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1396e:	4a e0       	ldi	r20, 0x0A	; 10
   13970:	50 e0       	ldi	r21, 0x00	; 0
   13972:	d6 01       	movw	r26, r12
   13974:	6c 91       	ld	r22, X
   13976:	86 ec       	ldi	r24, 0xC6	; 198
   13978:	94 e1       	ldi	r25, 0x14	; 20
   1397a:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   1397e:	60 e8       	ldi	r22, 0x80	; 128
   13980:	75 e3       	ldi	r23, 0x35	; 53
   13982:	86 ec       	ldi	r24, 0xC6	; 198
   13984:	94 e1       	ldi	r25, 0x14	; 20
   13986:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1398a:	86 ec       	ldi	r24, 0xC6	; 198
   1398c:	94 e1       	ldi	r25, 0x14	; 20
   1398e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13992:	b5 01       	movw	r22, r10
   13994:	86 ec       	ldi	r24, 0xC6	; 198
   13996:	94 e1       	ldi	r25, 0x14	; 20
   13998:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   1399c:	86 ec       	ldi	r24, 0xC6	; 198
   1399e:	94 e1       	ldi	r25, 0x14	; 20
   139a0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   139a4:	89 2d       	mov	r24, r9
   139a6:	0e 94 32 5c 	call	0xb864	; 0xb864 <_Z16Euro_Data_EEPROMh>
   139aa:	b5 e0       	ldi	r27, 0x05	; 5
   139ac:	6b 0e       	add	r6, r27
   139ae:	71 1c       	adc	r7, r1
   139b0:	ae e4       	ldi	r26, 0x4E	; 78
   139b2:	8a 2e       	mov	r8, r26
   139b4:	ad e0       	ldi	r26, 0x0D	; 13
   139b6:	9a 2e       	mov	r9, r26
   139b8:	cc 24       	eor	r12, r12
   139ba:	c3 94       	inc	r12
   139bc:	d1 2c       	mov	r13, r1
   139be:	22 24       	eor	r2, r2
   139c0:	2a 94       	dec	r2
   139c2:	2c 0c       	add	r2, r12
   139c4:	54 01       	movw	r10, r8
   139c6:	f5 e0       	ldi	r31, 0x05	; 5
   139c8:	3f 2e       	mov	r3, r31
   139ca:	f5 01       	movw	r30, r10
   139cc:	81 81       	ldd	r24, Z+1	; 0x01
   139ce:	88 23       	and	r24, r24
   139d0:	09 f1       	breq	.+66     	; 0x13a14 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   139d2:	90 e0       	ldi	r25, 0x00	; 0
   139d4:	8e 15       	cp	r24, r14
   139d6:	9f 05       	cpc	r25, r15
   139d8:	e9 f4       	brne	.+58     	; 0x13a14 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   139da:	11 82       	std	Z+1, r1	; 0x01
   139dc:	82 2d       	mov	r24, r2
   139de:	0e 94 f6 7e 	call	0xfdec	; 0xfdec <_Z16Lira_Data_EEPROMh>
   139e2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   139e6:	81 30       	cpi	r24, 0x01	; 1
   139e8:	a9 f4       	brne	.+42     	; 0x13a14 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   139ea:	63 e6       	ldi	r22, 0x63	; 99
   139ec:	75 e3       	ldi	r23, 0x35	; 53
   139ee:	86 ec       	ldi	r24, 0xC6	; 198
   139f0:	94 e1       	ldi	r25, 0x14	; 20
   139f2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   139f6:	86 ec       	ldi	r24, 0xC6	; 198
   139f8:	94 e1       	ldi	r25, 0x14	; 20
   139fa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   139fe:	4a e0       	ldi	r20, 0x0A	; 10
   13a00:	50 e0       	ldi	r21, 0x00	; 0
   13a02:	b6 01       	movw	r22, r12
   13a04:	86 ec       	ldi	r24, 0xC6	; 198
   13a06:	94 e1       	ldi	r25, 0x14	; 20
   13a08:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
   13a0c:	86 ec       	ldi	r24, 0xC6	; 198
   13a0e:	94 e1       	ldi	r25, 0x14	; 20
   13a10:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13a14:	3a 94       	dec	r3
   13a16:	ff ef       	ldi	r31, 0xFF	; 255
   13a18:	af 1a       	sub	r10, r31
   13a1a:	bf 0a       	sbc	r11, r31
   13a1c:	31 10       	cpse	r3, r1
   13a1e:	d5 cf       	rjmp	.-86     	; 0x139ca <_Z12Pub_Sub_DataPcPhjh+0x134e>
   13a20:	2f ef       	ldi	r18, 0xFF	; 255
   13a22:	c2 1a       	sub	r12, r18
   13a24:	d2 0a       	sbc	r13, r18
   13a26:	36 e0       	ldi	r19, 0x06	; 6
   13a28:	83 0e       	add	r8, r19
   13a2a:	91 1c       	adc	r9, r1
   13a2c:	4f e0       	ldi	r20, 0x0F	; 15
   13a2e:	c4 16       	cp	r12, r20
   13a30:	d1 04       	cpc	r13, r1
   13a32:	29 f6       	brne	.-118    	; 0x139be <_Z12Pub_Sub_DataPcPhjh+0x1342>
   13a34:	5f ef       	ldi	r21, 0xFF	; 255
   13a36:	e5 1a       	sub	r14, r21
   13a38:	f5 0a       	sbc	r15, r21
   13a3a:	6e 14       	cp	r6, r14
   13a3c:	7f 04       	cpc	r7, r15
   13a3e:	09 f0       	breq	.+2      	; 0x13a42 <_Z12Pub_Sub_DataPcPhjh+0x13c6>
   13a40:	b7 cf       	rjmp	.-146    	; 0x139b0 <_Z12Pub_Sub_DataPcPhjh+0x1334>
   13a42:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13a46:	81 30       	cpi	r24, 0x01	; 1
   13a48:	09 f0       	breq	.+2      	; 0x13a4c <_Z12Pub_Sub_DataPcPhjh+0x13d0>
   13a4a:	ef c0       	rjmp	.+478    	; 0x13c2a <_Z12Pub_Sub_DataPcPhjh+0x15ae>
   13a4c:	e1 2c       	mov	r14, r1
   13a4e:	f1 2c       	mov	r15, r1
   13a50:	09 c0       	rjmp	.+18     	; 0x13a64 <_Z12Pub_Sub_DataPcPhjh+0x13e8>
   13a52:	3c 01       	movw	r6, r24
   13a54:	23 5f       	subi	r18, 0xF3	; 243
   13a56:	3f 4f       	sbci	r19, 0xFF	; 255
   13a58:	86 e0       	ldi	r24, 0x06	; 6
   13a5a:	e8 16       	cp	r14, r24
   13a5c:	f1 04       	cpc	r15, r1
   13a5e:	09 f0       	breq	.+2      	; 0x13a62 <_Z12Pub_Sub_DataPcPhjh+0x13e6>
   13a60:	2d cf       	rjmp	.-422    	; 0x138bc <_Z12Pub_Sub_DataPcPhjh+0x1240>
   13a62:	ef cf       	rjmp	.-34     	; 0x13a42 <_Z12Pub_Sub_DataPcPhjh+0x13c6>
   13a64:	86 ec       	ldi	r24, 0xC6	; 198
   13a66:	94 e1       	ldi	r25, 0x14	; 20
   13a68:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   13a6c:	68 e5       	ldi	r22, 0x58	; 88
   13a6e:	75 e3       	ldi	r23, 0x35	; 53
   13a70:	86 ec       	ldi	r24, 0xC6	; 198
   13a72:	94 e1       	ldi	r25, 0x14	; 20
   13a74:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13a78:	86 ec       	ldi	r24, 0xC6	; 198
   13a7a:	94 e1       	ldi	r25, 0x14	; 20
   13a7c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13a80:	b7 01       	movw	r22, r14
   13a82:	6a 5e       	subi	r22, 0xEA	; 234
   13a84:	73 4f       	sbci	r23, 0xF3	; 243
   13a86:	86 ec       	ldi	r24, 0xC6	; 198
   13a88:	94 e1       	ldi	r25, 0x14	; 20
   13a8a:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   13a8e:	86 ec       	ldi	r24, 0xC6	; 198
   13a90:	94 e1       	ldi	r25, 0x14	; 20
   13a92:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13a96:	ad e0       	ldi	r26, 0x0D	; 13
   13a98:	ea 0e       	add	r14, r26
   13a9a:	f1 1c       	adc	r15, r1
   13a9c:	be e4       	ldi	r27, 0x4E	; 78
   13a9e:	eb 16       	cp	r14, r27
   13aa0:	f1 04       	cpc	r15, r1
   13aa2:	01 f7       	brne	.-64     	; 0x13a64 <_Z12Pub_Sub_DataPcPhjh+0x13e8>
   13aa4:	c2 c0       	rjmp	.+388    	; 0x13c2a <_Z12Pub_Sub_DataPcPhjh+0x15ae>
   13aa6:	91 30       	cpi	r25, 0x01	; 1
   13aa8:	51 f4       	brne	.+20     	; 0x13abe <_Z12Pub_Sub_DataPcPhjh+0x1442>
   13aaa:	63 e4       	ldi	r22, 0x43	; 67
   13aac:	75 e3       	ldi	r23, 0x35	; 53
   13aae:	86 ec       	ldi	r24, 0xC6	; 198
   13ab0:	94 e1       	ldi	r25, 0x14	; 20
   13ab2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13ab6:	86 ec       	ldi	r24, 0xC6	; 198
   13ab8:	94 e1       	ldi	r25, 0x14	; 20
   13aba:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13abe:	6a e3       	ldi	r22, 0x3A	; 58
   13ac0:	75 e3       	ldi	r23, 0x35	; 53
   13ac2:	c2 01       	movw	r24, r4
   13ac4:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ac8:	90 e0       	ldi	r25, 0x00	; 0
   13aca:	01 97       	sbiw	r24, 0x01	; 1
   13acc:	26 e0       	ldi	r18, 0x06	; 6
   13ace:	28 9f       	mul	r18, r24
   13ad0:	f0 01       	movw	r30, r0
   13ad2:	29 9f       	mul	r18, r25
   13ad4:	f0 0d       	add	r31, r0
   13ad6:	11 24       	eor	r1, r1
   13ad8:	e2 5b       	subi	r30, 0xB2	; 178
   13ada:	f2 4f       	sbci	r31, 0xF2	; 242
   13adc:	10 82       	st	Z, r1
   13ade:	e1 e0       	ldi	r30, 0x01	; 1
   13ae0:	c0 55       	subi	r28, 0x50	; 80
   13ae2:	d9 4f       	sbci	r29, 0xF9	; 249
   13ae4:	e8 83       	st	Y, r30
   13ae6:	c0 5b       	subi	r28, 0xB0	; 176
   13ae8:	d6 40       	sbci	r29, 0x06	; 6
   13aea:	ac c0       	rjmp	.+344    	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13aec:	91 30       	cpi	r25, 0x01	; 1
   13aee:	51 f4       	brne	.+20     	; 0x13b04 <_Z12Pub_Sub_DataPcPhjh+0x1488>
   13af0:	6c e1       	ldi	r22, 0x1C	; 28
   13af2:	75 e3       	ldi	r23, 0x35	; 53
   13af4:	86 ec       	ldi	r24, 0xC6	; 198
   13af6:	94 e1       	ldi	r25, 0x14	; 20
   13af8:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13afc:	86 ec       	ldi	r24, 0xC6	; 198
   13afe:	94 e1       	ldi	r25, 0x14	; 20
   13b00:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13b04:	62 e1       	ldi	r22, 0x12	; 18
   13b06:	75 e3       	ldi	r23, 0x35	; 53
   13b08:	c2 01       	movw	r24, r4
   13b0a:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13b0e:	0e 94 06 33 	call	0x660c	; 0x660c <_Z15Delete_Scheduleh>
   13b12:	f1 e0       	ldi	r31, 0x01	; 1
   13b14:	c0 55       	subi	r28, 0x50	; 80
   13b16:	d9 4f       	sbci	r29, 0xF9	; 249
   13b18:	f8 83       	st	Y, r31
   13b1a:	c0 5b       	subi	r28, 0xB0	; 176
   13b1c:	d6 40       	sbci	r29, 0x06	; 6
   13b1e:	92 c0       	rjmp	.+292    	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13b20:	91 30       	cpi	r25, 0x01	; 1
   13b22:	51 f4       	brne	.+20     	; 0x13b38 <_Z12Pub_Sub_DataPcPhjh+0x14bc>
   13b24:	67 ef       	ldi	r22, 0xF7	; 247
   13b26:	74 e3       	ldi	r23, 0x34	; 52
   13b28:	86 ec       	ldi	r24, 0xC6	; 198
   13b2a:	94 e1       	ldi	r25, 0x14	; 20
   13b2c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13b30:	86 ec       	ldi	r24, 0xC6	; 198
   13b32:	94 e1       	ldi	r25, 0x14	; 20
   13b34:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13b38:	6e ee       	ldi	r22, 0xEE	; 238
   13b3a:	74 e3       	ldi	r23, 0x34	; 52
   13b3c:	c2 01       	movw	r24, r4
   13b3e:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13b42:	85 56       	subi	r24, 0x65	; 101
   13b44:	2b e1       	ldi	r18, 0x1B	; 27
   13b46:	82 9f       	mul	r24, r18
   13b48:	f0 01       	movw	r30, r0
   13b4a:	11 24       	eor	r1, r1
   13b4c:	e8 51       	subi	r30, 0x18	; 24
   13b4e:	f2 4f       	sbci	r31, 0xF2	; 242
   13b50:	11 8e       	std	Z+25, r1	; 0x19
   13b52:	11 82       	std	Z+1, r1	; 0x01
   13b54:	13 8a       	std	Z+19, r1	; 0x13
   13b56:	12 8a       	std	Z+18, r1	; 0x12
   13b58:	15 8a       	std	Z+21, r1	; 0x15
   13b5a:	14 8a       	std	Z+20, r1	; 0x14
   13b5c:	17 8a       	std	Z+23, r1	; 0x17
   13b5e:	16 8a       	std	Z+22, r1	; 0x16
   13b60:	15 86       	std	Z+13, r1	; 0x0d
   13b62:	14 86       	std	Z+12, r1	; 0x0c
   13b64:	17 86       	std	Z+15, r1	; 0x0f
   13b66:	16 86       	std	Z+14, r1	; 0x0e
   13b68:	10 82       	st	Z, r1
   13b6a:	12 86       	std	Z+10, r1	; 0x0a
   13b6c:	12 8e       	std	Z+26, r1	; 0x1a
   13b6e:	14 82       	std	Z+4, r1	; 0x04
   13b70:	13 82       	std	Z+3, r1	; 0x03
   13b72:	10 8e       	std	Z+24, r1	; 0x18
   13b74:	13 86       	std	Z+11, r1	; 0x0b
   13b76:	12 82       	std	Z+2, r1	; 0x02
   13b78:	31 e0       	ldi	r19, 0x01	; 1
   13b7a:	c0 55       	subi	r28, 0x50	; 80
   13b7c:	d9 4f       	sbci	r29, 0xF9	; 249
   13b7e:	38 83       	st	Y, r19
   13b80:	c0 5b       	subi	r28, 0xB0	; 176
   13b82:	d6 40       	sbci	r29, 0x06	; 6
   13b84:	5f c0       	rjmp	.+190    	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13b86:	91 30       	cpi	r25, 0x01	; 1
   13b88:	51 f4       	brne	.+20     	; 0x13b9e <_Z12Pub_Sub_DataPcPhjh+0x1522>
   13b8a:	66 ed       	ldi	r22, 0xD6	; 214
   13b8c:	74 e3       	ldi	r23, 0x34	; 52
   13b8e:	86 ec       	ldi	r24, 0xC6	; 198
   13b90:	94 e1       	ldi	r25, 0x14	; 20
   13b92:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13b96:	86 ec       	ldi	r24, 0xC6	; 198
   13b98:	94 e1       	ldi	r25, 0x14	; 20
   13b9a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13b9e:	81 e0       	ldi	r24, 0x01	; 1
   13ba0:	80 93 e5 0b 	sts	0x0BE5, r24	; 0x800be5 <_sSchedules+0x2c7>
   13ba4:	0e 94 79 86 	call	0x10cf2	; 0x10cf2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   13ba8:	41 e0       	ldi	r20, 0x01	; 1
   13baa:	c0 55       	subi	r28, 0x50	; 80
   13bac:	d9 4f       	sbci	r29, 0xF9	; 249
   13bae:	48 83       	st	Y, r20
   13bb0:	c0 5b       	subi	r28, 0xB0	; 176
   13bb2:	d6 40       	sbci	r29, 0x06	; 6
   13bb4:	47 c0       	rjmp	.+142    	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13bb6:	91 30       	cpi	r25, 0x01	; 1
   13bb8:	51 f4       	brne	.+20     	; 0x13bce <_Z12Pub_Sub_DataPcPhjh+0x1552>
   13bba:	6d eb       	ldi	r22, 0xBD	; 189
   13bbc:	74 e3       	ldi	r23, 0x34	; 52
   13bbe:	86 ec       	ldi	r24, 0xC6	; 198
   13bc0:	94 e1       	ldi	r25, 0x14	; 20
   13bc2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13bc6:	86 ec       	ldi	r24, 0xC6	; 198
   13bc8:	94 e1       	ldi	r25, 0x14	; 20
   13bca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13bce:	10 92 e5 0b 	sts	0x0BE5, r1	; 0x800be5 <_sSchedules+0x2c7>
   13bd2:	0e 94 79 86 	call	0x10cf2	; 0x10cf2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   13bd6:	51 e0       	ldi	r21, 0x01	; 1
   13bd8:	c0 55       	subi	r28, 0x50	; 80
   13bda:	d9 4f       	sbci	r29, 0xF9	; 249
   13bdc:	58 83       	st	Y, r21
   13bde:	c0 5b       	subi	r28, 0xB0	; 176
   13be0:	d6 40       	sbci	r29, 0x06	; 6
   13be2:	30 c0       	rjmp	.+96     	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13be4:	91 30       	cpi	r25, 0x01	; 1
   13be6:	51 f4       	brne	.+20     	; 0x13bfc <_Z12Pub_Sub_DataPcPhjh+0x1580>
   13be8:	69 ea       	ldi	r22, 0xA9	; 169
   13bea:	74 e3       	ldi	r23, 0x34	; 52
   13bec:	86 ec       	ldi	r24, 0xC6	; 198
   13bee:	94 e1       	ldi	r25, 0x14	; 20
   13bf0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13bf4:	86 ec       	ldi	r24, 0xC6	; 198
   13bf6:	94 e1       	ldi	r25, 0x14	; 20
   13bf8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13bfc:	81 e0       	ldi	r24, 0x01	; 1
   13bfe:	80 93 a2 14 	sts	0x14A2, r24	; 0x8014a2 <_sRuble_Parameters+0xf4>
   13c02:	c0 55       	subi	r28, 0x50	; 80
   13c04:	d9 4f       	sbci	r29, 0xF9	; 249
   13c06:	88 83       	st	Y, r24
   13c08:	c0 5b       	subi	r28, 0xB0	; 176
   13c0a:	d6 40       	sbci	r29, 0x06	; 6
   13c0c:	1b c0       	rjmp	.+54     	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13c0e:	91 30       	cpi	r25, 0x01	; 1
   13c10:	51 f4       	brne	.+20     	; 0x13c26 <_Z12Pub_Sub_DataPcPhjh+0x15aa>
   13c12:	6e e8       	ldi	r22, 0x8E	; 142
   13c14:	74 e3       	ldi	r23, 0x34	; 52
   13c16:	86 ec       	ldi	r24, 0xC6	; 198
   13c18:	94 e1       	ldi	r25, 0x14	; 20
   13c1a:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13c1e:	86 ec       	ldi	r24, 0xC6	; 198
   13c20:	94 e1       	ldi	r25, 0x14	; 20
   13c22:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13c26:	10 92 a2 14 	sts	0x14A2, r1	; 0x8014a2 <_sRuble_Parameters+0xf4>
   13c2a:	91 e0       	ldi	r25, 0x01	; 1
   13c2c:	c0 55       	subi	r28, 0x50	; 80
   13c2e:	d9 4f       	sbci	r29, 0xF9	; 249
   13c30:	98 83       	st	Y, r25
   13c32:	c0 5b       	subi	r28, 0xB0	; 176
   13c34:	d6 40       	sbci	r29, 0x06	; 6
   13c36:	06 c0       	rjmp	.+12     	; 0x13c44 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13c38:	a1 e0       	ldi	r26, 0x01	; 1
   13c3a:	c0 55       	subi	r28, 0x50	; 80
   13c3c:	d9 4f       	sbci	r29, 0xF9	; 249
   13c3e:	a8 83       	st	Y, r26
   13c40:	c0 5b       	subi	r28, 0xB0	; 176
   13c42:	d6 40       	sbci	r29, 0x06	; 6
   13c44:	88 e2       	ldi	r24, 0x28	; 40
   13c46:	f8 01       	movw	r30, r16
   13c48:	11 92       	st	Z+, r1
   13c4a:	8a 95       	dec	r24
   13c4c:	e9 f7       	brne	.-6      	; 0x13c48 <_Z12Pub_Sub_DataPcPhjh+0x15cc>
   13c4e:	8e ec       	ldi	r24, 0xCE	; 206
   13c50:	93 e1       	ldi	r25, 0x13	; 19
   13c52:	9f 93       	push	r25
   13c54:	8f 93       	push	r24
   13c56:	89 e0       	ldi	r24, 0x09	; 9
   13c58:	96 e0       	ldi	r25, 0x06	; 6
   13c5a:	9f 93       	push	r25
   13c5c:	8f 93       	push	r24
   13c5e:	1f 93       	push	r17
   13c60:	0f 93       	push	r16
   13c62:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   13c66:	ca 54       	subi	r28, 0x4A	; 74
   13c68:	d9 4f       	sbci	r29, 0xF9	; 249
   13c6a:	68 81       	ld	r22, Y
   13c6c:	79 81       	ldd	r23, Y+1	; 0x01
   13c6e:	c6 5b       	subi	r28, 0xB6	; 182
   13c70:	d6 40       	sbci	r29, 0x06	; 6
   13c72:	c8 01       	movw	r24, r16
   13c74:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   13c78:	0f 90       	pop	r0
   13c7a:	0f 90       	pop	r0
   13c7c:	0f 90       	pop	r0
   13c7e:	0f 90       	pop	r0
   13c80:	0f 90       	pop	r0
   13c82:	0f 90       	pop	r0
   13c84:	89 2b       	or	r24, r25
   13c86:	09 f0       	breq	.+2      	; 0x13c8a <_Z12Pub_Sub_DataPcPhjh+0x160e>
   13c88:	73 c0       	rjmp	.+230    	; 0x13d70 <_Z12Pub_Sub_DataPcPhjh+0x16f4>
   13c8a:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   13c8e:	8b e0       	ldi	r24, 0x0B	; 11
   13c90:	e4 ec       	ldi	r30, 0xC4	; 196
   13c92:	fd e0       	ldi	r31, 0x0D	; 13
   13c94:	df 01       	movw	r26, r30
   13c96:	28 2f       	mov	r18, r24
   13c98:	1d 92       	st	X+, r1
   13c9a:	2a 95       	dec	r18
   13c9c:	e9 f7       	brne	.-6      	; 0x13c98 <_Z12Pub_Sub_DataPcPhjh+0x161c>
   13c9e:	e9 eb       	ldi	r30, 0xB9	; 185
   13ca0:	fd e0       	ldi	r31, 0x0D	; 13
   13ca2:	df 01       	movw	r26, r30
   13ca4:	1d 92       	st	X+, r1
   13ca6:	8a 95       	dec	r24
   13ca8:	e9 f7       	brne	.-6      	; 0x13ca4 <_Z12Pub_Sub_DataPcPhjh+0x1628>
   13caa:	61 e8       	ldi	r22, 0x81	; 129
   13cac:	74 e3       	ldi	r23, 0x34	; 52
   13cae:	c2 01       	movw	r24, r4
   13cb0:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13cb4:	bc 01       	movw	r22, r24
   13cb6:	84 ec       	ldi	r24, 0xC4	; 196
   13cb8:	9d e0       	ldi	r25, 0x0D	; 13
   13cba:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   13cbe:	64 e7       	ldi	r22, 0x74	; 116
   13cc0:	74 e3       	ldi	r23, 0x34	; 52
   13cc2:	c2 01       	movw	r24, r4
   13cc4:	0e 94 39 8d 	call	0x11a72	; 0x11a72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13cc8:	bc 01       	movw	r22, r24
   13cca:	89 eb       	ldi	r24, 0xB9	; 185
   13ccc:	9d e0       	ldi	r25, 0x0D	; 13
   13cce:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   13cd2:	60 e7       	ldi	r22, 0x70	; 112
   13cd4:	74 e3       	ldi	r23, 0x34	; 52
   13cd6:	c2 01       	movw	r24, r4
   13cd8:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13cdc:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13ce0:	81 30       	cpi	r24, 0x01	; 1
   13ce2:	f9 f4       	brne	.+62     	; 0x13d22 <_Z12Pub_Sub_DataPcPhjh+0x16a6>
   13ce4:	91 30       	cpi	r25, 0x01	; 1
   13ce6:	51 f4       	brne	.+20     	; 0x13cfc <_Z12Pub_Sub_DataPcPhjh+0x1680>
   13ce8:	63 e6       	ldi	r22, 0x63	; 99
   13cea:	74 e3       	ldi	r23, 0x34	; 52
   13cec:	86 ec       	ldi	r24, 0xC6	; 198
   13cee:	94 e1       	ldi	r25, 0x14	; 20
   13cf0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   13cf4:	86 ec       	ldi	r24, 0xC6	; 198
   13cf6:	94 e1       	ldi	r25, 0x14	; 20
   13cf8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13cfc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   13d00:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   13d04:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   13d08:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   13d0c:	a0 68       	ori	r26, 0x80	; 128
   13d0e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   13d12:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   13d16:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   13d1a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   13d1e:	88 e0       	ldi	r24, 0x08	; 8
   13d20:	0d c0       	rjmp	.+26     	; 0x13d3c <_Z12Pub_Sub_DataPcPhjh+0x16c0>
   13d22:	91 30       	cpi	r25, 0x01	; 1
   13d24:	51 f4       	brne	.+20     	; 0x13d3a <_Z12Pub_Sub_DataPcPhjh+0x16be>
   13d26:	65 e5       	ldi	r22, 0x55	; 85
   13d28:	74 e3       	ldi	r23, 0x34	; 52
   13d2a:	86 ec       	ldi	r24, 0xC6	; 198
   13d2c:	94 e1       	ldi	r25, 0x14	; 20
   13d2e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   13d32:	86 ec       	ldi	r24, 0xC6	; 198
   13d34:	94 e1       	ldi	r25, 0x14	; 20
   13d36:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13d3a:	89 e0       	ldi	r24, 0x09	; 9
   13d3c:	80 93 69 14 	sts	0x1469, r24	; 0x801469 <_sRuble_Parameters+0xbb>
   13d40:	69 e6       	ldi	r22, 0x69	; 105
   13d42:	74 e1       	ldi	r23, 0x14	; 20
   13d44:	88 e1       	ldi	r24, 0x18	; 24
   13d46:	95 e0       	ldi	r25, 0x05	; 5
   13d48:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   13d4c:	69 eb       	ldi	r22, 0xB9	; 185
   13d4e:	7d e0       	ldi	r23, 0x0D	; 13
   13d50:	8a ed       	ldi	r24, 0xDA	; 218
   13d52:	94 e0       	ldi	r25, 0x04	; 4
   13d54:	0e 94 ef 85 	call	0x10bde	; 0x10bde <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   13d58:	64 ec       	ldi	r22, 0xC4	; 196
   13d5a:	7d e0       	ldi	r23, 0x0D	; 13
   13d5c:	87 ee       	ldi	r24, 0xE7	; 231
   13d5e:	94 e0       	ldi	r25, 0x04	; 4
   13d60:	0e 94 ef 85 	call	0x10bde	; 0x10bde <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   13d64:	b1 e0       	ldi	r27, 0x01	; 1
   13d66:	c0 55       	subi	r28, 0x50	; 80
   13d68:	d9 4f       	sbci	r29, 0xF9	; 249
   13d6a:	b8 83       	st	Y, r27
   13d6c:	c0 5b       	subi	r28, 0xB0	; 176
   13d6e:	d6 40       	sbci	r29, 0x06	; 6
   13d70:	88 e2       	ldi	r24, 0x28	; 40
   13d72:	f8 01       	movw	r30, r16
   13d74:	11 92       	st	Z+, r1
   13d76:	8a 95       	dec	r24
   13d78:	e9 f7       	brne	.-6      	; 0x13d74 <_Z12Pub_Sub_DataPcPhjh+0x16f8>
   13d7a:	8e ec       	ldi	r24, 0xCE	; 206
   13d7c:	93 e1       	ldi	r25, 0x13	; 19
   13d7e:	9f 93       	push	r25
   13d80:	8f 93       	push	r24
   13d82:	82 e3       	ldi	r24, 0x32	; 50
   13d84:	96 e0       	ldi	r25, 0x06	; 6
   13d86:	9f 93       	push	r25
   13d88:	8f 93       	push	r24
   13d8a:	1f 93       	push	r17
   13d8c:	0f 93       	push	r16
   13d8e:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   13d92:	ca 54       	subi	r28, 0x4A	; 74
   13d94:	d9 4f       	sbci	r29, 0xF9	; 249
   13d96:	68 81       	ld	r22, Y
   13d98:	79 81       	ldd	r23, Y+1	; 0x01
   13d9a:	c6 5b       	subi	r28, 0xB6	; 182
   13d9c:	d6 40       	sbci	r29, 0x06	; 6
   13d9e:	c8 01       	movw	r24, r16
   13da0:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   13da4:	0f 90       	pop	r0
   13da6:	0f 90       	pop	r0
   13da8:	0f 90       	pop	r0
   13daa:	0f 90       	pop	r0
   13dac:	0f 90       	pop	r0
   13dae:	0f 90       	pop	r0
   13db0:	89 2b       	or	r24, r25
   13db2:	09 f0       	breq	.+2      	; 0x13db6 <_Z12Pub_Sub_DataPcPhjh+0x173a>
   13db4:	53 c1       	rjmp	.+678    	; 0x1405c <_Z12Pub_Sub_DataPcPhjh+0x19e0>
   13db6:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   13dba:	86 34       	cpi	r24, 0x46	; 70
   13dbc:	10 f4       	brcc	.+4      	; 0x13dc2 <_Z12Pub_Sub_DataPcPhjh+0x1746>
   13dbe:	0c 94 6c 94 	jmp	0x128d8	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   13dc2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13dc6:	81 30       	cpi	r24, 0x01	; 1
   13dc8:	51 f4       	brne	.+20     	; 0x13dde <_Z12Pub_Sub_DataPcPhjh+0x1762>
   13dca:	63 e3       	ldi	r22, 0x33	; 51
   13dcc:	74 e3       	ldi	r23, 0x34	; 52
   13dce:	86 ec       	ldi	r24, 0xC6	; 198
   13dd0:	94 e1       	ldi	r25, 0x14	; 20
   13dd2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13dd6:	86 ec       	ldi	r24, 0xC6	; 198
   13dd8:	94 e1       	ldi	r25, 0x14	; 20
   13dda:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13dde:	6f e2       	ldi	r22, 0x2F	; 47
   13de0:	74 e3       	ldi	r23, 0x34	; 52
   13de2:	c2 01       	movw	r24, r4
   13de4:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13de8:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
   13dec:	81 e0       	ldi	r24, 0x01	; 1
   13dee:	80 93 99 0b 	sts	0x0B99, r24	; 0x800b99 <_sSchedules+0x27b>
   13df2:	10 92 92 0b 	sts	0x0B92, r1	; 0x800b92 <_sSchedules+0x274>
   13df6:	80 93 94 0b 	sts	0x0B94, r24	; 0x800b94 <_sSchedules+0x276>
   13dfa:	10 92 e7 0b 	sts	0x0BE7, r1	; 0x800be7 <_sSchedules+0x2c9>
   13dfe:	6a e2       	ldi	r22, 0x2A	; 42
   13e00:	74 e3       	ldi	r23, 0x34	; 52
   13e02:	c2 01       	movw	r24, r4
   13e04:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e08:	60 e0       	ldi	r22, 0x00	; 0
   13e0a:	70 e0       	ldi	r23, 0x00	; 0
   13e0c:	0e 94 0c 89 	call	0x11218	; 0x11218 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13e10:	60 93 95 0b 	sts	0x0B95, r22	; 0x800b95 <_sSchedules+0x277>
   13e14:	70 93 96 0b 	sts	0x0B96, r23	; 0x800b96 <_sSchedules+0x278>
   13e18:	80 93 97 0b 	sts	0x0B97, r24	; 0x800b97 <_sSchedules+0x279>
   13e1c:	90 93 98 0b 	sts	0x0B98, r25	; 0x800b98 <_sSchedules+0x27a>
   13e20:	60 91 95 0b 	lds	r22, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   13e24:	70 91 96 0b 	lds	r23, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   13e28:	80 91 97 0b 	lds	r24, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   13e2c:	90 91 98 0b 	lds	r25, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   13e30:	20 91 95 0b 	lds	r18, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   13e34:	30 91 96 0b 	lds	r19, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   13e38:	40 91 97 0b 	lds	r20, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   13e3c:	50 91 98 0b 	lds	r21, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   13e40:	c0 55       	subi	r28, 0x50	; 80
   13e42:	d9 4f       	sbci	r29, 0xF9	; 249
   13e44:	28 83       	st	Y, r18
   13e46:	39 83       	std	Y+1, r19	; 0x01
   13e48:	4a 83       	std	Y+2, r20	; 0x02
   13e4a:	5b 83       	std	Y+3, r21	; 0x03
   13e4c:	c0 5b       	subi	r28, 0xB0	; 176
   13e4e:	d6 40       	sbci	r29, 0x06	; 6
   13e50:	e4 e6       	ldi	r30, 0x64	; 100
   13e52:	ce 2e       	mov	r12, r30
   13e54:	d1 2c       	mov	r13, r1
   13e56:	e1 2c       	mov	r14, r1
   13e58:	f1 2c       	mov	r15, r1
   13e5a:	a7 01       	movw	r20, r14
   13e5c:	96 01       	movw	r18, r12
   13e5e:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   13e62:	a0 e1       	ldi	r26, 0x10	; 16
   13e64:	be e0       	ldi	r27, 0x0E	; 14
   13e66:	0e 94 34 eb 	call	0x1d668	; 0x1d668 <__muluhisi3>
   13e6a:	4b 01       	movw	r8, r22
   13e6c:	5c 01       	movw	r10, r24
   13e6e:	c0 55       	subi	r28, 0x50	; 80
   13e70:	d9 4f       	sbci	r29, 0xF9	; 249
   13e72:	68 81       	ld	r22, Y
   13e74:	79 81       	ldd	r23, Y+1	; 0x01
   13e76:	8a 81       	ldd	r24, Y+2	; 0x02
   13e78:	9b 81       	ldd	r25, Y+3	; 0x03
   13e7a:	c0 5b       	subi	r28, 0xB0	; 176
   13e7c:	d6 40       	sbci	r29, 0x06	; 6
   13e7e:	a7 01       	movw	r20, r14
   13e80:	96 01       	movw	r18, r12
   13e82:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   13e86:	9b 01       	movw	r18, r22
   13e88:	ac 01       	movw	r20, r24
   13e8a:	ac e3       	ldi	r26, 0x3C	; 60
   13e8c:	b0 e0       	ldi	r27, 0x00	; 0
   13e8e:	0e 94 34 eb 	call	0x1d668	; 0x1d668 <__muluhisi3>
   13e92:	86 0e       	add	r8, r22
   13e94:	97 1e       	adc	r9, r23
   13e96:	a8 1e       	adc	r10, r24
   13e98:	b9 1e       	adc	r11, r25
   13e9a:	80 92 95 0b 	sts	0x0B95, r8	; 0x800b95 <_sSchedules+0x277>
   13e9e:	90 92 96 0b 	sts	0x0B96, r9	; 0x800b96 <_sSchedules+0x278>
   13ea2:	a0 92 97 0b 	sts	0x0B97, r10	; 0x800b97 <_sSchedules+0x279>
   13ea6:	b0 92 98 0b 	sts	0x0B98, r11	; 0x800b98 <_sSchedules+0x27a>
   13eaa:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   13eae:	80 93 f1 0b 	sts	0x0BF1, r24	; 0x800bf1 <_sSchedules+0x2d3>
   13eb2:	64 e2       	ldi	r22, 0x24	; 36
   13eb4:	74 e3       	ldi	r23, 0x34	; 52
   13eb6:	c2 01       	movw	r24, r4
   13eb8:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ebc:	60 e0       	ldi	r22, 0x00	; 0
   13ebe:	70 e0       	ldi	r23, 0x00	; 0
   13ec0:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13ec4:	80 93 f3 0b 	sts	0x0BF3, r24	; 0x800bf3 <_sSchedules+0x2d5>
   13ec8:	e1 2c       	mov	r14, r1
   13eca:	f1 2c       	mov	r15, r1
   13ecc:	67 01       	movw	r12, r14
   13ece:	4f ef       	ldi	r20, 0xFF	; 255
   13ed0:	c4 1a       	sub	r12, r20
   13ed2:	d4 0a       	sbc	r13, r20
   13ed4:	6e e1       	ldi	r22, 0x1E	; 30
   13ed6:	74 e3       	ldi	r23, 0x34	; 52
   13ed8:	c2 01       	movw	r24, r4
   13eda:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ede:	b6 01       	movw	r22, r12
   13ee0:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13ee4:	d7 01       	movw	r26, r14
   13ee6:	a9 53       	subi	r26, 0x39	; 57
   13ee8:	b4 4f       	sbci	r27, 0xF4	; 244
   13eea:	7d 01       	movw	r14, r26
   13eec:	8c 93       	st	X, r24
   13eee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13ef2:	81 30       	cpi	r24, 0x01	; 1
   13ef4:	89 f0       	breq	.+34     	; 0x13f18 <_Z12Pub_Sub_DataPcPhjh+0x189c>
   13ef6:	76 01       	movw	r14, r12
   13ef8:	3d e0       	ldi	r19, 0x0D	; 13
   13efa:	c3 16       	cp	r12, r19
   13efc:	d1 04       	cpc	r13, r1
   13efe:	31 f7       	brne	.-52     	; 0x13ecc <_Z12Pub_Sub_DataPcPhjh+0x1850>
   13f00:	e1 2c       	mov	r14, r1
   13f02:	f1 2c       	mov	r15, r1
   13f04:	54 e6       	ldi	r21, 0x64	; 100
   13f06:	a5 2e       	mov	r10, r21
   13f08:	b1 2c       	mov	r11, r1
   13f0a:	60 e1       	ldi	r22, 0x10	; 16
   13f0c:	86 2e       	mov	r8, r22
   13f0e:	6e e0       	ldi	r22, 0x0E	; 14
   13f10:	96 2e       	mov	r9, r22
   13f12:	7c e3       	ldi	r23, 0x3C	; 60
   13f14:	77 2e       	mov	r7, r23
   13f16:	13 c0       	rjmp	.+38     	; 0x13f3e <_Z12Pub_Sub_DataPcPhjh+0x18c2>
   13f18:	64 e1       	ldi	r22, 0x14	; 20
   13f1a:	74 e3       	ldi	r23, 0x34	; 52
   13f1c:	86 ec       	ldi	r24, 0xC6	; 198
   13f1e:	94 e1       	ldi	r25, 0x14	; 20
   13f20:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13f24:	f7 01       	movw	r30, r14
   13f26:	60 81       	ld	r22, Z
   13f28:	4a e0       	ldi	r20, 0x0A	; 10
   13f2a:	50 e0       	ldi	r21, 0x00	; 0
   13f2c:	86 ec       	ldi	r24, 0xC6	; 198
   13f2e:	94 e1       	ldi	r25, 0x14	; 20
   13f30:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   13f34:	86 ec       	ldi	r24, 0xC6	; 198
   13f36:	94 e1       	ldi	r25, 0x14	; 20
   13f38:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13f3c:	dc cf       	rjmp	.-72     	; 0x13ef6 <_Z12Pub_Sub_DataPcPhjh+0x187a>
   13f3e:	67 01       	movw	r12, r14
   13f40:	2f ef       	ldi	r18, 0xFF	; 255
   13f42:	c2 1a       	sub	r12, r18
   13f44:	d2 0a       	sbc	r13, r18
   13f46:	6f e0       	ldi	r22, 0x0F	; 15
   13f48:	74 e3       	ldi	r23, 0x34	; 52
   13f4a:	c2 01       	movw	r24, r4
   13f4c:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13f50:	b6 01       	movw	r22, r12
   13f52:	0e 94 b8 8d 	call	0x11b70	; 0x11b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13f56:	97 01       	movw	r18, r14
   13f58:	22 0f       	add	r18, r18
   13f5a:	33 1f       	adc	r19, r19
   13f5c:	a9 01       	movw	r20, r18
   13f5e:	46 56       	subi	r20, 0x66	; 102
   13f60:	54 4f       	sbci	r21, 0xF4	; 244
   13f62:	7a 01       	movw	r14, r20
   13f64:	da 01       	movw	r26, r20
   13f66:	11 96       	adiw	r26, 0x01	; 1
   13f68:	9c 93       	st	X, r25
   13f6a:	8e 93       	st	-X, r24
   13f6c:	8d 91       	ld	r24, X+
   13f6e:	9c 91       	ld	r25, X
   13f70:	11 97       	sbiw	r26, 0x01	; 1
   13f72:	2d 91       	ld	r18, X+
   13f74:	3c 91       	ld	r19, X
   13f76:	b5 01       	movw	r22, r10
   13f78:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   13f7c:	68 9d       	mul	r22, r8
   13f7e:	f0 01       	movw	r30, r0
   13f80:	69 9d       	mul	r22, r9
   13f82:	f0 0d       	add	r31, r0
   13f84:	78 9d       	mul	r23, r8
   13f86:	f0 0d       	add	r31, r0
   13f88:	11 24       	eor	r1, r1
   13f8a:	c9 01       	movw	r24, r18
   13f8c:	b5 01       	movw	r22, r10
   13f8e:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   13f92:	78 9e       	mul	r7, r24
   13f94:	90 01       	movw	r18, r0
   13f96:	79 9e       	mul	r7, r25
   13f98:	30 0d       	add	r19, r0
   13f9a:	11 24       	eor	r1, r1
   13f9c:	cf 01       	movw	r24, r30
   13f9e:	82 0f       	add	r24, r18
   13fa0:	93 1f       	adc	r25, r19
   13fa2:	f7 01       	movw	r30, r14
   13fa4:	91 83       	std	Z+1, r25	; 0x01
   13fa6:	80 83       	st	Z, r24
   13fa8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13fac:	81 30       	cpi	r24, 0x01	; 1
   13fae:	41 f0       	breq	.+16     	; 0x13fc0 <_Z12Pub_Sub_DataPcPhjh+0x1944>
   13fb0:	76 01       	movw	r14, r12
   13fb2:	fd e0       	ldi	r31, 0x0D	; 13
   13fb4:	cf 16       	cp	r12, r31
   13fb6:	d1 04       	cpc	r13, r1
   13fb8:	11 f6       	brne	.-124    	; 0x13f3e <_Z12Pub_Sub_DataPcPhjh+0x18c2>
   13fba:	e1 2c       	mov	r14, r1
   13fbc:	f1 2c       	mov	r15, r1
   13fbe:	14 c0       	rjmp	.+40     	; 0x13fe8 <_Z12Pub_Sub_DataPcPhjh+0x196c>
   13fc0:	6d ef       	ldi	r22, 0xFD	; 253
   13fc2:	73 e3       	ldi	r23, 0x33	; 51
   13fc4:	86 ec       	ldi	r24, 0xC6	; 198
   13fc6:	94 e1       	ldi	r25, 0x14	; 20
   13fc8:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   13fcc:	d7 01       	movw	r26, r14
   13fce:	6d 91       	ld	r22, X+
   13fd0:	7c 91       	ld	r23, X
   13fd2:	4a e0       	ldi	r20, 0x0A	; 10
   13fd4:	50 e0       	ldi	r21, 0x00	; 0
   13fd6:	86 ec       	ldi	r24, 0xC6	; 198
   13fd8:	94 e1       	ldi	r25, 0x14	; 20
   13fda:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
   13fde:	86 ec       	ldi	r24, 0xC6	; 198
   13fe0:	94 e1       	ldi	r25, 0x14	; 20
   13fe2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   13fe6:	e4 cf       	rjmp	.-56     	; 0x13fb0 <_Z12Pub_Sub_DataPcPhjh+0x1934>
   13fe8:	67 01       	movw	r12, r14
   13fea:	ef ef       	ldi	r30, 0xFF	; 255
   13fec:	ce 1a       	sub	r12, r30
   13fee:	de 0a       	sbc	r13, r30
   13ff0:	66 ef       	ldi	r22, 0xF6	; 246
   13ff2:	73 e3       	ldi	r23, 0x33	; 51
   13ff4:	c2 01       	movw	r24, r4
   13ff6:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ffa:	b6 01       	movw	r22, r12
   13ffc:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14000:	97 01       	movw	r18, r14
   14002:	28 54       	subi	r18, 0x48	; 72
   14004:	34 4f       	sbci	r19, 0xF4	; 244
   14006:	79 01       	movw	r14, r18
   14008:	d9 01       	movw	r26, r18
   1400a:	8c 93       	st	X, r24
   1400c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14010:	81 30       	cpi	r24, 0x01	; 1
   14012:	89 f0       	breq	.+34     	; 0x14036 <_Z12Pub_Sub_DataPcPhjh+0x19ba>
   14014:	76 01       	movw	r14, r12
   14016:	bd e0       	ldi	r27, 0x0D	; 13
   14018:	cb 16       	cp	r12, r27
   1401a:	d1 04       	cpc	r13, r1
   1401c:	29 f7       	brne	.-54     	; 0x13fe8 <_Z12Pub_Sub_DataPcPhjh+0x196c>
   1401e:	81 e0       	ldi	r24, 0x01	; 1
   14020:	80 93 e6 0c 	sts	0x0CE6, r24	; 0x800ce6 <plot_schedule_topic>
   14024:	10 92 e7 0c 	sts	0x0CE7, r1	; 0x800ce7 <_gTank_Topic_check>
   14028:	f1 e0       	ldi	r31, 0x01	; 1
   1402a:	c0 55       	subi	r28, 0x50	; 80
   1402c:	d9 4f       	sbci	r29, 0xF9	; 249
   1402e:	f8 83       	st	Y, r31
   14030:	c0 5b       	subi	r28, 0xB0	; 176
   14032:	d6 40       	sbci	r29, 0x06	; 6
   14034:	13 c0       	rjmp	.+38     	; 0x1405c <_Z12Pub_Sub_DataPcPhjh+0x19e0>
   14036:	6b ee       	ldi	r22, 0xEB	; 235
   14038:	73 e3       	ldi	r23, 0x33	; 51
   1403a:	86 ec       	ldi	r24, 0xC6	; 198
   1403c:	94 e1       	ldi	r25, 0x14	; 20
   1403e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   14042:	f7 01       	movw	r30, r14
   14044:	60 81       	ld	r22, Z
   14046:	4a e0       	ldi	r20, 0x0A	; 10
   14048:	50 e0       	ldi	r21, 0x00	; 0
   1404a:	86 ec       	ldi	r24, 0xC6	; 198
   1404c:	94 e1       	ldi	r25, 0x14	; 20
   1404e:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   14052:	86 ec       	ldi	r24, 0xC6	; 198
   14054:	94 e1       	ldi	r25, 0x14	; 20
   14056:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1405a:	dc cf       	rjmp	.-72     	; 0x14014 <_Z12Pub_Sub_DataPcPhjh+0x1998>
   1405c:	88 e2       	ldi	r24, 0x28	; 40
   1405e:	d8 01       	movw	r26, r16
   14060:	1d 92       	st	X+, r1
   14062:	8a 95       	dec	r24
   14064:	e9 f7       	brne	.-6      	; 0x14060 <_Z12Pub_Sub_DataPcPhjh+0x19e4>
   14066:	8e ec       	ldi	r24, 0xCE	; 206
   14068:	93 e1       	ldi	r25, 0x13	; 19
   1406a:	9f 93       	push	r25
   1406c:	8f 93       	push	r24
   1406e:	84 e5       	ldi	r24, 0x54	; 84
   14070:	96 e0       	ldi	r25, 0x06	; 6
   14072:	9f 93       	push	r25
   14074:	8f 93       	push	r24
   14076:	1f 93       	push	r17
   14078:	0f 93       	push	r16
   1407a:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   1407e:	ca 54       	subi	r28, 0x4A	; 74
   14080:	d9 4f       	sbci	r29, 0xF9	; 249
   14082:	68 81       	ld	r22, Y
   14084:	79 81       	ldd	r23, Y+1	; 0x01
   14086:	c6 5b       	subi	r28, 0xB6	; 182
   14088:	d6 40       	sbci	r29, 0x06	; 6
   1408a:	c8 01       	movw	r24, r16
   1408c:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   14090:	0f 90       	pop	r0
   14092:	0f 90       	pop	r0
   14094:	0f 90       	pop	r0
   14096:	0f 90       	pop	r0
   14098:	0f 90       	pop	r0
   1409a:	0f 90       	pop	r0
   1409c:	89 2b       	or	r24, r25
   1409e:	09 f0       	breq	.+2      	; 0x140a2 <_Z12Pub_Sub_DataPcPhjh+0x1a26>
   140a0:	cc c2       	rjmp	.+1432   	; 0x1463a <_Z12Pub_Sub_DataPcPhjh+0x1fbe>
   140a2:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   140a6:	86 34       	cpi	r24, 0x46	; 70
   140a8:	10 f4       	brcc	.+4      	; 0x140ae <_Z12Pub_Sub_DataPcPhjh+0x1a32>
   140aa:	0c 94 6c 94 	jmp	0x128d8	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   140ae:	80 91 e6 0c 	lds	r24, 0x0CE6	; 0x800ce6 <plot_schedule_topic>
   140b2:	88 23       	and	r24, r24
   140b4:	11 f4       	brne	.+4      	; 0x140ba <_Z12Pub_Sub_DataPcPhjh+0x1a3e>
   140b6:	0c 94 6c 94 	jmp	0x128d8	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   140ba:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
   140be:	83 33       	cpi	r24, 0x33	; 51
   140c0:	10 f0       	brcs	.+4      	; 0x140c6 <_Z12Pub_Sub_DataPcPhjh+0x1a4a>
   140c2:	0c 94 6c 94 	jmp	0x128d8	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   140c6:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   140ca:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   140ce:	81 30       	cpi	r24, 0x01	; 1
   140d0:	51 f4       	brne	.+20     	; 0x140e6 <_Z12Pub_Sub_DataPcPhjh+0x1a6a>
   140d2:	6d ec       	ldi	r22, 0xCD	; 205
   140d4:	73 e3       	ldi	r23, 0x33	; 51
   140d6:	86 ec       	ldi	r24, 0xC6	; 198
   140d8:	94 e1       	ldi	r25, 0x14	; 20
   140da:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   140de:	86 ec       	ldi	r24, 0xC6	; 198
   140e0:	94 e1       	ldi	r25, 0x14	; 20
   140e2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   140e6:	81 e0       	ldi	r24, 0x01	; 1
   140e8:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <_sSchedules+0x1>
   140ec:	80 91 91 0b 	lds	r24, 0x0B91	; 0x800b91 <_sSchedules+0x273>
   140f0:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <_sSchedules>
   140f4:	e1 2c       	mov	r14, r1
   140f6:	f1 2c       	mov	r15, r1
   140f8:	68 ec       	ldi	r22, 0xC8	; 200
   140fa:	73 e3       	ldi	r23, 0x33	; 51
   140fc:	c2 01       	movw	r24, r4
   140fe:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14102:	b7 01       	movw	r22, r14
   14104:	6d 5f       	subi	r22, 0xFD	; 253
   14106:	7f 4f       	sbci	r23, 0xFF	; 255
   14108:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1410c:	f7 01       	movw	r30, r14
   1410e:	e1 59       	subi	r30, 0x91	; 145
   14110:	f5 4f       	sbci	r31, 0xF5	; 245
   14112:	80 83       	st	Z, r24
   14114:	bf ef       	ldi	r27, 0xFF	; 255
   14116:	eb 1a       	sub	r14, r27
   14118:	fb 0a       	sbc	r15, r27
   1411a:	e7 e2       	ldi	r30, 0x27	; 39
   1411c:	ee 16       	cp	r14, r30
   1411e:	f1 04       	cpc	r15, r1
   14120:	59 f7       	brne	.-42     	; 0x140f8 <_Z12Pub_Sub_DataPcPhjh+0x1a7c>
   14122:	e1 2c       	mov	r14, r1
   14124:	f1 2c       	mov	r15, r1
   14126:	63 ec       	ldi	r22, 0xC3	; 195
   14128:	73 e3       	ldi	r23, 0x33	; 51
   1412a:	c2 01       	movw	r24, r4
   1412c:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14130:	b7 01       	movw	r22, r14
   14132:	6d 5f       	subi	r22, 0xFD	; 253
   14134:	7f 4f       	sbci	r23, 0xFF	; 255
   14136:	0e 94 09 8e 	call	0x11c12	; 0x11c12 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1413a:	f7 01       	movw	r30, r14
   1413c:	e8 56       	subi	r30, 0x68	; 104
   1413e:	f6 4f       	sbci	r31, 0xF6	; 246
   14140:	80 83       	st	Z, r24
   14142:	ff ef       	ldi	r31, 0xFF	; 255
   14144:	ef 1a       	sub	r14, r31
   14146:	ff 0a       	sbc	r15, r31
   14148:	27 e2       	ldi	r18, 0x27	; 39
   1414a:	e2 16       	cp	r14, r18
   1414c:	f1 04       	cpc	r15, r1
   1414e:	59 f7       	brne	.-42     	; 0x14126 <_Z12Pub_Sub_DataPcPhjh+0x1aaa>
   14150:	e1 2c       	mov	r14, r1
   14152:	f1 2c       	mov	r15, r1
   14154:	b4 e6       	ldi	r27, 0x64	; 100
   14156:	cb 2e       	mov	r12, r27
   14158:	d1 2c       	mov	r13, r1
   1415a:	80 e1       	ldi	r24, 0x10	; 16
   1415c:	a8 2e       	mov	r10, r24
   1415e:	8e e0       	ldi	r24, 0x0E	; 14
   14160:	b8 2e       	mov	r11, r24
   14162:	9c e3       	ldi	r25, 0x3C	; 60
   14164:	79 2e       	mov	r7, r25
   14166:	6e eb       	ldi	r22, 0xBE	; 190
   14168:	73 e3       	ldi	r23, 0x33	; 51
   1416a:	c2 01       	movw	r24, r4
   1416c:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14170:	b7 01       	movw	r22, r14
   14172:	6d 5f       	subi	r22, 0xFD	; 253
   14174:	7f 4f       	sbci	r23, 0xFF	; 255
   14176:	0e 94 b8 8d 	call	0x11b70	; 0x11b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1417a:	f7 01       	movw	r30, r14
   1417c:	ee 0f       	add	r30, r30
   1417e:	ff 1f       	adc	r31, r31
   14180:	ed 53       	subi	r30, 0x3D	; 61
   14182:	f6 4f       	sbci	r31, 0xF6	; 246
   14184:	91 83       	std	Z+1, r25	; 0x01
   14186:	80 83       	st	Z, r24
   14188:	80 81       	ld	r24, Z
   1418a:	91 81       	ldd	r25, Z+1	; 0x01
   1418c:	80 80       	ld	r8, Z
   1418e:	91 80       	ldd	r9, Z+1	; 0x01
   14190:	b6 01       	movw	r22, r12
   14192:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   14196:	6a 9d       	mul	r22, r10
   14198:	90 01       	movw	r18, r0
   1419a:	6b 9d       	mul	r22, r11
   1419c:	30 0d       	add	r19, r0
   1419e:	7a 9d       	mul	r23, r10
   141a0:	30 0d       	add	r19, r0
   141a2:	11 24       	eor	r1, r1
   141a4:	c4 01       	movw	r24, r8
   141a6:	b6 01       	movw	r22, r12
   141a8:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   141ac:	78 9e       	mul	r7, r24
   141ae:	a0 01       	movw	r20, r0
   141b0:	79 9e       	mul	r7, r25
   141b2:	50 0d       	add	r21, r0
   141b4:	11 24       	eor	r1, r1
   141b6:	24 0f       	add	r18, r20
   141b8:	35 1f       	adc	r19, r21
   141ba:	31 83       	std	Z+1, r19	; 0x01
   141bc:	20 83       	st	Z, r18
   141be:	3f ef       	ldi	r19, 0xFF	; 255
   141c0:	e3 1a       	sub	r14, r19
   141c2:	f3 0a       	sbc	r15, r19
   141c4:	47 e2       	ldi	r20, 0x27	; 39
   141c6:	e4 16       	cp	r14, r20
   141c8:	f1 04       	cpc	r15, r1
   141ca:	69 f6       	brne	.-102    	; 0x14166 <_Z12Pub_Sub_DataPcPhjh+0x1aea>
   141cc:	e1 2c       	mov	r14, r1
   141ce:	f1 2c       	mov	r15, r1
   141d0:	64 e6       	ldi	r22, 0x64	; 100
   141d2:	c6 2e       	mov	r12, r22
   141d4:	d1 2c       	mov	r13, r1
   141d6:	70 e1       	ldi	r23, 0x10	; 16
   141d8:	a7 2e       	mov	r10, r23
   141da:	7e e0       	ldi	r23, 0x0E	; 14
   141dc:	b7 2e       	mov	r11, r23
   141de:	ec e3       	ldi	r30, 0x3C	; 60
   141e0:	7e 2e       	mov	r7, r30
   141e2:	69 eb       	ldi	r22, 0xB9	; 185
   141e4:	73 e3       	ldi	r23, 0x33	; 51
   141e6:	c2 01       	movw	r24, r4
   141e8:	0e 94 5a 8d 	call	0x11ab4	; 0x11ab4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   141ec:	b7 01       	movw	r22, r14
   141ee:	6d 5f       	subi	r22, 0xFD	; 253
   141f0:	7f 4f       	sbci	r23, 0xFF	; 255
   141f2:	0e 94 b8 8d 	call	0x11b70	; 0x11b70 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   141f6:	f7 01       	movw	r30, r14
   141f8:	ee 0f       	add	r30, r30
   141fa:	ff 1f       	adc	r31, r31
   141fc:	e7 5e       	subi	r30, 0xE7	; 231
   141fe:	f5 4f       	sbci	r31, 0xF5	; 245
   14200:	91 83       	std	Z+1, r25	; 0x01
   14202:	80 83       	st	Z, r24
   14204:	80 81       	ld	r24, Z
   14206:	91 81       	ldd	r25, Z+1	; 0x01
   14208:	80 80       	ld	r8, Z
   1420a:	91 80       	ldd	r9, Z+1	; 0x01
   1420c:	b6 01       	movw	r22, r12
   1420e:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   14212:	6a 9d       	mul	r22, r10
   14214:	90 01       	movw	r18, r0
   14216:	6b 9d       	mul	r22, r11
   14218:	30 0d       	add	r19, r0
   1421a:	7a 9d       	mul	r23, r10
   1421c:	30 0d       	add	r19, r0
   1421e:	11 24       	eor	r1, r1
   14220:	c4 01       	movw	r24, r8
   14222:	b6 01       	movw	r22, r12
   14224:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   14228:	78 9e       	mul	r7, r24
   1422a:	a0 01       	movw	r20, r0
   1422c:	79 9e       	mul	r7, r25
   1422e:	50 0d       	add	r21, r0
   14230:	11 24       	eor	r1, r1
   14232:	24 0f       	add	r18, r20
   14234:	35 1f       	adc	r19, r21
   14236:	31 83       	std	Z+1, r19	; 0x01
   14238:	20 83       	st	Z, r18
   1423a:	5f ef       	ldi	r21, 0xFF	; 255
   1423c:	e5 1a       	sub	r14, r21
   1423e:	f5 0a       	sbc	r15, r21
   14240:	87 e2       	ldi	r24, 0x27	; 39
   14242:	e8 16       	cp	r14, r24
   14244:	f1 04       	cpc	r15, r1
   14246:	69 f6       	brne	.-102    	; 0x141e2 <_Z12Pub_Sub_DataPcPhjh+0x1b66>
   14248:	80 e0       	ldi	r24, 0x00	; 0
   1424a:	90 e0       	ldi	r25, 0x00	; 0
   1424c:	fc 01       	movw	r30, r24
   1424e:	e2 5e       	subi	r30, 0xE2	; 226
   14250:	f6 4f       	sbci	r31, 0xF6	; 246
   14252:	df 01       	movw	r26, r30
   14254:	a6 56       	subi	r26, 0x66	; 102
   14256:	bd 4f       	sbci	r27, 0xFD	; 253
   14258:	2c 91       	ld	r18, X
   1425a:	25 af       	std	Z+61, r18	; 0x3d
   1425c:	01 96       	adiw	r24, 0x01	; 1
   1425e:	8e 30       	cpi	r24, 0x0E	; 14
   14260:	91 05       	cpc	r25, r1
   14262:	a1 f7       	brne	.-24     	; 0x1424c <_Z12Pub_Sub_DataPcPhjh+0x1bd0>
   14264:	80 e0       	ldi	r24, 0x00	; 0
   14266:	90 e0       	ldi	r25, 0x00	; 0
   14268:	fc 01       	movw	r30, r24
   1426a:	ee 0f       	add	r30, r30
   1426c:	ff 1f       	adc	r31, r31
   1426e:	e6 56       	subi	r30, 0x66	; 102
   14270:	f4 4f       	sbci	r31, 0xF4	; 244
   14272:	20 81       	ld	r18, Z
   14274:	31 81       	ldd	r19, Z+1	; 0x01
   14276:	fc 01       	movw	r30, r24
   14278:	ee 0f       	add	r30, r30
   1427a:	ff 1f       	adc	r31, r31
   1427c:	e2 5e       	subi	r30, 0xE2	; 226
   1427e:	f6 4f       	sbci	r31, 0xF6	; 246
   14280:	30 a3       	std	Z+32, r19	; 0x20
   14282:	27 8f       	std	Z+31, r18	; 0x1f
   14284:	01 96       	adiw	r24, 0x01	; 1
   14286:	8e 30       	cpi	r24, 0x0E	; 14
   14288:	91 05       	cpc	r25, r1
   1428a:	71 f7       	brne	.-36     	; 0x14268 <_Z12Pub_Sub_DataPcPhjh+0x1bec>
   1428c:	80 e0       	ldi	r24, 0x00	; 0
   1428e:	90 e0       	ldi	r25, 0x00	; 0
   14290:	9c 01       	movw	r18, r24
   14292:	22 5e       	subi	r18, 0xE2	; 226
   14294:	36 4f       	sbci	r19, 0xF6	; 246
   14296:	f9 01       	movw	r30, r18
   14298:	e7 55       	subi	r30, 0x57	; 87
   1429a:	fd 4f       	sbci	r31, 0xFD	; 253
   1429c:	40 81       	ld	r20, Z
   1429e:	ed 55       	subi	r30, 0x5D	; 93
   142a0:	f2 40       	sbci	r31, 0x02	; 2
   142a2:	40 83       	st	Z, r20
   142a4:	01 96       	adiw	r24, 0x01	; 1
   142a6:	8e 30       	cpi	r24, 0x0E	; 14
   142a8:	91 05       	cpc	r25, r1
   142aa:	91 f7       	brne	.-28     	; 0x14290 <_Z12Pub_Sub_DataPcPhjh+0x1c14>
   142ac:	e1 2c       	mov	r14, r1
   142ae:	f1 2c       	mov	r15, r1
   142b0:	40 e0       	ldi	r20, 0x00	; 0
   142b2:	50 e0       	ldi	r21, 0x00	; 0
   142b4:	91 2c       	mov	r9, r1
   142b6:	fa 01       	movw	r30, r20
   142b8:	e2 5e       	subi	r30, 0xE2	; 226
   142ba:	f6 4f       	sbci	r31, 0xF6	; 246
   142bc:	85 ad       	ldd	r24, Z+61	; 0x3d
   142be:	81 30       	cpi	r24, 0x01	; 1
   142c0:	09 f0       	breq	.+2      	; 0x142c4 <_Z12Pub_Sub_DataPcPhjh+0x1c48>
   142c2:	6c c0       	rjmp	.+216    	; 0x1439c <_Z12Pub_Sub_DataPcPhjh+0x1d20>
   142c4:	89 2d       	mov	r24, r9
   142c6:	90 e0       	ldi	r25, 0x00	; 0
   142c8:	25 ad       	ldd	r18, Z+61	; 0x3d
   142ca:	bc 01       	movw	r22, r24
   142cc:	62 5e       	subi	r22, 0xE2	; 226
   142ce:	76 4f       	sbci	r23, 0xF6	; 246
   142d0:	db 01       	movw	r26, r22
   142d2:	dd 96       	adiw	r26, 0x3d	; 61
   142d4:	2c 93       	st	X, r18
   142d6:	9a 01       	movw	r18, r20
   142d8:	22 0f       	add	r18, r18
   142da:	33 1f       	adc	r19, r19
   142dc:	22 5e       	subi	r18, 0xE2	; 226
   142de:	36 4f       	sbci	r19, 0xF6	; 246
   142e0:	d9 01       	movw	r26, r18
   142e2:	5f 96       	adiw	r26, 0x1f	; 31
   142e4:	2d 91       	ld	r18, X+
   142e6:	3c 91       	ld	r19, X
   142e8:	90 97       	sbiw	r26, 0x20	; 32
   142ea:	88 0f       	add	r24, r24
   142ec:	99 1f       	adc	r25, r25
   142ee:	82 5e       	subi	r24, 0xE2	; 226
   142f0:	96 4f       	sbci	r25, 0xF6	; 246
   142f2:	dc 01       	movw	r26, r24
   142f4:	90 96       	adiw	r26, 0x20	; 32
   142f6:	3c 93       	st	X, r19
   142f8:	2e 93       	st	-X, r18
   142fa:	5f 97       	sbiw	r26, 0x1f	; 31
   142fc:	e4 5b       	subi	r30, 0xB4	; 180
   142fe:	ff 4f       	sbci	r31, 0xFF	; 255
   14300:	80 81       	ld	r24, Z
   14302:	db 01       	movw	r26, r22
   14304:	a4 5b       	subi	r26, 0xB4	; 180
   14306:	bf 4f       	sbci	r27, 0xFF	; 255
   14308:	8c 93       	st	X, r24
   1430a:	b3 e0       	ldi	r27, 0x03	; 3
   1430c:	9b 9e       	mul	r9, r27
   1430e:	50 01       	movw	r10, r0
   14310:	11 24       	eor	r1, r1
   14312:	60 e0       	ldi	r22, 0x00	; 0
   14314:	70 e0       	ldi	r23, 0x00	; 0
   14316:	35 01       	movw	r6, r10
   14318:	66 0e       	add	r6, r22
   1431a:	77 1e       	adc	r7, r23
   1431c:	97 01       	movw	r18, r14
   1431e:	26 0f       	add	r18, r22
   14320:	37 1f       	adc	r19, r23
   14322:	d9 01       	movw	r26, r18
   14324:	a2 5e       	subi	r26, 0xE2	; 226
   14326:	b6 4f       	sbci	r27, 0xF6	; 246
   14328:	fd 01       	movw	r30, r26
   1432a:	ef 5a       	subi	r30, 0xAF	; 175
   1432c:	fe 4f       	sbci	r31, 0xFE	; 254
   1432e:	80 80       	ld	r8, Z
   14330:	f3 01       	movw	r30, r6
   14332:	e2 5e       	subi	r30, 0xE2	; 226
   14334:	f6 4f       	sbci	r31, 0xF6	; 246
   14336:	6f 01       	movw	r12, r30
   14338:	ff ea       	ldi	r31, 0xAF	; 175
   1433a:	cf 1a       	sub	r12, r31
   1433c:	fe ef       	ldi	r31, 0xFE	; 254
   1433e:	df 0a       	sbc	r13, r31
   14340:	f6 01       	movw	r30, r12
   14342:	80 82       	st	Z, r8
   14344:	a6 58       	subi	r26, 0x86	; 134
   14346:	bf 4f       	sbci	r27, 0xFF	; 255
   14348:	ac 91       	ld	r26, X
   1434a:	e7 5d       	subi	r30, 0xD7	; 215
   1434c:	f1 09       	sbc	r31, r1
   1434e:	a0 83       	st	Z, r26
   14350:	22 0f       	add	r18, r18
   14352:	33 1f       	adc	r19, r19
   14354:	22 5e       	subi	r18, 0xE2	; 226
   14356:	36 4f       	sbci	r19, 0xF6	; 246
   14358:	f9 01       	movw	r30, r18
   1435a:	eb 55       	subi	r30, 0x5B	; 91
   1435c:	ff 4f       	sbci	r31, 0xFF	; 255
   1435e:	01 90       	ld	r0, Z+
   14360:	f0 81       	ld	r31, Z
   14362:	e0 2d       	mov	r30, r0
   14364:	c3 01       	movw	r24, r6
   14366:	88 0f       	add	r24, r24
   14368:	99 1f       	adc	r25, r25
   1436a:	82 5e       	subi	r24, 0xE2	; 226
   1436c:	96 4f       	sbci	r25, 0xF6	; 246
   1436e:	dc 01       	movw	r26, r24
   14370:	ab 55       	subi	r26, 0x5B	; 91
   14372:	bf 4f       	sbci	r27, 0xFF	; 255
   14374:	11 96       	adiw	r26, 0x01	; 1
   14376:	fc 93       	st	X, r31
   14378:	ee 93       	st	-X, r30
   1437a:	f9 01       	movw	r30, r18
   1437c:	e5 50       	subi	r30, 0x05	; 5
   1437e:	ff 4f       	sbci	r31, 0xFF	; 255
   14380:	20 81       	ld	r18, Z
   14382:	31 81       	ldd	r19, Z+1	; 0x01
   14384:	fc 01       	movw	r30, r24
   14386:	e5 50       	subi	r30, 0x05	; 5
   14388:	ff 4f       	sbci	r31, 0xFF	; 255
   1438a:	31 83       	std	Z+1, r19	; 0x01
   1438c:	20 83       	st	Z, r18
   1438e:	6f 5f       	subi	r22, 0xFF	; 255
   14390:	7f 4f       	sbci	r23, 0xFF	; 255
   14392:	63 30       	cpi	r22, 0x03	; 3
   14394:	71 05       	cpc	r23, r1
   14396:	09 f0       	breq	.+2      	; 0x1439a <_Z12Pub_Sub_DataPcPhjh+0x1d1e>
   14398:	be cf       	rjmp	.-132    	; 0x14316 <_Z12Pub_Sub_DataPcPhjh+0x1c9a>
   1439a:	93 94       	inc	r9
   1439c:	4f 5f       	subi	r20, 0xFF	; 255
   1439e:	5f 4f       	sbci	r21, 0xFF	; 255
   143a0:	f3 e0       	ldi	r31, 0x03	; 3
   143a2:	ef 0e       	add	r14, r31
   143a4:	f1 1c       	adc	r15, r1
   143a6:	4e 30       	cpi	r20, 0x0E	; 14
   143a8:	51 05       	cpc	r21, r1
   143aa:	09 f0       	breq	.+2      	; 0x143ae <_Z12Pub_Sub_DataPcPhjh+0x1d32>
   143ac:	84 cf       	rjmp	.-248    	; 0x142b6 <_Z12Pub_Sub_DataPcPhjh+0x1c3a>
   143ae:	2d e0       	ldi	r18, 0x0D	; 13
   143b0:	29 15       	cp	r18, r9
   143b2:	08 f0       	brcs	.+2      	; 0x143b6 <_Z12Pub_Sub_DataPcPhjh+0x1d3a>
   143b4:	89 c2       	rjmp	.+1298   	; 0x148c8 <_Z12Pub_Sub_DataPcPhjh+0x224c>
   143b6:	e1 2c       	mov	r14, r1
   143b8:	f1 2c       	mov	r15, r1
   143ba:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   143be:	81 30       	cpi	r24, 0x01	; 1
   143c0:	a1 f4       	brne	.+40     	; 0x143ea <_Z12Pub_Sub_DataPcPhjh+0x1d6e>
   143c2:	6e ea       	ldi	r22, 0xAE	; 174
   143c4:	73 e3       	ldi	r23, 0x33	; 51
   143c6:	86 ec       	ldi	r24, 0xC6	; 198
   143c8:	94 e1       	ldi	r25, 0x14	; 20
   143ca:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   143ce:	f7 01       	movw	r30, r14
   143d0:	e2 5e       	subi	r30, 0xE2	; 226
   143d2:	f6 4f       	sbci	r31, 0xF6	; 246
   143d4:	65 ad       	ldd	r22, Z+61	; 0x3d
   143d6:	4a e0       	ldi	r20, 0x0A	; 10
   143d8:	50 e0       	ldi	r21, 0x00	; 0
   143da:	86 ec       	ldi	r24, 0xC6	; 198
   143dc:	94 e1       	ldi	r25, 0x14	; 20
   143de:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   143e2:	86 ec       	ldi	r24, 0xC6	; 198
   143e4:	94 e1       	ldi	r25, 0x14	; 20
   143e6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   143ea:	4f ef       	ldi	r20, 0xFF	; 255
   143ec:	e4 1a       	sub	r14, r20
   143ee:	f4 0a       	sbc	r15, r20
   143f0:	5e e0       	ldi	r21, 0x0E	; 14
   143f2:	e5 16       	cp	r14, r21
   143f4:	f1 04       	cpc	r15, r1
   143f6:	09 f7       	brne	.-62     	; 0x143ba <_Z12Pub_Sub_DataPcPhjh+0x1d3e>
   143f8:	e1 2c       	mov	r14, r1
   143fa:	f1 2c       	mov	r15, r1
   143fc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14400:	81 30       	cpi	r24, 0x01	; 1
   14402:	b9 f4       	brne	.+46     	; 0x14432 <_Z12Pub_Sub_DataPcPhjh+0x1db6>
   14404:	6c e9       	ldi	r22, 0x9C	; 156
   14406:	73 e3       	ldi	r23, 0x33	; 51
   14408:	86 ec       	ldi	r24, 0xC6	; 198
   1440a:	94 e1       	ldi	r25, 0x14	; 20
   1440c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   14410:	f7 01       	movw	r30, r14
   14412:	ee 0f       	add	r30, r30
   14414:	ff 1f       	adc	r31, r31
   14416:	e2 5e       	subi	r30, 0xE2	; 226
   14418:	f6 4f       	sbci	r31, 0xF6	; 246
   1441a:	67 8d       	ldd	r22, Z+31	; 0x1f
   1441c:	70 a1       	ldd	r23, Z+32	; 0x20
   1441e:	4a e0       	ldi	r20, 0x0A	; 10
   14420:	50 e0       	ldi	r21, 0x00	; 0
   14422:	86 ec       	ldi	r24, 0xC6	; 198
   14424:	94 e1       	ldi	r25, 0x14	; 20
   14426:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
   1442a:	86 ec       	ldi	r24, 0xC6	; 198
   1442c:	94 e1       	ldi	r25, 0x14	; 20
   1442e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14432:	8f ef       	ldi	r24, 0xFF	; 255
   14434:	e8 1a       	sub	r14, r24
   14436:	f8 0a       	sbc	r15, r24
   14438:	9e e0       	ldi	r25, 0x0E	; 14
   1443a:	e9 16       	cp	r14, r25
   1443c:	f1 04       	cpc	r15, r1
   1443e:	f1 f6       	brne	.-68     	; 0x143fc <_Z12Pub_Sub_DataPcPhjh+0x1d80>
   14440:	e1 2c       	mov	r14, r1
   14442:	f1 2c       	mov	r15, r1
   14444:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14448:	81 30       	cpi	r24, 0x01	; 1
   1444a:	a1 f4       	brne	.+40     	; 0x14474 <_Z12Pub_Sub_DataPcPhjh+0x1df8>
   1444c:	62 e9       	ldi	r22, 0x92	; 146
   1444e:	73 e3       	ldi	r23, 0x33	; 51
   14450:	86 ec       	ldi	r24, 0xC6	; 198
   14452:	94 e1       	ldi	r25, 0x14	; 20
   14454:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   14458:	f7 01       	movw	r30, r14
   1445a:	e6 59       	subi	r30, 0x96	; 150
   1445c:	f6 4f       	sbci	r31, 0xF6	; 246
   1445e:	60 81       	ld	r22, Z
   14460:	4a e0       	ldi	r20, 0x0A	; 10
   14462:	50 e0       	ldi	r21, 0x00	; 0
   14464:	86 ec       	ldi	r24, 0xC6	; 198
   14466:	94 e1       	ldi	r25, 0x14	; 20
   14468:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   1446c:	86 ec       	ldi	r24, 0xC6	; 198
   1446e:	94 e1       	ldi	r25, 0x14	; 20
   14470:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14474:	af ef       	ldi	r26, 0xFF	; 255
   14476:	ea 1a       	sub	r14, r26
   14478:	fa 0a       	sbc	r15, r26
   1447a:	be e0       	ldi	r27, 0x0E	; 14
   1447c:	eb 16       	cp	r14, r27
   1447e:	f1 04       	cpc	r15, r1
   14480:	09 f7       	brne	.-62     	; 0x14444 <_Z12Pub_Sub_DataPcPhjh+0x1dc8>
   14482:	e1 2c       	mov	r14, r1
   14484:	f1 2c       	mov	r15, r1
   14486:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1448a:	81 30       	cpi	r24, 0x01	; 1
   1448c:	a1 f4       	brne	.+40     	; 0x144b6 <_Z12Pub_Sub_DataPcPhjh+0x1e3a>
   1448e:	66 e8       	ldi	r22, 0x86	; 134
   14490:	73 e3       	ldi	r23, 0x33	; 51
   14492:	86 ec       	ldi	r24, 0xC6	; 198
   14494:	94 e1       	ldi	r25, 0x14	; 20
   14496:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1449a:	f7 01       	movw	r30, r14
   1449c:	e1 59       	subi	r30, 0x91	; 145
   1449e:	f5 4f       	sbci	r31, 0xF5	; 245
   144a0:	60 81       	ld	r22, Z
   144a2:	4a e0       	ldi	r20, 0x0A	; 10
   144a4:	50 e0       	ldi	r21, 0x00	; 0
   144a6:	86 ec       	ldi	r24, 0xC6	; 198
   144a8:	94 e1       	ldi	r25, 0x14	; 20
   144aa:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   144ae:	86 ec       	ldi	r24, 0xC6	; 198
   144b0:	94 e1       	ldi	r25, 0x14	; 20
   144b2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   144b6:	ef ef       	ldi	r30, 0xFF	; 255
   144b8:	ee 1a       	sub	r14, r30
   144ba:	fe 0a       	sbc	r15, r30
   144bc:	f7 e2       	ldi	r31, 0x27	; 39
   144be:	ef 16       	cp	r14, r31
   144c0:	f1 04       	cpc	r15, r1
   144c2:	09 f7       	brne	.-62     	; 0x14486 <_Z12Pub_Sub_DataPcPhjh+0x1e0a>
   144c4:	e1 2c       	mov	r14, r1
   144c6:	f1 2c       	mov	r15, r1
   144c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   144cc:	81 30       	cpi	r24, 0x01	; 1
   144ce:	a1 f4       	brne	.+40     	; 0x144f8 <_Z12Pub_Sub_DataPcPhjh+0x1e7c>
   144d0:	6c e7       	ldi	r22, 0x7C	; 124
   144d2:	73 e3       	ldi	r23, 0x33	; 51
   144d4:	86 ec       	ldi	r24, 0xC6	; 198
   144d6:	94 e1       	ldi	r25, 0x14	; 20
   144d8:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   144dc:	f7 01       	movw	r30, r14
   144de:	e8 56       	subi	r30, 0x68	; 104
   144e0:	f6 4f       	sbci	r31, 0xF6	; 246
   144e2:	60 81       	ld	r22, Z
   144e4:	4a e0       	ldi	r20, 0x0A	; 10
   144e6:	50 e0       	ldi	r21, 0x00	; 0
   144e8:	86 ec       	ldi	r24, 0xC6	; 198
   144ea:	94 e1       	ldi	r25, 0x14	; 20
   144ec:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   144f0:	86 ec       	ldi	r24, 0xC6	; 198
   144f2:	94 e1       	ldi	r25, 0x14	; 20
   144f4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   144f8:	2f ef       	ldi	r18, 0xFF	; 255
   144fa:	e2 1a       	sub	r14, r18
   144fc:	f2 0a       	sbc	r15, r18
   144fe:	37 e2       	ldi	r19, 0x27	; 39
   14500:	e3 16       	cp	r14, r19
   14502:	f1 04       	cpc	r15, r1
   14504:	09 f7       	brne	.-62     	; 0x144c8 <_Z12Pub_Sub_DataPcPhjh+0x1e4c>
   14506:	e1 2c       	mov	r14, r1
   14508:	f1 2c       	mov	r15, r1
   1450a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1450e:	81 30       	cpi	r24, 0x01	; 1
   14510:	b9 f4       	brne	.+46     	; 0x14540 <_Z12Pub_Sub_DataPcPhjh+0x1ec4>
   14512:	6c e6       	ldi	r22, 0x6C	; 108
   14514:	73 e3       	ldi	r23, 0x33	; 51
   14516:	86 ec       	ldi	r24, 0xC6	; 198
   14518:	94 e1       	ldi	r25, 0x14	; 20
   1451a:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1451e:	f7 01       	movw	r30, r14
   14520:	ee 0f       	add	r30, r30
   14522:	ff 1f       	adc	r31, r31
   14524:	ed 53       	subi	r30, 0x3D	; 61
   14526:	f6 4f       	sbci	r31, 0xF6	; 246
   14528:	60 81       	ld	r22, Z
   1452a:	71 81       	ldd	r23, Z+1	; 0x01
   1452c:	4a e0       	ldi	r20, 0x0A	; 10
   1452e:	50 e0       	ldi	r21, 0x00	; 0
   14530:	86 ec       	ldi	r24, 0xC6	; 198
   14532:	94 e1       	ldi	r25, 0x14	; 20
   14534:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
   14538:	86 ec       	ldi	r24, 0xC6	; 198
   1453a:	94 e1       	ldi	r25, 0x14	; 20
   1453c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14540:	4f ef       	ldi	r20, 0xFF	; 255
   14542:	e4 1a       	sub	r14, r20
   14544:	f4 0a       	sbc	r15, r20
   14546:	57 e2       	ldi	r21, 0x27	; 39
   14548:	e5 16       	cp	r14, r21
   1454a:	f1 04       	cpc	r15, r1
   1454c:	f1 f6       	brne	.-68     	; 0x1450a <_Z12Pub_Sub_DataPcPhjh+0x1e8e>
   1454e:	e1 2c       	mov	r14, r1
   14550:	f1 2c       	mov	r15, r1
   14552:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14556:	81 30       	cpi	r24, 0x01	; 1
   14558:	b9 f4       	brne	.+46     	; 0x14588 <_Z12Pub_Sub_DataPcPhjh+0x1f0c>
   1455a:	6c e5       	ldi	r22, 0x5C	; 92
   1455c:	73 e3       	ldi	r23, 0x33	; 51
   1455e:	86 ec       	ldi	r24, 0xC6	; 198
   14560:	94 e1       	ldi	r25, 0x14	; 20
   14562:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   14566:	f7 01       	movw	r30, r14
   14568:	ee 0f       	add	r30, r30
   1456a:	ff 1f       	adc	r31, r31
   1456c:	e7 5e       	subi	r30, 0xE7	; 231
   1456e:	f5 4f       	sbci	r31, 0xF5	; 245
   14570:	60 81       	ld	r22, Z
   14572:	71 81       	ldd	r23, Z+1	; 0x01
   14574:	4a e0       	ldi	r20, 0x0A	; 10
   14576:	50 e0       	ldi	r21, 0x00	; 0
   14578:	86 ec       	ldi	r24, 0xC6	; 198
   1457a:	94 e1       	ldi	r25, 0x14	; 20
   1457c:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
   14580:	86 ec       	ldi	r24, 0xC6	; 198
   14582:	94 e1       	ldi	r25, 0x14	; 20
   14584:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14588:	8f ef       	ldi	r24, 0xFF	; 255
   1458a:	e8 1a       	sub	r14, r24
   1458c:	f8 0a       	sbc	r15, r24
   1458e:	97 e2       	ldi	r25, 0x27	; 39
   14590:	e9 16       	cp	r14, r25
   14592:	f1 04       	cpc	r15, r1
   14594:	f1 f6       	brne	.-68     	; 0x14552 <_Z12Pub_Sub_DataPcPhjh+0x1ed6>
   14596:	80 91 99 0b 	lds	r24, 0x0B99	; 0x800b99 <_sSchedules+0x27b>
   1459a:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   1459e:	80 91 92 0b 	lds	r24, 0x0B92	; 0x800b92 <_sSchedules+0x274>
   145a2:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <_sSchedules+0x1d>
   145a6:	80 91 94 0b 	lds	r24, 0x0B94	; 0x800b94 <_sSchedules+0x276>
   145aa:	80 93 3a 09 	sts	0x093A, r24	; 0x80093a <_sSchedules+0x1c>
   145ae:	80 91 95 0b 	lds	r24, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   145b2:	90 91 96 0b 	lds	r25, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   145b6:	a0 91 97 0b 	lds	r26, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   145ba:	b0 91 98 0b 	lds	r27, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   145be:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
   145c2:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
   145c6:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
   145ca:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
   145ce:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
   145d2:	88 e6       	ldi	r24, 0x68	; 104
   145d4:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   145d8:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
   145dc:	80 93 d7 0b 	sts	0x0BD7, r24	; 0x800bd7 <_sSchedules+0x2b9>
   145e0:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   145e4:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   145e8:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
   145ec:	80 91 e7 0b 	lds	r24, 0x0BE7	; 0x800be7 <_sSchedules+0x2c9>
   145f0:	80 93 e6 0b 	sts	0x0BE6, r24	; 0x800be6 <_sSchedules+0x2c8>
   145f4:	80 91 f1 0b 	lds	r24, 0x0BF1	; 0x800bf1 <_sSchedules+0x2d3>
   145f8:	80 93 f0 0b 	sts	0x0BF0, r24	; 0x800bf0 <_sSchedules+0x2d2>
   145fc:	80 91 f3 0b 	lds	r24, 0x0BF3	; 0x800bf3 <_sSchedules+0x2d5>
   14600:	80 93 f2 0b 	sts	0x0BF2, r24	; 0x800bf2 <_sSchedules+0x2d4>
   14604:	0e 94 79 86 	call	0x10cf2	; 0x10cf2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   14608:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1460c:	81 30       	cpi	r24, 0x01	; 1
   1460e:	09 f0       	breq	.+2      	; 0x14612 <_Z12Pub_Sub_DataPcPhjh+0x1f96>
   14610:	65 c1       	rjmp	.+714    	; 0x148dc <_Z12Pub_Sub_DataPcPhjh+0x2260>
   14612:	6b e4       	ldi	r22, 0x4B	; 75
   14614:	73 e3       	ldi	r23, 0x33	; 51
   14616:	86 ec       	ldi	r24, 0xC6	; 198
   14618:	94 e1       	ldi	r25, 0x14	; 20
   1461a:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1461e:	60 91 f2 0b 	lds	r22, 0x0BF2	; 0x800bf2 <_sSchedules+0x2d4>
   14622:	4a e0       	ldi	r20, 0x0A	; 10
   14624:	50 e0       	ldi	r21, 0x00	; 0
   14626:	86 ec       	ldi	r24, 0xC6	; 198
   14628:	94 e1       	ldi	r25, 0x14	; 20
   1462a:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   1462e:	a1 e0       	ldi	r26, 0x01	; 1
   14630:	c0 55       	subi	r28, 0x50	; 80
   14632:	d9 4f       	sbci	r29, 0xF9	; 249
   14634:	a8 83       	st	Y, r26
   14636:	c0 5b       	subi	r28, 0xB0	; 176
   14638:	d6 40       	sbci	r29, 0x06	; 6
   1463a:	88 e2       	ldi	r24, 0x28	; 40
   1463c:	f8 01       	movw	r30, r16
   1463e:	11 92       	st	Z+, r1
   14640:	8a 95       	dec	r24
   14642:	e9 f7       	brne	.-6      	; 0x1463e <_Z12Pub_Sub_DataPcPhjh+0x1fc2>
   14644:	8e ec       	ldi	r24, 0xCE	; 206
   14646:	93 e1       	ldi	r25, 0x13	; 19
   14648:	9f 93       	push	r25
   1464a:	8f 93       	push	r24
   1464c:	8f e1       	ldi	r24, 0x1F	; 31
   1464e:	96 e0       	ldi	r25, 0x06	; 6
   14650:	9f 93       	push	r25
   14652:	8f 93       	push	r24
   14654:	1f 93       	push	r17
   14656:	0f 93       	push	r16
   14658:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   1465c:	ca 54       	subi	r28, 0x4A	; 74
   1465e:	d9 4f       	sbci	r29, 0xF9	; 249
   14660:	68 81       	ld	r22, Y
   14662:	79 81       	ldd	r23, Y+1	; 0x01
   14664:	c6 5b       	subi	r28, 0xB6	; 182
   14666:	d6 40       	sbci	r29, 0x06	; 6
   14668:	c8 01       	movw	r24, r16
   1466a:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   1466e:	0f 90       	pop	r0
   14670:	0f 90       	pop	r0
   14672:	0f 90       	pop	r0
   14674:	0f 90       	pop	r0
   14676:	0f 90       	pop	r0
   14678:	0f 90       	pop	r0
   1467a:	89 2b       	or	r24, r25
   1467c:	09 f0       	breq	.+2      	; 0x14680 <_Z12Pub_Sub_DataPcPhjh+0x2004>
   1467e:	42 c0       	rjmp	.+132    	; 0x14704 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   14680:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   14684:	10 92 ad 14 	sts	0x14AD, r1	; 0x8014ad <_sRuble_Parameters+0xff>
   14688:	6f e3       	ldi	r22, 0x3F	; 63
   1468a:	73 e3       	ldi	r23, 0x33	; 51
   1468c:	c2 01       	movw	r24, r4
   1468e:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14692:	88 23       	and	r24, r24
   14694:	e1 f0       	breq	.+56     	; 0x146ce <_Z12Pub_Sub_DataPcPhjh+0x2052>
   14696:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1469a:	82 30       	cpi	r24, 0x02	; 2
   1469c:	99 f5       	brne	.+102    	; 0x14704 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   1469e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   146a2:	81 30       	cpi	r24, 0x01	; 1
   146a4:	51 f4       	brne	.+20     	; 0x146ba <_Z12Pub_Sub_DataPcPhjh+0x203e>
   146a6:	6d e1       	ldi	r22, 0x1D	; 29
   146a8:	73 e3       	ldi	r23, 0x33	; 51
   146aa:	86 ec       	ldi	r24, 0xC6	; 198
   146ac:	94 e1       	ldi	r25, 0x14	; 20
   146ae:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   146b2:	86 ec       	ldi	r24, 0xC6	; 198
   146b4:	94 e1       	ldi	r25, 0x14	; 20
   146b6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   146ba:	81 e0       	ldi	r24, 0x01	; 1
   146bc:	80 93 67 14 	sts	0x1467, r24	; 0x801467 <_sRuble_Parameters+0xb9>
   146c0:	f1 e0       	ldi	r31, 0x01	; 1
   146c2:	c0 55       	subi	r28, 0x50	; 80
   146c4:	d9 4f       	sbci	r29, 0xF9	; 249
   146c6:	f8 83       	st	Y, r31
   146c8:	c0 5b       	subi	r28, 0xB0	; 176
   146ca:	d6 40       	sbci	r29, 0x06	; 6
   146cc:	1b c0       	rjmp	.+54     	; 0x14704 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   146ce:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   146d2:	82 30       	cpi	r24, 0x02	; 2
   146d4:	60 f0       	brcs	.+24     	; 0x146ee <_Z12Pub_Sub_DataPcPhjh+0x2072>
   146d6:	66 e0       	ldi	r22, 0x06	; 6
   146d8:	73 e3       	ldi	r23, 0x33	; 51
   146da:	86 ec       	ldi	r24, 0xC6	; 198
   146dc:	94 e1       	ldi	r25, 0x14	; 20
   146de:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   146e2:	81 e0       	ldi	r24, 0x01	; 1
   146e4:	80 93 67 14 	sts	0x1467, r24	; 0x801467 <_sRuble_Parameters+0xb9>
   146e8:	80 93 ad 14 	sts	0x14AD, r24	; 0x8014ad <_sRuble_Parameters+0xff>
   146ec:	0b c0       	rjmp	.+22     	; 0x14704 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   146ee:	82 e0       	ldi	r24, 0x02	; 2
   146f0:	80 93 ad 14 	sts	0x14AD, r24	; 0x8014ad <_sRuble_Parameters+0xff>
   146f4:	10 92 79 14 	sts	0x1479, r1	; 0x801479 <_sRuble_Parameters+0xcb>
   146f8:	69 e7       	ldi	r22, 0x79	; 121
   146fa:	74 e1       	ldi	r23, 0x14	; 20
   146fc:	81 ea       	ldi	r24, 0xA1	; 161
   146fe:	9c e0       	ldi	r25, 0x0C	; 12
   14700:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   14704:	88 e2       	ldi	r24, 0x28	; 40
   14706:	d8 01       	movw	r26, r16
   14708:	1d 92       	st	X+, r1
   1470a:	8a 95       	dec	r24
   1470c:	e9 f7       	brne	.-6      	; 0x14708 <_Z12Pub_Sub_DataPcPhjh+0x208c>
   1470e:	8e ec       	ldi	r24, 0xCE	; 206
   14710:	93 e1       	ldi	r25, 0x13	; 19
   14712:	9f 93       	push	r25
   14714:	8f 93       	push	r24
   14716:	84 e4       	ldi	r24, 0x44	; 68
   14718:	96 e0       	ldi	r25, 0x06	; 6
   1471a:	9f 93       	push	r25
   1471c:	8f 93       	push	r24
   1471e:	1f 93       	push	r17
   14720:	0f 93       	push	r16
   14722:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14726:	ca 54       	subi	r28, 0x4A	; 74
   14728:	d9 4f       	sbci	r29, 0xF9	; 249
   1472a:	68 81       	ld	r22, Y
   1472c:	79 81       	ldd	r23, Y+1	; 0x01
   1472e:	c6 5b       	subi	r28, 0xB6	; 182
   14730:	d6 40       	sbci	r29, 0x06	; 6
   14732:	c8 01       	movw	r24, r16
   14734:	0e 94 36 ed 	call	0x1da6c	; 0x1da6c <strcmp>
   14738:	0f 90       	pop	r0
   1473a:	0f 90       	pop	r0
   1473c:	0f 90       	pop	r0
   1473e:	0f 90       	pop	r0
   14740:	0f 90       	pop	r0
   14742:	0f 90       	pop	r0
   14744:	89 2b       	or	r24, r25
   14746:	09 f0       	breq	.+2      	; 0x1474a <_Z12Pub_Sub_DataPcPhjh+0x20ce>
   14748:	73 c0       	rjmp	.+230    	; 0x14830 <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   1474a:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   1474e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   14752:	82 30       	cpi	r24, 0x02	; 2
   14754:	09 f4       	brne	.+2      	; 0x14758 <_Z12Pub_Sub_DataPcPhjh+0x20dc>
   14756:	6c c0       	rjmp	.+216    	; 0x14830 <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   14758:	62 e0       	ldi	r22, 0x02	; 2
   1475a:	73 e3       	ldi	r23, 0x33	; 51
   1475c:	c2 01       	movw	r24, r4
   1475e:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14762:	18 2f       	mov	r17, r24
   14764:	6b ef       	ldi	r22, 0xFB	; 251
   14766:	72 e3       	ldi	r23, 0x32	; 50
   14768:	c2 01       	movw	r24, r4
   1476a:	0e 94 1b 8e 	call	0x11c36	; 0x11c36 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1476e:	08 2f       	mov	r16, r24
   14770:	17 36       	cpi	r17, 0x67	; 103
   14772:	21 f0       	breq	.+8      	; 0x1477c <_Z12Pub_Sub_DataPcPhjh+0x2100>
   14774:	1d 36       	cpi	r17, 0x6D	; 109
   14776:	11 f0       	breq	.+4      	; 0x1477c <_Z12Pub_Sub_DataPcPhjh+0x2100>
   14778:	0c 94 6c 94 	jmp	0x128d8	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   1477c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14780:	81 30       	cpi	r24, 0x01	; 1
   14782:	51 f4       	brne	.+20     	; 0x14798 <_Z12Pub_Sub_DataPcPhjh+0x211c>
   14784:	6a eb       	ldi	r22, 0xBA	; 186
   14786:	72 e3       	ldi	r23, 0x32	; 50
   14788:	86 ec       	ldi	r24, 0xC6	; 198
   1478a:	94 e1       	ldi	r25, 0x14	; 20
   1478c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   14790:	86 ec       	ldi	r24, 0xC6	; 198
   14792:	94 e1       	ldi	r25, 0x14	; 20
   14794:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14798:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1479c:	88 23       	and	r24, r24
   1479e:	21 f0       	breq	.+8      	; 0x147a8 <_Z12Pub_Sub_DataPcPhjh+0x212c>
   147a0:	1d 36       	cpi	r17, 0x6D	; 109
   147a2:	11 f4       	brne	.+4      	; 0x147a8 <_Z12Pub_Sub_DataPcPhjh+0x212c>
   147a4:	0c 94 6c 94 	jmp	0x128d8	; 0x128d8 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   147a8:	15 36       	cpi	r17, 0x65	; 101
   147aa:	08 f4       	brcc	.+2      	; 0x147ae <_Z12Pub_Sub_DataPcPhjh+0x2132>
   147ac:	41 c0       	rjmp	.+130    	; 0x14830 <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   147ae:	81 2f       	mov	r24, r17
   147b0:	90 e0       	ldi	r25, 0x00	; 0
   147b2:	85 56       	subi	r24, 0x65	; 101
   147b4:	91 09       	sbc	r25, r1
   147b6:	4b e1       	ldi	r20, 0x1B	; 27
   147b8:	48 9f       	mul	r20, r24
   147ba:	f0 01       	movw	r30, r0
   147bc:	49 9f       	mul	r20, r25
   147be:	f0 0d       	add	r31, r0
   147c0:	11 24       	eor	r1, r1
   147c2:	e8 51       	subi	r30, 0x18	; 24
   147c4:	f2 4f       	sbci	r31, 0xF2	; 242
   147c6:	81 81       	ldd	r24, Z+1	; 0x01
   147c8:	88 23       	and	r24, r24
   147ca:	91 f1       	breq	.+100    	; 0x14830 <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   147cc:	9b e9       	ldi	r25, 0x9B	; 155
   147ce:	91 0f       	add	r25, r17
   147d0:	29 2f       	mov	r18, r25
   147d2:	30 e0       	ldi	r19, 0x00	; 0
   147d4:	42 9f       	mul	r20, r18
   147d6:	f0 01       	movw	r30, r0
   147d8:	43 9f       	mul	r20, r19
   147da:	f0 0d       	add	r31, r0
   147dc:	11 24       	eor	r1, r1
   147de:	e8 51       	subi	r30, 0x18	; 24
   147e0:	f2 4f       	sbci	r31, 0xF2	; 242
   147e2:	82 81       	ldd	r24, Z+2	; 0x02
   147e4:	84 30       	cpi	r24, 0x04	; 4
   147e6:	21 f1       	breq	.+72     	; 0x14830 <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   147e8:	94 30       	cpi	r25, 0x04	; 4
   147ea:	11 f1       	breq	.+68     	; 0x14830 <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   147ec:	43 81       	ldd	r20, Z+3	; 0x03
   147ee:	54 81       	ldd	r21, Z+4	; 0x04
   147f0:	45 2b       	or	r20, r21
   147f2:	f1 f4       	brne	.+60     	; 0x14830 <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   147f4:	00 23       	and	r16, r16
   147f6:	31 f0       	breq	.+12     	; 0x14804 <_Z12Pub_Sub_DataPcPhjh+0x2188>
   147f8:	81 e0       	ldi	r24, 0x01	; 1
   147fa:	82 87       	std	Z+10, r24	; 0x0a
   147fc:	82 e0       	ldi	r24, 0x02	; 2
   147fe:	82 83       	std	Z+2, r24	; 0x02
   14800:	83 87       	std	Z+11, r24	; 0x0b
   14802:	11 c0       	rjmp	.+34     	; 0x14826 <_Z12Pub_Sub_DataPcPhjh+0x21aa>
   14804:	82 30       	cpi	r24, 0x02	; 2
   14806:	19 f4       	brne	.+6      	; 0x1480e <_Z12Pub_Sub_DataPcPhjh+0x2192>
   14808:	93 e0       	ldi	r25, 0x03	; 3
   1480a:	92 83       	std	Z+2, r25	; 0x02
   1480c:	02 c0       	rjmp	.+4      	; 0x14812 <_Z12Pub_Sub_DataPcPhjh+0x2196>
   1480e:	82 e0       	ldi	r24, 0x02	; 2
   14810:	82 83       	std	Z+2, r24	; 0x02
   14812:	83 87       	std	Z+11, r24	; 0x0b
   14814:	8b e1       	ldi	r24, 0x1B	; 27
   14816:	82 9f       	mul	r24, r18
   14818:	f0 01       	movw	r30, r0
   1481a:	83 9f       	mul	r24, r19
   1481c:	f0 0d       	add	r31, r0
   1481e:	11 24       	eor	r1, r1
   14820:	e8 51       	subi	r30, 0x18	; 24
   14822:	f2 4f       	sbci	r31, 0xF2	; 242
   14824:	12 86       	std	Z+10, r1	; 0x0a
   14826:	8c e9       	ldi	r24, 0x9C	; 156
   14828:	81 0f       	add	r24, r17
   1482a:	0e 94 89 7a 	call	0xf512	; 0xf512 <_Z21Exra_Plot_Data_EEPROMh>
   1482e:	08 c0       	rjmp	.+16     	; 0x14840 <_Z12Pub_Sub_DataPcPhjh+0x21c4>
   14830:	c0 55       	subi	r28, 0x50	; 80
   14832:	d9 4f       	sbci	r29, 0xF9	; 249
   14834:	b8 81       	ld	r27, Y
   14836:	c0 5b       	subi	r28, 0xB0	; 176
   14838:	d6 40       	sbci	r29, 0x06	; 6
   1483a:	b1 30       	cpi	r27, 0x01	; 1
   1483c:	09 f0       	breq	.+2      	; 0x14840 <_Z12Pub_Sub_DataPcPhjh+0x21c4>
   1483e:	55 c0       	rjmp	.+170    	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x226e>
   14840:	8e e6       	ldi	r24, 0x6E	; 110
   14842:	e2 e6       	ldi	r30, 0x62	; 98
   14844:	ff e0       	ldi	r31, 0x0F	; 15
   14846:	df 01       	movw	r26, r30
   14848:	1d 92       	st	X+, r1
   1484a:	8a 95       	dec	r24
   1484c:	e9 f7       	brne	.-6      	; 0x14848 <_Z12Pub_Sub_DataPcPhjh+0x21cc>
   1484e:	62 e4       	ldi	r22, 0x42	; 66
   14850:	75 e0       	ldi	r23, 0x05	; 5
   14852:	cf 01       	movw	r24, r30
   14854:	0e 94 3f ed 	call	0x1da7e	; 0x1da7e <strcpy>
   14858:	88 e2       	ldi	r24, 0x28	; 40
   1485a:	c2 55       	subi	r28, 0x52	; 82
   1485c:	d9 4f       	sbci	r29, 0xF9	; 249
   1485e:	e8 81       	ld	r30, Y
   14860:	f9 81       	ldd	r31, Y+1	; 0x01
   14862:	ce 5a       	subi	r28, 0xAE	; 174
   14864:	d6 40       	sbci	r29, 0x06	; 6
   14866:	11 92       	st	Z+, r1
   14868:	8a 95       	dec	r24
   1486a:	e9 f7       	brne	.-6      	; 0x14866 <_Z12Pub_Sub_DataPcPhjh+0x21ea>
   1486c:	8e ec       	ldi	r24, 0xCE	; 206
   1486e:	93 e1       	ldi	r25, 0x13	; 19
   14870:	9f 93       	push	r25
   14872:	8f 93       	push	r24
   14874:	8a e1       	ldi	r24, 0x1A	; 26
   14876:	97 e0       	ldi	r25, 0x07	; 7
   14878:	9f 93       	push	r25
   1487a:	8f 93       	push	r24
   1487c:	c1 55       	subi	r28, 0x51	; 81
   1487e:	d9 4f       	sbci	r29, 0xF9	; 249
   14880:	f8 81       	ld	r31, Y
   14882:	cf 5a       	subi	r28, 0xAF	; 175
   14884:	d6 40       	sbci	r29, 0x06	; 6
   14886:	ff 93       	push	r31
   14888:	c2 55       	subi	r28, 0x52	; 82
   1488a:	d9 4f       	sbci	r29, 0xF9	; 249
   1488c:	28 81       	ld	r18, Y
   1488e:	ce 5a       	subi	r28, 0xAE	; 174
   14890:	d6 40       	sbci	r29, 0x06	; 6
   14892:	2f 93       	push	r18
   14894:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14898:	62 e6       	ldi	r22, 0x62	; 98
   1489a:	7f e0       	ldi	r23, 0x0F	; 15
   1489c:	ce 01       	movw	r24, r28
   1489e:	8b 5c       	subi	r24, 0xCB	; 203
   148a0:	99 4f       	sbci	r25, 0xF9	; 249
   148a2:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   148a6:	84 ed       	ldi	r24, 0xD4	; 212
   148a8:	93 e0       	ldi	r25, 0x03	; 3
   148aa:	e0 ed       	ldi	r30, 0xD0	; 208
   148ac:	ff e0       	ldi	r31, 0x0F	; 15
   148ae:	df 01       	movw	r26, r30
   148b0:	9c 01       	movw	r18, r24
   148b2:	1d 92       	st	X+, r1
   148b4:	21 50       	subi	r18, 0x01	; 1
   148b6:	30 40       	sbci	r19, 0x00	; 0
   148b8:	e1 f7       	brne	.-8      	; 0x148b2 <_Z12Pub_Sub_DataPcPhjh+0x2236>
   148ba:	0f 90       	pop	r0
   148bc:	0f 90       	pop	r0
   148be:	0f 90       	pop	r0
   148c0:	0f 90       	pop	r0
   148c2:	0f 90       	pop	r0
   148c4:	0f 90       	pop	r0
   148c6:	11 c0       	rjmp	.+34     	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x226e>
   148c8:	e9 2d       	mov	r30, r9
   148ca:	f0 e0       	ldi	r31, 0x00	; 0
   148cc:	e2 5e       	subi	r30, 0xE2	; 226
   148ce:	f6 4f       	sbci	r31, 0xF6	; 246
   148d0:	15 ae       	std	Z+61, r1	; 0x3d
   148d2:	93 94       	inc	r9
   148d4:	3e e0       	ldi	r19, 0x0E	; 14
   148d6:	93 12       	cpse	r9, r19
   148d8:	f7 cf       	rjmp	.-18     	; 0x148c8 <_Z12Pub_Sub_DataPcPhjh+0x224c>
   148da:	6d cd       	rjmp	.-1318   	; 0x143b6 <_Z12Pub_Sub_DataPcPhjh+0x1d3a>
   148dc:	b1 e0       	ldi	r27, 0x01	; 1
   148de:	c0 55       	subi	r28, 0x50	; 80
   148e0:	d9 4f       	sbci	r29, 0xF9	; 249
   148e2:	b8 83       	st	Y, r27
   148e4:	c0 5b       	subi	r28, 0xB0	; 176
   148e6:	d6 40       	sbci	r29, 0x06	; 6
   148e8:	a8 ce       	rjmp	.-688    	; 0x1463a <_Z12Pub_Sub_DataPcPhjh+0x1fbe>
   148ea:	c2 54       	subi	r28, 0x42	; 66
   148ec:	d9 4f       	sbci	r29, 0xF9	; 249
   148ee:	0f b6       	in	r0, 0x3f	; 63
   148f0:	f8 94       	cli
   148f2:	de bf       	out	0x3e, r29	; 62
   148f4:	0f be       	out	0x3f, r0	; 63
   148f6:	cd bf       	out	0x3d, r28	; 61
   148f8:	df 91       	pop	r29
   148fa:	cf 91       	pop	r28
   148fc:	1f 91       	pop	r17
   148fe:	0f 91       	pop	r16
   14900:	ff 90       	pop	r15
   14902:	ef 90       	pop	r14
   14904:	df 90       	pop	r13
   14906:	cf 90       	pop	r12
   14908:	bf 90       	pop	r11
   1490a:	af 90       	pop	r10
   1490c:	9f 90       	pop	r9
   1490e:	8f 90       	pop	r8
   14910:	7f 90       	pop	r7
   14912:	6f 90       	pop	r6
   14914:	5f 90       	pop	r5
   14916:	4f 90       	pop	r4
   14918:	3f 90       	pop	r3
   1491a:	2f 90       	pop	r2
   1491c:	08 95       	ret

0001491e <_Z12Publish_Datav>:
   1491e:	6f 92       	push	r6
   14920:	7f 92       	push	r7
   14922:	8f 92       	push	r8
   14924:	9f 92       	push	r9
   14926:	af 92       	push	r10
   14928:	bf 92       	push	r11
   1492a:	cf 92       	push	r12
   1492c:	df 92       	push	r13
   1492e:	ef 92       	push	r14
   14930:	ff 92       	push	r15
   14932:	0f 93       	push	r16
   14934:	1f 93       	push	r17
   14936:	cf 93       	push	r28
   14938:	df 93       	push	r29
   1493a:	cd b7       	in	r28, 0x3d	; 61
   1493c:	de b7       	in	r29, 0x3e	; 62
   1493e:	c4 5f       	subi	r28, 0xF4	; 244
   14940:	d1 40       	sbci	r29, 0x01	; 1
   14942:	0f b6       	in	r0, 0x3f	; 63
   14944:	f8 94       	cli
   14946:	de bf       	out	0x3e, r29	; 62
   14948:	0f be       	out	0x3f, r0	; 63
   1494a:	cd bf       	out	0x3d, r28	; 61
   1494c:	82 e0       	ldi	r24, 0x02	; 2
   1494e:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14952:	ce 01       	movw	r24, r28
   14954:	09 96       	adiw	r24, 0x09	; 9
   14956:	9c 83       	std	Y+4, r25	; 0x04
   14958:	8b 83       	std	Y+3, r24	; 0x03
   1495a:	8e e0       	ldi	r24, 0x0E	; 14
   1495c:	91 e0       	ldi	r25, 0x01	; 1
   1495e:	9e 83       	std	Y+6, r25	; 0x06
   14960:	8d 83       	std	Y+5, r24	; 0x05
   14962:	18 86       	std	Y+8, r1	; 0x08
   14964:	1f 82       	std	Y+7, r1	; 0x07
   14966:	89 ed       	ldi	r24, 0xD9	; 217
   14968:	97 e0       	ldi	r25, 0x07	; 7
   1496a:	9a 83       	std	Y+2, r25	; 0x02
   1496c:	89 83       	std	Y+1, r24	; 0x01
   1496e:	ce 01       	movw	r24, r28
   14970:	01 96       	adiw	r24, 0x01	; 1
   14972:	0e 94 c2 85 	call	0x10b84	; 0x10b84 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   14976:	8c 01       	movw	r16, r24
   14978:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1497c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14980:	81 ff       	sbrs	r24, 1
   14982:	69 c0       	rjmp	.+210    	; 0x14a56 <_Z12Publish_Datav+0x138>
   14984:	7e 01       	movw	r14, r28
   14986:	29 ee       	ldi	r18, 0xE9	; 233
   14988:	e2 1a       	sub	r14, r18
   1498a:	2e ef       	ldi	r18, 0xFE	; 254
   1498c:	f2 0a       	sbc	r15, r18
   1498e:	8c ed       	ldi	r24, 0xDC	; 220
   14990:	d7 01       	movw	r26, r14
   14992:	1d 92       	st	X+, r1
   14994:	8a 95       	dec	r24
   14996:	e9 f7       	brne	.-6      	; 0x14992 <_Z12Publish_Datav+0x74>
   14998:	4c ea       	ldi	r20, 0xAC	; 172
   1499a:	53 e1       	ldi	r21, 0x13	; 19
   1499c:	64 eb       	ldi	r22, 0xB4	; 180
   1499e:	72 e3       	ldi	r23, 0x32	; 50
   149a0:	c8 01       	movw	r24, r16
   149a2:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   149a6:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   149aa:	82 30       	cpi	r24, 0x02	; 2
   149ac:	80 f0       	brcs	.+32     	; 0x149ce <_Z12Publish_Datav+0xb0>
   149ae:	90 e0       	ldi	r25, 0x00	; 0
   149b0:	02 97       	sbiw	r24, 0x02	; 2
   149b2:	2b e0       	ldi	r18, 0x0B	; 11
   149b4:	28 9f       	mul	r18, r24
   149b6:	a0 01       	movw	r20, r0
   149b8:	29 9f       	mul	r18, r25
   149ba:	50 0d       	add	r21, r0
   149bc:	11 24       	eor	r1, r1
   149be:	44 50       	subi	r20, 0x04	; 4
   149c0:	54 4f       	sbci	r21, 0xF4	; 244
   149c2:	6f ea       	ldi	r22, 0xAF	; 175
   149c4:	72 e3       	ldi	r23, 0x32	; 50
   149c6:	c8 01       	movw	r24, r16
   149c8:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   149cc:	0e c0       	rjmp	.+28     	; 0x149ea <_Z12Publish_Datav+0xcc>
   149ce:	cd 50       	subi	r28, 0x0D	; 13
   149d0:	de 4f       	sbci	r29, 0xFE	; 254
   149d2:	19 82       	std	Y+1, r1	; 0x01
   149d4:	18 82       	st	Y, r1
   149d6:	c3 5f       	subi	r28, 0xF3	; 243
   149d8:	d1 40       	sbci	r29, 0x01	; 1
   149da:	ae 01       	movw	r20, r28
   149dc:	4d 50       	subi	r20, 0x0D	; 13
   149de:	5e 4f       	sbci	r21, 0xFE	; 254
   149e0:	6a ea       	ldi	r22, 0xAA	; 170
   149e2:	72 e3       	ldi	r23, 0x32	; 50
   149e4:	c8 01       	movw	r24, r16
   149e6:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149ea:	4c ed       	ldi	r20, 0xDC	; 220
   149ec:	50 e0       	ldi	r21, 0x00	; 0
   149ee:	b7 01       	movw	r22, r14
   149f0:	c8 01       	movw	r24, r16
   149f2:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   149f6:	e2 e6       	ldi	r30, 0x62	; 98
   149f8:	ff e0       	ldi	r31, 0x0F	; 15
   149fa:	8e e6       	ldi	r24, 0x6E	; 110
   149fc:	df 01       	movw	r26, r30
   149fe:	1d 92       	st	X+, r1
   14a00:	8a 95       	dec	r24
   14a02:	e9 f7       	brne	.-6      	; 0x149fe <_Z12Publish_Datav+0xe0>
   14a04:	8e ec       	ldi	r24, 0xCE	; 206
   14a06:	93 e1       	ldi	r25, 0x13	; 19
   14a08:	9f 93       	push	r25
   14a0a:	8f 93       	push	r24
   14a0c:	8c e2       	ldi	r24, 0x2C	; 44
   14a0e:	97 e0       	ldi	r25, 0x07	; 7
   14a10:	9f 93       	push	r25
   14a12:	8f 93       	push	r24
   14a14:	ff 93       	push	r31
   14a16:	ef 93       	push	r30
   14a18:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14a1c:	0f 90       	pop	r0
   14a1e:	0f 90       	pop	r0
   14a20:	0f 90       	pop	r0
   14a22:	0f 90       	pop	r0
   14a24:	0f 90       	pop	r0
   14a26:	0f 90       	pop	r0
   14a28:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14a2c:	88 23       	and	r24, r24
   14a2e:	69 f0       	breq	.+26     	; 0x14a4a <_Z12Publish_Datav+0x12c>
   14a30:	b7 01       	movw	r22, r14
   14a32:	82 e6       	ldi	r24, 0x62	; 98
   14a34:	9f e0       	ldi	r25, 0x0F	; 15
   14a36:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   14a3a:	81 11       	cpse	r24, r1
   14a3c:	06 c0       	rjmp	.+12     	; 0x14a4a <_Z12Publish_Datav+0x12c>
   14a3e:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14a42:	81 50       	subi	r24, 0x01	; 1
   14a44:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14a48:	ef cf       	rjmp	.-34     	; 0x14a28 <_Z12Publish_Datav+0x10a>
   14a4a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14a4e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14a52:	8d 7f       	andi	r24, 0xFD	; 253
   14a54:	a5 c0       	rjmp	.+330    	; 0x14ba0 <_Z12Publish_Datav+0x282>
   14a56:	83 ff       	sbrs	r24, 3
   14a58:	a9 c0       	rjmp	.+338    	; 0x14bac <_Z12Publish_Datav+0x28e>
   14a5a:	7e 01       	movw	r14, r28
   14a5c:	b9 ee       	ldi	r27, 0xE9	; 233
   14a5e:	eb 1a       	sub	r14, r27
   14a60:	be ef       	ldi	r27, 0xFE	; 254
   14a62:	fb 0a       	sbc	r15, r27
   14a64:	8c ed       	ldi	r24, 0xDC	; 220
   14a66:	f7 01       	movw	r30, r14
   14a68:	11 92       	st	Z+, r1
   14a6a:	8a 95       	dec	r24
   14a6c:	e9 f7       	brne	.-6      	; 0x14a68 <_Z12Publish_Datav+0x14a>
   14a6e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14a72:	81 30       	cpi	r24, 0x01	; 1
   14a74:	51 f4       	brne	.+20     	; 0x14a8a <_Z12Publish_Datav+0x16c>
   14a76:	65 e9       	ldi	r22, 0x95	; 149
   14a78:	72 e3       	ldi	r23, 0x32	; 50
   14a7a:	86 ec       	ldi	r24, 0xC6	; 198
   14a7c:	94 e1       	ldi	r25, 0x14	; 20
   14a7e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   14a82:	86 ec       	ldi	r24, 0xC6	; 198
   14a84:	94 e1       	ldi	r25, 0x14	; 20
   14a86:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14a8a:	8a e0       	ldi	r24, 0x0A	; 10
   14a8c:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   14a90:	21 e0       	ldi	r18, 0x01	; 1
   14a92:	89 2b       	or	r24, r25
   14a94:	09 f0       	breq	.+2      	; 0x14a98 <_Z12Publish_Datav+0x17a>
   14a96:	20 e0       	ldi	r18, 0x00	; 0
   14a98:	cd 50       	subi	r28, 0x0D	; 13
   14a9a:	de 4f       	sbci	r29, 0xFE	; 254
   14a9c:	28 83       	st	Y, r18
   14a9e:	c3 5f       	subi	r28, 0xF3	; 243
   14aa0:	d1 40       	sbci	r29, 0x01	; 1
   14aa2:	ae 01       	movw	r20, r28
   14aa4:	4d 50       	subi	r20, 0x0D	; 13
   14aa6:	5e 4f       	sbci	r21, 0xFE	; 254
   14aa8:	6d e8       	ldi	r22, 0x8D	; 141
   14aaa:	72 e3       	ldi	r23, 0x32	; 50
   14aac:	c8 01       	movw	r24, r16
   14aae:	0e 94 c2 8a 	call	0x11584	; 0x11584 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   14ab2:	cd 50       	subi	r28, 0x0D	; 13
   14ab4:	de 4f       	sbci	r29, 0xFE	; 254
   14ab6:	19 82       	std	Y+1, r1	; 0x01
   14ab8:	18 82       	st	Y, r1
   14aba:	c3 5f       	subi	r28, 0xF3	; 243
   14abc:	d1 40       	sbci	r29, 0x01	; 1
   14abe:	ae 01       	movw	r20, r28
   14ac0:	4d 50       	subi	r20, 0x0D	; 13
   14ac2:	5e 4f       	sbci	r21, 0xFE	; 254
   14ac4:	66 e8       	ldi	r22, 0x86	; 134
   14ac6:	72 e3       	ldi	r23, 0x32	; 50
   14ac8:	c8 01       	movw	r24, r16
   14aca:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ace:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   14ad2:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   14ad6:	00 97       	sbiw	r24, 0x00	; 0
   14ad8:	91 f0       	breq	.+36     	; 0x14afe <_Z12Publish_Datav+0x1e0>
   14ada:	6c e3       	ldi	r22, 0x3C	; 60
   14adc:	70 e0       	ldi	r23, 0x00	; 0
   14ade:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   14ae2:	6f 5f       	subi	r22, 0xFF	; 255
   14ae4:	7f 4f       	sbci	r23, 0xFF	; 255
   14ae6:	cd 50       	subi	r28, 0x0D	; 13
   14ae8:	de 4f       	sbci	r29, 0xFE	; 254
   14aea:	79 83       	std	Y+1, r23	; 0x01
   14aec:	68 83       	st	Y, r22
   14aee:	c3 5f       	subi	r28, 0xF3	; 243
   14af0:	d1 40       	sbci	r29, 0x01	; 1
   14af2:	ae 01       	movw	r20, r28
   14af4:	4d 50       	subi	r20, 0x0D	; 13
   14af6:	5e 4f       	sbci	r21, 0xFE	; 254
   14af8:	61 e8       	ldi	r22, 0x81	; 129
   14afa:	72 e3       	ldi	r23, 0x32	; 50
   14afc:	04 c0       	rjmp	.+8      	; 0x14b06 <_Z12Publish_Datav+0x1e8>
   14afe:	44 ec       	ldi	r20, 0xC4	; 196
   14b00:	53 e1       	ldi	r21, 0x13	; 19
   14b02:	6c e7       	ldi	r22, 0x7C	; 124
   14b04:	72 e3       	ldi	r23, 0x32	; 50
   14b06:	c8 01       	movw	r24, r16
   14b08:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14b0c:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   14b10:	83 30       	cpi	r24, 0x03	; 3
   14b12:	41 f4       	brne	.+16     	; 0x14b24 <_Z12Publish_Datav+0x206>
   14b14:	45 e6       	ldi	r20, 0x65	; 101
   14b16:	54 e1       	ldi	r21, 0x14	; 20
   14b18:	67 e7       	ldi	r22, 0x77	; 119
   14b1a:	72 e3       	ldi	r23, 0x32	; 50
   14b1c:	c8 01       	movw	r24, r16
   14b1e:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14b22:	09 c0       	rjmp	.+18     	; 0x14b36 <_Z12Publish_Datav+0x218>
   14b24:	47 e7       	ldi	r20, 0x77	; 119
   14b26:	54 e1       	ldi	r21, 0x14	; 20
   14b28:	62 e7       	ldi	r22, 0x72	; 114
   14b2a:	72 e3       	ldi	r23, 0x32	; 50
   14b2c:	c8 01       	movw	r24, r16
   14b2e:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14b32:	10 92 77 14 	sts	0x1477, r1	; 0x801477 <_sRuble_Parameters+0xc9>
   14b36:	4c ed       	ldi	r20, 0xDC	; 220
   14b38:	50 e0       	ldi	r21, 0x00	; 0
   14b3a:	b7 01       	movw	r22, r14
   14b3c:	c8 01       	movw	r24, r16
   14b3e:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14b42:	e2 e6       	ldi	r30, 0x62	; 98
   14b44:	ff e0       	ldi	r31, 0x0F	; 15
   14b46:	8e e6       	ldi	r24, 0x6E	; 110
   14b48:	df 01       	movw	r26, r30
   14b4a:	1d 92       	st	X+, r1
   14b4c:	8a 95       	dec	r24
   14b4e:	e9 f7       	brne	.-6      	; 0x14b4a <_Z12Publish_Datav+0x22c>
   14b50:	8e ec       	ldi	r24, 0xCE	; 206
   14b52:	93 e1       	ldi	r25, 0x13	; 19
   14b54:	9f 93       	push	r25
   14b56:	8f 93       	push	r24
   14b58:	8b e3       	ldi	r24, 0x3B	; 59
   14b5a:	97 e0       	ldi	r25, 0x07	; 7
   14b5c:	9f 93       	push	r25
   14b5e:	8f 93       	push	r24
   14b60:	ff 93       	push	r31
   14b62:	ef 93       	push	r30
   14b64:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14b68:	0f 90       	pop	r0
   14b6a:	0f 90       	pop	r0
   14b6c:	0f 90       	pop	r0
   14b6e:	0f 90       	pop	r0
   14b70:	0f 90       	pop	r0
   14b72:	0f 90       	pop	r0
   14b74:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14b78:	88 23       	and	r24, r24
   14b7a:	69 f0       	breq	.+26     	; 0x14b96 <_Z12Publish_Datav+0x278>
   14b7c:	b7 01       	movw	r22, r14
   14b7e:	82 e6       	ldi	r24, 0x62	; 98
   14b80:	9f e0       	ldi	r25, 0x0F	; 15
   14b82:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   14b86:	81 11       	cpse	r24, r1
   14b88:	06 c0       	rjmp	.+12     	; 0x14b96 <_Z12Publish_Datav+0x278>
   14b8a:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14b8e:	81 50       	subi	r24, 0x01	; 1
   14b90:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14b94:	ef cf       	rjmp	.-34     	; 0x14b74 <_Z12Publish_Datav+0x256>
   14b96:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14b9a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14b9e:	87 7f       	andi	r24, 0xF7	; 247
   14ba0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   14ba4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   14ba8:	0c 94 74 ae 	jmp	0x15ce8	; 0x15ce8 <_Z12Publish_Datav+0x13ca>
   14bac:	97 ff       	sbrs	r25, 7
   14bae:	50 c0       	rjmp	.+160    	; 0x14c50 <_Z12Publish_Datav+0x332>
   14bb0:	7e 01       	movw	r14, r28
   14bb2:	b9 ee       	ldi	r27, 0xE9	; 233
   14bb4:	eb 1a       	sub	r14, r27
   14bb6:	be ef       	ldi	r27, 0xFE	; 254
   14bb8:	fb 0a       	sbc	r15, r27
   14bba:	8c ed       	ldi	r24, 0xDC	; 220
   14bbc:	f7 01       	movw	r30, r14
   14bbe:	11 92       	st	Z+, r1
   14bc0:	8a 95       	dec	r24
   14bc2:	e9 f7       	brne	.-6      	; 0x14bbe <_Z12Publish_Datav+0x2a0>
   14bc4:	86 e0       	ldi	r24, 0x06	; 6
   14bc6:	90 e0       	ldi	r25, 0x00	; 0
   14bc8:	cd 50       	subi	r28, 0x0D	; 13
   14bca:	de 4f       	sbci	r29, 0xFE	; 254
   14bcc:	99 83       	std	Y+1, r25	; 0x01
   14bce:	88 83       	st	Y, r24
   14bd0:	c3 5f       	subi	r28, 0xF3	; 243
   14bd2:	d1 40       	sbci	r29, 0x01	; 1
   14bd4:	ae 01       	movw	r20, r28
   14bd6:	4d 50       	subi	r20, 0x0D	; 13
   14bd8:	5e 4f       	sbci	r21, 0xFE	; 254
   14bda:	6c e6       	ldi	r22, 0x6C	; 108
   14bdc:	72 e3       	ldi	r23, 0x32	; 50
   14bde:	c8 01       	movw	r24, r16
   14be0:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14be4:	4c ed       	ldi	r20, 0xDC	; 220
   14be6:	50 e0       	ldi	r21, 0x00	; 0
   14be8:	b7 01       	movw	r22, r14
   14bea:	c8 01       	movw	r24, r16
   14bec:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14bf0:	e2 e6       	ldi	r30, 0x62	; 98
   14bf2:	ff e0       	ldi	r31, 0x0F	; 15
   14bf4:	8e e6       	ldi	r24, 0x6E	; 110
   14bf6:	df 01       	movw	r26, r30
   14bf8:	1d 92       	st	X+, r1
   14bfa:	8a 95       	dec	r24
   14bfc:	e9 f7       	brne	.-6      	; 0x14bf8 <_Z12Publish_Datav+0x2da>
   14bfe:	8e ec       	ldi	r24, 0xCE	; 206
   14c00:	93 e1       	ldi	r25, 0x13	; 19
   14c02:	9f 93       	push	r25
   14c04:	8f 93       	push	r24
   14c06:	8c e2       	ldi	r24, 0x2C	; 44
   14c08:	97 e0       	ldi	r25, 0x07	; 7
   14c0a:	9f 93       	push	r25
   14c0c:	8f 93       	push	r24
   14c0e:	ff 93       	push	r31
   14c10:	ef 93       	push	r30
   14c12:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14c16:	0f 90       	pop	r0
   14c18:	0f 90       	pop	r0
   14c1a:	0f 90       	pop	r0
   14c1c:	0f 90       	pop	r0
   14c1e:	0f 90       	pop	r0
   14c20:	0f 90       	pop	r0
   14c22:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14c26:	88 23       	and	r24, r24
   14c28:	69 f0       	breq	.+26     	; 0x14c44 <_Z12Publish_Datav+0x326>
   14c2a:	b7 01       	movw	r22, r14
   14c2c:	82 e6       	ldi	r24, 0x62	; 98
   14c2e:	9f e0       	ldi	r25, 0x0F	; 15
   14c30:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   14c34:	81 11       	cpse	r24, r1
   14c36:	06 c0       	rjmp	.+12     	; 0x14c44 <_Z12Publish_Datav+0x326>
   14c38:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14c3c:	81 50       	subi	r24, 0x01	; 1
   14c3e:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14c42:	ef cf       	rjmp	.-34     	; 0x14c22 <_Z12Publish_Datav+0x304>
   14c44:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14c48:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14c4c:	9f 77       	andi	r25, 0x7F	; 127
   14c4e:	a8 cf       	rjmp	.-176    	; 0x14ba0 <_Z12Publish_Datav+0x282>
   14c50:	86 ff       	sbrs	r24, 6
   14c52:	e3 c0       	rjmp	.+454    	; 0x14e1a <_Z12Publish_Datav+0x4fc>
   14c54:	7e 01       	movw	r14, r28
   14c56:	b9 ee       	ldi	r27, 0xE9	; 233
   14c58:	eb 1a       	sub	r14, r27
   14c5a:	be ef       	ldi	r27, 0xFE	; 254
   14c5c:	fb 0a       	sbc	r15, r27
   14c5e:	8c ed       	ldi	r24, 0xDC	; 220
   14c60:	f7 01       	movw	r30, r14
   14c62:	11 92       	st	Z+, r1
   14c64:	8a 95       	dec	r24
   14c66:	e9 f7       	brne	.-6      	; 0x14c62 <_Z12Publish_Datav+0x344>
   14c68:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14c6c:	81 30       	cpi	r24, 0x01	; 1
   14c6e:	51 f4       	brne	.+20     	; 0x14c84 <_Z12Publish_Datav+0x366>
   14c70:	67 e5       	ldi	r22, 0x57	; 87
   14c72:	72 e3       	ldi	r23, 0x32	; 50
   14c74:	86 ec       	ldi	r24, 0xC6	; 198
   14c76:	94 e1       	ldi	r25, 0x14	; 20
   14c78:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   14c7c:	86 ec       	ldi	r24, 0xC6	; 198
   14c7e:	94 e1       	ldi	r25, 0x14	; 20
   14c80:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14c84:	cd 50       	subi	r28, 0x0D	; 13
   14c86:	de 4f       	sbci	r29, 0xFE	; 254
   14c88:	19 82       	std	Y+1, r1	; 0x01
   14c8a:	18 82       	st	Y, r1
   14c8c:	c3 5f       	subi	r28, 0xF3	; 243
   14c8e:	d1 40       	sbci	r29, 0x01	; 1
   14c90:	ae 01       	movw	r20, r28
   14c92:	4d 50       	subi	r20, 0x0D	; 13
   14c94:	5e 4f       	sbci	r21, 0xFE	; 254
   14c96:	6d e4       	ldi	r22, 0x4D	; 77
   14c98:	72 e3       	ldi	r23, 0x32	; 50
   14c9a:	c8 01       	movw	r24, r16
   14c9c:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ca0:	cd 50       	subi	r28, 0x0D	; 13
   14ca2:	de 4f       	sbci	r29, 0xFE	; 254
   14ca4:	19 82       	std	Y+1, r1	; 0x01
   14ca6:	18 82       	st	Y, r1
   14ca8:	c3 5f       	subi	r28, 0xF3	; 243
   14caa:	d1 40       	sbci	r29, 0x01	; 1
   14cac:	ae 01       	movw	r20, r28
   14cae:	4d 50       	subi	r20, 0x0D	; 13
   14cb0:	5e 4f       	sbci	r21, 0xFE	; 254
   14cb2:	69 e4       	ldi	r22, 0x49	; 73
   14cb4:	72 e3       	ldi	r23, 0x32	; 50
   14cb6:	c8 01       	movw	r24, r16
   14cb8:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14cbc:	cd 50       	subi	r28, 0x0D	; 13
   14cbe:	de 4f       	sbci	r29, 0xFE	; 254
   14cc0:	19 82       	std	Y+1, r1	; 0x01
   14cc2:	18 82       	st	Y, r1
   14cc4:	c3 5f       	subi	r28, 0xF3	; 243
   14cc6:	d1 40       	sbci	r29, 0x01	; 1
   14cc8:	ae 01       	movw	r20, r28
   14cca:	4d 50       	subi	r20, 0x0D	; 13
   14ccc:	5e 4f       	sbci	r21, 0xFE	; 254
   14cce:	65 e4       	ldi	r22, 0x45	; 69
   14cd0:	72 e3       	ldi	r23, 0x32	; 50
   14cd2:	c8 01       	movw	r24, r16
   14cd4:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14cd8:	cd 50       	subi	r28, 0x0D	; 13
   14cda:	de 4f       	sbci	r29, 0xFE	; 254
   14cdc:	19 82       	std	Y+1, r1	; 0x01
   14cde:	18 82       	st	Y, r1
   14ce0:	c3 5f       	subi	r28, 0xF3	; 243
   14ce2:	d1 40       	sbci	r29, 0x01	; 1
   14ce4:	ae 01       	movw	r20, r28
   14ce6:	4d 50       	subi	r20, 0x0D	; 13
   14ce8:	5e 4f       	sbci	r21, 0xFE	; 254
   14cea:	61 e4       	ldi	r22, 0x41	; 65
   14cec:	72 e3       	ldi	r23, 0x32	; 50
   14cee:	c8 01       	movw	r24, r16
   14cf0:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14cf4:	cd 50       	subi	r28, 0x0D	; 13
   14cf6:	de 4f       	sbci	r29, 0xFE	; 254
   14cf8:	19 82       	std	Y+1, r1	; 0x01
   14cfa:	18 82       	st	Y, r1
   14cfc:	c3 5f       	subi	r28, 0xF3	; 243
   14cfe:	d1 40       	sbci	r29, 0x01	; 1
   14d00:	ae 01       	movw	r20, r28
   14d02:	4d 50       	subi	r20, 0x0D	; 13
   14d04:	5e 4f       	sbci	r21, 0xFE	; 254
   14d06:	6d e3       	ldi	r22, 0x3D	; 61
   14d08:	72 e3       	ldi	r23, 0x32	; 50
   14d0a:	c8 01       	movw	r24, r16
   14d0c:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d10:	cd 50       	subi	r28, 0x0D	; 13
   14d12:	de 4f       	sbci	r29, 0xFE	; 254
   14d14:	19 82       	std	Y+1, r1	; 0x01
   14d16:	18 82       	st	Y, r1
   14d18:	c3 5f       	subi	r28, 0xF3	; 243
   14d1a:	d1 40       	sbci	r29, 0x01	; 1
   14d1c:	ae 01       	movw	r20, r28
   14d1e:	4d 50       	subi	r20, 0x0D	; 13
   14d20:	5e 4f       	sbci	r21, 0xFE	; 254
   14d22:	63 e3       	ldi	r22, 0x33	; 51
   14d24:	72 e3       	ldi	r23, 0x32	; 50
   14d26:	c8 01       	movw	r24, r16
   14d28:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d2c:	cd 50       	subi	r28, 0x0D	; 13
   14d2e:	de 4f       	sbci	r29, 0xFE	; 254
   14d30:	19 82       	std	Y+1, r1	; 0x01
   14d32:	18 82       	st	Y, r1
   14d34:	c3 5f       	subi	r28, 0xF3	; 243
   14d36:	d1 40       	sbci	r29, 0x01	; 1
   14d38:	ae 01       	movw	r20, r28
   14d3a:	4d 50       	subi	r20, 0x0D	; 13
   14d3c:	5e 4f       	sbci	r21, 0xFE	; 254
   14d3e:	67 e2       	ldi	r22, 0x27	; 39
   14d40:	72 e3       	ldi	r23, 0x32	; 50
   14d42:	c8 01       	movw	r24, r16
   14d44:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d48:	cd 50       	subi	r28, 0x0D	; 13
   14d4a:	de 4f       	sbci	r29, 0xFE	; 254
   14d4c:	19 82       	std	Y+1, r1	; 0x01
   14d4e:	18 82       	st	Y, r1
   14d50:	c3 5f       	subi	r28, 0xF3	; 243
   14d52:	d1 40       	sbci	r29, 0x01	; 1
   14d54:	ae 01       	movw	r20, r28
   14d56:	4d 50       	subi	r20, 0x0D	; 13
   14d58:	5e 4f       	sbci	r21, 0xFE	; 254
   14d5a:	6e e1       	ldi	r22, 0x1E	; 30
   14d5c:	72 e3       	ldi	r23, 0x32	; 50
   14d5e:	c8 01       	movw	r24, r16
   14d60:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d64:	cd 50       	subi	r28, 0x0D	; 13
   14d66:	de 4f       	sbci	r29, 0xFE	; 254
   14d68:	19 82       	std	Y+1, r1	; 0x01
   14d6a:	18 82       	st	Y, r1
   14d6c:	c3 5f       	subi	r28, 0xF3	; 243
   14d6e:	d1 40       	sbci	r29, 0x01	; 1
   14d70:	ae 01       	movw	r20, r28
   14d72:	4d 50       	subi	r20, 0x0D	; 13
   14d74:	5e 4f       	sbci	r21, 0xFE	; 254
   14d76:	68 e1       	ldi	r22, 0x18	; 24
   14d78:	72 e3       	ldi	r23, 0x32	; 50
   14d7a:	c8 01       	movw	r24, r16
   14d7c:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d80:	cd 50       	subi	r28, 0x0D	; 13
   14d82:	de 4f       	sbci	r29, 0xFE	; 254
   14d84:	19 82       	std	Y+1, r1	; 0x01
   14d86:	18 82       	st	Y, r1
   14d88:	c3 5f       	subi	r28, 0xF3	; 243
   14d8a:	d1 40       	sbci	r29, 0x01	; 1
   14d8c:	ae 01       	movw	r20, r28
   14d8e:	4d 50       	subi	r20, 0x0D	; 13
   14d90:	5e 4f       	sbci	r21, 0xFE	; 254
   14d92:	63 e1       	ldi	r22, 0x13	; 19
   14d94:	72 e3       	ldi	r23, 0x32	; 50
   14d96:	c8 01       	movw	r24, r16
   14d98:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d9c:	4c ed       	ldi	r20, 0xDC	; 220
   14d9e:	50 e0       	ldi	r21, 0x00	; 0
   14da0:	b7 01       	movw	r22, r14
   14da2:	c8 01       	movw	r24, r16
   14da4:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14da8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14dac:	81 30       	cpi	r24, 0x01	; 1
   14dae:	29 f4       	brne	.+10     	; 0x14dba <_Z12Publish_Datav+0x49c>
   14db0:	b7 01       	movw	r22, r14
   14db2:	86 ec       	ldi	r24, 0xC6	; 198
   14db4:	94 e1       	ldi	r25, 0x14	; 20
   14db6:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   14dba:	e2 e6       	ldi	r30, 0x62	; 98
   14dbc:	ff e0       	ldi	r31, 0x0F	; 15
   14dbe:	8e e6       	ldi	r24, 0x6E	; 110
   14dc0:	df 01       	movw	r26, r30
   14dc2:	1d 92       	st	X+, r1
   14dc4:	8a 95       	dec	r24
   14dc6:	e9 f7       	brne	.-6      	; 0x14dc2 <_Z12Publish_Datav+0x4a4>
   14dc8:	83 e1       	ldi	r24, 0x13	; 19
   14dca:	97 e0       	ldi	r25, 0x07	; 7
   14dcc:	9f 93       	push	r25
   14dce:	8f 93       	push	r24
   14dd0:	83 e5       	ldi	r24, 0x53	; 83
   14dd2:	97 e0       	ldi	r25, 0x07	; 7
   14dd4:	9f 93       	push	r25
   14dd6:	8f 93       	push	r24
   14dd8:	ff 93       	push	r31
   14dda:	ef 93       	push	r30
   14ddc:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14de0:	0f 90       	pop	r0
   14de2:	0f 90       	pop	r0
   14de4:	0f 90       	pop	r0
   14de6:	0f 90       	pop	r0
   14de8:	0f 90       	pop	r0
   14dea:	0f 90       	pop	r0
   14dec:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14df0:	88 23       	and	r24, r24
   14df2:	69 f0       	breq	.+26     	; 0x14e0e <_Z12Publish_Datav+0x4f0>
   14df4:	b7 01       	movw	r22, r14
   14df6:	82 e6       	ldi	r24, 0x62	; 98
   14df8:	9f e0       	ldi	r25, 0x0F	; 15
   14dfa:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   14dfe:	81 11       	cpse	r24, r1
   14e00:	06 c0       	rjmp	.+12     	; 0x14e0e <_Z12Publish_Datav+0x4f0>
   14e02:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14e06:	81 50       	subi	r24, 0x01	; 1
   14e08:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14e0c:	ef cf       	rjmp	.-34     	; 0x14dec <_Z12Publish_Datav+0x4ce>
   14e0e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14e12:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14e16:	8f 7b       	andi	r24, 0xBF	; 191
   14e18:	c3 ce       	rjmp	.-634    	; 0x14ba0 <_Z12Publish_Datav+0x282>
   14e1a:	87 ff       	sbrs	r24, 7
   14e1c:	7f c0       	rjmp	.+254    	; 0x14f1c <_Z12Publish_Datav+0x5fe>
   14e1e:	6e 01       	movw	r12, r28
   14e20:	b9 ee       	ldi	r27, 0xE9	; 233
   14e22:	cb 1a       	sub	r12, r27
   14e24:	be ef       	ldi	r27, 0xFE	; 254
   14e26:	db 0a       	sbc	r13, r27
   14e28:	8c ed       	ldi	r24, 0xDC	; 220
   14e2a:	f6 01       	movw	r30, r12
   14e2c:	11 92       	st	Z+, r1
   14e2e:	8a 95       	dec	r24
   14e30:	e9 f7       	brne	.-6      	; 0x14e2c <_Z12Publish_Datav+0x50e>
   14e32:	80 91 6e 14 	lds	r24, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14e36:	86 30       	cpi	r24, 0x06	; 6
   14e38:	08 f0       	brcs	.+2      	; 0x14e3c <_Z12Publish_Datav+0x51e>
   14e3a:	6a c0       	rjmp	.+212    	; 0x14f10 <_Z12Publish_Datav+0x5f2>
   14e3c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14e40:	81 30       	cpi	r24, 0x01	; 1
   14e42:	51 f4       	brne	.+20     	; 0x14e58 <_Z12Publish_Datav+0x53a>
   14e44:	6d ef       	ldi	r22, 0xFD	; 253
   14e46:	71 e3       	ldi	r23, 0x31	; 49
   14e48:	86 ec       	ldi	r24, 0xC6	; 198
   14e4a:	94 e1       	ldi	r25, 0x14	; 20
   14e4c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   14e50:	86 ec       	ldi	r24, 0xC6	; 198
   14e52:	94 e1       	ldi	r25, 0x14	; 20
   14e54:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14e58:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14e5c:	7d e0       	ldi	r23, 0x0D	; 13
   14e5e:	f7 2e       	mov	r15, r23
   14e60:	f4 9e       	mul	r15, r20
   14e62:	a0 01       	movw	r20, r0
   14e64:	11 24       	eor	r1, r1
   14e66:	40 5e       	subi	r20, 0xE0	; 224
   14e68:	53 4f       	sbci	r21, 0xF3	; 243
   14e6a:	61 ef       	ldi	r22, 0xF1	; 241
   14e6c:	71 e3       	ldi	r23, 0x31	; 49
   14e6e:	c8 01       	movw	r24, r16
   14e70:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14e74:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14e78:	f4 9e       	mul	r15, r20
   14e7a:	a0 01       	movw	r20, r0
   14e7c:	11 24       	eor	r1, r1
   14e7e:	43 5e       	subi	r20, 0xE3	; 227
   14e80:	53 4f       	sbci	r21, 0xF3	; 243
   14e82:	6c ee       	ldi	r22, 0xEC	; 236
   14e84:	71 e3       	ldi	r23, 0x31	; 49
   14e86:	c8 01       	movw	r24, r16
   14e88:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14e8c:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14e90:	f4 9e       	mul	r15, r20
   14e92:	a0 01       	movw	r20, r0
   14e94:	11 24       	eor	r1, r1
   14e96:	41 5e       	subi	r20, 0xE1	; 225
   14e98:	53 4f       	sbci	r21, 0xF3	; 243
   14e9a:	62 ee       	ldi	r22, 0xE2	; 226
   14e9c:	71 e3       	ldi	r23, 0x31	; 49
   14e9e:	c8 01       	movw	r24, r16
   14ea0:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14ea4:	44 ed       	ldi	r20, 0xD4	; 212
   14ea6:	53 e0       	ldi	r21, 0x03	; 3
   14ea8:	60 ed       	ldi	r22, 0xD0	; 208
   14eaa:	7f e0       	ldi	r23, 0x0F	; 15
   14eac:	c8 01       	movw	r24, r16
   14eae:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14eb2:	e2 e6       	ldi	r30, 0x62	; 98
   14eb4:	ff e0       	ldi	r31, 0x0F	; 15
   14eb6:	8e e6       	ldi	r24, 0x6E	; 110
   14eb8:	df 01       	movw	r26, r30
   14eba:	1d 92       	st	X+, r1
   14ebc:	8a 95       	dec	r24
   14ebe:	e9 f7       	brne	.-6      	; 0x14eba <_Z12Publish_Datav+0x59c>
   14ec0:	80 91 6e 14 	lds	r24, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14ec4:	f8 9e       	mul	r15, r24
   14ec6:	c0 01       	movw	r24, r0
   14ec8:	11 24       	eor	r1, r1
   14eca:	8a 5e       	subi	r24, 0xEA	; 234
   14ecc:	93 4f       	sbci	r25, 0xF3	; 243
   14ece:	9f 93       	push	r25
   14ed0:	8f 93       	push	r24
   14ed2:	88 e6       	ldi	r24, 0x68	; 104
   14ed4:	97 e0       	ldi	r25, 0x07	; 7
   14ed6:	9f 93       	push	r25
   14ed8:	8f 93       	push	r24
   14eda:	ff 93       	push	r31
   14edc:	ef 93       	push	r30
   14ede:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14ee2:	0f 90       	pop	r0
   14ee4:	0f 90       	pop	r0
   14ee6:	0f 90       	pop	r0
   14ee8:	0f 90       	pop	r0
   14eea:	0f 90       	pop	r0
   14eec:	0f 90       	pop	r0
   14eee:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14ef2:	88 23       	and	r24, r24
   14ef4:	69 f0       	breq	.+26     	; 0x14f10 <_Z12Publish_Datav+0x5f2>
   14ef6:	b6 01       	movw	r22, r12
   14ef8:	82 e6       	ldi	r24, 0x62	; 98
   14efa:	9f e0       	ldi	r25, 0x0F	; 15
   14efc:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   14f00:	81 11       	cpse	r24, r1
   14f02:	06 c0       	rjmp	.+12     	; 0x14f10 <_Z12Publish_Datav+0x5f2>
   14f04:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14f08:	81 50       	subi	r24, 0x01	; 1
   14f0a:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14f0e:	ef cf       	rjmp	.-34     	; 0x14eee <_Z12Publish_Datav+0x5d0>
   14f10:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14f14:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14f18:	8f 77       	andi	r24, 0x7F	; 127
   14f1a:	42 ce       	rjmp	.-892    	; 0x14ba0 <_Z12Publish_Datav+0x282>
   14f1c:	90 ff       	sbrs	r25, 0
   14f1e:	55 c0       	rjmp	.+170    	; 0x14fca <_Z12Publish_Datav+0x6ac>
   14f20:	7e 01       	movw	r14, r28
   14f22:	b9 ee       	ldi	r27, 0xE9	; 233
   14f24:	eb 1a       	sub	r14, r27
   14f26:	be ef       	ldi	r27, 0xFE	; 254
   14f28:	fb 0a       	sbc	r15, r27
   14f2a:	8c ed       	ldi	r24, 0xDC	; 220
   14f2c:	f7 01       	movw	r30, r14
   14f2e:	11 92       	st	Z+, r1
   14f30:	8a 95       	dec	r24
   14f32:	e9 f7       	brne	.-6      	; 0x14f2e <_Z12Publish_Datav+0x610>
   14f34:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14f38:	81 30       	cpi	r24, 0x01	; 1
   14f3a:	51 f4       	brne	.+20     	; 0x14f50 <_Z12Publish_Datav+0x632>
   14f3c:	6c ec       	ldi	r22, 0xCC	; 204
   14f3e:	71 e3       	ldi	r23, 0x31	; 49
   14f40:	86 ec       	ldi	r24, 0xC6	; 198
   14f42:	94 e1       	ldi	r25, 0x14	; 20
   14f44:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   14f48:	86 ec       	ldi	r24, 0xC6	; 198
   14f4a:	94 e1       	ldi	r25, 0x14	; 20
   14f4c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14f50:	4d e1       	ldi	r20, 0x1D	; 29
   14f52:	54 e1       	ldi	r21, 0x14	; 20
   14f54:	66 ec       	ldi	r22, 0xC6	; 198
   14f56:	71 e3       	ldi	r23, 0x31	; 49
   14f58:	c8 01       	movw	r24, r16
   14f5a:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14f5e:	4c ed       	ldi	r20, 0xDC	; 220
   14f60:	50 e0       	ldi	r21, 0x00	; 0
   14f62:	b7 01       	movw	r22, r14
   14f64:	c8 01       	movw	r24, r16
   14f66:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14f6a:	e2 e6       	ldi	r30, 0x62	; 98
   14f6c:	ff e0       	ldi	r31, 0x0F	; 15
   14f6e:	8e e6       	ldi	r24, 0x6E	; 110
   14f70:	df 01       	movw	r26, r30
   14f72:	1d 92       	st	X+, r1
   14f74:	8a 95       	dec	r24
   14f76:	e9 f7       	brne	.-6      	; 0x14f72 <_Z12Publish_Datav+0x654>
   14f78:	8e ec       	ldi	r24, 0xCE	; 206
   14f7a:	93 e1       	ldi	r25, 0x13	; 19
   14f7c:	9f 93       	push	r25
   14f7e:	8f 93       	push	r24
   14f80:	8c e7       	ldi	r24, 0x7C	; 124
   14f82:	97 e0       	ldi	r25, 0x07	; 7
   14f84:	9f 93       	push	r25
   14f86:	8f 93       	push	r24
   14f88:	ff 93       	push	r31
   14f8a:	ef 93       	push	r30
   14f8c:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   14f90:	0f 90       	pop	r0
   14f92:	0f 90       	pop	r0
   14f94:	0f 90       	pop	r0
   14f96:	0f 90       	pop	r0
   14f98:	0f 90       	pop	r0
   14f9a:	0f 90       	pop	r0
   14f9c:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14fa0:	88 23       	and	r24, r24
   14fa2:	69 f0       	breq	.+26     	; 0x14fbe <_Z12Publish_Datav+0x6a0>
   14fa4:	b7 01       	movw	r22, r14
   14fa6:	82 e6       	ldi	r24, 0x62	; 98
   14fa8:	9f e0       	ldi	r25, 0x0F	; 15
   14faa:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   14fae:	81 11       	cpse	r24, r1
   14fb0:	06 c0       	rjmp	.+12     	; 0x14fbe <_Z12Publish_Datav+0x6a0>
   14fb2:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14fb6:	81 50       	subi	r24, 0x01	; 1
   14fb8:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14fbc:	ef cf       	rjmp	.-34     	; 0x14f9c <_Z12Publish_Datav+0x67e>
   14fbe:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14fc2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14fc6:	9e 7f       	andi	r25, 0xFE	; 254
   14fc8:	eb cd       	rjmp	.-1066   	; 0x14ba0 <_Z12Publish_Datav+0x282>
   14fca:	94 ff       	sbrs	r25, 4
   14fcc:	3f c1       	rjmp	.+638    	; 0x1524c <_Z12Publish_Datav+0x92e>
   14fce:	7e 01       	movw	r14, r28
   14fd0:	b9 ee       	ldi	r27, 0xE9	; 233
   14fd2:	eb 1a       	sub	r14, r27
   14fd4:	be ef       	ldi	r27, 0xFE	; 254
   14fd6:	fb 0a       	sbc	r15, r27
   14fd8:	8c ed       	ldi	r24, 0xDC	; 220
   14fda:	f7 01       	movw	r30, r14
   14fdc:	11 92       	st	Z+, r1
   14fde:	8a 95       	dec	r24
   14fe0:	e9 f7       	brne	.-6      	; 0x14fdc <_Z12Publish_Datav+0x6be>
   14fe2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14fe6:	81 30       	cpi	r24, 0x01	; 1
   14fe8:	51 f4       	brne	.+20     	; 0x14ffe <_Z12Publish_Datav+0x6e0>
   14fea:	62 eb       	ldi	r22, 0xB2	; 178
   14fec:	71 e3       	ldi	r23, 0x31	; 49
   14fee:	86 ec       	ldi	r24, 0xC6	; 198
   14ff0:	94 e1       	ldi	r25, 0x14	; 20
   14ff2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   14ff6:	86 ec       	ldi	r24, 0xC6	; 198
   14ff8:	94 e1       	ldi	r25, 0x14	; 20
   14ffa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   14ffe:	8a e0       	ldi	r24, 0x0A	; 10
   15000:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   15004:	21 e0       	ldi	r18, 0x01	; 1
   15006:	89 2b       	or	r24, r25
   15008:	09 f0       	breq	.+2      	; 0x1500c <_Z12Publish_Datav+0x6ee>
   1500a:	20 e0       	ldi	r18, 0x00	; 0
   1500c:	cd 50       	subi	r28, 0x0D	; 13
   1500e:	de 4f       	sbci	r29, 0xFE	; 254
   15010:	28 83       	st	Y, r18
   15012:	c3 5f       	subi	r28, 0xF3	; 243
   15014:	d1 40       	sbci	r29, 0x01	; 1
   15016:	ae 01       	movw	r20, r28
   15018:	4d 50       	subi	r20, 0x0D	; 13
   1501a:	5e 4f       	sbci	r21, 0xFE	; 254
   1501c:	6a ea       	ldi	r22, 0xAA	; 170
   1501e:	71 e3       	ldi	r23, 0x31	; 49
   15020:	c8 01       	movw	r24, r16
   15022:	0e 94 c2 8a 	call	0x11584	; 0x11584 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   15026:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   1502a:	81 11       	cpse	r24, r1
   1502c:	4e c0       	rjmp	.+156    	; 0x150ca <_Z12Publish_Datav+0x7ac>
   1502e:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   15032:	88 23       	and	r24, r24
   15034:	09 f4       	brne	.+2      	; 0x15038 <_Z12Publish_Datav+0x71a>
   15036:	43 c0       	rjmp	.+134    	; 0x150be <_Z12Publish_Datav+0x7a0>
   15038:	90 90 b6 13 	lds	r9, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   1503c:	a0 90 b7 13 	lds	r10, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   15040:	b0 90 b8 13 	lds	r11, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   15044:	c0 90 b9 13 	lds	r12, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   15048:	d0 90 ba 13 	lds	r13, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   1504c:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   15050:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   15054:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   15058:	29 2d       	mov	r18, r9
   1505a:	3a 2d       	mov	r19, r10
   1505c:	4b 2d       	mov	r20, r11
   1505e:	5c 2d       	mov	r21, r12
   15060:	6d 2d       	mov	r22, r13
   15062:	7b 2f       	mov	r23, r27
   15064:	8f 2f       	mov	r24, r31
   15066:	9e 2f       	mov	r25, r30
   15068:	a2 e0       	ldi	r26, 0x02	; 2
   1506a:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
   1506e:	81 f0       	breq	.+32     	; 0x15090 <_Z12Publish_Datav+0x772>
   15070:	a4 e0       	ldi	r26, 0x04	; 4
   15072:	cd 50       	subi	r28, 0x0D	; 13
   15074:	de 4f       	sbci	r29, 0xFE	; 254
   15076:	19 82       	std	Y+1, r1	; 0x01
   15078:	18 82       	st	Y, r1
   1507a:	c3 5f       	subi	r28, 0xF3	; 243
   1507c:	d1 40       	sbci	r29, 0x01	; 1
   1507e:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
   15082:	a1 f4       	brne	.+40     	; 0x150ac <_Z12Publish_Datav+0x78e>
   15084:	ae 01       	movw	r20, r28
   15086:	4d 50       	subi	r20, 0x0D	; 13
   15088:	5e 4f       	sbci	r21, 0xFE	; 254
   1508a:	62 ea       	ldi	r22, 0xA2	; 162
   1508c:	71 e3       	ldi	r23, 0x31	; 49
   1508e:	13 c0       	rjmp	.+38     	; 0x150b6 <_Z12Publish_Datav+0x798>
   15090:	81 e0       	ldi	r24, 0x01	; 1
   15092:	90 e0       	ldi	r25, 0x00	; 0
   15094:	cd 50       	subi	r28, 0x0D	; 13
   15096:	de 4f       	sbci	r29, 0xFE	; 254
   15098:	99 83       	std	Y+1, r25	; 0x01
   1509a:	88 83       	st	Y, r24
   1509c:	c3 5f       	subi	r28, 0xF3	; 243
   1509e:	d1 40       	sbci	r29, 0x01	; 1
   150a0:	ae 01       	movw	r20, r28
   150a2:	4d 50       	subi	r20, 0x0D	; 13
   150a4:	5e 4f       	sbci	r21, 0xFE	; 254
   150a6:	6a e9       	ldi	r22, 0x9A	; 154
   150a8:	71 e3       	ldi	r23, 0x31	; 49
   150aa:	05 c0       	rjmp	.+10     	; 0x150b6 <_Z12Publish_Datav+0x798>
   150ac:	ae 01       	movw	r20, r28
   150ae:	4d 50       	subi	r20, 0x0D	; 13
   150b0:	5e 4f       	sbci	r21, 0xFE	; 254
   150b2:	62 e9       	ldi	r22, 0x92	; 146
   150b4:	71 e3       	ldi	r23, 0x31	; 49
   150b6:	c8 01       	movw	r24, r16
   150b8:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   150bc:	21 c0       	rjmp	.+66     	; 0x15100 <_Z12Publish_Datav+0x7e2>
   150be:	8a e0       	ldi	r24, 0x0A	; 10
   150c0:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   150c4:	89 2b       	or	r24, r25
   150c6:	71 f4       	brne	.+28     	; 0x150e4 <_Z12Publish_Datav+0x7c6>
   150c8:	04 c0       	rjmp	.+8      	; 0x150d2 <_Z12Publish_Datav+0x7b4>
   150ca:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   150ce:	81 30       	cpi	r24, 0x01	; 1
   150d0:	49 f4       	brne	.+18     	; 0x150e4 <_Z12Publish_Datav+0x7c6>
   150d2:	81 e0       	ldi	r24, 0x01	; 1
   150d4:	90 e0       	ldi	r25, 0x00	; 0
   150d6:	cd 50       	subi	r28, 0x0D	; 13
   150d8:	de 4f       	sbci	r29, 0xFE	; 254
   150da:	99 83       	std	Y+1, r25	; 0x01
   150dc:	88 83       	st	Y, r24
   150de:	c3 5f       	subi	r28, 0xF3	; 243
   150e0:	d1 40       	sbci	r29, 0x01	; 1
   150e2:	06 c0       	rjmp	.+12     	; 0x150f0 <_Z12Publish_Datav+0x7d2>
   150e4:	cd 50       	subi	r28, 0x0D	; 13
   150e6:	de 4f       	sbci	r29, 0xFE	; 254
   150e8:	19 82       	std	Y+1, r1	; 0x01
   150ea:	18 82       	st	Y, r1
   150ec:	c3 5f       	subi	r28, 0xF3	; 243
   150ee:	d1 40       	sbci	r29, 0x01	; 1
   150f0:	ae 01       	movw	r20, r28
   150f2:	4d 50       	subi	r20, 0x0D	; 13
   150f4:	5e 4f       	sbci	r21, 0xFE	; 254
   150f6:	65 e9       	ldi	r22, 0x95	; 149
   150f8:	77 e0       	ldi	r23, 0x07	; 7
   150fa:	c8 01       	movw	r24, r16
   150fc:	0e 94 c8 8b 	call	0x11790	; 0x11790 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15100:	cd 50       	subi	r28, 0x0D	; 13
   15102:	de 4f       	sbci	r29, 0xFE	; 254
   15104:	19 82       	std	Y+1, r1	; 0x01
   15106:	18 82       	st	Y, r1
   15108:	c3 5f       	subi	r28, 0xF3	; 243
   1510a:	d1 40       	sbci	r29, 0x01	; 1
   1510c:	ae 01       	movw	r20, r28
   1510e:	4d 50       	subi	r20, 0x0D	; 13
   15110:	5e 4f       	sbci	r21, 0xFE	; 254
   15112:	6b e8       	ldi	r22, 0x8B	; 139
   15114:	71 e3       	ldi	r23, 0x31	; 49
   15116:	c8 01       	movw	r24, r16
   15118:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1511c:	40 91 73 14 	lds	r20, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   15120:	fb e1       	ldi	r31, 0x1B	; 27
   15122:	4f 9f       	mul	r20, r31
   15124:	a0 01       	movw	r20, r0
   15126:	11 24       	eor	r1, r1
   15128:	fa 01       	movw	r30, r20
   1512a:	e8 51       	subi	r30, 0x18	; 24
   1512c:	f2 4f       	sbci	r31, 0xF2	; 242
   1512e:	83 81       	ldd	r24, Z+3	; 0x03
   15130:	94 81       	ldd	r25, Z+4	; 0x04
   15132:	00 97       	sbiw	r24, 0x00	; 0
   15134:	29 f1       	breq	.+74     	; 0x15180 <_Z12Publish_Datav+0x862>
   15136:	6c e3       	ldi	r22, 0x3C	; 60
   15138:	70 e0       	ldi	r23, 0x00	; 0
   1513a:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   1513e:	6f 5f       	subi	r22, 0xFF	; 255
   15140:	7f 4f       	sbci	r23, 0xFF	; 255
   15142:	cd 50       	subi	r28, 0x0D	; 13
   15144:	de 4f       	sbci	r29, 0xFE	; 254
   15146:	79 83       	std	Y+1, r23	; 0x01
   15148:	68 83       	st	Y, r22
   1514a:	c3 5f       	subi	r28, 0xF3	; 243
   1514c:	d1 40       	sbci	r29, 0x01	; 1
   1514e:	ae 01       	movw	r20, r28
   15150:	4d 50       	subi	r20, 0x0D	; 13
   15152:	5e 4f       	sbci	r21, 0xFE	; 254
   15154:	66 e8       	ldi	r22, 0x86	; 134
   15156:	71 e3       	ldi	r23, 0x31	; 49
   15158:	c8 01       	movw	r24, r16
   1515a:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1515e:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   15162:	90 e0       	ldi	r25, 0x00	; 0
   15164:	8b 59       	subi	r24, 0x9B	; 155
   15166:	9f 4f       	sbci	r25, 0xFF	; 255
   15168:	cd 50       	subi	r28, 0x0D	; 13
   1516a:	de 4f       	sbci	r29, 0xFE	; 254
   1516c:	99 83       	std	Y+1, r25	; 0x01
   1516e:	88 83       	st	Y, r24
   15170:	c3 5f       	subi	r28, 0xF3	; 243
   15172:	d1 40       	sbci	r29, 0x01	; 1
   15174:	ae 01       	movw	r20, r28
   15176:	4d 50       	subi	r20, 0x0D	; 13
   15178:	5e 4f       	sbci	r21, 0xFE	; 254
   1517a:	61 e8       	ldi	r22, 0x81	; 129
   1517c:	71 e3       	ldi	r23, 0x31	; 49
   1517e:	17 c0       	rjmp	.+46     	; 0x151ae <_Z12Publish_Datav+0x890>
   15180:	45 51       	subi	r20, 0x15	; 21
   15182:	52 4f       	sbci	r21, 0xF2	; 242
   15184:	6c e7       	ldi	r22, 0x7C	; 124
   15186:	71 e3       	ldi	r23, 0x31	; 49
   15188:	c8 01       	movw	r24, r16
   1518a:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1518e:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   15192:	90 e0       	ldi	r25, 0x00	; 0
   15194:	8b 59       	subi	r24, 0x9B	; 155
   15196:	9f 4f       	sbci	r25, 0xFF	; 255
   15198:	cd 50       	subi	r28, 0x0D	; 13
   1519a:	de 4f       	sbci	r29, 0xFE	; 254
   1519c:	99 83       	std	Y+1, r25	; 0x01
   1519e:	88 83       	st	Y, r24
   151a0:	c3 5f       	subi	r28, 0xF3	; 243
   151a2:	d1 40       	sbci	r29, 0x01	; 1
   151a4:	ae 01       	movw	r20, r28
   151a6:	4d 50       	subi	r20, 0x0D	; 13
   151a8:	5e 4f       	sbci	r21, 0xFE	; 254
   151aa:	67 e7       	ldi	r22, 0x77	; 119
   151ac:	71 e3       	ldi	r23, 0x31	; 49
   151ae:	c8 01       	movw	r24, r16
   151b0:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   151b4:	4c ed       	ldi	r20, 0xDC	; 220
   151b6:	50 e0       	ldi	r21, 0x00	; 0
   151b8:	b7 01       	movw	r22, r14
   151ba:	c8 01       	movw	r24, r16
   151bc:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   151c0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   151c4:	81 30       	cpi	r24, 0x01	; 1
   151c6:	29 f4       	brne	.+10     	; 0x151d2 <_Z12Publish_Datav+0x8b4>
   151c8:	b7 01       	movw	r22, r14
   151ca:	86 ec       	ldi	r24, 0xC6	; 198
   151cc:	94 e1       	ldi	r25, 0x14	; 20
   151ce:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   151d2:	e2 e6       	ldi	r30, 0x62	; 98
   151d4:	ff e0       	ldi	r31, 0x0F	; 15
   151d6:	8e e6       	ldi	r24, 0x6E	; 110
   151d8:	df 01       	movw	r26, r30
   151da:	1d 92       	st	X+, r1
   151dc:	8a 95       	dec	r24
   151de:	e9 f7       	brne	.-6      	; 0x151da <_Z12Publish_Datav+0x8bc>
   151e0:	8e ec       	ldi	r24, 0xCE	; 206
   151e2:	93 e1       	ldi	r25, 0x13	; 19
   151e4:	9f 93       	push	r25
   151e6:	8f 93       	push	r24
   151e8:	8b e3       	ldi	r24, 0x3B	; 59
   151ea:	97 e0       	ldi	r25, 0x07	; 7
   151ec:	9f 93       	push	r25
   151ee:	8f 93       	push	r24
   151f0:	ff 93       	push	r31
   151f2:	ef 93       	push	r30
   151f4:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   151f8:	0f 90       	pop	r0
   151fa:	0f 90       	pop	r0
   151fc:	0f 90       	pop	r0
   151fe:	0f 90       	pop	r0
   15200:	0f 90       	pop	r0
   15202:	0f 90       	pop	r0
   15204:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15208:	88 23       	and	r24, r24
   1520a:	d1 f0       	breq	.+52     	; 0x15240 <_Z12Publish_Datav+0x922>
   1520c:	b7 01       	movw	r22, r14
   1520e:	82 e6       	ldi	r24, 0x62	; 98
   15210:	9f e0       	ldi	r25, 0x0F	; 15
   15212:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   15216:	88 23       	and	r24, r24
   15218:	69 f0       	breq	.+26     	; 0x15234 <_Z12Publish_Datav+0x916>
   1521a:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   1521e:	bb e1       	ldi	r27, 0x1B	; 27
   15220:	8b 9f       	mul	r24, r27
   15222:	f0 01       	movw	r30, r0
   15224:	11 24       	eor	r1, r1
   15226:	e8 51       	subi	r30, 0x18	; 24
   15228:	f2 4f       	sbci	r31, 0xF2	; 242
   1522a:	12 8e       	std	Z+26, r1	; 0x1a
   1522c:	8f 5f       	subi	r24, 0xFF	; 255
   1522e:	0e 94 89 7a 	call	0xf512	; 0xf512 <_Z21Exra_Plot_Data_EEPROMh>
   15232:	06 c0       	rjmp	.+12     	; 0x15240 <_Z12Publish_Datav+0x922>
   15234:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15238:	81 50       	subi	r24, 0x01	; 1
   1523a:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1523e:	e2 cf       	rjmp	.-60     	; 0x15204 <_Z12Publish_Datav+0x8e6>
   15240:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   15244:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15248:	9f 7e       	andi	r25, 0xEF	; 239
   1524a:	aa cc       	rjmp	.-1708   	; 0x14ba0 <_Z12Publish_Datav+0x282>
   1524c:	95 ff       	sbrs	r25, 5
   1524e:	4c c1       	rjmp	.+664    	; 0x154e8 <_Z12Publish_Datav+0xbca>
   15250:	6e 01       	movw	r12, r28
   15252:	e9 ee       	ldi	r30, 0xE9	; 233
   15254:	ce 1a       	sub	r12, r30
   15256:	ee ef       	ldi	r30, 0xFE	; 254
   15258:	de 0a       	sbc	r13, r30
   1525a:	8c ed       	ldi	r24, 0xDC	; 220
   1525c:	d6 01       	movw	r26, r12
   1525e:	1d 92       	st	X+, r1
   15260:	8a 95       	dec	r24
   15262:	e9 f7       	brne	.-6      	; 0x1525e <_Z12Publish_Datav+0x940>
   15264:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15268:	81 30       	cpi	r24, 0x01	; 1
   1526a:	31 f4       	brne	.+12     	; 0x15278 <_Z12Publish_Datav+0x95a>
   1526c:	64 e6       	ldi	r22, 0x64	; 100
   1526e:	71 e3       	ldi	r23, 0x31	; 49
   15270:	86 ec       	ldi	r24, 0xC6	; 198
   15272:	94 e1       	ldi	r25, 0x14	; 20
   15274:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15278:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   1527c:	90 e0       	ldi	r25, 0x00	; 0
   1527e:	8b 59       	subi	r24, 0x9B	; 155
   15280:	9f 4f       	sbci	r25, 0xFF	; 255
   15282:	cd 50       	subi	r28, 0x0D	; 13
   15284:	de 4f       	sbci	r29, 0xFE	; 254
   15286:	99 83       	std	Y+1, r25	; 0x01
   15288:	88 83       	st	Y, r24
   1528a:	c3 5f       	subi	r28, 0xF3	; 243
   1528c:	d1 40       	sbci	r29, 0x01	; 1
   1528e:	ae 01       	movw	r20, r28
   15290:	4d 50       	subi	r20, 0x0D	; 13
   15292:	5e 4f       	sbci	r21, 0xFE	; 254
   15294:	60 e6       	ldi	r22, 0x60	; 96
   15296:	71 e3       	ldi	r23, 0x31	; 49
   15298:	c8 01       	movw	r24, r16
   1529a:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1529e:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   152a2:	6b e1       	ldi	r22, 0x1B	; 27
   152a4:	f6 2e       	mov	r15, r22
   152a6:	fe 9e       	mul	r15, r30
   152a8:	f0 01       	movw	r30, r0
   152aa:	11 24       	eor	r1, r1
   152ac:	e8 51       	subi	r30, 0x18	; 24
   152ae:	f2 4f       	sbci	r31, 0xF2	; 242
   152b0:	92 81       	ldd	r25, Z+2	; 0x02
   152b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   152b6:	91 30       	cpi	r25, 0x01	; 1
   152b8:	b9 f5       	brne	.+110    	; 0x15328 <_Z12Publish_Datav+0xa0a>
   152ba:	91 8d       	ldd	r25, Z+25	; 0x19
   152bc:	91 11       	cpse	r25, r1
   152be:	34 c0       	rjmp	.+104    	; 0x15328 <_Z12Publish_Datav+0xa0a>
   152c0:	81 30       	cpi	r24, 0x01	; 1
   152c2:	31 f5       	brne	.+76     	; 0x15310 <_Z12Publish_Datav+0x9f2>
   152c4:	6f e3       	ldi	r22, 0x3F	; 63
   152c6:	71 e3       	ldi	r23, 0x31	; 49
   152c8:	86 ec       	ldi	r24, 0xC6	; 198
   152ca:	94 e1       	ldi	r25, 0x14	; 20
   152cc:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   152d0:	86 ec       	ldi	r24, 0xC6	; 198
   152d2:	94 e1       	ldi	r25, 0x14	; 20
   152d4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   152d8:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   152dc:	fe 9e       	mul	r15, r30
   152de:	f0 01       	movw	r30, r0
   152e0:	11 24       	eor	r1, r1
   152e2:	e8 51       	subi	r30, 0x18	; 24
   152e4:	f2 4f       	sbci	r31, 0xF2	; 242
   152e6:	4a e0       	ldi	r20, 0x0A	; 10
   152e8:	50 e0       	ldi	r21, 0x00	; 0
   152ea:	62 81       	ldd	r22, Z+2	; 0x02
   152ec:	86 ec       	ldi	r24, 0xC6	; 198
   152ee:	94 e1       	ldi	r25, 0x14	; 20
   152f0:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   152f4:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   152f8:	fe 9e       	mul	r15, r30
   152fa:	f0 01       	movw	r30, r0
   152fc:	11 24       	eor	r1, r1
   152fe:	e8 51       	subi	r30, 0x18	; 24
   15300:	f2 4f       	sbci	r31, 0xF2	; 242
   15302:	4a e0       	ldi	r20, 0x0A	; 10
   15304:	50 e0       	ldi	r21, 0x00	; 0
   15306:	61 8d       	ldd	r22, Z+25	; 0x19
   15308:	86 ec       	ldi	r24, 0xC6	; 198
   1530a:	94 e1       	ldi	r25, 0x14	; 20
   1530c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   15310:	cd 50       	subi	r28, 0x0D	; 13
   15312:	de 4f       	sbci	r29, 0xFE	; 254
   15314:	19 82       	std	Y+1, r1	; 0x01
   15316:	18 82       	st	Y, r1
   15318:	c3 5f       	subi	r28, 0xF3	; 243
   1531a:	d1 40       	sbci	r29, 0x01	; 1
   1531c:	ae 01       	movw	r20, r28
   1531e:	4d 50       	subi	r20, 0x0D	; 13
   15320:	5e 4f       	sbci	r21, 0xFE	; 254
   15322:	68 e3       	ldi	r22, 0x38	; 56
   15324:	71 e3       	ldi	r23, 0x31	; 49
   15326:	37 c0       	rjmp	.+110    	; 0x15396 <_Z12Publish_Datav+0xa78>
   15328:	81 30       	cpi	r24, 0x01	; 1
   1532a:	41 f5       	brne	.+80     	; 0x1537c <_Z12Publish_Datav+0xa5e>
   1532c:	66 e1       	ldi	r22, 0x16	; 22
   1532e:	71 e3       	ldi	r23, 0x31	; 49
   15330:	86 ec       	ldi	r24, 0xC6	; 198
   15332:	94 e1       	ldi	r25, 0x14	; 20
   15334:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15338:	86 ec       	ldi	r24, 0xC6	; 198
   1533a:	94 e1       	ldi	r25, 0x14	; 20
   1533c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   15340:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15344:	5b e1       	ldi	r21, 0x1B	; 27
   15346:	f5 2e       	mov	r15, r21
   15348:	fe 9e       	mul	r15, r30
   1534a:	f0 01       	movw	r30, r0
   1534c:	11 24       	eor	r1, r1
   1534e:	e8 51       	subi	r30, 0x18	; 24
   15350:	f2 4f       	sbci	r31, 0xF2	; 242
   15352:	4a e0       	ldi	r20, 0x0A	; 10
   15354:	50 e0       	ldi	r21, 0x00	; 0
   15356:	62 81       	ldd	r22, Z+2	; 0x02
   15358:	86 ec       	ldi	r24, 0xC6	; 198
   1535a:	94 e1       	ldi	r25, 0x14	; 20
   1535c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   15360:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15364:	fe 9e       	mul	r15, r30
   15366:	f0 01       	movw	r30, r0
   15368:	11 24       	eor	r1, r1
   1536a:	e8 51       	subi	r30, 0x18	; 24
   1536c:	f2 4f       	sbci	r31, 0xF2	; 242
   1536e:	4a e0       	ldi	r20, 0x0A	; 10
   15370:	50 e0       	ldi	r21, 0x00	; 0
   15372:	61 8d       	ldd	r22, Z+25	; 0x19
   15374:	86 ec       	ldi	r24, 0xC6	; 198
   15376:	94 e1       	ldi	r25, 0x14	; 20
   15378:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   1537c:	81 e0       	ldi	r24, 0x01	; 1
   1537e:	90 e0       	ldi	r25, 0x00	; 0
   15380:	cd 50       	subi	r28, 0x0D	; 13
   15382:	de 4f       	sbci	r29, 0xFE	; 254
   15384:	99 83       	std	Y+1, r25	; 0x01
   15386:	88 83       	st	Y, r24
   15388:	c3 5f       	subi	r28, 0xF3	; 243
   1538a:	d1 40       	sbci	r29, 0x01	; 1
   1538c:	ae 01       	movw	r20, r28
   1538e:	4d 50       	subi	r20, 0x0D	; 13
   15390:	5e 4f       	sbci	r21, 0xFE	; 254
   15392:	6f e0       	ldi	r22, 0x0F	; 15
   15394:	71 e3       	ldi	r23, 0x31	; 49
   15396:	c8 01       	movw	r24, r16
   15398:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1539c:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   153a0:	8e ef       	ldi	r24, 0xFE	; 254
   153a2:	8e 0f       	add	r24, r30
   153a4:	88 30       	cpi	r24, 0x08	; 8
   153a6:	08 f4       	brcc	.+2      	; 0x153aa <_Z12Publish_Datav+0xa8c>
   153a8:	5c c0       	rjmp	.+184    	; 0x15462 <_Z12Publish_Datav+0xb44>
   153aa:	bb e1       	ldi	r27, 0x1B	; 27
   153ac:	eb 9f       	mul	r30, r27
   153ae:	f0 01       	movw	r30, r0
   153b0:	11 24       	eor	r1, r1
   153b2:	e8 51       	subi	r30, 0x18	; 24
   153b4:	f2 4f       	sbci	r31, 0xF2	; 242
   153b6:	82 81       	ldd	r24, Z+2	; 0x02
   153b8:	85 30       	cpi	r24, 0x05	; 5
   153ba:	71 f4       	brne	.+28     	; 0x153d8 <_Z12Publish_Datav+0xaba>
   153bc:	cd 50       	subi	r28, 0x0D	; 13
   153be:	de 4f       	sbci	r29, 0xFE	; 254
   153c0:	19 82       	std	Y+1, r1	; 0x01
   153c2:	18 82       	st	Y, r1
   153c4:	c3 5f       	subi	r28, 0xF3	; 243
   153c6:	d1 40       	sbci	r29, 0x01	; 1
   153c8:	ae 01       	movw	r20, r28
   153ca:	4d 50       	subi	r20, 0x0D	; 13
   153cc:	5e 4f       	sbci	r21, 0xFE	; 254
   153ce:	68 e0       	ldi	r22, 0x08	; 8
   153d0:	71 e3       	ldi	r23, 0x31	; 49
   153d2:	c8 01       	movw	r24, r16
   153d4:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   153d8:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   153dc:	2b e1       	ldi	r18, 0x1B	; 27
   153de:	e2 9f       	mul	r30, r18
   153e0:	f0 01       	movw	r30, r0
   153e2:	11 24       	eor	r1, r1
   153e4:	e8 51       	subi	r30, 0x18	; 24
   153e6:	f2 4f       	sbci	r31, 0xF2	; 242
   153e8:	82 81       	ldd	r24, Z+2	; 0x02
   153ea:	84 30       	cpi	r24, 0x04	; 4
   153ec:	81 f4       	brne	.+32     	; 0x1540e <_Z12Publish_Datav+0xaf0>
   153ee:	81 e0       	ldi	r24, 0x01	; 1
   153f0:	90 e0       	ldi	r25, 0x00	; 0
   153f2:	cd 50       	subi	r28, 0x0D	; 13
   153f4:	de 4f       	sbci	r29, 0xFE	; 254
   153f6:	99 83       	std	Y+1, r25	; 0x01
   153f8:	88 83       	st	Y, r24
   153fa:	c3 5f       	subi	r28, 0xF3	; 243
   153fc:	d1 40       	sbci	r29, 0x01	; 1
   153fe:	ae 01       	movw	r20, r28
   15400:	4d 50       	subi	r20, 0x0D	; 13
   15402:	5e 4f       	sbci	r21, 0xFE	; 254
   15404:	61 e0       	ldi	r22, 0x01	; 1
   15406:	71 e3       	ldi	r23, 0x31	; 49
   15408:	c8 01       	movw	r24, r16
   1540a:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1540e:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15412:	81 30       	cpi	r24, 0x01	; 1
   15414:	31 f5       	brne	.+76     	; 0x15462 <_Z12Publish_Datav+0xb44>
   15416:	e0 91 08 0e 	lds	r30, 0x0E08	; 0x800e08 <_sExtra_Plot+0x20>
   1541a:	f0 e0       	ldi	r31, 0x00	; 0
   1541c:	e7 5c       	subi	r30, 0xC7	; 199
   1541e:	fb 4e       	sbci	r31, 0xEB	; 235
   15420:	80 81       	ld	r24, Z
   15422:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   15426:	89 2b       	or	r24, r25
   15428:	61 f0       	breq	.+24     	; 0x15442 <_Z12Publish_Datav+0xb24>
   1542a:	cd 50       	subi	r28, 0x0D	; 13
   1542c:	de 4f       	sbci	r29, 0xFE	; 254
   1542e:	19 82       	std	Y+1, r1	; 0x01
   15430:	18 82       	st	Y, r1
   15432:	c3 5f       	subi	r28, 0xF3	; 243
   15434:	d1 40       	sbci	r29, 0x01	; 1
   15436:	ae 01       	movw	r20, r28
   15438:	4d 50       	subi	r20, 0x0D	; 13
   1543a:	5e 4f       	sbci	r21, 0xFE	; 254
   1543c:	6a ef       	ldi	r22, 0xFA	; 250
   1543e:	70 e3       	ldi	r23, 0x30	; 48
   15440:	0d c0       	rjmp	.+26     	; 0x1545c <_Z12Publish_Datav+0xb3e>
   15442:	81 e0       	ldi	r24, 0x01	; 1
   15444:	90 e0       	ldi	r25, 0x00	; 0
   15446:	cd 50       	subi	r28, 0x0D	; 13
   15448:	de 4f       	sbci	r29, 0xFE	; 254
   1544a:	99 83       	std	Y+1, r25	; 0x01
   1544c:	88 83       	st	Y, r24
   1544e:	c3 5f       	subi	r28, 0xF3	; 243
   15450:	d1 40       	sbci	r29, 0x01	; 1
   15452:	ae 01       	movw	r20, r28
   15454:	4d 50       	subi	r20, 0x0D	; 13
   15456:	5e 4f       	sbci	r21, 0xFE	; 254
   15458:	63 ef       	ldi	r22, 0xF3	; 243
   1545a:	70 e3       	ldi	r23, 0x30	; 48
   1545c:	c8 01       	movw	r24, r16
   1545e:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15462:	4c ed       	ldi	r20, 0xDC	; 220
   15464:	50 e0       	ldi	r21, 0x00	; 0
   15466:	b6 01       	movw	r22, r12
   15468:	c8 01       	movw	r24, r16
   1546a:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   1546e:	e2 e6       	ldi	r30, 0x62	; 98
   15470:	ff e0       	ldi	r31, 0x0F	; 15
   15472:	8e e6       	ldi	r24, 0x6E	; 110
   15474:	df 01       	movw	r26, r30
   15476:	1d 92       	st	X+, r1
   15478:	8a 95       	dec	r24
   1547a:	e9 f7       	brne	.-6      	; 0x15476 <_Z12Publish_Datav+0xb58>
   1547c:	8e ec       	ldi	r24, 0xCE	; 206
   1547e:	93 e1       	ldi	r25, 0x13	; 19
   15480:	9f 93       	push	r25
   15482:	8f 93       	push	r24
   15484:	8d e9       	ldi	r24, 0x9D	; 157
   15486:	97 e0       	ldi	r25, 0x07	; 7
   15488:	9f 93       	push	r25
   1548a:	8f 93       	push	r24
   1548c:	ff 93       	push	r31
   1548e:	ef 93       	push	r30
   15490:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   15494:	0f 90       	pop	r0
   15496:	0f 90       	pop	r0
   15498:	0f 90       	pop	r0
   1549a:	0f 90       	pop	r0
   1549c:	0f 90       	pop	r0
   1549e:	0f 90       	pop	r0
   154a0:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   154a4:	88 23       	and	r24, r24
   154a6:	d1 f0       	breq	.+52     	; 0x154dc <_Z12Publish_Datav+0xbbe>
   154a8:	b6 01       	movw	r22, r12
   154aa:	82 e6       	ldi	r24, 0x62	; 98
   154ac:	9f e0       	ldi	r25, 0x0F	; 15
   154ae:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   154b2:	88 23       	and	r24, r24
   154b4:	69 f0       	breq	.+26     	; 0x154d0 <_Z12Publish_Datav+0xbb2>
   154b6:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   154ba:	bb e1       	ldi	r27, 0x1B	; 27
   154bc:	8b 9f       	mul	r24, r27
   154be:	f0 01       	movw	r30, r0
   154c0:	11 24       	eor	r1, r1
   154c2:	e8 51       	subi	r30, 0x18	; 24
   154c4:	f2 4f       	sbci	r31, 0xF2	; 242
   154c6:	12 8e       	std	Z+26, r1	; 0x1a
   154c8:	8f 5f       	subi	r24, 0xFF	; 255
   154ca:	0e 94 89 7a 	call	0xf512	; 0xf512 <_Z21Exra_Plot_Data_EEPROMh>
   154ce:	06 c0       	rjmp	.+12     	; 0x154dc <_Z12Publish_Datav+0xbbe>
   154d0:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   154d4:	81 50       	subi	r24, 0x01	; 1
   154d6:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   154da:	e2 cf       	rjmp	.-60     	; 0x154a0 <_Z12Publish_Datav+0xb82>
   154dc:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   154e0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   154e4:	9f 7d       	andi	r25, 0xDF	; 223
   154e6:	5c cb       	rjmp	.-2376   	; 0x14ba0 <_Z12Publish_Datav+0x282>
   154e8:	82 ff       	sbrs	r24, 2
   154ea:	b0 c1       	rjmp	.+864    	; 0x1584c <_Z12Publish_Datav+0xf2e>
   154ec:	7e 01       	movw	r14, r28
   154ee:	e9 ee       	ldi	r30, 0xE9	; 233
   154f0:	ee 1a       	sub	r14, r30
   154f2:	ee ef       	ldi	r30, 0xFE	; 254
   154f4:	fe 0a       	sbc	r15, r30
   154f6:	8c ed       	ldi	r24, 0xDC	; 220
   154f8:	d7 01       	movw	r26, r14
   154fa:	1d 92       	st	X+, r1
   154fc:	8a 95       	dec	r24
   154fe:	e9 f7       	brne	.-6      	; 0x154fa <_Z12Publish_Datav+0xbdc>
   15500:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   15504:	81 11       	cpse	r24, r1
   15506:	4e c0       	rjmp	.+156    	; 0x155a4 <_Z12Publish_Datav+0xc86>
   15508:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   1550c:	88 23       	and	r24, r24
   1550e:	09 f4       	brne	.+2      	; 0x15512 <_Z12Publish_Datav+0xbf4>
   15510:	43 c0       	rjmp	.+134    	; 0x15598 <_Z12Publish_Datav+0xc7a>
   15512:	90 90 b6 13 	lds	r9, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   15516:	a0 90 b7 13 	lds	r10, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   1551a:	b0 90 b8 13 	lds	r11, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   1551e:	c0 90 b9 13 	lds	r12, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   15522:	d0 90 ba 13 	lds	r13, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   15526:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   1552a:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   1552e:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   15532:	29 2d       	mov	r18, r9
   15534:	3a 2d       	mov	r19, r10
   15536:	4b 2d       	mov	r20, r11
   15538:	5c 2d       	mov	r21, r12
   1553a:	6d 2d       	mov	r22, r13
   1553c:	7b 2f       	mov	r23, r27
   1553e:	8f 2f       	mov	r24, r31
   15540:	9e 2f       	mov	r25, r30
   15542:	a2 e0       	ldi	r26, 0x02	; 2
   15544:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
   15548:	81 f0       	breq	.+32     	; 0x1556a <_Z12Publish_Datav+0xc4c>
   1554a:	a4 e0       	ldi	r26, 0x04	; 4
   1554c:	cd 50       	subi	r28, 0x0D	; 13
   1554e:	de 4f       	sbci	r29, 0xFE	; 254
   15550:	19 82       	std	Y+1, r1	; 0x01
   15552:	18 82       	st	Y, r1
   15554:	c3 5f       	subi	r28, 0xF3	; 243
   15556:	d1 40       	sbci	r29, 0x01	; 1
   15558:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
   1555c:	a1 f4       	brne	.+40     	; 0x15586 <_Z12Publish_Datav+0xc68>
   1555e:	ae 01       	movw	r20, r28
   15560:	4d 50       	subi	r20, 0x0D	; 13
   15562:	5e 4f       	sbci	r21, 0xFE	; 254
   15564:	6b ee       	ldi	r22, 0xEB	; 235
   15566:	70 e3       	ldi	r23, 0x30	; 48
   15568:	13 c0       	rjmp	.+38     	; 0x15590 <_Z12Publish_Datav+0xc72>
   1556a:	81 e0       	ldi	r24, 0x01	; 1
   1556c:	90 e0       	ldi	r25, 0x00	; 0
   1556e:	cd 50       	subi	r28, 0x0D	; 13
   15570:	de 4f       	sbci	r29, 0xFE	; 254
   15572:	99 83       	std	Y+1, r25	; 0x01
   15574:	88 83       	st	Y, r24
   15576:	c3 5f       	subi	r28, 0xF3	; 243
   15578:	d1 40       	sbci	r29, 0x01	; 1
   1557a:	ae 01       	movw	r20, r28
   1557c:	4d 50       	subi	r20, 0x0D	; 13
   1557e:	5e 4f       	sbci	r21, 0xFE	; 254
   15580:	63 ee       	ldi	r22, 0xE3	; 227
   15582:	70 e3       	ldi	r23, 0x30	; 48
   15584:	05 c0       	rjmp	.+10     	; 0x15590 <_Z12Publish_Datav+0xc72>
   15586:	ae 01       	movw	r20, r28
   15588:	4d 50       	subi	r20, 0x0D	; 13
   1558a:	5e 4f       	sbci	r21, 0xFE	; 254
   1558c:	6b ed       	ldi	r22, 0xDB	; 219
   1558e:	70 e3       	ldi	r23, 0x30	; 48
   15590:	c8 01       	movw	r24, r16
   15592:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15596:	21 c0       	rjmp	.+66     	; 0x155da <_Z12Publish_Datav+0xcbc>
   15598:	8a e0       	ldi	r24, 0x0A	; 10
   1559a:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   1559e:	89 2b       	or	r24, r25
   155a0:	71 f4       	brne	.+28     	; 0x155be <_Z12Publish_Datav+0xca0>
   155a2:	04 c0       	rjmp	.+8      	; 0x155ac <_Z12Publish_Datav+0xc8e>
   155a4:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   155a8:	81 30       	cpi	r24, 0x01	; 1
   155aa:	49 f4       	brne	.+18     	; 0x155be <_Z12Publish_Datav+0xca0>
   155ac:	81 e0       	ldi	r24, 0x01	; 1
   155ae:	90 e0       	ldi	r25, 0x00	; 0
   155b0:	cd 50       	subi	r28, 0x0D	; 13
   155b2:	de 4f       	sbci	r29, 0xFE	; 254
   155b4:	99 83       	std	Y+1, r25	; 0x01
   155b6:	88 83       	st	Y, r24
   155b8:	c3 5f       	subi	r28, 0xF3	; 243
   155ba:	d1 40       	sbci	r29, 0x01	; 1
   155bc:	06 c0       	rjmp	.+12     	; 0x155ca <_Z12Publish_Datav+0xcac>
   155be:	cd 50       	subi	r28, 0x0D	; 13
   155c0:	de 4f       	sbci	r29, 0xFE	; 254
   155c2:	19 82       	std	Y+1, r1	; 0x01
   155c4:	18 82       	st	Y, r1
   155c6:	c3 5f       	subi	r28, 0xF3	; 243
   155c8:	d1 40       	sbci	r29, 0x01	; 1
   155ca:	ae 01       	movw	r20, r28
   155cc:	4d 50       	subi	r20, 0x0D	; 13
   155ce:	5e 4f       	sbci	r21, 0xFE	; 254
   155d0:	65 e9       	ldi	r22, 0x95	; 149
   155d2:	77 e0       	ldi	r23, 0x07	; 7
   155d4:	c8 01       	movw	r24, r16
   155d6:	0e 94 c8 8b 	call	0x11790	; 0x11790 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   155da:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   155de:	cd 50       	subi	r28, 0x0D	; 13
   155e0:	de 4f       	sbci	r29, 0xFE	; 254
   155e2:	88 83       	st	Y, r24
   155e4:	c3 5f       	subi	r28, 0xF3	; 243
   155e6:	d1 40       	sbci	r29, 0x01	; 1
   155e8:	ae 01       	movw	r20, r28
   155ea:	4d 50       	subi	r20, 0x0D	; 13
   155ec:	5e 4f       	sbci	r21, 0xFE	; 254
   155ee:	66 ed       	ldi	r22, 0xD6	; 214
   155f0:	70 e3       	ldi	r23, 0x30	; 48
   155f2:	c8 01       	movw	r24, r16
   155f4:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   155f8:	63 ec       	ldi	r22, 0xC3	; 195
   155fa:	70 e3       	ldi	r23, 0x30	; 48
   155fc:	c8 01       	movw	r24, r16
   155fe:	0e 94 47 8a 	call	0x1148e	; 0x1148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   15602:	6c 01       	movw	r12, r24
   15604:	89 2b       	or	r24, r25
   15606:	91 f4       	brne	.+36     	; 0x1562c <_Z12Publish_Datav+0xd0e>
   15608:	c8 01       	movw	r24, r16
   1560a:	0e 94 6b 8a 	call	0x114d6	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1560e:	6c 01       	movw	r12, r24
   15610:	00 97       	sbiw	r24, 0x00	; 0
   15612:	d9 f0       	breq	.+54     	; 0x1564a <_Z12Publish_Datav+0xd2c>
   15614:	43 ec       	ldi	r20, 0xC3	; 195
   15616:	50 e3       	ldi	r21, 0x30	; 48
   15618:	bc 01       	movw	r22, r24
   1561a:	6e 5f       	subi	r22, 0xFE	; 254
   1561c:	7f 4f       	sbci	r23, 0xFF	; 255
   1561e:	f8 01       	movw	r30, r16
   15620:	80 81       	ld	r24, Z
   15622:	91 81       	ldd	r25, Z+1	; 0x01
   15624:	0e 94 8c 8a 	call	0x11518	; 0x11518 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   15628:	88 23       	and	r24, r24
   1562a:	79 f0       	breq	.+30     	; 0x1564a <_Z12Publish_Datav+0xd2c>
   1562c:	80 91 a8 13 	lds	r24, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
   15630:	90 91 a9 13 	lds	r25, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
   15634:	a0 91 aa 13 	lds	r26, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
   15638:	b0 91 ab 13 	lds	r27, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
   1563c:	28 e0       	ldi	r18, 0x08	; 8
   1563e:	f6 01       	movw	r30, r12
   15640:	24 83       	std	Z+4, r18	; 0x04
   15642:	85 83       	std	Z+5, r24	; 0x05
   15644:	96 83       	std	Z+6, r25	; 0x06
   15646:	a7 83       	std	Z+7, r26	; 0x07
   15648:	b0 87       	std	Z+8, r27	; 0x08
   1564a:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1564e:	82 30       	cpi	r24, 0x02	; 2
   15650:	41 f0       	breq	.+16     	; 0x15662 <_Z12Publish_Datav+0xd44>
   15652:	4e e1       	ldi	r20, 0x1E	; 30
   15654:	54 e1       	ldi	r21, 0x14	; 20
   15656:	6e eb       	ldi	r22, 0xBE	; 190
   15658:	70 e3       	ldi	r23, 0x30	; 48
   1565a:	c8 01       	movw	r24, r16
   1565c:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15660:	0e c0       	rjmp	.+28     	; 0x1567e <_Z12Publish_Datav+0xd60>
   15662:	cd 50       	subi	r28, 0x0D	; 13
   15664:	de 4f       	sbci	r29, 0xFE	; 254
   15666:	19 82       	std	Y+1, r1	; 0x01
   15668:	18 82       	st	Y, r1
   1566a:	c3 5f       	subi	r28, 0xF3	; 243
   1566c:	d1 40       	sbci	r29, 0x01	; 1
   1566e:	ae 01       	movw	r20, r28
   15670:	4d 50       	subi	r20, 0x0D	; 13
   15672:	5e 4f       	sbci	r21, 0xFE	; 254
   15674:	69 eb       	ldi	r22, 0xB9	; 185
   15676:	70 e3       	ldi	r23, 0x30	; 48
   15678:	c8 01       	movw	r24, r16
   1567a:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1567e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   15682:	85 30       	cpi	r24, 0x05	; 5
   15684:	09 f0       	breq	.+2      	; 0x15688 <_Z12Publish_Datav+0xd6a>
   15686:	67 c0       	rjmp	.+206    	; 0x15756 <_Z12Publish_Datav+0xe38>
   15688:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   1568c:	88 23       	and	r24, r24
   1568e:	09 f4       	brne	.+2      	; 0x15692 <_Z12Publish_Datav+0xd74>
   15690:	48 c0       	rjmp	.+144    	; 0x15722 <_Z12Publish_Datav+0xe04>
   15692:	60 eb       	ldi	r22, 0xB0	; 176
   15694:	70 e3       	ldi	r23, 0x30	; 48
   15696:	c8 01       	movw	r24, r16
   15698:	0e 94 47 8a 	call	0x1148e	; 0x1148e <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1569c:	6c 01       	movw	r12, r24
   1569e:	89 2b       	or	r24, r25
   156a0:	91 f4       	brne	.+36     	; 0x156c6 <_Z12Publish_Datav+0xda8>
   156a2:	c8 01       	movw	r24, r16
   156a4:	0e 94 6b 8a 	call	0x114d6	; 0x114d6 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   156a8:	6c 01       	movw	r12, r24
   156aa:	00 97       	sbiw	r24, 0x00	; 0
   156ac:	c1 f0       	breq	.+48     	; 0x156de <_Z12Publish_Datav+0xdc0>
   156ae:	40 eb       	ldi	r20, 0xB0	; 176
   156b0:	50 e3       	ldi	r21, 0x30	; 48
   156b2:	bc 01       	movw	r22, r24
   156b4:	6e 5f       	subi	r22, 0xFE	; 254
   156b6:	7f 4f       	sbci	r23, 0xFF	; 255
   156b8:	d8 01       	movw	r26, r16
   156ba:	8d 91       	ld	r24, X+
   156bc:	9c 91       	ld	r25, X
   156be:	0e 94 8c 8a 	call	0x11518	; 0x11518 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   156c2:	88 23       	and	r24, r24
   156c4:	61 f0       	breq	.+24     	; 0x156de <_Z12Publish_Datav+0xdc0>
   156c6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   156ca:	94 e0       	ldi	r25, 0x04	; 4
   156cc:	f6 01       	movw	r30, r12
   156ce:	94 83       	std	Z+4, r25	; 0x04
   156d0:	90 e0       	ldi	r25, 0x00	; 0
   156d2:	a0 e0       	ldi	r26, 0x00	; 0
   156d4:	b0 e0       	ldi	r27, 0x00	; 0
   156d6:	85 83       	std	Z+5, r24	; 0x05
   156d8:	96 83       	std	Z+6, r25	; 0x06
   156da:	a7 83       	std	Z+7, r26	; 0x07
   156dc:	b0 87       	std	Z+8, r27	; 0x08
   156de:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
   156e2:	f0 e0       	ldi	r31, 0x00	; 0
   156e4:	ee 0f       	add	r30, r30
   156e6:	ff 1f       	adc	r31, r31
   156e8:	e4 5e       	subi	r30, 0xE4	; 228
   156ea:	f6 4f       	sbci	r31, 0xF6	; 246
   156ec:	87 8d       	ldd	r24, Z+31	; 0x1f
   156ee:	90 a1       	ldd	r25, Z+32	; 0x20
   156f0:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
   156f4:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
   156f8:	82 1b       	sub	r24, r18
   156fa:	93 0b       	sbc	r25, r19
   156fc:	6c e3       	ldi	r22, 0x3C	; 60
   156fe:	70 e0       	ldi	r23, 0x00	; 0
   15700:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   15704:	cd 50       	subi	r28, 0x0D	; 13
   15706:	de 4f       	sbci	r29, 0xFE	; 254
   15708:	79 83       	std	Y+1, r23	; 0x01
   1570a:	68 83       	st	Y, r22
   1570c:	c3 5f       	subi	r28, 0xF3	; 243
   1570e:	d1 40       	sbci	r29, 0x01	; 1
   15710:	ae 01       	movw	r20, r28
   15712:	4d 50       	subi	r20, 0x0D	; 13
   15714:	5e 4f       	sbci	r21, 0xFE	; 254
   15716:	61 ea       	ldi	r22, 0xA1	; 161
   15718:	70 e3       	ldi	r23, 0x30	; 48
   1571a:	c8 01       	movw	r24, r16
   1571c:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15720:	36 c0       	rjmp	.+108    	; 0x1578e <_Z12Publish_Datav+0xe70>
   15722:	cd 50       	subi	r28, 0x0D	; 13
   15724:	de 4f       	sbci	r29, 0xFE	; 254
   15726:	19 82       	std	Y+1, r1	; 0x01
   15728:	18 82       	st	Y, r1
   1572a:	c3 5f       	subi	r28, 0xF3	; 243
   1572c:	d1 40       	sbci	r29, 0x01	; 1
   1572e:	ae 01       	movw	r20, r28
   15730:	4d 50       	subi	r20, 0x0D	; 13
   15732:	5e 4f       	sbci	r21, 0xFE	; 254
   15734:	68 e9       	ldi	r22, 0x98	; 152
   15736:	70 e3       	ldi	r23, 0x30	; 48
   15738:	c8 01       	movw	r24, r16
   1573a:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1573e:	cd 50       	subi	r28, 0x0D	; 13
   15740:	de 4f       	sbci	r29, 0xFE	; 254
   15742:	19 82       	std	Y+1, r1	; 0x01
   15744:	18 82       	st	Y, r1
   15746:	c3 5f       	subi	r28, 0xF3	; 243
   15748:	d1 40       	sbci	r29, 0x01	; 1
   1574a:	ae 01       	movw	r20, r28
   1574c:	4d 50       	subi	r20, 0x0D	; 13
   1574e:	5e 4f       	sbci	r21, 0xFE	; 254
   15750:	69 e8       	ldi	r22, 0x89	; 137
   15752:	70 e3       	ldi	r23, 0x30	; 48
   15754:	19 c0       	rjmp	.+50     	; 0x15788 <_Z12Publish_Datav+0xe6a>
   15756:	cd 50       	subi	r28, 0x0D	; 13
   15758:	de 4f       	sbci	r29, 0xFE	; 254
   1575a:	19 82       	std	Y+1, r1	; 0x01
   1575c:	18 82       	st	Y, r1
   1575e:	c3 5f       	subi	r28, 0xF3	; 243
   15760:	d1 40       	sbci	r29, 0x01	; 1
   15762:	ae 01       	movw	r20, r28
   15764:	4d 50       	subi	r20, 0x0D	; 13
   15766:	5e 4f       	sbci	r21, 0xFE	; 254
   15768:	60 e8       	ldi	r22, 0x80	; 128
   1576a:	70 e3       	ldi	r23, 0x30	; 48
   1576c:	c8 01       	movw	r24, r16
   1576e:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15772:	cd 50       	subi	r28, 0x0D	; 13
   15774:	de 4f       	sbci	r29, 0xFE	; 254
   15776:	19 82       	std	Y+1, r1	; 0x01
   15778:	18 82       	st	Y, r1
   1577a:	c3 5f       	subi	r28, 0xF3	; 243
   1577c:	d1 40       	sbci	r29, 0x01	; 1
   1577e:	ae 01       	movw	r20, r28
   15780:	4d 50       	subi	r20, 0x0D	; 13
   15782:	5e 4f       	sbci	r21, 0xFE	; 254
   15784:	61 e7       	ldi	r22, 0x71	; 113
   15786:	70 e3       	ldi	r23, 0x30	; 48
   15788:	c8 01       	movw	r24, r16
   1578a:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1578e:	48 e9       	ldi	r20, 0x98	; 152
   15790:	54 e1       	ldi	r21, 0x14	; 20
   15792:	68 e6       	ldi	r22, 0x68	; 104
   15794:	70 e3       	ldi	r23, 0x30	; 48
   15796:	c8 01       	movw	r24, r16
   15798:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1579c:	40 e7       	ldi	r20, 0x70	; 112
   1579e:	54 e1       	ldi	r21, 0x14	; 20
   157a0:	6c e5       	ldi	r22, 0x5C	; 92
   157a2:	70 e3       	ldi	r23, 0x30	; 48
   157a4:	c8 01       	movw	r24, r16
   157a6:	0e 94 6b 8b 	call	0x116d6	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   157aa:	4c ed       	ldi	r20, 0xDC	; 220
   157ac:	50 e0       	ldi	r21, 0x00	; 0
   157ae:	b7 01       	movw	r22, r14
   157b0:	c8 01       	movw	r24, r16
   157b2:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   157b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   157ba:	81 30       	cpi	r24, 0x01	; 1
   157bc:	31 f4       	brne	.+12     	; 0x157ca <_Z12Publish_Datav+0xeac>
   157be:	60 ed       	ldi	r22, 0xD0	; 208
   157c0:	7f e0       	ldi	r23, 0x0F	; 15
   157c2:	86 ec       	ldi	r24, 0xC6	; 198
   157c4:	94 e1       	ldi	r25, 0x14	; 20
   157c6:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   157ca:	80 91 e2 0d 	lds	r24, 0x0DE2	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   157ce:	8f 5f       	subi	r24, 0xFF	; 255
   157d0:	80 93 e2 0d 	sts	0x0DE2, r24	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   157d4:	e2 e6       	ldi	r30, 0x62	; 98
   157d6:	ff e0       	ldi	r31, 0x0F	; 15
   157d8:	8e e6       	ldi	r24, 0x6E	; 110
   157da:	df 01       	movw	r26, r30
   157dc:	1d 92       	st	X+, r1
   157de:	8a 95       	dec	r24
   157e0:	e9 f7       	brne	.-6      	; 0x157dc <_Z12Publish_Datav+0xebe>
   157e2:	8e ec       	ldi	r24, 0xCE	; 206
   157e4:	93 e1       	ldi	r25, 0x13	; 19
   157e6:	9f 93       	push	r25
   157e8:	8f 93       	push	r24
   157ea:	86 eb       	ldi	r24, 0xB6	; 182
   157ec:	97 e0       	ldi	r25, 0x07	; 7
   157ee:	9f 93       	push	r25
   157f0:	8f 93       	push	r24
   157f2:	ff 93       	push	r31
   157f4:	ef 93       	push	r30
   157f6:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   157fa:	0f 90       	pop	r0
   157fc:	0f 90       	pop	r0
   157fe:	0f 90       	pop	r0
   15800:	0f 90       	pop	r0
   15802:	0f 90       	pop	r0
   15804:	0f 90       	pop	r0
   15806:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1580a:	88 23       	and	r24, r24
   1580c:	81 f0       	breq	.+32     	; 0x1582e <_Z12Publish_Datav+0xf10>
   1580e:	b7 01       	movw	r22, r14
   15810:	82 e6       	ldi	r24, 0x62	; 98
   15812:	9f e0       	ldi	r25, 0x0F	; 15
   15814:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   15818:	88 23       	and	r24, r24
   1581a:	19 f0       	breq	.+6      	; 0x15822 <_Z12Publish_Datav+0xf04>
   1581c:	10 92 e2 0d 	sts	0x0DE2, r1	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15820:	06 c0       	rjmp	.+12     	; 0x1582e <_Z12Publish_Datav+0xf10>
   15822:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15826:	81 50       	subi	r24, 0x01	; 1
   15828:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1582c:	ec cf       	rjmp	.-40     	; 0x15806 <_Z12Publish_Datav+0xee8>
   1582e:	80 91 e2 0d 	lds	r24, 0x0DE2	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15832:	84 30       	cpi	r24, 0x04	; 4
   15834:	28 f0       	brcs	.+10     	; 0x15840 <_Z12Publish_Datav+0xf22>
   15836:	82 e0       	ldi	r24, 0x02	; 2
   15838:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
   1583c:	0e 94 8b 80 	call	0x10116	; 0x10116 <_Z14Ping_to_Serverv>
   15840:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   15844:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15848:	8b 7f       	andi	r24, 0xFB	; 251
   1584a:	aa c9       	rjmp	.-3244   	; 0x14ba0 <_Z12Publish_Datav+0x282>
   1584c:	80 91 e0 0d 	lds	r24, 0x0DE0	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15850:	90 91 e1 0d 	lds	r25, 0x0DE1	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15854:	00 97       	sbiw	r24, 0x00	; 0
   15856:	09 f0       	breq	.+2      	; 0x1585a <_Z12Publish_Datav+0xf3c>
   15858:	42 c2       	rjmp	.+1156   	; 0x15cde <_Z12Publish_Datav+0x13c0>
   1585a:	38 ee       	ldi	r19, 0xE8	; 232
   1585c:	c3 2e       	mov	r12, r19
   1585e:	3d e0       	ldi	r19, 0x0D	; 13
   15860:	d3 2e       	mov	r13, r19
   15862:	e1 2c       	mov	r14, r1
   15864:	f1 2c       	mov	r15, r1
   15866:	7e 2c       	mov	r7, r14
   15868:	f6 01       	movw	r30, r12
   1586a:	81 81       	ldd	r24, Z+1	; 0x01
   1586c:	85 36       	cpi	r24, 0x65	; 101
   1586e:	08 f4       	brcc	.+2      	; 0x15872 <_Z12Publish_Datav+0xf54>
   15870:	2a c2       	rjmp	.+1108   	; 0x15cc6 <_Z12Publish_Datav+0x13a8>
   15872:	62 8d       	ldd	r22, Z+26	; 0x1a
   15874:	66 23       	and	r22, r22
   15876:	09 f4       	brne	.+2      	; 0x1587a <_Z12Publish_Datav+0xf5c>
   15878:	26 c2       	rjmp	.+1100   	; 0x15cc6 <_Z12Publish_Datav+0x13a8>
   1587a:	4a e0       	ldi	r20, 0x0A	; 10
   1587c:	50 e0       	ldi	r21, 0x00	; 0
   1587e:	86 ec       	ldi	r24, 0xC6	; 198
   15880:	94 e1       	ldi	r25, 0x14	; 20
   15882:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   15886:	d6 01       	movw	r26, r12
   15888:	5a 96       	adiw	r26, 0x1a	; 26
   1588a:	8c 91       	ld	r24, X
   1588c:	81 30       	cpi	r24, 0x01	; 1
   1588e:	09 f4       	brne	.+2      	; 0x15892 <_Z12Publish_Datav+0xf74>
   15890:	f8 c0       	rjmp	.+496    	; 0x15a82 <_Z12Publish_Datav+0x1164>
   15892:	82 30       	cpi	r24, 0x02	; 2
   15894:	09 f0       	breq	.+2      	; 0x15898 <_Z12Publish_Datav+0xf7a>
   15896:	17 c2       	rjmp	.+1070   	; 0x15cc6 <_Z12Publish_Datav+0x13a8>
   15898:	6e 01       	movw	r12, r28
   1589a:	b9 ee       	ldi	r27, 0xE9	; 233
   1589c:	cb 1a       	sub	r12, r27
   1589e:	be ef       	ldi	r27, 0xFE	; 254
   158a0:	db 0a       	sbc	r13, r27
   158a2:	8c ed       	ldi	r24, 0xDC	; 220
   158a4:	f6 01       	movw	r30, r12
   158a6:	11 92       	st	Z+, r1
   158a8:	8a 95       	dec	r24
   158aa:	e9 f7       	brne	.-6      	; 0x158a6 <_Z12Publish_Datav+0xf88>
   158ac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   158b0:	81 30       	cpi	r24, 0x01	; 1
   158b2:	51 f4       	brne	.+20     	; 0x158c8 <_Z12Publish_Datav+0xfaa>
   158b4:	61 e4       	ldi	r22, 0x41	; 65
   158b6:	70 e3       	ldi	r23, 0x30	; 48
   158b8:	86 ec       	ldi	r24, 0xC6	; 198
   158ba:	94 e1       	ldi	r25, 0x14	; 20
   158bc:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   158c0:	86 ec       	ldi	r24, 0xC6	; 198
   158c2:	94 e1       	ldi	r25, 0x14	; 20
   158c4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   158c8:	c7 01       	movw	r24, r14
   158ca:	8b 59       	subi	r24, 0x9B	; 155
   158cc:	9f 4f       	sbci	r25, 0xFF	; 255
   158ce:	cd 50       	subi	r28, 0x0D	; 13
   158d0:	de 4f       	sbci	r29, 0xFE	; 254
   158d2:	99 83       	std	Y+1, r25	; 0x01
   158d4:	88 83       	st	Y, r24
   158d6:	c3 5f       	subi	r28, 0xF3	; 243
   158d8:	d1 40       	sbci	r29, 0x01	; 1
   158da:	ae 01       	movw	r20, r28
   158dc:	4d 50       	subi	r20, 0x0D	; 13
   158de:	5e 4f       	sbci	r21, 0xFE	; 254
   158e0:	6d e3       	ldi	r22, 0x3D	; 61
   158e2:	70 e3       	ldi	r23, 0x30	; 48
   158e4:	c8 01       	movw	r24, r16
   158e6:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   158ea:	8b e1       	ldi	r24, 0x1B	; 27
   158ec:	8e 9d       	mul	r24, r14
   158ee:	f0 01       	movw	r30, r0
   158f0:	8f 9d       	mul	r24, r15
   158f2:	f0 0d       	add	r31, r0
   158f4:	11 24       	eor	r1, r1
   158f6:	e8 51       	subi	r30, 0x18	; 24
   158f8:	f2 4f       	sbci	r31, 0xF2	; 242
   158fa:	82 81       	ldd	r24, Z+2	; 0x02
   158fc:	81 30       	cpi	r24, 0x01	; 1
   158fe:	79 f4       	brne	.+30     	; 0x1591e <_Z12Publish_Datav+0x1000>
   15900:	81 8d       	ldd	r24, Z+25	; 0x19
   15902:	81 11       	cpse	r24, r1
   15904:	0c c0       	rjmp	.+24     	; 0x1591e <_Z12Publish_Datav+0x1000>
   15906:	cd 50       	subi	r28, 0x0D	; 13
   15908:	de 4f       	sbci	r29, 0xFE	; 254
   1590a:	19 82       	std	Y+1, r1	; 0x01
   1590c:	18 82       	st	Y, r1
   1590e:	c3 5f       	subi	r28, 0xF3	; 243
   15910:	d1 40       	sbci	r29, 0x01	; 1
   15912:	ae 01       	movw	r20, r28
   15914:	4d 50       	subi	r20, 0x0D	; 13
   15916:	5e 4f       	sbci	r21, 0xFE	; 254
   15918:	66 e3       	ldi	r22, 0x36	; 54
   1591a:	70 e3       	ldi	r23, 0x30	; 48
   1591c:	0d c0       	rjmp	.+26     	; 0x15938 <_Z12Publish_Datav+0x101a>
   1591e:	81 e0       	ldi	r24, 0x01	; 1
   15920:	90 e0       	ldi	r25, 0x00	; 0
   15922:	cd 50       	subi	r28, 0x0D	; 13
   15924:	de 4f       	sbci	r29, 0xFE	; 254
   15926:	99 83       	std	Y+1, r25	; 0x01
   15928:	88 83       	st	Y, r24
   1592a:	c3 5f       	subi	r28, 0xF3	; 243
   1592c:	d1 40       	sbci	r29, 0x01	; 1
   1592e:	ae 01       	movw	r20, r28
   15930:	4d 50       	subi	r20, 0x0D	; 13
   15932:	5e 4f       	sbci	r21, 0xFE	; 254
   15934:	6f e2       	ldi	r22, 0x2F	; 47
   15936:	70 e3       	ldi	r23, 0x30	; 48
   15938:	c8 01       	movw	r24, r16
   1593a:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1593e:	8e ef       	ldi	r24, 0xFE	; 254
   15940:	87 0d       	add	r24, r7
   15942:	88 30       	cpi	r24, 0x08	; 8
   15944:	08 f4       	brcc	.+2      	; 0x15948 <_Z12Publish_Datav+0x102a>
   15946:	64 c0       	rjmp	.+200    	; 0x15a10 <_Z12Publish_Datav+0x10f2>
   15948:	8b e1       	ldi	r24, 0x1B	; 27
   1594a:	8e 9d       	mul	r24, r14
   1594c:	f0 01       	movw	r30, r0
   1594e:	8f 9d       	mul	r24, r15
   15950:	f0 0d       	add	r31, r0
   15952:	11 24       	eor	r1, r1
   15954:	e8 51       	subi	r30, 0x18	; 24
   15956:	f2 4f       	sbci	r31, 0xF2	; 242
   15958:	82 81       	ldd	r24, Z+2	; 0x02
   1595a:	85 30       	cpi	r24, 0x05	; 5
   1595c:	71 f4       	brne	.+28     	; 0x1597a <_Z12Publish_Datav+0x105c>
   1595e:	cd 50       	subi	r28, 0x0D	; 13
   15960:	de 4f       	sbci	r29, 0xFE	; 254
   15962:	19 82       	std	Y+1, r1	; 0x01
   15964:	18 82       	st	Y, r1
   15966:	c3 5f       	subi	r28, 0xF3	; 243
   15968:	d1 40       	sbci	r29, 0x01	; 1
   1596a:	ae 01       	movw	r20, r28
   1596c:	4d 50       	subi	r20, 0x0D	; 13
   1596e:	5e 4f       	sbci	r21, 0xFE	; 254
   15970:	68 e2       	ldi	r22, 0x28	; 40
   15972:	70 e3       	ldi	r23, 0x30	; 48
   15974:	c8 01       	movw	r24, r16
   15976:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1597a:	8b e1       	ldi	r24, 0x1B	; 27
   1597c:	8e 9d       	mul	r24, r14
   1597e:	f0 01       	movw	r30, r0
   15980:	8f 9d       	mul	r24, r15
   15982:	f0 0d       	add	r31, r0
   15984:	11 24       	eor	r1, r1
   15986:	e8 51       	subi	r30, 0x18	; 24
   15988:	f2 4f       	sbci	r31, 0xF2	; 242
   1598a:	82 81       	ldd	r24, Z+2	; 0x02
   1598c:	84 30       	cpi	r24, 0x04	; 4
   1598e:	81 f4       	brne	.+32     	; 0x159b0 <_Z12Publish_Datav+0x1092>
   15990:	81 e0       	ldi	r24, 0x01	; 1
   15992:	90 e0       	ldi	r25, 0x00	; 0
   15994:	cd 50       	subi	r28, 0x0D	; 13
   15996:	de 4f       	sbci	r29, 0xFE	; 254
   15998:	99 83       	std	Y+1, r25	; 0x01
   1599a:	88 83       	st	Y, r24
   1599c:	c3 5f       	subi	r28, 0xF3	; 243
   1599e:	d1 40       	sbci	r29, 0x01	; 1
   159a0:	ae 01       	movw	r20, r28
   159a2:	4d 50       	subi	r20, 0x0D	; 13
   159a4:	5e 4f       	sbci	r21, 0xFE	; 254
   159a6:	61 e2       	ldi	r22, 0x21	; 33
   159a8:	70 e3       	ldi	r23, 0x30	; 48
   159aa:	c8 01       	movw	r24, r16
   159ac:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   159b0:	f1 e0       	ldi	r31, 0x01	; 1
   159b2:	7f 12       	cpse	r7, r31
   159b4:	2d c0       	rjmp	.+90     	; 0x15a10 <_Z12Publish_Datav+0x10f2>
   159b6:	8b e1       	ldi	r24, 0x1B	; 27
   159b8:	8e 9d       	mul	r24, r14
   159ba:	f0 01       	movw	r30, r0
   159bc:	8f 9d       	mul	r24, r15
   159be:	f0 0d       	add	r31, r0
   159c0:	11 24       	eor	r1, r1
   159c2:	e8 51       	subi	r30, 0x18	; 24
   159c4:	f2 4f       	sbci	r31, 0xF2	; 242
   159c6:	e5 81       	ldd	r30, Z+5	; 0x05
   159c8:	f0 e0       	ldi	r31, 0x00	; 0
   159ca:	e7 5c       	subi	r30, 0xC7	; 199
   159cc:	fb 4e       	sbci	r31, 0xEB	; 235
   159ce:	80 81       	ld	r24, Z
   159d0:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   159d4:	89 2b       	or	r24, r25
   159d6:	61 f0       	breq	.+24     	; 0x159f0 <_Z12Publish_Datav+0x10d2>
   159d8:	cd 50       	subi	r28, 0x0D	; 13
   159da:	de 4f       	sbci	r29, 0xFE	; 254
   159dc:	19 82       	std	Y+1, r1	; 0x01
   159de:	18 82       	st	Y, r1
   159e0:	c3 5f       	subi	r28, 0xF3	; 243
   159e2:	d1 40       	sbci	r29, 0x01	; 1
   159e4:	ae 01       	movw	r20, r28
   159e6:	4d 50       	subi	r20, 0x0D	; 13
   159e8:	5e 4f       	sbci	r21, 0xFE	; 254
   159ea:	6a e1       	ldi	r22, 0x1A	; 26
   159ec:	70 e3       	ldi	r23, 0x30	; 48
   159ee:	0d c0       	rjmp	.+26     	; 0x15a0a <_Z12Publish_Datav+0x10ec>
   159f0:	81 e0       	ldi	r24, 0x01	; 1
   159f2:	90 e0       	ldi	r25, 0x00	; 0
   159f4:	cd 50       	subi	r28, 0x0D	; 13
   159f6:	de 4f       	sbci	r29, 0xFE	; 254
   159f8:	99 83       	std	Y+1, r25	; 0x01
   159fa:	88 83       	st	Y, r24
   159fc:	c3 5f       	subi	r28, 0xF3	; 243
   159fe:	d1 40       	sbci	r29, 0x01	; 1
   15a00:	ae 01       	movw	r20, r28
   15a02:	4d 50       	subi	r20, 0x0D	; 13
   15a04:	5e 4f       	sbci	r21, 0xFE	; 254
   15a06:	63 e1       	ldi	r22, 0x13	; 19
   15a08:	70 e3       	ldi	r23, 0x30	; 48
   15a0a:	c8 01       	movw	r24, r16
   15a0c:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15a10:	4c ed       	ldi	r20, 0xDC	; 220
   15a12:	50 e0       	ldi	r21, 0x00	; 0
   15a14:	b6 01       	movw	r22, r12
   15a16:	c8 01       	movw	r24, r16
   15a18:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15a1c:	02 e6       	ldi	r16, 0x62	; 98
   15a1e:	1f e0       	ldi	r17, 0x0F	; 15
   15a20:	8e e6       	ldi	r24, 0x6E	; 110
   15a22:	68 2e       	mov	r6, r24
   15a24:	9e ec       	ldi	r25, 0xCE	; 206
   15a26:	a9 2e       	mov	r10, r25
   15a28:	93 e1       	ldi	r25, 0x13	; 19
   15a2a:	b9 2e       	mov	r11, r25
   15a2c:	2d e9       	ldi	r18, 0x9D	; 157
   15a2e:	82 2e       	mov	r8, r18
   15a30:	27 e0       	ldi	r18, 0x07	; 7
   15a32:	92 2e       	mov	r9, r18
   15a34:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15a38:	88 23       	and	r24, r24
   15a3a:	01 f1       	breq	.+64     	; 0x15a7c <_Z12Publish_Datav+0x115e>
   15a3c:	d8 01       	movw	r26, r16
   15a3e:	e6 2d       	mov	r30, r6
   15a40:	1d 92       	st	X+, r1
   15a42:	ea 95       	dec	r30
   15a44:	e9 f7       	brne	.-6      	; 0x15a40 <_Z12Publish_Datav+0x1122>
   15a46:	bf 92       	push	r11
   15a48:	af 92       	push	r10
   15a4a:	9f 92       	push	r9
   15a4c:	8f 92       	push	r8
   15a4e:	1f 93       	push	r17
   15a50:	0f 93       	push	r16
   15a52:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   15a56:	b6 01       	movw	r22, r12
   15a58:	82 e6       	ldi	r24, 0x62	; 98
   15a5a:	9f e0       	ldi	r25, 0x0F	; 15
   15a5c:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   15a60:	0f 90       	pop	r0
   15a62:	0f 90       	pop	r0
   15a64:	0f 90       	pop	r0
   15a66:	0f 90       	pop	r0
   15a68:	0f 90       	pop	r0
   15a6a:	0f 90       	pop	r0
   15a6c:	81 11       	cpse	r24, r1
   15a6e:	13 c1       	rjmp	.+550    	; 0x15c96 <_Z12Publish_Datav+0x1378>
   15a70:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15a74:	81 50       	subi	r24, 0x01	; 1
   15a76:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15a7a:	dc cf       	rjmp	.-72     	; 0x15a34 <_Z12Publish_Datav+0x1116>
   15a7c:	8c e3       	ldi	r24, 0x3C	; 60
   15a7e:	90 e0       	ldi	r25, 0x00	; 0
   15a80:	2f c1       	rjmp	.+606    	; 0x15ce0 <_Z12Publish_Datav+0x13c2>
   15a82:	6e 01       	movw	r12, r28
   15a84:	f9 ee       	ldi	r31, 0xE9	; 233
   15a86:	cf 1a       	sub	r12, r31
   15a88:	fe ef       	ldi	r31, 0xFE	; 254
   15a8a:	df 0a       	sbc	r13, r31
   15a8c:	8c ed       	ldi	r24, 0xDC	; 220
   15a8e:	d6 01       	movw	r26, r12
   15a90:	1d 92       	st	X+, r1
   15a92:	8a 95       	dec	r24
   15a94:	e9 f7       	brne	.-6      	; 0x15a90 <_Z12Publish_Datav+0x1172>
   15a96:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15a9a:	81 30       	cpi	r24, 0x01	; 1
   15a9c:	51 f4       	brne	.+20     	; 0x15ab2 <_Z12Publish_Datav+0x1194>
   15a9e:	67 ef       	ldi	r22, 0xF7	; 247
   15aa0:	7f e2       	ldi	r23, 0x2F	; 47
   15aa2:	86 ec       	ldi	r24, 0xC6	; 198
   15aa4:	94 e1       	ldi	r25, 0x14	; 20
   15aa6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15aaa:	86 ec       	ldi	r24, 0xC6	; 198
   15aac:	94 e1       	ldi	r25, 0x14	; 20
   15aae:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   15ab2:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   15ab6:	81 11       	cpse	r24, r1
   15ab8:	4e c0       	rjmp	.+156    	; 0x15b56 <_Z12Publish_Datav+0x1238>
   15aba:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   15abe:	88 23       	and	r24, r24
   15ac0:	09 f4       	brne	.+2      	; 0x15ac4 <_Z12Publish_Datav+0x11a6>
   15ac2:	43 c0       	rjmp	.+134    	; 0x15b4a <_Z12Publish_Datav+0x122c>
   15ac4:	60 90 b6 13 	lds	r6, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   15ac8:	80 90 b7 13 	lds	r8, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   15acc:	90 90 b8 13 	lds	r9, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   15ad0:	a0 90 b9 13 	lds	r10, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   15ad4:	b0 90 ba 13 	lds	r11, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   15ad8:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   15adc:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   15ae0:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   15ae4:	26 2d       	mov	r18, r6
   15ae6:	38 2d       	mov	r19, r8
   15ae8:	49 2d       	mov	r20, r9
   15aea:	5a 2d       	mov	r21, r10
   15aec:	6b 2d       	mov	r22, r11
   15aee:	7b 2f       	mov	r23, r27
   15af0:	8f 2f       	mov	r24, r31
   15af2:	9e 2f       	mov	r25, r30
   15af4:	a2 e0       	ldi	r26, 0x02	; 2
   15af6:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
   15afa:	81 f0       	breq	.+32     	; 0x15b1c <_Z12Publish_Datav+0x11fe>
   15afc:	a4 e0       	ldi	r26, 0x04	; 4
   15afe:	cd 50       	subi	r28, 0x0D	; 13
   15b00:	de 4f       	sbci	r29, 0xFE	; 254
   15b02:	19 82       	std	Y+1, r1	; 0x01
   15b04:	18 82       	st	Y, r1
   15b06:	c3 5f       	subi	r28, 0xF3	; 243
   15b08:	d1 40       	sbci	r29, 0x01	; 1
   15b0a:	0e 94 3e eb 	call	0x1d67c	; 0x1d67c <__cmpdi2_s8>
   15b0e:	a1 f4       	brne	.+40     	; 0x15b38 <_Z12Publish_Datav+0x121a>
   15b10:	ae 01       	movw	r20, r28
   15b12:	4d 50       	subi	r20, 0x0D	; 13
   15b14:	5e 4f       	sbci	r21, 0xFE	; 254
   15b16:	6f ee       	ldi	r22, 0xEF	; 239
   15b18:	7f e2       	ldi	r23, 0x2F	; 47
   15b1a:	13 c0       	rjmp	.+38     	; 0x15b42 <_Z12Publish_Datav+0x1224>
   15b1c:	81 e0       	ldi	r24, 0x01	; 1
   15b1e:	90 e0       	ldi	r25, 0x00	; 0
   15b20:	cd 50       	subi	r28, 0x0D	; 13
   15b22:	de 4f       	sbci	r29, 0xFE	; 254
   15b24:	99 83       	std	Y+1, r25	; 0x01
   15b26:	88 83       	st	Y, r24
   15b28:	c3 5f       	subi	r28, 0xF3	; 243
   15b2a:	d1 40       	sbci	r29, 0x01	; 1
   15b2c:	ae 01       	movw	r20, r28
   15b2e:	4d 50       	subi	r20, 0x0D	; 13
   15b30:	5e 4f       	sbci	r21, 0xFE	; 254
   15b32:	67 ee       	ldi	r22, 0xE7	; 231
   15b34:	7f e2       	ldi	r23, 0x2F	; 47
   15b36:	05 c0       	rjmp	.+10     	; 0x15b42 <_Z12Publish_Datav+0x1224>
   15b38:	ae 01       	movw	r20, r28
   15b3a:	4d 50       	subi	r20, 0x0D	; 13
   15b3c:	5e 4f       	sbci	r21, 0xFE	; 254
   15b3e:	6f ed       	ldi	r22, 0xDF	; 223
   15b40:	7f e2       	ldi	r23, 0x2F	; 47
   15b42:	c8 01       	movw	r24, r16
   15b44:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15b48:	21 c0       	rjmp	.+66     	; 0x15b8c <_Z12Publish_Datav+0x126e>
   15b4a:	8a e0       	ldi	r24, 0x0A	; 10
   15b4c:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   15b50:	89 2b       	or	r24, r25
   15b52:	71 f4       	brne	.+28     	; 0x15b70 <_Z12Publish_Datav+0x1252>
   15b54:	04 c0       	rjmp	.+8      	; 0x15b5e <_Z12Publish_Datav+0x1240>
   15b56:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   15b5a:	81 30       	cpi	r24, 0x01	; 1
   15b5c:	49 f4       	brne	.+18     	; 0x15b70 <_Z12Publish_Datav+0x1252>
   15b5e:	81 e0       	ldi	r24, 0x01	; 1
   15b60:	90 e0       	ldi	r25, 0x00	; 0
   15b62:	cd 50       	subi	r28, 0x0D	; 13
   15b64:	de 4f       	sbci	r29, 0xFE	; 254
   15b66:	99 83       	std	Y+1, r25	; 0x01
   15b68:	88 83       	st	Y, r24
   15b6a:	c3 5f       	subi	r28, 0xF3	; 243
   15b6c:	d1 40       	sbci	r29, 0x01	; 1
   15b6e:	06 c0       	rjmp	.+12     	; 0x15b7c <_Z12Publish_Datav+0x125e>
   15b70:	cd 50       	subi	r28, 0x0D	; 13
   15b72:	de 4f       	sbci	r29, 0xFE	; 254
   15b74:	19 82       	std	Y+1, r1	; 0x01
   15b76:	18 82       	st	Y, r1
   15b78:	c3 5f       	subi	r28, 0xF3	; 243
   15b7a:	d1 40       	sbci	r29, 0x01	; 1
   15b7c:	ae 01       	movw	r20, r28
   15b7e:	4d 50       	subi	r20, 0x0D	; 13
   15b80:	5e 4f       	sbci	r21, 0xFE	; 254
   15b82:	65 e9       	ldi	r22, 0x95	; 149
   15b84:	77 e0       	ldi	r23, 0x07	; 7
   15b86:	c8 01       	movw	r24, r16
   15b88:	0e 94 c8 8b 	call	0x11790	; 0x11790 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15b8c:	cd 50       	subi	r28, 0x0D	; 13
   15b8e:	de 4f       	sbci	r29, 0xFE	; 254
   15b90:	19 82       	std	Y+1, r1	; 0x01
   15b92:	18 82       	st	Y, r1
   15b94:	c3 5f       	subi	r28, 0xF3	; 243
   15b96:	d1 40       	sbci	r29, 0x01	; 1
   15b98:	ae 01       	movw	r20, r28
   15b9a:	4d 50       	subi	r20, 0x0D	; 13
   15b9c:	5e 4f       	sbci	r21, 0xFE	; 254
   15b9e:	68 ed       	ldi	r22, 0xD8	; 216
   15ba0:	7f e2       	ldi	r23, 0x2F	; 47
   15ba2:	c8 01       	movw	r24, r16
   15ba4:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15ba8:	8b e1       	ldi	r24, 0x1B	; 27
   15baa:	8e 9d       	mul	r24, r14
   15bac:	a0 01       	movw	r20, r0
   15bae:	8f 9d       	mul	r24, r15
   15bb0:	50 0d       	add	r21, r0
   15bb2:	11 24       	eor	r1, r1
   15bb4:	fa 01       	movw	r30, r20
   15bb6:	e8 51       	subi	r30, 0x18	; 24
   15bb8:	f2 4f       	sbci	r31, 0xF2	; 242
   15bba:	83 81       	ldd	r24, Z+3	; 0x03
   15bbc:	94 81       	ldd	r25, Z+4	; 0x04
   15bbe:	f7 01       	movw	r30, r14
   15bc0:	eb 59       	subi	r30, 0x9B	; 155
   15bc2:	ff 4f       	sbci	r31, 0xFF	; 255
   15bc4:	5f 01       	movw	r10, r30
   15bc6:	00 97       	sbiw	r24, 0x00	; 0
   15bc8:	01 f1       	breq	.+64     	; 0x15c0a <_Z12Publish_Datav+0x12ec>
   15bca:	6c e3       	ldi	r22, 0x3C	; 60
   15bcc:	70 e0       	ldi	r23, 0x00	; 0
   15bce:	0e 94 b8 ea 	call	0x1d570	; 0x1d570 <__udivmodhi4>
   15bd2:	6f 5f       	subi	r22, 0xFF	; 255
   15bd4:	7f 4f       	sbci	r23, 0xFF	; 255
   15bd6:	cd 50       	subi	r28, 0x0D	; 13
   15bd8:	de 4f       	sbci	r29, 0xFE	; 254
   15bda:	79 83       	std	Y+1, r23	; 0x01
   15bdc:	68 83       	st	Y, r22
   15bde:	c3 5f       	subi	r28, 0xF3	; 243
   15be0:	d1 40       	sbci	r29, 0x01	; 1
   15be2:	ae 01       	movw	r20, r28
   15be4:	4d 50       	subi	r20, 0x0D	; 13
   15be6:	5e 4f       	sbci	r21, 0xFE	; 254
   15be8:	63 ed       	ldi	r22, 0xD3	; 211
   15bea:	7f e2       	ldi	r23, 0x2F	; 47
   15bec:	c8 01       	movw	r24, r16
   15bee:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15bf2:	cd 50       	subi	r28, 0x0D	; 13
   15bf4:	de 4f       	sbci	r29, 0xFE	; 254
   15bf6:	b9 82       	std	Y+1, r11	; 0x01
   15bf8:	a8 82       	st	Y, r10
   15bfa:	c3 5f       	subi	r28, 0xF3	; 243
   15bfc:	d1 40       	sbci	r29, 0x01	; 1
   15bfe:	ae 01       	movw	r20, r28
   15c00:	4d 50       	subi	r20, 0x0D	; 13
   15c02:	5e 4f       	sbci	r21, 0xFE	; 254
   15c04:	6e ec       	ldi	r22, 0xCE	; 206
   15c06:	7f e2       	ldi	r23, 0x2F	; 47
   15c08:	12 c0       	rjmp	.+36     	; 0x15c2e <_Z12Publish_Datav+0x1310>
   15c0a:	45 51       	subi	r20, 0x15	; 21
   15c0c:	52 4f       	sbci	r21, 0xF2	; 242
   15c0e:	69 ec       	ldi	r22, 0xC9	; 201
   15c10:	7f e2       	ldi	r23, 0x2F	; 47
   15c12:	c8 01       	movw	r24, r16
   15c14:	0e 94 fa 8a 	call	0x115f4	; 0x115f4 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15c18:	cd 50       	subi	r28, 0x0D	; 13
   15c1a:	de 4f       	sbci	r29, 0xFE	; 254
   15c1c:	b9 82       	std	Y+1, r11	; 0x01
   15c1e:	a8 82       	st	Y, r10
   15c20:	c3 5f       	subi	r28, 0xF3	; 243
   15c22:	d1 40       	sbci	r29, 0x01	; 1
   15c24:	ae 01       	movw	r20, r28
   15c26:	4d 50       	subi	r20, 0x0D	; 13
   15c28:	5e 4f       	sbci	r21, 0xFE	; 254
   15c2a:	64 ec       	ldi	r22, 0xC4	; 196
   15c2c:	7f e2       	ldi	r23, 0x2F	; 47
   15c2e:	c8 01       	movw	r24, r16
   15c30:	0e 94 32 8b 	call	0x11664	; 0x11664 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15c34:	4c ed       	ldi	r20, 0xDC	; 220
   15c36:	50 e0       	ldi	r21, 0x00	; 0
   15c38:	b6 01       	movw	r22, r12
   15c3a:	c8 01       	movw	r24, r16
   15c3c:	0e 94 04 93 	call	0x12608	; 0x12608 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15c40:	b6 01       	movw	r22, r12
   15c42:	86 ec       	ldi	r24, 0xC6	; 198
   15c44:	94 e1       	ldi	r25, 0x14	; 20
   15c46:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   15c4a:	e2 e6       	ldi	r30, 0x62	; 98
   15c4c:	ff e0       	ldi	r31, 0x0F	; 15
   15c4e:	8e e6       	ldi	r24, 0x6E	; 110
   15c50:	df 01       	movw	r26, r30
   15c52:	1d 92       	st	X+, r1
   15c54:	8a 95       	dec	r24
   15c56:	e9 f7       	brne	.-6      	; 0x15c52 <_Z12Publish_Datav+0x1334>
   15c58:	8e ec       	ldi	r24, 0xCE	; 206
   15c5a:	93 e1       	ldi	r25, 0x13	; 19
   15c5c:	9f 93       	push	r25
   15c5e:	8f 93       	push	r24
   15c60:	8b e3       	ldi	r24, 0x3B	; 59
   15c62:	97 e0       	ldi	r25, 0x07	; 7
   15c64:	9f 93       	push	r25
   15c66:	8f 93       	push	r24
   15c68:	ff 93       	push	r31
   15c6a:	ef 93       	push	r30
   15c6c:	0e 94 60 ed 	call	0x1dac0	; 0x1dac0 <sprintf>
   15c70:	0f 90       	pop	r0
   15c72:	0f 90       	pop	r0
   15c74:	0f 90       	pop	r0
   15c76:	0f 90       	pop	r0
   15c78:	0f 90       	pop	r0
   15c7a:	0f 90       	pop	r0
   15c7c:	0c e3       	ldi	r16, 0x3C	; 60
   15c7e:	10 e0       	ldi	r17, 0x00	; 0
   15c80:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15c84:	88 23       	and	r24, r24
   15c86:	81 f1       	breq	.+96     	; 0x15ce8 <_Z12Publish_Datav+0x13ca>
   15c88:	b6 01       	movw	r22, r12
   15c8a:	82 e6       	ldi	r24, 0x62	; 98
   15c8c:	9f e0       	ldi	r25, 0x0F	; 15
   15c8e:	0e 94 40 6a 	call	0xd480	; 0xd480 <_Z12MQTT_PublishPhS_>
   15c92:	88 23       	and	r24, r24
   15c94:	71 f0       	breq	.+28     	; 0x15cb2 <_Z12Publish_Datav+0x1394>
   15c96:	8b e1       	ldi	r24, 0x1B	; 27
   15c98:	8e 9d       	mul	r24, r14
   15c9a:	f0 01       	movw	r30, r0
   15c9c:	8f 9d       	mul	r24, r15
   15c9e:	f0 0d       	add	r31, r0
   15ca0:	11 24       	eor	r1, r1
   15ca2:	e8 51       	subi	r30, 0x18	; 24
   15ca4:	f2 4f       	sbci	r31, 0xF2	; 242
   15ca6:	12 8e       	std	Z+26, r1	; 0x1a
   15ca8:	81 e0       	ldi	r24, 0x01	; 1
   15caa:	87 0d       	add	r24, r7
   15cac:	0e 94 89 7a 	call	0xf512	; 0xf512 <_Z21Exra_Plot_Data_EEPROMh>
   15cb0:	1b c0       	rjmp	.+54     	; 0x15ce8 <_Z12Publish_Datav+0x13ca>
   15cb2:	10 93 e1 0d 	sts	0x0DE1, r17	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15cb6:	00 93 e0 0d 	sts	0x0DE0, r16	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15cba:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15cbe:	81 50       	subi	r24, 0x01	; 1
   15cc0:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15cc4:	dd cf       	rjmp	.-70     	; 0x15c80 <_Z12Publish_Datav+0x1362>
   15cc6:	bf ef       	ldi	r27, 0xFF	; 255
   15cc8:	eb 1a       	sub	r14, r27
   15cca:	fb 0a       	sbc	r15, r27
   15ccc:	eb e1       	ldi	r30, 0x1B	; 27
   15cce:	ce 0e       	add	r12, r30
   15cd0:	d1 1c       	adc	r13, r1
   15cd2:	fe e0       	ldi	r31, 0x0E	; 14
   15cd4:	ef 16       	cp	r14, r31
   15cd6:	f1 04       	cpc	r15, r1
   15cd8:	09 f0       	breq	.+2      	; 0x15cdc <_Z12Publish_Datav+0x13be>
   15cda:	c5 cd       	rjmp	.-1142   	; 0x15866 <_Z12Publish_Datav+0xf48>
   15cdc:	05 c0       	rjmp	.+10     	; 0x15ce8 <_Z12Publish_Datav+0x13ca>
   15cde:	01 97       	sbiw	r24, 0x01	; 1
   15ce0:	90 93 e1 0d 	sts	0x0DE1, r25	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15ce4:	80 93 e0 0d 	sts	0x0DE0, r24	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15ce8:	cc 50       	subi	r28, 0x0C	; 12
   15cea:	de 4f       	sbci	r29, 0xFE	; 254
   15cec:	0f b6       	in	r0, 0x3f	; 63
   15cee:	f8 94       	cli
   15cf0:	de bf       	out	0x3e, r29	; 62
   15cf2:	0f be       	out	0x3f, r0	; 63
   15cf4:	cd bf       	out	0x3d, r28	; 61
   15cf6:	df 91       	pop	r29
   15cf8:	cf 91       	pop	r28
   15cfa:	1f 91       	pop	r17
   15cfc:	0f 91       	pop	r16
   15cfe:	ff 90       	pop	r15
   15d00:	ef 90       	pop	r14
   15d02:	df 90       	pop	r13
   15d04:	cf 90       	pop	r12
   15d06:	bf 90       	pop	r11
   15d08:	af 90       	pop	r10
   15d0a:	9f 90       	pop	r9
   15d0c:	8f 90       	pop	r8
   15d0e:	7f 90       	pop	r7
   15d10:	6f 90       	pop	r6
   15d12:	08 95       	ret

00015d14 <_Z22Valve_Grouping_Handlerh>:
   15d14:	2f 92       	push	r2
   15d16:	3f 92       	push	r3
   15d18:	4f 92       	push	r4
   15d1a:	5f 92       	push	r5
   15d1c:	6f 92       	push	r6
   15d1e:	7f 92       	push	r7
   15d20:	8f 92       	push	r8
   15d22:	9f 92       	push	r9
   15d24:	af 92       	push	r10
   15d26:	bf 92       	push	r11
   15d28:	cf 92       	push	r12
   15d2a:	df 92       	push	r13
   15d2c:	ef 92       	push	r14
   15d2e:	ff 92       	push	r15
   15d30:	0f 93       	push	r16
   15d32:	1f 93       	push	r17
   15d34:	cf 93       	push	r28
   15d36:	df 93       	push	r29
   15d38:	cd b7       	in	r28, 0x3d	; 61
   15d3a:	de b7       	in	r29, 0x3e	; 62
   15d3c:	e8 97       	sbiw	r28, 0x38	; 56
   15d3e:	0f b6       	in	r0, 0x3f	; 63
   15d40:	f8 94       	cli
   15d42:	de bf       	out	0x3e, r29	; 62
   15d44:	0f be       	out	0x3f, r0	; 63
   15d46:	cd bf       	out	0x3d, r28	; 61
   15d48:	58 2e       	mov	r5, r24
   15d4a:	88 e0       	ldi	r24, 0x08	; 8
   15d4c:	eb e6       	ldi	r30, 0x6B	; 107
   15d4e:	f2 e0       	ldi	r31, 0x02	; 2
   15d50:	de 01       	movw	r26, r28
   15d52:	9b 96       	adiw	r26, 0x2b	; 43
   15d54:	01 90       	ld	r0, Z+
   15d56:	0d 92       	st	X+, r0
   15d58:	8a 95       	dec	r24
   15d5a:	e1 f7       	brne	.-8      	; 0x15d54 <_Z22Valve_Grouping_Handlerh+0x40>
   15d5c:	9e 01       	movw	r18, r28
   15d5e:	2f 5f       	subi	r18, 0xFF	; 255
   15d60:	3f 4f       	sbci	r19, 0xFF	; 255
   15d62:	79 01       	movw	r14, r18
   15d64:	8a e2       	ldi	r24, 0x2A	; 42
   15d66:	d9 01       	movw	r26, r18
   15d68:	1d 92       	st	X+, r1
   15d6a:	8a 95       	dec	r24
   15d6c:	e9 f7       	brne	.-6      	; 0x15d68 <_Z22Valve_Grouping_Handlerh+0x54>
   15d6e:	2e e4       	ldi	r18, 0x4E	; 78
   15d70:	82 2e       	mov	r8, r18
   15d72:	2d e0       	ldi	r18, 0x0D	; 13
   15d74:	92 2e       	mov	r9, r18
   15d76:	42 ea       	ldi	r20, 0xA2	; 162
   15d78:	5d e0       	ldi	r21, 0x0D	; 13
   15d7a:	64 01       	movw	r12, r8
   15d7c:	10 e0       	ldi	r17, 0x00	; 0
   15d7e:	f6 01       	movw	r30, r12
   15d80:	80 81       	ld	r24, Z
   15d82:	81 50       	subi	r24, 0x01	; 1
   15d84:	8e 30       	cpi	r24, 0x0E	; 14
   15d86:	d8 f5       	brcc	.+118    	; 0x15dfe <_Z22Valve_Grouping_Handlerh+0xea>
   15d88:	d6 01       	movw	r26, r12
   15d8a:	25 e0       	ldi	r18, 0x05	; 5
   15d8c:	89 81       	ldd	r24, Y+1	; 0x01
   15d8e:	88 23       	and	r24, r24
   15d90:	f9 f0       	breq	.+62     	; 0x15dd0 <_Z22Valve_Grouping_Handlerh+0xbc>
   15d92:	00 e0       	ldi	r16, 0x00	; 0
   15d94:	30 e0       	ldi	r19, 0x00	; 0
   15d96:	83 2f       	mov	r24, r19
   15d98:	90 e0       	ldi	r25, 0x00	; 0
   15d9a:	b7 01       	movw	r22, r14
   15d9c:	68 0f       	add	r22, r24
   15d9e:	79 1f       	adc	r23, r25
   15da0:	fb 01       	movw	r30, r22
   15da2:	70 81       	ld	r23, Z
   15da4:	77 23       	and	r23, r23
   15da6:	d1 f0       	breq	.+52     	; 0x15ddc <_Z22Valve_Grouping_Handlerh+0xc8>
   15da8:	11 96       	adiw	r26, 0x01	; 1
   15daa:	6c 91       	ld	r22, X
   15dac:	11 97       	sbiw	r26, 0x01	; 1
   15dae:	66 23       	and	r22, r22
   15db0:	69 f0       	breq	.+26     	; 0x15dcc <_Z22Valve_Grouping_Handlerh+0xb8>
   15db2:	76 17       	cp	r23, r22
   15db4:	99 f0       	breq	.+38     	; 0x15ddc <_Z22Valve_Grouping_Handlerh+0xc8>
   15db6:	62 e0       	ldi	r22, 0x02	; 2
   15db8:	70 e0       	ldi	r23, 0x00	; 0
   15dba:	6c 0f       	add	r22, r28
   15dbc:	7d 1f       	adc	r23, r29
   15dbe:	86 0f       	add	r24, r22
   15dc0:	97 1f       	adc	r25, r23
   15dc2:	fc 01       	movw	r30, r24
   15dc4:	80 81       	ld	r24, Z
   15dc6:	81 11       	cpse	r24, r1
   15dc8:	01 c0       	rjmp	.+2      	; 0x15dcc <_Z22Valve_Grouping_Handlerh+0xb8>
   15dca:	01 e0       	ldi	r16, 0x01	; 1
   15dcc:	3f 5f       	subi	r19, 0xFF	; 255
   15dce:	e3 cf       	rjmp	.-58     	; 0x15d96 <_Z22Valve_Grouping_Handlerh+0x82>
   15dd0:	11 96       	adiw	r26, 0x01	; 1
   15dd2:	8c 91       	ld	r24, X
   15dd4:	11 97       	sbiw	r26, 0x01	; 1
   15dd6:	81 11       	cpse	r24, r1
   15dd8:	03 c0       	rjmp	.+6      	; 0x15de0 <_Z22Valve_Grouping_Handlerh+0xcc>
   15dda:	0d c0       	rjmp	.+26     	; 0x15df6 <_Z22Valve_Grouping_Handlerh+0xe2>
   15ddc:	00 23       	and	r16, r16
   15dde:	59 f0       	breq	.+22     	; 0x15df6 <_Z22Valve_Grouping_Handlerh+0xe2>
   15de0:	11 96       	adiw	r26, 0x01	; 1
   15de2:	8c 91       	ld	r24, X
   15de4:	11 97       	sbiw	r26, 0x01	; 1
   15de6:	83 31       	cpi	r24, 0x13	; 19
   15de8:	30 f4       	brcc	.+12     	; 0x15df6 <_Z22Valve_Grouping_Handlerh+0xe2>
   15dea:	b7 01       	movw	r22, r14
   15dec:	61 0f       	add	r22, r17
   15dee:	71 1d       	adc	r23, r1
   15df0:	fb 01       	movw	r30, r22
   15df2:	80 83       	st	Z, r24
   15df4:	1f 5f       	subi	r17, 0xFF	; 255
   15df6:	21 50       	subi	r18, 0x01	; 1
   15df8:	11 96       	adiw	r26, 0x01	; 1
   15dfa:	21 11       	cpse	r18, r1
   15dfc:	c7 cf       	rjmp	.-114    	; 0x15d8c <_Z22Valve_Grouping_Handlerh+0x78>
   15dfe:	f6 e0       	ldi	r31, 0x06	; 6
   15e00:	cf 0e       	add	r12, r31
   15e02:	d1 1c       	adc	r13, r1
   15e04:	4c 15       	cp	r20, r12
   15e06:	5d 05       	cpc	r21, r13
   15e08:	09 f0       	breq	.+2      	; 0x15e0c <_Z22Valve_Grouping_Handlerh+0xf8>
   15e0a:	b9 cf       	rjmp	.-142    	; 0x15d7e <_Z22Valve_Grouping_Handlerh+0x6a>
   15e0c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15e10:	81 30       	cpi	r24, 0x01	; 1
   15e12:	51 f4       	brne	.+20     	; 0x15e28 <_Z22Valve_Grouping_Handlerh+0x114>
   15e14:	62 ef       	ldi	r22, 0xF2	; 242
   15e16:	7f e3       	ldi	r23, 0x3F	; 63
   15e18:	86 ec       	ldi	r24, 0xC6	; 198
   15e1a:	94 e1       	ldi	r25, 0x14	; 20
   15e1c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15e20:	86 ec       	ldi	r24, 0xC6	; 198
   15e22:	94 e1       	ldi	r25, 0x14	; 20
   15e24:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   15e28:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15e2c:	81 30       	cpi	r24, 0x01	; 1
   15e2e:	e9 f4       	brne	.+58     	; 0x15e6a <_Z22Valve_Grouping_Handlerh+0x156>
   15e30:	00 e0       	ldi	r16, 0x00	; 0
   15e32:	67 01       	movw	r12, r14
   15e34:	c0 0e       	add	r12, r16
   15e36:	d1 1c       	adc	r13, r1
   15e38:	d6 01       	movw	r26, r12
   15e3a:	8c 91       	ld	r24, X
   15e3c:	88 23       	and	r24, r24
   15e3e:	a9 f0       	breq	.+42     	; 0x15e6a <_Z22Valve_Grouping_Handlerh+0x156>
   15e40:	60 ee       	ldi	r22, 0xE0	; 224
   15e42:	7f e3       	ldi	r23, 0x3F	; 63
   15e44:	86 ec       	ldi	r24, 0xC6	; 198
   15e46:	94 e1       	ldi	r25, 0x14	; 20
   15e48:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15e4c:	f6 01       	movw	r30, r12
   15e4e:	60 81       	ld	r22, Z
   15e50:	70 e0       	ldi	r23, 0x00	; 0
   15e52:	4a e0       	ldi	r20, 0x0A	; 10
   15e54:	50 e0       	ldi	r21, 0x00	; 0
   15e56:	86 ec       	ldi	r24, 0xC6	; 198
   15e58:	94 e1       	ldi	r25, 0x14	; 20
   15e5a:	0e 94 a4 d5 	call	0x1ab48	; 0x1ab48 <_ZN5Print5printEii>
   15e5e:	86 ec       	ldi	r24, 0xC6	; 198
   15e60:	94 e1       	ldi	r25, 0x14	; 20
   15e62:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   15e66:	0f 5f       	subi	r16, 0xFF	; 255
   15e68:	e4 cf       	rjmp	.-56     	; 0x15e32 <_Z22Valve_Grouping_Handlerh+0x11e>
   15e6a:	f3 e0       	ldi	r31, 0x03	; 3
   15e6c:	5f 12       	cpse	r5, r31
   15e6e:	81 c0       	rjmp	.+258    	; 0x15f72 <_Z22Valve_Grouping_Handlerh+0x25e>
   15e70:	98 ee       	ldi	r25, 0xE8	; 232
   15e72:	c9 2e       	mov	r12, r25
   15e74:	9d e0       	ldi	r25, 0x0D	; 13
   15e76:	d9 2e       	mov	r13, r25
   15e78:	42 e6       	ldi	r20, 0x62	; 98
   15e7a:	5f e0       	ldi	r21, 0x0F	; 15
   15e7c:	d6 01       	movw	r26, r12
   15e7e:	11 96       	adiw	r26, 0x01	; 1
   15e80:	8c 91       	ld	r24, X
   15e82:	11 97       	sbiw	r26, 0x01	; 1
   15e84:	85 56       	subi	r24, 0x65	; 101
   15e86:	8e 30       	cpi	r24, 0x0E	; 14
   15e88:	d0 f5       	brcc	.+116    	; 0x15efe <_Z22Valve_Grouping_Handlerh+0x1ea>
   15e8a:	25 e0       	ldi	r18, 0x05	; 5
   15e8c:	89 81       	ldd	r24, Y+1	; 0x01
   15e8e:	88 23       	and	r24, r24
   15e90:	f9 f0       	breq	.+62     	; 0x15ed0 <_Z22Valve_Grouping_Handlerh+0x1bc>
   15e92:	00 e0       	ldi	r16, 0x00	; 0
   15e94:	30 e0       	ldi	r19, 0x00	; 0
   15e96:	83 2f       	mov	r24, r19
   15e98:	90 e0       	ldi	r25, 0x00	; 0
   15e9a:	b7 01       	movw	r22, r14
   15e9c:	68 0f       	add	r22, r24
   15e9e:	79 1f       	adc	r23, r25
   15ea0:	fb 01       	movw	r30, r22
   15ea2:	70 81       	ld	r23, Z
   15ea4:	77 23       	and	r23, r23
   15ea6:	d1 f0       	breq	.+52     	; 0x15edc <_Z22Valve_Grouping_Handlerh+0x1c8>
   15ea8:	15 96       	adiw	r26, 0x05	; 5
   15eaa:	6c 91       	ld	r22, X
   15eac:	15 97       	sbiw	r26, 0x05	; 5
   15eae:	66 23       	and	r22, r22
   15eb0:	69 f0       	breq	.+26     	; 0x15ecc <_Z22Valve_Grouping_Handlerh+0x1b8>
   15eb2:	76 17       	cp	r23, r22
   15eb4:	99 f0       	breq	.+38     	; 0x15edc <_Z22Valve_Grouping_Handlerh+0x1c8>
   15eb6:	62 e0       	ldi	r22, 0x02	; 2
   15eb8:	70 e0       	ldi	r23, 0x00	; 0
   15eba:	6c 0f       	add	r22, r28
   15ebc:	7d 1f       	adc	r23, r29
   15ebe:	86 0f       	add	r24, r22
   15ec0:	97 1f       	adc	r25, r23
   15ec2:	fc 01       	movw	r30, r24
   15ec4:	80 81       	ld	r24, Z
   15ec6:	81 11       	cpse	r24, r1
   15ec8:	01 c0       	rjmp	.+2      	; 0x15ecc <_Z22Valve_Grouping_Handlerh+0x1b8>
   15eca:	01 e0       	ldi	r16, 0x01	; 1
   15ecc:	3f 5f       	subi	r19, 0xFF	; 255
   15ece:	e3 cf       	rjmp	.-58     	; 0x15e96 <_Z22Valve_Grouping_Handlerh+0x182>
   15ed0:	15 96       	adiw	r26, 0x05	; 5
   15ed2:	8c 91       	ld	r24, X
   15ed4:	15 97       	sbiw	r26, 0x05	; 5
   15ed6:	81 11       	cpse	r24, r1
   15ed8:	03 c0       	rjmp	.+6      	; 0x15ee0 <_Z22Valve_Grouping_Handlerh+0x1cc>
   15eda:	0d c0       	rjmp	.+26     	; 0x15ef6 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15edc:	00 23       	and	r16, r16
   15ede:	59 f0       	breq	.+22     	; 0x15ef6 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15ee0:	15 96       	adiw	r26, 0x05	; 5
   15ee2:	8c 91       	ld	r24, X
   15ee4:	15 97       	sbiw	r26, 0x05	; 5
   15ee6:	83 31       	cpi	r24, 0x13	; 19
   15ee8:	30 f4       	brcc	.+12     	; 0x15ef6 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15eea:	b7 01       	movw	r22, r14
   15eec:	61 0f       	add	r22, r17
   15eee:	71 1d       	adc	r23, r1
   15ef0:	fb 01       	movw	r30, r22
   15ef2:	80 83       	st	Z, r24
   15ef4:	1f 5f       	subi	r17, 0xFF	; 255
   15ef6:	21 50       	subi	r18, 0x01	; 1
   15ef8:	11 96       	adiw	r26, 0x01	; 1
   15efa:	21 11       	cpse	r18, r1
   15efc:	c7 cf       	rjmp	.-114    	; 0x15e8c <_Z22Valve_Grouping_Handlerh+0x178>
   15efe:	fb e1       	ldi	r31, 0x1B	; 27
   15f00:	cf 0e       	add	r12, r31
   15f02:	d1 1c       	adc	r13, r1
   15f04:	4c 15       	cp	r20, r12
   15f06:	5d 05       	cpc	r21, r13
   15f08:	09 f0       	breq	.+2      	; 0x15f0c <_Z22Valve_Grouping_Handlerh+0x1f8>
   15f0a:	b8 cf       	rjmp	.-144    	; 0x15e7c <_Z22Valve_Grouping_Handlerh+0x168>
   15f0c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15f10:	81 30       	cpi	r24, 0x01	; 1
   15f12:	51 f4       	brne	.+20     	; 0x15f28 <_Z22Valve_Grouping_Handlerh+0x214>
   15f14:	6f ec       	ldi	r22, 0xCF	; 207
   15f16:	7f e3       	ldi	r23, 0x3F	; 63
   15f18:	86 ec       	ldi	r24, 0xC6	; 198
   15f1a:	94 e1       	ldi	r25, 0x14	; 20
   15f1c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15f20:	86 ec       	ldi	r24, 0xC6	; 198
   15f22:	94 e1       	ldi	r25, 0x14	; 20
   15f24:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   15f28:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15f2c:	81 30       	cpi	r24, 0x01	; 1
   15f2e:	91 f5       	brne	.+100    	; 0x15f94 <_Z22Valve_Grouping_Handlerh+0x280>
   15f30:	10 e0       	ldi	r17, 0x00	; 0
   15f32:	67 01       	movw	r12, r14
   15f34:	c1 0e       	add	r12, r17
   15f36:	d1 1c       	adc	r13, r1
   15f38:	d6 01       	movw	r26, r12
   15f3a:	8c 91       	ld	r24, X
   15f3c:	88 23       	and	r24, r24
   15f3e:	e1 f0       	breq	.+56     	; 0x15f78 <_Z22Valve_Grouping_Handlerh+0x264>
   15f40:	6d eb       	ldi	r22, 0xBD	; 189
   15f42:	7f e3       	ldi	r23, 0x3F	; 63
   15f44:	86 ec       	ldi	r24, 0xC6	; 198
   15f46:	94 e1       	ldi	r25, 0x14	; 20
   15f48:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15f4c:	f6 01       	movw	r30, r12
   15f4e:	60 81       	ld	r22, Z
   15f50:	70 e0       	ldi	r23, 0x00	; 0
   15f52:	4a e0       	ldi	r20, 0x0A	; 10
   15f54:	50 e0       	ldi	r21, 0x00	; 0
   15f56:	86 ec       	ldi	r24, 0xC6	; 198
   15f58:	94 e1       	ldi	r25, 0x14	; 20
   15f5a:	0e 94 a4 d5 	call	0x1ab48	; 0x1ab48 <_ZN5Print5printEii>
   15f5e:	86 ec       	ldi	r24, 0xC6	; 198
   15f60:	94 e1       	ldi	r25, 0x14	; 20
   15f62:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   15f66:	86 ec       	ldi	r24, 0xC6	; 198
   15f68:	94 e1       	ldi	r25, 0x14	; 20
   15f6a:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   15f6e:	1f 5f       	subi	r17, 0xFF	; 255
   15f70:	e0 cf       	rjmp	.-64     	; 0x15f32 <_Z22Valve_Grouping_Handlerh+0x21e>
   15f72:	55 e0       	ldi	r21, 0x05	; 5
   15f74:	55 12       	cpse	r5, r21
   15f76:	9c c1       	rjmp	.+824    	; 0x162b0 <_Z22Valve_Grouping_Handlerh+0x59c>
   15f78:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15f7c:	81 30       	cpi	r24, 0x01	; 1
   15f7e:	51 f4       	brne	.+20     	; 0x15f94 <_Z22Valve_Grouping_Handlerh+0x280>
   15f80:	62 e9       	ldi	r22, 0x92	; 146
   15f82:	7f e3       	ldi	r23, 0x3F	; 63
   15f84:	86 ec       	ldi	r24, 0xC6	; 198
   15f86:	94 e1       	ldi	r25, 0x14	; 20
   15f88:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   15f8c:	86 ec       	ldi	r24, 0xC6	; 198
   15f8e:	94 e1       	ldi	r25, 0x14	; 20
   15f90:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   15f94:	05 e1       	ldi	r16, 0x15	; 21
   15f96:	1c e0       	ldi	r17, 0x0C	; 12
   15f98:	b4 e0       	ldi	r27, 0x04	; 4
   15f9a:	ab 2e       	mov	r10, r27
   15f9c:	b1 2c       	mov	r11, r1
   15f9e:	c1 2c       	mov	r12, r1
   15fa0:	d1 2c       	mov	r13, r1
   15fa2:	8d e0       	ldi	r24, 0x0D	; 13
   15fa4:	28 2e       	mov	r2, r24
   15fa6:	d8 01       	movw	r26, r16
   15fa8:	8c 91       	ld	r24, X
   15faa:	88 23       	and	r24, r24
   15fac:	21 f1       	breq	.+72     	; 0x15ff6 <_Z22Valve_Grouping_Handlerh+0x2e2>
   15fae:	31 2c       	mov	r3, r1
   15fb0:	40 e0       	ldi	r20, 0x00	; 0
   15fb2:	39 c0       	rjmp	.+114    	; 0x16026 <_Z22Valve_Grouping_Handlerh+0x312>
   15fb4:	9e 01       	movw	r18, r28
   15fb6:	25 5d       	subi	r18, 0xD5	; 213
   15fb8:	3f 4f       	sbci	r19, 0xFF	; 255
   15fba:	3c ab       	std	Y+52, r19	; 0x34
   15fbc:	2b ab       	std	Y+51, r18	; 0x33
   15fbe:	77 24       	eor	r7, r7
   15fc0:	73 94       	inc	r7
   15fc2:	a6 01       	movw	r20, r12
   15fc4:	4f 5f       	subi	r20, 0xFF	; 255
   15fc6:	5f 4f       	sbci	r21, 0xFF	; 255
   15fc8:	5e ab       	std	Y+54, r21	; 0x36
   15fca:	4d ab       	std	Y+53, r20	; 0x35
   15fcc:	2c 9c       	mul	r2, r12
   15fce:	c0 01       	movw	r24, r0
   15fd0:	2d 9c       	mul	r2, r13
   15fd2:	90 0d       	add	r25, r0
   15fd4:	11 24       	eor	r1, r1
   15fd6:	bc 01       	movw	r22, r24
   15fd8:	6b 5e       	subi	r22, 0xEB	; 235
   15fda:	73 4f       	sbci	r23, 0xF3	; 243
   15fdc:	78 af       	std	Y+56, r23	; 0x38
   15fde:	6f ab       	std	Y+55, r22	; 0x37
   15fe0:	ab a9       	ldd	r26, Y+51	; 0x33
   15fe2:	bc a9       	ldd	r27, Y+52	; 0x34
   15fe4:	8d 91       	ld	r24, X+
   15fe6:	bc ab       	std	Y+52, r27	; 0x34
   15fe8:	ab ab       	std	Y+51, r26	; 0x33
   15fea:	83 21       	and	r24, r3
   15fec:	49 f5       	brne	.+82     	; 0x16040 <_Z22Valve_Grouping_Handlerh+0x32c>
   15fee:	73 94       	inc	r7
   15ff0:	b4 e0       	ldi	r27, 0x04	; 4
   15ff2:	7b 12       	cpse	r7, r27
   15ff4:	f5 cf       	rjmp	.-22     	; 0x15fe0 <_Z22Valve_Grouping_Handlerh+0x2cc>
   15ff6:	bf ef       	ldi	r27, 0xFF	; 255
   15ff8:	cb 1a       	sub	r12, r27
   15ffa:	db 0a       	sbc	r13, r27
   15ffc:	03 5f       	subi	r16, 0xF3	; 243
   15ffe:	1f 4f       	sbci	r17, 0xFF	; 255
   16000:	e3 e0       	ldi	r30, 0x03	; 3
   16002:	ae 0e       	add	r10, r30
   16004:	b1 1c       	adc	r11, r1
   16006:	f5 e0       	ldi	r31, 0x05	; 5
   16008:	cf 16       	cp	r12, r31
   1600a:	d1 04       	cpc	r13, r1
   1600c:	61 f6       	brne	.-104    	; 0x15fa6 <_Z22Valve_Grouping_Handlerh+0x292>
   1600e:	03 c1       	rjmp	.+518    	; 0x16216 <_Z22Valve_Grouping_Handlerh+0x502>
   16010:	82 17       	cp	r24, r18
   16012:	93 07       	cpc	r25, r19
   16014:	11 f4       	brne	.+4      	; 0x1601a <_Z22Valve_Grouping_Handlerh+0x306>
   16016:	50 81       	ld	r21, Z
   16018:	35 2a       	or	r3, r21
   1601a:	01 96       	adiw	r24, 0x01	; 1
   1601c:	31 96       	adiw	r30, 0x01	; 1
   1601e:	a8 16       	cp	r10, r24
   16020:	b9 06       	cpc	r11, r25
   16022:	b1 f7       	brne	.-20     	; 0x16010 <_Z22Valve_Grouping_Handlerh+0x2fc>
   16024:	4f 5f       	subi	r20, 0xFF	; 255
   16026:	f7 01       	movw	r30, r14
   16028:	e4 0f       	add	r30, r20
   1602a:	f1 1d       	adc	r31, r1
   1602c:	20 81       	ld	r18, Z
   1602e:	22 23       	and	r18, r18
   16030:	09 f4       	brne	.+2      	; 0x16034 <_Z22Valve_Grouping_Handlerh+0x320>
   16032:	c0 cf       	rjmp	.-128    	; 0x15fb4 <_Z22Valve_Grouping_Handlerh+0x2a0>
   16034:	c5 01       	movw	r24, r10
   16036:	03 97       	sbiw	r24, 0x03	; 3
   16038:	fe 01       	movw	r30, r28
   1603a:	bb 96       	adiw	r30, 0x2b	; 43
   1603c:	30 e0       	ldi	r19, 0x00	; 0
   1603e:	e8 cf       	rjmp	.-48     	; 0x16010 <_Z22Valve_Grouping_Handlerh+0x2fc>
   16040:	61 2c       	mov	r6, r1
   16042:	63 94       	inc	r6
   16044:	e5 ef       	ldi	r30, 0xF5	; 245
   16046:	f3 e1       	ldi	r31, 0x13	; 19
   16048:	24 e1       	ldi	r18, 0x14	; 20
   1604a:	11 92       	st	Z+, r1
   1604c:	2a 95       	dec	r18
   1604e:	e9 f7       	brne	.-6      	; 0x1604a <_Z22Valve_Grouping_Handlerh+0x336>
   16050:	d8 01       	movw	r26, r16
   16052:	11 96       	adiw	r26, 0x01	; 1
   16054:	8c 91       	ld	r24, X
   16056:	11 97       	sbiw	r26, 0x01	; 1
   16058:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   1605c:	12 96       	adiw	r26, 0x02	; 2
   1605e:	8c 91       	ld	r24, X
   16060:	12 97       	sbiw	r26, 0x02	; 2
   16062:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   16066:	13 96       	adiw	r26, 0x03	; 3
   16068:	8c 91       	ld	r24, X
   1606a:	13 97       	sbiw	r26, 0x03	; 3
   1606c:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   16070:	14 96       	adiw	r26, 0x04	; 4
   16072:	8c 91       	ld	r24, X
   16074:	14 97       	sbiw	r26, 0x04	; 4
   16076:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   1607a:	15 96       	adiw	r26, 0x05	; 5
   1607c:	8c 91       	ld	r24, X
   1607e:	15 97       	sbiw	r26, 0x05	; 5
   16080:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   16084:	16 96       	adiw	r26, 0x06	; 6
   16086:	8c 91       	ld	r24, X
   16088:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   1608c:	b2 e0       	ldi	r27, 0x02	; 2
   1608e:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
   16092:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16096:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   1609a:	70 92 00 14 	sts	0x1400, r7	; 0x801400 <_sRuble_Parameters+0x52>
   1609e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   160a2:	81 30       	cpi	r24, 0x01	; 1
   160a4:	41 f5       	brne	.+80     	; 0x160f6 <_Z22Valve_Grouping_Handlerh+0x3e2>
   160a6:	6f e6       	ldi	r22, 0x6F	; 111
   160a8:	7f e3       	ldi	r23, 0x3F	; 63
   160aa:	86 ec       	ldi	r24, 0xC6	; 198
   160ac:	94 e1       	ldi	r25, 0x14	; 20
   160ae:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   160b2:	4a e0       	ldi	r20, 0x0A	; 10
   160b4:	50 e0       	ldi	r21, 0x00	; 0
   160b6:	6d a9       	ldd	r22, Y+53	; 0x35
   160b8:	7e a9       	ldd	r23, Y+54	; 0x36
   160ba:	86 ec       	ldi	r24, 0xC6	; 198
   160bc:	94 e1       	ldi	r25, 0x14	; 20
   160be:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
   160c2:	86 ec       	ldi	r24, 0xC6	; 198
   160c4:	94 e1       	ldi	r25, 0x14	; 20
   160c6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   160ca:	6a e5       	ldi	r22, 0x5A	; 90
   160cc:	7f e3       	ldi	r23, 0x3F	; 63
   160ce:	86 ec       	ldi	r24, 0xC6	; 198
   160d0:	94 e1       	ldi	r25, 0x14	; 20
   160d2:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   160d6:	4c e0       	ldi	r20, 0x0C	; 12
   160d8:	50 e0       	ldi	r21, 0x00	; 0
   160da:	65 ef       	ldi	r22, 0xF5	; 245
   160dc:	73 e1       	ldi	r23, 0x13	; 19
   160de:	86 ec       	ldi	r24, 0xC6	; 198
   160e0:	94 e1       	ldi	r25, 0x14	; 20
   160e2:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   160e6:	86 ec       	ldi	r24, 0xC6	; 198
   160e8:	94 e1       	ldi	r25, 0x14	; 20
   160ea:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   160ee:	86 ec       	ldi	r24, 0xC6	; 198
   160f0:	94 e1       	ldi	r25, 0x14	; 20
   160f2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   160f6:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   160fa:	88 23       	and	r24, r24
   160fc:	a1 f0       	breq	.+40     	; 0x16126 <_Z22Valve_Grouping_Handlerh+0x412>
   160fe:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   16102:	88 23       	and	r24, r24
   16104:	81 f0       	breq	.+32     	; 0x16126 <_Z22Valve_Grouping_Handlerh+0x412>
   16106:	e0 ed       	ldi	r30, 0xD0	; 208
   16108:	ff e0       	ldi	r31, 0x0F	; 15
   1610a:	01 90       	ld	r0, Z+
   1610c:	00 20       	and	r0, r0
   1610e:	e9 f7       	brne	.-6      	; 0x1610a <_Z22Valve_Grouping_Handlerh+0x3f6>
   16110:	31 97       	sbiw	r30, 0x01	; 1
   16112:	af 01       	movw	r20, r30
   16114:	40 5d       	subi	r20, 0xD0	; 208
   16116:	5f 40       	sbci	r21, 0x0F	; 15
   16118:	21 e0       	ldi	r18, 0x01	; 1
   1611a:	60 ed       	ldi	r22, 0xD0	; 208
   1611c:	7f e0       	ldi	r23, 0x0F	; 15
   1611e:	82 e6       	ldi	r24, 0x62	; 98
   16120:	9f e0       	ldi	r25, 0x0F	; 15
   16122:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   16126:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   1612a:	8c e0       	ldi	r24, 0x0C	; 12
   1612c:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   16130:	88 eb       	ldi	r24, 0xB8	; 184
   16132:	9b e0       	ldi	r25, 0x0B	; 11
   16134:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
   16138:	88 23       	and	r24, r24
   1613a:	09 f4       	brne	.+2      	; 0x1613e <_Z22Valve_Grouping_Handlerh+0x42a>
   1613c:	59 c0       	rjmp	.+178    	; 0x161f0 <_Z22Valve_Grouping_Handlerh+0x4dc>
   1613e:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   16142:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   16146:	88 23       	and	r24, r24
   16148:	a1 f0       	breq	.+40     	; 0x16172 <_Z22Valve_Grouping_Handlerh+0x45e>
   1614a:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   1614e:	88 23       	and	r24, r24
   16150:	81 f0       	breq	.+32     	; 0x16172 <_Z22Valve_Grouping_Handlerh+0x45e>
   16152:	e0 ed       	ldi	r30, 0xD0	; 208
   16154:	ff e0       	ldi	r31, 0x0F	; 15
   16156:	01 90       	ld	r0, Z+
   16158:	00 20       	and	r0, r0
   1615a:	e9 f7       	brne	.-6      	; 0x16156 <_Z22Valve_Grouping_Handlerh+0x442>
   1615c:	31 97       	sbiw	r30, 0x01	; 1
   1615e:	af 01       	movw	r20, r30
   16160:	40 5d       	subi	r20, 0xD0	; 208
   16162:	5f 40       	sbci	r21, 0x0F	; 15
   16164:	21 e0       	ldi	r18, 0x01	; 1
   16166:	60 ed       	ldi	r22, 0xD0	; 208
   16168:	7f e0       	ldi	r23, 0x0F	; 15
   1616a:	82 e6       	ldi	r24, 0x62	; 98
   1616c:	9f e0       	ldi	r25, 0x0F	; 15
   1616e:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   16172:	90 e0       	ldi	r25, 0x00	; 0
   16174:	80 e0       	ldi	r24, 0x00	; 0
   16176:	28 2f       	mov	r18, r24
   16178:	30 e0       	ldi	r19, 0x00	; 0
   1617a:	ef a9       	ldd	r30, Y+55	; 0x37
   1617c:	f8 ad       	ldd	r31, Y+56	; 0x38
   1617e:	e2 0f       	add	r30, r18
   16180:	f3 1f       	adc	r31, r19
   16182:	d9 01       	movw	r26, r18
   16184:	a7 5f       	subi	r26, 0xF7	; 247
   16186:	bb 4e       	sbci	r27, 0xEB	; 235
   16188:	41 81       	ldd	r20, Z+1	; 0x01
   1618a:	2c 91       	ld	r18, X
   1618c:	42 17       	cp	r20, r18
   1618e:	11 f0       	breq	.+4      	; 0x16194 <_Z22Valve_Grouping_Handlerh+0x480>
   16190:	90 e0       	ldi	r25, 0x00	; 0
   16192:	86 e0       	ldi	r24, 0x06	; 6
   16194:	9f 5f       	subi	r25, 0xFF	; 255
   16196:	8f 5f       	subi	r24, 0xFF	; 255
   16198:	86 30       	cpi	r24, 0x06	; 6
   1619a:	68 f3       	brcs	.-38     	; 0x16176 <_Z22Valve_Grouping_Handlerh+0x462>
   1619c:	96 30       	cpi	r25, 0x06	; 6
   1619e:	c9 f4       	brne	.+50     	; 0x161d2 <_Z22Valve_Grouping_Handlerh+0x4be>
   161a0:	81 e0       	ldi	r24, 0x01	; 1
   161a2:	f8 01       	movw	r30, r16
   161a4:	83 87       	std	Z+11, r24	; 0x0b
   161a6:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   161aa:	22 87       	std	Z+10, r18	; 0x0a
   161ac:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   161b0:	90 e0       	ldi	r25, 0x00	; 0
   161b2:	98 2f       	mov	r25, r24
   161b4:	88 27       	eor	r24, r24
   161b6:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   161ba:	83 2b       	or	r24, r19
   161bc:	91 87       	std	Z+9, r25	; 0x09
   161be:	80 87       	std	Z+8, r24	; 0x08
   161c0:	22 23       	and	r18, r18
   161c2:	e9 f0       	breq	.+58     	; 0x161fe <_Z22Valve_Grouping_Handlerh+0x4ea>
   161c4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   161c8:	81 30       	cpi	r24, 0x01	; 1
   161ca:	d9 f4       	brne	.+54     	; 0x16202 <_Z22Valve_Grouping_Handlerh+0x4ee>
   161cc:	65 e3       	ldi	r22, 0x35	; 53
   161ce:	7f e3       	ldi	r23, 0x3F	; 63
   161d0:	06 c0       	rjmp	.+12     	; 0x161de <_Z22Valve_Grouping_Handlerh+0x4ca>
   161d2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   161d6:	81 30       	cpi	r24, 0x01	; 1
   161d8:	a1 f4       	brne	.+40     	; 0x16202 <_Z22Valve_Grouping_Handlerh+0x4ee>
   161da:	64 e1       	ldi	r22, 0x14	; 20
   161dc:	7f e3       	ldi	r23, 0x3F	; 63
   161de:	86 ec       	ldi	r24, 0xC6	; 198
   161e0:	94 e1       	ldi	r25, 0x14	; 20
   161e2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   161e6:	86 ec       	ldi	r24, 0xC6	; 198
   161e8:	94 e1       	ldi	r25, 0x14	; 20
   161ea:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   161ee:	09 c0       	rjmp	.+18     	; 0x16202 <_Z22Valve_Grouping_Handlerh+0x4ee>
   161f0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   161f4:	81 30       	cpi	r24, 0x01	; 1
   161f6:	29 f4       	brne	.+10     	; 0x16202 <_Z22Valve_Grouping_Handlerh+0x4ee>
   161f8:	6d ee       	ldi	r22, 0xED	; 237
   161fa:	7e e3       	ldi	r23, 0x3E	; 62
   161fc:	f0 cf       	rjmp	.-32     	; 0x161de <_Z22Valve_Grouping_Handlerh+0x4ca>
   161fe:	e3 e0       	ldi	r30, 0x03	; 3
   16200:	6e 2e       	mov	r6, r30
   16202:	68 ee       	ldi	r22, 0xE8	; 232
   16204:	73 e0       	ldi	r23, 0x03	; 3
   16206:	80 e0       	ldi	r24, 0x00	; 0
   16208:	90 e0       	ldi	r25, 0x00	; 0
   1620a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   1620e:	f3 e0       	ldi	r31, 0x03	; 3
   16210:	6f 12       	cpse	r6, r31
   16212:	17 cf       	rjmp	.-466    	; 0x16042 <_Z22Valve_Grouping_Handlerh+0x32e>
   16214:	ec ce       	rjmp	.-552    	; 0x15fee <_Z22Valve_Grouping_Handlerh+0x2da>
   16216:	23 e0       	ldi	r18, 0x03	; 3
   16218:	52 16       	cp	r5, r18
   1621a:	11 f4       	brne	.+4      	; 0x16220 <_Z22Valve_Grouping_Handlerh+0x50c>
   1621c:	0c 94 c4 b9 	jmp	0x17388	; 0x17388 <_Z22Valve_Grouping_Handlerh+0x1674>
   16220:	35 e0       	ldi	r19, 0x05	; 5
   16222:	53 12       	cpse	r5, r19
   16224:	45 c0       	rjmp	.+138    	; 0x162b0 <_Z22Valve_Grouping_Handlerh+0x59c>
   16226:	7e e0       	ldi	r23, 0x0E	; 14
   16228:	f7 2e       	mov	r15, r23
   1622a:	00 e0       	ldi	r16, 0x00	; 0
   1622c:	10 e0       	ldi	r17, 0x00	; 0
   1622e:	f4 01       	movw	r30, r8
   16230:	e0 0f       	add	r30, r16
   16232:	f1 1f       	adc	r31, r17
   16234:	e1 81       	ldd	r30, Z+1	; 0x01
   16236:	e3 31       	cpi	r30, 0x13	; 19
   16238:	68 f0       	brcs	.+26     	; 0x16254 <_Z22Valve_Grouping_Handlerh+0x540>
   1623a:	f0 e0       	ldi	r31, 0x00	; 0
   1623c:	e7 5c       	subi	r30, 0xC7	; 199
   1623e:	fb 4e       	sbci	r31, 0xEB	; 235
   16240:	61 e0       	ldi	r22, 0x01	; 1
   16242:	80 81       	ld	r24, Z
   16244:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   16248:	68 ec       	ldi	r22, 0xC8	; 200
   1624a:	70 e0       	ldi	r23, 0x00	; 0
   1624c:	80 e0       	ldi	r24, 0x00	; 0
   1624e:	90 e0       	ldi	r25, 0x00	; 0
   16250:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16254:	0f 5f       	subi	r16, 0xFF	; 255
   16256:	1f 4f       	sbci	r17, 0xFF	; 255
   16258:	05 30       	cpi	r16, 0x05	; 5
   1625a:	11 05       	cpc	r17, r1
   1625c:	41 f7       	brne	.-48     	; 0x1622e <_Z22Valve_Grouping_Handlerh+0x51a>
   1625e:	fa 94       	dec	r15
   16260:	46 e0       	ldi	r20, 0x06	; 6
   16262:	84 0e       	add	r8, r20
   16264:	91 1c       	adc	r9, r1
   16266:	f1 10       	cpse	r15, r1
   16268:	e0 cf       	rjmp	.-64     	; 0x1622a <_Z22Valve_Grouping_Handlerh+0x516>
   1626a:	80 91 3a 0e 	lds	r24, 0x0E3A	; 0x800e3a <_sExtra_Plot+0x52>
   1626e:	88 36       	cpi	r24, 0x68	; 104
   16270:	11 f0       	breq	.+4      	; 0x16276 <_Z22Valve_Grouping_Handlerh+0x562>
   16272:	0c 94 c4 b9 	jmp	0x17388	; 0x17388 <_Z22Valve_Grouping_Handlerh+0x1674>
   16276:	0e e3       	ldi	r16, 0x3E	; 62
   16278:	1e e0       	ldi	r17, 0x0E	; 14
   1627a:	63 e4       	ldi	r22, 0x43	; 67
   1627c:	e6 2e       	mov	r14, r22
   1627e:	6e e0       	ldi	r22, 0x0E	; 14
   16280:	f6 2e       	mov	r15, r22
   16282:	d8 01       	movw	r26, r16
   16284:	ed 91       	ld	r30, X+
   16286:	8d 01       	movw	r16, r26
   16288:	e3 31       	cpi	r30, 0x13	; 19
   1628a:	68 f0       	brcs	.+26     	; 0x162a6 <_Z22Valve_Grouping_Handlerh+0x592>
   1628c:	f0 e0       	ldi	r31, 0x00	; 0
   1628e:	e7 5c       	subi	r30, 0xC7	; 199
   16290:	fb 4e       	sbci	r31, 0xEB	; 235
   16292:	61 e0       	ldi	r22, 0x01	; 1
   16294:	80 81       	ld	r24, Z
   16296:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   1629a:	68 ec       	ldi	r22, 0xC8	; 200
   1629c:	70 e0       	ldi	r23, 0x00	; 0
   1629e:	80 e0       	ldi	r24, 0x00	; 0
   162a0:	90 e0       	ldi	r25, 0x00	; 0
   162a2:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   162a6:	e0 16       	cp	r14, r16
   162a8:	f1 06       	cpc	r15, r17
   162aa:	59 f7       	brne	.-42     	; 0x16282 <_Z22Valve_Grouping_Handlerh+0x56e>
   162ac:	0c 94 c4 b9 	jmp	0x17388	; 0x17388 <_Z22Valve_Grouping_Handlerh+0x1674>
   162b0:	b1 e0       	ldi	r27, 0x01	; 1
   162b2:	5b 12       	cpse	r5, r27
   162b4:	4b c1       	rjmp	.+662    	; 0x1654c <_Z22Valve_Grouping_Handlerh+0x838>
   162b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   162ba:	81 30       	cpi	r24, 0x01	; 1
   162bc:	51 f4       	brne	.+20     	; 0x162d2 <_Z22Valve_Grouping_Handlerh+0x5be>
   162be:	62 ec       	ldi	r22, 0xC2	; 194
   162c0:	7e e3       	ldi	r23, 0x3E	; 62
   162c2:	86 ec       	ldi	r24, 0xC6	; 198
   162c4:	94 e1       	ldi	r25, 0x14	; 20
   162c6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   162ca:	86 ec       	ldi	r24, 0xC6	; 198
   162cc:	94 e1       	ldi	r25, 0x14	; 20
   162ce:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   162d2:	05 e1       	ldi	r16, 0x15	; 21
   162d4:	1c e0       	ldi	r17, 0x0C	; 12
   162d6:	44 e0       	ldi	r20, 0x04	; 4
   162d8:	a4 2e       	mov	r10, r20
   162da:	b1 2c       	mov	r11, r1
   162dc:	c1 2c       	mov	r12, r1
   162de:	d1 2c       	mov	r13, r1
   162e0:	5d e0       	ldi	r21, 0x0D	; 13
   162e2:	65 2e       	mov	r6, r21
   162e4:	f8 01       	movw	r30, r16
   162e6:	82 85       	ldd	r24, Z+10	; 0x0a
   162e8:	88 23       	and	r24, r24
   162ea:	09 f1       	breq	.+66     	; 0x1632e <_Z22Valve_Grouping_Handlerh+0x61a>
   162ec:	71 2c       	mov	r7, r1
   162ee:	40 e0       	ldi	r20, 0x00	; 0
   162f0:	36 c0       	rjmp	.+108    	; 0x1635e <_Z22Valve_Grouping_Handlerh+0x64a>
   162f2:	ae 01       	movw	r20, r28
   162f4:	45 5d       	subi	r20, 0xD5	; 213
   162f6:	5f 4f       	sbci	r21, 0xFF	; 255
   162f8:	1a 01       	movw	r2, r20
   162fa:	99 24       	eor	r9, r9
   162fc:	93 94       	inc	r9
   162fe:	b6 01       	movw	r22, r12
   16300:	6f 5f       	subi	r22, 0xFF	; 255
   16302:	7f 4f       	sbci	r23, 0xFF	; 255
   16304:	7c ab       	std	Y+52, r23	; 0x34
   16306:	6b ab       	std	Y+51, r22	; 0x33
   16308:	6c 9c       	mul	r6, r12
   1630a:	c0 01       	movw	r24, r0
   1630c:	6d 9c       	mul	r6, r13
   1630e:	90 0d       	add	r25, r0
   16310:	11 24       	eor	r1, r1
   16312:	dc 01       	movw	r26, r24
   16314:	ab 5e       	subi	r26, 0xEB	; 235
   16316:	b3 4f       	sbci	r27, 0xF3	; 243
   16318:	be ab       	std	Y+54, r27	; 0x36
   1631a:	ad ab       	std	Y+53, r26	; 0x35
   1631c:	f1 01       	movw	r30, r2
   1631e:	81 91       	ld	r24, Z+
   16320:	1f 01       	movw	r2, r30
   16322:	87 21       	and	r24, r7
   16324:	41 f5       	brne	.+80     	; 0x16376 <_Z22Valve_Grouping_Handlerh+0x662>
   16326:	93 94       	inc	r9
   16328:	f4 e0       	ldi	r31, 0x04	; 4
   1632a:	9f 12       	cpse	r9, r31
   1632c:	f7 cf       	rjmp	.-18     	; 0x1631c <_Z22Valve_Grouping_Handlerh+0x608>
   1632e:	ff ef       	ldi	r31, 0xFF	; 255
   16330:	cf 1a       	sub	r12, r31
   16332:	df 0a       	sbc	r13, r31
   16334:	03 5f       	subi	r16, 0xF3	; 243
   16336:	1f 4f       	sbci	r17, 0xFF	; 255
   16338:	23 e0       	ldi	r18, 0x03	; 3
   1633a:	a2 0e       	add	r10, r18
   1633c:	b1 1c       	adc	r11, r1
   1633e:	36 e0       	ldi	r19, 0x06	; 6
   16340:	c3 16       	cp	r12, r19
   16342:	d1 04       	cpc	r13, r1
   16344:	79 f6       	brne	.-98     	; 0x162e4 <_Z22Valve_Grouping_Handlerh+0x5d0>
   16346:	06 c1       	rjmp	.+524    	; 0x16554 <_Z22Valve_Grouping_Handlerh+0x840>
   16348:	28 17       	cp	r18, r24
   1634a:	39 07       	cpc	r19, r25
   1634c:	11 f4       	brne	.+4      	; 0x16352 <_Z22Valve_Grouping_Handlerh+0x63e>
   1634e:	50 81       	ld	r21, Z
   16350:	75 2a       	or	r7, r21
   16352:	01 96       	adiw	r24, 0x01	; 1
   16354:	31 96       	adiw	r30, 0x01	; 1
   16356:	a8 16       	cp	r10, r24
   16358:	b9 06       	cpc	r11, r25
   1635a:	b1 f7       	brne	.-20     	; 0x16348 <_Z22Valve_Grouping_Handlerh+0x634>
   1635c:	4f 5f       	subi	r20, 0xFF	; 255
   1635e:	f7 01       	movw	r30, r14
   16360:	e4 0f       	add	r30, r20
   16362:	f1 1d       	adc	r31, r1
   16364:	20 81       	ld	r18, Z
   16366:	22 23       	and	r18, r18
   16368:	21 f2       	breq	.-120    	; 0x162f2 <_Z22Valve_Grouping_Handlerh+0x5de>
   1636a:	c5 01       	movw	r24, r10
   1636c:	03 97       	sbiw	r24, 0x03	; 3
   1636e:	fe 01       	movw	r30, r28
   16370:	bb 96       	adiw	r30, 0x2b	; 43
   16372:	30 e0       	ldi	r19, 0x00	; 0
   16374:	e9 cf       	rjmp	.-46     	; 0x16348 <_Z22Valve_Grouping_Handlerh+0x634>
   16376:	81 2c       	mov	r8, r1
   16378:	83 94       	inc	r8
   1637a:	a5 ef       	ldi	r26, 0xF5	; 245
   1637c:	b3 e1       	ldi	r27, 0x13	; 19
   1637e:	e4 e1       	ldi	r30, 0x14	; 20
   16380:	1d 92       	st	X+, r1
   16382:	ea 95       	dec	r30
   16384:	e9 f7       	brne	.-6      	; 0x16380 <_Z22Valve_Grouping_Handlerh+0x66c>
   16386:	d8 01       	movw	r26, r16
   16388:	11 96       	adiw	r26, 0x01	; 1
   1638a:	8c 91       	ld	r24, X
   1638c:	11 97       	sbiw	r26, 0x01	; 1
   1638e:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   16392:	12 96       	adiw	r26, 0x02	; 2
   16394:	8c 91       	ld	r24, X
   16396:	12 97       	sbiw	r26, 0x02	; 2
   16398:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   1639c:	13 96       	adiw	r26, 0x03	; 3
   1639e:	8c 91       	ld	r24, X
   163a0:	13 97       	sbiw	r26, 0x03	; 3
   163a2:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   163a6:	14 96       	adiw	r26, 0x04	; 4
   163a8:	8c 91       	ld	r24, X
   163aa:	14 97       	sbiw	r26, 0x04	; 4
   163ac:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   163b0:	15 96       	adiw	r26, 0x05	; 5
   163b2:	8c 91       	ld	r24, X
   163b4:	15 97       	sbiw	r26, 0x05	; 5
   163b6:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   163ba:	16 96       	adiw	r26, 0x06	; 6
   163bc:	8c 91       	ld	r24, X
   163be:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   163c2:	b2 e0       	ldi	r27, 0x02	; 2
   163c4:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
   163c8:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   163cc:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   163d0:	90 92 00 14 	sts	0x1400, r9	; 0x801400 <_sRuble_Parameters+0x52>
   163d4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   163d8:	81 30       	cpi	r24, 0x01	; 1
   163da:	41 f5       	brne	.+80     	; 0x1642c <_Z22Valve_Grouping_Handlerh+0x718>
   163dc:	6e e9       	ldi	r22, 0x9E	; 158
   163de:	7e e3       	ldi	r23, 0x3E	; 62
   163e0:	86 ec       	ldi	r24, 0xC6	; 198
   163e2:	94 e1       	ldi	r25, 0x14	; 20
   163e4:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   163e8:	4a e0       	ldi	r20, 0x0A	; 10
   163ea:	50 e0       	ldi	r21, 0x00	; 0
   163ec:	6b a9       	ldd	r22, Y+51	; 0x33
   163ee:	7c a9       	ldd	r23, Y+52	; 0x34
   163f0:	86 ec       	ldi	r24, 0xC6	; 198
   163f2:	94 e1       	ldi	r25, 0x14	; 20
   163f4:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
   163f8:	86 ec       	ldi	r24, 0xC6	; 198
   163fa:	94 e1       	ldi	r25, 0x14	; 20
   163fc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16400:	69 e8       	ldi	r22, 0x89	; 137
   16402:	7e e3       	ldi	r23, 0x3E	; 62
   16404:	86 ec       	ldi	r24, 0xC6	; 198
   16406:	94 e1       	ldi	r25, 0x14	; 20
   16408:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1640c:	46 e0       	ldi	r20, 0x06	; 6
   1640e:	50 e0       	ldi	r21, 0x00	; 0
   16410:	65 ef       	ldi	r22, 0xF5	; 245
   16412:	73 e1       	ldi	r23, 0x13	; 19
   16414:	86 ec       	ldi	r24, 0xC6	; 198
   16416:	94 e1       	ldi	r25, 0x14	; 20
   16418:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   1641c:	86 ec       	ldi	r24, 0xC6	; 198
   1641e:	94 e1       	ldi	r25, 0x14	; 20
   16420:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   16424:	86 ec       	ldi	r24, 0xC6	; 198
   16426:	94 e1       	ldi	r25, 0x14	; 20
   16428:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1642c:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   16430:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   16434:	88 23       	and	r24, r24
   16436:	a1 f0       	breq	.+40     	; 0x16460 <_Z22Valve_Grouping_Handlerh+0x74c>
   16438:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   1643c:	88 23       	and	r24, r24
   1643e:	81 f0       	breq	.+32     	; 0x16460 <_Z22Valve_Grouping_Handlerh+0x74c>
   16440:	e0 ed       	ldi	r30, 0xD0	; 208
   16442:	ff e0       	ldi	r31, 0x0F	; 15
   16444:	01 90       	ld	r0, Z+
   16446:	00 20       	and	r0, r0
   16448:	e9 f7       	brne	.-6      	; 0x16444 <_Z22Valve_Grouping_Handlerh+0x730>
   1644a:	31 97       	sbiw	r30, 0x01	; 1
   1644c:	af 01       	movw	r20, r30
   1644e:	40 5d       	subi	r20, 0xD0	; 208
   16450:	5f 40       	sbci	r21, 0x0F	; 15
   16452:	21 e0       	ldi	r18, 0x01	; 1
   16454:	60 ed       	ldi	r22, 0xD0	; 208
   16456:	7f e0       	ldi	r23, 0x0F	; 15
   16458:	82 e6       	ldi	r24, 0x62	; 98
   1645a:	9f e0       	ldi	r25, 0x0F	; 15
   1645c:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   16460:	8c e0       	ldi	r24, 0x0C	; 12
   16462:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   16466:	88 eb       	ldi	r24, 0xB8	; 184
   16468:	9b e0       	ldi	r25, 0x0B	; 11
   1646a:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
   1646e:	88 23       	and	r24, r24
   16470:	09 f4       	brne	.+2      	; 0x16474 <_Z22Valve_Grouping_Handlerh+0x760>
   16472:	59 c0       	rjmp	.+178    	; 0x16526 <_Z22Valve_Grouping_Handlerh+0x812>
   16474:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   16478:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   1647c:	88 23       	and	r24, r24
   1647e:	a1 f0       	breq	.+40     	; 0x164a8 <_Z22Valve_Grouping_Handlerh+0x794>
   16480:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   16484:	88 23       	and	r24, r24
   16486:	81 f0       	breq	.+32     	; 0x164a8 <_Z22Valve_Grouping_Handlerh+0x794>
   16488:	e0 ed       	ldi	r30, 0xD0	; 208
   1648a:	ff e0       	ldi	r31, 0x0F	; 15
   1648c:	01 90       	ld	r0, Z+
   1648e:	00 20       	and	r0, r0
   16490:	e9 f7       	brne	.-6      	; 0x1648c <_Z22Valve_Grouping_Handlerh+0x778>
   16492:	31 97       	sbiw	r30, 0x01	; 1
   16494:	af 01       	movw	r20, r30
   16496:	40 5d       	subi	r20, 0xD0	; 208
   16498:	5f 40       	sbci	r21, 0x0F	; 15
   1649a:	21 e0       	ldi	r18, 0x01	; 1
   1649c:	60 ed       	ldi	r22, 0xD0	; 208
   1649e:	7f e0       	ldi	r23, 0x0F	; 15
   164a0:	82 e6       	ldi	r24, 0x62	; 98
   164a2:	9f e0       	ldi	r25, 0x0F	; 15
   164a4:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   164a8:	90 e0       	ldi	r25, 0x00	; 0
   164aa:	80 e0       	ldi	r24, 0x00	; 0
   164ac:	28 2f       	mov	r18, r24
   164ae:	30 e0       	ldi	r19, 0x00	; 0
   164b0:	ed a9       	ldd	r30, Y+53	; 0x35
   164b2:	fe a9       	ldd	r31, Y+54	; 0x36
   164b4:	e2 0f       	add	r30, r18
   164b6:	f3 1f       	adc	r31, r19
   164b8:	d9 01       	movw	r26, r18
   164ba:	a7 5f       	subi	r26, 0xF7	; 247
   164bc:	bb 4e       	sbci	r27, 0xEB	; 235
   164be:	41 81       	ldd	r20, Z+1	; 0x01
   164c0:	2c 91       	ld	r18, X
   164c2:	42 17       	cp	r20, r18
   164c4:	11 f0       	breq	.+4      	; 0x164ca <_Z22Valve_Grouping_Handlerh+0x7b6>
   164c6:	90 e0       	ldi	r25, 0x00	; 0
   164c8:	86 e0       	ldi	r24, 0x06	; 6
   164ca:	9f 5f       	subi	r25, 0xFF	; 255
   164cc:	8f 5f       	subi	r24, 0xFF	; 255
   164ce:	86 30       	cpi	r24, 0x06	; 6
   164d0:	68 f3       	brcs	.-38     	; 0x164ac <_Z22Valve_Grouping_Handlerh+0x798>
   164d2:	96 30       	cpi	r25, 0x06	; 6
   164d4:	c9 f4       	brne	.+50     	; 0x16508 <_Z22Valve_Grouping_Handlerh+0x7f4>
   164d6:	81 e0       	ldi	r24, 0x01	; 1
   164d8:	f8 01       	movw	r30, r16
   164da:	83 87       	std	Z+11, r24	; 0x0b
   164dc:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   164e0:	22 87       	std	Z+10, r18	; 0x0a
   164e2:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   164e6:	90 e0       	ldi	r25, 0x00	; 0
   164e8:	98 2f       	mov	r25, r24
   164ea:	88 27       	eor	r24, r24
   164ec:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   164f0:	83 2b       	or	r24, r19
   164f2:	91 87       	std	Z+9, r25	; 0x09
   164f4:	80 87       	std	Z+8, r24	; 0x08
   164f6:	22 23       	and	r18, r18
   164f8:	e9 f0       	breq	.+58     	; 0x16534 <_Z22Valve_Grouping_Handlerh+0x820>
   164fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   164fe:	81 30       	cpi	r24, 0x01	; 1
   16500:	d9 f4       	brne	.+54     	; 0x16538 <_Z22Valve_Grouping_Handlerh+0x824>
   16502:	63 e6       	ldi	r22, 0x63	; 99
   16504:	7e e3       	ldi	r23, 0x3E	; 62
   16506:	06 c0       	rjmp	.+12     	; 0x16514 <_Z22Valve_Grouping_Handlerh+0x800>
   16508:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1650c:	81 30       	cpi	r24, 0x01	; 1
   1650e:	a1 f4       	brne	.+40     	; 0x16538 <_Z22Valve_Grouping_Handlerh+0x824>
   16510:	61 e4       	ldi	r22, 0x41	; 65
   16512:	7e e3       	ldi	r23, 0x3E	; 62
   16514:	86 ec       	ldi	r24, 0xC6	; 198
   16516:	94 e1       	ldi	r25, 0x14	; 20
   16518:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1651c:	86 ec       	ldi	r24, 0xC6	; 198
   1651e:	94 e1       	ldi	r25, 0x14	; 20
   16520:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16524:	09 c0       	rjmp	.+18     	; 0x16538 <_Z22Valve_Grouping_Handlerh+0x824>
   16526:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1652a:	81 30       	cpi	r24, 0x01	; 1
   1652c:	29 f4       	brne	.+10     	; 0x16538 <_Z22Valve_Grouping_Handlerh+0x824>
   1652e:	63 e1       	ldi	r22, 0x13	; 19
   16530:	7e e3       	ldi	r23, 0x3E	; 62
   16532:	f0 cf       	rjmp	.-32     	; 0x16514 <_Z22Valve_Grouping_Handlerh+0x800>
   16534:	93 e0       	ldi	r25, 0x03	; 3
   16536:	89 2e       	mov	r8, r25
   16538:	68 ee       	ldi	r22, 0xE8	; 232
   1653a:	73 e0       	ldi	r23, 0x03	; 3
   1653c:	80 e0       	ldi	r24, 0x00	; 0
   1653e:	90 e0       	ldi	r25, 0x00	; 0
   16540:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16544:	f3 e0       	ldi	r31, 0x03	; 3
   16546:	8f 12       	cpse	r8, r31
   16548:	17 cf       	rjmp	.-466    	; 0x16378 <_Z22Valve_Grouping_Handlerh+0x664>
   1654a:	ed ce       	rjmp	.-550    	; 0x16326 <_Z22Valve_Grouping_Handlerh+0x612>
   1654c:	21 e0       	ldi	r18, 0x01	; 1
   1654e:	25 15       	cp	r18, r5
   16550:	08 f4       	brcc	.+2      	; 0x16554 <_Z22Valve_Grouping_Handlerh+0x840>
   16552:	19 c7       	rjmp	.+3634   	; 0x17386 <_Z22Valve_Grouping_Handlerh+0x1672>
   16554:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16558:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1655c:	9f 30       	cpi	r25, 0x0F	; 15
   1655e:	08 f0       	brcs	.+2      	; 0x16562 <_Z22Valve_Grouping_Handlerh+0x84e>
   16560:	96 c3       	rjmp	.+1836   	; 0x16c8e <_Z22Valve_Grouping_Handlerh+0xf7a>
   16562:	81 30       	cpi	r24, 0x01	; 1
   16564:	51 f4       	brne	.+20     	; 0x1657a <_Z22Valve_Grouping_Handlerh+0x866>
   16566:	65 e0       	ldi	r22, 0x05	; 5
   16568:	7e e3       	ldi	r23, 0x3E	; 62
   1656a:	86 ec       	ldi	r24, 0xC6	; 198
   1656c:	94 e1       	ldi	r25, 0x14	; 20
   1656e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   16572:	86 ec       	ldi	r24, 0xC6	; 198
   16574:	94 e1       	ldi	r25, 0x14	; 20
   16576:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1657a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1657e:	81 30       	cpi	r24, 0x01	; 1
   16580:	c1 f5       	brne	.+112    	; 0x165f2 <_Z22Valve_Grouping_Handlerh+0x8de>
   16582:	00 e0       	ldi	r16, 0x00	; 0
   16584:	10 e0       	ldi	r17, 0x00	; 0
   16586:	86 e0       	ldi	r24, 0x06	; 6
   16588:	f8 2e       	mov	r15, r24
   1658a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1658e:	90 e0       	ldi	r25, 0x00	; 0
   16590:	01 97       	sbiw	r24, 0x01	; 1
   16592:	f8 9e       	mul	r15, r24
   16594:	f0 01       	movw	r30, r0
   16596:	f9 9e       	mul	r15, r25
   16598:	f0 0d       	add	r31, r0
   1659a:	11 24       	eor	r1, r1
   1659c:	e2 5b       	subi	r30, 0xB2	; 178
   1659e:	f2 4f       	sbci	r31, 0xF2	; 242
   165a0:	e0 0f       	add	r30, r16
   165a2:	f1 1f       	adc	r31, r17
   165a4:	4a e0       	ldi	r20, 0x0A	; 10
   165a6:	50 e0       	ldi	r21, 0x00	; 0
   165a8:	61 81       	ldd	r22, Z+1	; 0x01
   165aa:	86 ec       	ldi	r24, 0xC6	; 198
   165ac:	94 e1       	ldi	r25, 0x14	; 20
   165ae:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   165b2:	63 e0       	ldi	r22, 0x03	; 3
   165b4:	7e e3       	ldi	r23, 0x3E	; 62
   165b6:	86 ec       	ldi	r24, 0xC6	; 198
   165b8:	94 e1       	ldi	r25, 0x14	; 20
   165ba:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   165be:	0f 5f       	subi	r16, 0xFF	; 255
   165c0:	1f 4f       	sbci	r17, 0xFF	; 255
   165c2:	05 30       	cpi	r16, 0x05	; 5
   165c4:	11 05       	cpc	r17, r1
   165c6:	09 f7       	brne	.-62     	; 0x1658a <_Z22Valve_Grouping_Handlerh+0x876>
   165c8:	6d ee       	ldi	r22, 0xED	; 237
   165ca:	7d e3       	ldi	r23, 0x3D	; 61
   165cc:	86 ec       	ldi	r24, 0xC6	; 198
   165ce:	94 e1       	ldi	r25, 0x14	; 20
   165d0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   165d4:	60 91 1e 14 	lds	r22, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   165d8:	70 e0       	ldi	r23, 0x00	; 0
   165da:	61 50       	subi	r22, 0x01	; 1
   165dc:	71 09       	sbc	r23, r1
   165de:	4a e0       	ldi	r20, 0x0A	; 10
   165e0:	50 e0       	ldi	r21, 0x00	; 0
   165e2:	86 ec       	ldi	r24, 0xC6	; 198
   165e4:	94 e1       	ldi	r25, 0x14	; 20
   165e6:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
   165ea:	86 ec       	ldi	r24, 0xC6	; 198
   165ec:	94 e1       	ldi	r25, 0x14	; 20
   165ee:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   165f2:	00 e0       	ldi	r16, 0x00	; 0
   165f4:	10 e0       	ldi	r17, 0x00	; 0
   165f6:	81 e0       	ldi	r24, 0x01	; 1
   165f8:	85 25       	eor	r24, r5
   165fa:	81 70       	andi	r24, 0x01	; 1
   165fc:	8f ab       	std	Y+55, r24	; 0x37
   165fe:	ad e0       	ldi	r26, 0x0D	; 13
   16600:	2a 2e       	mov	r2, r26
   16602:	b0 ed       	ldi	r27, 0xD0	; 208
   16604:	6b 2e       	mov	r6, r27
   16606:	bf e0       	ldi	r27, 0x0F	; 15
   16608:	7b 2e       	mov	r7, r27
   1660a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1660e:	90 e0       	ldi	r25, 0x00	; 0
   16610:	01 97       	sbiw	r24, 0x01	; 1
   16612:	36 e0       	ldi	r19, 0x06	; 6
   16614:	38 9f       	mul	r19, r24
   16616:	f0 01       	movw	r30, r0
   16618:	39 9f       	mul	r19, r25
   1661a:	f0 0d       	add	r31, r0
   1661c:	11 24       	eor	r1, r1
   1661e:	e2 5b       	subi	r30, 0xB2	; 178
   16620:	f2 4f       	sbci	r31, 0xF2	; 242
   16622:	e0 0f       	add	r30, r16
   16624:	f1 1f       	adc	r31, r17
   16626:	f1 80       	ldd	r15, Z+1	; 0x01
   16628:	8f ef       	ldi	r24, 0xFF	; 255
   1662a:	8f 0d       	add	r24, r15
   1662c:	82 31       	cpi	r24, 0x12	; 18
   1662e:	08 f0       	brcs	.+2      	; 0x16632 <_Z22Valve_Grouping_Handlerh+0x91e>
   16630:	f5 c2       	rjmp	.+1514   	; 0x16c1c <_Z22Valve_Grouping_Handlerh+0xf08>
   16632:	43 e0       	ldi	r20, 0x03	; 3
   16634:	4f 15       	cp	r20, r15
   16636:	a8 f4       	brcc	.+42     	; 0x16662 <_Z22Valve_Grouping_Handlerh+0x94e>
   16638:	8f 2d       	mov	r24, r15
   1663a:	63 e0       	ldi	r22, 0x03	; 3
   1663c:	0e 94 ac ea 	call	0x1d558	; 0x1d558 <__udivmodqi4>
   16640:	2b ea       	ldi	r18, 0xAB	; 171
   16642:	f2 9e       	mul	r15, r18
   16644:	21 2d       	mov	r18, r1
   16646:	11 24       	eor	r1, r1
   16648:	99 23       	and	r25, r25
   1664a:	31 f0       	breq	.+12     	; 0x16658 <_Z22Valve_Grouping_Handlerh+0x944>
   1664c:	26 95       	lsr	r18
   1664e:	ee 24       	eor	r14, r14
   16650:	e3 94       	inc	r14
   16652:	e2 0e       	add	r14, r18
   16654:	f9 2e       	mov	r15, r25
   16656:	07 c0       	rjmp	.+14     	; 0x16666 <_Z22Valve_Grouping_Handlerh+0x952>
   16658:	e2 2e       	mov	r14, r18
   1665a:	e6 94       	lsr	r14
   1665c:	f3 e0       	ldi	r31, 0x03	; 3
   1665e:	ff 2e       	mov	r15, r31
   16660:	02 c0       	rjmp	.+4      	; 0x16666 <_Z22Valve_Grouping_Handlerh+0x952>
   16662:	ee 24       	eor	r14, r14
   16664:	e3 94       	inc	r14
   16666:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1666a:	81 30       	cpi	r24, 0x01	; 1
   1666c:	89 f4       	brne	.+34     	; 0x16690 <_Z22Valve_Grouping_Handlerh+0x97c>
   1666e:	69 ed       	ldi	r22, 0xD9	; 217
   16670:	7d e3       	ldi	r23, 0x3D	; 61
   16672:	86 ec       	ldi	r24, 0xC6	; 198
   16674:	94 e1       	ldi	r25, 0x14	; 20
   16676:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1667a:	4a e0       	ldi	r20, 0x0A	; 10
   1667c:	50 e0       	ldi	r21, 0x00	; 0
   1667e:	6e 2d       	mov	r22, r14
   16680:	86 ec       	ldi	r24, 0xC6	; 198
   16682:	94 e1       	ldi	r25, 0x14	; 20
   16684:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   16688:	86 ec       	ldi	r24, 0xC6	; 198
   1668a:	94 e1       	ldi	r25, 0x14	; 20
   1668c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16690:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   16694:	81 11       	cpse	r24, r1
   16696:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   1669a:	84 e1       	ldi	r24, 0x14	; 20
   1669c:	a5 ef       	ldi	r26, 0xF5	; 245
   1669e:	b3 e1       	ldi	r27, 0x13	; 19
   166a0:	1d 92       	st	X+, r1
   166a2:	8a 95       	dec	r24
   166a4:	e9 f7       	brne	.-6      	; 0x166a0 <_Z22Valve_Grouping_Handlerh+0x98c>
   166a6:	2e 2d       	mov	r18, r14
   166a8:	30 e0       	ldi	r19, 0x00	; 0
   166aa:	21 50       	subi	r18, 0x01	; 1
   166ac:	31 09       	sbc	r19, r1
   166ae:	b7 e0       	ldi	r27, 0x07	; 7
   166b0:	b2 9f       	mul	r27, r18
   166b2:	c0 01       	movw	r24, r0
   166b4:	b3 9f       	mul	r27, r19
   166b6:	90 0d       	add	r25, r0
   166b8:	11 24       	eor	r1, r1
   166ba:	82 55       	subi	r24, 0x52	; 82
   166bc:	9c 4e       	sbci	r25, 0xEC	; 236
   166be:	fc 01       	movw	r30, r24
   166c0:	ec 58       	subi	r30, 0x8C	; 140
   166c2:	ff 4f       	sbci	r31, 0xFF	; 255
   166c4:	20 81       	ld	r18, Z
   166c6:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   166ca:	31 96       	adiw	r30, 0x01	; 1
   166cc:	20 81       	ld	r18, Z
   166ce:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   166d2:	31 96       	adiw	r30, 0x01	; 1
   166d4:	20 81       	ld	r18, Z
   166d6:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   166da:	31 96       	adiw	r30, 0x01	; 1
   166dc:	20 81       	ld	r18, Z
   166de:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   166e2:	31 96       	adiw	r30, 0x01	; 1
   166e4:	20 81       	ld	r18, Z
   166e6:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   166ea:	31 96       	adiw	r30, 0x01	; 1
   166ec:	20 81       	ld	r18, Z
   166ee:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   166f2:	22 e0       	ldi	r18, 0x02	; 2
   166f4:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   166f8:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0x4e>
   166fc:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16700:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   16704:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   16708:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   1670c:	f0 92 00 14 	sts	0x1400, r15	; 0x801400 <_sRuble_Parameters+0x52>
   16710:	40 e0       	ldi	r20, 0x00	; 0
   16712:	50 e0       	ldi	r21, 0x00	; 0
   16714:	d4 2e       	mov	r13, r20
   16716:	e1 2c       	mov	r14, r1
   16718:	f1 2c       	mov	r15, r1
   1671a:	24 9e       	mul	r2, r20
   1671c:	b0 01       	movw	r22, r0
   1671e:	25 9e       	mul	r2, r21
   16720:	70 0d       	add	r23, r0
   16722:	11 24       	eor	r1, r1
   16724:	6b 5e       	subi	r22, 0xEB	; 235
   16726:	73 4f       	sbci	r23, 0xF3	; 243
   16728:	2f 2d       	mov	r18, r15
   1672a:	30 e0       	ldi	r19, 0x00	; 0
   1672c:	fb 01       	movw	r30, r22
   1672e:	e2 0f       	add	r30, r18
   16730:	f3 1f       	adc	r31, r19
   16732:	28 0f       	add	r18, r24
   16734:	39 1f       	adc	r19, r25
   16736:	d9 01       	movw	r26, r18
   16738:	ac 58       	subi	r26, 0x8C	; 140
   1673a:	bf 4f       	sbci	r27, 0xFF	; 255
   1673c:	31 81       	ldd	r19, Z+1	; 0x01
   1673e:	2c 91       	ld	r18, X
   16740:	32 17       	cp	r19, r18
   16742:	19 f0       	breq	.+6      	; 0x1674a <_Z22Valve_Grouping_Handlerh+0xa36>
   16744:	e1 2c       	mov	r14, r1
   16746:	e6 e0       	ldi	r30, 0x06	; 6
   16748:	fe 2e       	mov	r15, r30
   1674a:	e3 94       	inc	r14
   1674c:	f3 94       	inc	r15
   1674e:	e5 e0       	ldi	r30, 0x05	; 5
   16750:	ef 15       	cp	r30, r15
   16752:	50 f7       	brcc	.-44     	; 0x16728 <_Z22Valve_Grouping_Handlerh+0xa14>
   16754:	f6 e0       	ldi	r31, 0x06	; 6
   16756:	ef 16       	cp	r14, r31
   16758:	31 f0       	breq	.+12     	; 0x16766 <_Z22Valve_Grouping_Handlerh+0xa52>
   1675a:	4f 5f       	subi	r20, 0xFF	; 255
   1675c:	5f 4f       	sbci	r21, 0xFF	; 255
   1675e:	46 30       	cpi	r20, 0x06	; 6
   16760:	51 05       	cpc	r21, r1
   16762:	c1 f6       	brne	.-80     	; 0x16714 <_Z22Valve_Grouping_Handlerh+0xa00>
   16764:	01 c0       	rjmp	.+2      	; 0x16768 <_Z22Valve_Grouping_Handlerh+0xa54>
   16766:	4d 2c       	mov	r4, r13
   16768:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1676c:	81 30       	cpi	r24, 0x01	; 1
   1676e:	89 f4       	brne	.+34     	; 0x16792 <_Z22Valve_Grouping_Handlerh+0xa7e>
   16770:	63 ec       	ldi	r22, 0xC3	; 195
   16772:	7d e3       	ldi	r23, 0x3D	; 61
   16774:	86 ec       	ldi	r24, 0xC6	; 198
   16776:	94 e1       	ldi	r25, 0x14	; 20
   16778:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1677c:	4a e0       	ldi	r20, 0x0A	; 10
   1677e:	50 e0       	ldi	r21, 0x00	; 0
   16780:	64 2d       	mov	r22, r4
   16782:	86 ec       	ldi	r24, 0xC6	; 198
   16784:	94 e1       	ldi	r25, 0x14	; 20
   16786:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   1678a:	86 ec       	ldi	r24, 0xC6	; 198
   1678c:	94 e1       	ldi	r25, 0x14	; 20
   1678e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16792:	2d e0       	ldi	r18, 0x0D	; 13
   16794:	42 9e       	mul	r4, r18
   16796:	40 01       	movw	r8, r0
   16798:	11 24       	eor	r1, r1
   1679a:	31 2c       	mov	r3, r1
   1679c:	24 9c       	mul	r2, r4
   1679e:	c0 01       	movw	r24, r0
   167a0:	11 24       	eor	r1, r1
   167a2:	9c 01       	movw	r18, r24
   167a4:	2b 5e       	subi	r18, 0xEB	; 235
   167a6:	33 4f       	sbci	r19, 0xF3	; 243
   167a8:	a9 01       	movw	r20, r18
   167aa:	45 5f       	subi	r20, 0xF5	; 245
   167ac:	5f 4f       	sbci	r21, 0xFF	; 255
   167ae:	5c ab       	std	Y+52, r21	; 0x34
   167b0:	4b ab       	std	Y+51, r20	; 0x33
   167b2:	b9 01       	movw	r22, r18
   167b4:	68 5f       	subi	r22, 0xF8	; 248
   167b6:	7f 4f       	sbci	r23, 0xFF	; 255
   167b8:	7e ab       	std	Y+54, r23	; 0x36
   167ba:	6d ab       	std	Y+53, r22	; 0x35
   167bc:	dc 01       	movw	r26, r24
   167be:	aa 5e       	subi	r26, 0xEA	; 234
   167c0:	b3 4f       	sbci	r27, 0xF3	; 243
   167c2:	7d 01       	movw	r14, r26
   167c4:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   167c8:	88 23       	and	r24, r24
   167ca:	99 f0       	breq	.+38     	; 0x167f2 <_Z22Valve_Grouping_Handlerh+0xade>
   167cc:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   167d0:	88 23       	and	r24, r24
   167d2:	79 f0       	breq	.+30     	; 0x167f2 <_Z22Valve_Grouping_Handlerh+0xade>
   167d4:	f3 01       	movw	r30, r6
   167d6:	01 90       	ld	r0, Z+
   167d8:	00 20       	and	r0, r0
   167da:	e9 f7       	brne	.-6      	; 0x167d6 <_Z22Valve_Grouping_Handlerh+0xac2>
   167dc:	31 97       	sbiw	r30, 0x01	; 1
   167de:	af 01       	movw	r20, r30
   167e0:	40 5d       	subi	r20, 0xD0	; 208
   167e2:	5f 40       	sbci	r21, 0x0F	; 15
   167e4:	21 e0       	ldi	r18, 0x01	; 1
   167e6:	60 ed       	ldi	r22, 0xD0	; 208
   167e8:	7f e0       	ldi	r23, 0x0F	; 15
   167ea:	82 e6       	ldi	r24, 0x62	; 98
   167ec:	9f e0       	ldi	r25, 0x0F	; 15
   167ee:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   167f2:	33 94       	inc	r3
   167f4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   167f8:	81 30       	cpi	r24, 0x01	; 1
   167fa:	51 f4       	brne	.+20     	; 0x16810 <_Z22Valve_Grouping_Handlerh+0xafc>
   167fc:	6f e9       	ldi	r22, 0x9F	; 159
   167fe:	7d e3       	ldi	r23, 0x3D	; 61
   16800:	86 ec       	ldi	r24, 0xC6	; 198
   16802:	94 e1       	ldi	r25, 0x14	; 20
   16804:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   16808:	86 ec       	ldi	r24, 0xC6	; 198
   1680a:	94 e1       	ldi	r25, 0x14	; 20
   1680c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16810:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   16814:	8c e0       	ldi	r24, 0x0C	; 12
   16816:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   1681a:	88 eb       	ldi	r24, 0xB8	; 184
   1681c:	9b e0       	ldi	r25, 0x0B	; 11
   1681e:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
   16822:	88 23       	and	r24, r24
   16824:	09 f4       	brne	.+2      	; 0x16828 <_Z22Valve_Grouping_Handlerh+0xb14>
   16826:	91 c1       	rjmp	.+802    	; 0x16b4a <_Z22Valve_Grouping_Handlerh+0xe36>
   16828:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   1682c:	88 23       	and	r24, r24
   1682e:	09 f4       	brne	.+2      	; 0x16832 <_Z22Valve_Grouping_Handlerh+0xb1e>
   16830:	2f c1       	rjmp	.+606    	; 0x16a90 <_Z22Valve_Grouping_Handlerh+0xd7c>
   16832:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   16836:	88 23       	and	r24, r24
   16838:	99 f0       	breq	.+38     	; 0x16860 <_Z22Valve_Grouping_Handlerh+0xb4c>
   1683a:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   1683e:	88 23       	and	r24, r24
   16840:	79 f0       	breq	.+30     	; 0x16860 <_Z22Valve_Grouping_Handlerh+0xb4c>
   16842:	f3 01       	movw	r30, r6
   16844:	01 90       	ld	r0, Z+
   16846:	00 20       	and	r0, r0
   16848:	e9 f7       	brne	.-6      	; 0x16844 <_Z22Valve_Grouping_Handlerh+0xb30>
   1684a:	31 97       	sbiw	r30, 0x01	; 1
   1684c:	af 01       	movw	r20, r30
   1684e:	40 5d       	subi	r20, 0xD0	; 208
   16850:	5f 40       	sbci	r21, 0x0F	; 15
   16852:	21 e0       	ldi	r18, 0x01	; 1
   16854:	60 ed       	ldi	r22, 0xD0	; 208
   16856:	7f e0       	ldi	r23, 0x0F	; 15
   16858:	82 e6       	ldi	r24, 0x62	; 98
   1685a:	9f e0       	ldi	r25, 0x0F	; 15
   1685c:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   16860:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16864:	81 30       	cpi	r24, 0x01	; 1
   16866:	59 f5       	brne	.+86     	; 0x168be <_Z22Valve_Grouping_Handlerh+0xbaa>
   16868:	69 e8       	ldi	r22, 0x89	; 137
   1686a:	7d e3       	ldi	r23, 0x3D	; 61
   1686c:	86 ec       	ldi	r24, 0xC6	; 198
   1686e:	94 e1       	ldi	r25, 0x14	; 20
   16870:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   16874:	4a e0       	ldi	r20, 0x0A	; 10
   16876:	50 e0       	ldi	r21, 0x00	; 0
   16878:	69 e0       	ldi	r22, 0x09	; 9
   1687a:	74 e1       	ldi	r23, 0x14	; 20
   1687c:	86 ec       	ldi	r24, 0xC6	; 198
   1687e:	94 e1       	ldi	r25, 0x14	; 20
   16880:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   16884:	86 ec       	ldi	r24, 0xC6	; 198
   16886:	94 e1       	ldi	r25, 0x14	; 20
   16888:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1688c:	86 ec       	ldi	r24, 0xC6	; 198
   1688e:	94 e1       	ldi	r25, 0x14	; 20
   16890:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16894:	6b e6       	ldi	r22, 0x6B	; 107
   16896:	7d e3       	ldi	r23, 0x3D	; 61
   16898:	86 ec       	ldi	r24, 0xC6	; 198
   1689a:	94 e1       	ldi	r25, 0x14	; 20
   1689c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   168a0:	47 e0       	ldi	r20, 0x07	; 7
   168a2:	50 e0       	ldi	r21, 0x00	; 0
   168a4:	b7 01       	movw	r22, r14
   168a6:	86 ec       	ldi	r24, 0xC6	; 198
   168a8:	94 e1       	ldi	r25, 0x14	; 20
   168aa:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
   168ae:	86 ec       	ldi	r24, 0xC6	; 198
   168b0:	94 e1       	ldi	r25, 0x14	; 20
   168b2:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   168b6:	86 ec       	ldi	r24, 0xC6	; 198
   168b8:	94 e1       	ldi	r25, 0x14	; 20
   168ba:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   168be:	79 e0       	ldi	r23, 0x09	; 9
   168c0:	a7 2e       	mov	r10, r23
   168c2:	74 e1       	ldi	r23, 0x14	; 20
   168c4:	b7 2e       	mov	r11, r23
   168c6:	c1 2c       	mov	r12, r1
   168c8:	d1 2c       	mov	r13, r1
   168ca:	f5 01       	movw	r30, r10
   168cc:	81 91       	ld	r24, Z+
   168ce:	5f 01       	movw	r10, r30
   168d0:	f4 01       	movw	r30, r8
   168d2:	ec 0d       	add	r30, r12
   168d4:	fd 1d       	adc	r31, r13
   168d6:	eb 5e       	subi	r30, 0xEB	; 235
   168d8:	f3 4f       	sbci	r31, 0xF3	; 243
   168da:	91 81       	ldd	r25, Z+1	; 0x01
   168dc:	98 17       	cp	r25, r24
   168de:	09 f4       	brne	.+2      	; 0x168e2 <_Z22Valve_Grouping_Handlerh+0xbce>
   168e0:	5d c0       	rjmp	.+186    	; 0x1699c <_Z22Valve_Grouping_Handlerh+0xc88>
   168e2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   168e6:	81 30       	cpi	r24, 0x01	; 1
   168e8:	51 f4       	brne	.+20     	; 0x168fe <_Z22Valve_Grouping_Handlerh+0xbea>
   168ea:	60 e4       	ldi	r22, 0x40	; 64
   168ec:	7d e3       	ldi	r23, 0x3D	; 61
   168ee:	86 ec       	ldi	r24, 0xC6	; 198
   168f0:	94 e1       	ldi	r25, 0x14	; 20
   168f2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   168f6:	86 ec       	ldi	r24, 0xC6	; 198
   168f8:	94 e1       	ldi	r25, 0x14	; 20
   168fa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   168fe:	f2 e0       	ldi	r31, 0x02	; 2
   16900:	3f 12       	cpse	r3, r31
   16902:	4c c0       	rjmp	.+152    	; 0x1699c <_Z22Valve_Grouping_Handlerh+0xc88>
   16904:	86 e0       	ldi	r24, 0x06	; 6
   16906:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1690a:	84 e6       	ldi	r24, 0x64	; 100
   1690c:	90 e0       	ldi	r25, 0x00	; 0
   1690e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16912:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16916:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1691a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1691e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16922:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16926:	a0 62       	ori	r26, 0x20	; 32
   16928:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1692c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16930:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16934:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16938:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   1693c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16940:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16944:	82 60       	ori	r24, 0x02	; 2
   16946:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1694a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1694e:	00 e0       	ldi	r16, 0x00	; 0
   16950:	10 e0       	ldi	r17, 0x00	; 0
   16952:	66 e0       	ldi	r22, 0x06	; 6
   16954:	f6 2e       	mov	r15, r22
   16956:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1695a:	90 e0       	ldi	r25, 0x00	; 0
   1695c:	01 97       	sbiw	r24, 0x01	; 1
   1695e:	f8 9e       	mul	r15, r24
   16960:	f0 01       	movw	r30, r0
   16962:	f9 9e       	mul	r15, r25
   16964:	f0 0d       	add	r31, r0
   16966:	11 24       	eor	r1, r1
   16968:	e2 5b       	subi	r30, 0xB2	; 178
   1696a:	f2 4f       	sbci	r31, 0xF2	; 242
   1696c:	e0 0f       	add	r30, r16
   1696e:	f1 1f       	adc	r31, r17
   16970:	e1 81       	ldd	r30, Z+1	; 0x01
   16972:	e3 31       	cpi	r30, 0x13	; 19
   16974:	68 f0       	brcs	.+26     	; 0x16990 <_Z22Valve_Grouping_Handlerh+0xc7c>
   16976:	f0 e0       	ldi	r31, 0x00	; 0
   16978:	e7 5c       	subi	r30, 0xC7	; 199
   1697a:	fb 4e       	sbci	r31, 0xEB	; 235
   1697c:	61 e0       	ldi	r22, 0x01	; 1
   1697e:	80 81       	ld	r24, Z
   16980:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   16984:	68 ec       	ldi	r22, 0xC8	; 200
   16986:	70 e0       	ldi	r23, 0x00	; 0
   16988:	80 e0       	ldi	r24, 0x00	; 0
   1698a:	90 e0       	ldi	r25, 0x00	; 0
   1698c:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16990:	0f 5f       	subi	r16, 0xFF	; 255
   16992:	1f 4f       	sbci	r17, 0xFF	; 255
   16994:	05 30       	cpi	r16, 0x05	; 5
   16996:	11 05       	cpc	r17, r1
   16998:	f1 f6       	brne	.-68     	; 0x16956 <_Z22Valve_Grouping_Handlerh+0xc42>
   1699a:	9f c4       	rjmp	.+2366   	; 0x172da <_Z22Valve_Grouping_Handlerh+0x15c6>
   1699c:	2f ef       	ldi	r18, 0xFF	; 255
   1699e:	c2 1a       	sub	r12, r18
   169a0:	d2 0a       	sbc	r13, r18
   169a2:	36 e0       	ldi	r19, 0x06	; 6
   169a4:	c3 16       	cp	r12, r19
   169a6:	d1 04       	cpc	r13, r1
   169a8:	09 f0       	breq	.+2      	; 0x169ac <_Z22Valve_Grouping_Handlerh+0xc98>
   169aa:	8f cf       	rjmp	.-226    	; 0x168ca <_Z22Valve_Grouping_Handlerh+0xbb6>
   169ac:	e1 e0       	ldi	r30, 0x01	; 1
   169ae:	ab a9       	ldd	r26, Y+51	; 0x33
   169b0:	bc a9       	ldd	r27, Y+52	; 0x34
   169b2:	ec 93       	st	X, r30
   169b4:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   169b8:	90 e0       	ldi	r25, 0x00	; 0
   169ba:	98 2f       	mov	r25, r24
   169bc:	88 27       	eor	r24, r24
   169be:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   169c2:	82 2b       	or	r24, r18
   169c4:	ad a9       	ldd	r26, Y+53	; 0x35
   169c6:	be a9       	ldd	r27, Y+54	; 0x36
   169c8:	8d 93       	st	X+, r24
   169ca:	9c 93       	st	X, r25
   169cc:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   169d0:	58 16       	cp	r5, r24
   169d2:	09 f4       	brne	.+2      	; 0x169d6 <_Z22Valve_Grouping_Handlerh+0xcc2>
   169d4:	17 c1       	rjmp	.+558    	; 0x16c04 <_Z22Valve_Grouping_Handlerh+0xef0>
   169d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   169da:	81 30       	cpi	r24, 0x01	; 1
   169dc:	51 f4       	brne	.+20     	; 0x169f2 <_Z22Valve_Grouping_Handlerh+0xcde>
   169de:	6d e2       	ldi	r22, 0x2D	; 45
   169e0:	7d e3       	ldi	r23, 0x3D	; 61
   169e2:	86 ec       	ldi	r24, 0xC6	; 198
   169e4:	94 e1       	ldi	r25, 0x14	; 20
   169e6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   169ea:	86 ec       	ldi	r24, 0xC6	; 198
   169ec:	94 e1       	ldi	r25, 0x14	; 20
   169ee:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   169f2:	b2 e0       	ldi	r27, 0x02	; 2
   169f4:	3b 12       	cpse	r3, r27
   169f6:	08 c1       	rjmp	.+528    	; 0x16c08 <_Z22Valve_Grouping_Handlerh+0xef4>
   169f8:	86 e0       	ldi	r24, 0x06	; 6
   169fa:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   169fe:	84 e6       	ldi	r24, 0x64	; 100
   16a00:	90 e0       	ldi	r25, 0x00	; 0
   16a02:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16a06:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16a0a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16a0e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16a12:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16a16:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16a1a:	a0 62       	ori	r26, 0x20	; 32
   16a1c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16a20:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16a24:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16a28:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16a2c:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16a30:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16a34:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16a38:	82 60       	ori	r24, 0x02	; 2
   16a3a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16a3e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16a42:	00 e0       	ldi	r16, 0x00	; 0
   16a44:	10 e0       	ldi	r17, 0x00	; 0
   16a46:	46 e0       	ldi	r20, 0x06	; 6
   16a48:	f4 2e       	mov	r15, r20
   16a4a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16a4e:	90 e0       	ldi	r25, 0x00	; 0
   16a50:	01 97       	sbiw	r24, 0x01	; 1
   16a52:	f8 9e       	mul	r15, r24
   16a54:	f0 01       	movw	r30, r0
   16a56:	f9 9e       	mul	r15, r25
   16a58:	f0 0d       	add	r31, r0
   16a5a:	11 24       	eor	r1, r1
   16a5c:	e2 5b       	subi	r30, 0xB2	; 178
   16a5e:	f2 4f       	sbci	r31, 0xF2	; 242
   16a60:	e0 0f       	add	r30, r16
   16a62:	f1 1f       	adc	r31, r17
   16a64:	e1 81       	ldd	r30, Z+1	; 0x01
   16a66:	e3 31       	cpi	r30, 0x13	; 19
   16a68:	68 f0       	brcs	.+26     	; 0x16a84 <_Z22Valve_Grouping_Handlerh+0xd70>
   16a6a:	f0 e0       	ldi	r31, 0x00	; 0
   16a6c:	e7 5c       	subi	r30, 0xC7	; 199
   16a6e:	fb 4e       	sbci	r31, 0xEB	; 235
   16a70:	61 e0       	ldi	r22, 0x01	; 1
   16a72:	80 81       	ld	r24, Z
   16a74:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   16a78:	68 ec       	ldi	r22, 0xC8	; 200
   16a7a:	70 e0       	ldi	r23, 0x00	; 0
   16a7c:	80 e0       	ldi	r24, 0x00	; 0
   16a7e:	90 e0       	ldi	r25, 0x00	; 0
   16a80:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16a84:	0f 5f       	subi	r16, 0xFF	; 255
   16a86:	1f 4f       	sbci	r17, 0xFF	; 255
   16a88:	05 30       	cpi	r16, 0x05	; 5
   16a8a:	11 05       	cpc	r17, r1
   16a8c:	f1 f6       	brne	.-68     	; 0x16a4a <_Z22Valve_Grouping_Handlerh+0xd36>
   16a8e:	25 c4       	rjmp	.+2122   	; 0x172da <_Z22Valve_Grouping_Handlerh+0x15c6>
   16a90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16a94:	81 30       	cpi	r24, 0x01	; 1
   16a96:	51 f4       	brne	.+20     	; 0x16aac <_Z22Valve_Grouping_Handlerh+0xd98>
   16a98:	62 ef       	ldi	r22, 0xF2	; 242
   16a9a:	7c e3       	ldi	r23, 0x3C	; 60
   16a9c:	86 ec       	ldi	r24, 0xC6	; 198
   16a9e:	94 e1       	ldi	r25, 0x14	; 20
   16aa0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   16aa4:	86 ec       	ldi	r24, 0xC6	; 198
   16aa6:	94 e1       	ldi	r25, 0x14	; 20
   16aa8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16aac:	e2 e0       	ldi	r30, 0x02	; 2
   16aae:	3e 12       	cpse	r3, r30
   16ab0:	ab c0       	rjmp	.+342    	; 0x16c08 <_Z22Valve_Grouping_Handlerh+0xef4>
   16ab2:	86 e0       	ldi	r24, 0x06	; 6
   16ab4:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16ab8:	84 e6       	ldi	r24, 0x64	; 100
   16aba:	90 e0       	ldi	r25, 0x00	; 0
   16abc:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16ac0:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16ac4:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16ac8:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16acc:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16ad0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16ad4:	a0 62       	ori	r26, 0x20	; 32
   16ad6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16ada:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16ade:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16ae2:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16ae6:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16aea:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16aee:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16af2:	82 60       	ori	r24, 0x02	; 2
   16af4:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16af8:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16afc:	00 e0       	ldi	r16, 0x00	; 0
   16afe:	10 e0       	ldi	r17, 0x00	; 0
   16b00:	36 e0       	ldi	r19, 0x06	; 6
   16b02:	f3 2e       	mov	r15, r19
   16b04:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16b08:	90 e0       	ldi	r25, 0x00	; 0
   16b0a:	01 97       	sbiw	r24, 0x01	; 1
   16b0c:	f8 9e       	mul	r15, r24
   16b0e:	f0 01       	movw	r30, r0
   16b10:	f9 9e       	mul	r15, r25
   16b12:	f0 0d       	add	r31, r0
   16b14:	11 24       	eor	r1, r1
   16b16:	e2 5b       	subi	r30, 0xB2	; 178
   16b18:	f2 4f       	sbci	r31, 0xF2	; 242
   16b1a:	e0 0f       	add	r30, r16
   16b1c:	f1 1f       	adc	r31, r17
   16b1e:	e1 81       	ldd	r30, Z+1	; 0x01
   16b20:	e3 31       	cpi	r30, 0x13	; 19
   16b22:	68 f0       	brcs	.+26     	; 0x16b3e <_Z22Valve_Grouping_Handlerh+0xe2a>
   16b24:	f0 e0       	ldi	r31, 0x00	; 0
   16b26:	e7 5c       	subi	r30, 0xC7	; 199
   16b28:	fb 4e       	sbci	r31, 0xEB	; 235
   16b2a:	61 e0       	ldi	r22, 0x01	; 1
   16b2c:	80 81       	ld	r24, Z
   16b2e:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   16b32:	68 ec       	ldi	r22, 0xC8	; 200
   16b34:	70 e0       	ldi	r23, 0x00	; 0
   16b36:	80 e0       	ldi	r24, 0x00	; 0
   16b38:	90 e0       	ldi	r25, 0x00	; 0
   16b3a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16b3e:	0f 5f       	subi	r16, 0xFF	; 255
   16b40:	1f 4f       	sbci	r17, 0xFF	; 255
   16b42:	05 30       	cpi	r16, 0x05	; 5
   16b44:	11 05       	cpc	r17, r1
   16b46:	f1 f6       	brne	.-68     	; 0x16b04 <_Z22Valve_Grouping_Handlerh+0xdf0>
   16b48:	c8 c3       	rjmp	.+1936   	; 0x172da <_Z22Valve_Grouping_Handlerh+0x15c6>
   16b4a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16b4e:	81 30       	cpi	r24, 0x01	; 1
   16b50:	51 f4       	brne	.+20     	; 0x16b66 <_Z22Valve_Grouping_Handlerh+0xe52>
   16b52:	67 eb       	ldi	r22, 0xB7	; 183
   16b54:	7c e3       	ldi	r23, 0x3C	; 60
   16b56:	86 ec       	ldi	r24, 0xC6	; 198
   16b58:	94 e1       	ldi	r25, 0x14	; 20
   16b5a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   16b5e:	86 ec       	ldi	r24, 0xC6	; 198
   16b60:	94 e1       	ldi	r25, 0x14	; 20
   16b62:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16b66:	f2 e0       	ldi	r31, 0x02	; 2
   16b68:	3f 12       	cpse	r3, r31
   16b6a:	4e c0       	rjmp	.+156    	; 0x16c08 <_Z22Valve_Grouping_Handlerh+0xef4>
   16b6c:	86 e0       	ldi	r24, 0x06	; 6
   16b6e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16b72:	84 e6       	ldi	r24, 0x64	; 100
   16b74:	90 e0       	ldi	r25, 0x00	; 0
   16b76:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16b7a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16b7e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16b82:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16b86:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16b8a:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16b8e:	a0 62       	ori	r26, 0x20	; 32
   16b90:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16b94:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16b98:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16b9c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16ba0:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16ba4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16ba8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16bac:	82 60       	ori	r24, 0x02	; 2
   16bae:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16bb2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16bb6:	00 e0       	ldi	r16, 0x00	; 0
   16bb8:	10 e0       	ldi	r17, 0x00	; 0
   16bba:	26 e0       	ldi	r18, 0x06	; 6
   16bbc:	f2 2e       	mov	r15, r18
   16bbe:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16bc2:	90 e0       	ldi	r25, 0x00	; 0
   16bc4:	01 97       	sbiw	r24, 0x01	; 1
   16bc6:	f8 9e       	mul	r15, r24
   16bc8:	f0 01       	movw	r30, r0
   16bca:	f9 9e       	mul	r15, r25
   16bcc:	f0 0d       	add	r31, r0
   16bce:	11 24       	eor	r1, r1
   16bd0:	e2 5b       	subi	r30, 0xB2	; 178
   16bd2:	f2 4f       	sbci	r31, 0xF2	; 242
   16bd4:	e0 0f       	add	r30, r16
   16bd6:	f1 1f       	adc	r31, r17
   16bd8:	e1 81       	ldd	r30, Z+1	; 0x01
   16bda:	e3 31       	cpi	r30, 0x13	; 19
   16bdc:	68 f0       	brcs	.+26     	; 0x16bf8 <_Z22Valve_Grouping_Handlerh+0xee4>
   16bde:	f0 e0       	ldi	r31, 0x00	; 0
   16be0:	e7 5c       	subi	r30, 0xC7	; 199
   16be2:	fb 4e       	sbci	r31, 0xEB	; 235
   16be4:	61 e0       	ldi	r22, 0x01	; 1
   16be6:	80 81       	ld	r24, Z
   16be8:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   16bec:	68 ec       	ldi	r22, 0xC8	; 200
   16bee:	70 e0       	ldi	r23, 0x00	; 0
   16bf0:	80 e0       	ldi	r24, 0x00	; 0
   16bf2:	90 e0       	ldi	r25, 0x00	; 0
   16bf4:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16bf8:	0f 5f       	subi	r16, 0xFF	; 255
   16bfa:	1f 4f       	sbci	r17, 0xFF	; 255
   16bfc:	05 30       	cpi	r16, 0x05	; 5
   16bfe:	11 05       	cpc	r17, r1
   16c00:	f1 f6       	brne	.-68     	; 0x16bbe <_Z22Valve_Grouping_Handlerh+0xeaa>
   16c02:	6b c3       	rjmp	.+1750   	; 0x172da <_Z22Valve_Grouping_Handlerh+0x15c6>
   16c04:	93 e0       	ldi	r25, 0x03	; 3
   16c06:	39 2e       	mov	r3, r25
   16c08:	68 ee       	ldi	r22, 0xE8	; 232
   16c0a:	73 e0       	ldi	r23, 0x03	; 3
   16c0c:	80 e0       	ldi	r24, 0x00	; 0
   16c0e:	90 e0       	ldi	r25, 0x00	; 0
   16c10:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16c14:	23 e0       	ldi	r18, 0x03	; 3
   16c16:	32 12       	cpse	r3, r18
   16c18:	d5 cd       	rjmp	.-1110   	; 0x167c4 <_Z22Valve_Grouping_Handlerh+0xab0>
   16c1a:	2b c0       	rjmp	.+86     	; 0x16c72 <_Z22Valve_Grouping_Handlerh+0xf5e>
   16c1c:	8d ee       	ldi	r24, 0xED	; 237
   16c1e:	8f 0d       	add	r24, r15
   16c20:	81 35       	cpi	r24, 0x51	; 81
   16c22:	78 f4       	brcc	.+30     	; 0x16c42 <_Z22Valve_Grouping_Handlerh+0xf2e>
   16c24:	ef 2d       	mov	r30, r15
   16c26:	f0 e0       	ldi	r31, 0x00	; 0
   16c28:	e7 5c       	subi	r30, 0xC7	; 199
   16c2a:	fb 4e       	sbci	r31, 0xEB	; 235
   16c2c:	6f a9       	ldd	r22, Y+55	; 0x37
   16c2e:	80 81       	ld	r24, Z
   16c30:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   16c34:	68 ec       	ldi	r22, 0xC8	; 200
   16c36:	70 e0       	ldi	r23, 0x00	; 0
   16c38:	80 e0       	ldi	r24, 0x00	; 0
   16c3a:	90 e0       	ldi	r25, 0x00	; 0
   16c3c:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   16c40:	18 c0       	rjmp	.+48     	; 0x16c72 <_Z22Valve_Grouping_Handlerh+0xf5e>
   16c42:	35 e6       	ldi	r19, 0x65	; 101
   16c44:	f3 12       	cpse	r15, r19
   16c46:	15 c0       	rjmp	.+42     	; 0x16c72 <_Z22Valve_Grouping_Handlerh+0xf5e>
   16c48:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   16c4c:	41 e0       	ldi	r20, 0x01	; 1
   16c4e:	54 12       	cpse	r5, r20
   16c50:	05 c0       	rjmp	.+10     	; 0x16c5c <_Z22Valve_Grouping_Handlerh+0xf48>
   16c52:	88 23       	and	r24, r24
   16c54:	71 f0       	breq	.+28     	; 0x16c72 <_Z22Valve_Grouping_Handlerh+0xf5e>
   16c56:	50 92 7b 14 	sts	0x147B, r5	; 0x80147b <_sRuble_Parameters+0xcd>
   16c5a:	05 c0       	rjmp	.+10     	; 0x16c66 <_Z22Valve_Grouping_Handlerh+0xf52>
   16c5c:	88 23       	and	r24, r24
   16c5e:	49 f0       	breq	.+18     	; 0x16c72 <_Z22Valve_Grouping_Handlerh+0xf5e>
   16c60:	82 e0       	ldi	r24, 0x02	; 2
   16c62:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   16c66:	6b e7       	ldi	r22, 0x7B	; 123
   16c68:	74 e1       	ldi	r23, 0x14	; 20
   16c6a:	88 ea       	ldi	r24, 0xA8	; 168
   16c6c:	9c e0       	ldi	r25, 0x0C	; 12
   16c6e:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16c72:	0f 5f       	subi	r16, 0xFF	; 255
   16c74:	1f 4f       	sbci	r17, 0xFF	; 255
   16c76:	05 30       	cpi	r16, 0x05	; 5
   16c78:	11 05       	cpc	r17, r1
   16c7a:	09 f0       	breq	.+2      	; 0x16c7e <_Z22Valve_Grouping_Handlerh+0xf6a>
   16c7c:	c6 cc       	rjmp	.-1652   	; 0x1660a <_Z22Valve_Grouping_Handlerh+0x8f6>
   16c7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16c82:	81 30       	cpi	r24, 0x01	; 1
   16c84:	09 f0       	breq	.+2      	; 0x16c88 <_Z22Valve_Grouping_Handlerh+0xf74>
   16c86:	80 c3       	rjmp	.+1792   	; 0x17388 <_Z22Valve_Grouping_Handlerh+0x1674>
   16c88:	68 e9       	ldi	r22, 0x98	; 152
   16c8a:	7c e3       	ldi	r23, 0x3C	; 60
   16c8c:	73 c3       	rjmp	.+1766   	; 0x17374 <_Z22Valve_Grouping_Handlerh+0x1660>
   16c8e:	81 30       	cpi	r24, 0x01	; 1
   16c90:	51 f4       	brne	.+20     	; 0x16ca6 <_Z22Valve_Grouping_Handlerh+0xf92>
   16c92:	6a e8       	ldi	r22, 0x8A	; 138
   16c94:	7c e3       	ldi	r23, 0x3C	; 60
   16c96:	86 ec       	ldi	r24, 0xC6	; 198
   16c98:	94 e1       	ldi	r25, 0x14	; 20
   16c9a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   16c9e:	86 ec       	ldi	r24, 0xC6	; 198
   16ca0:	94 e1       	ldi	r25, 0x14	; 20
   16ca2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16ca6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16caa:	81 30       	cpi	r24, 0x01	; 1
   16cac:	d1 f0       	breq	.+52     	; 0x16ce2 <_Z22Valve_Grouping_Handlerh+0xfce>
   16cae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16cb2:	81 30       	cpi	r24, 0x01	; 1
   16cb4:	d9 f5       	brne	.+118    	; 0x16d2c <_Z22Valve_Grouping_Handlerh+0x1018>
   16cb6:	62 e7       	ldi	r22, 0x72	; 114
   16cb8:	7c e3       	ldi	r23, 0x3C	; 60
   16cba:	86 ec       	ldi	r24, 0xC6	; 198
   16cbc:	94 e1       	ldi	r25, 0x14	; 20
   16cbe:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   16cc2:	60 91 1e 14 	lds	r22, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16cc6:	70 e0       	ldi	r23, 0x00	; 0
   16cc8:	61 50       	subi	r22, 0x01	; 1
   16cca:	71 09       	sbc	r23, r1
   16ccc:	4a e0       	ldi	r20, 0x0A	; 10
   16cce:	50 e0       	ldi	r21, 0x00	; 0
   16cd0:	86 ec       	ldi	r24, 0xC6	; 198
   16cd2:	94 e1       	ldi	r25, 0x14	; 20
   16cd4:	0e 94 aa d5 	call	0x1ab54	; 0x1ab54 <_ZN5Print7printlnEii>
   16cd8:	86 ec       	ldi	r24, 0xC6	; 198
   16cda:	94 e1       	ldi	r25, 0x14	; 20
   16cdc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16ce0:	25 c0       	rjmp	.+74     	; 0x16d2c <_Z22Valve_Grouping_Handlerh+0x1018>
   16ce2:	00 e0       	ldi	r16, 0x00	; 0
   16ce4:	10 e0       	ldi	r17, 0x00	; 0
   16ce6:	8b e1       	ldi	r24, 0x1B	; 27
   16ce8:	f8 2e       	mov	r15, r24
   16cea:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16cee:	90 e0       	ldi	r25, 0x00	; 0
   16cf0:	85 56       	subi	r24, 0x65	; 101
   16cf2:	91 09       	sbc	r25, r1
   16cf4:	f8 9e       	mul	r15, r24
   16cf6:	f0 01       	movw	r30, r0
   16cf8:	f9 9e       	mul	r15, r25
   16cfa:	f0 0d       	add	r31, r0
   16cfc:	11 24       	eor	r1, r1
   16cfe:	e8 51       	subi	r30, 0x18	; 24
   16d00:	f2 4f       	sbci	r31, 0xF2	; 242
   16d02:	e0 0f       	add	r30, r16
   16d04:	f1 1f       	adc	r31, r17
   16d06:	4a e0       	ldi	r20, 0x0A	; 10
   16d08:	50 e0       	ldi	r21, 0x00	; 0
   16d0a:	65 81       	ldd	r22, Z+5	; 0x05
   16d0c:	86 ec       	ldi	r24, 0xC6	; 198
   16d0e:	94 e1       	ldi	r25, 0x14	; 20
   16d10:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   16d14:	68 e8       	ldi	r22, 0x88	; 136
   16d16:	7c e3       	ldi	r23, 0x3C	; 60
   16d18:	86 ec       	ldi	r24, 0xC6	; 198
   16d1a:	94 e1       	ldi	r25, 0x14	; 20
   16d1c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   16d20:	0f 5f       	subi	r16, 0xFF	; 255
   16d22:	1f 4f       	sbci	r17, 0xFF	; 255
   16d24:	05 30       	cpi	r16, 0x05	; 5
   16d26:	11 05       	cpc	r17, r1
   16d28:	01 f7       	brne	.-64     	; 0x16cea <_Z22Valve_Grouping_Handlerh+0xfd6>
   16d2a:	c1 cf       	rjmp	.-126    	; 0x16cae <_Z22Valve_Grouping_Handlerh+0xf9a>
   16d2c:	00 e0       	ldi	r16, 0x00	; 0
   16d2e:	10 e0       	ldi	r17, 0x00	; 0
   16d30:	81 e0       	ldi	r24, 0x01	; 1
   16d32:	85 25       	eor	r24, r5
   16d34:	81 70       	andi	r24, 0x01	; 1
   16d36:	8b ab       	std	Y+51, r24	; 0x33
   16d38:	ad e0       	ldi	r26, 0x0D	; 13
   16d3a:	2a 2e       	mov	r2, r26
   16d3c:	b0 ed       	ldi	r27, 0xD0	; 208
   16d3e:	ab 2e       	mov	r10, r27
   16d40:	bf e0       	ldi	r27, 0x0F	; 15
   16d42:	bb 2e       	mov	r11, r27
   16d44:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16d48:	90 e0       	ldi	r25, 0x00	; 0
   16d4a:	9c 01       	movw	r18, r24
   16d4c:	25 56       	subi	r18, 0x65	; 101
   16d4e:	31 09       	sbc	r19, r1
   16d50:	5b e1       	ldi	r21, 0x1B	; 27
   16d52:	52 9f       	mul	r21, r18
   16d54:	f0 01       	movw	r30, r0
   16d56:	53 9f       	mul	r21, r19
   16d58:	f0 0d       	add	r31, r0
   16d5a:	11 24       	eor	r1, r1
   16d5c:	e8 51       	subi	r30, 0x18	; 24
   16d5e:	f2 4f       	sbci	r31, 0xF2	; 242
   16d60:	e0 0f       	add	r30, r16
   16d62:	f1 1f       	adc	r31, r17
   16d64:	f5 80       	ldd	r15, Z+5	; 0x05
   16d66:	2f ef       	ldi	r18, 0xFF	; 255
   16d68:	2f 0d       	add	r18, r15
   16d6a:	22 31       	cpi	r18, 0x12	; 18
   16d6c:	08 f0       	brcs	.+2      	; 0x16d70 <_Z22Valve_Grouping_Handlerh+0x105c>
   16d6e:	c1 c2       	rjmp	.+1410   	; 0x172f2 <_Z22Valve_Grouping_Handlerh+0x15de>
   16d70:	63 e0       	ldi	r22, 0x03	; 3
   16d72:	6f 15       	cp	r22, r15
   16d74:	a8 f4       	brcc	.+42     	; 0x16da0 <_Z22Valve_Grouping_Handlerh+0x108c>
   16d76:	6b ea       	ldi	r22, 0xAB	; 171
   16d78:	f6 9e       	mul	r15, r22
   16d7a:	61 2d       	mov	r22, r1
   16d7c:	11 24       	eor	r1, r1
   16d7e:	86 2f       	mov	r24, r22
   16d80:	86 95       	lsr	r24
   16d82:	98 2f       	mov	r25, r24
   16d84:	99 0f       	add	r25, r25
   16d86:	89 0f       	add	r24, r25
   16d88:	f8 1a       	sub	r15, r24
   16d8a:	66 95       	lsr	r22
   16d8c:	ff 20       	and	r15, r15
   16d8e:	21 f0       	breq	.+8      	; 0x16d98 <_Z22Valve_Grouping_Handlerh+0x1084>
   16d90:	ee 24       	eor	r14, r14
   16d92:	e3 94       	inc	r14
   16d94:	e6 0e       	add	r14, r22
   16d96:	06 c0       	rjmp	.+12     	; 0x16da4 <_Z22Valve_Grouping_Handlerh+0x1090>
   16d98:	e6 2e       	mov	r14, r22
   16d9a:	f3 e0       	ldi	r31, 0x03	; 3
   16d9c:	ff 2e       	mov	r15, r31
   16d9e:	02 c0       	rjmp	.+4      	; 0x16da4 <_Z22Valve_Grouping_Handlerh+0x1090>
   16da0:	ee 24       	eor	r14, r14
   16da2:	e3 94       	inc	r14
   16da4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16da8:	81 30       	cpi	r24, 0x01	; 1
   16daa:	89 f4       	brne	.+34     	; 0x16dce <_Z22Valve_Grouping_Handlerh+0x10ba>
   16dac:	6e e5       	ldi	r22, 0x5E	; 94
   16dae:	7c e3       	ldi	r23, 0x3C	; 60
   16db0:	86 ec       	ldi	r24, 0xC6	; 198
   16db2:	94 e1       	ldi	r25, 0x14	; 20
   16db4:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   16db8:	4a e0       	ldi	r20, 0x0A	; 10
   16dba:	50 e0       	ldi	r21, 0x00	; 0
   16dbc:	6e 2d       	mov	r22, r14
   16dbe:	86 ec       	ldi	r24, 0xC6	; 198
   16dc0:	94 e1       	ldi	r25, 0x14	; 20
   16dc2:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   16dc6:	86 ec       	ldi	r24, 0xC6	; 198
   16dc8:	94 e1       	ldi	r25, 0x14	; 20
   16dca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16dce:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   16dd2:	81 11       	cpse	r24, r1
   16dd4:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   16dd8:	84 e1       	ldi	r24, 0x14	; 20
   16dda:	a5 ef       	ldi	r26, 0xF5	; 245
   16ddc:	b3 e1       	ldi	r27, 0x13	; 19
   16dde:	1d 92       	st	X+, r1
   16de0:	8a 95       	dec	r24
   16de2:	e9 f7       	brne	.-6      	; 0x16dde <_Z22Valve_Grouping_Handlerh+0x10ca>
   16de4:	6e 2d       	mov	r22, r14
   16de6:	70 e0       	ldi	r23, 0x00	; 0
   16de8:	61 50       	subi	r22, 0x01	; 1
   16dea:	71 09       	sbc	r23, r1
   16dec:	b7 e0       	ldi	r27, 0x07	; 7
   16dee:	b6 9f       	mul	r27, r22
   16df0:	c0 01       	movw	r24, r0
   16df2:	b7 9f       	mul	r27, r23
   16df4:	90 0d       	add	r25, r0
   16df6:	11 24       	eor	r1, r1
   16df8:	82 55       	subi	r24, 0x52	; 82
   16dfa:	9c 4e       	sbci	r25, 0xEC	; 236
   16dfc:	fc 01       	movw	r30, r24
   16dfe:	ec 58       	subi	r30, 0x8C	; 140
   16e00:	ff 4f       	sbci	r31, 0xFF	; 255
   16e02:	20 81       	ld	r18, Z
   16e04:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   16e08:	31 96       	adiw	r30, 0x01	; 1
   16e0a:	20 81       	ld	r18, Z
   16e0c:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   16e10:	31 96       	adiw	r30, 0x01	; 1
   16e12:	20 81       	ld	r18, Z
   16e14:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   16e18:	31 96       	adiw	r30, 0x01	; 1
   16e1a:	20 81       	ld	r18, Z
   16e1c:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   16e20:	31 96       	adiw	r30, 0x01	; 1
   16e22:	20 81       	ld	r18, Z
   16e24:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   16e28:	31 96       	adiw	r30, 0x01	; 1
   16e2a:	20 81       	ld	r18, Z
   16e2c:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   16e30:	22 e0       	ldi	r18, 0x02	; 2
   16e32:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   16e36:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0x4e>
   16e3a:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16e3e:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   16e42:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   16e46:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   16e4a:	f0 92 00 14 	sts	0x1400, r15	; 0x801400 <_sRuble_Parameters+0x52>
   16e4e:	40 e0       	ldi	r20, 0x00	; 0
   16e50:	50 e0       	ldi	r21, 0x00	; 0
   16e52:	d4 2e       	mov	r13, r20
   16e54:	e1 2c       	mov	r14, r1
   16e56:	f1 2c       	mov	r15, r1
   16e58:	24 9e       	mul	r2, r20
   16e5a:	b0 01       	movw	r22, r0
   16e5c:	25 9e       	mul	r2, r21
   16e5e:	70 0d       	add	r23, r0
   16e60:	11 24       	eor	r1, r1
   16e62:	6b 5e       	subi	r22, 0xEB	; 235
   16e64:	73 4f       	sbci	r23, 0xF3	; 243
   16e66:	2f 2d       	mov	r18, r15
   16e68:	30 e0       	ldi	r19, 0x00	; 0
   16e6a:	fb 01       	movw	r30, r22
   16e6c:	e2 0f       	add	r30, r18
   16e6e:	f3 1f       	adc	r31, r19
   16e70:	28 0f       	add	r18, r24
   16e72:	39 1f       	adc	r19, r25
   16e74:	d9 01       	movw	r26, r18
   16e76:	ac 58       	subi	r26, 0x8C	; 140
   16e78:	bf 4f       	sbci	r27, 0xFF	; 255
   16e7a:	31 81       	ldd	r19, Z+1	; 0x01
   16e7c:	2c 91       	ld	r18, X
   16e7e:	32 17       	cp	r19, r18
   16e80:	19 f0       	breq	.+6      	; 0x16e88 <_Z22Valve_Grouping_Handlerh+0x1174>
   16e82:	e1 2c       	mov	r14, r1
   16e84:	e6 e0       	ldi	r30, 0x06	; 6
   16e86:	fe 2e       	mov	r15, r30
   16e88:	e3 94       	inc	r14
   16e8a:	f3 94       	inc	r15
   16e8c:	e5 e0       	ldi	r30, 0x05	; 5
   16e8e:	ef 15       	cp	r30, r15
   16e90:	50 f7       	brcc	.-44     	; 0x16e66 <_Z22Valve_Grouping_Handlerh+0x1152>
   16e92:	f6 e0       	ldi	r31, 0x06	; 6
   16e94:	ef 16       	cp	r14, r31
   16e96:	31 f0       	breq	.+12     	; 0x16ea4 <_Z22Valve_Grouping_Handlerh+0x1190>
   16e98:	4f 5f       	subi	r20, 0xFF	; 255
   16e9a:	5f 4f       	sbci	r21, 0xFF	; 255
   16e9c:	46 30       	cpi	r20, 0x06	; 6
   16e9e:	51 05       	cpc	r21, r1
   16ea0:	c1 f6       	brne	.-80     	; 0x16e52 <_Z22Valve_Grouping_Handlerh+0x113e>
   16ea2:	01 c0       	rjmp	.+2      	; 0x16ea6 <_Z22Valve_Grouping_Handlerh+0x1192>
   16ea4:	4d 2c       	mov	r4, r13
   16ea6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16eaa:	81 30       	cpi	r24, 0x01	; 1
   16eac:	89 f4       	brne	.+34     	; 0x16ed0 <_Z22Valve_Grouping_Handlerh+0x11bc>
   16eae:	68 e4       	ldi	r22, 0x48	; 72
   16eb0:	7c e3       	ldi	r23, 0x3C	; 60
   16eb2:	86 ec       	ldi	r24, 0xC6	; 198
   16eb4:	94 e1       	ldi	r25, 0x14	; 20
   16eb6:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   16eba:	4a e0       	ldi	r20, 0x0A	; 10
   16ebc:	50 e0       	ldi	r21, 0x00	; 0
   16ebe:	64 2d       	mov	r22, r4
   16ec0:	86 ec       	ldi	r24, 0xC6	; 198
   16ec2:	94 e1       	ldi	r25, 0x14	; 20
   16ec4:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   16ec8:	86 ec       	ldi	r24, 0xC6	; 198
   16eca:	94 e1       	ldi	r25, 0x14	; 20
   16ecc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16ed0:	2d e0       	ldi	r18, 0x0D	; 13
   16ed2:	42 9e       	mul	r4, r18
   16ed4:	40 01       	movw	r8, r0
   16ed6:	11 24       	eor	r1, r1
   16ed8:	31 2c       	mov	r3, r1
   16eda:	24 9c       	mul	r2, r4
   16edc:	c0 01       	movw	r24, r0
   16ede:	11 24       	eor	r1, r1
   16ee0:	9c 01       	movw	r18, r24
   16ee2:	2b 5e       	subi	r18, 0xEB	; 235
   16ee4:	33 4f       	sbci	r19, 0xF3	; 243
   16ee6:	39 01       	movw	r6, r18
   16ee8:	4b e0       	ldi	r20, 0x0B	; 11
   16eea:	64 0e       	add	r6, r20
   16eec:	71 1c       	adc	r7, r1
   16eee:	79 01       	movw	r14, r18
   16ef0:	58 e0       	ldi	r21, 0x08	; 8
   16ef2:	e5 0e       	add	r14, r21
   16ef4:	f1 1c       	adc	r15, r1
   16ef6:	bc 01       	movw	r22, r24
   16ef8:	6a 5e       	subi	r22, 0xEA	; 234
   16efa:	73 4f       	sbci	r23, 0xF3	; 243
   16efc:	6b 01       	movw	r12, r22
   16efe:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   16f02:	88 23       	and	r24, r24
   16f04:	99 f0       	breq	.+38     	; 0x16f2c <_Z22Valve_Grouping_Handlerh+0x1218>
   16f06:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   16f0a:	88 23       	and	r24, r24
   16f0c:	79 f0       	breq	.+30     	; 0x16f2c <_Z22Valve_Grouping_Handlerh+0x1218>
   16f0e:	f5 01       	movw	r30, r10
   16f10:	01 90       	ld	r0, Z+
   16f12:	00 20       	and	r0, r0
   16f14:	e9 f7       	brne	.-6      	; 0x16f10 <_Z22Valve_Grouping_Handlerh+0x11fc>
   16f16:	31 97       	sbiw	r30, 0x01	; 1
   16f18:	af 01       	movw	r20, r30
   16f1a:	40 5d       	subi	r20, 0xD0	; 208
   16f1c:	5f 40       	sbci	r21, 0x0F	; 15
   16f1e:	21 e0       	ldi	r18, 0x01	; 1
   16f20:	60 ed       	ldi	r22, 0xD0	; 208
   16f22:	7f e0       	ldi	r23, 0x0F	; 15
   16f24:	82 e6       	ldi	r24, 0x62	; 98
   16f26:	9f e0       	ldi	r25, 0x0F	; 15
   16f28:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   16f2c:	33 94       	inc	r3
   16f2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16f32:	81 30       	cpi	r24, 0x01	; 1
   16f34:	51 f4       	brne	.+20     	; 0x16f4a <_Z22Valve_Grouping_Handlerh+0x1236>
   16f36:	64 e2       	ldi	r22, 0x24	; 36
   16f38:	7c e3       	ldi	r23, 0x3C	; 60
   16f3a:	86 ec       	ldi	r24, 0xC6	; 198
   16f3c:	94 e1       	ldi	r25, 0x14	; 20
   16f3e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   16f42:	86 ec       	ldi	r24, 0xC6	; 198
   16f44:	94 e1       	ldi	r25, 0x14	; 20
   16f46:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   16f4a:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   16f4e:	8c e0       	ldi	r24, 0x0C	; 12
   16f50:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   16f54:	88 eb       	ldi	r24, 0xB8	; 184
   16f56:	9b e0       	ldi	r25, 0x0B	; 11
   16f58:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
   16f5c:	88 23       	and	r24, r24
   16f5e:	09 f4       	brne	.+2      	; 0x16f62 <_Z22Valve_Grouping_Handlerh+0x124e>
   16f60:	86 c1       	rjmp	.+780    	; 0x1726e <_Z22Valve_Grouping_Handlerh+0x155a>
   16f62:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   16f66:	88 23       	and	r24, r24
   16f68:	09 f4       	brne	.+2      	; 0x16f6c <_Z22Valve_Grouping_Handlerh+0x1258>
   16f6a:	23 c1       	rjmp	.+582    	; 0x171b2 <_Z22Valve_Grouping_Handlerh+0x149e>
   16f6c:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   16f70:	88 23       	and	r24, r24
   16f72:	99 f0       	breq	.+38     	; 0x16f9a <_Z22Valve_Grouping_Handlerh+0x1286>
   16f74:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   16f78:	88 23       	and	r24, r24
   16f7a:	79 f0       	breq	.+30     	; 0x16f9a <_Z22Valve_Grouping_Handlerh+0x1286>
   16f7c:	f5 01       	movw	r30, r10
   16f7e:	01 90       	ld	r0, Z+
   16f80:	00 20       	and	r0, r0
   16f82:	e9 f7       	brne	.-6      	; 0x16f7e <_Z22Valve_Grouping_Handlerh+0x126a>
   16f84:	31 97       	sbiw	r30, 0x01	; 1
   16f86:	af 01       	movw	r20, r30
   16f88:	40 5d       	subi	r20, 0xD0	; 208
   16f8a:	5f 40       	sbci	r21, 0x0F	; 15
   16f8c:	21 e0       	ldi	r18, 0x01	; 1
   16f8e:	60 ed       	ldi	r22, 0xD0	; 208
   16f90:	7f e0       	ldi	r23, 0x0F	; 15
   16f92:	82 e6       	ldi	r24, 0x62	; 98
   16f94:	9f e0       	ldi	r25, 0x0F	; 15
   16f96:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   16f9a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16f9e:	81 30       	cpi	r24, 0x01	; 1
   16fa0:	19 f5       	brne	.+70     	; 0x16fe8 <_Z22Valve_Grouping_Handlerh+0x12d4>
   16fa2:	6e e0       	ldi	r22, 0x0E	; 14
   16fa4:	7c e3       	ldi	r23, 0x3C	; 60
   16fa6:	86 ec       	ldi	r24, 0xC6	; 198
   16fa8:	94 e1       	ldi	r25, 0x14	; 20
   16faa:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   16fae:	4a e0       	ldi	r20, 0x0A	; 10
   16fb0:	50 e0       	ldi	r21, 0x00	; 0
   16fb2:	69 e0       	ldi	r22, 0x09	; 9
   16fb4:	74 e1       	ldi	r23, 0x14	; 20
   16fb6:	86 ec       	ldi	r24, 0xC6	; 198
   16fb8:	94 e1       	ldi	r25, 0x14	; 20
   16fba:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   16fbe:	86 ec       	ldi	r24, 0xC6	; 198
   16fc0:	94 e1       	ldi	r25, 0x14	; 20
   16fc2:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   16fc6:	60 ef       	ldi	r22, 0xF0	; 240
   16fc8:	7b e3       	ldi	r23, 0x3B	; 59
   16fca:	86 ec       	ldi	r24, 0xC6	; 198
   16fcc:	94 e1       	ldi	r25, 0x14	; 20
   16fce:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   16fd2:	47 e0       	ldi	r20, 0x07	; 7
   16fd4:	50 e0       	ldi	r21, 0x00	; 0
   16fd6:	b6 01       	movw	r22, r12
   16fd8:	86 ec       	ldi	r24, 0xC6	; 198
   16fda:	94 e1       	ldi	r25, 0x14	; 20
   16fdc:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
   16fe0:	86 ec       	ldi	r24, 0xC6	; 198
   16fe2:	94 e1       	ldi	r25, 0x14	; 20
   16fe4:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   16fe8:	a9 e0       	ldi	r26, 0x09	; 9
   16fea:	b4 e1       	ldi	r27, 0x14	; 20
   16fec:	80 e0       	ldi	r24, 0x00	; 0
   16fee:	90 e0       	ldi	r25, 0x00	; 0
   16ff0:	2d 91       	ld	r18, X+
   16ff2:	f4 01       	movw	r30, r8
   16ff4:	e8 0f       	add	r30, r24
   16ff6:	f9 1f       	adc	r31, r25
   16ff8:	eb 5e       	subi	r30, 0xEB	; 235
   16ffa:	f3 4f       	sbci	r31, 0xF3	; 243
   16ffc:	31 81       	ldd	r19, Z+1	; 0x01
   16ffe:	32 17       	cp	r19, r18
   17000:	09 f4       	brne	.+2      	; 0x17004 <_Z22Valve_Grouping_Handlerh+0x12f0>
   17002:	73 c0       	rjmp	.+230    	; 0x170ea <_Z22Valve_Grouping_Handlerh+0x13d6>
   17004:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17008:	81 30       	cpi	r24, 0x01	; 1
   1700a:	51 f4       	brne	.+20     	; 0x17020 <_Z22Valve_Grouping_Handlerh+0x130c>
   1700c:	65 ec       	ldi	r22, 0xC5	; 197
   1700e:	7b e3       	ldi	r23, 0x3B	; 59
   17010:	86 ec       	ldi	r24, 0xC6	; 198
   17012:	94 e1       	ldi	r25, 0x14	; 20
   17014:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17018:	86 ec       	ldi	r24, 0xC6	; 198
   1701a:	94 e1       	ldi	r25, 0x14	; 20
   1701c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17020:	72 e0       	ldi	r23, 0x02	; 2
   17022:	37 16       	cp	r3, r23
   17024:	a9 f0       	breq	.+42     	; 0x17050 <_Z22Valve_Grouping_Handlerh+0x133c>
   17026:	e1 e0       	ldi	r30, 0x01	; 1
   17028:	d3 01       	movw	r26, r6
   1702a:	ec 93       	st	X, r30
   1702c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   17030:	90 e0       	ldi	r25, 0x00	; 0
   17032:	98 2f       	mov	r25, r24
   17034:	88 27       	eor	r24, r24
   17036:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   1703a:	82 2b       	or	r24, r18
   1703c:	d7 01       	movw	r26, r14
   1703e:	8d 93       	st	X+, r24
   17040:	9c 93       	st	X, r25
   17042:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   17046:	58 12       	cpse	r5, r24
   17048:	56 c0       	rjmp	.+172    	; 0x170f6 <_Z22Valve_Grouping_Handlerh+0x13e2>
   1704a:	33 e0       	ldi	r19, 0x03	; 3
   1704c:	33 2e       	mov	r3, r19
   1704e:	47 c1       	rjmp	.+654    	; 0x172de <_Z22Valve_Grouping_Handlerh+0x15ca>
   17050:	86 e0       	ldi	r24, 0x06	; 6
   17052:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17056:	84 e6       	ldi	r24, 0x64	; 100
   17058:	90 e0       	ldi	r25, 0x00	; 0
   1705a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1705e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17062:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17066:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1706a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1706e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17072:	a0 62       	ori	r26, 0x20	; 32
   17074:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17078:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1707c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17080:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17084:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   17088:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1708c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17090:	82 60       	ori	r24, 0x02	; 2
   17092:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17096:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1709a:	00 e0       	ldi	r16, 0x00	; 0
   1709c:	10 e0       	ldi	r17, 0x00	; 0
   1709e:	2b e1       	ldi	r18, 0x1B	; 27
   170a0:	f2 2e       	mov	r15, r18
   170a2:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   170a6:	90 e0       	ldi	r25, 0x00	; 0
   170a8:	85 56       	subi	r24, 0x65	; 101
   170aa:	91 09       	sbc	r25, r1
   170ac:	f8 9e       	mul	r15, r24
   170ae:	f0 01       	movw	r30, r0
   170b0:	f9 9e       	mul	r15, r25
   170b2:	f0 0d       	add	r31, r0
   170b4:	11 24       	eor	r1, r1
   170b6:	e8 51       	subi	r30, 0x18	; 24
   170b8:	f2 4f       	sbci	r31, 0xF2	; 242
   170ba:	e0 0f       	add	r30, r16
   170bc:	f1 1f       	adc	r31, r17
   170be:	e5 81       	ldd	r30, Z+5	; 0x05
   170c0:	e3 31       	cpi	r30, 0x13	; 19
   170c2:	68 f0       	brcs	.+26     	; 0x170de <_Z22Valve_Grouping_Handlerh+0x13ca>
   170c4:	f0 e0       	ldi	r31, 0x00	; 0
   170c6:	e7 5c       	subi	r30, 0xC7	; 199
   170c8:	fb 4e       	sbci	r31, 0xEB	; 235
   170ca:	61 e0       	ldi	r22, 0x01	; 1
   170cc:	80 81       	ld	r24, Z
   170ce:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   170d2:	68 ec       	ldi	r22, 0xC8	; 200
   170d4:	70 e0       	ldi	r23, 0x00	; 0
   170d6:	80 e0       	ldi	r24, 0x00	; 0
   170d8:	90 e0       	ldi	r25, 0x00	; 0
   170da:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   170de:	0f 5f       	subi	r16, 0xFF	; 255
   170e0:	1f 4f       	sbci	r17, 0xFF	; 255
   170e2:	05 30       	cpi	r16, 0x05	; 5
   170e4:	11 05       	cpc	r17, r1
   170e6:	e9 f6       	brne	.-70     	; 0x170a2 <_Z22Valve_Grouping_Handlerh+0x138e>
   170e8:	f8 c0       	rjmp	.+496    	; 0x172da <_Z22Valve_Grouping_Handlerh+0x15c6>
   170ea:	01 96       	adiw	r24, 0x01	; 1
   170ec:	86 30       	cpi	r24, 0x06	; 6
   170ee:	91 05       	cpc	r25, r1
   170f0:	09 f0       	breq	.+2      	; 0x170f4 <_Z22Valve_Grouping_Handlerh+0x13e0>
   170f2:	7e cf       	rjmp	.-260    	; 0x16ff0 <_Z22Valve_Grouping_Handlerh+0x12dc>
   170f4:	98 cf       	rjmp	.-208    	; 0x17026 <_Z22Valve_Grouping_Handlerh+0x1312>
   170f6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   170fa:	81 30       	cpi	r24, 0x01	; 1
   170fc:	51 f4       	brne	.+20     	; 0x17112 <_Z22Valve_Grouping_Handlerh+0x13fe>
   170fe:	62 eb       	ldi	r22, 0xB2	; 178
   17100:	7b e3       	ldi	r23, 0x3B	; 59
   17102:	86 ec       	ldi	r24, 0xC6	; 198
   17104:	94 e1       	ldi	r25, 0x14	; 20
   17106:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1710a:	86 ec       	ldi	r24, 0xC6	; 198
   1710c:	94 e1       	ldi	r25, 0x14	; 20
   1710e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17112:	b2 e0       	ldi	r27, 0x02	; 2
   17114:	3b 12       	cpse	r3, r27
   17116:	e3 c0       	rjmp	.+454    	; 0x172de <_Z22Valve_Grouping_Handlerh+0x15ca>
   17118:	86 e0       	ldi	r24, 0x06	; 6
   1711a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1711e:	84 e6       	ldi	r24, 0x64	; 100
   17120:	90 e0       	ldi	r25, 0x00	; 0
   17122:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17126:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   1712a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1712e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17132:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17136:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1713a:	a0 62       	ori	r26, 0x20	; 32
   1713c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17140:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17144:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17148:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1714c:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   17150:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17154:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17158:	82 60       	ori	r24, 0x02	; 2
   1715a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1715e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17162:	00 e0       	ldi	r16, 0x00	; 0
   17164:	10 e0       	ldi	r17, 0x00	; 0
   17166:	9b e1       	ldi	r25, 0x1B	; 27
   17168:	f9 2e       	mov	r15, r25
   1716a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1716e:	90 e0       	ldi	r25, 0x00	; 0
   17170:	85 56       	subi	r24, 0x65	; 101
   17172:	91 09       	sbc	r25, r1
   17174:	f8 9e       	mul	r15, r24
   17176:	f0 01       	movw	r30, r0
   17178:	f9 9e       	mul	r15, r25
   1717a:	f0 0d       	add	r31, r0
   1717c:	11 24       	eor	r1, r1
   1717e:	e8 51       	subi	r30, 0x18	; 24
   17180:	f2 4f       	sbci	r31, 0xF2	; 242
   17182:	e0 0f       	add	r30, r16
   17184:	f1 1f       	adc	r31, r17
   17186:	e5 81       	ldd	r30, Z+5	; 0x05
   17188:	e3 31       	cpi	r30, 0x13	; 19
   1718a:	68 f0       	brcs	.+26     	; 0x171a6 <_Z22Valve_Grouping_Handlerh+0x1492>
   1718c:	f0 e0       	ldi	r31, 0x00	; 0
   1718e:	e7 5c       	subi	r30, 0xC7	; 199
   17190:	fb 4e       	sbci	r31, 0xEB	; 235
   17192:	61 e0       	ldi	r22, 0x01	; 1
   17194:	80 81       	ld	r24, Z
   17196:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   1719a:	68 ec       	ldi	r22, 0xC8	; 200
   1719c:	70 e0       	ldi	r23, 0x00	; 0
   1719e:	80 e0       	ldi	r24, 0x00	; 0
   171a0:	90 e0       	ldi	r25, 0x00	; 0
   171a2:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   171a6:	0f 5f       	subi	r16, 0xFF	; 255
   171a8:	1f 4f       	sbci	r17, 0xFF	; 255
   171aa:	05 30       	cpi	r16, 0x05	; 5
   171ac:	11 05       	cpc	r17, r1
   171ae:	e9 f6       	brne	.-70     	; 0x1716a <_Z22Valve_Grouping_Handlerh+0x1456>
   171b0:	94 c0       	rjmp	.+296    	; 0x172da <_Z22Valve_Grouping_Handlerh+0x15c6>
   171b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   171b6:	81 30       	cpi	r24, 0x01	; 1
   171b8:	51 f4       	brne	.+20     	; 0x171ce <_Z22Valve_Grouping_Handlerh+0x14ba>
   171ba:	67 e7       	ldi	r22, 0x77	; 119
   171bc:	7b e3       	ldi	r23, 0x3B	; 59
   171be:	86 ec       	ldi	r24, 0xC6	; 198
   171c0:	94 e1       	ldi	r25, 0x14	; 20
   171c2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   171c6:	86 ec       	ldi	r24, 0xC6	; 198
   171c8:	94 e1       	ldi	r25, 0x14	; 20
   171ca:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   171ce:	e2 e0       	ldi	r30, 0x02	; 2
   171d0:	3e 12       	cpse	r3, r30
   171d2:	85 c0       	rjmp	.+266    	; 0x172de <_Z22Valve_Grouping_Handlerh+0x15ca>
   171d4:	86 e0       	ldi	r24, 0x06	; 6
   171d6:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   171da:	84 e6       	ldi	r24, 0x64	; 100
   171dc:	90 e0       	ldi	r25, 0x00	; 0
   171de:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   171e2:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   171e6:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   171ea:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   171ee:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   171f2:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   171f6:	a0 62       	ori	r26, 0x20	; 32
   171f8:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   171fc:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17200:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17204:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17208:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   1720c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17210:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17214:	82 60       	ori	r24, 0x02	; 2
   17216:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1721a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1721e:	00 e0       	ldi	r16, 0x00	; 0
   17220:	10 e0       	ldi	r17, 0x00	; 0
   17222:	8b e1       	ldi	r24, 0x1B	; 27
   17224:	f8 2e       	mov	r15, r24
   17226:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1722a:	90 e0       	ldi	r25, 0x00	; 0
   1722c:	85 56       	subi	r24, 0x65	; 101
   1722e:	91 09       	sbc	r25, r1
   17230:	f8 9e       	mul	r15, r24
   17232:	f0 01       	movw	r30, r0
   17234:	f9 9e       	mul	r15, r25
   17236:	f0 0d       	add	r31, r0
   17238:	11 24       	eor	r1, r1
   1723a:	e8 51       	subi	r30, 0x18	; 24
   1723c:	f2 4f       	sbci	r31, 0xF2	; 242
   1723e:	e0 0f       	add	r30, r16
   17240:	f1 1f       	adc	r31, r17
   17242:	e5 81       	ldd	r30, Z+5	; 0x05
   17244:	e3 31       	cpi	r30, 0x13	; 19
   17246:	68 f0       	brcs	.+26     	; 0x17262 <_Z22Valve_Grouping_Handlerh+0x154e>
   17248:	f0 e0       	ldi	r31, 0x00	; 0
   1724a:	e7 5c       	subi	r30, 0xC7	; 199
   1724c:	fb 4e       	sbci	r31, 0xEB	; 235
   1724e:	61 e0       	ldi	r22, 0x01	; 1
   17250:	80 81       	ld	r24, Z
   17252:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   17256:	68 ec       	ldi	r22, 0xC8	; 200
   17258:	70 e0       	ldi	r23, 0x00	; 0
   1725a:	80 e0       	ldi	r24, 0x00	; 0
   1725c:	90 e0       	ldi	r25, 0x00	; 0
   1725e:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17262:	0f 5f       	subi	r16, 0xFF	; 255
   17264:	1f 4f       	sbci	r17, 0xFF	; 255
   17266:	05 30       	cpi	r16, 0x05	; 5
   17268:	11 05       	cpc	r17, r1
   1726a:	e9 f6       	brne	.-70     	; 0x17226 <_Z22Valve_Grouping_Handlerh+0x1512>
   1726c:	36 c0       	rjmp	.+108    	; 0x172da <_Z22Valve_Grouping_Handlerh+0x15c6>
   1726e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17272:	81 30       	cpi	r24, 0x01	; 1
   17274:	51 f4       	brne	.+20     	; 0x1728a <_Z22Valve_Grouping_Handlerh+0x1576>
   17276:	6c e3       	ldi	r22, 0x3C	; 60
   17278:	7b e3       	ldi	r23, 0x3B	; 59
   1727a:	86 ec       	ldi	r24, 0xC6	; 198
   1727c:	94 e1       	ldi	r25, 0x14	; 20
   1727e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17282:	86 ec       	ldi	r24, 0xC6	; 198
   17284:	94 e1       	ldi	r25, 0x14	; 20
   17286:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1728a:	f2 e0       	ldi	r31, 0x02	; 2
   1728c:	3f 12       	cpse	r3, r31
   1728e:	27 c0       	rjmp	.+78     	; 0x172de <_Z22Valve_Grouping_Handlerh+0x15ca>
   17290:	86 e0       	ldi	r24, 0x06	; 6
   17292:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17296:	84 e6       	ldi	r24, 0x64	; 100
   17298:	90 e0       	ldi	r25, 0x00	; 0
   1729a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1729e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   172a2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   172a6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   172aa:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   172ae:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   172b2:	a0 62       	ori	r26, 0x20	; 32
   172b4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   172b8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   172bc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   172c0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   172c4:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   172c8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   172cc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   172d0:	82 60       	ori	r24, 0x02	; 2
   172d2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   172d6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   172da:	80 e0       	ldi	r24, 0x00	; 0
   172dc:	56 c0       	rjmp	.+172    	; 0x1738a <_Z22Valve_Grouping_Handlerh+0x1676>
   172de:	68 ee       	ldi	r22, 0xE8	; 232
   172e0:	73 e0       	ldi	r23, 0x03	; 3
   172e2:	80 e0       	ldi	r24, 0x00	; 0
   172e4:	90 e0       	ldi	r25, 0x00	; 0
   172e6:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   172ea:	23 e0       	ldi	r18, 0x03	; 3
   172ec:	32 12       	cpse	r3, r18
   172ee:	07 ce       	rjmp	.-1010   	; 0x16efe <_Z22Valve_Grouping_Handlerh+0x11ea>
   172f0:	35 c0       	rjmp	.+106    	; 0x1735c <_Z22Valve_Grouping_Handlerh+0x1648>
   172f2:	32 e1       	ldi	r19, 0x12	; 18
   172f4:	3f 15       	cp	r19, r15
   172f6:	78 f4       	brcc	.+30     	; 0x17316 <_Z22Valve_Grouping_Handlerh+0x1602>
   172f8:	ef 2d       	mov	r30, r15
   172fa:	f0 e0       	ldi	r31, 0x00	; 0
   172fc:	e7 5c       	subi	r30, 0xC7	; 199
   172fe:	fb 4e       	sbci	r31, 0xEB	; 235
   17300:	6b a9       	ldd	r22, Y+51	; 0x33
   17302:	80 81       	ld	r24, Z
   17304:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   17308:	68 ec       	ldi	r22, 0xC8	; 200
   1730a:	70 e0       	ldi	r23, 0x00	; 0
   1730c:	80 e0       	ldi	r24, 0x00	; 0
   1730e:	90 e0       	ldi	r25, 0x00	; 0
   17310:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17314:	23 c0       	rjmp	.+70     	; 0x1735c <_Z22Valve_Grouping_Handlerh+0x1648>
   17316:	01 97       	sbiw	r24, 0x01	; 1
   17318:	26 e0       	ldi	r18, 0x06	; 6
   1731a:	28 9f       	mul	r18, r24
   1731c:	f0 01       	movw	r30, r0
   1731e:	29 9f       	mul	r18, r25
   17320:	f0 0d       	add	r31, r0
   17322:	11 24       	eor	r1, r1
   17324:	e2 5b       	subi	r30, 0xB2	; 178
   17326:	f2 4f       	sbci	r31, 0xF2	; 242
   17328:	e0 0f       	add	r30, r16
   1732a:	f1 1f       	adc	r31, r17
   1732c:	81 81       	ldd	r24, Z+1	; 0x01
   1732e:	85 36       	cpi	r24, 0x65	; 101
   17330:	a9 f4       	brne	.+42     	; 0x1735c <_Z22Valve_Grouping_Handlerh+0x1648>
   17332:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   17336:	41 e0       	ldi	r20, 0x01	; 1
   17338:	54 12       	cpse	r5, r20
   1733a:	05 c0       	rjmp	.+10     	; 0x17346 <_Z22Valve_Grouping_Handlerh+0x1632>
   1733c:	88 23       	and	r24, r24
   1733e:	71 f0       	breq	.+28     	; 0x1735c <_Z22Valve_Grouping_Handlerh+0x1648>
   17340:	50 92 7b 14 	sts	0x147B, r5	; 0x80147b <_sRuble_Parameters+0xcd>
   17344:	05 c0       	rjmp	.+10     	; 0x17350 <_Z22Valve_Grouping_Handlerh+0x163c>
   17346:	88 23       	and	r24, r24
   17348:	49 f0       	breq	.+18     	; 0x1735c <_Z22Valve_Grouping_Handlerh+0x1648>
   1734a:	82 e0       	ldi	r24, 0x02	; 2
   1734c:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   17350:	6b e7       	ldi	r22, 0x7B	; 123
   17352:	74 e1       	ldi	r23, 0x14	; 20
   17354:	88 ea       	ldi	r24, 0xA8	; 168
   17356:	9c e0       	ldi	r25, 0x0C	; 12
   17358:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1735c:	0f 5f       	subi	r16, 0xFF	; 255
   1735e:	1f 4f       	sbci	r17, 0xFF	; 255
   17360:	05 30       	cpi	r16, 0x05	; 5
   17362:	11 05       	cpc	r17, r1
   17364:	09 f0       	breq	.+2      	; 0x17368 <_Z22Valve_Grouping_Handlerh+0x1654>
   17366:	ee cc       	rjmp	.-1572   	; 0x16d44 <_Z22Valve_Grouping_Handlerh+0x1030>
   17368:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1736c:	81 30       	cpi	r24, 0x01	; 1
   1736e:	61 f4       	brne	.+24     	; 0x17388 <_Z22Valve_Grouping_Handlerh+0x1674>
   17370:	6d e1       	ldi	r22, 0x1D	; 29
   17372:	7b e3       	ldi	r23, 0x3B	; 59
   17374:	86 ec       	ldi	r24, 0xC6	; 198
   17376:	94 e1       	ldi	r25, 0x14	; 20
   17378:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1737c:	86 ec       	ldi	r24, 0xC6	; 198
   1737e:	94 e1       	ldi	r25, 0x14	; 20
   17380:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17384:	01 c0       	rjmp	.+2      	; 0x17388 <_Z22Valve_Grouping_Handlerh+0x1674>
   17386:	01 c0       	rjmp	.+2      	; 0x1738a <_Z22Valve_Grouping_Handlerh+0x1676>
   17388:	81 e0       	ldi	r24, 0x01	; 1
   1738a:	e8 96       	adiw	r28, 0x38	; 56
   1738c:	0f b6       	in	r0, 0x3f	; 63
   1738e:	f8 94       	cli
   17390:	de bf       	out	0x3e, r29	; 62
   17392:	0f be       	out	0x3f, r0	; 63
   17394:	cd bf       	out	0x3d, r28	; 61
   17396:	df 91       	pop	r29
   17398:	cf 91       	pop	r28
   1739a:	1f 91       	pop	r17
   1739c:	0f 91       	pop	r16
   1739e:	ff 90       	pop	r15
   173a0:	ef 90       	pop	r14
   173a2:	df 90       	pop	r13
   173a4:	cf 90       	pop	r12
   173a6:	bf 90       	pop	r11
   173a8:	af 90       	pop	r10
   173aa:	9f 90       	pop	r9
   173ac:	8f 90       	pop	r8
   173ae:	7f 90       	pop	r7
   173b0:	6f 90       	pop	r6
   173b2:	5f 90       	pop	r5
   173b4:	4f 90       	pop	r4
   173b6:	3f 90       	pop	r3
   173b8:	2f 90       	pop	r2
   173ba:	08 95       	ret

000173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>:
   173bc:	2f 92       	push	r2
   173be:	3f 92       	push	r3
   173c0:	4f 92       	push	r4
   173c2:	5f 92       	push	r5
   173c4:	6f 92       	push	r6
   173c6:	7f 92       	push	r7
   173c8:	8f 92       	push	r8
   173ca:	9f 92       	push	r9
   173cc:	af 92       	push	r10
   173ce:	bf 92       	push	r11
   173d0:	cf 92       	push	r12
   173d2:	df 92       	push	r13
   173d4:	ef 92       	push	r14
   173d6:	ff 92       	push	r15
   173d8:	0f 93       	push	r16
   173da:	1f 93       	push	r17
   173dc:	cf 93       	push	r28
   173de:	df 93       	push	r29
   173e0:	00 d0       	rcall	.+0      	; 0x173e2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x26>
   173e2:	cd b7       	in	r28, 0x3d	; 61
   173e4:	de b7       	in	r29, 0x3e	; 62
   173e6:	89 83       	std	Y+1, r24	; 0x01
   173e8:	6a 83       	std	Y+2, r22	; 0x02
   173ea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   173ee:	81 30       	cpi	r24, 0x01	; 1
   173f0:	31 f4       	brne	.+12     	; 0x173fe <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42>
   173f2:	65 e9       	ldi	r22, 0x95	; 149
   173f4:	7e e2       	ldi	r23, 0x2E	; 46
   173f6:	86 ec       	ldi	r24, 0xC6	; 198
   173f8:	94 e1       	ldi	r25, 0x14	; 20
   173fa:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   173fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17402:	81 30       	cpi	r24, 0x01	; 1
   17404:	89 f5       	brne	.+98     	; 0x17468 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xac>
   17406:	3a 81       	ldd	r19, Y+2	; 0x02
   17408:	2b e1       	ldi	r18, 0x1B	; 27
   1740a:	32 9f       	mul	r19, r18
   1740c:	60 01       	movw	r12, r0
   1740e:	11 24       	eor	r1, r1
   17410:	e1 2c       	mov	r14, r1
   17412:	f1 2c       	mov	r15, r1
   17414:	f6 01       	movw	r30, r12
   17416:	ee 0d       	add	r30, r14
   17418:	ff 1d       	adc	r31, r15
   1741a:	e8 51       	subi	r30, 0x18	; 24
   1741c:	f2 4f       	sbci	r31, 0xF2	; 242
   1741e:	4a e0       	ldi	r20, 0x0A	; 10
   17420:	50 e0       	ldi	r21, 0x00	; 0
   17422:	65 81       	ldd	r22, Z+5	; 0x05
   17424:	86 ec       	ldi	r24, 0xC6	; 198
   17426:	94 e1       	ldi	r25, 0x14	; 20
   17428:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   1742c:	63 e9       	ldi	r22, 0x93	; 147
   1742e:	7e e2       	ldi	r23, 0x2E	; 46
   17430:	86 ec       	ldi	r24, 0xC6	; 198
   17432:	94 e1       	ldi	r25, 0x14	; 20
   17434:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17438:	4f ef       	ldi	r20, 0xFF	; 255
   1743a:	e4 1a       	sub	r14, r20
   1743c:	f4 0a       	sbc	r15, r20
   1743e:	85 e0       	ldi	r24, 0x05	; 5
   17440:	e8 16       	cp	r14, r24
   17442:	f1 04       	cpc	r15, r1
   17444:	39 f7       	brne	.-50     	; 0x17414 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x58>
   17446:	67 e7       	ldi	r22, 0x77	; 119
   17448:	7e e2       	ldi	r23, 0x2E	; 46
   1744a:	86 ec       	ldi	r24, 0xC6	; 198
   1744c:	94 e1       	ldi	r25, 0x14	; 20
   1744e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17452:	4a e0       	ldi	r20, 0x0A	; 10
   17454:	50 e0       	ldi	r21, 0x00	; 0
   17456:	6a 81       	ldd	r22, Y+2	; 0x02
   17458:	86 ec       	ldi	r24, 0xC6	; 198
   1745a:	94 e1       	ldi	r25, 0x14	; 20
   1745c:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   17460:	86 ec       	ldi	r24, 0xC6	; 198
   17462:	94 e1       	ldi	r25, 0x14	; 20
   17464:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17468:	9a 81       	ldd	r25, Y+2	; 0x02
   1746a:	94 30       	cpi	r25, 0x04	; 4
   1746c:	19 f4       	brne	.+6      	; 0x17474 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xb8>
   1746e:	e9 81       	ldd	r30, Y+1	; 0x01
   17470:	e1 30       	cpi	r30, 0x01	; 1
   17472:	91 f0       	breq	.+36     	; 0x17498 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xdc>
   17474:	2a 81       	ldd	r18, Y+2	; 0x02
   17476:	4b e1       	ldi	r20, 0x1B	; 27
   17478:	24 9f       	mul	r18, r20
   1747a:	90 01       	movw	r18, r0
   1747c:	11 24       	eor	r1, r1
   1747e:	3b 83       	std	Y+3, r19	; 0x03
   17480:	2a 83       	std	Y+2, r18	; 0x02
   17482:	e1 2c       	mov	r14, r1
   17484:	f1 2c       	mov	r15, r1
   17486:	52 e0       	ldi	r21, 0x02	; 2
   17488:	a5 2e       	mov	r10, r21
   1748a:	6d e0       	ldi	r22, 0x0D	; 13
   1748c:	b6 2e       	mov	r11, r22
   1748e:	70 ed       	ldi	r23, 0xD0	; 208
   17490:	c7 2e       	mov	r12, r23
   17492:	7f e0       	ldi	r23, 0x0F	; 15
   17494:	d7 2e       	mov	r13, r23
   17496:	97 c1       	rjmp	.+814    	; 0x177c6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x40a>
   17498:	e9 e5       	ldi	r30, 0x59	; 89
   1749a:	fe e0       	ldi	r31, 0x0E	; 14
   1749c:	80 e0       	ldi	r24, 0x00	; 0
   1749e:	91 91       	ld	r25, Z+
   174a0:	91 11       	cpse	r25, r1
   174a2:	8f 5f       	subi	r24, 0xFF	; 255
   174a4:	3e e0       	ldi	r19, 0x0E	; 14
   174a6:	ee 35       	cpi	r30, 0x5E	; 94
   174a8:	f3 07       	cpc	r31, r19
   174aa:	c9 f7       	brne	.-14     	; 0x1749e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xe2>
   174ac:	82 30       	cpi	r24, 0x02	; 2
   174ae:	18 f4       	brcc	.+6      	; 0x174b6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xfa>
   174b0:	91 e0       	ldi	r25, 0x01	; 1
   174b2:	90 93 eb 0c 	sts	0x0CEB, r25	; 0x800ceb <_gRunning_Flush_Num>
   174b6:	90 91 eb 0c 	lds	r25, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
   174ba:	99 23       	and	r25, r25
   174bc:	11 f0       	breq	.+4      	; 0x174c2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x106>
   174be:	89 17       	cp	r24, r25
   174c0:	48 f4       	brcc	.+18     	; 0x174d4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x118>
   174c2:	81 e0       	ldi	r24, 0x01	; 1
   174c4:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
   174c8:	6b ee       	ldi	r22, 0xEB	; 235
   174ca:	7c e0       	ldi	r23, 0x0C	; 12
   174cc:	87 eb       	ldi	r24, 0xB7	; 183
   174ce:	9e e0       	ldi	r25, 0x0E	; 14
   174d0:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   174d4:	e0 91 eb 0c 	lds	r30, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
   174d8:	f0 e0       	ldi	r31, 0x00	; 0
   174da:	e8 5a       	subi	r30, 0xA8	; 168
   174dc:	f1 4f       	sbci	r31, 0xF1	; 241
   174de:	e0 81       	ld	r30, Z
   174e0:	e3 31       	cpi	r30, 0x13	; 19
   174e2:	20 f4       	brcc	.+8      	; 0x174ec <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x130>
   174e4:	80 91 5e 0e 	lds	r24, 0x0E5E	; 0x800e5e <_sExtra_Plot+0x76>
   174e8:	81 11       	cpse	r24, r1
   174ea:	2b c3       	rjmp	.+1622   	; 0x17b42 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   174ec:	f0 e0       	ldi	r31, 0x00	; 0
   174ee:	e7 5c       	subi	r30, 0xC7	; 199
   174f0:	fb 4e       	sbci	r31, 0xEB	; 235
   174f2:	60 e0       	ldi	r22, 0x00	; 0
   174f4:	80 81       	ld	r24, Z
   174f6:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   174fa:	68 ec       	ldi	r22, 0xC8	; 200
   174fc:	70 e0       	ldi	r23, 0x00	; 0
   174fe:	80 e0       	ldi	r24, 0x00	; 0
   17500:	90 e0       	ldi	r25, 0x00	; 0
   17502:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17506:	1d c3       	rjmp	.+1594   	; 0x17b42 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   17508:	43 e0       	ldi	r20, 0x03	; 3
   1750a:	48 15       	cp	r20, r8
   1750c:	08 f0       	brcs	.+2      	; 0x17510 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x154>
   1750e:	6c c1       	rjmp	.+728    	; 0x177e8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42c>
   17510:	6b ea       	ldi	r22, 0xAB	; 171
   17512:	86 9e       	mul	r8, r22
   17514:	71 2c       	mov	r7, r1
   17516:	11 24       	eor	r1, r1
   17518:	87 2d       	mov	r24, r7
   1751a:	86 95       	lsr	r24
   1751c:	98 2f       	mov	r25, r24
   1751e:	99 0f       	add	r25, r25
   17520:	89 0f       	add	r24, r25
   17522:	88 1a       	sub	r8, r24
   17524:	67 2d       	mov	r22, r7
   17526:	66 95       	lsr	r22
   17528:	88 20       	and	r8, r8
   1752a:	09 f4       	brne	.+2      	; 0x1752e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x172>
   1752c:	59 c1       	rjmp	.+690    	; 0x177e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x424>
   1752e:	01 e0       	ldi	r16, 0x01	; 1
   17530:	06 0f       	add	r16, r22
   17532:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17536:	81 30       	cpi	r24, 0x01	; 1
   17538:	89 f4       	brne	.+34     	; 0x1755c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1a0>
   1753a:	63 e6       	ldi	r22, 0x63	; 99
   1753c:	7e e2       	ldi	r23, 0x2E	; 46
   1753e:	86 ec       	ldi	r24, 0xC6	; 198
   17540:	94 e1       	ldi	r25, 0x14	; 20
   17542:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17546:	86 ec       	ldi	r24, 0xC6	; 198
   17548:	94 e1       	ldi	r25, 0x14	; 20
   1754a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1754e:	4a e0       	ldi	r20, 0x0A	; 10
   17550:	50 e0       	ldi	r21, 0x00	; 0
   17552:	60 2f       	mov	r22, r16
   17554:	86 ec       	ldi	r24, 0xC6	; 198
   17556:	94 e1       	ldi	r25, 0x14	; 20
   17558:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   1755c:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   17560:	81 11       	cpse	r24, r1
   17562:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   17566:	e5 ef       	ldi	r30, 0xF5	; 245
   17568:	f3 e1       	ldi	r31, 0x13	; 19
   1756a:	24 e1       	ldi	r18, 0x14	; 20
   1756c:	11 92       	st	Z+, r1
   1756e:	2a 95       	dec	r18
   17570:	e9 f7       	brne	.-6      	; 0x1756c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1b0>
   17572:	60 2f       	mov	r22, r16
   17574:	70 e0       	ldi	r23, 0x00	; 0
   17576:	61 50       	subi	r22, 0x01	; 1
   17578:	71 09       	sbc	r23, r1
   1757a:	37 e0       	ldi	r19, 0x07	; 7
   1757c:	36 9f       	mul	r19, r22
   1757e:	c0 01       	movw	r24, r0
   17580:	37 9f       	mul	r19, r23
   17582:	90 0d       	add	r25, r0
   17584:	11 24       	eor	r1, r1
   17586:	82 55       	subi	r24, 0x52	; 82
   17588:	9c 4e       	sbci	r25, 0xEC	; 236
   1758a:	fc 01       	movw	r30, r24
   1758c:	ec 58       	subi	r30, 0x8C	; 140
   1758e:	ff 4f       	sbci	r31, 0xFF	; 255
   17590:	20 81       	ld	r18, Z
   17592:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   17596:	31 96       	adiw	r30, 0x01	; 1
   17598:	20 81       	ld	r18, Z
   1759a:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   1759e:	31 96       	adiw	r30, 0x01	; 1
   175a0:	20 81       	ld	r18, Z
   175a2:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   175a6:	31 96       	adiw	r30, 0x01	; 1
   175a8:	20 81       	ld	r18, Z
   175aa:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   175ae:	31 96       	adiw	r30, 0x01	; 1
   175b0:	20 81       	ld	r18, Z
   175b2:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   175b6:	31 96       	adiw	r30, 0x01	; 1
   175b8:	20 81       	ld	r18, Z
   175ba:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   175be:	a0 92 fb 13 	sts	0x13FB, r10	; 0x8013fb <_sRuble_Parameters+0x4d>
   175c2:	49 81       	ldd	r20, Y+1	; 0x01
   175c4:	40 93 fc 13 	sts	0x13FC, r20	; 0x8013fc <_sRuble_Parameters+0x4e>
   175c8:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   175cc:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   175d0:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   175d4:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   175d8:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
   175dc:	40 e0       	ldi	r20, 0x00	; 0
   175de:	50 e0       	ldi	r21, 0x00	; 0
   175e0:	64 2e       	mov	r6, r20
   175e2:	00 e0       	ldi	r16, 0x00	; 0
   175e4:	81 2c       	mov	r8, r1
   175e6:	b4 9e       	mul	r11, r20
   175e8:	b0 01       	movw	r22, r0
   175ea:	b5 9e       	mul	r11, r21
   175ec:	70 0d       	add	r23, r0
   175ee:	11 24       	eor	r1, r1
   175f0:	6b 5e       	subi	r22, 0xEB	; 235
   175f2:	73 4f       	sbci	r23, 0xF3	; 243
   175f4:	28 2d       	mov	r18, r8
   175f6:	30 e0       	ldi	r19, 0x00	; 0
   175f8:	fb 01       	movw	r30, r22
   175fa:	e2 0f       	add	r30, r18
   175fc:	f3 1f       	adc	r31, r19
   175fe:	28 0f       	add	r18, r24
   17600:	39 1f       	adc	r19, r25
   17602:	d9 01       	movw	r26, r18
   17604:	ac 58       	subi	r26, 0x8C	; 140
   17606:	bf 4f       	sbci	r27, 0xFF	; 255
   17608:	31 81       	ldd	r19, Z+1	; 0x01
   1760a:	2c 91       	ld	r18, X
   1760c:	32 17       	cp	r19, r18
   1760e:	19 f0       	breq	.+6      	; 0x17616 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x25a>
   17610:	00 e0       	ldi	r16, 0x00	; 0
   17612:	36 e0       	ldi	r19, 0x06	; 6
   17614:	83 2e       	mov	r8, r19
   17616:	0f 5f       	subi	r16, 0xFF	; 255
   17618:	83 94       	inc	r8
   1761a:	e5 e0       	ldi	r30, 0x05	; 5
   1761c:	e8 15       	cp	r30, r8
   1761e:	50 f7       	brcc	.-44     	; 0x175f4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x238>
   17620:	06 30       	cpi	r16, 0x06	; 6
   17622:	09 f4       	brne	.+2      	; 0x17626 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x26a>
   17624:	e3 c0       	rjmp	.+454    	; 0x177ec <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x430>
   17626:	4f 5f       	subi	r20, 0xFF	; 255
   17628:	5f 4f       	sbci	r21, 0xFF	; 255
   1762a:	46 30       	cpi	r20, 0x06	; 6
   1762c:	51 05       	cpc	r21, r1
   1762e:	c1 f6       	brne	.-80     	; 0x175e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x224>
   17630:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17634:	81 30       	cpi	r24, 0x01	; 1
   17636:	89 f4       	brne	.+34     	; 0x1765a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x29e>
   17638:	6d e4       	ldi	r22, 0x4D	; 77
   1763a:	7e e2       	ldi	r23, 0x2E	; 46
   1763c:	86 ec       	ldi	r24, 0xC6	; 198
   1763e:	94 e1       	ldi	r25, 0x14	; 20
   17640:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17644:	4a e0       	ldi	r20, 0x0A	; 10
   17646:	50 e0       	ldi	r21, 0x00	; 0
   17648:	61 2f       	mov	r22, r17
   1764a:	86 ec       	ldi	r24, 0xC6	; 198
   1764c:	94 e1       	ldi	r25, 0x14	; 20
   1764e:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   17652:	86 ec       	ldi	r24, 0xC6	; 198
   17654:	94 e1       	ldi	r25, 0x14	; 20
   17656:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1765a:	fd e0       	ldi	r31, 0x0D	; 13
   1765c:	1f 9f       	mul	r17, r31
   1765e:	40 01       	movw	r8, r0
   17660:	11 24       	eor	r1, r1
   17662:	00 e0       	ldi	r16, 0x00	; 0
   17664:	b1 9e       	mul	r11, r17
   17666:	c0 01       	movw	r24, r0
   17668:	11 24       	eor	r1, r1
   1766a:	9c 01       	movw	r18, r24
   1766c:	2b 5e       	subi	r18, 0xEB	; 235
   1766e:	33 4f       	sbci	r19, 0xF3	; 243
   17670:	29 01       	movw	r4, r18
   17672:	4b e0       	ldi	r20, 0x0B	; 11
   17674:	44 0e       	add	r4, r20
   17676:	51 1c       	adc	r5, r1
   17678:	19 01       	movw	r2, r18
   1767a:	e8 e0       	ldi	r30, 0x08	; 8
   1767c:	2e 0e       	add	r2, r30
   1767e:	31 1c       	adc	r3, r1
   17680:	9c 01       	movw	r18, r24
   17682:	2a 5e       	subi	r18, 0xEA	; 234
   17684:	33 4f       	sbci	r19, 0xF3	; 243
   17686:	39 01       	movw	r6, r18
   17688:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   1768c:	81 11       	cpse	r24, r1
   1768e:	b0 c0       	rjmp	.+352    	; 0x177f0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x434>
   17690:	0f 5f       	subi	r16, 0xFF	; 255
   17692:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17696:	81 30       	cpi	r24, 0x01	; 1
   17698:	51 f4       	brne	.+20     	; 0x176ae <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2f2>
   1769a:	69 e2       	ldi	r22, 0x29	; 41
   1769c:	7e e2       	ldi	r23, 0x2E	; 46
   1769e:	86 ec       	ldi	r24, 0xC6	; 198
   176a0:	94 e1       	ldi	r25, 0x14	; 20
   176a2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   176a6:	86 ec       	ldi	r24, 0xC6	; 198
   176a8:	94 e1       	ldi	r25, 0x14	; 20
   176aa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   176ae:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   176b2:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   176b6:	81 11       	cpse	r24, r1
   176b8:	b0 c0       	rjmp	.+352    	; 0x1781a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x45e>
   176ba:	8c e0       	ldi	r24, 0x0C	; 12
   176bc:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   176c0:	88 eb       	ldi	r24, 0xB8	; 184
   176c2:	9b e0       	ldi	r25, 0x0B	; 11
   176c4:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
   176c8:	88 23       	and	r24, r24
   176ca:	09 f4       	brne	.+2      	; 0x176ce <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x312>
   176cc:	c2 c1       	rjmp	.+900    	; 0x17a52 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x696>
   176ce:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   176d2:	88 23       	and	r24, r24
   176d4:	09 f4       	brne	.+2      	; 0x176d8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x31c>
   176d6:	69 c1       	rjmp	.+722    	; 0x179aa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5ee>
   176d8:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   176dc:	81 11       	cpse	r24, r1
   176de:	b2 c0       	rjmp	.+356    	; 0x17844 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x488>
   176e0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   176e4:	81 30       	cpi	r24, 0x01	; 1
   176e6:	59 f5       	brne	.+86     	; 0x1773e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x382>
   176e8:	63 e1       	ldi	r22, 0x13	; 19
   176ea:	7e e2       	ldi	r23, 0x2E	; 46
   176ec:	86 ec       	ldi	r24, 0xC6	; 198
   176ee:	94 e1       	ldi	r25, 0x14	; 20
   176f0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   176f4:	4a e0       	ldi	r20, 0x0A	; 10
   176f6:	50 e0       	ldi	r21, 0x00	; 0
   176f8:	69 e0       	ldi	r22, 0x09	; 9
   176fa:	74 e1       	ldi	r23, 0x14	; 20
   176fc:	86 ec       	ldi	r24, 0xC6	; 198
   176fe:	94 e1       	ldi	r25, 0x14	; 20
   17700:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   17704:	86 ec       	ldi	r24, 0xC6	; 198
   17706:	94 e1       	ldi	r25, 0x14	; 20
   17708:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1770c:	86 ec       	ldi	r24, 0xC6	; 198
   1770e:	94 e1       	ldi	r25, 0x14	; 20
   17710:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17714:	65 ef       	ldi	r22, 0xF5	; 245
   17716:	7d e2       	ldi	r23, 0x2D	; 45
   17718:	86 ec       	ldi	r24, 0xC6	; 198
   1771a:	94 e1       	ldi	r25, 0x14	; 20
   1771c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17720:	47 e0       	ldi	r20, 0x07	; 7
   17722:	50 e0       	ldi	r21, 0x00	; 0
   17724:	b3 01       	movw	r22, r6
   17726:	86 ec       	ldi	r24, 0xC6	; 198
   17728:	94 e1       	ldi	r25, 0x14	; 20
   1772a:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
   1772e:	86 ec       	ldi	r24, 0xC6	; 198
   17730:	94 e1       	ldi	r25, 0x14	; 20
   17732:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17736:	86 ec       	ldi	r24, 0xC6	; 198
   17738:	94 e1       	ldi	r25, 0x14	; 20
   1773a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1773e:	a9 e0       	ldi	r26, 0x09	; 9
   17740:	b4 e1       	ldi	r27, 0x14	; 20
   17742:	80 e0       	ldi	r24, 0x00	; 0
   17744:	90 e0       	ldi	r25, 0x00	; 0
   17746:	2d 91       	ld	r18, X+
   17748:	f4 01       	movw	r30, r8
   1774a:	e8 0f       	add	r30, r24
   1774c:	f9 1f       	adc	r31, r25
   1774e:	eb 5e       	subi	r30, 0xEB	; 235
   17750:	f3 4f       	sbci	r31, 0xF3	; 243
   17752:	31 81       	ldd	r19, Z+1	; 0x01
   17754:	32 17       	cp	r19, r18
   17756:	09 f4       	brne	.+2      	; 0x1775a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x39e>
   17758:	ce c0       	rjmp	.+412    	; 0x178f6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x53a>
   1775a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1775e:	81 30       	cpi	r24, 0x01	; 1
   17760:	51 f4       	brne	.+20     	; 0x17776 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ba>
   17762:	6a ec       	ldi	r22, 0xCA	; 202
   17764:	7d e2       	ldi	r23, 0x2D	; 45
   17766:	86 ec       	ldi	r24, 0xC6	; 198
   17768:	94 e1       	ldi	r25, 0x14	; 20
   1776a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1776e:	86 ec       	ldi	r24, 0xC6	; 198
   17770:	94 e1       	ldi	r25, 0x14	; 20
   17772:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17776:	02 30       	cpi	r16, 0x02	; 2
   17778:	09 f4       	brne	.+2      	; 0x1777c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c0>
   1777a:	79 c0       	rjmp	.+242    	; 0x1786e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4b2>
   1777c:	21 e0       	ldi	r18, 0x01	; 1
   1777e:	f2 01       	movw	r30, r4
   17780:	20 83       	st	Z, r18
   17782:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   17786:	90 e0       	ldi	r25, 0x00	; 0
   17788:	98 2f       	mov	r25, r24
   1778a:	88 27       	eor	r24, r24
   1778c:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   17790:	82 2b       	or	r24, r18
   17792:	f1 01       	movw	r30, r2
   17794:	91 83       	std	Z+1, r25	; 0x01
   17796:	80 83       	st	Z, r24
   17798:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   1779c:	f9 81       	ldd	r31, Y+1	; 0x01
   1779e:	f8 13       	cpse	r31, r24
   177a0:	b0 c0       	rjmp	.+352    	; 0x17902 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x546>
   177a2:	03 e0       	ldi	r16, 0x03	; 3
   177a4:	68 ee       	ldi	r22, 0xE8	; 232
   177a6:	73 e0       	ldi	r23, 0x03	; 3
   177a8:	80 e0       	ldi	r24, 0x00	; 0
   177aa:	90 e0       	ldi	r25, 0x00	; 0
   177ac:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   177b0:	03 30       	cpi	r16, 0x03	; 3
   177b2:	09 f0       	breq	.+2      	; 0x177b6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   177b4:	69 cf       	rjmp	.-302    	; 0x17688 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2cc>
   177b6:	4f ef       	ldi	r20, 0xFF	; 255
   177b8:	e4 1a       	sub	r14, r20
   177ba:	f4 0a       	sbc	r15, r20
   177bc:	85 e0       	ldi	r24, 0x05	; 5
   177be:	e8 16       	cp	r14, r24
   177c0:	f1 04       	cpc	r15, r1
   177c2:	09 f4       	brne	.+2      	; 0x177c6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x40a>
   177c4:	b0 c1       	rjmp	.+864    	; 0x17b26 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x76a>
   177c6:	ea 81       	ldd	r30, Y+2	; 0x02
   177c8:	fb 81       	ldd	r31, Y+3	; 0x03
   177ca:	ee 0d       	add	r30, r14
   177cc:	ff 1d       	adc	r31, r15
   177ce:	e8 51       	subi	r30, 0x18	; 24
   177d0:	f2 4f       	sbci	r31, 0xF2	; 242
   177d2:	85 80       	ldd	r8, Z+5	; 0x05
   177d4:	8f ef       	ldi	r24, 0xFF	; 255
   177d6:	88 0d       	add	r24, r8
   177d8:	82 31       	cpi	r24, 0x12	; 18
   177da:	08 f0       	brcs	.+2      	; 0x177de <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x422>
   177dc:	8e c1       	rjmp	.+796    	; 0x17afa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x73e>
   177de:	94 ce       	rjmp	.-728    	; 0x17508 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x14c>
   177e0:	06 2f       	mov	r16, r22
   177e2:	43 e0       	ldi	r20, 0x03	; 3
   177e4:	84 2e       	mov	r8, r20
   177e6:	a5 ce       	rjmp	.-694    	; 0x17532 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   177e8:	01 e0       	ldi	r16, 0x01	; 1
   177ea:	a3 ce       	rjmp	.-698    	; 0x17532 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   177ec:	16 2d       	mov	r17, r6
   177ee:	20 cf       	rjmp	.-448    	; 0x17630 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x274>
   177f0:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   177f4:	88 23       	and	r24, r24
   177f6:	09 f4       	brne	.+2      	; 0x177fa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x43e>
   177f8:	4b cf       	rjmp	.-362    	; 0x17690 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d4>
   177fa:	f6 01       	movw	r30, r12
   177fc:	01 90       	ld	r0, Z+
   177fe:	00 20       	and	r0, r0
   17800:	e9 f7       	brne	.-6      	; 0x177fc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x440>
   17802:	31 97       	sbiw	r30, 0x01	; 1
   17804:	af 01       	movw	r20, r30
   17806:	40 5d       	subi	r20, 0xD0	; 208
   17808:	5f 40       	sbci	r21, 0x0F	; 15
   1780a:	21 e0       	ldi	r18, 0x01	; 1
   1780c:	60 ed       	ldi	r22, 0xD0	; 208
   1780e:	7f e0       	ldi	r23, 0x0F	; 15
   17810:	82 e6       	ldi	r24, 0x62	; 98
   17812:	9f e0       	ldi	r25, 0x0F	; 15
   17814:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   17818:	3b cf       	rjmp	.-394    	; 0x17690 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d4>
   1781a:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   1781e:	88 23       	and	r24, r24
   17820:	09 f4       	brne	.+2      	; 0x17824 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x468>
   17822:	4b cf       	rjmp	.-362    	; 0x176ba <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2fe>
   17824:	f6 01       	movw	r30, r12
   17826:	01 90       	ld	r0, Z+
   17828:	00 20       	and	r0, r0
   1782a:	e9 f7       	brne	.-6      	; 0x17826 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x46a>
   1782c:	31 97       	sbiw	r30, 0x01	; 1
   1782e:	af 01       	movw	r20, r30
   17830:	40 5d       	subi	r20, 0xD0	; 208
   17832:	5f 40       	sbci	r21, 0x0F	; 15
   17834:	21 e0       	ldi	r18, 0x01	; 1
   17836:	60 ed       	ldi	r22, 0xD0	; 208
   17838:	7f e0       	ldi	r23, 0x0F	; 15
   1783a:	82 e6       	ldi	r24, 0x62	; 98
   1783c:	9f e0       	ldi	r25, 0x0F	; 15
   1783e:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   17842:	3b cf       	rjmp	.-394    	; 0x176ba <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2fe>
   17844:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   17848:	88 23       	and	r24, r24
   1784a:	09 f4       	brne	.+2      	; 0x1784e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x492>
   1784c:	49 cf       	rjmp	.-366    	; 0x176e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x324>
   1784e:	f6 01       	movw	r30, r12
   17850:	01 90       	ld	r0, Z+
   17852:	00 20       	and	r0, r0
   17854:	e9 f7       	brne	.-6      	; 0x17850 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x494>
   17856:	31 97       	sbiw	r30, 0x01	; 1
   17858:	af 01       	movw	r20, r30
   1785a:	40 5d       	subi	r20, 0xD0	; 208
   1785c:	5f 40       	sbci	r21, 0x0F	; 15
   1785e:	21 e0       	ldi	r18, 0x01	; 1
   17860:	60 ed       	ldi	r22, 0xD0	; 208
   17862:	7f e0       	ldi	r23, 0x0F	; 15
   17864:	82 e6       	ldi	r24, 0x62	; 98
   17866:	9f e0       	ldi	r25, 0x0F	; 15
   17868:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   1786c:	39 cf       	rjmp	.-398    	; 0x176e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x324>
   1786e:	86 e0       	ldi	r24, 0x06	; 6
   17870:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17874:	84 e6       	ldi	r24, 0x64	; 100
   17876:	90 e0       	ldi	r25, 0x00	; 0
   17878:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1787c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17880:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17884:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17888:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1788c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17890:	a0 62       	ori	r26, 0x20	; 32
   17892:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17896:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1789a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1789e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   178a2:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   178a6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   178aa:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   178ae:	82 60       	ori	r24, 0x02	; 2
   178b0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   178b4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   178b8:	00 e0       	ldi	r16, 0x00	; 0
   178ba:	10 e0       	ldi	r17, 0x00	; 0
   178bc:	ea 81       	ldd	r30, Y+2	; 0x02
   178be:	fb 81       	ldd	r31, Y+3	; 0x03
   178c0:	e0 0f       	add	r30, r16
   178c2:	f1 1f       	adc	r31, r17
   178c4:	e8 51       	subi	r30, 0x18	; 24
   178c6:	f2 4f       	sbci	r31, 0xF2	; 242
   178c8:	e5 81       	ldd	r30, Z+5	; 0x05
   178ca:	e3 31       	cpi	r30, 0x13	; 19
   178cc:	68 f0       	brcs	.+26     	; 0x178e8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x52c>
   178ce:	f0 e0       	ldi	r31, 0x00	; 0
   178d0:	e7 5c       	subi	r30, 0xC7	; 199
   178d2:	fb 4e       	sbci	r31, 0xEB	; 235
   178d4:	61 e0       	ldi	r22, 0x01	; 1
   178d6:	80 81       	ld	r24, Z
   178d8:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   178dc:	68 ec       	ldi	r22, 0xC8	; 200
   178de:	70 e0       	ldi	r23, 0x00	; 0
   178e0:	80 e0       	ldi	r24, 0x00	; 0
   178e2:	90 e0       	ldi	r25, 0x00	; 0
   178e4:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   178e8:	0f 5f       	subi	r16, 0xFF	; 255
   178ea:	1f 4f       	sbci	r17, 0xFF	; 255
   178ec:	05 30       	cpi	r16, 0x05	; 5
   178ee:	11 05       	cpc	r17, r1
   178f0:	29 f7       	brne	.-54     	; 0x178bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x500>
   178f2:	80 e0       	ldi	r24, 0x00	; 0
   178f4:	27 c1       	rjmp	.+590    	; 0x17b44 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x788>
   178f6:	01 96       	adiw	r24, 0x01	; 1
   178f8:	86 30       	cpi	r24, 0x06	; 6
   178fa:	91 05       	cpc	r25, r1
   178fc:	09 f0       	breq	.+2      	; 0x17900 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x544>
   178fe:	23 cf       	rjmp	.-442    	; 0x17746 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x38a>
   17900:	3d cf       	rjmp	.-390    	; 0x1777c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c0>
   17902:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17906:	81 30       	cpi	r24, 0x01	; 1
   17908:	51 f4       	brne	.+20     	; 0x1791e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x562>
   1790a:	67 eb       	ldi	r22, 0xB7	; 183
   1790c:	7d e2       	ldi	r23, 0x2D	; 45
   1790e:	86 ec       	ldi	r24, 0xC6	; 198
   17910:	94 e1       	ldi	r25, 0x14	; 20
   17912:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17916:	86 ec       	ldi	r24, 0xC6	; 198
   17918:	94 e1       	ldi	r25, 0x14	; 20
   1791a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1791e:	02 30       	cpi	r16, 0x02	; 2
   17920:	09 f0       	breq	.+2      	; 0x17924 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x568>
   17922:	40 cf       	rjmp	.-384    	; 0x177a4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17924:	86 e0       	ldi	r24, 0x06	; 6
   17926:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1792a:	84 e6       	ldi	r24, 0x64	; 100
   1792c:	90 e0       	ldi	r25, 0x00	; 0
   1792e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17932:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17936:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1793a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1793e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17942:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17946:	a0 62       	ori	r26, 0x20	; 32
   17948:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1794c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17950:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17954:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17958:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   1795c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17960:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17964:	82 60       	ori	r24, 0x02	; 2
   17966:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1796a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1796e:	00 e0       	ldi	r16, 0x00	; 0
   17970:	10 e0       	ldi	r17, 0x00	; 0
   17972:	ea 81       	ldd	r30, Y+2	; 0x02
   17974:	fb 81       	ldd	r31, Y+3	; 0x03
   17976:	e0 0f       	add	r30, r16
   17978:	f1 1f       	adc	r31, r17
   1797a:	e8 51       	subi	r30, 0x18	; 24
   1797c:	f2 4f       	sbci	r31, 0xF2	; 242
   1797e:	e5 81       	ldd	r30, Z+5	; 0x05
   17980:	e3 31       	cpi	r30, 0x13	; 19
   17982:	68 f0       	brcs	.+26     	; 0x1799e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5e2>
   17984:	f0 e0       	ldi	r31, 0x00	; 0
   17986:	e7 5c       	subi	r30, 0xC7	; 199
   17988:	fb 4e       	sbci	r31, 0xEB	; 235
   1798a:	61 e0       	ldi	r22, 0x01	; 1
   1798c:	80 81       	ld	r24, Z
   1798e:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   17992:	68 ec       	ldi	r22, 0xC8	; 200
   17994:	70 e0       	ldi	r23, 0x00	; 0
   17996:	80 e0       	ldi	r24, 0x00	; 0
   17998:	90 e0       	ldi	r25, 0x00	; 0
   1799a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   1799e:	0f 5f       	subi	r16, 0xFF	; 255
   179a0:	1f 4f       	sbci	r17, 0xFF	; 255
   179a2:	05 30       	cpi	r16, 0x05	; 5
   179a4:	11 05       	cpc	r17, r1
   179a6:	29 f7       	brne	.-54     	; 0x17972 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5b6>
   179a8:	a4 cf       	rjmp	.-184    	; 0x178f2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   179aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   179ae:	81 30       	cpi	r24, 0x01	; 1
   179b0:	51 f4       	brne	.+20     	; 0x179c6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x60a>
   179b2:	6c e7       	ldi	r22, 0x7C	; 124
   179b4:	7d e2       	ldi	r23, 0x2D	; 45
   179b6:	86 ec       	ldi	r24, 0xC6	; 198
   179b8:	94 e1       	ldi	r25, 0x14	; 20
   179ba:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   179be:	86 ec       	ldi	r24, 0xC6	; 198
   179c0:	94 e1       	ldi	r25, 0x14	; 20
   179c2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   179c6:	02 30       	cpi	r16, 0x02	; 2
   179c8:	09 f0       	breq	.+2      	; 0x179cc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x610>
   179ca:	ec ce       	rjmp	.-552    	; 0x177a4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   179cc:	86 e0       	ldi	r24, 0x06	; 6
   179ce:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   179d2:	84 e6       	ldi	r24, 0x64	; 100
   179d4:	90 e0       	ldi	r25, 0x00	; 0
   179d6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   179da:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   179de:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   179e2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   179e6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   179ea:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   179ee:	a0 62       	ori	r26, 0x20	; 32
   179f0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   179f4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   179f8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   179fc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17a00:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17a04:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17a08:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17a0c:	82 60       	ori	r24, 0x02	; 2
   17a0e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17a12:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17a16:	00 e0       	ldi	r16, 0x00	; 0
   17a18:	10 e0       	ldi	r17, 0x00	; 0
   17a1a:	ea 81       	ldd	r30, Y+2	; 0x02
   17a1c:	fb 81       	ldd	r31, Y+3	; 0x03
   17a1e:	e0 0f       	add	r30, r16
   17a20:	f1 1f       	adc	r31, r17
   17a22:	e8 51       	subi	r30, 0x18	; 24
   17a24:	f2 4f       	sbci	r31, 0xF2	; 242
   17a26:	e5 81       	ldd	r30, Z+5	; 0x05
   17a28:	e3 31       	cpi	r30, 0x13	; 19
   17a2a:	68 f0       	brcs	.+26     	; 0x17a46 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x68a>
   17a2c:	f0 e0       	ldi	r31, 0x00	; 0
   17a2e:	e7 5c       	subi	r30, 0xC7	; 199
   17a30:	fb 4e       	sbci	r31, 0xEB	; 235
   17a32:	61 e0       	ldi	r22, 0x01	; 1
   17a34:	80 81       	ld	r24, Z
   17a36:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   17a3a:	68 ec       	ldi	r22, 0xC8	; 200
   17a3c:	70 e0       	ldi	r23, 0x00	; 0
   17a3e:	80 e0       	ldi	r24, 0x00	; 0
   17a40:	90 e0       	ldi	r25, 0x00	; 0
   17a42:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17a46:	0f 5f       	subi	r16, 0xFF	; 255
   17a48:	1f 4f       	sbci	r17, 0xFF	; 255
   17a4a:	05 30       	cpi	r16, 0x05	; 5
   17a4c:	11 05       	cpc	r17, r1
   17a4e:	29 f7       	brne	.-54     	; 0x17a1a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x65e>
   17a50:	50 cf       	rjmp	.-352    	; 0x178f2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17a52:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17a56:	81 30       	cpi	r24, 0x01	; 1
   17a58:	51 f4       	brne	.+20     	; 0x17a6e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6b2>
   17a5a:	61 e4       	ldi	r22, 0x41	; 65
   17a5c:	7d e2       	ldi	r23, 0x2D	; 45
   17a5e:	86 ec       	ldi	r24, 0xC6	; 198
   17a60:	94 e1       	ldi	r25, 0x14	; 20
   17a62:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17a66:	86 ec       	ldi	r24, 0xC6	; 198
   17a68:	94 e1       	ldi	r25, 0x14	; 20
   17a6a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17a6e:	02 30       	cpi	r16, 0x02	; 2
   17a70:	09 f0       	breq	.+2      	; 0x17a74 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6b8>
   17a72:	98 ce       	rjmp	.-720    	; 0x177a4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17a74:	86 e0       	ldi	r24, 0x06	; 6
   17a76:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17a7a:	84 e6       	ldi	r24, 0x64	; 100
   17a7c:	90 e0       	ldi	r25, 0x00	; 0
   17a7e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17a82:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17a86:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17a8a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17a8e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17a92:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17a96:	a0 62       	ori	r26, 0x20	; 32
   17a98:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17a9c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17aa0:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17aa4:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17aa8:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17aac:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17ab0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17ab4:	82 60       	ori	r24, 0x02	; 2
   17ab6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17aba:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17abe:	00 e0       	ldi	r16, 0x00	; 0
   17ac0:	10 e0       	ldi	r17, 0x00	; 0
   17ac2:	ea 81       	ldd	r30, Y+2	; 0x02
   17ac4:	fb 81       	ldd	r31, Y+3	; 0x03
   17ac6:	e0 0f       	add	r30, r16
   17ac8:	f1 1f       	adc	r31, r17
   17aca:	e8 51       	subi	r30, 0x18	; 24
   17acc:	f2 4f       	sbci	r31, 0xF2	; 242
   17ace:	e5 81       	ldd	r30, Z+5	; 0x05
   17ad0:	e3 31       	cpi	r30, 0x13	; 19
   17ad2:	68 f0       	brcs	.+26     	; 0x17aee <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x732>
   17ad4:	f0 e0       	ldi	r31, 0x00	; 0
   17ad6:	e7 5c       	subi	r30, 0xC7	; 199
   17ad8:	fb 4e       	sbci	r31, 0xEB	; 235
   17ada:	61 e0       	ldi	r22, 0x01	; 1
   17adc:	80 81       	ld	r24, Z
   17ade:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   17ae2:	68 ec       	ldi	r22, 0xC8	; 200
   17ae4:	70 e0       	ldi	r23, 0x00	; 0
   17ae6:	80 e0       	ldi	r24, 0x00	; 0
   17ae8:	90 e0       	ldi	r25, 0x00	; 0
   17aea:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17aee:	0f 5f       	subi	r16, 0xFF	; 255
   17af0:	1f 4f       	sbci	r17, 0xFF	; 255
   17af2:	05 30       	cpi	r16, 0x05	; 5
   17af4:	11 05       	cpc	r17, r1
   17af6:	29 f7       	brne	.-54     	; 0x17ac2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x706>
   17af8:	fc ce       	rjmp	.-520    	; 0x178f2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17afa:	22 e1       	ldi	r18, 0x12	; 18
   17afc:	28 15       	cp	r18, r8
   17afe:	08 f0       	brcs	.+2      	; 0x17b02 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x746>
   17b00:	5a ce       	rjmp	.-844    	; 0x177b6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   17b02:	61 e0       	ldi	r22, 0x01	; 1
   17b04:	39 81       	ldd	r19, Y+1	; 0x01
   17b06:	31 11       	cpse	r19, r1
   17b08:	60 e0       	ldi	r22, 0x00	; 0
   17b0a:	e8 2d       	mov	r30, r8
   17b0c:	f0 e0       	ldi	r31, 0x00	; 0
   17b0e:	e7 5c       	subi	r30, 0xC7	; 199
   17b10:	fb 4e       	sbci	r31, 0xEB	; 235
   17b12:	80 81       	ld	r24, Z
   17b14:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   17b18:	68 ec       	ldi	r22, 0xC8	; 200
   17b1a:	70 e0       	ldi	r23, 0x00	; 0
   17b1c:	80 e0       	ldi	r24, 0x00	; 0
   17b1e:	90 e0       	ldi	r25, 0x00	; 0
   17b20:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17b24:	48 ce       	rjmp	.-880    	; 0x177b6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   17b26:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17b2a:	81 30       	cpi	r24, 0x01	; 1
   17b2c:	51 f4       	brne	.+20     	; 0x17b42 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   17b2e:	62 e2       	ldi	r22, 0x22	; 34
   17b30:	7d e2       	ldi	r23, 0x2D	; 45
   17b32:	86 ec       	ldi	r24, 0xC6	; 198
   17b34:	94 e1       	ldi	r25, 0x14	; 20
   17b36:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17b3a:	86 ec       	ldi	r24, 0xC6	; 198
   17b3c:	94 e1       	ldi	r25, 0x14	; 20
   17b3e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17b42:	81 e0       	ldi	r24, 0x01	; 1
   17b44:	0f 90       	pop	r0
   17b46:	0f 90       	pop	r0
   17b48:	0f 90       	pop	r0
   17b4a:	df 91       	pop	r29
   17b4c:	cf 91       	pop	r28
   17b4e:	1f 91       	pop	r17
   17b50:	0f 91       	pop	r16
   17b52:	ff 90       	pop	r15
   17b54:	ef 90       	pop	r14
   17b56:	df 90       	pop	r13
   17b58:	cf 90       	pop	r12
   17b5a:	bf 90       	pop	r11
   17b5c:	af 90       	pop	r10
   17b5e:	9f 90       	pop	r9
   17b60:	8f 90       	pop	r8
   17b62:	7f 90       	pop	r7
   17b64:	6f 90       	pop	r6
   17b66:	5f 90       	pop	r5
   17b68:	4f 90       	pop	r4
   17b6a:	3f 90       	pop	r3
   17b6c:	2f 90       	pop	r2
   17b6e:	08 95       	ret

00017b70 <_Z20Wireless_Pump_On_Offhh>:
   17b70:	6f 92       	push	r6
   17b72:	7f 92       	push	r7
   17b74:	8f 92       	push	r8
   17b76:	9f 92       	push	r9
   17b78:	af 92       	push	r10
   17b7a:	bf 92       	push	r11
   17b7c:	cf 92       	push	r12
   17b7e:	df 92       	push	r13
   17b80:	ef 92       	push	r14
   17b82:	ff 92       	push	r15
   17b84:	0f 93       	push	r16
   17b86:	1f 93       	push	r17
   17b88:	cf 93       	push	r28
   17b8a:	df 93       	push	r29
   17b8c:	78 2e       	mov	r7, r24
   17b8e:	c6 2f       	mov	r28, r22
   17b90:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17b94:	8f 5f       	subi	r24, 0xFF	; 255
   17b96:	80 93 d1 0d 	sts	0x0DD1, r24	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17b9a:	22 e0       	ldi	r18, 0x02	; 2
   17b9c:	72 16       	cp	r7, r18
   17b9e:	39 f0       	breq	.+14     	; 0x17bae <_Z20Wireless_Pump_On_Offhh+0x3e>
   17ba0:	34 e0       	ldi	r19, 0x04	; 4
   17ba2:	73 16       	cp	r7, r19
   17ba4:	21 f0       	breq	.+8      	; 0x17bae <_Z20Wireless_Pump_On_Offhh+0x3e>
   17ba6:	81 e0       	ldi	r24, 0x01	; 1
   17ba8:	78 12       	cpse	r7, r24
   17baa:	0f c3       	rjmp	.+1566   	; 0x181ca <_Z20Wireless_Pump_On_Offhh+0x65a>
   17bac:	42 c2       	rjmp	.+1156   	; 0x18032 <_Z20Wireless_Pump_On_Offhh+0x4c2>
   17bae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17bb2:	81 30       	cpi	r24, 0x01	; 1
   17bb4:	89 f4       	brne	.+34     	; 0x17bd8 <_Z20Wireless_Pump_On_Offhh+0x68>
   17bb6:	65 eb       	ldi	r22, 0xB5	; 181
   17bb8:	7c e2       	ldi	r23, 0x2C	; 44
   17bba:	86 ec       	ldi	r24, 0xC6	; 198
   17bbc:	94 e1       	ldi	r25, 0x14	; 20
   17bbe:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17bc2:	4a e0       	ldi	r20, 0x0A	; 10
   17bc4:	50 e0       	ldi	r21, 0x00	; 0
   17bc6:	6c 2f       	mov	r22, r28
   17bc8:	86 ec       	ldi	r24, 0xC6	; 198
   17bca:	94 e1       	ldi	r25, 0x14	; 20
   17bcc:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   17bd0:	86 ec       	ldi	r24, 0xC6	; 198
   17bd2:	94 e1       	ldi	r25, 0x14	; 20
   17bd4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17bd8:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   17bdc:	81 11       	cpse	r24, r1
   17bde:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   17be2:	84 e1       	ldi	r24, 0x14	; 20
   17be4:	e5 ef       	ldi	r30, 0xF5	; 245
   17be6:	f3 e1       	ldi	r31, 0x13	; 19
   17be8:	df 01       	movw	r26, r30
   17bea:	1d 92       	st	X+, r1
   17bec:	8a 95       	dec	r24
   17bee:	e9 f7       	brne	.-6      	; 0x17bea <_Z20Wireless_Pump_On_Offhh+0x7a>
   17bf0:	0c 2f       	mov	r16, r28
   17bf2:	10 e0       	ldi	r17, 0x00	; 0
   17bf4:	bb e0       	ldi	r27, 0x0B	; 11
   17bf6:	cb 9f       	mul	r28, r27
   17bf8:	c0 01       	movw	r24, r0
   17bfa:	11 24       	eor	r1, r1
   17bfc:	fc 01       	movw	r30, r24
   17bfe:	ec 50       	subi	r30, 0x0C	; 12
   17c00:	f4 4f       	sbci	r31, 0xF4	; 244
   17c02:	21 81       	ldd	r18, Z+1	; 0x01
   17c04:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   17c08:	22 81       	ldd	r18, Z+2	; 0x02
   17c0a:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   17c0e:	23 81       	ldd	r18, Z+3	; 0x03
   17c10:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   17c14:	24 81       	ldd	r18, Z+4	; 0x04
   17c16:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   17c1a:	25 81       	ldd	r18, Z+5	; 0x05
   17c1c:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   17c20:	26 81       	ldd	r18, Z+6	; 0x06
   17c22:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   17c26:	21 e0       	ldi	r18, 0x01	; 1
   17c28:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   17c2c:	70 92 fc 13 	sts	0x13FC, r7	; 0x8013fc <_sRuble_Parameters+0x4e>
   17c30:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   17c34:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   17c38:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   17c3c:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   17c40:	21 e0       	ldi	r18, 0x01	; 1
   17c42:	2c 0f       	add	r18, r28
   17c44:	20 93 00 14 	sts	0x1400, r18	; 0x801400 <_sRuble_Parameters+0x52>
   17c48:	23 e5       	ldi	r18, 0x53	; 83
   17c4a:	20 93 01 14 	sts	0x1401, r18	; 0x801401 <_sRuble_Parameters+0x53>
   17c4e:	4c 01       	movw	r8, r24
   17c50:	d0 e0       	ldi	r29, 0x00	; 0
   17c52:	9c 01       	movw	r18, r24
   17c54:	2b 50       	subi	r18, 0x0B	; 11
   17c56:	34 4f       	sbci	r19, 0xF4	; 244
   17c58:	79 01       	movw	r14, r18
   17c5a:	df 5f       	subi	r29, 0xFF	; 255
   17c5c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17c60:	81 30       	cpi	r24, 0x01	; 1
   17c62:	51 f4       	brne	.+20     	; 0x17c78 <_Z20Wireless_Pump_On_Offhh+0x108>
   17c64:	6e e8       	ldi	r22, 0x8E	; 142
   17c66:	7c e2       	ldi	r23, 0x2C	; 44
   17c68:	86 ec       	ldi	r24, 0xC6	; 198
   17c6a:	94 e1       	ldi	r25, 0x14	; 20
   17c6c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17c70:	86 ec       	ldi	r24, 0xC6	; 198
   17c72:	94 e1       	ldi	r25, 0x14	; 20
   17c74:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17c78:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   17c7c:	10 92 f1 0c 	sts	0x0CF1, r1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   17c80:	10 92 f0 0c 	sts	0x0CF0, r1	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   17c84:	8d e0       	ldi	r24, 0x0D	; 13
   17c86:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   17c8a:	61 2c       	mov	r6, r1
   17c8c:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   17c90:	88 23       	and	r24, r24
   17c92:	09 f4       	brne	.+2      	; 0x17c96 <_Z20Wireless_Pump_On_Offhh+0x126>
   17c94:	68 c1       	rjmp	.+720    	; 0x17f66 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17c96:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17c9a:	81 30       	cpi	r24, 0x01	; 1
   17c9c:	71 f4       	brne	.+28     	; 0x17cba <_Z20Wireless_Pump_On_Offhh+0x14a>
   17c9e:	62 e7       	ldi	r22, 0x72	; 114
   17ca0:	7c e2       	ldi	r23, 0x2C	; 44
   17ca2:	86 ec       	ldi	r24, 0xC6	; 198
   17ca4:	94 e1       	ldi	r25, 0x14	; 20
   17ca6:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17caa:	86 ec       	ldi	r24, 0xC6	; 198
   17cac:	94 e1       	ldi	r25, 0x14	; 20
   17cae:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17cb2:	86 ec       	ldi	r24, 0xC6	; 198
   17cb4:	94 e1       	ldi	r25, 0x14	; 20
   17cb6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17cba:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   17cbe:	88 23       	and	r24, r24
   17cc0:	09 f4       	brne	.+2      	; 0x17cc4 <_Z20Wireless_Pump_On_Offhh+0x154>
   17cc2:	51 c1       	rjmp	.+674    	; 0x17f66 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17cc4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17cc8:	81 30       	cpi	r24, 0x01	; 1
   17cca:	59 f5       	brne	.+86     	; 0x17d22 <_Z20Wireless_Pump_On_Offhh+0x1b2>
   17ccc:	69 e5       	ldi	r22, 0x59	; 89
   17cce:	7c e2       	ldi	r23, 0x2C	; 44
   17cd0:	86 ec       	ldi	r24, 0xC6	; 198
   17cd2:	94 e1       	ldi	r25, 0x14	; 20
   17cd4:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17cd8:	4a e0       	ldi	r20, 0x0A	; 10
   17cda:	50 e0       	ldi	r21, 0x00	; 0
   17cdc:	69 e0       	ldi	r22, 0x09	; 9
   17cde:	74 e1       	ldi	r23, 0x14	; 20
   17ce0:	86 ec       	ldi	r24, 0xC6	; 198
   17ce2:	94 e1       	ldi	r25, 0x14	; 20
   17ce4:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   17ce8:	86 ec       	ldi	r24, 0xC6	; 198
   17cea:	94 e1       	ldi	r25, 0x14	; 20
   17cec:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17cf0:	86 ec       	ldi	r24, 0xC6	; 198
   17cf2:	94 e1       	ldi	r25, 0x14	; 20
   17cf4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17cf8:	62 e3       	ldi	r22, 0x32	; 50
   17cfa:	7c e2       	ldi	r23, 0x2C	; 44
   17cfc:	86 ec       	ldi	r24, 0xC6	; 198
   17cfe:	94 e1       	ldi	r25, 0x14	; 20
   17d00:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17d04:	47 e0       	ldi	r20, 0x07	; 7
   17d06:	50 e0       	ldi	r21, 0x00	; 0
   17d08:	b7 01       	movw	r22, r14
   17d0a:	86 ec       	ldi	r24, 0xC6	; 198
   17d0c:	94 e1       	ldi	r25, 0x14	; 20
   17d0e:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
   17d12:	86 ec       	ldi	r24, 0xC6	; 198
   17d14:	94 e1       	ldi	r25, 0x14	; 20
   17d16:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17d1a:	86 ec       	ldi	r24, 0xC6	; 198
   17d1c:	94 e1       	ldi	r25, 0x14	; 20
   17d1e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17d22:	89 e0       	ldi	r24, 0x09	; 9
   17d24:	a8 2e       	mov	r10, r24
   17d26:	84 e1       	ldi	r24, 0x14	; 20
   17d28:	b8 2e       	mov	r11, r24
   17d2a:	c1 2c       	mov	r12, r1
   17d2c:	d1 2c       	mov	r13, r1
   17d2e:	d5 01       	movw	r26, r10
   17d30:	8d 91       	ld	r24, X+
   17d32:	5d 01       	movw	r10, r26
   17d34:	f4 01       	movw	r30, r8
   17d36:	ec 0d       	add	r30, r12
   17d38:	fd 1d       	adc	r31, r13
   17d3a:	ec 50       	subi	r30, 0x0C	; 12
   17d3c:	f4 4f       	sbci	r31, 0xF4	; 244
   17d3e:	91 81       	ldd	r25, Z+1	; 0x01
   17d40:	98 17       	cp	r25, r24
   17d42:	09 f4       	brne	.+2      	; 0x17d46 <_Z20Wireless_Pump_On_Offhh+0x1d6>
   17d44:	54 c0       	rjmp	.+168    	; 0x17dee <_Z20Wireless_Pump_On_Offhh+0x27e>
   17d46:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17d4a:	81 30       	cpi	r24, 0x01	; 1
   17d4c:	51 f4       	brne	.+20     	; 0x17d62 <_Z20Wireless_Pump_On_Offhh+0x1f2>
   17d4e:	66 e0       	ldi	r22, 0x06	; 6
   17d50:	7c e2       	ldi	r23, 0x2C	; 44
   17d52:	86 ec       	ldi	r24, 0xC6	; 198
   17d54:	94 e1       	ldi	r25, 0x14	; 20
   17d56:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17d5a:	86 ec       	ldi	r24, 0xC6	; 198
   17d5c:	94 e1       	ldi	r25, 0x14	; 20
   17d5e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17d62:	68 ee       	ldi	r22, 0xE8	; 232
   17d64:	73 e0       	ldi	r23, 0x03	; 3
   17d66:	80 e0       	ldi	r24, 0x00	; 0
   17d68:	90 e0       	ldi	r25, 0x00	; 0
   17d6a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17d6e:	80 91 f0 0c 	lds	r24, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   17d72:	90 91 f1 0c 	lds	r25, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   17d76:	0b 97       	sbiw	r24, 0x0b	; 11
   17d78:	a0 f0       	brcs	.+40     	; 0x17da2 <_Z20Wireless_Pump_On_Offhh+0x232>
   17d7a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17d7e:	81 30       	cpi	r24, 0x01	; 1
   17d80:	09 f0       	breq	.+2      	; 0x17d84 <_Z20Wireless_Pump_On_Offhh+0x214>
   17d82:	91 c0       	rjmp	.+290    	; 0x17ea6 <_Z20Wireless_Pump_On_Offhh+0x336>
   17d84:	68 ee       	ldi	r22, 0xE8	; 232
   17d86:	7b e2       	ldi	r23, 0x2B	; 43
   17d88:	86 ec       	ldi	r24, 0xC6	; 198
   17d8a:	94 e1       	ldi	r25, 0x14	; 20
   17d8c:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17d90:	86 ec       	ldi	r24, 0xC6	; 198
   17d92:	94 e1       	ldi	r25, 0x14	; 20
   17d94:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17d98:	86 ec       	ldi	r24, 0xC6	; 198
   17d9a:	94 e1       	ldi	r25, 0x14	; 20
   17d9c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17da0:	82 c0       	rjmp	.+260    	; 0x17ea6 <_Z20Wireless_Pump_On_Offhh+0x336>
   17da2:	d3 30       	cpi	r29, 0x03	; 3
   17da4:	10 f1       	brcs	.+68     	; 0x17dea <_Z20Wireless_Pump_On_Offhh+0x27a>
   17da6:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17daa:	83 30       	cpi	r24, 0x03	; 3
   17dac:	f0 f0       	brcs	.+60     	; 0x17dea <_Z20Wireless_Pump_On_Offhh+0x27a>
   17dae:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17db2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17db6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17dba:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17dbe:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17dc2:	a0 62       	ori	r26, 0x20	; 32
   17dc4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17dc8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17dcc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17dd0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17dd4:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   17dd8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17ddc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17de0:	90 68       	ori	r25, 0x80	; 128
   17de2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17de6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17dea:	66 24       	eor	r6, r6
   17dec:	63 94       	inc	r6
   17dee:	bf ef       	ldi	r27, 0xFF	; 255
   17df0:	cb 1a       	sub	r12, r27
   17df2:	db 0a       	sbc	r13, r27
   17df4:	e6 e0       	ldi	r30, 0x06	; 6
   17df6:	ce 16       	cp	r12, r30
   17df8:	d1 04       	cpc	r13, r1
   17dfa:	09 f0       	breq	.+2      	; 0x17dfe <_Z20Wireless_Pump_On_Offhh+0x28e>
   17dfc:	98 cf       	rjmp	.-208    	; 0x17d2e <_Z20Wireless_Pump_On_Offhh+0x1be>
   17dfe:	61 10       	cpse	r6, r1
   17e00:	b2 c0       	rjmp	.+356    	; 0x17f66 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17e02:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17e06:	81 30       	cpi	r24, 0x01	; 1
   17e08:	71 f4       	brne	.+28     	; 0x17e26 <_Z20Wireless_Pump_On_Offhh+0x2b6>
   17e0a:	6c ec       	ldi	r22, 0xCC	; 204
   17e0c:	7b e2       	ldi	r23, 0x2B	; 43
   17e0e:	86 ec       	ldi	r24, 0xC6	; 198
   17e10:	94 e1       	ldi	r25, 0x14	; 20
   17e12:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17e16:	86 ec       	ldi	r24, 0xC6	; 198
   17e18:	94 e1       	ldi	r25, 0x14	; 20
   17e1a:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17e1e:	86 ec       	ldi	r24, 0xC6	; 198
   17e20:	94 e1       	ldi	r25, 0x14	; 20
   17e22:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17e26:	68 ee       	ldi	r22, 0xE8	; 232
   17e28:	73 e0       	ldi	r23, 0x03	; 3
   17e2a:	80 e0       	ldi	r24, 0x00	; 0
   17e2c:	90 e0       	ldi	r25, 0x00	; 0
   17e2e:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17e32:	f2 e0       	ldi	r31, 0x02	; 2
   17e34:	7f 12       	cpse	r7, r31
   17e36:	3f c0       	rjmp	.+126    	; 0x17eb6 <_Z20Wireless_Pump_On_Offhh+0x346>
   17e38:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   17e3c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17e40:	92 30       	cpi	r25, 0x02	; 2
   17e42:	31 f4       	brne	.+12     	; 0x17e50 <_Z20Wireless_Pump_On_Offhh+0x2e0>
   17e44:	81 30       	cpi	r24, 0x01	; 1
   17e46:	09 f0       	breq	.+2      	; 0x17e4a <_Z20Wireless_Pump_On_Offhh+0x2da>
   17e48:	47 c0       	rjmp	.+142    	; 0x17ed8 <_Z20Wireless_Pump_On_Offhh+0x368>
   17e4a:	62 ec       	ldi	r22, 0xC2	; 194
   17e4c:	7b e2       	ldi	r23, 0x2B	; 43
   17e4e:	40 c0       	rjmp	.+128    	; 0x17ed0 <_Z20Wireless_Pump_On_Offhh+0x360>
   17e50:	98 30       	cpi	r25, 0x08	; 8
   17e52:	59 f5       	brne	.+86     	; 0x17eaa <_Z20Wireless_Pump_On_Offhh+0x33a>
   17e54:	81 30       	cpi	r24, 0x01	; 1
   17e56:	31 f4       	brne	.+12     	; 0x17e64 <_Z20Wireless_Pump_On_Offhh+0x2f4>
   17e58:	64 ea       	ldi	r22, 0xA4	; 164
   17e5a:	7b e2       	ldi	r23, 0x2B	; 43
   17e5c:	86 ec       	ldi	r24, 0xC6	; 198
   17e5e:	94 e1       	ldi	r25, 0x14	; 20
   17e60:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e64:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17e68:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   17e6c:	84 e0       	ldi	r24, 0x04	; 4
   17e6e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17e72:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17e76:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17e7a:	82 60       	ori	r24, 0x02	; 2
   17e7c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17e80:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17e84:	8b e0       	ldi	r24, 0x0B	; 11
   17e86:	80 9f       	mul	r24, r16
   17e88:	f0 01       	movw	r30, r0
   17e8a:	81 9f       	mul	r24, r17
   17e8c:	f0 0d       	add	r31, r0
   17e8e:	11 24       	eor	r1, r1
   17e90:	ec 50       	subi	r30, 0x0C	; 12
   17e92:	f4 4f       	sbci	r31, 0xF4	; 244
   17e94:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   17e98:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   17e9c:	98 27       	eor	r25, r24
   17e9e:	89 27       	eor	r24, r25
   17ea0:	98 27       	eor	r25, r24
   17ea2:	91 87       	std	Z+9, r25	; 0x09
   17ea4:	80 87       	std	Z+8, r24	; 0x08
   17ea6:	c0 e0       	ldi	r28, 0x00	; 0
   17ea8:	92 c1       	rjmp	.+804    	; 0x181ce <_Z20Wireless_Pump_On_Offhh+0x65e>
   17eaa:	81 30       	cpi	r24, 0x01	; 1
   17eac:	09 f0       	breq	.+2      	; 0x17eb0 <_Z20Wireless_Pump_On_Offhh+0x340>
   17eae:	5d c0       	rjmp	.+186    	; 0x17f6a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17eb0:	68 e8       	ldi	r22, 0x88	; 136
   17eb2:	7b e2       	ldi	r23, 0x2B	; 43
   17eb4:	4f c0       	rjmp	.+158    	; 0x17f54 <_Z20Wireless_Pump_On_Offhh+0x3e4>
   17eb6:	24 e0       	ldi	r18, 0x04	; 4
   17eb8:	72 12       	cpse	r7, r18
   17eba:	57 c0       	rjmp	.+174    	; 0x17f6a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17ebc:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   17ec0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17ec4:	94 30       	cpi	r25, 0x04	; 4
   17ec6:	e1 f4       	brne	.+56     	; 0x17f00 <_Z20Wireless_Pump_On_Offhh+0x390>
   17ec8:	81 30       	cpi	r24, 0x01	; 1
   17eca:	31 f4       	brne	.+12     	; 0x17ed8 <_Z20Wireless_Pump_On_Offhh+0x368>
   17ecc:	6d e7       	ldi	r22, 0x7D	; 125
   17ece:	7b e2       	ldi	r23, 0x2B	; 43
   17ed0:	86 ec       	ldi	r24, 0xC6	; 198
   17ed2:	94 e1       	ldi	r25, 0x14	; 20
   17ed4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ed8:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17edc:	8b e0       	ldi	r24, 0x0B	; 11
   17ede:	80 9f       	mul	r24, r16
   17ee0:	f0 01       	movw	r30, r0
   17ee2:	81 9f       	mul	r24, r17
   17ee4:	f0 0d       	add	r31, r0
   17ee6:	11 24       	eor	r1, r1
   17ee8:	ec 50       	subi	r30, 0x0C	; 12
   17eea:	f4 4f       	sbci	r31, 0xF4	; 244
   17eec:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   17ef0:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   17ef4:	98 27       	eor	r25, r24
   17ef6:	89 27       	eor	r24, r25
   17ef8:	98 27       	eor	r25, r24
   17efa:	91 87       	std	Z+9, r25	; 0x09
   17efc:	80 87       	std	Z+8, r24	; 0x08
   17efe:	66 c1       	rjmp	.+716    	; 0x181cc <_Z20Wireless_Pump_On_Offhh+0x65c>
   17f00:	98 30       	cpi	r25, 0x08	; 8
   17f02:	21 f5       	brne	.+72     	; 0x17f4c <_Z20Wireless_Pump_On_Offhh+0x3dc>
   17f04:	81 30       	cpi	r24, 0x01	; 1
   17f06:	31 f4       	brne	.+12     	; 0x17f14 <_Z20Wireless_Pump_On_Offhh+0x3a4>
   17f08:	6f e5       	ldi	r22, 0x5F	; 95
   17f0a:	7b e2       	ldi	r23, 0x2B	; 43
   17f0c:	86 ec       	ldi	r24, 0xC6	; 198
   17f0e:	94 e1       	ldi	r25, 0x14	; 20
   17f10:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17f14:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17f18:	8b e0       	ldi	r24, 0x0B	; 11
   17f1a:	80 9f       	mul	r24, r16
   17f1c:	f0 01       	movw	r30, r0
   17f1e:	81 9f       	mul	r24, r17
   17f20:	f0 0d       	add	r31, r0
   17f22:	11 24       	eor	r1, r1
   17f24:	ec 50       	subi	r30, 0x0C	; 12
   17f26:	f4 4f       	sbci	r31, 0xF4	; 244
   17f28:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   17f2c:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   17f30:	98 27       	eor	r25, r24
   17f32:	89 27       	eor	r24, r25
   17f34:	98 27       	eor	r25, r24
   17f36:	91 87       	std	Z+9, r25	; 0x09
   17f38:	80 87       	std	Z+8, r24	; 0x08
   17f3a:	84 e0       	ldi	r24, 0x04	; 4
   17f3c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17f40:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17f44:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17f48:	82 60       	ori	r24, 0x02	; 2
   17f4a:	6e c0       	rjmp	.+220    	; 0x18028 <_Z20Wireless_Pump_On_Offhh+0x4b8>
   17f4c:	81 30       	cpi	r24, 0x01	; 1
   17f4e:	69 f4       	brne	.+26     	; 0x17f6a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17f50:	63 e4       	ldi	r22, 0x43	; 67
   17f52:	7b e2       	ldi	r23, 0x2B	; 43
   17f54:	86 ec       	ldi	r24, 0xC6	; 198
   17f56:	94 e1       	ldi	r25, 0x14	; 20
   17f58:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   17f5c:	86 ec       	ldi	r24, 0xC6	; 198
   17f5e:	94 e1       	ldi	r25, 0x14	; 20
   17f60:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17f64:	02 c0       	rjmp	.+4      	; 0x17f6a <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17f66:	80 e0       	ldi	r24, 0x00	; 0
   17f68:	02 c0       	rjmp	.+4      	; 0x17f6e <_Z20Wireless_Pump_On_Offhh+0x3fe>
   17f6a:	81 e0       	ldi	r24, 0x01	; 1
   17f6c:	d3 e0       	ldi	r29, 0x03	; 3
   17f6e:	20 91 f0 0c 	lds	r18, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   17f72:	30 91 f1 0c 	lds	r19, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   17f76:	28 30       	cpi	r18, 0x08	; 8
   17f78:	31 05       	cpc	r19, r1
   17f7a:	20 f4       	brcc	.+8      	; 0x17f84 <_Z20Wireless_Pump_On_Offhh+0x414>
   17f7c:	88 23       	and	r24, r24
   17f7e:	09 f4       	brne	.+2      	; 0x17f82 <_Z20Wireless_Pump_On_Offhh+0x412>
   17f80:	85 ce       	rjmp	.-758    	; 0x17c8c <_Z20Wireless_Pump_On_Offhh+0x11c>
   17f82:	02 c0       	rjmp	.+4      	; 0x17f88 <_Z20Wireless_Pump_On_Offhh+0x418>
   17f84:	81 30       	cpi	r24, 0x01	; 1
   17f86:	b1 f4       	brne	.+44     	; 0x17fb4 <_Z20Wireless_Pump_On_Offhh+0x444>
   17f88:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17f8c:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17f90:	c1 30       	cpi	r28, 0x01	; 1
   17f92:	09 f0       	breq	.+2      	; 0x17f96 <_Z20Wireless_Pump_On_Offhh+0x426>
   17f94:	1b c1       	rjmp	.+566    	; 0x181cc <_Z20Wireless_Pump_On_Offhh+0x65c>
   17f96:	67 e2       	ldi	r22, 0x27	; 39
   17f98:	7b e2       	ldi	r23, 0x2B	; 43
   17f9a:	86 ec       	ldi	r24, 0xC6	; 198
   17f9c:	94 e1       	ldi	r25, 0x14	; 20
   17f9e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17fa2:	86 ec       	ldi	r24, 0xC6	; 198
   17fa4:	94 e1       	ldi	r25, 0x14	; 20
   17fa6:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17faa:	86 ec       	ldi	r24, 0xC6	; 198
   17fac:	94 e1       	ldi	r25, 0x14	; 20
   17fae:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17fb2:	0d c1       	rjmp	.+538    	; 0x181ce <_Z20Wireless_Pump_On_Offhh+0x65e>
   17fb4:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17fb8:	83 30       	cpi	r24, 0x03	; 3
   17fba:	a8 f0       	brcs	.+42     	; 0x17fe6 <_Z20Wireless_Pump_On_Offhh+0x476>
   17fbc:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17fc0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17fc4:	81 30       	cpi	r24, 0x01	; 1
   17fc6:	c1 f4       	brne	.+48     	; 0x17ff8 <_Z20Wireless_Pump_On_Offhh+0x488>
   17fc8:	6b e0       	ldi	r22, 0x0B	; 11
   17fca:	7b e2       	ldi	r23, 0x2B	; 43
   17fcc:	86 ec       	ldi	r24, 0xC6	; 198
   17fce:	94 e1       	ldi	r25, 0x14	; 20
   17fd0:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   17fd4:	86 ec       	ldi	r24, 0xC6	; 198
   17fd6:	94 e1       	ldi	r25, 0x14	; 20
   17fd8:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   17fdc:	86 ec       	ldi	r24, 0xC6	; 198
   17fde:	94 e1       	ldi	r25, 0x14	; 20
   17fe0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   17fe4:	09 c0       	rjmp	.+18     	; 0x17ff8 <_Z20Wireless_Pump_On_Offhh+0x488>
   17fe6:	68 ee       	ldi	r22, 0xE8	; 232
   17fe8:	73 e0       	ldi	r23, 0x03	; 3
   17fea:	80 e0       	ldi	r24, 0x00	; 0
   17fec:	90 e0       	ldi	r25, 0x00	; 0
   17fee:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   17ff2:	d3 30       	cpi	r29, 0x03	; 3
   17ff4:	08 f4       	brcc	.+2      	; 0x17ff8 <_Z20Wireless_Pump_On_Offhh+0x488>
   17ff6:	31 ce       	rjmp	.-926    	; 0x17c5a <_Z20Wireless_Pump_On_Offhh+0xea>
   17ff8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17ffc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18000:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18004:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18008:	a0 62       	ori	r26, 0x20	; 32
   1800a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1800e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18012:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18016:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1801a:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   1801e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18022:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18026:	90 68       	ori	r25, 0x80	; 128
   18028:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1802c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18030:	3a cf       	rjmp	.-396    	; 0x17ea6 <_Z20Wireless_Pump_On_Offhh+0x336>
   18032:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18036:	81 30       	cpi	r24, 0x01	; 1
   18038:	89 f4       	brne	.+34     	; 0x1805c <_Z20Wireless_Pump_On_Offhh+0x4ec>
   1803a:	68 ef       	ldi	r22, 0xF8	; 248
   1803c:	7a e2       	ldi	r23, 0x2A	; 42
   1803e:	86 ec       	ldi	r24, 0xC6	; 198
   18040:	94 e1       	ldi	r25, 0x14	; 20
   18042:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   18046:	4a e0       	ldi	r20, 0x0A	; 10
   18048:	50 e0       	ldi	r21, 0x00	; 0
   1804a:	6c 2f       	mov	r22, r28
   1804c:	86 ec       	ldi	r24, 0xC6	; 198
   1804e:	94 e1       	ldi	r25, 0x14	; 20
   18050:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   18054:	86 ec       	ldi	r24, 0xC6	; 198
   18056:	94 e1       	ldi	r25, 0x14	; 20
   18058:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1805c:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   18060:	81 11       	cpse	r24, r1
   18062:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   18066:	84 e1       	ldi	r24, 0x14	; 20
   18068:	e5 ef       	ldi	r30, 0xF5	; 245
   1806a:	f3 e1       	ldi	r31, 0x13	; 19
   1806c:	df 01       	movw	r26, r30
   1806e:	1d 92       	st	X+, r1
   18070:	8a 95       	dec	r24
   18072:	e9 f7       	brne	.-6      	; 0x1806e <_Z20Wireless_Pump_On_Offhh+0x4fe>
   18074:	bb e0       	ldi	r27, 0x0B	; 11
   18076:	cb 9f       	mul	r28, r27
   18078:	80 01       	movw	r16, r0
   1807a:	11 24       	eor	r1, r1
   1807c:	f8 01       	movw	r30, r16
   1807e:	ec 50       	subi	r30, 0x0C	; 12
   18080:	f4 4f       	sbci	r31, 0xF4	; 244
   18082:	81 81       	ldd	r24, Z+1	; 0x01
   18084:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   18088:	82 81       	ldd	r24, Z+2	; 0x02
   1808a:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   1808e:	83 81       	ldd	r24, Z+3	; 0x03
   18090:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   18094:	84 81       	ldd	r24, Z+4	; 0x04
   18096:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   1809a:	85 81       	ldd	r24, Z+5	; 0x05
   1809c:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   180a0:	86 81       	ldd	r24, Z+6	; 0x06
   180a2:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   180a6:	81 e0       	ldi	r24, 0x01	; 1
   180a8:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
   180ac:	80 93 fc 13 	sts	0x13FC, r24	; 0x8013fc <_sRuble_Parameters+0x4e>
   180b0:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   180b4:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   180b8:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   180bc:	80 93 ff 13 	sts	0x13FF, r24	; 0x8013ff <_sRuble_Parameters+0x51>
   180c0:	81 e0       	ldi	r24, 0x01	; 1
   180c2:	8c 0f       	add	r24, r28
   180c4:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0x52>
   180c8:	83 e5       	ldi	r24, 0x53	; 83
   180ca:	80 93 01 14 	sts	0x1401, r24	; 0x801401 <_sRuble_Parameters+0x53>
   180ce:	80 91 ad 14 	lds	r24, 0x14AD	; 0x8014ad <_sRuble_Parameters+0xff>
   180d2:	80 93 02 14 	sts	0x1402, r24	; 0x801402 <_sRuble_Parameters+0x54>
   180d6:	78 01       	movw	r14, r16
   180d8:	d0 e0       	ldi	r29, 0x00	; 0
   180da:	0b 50       	subi	r16, 0x0B	; 11
   180dc:	14 4f       	sbci	r17, 0xF4	; 244
   180de:	df 5f       	subi	r29, 0xFF	; 255
   180e0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   180e4:	81 30       	cpi	r24, 0x01	; 1
   180e6:	51 f4       	brne	.+20     	; 0x180fc <_Z20Wireless_Pump_On_Offhh+0x58c>
   180e8:	61 ed       	ldi	r22, 0xD1	; 209
   180ea:	7a e2       	ldi	r23, 0x2A	; 42
   180ec:	86 ec       	ldi	r24, 0xC6	; 198
   180ee:	94 e1       	ldi	r25, 0x14	; 20
   180f0:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   180f4:	86 ec       	ldi	r24, 0xC6	; 198
   180f6:	94 e1       	ldi	r25, 0x14	; 20
   180f8:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   180fc:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   18100:	8e e0       	ldi	r24, 0x0E	; 14
   18102:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   18106:	80 ee       	ldi	r24, 0xE0	; 224
   18108:	9e e2       	ldi	r25, 0x2E	; 46
   1810a:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
   1810e:	88 23       	and	r24, r24
   18110:	09 f4       	brne	.+2      	; 0x18114 <_Z20Wireless_Pump_On_Offhh+0x5a4>
   18112:	4f c0       	rjmp	.+158    	; 0x181b2 <_Z20Wireless_Pump_On_Offhh+0x642>
   18114:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   18118:	88 23       	and	r24, r24
   1811a:	09 f4       	brne	.+2      	; 0x1811e <_Z20Wireless_Pump_On_Offhh+0x5ae>
   1811c:	4a c0       	rjmp	.+148    	; 0x181b2 <_Z20Wireless_Pump_On_Offhh+0x642>
   1811e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18122:	81 30       	cpi	r24, 0x01	; 1
   18124:	59 f5       	brne	.+86     	; 0x1817c <_Z20Wireless_Pump_On_Offhh+0x60c>
   18126:	68 eb       	ldi	r22, 0xB8	; 184
   18128:	7a e2       	ldi	r23, 0x2A	; 42
   1812a:	86 ec       	ldi	r24, 0xC6	; 198
   1812c:	94 e1       	ldi	r25, 0x14	; 20
   1812e:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   18132:	4a e0       	ldi	r20, 0x0A	; 10
   18134:	50 e0       	ldi	r21, 0x00	; 0
   18136:	69 e0       	ldi	r22, 0x09	; 9
   18138:	74 e1       	ldi	r23, 0x14	; 20
   1813a:	86 ec       	ldi	r24, 0xC6	; 198
   1813c:	94 e1       	ldi	r25, 0x14	; 20
   1813e:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   18142:	86 ec       	ldi	r24, 0xC6	; 198
   18144:	94 e1       	ldi	r25, 0x14	; 20
   18146:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   1814a:	86 ec       	ldi	r24, 0xC6	; 198
   1814c:	94 e1       	ldi	r25, 0x14	; 20
   1814e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18152:	6a e9       	ldi	r22, 0x9A	; 154
   18154:	7a e2       	ldi	r23, 0x2A	; 42
   18156:	86 ec       	ldi	r24, 0xC6	; 198
   18158:	94 e1       	ldi	r25, 0x14	; 20
   1815a:	0e 94 7d d4 	call	0x1a8fa	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1815e:	47 e0       	ldi	r20, 0x07	; 7
   18160:	50 e0       	ldi	r21, 0x00	; 0
   18162:	b8 01       	movw	r22, r16
   18164:	86 ec       	ldi	r24, 0xC6	; 198
   18166:	94 e1       	ldi	r25, 0x14	; 20
   18168:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <_ZN5Print5writeEPKhj>
   1816c:	86 ec       	ldi	r24, 0xC6	; 198
   1816e:	94 e1       	ldi	r25, 0x14	; 20
   18170:	0e 94 aa d4 	call	0x1a954	; 0x1a954 <_ZN5Print7printlnEv>
   18174:	86 ec       	ldi	r24, 0xC6	; 198
   18176:	94 e1       	ldi	r25, 0x14	; 20
   18178:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1817c:	a9 e0       	ldi	r26, 0x09	; 9
   1817e:	b4 e1       	ldi	r27, 0x14	; 20
   18180:	80 e0       	ldi	r24, 0x00	; 0
   18182:	90 e0       	ldi	r25, 0x00	; 0
   18184:	2d 91       	ld	r18, X+
   18186:	f7 01       	movw	r30, r14
   18188:	e8 0f       	add	r30, r24
   1818a:	f9 1f       	adc	r31, r25
   1818c:	ec 50       	subi	r30, 0x0C	; 12
   1818e:	f4 4f       	sbci	r31, 0xF4	; 244
   18190:	31 81       	ldd	r19, Z+1	; 0x01
   18192:	32 17       	cp	r19, r18
   18194:	19 f0       	breq	.+6      	; 0x1819c <_Z20Wireless_Pump_On_Offhh+0x62c>
   18196:	d1 30       	cpi	r29, 0x01	; 1
   18198:	09 f0       	breq	.+2      	; 0x1819c <_Z20Wireless_Pump_On_Offhh+0x62c>
   1819a:	85 ce       	rjmp	.-758    	; 0x17ea6 <_Z20Wireless_Pump_On_Offhh+0x336>
   1819c:	01 96       	adiw	r24, 0x01	; 1
   1819e:	86 30       	cpi	r24, 0x06	; 6
   181a0:	91 05       	cpc	r25, r1
   181a2:	81 f7       	brne	.-32     	; 0x18184 <_Z20Wireless_Pump_On_Offhh+0x614>
   181a4:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   181a8:	81 30       	cpi	r24, 0x01	; 1
   181aa:	19 f4       	brne	.+6      	; 0x181b2 <_Z20Wireless_Pump_On_Offhh+0x642>
   181ac:	d3 30       	cpi	r29, 0x03	; 3
   181ae:	31 f0       	breq	.+12     	; 0x181bc <_Z20Wireless_Pump_On_Offhh+0x64c>
   181b0:	96 cf       	rjmp	.-212    	; 0x180de <_Z20Wireless_Pump_On_Offhh+0x56e>
   181b2:	d1 30       	cpi	r29, 0x01	; 1
   181b4:	09 f0       	breq	.+2      	; 0x181b8 <_Z20Wireless_Pump_On_Offhh+0x648>
   181b6:	77 ce       	rjmp	.-786    	; 0x17ea6 <_Z20Wireless_Pump_On_Offhh+0x336>
   181b8:	d1 e0       	ldi	r29, 0x01	; 1
   181ba:	91 cf       	rjmp	.-222    	; 0x180de <_Z20Wireless_Pump_On_Offhh+0x56e>
   181bc:	c1 e0       	ldi	r28, 0x01	; 1
   181be:	80 91 16 14 	lds	r24, 0x1416	; 0x801416 <_sRuble_Parameters+0x68>
   181c2:	81 30       	cpi	r24, 0x01	; 1
   181c4:	09 f0       	breq	.+2      	; 0x181c8 <_Z20Wireless_Pump_On_Offhh+0x658>
   181c6:	6f ce       	rjmp	.-802    	; 0x17ea6 <_Z20Wireless_Pump_On_Offhh+0x336>
   181c8:	02 c0       	rjmp	.+4      	; 0x181ce <_Z20Wireless_Pump_On_Offhh+0x65e>
   181ca:	02 c0       	rjmp	.+4      	; 0x181d0 <_Z20Wireless_Pump_On_Offhh+0x660>
   181cc:	c1 e0       	ldi	r28, 0x01	; 1
   181ce:	8c 2f       	mov	r24, r28
   181d0:	df 91       	pop	r29
   181d2:	cf 91       	pop	r28
   181d4:	1f 91       	pop	r17
   181d6:	0f 91       	pop	r16
   181d8:	ff 90       	pop	r15
   181da:	ef 90       	pop	r14
   181dc:	df 90       	pop	r13
   181de:	cf 90       	pop	r12
   181e0:	bf 90       	pop	r11
   181e2:	af 90       	pop	r10
   181e4:	9f 90       	pop	r9
   181e6:	8f 90       	pop	r8
   181e8:	7f 90       	pop	r7
   181ea:	6f 90       	pop	r6
   181ec:	08 95       	ret

000181ee <_Z15Stop_Irrigationv>:
   181ee:	cf 93       	push	r28
   181f0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   181f4:	81 30       	cpi	r24, 0x01	; 1
   181f6:	51 f4       	brne	.+20     	; 0x1820c <_Z15Stop_Irrigationv+0x1e>
   181f8:	67 e6       	ldi	r22, 0x67	; 103
   181fa:	70 e4       	ldi	r23, 0x40	; 64
   181fc:	86 ec       	ldi	r24, 0xC6	; 198
   181fe:	94 e1       	ldi	r25, 0x14	; 20
   18200:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18204:	86 ec       	ldi	r24, 0xC6	; 198
   18206:	94 e1       	ldi	r25, 0x14	; 20
   18208:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1820c:	c0 91 9a 14 	lds	r28, 0x149A	; 0x80149a <_sRuble_Parameters+0xec>
   18210:	8f ef       	ldi	r24, 0xFF	; 255
   18212:	8c 0f       	add	r24, r28
   18214:	83 30       	cpi	r24, 0x03	; 3
   18216:	18 f4       	brcc	.+6      	; 0x1821e <_Z15Stop_Irrigationv+0x30>
   18218:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
   1821c:	02 c0       	rjmp	.+4      	; 0x18222 <_Z15Stop_Irrigationv+0x34>
   1821e:	c0 91 98 14 	lds	r28, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18222:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   18226:	81 30       	cpi	r24, 0x01	; 1
   18228:	59 f4       	brne	.+22     	; 0x18240 <_Z15Stop_Irrigationv+0x52>
   1822a:	c2 30       	cpi	r28, 0x02	; 2
   1822c:	48 f0       	brcs	.+18     	; 0x18240 <_Z15Stop_Irrigationv+0x52>
   1822e:	82 e0       	ldi	r24, 0x02	; 2
   18230:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   18234:	6b e7       	ldi	r22, 0x7B	; 123
   18236:	74 e1       	ldi	r23, 0x14	; 20
   18238:	88 ea       	ldi	r24, 0xA8	; 168
   1823a:	9c e0       	ldi	r25, 0x0C	; 12
   1823c:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18240:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   18244:	81 30       	cpi	r24, 0x01	; 1
   18246:	29 f4       	brne	.+10     	; 0x18252 <_Z15Stop_Irrigationv+0x64>
   18248:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   1824c:	81 30       	cpi	r24, 0x01	; 1
   1824e:	09 f0       	breq	.+2      	; 0x18252 <_Z15Stop_Irrigationv+0x64>
   18250:	6b c0       	rjmp	.+214    	; 0x18328 <_Z15Stop_Irrigationv+0x13a>
   18252:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   18256:	81 11       	cpse	r24, r1
   18258:	16 c0       	rjmp	.+44     	; 0x18286 <_Z15Stop_Irrigationv+0x98>
   1825a:	c1 30       	cpi	r28, 0x01	; 1
   1825c:	a1 f4       	brne	.+40     	; 0x18286 <_Z15Stop_Irrigationv+0x98>
   1825e:	8a e0       	ldi	r24, 0x0A	; 10
   18260:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   18264:	01 97       	sbiw	r24, 0x01	; 1
   18266:	21 f0       	breq	.+8      	; 0x18270 <_Z15Stop_Irrigationv+0x82>
   18268:	61 e0       	ldi	r22, 0x01	; 1
   1826a:	8a e0       	ldi	r24, 0x0A	; 10
   1826c:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   18270:	8b e0       	ldi	r24, 0x0B	; 11
   18272:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   18276:	01 97       	sbiw	r24, 0x01	; 1
   18278:	09 f4       	brne	.+2      	; 0x1827c <_Z15Stop_Irrigationv+0x8e>
   1827a:	56 c0       	rjmp	.+172    	; 0x18328 <_Z15Stop_Irrigationv+0x13a>
   1827c:	61 e0       	ldi	r22, 0x01	; 1
   1827e:	8b e0       	ldi	r24, 0x0B	; 11
   18280:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   18284:	51 c0       	rjmp	.+162    	; 0x18328 <_Z15Stop_Irrigationv+0x13a>
   18286:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1828a:	81 30       	cpi	r24, 0x01	; 1
   1828c:	31 f4       	brne	.+12     	; 0x1829a <_Z15Stop_Irrigationv+0xac>
   1828e:	6d e3       	ldi	r22, 0x3D	; 61
   18290:	70 e4       	ldi	r23, 0x40	; 64
   18292:	86 ec       	ldi	r24, 0xC6	; 198
   18294:	94 e1       	ldi	r25, 0x14	; 20
   18296:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1829a:	6e ef       	ldi	r22, 0xFE	; 254
   1829c:	6c 0f       	add	r22, r28
   1829e:	84 e0       	ldi	r24, 0x04	; 4
   182a0:	67 dc       	rcall	.-1842   	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
   182a2:	2c 2f       	mov	r18, r28
   182a4:	30 e0       	ldi	r19, 0x00	; 0
   182a6:	e0 91 1e 14 	lds	r30, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   182aa:	d9 01       	movw	r26, r18
   182ac:	ae 56       	subi	r26, 0x6E	; 110
   182ae:	bb 4e       	sbci	r27, 0xEB	; 235
   182b0:	1c 92       	st	X, r1
   182b2:	f0 e0       	ldi	r31, 0x00	; 0
   182b4:	e2 58       	subi	r30, 0x82	; 130
   182b6:	fb 4e       	sbci	r31, 0xEB	; 235
   182b8:	88 23       	and	r24, r24
   182ba:	61 f0       	breq	.+24     	; 0x182d4 <_Z15Stop_Irrigationv+0xe6>
   182bc:	10 82       	st	Z, r1
   182be:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   182c2:	6c e7       	ldi	r22, 0x7C	; 124
   182c4:	74 e1       	ldi	r23, 0x14	; 20
   182c6:	8d ea       	ldi	r24, 0xAD	; 173
   182c8:	9c e0       	ldi	r25, 0x0C	; 12
   182ca:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   182ce:	0e 94 4f 86 	call	0x10c9e	; 0x10c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   182d2:	2a c0       	rjmp	.+84     	; 0x18328 <_Z15Stop_Irrigationv+0x13a>
   182d4:	81 e0       	ldi	r24, 0x01	; 1
   182d6:	80 83       	st	Z, r24
   182d8:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   182dc:	6c e7       	ldi	r22, 0x7C	; 124
   182de:	74 e1       	ldi	r23, 0x14	; 20
   182e0:	8d ea       	ldi	r24, 0xAD	; 173
   182e2:	9c e0       	ldi	r25, 0x0C	; 12
   182e4:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   182e8:	0e 94 4f 86 	call	0x10c9e	; 0x10c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   182ec:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   182f0:	8d 7f       	andi	r24, 0xFD	; 253
   182f2:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   182f6:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   182fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   182fe:	81 30       	cpi	r24, 0x01	; 1
   18300:	51 f4       	brne	.+20     	; 0x18316 <_Z15Stop_Irrigationv+0x128>
   18302:	6c e2       	ldi	r22, 0x2C	; 44
   18304:	70 e4       	ldi	r23, 0x40	; 64
   18306:	86 ec       	ldi	r24, 0xC6	; 198
   18308:	94 e1       	ldi	r25, 0x14	; 20
   1830a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1830e:	86 ec       	ldi	r24, 0xC6	; 198
   18310:	94 e1       	ldi	r25, 0x14	; 20
   18312:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18316:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1831a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1831e:	84 60       	ori	r24, 0x04	; 4
   18320:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18324:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18328:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1832c:	88 23       	and	r24, r24
   1832e:	09 f4       	brne	.+2      	; 0x18332 <_Z15Stop_Irrigationv+0x144>
   18330:	41 c0       	rjmp	.+130    	; 0x183b4 <_Z15Stop_Irrigationv+0x1c6>
   18332:	80 93 77 14 	sts	0x1477, r24	; 0x801477 <_sRuble_Parameters+0xc9>
   18336:	83 e0       	ldi	r24, 0x03	; 3
   18338:	0e 94 22 24 	call	0x4844	; 0x4844 <_Z22Hard_Coded_Flush_Valveh>
   1833c:	80 e0       	ldi	r24, 0x00	; 0
   1833e:	0e 94 8a ae 	call	0x15d14	; 0x15d14 <_Z22Valve_Grouping_Handlerh>
   18342:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18346:	88 23       	and	r24, r24
   18348:	e9 f0       	breq	.+58     	; 0x18384 <_Z15Stop_Irrigationv+0x196>
   1834a:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1834e:	8d 7f       	andi	r24, 0xFD	; 253
   18350:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18354:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   18358:	21 30       	cpi	r18, 0x01	; 1
   1835a:	51 f4       	brne	.+20     	; 0x18370 <_Z15Stop_Irrigationv+0x182>
   1835c:	6b e1       	ldi	r22, 0x1B	; 27
   1835e:	70 e4       	ldi	r23, 0x40	; 64
   18360:	86 ec       	ldi	r24, 0xC6	; 198
   18362:	94 e1       	ldi	r25, 0x14	; 20
   18364:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18368:	86 ec       	ldi	r24, 0xC6	; 198
   1836a:	94 e1       	ldi	r25, 0x14	; 20
   1836c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18370:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18374:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18378:	84 60       	ori	r24, 0x04	; 4
   1837a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1837e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18382:	18 c0       	rjmp	.+48     	; 0x183b4 <_Z15Stop_Irrigationv+0x1c6>
   18384:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18388:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1838c:	84 60       	ori	r24, 0x04	; 4
   1838e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18392:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18396:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   1839a:	21 30       	cpi	r18, 0x01	; 1
   1839c:	69 f4       	brne	.+26     	; 0x183b8 <_Z15Stop_Irrigationv+0x1ca>
   1839e:	63 e0       	ldi	r22, 0x03	; 3
   183a0:	70 e4       	ldi	r23, 0x40	; 64
   183a2:	86 ec       	ldi	r24, 0xC6	; 198
   183a4:	94 e1       	ldi	r25, 0x14	; 20
   183a6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   183aa:	86 ec       	ldi	r24, 0xC6	; 198
   183ac:	94 e1       	ldi	r25, 0x14	; 20
   183ae:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   183b2:	02 c0       	rjmp	.+4      	; 0x183b8 <_Z15Stop_Irrigationv+0x1ca>
   183b4:	81 e0       	ldi	r24, 0x01	; 1
   183b6:	01 c0       	rjmp	.+2      	; 0x183ba <_Z15Stop_Irrigationv+0x1cc>
   183b8:	80 e0       	ldi	r24, 0x00	; 0
   183ba:	cf 91       	pop	r28
   183bc:	08 95       	ret

000183be <_Z21Select_Operation_Modev>:
   183be:	90 91 d7 13 	lds	r25, 0x13D7	; 0x8013d7 <_sRuble_Parameters+0x29>
   183c2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   183c6:	93 30       	cpi	r25, 0x03	; 3
   183c8:	09 f4       	brne	.+2      	; 0x183cc <_Z21Select_Operation_Modev+0xe>
   183ca:	c5 c0       	rjmp	.+394    	; 0x18556 <_Z21Select_Operation_Modev+0x198>
   183cc:	94 30       	cpi	r25, 0x04	; 4
   183ce:	09 f4       	brne	.+2      	; 0x183d2 <_Z21Select_Operation_Modev+0x14>
   183d0:	7e c0       	rjmp	.+252    	; 0x184ce <_Z21Select_Operation_Modev+0x110>
   183d2:	91 30       	cpi	r25, 0x01	; 1
   183d4:	09 f0       	breq	.+2      	; 0x183d8 <_Z21Select_Operation_Modev+0x1a>
   183d6:	0d c1       	rjmp	.+538    	; 0x185f2 <_Z21Select_Operation_Modev+0x234>
   183d8:	2d ef       	ldi	r18, 0xFD	; 253
   183da:	28 0f       	add	r18, r24
   183dc:	22 30       	cpi	r18, 0x02	; 2
   183de:	08 f0       	brcs	.+2      	; 0x183e2 <_Z21Select_Operation_Modev+0x24>
   183e0:	08 c1       	rjmp	.+528    	; 0x185f2 <_Z21Select_Operation_Modev+0x234>
   183e2:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   183e6:	83 30       	cpi	r24, 0x03	; 3
   183e8:	21 f4       	brne	.+8      	; 0x183f2 <_Z21Select_Operation_Modev+0x34>
   183ea:	82 e0       	ldi	r24, 0x02	; 2
   183ec:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   183f0:	02 c0       	rjmp	.+4      	; 0x183f6 <_Z21Select_Operation_Modev+0x38>
   183f2:	90 93 d6 13 	sts	0x13D6, r25	; 0x8013d6 <_sRuble_Parameters+0x28>
   183f6:	90 91 d8 13 	lds	r25, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   183fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   183fe:	92 30       	cpi	r25, 0x02	; 2
   18400:	79 f1       	breq	.+94     	; 0x18460 <_Z21Select_Operation_Modev+0xa2>
   18402:	81 30       	cpi	r24, 0x01	; 1
   18404:	51 f4       	brne	.+20     	; 0x1841a <_Z21Select_Operation_Modev+0x5c>
   18406:	6d ec       	ldi	r22, 0xCD	; 205
   18408:	75 e4       	ldi	r23, 0x45	; 69
   1840a:	86 ec       	ldi	r24, 0xC6	; 198
   1840c:	94 e1       	ldi	r25, 0x14	; 20
   1840e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18412:	86 ec       	ldi	r24, 0xC6	; 198
   18414:	94 e1       	ldi	r25, 0x14	; 20
   18416:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1841a:	85 e0       	ldi	r24, 0x05	; 5
   1841c:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   18420:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18424:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18428:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1842c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18430:	80 61       	ori	r24, 0x10	; 16
   18432:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18436:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1843a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1843e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18442:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18446:	8e 7f       	andi	r24, 0xFE	; 254
   18448:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1844c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18450:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18454:	84 60       	ori	r24, 0x04	; 4
   18456:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1845a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1845e:	25 c0       	rjmp	.+74     	; 0x184aa <_Z21Select_Operation_Modev+0xec>
   18460:	81 30       	cpi	r24, 0x01	; 1
   18462:	51 f4       	brne	.+20     	; 0x18478 <_Z21Select_Operation_Modev+0xba>
   18464:	61 eb       	ldi	r22, 0xB1	; 177
   18466:	75 e4       	ldi	r23, 0x45	; 69
   18468:	86 ec       	ldi	r24, 0xC6	; 198
   1846a:	94 e1       	ldi	r25, 0x14	; 20
   1846c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18470:	86 ec       	ldi	r24, 0xC6	; 198
   18472:	94 e1       	ldi	r25, 0x14	; 20
   18474:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18478:	85 e0       	ldi	r24, 0x05	; 5
   1847a:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1847e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18482:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18486:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1848a:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1848e:	80 61       	ori	r24, 0x10	; 16
   18490:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18494:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18498:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1849c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   184a0:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   184a4:	81 60       	ori	r24, 0x01	; 1
   184a6:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   184aa:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   184ae:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   184b2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   184b6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   184ba:	84 60       	ori	r24, 0x04	; 4
   184bc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   184c0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   184c4:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   184c8:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   184cc:	3d c0       	rjmp	.+122    	; 0x18548 <_Z21Select_Operation_Modev+0x18a>
   184ce:	81 50       	subi	r24, 0x01	; 1
   184d0:	83 30       	cpi	r24, 0x03	; 3
   184d2:	08 f0       	brcs	.+2      	; 0x184d6 <_Z21Select_Operation_Modev+0x118>
   184d4:	8e c0       	rjmp	.+284    	; 0x185f2 <_Z21Select_Operation_Modev+0x234>
   184d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   184da:	81 30       	cpi	r24, 0x01	; 1
   184dc:	51 f4       	brne	.+20     	; 0x184f2 <_Z21Select_Operation_Modev+0x134>
   184de:	67 e9       	ldi	r22, 0x97	; 151
   184e0:	75 e4       	ldi	r23, 0x45	; 69
   184e2:	86 ec       	ldi	r24, 0xC6	; 198
   184e4:	94 e1       	ldi	r25, 0x14	; 20
   184e6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   184ea:	86 ec       	ldi	r24, 0xC6	; 198
   184ec:	94 e1       	ldi	r25, 0x14	; 20
   184ee:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   184f2:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   184f6:	81 e0       	ldi	r24, 0x01	; 1
   184f8:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   184fc:	84 e0       	ldi	r24, 0x04	; 4
   184fe:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   18502:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   18506:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   1850a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1850e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18512:	84 60       	ori	r24, 0x04	; 4
   18514:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18518:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1851c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18520:	81 60       	ori	r24, 0x01	; 1
   18522:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18526:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1852a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1852e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18532:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18536:	84 60       	ori	r24, 0x04	; 4
   18538:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1853c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18540:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18544:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18548:	65 ed       	ldi	r22, 0xD5	; 213
   1854a:	73 e1       	ldi	r23, 0x13	; 19
   1854c:	88 ed       	ldi	r24, 0xD8	; 216
   1854e:	94 e0       	ldi	r25, 0x04	; 4
   18550:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18554:	4e c0       	rjmp	.+156    	; 0x185f2 <_Z21Select_Operation_Modev+0x234>
   18556:	81 30       	cpi	r24, 0x01	; 1
   18558:	19 f0       	breq	.+6      	; 0x18560 <_Z21Select_Operation_Modev+0x1a2>
   1855a:	85 30       	cpi	r24, 0x05	; 5
   1855c:	69 f0       	breq	.+26     	; 0x18578 <_Z21Select_Operation_Modev+0x1ba>
   1855e:	47 c0       	rjmp	.+142    	; 0x185ee <_Z21Select_Operation_Modev+0x230>
   18560:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   18564:	82 e0       	ldi	r24, 0x02	; 2
   18566:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1856a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1856e:	81 30       	cpi	r24, 0x01	; 1
   18570:	b1 f4       	brne	.+44     	; 0x1859e <_Z21Select_Operation_Modev+0x1e0>
   18572:	63 e8       	ldi	r22, 0x83	; 131
   18574:	75 e4       	ldi	r23, 0x45	; 69
   18576:	0b c0       	rjmp	.+22     	; 0x1858e <_Z21Select_Operation_Modev+0x1d0>
   18578:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   1857c:	82 e0       	ldi	r24, 0x02	; 2
   1857e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18582:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18586:	81 30       	cpi	r24, 0x01	; 1
   18588:	51 f4       	brne	.+20     	; 0x1859e <_Z21Select_Operation_Modev+0x1e0>
   1858a:	6f e6       	ldi	r22, 0x6F	; 111
   1858c:	75 e4       	ldi	r23, 0x45	; 69
   1858e:	86 ec       	ldi	r24, 0xC6	; 198
   18590:	94 e1       	ldi	r25, 0x14	; 20
   18592:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18596:	86 ec       	ldi	r24, 0xC6	; 198
   18598:	94 e1       	ldi	r25, 0x14	; 20
   1859a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1859e:	83 e0       	ldi	r24, 0x03	; 3
   185a0:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   185a4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   185a8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   185ac:	8c 60       	ori	r24, 0x0C	; 12
   185ae:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   185b2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   185b6:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   185ba:	8e 7f       	andi	r24, 0xFE	; 254
   185bc:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   185c0:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   185c4:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   185c8:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   185cc:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   185d0:	80 62       	ori	r24, 0x20	; 32
   185d2:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   185d6:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   185da:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   185de:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   185e2:	65 ed       	ldi	r22, 0xD5	; 213
   185e4:	73 e1       	ldi	r23, 0x13	; 19
   185e6:	88 ed       	ldi	r24, 0xD8	; 216
   185e8:	94 e0       	ldi	r25, 0x04	; 4
   185ea:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   185ee:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   185f2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   185f6:	82 30       	cpi	r24, 0x02	; 2
   185f8:	09 f4       	brne	.+2      	; 0x185fc <_Z21Select_Operation_Modev+0x23e>
   185fa:	66 c1       	rjmp	.+716    	; 0x188c8 <_Z21Select_Operation_Modev+0x50a>
   185fc:	20 f4       	brcc	.+8      	; 0x18606 <_Z21Select_Operation_Modev+0x248>
   185fe:	81 30       	cpi	r24, 0x01	; 1
   18600:	09 f4       	brne	.+2      	; 0x18604 <_Z21Select_Operation_Modev+0x246>
   18602:	c6 c0       	rjmp	.+396    	; 0x18790 <_Z21Select_Operation_Modev+0x3d2>
   18604:	08 95       	ret
   18606:	83 30       	cpi	r24, 0x03	; 3
   18608:	21 f0       	breq	.+8      	; 0x18612 <_Z21Select_Operation_Modev+0x254>
   1860a:	85 30       	cpi	r24, 0x05	; 5
   1860c:	09 f4       	brne	.+2      	; 0x18610 <_Z21Select_Operation_Modev+0x252>
   1860e:	17 c1       	rjmp	.+558    	; 0x1883e <_Z21Select_Operation_Modev+0x480>
   18610:	08 95       	ret
   18612:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   18616:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   1861a:	89 2b       	or	r24, r25
   1861c:	09 f0       	breq	.+2      	; 0x18620 <_Z21Select_Operation_Modev+0x262>
   1861e:	5f c0       	rjmp	.+190    	; 0x186de <_Z21Select_Operation_Modev+0x320>
   18620:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   18624:	88 23       	and	r24, r24
   18626:	e1 f0       	breq	.+56     	; 0x18660 <_Z21Select_Operation_Modev+0x2a2>
   18628:	e2 dd       	rcall	.-1084   	; 0x181ee <_Z15Stop_Irrigationv>
   1862a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1862e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18632:	84 60       	ori	r24, 0x04	; 4
   18634:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18638:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1863c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18640:	81 30       	cpi	r24, 0x01	; 1
   18642:	51 f4       	brne	.+20     	; 0x18658 <_Z21Select_Operation_Modev+0x29a>
   18644:	6c e5       	ldi	r22, 0x5C	; 92
   18646:	75 e4       	ldi	r23, 0x45	; 69
   18648:	86 ec       	ldi	r24, 0xC6	; 198
   1864a:	94 e1       	ldi	r25, 0x14	; 20
   1864c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18650:	86 ec       	ldi	r24, 0xC6	; 198
   18652:	94 e1       	ldi	r25, 0x14	; 20
   18654:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18658:	85 e0       	ldi	r24, 0x05	; 5
   1865a:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1865e:	1e c0       	rjmp	.+60     	; 0x1869c <_Z21Select_Operation_Modev+0x2de>
   18660:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18664:	81 30       	cpi	r24, 0x01	; 1
   18666:	51 f4       	brne	.+20     	; 0x1867c <_Z21Select_Operation_Modev+0x2be>
   18668:	60 e4       	ldi	r22, 0x40	; 64
   1866a:	75 e4       	ldi	r23, 0x45	; 69
   1866c:	86 ec       	ldi	r24, 0xC6	; 198
   1866e:	94 e1       	ldi	r25, 0x14	; 20
   18670:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18674:	86 ec       	ldi	r24, 0xC6	; 198
   18676:	94 e1       	ldi	r25, 0x14	; 20
   18678:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1867c:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18680:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18684:	85 e0       	ldi	r24, 0x05	; 5
   18686:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1868a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1868e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18692:	84 60       	ori	r24, 0x04	; 4
   18694:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18698:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1869c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   186a0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   186a4:	20 91 d9 13 	lds	r18, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   186a8:	2e 7f       	andi	r18, 0xFE	; 254
   186aa:	20 93 d9 13 	sts	0x13D9, r18	; 0x8013d9 <_sRuble_Parameters+0x2b>
   186ae:	24 e0       	ldi	r18, 0x04	; 4
   186b0:	20 93 d6 13 	sts	0x13D6, r18	; 0x8013d6 <_sRuble_Parameters+0x28>
   186b4:	8c 60       	ori	r24, 0x0C	; 12
   186b6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   186ba:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   186be:	65 ed       	ldi	r22, 0xD5	; 213
   186c0:	73 e1       	ldi	r23, 0x13	; 19
   186c2:	88 ed       	ldi	r24, 0xD8	; 216
   186c4:	94 e0       	ldi	r25, 0x04	; 4
   186c6:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   186ca:	6e e1       	ldi	r22, 0x1E	; 30
   186cc:	74 e1       	ldi	r23, 0x14	; 20
   186ce:	86 e9       	ldi	r24, 0x96	; 150
   186d0:	9c e0       	ldi	r25, 0x0C	; 12
   186d2:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   186d6:	88 e9       	ldi	r24, 0x98	; 152
   186d8:	9c e0       	ldi	r25, 0x0C	; 12
   186da:	0e 94 23 86 	call	0x10c46	; 0x10c46 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   186de:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   186e2:	82 30       	cpi	r24, 0x02	; 2
   186e4:	09 f4       	brne	.+2      	; 0x186e8 <_Z21Select_Operation_Modev+0x32a>
   186e6:	3e c1       	rjmp	.+636    	; 0x18964 <_Z21Select_Operation_Modev+0x5a6>
   186e8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   186ec:	81 30       	cpi	r24, 0x01	; 1
   186ee:	51 f4       	brne	.+20     	; 0x18704 <_Z21Select_Operation_Modev+0x346>
   186f0:	6b e2       	ldi	r22, 0x2B	; 43
   186f2:	75 e4       	ldi	r23, 0x45	; 69
   186f4:	86 ec       	ldi	r24, 0xC6	; 198
   186f6:	94 e1       	ldi	r25, 0x14	; 20
   186f8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   186fc:	86 ec       	ldi	r24, 0xC6	; 198
   186fe:	94 e1       	ldi	r25, 0x14	; 20
   18700:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18704:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   18708:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   1870c:	22 e0       	ldi	r18, 0x02	; 2
   1870e:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   18712:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18716:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1871a:	88 60       	ori	r24, 0x08	; 8
   1871c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18720:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18724:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18728:	81 60       	ori	r24, 0x01	; 1
   1872a:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1872e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18732:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18736:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1873a:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1873e:	92 60       	ori	r25, 0x02	; 2
   18740:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18744:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18748:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1874c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18750:	81 e0       	ldi	r24, 0x01	; 1
   18752:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18756:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   1875a:	61 e7       	ldi	r22, 0x71	; 113
   1875c:	74 e1       	ldi	r23, 0x14	; 20
   1875e:	89 e1       	ldi	r24, 0x19	; 25
   18760:	95 e0       	ldi	r25, 0x05	; 5
   18762:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18766:	65 ed       	ldi	r22, 0xD5	; 213
   18768:	73 e1       	ldi	r23, 0x13	; 19
   1876a:	88 ed       	ldi	r24, 0xD8	; 216
   1876c:	94 e0       	ldi	r25, 0x04	; 4
   1876e:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18772:	6e e1       	ldi	r22, 0x1E	; 30
   18774:	74 e1       	ldi	r23, 0x14	; 20
   18776:	86 e9       	ldi	r24, 0x96	; 150
   18778:	9c e0       	ldi	r25, 0x0C	; 12
   1877a:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1877e:	88 e9       	ldi	r24, 0x98	; 152
   18780:	9c e0       	ldi	r25, 0x0C	; 12
   18782:	0e 94 23 86 	call	0x10c46	; 0x10c46 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   18786:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   1878a:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   1878e:	08 95       	ret
   18790:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   18794:	82 30       	cpi	r24, 0x02	; 2
   18796:	09 f4       	brne	.+2      	; 0x1879a <_Z21Select_Operation_Modev+0x3dc>
   18798:	45 c0       	rjmp	.+138    	; 0x18824 <_Z21Select_Operation_Modev+0x466>
   1879a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1879e:	81 30       	cpi	r24, 0x01	; 1
   187a0:	51 f4       	brne	.+20     	; 0x187b6 <_Z21Select_Operation_Modev+0x3f8>
   187a2:	66 e1       	ldi	r22, 0x16	; 22
   187a4:	75 e4       	ldi	r23, 0x45	; 69
   187a6:	86 ec       	ldi	r24, 0xC6	; 198
   187a8:	94 e1       	ldi	r25, 0x14	; 20
   187aa:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   187ae:	86 ec       	ldi	r24, 0xC6	; 198
   187b0:	94 e1       	ldi	r25, 0x14	; 20
   187b2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   187b6:	22 e0       	ldi	r18, 0x02	; 2
   187b8:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   187bc:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   187c0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   187c4:	84 60       	ori	r24, 0x04	; 4
   187c6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   187ca:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   187ce:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   187d2:	81 60       	ori	r24, 0x01	; 1
   187d4:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   187d8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   187dc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   187e0:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   187e4:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   187e8:	88 60       	ori	r24, 0x08	; 8
   187ea:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   187ee:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   187f2:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   187f6:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   187fa:	81 e0       	ldi	r24, 0x01	; 1
   187fc:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18800:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   18804:	61 e7       	ldi	r22, 0x71	; 113
   18806:	74 e1       	ldi	r23, 0x14	; 20
   18808:	89 e1       	ldi	r24, 0x19	; 25
   1880a:	95 e0       	ldi	r25, 0x05	; 5
   1880c:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18810:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18814:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18818:	65 ed       	ldi	r22, 0xD5	; 213
   1881a:	73 e1       	ldi	r23, 0x13	; 19
   1881c:	88 ed       	ldi	r24, 0xD8	; 216
   1881e:	94 e0       	ldi	r25, 0x04	; 4
   18820:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18824:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   18828:	88 23       	and	r24, r24
   1882a:	09 f4       	brne	.+2      	; 0x1882e <_Z21Select_Operation_Modev+0x470>
   1882c:	9b c0       	rjmp	.+310    	; 0x18964 <_Z21Select_Operation_Modev+0x5a6>
   1882e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18832:	81 30       	cpi	r24, 0x01	; 1
   18834:	09 f0       	breq	.+2      	; 0x18838 <_Z21Select_Operation_Modev+0x47a>
   18836:	70 c0       	rjmp	.+224    	; 0x18918 <_Z21Select_Operation_Modev+0x55a>
   18838:	63 e0       	ldi	r22, 0x03	; 3
   1883a:	75 e4       	ldi	r23, 0x45	; 69
   1883c:	54 c0       	rjmp	.+168    	; 0x188e6 <_Z21Select_Operation_Modev+0x528>
   1883e:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   18842:	82 30       	cpi	r24, 0x02	; 2
   18844:	09 f4       	brne	.+2      	; 0x18848 <_Z21Select_Operation_Modev+0x48a>
   18846:	8e c0       	rjmp	.+284    	; 0x18964 <_Z21Select_Operation_Modev+0x5a6>
   18848:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1884c:	81 30       	cpi	r24, 0x01	; 1
   1884e:	51 f4       	brne	.+20     	; 0x18864 <_Z21Select_Operation_Modev+0x4a6>
   18850:	6e ee       	ldi	r22, 0xEE	; 238
   18852:	74 e4       	ldi	r23, 0x44	; 68
   18854:	86 ec       	ldi	r24, 0xC6	; 198
   18856:	94 e1       	ldi	r25, 0x14	; 20
   18858:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1885c:	86 ec       	ldi	r24, 0xC6	; 198
   1885e:	94 e1       	ldi	r25, 0x14	; 20
   18860:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18864:	22 e0       	ldi	r18, 0x02	; 2
   18866:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   1886a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1886e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18872:	84 60       	ori	r24, 0x04	; 4
   18874:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18878:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1887c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18880:	81 60       	ori	r24, 0x01	; 1
   18882:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18886:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1888a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1888e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18892:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18896:	88 60       	ori	r24, 0x08	; 8
   18898:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1889c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   188a0:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   188a4:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   188a8:	81 e0       	ldi	r24, 0x01	; 1
   188aa:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   188ae:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   188b2:	61 e7       	ldi	r22, 0x71	; 113
   188b4:	74 e1       	ldi	r23, 0x14	; 20
   188b6:	89 e1       	ldi	r24, 0x19	; 25
   188b8:	95 e0       	ldi	r25, 0x05	; 5
   188ba:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   188be:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   188c2:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   188c6:	48 c0       	rjmp	.+144    	; 0x18958 <_Z21Select_Operation_Modev+0x59a>
   188c8:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   188cc:	82 30       	cpi	r24, 0x02	; 2
   188ce:	09 f0       	breq	.+2      	; 0x188d2 <_Z21Select_Operation_Modev+0x514>
   188d0:	49 c0       	rjmp	.+146    	; 0x18964 <_Z21Select_Operation_Modev+0x5a6>
   188d2:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
   188d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   188da:	99 23       	and	r25, r25
   188dc:	69 f0       	breq	.+26     	; 0x188f8 <_Z21Select_Operation_Modev+0x53a>
   188de:	81 30       	cpi	r24, 0x01	; 1
   188e0:	d9 f4       	brne	.+54     	; 0x18918 <_Z21Select_Operation_Modev+0x55a>
   188e2:	6b ed       	ldi	r22, 0xDB	; 219
   188e4:	74 e4       	ldi	r23, 0x44	; 68
   188e6:	86 ec       	ldi	r24, 0xC6	; 198
   188e8:	94 e1       	ldi	r25, 0x14	; 20
   188ea:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   188ee:	86 ec       	ldi	r24, 0xC6	; 198
   188f0:	94 e1       	ldi	r25, 0x14	; 20
   188f2:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   188f6:	10 c0       	rjmp	.+32     	; 0x18918 <_Z21Select_Operation_Modev+0x55a>
   188f8:	81 30       	cpi	r24, 0x01	; 1
   188fa:	51 f4       	brne	.+20     	; 0x18910 <_Z21Select_Operation_Modev+0x552>
   188fc:	68 ec       	ldi	r22, 0xC8	; 200
   188fe:	74 e4       	ldi	r23, 0x44	; 68
   18900:	86 ec       	ldi	r24, 0xC6	; 198
   18902:	94 e1       	ldi	r25, 0x14	; 20
   18904:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18908:	86 ec       	ldi	r24, 0xC6	; 198
   1890a:	94 e1       	ldi	r25, 0x14	; 20
   1890c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18910:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18914:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18918:	85 e0       	ldi	r24, 0x05	; 5
   1891a:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1891e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18922:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18926:	84 60       	ori	r24, 0x04	; 4
   18928:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1892c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18930:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18934:	8e 7f       	andi	r24, 0xFE	; 254
   18936:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1893a:	80 e1       	ldi	r24, 0x10	; 16
   1893c:	90 e0       	ldi	r25, 0x00	; 0
   1893e:	a0 e0       	ldi	r26, 0x00	; 0
   18940:	b0 e0       	ldi	r27, 0x00	; 0
   18942:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18946:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1894a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1894e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18952:	81 e0       	ldi	r24, 0x01	; 1
   18954:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18958:	65 ed       	ldi	r22, 0xD5	; 213
   1895a:	73 e1       	ldi	r23, 0x13	; 19
   1895c:	88 ed       	ldi	r24, 0xD8	; 216
   1895e:	94 e0       	ldi	r25, 0x04	; 4
   18960:	0c 94 d6 85 	jmp	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18964:	08 95       	ret

00018966 <_Z16Start_Irrigationv>:
   18966:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1896a:	81 30       	cpi	r24, 0x01	; 1
   1896c:	31 f4       	brne	.+12     	; 0x1897a <_Z16Start_Irrigationv+0x14>
   1896e:	64 e1       	ldi	r22, 0x14	; 20
   18970:	71 e4       	ldi	r23, 0x41	; 65
   18972:	86 ec       	ldi	r24, 0xC6	; 198
   18974:	94 e1       	ldi	r25, 0x14	; 20
   18976:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1897a:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   1897e:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18982:	81 30       	cpi	r24, 0x01	; 1
   18984:	29 f4       	brne	.+10     	; 0x18990 <_Z16Start_Irrigationv+0x2a>
   18986:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   1898a:	81 30       	cpi	r24, 0x01	; 1
   1898c:	09 f4       	brne	.+2      	; 0x18990 <_Z16Start_Irrigationv+0x2a>
   1898e:	d4 c0       	rjmp	.+424    	; 0x18b38 <_Z16Start_Irrigationv+0x1d2>
   18990:	82 e0       	ldi	r24, 0x02	; 2
   18992:	0e 94 22 24 	call	0x4844	; 0x4844 <_Z22Hard_Coded_Flush_Valveh>
   18996:	81 e0       	ldi	r24, 0x01	; 1
   18998:	0e 94 8a ae 	call	0x15d14	; 0x15d14 <_Z22Valve_Grouping_Handlerh>
   1899c:	88 23       	and	r24, r24
   1899e:	09 f4       	brne	.+2      	; 0x189a2 <_Z16Start_Irrigationv+0x3c>
   189a0:	b3 c0       	rjmp	.+358    	; 0x18b08 <_Z16Start_Irrigationv+0x1a2>
   189a2:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   189a6:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   189aa:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   189ae:	81 11       	cpse	r24, r1
   189b0:	22 c0       	rjmp	.+68     	; 0x189f6 <_Z16Start_Irrigationv+0x90>
   189b2:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   189b6:	81 30       	cpi	r24, 0x01	; 1
   189b8:	f1 f4       	brne	.+60     	; 0x189f6 <_Z16Start_Irrigationv+0x90>
   189ba:	8a e0       	ldi	r24, 0x0A	; 10
   189bc:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   189c0:	89 2b       	or	r24, r25
   189c2:	21 f0       	breq	.+8      	; 0x189cc <_Z16Start_Irrigationv+0x66>
   189c4:	60 e0       	ldi	r22, 0x00	; 0
   189c6:	8a e0       	ldi	r24, 0x0A	; 10
   189c8:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   189cc:	80 e3       	ldi	r24, 0x30	; 48
   189ce:	95 e7       	ldi	r25, 0x75	; 117
   189d0:	0e 94 2b 75 	call	0xea56	; 0xea56 <_Z8My_Delayj>
   189d4:	8b e0       	ldi	r24, 0x0B	; 11
   189d6:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   189da:	89 2b       	or	r24, r25
   189dc:	21 f0       	breq	.+8      	; 0x189e6 <_Z16Start_Irrigationv+0x80>
   189de:	60 e0       	ldi	r22, 0x00	; 0
   189e0:	8b e0       	ldi	r24, 0x0B	; 11
   189e2:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   189e6:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   189ea:	f0 e0       	ldi	r31, 0x00	; 0
   189ec:	ee 56       	subi	r30, 0x6E	; 110
   189ee:	fb 4e       	sbci	r31, 0xEB	; 235
   189f0:	81 e0       	ldi	r24, 0x01	; 1
   189f2:	80 83       	st	Z, r24
   189f4:	32 c0       	rjmp	.+100    	; 0x18a5a <_Z16Start_Irrigationv+0xf4>
   189f6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   189fa:	81 30       	cpi	r24, 0x01	; 1
   189fc:	51 f4       	brne	.+20     	; 0x18a12 <_Z16Start_Irrigationv+0xac>
   189fe:	6d ee       	ldi	r22, 0xED	; 237
   18a00:	70 e4       	ldi	r23, 0x40	; 64
   18a02:	86 ec       	ldi	r24, 0xC6	; 198
   18a04:	94 e1       	ldi	r25, 0x14	; 20
   18a06:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a0a:	86 ec       	ldi	r24, 0xC6	; 198
   18a0c:	94 e1       	ldi	r25, 0x14	; 20
   18a0e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18a12:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18a16:	62 50       	subi	r22, 0x02	; 2
   18a18:	82 e0       	ldi	r24, 0x02	; 2
   18a1a:	aa d8       	rcall	.-3756   	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
   18a1c:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18a20:	88 23       	and	r24, r24
   18a22:	b9 f1       	breq	.+110    	; 0x18a92 <_Z16Start_Irrigationv+0x12c>
   18a24:	91 30       	cpi	r25, 0x01	; 1
   18a26:	51 f4       	brne	.+20     	; 0x18a3c <_Z16Start_Irrigationv+0xd6>
   18a28:	68 ed       	ldi	r22, 0xD8	; 216
   18a2a:	70 e4       	ldi	r23, 0x40	; 64
   18a2c:	86 ec       	ldi	r24, 0xC6	; 198
   18a2e:	94 e1       	ldi	r25, 0x14	; 20
   18a30:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a34:	86 ec       	ldi	r24, 0xC6	; 198
   18a36:	94 e1       	ldi	r25, 0x14	; 20
   18a38:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18a3c:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18a40:	f0 e0       	ldi	r31, 0x00	; 0
   18a42:	ee 56       	subi	r30, 0x6E	; 110
   18a44:	fb 4e       	sbci	r31, 0xEB	; 235
   18a46:	81 e0       	ldi	r24, 0x01	; 1
   18a48:	80 83       	st	Z, r24
   18a4a:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   18a4e:	6c e7       	ldi	r22, 0x7C	; 124
   18a50:	74 e1       	ldi	r23, 0x14	; 20
   18a52:	8d ea       	ldi	r24, 0xAD	; 173
   18a54:	9c e0       	ldi	r25, 0x0C	; 12
   18a56:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18a5a:	0e 94 4f 86 	call	0x10c9e	; 0x10c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   18a5e:	86 e9       	ldi	r24, 0x96	; 150
   18a60:	90 e0       	ldi	r25, 0x00	; 0
   18a62:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   18a66:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   18a6a:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18a6e:	82 60       	ori	r24, 0x02	; 2
   18a70:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18a74:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18a78:	81 30       	cpi	r24, 0x01	; 1
   18a7a:	d9 f5       	brne	.+118    	; 0x18af2 <_Z16Start_Irrigationv+0x18c>
   18a7c:	64 e9       	ldi	r22, 0x94	; 148
   18a7e:	70 e4       	ldi	r23, 0x40	; 64
   18a80:	86 ec       	ldi	r24, 0xC6	; 198
   18a82:	94 e1       	ldi	r25, 0x14	; 20
   18a84:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a88:	86 ec       	ldi	r24, 0xC6	; 198
   18a8a:	94 e1       	ldi	r25, 0x14	; 20
   18a8c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18a90:	30 c0       	rjmp	.+96     	; 0x18af2 <_Z16Start_Irrigationv+0x18c>
   18a92:	91 30       	cpi	r25, 0x01	; 1
   18a94:	51 f4       	brne	.+20     	; 0x18aaa <_Z16Start_Irrigationv+0x144>
   18a96:	6b eb       	ldi	r22, 0xBB	; 187
   18a98:	70 e4       	ldi	r23, 0x40	; 64
   18a9a:	86 ec       	ldi	r24, 0xC6	; 198
   18a9c:	94 e1       	ldi	r25, 0x14	; 20
   18a9e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18aa2:	86 ec       	ldi	r24, 0xC6	; 198
   18aa4:	94 e1       	ldi	r25, 0x14	; 20
   18aa6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18aaa:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   18aae:	6c e7       	ldi	r22, 0x7C	; 124
   18ab0:	74 e1       	ldi	r23, 0x14	; 20
   18ab2:	8d ea       	ldi	r24, 0xAD	; 173
   18ab4:	9c e0       	ldi	r25, 0x0C	; 12
   18ab6:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18aba:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18abe:	f0 e0       	ldi	r31, 0x00	; 0
   18ac0:	ee 56       	subi	r30, 0x6E	; 110
   18ac2:	fb 4e       	sbci	r31, 0xEB	; 235
   18ac4:	10 82       	st	Z, r1
   18ac6:	0e 94 4f 86 	call	0x10c9e	; 0x10c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   18aca:	91 db       	rcall	.-2270   	; 0x181ee <_Z15Stop_Irrigationv>
   18acc:	64 e0       	ldi	r22, 0x04	; 4
   18ace:	80 e0       	ldi	r24, 0x00	; 0
   18ad0:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18ad4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18ad8:	81 30       	cpi	r24, 0x01	; 1
   18ada:	71 f5       	brne	.+92     	; 0x18b38 <_Z16Start_Irrigationv+0x1d2>
   18adc:	65 ea       	ldi	r22, 0xA5	; 165
   18ade:	70 e4       	ldi	r23, 0x40	; 64
   18ae0:	86 ec       	ldi	r24, 0xC6	; 198
   18ae2:	94 e1       	ldi	r25, 0x14	; 20
   18ae4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ae8:	86 ec       	ldi	r24, 0xC6	; 198
   18aea:	94 e1       	ldi	r25, 0x14	; 20
   18aec:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18af0:	23 c0       	rjmp	.+70     	; 0x18b38 <_Z16Start_Irrigationv+0x1d2>
   18af2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18af6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18afa:	84 60       	ori	r24, 0x04	; 4
   18afc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18b00:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18b04:	81 e0       	ldi	r24, 0x01	; 1
   18b06:	08 95       	ret
   18b08:	72 db       	rcall	.-2332   	; 0x181ee <_Z15Stop_Irrigationv>
   18b0a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18b0e:	81 30       	cpi	r24, 0x01	; 1
   18b10:	51 f4       	brne	.+20     	; 0x18b26 <_Z16Start_Irrigationv+0x1c0>
   18b12:	6e e7       	ldi	r22, 0x7E	; 126
   18b14:	70 e4       	ldi	r23, 0x40	; 64
   18b16:	86 ec       	ldi	r24, 0xC6	; 198
   18b18:	94 e1       	ldi	r25, 0x14	; 20
   18b1a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b1e:	86 ec       	ldi	r24, 0xC6	; 198
   18b20:	94 e1       	ldi	r25, 0x14	; 20
   18b22:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18b26:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18b2a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18b2e:	84 60       	ori	r24, 0x04	; 4
   18b30:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18b34:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18b38:	80 e0       	ldi	r24, 0x00	; 0
   18b3a:	08 95       	ret

00018b3c <_Z13Run_Operationv>:
   18b3c:	0f 93       	push	r16
   18b3e:	1f 93       	push	r17
   18b40:	cf 93       	push	r28
   18b42:	df 93       	push	r29
   18b44:	1f 92       	push	r1
   18b46:	1f 92       	push	r1
   18b48:	cd b7       	in	r28, 0x3d	; 61
   18b4a:	de b7       	in	r29, 0x3e	; 62
   18b4c:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   18b50:	86 34       	cpi	r24, 0x46	; 70
   18b52:	08 f4       	brcc	.+2      	; 0x18b56 <_Z13Run_Operationv+0x1a>
   18b54:	f8 c2       	rjmp	.+1520   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18b56:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   18b5a:	82 30       	cpi	r24, 0x02	; 2
   18b5c:	61 f0       	breq	.+24     	; 0x18b76 <_Z13Run_Operationv+0x3a>
   18b5e:	20 f4       	brcc	.+8      	; 0x18b68 <_Z13Run_Operationv+0x2c>
   18b60:	81 30       	cpi	r24, 0x01	; 1
   18b62:	09 f4       	brne	.+2      	; 0x18b66 <_Z13Run_Operationv+0x2a>
   18b64:	42 c0       	rjmp	.+132    	; 0x18bea <_Z13Run_Operationv+0xae>
   18b66:	ef c2       	rjmp	.+1502   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18b68:	83 30       	cpi	r24, 0x03	; 3
   18b6a:	09 f4       	brne	.+2      	; 0x18b6e <_Z13Run_Operationv+0x32>
   18b6c:	d5 c0       	rjmp	.+426    	; 0x18d18 <_Z13Run_Operationv+0x1dc>
   18b6e:	85 30       	cpi	r24, 0x05	; 5
   18b70:	09 f4       	brne	.+2      	; 0x18b74 <_Z13Run_Operationv+0x38>
   18b72:	c5 c2       	rjmp	.+1418   	; 0x190fe <_Z13Run_Operationv+0x5c2>
   18b74:	e8 c2       	rjmp	.+1488   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18b76:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18b7a:	81 30       	cpi	r24, 0x01	; 1
   18b7c:	19 f0       	breq	.+6      	; 0x18b84 <_Z13Run_Operationv+0x48>
   18b7e:	84 30       	cpi	r24, 0x04	; 4
   18b80:	09 f0       	breq	.+2      	; 0x18b84 <_Z13Run_Operationv+0x48>
   18b82:	e1 c2       	rjmp	.+1474   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18b84:	0e 94 7b 54 	call	0xa8f6	; 0xa8f6 <_Z20Schedules_Monitoringv>
   18b88:	80 91 a3 14 	lds	r24, 0x14A3	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18b8c:	90 91 a4 14 	lds	r25, 0x14A4	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18b90:	89 2b       	or	r24, r25
   18b92:	09 f0       	breq	.+2      	; 0x18b96 <_Z13Run_Operationv+0x5a>
   18b94:	d8 c2       	rjmp	.+1456   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18b96:	2b db       	rcall	.-2474   	; 0x181ee <_Z15Stop_Irrigationv>
   18b98:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18b9c:	88 23       	and	r24, r24
   18b9e:	49 f0       	breq	.+18     	; 0x18bb2 <_Z13Run_Operationv+0x76>
   18ba0:	83 e0       	ldi	r24, 0x03	; 3
   18ba2:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18ba6:	91 30       	cpi	r25, 0x01	; 1
   18ba8:	09 f0       	breq	.+2      	; 0x18bac <_Z13Run_Operationv+0x70>
   18baa:	cd c2       	rjmp	.+1434   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18bac:	60 ea       	ldi	r22, 0xA0	; 160
   18bae:	74 e4       	ldi	r23, 0x44	; 68
   18bb0:	0e c0       	rjmp	.+28     	; 0x18bce <_Z13Run_Operationv+0x92>
   18bb2:	84 e0       	ldi	r24, 0x04	; 4
   18bb4:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18bb8:	28 e5       	ldi	r18, 0x58	; 88
   18bba:	32 e0       	ldi	r19, 0x02	; 2
   18bbc:	30 93 a4 14 	sts	0x14A4, r19	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18bc0:	20 93 a3 14 	sts	0x14A3, r18	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18bc4:	91 30       	cpi	r25, 0x01	; 1
   18bc6:	09 f0       	breq	.+2      	; 0x18bca <_Z13Run_Operationv+0x8e>
   18bc8:	be c2       	rjmp	.+1404   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18bca:	68 e7       	ldi	r22, 0x78	; 120
   18bcc:	74 e4       	ldi	r23, 0x44	; 68
   18bce:	86 ec       	ldi	r24, 0xC6	; 198
   18bd0:	94 e1       	ldi	r25, 0x14	; 20
   18bd2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18bd6:	86 ec       	ldi	r24, 0xC6	; 198
   18bd8:	94 e1       	ldi	r25, 0x14	; 20
   18bda:	0f 90       	pop	r0
   18bdc:	0f 90       	pop	r0
   18bde:	df 91       	pop	r29
   18be0:	cf 91       	pop	r28
   18be2:	1f 91       	pop	r17
   18be4:	0f 91       	pop	r16
   18be6:	0c 94 1d d3 	jmp	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18bea:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18bee:	83 30       	cpi	r24, 0x03	; 3
   18bf0:	09 f4       	brne	.+2      	; 0x18bf4 <_Z13Run_Operationv+0xb8>
   18bf2:	48 c0       	rjmp	.+144    	; 0x18c84 <_Z13Run_Operationv+0x148>
   18bf4:	20 f4       	brcc	.+8      	; 0x18bfe <_Z13Run_Operationv+0xc2>
   18bf6:	81 30       	cpi	r24, 0x01	; 1
   18bf8:	08 f4       	brcc	.+2      	; 0x18bfc <_Z13Run_Operationv+0xc0>
   18bfa:	a5 c2       	rjmp	.+1354   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18bfc:	03 c0       	rjmp	.+6      	; 0x18c04 <_Z13Run_Operationv+0xc8>
   18bfe:	84 30       	cpi	r24, 0x04	; 4
   18c00:	09 f0       	breq	.+2      	; 0x18c04 <_Z13Run_Operationv+0xc8>
   18c02:	a1 c2       	rjmp	.+1346   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18c04:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   18c08:	81 11       	cpse	r24, r1
   18c0a:	9d c2       	rjmp	.+1338   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18c0c:	0e 94 7b 54 	call	0xa8f6	; 0xa8f6 <_Z20Schedules_Monitoringv>
   18c10:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18c14:	88 23       	and	r24, r24
   18c16:	59 f1       	breq	.+86     	; 0x18c6e <_Z13Run_Operationv+0x132>
   18c18:	80 91 a3 14 	lds	r24, 0x14A3	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18c1c:	90 91 a4 14 	lds	r25, 0x14A4	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18c20:	89 2b       	or	r24, r25
   18c22:	09 f0       	breq	.+2      	; 0x18c26 <_Z13Run_Operationv+0xea>
   18c24:	90 c2       	rjmp	.+1312   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18c26:	e3 da       	rcall	.-2618   	; 0x181ee <_Z15Stop_Irrigationv>
   18c28:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18c2c:	88 23       	and	r24, r24
   18c2e:	49 f0       	breq	.+18     	; 0x18c42 <_Z13Run_Operationv+0x106>
   18c30:	83 e0       	ldi	r24, 0x03	; 3
   18c32:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18c36:	91 30       	cpi	r25, 0x01	; 1
   18c38:	09 f0       	breq	.+2      	; 0x18c3c <_Z13Run_Operationv+0x100>
   18c3a:	85 c2       	rjmp	.+1290   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18c3c:	66 e5       	ldi	r22, 0x56	; 86
   18c3e:	74 e4       	ldi	r23, 0x44	; 68
   18c40:	c6 cf       	rjmp	.-116    	; 0x18bce <_Z13Run_Operationv+0x92>
   18c42:	84 e0       	ldi	r24, 0x04	; 4
   18c44:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18c48:	91 30       	cpi	r25, 0x01	; 1
   18c4a:	51 f4       	brne	.+20     	; 0x18c60 <_Z13Run_Operationv+0x124>
   18c4c:	6b e2       	ldi	r22, 0x2B	; 43
   18c4e:	74 e4       	ldi	r23, 0x44	; 68
   18c50:	86 ec       	ldi	r24, 0xC6	; 198
   18c52:	94 e1       	ldi	r25, 0x14	; 20
   18c54:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c58:	86 ec       	ldi	r24, 0xC6	; 198
   18c5a:	94 e1       	ldi	r25, 0x14	; 20
   18c5c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18c60:	88 e5       	ldi	r24, 0x58	; 88
   18c62:	92 e0       	ldi	r25, 0x02	; 2
   18c64:	90 93 a4 14 	sts	0x14A4, r25	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18c68:	80 93 a3 14 	sts	0x14A3, r24	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18c6c:	6c c2       	rjmp	.+1240   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18c6e:	83 e0       	ldi	r24, 0x03	; 3
   18c70:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18c74:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18c78:	81 30       	cpi	r24, 0x01	; 1
   18c7a:	09 f0       	breq	.+2      	; 0x18c7e <_Z13Run_Operationv+0x142>
   18c7c:	64 c2       	rjmp	.+1224   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18c7e:	6a e0       	ldi	r22, 0x0A	; 10
   18c80:	74 e4       	ldi	r23, 0x44	; 68
   18c82:	a5 cf       	rjmp	.-182    	; 0x18bce <_Z13Run_Operationv+0x92>
   18c84:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   18c88:	88 23       	and	r24, r24
   18c8a:	a1 f0       	breq	.+40     	; 0x18cb4 <_Z13Run_Operationv+0x178>
   18c8c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18c90:	81 30       	cpi	r24, 0x01	; 1
   18c92:	51 f4       	brne	.+20     	; 0x18ca8 <_Z13Run_Operationv+0x16c>
   18c94:	6b ed       	ldi	r22, 0xDB	; 219
   18c96:	73 e4       	ldi	r23, 0x43	; 67
   18c98:	86 ec       	ldi	r24, 0xC6	; 198
   18c9a:	94 e1       	ldi	r25, 0x14	; 20
   18c9c:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ca0:	86 ec       	ldi	r24, 0xC6	; 198
   18ca2:	94 e1       	ldi	r25, 0x14	; 20
   18ca4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18ca8:	a2 da       	rcall	.-2748   	; 0x181ee <_Z15Stop_Irrigationv>
   18caa:	81 11       	cpse	r24, r1
   18cac:	03 c0       	rjmp	.+6      	; 0x18cb4 <_Z13Run_Operationv+0x178>
   18cae:	84 e0       	ldi	r24, 0x04	; 4
   18cb0:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18cb4:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18cb8:	81 11       	cpse	r24, r1
   18cba:	04 c0       	rjmp	.+8      	; 0x18cc4 <_Z13Run_Operationv+0x188>
   18cbc:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18cc0:	88 23       	and	r24, r24
   18cc2:	a1 f0       	breq	.+40     	; 0x18cec <_Z13Run_Operationv+0x1b0>
   18cc4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18cc8:	81 30       	cpi	r24, 0x01	; 1
   18cca:	51 f4       	brne	.+20     	; 0x18ce0 <_Z13Run_Operationv+0x1a4>
   18ccc:	60 ec       	ldi	r22, 0xC0	; 192
   18cce:	73 e4       	ldi	r23, 0x43	; 67
   18cd0:	86 ec       	ldi	r24, 0xC6	; 198
   18cd2:	94 e1       	ldi	r25, 0x14	; 20
   18cd4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18cd8:	86 ec       	ldi	r24, 0xC6	; 198
   18cda:	94 e1       	ldi	r25, 0x14	; 20
   18cdc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18ce0:	86 da       	rcall	.-2804   	; 0x181ee <_Z15Stop_Irrigationv>
   18ce2:	81 11       	cpse	r24, r1
   18ce4:	03 c0       	rjmp	.+6      	; 0x18cec <_Z13Run_Operationv+0x1b0>
   18ce6:	84 e0       	ldi	r24, 0x04	; 4
   18ce8:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18cec:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   18cf0:	88 23       	and	r24, r24
   18cf2:	09 f4       	brne	.+2      	; 0x18cf6 <_Z13Run_Operationv+0x1ba>
   18cf4:	28 c2       	rjmp	.+1104   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18cf6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18cfa:	81 30       	cpi	r24, 0x01	; 1
   18cfc:	51 f4       	brne	.+20     	; 0x18d12 <_Z13Run_Operationv+0x1d6>
   18cfe:	67 e9       	ldi	r22, 0x97	; 151
   18d00:	73 e4       	ldi	r23, 0x43	; 67
   18d02:	86 ec       	ldi	r24, 0xC6	; 198
   18d04:	94 e1       	ldi	r25, 0x14	; 20
   18d06:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d0a:	86 ec       	ldi	r24, 0xC6	; 198
   18d0c:	94 e1       	ldi	r25, 0x14	; 20
   18d0e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18d12:	6d da       	rcall	.-2854   	; 0x181ee <_Z15Stop_Irrigationv>
   18d14:	84 e0       	ldi	r24, 0x04	; 4
   18d16:	55 c0       	rjmp	.+170    	; 0x18dc2 <_Z13Run_Operationv+0x286>
   18d18:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18d1c:	83 30       	cpi	r24, 0x03	; 3
   18d1e:	09 f4       	brne	.+2      	; 0x18d22 <_Z13Run_Operationv+0x1e6>
   18d20:	76 c0       	rjmp	.+236    	; 0x18e0e <_Z13Run_Operationv+0x2d2>
   18d22:	20 f4       	brcc	.+8      	; 0x18d2c <_Z13Run_Operationv+0x1f0>
   18d24:	81 30       	cpi	r24, 0x01	; 1
   18d26:	08 f4       	brcc	.+2      	; 0x18d2a <_Z13Run_Operationv+0x1ee>
   18d28:	0e c2       	rjmp	.+1052   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18d2a:	03 c0       	rjmp	.+6      	; 0x18d32 <_Z13Run_Operationv+0x1f6>
   18d2c:	84 30       	cpi	r24, 0x04	; 4
   18d2e:	09 f0       	breq	.+2      	; 0x18d32 <_Z13Run_Operationv+0x1f6>
   18d30:	0a c2       	rjmp	.+1044   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18d32:	80 91 cc 13 	lds	r24, 0x13CC	; 0x8013cc <_sRuble_Parameters+0x1e>
   18d36:	90 91 cd 13 	lds	r25, 0x13CD	; 0x8013cd <_sRuble_Parameters+0x1f>
   18d3a:	89 2b       	or	r24, r25
   18d3c:	09 f0       	breq	.+2      	; 0x18d40 <_Z13Run_Operationv+0x204>
   18d3e:	03 c2       	rjmp	.+1030   	; 0x19146 <_Z13Run_Operationv+0x60a>
   18d40:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18d44:	81 30       	cpi	r24, 0x01	; 1
   18d46:	b1 f4       	brne	.+44     	; 0x18d74 <_Z13Run_Operationv+0x238>
   18d48:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18d4c:	81 30       	cpi	r24, 0x01	; 1
   18d4e:	91 f4       	brne	.+36     	; 0x18d74 <_Z13Run_Operationv+0x238>
   18d50:	80 ef       	ldi	r24, 0xF0	; 240
   18d52:	90 e0       	ldi	r25, 0x00	; 0
   18d54:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18d58:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18d5c:	65 e6       	ldi	r22, 0x65	; 101
   18d5e:	74 e1       	ldi	r23, 0x14	; 20
   18d60:	86 e9       	ldi	r24, 0x96	; 150
   18d62:	9c e0       	ldi	r25, 0x0C	; 12
   18d64:	0f 90       	pop	r0
   18d66:	0f 90       	pop	r0
   18d68:	df 91       	pop	r29
   18d6a:	cf 91       	pop	r28
   18d6c:	1f 91       	pop	r17
   18d6e:	0f 91       	pop	r16
   18d70:	0c 94 d6 85 	jmp	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18d74:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18d78:	81 11       	cpse	r24, r1
   18d7a:	04 c0       	rjmp	.+8      	; 0x18d84 <_Z13Run_Operationv+0x248>
   18d7c:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18d80:	88 23       	and	r24, r24
   18d82:	39 f0       	breq	.+14     	; 0x18d92 <_Z13Run_Operationv+0x256>
   18d84:	8c e3       	ldi	r24, 0x3C	; 60
   18d86:	90 e0       	ldi	r25, 0x00	; 0
   18d88:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18d8c:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18d90:	da c1       	rjmp	.+948    	; 0x19146 <_Z13Run_Operationv+0x60a>
   18d92:	10 92 e4 0d 	sts	0x0DE4, r1	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18d96:	10 92 78 14 	sts	0x1478, r1	; 0x801478 <_sRuble_Parameters+0xca>
   18d9a:	0e 94 7b 54 	call	0xa8f6	; 0xa8f6 <_Z20Schedules_Monitoringv>
   18d9e:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18da2:	88 23       	and	r24, r24
   18da4:	69 f0       	breq	.+26     	; 0x18dc0 <_Z13Run_Operationv+0x284>
   18da6:	23 da       	rcall	.-3002   	; 0x181ee <_Z15Stop_Irrigationv>
   18da8:	88 23       	and	r24, r24
   18daa:	71 f0       	breq	.+28     	; 0x18dc8 <_Z13Run_Operationv+0x28c>
   18dac:	65 e7       	ldi	r22, 0x75	; 117
   18dae:	73 e4       	ldi	r23, 0x43	; 67
   18db0:	86 ec       	ldi	r24, 0xC6	; 198
   18db2:	94 e1       	ldi	r25, 0x14	; 20
   18db4:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18db8:	86 ec       	ldi	r24, 0xC6	; 198
   18dba:	94 e1       	ldi	r25, 0x14	; 20
   18dbc:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18dc0:	83 e0       	ldi	r24, 0x03	; 3
   18dc2:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18dc6:	bf c1       	rjmp	.+894    	; 0x19146 <_Z13Run_Operationv+0x60a>
   18dc8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18dcc:	81 30       	cpi	r24, 0x01	; 1
   18dce:	51 f4       	brne	.+20     	; 0x18de4 <_Z13Run_Operationv+0x2a8>
   18dd0:	62 e3       	ldi	r22, 0x32	; 50
   18dd2:	73 e4       	ldi	r23, 0x43	; 67
   18dd4:	86 ec       	ldi	r24, 0xC6	; 198
   18dd6:	94 e1       	ldi	r25, 0x14	; 20
   18dd8:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ddc:	86 ec       	ldi	r24, 0xC6	; 198
   18dde:	94 e1       	ldi	r25, 0x14	; 20
   18de0:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18de4:	83 e0       	ldi	r24, 0x03	; 3
   18de6:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18dea:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18dee:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18df2:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18df6:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18dfa:	92 60       	ori	r25, 0x02	; 2
   18dfc:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18e00:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18e04:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18e08:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18e0c:	9c c1       	rjmp	.+824    	; 0x19146 <_Z13Run_Operationv+0x60a>
   18e0e:	80 91 e4 0d 	lds	r24, 0x0DE4	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18e12:	8f 5f       	subi	r24, 0xFF	; 255
   18e14:	8b 3a       	cpi	r24, 0xAB	; 171
   18e16:	18 f4       	brcc	.+6      	; 0x18e1e <_Z13Run_Operationv+0x2e2>
   18e18:	80 93 e4 0d 	sts	0x0DE4, r24	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18e1c:	06 c0       	rjmp	.+12     	; 0x18e2a <_Z13Run_Operationv+0x2ee>
   18e1e:	10 92 e4 0d 	sts	0x0DE4, r1	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18e22:	88 e9       	ldi	r24, 0x98	; 152
   18e24:	9c e0       	ldi	r25, 0x0C	; 12
   18e26:	0e 94 23 86 	call	0x10c46	; 0x10c46 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   18e2a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18e2e:	81 11       	cpse	r24, r1
   18e30:	95 c0       	rjmp	.+298    	; 0x18f5c <_Z13Run_Operationv+0x420>
   18e32:	00 91 c6 13 	lds	r16, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18e36:	10 91 c7 13 	lds	r17, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18e3a:	c8 01       	movw	r24, r16
   18e3c:	88 60       	ori	r24, 0x08	; 8
   18e3e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18e42:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18e46:	88 e9       	ldi	r24, 0x98	; 152
   18e48:	9c e0       	ldi	r25, 0x0C	; 12
   18e4a:	0e 94 3b f0 	call	0x1e076	; 0x1e076 <eeprom_read_byte>
   18e4e:	89 83       	std	Y+1, r24	; 0x01
   18e50:	89 e9       	ldi	r24, 0x99	; 153
   18e52:	9c e0       	ldi	r25, 0x0C	; 12
   18e54:	0e 94 3b f0 	call	0x1e076	; 0x1e076 <eeprom_read_byte>
   18e58:	8a 83       	std	Y+2, r24	; 0x02
   18e5a:	89 81       	ldd	r24, Y+1	; 0x01
   18e5c:	9a 81       	ldd	r25, Y+2	; 0x02
   18e5e:	90 93 c5 13 	sts	0x13C5, r25	; 0x8013c5 <_sRuble_Parameters+0x17>
   18e62:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
   18e66:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   18e6a:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   18e6e:	88 e7       	ldi	r24, 0x78	; 120
   18e70:	80 93 78 14 	sts	0x1478, r24	; 0x801478 <_sRuble_Parameters+0xca>
   18e74:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18e78:	81 11       	cpse	r24, r1
   18e7a:	62 c0       	rjmp	.+196    	; 0x18f40 <_Z13Run_Operationv+0x404>
   18e7c:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18e80:	81 11       	cpse	r24, r1
   18e82:	5e c0       	rjmp	.+188    	; 0x18f40 <_Z13Run_Operationv+0x404>
   18e84:	80 91 65 14 	lds	r24, 0x1465	; 0x801465 <_sRuble_Parameters+0xb7>
   18e88:	80 93 1e 14 	sts	0x141E, r24	; 0x80141e <_sRuble_Parameters+0x70>
   18e8c:	6e e1       	ldi	r22, 0x1E	; 30
   18e8e:	74 e1       	ldi	r23, 0x14	; 20
   18e90:	86 e9       	ldi	r24, 0x96	; 150
   18e92:	9c e0       	ldi	r25, 0x0C	; 12
   18e94:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18e98:	66 dd       	rcall	.-1332   	; 0x18966 <_Z16Start_Irrigationv>
   18e9a:	81 11       	cpse	r24, r1
   18e9c:	2c c0       	rjmp	.+88     	; 0x18ef6 <_Z13Run_Operationv+0x3ba>
   18e9e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18ea2:	81 30       	cpi	r24, 0x01	; 1
   18ea4:	51 f4       	brne	.+20     	; 0x18eba <_Z13Run_Operationv+0x37e>
   18ea6:	6a ee       	ldi	r22, 0xEA	; 234
   18ea8:	72 e4       	ldi	r23, 0x42	; 66
   18eaa:	86 ec       	ldi	r24, 0xC6	; 198
   18eac:	94 e1       	ldi	r25, 0x14	; 20
   18eae:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18eb2:	86 ec       	ldi	r24, 0xC6	; 198
   18eb4:	94 e1       	ldi	r25, 0x14	; 20
   18eb6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18eba:	81 e0       	ldi	r24, 0x01	; 1
   18ebc:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18ec0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18ec4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18ec8:	84 60       	ori	r24, 0x04	; 4
   18eca:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18ece:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18ed2:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18ed6:	81 30       	cpi	r24, 0x01	; 1
   18ed8:	39 f4       	brne	.+14     	; 0x18ee8 <_Z13Run_Operationv+0x3ac>
   18eda:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18ede:	81 30       	cpi	r24, 0x01	; 1
   18ee0:	19 f4       	brne	.+6      	; 0x18ee8 <_Z13Run_Operationv+0x3ac>
   18ee2:	80 ef       	ldi	r24, 0xF0	; 240
   18ee4:	90 e0       	ldi	r25, 0x00	; 0
   18ee6:	02 c0       	rjmp	.+4      	; 0x18eec <_Z13Run_Operationv+0x3b0>
   18ee8:	88 e5       	ldi	r24, 0x58	; 88
   18eea:	92 e0       	ldi	r25, 0x02	; 2
   18eec:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18ef0:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18ef4:	33 c0       	rjmp	.+102    	; 0x18f5c <_Z13Run_Operationv+0x420>
   18ef6:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18efa:	81 11       	cpse	r24, r1
   18efc:	2f c0       	rjmp	.+94     	; 0x18f5c <_Z13Run_Operationv+0x420>
   18efe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18f02:	81 30       	cpi	r24, 0x01	; 1
   18f04:	51 f4       	brne	.+20     	; 0x18f1a <_Z13Run_Operationv+0x3de>
   18f06:	62 ea       	ldi	r22, 0xA2	; 162
   18f08:	72 e4       	ldi	r23, 0x42	; 66
   18f0a:	86 ec       	ldi	r24, 0xC6	; 198
   18f0c:	94 e1       	ldi	r25, 0x14	; 20
   18f0e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18f12:	86 ec       	ldi	r24, 0xC6	; 198
   18f14:	94 e1       	ldi	r25, 0x14	; 20
   18f16:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18f1a:	88 e5       	ldi	r24, 0x58	; 88
   18f1c:	92 e0       	ldi	r25, 0x02	; 2
   18f1e:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18f22:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18f26:	81 e0       	ldi	r24, 0x01	; 1
   18f28:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18f2c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18f30:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18f34:	84 60       	ori	r24, 0x04	; 4
   18f36:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18f3a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18f3e:	0e c0       	rjmp	.+28     	; 0x18f5c <_Z13Run_Operationv+0x420>
   18f40:	88 e5       	ldi	r24, 0x58	; 88
   18f42:	92 e0       	ldi	r25, 0x02	; 2
   18f44:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18f48:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18f4c:	81 e0       	ldi	r24, 0x01	; 1
   18f4e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18f52:	0c 60       	ori	r16, 0x0C	; 12
   18f54:	10 93 c7 13 	sts	0x13C7, r17	; 0x8013c7 <_sRuble_Parameters+0x19>
   18f58:	00 93 c6 13 	sts	0x13C6, r16	; 0x8013c6 <_sRuble_Parameters+0x18>
   18f5c:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   18f60:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   18f64:	89 2b       	or	r24, r25
   18f66:	a9 f0       	breq	.+42     	; 0x18f92 <_Z13Run_Operationv+0x456>
   18f68:	67 e8       	ldi	r22, 0x87	; 135
   18f6a:	72 e4       	ldi	r23, 0x42	; 66
   18f6c:	86 ec       	ldi	r24, 0xC6	; 198
   18f6e:	94 e1       	ldi	r25, 0x14	; 20
   18f70:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18f74:	60 91 c4 13 	lds	r22, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   18f78:	70 91 c5 13 	lds	r23, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   18f7c:	4a e0       	ldi	r20, 0x0A	; 10
   18f7e:	50 e0       	ldi	r21, 0x00	; 0
   18f80:	86 ec       	ldi	r24, 0xC6	; 198
   18f82:	94 e1       	ldi	r25, 0x14	; 20
   18f84:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print7printlnEji>
   18f88:	86 ec       	ldi	r24, 0xC6	; 198
   18f8a:	94 e1       	ldi	r25, 0x14	; 20
   18f8c:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18f90:	13 c0       	rjmp	.+38     	; 0x18fb8 <_Z13Run_Operationv+0x47c>
   18f92:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18f96:	81 30       	cpi	r24, 0x01	; 1
   18f98:	51 f4       	brne	.+20     	; 0x18fae <_Z13Run_Operationv+0x472>
   18f9a:	6a e6       	ldi	r22, 0x6A	; 106
   18f9c:	72 e4       	ldi	r23, 0x42	; 66
   18f9e:	86 ec       	ldi	r24, 0xC6	; 198
   18fa0:	94 e1       	ldi	r25, 0x14	; 20
   18fa2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   18fa6:	86 ec       	ldi	r24, 0xC6	; 198
   18fa8:	94 e1       	ldi	r25, 0x14	; 20
   18faa:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   18fae:	1f d9       	rcall	.-3522   	; 0x181ee <_Z15Stop_Irrigationv>
   18fb0:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   18fb4:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   18fb8:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   18fbc:	81 11       	cpse	r24, r1
   18fbe:	09 c0       	rjmp	.+18     	; 0x18fd2 <_Z13Run_Operationv+0x496>
   18fc0:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18fc4:	81 11       	cpse	r24, r1
   18fc6:	11 c0       	rjmp	.+34     	; 0x18fea <_Z13Run_Operationv+0x4ae>
   18fc8:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18fcc:	81 11       	cpse	r24, r1
   18fce:	0d c0       	rjmp	.+26     	; 0x18fea <_Z13Run_Operationv+0x4ae>
   18fd0:	8a c0       	rjmp	.+276    	; 0x190e6 <_Z13Run_Operationv+0x5aa>
   18fd2:	98 2f       	mov	r25, r24
   18fd4:	97 7f       	andi	r25, 0xF7	; 247
   18fd6:	91 30       	cpi	r25, 0x01	; 1
   18fd8:	89 f0       	breq	.+34     	; 0x18ffc <_Z13Run_Operationv+0x4c0>
   18fda:	98 2f       	mov	r25, r24
   18fdc:	9d 7f       	andi	r25, 0xFD	; 253
   18fde:	94 30       	cpi	r25, 0x04	; 4
   18fe0:	69 f0       	breq	.+26     	; 0x18ffc <_Z13Run_Operationv+0x4c0>
   18fe2:	8c 30       	cpi	r24, 0x0C	; 12
   18fe4:	59 f0       	breq	.+22     	; 0x18ffc <_Z13Run_Operationv+0x4c0>
   18fe6:	8f 30       	cpi	r24, 0x0F	; 15
   18fe8:	49 f0       	breq	.+18     	; 0x18ffc <_Z13Run_Operationv+0x4c0>
   18fea:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18fee:	81 11       	cpse	r24, r1
   18ff0:	05 c0       	rjmp	.+10     	; 0x18ffc <_Z13Run_Operationv+0x4c0>
   18ff2:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18ff6:	88 23       	and	r24, r24
   18ff8:	09 f4       	brne	.+2      	; 0x18ffc <_Z13Run_Operationv+0x4c0>
   18ffa:	49 c0       	rjmp	.+146    	; 0x1908e <_Z13Run_Operationv+0x552>
   18ffc:	f8 d8       	rcall	.-3600   	; 0x181ee <_Z15Stop_Irrigationv>
   18ffe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19002:	81 30       	cpi	r24, 0x01	; 1
   19004:	51 f4       	brne	.+20     	; 0x1901a <_Z13Run_Operationv+0x4de>
   19006:	67 e3       	ldi	r22, 0x37	; 55
   19008:	72 e4       	ldi	r23, 0x42	; 66
   1900a:	86 ec       	ldi	r24, 0xC6	; 198
   1900c:	94 e1       	ldi	r25, 0x14	; 20
   1900e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19012:	86 ec       	ldi	r24, 0xC6	; 198
   19014:	94 e1       	ldi	r25, 0x14	; 20
   19016:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1901a:	90 91 39 0e 	lds	r25, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   1901e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19022:	91 11       	cpse	r25, r1
   19024:	04 c0       	rjmp	.+8      	; 0x1902e <_Z13Run_Operationv+0x4f2>
   19026:	90 91 52 0e 	lds	r25, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   1902a:	99 23       	and	r25, r25
   1902c:	79 f0       	breq	.+30     	; 0x1904c <_Z13Run_Operationv+0x510>
   1902e:	81 30       	cpi	r24, 0x01	; 1
   19030:	51 f4       	brne	.+20     	; 0x19046 <_Z13Run_Operationv+0x50a>
   19032:	64 e0       	ldi	r22, 0x04	; 4
   19034:	72 e4       	ldi	r23, 0x42	; 66
   19036:	86 ec       	ldi	r24, 0xC6	; 198
   19038:	94 e1       	ldi	r25, 0x14	; 20
   1903a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1903e:	86 ec       	ldi	r24, 0xC6	; 198
   19040:	94 e1       	ldi	r25, 0x14	; 20
   19042:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19046:	8c e3       	ldi	r24, 0x3C	; 60
   19048:	90 e0       	ldi	r25, 0x00	; 0
   1904a:	19 c0       	rjmp	.+50     	; 0x1907e <_Z13Run_Operationv+0x542>
   1904c:	81 30       	cpi	r24, 0x01	; 1
   1904e:	51 f4       	brne	.+20     	; 0x19064 <_Z13Run_Operationv+0x528>
   19050:	61 ed       	ldi	r22, 0xD1	; 209
   19052:	71 e4       	ldi	r23, 0x41	; 65
   19054:	86 ec       	ldi	r24, 0xC6	; 198
   19056:	94 e1       	ldi	r25, 0x14	; 20
   19058:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1905c:	86 ec       	ldi	r24, 0xC6	; 198
   1905e:	94 e1       	ldi	r25, 0x14	; 20
   19060:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19064:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19068:	81 30       	cpi	r24, 0x01	; 1
   1906a:	39 f4       	brne	.+14     	; 0x1907a <_Z13Run_Operationv+0x53e>
   1906c:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   19070:	81 30       	cpi	r24, 0x01	; 1
   19072:	19 f4       	brne	.+6      	; 0x1907a <_Z13Run_Operationv+0x53e>
   19074:	80 ef       	ldi	r24, 0xF0	; 240
   19076:	90 e0       	ldi	r25, 0x00	; 0
   19078:	02 c0       	rjmp	.+4      	; 0x1907e <_Z13Run_Operationv+0x542>
   1907a:	88 e5       	ldi	r24, 0x58	; 88
   1907c:	92 e0       	ldi	r25, 0x02	; 2
   1907e:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   19082:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   19086:	81 e0       	ldi	r24, 0x01	; 1
   19088:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1908c:	2c c0       	rjmp	.+88     	; 0x190e6 <_Z13Run_Operationv+0x5aa>
   1908e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19092:	81 30       	cpi	r24, 0x01	; 1
   19094:	51 f4       	brne	.+20     	; 0x190aa <_Z13Run_Operationv+0x56e>
   19096:	6e e9       	ldi	r22, 0x9E	; 158
   19098:	71 e4       	ldi	r23, 0x41	; 65
   1909a:	86 ec       	ldi	r24, 0xC6	; 198
   1909c:	94 e1       	ldi	r25, 0x14	; 20
   1909e:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   190a2:	86 ec       	ldi	r24, 0xC6	; 198
   190a4:	94 e1       	ldi	r25, 0x14	; 20
   190a6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   190aa:	a1 d8       	rcall	.-3774   	; 0x181ee <_Z15Stop_Irrigationv>
   190ac:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   190b0:	88 23       	and	r24, r24
   190b2:	21 f0       	breq	.+8      	; 0x190bc <_Z13Run_Operationv+0x580>
   190b4:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   190b8:	81 11       	cpse	r24, r1
   190ba:	04 c0       	rjmp	.+8      	; 0x190c4 <_Z13Run_Operationv+0x588>
   190bc:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   190c0:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   190c4:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   190c8:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   190cc:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   190d0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   190d4:	92 60       	ori	r25, 0x02	; 2
   190d6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   190da:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   190de:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   190e2:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   190e6:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   190ea:	88 23       	and	r24, r24
   190ec:	61 f1       	breq	.+88     	; 0x19146 <_Z13Run_Operationv+0x60a>
   190ee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   190f2:	81 30       	cpi	r24, 0x01	; 1
   190f4:	09 f0       	breq	.+2      	; 0x190f8 <_Z13Run_Operationv+0x5bc>
   190f6:	0d ce       	rjmp	.-998    	; 0x18d12 <_Z13Run_Operationv+0x1d6>
   190f8:	64 e7       	ldi	r22, 0x74	; 116
   190fa:	71 e4       	ldi	r23, 0x41	; 65
   190fc:	02 ce       	rjmp	.-1020   	; 0x18d02 <_Z13Run_Operationv+0x1c6>
   190fe:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   19102:	83 30       	cpi	r24, 0x03	; 3
   19104:	c1 f0       	breq	.+48     	; 0x19136 <_Z13Run_Operationv+0x5fa>
   19106:	18 f4       	brcc	.+6      	; 0x1910e <_Z13Run_Operationv+0x5d2>
   19108:	81 30       	cpi	r24, 0x01	; 1
   1910a:	e8 f0       	brcs	.+58     	; 0x19146 <_Z13Run_Operationv+0x60a>
   1910c:	02 c0       	rjmp	.+4      	; 0x19112 <_Z13Run_Operationv+0x5d6>
   1910e:	84 30       	cpi	r24, 0x04	; 4
   19110:	d1 f4       	brne	.+52     	; 0x19146 <_Z13Run_Operationv+0x60a>
   19112:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19116:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1911a:	99 23       	and	r25, r25
   1911c:	31 f0       	breq	.+12     	; 0x1912a <_Z13Run_Operationv+0x5ee>
   1911e:	81 30       	cpi	r24, 0x01	; 1
   19120:	09 f0       	breq	.+2      	; 0x19124 <_Z13Run_Operationv+0x5e8>
   19122:	4e ce       	rjmp	.-868    	; 0x18dc0 <_Z13Run_Operationv+0x284>
   19124:	6d e4       	ldi	r22, 0x4D	; 77
   19126:	71 e4       	ldi	r23, 0x41	; 65
   19128:	43 ce       	rjmp	.-890    	; 0x18db0 <_Z13Run_Operationv+0x274>
   1912a:	81 30       	cpi	r24, 0x01	; 1
   1912c:	09 f0       	breq	.+2      	; 0x19130 <_Z13Run_Operationv+0x5f4>
   1912e:	48 ce       	rjmp	.-880    	; 0x18dc0 <_Z13Run_Operationv+0x284>
   19130:	60 e3       	ldi	r22, 0x30	; 48
   19132:	71 e4       	ldi	r23, 0x41	; 65
   19134:	3d ce       	rjmp	.-902    	; 0x18db0 <_Z13Run_Operationv+0x274>
   19136:	0f 90       	pop	r0
   19138:	0f 90       	pop	r0
   1913a:	df 91       	pop	r29
   1913c:	cf 91       	pop	r28
   1913e:	1f 91       	pop	r17
   19140:	0f 91       	pop	r16
   19142:	0c 94 7b 54 	jmp	0xa8f6	; 0xa8f6 <_Z20Schedules_Monitoringv>
   19146:	0f 90       	pop	r0
   19148:	0f 90       	pop	r0
   1914a:	df 91       	pop	r29
   1914c:	cf 91       	pop	r28
   1914e:	1f 91       	pop	r17
   19150:	0f 91       	pop	r16
   19152:	08 95       	ret

00019154 <_Z26Start_Extra_Plot_Operationh>:
   19154:	1f 93       	push	r17
   19156:	cf 93       	push	r28
   19158:	df 93       	push	r29
   1915a:	c8 2f       	mov	r28, r24
   1915c:	67 e9       	ldi	r22, 0x97	; 151
   1915e:	7f e2       	ldi	r23, 0x2F	; 47
   19160:	86 ec       	ldi	r24, 0xC6	; 198
   19162:	94 e1       	ldi	r25, 0x14	; 20
   19164:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19168:	4a e0       	ldi	r20, 0x0A	; 10
   1916a:	50 e0       	ldi	r21, 0x00	; 0
   1916c:	6c 2f       	mov	r22, r28
   1916e:	86 ec       	ldi	r24, 0xC6	; 198
   19170:	94 e1       	ldi	r25, 0x14	; 20
   19172:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   19176:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1917a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1917e:	84 60       	ori	r24, 0x04	; 4
   19180:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19184:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19188:	1d ef       	ldi	r17, 0xFD	; 253
   1918a:	1c 0f       	add	r17, r28
   1918c:	12 30       	cpi	r17, 0x02	; 2
   1918e:	10 f4       	brcc	.+4      	; 0x19194 <_Z26Start_Extra_Plot_Operationh+0x40>
   19190:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   19194:	6c 2f       	mov	r22, r28
   19196:	81 e0       	ldi	r24, 0x01	; 1
   19198:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   1919c:	d8 2f       	mov	r29, r24
   1919e:	88 23       	and	r24, r24
   191a0:	09 f4       	brne	.+2      	; 0x191a4 <_Z26Start_Extra_Plot_Operationh+0x50>
   191a2:	85 c0       	rjmp	.+266    	; 0x192ae <_Z26Start_Extra_Plot_Operationh+0x15a>
   191a4:	12 30       	cpi	r17, 0x02	; 2
   191a6:	08 f0       	brcs	.+2      	; 0x191aa <_Z26Start_Extra_Plot_Operationh+0x56>
   191a8:	50 c0       	rjmp	.+160    	; 0x1924a <_Z26Start_Extra_Plot_Operationh+0xf6>
   191aa:	c4 30       	cpi	r28, 0x04	; 4
   191ac:	19 f0       	breq	.+6      	; 0x191b4 <_Z26Start_Extra_Plot_Operationh+0x60>
   191ae:	82 e0       	ldi	r24, 0x02	; 2
   191b0:	0e 94 22 24 	call	0x4844	; 0x4844 <_Z22Hard_Coded_Flush_Valveh>
   191b4:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   191b8:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   191bc:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   191c0:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   191c4:	81 11       	cpse	r24, r1
   191c6:	17 c0       	rjmp	.+46     	; 0x191f6 <_Z26Start_Extra_Plot_Operationh+0xa2>
   191c8:	8a e0       	ldi	r24, 0x0A	; 10
   191ca:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   191ce:	89 2b       	or	r24, r25
   191d0:	21 f0       	breq	.+8      	; 0x191da <_Z26Start_Extra_Plot_Operationh+0x86>
   191d2:	60 e0       	ldi	r22, 0x00	; 0
   191d4:	8a e0       	ldi	r24, 0x0A	; 10
   191d6:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   191da:	80 e3       	ldi	r24, 0x30	; 48
   191dc:	95 e7       	ldi	r25, 0x75	; 117
   191de:	0e 94 2b 75 	call	0xea56	; 0xea56 <_Z8My_Delayj>
   191e2:	8b e0       	ldi	r24, 0x0B	; 11
   191e4:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   191e8:	89 2b       	or	r24, r25
   191ea:	79 f1       	breq	.+94     	; 0x1924a <_Z26Start_Extra_Plot_Operationh+0xf6>
   191ec:	60 e0       	ldi	r22, 0x00	; 0
   191ee:	8b e0       	ldi	r24, 0x0B	; 11
   191f0:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   191f4:	2a c0       	rjmp	.+84     	; 0x1924a <_Z26Start_Extra_Plot_Operationh+0xf6>
   191f6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   191fa:	81 30       	cpi	r24, 0x01	; 1
   191fc:	51 f4       	brne	.+20     	; 0x19212 <_Z26Start_Extra_Plot_Operationh+0xbe>
   191fe:	62 e7       	ldi	r22, 0x72	; 114
   19200:	7f e2       	ldi	r23, 0x2F	; 47
   19202:	86 ec       	ldi	r24, 0xC6	; 198
   19204:	94 e1       	ldi	r25, 0x14	; 20
   19206:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1920a:	86 ec       	ldi	r24, 0xC6	; 198
   1920c:	94 e1       	ldi	r25, 0x14	; 20
   1920e:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19212:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19216:	62 50       	subi	r22, 0x02	; 2
   19218:	82 e0       	ldi	r24, 0x02	; 2
   1921a:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
   1921e:	88 23       	and	r24, r24
   19220:	51 f0       	breq	.+20     	; 0x19236 <_Z26Start_Extra_Plot_Operationh+0xe2>
   19222:	81 e0       	ldi	r24, 0x01	; 1
   19224:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   19228:	6c e7       	ldi	r22, 0x7C	; 124
   1922a:	74 e1       	ldi	r23, 0x14	; 20
   1922c:	8d ea       	ldi	r24, 0xAD	; 173
   1922e:	9c e0       	ldi	r25, 0x0C	; 12
   19230:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19234:	0a c0       	rjmp	.+20     	; 0x1924a <_Z26Start_Extra_Plot_Operationh+0xf6>
   19236:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   1923a:	6c e7       	ldi	r22, 0x7C	; 124
   1923c:	74 e1       	ldi	r23, 0x14	; 20
   1923e:	8d ea       	ldi	r24, 0xAD	; 173
   19240:	9c e0       	ldi	r25, 0x0C	; 12
   19242:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19246:	d0 e0       	ldi	r29, 0x00	; 0
   19248:	40 c0       	rjmp	.+128    	; 0x192ca <_Z26Start_Extra_Plot_Operationh+0x176>
   1924a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1924e:	81 30       	cpi	r24, 0x01	; 1
   19250:	51 f4       	brne	.+20     	; 0x19266 <_Z26Start_Extra_Plot_Operationh+0x112>
   19252:	64 e6       	ldi	r22, 0x64	; 100
   19254:	7f e2       	ldi	r23, 0x2F	; 47
   19256:	86 ec       	ldi	r24, 0xC6	; 198
   19258:	94 e1       	ldi	r25, 0x14	; 20
   1925a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1925e:	86 ec       	ldi	r24, 0xC6	; 198
   19260:	94 e1       	ldi	r25, 0x14	; 20
   19262:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19266:	8b e1       	ldi	r24, 0x1B	; 27
   19268:	c8 9f       	mul	r28, r24
   1926a:	f0 01       	movw	r30, r0
   1926c:	11 24       	eor	r1, r1
   1926e:	e8 51       	subi	r30, 0x18	; 24
   19270:	f2 4f       	sbci	r31, 0xF2	; 242
   19272:	81 e0       	ldi	r24, 0x01	; 1
   19274:	80 83       	st	Z, r24
   19276:	23 85       	ldd	r18, Z+11	; 0x0b
   19278:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1927c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19280:	21 30       	cpi	r18, 0x01	; 1
   19282:	51 f4       	brne	.+20     	; 0x19298 <_Z26Start_Extra_Plot_Operationh+0x144>
   19284:	90 61       	ori	r25, 0x10	; 16
   19286:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1928a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1928e:	12 86       	std	Z+10, r1	; 0x0a
   19290:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   19294:	22 8f       	std	Z+26, r18	; 0x1a
   19296:	19 c0       	rjmp	.+50     	; 0x192ca <_Z26Start_Extra_Plot_Operationh+0x176>
   19298:	90 62       	ori	r25, 0x20	; 32
   1929a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1929e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   192a2:	13 86       	std	Z+11, r1	; 0x0b
   192a4:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   192a8:	82 e0       	ldi	r24, 0x02	; 2
   192aa:	82 8f       	std	Z+26, r24	; 0x1a
   192ac:	0e c0       	rjmp	.+28     	; 0x192ca <_Z26Start_Extra_Plot_Operationh+0x176>
   192ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   192b2:	81 30       	cpi	r24, 0x01	; 1
   192b4:	51 f4       	brne	.+20     	; 0x192ca <_Z26Start_Extra_Plot_Operationh+0x176>
   192b6:	6d e4       	ldi	r22, 0x4D	; 77
   192b8:	7f e2       	ldi	r23, 0x2F	; 47
   192ba:	86 ec       	ldi	r24, 0xC6	; 198
   192bc:	94 e1       	ldi	r25, 0x14	; 20
   192be:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   192c2:	86 ec       	ldi	r24, 0xC6	; 198
   192c4:	94 e1       	ldi	r25, 0x14	; 20
   192c6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   192ca:	8d 2f       	mov	r24, r29
   192cc:	df 91       	pop	r29
   192ce:	cf 91       	pop	r28
   192d0:	1f 91       	pop	r17
   192d2:	08 95       	ret

000192d4 <_Z25Stop_Extra_Plot_Operationh>:
   192d4:	0f 93       	push	r16
   192d6:	1f 93       	push	r17
   192d8:	cf 93       	push	r28
   192da:	df 93       	push	r29
   192dc:	c8 2f       	mov	r28, r24
   192de:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   192e2:	81 30       	cpi	r24, 0x01	; 1
   192e4:	51 f4       	brne	.+20     	; 0x192fa <_Z25Stop_Extra_Plot_Operationh+0x26>
   192e6:	6b e3       	ldi	r22, 0x3B	; 59
   192e8:	7f e2       	ldi	r23, 0x2F	; 47
   192ea:	86 ec       	ldi	r24, 0xC6	; 198
   192ec:	94 e1       	ldi	r25, 0x14	; 20
   192ee:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   192f2:	86 ec       	ldi	r24, 0xC6	; 198
   192f4:	94 e1       	ldi	r25, 0x14	; 20
   192f6:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   192fa:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   192fe:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19302:	84 60       	ori	r24, 0x04	; 4
   19304:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19308:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1930c:	0c 2f       	mov	r16, r28
   1930e:	10 e0       	ldi	r17, 0x00	; 0
   19310:	8b e1       	ldi	r24, 0x1B	; 27
   19312:	c8 9f       	mul	r28, r24
   19314:	f0 01       	movw	r30, r0
   19316:	11 24       	eor	r1, r1
   19318:	e8 51       	subi	r30, 0x18	; 24
   1931a:	f2 4f       	sbci	r31, 0xF2	; 242
   1931c:	10 82       	st	Z, r1
   1931e:	8d ef       	ldi	r24, 0xFD	; 253
   19320:	8c 0f       	add	r24, r28
   19322:	82 30       	cpi	r24, 0x02	; 2
   19324:	20 f4       	brcc	.+8      	; 0x1932e <_Z25Stop_Extra_Plot_Operationh+0x5a>
   19326:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1932a:	93 30       	cpi	r25, 0x03	; 3
   1932c:	a9 f4       	brne	.+42     	; 0x19358 <_Z25Stop_Extra_Plot_Operationh+0x84>
   1932e:	90 91 ac 13 	lds	r25, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   19332:	99 23       	and	r25, r25
   19334:	11 f0       	breq	.+4      	; 0x1933a <_Z25Stop_Extra_Plot_Operationh+0x66>
   19336:	82 30       	cpi	r24, 0x02	; 2
   19338:	78 f0       	brcs	.+30     	; 0x19358 <_Z25Stop_Extra_Plot_Operationh+0x84>
   1933a:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1933e:	93 30       	cpi	r25, 0x03	; 3
   19340:	31 f4       	brne	.+12     	; 0x1934e <_Z25Stop_Extra_Plot_Operationh+0x7a>
   19342:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19346:	91 11       	cpse	r25, r1
   19348:	02 c0       	rjmp	.+4      	; 0x1934e <_Z25Stop_Extra_Plot_Operationh+0x7a>
   1934a:	82 30       	cpi	r24, 0x02	; 2
   1934c:	28 f0       	brcs	.+10     	; 0x19358 <_Z25Stop_Extra_Plot_Operationh+0x84>
   1934e:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   19352:	81 30       	cpi	r24, 0x01	; 1
   19354:	09 f0       	breq	.+2      	; 0x19358 <_Z25Stop_Extra_Plot_Operationh+0x84>
   19356:	aa c0       	rjmp	.+340    	; 0x194ac <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   19358:	83 e0       	ldi	r24, 0x03	; 3
   1935a:	0e 94 22 24 	call	0x4844	; 0x4844 <_Z22Hard_Coded_Flush_Valveh>
   1935e:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19362:	81 11       	cpse	r24, r1
   19364:	a3 c0       	rjmp	.+326    	; 0x194ac <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   19366:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   1936a:	81 11       	cpse	r24, r1
   1936c:	14 c0       	rjmp	.+40     	; 0x19396 <_Z25Stop_Extra_Plot_Operationh+0xc2>
   1936e:	8a e0       	ldi	r24, 0x0A	; 10
   19370:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   19374:	01 97       	sbiw	r24, 0x01	; 1
   19376:	21 f0       	breq	.+8      	; 0x19380 <_Z25Stop_Extra_Plot_Operationh+0xac>
   19378:	61 e0       	ldi	r22, 0x01	; 1
   1937a:	8a e0       	ldi	r24, 0x0A	; 10
   1937c:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19380:	8b e0       	ldi	r24, 0x0B	; 11
   19382:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   19386:	01 97       	sbiw	r24, 0x01	; 1
   19388:	09 f4       	brne	.+2      	; 0x1938c <_Z25Stop_Extra_Plot_Operationh+0xb8>
   1938a:	90 c0       	rjmp	.+288    	; 0x194ac <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   1938c:	61 e0       	ldi	r22, 0x01	; 1
   1938e:	8b e0       	ldi	r24, 0x0B	; 11
   19390:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19394:	8b c0       	rjmp	.+278    	; 0x194ac <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   19396:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1939a:	81 30       	cpi	r24, 0x01	; 1
   1939c:	51 f4       	brne	.+20     	; 0x193b2 <_Z25Stop_Extra_Plot_Operationh+0xde>
   1939e:	65 e1       	ldi	r22, 0x15	; 21
   193a0:	7f e2       	ldi	r23, 0x2F	; 47
   193a2:	86 ec       	ldi	r24, 0xC6	; 198
   193a4:	94 e1       	ldi	r25, 0x14	; 20
   193a6:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   193aa:	86 ec       	ldi	r24, 0xC6	; 198
   193ac:	94 e1       	ldi	r25, 0x14	; 20
   193ae:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   193b2:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   193b6:	62 50       	subi	r22, 0x02	; 2
   193b8:	84 e0       	ldi	r24, 0x04	; 4
   193ba:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
   193be:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   193c2:	88 23       	and	r24, r24
   193c4:	b9 f0       	breq	.+46     	; 0x193f4 <_Z25Stop_Extra_Plot_Operationh+0x120>
   193c6:	91 30       	cpi	r25, 0x01	; 1
   193c8:	51 f4       	brne	.+20     	; 0x193de <_Z25Stop_Extra_Plot_Operationh+0x10a>
   193ca:	65 ef       	ldi	r22, 0xF5	; 245
   193cc:	7e e2       	ldi	r23, 0x2E	; 46
   193ce:	86 ec       	ldi	r24, 0xC6	; 198
   193d0:	94 e1       	ldi	r25, 0x14	; 20
   193d2:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   193d6:	86 ec       	ldi	r24, 0xC6	; 198
   193d8:	94 e1       	ldi	r25, 0x14	; 20
   193da:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   193de:	10 92 8c 14 	sts	0x148C, r1	; 0x80148c <_sRuble_Parameters+0xde>
   193e2:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   193e6:	6c e7       	ldi	r22, 0x7C	; 124
   193e8:	74 e1       	ldi	r23, 0x14	; 20
   193ea:	8d ea       	ldi	r24, 0xAD	; 173
   193ec:	9c e0       	ldi	r25, 0x0C	; 12
   193ee:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   193f2:	5c c0       	rjmp	.+184    	; 0x194ac <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   193f4:	91 30       	cpi	r25, 0x01	; 1
   193f6:	51 f4       	brne	.+20     	; 0x1940c <_Z25Stop_Extra_Plot_Operationh+0x138>
   193f8:	6d ec       	ldi	r22, 0xCD	; 205
   193fa:	7e e2       	ldi	r23, 0x2E	; 46
   193fc:	86 ec       	ldi	r24, 0xC6	; 198
   193fe:	94 e1       	ldi	r25, 0x14	; 20
   19400:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19404:	86 ec       	ldi	r24, 0xC6	; 198
   19406:	94 e1       	ldi	r25, 0x14	; 20
   19408:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1940c:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19410:	81 11       	cpse	r24, r1
   19412:	0c c0       	rjmp	.+24     	; 0x1942c <_Z25Stop_Extra_Plot_Operationh+0x158>
   19414:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   19418:	81 30       	cpi	r24, 0x01	; 1
   1941a:	41 f0       	breq	.+16     	; 0x1942c <_Z25Stop_Extra_Plot_Operationh+0x158>
   1941c:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   19420:	81 30       	cpi	r24, 0x01	; 1
   19422:	21 f0       	breq	.+8      	; 0x1942c <_Z25Stop_Extra_Plot_Operationh+0x158>
   19424:	81 e0       	ldi	r24, 0x01	; 1
   19426:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   1942a:	02 c0       	rjmp	.+4      	; 0x19430 <_Z25Stop_Extra_Plot_Operationh+0x15c>
   1942c:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   19430:	6c e7       	ldi	r22, 0x7C	; 124
   19432:	74 e1       	ldi	r23, 0x14	; 20
   19434:	8d ea       	ldi	r24, 0xAD	; 173
   19436:	9c e0       	ldi	r25, 0x0C	; 12
   19438:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1943c:	6c e7       	ldi	r22, 0x7C	; 124
   1943e:	74 e1       	ldi	r23, 0x14	; 20
   19440:	8d ea       	ldi	r24, 0xAD	; 173
   19442:	9c e0       	ldi	r25, 0x0C	; 12
   19444:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19448:	81 e0       	ldi	r24, 0x01	; 1
   1944a:	80 93 8c 14 	sts	0x148C, r24	; 0x80148c <_sRuble_Parameters+0xde>
   1944e:	8b e1       	ldi	r24, 0x1B	; 27
   19450:	80 9f       	mul	r24, r16
   19452:	f0 01       	movw	r30, r0
   19454:	81 9f       	mul	r24, r17
   19456:	f0 0d       	add	r31, r0
   19458:	11 24       	eor	r1, r1
   1945a:	e8 51       	subi	r30, 0x18	; 24
   1945c:	f2 4f       	sbci	r31, 0xF2	; 242
   1945e:	23 85       	ldd	r18, Z+11	; 0x0b
   19460:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19464:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19468:	21 30       	cpi	r18, 0x01	; 1
   1946a:	51 f4       	brne	.+20     	; 0x19480 <_Z25Stop_Extra_Plot_Operationh+0x1ac>
   1946c:	90 61       	ori	r25, 0x10	; 16
   1946e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19472:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19476:	13 86       	std	Z+11, r1	; 0x0b
   19478:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   1947c:	22 8f       	std	Z+26, r18	; 0x1a
   1947e:	0b c0       	rjmp	.+22     	; 0x19496 <_Z25Stop_Extra_Plot_Operationh+0x1c2>
   19480:	90 62       	ori	r25, 0x20	; 32
   19482:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19486:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1948a:	12 86       	std	Z+10, r1	; 0x0a
   1948c:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   19490:	13 86       	std	Z+11, r1	; 0x0b
   19492:	82 e0       	ldi	r24, 0x02	; 2
   19494:	82 8f       	std	Z+26, r24	; 0x1a
   19496:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1949a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1949e:	84 60       	ori	r24, 0x04	; 4
   194a0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   194a4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   194a8:	d1 e0       	ldi	r29, 0x01	; 1
   194aa:	51 c0       	rjmp	.+162    	; 0x1954e <_Z25Stop_Extra_Plot_Operationh+0x27a>
   194ac:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   194b0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   194b4:	84 60       	ori	r24, 0x04	; 4
   194b6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   194ba:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   194be:	6c 2f       	mov	r22, r28
   194c0:	80 e0       	ldi	r24, 0x00	; 0
   194c2:	0e 94 de b9 	call	0x173bc	; 0x173bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   194c6:	d8 2f       	mov	r29, r24
   194c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   194cc:	dd 23       	and	r29, r29
   194ce:	99 f1       	breq	.+102    	; 0x19536 <_Z25Stop_Extra_Plot_Operationh+0x262>
   194d0:	81 30       	cpi	r24, 0x01	; 1
   194d2:	51 f4       	brne	.+20     	; 0x194e8 <_Z25Stop_Extra_Plot_Operationh+0x214>
   194d4:	6c eb       	ldi	r22, 0xBC	; 188
   194d6:	7e e2       	ldi	r23, 0x2E	; 46
   194d8:	86 ec       	ldi	r24, 0xC6	; 198
   194da:	94 e1       	ldi	r25, 0x14	; 20
   194dc:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   194e0:	86 ec       	ldi	r24, 0xC6	; 198
   194e2:	94 e1       	ldi	r25, 0x14	; 20
   194e4:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   194e8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   194ec:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   194f0:	2b e1       	ldi	r18, 0x1B	; 27
   194f2:	20 9f       	mul	r18, r16
   194f4:	f0 01       	movw	r30, r0
   194f6:	21 9f       	mul	r18, r17
   194f8:	f0 0d       	add	r31, r0
   194fa:	11 24       	eor	r1, r1
   194fc:	e8 51       	subi	r30, 0x18	; 24
   194fe:	f2 4f       	sbci	r31, 0xF2	; 242
   19500:	23 85       	ldd	r18, Z+11	; 0x0b
   19502:	21 30       	cpi	r18, 0x01	; 1
   19504:	59 f4       	brne	.+22     	; 0x1951c <_Z25Stop_Extra_Plot_Operationh+0x248>
   19506:	84 60       	ori	r24, 0x04	; 4
   19508:	90 61       	ori	r25, 0x10	; 16
   1950a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1950e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19512:	13 86       	std	Z+11, r1	; 0x0b
   19514:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   19518:	22 8f       	std	Z+26, r18	; 0x1a
   1951a:	19 c0       	rjmp	.+50     	; 0x1954e <_Z25Stop_Extra_Plot_Operationh+0x27a>
   1951c:	84 60       	ori	r24, 0x04	; 4
   1951e:	90 62       	ori	r25, 0x20	; 32
   19520:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19524:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19528:	12 86       	std	Z+10, r1	; 0x0a
   1952a:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   1952e:	13 86       	std	Z+11, r1	; 0x0b
   19530:	82 e0       	ldi	r24, 0x02	; 2
   19532:	82 8f       	std	Z+26, r24	; 0x1a
   19534:	0c c0       	rjmp	.+24     	; 0x1954e <_Z25Stop_Extra_Plot_Operationh+0x27a>
   19536:	81 30       	cpi	r24, 0x01	; 1
   19538:	51 f4       	brne	.+20     	; 0x1954e <_Z25Stop_Extra_Plot_Operationh+0x27a>
   1953a:	63 ea       	ldi	r22, 0xA3	; 163
   1953c:	7e e2       	ldi	r23, 0x2E	; 46
   1953e:	86 ec       	ldi	r24, 0xC6	; 198
   19540:	94 e1       	ldi	r25, 0x14	; 20
   19542:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19546:	86 ec       	ldi	r24, 0xC6	; 198
   19548:	94 e1       	ldi	r25, 0x14	; 20
   1954a:	0e 94 1d d3 	call	0x1a63a	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1954e:	8d 2f       	mov	r24, r29
   19550:	df 91       	pop	r29
   19552:	cf 91       	pop	r28
   19554:	1f 91       	pop	r17
   19556:	0f 91       	pop	r16
   19558:	08 95       	ret

0001955a <_Z24Run_Extra_Plot_Operationv>:
   1955a:	cf 92       	push	r12
   1955c:	df 92       	push	r13
   1955e:	ef 92       	push	r14
   19560:	ff 92       	push	r15
   19562:	1f 93       	push	r17
   19564:	cf 93       	push	r28
   19566:	df 93       	push	r29
   19568:	88 ee       	ldi	r24, 0xE8	; 232
   1956a:	e8 2e       	mov	r14, r24
   1956c:	8d e0       	ldi	r24, 0x0D	; 13
   1956e:	f8 2e       	mov	r15, r24
   19570:	92 ed       	ldi	r25, 0xD2	; 210
   19572:	c9 2e       	mov	r12, r25
   19574:	9d e0       	ldi	r25, 0x0D	; 13
   19576:	d9 2e       	mov	r13, r25
   19578:	c0 e0       	ldi	r28, 0x00	; 0
   1957a:	d0 e0       	ldi	r29, 0x00	; 0
   1957c:	1c 2f       	mov	r17, r28
   1957e:	f7 01       	movw	r30, r14
   19580:	81 81       	ldd	r24, Z+1	; 0x01
   19582:	81 50       	subi	r24, 0x01	; 1
   19584:	82 37       	cpi	r24, 0x72	; 114
   19586:	08 f0       	brcs	.+2      	; 0x1958a <_Z24Run_Extra_Plot_Operationv+0x30>
   19588:	8e c0       	rjmp	.+284    	; 0x196a6 <_Z24Run_Extra_Plot_Operationv+0x14c>
   1958a:	82 81       	ldd	r24, Z+2	; 0x02
   1958c:	82 30       	cpi	r24, 0x02	; 2
   1958e:	19 f0       	breq	.+6      	; 0x19596 <_Z24Run_Extra_Plot_Operationv+0x3c>
   19590:	83 30       	cpi	r24, 0x03	; 3
   19592:	21 f1       	breq	.+72     	; 0x195dc <_Z24Run_Extra_Plot_Operationv+0x82>
   19594:	88 c0       	rjmp	.+272    	; 0x196a6 <_Z24Run_Extra_Plot_Operationv+0x14c>
   19596:	8b e1       	ldi	r24, 0x1B	; 27
   19598:	8c 9f       	mul	r24, r28
   1959a:	f0 01       	movw	r30, r0
   1959c:	8d 9f       	mul	r24, r29
   1959e:	f0 0d       	add	r31, r0
   195a0:	11 24       	eor	r1, r1
   195a2:	e8 51       	subi	r30, 0x18	; 24
   195a4:	f2 4f       	sbci	r31, 0xF2	; 242
   195a6:	83 81       	ldd	r24, Z+3	; 0x03
   195a8:	94 81       	ldd	r25, Z+4	; 0x04
   195aa:	89 2b       	or	r24, r25
   195ac:	41 f4       	brne	.+16     	; 0x195be <_Z24Run_Extra_Plot_Operationv+0x64>
   195ae:	82 85       	ldd	r24, Z+10	; 0x0a
   195b0:	81 11       	cpse	r24, r1
   195b2:	05 c0       	rjmp	.+10     	; 0x195be <_Z24Run_Extra_Plot_Operationv+0x64>
   195b4:	81 e0       	ldi	r24, 0x01	; 1
   195b6:	82 83       	std	Z+2, r24	; 0x02
   195b8:	14 82       	std	Z+4, r1	; 0x04
   195ba:	13 82       	std	Z+3, r1	; 0x03
   195bc:	44 c0       	rjmp	.+136    	; 0x19646 <_Z24Run_Extra_Plot_Operationv+0xec>
   195be:	81 2f       	mov	r24, r17
   195c0:	c9 dd       	rcall	.-1134   	; 0x19154 <_Z26Start_Extra_Plot_Operationh>
   195c2:	88 23       	and	r24, r24
   195c4:	d1 f0       	breq	.+52     	; 0x195fa <_Z24Run_Extra_Plot_Operationv+0xa0>
   195c6:	8b e1       	ldi	r24, 0x1B	; 27
   195c8:	8c 9f       	mul	r24, r28
   195ca:	f0 01       	movw	r30, r0
   195cc:	8d 9f       	mul	r24, r29
   195ce:	f0 0d       	add	r31, r0
   195d0:	11 24       	eor	r1, r1
   195d2:	e8 51       	subi	r30, 0x18	; 24
   195d4:	f2 4f       	sbci	r31, 0xF2	; 242
   195d6:	83 e0       	ldi	r24, 0x03	; 3
   195d8:	82 83       	std	Z+2, r24	; 0x02
   195da:	70 c0       	rjmp	.+224    	; 0x196bc <_Z24Run_Extra_Plot_Operationv+0x162>
   195dc:	f7 01       	movw	r30, r14
   195de:	83 81       	ldd	r24, Z+3	; 0x03
   195e0:	94 81       	ldd	r25, Z+4	; 0x04
   195e2:	00 97       	sbiw	r24, 0x00	; 0
   195e4:	19 f1       	breq	.+70     	; 0x1962c <_Z24Run_Extra_Plot_Operationv+0xd2>
   195e6:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   195ea:	22 30       	cpi	r18, 0x02	; 2
   195ec:	71 f5       	brne	.+92     	; 0x1964a <_Z24Run_Extra_Plot_Operationv+0xf0>
   195ee:	18 30       	cpi	r17, 0x08	; 8
   195f0:	09 f4       	brne	.+2      	; 0x195f4 <_Z24Run_Extra_Plot_Operationv+0x9a>
   195f2:	64 c0       	rjmp	.+200    	; 0x196bc <_Z24Run_Extra_Plot_Operationv+0x162>
   195f4:	14 30       	cpi	r17, 0x04	; 4
   195f6:	09 f4       	brne	.+2      	; 0x195fa <_Z24Run_Extra_Plot_Operationv+0xa0>
   195f8:	61 c0       	rjmp	.+194    	; 0x196bc <_Z24Run_Extra_Plot_Operationv+0x162>
   195fa:	8b e1       	ldi	r24, 0x1B	; 27
   195fc:	8c 9f       	mul	r24, r28
   195fe:	f0 01       	movw	r30, r0
   19600:	8d 9f       	mul	r24, r29
   19602:	f0 0d       	add	r31, r0
   19604:	11 24       	eor	r1, r1
   19606:	e8 51       	subi	r30, 0x18	; 24
   19608:	f2 4f       	sbci	r31, 0xF2	; 242
   1960a:	81 e0       	ldi	r24, 0x01	; 1
   1960c:	82 83       	std	Z+2, r24	; 0x02
   1960e:	14 82       	std	Z+4, r1	; 0x04
   19610:	13 82       	std	Z+3, r1	; 0x03
   19612:	81 2f       	mov	r24, r17
   19614:	5f de       	rcall	.-834    	; 0x192d4 <_Z25Stop_Extra_Plot_Operationh>
   19616:	81 e0       	ldi	r24, 0x01	; 1
   19618:	81 0f       	add	r24, r17
   1961a:	df 91       	pop	r29
   1961c:	cf 91       	pop	r28
   1961e:	1f 91       	pop	r17
   19620:	ff 90       	pop	r15
   19622:	ef 90       	pop	r14
   19624:	df 90       	pop	r13
   19626:	cf 90       	pop	r12
   19628:	0c 94 89 7a 	jmp	0xf512	; 0xf512 <_Z21Exra_Plot_Data_EEPROMh>
   1962c:	22 85       	ldd	r18, Z+10	; 0x0a
   1962e:	21 11       	cpse	r18, r1
   19630:	da cf       	rjmp	.-76     	; 0x195e6 <_Z24Run_Extra_Plot_Operationv+0x8c>
   19632:	8b e1       	ldi	r24, 0x1B	; 27
   19634:	8c 9f       	mul	r24, r28
   19636:	f0 01       	movw	r30, r0
   19638:	8d 9f       	mul	r24, r29
   1963a:	f0 0d       	add	r31, r0
   1963c:	11 24       	eor	r1, r1
   1963e:	e8 51       	subi	r30, 0x18	; 24
   19640:	f2 4f       	sbci	r31, 0xF2	; 242
   19642:	81 e0       	ldi	r24, 0x01	; 1
   19644:	82 83       	std	Z+2, r24	; 0x02
   19646:	8c 2f       	mov	r24, r28
   19648:	e5 cf       	rjmp	.-54     	; 0x19614 <_Z24Run_Extra_Plot_Operationv+0xba>
   1964a:	89 2b       	or	r24, r25
   1964c:	69 f0       	breq	.+26     	; 0x19668 <_Z24Run_Extra_Plot_Operationv+0x10e>
   1964e:	f6 01       	movw	r30, r12
   19650:	80 81       	ld	r24, Z
   19652:	8f 5f       	subi	r24, 0xFF	; 255
   19654:	83 33       	cpi	r24, 0x33	; 51
   19656:	10 f4       	brcc	.+4      	; 0x1965c <_Z24Run_Extra_Plot_Operationv+0x102>
   19658:	80 83       	st	Z, r24
   1965a:	06 c0       	rjmp	.+12     	; 0x19668 <_Z24Run_Extra_Plot_Operationv+0x10e>
   1965c:	f6 01       	movw	r30, r12
   1965e:	10 82       	st	Z, r1
   19660:	81 e0       	ldi	r24, 0x01	; 1
   19662:	81 0f       	add	r24, r17
   19664:	0e 94 89 7a 	call	0xf512	; 0xf512 <_Z21Exra_Plot_Data_EEPROMh>
   19668:	13 30       	cpi	r17, 0x03	; 3
   1966a:	e9 f4       	brne	.+58     	; 0x196a6 <_Z24Run_Extra_Plot_Operationv+0x14c>
   1966c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   19670:	98 2f       	mov	r25, r24
   19672:	97 7f       	andi	r25, 0xF7	; 247
   19674:	91 30       	cpi	r25, 0x01	; 1
   19676:	29 f0       	breq	.+10     	; 0x19682 <_Z24Run_Extra_Plot_Operationv+0x128>
   19678:	84 30       	cpi	r24, 0x04	; 4
   1967a:	19 f0       	breq	.+6      	; 0x19682 <_Z24Run_Extra_Plot_Operationv+0x128>
   1967c:	8c 50       	subi	r24, 0x0C	; 12
   1967e:	82 30       	cpi	r24, 0x02	; 2
   19680:	90 f4       	brcc	.+36     	; 0x196a6 <_Z24Run_Extra_Plot_Operationv+0x14c>
   19682:	6f ea       	ldi	r22, 0xAF	; 175
   19684:	7f e2       	ldi	r23, 0x2F	; 47
   19686:	86 ec       	ldi	r24, 0xC6	; 198
   19688:	94 e1       	ldi	r25, 0x14	; 20
   1968a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1968e:	86 ec       	ldi	r24, 0xC6	; 198
   19690:	94 e1       	ldi	r25, 0x14	; 20
   19692:	d3 d7       	rcall	.+4006   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19694:	83 e0       	ldi	r24, 0x03	; 3
   19696:	df 91       	pop	r29
   19698:	cf 91       	pop	r28
   1969a:	1f 91       	pop	r17
   1969c:	ff 90       	pop	r15
   1969e:	ef 90       	pop	r14
   196a0:	df 90       	pop	r13
   196a2:	cf 90       	pop	r12
   196a4:	17 ce       	rjmp	.-978    	; 0x192d4 <_Z25Stop_Extra_Plot_Operationh>
   196a6:	21 96       	adiw	r28, 0x01	; 1
   196a8:	fb e1       	ldi	r31, 0x1B	; 27
   196aa:	ef 0e       	add	r14, r31
   196ac:	f1 1c       	adc	r15, r1
   196ae:	8f ef       	ldi	r24, 0xFF	; 255
   196b0:	c8 1a       	sub	r12, r24
   196b2:	d8 0a       	sbc	r13, r24
   196b4:	ce 30       	cpi	r28, 0x0E	; 14
   196b6:	d1 05       	cpc	r29, r1
   196b8:	09 f0       	breq	.+2      	; 0x196bc <_Z24Run_Extra_Plot_Operationv+0x162>
   196ba:	60 cf       	rjmp	.-320    	; 0x1957c <_Z24Run_Extra_Plot_Operationv+0x22>
   196bc:	df 91       	pop	r29
   196be:	cf 91       	pop	r28
   196c0:	1f 91       	pop	r17
   196c2:	ff 90       	pop	r15
   196c4:	ef 90       	pop	r14
   196c6:	df 90       	pop	r13
   196c8:	cf 90       	pop	r12
   196ca:	08 95       	ret

000196cc <_Z20Handle_Wireless_Pumpv>:
   196cc:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   196d0:	88 23       	and	r24, r24
   196d2:	09 f4       	brne	.+2      	; 0x196d6 <_Z20Handle_Wireless_Pumpv+0xa>
   196d4:	7d c0       	rjmp	.+250    	; 0x197d0 <_Z20Handle_Wireless_Pumpv+0x104>
   196d6:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   196da:	80 91 7d 14 	lds	r24, 0x147D	; 0x80147d <_sRuble_Parameters+0xcf>
   196de:	90 91 7e 14 	lds	r25, 0x147E	; 0x80147e <_sRuble_Parameters+0xd0>
   196e2:	21 11       	cpse	r18, r1
   196e4:	09 c0       	rjmp	.+18     	; 0x196f8 <_Z20Handle_Wireless_Pumpv+0x2c>
   196e6:	20 91 52 0e 	lds	r18, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   196ea:	21 11       	cpse	r18, r1
   196ec:	05 c0       	rjmp	.+10     	; 0x196f8 <_Z20Handle_Wireless_Pumpv+0x2c>
   196ee:	20 91 6d 0e 	lds	r18, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   196f2:	22 23       	and	r18, r18
   196f4:	09 f4       	brne	.+2      	; 0x196f8 <_Z20Handle_Wireless_Pumpv+0x2c>
   196f6:	40 c0       	rjmp	.+128    	; 0x19778 <_Z20Handle_Wireless_Pumpv+0xac>
   196f8:	89 2b       	or	r24, r25
   196fa:	09 f0       	breq	.+2      	; 0x196fe <_Z20Handle_Wireless_Pumpv+0x32>
   196fc:	69 c0       	rjmp	.+210    	; 0x197d0 <_Z20Handle_Wireless_Pumpv+0x104>
   196fe:	86 e9       	ldi	r24, 0x96	; 150
   19700:	90 e0       	ldi	r25, 0x00	; 0
   19702:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   19706:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   1970a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1970e:	81 30       	cpi	r24, 0x01	; 1
   19710:	49 f4       	brne	.+18     	; 0x19724 <_Z20Handle_Wireless_Pumpv+0x58>
   19712:	67 ef       	ldi	r22, 0xF7	; 247
   19714:	7c e2       	ldi	r23, 0x2C	; 44
   19716:	86 ec       	ldi	r24, 0xC6	; 198
   19718:	94 e1       	ldi	r25, 0x14	; 20
   1971a:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1971e:	86 ec       	ldi	r24, 0xC6	; 198
   19720:	94 e1       	ldi	r25, 0x14	; 20
   19722:	8b d7       	rcall	.+3862   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19724:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19728:	62 50       	subi	r22, 0x02	; 2
   1972a:	82 e0       	ldi	r24, 0x02	; 2
   1972c:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
   19730:	88 23       	and	r24, r24
   19732:	21 f0       	breq	.+8      	; 0x1973c <_Z20Handle_Wireless_Pumpv+0x70>
   19734:	81 e0       	ldi	r24, 0x01	; 1
   19736:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   1973a:	0e c0       	rjmp	.+28     	; 0x19758 <_Z20Handle_Wireless_Pumpv+0x8c>
   1973c:	86 e0       	ldi	r24, 0x06	; 6
   1973e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19742:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19746:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1974a:	90 68       	ori	r25, 0x80	; 128
   1974c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19750:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19754:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   19758:	6c e7       	ldi	r22, 0x7C	; 124
   1975a:	74 e1       	ldi	r23, 0x14	; 20
   1975c:	8d ea       	ldi	r24, 0xAD	; 173
   1975e:	9c e0       	ldi	r25, 0x0C	; 12
   19760:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19764:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19768:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1976c:	84 60       	ori	r24, 0x04	; 4
   1976e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19772:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19776:	08 95       	ret
   19778:	89 2b       	or	r24, r25
   1977a:	51 f5       	brne	.+84     	; 0x197d0 <_Z20Handle_Wireless_Pumpv+0x104>
   1977c:	88 e5       	ldi	r24, 0x58	; 88
   1977e:	92 e0       	ldi	r25, 0x02	; 2
   19780:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   19784:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   19788:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1978c:	81 30       	cpi	r24, 0x01	; 1
   1978e:	49 f4       	brne	.+18     	; 0x197a2 <_Z20Handle_Wireless_Pumpv+0xd6>
   19790:	68 ec       	ldi	r22, 0xC8	; 200
   19792:	7c e2       	ldi	r23, 0x2C	; 44
   19794:	86 ec       	ldi	r24, 0xC6	; 198
   19796:	94 e1       	ldi	r25, 0x14	; 20
   19798:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1979c:	86 ec       	ldi	r24, 0xC6	; 198
   1979e:	94 e1       	ldi	r25, 0x14	; 20
   197a0:	4c d7       	rcall	.+3736   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   197a2:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   197a6:	62 50       	subi	r22, 0x02	; 2
   197a8:	84 e0       	ldi	r24, 0x04	; 4
   197aa:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
   197ae:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   197b2:	6c e7       	ldi	r22, 0x7C	; 124
   197b4:	74 e1       	ldi	r23, 0x14	; 20
   197b6:	8d ea       	ldi	r24, 0xAD	; 173
   197b8:	9c e0       	ldi	r25, 0x0C	; 12
   197ba:	0e 94 d6 85 	call	0x10bac	; 0x10bac <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   197be:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   197c2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   197c6:	84 60       	ori	r24, 0x04	; 4
   197c8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   197cc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   197d0:	08 95       	ret

000197d2 <_Z24Pump_Status_List_Monitorv>:
   197d2:	0f 93       	push	r16
   197d4:	1f 93       	push	r17
   197d6:	cf 93       	push	r28
   197d8:	df 93       	push	r29
   197da:	80 91 d0 0d 	lds	r24, 0x0DD0	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   197de:	89 37       	cpi	r24, 0x79	; 121
   197e0:	08 f4       	brcc	.+2      	; 0x197e4 <_Z24Pump_Status_List_Monitorv+0x12>
   197e2:	4a c0       	rjmp	.+148    	; 0x19878 <_Z24Pump_Status_List_Monitorv+0xa6>
   197e4:	20 91 98 14 	lds	r18, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   197e8:	30 e0       	ldi	r19, 0x00	; 0
   197ea:	e3 e9       	ldi	r30, 0x93	; 147
   197ec:	f4 e1       	ldi	r31, 0x14	; 20
   197ee:	80 e0       	ldi	r24, 0x00	; 0
   197f0:	90 e0       	ldi	r25, 0x00	; 0
   197f2:	08 2f       	mov	r16, r24
   197f4:	ec 01       	movw	r28, r24
   197f6:	11 91       	ld	r17, Z+
   197f8:	01 96       	adiw	r24, 0x01	; 1
   197fa:	11 30       	cpi	r17, 0x01	; 1
   197fc:	c1 f5       	brne	.+112    	; 0x1986e <_Z24Pump_Status_List_Monitorv+0x9c>
   197fe:	28 17       	cp	r18, r24
   19800:	39 07       	cpc	r19, r25
   19802:	a9 f1       	breq	.+106    	; 0x1986e <_Z24Pump_Status_List_Monitorv+0x9c>
   19804:	10 92 d0 0d 	sts	0x0DD0, r1	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   19808:	01 11       	cpse	r16, r1
   1980a:	13 c0       	rjmp	.+38     	; 0x19832 <_Z24Pump_Status_List_Monitorv+0x60>
   1980c:	8a e0       	ldi	r24, 0x0A	; 10
   1980e:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   19812:	01 97       	sbiw	r24, 0x01	; 1
   19814:	21 f0       	breq	.+8      	; 0x1981e <_Z24Pump_Status_List_Monitorv+0x4c>
   19816:	61 e0       	ldi	r22, 0x01	; 1
   19818:	8a e0       	ldi	r24, 0x0A	; 10
   1981a:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   1981e:	8b e0       	ldi	r24, 0x0B	; 11
   19820:	0e 94 76 d8 	call	0x1b0ec	; 0x1b0ec <digitalRead>
   19824:	01 97       	sbiw	r24, 0x01	; 1
   19826:	c9 f0       	breq	.+50     	; 0x1985a <_Z24Pump_Status_List_Monitorv+0x88>
   19828:	61 e0       	ldi	r22, 0x01	; 1
   1982a:	8b e0       	ldi	r24, 0x0B	; 11
   1982c:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19830:	14 c0       	rjmp	.+40     	; 0x1985a <_Z24Pump_Status_List_Monitorv+0x88>
   19832:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19836:	81 30       	cpi	r24, 0x01	; 1
   19838:	49 f4       	brne	.+18     	; 0x1984c <_Z24Pump_Status_List_Monitorv+0x7a>
   1983a:	61 ef       	ldi	r22, 0xF1	; 241
   1983c:	78 e2       	ldi	r23, 0x28	; 40
   1983e:	86 ec       	ldi	r24, 0xC6	; 198
   19840:	94 e1       	ldi	r25, 0x14	; 20
   19842:	0e 94 ae d4 	call	0x1a95c	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19846:	86 ec       	ldi	r24, 0xC6	; 198
   19848:	94 e1       	ldi	r25, 0x14	; 20
   1984a:	f7 d6       	rcall	.+3566   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   1984c:	6f ef       	ldi	r22, 0xFF	; 255
   1984e:	60 0f       	add	r22, r16
   19850:	84 e0       	ldi	r24, 0x04	; 4
   19852:	0e 94 b8 bd 	call	0x17b70	; 0x17b70 <_Z20Wireless_Pump_On_Offhh>
   19856:	88 23       	and	r24, r24
   19858:	31 f0       	breq	.+12     	; 0x19866 <_Z24Pump_Status_List_Monitorv+0x94>
   1985a:	cd 56       	subi	r28, 0x6D	; 109
   1985c:	db 4e       	sbci	r29, 0xEB	; 235
   1985e:	18 82       	st	Y, r1
   19860:	0e 94 4f 86 	call	0x10c9e	; 0x10c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   19864:	0d c0       	rjmp	.+26     	; 0x19880 <_Z24Pump_Status_List_Monitorv+0xae>
   19866:	0e 94 4f 86 	call	0x10c9e	; 0x10c9e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   1986a:	10 e0       	ldi	r17, 0x00	; 0
   1986c:	09 c0       	rjmp	.+18     	; 0x19880 <_Z24Pump_Status_List_Monitorv+0xae>
   1986e:	84 30       	cpi	r24, 0x04	; 4
   19870:	91 05       	cpc	r25, r1
   19872:	09 f0       	breq	.+2      	; 0x19876 <_Z24Pump_Status_List_Monitorv+0xa4>
   19874:	be cf       	rjmp	.-132    	; 0x197f2 <_Z24Pump_Status_List_Monitorv+0x20>
   19876:	03 c0       	rjmp	.+6      	; 0x1987e <_Z24Pump_Status_List_Monitorv+0xac>
   19878:	8f 5f       	subi	r24, 0xFF	; 255
   1987a:	80 93 d0 0d 	sts	0x0DD0, r24	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   1987e:	01 c0       	rjmp	.+2      	; 0x19882 <_Z24Pump_Status_List_Monitorv+0xb0>
   19880:	81 2f       	mov	r24, r17
   19882:	df 91       	pop	r29
   19884:	cf 91       	pop	r28
   19886:	1f 91       	pop	r17
   19888:	0f 91       	pop	r16
   1988a:	08 95       	ret

0001988c <_Z24Plot_Status_List_Monitorv>:
   1988c:	2f 92       	push	r2
   1988e:	3f 92       	push	r3
   19890:	4f 92       	push	r4
   19892:	5f 92       	push	r5
   19894:	6f 92       	push	r6
   19896:	7f 92       	push	r7
   19898:	8f 92       	push	r8
   1989a:	9f 92       	push	r9
   1989c:	af 92       	push	r10
   1989e:	bf 92       	push	r11
   198a0:	cf 92       	push	r12
   198a2:	df 92       	push	r13
   198a4:	ef 92       	push	r14
   198a6:	ff 92       	push	r15
   198a8:	0f 93       	push	r16
   198aa:	1f 93       	push	r17
   198ac:	cf 93       	push	r28
   198ae:	df 93       	push	r29
   198b0:	cd b7       	in	r28, 0x3d	; 61
   198b2:	de b7       	in	r29, 0x3e	; 62
   198b4:	2b 97       	sbiw	r28, 0x0b	; 11
   198b6:	0f b6       	in	r0, 0x3f	; 63
   198b8:	f8 94       	cli
   198ba:	de bf       	out	0x3e, r29	; 62
   198bc:	0f be       	out	0x3f, r0	; 63
   198be:	cd bf       	out	0x3d, r28	; 61
   198c0:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   198c4:	88 23       	and	r24, r24
   198c6:	09 f4       	brne	.+2      	; 0x198ca <_Z24Plot_Status_List_Monitorv+0x3e>
   198c8:	71 c3       	rjmp	.+1762   	; 0x19fac <_Z24Plot_Status_List_Monitorv+0x720>
   198ca:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   198ce:	88 23       	and	r24, r24
   198d0:	49 f0       	breq	.+18     	; 0x198e4 <_Z24Plot_Status_List_Monitorv+0x58>
   198d2:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   198d6:	81 11       	cpse	r24, r1
   198d8:	05 c0       	rjmp	.+10     	; 0x198e4 <_Z24Plot_Status_List_Monitorv+0x58>
   198da:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   198de:	82 30       	cpi	r24, 0x02	; 2
   198e0:	09 f0       	breq	.+2      	; 0x198e4 <_Z24Plot_Status_List_Monitorv+0x58>
   198e2:	64 c3       	rjmp	.+1736   	; 0x19fac <_Z24Plot_Status_List_Monitorv+0x720>
   198e4:	ef e7       	ldi	r30, 0x7F	; 127
   198e6:	f4 e1       	ldi	r31, 0x14	; 20
   198e8:	e1 2c       	mov	r14, r1
   198ea:	f1 2c       	mov	r15, r1
   198ec:	de 2c       	mov	r13, r14
   198ee:	c1 90       	ld	r12, Z+
   198f0:	21 e0       	ldi	r18, 0x01	; 1
   198f2:	c2 12       	cpse	r12, r18
   198f4:	53 c3       	rjmp	.+1702   	; 0x19f9c <_Z24Plot_Status_List_Monitorv+0x710>
   198f6:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   198fa:	82 2f       	mov	r24, r18
   198fc:	90 e0       	ldi	r25, 0x00	; 0
   198fe:	01 97       	sbiw	r24, 0x01	; 1
   19900:	e8 16       	cp	r14, r24
   19902:	f9 06       	cpc	r15, r25
   19904:	09 f4       	brne	.+2      	; 0x19908 <_Z24Plot_Status_List_Monitorv+0x7c>
   19906:	53 c3       	rjmp	.+1702   	; 0x19fae <_Z24Plot_Status_List_Monitorv+0x722>
   19908:	8e 01       	movw	r16, r28
   1990a:	0f 5f       	subi	r16, 0xFF	; 255
   1990c:	1f 4f       	sbci	r17, 0xFF	; 255
   1990e:	22 23       	and	r18, r18
   19910:	09 f4       	brne	.+2      	; 0x19914 <_Z24Plot_Status_List_Monitorv+0x88>
   19912:	4a c0       	rjmp	.+148    	; 0x199a8 <_Z24Plot_Status_List_Monitorv+0x11c>
   19914:	25 e0       	ldi	r18, 0x05	; 5
   19916:	d8 01       	movw	r26, r16
   19918:	1d 92       	st	X+, r1
   1991a:	2a 95       	dec	r18
   1991c:	e9 f7       	brne	.-6      	; 0x19918 <_Z24Plot_Status_List_Monitorv+0x8c>
   1991e:	26 e0       	ldi	r18, 0x06	; 6
   19920:	2e 9d       	mul	r18, r14
   19922:	b0 01       	movw	r22, r0
   19924:	2f 9d       	mul	r18, r15
   19926:	70 0d       	add	r23, r0
   19928:	11 24       	eor	r1, r1
   1992a:	28 9f       	mul	r18, r24
   1992c:	f0 01       	movw	r30, r0
   1992e:	29 9f       	mul	r18, r25
   19930:	f0 0d       	add	r31, r0
   19932:	11 24       	eor	r1, r1
   19934:	80 e0       	ldi	r24, 0x00	; 0
   19936:	90 e0       	ldi	r25, 0x00	; 0
   19938:	40 e0       	ldi	r20, 0x00	; 0
   1993a:	db 01       	movw	r26, r22
   1993c:	a8 0f       	add	r26, r24
   1993e:	b9 1f       	adc	r27, r25
   19940:	a2 5b       	subi	r26, 0xB2	; 178
   19942:	b2 4f       	sbci	r27, 0xF2	; 242
   19944:	11 96       	adiw	r26, 0x01	; 1
   19946:	5c 91       	ld	r21, X
   19948:	20 e0       	ldi	r18, 0x00	; 0
   1994a:	30 e0       	ldi	r19, 0x00	; 0
   1994c:	b1 2c       	mov	r11, r1
   1994e:	d9 01       	movw	r26, r18
   19950:	ae 0f       	add	r26, r30
   19952:	bf 1f       	adc	r27, r31
   19954:	a2 5b       	subi	r26, 0xB2	; 178
   19956:	b2 4f       	sbci	r27, 0xF2	; 242
   19958:	11 96       	adiw	r26, 0x01	; 1
   1995a:	ac 91       	ld	r26, X
   1995c:	5a 13       	cpse	r21, r26
   1995e:	02 c0       	rjmp	.+4      	; 0x19964 <_Z24Plot_Status_List_Monitorv+0xd8>
   19960:	bb 24       	eor	r11, r11
   19962:	b3 94       	inc	r11
   19964:	2f 5f       	subi	r18, 0xFF	; 255
   19966:	3f 4f       	sbci	r19, 0xFF	; 255
   19968:	25 30       	cpi	r18, 0x05	; 5
   1996a:	31 05       	cpc	r19, r1
   1996c:	81 f7       	brne	.-32     	; 0x1994e <_Z24Plot_Status_List_Monitorv+0xc2>
   1996e:	b1 10       	cpse	r11, r1
   19970:	05 c0       	rjmp	.+10     	; 0x1997c <_Z24Plot_Status_List_Monitorv+0xf0>
   19972:	d8 01       	movw	r26, r16
   19974:	a4 0f       	add	r26, r20
   19976:	b1 1d       	adc	r27, r1
   19978:	5c 93       	st	X, r21
   1997a:	4f 5f       	subi	r20, 0xFF	; 255
   1997c:	01 96       	adiw	r24, 0x01	; 1
   1997e:	85 30       	cpi	r24, 0x05	; 5
   19980:	91 05       	cpc	r25, r1
   19982:	d9 f6       	brne	.-74     	; 0x1993a <_Z24Plot_Status_List_Monitorv+0xae>
   19984:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19988:	fe 01       	movw	r30, r28
   1998a:	36 96       	adiw	r30, 0x06	; 6
   1998c:	5f 01       	movw	r10, r30
   1998e:	81 30       	cpi	r24, 0x01	; 1
   19990:	09 f0       	breq	.+2      	; 0x19994 <_Z24Plot_Status_List_Monitorv+0x108>
   19992:	3f c0       	rjmp	.+126    	; 0x19a12 <_Z24Plot_Status_List_Monitorv+0x186>
   19994:	61 e8       	ldi	r22, 0x81	; 129
   19996:	7a e2       	ldi	r23, 0x2A	; 42
   19998:	86 ec       	ldi	r24, 0xC6	; 198
   1999a:	94 e1       	ldi	r25, 0x14	; 20
   1999c:	df d7       	rcall	.+4030   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   1999e:	86 ec       	ldi	r24, 0xC6	; 198
   199a0:	94 e1       	ldi	r25, 0x14	; 20
   199a2:	4b d6       	rcall	.+3222   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   199a4:	48 01       	movw	r8, r16
   199a6:	15 c0       	rjmp	.+42     	; 0x199d2 <_Z24Plot_Status_List_Monitorv+0x146>
   199a8:	d8 01       	movw	r26, r16
   199aa:	86 e0       	ldi	r24, 0x06	; 6
   199ac:	8e 9d       	mul	r24, r14
   199ae:	a0 01       	movw	r20, r0
   199b0:	8f 9d       	mul	r24, r15
   199b2:	50 0d       	add	r21, r0
   199b4:	11 24       	eor	r1, r1
   199b6:	80 e0       	ldi	r24, 0x00	; 0
   199b8:	90 e0       	ldi	r25, 0x00	; 0
   199ba:	fa 01       	movw	r30, r20
   199bc:	e8 0f       	add	r30, r24
   199be:	f9 1f       	adc	r31, r25
   199c0:	e2 5b       	subi	r30, 0xB2	; 178
   199c2:	f2 4f       	sbci	r31, 0xF2	; 242
   199c4:	21 81       	ldd	r18, Z+1	; 0x01
   199c6:	2d 93       	st	X+, r18
   199c8:	01 96       	adiw	r24, 0x01	; 1
   199ca:	85 30       	cpi	r24, 0x05	; 5
   199cc:	91 05       	cpc	r25, r1
   199ce:	a9 f7       	brne	.-22     	; 0x199ba <_Z24Plot_Status_List_Monitorv+0x12e>
   199d0:	d9 cf       	rjmp	.-78     	; 0x19984 <_Z24Plot_Status_List_Monitorv+0xf8>
   199d2:	d4 01       	movw	r26, r8
   199d4:	6d 91       	ld	r22, X+
   199d6:	4d 01       	movw	r8, r26
   199d8:	4a e0       	ldi	r20, 0x0A	; 10
   199da:	50 e0       	ldi	r21, 0x00	; 0
   199dc:	86 ec       	ldi	r24, 0xC6	; 198
   199de:	94 e1       	ldi	r25, 0x14	; 20
   199e0:	0e 94 24 d5 	call	0x1aa48	; 0x1aa48 <_ZN5Print5printEhi>
   199e4:	6f e7       	ldi	r22, 0x7F	; 127
   199e6:	7a e2       	ldi	r23, 0x2A	; 42
   199e8:	86 ec       	ldi	r24, 0xC6	; 198
   199ea:	94 e1       	ldi	r25, 0x14	; 20
   199ec:	86 d7       	rcall	.+3852   	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   199ee:	a8 14       	cp	r10, r8
   199f0:	b9 04       	cpc	r11, r9
   199f2:	79 f7       	brne	.-34     	; 0x199d2 <_Z24Plot_Status_List_Monitorv+0x146>
   199f4:	6f e6       	ldi	r22, 0x6F	; 111
   199f6:	7a e2       	ldi	r23, 0x2A	; 42
   199f8:	86 ec       	ldi	r24, 0xC6	; 198
   199fa:	94 e1       	ldi	r25, 0x14	; 20
   199fc:	7e d7       	rcall	.+3836   	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   199fe:	4a e0       	ldi	r20, 0x0A	; 10
   19a00:	50 e0       	ldi	r21, 0x00	; 0
   19a02:	6d 2d       	mov	r22, r13
   19a04:	86 ec       	ldi	r24, 0xC6	; 198
   19a06:	94 e1       	ldi	r25, 0x14	; 20
   19a08:	0e 94 2a d5 	call	0x1aa54	; 0x1aa54 <_ZN5Print7printlnEhi>
   19a0c:	86 ec       	ldi	r24, 0xC6	; 198
   19a0e:	94 e1       	ldi	r25, 0x14	; 20
   19a10:	14 d6       	rcall	.+3112   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19a12:	28 01       	movw	r4, r16
   19a14:	d1 2c       	mov	r13, r1
   19a16:	ad e0       	ldi	r26, 0x0D	; 13
   19a18:	9a 2e       	mov	r9, r26
   19a1a:	b0 ed       	ldi	r27, 0xD0	; 208
   19a1c:	2b 2e       	mov	r2, r27
   19a1e:	bf e0       	ldi	r27, 0x0F	; 15
   19a20:	3b 2e       	mov	r3, r27
   19a22:	f2 01       	movw	r30, r4
   19a24:	71 90       	ld	r7, Z+
   19a26:	2f 01       	movw	r4, r30
   19a28:	8f ef       	ldi	r24, 0xFF	; 255
   19a2a:	87 0d       	add	r24, r7
   19a2c:	82 31       	cpi	r24, 0x12	; 18
   19a2e:	08 f0       	brcs	.+2      	; 0x19a32 <_Z24Plot_Status_List_Monitorv+0x1a6>
   19a30:	8d c2       	rjmp	.+1306   	; 0x19f4c <_Z24Plot_Status_List_Monitorv+0x6c0>
   19a32:	f3 e0       	ldi	r31, 0x03	; 3
   19a34:	f7 15       	cp	r31, r7
   19a36:	90 f4       	brcc	.+36     	; 0x19a5c <_Z24Plot_Status_List_Monitorv+0x1d0>
   19a38:	2b ea       	ldi	r18, 0xAB	; 171
   19a3a:	72 9e       	mul	r7, r18
   19a3c:	81 2c       	mov	r8, r1
   19a3e:	11 24       	eor	r1, r1
   19a40:	88 2d       	mov	r24, r8
   19a42:	86 95       	lsr	r24
   19a44:	98 2f       	mov	r25, r24
   19a46:	99 0f       	add	r25, r25
   19a48:	89 0f       	add	r24, r25
   19a4a:	78 1a       	sub	r7, r24
   19a4c:	86 94       	lsr	r8
   19a4e:	77 20       	and	r7, r7
   19a50:	11 f0       	breq	.+4      	; 0x19a56 <_Z24Plot_Status_List_Monitorv+0x1ca>
   19a52:	83 94       	inc	r8
   19a54:	05 c0       	rjmp	.+10     	; 0x19a60 <_Z24Plot_Status_List_Monitorv+0x1d4>
   19a56:	f3 e0       	ldi	r31, 0x03	; 3
   19a58:	7f 2e       	mov	r7, r31
   19a5a:	02 c0       	rjmp	.+4      	; 0x19a60 <_Z24Plot_Status_List_Monitorv+0x1d4>
   19a5c:	88 24       	eor	r8, r8
   19a5e:	83 94       	inc	r8
   19a60:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19a64:	81 30       	cpi	r24, 0x01	; 1
   19a66:	71 f4       	brne	.+28     	; 0x19a84 <_Z24Plot_Status_List_Monitorv+0x1f8>
   19a68:	6b e5       	ldi	r22, 0x5B	; 91
   19a6a:	7a e2       	ldi	r23, 0x2A	; 42
   19a6c:	86 ec       	ldi	r24, 0xC6	; 198
   19a6e:	94 e1       	ldi	r25, 0x14	; 20
   19a70:	44 d7       	rcall	.+3720   	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   19a72:	4a e0       	ldi	r20, 0x0A	; 10
   19a74:	50 e0       	ldi	r21, 0x00	; 0
   19a76:	68 2d       	mov	r22, r8
   19a78:	86 ec       	ldi	r24, 0xC6	; 198
   19a7a:	94 e1       	ldi	r25, 0x14	; 20
   19a7c:	eb d7       	rcall	.+4054   	; 0x1aa54 <_ZN5Print7printlnEhi>
   19a7e:	86 ec       	ldi	r24, 0xC6	; 198
   19a80:	94 e1       	ldi	r25, 0x14	; 20
   19a82:	db d5       	rcall	.+2998   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19a84:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   19a88:	81 11       	cpse	r24, r1
   19a8a:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   19a8e:	a5 ef       	ldi	r26, 0xF5	; 245
   19a90:	b3 e1       	ldi	r27, 0x13	; 19
   19a92:	e4 e1       	ldi	r30, 0x14	; 20
   19a94:	1d 92       	st	X+, r1
   19a96:	ea 95       	dec	r30
   19a98:	e9 f7       	brne	.-6      	; 0x19a94 <_Z24Plot_Status_List_Monitorv+0x208>
   19a9a:	88 2d       	mov	r24, r8
   19a9c:	90 e0       	ldi	r25, 0x00	; 0
   19a9e:	01 97       	sbiw	r24, 0x01	; 1
   19aa0:	f7 e0       	ldi	r31, 0x07	; 7
   19aa2:	f8 9f       	mul	r31, r24
   19aa4:	90 01       	movw	r18, r0
   19aa6:	f9 9f       	mul	r31, r25
   19aa8:	30 0d       	add	r19, r0
   19aaa:	11 24       	eor	r1, r1
   19aac:	22 55       	subi	r18, 0x52	; 82
   19aae:	3c 4e       	sbci	r19, 0xEC	; 236
   19ab0:	f9 01       	movw	r30, r18
   19ab2:	ec 58       	subi	r30, 0x8C	; 140
   19ab4:	ff 4f       	sbci	r31, 0xFF	; 255
   19ab6:	80 81       	ld	r24, Z
   19ab8:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   19abc:	31 96       	adiw	r30, 0x01	; 1
   19abe:	80 81       	ld	r24, Z
   19ac0:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   19ac4:	31 96       	adiw	r30, 0x01	; 1
   19ac6:	80 81       	ld	r24, Z
   19ac8:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   19acc:	31 96       	adiw	r30, 0x01	; 1
   19ace:	80 81       	ld	r24, Z
   19ad0:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   19ad4:	31 96       	adiw	r30, 0x01	; 1
   19ad6:	80 81       	ld	r24, Z
   19ad8:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   19adc:	31 96       	adiw	r30, 0x01	; 1
   19ade:	80 81       	ld	r24, Z
   19ae0:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   19ae4:	42 e0       	ldi	r20, 0x02	; 2
   19ae6:	40 93 fb 13 	sts	0x13FB, r20	; 0x8013fb <_sRuble_Parameters+0x4d>
   19aea:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   19aee:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   19af2:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   19af6:	80 93 ff 13 	sts	0x13FF, r24	; 0x8013ff <_sRuble_Parameters+0x51>
   19afa:	70 92 00 14 	sts	0x1400, r7	; 0x801400 <_sRuble_Parameters+0x52>
   19afe:	40 e0       	ldi	r20, 0x00	; 0
   19b00:	50 e0       	ldi	r21, 0x00	; 0
   19b02:	64 2e       	mov	r6, r20
   19b04:	81 2c       	mov	r8, r1
   19b06:	71 2c       	mov	r7, r1
   19b08:	94 9e       	mul	r9, r20
   19b0a:	b0 01       	movw	r22, r0
   19b0c:	95 9e       	mul	r9, r21
   19b0e:	70 0d       	add	r23, r0
   19b10:	11 24       	eor	r1, r1
   19b12:	6b 5e       	subi	r22, 0xEB	; 235
   19b14:	73 4f       	sbci	r23, 0xF3	; 243
   19b16:	88 2d       	mov	r24, r8
   19b18:	90 e0       	ldi	r25, 0x00	; 0
   19b1a:	fb 01       	movw	r30, r22
   19b1c:	e8 0f       	add	r30, r24
   19b1e:	f9 1f       	adc	r31, r25
   19b20:	82 0f       	add	r24, r18
   19b22:	93 1f       	adc	r25, r19
   19b24:	dc 01       	movw	r26, r24
   19b26:	ac 58       	subi	r26, 0x8C	; 140
   19b28:	bf 4f       	sbci	r27, 0xFF	; 255
   19b2a:	81 81       	ldd	r24, Z+1	; 0x01
   19b2c:	9c 91       	ld	r25, X
   19b2e:	89 17       	cp	r24, r25
   19b30:	19 f0       	breq	.+6      	; 0x19b38 <_Z24Plot_Status_List_Monitorv+0x2ac>
   19b32:	e6 e0       	ldi	r30, 0x06	; 6
   19b34:	8e 2e       	mov	r8, r30
   19b36:	71 2c       	mov	r7, r1
   19b38:	73 94       	inc	r7
   19b3a:	83 94       	inc	r8
   19b3c:	85 e0       	ldi	r24, 0x05	; 5
   19b3e:	88 15       	cp	r24, r8
   19b40:	50 f7       	brcc	.-44     	; 0x19b16 <_Z24Plot_Status_List_Monitorv+0x28a>
   19b42:	a6 e0       	ldi	r26, 0x06	; 6
   19b44:	7a 16       	cp	r7, r26
   19b46:	31 f0       	breq	.+12     	; 0x19b54 <_Z24Plot_Status_List_Monitorv+0x2c8>
   19b48:	4f 5f       	subi	r20, 0xFF	; 255
   19b4a:	5f 4f       	sbci	r21, 0xFF	; 255
   19b4c:	46 30       	cpi	r20, 0x06	; 6
   19b4e:	51 05       	cpc	r21, r1
   19b50:	c1 f6       	brne	.-80     	; 0x19b02 <_Z24Plot_Status_List_Monitorv+0x276>
   19b52:	01 c0       	rjmp	.+2      	; 0x19b56 <_Z24Plot_Status_List_Monitorv+0x2ca>
   19b54:	d6 2c       	mov	r13, r6
   19b56:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19b5a:	81 30       	cpi	r24, 0x01	; 1
   19b5c:	71 f4       	brne	.+28     	; 0x19b7a <_Z24Plot_Status_List_Monitorv+0x2ee>
   19b5e:	65 e4       	ldi	r22, 0x45	; 69
   19b60:	7a e2       	ldi	r23, 0x2A	; 42
   19b62:	86 ec       	ldi	r24, 0xC6	; 198
   19b64:	94 e1       	ldi	r25, 0x14	; 20
   19b66:	c9 d6       	rcall	.+3474   	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   19b68:	4a e0       	ldi	r20, 0x0A	; 10
   19b6a:	50 e0       	ldi	r21, 0x00	; 0
   19b6c:	6d 2d       	mov	r22, r13
   19b6e:	86 ec       	ldi	r24, 0xC6	; 198
   19b70:	94 e1       	ldi	r25, 0x14	; 20
   19b72:	6a d7       	rcall	.+3796   	; 0x1aa48 <_ZN5Print5printEhi>
   19b74:	86 ec       	ldi	r24, 0xC6	; 198
   19b76:	94 e1       	ldi	r25, 0x14	; 20
   19b78:	60 d5       	rcall	.+2752   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19b7a:	bd e0       	ldi	r27, 0x0D	; 13
   19b7c:	db 9e       	mul	r13, r27
   19b7e:	30 01       	movw	r6, r0
   19b80:	11 24       	eor	r1, r1
   19b82:	81 2c       	mov	r8, r1
   19b84:	9d 9c       	mul	r9, r13
   19b86:	c0 01       	movw	r24, r0
   19b88:	11 24       	eor	r1, r1
   19b8a:	9c 01       	movw	r18, r24
   19b8c:	2b 5e       	subi	r18, 0xEB	; 235
   19b8e:	33 4f       	sbci	r19, 0xF3	; 243
   19b90:	f9 01       	movw	r30, r18
   19b92:	3b 96       	adiw	r30, 0x0b	; 11
   19b94:	ff 83       	std	Y+7, r31	; 0x07
   19b96:	ee 83       	std	Y+6, r30	; 0x06
   19b98:	a9 01       	movw	r20, r18
   19b9a:	48 5f       	subi	r20, 0xF8	; 248
   19b9c:	5f 4f       	sbci	r21, 0xFF	; 255
   19b9e:	59 87       	std	Y+9, r21	; 0x09
   19ba0:	48 87       	std	Y+8, r20	; 0x08
   19ba2:	dc 01       	movw	r26, r24
   19ba4:	aa 5e       	subi	r26, 0xEA	; 234
   19ba6:	b3 4f       	sbci	r27, 0xF3	; 243
   19ba8:	bb 87       	std	Y+11, r27	; 0x0b
   19baa:	aa 87       	std	Y+10, r26	; 0x0a
   19bac:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   19bb0:	88 23       	and	r24, r24
   19bb2:	99 f0       	breq	.+38     	; 0x19bda <_Z24Plot_Status_List_Monitorv+0x34e>
   19bb4:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   19bb8:	88 23       	and	r24, r24
   19bba:	79 f0       	breq	.+30     	; 0x19bda <_Z24Plot_Status_List_Monitorv+0x34e>
   19bbc:	f1 01       	movw	r30, r2
   19bbe:	01 90       	ld	r0, Z+
   19bc0:	00 20       	and	r0, r0
   19bc2:	e9 f7       	brne	.-6      	; 0x19bbe <_Z24Plot_Status_List_Monitorv+0x332>
   19bc4:	31 97       	sbiw	r30, 0x01	; 1
   19bc6:	af 01       	movw	r20, r30
   19bc8:	40 5d       	subi	r20, 0xD0	; 208
   19bca:	5f 40       	sbci	r21, 0x0F	; 15
   19bcc:	21 e0       	ldi	r18, 0x01	; 1
   19bce:	60 ed       	ldi	r22, 0xD0	; 208
   19bd0:	7f e0       	ldi	r23, 0x0F	; 15
   19bd2:	82 e6       	ldi	r24, 0x62	; 98
   19bd4:	9f e0       	ldi	r25, 0x0F	; 15
   19bd6:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   19bda:	83 94       	inc	r8
   19bdc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19be0:	81 30       	cpi	r24, 0x01	; 1
   19be2:	41 f4       	brne	.+16     	; 0x19bf4 <_Z24Plot_Status_List_Monitorv+0x368>
   19be4:	61 e2       	ldi	r22, 0x21	; 33
   19be6:	7a e2       	ldi	r23, 0x2A	; 42
   19be8:	86 ec       	ldi	r24, 0xC6	; 198
   19bea:	94 e1       	ldi	r25, 0x14	; 20
   19bec:	b7 d6       	rcall	.+3438   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19bee:	86 ec       	ldi	r24, 0xC6	; 198
   19bf0:	94 e1       	ldi	r25, 0x14	; 20
   19bf2:	23 d5       	rcall	.+2630   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19bf4:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <_Z16Display_Update_1v>
   19bf8:	8c e0       	ldi	r24, 0x0C	; 12
   19bfa:	0e 94 fe 67 	call	0xcffc	; 0xcffc <_Z14Lora_Data_Sendh>
   19bfe:	88 eb       	ldi	r24, 0xB8	; 184
   19c00:	9b e0       	ldi	r25, 0x0B	; 11
   19c02:	0e 94 12 66 	call	0xcc24	; 0xcc24 <_Z20Check_Data_Availablej>
   19c06:	88 23       	and	r24, r24
   19c08:	09 f4       	brne	.+2      	; 0x19c0c <_Z24Plot_Status_List_Monitorv+0x380>
   19c0a:	4e c1       	rjmp	.+668    	; 0x19ea8 <_Z24Plot_Status_List_Monitorv+0x61c>
   19c0c:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   19c10:	88 23       	and	r24, r24
   19c12:	09 f4       	brne	.+2      	; 0x19c16 <_Z24Plot_Status_List_Monitorv+0x38a>
   19c14:	00 c1       	rjmp	.+512    	; 0x19e16 <_Z24Plot_Status_List_Monitorv+0x58a>
   19c16:	0e 94 e1 72 	call	0xe5c2	; 0xe5c2 <_Z21Subscribed_data_checkv>
   19c1a:	88 23       	and	r24, r24
   19c1c:	99 f0       	breq	.+38     	; 0x19c44 <_Z24Plot_Status_List_Monitorv+0x3b8>
   19c1e:	0e 94 17 66 	call	0xcc2e	; 0xcc2e <_Z21Seperate_Out_Sub_Datav>
   19c22:	88 23       	and	r24, r24
   19c24:	79 f0       	breq	.+30     	; 0x19c44 <_Z24Plot_Status_List_Monitorv+0x3b8>
   19c26:	f1 01       	movw	r30, r2
   19c28:	01 90       	ld	r0, Z+
   19c2a:	00 20       	and	r0, r0
   19c2c:	e9 f7       	brne	.-6      	; 0x19c28 <_Z24Plot_Status_List_Monitorv+0x39c>
   19c2e:	31 97       	sbiw	r30, 0x01	; 1
   19c30:	af 01       	movw	r20, r30
   19c32:	40 5d       	subi	r20, 0xD0	; 208
   19c34:	5f 40       	sbci	r21, 0x0F	; 15
   19c36:	21 e0       	ldi	r18, 0x01	; 1
   19c38:	60 ed       	ldi	r22, 0xD0	; 208
   19c3a:	7f e0       	ldi	r23, 0x0F	; 15
   19c3c:	82 e6       	ldi	r24, 0x62	; 98
   19c3e:	9f e0       	ldi	r25, 0x0F	; 15
   19c40:	0e 94 3e 93 	call	0x1267c	; 0x1267c <_Z12Pub_Sub_DataPcPhjh>
   19c44:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19c48:	81 30       	cpi	r24, 0x01	; 1
   19c4a:	29 f5       	brne	.+74     	; 0x19c96 <_Z24Plot_Status_List_Monitorv+0x40a>
   19c4c:	6b e0       	ldi	r22, 0x0B	; 11
   19c4e:	7a e2       	ldi	r23, 0x2A	; 42
   19c50:	86 ec       	ldi	r24, 0xC6	; 198
   19c52:	94 e1       	ldi	r25, 0x14	; 20
   19c54:	52 d6       	rcall	.+3236   	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   19c56:	4a e0       	ldi	r20, 0x0A	; 10
   19c58:	50 e0       	ldi	r21, 0x00	; 0
   19c5a:	69 e0       	ldi	r22, 0x09	; 9
   19c5c:	74 e1       	ldi	r23, 0x14	; 20
   19c5e:	86 ec       	ldi	r24, 0xC6	; 198
   19c60:	94 e1       	ldi	r25, 0x14	; 20
   19c62:	0e 94 c1 23 	call	0x4782	; 0x4782 <_ZN5Print5writeEPKcj>
   19c66:	86 ec       	ldi	r24, 0xC6	; 198
   19c68:	94 e1       	ldi	r25, 0x14	; 20
   19c6a:	74 d6       	rcall	.+3304   	; 0x1a954 <_ZN5Print7printlnEv>
   19c6c:	86 ec       	ldi	r24, 0xC6	; 198
   19c6e:	94 e1       	ldi	r25, 0x14	; 20
   19c70:	e4 d4       	rcall	.+2504   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19c72:	6d ee       	ldi	r22, 0xED	; 237
   19c74:	79 e2       	ldi	r23, 0x29	; 41
   19c76:	86 ec       	ldi	r24, 0xC6	; 198
   19c78:	94 e1       	ldi	r25, 0x14	; 20
   19c7a:	3f d6       	rcall	.+3198   	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   19c7c:	47 e0       	ldi	r20, 0x07	; 7
   19c7e:	50 e0       	ldi	r21, 0x00	; 0
   19c80:	6a 85       	ldd	r22, Y+10	; 0x0a
   19c82:	7b 85       	ldd	r23, Y+11	; 0x0b
   19c84:	86 ec       	ldi	r24, 0xC6	; 198
   19c86:	94 e1       	ldi	r25, 0x14	; 20
   19c88:	0e d6       	rcall	.+3100   	; 0x1a8a6 <_ZN5Print5writeEPKhj>
   19c8a:	86 ec       	ldi	r24, 0xC6	; 198
   19c8c:	94 e1       	ldi	r25, 0x14	; 20
   19c8e:	62 d6       	rcall	.+3268   	; 0x1a954 <_ZN5Print7printlnEv>
   19c90:	86 ec       	ldi	r24, 0xC6	; 198
   19c92:	94 e1       	ldi	r25, 0x14	; 20
   19c94:	d2 d4       	rcall	.+2468   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19c96:	a9 e0       	ldi	r26, 0x09	; 9
   19c98:	b4 e1       	ldi	r27, 0x14	; 20
   19c9a:	80 e0       	ldi	r24, 0x00	; 0
   19c9c:	90 e0       	ldi	r25, 0x00	; 0
   19c9e:	2d 91       	ld	r18, X+
   19ca0:	f3 01       	movw	r30, r6
   19ca2:	e8 0f       	add	r30, r24
   19ca4:	f9 1f       	adc	r31, r25
   19ca6:	eb 5e       	subi	r30, 0xEB	; 235
   19ca8:	f3 4f       	sbci	r31, 0xF3	; 243
   19caa:	31 81       	ldd	r19, Z+1	; 0x01
   19cac:	32 17       	cp	r19, r18
   19cae:	09 f4       	brne	.+2      	; 0x19cb2 <_Z24Plot_Status_List_Monitorv+0x426>
   19cb0:	62 c0       	rjmp	.+196    	; 0x19d76 <_Z24Plot_Status_List_Monitorv+0x4ea>
   19cb2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19cb6:	81 30       	cpi	r24, 0x01	; 1
   19cb8:	41 f4       	brne	.+16     	; 0x19cca <_Z24Plot_Status_List_Monitorv+0x43e>
   19cba:	62 ec       	ldi	r22, 0xC2	; 194
   19cbc:	79 e2       	ldi	r23, 0x29	; 41
   19cbe:	86 ec       	ldi	r24, 0xC6	; 198
   19cc0:	94 e1       	ldi	r25, 0x14	; 20
   19cc2:	4c d6       	rcall	.+3224   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19cc4:	86 ec       	ldi	r24, 0xC6	; 198
   19cc6:	94 e1       	ldi	r25, 0x14	; 20
   19cc8:	b8 d4       	rcall	.+2416   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19cca:	b2 e0       	ldi	r27, 0x02	; 2
   19ccc:	8b 16       	cp	r8, r27
   19cce:	b9 f0       	breq	.+46     	; 0x19cfe <_Z24Plot_Status_List_Monitorv+0x472>
   19cd0:	81 e0       	ldi	r24, 0x01	; 1
   19cd2:	ee 81       	ldd	r30, Y+6	; 0x06
   19cd4:	ff 81       	ldd	r31, Y+7	; 0x07
   19cd6:	80 83       	st	Z, r24
   19cd8:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   19cdc:	90 e0       	ldi	r25, 0x00	; 0
   19cde:	98 2f       	mov	r25, r24
   19ce0:	88 27       	eor	r24, r24
   19ce2:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   19ce6:	82 2b       	or	r24, r18
   19ce8:	a8 85       	ldd	r26, Y+8	; 0x08
   19cea:	b9 85       	ldd	r27, Y+9	; 0x09
   19cec:	8d 93       	st	X+, r24
   19cee:	9c 93       	st	X, r25
   19cf0:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   19cf4:	81 11       	cpse	r24, r1
   19cf6:	45 c0       	rjmp	.+138    	; 0x19d82 <_Z24Plot_Status_List_Monitorv+0x4f6>
   19cf8:	83 e0       	ldi	r24, 0x03	; 3
   19cfa:	88 2e       	mov	r8, r24
   19cfc:	1e c1       	rjmp	.+572    	; 0x19f3a <_Z24Plot_Status_List_Monitorv+0x6ae>
   19cfe:	86 e0       	ldi	r24, 0x06	; 6
   19d00:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19d04:	84 e6       	ldi	r24, 0x64	; 100
   19d06:	90 e0       	ldi	r25, 0x00	; 0
   19d08:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19d0c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19d10:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19d14:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19d18:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19d1c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19d20:	a0 62       	ori	r26, 0x20	; 32
   19d22:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19d26:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19d2a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19d2e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19d32:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19d36:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19d3a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19d3e:	82 60       	ori	r24, 0x02	; 2
   19d40:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19d44:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19d48:	d8 01       	movw	r26, r16
   19d4a:	ed 91       	ld	r30, X+
   19d4c:	8d 01       	movw	r16, r26
   19d4e:	e3 31       	cpi	r30, 0x13	; 19
   19d50:	68 f0       	brcs	.+26     	; 0x19d6c <_Z24Plot_Status_List_Monitorv+0x4e0>
   19d52:	f0 e0       	ldi	r31, 0x00	; 0
   19d54:	e7 5c       	subi	r30, 0xC7	; 199
   19d56:	fb 4e       	sbci	r31, 0xEB	; 235
   19d58:	61 e0       	ldi	r22, 0x01	; 1
   19d5a:	80 81       	ld	r24, Z
   19d5c:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19d60:	68 ec       	ldi	r22, 0xC8	; 200
   19d62:	70 e0       	ldi	r23, 0x00	; 0
   19d64:	80 e0       	ldi	r24, 0x00	; 0
   19d66:	90 e0       	ldi	r25, 0x00	; 0
   19d68:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   19d6c:	a0 16       	cp	r10, r16
   19d6e:	b1 06       	cpc	r11, r17
   19d70:	59 f7       	brne	.-42     	; 0x19d48 <_Z24Plot_Status_List_Monitorv+0x4bc>
   19d72:	c1 2c       	mov	r12, r1
   19d74:	1c c1       	rjmp	.+568    	; 0x19fae <_Z24Plot_Status_List_Monitorv+0x722>
   19d76:	01 96       	adiw	r24, 0x01	; 1
   19d78:	86 30       	cpi	r24, 0x06	; 6
   19d7a:	91 05       	cpc	r25, r1
   19d7c:	09 f0       	breq	.+2      	; 0x19d80 <_Z24Plot_Status_List_Monitorv+0x4f4>
   19d7e:	8f cf       	rjmp	.-226    	; 0x19c9e <_Z24Plot_Status_List_Monitorv+0x412>
   19d80:	a7 cf       	rjmp	.-178    	; 0x19cd0 <_Z24Plot_Status_List_Monitorv+0x444>
   19d82:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19d86:	81 30       	cpi	r24, 0x01	; 1
   19d88:	41 f4       	brne	.+16     	; 0x19d9a <_Z24Plot_Status_List_Monitorv+0x50e>
   19d8a:	6f ea       	ldi	r22, 0xAF	; 175
   19d8c:	79 e2       	ldi	r23, 0x29	; 41
   19d8e:	86 ec       	ldi	r24, 0xC6	; 198
   19d90:	94 e1       	ldi	r25, 0x14	; 20
   19d92:	e4 d5       	rcall	.+3016   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19d94:	86 ec       	ldi	r24, 0xC6	; 198
   19d96:	94 e1       	ldi	r25, 0x14	; 20
   19d98:	50 d4       	rcall	.+2208   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19d9a:	b2 e0       	ldi	r27, 0x02	; 2
   19d9c:	8b 12       	cpse	r8, r27
   19d9e:	cd c0       	rjmp	.+410    	; 0x19f3a <_Z24Plot_Status_List_Monitorv+0x6ae>
   19da0:	86 e0       	ldi	r24, 0x06	; 6
   19da2:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19da6:	84 e6       	ldi	r24, 0x64	; 100
   19da8:	90 e0       	ldi	r25, 0x00	; 0
   19daa:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19dae:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19db2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19db6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19dba:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19dbe:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19dc2:	a0 62       	ori	r26, 0x20	; 32
   19dc4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19dc8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19dcc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19dd0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19dd4:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19dd8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19ddc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19de0:	82 60       	ori	r24, 0x02	; 2
   19de2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19de6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19dea:	d8 01       	movw	r26, r16
   19dec:	ed 91       	ld	r30, X+
   19dee:	8d 01       	movw	r16, r26
   19df0:	e3 31       	cpi	r30, 0x13	; 19
   19df2:	68 f0       	brcs	.+26     	; 0x19e0e <_Z24Plot_Status_List_Monitorv+0x582>
   19df4:	f0 e0       	ldi	r31, 0x00	; 0
   19df6:	e7 5c       	subi	r30, 0xC7	; 199
   19df8:	fb 4e       	sbci	r31, 0xEB	; 235
   19dfa:	61 e0       	ldi	r22, 0x01	; 1
   19dfc:	80 81       	ld	r24, Z
   19dfe:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19e02:	68 ec       	ldi	r22, 0xC8	; 200
   19e04:	70 e0       	ldi	r23, 0x00	; 0
   19e06:	80 e0       	ldi	r24, 0x00	; 0
   19e08:	90 e0       	ldi	r25, 0x00	; 0
   19e0a:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   19e0e:	a0 16       	cp	r10, r16
   19e10:	b1 06       	cpc	r11, r17
   19e12:	59 f7       	brne	.-42     	; 0x19dea <_Z24Plot_Status_List_Monitorv+0x55e>
   19e14:	ae cf       	rjmp	.-164    	; 0x19d72 <_Z24Plot_Status_List_Monitorv+0x4e6>
   19e16:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19e1a:	81 30       	cpi	r24, 0x01	; 1
   19e1c:	41 f4       	brne	.+16     	; 0x19e2e <_Z24Plot_Status_List_Monitorv+0x5a2>
   19e1e:	64 e7       	ldi	r22, 0x74	; 116
   19e20:	79 e2       	ldi	r23, 0x29	; 41
   19e22:	86 ec       	ldi	r24, 0xC6	; 198
   19e24:	94 e1       	ldi	r25, 0x14	; 20
   19e26:	9a d5       	rcall	.+2868   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19e28:	86 ec       	ldi	r24, 0xC6	; 198
   19e2a:	94 e1       	ldi	r25, 0x14	; 20
   19e2c:	06 d4       	rcall	.+2060   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19e2e:	b2 e0       	ldi	r27, 0x02	; 2
   19e30:	8b 12       	cpse	r8, r27
   19e32:	83 c0       	rjmp	.+262    	; 0x19f3a <_Z24Plot_Status_List_Monitorv+0x6ae>
   19e34:	86 e0       	ldi	r24, 0x06	; 6
   19e36:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19e3a:	84 e6       	ldi	r24, 0x64	; 100
   19e3c:	90 e0       	ldi	r25, 0x00	; 0
   19e3e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19e42:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19e46:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19e4a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19e4e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19e52:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19e56:	a0 62       	ori	r26, 0x20	; 32
   19e58:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19e5c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19e60:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19e64:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19e68:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19e6c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19e70:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19e74:	82 60       	ori	r24, 0x02	; 2
   19e76:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19e7a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19e7e:	d8 01       	movw	r26, r16
   19e80:	ed 91       	ld	r30, X+
   19e82:	8d 01       	movw	r16, r26
   19e84:	e3 31       	cpi	r30, 0x13	; 19
   19e86:	60 f0       	brcs	.+24     	; 0x19ea0 <_Z24Plot_Status_List_Monitorv+0x614>
   19e88:	f0 e0       	ldi	r31, 0x00	; 0
   19e8a:	e7 5c       	subi	r30, 0xC7	; 199
   19e8c:	fb 4e       	sbci	r31, 0xEB	; 235
   19e8e:	61 e0       	ldi	r22, 0x01	; 1
   19e90:	80 81       	ld	r24, Z
   19e92:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19e96:	68 ec       	ldi	r22, 0xC8	; 200
   19e98:	70 e0       	ldi	r23, 0x00	; 0
   19e9a:	80 e0       	ldi	r24, 0x00	; 0
   19e9c:	90 e0       	ldi	r25, 0x00	; 0
   19e9e:	bf d7       	rcall	.+3966   	; 0x1ae1e <delay>
   19ea0:	a0 16       	cp	r10, r16
   19ea2:	b1 06       	cpc	r11, r17
   19ea4:	61 f7       	brne	.-40     	; 0x19e7e <_Z24Plot_Status_List_Monitorv+0x5f2>
   19ea6:	65 cf       	rjmp	.-310    	; 0x19d72 <_Z24Plot_Status_List_Monitorv+0x4e6>
   19ea8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19eac:	81 30       	cpi	r24, 0x01	; 1
   19eae:	41 f4       	brne	.+16     	; 0x19ec0 <_Z24Plot_Status_List_Monitorv+0x634>
   19eb0:	69 e3       	ldi	r22, 0x39	; 57
   19eb2:	79 e2       	ldi	r23, 0x29	; 41
   19eb4:	86 ec       	ldi	r24, 0xC6	; 198
   19eb6:	94 e1       	ldi	r25, 0x14	; 20
   19eb8:	51 d5       	rcall	.+2722   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19eba:	86 ec       	ldi	r24, 0xC6	; 198
   19ebc:	94 e1       	ldi	r25, 0x14	; 20
   19ebe:	bd d3       	rcall	.+1914   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19ec0:	b2 e0       	ldi	r27, 0x02	; 2
   19ec2:	8b 12       	cpse	r8, r27
   19ec4:	3a c0       	rjmp	.+116    	; 0x19f3a <_Z24Plot_Status_List_Monitorv+0x6ae>
   19ec6:	86 e0       	ldi	r24, 0x06	; 6
   19ec8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19ecc:	84 e6       	ldi	r24, 0x64	; 100
   19ece:	90 e0       	ldi	r25, 0x00	; 0
   19ed0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19ed4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19ed8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19edc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19ee0:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19ee4:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19ee8:	a0 62       	ori	r26, 0x20	; 32
   19eea:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19eee:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19ef2:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19ef6:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19efa:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19efe:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19f02:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19f06:	82 60       	ori	r24, 0x02	; 2
   19f08:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19f0c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19f10:	d8 01       	movw	r26, r16
   19f12:	ed 91       	ld	r30, X+
   19f14:	8d 01       	movw	r16, r26
   19f16:	e3 31       	cpi	r30, 0x13	; 19
   19f18:	60 f0       	brcs	.+24     	; 0x19f32 <_Z24Plot_Status_List_Monitorv+0x6a6>
   19f1a:	f0 e0       	ldi	r31, 0x00	; 0
   19f1c:	e7 5c       	subi	r30, 0xC7	; 199
   19f1e:	fb 4e       	sbci	r31, 0xEB	; 235
   19f20:	61 e0       	ldi	r22, 0x01	; 1
   19f22:	80 81       	ld	r24, Z
   19f24:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19f28:	68 ec       	ldi	r22, 0xC8	; 200
   19f2a:	70 e0       	ldi	r23, 0x00	; 0
   19f2c:	80 e0       	ldi	r24, 0x00	; 0
   19f2e:	90 e0       	ldi	r25, 0x00	; 0
   19f30:	76 d7       	rcall	.+3820   	; 0x1ae1e <delay>
   19f32:	a0 16       	cp	r10, r16
   19f34:	b1 06       	cpc	r11, r17
   19f36:	61 f7       	brne	.-40     	; 0x19f10 <_Z24Plot_Status_List_Monitorv+0x684>
   19f38:	1c cf       	rjmp	.-456    	; 0x19d72 <_Z24Plot_Status_List_Monitorv+0x4e6>
   19f3a:	68 ee       	ldi	r22, 0xE8	; 232
   19f3c:	73 e0       	ldi	r23, 0x03	; 3
   19f3e:	80 e0       	ldi	r24, 0x00	; 0
   19f40:	90 e0       	ldi	r25, 0x00	; 0
   19f42:	6d d7       	rcall	.+3802   	; 0x1ae1e <delay>
   19f44:	b3 e0       	ldi	r27, 0x03	; 3
   19f46:	8b 12       	cpse	r8, r27
   19f48:	31 ce       	rjmp	.-926    	; 0x19bac <_Z24Plot_Status_List_Monitorv+0x320>
   19f4a:	11 c0       	rjmp	.+34     	; 0x19f6e <_Z24Plot_Status_List_Monitorv+0x6e2>
   19f4c:	8d ee       	ldi	r24, 0xED	; 237
   19f4e:	87 0d       	add	r24, r7
   19f50:	81 35       	cpi	r24, 0x51	; 81
   19f52:	68 f4       	brcc	.+26     	; 0x19f6e <_Z24Plot_Status_List_Monitorv+0x6e2>
   19f54:	e7 2d       	mov	r30, r7
   19f56:	f0 e0       	ldi	r31, 0x00	; 0
   19f58:	e7 5c       	subi	r30, 0xC7	; 199
   19f5a:	fb 4e       	sbci	r31, 0xEB	; 235
   19f5c:	61 e0       	ldi	r22, 0x01	; 1
   19f5e:	80 81       	ld	r24, Z
   19f60:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   19f64:	68 ec       	ldi	r22, 0xC8	; 200
   19f66:	70 e0       	ldi	r23, 0x00	; 0
   19f68:	80 e0       	ldi	r24, 0x00	; 0
   19f6a:	90 e0       	ldi	r25, 0x00	; 0
   19f6c:	58 d7       	rcall	.+3760   	; 0x1ae1e <delay>
   19f6e:	4a 14       	cp	r4, r10
   19f70:	5b 04       	cpc	r5, r11
   19f72:	09 f0       	breq	.+2      	; 0x19f76 <_Z24Plot_Status_List_Monitorv+0x6ea>
   19f74:	56 cd       	rjmp	.-1364   	; 0x19a22 <_Z24Plot_Status_List_Monitorv+0x196>
   19f76:	f7 01       	movw	r30, r14
   19f78:	e1 58       	subi	r30, 0x81	; 129
   19f7a:	fb 4e       	sbci	r31, 0xEB	; 235
   19f7c:	10 82       	st	Z, r1
   19f7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19f82:	81 30       	cpi	r24, 0x01	; 1
   19f84:	a1 f4       	brne	.+40     	; 0x19fae <_Z24Plot_Status_List_Monitorv+0x722>
   19f86:	6a e1       	ldi	r22, 0x1A	; 26
   19f88:	79 e2       	ldi	r23, 0x29	; 41
   19f8a:	86 ec       	ldi	r24, 0xC6	; 198
   19f8c:	94 e1       	ldi	r25, 0x14	; 20
   19f8e:	e6 d4       	rcall	.+2508   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
   19f90:	86 ec       	ldi	r24, 0xC6	; 198
   19f92:	94 e1       	ldi	r25, 0x14	; 20
   19f94:	52 d3       	rcall	.+1700   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
   19f96:	cc 24       	eor	r12, r12
   19f98:	c3 94       	inc	r12
   19f9a:	09 c0       	rjmp	.+18     	; 0x19fae <_Z24Plot_Status_List_Monitorv+0x722>
   19f9c:	2f ef       	ldi	r18, 0xFF	; 255
   19f9e:	e2 1a       	sub	r14, r18
   19fa0:	f2 0a       	sbc	r15, r18
   19fa2:	3e e0       	ldi	r19, 0x0E	; 14
   19fa4:	e3 16       	cp	r14, r19
   19fa6:	f1 04       	cpc	r15, r1
   19fa8:	09 f0       	breq	.+2      	; 0x19fac <_Z24Plot_Status_List_Monitorv+0x720>
   19faa:	a0 cc       	rjmp	.-1728   	; 0x198ec <_Z24Plot_Status_List_Monitorv+0x60>
   19fac:	01 c0       	rjmp	.+2      	; 0x19fb0 <_Z24Plot_Status_List_Monitorv+0x724>
   19fae:	8c 2d       	mov	r24, r12
   19fb0:	2b 96       	adiw	r28, 0x0b	; 11
   19fb2:	0f b6       	in	r0, 0x3f	; 63
   19fb4:	f8 94       	cli
   19fb6:	de bf       	out	0x3e, r29	; 62
   19fb8:	0f be       	out	0x3f, r0	; 63
   19fba:	cd bf       	out	0x3d, r28	; 61
   19fbc:	df 91       	pop	r29
   19fbe:	cf 91       	pop	r28
   19fc0:	1f 91       	pop	r17
   19fc2:	0f 91       	pop	r16
   19fc4:	ff 90       	pop	r15
   19fc6:	ef 90       	pop	r14
   19fc8:	df 90       	pop	r13
   19fca:	cf 90       	pop	r12
   19fcc:	bf 90       	pop	r11
   19fce:	af 90       	pop	r10
   19fd0:	9f 90       	pop	r9
   19fd2:	8f 90       	pop	r8
   19fd4:	7f 90       	pop	r7
   19fd6:	6f 90       	pop	r6
   19fd8:	5f 90       	pop	r5
   19fda:	4f 90       	pop	r4
   19fdc:	3f 90       	pop	r3
   19fde:	2f 90       	pop	r2
   19fe0:	08 95       	ret

00019fe2 <_Z14Lora_Operationv>:
		}break;
	}
}

void Lora_Operation(void)
{
   19fe2:	0f 93       	push	r16
   19fe4:	1f 93       	push	r17
   19fe6:	cf 93       	push	r28
   19fe8:	df 93       	push	r29
   19fea:	00 d0       	rcall	.+0      	; 0x19fec <_Z14Lora_Operationv+0xa>
   19fec:	00 d0       	rcall	.+0      	; 0x19fee <_Z14Lora_Operationv+0xc>
   19fee:	cd b7       	in	r28, 0x3d	; 61
   19ff0:	de b7       	in	r29, 0x3e	; 62
	unsigned char temp_id[_kVALVE_ID_LEN],i;
	
	if(_kLORA_DATA_AVAIALABLE())     /* check weather data is available */
   19ff2:	0e 94 dc 65 	call	0xcbb8	; 0xcbb8 <_Z14Lora_Availablev>
   19ff6:	88 23       	and	r24, r24
   19ff8:	09 f4       	brne	.+2      	; 0x19ffc <_Z14Lora_Operationv+0x1a>
   19ffa:	45 c0       	rjmp	.+138    	; 0x1a086 <_Z14Lora_Operationv+0xa4>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   19ffc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a000:	81 30       	cpi	r24, 0x01	; 1
   1a002:	41 f4       	brne	.+16     	; 0x1a014 <_Z14Lora_Operationv+0x32>
		{
			_kSERAIL_MON_WRITE("Lora Data Recived");                /* for debugging purpose */
   1a004:	6b e0       	ldi	r22, 0x0B	; 11
   1a006:	7b e3       	ldi	r23, 0x3B	; 59
   1a008:	86 ec       	ldi	r24, 0xC6	; 198
   1a00a:	94 e1       	ldi	r25, 0x14	; 20
   1a00c:	a7 d4       	rcall	.+2382   	; 0x1a95c <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   1a00e:	86 ec       	ldi	r24, 0xC6	; 198
   1a010:	94 e1       	ldi	r25, 0x14	; 20
   1a012:	13 d3       	rcall	.+1574   	; 0x1a63a <_ZN14HardwareSerial5flushEv>
		}
		
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
   1a014:	0e 94 e0 65 	call	0xcbc0	; 0xcbc0 <_Z17Lora_Data_Receivev>
   1a018:	88 23       	and	r24, r24
   1a01a:	a9 f1       	breq	.+106    	; 0x1a086 <_Z14Lora_Operationv+0xa4>
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   1a01c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a020:	81 30       	cpi	r24, 0x01	; 1
   1a022:	11 f4       	brne	.+4      	; 0x1a028 <_Z14Lora_Operationv+0x46>
   1a024:	10 e0       	ldi	r17, 0x00	; 0
   1a026:	08 c0       	rjmp	.+16     	; 0x1a038 <_Z14Lora_Operationv+0x56>
   1a028:	a9 e0       	ldi	r26, 0x09	; 9
   1a02a:	b4 e1       	ldi	r27, 0x14	; 20
   1a02c:	fe 01       	movw	r30, r28
   1a02e:	31 96       	adiw	r30, 0x01	; 1
   1a030:	ce 01       	movw	r24, r28
   1a032:	07 96       	adiw	r24, 0x07	; 7
   1a034:	8f 01       	movw	r16, r30
   1a036:	0c c0       	rjmp	.+24     	; 0x1a050 <_Z14Lora_Operationv+0x6e>
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   1a038:	e1 2f       	mov	r30, r17
   1a03a:	f0 e0       	ldi	r31, 0x00	; 0
   1a03c:	e7 5f       	subi	r30, 0xF7	; 247
   1a03e:	fb 4e       	sbci	r31, 0xEB	; 235
   1a040:	60 81       	ld	r22, Z
   1a042:	66 23       	and	r22, r22
   1a044:	89 f3       	breq	.-30     	; 0x1a028 <_Z14Lora_Operationv+0x46>
				{
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
   1a046:	86 ec       	ldi	r24, 0xC6	; 198
   1a048:	94 e1       	ldi	r25, 0x14	; 20
   1a04a:	ad d2       	rcall	.+1370   	; 0x1a5a6 <_ZN14HardwareSerial5writeEh>
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   1a04c:	1f 5f       	subi	r17, 0xFF	; 255
   1a04e:	f4 cf       	rjmp	.-24     	; 0x1a038 <_Z14Lora_Operationv+0x56>
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
   1a050:	2d 91       	ld	r18, X+
   1a052:	21 93       	st	Z+, r18
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
				}
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
   1a054:	e8 17       	cp	r30, r24
   1a056:	f9 07       	cpc	r31, r25
   1a058:	d9 f7       	brne	.-10     	; 0x1a050 <_Z14Lora_Operationv+0x6e>
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
			}
			
			if(!Update_Lira_Sensor_Data(temp_id))    /* check weather is lira node has send the packet */
   1a05a:	c8 01       	movw	r24, r16
   1a05c:	0e 94 f4 7e 	call	0xfde8	; 0xfde8 <_Z23Update_Lira_Sensor_DataPh>
   1a060:	81 11       	cpse	r24, r1
   1a062:	11 c0       	rjmp	.+34     	; 0x1a086 <_Z14Lora_Operationv+0xa4>
			{
				if(!Update_Euro_Valve_Data(temp_id))   /* check weather EURO valve have sent the packet */
   1a064:	c8 01       	movw	r24, r16
   1a066:	0e 94 a6 5c 	call	0xb94c	; 0xb94c <_Z22Update_Euro_Valve_DataPh>
   1a06a:	81 11       	cpse	r24, r1
   1a06c:	0c c0       	rjmp	.+24     	; 0x1a086 <_Z14Lora_Operationv+0xa4>
				{
					if(!Update_Wireless_Pump_Data(temp_id))
   1a06e:	c8 01       	movw	r24, r16
   1a070:	0e 94 97 5f 	call	0xbf2e	; 0xbf2e <_Z25Update_Wireless_Pump_DataPh>
   1a074:	81 11       	cpse	r24, r1
   1a076:	07 c0       	rjmp	.+14     	; 0x1a086 <_Z14Lora_Operationv+0xa4>
					{
						memset(_sRuble_Parameters.Lora_Data_Rx,0,sizeof(_sRuble_Parameters.Lora_Data_Rx));  /* discard the package */
   1a078:	84 e1       	ldi	r24, 0x14	; 20
   1a07a:	e9 e0       	ldi	r30, 0x09	; 9
   1a07c:	f4 e1       	ldi	r31, 0x14	; 20
   1a07e:	df 01       	movw	r26, r30
   1a080:	1d 92       	st	X+, r1
   1a082:	8a 95       	dec	r24
   1a084:	e9 f7       	brne	.-6      	; 0x1a080 <_Z14Lora_Operationv+0x9e>
					}	
				}
			}
		}
	}
}
   1a086:	26 96       	adiw	r28, 0x06	; 6
   1a088:	0f b6       	in	r0, 0x3f	; 63
   1a08a:	f8 94       	cli
   1a08c:	de bf       	out	0x3e, r29	; 62
   1a08e:	0f be       	out	0x3f, r0	; 63
   1a090:	cd bf       	out	0x3d, r28	; 61
   1a092:	df 91       	pop	r29
   1a094:	cf 91       	pop	r28
   1a096:	1f 91       	pop	r17
   1a098:	0f 91       	pop	r16
   1a09a:	08 95       	ret

0001a09c <__subsf3>:
   1a09c:	50 58       	subi	r21, 0x80	; 128

0001a09e <__addsf3>:
   1a09e:	bb 27       	eor	r27, r27
   1a0a0:	aa 27       	eor	r26, r26
   1a0a2:	0e d0       	rcall	.+28     	; 0x1a0c0 <__addsf3x>
   1a0a4:	70 c1       	rjmp	.+736    	; 0x1a386 <__fp_round>
   1a0a6:	61 d1       	rcall	.+706    	; 0x1a36a <__fp_pscA>
   1a0a8:	30 f0       	brcs	.+12     	; 0x1a0b6 <__addsf3+0x18>
   1a0aa:	66 d1       	rcall	.+716    	; 0x1a378 <__fp_pscB>
   1a0ac:	20 f0       	brcs	.+8      	; 0x1a0b6 <__addsf3+0x18>
   1a0ae:	31 f4       	brne	.+12     	; 0x1a0bc <__addsf3+0x1e>
   1a0b0:	9f 3f       	cpi	r25, 0xFF	; 255
   1a0b2:	11 f4       	brne	.+4      	; 0x1a0b8 <__addsf3+0x1a>
   1a0b4:	1e f4       	brtc	.+6      	; 0x1a0bc <__addsf3+0x1e>
   1a0b6:	56 c1       	rjmp	.+684    	; 0x1a364 <__fp_nan>
   1a0b8:	0e f4       	brtc	.+2      	; 0x1a0bc <__addsf3+0x1e>
   1a0ba:	e0 95       	com	r30
   1a0bc:	e7 fb       	bst	r30, 7
   1a0be:	4c c1       	rjmp	.+664    	; 0x1a358 <__fp_inf>

0001a0c0 <__addsf3x>:
   1a0c0:	e9 2f       	mov	r30, r25
   1a0c2:	72 d1       	rcall	.+740    	; 0x1a3a8 <__fp_split3>
   1a0c4:	80 f3       	brcs	.-32     	; 0x1a0a6 <__addsf3+0x8>
   1a0c6:	ba 17       	cp	r27, r26
   1a0c8:	62 07       	cpc	r22, r18
   1a0ca:	73 07       	cpc	r23, r19
   1a0cc:	84 07       	cpc	r24, r20
   1a0ce:	95 07       	cpc	r25, r21
   1a0d0:	18 f0       	brcs	.+6      	; 0x1a0d8 <__addsf3x+0x18>
   1a0d2:	71 f4       	brne	.+28     	; 0x1a0f0 <__addsf3x+0x30>
   1a0d4:	9e f5       	brtc	.+102    	; 0x1a13c <__addsf3x+0x7c>
   1a0d6:	8a c1       	rjmp	.+788    	; 0x1a3ec <__fp_zero>
   1a0d8:	0e f4       	brtc	.+2      	; 0x1a0dc <__addsf3x+0x1c>
   1a0da:	e0 95       	com	r30
   1a0dc:	0b 2e       	mov	r0, r27
   1a0de:	ba 2f       	mov	r27, r26
   1a0e0:	a0 2d       	mov	r26, r0
   1a0e2:	0b 01       	movw	r0, r22
   1a0e4:	b9 01       	movw	r22, r18
   1a0e6:	90 01       	movw	r18, r0
   1a0e8:	0c 01       	movw	r0, r24
   1a0ea:	ca 01       	movw	r24, r20
   1a0ec:	a0 01       	movw	r20, r0
   1a0ee:	11 24       	eor	r1, r1
   1a0f0:	ff 27       	eor	r31, r31
   1a0f2:	59 1b       	sub	r21, r25
   1a0f4:	99 f0       	breq	.+38     	; 0x1a11c <__addsf3x+0x5c>
   1a0f6:	59 3f       	cpi	r21, 0xF9	; 249
   1a0f8:	50 f4       	brcc	.+20     	; 0x1a10e <__addsf3x+0x4e>
   1a0fa:	50 3e       	cpi	r21, 0xE0	; 224
   1a0fc:	68 f1       	brcs	.+90     	; 0x1a158 <__addsf3x+0x98>
   1a0fe:	1a 16       	cp	r1, r26
   1a100:	f0 40       	sbci	r31, 0x00	; 0
   1a102:	a2 2f       	mov	r26, r18
   1a104:	23 2f       	mov	r18, r19
   1a106:	34 2f       	mov	r19, r20
   1a108:	44 27       	eor	r20, r20
   1a10a:	58 5f       	subi	r21, 0xF8	; 248
   1a10c:	f3 cf       	rjmp	.-26     	; 0x1a0f4 <__addsf3x+0x34>
   1a10e:	46 95       	lsr	r20
   1a110:	37 95       	ror	r19
   1a112:	27 95       	ror	r18
   1a114:	a7 95       	ror	r26
   1a116:	f0 40       	sbci	r31, 0x00	; 0
   1a118:	53 95       	inc	r21
   1a11a:	c9 f7       	brne	.-14     	; 0x1a10e <__addsf3x+0x4e>
   1a11c:	7e f4       	brtc	.+30     	; 0x1a13c <__addsf3x+0x7c>
   1a11e:	1f 16       	cp	r1, r31
   1a120:	ba 0b       	sbc	r27, r26
   1a122:	62 0b       	sbc	r22, r18
   1a124:	73 0b       	sbc	r23, r19
   1a126:	84 0b       	sbc	r24, r20
   1a128:	ba f0       	brmi	.+46     	; 0x1a158 <__addsf3x+0x98>
   1a12a:	91 50       	subi	r25, 0x01	; 1
   1a12c:	a1 f0       	breq	.+40     	; 0x1a156 <__addsf3x+0x96>
   1a12e:	ff 0f       	add	r31, r31
   1a130:	bb 1f       	adc	r27, r27
   1a132:	66 1f       	adc	r22, r22
   1a134:	77 1f       	adc	r23, r23
   1a136:	88 1f       	adc	r24, r24
   1a138:	c2 f7       	brpl	.-16     	; 0x1a12a <__addsf3x+0x6a>
   1a13a:	0e c0       	rjmp	.+28     	; 0x1a158 <__addsf3x+0x98>
   1a13c:	ba 0f       	add	r27, r26
   1a13e:	62 1f       	adc	r22, r18
   1a140:	73 1f       	adc	r23, r19
   1a142:	84 1f       	adc	r24, r20
   1a144:	48 f4       	brcc	.+18     	; 0x1a158 <__addsf3x+0x98>
   1a146:	87 95       	ror	r24
   1a148:	77 95       	ror	r23
   1a14a:	67 95       	ror	r22
   1a14c:	b7 95       	ror	r27
   1a14e:	f7 95       	ror	r31
   1a150:	9e 3f       	cpi	r25, 0xFE	; 254
   1a152:	08 f0       	brcs	.+2      	; 0x1a156 <__addsf3x+0x96>
   1a154:	b3 cf       	rjmp	.-154    	; 0x1a0bc <__addsf3+0x1e>
   1a156:	93 95       	inc	r25
   1a158:	88 0f       	add	r24, r24
   1a15a:	08 f0       	brcs	.+2      	; 0x1a15e <__addsf3x+0x9e>
   1a15c:	99 27       	eor	r25, r25
   1a15e:	ee 0f       	add	r30, r30
   1a160:	97 95       	ror	r25
   1a162:	87 95       	ror	r24
   1a164:	08 95       	ret

0001a166 <__cmpsf2>:
   1a166:	d4 d0       	rcall	.+424    	; 0x1a310 <__fp_cmp>
   1a168:	08 f4       	brcc	.+2      	; 0x1a16c <__cmpsf2+0x6>
   1a16a:	81 e0       	ldi	r24, 0x01	; 1
   1a16c:	08 95       	ret

0001a16e <__divsf3>:
   1a16e:	0c d0       	rcall	.+24     	; 0x1a188 <__divsf3x>
   1a170:	0a c1       	rjmp	.+532    	; 0x1a386 <__fp_round>
   1a172:	02 d1       	rcall	.+516    	; 0x1a378 <__fp_pscB>
   1a174:	40 f0       	brcs	.+16     	; 0x1a186 <__divsf3+0x18>
   1a176:	f9 d0       	rcall	.+498    	; 0x1a36a <__fp_pscA>
   1a178:	30 f0       	brcs	.+12     	; 0x1a186 <__divsf3+0x18>
   1a17a:	21 f4       	brne	.+8      	; 0x1a184 <__divsf3+0x16>
   1a17c:	5f 3f       	cpi	r21, 0xFF	; 255
   1a17e:	19 f0       	breq	.+6      	; 0x1a186 <__divsf3+0x18>
   1a180:	eb c0       	rjmp	.+470    	; 0x1a358 <__fp_inf>
   1a182:	51 11       	cpse	r21, r1
   1a184:	34 c1       	rjmp	.+616    	; 0x1a3ee <__fp_szero>
   1a186:	ee c0       	rjmp	.+476    	; 0x1a364 <__fp_nan>

0001a188 <__divsf3x>:
   1a188:	0f d1       	rcall	.+542    	; 0x1a3a8 <__fp_split3>
   1a18a:	98 f3       	brcs	.-26     	; 0x1a172 <__divsf3+0x4>

0001a18c <__divsf3_pse>:
   1a18c:	99 23       	and	r25, r25
   1a18e:	c9 f3       	breq	.-14     	; 0x1a182 <__divsf3+0x14>
   1a190:	55 23       	and	r21, r21
   1a192:	b1 f3       	breq	.-20     	; 0x1a180 <__divsf3+0x12>
   1a194:	95 1b       	sub	r25, r21
   1a196:	55 0b       	sbc	r21, r21
   1a198:	bb 27       	eor	r27, r27
   1a19a:	aa 27       	eor	r26, r26
   1a19c:	62 17       	cp	r22, r18
   1a19e:	73 07       	cpc	r23, r19
   1a1a0:	84 07       	cpc	r24, r20
   1a1a2:	38 f0       	brcs	.+14     	; 0x1a1b2 <__divsf3_pse+0x26>
   1a1a4:	9f 5f       	subi	r25, 0xFF	; 255
   1a1a6:	5f 4f       	sbci	r21, 0xFF	; 255
   1a1a8:	22 0f       	add	r18, r18
   1a1aa:	33 1f       	adc	r19, r19
   1a1ac:	44 1f       	adc	r20, r20
   1a1ae:	aa 1f       	adc	r26, r26
   1a1b0:	a9 f3       	breq	.-22     	; 0x1a19c <__divsf3_pse+0x10>
   1a1b2:	33 d0       	rcall	.+102    	; 0x1a21a <__divsf3_pse+0x8e>
   1a1b4:	0e 2e       	mov	r0, r30
   1a1b6:	3a f0       	brmi	.+14     	; 0x1a1c6 <__divsf3_pse+0x3a>
   1a1b8:	e0 e8       	ldi	r30, 0x80	; 128
   1a1ba:	30 d0       	rcall	.+96     	; 0x1a21c <__divsf3_pse+0x90>
   1a1bc:	91 50       	subi	r25, 0x01	; 1
   1a1be:	50 40       	sbci	r21, 0x00	; 0
   1a1c0:	e6 95       	lsr	r30
   1a1c2:	00 1c       	adc	r0, r0
   1a1c4:	ca f7       	brpl	.-14     	; 0x1a1b8 <__divsf3_pse+0x2c>
   1a1c6:	29 d0       	rcall	.+82     	; 0x1a21a <__divsf3_pse+0x8e>
   1a1c8:	fe 2f       	mov	r31, r30
   1a1ca:	27 d0       	rcall	.+78     	; 0x1a21a <__divsf3_pse+0x8e>
   1a1cc:	66 0f       	add	r22, r22
   1a1ce:	77 1f       	adc	r23, r23
   1a1d0:	88 1f       	adc	r24, r24
   1a1d2:	bb 1f       	adc	r27, r27
   1a1d4:	26 17       	cp	r18, r22
   1a1d6:	37 07       	cpc	r19, r23
   1a1d8:	48 07       	cpc	r20, r24
   1a1da:	ab 07       	cpc	r26, r27
   1a1dc:	b0 e8       	ldi	r27, 0x80	; 128
   1a1de:	09 f0       	breq	.+2      	; 0x1a1e2 <__divsf3_pse+0x56>
   1a1e0:	bb 0b       	sbc	r27, r27
   1a1e2:	80 2d       	mov	r24, r0
   1a1e4:	bf 01       	movw	r22, r30
   1a1e6:	ff 27       	eor	r31, r31
   1a1e8:	93 58       	subi	r25, 0x83	; 131
   1a1ea:	5f 4f       	sbci	r21, 0xFF	; 255
   1a1ec:	2a f0       	brmi	.+10     	; 0x1a1f8 <__divsf3_pse+0x6c>
   1a1ee:	9e 3f       	cpi	r25, 0xFE	; 254
   1a1f0:	51 05       	cpc	r21, r1
   1a1f2:	68 f0       	brcs	.+26     	; 0x1a20e <__divsf3_pse+0x82>
   1a1f4:	b1 c0       	rjmp	.+354    	; 0x1a358 <__fp_inf>
   1a1f6:	fb c0       	rjmp	.+502    	; 0x1a3ee <__fp_szero>
   1a1f8:	5f 3f       	cpi	r21, 0xFF	; 255
   1a1fa:	ec f3       	brlt	.-6      	; 0x1a1f6 <__divsf3_pse+0x6a>
   1a1fc:	98 3e       	cpi	r25, 0xE8	; 232
   1a1fe:	dc f3       	brlt	.-10     	; 0x1a1f6 <__divsf3_pse+0x6a>
   1a200:	86 95       	lsr	r24
   1a202:	77 95       	ror	r23
   1a204:	67 95       	ror	r22
   1a206:	b7 95       	ror	r27
   1a208:	f7 95       	ror	r31
   1a20a:	9f 5f       	subi	r25, 0xFF	; 255
   1a20c:	c9 f7       	brne	.-14     	; 0x1a200 <__divsf3_pse+0x74>
   1a20e:	88 0f       	add	r24, r24
   1a210:	91 1d       	adc	r25, r1
   1a212:	96 95       	lsr	r25
   1a214:	87 95       	ror	r24
   1a216:	97 f9       	bld	r25, 7
   1a218:	08 95       	ret
   1a21a:	e1 e0       	ldi	r30, 0x01	; 1
   1a21c:	66 0f       	add	r22, r22
   1a21e:	77 1f       	adc	r23, r23
   1a220:	88 1f       	adc	r24, r24
   1a222:	bb 1f       	adc	r27, r27
   1a224:	62 17       	cp	r22, r18
   1a226:	73 07       	cpc	r23, r19
   1a228:	84 07       	cpc	r24, r20
   1a22a:	ba 07       	cpc	r27, r26
   1a22c:	20 f0       	brcs	.+8      	; 0x1a236 <__divsf3_pse+0xaa>
   1a22e:	62 1b       	sub	r22, r18
   1a230:	73 0b       	sbc	r23, r19
   1a232:	84 0b       	sbc	r24, r20
   1a234:	ba 0b       	sbc	r27, r26
   1a236:	ee 1f       	adc	r30, r30
   1a238:	88 f7       	brcc	.-30     	; 0x1a21c <__divsf3_pse+0x90>
   1a23a:	e0 95       	com	r30
   1a23c:	08 95       	ret

0001a23e <__fixunssfsi>:
   1a23e:	bc d0       	rcall	.+376    	; 0x1a3b8 <__fp_splitA>
   1a240:	88 f0       	brcs	.+34     	; 0x1a264 <__fixunssfsi+0x26>
   1a242:	9f 57       	subi	r25, 0x7F	; 127
   1a244:	90 f0       	brcs	.+36     	; 0x1a26a <__fixunssfsi+0x2c>
   1a246:	b9 2f       	mov	r27, r25
   1a248:	99 27       	eor	r25, r25
   1a24a:	b7 51       	subi	r27, 0x17	; 23
   1a24c:	a0 f0       	brcs	.+40     	; 0x1a276 <__fixunssfsi+0x38>
   1a24e:	d1 f0       	breq	.+52     	; 0x1a284 <__fixunssfsi+0x46>
   1a250:	66 0f       	add	r22, r22
   1a252:	77 1f       	adc	r23, r23
   1a254:	88 1f       	adc	r24, r24
   1a256:	99 1f       	adc	r25, r25
   1a258:	1a f0       	brmi	.+6      	; 0x1a260 <__fixunssfsi+0x22>
   1a25a:	ba 95       	dec	r27
   1a25c:	c9 f7       	brne	.-14     	; 0x1a250 <__fixunssfsi+0x12>
   1a25e:	12 c0       	rjmp	.+36     	; 0x1a284 <__fixunssfsi+0x46>
   1a260:	b1 30       	cpi	r27, 0x01	; 1
   1a262:	81 f0       	breq	.+32     	; 0x1a284 <__fixunssfsi+0x46>
   1a264:	c3 d0       	rcall	.+390    	; 0x1a3ec <__fp_zero>
   1a266:	b1 e0       	ldi	r27, 0x01	; 1
   1a268:	08 95       	ret
   1a26a:	c0 c0       	rjmp	.+384    	; 0x1a3ec <__fp_zero>
   1a26c:	67 2f       	mov	r22, r23
   1a26e:	78 2f       	mov	r23, r24
   1a270:	88 27       	eor	r24, r24
   1a272:	b8 5f       	subi	r27, 0xF8	; 248
   1a274:	39 f0       	breq	.+14     	; 0x1a284 <__fixunssfsi+0x46>
   1a276:	b9 3f       	cpi	r27, 0xF9	; 249
   1a278:	cc f3       	brlt	.-14     	; 0x1a26c <__fixunssfsi+0x2e>
   1a27a:	86 95       	lsr	r24
   1a27c:	77 95       	ror	r23
   1a27e:	67 95       	ror	r22
   1a280:	b3 95       	inc	r27
   1a282:	d9 f7       	brne	.-10     	; 0x1a27a <__fixunssfsi+0x3c>
   1a284:	3e f4       	brtc	.+14     	; 0x1a294 <__fixunssfsi+0x56>
   1a286:	90 95       	com	r25
   1a288:	80 95       	com	r24
   1a28a:	70 95       	com	r23
   1a28c:	61 95       	neg	r22
   1a28e:	7f 4f       	sbci	r23, 0xFF	; 255
   1a290:	8f 4f       	sbci	r24, 0xFF	; 255
   1a292:	9f 4f       	sbci	r25, 0xFF	; 255
   1a294:	08 95       	ret

0001a296 <__floatunsisf>:
   1a296:	e8 94       	clt
   1a298:	09 c0       	rjmp	.+18     	; 0x1a2ac <__floatsisf+0x12>

0001a29a <__floatsisf>:
   1a29a:	97 fb       	bst	r25, 7
   1a29c:	3e f4       	brtc	.+14     	; 0x1a2ac <__floatsisf+0x12>
   1a29e:	90 95       	com	r25
   1a2a0:	80 95       	com	r24
   1a2a2:	70 95       	com	r23
   1a2a4:	61 95       	neg	r22
   1a2a6:	7f 4f       	sbci	r23, 0xFF	; 255
   1a2a8:	8f 4f       	sbci	r24, 0xFF	; 255
   1a2aa:	9f 4f       	sbci	r25, 0xFF	; 255
   1a2ac:	99 23       	and	r25, r25
   1a2ae:	a9 f0       	breq	.+42     	; 0x1a2da <__floatsisf+0x40>
   1a2b0:	f9 2f       	mov	r31, r25
   1a2b2:	96 e9       	ldi	r25, 0x96	; 150
   1a2b4:	bb 27       	eor	r27, r27
   1a2b6:	93 95       	inc	r25
   1a2b8:	f6 95       	lsr	r31
   1a2ba:	87 95       	ror	r24
   1a2bc:	77 95       	ror	r23
   1a2be:	67 95       	ror	r22
   1a2c0:	b7 95       	ror	r27
   1a2c2:	f1 11       	cpse	r31, r1
   1a2c4:	f8 cf       	rjmp	.-16     	; 0x1a2b6 <__floatsisf+0x1c>
   1a2c6:	fa f4       	brpl	.+62     	; 0x1a306 <__floatsisf+0x6c>
   1a2c8:	bb 0f       	add	r27, r27
   1a2ca:	11 f4       	brne	.+4      	; 0x1a2d0 <__floatsisf+0x36>
   1a2cc:	60 ff       	sbrs	r22, 0
   1a2ce:	1b c0       	rjmp	.+54     	; 0x1a306 <__floatsisf+0x6c>
   1a2d0:	6f 5f       	subi	r22, 0xFF	; 255
   1a2d2:	7f 4f       	sbci	r23, 0xFF	; 255
   1a2d4:	8f 4f       	sbci	r24, 0xFF	; 255
   1a2d6:	9f 4f       	sbci	r25, 0xFF	; 255
   1a2d8:	16 c0       	rjmp	.+44     	; 0x1a306 <__floatsisf+0x6c>
   1a2da:	88 23       	and	r24, r24
   1a2dc:	11 f0       	breq	.+4      	; 0x1a2e2 <__floatsisf+0x48>
   1a2de:	96 e9       	ldi	r25, 0x96	; 150
   1a2e0:	11 c0       	rjmp	.+34     	; 0x1a304 <__floatsisf+0x6a>
   1a2e2:	77 23       	and	r23, r23
   1a2e4:	21 f0       	breq	.+8      	; 0x1a2ee <__floatsisf+0x54>
   1a2e6:	9e e8       	ldi	r25, 0x8E	; 142
   1a2e8:	87 2f       	mov	r24, r23
   1a2ea:	76 2f       	mov	r23, r22
   1a2ec:	05 c0       	rjmp	.+10     	; 0x1a2f8 <__floatsisf+0x5e>
   1a2ee:	66 23       	and	r22, r22
   1a2f0:	71 f0       	breq	.+28     	; 0x1a30e <__floatsisf+0x74>
   1a2f2:	96 e8       	ldi	r25, 0x86	; 134
   1a2f4:	86 2f       	mov	r24, r22
   1a2f6:	70 e0       	ldi	r23, 0x00	; 0
   1a2f8:	60 e0       	ldi	r22, 0x00	; 0
   1a2fa:	2a f0       	brmi	.+10     	; 0x1a306 <__floatsisf+0x6c>
   1a2fc:	9a 95       	dec	r25
   1a2fe:	66 0f       	add	r22, r22
   1a300:	77 1f       	adc	r23, r23
   1a302:	88 1f       	adc	r24, r24
   1a304:	da f7       	brpl	.-10     	; 0x1a2fc <__floatsisf+0x62>
   1a306:	88 0f       	add	r24, r24
   1a308:	96 95       	lsr	r25
   1a30a:	87 95       	ror	r24
   1a30c:	97 f9       	bld	r25, 7
   1a30e:	08 95       	ret

0001a310 <__fp_cmp>:
   1a310:	99 0f       	add	r25, r25
   1a312:	00 08       	sbc	r0, r0
   1a314:	55 0f       	add	r21, r21
   1a316:	aa 0b       	sbc	r26, r26
   1a318:	e0 e8       	ldi	r30, 0x80	; 128
   1a31a:	fe ef       	ldi	r31, 0xFE	; 254
   1a31c:	16 16       	cp	r1, r22
   1a31e:	17 06       	cpc	r1, r23
   1a320:	e8 07       	cpc	r30, r24
   1a322:	f9 07       	cpc	r31, r25
   1a324:	c0 f0       	brcs	.+48     	; 0x1a356 <__fp_cmp+0x46>
   1a326:	12 16       	cp	r1, r18
   1a328:	13 06       	cpc	r1, r19
   1a32a:	e4 07       	cpc	r30, r20
   1a32c:	f5 07       	cpc	r31, r21
   1a32e:	98 f0       	brcs	.+38     	; 0x1a356 <__fp_cmp+0x46>
   1a330:	62 1b       	sub	r22, r18
   1a332:	73 0b       	sbc	r23, r19
   1a334:	84 0b       	sbc	r24, r20
   1a336:	95 0b       	sbc	r25, r21
   1a338:	39 f4       	brne	.+14     	; 0x1a348 <__fp_cmp+0x38>
   1a33a:	0a 26       	eor	r0, r26
   1a33c:	61 f0       	breq	.+24     	; 0x1a356 <__fp_cmp+0x46>
   1a33e:	23 2b       	or	r18, r19
   1a340:	24 2b       	or	r18, r20
   1a342:	25 2b       	or	r18, r21
   1a344:	21 f4       	brne	.+8      	; 0x1a34e <__fp_cmp+0x3e>
   1a346:	08 95       	ret
   1a348:	0a 26       	eor	r0, r26
   1a34a:	09 f4       	brne	.+2      	; 0x1a34e <__fp_cmp+0x3e>
   1a34c:	a1 40       	sbci	r26, 0x01	; 1
   1a34e:	a6 95       	lsr	r26
   1a350:	8f ef       	ldi	r24, 0xFF	; 255
   1a352:	81 1d       	adc	r24, r1
   1a354:	81 1d       	adc	r24, r1
   1a356:	08 95       	ret

0001a358 <__fp_inf>:
   1a358:	97 f9       	bld	r25, 7
   1a35a:	9f 67       	ori	r25, 0x7F	; 127
   1a35c:	80 e8       	ldi	r24, 0x80	; 128
   1a35e:	70 e0       	ldi	r23, 0x00	; 0
   1a360:	60 e0       	ldi	r22, 0x00	; 0
   1a362:	08 95       	ret

0001a364 <__fp_nan>:
   1a364:	9f ef       	ldi	r25, 0xFF	; 255
   1a366:	80 ec       	ldi	r24, 0xC0	; 192
   1a368:	08 95       	ret

0001a36a <__fp_pscA>:
   1a36a:	00 24       	eor	r0, r0
   1a36c:	0a 94       	dec	r0
   1a36e:	16 16       	cp	r1, r22
   1a370:	17 06       	cpc	r1, r23
   1a372:	18 06       	cpc	r1, r24
   1a374:	09 06       	cpc	r0, r25
   1a376:	08 95       	ret

0001a378 <__fp_pscB>:
   1a378:	00 24       	eor	r0, r0
   1a37a:	0a 94       	dec	r0
   1a37c:	12 16       	cp	r1, r18
   1a37e:	13 06       	cpc	r1, r19
   1a380:	14 06       	cpc	r1, r20
   1a382:	05 06       	cpc	r0, r21
   1a384:	08 95       	ret

0001a386 <__fp_round>:
   1a386:	09 2e       	mov	r0, r25
   1a388:	03 94       	inc	r0
   1a38a:	00 0c       	add	r0, r0
   1a38c:	11 f4       	brne	.+4      	; 0x1a392 <__fp_round+0xc>
   1a38e:	88 23       	and	r24, r24
   1a390:	52 f0       	brmi	.+20     	; 0x1a3a6 <__fp_round+0x20>
   1a392:	bb 0f       	add	r27, r27
   1a394:	40 f4       	brcc	.+16     	; 0x1a3a6 <__fp_round+0x20>
   1a396:	bf 2b       	or	r27, r31
   1a398:	11 f4       	brne	.+4      	; 0x1a39e <__fp_round+0x18>
   1a39a:	60 ff       	sbrs	r22, 0
   1a39c:	04 c0       	rjmp	.+8      	; 0x1a3a6 <__fp_round+0x20>
   1a39e:	6f 5f       	subi	r22, 0xFF	; 255
   1a3a0:	7f 4f       	sbci	r23, 0xFF	; 255
   1a3a2:	8f 4f       	sbci	r24, 0xFF	; 255
   1a3a4:	9f 4f       	sbci	r25, 0xFF	; 255
   1a3a6:	08 95       	ret

0001a3a8 <__fp_split3>:
   1a3a8:	57 fd       	sbrc	r21, 7
   1a3aa:	90 58       	subi	r25, 0x80	; 128
   1a3ac:	44 0f       	add	r20, r20
   1a3ae:	55 1f       	adc	r21, r21
   1a3b0:	59 f0       	breq	.+22     	; 0x1a3c8 <__fp_splitA+0x10>
   1a3b2:	5f 3f       	cpi	r21, 0xFF	; 255
   1a3b4:	71 f0       	breq	.+28     	; 0x1a3d2 <__fp_splitA+0x1a>
   1a3b6:	47 95       	ror	r20

0001a3b8 <__fp_splitA>:
   1a3b8:	88 0f       	add	r24, r24
   1a3ba:	97 fb       	bst	r25, 7
   1a3bc:	99 1f       	adc	r25, r25
   1a3be:	61 f0       	breq	.+24     	; 0x1a3d8 <__fp_splitA+0x20>
   1a3c0:	9f 3f       	cpi	r25, 0xFF	; 255
   1a3c2:	79 f0       	breq	.+30     	; 0x1a3e2 <__fp_splitA+0x2a>
   1a3c4:	87 95       	ror	r24
   1a3c6:	08 95       	ret
   1a3c8:	12 16       	cp	r1, r18
   1a3ca:	13 06       	cpc	r1, r19
   1a3cc:	14 06       	cpc	r1, r20
   1a3ce:	55 1f       	adc	r21, r21
   1a3d0:	f2 cf       	rjmp	.-28     	; 0x1a3b6 <__fp_split3+0xe>
   1a3d2:	46 95       	lsr	r20
   1a3d4:	f1 df       	rcall	.-30     	; 0x1a3b8 <__fp_splitA>
   1a3d6:	08 c0       	rjmp	.+16     	; 0x1a3e8 <__fp_splitA+0x30>
   1a3d8:	16 16       	cp	r1, r22
   1a3da:	17 06       	cpc	r1, r23
   1a3dc:	18 06       	cpc	r1, r24
   1a3de:	99 1f       	adc	r25, r25
   1a3e0:	f1 cf       	rjmp	.-30     	; 0x1a3c4 <__fp_splitA+0xc>
   1a3e2:	86 95       	lsr	r24
   1a3e4:	71 05       	cpc	r23, r1
   1a3e6:	61 05       	cpc	r22, r1
   1a3e8:	08 94       	sec
   1a3ea:	08 95       	ret

0001a3ec <__fp_zero>:
   1a3ec:	e8 94       	clt

0001a3ee <__fp_szero>:
   1a3ee:	bb 27       	eor	r27, r27
   1a3f0:	66 27       	eor	r22, r22
   1a3f2:	77 27       	eor	r23, r23
   1a3f4:	cb 01       	movw	r24, r22
   1a3f6:	97 f9       	bld	r25, 7
   1a3f8:	08 95       	ret

0001a3fa <__gesf2>:
   1a3fa:	8a df       	rcall	.-236    	; 0x1a310 <__fp_cmp>
   1a3fc:	08 f4       	brcc	.+2      	; 0x1a400 <__gesf2+0x6>
   1a3fe:	8f ef       	ldi	r24, 0xFF	; 255
   1a400:	08 95       	ret

0001a402 <__mulsf3>:
   1a402:	0b d0       	rcall	.+22     	; 0x1a41a <__mulsf3x>
   1a404:	c0 cf       	rjmp	.-128    	; 0x1a386 <__fp_round>
   1a406:	b1 df       	rcall	.-158    	; 0x1a36a <__fp_pscA>
   1a408:	28 f0       	brcs	.+10     	; 0x1a414 <__mulsf3+0x12>
   1a40a:	b6 df       	rcall	.-148    	; 0x1a378 <__fp_pscB>
   1a40c:	18 f0       	brcs	.+6      	; 0x1a414 <__mulsf3+0x12>
   1a40e:	95 23       	and	r25, r21
   1a410:	09 f0       	breq	.+2      	; 0x1a414 <__mulsf3+0x12>
   1a412:	a2 cf       	rjmp	.-188    	; 0x1a358 <__fp_inf>
   1a414:	a7 cf       	rjmp	.-178    	; 0x1a364 <__fp_nan>
   1a416:	11 24       	eor	r1, r1
   1a418:	ea cf       	rjmp	.-44     	; 0x1a3ee <__fp_szero>

0001a41a <__mulsf3x>:
   1a41a:	c6 df       	rcall	.-116    	; 0x1a3a8 <__fp_split3>
   1a41c:	a0 f3       	brcs	.-24     	; 0x1a406 <__mulsf3+0x4>

0001a41e <__mulsf3_pse>:
   1a41e:	95 9f       	mul	r25, r21
   1a420:	d1 f3       	breq	.-12     	; 0x1a416 <__mulsf3+0x14>
   1a422:	95 0f       	add	r25, r21
   1a424:	50 e0       	ldi	r21, 0x00	; 0
   1a426:	55 1f       	adc	r21, r21
   1a428:	62 9f       	mul	r22, r18
   1a42a:	f0 01       	movw	r30, r0
   1a42c:	72 9f       	mul	r23, r18
   1a42e:	bb 27       	eor	r27, r27
   1a430:	f0 0d       	add	r31, r0
   1a432:	b1 1d       	adc	r27, r1
   1a434:	63 9f       	mul	r22, r19
   1a436:	aa 27       	eor	r26, r26
   1a438:	f0 0d       	add	r31, r0
   1a43a:	b1 1d       	adc	r27, r1
   1a43c:	aa 1f       	adc	r26, r26
   1a43e:	64 9f       	mul	r22, r20
   1a440:	66 27       	eor	r22, r22
   1a442:	b0 0d       	add	r27, r0
   1a444:	a1 1d       	adc	r26, r1
   1a446:	66 1f       	adc	r22, r22
   1a448:	82 9f       	mul	r24, r18
   1a44a:	22 27       	eor	r18, r18
   1a44c:	b0 0d       	add	r27, r0
   1a44e:	a1 1d       	adc	r26, r1
   1a450:	62 1f       	adc	r22, r18
   1a452:	73 9f       	mul	r23, r19
   1a454:	b0 0d       	add	r27, r0
   1a456:	a1 1d       	adc	r26, r1
   1a458:	62 1f       	adc	r22, r18
   1a45a:	83 9f       	mul	r24, r19
   1a45c:	a0 0d       	add	r26, r0
   1a45e:	61 1d       	adc	r22, r1
   1a460:	22 1f       	adc	r18, r18
   1a462:	74 9f       	mul	r23, r20
   1a464:	33 27       	eor	r19, r19
   1a466:	a0 0d       	add	r26, r0
   1a468:	61 1d       	adc	r22, r1
   1a46a:	23 1f       	adc	r18, r19
   1a46c:	84 9f       	mul	r24, r20
   1a46e:	60 0d       	add	r22, r0
   1a470:	21 1d       	adc	r18, r1
   1a472:	82 2f       	mov	r24, r18
   1a474:	76 2f       	mov	r23, r22
   1a476:	6a 2f       	mov	r22, r26
   1a478:	11 24       	eor	r1, r1
   1a47a:	9f 57       	subi	r25, 0x7F	; 127
   1a47c:	50 40       	sbci	r21, 0x00	; 0
   1a47e:	8a f0       	brmi	.+34     	; 0x1a4a2 <__mulsf3_pse+0x84>
   1a480:	e1 f0       	breq	.+56     	; 0x1a4ba <__mulsf3_pse+0x9c>
   1a482:	88 23       	and	r24, r24
   1a484:	4a f0       	brmi	.+18     	; 0x1a498 <__mulsf3_pse+0x7a>
   1a486:	ee 0f       	add	r30, r30
   1a488:	ff 1f       	adc	r31, r31
   1a48a:	bb 1f       	adc	r27, r27
   1a48c:	66 1f       	adc	r22, r22
   1a48e:	77 1f       	adc	r23, r23
   1a490:	88 1f       	adc	r24, r24
   1a492:	91 50       	subi	r25, 0x01	; 1
   1a494:	50 40       	sbci	r21, 0x00	; 0
   1a496:	a9 f7       	brne	.-22     	; 0x1a482 <__mulsf3_pse+0x64>
   1a498:	9e 3f       	cpi	r25, 0xFE	; 254
   1a49a:	51 05       	cpc	r21, r1
   1a49c:	70 f0       	brcs	.+28     	; 0x1a4ba <__mulsf3_pse+0x9c>
   1a49e:	5c cf       	rjmp	.-328    	; 0x1a358 <__fp_inf>
   1a4a0:	a6 cf       	rjmp	.-180    	; 0x1a3ee <__fp_szero>
   1a4a2:	5f 3f       	cpi	r21, 0xFF	; 255
   1a4a4:	ec f3       	brlt	.-6      	; 0x1a4a0 <__mulsf3_pse+0x82>
   1a4a6:	98 3e       	cpi	r25, 0xE8	; 232
   1a4a8:	dc f3       	brlt	.-10     	; 0x1a4a0 <__mulsf3_pse+0x82>
   1a4aa:	86 95       	lsr	r24
   1a4ac:	77 95       	ror	r23
   1a4ae:	67 95       	ror	r22
   1a4b0:	b7 95       	ror	r27
   1a4b2:	f7 95       	ror	r31
   1a4b4:	e7 95       	ror	r30
   1a4b6:	9f 5f       	subi	r25, 0xFF	; 255
   1a4b8:	c1 f7       	brne	.-16     	; 0x1a4aa <__mulsf3_pse+0x8c>
   1a4ba:	fe 2b       	or	r31, r30
   1a4bc:	88 0f       	add	r24, r24
   1a4be:	91 1d       	adc	r25, r1
   1a4c0:	96 95       	lsr	r25
   1a4c2:	87 95       	ror	r24
   1a4c4:	97 f9       	bld	r25, 7
   1a4c6:	08 95       	ret

0001a4c8 <_ZN14HardwareSerial9availableEv>:
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
   1a4c8:	fc 01       	movw	r30, r24
   1a4ca:	91 8d       	ldd	r25, Z+25	; 0x19
   1a4cc:	22 8d       	ldd	r18, Z+26	; 0x1a
   1a4ce:	89 2f       	mov	r24, r25
   1a4d0:	90 e0       	ldi	r25, 0x00	; 0
   1a4d2:	80 53       	subi	r24, 0x30	; 48
   1a4d4:	9f 4f       	sbci	r25, 0xFF	; 255
   1a4d6:	82 1b       	sub	r24, r18
   1a4d8:	91 09       	sbc	r25, r1
   1a4da:	8f 70       	andi	r24, 0x0F	; 15
   1a4dc:	99 27       	eor	r25, r25
   1a4de:	2d e0       	ldi	r18, 0x0D	; 13
   1a4e0:	ac 01       	movw	r20, r24
   1a4e2:	24 9f       	mul	r18, r20
   1a4e4:	c0 01       	movw	r24, r0
   1a4e6:	25 9f       	mul	r18, r21
   1a4e8:	90 0d       	add	r25, r0
   1a4ea:	11 24       	eor	r1, r1
   1a4ec:	08 95       	ret

0001a4ee <_ZN14HardwareSerial4peekEv>:
   1a4ee:	fc 01       	movw	r30, r24
   1a4f0:	91 8d       	ldd	r25, Z+25	; 0x19
   1a4f2:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a4f4:	98 17       	cp	r25, r24
   1a4f6:	31 f0       	breq	.+12     	; 0x1a504 <_ZN14HardwareSerial4peekEv+0x16>
   1a4f8:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a4fa:	e8 0f       	add	r30, r24
   1a4fc:	f1 1d       	adc	r31, r1
   1a4fe:	85 8d       	ldd	r24, Z+29	; 0x1d
   1a500:	90 e0       	ldi	r25, 0x00	; 0
   1a502:	08 95       	ret
   1a504:	8f ef       	ldi	r24, 0xFF	; 255
   1a506:	9f ef       	ldi	r25, 0xFF	; 255
   1a508:	08 95       	ret

0001a50a <_ZN14HardwareSerial4readEv>:
   1a50a:	fc 01       	movw	r30, r24
   1a50c:	91 8d       	ldd	r25, Z+25	; 0x19
   1a50e:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a510:	98 17       	cp	r25, r24
   1a512:	81 f0       	breq	.+32     	; 0x1a534 <_ZN14HardwareSerial4readEv+0x2a>
   1a514:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a516:	df 01       	movw	r26, r30
   1a518:	a8 0f       	add	r26, r24
   1a51a:	b1 1d       	adc	r27, r1
   1a51c:	5d 96       	adiw	r26, 0x1d	; 29
   1a51e:	8c 91       	ld	r24, X
   1a520:	92 8d       	ldd	r25, Z+26	; 0x1a
   1a522:	9f 5f       	subi	r25, 0xFF	; 255
   1a524:	9f 70       	andi	r25, 0x0F	; 15
   1a526:	2d e0       	ldi	r18, 0x0D	; 13
   1a528:	92 9f       	mul	r25, r18
   1a52a:	90 2d       	mov	r25, r0
   1a52c:	11 24       	eor	r1, r1
   1a52e:	92 8f       	std	Z+26, r25	; 0x1a
   1a530:	90 e0       	ldi	r25, 0x00	; 0
   1a532:	08 95       	ret
   1a534:	8f ef       	ldi	r24, 0xFF	; 255
   1a536:	9f ef       	ldi	r25, 0xFF	; 255
   1a538:	08 95       	ret

0001a53a <_ZN14HardwareSerial17availableForWriteEv>:
   1a53a:	fc 01       	movw	r30, r24
   1a53c:	53 8d       	ldd	r21, Z+27	; 0x1b
   1a53e:	44 8d       	ldd	r20, Z+28	; 0x1c
   1a540:	25 2f       	mov	r18, r21
   1a542:	30 e0       	ldi	r19, 0x00	; 0
   1a544:	84 2f       	mov	r24, r20
   1a546:	90 e0       	ldi	r25, 0x00	; 0
   1a548:	82 1b       	sub	r24, r18
   1a54a:	93 0b       	sbc	r25, r19
   1a54c:	54 17       	cp	r21, r20
   1a54e:	18 f0       	brcs	.+6      	; 0x1a556 <_ZN14HardwareSerial17availableForWriteEv+0x1c>
   1a550:	81 53       	subi	r24, 0x31	; 49
   1a552:	9f 4f       	sbci	r25, 0xFF	; 255
   1a554:	08 95       	ret
   1a556:	01 97       	sbiw	r24, 0x01	; 1
   1a558:	08 95       	ret

0001a55a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
   1a55a:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
   1a55c:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a55e:	df 01       	movw	r26, r30
   1a560:	a8 0f       	add	r26, r24
   1a562:	b1 1d       	adc	r27, r1
   1a564:	a3 51       	subi	r26, 0x13	; 19
   1a566:	bf 4f       	sbci	r27, 0xFF	; 255
   1a568:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
   1a56a:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a56c:	90 e0       	ldi	r25, 0x00	; 0
   1a56e:	01 96       	adiw	r24, 0x01	; 1
   1a570:	8f 70       	andi	r24, 0x0F	; 15
   1a572:	99 27       	eor	r25, r25
   1a574:	9d e0       	ldi	r25, 0x0D	; 13
   1a576:	89 9f       	mul	r24, r25
   1a578:	80 2d       	mov	r24, r0
   1a57a:	11 24       	eor	r1, r1
   1a57c:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
   1a57e:	a6 89       	ldd	r26, Z+22	; 0x16
   1a580:	b7 89       	ldd	r27, Z+23	; 0x17
   1a582:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   1a584:	a0 89       	ldd	r26, Z+16	; 0x10
   1a586:	b1 89       	ldd	r27, Z+17	; 0x11
   1a588:	8c 91       	ld	r24, X
   1a58a:	83 70       	andi	r24, 0x03	; 3
   1a58c:	80 64       	ori	r24, 0x40	; 64
   1a58e:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
   1a590:	93 8d       	ldd	r25, Z+27	; 0x1b
   1a592:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a594:	98 13       	cpse	r25, r24
   1a596:	06 c0       	rjmp	.+12     	; 0x1a5a4 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x4a>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
   1a598:	02 88       	ldd	r0, Z+18	; 0x12
   1a59a:	f3 89       	ldd	r31, Z+19	; 0x13
   1a59c:	e0 2d       	mov	r30, r0
   1a59e:	80 81       	ld	r24, Z
   1a5a0:	8f 7d       	andi	r24, 0xDF	; 223
   1a5a2:	80 83       	st	Z, r24
   1a5a4:	08 95       	ret

0001a5a6 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
   1a5a6:	0f 93       	push	r16
   1a5a8:	1f 93       	push	r17
   1a5aa:	cf 93       	push	r28
   1a5ac:	df 93       	push	r29
   1a5ae:	ec 01       	movw	r28, r24
  _written = true;
   1a5b0:	81 e0       	ldi	r24, 0x01	; 1
   1a5b2:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
   1a5b4:	9b 8d       	ldd	r25, Y+27	; 0x1b
   1a5b6:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1a5b8:	98 13       	cpse	r25, r24
   1a5ba:	05 c0       	rjmp	.+10     	; 0x1a5c6 <_ZN14HardwareSerial5writeEh+0x20>
   1a5bc:	e8 89       	ldd	r30, Y+16	; 0x10
   1a5be:	f9 89       	ldd	r31, Y+17	; 0x11
   1a5c0:	80 81       	ld	r24, Z
   1a5c2:	85 fd       	sbrc	r24, 5
   1a5c4:	27 c0       	rjmp	.+78     	; 0x1a614 <_ZN14HardwareSerial5writeEh+0x6e>
   1a5c6:	06 2f       	mov	r16, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
   1a5c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
   1a5ca:	90 e0       	ldi	r25, 0x00	; 0
   1a5cc:	01 96       	adiw	r24, 0x01	; 1
   1a5ce:	8f 70       	andi	r24, 0x0F	; 15
   1a5d0:	99 27       	eor	r25, r25
   1a5d2:	1d e0       	ldi	r17, 0x0D	; 13
   1a5d4:	81 9f       	mul	r24, r17
   1a5d6:	10 2d       	mov	r17, r0
   1a5d8:	11 24       	eor	r1, r1
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
   1a5da:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1a5dc:	18 13       	cpse	r17, r24
   1a5de:	0b c0       	rjmp	.+22     	; 0x1a5f6 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
   1a5e0:	0f b6       	in	r0, 0x3f	; 63
   1a5e2:	07 fc       	sbrc	r0, 7
   1a5e4:	fa cf       	rjmp	.-12     	; 0x1a5da <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
   1a5e6:	e8 89       	ldd	r30, Y+16	; 0x10
   1a5e8:	f9 89       	ldd	r31, Y+17	; 0x11
   1a5ea:	80 81       	ld	r24, Z
   1a5ec:	85 ff       	sbrs	r24, 5
   1a5ee:	f5 cf       	rjmp	.-22     	; 0x1a5da <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
   1a5f0:	ce 01       	movw	r24, r28
   1a5f2:	b3 df       	rcall	.-154    	; 0x1a55a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a5f4:	f2 cf       	rjmp	.-28     	; 0x1a5da <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
   1a5f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
   1a5f8:	fe 01       	movw	r30, r28
   1a5fa:	e8 0f       	add	r30, r24
   1a5fc:	f1 1d       	adc	r31, r1
   1a5fe:	e3 51       	subi	r30, 0x13	; 19
   1a600:	ff 4f       	sbci	r31, 0xFF	; 255
   1a602:	00 83       	st	Z, r16

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a604:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
   1a606:	f8 94       	cli
    _tx_buffer_head = i;
   1a608:	1b 8f       	std	Y+27, r17	; 0x1b
    sbi(*_ucsrb, UDRIE0);
   1a60a:	ea 89       	ldd	r30, Y+18	; 0x12
   1a60c:	fb 89       	ldd	r31, Y+19	; 0x13
   1a60e:	80 81       	ld	r24, Z
   1a610:	80 62       	ori	r24, 0x20	; 32
   1a612:	0a c0       	rjmp	.+20     	; 0x1a628 <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a614:	9f b7       	in	r25, 0x3f	; 63
   1a616:	f8 94       	cli
      *_udr = c;
   1a618:	ee 89       	ldd	r30, Y+22	; 0x16
   1a61a:	ff 89       	ldd	r31, Y+23	; 0x17
   1a61c:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   1a61e:	e8 89       	ldd	r30, Y+16	; 0x10
   1a620:	f9 89       	ldd	r31, Y+17	; 0x11
   1a622:	80 81       	ld	r24, Z
   1a624:	83 70       	andi	r24, 0x03	; 3
   1a626:	80 64       	ori	r24, 0x40	; 64
   1a628:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
   1a62a:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
   1a62c:	81 e0       	ldi	r24, 0x01	; 1
   1a62e:	90 e0       	ldi	r25, 0x00	; 0
   1a630:	df 91       	pop	r29
   1a632:	cf 91       	pop	r28
   1a634:	1f 91       	pop	r17
   1a636:	0f 91       	pop	r16
   1a638:	08 95       	ret

0001a63a <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
   1a63a:	cf 93       	push	r28
   1a63c:	df 93       	push	r29
   1a63e:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
   1a640:	88 8d       	ldd	r24, Y+24	; 0x18
   1a642:	88 23       	and	r24, r24
   1a644:	c1 f0       	breq	.+48     	; 0x1a676 <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
   1a646:	ea 89       	ldd	r30, Y+18	; 0x12
   1a648:	fb 89       	ldd	r31, Y+19	; 0x13
   1a64a:	80 81       	ld	r24, Z
   1a64c:	85 fd       	sbrc	r24, 5
   1a64e:	05 c0       	rjmp	.+10     	; 0x1a65a <_ZN14HardwareSerial5flushEv+0x20>
   1a650:	a8 89       	ldd	r26, Y+16	; 0x10
   1a652:	b9 89       	ldd	r27, Y+17	; 0x11
   1a654:	8c 91       	ld	r24, X
   1a656:	86 fd       	sbrc	r24, 6
   1a658:	0e c0       	rjmp	.+28     	; 0x1a676 <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
   1a65a:	0f b6       	in	r0, 0x3f	; 63
   1a65c:	07 fc       	sbrc	r0, 7
   1a65e:	f5 cf       	rjmp	.-22     	; 0x1a64a <_ZN14HardwareSerial5flushEv+0x10>
   1a660:	80 81       	ld	r24, Z
   1a662:	85 ff       	sbrs	r24, 5
   1a664:	f2 cf       	rjmp	.-28     	; 0x1a64a <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
   1a666:	a8 89       	ldd	r26, Y+16	; 0x10
   1a668:	b9 89       	ldd	r27, Y+17	; 0x11
   1a66a:	8c 91       	ld	r24, X
   1a66c:	85 ff       	sbrs	r24, 5
   1a66e:	ed cf       	rjmp	.-38     	; 0x1a64a <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
   1a670:	ce 01       	movw	r24, r28
   1a672:	73 df       	rcall	.-282    	; 0x1a55a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a674:	e8 cf       	rjmp	.-48     	; 0x1a646 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
   1a676:	df 91       	pop	r29
   1a678:	cf 91       	pop	r28
   1a67a:	08 95       	ret

0001a67c <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
   1a67c:	cf 92       	push	r12
   1a67e:	df 92       	push	r13
   1a680:	ef 92       	push	r14
   1a682:	ff 92       	push	r15
   1a684:	1f 93       	push	r17
   1a686:	cf 93       	push	r28
   1a688:	df 93       	push	r29
   1a68a:	ec 01       	movw	r28, r24
   1a68c:	6a 01       	movw	r12, r20
   1a68e:	7b 01       	movw	r14, r22
   1a690:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
   1a692:	e8 89       	ldd	r30, Y+16	; 0x10
   1a694:	f9 89       	ldd	r31, Y+17	; 0x11
   1a696:	82 e0       	ldi	r24, 0x02	; 2
   1a698:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a69a:	41 15       	cp	r20, r1
   1a69c:	51 4e       	sbci	r21, 0xE1	; 225
   1a69e:	61 05       	cpc	r22, r1
   1a6a0:	71 05       	cpc	r23, r1
   1a6a2:	b1 f0       	breq	.+44     	; 0x1a6d0 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
   1a6a4:	60 e0       	ldi	r22, 0x00	; 0
   1a6a6:	79 e0       	ldi	r23, 0x09	; 9
   1a6a8:	8d e3       	ldi	r24, 0x3D	; 61
   1a6aa:	90 e0       	ldi	r25, 0x00	; 0
   1a6ac:	a7 01       	movw	r20, r14
   1a6ae:	96 01       	movw	r18, r12
   1a6b0:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   1a6b4:	da 01       	movw	r26, r20
   1a6b6:	c9 01       	movw	r24, r18
   1a6b8:	01 97       	sbiw	r24, 0x01	; 1
   1a6ba:	a1 09       	sbc	r26, r1
   1a6bc:	b1 09       	sbc	r27, r1
   1a6be:	b6 95       	lsr	r27
   1a6c0:	a7 95       	ror	r26
   1a6c2:	97 95       	ror	r25
   1a6c4:	87 95       	ror	r24
   1a6c6:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a6c8:	21 15       	cp	r18, r1
   1a6ca:	80 e1       	ldi	r24, 0x10	; 16
   1a6cc:	38 07       	cpc	r19, r24
   1a6ce:	a8 f0       	brcs	.+42     	; 0x1a6fa <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
   1a6d0:	e8 89       	ldd	r30, Y+16	; 0x10
   1a6d2:	f9 89       	ldd	r31, Y+17	; 0x11
   1a6d4:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
   1a6d6:	60 e8       	ldi	r22, 0x80	; 128
   1a6d8:	74 e8       	ldi	r23, 0x84	; 132
   1a6da:	8e e1       	ldi	r24, 0x1E	; 30
   1a6dc:	90 e0       	ldi	r25, 0x00	; 0
   1a6de:	a7 01       	movw	r20, r14
   1a6e0:	96 01       	movw	r18, r12
   1a6e2:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   1a6e6:	da 01       	movw	r26, r20
   1a6e8:	c9 01       	movw	r24, r18
   1a6ea:	01 97       	sbiw	r24, 0x01	; 1
   1a6ec:	a1 09       	sbc	r26, r1
   1a6ee:	b1 09       	sbc	r27, r1
   1a6f0:	b6 95       	lsr	r27
   1a6f2:	a7 95       	ror	r26
   1a6f4:	97 95       	ror	r25
   1a6f6:	87 95       	ror	r24
   1a6f8:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
   1a6fa:	ec 85       	ldd	r30, Y+12	; 0x0c
   1a6fc:	fd 85       	ldd	r31, Y+13	; 0x0d
   1a6fe:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
   1a700:	ee 85       	ldd	r30, Y+14	; 0x0e
   1a702:	ff 85       	ldd	r31, Y+15	; 0x0f
   1a704:	20 83       	st	Z, r18

  _written = false;
   1a706:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
   1a708:	ec 89       	ldd	r30, Y+20	; 0x14
   1a70a:	fd 89       	ldd	r31, Y+21	; 0x15
   1a70c:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
   1a70e:	ea 89       	ldd	r30, Y+18	; 0x12
   1a710:	fb 89       	ldd	r31, Y+19	; 0x13
   1a712:	80 81       	ld	r24, Z
   1a714:	80 61       	ori	r24, 0x10	; 16
   1a716:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
   1a718:	ea 89       	ldd	r30, Y+18	; 0x12
   1a71a:	fb 89       	ldd	r31, Y+19	; 0x13
   1a71c:	80 81       	ld	r24, Z
   1a71e:	88 60       	ori	r24, 0x08	; 8
   1a720:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
   1a722:	ea 89       	ldd	r30, Y+18	; 0x12
   1a724:	fb 89       	ldd	r31, Y+19	; 0x13
   1a726:	80 81       	ld	r24, Z
   1a728:	80 68       	ori	r24, 0x80	; 128
   1a72a:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
   1a72c:	ea 89       	ldd	r30, Y+18	; 0x12
   1a72e:	fb 89       	ldd	r31, Y+19	; 0x13
   1a730:	80 81       	ld	r24, Z
   1a732:	8f 7d       	andi	r24, 0xDF	; 223
   1a734:	80 83       	st	Z, r24
}
   1a736:	df 91       	pop	r29
   1a738:	cf 91       	pop	r28
   1a73a:	1f 91       	pop	r17
   1a73c:	ff 90       	pop	r15
   1a73e:	ef 90       	pop	r14
   1a740:	df 90       	pop	r13
   1a742:	cf 90       	pop	r12
   1a744:	08 95       	ret

0001a746 <_ZN5Print17availableForWriteEv>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
}
   1a746:	80 e0       	ldi	r24, 0x00	; 0
   1a748:	90 e0       	ldi	r25, 0x00	; 0
   1a74a:	08 95       	ret

0001a74c <_ZN5Print5flushEv>:
   1a74c:	08 95       	ret

0001a74e <__vector_26>:
   1a74e:	1f 92       	push	r1
   1a750:	0f 92       	push	r0
   1a752:	0f b6       	in	r0, 0x3f	; 63
   1a754:	0f 92       	push	r0
   1a756:	11 24       	eor	r1, r1
   1a758:	0b b6       	in	r0, 0x3b	; 59
   1a75a:	0f 92       	push	r0
   1a75c:	2f 93       	push	r18
   1a75e:	3f 93       	push	r19
   1a760:	4f 93       	push	r20
   1a762:	5f 93       	push	r21
   1a764:	6f 93       	push	r22
   1a766:	7f 93       	push	r23
   1a768:	8f 93       	push	r24
   1a76a:	9f 93       	push	r25
   1a76c:	af 93       	push	r26
   1a76e:	bf 93       	push	r27
   1a770:	ef 93       	push	r30
   1a772:	ff 93       	push	r31
   1a774:	86 ec       	ldi	r24, 0xC6	; 198
   1a776:	94 e1       	ldi	r25, 0x14	; 20
   1a778:	f0 de       	rcall	.-544    	; 0x1a55a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a77a:	ff 91       	pop	r31
   1a77c:	ef 91       	pop	r30
   1a77e:	bf 91       	pop	r27
   1a780:	af 91       	pop	r26
   1a782:	9f 91       	pop	r25
   1a784:	8f 91       	pop	r24
   1a786:	7f 91       	pop	r23
   1a788:	6f 91       	pop	r22
   1a78a:	5f 91       	pop	r21
   1a78c:	4f 91       	pop	r20
   1a78e:	3f 91       	pop	r19
   1a790:	2f 91       	pop	r18
   1a792:	0f 90       	pop	r0
   1a794:	0b be       	out	0x3b, r0	; 59
   1a796:	0f 90       	pop	r0
   1a798:	0f be       	out	0x3f, r0	; 63
   1a79a:	0f 90       	pop	r0
   1a79c:	1f 90       	pop	r1
   1a79e:	18 95       	reti

0001a7a0 <_GLOBAL__sub_I___vector_26>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
   1a7a0:	e6 ec       	ldi	r30, 0xC6	; 198
   1a7a2:	f4 e1       	ldi	r31, 0x14	; 20
   1a7a4:	13 82       	std	Z+3, r1	; 0x03
   1a7a6:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
   1a7a8:	88 ee       	ldi	r24, 0xE8	; 232
   1a7aa:	93 e0       	ldi	r25, 0x03	; 3
   1a7ac:	a0 e0       	ldi	r26, 0x00	; 0
   1a7ae:	b0 e0       	ldi	r27, 0x00	; 0
   1a7b0:	84 83       	std	Z+4, r24	; 0x04
   1a7b2:	95 83       	std	Z+5, r25	; 0x05
   1a7b4:	a6 83       	std	Z+6, r26	; 0x06
   1a7b6:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
   1a7b8:	8f ed       	ldi	r24, 0xDF	; 223
   1a7ba:	97 e0       	ldi	r25, 0x07	; 7
   1a7bc:	91 83       	std	Z+1, r25	; 0x01
   1a7be:	80 83       	st	Z, r24
   1a7c0:	85 ec       	ldi	r24, 0xC5	; 197
   1a7c2:	90 e0       	ldi	r25, 0x00	; 0
   1a7c4:	95 87       	std	Z+13, r25	; 0x0d
   1a7c6:	84 87       	std	Z+12, r24	; 0x0c
   1a7c8:	84 ec       	ldi	r24, 0xC4	; 196
   1a7ca:	90 e0       	ldi	r25, 0x00	; 0
   1a7cc:	97 87       	std	Z+15, r25	; 0x0f
   1a7ce:	86 87       	std	Z+14, r24	; 0x0e
   1a7d0:	80 ec       	ldi	r24, 0xC0	; 192
   1a7d2:	90 e0       	ldi	r25, 0x00	; 0
   1a7d4:	91 8b       	std	Z+17, r25	; 0x11
   1a7d6:	80 8b       	std	Z+16, r24	; 0x10
   1a7d8:	81 ec       	ldi	r24, 0xC1	; 193
   1a7da:	90 e0       	ldi	r25, 0x00	; 0
   1a7dc:	93 8b       	std	Z+19, r25	; 0x13
   1a7de:	82 8b       	std	Z+18, r24	; 0x12
   1a7e0:	82 ec       	ldi	r24, 0xC2	; 194
   1a7e2:	90 e0       	ldi	r25, 0x00	; 0
   1a7e4:	95 8b       	std	Z+21, r25	; 0x15
   1a7e6:	84 8b       	std	Z+20, r24	; 0x14
   1a7e8:	86 ec       	ldi	r24, 0xC6	; 198
   1a7ea:	90 e0       	ldi	r25, 0x00	; 0
   1a7ec:	97 8b       	std	Z+23, r25	; 0x17
   1a7ee:	86 8b       	std	Z+22, r24	; 0x16
   1a7f0:	11 8e       	std	Z+25, r1	; 0x19
   1a7f2:	12 8e       	std	Z+26, r1	; 0x1a
   1a7f4:	13 8e       	std	Z+27, r1	; 0x1b
   1a7f6:	14 8e       	std	Z+28, r1	; 0x1c
   1a7f8:	08 95       	ret

0001a7fa <__vector_37>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
}
   1a7fa:	1f 92       	push	r1
   1a7fc:	0f 92       	push	r0
   1a7fe:	0f b6       	in	r0, 0x3f	; 63
   1a800:	0f 92       	push	r0
   1a802:	11 24       	eor	r1, r1
   1a804:	0b b6       	in	r0, 0x3b	; 59
   1a806:	0f 92       	push	r0
   1a808:	2f 93       	push	r18
   1a80a:	3f 93       	push	r19
   1a80c:	4f 93       	push	r20
   1a80e:	5f 93       	push	r21
   1a810:	6f 93       	push	r22
   1a812:	7f 93       	push	r23
   1a814:	8f 93       	push	r24
   1a816:	9f 93       	push	r25
   1a818:	af 93       	push	r26
   1a81a:	bf 93       	push	r27
   1a81c:	ef 93       	push	r30
   1a81e:	ff 93       	push	r31
   1a820:	83 e8       	ldi	r24, 0x83	; 131
   1a822:	96 e1       	ldi	r25, 0x16	; 22
   1a824:	9a de       	rcall	.-716    	; 0x1a55a <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a826:	ff 91       	pop	r31
   1a828:	ef 91       	pop	r30
   1a82a:	bf 91       	pop	r27
   1a82c:	af 91       	pop	r26
   1a82e:	9f 91       	pop	r25
   1a830:	8f 91       	pop	r24
   1a832:	7f 91       	pop	r23
   1a834:	6f 91       	pop	r22
   1a836:	5f 91       	pop	r21
   1a838:	4f 91       	pop	r20
   1a83a:	3f 91       	pop	r19
   1a83c:	2f 91       	pop	r18
   1a83e:	0f 90       	pop	r0
   1a840:	0b be       	out	0x3b, r0	; 59
   1a842:	0f 90       	pop	r0
   1a844:	0f be       	out	0x3f, r0	; 63
   1a846:	0f 90       	pop	r0
   1a848:	1f 90       	pop	r1
   1a84a:	18 95       	reti

0001a84c <_GLOBAL__sub_I___vector_37>:
   1a84c:	e3 e8       	ldi	r30, 0x83	; 131
   1a84e:	f6 e1       	ldi	r31, 0x16	; 22
   1a850:	13 82       	std	Z+3, r1	; 0x03
   1a852:	12 82       	std	Z+2, r1	; 0x02
   1a854:	88 ee       	ldi	r24, 0xE8	; 232
   1a856:	93 e0       	ldi	r25, 0x03	; 3
   1a858:	a0 e0       	ldi	r26, 0x00	; 0
   1a85a:	b0 e0       	ldi	r27, 0x00	; 0
   1a85c:	84 83       	std	Z+4, r24	; 0x04
   1a85e:	95 83       	std	Z+5, r25	; 0x05
   1a860:	a6 83       	std	Z+6, r26	; 0x06
   1a862:	b7 83       	std	Z+7, r27	; 0x07
   1a864:	8f ed       	ldi	r24, 0xDF	; 223
   1a866:	97 e0       	ldi	r25, 0x07	; 7
   1a868:	91 83       	std	Z+1, r25	; 0x01
   1a86a:	80 83       	st	Z, r24
   1a86c:	8d ec       	ldi	r24, 0xCD	; 205
   1a86e:	90 e0       	ldi	r25, 0x00	; 0
   1a870:	95 87       	std	Z+13, r25	; 0x0d
   1a872:	84 87       	std	Z+12, r24	; 0x0c
   1a874:	8c ec       	ldi	r24, 0xCC	; 204
   1a876:	90 e0       	ldi	r25, 0x00	; 0
   1a878:	97 87       	std	Z+15, r25	; 0x0f
   1a87a:	86 87       	std	Z+14, r24	; 0x0e
   1a87c:	88 ec       	ldi	r24, 0xC8	; 200
   1a87e:	90 e0       	ldi	r25, 0x00	; 0
   1a880:	91 8b       	std	Z+17, r25	; 0x11
   1a882:	80 8b       	std	Z+16, r24	; 0x10
   1a884:	89 ec       	ldi	r24, 0xC9	; 201
   1a886:	90 e0       	ldi	r25, 0x00	; 0
   1a888:	93 8b       	std	Z+19, r25	; 0x13
   1a88a:	82 8b       	std	Z+18, r24	; 0x12
   1a88c:	8a ec       	ldi	r24, 0xCA	; 202
   1a88e:	90 e0       	ldi	r25, 0x00	; 0
   1a890:	95 8b       	std	Z+21, r25	; 0x15
   1a892:	84 8b       	std	Z+20, r24	; 0x14
   1a894:	8e ec       	ldi	r24, 0xCE	; 206
   1a896:	90 e0       	ldi	r25, 0x00	; 0
   1a898:	97 8b       	std	Z+23, r25	; 0x17
   1a89a:	86 8b       	std	Z+22, r24	; 0x16
   1a89c:	11 8e       	std	Z+25, r1	; 0x19
   1a89e:	12 8e       	std	Z+26, r1	; 0x1a
   1a8a0:	13 8e       	std	Z+27, r1	; 0x1b
   1a8a2:	14 8e       	std	Z+28, r1	; 0x1c
   1a8a4:	08 95       	ret

0001a8a6 <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a8a6:	cf 92       	push	r12
   1a8a8:	df 92       	push	r13
   1a8aa:	ef 92       	push	r14
   1a8ac:	ff 92       	push	r15
   1a8ae:	0f 93       	push	r16
   1a8b0:	1f 93       	push	r17
   1a8b2:	cf 93       	push	r28
   1a8b4:	df 93       	push	r29
   1a8b6:	6c 01       	movw	r12, r24
   1a8b8:	7a 01       	movw	r14, r20
   1a8ba:	8b 01       	movw	r16, r22
   1a8bc:	c0 e0       	ldi	r28, 0x00	; 0
   1a8be:	d0 e0       	ldi	r29, 0x00	; 0
   1a8c0:	ce 15       	cp	r28, r14
   1a8c2:	df 05       	cpc	r29, r15
   1a8c4:	81 f0       	breq	.+32     	; 0x1a8e6 <_ZN5Print5writeEPKhj+0x40>
   1a8c6:	d8 01       	movw	r26, r16
   1a8c8:	6d 91       	ld	r22, X+
   1a8ca:	8d 01       	movw	r16, r26
   1a8cc:	d6 01       	movw	r26, r12
   1a8ce:	ed 91       	ld	r30, X+
   1a8d0:	fc 91       	ld	r31, X
   1a8d2:	01 90       	ld	r0, Z+
   1a8d4:	f0 81       	ld	r31, Z
   1a8d6:	e0 2d       	mov	r30, r0
   1a8d8:	c6 01       	movw	r24, r12
   1a8da:	19 95       	eicall
   1a8dc:	89 2b       	or	r24, r25
   1a8de:	11 f0       	breq	.+4      	; 0x1a8e4 <_ZN5Print5writeEPKhj+0x3e>
   1a8e0:	21 96       	adiw	r28, 0x01	; 1
   1a8e2:	ee cf       	rjmp	.-36     	; 0x1a8c0 <_ZN5Print5writeEPKhj+0x1a>
   1a8e4:	7e 01       	movw	r14, r28
   1a8e6:	c7 01       	movw	r24, r14
   1a8e8:	df 91       	pop	r29
   1a8ea:	cf 91       	pop	r28
   1a8ec:	1f 91       	pop	r17
   1a8ee:	0f 91       	pop	r16
   1a8f0:	ff 90       	pop	r15
   1a8f2:	ef 90       	pop	r14
   1a8f4:	df 90       	pop	r13
   1a8f6:	cf 90       	pop	r12
   1a8f8:	08 95       	ret

0001a8fa <_ZN5Print5printEPK19__FlashStringHelper>:
   1a8fa:	ef 92       	push	r14
   1a8fc:	ff 92       	push	r15
   1a8fe:	0f 93       	push	r16
   1a900:	1f 93       	push	r17
   1a902:	cf 93       	push	r28
   1a904:	df 93       	push	r29
   1a906:	8c 01       	movw	r16, r24
   1a908:	7b 01       	movw	r14, r22
   1a90a:	c0 e0       	ldi	r28, 0x00	; 0
   1a90c:	d0 e0       	ldi	r29, 0x00	; 0
   1a90e:	f7 01       	movw	r30, r14
   1a910:	ec 0f       	add	r30, r28
   1a912:	fd 1f       	adc	r31, r29
   1a914:	64 91       	lpm	r22, Z
   1a916:	66 23       	and	r22, r22
   1a918:	61 f0       	breq	.+24     	; 0x1a932 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a91a:	d8 01       	movw	r26, r16
   1a91c:	ed 91       	ld	r30, X+
   1a91e:	fc 91       	ld	r31, X
   1a920:	01 90       	ld	r0, Z+
   1a922:	f0 81       	ld	r31, Z
   1a924:	e0 2d       	mov	r30, r0
   1a926:	c8 01       	movw	r24, r16
   1a928:	19 95       	eicall
   1a92a:	89 2b       	or	r24, r25
   1a92c:	11 f0       	breq	.+4      	; 0x1a932 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a92e:	21 96       	adiw	r28, 0x01	; 1
   1a930:	ee cf       	rjmp	.-36     	; 0x1a90e <_ZN5Print5printEPK19__FlashStringHelper+0x14>
   1a932:	ce 01       	movw	r24, r28
   1a934:	df 91       	pop	r29
   1a936:	cf 91       	pop	r28
   1a938:	1f 91       	pop	r17
   1a93a:	0f 91       	pop	r16
   1a93c:	ff 90       	pop	r15
   1a93e:	ef 90       	pop	r14
   1a940:	08 95       	ret

0001a942 <_ZN5Print5printEPKc>:
   1a942:	0c 94 7a 85 	jmp	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>

0001a946 <_ZN5Print5printEc>:
   1a946:	dc 01       	movw	r26, r24
   1a948:	ed 91       	ld	r30, X+
   1a94a:	fc 91       	ld	r31, X
   1a94c:	01 90       	ld	r0, Z+
   1a94e:	f0 81       	ld	r31, Z
   1a950:	e0 2d       	mov	r30, r0
   1a952:	19 94       	eijmp

0001a954 <_ZN5Print7printlnEv>:
   1a954:	65 ef       	ldi	r22, 0xF5	; 245
   1a956:	76 e0       	ldi	r23, 0x06	; 6
   1a958:	0c 94 7a 85 	jmp	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>

0001a95c <_ZN5Print7printlnEPK19__FlashStringHelper>:
   1a95c:	0f 93       	push	r16
   1a95e:	1f 93       	push	r17
   1a960:	cf 93       	push	r28
   1a962:	df 93       	push	r29
   1a964:	ec 01       	movw	r28, r24
   1a966:	c9 df       	rcall	.-110    	; 0x1a8fa <_ZN5Print5printEPK19__FlashStringHelper>
   1a968:	8c 01       	movw	r16, r24
   1a96a:	ce 01       	movw	r24, r28
   1a96c:	f3 df       	rcall	.-26     	; 0x1a954 <_ZN5Print7printlnEv>
   1a96e:	80 0f       	add	r24, r16
   1a970:	91 1f       	adc	r25, r17
   1a972:	df 91       	pop	r29
   1a974:	cf 91       	pop	r28
   1a976:	1f 91       	pop	r17
   1a978:	0f 91       	pop	r16
   1a97a:	08 95       	ret

0001a97c <_ZN5Print7printlnEPKc>:
   1a97c:	0f 93       	push	r16
   1a97e:	1f 93       	push	r17
   1a980:	cf 93       	push	r28
   1a982:	df 93       	push	r29
   1a984:	ec 01       	movw	r28, r24
   1a986:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   1a98a:	8c 01       	movw	r16, r24
   1a98c:	ce 01       	movw	r24, r28
   1a98e:	e2 df       	rcall	.-60     	; 0x1a954 <_ZN5Print7printlnEv>
   1a990:	80 0f       	add	r24, r16
   1a992:	91 1f       	adc	r25, r17
   1a994:	df 91       	pop	r29
   1a996:	cf 91       	pop	r28
   1a998:	1f 91       	pop	r17
   1a99a:	0f 91       	pop	r16
   1a99c:	08 95       	ret

0001a99e <_ZN5Print11printNumberEmh>:
   1a99e:	8f 92       	push	r8
   1a9a0:	9f 92       	push	r9
   1a9a2:	af 92       	push	r10
   1a9a4:	bf 92       	push	r11
   1a9a6:	ef 92       	push	r14
   1a9a8:	ff 92       	push	r15
   1a9aa:	0f 93       	push	r16
   1a9ac:	1f 93       	push	r17
   1a9ae:	cf 93       	push	r28
   1a9b0:	df 93       	push	r29
   1a9b2:	cd b7       	in	r28, 0x3d	; 61
   1a9b4:	de b7       	in	r29, 0x3e	; 62
   1a9b6:	a1 97       	sbiw	r28, 0x21	; 33
   1a9b8:	0f b6       	in	r0, 0x3f	; 63
   1a9ba:	f8 94       	cli
   1a9bc:	de bf       	out	0x3e, r29	; 62
   1a9be:	0f be       	out	0x3f, r0	; 63
   1a9c0:	cd bf       	out	0x3d, r28	; 61
   1a9c2:	7c 01       	movw	r14, r24
   1a9c4:	fa 01       	movw	r30, r20
   1a9c6:	cb 01       	movw	r24, r22
   1a9c8:	19 a2       	std	Y+33, r1	; 0x21
   1a9ca:	22 30       	cpi	r18, 0x02	; 2
   1a9cc:	08 f4       	brcc	.+2      	; 0x1a9d0 <_ZN5Print11printNumberEmh+0x32>
   1a9ce:	2a e0       	ldi	r18, 0x0A	; 10
   1a9d0:	8e 01       	movw	r16, r28
   1a9d2:	0f 5d       	subi	r16, 0xDF	; 223
   1a9d4:	1f 4f       	sbci	r17, 0xFF	; 255
   1a9d6:	82 2e       	mov	r8, r18
   1a9d8:	91 2c       	mov	r9, r1
   1a9da:	a1 2c       	mov	r10, r1
   1a9dc:	b1 2c       	mov	r11, r1
   1a9de:	bf 01       	movw	r22, r30
   1a9e0:	a5 01       	movw	r20, r10
   1a9e2:	94 01       	movw	r18, r8
   1a9e4:	0e 94 df ea 	call	0x1d5be	; 0x1d5be <__udivmodsi4>
   1a9e8:	f9 01       	movw	r30, r18
   1a9ea:	ca 01       	movw	r24, r20
   1a9ec:	01 50       	subi	r16, 0x01	; 1
   1a9ee:	11 09       	sbc	r17, r1
   1a9f0:	6a 30       	cpi	r22, 0x0A	; 10
   1a9f2:	10 f4       	brcc	.+4      	; 0x1a9f8 <_ZN5Print11printNumberEmh+0x5a>
   1a9f4:	60 5d       	subi	r22, 0xD0	; 208
   1a9f6:	01 c0       	rjmp	.+2      	; 0x1a9fa <_ZN5Print11printNumberEmh+0x5c>
   1a9f8:	69 5c       	subi	r22, 0xC9	; 201
   1a9fa:	d8 01       	movw	r26, r16
   1a9fc:	6c 93       	st	X, r22
   1a9fe:	23 2b       	or	r18, r19
   1aa00:	24 2b       	or	r18, r20
   1aa02:	25 2b       	or	r18, r21
   1aa04:	61 f7       	brne	.-40     	; 0x1a9de <_ZN5Print11printNumberEmh+0x40>
   1aa06:	b8 01       	movw	r22, r16
   1aa08:	c7 01       	movw	r24, r14
   1aa0a:	0e 94 7a 85 	call	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   1aa0e:	a1 96       	adiw	r28, 0x21	; 33
   1aa10:	0f b6       	in	r0, 0x3f	; 63
   1aa12:	f8 94       	cli
   1aa14:	de bf       	out	0x3e, r29	; 62
   1aa16:	0f be       	out	0x3f, r0	; 63
   1aa18:	cd bf       	out	0x3d, r28	; 61
   1aa1a:	df 91       	pop	r29
   1aa1c:	cf 91       	pop	r28
   1aa1e:	1f 91       	pop	r17
   1aa20:	0f 91       	pop	r16
   1aa22:	ff 90       	pop	r15
   1aa24:	ef 90       	pop	r14
   1aa26:	bf 90       	pop	r11
   1aa28:	af 90       	pop	r10
   1aa2a:	9f 90       	pop	r9
   1aa2c:	8f 90       	pop	r8
   1aa2e:	08 95       	ret

0001aa30 <_ZN5Print5printEmi>:
   1aa30:	21 15       	cp	r18, r1
   1aa32:	31 05       	cpc	r19, r1
   1aa34:	41 f4       	brne	.+16     	; 0x1aa46 <_ZN5Print5printEmi+0x16>
   1aa36:	dc 01       	movw	r26, r24
   1aa38:	ed 91       	ld	r30, X+
   1aa3a:	fc 91       	ld	r31, X
   1aa3c:	01 90       	ld	r0, Z+
   1aa3e:	f0 81       	ld	r31, Z
   1aa40:	e0 2d       	mov	r30, r0
   1aa42:	64 2f       	mov	r22, r20
   1aa44:	19 94       	eijmp
   1aa46:	ab cf       	rjmp	.-170    	; 0x1a99e <_ZN5Print11printNumberEmh>

0001aa48 <_ZN5Print5printEhi>:
   1aa48:	9a 01       	movw	r18, r20
   1aa4a:	46 2f       	mov	r20, r22
   1aa4c:	50 e0       	ldi	r21, 0x00	; 0
   1aa4e:	60 e0       	ldi	r22, 0x00	; 0
   1aa50:	70 e0       	ldi	r23, 0x00	; 0
   1aa52:	ee cf       	rjmp	.-36     	; 0x1aa30 <_ZN5Print5printEmi>

0001aa54 <_ZN5Print7printlnEhi>:
   1aa54:	0f 93       	push	r16
   1aa56:	1f 93       	push	r17
   1aa58:	cf 93       	push	r28
   1aa5a:	df 93       	push	r29
   1aa5c:	ec 01       	movw	r28, r24
   1aa5e:	f4 df       	rcall	.-24     	; 0x1aa48 <_ZN5Print5printEhi>
   1aa60:	8c 01       	movw	r16, r24
   1aa62:	ce 01       	movw	r24, r28
   1aa64:	77 df       	rcall	.-274    	; 0x1a954 <_ZN5Print7printlnEv>
   1aa66:	80 0f       	add	r24, r16
   1aa68:	91 1f       	adc	r25, r17
   1aa6a:	df 91       	pop	r29
   1aa6c:	cf 91       	pop	r28
   1aa6e:	1f 91       	pop	r17
   1aa70:	0f 91       	pop	r16
   1aa72:	08 95       	ret

0001aa74 <_ZN5Print5printEji>:
   1aa74:	9a 01       	movw	r18, r20
   1aa76:	ab 01       	movw	r20, r22
   1aa78:	60 e0       	ldi	r22, 0x00	; 0
   1aa7a:	70 e0       	ldi	r23, 0x00	; 0
   1aa7c:	d9 cf       	rjmp	.-78     	; 0x1aa30 <_ZN5Print5printEmi>

0001aa7e <_ZN5Print7printlnEji>:
   1aa7e:	0f 93       	push	r16
   1aa80:	1f 93       	push	r17
   1aa82:	cf 93       	push	r28
   1aa84:	df 93       	push	r29
   1aa86:	ec 01       	movw	r28, r24
   1aa88:	f5 df       	rcall	.-22     	; 0x1aa74 <_ZN5Print5printEji>
   1aa8a:	8c 01       	movw	r16, r24
   1aa8c:	ce 01       	movw	r24, r28
   1aa8e:	62 df       	rcall	.-316    	; 0x1a954 <_ZN5Print7printlnEv>
   1aa90:	80 0f       	add	r24, r16
   1aa92:	91 1f       	adc	r25, r17
   1aa94:	df 91       	pop	r29
   1aa96:	cf 91       	pop	r28
   1aa98:	1f 91       	pop	r17
   1aa9a:	0f 91       	pop	r16
   1aa9c:	08 95       	ret

0001aa9e <_ZN5Print7printlnEmi>:
   1aa9e:	0f 93       	push	r16
   1aaa0:	1f 93       	push	r17
   1aaa2:	cf 93       	push	r28
   1aaa4:	df 93       	push	r29
   1aaa6:	ec 01       	movw	r28, r24
   1aaa8:	c3 df       	rcall	.-122    	; 0x1aa30 <_ZN5Print5printEmi>
   1aaaa:	8c 01       	movw	r16, r24
   1aaac:	ce 01       	movw	r24, r28
   1aaae:	52 df       	rcall	.-348    	; 0x1a954 <_ZN5Print7printlnEv>
   1aab0:	80 0f       	add	r24, r16
   1aab2:	91 1f       	adc	r25, r17
   1aab4:	df 91       	pop	r29
   1aab6:	cf 91       	pop	r28
   1aab8:	1f 91       	pop	r17
   1aaba:	0f 91       	pop	r16
   1aabc:	08 95       	ret

0001aabe <_ZN5Print5printEli>:
   1aabe:	cf 92       	push	r12
   1aac0:	df 92       	push	r13
   1aac2:	ef 92       	push	r14
   1aac4:	ff 92       	push	r15
   1aac6:	0f 93       	push	r16
   1aac8:	1f 93       	push	r17
   1aaca:	cf 93       	push	r28
   1aacc:	df 93       	push	r29
   1aace:	21 15       	cp	r18, r1
   1aad0:	31 05       	cpc	r19, r1
   1aad2:	81 f4       	brne	.+32     	; 0x1aaf4 <_ZN5Print5printEli+0x36>
   1aad4:	dc 01       	movw	r26, r24
   1aad6:	ed 91       	ld	r30, X+
   1aad8:	fc 91       	ld	r31, X
   1aada:	01 90       	ld	r0, Z+
   1aadc:	f0 81       	ld	r31, Z
   1aade:	e0 2d       	mov	r30, r0
   1aae0:	64 2f       	mov	r22, r20
   1aae2:	df 91       	pop	r29
   1aae4:	cf 91       	pop	r28
   1aae6:	1f 91       	pop	r17
   1aae8:	0f 91       	pop	r16
   1aaea:	ff 90       	pop	r15
   1aaec:	ef 90       	pop	r14
   1aaee:	df 90       	pop	r13
   1aaf0:	cf 90       	pop	r12
   1aaf2:	19 94       	eijmp
   1aaf4:	2a 30       	cpi	r18, 0x0A	; 10
   1aaf6:	31 05       	cpc	r19, r1
   1aaf8:	f1 f4       	brne	.+60     	; 0x1ab36 <_ZN5Print5printEli+0x78>
   1aafa:	77 ff       	sbrs	r23, 7
   1aafc:	1b c0       	rjmp	.+54     	; 0x1ab34 <_ZN5Print5printEli+0x76>
   1aafe:	6a 01       	movw	r12, r20
   1ab00:	7b 01       	movw	r14, r22
   1ab02:	ec 01       	movw	r28, r24
   1ab04:	6d e2       	ldi	r22, 0x2D	; 45
   1ab06:	1f df       	rcall	.-450    	; 0x1a946 <_ZN5Print5printEc>
   1ab08:	8c 01       	movw	r16, r24
   1ab0a:	44 27       	eor	r20, r20
   1ab0c:	55 27       	eor	r21, r21
   1ab0e:	ba 01       	movw	r22, r20
   1ab10:	4c 19       	sub	r20, r12
   1ab12:	5d 09       	sbc	r21, r13
   1ab14:	6e 09       	sbc	r22, r14
   1ab16:	7f 09       	sbc	r23, r15
   1ab18:	2a e0       	ldi	r18, 0x0A	; 10
   1ab1a:	ce 01       	movw	r24, r28
   1ab1c:	40 df       	rcall	.-384    	; 0x1a99e <_ZN5Print11printNumberEmh>
   1ab1e:	80 0f       	add	r24, r16
   1ab20:	91 1f       	adc	r25, r17
   1ab22:	df 91       	pop	r29
   1ab24:	cf 91       	pop	r28
   1ab26:	1f 91       	pop	r17
   1ab28:	0f 91       	pop	r16
   1ab2a:	ff 90       	pop	r15
   1ab2c:	ef 90       	pop	r14
   1ab2e:	df 90       	pop	r13
   1ab30:	cf 90       	pop	r12
   1ab32:	08 95       	ret
   1ab34:	2a e0       	ldi	r18, 0x0A	; 10
   1ab36:	df 91       	pop	r29
   1ab38:	cf 91       	pop	r28
   1ab3a:	1f 91       	pop	r17
   1ab3c:	0f 91       	pop	r16
   1ab3e:	ff 90       	pop	r15
   1ab40:	ef 90       	pop	r14
   1ab42:	df 90       	pop	r13
   1ab44:	cf 90       	pop	r12
   1ab46:	2b cf       	rjmp	.-426    	; 0x1a99e <_ZN5Print11printNumberEmh>

0001ab48 <_ZN5Print5printEii>:
   1ab48:	9a 01       	movw	r18, r20
   1ab4a:	ab 01       	movw	r20, r22
   1ab4c:	77 0f       	add	r23, r23
   1ab4e:	66 0b       	sbc	r22, r22
   1ab50:	77 0b       	sbc	r23, r23
   1ab52:	b5 cf       	rjmp	.-150    	; 0x1aabe <_ZN5Print5printEli>

0001ab54 <_ZN5Print7printlnEii>:
   1ab54:	0f 93       	push	r16
   1ab56:	1f 93       	push	r17
   1ab58:	cf 93       	push	r28
   1ab5a:	df 93       	push	r29
   1ab5c:	ec 01       	movw	r28, r24
   1ab5e:	f4 df       	rcall	.-24     	; 0x1ab48 <_ZN5Print5printEii>
   1ab60:	8c 01       	movw	r16, r24
   1ab62:	ce 01       	movw	r24, r28
   1ab64:	f7 de       	rcall	.-530    	; 0x1a954 <_ZN5Print7printlnEv>
   1ab66:	80 0f       	add	r24, r16
   1ab68:	91 1f       	adc	r25, r17
   1ab6a:	df 91       	pop	r29
   1ab6c:	cf 91       	pop	r28
   1ab6e:	1f 91       	pop	r17
   1ab70:	0f 91       	pop	r16
   1ab72:	08 95       	ret

0001ab74 <_ZN5Print10printFloatEdh>:
   1ab74:	7f 92       	push	r7
   1ab76:	8f 92       	push	r8
   1ab78:	9f 92       	push	r9
   1ab7a:	af 92       	push	r10
   1ab7c:	bf 92       	push	r11
   1ab7e:	cf 92       	push	r12
   1ab80:	df 92       	push	r13
   1ab82:	ef 92       	push	r14
   1ab84:	ff 92       	push	r15
   1ab86:	0f 93       	push	r16
   1ab88:	1f 93       	push	r17
   1ab8a:	cf 93       	push	r28
   1ab8c:	df 93       	push	r29
   1ab8e:	8c 01       	movw	r16, r24
   1ab90:	6a 01       	movw	r12, r20
   1ab92:	7b 01       	movw	r14, r22
   1ab94:	72 2e       	mov	r7, r18
   1ab96:	9a 01       	movw	r18, r20
   1ab98:	ab 01       	movw	r20, r22
   1ab9a:	c7 01       	movw	r24, r14
   1ab9c:	b6 01       	movw	r22, r12
   1ab9e:	0e 94 72 e9 	call	0x1d2e4	; 0x1d2e4 <__unordsf2>
   1aba2:	88 23       	and	r24, r24
   1aba4:	19 f0       	breq	.+6      	; 0x1abac <_ZN5Print10printFloatEdh+0x38>
   1aba6:	6d ee       	ldi	r22, 0xED	; 237
   1aba8:	77 e0       	ldi	r23, 0x07	; 7
   1abaa:	25 c0       	rjmp	.+74     	; 0x1abf6 <_ZN5Print10printFloatEdh+0x82>
   1abac:	46 01       	movw	r8, r12
   1abae:	57 01       	movw	r10, r14
   1abb0:	e8 94       	clt
   1abb2:	b7 f8       	bld	r11, 7
   1abb4:	2f ef       	ldi	r18, 0xFF	; 255
   1abb6:	3f ef       	ldi	r19, 0xFF	; 255
   1abb8:	4f e7       	ldi	r20, 0x7F	; 127
   1abba:	5f e7       	ldi	r21, 0x7F	; 127
   1abbc:	c5 01       	movw	r24, r10
   1abbe:	b4 01       	movw	r22, r8
   1abc0:	0e 94 72 e9 	call	0x1d2e4	; 0x1d2e4 <__unordsf2>
   1abc4:	81 11       	cpse	r24, r1
   1abc6:	0c c0       	rjmp	.+24     	; 0x1abe0 <_ZN5Print10printFloatEdh+0x6c>
   1abc8:	2f ef       	ldi	r18, 0xFF	; 255
   1abca:	3f ef       	ldi	r19, 0xFF	; 255
   1abcc:	4f e7       	ldi	r20, 0x7F	; 127
   1abce:	5f e7       	ldi	r21, 0x7F	; 127
   1abd0:	c5 01       	movw	r24, r10
   1abd2:	b4 01       	movw	r22, r8
   1abd4:	c8 da       	rcall	.-2672   	; 0x1a166 <__cmpsf2>
   1abd6:	18 16       	cp	r1, r24
   1abd8:	1c f4       	brge	.+6      	; 0x1abe0 <_ZN5Print10printFloatEdh+0x6c>
   1abda:	61 ef       	ldi	r22, 0xF1	; 241
   1abdc:	77 e0       	ldi	r23, 0x07	; 7
   1abde:	0b c0       	rjmp	.+22     	; 0x1abf6 <_ZN5Print10printFloatEdh+0x82>
   1abe0:	2f ef       	ldi	r18, 0xFF	; 255
   1abe2:	3f ef       	ldi	r19, 0xFF	; 255
   1abe4:	4f e7       	ldi	r20, 0x7F	; 127
   1abe6:	5f e4       	ldi	r21, 0x4F	; 79
   1abe8:	c7 01       	movw	r24, r14
   1abea:	b6 01       	movw	r22, r12
   1abec:	06 dc       	rcall	.-2036   	; 0x1a3fa <__gesf2>
   1abee:	18 16       	cp	r1, r24
   1abf0:	94 f4       	brge	.+36     	; 0x1ac16 <_ZN5Print10printFloatEdh+0xa2>
   1abf2:	65 ef       	ldi	r22, 0xF5	; 245
   1abf4:	77 e0       	ldi	r23, 0x07	; 7
   1abf6:	c8 01       	movw	r24, r16
   1abf8:	df 91       	pop	r29
   1abfa:	cf 91       	pop	r28
   1abfc:	1f 91       	pop	r17
   1abfe:	0f 91       	pop	r16
   1ac00:	ff 90       	pop	r15
   1ac02:	ef 90       	pop	r14
   1ac04:	df 90       	pop	r13
   1ac06:	cf 90       	pop	r12
   1ac08:	bf 90       	pop	r11
   1ac0a:	af 90       	pop	r10
   1ac0c:	9f 90       	pop	r9
   1ac0e:	8f 90       	pop	r8
   1ac10:	7f 90       	pop	r7
   1ac12:	0c 94 7a 85 	jmp	0x10af4	; 0x10af4 <_ZN5Print5writeEPKc>
   1ac16:	2f ef       	ldi	r18, 0xFF	; 255
   1ac18:	3f ef       	ldi	r19, 0xFF	; 255
   1ac1a:	4f e7       	ldi	r20, 0x7F	; 127
   1ac1c:	5f ec       	ldi	r21, 0xCF	; 207
   1ac1e:	c7 01       	movw	r24, r14
   1ac20:	b6 01       	movw	r22, r12
   1ac22:	a1 da       	rcall	.-2750   	; 0x1a166 <__cmpsf2>
   1ac24:	87 fd       	sbrc	r24, 7
   1ac26:	e5 cf       	rjmp	.-54     	; 0x1abf2 <_ZN5Print10printFloatEdh+0x7e>
   1ac28:	20 e0       	ldi	r18, 0x00	; 0
   1ac2a:	30 e0       	ldi	r19, 0x00	; 0
   1ac2c:	a9 01       	movw	r20, r18
   1ac2e:	c7 01       	movw	r24, r14
   1ac30:	b6 01       	movw	r22, r12
   1ac32:	99 da       	rcall	.-2766   	; 0x1a166 <__cmpsf2>
   1ac34:	87 ff       	sbrs	r24, 7
   1ac36:	09 c0       	rjmp	.+18     	; 0x1ac4a <_ZN5Print10printFloatEdh+0xd6>
   1ac38:	6d e2       	ldi	r22, 0x2D	; 45
   1ac3a:	c8 01       	movw	r24, r16
   1ac3c:	84 de       	rcall	.-760    	; 0x1a946 <_ZN5Print5printEc>
   1ac3e:	ec 01       	movw	r28, r24
   1ac40:	f7 fa       	bst	r15, 7
   1ac42:	f0 94       	com	r15
   1ac44:	f7 f8       	bld	r15, 7
   1ac46:	f0 94       	com	r15
   1ac48:	02 c0       	rjmp	.+4      	; 0x1ac4e <_ZN5Print10printFloatEdh+0xda>
   1ac4a:	c0 e0       	ldi	r28, 0x00	; 0
   1ac4c:	d0 e0       	ldi	r29, 0x00	; 0
   1ac4e:	b1 2c       	mov	r11, r1
   1ac50:	60 e0       	ldi	r22, 0x00	; 0
   1ac52:	70 e0       	ldi	r23, 0x00	; 0
   1ac54:	80 e0       	ldi	r24, 0x00	; 0
   1ac56:	9f e3       	ldi	r25, 0x3F	; 63
   1ac58:	7b 14       	cp	r7, r11
   1ac5a:	39 f0       	breq	.+14     	; 0x1ac6a <_ZN5Print10printFloatEdh+0xf6>
   1ac5c:	20 e0       	ldi	r18, 0x00	; 0
   1ac5e:	30 e0       	ldi	r19, 0x00	; 0
   1ac60:	40 e2       	ldi	r20, 0x20	; 32
   1ac62:	51 e4       	ldi	r21, 0x41	; 65
   1ac64:	84 da       	rcall	.-2808   	; 0x1a16e <__divsf3>
   1ac66:	b3 94       	inc	r11
   1ac68:	f7 cf       	rjmp	.-18     	; 0x1ac58 <_ZN5Print10printFloatEdh+0xe4>
   1ac6a:	a7 01       	movw	r20, r14
   1ac6c:	96 01       	movw	r18, r12
   1ac6e:	17 da       	rcall	.-3026   	; 0x1a09e <__addsf3>
   1ac70:	6b 01       	movw	r12, r22
   1ac72:	7c 01       	movw	r14, r24
   1ac74:	e4 da       	rcall	.-2616   	; 0x1a23e <__fixunssfsi>
   1ac76:	4b 01       	movw	r8, r22
   1ac78:	5c 01       	movw	r10, r24
   1ac7a:	2a e0       	ldi	r18, 0x0A	; 10
   1ac7c:	ab 01       	movw	r20, r22
   1ac7e:	bc 01       	movw	r22, r24
   1ac80:	c8 01       	movw	r24, r16
   1ac82:	8d de       	rcall	.-742    	; 0x1a99e <_ZN5Print11printNumberEmh>
   1ac84:	c8 0f       	add	r28, r24
   1ac86:	d9 1f       	adc	r29, r25
   1ac88:	77 20       	and	r7, r7
   1ac8a:	79 f1       	breq	.+94     	; 0x1acea <_ZN5Print10printFloatEdh+0x176>
   1ac8c:	c5 01       	movw	r24, r10
   1ac8e:	b4 01       	movw	r22, r8
   1ac90:	02 db       	rcall	.-2556   	; 0x1a296 <__floatunsisf>
   1ac92:	9b 01       	movw	r18, r22
   1ac94:	ac 01       	movw	r20, r24
   1ac96:	c7 01       	movw	r24, r14
   1ac98:	b6 01       	movw	r22, r12
   1ac9a:	00 da       	rcall	.-3072   	; 0x1a09c <__subsf3>
   1ac9c:	6b 01       	movw	r12, r22
   1ac9e:	7c 01       	movw	r14, r24
   1aca0:	6e e2       	ldi	r22, 0x2E	; 46
   1aca2:	c8 01       	movw	r24, r16
   1aca4:	50 de       	rcall	.-864    	; 0x1a946 <_ZN5Print5printEc>
   1aca6:	c8 0f       	add	r28, r24
   1aca8:	d9 1f       	adc	r29, r25
   1acaa:	20 e0       	ldi	r18, 0x00	; 0
   1acac:	30 e0       	ldi	r19, 0x00	; 0
   1acae:	40 e2       	ldi	r20, 0x20	; 32
   1acb0:	51 e4       	ldi	r21, 0x41	; 65
   1acb2:	c7 01       	movw	r24, r14
   1acb4:	b6 01       	movw	r22, r12
   1acb6:	a5 db       	rcall	.-2230   	; 0x1a402 <__mulsf3>
   1acb8:	4b 01       	movw	r8, r22
   1acba:	5c 01       	movw	r10, r24
   1acbc:	c0 da       	rcall	.-2688   	; 0x1a23e <__fixunssfsi>
   1acbe:	6b 01       	movw	r12, r22
   1acc0:	7c 01       	movw	r14, r24
   1acc2:	4a e0       	ldi	r20, 0x0A	; 10
   1acc4:	50 e0       	ldi	r21, 0x00	; 0
   1acc6:	c8 01       	movw	r24, r16
   1acc8:	d5 de       	rcall	.-598    	; 0x1aa74 <_ZN5Print5printEji>
   1acca:	c8 0f       	add	r28, r24
   1accc:	d9 1f       	adc	r29, r25
   1acce:	b6 01       	movw	r22, r12
   1acd0:	80 e0       	ldi	r24, 0x00	; 0
   1acd2:	90 e0       	ldi	r25, 0x00	; 0
   1acd4:	e0 da       	rcall	.-2624   	; 0x1a296 <__floatunsisf>
   1acd6:	9b 01       	movw	r18, r22
   1acd8:	ac 01       	movw	r20, r24
   1acda:	c5 01       	movw	r24, r10
   1acdc:	b4 01       	movw	r22, r8
   1acde:	de d9       	rcall	.-3140   	; 0x1a09c <__subsf3>
   1ace0:	6b 01       	movw	r12, r22
   1ace2:	7c 01       	movw	r14, r24
   1ace4:	7a 94       	dec	r7
   1ace6:	71 10       	cpse	r7, r1
   1ace8:	e0 cf       	rjmp	.-64     	; 0x1acaa <_ZN5Print10printFloatEdh+0x136>
   1acea:	ce 01       	movw	r24, r28
   1acec:	df 91       	pop	r29
   1acee:	cf 91       	pop	r28
   1acf0:	1f 91       	pop	r17
   1acf2:	0f 91       	pop	r16
   1acf4:	ff 90       	pop	r15
   1acf6:	ef 90       	pop	r14
   1acf8:	df 90       	pop	r13
   1acfa:	cf 90       	pop	r12
   1acfc:	bf 90       	pop	r11
   1acfe:	af 90       	pop	r10
   1ad00:	9f 90       	pop	r9
   1ad02:	8f 90       	pop	r8
   1ad04:	7f 90       	pop	r7
   1ad06:	08 95       	ret

0001ad08 <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
   1ad08:	0f 93       	push	r16
   1ad0a:	1f 93       	push	r17
   1ad0c:	cf 93       	push	r28
   1ad0e:	df 93       	push	r29
   1ad10:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1ad12:	30 df       	rcall	.-416    	; 0x1ab74 <_ZN5Print10printFloatEdh>
   1ad14:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
   1ad16:	ce 01       	movw	r24, r28
   1ad18:	1d de       	rcall	.-966    	; 0x1a954 <_ZN5Print7printlnEv>
  return n;
}
   1ad1a:	80 0f       	add	r24, r16
   1ad1c:	91 1f       	adc	r25, r17
   1ad1e:	df 91       	pop	r29
   1ad20:	cf 91       	pop	r28
   1ad22:	1f 91       	pop	r17
   1ad24:	0f 91       	pop	r16
   1ad26:	08 95       	ret

0001ad28 <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
   1ad28:	1f 92       	push	r1
   1ad2a:	0f 92       	push	r0
   1ad2c:	0f b6       	in	r0, 0x3f	; 63
   1ad2e:	0f 92       	push	r0
   1ad30:	11 24       	eor	r1, r1
   1ad32:	2f 93       	push	r18
   1ad34:	3f 93       	push	r19
   1ad36:	8f 93       	push	r24
   1ad38:	9f 93       	push	r25
   1ad3a:	af 93       	push	r26
   1ad3c:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
   1ad3e:	80 91 41 18 	lds	r24, 0x1841	; 0x801841 <timer0_millis>
   1ad42:	90 91 42 18 	lds	r25, 0x1842	; 0x801842 <timer0_millis+0x1>
   1ad46:	a0 91 43 18 	lds	r26, 0x1843	; 0x801843 <timer0_millis+0x2>
   1ad4a:	b0 91 44 18 	lds	r27, 0x1844	; 0x801844 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
   1ad4e:	30 91 40 18 	lds	r19, 0x1840	; 0x801840 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
   1ad52:	23 e0       	ldi	r18, 0x03	; 3
   1ad54:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
   1ad56:	2d 37       	cpi	r18, 0x7D	; 125
   1ad58:	20 f4       	brcc	.+8      	; 0x1ad62 <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
   1ad5a:	01 96       	adiw	r24, 0x01	; 1
   1ad5c:	a1 1d       	adc	r26, r1
   1ad5e:	b1 1d       	adc	r27, r1
   1ad60:	05 c0       	rjmp	.+10     	; 0x1ad6c <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
   1ad62:	26 e8       	ldi	r18, 0x86	; 134
   1ad64:	23 0f       	add	r18, r19
		m += 1;
   1ad66:	02 96       	adiw	r24, 0x02	; 2
   1ad68:	a1 1d       	adc	r26, r1
   1ad6a:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
   1ad6c:	20 93 40 18 	sts	0x1840, r18	; 0x801840 <timer0_fract>
	timer0_millis = m;
   1ad70:	80 93 41 18 	sts	0x1841, r24	; 0x801841 <timer0_millis>
   1ad74:	90 93 42 18 	sts	0x1842, r25	; 0x801842 <timer0_millis+0x1>
   1ad78:	a0 93 43 18 	sts	0x1843, r26	; 0x801843 <timer0_millis+0x2>
   1ad7c:	b0 93 44 18 	sts	0x1844, r27	; 0x801844 <timer0_millis+0x3>
	timer0_overflow_count++;
   1ad80:	80 91 45 18 	lds	r24, 0x1845	; 0x801845 <timer0_overflow_count>
   1ad84:	90 91 46 18 	lds	r25, 0x1846	; 0x801846 <timer0_overflow_count+0x1>
   1ad88:	a0 91 47 18 	lds	r26, 0x1847	; 0x801847 <timer0_overflow_count+0x2>
   1ad8c:	b0 91 48 18 	lds	r27, 0x1848	; 0x801848 <timer0_overflow_count+0x3>
   1ad90:	01 96       	adiw	r24, 0x01	; 1
   1ad92:	a1 1d       	adc	r26, r1
   1ad94:	b1 1d       	adc	r27, r1
   1ad96:	80 93 45 18 	sts	0x1845, r24	; 0x801845 <timer0_overflow_count>
   1ad9a:	90 93 46 18 	sts	0x1846, r25	; 0x801846 <timer0_overflow_count+0x1>
   1ad9e:	a0 93 47 18 	sts	0x1847, r26	; 0x801847 <timer0_overflow_count+0x2>
   1ada2:	b0 93 48 18 	sts	0x1848, r27	; 0x801848 <timer0_overflow_count+0x3>
}
   1ada6:	bf 91       	pop	r27
   1ada8:	af 91       	pop	r26
   1adaa:	9f 91       	pop	r25
   1adac:	8f 91       	pop	r24
   1adae:	3f 91       	pop	r19
   1adb0:	2f 91       	pop	r18
   1adb2:	0f 90       	pop	r0
   1adb4:	0f be       	out	0x3f, r0	; 63
   1adb6:	0f 90       	pop	r0
   1adb8:	1f 90       	pop	r1
   1adba:	18 95       	reti

0001adbc <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
   1adbc:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
   1adbe:	f8 94       	cli
	m = timer0_millis;
   1adc0:	60 91 41 18 	lds	r22, 0x1841	; 0x801841 <timer0_millis>
   1adc4:	70 91 42 18 	lds	r23, 0x1842	; 0x801842 <timer0_millis+0x1>
   1adc8:	80 91 43 18 	lds	r24, 0x1843	; 0x801843 <timer0_millis+0x2>
   1adcc:	90 91 44 18 	lds	r25, 0x1844	; 0x801844 <timer0_millis+0x3>
	SREG = oldSREG;
   1add0:	2f bf       	out	0x3f, r18	; 63

	return m;
}
   1add2:	08 95       	ret

0001add4 <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
   1add4:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
   1add6:	f8 94       	cli
	m = timer0_overflow_count;
   1add8:	80 91 45 18 	lds	r24, 0x1845	; 0x801845 <timer0_overflow_count>
   1addc:	90 91 46 18 	lds	r25, 0x1846	; 0x801846 <timer0_overflow_count+0x1>
   1ade0:	a0 91 47 18 	lds	r26, 0x1847	; 0x801847 <timer0_overflow_count+0x2>
   1ade4:	b0 91 48 18 	lds	r27, 0x1848	; 0x801848 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
   1ade8:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
   1adea:	a8 9b       	sbis	0x15, 0	; 21
   1adec:	05 c0       	rjmp	.+10     	; 0x1adf8 <micros+0x24>
   1adee:	2f 3f       	cpi	r18, 0xFF	; 255
   1adf0:	19 f0       	breq	.+6      	; 0x1adf8 <micros+0x24>
		m++;
   1adf2:	01 96       	adiw	r24, 0x01	; 1
   1adf4:	a1 1d       	adc	r26, r1
   1adf6:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
   1adf8:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
   1adfa:	ba 2f       	mov	r27, r26
   1adfc:	a9 2f       	mov	r26, r25
   1adfe:	98 2f       	mov	r25, r24
   1ae00:	88 27       	eor	r24, r24
   1ae02:	82 0f       	add	r24, r18
   1ae04:	91 1d       	adc	r25, r1
   1ae06:	a1 1d       	adc	r26, r1
   1ae08:	b1 1d       	adc	r27, r1
   1ae0a:	bc 01       	movw	r22, r24
   1ae0c:	cd 01       	movw	r24, r26
   1ae0e:	42 e0       	ldi	r20, 0x02	; 2
   1ae10:	66 0f       	add	r22, r22
   1ae12:	77 1f       	adc	r23, r23
   1ae14:	88 1f       	adc	r24, r24
   1ae16:	99 1f       	adc	r25, r25
   1ae18:	4a 95       	dec	r20
   1ae1a:	d1 f7       	brne	.-12     	; 0x1ae10 <micros+0x3c>
}
   1ae1c:	08 95       	ret

0001ae1e <delay>:

void delay(unsigned long ms)
{
   1ae1e:	8f 92       	push	r8
   1ae20:	9f 92       	push	r9
   1ae22:	af 92       	push	r10
   1ae24:	bf 92       	push	r11
   1ae26:	cf 92       	push	r12
   1ae28:	df 92       	push	r13
   1ae2a:	ef 92       	push	r14
   1ae2c:	ff 92       	push	r15
   1ae2e:	6b 01       	movw	r12, r22
   1ae30:	7c 01       	movw	r14, r24
	uint32_t start = micros();
   1ae32:	d0 df       	rcall	.-96     	; 0x1add4 <micros>
   1ae34:	4b 01       	movw	r8, r22
   1ae36:	5c 01       	movw	r10, r24

	while (ms > 0) {
   1ae38:	c1 14       	cp	r12, r1
   1ae3a:	d1 04       	cpc	r13, r1
   1ae3c:	e1 04       	cpc	r14, r1
   1ae3e:	f1 04       	cpc	r15, r1
   1ae40:	f9 f0       	breq	.+62     	; 0x1ae80 <delay+0x62>
		yield();
   1ae42:	0e 94 3d e2 	call	0x1c47a	; 0x1c47a <yield>
		while ( ms > 0 && (micros() - start) >= 1000) {
   1ae46:	c6 df       	rcall	.-116    	; 0x1add4 <micros>
   1ae48:	dc 01       	movw	r26, r24
   1ae4a:	cb 01       	movw	r24, r22
   1ae4c:	88 19       	sub	r24, r8
   1ae4e:	99 09       	sbc	r25, r9
   1ae50:	aa 09       	sbc	r26, r10
   1ae52:	bb 09       	sbc	r27, r11
   1ae54:	88 3e       	cpi	r24, 0xE8	; 232
   1ae56:	93 40       	sbci	r25, 0x03	; 3
   1ae58:	a1 05       	cpc	r26, r1
   1ae5a:	b1 05       	cpc	r27, r1
   1ae5c:	68 f3       	brcs	.-38     	; 0x1ae38 <delay+0x1a>
			ms--;
   1ae5e:	21 e0       	ldi	r18, 0x01	; 1
   1ae60:	c2 1a       	sub	r12, r18
   1ae62:	d1 08       	sbc	r13, r1
   1ae64:	e1 08       	sbc	r14, r1
   1ae66:	f1 08       	sbc	r15, r1
			start += 1000;
   1ae68:	88 ee       	ldi	r24, 0xE8	; 232
   1ae6a:	88 0e       	add	r8, r24
   1ae6c:	83 e0       	ldi	r24, 0x03	; 3
   1ae6e:	98 1e       	adc	r9, r24
   1ae70:	a1 1c       	adc	r10, r1
   1ae72:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
   1ae74:	c1 14       	cp	r12, r1
   1ae76:	d1 04       	cpc	r13, r1
   1ae78:	e1 04       	cpc	r14, r1
   1ae7a:	f1 04       	cpc	r15, r1
   1ae7c:	21 f7       	brne	.-56     	; 0x1ae46 <delay+0x28>
   1ae7e:	dc cf       	rjmp	.-72     	; 0x1ae38 <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
   1ae80:	ff 90       	pop	r15
   1ae82:	ef 90       	pop	r14
   1ae84:	df 90       	pop	r13
   1ae86:	cf 90       	pop	r12
   1ae88:	bf 90       	pop	r11
   1ae8a:	af 90       	pop	r10
   1ae8c:	9f 90       	pop	r9
   1ae8e:	8f 90       	pop	r8
   1ae90:	08 95       	ret

0001ae92 <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
   1ae92:	82 30       	cpi	r24, 0x02	; 2
   1ae94:	91 05       	cpc	r25, r1
   1ae96:	38 f0       	brcs	.+14     	; 0x1aea6 <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
   1ae98:	88 0f       	add	r24, r24
   1ae9a:	99 1f       	adc	r25, r25
   1ae9c:	88 0f       	add	r24, r24
   1ae9e:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
   1aea0:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
   1aea2:	01 97       	sbiw	r24, 0x01	; 1
   1aea4:	f1 f7       	brne	.-4      	; 0x1aea2 <delayMicroseconds+0x10>
   1aea6:	08 95       	ret

0001aea8 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
   1aea8:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
   1aeaa:	84 b5       	in	r24, 0x24	; 36
   1aeac:	82 60       	ori	r24, 0x02	; 2
   1aeae:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
   1aeb0:	84 b5       	in	r24, 0x24	; 36
   1aeb2:	81 60       	ori	r24, 0x01	; 1
   1aeb4:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
   1aeb6:	85 b5       	in	r24, 0x25	; 37
   1aeb8:	82 60       	ori	r24, 0x02	; 2
   1aeba:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
   1aebc:	85 b5       	in	r24, 0x25	; 37
   1aebe:	81 60       	ori	r24, 0x01	; 1
   1aec0:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
   1aec2:	ee e6       	ldi	r30, 0x6E	; 110
   1aec4:	f0 e0       	ldi	r31, 0x00	; 0
   1aec6:	80 81       	ld	r24, Z
   1aec8:	81 60       	ori	r24, 0x01	; 1
   1aeca:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
   1aecc:	e1 e8       	ldi	r30, 0x81	; 129
   1aece:	f0 e0       	ldi	r31, 0x00	; 0
   1aed0:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
   1aed2:	80 81       	ld	r24, Z
   1aed4:	82 60       	ori	r24, 0x02	; 2
   1aed6:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
   1aed8:	80 81       	ld	r24, Z
   1aeda:	81 60       	ori	r24, 0x01	; 1
   1aedc:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
   1aede:	e0 e8       	ldi	r30, 0x80	; 128
   1aee0:	f0 e0       	ldi	r31, 0x00	; 0
   1aee2:	80 81       	ld	r24, Z
   1aee4:	81 60       	ori	r24, 0x01	; 1
   1aee6:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
   1aee8:	e1 eb       	ldi	r30, 0xB1	; 177
   1aeea:	f0 e0       	ldi	r31, 0x00	; 0
   1aeec:	80 81       	ld	r24, Z
   1aeee:	84 60       	ori	r24, 0x04	; 4
   1aef0:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
   1aef2:	e0 eb       	ldi	r30, 0xB0	; 176
   1aef4:	f0 e0       	ldi	r31, 0x00	; 0
   1aef6:	80 81       	ld	r24, Z
   1aef8:	81 60       	ori	r24, 0x01	; 1
   1aefa:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
   1aefc:	e1 e9       	ldi	r30, 0x91	; 145
   1aefe:	f0 e0       	ldi	r31, 0x00	; 0
   1af00:	80 81       	ld	r24, Z
   1af02:	82 60       	ori	r24, 0x02	; 2
   1af04:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
   1af06:	80 81       	ld	r24, Z
   1af08:	81 60       	ori	r24, 0x01	; 1
   1af0a:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
   1af0c:	e0 e9       	ldi	r30, 0x90	; 144
   1af0e:	f0 e0       	ldi	r31, 0x00	; 0
   1af10:	80 81       	ld	r24, Z
   1af12:	81 60       	ori	r24, 0x01	; 1
   1af14:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
   1af16:	e1 ea       	ldi	r30, 0xA1	; 161
   1af18:	f0 e0       	ldi	r31, 0x00	; 0
   1af1a:	80 81       	ld	r24, Z
   1af1c:	82 60       	ori	r24, 0x02	; 2
   1af1e:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
   1af20:	80 81       	ld	r24, Z
   1af22:	81 60       	ori	r24, 0x01	; 1
   1af24:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
   1af26:	e0 ea       	ldi	r30, 0xA0	; 160
   1af28:	f0 e0       	ldi	r31, 0x00	; 0
   1af2a:	80 81       	ld	r24, Z
   1af2c:	81 60       	ori	r24, 0x01	; 1
   1af2e:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
   1af30:	e1 e2       	ldi	r30, 0x21	; 33
   1af32:	f1 e0       	ldi	r31, 0x01	; 1
   1af34:	80 81       	ld	r24, Z
   1af36:	82 60       	ori	r24, 0x02	; 2
   1af38:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
   1af3a:	80 81       	ld	r24, Z
   1af3c:	81 60       	ori	r24, 0x01	; 1
   1af3e:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
   1af40:	e0 e2       	ldi	r30, 0x20	; 32
   1af42:	f1 e0       	ldi	r31, 0x01	; 1
   1af44:	80 81       	ld	r24, Z
   1af46:	81 60       	ori	r24, 0x01	; 1
   1af48:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
   1af4a:	ea e7       	ldi	r30, 0x7A	; 122
   1af4c:	f0 e0       	ldi	r31, 0x00	; 0
   1af4e:	80 81       	ld	r24, Z
   1af50:	84 60       	ori	r24, 0x04	; 4
   1af52:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
   1af54:	80 81       	ld	r24, Z
   1af56:	82 60       	ori	r24, 0x02	; 2
   1af58:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
   1af5a:	80 81       	ld	r24, Z
   1af5c:	81 60       	ori	r24, 0x01	; 1
   1af5e:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
   1af60:	80 81       	ld	r24, Z
   1af62:	80 68       	ori	r24, 0x80	; 128
   1af64:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
   1af66:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
   1af6a:	08 95       	ret

0001af6c <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
   1af6c:	90 e0       	ldi	r25, 0x00	; 0
   1af6e:	fc 01       	movw	r30, r24
   1af70:	31 97       	sbiw	r30, 0x01	; 1
   1af72:	e2 31       	cpi	r30, 0x12	; 18
   1af74:	f1 05       	cpc	r31, r1
   1af76:	08 f0       	brcs	.+2      	; 0x1af7a <turnOffPWM+0xe>
   1af78:	4e c0       	rjmp	.+156    	; 0x1b016 <turnOffPWM+0xaa>
   1af7a:	88 27       	eor	r24, r24
   1af7c:	e9 50       	subi	r30, 0x09	; 9
   1af7e:	ff 4f       	sbci	r31, 0xFF	; 255
   1af80:	8f 4f       	sbci	r24, 0xFF	; 255
   1af82:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
   1af86:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1af8a:	8f 77       	andi	r24, 0x7F	; 127
   1af8c:	03 c0       	rjmp	.+6      	; 0x1af94 <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
   1af8e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1af92:	8f 7d       	andi	r24, 0xDF	; 223
   1af94:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1af98:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
   1af9a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1af9e:	87 7f       	andi	r24, 0xF7	; 247
   1afa0:	f9 cf       	rjmp	.-14     	; 0x1af94 <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
   1afa2:	84 b5       	in	r24, 0x24	; 36
   1afa4:	8f 77       	andi	r24, 0x7F	; 127
   1afa6:	02 c0       	rjmp	.+4      	; 0x1afac <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
   1afa8:	84 b5       	in	r24, 0x24	; 36
   1afaa:	8f 7d       	andi	r24, 0xDF	; 223
   1afac:	84 bd       	out	0x24, r24	; 36
   1afae:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
   1afb0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1afb4:	8f 77       	andi	r24, 0x7F	; 127
   1afb6:	03 c0       	rjmp	.+6      	; 0x1afbe <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
   1afb8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1afbc:	8f 7d       	andi	r24, 0xDF	; 223
   1afbe:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1afc2:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
   1afc4:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1afc8:	8f 77       	andi	r24, 0x7F	; 127
   1afca:	07 c0       	rjmp	.+14     	; 0x1afda <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
   1afcc:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1afd0:	8f 7d       	andi	r24, 0xDF	; 223
   1afd2:	03 c0       	rjmp	.+6      	; 0x1afda <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
   1afd4:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1afd8:	87 7f       	andi	r24, 0xF7	; 247
   1afda:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1afde:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
   1afe0:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1afe4:	8f 77       	andi	r24, 0x7F	; 127
   1afe6:	07 c0       	rjmp	.+14     	; 0x1aff6 <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
   1afe8:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1afec:	8f 7d       	andi	r24, 0xDF	; 223
   1afee:	03 c0       	rjmp	.+6      	; 0x1aff6 <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
   1aff0:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1aff4:	87 7f       	andi	r24, 0xF7	; 247
   1aff6:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1affa:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
   1affc:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b000:	8f 77       	andi	r24, 0x7F	; 127
   1b002:	07 c0       	rjmp	.+14     	; 0x1b012 <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
   1b004:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b008:	8f 7d       	andi	r24, 0xDF	; 223
   1b00a:	03 c0       	rjmp	.+6      	; 0x1b012 <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
   1b00c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b010:	87 7f       	andi	r24, 0xF7	; 247
   1b012:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b016:	08 95       	ret

0001b018 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
   1b018:	cf 93       	push	r28
   1b01a:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
   1b01c:	90 e0       	ldi	r25, 0x00	; 0
   1b01e:	fc 01       	movw	r30, r24
   1b020:	e8 5d       	subi	r30, 0xD8	; 216
   1b022:	f9 4b       	sbci	r31, 0xB9	; 185
   1b024:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
   1b026:	fc 01       	movw	r30, r24
   1b028:	e2 59       	subi	r30, 0x92	; 146
   1b02a:	f9 4b       	sbci	r31, 0xB9	; 185
   1b02c:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
   1b02e:	88 23       	and	r24, r24
   1b030:	61 f1       	breq	.+88     	; 0x1b08a <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
   1b032:	90 e0       	ldi	r25, 0x00	; 0
   1b034:	88 0f       	add	r24, r24
   1b036:	99 1f       	adc	r25, r25
   1b038:	fc 01       	movw	r30, r24
   1b03a:	e8 51       	subi	r30, 0x18	; 24
   1b03c:	f9 4b       	sbci	r31, 0xB9	; 185
   1b03e:	c5 91       	lpm	r28, Z+
   1b040:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
   1b042:	fc 01       	movw	r30, r24
   1b044:	e2 53       	subi	r30, 0x32	; 50
   1b046:	f9 4b       	sbci	r31, 0xB9	; 185
   1b048:	a5 91       	lpm	r26, Z+
   1b04a:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
   1b04c:	61 11       	cpse	r22, r1
   1b04e:	09 c0       	rjmp	.+18     	; 0x1b062 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
   1b050:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1b052:	f8 94       	cli
		*reg &= ~bit;
   1b054:	88 81       	ld	r24, Y
   1b056:	20 95       	com	r18
   1b058:	82 23       	and	r24, r18
   1b05a:	88 83       	st	Y, r24
		*out &= ~bit;
   1b05c:	ec 91       	ld	r30, X
   1b05e:	2e 23       	and	r18, r30
   1b060:	0b c0       	rjmp	.+22     	; 0x1b078 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
   1b062:	62 30       	cpi	r22, 0x02	; 2
   1b064:	61 f4       	brne	.+24     	; 0x1b07e <pinMode+0x66>
		uint8_t oldSREG = SREG;
   1b066:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1b068:	f8 94       	cli
		*reg &= ~bit;
   1b06a:	88 81       	ld	r24, Y
   1b06c:	32 2f       	mov	r19, r18
   1b06e:	30 95       	com	r19
   1b070:	83 23       	and	r24, r19
   1b072:	88 83       	st	Y, r24
		*out |= bit;
   1b074:	ec 91       	ld	r30, X
   1b076:	2e 2b       	or	r18, r30
   1b078:	2c 93       	st	X, r18
		SREG = oldSREG;
   1b07a:	9f bf       	out	0x3f, r25	; 63
   1b07c:	06 c0       	rjmp	.+12     	; 0x1b08a <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
   1b07e:	8f b7       	in	r24, 0x3f	; 63
                cli();
   1b080:	f8 94       	cli
		*reg |= bit;
   1b082:	e8 81       	ld	r30, Y
   1b084:	2e 2b       	or	r18, r30
   1b086:	28 83       	st	Y, r18
		SREG = oldSREG;
   1b088:	8f bf       	out	0x3f, r24	; 63
	}
}
   1b08a:	df 91       	pop	r29
   1b08c:	cf 91       	pop	r28
   1b08e:	08 95       	ret

0001b090 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
   1b090:	1f 93       	push	r17
   1b092:	cf 93       	push	r28
   1b094:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1b096:	28 2f       	mov	r18, r24
   1b098:	30 e0       	ldi	r19, 0x00	; 0
   1b09a:	f9 01       	movw	r30, r18
   1b09c:	ee 51       	subi	r30, 0x1E	; 30
   1b09e:	fa 4b       	sbci	r31, 0xBA	; 186
   1b0a0:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1b0a2:	f9 01       	movw	r30, r18
   1b0a4:	e8 5d       	subi	r30, 0xD8	; 216
   1b0a6:	f9 4b       	sbci	r31, 0xB9	; 185
   1b0a8:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1b0aa:	f9 01       	movw	r30, r18
   1b0ac:	e2 59       	subi	r30, 0x92	; 146
   1b0ae:	f9 4b       	sbci	r31, 0xB9	; 185
   1b0b0:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
   1b0b2:	cc 23       	and	r28, r28
   1b0b4:	b9 f0       	breq	.+46     	; 0x1b0e4 <digitalWrite+0x54>
   1b0b6:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1b0b8:	81 11       	cpse	r24, r1
   1b0ba:	58 df       	rcall	.-336    	; 0x1af6c <turnOffPWM>

	out = portOutputRegister(port);
   1b0bc:	ec 2f       	mov	r30, r28
   1b0be:	f0 e0       	ldi	r31, 0x00	; 0
   1b0c0:	ee 0f       	add	r30, r30
   1b0c2:	ff 1f       	adc	r31, r31
   1b0c4:	e2 53       	subi	r30, 0x32	; 50
   1b0c6:	f9 4b       	sbci	r31, 0xB9	; 185
   1b0c8:	a5 91       	lpm	r26, Z+
   1b0ca:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
   1b0cc:	9f b7       	in	r25, 0x3f	; 63
	cli();
   1b0ce:	f8 94       	cli

	if (val == LOW) {
   1b0d0:	11 11       	cpse	r17, r1
   1b0d2:	04 c0       	rjmp	.+8      	; 0x1b0dc <digitalWrite+0x4c>
		*out &= ~bit;
   1b0d4:	8c 91       	ld	r24, X
   1b0d6:	d0 95       	com	r29
   1b0d8:	d8 23       	and	r29, r24
   1b0da:	02 c0       	rjmp	.+4      	; 0x1b0e0 <digitalWrite+0x50>
	} else {
		*out |= bit;
   1b0dc:	ec 91       	ld	r30, X
   1b0de:	de 2b       	or	r29, r30
   1b0e0:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
   1b0e2:	9f bf       	out	0x3f, r25	; 63
}
   1b0e4:	df 91       	pop	r29
   1b0e6:	cf 91       	pop	r28
   1b0e8:	1f 91       	pop	r17
   1b0ea:	08 95       	ret

0001b0ec <digitalRead>:

int digitalRead(uint8_t pin)
{
   1b0ec:	cf 93       	push	r28
   1b0ee:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1b0f0:	28 2f       	mov	r18, r24
   1b0f2:	30 e0       	ldi	r19, 0x00	; 0
   1b0f4:	f9 01       	movw	r30, r18
   1b0f6:	ee 51       	subi	r30, 0x1E	; 30
   1b0f8:	fa 4b       	sbci	r31, 0xBA	; 186
   1b0fa:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1b0fc:	f9 01       	movw	r30, r18
   1b0fe:	e8 5d       	subi	r30, 0xD8	; 216
   1b100:	f9 4b       	sbci	r31, 0xB9	; 185
   1b102:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1b104:	f9 01       	movw	r30, r18
   1b106:	e2 59       	subi	r30, 0x92	; 146
   1b108:	f9 4b       	sbci	r31, 0xB9	; 185
   1b10a:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
   1b10c:	cc 23       	and	r28, r28
   1b10e:	89 f0       	breq	.+34     	; 0x1b132 <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1b110:	81 11       	cpse	r24, r1
   1b112:	2c df       	rcall	.-424    	; 0x1af6c <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
   1b114:	ec 2f       	mov	r30, r28
   1b116:	f0 e0       	ldi	r31, 0x00	; 0
   1b118:	ee 0f       	add	r30, r30
   1b11a:	ff 1f       	adc	r31, r31
   1b11c:	ec 54       	subi	r30, 0x4C	; 76
   1b11e:	f9 4b       	sbci	r31, 0xB9	; 185
   1b120:	a5 91       	lpm	r26, Z+
   1b122:	b4 91       	lpm	r27, Z
   1b124:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
   1b126:	ed 23       	and	r30, r29
   1b128:	81 e0       	ldi	r24, 0x01	; 1
   1b12a:	90 e0       	ldi	r25, 0x00	; 0
   1b12c:	21 f4       	brne	.+8      	; 0x1b136 <digitalRead+0x4a>
   1b12e:	80 e0       	ldi	r24, 0x00	; 0
   1b130:	02 c0       	rjmp	.+4      	; 0x1b136 <digitalRead+0x4a>
   1b132:	80 e0       	ldi	r24, 0x00	; 0
   1b134:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
   1b136:	df 91       	pop	r29
   1b138:	cf 91       	pop	r28
   1b13a:	08 95       	ret

0001b13c <_ZN13EnergyMonitor7currentEjd>:
    //    - every 2 crosses we will have sampled 1 wavelength
    //    - so this method allows us to sample an integer number of half wavelengths which increases accuracy
    //-----------------------------------------------------------------------------
    lastVCross = checkVCross;
    if (sampleV > startV) checkVCross = true;
                     else checkVCross = false;
   1b13c:	fc 01       	movw	r30, r24
   1b13e:	77 8b       	std	Z+23, r23	; 0x17
   1b140:	66 8b       	std	Z+22, r22	; 0x16
   1b142:	24 8f       	std	Z+28, r18	; 0x1c
   1b144:	35 8f       	std	Z+29, r19	; 0x1d
   1b146:	46 8f       	std	Z+30, r20	; 0x1e
   1b148:	57 8f       	std	Z+31, r21	; 0x1f
   1b14a:	80 e0       	ldi	r24, 0x00	; 0
   1b14c:	90 e0       	ldi	r25, 0x00	; 0
   1b14e:	a0 e0       	ldi	r26, 0x00	; 0
   1b150:	b4 e4       	ldi	r27, 0x44	; 68
   1b152:	80 af       	std	Z+56, r24	; 0x38
   1b154:	91 af       	std	Z+57, r25	; 0x39
   1b156:	a2 af       	std	Z+58, r26	; 0x3a
   1b158:	b3 af       	std	Z+59, r27	; 0x3b
   1b15a:	08 95       	ret

0001b15c <_ZN13EnergyMonitor7readVccEv>:
   1b15c:	8e e5       	ldi	r24, 0x5E	; 94
   1b15e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
   1b162:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1b166:	87 7f       	andi	r24, 0xF7	; 247
   1b168:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1b16c:	62 e0       	ldi	r22, 0x02	; 2
   1b16e:	70 e0       	ldi	r23, 0x00	; 0
   1b170:	80 e0       	ldi	r24, 0x00	; 0
   1b172:	90 e0       	ldi	r25, 0x00	; 0
   1b174:	54 de       	rcall	.-856    	; 0x1ae1e <delay>
   1b176:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b17a:	80 64       	ori	r24, 0x40	; 64
   1b17c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b180:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b184:	86 fd       	sbrc	r24, 6
   1b186:	fc cf       	rjmp	.-8      	; 0x1b180 <_ZN13EnergyMonitor7readVccEv+0x24>
   1b188:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
   1b18c:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
   1b190:	30 e0       	ldi	r19, 0x00	; 0
   1b192:	32 2f       	mov	r19, r18
   1b194:	22 27       	eor	r18, r18
   1b196:	a9 01       	movw	r20, r18
   1b198:	33 0f       	add	r19, r19
   1b19a:	66 0b       	sbc	r22, r22
   1b19c:	77 0b       	sbc	r23, r23
   1b19e:	9a 01       	movw	r18, r20
   1b1a0:	ab 01       	movw	r20, r22
   1b1a2:	28 2b       	or	r18, r24
   1b1a4:	60 e0       	ldi	r22, 0x00	; 0
   1b1a6:	70 e3       	ldi	r23, 0x30	; 48
   1b1a8:	81 e1       	ldi	r24, 0x11	; 17
   1b1aa:	90 e0       	ldi	r25, 0x00	; 0
   1b1ac:	0e 94 01 eb 	call	0x1d602	; 0x1d602 <__divmodsi4>
   1b1b0:	ca 01       	movw	r24, r20
   1b1b2:	b9 01       	movw	r22, r18
   1b1b4:	08 95       	ret

0001b1b6 <_ZN13EnergyMonitor8calcIrmsEj>:
//--------------------------------------------------------------------------------------
}

//--------------------------------------------------------------------------------------
double EnergyMonitor::calcIrms(unsigned int Number_of_Samples)
{
   1b1b6:	2f 92       	push	r2
   1b1b8:	3f 92       	push	r3
   1b1ba:	4f 92       	push	r4
   1b1bc:	5f 92       	push	r5
   1b1be:	6f 92       	push	r6
   1b1c0:	7f 92       	push	r7
   1b1c2:	8f 92       	push	r8
   1b1c4:	9f 92       	push	r9
   1b1c6:	af 92       	push	r10
   1b1c8:	bf 92       	push	r11
   1b1ca:	cf 92       	push	r12
   1b1cc:	df 92       	push	r13
   1b1ce:	ef 92       	push	r14
   1b1d0:	ff 92       	push	r15
   1b1d2:	0f 93       	push	r16
   1b1d4:	1f 93       	push	r17
   1b1d6:	cf 93       	push	r28
   1b1d8:	df 93       	push	r29
   1b1da:	00 d0       	rcall	.+0      	; 0x1b1dc <_ZN13EnergyMonitor8calcIrmsEj+0x26>
   1b1dc:	00 d0       	rcall	.+0      	; 0x1b1de <_ZN13EnergyMonitor8calcIrmsEj+0x28>
   1b1de:	cd b7       	in	r28, 0x3d	; 61
   1b1e0:	de b7       	in	r29, 0x3e	; 62
   1b1e2:	9e 83       	std	Y+6, r25	; 0x06
   1b1e4:	8d 83       	std	Y+5, r24	; 0x05
   1b1e6:	7a 83       	std	Y+2, r23	; 0x02
   1b1e8:	69 83       	std	Y+1, r22	; 0x01

  #if defined emonTxV3
    int SupplyVoltage=3300;
  #else
    int SupplyVoltage = readVcc();
   1b1ea:	b8 df       	rcall	.-144    	; 0x1b15c <_ZN13EnergyMonitor7readVccEv>
   1b1ec:	6b 01       	movw	r12, r22
   1b1ee:	7c 01       	movw	r14, r24
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b1f0:	00 e0       	ldi	r16, 0x00	; 0
   1b1f2:	10 e0       	ldi	r17, 0x00	; 0
   1b1f4:	8d 81       	ldd	r24, Y+5	; 0x05
   1b1f6:	9e 81       	ldd	r25, Y+6	; 0x06
   1b1f8:	84 5b       	subi	r24, 0xB4	; 180
   1b1fa:	9f 4f       	sbci	r25, 0xFF	; 255
   1b1fc:	1c 01       	movw	r2, r24
    offsetI = (offsetI + (sampleI-offsetI)/1024);
    filteredI = sampleI - offsetI;

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1b1fe:	ed 81       	ldd	r30, Y+5	; 0x05
   1b200:	fe 81       	ldd	r31, Y+6	; 0x06
   1b202:	e8 5b       	subi	r30, 0xB8	; 184
   1b204:	ff 4f       	sbci	r31, 0xFF	; 255
   1b206:	fc 83       	std	Y+4, r31	; 0x04
   1b208:	eb 83       	std	Y+3, r30	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b20a:	89 81       	ldd	r24, Y+1	; 0x01
   1b20c:	9a 81       	ldd	r25, Y+2	; 0x02
   1b20e:	08 17       	cp	r16, r24
   1b210:	19 07       	cpc	r17, r25
   1b212:	09 f4       	brne	.+2      	; 0x1b216 <_ZN13EnergyMonitor8calcIrmsEj+0x60>
   1b214:	4f c0       	rjmp	.+158    	; 0x1b2b4 <_ZN13EnergyMonitor8calcIrmsEj+0xfe>
  {
    sampleI = analogRead(inPinI);
   1b216:	ed 81       	ldd	r30, Y+5	; 0x05
   1b218:	fe 81       	ldd	r31, Y+6	; 0x06
   1b21a:	86 89       	ldd	r24, Z+22	; 0x16
   1b21c:	0e 94 0d e4 	call	0x1c81a	; 0x1c81a <analogRead>
   1b220:	ed 81       	ldd	r30, Y+5	; 0x05
   1b222:	fe 81       	ldd	r31, Y+6	; 0x06
   1b224:	97 a3       	std	Z+39, r25	; 0x27
   1b226:	86 a3       	std	Z+38, r24	; 0x26

    // Digital low pass filter extracts the 2.5 V or 1.65 V dc offset,
    //  then subtract this - signal is now centered on 0 counts.
    offsetI = (offsetI + (sampleI-offsetI)/1024);
   1b228:	bc 01       	movw	r22, r24
   1b22a:	99 0f       	add	r25, r25
   1b22c:	88 0b       	sbc	r24, r24
   1b22e:	99 0b       	sbc	r25, r25
   1b230:	34 d8       	rcall	.-3992   	; 0x1a29a <__floatsisf>
   1b232:	4b 01       	movw	r8, r22
   1b234:	5c 01       	movw	r10, r24
   1b236:	ed 81       	ldd	r30, Y+5	; 0x05
   1b238:	fe 81       	ldd	r31, Y+6	; 0x06
   1b23a:	40 ac       	ldd	r4, Z+56	; 0x38
   1b23c:	51 ac       	ldd	r5, Z+57	; 0x39
   1b23e:	62 ac       	ldd	r6, Z+58	; 0x3a
   1b240:	73 ac       	ldd	r7, Z+59	; 0x3b
   1b242:	a3 01       	movw	r20, r6
   1b244:	92 01       	movw	r18, r4
   1b246:	0e 94 4e d0 	call	0x1a09c	; 0x1a09c <__subsf3>
   1b24a:	20 e0       	ldi	r18, 0x00	; 0
   1b24c:	30 e0       	ldi	r19, 0x00	; 0
   1b24e:	40 e8       	ldi	r20, 0x80	; 128
   1b250:	5a e3       	ldi	r21, 0x3A	; 58
   1b252:	d7 d8       	rcall	.-3666   	; 0x1a402 <__mulsf3>
   1b254:	a3 01       	movw	r20, r6
   1b256:	92 01       	movw	r18, r4
   1b258:	0e 94 4f d0 	call	0x1a09e	; 0x1a09e <__addsf3>
   1b25c:	9b 01       	movw	r18, r22
   1b25e:	ac 01       	movw	r20, r24
   1b260:	ed 81       	ldd	r30, Y+5	; 0x05
   1b262:	fe 81       	ldd	r31, Y+6	; 0x06
   1b264:	60 af       	std	Z+56, r22	; 0x38
   1b266:	71 af       	std	Z+57, r23	; 0x39
   1b268:	82 af       	std	Z+58, r24	; 0x3a
   1b26a:	93 af       	std	Z+59, r25	; 0x3b
    filteredI = sampleI - offsetI;
   1b26c:	c5 01       	movw	r24, r10
   1b26e:	b4 01       	movw	r22, r8
   1b270:	0e 94 4e d0 	call	0x1a09c	; 0x1a09c <__subsf3>
   1b274:	ed 81       	ldd	r30, Y+5	; 0x05
   1b276:	fe 81       	ldd	r31, Y+6	; 0x06
   1b278:	60 ab       	std	Z+48, r22	; 0x30
   1b27a:	71 ab       	std	Z+49, r23	; 0x31
   1b27c:	82 ab       	std	Z+50, r24	; 0x32

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1b27e:	93 ab       	std	Z+51, r25	; 0x33
   1b280:	9b 01       	movw	r18, r22
   1b282:	ac 01       	movw	r20, r24
   1b284:	be d8       	rcall	.-3716   	; 0x1a402 <__mulsf3>
   1b286:	9b 01       	movw	r18, r22
   1b288:	ac 01       	movw	r20, r24
   1b28a:	eb 81       	ldd	r30, Y+3	; 0x03
   1b28c:	fc 81       	ldd	r31, Y+4	; 0x04
   1b28e:	60 83       	st	Z, r22
   1b290:	71 83       	std	Z+1, r23	; 0x01
   1b292:	82 83       	std	Z+2, r24	; 0x02
   1b294:	93 83       	std	Z+3, r25	; 0x03
    // 2) sum
    sumI += sqI;
   1b296:	f1 01       	movw	r30, r2
   1b298:	60 81       	ld	r22, Z
   1b29a:	71 81       	ldd	r23, Z+1	; 0x01
   1b29c:	82 81       	ldd	r24, Z+2	; 0x02
   1b29e:	93 81       	ldd	r25, Z+3	; 0x03
   1b2a0:	0e 94 4f d0 	call	0x1a09e	; 0x1a09e <__addsf3>
   1b2a4:	f1 01       	movw	r30, r2
   1b2a6:	60 83       	st	Z, r22
   1b2a8:	71 83       	std	Z+1, r23	; 0x01
   1b2aa:	82 83       	std	Z+2, r24	; 0x02
   1b2ac:	93 83       	std	Z+3, r25	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b2ae:	0f 5f       	subi	r16, 0xFF	; 255
   1b2b0:	1f 4f       	sbci	r17, 0xFF	; 255
   1b2b2:	ab cf       	rjmp	.-170    	; 0x1b20a <_ZN13EnergyMonitor8calcIrmsEj+0x54>
    // 2) sum
    sumI += sqI;
  }

  double I_RATIO = ICAL *((SupplyVoltage/1000.0) / (ADC_COUNTS));
  Irms = I_RATIO * sqrt(sumI / Number_of_Samples);
   1b2b4:	b8 01       	movw	r22, r16
   1b2b6:	80 e0       	ldi	r24, 0x00	; 0
   1b2b8:	90 e0       	ldi	r25, 0x00	; 0
   1b2ba:	0e 94 4b d1 	call	0x1a296	; 0x1a296 <__floatunsisf>
   1b2be:	9b 01       	movw	r18, r22
   1b2c0:	ac 01       	movw	r20, r24
   1b2c2:	f1 01       	movw	r30, r2
   1b2c4:	60 81       	ld	r22, Z
   1b2c6:	71 81       	ldd	r23, Z+1	; 0x01
   1b2c8:	82 81       	ldd	r24, Z+2	; 0x02
   1b2ca:	93 81       	ldd	r25, Z+3	; 0x03
   1b2cc:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
   1b2d0:	0e 94 33 e9 	call	0x1d266	; 0x1d266 <sqrt>
   1b2d4:	4b 01       	movw	r8, r22
   1b2d6:	5c 01       	movw	r10, r24
   1b2d8:	b6 01       	movw	r22, r12
   1b2da:	dd 0c       	add	r13, r13
   1b2dc:	88 0b       	sbc	r24, r24
   1b2de:	99 0b       	sbc	r25, r25
   1b2e0:	0e 94 4d d1 	call	0x1a29a	; 0x1a29a <__floatsisf>
   1b2e4:	20 e0       	ldi	r18, 0x00	; 0
   1b2e6:	30 e0       	ldi	r19, 0x00	; 0
   1b2e8:	4a e7       	ldi	r20, 0x7A	; 122
   1b2ea:	54 e4       	ldi	r21, 0x44	; 68
   1b2ec:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
   1b2f0:	20 e0       	ldi	r18, 0x00	; 0
   1b2f2:	30 e0       	ldi	r19, 0x00	; 0
   1b2f4:	40 e8       	ldi	r20, 0x80	; 128
   1b2f6:	5a e3       	ldi	r21, 0x3A	; 58
   1b2f8:	84 d8       	rcall	.-3832   	; 0x1a402 <__mulsf3>
   1b2fa:	ed 81       	ldd	r30, Y+5	; 0x05
   1b2fc:	fe 81       	ldd	r31, Y+6	; 0x06
   1b2fe:	24 8d       	ldd	r18, Z+28	; 0x1c
   1b300:	35 8d       	ldd	r19, Z+29	; 0x1d
   1b302:	46 8d       	ldd	r20, Z+30	; 0x1e
   1b304:	57 8d       	ldd	r21, Z+31	; 0x1f
   1b306:	7d d8       	rcall	.-3846   	; 0x1a402 <__mulsf3>
   1b308:	a5 01       	movw	r20, r10
   1b30a:	94 01       	movw	r18, r8
   1b30c:	7a d8       	rcall	.-3852   	; 0x1a402 <__mulsf3>
   1b30e:	ed 81       	ldd	r30, Y+5	; 0x05
   1b310:	fe 81       	ldd	r31, Y+6	; 0x06
   1b312:	60 8b       	std	Z+16, r22	; 0x10
   1b314:	71 8b       	std	Z+17, r23	; 0x11
   1b316:	82 8b       	std	Z+18, r24	; 0x12
   1b318:	93 8b       	std	Z+19, r25	; 0x13

  //Reset accumulators
  sumI = 0;
   1b31a:	f1 01       	movw	r30, r2
   1b31c:	10 82       	st	Z, r1
   1b31e:	11 82       	std	Z+1, r1	; 0x01
   1b320:	12 82       	std	Z+2, r1	; 0x02
   1b322:	13 82       	std	Z+3, r1	; 0x03
  //--------------------------------------------------------------------------------------

  return Irms;
}
   1b324:	26 96       	adiw	r28, 0x06	; 6
   1b326:	0f b6       	in	r0, 0x3f	; 63
   1b328:	f8 94       	cli
   1b32a:	de bf       	out	0x3e, r29	; 62
   1b32c:	0f be       	out	0x3f, r0	; 63
   1b32e:	cd bf       	out	0x3d, r28	; 61
   1b330:	df 91       	pop	r29
   1b332:	cf 91       	pop	r28
   1b334:	1f 91       	pop	r17
   1b336:	0f 91       	pop	r16
   1b338:	ff 90       	pop	r15
   1b33a:	ef 90       	pop	r14
   1b33c:	df 90       	pop	r13
   1b33e:	cf 90       	pop	r12
   1b340:	bf 90       	pop	r11
   1b342:	af 90       	pop	r10
   1b344:	9f 90       	pop	r9
   1b346:	8f 90       	pop	r8
   1b348:	7f 90       	pop	r7
   1b34a:	6f 90       	pop	r6
   1b34c:	5f 90       	pop	r5
   1b34e:	4f 90       	pop	r4
   1b350:	3f 90       	pop	r3
   1b352:	2f 90       	pop	r2
   1b354:	08 95       	ret

0001b356 <_ZN17LiquidCrystal_I2CC1Ehhh>:
void LiquidCrystal_I2C::blink_off(){
	noBlink();
}

void LiquidCrystal_I2C::load_custom_character(uint8_t char_num, uint8_t *rows){
		createChar(char_num, rows);
   1b356:	fc 01       	movw	r30, r24
   1b358:	13 82       	std	Z+3, r1	; 0x03
   1b35a:	12 82       	std	Z+2, r1	; 0x02
   1b35c:	8d ef       	ldi	r24, 0xFD	; 253
   1b35e:	97 e0       	ldi	r25, 0x07	; 7
   1b360:	91 83       	std	Z+1, r25	; 0x01
   1b362:	80 83       	st	Z, r24
   1b364:	64 83       	std	Z+4, r22	; 0x04
   1b366:	41 87       	std	Z+9, r20	; 0x09
   1b368:	22 87       	std	Z+10, r18	; 0x0a
   1b36a:	13 86       	std	Z+11, r1	; 0x0b
   1b36c:	08 95       	ret

0001b36e <_ZN17LiquidCrystal_I2C13expanderWriteEh>:
   1b36e:	1f 93       	push	r17
   1b370:	cf 93       	push	r28
   1b372:	df 93       	push	r29
   1b374:	ec 01       	movw	r28, r24
   1b376:	16 2f       	mov	r17, r22
   1b378:	6c 81       	ldd	r22, Y+4	; 0x04
   1b37a:	8b e5       	ldi	r24, 0x5B	; 91
   1b37c:	98 e1       	ldi	r25, 0x18	; 24
   1b37e:	0e 94 1a e2 	call	0x1c434	; 0x1c434 <_ZN7TwoWire17beginTransmissionEh>
   1b382:	6b 85       	ldd	r22, Y+11	; 0x0b
   1b384:	61 2b       	or	r22, r17
   1b386:	8b e5       	ldi	r24, 0x5B	; 91
   1b388:	98 e1       	ldi	r25, 0x18	; 24
   1b38a:	0e 94 cd e1 	call	0x1c39a	; 0x1c39a <_ZN7TwoWire5writeEh>
   1b38e:	8b e5       	ldi	r24, 0x5B	; 91
   1b390:	98 e1       	ldi	r25, 0x18	; 24
   1b392:	df 91       	pop	r29
   1b394:	cf 91       	pop	r28
   1b396:	1f 91       	pop	r17
   1b398:	0c 94 36 e2 	jmp	0x1c46c	; 0x1c46c <_ZN7TwoWire15endTransmissionEv>

0001b39c <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
   1b39c:	0f 93       	push	r16
   1b39e:	1f 93       	push	r17
   1b3a0:	cf 93       	push	r28
   1b3a2:	8c 01       	movw	r16, r24
   1b3a4:	c6 2f       	mov	r28, r22
   1b3a6:	64 60       	ori	r22, 0x04	; 4
   1b3a8:	e2 df       	rcall	.-60     	; 0x1b36e <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b3aa:	81 e0       	ldi	r24, 0x01	; 1
   1b3ac:	90 e0       	ldi	r25, 0x00	; 0
   1b3ae:	71 dd       	rcall	.-1310   	; 0x1ae92 <delayMicroseconds>
   1b3b0:	6c 2f       	mov	r22, r28
   1b3b2:	6b 7f       	andi	r22, 0xFB	; 251
   1b3b4:	c8 01       	movw	r24, r16
   1b3b6:	db df       	rcall	.-74     	; 0x1b36e <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b3b8:	82 e3       	ldi	r24, 0x32	; 50
   1b3ba:	90 e0       	ldi	r25, 0x00	; 0
   1b3bc:	cf 91       	pop	r28
   1b3be:	1f 91       	pop	r17
   1b3c0:	0f 91       	pop	r16
   1b3c2:	67 cd       	rjmp	.-1330   	; 0x1ae92 <delayMicroseconds>

0001b3c4 <_ZN17LiquidCrystal_I2C10write4bitsEh>:
   1b3c4:	1f 93       	push	r17
   1b3c6:	cf 93       	push	r28
   1b3c8:	df 93       	push	r29
   1b3ca:	ec 01       	movw	r28, r24
   1b3cc:	16 2f       	mov	r17, r22
   1b3ce:	cf df       	rcall	.-98     	; 0x1b36e <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b3d0:	61 2f       	mov	r22, r17
   1b3d2:	ce 01       	movw	r24, r28
   1b3d4:	df 91       	pop	r29
   1b3d6:	cf 91       	pop	r28
   1b3d8:	1f 91       	pop	r17
   1b3da:	e0 cf       	rjmp	.-64     	; 0x1b39c <_ZN17LiquidCrystal_I2C11pulseEnableEh>

0001b3dc <_ZN17LiquidCrystal_I2C4sendEhh>:
   1b3dc:	0f 93       	push	r16
   1b3de:	1f 93       	push	r17
   1b3e0:	cf 93       	push	r28
   1b3e2:	df 93       	push	r29
   1b3e4:	8c 01       	movw	r16, r24
   1b3e6:	c6 2f       	mov	r28, r22
   1b3e8:	d4 2f       	mov	r29, r20
   1b3ea:	60 7f       	andi	r22, 0xF0	; 240
   1b3ec:	64 2b       	or	r22, r20
   1b3ee:	ea df       	rcall	.-44     	; 0x1b3c4 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   1b3f0:	80 e1       	ldi	r24, 0x10	; 16
   1b3f2:	c8 9f       	mul	r28, r24
   1b3f4:	b0 01       	movw	r22, r0
   1b3f6:	11 24       	eor	r1, r1
   1b3f8:	6d 2b       	or	r22, r29
   1b3fa:	c8 01       	movw	r24, r16
   1b3fc:	df 91       	pop	r29
   1b3fe:	cf 91       	pop	r28
   1b400:	1f 91       	pop	r17
   1b402:	0f 91       	pop	r16
   1b404:	df cf       	rjmp	.-66     	; 0x1b3c4 <_ZN17LiquidCrystal_I2C10write4bitsEh>

0001b406 <_ZN17LiquidCrystal_I2C7commandEh>:
   1b406:	40 e0       	ldi	r20, 0x00	; 0
   1b408:	e9 cf       	rjmp	.-46     	; 0x1b3dc <_ZN17LiquidCrystal_I2C4sendEhh>

0001b40a <_ZN17LiquidCrystal_I2C5clearEv>:
   1b40a:	61 e0       	ldi	r22, 0x01	; 1
   1b40c:	fc df       	rcall	.-8      	; 0x1b406 <_ZN17LiquidCrystal_I2C7commandEh>
   1b40e:	80 ed       	ldi	r24, 0xD0	; 208
   1b410:	97 e0       	ldi	r25, 0x07	; 7
   1b412:	3f cd       	rjmp	.-1410   	; 0x1ae92 <delayMicroseconds>

0001b414 <_ZN17LiquidCrystal_I2C4homeEv>:
   1b414:	62 e0       	ldi	r22, 0x02	; 2
   1b416:	f7 df       	rcall	.-18     	; 0x1b406 <_ZN17LiquidCrystal_I2C7commandEh>
   1b418:	80 ed       	ldi	r24, 0xD0	; 208
   1b41a:	97 e0       	ldi	r25, 0x07	; 7
   1b41c:	3a cd       	rjmp	.-1420   	; 0x1ae92 <delayMicroseconds>

0001b41e <_ZN17LiquidCrystal_I2C9setCursorEhh>:
   1b41e:	cf 93       	push	r28
   1b420:	df 93       	push	r29
   1b422:	cd b7       	in	r28, 0x3d	; 61
   1b424:	de b7       	in	r29, 0x3e	; 62
   1b426:	28 97       	sbiw	r28, 0x08	; 8
   1b428:	0f b6       	in	r0, 0x3f	; 63
   1b42a:	f8 94       	cli
   1b42c:	de bf       	out	0x3e, r29	; 62
   1b42e:	0f be       	out	0x3f, r0	; 63
   1b430:	cd bf       	out	0x3d, r28	; 61
   1b432:	9c 01       	movw	r18, r24
   1b434:	88 e0       	ldi	r24, 0x08	; 8
   1b436:	e3 e7       	ldi	r30, 0x73	; 115
   1b438:	f2 e0       	ldi	r31, 0x02	; 2
   1b43a:	de 01       	movw	r26, r28
   1b43c:	11 96       	adiw	r26, 0x01	; 1
   1b43e:	01 90       	ld	r0, Z+
   1b440:	0d 92       	st	X+, r0
   1b442:	8a 95       	dec	r24
   1b444:	e1 f7       	brne	.-8      	; 0x1b43e <_ZN17LiquidCrystal_I2C9setCursorEhh+0x20>
   1b446:	f9 01       	movw	r30, r18
   1b448:	80 85       	ldd	r24, Z+8	; 0x08
   1b44a:	84 17       	cp	r24, r20
   1b44c:	10 f4       	brcc	.+4      	; 0x1b452 <_ZN17LiquidCrystal_I2C9setCursorEhh+0x34>
   1b44e:	4f ef       	ldi	r20, 0xFF	; 255
   1b450:	48 0f       	add	r20, r24
   1b452:	fe 01       	movw	r30, r28
   1b454:	31 96       	adiw	r30, 0x01	; 1
   1b456:	e4 0f       	add	r30, r20
   1b458:	f1 1d       	adc	r31, r1
   1b45a:	e4 0f       	add	r30, r20
   1b45c:	f1 1d       	adc	r31, r1
   1b45e:	90 81       	ld	r25, Z
   1b460:	69 0f       	add	r22, r25
   1b462:	60 68       	ori	r22, 0x80	; 128
   1b464:	c9 01       	movw	r24, r18
   1b466:	28 96       	adiw	r28, 0x08	; 8
   1b468:	0f b6       	in	r0, 0x3f	; 63
   1b46a:	f8 94       	cli
   1b46c:	de bf       	out	0x3e, r29	; 62
   1b46e:	0f be       	out	0x3f, r0	; 63
   1b470:	cd bf       	out	0x3d, r28	; 61
   1b472:	df 91       	pop	r29
   1b474:	cf 91       	pop	r28
   1b476:	c7 cf       	rjmp	.-114    	; 0x1b406 <_ZN17LiquidCrystal_I2C7commandEh>

0001b478 <_ZN17LiquidCrystal_I2C7displayEv>:
   1b478:	fc 01       	movw	r30, r24
   1b47a:	66 81       	ldd	r22, Z+6	; 0x06
   1b47c:	26 2f       	mov	r18, r22
   1b47e:	24 60       	ori	r18, 0x04	; 4
   1b480:	26 83       	std	Z+6, r18	; 0x06
   1b482:	6c 60       	ori	r22, 0x0C	; 12
   1b484:	c0 cf       	rjmp	.-128    	; 0x1b406 <_ZN17LiquidCrystal_I2C7commandEh>

0001b486 <_ZN17LiquidCrystal_I2C10createCharEhPh>:
   1b486:	ef 92       	push	r14
   1b488:	ff 92       	push	r15
   1b48a:	0f 93       	push	r16
   1b48c:	1f 93       	push	r17
   1b48e:	cf 93       	push	r28
   1b490:	df 93       	push	r29
   1b492:	8c 01       	movw	r16, r24
   1b494:	7a 01       	movw	r14, r20
   1b496:	67 70       	andi	r22, 0x07	; 7
   1b498:	88 e0       	ldi	r24, 0x08	; 8
   1b49a:	68 9f       	mul	r22, r24
   1b49c:	b0 01       	movw	r22, r0
   1b49e:	11 24       	eor	r1, r1
   1b4a0:	60 64       	ori	r22, 0x40	; 64
   1b4a2:	c8 01       	movw	r24, r16
   1b4a4:	b0 df       	rcall	.-160    	; 0x1b406 <_ZN17LiquidCrystal_I2C7commandEh>
   1b4a6:	e7 01       	movw	r28, r14
   1b4a8:	a8 e0       	ldi	r26, 0x08	; 8
   1b4aa:	ea 0e       	add	r14, r26
   1b4ac:	f1 1c       	adc	r15, r1
   1b4ae:	69 91       	ld	r22, Y+
   1b4b0:	d8 01       	movw	r26, r16
   1b4b2:	ed 91       	ld	r30, X+
   1b4b4:	fc 91       	ld	r31, X
   1b4b6:	01 90       	ld	r0, Z+
   1b4b8:	f0 81       	ld	r31, Z
   1b4ba:	e0 2d       	mov	r30, r0
   1b4bc:	c8 01       	movw	r24, r16
   1b4be:	19 95       	eicall
   1b4c0:	ce 15       	cp	r28, r14
   1b4c2:	df 05       	cpc	r29, r15
   1b4c4:	a1 f7       	brne	.-24     	; 0x1b4ae <_ZN17LiquidCrystal_I2C10createCharEhPh+0x28>
   1b4c6:	df 91       	pop	r29
   1b4c8:	cf 91       	pop	r28
   1b4ca:	1f 91       	pop	r17
   1b4cc:	0f 91       	pop	r16
   1b4ce:	ff 90       	pop	r15
   1b4d0:	ef 90       	pop	r14
   1b4d2:	08 95       	ret

0001b4d4 <_ZN17LiquidCrystal_I2C5writeEh>:

#include "Arduino.h"

#define printIIC(args)	Wire.write(args)
inline size_t LiquidCrystal_I2C::write(uint8_t value) {
	send(value, Rs);
   1b4d4:	41 e0       	ldi	r20, 0x01	; 1
   1b4d6:	82 df       	rcall	.-252    	; 0x1b3dc <_ZN17LiquidCrystal_I2C4sendEhh>
	return 1;
}
   1b4d8:	81 e0       	ldi	r24, 0x01	; 1
   1b4da:	90 e0       	ldi	r25, 0x00	; 0
   1b4dc:	08 95       	ret

0001b4de <_ZN17LiquidCrystal_I2C5beginEhhh>:
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
}

void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
   1b4de:	cf 93       	push	r28
   1b4e0:	df 93       	push	r29
   1b4e2:	ec 01       	movw	r28, r24
	if (lines > 1) {
   1b4e4:	42 30       	cpi	r20, 0x02	; 2
   1b4e6:	18 f0       	brcs	.+6      	; 0x1b4ee <_ZN17LiquidCrystal_I2C5beginEhhh+0x10>
		_displayfunction |= LCD_2LINE;
   1b4e8:	8d 81       	ldd	r24, Y+5	; 0x05
   1b4ea:	88 60       	ori	r24, 0x08	; 8
   1b4ec:	8d 83       	std	Y+5, r24	; 0x05
	}
	_numlines = lines;
   1b4ee:	48 87       	std	Y+8, r20	; 0x08

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotsize != 0) && (lines == 1)) {
   1b4f0:	22 23       	and	r18, r18
   1b4f2:	29 f0       	breq	.+10     	; 0x1b4fe <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
   1b4f4:	41 30       	cpi	r20, 0x01	; 1
   1b4f6:	19 f4       	brne	.+6      	; 0x1b4fe <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
		_displayfunction |= LCD_5x10DOTS;
   1b4f8:	8d 81       	ldd	r24, Y+5	; 0x05
   1b4fa:	84 60       	ori	r24, 0x04	; 4
   1b4fc:	8d 83       	std	Y+5, r24	; 0x05
	}

	// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	delay(50); 
   1b4fe:	62 e3       	ldi	r22, 0x32	; 50
   1b500:	70 e0       	ldi	r23, 0x00	; 0
   1b502:	80 e0       	ldi	r24, 0x00	; 0
   1b504:	90 e0       	ldi	r25, 0x00	; 0
   1b506:	8b dc       	rcall	.-1770   	; 0x1ae1e <delay>
  
	// Now we pull both RS and R/W low to begin commands
// 	expanderWrite(_backlightval);	// reset expanderand turn backlight off (Bit 8 =1)   // kishorr
// 	delay(1000);
	
	_backlightval=LCD_BACKLIGHT;   // kishorr
   1b508:	88 e0       	ldi	r24, 0x08	; 8
   1b50a:	8b 87       	std	Y+11, r24	; 0x0b
	expanderWrite(0);
   1b50c:	60 e0       	ldi	r22, 0x00	; 0
   1b50e:	ce 01       	movw	r24, r28
   1b510:	2e df       	rcall	.-420    	; 0x1b36e <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    delay(1000);
   1b512:	68 ee       	ldi	r22, 0xE8	; 232
   1b514:	73 e0       	ldi	r23, 0x03	; 3
   1b516:	80 e0       	ldi	r24, 0x00	; 0
   1b518:	90 e0       	ldi	r25, 0x00	; 0
   1b51a:	81 dc       	rcall	.-1790   	; 0x1ae1e <delay>
  	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	  // we start in 8bit mode, try to set 4 bit mode
   write4bits(0x03 << 4);
   1b51c:	60 e3       	ldi	r22, 0x30	; 48
   1b51e:	ce 01       	movw	r24, r28
   1b520:	51 df       	rcall	.-350    	; 0x1b3c4 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1b522:	84 e9       	ldi	r24, 0x94	; 148
   1b524:	91 e1       	ldi	r25, 0x11	; 17
   1b526:	b5 dc       	rcall	.-1686   	; 0x1ae92 <delayMicroseconds>
   
   // second try
   write4bits(0x03 << 4);
   1b528:	60 e3       	ldi	r22, 0x30	; 48
   1b52a:	ce 01       	movw	r24, r28
   1b52c:	4b df       	rcall	.-362    	; 0x1b3c4 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1b52e:	84 e9       	ldi	r24, 0x94	; 148
   1b530:	91 e1       	ldi	r25, 0x11	; 17
   1b532:	af dc       	rcall	.-1698   	; 0x1ae92 <delayMicroseconds>
   
   // third go!
   write4bits(0x03 << 4); 
   1b534:	60 e3       	ldi	r22, 0x30	; 48
   1b536:	ce 01       	movw	r24, r28
   1b538:	45 df       	rcall	.-374    	; 0x1b3c4 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(150);
   1b53a:	86 e9       	ldi	r24, 0x96	; 150
   1b53c:	90 e0       	ldi	r25, 0x00	; 0
   1b53e:	a9 dc       	rcall	.-1710   	; 0x1ae92 <delayMicroseconds>
   
   // finally, set to 4-bit interface
   write4bits(0x02 << 4); 
   1b540:	60 e2       	ldi	r22, 0x20	; 32
   1b542:	ce 01       	movw	r24, r28
   1b544:	3f df       	rcall	.-386    	; 0x1b3c4 <_ZN17LiquidCrystal_I2C10write4bitsEh>


	// set # lines, font size, etc.
	command(LCD_FUNCTIONSET | _displayfunction);  
   1b546:	6d 81       	ldd	r22, Y+5	; 0x05
   1b548:	60 62       	ori	r22, 0x20	; 32
   1b54a:	ce 01       	movw	r24, r28
   1b54c:	5c df       	rcall	.-328    	; 0x1b406 <_ZN17LiquidCrystal_I2C7commandEh>
	
	// turn the display on with no cursor or blinking default
	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
   1b54e:	84 e0       	ldi	r24, 0x04	; 4
   1b550:	8e 83       	std	Y+6, r24	; 0x06
	display();
   1b552:	ce 01       	movw	r24, r28
   1b554:	91 df       	rcall	.-222    	; 0x1b478 <_ZN17LiquidCrystal_I2C7displayEv>
	
	// clear it off
	clear();
   1b556:	ce 01       	movw	r24, r28
   1b558:	58 df       	rcall	.-336    	; 0x1b40a <_ZN17LiquidCrystal_I2C5clearEv>
   1b55a:	82 e0       	ldi	r24, 0x02	; 2
	
	// Initialize to default text direction (for roman languages)
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
   1b55c:	8f 83       	std	Y+7, r24	; 0x07
   1b55e:	66 e0       	ldi	r22, 0x06	; 6
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
   1b560:	ce 01       	movw	r24, r28
   1b562:	51 df       	rcall	.-350    	; 0x1b406 <_ZN17LiquidCrystal_I2C7commandEh>
   1b564:	ce 01       	movw	r24, r28
   1b566:	df 91       	pop	r29
	
	home();
   1b568:	cf 91       	pop	r28
  
}
   1b56a:	54 cf       	rjmp	.-344    	; 0x1b414 <_ZN17LiquidCrystal_I2C4homeEv>

0001b56c <_ZN17LiquidCrystal_I2C9init_privEv>:
   1b56c:	cf 93       	push	r28
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
	
	home();
   1b56e:	df 93       	push	r29
   1b570:	ec 01       	movw	r28, r24
	init_priv();
}

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
   1b572:	8b e5       	ldi	r24, 0x5B	; 91
   1b574:	98 e1       	ldi	r25, 0x18	; 24
   1b576:	4f d7       	rcall	.+3742   	; 0x1c416 <_ZN7TwoWire5beginEv>
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
   1b578:	1d 82       	std	Y+5, r1	; 0x05
	begin(_cols, _rows);  
   1b57a:	20 e0       	ldi	r18, 0x00	; 0
   1b57c:	4a 85       	ldd	r20, Y+10	; 0x0a
   1b57e:	69 85       	ldd	r22, Y+9	; 0x09
   1b580:	ce 01       	movw	r24, r28
}
   1b582:	df 91       	pop	r29

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
   1b584:	cf 91       	pop	r28
   1b586:	ab cf       	rjmp	.-170    	; 0x1b4de <_ZN17LiquidCrystal_I2C5beginEhhh>

0001b588 <_ZN17LiquidCrystal_I2C4initEv>:
  _rows = lcd_rows;
  _backlightval = LCD_NOBACKLIGHT;
}

void LiquidCrystal_I2C::init(){
	init_priv();
   1b588:	f1 cf       	rjmp	.-30     	; 0x1b56c <_ZN17LiquidCrystal_I2C9init_privEv>

0001b58a <_ZN15RHGenericDriver4initEv>:
}

bool RHGenericDriver::init()
{
    return true;
}
   1b58a:	81 e0       	ldi	r24, 0x01	; 1
   1b58c:	08 95       	ret

0001b58e <_ZN15RHGenericDriver14setPromiscuousEb>:
    return false;
}

void RHGenericDriver::setPromiscuous(bool promiscuous)
{
    _promiscuous = promiscuous;
   1b58e:	fc 01       	movw	r30, r24
   1b590:	64 83       	std	Z+4, r22	; 0x04
   1b592:	08 95       	ret

0001b594 <_ZN15RHGenericDriver14setThisAddressEh>:
}

void RHGenericDriver::setThisAddress(uint8_t address)
{
    _thisAddress = address;
   1b594:	fc 01       	movw	r30, r24
   1b596:	63 83       	std	Z+3, r22	; 0x03
   1b598:	08 95       	ret

0001b59a <_ZN15RHGenericDriver11setHeaderToEh>:
}

void RHGenericDriver::setHeaderTo(uint8_t to)
{
    _txHeaderTo = to;
   1b59a:	fc 01       	movw	r30, r24
   1b59c:	61 87       	std	Z+9, r22	; 0x09
   1b59e:	08 95       	ret

0001b5a0 <_ZN15RHGenericDriver13setHeaderFromEh>:
}

void RHGenericDriver::setHeaderFrom(uint8_t from)
{
    _txHeaderFrom = from;
   1b5a0:	fc 01       	movw	r30, r24
   1b5a2:	62 87       	std	Z+10, r22	; 0x0a
   1b5a4:	08 95       	ret

0001b5a6 <_ZN15RHGenericDriver11setHeaderIdEh>:
}

void RHGenericDriver::setHeaderId(uint8_t id)
{
    _txHeaderId = id;
   1b5a6:	fc 01       	movw	r30, r24
   1b5a8:	63 87       	std	Z+11, r22	; 0x0b
   1b5aa:	08 95       	ret

0001b5ac <_ZN15RHGenericDriver14setHeaderFlagsEhh>:
}

void RHGenericDriver::setHeaderFlags(uint8_t set, uint8_t clear)
{
   1b5ac:	fc 01       	movw	r30, r24
    _txHeaderFlags &= ~clear;
    _txHeaderFlags |= set;
   1b5ae:	40 95       	com	r20
   1b5b0:	94 85       	ldd	r25, Z+12	; 0x0c
   1b5b2:	49 23       	and	r20, r25
   1b5b4:	64 2b       	or	r22, r20
   1b5b6:	64 87       	std	Z+12, r22	; 0x0c
   1b5b8:	08 95       	ret

0001b5ba <_ZN15RHGenericDriver8headerToEv>:
}

uint8_t RHGenericDriver::headerTo()
{
    return _rxHeaderTo;
   1b5ba:	fc 01       	movw	r30, r24
   1b5bc:	85 81       	ldd	r24, Z+5	; 0x05
}
   1b5be:	08 95       	ret

0001b5c0 <_ZN15RHGenericDriver10headerFromEv>:

uint8_t RHGenericDriver::headerFrom()
{
    return _rxHeaderFrom;
   1b5c0:	fc 01       	movw	r30, r24
   1b5c2:	86 81       	ldd	r24, Z+6	; 0x06
}
   1b5c4:	08 95       	ret

0001b5c6 <_ZN15RHGenericDriver8headerIdEv>:

uint8_t RHGenericDriver::headerId()
{
    return _rxHeaderId;
   1b5c6:	fc 01       	movw	r30, r24
   1b5c8:	87 81       	ldd	r24, Z+7	; 0x07
}
   1b5ca:	08 95       	ret

0001b5cc <_ZN15RHGenericDriver11headerFlagsEv>:

uint8_t RHGenericDriver::headerFlags()
{
    return _rxHeaderFlags;
   1b5cc:	fc 01       	movw	r30, r24
   1b5ce:	80 85       	ldd	r24, Z+8	; 0x08
}
   1b5d0:	08 95       	ret

0001b5d2 <_ZN15RHGenericDriver8lastRssiEv>:

int16_t RHGenericDriver::lastRssi()
{
    return _lastRssi;
   1b5d2:	fc 01       	movw	r30, r24
   1b5d4:	85 85       	ldd	r24, Z+13	; 0x0d
   1b5d6:	96 85       	ldd	r25, Z+14	; 0x0e
}
   1b5d8:	08 95       	ret

0001b5da <_ZN15RHGenericDriver4modeEv>:

RHGenericDriver::RHMode  RHGenericDriver::mode()
{
    return _mode;
   1b5da:	fc 01       	movw	r30, r24
   1b5dc:	82 81       	ldd	r24, Z+2	; 0x02
}
   1b5de:	08 95       	ret

0001b5e0 <_ZN15RHGenericDriver7setModeENS_6RHModeE>:

void  RHGenericDriver::setMode(RHMode mode)
{
    _mode = mode;
   1b5e0:	fc 01       	movw	r30, r24
   1b5e2:	62 83       	std	Z+2, r22	; 0x02
   1b5e4:	08 95       	ret

0001b5e6 <_ZN15RHGenericDriver15isChannelActiveEv>:
}

bool  RHGenericDriver::sleep()
{
    return false;
}
   1b5e6:	80 e0       	ldi	r24, 0x00	; 0
   1b5e8:	08 95       	ret

0001b5ea <_ZN15RHGenericDriver5rxBadEv>:
#endif
}

uint16_t RHGenericDriver::rxBad()
{
    return _rxBad;
   1b5ea:	fc 01       	movw	r30, r24
   1b5ec:	87 85       	ldd	r24, Z+15	; 0x0f
   1b5ee:	90 89       	ldd	r25, Z+16	; 0x10
}
   1b5f0:	08 95       	ret

0001b5f2 <_ZN15RHGenericDriver6rxGoodEv>:

uint16_t RHGenericDriver::rxGood()
{
    return _rxGood;
   1b5f2:	fc 01       	movw	r30, r24
   1b5f4:	81 89       	ldd	r24, Z+17	; 0x11
   1b5f6:	92 89       	ldd	r25, Z+18	; 0x12
}
   1b5f8:	08 95       	ret

0001b5fa <_ZN15RHGenericDriver6txGoodEv>:

uint16_t RHGenericDriver::txGood()
{
    return _txGood;
   1b5fa:	fc 01       	movw	r30, r24
   1b5fc:	83 89       	ldd	r24, Z+19	; 0x13
   1b5fe:	94 89       	ldd	r25, Z+20	; 0x14
}
   1b600:	08 95       	ret

0001b602 <_ZN15RHGenericDriver13waitAvailableEv>:
    return true;
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
   1b602:	cf 93       	push	r28
   1b604:	df 93       	push	r29
   1b606:	ec 01       	movw	r28, r24
    while (!available())
   1b608:	e8 81       	ld	r30, Y
   1b60a:	f9 81       	ldd	r31, Y+1	; 0x01
   1b60c:	06 80       	ldd	r0, Z+6	; 0x06
   1b60e:	f7 81       	ldd	r31, Z+7	; 0x07
   1b610:	e0 2d       	mov	r30, r0
   1b612:	ce 01       	movw	r24, r28
   1b614:	19 95       	eicall
   1b616:	81 11       	cpse	r24, r1
   1b618:	02 c0       	rjmp	.+4      	; 0x1b61e <_ZN15RHGenericDriver13waitAvailableEv+0x1c>
	YIELD;
   1b61a:	2f d7       	rcall	.+3678   	; 0x1c47a <yield>
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
    while (!available())
   1b61c:	f5 cf       	rjmp	.-22     	; 0x1b608 <_ZN15RHGenericDriver13waitAvailableEv+0x6>
	YIELD;
}
   1b61e:	df 91       	pop	r29
   1b620:	cf 91       	pop	r28
   1b622:	08 95       	ret

0001b624 <_ZN15RHGenericDriver14waitPacketSentEv>:
    }
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
   1b624:	cf 93       	push	r28
   1b626:	df 93       	push	r29
   1b628:	ec 01       	movw	r28, r24
    while (_mode == RHModeTx)
   1b62a:	8a 81       	ldd	r24, Y+2	; 0x02
   1b62c:	83 30       	cpi	r24, 0x03	; 3
   1b62e:	11 f4       	brne	.+4      	; 0x1b634 <_ZN15RHGenericDriver14waitPacketSentEv+0x10>
	YIELD; // Wait for any previous transmit to finish
   1b630:	24 d7       	rcall	.+3656   	; 0x1c47a <yield>
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
    while (_mode == RHModeTx)
   1b632:	fb cf       	rjmp	.-10     	; 0x1b62a <_ZN15RHGenericDriver14waitPacketSentEv+0x6>
	YIELD; // Wait for any previous transmit to finish
    return true;
}
   1b634:	81 e0       	ldi	r24, 0x01	; 1
   1b636:	df 91       	pop	r29
   1b638:	cf 91       	pop	r28
   1b63a:	08 95       	ret

0001b63c <_ZN15RHGenericDriver20waitAvailableTimeoutEj>:

// Blocks until a valid message is received or timeout expires
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
   1b63c:	8f 92       	push	r8
   1b63e:	9f 92       	push	r9
   1b640:	af 92       	push	r10
   1b642:	bf 92       	push	r11
   1b644:	cf 92       	push	r12
   1b646:	df 92       	push	r13
   1b648:	ef 92       	push	r14
   1b64a:	ff 92       	push	r15
   1b64c:	cf 93       	push	r28
   1b64e:	df 93       	push	r29
   1b650:	ec 01       	movw	r28, r24
   1b652:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b654:	b3 db       	rcall	.-2202   	; 0x1adbc <millis>
   1b656:	4b 01       	movw	r8, r22
   1b658:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b65a:	e1 2c       	mov	r14, r1
   1b65c:	f1 2c       	mov	r15, r1
   1b65e:	ae db       	rcall	.-2212   	; 0x1adbc <millis>
   1b660:	dc 01       	movw	r26, r24
   1b662:	cb 01       	movw	r24, r22
   1b664:	88 19       	sub	r24, r8
   1b666:	99 09       	sbc	r25, r9
   1b668:	aa 09       	sbc	r26, r10
   1b66a:	bb 09       	sbc	r27, r11
   1b66c:	8c 15       	cp	r24, r12
   1b66e:	9d 05       	cpc	r25, r13
   1b670:	ae 05       	cpc	r26, r14
   1b672:	bf 05       	cpc	r27, r15
   1b674:	58 f4       	brcc	.+22     	; 0x1b68c <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x50>
    {
        if (available())
   1b676:	e8 81       	ld	r30, Y
   1b678:	f9 81       	ldd	r31, Y+1	; 0x01
   1b67a:	06 80       	ldd	r0, Z+6	; 0x06
   1b67c:	f7 81       	ldd	r31, Z+7	; 0x07
   1b67e:	e0 2d       	mov	r30, r0
   1b680:	ce 01       	movw	r24, r28
   1b682:	19 95       	eicall
   1b684:	81 11       	cpse	r24, r1
	{
           return true;
	}
	YIELD;
   1b686:	03 c0       	rjmp	.+6      	; 0x1b68e <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x52>
   1b688:	f8 d6       	rcall	.+3568   	; 0x1c47a <yield>
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b68a:	e9 cf       	rjmp	.-46     	; 0x1b65e <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x22>
	{
           return true;
	}
	YIELD;
    }
    return false;
   1b68c:	80 e0       	ldi	r24, 0x00	; 0
}
   1b68e:	df 91       	pop	r29
   1b690:	cf 91       	pop	r28
   1b692:	ff 90       	pop	r15
   1b694:	ef 90       	pop	r14
   1b696:	df 90       	pop	r13
   1b698:	cf 90       	pop	r12
   1b69a:	bf 90       	pop	r11
   1b69c:	af 90       	pop	r10
   1b69e:	9f 90       	pop	r9
   1b6a0:	8f 90       	pop	r8
   1b6a2:	08 95       	ret

0001b6a4 <_ZN15RHGenericDriver14waitPacketSentEj>:
	YIELD; // Wait for any previous transmit to finish
    return true;
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
   1b6a4:	8f 92       	push	r8
   1b6a6:	9f 92       	push	r9
   1b6a8:	af 92       	push	r10
   1b6aa:	bf 92       	push	r11
   1b6ac:	cf 92       	push	r12
   1b6ae:	df 92       	push	r13
   1b6b0:	ef 92       	push	r14
   1b6b2:	ff 92       	push	r15
   1b6b4:	cf 93       	push	r28
   1b6b6:	df 93       	push	r29
   1b6b8:	ec 01       	movw	r28, r24
   1b6ba:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b6bc:	7f db       	rcall	.-2306   	; 0x1adbc <millis>
   1b6be:	4b 01       	movw	r8, r22
   1b6c0:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b6c2:	e1 2c       	mov	r14, r1
   1b6c4:	f1 2c       	mov	r15, r1
   1b6c6:	7a db       	rcall	.-2316   	; 0x1adbc <millis>
   1b6c8:	dc 01       	movw	r26, r24
   1b6ca:	cb 01       	movw	r24, r22
   1b6cc:	88 19       	sub	r24, r8
   1b6ce:	99 09       	sbc	r25, r9
   1b6d0:	aa 09       	sbc	r26, r10
   1b6d2:	bb 09       	sbc	r27, r11
   1b6d4:	8c 15       	cp	r24, r12
   1b6d6:	9d 05       	cpc	r25, r13
   1b6d8:	ae 05       	cpc	r26, r14
   1b6da:	bf 05       	cpc	r27, r15
   1b6dc:	28 f4       	brcc	.+10     	; 0x1b6e8 <_ZN15RHGenericDriver14waitPacketSentEj+0x44>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
   1b6de:	8a 81       	ldd	r24, Y+2	; 0x02
   1b6e0:	83 30       	cpi	r24, 0x03	; 3
           return true;
	YIELD;
   1b6e2:	21 f4       	brne	.+8      	; 0x1b6ec <_ZN15RHGenericDriver14waitPacketSentEj+0x48>
   1b6e4:	ca d6       	rcall	.+3476   	; 0x1c47a <yield>
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b6e6:	ef cf       	rjmp	.-34     	; 0x1b6c6 <_ZN15RHGenericDriver14waitPacketSentEj+0x22>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
	YIELD;
    }
    return false;
   1b6e8:	80 e0       	ldi	r24, 0x00	; 0
   1b6ea:	01 c0       	rjmp	.+2      	; 0x1b6ee <_ZN15RHGenericDriver14waitPacketSentEj+0x4a>
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
   1b6ec:	81 e0       	ldi	r24, 0x01	; 1
	YIELD;
    }
    return false;
}
   1b6ee:	df 91       	pop	r29
   1b6f0:	cf 91       	pop	r28
   1b6f2:	ff 90       	pop	r15
   1b6f4:	ef 90       	pop	r14
   1b6f6:	df 90       	pop	r13
   1b6f8:	cf 90       	pop	r12
   1b6fa:	bf 90       	pop	r11
   1b6fc:	af 90       	pop	r10
   1b6fe:	9f 90       	pop	r9
   1b700:	8f 90       	pop	r8
   1b702:	08 95       	ret

0001b704 <_ZN15RHGenericDriver7waitCADEv>:

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
   1b704:	cf 92       	push	r12
   1b706:	df 92       	push	r13
   1b708:	ef 92       	push	r14
   1b70a:	ff 92       	push	r15
   1b70c:	cf 93       	push	r28
   1b70e:	df 93       	push	r29
    if (!_cad_timeout)
   1b710:	fc 01       	movw	r30, r24
   1b712:	26 89       	ldd	r18, Z+22	; 0x16
   1b714:	37 89       	ldd	r19, Z+23	; 0x17
   1b716:	23 2b       	or	r18, r19
   1b718:	79 f1       	breq	.+94     	; 0x1b778 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b71a:	ec 01       	movw	r28, r24
    // Wait for any channel activity to finish or timeout
    // Sophisticated DCF function...
    // DCF : BackoffTime = random() x aSlotTime
    // 100 - 1000 ms
    // 10 sec timeout
    unsigned long t = millis();
   1b71c:	4f db       	rcall	.-2402   	; 0x1adbc <millis>
   1b71e:	6b 01       	movw	r12, r22
   1b720:	7c 01       	movw	r14, r24
    while (isChannelActive())
   1b722:	e8 81       	ld	r30, Y
   1b724:	f9 81       	ldd	r31, Y+1	; 0x01
   1b726:	00 8c       	ldd	r0, Z+24	; 0x18
   1b728:	f1 8d       	ldd	r31, Z+25	; 0x19
   1b72a:	e0 2d       	mov	r30, r0
   1b72c:	ce 01       	movw	r24, r28
   1b72e:	19 95       	eicall
   1b730:	88 23       	and	r24, r24
    {
         if (millis() - t > _cad_timeout) 
   1b732:	11 f1       	breq	.+68     	; 0x1b778 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b734:	43 db       	rcall	.-2426   	; 0x1adbc <millis>
   1b736:	ab 01       	movw	r20, r22
   1b738:	bc 01       	movw	r22, r24
   1b73a:	4c 19       	sub	r20, r12
   1b73c:	5d 09       	sbc	r21, r13
   1b73e:	6e 09       	sbc	r22, r14
   1b740:	7f 09       	sbc	r23, r15
   1b742:	8e 89       	ldd	r24, Y+22	; 0x16
   1b744:	9f 89       	ldd	r25, Y+23	; 0x17
   1b746:	a0 e0       	ldi	r26, 0x00	; 0
   1b748:	b0 e0       	ldi	r27, 0x00	; 0
   1b74a:	84 17       	cp	r24, r20
   1b74c:	95 07       	cpc	r25, r21
   1b74e:	a6 07       	cpc	r26, r22
   1b750:	b7 07       	cpc	r27, r23
   1b752:	a0 f0       	brcs	.+40     	; 0x1b77c <_ZN15RHGenericDriver7waitCADEv+0x78>
	     return false;
#if (RH_PLATFORM == RH_PLATFORM_STM32) // stdlib on STMF103 gets confused if random is redefined
	 delay(_random(1, 10) * 100);
#else
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
   1b754:	2a e0       	ldi	r18, 0x0A	; 10
   1b756:	30 e0       	ldi	r19, 0x00	; 0
   1b758:	40 e0       	ldi	r20, 0x00	; 0
   1b75a:	50 e0       	ldi	r21, 0x00	; 0
   1b75c:	61 e0       	ldi	r22, 0x01	; 1
   1b75e:	70 e0       	ldi	r23, 0x00	; 0
   1b760:	80 e0       	ldi	r24, 0x00	; 0
   1b762:	90 e0       	ldi	r25, 0x00	; 0
   1b764:	0e 94 4b e4 	call	0x1c896	; 0x1c896 <_Z6randomll>
   1b768:	9b 01       	movw	r18, r22
   1b76a:	ac 01       	movw	r20, r24
   1b76c:	a4 e6       	ldi	r26, 0x64	; 100
   1b76e:	b0 e0       	ldi	r27, 0x00	; 0
   1b770:	0e 94 34 eb 	call	0x1d668	; 0x1d668 <__muluhisi3>
   1b774:	54 db       	rcall	.-2392   	; 0x1ae1e <delay>
   1b776:	d5 cf       	rjmp	.-86     	; 0x1b722 <_ZN15RHGenericDriver7waitCADEv+0x1e>

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
    if (!_cad_timeout)
	return true;
   1b778:	81 e0       	ldi	r24, 0x01	; 1
   1b77a:	01 c0       	rjmp	.+2      	; 0x1b77e <_ZN15RHGenericDriver7waitCADEv+0x7a>
    // 10 sec timeout
    unsigned long t = millis();
    while (isChannelActive())
    {
         if (millis() - t > _cad_timeout) 
	     return false;
   1b77c:	80 e0       	ldi	r24, 0x00	; 0
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
#endif
    }

    return true;
}
   1b77e:	df 91       	pop	r29
   1b780:	cf 91       	pop	r28
   1b782:	ff 90       	pop	r15
   1b784:	ef 90       	pop	r14
   1b786:	df 90       	pop	r13
   1b788:	cf 90       	pop	r12
   1b78a:	08 95       	ret

0001b78c <_ZN15RHGenericDriverC1Ev>:
// Copyright (C) 2014 Mike McCauley
// $Id: RHGenericDriver.cpp,v 1.24 2020/01/07 23:35:02 mikem Exp $

#include <RHGenericDriver.h>

RHGenericDriver::RHGenericDriver()
   1b78c:	fc 01       	movw	r30, r24
    _txHeaderId(0),
    _txHeaderFlags(0),
    _rxBad(0),
    _rxGood(0),
    _txGood(0),
    _cad_timeout(0)
   1b78e:	89 e0       	ldi	r24, 0x09	; 9
   1b790:	98 e0       	ldi	r25, 0x08	; 8
   1b792:	91 83       	std	Z+1, r25	; 0x01
   1b794:	80 83       	st	Z, r24
   1b796:	12 82       	std	Z+2, r1	; 0x02
   1b798:	8f ef       	ldi	r24, 0xFF	; 255
   1b79a:	83 83       	std	Z+3, r24	; 0x03
   1b79c:	81 87       	std	Z+9, r24	; 0x09
   1b79e:	82 87       	std	Z+10, r24	; 0x0a
   1b7a0:	13 86       	std	Z+11, r1	; 0x0b
   1b7a2:	14 86       	std	Z+12, r1	; 0x0c
   1b7a4:	10 8a       	std	Z+16, r1	; 0x10
   1b7a6:	17 86       	std	Z+15, r1	; 0x0f
   1b7a8:	12 8a       	std	Z+18, r1	; 0x12
   1b7aa:	11 8a       	std	Z+17, r1	; 0x11
   1b7ac:	14 8a       	std	Z+20, r1	; 0x14
   1b7ae:	13 8a       	std	Z+19, r1	; 0x13
   1b7b0:	17 8a       	std	Z+23, r1	; 0x17
   1b7b2:	16 8a       	std	Z+22, r1	; 0x16
   1b7b4:	08 95       	ret

0001b7b6 <_ZN13RHHardwareSPI8transferEh>:
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    SPDR = data;
   1b7b6:	6e bd       	out	0x2e, r22	; 46
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
   1b7b8:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
   1b7ba:	0d b4       	in	r0, 0x2d	; 45
   1b7bc:	07 fe       	sbrs	r0, 7
   1b7be:	fd cf       	rjmp	.-6      	; 0x1b7ba <_ZN13RHHardwareSPI8transferEh+0x4>
    return SPDR;
   1b7c0:	8e b5       	in	r24, 0x2e	; 46
}

uint8_t RHHardwareSPI::transfer(uint8_t data) 
{
    return SPI.transfer(data);
}
   1b7c2:	08 95       	ret

0001b7c4 <_ZN13RHHardwareSPI15attachInterruptEv>:
    SPSR = (SPSR & ~SPI_2XCLOCK_MASK) | ((clockDiv >> 2) & SPI_2XCLOCK_MASK);
  }
  // These undocumented functions should not be used.  SPI.transfer()
  // polls the hardware flag which is automatically cleared as the
  // AVR responds to SPI's interrupt
  inline static void attachInterrupt() { SPCR |= _BV(SPIE); }
   1b7c4:	8c b5       	in	r24, 0x2c	; 44
   1b7c6:	80 68       	ori	r24, 0x80	; 128
   1b7c8:	8c bd       	out	0x2c, r24	; 44
   1b7ca:	08 95       	ret

0001b7cc <_ZN13RHHardwareSPI15detachInterruptEv>:
  inline static void detachInterrupt() { SPCR &= ~_BV(SPIE); }
   1b7cc:	8c b5       	in	r24, 0x2c	; 44
   1b7ce:	8f 77       	andi	r24, 0x7F	; 127
   1b7d0:	8c bd       	out	0x2c, r24	; 44
   1b7d2:	08 95       	ret

0001b7d4 <_ZN13RHHardwareSPI16beginTransactionEv>:
{
    return SPI.end();
}

void RHHardwareSPI::beginTransaction()
{
   1b7d4:	fc 01       	movw	r30, r24
   1b7d6:	45 81       	ldd	r20, Z+5	; 0x05
   1b7d8:	36 81       	ldd	r19, Z+6	; 0x06

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    if (interruptMode > 0) {
   1b7da:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b7de:	88 23       	and	r24, r24
   1b7e0:	99 f0       	breq	.+38     	; 0x1b808 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      uint8_t sreg = SREG;
   1b7e2:	2f b7       	in	r18, 0x3f	; 63
      noInterrupts();
   1b7e4:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b7e6:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b7ea:	81 30       	cpi	r24, 0x01	; 1
   1b7ec:	59 f4       	brne	.+22     	; 0x1b804 <_ZN13RHHardwareSPI16beginTransactionEv+0x30>
        interruptSave = SPI_AVR_EIMSK;
   1b7ee:	8d b3       	in	r24, 0x1d	; 29
   1b7f0:	80 93 57 18 	sts	0x1857, r24	; 0x801857 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
   1b7f4:	9d b3       	in	r25, 0x1d	; 29
   1b7f6:	80 91 58 18 	lds	r24, 0x1858	; 0x801858 <_ZN8SPIClass13interruptMaskE>
   1b7fa:	80 95       	com	r24
   1b7fc:	89 23       	and	r24, r25
   1b7fe:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b800:	2f bf       	out	0x3f, r18	; 63
   1b802:	02 c0       	rjmp	.+4      	; 0x1b808 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      } else
      #endif
      {
        interruptSave = sreg;
   1b804:	20 93 57 18 	sts	0x1857, r18	; 0x801857 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
   1b808:	4c bd       	out	0x2c, r20	; 44
    SPSR = settings.spsr;
   1b80a:	3d bd       	out	0x2d, r19	; 45
   1b80c:	08 95       	ret

0001b80e <_ZN13RHHardwareSPI5beginEv>:
    SPI.detachInterrupt();
#endif
}
    
void RHHardwareSPI::begin() 
{
   1b80e:	0f 93       	push	r16
   1b810:	1f 93       	push	r17
   1b812:	fc 01       	movw	r30, r24
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
   1b814:	82 81       	ldd	r24, Z+2	; 0x02
   1b816:	84 30       	cpi	r24, 0x04	; 4
   1b818:	59 f0       	breq	.+22     	; 0x1b830 <_ZN13RHHardwareSPI5beginEv+0x22>
       frequency = 16000000;
   else if (_frequency == Frequency8MHz)
   1b81a:	83 30       	cpi	r24, 0x03	; 3
   1b81c:	71 f0       	breq	.+28     	; 0x1b83a <_ZN13RHHardwareSPI5beginEv+0x2c>
       frequency = 8000000;
   else if (_frequency == Frequency4MHz)
   1b81e:	82 30       	cpi	r24, 0x02	; 2
   1b820:	89 f0       	breq	.+34     	; 0x1b844 <_ZN13RHHardwareSPI5beginEv+0x36>
       frequency = 4000000;
   else if (_frequency == Frequency2MHz)
   1b822:	81 30       	cpi	r24, 0x01	; 1
   1b824:	a1 f0       	breq	.+40     	; 0x1b84e <_ZN13RHHardwareSPI5beginEv+0x40>
       frequency = 2000000;
   else
       frequency = 1000000;
   1b826:	40 e4       	ldi	r20, 0x40	; 64
   1b828:	52 e4       	ldi	r21, 0x42	; 66
   1b82a:	6f e0       	ldi	r22, 0x0F	; 15
   1b82c:	70 e0       	ldi	r23, 0x00	; 0
   1b82e:	13 c0       	rjmp	.+38     	; 0x1b856 <_ZN13RHHardwareSPI5beginEv+0x48>
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
       frequency = 16000000;
   1b830:	40 e0       	ldi	r20, 0x00	; 0
   1b832:	54 e2       	ldi	r21, 0x24	; 36
   1b834:	64 ef       	ldi	r22, 0xF4	; 244
   1b836:	70 e0       	ldi	r23, 0x00	; 0
   1b838:	0e c0       	rjmp	.+28     	; 0x1b856 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency8MHz)
       frequency = 8000000;
   1b83a:	40 e0       	ldi	r20, 0x00	; 0
   1b83c:	52 e1       	ldi	r21, 0x12	; 18
   1b83e:	6a e7       	ldi	r22, 0x7A	; 122
   1b840:	70 e0       	ldi	r23, 0x00	; 0
   1b842:	09 c0       	rjmp	.+18     	; 0x1b856 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency4MHz)
       frequency = 4000000;
   1b844:	40 e0       	ldi	r20, 0x00	; 0
   1b846:	59 e0       	ldi	r21, 0x09	; 9
   1b848:	6d e3       	ldi	r22, 0x3D	; 61
   1b84a:	70 e0       	ldi	r23, 0x00	; 0
   1b84c:	04 c0       	rjmp	.+8      	; 0x1b856 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency2MHz)
       frequency = 2000000;
   1b84e:	40 e8       	ldi	r20, 0x80	; 128
   1b850:	54 e8       	ldi	r21, 0x84	; 132
   1b852:	6e e1       	ldi	r22, 0x1E	; 30
   1b854:	70 e0       	ldi	r23, 0x00	; 0
       bitOrder = LSBFIRST;
   else
       bitOrder = MSBFIRST;
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
   1b856:	84 81       	ldd	r24, Z+4	; 0x04
   1b858:	88 23       	and	r24, r24
   1b85a:	61 f0       	breq	.+24     	; 0x1b874 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
   1b85c:	81 30       	cpi	r24, 0x01	; 1
   1b85e:	31 f0       	breq	.+12     	; 0x1b86c <_ZN13RHHardwareSPI5beginEv+0x5e>
	dataMode = SPI_MODE1;
    else if (_dataMode == DataMode2)
   1b860:	82 30       	cpi	r24, 0x02	; 2
   1b862:	31 f0       	breq	.+12     	; 0x1b870 <_ZN13RHHardwareSPI5beginEv+0x62>
	dataMode = SPI_MODE2;
    else if (_dataMode == DataMode3)
   1b864:	83 30       	cpi	r24, 0x03	; 3
   1b866:	31 f4       	brne	.+12     	; 0x1b874 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE3;
   1b868:	9c e0       	ldi	r25, 0x0C	; 12
   1b86a:	05 c0       	rjmp	.+10     	; 0x1b876 <_ZN13RHHardwareSPI5beginEv+0x68>
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
	dataMode = SPI_MODE1;
   1b86c:	94 e0       	ldi	r25, 0x04	; 4
   1b86e:	03 c0       	rjmp	.+6      	; 0x1b876 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode2)
	dataMode = SPI_MODE2;
   1b870:	98 e0       	ldi	r25, 0x08	; 8
   1b872:	01 c0       	rjmp	.+2      	; 0x1b876 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode3)
	dataMode = SPI_MODE3;
    else
	dataMode = SPI_MODE0;
   1b874:	90 e0       	ldi	r25, 0x00	; 0
   1b876:	00 e0       	ldi	r16, 0x00	; 0
   1b878:	12 e1       	ldi	r17, 0x12	; 18
   1b87a:	2a e7       	ldi	r18, 0x7A	; 122
   1b87c:	30 e0       	ldi	r19, 0x00	; 0
   1b87e:	80 e0       	ldi	r24, 0x00	; 0
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b880:	40 17       	cp	r20, r16
   1b882:	51 07       	cpc	r21, r17
   1b884:	62 07       	cpc	r22, r18
   1b886:	73 07       	cpc	r23, r19
   1b888:	40 f4       	brcc	.+16     	; 0x1b89a <_ZN13RHHardwareSPI5beginEv+0x8c>
        clockSetting /= 2;
   1b88a:	36 95       	lsr	r19
   1b88c:	27 95       	ror	r18
   1b88e:	17 95       	ror	r17
   1b890:	07 95       	ror	r16
        clockDiv++;
   1b892:	8f 5f       	subi	r24, 0xFF	; 255
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b894:	86 30       	cpi	r24, 0x06	; 6
   1b896:	a1 f7       	brne	.-24     	; 0x1b880 <_ZN13RHHardwareSPI5beginEv+0x72>
      }
    }

    // Compensate for the duplicate fosc/64
    if (clockDiv == 6)
    clockDiv = 7;
   1b898:	87 e0       	ldi	r24, 0x07	; 7

    // Invert the SPI2X bit
    clockDiv ^= 0x1;
   1b89a:	21 e0       	ldi	r18, 0x01	; 1
   1b89c:	28 27       	eor	r18, r24

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b89e:	83 81       	ldd	r24, Z+3	; 0x03
   1b8a0:	81 30       	cpi	r24, 0x01	; 1
   1b8a2:	11 f0       	breq	.+4      	; 0x1b8a8 <_ZN13RHHardwareSPI5beginEv+0x9a>
   1b8a4:	80 e5       	ldi	r24, 0x50	; 80
   1b8a6:	01 c0       	rjmp	.+2      	; 0x1b8aa <_ZN13RHHardwareSPI5beginEv+0x9c>
   1b8a8:	80 e7       	ldi	r24, 0x70	; 112

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   1b8aa:	32 2f       	mov	r19, r18
   1b8ac:	36 95       	lsr	r19
   1b8ae:	93 2b       	or	r25, r19
   1b8b0:	98 2b       	or	r25, r24
   1b8b2:	95 83       	std	Z+5, r25	; 0x05
   1b8b4:	21 70       	andi	r18, 0x01	; 1
   1b8b6:	26 83       	std	Z+6, r18	; 0x06
#else
 #warning RHHardwareSPI does not support this platform yet. Consider adding it and contributing a patch.
#endif

#endif // SPI_HAS_TRANSACTION
}
   1b8b8:	1f 91       	pop	r17
   1b8ba:	0f 91       	pop	r16
    else
	dataMode = SPI_MODE0;

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   SPI.begin();
   1b8bc:	67 c4       	rjmp	.+2254   	; 0x1c18c <_ZN8SPIClass5beginEv>

0001b8be <_ZN13RHHardwareSPI3endEv>:
#endif // SPI_HAS_TRANSACTION
}

void RHHardwareSPI::end() 
{
    return SPI.end();
   1b8be:	9c c4       	rjmp	.+2360   	; 0x1c1f8 <_ZN8SPIClass3endEv>

0001b8c0 <_ZN13RHHardwareSPI14usingInterruptEh>:
    SPI.endTransaction();
#endif
}

void RHHardwareSPI::usingInterrupt(uint8_t interrupt)
{
   1b8c0:	86 2f       	mov	r24, r22
#if defined(SPI_HAS_TRANSACTION) && !defined(RH_MISSING_SPIUSINGINTERRUPT)
    SPI.usingInterrupt(interrupt);
   1b8c2:	ae c4       	rjmp	.+2396   	; 0x1c220 <_ZN8SPIClass14usingInterruptEh>

0001b8c4 <_ZN13RHHardwareSPI14endTransactionEv>:
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
   1b8c4:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b8c8:	88 23       	and	r24, r24
   1b8ca:	61 f0       	breq	.+24     	; 0x1b8e4 <_ZN13RHHardwareSPI14endTransactionEv+0x20>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
   1b8cc:	9f b7       	in	r25, 0x3f	; 63
      #endif
      noInterrupts();
   1b8ce:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b8d0:	20 91 59 18 	lds	r18, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b8d4:	80 91 57 18 	lds	r24, 0x1857	; 0x801857 <_ZN8SPIClass13interruptSaveE>
   1b8d8:	21 30       	cpi	r18, 0x01	; 1
   1b8da:	19 f4       	brne	.+6      	; 0x1b8e2 <_ZN13RHHardwareSPI14endTransactionEv+0x1e>
        SPI_AVR_EIMSK = interruptSave;
   1b8dc:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b8de:	9f bf       	out	0x3f, r25	; 63
   1b8e0:	08 95       	ret
      } else
      #endif
      {
        SREG = interruptSave;
   1b8e2:	8f bf       	out	0x3f, r24	; 63
   1b8e4:	08 95       	ret

0001b8e6 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>:
 #define SPI_CLOCK_DIV4  (VARIANT_MCK/21000000) // 4MHz
 #define SPI_CLOCK_DIV2  (VARIANT_MCK/10500000) // 8MHz
 #define SPI_CLOCK_DIV1  (VARIANT_MCK/5250000)  // 16MHz
#endif

RHHardwareSPI::RHHardwareSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1b8e6:	cf 93       	push	r28
   1b8e8:	df 93       	push	r29
   1b8ea:	ec 01       	movw	r28, r24
    :
    RHGenericSPI(frequency, bitOrder, dataMode)
   1b8ec:	0e 94 7a e4 	call	0x1c8f4	; 0x1c8f4 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>
   1b8f0:	89 e4       	ldi	r24, 0x49	; 73
   1b8f2:	98 e0       	ldi	r25, 0x08	; 8
   1b8f4:	99 83       	std	Y+1, r25	; 0x01
   1b8f6:	88 83       	st	Y, r24
    // Invert the SPI2X bit
    clockDiv ^= 0x1;

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b8f8:	80 e5       	ldi	r24, 0x50	; 80
   1b8fa:	8d 83       	std	Y+5, r24	; 0x05
    spsr = clockDiv & SPI_2XCLOCK_MASK;
   1b8fc:	1e 82       	std	Y+6, r1	; 0x06
{
}
   1b8fe:	df 91       	pop	r29
   1b900:	cf 91       	pop	r28
   1b902:	08 95       	ret

0001b904 <_GLOBAL__sub_I_hardware_spi>:
#include <RHHardwareSPI.h>

#ifdef RH_HAVE_HARDWARE_SPI

// Declare a single default instance of the hardware SPI interface class
RHHardwareSPI hardware_spi;
   1b904:	20 e0       	ldi	r18, 0x00	; 0
   1b906:	40 e0       	ldi	r20, 0x00	; 0
   1b908:	60 e0       	ldi	r22, 0x00	; 0
   1b90a:	89 e4       	ldi	r24, 0x49	; 73
   1b90c:	98 e1       	ldi	r25, 0x18	; 24
   1b90e:	eb cf       	rjmp	.-42     	; 0x1b8e6 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>

0001b910 <_ZN7RH_RF9514modeWillChangeEN15RHGenericDriver6RHModeE>:
	cr = RH_RF95_CODING_RATE_4_7;
    else if (denominator >= 8)
	cr = RH_RF95_CODING_RATE_4_8;
 
    // CR is bits 3..1 of RH_RF95_REG_1D_MODEM_CONFIG1
    spiWrite(RH_RF95_REG_1D_MODEM_CONFIG1, (spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) & ~RH_RF95_CODING_RATE) | cr);
   1b910:	81 e0       	ldi	r24, 0x01	; 1
   1b912:	08 95       	ret

0001b914 <_ZN7RH_RF9516maxMessageLengthEv>:
   1b914:	8f e1       	ldi	r24, 0x1F	; 31
   1b916:	08 95       	ret

0001b918 <_ZN7RH_RF95D1Ev>:
   1b918:	08 95       	ret

0001b91a <_ZN7RH_RF9515isChannelActiveEv>:
   1b91a:	cf 93       	push	r28
   1b91c:	df 93       	push	r29
   1b91e:	ec 01       	movw	r28, r24
   1b920:	8a 81       	ldd	r24, Y+2	; 0x02
   1b922:	85 30       	cpi	r24, 0x05	; 5
   1b924:	b1 f0       	breq	.+44     	; 0x1b952 <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b926:	e8 81       	ld	r30, Y
   1b928:	f9 81       	ldd	r31, Y+1	; 0x01
   1b92a:	e0 5c       	subi	r30, 0xC0	; 192
   1b92c:	ff 4f       	sbci	r31, 0xFF	; 255
   1b92e:	01 90       	ld	r0, Z+
   1b930:	f0 81       	ld	r31, Z
   1b932:	e0 2d       	mov	r30, r0
   1b934:	65 e0       	ldi	r22, 0x05	; 5
   1b936:	ce 01       	movw	r24, r28
   1b938:	19 95       	eicall
   1b93a:	47 e0       	ldi	r20, 0x07	; 7
   1b93c:	61 e0       	ldi	r22, 0x01	; 1
   1b93e:	ce 01       	movw	r24, r28
   1b940:	0e 94 0c e5 	call	0x1ca18	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1b944:	40 e8       	ldi	r20, 0x80	; 128
   1b946:	60 e4       	ldi	r22, 0x40	; 64
   1b948:	ce 01       	movw	r24, r28
   1b94a:	0e 94 0c e5 	call	0x1ca18	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1b94e:	85 e0       	ldi	r24, 0x05	; 5
   1b950:	8a 83       	std	Y+2, r24	; 0x02
   1b952:	8a 81       	ldd	r24, Y+2	; 0x02
   1b954:	85 30       	cpi	r24, 0x05	; 5
   1b956:	11 f4       	brne	.+4      	; 0x1b95c <_ZN7RH_RF9515isChannelActiveEv+0x42>
   1b958:	90 d5       	rcall	.+2848   	; 0x1c47a <yield>
   1b95a:	fb cf       	rjmp	.-10     	; 0x1b952 <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b95c:	8d 89       	ldd	r24, Y+21	; 0x15
   1b95e:	df 91       	pop	r29
   1b960:	cf 91       	pop	r28
   1b962:	08 95       	ret

0001b964 <_ZN7RH_RF95D0Ev>:
   1b964:	8b c5       	rjmp	.+2838   	; 0x1c47c <_ZdlPv>

0001b966 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>:
   1b966:	0f 93       	push	r16
   1b968:	1f 93       	push	r17
   1b96a:	cf 93       	push	r28
   1b96c:	8c 01       	movw	r16, r24
   1b96e:	c6 2f       	mov	r28, r22
   1b970:	65 31       	cpi	r22, 0x15	; 21
   1b972:	2c f4       	brge	.+10     	; 0x1b97e <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x18>
   1b974:	62 30       	cpi	r22, 0x02	; 2
   1b976:	5c f0       	brlt	.+22     	; 0x1b98e <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x28>
   1b978:	62 31       	cpi	r22, 0x12	; 18
   1b97a:	54 f0       	brlt	.+20     	; 0x1b990 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x2a>
   1b97c:	01 c0       	rjmp	.+2      	; 0x1b980 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x1a>
   1b97e:	c4 e1       	ldi	r28, 0x14	; 20
   1b980:	47 e0       	ldi	r20, 0x07	; 7
   1b982:	6d e4       	ldi	r22, 0x4D	; 77
   1b984:	c8 01       	movw	r24, r16
   1b986:	0e 94 0c e5 	call	0x1ca18	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1b98a:	c3 50       	subi	r28, 0x03	; 3
   1b98c:	06 c0       	rjmp	.+12     	; 0x1b99a <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x34>
   1b98e:	c2 e0       	ldi	r28, 0x02	; 2
   1b990:	44 e0       	ldi	r20, 0x04	; 4
   1b992:	6d e4       	ldi	r22, 0x4D	; 77
   1b994:	c8 01       	movw	r24, r16
   1b996:	0e 94 0c e5 	call	0x1ca18	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1b99a:	4e ef       	ldi	r20, 0xFE	; 254
   1b99c:	4c 0f       	add	r20, r28
   1b99e:	40 68       	ori	r20, 0x80	; 128
   1b9a0:	69 e0       	ldi	r22, 0x09	; 9
   1b9a2:	c8 01       	movw	r24, r16
   1b9a4:	cf 91       	pop	r28
   1b9a6:	1f 91       	pop	r17
   1b9a8:	0f 91       	pop	r16
   1b9aa:	0c 94 0c e5 	jmp	0x1ca18	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>

0001b9ae <_ZN7RH_RF955sleepEv>:
   1b9ae:	cf 93       	push	r28
   1b9b0:	df 93       	push	r29
   1b9b2:	fc 01       	movw	r30, r24
   1b9b4:	22 81       	ldd	r18, Z+2	; 0x02
   1b9b6:	21 30       	cpi	r18, 0x01	; 1
   1b9b8:	91 f0       	breq	.+36     	; 0x1b9de <_ZN7RH_RF955sleepEv+0x30>
   1b9ba:	ec 01       	movw	r28, r24
   1b9bc:	01 90       	ld	r0, Z+
   1b9be:	f0 81       	ld	r31, Z
   1b9c0:	e0 2d       	mov	r30, r0
   1b9c2:	e0 5c       	subi	r30, 0xC0	; 192
   1b9c4:	ff 4f       	sbci	r31, 0xFF	; 255
   1b9c6:	01 90       	ld	r0, Z+
   1b9c8:	f0 81       	ld	r31, Z
   1b9ca:	e0 2d       	mov	r30, r0
   1b9cc:	61 e0       	ldi	r22, 0x01	; 1
   1b9ce:	19 95       	eicall
   1b9d0:	40 e0       	ldi	r20, 0x00	; 0
   1b9d2:	61 e0       	ldi	r22, 0x01	; 1
   1b9d4:	ce 01       	movw	r24, r28
   1b9d6:	0e 94 0c e5 	call	0x1ca18	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1b9da:	81 e0       	ldi	r24, 0x01	; 1
   1b9dc:	8a 83       	std	Y+2, r24	; 0x02
   1b9de:	81 e0       	ldi	r24, 0x01	; 1
   1b9e0:	df 91       	pop	r29
   1b9e2:	cf 91       	pop	r28
   1b9e4:	08 95       	ret

0001b9e6 <_ZN7RH_RF95C1EhhR12RHGenericSPI>:
   1b9e6:	1f 93       	push	r17
   1b9e8:	cf 93       	push	r28
   1b9ea:	df 93       	push	r29
   1b9ec:	ec 01       	movw	r28, r24
   1b9ee:	14 2f       	mov	r17, r20
   1b9f0:	a9 01       	movw	r20, r18
   1b9f2:	b6 d7       	rcall	.+3948   	; 0x1c960 <_ZN11RHSPIDriverC1EhR12RHGenericSPI>
   1b9f4:	83 e6       	ldi	r24, 0x63	; 99
   1b9f6:	98 e0       	ldi	r25, 0x08	; 8
   1b9f8:	99 83       	std	Y+1, r25	; 0x01
   1b9fa:	88 83       	st	Y, r24
   1b9fc:	fe 01       	movw	r30, r28
   1b9fe:	ee 5b       	subi	r30, 0xBE	; 190
   1ba00:	ff 4f       	sbci	r31, 0xFF	; 255
   1ba02:	10 82       	st	Z, r1
   1ba04:	34 96       	adiw	r30, 0x04	; 4
   1ba06:	10 82       	st	Z, r1
   1ba08:	1c 8f       	std	Y+28, r17	; 0x1c
   1ba0a:	8f ef       	ldi	r24, 0xFF	; 255
   1ba0c:	8d 8f       	std	Y+29, r24	; 0x1d
   1ba0e:	31 97       	sbiw	r30, 0x01	; 1
   1ba10:	81 e0       	ldi	r24, 0x01	; 1
   1ba12:	80 83       	st	Z, r24
   1ba14:	1b 8e       	std	Y+27, r1	; 0x1b
   1ba16:	df 91       	pop	r29
   1ba18:	cf 91       	pop	r28
   1ba1a:	1f 91       	pop	r17
   1ba1c:	08 95       	ret

0001ba1e <_ZN7RH_RF9513validateRxBufEv>:
   1ba1e:	fc 01       	movw	r30, r24
   1ba20:	86 8d       	ldd	r24, Z+30	; 0x1e
   1ba22:	84 30       	cpi	r24, 0x04	; 4
   1ba24:	d8 f0       	brcs	.+54     	; 0x1ba5c <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1ba26:	87 8d       	ldd	r24, Z+31	; 0x1f
   1ba28:	85 83       	std	Z+5, r24	; 0x05
   1ba2a:	80 a1       	ldd	r24, Z+32	; 0x20
   1ba2c:	86 83       	std	Z+6, r24	; 0x06
   1ba2e:	81 a1       	ldd	r24, Z+33	; 0x21
   1ba30:	87 83       	std	Z+7, r24	; 0x07
   1ba32:	82 a1       	ldd	r24, Z+34	; 0x22
   1ba34:	80 87       	std	Z+8, r24	; 0x08
   1ba36:	84 81       	ldd	r24, Z+4	; 0x04
   1ba38:	81 11       	cpse	r24, r1
   1ba3a:	07 c0       	rjmp	.+14     	; 0x1ba4a <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1ba3c:	95 81       	ldd	r25, Z+5	; 0x05
   1ba3e:	83 81       	ldd	r24, Z+3	; 0x03
   1ba40:	98 17       	cp	r25, r24
   1ba42:	19 f0       	breq	.+6      	; 0x1ba4a <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1ba44:	85 81       	ldd	r24, Z+5	; 0x05
   1ba46:	8f 3f       	cpi	r24, 0xFF	; 255
   1ba48:	49 f4       	brne	.+18     	; 0x1ba5c <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1ba4a:	81 89       	ldd	r24, Z+17	; 0x11
   1ba4c:	92 89       	ldd	r25, Z+18	; 0x12
   1ba4e:	01 96       	adiw	r24, 0x01	; 1
   1ba50:	92 8b       	std	Z+18, r25	; 0x12
   1ba52:	81 8b       	std	Z+17, r24	; 0x11
   1ba54:	ee 5b       	subi	r30, 0xBE	; 190
   1ba56:	ff 4f       	sbci	r31, 0xFF	; 255
   1ba58:	81 e0       	ldi	r24, 0x01	; 1
   1ba5a:	80 83       	st	Z, r24
   1ba5c:	08 95       	ret

0001ba5e <_ZN7RH_RF9510clearRxBufEv>:
   1ba5e:	2f b7       	in	r18, 0x3f	; 63
   1ba60:	f8 94       	cli
   1ba62:	fc 01       	movw	r30, r24
   1ba64:	ee 5b       	subi	r30, 0xBE	; 190
   1ba66:	ff 4f       	sbci	r31, 0xFF	; 255
   1ba68:	10 82       	st	Z, r1
   1ba6a:	fc 01       	movw	r30, r24
   1ba6c:	16 8e       	std	Z+30, r1	; 0x1e
   1ba6e:	2f bf       	out	0x3f, r18	; 63
   1ba70:	08 95       	ret

0001ba72 <_ZN7RH_RF954recvEPhS0_>:
   1ba72:	cf 92       	push	r12
   1ba74:	df 92       	push	r13
   1ba76:	ef 92       	push	r14
   1ba78:	ff 92       	push	r15
   1ba7a:	0f 93       	push	r16
   1ba7c:	1f 93       	push	r17
   1ba7e:	cf 93       	push	r28
   1ba80:	df 93       	push	r29
   1ba82:	ec 01       	movw	r28, r24
   1ba84:	7b 01       	movw	r14, r22
   1ba86:	8a 01       	movw	r16, r20
   1ba88:	e8 81       	ld	r30, Y
   1ba8a:	f9 81       	ldd	r31, Y+1	; 0x01
   1ba8c:	06 80       	ldd	r0, Z+6	; 0x06
   1ba8e:	f7 81       	ldd	r31, Z+7	; 0x07
   1ba90:	e0 2d       	mov	r30, r0
   1ba92:	19 95       	eicall
   1ba94:	d8 2e       	mov	r13, r24
   1ba96:	88 23       	and	r24, r24
   1ba98:	01 f1       	breq	.+64     	; 0x1bada <_ZN7RH_RF954recvEPhS0_+0x68>
   1ba9a:	e1 14       	cp	r14, r1
   1ba9c:	f1 04       	cpc	r15, r1
   1ba9e:	d9 f0       	breq	.+54     	; 0x1bad6 <_ZN7RH_RF954recvEPhS0_+0x64>
   1baa0:	01 15       	cp	r16, r1
   1baa2:	11 05       	cpc	r17, r1
   1baa4:	c1 f0       	breq	.+48     	; 0x1bad6 <_ZN7RH_RF954recvEPhS0_+0x64>
   1baa6:	cf b6       	in	r12, 0x3f	; 63
   1baa8:	f8 94       	cli
   1baaa:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1baac:	90 e0       	ldi	r25, 0x00	; 0
   1baae:	03 97       	sbiw	r24, 0x03	; 3
   1bab0:	f8 01       	movw	r30, r16
   1bab2:	20 81       	ld	r18, Z
   1bab4:	30 e0       	ldi	r19, 0x00	; 0
   1bab6:	28 17       	cp	r18, r24
   1bab8:	39 07       	cpc	r19, r25
   1baba:	1c f0       	brlt	.+6      	; 0x1bac2 <_ZN7RH_RF954recvEPhS0_+0x50>
   1babc:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1babe:	84 50       	subi	r24, 0x04	; 4
   1bac0:	80 83       	st	Z, r24
   1bac2:	f8 01       	movw	r30, r16
   1bac4:	40 81       	ld	r20, Z
   1bac6:	50 e0       	ldi	r21, 0x00	; 0
   1bac8:	be 01       	movw	r22, r28
   1baca:	6d 5d       	subi	r22, 0xDD	; 221
   1bacc:	7f 4f       	sbci	r23, 0xFF	; 255
   1bace:	c7 01       	movw	r24, r14
   1bad0:	0e 94 26 ed 	call	0x1da4c	; 0x1da4c <memcpy>
   1bad4:	cf be       	out	0x3f, r12	; 63
   1bad6:	ce 01       	movw	r24, r28
   1bad8:	c2 df       	rcall	.-124    	; 0x1ba5e <_ZN7RH_RF9510clearRxBufEv>
   1bada:	8d 2d       	mov	r24, r13
   1badc:	df 91       	pop	r29
   1bade:	cf 91       	pop	r28
   1bae0:	1f 91       	pop	r17
   1bae2:	0f 91       	pop	r16
   1bae4:	ff 90       	pop	r15
   1bae6:	ef 90       	pop	r14
   1bae8:	df 90       	pop	r13
   1baea:	cf 90       	pop	r12
   1baec:	08 95       	ret

0001baee <_ZN7RH_RF9512setFrequencyEf>:
   1baee:	8f 92       	push	r8
   1baf0:	9f 92       	push	r9
   1baf2:	af 92       	push	r10
   1baf4:	bf 92       	push	r11
   1baf6:	cf 92       	push	r12
   1baf8:	df 92       	push	r13
   1bafa:	ef 92       	push	r14
   1bafc:	ff 92       	push	r15
   1bafe:	1f 93       	push	r17
   1bb00:	cf 93       	push	r28
   1bb02:	df 93       	push	r29
   1bb04:	ec 01       	movw	r28, r24
   1bb06:	4a 01       	movw	r8, r20
   1bb08:	5b 01       	movw	r10, r22
   1bb0a:	20 e0       	ldi	r18, 0x00	; 0
   1bb0c:	34 e2       	ldi	r19, 0x24	; 36
   1bb0e:	44 e7       	ldi	r20, 0x74	; 116
   1bb10:	59 e4       	ldi	r21, 0x49	; 73
   1bb12:	c5 01       	movw	r24, r10
   1bb14:	b4 01       	movw	r22, r8
   1bb16:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
   1bb1a:	20 e0       	ldi	r18, 0x00	; 0
   1bb1c:	34 e2       	ldi	r19, 0x24	; 36
   1bb1e:	44 e7       	ldi	r20, 0x74	; 116
   1bb20:	52 e4       	ldi	r21, 0x42	; 66
   1bb22:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
   1bb26:	0e 94 1f d1 	call	0x1a23e	; 0x1a23e <__fixunssfsi>
   1bb2a:	6b 01       	movw	r12, r22
   1bb2c:	7c 01       	movw	r14, r24
   1bb2e:	a7 01       	movw	r20, r14
   1bb30:	66 27       	eor	r22, r22
   1bb32:	77 27       	eor	r23, r23
   1bb34:	66 e0       	ldi	r22, 0x06	; 6
   1bb36:	ce 01       	movw	r24, r28
   1bb38:	6f d7       	rcall	.+3806   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bb3a:	77 27       	eor	r23, r23
   1bb3c:	6f 2d       	mov	r22, r15
   1bb3e:	5e 2d       	mov	r21, r14
   1bb40:	4d 2d       	mov	r20, r13
   1bb42:	67 e0       	ldi	r22, 0x07	; 7
   1bb44:	ce 01       	movw	r24, r28
   1bb46:	68 d7       	rcall	.+3792   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bb48:	4c 2d       	mov	r20, r12
   1bb4a:	68 e0       	ldi	r22, 0x08	; 8
   1bb4c:	ce 01       	movw	r24, r28
   1bb4e:	64 d7       	rcall	.+3784   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bb50:	cd 5b       	subi	r28, 0xBD	; 189
   1bb52:	df 4f       	sbci	r29, 0xFF	; 255
   1bb54:	11 e0       	ldi	r17, 0x01	; 1
   1bb56:	20 e0       	ldi	r18, 0x00	; 0
   1bb58:	30 ec       	ldi	r19, 0xC0	; 192
   1bb5a:	42 e4       	ldi	r20, 0x42	; 66
   1bb5c:	54 e4       	ldi	r21, 0x44	; 68
   1bb5e:	c5 01       	movw	r24, r10
   1bb60:	b4 01       	movw	r22, r8
   1bb62:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
   1bb66:	87 fd       	sbrc	r24, 7
   1bb68:	10 e0       	ldi	r17, 0x00	; 0
   1bb6a:	18 83       	st	Y, r17
   1bb6c:	81 e0       	ldi	r24, 0x01	; 1
   1bb6e:	df 91       	pop	r29
   1bb70:	cf 91       	pop	r28
   1bb72:	1f 91       	pop	r17
   1bb74:	ff 90       	pop	r15
   1bb76:	ef 90       	pop	r14
   1bb78:	df 90       	pop	r13
   1bb7a:	cf 90       	pop	r12
   1bb7c:	bf 90       	pop	r11
   1bb7e:	af 90       	pop	r10
   1bb80:	9f 90       	pop	r9
   1bb82:	8f 90       	pop	r8
   1bb84:	08 95       	ret

0001bb86 <_ZN7RH_RF9511setModeIdleEv>:
   1bb86:	cf 93       	push	r28
   1bb88:	df 93       	push	r29
   1bb8a:	fc 01       	movw	r30, r24
   1bb8c:	22 81       	ldd	r18, Z+2	; 0x02
   1bb8e:	22 30       	cpi	r18, 0x02	; 2
   1bb90:	89 f0       	breq	.+34     	; 0x1bbb4 <_ZN7RH_RF9511setModeIdleEv+0x2e>
   1bb92:	ec 01       	movw	r28, r24
   1bb94:	01 90       	ld	r0, Z+
   1bb96:	f0 81       	ld	r31, Z
   1bb98:	e0 2d       	mov	r30, r0
   1bb9a:	e0 5c       	subi	r30, 0xC0	; 192
   1bb9c:	ff 4f       	sbci	r31, 0xFF	; 255
   1bb9e:	01 90       	ld	r0, Z+
   1bba0:	f0 81       	ld	r31, Z
   1bba2:	e0 2d       	mov	r30, r0
   1bba4:	62 e0       	ldi	r22, 0x02	; 2
   1bba6:	19 95       	eicall
   1bba8:	41 e0       	ldi	r20, 0x01	; 1
   1bbaa:	61 e0       	ldi	r22, 0x01	; 1
   1bbac:	ce 01       	movw	r24, r28
   1bbae:	34 d7       	rcall	.+3688   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bbb0:	82 e0       	ldi	r24, 0x02	; 2
   1bbb2:	8a 83       	std	Y+2, r24	; 0x02
   1bbb4:	df 91       	pop	r29
   1bbb6:	cf 91       	pop	r28
   1bbb8:	08 95       	ret

0001bbba <_ZN7RH_RF9515handleInterruptEv>:
   1bbba:	0f 93       	push	r16
   1bbbc:	1f 93       	push	r17
   1bbbe:	cf 93       	push	r28
   1bbc0:	df 93       	push	r29
   1bbc2:	ec 01       	movw	r28, r24
   1bbc4:	62 e1       	ldi	r22, 0x12	; 18
   1bbc6:	e3 d6       	rcall	.+3526   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1bbc8:	18 2f       	mov	r17, r24
   1bbca:	6c e1       	ldi	r22, 0x1C	; 28
   1bbcc:	ce 01       	movw	r24, r28
   1bbce:	df d6       	rcall	.+3518   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1bbd0:	08 2f       	mov	r16, r24
   1bbd2:	4f ef       	ldi	r20, 0xFF	; 255
   1bbd4:	62 e1       	ldi	r22, 0x12	; 18
   1bbd6:	ce 01       	movw	r24, r28
   1bbd8:	1f d7       	rcall	.+3646   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bbda:	8a 81       	ldd	r24, Y+2	; 0x02
   1bbdc:	84 30       	cpi	r24, 0x04	; 4
   1bbde:	b1 f4       	brne	.+44     	; 0x1bc0c <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bbe0:	81 2f       	mov	r24, r17
   1bbe2:	80 7a       	andi	r24, 0xA0	; 160
   1bbe4:	41 f4       	brne	.+16     	; 0x1bbf6 <_ZN7RH_RF9515handleInterruptEv+0x3c>
   1bbe6:	fe 01       	movw	r30, r28
   1bbe8:	eb 5b       	subi	r30, 0xBB	; 187
   1bbea:	ff 4f       	sbci	r31, 0xFF	; 255
   1bbec:	80 81       	ld	r24, Z
   1bbee:	88 23       	and	r24, r24
   1bbf0:	69 f0       	breq	.+26     	; 0x1bc0c <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bbf2:	06 fd       	sbrc	r16, 6
   1bbf4:	0b c0       	rjmp	.+22     	; 0x1bc0c <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bbf6:	8f 85       	ldd	r24, Y+15	; 0x0f
   1bbf8:	98 89       	ldd	r25, Y+16	; 0x10
   1bbfa:	01 96       	adiw	r24, 0x01	; 1
   1bbfc:	98 8b       	std	Y+16, r25	; 0x10
   1bbfe:	8f 87       	std	Y+15, r24	; 0x0f
   1bc00:	ce 01       	movw	r24, r28
   1bc02:	df 91       	pop	r29
   1bc04:	cf 91       	pop	r28
   1bc06:	1f 91       	pop	r17
   1bc08:	0f 91       	pop	r16
   1bc0a:	29 cf       	rjmp	.-430    	; 0x1ba5e <_ZN7RH_RF9510clearRxBufEv>
   1bc0c:	8a 81       	ldd	r24, Y+2	; 0x02
   1bc0e:	84 30       	cpi	r24, 0x04	; 4
   1bc10:	11 f4       	brne	.+4      	; 0x1bc16 <_ZN7RH_RF9515handleInterruptEv+0x5c>
   1bc12:	16 fd       	sbrc	r17, 6
   1bc14:	0c c0       	rjmp	.+24     	; 0x1bc2e <_ZN7RH_RF9515handleInterruptEv+0x74>
   1bc16:	8a 81       	ldd	r24, Y+2	; 0x02
   1bc18:	83 30       	cpi	r24, 0x03	; 3
   1bc1a:	09 f0       	breq	.+2      	; 0x1bc1e <_ZN7RH_RF9515handleInterruptEv+0x64>
   1bc1c:	61 c0       	rjmp	.+194    	; 0x1bce0 <_ZN7RH_RF9515handleInterruptEv+0x126>
   1bc1e:	13 ff       	sbrs	r17, 3
   1bc20:	5f c0       	rjmp	.+190    	; 0x1bce0 <_ZN7RH_RF9515handleInterruptEv+0x126>
   1bc22:	8b 89       	ldd	r24, Y+19	; 0x13
   1bc24:	9c 89       	ldd	r25, Y+20	; 0x14
   1bc26:	01 96       	adiw	r24, 0x01	; 1
   1bc28:	9c 8b       	std	Y+20, r25	; 0x14
   1bc2a:	8b 8b       	std	Y+19, r24	; 0x13
   1bc2c:	60 c0       	rjmp	.+192    	; 0x1bcee <_ZN7RH_RF9515handleInterruptEv+0x134>
   1bc2e:	63 e1       	ldi	r22, 0x13	; 19
   1bc30:	ce 01       	movw	r24, r28
   1bc32:	ad d6       	rcall	.+3418   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1bc34:	18 2f       	mov	r17, r24
   1bc36:	60 e1       	ldi	r22, 0x10	; 16
   1bc38:	ce 01       	movw	r24, r28
   1bc3a:	a9 d6       	rcall	.+3410   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1bc3c:	48 2f       	mov	r20, r24
   1bc3e:	6d e0       	ldi	r22, 0x0D	; 13
   1bc40:	ce 01       	movw	r24, r28
   1bc42:	ea d6       	rcall	.+3540   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bc44:	21 2f       	mov	r18, r17
   1bc46:	ae 01       	movw	r20, r28
   1bc48:	41 5e       	subi	r20, 0xE1	; 225
   1bc4a:	5f 4f       	sbci	r21, 0xFF	; 255
   1bc4c:	60 e0       	ldi	r22, 0x00	; 0
   1bc4e:	ce 01       	movw	r24, r28
   1bc50:	2b d7       	rcall	.+3670   	; 0x1caa8 <_ZN11RHSPIDriver12spiBurstReadEhPhh>
   1bc52:	1e 8f       	std	Y+30, r17	; 0x1e
   1bc54:	69 e1       	ldi	r22, 0x19	; 25
   1bc56:	ce 01       	movw	r24, r28
   1bc58:	9a d6       	rcall	.+3380   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1bc5a:	8e 01       	movw	r16, r28
   1bc5c:	0c 5b       	subi	r16, 0xBC	; 188
   1bc5e:	1f 4f       	sbci	r17, 0xFF	; 255
   1bc60:	87 fd       	sbrc	r24, 7
   1bc62:	8d 5f       	subi	r24, 0xFD	; 253
   1bc64:	85 95       	asr	r24
   1bc66:	85 95       	asr	r24
   1bc68:	f8 01       	movw	r30, r16
   1bc6a:	80 83       	st	Z, r24
   1bc6c:	6a e1       	ldi	r22, 0x1A	; 26
   1bc6e:	ce 01       	movw	r24, r28
   1bc70:	8e d6       	rcall	.+3356   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1bc72:	90 e0       	ldi	r25, 0x00	; 0
   1bc74:	9e 87       	std	Y+14, r25	; 0x0e
   1bc76:	8d 87       	std	Y+13, r24	; 0x0d
   1bc78:	f8 01       	movw	r30, r16
   1bc7a:	20 81       	ld	r18, Z
   1bc7c:	27 ff       	sbrs	r18, 7
   1bc7e:	09 c0       	rjmp	.+18     	; 0x1bc92 <_ZN7RH_RF9515handleInterruptEv+0xd8>
   1bc80:	8d 85       	ldd	r24, Y+13	; 0x0d
   1bc82:	9e 85       	ldd	r25, Y+14	; 0x0e
   1bc84:	82 0f       	add	r24, r18
   1bc86:	91 1d       	adc	r25, r1
   1bc88:	27 fd       	sbrc	r18, 7
   1bc8a:	9a 95       	dec	r25
   1bc8c:	9e 87       	std	Y+14, r25	; 0x0e
   1bc8e:	8d 87       	std	Y+13, r24	; 0x0d
   1bc90:	0d c0       	rjmp	.+26     	; 0x1bcac <_ZN7RH_RF9515handleInterruptEv+0xf2>
   1bc92:	8d 85       	ldd	r24, Y+13	; 0x0d
   1bc94:	9e 85       	ldd	r25, Y+14	; 0x0e
   1bc96:	24 e0       	ldi	r18, 0x04	; 4
   1bc98:	88 0f       	add	r24, r24
   1bc9a:	99 1f       	adc	r25, r25
   1bc9c:	2a 95       	dec	r18
   1bc9e:	e1 f7       	brne	.-8      	; 0x1bc98 <_ZN7RH_RF9515handleInterruptEv+0xde>
   1bca0:	6f e0       	ldi	r22, 0x0F	; 15
   1bca2:	70 e0       	ldi	r23, 0x00	; 0
   1bca4:	0e 94 cc ea 	call	0x1d598	; 0x1d598 <__divmodhi4>
   1bca8:	7e 87       	std	Y+14, r23	; 0x0e
   1bcaa:	6d 87       	std	Y+13, r22	; 0x0d
   1bcac:	fe 01       	movw	r30, r28
   1bcae:	ed 5b       	subi	r30, 0xBD	; 189
   1bcb0:	ff 4f       	sbci	r31, 0xFF	; 255
   1bcb2:	80 81       	ld	r24, Z
   1bcb4:	88 23       	and	r24, r24
   1bcb6:	29 f0       	breq	.+10     	; 0x1bcc2 <_ZN7RH_RF9515handleInterruptEv+0x108>
   1bcb8:	8d 85       	ldd	r24, Y+13	; 0x0d
   1bcba:	9e 85       	ldd	r25, Y+14	; 0x0e
   1bcbc:	8d 59       	subi	r24, 0x9D	; 157
   1bcbe:	91 09       	sbc	r25, r1
   1bcc0:	04 c0       	rjmp	.+8      	; 0x1bcca <_ZN7RH_RF9515handleInterruptEv+0x110>
   1bcc2:	8d 85       	ldd	r24, Y+13	; 0x0d
   1bcc4:	9e 85       	ldd	r25, Y+14	; 0x0e
   1bcc6:	84 5a       	subi	r24, 0xA4	; 164
   1bcc8:	91 09       	sbc	r25, r1
   1bcca:	9e 87       	std	Y+14, r25	; 0x0e
   1bccc:	8d 87       	std	Y+13, r24	; 0x0d
   1bcce:	ce 01       	movw	r24, r28
   1bcd0:	a6 de       	rcall	.-692    	; 0x1ba1e <_ZN7RH_RF9513validateRxBufEv>
   1bcd2:	fe 01       	movw	r30, r28
   1bcd4:	ee 5b       	subi	r30, 0xBE	; 190
   1bcd6:	ff 4f       	sbci	r31, 0xFF	; 255
   1bcd8:	80 81       	ld	r24, Z
   1bcda:	88 23       	and	r24, r24
   1bcdc:	71 f0       	breq	.+28     	; 0x1bcfa <_ZN7RH_RF9515handleInterruptEv+0x140>
   1bcde:	07 c0       	rjmp	.+14     	; 0x1bcee <_ZN7RH_RF9515handleInterruptEv+0x134>
   1bce0:	8a 81       	ldd	r24, Y+2	; 0x02
   1bce2:	85 30       	cpi	r24, 0x05	; 5
   1bce4:	51 f4       	brne	.+20     	; 0x1bcfa <_ZN7RH_RF9515handleInterruptEv+0x140>
   1bce6:	12 ff       	sbrs	r17, 2
   1bce8:	08 c0       	rjmp	.+16     	; 0x1bcfa <_ZN7RH_RF9515handleInterruptEv+0x140>
   1bcea:	11 70       	andi	r17, 0x01	; 1
   1bcec:	1d 8b       	std	Y+21, r17	; 0x15
   1bcee:	ce 01       	movw	r24, r28
   1bcf0:	df 91       	pop	r29
   1bcf2:	cf 91       	pop	r28
   1bcf4:	1f 91       	pop	r17
   1bcf6:	0f 91       	pop	r16
   1bcf8:	46 cf       	rjmp	.-372    	; 0x1bb86 <_ZN7RH_RF9511setModeIdleEv>
   1bcfa:	df 91       	pop	r29
   1bcfc:	cf 91       	pop	r28
   1bcfe:	1f 91       	pop	r17
   1bd00:	0f 91       	pop	r16
   1bd02:	08 95       	ret

0001bd04 <_ZN7RH_RF954isr0Ev>:
   1bd04:	80 91 51 18 	lds	r24, 0x1851	; 0x801851 <_ZN7RH_RF9519_deviceForInterruptE>
   1bd08:	90 91 52 18 	lds	r25, 0x1852	; 0x801852 <_ZN7RH_RF9519_deviceForInterruptE+0x1>
   1bd0c:	00 97       	sbiw	r24, 0x00	; 0
   1bd0e:	09 f0       	breq	.+2      	; 0x1bd12 <_ZN7RH_RF954isr0Ev+0xe>
   1bd10:	54 cf       	rjmp	.-344    	; 0x1bbba <_ZN7RH_RF9515handleInterruptEv>
   1bd12:	08 95       	ret

0001bd14 <_ZN7RH_RF954isr1Ev>:
   1bd14:	80 91 53 18 	lds	r24, 0x1853	; 0x801853 <_ZN7RH_RF9519_deviceForInterruptE+0x2>
   1bd18:	90 91 54 18 	lds	r25, 0x1854	; 0x801854 <_ZN7RH_RF9519_deviceForInterruptE+0x3>
   1bd1c:	00 97       	sbiw	r24, 0x00	; 0
   1bd1e:	09 f0       	breq	.+2      	; 0x1bd22 <_ZN7RH_RF954isr1Ev+0xe>
   1bd20:	4c cf       	rjmp	.-360    	; 0x1bbba <_ZN7RH_RF9515handleInterruptEv>
   1bd22:	08 95       	ret

0001bd24 <_ZN7RH_RF954isr2Ev>:
   1bd24:	80 91 55 18 	lds	r24, 0x1855	; 0x801855 <_ZN7RH_RF9519_deviceForInterruptE+0x4>
   1bd28:	90 91 56 18 	lds	r25, 0x1856	; 0x801856 <_ZN7RH_RF9519_deviceForInterruptE+0x5>
   1bd2c:	00 97       	sbiw	r24, 0x00	; 0
   1bd2e:	09 f0       	breq	.+2      	; 0x1bd32 <_ZN7RH_RF954isr2Ev+0xe>
   1bd30:	44 cf       	rjmp	.-376    	; 0x1bbba <_ZN7RH_RF9515handleInterruptEv>
   1bd32:	08 95       	ret

0001bd34 <_ZN7RH_RF959setModeRxEv>:
   1bd34:	cf 93       	push	r28
   1bd36:	df 93       	push	r29
   1bd38:	fc 01       	movw	r30, r24
   1bd3a:	22 81       	ldd	r18, Z+2	; 0x02
   1bd3c:	24 30       	cpi	r18, 0x04	; 4
   1bd3e:	a9 f0       	breq	.+42     	; 0x1bd6a <_ZN7RH_RF959setModeRxEv+0x36>
   1bd40:	ec 01       	movw	r28, r24
   1bd42:	01 90       	ld	r0, Z+
   1bd44:	f0 81       	ld	r31, Z
   1bd46:	e0 2d       	mov	r30, r0
   1bd48:	e0 5c       	subi	r30, 0xC0	; 192
   1bd4a:	ff 4f       	sbci	r31, 0xFF	; 255
   1bd4c:	01 90       	ld	r0, Z+
   1bd4e:	f0 81       	ld	r31, Z
   1bd50:	e0 2d       	mov	r30, r0
   1bd52:	64 e0       	ldi	r22, 0x04	; 4
   1bd54:	19 95       	eicall
   1bd56:	45 e0       	ldi	r20, 0x05	; 5
   1bd58:	61 e0       	ldi	r22, 0x01	; 1
   1bd5a:	ce 01       	movw	r24, r28
   1bd5c:	5d d6       	rcall	.+3258   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bd5e:	40 e0       	ldi	r20, 0x00	; 0
   1bd60:	60 e4       	ldi	r22, 0x40	; 64
   1bd62:	ce 01       	movw	r24, r28
   1bd64:	59 d6       	rcall	.+3250   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bd66:	84 e0       	ldi	r24, 0x04	; 4
   1bd68:	8a 83       	std	Y+2, r24	; 0x02
   1bd6a:	df 91       	pop	r29
   1bd6c:	cf 91       	pop	r28
   1bd6e:	08 95       	ret

0001bd70 <_ZN7RH_RF959availableEv>:
   1bd70:	cf 93       	push	r28
   1bd72:	df 93       	push	r29
   1bd74:	fc 01       	movw	r30, r24
   1bd76:	22 81       	ldd	r18, Z+2	; 0x02
   1bd78:	23 30       	cpi	r18, 0x03	; 3
   1bd7a:	31 f0       	breq	.+12     	; 0x1bd88 <_ZN7RH_RF959availableEv+0x18>
   1bd7c:	ec 01       	movw	r28, r24
   1bd7e:	da df       	rcall	.-76     	; 0x1bd34 <_ZN7RH_RF959setModeRxEv>
   1bd80:	ce 5b       	subi	r28, 0xBE	; 190
   1bd82:	df 4f       	sbci	r29, 0xFF	; 255
   1bd84:	88 81       	ld	r24, Y
   1bd86:	01 c0       	rjmp	.+2      	; 0x1bd8a <_ZN7RH_RF959availableEv+0x1a>
   1bd88:	80 e0       	ldi	r24, 0x00	; 0
   1bd8a:	df 91       	pop	r29
   1bd8c:	cf 91       	pop	r28
   1bd8e:	08 95       	ret

0001bd90 <_ZN7RH_RF959setModeTxEv>:
   1bd90:	cf 93       	push	r28
   1bd92:	df 93       	push	r29
   1bd94:	fc 01       	movw	r30, r24
   1bd96:	22 81       	ldd	r18, Z+2	; 0x02
   1bd98:	23 30       	cpi	r18, 0x03	; 3
   1bd9a:	a9 f0       	breq	.+42     	; 0x1bdc6 <_ZN7RH_RF959setModeTxEv+0x36>
   1bd9c:	ec 01       	movw	r28, r24
   1bd9e:	01 90       	ld	r0, Z+
   1bda0:	f0 81       	ld	r31, Z
   1bda2:	e0 2d       	mov	r30, r0
   1bda4:	e0 5c       	subi	r30, 0xC0	; 192
   1bda6:	ff 4f       	sbci	r31, 0xFF	; 255
   1bda8:	01 90       	ld	r0, Z+
   1bdaa:	f0 81       	ld	r31, Z
   1bdac:	e0 2d       	mov	r30, r0
   1bdae:	63 e0       	ldi	r22, 0x03	; 3
   1bdb0:	19 95       	eicall
   1bdb2:	43 e0       	ldi	r20, 0x03	; 3
   1bdb4:	61 e0       	ldi	r22, 0x01	; 1
   1bdb6:	ce 01       	movw	r24, r28
   1bdb8:	2f d6       	rcall	.+3166   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bdba:	40 e4       	ldi	r20, 0x40	; 64
   1bdbc:	60 e4       	ldi	r22, 0x40	; 64
   1bdbe:	ce 01       	movw	r24, r28
   1bdc0:	2b d6       	rcall	.+3158   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bdc2:	83 e0       	ldi	r24, 0x03	; 3
   1bdc4:	8a 83       	std	Y+2, r24	; 0x02
   1bdc6:	df 91       	pop	r29
   1bdc8:	cf 91       	pop	r28
   1bdca:	08 95       	ret

0001bdcc <_ZN7RH_RF954sendEPKhh>:
   1bdcc:	ef 92       	push	r14
   1bdce:	ff 92       	push	r15
   1bdd0:	0f 93       	push	r16
   1bdd2:	1f 93       	push	r17
   1bdd4:	cf 93       	push	r28
   1bdd6:	df 93       	push	r29
   1bdd8:	40 32       	cpi	r20, 0x20	; 32
   1bdda:	10 f0       	brcs	.+4      	; 0x1bde0 <_ZN7RH_RF954sendEPKhh+0x14>
   1bddc:	00 e0       	ldi	r16, 0x00	; 0
   1bdde:	35 c0       	rjmp	.+106    	; 0x1be4a <_ZN7RH_RF954sendEPKhh+0x7e>
   1bde0:	14 2f       	mov	r17, r20
   1bde2:	7b 01       	movw	r14, r22
   1bde4:	ec 01       	movw	r28, r24
   1bde6:	e8 81       	ld	r30, Y
   1bde8:	f9 81       	ldd	r31, Y+1	; 0x01
   1bdea:	00 88       	ldd	r0, Z+16	; 0x10
   1bdec:	f1 89       	ldd	r31, Z+17	; 0x11
   1bdee:	e0 2d       	mov	r30, r0
   1bdf0:	19 95       	eicall
   1bdf2:	ce 01       	movw	r24, r28
   1bdf4:	c8 de       	rcall	.-624    	; 0x1bb86 <_ZN7RH_RF9511setModeIdleEv>
   1bdf6:	e8 81       	ld	r30, Y
   1bdf8:	f9 81       	ldd	r31, Y+1	; 0x01
   1bdfa:	06 88       	ldd	r0, Z+22	; 0x16
   1bdfc:	f7 89       	ldd	r31, Z+23	; 0x17
   1bdfe:	e0 2d       	mov	r30, r0
   1be00:	ce 01       	movw	r24, r28
   1be02:	19 95       	eicall
   1be04:	08 2f       	mov	r16, r24
   1be06:	88 23       	and	r24, r24
   1be08:	49 f3       	breq	.-46     	; 0x1bddc <_ZN7RH_RF954sendEPKhh+0x10>
   1be0a:	40 e0       	ldi	r20, 0x00	; 0
   1be0c:	6d e0       	ldi	r22, 0x0D	; 13
   1be0e:	ce 01       	movw	r24, r28
   1be10:	03 d6       	rcall	.+3078   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be12:	49 85       	ldd	r20, Y+9	; 0x09
   1be14:	60 e0       	ldi	r22, 0x00	; 0
   1be16:	ce 01       	movw	r24, r28
   1be18:	ff d5       	rcall	.+3070   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be1a:	4a 85       	ldd	r20, Y+10	; 0x0a
   1be1c:	60 e0       	ldi	r22, 0x00	; 0
   1be1e:	ce 01       	movw	r24, r28
   1be20:	fb d5       	rcall	.+3062   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be22:	4b 85       	ldd	r20, Y+11	; 0x0b
   1be24:	60 e0       	ldi	r22, 0x00	; 0
   1be26:	ce 01       	movw	r24, r28
   1be28:	f7 d5       	rcall	.+3054   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be2a:	4c 85       	ldd	r20, Y+12	; 0x0c
   1be2c:	60 e0       	ldi	r22, 0x00	; 0
   1be2e:	ce 01       	movw	r24, r28
   1be30:	f3 d5       	rcall	.+3046   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be32:	21 2f       	mov	r18, r17
   1be34:	a7 01       	movw	r20, r14
   1be36:	60 e0       	ldi	r22, 0x00	; 0
   1be38:	ce 01       	movw	r24, r28
   1be3a:	91 d6       	rcall	.+3362   	; 0x1cb5e <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>
   1be3c:	44 e0       	ldi	r20, 0x04	; 4
   1be3e:	41 0f       	add	r20, r17
   1be40:	62 e2       	ldi	r22, 0x22	; 34
   1be42:	ce 01       	movw	r24, r28
   1be44:	e9 d5       	rcall	.+3026   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be46:	ce 01       	movw	r24, r28
   1be48:	a3 df       	rcall	.-186    	; 0x1bd90 <_ZN7RH_RF959setModeTxEv>
   1be4a:	80 2f       	mov	r24, r16
   1be4c:	df 91       	pop	r29
   1be4e:	cf 91       	pop	r28
   1be50:	1f 91       	pop	r17
   1be52:	0f 91       	pop	r16
   1be54:	ff 90       	pop	r15
   1be56:	ef 90       	pop	r14
   1be58:	08 95       	ret

0001be5a <_ZN7RH_RF9510setTxPowerEab>:
   1be5a:	cf 93       	push	r28
   1be5c:	df 93       	push	r29
   1be5e:	ec 01       	movw	r28, r24
   1be60:	4b 8f       	std	Y+27, r20	; 0x1b
   1be62:	44 23       	and	r20, r20
   1be64:	91 f0       	breq	.+36     	; 0x1be8a <_ZN7RH_RF9510setTxPowerEab+0x30>
   1be66:	60 31       	cpi	r22, 0x10	; 16
   1be68:	24 f4       	brge	.+8      	; 0x1be72 <_ZN7RH_RF9510setTxPowerEab+0x18>
   1be6a:	67 ff       	sbrs	r22, 7
   1be6c:	03 c0       	rjmp	.+6      	; 0x1be74 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1be6e:	60 e0       	ldi	r22, 0x00	; 0
   1be70:	01 c0       	rjmp	.+2      	; 0x1be74 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1be72:	6f e0       	ldi	r22, 0x0F	; 15
   1be74:	46 2f       	mov	r20, r22
   1be76:	40 67       	ori	r20, 0x70	; 112
   1be78:	69 e0       	ldi	r22, 0x09	; 9
   1be7a:	ce 01       	movw	r24, r28
   1be7c:	cd d5       	rcall	.+2970   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be7e:	44 e0       	ldi	r20, 0x04	; 4
   1be80:	6d e4       	ldi	r22, 0x4D	; 77
   1be82:	ce 01       	movw	r24, r28
   1be84:	df 91       	pop	r29
   1be86:	cf 91       	pop	r28
   1be88:	c7 c5       	rjmp	.+2958   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1be8a:	df 91       	pop	r29
   1be8c:	cf 91       	pop	r28
   1be8e:	6b cd       	rjmp	.-1322   	; 0x1b966 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>

0001be90 <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>:
   1be90:	0f 93       	push	r16
   1be92:	1f 93       	push	r17
   1be94:	cf 93       	push	r28
   1be96:	df 93       	push	r29
   1be98:	ec 01       	movw	r28, r24
   1be9a:	8b 01       	movw	r16, r22
   1be9c:	fb 01       	movw	r30, r22
   1be9e:	40 81       	ld	r20, Z
   1bea0:	6d e1       	ldi	r22, 0x1D	; 29
   1bea2:	ba d5       	rcall	.+2932   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bea4:	f8 01       	movw	r30, r16
   1bea6:	41 81       	ldd	r20, Z+1	; 0x01
   1bea8:	6e e1       	ldi	r22, 0x1E	; 30
   1beaa:	ce 01       	movw	r24, r28
   1beac:	b5 d5       	rcall	.+2922   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1beae:	f8 01       	movw	r30, r16
   1beb0:	42 81       	ldd	r20, Z+2	; 0x02
   1beb2:	66 e2       	ldi	r22, 0x26	; 38
   1beb4:	ce 01       	movw	r24, r28
   1beb6:	df 91       	pop	r29
   1beb8:	cf 91       	pop	r28
   1beba:	1f 91       	pop	r17
   1bebc:	0f 91       	pop	r16
   1bebe:	ac c5       	rjmp	.+2904   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>

0001bec0 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>:
   1bec0:	0f 93       	push	r16
   1bec2:	1f 93       	push	r17
   1bec4:	cf 93       	push	r28
   1bec6:	df 93       	push	r29
   1bec8:	00 d0       	rcall	.+0      	; 0x1beca <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0xa>
   1beca:	cd b7       	in	r28, 0x3d	; 61
   1becc:	de b7       	in	r29, 0x3e	; 62
   1bece:	70 e0       	ldi	r23, 0x00	; 0
   1bed0:	66 30       	cpi	r22, 0x06	; 6
   1bed2:	71 05       	cpc	r23, r1
   1bed4:	ac f4       	brge	.+42     	; 0x1bf00 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x40>
   1bed6:	8c 01       	movw	r16, r24
   1bed8:	cb 01       	movw	r24, r22
   1beda:	88 0f       	add	r24, r24
   1bedc:	99 1f       	adc	r25, r25
   1bede:	68 0f       	add	r22, r24
   1bee0:	79 1f       	adc	r23, r25
   1bee2:	6e 5f       	subi	r22, 0xFE	; 254
   1bee4:	78 4b       	sbci	r23, 0xB8	; 184
   1bee6:	43 e0       	ldi	r20, 0x03	; 3
   1bee8:	50 e0       	ldi	r21, 0x00	; 0
   1beea:	ce 01       	movw	r24, r28
   1beec:	01 96       	adiw	r24, 0x01	; 1
   1beee:	0e 94 0b ed 	call	0x1da16	; 0x1da16 <memcpy_P>
   1bef2:	be 01       	movw	r22, r28
   1bef4:	6f 5f       	subi	r22, 0xFF	; 255
   1bef6:	7f 4f       	sbci	r23, 0xFF	; 255
   1bef8:	c8 01       	movw	r24, r16
   1befa:	ca df       	rcall	.-108    	; 0x1be90 <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>
   1befc:	81 e0       	ldi	r24, 0x01	; 1
   1befe:	01 c0       	rjmp	.+2      	; 0x1bf02 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x42>
   1bf00:	80 e0       	ldi	r24, 0x00	; 0
   1bf02:	0f 90       	pop	r0
   1bf04:	0f 90       	pop	r0
   1bf06:	0f 90       	pop	r0
   1bf08:	df 91       	pop	r29
   1bf0a:	cf 91       	pop	r28
   1bf0c:	1f 91       	pop	r17
   1bf0e:	0f 91       	pop	r16
   1bf10:	08 95       	ret

0001bf12 <_ZN7RH_RF9517setPreambleLengthEj>:
   1bf12:	1f 93       	push	r17
   1bf14:	cf 93       	push	r28
   1bf16:	df 93       	push	r29
   1bf18:	ec 01       	movw	r28, r24
   1bf1a:	16 2f       	mov	r17, r22
   1bf1c:	47 2f       	mov	r20, r23
   1bf1e:	60 e2       	ldi	r22, 0x20	; 32
   1bf20:	7b d5       	rcall	.+2806   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf22:	41 2f       	mov	r20, r17
   1bf24:	61 e2       	ldi	r22, 0x21	; 33
   1bf26:	ce 01       	movw	r24, r28
   1bf28:	df 91       	pop	r29
   1bf2a:	cf 91       	pop	r28
   1bf2c:	1f 91       	pop	r17
   1bf2e:	74 c5       	rjmp	.+2792   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>

0001bf30 <_ZN7RH_RF954initEv>:
   1bf30:	ff 92       	push	r15
   1bf32:	0f 93       	push	r16
   1bf34:	1f 93       	push	r17
   1bf36:	cf 93       	push	r28
   1bf38:	df 93       	push	r29
   1bf3a:	ec 01       	movw	r28, r24
   1bf3c:	e4 d4       	rcall	.+2504   	; 0x1c906 <_ZN11RHSPIDriver4initEv>
   1bf3e:	f8 2e       	mov	r15, r24
   1bf40:	81 11       	cpse	r24, r1
   1bf42:	02 c0       	rjmp	.+4      	; 0x1bf48 <_ZN7RH_RF954initEv+0x18>
   1bf44:	f1 2c       	mov	r15, r1
   1bf46:	79 c0       	rjmp	.+242    	; 0x1c03a <_ZN7RH_RF954initEv+0x10a>
   1bf48:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1bf4a:	8f 3f       	cpi	r24, 0xFF	; 255
   1bf4c:	79 f0       	breq	.+30     	; 0x1bf6c <_ZN7RH_RF954initEv+0x3c>
   1bf4e:	82 30       	cpi	r24, 0x02	; 2
   1bf50:	09 f4       	brne	.+2      	; 0x1bf54 <_ZN7RH_RF954initEv+0x24>
   1bf52:	6a c0       	rjmp	.+212    	; 0x1c028 <_ZN7RH_RF954initEv+0xf8>
   1bf54:	83 30       	cpi	r24, 0x03	; 3
   1bf56:	09 f4       	brne	.+2      	; 0x1bf5a <_ZN7RH_RF954initEv+0x2a>
   1bf58:	6a c0       	rjmp	.+212    	; 0x1c02e <_ZN7RH_RF954initEv+0xfe>
   1bf5a:	9e ee       	ldi	r25, 0xEE	; 238
   1bf5c:	98 0f       	add	r25, r24
   1bf5e:	94 30       	cpi	r25, 0x04	; 4
   1bf60:	88 f7       	brcc	.-30     	; 0x1bf44 <_ZN7RH_RF954initEv+0x14>
   1bf62:	07 e1       	ldi	r16, 0x17	; 23
   1bf64:	10 e0       	ldi	r17, 0x00	; 0
   1bf66:	08 1b       	sub	r16, r24
   1bf68:	11 09       	sbc	r17, r1
   1bf6a:	63 c0       	rjmp	.+198    	; 0x1c032 <_ZN7RH_RF954initEv+0x102>
   1bf6c:	0f ef       	ldi	r16, 0xFF	; 255
   1bf6e:	1f ef       	ldi	r17, 0xFF	; 255
   1bf70:	40 e8       	ldi	r20, 0x80	; 128
   1bf72:	61 e0       	ldi	r22, 0x01	; 1
   1bf74:	ce 01       	movw	r24, r28
   1bf76:	50 d5       	rcall	.+2720   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf78:	6a e0       	ldi	r22, 0x0A	; 10
   1bf7a:	70 e0       	ldi	r23, 0x00	; 0
   1bf7c:	80 e0       	ldi	r24, 0x00	; 0
   1bf7e:	90 e0       	ldi	r25, 0x00	; 0
   1bf80:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   1bf84:	61 e0       	ldi	r22, 0x01	; 1
   1bf86:	ce 01       	movw	r24, r28
   1bf88:	02 d5       	rcall	.+2564   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1bf8a:	80 38       	cpi	r24, 0x80	; 128
   1bf8c:	d9 f6       	brne	.-74     	; 0x1bf44 <_ZN7RH_RF954initEv+0x14>
   1bf8e:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1bf90:	8f 3f       	cpi	r24, 0xFF	; 255
   1bf92:	71 f1       	breq	.+92     	; 0x1bff0 <_ZN7RH_RF954initEv+0xc0>
   1bf94:	60 e0       	ldi	r22, 0x00	; 0
   1bf96:	40 d8       	rcall	.-3968   	; 0x1b018 <pinMode>
   1bf98:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1bf9a:	8f 3f       	cpi	r24, 0xFF	; 255
   1bf9c:	49 f4       	brne	.+18     	; 0x1bfb0 <_ZN7RH_RF954initEv+0x80>
   1bf9e:	80 91 50 18 	lds	r24, 0x1850	; 0x801850 <_ZN7RH_RF9515_interruptCountE>
   1bfa2:	84 30       	cpi	r24, 0x04	; 4
   1bfa4:	78 f6       	brcc	.-98     	; 0x1bf44 <_ZN7RH_RF954initEv+0x14>
   1bfa6:	91 e0       	ldi	r25, 0x01	; 1
   1bfa8:	98 0f       	add	r25, r24
   1bfaa:	90 93 50 18 	sts	0x1850, r25	; 0x801850 <_ZN7RH_RF9515_interruptCountE>
   1bfae:	8d 8f       	std	Y+29, r24	; 0x1d
   1bfb0:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1bfb2:	e8 2f       	mov	r30, r24
   1bfb4:	f0 e0       	ldi	r31, 0x00	; 0
   1bfb6:	ee 0f       	add	r30, r30
   1bfb8:	ff 1f       	adc	r31, r31
   1bfba:	ef 5a       	subi	r30, 0xAF	; 175
   1bfbc:	f7 4e       	sbci	r31, 0xE7	; 231
   1bfbe:	d1 83       	std	Z+1, r29	; 0x01
   1bfc0:	c0 83       	st	Z, r28
   1bfc2:	81 11       	cpse	r24, r1
   1bfc4:	05 c0       	rjmp	.+10     	; 0x1bfd0 <_ZN7RH_RF954initEv+0xa0>
   1bfc6:	43 e0       	ldi	r20, 0x03	; 3
   1bfc8:	50 e0       	ldi	r21, 0x00	; 0
   1bfca:	62 e8       	ldi	r22, 0x82	; 130
   1bfcc:	7e ed       	ldi	r23, 0xDE	; 222
   1bfce:	0e c0       	rjmp	.+28     	; 0x1bfec <_ZN7RH_RF954initEv+0xbc>
   1bfd0:	81 30       	cpi	r24, 0x01	; 1
   1bfd2:	29 f4       	brne	.+10     	; 0x1bfde <_ZN7RH_RF954initEv+0xae>
   1bfd4:	43 e0       	ldi	r20, 0x03	; 3
   1bfd6:	50 e0       	ldi	r21, 0x00	; 0
   1bfd8:	6a e8       	ldi	r22, 0x8A	; 138
   1bfda:	7e ed       	ldi	r23, 0xDE	; 222
   1bfdc:	07 c0       	rjmp	.+14     	; 0x1bfec <_ZN7RH_RF954initEv+0xbc>
   1bfde:	82 30       	cpi	r24, 0x02	; 2
   1bfe0:	09 f0       	breq	.+2      	; 0x1bfe4 <_ZN7RH_RF954initEv+0xb4>
   1bfe2:	b0 cf       	rjmp	.-160    	; 0x1bf44 <_ZN7RH_RF954initEv+0x14>
   1bfe4:	43 e0       	ldi	r20, 0x03	; 3
   1bfe6:	50 e0       	ldi	r21, 0x00	; 0
   1bfe8:	62 e9       	ldi	r22, 0x92	; 146
   1bfea:	7e ed       	ldi	r23, 0xDE	; 222
   1bfec:	80 2f       	mov	r24, r16
   1bfee:	49 d2       	rcall	.+1170   	; 0x1c482 <attachInterrupt>
   1bff0:	40 e0       	ldi	r20, 0x00	; 0
   1bff2:	6e e0       	ldi	r22, 0x0E	; 14
   1bff4:	ce 01       	movw	r24, r28
   1bff6:	10 d5       	rcall	.+2592   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1bff8:	40 e0       	ldi	r20, 0x00	; 0
   1bffa:	6f e0       	ldi	r22, 0x0F	; 15
   1bffc:	ce 01       	movw	r24, r28
   1bffe:	0c d5       	rcall	.+2584   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   1c000:	ce 01       	movw	r24, r28
   1c002:	c1 dd       	rcall	.-1150   	; 0x1bb86 <_ZN7RH_RF9511setModeIdleEv>
   1c004:	60 e0       	ldi	r22, 0x00	; 0
   1c006:	ce 01       	movw	r24, r28
   1c008:	5b df       	rcall	.-330    	; 0x1bec0 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
   1c00a:	68 e0       	ldi	r22, 0x08	; 8
   1c00c:	70 e0       	ldi	r23, 0x00	; 0
   1c00e:	ce 01       	movw	r24, r28
   1c010:	80 df       	rcall	.-256    	; 0x1bf12 <_ZN7RH_RF9517setPreambleLengthEj>
   1c012:	40 e0       	ldi	r20, 0x00	; 0
   1c014:	50 e0       	ldi	r21, 0x00	; 0
   1c016:	69 ed       	ldi	r22, 0xD9	; 217
   1c018:	73 e4       	ldi	r23, 0x43	; 67
   1c01a:	ce 01       	movw	r24, r28
   1c01c:	68 dd       	rcall	.-1328   	; 0x1baee <_ZN7RH_RF9512setFrequencyEf>
   1c01e:	1b 8e       	std	Y+27, r1	; 0x1b
   1c020:	6d e0       	ldi	r22, 0x0D	; 13
   1c022:	ce 01       	movw	r24, r28
   1c024:	a0 dc       	rcall	.-1728   	; 0x1b966 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>
   1c026:	09 c0       	rjmp	.+18     	; 0x1c03a <_ZN7RH_RF954initEv+0x10a>
   1c028:	00 e0       	ldi	r16, 0x00	; 0
   1c02a:	10 e0       	ldi	r17, 0x00	; 0
   1c02c:	02 c0       	rjmp	.+4      	; 0x1c032 <_ZN7RH_RF954initEv+0x102>
   1c02e:	01 e0       	ldi	r16, 0x01	; 1
   1c030:	10 e0       	ldi	r17, 0x00	; 0
   1c032:	60 2f       	mov	r22, r16
   1c034:	ce 01       	movw	r24, r28
   1c036:	ed d5       	rcall	.+3034   	; 0x1cc12 <_ZN11RHSPIDriver17spiUsingInterruptEh>
   1c038:	9b cf       	rjmp	.-202    	; 0x1bf70 <_ZN7RH_RF954initEv+0x40>
   1c03a:	8f 2d       	mov	r24, r15
   1c03c:	df 91       	pop	r29
   1c03e:	cf 91       	pop	r28
   1c040:	1f 91       	pop	r17
   1c042:	0f 91       	pop	r16
   1c044:	ff 90       	pop	r15
   1c046:	08 95       	ret

0001c048 <_ZN7RH_RF9514setLowDatarateEv>:
}
 
void RH_RF95::setLowDatarate()
{
   1c048:	8f 92       	push	r8
   1c04a:	9f 92       	push	r9
   1c04c:	af 92       	push	r10
   1c04e:	bf 92       	push	r11
   1c050:	ef 92       	push	r14
   1c052:	ff 92       	push	r15
   1c054:	1f 93       	push	r17
   1c056:	cf 93       	push	r28
   1c058:	df 93       	push	r29
   1c05a:	cd b7       	in	r28, 0x3d	; 61
   1c05c:	de b7       	in	r29, 0x3e	; 62
   1c05e:	a8 97       	sbiw	r28, 0x28	; 40
   1c060:	0f b6       	in	r0, 0x3f	; 63
   1c062:	f8 94       	cli
   1c064:	de bf       	out	0x3e, r29	; 62
   1c066:	0f be       	out	0x3f, r0	; 63
   1c068:	cd bf       	out	0x3d, r28	; 61
   1c06a:	7c 01       	movw	r14, r24
    // "To avoid issues surrounding  drift  of  the  crystal  reference  oscillator  due  to  either  temperature  change  
    // or  motion,the  low  data  rate optimization  bit  is  used. Specifically for 125  kHz  bandwidth  and  SF  =  11  and  12,  
    // this  adds  a  small  overhead  to increase robustness to reference frequency variations over the timescale of the LoRa packet."
 
    // read current value for BW and SF
    uint8_t BW = spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) >> 4;	// bw is in bits 7..4
   1c06c:	6d e1       	ldi	r22, 0x1D	; 29
   1c06e:	8f d4       	rcall	.+2334   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1c070:	18 2f       	mov	r17, r24
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   1c072:	6e e1       	ldi	r22, 0x1E	; 30
   1c074:	c7 01       	movw	r24, r14
   1c076:	8b d4       	rcall	.+2326   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   1c078:	98 e2       	ldi	r25, 0x28	; 40
   1c07a:	e7 ec       	ldi	r30, 0xC7	; 199
   1c07c:	f2 e0       	ldi	r31, 0x02	; 2
   1c07e:	de 01       	movw	r26, r28
   1c080:	11 96       	adiw	r26, 0x01	; 1
   1c082:	01 90       	ld	r0, Z+
   1c084:	0d 92       	st	X+, r0
   1c086:	9a 95       	dec	r25
   1c088:	e1 f7       	brne	.-8      	; 0x1c082 <_ZN7RH_RF9514setLowDatarateEv+0x3a>
   
    float bandwidth = bw_tab[BW];
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1c08a:	68 2f       	mov	r22, r24
   1c08c:	70 e0       	ldi	r23, 0x00	; 0
   1c08e:	84 e0       	ldi	r24, 0x04	; 4
   1c090:	75 95       	asr	r23
   1c092:	67 95       	ror	r22
   1c094:	8a 95       	dec	r24
   1c096:	e1 f7       	brne	.-8      	; 0x1c090 <_ZN7RH_RF9514setLowDatarateEv+0x48>
   1c098:	70 e0       	ldi	r23, 0x00	; 0
   1c09a:	80 e0       	ldi	r24, 0x00	; 0
   1c09c:	90 e0       	ldi	r25, 0x00	; 0
   1c09e:	0e 94 4b d1 	call	0x1a296	; 0x1a296 <__floatunsisf>
   1c0a2:	9b 01       	movw	r18, r22
   1c0a4:	ac 01       	movw	r20, r24
   1c0a6:	60 e0       	ldi	r22, 0x00	; 0
   1c0a8:	70 e0       	ldi	r23, 0x00	; 0
   1c0aa:	80 e0       	ldi	r24, 0x00	; 0
   1c0ac:	90 e4       	ldi	r25, 0x40	; 64
   1c0ae:	0e 94 e0 e8 	call	0x1d1c0	; 0x1d1c0 <pow>
   1c0b2:	20 e0       	ldi	r18, 0x00	; 0
   1c0b4:	30 e0       	ldi	r19, 0x00	; 0
   1c0b6:	4a e7       	ldi	r20, 0x7A	; 122
   1c0b8:	54 e4       	ldi	r21, 0x44	; 68
   1c0ba:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   
    float bandwidth = bw_tab[BW];
   1c0be:	e1 2f       	mov	r30, r17
   1c0c0:	f0 e0       	ldi	r31, 0x00	; 0
   1c0c2:	24 e0       	ldi	r18, 0x04	; 4
   1c0c4:	f5 95       	asr	r31
   1c0c6:	e7 95       	ror	r30
   1c0c8:	2a 95       	dec	r18
   1c0ca:	e1 f7       	brne	.-8      	; 0x1c0c4 <_ZN7RH_RF9514setLowDatarateEv+0x7c>
   1c0cc:	ee 0f       	add	r30, r30
   1c0ce:	ff 1f       	adc	r31, r31
   1c0d0:	ee 0f       	add	r30, r30
   1c0d2:	ff 1f       	adc	r31, r31
   1c0d4:	21 e0       	ldi	r18, 0x01	; 1
   1c0d6:	30 e0       	ldi	r19, 0x00	; 0
   1c0d8:	2c 0f       	add	r18, r28
   1c0da:	3d 1f       	adc	r19, r29
   1c0dc:	e2 0f       	add	r30, r18
   1c0de:	f3 1f       	adc	r31, r19
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1c0e0:	20 81       	ld	r18, Z
   1c0e2:	31 81       	ldd	r19, Z+1	; 0x01
   1c0e4:	42 81       	ldd	r20, Z+2	; 0x02
   1c0e6:	53 81       	ldd	r21, Z+3	; 0x03
   1c0e8:	0e 94 b7 d0 	call	0x1a16e	; 0x1a16e <__divsf3>
   1c0ec:	4b 01       	movw	r8, r22
   1c0ee:	5c 01       	movw	r10, r24
    // https://www.thethingsnetwork.org/forum/t/a-point-to-note-lora-low-data-rate-optimisation-flag/12007
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
   1c0f0:	66 e2       	ldi	r22, 0x26	; 38
   1c0f2:	c7 01       	movw	r24, r14
   1c0f4:	4c d4       	rcall	.+2200   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1c0f6:	18 2f       	mov	r17, r24
   1c0f8:	17 7f       	andi	r17, 0xF7	; 247
    if (symbolTime > 16.0)
   1c0fa:	20 e0       	ldi	r18, 0x00	; 0
   1c0fc:	30 e0       	ldi	r19, 0x00	; 0
   1c0fe:	40 e8       	ldi	r20, 0x80	; 128
   1c100:	51 e4       	ldi	r21, 0x41	; 65
   1c102:	c5 01       	movw	r24, r10
   1c104:	b4 01       	movw	r22, r8
   1c106:	0e 94 fd d1 	call	0x1a3fa	; 0x1a3fa <__gesf2>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1c10a:	41 2f       	mov	r20, r17
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
   1c10c:	18 16       	cp	r1, r24
   1c10e:	0c f4       	brge	.+2      	; 0x1c112 <_ZN7RH_RF9514setLowDatarateEv+0xca>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1c110:	48 60       	ori	r20, 0x08	; 8
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1c112:	66 e2       	ldi	r22, 0x26	; 38
   1c114:	c7 01       	movw	r24, r14
   
}
   1c116:	a8 96       	adiw	r28, 0x28	; 40
   1c118:	0f b6       	in	r0, 0x3f	; 63
   1c11a:	f8 94       	cli
   1c11c:	de bf       	out	0x3e, r29	; 62
   1c11e:	0f be       	out	0x3f, r0	; 63
   1c120:	cd bf       	out	0x3d, r28	; 61
   1c122:	df 91       	pop	r29
   1c124:	cf 91       	pop	r28
   1c126:	1f 91       	pop	r17
   1c128:	ff 90       	pop	r15
   1c12a:	ef 90       	pop	r14
   1c12c:	bf 90       	pop	r11
   1c12e:	af 90       	pop	r10
   1c130:	9f 90       	pop	r9
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1c132:	8f 90       	pop	r8
   1c134:	71 c4       	rjmp	.+2274   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>

0001c136 <_ZN7RH_RF9518setSpreadingFactorEh>:
 // a bit more intuitive
 //
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   1c136:	0f 93       	push	r16
   1c138:	1f 93       	push	r17
   1c13a:	cf 93       	push	r28
   1c13c:	8c 01       	movw	r16, r24
   if (sf <= 6) 
   1c13e:	67 30       	cpi	r22, 0x07	; 7
   1c140:	60 f0       	brcs	.+24     	; 0x1c15a <_ZN7RH_RF9518setSpreadingFactorEh+0x24>
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   else if (sf == 7) 
   1c142:	67 30       	cpi	r22, 0x07	; 7
   1c144:	61 f0       	breq	.+24     	; 0x1c15e <_ZN7RH_RF9518setSpreadingFactorEh+0x28>
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   else if (sf == 8) 
   1c146:	68 30       	cpi	r22, 0x08	; 8
   1c148:	61 f0       	breq	.+24     	; 0x1c162 <_ZN7RH_RF9518setSpreadingFactorEh+0x2c>
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   else if (sf == 9)
   1c14a:	69 30       	cpi	r22, 0x09	; 9
   1c14c:	61 f0       	breq	.+24     	; 0x1c166 <_ZN7RH_RF9518setSpreadingFactorEh+0x30>
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   else if (sf == 10)
   1c14e:	6a 30       	cpi	r22, 0x0A	; 10
   1c150:	61 f0       	breq	.+24     	; 0x1c16a <_ZN7RH_RF9518setSpreadingFactorEh+0x34>
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   else if (sf == 11) 
   1c152:	6b 30       	cpi	r22, 0x0B	; 11
   1c154:	61 f4       	brne	.+24     	; 0x1c16e <_ZN7RH_RF9518setSpreadingFactorEh+0x38>
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   1c156:	c0 eb       	ldi	r28, 0xB0	; 176
   1c158:	0b c0       	rjmp	.+22     	; 0x1c170 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   if (sf <= 6) 
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   1c15a:	c0 e6       	ldi	r28, 0x60	; 96
   1c15c:	09 c0       	rjmp	.+18     	; 0x1c170 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 7) 
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   1c15e:	c0 e7       	ldi	r28, 0x70	; 112
   1c160:	07 c0       	rjmp	.+14     	; 0x1c170 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 8) 
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   1c162:	c0 e8       	ldi	r28, 0x80	; 128
   1c164:	05 c0       	rjmp	.+10     	; 0x1c170 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 9)
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   1c166:	c0 e9       	ldi	r28, 0x90	; 144
   1c168:	03 c0       	rjmp	.+6      	; 0x1c170 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 10)
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   1c16a:	c0 ea       	ldi	r28, 0xA0	; 160
   1c16c:	01 c0       	rjmp	.+2      	; 0x1c170 <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 11) 
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   else if (sf >= 12)
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
   1c16e:	c0 ec       	ldi	r28, 0xC0	; 192
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   1c170:	6e e1       	ldi	r22, 0x1E	; 30
   1c172:	c8 01       	movw	r24, r16
   1c174:	0c d4       	rcall	.+2072   	; 0x1c98e <_ZN11RHSPIDriver7spiReadEh>
   1c176:	8f 70       	andi	r24, 0x0F	; 15
   1c178:	48 2f       	mov	r20, r24
   1c17a:	4c 2b       	or	r20, r28
   1c17c:	6e e1       	ldi	r22, 0x1E	; 30
   1c17e:	c8 01       	movw	r24, r16
   1c180:	4b d4       	rcall	.+2198   	; 0x1ca18 <_ZN11RHSPIDriver8spiWriteEhh>
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1c182:	c8 01       	movw	r24, r16
 }
   1c184:	cf 91       	pop	r28
   1c186:	1f 91       	pop	r17
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1c188:	0f 91       	pop	r16
   1c18a:	5e cf       	rjmp	.-324    	; 0x1c048 <_ZN7RH_RF9514setLowDatarateEv>

0001c18c <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
   1c18c:	cf 93       	push	r28
  uint8_t sreg = SREG;
   1c18e:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c190:	f8 94       	cli
  if (!initialized) {
   1c192:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c196:	81 11       	cpse	r24, r1
   1c198:	27 c0       	rjmp	.+78     	; 0x1c1e8 <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
   1c19a:	e3 ea       	ldi	r30, 0xA3	; 163
   1c19c:	f6 e4       	ldi	r31, 0x46	; 70
   1c19e:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
   1c1a0:	ed e5       	ldi	r30, 0x5D	; 93
   1c1a2:	f6 e4       	ldi	r31, 0x46	; 70
   1c1a4:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
   1c1a6:	e8 2f       	mov	r30, r24
   1c1a8:	f0 e0       	ldi	r31, 0x00	; 0
   1c1aa:	ee 0f       	add	r30, r30
   1c1ac:	ff 1f       	adc	r31, r31
   1c1ae:	e8 51       	subi	r30, 0x18	; 24
   1c1b0:	f9 4b       	sbci	r31, 0xB9	; 185
   1c1b2:	a5 91       	lpm	r26, Z+
   1c1b4:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
   1c1b6:	ec 91       	ld	r30, X
   1c1b8:	e9 23       	and	r30, r25
   1c1ba:	21 f4       	brne	.+8      	; 0x1c1c4 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
   1c1bc:	61 e0       	ldi	r22, 0x01	; 1
   1c1be:	85 e3       	ldi	r24, 0x35	; 53
   1c1c0:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
   1c1c4:	61 e0       	ldi	r22, 0x01	; 1
   1c1c6:	85 e3       	ldi	r24, 0x35	; 53
   1c1c8:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
   1c1cc:	8c b5       	in	r24, 0x2c	; 44
   1c1ce:	80 61       	ori	r24, 0x10	; 16
   1c1d0:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
   1c1d2:	8c b5       	in	r24, 0x2c	; 44
   1c1d4:	80 64       	ori	r24, 0x40	; 64
   1c1d6:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
   1c1d8:	61 e0       	ldi	r22, 0x01	; 1
   1c1da:	84 e3       	ldi	r24, 0x34	; 52
   1c1dc:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
    pinMode(MOSI, OUTPUT);
   1c1e0:	61 e0       	ldi	r22, 0x01	; 1
   1c1e2:	83 e3       	ldi	r24, 0x33	; 51
   1c1e4:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
  }
  initialized++; // reference count
   1c1e8:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c1ec:	8f 5f       	subi	r24, 0xFF	; 255
   1c1ee:	80 93 5a 18 	sts	0x185A, r24	; 0x80185a <_ZN8SPIClass11initializedE>
  SREG = sreg;
   1c1f2:	cf bf       	out	0x3f, r28	; 63
}
   1c1f4:	cf 91       	pop	r28
   1c1f6:	08 95       	ret

0001c1f8 <_ZN8SPIClass3endEv>:

void SPIClass::end() {
  uint8_t sreg = SREG;
   1c1f8:	9f b7       	in	r25, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c1fa:	f8 94       	cli
  // Decrease the reference counter
  if (initialized)
   1c1fc:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c200:	88 23       	and	r24, r24
   1c202:	19 f0       	breq	.+6      	; 0x1c20a <_ZN8SPIClass3endEv+0x12>
    initialized--;
   1c204:	81 50       	subi	r24, 0x01	; 1
   1c206:	80 93 5a 18 	sts	0x185A, r24	; 0x80185a <_ZN8SPIClass11initializedE>
  // If there are no more references disable SPI
  if (!initialized) {
   1c20a:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c20e:	81 11       	cpse	r24, r1
   1c210:	05 c0       	rjmp	.+10     	; 0x1c21c <_ZN8SPIClass3endEv+0x24>
    SPCR &= ~_BV(SPE);
   1c212:	8c b5       	in	r24, 0x2c	; 44
   1c214:	8f 7b       	andi	r24, 0xBF	; 191
   1c216:	8c bd       	out	0x2c, r24	; 44
    interruptMode = 0;
   1c218:	10 92 59 18 	sts	0x1859, r1	; 0x801859 <_ZN8SPIClass13interruptModeE>
    #ifdef SPI_TRANSACTION_MISMATCH_LED
    inTransactionFlag = 0;
    #endif
  }
  SREG = sreg;
   1c21c:	9f bf       	out	0x3f, r25	; 63
   1c21e:	08 95       	ret

0001c220 <_ZN8SPIClass14usingInterruptEh>:
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
  uint8_t sreg = SREG;
   1c220:	2f b7       	in	r18, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c222:	f8 94       	cli
  switch (interruptNumber) {
   1c224:	90 e0       	ldi	r25, 0x00	; 0
   1c226:	88 30       	cpi	r24, 0x08	; 8
   1c228:	91 05       	cpc	r25, r1
   1c22a:	a8 f4       	brcc	.+42     	; 0x1c256 <_ZN8SPIClass14usingInterruptEh+0x36>
   1c22c:	fc 01       	movw	r30, r24
   1c22e:	88 27       	eor	r24, r24
   1c230:	e7 5f       	subi	r30, 0xF7	; 247
   1c232:	fe 4f       	sbci	r31, 0xFE	; 254
   1c234:	8f 4f       	sbci	r24, 0xFF	; 255
   1c236:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
  #endif
  #ifdef SPI_INT1_MASK
  case 1: mask = SPI_INT1_MASK; break;
   1c23a:	80 e2       	ldi	r24, 0x20	; 32
   1c23c:	12 c0       	rjmp	.+36     	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT2_MASK
  case 2: mask = SPI_INT2_MASK; break;
   1c23e:	81 e0       	ldi	r24, 0x01	; 1
   1c240:	10 c0       	rjmp	.+32     	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT3_MASK
  case 3: mask = SPI_INT3_MASK; break;
   1c242:	82 e0       	ldi	r24, 0x02	; 2
   1c244:	0e c0       	rjmp	.+28     	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT4_MASK
  case 4: mask = SPI_INT4_MASK; break;
   1c246:	84 e0       	ldi	r24, 0x04	; 4
   1c248:	0c c0       	rjmp	.+24     	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT5_MASK
  case 5: mask = SPI_INT5_MASK; break;
   1c24a:	88 e0       	ldi	r24, 0x08	; 8
   1c24c:	0a c0       	rjmp	.+20     	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT6_MASK
  case 6: mask = SPI_INT6_MASK; break;
   1c24e:	80 e4       	ldi	r24, 0x40	; 64
   1c250:	08 c0       	rjmp	.+16     	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
   1c252:	80 e8       	ldi	r24, 0x80	; 128
   1c254:	06 c0       	rjmp	.+12     	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  default:
    interruptMode = 2;
   1c256:	82 e0       	ldi	r24, 0x02	; 2
   1c258:	80 93 59 18 	sts	0x1859, r24	; 0x801859 <_ZN8SPIClass13interruptModeE>
  #endif
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
   1c25c:	80 e0       	ldi	r24, 0x00	; 0
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
  #endif
  default:
    interruptMode = 2;
    break;
   1c25e:	01 c0       	rjmp	.+2      	; 0x1c262 <_ZN8SPIClass14usingInterruptEh+0x42>
  uint8_t mask = 0;
  uint8_t sreg = SREG;
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
  switch (interruptNumber) {
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
   1c260:	80 e1       	ldi	r24, 0x10	; 16
  #endif
  default:
    interruptMode = 2;
    break;
  }
  interruptMask |= mask;
   1c262:	90 91 58 18 	lds	r25, 0x1858	; 0x801858 <_ZN8SPIClass13interruptMaskE>
   1c266:	89 2b       	or	r24, r25
   1c268:	80 93 58 18 	sts	0x1858, r24	; 0x801858 <_ZN8SPIClass13interruptMaskE>
  if (!interruptMode)
   1c26c:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1c270:	81 11       	cpse	r24, r1
   1c272:	03 c0       	rjmp	.+6      	; 0x1c27a <_ZN8SPIClass14usingInterruptEh+0x5a>
    interruptMode = 1;
   1c274:	81 e0       	ldi	r24, 0x01	; 1
   1c276:	80 93 59 18 	sts	0x1859, r24	; 0x801859 <_ZN8SPIClass13interruptModeE>
  SREG = sreg;
   1c27a:	2f bf       	out	0x3f, r18	; 63
   1c27c:	08 95       	ret

0001c27e <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
   1c27e:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c282:	90 e0       	ldi	r25, 0x00	; 0
   1c284:	20 91 90 18 	lds	r18, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c288:	82 1b       	sub	r24, r18
   1c28a:	91 09       	sbc	r25, r1
   1c28c:	08 95       	ret

0001c28e <_ZN7TwoWire4readEv>:
   1c28e:	90 91 90 18 	lds	r25, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c292:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c296:	98 17       	cp	r25, r24
   1c298:	50 f4       	brcc	.+20     	; 0x1c2ae <_ZN7TwoWire4readEv+0x20>
   1c29a:	e9 2f       	mov	r30, r25
   1c29c:	f0 e0       	ldi	r31, 0x00	; 0
   1c29e:	ef 56       	subi	r30, 0x6F	; 111
   1c2a0:	f7 4e       	sbci	r31, 0xE7	; 231
   1c2a2:	20 81       	ld	r18, Z
   1c2a4:	30 e0       	ldi	r19, 0x00	; 0
   1c2a6:	9f 5f       	subi	r25, 0xFF	; 255
   1c2a8:	90 93 90 18 	sts	0x1890, r25	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c2ac:	02 c0       	rjmp	.+4      	; 0x1c2b2 <_ZN7TwoWire4readEv+0x24>
   1c2ae:	2f ef       	ldi	r18, 0xFF	; 255
   1c2b0:	3f ef       	ldi	r19, 0xFF	; 255
   1c2b2:	c9 01       	movw	r24, r18
   1c2b4:	08 95       	ret

0001c2b6 <_ZN7TwoWire4peekEv>:
   1c2b6:	e0 91 90 18 	lds	r30, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c2ba:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c2be:	e8 17       	cp	r30, r24
   1c2c0:	30 f4       	brcc	.+12     	; 0x1c2ce <_ZN7TwoWire4peekEv+0x18>
   1c2c2:	f0 e0       	ldi	r31, 0x00	; 0
   1c2c4:	ef 56       	subi	r30, 0x6F	; 111
   1c2c6:	f7 4e       	sbci	r31, 0xE7	; 231
   1c2c8:	80 81       	ld	r24, Z
   1c2ca:	90 e0       	ldi	r25, 0x00	; 0
   1c2cc:	08 95       	ret
   1c2ce:	8f ef       	ldi	r24, 0xFF	; 255
   1c2d0:	9f ef       	ldi	r25, 0xFF	; 255
   1c2d2:	08 95       	ret

0001c2d4 <_ZN7TwoWire5flushEv>:
   1c2d4:	08 95       	ret

0001c2d6 <_ZN7TwoWire16onReceiveServiceEPhi>:
   1c2d6:	cf 93       	push	r28
   1c2d8:	df 93       	push	r29
   1c2da:	ec 01       	movw	r28, r24
   1c2dc:	e0 91 67 18 	lds	r30, 0x1867	; 0x801867 <_ZN7TwoWire14user_onReceiveE>
   1c2e0:	f0 91 68 18 	lds	r31, 0x1868	; 0x801868 <_ZN7TwoWire14user_onReceiveE+0x1>
   1c2e4:	30 97       	sbiw	r30, 0x00	; 0
   1c2e6:	f1 f0       	breq	.+60     	; 0x1c324 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1c2e8:	90 91 90 18 	lds	r25, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c2ec:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c2f0:	98 17       	cp	r25, r24
   1c2f2:	c0 f0       	brcs	.+48     	; 0x1c324 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1c2f4:	90 e0       	ldi	r25, 0x00	; 0
   1c2f6:	29 2f       	mov	r18, r25
   1c2f8:	30 e0       	ldi	r19, 0x00	; 0
   1c2fa:	26 17       	cp	r18, r22
   1c2fc:	37 07       	cpc	r19, r23
   1c2fe:	54 f4       	brge	.+20     	; 0x1c314 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
   1c300:	de 01       	movw	r26, r28
   1c302:	a2 0f       	add	r26, r18
   1c304:	b3 1f       	adc	r27, r19
   1c306:	4c 91       	ld	r20, X
   1c308:	d9 01       	movw	r26, r18
   1c30a:	af 56       	subi	r26, 0x6F	; 111
   1c30c:	b7 4e       	sbci	r27, 0xE7	; 231
   1c30e:	4c 93       	st	X, r20
   1c310:	9f 5f       	subi	r25, 0xFF	; 255
   1c312:	f1 cf       	rjmp	.-30     	; 0x1c2f6 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
   1c314:	10 92 90 18 	sts	0x1890, r1	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c318:	60 93 8f 18 	sts	0x188F, r22	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c31c:	cb 01       	movw	r24, r22
   1c31e:	df 91       	pop	r29
   1c320:	cf 91       	pop	r28
   1c322:	19 94       	eijmp
   1c324:	df 91       	pop	r29
   1c326:	cf 91       	pop	r28
   1c328:	08 95       	ret

0001c32a <_ZN7TwoWire16onRequestServiceEv>:
   1c32a:	e0 91 69 18 	lds	r30, 0x1869	; 0x801869 <_ZN7TwoWire14user_onRequestE>
   1c32e:	f0 91 6a 18 	lds	r31, 0x186A	; 0x80186a <_ZN7TwoWire14user_onRequestE+0x1>
   1c332:	30 97       	sbiw	r30, 0x00	; 0
   1c334:	29 f0       	breq	.+10     	; 0x1c340 <_ZN7TwoWire16onRequestServiceEv+0x16>
   1c336:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c33a:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c33e:	19 94       	eijmp
   1c340:	08 95       	ret

0001c342 <_ZN7TwoWire5writeEPKhj>:
   1c342:	cf 92       	push	r12
   1c344:	df 92       	push	r13
   1c346:	ef 92       	push	r14
   1c348:	ff 92       	push	r15
   1c34a:	0f 93       	push	r16
   1c34c:	1f 93       	push	r17
   1c34e:	cf 93       	push	r28
   1c350:	df 93       	push	r29
   1c352:	7c 01       	movw	r14, r24
   1c354:	cb 01       	movw	r24, r22
   1c356:	8a 01       	movw	r16, r20
   1c358:	20 91 6b 18 	lds	r18, 0x186B	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c35c:	22 23       	and	r18, r18
   1c35e:	89 f0       	breq	.+34     	; 0x1c382 <_ZN7TwoWire5writeEPKhj+0x40>
   1c360:	eb 01       	movw	r28, r22
   1c362:	6b 01       	movw	r12, r22
   1c364:	c4 0e       	add	r12, r20
   1c366:	d5 1e       	adc	r13, r21
   1c368:	cc 15       	cp	r28, r12
   1c36a:	dd 05       	cpc	r29, r13
   1c36c:	61 f0       	breq	.+24     	; 0x1c386 <_ZN7TwoWire5writeEPKhj+0x44>
   1c36e:	69 91       	ld	r22, Y+
   1c370:	d7 01       	movw	r26, r14
   1c372:	ed 91       	ld	r30, X+
   1c374:	fc 91       	ld	r31, X
   1c376:	01 90       	ld	r0, Z+
   1c378:	f0 81       	ld	r31, Z
   1c37a:	e0 2d       	mov	r30, r0
   1c37c:	c7 01       	movw	r24, r14
   1c37e:	19 95       	eicall
   1c380:	f3 cf       	rjmp	.-26     	; 0x1c368 <_ZN7TwoWire5writeEPKhj+0x26>
   1c382:	64 2f       	mov	r22, r20
   1c384:	7d d4       	rcall	.+2298   	; 0x1cc80 <twi_transmit>
   1c386:	c8 01       	movw	r24, r16
   1c388:	df 91       	pop	r29
   1c38a:	cf 91       	pop	r28
   1c38c:	1f 91       	pop	r17
   1c38e:	0f 91       	pop	r16
   1c390:	ff 90       	pop	r15
   1c392:	ef 90       	pop	r14
   1c394:	df 90       	pop	r13
   1c396:	cf 90       	pop	r12
   1c398:	08 95       	ret

0001c39a <_ZN7TwoWire5writeEh>:
   1c39a:	cf 93       	push	r28
   1c39c:	df 93       	push	r29
   1c39e:	1f 92       	push	r1
   1c3a0:	cd b7       	in	r28, 0x3d	; 61
   1c3a2:	de b7       	in	r29, 0x3e	; 62
   1c3a4:	69 83       	std	Y+1, r22	; 0x01
   1c3a6:	20 91 6b 18 	lds	r18, 0x186B	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c3aa:	22 23       	and	r18, r18
   1c3ac:	d1 f0       	breq	.+52     	; 0x1c3e2 <_ZN7TwoWire5writeEh+0x48>
   1c3ae:	20 91 6c 18 	lds	r18, 0x186C	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c3b2:	20 32       	cpi	r18, 0x20	; 32
   1c3b4:	40 f0       	brcs	.+16     	; 0x1c3c6 <_ZN7TwoWire5writeEh+0x2c>
   1c3b6:	21 e0       	ldi	r18, 0x01	; 1
   1c3b8:	30 e0       	ldi	r19, 0x00	; 0
   1c3ba:	fc 01       	movw	r30, r24
   1c3bc:	33 83       	std	Z+3, r19	; 0x03
   1c3be:	22 83       	std	Z+2, r18	; 0x02
   1c3c0:	80 e0       	ldi	r24, 0x00	; 0
   1c3c2:	90 e0       	ldi	r25, 0x00	; 0
   1c3c4:	14 c0       	rjmp	.+40     	; 0x1c3ee <_ZN7TwoWire5writeEh+0x54>
   1c3c6:	80 91 6d 18 	lds	r24, 0x186D	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c3ca:	e8 2f       	mov	r30, r24
   1c3cc:	f0 e0       	ldi	r31, 0x00	; 0
   1c3ce:	e2 59       	subi	r30, 0x92	; 146
   1c3d0:	f7 4e       	sbci	r31, 0xE7	; 231
   1c3d2:	99 81       	ldd	r25, Y+1	; 0x01
   1c3d4:	90 83       	st	Z, r25
   1c3d6:	8f 5f       	subi	r24, 0xFF	; 255
   1c3d8:	80 93 6d 18 	sts	0x186D, r24	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c3dc:	80 93 6c 18 	sts	0x186C, r24	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c3e0:	04 c0       	rjmp	.+8      	; 0x1c3ea <_ZN7TwoWire5writeEh+0x50>
   1c3e2:	61 e0       	ldi	r22, 0x01	; 1
   1c3e4:	ce 01       	movw	r24, r28
   1c3e6:	01 96       	adiw	r24, 0x01	; 1
   1c3e8:	4b d4       	rcall	.+2198   	; 0x1cc80 <twi_transmit>
   1c3ea:	81 e0       	ldi	r24, 0x01	; 1
   1c3ec:	90 e0       	ldi	r25, 0x00	; 0
   1c3ee:	0f 90       	pop	r0
   1c3f0:	df 91       	pop	r29
   1c3f2:	cf 91       	pop	r28
   1c3f4:	08 95       	ret

0001c3f6 <_ZN7TwoWireC1Ev>:
   1c3f6:	fc 01       	movw	r30, r24
   1c3f8:	13 82       	std	Z+3, r1	; 0x03
   1c3fa:	12 82       	std	Z+2, r1	; 0x02
   1c3fc:	88 ee       	ldi	r24, 0xE8	; 232
   1c3fe:	93 e0       	ldi	r25, 0x03	; 3
   1c400:	a0 e0       	ldi	r26, 0x00	; 0
   1c402:	b0 e0       	ldi	r27, 0x00	; 0
   1c404:	84 83       	std	Z+4, r24	; 0x04
   1c406:	95 83       	std	Z+5, r25	; 0x05
   1c408:	a6 83       	std	Z+6, r26	; 0x06
   1c40a:	b7 83       	std	Z+7, r27	; 0x07
   1c40c:	89 ea       	ldi	r24, 0xA9	; 169
   1c40e:	98 e0       	ldi	r25, 0x08	; 8
   1c410:	91 83       	std	Z+1, r25	; 0x01
   1c412:	80 83       	st	Z, r24
   1c414:	08 95       	ret

0001c416 <_ZN7TwoWire5beginEv>:
   1c416:	10 92 90 18 	sts	0x1890, r1	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c41a:	10 92 8f 18 	sts	0x188F, r1	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c41e:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c422:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c426:	01 d4       	rcall	.+2050   	; 0x1cc2a <twi_init>
   1c428:	85 e9       	ldi	r24, 0x95	; 149
   1c42a:	91 ee       	ldi	r25, 0xE1	; 225
   1c42c:	56 d4       	rcall	.+2220   	; 0x1ccda <twi_attachSlaveTxEvent>
   1c42e:	8b e6       	ldi	r24, 0x6B	; 107
   1c430:	91 ee       	ldi	r25, 0xE1	; 225
   1c432:	4e c4       	rjmp	.+2204   	; 0x1ccd0 <twi_attachSlaveRxEvent>

0001c434 <_ZN7TwoWire17beginTransmissionEh>:
   1c434:	81 e0       	ldi	r24, 0x01	; 1
   1c436:	80 93 6b 18 	sts	0x186B, r24	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c43a:	60 93 8e 18 	sts	0x188E, r22	; 0x80188e <_ZN7TwoWire9txAddressE>
   1c43e:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c442:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c446:	08 95       	ret

0001c448 <_ZN7TwoWire15endTransmissionEh>:
   1c448:	0f 93       	push	r16
   1c44a:	06 2f       	mov	r16, r22
   1c44c:	21 e0       	ldi	r18, 0x01	; 1
   1c44e:	40 91 6c 18 	lds	r20, 0x186C	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c452:	6e e6       	ldi	r22, 0x6E	; 110
   1c454:	78 e1       	ldi	r23, 0x18	; 24
   1c456:	80 91 8e 18 	lds	r24, 0x188E	; 0x80188e <_ZN7TwoWire9txAddressE>
   1c45a:	5e d4       	rcall	.+2236   	; 0x1cd18 <twi_writeTo>
   1c45c:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c460:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c464:	10 92 6b 18 	sts	0x186B, r1	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c468:	0f 91       	pop	r16
   1c46a:	08 95       	ret

0001c46c <_ZN7TwoWire15endTransmissionEv>:
   1c46c:	61 e0       	ldi	r22, 0x01	; 1
   1c46e:	ec cf       	rjmp	.-40     	; 0x1c448 <_ZN7TwoWire15endTransmissionEh>

0001c470 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
   1c470:	8b e5       	ldi	r24, 0x5B	; 91
   1c472:	98 e1       	ldi	r25, 0x18	; 24
   1c474:	c0 cf       	rjmp	.-128    	; 0x1c3f6 <_ZN7TwoWireC1Ev>

0001c476 <__cxa_pure_virtual>:
   1c476:	0e 94 07 ed 	call	0x1da0e	; 0x1da0e <abort>

0001c47a <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
   1c47a:	08 95       	ret

0001c47c <_ZdlPv>:
   1c47c:	0c 94 e2 eb 	jmp	0x1d7c4	; 0x1d7c4 <free>

0001c480 <nothing>:
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
   1c480:	08 95       	ret

0001c482 <attachInterrupt>:
   1c482:	88 30       	cpi	r24, 0x08	; 8
   1c484:	08 f0       	brcs	.+2      	; 0x1c488 <attachInterrupt+0x6>
   1c486:	70 c0       	rjmp	.+224    	; 0x1c568 <attachInterrupt+0xe6>
   1c488:	a8 2f       	mov	r26, r24
   1c48a:	b0 e0       	ldi	r27, 0x00	; 0
   1c48c:	aa 0f       	add	r26, r26
   1c48e:	bb 1f       	adc	r27, r27
   1c490:	ae 5a       	subi	r26, 0xAE	; 174
   1c492:	bd 4f       	sbci	r27, 0xFD	; 253
   1c494:	11 96       	adiw	r26, 0x01	; 1
   1c496:	7c 93       	st	X, r23
   1c498:	6e 93       	st	-X, r22
   1c49a:	90 e0       	ldi	r25, 0x00	; 0
   1c49c:	fc 01       	movw	r30, r24
   1c49e:	31 97       	sbiw	r30, 0x01	; 1
   1c4a0:	e7 30       	cpi	r30, 0x07	; 7
   1c4a2:	f1 05       	cpc	r31, r1
   1c4a4:	a0 f5       	brcc	.+104    	; 0x1c50e <attachInterrupt+0x8c>
   1c4a6:	88 27       	eor	r24, r24
   1c4a8:	ef 5e       	subi	r30, 0xEF	; 239
   1c4aa:	fe 4f       	sbci	r31, 0xFE	; 254
   1c4ac:	8f 4f       	sbci	r24, 0xFF	; 255
   1c4ae:	0c 94 1d eb 	jmp	0x1d63a	; 0x1d63a <__tablejump2__>
   1c4b2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c4b6:	8c 7f       	andi	r24, 0xFC	; 252
   1c4b8:	48 2b       	or	r20, r24
   1c4ba:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c4be:	e8 9a       	sbi	0x1d, 0	; 29
   1c4c0:	08 95       	ret
   1c4c2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c4c6:	83 7f       	andi	r24, 0xF3	; 243
   1c4c8:	44 0f       	add	r20, r20
   1c4ca:	55 1f       	adc	r21, r21
   1c4cc:	44 0f       	add	r20, r20
   1c4ce:	55 1f       	adc	r21, r21
   1c4d0:	48 2b       	or	r20, r24
   1c4d2:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c4d6:	e9 9a       	sbi	0x1d, 1	; 29
   1c4d8:	08 95       	ret
   1c4da:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c4de:	8f 7c       	andi	r24, 0xCF	; 207
   1c4e0:	74 e0       	ldi	r23, 0x04	; 4
   1c4e2:	44 0f       	add	r20, r20
   1c4e4:	55 1f       	adc	r21, r21
   1c4e6:	7a 95       	dec	r23
   1c4e8:	e1 f7       	brne	.-8      	; 0x1c4e2 <attachInterrupt+0x60>
   1c4ea:	48 2b       	or	r20, r24
   1c4ec:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c4f0:	ea 9a       	sbi	0x1d, 2	; 29
   1c4f2:	08 95       	ret
   1c4f4:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c4f8:	8f 73       	andi	r24, 0x3F	; 63
   1c4fa:	66 e0       	ldi	r22, 0x06	; 6
   1c4fc:	44 0f       	add	r20, r20
   1c4fe:	55 1f       	adc	r21, r21
   1c500:	6a 95       	dec	r22
   1c502:	e1 f7       	brne	.-8      	; 0x1c4fc <attachInterrupt+0x7a>
   1c504:	48 2b       	or	r20, r24
   1c506:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c50a:	eb 9a       	sbi	0x1d, 3	; 29
   1c50c:	08 95       	ret
   1c50e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c512:	8c 7f       	andi	r24, 0xFC	; 252
   1c514:	48 2b       	or	r20, r24
   1c516:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c51a:	ec 9a       	sbi	0x1d, 4	; 29
   1c51c:	08 95       	ret
   1c51e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c522:	83 7f       	andi	r24, 0xF3	; 243
   1c524:	44 0f       	add	r20, r20
   1c526:	55 1f       	adc	r21, r21
   1c528:	44 0f       	add	r20, r20
   1c52a:	55 1f       	adc	r21, r21
   1c52c:	48 2b       	or	r20, r24
   1c52e:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c532:	ed 9a       	sbi	0x1d, 5	; 29
   1c534:	08 95       	ret
   1c536:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c53a:	8f 7c       	andi	r24, 0xCF	; 207
   1c53c:	24 e0       	ldi	r18, 0x04	; 4
   1c53e:	44 0f       	add	r20, r20
   1c540:	55 1f       	adc	r21, r21
   1c542:	2a 95       	dec	r18
   1c544:	e1 f7       	brne	.-8      	; 0x1c53e <attachInterrupt+0xbc>
   1c546:	48 2b       	or	r20, r24
   1c548:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c54c:	ee 9a       	sbi	0x1d, 6	; 29
   1c54e:	08 95       	ret
   1c550:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c554:	8f 73       	andi	r24, 0x3F	; 63
   1c556:	96 e0       	ldi	r25, 0x06	; 6
   1c558:	44 0f       	add	r20, r20
   1c55a:	55 1f       	adc	r21, r21
   1c55c:	9a 95       	dec	r25
   1c55e:	e1 f7       	brne	.-8      	; 0x1c558 <attachInterrupt+0xd6>
   1c560:	48 2b       	or	r20, r24
   1c562:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c566:	ef 9a       	sbi	0x1d, 7	; 29
   1c568:	08 95       	ret

0001c56a <__vector_1>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)

#elif defined(EICRA) && defined(EICRB)

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_2)
   1c56a:	1f 92       	push	r1
   1c56c:	0f 92       	push	r0
   1c56e:	0f b6       	in	r0, 0x3f	; 63
   1c570:	0f 92       	push	r0
   1c572:	11 24       	eor	r1, r1
   1c574:	0b b6       	in	r0, 0x3b	; 59
   1c576:	0f 92       	push	r0
   1c578:	2f 93       	push	r18
   1c57a:	3f 93       	push	r19
   1c57c:	4f 93       	push	r20
   1c57e:	5f 93       	push	r21
   1c580:	6f 93       	push	r22
   1c582:	7f 93       	push	r23
   1c584:	8f 93       	push	r24
   1c586:	9f 93       	push	r25
   1c588:	af 93       	push	r26
   1c58a:	bf 93       	push	r27
   1c58c:	ef 93       	push	r30
   1c58e:	ff 93       	push	r31
   1c590:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <intFunc+0x4>
   1c594:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <intFunc+0x5>
   1c598:	19 95       	eicall
   1c59a:	ff 91       	pop	r31
   1c59c:	ef 91       	pop	r30
   1c59e:	bf 91       	pop	r27
   1c5a0:	af 91       	pop	r26
   1c5a2:	9f 91       	pop	r25
   1c5a4:	8f 91       	pop	r24
   1c5a6:	7f 91       	pop	r23
   1c5a8:	6f 91       	pop	r22
   1c5aa:	5f 91       	pop	r21
   1c5ac:	4f 91       	pop	r20
   1c5ae:	3f 91       	pop	r19
   1c5b0:	2f 91       	pop	r18
   1c5b2:	0f 90       	pop	r0
   1c5b4:	0b be       	out	0x3b, r0	; 59
   1c5b6:	0f 90       	pop	r0
   1c5b8:	0f be       	out	0x3f, r0	; 63
   1c5ba:	0f 90       	pop	r0
   1c5bc:	1f 90       	pop	r1
   1c5be:	18 95       	reti

0001c5c0 <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_3)
   1c5c0:	1f 92       	push	r1
   1c5c2:	0f 92       	push	r0
   1c5c4:	0f b6       	in	r0, 0x3f	; 63
   1c5c6:	0f 92       	push	r0
   1c5c8:	11 24       	eor	r1, r1
   1c5ca:	0b b6       	in	r0, 0x3b	; 59
   1c5cc:	0f 92       	push	r0
   1c5ce:	2f 93       	push	r18
   1c5d0:	3f 93       	push	r19
   1c5d2:	4f 93       	push	r20
   1c5d4:	5f 93       	push	r21
   1c5d6:	6f 93       	push	r22
   1c5d8:	7f 93       	push	r23
   1c5da:	8f 93       	push	r24
   1c5dc:	9f 93       	push	r25
   1c5de:	af 93       	push	r26
   1c5e0:	bf 93       	push	r27
   1c5e2:	ef 93       	push	r30
   1c5e4:	ff 93       	push	r31
   1c5e6:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <intFunc+0x6>
   1c5ea:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <intFunc+0x7>
   1c5ee:	19 95       	eicall
   1c5f0:	ff 91       	pop	r31
   1c5f2:	ef 91       	pop	r30
   1c5f4:	bf 91       	pop	r27
   1c5f6:	af 91       	pop	r26
   1c5f8:	9f 91       	pop	r25
   1c5fa:	8f 91       	pop	r24
   1c5fc:	7f 91       	pop	r23
   1c5fe:	6f 91       	pop	r22
   1c600:	5f 91       	pop	r21
   1c602:	4f 91       	pop	r20
   1c604:	3f 91       	pop	r19
   1c606:	2f 91       	pop	r18
   1c608:	0f 90       	pop	r0
   1c60a:	0b be       	out	0x3b, r0	; 59
   1c60c:	0f 90       	pop	r0
   1c60e:	0f be       	out	0x3f, r0	; 63
   1c610:	0f 90       	pop	r0
   1c612:	1f 90       	pop	r1
   1c614:	18 95       	reti

0001c616 <__vector_3>:
IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_4)
   1c616:	1f 92       	push	r1
   1c618:	0f 92       	push	r0
   1c61a:	0f b6       	in	r0, 0x3f	; 63
   1c61c:	0f 92       	push	r0
   1c61e:	11 24       	eor	r1, r1
   1c620:	0b b6       	in	r0, 0x3b	; 59
   1c622:	0f 92       	push	r0
   1c624:	2f 93       	push	r18
   1c626:	3f 93       	push	r19
   1c628:	4f 93       	push	r20
   1c62a:	5f 93       	push	r21
   1c62c:	6f 93       	push	r22
   1c62e:	7f 93       	push	r23
   1c630:	8f 93       	push	r24
   1c632:	9f 93       	push	r25
   1c634:	af 93       	push	r26
   1c636:	bf 93       	push	r27
   1c638:	ef 93       	push	r30
   1c63a:	ff 93       	push	r31
   1c63c:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <intFunc+0x8>
   1c640:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <intFunc+0x9>
   1c644:	19 95       	eicall
   1c646:	ff 91       	pop	r31
   1c648:	ef 91       	pop	r30
   1c64a:	bf 91       	pop	r27
   1c64c:	af 91       	pop	r26
   1c64e:	9f 91       	pop	r25
   1c650:	8f 91       	pop	r24
   1c652:	7f 91       	pop	r23
   1c654:	6f 91       	pop	r22
   1c656:	5f 91       	pop	r21
   1c658:	4f 91       	pop	r20
   1c65a:	3f 91       	pop	r19
   1c65c:	2f 91       	pop	r18
   1c65e:	0f 90       	pop	r0
   1c660:	0b be       	out	0x3b, r0	; 59
   1c662:	0f 90       	pop	r0
   1c664:	0f be       	out	0x3f, r0	; 63
   1c666:	0f 90       	pop	r0
   1c668:	1f 90       	pop	r1
   1c66a:	18 95       	reti

0001c66c <__vector_4>:
IMPLEMENT_ISR(INT3_vect, EXTERNAL_INT_5)
   1c66c:	1f 92       	push	r1
   1c66e:	0f 92       	push	r0
   1c670:	0f b6       	in	r0, 0x3f	; 63
   1c672:	0f 92       	push	r0
   1c674:	11 24       	eor	r1, r1
   1c676:	0b b6       	in	r0, 0x3b	; 59
   1c678:	0f 92       	push	r0
   1c67a:	2f 93       	push	r18
   1c67c:	3f 93       	push	r19
   1c67e:	4f 93       	push	r20
   1c680:	5f 93       	push	r21
   1c682:	6f 93       	push	r22
   1c684:	7f 93       	push	r23
   1c686:	8f 93       	push	r24
   1c688:	9f 93       	push	r25
   1c68a:	af 93       	push	r26
   1c68c:	bf 93       	push	r27
   1c68e:	ef 93       	push	r30
   1c690:	ff 93       	push	r31
   1c692:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <intFunc+0xa>
   1c696:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <intFunc+0xb>
   1c69a:	19 95       	eicall
   1c69c:	ff 91       	pop	r31
   1c69e:	ef 91       	pop	r30
   1c6a0:	bf 91       	pop	r27
   1c6a2:	af 91       	pop	r26
   1c6a4:	9f 91       	pop	r25
   1c6a6:	8f 91       	pop	r24
   1c6a8:	7f 91       	pop	r23
   1c6aa:	6f 91       	pop	r22
   1c6ac:	5f 91       	pop	r21
   1c6ae:	4f 91       	pop	r20
   1c6b0:	3f 91       	pop	r19
   1c6b2:	2f 91       	pop	r18
   1c6b4:	0f 90       	pop	r0
   1c6b6:	0b be       	out	0x3b, r0	; 59
   1c6b8:	0f 90       	pop	r0
   1c6ba:	0f be       	out	0x3f, r0	; 63
   1c6bc:	0f 90       	pop	r0
   1c6be:	1f 90       	pop	r1
   1c6c0:	18 95       	reti

0001c6c2 <__vector_5>:
IMPLEMENT_ISR(INT4_vect, EXTERNAL_INT_0)
   1c6c2:	1f 92       	push	r1
   1c6c4:	0f 92       	push	r0
   1c6c6:	0f b6       	in	r0, 0x3f	; 63
   1c6c8:	0f 92       	push	r0
   1c6ca:	11 24       	eor	r1, r1
   1c6cc:	0b b6       	in	r0, 0x3b	; 59
   1c6ce:	0f 92       	push	r0
   1c6d0:	2f 93       	push	r18
   1c6d2:	3f 93       	push	r19
   1c6d4:	4f 93       	push	r20
   1c6d6:	5f 93       	push	r21
   1c6d8:	6f 93       	push	r22
   1c6da:	7f 93       	push	r23
   1c6dc:	8f 93       	push	r24
   1c6de:	9f 93       	push	r25
   1c6e0:	af 93       	push	r26
   1c6e2:	bf 93       	push	r27
   1c6e4:	ef 93       	push	r30
   1c6e6:	ff 93       	push	r31
   1c6e8:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <intFunc>
   1c6ec:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <intFunc+0x1>
   1c6f0:	19 95       	eicall
   1c6f2:	ff 91       	pop	r31
   1c6f4:	ef 91       	pop	r30
   1c6f6:	bf 91       	pop	r27
   1c6f8:	af 91       	pop	r26
   1c6fa:	9f 91       	pop	r25
   1c6fc:	8f 91       	pop	r24
   1c6fe:	7f 91       	pop	r23
   1c700:	6f 91       	pop	r22
   1c702:	5f 91       	pop	r21
   1c704:	4f 91       	pop	r20
   1c706:	3f 91       	pop	r19
   1c708:	2f 91       	pop	r18
   1c70a:	0f 90       	pop	r0
   1c70c:	0b be       	out	0x3b, r0	; 59
   1c70e:	0f 90       	pop	r0
   1c710:	0f be       	out	0x3f, r0	; 63
   1c712:	0f 90       	pop	r0
   1c714:	1f 90       	pop	r1
   1c716:	18 95       	reti

0001c718 <__vector_6>:
IMPLEMENT_ISR(INT5_vect, EXTERNAL_INT_1)
   1c718:	1f 92       	push	r1
   1c71a:	0f 92       	push	r0
   1c71c:	0f b6       	in	r0, 0x3f	; 63
   1c71e:	0f 92       	push	r0
   1c720:	11 24       	eor	r1, r1
   1c722:	0b b6       	in	r0, 0x3b	; 59
   1c724:	0f 92       	push	r0
   1c726:	2f 93       	push	r18
   1c728:	3f 93       	push	r19
   1c72a:	4f 93       	push	r20
   1c72c:	5f 93       	push	r21
   1c72e:	6f 93       	push	r22
   1c730:	7f 93       	push	r23
   1c732:	8f 93       	push	r24
   1c734:	9f 93       	push	r25
   1c736:	af 93       	push	r26
   1c738:	bf 93       	push	r27
   1c73a:	ef 93       	push	r30
   1c73c:	ff 93       	push	r31
   1c73e:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <intFunc+0x2>
   1c742:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <intFunc+0x3>
   1c746:	19 95       	eicall
   1c748:	ff 91       	pop	r31
   1c74a:	ef 91       	pop	r30
   1c74c:	bf 91       	pop	r27
   1c74e:	af 91       	pop	r26
   1c750:	9f 91       	pop	r25
   1c752:	8f 91       	pop	r24
   1c754:	7f 91       	pop	r23
   1c756:	6f 91       	pop	r22
   1c758:	5f 91       	pop	r21
   1c75a:	4f 91       	pop	r20
   1c75c:	3f 91       	pop	r19
   1c75e:	2f 91       	pop	r18
   1c760:	0f 90       	pop	r0
   1c762:	0b be       	out	0x3b, r0	; 59
   1c764:	0f 90       	pop	r0
   1c766:	0f be       	out	0x3f, r0	; 63
   1c768:	0f 90       	pop	r0
   1c76a:	1f 90       	pop	r1
   1c76c:	18 95       	reti

0001c76e <__vector_7>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
   1c76e:	1f 92       	push	r1
   1c770:	0f 92       	push	r0
   1c772:	0f b6       	in	r0, 0x3f	; 63
   1c774:	0f 92       	push	r0
   1c776:	11 24       	eor	r1, r1
   1c778:	0b b6       	in	r0, 0x3b	; 59
   1c77a:	0f 92       	push	r0
   1c77c:	2f 93       	push	r18
   1c77e:	3f 93       	push	r19
   1c780:	4f 93       	push	r20
   1c782:	5f 93       	push	r21
   1c784:	6f 93       	push	r22
   1c786:	7f 93       	push	r23
   1c788:	8f 93       	push	r24
   1c78a:	9f 93       	push	r25
   1c78c:	af 93       	push	r26
   1c78e:	bf 93       	push	r27
   1c790:	ef 93       	push	r30
   1c792:	ff 93       	push	r31
   1c794:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <intFunc+0xc>
   1c798:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <intFunc+0xd>
   1c79c:	19 95       	eicall
   1c79e:	ff 91       	pop	r31
   1c7a0:	ef 91       	pop	r30
   1c7a2:	bf 91       	pop	r27
   1c7a4:	af 91       	pop	r26
   1c7a6:	9f 91       	pop	r25
   1c7a8:	8f 91       	pop	r24
   1c7aa:	7f 91       	pop	r23
   1c7ac:	6f 91       	pop	r22
   1c7ae:	5f 91       	pop	r21
   1c7b0:	4f 91       	pop	r20
   1c7b2:	3f 91       	pop	r19
   1c7b4:	2f 91       	pop	r18
   1c7b6:	0f 90       	pop	r0
   1c7b8:	0b be       	out	0x3b, r0	; 59
   1c7ba:	0f 90       	pop	r0
   1c7bc:	0f be       	out	0x3f, r0	; 63
   1c7be:	0f 90       	pop	r0
   1c7c0:	1f 90       	pop	r1
   1c7c2:	18 95       	reti

0001c7c4 <__vector_8>:
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)
   1c7c4:	1f 92       	push	r1
   1c7c6:	0f 92       	push	r0
   1c7c8:	0f b6       	in	r0, 0x3f	; 63
   1c7ca:	0f 92       	push	r0
   1c7cc:	11 24       	eor	r1, r1
   1c7ce:	0b b6       	in	r0, 0x3b	; 59
   1c7d0:	0f 92       	push	r0
   1c7d2:	2f 93       	push	r18
   1c7d4:	3f 93       	push	r19
   1c7d6:	4f 93       	push	r20
   1c7d8:	5f 93       	push	r21
   1c7da:	6f 93       	push	r22
   1c7dc:	7f 93       	push	r23
   1c7de:	8f 93       	push	r24
   1c7e0:	9f 93       	push	r25
   1c7e2:	af 93       	push	r26
   1c7e4:	bf 93       	push	r27
   1c7e6:	ef 93       	push	r30
   1c7e8:	ff 93       	push	r31
   1c7ea:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <intFunc+0xe>
   1c7ee:	f0 91 61 02 	lds	r31, 0x0261	; 0x800261 <intFunc+0xf>
   1c7f2:	19 95       	eicall
   1c7f4:	ff 91       	pop	r31
   1c7f6:	ef 91       	pop	r30
   1c7f8:	bf 91       	pop	r27
   1c7fa:	af 91       	pop	r26
   1c7fc:	9f 91       	pop	r25
   1c7fe:	8f 91       	pop	r24
   1c800:	7f 91       	pop	r23
   1c802:	6f 91       	pop	r22
   1c804:	5f 91       	pop	r21
   1c806:	4f 91       	pop	r20
   1c808:	3f 91       	pop	r19
   1c80a:	2f 91       	pop	r18
   1c80c:	0f 90       	pop	r0
   1c80e:	0b be       	out	0x3b, r0	; 59
   1c810:	0f 90       	pop	r0
   1c812:	0f be       	out	0x3f, r0	; 63
   1c814:	0f 90       	pop	r0
   1c816:	1f 90       	pop	r1
   1c818:	18 95       	reti

0001c81a <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
   1c81a:	86 33       	cpi	r24, 0x36	; 54
   1c81c:	08 f0       	brcs	.+2      	; 0x1c820 <analogRead+0x6>
   1c81e:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
   1c820:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1c824:	28 2f       	mov	r18, r24
   1c826:	28 70       	andi	r18, 0x08	; 8
   1c828:	97 7f       	andi	r25, 0xF7	; 247
   1c82a:	92 2b       	or	r25, r18
   1c82c:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
   1c830:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <analog_reference>
   1c834:	90 e4       	ldi	r25, 0x40	; 64
   1c836:	29 9f       	mul	r18, r25
   1c838:	90 01       	movw	r18, r0
   1c83a:	11 24       	eor	r1, r1
   1c83c:	87 70       	andi	r24, 0x07	; 7
   1c83e:	82 2b       	or	r24, r18
   1c840:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
   1c844:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c848:	80 64       	ori	r24, 0x40	; 64
   1c84a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
   1c84e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c852:	86 fd       	sbrc	r24, 6
   1c854:	fc cf       	rjmp	.-8      	; 0x1c84e <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
   1c856:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	high = ADCH;
   1c85a:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
   1c85e:	90 e0       	ldi	r25, 0x00	; 0
}
   1c860:	92 2b       	or	r25, r18
   1c862:	08 95       	ret

0001c864 <_Z6randoml>:
    srandom(seed);
  }
}

long random(long howbig)
{
   1c864:	cf 92       	push	r12
   1c866:	df 92       	push	r13
   1c868:	ef 92       	push	r14
   1c86a:	ff 92       	push	r15
  if (howbig == 0) {
   1c86c:	61 15       	cp	r22, r1
   1c86e:	71 05       	cpc	r23, r1
   1c870:	81 05       	cpc	r24, r1
   1c872:	91 05       	cpc	r25, r1
   1c874:	41 f0       	breq	.+16     	; 0x1c886 <_Z6randoml+0x22>
   1c876:	6b 01       	movw	r12, r22
   1c878:	7c 01       	movw	r14, r24
    return 0;
  }
  return random() % howbig;
   1c87a:	0e 94 b3 ec 	call	0x1d966	; 0x1d966 <random>
   1c87e:	a7 01       	movw	r20, r14
   1c880:	96 01       	movw	r18, r12
   1c882:	bf d6       	rcall	.+3454   	; 0x1d602 <__divmodsi4>
   1c884:	03 c0       	rjmp	.+6      	; 0x1c88c <_Z6randoml+0x28>
}

long random(long howbig)
{
  if (howbig == 0) {
    return 0;
   1c886:	60 e0       	ldi	r22, 0x00	; 0
   1c888:	70 e0       	ldi	r23, 0x00	; 0
   1c88a:	cb 01       	movw	r24, r22
  }
  return random() % howbig;
}
   1c88c:	ff 90       	pop	r15
   1c88e:	ef 90       	pop	r14
   1c890:	df 90       	pop	r13
   1c892:	cf 90       	pop	r12
   1c894:	08 95       	ret

0001c896 <_Z6randomll>:

long random(long howsmall, long howbig)
{
   1c896:	cf 92       	push	r12
   1c898:	df 92       	push	r13
   1c89a:	ef 92       	push	r14
   1c89c:	ff 92       	push	r15
   1c89e:	0f 93       	push	r16
   1c8a0:	1f 93       	push	r17
  if (howsmall >= howbig) {
   1c8a2:	62 17       	cp	r22, r18
   1c8a4:	73 07       	cpc	r23, r19
   1c8a6:	84 07       	cpc	r24, r20
   1c8a8:	95 07       	cpc	r25, r21
   1c8aa:	7c f4       	brge	.+30     	; 0x1c8ca <_Z6randomll+0x34>
   1c8ac:	89 01       	movw	r16, r18
   1c8ae:	9a 01       	movw	r18, r20
   1c8b0:	6b 01       	movw	r12, r22
   1c8b2:	7c 01       	movw	r14, r24
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
   1c8b4:	c9 01       	movw	r24, r18
   1c8b6:	b8 01       	movw	r22, r16
   1c8b8:	6c 19       	sub	r22, r12
   1c8ba:	7d 09       	sbc	r23, r13
   1c8bc:	8e 09       	sbc	r24, r14
   1c8be:	9f 09       	sbc	r25, r15
   1c8c0:	d1 df       	rcall	.-94     	; 0x1c864 <_Z6randoml>
   1c8c2:	6c 0d       	add	r22, r12
   1c8c4:	7d 1d       	adc	r23, r13
   1c8c6:	8e 1d       	adc	r24, r14
   1c8c8:	9f 1d       	adc	r25, r15
}
   1c8ca:	1f 91       	pop	r17
   1c8cc:	0f 91       	pop	r16
   1c8ce:	ff 90       	pop	r15
   1c8d0:	ef 90       	pop	r14
   1c8d2:	df 90       	pop	r13
   1c8d4:	cf 90       	pop	r12
   1c8d6:	08 95       	ret

0001c8d8 <_ZN12RHGenericSPI15attachInterruptEv>:
#endif

    /// SPI Configuration methods
    /// Enable SPI interrupts (if supported)
    /// This can be used in an SPI slave to indicate when an SPI message has been received
    virtual void attachInterrupt() {};
   1c8d8:	08 95       	ret

0001c8da <_ZN12RHGenericSPI15detachInterruptEv>:

    /// Disable SPI interrupts (if supported)
    /// This can be used to diable the SPI interrupt in slaves where that is supported.
    virtual void detachInterrupt() {};
   1c8da:	08 95       	ret

0001c8dc <_ZN12RHGenericSPI16beginTransactionEv>:
    /// Signal the start of an SPI transaction that must not be interrupted by other SPI actions
    /// In subclasses that support transactions this will ensure that other SPI transactions
    /// are blocked until this one is completed by endTransaction().
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void beginTransaction(){}
   1c8dc:	08 95       	ret

0001c8de <_ZN12RHGenericSPI14endTransactionEv>:

    /// Signal the end of an SPI transaction
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void endTransaction(){}
   1c8de:	08 95       	ret

0001c8e0 <_ZN12RHGenericSPI14usingInterruptEh>:
    /// Tells the SPI support software that SPI transactions will occur with the interrupt
    /// handler assocated with interruptNumber
    /// Base does nothing
    /// Might be overridden in subclass
    /// \param[in] interruptNumber The number of the interrupt
    virtual void usingInterrupt(uint8_t interruptNumber){
   1c8e0:	08 95       	ret

0001c8e2 <_ZN12RHGenericSPI11setBitOrderENS_8BitOrderE>:
{
}

void RHGenericSPI::setBitOrder(BitOrder bitOrder)
{
    _bitOrder = bitOrder;
   1c8e2:	fc 01       	movw	r30, r24
   1c8e4:	63 83       	std	Z+3, r22	; 0x03
   1c8e6:	08 95       	ret

0001c8e8 <_ZN12RHGenericSPI11setDataModeENS_8DataModeE>:
}

void RHGenericSPI::setDataMode(DataMode dataMode)
{
    _dataMode = dataMode; 
   1c8e8:	fc 01       	movw	r30, r24
   1c8ea:	64 83       	std	Z+4, r22	; 0x04
   1c8ec:	08 95       	ret

0001c8ee <_ZN12RHGenericSPI12setFrequencyENS_9FrequencyE>:
}

void RHGenericSPI::setFrequency(Frequency frequency)
{
    _frequency = frequency;
   1c8ee:	fc 01       	movw	r30, r24
   1c8f0:	62 83       	std	Z+2, r22	; 0x02
   1c8f2:	08 95       	ret

0001c8f4 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>:
// Contributed by Joanna Rutkowska
// $Id: RHGenericSPI.cpp,v 1.2 2014/04/12 05:26:05 mikem Exp $

#include <RHGenericSPI.h>

RHGenericSPI::RHGenericSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1c8f4:	fc 01       	movw	r30, r24
    :
    _frequency(frequency),
    _bitOrder(bitOrder),
    _dataMode(dataMode)
   1c8f6:	8b eb       	ldi	r24, 0xBB	; 187
   1c8f8:	98 e0       	ldi	r25, 0x08	; 8
   1c8fa:	91 83       	std	Z+1, r25	; 0x01
   1c8fc:	80 83       	st	Z, r24
   1c8fe:	62 83       	std	Z+2, r22	; 0x02
   1c900:	43 83       	std	Z+3, r20	; 0x03
   1c902:	24 83       	std	Z+4, r18	; 0x04
   1c904:	08 95       	ret

0001c906 <_ZN11RHSPIDriver4initEv>:
    return status;
}

void RHSPIDriver::setSlaveSelectPin(uint8_t slaveSelectPin)
{
    _slaveSelectPin = slaveSelectPin;
   1c906:	cf 93       	push	r28
   1c908:	df 93       	push	r29
   1c90a:	ec 01       	movw	r28, r24
   1c90c:	88 8d       	ldd	r24, Y+24	; 0x18
   1c90e:	99 8d       	ldd	r25, Y+25	; 0x19
   1c910:	dc 01       	movw	r26, r24
   1c912:	ed 91       	ld	r30, X+
   1c914:	fc 91       	ld	r31, X
   1c916:	06 80       	ldd	r0, Z+6	; 0x06
   1c918:	f7 81       	ldd	r31, Z+7	; 0x07
   1c91a:	e0 2d       	mov	r30, r0
   1c91c:	19 95       	eicall
   1c91e:	8a 8d       	ldd	r24, Y+26	; 0x1a
   1c920:	8f 3f       	cpi	r24, 0xFF	; 255
   1c922:	19 f0       	breq	.+6      	; 0x1c92a <_ZN11RHSPIDriver4initEv+0x24>
   1c924:	61 e0       	ldi	r22, 0x01	; 1
   1c926:	0e 94 0c d8 	call	0x1b018	; 0x1b018 <pinMode>
   1c92a:	e8 81       	ld	r30, Y
   1c92c:	f9 81       	ldd	r31, Y+1	; 0x01
   1c92e:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c930:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c932:	e0 2d       	mov	r30, r0
   1c934:	ce 01       	movw	r24, r28
   1c936:	19 95       	eicall
   1c938:	64 e6       	ldi	r22, 0x64	; 100
   1c93a:	70 e0       	ldi	r23, 0x00	; 0
   1c93c:	80 e0       	ldi	r24, 0x00	; 0
   1c93e:	90 e0       	ldi	r25, 0x00	; 0
   1c940:	0e 94 0f d7 	call	0x1ae1e	; 0x1ae1e <delay>
   1c944:	81 e0       	ldi	r24, 0x01	; 1
   1c946:	df 91       	pop	r29
   1c948:	cf 91       	pop	r28
   1c94a:	08 95       	ret

0001c94c <_ZN11RHSPIDriver11selectSlaveEv>:
   1c94c:	60 e0       	ldi	r22, 0x00	; 0
   1c94e:	fc 01       	movw	r30, r24
   1c950:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c952:	0c 94 48 d8 	jmp	0x1b090	; 0x1b090 <digitalWrite>

0001c956 <_ZN11RHSPIDriver13deselectSlaveEv>:
   1c956:	61 e0       	ldi	r22, 0x01	; 1
   1c958:	fc 01       	movw	r30, r24
   1c95a:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c95c:	0c 94 48 d8 	jmp	0x1b090	; 0x1b090 <digitalWrite>

0001c960 <_ZN11RHSPIDriverC1EhR12RHGenericSPI>:
   1c960:	ef 92       	push	r14
   1c962:	ff 92       	push	r15
   1c964:	1f 93       	push	r17
   1c966:	cf 93       	push	r28
   1c968:	df 93       	push	r29
   1c96a:	ec 01       	movw	r28, r24
   1c96c:	16 2f       	mov	r17, r22
   1c96e:	7a 01       	movw	r14, r20
   1c970:	0e 94 c6 db 	call	0x1b78c	; 0x1b78c <_ZN15RHGenericDriverC1Ev>
   1c974:	85 ed       	ldi	r24, 0xD5	; 213
   1c976:	98 e0       	ldi	r25, 0x08	; 8
   1c978:	99 83       	std	Y+1, r25	; 0x01
   1c97a:	88 83       	st	Y, r24
   1c97c:	f9 8e       	std	Y+25, r15	; 0x19
   1c97e:	e8 8e       	std	Y+24, r14	; 0x18
   1c980:	1a 8f       	std	Y+26, r17	; 0x1a
   1c982:	df 91       	pop	r29
   1c984:	cf 91       	pop	r28
   1c986:	1f 91       	pop	r17
   1c988:	ff 90       	pop	r15
   1c98a:	ef 90       	pop	r14
   1c98c:	08 95       	ret

0001c98e <_ZN11RHSPIDriver7spiReadEh>:
   1c98e:	0f 93       	push	r16
   1c990:	1f 93       	push	r17
   1c992:	cf 93       	push	r28
   1c994:	df 93       	push	r29
   1c996:	ec 01       	movw	r28, r24
   1c998:	16 2f       	mov	r17, r22
   1c99a:	0f b7       	in	r16, 0x3f	; 63
   1c99c:	f8 94       	cli
   1c99e:	88 8d       	ldd	r24, Y+24	; 0x18
   1c9a0:	99 8d       	ldd	r25, Y+25	; 0x19
   1c9a2:	dc 01       	movw	r26, r24
   1c9a4:	ed 91       	ld	r30, X+
   1c9a6:	fc 91       	ld	r31, X
   1c9a8:	00 88       	ldd	r0, Z+16	; 0x10
   1c9aa:	f1 89       	ldd	r31, Z+17	; 0x11
   1c9ac:	e0 2d       	mov	r30, r0
   1c9ae:	19 95       	eicall
   1c9b0:	e8 81       	ld	r30, Y
   1c9b2:	f9 81       	ldd	r31, Y+1	; 0x01
   1c9b4:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c9b6:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c9b8:	e0 2d       	mov	r30, r0
   1c9ba:	ce 01       	movw	r24, r28
   1c9bc:	19 95       	eicall
   1c9be:	88 8d       	ldd	r24, Y+24	; 0x18
   1c9c0:	99 8d       	ldd	r25, Y+25	; 0x19
   1c9c2:	61 2f       	mov	r22, r17
   1c9c4:	6f 77       	andi	r22, 0x7F	; 127
   1c9c6:	dc 01       	movw	r26, r24
   1c9c8:	ed 91       	ld	r30, X+
   1c9ca:	fc 91       	ld	r31, X
   1c9cc:	01 90       	ld	r0, Z+
   1c9ce:	f0 81       	ld	r31, Z
   1c9d0:	e0 2d       	mov	r30, r0
   1c9d2:	19 95       	eicall
   1c9d4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c9d6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c9d8:	dc 01       	movw	r26, r24
   1c9da:	ed 91       	ld	r30, X+
   1c9dc:	fc 91       	ld	r31, X
   1c9de:	01 90       	ld	r0, Z+
   1c9e0:	f0 81       	ld	r31, Z
   1c9e2:	e0 2d       	mov	r30, r0
   1c9e4:	60 e0       	ldi	r22, 0x00	; 0
   1c9e6:	19 95       	eicall
   1c9e8:	18 2f       	mov	r17, r24
   1c9ea:	e8 81       	ld	r30, Y
   1c9ec:	f9 81       	ldd	r31, Y+1	; 0x01
   1c9ee:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c9f0:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c9f2:	e0 2d       	mov	r30, r0
   1c9f4:	ce 01       	movw	r24, r28
   1c9f6:	19 95       	eicall
   1c9f8:	88 8d       	ldd	r24, Y+24	; 0x18
   1c9fa:	99 8d       	ldd	r25, Y+25	; 0x19
   1c9fc:	dc 01       	movw	r26, r24
   1c9fe:	ed 91       	ld	r30, X+
   1ca00:	fc 91       	ld	r31, X
   1ca02:	02 88       	ldd	r0, Z+18	; 0x12
   1ca04:	f3 89       	ldd	r31, Z+19	; 0x13
   1ca06:	e0 2d       	mov	r30, r0
   1ca08:	19 95       	eicall
   1ca0a:	0f bf       	out	0x3f, r16	; 63
   1ca0c:	81 2f       	mov	r24, r17
   1ca0e:	df 91       	pop	r29
   1ca10:	cf 91       	pop	r28
   1ca12:	1f 91       	pop	r17
   1ca14:	0f 91       	pop	r16
   1ca16:	08 95       	ret

0001ca18 <_ZN11RHSPIDriver8spiWriteEhh>:
   1ca18:	ff 92       	push	r15
   1ca1a:	0f 93       	push	r16
   1ca1c:	1f 93       	push	r17
   1ca1e:	cf 93       	push	r28
   1ca20:	df 93       	push	r29
   1ca22:	ec 01       	movw	r28, r24
   1ca24:	16 2f       	mov	r17, r22
   1ca26:	f4 2e       	mov	r15, r20
   1ca28:	0f b7       	in	r16, 0x3f	; 63
   1ca2a:	f8 94       	cli
   1ca2c:	88 8d       	ldd	r24, Y+24	; 0x18
   1ca2e:	99 8d       	ldd	r25, Y+25	; 0x19
   1ca30:	dc 01       	movw	r26, r24
   1ca32:	ed 91       	ld	r30, X+
   1ca34:	fc 91       	ld	r31, X
   1ca36:	00 88       	ldd	r0, Z+16	; 0x10
   1ca38:	f1 89       	ldd	r31, Z+17	; 0x11
   1ca3a:	e0 2d       	mov	r30, r0
   1ca3c:	19 95       	eicall
   1ca3e:	e8 81       	ld	r30, Y
   1ca40:	f9 81       	ldd	r31, Y+1	; 0x01
   1ca42:	04 ac       	ldd	r0, Z+60	; 0x3c
   1ca44:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1ca46:	e0 2d       	mov	r30, r0
   1ca48:	ce 01       	movw	r24, r28
   1ca4a:	19 95       	eicall
   1ca4c:	88 8d       	ldd	r24, Y+24	; 0x18
   1ca4e:	99 8d       	ldd	r25, Y+25	; 0x19
   1ca50:	61 2f       	mov	r22, r17
   1ca52:	60 68       	ori	r22, 0x80	; 128
   1ca54:	dc 01       	movw	r26, r24
   1ca56:	ed 91       	ld	r30, X+
   1ca58:	fc 91       	ld	r31, X
   1ca5a:	01 90       	ld	r0, Z+
   1ca5c:	f0 81       	ld	r31, Z
   1ca5e:	e0 2d       	mov	r30, r0
   1ca60:	19 95       	eicall
   1ca62:	18 2f       	mov	r17, r24
   1ca64:	88 8d       	ldd	r24, Y+24	; 0x18
   1ca66:	99 8d       	ldd	r25, Y+25	; 0x19
   1ca68:	dc 01       	movw	r26, r24
   1ca6a:	ed 91       	ld	r30, X+
   1ca6c:	fc 91       	ld	r31, X
   1ca6e:	01 90       	ld	r0, Z+
   1ca70:	f0 81       	ld	r31, Z
   1ca72:	e0 2d       	mov	r30, r0
   1ca74:	6f 2d       	mov	r22, r15
   1ca76:	19 95       	eicall
   1ca78:	e8 81       	ld	r30, Y
   1ca7a:	f9 81       	ldd	r31, Y+1	; 0x01
   1ca7c:	06 ac       	ldd	r0, Z+62	; 0x3e
   1ca7e:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1ca80:	e0 2d       	mov	r30, r0
   1ca82:	ce 01       	movw	r24, r28
   1ca84:	19 95       	eicall
   1ca86:	88 8d       	ldd	r24, Y+24	; 0x18
   1ca88:	99 8d       	ldd	r25, Y+25	; 0x19
   1ca8a:	dc 01       	movw	r26, r24
   1ca8c:	ed 91       	ld	r30, X+
   1ca8e:	fc 91       	ld	r31, X
   1ca90:	02 88       	ldd	r0, Z+18	; 0x12
   1ca92:	f3 89       	ldd	r31, Z+19	; 0x13
   1ca94:	e0 2d       	mov	r30, r0
   1ca96:	19 95       	eicall
   1ca98:	0f bf       	out	0x3f, r16	; 63
   1ca9a:	81 2f       	mov	r24, r17
   1ca9c:	df 91       	pop	r29
   1ca9e:	cf 91       	pop	r28
   1caa0:	1f 91       	pop	r17
   1caa2:	0f 91       	pop	r16
   1caa4:	ff 90       	pop	r15
   1caa6:	08 95       	ret

0001caa8 <_ZN11RHSPIDriver12spiBurstReadEhPhh>:
   1caa8:	bf 92       	push	r11
   1caaa:	cf 92       	push	r12
   1caac:	df 92       	push	r13
   1caae:	ef 92       	push	r14
   1cab0:	ff 92       	push	r15
   1cab2:	0f 93       	push	r16
   1cab4:	1f 93       	push	r17
   1cab6:	cf 93       	push	r28
   1cab8:	df 93       	push	r29
   1caba:	ec 01       	movw	r28, r24
   1cabc:	06 2f       	mov	r16, r22
   1cabe:	b4 2e       	mov	r11, r20
   1cac0:	c5 2e       	mov	r12, r21
   1cac2:	12 2f       	mov	r17, r18
   1cac4:	df b6       	in	r13, 0x3f	; 63
   1cac6:	f8 94       	cli
   1cac8:	88 8d       	ldd	r24, Y+24	; 0x18
   1caca:	99 8d       	ldd	r25, Y+25	; 0x19
   1cacc:	dc 01       	movw	r26, r24
   1cace:	ed 91       	ld	r30, X+
   1cad0:	fc 91       	ld	r31, X
   1cad2:	00 88       	ldd	r0, Z+16	; 0x10
   1cad4:	f1 89       	ldd	r31, Z+17	; 0x11
   1cad6:	e0 2d       	mov	r30, r0
   1cad8:	19 95       	eicall
   1cada:	e8 81       	ld	r30, Y
   1cadc:	f9 81       	ldd	r31, Y+1	; 0x01
   1cade:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cae0:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cae2:	e0 2d       	mov	r30, r0
   1cae4:	ce 01       	movw	r24, r28
   1cae6:	19 95       	eicall
   1cae8:	88 8d       	ldd	r24, Y+24	; 0x18
   1caea:	99 8d       	ldd	r25, Y+25	; 0x19
   1caec:	60 2f       	mov	r22, r16
   1caee:	6f 77       	andi	r22, 0x7F	; 127
   1caf0:	dc 01       	movw	r26, r24
   1caf2:	ed 91       	ld	r30, X+
   1caf4:	fc 91       	ld	r31, X
   1caf6:	01 90       	ld	r0, Z+
   1caf8:	f0 81       	ld	r31, Z
   1cafa:	e0 2d       	mov	r30, r0
   1cafc:	19 95       	eicall
   1cafe:	08 2f       	mov	r16, r24
   1cb00:	eb 2c       	mov	r14, r11
   1cb02:	fc 2c       	mov	r15, r12
   1cb04:	11 23       	and	r17, r17
   1cb06:	79 f0       	breq	.+30     	; 0x1cb26 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x7e>
   1cb08:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb0a:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb0c:	dc 01       	movw	r26, r24
   1cb0e:	ed 91       	ld	r30, X+
   1cb10:	fc 91       	ld	r31, X
   1cb12:	01 90       	ld	r0, Z+
   1cb14:	f0 81       	ld	r31, Z
   1cb16:	e0 2d       	mov	r30, r0
   1cb18:	60 e0       	ldi	r22, 0x00	; 0
   1cb1a:	19 95       	eicall
   1cb1c:	f7 01       	movw	r30, r14
   1cb1e:	81 93       	st	Z+, r24
   1cb20:	7f 01       	movw	r14, r30
   1cb22:	11 50       	subi	r17, 0x01	; 1
   1cb24:	ef cf       	rjmp	.-34     	; 0x1cb04 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x5c>
   1cb26:	e8 81       	ld	r30, Y
   1cb28:	f9 81       	ldd	r31, Y+1	; 0x01
   1cb2a:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cb2c:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cb2e:	e0 2d       	mov	r30, r0
   1cb30:	ce 01       	movw	r24, r28
   1cb32:	19 95       	eicall
   1cb34:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb36:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb38:	dc 01       	movw	r26, r24
   1cb3a:	ed 91       	ld	r30, X+
   1cb3c:	fc 91       	ld	r31, X
   1cb3e:	02 88       	ldd	r0, Z+18	; 0x12
   1cb40:	f3 89       	ldd	r31, Z+19	; 0x13
   1cb42:	e0 2d       	mov	r30, r0
   1cb44:	19 95       	eicall
   1cb46:	df be       	out	0x3f, r13	; 63
   1cb48:	80 2f       	mov	r24, r16
   1cb4a:	df 91       	pop	r29
   1cb4c:	cf 91       	pop	r28
   1cb4e:	1f 91       	pop	r17
   1cb50:	0f 91       	pop	r16
   1cb52:	ff 90       	pop	r15
   1cb54:	ef 90       	pop	r14
   1cb56:	df 90       	pop	r13
   1cb58:	cf 90       	pop	r12
   1cb5a:	bf 90       	pop	r11
   1cb5c:	08 95       	ret

0001cb5e <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>:
   1cb5e:	bf 92       	push	r11
   1cb60:	cf 92       	push	r12
   1cb62:	df 92       	push	r13
   1cb64:	ef 92       	push	r14
   1cb66:	ff 92       	push	r15
   1cb68:	0f 93       	push	r16
   1cb6a:	1f 93       	push	r17
   1cb6c:	cf 93       	push	r28
   1cb6e:	df 93       	push	r29
   1cb70:	ec 01       	movw	r28, r24
   1cb72:	06 2f       	mov	r16, r22
   1cb74:	b4 2e       	mov	r11, r20
   1cb76:	c5 2e       	mov	r12, r21
   1cb78:	12 2f       	mov	r17, r18
   1cb7a:	df b6       	in	r13, 0x3f	; 63
   1cb7c:	f8 94       	cli
   1cb7e:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb80:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb82:	dc 01       	movw	r26, r24
   1cb84:	ed 91       	ld	r30, X+
   1cb86:	fc 91       	ld	r31, X
   1cb88:	00 88       	ldd	r0, Z+16	; 0x10
   1cb8a:	f1 89       	ldd	r31, Z+17	; 0x11
   1cb8c:	e0 2d       	mov	r30, r0
   1cb8e:	19 95       	eicall
   1cb90:	e8 81       	ld	r30, Y
   1cb92:	f9 81       	ldd	r31, Y+1	; 0x01
   1cb94:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cb96:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cb98:	e0 2d       	mov	r30, r0
   1cb9a:	ce 01       	movw	r24, r28
   1cb9c:	19 95       	eicall
   1cb9e:	88 8d       	ldd	r24, Y+24	; 0x18
   1cba0:	99 8d       	ldd	r25, Y+25	; 0x19
   1cba2:	60 2f       	mov	r22, r16
   1cba4:	60 68       	ori	r22, 0x80	; 128
   1cba6:	dc 01       	movw	r26, r24
   1cba8:	ed 91       	ld	r30, X+
   1cbaa:	fc 91       	ld	r31, X
   1cbac:	01 90       	ld	r0, Z+
   1cbae:	f0 81       	ld	r31, Z
   1cbb0:	e0 2d       	mov	r30, r0
   1cbb2:	19 95       	eicall
   1cbb4:	08 2f       	mov	r16, r24
   1cbb6:	eb 2c       	mov	r14, r11
   1cbb8:	fc 2c       	mov	r15, r12
   1cbba:	11 23       	and	r17, r17
   1cbbc:	71 f0       	breq	.+28     	; 0x1cbda <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x7c>
   1cbbe:	88 8d       	ldd	r24, Y+24	; 0x18
   1cbc0:	99 8d       	ldd	r25, Y+25	; 0x19
   1cbc2:	f7 01       	movw	r30, r14
   1cbc4:	61 91       	ld	r22, Z+
   1cbc6:	7f 01       	movw	r14, r30
   1cbc8:	dc 01       	movw	r26, r24
   1cbca:	ed 91       	ld	r30, X+
   1cbcc:	fc 91       	ld	r31, X
   1cbce:	01 90       	ld	r0, Z+
   1cbd0:	f0 81       	ld	r31, Z
   1cbd2:	e0 2d       	mov	r30, r0
   1cbd4:	19 95       	eicall
   1cbd6:	11 50       	subi	r17, 0x01	; 1
   1cbd8:	f0 cf       	rjmp	.-32     	; 0x1cbba <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x5c>
   1cbda:	e8 81       	ld	r30, Y
   1cbdc:	f9 81       	ldd	r31, Y+1	; 0x01
   1cbde:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cbe0:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cbe2:	e0 2d       	mov	r30, r0
   1cbe4:	ce 01       	movw	r24, r28
   1cbe6:	19 95       	eicall
   1cbe8:	88 8d       	ldd	r24, Y+24	; 0x18
   1cbea:	99 8d       	ldd	r25, Y+25	; 0x19
   1cbec:	dc 01       	movw	r26, r24
   1cbee:	ed 91       	ld	r30, X+
   1cbf0:	fc 91       	ld	r31, X
   1cbf2:	02 88       	ldd	r0, Z+18	; 0x12
   1cbf4:	f3 89       	ldd	r31, Z+19	; 0x13
   1cbf6:	e0 2d       	mov	r30, r0
   1cbf8:	19 95       	eicall
   1cbfa:	df be       	out	0x3f, r13	; 63
   1cbfc:	80 2f       	mov	r24, r16
   1cbfe:	df 91       	pop	r29
   1cc00:	cf 91       	pop	r28
   1cc02:	1f 91       	pop	r17
   1cc04:	0f 91       	pop	r16
   1cc06:	ff 90       	pop	r15
   1cc08:	ef 90       	pop	r14
   1cc0a:	df 90       	pop	r13
   1cc0c:	cf 90       	pop	r12
   1cc0e:	bf 90       	pop	r11
   1cc10:	08 95       	ret

0001cc12 <_ZN11RHSPIDriver17spiUsingInterruptEh>:
}

void RHSPIDriver::spiUsingInterrupt(uint8_t interruptNumber)
{
    _spi.usingInterrupt(interruptNumber);
   1cc12:	dc 01       	movw	r26, r24
   1cc14:	58 96       	adiw	r26, 0x18	; 24
   1cc16:	8d 91       	ld	r24, X+
   1cc18:	9c 91       	ld	r25, X
   1cc1a:	59 97       	sbiw	r26, 0x19	; 25
   1cc1c:	dc 01       	movw	r26, r24
   1cc1e:	ed 91       	ld	r30, X+
   1cc20:	fc 91       	ld	r31, X
   1cc22:	04 88       	ldd	r0, Z+20	; 0x14
   1cc24:	f5 89       	ldd	r31, Z+21	; 0x15
   1cc26:	e0 2d       	mov	r30, r0
   1cc28:	19 94       	eijmp

0001cc2a <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
   1cc2a:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1cc2e:	81 e0       	ldi	r24, 0x01	; 1
   1cc30:	80 93 22 19 	sts	0x1922, r24	; 0x801922 <twi_sendStop>
   1cc34:	10 92 21 19 	sts	0x1921, r1	; 0x801921 <twi_inRepStart>
   1cc38:	61 e0       	ldi	r22, 0x01	; 1
   1cc3a:	84 e1       	ldi	r24, 0x14	; 20
   1cc3c:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   1cc40:	61 e0       	ldi	r22, 0x01	; 1
   1cc42:	85 e1       	ldi	r24, 0x15	; 21
   1cc44:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   1cc48:	e9 eb       	ldi	r30, 0xB9	; 185
   1cc4a:	f0 e0       	ldi	r31, 0x00	; 0
   1cc4c:	80 81       	ld	r24, Z
   1cc4e:	8e 7f       	andi	r24, 0xFE	; 254
   1cc50:	80 83       	st	Z, r24
   1cc52:	80 81       	ld	r24, Z
   1cc54:	8d 7f       	andi	r24, 0xFD	; 253
   1cc56:	80 83       	st	Z, r24
   1cc58:	88 e4       	ldi	r24, 0x48	; 72
   1cc5a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1cc5e:	85 e4       	ldi	r24, 0x45	; 69
   1cc60:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cc64:	08 95       	ret

0001cc66 <twi_disable>:
   1cc66:	ec eb       	ldi	r30, 0xBC	; 188
   1cc68:	f0 e0       	ldi	r31, 0x00	; 0
   1cc6a:	80 81       	ld	r24, Z
   1cc6c:	8a 7b       	andi	r24, 0xBA	; 186
   1cc6e:	80 83       	st	Z, r24
   1cc70:	60 e0       	ldi	r22, 0x00	; 0
   1cc72:	84 e1       	ldi	r24, 0x14	; 20
   1cc74:	0e 94 48 d8 	call	0x1b090	; 0x1b090 <digitalWrite>
   1cc78:	60 e0       	ldi	r22, 0x00	; 0
   1cc7a:	85 e1       	ldi	r24, 0x15	; 21
   1cc7c:	0c 94 48 d8 	jmp	0x1b090	; 0x1b090 <digitalWrite>

0001cc80 <twi_transmit>:
   1cc80:	40 91 d3 18 	lds	r20, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1cc84:	26 2f       	mov	r18, r22
   1cc86:	30 e0       	ldi	r19, 0x00	; 0
   1cc88:	24 0f       	add	r18, r20
   1cc8a:	31 1d       	adc	r19, r1
   1cc8c:	21 32       	cpi	r18, 0x21	; 33
   1cc8e:	31 05       	cpc	r19, r1
   1cc90:	dc f4       	brge	.+54     	; 0x1ccc8 <twi_transmit+0x48>
   1cc92:	20 91 24 19 	lds	r18, 0x1924	; 0x801924 <twi_state>
   1cc96:	24 30       	cpi	r18, 0x04	; 4
   1cc98:	c9 f4       	brne	.+50     	; 0x1cccc <twi_transmit+0x4c>
   1cc9a:	fc 01       	movw	r30, r24
   1cc9c:	80 e0       	ldi	r24, 0x00	; 0
   1cc9e:	90 e0       	ldi	r25, 0x00	; 0
   1cca0:	86 17       	cp	r24, r22
   1cca2:	58 f4       	brcc	.+22     	; 0x1ccba <twi_transmit+0x3a>
   1cca4:	30 91 d3 18 	lds	r19, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1cca8:	21 91       	ld	r18, Z+
   1ccaa:	dc 01       	movw	r26, r24
   1ccac:	ab 52       	subi	r26, 0x2B	; 43
   1ccae:	b7 4e       	sbci	r27, 0xE7	; 231
   1ccb0:	a3 0f       	add	r26, r19
   1ccb2:	b1 1d       	adc	r27, r1
   1ccb4:	2c 93       	st	X, r18
   1ccb6:	01 96       	adiw	r24, 0x01	; 1
   1ccb8:	f3 cf       	rjmp	.-26     	; 0x1cca0 <twi_transmit+0x20>
   1ccba:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1ccbe:	68 0f       	add	r22, r24
   1ccc0:	60 93 d3 18 	sts	0x18D3, r22	; 0x8018d3 <twi_txBufferLength>
   1ccc4:	80 e0       	ldi	r24, 0x00	; 0
   1ccc6:	08 95       	ret
   1ccc8:	81 e0       	ldi	r24, 0x01	; 1
   1ccca:	08 95       	ret
   1cccc:	82 e0       	ldi	r24, 0x02	; 2
   1ccce:	08 95       	ret

0001ccd0 <twi_attachSlaveRxEvent>:
   1ccd0:	90 93 18 19 	sts	0x1918, r25	; 0x801918 <twi_onSlaveReceive+0x1>
   1ccd4:	80 93 17 19 	sts	0x1917, r24	; 0x801917 <twi_onSlaveReceive>
   1ccd8:	08 95       	ret

0001ccda <twi_attachSlaveTxEvent>:
   1ccda:	90 93 1a 19 	sts	0x191A, r25	; 0x80191a <twi_onSlaveTransmit+0x1>
   1ccde:	80 93 19 19 	sts	0x1919, r24	; 0x801919 <twi_onSlaveTransmit>
   1cce2:	08 95       	ret

0001cce4 <twi_releaseBus>:
   1cce4:	85 ec       	ldi	r24, 0xC5	; 197
   1cce6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ccea:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1ccee:	08 95       	ret

0001ccf0 <twi_handleTimeout>:
   1ccf0:	cf 93       	push	r28
   1ccf2:	df 93       	push	r29
   1ccf4:	91 e0       	ldi	r25, 0x01	; 1
   1ccf6:	90 93 1c 19 	sts	0x191C, r25	; 0x80191c <twi_timed_out_flag>
   1ccfa:	88 23       	and	r24, r24
   1ccfc:	51 f0       	breq	.+20     	; 0x1cd12 <twi_handleTimeout+0x22>
   1ccfe:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1cd02:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1cd06:	af df       	rcall	.-162    	; 0x1cc66 <twi_disable>
   1cd08:	90 df       	rcall	.-224    	; 0x1cc2a <twi_init>
   1cd0a:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1cd0e:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1cd12:	df 91       	pop	r29
   1cd14:	cf 91       	pop	r28
   1cd16:	08 95       	ret

0001cd18 <twi_writeTo>:
   1cd18:	4f 92       	push	r4
   1cd1a:	5f 92       	push	r5
   1cd1c:	6f 92       	push	r6
   1cd1e:	7f 92       	push	r7
   1cd20:	8f 92       	push	r8
   1cd22:	9f 92       	push	r9
   1cd24:	af 92       	push	r10
   1cd26:	bf 92       	push	r11
   1cd28:	cf 92       	push	r12
   1cd2a:	df 92       	push	r13
   1cd2c:	ef 92       	push	r14
   1cd2e:	ff 92       	push	r15
   1cd30:	0f 93       	push	r16
   1cd32:	1f 93       	push	r17
   1cd34:	cf 93       	push	r28
   1cd36:	df 93       	push	r29
   1cd38:	41 32       	cpi	r20, 0x21	; 33
   1cd3a:	08 f0       	brcs	.+2      	; 0x1cd3e <twi_writeTo+0x26>
   1cd3c:	c5 c0       	rjmp	.+394    	; 0x1cec8 <twi_writeTo+0x1b0>
   1cd3e:	12 2f       	mov	r17, r18
   1cd40:	f4 2e       	mov	r15, r20
   1cd42:	d7 2e       	mov	r13, r23
   1cd44:	e6 2e       	mov	r14, r22
   1cd46:	d8 2f       	mov	r29, r24
   1cd48:	0e 94 ea d6 	call	0x1add4	; 0x1add4 <micros>
   1cd4c:	4b 01       	movw	r8, r22
   1cd4e:	5c 01       	movw	r10, r24
   1cd50:	c0 91 24 19 	lds	r28, 0x1924	; 0x801924 <twi_state>
   1cd54:	cc 23       	and	r28, r28
   1cd56:	11 f1       	breq	.+68     	; 0x1cd9c <twi_writeTo+0x84>
   1cd58:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1cd5c:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cd60:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cd64:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cd68:	89 2b       	or	r24, r25
   1cd6a:	8a 2b       	or	r24, r26
   1cd6c:	8b 2b       	or	r24, r27
   1cd6e:	81 f3       	breq	.-32     	; 0x1cd50 <twi_writeTo+0x38>
   1cd70:	0e 94 ea d6 	call	0x1add4	; 0x1add4 <micros>
   1cd74:	40 90 1d 19 	lds	r4, 0x191D	; 0x80191d <twi_timeout_us>
   1cd78:	50 90 1e 19 	lds	r5, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cd7c:	60 90 1f 19 	lds	r6, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cd80:	70 90 20 19 	lds	r7, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cd84:	dc 01       	movw	r26, r24
   1cd86:	cb 01       	movw	r24, r22
   1cd88:	88 19       	sub	r24, r8
   1cd8a:	99 09       	sbc	r25, r9
   1cd8c:	aa 09       	sbc	r26, r10
   1cd8e:	bb 09       	sbc	r27, r11
   1cd90:	48 16       	cp	r4, r24
   1cd92:	59 06       	cpc	r5, r25
   1cd94:	6a 06       	cpc	r6, r26
   1cd96:	7b 06       	cpc	r7, r27
   1cd98:	d8 f6       	brcc	.-74     	; 0x1cd50 <twi_writeTo+0x38>
   1cd9a:	83 c0       	rjmp	.+262    	; 0x1cea2 <twi_writeTo+0x18a>
   1cd9c:	82 e0       	ldi	r24, 0x02	; 2
   1cd9e:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
   1cda2:	00 93 22 19 	sts	0x1922, r16	; 0x801922 <twi_sendStop>
   1cda6:	8f ef       	ldi	r24, 0xFF	; 255
   1cda8:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
   1cdac:	10 92 f6 18 	sts	0x18F6, r1	; 0x8018f6 <twi_masterBufferIndex>
   1cdb0:	f0 92 f5 18 	sts	0x18F5, r15	; 0x8018f5 <twi_masterBufferLength>
   1cdb4:	9e 2d       	mov	r25, r14
   1cdb6:	a7 ef       	ldi	r26, 0xF7	; 247
   1cdb8:	b8 e1       	ldi	r27, 0x18	; 24
   1cdba:	ee 2d       	mov	r30, r14
   1cdbc:	fd 2d       	mov	r31, r13
   1cdbe:	8e 2f       	mov	r24, r30
   1cdc0:	89 1b       	sub	r24, r25
   1cdc2:	8f 15       	cp	r24, r15
   1cdc4:	18 f4       	brcc	.+6      	; 0x1cdcc <twi_writeTo+0xb4>
   1cdc6:	81 91       	ld	r24, Z+
   1cdc8:	8d 93       	st	X+, r24
   1cdca:	f9 cf       	rjmp	.-14     	; 0x1cdbe <twi_writeTo+0xa6>
   1cdcc:	10 92 23 19 	sts	0x1923, r1	; 0x801923 <twi_slarw>
   1cdd0:	90 91 23 19 	lds	r25, 0x1923	; 0x801923 <twi_slarw>
   1cdd4:	dd 0f       	add	r29, r29
   1cdd6:	d9 2b       	or	r29, r25
   1cdd8:	d0 93 23 19 	sts	0x1923, r29	; 0x801923 <twi_slarw>
   1cddc:	80 91 21 19 	lds	r24, 0x1921	; 0x801921 <twi_inRepStart>
   1cde0:	81 30       	cpi	r24, 0x01	; 1
   1cde2:	89 f5       	brne	.+98     	; 0x1ce46 <twi_writeTo+0x12e>
   1cde4:	10 92 21 19 	sts	0x1921, r1	; 0x801921 <twi_inRepStart>
   1cde8:	0e 94 ea d6 	call	0x1add4	; 0x1add4 <micros>
   1cdec:	6b 01       	movw	r12, r22
   1cdee:	7c 01       	movw	r14, r24
   1cdf0:	80 91 23 19 	lds	r24, 0x1923	; 0x801923 <twi_slarw>
   1cdf4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1cdf8:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1cdfc:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1ce00:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1ce04:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1ce08:	89 2b       	or	r24, r25
   1ce0a:	8a 2b       	or	r24, r26
   1ce0c:	8b 2b       	or	r24, r27
   1ce0e:	a9 f0       	breq	.+42     	; 0x1ce3a <twi_writeTo+0x122>
   1ce10:	0e 94 ea d6 	call	0x1add4	; 0x1add4 <micros>
   1ce14:	80 90 1d 19 	lds	r8, 0x191D	; 0x80191d <twi_timeout_us>
   1ce18:	90 90 1e 19 	lds	r9, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1ce1c:	a0 90 1f 19 	lds	r10, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1ce20:	b0 90 20 19 	lds	r11, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1ce24:	dc 01       	movw	r26, r24
   1ce26:	cb 01       	movw	r24, r22
   1ce28:	8c 19       	sub	r24, r12
   1ce2a:	9d 09       	sbc	r25, r13
   1ce2c:	ae 09       	sbc	r26, r14
   1ce2e:	bf 09       	sbc	r27, r15
   1ce30:	88 16       	cp	r8, r24
   1ce32:	99 06       	cpc	r9, r25
   1ce34:	aa 06       	cpc	r10, r26
   1ce36:	bb 06       	cpc	r11, r27
   1ce38:	a0 f1       	brcs	.+104    	; 0x1cea2 <twi_writeTo+0x18a>
   1ce3a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ce3e:	83 fd       	sbrc	r24, 3
   1ce40:	d7 cf       	rjmp	.-82     	; 0x1cdf0 <twi_writeTo+0xd8>
   1ce42:	85 ec       	ldi	r24, 0xC5	; 197
   1ce44:	01 c0       	rjmp	.+2      	; 0x1ce48 <twi_writeTo+0x130>
   1ce46:	85 ee       	ldi	r24, 0xE5	; 229
   1ce48:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ce4c:	0e 94 ea d6 	call	0x1add4	; 0x1add4 <micros>
   1ce50:	6b 01       	movw	r12, r22
   1ce52:	7c 01       	movw	r14, r24
   1ce54:	11 23       	and	r17, r17
   1ce56:	51 f1       	breq	.+84     	; 0x1ceac <twi_writeTo+0x194>
   1ce58:	80 91 24 19 	lds	r24, 0x1924	; 0x801924 <twi_state>
   1ce5c:	82 30       	cpi	r24, 0x02	; 2
   1ce5e:	31 f5       	brne	.+76     	; 0x1ceac <twi_writeTo+0x194>
   1ce60:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1ce64:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1ce68:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1ce6c:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1ce70:	89 2b       	or	r24, r25
   1ce72:	8a 2b       	or	r24, r26
   1ce74:	8b 2b       	or	r24, r27
   1ce76:	71 f3       	breq	.-36     	; 0x1ce54 <twi_writeTo+0x13c>
   1ce78:	0e 94 ea d6 	call	0x1add4	; 0x1add4 <micros>
   1ce7c:	80 90 1d 19 	lds	r8, 0x191D	; 0x80191d <twi_timeout_us>
   1ce80:	90 90 1e 19 	lds	r9, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1ce84:	a0 90 1f 19 	lds	r10, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1ce88:	b0 90 20 19 	lds	r11, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1ce8c:	dc 01       	movw	r26, r24
   1ce8e:	cb 01       	movw	r24, r22
   1ce90:	8c 19       	sub	r24, r12
   1ce92:	9d 09       	sbc	r25, r13
   1ce94:	ae 09       	sbc	r26, r14
   1ce96:	bf 09       	sbc	r27, r15
   1ce98:	88 16       	cp	r8, r24
   1ce9a:	99 06       	cpc	r9, r25
   1ce9c:	aa 06       	cpc	r10, r26
   1ce9e:	bb 06       	cpc	r11, r27
   1cea0:	c8 f6       	brcc	.-78     	; 0x1ce54 <twi_writeTo+0x13c>
   1cea2:	80 91 1b 19 	lds	r24, 0x191B	; 0x80191b <twi_do_reset_on_timeout>
   1cea6:	24 df       	rcall	.-440    	; 0x1ccf0 <twi_handleTimeout>
   1cea8:	c5 e0       	ldi	r28, 0x05	; 5
   1ceaa:	13 c0       	rjmp	.+38     	; 0x1ced2 <twi_writeTo+0x1ba>
   1ceac:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1ceb0:	8f 3f       	cpi	r24, 0xFF	; 255
   1ceb2:	79 f0       	breq	.+30     	; 0x1ced2 <twi_writeTo+0x1ba>
   1ceb4:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1ceb8:	80 32       	cpi	r24, 0x20	; 32
   1ceba:	41 f0       	breq	.+16     	; 0x1cecc <twi_writeTo+0x1b4>
   1cebc:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1cec0:	80 33       	cpi	r24, 0x30	; 48
   1cec2:	31 f0       	breq	.+12     	; 0x1ced0 <twi_writeTo+0x1b8>
   1cec4:	c4 e0       	ldi	r28, 0x04	; 4
   1cec6:	05 c0       	rjmp	.+10     	; 0x1ced2 <twi_writeTo+0x1ba>
   1cec8:	c1 e0       	ldi	r28, 0x01	; 1
   1ceca:	03 c0       	rjmp	.+6      	; 0x1ced2 <twi_writeTo+0x1ba>
   1cecc:	c2 e0       	ldi	r28, 0x02	; 2
   1cece:	01 c0       	rjmp	.+2      	; 0x1ced2 <twi_writeTo+0x1ba>
   1ced0:	c3 e0       	ldi	r28, 0x03	; 3
   1ced2:	8c 2f       	mov	r24, r28
   1ced4:	df 91       	pop	r29
   1ced6:	cf 91       	pop	r28
   1ced8:	1f 91       	pop	r17
   1ceda:	0f 91       	pop	r16
   1cedc:	ff 90       	pop	r15
   1cede:	ef 90       	pop	r14
   1cee0:	df 90       	pop	r13
   1cee2:	cf 90       	pop	r12
   1cee4:	bf 90       	pop	r11
   1cee6:	af 90       	pop	r10
   1cee8:	9f 90       	pop	r9
   1ceea:	8f 90       	pop	r8
   1ceec:	7f 90       	pop	r7
   1ceee:	6f 90       	pop	r6
   1cef0:	5f 90       	pop	r5
   1cef2:	4f 90       	pop	r4
   1cef4:	08 95       	ret

0001cef6 <twi_stop>:
   1cef6:	85 ed       	ldi	r24, 0xD5	; 213
   1cef8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cefc:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1cf00:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cf04:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cf08:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cf0c:	07 96       	adiw	r24, 0x07	; 7
   1cf0e:	a1 1d       	adc	r26, r1
   1cf10:	b1 1d       	adc	r27, r1
   1cf12:	23 e0       	ldi	r18, 0x03	; 3
   1cf14:	b6 95       	lsr	r27
   1cf16:	a7 95       	ror	r26
   1cf18:	97 95       	ror	r25
   1cf1a:	87 95       	ror	r24
   1cf1c:	2a 95       	dec	r18
   1cf1e:	d1 f7       	brne	.-12     	; 0x1cf14 <twi_stop+0x1e>
   1cf20:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cf24:	24 ff       	sbrs	r18, 4
   1cf26:	1b c0       	rjmp	.+54     	; 0x1cf5e <twi_stop+0x68>
   1cf28:	40 91 1d 19 	lds	r20, 0x191D	; 0x80191d <twi_timeout_us>
   1cf2c:	50 91 1e 19 	lds	r21, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cf30:	60 91 1f 19 	lds	r22, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cf34:	70 91 20 19 	lds	r23, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cf38:	45 2b       	or	r20, r21
   1cf3a:	46 2b       	or	r20, r22
   1cf3c:	47 2b       	or	r20, r23
   1cf3e:	81 f3       	breq	.-32     	; 0x1cf20 <twi_stop+0x2a>
   1cf40:	00 97       	sbiw	r24, 0x00	; 0
   1cf42:	a1 05       	cpc	r26, r1
   1cf44:	b1 05       	cpc	r27, r1
   1cf46:	41 f0       	breq	.+16     	; 0x1cf58 <twi_stop+0x62>
   1cf48:	25 e3       	ldi	r18, 0x35	; 53
   1cf4a:	2a 95       	dec	r18
   1cf4c:	f1 f7       	brne	.-4      	; 0x1cf4a <twi_stop+0x54>
   1cf4e:	00 00       	nop
   1cf50:	01 97       	sbiw	r24, 0x01	; 1
   1cf52:	a1 09       	sbc	r26, r1
   1cf54:	b1 09       	sbc	r27, r1
   1cf56:	e4 cf       	rjmp	.-56     	; 0x1cf20 <twi_stop+0x2a>
   1cf58:	80 91 1b 19 	lds	r24, 0x191B	; 0x80191b <twi_do_reset_on_timeout>
   1cf5c:	c9 ce       	rjmp	.-622    	; 0x1ccf0 <twi_handleTimeout>
   1cf5e:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1cf62:	08 95       	ret

0001cf64 <__vector_39>:

ISR(TWI_vect)
{
   1cf64:	1f 92       	push	r1
   1cf66:	0f 92       	push	r0
   1cf68:	0f b6       	in	r0, 0x3f	; 63
   1cf6a:	0f 92       	push	r0
   1cf6c:	11 24       	eor	r1, r1
   1cf6e:	0b b6       	in	r0, 0x3b	; 59
   1cf70:	0f 92       	push	r0
   1cf72:	2f 93       	push	r18
   1cf74:	3f 93       	push	r19
   1cf76:	4f 93       	push	r20
   1cf78:	5f 93       	push	r21
   1cf7a:	6f 93       	push	r22
   1cf7c:	7f 93       	push	r23
   1cf7e:	8f 93       	push	r24
   1cf80:	9f 93       	push	r25
   1cf82:	af 93       	push	r26
   1cf84:	bf 93       	push	r27
   1cf86:	ef 93       	push	r30
   1cf88:	ff 93       	push	r31
  switch(TW_STATUS){
   1cf8a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
   1cf8e:	88 7f       	andi	r24, 0xF8	; 248
   1cf90:	80 36       	cpi	r24, 0x60	; 96
   1cf92:	09 f4       	brne	.+2      	; 0x1cf96 <__vector_39+0x32>
   1cf94:	9d c0       	rjmp	.+314    	; 0x1d0d0 <__vector_39+0x16c>
   1cf96:	70 f5       	brcc	.+92     	; 0x1cff4 <__vector_39+0x90>
   1cf98:	88 32       	cpi	r24, 0x28	; 40
   1cf9a:	09 f4       	brne	.+2      	; 0x1cf9e <__vector_39+0x3a>
   1cf9c:	5c c0       	rjmp	.+184    	; 0x1d056 <__vector_39+0xf2>
   1cf9e:	90 f4       	brcc	.+36     	; 0x1cfc4 <__vector_39+0x60>
   1cfa0:	80 31       	cpi	r24, 0x10	; 16
   1cfa2:	09 f4       	brne	.+2      	; 0x1cfa6 <__vector_39+0x42>
   1cfa4:	55 c0       	rjmp	.+170    	; 0x1d050 <__vector_39+0xec>
   1cfa6:	38 f4       	brcc	.+14     	; 0x1cfb6 <__vector_39+0x52>
   1cfa8:	88 23       	and	r24, r24
   1cfaa:	09 f4       	brne	.+2      	; 0x1cfae <__vector_39+0x4a>
   1cfac:	f3 c0       	rjmp	.+486    	; 0x1d194 <__vector_39+0x230>
   1cfae:	88 30       	cpi	r24, 0x08	; 8
   1cfb0:	09 f4       	brne	.+2      	; 0x1cfb4 <__vector_39+0x50>
   1cfb2:	4e c0       	rjmp	.+156    	; 0x1d050 <__vector_39+0xec>
   1cfb4:	f2 c0       	rjmp	.+484    	; 0x1d19a <__vector_39+0x236>
   1cfb6:	88 31       	cpi	r24, 0x18	; 24
   1cfb8:	09 f4       	brne	.+2      	; 0x1cfbc <__vector_39+0x58>
   1cfba:	4d c0       	rjmp	.+154    	; 0x1d056 <__vector_39+0xf2>
   1cfbc:	80 32       	cpi	r24, 0x20	; 32
   1cfbe:	09 f4       	brne	.+2      	; 0x1cfc2 <__vector_39+0x5e>
   1cfc0:	5e c0       	rjmp	.+188    	; 0x1d07e <__vector_39+0x11a>
   1cfc2:	eb c0       	rjmp	.+470    	; 0x1d19a <__vector_39+0x236>
   1cfc4:	80 34       	cpi	r24, 0x40	; 64
   1cfc6:	09 f4       	brne	.+2      	; 0x1cfca <__vector_39+0x66>
   1cfc8:	69 c0       	rjmp	.+210    	; 0x1d09c <__vector_39+0x138>
   1cfca:	50 f4       	brcc	.+20     	; 0x1cfe0 <__vector_39+0x7c>
   1cfcc:	80 33       	cpi	r24, 0x30	; 48
   1cfce:	09 f4       	brne	.+2      	; 0x1cfd2 <__vector_39+0x6e>
   1cfd0:	56 c0       	rjmp	.+172    	; 0x1d07e <__vector_39+0x11a>
   1cfd2:	88 33       	cpi	r24, 0x38	; 56
   1cfd4:	09 f0       	breq	.+2      	; 0x1cfd8 <__vector_39+0x74>
   1cfd6:	e1 c0       	rjmp	.+450    	; 0x1d19a <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
   1cfd8:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
      twi_releaseBus();
   1cfdc:	83 de       	rcall	.-762    	; 0x1cce4 <twi_releaseBus>
      break;
   1cfde:	dd c0       	rjmp	.+442    	; 0x1d19a <__vector_39+0x236>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
   1cfe0:	80 35       	cpi	r24, 0x50	; 80
   1cfe2:	09 f4       	brne	.+2      	; 0x1cfe6 <__vector_39+0x82>
   1cfe4:	4f c0       	rjmp	.+158    	; 0x1d084 <__vector_39+0x120>
   1cfe6:	88 35       	cpi	r24, 0x58	; 88
   1cfe8:	09 f4       	brne	.+2      	; 0x1cfec <__vector_39+0x88>
   1cfea:	5d c0       	rjmp	.+186    	; 0x1d0a6 <__vector_39+0x142>
   1cfec:	88 34       	cpi	r24, 0x48	; 72
   1cfee:	09 f0       	breq	.+2      	; 0x1cff2 <__vector_39+0x8e>
   1cff0:	d4 c0       	rjmp	.+424    	; 0x1d19a <__vector_39+0x236>
   1cff2:	d2 c0       	rjmp	.+420    	; 0x1d198 <__vector_39+0x234>
   1cff4:	88 39       	cpi	r24, 0x98	; 152
   1cff6:	09 f4       	brne	.+2      	; 0x1cffa <__vector_39+0x96>
   1cff8:	c3 c0       	rjmp	.+390    	; 0x1d180 <__vector_39+0x21c>
   1cffa:	a8 f4       	brcc	.+42     	; 0x1d026 <__vector_39+0xc2>
   1cffc:	88 37       	cpi	r24, 0x78	; 120
   1cffe:	09 f4       	brne	.+2      	; 0x1d002 <__vector_39+0x9e>
   1d000:	67 c0       	rjmp	.+206    	; 0x1d0d0 <__vector_39+0x16c>
   1d002:	38 f4       	brcc	.+14     	; 0x1d012 <__vector_39+0xae>
   1d004:	88 36       	cpi	r24, 0x68	; 104
   1d006:	09 f4       	brne	.+2      	; 0x1d00a <__vector_39+0xa6>
   1d008:	63 c0       	rjmp	.+198    	; 0x1d0d0 <__vector_39+0x16c>
   1d00a:	80 37       	cpi	r24, 0x70	; 112
   1d00c:	09 f4       	brne	.+2      	; 0x1d010 <__vector_39+0xac>
   1d00e:	60 c0       	rjmp	.+192    	; 0x1d0d0 <__vector_39+0x16c>
   1d010:	c4 c0       	rjmp	.+392    	; 0x1d19a <__vector_39+0x236>
   1d012:	88 38       	cpi	r24, 0x88	; 136
   1d014:	09 f4       	brne	.+2      	; 0x1d018 <__vector_39+0xb4>
   1d016:	b4 c0       	rjmp	.+360    	; 0x1d180 <__vector_39+0x21c>
   1d018:	80 39       	cpi	r24, 0x90	; 144
   1d01a:	09 f4       	brne	.+2      	; 0x1d01e <__vector_39+0xba>
   1d01c:	5f c0       	rjmp	.+190    	; 0x1d0dc <__vector_39+0x178>
   1d01e:	80 38       	cpi	r24, 0x80	; 128
   1d020:	09 f0       	breq	.+2      	; 0x1d024 <__vector_39+0xc0>
   1d022:	bb c0       	rjmp	.+374    	; 0x1d19a <__vector_39+0x236>
   1d024:	5b c0       	rjmp	.+182    	; 0x1d0dc <__vector_39+0x178>
   1d026:	80 3b       	cpi	r24, 0xB0	; 176
   1d028:	09 f4       	brne	.+2      	; 0x1d02c <__vector_39+0xc8>
   1d02a:	82 c0       	rjmp	.+260    	; 0x1d130 <__vector_39+0x1cc>
   1d02c:	38 f4       	brcc	.+14     	; 0x1d03c <__vector_39+0xd8>
   1d02e:	80 3a       	cpi	r24, 0xA0	; 160
   1d030:	09 f4       	brne	.+2      	; 0x1d034 <__vector_39+0xd0>
   1d032:	66 c0       	rjmp	.+204    	; 0x1d100 <__vector_39+0x19c>
   1d034:	88 3a       	cpi	r24, 0xA8	; 168
   1d036:	09 f4       	brne	.+2      	; 0x1d03a <__vector_39+0xd6>
   1d038:	7b c0       	rjmp	.+246    	; 0x1d130 <__vector_39+0x1cc>
   1d03a:	af c0       	rjmp	.+350    	; 0x1d19a <__vector_39+0x236>
   1d03c:	80 3c       	cpi	r24, 0xC0	; 192
   1d03e:	09 f4       	brne	.+2      	; 0x1d042 <__vector_39+0xde>
   1d040:	a3 c0       	rjmp	.+326    	; 0x1d188 <__vector_39+0x224>
   1d042:	88 3c       	cpi	r24, 0xC8	; 200
   1d044:	09 f4       	brne	.+2      	; 0x1d048 <__vector_39+0xe4>
   1d046:	a0 c0       	rjmp	.+320    	; 0x1d188 <__vector_39+0x224>
   1d048:	88 3b       	cpi	r24, 0xB8	; 184
   1d04a:	09 f4       	brne	.+2      	; 0x1d04e <__vector_39+0xea>
   1d04c:	86 c0       	rjmp	.+268    	; 0x1d15a <__vector_39+0x1f6>
   1d04e:	a5 c0       	rjmp	.+330    	; 0x1d19a <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
   1d050:	80 91 23 19 	lds	r24, 0x1923	; 0x801923 <twi_slarw>
   1d054:	10 c0       	rjmp	.+32     	; 0x1d076 <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1d056:	90 91 f6 18 	lds	r25, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d05a:	80 91 f5 18 	lds	r24, 0x18F5	; 0x8018f5 <twi_masterBufferLength>
   1d05e:	98 17       	cp	r25, r24
   1d060:	70 f5       	brcc	.+92     	; 0x1d0be <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
   1d062:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d066:	81 e0       	ldi	r24, 0x01	; 1
   1d068:	8e 0f       	add	r24, r30
   1d06a:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d06e:	f0 e0       	ldi	r31, 0x00	; 0
   1d070:	e9 50       	subi	r30, 0x09	; 9
   1d072:	f7 4e       	sbci	r31, 0xE7	; 231
   1d074:	80 81       	ld	r24, Z
   1d076:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1d07a:	85 ec       	ldi	r24, 0xC5	; 197
   1d07c:	82 c0       	rjmp	.+260    	; 0x1d182 <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
   1d07e:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
   1d082:	8a c0       	rjmp	.+276    	; 0x1d198 <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1d084:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d088:	81 e0       	ldi	r24, 0x01	; 1
   1d08a:	8e 0f       	add	r24, r30
   1d08c:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d090:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d094:	f0 e0       	ldi	r31, 0x00	; 0
   1d096:	e9 50       	subi	r30, 0x09	; 9
   1d098:	f7 4e       	sbci	r31, 0xE7	; 231
   1d09a:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1d09c:	90 91 f6 18 	lds	r25, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d0a0:	80 91 f5 18 	lds	r24, 0x18F5	; 0x8018f5 <twi_masterBufferLength>
   1d0a4:	6a c0       	rjmp	.+212    	; 0x1d17a <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1d0a6:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d0aa:	81 e0       	ldi	r24, 0x01	; 1
   1d0ac:	8e 0f       	add	r24, r30
   1d0ae:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d0b2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d0b6:	f0 e0       	ldi	r31, 0x00	; 0
   1d0b8:	e9 50       	subi	r30, 0x09	; 9
   1d0ba:	f7 4e       	sbci	r31, 0xE7	; 231
   1d0bc:	80 83       	st	Z, r24
      if (twi_sendStop){
   1d0be:	80 91 22 19 	lds	r24, 0x1922	; 0x801922 <twi_sendStop>
   1d0c2:	81 11       	cpse	r24, r1
   1d0c4:	69 c0       	rjmp	.+210    	; 0x1d198 <__vector_39+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
   1d0c6:	81 e0       	ldi	r24, 0x01	; 1
   1d0c8:	80 93 21 19 	sts	0x1921, r24	; 0x801921 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
   1d0cc:	84 ea       	ldi	r24, 0xA4	; 164
   1d0ce:	5d c0       	rjmp	.+186    	; 0x1d18a <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
   1d0d0:	83 e0       	ldi	r24, 0x03	; 3
   1d0d2:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
   1d0d6:	10 92 b2 18 	sts	0x18B2, r1	; 0x8018b2 <twi_rxBufferIndex>
   1d0da:	cf cf       	rjmp	.-98     	; 0x1d07a <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1d0dc:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d0e0:	80 32       	cpi	r24, 0x20	; 32
   1d0e2:	08 f0       	brcs	.+2      	; 0x1d0e6 <__vector_39+0x182>
   1d0e4:	4d c0       	rjmp	.+154    	; 0x1d180 <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
   1d0e6:	e0 91 b2 18 	lds	r30, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d0ea:	81 e0       	ldi	r24, 0x01	; 1
   1d0ec:	8e 0f       	add	r24, r30
   1d0ee:	80 93 b2 18 	sts	0x18B2, r24	; 0x8018b2 <twi_rxBufferIndex>
   1d0f2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d0f6:	f0 e0       	ldi	r31, 0x00	; 0
   1d0f8:	ed 54       	subi	r30, 0x4D	; 77
   1d0fa:	f7 4e       	sbci	r31, 0xE7	; 231
   1d0fc:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
   1d0fe:	bd cf       	rjmp	.-134    	; 0x1d07a <__vector_39+0x116>
   1d100:	f1 dd       	rcall	.-1054   	; 0x1cce4 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1d102:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d106:	80 32       	cpi	r24, 0x20	; 32
   1d108:	30 f4       	brcc	.+12     	; 0x1d116 <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
   1d10a:	e0 91 b2 18 	lds	r30, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d10e:	f0 e0       	ldi	r31, 0x00	; 0
   1d110:	ed 54       	subi	r30, 0x4D	; 77
   1d112:	f7 4e       	sbci	r31, 0xE7	; 231
   1d114:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
   1d116:	60 91 b2 18 	lds	r22, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d11a:	70 e0       	ldi	r23, 0x00	; 0
   1d11c:	e0 91 17 19 	lds	r30, 0x1917	; 0x801917 <twi_onSlaveReceive>
   1d120:	f0 91 18 19 	lds	r31, 0x1918	; 0x801918 <twi_onSlaveReceive+0x1>
   1d124:	83 eb       	ldi	r24, 0xB3	; 179
   1d126:	98 e1       	ldi	r25, 0x18	; 24
   1d128:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
   1d12a:	10 92 b2 18 	sts	0x18B2, r1	; 0x8018b2 <twi_rxBufferIndex>
      break;
   1d12e:	35 c0       	rjmp	.+106    	; 0x1d19a <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
   1d130:	84 e0       	ldi	r24, 0x04	; 4
   1d132:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
   1d136:	10 92 d4 18 	sts	0x18D4, r1	; 0x8018d4 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
   1d13a:	10 92 d3 18 	sts	0x18D3, r1	; 0x8018d3 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
   1d13e:	e0 91 19 19 	lds	r30, 0x1919	; 0x801919 <twi_onSlaveTransmit>
   1d142:	f0 91 1a 19 	lds	r31, 0x191A	; 0x80191a <twi_onSlaveTransmit+0x1>
   1d146:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
   1d148:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1d14c:	81 11       	cpse	r24, r1
   1d14e:	05 c0       	rjmp	.+10     	; 0x1d15a <__vector_39+0x1f6>
        twi_txBufferLength = 1;
   1d150:	81 e0       	ldi	r24, 0x01	; 1
   1d152:	80 93 d3 18 	sts	0x18D3, r24	; 0x8018d3 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
   1d156:	10 92 d5 18 	sts	0x18D5, r1	; 0x8018d5 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
   1d15a:	e0 91 d4 18 	lds	r30, 0x18D4	; 0x8018d4 <twi_txBufferIndex>
   1d15e:	81 e0       	ldi	r24, 0x01	; 1
   1d160:	8e 0f       	add	r24, r30
   1d162:	80 93 d4 18 	sts	0x18D4, r24	; 0x8018d4 <twi_txBufferIndex>
   1d166:	f0 e0       	ldi	r31, 0x00	; 0
   1d168:	eb 52       	subi	r30, 0x2B	; 43
   1d16a:	f7 4e       	sbci	r31, 0xE7	; 231
   1d16c:	80 81       	ld	r24, Z
   1d16e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
   1d172:	90 91 d4 18 	lds	r25, 0x18D4	; 0x8018d4 <twi_txBufferIndex>
   1d176:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1d17a:	98 17       	cp	r25, r24
   1d17c:	08 f4       	brcc	.+2      	; 0x1d180 <__vector_39+0x21c>
   1d17e:	7d cf       	rjmp	.-262    	; 0x1d07a <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
   1d180:	85 e8       	ldi	r24, 0x85	; 133
   1d182:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1d186:	09 c0       	rjmp	.+18     	; 0x1d19a <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1d188:	85 ec       	ldi	r24, 0xC5	; 197
   1d18a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
   1d18e:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
      break;
   1d192:	03 c0       	rjmp	.+6      	; 0x1d19a <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
   1d194:	10 92 b1 18 	sts	0x18B1, r1	; 0x8018b1 <twi_error>
      twi_stop();
   1d198:	ae de       	rcall	.-676    	; 0x1cef6 <twi_stop>
      break;
  }
}
   1d19a:	ff 91       	pop	r31
   1d19c:	ef 91       	pop	r30
   1d19e:	bf 91       	pop	r27
   1d1a0:	af 91       	pop	r26
   1d1a2:	9f 91       	pop	r25
   1d1a4:	8f 91       	pop	r24
   1d1a6:	7f 91       	pop	r23
   1d1a8:	6f 91       	pop	r22
   1d1aa:	5f 91       	pop	r21
   1d1ac:	4f 91       	pop	r20
   1d1ae:	3f 91       	pop	r19
   1d1b0:	2f 91       	pop	r18
   1d1b2:	0f 90       	pop	r0
   1d1b4:	0b be       	out	0x3b, r0	; 59
   1d1b6:	0f 90       	pop	r0
   1d1b8:	0f be       	out	0x3f, r0	; 63
   1d1ba:	0f 90       	pop	r0
   1d1bc:	1f 90       	pop	r1
   1d1be:	18 95       	reti

0001d1c0 <pow>:
   1d1c0:	fa 01       	movw	r30, r20
   1d1c2:	ee 0f       	add	r30, r30
   1d1c4:	ff 1f       	adc	r31, r31
   1d1c6:	30 96       	adiw	r30, 0x00	; 0
   1d1c8:	21 05       	cpc	r18, r1
   1d1ca:	31 05       	cpc	r19, r1
   1d1cc:	a1 f1       	breq	.+104    	; 0x1d236 <pow+0x76>
   1d1ce:	61 15       	cp	r22, r1
   1d1d0:	71 05       	cpc	r23, r1
   1d1d2:	61 f4       	brne	.+24     	; 0x1d1ec <pow+0x2c>
   1d1d4:	80 38       	cpi	r24, 0x80	; 128
   1d1d6:	bf e3       	ldi	r27, 0x3F	; 63
   1d1d8:	9b 07       	cpc	r25, r27
   1d1da:	49 f1       	breq	.+82     	; 0x1d22e <pow+0x6e>
   1d1dc:	68 94       	set
   1d1de:	90 38       	cpi	r25, 0x80	; 128
   1d1e0:	81 05       	cpc	r24, r1
   1d1e2:	61 f0       	breq	.+24     	; 0x1d1fc <pow+0x3c>
   1d1e4:	80 38       	cpi	r24, 0x80	; 128
   1d1e6:	bf ef       	ldi	r27, 0xFF	; 255
   1d1e8:	9b 07       	cpc	r25, r27
   1d1ea:	41 f0       	breq	.+16     	; 0x1d1fc <pow+0x3c>
   1d1ec:	99 23       	and	r25, r25
   1d1ee:	4a f5       	brpl	.+82     	; 0x1d242 <pow+0x82>
   1d1f0:	ff 3f       	cpi	r31, 0xFF	; 255
   1d1f2:	e1 05       	cpc	r30, r1
   1d1f4:	31 05       	cpc	r19, r1
   1d1f6:	21 05       	cpc	r18, r1
   1d1f8:	19 f1       	breq	.+70     	; 0x1d240 <pow+0x80>
   1d1fa:	e8 94       	clt
   1d1fc:	08 94       	sec
   1d1fe:	e7 95       	ror	r30
   1d200:	d9 01       	movw	r26, r18
   1d202:	aa 23       	and	r26, r26
   1d204:	29 f4       	brne	.+10     	; 0x1d210 <pow+0x50>
   1d206:	ab 2f       	mov	r26, r27
   1d208:	be 2f       	mov	r27, r30
   1d20a:	f8 5f       	subi	r31, 0xF8	; 248
   1d20c:	d0 f3       	brcs	.-12     	; 0x1d202 <pow+0x42>
   1d20e:	10 c0       	rjmp	.+32     	; 0x1d230 <pow+0x70>
   1d210:	ff 5f       	subi	r31, 0xFF	; 255
   1d212:	70 f4       	brcc	.+28     	; 0x1d230 <pow+0x70>
   1d214:	a6 95       	lsr	r26
   1d216:	e0 f7       	brcc	.-8      	; 0x1d210 <pow+0x50>
   1d218:	f7 39       	cpi	r31, 0x97	; 151
   1d21a:	50 f0       	brcs	.+20     	; 0x1d230 <pow+0x70>
   1d21c:	19 f0       	breq	.+6      	; 0x1d224 <pow+0x64>
   1d21e:	ff 3a       	cpi	r31, 0xAF	; 175
   1d220:	38 f4       	brcc	.+14     	; 0x1d230 <pow+0x70>
   1d222:	9f 77       	andi	r25, 0x7F	; 127
   1d224:	9f 93       	push	r25
   1d226:	0d d0       	rcall	.+26     	; 0x1d242 <pow+0x82>
   1d228:	0f 90       	pop	r0
   1d22a:	07 fc       	sbrc	r0, 7
   1d22c:	90 58       	subi	r25, 0x80	; 128
   1d22e:	08 95       	ret
   1d230:	46 f0       	brts	.+16     	; 0x1d242 <pow+0x82>
   1d232:	0c 94 b2 d1 	jmp	0x1a364	; 0x1a364 <__fp_nan>
   1d236:	60 e0       	ldi	r22, 0x00	; 0
   1d238:	70 e0       	ldi	r23, 0x00	; 0
   1d23a:	80 e8       	ldi	r24, 0x80	; 128
   1d23c:	9f e3       	ldi	r25, 0x3F	; 63
   1d23e:	08 95       	ret
   1d240:	4f e7       	ldi	r20, 0x7F	; 127
   1d242:	9f 77       	andi	r25, 0x7F	; 127
   1d244:	5f 93       	push	r21
   1d246:	4f 93       	push	r20
   1d248:	3f 93       	push	r19
   1d24a:	2f 93       	push	r18
   1d24c:	0a d1       	rcall	.+532    	; 0x1d462 <log>
   1d24e:	2f 91       	pop	r18
   1d250:	3f 91       	pop	r19
   1d252:	4f 91       	pop	r20
   1d254:	5f 91       	pop	r21
   1d256:	0e 94 01 d2 	call	0x1a402	; 0x1a402 <__mulsf3>
   1d25a:	51 c0       	rjmp	.+162    	; 0x1d2fe <exp>
   1d25c:	19 f4       	brne	.+6      	; 0x1d264 <pow+0xa4>
   1d25e:	16 f4       	brtc	.+4      	; 0x1d264 <pow+0xa4>
   1d260:	0c 94 b2 d1 	jmp	0x1a364	; 0x1a364 <__fp_nan>
   1d264:	7a c0       	rjmp	.+244    	; 0x1d35a <__fp_mpack>

0001d266 <sqrt>:
   1d266:	0e 94 dc d1 	call	0x1a3b8	; 0x1a3b8 <__fp_splitA>
   1d26a:	c0 f3       	brcs	.-16     	; 0x1d25c <pow+0x9c>
   1d26c:	99 23       	and	r25, r25
   1d26e:	d1 f3       	breq	.-12     	; 0x1d264 <pow+0xa4>
   1d270:	be f3       	brts	.-18     	; 0x1d260 <pow+0xa0>
   1d272:	9f 57       	subi	r25, 0x7F	; 127
   1d274:	55 0b       	sbc	r21, r21
   1d276:	87 ff       	sbrs	r24, 7
   1d278:	7e d0       	rcall	.+252    	; 0x1d376 <__fp_norm2>
   1d27a:	00 24       	eor	r0, r0
   1d27c:	a0 e6       	ldi	r26, 0x60	; 96
   1d27e:	40 ea       	ldi	r20, 0xA0	; 160
   1d280:	90 01       	movw	r18, r0
   1d282:	80 58       	subi	r24, 0x80	; 128
   1d284:	56 95       	lsr	r21
   1d286:	97 95       	ror	r25
   1d288:	28 f4       	brcc	.+10     	; 0x1d294 <sqrt+0x2e>
   1d28a:	80 5c       	subi	r24, 0xC0	; 192
   1d28c:	66 0f       	add	r22, r22
   1d28e:	77 1f       	adc	r23, r23
   1d290:	88 1f       	adc	r24, r24
   1d292:	20 f0       	brcs	.+8      	; 0x1d29c <sqrt+0x36>
   1d294:	26 17       	cp	r18, r22
   1d296:	37 07       	cpc	r19, r23
   1d298:	48 07       	cpc	r20, r24
   1d29a:	30 f4       	brcc	.+12     	; 0x1d2a8 <sqrt+0x42>
   1d29c:	62 1b       	sub	r22, r18
   1d29e:	73 0b       	sbc	r23, r19
   1d2a0:	84 0b       	sbc	r24, r20
   1d2a2:	20 29       	or	r18, r0
   1d2a4:	31 29       	or	r19, r1
   1d2a6:	4a 2b       	or	r20, r26
   1d2a8:	a6 95       	lsr	r26
   1d2aa:	17 94       	ror	r1
   1d2ac:	07 94       	ror	r0
   1d2ae:	20 25       	eor	r18, r0
   1d2b0:	31 25       	eor	r19, r1
   1d2b2:	4a 27       	eor	r20, r26
   1d2b4:	58 f7       	brcc	.-42     	; 0x1d28c <sqrt+0x26>
   1d2b6:	66 0f       	add	r22, r22
   1d2b8:	77 1f       	adc	r23, r23
   1d2ba:	88 1f       	adc	r24, r24
   1d2bc:	20 f0       	brcs	.+8      	; 0x1d2c6 <sqrt+0x60>
   1d2be:	26 17       	cp	r18, r22
   1d2c0:	37 07       	cpc	r19, r23
   1d2c2:	48 07       	cpc	r20, r24
   1d2c4:	30 f4       	brcc	.+12     	; 0x1d2d2 <sqrt+0x6c>
   1d2c6:	62 0b       	sbc	r22, r18
   1d2c8:	73 0b       	sbc	r23, r19
   1d2ca:	84 0b       	sbc	r24, r20
   1d2cc:	20 0d       	add	r18, r0
   1d2ce:	31 1d       	adc	r19, r1
   1d2d0:	41 1d       	adc	r20, r1
   1d2d2:	a0 95       	com	r26
   1d2d4:	81 f7       	brne	.-32     	; 0x1d2b6 <sqrt+0x50>
   1d2d6:	b9 01       	movw	r22, r18
   1d2d8:	84 2f       	mov	r24, r20
   1d2da:	91 58       	subi	r25, 0x81	; 129
   1d2dc:	88 0f       	add	r24, r24
   1d2de:	96 95       	lsr	r25
   1d2e0:	87 95       	ror	r24
   1d2e2:	08 95       	ret

0001d2e4 <__unordsf2>:
   1d2e4:	0e 94 88 d1 	call	0x1a310	; 0x1a310 <__fp_cmp>
   1d2e8:	88 0b       	sbc	r24, r24
   1d2ea:	99 0b       	sbc	r25, r25
   1d2ec:	08 95       	ret
   1d2ee:	29 f4       	brne	.+10     	; 0x1d2fa <__unordsf2+0x16>
   1d2f0:	16 f0       	brts	.+4      	; 0x1d2f6 <__unordsf2+0x12>
   1d2f2:	0c 94 ac d1 	jmp	0x1a358	; 0x1a358 <__fp_inf>
   1d2f6:	0c 94 f6 d1 	jmp	0x1a3ec	; 0x1a3ec <__fp_zero>
   1d2fa:	0c 94 b2 d1 	jmp	0x1a364	; 0x1a364 <__fp_nan>

0001d2fe <exp>:
   1d2fe:	0e 94 dc d1 	call	0x1a3b8	; 0x1a3b8 <__fp_splitA>
   1d302:	a8 f3       	brcs	.-22     	; 0x1d2ee <__unordsf2+0xa>
   1d304:	96 38       	cpi	r25, 0x86	; 134
   1d306:	a0 f7       	brcc	.-24     	; 0x1d2f0 <__unordsf2+0xc>
   1d308:	07 f8       	bld	r0, 7
   1d30a:	0f 92       	push	r0
   1d30c:	e8 94       	clt
   1d30e:	2b e3       	ldi	r18, 0x3B	; 59
   1d310:	3a ea       	ldi	r19, 0xAA	; 170
   1d312:	48 eb       	ldi	r20, 0xB8	; 184
   1d314:	5f e7       	ldi	r21, 0x7F	; 127
   1d316:	0e 94 0f d2 	call	0x1a41e	; 0x1a41e <__mulsf3_pse>
   1d31a:	0f 92       	push	r0
   1d31c:	0f 92       	push	r0
   1d31e:	0f 92       	push	r0
   1d320:	4d b7       	in	r20, 0x3d	; 61
   1d322:	5e b7       	in	r21, 0x3e	; 62
   1d324:	0f 92       	push	r0
   1d326:	e4 d0       	rcall	.+456    	; 0x1d4f0 <modf>
   1d328:	e0 e3       	ldi	r30, 0x30	; 48
   1d32a:	f2 e0       	ldi	r31, 0x02	; 2
   1d32c:	2b d0       	rcall	.+86     	; 0x1d384 <__fp_powser>
   1d32e:	4f 91       	pop	r20
   1d330:	5f 91       	pop	r21
   1d332:	ef 91       	pop	r30
   1d334:	ff 91       	pop	r31
   1d336:	e5 95       	asr	r30
   1d338:	ee 1f       	adc	r30, r30
   1d33a:	ff 1f       	adc	r31, r31
   1d33c:	49 f0       	breq	.+18     	; 0x1d350 <exp+0x52>
   1d33e:	fe 57       	subi	r31, 0x7E	; 126
   1d340:	e0 68       	ori	r30, 0x80	; 128
   1d342:	44 27       	eor	r20, r20
   1d344:	ee 0f       	add	r30, r30
   1d346:	44 1f       	adc	r20, r20
   1d348:	fa 95       	dec	r31
   1d34a:	e1 f7       	brne	.-8      	; 0x1d344 <exp+0x46>
   1d34c:	41 95       	neg	r20
   1d34e:	55 0b       	sbc	r21, r21
   1d350:	4b d0       	rcall	.+150    	; 0x1d3e8 <ldexp>
   1d352:	0f 90       	pop	r0
   1d354:	07 fe       	sbrs	r0, 7
   1d356:	3d c0       	rjmp	.+122    	; 0x1d3d2 <inverse>
   1d358:	08 95       	ret

0001d35a <__fp_mpack>:
   1d35a:	9f 3f       	cpi	r25, 0xFF	; 255
   1d35c:	31 f0       	breq	.+12     	; 0x1d36a <__fp_mpack_finite+0xc>

0001d35e <__fp_mpack_finite>:
   1d35e:	91 50       	subi	r25, 0x01	; 1
   1d360:	20 f4       	brcc	.+8      	; 0x1d36a <__fp_mpack_finite+0xc>
   1d362:	87 95       	ror	r24
   1d364:	77 95       	ror	r23
   1d366:	67 95       	ror	r22
   1d368:	b7 95       	ror	r27
   1d36a:	88 0f       	add	r24, r24
   1d36c:	91 1d       	adc	r25, r1
   1d36e:	96 95       	lsr	r25
   1d370:	87 95       	ror	r24
   1d372:	97 f9       	bld	r25, 7
   1d374:	08 95       	ret

0001d376 <__fp_norm2>:
   1d376:	91 50       	subi	r25, 0x01	; 1
   1d378:	50 40       	sbci	r21, 0x00	; 0
   1d37a:	66 0f       	add	r22, r22
   1d37c:	77 1f       	adc	r23, r23
   1d37e:	88 1f       	adc	r24, r24
   1d380:	d2 f7       	brpl	.-12     	; 0x1d376 <__fp_norm2>
   1d382:	08 95       	ret

0001d384 <__fp_powser>:
   1d384:	df 93       	push	r29
   1d386:	cf 93       	push	r28
   1d388:	1f 93       	push	r17
   1d38a:	0f 93       	push	r16
   1d38c:	ff 92       	push	r15
   1d38e:	ef 92       	push	r14
   1d390:	df 92       	push	r13
   1d392:	7b 01       	movw	r14, r22
   1d394:	8c 01       	movw	r16, r24
   1d396:	68 94       	set
   1d398:	06 c0       	rjmp	.+12     	; 0x1d3a6 <__fp_powser+0x22>
   1d39a:	da 2e       	mov	r13, r26
   1d39c:	ef 01       	movw	r28, r30
   1d39e:	0e 94 0d d2 	call	0x1a41a	; 0x1a41a <__mulsf3x>
   1d3a2:	fe 01       	movw	r30, r28
   1d3a4:	e8 94       	clt
   1d3a6:	a5 91       	lpm	r26, Z+
   1d3a8:	25 91       	lpm	r18, Z+
   1d3aa:	35 91       	lpm	r19, Z+
   1d3ac:	45 91       	lpm	r20, Z+
   1d3ae:	55 91       	lpm	r21, Z+
   1d3b0:	a6 f3       	brts	.-24     	; 0x1d39a <__fp_powser+0x16>
   1d3b2:	ef 01       	movw	r28, r30
   1d3b4:	0e 94 60 d0 	call	0x1a0c0	; 0x1a0c0 <__addsf3x>
   1d3b8:	fe 01       	movw	r30, r28
   1d3ba:	97 01       	movw	r18, r14
   1d3bc:	a8 01       	movw	r20, r16
   1d3be:	da 94       	dec	r13
   1d3c0:	69 f7       	brne	.-38     	; 0x1d39c <__fp_powser+0x18>
   1d3c2:	df 90       	pop	r13
   1d3c4:	ef 90       	pop	r14
   1d3c6:	ff 90       	pop	r15
   1d3c8:	0f 91       	pop	r16
   1d3ca:	1f 91       	pop	r17
   1d3cc:	cf 91       	pop	r28
   1d3ce:	df 91       	pop	r29
   1d3d0:	08 95       	ret

0001d3d2 <inverse>:
   1d3d2:	9b 01       	movw	r18, r22
   1d3d4:	ac 01       	movw	r20, r24
   1d3d6:	60 e0       	ldi	r22, 0x00	; 0
   1d3d8:	70 e0       	ldi	r23, 0x00	; 0
   1d3da:	80 e8       	ldi	r24, 0x80	; 128
   1d3dc:	9f e3       	ldi	r25, 0x3F	; 63
   1d3de:	0c 94 b7 d0 	jmp	0x1a16e	; 0x1a16e <__divsf3>
   1d3e2:	0c 94 ac d1 	jmp	0x1a358	; 0x1a358 <__fp_inf>
   1d3e6:	b9 cf       	rjmp	.-142    	; 0x1d35a <__fp_mpack>

0001d3e8 <ldexp>:
   1d3e8:	0e 94 dc d1 	call	0x1a3b8	; 0x1a3b8 <__fp_splitA>
   1d3ec:	e0 f3       	brcs	.-8      	; 0x1d3e6 <inverse+0x14>
   1d3ee:	99 23       	and	r25, r25
   1d3f0:	d1 f3       	breq	.-12     	; 0x1d3e6 <inverse+0x14>
   1d3f2:	94 0f       	add	r25, r20
   1d3f4:	51 1d       	adc	r21, r1
   1d3f6:	ab f3       	brvs	.-22     	; 0x1d3e2 <inverse+0x10>
   1d3f8:	91 50       	subi	r25, 0x01	; 1
   1d3fa:	50 40       	sbci	r21, 0x00	; 0
   1d3fc:	94 f0       	brlt	.+36     	; 0x1d422 <ldexp+0x3a>
   1d3fe:	59 f0       	breq	.+22     	; 0x1d416 <ldexp+0x2e>
   1d400:	88 23       	and	r24, r24
   1d402:	32 f0       	brmi	.+12     	; 0x1d410 <ldexp+0x28>
   1d404:	66 0f       	add	r22, r22
   1d406:	77 1f       	adc	r23, r23
   1d408:	88 1f       	adc	r24, r24
   1d40a:	91 50       	subi	r25, 0x01	; 1
   1d40c:	50 40       	sbci	r21, 0x00	; 0
   1d40e:	c1 f7       	brne	.-16     	; 0x1d400 <ldexp+0x18>
   1d410:	9e 3f       	cpi	r25, 0xFE	; 254
   1d412:	51 05       	cpc	r21, r1
   1d414:	34 f7       	brge	.-52     	; 0x1d3e2 <inverse+0x10>
   1d416:	88 0f       	add	r24, r24
   1d418:	91 1d       	adc	r25, r1
   1d41a:	96 95       	lsr	r25
   1d41c:	87 95       	ror	r24
   1d41e:	97 f9       	bld	r25, 7
   1d420:	08 95       	ret
   1d422:	5f 3f       	cpi	r21, 0xFF	; 255
   1d424:	ac f0       	brlt	.+42     	; 0x1d450 <ldexp+0x68>
   1d426:	98 3e       	cpi	r25, 0xE8	; 232
   1d428:	9c f0       	brlt	.+38     	; 0x1d450 <ldexp+0x68>
   1d42a:	bb 27       	eor	r27, r27
   1d42c:	86 95       	lsr	r24
   1d42e:	77 95       	ror	r23
   1d430:	67 95       	ror	r22
   1d432:	b7 95       	ror	r27
   1d434:	08 f4       	brcc	.+2      	; 0x1d438 <ldexp+0x50>
   1d436:	b1 60       	ori	r27, 0x01	; 1
   1d438:	93 95       	inc	r25
   1d43a:	c1 f7       	brne	.-16     	; 0x1d42c <ldexp+0x44>
   1d43c:	bb 0f       	add	r27, r27
   1d43e:	58 f7       	brcc	.-42     	; 0x1d416 <ldexp+0x2e>
   1d440:	11 f4       	brne	.+4      	; 0x1d446 <ldexp+0x5e>
   1d442:	60 ff       	sbrs	r22, 0
   1d444:	e8 cf       	rjmp	.-48     	; 0x1d416 <ldexp+0x2e>
   1d446:	6f 5f       	subi	r22, 0xFF	; 255
   1d448:	7f 4f       	sbci	r23, 0xFF	; 255
   1d44a:	8f 4f       	sbci	r24, 0xFF	; 255
   1d44c:	9f 4f       	sbci	r25, 0xFF	; 255
   1d44e:	e3 cf       	rjmp	.-58     	; 0x1d416 <ldexp+0x2e>
   1d450:	0c 94 f7 d1 	jmp	0x1a3ee	; 0x1a3ee <__fp_szero>
   1d454:	0e f0       	brts	.+2      	; 0x1d458 <ldexp+0x70>
   1d456:	81 cf       	rjmp	.-254    	; 0x1d35a <__fp_mpack>
   1d458:	0c 94 b2 d1 	jmp	0x1a364	; 0x1a364 <__fp_nan>
   1d45c:	68 94       	set
   1d45e:	0c 94 ac d1 	jmp	0x1a358	; 0x1a358 <__fp_inf>

0001d462 <log>:
   1d462:	0e 94 dc d1 	call	0x1a3b8	; 0x1a3b8 <__fp_splitA>
   1d466:	b0 f3       	brcs	.-20     	; 0x1d454 <ldexp+0x6c>
   1d468:	99 23       	and	r25, r25
   1d46a:	c1 f3       	breq	.-16     	; 0x1d45c <ldexp+0x74>
   1d46c:	ae f3       	brts	.-22     	; 0x1d458 <ldexp+0x70>
   1d46e:	df 93       	push	r29
   1d470:	cf 93       	push	r28
   1d472:	1f 93       	push	r17
   1d474:	0f 93       	push	r16
   1d476:	ff 92       	push	r15
   1d478:	c9 2f       	mov	r28, r25
   1d47a:	dd 27       	eor	r29, r29
   1d47c:	88 23       	and	r24, r24
   1d47e:	2a f0       	brmi	.+10     	; 0x1d48a <log+0x28>
   1d480:	21 97       	sbiw	r28, 0x01	; 1
   1d482:	66 0f       	add	r22, r22
   1d484:	77 1f       	adc	r23, r23
   1d486:	88 1f       	adc	r24, r24
   1d488:	da f7       	brpl	.-10     	; 0x1d480 <log+0x1e>
   1d48a:	20 e0       	ldi	r18, 0x00	; 0
   1d48c:	30 e0       	ldi	r19, 0x00	; 0
   1d48e:	40 e8       	ldi	r20, 0x80	; 128
   1d490:	5f eb       	ldi	r21, 0xBF	; 191
   1d492:	9f e3       	ldi	r25, 0x3F	; 63
   1d494:	88 39       	cpi	r24, 0x98	; 152
   1d496:	20 f0       	brcs	.+8      	; 0x1d4a0 <log+0x3e>
   1d498:	80 3e       	cpi	r24, 0xE0	; 224
   1d49a:	38 f0       	brcs	.+14     	; 0x1d4aa <log+0x48>
   1d49c:	21 96       	adiw	r28, 0x01	; 1
   1d49e:	8f 77       	andi	r24, 0x7F	; 127
   1d4a0:	0e 94 4f d0 	call	0x1a09e	; 0x1a09e <__addsf3>
   1d4a4:	e8 e5       	ldi	r30, 0x58	; 88
   1d4a6:	f2 e0       	ldi	r31, 0x02	; 2
   1d4a8:	04 c0       	rjmp	.+8      	; 0x1d4b2 <log+0x50>
   1d4aa:	0e 94 4f d0 	call	0x1a09e	; 0x1a09e <__addsf3>
   1d4ae:	e5 e8       	ldi	r30, 0x85	; 133
   1d4b0:	f2 e0       	ldi	r31, 0x02	; 2
   1d4b2:	68 df       	rcall	.-304    	; 0x1d384 <__fp_powser>
   1d4b4:	8b 01       	movw	r16, r22
   1d4b6:	be 01       	movw	r22, r28
   1d4b8:	ec 01       	movw	r28, r24
   1d4ba:	fb 2e       	mov	r15, r27
   1d4bc:	6f 57       	subi	r22, 0x7F	; 127
   1d4be:	71 09       	sbc	r23, r1
   1d4c0:	75 95       	asr	r23
   1d4c2:	77 1f       	adc	r23, r23
   1d4c4:	88 0b       	sbc	r24, r24
   1d4c6:	99 0b       	sbc	r25, r25
   1d4c8:	0e 94 4d d1 	call	0x1a29a	; 0x1a29a <__floatsisf>
   1d4cc:	28 e1       	ldi	r18, 0x18	; 24
   1d4ce:	32 e7       	ldi	r19, 0x72	; 114
   1d4d0:	41 e3       	ldi	r20, 0x31	; 49
   1d4d2:	5f e3       	ldi	r21, 0x3F	; 63
   1d4d4:	0e 94 0d d2 	call	0x1a41a	; 0x1a41a <__mulsf3x>
   1d4d8:	af 2d       	mov	r26, r15
   1d4da:	98 01       	movw	r18, r16
   1d4dc:	ae 01       	movw	r20, r28
   1d4de:	ff 90       	pop	r15
   1d4e0:	0f 91       	pop	r16
   1d4e2:	1f 91       	pop	r17
   1d4e4:	cf 91       	pop	r28
   1d4e6:	df 91       	pop	r29
   1d4e8:	0e 94 60 d0 	call	0x1a0c0	; 0x1a0c0 <__addsf3x>
   1d4ec:	0c 94 c3 d1 	jmp	0x1a386	; 0x1a386 <__fp_round>

0001d4f0 <modf>:
   1d4f0:	fa 01       	movw	r30, r20
   1d4f2:	dc 01       	movw	r26, r24
   1d4f4:	aa 0f       	add	r26, r26
   1d4f6:	bb 1f       	adc	r27, r27
   1d4f8:	9b 01       	movw	r18, r22
   1d4fa:	ac 01       	movw	r20, r24
   1d4fc:	bf 57       	subi	r27, 0x7F	; 127
   1d4fe:	28 f4       	brcc	.+10     	; 0x1d50a <modf+0x1a>
   1d500:	22 27       	eor	r18, r18
   1d502:	33 27       	eor	r19, r19
   1d504:	44 27       	eor	r20, r20
   1d506:	50 78       	andi	r21, 0x80	; 128
   1d508:	20 c0       	rjmp	.+64     	; 0x1d54a <modf+0x5a>
   1d50a:	b7 51       	subi	r27, 0x17	; 23
   1d50c:	90 f4       	brcc	.+36     	; 0x1d532 <modf+0x42>
   1d50e:	ab 2f       	mov	r26, r27
   1d510:	00 24       	eor	r0, r0
   1d512:	46 95       	lsr	r20
   1d514:	37 95       	ror	r19
   1d516:	27 95       	ror	r18
   1d518:	01 1c       	adc	r0, r1
   1d51a:	a3 95       	inc	r26
   1d51c:	d2 f3       	brmi	.-12     	; 0x1d512 <modf+0x22>
   1d51e:	00 20       	and	r0, r0
   1d520:	71 f0       	breq	.+28     	; 0x1d53e <modf+0x4e>
   1d522:	22 0f       	add	r18, r18
   1d524:	33 1f       	adc	r19, r19
   1d526:	44 1f       	adc	r20, r20
   1d528:	b3 95       	inc	r27
   1d52a:	da f3       	brmi	.-10     	; 0x1d522 <modf+0x32>
   1d52c:	0e d0       	rcall	.+28     	; 0x1d54a <modf+0x5a>
   1d52e:	0c 94 4e d0 	jmp	0x1a09c	; 0x1a09c <__subsf3>
   1d532:	61 30       	cpi	r22, 0x01	; 1
   1d534:	71 05       	cpc	r23, r1
   1d536:	a0 e8       	ldi	r26, 0x80	; 128
   1d538:	8a 07       	cpc	r24, r26
   1d53a:	b9 46       	sbci	r27, 0x69	; 105
   1d53c:	30 f4       	brcc	.+12     	; 0x1d54a <modf+0x5a>
   1d53e:	9b 01       	movw	r18, r22
   1d540:	ac 01       	movw	r20, r24
   1d542:	66 27       	eor	r22, r22
   1d544:	77 27       	eor	r23, r23
   1d546:	88 27       	eor	r24, r24
   1d548:	90 78       	andi	r25, 0x80	; 128
   1d54a:	30 96       	adiw	r30, 0x00	; 0
   1d54c:	21 f0       	breq	.+8      	; 0x1d556 <modf+0x66>
   1d54e:	20 83       	st	Z, r18
   1d550:	31 83       	std	Z+1, r19	; 0x01
   1d552:	42 83       	std	Z+2, r20	; 0x02
   1d554:	53 83       	std	Z+3, r21	; 0x03
   1d556:	08 95       	ret

0001d558 <__udivmodqi4>:
   1d558:	99 1b       	sub	r25, r25
   1d55a:	79 e0       	ldi	r23, 0x09	; 9
   1d55c:	04 c0       	rjmp	.+8      	; 0x1d566 <__udivmodqi4_ep>

0001d55e <__udivmodqi4_loop>:
   1d55e:	99 1f       	adc	r25, r25
   1d560:	96 17       	cp	r25, r22
   1d562:	08 f0       	brcs	.+2      	; 0x1d566 <__udivmodqi4_ep>
   1d564:	96 1b       	sub	r25, r22

0001d566 <__udivmodqi4_ep>:
   1d566:	88 1f       	adc	r24, r24
   1d568:	7a 95       	dec	r23
   1d56a:	c9 f7       	brne	.-14     	; 0x1d55e <__udivmodqi4_loop>
   1d56c:	80 95       	com	r24
   1d56e:	08 95       	ret

0001d570 <__udivmodhi4>:
   1d570:	aa 1b       	sub	r26, r26
   1d572:	bb 1b       	sub	r27, r27
   1d574:	51 e1       	ldi	r21, 0x11	; 17
   1d576:	07 c0       	rjmp	.+14     	; 0x1d586 <__udivmodhi4_ep>

0001d578 <__udivmodhi4_loop>:
   1d578:	aa 1f       	adc	r26, r26
   1d57a:	bb 1f       	adc	r27, r27
   1d57c:	a6 17       	cp	r26, r22
   1d57e:	b7 07       	cpc	r27, r23
   1d580:	10 f0       	brcs	.+4      	; 0x1d586 <__udivmodhi4_ep>
   1d582:	a6 1b       	sub	r26, r22
   1d584:	b7 0b       	sbc	r27, r23

0001d586 <__udivmodhi4_ep>:
   1d586:	88 1f       	adc	r24, r24
   1d588:	99 1f       	adc	r25, r25
   1d58a:	5a 95       	dec	r21
   1d58c:	a9 f7       	brne	.-22     	; 0x1d578 <__udivmodhi4_loop>
   1d58e:	80 95       	com	r24
   1d590:	90 95       	com	r25
   1d592:	bc 01       	movw	r22, r24
   1d594:	cd 01       	movw	r24, r26
   1d596:	08 95       	ret

0001d598 <__divmodhi4>:
   1d598:	97 fb       	bst	r25, 7
   1d59a:	07 2e       	mov	r0, r23
   1d59c:	16 f4       	brtc	.+4      	; 0x1d5a2 <__divmodhi4+0xa>
   1d59e:	00 94       	com	r0
   1d5a0:	06 d0       	rcall	.+12     	; 0x1d5ae <__divmodhi4_neg1>
   1d5a2:	77 fd       	sbrc	r23, 7
   1d5a4:	08 d0       	rcall	.+16     	; 0x1d5b6 <__divmodhi4_neg2>
   1d5a6:	e4 df       	rcall	.-56     	; 0x1d570 <__udivmodhi4>
   1d5a8:	07 fc       	sbrc	r0, 7
   1d5aa:	05 d0       	rcall	.+10     	; 0x1d5b6 <__divmodhi4_neg2>
   1d5ac:	3e f4       	brtc	.+14     	; 0x1d5bc <__divmodhi4_exit>

0001d5ae <__divmodhi4_neg1>:
   1d5ae:	90 95       	com	r25
   1d5b0:	81 95       	neg	r24
   1d5b2:	9f 4f       	sbci	r25, 0xFF	; 255
   1d5b4:	08 95       	ret

0001d5b6 <__divmodhi4_neg2>:
   1d5b6:	70 95       	com	r23
   1d5b8:	61 95       	neg	r22
   1d5ba:	7f 4f       	sbci	r23, 0xFF	; 255

0001d5bc <__divmodhi4_exit>:
   1d5bc:	08 95       	ret

0001d5be <__udivmodsi4>:
   1d5be:	a1 e2       	ldi	r26, 0x21	; 33
   1d5c0:	1a 2e       	mov	r1, r26
   1d5c2:	aa 1b       	sub	r26, r26
   1d5c4:	bb 1b       	sub	r27, r27
   1d5c6:	fd 01       	movw	r30, r26
   1d5c8:	0d c0       	rjmp	.+26     	; 0x1d5e4 <__udivmodsi4_ep>

0001d5ca <__udivmodsi4_loop>:
   1d5ca:	aa 1f       	adc	r26, r26
   1d5cc:	bb 1f       	adc	r27, r27
   1d5ce:	ee 1f       	adc	r30, r30
   1d5d0:	ff 1f       	adc	r31, r31
   1d5d2:	a2 17       	cp	r26, r18
   1d5d4:	b3 07       	cpc	r27, r19
   1d5d6:	e4 07       	cpc	r30, r20
   1d5d8:	f5 07       	cpc	r31, r21
   1d5da:	20 f0       	brcs	.+8      	; 0x1d5e4 <__udivmodsi4_ep>
   1d5dc:	a2 1b       	sub	r26, r18
   1d5de:	b3 0b       	sbc	r27, r19
   1d5e0:	e4 0b       	sbc	r30, r20
   1d5e2:	f5 0b       	sbc	r31, r21

0001d5e4 <__udivmodsi4_ep>:
   1d5e4:	66 1f       	adc	r22, r22
   1d5e6:	77 1f       	adc	r23, r23
   1d5e8:	88 1f       	adc	r24, r24
   1d5ea:	99 1f       	adc	r25, r25
   1d5ec:	1a 94       	dec	r1
   1d5ee:	69 f7       	brne	.-38     	; 0x1d5ca <__udivmodsi4_loop>
   1d5f0:	60 95       	com	r22
   1d5f2:	70 95       	com	r23
   1d5f4:	80 95       	com	r24
   1d5f6:	90 95       	com	r25
   1d5f8:	9b 01       	movw	r18, r22
   1d5fa:	ac 01       	movw	r20, r24
   1d5fc:	bd 01       	movw	r22, r26
   1d5fe:	cf 01       	movw	r24, r30
   1d600:	08 95       	ret

0001d602 <__divmodsi4>:
   1d602:	05 2e       	mov	r0, r21
   1d604:	97 fb       	bst	r25, 7
   1d606:	16 f4       	brtc	.+4      	; 0x1d60c <__divmodsi4+0xa>
   1d608:	00 94       	com	r0
   1d60a:	0f d0       	rcall	.+30     	; 0x1d62a <__negsi2>
   1d60c:	57 fd       	sbrc	r21, 7
   1d60e:	05 d0       	rcall	.+10     	; 0x1d61a <__divmodsi4_neg2>
   1d610:	d6 df       	rcall	.-84     	; 0x1d5be <__udivmodsi4>
   1d612:	07 fc       	sbrc	r0, 7
   1d614:	02 d0       	rcall	.+4      	; 0x1d61a <__divmodsi4_neg2>
   1d616:	46 f4       	brtc	.+16     	; 0x1d628 <__divmodsi4_exit>
   1d618:	08 c0       	rjmp	.+16     	; 0x1d62a <__negsi2>

0001d61a <__divmodsi4_neg2>:
   1d61a:	50 95       	com	r21
   1d61c:	40 95       	com	r20
   1d61e:	30 95       	com	r19
   1d620:	21 95       	neg	r18
   1d622:	3f 4f       	sbci	r19, 0xFF	; 255
   1d624:	4f 4f       	sbci	r20, 0xFF	; 255
   1d626:	5f 4f       	sbci	r21, 0xFF	; 255

0001d628 <__divmodsi4_exit>:
   1d628:	08 95       	ret

0001d62a <__negsi2>:
   1d62a:	90 95       	com	r25
   1d62c:	80 95       	com	r24
   1d62e:	70 95       	com	r23
   1d630:	61 95       	neg	r22
   1d632:	7f 4f       	sbci	r23, 0xFF	; 255
   1d634:	8f 4f       	sbci	r24, 0xFF	; 255
   1d636:	9f 4f       	sbci	r25, 0xFF	; 255
   1d638:	08 95       	ret

0001d63a <__tablejump2__>:
   1d63a:	ee 0f       	add	r30, r30
   1d63c:	ff 1f       	adc	r31, r31
   1d63e:	88 1f       	adc	r24, r24
   1d640:	8b bf       	out	0x3b, r24	; 59
   1d642:	07 90       	elpm	r0, Z+
   1d644:	f6 91       	elpm	r31, Z
   1d646:	e0 2d       	mov	r30, r0
   1d648:	19 94       	eijmp

0001d64a <__umulhisi3>:
   1d64a:	a2 9f       	mul	r26, r18
   1d64c:	b0 01       	movw	r22, r0
   1d64e:	b3 9f       	mul	r27, r19
   1d650:	c0 01       	movw	r24, r0
   1d652:	a3 9f       	mul	r26, r19
   1d654:	70 0d       	add	r23, r0
   1d656:	81 1d       	adc	r24, r1
   1d658:	11 24       	eor	r1, r1
   1d65a:	91 1d       	adc	r25, r1
   1d65c:	b2 9f       	mul	r27, r18
   1d65e:	70 0d       	add	r23, r0
   1d660:	81 1d       	adc	r24, r1
   1d662:	11 24       	eor	r1, r1
   1d664:	91 1d       	adc	r25, r1
   1d666:	08 95       	ret

0001d668 <__muluhisi3>:
   1d668:	f0 df       	rcall	.-32     	; 0x1d64a <__umulhisi3>
   1d66a:	a5 9f       	mul	r26, r21
   1d66c:	90 0d       	add	r25, r0
   1d66e:	b4 9f       	mul	r27, r20
   1d670:	90 0d       	add	r25, r0
   1d672:	a4 9f       	mul	r26, r20
   1d674:	80 0d       	add	r24, r0
   1d676:	91 1d       	adc	r25, r1
   1d678:	11 24       	eor	r1, r1
   1d67a:	08 95       	ret

0001d67c <__cmpdi2_s8>:
   1d67c:	00 24       	eor	r0, r0
   1d67e:	a7 fd       	sbrc	r26, 7
   1d680:	00 94       	com	r0
   1d682:	2a 17       	cp	r18, r26
   1d684:	30 05       	cpc	r19, r0
   1d686:	40 05       	cpc	r20, r0
   1d688:	50 05       	cpc	r21, r0
   1d68a:	60 05       	cpc	r22, r0
   1d68c:	70 05       	cpc	r23, r0
   1d68e:	80 05       	cpc	r24, r0
   1d690:	90 05       	cpc	r25, r0
   1d692:	08 95       	ret

0001d694 <malloc>:
   1d694:	0f 93       	push	r16
   1d696:	1f 93       	push	r17
   1d698:	cf 93       	push	r28
   1d69a:	df 93       	push	r29
   1d69c:	82 30       	cpi	r24, 0x02	; 2
   1d69e:	91 05       	cpc	r25, r1
   1d6a0:	10 f4       	brcc	.+4      	; 0x1d6a6 <malloc+0x12>
   1d6a2:	82 e0       	ldi	r24, 0x02	; 2
   1d6a4:	90 e0       	ldi	r25, 0x00	; 0
   1d6a6:	e0 91 27 19 	lds	r30, 0x1927	; 0x801927 <__flp>
   1d6aa:	f0 91 28 19 	lds	r31, 0x1928	; 0x801928 <__flp+0x1>
   1d6ae:	20 e0       	ldi	r18, 0x00	; 0
   1d6b0:	30 e0       	ldi	r19, 0x00	; 0
   1d6b2:	a0 e0       	ldi	r26, 0x00	; 0
   1d6b4:	b0 e0       	ldi	r27, 0x00	; 0
   1d6b6:	30 97       	sbiw	r30, 0x00	; 0
   1d6b8:	19 f1       	breq	.+70     	; 0x1d700 <malloc+0x6c>
   1d6ba:	40 81       	ld	r20, Z
   1d6bc:	51 81       	ldd	r21, Z+1	; 0x01
   1d6be:	02 81       	ldd	r16, Z+2	; 0x02
   1d6c0:	13 81       	ldd	r17, Z+3	; 0x03
   1d6c2:	48 17       	cp	r20, r24
   1d6c4:	59 07       	cpc	r21, r25
   1d6c6:	c8 f0       	brcs	.+50     	; 0x1d6fa <malloc+0x66>
   1d6c8:	84 17       	cp	r24, r20
   1d6ca:	95 07       	cpc	r25, r21
   1d6cc:	69 f4       	brne	.+26     	; 0x1d6e8 <malloc+0x54>
   1d6ce:	10 97       	sbiw	r26, 0x00	; 0
   1d6d0:	31 f0       	breq	.+12     	; 0x1d6de <malloc+0x4a>
   1d6d2:	12 96       	adiw	r26, 0x02	; 2
   1d6d4:	0c 93       	st	X, r16
   1d6d6:	12 97       	sbiw	r26, 0x02	; 2
   1d6d8:	13 96       	adiw	r26, 0x03	; 3
   1d6da:	1c 93       	st	X, r17
   1d6dc:	27 c0       	rjmp	.+78     	; 0x1d72c <malloc+0x98>
   1d6de:	00 93 27 19 	sts	0x1927, r16	; 0x801927 <__flp>
   1d6e2:	10 93 28 19 	sts	0x1928, r17	; 0x801928 <__flp+0x1>
   1d6e6:	22 c0       	rjmp	.+68     	; 0x1d72c <malloc+0x98>
   1d6e8:	21 15       	cp	r18, r1
   1d6ea:	31 05       	cpc	r19, r1
   1d6ec:	19 f0       	breq	.+6      	; 0x1d6f4 <malloc+0x60>
   1d6ee:	42 17       	cp	r20, r18
   1d6f0:	53 07       	cpc	r21, r19
   1d6f2:	18 f4       	brcc	.+6      	; 0x1d6fa <malloc+0x66>
   1d6f4:	9a 01       	movw	r18, r20
   1d6f6:	bd 01       	movw	r22, r26
   1d6f8:	ef 01       	movw	r28, r30
   1d6fa:	df 01       	movw	r26, r30
   1d6fc:	f8 01       	movw	r30, r16
   1d6fe:	db cf       	rjmp	.-74     	; 0x1d6b6 <malloc+0x22>
   1d700:	21 15       	cp	r18, r1
   1d702:	31 05       	cpc	r19, r1
   1d704:	f9 f0       	breq	.+62     	; 0x1d744 <malloc+0xb0>
   1d706:	28 1b       	sub	r18, r24
   1d708:	39 0b       	sbc	r19, r25
   1d70a:	24 30       	cpi	r18, 0x04	; 4
   1d70c:	31 05       	cpc	r19, r1
   1d70e:	80 f4       	brcc	.+32     	; 0x1d730 <malloc+0x9c>
   1d710:	8a 81       	ldd	r24, Y+2	; 0x02
   1d712:	9b 81       	ldd	r25, Y+3	; 0x03
   1d714:	61 15       	cp	r22, r1
   1d716:	71 05       	cpc	r23, r1
   1d718:	21 f0       	breq	.+8      	; 0x1d722 <malloc+0x8e>
   1d71a:	fb 01       	movw	r30, r22
   1d71c:	93 83       	std	Z+3, r25	; 0x03
   1d71e:	82 83       	std	Z+2, r24	; 0x02
   1d720:	04 c0       	rjmp	.+8      	; 0x1d72a <malloc+0x96>
   1d722:	90 93 28 19 	sts	0x1928, r25	; 0x801928 <__flp+0x1>
   1d726:	80 93 27 19 	sts	0x1927, r24	; 0x801927 <__flp>
   1d72a:	fe 01       	movw	r30, r28
   1d72c:	32 96       	adiw	r30, 0x02	; 2
   1d72e:	44 c0       	rjmp	.+136    	; 0x1d7b8 <malloc+0x124>
   1d730:	fe 01       	movw	r30, r28
   1d732:	e2 0f       	add	r30, r18
   1d734:	f3 1f       	adc	r31, r19
   1d736:	81 93       	st	Z+, r24
   1d738:	91 93       	st	Z+, r25
   1d73a:	22 50       	subi	r18, 0x02	; 2
   1d73c:	31 09       	sbc	r19, r1
   1d73e:	39 83       	std	Y+1, r19	; 0x01
   1d740:	28 83       	st	Y, r18
   1d742:	3a c0       	rjmp	.+116    	; 0x1d7b8 <malloc+0x124>
   1d744:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d748:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d74c:	23 2b       	or	r18, r19
   1d74e:	41 f4       	brne	.+16     	; 0x1d760 <malloc+0xcc>
   1d750:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
   1d754:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
   1d758:	30 93 26 19 	sts	0x1926, r19	; 0x801926 <__brkval+0x1>
   1d75c:	20 93 25 19 	sts	0x1925, r18	; 0x801925 <__brkval>
   1d760:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
   1d764:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
   1d768:	21 15       	cp	r18, r1
   1d76a:	31 05       	cpc	r19, r1
   1d76c:	41 f4       	brne	.+16     	; 0x1d77e <malloc+0xea>
   1d76e:	2d b7       	in	r18, 0x3d	; 61
   1d770:	3e b7       	in	r19, 0x3e	; 62
   1d772:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
   1d776:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
   1d77a:	24 1b       	sub	r18, r20
   1d77c:	35 0b       	sbc	r19, r21
   1d77e:	e0 91 25 19 	lds	r30, 0x1925	; 0x801925 <__brkval>
   1d782:	f0 91 26 19 	lds	r31, 0x1926	; 0x801926 <__brkval+0x1>
   1d786:	e2 17       	cp	r30, r18
   1d788:	f3 07       	cpc	r31, r19
   1d78a:	a0 f4       	brcc	.+40     	; 0x1d7b4 <malloc+0x120>
   1d78c:	2e 1b       	sub	r18, r30
   1d78e:	3f 0b       	sbc	r19, r31
   1d790:	28 17       	cp	r18, r24
   1d792:	39 07       	cpc	r19, r25
   1d794:	78 f0       	brcs	.+30     	; 0x1d7b4 <malloc+0x120>
   1d796:	ac 01       	movw	r20, r24
   1d798:	4e 5f       	subi	r20, 0xFE	; 254
   1d79a:	5f 4f       	sbci	r21, 0xFF	; 255
   1d79c:	24 17       	cp	r18, r20
   1d79e:	35 07       	cpc	r19, r21
   1d7a0:	48 f0       	brcs	.+18     	; 0x1d7b4 <malloc+0x120>
   1d7a2:	4e 0f       	add	r20, r30
   1d7a4:	5f 1f       	adc	r21, r31
   1d7a6:	50 93 26 19 	sts	0x1926, r21	; 0x801926 <__brkval+0x1>
   1d7aa:	40 93 25 19 	sts	0x1925, r20	; 0x801925 <__brkval>
   1d7ae:	81 93       	st	Z+, r24
   1d7b0:	91 93       	st	Z+, r25
   1d7b2:	02 c0       	rjmp	.+4      	; 0x1d7b8 <malloc+0x124>
   1d7b4:	e0 e0       	ldi	r30, 0x00	; 0
   1d7b6:	f0 e0       	ldi	r31, 0x00	; 0
   1d7b8:	cf 01       	movw	r24, r30
   1d7ba:	df 91       	pop	r29
   1d7bc:	cf 91       	pop	r28
   1d7be:	1f 91       	pop	r17
   1d7c0:	0f 91       	pop	r16
   1d7c2:	08 95       	ret

0001d7c4 <free>:
   1d7c4:	cf 93       	push	r28
   1d7c6:	df 93       	push	r29
   1d7c8:	00 97       	sbiw	r24, 0x00	; 0
   1d7ca:	09 f4       	brne	.+2      	; 0x1d7ce <free+0xa>
   1d7cc:	81 c0       	rjmp	.+258    	; 0x1d8d0 <free+0x10c>
   1d7ce:	fc 01       	movw	r30, r24
   1d7d0:	32 97       	sbiw	r30, 0x02	; 2
   1d7d2:	13 82       	std	Z+3, r1	; 0x03
   1d7d4:	12 82       	std	Z+2, r1	; 0x02
   1d7d6:	a0 91 27 19 	lds	r26, 0x1927	; 0x801927 <__flp>
   1d7da:	b0 91 28 19 	lds	r27, 0x1928	; 0x801928 <__flp+0x1>
   1d7de:	10 97       	sbiw	r26, 0x00	; 0
   1d7e0:	81 f4       	brne	.+32     	; 0x1d802 <free+0x3e>
   1d7e2:	20 81       	ld	r18, Z
   1d7e4:	31 81       	ldd	r19, Z+1	; 0x01
   1d7e6:	82 0f       	add	r24, r18
   1d7e8:	93 1f       	adc	r25, r19
   1d7ea:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d7ee:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d7f2:	28 17       	cp	r18, r24
   1d7f4:	39 07       	cpc	r19, r25
   1d7f6:	51 f5       	brne	.+84     	; 0x1d84c <free+0x88>
   1d7f8:	f0 93 26 19 	sts	0x1926, r31	; 0x801926 <__brkval+0x1>
   1d7fc:	e0 93 25 19 	sts	0x1925, r30	; 0x801925 <__brkval>
   1d800:	67 c0       	rjmp	.+206    	; 0x1d8d0 <free+0x10c>
   1d802:	ed 01       	movw	r28, r26
   1d804:	20 e0       	ldi	r18, 0x00	; 0
   1d806:	30 e0       	ldi	r19, 0x00	; 0
   1d808:	ce 17       	cp	r28, r30
   1d80a:	df 07       	cpc	r29, r31
   1d80c:	40 f4       	brcc	.+16     	; 0x1d81e <free+0x5a>
   1d80e:	4a 81       	ldd	r20, Y+2	; 0x02
   1d810:	5b 81       	ldd	r21, Y+3	; 0x03
   1d812:	9e 01       	movw	r18, r28
   1d814:	41 15       	cp	r20, r1
   1d816:	51 05       	cpc	r21, r1
   1d818:	f1 f0       	breq	.+60     	; 0x1d856 <free+0x92>
   1d81a:	ea 01       	movw	r28, r20
   1d81c:	f5 cf       	rjmp	.-22     	; 0x1d808 <free+0x44>
   1d81e:	d3 83       	std	Z+3, r29	; 0x03
   1d820:	c2 83       	std	Z+2, r28	; 0x02
   1d822:	40 81       	ld	r20, Z
   1d824:	51 81       	ldd	r21, Z+1	; 0x01
   1d826:	84 0f       	add	r24, r20
   1d828:	95 1f       	adc	r25, r21
   1d82a:	c8 17       	cp	r28, r24
   1d82c:	d9 07       	cpc	r29, r25
   1d82e:	59 f4       	brne	.+22     	; 0x1d846 <free+0x82>
   1d830:	88 81       	ld	r24, Y
   1d832:	99 81       	ldd	r25, Y+1	; 0x01
   1d834:	84 0f       	add	r24, r20
   1d836:	95 1f       	adc	r25, r21
   1d838:	02 96       	adiw	r24, 0x02	; 2
   1d83a:	91 83       	std	Z+1, r25	; 0x01
   1d83c:	80 83       	st	Z, r24
   1d83e:	8a 81       	ldd	r24, Y+2	; 0x02
   1d840:	9b 81       	ldd	r25, Y+3	; 0x03
   1d842:	93 83       	std	Z+3, r25	; 0x03
   1d844:	82 83       	std	Z+2, r24	; 0x02
   1d846:	21 15       	cp	r18, r1
   1d848:	31 05       	cpc	r19, r1
   1d84a:	29 f4       	brne	.+10     	; 0x1d856 <free+0x92>
   1d84c:	f0 93 28 19 	sts	0x1928, r31	; 0x801928 <__flp+0x1>
   1d850:	e0 93 27 19 	sts	0x1927, r30	; 0x801927 <__flp>
   1d854:	3d c0       	rjmp	.+122    	; 0x1d8d0 <free+0x10c>
   1d856:	e9 01       	movw	r28, r18
   1d858:	fb 83       	std	Y+3, r31	; 0x03
   1d85a:	ea 83       	std	Y+2, r30	; 0x02
   1d85c:	49 91       	ld	r20, Y+
   1d85e:	59 91       	ld	r21, Y+
   1d860:	c4 0f       	add	r28, r20
   1d862:	d5 1f       	adc	r29, r21
   1d864:	ec 17       	cp	r30, r28
   1d866:	fd 07       	cpc	r31, r29
   1d868:	61 f4       	brne	.+24     	; 0x1d882 <free+0xbe>
   1d86a:	80 81       	ld	r24, Z
   1d86c:	91 81       	ldd	r25, Z+1	; 0x01
   1d86e:	84 0f       	add	r24, r20
   1d870:	95 1f       	adc	r25, r21
   1d872:	02 96       	adiw	r24, 0x02	; 2
   1d874:	e9 01       	movw	r28, r18
   1d876:	99 83       	std	Y+1, r25	; 0x01
   1d878:	88 83       	st	Y, r24
   1d87a:	82 81       	ldd	r24, Z+2	; 0x02
   1d87c:	93 81       	ldd	r25, Z+3	; 0x03
   1d87e:	9b 83       	std	Y+3, r25	; 0x03
   1d880:	8a 83       	std	Y+2, r24	; 0x02
   1d882:	e0 e0       	ldi	r30, 0x00	; 0
   1d884:	f0 e0       	ldi	r31, 0x00	; 0
   1d886:	12 96       	adiw	r26, 0x02	; 2
   1d888:	8d 91       	ld	r24, X+
   1d88a:	9c 91       	ld	r25, X
   1d88c:	13 97       	sbiw	r26, 0x03	; 3
   1d88e:	00 97       	sbiw	r24, 0x00	; 0
   1d890:	19 f0       	breq	.+6      	; 0x1d898 <free+0xd4>
   1d892:	fd 01       	movw	r30, r26
   1d894:	dc 01       	movw	r26, r24
   1d896:	f7 cf       	rjmp	.-18     	; 0x1d886 <free+0xc2>
   1d898:	8d 91       	ld	r24, X+
   1d89a:	9c 91       	ld	r25, X
   1d89c:	11 97       	sbiw	r26, 0x01	; 1
   1d89e:	9d 01       	movw	r18, r26
   1d8a0:	2e 5f       	subi	r18, 0xFE	; 254
   1d8a2:	3f 4f       	sbci	r19, 0xFF	; 255
   1d8a4:	82 0f       	add	r24, r18
   1d8a6:	93 1f       	adc	r25, r19
   1d8a8:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d8ac:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d8b0:	28 17       	cp	r18, r24
   1d8b2:	39 07       	cpc	r19, r25
   1d8b4:	69 f4       	brne	.+26     	; 0x1d8d0 <free+0x10c>
   1d8b6:	30 97       	sbiw	r30, 0x00	; 0
   1d8b8:	29 f4       	brne	.+10     	; 0x1d8c4 <free+0x100>
   1d8ba:	10 92 28 19 	sts	0x1928, r1	; 0x801928 <__flp+0x1>
   1d8be:	10 92 27 19 	sts	0x1927, r1	; 0x801927 <__flp>
   1d8c2:	02 c0       	rjmp	.+4      	; 0x1d8c8 <free+0x104>
   1d8c4:	13 82       	std	Z+3, r1	; 0x03
   1d8c6:	12 82       	std	Z+2, r1	; 0x02
   1d8c8:	b0 93 26 19 	sts	0x1926, r27	; 0x801926 <__brkval+0x1>
   1d8cc:	a0 93 25 19 	sts	0x1925, r26	; 0x801925 <__brkval>
   1d8d0:	df 91       	pop	r29
   1d8d2:	cf 91       	pop	r28
   1d8d4:	08 95       	ret

0001d8d6 <random_r>:
   1d8d6:	8f 92       	push	r8
   1d8d8:	9f 92       	push	r9
   1d8da:	af 92       	push	r10
   1d8dc:	bf 92       	push	r11
   1d8de:	cf 92       	push	r12
   1d8e0:	df 92       	push	r13
   1d8e2:	ef 92       	push	r14
   1d8e4:	ff 92       	push	r15
   1d8e6:	cf 93       	push	r28
   1d8e8:	df 93       	push	r29
   1d8ea:	ec 01       	movw	r28, r24
   1d8ec:	68 81       	ld	r22, Y
   1d8ee:	79 81       	ldd	r23, Y+1	; 0x01
   1d8f0:	8a 81       	ldd	r24, Y+2	; 0x02
   1d8f2:	9b 81       	ldd	r25, Y+3	; 0x03
   1d8f4:	61 15       	cp	r22, r1
   1d8f6:	71 05       	cpc	r23, r1
   1d8f8:	81 05       	cpc	r24, r1
   1d8fa:	91 05       	cpc	r25, r1
   1d8fc:	21 f4       	brne	.+8      	; 0x1d906 <random_r+0x30>
   1d8fe:	64 e2       	ldi	r22, 0x24	; 36
   1d900:	79 ed       	ldi	r23, 0xD9	; 217
   1d902:	8b e5       	ldi	r24, 0x5B	; 91
   1d904:	97 e0       	ldi	r25, 0x07	; 7
   1d906:	2d e1       	ldi	r18, 0x1D	; 29
   1d908:	33 ef       	ldi	r19, 0xF3	; 243
   1d90a:	41 e0       	ldi	r20, 0x01	; 1
   1d90c:	50 e0       	ldi	r21, 0x00	; 0
   1d90e:	79 de       	rcall	.-782    	; 0x1d602 <__divmodsi4>
   1d910:	49 01       	movw	r8, r18
   1d912:	5a 01       	movw	r10, r20
   1d914:	9b 01       	movw	r18, r22
   1d916:	ac 01       	movw	r20, r24
   1d918:	a7 ea       	ldi	r26, 0xA7	; 167
   1d91a:	b1 e4       	ldi	r27, 0x41	; 65
   1d91c:	a5 de       	rcall	.-694    	; 0x1d668 <__muluhisi3>
   1d91e:	6b 01       	movw	r12, r22
   1d920:	7c 01       	movw	r14, r24
   1d922:	ac ee       	ldi	r26, 0xEC	; 236
   1d924:	b4 ef       	ldi	r27, 0xF4	; 244
   1d926:	a5 01       	movw	r20, r10
   1d928:	94 01       	movw	r18, r8
   1d92a:	bd d3       	rcall	.+1914   	; 0x1e0a6 <__mulohisi3>
   1d92c:	dc 01       	movw	r26, r24
   1d92e:	cb 01       	movw	r24, r22
   1d930:	8c 0d       	add	r24, r12
   1d932:	9d 1d       	adc	r25, r13
   1d934:	ae 1d       	adc	r26, r14
   1d936:	bf 1d       	adc	r27, r15
   1d938:	b7 ff       	sbrs	r27, 7
   1d93a:	03 c0       	rjmp	.+6      	; 0x1d942 <random_r+0x6c>
   1d93c:	01 97       	sbiw	r24, 0x01	; 1
   1d93e:	a1 09       	sbc	r26, r1
   1d940:	b0 48       	sbci	r27, 0x80	; 128
   1d942:	88 83       	st	Y, r24
   1d944:	99 83       	std	Y+1, r25	; 0x01
   1d946:	aa 83       	std	Y+2, r26	; 0x02
   1d948:	bb 83       	std	Y+3, r27	; 0x03
   1d94a:	bc 01       	movw	r22, r24
   1d94c:	cd 01       	movw	r24, r26
   1d94e:	9f 77       	andi	r25, 0x7F	; 127
   1d950:	df 91       	pop	r29
   1d952:	cf 91       	pop	r28
   1d954:	ff 90       	pop	r15
   1d956:	ef 90       	pop	r14
   1d958:	df 90       	pop	r13
   1d95a:	cf 90       	pop	r12
   1d95c:	bf 90       	pop	r11
   1d95e:	af 90       	pop	r10
   1d960:	9f 90       	pop	r9
   1d962:	8f 90       	pop	r8
   1d964:	08 95       	ret

0001d966 <random>:
   1d966:	8f 92       	push	r8
   1d968:	9f 92       	push	r9
   1d96a:	af 92       	push	r10
   1d96c:	bf 92       	push	r11
   1d96e:	cf 92       	push	r12
   1d970:	df 92       	push	r13
   1d972:	ef 92       	push	r14
   1d974:	ff 92       	push	r15
   1d976:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <next>
   1d97a:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <next+0x1>
   1d97e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <next+0x2>
   1d982:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <next+0x3>
   1d986:	61 15       	cp	r22, r1
   1d988:	71 05       	cpc	r23, r1
   1d98a:	81 05       	cpc	r24, r1
   1d98c:	91 05       	cpc	r25, r1
   1d98e:	21 f4       	brne	.+8      	; 0x1d998 <random+0x32>
   1d990:	64 e2       	ldi	r22, 0x24	; 36
   1d992:	79 ed       	ldi	r23, 0xD9	; 217
   1d994:	8b e5       	ldi	r24, 0x5B	; 91
   1d996:	97 e0       	ldi	r25, 0x07	; 7
   1d998:	2d e1       	ldi	r18, 0x1D	; 29
   1d99a:	33 ef       	ldi	r19, 0xF3	; 243
   1d99c:	41 e0       	ldi	r20, 0x01	; 1
   1d99e:	50 e0       	ldi	r21, 0x00	; 0
   1d9a0:	30 de       	rcall	.-928    	; 0x1d602 <__divmodsi4>
   1d9a2:	49 01       	movw	r8, r18
   1d9a4:	5a 01       	movw	r10, r20
   1d9a6:	9b 01       	movw	r18, r22
   1d9a8:	ac 01       	movw	r20, r24
   1d9aa:	a7 ea       	ldi	r26, 0xA7	; 167
   1d9ac:	b1 e4       	ldi	r27, 0x41	; 65
   1d9ae:	5c de       	rcall	.-840    	; 0x1d668 <__muluhisi3>
   1d9b0:	6b 01       	movw	r12, r22
   1d9b2:	7c 01       	movw	r14, r24
   1d9b4:	ac ee       	ldi	r26, 0xEC	; 236
   1d9b6:	b4 ef       	ldi	r27, 0xF4	; 244
   1d9b8:	a5 01       	movw	r20, r10
   1d9ba:	94 01       	movw	r18, r8
   1d9bc:	74 d3       	rcall	.+1768   	; 0x1e0a6 <__mulohisi3>
   1d9be:	dc 01       	movw	r26, r24
   1d9c0:	cb 01       	movw	r24, r22
   1d9c2:	8c 0d       	add	r24, r12
   1d9c4:	9d 1d       	adc	r25, r13
   1d9c6:	ae 1d       	adc	r26, r14
   1d9c8:	bf 1d       	adc	r27, r15
   1d9ca:	b7 ff       	sbrs	r27, 7
   1d9cc:	03 c0       	rjmp	.+6      	; 0x1d9d4 <random+0x6e>
   1d9ce:	01 97       	sbiw	r24, 0x01	; 1
   1d9d0:	a1 09       	sbc	r26, r1
   1d9d2:	b0 48       	sbci	r27, 0x80	; 128
   1d9d4:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
   1d9d8:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
   1d9dc:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
   1d9e0:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
   1d9e4:	bc 01       	movw	r22, r24
   1d9e6:	cd 01       	movw	r24, r26
   1d9e8:	9f 77       	andi	r25, 0x7F	; 127
   1d9ea:	ff 90       	pop	r15
   1d9ec:	ef 90       	pop	r14
   1d9ee:	df 90       	pop	r13
   1d9f0:	cf 90       	pop	r12
   1d9f2:	bf 90       	pop	r11
   1d9f4:	af 90       	pop	r10
   1d9f6:	9f 90       	pop	r9
   1d9f8:	8f 90       	pop	r8
   1d9fa:	08 95       	ret

0001d9fc <srandom>:
   1d9fc:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <next>
   1da00:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <next+0x1>
   1da04:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <next+0x2>
   1da08:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <next+0x3>
   1da0c:	08 95       	ret

0001da0e <abort>:
   1da0e:	81 e0       	ldi	r24, 0x01	; 1
   1da10:	90 e0       	ldi	r25, 0x00	; 0
   1da12:	f8 94       	cli
   1da14:	4c c3       	rjmp	.+1688   	; 0x1e0ae <_exit>

0001da16 <memcpy_P>:
   1da16:	fb 01       	movw	r30, r22
   1da18:	dc 01       	movw	r26, r24
   1da1a:	02 c0       	rjmp	.+4      	; 0x1da20 <memcpy_P+0xa>
   1da1c:	05 90       	lpm	r0, Z+
   1da1e:	0d 92       	st	X+, r0
   1da20:	41 50       	subi	r20, 0x01	; 1
   1da22:	50 40       	sbci	r21, 0x00	; 0
   1da24:	d8 f7       	brcc	.-10     	; 0x1da1c <memcpy_P+0x6>
   1da26:	08 95       	ret

0001da28 <strcmp_P>:
   1da28:	fb 01       	movw	r30, r22
   1da2a:	dc 01       	movw	r26, r24
   1da2c:	8d 91       	ld	r24, X+
   1da2e:	05 90       	lpm	r0, Z+
   1da30:	80 19       	sub	r24, r0
   1da32:	01 10       	cpse	r0, r1
   1da34:	d9 f3       	breq	.-10     	; 0x1da2c <strcmp_P+0x4>
   1da36:	99 0b       	sbc	r25, r25
   1da38:	08 95       	ret

0001da3a <__strlen_P>:
   1da3a:	fc 01       	movw	r30, r24
   1da3c:	05 90       	lpm	r0, Z+
   1da3e:	00 20       	and	r0, r0
   1da40:	e9 f7       	brne	.-6      	; 0x1da3c <__strlen_P+0x2>
   1da42:	80 95       	com	r24
   1da44:	90 95       	com	r25
   1da46:	8e 0f       	add	r24, r30
   1da48:	9f 1f       	adc	r25, r31
   1da4a:	08 95       	ret

0001da4c <memcpy>:
   1da4c:	fb 01       	movw	r30, r22
   1da4e:	dc 01       	movw	r26, r24
   1da50:	02 c0       	rjmp	.+4      	; 0x1da56 <memcpy+0xa>
   1da52:	01 90       	ld	r0, Z+
   1da54:	0d 92       	st	X+, r0
   1da56:	41 50       	subi	r20, 0x01	; 1
   1da58:	50 40       	sbci	r21, 0x00	; 0
   1da5a:	d8 f7       	brcc	.-10     	; 0x1da52 <memcpy+0x6>
   1da5c:	08 95       	ret

0001da5e <memset>:
   1da5e:	dc 01       	movw	r26, r24
   1da60:	01 c0       	rjmp	.+2      	; 0x1da64 <memset+0x6>
   1da62:	6d 93       	st	X+, r22
   1da64:	41 50       	subi	r20, 0x01	; 1
   1da66:	50 40       	sbci	r21, 0x00	; 0
   1da68:	e0 f7       	brcc	.-8      	; 0x1da62 <memset+0x4>
   1da6a:	08 95       	ret

0001da6c <strcmp>:
   1da6c:	fb 01       	movw	r30, r22
   1da6e:	dc 01       	movw	r26, r24
   1da70:	8d 91       	ld	r24, X+
   1da72:	01 90       	ld	r0, Z+
   1da74:	80 19       	sub	r24, r0
   1da76:	01 10       	cpse	r0, r1
   1da78:	d9 f3       	breq	.-10     	; 0x1da70 <strcmp+0x4>
   1da7a:	99 0b       	sbc	r25, r25
   1da7c:	08 95       	ret

0001da7e <strcpy>:
   1da7e:	fb 01       	movw	r30, r22
   1da80:	dc 01       	movw	r26, r24
   1da82:	01 90       	ld	r0, Z+
   1da84:	0d 92       	st	X+, r0
   1da86:	00 20       	and	r0, r0
   1da88:	e1 f7       	brne	.-8      	; 0x1da82 <strcpy+0x4>
   1da8a:	08 95       	ret

0001da8c <strstr>:
   1da8c:	fb 01       	movw	r30, r22
   1da8e:	51 91       	ld	r21, Z+
   1da90:	55 23       	and	r21, r21
   1da92:	a9 f0       	breq	.+42     	; 0x1dabe <strstr+0x32>
   1da94:	bf 01       	movw	r22, r30
   1da96:	dc 01       	movw	r26, r24
   1da98:	4d 91       	ld	r20, X+
   1da9a:	45 17       	cp	r20, r21
   1da9c:	41 11       	cpse	r20, r1
   1da9e:	e1 f7       	brne	.-8      	; 0x1da98 <strstr+0xc>
   1daa0:	59 f4       	brne	.+22     	; 0x1dab8 <strstr+0x2c>
   1daa2:	cd 01       	movw	r24, r26
   1daa4:	01 90       	ld	r0, Z+
   1daa6:	00 20       	and	r0, r0
   1daa8:	49 f0       	breq	.+18     	; 0x1dabc <strstr+0x30>
   1daaa:	4d 91       	ld	r20, X+
   1daac:	40 15       	cp	r20, r0
   1daae:	41 11       	cpse	r20, r1
   1dab0:	c9 f3       	breq	.-14     	; 0x1daa4 <strstr+0x18>
   1dab2:	fb 01       	movw	r30, r22
   1dab4:	41 11       	cpse	r20, r1
   1dab6:	ef cf       	rjmp	.-34     	; 0x1da96 <strstr+0xa>
   1dab8:	81 e0       	ldi	r24, 0x01	; 1
   1daba:	90 e0       	ldi	r25, 0x00	; 0
   1dabc:	01 97       	sbiw	r24, 0x01	; 1
   1dabe:	08 95       	ret

0001dac0 <sprintf>:
   1dac0:	0f 93       	push	r16
   1dac2:	1f 93       	push	r17
   1dac4:	cf 93       	push	r28
   1dac6:	df 93       	push	r29
   1dac8:	cd b7       	in	r28, 0x3d	; 61
   1daca:	de b7       	in	r29, 0x3e	; 62
   1dacc:	2e 97       	sbiw	r28, 0x0e	; 14
   1dace:	0f b6       	in	r0, 0x3f	; 63
   1dad0:	f8 94       	cli
   1dad2:	de bf       	out	0x3e, r29	; 62
   1dad4:	0f be       	out	0x3f, r0	; 63
   1dad6:	cd bf       	out	0x3d, r28	; 61
   1dad8:	0e 89       	ldd	r16, Y+22	; 0x16
   1dada:	1f 89       	ldd	r17, Y+23	; 0x17
   1dadc:	86 e0       	ldi	r24, 0x06	; 6
   1dade:	8c 83       	std	Y+4, r24	; 0x04
   1dae0:	1a 83       	std	Y+2, r17	; 0x02
   1dae2:	09 83       	std	Y+1, r16	; 0x01
   1dae4:	8f ef       	ldi	r24, 0xFF	; 255
   1dae6:	9f e7       	ldi	r25, 0x7F	; 127
   1dae8:	9e 83       	std	Y+6, r25	; 0x06
   1daea:	8d 83       	std	Y+5, r24	; 0x05
   1daec:	ae 01       	movw	r20, r28
   1daee:	46 5e       	subi	r20, 0xE6	; 230
   1daf0:	5f 4f       	sbci	r21, 0xFF	; 255
   1daf2:	68 8d       	ldd	r22, Y+24	; 0x18
   1daf4:	79 8d       	ldd	r23, Y+25	; 0x19
   1daf6:	ce 01       	movw	r24, r28
   1daf8:	01 96       	adiw	r24, 0x01	; 1
   1dafa:	10 d0       	rcall	.+32     	; 0x1db1c <vfprintf>
   1dafc:	ef 81       	ldd	r30, Y+7	; 0x07
   1dafe:	f8 85       	ldd	r31, Y+8	; 0x08
   1db00:	e0 0f       	add	r30, r16
   1db02:	f1 1f       	adc	r31, r17
   1db04:	10 82       	st	Z, r1
   1db06:	2e 96       	adiw	r28, 0x0e	; 14
   1db08:	0f b6       	in	r0, 0x3f	; 63
   1db0a:	f8 94       	cli
   1db0c:	de bf       	out	0x3e, r29	; 62
   1db0e:	0f be       	out	0x3f, r0	; 63
   1db10:	cd bf       	out	0x3d, r28	; 61
   1db12:	df 91       	pop	r29
   1db14:	cf 91       	pop	r28
   1db16:	1f 91       	pop	r17
   1db18:	0f 91       	pop	r16
   1db1a:	08 95       	ret

0001db1c <vfprintf>:
   1db1c:	2f 92       	push	r2
   1db1e:	3f 92       	push	r3
   1db20:	4f 92       	push	r4
   1db22:	5f 92       	push	r5
   1db24:	6f 92       	push	r6
   1db26:	7f 92       	push	r7
   1db28:	8f 92       	push	r8
   1db2a:	9f 92       	push	r9
   1db2c:	af 92       	push	r10
   1db2e:	bf 92       	push	r11
   1db30:	cf 92       	push	r12
   1db32:	df 92       	push	r13
   1db34:	ef 92       	push	r14
   1db36:	ff 92       	push	r15
   1db38:	0f 93       	push	r16
   1db3a:	1f 93       	push	r17
   1db3c:	cf 93       	push	r28
   1db3e:	df 93       	push	r29
   1db40:	cd b7       	in	r28, 0x3d	; 61
   1db42:	de b7       	in	r29, 0x3e	; 62
   1db44:	2b 97       	sbiw	r28, 0x0b	; 11
   1db46:	0f b6       	in	r0, 0x3f	; 63
   1db48:	f8 94       	cli
   1db4a:	de bf       	out	0x3e, r29	; 62
   1db4c:	0f be       	out	0x3f, r0	; 63
   1db4e:	cd bf       	out	0x3d, r28	; 61
   1db50:	6c 01       	movw	r12, r24
   1db52:	7b 01       	movw	r14, r22
   1db54:	8a 01       	movw	r16, r20
   1db56:	fc 01       	movw	r30, r24
   1db58:	17 82       	std	Z+7, r1	; 0x07
   1db5a:	16 82       	std	Z+6, r1	; 0x06
   1db5c:	83 81       	ldd	r24, Z+3	; 0x03
   1db5e:	81 ff       	sbrs	r24, 1
   1db60:	bf c1       	rjmp	.+894    	; 0x1dee0 <vfprintf+0x3c4>
   1db62:	ce 01       	movw	r24, r28
   1db64:	01 96       	adiw	r24, 0x01	; 1
   1db66:	3c 01       	movw	r6, r24
   1db68:	f6 01       	movw	r30, r12
   1db6a:	93 81       	ldd	r25, Z+3	; 0x03
   1db6c:	f7 01       	movw	r30, r14
   1db6e:	93 fd       	sbrc	r25, 3
   1db70:	85 91       	lpm	r24, Z+
   1db72:	93 ff       	sbrs	r25, 3
   1db74:	81 91       	ld	r24, Z+
   1db76:	7f 01       	movw	r14, r30
   1db78:	88 23       	and	r24, r24
   1db7a:	09 f4       	brne	.+2      	; 0x1db7e <vfprintf+0x62>
   1db7c:	ad c1       	rjmp	.+858    	; 0x1ded8 <vfprintf+0x3bc>
   1db7e:	85 32       	cpi	r24, 0x25	; 37
   1db80:	39 f4       	brne	.+14     	; 0x1db90 <vfprintf+0x74>
   1db82:	93 fd       	sbrc	r25, 3
   1db84:	85 91       	lpm	r24, Z+
   1db86:	93 ff       	sbrs	r25, 3
   1db88:	81 91       	ld	r24, Z+
   1db8a:	7f 01       	movw	r14, r30
   1db8c:	85 32       	cpi	r24, 0x25	; 37
   1db8e:	21 f4       	brne	.+8      	; 0x1db98 <vfprintf+0x7c>
   1db90:	b6 01       	movw	r22, r12
   1db92:	90 e0       	ldi	r25, 0x00	; 0
   1db94:	d6 d1       	rcall	.+940    	; 0x1df42 <fputc>
   1db96:	e8 cf       	rjmp	.-48     	; 0x1db68 <vfprintf+0x4c>
   1db98:	91 2c       	mov	r9, r1
   1db9a:	21 2c       	mov	r2, r1
   1db9c:	31 2c       	mov	r3, r1
   1db9e:	ff e1       	ldi	r31, 0x1F	; 31
   1dba0:	f3 15       	cp	r31, r3
   1dba2:	d8 f0       	brcs	.+54     	; 0x1dbda <vfprintf+0xbe>
   1dba4:	8b 32       	cpi	r24, 0x2B	; 43
   1dba6:	79 f0       	breq	.+30     	; 0x1dbc6 <vfprintf+0xaa>
   1dba8:	38 f4       	brcc	.+14     	; 0x1dbb8 <vfprintf+0x9c>
   1dbaa:	80 32       	cpi	r24, 0x20	; 32
   1dbac:	79 f0       	breq	.+30     	; 0x1dbcc <vfprintf+0xb0>
   1dbae:	83 32       	cpi	r24, 0x23	; 35
   1dbb0:	a1 f4       	brne	.+40     	; 0x1dbda <vfprintf+0xbe>
   1dbb2:	23 2d       	mov	r18, r3
   1dbb4:	20 61       	ori	r18, 0x10	; 16
   1dbb6:	1d c0       	rjmp	.+58     	; 0x1dbf2 <vfprintf+0xd6>
   1dbb8:	8d 32       	cpi	r24, 0x2D	; 45
   1dbba:	61 f0       	breq	.+24     	; 0x1dbd4 <vfprintf+0xb8>
   1dbbc:	80 33       	cpi	r24, 0x30	; 48
   1dbbe:	69 f4       	brne	.+26     	; 0x1dbda <vfprintf+0xbe>
   1dbc0:	23 2d       	mov	r18, r3
   1dbc2:	21 60       	ori	r18, 0x01	; 1
   1dbc4:	16 c0       	rjmp	.+44     	; 0x1dbf2 <vfprintf+0xd6>
   1dbc6:	83 2d       	mov	r24, r3
   1dbc8:	82 60       	ori	r24, 0x02	; 2
   1dbca:	38 2e       	mov	r3, r24
   1dbcc:	e3 2d       	mov	r30, r3
   1dbce:	e4 60       	ori	r30, 0x04	; 4
   1dbd0:	3e 2e       	mov	r3, r30
   1dbd2:	2a c0       	rjmp	.+84     	; 0x1dc28 <vfprintf+0x10c>
   1dbd4:	f3 2d       	mov	r31, r3
   1dbd6:	f8 60       	ori	r31, 0x08	; 8
   1dbd8:	1d c0       	rjmp	.+58     	; 0x1dc14 <vfprintf+0xf8>
   1dbda:	37 fc       	sbrc	r3, 7
   1dbdc:	2d c0       	rjmp	.+90     	; 0x1dc38 <vfprintf+0x11c>
   1dbde:	20 ed       	ldi	r18, 0xD0	; 208
   1dbe0:	28 0f       	add	r18, r24
   1dbe2:	2a 30       	cpi	r18, 0x0A	; 10
   1dbe4:	40 f0       	brcs	.+16     	; 0x1dbf6 <vfprintf+0xda>
   1dbe6:	8e 32       	cpi	r24, 0x2E	; 46
   1dbe8:	b9 f4       	brne	.+46     	; 0x1dc18 <vfprintf+0xfc>
   1dbea:	36 fc       	sbrc	r3, 6
   1dbec:	75 c1       	rjmp	.+746    	; 0x1ded8 <vfprintf+0x3bc>
   1dbee:	23 2d       	mov	r18, r3
   1dbf0:	20 64       	ori	r18, 0x40	; 64
   1dbf2:	32 2e       	mov	r3, r18
   1dbf4:	19 c0       	rjmp	.+50     	; 0x1dc28 <vfprintf+0x10c>
   1dbf6:	36 fe       	sbrs	r3, 6
   1dbf8:	06 c0       	rjmp	.+12     	; 0x1dc06 <vfprintf+0xea>
   1dbfa:	8a e0       	ldi	r24, 0x0A	; 10
   1dbfc:	98 9e       	mul	r9, r24
   1dbfe:	20 0d       	add	r18, r0
   1dc00:	11 24       	eor	r1, r1
   1dc02:	92 2e       	mov	r9, r18
   1dc04:	11 c0       	rjmp	.+34     	; 0x1dc28 <vfprintf+0x10c>
   1dc06:	ea e0       	ldi	r30, 0x0A	; 10
   1dc08:	2e 9e       	mul	r2, r30
   1dc0a:	20 0d       	add	r18, r0
   1dc0c:	11 24       	eor	r1, r1
   1dc0e:	22 2e       	mov	r2, r18
   1dc10:	f3 2d       	mov	r31, r3
   1dc12:	f0 62       	ori	r31, 0x20	; 32
   1dc14:	3f 2e       	mov	r3, r31
   1dc16:	08 c0       	rjmp	.+16     	; 0x1dc28 <vfprintf+0x10c>
   1dc18:	8c 36       	cpi	r24, 0x6C	; 108
   1dc1a:	21 f4       	brne	.+8      	; 0x1dc24 <vfprintf+0x108>
   1dc1c:	83 2d       	mov	r24, r3
   1dc1e:	80 68       	ori	r24, 0x80	; 128
   1dc20:	38 2e       	mov	r3, r24
   1dc22:	02 c0       	rjmp	.+4      	; 0x1dc28 <vfprintf+0x10c>
   1dc24:	88 36       	cpi	r24, 0x68	; 104
   1dc26:	41 f4       	brne	.+16     	; 0x1dc38 <vfprintf+0x11c>
   1dc28:	f7 01       	movw	r30, r14
   1dc2a:	93 fd       	sbrc	r25, 3
   1dc2c:	85 91       	lpm	r24, Z+
   1dc2e:	93 ff       	sbrs	r25, 3
   1dc30:	81 91       	ld	r24, Z+
   1dc32:	7f 01       	movw	r14, r30
   1dc34:	81 11       	cpse	r24, r1
   1dc36:	b3 cf       	rjmp	.-154    	; 0x1db9e <vfprintf+0x82>
   1dc38:	98 2f       	mov	r25, r24
   1dc3a:	9f 7d       	andi	r25, 0xDF	; 223
   1dc3c:	95 54       	subi	r25, 0x45	; 69
   1dc3e:	93 30       	cpi	r25, 0x03	; 3
   1dc40:	28 f4       	brcc	.+10     	; 0x1dc4c <vfprintf+0x130>
   1dc42:	0c 5f       	subi	r16, 0xFC	; 252
   1dc44:	1f 4f       	sbci	r17, 0xFF	; 255
   1dc46:	9f e3       	ldi	r25, 0x3F	; 63
   1dc48:	99 83       	std	Y+1, r25	; 0x01
   1dc4a:	0d c0       	rjmp	.+26     	; 0x1dc66 <vfprintf+0x14a>
   1dc4c:	83 36       	cpi	r24, 0x63	; 99
   1dc4e:	31 f0       	breq	.+12     	; 0x1dc5c <vfprintf+0x140>
   1dc50:	83 37       	cpi	r24, 0x73	; 115
   1dc52:	71 f0       	breq	.+28     	; 0x1dc70 <vfprintf+0x154>
   1dc54:	83 35       	cpi	r24, 0x53	; 83
   1dc56:	09 f0       	breq	.+2      	; 0x1dc5a <vfprintf+0x13e>
   1dc58:	55 c0       	rjmp	.+170    	; 0x1dd04 <vfprintf+0x1e8>
   1dc5a:	20 c0       	rjmp	.+64     	; 0x1dc9c <vfprintf+0x180>
   1dc5c:	f8 01       	movw	r30, r16
   1dc5e:	80 81       	ld	r24, Z
   1dc60:	89 83       	std	Y+1, r24	; 0x01
   1dc62:	0e 5f       	subi	r16, 0xFE	; 254
   1dc64:	1f 4f       	sbci	r17, 0xFF	; 255
   1dc66:	88 24       	eor	r8, r8
   1dc68:	83 94       	inc	r8
   1dc6a:	91 2c       	mov	r9, r1
   1dc6c:	53 01       	movw	r10, r6
   1dc6e:	12 c0       	rjmp	.+36     	; 0x1dc94 <vfprintf+0x178>
   1dc70:	28 01       	movw	r4, r16
   1dc72:	f2 e0       	ldi	r31, 0x02	; 2
   1dc74:	4f 0e       	add	r4, r31
   1dc76:	51 1c       	adc	r5, r1
   1dc78:	f8 01       	movw	r30, r16
   1dc7a:	a0 80       	ld	r10, Z
   1dc7c:	b1 80       	ldd	r11, Z+1	; 0x01
   1dc7e:	36 fe       	sbrs	r3, 6
   1dc80:	03 c0       	rjmp	.+6      	; 0x1dc88 <vfprintf+0x16c>
   1dc82:	69 2d       	mov	r22, r9
   1dc84:	70 e0       	ldi	r23, 0x00	; 0
   1dc86:	02 c0       	rjmp	.+4      	; 0x1dc8c <vfprintf+0x170>
   1dc88:	6f ef       	ldi	r22, 0xFF	; 255
   1dc8a:	7f ef       	ldi	r23, 0xFF	; 255
   1dc8c:	c5 01       	movw	r24, r10
   1dc8e:	4e d1       	rcall	.+668    	; 0x1df2c <strnlen>
   1dc90:	4c 01       	movw	r8, r24
   1dc92:	82 01       	movw	r16, r4
   1dc94:	f3 2d       	mov	r31, r3
   1dc96:	ff 77       	andi	r31, 0x7F	; 127
   1dc98:	3f 2e       	mov	r3, r31
   1dc9a:	15 c0       	rjmp	.+42     	; 0x1dcc6 <vfprintf+0x1aa>
   1dc9c:	28 01       	movw	r4, r16
   1dc9e:	22 e0       	ldi	r18, 0x02	; 2
   1dca0:	42 0e       	add	r4, r18
   1dca2:	51 1c       	adc	r5, r1
   1dca4:	f8 01       	movw	r30, r16
   1dca6:	a0 80       	ld	r10, Z
   1dca8:	b1 80       	ldd	r11, Z+1	; 0x01
   1dcaa:	36 fe       	sbrs	r3, 6
   1dcac:	03 c0       	rjmp	.+6      	; 0x1dcb4 <vfprintf+0x198>
   1dcae:	69 2d       	mov	r22, r9
   1dcb0:	70 e0       	ldi	r23, 0x00	; 0
   1dcb2:	02 c0       	rjmp	.+4      	; 0x1dcb8 <vfprintf+0x19c>
   1dcb4:	6f ef       	ldi	r22, 0xFF	; 255
   1dcb6:	7f ef       	ldi	r23, 0xFF	; 255
   1dcb8:	c5 01       	movw	r24, r10
   1dcba:	2d d1       	rcall	.+602    	; 0x1df16 <strnlen_P>
   1dcbc:	4c 01       	movw	r8, r24
   1dcbe:	f3 2d       	mov	r31, r3
   1dcc0:	f0 68       	ori	r31, 0x80	; 128
   1dcc2:	3f 2e       	mov	r3, r31
   1dcc4:	82 01       	movw	r16, r4
   1dcc6:	33 fc       	sbrc	r3, 3
   1dcc8:	19 c0       	rjmp	.+50     	; 0x1dcfc <vfprintf+0x1e0>
   1dcca:	82 2d       	mov	r24, r2
   1dccc:	90 e0       	ldi	r25, 0x00	; 0
   1dcce:	88 16       	cp	r8, r24
   1dcd0:	99 06       	cpc	r9, r25
   1dcd2:	a0 f4       	brcc	.+40     	; 0x1dcfc <vfprintf+0x1e0>
   1dcd4:	b6 01       	movw	r22, r12
   1dcd6:	80 e2       	ldi	r24, 0x20	; 32
   1dcd8:	90 e0       	ldi	r25, 0x00	; 0
   1dcda:	33 d1       	rcall	.+614    	; 0x1df42 <fputc>
   1dcdc:	2a 94       	dec	r2
   1dcde:	f5 cf       	rjmp	.-22     	; 0x1dcca <vfprintf+0x1ae>
   1dce0:	f5 01       	movw	r30, r10
   1dce2:	37 fc       	sbrc	r3, 7
   1dce4:	85 91       	lpm	r24, Z+
   1dce6:	37 fe       	sbrs	r3, 7
   1dce8:	81 91       	ld	r24, Z+
   1dcea:	5f 01       	movw	r10, r30
   1dcec:	b6 01       	movw	r22, r12
   1dcee:	90 e0       	ldi	r25, 0x00	; 0
   1dcf0:	28 d1       	rcall	.+592    	; 0x1df42 <fputc>
   1dcf2:	21 10       	cpse	r2, r1
   1dcf4:	2a 94       	dec	r2
   1dcf6:	21 e0       	ldi	r18, 0x01	; 1
   1dcf8:	82 1a       	sub	r8, r18
   1dcfa:	91 08       	sbc	r9, r1
   1dcfc:	81 14       	cp	r8, r1
   1dcfe:	91 04       	cpc	r9, r1
   1dd00:	79 f7       	brne	.-34     	; 0x1dce0 <vfprintf+0x1c4>
   1dd02:	e1 c0       	rjmp	.+450    	; 0x1dec6 <vfprintf+0x3aa>
   1dd04:	84 36       	cpi	r24, 0x64	; 100
   1dd06:	11 f0       	breq	.+4      	; 0x1dd0c <vfprintf+0x1f0>
   1dd08:	89 36       	cpi	r24, 0x69	; 105
   1dd0a:	39 f5       	brne	.+78     	; 0x1dd5a <vfprintf+0x23e>
   1dd0c:	f8 01       	movw	r30, r16
   1dd0e:	37 fe       	sbrs	r3, 7
   1dd10:	07 c0       	rjmp	.+14     	; 0x1dd20 <vfprintf+0x204>
   1dd12:	60 81       	ld	r22, Z
   1dd14:	71 81       	ldd	r23, Z+1	; 0x01
   1dd16:	82 81       	ldd	r24, Z+2	; 0x02
   1dd18:	93 81       	ldd	r25, Z+3	; 0x03
   1dd1a:	0c 5f       	subi	r16, 0xFC	; 252
   1dd1c:	1f 4f       	sbci	r17, 0xFF	; 255
   1dd1e:	08 c0       	rjmp	.+16     	; 0x1dd30 <vfprintf+0x214>
   1dd20:	60 81       	ld	r22, Z
   1dd22:	71 81       	ldd	r23, Z+1	; 0x01
   1dd24:	07 2e       	mov	r0, r23
   1dd26:	00 0c       	add	r0, r0
   1dd28:	88 0b       	sbc	r24, r24
   1dd2a:	99 0b       	sbc	r25, r25
   1dd2c:	0e 5f       	subi	r16, 0xFE	; 254
   1dd2e:	1f 4f       	sbci	r17, 0xFF	; 255
   1dd30:	f3 2d       	mov	r31, r3
   1dd32:	ff 76       	andi	r31, 0x6F	; 111
   1dd34:	3f 2e       	mov	r3, r31
   1dd36:	97 ff       	sbrs	r25, 7
   1dd38:	09 c0       	rjmp	.+18     	; 0x1dd4c <vfprintf+0x230>
   1dd3a:	90 95       	com	r25
   1dd3c:	80 95       	com	r24
   1dd3e:	70 95       	com	r23
   1dd40:	61 95       	neg	r22
   1dd42:	7f 4f       	sbci	r23, 0xFF	; 255
   1dd44:	8f 4f       	sbci	r24, 0xFF	; 255
   1dd46:	9f 4f       	sbci	r25, 0xFF	; 255
   1dd48:	f0 68       	ori	r31, 0x80	; 128
   1dd4a:	3f 2e       	mov	r3, r31
   1dd4c:	2a e0       	ldi	r18, 0x0A	; 10
   1dd4e:	30 e0       	ldi	r19, 0x00	; 0
   1dd50:	a3 01       	movw	r20, r6
   1dd52:	33 d1       	rcall	.+614    	; 0x1dfba <__ultoa_invert>
   1dd54:	88 2e       	mov	r8, r24
   1dd56:	86 18       	sub	r8, r6
   1dd58:	44 c0       	rjmp	.+136    	; 0x1dde2 <vfprintf+0x2c6>
   1dd5a:	85 37       	cpi	r24, 0x75	; 117
   1dd5c:	31 f4       	brne	.+12     	; 0x1dd6a <vfprintf+0x24e>
   1dd5e:	23 2d       	mov	r18, r3
   1dd60:	2f 7e       	andi	r18, 0xEF	; 239
   1dd62:	b2 2e       	mov	r11, r18
   1dd64:	2a e0       	ldi	r18, 0x0A	; 10
   1dd66:	30 e0       	ldi	r19, 0x00	; 0
   1dd68:	25 c0       	rjmp	.+74     	; 0x1ddb4 <vfprintf+0x298>
   1dd6a:	93 2d       	mov	r25, r3
   1dd6c:	99 7f       	andi	r25, 0xF9	; 249
   1dd6e:	b9 2e       	mov	r11, r25
   1dd70:	8f 36       	cpi	r24, 0x6F	; 111
   1dd72:	c1 f0       	breq	.+48     	; 0x1dda4 <vfprintf+0x288>
   1dd74:	18 f4       	brcc	.+6      	; 0x1dd7c <vfprintf+0x260>
   1dd76:	88 35       	cpi	r24, 0x58	; 88
   1dd78:	79 f0       	breq	.+30     	; 0x1dd98 <vfprintf+0x27c>
   1dd7a:	ae c0       	rjmp	.+348    	; 0x1ded8 <vfprintf+0x3bc>
   1dd7c:	80 37       	cpi	r24, 0x70	; 112
   1dd7e:	19 f0       	breq	.+6      	; 0x1dd86 <vfprintf+0x26a>
   1dd80:	88 37       	cpi	r24, 0x78	; 120
   1dd82:	21 f0       	breq	.+8      	; 0x1dd8c <vfprintf+0x270>
   1dd84:	a9 c0       	rjmp	.+338    	; 0x1ded8 <vfprintf+0x3bc>
   1dd86:	e9 2f       	mov	r30, r25
   1dd88:	e0 61       	ori	r30, 0x10	; 16
   1dd8a:	be 2e       	mov	r11, r30
   1dd8c:	b4 fe       	sbrs	r11, 4
   1dd8e:	0d c0       	rjmp	.+26     	; 0x1ddaa <vfprintf+0x28e>
   1dd90:	fb 2d       	mov	r31, r11
   1dd92:	f4 60       	ori	r31, 0x04	; 4
   1dd94:	bf 2e       	mov	r11, r31
   1dd96:	09 c0       	rjmp	.+18     	; 0x1ddaa <vfprintf+0x28e>
   1dd98:	34 fe       	sbrs	r3, 4
   1dd9a:	0a c0       	rjmp	.+20     	; 0x1ddb0 <vfprintf+0x294>
   1dd9c:	29 2f       	mov	r18, r25
   1dd9e:	26 60       	ori	r18, 0x06	; 6
   1dda0:	b2 2e       	mov	r11, r18
   1dda2:	06 c0       	rjmp	.+12     	; 0x1ddb0 <vfprintf+0x294>
   1dda4:	28 e0       	ldi	r18, 0x08	; 8
   1dda6:	30 e0       	ldi	r19, 0x00	; 0
   1dda8:	05 c0       	rjmp	.+10     	; 0x1ddb4 <vfprintf+0x298>
   1ddaa:	20 e1       	ldi	r18, 0x10	; 16
   1ddac:	30 e0       	ldi	r19, 0x00	; 0
   1ddae:	02 c0       	rjmp	.+4      	; 0x1ddb4 <vfprintf+0x298>
   1ddb0:	20 e1       	ldi	r18, 0x10	; 16
   1ddb2:	32 e0       	ldi	r19, 0x02	; 2
   1ddb4:	f8 01       	movw	r30, r16
   1ddb6:	b7 fe       	sbrs	r11, 7
   1ddb8:	07 c0       	rjmp	.+14     	; 0x1ddc8 <vfprintf+0x2ac>
   1ddba:	60 81       	ld	r22, Z
   1ddbc:	71 81       	ldd	r23, Z+1	; 0x01
   1ddbe:	82 81       	ldd	r24, Z+2	; 0x02
   1ddc0:	93 81       	ldd	r25, Z+3	; 0x03
   1ddc2:	0c 5f       	subi	r16, 0xFC	; 252
   1ddc4:	1f 4f       	sbci	r17, 0xFF	; 255
   1ddc6:	06 c0       	rjmp	.+12     	; 0x1ddd4 <vfprintf+0x2b8>
   1ddc8:	60 81       	ld	r22, Z
   1ddca:	71 81       	ldd	r23, Z+1	; 0x01
   1ddcc:	80 e0       	ldi	r24, 0x00	; 0
   1ddce:	90 e0       	ldi	r25, 0x00	; 0
   1ddd0:	0e 5f       	subi	r16, 0xFE	; 254
   1ddd2:	1f 4f       	sbci	r17, 0xFF	; 255
   1ddd4:	a3 01       	movw	r20, r6
   1ddd6:	f1 d0       	rcall	.+482    	; 0x1dfba <__ultoa_invert>
   1ddd8:	88 2e       	mov	r8, r24
   1ddda:	86 18       	sub	r8, r6
   1dddc:	fb 2d       	mov	r31, r11
   1ddde:	ff 77       	andi	r31, 0x7F	; 127
   1dde0:	3f 2e       	mov	r3, r31
   1dde2:	36 fe       	sbrs	r3, 6
   1dde4:	0d c0       	rjmp	.+26     	; 0x1de00 <vfprintf+0x2e4>
   1dde6:	23 2d       	mov	r18, r3
   1dde8:	2e 7f       	andi	r18, 0xFE	; 254
   1ddea:	a2 2e       	mov	r10, r18
   1ddec:	89 14       	cp	r8, r9
   1ddee:	58 f4       	brcc	.+22     	; 0x1de06 <vfprintf+0x2ea>
   1ddf0:	34 fe       	sbrs	r3, 4
   1ddf2:	0b c0       	rjmp	.+22     	; 0x1de0a <vfprintf+0x2ee>
   1ddf4:	32 fc       	sbrc	r3, 2
   1ddf6:	09 c0       	rjmp	.+18     	; 0x1de0a <vfprintf+0x2ee>
   1ddf8:	83 2d       	mov	r24, r3
   1ddfa:	8e 7e       	andi	r24, 0xEE	; 238
   1ddfc:	a8 2e       	mov	r10, r24
   1ddfe:	05 c0       	rjmp	.+10     	; 0x1de0a <vfprintf+0x2ee>
   1de00:	b8 2c       	mov	r11, r8
   1de02:	a3 2c       	mov	r10, r3
   1de04:	03 c0       	rjmp	.+6      	; 0x1de0c <vfprintf+0x2f0>
   1de06:	b8 2c       	mov	r11, r8
   1de08:	01 c0       	rjmp	.+2      	; 0x1de0c <vfprintf+0x2f0>
   1de0a:	b9 2c       	mov	r11, r9
   1de0c:	a4 fe       	sbrs	r10, 4
   1de0e:	0f c0       	rjmp	.+30     	; 0x1de2e <vfprintf+0x312>
   1de10:	fe 01       	movw	r30, r28
   1de12:	e8 0d       	add	r30, r8
   1de14:	f1 1d       	adc	r31, r1
   1de16:	80 81       	ld	r24, Z
   1de18:	80 33       	cpi	r24, 0x30	; 48
   1de1a:	21 f4       	brne	.+8      	; 0x1de24 <vfprintf+0x308>
   1de1c:	9a 2d       	mov	r25, r10
   1de1e:	99 7e       	andi	r25, 0xE9	; 233
   1de20:	a9 2e       	mov	r10, r25
   1de22:	09 c0       	rjmp	.+18     	; 0x1de36 <vfprintf+0x31a>
   1de24:	a2 fe       	sbrs	r10, 2
   1de26:	06 c0       	rjmp	.+12     	; 0x1de34 <vfprintf+0x318>
   1de28:	b3 94       	inc	r11
   1de2a:	b3 94       	inc	r11
   1de2c:	04 c0       	rjmp	.+8      	; 0x1de36 <vfprintf+0x31a>
   1de2e:	8a 2d       	mov	r24, r10
   1de30:	86 78       	andi	r24, 0x86	; 134
   1de32:	09 f0       	breq	.+2      	; 0x1de36 <vfprintf+0x31a>
   1de34:	b3 94       	inc	r11
   1de36:	a3 fc       	sbrc	r10, 3
   1de38:	10 c0       	rjmp	.+32     	; 0x1de5a <vfprintf+0x33e>
   1de3a:	a0 fe       	sbrs	r10, 0
   1de3c:	06 c0       	rjmp	.+12     	; 0x1de4a <vfprintf+0x32e>
   1de3e:	b2 14       	cp	r11, r2
   1de40:	80 f4       	brcc	.+32     	; 0x1de62 <vfprintf+0x346>
   1de42:	28 0c       	add	r2, r8
   1de44:	92 2c       	mov	r9, r2
   1de46:	9b 18       	sub	r9, r11
   1de48:	0d c0       	rjmp	.+26     	; 0x1de64 <vfprintf+0x348>
   1de4a:	b2 14       	cp	r11, r2
   1de4c:	58 f4       	brcc	.+22     	; 0x1de64 <vfprintf+0x348>
   1de4e:	b6 01       	movw	r22, r12
   1de50:	80 e2       	ldi	r24, 0x20	; 32
   1de52:	90 e0       	ldi	r25, 0x00	; 0
   1de54:	76 d0       	rcall	.+236    	; 0x1df42 <fputc>
   1de56:	b3 94       	inc	r11
   1de58:	f8 cf       	rjmp	.-16     	; 0x1de4a <vfprintf+0x32e>
   1de5a:	b2 14       	cp	r11, r2
   1de5c:	18 f4       	brcc	.+6      	; 0x1de64 <vfprintf+0x348>
   1de5e:	2b 18       	sub	r2, r11
   1de60:	02 c0       	rjmp	.+4      	; 0x1de66 <vfprintf+0x34a>
   1de62:	98 2c       	mov	r9, r8
   1de64:	21 2c       	mov	r2, r1
   1de66:	a4 fe       	sbrs	r10, 4
   1de68:	0f c0       	rjmp	.+30     	; 0x1de88 <vfprintf+0x36c>
   1de6a:	b6 01       	movw	r22, r12
   1de6c:	80 e3       	ldi	r24, 0x30	; 48
   1de6e:	90 e0       	ldi	r25, 0x00	; 0
   1de70:	68 d0       	rcall	.+208    	; 0x1df42 <fputc>
   1de72:	a2 fe       	sbrs	r10, 2
   1de74:	16 c0       	rjmp	.+44     	; 0x1dea2 <vfprintf+0x386>
   1de76:	a1 fc       	sbrc	r10, 1
   1de78:	03 c0       	rjmp	.+6      	; 0x1de80 <vfprintf+0x364>
   1de7a:	88 e7       	ldi	r24, 0x78	; 120
   1de7c:	90 e0       	ldi	r25, 0x00	; 0
   1de7e:	02 c0       	rjmp	.+4      	; 0x1de84 <vfprintf+0x368>
   1de80:	88 e5       	ldi	r24, 0x58	; 88
   1de82:	90 e0       	ldi	r25, 0x00	; 0
   1de84:	b6 01       	movw	r22, r12
   1de86:	0c c0       	rjmp	.+24     	; 0x1dea0 <vfprintf+0x384>
   1de88:	8a 2d       	mov	r24, r10
   1de8a:	86 78       	andi	r24, 0x86	; 134
   1de8c:	51 f0       	breq	.+20     	; 0x1dea2 <vfprintf+0x386>
   1de8e:	a1 fe       	sbrs	r10, 1
   1de90:	02 c0       	rjmp	.+4      	; 0x1de96 <vfprintf+0x37a>
   1de92:	8b e2       	ldi	r24, 0x2B	; 43
   1de94:	01 c0       	rjmp	.+2      	; 0x1de98 <vfprintf+0x37c>
   1de96:	80 e2       	ldi	r24, 0x20	; 32
   1de98:	a7 fc       	sbrc	r10, 7
   1de9a:	8d e2       	ldi	r24, 0x2D	; 45
   1de9c:	b6 01       	movw	r22, r12
   1de9e:	90 e0       	ldi	r25, 0x00	; 0
   1dea0:	50 d0       	rcall	.+160    	; 0x1df42 <fputc>
   1dea2:	89 14       	cp	r8, r9
   1dea4:	30 f4       	brcc	.+12     	; 0x1deb2 <vfprintf+0x396>
   1dea6:	b6 01       	movw	r22, r12
   1dea8:	80 e3       	ldi	r24, 0x30	; 48
   1deaa:	90 e0       	ldi	r25, 0x00	; 0
   1deac:	4a d0       	rcall	.+148    	; 0x1df42 <fputc>
   1deae:	9a 94       	dec	r9
   1deb0:	f8 cf       	rjmp	.-16     	; 0x1dea2 <vfprintf+0x386>
   1deb2:	8a 94       	dec	r8
   1deb4:	f3 01       	movw	r30, r6
   1deb6:	e8 0d       	add	r30, r8
   1deb8:	f1 1d       	adc	r31, r1
   1deba:	80 81       	ld	r24, Z
   1debc:	b6 01       	movw	r22, r12
   1debe:	90 e0       	ldi	r25, 0x00	; 0
   1dec0:	40 d0       	rcall	.+128    	; 0x1df42 <fputc>
   1dec2:	81 10       	cpse	r8, r1
   1dec4:	f6 cf       	rjmp	.-20     	; 0x1deb2 <vfprintf+0x396>
   1dec6:	22 20       	and	r2, r2
   1dec8:	09 f4       	brne	.+2      	; 0x1decc <vfprintf+0x3b0>
   1deca:	4e ce       	rjmp	.-868    	; 0x1db68 <vfprintf+0x4c>
   1decc:	b6 01       	movw	r22, r12
   1dece:	80 e2       	ldi	r24, 0x20	; 32
   1ded0:	90 e0       	ldi	r25, 0x00	; 0
   1ded2:	37 d0       	rcall	.+110    	; 0x1df42 <fputc>
   1ded4:	2a 94       	dec	r2
   1ded6:	f7 cf       	rjmp	.-18     	; 0x1dec6 <vfprintf+0x3aa>
   1ded8:	f6 01       	movw	r30, r12
   1deda:	86 81       	ldd	r24, Z+6	; 0x06
   1dedc:	97 81       	ldd	r25, Z+7	; 0x07
   1dede:	02 c0       	rjmp	.+4      	; 0x1dee4 <vfprintf+0x3c8>
   1dee0:	8f ef       	ldi	r24, 0xFF	; 255
   1dee2:	9f ef       	ldi	r25, 0xFF	; 255
   1dee4:	2b 96       	adiw	r28, 0x0b	; 11
   1dee6:	0f b6       	in	r0, 0x3f	; 63
   1dee8:	f8 94       	cli
   1deea:	de bf       	out	0x3e, r29	; 62
   1deec:	0f be       	out	0x3f, r0	; 63
   1deee:	cd bf       	out	0x3d, r28	; 61
   1def0:	df 91       	pop	r29
   1def2:	cf 91       	pop	r28
   1def4:	1f 91       	pop	r17
   1def6:	0f 91       	pop	r16
   1def8:	ff 90       	pop	r15
   1defa:	ef 90       	pop	r14
   1defc:	df 90       	pop	r13
   1defe:	cf 90       	pop	r12
   1df00:	bf 90       	pop	r11
   1df02:	af 90       	pop	r10
   1df04:	9f 90       	pop	r9
   1df06:	8f 90       	pop	r8
   1df08:	7f 90       	pop	r7
   1df0a:	6f 90       	pop	r6
   1df0c:	5f 90       	pop	r5
   1df0e:	4f 90       	pop	r4
   1df10:	3f 90       	pop	r3
   1df12:	2f 90       	pop	r2
   1df14:	08 95       	ret

0001df16 <strnlen_P>:
   1df16:	fc 01       	movw	r30, r24
   1df18:	05 90       	lpm	r0, Z+
   1df1a:	61 50       	subi	r22, 0x01	; 1
   1df1c:	70 40       	sbci	r23, 0x00	; 0
   1df1e:	01 10       	cpse	r0, r1
   1df20:	d8 f7       	brcc	.-10     	; 0x1df18 <strnlen_P+0x2>
   1df22:	80 95       	com	r24
   1df24:	90 95       	com	r25
   1df26:	8e 0f       	add	r24, r30
   1df28:	9f 1f       	adc	r25, r31
   1df2a:	08 95       	ret

0001df2c <strnlen>:
   1df2c:	fc 01       	movw	r30, r24
   1df2e:	61 50       	subi	r22, 0x01	; 1
   1df30:	70 40       	sbci	r23, 0x00	; 0
   1df32:	01 90       	ld	r0, Z+
   1df34:	01 10       	cpse	r0, r1
   1df36:	d8 f7       	brcc	.-10     	; 0x1df2e <strnlen+0x2>
   1df38:	80 95       	com	r24
   1df3a:	90 95       	com	r25
   1df3c:	8e 0f       	add	r24, r30
   1df3e:	9f 1f       	adc	r25, r31
   1df40:	08 95       	ret

0001df42 <fputc>:
   1df42:	0f 93       	push	r16
   1df44:	1f 93       	push	r17
   1df46:	cf 93       	push	r28
   1df48:	df 93       	push	r29
   1df4a:	fb 01       	movw	r30, r22
   1df4c:	23 81       	ldd	r18, Z+3	; 0x03
   1df4e:	21 fd       	sbrc	r18, 1
   1df50:	03 c0       	rjmp	.+6      	; 0x1df58 <fputc+0x16>
   1df52:	8f ef       	ldi	r24, 0xFF	; 255
   1df54:	9f ef       	ldi	r25, 0xFF	; 255
   1df56:	2c c0       	rjmp	.+88     	; 0x1dfb0 <fputc+0x6e>
   1df58:	22 ff       	sbrs	r18, 2
   1df5a:	16 c0       	rjmp	.+44     	; 0x1df88 <fputc+0x46>
   1df5c:	46 81       	ldd	r20, Z+6	; 0x06
   1df5e:	57 81       	ldd	r21, Z+7	; 0x07
   1df60:	24 81       	ldd	r18, Z+4	; 0x04
   1df62:	35 81       	ldd	r19, Z+5	; 0x05
   1df64:	42 17       	cp	r20, r18
   1df66:	53 07       	cpc	r21, r19
   1df68:	44 f4       	brge	.+16     	; 0x1df7a <fputc+0x38>
   1df6a:	a0 81       	ld	r26, Z
   1df6c:	b1 81       	ldd	r27, Z+1	; 0x01
   1df6e:	9d 01       	movw	r18, r26
   1df70:	2f 5f       	subi	r18, 0xFF	; 255
   1df72:	3f 4f       	sbci	r19, 0xFF	; 255
   1df74:	31 83       	std	Z+1, r19	; 0x01
   1df76:	20 83       	st	Z, r18
   1df78:	8c 93       	st	X, r24
   1df7a:	26 81       	ldd	r18, Z+6	; 0x06
   1df7c:	37 81       	ldd	r19, Z+7	; 0x07
   1df7e:	2f 5f       	subi	r18, 0xFF	; 255
   1df80:	3f 4f       	sbci	r19, 0xFF	; 255
   1df82:	37 83       	std	Z+7, r19	; 0x07
   1df84:	26 83       	std	Z+6, r18	; 0x06
   1df86:	14 c0       	rjmp	.+40     	; 0x1dfb0 <fputc+0x6e>
   1df88:	8b 01       	movw	r16, r22
   1df8a:	ec 01       	movw	r28, r24
   1df8c:	fb 01       	movw	r30, r22
   1df8e:	00 84       	ldd	r0, Z+8	; 0x08
   1df90:	f1 85       	ldd	r31, Z+9	; 0x09
   1df92:	e0 2d       	mov	r30, r0
   1df94:	19 95       	eicall
   1df96:	89 2b       	or	r24, r25
   1df98:	e1 f6       	brne	.-72     	; 0x1df52 <fputc+0x10>
   1df9a:	d8 01       	movw	r26, r16
   1df9c:	16 96       	adiw	r26, 0x06	; 6
   1df9e:	8d 91       	ld	r24, X+
   1dfa0:	9c 91       	ld	r25, X
   1dfa2:	17 97       	sbiw	r26, 0x07	; 7
   1dfa4:	01 96       	adiw	r24, 0x01	; 1
   1dfa6:	17 96       	adiw	r26, 0x07	; 7
   1dfa8:	9c 93       	st	X, r25
   1dfaa:	8e 93       	st	-X, r24
   1dfac:	16 97       	sbiw	r26, 0x06	; 6
   1dfae:	ce 01       	movw	r24, r28
   1dfb0:	df 91       	pop	r29
   1dfb2:	cf 91       	pop	r28
   1dfb4:	1f 91       	pop	r17
   1dfb6:	0f 91       	pop	r16
   1dfb8:	08 95       	ret

0001dfba <__ultoa_invert>:
   1dfba:	fa 01       	movw	r30, r20
   1dfbc:	aa 27       	eor	r26, r26
   1dfbe:	28 30       	cpi	r18, 0x08	; 8
   1dfc0:	51 f1       	breq	.+84     	; 0x1e016 <__ultoa_invert+0x5c>
   1dfc2:	20 31       	cpi	r18, 0x10	; 16
   1dfc4:	81 f1       	breq	.+96     	; 0x1e026 <__ultoa_invert+0x6c>
   1dfc6:	e8 94       	clt
   1dfc8:	6f 93       	push	r22
   1dfca:	6e 7f       	andi	r22, 0xFE	; 254
   1dfcc:	6e 5f       	subi	r22, 0xFE	; 254
   1dfce:	7f 4f       	sbci	r23, 0xFF	; 255
   1dfd0:	8f 4f       	sbci	r24, 0xFF	; 255
   1dfd2:	9f 4f       	sbci	r25, 0xFF	; 255
   1dfd4:	af 4f       	sbci	r26, 0xFF	; 255
   1dfd6:	b1 e0       	ldi	r27, 0x01	; 1
   1dfd8:	3e d0       	rcall	.+124    	; 0x1e056 <__ultoa_invert+0x9c>
   1dfda:	b4 e0       	ldi	r27, 0x04	; 4
   1dfdc:	3c d0       	rcall	.+120    	; 0x1e056 <__ultoa_invert+0x9c>
   1dfde:	67 0f       	add	r22, r23
   1dfe0:	78 1f       	adc	r23, r24
   1dfe2:	89 1f       	adc	r24, r25
   1dfe4:	9a 1f       	adc	r25, r26
   1dfe6:	a1 1d       	adc	r26, r1
   1dfe8:	68 0f       	add	r22, r24
   1dfea:	79 1f       	adc	r23, r25
   1dfec:	8a 1f       	adc	r24, r26
   1dfee:	91 1d       	adc	r25, r1
   1dff0:	a1 1d       	adc	r26, r1
   1dff2:	6a 0f       	add	r22, r26
   1dff4:	71 1d       	adc	r23, r1
   1dff6:	81 1d       	adc	r24, r1
   1dff8:	91 1d       	adc	r25, r1
   1dffa:	a1 1d       	adc	r26, r1
   1dffc:	20 d0       	rcall	.+64     	; 0x1e03e <__ultoa_invert+0x84>
   1dffe:	09 f4       	brne	.+2      	; 0x1e002 <__ultoa_invert+0x48>
   1e000:	68 94       	set
   1e002:	3f 91       	pop	r19
   1e004:	2a e0       	ldi	r18, 0x0A	; 10
   1e006:	26 9f       	mul	r18, r22
   1e008:	11 24       	eor	r1, r1
   1e00a:	30 19       	sub	r19, r0
   1e00c:	30 5d       	subi	r19, 0xD0	; 208
   1e00e:	31 93       	st	Z+, r19
   1e010:	de f6       	brtc	.-74     	; 0x1dfc8 <__ultoa_invert+0xe>
   1e012:	cf 01       	movw	r24, r30
   1e014:	08 95       	ret
   1e016:	46 2f       	mov	r20, r22
   1e018:	47 70       	andi	r20, 0x07	; 7
   1e01a:	40 5d       	subi	r20, 0xD0	; 208
   1e01c:	41 93       	st	Z+, r20
   1e01e:	b3 e0       	ldi	r27, 0x03	; 3
   1e020:	0f d0       	rcall	.+30     	; 0x1e040 <__ultoa_invert+0x86>
   1e022:	c9 f7       	brne	.-14     	; 0x1e016 <__ultoa_invert+0x5c>
   1e024:	f6 cf       	rjmp	.-20     	; 0x1e012 <__ultoa_invert+0x58>
   1e026:	46 2f       	mov	r20, r22
   1e028:	4f 70       	andi	r20, 0x0F	; 15
   1e02a:	40 5d       	subi	r20, 0xD0	; 208
   1e02c:	4a 33       	cpi	r20, 0x3A	; 58
   1e02e:	18 f0       	brcs	.+6      	; 0x1e036 <__ultoa_invert+0x7c>
   1e030:	49 5d       	subi	r20, 0xD9	; 217
   1e032:	31 fd       	sbrc	r19, 1
   1e034:	40 52       	subi	r20, 0x20	; 32
   1e036:	41 93       	st	Z+, r20
   1e038:	02 d0       	rcall	.+4      	; 0x1e03e <__ultoa_invert+0x84>
   1e03a:	a9 f7       	brne	.-22     	; 0x1e026 <__ultoa_invert+0x6c>
   1e03c:	ea cf       	rjmp	.-44     	; 0x1e012 <__ultoa_invert+0x58>
   1e03e:	b4 e0       	ldi	r27, 0x04	; 4
   1e040:	a6 95       	lsr	r26
   1e042:	97 95       	ror	r25
   1e044:	87 95       	ror	r24
   1e046:	77 95       	ror	r23
   1e048:	67 95       	ror	r22
   1e04a:	ba 95       	dec	r27
   1e04c:	c9 f7       	brne	.-14     	; 0x1e040 <__ultoa_invert+0x86>
   1e04e:	00 97       	sbiw	r24, 0x00	; 0
   1e050:	61 05       	cpc	r22, r1
   1e052:	71 05       	cpc	r23, r1
   1e054:	08 95       	ret
   1e056:	9b 01       	movw	r18, r22
   1e058:	ac 01       	movw	r20, r24
   1e05a:	0a 2e       	mov	r0, r26
   1e05c:	06 94       	lsr	r0
   1e05e:	57 95       	ror	r21
   1e060:	47 95       	ror	r20
   1e062:	37 95       	ror	r19
   1e064:	27 95       	ror	r18
   1e066:	ba 95       	dec	r27
   1e068:	c9 f7       	brne	.-14     	; 0x1e05c <__ultoa_invert+0xa2>
   1e06a:	62 0f       	add	r22, r18
   1e06c:	73 1f       	adc	r23, r19
   1e06e:	84 1f       	adc	r24, r20
   1e070:	95 1f       	adc	r25, r21
   1e072:	a0 1d       	adc	r26, r0
   1e074:	08 95       	ret

0001e076 <eeprom_read_byte>:
   1e076:	f9 99       	sbic	0x1f, 1	; 31
   1e078:	fe cf       	rjmp	.-4      	; 0x1e076 <eeprom_read_byte>
   1e07a:	92 bd       	out	0x22, r25	; 34
   1e07c:	81 bd       	out	0x21, r24	; 33
   1e07e:	f8 9a       	sbi	0x1f, 0	; 31
   1e080:	99 27       	eor	r25, r25
   1e082:	80 b5       	in	r24, 0x20	; 32
   1e084:	08 95       	ret

0001e086 <eeprom_write_byte>:
   1e086:	26 2f       	mov	r18, r22

0001e088 <eeprom_write_r18>:
   1e088:	f9 99       	sbic	0x1f, 1	; 31
   1e08a:	fe cf       	rjmp	.-4      	; 0x1e088 <eeprom_write_r18>
   1e08c:	1f ba       	out	0x1f, r1	; 31
   1e08e:	92 bd       	out	0x22, r25	; 34
   1e090:	81 bd       	out	0x21, r24	; 33
   1e092:	20 bd       	out	0x20, r18	; 32
   1e094:	0f b6       	in	r0, 0x3f	; 63
   1e096:	f8 94       	cli
   1e098:	fa 9a       	sbi	0x1f, 2	; 31
   1e09a:	f9 9a       	sbi	0x1f, 1	; 31
   1e09c:	0f be       	out	0x3f, r0	; 63
   1e09e:	01 96       	adiw	r24, 0x01	; 1
   1e0a0:	08 95       	ret

0001e0a2 <__mulshisi3>:
   1e0a2:	b7 ff       	sbrs	r27, 7
   1e0a4:	e1 ca       	rjmp	.-2622   	; 0x1d668 <__muluhisi3>

0001e0a6 <__mulohisi3>:
   1e0a6:	e0 da       	rcall	.-2624   	; 0x1d668 <__muluhisi3>
   1e0a8:	82 1b       	sub	r24, r18
   1e0aa:	93 0b       	sbc	r25, r19
   1e0ac:	08 95       	ret

0001e0ae <_exit>:
   1e0ae:	f8 94       	cli

0001e0b0 <__stop_program>:
   1e0b0:	ff cf       	rjmp	.-2      	; 0x1e0b0 <__stop_program>
