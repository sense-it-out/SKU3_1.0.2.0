
SKU3_1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000716  00800200  0001e1ee  0001e282  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0001e1ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001013  00800916  00800916  0001e998  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0001e998  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0001e9f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000011f0  00000000  00000000  0001ea38  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00048c99  00000000  00000000  0001fc28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00007e2e  00000000  00000000  000688c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00016f5f  00000000  00000000  000706ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000040f4  00000000  00000000  00087650  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00014d93  00000000  00000000  0008b744  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0001a074  00000000  00000000  000a04d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001520  00000000  00000000  000ba54b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bd 23 	jmp	0x477a	; 0x477a <__ctors_end>
       4:	0c 94 53 e3 	jmp	0x1c6a6	; 0x1c6a6 <__vector_1>
       8:	0c 94 7e e3 	jmp	0x1c6fc	; 0x1c6fc <__vector_2>
       c:	0c 94 a9 e3 	jmp	0x1c752	; 0x1c752 <__vector_3>
      10:	0c 94 d4 e3 	jmp	0x1c7a8	; 0x1c7a8 <__vector_4>
      14:	0c 94 ff e3 	jmp	0x1c7fe	; 0x1c7fe <__vector_5>
      18:	0c 94 2a e4 	jmp	0x1c854	; 0x1c854 <__vector_6>
      1c:	0c 94 55 e4 	jmp	0x1c8aa	; 0x1c8aa <__vector_7>
      20:	0c 94 80 e4 	jmp	0x1c900	; 0x1c900 <__vector_8>
      24:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      28:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      2c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      30:	0c 94 73 63 	jmp	0xc6e6	; 0xc6e6 <__vector_12>
      34:	0c 94 7d 65 	jmp	0xcafa	; 0xcafa <__vector_13>
      38:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      3c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      40:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      44:	0c 94 c9 63 	jmp	0xc792	; 0xc792 <__vector_17>
      48:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      4c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      50:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      54:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      58:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      5c:	0c 94 32 d7 	jmp	0x1ae64	; 0x1ae64 <__vector_23>
      60:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      64:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      68:	0c 94 45 d4 	jmp	0x1a88a	; 0x1a88a <__vector_26>
      6c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      70:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      74:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      78:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      7c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      80:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      84:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      88:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      8c:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      90:	0c 94 3e 63 	jmp	0xc67c	; 0xc67c <__vector_36>
      94:	0c 94 9b d4 	jmp	0x1a936	; 0x1a936 <__vector_37>
      98:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      9c:	0c 94 50 e8 	jmp	0x1d0a0	; 0x1d0a0 <__vector_39>
      a0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      a4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      a8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      ac:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      b0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      b4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      b8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      bc:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      c0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      c4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      c8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      cc:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      d0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      d4:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      d8:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      dc:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      e0:	0c 94 ee 23 	jmp	0x47dc	; 0x47dc <__bad_interrupt>
      e4:	e6 32       	cpi	r30, 0x26	; 38
      e6:	e6 32       	cpi	r30, 0x26	; 38
      e8:	1c 33       	cpi	r17, 0x3C	; 60
      ea:	e6 32       	cpi	r30, 0x26	; 38
      ec:	04 33       	cpi	r16, 0x34	; 52
      ee:	e6 32       	cpi	r30, 0x26	; 38
      f0:	04 33       	cpi	r16, 0x34	; 52
      f2:	e6 32       	cpi	r30, 0x26	; 38
      f4:	e6 32       	cpi	r30, 0x26	; 38
      f6:	04 33       	cpi	r16, 0x34	; 52
      f8:	e6 32       	cpi	r30, 0x26	; 38
      fa:	04 33       	cpi	r16, 0x34	; 52
      fc:	f3 32       	cpi	r31, 0x23	; 35
      fe:	f5 32       	cpi	r31, 0x25	; 37
     100:	f8 32       	cpi	r31, 0x28	; 40
     102:	fa 32       	cpi	r31, 0x2A	; 42
     104:	f8 32       	cpi	r31, 0x28	; 40
     106:	fc 32       	cpi	r31, 0x2C	; 44
     108:	f8 32       	cpi	r31, 0x28	; 40
     10a:	fe 32       	cpi	r31, 0x2E	; 46
     10c:	00 33       	cpi	r16, 0x30	; 48
     10e:	f8 32       	cpi	r31, 0x28	; 40
     110:	02 33       	cpi	r16, 0x32	; 50
     112:	da 33       	cpi	r29, 0x3A	; 58
     114:	dc 33       	cpi	r29, 0x3C	; 60
     116:	de 33       	cpi	r29, 0x3E	; 62
     118:	e5 33       	cpi	r30, 0x35	; 53
     11a:	e7 33       	cpi	r30, 0x37	; 55
     11c:	e9 33       	cpi	r30, 0x39	; 57
     11e:	eb 33       	cpi	r30, 0x3B	; 59
     120:	ed 33       	cpi	r30, 0x3D	; 61
     122:	ef 33       	cpi	r30, 0x3F	; 63
     124:	f1 33       	cpi	r31, 0x31	; 49
     126:	f3 33       	cpi	r31, 0x33	; 51
     128:	f6 33       	cpi	r31, 0x36	; 54
     12a:	02 34       	cpi	r16, 0x42	; 66
     12c:	06 34       	cpi	r16, 0x46	; 70
     12e:	0a 34       	cpi	r16, 0x4A	; 74
     130:	13 34       	cpi	r17, 0x43	; 67
     132:	17 34       	cpi	r17, 0x47	; 71
     134:	1b 34       	cpi	r17, 0x4B	; 75
     136:	1f 34       	cpi	r17, 0x4F	; 79
     138:	23 34       	cpi	r18, 0x43	; 67
     13a:	27 34       	cpi	r18, 0x47	; 71
     13c:	2b 34       	cpi	r18, 0x4B	; 75
     13e:	2f 34       	cpi	r18, 0x4F	; 79
     140:	33 34       	cpi	r19, 0x43	; 67
     142:	26 35       	cpi	r18, 0x56	; 86
     144:	07 36       	cpi	r16, 0x67	; 103
     146:	5e 35       	cpi	r21, 0x5E	; 94
     148:	4e 36       	cpi	r20, 0x6E	; 110
     14a:	7f 35       	cpi	r23, 0x5F	; 95
     14c:	70 36       	cpi	r23, 0x60	; 96
     14e:	a1 35       	cpi	r26, 0x51	; 81
     150:	c3 35       	cpi	r28, 0x53	; 83
     152:	92 36       	cpi	r25, 0x62	; 98
     154:	e5 35       	cpi	r30, 0x55	; 85
     156:	b2 36       	cpi	r27, 0x62	; 98
     158:	fe 34       	cpi	r31, 0x4E	; 78
     15a:	37 37       	cpi	r19, 0x77	; 119
     15c:	fc 37       	cpi	r31, 0x7C	; 124
     15e:	57 37       	cpi	r21, 0x77	; 119
     160:	41 38       	cpi	r20, 0x81	; 129
     162:	78 37       	cpi	r23, 0x78	; 120
     164:	62 38       	cpi	r22, 0x82	; 130
     166:	99 37       	cpi	r25, 0x79	; 121
     168:	ba 37       	cpi	r27, 0x7A	; 122
     16a:	83 38       	cpi	r24, 0x83	; 131
     16c:	db 37       	cpi	r29, 0x7B	; 123
     16e:	a3 38       	cpi	r26, 0x83	; 131
     170:	01 37       	cpi	r16, 0x71	; 113
     172:	eb 39       	cpi	r30, 0x9B	; 155
     174:	ab 3a       	cpi	r26, 0xAB	; 171
     176:	0b 3a       	cpi	r16, 0xAB	; 171
     178:	ee 3a       	cpi	r30, 0xAE	; 174
     17a:	2b 3a       	cpi	r18, 0xAB	; 171
     17c:	0e 3b       	cpi	r16, 0xBE	; 190
     17e:	4b 3a       	cpi	r20, 0xAB	; 171
     180:	6b 3a       	cpi	r22, 0xAB	; 171
     182:	2e 3b       	cpi	r18, 0xBE	; 190
     184:	8b 3a       	cpi	r24, 0xAB	; 171
     186:	4d 3b       	cpi	r20, 0xBD	; 189
     188:	c3 39       	cpi	r28, 0x93	; 147
     18a:	d3 3b       	cpi	r29, 0xB3	; 179
     18c:	8d 3c       	cpi	r24, 0xCD	; 205
     18e:	f2 3b       	cpi	r31, 0xB2	; 178
     190:	ce 3c       	cpi	r28, 0xCE	; 206
     192:	11 3c       	cpi	r17, 0xC1	; 193
     194:	ed 3c       	cpi	r30, 0xCD	; 205
     196:	30 3c       	cpi	r19, 0xC0	; 192
     198:	4f 3c       	cpi	r20, 0xCF	; 207
     19a:	0c 3d       	cpi	r16, 0xDC	; 220
     19c:	6e 3c       	cpi	r22, 0xCE	; 206
     19e:	32 3d       	cpi	r19, 0xD2	; 210
     1a0:	b6 3b       	cpi	r27, 0xB6	; 182
     1a2:	b0 46       	sbci	r27, 0x60	; 96
     1a4:	63 46       	sbci	r22, 0x63	; 99
     1a6:	7d 46       	sbci	r23, 0x6D	; 109
     1a8:	ad 46       	sbci	r26, 0x6D	; 109
     1aa:	b0 46       	sbci	r27, 0x60	; 96
     1ac:	ad 46       	sbci	r26, 0x6D	; 109
     1ae:	b0 46       	sbci	r27, 0x60	; 96
     1b0:	b0 46       	sbci	r27, 0x60	; 96
     1b2:	ad 46       	sbci	r26, 0x6D	; 109
     1b4:	b0 46       	sbci	r27, 0x60	; 96
     1b6:	ad 46       	sbci	r26, 0x6D	; 109
     1b8:	b0 46       	sbci	r27, 0x60	; 96
     1ba:	8b 6c       	ori	r24, 0xCB	; 203
     1bc:	91 6c       	ori	r25, 0xC1	; 193
     1be:	9a 6c       	ori	r25, 0xCA	; 202
     1c0:	a7 6c       	ori	r26, 0xC7	; 199
     1c2:	b6 6c       	ori	r27, 0xC6	; 198
     1c4:	c3 6c       	ori	r28, 0xC3	; 195
     1c6:	d0 6c       	ori	r29, 0xC0	; 192
     1c8:	de 6c       	ori	r29, 0xCE	; 206
     1ca:	e5 6c       	ori	r30, 0xC5	; 197
     1cc:	f0 6c       	ori	r31, 0xC0	; 192
     1ce:	49 93       	st	Y+, r20
     1d0:	3f 93       	push	r19
     1d2:	5d 93       	st	X+, r21
     1d4:	50 93 4d 93 	sts	0x934D, r21	; 0x80934d <__bss_end+0x7a24>
     1d8:	15 93       	las	Z, r17
     1da:	37 93       	lat	Z, r19
     1dc:	0a 93       	st	-Y, r16
     1de:	e1 9c       	mul	r14, r1
     1e0:	f1 9d       	mul	r31, r1
     1e2:	14 9e       	mul	r1, r20
     1e4:	2e 9e       	mul	r2, r30
     1e6:	61 9e       	mul	r6, r17
     1e8:	79 9e       	mul	r7, r25
     1ea:	90 9e       	mul	r9, r16
     1ec:	a5 9e       	mul	r10, r21
     1ee:	6f d8       	rcall	.-3874   	; 0xfffff2ce <__eeprom_end+0xff7ef2ce>
     1f0:	72 d8       	rcall	.-3868   	; 0xfffff2d6 <__eeprom_end+0xff7ef2d6>
     1f2:	61 d8       	rcall	.-3902   	; 0xfffff2b6 <__eeprom_end+0xff7ef2b6>
     1f4:	65 d8       	rcall	.-3894   	; 0xfffff2c0 <__eeprom_end+0xff7ef2c0>
     1f6:	6b d8       	rcall	.-3882   	; 0xfffff2ce <__eeprom_end+0xff7ef2ce>
     1f8:	a9 d8       	rcall	.-3758   	; 0xfffff34c <__eeprom_end+0xff7ef34c>
     1fa:	76 d8       	rcall	.-3860   	; 0xfffff2e8 <__eeprom_end+0xff7ef2e8>
     1fc:	7a d8       	rcall	.-3852   	; 0xfffff2f2 <__eeprom_end+0xff7ef2f2>
     1fe:	80 d8       	rcall	.-3840   	; 0xfffff300 <__eeprom_end+0xff7ef300>
     200:	84 d8       	rcall	.-3832   	; 0xfffff30a <__eeprom_end+0xff7ef30a>
     202:	88 d8       	rcall	.-3824   	; 0xfffff314 <__eeprom_end+0xff7ef314>
     204:	8e d8       	rcall	.-3812   	; 0xfffff322 <__eeprom_end+0xff7ef322>
     206:	92 d8       	rcall	.-3804   	; 0xfffff32c <__eeprom_end+0xff7ef32c>
     208:	96 d8       	rcall	.-3796   	; 0xfffff336 <__eeprom_end+0xff7ef336>
     20a:	a9 d8       	rcall	.-3758   	; 0xfffff35e <__eeprom_end+0xff7ef35e>
     20c:	9c d8       	rcall	.-3784   	; 0xfffff346 <__eeprom_end+0xff7ef346>
     20e:	a0 d8       	rcall	.-3776   	; 0xfffff350 <__eeprom_end+0xff7ef350>
     210:	a4 d8       	rcall	.-3768   	; 0xfffff35a <__eeprom_end+0xff7ef35a>
     212:	ce e1       	ldi	r28, 0x1E	; 30
     214:	bb e1       	ldi	r27, 0x1B	; 27
     216:	bd e1       	ldi	r27, 0x1D	; 29
     218:	bf e1       	ldi	r27, 0x1F	; 31
     21a:	c1 e1       	ldi	r28, 0x11	; 17
     21c:	c3 e1       	ldi	r28, 0x13	; 19
     21e:	c5 e1       	ldi	r28, 0x15	; 21
     220:	c7 e1       	ldi	r28, 0x17	; 23
     222:	2d e3       	ldi	r18, 0x3D	; 61
     224:	f7 e2       	ldi	r31, 0x27	; 39
     226:	ff e2       	ldi	r31, 0x2F	; 47
     228:	0b e3       	ldi	r16, 0x3B	; 59
     22a:	18 e3       	ldi	r17, 0x38	; 56
     22c:	39 e3       	ldi	r19, 0x39	; 57
     22e:	46 e3       	ldi	r20, 0x36	; 54
     230:	07 63       	ori	r16, 0x37	; 55
     232:	42 36       	cpi	r20, 0x62	; 98
     234:	b7 9b       	sbis	0x16, 7	; 22
     236:	d8 a7       	std	Y+40, r29	; 0x28
     238:	1a 39       	cpi	r17, 0x9A	; 154
     23a:	68 56       	subi	r22, 0x68	; 104
     23c:	18 ae       	std	Y+56, r1	; 0x38
     23e:	ba ab       	std	Y+50, r27	; 0x32
     240:	55 8c       	ldd	r5, Z+29	; 0x1d
     242:	1d 3c       	cpi	r17, 0xCD	; 205
     244:	b7 cc       	rjmp	.-1682   	; 0xfffffbb4 <__eeprom_end+0xff7efbb4>
     246:	57 63       	ori	r21, 0x37	; 55
     248:	bd 6d       	ori	r27, 0xDD	; 221
     24a:	ed fd       	.word	0xfded	; ????
     24c:	75 3e       	cpi	r23, 0xE5	; 229
     24e:	f6 17       	cp	r31, r22
     250:	72 31       	cpi	r23, 0x12	; 18
     252:	bf 00       	.word	0x00bf	; ????
     254:	00 00       	nop
     256:	80 3f       	cpi	r24, 0xF0	; 240
     258:	08 00       	.word	0x0008	; ????
     25a:	00 00       	nop
     25c:	be 92       	st	-X, r11
     25e:	24 49       	sbci	r18, 0x94	; 148
     260:	12 3e       	cpi	r17, 0xE2	; 226
     262:	ab aa       	std	Y+51, r10	; 0x33
     264:	aa 2a       	or	r10, r26
     266:	be cd       	rjmp	.-1156   	; 0xfffffde4 <__eeprom_end+0xff7efde4>
     268:	cc cc       	rjmp	.-1640   	; 0xfffffc02 <__eeprom_end+0xff7efc02>
     26a:	4c 3e       	cpi	r20, 0xEC	; 236
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
     270:	be ab       	std	Y+54, r27	; 0x36
     272:	aa aa       	std	Y+50, r10	; 0x32
     274:	aa 3e       	cpi	r26, 0xEA	; 234
     276:	00 00       	nop
     278:	00 00       	nop
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	00 00       	nop
     282:	00 00       	nop
     284:	00 08       	sbc	r0, r0
     286:	41 78       	andi	r20, 0x81	; 129
     288:	d3 bb       	out	0x13, r29	; 19
     28a:	43 87       	std	Z+11, r20	; 0x0b
     28c:	d1 13       	cpse	r29, r17
     28e:	3d 19       	sub	r19, r13
     290:	0e 3c       	cpi	r16, 0xCE	; 206
     292:	c3 bd       	out	0x23, r28	; 35
     294:	42 82       	std	Z+2, r4	; 0x02
     296:	ad 2b       	or	r26, r29
     298:	3e 68       	ori	r19, 0x8E	; 142
     29a:	ec 82       	std	Y+4, r14	; 0x04
     29c:	76 be       	out	0x36, r7	; 54
     29e:	d9 8f       	std	Y+25, r29	; 0x19
     2a0:	e1 a9       	ldd	r30, Z+49	; 0x31
     2a2:	3e 4c       	sbci	r19, 0xCE	; 206
     2a4:	80 ef       	ldi	r24, 0xF0	; 240
     2a6:	ff be       	out	0x3f, r15	; 63
     2a8:	01 c4       	rjmp	.+2050   	; 0xaac <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x3b>
     2aa:	ff 7f       	andi	r31, 0xFF	; 255
     2ac:	3f 00       	.word	0x003f	; ????
     2ae:	00 00       	nop
	...

000002b2 <__trampolines_end>:
     2b2:	46 6c       	ori	r20, 0xC6	; 198
     2b4:	75 73       	andi	r23, 0x35	; 53
     2b6:	68 5f       	subi	r22, 0xF8	; 248
     2b8:	52 75       	andi	r21, 0x52	; 82
     2ba:	6e 6e       	ori	r22, 0xEE	; 238
     2bc:	69 6e       	ori	r22, 0xE9	; 233
     2be:	67 20       	and	r6, r7
     2c0:	36 3a       	cpi	r19, 0xA6	; 166
     2c2:	20 00       	.word	0x0020	; ????

000002c4 <_ZZ17Flush_ControllingvE3__c_1>:
     2c4:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 33 3a     Flush_Running 3:
     2d4:	20 00                                                .

000002d6 <_ZZ17Flush_ControllingvE3__c_0>:
     2d6:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 32 3a     Flush_Running 2:
     2e6:	20 00                                                .

000002e8 <_ZZ17Flush_ControllingvE3__c>:
     2e8:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 30 3a     Flush_Running 0:
     2f8:	20 00                                                .

000002fa <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_42>:
     2fa:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     30a:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000319 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_41>:
     319:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     329:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     339:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     349:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000354 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_40>:
     354:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     364:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     374:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     384:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000038f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_39>:
     38f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     39f:	69 6c 00                                            il.

000003a2 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_38>:
     3a2:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     3b2:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     3c2:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000003cd <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_37>:
     3cd:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     3dd:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000003eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_36>:
     3eb:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     3fb:	74 61 20 3a 20 00                                   ta : .

00000401 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_35>:
     401:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     411:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     421:	65 20 31 00                                         e 1.

00000425 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_34>:
     425:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     435:	6d 62 65 72 20 00                                   mber .

0000043b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_33>:
     43b:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     44b:	6f 2e 20 00                                         o. .

0000044f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_32>:
     44f:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
     45f:	6e 6f 20 3a 20 00                                   no : .

00000465 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_31>:
     465:	20 00                                                .

00000467 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_30>:
     467:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00000475 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_29>:
     475:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     485:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000494 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_28>:
     494:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4a4:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4b4:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4c4:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000004cf <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_27>:
     4cf:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4df:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4ef:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4ff:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000050a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_26>:
     50a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     51a:	4f 5f 46 45 45 44 42 41 43 4b 20 31 00              O_FEEDBACK 1.

00000527 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_25>:
     527:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     537:	69 6c 00                                            il.

0000053a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_24>:
     53a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     54a:	4f 5f 46 45 45 44 42 41 43 4b 20 30 00              O_FEEDBACK 0.

00000557 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_23>:
     557:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     567:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     577:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00000582 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_22>:
     582:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     592:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000005a0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_21>:
     5a0:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     5b0:	74 61 20 3a 20 00                                   ta : .

000005b6 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_20>:
     5b6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     5c6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     5d6:	65 20 31 00                                         e 1.

000005da <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_19>:
     5da:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     5ea:	6d 62 65 72 20 00                                   mber .

000005f0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_18>:
     5f0:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     600:	6f 2e 20 00                                         o. .

00000604 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_17>:
     604:	54 61 72 67 65 74 5f 50 6c 6f 74 5f 4e 75 6d 20     Target_Plot_Num 
     614:	70 6c 6f 74 20 6e 6f 20 3a 20 00                    plot no : .

0000061f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_16>:
     61f:	20 00                                                .

00000621 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_15>:
     621:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

0000062f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_14>:
     62f:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
     63f:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
     64f:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

0000065d <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_13>:
     65d:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     66d:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
     67d:	29 00                                               ).

0000067f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_12>:
     67f:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     68f:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     69f:	20 6f 6e 6e 29 00                                    onn).

000006a5 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_11>:
     6a5:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     6b5:	61 20 3a 20 00                                      a : .

000006ba <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_10>:
     6ba:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     6ca:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     6da:	65 20 3b 00                                         e ;.

000006de <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_9>:
     6de:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     6ee:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     6fe:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00000709 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_8>:
     709:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
     719:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
     729:	61 64 79 20 6f 6e 00                                ady on.

00000730 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_7>:
     730:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     740:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00000751 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_6>:
     751:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     761:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     771:	20 6f 6e 29 00                                       on).

00000776 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_5>:
     776:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     786:	61 20 3a 20 00                                      a : .

0000078b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_4>:
     78b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     79b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     7ab:	65 20 00                                            e .

000007ae <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_3>:
     7ae:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     7be:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     7ce:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

000007d9 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_2>:
     7d9:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     7e9:	20 00                                                .

000007eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_1>:
     7eb:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

000007fc <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_0>:
     7fc:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     80c:	20 00                                                .

0000080e <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c>:
     80e:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000081f <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_5>:
     81f:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000830 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_4>:
     830:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 20     wireless pump 3 
	...

00000841 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_3>:
     841:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000852 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_2>:
     852:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 34 20     wireless pump 4 
     862:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     872:	23 23 23 23 23 23 23 23 23 23 00                    ##########.

0000087d <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_1>:
     87d:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 2e     wireless pump 3.
     88d:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
     89d:	2e 2e 2e 2c 2c 2c 2c 2c 2c 2c 20 00                 ...,,,,,,, .

000008a9 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_0>:
     8a9:	53 65 6c 65 63 74 65 64 20 77 69 72 65 6c 65 73     Selected wireles
     8b9:	73 20 70 75 6d 70 20 3e 20 00                       s pump > .

000008c3 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c>:
     8c3:	53 65 6c 65 63 74 65 64 20 76 61 6c 76 65 20 6e     Selected valve n
     8d3:	75 6d 62 65 72 20 77 69 72 65 6c 65 73 73 20 70     umber wireless p
     8e3:	75 6d 70 20 3e 20 00                                ump > .

000008ea <_ZZ16Set_Trigger_TimevE3__c>:
     8ea:	74 72 69 67 67 65 72 20 74 69 6d 65 20 73 65 74     trigger time set
	...

000008fb <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_12>:
     8fb:	63 68 65 63 6b 5f 74 72 75 65 5f 63 6f 6e 64 69     check_true_condi
     90b:	74 69 6f 6e 00                                      tion.

00000910 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_11>:
     910:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     920:	30 2e 34 00                                         0.4.

00000924 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_10>:
     924:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 33 00     sc 1 enter 15.3.

00000934 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_9>:
     934:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 32 00     sc 1 enter 15.2.

00000944 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_8>:
     944:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 31 00     sc 1 enter 15.1.

00000954 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_7>:
     954:	73 63 20 31 20 65 6e 74 65 72 20 31 35 00           sc 1 enter 15.

00000962 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_6>:
     962:	73 63 20 31 20 65 6e 74 65 72 20 31 34 00           sc 1 enter 14.

00000970 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_5>:
     970:	73 63 20 31 20 65 6e 74 65 72 20 31 33 00           sc 1 enter 13.

0000097e <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_4>:
     97e:	73 63 20 31 20 65 6e 74 65 72 20 31 32 00           sc 1 enter 12.

0000098c <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_3>:
     98c:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     99c:	30 2e 32 00                                         0.2.

000009a0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_2>:
     9a0:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     9b0:	30 2e 31 00                                         0.1.

000009b4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_1>:
     9b4:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 00     sc 1 enter 12.0.

000009c4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_0>:
     9c4:	73 63 20 65 6e 74 65 72 20 32 33 00                 sc enter 23.

000009d0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c>:
     9d0:	73 63 20 65 6e 74 65 72 20 32 32 00                 sc enter 22.

000009dc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_9>:
     9dc:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     9ec:	75 70 61 64 74 65 20 35 2e 32 2f 2f 2f 2f 2f 2f     upadte 5.2//////
     9fc:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a0c:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a1c:	2f 2f 2f 2f 2f 00                                   /////.

00000a22 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8>:
     a22:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     a32:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     a42:	35 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     5.1/////////////
     a52:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a62:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000a71 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7>:
     a71:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     a81:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     a91:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     aa1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ab1:	2f 2f 2f 00                                         ///.

00000ab5 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6>:
     ab5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     ac5:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     ad5:	34 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4.1/////////////
     ae5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     af5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000b04 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5>:
     b04:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     b14:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     b24:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     b34:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     b44:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000b51 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_4>:
     b51:	73 63 20 65 6e 74 65 72 20 33 30 2e 31 2e 31 00     sc enter 30.1.1.

00000b61 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_3>:
     b61:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 30 2e     sc enter 11.2.0.
     b71:	32 00                                               2.

00000b73 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2>:
     b73:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b83:	31 00                                               1.

00000b85 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1>:
     b85:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b95:	30 2e 30 00                                         0.0.

00000b99 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0>:
     b99:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     ba9:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     bb9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bc9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bd9:	2f 2f 2f 00                                         ///.

00000bdd <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c>:
     bdd:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     bed:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     bfd:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     c0d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     c1d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000c2a <_ZZ18Next_Day_CalculatehhE3__c_3>:
     c2a:	43 75 72 72 65 6e 74 20 64 61 74 65 20 3a 20 00     Current date : .

00000c3a <_ZZ18Next_Day_CalculatehhE3__c_2>:
     c3a:	52 65 71 75 69 72 65 64 20 64 61 74 65 20 3a 20     Required date : 
	...

00000c4b <_ZZ18Next_Day_CalculatehhE3__c_1>:
     c4b:	64 69 61 79 73 20 69 6e 20 62 65 74 65 77 65 65     diays in betewee
     c5b:	65 6e 20 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     en .............
     c6b:	3a 20 00                                            : .

00000c6e <_ZZ18Next_Day_CalculatehhE3__c_0>:
     c6e:	43 75 72 72 65 6e 74 20 64 61 74 65 20 32 3a 20     Current date 2: 
	...

00000c7f <_ZZ18Next_Day_CalculatehhE3__c>:
     c7f:	43 75 72 72 65 6e 74 20 64 61 74 65 20 31 3a 20     Current date 1: 
	...

00000c90 <_ZZ22Do_Not_Repeat_SchedulevE3__c_1>:
     c90:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     ca0:	68 65 64 75 6c 65 20 32 20 23 23 23 23 23 23 23     hedule 2 #######
     cb0:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cc0:	23 23 23 23 23 23 23 00                             #######.

00000cc8 <_ZZ22Do_Not_Repeat_SchedulevE3__c_0>:
     cc8:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     cd8:	68 65 64 75 6c 65 20 31 2e 31 20 23 23 23 23 23     hedule 1.1 #####
     ce8:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cf8:	23 23 23 23 23 23 23 23 23 00                       #########.

00000d02 <_ZZ22Do_Not_Repeat_SchedulevE3__c>:
     d02:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     d12:	68 65 64 75 6c 65 20 31 20 23 23 23 23 23 23 23     hedule 1 #######
     d22:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     d32:	23 23 23 23 23 23 23 00                             #######.

00000d3a <_ZZ18Edited_In_SchedulevE3__c_21>:
     d3a:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     d4a:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     d5a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d6a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d7a:	2f 2f 2f 2f 00                                      ////.

00000d7f <_ZZ18Edited_In_SchedulevE3__c_20>:
     d7f:	6d 79 20 31 34 00                                   my 14.

00000d85 <_ZZ18Edited_In_SchedulevE3__c_19>:
     d85:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     d95:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     da5:	61 74 65 64 5f 44 61 74 65 20 34 2f 2f 2f 2f 20     ated_Date 4//// 
     db5:	3a 00                                               :.

00000db7 <_ZZ18Edited_In_SchedulevE3__c_18>:
     db7:	6d 79 20 39 00                                      my 9.

00000dbc <_ZZ18Edited_In_SchedulevE3__c_17>:
     dbc:	6d 79 20 38 00                                      my 8.

00000dc1 <_ZZ18Edited_In_SchedulevE3__c_16>:
     dc1:	6d 79 20 37 00                                      my 7.

00000dc6 <_ZZ18Edited_In_SchedulevE3__c_15>:
     dc6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     dd6:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     de6:	61 74 65 64 5f 44 61 74 65 20 31 2f 2f 2f 2f 20     ated_Date 1//// 
     df6:	3a 00                                               :.

00000df8 <_ZZ18Edited_In_SchedulevE3__c_14>:
     df8:	6d 79 20 36 2e 32 00                                my 6.2.

00000dff <_ZZ18Edited_In_SchedulevE3__c_13>:
     dff:	6d 79 20 36 2e 31 00                                my 6.1.

00000e06 <_ZZ18Edited_In_SchedulevE3__c_12>:
     e06:	6d 79 20 36 00                                      my 6.

00000e0b <_ZZ18Edited_In_SchedulevE3__c_11>:
     e0b:	6d 79 20 35 00                                      my 5.

00000e10 <_ZZ18Edited_In_SchedulevE3__c_10>:
     e10:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     e20:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     e30:	61 74 65 64 5f 44 61 74 65 20 33 2f 2f 2f 2f 20     ated_Date 3//// 
     e40:	3a 00                                               :.

00000e42 <_ZZ18Edited_In_SchedulevE3__c_9>:
     e42:	6d 79 20 34 00                                      my 4.

00000e47 <_ZZ18Edited_In_SchedulevE3__c_8>:
     e47:	6d 79 20 33 00                                      my 3.

00000e4c <_ZZ18Edited_In_SchedulevE3__c_7>:
     e4c:	42 61 63 6b 20 75 70 20 73 63 68 65 64 75 6c 65     Back up schedule
     e5c:	20 3a 00                                             :.

00000e5f <_ZZ18Edited_In_SchedulevE3__c_6>:
     e5f:	52 75 6e 6e 69 6e 67 20 73 63 68 65 64 75 6c 65     Running schedule
     e6f:	20 3a 00                                             :.

00000e72 <_ZZ18Edited_In_SchedulevE3__c_5>:
     e72:	6d 79 20 32 00                                      my 2.

00000e77 <_ZZ18Edited_In_SchedulevE3__c_4>:
     e77:	6d 79 20 31 00                                      my 1.

00000e7c <_ZZ18Edited_In_SchedulevE3__c_3>:
     e7c:	6d 79 20 30 00                                      my 0.

00000e81 <_ZZ18Edited_In_SchedulevE3__c_2>:
     e81:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     e91:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     ea1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     eb1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ec1:	2f 2f 2f 2f 00                                      ////.

00000ec6 <_ZZ18Edited_In_SchedulevE3__c_1>:
     ec6:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 6d 6f 6e     Running list mon
     ed6:	74 68 20 00                                         th .

00000eda <_ZZ18Edited_In_SchedulevE3__c_0>:
     eda:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 64 61 74     Running list dat
     eea:	65 20 00                                            e .

00000eed <_ZZ18Edited_In_SchedulevE3__c>:
     eed:	6d 79 20 31 34 00                                   my 14.

00000ef3 <_ZZ17Blower_MonitoringhE3__c_0>:
     ef3:	62 6c 6f 77 65 72 20 67 65 74 73 20 32 2e 31 20     blower gets 2.1 
     f03:	3a 20 00                                            : .

00000f06 <_ZZ17Blower_MonitoringhE3__c>:
     f06:	62 6c 6f 77 65 72 20 67 65 74 73 20 31 2e 31 20     blower gets 1.1 
     f16:	3a 20 00                                            : .

00000f19 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c_0>:
     f19:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 67 65 74 73     tank number gets
     f29:	20 74 6f 20 6f 66 66 20 73 61 66 65 6c 79 00         to off safely.

00000f38 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c>:
     f38:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 6c 69 73 74     tank number list
	...

00000f49 <_ZZ17Doser_Pump_On_OffhE3__c_10>:
     f49:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     f59:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000f68 <_ZZ17Doser_Pump_On_OffhE3__c_9>:
     f68:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     f78:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     f88:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     f98:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000fa3 <_ZZ17Doser_Pump_On_OffhE3__c_8>:
     fa3:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fb3:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     fc3:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     fd3:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00000fde <_ZZ17Doser_Pump_On_OffhE3__c_7>:
     fde:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fee:	69 6c 00                                            il.

00000ff1 <_ZZ17Doser_Pump_On_OffhE3__c_6>:
     ff1:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    1001:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    1011:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

0000101c <_ZZ17Doser_Pump_On_OffhE3__c_5>:
    101c:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    102c:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

0000103a <_ZZ17Doser_Pump_On_OffhE3__c_4>:
    103a:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    104a:	74 61 20 3a 20 00                                   ta : .

00001050 <_ZZ17Doser_Pump_On_OffhE3__c_3>:
    1050:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    1060:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    1070:	65 20 31 00                                         e 1.

00001074 <_ZZ17Doser_Pump_On_OffhE3__c_2>:
    1074:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    1084:	6d 62 65 72 20 00                                   mber .

0000108a <_ZZ17Doser_Pump_On_OffhE3__c_1>:
    108a:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    109a:	6f 2e 20 00                                         o. .

0000109e <_ZZ17Doser_Pump_On_OffhE3__c_0>:
    109e:	20 00                                                .

000010a0 <_ZZ17Doser_Pump_On_OffhE3__c>:
    10a0:	64 6f 73 65 72 20 70 75 6d 70 20 76 61 6c 76 65     doser pump valve
    10b0:	20 6c 69 73 74 20 3a 20 00                           list : .

000010b9 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_15>:
    10b9:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10c9:	65 64 75 6c 65 20 4f 4e 20 3a 20 00                 edule ON : .

000010d5 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_14>:
    10d5:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10e5:	65 64 75 6c 65 20 4f 66 66 20 31 20 3a 20 00        edule Off 1 : .

000010f4 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_13>:
    10f4:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    1104:	65 64 75 6c 65 20 4f 66 66 20 30 20 3a 20 00        edule Off 0 : .

00001113 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_12>:
    1113:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    1123:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00001132 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_11>:
    1132:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    1142:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    1152:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    1162:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

0000116d <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10>:
    116d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    117d:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    118d:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    119d:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

000011a8 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9>:
    11a8:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    11b8:	69 6c 00                                            il.

000011bb <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8>:
    11bb:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    11cb:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    11db:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000011e6 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7>:
    11e6:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    11f6:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00001204 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_6>:
    1204:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    1214:	74 61 20 3a 20 00                                   ta : .

0000121a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_5>:
    121a:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    122a:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    123a:	65 20 31 00                                         e 1.

0000123e <_ZZ22Fertilizer_Tank_On_OffhhE3__c_4>:
    123e:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    124e:	6d 62 65 72 20 00                                   mber .

00001254 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_3>:
    1254:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    1264:	6f 2e 20 00                                         o. .

00001268 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_2>:
    1268:	20 00                                                .

0000126a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_1>:
    126a:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    127a:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00001288 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_0>:
    1288:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1298:	6e 75 6d 62 65 72 20 3a 20 00                       number : .

000012a2 <_ZZ22Fertilizer_Tank_On_OffhhE3__c>:
    12a2:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    12b2:	6e 75 6d 62 65 72 20 69 73 20 6c 65 73 73 20 74     number is less t
    12c2:	68 61 6e 20 31 30 30 20 3a 20 00                    han 100 : .

000012cd <_ZZ26Fertilizer_Tank_MonitoringvE3__c_0>:
    12cd:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12dd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 31 20 3a 20 00     Monitoring 1 : .

000012ed <_ZZ26Fertilizer_Tank_MonitoringvE3__c>:
    12ed:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12fd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 3a 20 00           Monitoring : .

0000130b <_ZZ20Schedules_MonitoringvE3__c_37>:
    130b:	73 63 20 65 6e 74 65 72 20 35 39 2e 31 00           sc enter 59.1.

00001319 <_ZZ20Schedules_MonitoringvE3__c_36>:
    1319:	53 63 68 65 64 75 6c 65 72 20 67 65 74 73 20 6f     Scheduler gets o
    1329:	66 66 20 31 31 20 3a 20 00                          ff 11 : .

00001332 <_ZZ20Schedules_MonitoringvE3__c_35>:
    1332:	73 63 20 65 6e 74 65 72 20 36 32 00                 sc enter 62.

0000133e <_ZZ20Schedules_MonitoringvE3__c_34>:
    133e:	73 63 20 65 6e 74 65 72 20 36 31 00                 sc enter 61.

0000134a <_ZZ20Schedules_MonitoringvE3__c_33>:
    134a:	73 63 20 65 6e 74 65 72 20 36 30 00                 sc enter 60.

00001356 <_ZZ20Schedules_MonitoringvE3__c_32>:
    1356:	73 63 20 65 6e 74 65 72 20 35 39 00                 sc enter 59.

00001362 <_ZZ20Schedules_MonitoringvE3__c_31>:
    1362:	73 63 20 65 6e 74 65 72 20 35 38 00                 sc enter 58.

0000136e <_ZZ20Schedules_MonitoringvE3__c_30>:
    136e:	73 63 20 65 6e 74 65 72 20 35 35 00                 sc enter 55.

0000137a <_ZZ20Schedules_MonitoringvE3__c_29>:
    137a:	73 63 20 65 6e 74 65 72 20 35 30 00                 sc enter 50.

00001386 <_ZZ20Schedules_MonitoringvE3__c_28>:
    1386:	73 63 20 65 6e 74 65 72 20 34 39 00                 sc enter 49.

00001392 <_ZZ20Schedules_MonitoringvE3__c_27>:
    1392:	73 63 20 65 6e 74 65 72 20 34 34 00                 sc enter 44.

0000139e <_ZZ20Schedules_MonitoringvE3__c_26>:
    139e:	73 63 20 65 6e 74 65 72 20 33 39 00                 sc enter 39.

000013aa <_ZZ20Schedules_MonitoringvE3__c_25>:
    13aa:	73 63 20 65 6e 74 65 72 20 33 38 00                 sc enter 38.

000013b6 <_ZZ20Schedules_MonitoringvE3__c_24>:
    13b6:	73 63 20 65 6e 74 65 72 20 33 37 00                 sc enter 37.

000013c2 <_ZZ20Schedules_MonitoringvE3__c_23>:
    13c2:	73 63 20 65 6e 74 65 72 20 33 32 00                 sc enter 32.

000013ce <_ZZ20Schedules_MonitoringvE3__c_22>:
    13ce:	73 63 20 65 6e 74 65 72 20 32 37 00                 sc enter 27.

000013da <_ZZ20Schedules_MonitoringvE3__c_21>:
    13da:	73 63 20 65 6e 74 65 72 20 32 36 00                 sc enter 26.

000013e6 <_ZZ20Schedules_MonitoringvE3__c_20>:
    13e6:	73 63 20 65 6e 74 65 72 20 31 37 00                 sc enter 17.

000013f2 <_ZZ20Schedules_MonitoringvE3__c_19>:
    13f2:	73 63 20 65 6e 74 65 72 20 31 36 00                 sc enter 16.

000013fe <_ZZ20Schedules_MonitoringvE3__c_18>:
    13fe:	73 63 20 65 6e 74 65 72 20 37 2e 31 00              sc enter 7.1.

0000140b <_ZZ20Schedules_MonitoringvE3__c_17>:
    140b:	73 63 20 65 6e 74 65 72 20 36 2e 31 2e 2e 2e 2e     sc enter 6.1....
    141b:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    142b:	2e 2e 2e 2e 2e 2e 00                                .......

00001432 <_ZZ20Schedules_MonitoringvE3__c_16>:
    1432:	73 63 20 65 6e 74 65 72 20 36 2e 30 2e 2e 2e 2e     sc enter 6.0....
    1442:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1452:	2e 2e 2e 2e 2e 2e 00                                .......

00001459 <_ZZ20Schedules_MonitoringvE3__c_15>:
    1459:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 31 00     sc enter 11.2.1.

00001469 <_ZZ20Schedules_MonitoringvE3__c_14>:
    1469:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 00           sc enter 11.2.

00001477 <_ZZ20Schedules_MonitoringvE3__c_13>:
    1477:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 00           sc enter 11.1.

00001485 <_ZZ20Schedules_MonitoringvE3__c_12>:
    1485:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1495:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    14a5:	61 74 65 64 5f 44 61 74 65 20 32 2f 2f 2f 2f 20     ated_Date 2//// 
    14b5:	3a 00                                               :.

000014b7 <_ZZ20Schedules_MonitoringvE3__c_11>:
    14b7:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000014c3 <_ZZ20Schedules_MonitoringvE3__c_10>:
    14c3:	73 63 20 65 6e 74 65 72 20 31 30 00                 sc enter 10.

000014cf <_ZZ20Schedules_MonitoringvE3__c_9>:
    14cf:	73 63 20 65 6e 74 65 72 20 39 00                    sc enter 9.

000014da <_ZZ20Schedules_MonitoringvE3__c_8>:
    14da:	73 63 20 65 6e 74 65 72 20 38 2e 2e 2e 2e 2e 2e     sc enter 8......
    14ea:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    14fa:	2e 2e 2e 2e 2e 00                                   ......

00001500 <_ZZ20Schedules_MonitoringvE3__c_7>:
    1500:	73 63 20 65 6e 74 65 72 20 37 2e 2e 2e 2e 2e 2e     sc enter 7......
    1510:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1520:	2e 2e 2e 2e 2e 2e 2e 2e 00                          .........

00001529 <_ZZ20Schedules_MonitoringvE3__c_6>:
    1529:	73 63 20 65 6e 74 65 72 20 36 2e 2e 2e 2e 2e 2e     sc enter 6......
    1539:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001547 <_ZZ20Schedules_MonitoringvE3__c_5>:
    1547:	73 63 20 65 6e 74 65 72 20 35 2e 2e 2e 2e 2e 2e     sc enter 5......
    1557:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001565 <_ZZ20Schedules_MonitoringvE3__c_4>:
    1565:	73 63 20 65 6e 74 65 72 20 34 2e 2e 2e 2e 2e 2e     sc enter 4......
    1575:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00              .............

00001582 <_ZZ20Schedules_MonitoringvE3__c_3>:
    1582:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1592:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15a2:	61 74 65 64 5f 44 61 74 65 20 30 2f 2f 2f 2f 20     ated_Date 0//// 
    15b2:	3a 00                                               :.

000015b4 <_ZZ20Schedules_MonitoringvE3__c_2>:
    15b4:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000015c0 <_ZZ20Schedules_MonitoringvE3__c_1>:
    15c0:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    15d0:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15e0:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2e 30 2f     ated_Date 0.0.0/
    15f0:	2f 2f 2f 20 3a 00                                   /// :.

000015f6 <_ZZ20Schedules_MonitoringvE3__c_0>:
    15f6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1606:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1616:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2f 2f 2f     ated_Date 0.0///
    1626:	2f 20 3a 00                                         / :.

0000162a <_ZZ20Schedules_MonitoringvE3__c>:
    162a:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    163a:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    164a:	61 74 65 64 5f 44 61 74 65 20 30 2e 2f 2f 2f 2f     ated_Date 0.////
    165a:	20 3a 00                                             :.

0000165d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_65>:
    165d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 2e 31 00     day in btw 11.1.

0000166d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_64>:
    166d:	64 61 79 20 69 6e 20 62 74 77 20 31 30 2e 31 00     day in btw 10.1.

0000167d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_63>:
    167d:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

0000168c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_62>:
    168c:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

0000169b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_61>:
    169b:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016aa <_ZZ22Day_In_Bet_SchedullinghhhE3__c_60>:
    16aa:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016b7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_59>:
    16b7:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016c6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_58>:
    16c6:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016d3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_57>:
    16d3:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016e2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_56>:
    16e2:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

000016f1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_55>:
    16f1:	64 61 79 20 69 6e 20 62 74 77 20 37 2e 31 00        day in btw 7.1.

00001700 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_54>:
    1700:	64 61 79 20 69 6e 20 62 74 77 20 36 2e 31 00        day in btw 6.1.

0000170f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_53>:
    170f:	64 61 79 20 69 6e 20 62 74 77 20 35 2e 31 00        day in btw 5.1.

0000171e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_52>:
    171e:	64 61 79 20 69 6e 20 62 74 77 20 34 2e 31 00        day in btw 4.1.

0000172d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_51>:
    172d:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000173c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_50>:
    173c:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

0000174b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_49>:
    174b:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000175a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_48>:
    175a:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001769 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_47>:
    1769:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001778 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_46>:
    1778:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001787 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_45>:
    1787:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001796 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_44>:
    1796:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017a5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_43>:
    17a5:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_42>:
    17b4:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017c3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_41>:
    17c3:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017d2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_40>:
    17d2:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_39>:
    17e1:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017f0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_38>:
    17f0:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017ff <_ZZ22Day_In_Bet_SchedullinghhhE3__c_37>:
    17ff:	64 61 79 20 69 6e 20 62 74 77 20 31 2e 31 00        day in btw 1.1.

0000180e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_36>:
    180e:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    181e:	74 20 31 3a 20 00                                   t 1: .

00001824 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_35>:
    1824:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001832 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_34>:
    1832:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001840 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_33>:
    1840:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000184d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_32>:
    184d:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000185a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_31>:
    185a:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001867 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_30>:
    1867:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001874 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_29>:
    1874:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001881 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_28>:
    1881:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000188e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_27>:
    188e:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000189b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_26>:
    189b:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000018a8 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_25>:
    18a8:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

000018b5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_24>:
    18b5:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

000018c2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_23>:
    18c2:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

000018cf <_ZZ22Day_In_Bet_SchedullinghhhE3__c_22>:
    18cf:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

000018dc <_ZZ22Day_In_Bet_SchedullinghhhE3__c_21>:
    18dc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_20>:
    18e9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

000018f6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_19>:
    18f6:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001903 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_18>:
    1903:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001910 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_17>:
    1910:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000191d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_16>:
    191d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000192a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_15>:
    192a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001937 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_14>:
    1937:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001944 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_13>:
    1944:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001951 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_12>:
    1951:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000195e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_11>:
    195e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000196b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_10>:
    196b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001978 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_9>:
    1978:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001985 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_8>:
    1985:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001992 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_7>:
    1992:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

0000199f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_6>:
    199f:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    19af:	74 20 3a 20 00                                      t : .

000019b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_5>:
    19b4:	64 61 79 20 69 6e 20 62 74 77 20 73 74 61 72 74     day in btw start
    19c4:	65 64 00                                            ed.

000019c7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_4>:
    19c7:	6c 61 73 74 20 6d 6f 6e 74 68 20 3a 20 00           last month : .

000019d5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_3>:
    19d5:	6c 61 73 74 20 64 61 74 65 3a 20 00                 last date: .

000019e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_2>:
    19e1:	79 65 61 72 20 3a 20 00                             year : .

000019e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_1>:
    19e9:	6d 6f 6e 74 68 20 3a 20 00                          month : .

000019f2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_0>:
    19f2:	64 61 74 65 20 3a 20 00                             date : .

000019fa <_ZZ22Day_In_Bet_SchedullinghhhE3__c>:
    19fa:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    1a0a:	3a 20 00                                            : .

00001a0d <_ZZ22Day_In_Bet_SchedullinghE3__c_61>:
    1a0d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001a1b <_ZZ22Day_In_Bet_SchedullinghE3__c_60>:
    1a1b:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001a29 <_ZZ22Day_In_Bet_SchedullinghE3__c_59>:
    1a29:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a36 <_ZZ22Day_In_Bet_SchedullinghE3__c_58>:
    1a36:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a43 <_ZZ22Day_In_Bet_SchedullinghE3__c_57>:
    1a43:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a50 <_ZZ22Day_In_Bet_SchedullinghE3__c_56>:
    1a50:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a5d <_ZZ22Day_In_Bet_SchedullinghE3__c_55>:
    1a5d:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a6a <_ZZ22Day_In_Bet_SchedullinghE3__c_54>:
    1a6a:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a77 <_ZZ22Day_In_Bet_SchedullinghE3__c_53>:
    1a77:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a84 <_ZZ22Day_In_Bet_SchedullinghE3__c_52>:
    1a84:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a91 <_ZZ22Day_In_Bet_SchedullinghE3__c_51>:
    1a91:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001a9e <_ZZ22Day_In_Bet_SchedullinghE3__c_50>:
    1a9e:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001aab <_ZZ22Day_In_Bet_SchedullinghE3__c_49>:
    1aab:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001ab8 <_ZZ22Day_In_Bet_SchedullinghE3__c_48>:
    1ab8:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001ac5 <_ZZ22Day_In_Bet_SchedullinghE3__c_47>:
    1ac5:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ad2 <_ZZ22Day_In_Bet_SchedullinghE3__c_46>:
    1ad2:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001adf <_ZZ22Day_In_Bet_SchedullinghE3__c_45>:
    1adf:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001aec <_ZZ22Day_In_Bet_SchedullinghE3__c_44>:
    1aec:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001af9 <_ZZ22Day_In_Bet_SchedullinghE3__c_43>:
    1af9:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b06 <_ZZ22Day_In_Bet_SchedullinghE3__c_42>:
    1b06:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b13 <_ZZ22Day_In_Bet_SchedullinghE3__c_41>:
    1b13:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b20 <_ZZ22Day_In_Bet_SchedullinghE3__c_40>:
    1b20:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b2d <_ZZ22Day_In_Bet_SchedullinghE3__c_39>:
    1b2d:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b3a <_ZZ22Day_In_Bet_SchedullinghE3__c_38>:
    1b3a:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b47 <_ZZ22Day_In_Bet_SchedullinghE3__c_37>:
    1b47:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b54 <_ZZ22Day_In_Bet_SchedullinghE3__c_36>:
    1b54:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b61 <_ZZ22Day_In_Bet_SchedullinghE3__c_35>:
    1b61:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b6e <_ZZ22Day_In_Bet_SchedullinghE3__c_34>:
    1b6e:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b7b <_ZZ22Day_In_Bet_SchedullinghE3__c_33>:
    1b7b:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001b88 <_ZZ22Day_In_Bet_SchedullinghE3__c_32>:
    1b88:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001b96 <_ZZ22Day_In_Bet_SchedullinghE3__c_31>:
    1b96:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001ba4 <_ZZ22Day_In_Bet_SchedullinghE3__c_30>:
    1ba4:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bb1 <_ZZ22Day_In_Bet_SchedullinghE3__c_29>:
    1bb1:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bbe <_ZZ22Day_In_Bet_SchedullinghE3__c_28>:
    1bbe:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bcb <_ZZ22Day_In_Bet_SchedullinghE3__c_27>:
    1bcb:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bd8 <_ZZ22Day_In_Bet_SchedullinghE3__c_26>:
    1bd8:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001be5 <_ZZ22Day_In_Bet_SchedullinghE3__c_25>:
    1be5:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bf2 <_ZZ22Day_In_Bet_SchedullinghE3__c_24>:
    1bf2:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bff <_ZZ22Day_In_Bet_SchedullinghE3__c_23>:
    1bff:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001c0c <_ZZ22Day_In_Bet_SchedullinghE3__c_22>:
    1c0c:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001c19 <_ZZ22Day_In_Bet_SchedullinghE3__c_21>:
    1c19:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001c26 <_ZZ22Day_In_Bet_SchedullinghE3__c_20>:
    1c26:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001c33 <_ZZ22Day_In_Bet_SchedullinghE3__c_19>:
    1c33:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001c40 <_ZZ22Day_In_Bet_SchedullinghE3__c_18>:
    1c40:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c4d <_ZZ22Day_In_Bet_SchedullinghE3__c_17>:
    1c4d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c5a <_ZZ22Day_In_Bet_SchedullinghE3__c_16>:
    1c5a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c67 <_ZZ22Day_In_Bet_SchedullinghE3__c_15>:
    1c67:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c74 <_ZZ22Day_In_Bet_SchedullinghE3__c_14>:
    1c74:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c81 <_ZZ22Day_In_Bet_SchedullinghE3__c_13>:
    1c81:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c8e <_ZZ22Day_In_Bet_SchedullinghE3__c_12>:
    1c8e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c9b <_ZZ22Day_In_Bet_SchedullinghE3__c_11>:
    1c9b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001ca8 <_ZZ22Day_In_Bet_SchedullinghE3__c_10>:
    1ca8:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001cb5 <_ZZ22Day_In_Bet_SchedullinghE3__c_9>:
    1cb5:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cc2 <_ZZ22Day_In_Bet_SchedullinghE3__c_8>:
    1cc2:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ccf <_ZZ22Day_In_Bet_SchedullinghE3__c_7>:
    1ccf:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cdc <_ZZ22Day_In_Bet_SchedullinghE3__c_6>:
    1cdc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ce9 <_ZZ22Day_In_Bet_SchedullinghE3__c_5>:
    1ce9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cf6 <_ZZ22Day_In_Bet_SchedullinghE3__c_4>:
    1cf6:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001d03 <_ZZ22Day_In_Bet_SchedullinghE3__c_3>:
    1d03:	69 72 72 69 67 61 74 69 6e 67 20 6d 6f 6e 74 68     irrigating month
    1d13:	20 3a 20 00                                          : .

00001d17 <_ZZ22Day_In_Bet_SchedullinghE3__c_2>:
    1d17:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d27:	3a 20 00                                            : .

00001d2a <_ZZ22Day_In_Bet_SchedullinghE3__c_1>:
    1d2a:	79 65 61 72 20 3a 20 00                             year : .

00001d32 <_ZZ22Day_In_Bet_SchedullinghE3__c_0>:
    1d32:	6d 6f 6e 74 68 20 3a 20 00                          month : .

00001d3b <_ZZ22Day_In_Bet_SchedullinghE3__c>:
    1d3b:	64 61 74 65 20 3a 20 00                             date : .

00001d43 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_2>:
    1d43:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d53:	65 6d 70 5f 4d 6f 6e 74 68 00                       emp_Month.

00001d5d <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_1>:
    1d5d:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d6d:	65 6d 70 5f 64 61 74 65 00                          emp_date.

00001d76 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_0>:
    1d76:	73 63 20 6d 61 6b 65 20 64 61 74 65 00              sc make date.

00001d83 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c>:
    1d83:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d93:	75 70 61 64 74 65 20 31 2f 2f 2f 2f 2f 2f 2f 2f     upadte 1////////
    1da3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1db3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1dc3:	2f 2f 2f 00                                         ///.

00001dc7 <_ZZ25Update_Wireless_Pump_DataPhE3__c>:
    1dc7:	57 49 52 45 4c 45 53 53 20 50 55 4d 50 20 44 41     WIRELESS PUMP DA
    1dd7:	54 41 20 52 45 43 49 45 56 45 44 00                 TA RECIEVED.

00001de3 <_ZZ22Update_Euro_Valve_DataPhE3__c_16>:
    1de3:	41 43 4b 30 20 53 45 4e 44 20 54 4f 20 56 41 4c     ACK0 SEND TO VAL
    1df3:	56 45 20 00                                         VE .

00001df7 <_ZZ22Update_Euro_Valve_DataPhE3__c_15>:
    1df7:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e07:	4f 57 20 31 20 00                                   OW 1 .

00001e0d <_ZZ22Update_Euro_Valve_DataPhE3__c_14>:
    1e0d:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e1d:	30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     0000000000000000
    1e2d:	30 30 00                                            00.

00001e30 <_ZZ22Update_Euro_Valve_DataPhE3__c_13>:
    1e30:	66 6f 67 67 65 72 3a 20 76 61 6c 76 65 20 66 61     fogger: valve fa
    1e40:	75 6c 74 20 6f 63 63 75 72 65 20 70 6c 65 61 73     ult occure pleas
    1e50:	65 20 74 75 72 6e 20 6f 66 66 20 74 68 65 20 70     e turn off the p
    1e60:	75 6d 70 00                                         ump.

00001e64 <_ZZ22Update_Euro_Valve_DataPhE3__c_12>:
    1e64:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e74:	4f 57 00                                            OW.

00001e77 <_ZZ22Update_Euro_Valve_DataPhE3__c_11>:
    1e77:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e87:	31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31     1111111111111111
    1e97:	31 31 31 31 00                                      1111.

00001e9c <_ZZ22Update_Euro_Valve_DataPhE3__c_10>:
    1e9c:	76 61 6c 76 65 20 66 61 75 6c 74 20 6f 63 63 75     valve fault occu
    1eac:	72 65 20 70 6c 65 61 73 65 20 74 75 72 6e 20 6f     re please turn o
    1ebc:	66 66 20 74 68 65 20 70 75 6d 70 00                 ff the pump.

00001ec8 <_ZZ22Update_Euro_Valve_DataPhE3__c_9>:
    1ec8:	45 55 52 4f 20 50 41 43 4b 45 54 20 49 53 20 4e     EURO PACKET IS N
    1ed8:	4f 54 20 41 50 50 4c 49 43 41 42 4c 45 00           OT APPLICABLE.

00001ee6 <_ZZ22Update_Euro_Valve_DataPhE3__c_8>:
    1ee6:	45 75 72 6f 20 73 74 61 74 75 73 20 3a 20 00        Euro status : .

00001ef5 <_ZZ22Update_Euro_Valve_DataPhE3__c_7>:
    1ef5:	45 75 72 6f 20 6f 6e 6c 69 6e 65 2f 6f 66 66 6c     Euro online/offl
    1f05:	69 6e 65 20 3a 20 00                                ine : .

00001f0c <_ZZ22Update_Euro_Valve_DataPhE3__c_6>:
    1f0c:	42 61 74 74 65 72 79 20 6c 65 76 65 6c 20 3a 20     Battery level : 
	...

00001f1d <_ZZ22Update_Euro_Valve_DataPhE3__c_5>:
    1f1d:	44 61 74 61 20 72 65 63 76 64 20 46 72 6f 6d 20     Data recvd From 
    1f2d:	45 75 72 6f 20 3a 20 00                             Euro : .

00001f35 <_ZZ22Update_Euro_Valve_DataPhE3__c_4>:
    1f35:	64 65 66 61 75 6c 74 20 63 6f 6d 6d 61 6e 64 20     default command 
	...

00001f46 <_ZZ22Update_Euro_Valve_DataPhE3__c_3>:
    1f46:	6c 6f 77 20 62 61 74 74 65 72 79 20 66 61 75 6c     low battery faul
    1f56:	74 00                                               t.

00001f58 <_ZZ22Update_Euro_Valve_DataPhE3__c_2>:
    1f58:	6e 6f 74 20 61 6e 79 20 70 6c 6f 74 20 69 73 20     not any plot is 
    1f68:	69 72 72 69 67 61 74 69 6e 67 00                    irrigating.

00001f73 <_ZZ22Update_Euro_Valve_DataPhE3__c_1>:
    1f73:	5f 65 4e 4f 5f 46 41 55 4c 54 20 00                 _eNO_FAULT .

00001f7f <_ZZ22Update_Euro_Valve_DataPhE3__c_0>:
    1f7f:	5f 65 45 55 52 4f 5f 56 41 4c 56 45 5f 46 41 55     _eEURO_VALVE_FAU
    1f8f:	4c 54 5f 44 41 54 41 00                             LT_DATA.

00001f97 <_ZZ22Update_Euro_Valve_DataPhE3__c>:
    1f97:	45 55 52 4f 20 44 41 54 41 20 52 45 43 49 45 56     EURO DATA RECIEV
    1fa7:	45 44 00                                            ED.

00001faa <_ZZ16Gsm_Gprs_NetworkvE3__c_10>:
    1faa:	41 54 45 30 00                                      ATE0.

00001faf <_ZZ16Gsm_Gprs_NetworkvE3__c_9>:
    1faf:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00001fbb <_ZZ16Gsm_Gprs_NetworkvE3__c_8>:
    1fbb:	66 61 69 6c 20 74 6f 20 63 6f 6e 6e 65 63 74 20     fail to connect 
    1fcb:	67 73 6d 2f 47 50 52 53 20 6e 65 74 77 6f 72 6b     gsm/GPRS network
	...

00001fdc <_ZZ16Gsm_Gprs_NetworkvE3__c_7>:
    1fdc:	53 75 63 63 73 20 43 6f 6e 6e 65 63 74 65 64 20     Succs Connected 
    1fec:	74 6f 20 47 50 52 53 20 6e 65 74 77 6f 72 6b 00     to GPRS network.

00001ffc <_ZZ16Gsm_Gprs_NetworkvE3__c_6>:
    1ffc:	41 54 45 30 00                                      ATE0.

00002001 <_ZZ16Gsm_Gprs_NetworkvE3__c_5>:
    2001:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000200d <_ZZ16Gsm_Gprs_NetworkvE3__c_4>:
    200d:	46 61 69 6c 20 74 6f 20 43 6f 6e 6e 65 63 74 20     Fail to Connect 
    201d:	47 50 52 53 00                                      GPRS.

00002022 <_ZZ16Gsm_Gprs_NetworkvE3__c_3>:
    2022:	43 61 6e 27 74 20 67 65 74 20 6f 70 65 61 72 74     Can't get opeart
    2032:	6f 72 20 4e 61 6d 65 00                             or Name.

0000203a <_ZZ16Gsm_Gprs_NetworkvE3__c_2>:
    203a:	6a 69 6f 00                                         jio.

0000203e <_ZZ16Gsm_Gprs_NetworkvE3__c_1>:
    203e:	41 69 72 74 65 6c 00                                Airtel.

00002045 <_ZZ16Gsm_Gprs_NetworkvE3__c_0>:
    2045:	56 6f 64 61 66 6f 6e 65 00                          Vodafone.

0000204e <_ZZ16Gsm_Gprs_NetworkvE3__c>:
    204e:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 20 67 73 6d     Connected to gsm
    205e:	2f 47 50 52 53 20 6e 65 74 77 6f 72 6b 20 30 00     /GPRS network 0.

0000206e <_ZZ14Get_Local_TimevE3__c_6>:
    206e:	6d 79 20 79 65 61 72 20 3a 20 00                    my year : .

00002079 <_ZZ14Get_Local_TimevE3__c_5>:
    2079:	6d 79 20 6d 6f 6e 74 68 20 3a 20 00                 my month : .

00002085 <_ZZ14Get_Local_TimevE3__c_4>:
    2085:	6d 79 20 64 61 74 65 20 3a 20 00                    my date : .

00002090 <_ZZ14Get_Local_TimevE3__c_3>:
    2090:	41 54 2b 43 43 4c 4b 3f 00                          AT+CCLK?.

00002099 <_ZZ14Get_Local_TimevE3__c_2>:
    2099:	41 54 2b 43 4e 54 50 00                             AT+CNTP.

000020a1 <_ZZ14Get_Local_TimevE3__c_1>:
    20a1:	41 54 2b 43 4e 54 50 3d 22 69 6e 2e 70 6f 6f 6c     AT+CNTP="in.pool
    20b1:	2e 6e 74 70 2e 6f 72 67 22 2c 32 32 00              .ntp.org",22.

000020be <_ZZ14Get_Local_TimevE3__c_0>:
    20be:	41 54 2b 43 54 5a 52 3d 31 00                       AT+CTZR=1.

000020c8 <_ZZ14Get_Local_TimevE3__c>:
    20c8:	41 54 2b 43 54 5a 55 3d 31 00                       AT+CTZU=1.

000020d2 <_ZZ16Display_Update_1vE3__c_25>:
    20d2:	20 20 50 55 4d 50 20 4f 46 46 20 20 00                PUMP OFF  .

000020df <_ZZ16Display_Update_1vE3__c_24>:
    20df:	20 20 20 50 55 4d 50 20 4f 4e 20 20 00                 PUMP ON  .

000020ec <_ZZ16Display_Update_1vE3__c_23>:
    20ec:	20 20 20 20 20 20 49 52 52 49 47 41 54 45 44 20           IRRIGATED 
    20fc:	20 20 20 20 00                                          .

00002101 <_ZZ16Display_Update_1vE3__c_22>:
    2101:	20 4e 4f 20 50 4c 4f 54 20 49 53 20 47 45 54 54      NO PLOT IS GETT
    2111:	49 4e 47 20 00                                      ING .

00002116 <_ZZ16Display_Update_1vE3__c_21>:
    2116:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2126:	20 20 20 20 00                                          .

0000212b <_ZZ16Display_Update_1vE3__c_20>:
    212b:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    213b:	20 20 20 20 00                                          .

00002140 <_ZZ16Display_Update_1vE3__c_19>:
    2140:	20 4e 4f 20 50 4c 4f 54 20 41 44 44 45 44 20 59      NO PLOT ADDED Y
    2150:	45 54 21 20 00                                      ET! .

00002155 <_ZZ16Display_Update_1vE3__c_18>:
    2155:	20 20 20 20 20 4d 41 4e 55 41 4c 20 4d 4f 44 45          MANUAL MODE
    2165:	20 20 20 20 00                                          .

0000216a <_ZZ16Display_Update_1vE3__c_17>:
    216a:	20 20 20 20 20 54 49 4d 45 52 20 4d 4f 44 45 20          TIMER MODE 
    217a:	20 20 20 20 00                                          .

0000217f <_ZZ16Display_Update_1vE3__c_16>:
    217f:	20 20 20 53 43 48 45 44 55 4c 45 52 20 4d 4f 44        SCHEDULER MOD
    218f:	45 20 20 20 00                                      E   .

00002194 <_ZZ16Display_Update_1vE3__c_15>:
    2194:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21a4:	20 20 20 20 00                                          .

000021a9 <_ZZ16Display_Update_1vE3__c_14>:
    21a9:	44 41 54 41 20 49 4e 49 54 49 41 4c 49 53 49 4e     DATA INITIALISIN
    21b9:	47 00                                               G.

000021bb <_ZZ16Display_Update_1vE3__c_13>:
    21bb:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21cb:	20 20 20 20 00                                          .

000021d0 <_ZZ16Display_Update_1vE3__c_12>:
    21d0:	20 20 20 20 20 20 54 48 41 4e 4b 20 59 4f 55 20           THANK YOU 
    21e0:	20 20 20 20 00                                          .

000021e5 <_ZZ16Display_Update_1vE3__c_11>:
    21e5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21f5:	20 20 20 20 00                                          .

000021fa <_ZZ16Display_Update_1vE3__c_10>:
    21fa:	43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 53 45 52     CONNECTED TO SER
    220a:	56 45 52 20 00                                      VER .

0000220f <_ZZ16Display_Update_1vE3__c_9>:
    220f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    221f:	20 20 20 20 00                                          .

00002224 <_ZZ16Display_Update_1vE3__c_8>:
    2224:	20 20 4e 45 54 57 4f 52 4b 20 53 45 4c 45 43 54       NETWORK SELECT
    2234:	45 44 20 20 00                                      ED  .

00002239 <_ZZ16Display_Update_1vE3__c_7>:
    2239:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2249:	20 20 20 20 00                                          .

0000224e <_ZZ16Display_Update_1vE3__c_6>:
    224e:	53 45 41 52 43 48 49 4e 47 20 46 4f 52 20 4e 45     SEARCHING FOR NE
    225e:	54 2e 2e 2e 00                                      T....

00002263 <_ZZ16Display_Update_1vE3__c_5>:
    2263:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2273:	20 20 20 20 00                                          .

00002278 <_ZZ16Display_Update_1vE3__c_4>:
    2278:	52 45 47 49 53 54 45 52 45 44 20 54 4f 20 53 45     REGISTERED TO SE
    2288:	52 56 45 52 00                                      RVER.

0000228d <_ZZ16Display_Update_1vE3__c_3>:
    228d:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    229d:	20 20 20 20 00                                          .

000022a2 <_ZZ16Display_Update_1vE3__c_2>:
    22a2:	20 20 20 20 20 52 45 47 49 53 54 45 52 49 4e 47          REGISTERING
    22b2:	20 20 20 20 00                                          .

000022b7 <_ZZ16Display_Update_1vE3__c_1>:
    22b7:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    22c7:	20 20 20 20 00                                          .

000022cc <_ZZ16Display_Update_1vE3__c_0>:
    22cc:	43 4f 4e 4e 45 43 54 49 4e 47 20 54 4f 20 53 45     CONNECTING TO SE
    22dc:	52 56 45 52 00                                      RVER.

000022e1 <_ZZ16Display_Update_1vE3__c>:
    22e1:	20 20 20 20 20 50 4c 45 41 53 45 20 57 41 49 54          PLEASE WAIT
    22f1:	20 20 20 20 00                                          .

000022f6 <_ZZ21Subscribed_data_checkvE3__c_0>:
    22f6:	54 4f 50 49 43 20 4d 41 54 43 48 00                 TOPIC MATCH.

00002302 <_ZZ21Subscribed_data_checkvE3__c>:
    2302:	65 6e 74 65 72 20 31 00                             enter 1.

0000230a <_ZZ17Is_MQTT_ConnectedvE3__c_1>:
    230a:	63 68 65 63 6b 20 6e 6f 74 20 43 6f 6e 6e 65 63     check not Connec
    231a:	74 65 64 20 74 6f 20 6d 71 74 74 00                 ted to mqtt.

00002326 <_ZZ17Is_MQTT_ConnectedvE3__c_0>:
    2326:	63 68 65 63 6b 20 43 6f 6e 6e 65 63 74 65 64 20     check Connected 
    2336:	74 6f 20 6d 71 74 74 00                             to mqtt.

0000233e <_ZZ17Is_MQTT_ConnectedvE3__c>:
    233e:	41 54 2b 43 4d 51 54 54 43 4f 4e 4e 45 43 54 3f     AT+CMQTTCONNECT?
	...

0000234f <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_1>:
    234f:	41 54 2b 43 4d 51 54 54 53 54 41 52 54 00           AT+CMQTTSTART.

0000235d <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_0>:
    235d:	41 54 2b 43 4d 51 54 54 52 45 4c 3d 30 00           AT+CMQTTREL=0.

0000236b <_ZZ12MQTT_ConnectPKcS0_S0_E3__c>:
    236b:	41 54 2b 43 4d 51 54 54 44 49 53 43 3d 30 2c 31     AT+CMQTTDISC=0,1
    237b:	32 30 00                                            20.

0000237e <_ZZ14MQTT_SUBSCRIBEPcE3__c>:
    237e:	53 55 42 20 53 55 43 43 45 53 53 00                 SUB SUCCESS.

0000238a <_ZZ12MQTT_PublishPhS_E3__c>:
    238a:	41 54 2b 43 46 55 4e 3d 31 00                       AT+CFUN=1.

00002394 <_ZZ12Gprs_ConnectPcE3__c>:
    2394:	21 21 21 21 21 53 55 43 43 45 53 53 46 55 4c 4c     !!!!!SUCCESSFULL
    23a4:	59 20 43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 47     Y CONNECTED TO G
    23b4:	50 52 53 21 21 21 21 21 00                          PRS!!!!!.

000023bd <_ZZ17Get_Operator_NamePcE3__c>:
    23bd:	41 54 2b 43 53 50 4e 3f 00                          AT+CSPN?.

000023c6 <_ZZ20Check_Gsm_ConnectionvE3__c_7>:
    23c6:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023d0 <_ZZ20Check_Gsm_ConnectionvE3__c_6>:
    23d0:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023db <_ZZ20Check_Gsm_ConnectionvE3__c_5>:
    23db:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023e5 <_ZZ20Check_Gsm_ConnectionvE3__c_4>:
    23e5:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023f0 <_ZZ20Check_Gsm_ConnectionvE3__c_3>:
    23f0:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000023f9 <_ZZ20Check_Gsm_ConnectionvE3__c_2>:
    23f9:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002403 <_ZZ20Check_Gsm_ConnectionvE3__c_1>:
    2403:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

0000240c <_ZZ20Check_Gsm_ConnectionvE3__c_0>:
    240c:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002416 <_ZZ20Check_Gsm_ConnectionvE3__c>:
    2416:	41 54 2b 43 4e 4d 50 3d 33 38 00                    AT+CNMP=38.

00002421 <_ZZ8Gsm_InitvE3__c_1>:
    2421:	41 54 2b 43 4d 45 45 3d 30 00                       AT+CMEE=0.

0000242b <_ZZ8Gsm_InitvE3__c_0>:
    242b:	41 54 2b 49 50 52 45 58 3d 39 36 30 30 00           AT+IPREX=9600.

00002439 <_ZZ8Gsm_InitvE3__c>:
    2439:	41 54 00                                            AT.

0000243c <_ZZ18_kGSM_SIG_STRENGTHvE3__c_0>:
    243c:	43 53 51 20 52 45 54 45 55 52 4e 20 30 20 00        CSQ RETEURN 0 .

0000244b <_ZZ18_kGSM_SIG_STRENGTHvE3__c>:
    244b:	41 54 2b 43 53 51 00                                AT+CSQ.

00002452 <_ZZ14Lora_Data_SendhE3__c_1>:
    2452:	53 45 4e 54 20 73 75 63 63 00                       SENT succ.

0000245c <_ZZ14Lora_Data_SendhE3__c_0>:
    245c:	53 45 4e 54 20 57 41 49 54 49 4e 47 00              SENT WAITING.

00002469 <_ZZ14Lora_Data_SendhE3__c>:
    2469:	6c 6f 72 61 20 64 61 74 61 20 73 65 6e 64 20 6c     lora data send l
    2479:	65 6e 20 3a 20 00                                   en : .

0000247f <_ZZ19Initialise_HardwarevE3__c_6>:
    247f:	47 53 4d 20 4e 4f 54 20 49 4e 49 54 49 41 54 45     GSM NOT INITIATE
    248f:	44 00                                               D.

00002491 <_ZZ19Initialise_HardwarevE3__c_5>:
    2491:	47 53 4d 20 49 4e 49 54 49 41 54 45 44 00           GSM INITIATED.

0000249f <_ZZ19Initialise_HardwarevE3__c_4>:
    249f:	4c 4f 52 41 20 4e 4f 54 20 49 4e 49 54 49 41 54     LORA NOT INITIAT
    24af:	45 44 00                                            ED.

000024b2 <_ZZ19Initialise_HardwarevE3__c_3>:
    24b2:	4c 4f 52 41 20 49 4e 49 54 49 41 54 45 44 00        LORA INITIATED.

000024c1 <_ZZ19Initialise_HardwarevE3__c_2>:
    24c1:	53 45 4e 53 45 20 49 54 20 4f 55 54 00              SENSE IT OUT.

000024ce <_ZZ19Initialise_HardwarevE3__c_1>:
    24ce:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24de:	20 20 20 20 00                                          .

000024e3 <_ZZ19Initialise_HardwarevE3__c_0>:
    24e3:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24f3:	20 20 20 20 00                                          .

000024f8 <_ZZ19Initialise_HardwarevE3__c>:
    24f8:	20 20 46 56 20 3a 20 53 4b 55 33 5f 31 2e 30 2e       FV : SKU3_1.0.
    2508:	30 2e 31 20 00                                      0.1 .

0000250d <_ZZ21Exra_Plot_Data_EEPROMhE3__c_2>:
    250d:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002519 <_ZZ21Exra_Plot_Data_EEPROMhE3__c_1>:
    2519:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    2529:	72 2e 3a 20 00                                      r.: .

0000252e <_ZZ21Exra_Plot_Data_EEPROMhE3__c_0>:
    252e:	64 61 74 61 20 73 61 76 69 6e 67 20 69 6e 20 65     data saving in e
    253e:	65 70 72 6f 6d 20 00                                eprom .

00002545 <_ZZ21Exra_Plot_Data_EEPROMhE3__c>:
    2545:	65 78 74 72 61 20 70 6c 6f 74 20 3a 20 00           extra plot : .

00002553 <_ZZ18Local_Time_SettingvE3__c_2>:
    2553:	63 68 65 63 6b 20 73 69 6d 20 6d 65 00              check sim me.

00002560 <_ZZ18Local_Time_SettingvE3__c_1>:
    2560:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

00002569 <_ZZ18Local_Time_SettingvE3__c_0>:
    2569:	41 54 45 30 00                                      ATE0.

0000256e <_ZZ18Local_Time_SettingvE3__c>:
    256e:	41 54 00                                            AT.

00002571 <_ZZ9Check_SimcE3__c_1>:
    2571:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

0000257a <_ZZ9Check_SimcE3__c_0>:
    257a:	41 54 45 30 00                                      ATE0.

0000257f <_ZZ9Check_SimcE3__c>:
    257f:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000258b <_ZZ11Check_PhasevE3__c_3>:
    258b:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 32     phase is there 2
    259b:	20 00                                                .

0000259d <_ZZ11Check_PhasevE3__c_2>:
    259d:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 31     phase is there 1
    25ad:	20 00                                                .

000025af <_ZZ11Check_PhasevE3__c_1>:
    25af:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25bf:	72 65 20 31 20 00                                   re 1 .

000025c5 <_ZZ11Check_PhasevE3__c_0>:
    25c5:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 00     phase is there .

000025d5 <_ZZ11Check_PhasevE3__c>:
    25d5:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25e5:	72 65 20 00                                         re .

000025e9 <_ZZ14Faults_HandlervE3__c_5>:
    25e9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 00     Pump Line Fault.

000025f9 <_ZZ14Faults_HandlervE3__c_4>:
    25f9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 20     Pump Line Fault 
	...

0000260a <_ZZ14Faults_HandlervE3__c_3>:
    260a:	50 75 6d 70 20 44 72 79 20 52 75 6e 00              Pump Dry Run.

00002617 <_ZZ14Faults_HandlervE3__c_2>:
    2617:	50 75 6d 70 20 44 72 79 20 52 75 6e 20 00           Pump Dry Run .

00002625 <_ZZ14Faults_HandlervE3__c_1>:
    2625:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 00     Pump Overlaoded.

00002635 <_ZZ14Faults_HandlervE3__c_0>:
    2635:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 20     Pump Overlaoded 
	...

00002646 <_ZZ14Faults_HandlervE3__c>:
    2646:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 61     Wireless Pump Fa
    2656:	75 6c 74 20 6f 63 75 75 72 65 2e 2e 2e 2e 2e 2e     ult ocuure......
    2666:	2e 2e 2e 2e 2e 2e 20 00                             ...... .

0000266e <_ZZ19Calibration_Of_PumpvE3__c>:
    266e:	50 75 6d 70 20 43 61 6c 69 62 72 61 74 69 6f 6e     Pump Calibration
    267e:	20 69 73 20 64 6f 6e 65 00                           is done.

00002687 <_ZZ11Read_EEPROMvE3__c_2>:
    2687:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002693 <_ZZ11Read_EEPROMvE3__c_1>:
    2693:	45 78 74 72 61 20 6e 6f 74 20 50 6c 6f 74 20 52     Extra not Plot R
    26a3:	75 6e 20 54 69 6d 65 72 20 3a 20 00                 un Timer : .

000026af <_ZZ11Read_EEPROMvE3__c_0>:
    26af:	45 78 74 72 61 20 50 6c 6f 74 20 52 75 6e 20 54     Extra Plot Run T
    26bf:	69 6d 65 72 20 3a 20 00                             imer : .

000026c7 <_ZZ11Read_EEPROMvE3__c>:
    26c7:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    26d7:	72 20 3a 20 00                                      r : .

000026dc <_ZZ20Param_InitializationvE3__c_3>:
    26dc:	47 53 4d 20 41 4e 44 20 4d 51 54 54 20 57 49 4c     GSM AND MQTT WIL
    26ec:	4c 20 4e 4f 54 20 57 4f 52 4b 00                    L NOT WORK.

000026f7 <_ZZ20Param_InitializationvE3__c_2>:
    26f7:	4e 4f 54 20 52 45 47 49 53 54 45 52 20 41 4e 44     NOT REGISTER AND
    2707:	20 41 4c 53 4f 20 4d 4f 44 55 4c 45 20 4e 4f 54      ALSO MODULE NOT
    2717:	20 57 4f 52 4b 2c 20 50 4c 45 41 53 45 20 43 48      WORK, PLEASE CH
    2727:	45 43 4b 20 54 48 45 20 4d 4f 44 55 4c 45 20 41     ECK THE MODULE A
    2737:	4e 44 20 52 45 53 54 41 52 54 20 54 48 45 20 44     ND RESTART THE D
    2747:	45 56 49 43 45 00                                   EVICE.

0000274d <_ZZ20Param_InitializationvE3__c_1>:
    274d:	50 6c 65 61 73 65 20 49 6e 73 65 72 74 20 53 69     Please Insert Si
    275d:	6d 20 43 61 72 64 00                                m Card.

00002764 <_ZZ20Param_InitializationvE3__c_0>:
    2764:	52 75 62 6c 65 20 69 73 20 6e 6f 74 20 52 65 67     Ruble is not Reg
    2774:	69 73 74 65 72 65 64 20 54 6f 20 53 65 76 65 72     istered To Sever
	...

00002785 <_ZZ20Param_InitializationvE3__c>:
    2785:	52 75 62 6c 65 20 69 73 20 61 6c 72 65 61 64 79     Ruble is already
    2795:	20 52 65 67 69 73 74 65 72 65 64 20 54 6f 20 53      Registered To S
    27a5:	65 76 65 72 00                                      ever.

000027aa <_ZZ21Subscribe_MQTT_TopicsvE3__c>:
    27aa:	5f 73 53 75 62 73 63 72 69 62 65 5f 54 6f 70 69     _sSubscribe_Topi
    27ba:	63 2e 52 75 62 6c 65 5f 45 75 72 6f 5f 56 61 6c     c.Ruble_Euro_Val
    27ca:	76 65 5f 53 65 74 20 66 61 69 6c 00                 ve_Set fail.

000027d6 <_ZZ14Ping_to_ServervE3__c_10>:
    27d6:	41 54 45 30 00                                      ATE0.

000027db <_ZZ14Ping_to_ServervE3__c_9>:
    27db:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

000027e7 <_ZZ14Ping_to_ServervE3__c_8>:
    27e7:	46 61 69 6c 20 54 6f 20 63 6f 6e 6e 65 63 74 20     Fail To connect 
    27f7:	74 68 65 20 73 65 72 76 65 72 00                    the server.

00002802 <_ZZ14Ping_to_ServervE3__c_7>:
    2802:	61 6c 6c 20 74 6f 70 69 63 20 6e 6f 74 20 73 75     all topic not su
    2812:	62 73 63 72 69 62 65 64 00                          bscribed.

0000281b <_ZZ14Ping_to_ServervE3__c_6>:
    281b:	61 6c 6c 20 74 6f 70 69 63 20 73 75 62 73 63 72     all topic subscr
    282b:	69 62 65 64 00                                      ibed.

00002830 <_ZZ14Ping_to_ServervE3__c_5>:
    2830:	43 6f 6e 6e 65 63 74 65 64 20 54 6f 20 73 65 72     Connected To ser
    2840:	76 65 72 00                                         ver.

00002844 <_ZZ14Ping_to_ServervE3__c_4>:
    2844:	54 72 79 20 74 6f 20 63 6f 6e 6e 65 63 74 20 74     Try to connect t
    2854:	68 65 20 73 65 72 76 65 72 00                       he server.

0000285e <_ZZ14Ping_to_ServervE3__c_3>:
    285e:	41 54 2b 51 4d 54 43 4c 4f 53 45 20 4e 4f 54 20     AT+QMTCLOSE NOT 
    286e:	43 4c 4f 53 45 20 00                                CLOSE .

00002875 <_ZZ14Ping_to_ServervE3__c_2>:
    2875:	41 54 2b 51 4d 54 43 4c 4f 53 45 00                 AT+QMTCLOSE.

00002881 <_ZZ14Ping_to_ServervE3__c_1>:
    2881:	41 54 2b 51 4d 54 43 4c 4f 53 45 3d 30 00           AT+QMTCLOSE=0.

0000288f <_ZZ14Ping_to_ServervE3__c_0>:
    288f:	53 69 6d 20 69 73 20 6e 6f 74 20 74 68 65 72 65     Sim is not there
	...

000028a0 <_ZZ14Ping_to_ServervE3__c>:
    28a0:	41 54 45 30 00                                      ATE0.

000028a5 <_ZZ11Init_BrokervE3__c_4>:
    28a5:	52 75 62 6c 65 20 63 6f 6e 74 72 6f 6c 6c 65 72     Ruble controller
    28b5:	20 69 73 20 72 65 67 69 73 74 65 72 65 64 00         is registered.

000028c4 <_ZZ11Init_BrokervE3__c_3>:
    28c4:	77 61 69 74 20 72 65 67 69 73 74 65 72 69 6e 67     wait registering
    28d4:	20 73 74 61 74 75 73 20 3a 20 00                     status : .

000028df <_ZZ11Init_BrokervE3__c_2>:
    28df:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    28ef:	76 65 72 00                                         ver.

000028f3 <_ZZ11Init_BrokervE3__c_1>:
    28f3:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 00        Ping to server.

00002902 <_ZZ11Init_BrokervE3__c_0>:
    2902:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    2912:	76 65 72 20 30 00                                   ver 0.

00002918 <_ZZ11Init_BrokervE3__c>:
    2918:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 20 30     Ping to server 0
	...

00002929 <_ZZ4mainE3__c_0>:
    2929:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    2939:	3a 20 00                                            : .

0000293c <_ZZ4mainE3__c>:
    293c:	4e 4f 4d 49 4e 41 4c 20 43 55 52 52 45 4e 54 20     NOMINAL CURRENT 
    294c:	3a 20 00                                            : .

0000294f <_ZZ24Pump_Status_List_MonitorvE3__c>:
    294f:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    295f:	72 20 35 35 35 35 35 35 35 35 35 35 35 35 35 35     r 55555555555555
    296f:	35 35 35 35 35 35 35 35 00                          55555555.

00002978 <_ZZ24Plot_Status_List_MonitorvE3__c_11>:
    2978:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2988:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002997 <_ZZ24Plot_Status_List_MonitorvE3__c_10>:
    2997:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29a7:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29b7:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    29c7:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000029d2 <_ZZ24Plot_Status_List_MonitorvE3__c_9>:
    29d2:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29e2:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29f2:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2a02:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002a0d <_ZZ24Plot_Status_List_MonitorvE3__c_8>:
    2a0d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2a1d:	69 6c 00                                            il.

00002a20 <_ZZ24Plot_Status_List_MonitorvE3__c_7>:
    2a20:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2a30:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2a40:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002a4b <_ZZ24Plot_Status_List_MonitorvE3__c_6>:
    2a4b:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2a5b:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002a69 <_ZZ24Plot_Status_List_MonitorvE3__c_5>:
    2a69:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2a79:	74 61 20 3a 20 00                                   ta : .

00002a7f <_ZZ24Plot_Status_List_MonitorvE3__c_4>:
    2a7f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2a8f:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2a9f:	65 20 31 00                                         e 1.

00002aa3 <_ZZ24Plot_Status_List_MonitorvE3__c_3>:
    2aa3:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ab3:	6d 62 65 72 20 00                                   mber .

00002ab9 <_ZZ24Plot_Status_List_MonitorvE3__c_2>:
    2ab9:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ac9:	6f 2e 20 00                                         o. .

00002acd <_ZZ24Plot_Status_List_MonitorvE3__c_1>:
    2acd:	6c 61 73 74 20 70 6c 6f 74 20 6e 6f 20 3a 20 00     last plot no : .

00002add <_ZZ24Plot_Status_List_MonitorvE3__c_0>:
    2add:	20 00                                                .

00002adf <_ZZ24Plot_Status_List_MonitorvE3__c>:
    2adf:	6c 61 73 74 20 70 6c 6f 74 20 76 76 61 6c 76 65     last plot vvalve
    2aef:	20 6c 69 73 74 20 3a 20 00                           list : .

00002af8 <_ZZ20Wireless_Pump_On_OffhhE3__c_21>:
    2af8:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2b08:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002b16 <_ZZ20Wireless_Pump_On_OffhhE3__c_20>:
    2b16:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2b26:	20 64 61 74 61 20 3a 20 00                           data : .

00002b2f <_ZZ20Wireless_Pump_On_OffhhE3__c_19>:
    2b2f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2b3f:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2b4f:	50 75 6d 70 20 31 00                                Pump 1.

00002b56 <_ZZ20Wireless_Pump_On_OffhhE3__c_18>:
    2b56:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2b66:	2e 20 00                                            . .

00002b69 <_ZZ20Wireless_Pump_On_OffhhE3__c_14>:
    2b69:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b79:	61 69 6c 61 62 6c 65 20 37 3a 20 00                 ailable 7: .

00002b85 <_ZZ20Wireless_Pump_On_OffhhE3__c_13>:
    2b85:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b95:	61 69 6c 61 62 6c 65 20 36 3a 20 00                 ailable 6: .

00002ba1 <_ZZ20Wireless_Pump_On_OffhhE3__c_12>:
    2ba1:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bb1:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002bbd <_ZZ20Wireless_Pump_On_OffhhE3__c_11>:
    2bbd:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2bcd:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002bdb <_ZZ20Wireless_Pump_On_OffhhE3__c_10>:
    2bdb:	5f 65 50 55 4d 50 5f 4f 46 46 00                    _ePUMP_OFF.

00002be6 <_ZZ20Wireless_Pump_On_OffhhE3__c_9>:
    2be6:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bf6:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002c02 <_ZZ20Wireless_Pump_On_OffhhE3__c_8>:
    2c02:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2c12:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002c20 <_ZZ20Wireless_Pump_On_OffhhE3__c_7>:
    2c20:	5f 65 50 55 4d 50 5f 4f 4e 00                       _ePUMP_ON.

00002c2a <_ZZ20Wireless_Pump_On_OffhhE3__c_6>:
    2c2a:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c3a:	61 69 6c 61 62 6c 65 20 34 3a 20 00                 ailable 4: .

00002c46 <_ZZ20Wireless_Pump_On_OffhhE3__c_5>:
    2c46:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c56:	61 69 6c 61 62 6c 65 20 34 2e 31 3a 20 00           ailable 4.1: .

00002c64 <_ZZ20Wireless_Pump_On_OffhhE3__c_4>:
    2c64:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2c74:	69 74 68 20 70 75 6d 70 20 77 68 69 63 68 20 69     ith pump which i
    2c84:	73 20 72 65 70 6c 69 65 64 20 34 00                 s replied 4.

00002c90 <_ZZ20Wireless_Pump_On_OffhhE3__c_3>:
    2c90:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 76 61     wireless pump va
    2ca0:	6c 76 65 20 49 44 20 77 68 69 63 68 20 69 73 20     lve ID which is 
    2cb0:	53 65 6e 74 20 3a 00                                Sent :.

00002cb7 <_ZZ20Wireless_Pump_On_OffhhE3__c_2>:
    2cb7:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2cc7:	20 64 61 74 61 20 3a 20 00                           data : .

00002cd0 <_ZZ20Wireless_Pump_On_OffhhE3__c_1>:
    2cd0:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2ce0:	61 69 6c 61 62 6c 65 20 31 3a 20 00                 ailable 1: .

00002cec <_ZZ20Wireless_Pump_On_OffhhE3__c_0>:
    2cec:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2cfc:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2d0c:	50 75 6d 70 20 31 00                                Pump 1.

00002d13 <_ZZ20Wireless_Pump_On_OffhhE3__c>:
    2d13:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2d23:	2e 20 00                                            . .

00002d26 <_ZZ20Handle_Wireless_PumpvE3__c_0>:
    2d26:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d36:	72 20 34 34 34 34 34 34 34 34 34 34 34 34 34 34     r 44444444444444
    2d46:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 00        44444444444444.

00002d55 <_ZZ20Handle_Wireless_PumpvE3__c>:
    2d55:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d65:	72 20 33 33 33 33 33 33 33 33 33 33 33 33 33 33     r 33333333333333
    2d75:	33 33 33 33 33 33 33 33 33 33 00                    3333333333.

00002d80 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_11>:
    2d80:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2d90:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002d9f <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_10>:
    2d9f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2daf:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dbf:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2dcf:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002dda <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_9>:
    2dda:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2dea:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dfa:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2e0a:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002e15 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_8>:
    2e15:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2e25:	69 6c 00                                            il.

00002e28 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_7>:
    2e28:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2e38:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2e48:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002e53 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_6>:
    2e53:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2e63:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002e71 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_5>:
    2e71:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2e81:	74 61 20 3a 20 00                                   ta : .

00002e87 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_4>:
    2e87:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2e97:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2ea7:	65 20 31 00                                         e 1.

00002eab <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_3>:
    2eab:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ebb:	6d 62 65 72 20 00                                   mber .

00002ec1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_2>:
    2ec1:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ed1:	6f 2e 20 00                                         o. .

00002ed5 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_1>:
    2ed5:	49 72 72 69 67 61 74 69 6e 67 20 45 78 74 72 61     Irrigating Extra
    2ee5:	20 70 6c 6f 74 20 6e 6f 20 3a 20 00                  plot no : .

00002ef1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_0>:
    2ef1:	20 00                                                .

00002ef3 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c>:
    2ef3:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00002f01 <_ZZ25Stop_Extra_Plot_OperationhE3__c_4>:
    2f01:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     Extra plot fails
    2f11:	20 74 6f 20 53 74 6f 70 00                           to Stop.

00002f1a <_ZZ25Stop_Extra_Plot_OperationhE3__c_3>:
    2f1a:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
	...

00002f2b <_ZZ25Stop_Extra_Plot_OperationhE3__c_2>:
    2f2b:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 20     Extra plot fail 
    2f3b:	74 6f 20 53 74 6f 70 73 20 66 6f 67 67 65 72 20     to Stops fogger 
    2f4b:	62 61 63 6b 20 75 70 00                             back up.

00002f53 <_ZZ25Stop_Extra_Plot_OperationhE3__c_1>:
    2f53:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
    2f63:	20 66 6f 67 67 65 72 20 62 61 63 6b 20 75 70 00      fogger back up.

00002f73 <_ZZ25Stop_Extra_Plot_OperationhE3__c_0>:
    2f73:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f83:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34     4444444444444444
    2f93:	34 34 34 34 34 00                                   44444.

00002f99 <_ZZ25Stop_Extra_Plot_OperationhE3__c>:
    2f99:	54 72 79 20 74 6f 20 73 74 6f 70 20 45 78 74 72     Try to stop Extr
    2fa9:	61 00                                               a.

00002fab <_ZZ26Start_Extra_Plot_OperationhE3__c_2>:
    2fab:	65 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     extra plot fails
    2fbb:	20 74 6f 20 6f 6e 00                                 to on.

00002fc2 <_ZZ26Start_Extra_Plot_OperationhE3__c_1>:
    2fc2:	45 78 74 72 61 20 50 6c 6f 74 20 4f 4e 00           Extra Plot ON.

00002fd0 <_ZZ26Start_Extra_Plot_OperationhE3__c_0>:
    2fd0:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2fe0:	33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33     3333333333333333
    2ff0:	33 33 33 33 00                                      3333.

00002ff5 <_ZZ26Start_Extra_Plot_OperationhE3__c>:
    2ff5:	54 72 79 20 74 6f 20 53 74 61 72 74 20 65 78 74     Try to Start ext
    3005:	72 61 20 70 6c 6f 74 00                             ra plot.

0000300d <_ZZ24Run_Extra_Plot_OperationvE3__c>:
    300d:	66 6f 67 67 65 72 3a 20 66 61 75 6c 74 20 6f 63     fogger: fault oc
    301d:	63 75 72 65 00                                      cure.

00003022 <_ZZ12Publish_DatavE3__c_78>:
    3022:	70 6c 6f 74 00                                      plot.

00003027 <_ZZ12Publish_DatavE3__c_77>:
    3027:	74 69 6d 65 00                                      time.

0000302c <_ZZ12Publish_DatavE3__c_76>:
    302c:	70 6c 6f 74 00                                      plot.

00003031 <_ZZ12Publish_DatavE3__c_75>:
    3031:	74 69 6d 65 00                                      time.

00003036 <_ZZ12Publish_DatavE3__c_74>:
    3036:	6d 65 64 69 75 6d 00                                medium.

0000303d <_ZZ12Publish_DatavE3__c_73>:
    303d:	70 53 74 61 74 75 73 00                             pStatus.

00003045 <_ZZ12Publish_DatavE3__c_72>:
    3045:	70 53 74 61 74 75 73 00                             pStatus.

0000304d <_ZZ12Publish_DatavE3__c_71>:
    304d:	70 53 74 61 74 75 73 00                             pStatus.

00003055 <_ZZ12Publish_DatavE3__c_70>:
    3055:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3065:	20 46 62 20 72 65 73 65 6e 64 20 00                  Fb resend .

00003071 <_ZZ12Publish_DatavE3__c_69>:
    3071:	73 74 61 74 75 73 00                                status.

00003078 <_ZZ12Publish_DatavE3__c_68>:
    3078:	73 74 61 74 75 73 00                                status.

0000307f <_ZZ12Publish_DatavE3__c_67>:
    307f:	73 74 61 74 75 73 00                                status.

00003086 <_ZZ12Publish_DatavE3__c_66>:
    3086:	73 74 61 74 75 73 00                                status.

0000308d <_ZZ12Publish_DatavE3__c_65>:
    308d:	73 74 61 74 75 73 00                                status.

00003094 <_ZZ12Publish_DatavE3__c_64>:
    3094:	73 74 61 74 75 73 00                                status.

0000309b <_ZZ12Publish_DatavE3__c_63>:
    309b:	70 4e 6f 00                                         pNo.

0000309f <_ZZ12Publish_DatavE3__c_62>:
    309f:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    30af:	63 6b 20 72 65 73 65 6e 64 20 00                    ck resend .

000030ba <_ZZ12Publish_DatavE3__c_61>:
    30ba:	74 68 72 65 65 5f 70 68 61 73 65 00                 three_phase.

000030c6 <_ZZ12Publish_DatavE3__c_60>:
    30c6:	70 75 6d 70 5f 6e 75 6d 00                          pump_num.

000030cf <_ZZ12Publish_DatavE3__c_59>:
    30cf:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030de <_ZZ12Publish_DatavE3__c_58>:
    30de:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030e7 <_ZZ12Publish_DatavE3__c_57>:
    30e7:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030f6 <_ZZ12Publish_DatavE3__c_56>:
    30f6:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030ff <_ZZ12Publish_DatavE3__c_55>:
    30ff:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

0000310e <_ZZ12Publish_DatavE3__c_54>:
    310e:	73 63 5f 69 6e 64 65 78 00                          sc_index.

00003117 <_ZZ12Publish_DatavE3__c_53>:
    3117:	70 6c 6f 74 00                                      plot.

0000311c <_ZZ12Publish_DatavE3__c_52>:
    311c:	70 6c 6f 74 00                                      plot.

00003121 <_ZZ12Publish_DatavE3__c_51>:
    3121:	63 75 72 72 65 6e 74 54 72 61 6e 73 66 6f 72 6d     currentTransform
    3131:	65 72 00                                            er.

00003134 <_ZZ12Publish_DatavE3__c_50>:
    3134:	6d 6f 64 65 00                                      mode.

00003139 <_ZZ12Publish_DatavE3__c_49>:
    3139:	70 53 74 61 74 75 73 00                             pStatus.

00003141 <_ZZ12Publish_DatavE3__c_48>:
    3141:	70 53 74 61 74 75 73 00                             pStatus.

00003149 <_ZZ12Publish_DatavE3__c_47>:
    3149:	70 53 74 61 74 75 73 00                             pStatus.

00003151 <_ZZ12Publish_DatavE3__c_46>:
    3151:	73 74 61 74 75 73 00                                status.

00003158 <_ZZ12Publish_DatavE3__c_45>:
    3158:	73 74 61 74 75 73 00                                status.

0000315f <_ZZ12Publish_DatavE3__c_44>:
    315f:	73 74 61 74 75 73 00                                status.

00003166 <_ZZ12Publish_DatavE3__c_43>:
    3166:	73 74 61 74 75 73 00                                status.

0000316d <_ZZ12Publish_DatavE3__c_42>:
    316d:	73 74 61 74 75 73 00                                status.

00003174 <_ZZ12Publish_DatavE3__c_41>:
    3174:	6f 6e 65 20 74 6f 75 63 68 20 6f 6e 2e 2e 2e 2e     one touch on....
    3184:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3194:	2e 00                                               ..

00003196 <_ZZ12Publish_DatavE3__c_40>:
    3196:	73 74 61 74 75 73 00                                status.

0000319d <_ZZ12Publish_DatavE3__c_39>:
    319d:	6f 6e 65 20 74 6f 75 63 68 20 6f 66 66 2e 2e 2e     one touch off...
    31ad:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

000031be <_ZZ12Publish_DatavE3__c_38>:
    31be:	70 4e 6f 00                                         pNo.

000031c2 <_ZZ12Publish_DatavE3__c_37>:
    31c2:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    31d2:	63 6b 00                                            ck.

000031d5 <_ZZ12Publish_DatavE3__c_36>:
    31d5:	70 6c 6f 74 00                                      plot.

000031da <_ZZ12Publish_DatavE3__c_35>:
    31da:	74 69 6d 65 00                                      time.

000031df <_ZZ12Publish_DatavE3__c_34>:
    31df:	70 6c 6f 74 00                                      plot.

000031e4 <_ZZ12Publish_DatavE3__c_33>:
    31e4:	74 69 6d 65 00                                      time.

000031e9 <_ZZ12Publish_DatavE3__c_32>:
    31e9:	6d 65 64 69 75 6d 00                                medium.

000031f0 <_ZZ12Publish_DatavE3__c_31>:
    31f0:	70 53 74 61 74 75 73 00                             pStatus.

000031f8 <_ZZ12Publish_DatavE3__c_30>:
    31f8:	70 53 74 61 74 75 73 00                             pStatus.

00003200 <_ZZ12Publish_DatavE3__c_29>:
    3200:	70 53 74 61 74 75 73 00                             pStatus.

00003208 <_ZZ12Publish_DatavE3__c_28>:
    3208:	70 53 74 61 74 75 73 00                             pStatus.

00003210 <_ZZ12Publish_DatavE3__c_27>:
    3210:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3220:	20 46 62 00                                          Fb.

00003224 <_ZZ12Publish_DatavE3__c_26>:
    3224:	63 6f 64 65 73 00                                   codes.

0000322a <_ZZ12Publish_DatavE3__c_25>:
    322a:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    323a:	5f 44 41 54 41 00                                   _DATA.

00003240 <_ZZ12Publish_DatavE3__c_24>:
    3240:	76 61 6c 76 65 4f 70 65 6e 00                       valveOpen.

0000324a <_ZZ12Publish_DatavE3__c_23>:
    324a:	76 42 61 74 00                                      vBat.

0000324f <_ZZ12Publish_DatavE3__c_22>:
    324f:	76 61 6c 76 65 53 74 61 74 75 73 00                 valveStatus.

0000325b <_ZZ12Publish_DatavE3__c_21>:
    325b:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    326b:	5f 44 41 54 41 00                                   _DATA.

00003271 <_ZZ12Publish_DatavE3__c_20>:
    3271:	76 42 61 74 00                                      vBat.

00003276 <_ZZ12Publish_DatavE3__c_19>:
    3276:	6c 69 67 68 74 00                                   light.

0000327c <_ZZ12Publish_DatavE3__c_18>:
    327c:	68 75 6d 69 64 69 74 79 00                          humidity.

00003285 <_ZZ12Publish_DatavE3__c_17>:
    3285:	74 65 6d 70 65 72 61 74 75 72 65 00                 temperature.

00003291 <_ZZ12Publish_DatavE3__c_16>:
    3291:	73 6f 69 6c 5f 74 65 6d 70 00                       soil_temp.

0000329b <_ZZ12Publish_DatavE3__c_15>:
    329b:	73 6d 34 00                                         sm4.

0000329f <_ZZ12Publish_DatavE3__c_14>:
    329f:	73 6d 33 00                                         sm3.

000032a3 <_ZZ12Publish_DatavE3__c_13>:
    32a3:	73 6d 32 00                                         sm2.

000032a7 <_ZZ12Publish_DatavE3__c_12>:
    32a7:	73 6d 31 00                                         sm1.

000032ab <_ZZ12Publish_DatavE3__c_11>:
    32ab:	70 61 63 6b 65 74 5f 69 64 00                       packet_id.

000032b5 <_ZZ12Publish_DatavE3__c_10>:
    32b5:	5f 65 50 55 42 5f 4c 49 52 41 5f 4e 4f 44 45 5f     _ePUB_LIRA_NODE_
    32c5:	44 41 54 41 00                                      DATA.

000032ca <_ZZ12Publish_DatavE3__c_9>:
    32ca:	63 6f 64 65 73 00                                   codes.

000032d0 <_ZZ12Publish_DatavE3__c_8>:
    32d0:	70 6c 6f 74 00                                      plot.

000032d5 <_ZZ12Publish_DatavE3__c_7>:
    32d5:	70 6c 6f 74 00                                      plot.

000032da <_ZZ12Publish_DatavE3__c_6>:
    32da:	74 69 6d 65 00                                      time.

000032df <_ZZ12Publish_DatavE3__c_5>:
    32df:	74 69 6d 65 00                                      time.

000032e4 <_ZZ12Publish_DatavE3__c_4>:
    32e4:	6d 65 64 69 75 6d 00                                medium.

000032eb <_ZZ12Publish_DatavE3__c_3>:
    32eb:	70 53 74 61 74 75 73 00                             pStatus.

000032f3 <_ZZ12Publish_DatavE3__c_2>:
    32f3:	5f 65 50 55 42 5f 54 49 4d 45 52 5f 46 45 45 44     _ePUB_TIMER_FEED
    3303:	42 41 43 4b 00                                      BACK.

00003308 <_ZZ12Publish_DatavE3__c_1>:
    3308:	74 65 73 74 00                                      test.

0000330d <_ZZ12Publish_DatavE3__c_0>:
    330d:	74 65 73 74 00                                      test.

00003312 <_ZZ12Publish_DatavE3__c>:
    3312:	63 6f 64 65 73 00                                   codes.

00003318 <_ZZ12Pub_Sub_DataPcPhjhE3__c_123>:
    3318:	70 6c 6f 74 20 6d 61 74 63 68 2e 2e 2e 2e 2e 2e     plot match......
    3328:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3338:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3348:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

00003359 <_ZZ12Pub_Sub_DataPcPhjhE3__c_122>:
    3359:	73 74 61 74 75 73 00                                status.

00003360 <_ZZ12Pub_Sub_DataPcPhjhE3__c_121>:
    3360:	70 4e 6f 00                                         pNo.

00003364 <_ZZ12Pub_Sub_DataPcPhjhE3__c_120>:
    3364:	43 61 6c 69 62 72 61 74 69 6f 6e 20 6f 76 65 72     Calibration over
    3374:	20 72 75 6c 65 64 00                                 ruled.

0000337b <_ZZ12Pub_Sub_DataPcPhjhE3__c_119>:
    337b:	43 61 6c 69 62 72 61 74 69 6f 6e 20 74 6f 70 69     Calibration topi
    338b:	63 20 67 65 74 20 66 72 6f 6d 20 73 65 72 76 65     c get from serve
    339b:	72 00                                               r.

0000339d <_ZZ12Pub_Sub_DataPcPhjhE3__c_118>:
    339d:	43 61 6c 69 62 72 61 74 69 6f 6e 00                 Calibration.

000033a9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_117>:
    33a9:	53 43 20 53 54 41 52 54 20 46 52 4f 4d 20 3a 20     SC START FROM : 
	...

000033ba <_ZZ12Pub_Sub_DataPcPhjhE3__c_116>:
    33ba:	54 41 4e 4b 20 44 75 72 61 74 69 6f 6e 3a 20 00     TANK Duration: .

000033ca <_ZZ12Pub_Sub_DataPcPhjhE3__c_115>:
    33ca:	54 41 4e 4b 20 6f 6e 20 61 66 74 65 72 3a 20 00     TANK on after: .

000033da <_ZZ12Pub_Sub_DataPcPhjhE3__c_114>:
    33da:	54 41 4e 4b 20 4e 4f 3a 20 00                       TANK NO: .

000033e4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_113>:
    33e4:	54 41 4e 4b 20 53 54 41 54 3a 20 00                 TANK STAT: .

000033f0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_112>:
    33f0:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

000033fa <_ZZ12Pub_Sub_DataPcPhjhE3__c_111>:
    33fa:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    340a:	20 00                                                .

0000340c <_ZZ12Pub_Sub_DataPcPhjhE3__c_110>:
    340c:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003417 <_ZZ12Pub_Sub_DataPcPhjhE3__c_109>:
    3417:	54 6e 4f 66 00                                      TnOf.

0000341c <_ZZ12Pub_Sub_DataPcPhjhE3__c_108>:
    341c:	54 6e 4f 6e 00                                      TnOn.

00003421 <_ZZ12Pub_Sub_DataPcPhjhE3__c_107>:
    3421:	54 6e 4e 6f 00                                      TnNo.

00003426 <_ZZ12Pub_Sub_DataPcPhjhE3__c_106>:
    3426:	54 6e 53 74 00                                      TnSt.

0000342b <_ZZ12Pub_Sub_DataPcPhjhE3__c_105>:
    342b:	47 65 74 20 54 61 6e 6b 5f 53 63 68 65 64 75 6c     Get Tank_Schedul
    343b:	65 20 66 72 6f 6d 20 53 65 72 76 65 72 00           e from Server.

00003449 <_ZZ12Pub_Sub_DataPcPhjhE3__c_104>:
    3449:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003454 <_ZZ12Pub_Sub_DataPcPhjhE3__c_103>:
    3454:	53 63 53 74 61 74 00                                ScStat.

0000345b <_ZZ12Pub_Sub_DataPcPhjhE3__c_102>:
    345b:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    346b:	20 00                                                .

0000346d <_ZZ12Pub_Sub_DataPcPhjhE3__c_101>:
    346d:	53 63 4f 6e 00                                      ScOn.

00003472 <_ZZ12Pub_Sub_DataPcPhjhE3__c_100>:
    3472:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

0000347c <_ZZ12Pub_Sub_DataPcPhjhE3__c_99>:
    347c:	53 63 4e 75 6d 00                                   ScNum.

00003482 <_ZZ12Pub_Sub_DataPcPhjhE3__c_98>:
    3482:	53 63 4f 66 66 00                                   ScOff.

00003488 <_ZZ12Pub_Sub_DataPcPhjhE3__c_97>:
    3488:	53 63 4f 6e 00                                      ScOn.

0000348d <_ZZ12Pub_Sub_DataPcPhjhE3__c_96>:
    348d:	53 65 6e 00                                         Sen.

00003491 <_ZZ12Pub_Sub_DataPcPhjhE3__c_95>:
    3491:	53 63 68 65 64 75 6c 65 20 74 6f 70 69 63 20 67     Schedule topic g
    34a1:	65 74 20 66 72 6f 6d 20 73 65 72 76 65 72 20 3a     et from server :
    34b1:	20 00                                                .

000034b3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_94>:
    34b3:	73 6d 73 20 61 6c 65 72 74 20 6f 66 66 00           sms alert off.

000034c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_93>:
    34c1:	73 6d 73 20 61 6c 65 72 74 20 6f 6e 00              sms alert on.

000034ce <_ZZ12Pub_Sub_DataPcPhjhE3__c_92>:
    34ce:	73 6d 73 00                                         sms.

000034d2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_91>:
    34d2:	64 65 76 69 63 65 4e 75 6d 62 65 72 00              deviceNumber.

000034df <_ZZ12Pub_Sub_DataPcPhjhE3__c_90>:
    34df:	66 61 72 6d 65 72 4e 75 6d 62 65 72 00              farmerNumber.

000034ec <_ZZ12Pub_Sub_DataPcPhjhE3__c_89>:
    34ec:	66 6f 72 63 65 20 73 74 6f 70 20 72 65 73 75 6d     force stop resum
    34fc:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003507 <_ZZ12Pub_Sub_DataPcPhjhE3__c_88>:
    3507:	66 6f 72 63 65 20 73 74 6f 70 20 74 6f 70 69 63     force stop topic
    3517:	20 3a 20 00                                          : .

0000351b <_ZZ12Pub_Sub_DataPcPhjhE3__c_87>:
    351b:	72 65 73 75 6d 65 20 73 63 68 65 64 75 6c 65 20     resume schedule 
    352b:	74 6f 70 69 63 20 3a 20 00                          topic : .

00003534 <_ZZ12Pub_Sub_DataPcPhjhE3__c_86>:
    3534:	70 61 75 73 65 20 73 63 68 65 64 75 6c 65 20 74     pause schedule t
    3544:	6f 70 69 63 20 3a 20 00                             opic : .

0000354c <_ZZ12Pub_Sub_DataPcPhjhE3__c_85>:
    354c:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

00003555 <_ZZ12Pub_Sub_DataPcPhjhE3__c_84>:
    3555:	65 78 74 72 61 20 70 6c 6f 74 20 64 65 6c 65 74     extra plot delet
    3565:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003570 <_ZZ12Pub_Sub_DataPcPhjhE3__c_83>:
    3570:	53 43 48 45 44 5f 4e 55 4d 00                       SCHED_NUM.

0000357a <_ZZ12Pub_Sub_DataPcPhjhE3__c_82>:
    357a:	73 63 68 65 64 75 6c 65 20 70 6c 6f 74 20 64 65     schedule plot de
    358a:	6c 65 74 65 20 74 6f 70 69 63 20 3a 20 00           lete topic : .

00003598 <_ZZ12Pub_Sub_DataPcPhjhE3__c_81>:
    3598:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

000035a1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_80>:
    35a1:	70 6c 6f 74 20 64 65 6c 65 74 65 20 74 6f 70 69     plot delete topi
    35b1:	63 20 3a 20 00                                      c : .

000035b6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_79>:
    35b6:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_78>:
    35c1:	56 41 4c 56 45 20 64 65 6c 65 74 65 20 66 72 6f     VALVE delete fro
    35d1:	6d 20 50 6c 6f 74 20 6e 6f 2e 3a 20 00              m Plot no.: .

000035de <_ZZ12Pub_Sub_DataPcPhjhE3__c_77>:
    35de:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035e9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_76>:
    35e9:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

000035f4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_75>:
    35f4:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    3604:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

0000360f <_ZZ12Pub_Sub_DataPcPhjhE3__c_74>:
    360f:	76 49 64 00                                         vId.

00003613 <_ZZ12Pub_Sub_DataPcPhjhE3__c_73>:
    3613:	76 61 6c 76 65 20 64 65 6c 65 74 65 20 74 6f 70     valve delete top
    3623:	69 63 20 3a 20 00                                   ic : .

00003629 <_ZZ12Pub_Sub_DataPcPhjhE3__c_72>:
    3629:	63 6f 64 65 00                                      code.

0000362e <_ZZ12Pub_Sub_DataPcPhjhE3__c_71>:
    362e:	70 6c 6f 74 20 73 65 6c 20 3a 20 00                 plot sel : .

0000363a <_ZZ12Pub_Sub_DataPcPhjhE3__c_70>:
    363a:	6d 61 78 20 3a 20 00                                max : .

00003641 <_ZZ12Pub_Sub_DataPcPhjhE3__c_69>:
    3641:	6d 69 6e 20 3a 20 00                                min : .

00003648 <_ZZ12Pub_Sub_DataPcPhjhE3__c_68>:
    3648:	73 65 6c 5f 70 6c 6f 74 00                          sel_plot.

00003651 <_ZZ12Pub_Sub_DataPcPhjhE3__c_67>:
    3651:	6d 61 78 00                                         max.

00003655 <_ZZ12Pub_Sub_DataPcPhjhE3__c_66>:
    3655:	6d 61 78 00                                         max.

00003659 <_ZZ12Pub_Sub_DataPcPhjhE3__c_65>:
    3659:	6d 69 6e 00                                         min.

0000365d <_ZZ12Pub_Sub_DataPcPhjhE3__c_64>:
    365d:	6d 69 6e 00                                         min.

00003661 <_ZZ12Pub_Sub_DataPcPhjhE3__c_63>:
    3661:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

0000366d <_ZZ12Pub_Sub_DataPcPhjhE3__c_62>:
    366d:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    367d:	72 2e 3a 20 00                                      r.: .

00003682 <_ZZ12Pub_Sub_DataPcPhjhE3__c_61>:
    3682:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3692:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

0000369e <_ZZ12Pub_Sub_DataPcPhjhE3__c_60>:
    369e:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000036a9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_59>:
    36a9:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

000036b5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_58>:
    36b5:	76 61 6c 76 65 20 35 3a 20 00                       valve 5: .

000036bf <_ZZ12Pub_Sub_DataPcPhjhE3__c_57>:
    36bf:	76 61 6c 76 65 20 34 3a 20 00                       valve 4: .

000036c9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_56>:
    36c9:	76 61 6c 76 65 20 33 3a 20 00                       valve 3: .

000036d3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_55>:
    36d3:	76 61 6c 76 65 20 32 3a 20 00                       valve 2: .

000036dd <_ZZ12Pub_Sub_DataPcPhjhE3__c_54>:
    36dd:	76 61 6c 76 65 20 31 3a 20 00                       valve 1: .

000036e7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_53>:
    36e7:	53 65 6e 73 6f 72 20 4e 6f 2e 3a 20 00              Sensor No.: .

000036f4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_52>:
    36f4:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3704:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

00003710 <_ZZ12Pub_Sub_DataPcPhjhE3__c_51>:
    3710:	6f 70 4d 6f 64 65 00                                opMode.

00003717 <_ZZ12Pub_Sub_DataPcPhjhE3__c_50>:
    3717:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3727:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003732 <_ZZ12Pub_Sub_DataPcPhjhE3__c_49>:
    3732:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3742:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000374d <_ZZ12Pub_Sub_DataPcPhjhE3__c_48>:
    374d:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    375d:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003768 <_ZZ12Pub_Sub_DataPcPhjhE3__c_47>:
    3768:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3778:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003787 <_ZZ12Pub_Sub_DataPcPhjhE3__c_46>:
    3787:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3797:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000037a6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_45>:
    37a6:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    37b6:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000037c5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_44>:
    37c5:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 44 41     wireless pump DA
    37d5:	54 41 20 47 45 54 20 46 52 4f 4d 20 53 45 52 56     TA GET FROM SERV
    37e5:	45 52 00                                            ER.

000037e8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_43>:
    37e8:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    37f8:	6f 6e 20 00                                         on .

000037fc <_ZZ12Pub_Sub_DataPcPhjhE3__c_42>:
    37fc:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    380c:	74 68 65 20 6c 69 73 74 00                          the list.

00003815 <_ZZ12Pub_Sub_DataPcPhjhE3__c_41>:
    3815:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

00003826 <_ZZ12Pub_Sub_DataPcPhjhE3__c_40>:
    3826:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3836:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003841 <_ZZ12Pub_Sub_DataPcPhjhE3__c_39>:
    3841:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3851:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000385c <_ZZ12Pub_Sub_DataPcPhjhE3__c_38>:
    385c:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    386c:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003877 <_ZZ12Pub_Sub_DataPcPhjhE3__c_37>:
    3877:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3887:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003892 <_ZZ12Pub_Sub_DataPcPhjhE3__c_36>:
    3892:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38a2:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038ad <_ZZ12Pub_Sub_DataPcPhjhE3__c_35>:
    38ad:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    38bd:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038c8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_34>:
    38c8:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    38d8:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038e3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_33>:
    38e3:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38f3:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038fe <_ZZ12Pub_Sub_DataPcPhjhE3__c_32>:
    38fe:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    390e:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003919 <_ZZ12Pub_Sub_DataPcPhjhE3__c_31>:
    3919:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3929:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003938 <_ZZ12Pub_Sub_DataPcPhjhE3__c_30>:
    3938:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3948:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003957 <_ZZ12Pub_Sub_DataPcPhjhE3__c_29>:
    3957:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3967:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003976 <_ZZ12Pub_Sub_DataPcPhjhE3__c_28>:
    3976:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

00003981 <_ZZ12Pub_Sub_DataPcPhjhE3__c_27>:
    3981:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

0000398c <_ZZ12Pub_Sub_DataPcPhjhE3__c_26>:
    398c:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    399c:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

000039a7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_25>:
    39a7:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    39b7:	6f 6e 20 00                                         on .

000039bb <_ZZ12Pub_Sub_DataPcPhjhE3__c_24>:
    39bb:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    39cb:	74 68 65 20 6c 69 73 74 00                          the list.

000039d4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_23>:
    39d4:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

000039e5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_22>:
    39e5:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    39f5:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a00 <_ZZ12Pub_Sub_DataPcPhjhE3__c_21>:
    3a00:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3a10:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a1b <_ZZ12Pub_Sub_DataPcPhjhE3__c_20>:
    3a1b:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a2b:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a36 <_ZZ12Pub_Sub_DataPcPhjhE3__c_19>:
    3a36:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3a46:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a51 <_ZZ12Pub_Sub_DataPcPhjhE3__c_18>:
    3a51:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3a61:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a6c <_ZZ12Pub_Sub_DataPcPhjhE3__c_17>:
    3a6c:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a7c:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a87 <_ZZ12Pub_Sub_DataPcPhjhE3__c_16>:
    3a87:	76 61 6c 76 65 35 00                                valve5.

00003a8e <_ZZ12Pub_Sub_DataPcPhjhE3__c_15>:
    3a8e:	76 61 6c 76 65 34 00                                valve4.

00003a95 <_ZZ12Pub_Sub_DataPcPhjhE3__c_14>:
    3a95:	76 61 6c 76 65 33 00                                valve3.

00003a9c <_ZZ12Pub_Sub_DataPcPhjhE3__c_13>:
    3a9c:	76 61 6c 76 65 32 00                                valve2.

00003aa3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_12>:
    3aa3:	76 61 6c 76 65 31 00                                valve1.

00003aaa <_ZZ12Pub_Sub_DataPcPhjhE3__c_11>:
    3aaa:	70 4e 6f 00                                         pNo.

00003aae <_ZZ12Pub_Sub_DataPcPhjhE3__c_10>:
    3aae:	53 65 74 20 63 6f 65 66 66 65 63 69 65 6e 74 20     Set coeffecient 
    3abe:	54 6f 70 69 63 20 66 72 6f 6d 20 73 65 72 76 65     Topic from serve
    3ace:	72 00                                               r.

00003ad0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_6>:
    3ad0:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 00     Irrigating plot.

00003ae0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_5>:
    3ae0:	50 55 4d 50 20 52 55 4e 20 54 49 4d 45 52 00        PUMP RUN TIMER.

00003aef <_ZZ12Pub_Sub_DataPcPhjhE3__c_4>:
    3aef:	74 00                                               t.

00003af1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_3>:
    3af1:	70 4e 6f 00                                         pNo.

00003af5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_2>:
    3af5:	67 65 74 20 54 49 4d 45 52 20 66 72 6f 6d 20 73     get TIMER from s
    3b05:	65 72 76 65 72 00                                   erver.

00003b0b <_ZZ12Pub_Sub_DataPcPhjhE3__c_1>:
    3b0b:	47 65 74 20 43 6f 6e 74 72 6f 6c 6c 65 72 20 69     Get Controller i
    3b1b:	73 20 72 65 67 69 73 74 65 72 65 64 20 74 6f 20     s registered to 
    3b2b:	53 65 76 65 72 20 54 6f 70 69 63 00                 Sever Topic.

00003b37 <_ZZ12Pub_Sub_DataPcPhjhE3__c_0>:
    3b37:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b47:	6e 63 74 69 6f 6e 20 32 00                          nction 2.

00003b50 <_ZZ12Pub_Sub_DataPcPhjhE3__c>:
    3b50:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b60:	6e 63 74 69 6f 6e 20 31 00                          nction 1.

00003b69 <_ZZ14Lora_OperationvE3__c>:
    3b69:	4c 6f 72 61 20 44 61 74 61 20 52 65 63 69 76 65     Lora Data Recive
    3b79:	64 00                                               d.

00003b7b <_ZZ22Valve_Grouping_HandlerhE3__c_40>:
    3b7b:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3b8b:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003b9a <_ZZ22Valve_Grouping_HandlerhE3__c_39>:
    3b9a:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3baa:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3bba:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3bca:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003bd5 <_ZZ22Valve_Grouping_HandlerhE3__c_38>:
    3bd5:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3be5:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3bf5:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3c05:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003c10 <_ZZ22Valve_Grouping_HandlerhE3__c_37>:
    3c10:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3c20:	69 6c 00                                            il.

00003c23 <_ZZ22Valve_Grouping_HandlerhE3__c_36>:
    3c23:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3c33:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3c43:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003c4e <_ZZ22Valve_Grouping_HandlerhE3__c_35>:
    3c4e:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3c5e:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003c6c <_ZZ22Valve_Grouping_HandlerhE3__c_34>:
    3c6c:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3c7c:	74 61 20 3a 20 00                                   ta : .

00003c82 <_ZZ22Valve_Grouping_HandlerhE3__c_33>:
    3c82:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3c92:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3ca2:	65 20 31 00                                         e 1.

00003ca6 <_ZZ22Valve_Grouping_HandlerhE3__c_32>:
    3ca6:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3cb6:	6d 62 65 72 20 00                                   mber .

00003cbc <_ZZ22Valve_Grouping_HandlerhE3__c_31>:
    3cbc:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3ccc:	6f 2e 20 00                                         o. .

00003cd0 <_ZZ22Valve_Grouping_HandlerhE3__c_30>:
    3cd0:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3ce0:	6e 6f 20 3a 20 00                                   no : .

00003ce6 <_ZZ22Valve_Grouping_HandlerhE3__c_29>:
    3ce6:	20 00                                                .

00003ce8 <_ZZ22Valve_Grouping_HandlerhE3__c_28>:
    3ce8:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003cf6 <_ZZ22Valve_Grouping_HandlerhE3__c_27>:
    3cf6:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3d06:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003d15 <_ZZ22Valve_Grouping_HandlerhE3__c_26>:
    3d15:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d25:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d35:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d45:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003d50 <_ZZ22Valve_Grouping_HandlerhE3__c_25>:
    3d50:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d60:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d70:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d80:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003d8b <_ZZ22Valve_Grouping_HandlerhE3__c_24>:
    3d8b:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d9b:	69 6c 00                                            il.

00003d9e <_ZZ22Valve_Grouping_HandlerhE3__c_23>:
    3d9e:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3dae:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3dbe:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003dc9 <_ZZ22Valve_Grouping_HandlerhE3__c_22>:
    3dc9:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3dd9:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003de7 <_ZZ22Valve_Grouping_HandlerhE3__c_21>:
    3de7:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3df7:	74 61 20 3a 20 00                                   ta : .

00003dfd <_ZZ22Valve_Grouping_HandlerhE3__c_20>:
    3dfd:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3e0d:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3e1d:	65 20 31 00                                         e 1.

00003e21 <_ZZ22Valve_Grouping_HandlerhE3__c_19>:
    3e21:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3e31:	6d 62 65 72 20 00                                   mber .

00003e37 <_ZZ22Valve_Grouping_HandlerhE3__c_18>:
    3e37:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3e47:	6f 2e 20 00                                         o. .

00003e4b <_ZZ22Valve_Grouping_HandlerhE3__c_17>:
    3e4b:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3e5b:	6e 6f 20 3a 20 00                                   no : .

00003e61 <_ZZ22Valve_Grouping_HandlerhE3__c_16>:
    3e61:	20 00                                                .

00003e63 <_ZZ22Valve_Grouping_HandlerhE3__c_15>:
    3e63:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003e71 <_ZZ22Valve_Grouping_HandlerhE3__c_14>:
    3e71:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
    3e81:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
    3e91:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

00003e9f <_ZZ22Valve_Grouping_HandlerhE3__c_13>:
    3e9f:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3eaf:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
    3ebf:	29 00                                               ).

00003ec1 <_ZZ22Valve_Grouping_HandlerhE3__c_12>:
    3ec1:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3ed1:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3ee1:	20 6f 6e 6e 29 00                                    onn).

00003ee7 <_ZZ22Valve_Grouping_HandlerhE3__c_11>:
    3ee7:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3ef7:	61 20 3a 20 00                                      a : .

00003efc <_ZZ22Valve_Grouping_HandlerhE3__c_10>:
    3efc:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3f0c:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3f1c:	65 20 3b 00                                         e ;.

00003f20 <_ZZ22Valve_Grouping_HandlerhE3__c_9>:
    3f20:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3f30:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3f40:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003f4b <_ZZ22Valve_Grouping_HandlerhE3__c_8>:
    3f4b:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
    3f5b:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
    3f6b:	61 64 79 20 6f 6e 00                                ady on.

00003f72 <_ZZ22Valve_Grouping_HandlerhE3__c_7>:
    3f72:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3f82:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00003f93 <_ZZ22Valve_Grouping_HandlerhE3__c_6>:
    3f93:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3fa3:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3fb3:	20 6f 6e 29 00                                       on).

00003fb8 <_ZZ22Valve_Grouping_HandlerhE3__c_5>:
    3fb8:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3fc8:	61 20 3a 20 00                                      a : .

00003fcd <_ZZ22Valve_Grouping_HandlerhE3__c_4>:
    3fcd:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3fdd:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3fed:	65 20 00                                            e .

00003ff0 <_ZZ22Valve_Grouping_HandlerhE3__c_3>:
    3ff0:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    4000:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    4010:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

0000401b <_ZZ22Valve_Grouping_HandlerhE3__c_2>:
    401b:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    402b:	20 00                                                .

0000402d <_ZZ22Valve_Grouping_HandlerhE3__c_1>:
    402d:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000403e <_ZZ22Valve_Grouping_HandlerhE3__c_0>:
    403e:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    404e:	20 00                                                .

00004050 <_ZZ22Valve_Grouping_HandlerhE3__c>:
    4050:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00004061 <_ZZ15Stop_IrrigationvE3__c_3>:
    4061:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4071:	74 6f 20 53 74 6f 70 00                             to Stop.

00004079 <_ZZ15Stop_IrrigationvE3__c_2>:
    4079:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

0000408a <_ZZ15Stop_IrrigationvE3__c_1>:
    408a:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

0000409b <_ZZ15Stop_IrrigationvE3__c_0>:
    409b:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40ab:	72 20 32 32 32 32 32 32 32 32 32 32 32 32 32 32     r 22222222222222
    40bb:	32 32 32 32 32 32 32 32 32 00                       222222222.

000040c5 <_ZZ15Stop_IrrigationvE3__c>:
    40c5:	54 72 79 20 74 6f 20 73 74 6f 70 20 49 72 72 69     Try to stop Irri
    40d5:	67 61 74 69 6f 6e 00                                gation.

000040dc <_ZZ16Start_IrrigationvE3__c_5>:
    40dc:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    40ec:	53 74 61 72 74 00                                   Start.

000040f2 <_ZZ16Start_IrrigationvE3__c_4>:
    40f2:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 61 72 74     Irrigation Start
	...

00004103 <_ZZ16Start_IrrigationvE3__c_3>:
    4103:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4113:	53 74 61 72 74 00                                   Start.

00004119 <_ZZ16Start_IrrigationvE3__c_2>:
    4119:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4129:	72 20 66 61 69 6c 20 74 6f 20 6f 6e 00              r fail to on.

00004136 <_ZZ16Start_IrrigationvE3__c_1>:
    4136:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4146:	72 20 6f 6e 00                                      r on.

0000414b <_ZZ16Start_IrrigationvE3__c_0>:
    414b:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    415b:	72 20 31 31 31 31 31 31 31 31 31 31 31 31 31 31     r 11111111111111
    416b:	31 31 31 31 31 31 00                                111111.

00004172 <_ZZ16Start_IrrigationvE3__c>:
    4172:	54 72 79 20 74 6f 20 53 74 61 72 74 20 54 68 65     Try to Start The
    4182:	20 49 72 72 69 67 61 74 69 6f 6e 00                  Irrigation.

0000418e <_ZZ13Run_OperationvE3__c_21>:
    418e:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    419e:	2c 20 49 72 72 69 67 61 74 69 6f 6e 00              , Irrigation.

000041ab <_ZZ13Run_OperationvE3__c_19>:
    41ab:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    41bb:	6d 6f 64 65 20 2c 20 4f 70 65 72 61 74 69 6f 6e     mode , Operation
    41cb:	20 53 74 61 72 74 00                                 Start.

000041d2 <_ZZ13Run_OperationvE3__c_18>:
    41d2:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41e2:	2c 20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68     , kill switch th
    41f2:	72 6f 75 67 68 20 61 70 70 00                       rough app.

000041fc <_ZZ13Run_OperationvE3__c_17>:
    41fc:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    420c:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    421c:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    422c:	20 33 00                                             3.

0000422f <_ZZ13Run_OperationvE3__c_16>:
    422f:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    423f:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    424f:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    425f:	20 32 00                                             2.

00004262 <_ZZ13Run_OperationvE3__c_15>:
    4262:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4272:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    4282:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4292:	20 31 00                                             1.

00004295 <_ZZ13Run_OperationvE3__c_14>:
    4295:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42a5:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    42b5:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    42c5:	20 30 00                                             0.

000042c8 <_ZZ13Run_OperationvE3__c_13>:
    42c8:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42d8:	20 2c 20 54 69 6d 65 20 4f 76 65 72 00               , Time Over.

000042e5 <_ZZ13Run_OperationvE3__c_12>:
    42e5:	50 75 6d 70 20 52 75 6e 20 54 69 6d 65 72 20 69     Pump Run Timer i
    42f5:	6e 20 54 69 6d 65 72 20 3a 20 00                    n Timer : .

00004300 <_ZZ13Run_OperationvE3__c_11>:
    4300:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4310:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    4320:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    4330:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    4340:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004348 <_ZZ13Run_OperationvE3__c_10>:
    4348:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4358:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    4368:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    4378:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    4388:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004390 <_ZZ13Run_OperationvE3__c_9>:
    4390:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    43a0:	20 2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61      , Irrigation fa
    43b0:	69 6c 73 20 74 6f 20 73 74 6f 70 20 62 75 74 20     ils to stop but 
    43c0:	72 75 6e 20 66 6f 72 20 6e 65 78 74 20 70 6c 6f     run for next plo
    43d0:	74 20 00                                            t .

000043d3 <_ZZ13Run_OperationvE3__c_8>:
    43d3:	4d 6f 64 65 3a 54 69 6d 65 72 20 4d 6f 64 65 20     Mode:Timer Mode 
    43e3:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    43f3:	74 00                                               t.

000043f5 <_ZZ13Run_OperationvE3__c_7>:
    43f5:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    4405:	20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68 72      kill switch thr
    4415:	6f 75 67 68 20 61 70 70 00                          ough app.

0000441e <_ZZ13Run_OperationvE3__c_6>:
    441e:	66 6f 67 67 65 72 20 6f 6e 20 49 72 72 69 67 61     fogger on Irriga
    442e:	74 69 6f 6e 20 73 74 6f 70 73 00                    tion stops.

00004439 <_ZZ13Run_OperationvE3__c_5>:
    4439:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    4449:	49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c 61 74     Irrigation Relat
    4459:	65 64 20 46 61 75 6c 74 20 6f 63 63 75 72 00        ed Fault occur.

00004468 <_ZZ13Run_OperationvE3__c_3>:
    4468:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4478:	2c 20 47 6f 69 6e 67 20 54 6f 20 53 74 61 72 74     , Going To Start
	...

00004489 <_ZZ13Run_OperationvE3__c_2>:
    4489:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4499:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61 69     , Irrigation fai
    44a9:	6c 73 20 74 6f 20 73 74 6f 70 00                    ls to stop.

000044b4 <_ZZ13Run_OperationvE3__c_1>:
    44b4:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    44c4:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    44d4:	74 00                                               t.

000044d6 <_ZZ13Run_OperationvE3__c_0>:
    44d6:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 2c 20 49     Mode: Manual , I
    44e6:	72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 73 20     rrigation fails 
    44f6:	74 6f 20 73 74 6f 70 00                             to stop.

000044fe <_ZZ13Run_OperationvE3__c>:
    44fe:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 73 65 6c     Mode: Manual sel
    450e:	65 63 74 65 64 2c 20 20 4f 70 65 72 61 74 69 6f     ected,  Operatio
    451e:	6e 20 53 74 61 72 74 00                             n Start.

00004526 <_ZZ21Select_Operation_ModevE3__c_11>:
    4526:	41 75 74 6f 20 4d 6f 64 65 20 73 65 6c 65 63 74     Auto Mode select
    4536:	65 64 00                                            ed.

00004539 <_ZZ21Select_Operation_ModevE3__c_10>:
    4539:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4549:	65 64 00                                            ed.

0000454c <_ZZ21Select_Operation_ModevE3__c_9>:
    454c:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    455c:	63 74 65 64 00                                      cted.

00004561 <_ZZ21Select_Operation_ModevE3__c_8>:
    4561:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4571:	65 64 00                                            ed.

00004574 <_ZZ21Select_Operation_ModevE3__c_7>:
    4574:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4584:	63 74 65 64 00                                      cted.

00004589 <_ZZ21Select_Operation_ModevE3__c_6>:
    4589:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4599:	63 74 65 64 00                                      cted.

0000459e <_ZZ21Select_Operation_ModevE3__c_5>:
    459e:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    45ae:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

000045ba <_ZZ21Select_Operation_ModevE3__c_4>:
    45ba:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    45ca:	65 64 00                                            ed.

000045cd <_ZZ21Select_Operation_ModevE3__c_3>:
    45cd:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    45dd:	74 65 64 00                                         ted.

000045e1 <_ZZ21Select_Operation_ModevE3__c_2>:
    45e1:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    45f1:	74 65 64 00                                         ted.

000045f5 <_ZZ21Select_Operation_ModevE3__c_1>:
    45f5:	44 61 74 61 20 4c 6f 67 67 65 72 20 4d 6f 64 65     Data Logger Mode
    4605:	20 73 65 6c 65 63 74 65 64 00                        selected.

0000460f <_ZZ21Select_Operation_ModevE3__c_0>:
    460f:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    461f:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

0000462b <_ZZ21Select_Operation_ModevE3__c>:
    462b:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    463b:	63 74 65 64 00                                      cted.

00004640 <digital_pin_to_timer_PGM>:
    4640:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    466c:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00004686 <digital_pin_to_bit_mask_PGM>:
    4686:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    4696:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    46a6:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    46b6:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    46c6:	04 08 10 20 40 80                                   ... @.

000046cc <digital_pin_to_port_PGM>:
    46cc:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    46dc:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    46ec:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    46fc:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    470c:	0b 0b 0b 0b 0b 0b                                   ......

00004712 <port_to_input_PGM>:
    4712:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    4722:	00 01 00 00 03 01 06 01 09 01                       ..........

0000472c <port_to_output_PGM>:
    472c:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    473c:	02 01 00 00 05 01 08 01 0b 01                       ..........

00004746 <port_to_mode_PGM>:
    4746:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    4756:	01 01 00 00 04 01 07 01 0a 01                       ..........

00004760 <_ZL18MODEM_CONFIG_TABLE>:
    4760:	72 74 04 92 74 04 48 94 04 78 c4 0c 72 b4 04 00     rt..t.H..x..r...

00004770 <__ctors_start>:
    4770:	1e 68       	ori	r17, 0x8E	; 142
    4772:	6e d4       	rcall	.+2268   	; 0x5050 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x18c>
    4774:	c4 d4       	rcall	.+2440   	; 0x50fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x23a>
    4776:	20 dd       	rcall	.-1472   	; 0x41b8 <_ZZ13Run_OperationvE3__c_19+0xd>
    4778:	d6 e2       	ldi	r29, 0x26	; 38

0000477a <__ctors_end>:
    477a:	11 24       	eor	r1, r1
    477c:	1f be       	out	0x3f, r1	; 63
    477e:	cf ef       	ldi	r28, 0xFF	; 255
    4780:	d1 e2       	ldi	r29, 0x21	; 33
    4782:	de bf       	out	0x3e, r29	; 62
    4784:	cd bf       	out	0x3d, r28	; 61
    4786:	00 e0       	ldi	r16, 0x00	; 0
    4788:	0c bf       	out	0x3c, r16	; 60

0000478a <__do_copy_data>:
    478a:	19 e0       	ldi	r17, 0x09	; 9
    478c:	a0 e0       	ldi	r26, 0x00	; 0
    478e:	b2 e0       	ldi	r27, 0x02	; 2
    4790:	ee ee       	ldi	r30, 0xEE	; 238
    4792:	f1 ee       	ldi	r31, 0xE1	; 225
    4794:	01 e0       	ldi	r16, 0x01	; 1
    4796:	0b bf       	out	0x3b, r16	; 59
    4798:	02 c0       	rjmp	.+4      	; 0x479e <__do_copy_data+0x14>
    479a:	07 90       	elpm	r0, Z+
    479c:	0d 92       	st	X+, r0
    479e:	a6 31       	cpi	r26, 0x16	; 22
    47a0:	b1 07       	cpc	r27, r17
    47a2:	d9 f7       	brne	.-10     	; 0x479a <__do_copy_data+0x10>

000047a4 <__do_clear_bss>:
    47a4:	29 e1       	ldi	r18, 0x19	; 25
    47a6:	a6 e1       	ldi	r26, 0x16	; 22
    47a8:	b9 e0       	ldi	r27, 0x09	; 9
    47aa:	01 c0       	rjmp	.+2      	; 0x47ae <.do_clear_bss_start>

000047ac <.do_clear_bss_loop>:
    47ac:	1d 92       	st	X+, r1

000047ae <.do_clear_bss_start>:
    47ae:	a9 32       	cpi	r26, 0x29	; 41
    47b0:	b2 07       	cpc	r27, r18
    47b2:	e1 f7       	brne	.-8      	; 0x47ac <.do_clear_bss_loop>

000047b4 <__do_global_ctors>:
    47b4:	13 e2       	ldi	r17, 0x23	; 35
    47b6:	cd eb       	ldi	r28, 0xBD	; 189
    47b8:	d3 e2       	ldi	r29, 0x23	; 35
    47ba:	00 e0       	ldi	r16, 0x00	; 0
    47bc:	06 c0       	rjmp	.+12     	; 0x47ca <__do_global_ctors+0x16>
    47be:	21 97       	sbiw	r28, 0x01	; 1
    47c0:	01 09       	sbc	r16, r1
    47c2:	80 2f       	mov	r24, r16
    47c4:	fe 01       	movw	r30, r28
    47c6:	0e 94 bb eb 	call	0x1d776	; 0x1d776 <__tablejump2__>
    47ca:	c8 3b       	cpi	r28, 0xB8	; 184
    47cc:	d1 07       	cpc	r29, r17
    47ce:	80 e0       	ldi	r24, 0x00	; 0
    47d0:	08 07       	cpc	r16, r24
    47d2:	a9 f7       	brne	.-22     	; 0x47be <__do_global_ctors+0xa>
    47d4:	0e 94 9c 84 	call	0x10938	; 0x10938 <main>
    47d8:	0c 94 f5 f0 	jmp	0x1e1ea	; 0x1e1ea <_exit>

000047dc <__bad_interrupt>:
    47dc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000047e0 <_ZN5Print5writeEPKcj>:
			}
			Wireless_Pump_On_Off(_ePUMP_OFF,i);
			//Wireless_Pump_On_Off(i,_kOFF);
		}
	}
}
    47e0:	dc 01       	movw	r26, r24
    47e2:	ed 91       	ld	r30, X+
    47e4:	fc 91       	ld	r31, X
    47e6:	02 80       	ldd	r0, Z+2	; 0x02
    47e8:	f3 81       	ldd	r31, Z+3	; 0x03
    47ea:	e0 2d       	mov	r30, r0
    47ec:	19 94       	eijmp

000047ee <_ZN5EERef6updateEh>:
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47ee:	ff 92       	push	r15
    47f0:	0f 93       	push	r16
    47f2:	1f 93       	push	r17
    47f4:	cf 93       	push	r28
    47f6:	df 93       	push	r29
    47f8:	ec 01       	movw	r28, r24
    47fa:	f6 2e       	mov	r15, r22

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    47fc:	08 81       	ld	r16, Y
    47fe:	19 81       	ldd	r17, Y+1	; 0x01
    4800:	c8 01       	movw	r24, r16
    4802:	0e 94 d9 f0 	call	0x1e1b2	; 0x1e1b2 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    4806:	f8 16       	cp	r15, r24
    4808:	21 f0       	breq	.+8      	; 0x4812 <_ZN5EERef6updateEh+0x24>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    480a:	6f 2d       	mov	r22, r15
    480c:	c8 01       	movw	r24, r16
    480e:	0e 94 e1 f0 	call	0x1e1c2	; 0x1e1c2 <eeprom_write_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    4812:	ce 01       	movw	r24, r28
    4814:	df 91       	pop	r29
    4816:	cf 91       	pop	r28
    4818:	1f 91       	pop	r17
    481a:	0f 91       	pop	r16
    481c:	ff 90       	pop	r15
    481e:	08 95       	ret

00004820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>:
    4820:	0f 93       	push	r16
    4822:	1f 93       	push	r17
    4824:	cf 93       	push	r28
    4826:	df 93       	push	r29
    4828:	1f 92       	push	r1
    482a:	1f 92       	push	r1
    482c:	cd b7       	in	r28, 0x3d	; 61
    482e:	de b7       	in	r29, 0x3e	; 62
    4830:	8b 01       	movw	r16, r22
    4832:	fb 01       	movw	r30, r22
    4834:	60 81       	ld	r22, Z
    4836:	9a 83       	std	Y+2, r25	; 0x02
    4838:	89 83       	std	Y+1, r24	; 0x01
    483a:	ce 01       	movw	r24, r28
    483c:	01 96       	adiw	r24, 0x01	; 1
    483e:	d7 df       	rcall	.-82     	; 0x47ee <_ZN5EERef6updateEh>
    4840:	c8 01       	movw	r24, r16
    4842:	0f 90       	pop	r0
    4844:	0f 90       	pop	r0
    4846:	df 91       	pop	r29
    4848:	cf 91       	pop	r28
    484a:	1f 91       	pop	r17
    484c:	0f 91       	pop	r16
    484e:	08 95       	ret

00004850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>:
    4850:	ef 92       	push	r14
    4852:	ff 92       	push	r15
    4854:	0f 93       	push	r16
    4856:	1f 93       	push	r17
    4858:	cf 93       	push	r28
    485a:	df 93       	push	r29
    485c:	1f 92       	push	r1
    485e:	1f 92       	push	r1
    4860:	cd b7       	in	r28, 0x3d	; 61
    4862:	de b7       	in	r29, 0x3e	; 62
    4864:	8b e9       	ldi	r24, 0x9B	; 155
    4866:	e8 2e       	mov	r14, r24
    4868:	84 e1       	ldi	r24, 0x14	; 20
    486a:	f8 2e       	mov	r15, r24
    486c:	0d ea       	ldi	r16, 0xAD	; 173
    486e:	1e e0       	ldi	r17, 0x0E	; 14
    4870:	f7 01       	movw	r30, r14
    4872:	61 91       	ld	r22, Z+
    4874:	7f 01       	movw	r14, r30
    4876:	1a 83       	std	Y+2, r17	; 0x02
    4878:	09 83       	std	Y+1, r16	; 0x01
    487a:	ce 01       	movw	r24, r28
    487c:	01 96       	adiw	r24, 0x01	; 1
    487e:	b7 df       	rcall	.-146    	; 0x47ee <_ZN5EERef6updateEh>
    4880:	0f 5f       	subi	r16, 0xFF	; 255
    4882:	1f 4f       	sbci	r17, 0xFF	; 255
    4884:	01 3b       	cpi	r16, 0xB1	; 177
    4886:	fe e0       	ldi	r31, 0x0E	; 14
    4888:	1f 07       	cpc	r17, r31
    488a:	91 f7       	brne	.-28     	; 0x4870 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3+0x20>
    488c:	8b e9       	ldi	r24, 0x9B	; 155
    488e:	94 e1       	ldi	r25, 0x14	; 20
    4890:	0f 90       	pop	r0
    4892:	0f 90       	pop	r0
    4894:	df 91       	pop	r29
    4896:	cf 91       	pop	r28
    4898:	1f 91       	pop	r17
    489a:	0f 91       	pop	r16
    489c:	ff 90       	pop	r15
    489e:	ef 90       	pop	r14
    48a0:	08 95       	ret

000048a2 <_Z22Hard_Coded_Flush_Valveh>:
    48a2:	81 e0       	ldi	r24, 0x01	; 1
    48a4:	08 95       	ret

000048a6 <_Z35Wireless_Motor_Enable_Disable_Checkv>:

unsigned char Wireless_Motor_Enable_Disable_Check(void)
{
	if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kWIRELESS_PUMP_ENABLE_DISABLE_PLOT)
    48a6:	80 91 c1 0e 	lds	r24, 0x0EC1	; 0x800ec1 <_sExtra_Plot+0xd9>
    48aa:	8d 36       	cpi	r24, 0x6D	; 109
    48ac:	09 f0       	breq	.+2      	; 0x48b0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xa>
    48ae:	7c c0       	rjmp	.+248    	; 0x49a8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x102>
	{
		if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET &&
    48b0:	80 91 c0 0e 	lds	r24, 0x0EC0	; 0x800ec0 <_sExtra_Plot+0xd8>
    48b4:	88 23       	and	r24, r24
    48b6:	09 f4       	brne	.+2      	; 0x48ba <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14>
    48b8:	56 c0       	rjmp	.+172    	; 0x4966 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xc0>
		_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number != 0)
		{
			switch(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0])
    48ba:	80 91 c5 0e 	lds	r24, 0x0EC5	; 0x800ec5 <_sExtra_Plot+0xdd>
    48be:	86 36       	cpi	r24, 0x66	; 102
    48c0:	31 f0       	breq	.+12     	; 0x48ce <_Z35Wireless_Motor_Enable_Disable_Checkv+0x28>
    48c2:	87 36       	cpi	r24, 0x67	; 103
    48c4:	41 f0       	breq	.+16     	; 0x48d6 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x30>
    48c6:	85 36       	cpi	r24, 0x65	; 101
    48c8:	41 f4       	brne	.+16     	; 0x48da <_Z35Wireless_Motor_Enable_Disable_Checkv+0x34>
			{
				case 101:
				{
					
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    48ca:	82 e0       	ldi	r24, 0x02	; 2
    48cc:	01 c0       	rjmp	.+2      	; 0x48d0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				case 102:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 3;
    48ce:	83 e0       	ldi	r24, 0x03	; 3
    48d0:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>

				}break;
    48d4:	2d c0       	rjmp	.+90     	; 0x4930 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
				
				case 103:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 4;
    48d6:	84 e0       	ldi	r24, 0x04	; 4
    48d8:	fb cf       	rjmp	.-10     	; 0x48d0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				default:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    48da:	82 e0       	ldi	r24, 0x02	; 2
    48dc:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    48e0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    48e4:	81 30       	cpi	r24, 0x01	; 1
    48e6:	21 f5       	brne	.+72     	; 0x4930 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
					{
						_kSERAIL_MON_WRITE("Selected valve number wireless pump > ");
    48e8:	63 ec       	ldi	r22, 0xC3	; 195
    48ea:	78 e0       	ldi	r23, 0x08	; 8
    48ec:	86 ec       	ldi	r24, 0xC6	; 198
    48ee:	94 e1       	ldi	r25, 0x14	; 20
    48f0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0]);
    48f4:	4a e0       	ldi	r20, 0x0A	; 10
    48f6:	50 e0       	ldi	r21, 0x00	; 0
    48f8:	60 91 c5 0e 	lds	r22, 0x0EC5	; 0x800ec5 <_sExtra_Plot+0xdd>
    48fc:	86 ec       	ldi	r24, 0xC6	; 198
    48fe:	94 e1       	ldi	r25, 0x14	; 20
    4900:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    4904:	86 ec       	ldi	r24, 0xC6	; 198
    4906:	94 e1       	ldi	r25, 0x14	; 20
    4908:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE("Selected wireless pump > ");
    490c:	69 ea       	ldi	r22, 0xA9	; 169
    490e:	78 e0       	ldi	r23, 0x08	; 8
    4910:	86 ec       	ldi	r24, 0xC6	; 198
    4912:	94 e1       	ldi	r25, 0x14	; 20
    4914:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Pump_Selected_For_Irrigation);
    4918:	4a e0       	ldi	r20, 0x0A	; 10
    491a:	50 e0       	ldi	r21, 0x00	; 0
    491c:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    4920:	86 ec       	ldi	r24, 0xC6	; 198
    4922:	94 e1       	ldi	r25, 0x14	; 20
    4924:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    4928:	86 ec       	ldi	r24, 0xC6	; 198
    492a:	94 e1       	ldi	r25, 0x14	; 20
    492c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
				}break;
			}
			
			if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    4930:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4934:	81 11       	cpse	r24, r1
    4936:	46 c0       	rjmp	.+140    	; 0x49c4 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4938:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    493c:	81 30       	cpi	r24, 0x01	; 1
    493e:	51 f4       	brne	.+20     	; 0x4954 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xae>
				{
					_kSERAIL_MON_WRITE("wireless pump 3....................,,,,,,, ");
    4940:	6d e7       	ldi	r22, 0x7D	; 125
    4942:	78 e0       	ldi	r23, 0x08	; 8
    4944:	86 ec       	ldi	r24, 0xC6	; 198
    4946:	94 e1       	ldi	r25, 0x14	; 20
    4948:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    494c:	86 ec       	ldi	r24, 0xC6	; 198
    494e:	94 e1       	ldi	r25, 0x14	; 20
    4950:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    4954:	83 e0       	ldi	r24, 0x03	; 3
    4956:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    495a:	6b e7       	ldi	r22, 0x7B	; 123
    495c:	74 e1       	ldi	r23, 0x14	; 20
    495e:	88 ea       	ldi	r24, 0xA8	; 168
    4960:	9c e0       	ldi	r25, 0x0C	; 12
    4962:	5e df       	rcall	.-324    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4964:	2f c0       	rjmp	.+94     	; 0x49c4 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
		else
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    4966:	81 e0       	ldi	r24, 0x01	; 1
    4968:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    496c:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4970:	88 23       	and	r24, r24
    4972:	09 f4       	brne	.+2      	; 0x4976 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xd0>
    4974:	48 c0       	rjmp	.+144    	; 0x4a06 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4976:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    497a:	81 30       	cpi	r24, 0x01	; 1
    497c:	51 f4       	brne	.+20     	; 0x4992 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
				{
					_kSERAIL_MON_WRITE("wireless pump 4 ##########################");
    497e:	62 e5       	ldi	r22, 0x52	; 82
    4980:	78 e0       	ldi	r23, 0x08	; 8
    4982:	86 ec       	ldi	r24, 0xC6	; 198
    4984:	94 e1       	ldi	r25, 0x14	; 20
    4986:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    498a:	86 ec       	ldi	r24, 0xC6	; 198
    498c:	94 e1       	ldi	r25, 0x14	; 20
    498e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    4992:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4996:	6b e7       	ldi	r22, 0x7B	; 123
    4998:	74 e1       	ldi	r23, 0x14	; 20
    499a:	88 ea       	ldi	r24, 0xA8	; 168
    499c:	9c e0       	ldi	r25, 0x0C	; 12
    499e:	40 df       	rcall	.-384    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
    49a0:	85 e0       	ldi	r24, 0x05	; 5
    49a2:	0e 94 28 af 	call	0x15e50	; 0x15e50 <_Z22Valve_Grouping_Handlerh>
    49a6:	0e c0       	rjmp	.+28     	; 0x49c4 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
	}
	else
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    49a8:	81 e0       	ldi	r24, 0x01	; 1
    49aa:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
		
		if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    49ae:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    49b2:	88 23       	and	r24, r24
    49b4:	41 f1       	breq	.+80     	; 0x4a06 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    49b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    49ba:	81 30       	cpi	r24, 0x01	; 1
    49bc:	51 f7       	brne	.-44     	; 0x4992 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
			{
				_kSERAIL_MON_WRITE("wireless pump 5 ");
    49be:	61 e4       	ldi	r22, 0x41	; 65
    49c0:	78 e0       	ldi	r23, 0x08	; 8
    49c2:	df cf       	rjmp	.-66     	; 0x4982 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xdc>
	
	
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    49c4:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    49c8:	82 30       	cpi	r24, 0x02	; 2
    49ca:	d8 f0       	brcs	.+54     	; 0x4a02 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x15c>
	{
		if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    49cc:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    49d0:	81 11       	cpse	r24, r1
    49d2:	32 c0       	rjmp	.+100    	; 0x4a38 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    49d4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    49d8:	81 30       	cpi	r24, 0x01	; 1
    49da:	51 f4       	brne	.+20     	; 0x49f0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14a>
			{
				_kSERAIL_MON_WRITE("wireless pump 3 ");
    49dc:	60 e3       	ldi	r22, 0x30	; 48
    49de:	78 e0       	ldi	r23, 0x08	; 8
    49e0:	86 ec       	ldi	r24, 0xC6	; 198
    49e2:	94 e1       	ldi	r25, 0x14	; 20
    49e4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    49e8:	86 ec       	ldi	r24, 0xC6	; 198
    49ea:	94 e1       	ldi	r25, 0x14	; 20
    49ec:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    49f0:	83 e0       	ldi	r24, 0x03	; 3
    49f2:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
			_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    49f6:	6b e7       	ldi	r22, 0x7B	; 123
    49f8:	74 e1       	ldi	r23, 0x14	; 20
    49fa:	88 ea       	ldi	r24, 0xA8	; 168
    49fc:	9c e0       	ldi	r25, 0x0C	; 12
    49fe:	10 cf       	rjmp	.-480    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4a00:	08 95       	ret
		}
	}
	else
	{
		/* Turn on wired motor */
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation == 1)
    4a02:	81 30       	cpi	r24, 0x01	; 1
    4a04:	c9 f4       	brne	.+50     	; 0x4a38 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4a06:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    4a0a:	88 23       	and	r24, r24
    4a0c:	a9 f0       	breq	.+42     	; 0x4a38 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4a0e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4a12:	81 30       	cpi	r24, 0x01	; 1
    4a14:	51 f4       	brne	.+20     	; 0x4a2a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x184>
				{
					_kSERAIL_MON_WRITE("wireless pump 5 ");
    4a16:	6f e1       	ldi	r22, 0x1F	; 31
    4a18:	78 e0       	ldi	r23, 0x08	; 8
    4a1a:	86 ec       	ldi	r24, 0xC6	; 198
    4a1c:	94 e1       	ldi	r25, 0x14	; 20
    4a1e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    4a22:	86 ec       	ldi	r24, 0xC6	; 198
    4a24:	94 e1       	ldi	r25, 0x14	; 20
    4a26:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    4a2a:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4a2e:	6b e7       	ldi	r22, 0x7B	; 123
    4a30:	74 e1       	ldi	r23, 0x14	; 20
    4a32:	88 ea       	ldi	r24, 0xA8	; 168
    4a34:	9c e0       	ldi	r25, 0x0C	; 12
    4a36:	f4 ce       	rjmp	.-536    	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				// ######################### what should to to switch the pump ###################// 
				//Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
			}
		}
	}
}
    4a38:	08 95       	ret

00004a3a <_Z17Flush_Controllingv>:
		}break;
	}
}

unsigned char Flush_Controlling(void)
{	
    4a3a:	e9 e5       	ldi	r30, 0x59	; 89
    4a3c:	fe e0       	ldi	r31, 0x0E	; 14
    4a3e:	2e e5       	ldi	r18, 0x5E	; 94
    4a40:	3e e0       	ldi	r19, 0x0E	; 14
    4a42:	80 e0       	ldi	r24, 0x00	; 0
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
	{
		if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[valve_num] != _kRESET)
    4a44:	91 91       	ld	r25, Z+
    4a46:	91 11       	cpse	r25, r1
		{
			total_valve++;
    4a48:	8f 5f       	subi	r24, 0xFF	; 255
	static unsigned int flush_monitor_timer = _kRESET;
	static unsigned char flush_monitoring_trigger = _kRESET;
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
    4a4a:	2e 17       	cp	r18, r30
    4a4c:	3f 07       	cpc	r19, r31
    4a4e:	d1 f7       	brne	.-12     	; 0x4a44 <_Z17Flush_Controllingv+0xa>
    4a50:	80 93 1a 09 	sts	0x091A, r24	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
		{
			total_valve++;
		}
	}
	
	if(total_valve < 2)
    4a54:	82 30       	cpi	r24, 0x02	; 2
    4a56:	18 f4       	brcc	.+6      	; 0x4a5e <_Z17Flush_Controllingv+0x24>
	{
		_gRunning_Flush_Num = _kSET;
    4a58:	81 e0       	ldi	r24, 0x01	; 1
    4a5a:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
	}
	
	
	
	
	if(_sSchedules.Flush_Schedule_In_Every > 14400)
    4a5e:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4a62:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
    4a66:	81 34       	cpi	r24, 0x41	; 65
    4a68:	98 43       	sbci	r25, 0x38	; 56
    4a6a:	30 f0       	brcs	.+12     	; 0x4a78 <_Z17Flush_Controllingv+0x3e>
	{
		_sSchedules.Flush_Schedule_In_Every = 14400;
    4a6c:	80 e4       	ldi	r24, 0x40	; 64
    4a6e:	98 e3       	ldi	r25, 0x38	; 56
    4a70:	90 93 e9 0b 	sts	0x0BE9, r25	; 0x800be9 <_sSchedules+0x2cb>
    4a74:	80 93 e8 0b 	sts	0x0BE8, r24	; 0x800be8 <_sSchedules+0x2ca>
		
	}
	
	if(_sSchedules.Flush_Schedule_For > 900)
    4a78:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <_sSchedules+0x2cc>
    4a7c:	90 91 eb 0b 	lds	r25, 0x0BEB	; 0x800beb <_sSchedules+0x2cd>
    4a80:	85 38       	cpi	r24, 0x85	; 133
    4a82:	93 40       	sbci	r25, 0x03	; 3
    4a84:	30 f0       	brcs	.+12     	; 0x4a92 <_Z17Flush_Controllingv+0x58>
	{
		_sSchedules.Flush_Schedule_For = 900;
    4a86:	84 e8       	ldi	r24, 0x84	; 132
    4a88:	93 e0       	ldi	r25, 0x03	; 3
    4a8a:	90 93 eb 0b 	sts	0x0BEB, r25	; 0x800beb <_sSchedules+0x2cd>
    4a8e:	80 93 ea 0b 	sts	0x0BEA, r24	; 0x800bea <_sSchedules+0x2cc>
	}
	
	
	if(flush_time_save > 40)
    4a92:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
    4a96:	89 32       	cpi	r24, 0x29	; 41
    4a98:	20 f0       	brcs	.+8      	; 0x4aa2 <_Z17Flush_Controllingv+0x68>
	{
		flush_time_save = 0;
    4a9a:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
		_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a9e:	d8 de       	rcall	.-592    	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4aa0:	03 c0       	rjmp	.+6      	; 0x4aa8 <_Z17Flush_Controllingv+0x6e>
	}
	else
	{
		flush_time_save++;
    4aa2:	8f 5f       	subi	r24, 0xFF	; 255
    4aa4:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
	}
	
	
	
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER)
    4aa8:	80 91 55 0e 	lds	r24, 0x0E55	; 0x800e55 <_sExtra_Plot+0x6d>
    4aac:	89 36       	cpi	r24, 0x69	; 105
    4aae:	09 f0       	breq	.+2      	; 0x4ab2 <_Z17Flush_Controllingv+0x78>
    4ab0:	38 c1       	rjmp	.+624    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
	{
		if(_sRuble_Parameters.Operation_Mode != _eOPER_MOD_MANUAL)
    4ab2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4ab6:	82 30       	cpi	r24, 0x02	; 2
    4ab8:	09 f4       	brne	.+2      	; 0x4abc <_Z17Flush_Controllingv+0x82>
    4aba:	f9 c0       	rjmp	.+498    	; 0x4cae <_Z17Flush_Controllingv+0x274>
		{
			if(!_sRuble_Parameters.Flush_Retry)
    4abc:	80 91 a5 14 	lds	r24, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    4ac0:	90 91 a6 14 	lds	r25, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4ac4:	89 2b       	or	r24, r25
    4ac6:	09 f0       	breq	.+2      	; 0x4aca <_Z17Flush_Controllingv+0x90>
    4ac8:	2c c1       	rjmp	.+600    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
			{
				_kSERAIL_MON_WRITE("Flush_Running 0: ");
    4aca:	68 ee       	ldi	r22, 0xE8	; 232
    4acc:	72 e0       	ldi	r23, 0x02	; 2
    4ace:	86 ec       	ldi	r24, 0xC6	; 198
    4ad0:	94 e1       	ldi	r25, 0x14	; 20
    4ad2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sRuble_Parameters.Pump_Run_Timer_for_flush);
    4ad6:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    4ada:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    4ade:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    4ae2:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    4ae6:	2a e0       	ldi	r18, 0x0A	; 10
    4ae8:	30 e0       	ldi	r19, 0x00	; 0
    4aea:	86 ec       	ldi	r24, 0xC6	; 198
    4aec:	94 e1       	ldi	r25, 0x14	; 20
    4aee:	0e 94 b6 d5 	call	0x1ab6c	; 0x1ab6c <_ZN5Print5printEmi>
				Serial.println();
    4af2:	86 ec       	ldi	r24, 0xC6	; 198
    4af4:	94 e1       	ldi	r25, 0x14	; 20
    4af6:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    4afa:	86 ec       	ldi	r24, 0xC6	; 198
    4afc:	94 e1       	ldi	r25, 0x14	; 20
    4afe:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				
				if(_sRuble_Parameters.Pump_Run_Timer_for_flush > _sSchedules.Flush_Schedule_In_Every)
    4b02:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4b06:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
    4b0a:	a0 e0       	ldi	r26, 0x00	; 0
    4b0c:	b0 e0       	ldi	r27, 0x00	; 0
    4b0e:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    4b12:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    4b16:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    4b1a:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    4b1e:	84 17       	cp	r24, r20
    4b20:	95 07       	cpc	r25, r21
    4b22:	a6 07       	cpc	r26, r22
    4b24:	b7 07       	cpc	r27, r23
    4b26:	08 f0       	brcs	.+2      	; 0x4b2a <_Z17Flush_Controllingv+0xf0>
    4b28:	fc c0       	rjmp	.+504    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 1: ");
					//_kSERIAL_MON_CLEAR();
					if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    4b2a:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4b2e:	81 30       	cpi	r24, 0x01	; 1
    4b30:	09 f0       	breq	.+2      	; 0x4b34 <_Z17Flush_Controllingv+0xfa>
    4b32:	68 c0       	rjmp	.+208    	; 0x4c04 <_Z17Flush_Controllingv+0x1ca>
					{
						if(_sRuble_Parameters.Flush_Running)
    4b34:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    4b38:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4b3c:	89 2b       	or	r24, r25
    4b3e:	f9 f0       	breq	.+62     	; 0x4b7e <_Z17Flush_Controllingv+0x144>
						{
							Hard_Coded_Flush_Valve(_kON);
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    4b40:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4b44:	81 30       	cpi	r24, 0x01	; 1
    4b46:	51 f4       	brne	.+20     	; 0x4b5c <_Z17Flush_Controllingv+0x122>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
    4b48:	66 ed       	ldi	r22, 0xD6	; 214
    4b4a:	72 e0       	ldi	r23, 0x02	; 2
    4b4c:	86 ec       	ldi	r24, 0xC6	; 198
    4b4e:	94 e1       	ldi	r25, 0x14	; 20
    4b50:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    4b54:	86 ec       	ldi	r24, 0xC6	; 198
    4b56:	94 e1       	ldi	r25, 0x14	; 20
    4b58:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b5c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    4b60:	81 11       	cpse	r24, r1
    4b62:	13 c1       	rjmp	.+550    	; 0x4d8a <_Z17Flush_Controllingv+0x350>
    4b64:	80 91 e8 0b 	lds	r24, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4b68:	90 91 e9 0b 	lds	r25, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
								_kSERIAL_MON_CLEAR();
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
    4b6c:	89 2b       	or	r24, r25
    4b6e:	09 f4       	brne	.+2      	; 0x4b72 <_Z17Flush_Controllingv+0x138>
    4b70:	0c c1       	rjmp	.+536    	; 0x4d8a <_Z17Flush_Controllingv+0x350>
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b72:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    4b76:	81 30       	cpi	r24, 0x01	; 1
    4b78:	09 f0       	breq	.+2      	; 0x4b7c <_Z17Flush_Controllingv+0x142>
    4b7a:	d3 c0       	rjmp	.+422    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
    4b7c:	06 c1       	rjmp	.+524    	; 0x4d8a <_Z17Flush_Controllingv+0x350>
								//_kSERAIL_MON_WRITE("Flush_Running 4: ");
								//_kSERIAL_MON_CLEAR();
								
								//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
							
								if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER)
    4b7e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4b82:	83 30       	cpi	r24, 0x03	; 3
    4b84:	49 f4       	brne	.+18     	; 0x4b98 <_Z17Flush_Controllingv+0x15e>
								{
									_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    4b86:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4b8a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b8e:	88 60       	ori	r24, 0x08	; 8
    4b90:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4b94:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								}
							
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4b98:	84 e0       	ldi	r24, 0x04	; 4
    4b9a:	0e 94 08 ca 	call	0x19410	; 0x19410 <_Z25Stop_Extra_Plot_Operationh>
								{
								
								}
							
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4b9e:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4ba2:	88 23       	and	r24, r24
    4ba4:	09 f4       	brne	.+2      	; 0x4ba8 <_Z17Flush_Controllingv+0x16e>
    4ba6:	7d c0       	rjmp	.+250    	; 0x4ca2 <_Z17Flush_Controllingv+0x268>
								{
									
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4ba8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4bac:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4bb0:	90 62       	ori	r25, 0x20	; 32
    4bb2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4bb6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4bba:	84 e0       	ldi	r24, 0x04	; 4
    4bbc:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4bc0:	82 e0       	ldi	r24, 0x02	; 2
    4bc2:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
								
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4bc6:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4bca:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4bce:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4bd2:	91 e0       	ldi	r25, 0x01	; 1
    4bd4:	90 93 16 09 	sts	0x0916, r25	; 0x800916 <__data_end>
									
									if(_gRunning_Flush_Num >= total_valve)
    4bd8:	80 91 eb 0c 	lds	r24, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
    4bdc:	20 91 1a 09 	lds	r18, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4be0:	82 17       	cp	r24, r18
    4be2:	58 f0       	brcs	.+22     	; 0x4bfa <_Z17Flush_Controllingv+0x1c0>
									{
										_gRunning_Flush_Num = _kSET;
    4be4:	90 93 eb 0c 	sts	0x0CEB, r25	; 0x800ceb <_gRunning_Flush_Num>
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4be8:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4bec:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4bf0:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4bf4:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
    4bf8:	03 c0       	rjmp	.+6      	; 0x4c00 <_Z17Flush_Controllingv+0x1c6>
									}
									else
									{
										_gRunning_Flush_Num++;
    4bfa:	8f 5f       	subi	r24, 0xFF	; 255
    4bfc:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
									}
									
									_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4c00:	27 de       	rcall	.-946    	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4c02:	4f c0       	rjmp	.+158    	; 0x4ca2 <_Z17Flush_Controllingv+0x268>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4c04:	90 91 54 0e 	lds	r25, 0x0E54	; 0x800e54 <_sExtra_Plot+0x6c>
    4c08:	91 11       	cpse	r25, r1
    4c0a:	bd c0       	rjmp	.+378    	; 0x4d86 <_Z17Flush_Controllingv+0x34c>
						_sSchedules.Flush_Schedule_In_Every == 0)
    4c0c:	20 91 e8 0b 	lds	r18, 0x0BE8	; 0x800be8 <_sSchedules+0x2ca>
    4c10:	30 91 e9 0b 	lds	r19, 0x0BE9	; 0x800be9 <_sSchedules+0x2cb>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4c14:	23 2b       	or	r18, r19
    4c16:	09 f4       	brne	.+2      	; 0x4c1a <_Z17Flush_Controllingv+0x1e0>
    4c18:	b6 c0       	rjmp	.+364    	; 0x4d86 <_Z17Flush_Controllingv+0x34c>
							return 1;
						}
						
						
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c1a:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    4c1e:	91 11       	cpse	r25, r1
    4c20:	03 c0       	rjmp	.+6      	; 0x4c28 <_Z17Flush_Controllingv+0x1ee>
    4c22:	88 23       	and	r24, r24
    4c24:	09 f4       	brne	.+2      	; 0x4c28 <_Z17Flush_Controllingv+0x1ee>
    4c26:	81 c0       	rjmp	.+258    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4c28:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    4c2c:	81 30       	cpi	r24, 0x01	; 1
    4c2e:	09 f0       	breq	.+2      	; 0x4c32 <_Z17Flush_Controllingv+0x1f8>
    4c30:	1a c1       	rjmp	.+564    	; 0x4e66 <_Z17Flush_Controllingv+0x42c>
    4c32:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    4c36:	81 30       	cpi	r24, 0x01	; 1
    4c38:	09 f4       	brne	.+2      	; 0x4c3c <_Z17Flush_Controllingv+0x202>
    4c3a:	42 c1       	rjmp	.+644    	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING)
								{
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    4c3c:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    4c40:	85 30       	cpi	r24, 0x05	; 5
    4c42:	09 f4       	brne	.+2      	; 0x4c46 <_Z17Flush_Controllingv+0x20c>
    4c44:	2d c1       	rjmp	.+602    	; 0x4ea0 <_Z17Flush_Controllingv+0x466>
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
									return 0;
								}
							}
							
							if(Start_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4c46:	84 e0       	ldi	r24, 0x04	; 4
    4c48:	0e 94 48 c9 	call	0x19290	; 0x19290 <_Z26Start_Extra_Plot_Operationh>
    4c4c:	88 23       	and	r24, r24
    4c4e:	09 f4       	brne	.+2      	; 0x4c52 <_Z17Flush_Controllingv+0x218>
    4c50:	da c0       	rjmp	.+436    	; 0x4e06 <_Z17Flush_Controllingv+0x3cc>
							{
							     if(_sRuble_Parameters.Debug_Mode == _kSET)
    4c52:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4c56:	81 30       	cpi	r24, 0x01	; 1
    4c58:	51 f4       	brne	.+20     	; 0x4c6e <_Z17Flush_Controllingv+0x234>
							     {
									_kSERAIL_MON_WRITE("Flush_Running 6: ");
    4c5a:	62 eb       	ldi	r22, 0xB2	; 178
    4c5c:	72 e0       	ldi	r23, 0x02	; 2
    4c5e:	86 ec       	ldi	r24, 0xC6	; 198
    4c60:	94 e1       	ldi	r25, 0x14	; 20
    4c62:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4c66:	86 ec       	ldi	r24, 0xC6	; 198
    4c68:	94 e1       	ldi	r25, 0x14	; 20
    4c6a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								 }
								
								_sRuble_Parameters.Flush_Running =  _sSchedules.Flush_Schedule_For;
    4c6e:	80 91 ea 0b 	lds	r24, 0x0BEA	; 0x800bea <_sSchedules+0x2cc>
    4c72:	90 91 eb 0b 	lds	r25, 0x0BEB	; 0x800beb <_sSchedules+0x2cd>
    4c76:	90 93 a0 14 	sts	0x14A0, r25	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4c7a:	80 93 9f 14 	sts	0x149F, r24	; 0x80149f <_sRuble_Parameters+0xf1>
								_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c7e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4c82:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c86:	90 62       	ori	r25, 0x20	; 32
    4c88:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4c8c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c90:	84 e0       	ldi	r24, 0x04	; 4
    4c92:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c96:	82 e0       	ldi	r24, 0x02	; 2
    4c98:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
							
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_ON;
							
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kSET;
    4c9c:	81 e0       	ldi	r24, 0x01	; 1
    4c9e:	80 93 6d 0e 	sts	0x0E6D, r24	; 0x800e6d <_sExtra_Plot+0x85>
							
								Hard_Coded_Flush_Valve(_kOFF);
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4ca2:	6b ee       	ldi	r22, 0xEB	; 235
    4ca4:	7c e0       	ldi	r23, 0x0C	; 12
    4ca6:	87 eb       	ldi	r24, 0xB7	; 183
    4ca8:	9e e0       	ldi	r25, 0x0E	; 14
    4caa:	ba dd       	rcall	.-1164   	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4cac:	3a c0       	rjmp	.+116    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
				
			}
		}
		else
		{
			if(_sRuble_Parameters.Flush_Running || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4cae:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    4cb2:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4cb6:	89 2b       	or	r24, r25
    4cb8:	21 f4       	brne	.+8      	; 0x4cc2 <_Z17Flush_Controllingv+0x288>
    4cba:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4cbe:	88 23       	and	r24, r24
    4cc0:	a1 f1       	breq	.+104    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
			{
				//_kSERAIL_MON_WRITE("Flush_Running 7: ");
				//_kSERIAL_MON_CLEAR();
				_sRuble_Parameters.Flush_Running = _kRESET;
    4cc2:	10 92 a0 14 	sts	0x14A0, r1	; 0x8014a0 <_sRuble_Parameters+0xf2>
    4cc6:	10 92 9f 14 	sts	0x149F, r1	; 0x80149f <_sRuble_Parameters+0xf1>
				
				
				if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4cca:	84 e0       	ldi	r24, 0x04	; 4
    4ccc:	0e 94 08 ca 	call	0x19410	; 0x19410 <_Z25Stop_Extra_Plot_Operationh>
				{
					
				}
				
				//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
				if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4cd0:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4cd4:	88 23       	and	r24, r24
    4cd6:	09 f1       	breq	.+66     	; 0x4d1a <_Z17Flush_Controllingv+0x2e0>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 8: ");
					//_kSERIAL_MON_CLEAR();
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4cd8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4cdc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4ce0:	90 62       	ori	r25, 0x20	; 32
    4ce2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4ce6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4cea:	84 e0       	ldi	r24, 0x04	; 4
    4cec:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4cf0:	82 e0       	ldi	r24, 0x02	; 2
    4cf2:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
					
					//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4cf6:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
					flush_monitor_timer = _kRESET;
    4cfa:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4cfe:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
					flush_monitoring_trigger = _kSET;
    4d02:	81 e0       	ldi	r24, 0x01	; 1
    4d04:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
					_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4d08:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4d0c:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4d10:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4d14:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
					_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4d18:	9b dd       	rcall	.-1226   	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
				}
				_sRuble_Parameters.Flush_Valve_Off_Timer = _kRESET;
    4d1a:	10 92 a8 14 	sts	0x14A8, r1	; 0x8014a8 <_sRuble_Parameters+0xfa>
    4d1e:	10 92 a7 14 	sts	0x14A7, r1	; 0x8014a7 <_sRuble_Parameters+0xf9>
		}
	}
	
	
	
	if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation == _kRESET)
    4d22:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4d26:	81 11       	cpse	r24, r1
    4d28:	1d c0       	rjmp	.+58     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
	{
		if(flush_monitoring_trigger)
    4d2a:	80 91 16 09 	lds	r24, 0x0916	; 0x800916 <__data_end>
    4d2e:	88 23       	and	r24, r24
    4d30:	c9 f0       	breq	.+50     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
		{
			if(flush_monitor_timer > 60)
    4d32:	80 91 17 09 	lds	r24, 0x0917	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
    4d36:	90 91 18 09 	lds	r25, 0x0918	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d3a:	8d 33       	cpi	r24, 0x3D	; 61
    4d3c:	91 05       	cpc	r25, r1
    4d3e:	68 f0       	brcs	.+26     	; 0x4d5a <_Z17Flush_Controllingv+0x320>
			{
				flush_monitor_timer = _kRESET;
    4d40:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d44:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
				if(flush_monitoring_trigger)
				{
					Hard_Coded_Flush_Valve(_kON);
					if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)))
    4d48:	64 e0       	ldi	r22, 0x04	; 4
    4d4a:	80 e0       	ldi	r24, 0x00	; 0
    4d4c:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    4d50:	88 23       	and	r24, r24
    4d52:	41 f0       	breq	.+16     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
					{
						flush_monitoring_trigger = _kRESET;
    4d54:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <__data_end>
    4d58:	05 c0       	rjmp	.+10     	; 0x4d64 <_Z17Flush_Controllingv+0x32a>
				}
			
			}
			else
			{
				flush_monitor_timer++;
    4d5a:	01 96       	adiw	r24, 0x01	; 1
    4d5c:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d60:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
			}
		}
	}
	
	
	if(_gRunning_Flush_Num == _kRESET || _gRunning_Flush_Num > total_valve)
    4d64:	80 91 eb 0c 	lds	r24, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
    4d68:	88 23       	and	r24, r24
    4d6a:	21 f0       	breq	.+8      	; 0x4d74 <_Z17Flush_Controllingv+0x33a>
    4d6c:	90 91 1a 09 	lds	r25, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4d70:	98 17       	cp	r25, r24
    4d72:	40 f4       	brcc	.+16     	; 0x4d84 <_Z17Flush_Controllingv+0x34a>
	{
		_gRunning_Flush_Num = _kSET;
    4d74:	81 e0       	ldi	r24, 0x01	; 1
    4d76:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
		_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d7a:	6b ee       	ldi	r22, 0xEB	; 235
    4d7c:	7c e0       	ldi	r23, 0x0C	; 12
    4d7e:	87 eb       	ldi	r24, 0xB7	; 183
    4d80:	9e e0       	ldi	r25, 0x0E	; 14
    4d82:	4e cd       	rjmp	.-1380   	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
	}
	
}
    4d84:	08 95       	ret
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
						_sSchedules.Flush_Schedule_In_Every == 0)
						{
							//_kSERAIL_MON_WRITE("Flush_Running 5: ");
							//_kSERIAL_MON_CLEAR();
							return 1;
    4d86:	81 e0       	ldi	r24, 0x01	; 1
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d88:	08 95       	ret
    4d8a:	6b ee       	ldi	r22, 0xEB	; 235
    4d8c:	7c e0       	ldi	r23, 0x0C	; 12
    4d8e:	87 eb       	ldi	r24, 0xB7	; 183
    4d90:	9e e0       	ldi	r25, 0x0E	; 14
    4d92:	46 dd       	rcall	.-1396   	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
								
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    4d94:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4d98:	81 30       	cpi	r24, 0x01	; 1
    4d9a:	51 f4       	brne	.+20     	; 0x4db0 <_Z17Flush_Controllingv+0x376>
								{
									_kSERAIL_MON_WRITE("Flush_Running 3: ");
    4d9c:	64 ec       	ldi	r22, 0xC4	; 196
    4d9e:	72 e0       	ldi	r23, 0x02	; 2
    4da0:	86 ec       	ldi	r24, 0xC6	; 198
    4da2:	94 e1       	ldi	r25, 0x14	; 20
    4da4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4da8:	86 ec       	ldi	r24, 0xC6	; 198
    4daa:	94 e1       	ldi	r25, 0x14	; 20
    4dac:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								
								if(_sPump_Parameter.Irrigation_Status || _sPump_Parameter.Irrigation_Status == _kSET)
    4db0:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    4db4:	88 23       	and	r24, r24
    4db6:	31 f0       	breq	.+12     	; 0x4dc4 <_Z17Flush_Controllingv+0x38a>
								{
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4db8:	88 e5       	ldi	r24, 0x58	; 88
    4dba:	92 e0       	ldi	r25, 0x02	; 2
    4dbc:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4dc0:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
								}
								
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4dc4:	84 e0       	ldi	r24, 0x04	; 4
    4dc6:	0e 94 08 ca 	call	0x19410	; 0x19410 <_Z25Stop_Extra_Plot_Operationh>
								{
									
								}
								
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4dca:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4dce:	88 23       	and	r24, r24
    4dd0:	09 f4       	brne	.+2      	; 0x4dd4 <_Z17Flush_Controllingv+0x39a>
    4dd2:	ab cf       	rjmp	.-170    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
								{
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4dd4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4dd8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4ddc:	90 62       	ori	r25, 0x20	; 32
    4dde:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4de2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4de6:	84 e0       	ldi	r24, 0x04	; 4
    4de8:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4dec:	82 e0       	ldi	r24, 0x02	; 2
    4dee:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
									
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4df2:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4df6:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4dfa:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4dfe:	81 e0       	ldi	r24, 0x01	; 1
    4e00:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
    4e04:	2e c0       	rjmp	.+92     	; 0x4e62 <_Z17Flush_Controllingv+0x428>
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kSET)
								if(1)
								{
									//_kSERAIL_MON_WRITE("Flush_Running 6.1: ");
									//_kSERIAL_MON_CLEAR();
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4e06:	88 e5       	ldi	r24, 0x58	; 88
    4e08:	92 e0       	ldi	r25, 0x02	; 2
    4e0a:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4e0e:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
								
									if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4e12:	84 e0       	ldi	r24, 0x04	; 4
    4e14:	0e 94 08 ca 	call	0x19410	; 0x19410 <_Z25Stop_Extra_Plot_Operationh>
									{
									
									}
								
									if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4e18:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    4e1c:	88 23       	and	r24, r24
    4e1e:	09 f4       	brne	.+2      	; 0x4e22 <_Z17Flush_Controllingv+0x3e8>
    4e20:	84 cf       	rjmp	.-248    	; 0x4d2a <_Z17Flush_Controllingv+0x2f0>
									{
										_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4e22:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    4e26:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    4e2a:	90 62       	ori	r25, 0x20	; 32
    4e2c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    4e30:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
										_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4e34:	84 e0       	ldi	r24, 0x04	; 4
    4e36:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4e3a:	82 e0       	ldi	r24, 0x02	; 2
    4e3c:	80 93 6e 0e 	sts	0x0E6E, r24	; 0x800e6e <_sExtra_Plot+0x86>
									
										//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4e40:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
										flush_monitor_timer = _kRESET;
    4e44:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4e48:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
										flush_monitoring_trigger = _kSET;
    4e4c:	81 e0       	ldi	r24, 0x01	; 1
    4e4e:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
									
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4e52:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
    4e56:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
    4e5a:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
    4e5e:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
										_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4e62:	f6 dc       	rcall	.-1556   	; 0x4850 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4e64:	5e cf       	rjmp	.-324    	; 0x4d22 <_Z17Flush_Controllingv+0x2e8>
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
							}
							
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    4e66:	82 30       	cpi	r24, 0x02	; 2
    4e68:	08 f4       	brcc	.+2      	; 0x4e6c <_Z17Flush_Controllingv+0x432>
    4e6a:	e8 ce       	rjmp	.-560    	; 0x4c3c <_Z17Flush_Controllingv+0x202>
							{
								if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    4e6c:	90 e0       	ldi	r25, 0x00	; 0
    4e6e:	02 97       	sbiw	r24, 0x02	; 2
    4e70:	2b e0       	ldi	r18, 0x0B	; 11
    4e72:	28 9f       	mul	r18, r24
    4e74:	f0 01       	movw	r30, r0
    4e76:	29 9f       	mul	r18, r25
    4e78:	f0 0d       	add	r31, r0
    4e7a:	11 24       	eor	r1, r1
    4e7c:	ec 50       	subi	r30, 0x0C	; 12
    4e7e:	f4 4f       	sbci	r31, 0xF4	; 244
    4e80:	80 85       	ldd	r24, Z+8	; 0x08
    4e82:	91 85       	ldd	r25, Z+9	; 0x09
    4e84:	9c 01       	movw	r18, r24
    4e86:	23 70       	andi	r18, 0x03	; 3
    4e88:	33 27       	eor	r19, r19
    4e8a:	23 30       	cpi	r18, 0x03	; 3
    4e8c:	31 05       	cpc	r19, r1
    4e8e:	c1 f4       	brne	.+48     	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    4e90:	82 ff       	sbrs	r24, 2
    4e92:	16 c0       	rjmp	.+44     	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    4e94:	88 7b       	andi	r24, 0xB8	; 184
    4e96:	92 70       	andi	r25, 0x02	; 2
    4e98:	89 2b       	or	r24, r25
    4e9a:	09 f4       	brne	.+2      	; 0x4e9e <_Z17Flush_Controllingv+0x464>
    4e9c:	cf ce       	rjmp	.-610    	; 0x4c3c <_Z17Flush_Controllingv+0x202>
    4e9e:	10 c0       	rjmp	.+32     	; 0x4ec0 <_Z17Flush_Controllingv+0x486>
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
							{
								if(_sSchedules.Scheduler_Retry_Timer != 0)
    4ea0:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4ea4:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4ea8:	89 2b       	or	r24, r25
    4eaa:	09 f4       	brne	.+2      	; 0x4eae <_Z17Flush_Controllingv+0x474>
    4eac:	cc ce       	rjmp	.-616    	; 0x4c46 <_Z17Flush_Controllingv+0x20c>
								{
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
    4eae:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4eb2:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4eb6:	44 96       	adiw	r24, 0x14	; 20
    4eb8:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    4ebc:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
    4ec0:	80 e0       	ldi	r24, 0x00	; 0
    4ec2:	08 95       	ret

00004ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>:
		}
	}
}

char Valve_Grouping_Handler_For_wireless_Pump(unsigned char Target_Plot_Num, unsigned char on_off)
{
    4ec4:	2f 92       	push	r2
    4ec6:	3f 92       	push	r3
    4ec8:	4f 92       	push	r4
    4eca:	5f 92       	push	r5
    4ecc:	6f 92       	push	r6
    4ece:	7f 92       	push	r7
    4ed0:	8f 92       	push	r8
    4ed2:	9f 92       	push	r9
    4ed4:	af 92       	push	r10
    4ed6:	bf 92       	push	r11
    4ed8:	cf 92       	push	r12
    4eda:	df 92       	push	r13
    4edc:	ef 92       	push	r14
    4ede:	ff 92       	push	r15
    4ee0:	0f 93       	push	r16
    4ee2:	1f 93       	push	r17
    4ee4:	cf 93       	push	r28
    4ee6:	df 93       	push	r29
    4ee8:	cd b7       	in	r28, 0x3d	; 61
    4eea:	de b7       	in	r29, 0x3e	; 62
    4eec:	e9 97       	sbiw	r28, 0x39	; 57
    4eee:	0f b6       	in	r0, 0x3f	; 63
    4ef0:	f8 94       	cli
    4ef2:	de bf       	out	0x3e, r29	; 62
    4ef4:	0f be       	out	0x3f, r0	; 63
    4ef6:	cd bf       	out	0x3d, r28	; 61
    4ef8:	78 2e       	mov	r7, r24
    4efa:	6b ab       	std	Y+51, r22	; 0x33
	unsigned char i,j,k,count=0,current_valve_number,compare_id,id_len,data_send_counter = 0,temp_data[30];
	unsigned char valve_number_list[_kMAX_LIRA_SENSOR_NODE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO], total_valve_number,valve_number_not_match_flag=0;
	unsigned char hex_array[] = {0x01,0x02,0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
    4efc:	88 e0       	ldi	r24, 0x08	; 8
    4efe:	e3 e6       	ldi	r30, 0x63	; 99
    4f00:	f2 e0       	ldi	r31, 0x02	; 2
    4f02:	de 01       	movw	r26, r28
    4f04:	9b 96       	adiw	r26, 0x2b	; 43
    4f06:	01 90       	ld	r0, Z+
    4f08:	0d 92       	st	X+, r0
    4f0a:	8a 95       	dec	r24
    4f0c:	e1 f7       	brne	.-8      	; 0x4f06 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x42>
	
	/******************************************* check weather all valves status is off before starts the irrigation *******************************/
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
    4f0e:	9e 01       	movw	r18, r28
    4f10:	2f 5f       	subi	r18, 0xFF	; 255
    4f12:	3f 4f       	sbci	r19, 0xFF	; 255
    4f14:	29 01       	movw	r4, r18
    4f16:	8a e2       	ldi	r24, 0x2A	; 42
    4f18:	d9 01       	movw	r26, r18
    4f1a:	1d 92       	st	X+, r1
    4f1c:	8a 95       	dec	r24
    4f1e:	e9 f7       	brne	.-6      	; 0x4f1a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56>
    4f20:	2e e4       	ldi	r18, 0x4E	; 78
    4f22:	a2 2e       	mov	r10, r18
    4f24:	2d e0       	ldi	r18, 0x0D	; 13
    4f26:	b2 2e       	mov	r11, r18
    4f28:	22 ea       	ldi	r18, 0xA2	; 162
    4f2a:	3d e0       	ldi	r19, 0x0D	; 13
    4f2c:	65 01       	movw	r12, r10
	total_valve_number = _kRESET;
    4f2e:	f1 2c       	mov	r15, r1
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
    4f30:	f6 01       	movw	r30, r12
    4f32:	80 81       	ld	r24, Z
    4f34:	81 50       	subi	r24, 0x01	; 1
    4f36:	8e 30       	cpi	r24, 0x0E	; 14
    4f38:	d8 f5       	brcc	.+118    	; 0x4fb0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xec>
    4f3a:	d6 01       	movw	r26, r12
    4f3c:	65 e0       	ldi	r22, 0x05	; 5
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
    4f3e:	89 81       	ldd	r24, Y+1	; 0x01
    4f40:	88 23       	and	r24, r24
    4f42:	f9 f0       	breq	.+62     	; 0x4f82 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
    4f44:	10 e0       	ldi	r17, 0x00	; 0
    4f46:	70 e0       	ldi	r23, 0x00	; 0
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f48:	87 2f       	mov	r24, r23
    4f4a:	90 e0       	ldi	r25, 0x00	; 0
    4f4c:	a2 01       	movw	r20, r4
    4f4e:	48 0f       	add	r20, r24
    4f50:	59 1f       	adc	r21, r25
    4f52:	fa 01       	movw	r30, r20
    4f54:	50 81       	ld	r21, Z
    4f56:	55 23       	and	r21, r21
    4f58:	d1 f0       	breq	.+52     	; 0x4f8e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
					{
						if(_sLira_Node_Param[i].Euro_Valve_Group[j])
    4f5a:	11 96       	adiw	r26, 0x01	; 1
    4f5c:	4c 91       	ld	r20, X
    4f5e:	11 97       	sbiw	r26, 0x01	; 1
    4f60:	44 23       	and	r20, r20
    4f62:	69 f0       	breq	.+26     	; 0x4f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
						{
							if(valve_number_list[k] == _sLira_Node_Param[i].Euro_Valve_Group[j])
    4f64:	54 17       	cp	r21, r20
    4f66:	99 f0       	breq	.+38     	; 0x4f8e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
							{
								break;
							}
							
							if(valve_number_list[k] != _sLira_Node_Param[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4f68:	42 e0       	ldi	r20, 0x02	; 2
    4f6a:	50 e0       	ldi	r21, 0x00	; 0
    4f6c:	4c 0f       	add	r20, r28
    4f6e:	5d 1f       	adc	r21, r29
    4f70:	84 0f       	add	r24, r20
    4f72:	95 1f       	adc	r25, r21
    4f74:	fc 01       	movw	r30, r24
    4f76:	80 81       	ld	r24, Z
    4f78:	81 11       	cpse	r24, r1
    4f7a:	01 c0       	rjmp	.+2      	; 0x4f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
							{
								valve_number_not_match_flag = _kSET;
    4f7c:	11 e0       	ldi	r17, 0x01	; 1
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f7e:	7f 5f       	subi	r23, 0xFF	; 255
    4f80:	e3 cf       	rjmp	.-58     	; 0x4f48 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84>
						}
					}
				}
				else
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j])   // check weather valve is there or not
    4f82:	11 96       	adiw	r26, 0x01	; 1
    4f84:	8c 91       	ld	r24, X
    4f86:	11 97       	sbiw	r26, 0x01	; 1
    4f88:	81 11       	cpse	r24, r1
    4f8a:	03 c0       	rjmp	.+6      	; 0x4f92 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xce>
    4f8c:	0d c0       	rjmp	.+26     	; 0x4fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_not_match_flag = _kSET;
					}
				}
				if(valve_number_not_match_flag)
    4f8e:	11 23       	and	r17, r17
    4f90:	59 f0       	breq	.+22     	; 0x4fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    4f92:	11 96       	adiw	r26, 0x01	; 1
    4f94:	4c 91       	ld	r20, X
    4f96:	11 97       	sbiw	r26, 0x01	; 1
    4f98:	43 31       	cpi	r20, 0x13	; 19
    4f9a:	30 f4       	brcc	.+12     	; 0x4fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_list[total_valve_number] = _sLira_Node_Param[i].Euro_Valve_Group[j];
    4f9c:	c2 01       	movw	r24, r4
    4f9e:	8f 0d       	add	r24, r15
    4fa0:	91 1d       	adc	r25, r1
    4fa2:	fc 01       	movw	r30, r24
    4fa4:	40 83       	st	Z, r20
						total_valve_number++;
    4fa6:	f3 94       	inc	r15
    4fa8:	61 50       	subi	r22, 0x01	; 1
    4faa:	11 96       	adiw	r26, 0x01	; 1
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    4fac:	61 11       	cpse	r22, r1
    4fae:	c7 cf       	rjmp	.-114    	; 0x4f3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7a>
    4fb0:	f6 e0       	ldi	r31, 0x06	; 6
    4fb2:	cf 0e       	add	r12, r31
    4fb4:	d1 1c       	adc	r13, r1
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
	total_valve_number = _kRESET;
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    4fb6:	2c 15       	cp	r18, r12
    4fb8:	3d 05       	cpc	r19, r13
    4fba:	09 f0       	breq	.+2      	; 0x4fbe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfa>
    4fbc:	b9 cf       	rjmp	.-142    	; 0x4f30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6c>
			}
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    4fbe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    4fc2:	81 30       	cpi	r24, 0x01	; 1
    4fc4:	59 f5       	brne	.+86     	; 0x501c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
	{
		_kSERAIL_MON_WRITE("valve list is : ");
    4fc6:	6e e0       	ldi	r22, 0x0E	; 14
    4fc8:	78 e0       	ldi	r23, 0x08	; 8
    4fca:	86 ec       	ldi	r24, 0xC6	; 198
    4fcc:	94 e1       	ldi	r25, 0x14	; 20
    4fce:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    4fd2:	86 ec       	ldi	r24, 0xC6	; 198
    4fd4:	94 e1       	ldi	r25, 0x14	; 20
    4fd6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
		for(i=0;valve_number_list[i]!=0;i++)
    4fda:	e1 2c       	mov	r14, r1
    4fdc:	82 01       	movw	r16, r4
    4fde:	0e 0d       	add	r16, r14
    4fe0:	11 1d       	adc	r17, r1
    4fe2:	d8 01       	movw	r26, r16
    4fe4:	8c 91       	ld	r24, X
    4fe6:	88 23       	and	r24, r24
    4fe8:	c9 f0       	breq	.+50     	; 0x501c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
		{
			_kSERAIL_MON_WRITE("valve list enter ");
    4fea:	6c ef       	ldi	r22, 0xFC	; 252
    4fec:	77 e0       	ldi	r23, 0x07	; 7
    4fee:	86 ec       	ldi	r24, 0xC6	; 198
    4ff0:	94 e1       	ldi	r25, 0x14	; 20
    4ff2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    4ff6:	f8 01       	movw	r30, r16
    4ff8:	60 81       	ld	r22, Z
    4ffa:	70 e0       	ldi	r23, 0x00	; 0
    4ffc:	4a e0       	ldi	r20, 0x0A	; 10
    4ffe:	50 e0       	ldi	r21, 0x00	; 0
    5000:	86 ec       	ldi	r24, 0xC6	; 198
    5002:	94 e1       	ldi	r25, 0x14	; 20
    5004:	0e 94 42 d6 	call	0x1ac84	; 0x1ac84 <_ZN5Print5printEii>
			Serial.println();
    5008:	86 ec       	ldi	r24, 0xC6	; 198
    500a:	94 e1       	ldi	r25, 0x14	; 20
    500c:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
			_kSERIAL_MON_CLEAR();
    5010:	86 ec       	ldi	r24, 0xC6	; 198
    5012:	94 e1       	ldi	r25, 0x14	; 20
    5014:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("valve list is : ");
		_kSERIAL_MON_CLEAR();
	
		for(i=0;valve_number_list[i]!=0;i++)
    5018:	e3 94       	inc	r14
    501a:	e0 cf       	rjmp	.-64     	; 0x4fdc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x118>
	}
	
	
	
	
	if(on_off == _kFORCEFULYY_OFF)
    501c:	fb a9       	ldd	r31, Y+51	; 0x33
    501e:	f3 30       	cpi	r31, 0x03	; 3
    5020:	09 f0       	breq	.+2      	; 0x5024 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x160>
    5022:	7d c0       	rjmp	.+250    	; 0x511e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x25a>
    5024:	98 ee       	ldi	r25, 0xE8	; 232
    5026:	c9 2e       	mov	r12, r25
    5028:	9d e0       	ldi	r25, 0x0D	; 13
    502a:	d9 2e       	mov	r13, r25
    502c:	22 e6       	ldi	r18, 0x62	; 98
    502e:	3f e0       	ldi	r19, 0x0F	; 15
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
    5030:	d6 01       	movw	r26, r12
    5032:	11 96       	adiw	r26, 0x01	; 1
    5034:	8c 91       	ld	r24, X
    5036:	11 97       	sbiw	r26, 0x01	; 1
    5038:	85 56       	subi	r24, 0x65	; 101
    503a:	8e 30       	cpi	r24, 0x0E	; 14
    503c:	d0 f5       	brcc	.+116    	; 0x50b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ee>
    503e:	65 e0       	ldi	r22, 0x05	; 5
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
    5040:	89 81       	ldd	r24, Y+1	; 0x01
    5042:	88 23       	and	r24, r24
    5044:	f9 f0       	breq	.+62     	; 0x5084 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1c0>
    5046:	10 e0       	ldi	r17, 0x00	; 0
    5048:	70 e0       	ldi	r23, 0x00	; 0
					{
						for(k=0;valve_number_list[k]!=0;k++)
    504a:	87 2f       	mov	r24, r23
    504c:	90 e0       	ldi	r25, 0x00	; 0
    504e:	a2 01       	movw	r20, r4
    5050:	48 0f       	add	r20, r24
    5052:	59 1f       	adc	r21, r25
    5054:	fa 01       	movw	r30, r20
    5056:	50 81       	ld	r21, Z
    5058:	55 23       	and	r21, r21
    505a:	d1 f0       	breq	.+52     	; 0x5090 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1cc>
						{
							if(_sExtra_Plot[i].Euro_Valve_Group[j])
    505c:	15 96       	adiw	r26, 0x05	; 5
    505e:	4c 91       	ld	r20, X
    5060:	15 97       	sbiw	r26, 0x05	; 5
    5062:	44 23       	and	r20, r20
    5064:	69 f0       	breq	.+26     	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1bc>
							{
								if(valve_number_list[k] == _sExtra_Plot[i].Euro_Valve_Group[j])
    5066:	54 17       	cp	r21, r20
    5068:	99 f0       	breq	.+38     	; 0x5090 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1cc>
								{
									break;
								}
								
								if(valve_number_list[k] != _sExtra_Plot[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    506a:	42 e0       	ldi	r20, 0x02	; 2
    506c:	50 e0       	ldi	r21, 0x00	; 0
    506e:	4c 0f       	add	r20, r28
    5070:	5d 1f       	adc	r21, r29
    5072:	84 0f       	add	r24, r20
    5074:	95 1f       	adc	r25, r21
    5076:	fc 01       	movw	r30, r24
    5078:	80 81       	ld	r24, Z
    507a:	81 11       	cpse	r24, r1
    507c:	01 c0       	rjmp	.+2      	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1bc>
								{
									valve_number_not_match_flag = _kSET;
    507e:	11 e0       	ldi	r17, 0x01	; 1
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
					{
						for(k=0;valve_number_list[k]!=0;k++)
    5080:	7f 5f       	subi	r23, 0xFF	; 255
    5082:	e3 cf       	rjmp	.-58     	; 0x504a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x186>
							}
						}
					}
					else
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j])   // check weather valve is there or not
    5084:	15 96       	adiw	r26, 0x05	; 5
    5086:	8c 91       	ld	r24, X
    5088:	15 97       	sbiw	r26, 0x05	; 5
    508a:	81 11       	cpse	r24, r1
    508c:	03 c0       	rjmp	.+6      	; 0x5094 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d0>
    508e:	0d c0       	rjmp	.+26     	; 0x50aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
						{
							valve_number_not_match_flag = _kSET;
						}
					}
					if(valve_number_not_match_flag)
    5090:	11 23       	and	r17, r17
    5092:	59 f0       	breq	.+22     	; 0x50aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5094:	15 96       	adiw	r26, 0x05	; 5
    5096:	4c 91       	ld	r20, X
    5098:	15 97       	sbiw	r26, 0x05	; 5
    509a:	43 31       	cpi	r20, 0x13	; 19
    509c:	30 f4       	brcc	.+12     	; 0x50aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
						{
							valve_number_list[total_valve_number] = _sExtra_Plot[i].Euro_Valve_Group[j];
    509e:	c2 01       	movw	r24, r4
    50a0:	8f 0d       	add	r24, r15
    50a2:	91 1d       	adc	r25, r1
    50a4:	fc 01       	movw	r30, r24
    50a6:	40 83       	st	Z, r20
							total_valve_number++;
    50a8:	f3 94       	inc	r15
    50aa:	61 50       	subi	r22, 0x01	; 1
    50ac:	11 96       	adiw	r26, 0x01	; 1
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    50ae:	61 11       	cpse	r22, r1
    50b0:	c7 cf       	rjmp	.-114    	; 0x5040 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x17c>
    50b2:	fb e1       	ldi	r31, 0x1B	; 27
    50b4:	cf 0e       	add	r12, r31
    50b6:	d1 1c       	adc	r13, r1
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    50b8:	2c 15       	cp	r18, r12
    50ba:	3d 05       	cpc	r19, r13
    50bc:	09 f0       	breq	.+2      	; 0x50c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1fc>
    50be:	b8 cf       	rjmp	.-144    	; 0x5030 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x16c>
				}
				
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    50c0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    50c4:	81 30       	cpi	r24, 0x01	; 1
    50c6:	e9 f5       	brne	.+122    	; 0x5142 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27e>
		{
			_kSERAIL_MON_WRITE("valve list is : ");
    50c8:	6b ee       	ldi	r22, 0xEB	; 235
    50ca:	77 e0       	ldi	r23, 0x07	; 7
    50cc:	86 ec       	ldi	r24, 0xC6	; 198
    50ce:	94 e1       	ldi	r25, 0x14	; 20
    50d0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    50d4:	86 ec       	ldi	r24, 0xC6	; 198
    50d6:	94 e1       	ldi	r25, 0x14	; 20
    50d8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		
			for(i=0;valve_number_list[i]!=0;i++)
    50dc:	f1 2c       	mov	r15, r1
    50de:	82 01       	movw	r16, r4
    50e0:	0f 0d       	add	r16, r15
    50e2:	11 1d       	adc	r17, r1
    50e4:	d8 01       	movw	r26, r16
    50e6:	8c 91       	ld	r24, X
    50e8:	88 23       	and	r24, r24
    50ea:	e9 f0       	breq	.+58     	; 0x5126 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x262>
			{
				_kSERAIL_MON_WRITE("valve list enter ");
    50ec:	69 ed       	ldi	r22, 0xD9	; 217
    50ee:	77 e0       	ldi	r23, 0x07	; 7
    50f0:	86 ec       	ldi	r24, 0xC6	; 198
    50f2:	94 e1       	ldi	r25, 0x14	; 20
    50f4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    50f8:	f8 01       	movw	r30, r16
    50fa:	60 81       	ld	r22, Z
    50fc:	70 e0       	ldi	r23, 0x00	; 0
    50fe:	4a e0       	ldi	r20, 0x0A	; 10
    5100:	50 e0       	ldi	r21, 0x00	; 0
    5102:	86 ec       	ldi	r24, 0xC6	; 198
    5104:	94 e1       	ldi	r25, 0x14	; 20
    5106:	0e 94 42 d6 	call	0x1ac84	; 0x1ac84 <_ZN5Print5printEii>
				Serial.println();
    510a:	86 ec       	ldi	r24, 0xC6	; 198
    510c:	94 e1       	ldi	r25, 0x14	; 20
    510e:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    5112:	86 ec       	ldi	r24, 0xC6	; 198
    5114:	94 e1       	ldi	r25, 0x14	; 20
    5116:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    511a:	f3 94       	inc	r15
    511c:	e0 cf       	rjmp	.-64     	; 0x50de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x21a>
			}
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    511e:	8b a9       	ldd	r24, Y+51	; 0x33
    5120:	85 30       	cpi	r24, 0x05	; 5
    5122:	09 f0       	breq	.+2      	; 0x5126 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x262>
    5124:	9b c1       	rjmp	.+822    	; 0x545c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x598>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5126:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    512a:	81 30       	cpi	r24, 0x01	; 1
    512c:	51 f4       	brne	.+20     	; 0x5142 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27e>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    512e:	6e ea       	ldi	r22, 0xAE	; 174
    5130:	77 e0       	ldi	r23, 0x07	; 7
    5132:	86 ec       	ldi	r24, 0xC6	; 198
    5134:	94 e1       	ldi	r25, 0x14	; 20
    5136:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    513a:	86 ec       	ldi	r24, 0xC6	; 198
    513c:	94 e1       	ldi	r25, 0x14	; 20
    513e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    5142:	05 e1       	ldi	r16, 0x15	; 21
    5144:	1c e0       	ldi	r17, 0x0C	; 12
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    5146:	b4 e0       	ldi	r27, 0x04	; 4
    5148:	cb 2e       	mov	r12, r27
    514a:	d1 2c       	mov	r13, r1
    514c:	e1 2c       	mov	r14, r1
    514e:	f1 2c       	mov	r15, r1
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5150:	8d e0       	ldi	r24, 0x0D	; 13
    5152:	28 2e       	mov	r2, r24
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    5154:	d8 01       	movw	r26, r16
    5156:	8c 91       	ld	r24, X
    5158:	88 23       	and	r24, r24
    515a:	21 f1       	breq	.+72     	; 0x51a4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2e0>
    515c:	31 2c       	mov	r3, r1
    515e:	40 e0       	ldi	r20, 0x00	; 0
    5160:	39 c0       	rjmp	.+114    	; 0x51d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x310>
    5162:	9e 01       	movw	r18, r28
    5164:	25 5d       	subi	r18, 0xD5	; 213
    5166:	3f 4f       	sbci	r19, 0xFF	; 255
    5168:	3d ab       	std	Y+53, r19	; 0x35
    516a:	2c ab       	std	Y+52, r18	; 0x34
			{
				for(k=0;valve_number_list[k]!=0;k++)
    516c:	99 24       	eor	r9, r9
    516e:	93 94       	inc	r9
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
								_kSERIAL_MON_PRINT_NUM(i+1);
    5170:	a7 01       	movw	r20, r14
    5172:	4f 5f       	subi	r20, 0xFF	; 255
    5174:	5f 4f       	sbci	r21, 0xFF	; 255
    5176:	5f ab       	std	Y+55, r21	; 0x37
    5178:	4e ab       	std	Y+54, r20	; 0x36
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    517a:	2e 9c       	mul	r2, r14
    517c:	c0 01       	movw	r24, r0
    517e:	2f 9c       	mul	r2, r15
    5180:	90 0d       	add	r25, r0
    5182:	11 24       	eor	r1, r1
    5184:	dc 01       	movw	r26, r24
    5186:	ab 5e       	subi	r26, 0xEB	; 235
    5188:	b3 4f       	sbci	r27, 0xF3	; 243
    518a:	b9 af       	std	Y+57, r27	; 0x39
    518c:	a8 af       	std	Y+56, r26	; 0x38
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    518e:	ec a9       	ldd	r30, Y+52	; 0x34
    5190:	fd a9       	ldd	r31, Y+53	; 0x35
    5192:	81 91       	ld	r24, Z+
    5194:	fd ab       	std	Y+53, r31	; 0x35
    5196:	ec ab       	std	Y+52, r30	; 0x34
    5198:	83 21       	and	r24, r3
    519a:	49 f5       	brne	.+82     	; 0x51ee <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x32a>
    519c:	93 94       	inc	r9
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    519e:	f4 e0       	ldi	r31, 0x04	; 4
    51a0:	9f 12       	cpse	r9, r31
    51a2:	f5 cf       	rjmp	.-22     	; 0x518e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2ca>
    51a4:	bf ef       	ldi	r27, 0xFF	; 255
    51a6:	eb 1a       	sub	r14, r27
    51a8:	fb 0a       	sbc	r15, r27
    51aa:	03 5f       	subi	r16, 0xF3	; 243
    51ac:	1f 4f       	sbci	r17, 0xFF	; 255
    51ae:	e3 e0       	ldi	r30, 0x03	; 3
    51b0:	ce 0e       	add	r12, r30
    51b2:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
    51b4:	f5 e0       	ldi	r31, 0x05	; 5
    51b6:	ef 16       	cp	r14, r31
    51b8:	f1 04       	cpc	r15, r1
    51ba:	61 f6       	brne	.-104    	; 0x5154 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x290>
    51bc:	02 c1       	rjmp	.+516    	; 0x53c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4fe>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    51be:	82 17       	cp	r24, r18
    51c0:	93 07       	cpc	r25, r19
    51c2:	11 f4       	brne	.+4      	; 0x51c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x304>
						{
							total_valve_number |= hex_array[j];
    51c4:	50 81       	ld	r21, Z
    51c6:	35 2a       	or	r3, r21
    51c8:	01 96       	adiw	r24, 0x01	; 1
    51ca:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    51cc:	c8 16       	cp	r12, r24
    51ce:	d9 06       	cpc	r13, r25
    51d0:	b1 f7       	brne	.-20     	; 0x51be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fa>
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    51d2:	4f 5f       	subi	r20, 0xFF	; 255
    51d4:	f2 01       	movw	r30, r4
    51d6:	e4 0f       	add	r30, r20
    51d8:	f1 1d       	adc	r31, r1
    51da:	20 81       	ld	r18, Z
    51dc:	22 23       	and	r18, r18
    51de:	09 f4       	brne	.+2      	; 0x51e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x31e>
    51e0:	c0 cf       	rjmp	.-128    	; 0x5162 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x29e>
    51e2:	c6 01       	movw	r24, r12
    51e4:	03 97       	sbiw	r24, 0x03	; 3
    51e6:	fe 01       	movw	r30, r28
    51e8:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    51ea:	30 e0       	ldi	r19, 0x00	; 0
    51ec:	e8 cf       	rjmp	.-48     	; 0x51be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fa>
    51ee:	81 2c       	mov	r8, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    51f0:	83 94       	inc	r8
							/****************** if any valve on then turn off that valve first *******************************/
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    51f2:	a5 ef       	ldi	r26, 0xF5	; 245
    51f4:	b3 e1       	ldi	r27, 0x13	; 19
    51f6:	e4 e1       	ldi	r30, 0x14	; 20
    51f8:	1d 92       	st	X+, r1
    51fa:	ea 95       	dec	r30
    51fc:	e9 f7       	brne	.-6      	; 0x51f8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x334>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    51fe:	d8 01       	movw	r26, r16
    5200:	11 96       	adiw	r26, 0x01	; 1
    5202:	8c 91       	ld	r24, X
    5204:	11 97       	sbiw	r26, 0x01	; 1
    5206:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    520a:	12 96       	adiw	r26, 0x02	; 2
    520c:	8c 91       	ld	r24, X
    520e:	12 97       	sbiw	r26, 0x02	; 2
    5210:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    5214:	13 96       	adiw	r26, 0x03	; 3
    5216:	8c 91       	ld	r24, X
    5218:	13 97       	sbiw	r26, 0x03	; 3
    521a:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    521e:	14 96       	adiw	r26, 0x04	; 4
    5220:	8c 91       	ld	r24, X
    5222:	14 97       	sbiw	r26, 0x04	; 4
    5224:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    5228:	15 96       	adiw	r26, 0x05	; 5
    522a:	8c 91       	ld	r24, X
    522c:	15 97       	sbiw	r26, 0x05	; 5
    522e:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    5232:	16 96       	adiw	r26, 0x06	; 6
    5234:	8c 91       	ld	r24, X
    5236:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    523a:	b2 e0       	ldi	r27, 0x02	; 2
    523c:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
							
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5240:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    5244:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    5248:	90 92 00 14 	sts	0x1400, r9	; 0x801400 <_sRuble_Parameters+0x52>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    524c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5250:	81 30       	cpi	r24, 0x01	; 1
    5252:	39 f5       	brne	.+78     	; 0x52a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3de>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
    5254:	6b e8       	ldi	r22, 0x8B	; 139
    5256:	77 e0       	ldi	r23, 0x07	; 7
    5258:	86 ec       	ldi	r24, 0xC6	; 198
    525a:	94 e1       	ldi	r25, 0x14	; 20
    525c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    5260:	4a e0       	ldi	r20, 0x0A	; 10
    5262:	50 e0       	ldi	r21, 0x00	; 0
    5264:	6e a9       	ldd	r22, Y+54	; 0x36
    5266:	7f a9       	ldd	r23, Y+55	; 0x37
    5268:	86 ec       	ldi	r24, 0xC6	; 198
    526a:	94 e1       	ldi	r25, 0x14	; 20
    526c:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    5270:	86 ec       	ldi	r24, 0xC6	; 198
    5272:	94 e1       	ldi	r25, 0x14	; 20
    5274:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    5278:	66 e7       	ldi	r22, 0x76	; 118
    527a:	77 e0       	ldi	r23, 0x07	; 7
    527c:	86 ec       	ldi	r24, 0xC6	; 198
    527e:	94 e1       	ldi	r25, 0x14	; 20
    5280:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,count);
    5284:	4c e0       	ldi	r20, 0x0C	; 12
    5286:	50 e0       	ldi	r21, 0x00	; 0
    5288:	65 ef       	ldi	r22, 0xF5	; 245
    528a:	73 e1       	ldi	r23, 0x13	; 19
    528c:	86 ec       	ldi	r24, 0xC6	; 198
    528e:	94 e1       	ldi	r25, 0x14	; 20
    5290:	a7 da       	rcall	.-2738   	; 0x47e0 <_ZN5Print5writeEPKcj>
								Serial.println();
    5292:	86 ec       	ldi	r24, 0xC6	; 198
    5294:	94 e1       	ldi	r25, 0x14	; 20
    5296:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    529a:	86 ec       	ldi	r24, 0xC6	; 198
    529c:	94 e1       	ldi	r25, 0x14	; 20
    529e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();   // 20/1/2022
    52a2:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    52a6:	8c e0       	ldi	r24, 0x0C	; 12
    52a8:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
							
							
							if(Subscribed_data_check())
    52ac:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    52b0:	88 23       	and	r24, r24
    52b2:	a1 f0       	breq	.+40     	; 0x52dc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x418>
							{
								if(Seperate_Out_Sub_Data())
    52b4:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    52b8:	88 23       	and	r24, r24
    52ba:	81 f0       	breq	.+32     	; 0x52dc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x418>
								{
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    52bc:	e0 ed       	ldi	r30, 0xD0	; 208
    52be:	ff e0       	ldi	r31, 0x0F	; 15
    52c0:	01 90       	ld	r0, Z+
    52c2:	00 20       	and	r0, r0
    52c4:	e9 f7       	brne	.-6      	; 0x52c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3fc>
    52c6:	31 97       	sbiw	r30, 0x01	; 1
    52c8:	af 01       	movw	r20, r30
    52ca:	40 5d       	subi	r20, 0xD0	; 208
    52cc:	5f 40       	sbci	r21, 0x0F	; 15
    52ce:	21 e0       	ldi	r18, 0x01	; 1
    52d0:	60 ed       	ldi	r22, 0xD0	; 208
    52d2:	7f e0       	ldi	r23, 0x0F	; 15
    52d4:	82 e6       	ldi	r24, 0x62	; 98
    52d6:	9f e0       	ldi	r25, 0x0F	; 15
    52d8:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    52dc:	88 eb       	ldi	r24, 0xB8	; 184
    52de:	9b e0       	ldi	r25, 0x0B	; 11
    52e0:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
    52e4:	88 23       	and	r24, r24
    52e6:	09 f4       	brne	.+2      	; 0x52ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x426>
    52e8:	59 c0       	rjmp	.+178    	; 0x539c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4d8>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    52ea:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
								
								if(Subscribed_data_check())
    52ee:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    52f2:	88 23       	and	r24, r24
    52f4:	a1 f0       	breq	.+40     	; 0x531e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45a>
								{
									if(Seperate_Out_Sub_Data())
    52f6:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    52fa:	88 23       	and	r24, r24
    52fc:	81 f0       	breq	.+32     	; 0x531e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45a>
									{
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    52fe:	e0 ed       	ldi	r30, 0xD0	; 208
    5300:	ff e0       	ldi	r31, 0x0F	; 15
    5302:	01 90       	ld	r0, Z+
    5304:	00 20       	and	r0, r0
    5306:	e9 f7       	brne	.-6      	; 0x5302 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x43e>
    5308:	31 97       	sbiw	r30, 0x01	; 1
    530a:	af 01       	movw	r20, r30
    530c:	40 5d       	subi	r20, 0xD0	; 208
    530e:	5f 40       	sbci	r21, 0x0F	; 15
    5310:	21 e0       	ldi	r18, 0x01	; 1
    5312:	60 ed       	ldi	r22, 0xD0	; 208
    5314:	7f e0       	ldi	r23, 0x0F	; 15
    5316:	82 e6       	ldi	r24, 0x62	; 98
    5318:	9f e0       	ldi	r25, 0x0F	; 15
    531a:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
								
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    531e:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5320:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5322:	28 2f       	mov	r18, r24
    5324:	30 e0       	ldi	r19, 0x00	; 0
    5326:	e8 ad       	ldd	r30, Y+56	; 0x38
    5328:	f9 ad       	ldd	r31, Y+57	; 0x39
    532a:	e2 0f       	add	r30, r18
    532c:	f3 1f       	adc	r31, r19
    532e:	d9 01       	movw	r26, r18
    5330:	a7 5f       	subi	r26, 0xF7	; 247
    5332:	bb 4e       	sbci	r27, 0xEB	; 235
    5334:	41 81       	ldd	r20, Z+1	; 0x01
    5336:	2c 91       	ld	r18, X
    5338:	42 17       	cp	r20, r18
    533a:	11 f0       	breq	.+4      	; 0x5340 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x47c>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    533c:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    533e:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    5340:	9f 5f       	subi	r25, 0xFF	; 255
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5342:	8f 5f       	subi	r24, 0xFF	; 255
    5344:	86 30       	cpi	r24, 0x06	; 6
    5346:	68 f3       	brcs	.-38     	; 0x5322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45e>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    5348:	96 30       	cpi	r25, 0x06	; 6
    534a:	c9 f4       	brne	.+50     	; 0x537e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ba>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    534c:	81 e0       	ldi	r24, 0x01	; 1
    534e:	f8 01       	movw	r30, r16
    5350:	83 87       	std	Z+11, r24	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    5352:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    5356:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5358:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    535c:	90 e0       	ldi	r25, 0x00	; 0
    535e:	98 2f       	mov	r25, r24
    5360:	88 27       	eor	r24, r24
    5362:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    5366:	83 2b       	or	r24, r19
    5368:	91 87       	std	Z+9, r25	; 0x09
    536a:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    536c:	22 23       	and	r18, r18
    536e:	e9 f0       	breq	.+58     	; 0x53aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4e6>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5370:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5374:	81 30       	cpi	r24, 0x01	; 1
    5376:	d9 f4       	brne	.+54     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier on)");
    5378:	61 e5       	ldi	r22, 0x51	; 81
    537a:	77 e0       	ldi	r23, 0x07	; 7
    537c:	06 c0       	rjmp	.+12     	; 0x538a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4c6>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    537e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5382:	81 30       	cpi	r24, 0x01	; 1
    5384:	a1 f4       	brne	.+40     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
									{
										_kSERAIL_MON_WRITE("valve id not match(before start)");
    5386:	60 e3       	ldi	r22, 0x30	; 48
    5388:	77 e0       	ldi	r23, 0x07	; 7
    538a:	86 ec       	ldi	r24, 0xC6	; 198
    538c:	94 e1       	ldi	r25, 0x14	; 20
    538e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5392:	86 ec       	ldi	r24, 0xC6	; 198
    5394:	94 e1       	ldi	r25, 0x14	; 20
    5396:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    539a:	09 c0       	rjmp	.+18     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    539c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    53a0:	81 30       	cpi	r24, 0x01	; 1
    53a2:	29 f4       	brne	.+10     	; 0x53ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ea>
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
    53a4:	69 e0       	ldi	r22, 0x09	; 9
    53a6:	77 e0       	ldi	r23, 0x07	; 7
    53a8:	f0 cf       	rjmp	.-32     	; 0x538a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4c6>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    53aa:	e3 e0       	ldi	r30, 0x03	; 3
    53ac:	8e 2e       	mov	r8, r30
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    53ae:	68 ee       	ldi	r22, 0xE8	; 232
    53b0:	73 e0       	ldi	r23, 0x03	; 3
    53b2:	80 e0       	ldi	r24, 0x00	; 0
    53b4:	90 e0       	ldi	r25, 0x00	; 0
    53b6:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    53ba:	f3 e0       	ldi	r31, 0x03	; 3
    53bc:	8f 12       	cpse	r8, r31
    53be:	18 cf       	rjmp	.-464    	; 0x51f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x32c>
    53c0:	ed ce       	rjmp	.-550    	; 0x519c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2d8>
			}
			
		}
	}
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    53c2:	2b a9       	ldd	r18, Y+51	; 0x33
    53c4:	23 30       	cpi	r18, 0x03	; 3
    53c6:	11 f4       	brne	.+4      	; 0x53cc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x508>
    53c8:	0c 94 98 32 	jmp	0x6530	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
    53cc:	25 30       	cpi	r18, 0x05	; 5
    53ce:	09 f0       	breq	.+2      	; 0x53d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x50e>
    53d0:	45 c0       	rjmp	.+138    	; 0x545c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x598>
    53d2:	7e e0       	ldi	r23, 0x0E	; 14
    53d4:	f7 2e       	mov	r15, r23
    53d6:	00 e0       	ldi	r16, 0x00	; 0
    53d8:	10 e0       	ldi	r17, 0x00	; 0
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    53da:	f5 01       	movw	r30, r10
    53dc:	e0 0f       	add	r30, r16
    53de:	f1 1f       	adc	r31, r17
    53e0:	e1 81       	ldd	r30, Z+1	; 0x01
    53e2:	e3 31       	cpi	r30, 0x13	; 19
    53e4:	68 f0       	brcs	.+26     	; 0x5400 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x53c>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    53e6:	f0 e0       	ldi	r31, 0x00	; 0
    53e8:	e7 5c       	subi	r30, 0xC7	; 199
    53ea:	fb 4e       	sbci	r31, 0xEB	; 235
    53ec:	61 e0       	ldi	r22, 0x01	; 1
    53ee:	80 81       	ld	r24, Z
    53f0:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
						_kDELAY_MS(200);
    53f4:	68 ec       	ldi	r22, 0xC8	; 200
    53f6:	70 e0       	ldi	r23, 0x00	; 0
    53f8:	80 e0       	ldi	r24, 0x00	; 0
    53fa:	90 e0       	ldi	r25, 0x00	; 0
    53fc:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    5400:	0f 5f       	subi	r16, 0xFF	; 255
    5402:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5404:	05 30       	cpi	r16, 0x05	; 5
    5406:	11 05       	cpc	r17, r1
    5408:	41 f7       	brne	.-48     	; 0x53da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x516>
    540a:	fa 94       	dec	r15
    540c:	36 e0       	ldi	r19, 0x06	; 6
    540e:	a3 0e       	add	r10, r19
    5410:	b1 1c       	adc	r11, r1
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
    5412:	f1 10       	cpse	r15, r1
    5414:	e0 cf       	rjmp	.-64     	; 0x53d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x512>
						_kDELAY_MS(200);
					}
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
    5416:	80 91 3a 0e 	lds	r24, 0x0E3A	; 0x800e3a <_sExtra_Plot+0x52>
    541a:	88 36       	cpi	r24, 0x68	; 104
    541c:	11 f0       	breq	.+4      	; 0x5422 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x55e>
    541e:	0c 94 98 32 	jmp	0x6530	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
    5422:	0e e3       	ldi	r16, 0x3E	; 62
    5424:	1e e0       	ldi	r17, 0x0E	; 14
    5426:	63 e4       	ldi	r22, 0x43	; 67
    5428:	e6 2e       	mov	r14, r22
    542a:	6e e0       	ldi	r22, 0x0E	; 14
    542c:	f6 2e       	mov	r15, r22
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    542e:	d8 01       	movw	r26, r16
    5430:	ed 91       	ld	r30, X+
    5432:	8d 01       	movw	r16, r26
    5434:	e3 31       	cpi	r30, 0x13	; 19
    5436:	68 f0       	brcs	.+26     	; 0x5452 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x58e>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5438:	f0 e0       	ldi	r31, 0x00	; 0
    543a:	e7 5c       	subi	r30, 0xC7	; 199
    543c:	fb 4e       	sbci	r31, 0xEB	; 235
    543e:	61 e0       	ldi	r22, 0x01	; 1
    5440:	80 81       	ld	r24, Z
    5442:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
						_kDELAY_MS(200);
    5446:	68 ec       	ldi	r22, 0xC8	; 200
    5448:	70 e0       	ldi	r23, 0x00	; 0
    544a:	80 e0       	ldi	r24, 0x00	; 0
    544c:	90 e0       	ldi	r25, 0x00	; 0
    544e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5452:	e0 16       	cp	r14, r16
    5454:	f1 06       	cpc	r15, r17
    5456:	59 f7       	brne	.-42     	; 0x542e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56a>
    5458:	0c 94 98 32 	jmp	0x6530	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
	
	
	
	
	
	if(on_off == _kON)
    545c:	bb a9       	ldd	r27, Y+51	; 0x33
    545e:	b1 30       	cpi	r27, 0x01	; 1
    5460:	09 f0       	breq	.+2      	; 0x5464 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5a0>
    5462:	49 c1       	rjmp	.+658    	; 0x56f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x832>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5464:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5468:	81 30       	cpi	r24, 0x01	; 1
    546a:	51 f4       	brne	.+20     	; 0x5480 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5bc>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    546c:	6e ed       	ldi	r22, 0xDE	; 222
    546e:	76 e0       	ldi	r23, 0x06	; 6
    5470:	86 ec       	ldi	r24, 0xC6	; 198
    5472:	94 e1       	ldi	r25, 0x14	; 20
    5474:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    5478:	86 ec       	ldi	r24, 0xC6	; 198
    547a:	94 e1       	ldi	r25, 0x14	; 20
    547c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    5480:	05 e1       	ldi	r16, 0x15	; 21
    5482:	1c e0       	ldi	r17, 0x0C	; 12
    5484:	44 e0       	ldi	r20, 0x04	; 4
    5486:	a4 2e       	mov	r10, r20
    5488:	b1 2c       	mov	r11, r1
    548a:	e1 2c       	mov	r14, r1
    548c:	f1 2c       	mov	r15, r1
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    548e:	5d e0       	ldi	r21, 0x0D	; 13
    5490:	85 2e       	mov	r8, r21
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    5492:	f8 01       	movw	r30, r16
    5494:	82 85       	ldd	r24, Z+10	; 0x0a
    5496:	88 23       	and	r24, r24
    5498:	01 f1       	breq	.+64     	; 0x54da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x616>
    549a:	91 2c       	mov	r9, r1
    549c:	40 e0       	ldi	r20, 0x00	; 0
    549e:	35 c0       	rjmp	.+106    	; 0x550a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x646>
    54a0:	ae 01       	movw	r20, r28
    54a2:	45 5d       	subi	r20, 0xD5	; 213
    54a4:	5f 4f       	sbci	r21, 0xFF	; 255
    54a6:	1a 01       	movw	r2, r20
			{
				for(k=0;valve_number_list[k]!=0;k++)
    54a8:	dd 24       	eor	r13, r13
    54aa:	d3 94       	inc	r13
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
								_kSERIAL_MON_PRINT_NUM(i+1);
    54ac:	c7 01       	movw	r24, r14
    54ae:	01 96       	adiw	r24, 0x01	; 1
    54b0:	9d ab       	std	Y+53, r25	; 0x35
    54b2:	8c ab       	std	Y+52, r24	; 0x34
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    54b4:	8e 9c       	mul	r8, r14
    54b6:	c0 01       	movw	r24, r0
    54b8:	8f 9c       	mul	r8, r15
    54ba:	90 0d       	add	r25, r0
    54bc:	11 24       	eor	r1, r1
    54be:	dc 01       	movw	r26, r24
    54c0:	ab 5e       	subi	r26, 0xEB	; 235
    54c2:	b3 4f       	sbci	r27, 0xF3	; 243
    54c4:	bf ab       	std	Y+55, r27	; 0x37
    54c6:	ae ab       	std	Y+54, r26	; 0x36
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    54c8:	f1 01       	movw	r30, r2
    54ca:	81 91       	ld	r24, Z+
    54cc:	1f 01       	movw	r2, r30
    54ce:	89 21       	and	r24, r9
    54d0:	41 f5       	brne	.+80     	; 0x5522 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x65e>
    54d2:	d3 94       	inc	r13
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    54d4:	f4 e0       	ldi	r31, 0x04	; 4
    54d6:	df 12       	cpse	r13, r31
    54d8:	f7 cf       	rjmp	.-18     	; 0x54c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x604>
    54da:	ff ef       	ldi	r31, 0xFF	; 255
    54dc:	ef 1a       	sub	r14, r31
    54de:	ff 0a       	sbc	r15, r31
    54e0:	03 5f       	subi	r16, 0xF3	; 243
    54e2:	1f 4f       	sbci	r17, 0xFF	; 255
    54e4:	23 e0       	ldi	r18, 0x03	; 3
    54e6:	a2 0e       	add	r10, r18
    54e8:	b1 1c       	adc	r11, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
    54ea:	36 e0       	ldi	r19, 0x06	; 6
    54ec:	e3 16       	cp	r14, r19
    54ee:	f1 04       	cpc	r15, r1
    54f0:	81 f6       	brne	.-96     	; 0x5492 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5ce>
    54f2:	05 c1       	rjmp	.+522    	; 0x56fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x83a>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    54f4:	28 17       	cp	r18, r24
    54f6:	39 07       	cpc	r19, r25
    54f8:	11 f4       	brne	.+4      	; 0x54fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x63a>
						{
							total_valve_number |= hex_array[j];
    54fa:	50 81       	ld	r21, Z
    54fc:	95 2a       	or	r9, r21
    54fe:	01 96       	adiw	r24, 0x01	; 1
    5500:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    5502:	a8 16       	cp	r10, r24
    5504:	b9 06       	cpc	r11, r25
    5506:	b1 f7       	brne	.-20     	; 0x54f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x630>
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    5508:	4f 5f       	subi	r20, 0xFF	; 255
    550a:	f2 01       	movw	r30, r4
    550c:	e4 0f       	add	r30, r20
    550e:	f1 1d       	adc	r31, r1
    5510:	20 81       	ld	r18, Z
    5512:	22 23       	and	r18, r18
    5514:	29 f2       	breq	.-118    	; 0x54a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5dc>
    5516:	c5 01       	movw	r24, r10
    5518:	03 97       	sbiw	r24, 0x03	; 3
    551a:	fe 01       	movw	r30, r28
    551c:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    551e:	30 e0       	ldi	r19, 0x00	; 0
    5520:	e9 cf       	rjmp	.-46     	; 0x54f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x630>
    5522:	c1 2c       	mov	r12, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    5524:	c3 94       	inc	r12
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5526:	a5 ef       	ldi	r26, 0xF5	; 245
    5528:	b3 e1       	ldi	r27, 0x13	; 19
    552a:	e4 e1       	ldi	r30, 0x14	; 20
    552c:	1d 92       	st	X+, r1
    552e:	ea 95       	dec	r30
    5530:	e9 f7       	brne	.-6      	; 0x552c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x668>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    5532:	d8 01       	movw	r26, r16
    5534:	11 96       	adiw	r26, 0x01	; 1
    5536:	8c 91       	ld	r24, X
    5538:	11 97       	sbiw	r26, 0x01	; 1
    553a:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    553e:	12 96       	adiw	r26, 0x02	; 2
    5540:	8c 91       	ld	r24, X
    5542:	12 97       	sbiw	r26, 0x02	; 2
    5544:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    5548:	13 96       	adiw	r26, 0x03	; 3
    554a:	8c 91       	ld	r24, X
    554c:	13 97       	sbiw	r26, 0x03	; 3
    554e:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    5552:	14 96       	adiw	r26, 0x04	; 4
    5554:	8c 91       	ld	r24, X
    5556:	14 97       	sbiw	r26, 0x04	; 4
    5558:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    555c:	15 96       	adiw	r26, 0x05	; 5
    555e:	8c 91       	ld	r24, X
    5560:	15 97       	sbiw	r26, 0x05	; 5
    5562:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    5566:	16 96       	adiw	r26, 0x06	; 6
    5568:	8c 91       	ld	r24, X
    556a:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    556e:	b2 e0       	ldi	r27, 0x02	; 2
    5570:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5574:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    5578:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    557c:	d0 92 00 14 	sts	0x1400, r13	; 0x801400 <_sRuble_Parameters+0x52>
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5580:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5584:	81 30       	cpi	r24, 0x01	; 1
    5586:	39 f5       	brne	.+78     	; 0x55d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x712>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
    5588:	6a eb       	ldi	r22, 0xBA	; 186
    558a:	76 e0       	ldi	r23, 0x06	; 6
    558c:	86 ec       	ldi	r24, 0xC6	; 198
    558e:	94 e1       	ldi	r25, 0x14	; 20
    5590:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    5594:	4a e0       	ldi	r20, 0x0A	; 10
    5596:	50 e0       	ldi	r21, 0x00	; 0
    5598:	6c a9       	ldd	r22, Y+52	; 0x34
    559a:	7d a9       	ldd	r23, Y+53	; 0x35
    559c:	86 ec       	ldi	r24, 0xC6	; 198
    559e:	94 e1       	ldi	r25, 0x14	; 20
    55a0:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    55a4:	86 ec       	ldi	r24, 0xC6	; 198
    55a6:	94 e1       	ldi	r25, 0x14	; 20
    55a8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    55ac:	65 ea       	ldi	r22, 0xA5	; 165
    55ae:	76 e0       	ldi	r23, 0x06	; 6
    55b0:	86 ec       	ldi	r24, 0xC6	; 198
    55b2:	94 e1       	ldi	r25, 0x14	; 20
    55b4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,6);
    55b8:	46 e0       	ldi	r20, 0x06	; 6
    55ba:	50 e0       	ldi	r21, 0x00	; 0
    55bc:	65 ef       	ldi	r22, 0xF5	; 245
    55be:	73 e1       	ldi	r23, 0x13	; 19
    55c0:	86 ec       	ldi	r24, 0xC6	; 198
    55c2:	94 e1       	ldi	r25, 0x14	; 20
    55c4:	0d d9       	rcall	.-3558   	; 0x47e0 <_ZN5Print5writeEPKcj>
								Serial.println();
    55c6:	86 ec       	ldi	r24, 0xC6	; 198
    55c8:	94 e1       	ldi	r25, 0x14	; 20
    55ca:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    55ce:	86 ec       	ldi	r24, 0xC6	; 198
    55d0:	94 e1       	ldi	r25, 0x14	; 20
    55d2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    55d6:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    55da:	8c e0       	ldi	r24, 0x0C	; 12
    55dc:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
							
							if(Subscribed_data_check())
    55e0:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    55e4:	88 23       	and	r24, r24
    55e6:	a1 f0       	breq	.+40     	; 0x5610 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74c>
							{
								if(Seperate_Out_Sub_Data())
    55e8:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    55ec:	88 23       	and	r24, r24
    55ee:	81 f0       	breq	.+32     	; 0x5610 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74c>
								{
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    55f0:	e0 ed       	ldi	r30, 0xD0	; 208
    55f2:	ff e0       	ldi	r31, 0x0F	; 15
    55f4:	01 90       	ld	r0, Z+
    55f6:	00 20       	and	r0, r0
    55f8:	e9 f7       	brne	.-6      	; 0x55f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x730>
    55fa:	31 97       	sbiw	r30, 0x01	; 1
    55fc:	af 01       	movw	r20, r30
    55fe:	40 5d       	subi	r20, 0xD0	; 208
    5600:	5f 40       	sbci	r21, 0x0F	; 15
    5602:	21 e0       	ldi	r18, 0x01	; 1
    5604:	60 ed       	ldi	r22, 0xD0	; 208
    5606:	7f e0       	ldi	r23, 0x0F	; 15
    5608:	82 e6       	ldi	r24, 0x62	; 98
    560a:	9f e0       	ldi	r25, 0x0F	; 15
    560c:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5610:	88 eb       	ldi	r24, 0xB8	; 184
    5612:	9b e0       	ldi	r25, 0x0B	; 11
    5614:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
    5618:	88 23       	and	r24, r24
    561a:	09 f4       	brne	.+2      	; 0x561e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75a>
    561c:	59 c0       	rjmp	.+178    	; 0x56d0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x80c>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    561e:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
								
								if(Subscribed_data_check())
    5622:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    5626:	88 23       	and	r24, r24
    5628:	a1 f0       	breq	.+40     	; 0x5652 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x78e>
								{
									if(Seperate_Out_Sub_Data())
    562a:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    562e:	88 23       	and	r24, r24
    5630:	81 f0       	breq	.+32     	; 0x5652 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x78e>
									{
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5632:	e0 ed       	ldi	r30, 0xD0	; 208
    5634:	ff e0       	ldi	r31, 0x0F	; 15
    5636:	01 90       	ld	r0, Z+
    5638:	00 20       	and	r0, r0
    563a:	e9 f7       	brne	.-6      	; 0x5636 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x772>
    563c:	31 97       	sbiw	r30, 0x01	; 1
    563e:	af 01       	movw	r20, r30
    5640:	40 5d       	subi	r20, 0xD0	; 208
    5642:	5f 40       	sbci	r21, 0x0F	; 15
    5644:	21 e0       	ldi	r18, 0x01	; 1
    5646:	60 ed       	ldi	r22, 0xD0	; 208
    5648:	7f e0       	ldi	r23, 0x0F	; 15
    564a:	82 e6       	ldi	r24, 0x62	; 98
    564c:	9f e0       	ldi	r25, 0x0F	; 15
    564e:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
									}
								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    5652:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5654:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5656:	28 2f       	mov	r18, r24
    5658:	30 e0       	ldi	r19, 0x00	; 0
    565a:	ee a9       	ldd	r30, Y+54	; 0x36
    565c:	ff a9       	ldd	r31, Y+55	; 0x37
    565e:	e2 0f       	add	r30, r18
    5660:	f3 1f       	adc	r31, r19
    5662:	d9 01       	movw	r26, r18
    5664:	a7 5f       	subi	r26, 0xF7	; 247
    5666:	bb 4e       	sbci	r27, 0xEB	; 235
    5668:	41 81       	ldd	r20, Z+1	; 0x01
    566a:	2c 91       	ld	r18, X
    566c:	42 17       	cp	r20, r18
    566e:	11 f0       	breq	.+4      	; 0x5674 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7b0>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    5670:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    5672:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    5674:	9f 5f       	subi	r25, 0xFF	; 255
								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5676:	8f 5f       	subi	r24, 0xFF	; 255
    5678:	86 30       	cpi	r24, 0x06	; 6
    567a:	68 f3       	brcs	.-38     	; 0x5656 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x792>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    567c:	96 30       	cpi	r25, 0x06	; 6
    567e:	c9 f4       	brne	.+50     	; 0x56b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7ee>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5680:	81 e0       	ldi	r24, 0x01	; 1
    5682:	f8 01       	movw	r30, r16
    5684:	83 87       	std	Z+11, r24	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    5686:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    568a:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    568c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    5690:	90 e0       	ldi	r25, 0x00	; 0
    5692:	98 2f       	mov	r25, r24
    5694:	88 27       	eor	r24, r24
    5696:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    569a:	83 2b       	or	r24, r19
    569c:	91 87       	std	Z+9, r25	; 0x09
    569e:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    56a0:	22 23       	and	r18, r18
    56a2:	e9 f0       	breq	.+58     	; 0x56de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81a>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    56a4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    56a8:	81 30       	cpi	r24, 0x01	; 1
    56aa:	d9 f4       	brne	.+54     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier onn)");
    56ac:	6f e7       	ldi	r22, 0x7F	; 127
    56ae:	76 e0       	ldi	r23, 0x06	; 6
    56b0:	06 c0       	rjmp	.+12     	; 0x56be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7fa>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    56b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    56b6:	81 30       	cpi	r24, 0x01	; 1
    56b8:	a1 f4       	brne	.+40     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
									{
										_kSERAIL_MON_WRITE("valve id not match(before startt)");
    56ba:	6d e5       	ldi	r22, 0x5D	; 93
    56bc:	76 e0       	ldi	r23, 0x06	; 6
    56be:	86 ec       	ldi	r24, 0xC6	; 198
    56c0:	94 e1       	ldi	r25, 0x14	; 20
    56c2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    56c6:	86 ec       	ldi	r24, 0xC6	; 198
    56c8:	94 e1       	ldi	r25, 0x14	; 20
    56ca:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    56ce:	09 c0       	rjmp	.+18     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    56d0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    56d4:	81 30       	cpi	r24, 0x01	; 1
    56d6:	29 f4       	brne	.+10     	; 0x56e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x81e>
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
    56d8:	6f e2       	ldi	r22, 0x2F	; 47
    56da:	76 e0       	ldi	r23, 0x06	; 6
    56dc:	f0 cf       	rjmp	.-32     	; 0x56be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7fa>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    56de:	23 e0       	ldi	r18, 0x03	; 3
    56e0:	c2 2e       	mov	r12, r18
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    56e2:	68 ee       	ldi	r22, 0xE8	; 232
    56e4:	73 e0       	ldi	r23, 0x03	; 3
    56e6:	80 e0       	ldi	r24, 0x00	; 0
    56e8:	90 e0       	ldi	r25, 0x00	; 0
    56ea:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    56ee:	f3 e0       	ldi	r31, 0x03	; 3
    56f0:	cf 12       	cpse	r12, r31
    56f2:	18 cf       	rjmp	.-464    	; 0x5524 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x660>
    56f4:	ee ce       	rjmp	.-548    	; 0x54d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x60e>
	}
	
	
	/************************************************* if everything ok then turn on or off the valves *********************************************/
	
	switch(on_off)
    56f6:	2b a9       	ldd	r18, Y+51	; 0x33
    56f8:	22 30       	cpi	r18, 0x02	; 2
    56fa:	08 f0       	brcs	.+2      	; 0x56fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x83a>
    56fc:	18 c7       	rjmp	.+3632   	; 0x652e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166a>
    56fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
		case _kON:
		case _kOFF:
		{
			/* check weather the plot is already irrigating or not  to stop the irrigation */
			
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
    5702:	3e e0       	ldi	r19, 0x0E	; 14
    5704:	37 15       	cp	r19, r7
    5706:	08 f4       	brcc	.+2      	; 0x570a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x846>
    5708:	b4 c3       	rjmp	.+1896   	; 0x5e72 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfae>
    570a:	46 e0       	ldi	r20, 0x06	; 6
    570c:	74 9e       	mul	r7, r20
    570e:	80 01       	movw	r16, r0
    5710:	11 24       	eor	r1, r1
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5712:	81 30       	cpi	r24, 0x01	; 1
    5714:	d9 f5       	brne	.+118    	; 0x578c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8c8>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5716:	61 e2       	ldi	r22, 0x21	; 33
    5718:	76 e0       	ldi	r23, 0x06	; 6
    571a:	86 ec       	ldi	r24, 0xC6	; 198
    571c:	94 e1       	ldi	r25, 0x14	; 20
    571e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5722:	86 ec       	ldi	r24, 0xC6	; 198
    5724:	94 e1       	ldi	r25, 0x14	; 20
    5726:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    572a:	e1 2c       	mov	r14, r1
    572c:	f1 2c       	mov	r15, r1
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
    572e:	c7 2c       	mov	r12, r7
    5730:	d1 2c       	mov	r13, r1
    5732:	51 e0       	ldi	r21, 0x01	; 1
    5734:	c5 1a       	sub	r12, r21
    5736:	d1 08       	sbc	r13, r1
    5738:	f7 01       	movw	r30, r14
    573a:	e0 0f       	add	r30, r16
    573c:	f1 1f       	adc	r31, r17
    573e:	e7 5b       	subi	r30, 0xB7	; 183
    5740:	f2 4f       	sbci	r31, 0xF2	; 242
    5742:	4a e0       	ldi	r20, 0x0A	; 10
    5744:	50 e0       	ldi	r21, 0x00	; 0
    5746:	60 81       	ld	r22, Z
    5748:	86 ec       	ldi	r24, 0xC6	; 198
    574a:	94 e1       	ldi	r25, 0x14	; 20
    574c:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
						_kSERAIL_MON_WRITE_NO_LN(" ");
    5750:	6f e1       	ldi	r22, 0x1F	; 31
    5752:	76 e0       	ldi	r23, 0x06	; 6
    5754:	86 ec       	ldi	r24, 0xC6	; 198
    5756:	94 e1       	ldi	r25, 0x14	; 20
    5758:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    575c:	8f ef       	ldi	r24, 0xFF	; 255
    575e:	e8 1a       	sub	r14, r24
    5760:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5762:	95 e0       	ldi	r25, 0x05	; 5
    5764:	e9 16       	cp	r14, r25
    5766:	f1 04       	cpc	r15, r1
    5768:	39 f7       	brne	.-50     	; 0x5738 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x874>
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
						_kSERAIL_MON_WRITE_NO_LN(" ");
					}
				
					_kSERAIL_MON_WRITE_NO_LN("Target_Plot_Num plot no : ");
    576a:	64 e0       	ldi	r22, 0x04	; 4
    576c:	76 e0       	ldi	r23, 0x06	; 6
    576e:	86 ec       	ldi	r24, 0xC6	; 198
    5770:	94 e1       	ldi	r25, 0x14	; 20
    5772:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5776:	4a e0       	ldi	r20, 0x0A	; 10
    5778:	50 e0       	ldi	r21, 0x00	; 0
    577a:	b6 01       	movw	r22, r12
    577c:	86 ec       	ldi	r24, 0xC6	; 198
    577e:	94 e1       	ldi	r25, 0x14	; 20
    5780:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5784:	86 ec       	ldi	r24, 0xC6	; 198
    5786:	94 e1       	ldi	r25, 0x14	; 20
    5788:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    578c:	07 5b       	subi	r16, 0xB7	; 183
    578e:	12 4f       	sbci	r17, 0xF2	; 242
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
    5790:	b5 e0       	ldi	r27, 0x05	; 5
    5792:	2b 2e       	mov	r2, r27
    5794:	80 e0       	ldi	r24, 0x00	; 0
					if(same_valve == _kRESET)
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    5796:	e7 2c       	mov	r14, r7
    5798:	f1 2c       	mov	r15, r1
    579a:	a1 e0       	ldi	r26, 0x01	; 1
    579c:	ea 1a       	sub	r14, r26
    579e:	f1 08       	sbc	r15, r1
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    57a0:	9b a9       	ldd	r25, Y+51	; 0x33
    57a2:	b1 e0       	ldi	r27, 0x01	; 1
    57a4:	9b 27       	eor	r25, r27
    57a6:	91 70       	andi	r25, 0x01	; 1
    57a8:	9e ab       	std	Y+54, r25	; 0x36
								if(Subscribed_data_check())
								{
									if(Seperate_Out_Sub_Data())
									{
										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    57aa:	90 ed       	ldi	r25, 0xD0	; 208
    57ac:	a9 2e       	mov	r10, r25
    57ae:	9f e0       	ldi	r25, 0x0F	; 15
    57b0:	b9 2e       	mov	r11, r25
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(on_off == _kOFF)
    57b2:	eb a9       	ldd	r30, Y+51	; 0x33
    57b4:	e1 11       	cpse	r30, r1
    57b6:	1f c0       	rjmp	.+62     	; 0x57f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x932>
					{
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
    57b8:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    57bc:	72 16       	cp	r7, r18
    57be:	c9 f0       	breq	.+50     	; 0x57f2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x92e>
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
    57c0:	22 23       	and	r18, r18
    57c2:	c9 f0       	breq	.+50     	; 0x57f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x932>
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    57c4:	d8 01       	movw	r26, r16
    57c6:	9c 91       	ld	r25, X
    57c8:	b6 e0       	ldi	r27, 0x06	; 6
    57ca:	2b 9f       	mul	r18, r27
    57cc:	90 01       	movw	r18, r0
    57ce:	11 24       	eor	r1, r1
    57d0:	40 e0       	ldi	r20, 0x00	; 0
    57d2:	50 e0       	ldi	r21, 0x00	; 0
    57d4:	80 e0       	ldi	r24, 0x00	; 0
    57d6:	fa 01       	movw	r30, r20
    57d8:	e2 0f       	add	r30, r18
    57da:	f3 1f       	adc	r31, r19
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
    57dc:	e7 5b       	subi	r30, 0xB7	; 183
    57de:	f2 4f       	sbci	r31, 0xF2	; 242
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    57e0:	60 81       	ld	r22, Z
    57e2:	96 13       	cpse	r25, r22
    57e4:	01 c0       	rjmp	.+2      	; 0x57e8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x924>
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
									{
										same_valve = _kSET;
    57e6:	81 e0       	ldi	r24, 0x01	; 1
    57e8:	4f 5f       	subi	r20, 0xFF	; 255
    57ea:	5f 4f       	sbci	r21, 0xFF	; 255
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
    57ec:	45 30       	cpi	r20, 0x05	; 5
    57ee:	51 05       	cpc	r21, r1
    57f0:	91 f7       	brne	.-28     	; 0x57d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x912>
					else
					{
						same_valve = _kRESET;
					}
					
					if(same_valve == _kRESET)
    57f2:	81 11       	cpse	r24, r1
    57f4:	2e c3       	rjmp	.+1628   	; 0x5e52 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf8e>
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    57f6:	f8 01       	movw	r30, r16
    57f8:	d0 80       	ld	r13, Z
    57fa:	8f ef       	ldi	r24, 0xFF	; 255
    57fc:	8d 0d       	add	r24, r13
    57fe:	82 31       	cpi	r24, 0x12	; 18
    5800:	08 f0       	brcs	.+2      	; 0x5804 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x940>
    5802:	fb c2       	rjmp	.+1526   	; 0x5dfa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf36>
							unsigned char valve_number =0;
							unsigned char euro_valve_num=0,command_valve=0;
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5804:	f3 e0       	ldi	r31, 0x03	; 3
    5806:	fd 15       	cp	r31, r13
    5808:	a8 f4       	brcc	.+42     	; 0x5834 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x970>
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    580a:	8d 2d       	mov	r24, r13
    580c:	63 e0       	ldi	r22, 0x03	; 3
    580e:	0e 94 4a eb 	call	0x1d694	; 0x1d694 <__udivmodqi4>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5812:	6b ea       	ldi	r22, 0xAB	; 171
    5814:	d6 9e       	mul	r13, r22
    5816:	61 2d       	mov	r22, r1
    5818:	11 24       	eor	r1, r1
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    581a:	99 23       	and	r25, r25
    581c:	31 f0       	breq	.+12     	; 0x582a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x966>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    581e:	66 95       	lsr	r22
    5820:	cc 24       	eor	r12, r12
    5822:	c3 94       	inc	r12
    5824:	c6 0e       	add	r12, r22
    5826:	d9 2e       	mov	r13, r25
    5828:	07 c0       	rjmp	.+14     	; 0x5838 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x974>
									command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								}
								else
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    582a:	c6 2e       	mov	r12, r22
    582c:	c6 94       	lsr	r12
									command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    582e:	a3 e0       	ldi	r26, 0x03	; 3
    5830:	da 2e       	mov	r13, r26
    5832:	02 c0       	rjmp	.+4      	; 0x5838 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x974>
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
							{
								euro_valve_num = 1;
    5834:	cc 24       	eor	r12, r12
    5836:	c3 94       	inc	r12
								}
							
							}
						
							/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5838:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    583c:	81 30       	cpi	r24, 0x01	; 1
    583e:	89 f4       	brne	.+34     	; 0x5862 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x99e>
							{
								_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5840:	60 ef       	ldi	r22, 0xF0	; 240
    5842:	75 e0       	ldi	r23, 0x05	; 5
    5844:	86 ec       	ldi	r24, 0xC6	; 198
    5846:	94 e1       	ldi	r25, 0x14	; 20
    5848:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    584c:	4a e0       	ldi	r20, 0x0A	; 10
    584e:	50 e0       	ldi	r21, 0x00	; 0
    5850:	6c 2d       	mov	r22, r12
    5852:	86 ec       	ldi	r24, 0xC6	; 198
    5854:	94 e1       	ldi	r25, 0x14	; 20
    5856:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    585a:	86 ec       	ldi	r24, 0xC6	; 198
    585c:	94 e1       	ldi	r25, 0x14	; 20
    585e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
						
							if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5862:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
    5866:	81 11       	cpse	r24, r1
							{
								_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5868:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
							}
						
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    586c:	84 e1       	ldi	r24, 0x14	; 20
    586e:	e5 ef       	ldi	r30, 0xF5	; 245
    5870:	f3 e1       	ldi	r31, 0x13	; 19
    5872:	df 01       	movw	r26, r30
    5874:	1d 92       	st	X+, r1
    5876:	8a 95       	dec	r24
    5878:	e9 f7       	brne	.-6      	; 0x5874 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9b0>
							count = _kRESET;
							/********************************** wireless valve command (on/off) **********************************/
							/* valve id, on/off command, pump run timer */
						
							/************************************* copy the euro valve ID *********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    587a:	6c 2d       	mov	r22, r12
    587c:	70 e0       	ldi	r23, 0x00	; 0
    587e:	61 50       	subi	r22, 0x01	; 1
    5880:	71 09       	sbc	r23, r1
    5882:	b7 e0       	ldi	r27, 0x07	; 7
    5884:	b6 9f       	mul	r27, r22
    5886:	c0 01       	movw	r24, r0
    5888:	b7 9f       	mul	r27, r23
    588a:	90 0d       	add	r25, r0
    588c:	11 24       	eor	r1, r1
    588e:	82 55       	subi	r24, 0x52	; 82
    5890:	9c 4e       	sbci	r25, 0xEC	; 236
    5892:	fc 01       	movw	r30, r24
    5894:	ec 58       	subi	r30, 0x8C	; 140
    5896:	ff 4f       	sbci	r31, 0xFF	; 255
    5898:	20 81       	ld	r18, Z
    589a:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    589e:	31 96       	adiw	r30, 0x01	; 1
    58a0:	20 81       	ld	r18, Z
    58a2:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    58a6:	31 96       	adiw	r30, 0x01	; 1
    58a8:	20 81       	ld	r18, Z
    58aa:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    58ae:	31 96       	adiw	r30, 0x01	; 1
    58b0:	20 81       	ld	r18, Z
    58b2:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    58b6:	31 96       	adiw	r30, 0x01	; 1
    58b8:	20 81       	ld	r18, Z
    58ba:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    58be:	31 96       	adiw	r30, 0x01	; 1
    58c0:	20 81       	ld	r18, Z
    58c2:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
						
							/*********************************** packet_id ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    58c6:	22 e0       	ldi	r18, 0x02	; 2
    58c8:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
						
							/*********************************** copy on/off command ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    58cc:	eb a9       	ldd	r30, Y+51	; 0x33
    58ce:	e0 93 fc 13 	sts	0x13FC, r30	; 0x8013fc <_sRuble_Parameters+0x4e>
						
							/********************************** copy operation mode ************************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    58d2:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    58d6:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
						
							/******************************** copy pump timer (used if selected mode is timer) *********************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    58da:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    58de:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    58e2:	d0 92 00 14 	sts	0x1400, r13	; 0x801400 <_sRuble_Parameters+0x52>
    58e6:	40 e0       	ldi	r20, 0x00	; 0
    58e8:	50 e0       	ldi	r21, 0x00	; 0
    58ea:	94 2e       	mov	r9, r20
    58ec:	c1 2c       	mov	r12, r1
    58ee:	d1 2c       	mov	r13, r1
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    58f0:	fd e0       	ldi	r31, 0x0D	; 13
    58f2:	f4 9f       	mul	r31, r20
    58f4:	b0 01       	movw	r22, r0
    58f6:	f5 9f       	mul	r31, r21
    58f8:	70 0d       	add	r23, r0
    58fa:	11 24       	eor	r1, r1
    58fc:	6b 5e       	subi	r22, 0xEB	; 235
    58fe:	73 4f       	sbci	r23, 0xF3	; 243
    5900:	2d 2d       	mov	r18, r13
    5902:	30 e0       	ldi	r19, 0x00	; 0
    5904:	fb 01       	movw	r30, r22
    5906:	e2 0f       	add	r30, r18
    5908:	f3 1f       	adc	r31, r19
    590a:	28 0f       	add	r18, r24
    590c:	39 1f       	adc	r19, r25
    590e:	d9 01       	movw	r26, r18
    5910:	ac 58       	subi	r26, 0x8C	; 140
    5912:	bf 4f       	sbci	r27, 0xFF	; 255
    5914:	31 81       	ldd	r19, Z+1	; 0x01
    5916:	2c 91       	ld	r18, X
    5918:	32 17       	cp	r19, r18
    591a:	19 f0       	breq	.+6      	; 0x5922 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa5e>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    591c:	c1 2c       	mov	r12, r1
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    591e:	f6 e0       	ldi	r31, 0x06	; 6
    5920:	df 2e       	mov	r13, r31
										id_len = _kRESET;
									}
									id_len++;
    5922:	c3 94       	inc	r12
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5924:	d3 94       	inc	r13
    5926:	25 e0       	ldi	r18, 0x05	; 5
    5928:	2d 15       	cp	r18, r13
    592a:	50 f7       	brcc	.-44     	; 0x5900 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa3c>
										id_len = _kRESET;
									}
									id_len++;
								}
							
								if(id_len == _kVALVE_ID_LEN)
    592c:	36 e0       	ldi	r19, 0x06	; 6
    592e:	c3 16       	cp	r12, r19
    5930:	31 f0       	breq	.+12     	; 0x593e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa7a>
    5932:	4f 5f       	subi	r20, 0xFF	; 255
    5934:	5f 4f       	sbci	r21, 0xFF	; 255
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
    5936:	46 30       	cpi	r20, 0x06	; 6
    5938:	51 05       	cpc	r21, r1
    593a:	b9 f6       	brne	.-82     	; 0x58ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa26>
    593c:	01 c0       	rjmp	.+2      	; 0x5940 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa7c>
    593e:	69 2c       	mov	r6, r9
								{
									current_valve_number = j;    /* data send will update of this valve because valve get match */
									break;
								}
							}
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5940:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5944:	81 30       	cpi	r24, 0x01	; 1
    5946:	89 f4       	brne	.+34     	; 0x596a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xaa6>
							{
								_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    5948:	6a ed       	ldi	r22, 0xDA	; 218
    594a:	75 e0       	ldi	r23, 0x05	; 5
    594c:	86 ec       	ldi	r24, 0xC6	; 198
    594e:	94 e1       	ldi	r25, 0x14	; 20
    5950:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    5954:	4a e0       	ldi	r20, 0x0A	; 10
    5956:	50 e0       	ldi	r21, 0x00	; 0
    5958:	66 2d       	mov	r22, r6
    595a:	86 ec       	ldi	r24, 0xC6	; 198
    595c:	94 e1       	ldi	r25, 0x14	; 20
    595e:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
								_kSERIAL_MON_CLEAR();
    5962:	86 ec       	ldi	r24, 0xC6	; 198
    5964:	94 e1       	ldi	r25, 0x14	; 20
    5966:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    596a:	4d e0       	ldi	r20, 0x0D	; 13
    596c:	64 9e       	mul	r6, r20
    596e:	40 01       	movw	r8, r0
    5970:	11 24       	eor	r1, r1
    5972:	31 2c       	mov	r3, r1
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5974:	5d e0       	ldi	r21, 0x0D	; 13
    5976:	56 9d       	mul	r21, r6
    5978:	c0 01       	movw	r24, r0
    597a:	11 24       	eor	r1, r1
    597c:	9c 01       	movw	r18, r24
    597e:	2b 5e       	subi	r18, 0xEB	; 235
    5980:	33 4f       	sbci	r19, 0xF3	; 243
    5982:	29 01       	movw	r4, r18
    5984:	ab e0       	ldi	r26, 0x0B	; 11
    5986:	4a 0e       	add	r4, r26
    5988:	51 1c       	adc	r5, r1
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    598a:	f9 01       	movw	r30, r18
    598c:	38 96       	adiw	r30, 0x08	; 8
    598e:	fd ab       	std	Y+53, r31	; 0x35
    5990:	ec ab       	std	Y+52, r30	; 0x34
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
											Serial.println();
											_kSERIAL_MON_CLEAR();
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5992:	9c 01       	movw	r18, r24
    5994:	2a 5e       	subi	r18, 0xEA	; 234
    5996:	33 4f       	sbci	r19, 0xF3	; 243
    5998:	69 01       	movw	r12, r18
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
							{
								if(Subscribed_data_check())
    599a:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    599e:	88 23       	and	r24, r24
    59a0:	99 f0       	breq	.+38     	; 0x59c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb04>
								{
									if(Seperate_Out_Sub_Data())
    59a2:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    59a6:	88 23       	and	r24, r24
    59a8:	79 f0       	breq	.+30     	; 0x59c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb04>
									{
										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    59aa:	f5 01       	movw	r30, r10
    59ac:	01 90       	ld	r0, Z+
    59ae:	00 20       	and	r0, r0
    59b0:	e9 f7       	brne	.-6      	; 0x59ac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xae8>
    59b2:	31 97       	sbiw	r30, 0x01	; 1
    59b4:	af 01       	movw	r20, r30
    59b6:	40 5d       	subi	r20, 0xD0	; 208
    59b8:	5f 40       	sbci	r21, 0x0F	; 15
    59ba:	21 e0       	ldi	r18, 0x01	; 1
    59bc:	60 ed       	ldi	r22, 0xD0	; 208
    59be:	7f e0       	ldi	r23, 0x0F	; 15
    59c0:	82 e6       	ldi	r24, 0x62	; 98
    59c2:	9f e0       	ldi	r25, 0x0F	; 15
    59c4:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
									}
								}
								data_send_counter++;
    59c8:	33 94       	inc	r3
							
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    59ca:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    59ce:	81 30       	cpi	r24, 0x01	; 1
    59d0:	51 f4       	brne	.+20     	; 0x59e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb22>
								{
									_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    59d2:	66 eb       	ldi	r22, 0xB6	; 182
    59d4:	75 e0       	ldi	r23, 0x05	; 5
    59d6:	86 ec       	ldi	r24, 0xC6	; 198
    59d8:	94 e1       	ldi	r25, 0x14	; 20
    59da:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    59de:	86 ec       	ldi	r24, 0xC6	; 198
    59e0:	94 e1       	ldi	r25, 0x14	; 20
    59e2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								
								Display_Update_1();    // 20/1/2022
    59e6:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
								_kLORA_SEND_DATA(count);
    59ea:	8c e0       	ldi	r24, 0x0C	; 12
    59ec:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
							
								if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    59f0:	88 eb       	ldi	r24, 0xB8	; 184
    59f2:	9b e0       	ldi	r25, 0x0B	; 11
    59f4:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
    59f8:	88 23       	and	r24, r24
    59fa:	09 f4       	brne	.+2      	; 0x59fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb3a>
    59fc:	9a c1       	rjmp	.+820    	; 0x5d32 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe6e>
								{
									/**************************** update the received data in buff lora rx_tx **********************/
									if(_kLORA_RECV_DATA())            /* check the received data */
    59fe:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
    5a02:	88 23       	and	r24, r24
    5a04:	09 f4       	brne	.+2      	; 0x5a08 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb44>
    5a06:	3b c1       	rjmp	.+630    	; 0x5c7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdba>
									{
										if(Subscribed_data_check())
    5a08:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    5a0c:	88 23       	and	r24, r24
    5a0e:	99 f0       	breq	.+38     	; 0x5a36 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb72>
										{
											if(Seperate_Out_Sub_Data())
    5a10:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    5a14:	88 23       	and	r24, r24
    5a16:	79 f0       	breq	.+30     	; 0x5a36 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb72>
											{
												//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
												Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5a18:	f5 01       	movw	r30, r10
    5a1a:	01 90       	ld	r0, Z+
    5a1c:	00 20       	and	r0, r0
    5a1e:	e9 f7       	brne	.-6      	; 0x5a1a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb56>
    5a20:	31 97       	sbiw	r30, 0x01	; 1
    5a22:	af 01       	movw	r20, r30
    5a24:	40 5d       	subi	r20, 0xD0	; 208
    5a26:	5f 40       	sbci	r21, 0x0F	; 15
    5a28:	21 e0       	ldi	r18, 0x01	; 1
    5a2a:	60 ed       	ldi	r22, 0xD0	; 208
    5a2c:	7f e0       	ldi	r23, 0x0F	; 15
    5a2e:	82 e6       	ldi	r24, 0x62	; 98
    5a30:	9f e0       	ldi	r25, 0x0F	; 15
    5a32:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
											}
										}
										//RF95_setModeRx_Continuous();
										/* check the id get matched to the valve or not */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5a36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5a3a:	81 30       	cpi	r24, 0x01	; 1
    5a3c:	59 f5       	brne	.+86     	; 0x5a94 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbd0>
										{
											_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    5a3e:	60 ea       	ldi	r22, 0xA0	; 160
    5a40:	75 e0       	ldi	r23, 0x05	; 5
    5a42:	86 ec       	ldi	r24, 0xC6	; 198
    5a44:	94 e1       	ldi	r25, 0x14	; 20
    5a46:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    5a4a:	4a e0       	ldi	r20, 0x0A	; 10
    5a4c:	50 e0       	ldi	r21, 0x00	; 0
    5a4e:	69 e0       	ldi	r22, 0x09	; 9
    5a50:	74 e1       	ldi	r23, 0x14	; 20
    5a52:	86 ec       	ldi	r24, 0xC6	; 198
    5a54:	94 e1       	ldi	r25, 0x14	; 20
    5a56:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
											Serial.println();
    5a5a:	86 ec       	ldi	r24, 0xC6	; 198
    5a5c:	94 e1       	ldi	r25, 0x14	; 20
    5a5e:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    5a62:	86 ec       	ldi	r24, 0xC6	; 198
    5a64:	94 e1       	ldi	r25, 0x14	; 20
    5a66:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    5a6a:	62 e8       	ldi	r22, 0x82	; 130
    5a6c:	75 e0       	ldi	r23, 0x05	; 5
    5a6e:	86 ec       	ldi	r24, 0xC6	; 198
    5a70:	94 e1       	ldi	r25, 0x14	; 20
    5a72:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5a76:	47 e0       	ldi	r20, 0x07	; 7
    5a78:	50 e0       	ldi	r21, 0x00	; 0
    5a7a:	b6 01       	movw	r22, r12
    5a7c:	86 ec       	ldi	r24, 0xC6	; 198
    5a7e:	94 e1       	ldi	r25, 0x14	; 20
    5a80:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
											Serial.println();
    5a84:	86 ec       	ldi	r24, 0xC6	; 198
    5a86:	94 e1       	ldi	r25, 0x14	; 20
    5a88:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    5a8c:	86 ec       	ldi	r24, 0xC6	; 198
    5a8e:	94 e1       	ldi	r25, 0x14	; 20
    5a90:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    5a94:	a9 e0       	ldi	r26, 0x09	; 9
    5a96:	b4 e1       	ldi	r27, 0x14	; 20
    5a98:	80 e0       	ldi	r24, 0x00	; 0
    5a9a:	90 e0       	ldi	r25, 0x00	; 0
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
										{
											if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    5a9c:	2d 91       	ld	r18, X+
    5a9e:	f4 01       	movw	r30, r8
    5aa0:	e8 0f       	add	r30, r24
    5aa2:	f9 1f       	adc	r31, r25
    5aa4:	eb 5e       	subi	r30, 0xEB	; 235
    5aa6:	f3 4f       	sbci	r31, 0xF3	; 243
    5aa8:	31 81       	ldd	r19, Z+1	; 0x01
    5aaa:	32 17       	cp	r19, r18
    5aac:	09 f4       	brne	.+2      	; 0x5ab0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbec>
    5aae:	7c c0       	rjmp	.+248    	; 0x5ba8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xce4>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ab0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5ab4:	81 30       	cpi	r24, 0x01	; 1
    5ab6:	51 f4       	brne	.+20     	; 0x5acc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc08>
												{
													_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    5ab8:	67 e5       	ldi	r22, 0x57	; 87
    5aba:	75 e0       	ldi	r23, 0x05	; 5
    5abc:	86 ec       	ldi	r24, 0xC6	; 198
    5abe:	94 e1       	ldi	r25, 0x14	; 20
    5ac0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    5ac4:	86 ec       	ldi	r24, 0xC6	; 198
    5ac6:	94 e1       	ldi	r25, 0x14	; 20
    5ac8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5acc:	32 e0       	ldi	r19, 0x02	; 2
    5ace:	33 16       	cp	r3, r19
    5ad0:	b9 f0       	breq	.+46     	; 0x5b00 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc3c>
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5ad2:	e1 e0       	ldi	r30, 0x01	; 1
    5ad4:	d2 01       	movw	r26, r4
    5ad6:	ec 93       	st	X, r30
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5ad8:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    5adc:	90 e0       	ldi	r25, 0x00	; 0
    5ade:	98 2f       	mov	r25, r24
    5ae0:	88 27       	eor	r24, r24
    5ae2:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    5ae6:	82 2b       	or	r24, r18
    5ae8:	ac a9       	ldd	r26, Y+52	; 0x34
    5aea:	bd a9       	ldd	r27, Y+53	; 0x35
    5aec:	8d 93       	st	X+, r24
    5aee:	9c 93       	st	X, r25
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    5af0:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    5af4:	bb a9       	ldd	r27, Y+51	; 0x33
    5af6:	b8 13       	cpse	r27, r24
    5af8:	5d c0       	rjmp	.+186    	; 0x5bb4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcf0>
												return 0;
											}
										}
										else
										{
											data_send_counter = 3;
    5afa:	73 e0       	ldi	r23, 0x03	; 3
    5afc:	37 2e       	mov	r3, r23
    5afe:	73 c1       	rjmp	.+742    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
													_kSERIAL_MON_CLEAR();
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
												{
													_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5b00:	86 e0       	ldi	r24, 0x06	; 6
    5b02:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
													_gfault_Occure = _kFAULT_RESET_TIMER;
    5b06:	84 e6       	ldi	r24, 0x64	; 100
    5b08:	90 e0       	ldi	r25, 0x00	; 0
    5b0a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5b0e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    5b12:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5b16:	81 30       	cpi	r24, 0x01	; 1
    5b18:	31 f4       	brne	.+12     	; 0x5b26 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc62>
													{
														_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 0");
    5b1a:	6a e3       	ldi	r22, 0x3A	; 58
    5b1c:	75 e0       	ldi	r23, 0x05	; 5
    5b1e:	86 ec       	ldi	r24, 0xC6	; 198
    5b20:	94 e1       	ldi	r25, 0x14	; 20
    5b22:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5b26:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5b2a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5b2e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5b32:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5b36:	a0 62       	ori	r26, 0x20	; 32
    5b38:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5b3c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5b40:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5b44:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
													_sRuble_Parameters.Last_Valve = current_valve_number;
    5b48:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5b4c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5b50:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5b54:	82 60       	ori	r24, 0x02	; 2
    5b56:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5b5a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5b5e:	86 e0       	ldi	r24, 0x06	; 6
    5b60:	8e 9d       	mul	r24, r14
    5b62:	80 01       	movw	r16, r0
    5b64:	8f 9d       	mul	r24, r15
    5b66:	10 0d       	add	r17, r0
    5b68:	11 24       	eor	r1, r1
    5b6a:	e1 2c       	mov	r14, r1
    5b6c:	f1 2c       	mov	r15, r1
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
													{
														if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5b6e:	f8 01       	movw	r30, r16
    5b70:	ee 0d       	add	r30, r14
    5b72:	ff 1d       	adc	r31, r15
    5b74:	e2 5b       	subi	r30, 0xB2	; 178
    5b76:	f2 4f       	sbci	r31, 0xF2	; 242
    5b78:	e1 81       	ldd	r30, Z+1	; 0x01
    5b7a:	e3 31       	cpi	r30, 0x13	; 19
    5b7c:	68 f0       	brcs	.+26     	; 0x5b98 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcd4>
														{
															/********************************* turn on/off the wired valve *********************************/
															_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5b7e:	f0 e0       	ldi	r31, 0x00	; 0
    5b80:	e7 5c       	subi	r30, 0xC7	; 199
    5b82:	fb 4e       	sbci	r31, 0xEB	; 235
    5b84:	61 e0       	ldi	r22, 0x01	; 1
    5b86:	80 81       	ld	r24, Z
    5b88:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
															_kDELAY_MS(200);
    5b8c:	68 ec       	ldi	r22, 0xC8	; 200
    5b8e:	70 e0       	ldi	r23, 0x00	; 0
    5b90:	80 e0       	ldi	r24, 0x00	; 0
    5b92:	90 e0       	ldi	r25, 0x00	; 0
    5b94:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    5b98:	ef ef       	ldi	r30, 0xFF	; 255
    5b9a:	ee 1a       	sub	r14, r30
    5b9c:	fe 0a       	sbc	r15, r30
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
													_sRuble_Parameters.Last_Valve = current_valve_number;
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5b9e:	f5 e0       	ldi	r31, 0x05	; 5
    5ba0:	ef 16       	cp	r14, r31
    5ba2:	f1 04       	cpc	r15, r1
    5ba4:	21 f7       	brne	.-56     	; 0x5b6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcaa>
    5ba6:	72 c4       	rjmp	.+2276   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
    5ba8:	01 96       	adiw	r24, 0x01	; 1
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
											Serial.println();
											_kSERIAL_MON_CLEAR();
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
    5baa:	86 30       	cpi	r24, 0x06	; 6
    5bac:	91 05       	cpc	r25, r1
    5bae:	09 f0       	breq	.+2      	; 0x5bb2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcee>
    5bb0:	75 cf       	rjmp	.-278    	; 0x5a9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbd8>
    5bb2:	8f cf       	rjmp	.-226    	; 0x5ad2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc0e>
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    5bb4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5bb8:	81 30       	cpi	r24, 0x01	; 1
    5bba:	51 f4       	brne	.+20     	; 0x5bd0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd0c>
											{
												_kSERAIL_MON_WRITE("Euro Feedback fail");
    5bbc:	67 e2       	ldi	r22, 0x27	; 39
    5bbe:	75 e0       	ldi	r23, 0x05	; 5
    5bc0:	86 ec       	ldi	r24, 0xC6	; 198
    5bc2:	94 e1       	ldi	r25, 0x14	; 20
    5bc4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    5bc8:	86 ec       	ldi	r24, 0xC6	; 198
    5bca:	94 e1       	ldi	r25, 0x14	; 20
    5bcc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5bd0:	22 e0       	ldi	r18, 0x02	; 2
    5bd2:	32 12       	cpse	r3, r18
    5bd4:	08 c1       	rjmp	.+528    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5bd6:	86 e0       	ldi	r24, 0x06	; 6
    5bd8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    5bdc:	84 e6       	ldi	r24, 0x64	; 100
    5bde:	90 e0       	ldi	r25, 0x00	; 0
    5be0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5be4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5be8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5bec:	81 30       	cpi	r24, 0x01	; 1
    5bee:	31 f4       	brne	.+12     	; 0x5bfc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd38>
												{
													_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 1");
    5bf0:	6a e0       	ldi	r22, 0x0A	; 10
    5bf2:	75 e0       	ldi	r23, 0x05	; 5
    5bf4:	86 ec       	ldi	r24, 0xC6	; 198
    5bf6:	94 e1       	ldi	r25, 0x14	; 20
    5bf8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5bfc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5c00:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5c04:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5c08:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5c0c:	a0 62       	ori	r26, 0x20	; 32
    5c0e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5c12:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5c16:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5c1a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    5c1e:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5c22:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5c26:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5c2a:	82 60       	ori	r24, 0x02	; 2
    5c2c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5c30:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5c34:	86 e0       	ldi	r24, 0x06	; 6
    5c36:	8e 9d       	mul	r24, r14
    5c38:	80 01       	movw	r16, r0
    5c3a:	8f 9d       	mul	r24, r15
    5c3c:	10 0d       	add	r17, r0
    5c3e:	11 24       	eor	r1, r1
    5c40:	e1 2c       	mov	r14, r1
    5c42:	f1 2c       	mov	r15, r1
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5c44:	f8 01       	movw	r30, r16
    5c46:	ee 0d       	add	r30, r14
    5c48:	ff 1d       	adc	r31, r15
    5c4a:	e2 5b       	subi	r30, 0xB2	; 178
    5c4c:	f2 4f       	sbci	r31, 0xF2	; 242
    5c4e:	e1 81       	ldd	r30, Z+1	; 0x01
    5c50:	e3 31       	cpi	r30, 0x13	; 19
    5c52:	68 f0       	brcs	.+26     	; 0x5c6e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdaa>
													{
														/********************************* turn on/off the wired valve *********************************/
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5c54:	f0 e0       	ldi	r31, 0x00	; 0
    5c56:	e7 5c       	subi	r30, 0xC7	; 199
    5c58:	fb 4e       	sbci	r31, 0xEB	; 235
    5c5a:	61 e0       	ldi	r22, 0x01	; 1
    5c5c:	80 81       	ld	r24, Z
    5c5e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
														_kDELAY_MS(200);
    5c62:	68 ec       	ldi	r22, 0xC8	; 200
    5c64:	70 e0       	ldi	r23, 0x00	; 0
    5c66:	80 e0       	ldi	r24, 0x00	; 0
    5c68:	90 e0       	ldi	r25, 0x00	; 0
    5c6a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    5c6e:	3f ef       	ldi	r19, 0xFF	; 255
    5c70:	e3 1a       	sub	r14, r19
    5c72:	f3 0a       	sbc	r15, r19
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5c74:	45 e0       	ldi	r20, 0x05	; 5
    5c76:	e4 16       	cp	r14, r20
    5c78:	f1 04       	cpc	r15, r1
    5c7a:	21 f7       	brne	.-56     	; 0x5c44 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd80>
    5c7c:	07 c4       	rjmp	.+2062   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
											data_send_counter = 3;
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5c7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5c82:	81 30       	cpi	r24, 0x01	; 1
    5c84:	51 f4       	brne	.+20     	; 0x5c9a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdd6>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    5c86:	6f ec       	ldi	r22, 0xCF	; 207
    5c88:	74 e0       	ldi	r23, 0x04	; 4
    5c8a:	86 ec       	ldi	r24, 0xC6	; 198
    5c8c:	94 e1       	ldi	r25, 0x14	; 20
    5c8e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    5c92:	86 ec       	ldi	r24, 0xC6	; 198
    5c94:	94 e1       	ldi	r25, 0x14	; 20
    5c96:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    5c9a:	52 e0       	ldi	r21, 0x02	; 2
    5c9c:	35 12       	cpse	r3, r21
    5c9e:	a3 c0       	rjmp	.+326    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5ca0:	26 e0       	ldi	r18, 0x06	; 6
    5ca2:	20 93 ac 13 	sts	0x13AC, r18	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    5ca6:	84 e6       	ldi	r24, 0x64	; 100
    5ca8:	90 e0       	ldi	r25, 0x00	; 0
    5caa:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5cae:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5cb2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5cb6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5cba:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5cbe:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5cc2:	a0 62       	ori	r26, 0x20	; 32
    5cc4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5cc8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5ccc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5cd0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    5cd4:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5cd8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5cdc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5ce0:	82 60       	ori	r24, 0x02	; 2
    5ce2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5ce6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5cea:	2e 9d       	mul	r18, r14
    5cec:	80 01       	movw	r16, r0
    5cee:	2f 9d       	mul	r18, r15
    5cf0:	10 0d       	add	r17, r0
    5cf2:	11 24       	eor	r1, r1
    5cf4:	e1 2c       	mov	r14, r1
    5cf6:	f1 2c       	mov	r15, r1
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5cf8:	f8 01       	movw	r30, r16
    5cfa:	ee 0d       	add	r30, r14
    5cfc:	ff 1d       	adc	r31, r15
    5cfe:	e2 5b       	subi	r30, 0xB2	; 178
    5d00:	f2 4f       	sbci	r31, 0xF2	; 242
    5d02:	e1 81       	ldd	r30, Z+1	; 0x01
    5d04:	e3 31       	cpi	r30, 0x13	; 19
    5d06:	68 f0       	brcs	.+26     	; 0x5d22 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe5e>
												{
													/********************************* turn on/off the wired valve *********************************/
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5d08:	f0 e0       	ldi	r31, 0x00	; 0
    5d0a:	e7 5c       	subi	r30, 0xC7	; 199
    5d0c:	fb 4e       	sbci	r31, 0xEB	; 235
    5d0e:	61 e0       	ldi	r22, 0x01	; 1
    5d10:	80 81       	ld	r24, Z
    5d12:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
													_kDELAY_MS(200);
    5d16:	68 ec       	ldi	r22, 0xC8	; 200
    5d18:	70 e0       	ldi	r23, 0x00	; 0
    5d1a:	80 e0       	ldi	r24, 0x00	; 0
    5d1c:	90 e0       	ldi	r25, 0x00	; 0
    5d1e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    5d22:	8f ef       	ldi	r24, 0xFF	; 255
    5d24:	e8 1a       	sub	r14, r24
    5d26:	f8 0a       	sbc	r15, r24
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
											_gfault_Occure = _kFAULT_RESET_TIMER;
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5d28:	95 e0       	ldi	r25, 0x05	; 5
    5d2a:	e9 16       	cp	r14, r25
    5d2c:	f1 04       	cpc	r15, r1
    5d2e:	21 f7       	brne	.-56     	; 0x5cf8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe34>
    5d30:	ad c3       	rjmp	.+1882   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
										}
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5d32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5d36:	81 30       	cpi	r24, 0x01	; 1
    5d38:	51 f4       	brne	.+20     	; 0x5d4e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe8a>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    5d3a:	64 e9       	ldi	r22, 0x94	; 148
    5d3c:	74 e0       	ldi	r23, 0x04	; 4
    5d3e:	86 ec       	ldi	r24, 0xC6	; 198
    5d40:	94 e1       	ldi	r25, 0x14	; 20
    5d42:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5d46:	86 ec       	ldi	r24, 0xC6	; 198
    5d48:	94 e1       	ldi	r25, 0x14	; 20
    5d4a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									}
									//RF95_setModeRx_Continuous();
								
									if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5d4e:	a2 e0       	ldi	r26, 0x02	; 2
    5d50:	3a 12       	cpse	r3, r26
    5d52:	49 c0       	rjmp	.+146    	; 0x5de6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf22>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5d54:	26 e0       	ldi	r18, 0x06	; 6
    5d56:	20 93 ac 13 	sts	0x13AC, r18	; 0x8013ac <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    5d5a:	84 e6       	ldi	r24, 0x64	; 100
    5d5c:	90 e0       	ldi	r25, 0x00	; 0
    5d5e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    5d62:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5d66:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    5d6a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    5d6e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    5d72:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    5d76:	a0 62       	ori	r26, 0x20	; 32
    5d78:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    5d7c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    5d80:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    5d84:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    5d88:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5d8c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    5d90:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    5d94:	82 60       	ori	r24, 0x02	; 2
    5d96:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    5d9a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    5d9e:	2e 9d       	mul	r18, r14
    5da0:	80 01       	movw	r16, r0
    5da2:	2f 9d       	mul	r18, r15
    5da4:	10 0d       	add	r17, r0
    5da6:	11 24       	eor	r1, r1
    5da8:	e1 2c       	mov	r14, r1
    5daa:	f1 2c       	mov	r15, r1
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5dac:	f8 01       	movw	r30, r16
    5dae:	ee 0d       	add	r30, r14
    5db0:	ff 1d       	adc	r31, r15
    5db2:	e2 5b       	subi	r30, 0xB2	; 178
    5db4:	f2 4f       	sbci	r31, 0xF2	; 242
    5db6:	e1 81       	ldd	r30, Z+1	; 0x01
    5db8:	e3 31       	cpi	r30, 0x13	; 19
    5dba:	68 f0       	brcs	.+26     	; 0x5dd6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf12>
											{
												/********************************* turn on/off the wired valve *********************************/
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5dbc:	f0 e0       	ldi	r31, 0x00	; 0
    5dbe:	e7 5c       	subi	r30, 0xC7	; 199
    5dc0:	fb 4e       	sbci	r31, 0xEB	; 235
    5dc2:	61 e0       	ldi	r22, 0x01	; 1
    5dc4:	80 81       	ld	r24, Z
    5dc6:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
												_kDELAY_MS(200);
    5dca:	68 ec       	ldi	r22, 0xC8	; 200
    5dcc:	70 e0       	ldi	r23, 0x00	; 0
    5dce:	80 e0       	ldi	r24, 0x00	; 0
    5dd0:	90 e0       	ldi	r25, 0x00	; 0
    5dd2:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    5dd6:	bf ef       	ldi	r27, 0xFF	; 255
    5dd8:	eb 1a       	sub	r14, r27
    5dda:	fb 0a       	sbc	r15, r27
										_gfault_Occure = _kFAULT_RESET_TIMER;
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5ddc:	e5 e0       	ldi	r30, 0x05	; 5
    5dde:	ee 16       	cp	r14, r30
    5de0:	f1 04       	cpc	r15, r1
    5de2:	21 f7       	brne	.-56     	; 0x5dac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xee8>
    5de4:	53 c3       	rjmp	.+1702   	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
											}
										}
										return 0;          /* no data available */
									}
								}
								_kDELAY_MS(1000);
    5de6:	68 ee       	ldi	r22, 0xE8	; 232
    5de8:	73 e0       	ldi	r23, 0x03	; 3
    5dea:	80 e0       	ldi	r24, 0x00	; 0
    5dec:	90 e0       	ldi	r25, 0x00	; 0
    5dee:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
								_kSERIAL_MON_CLEAR();
							}
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    5df2:	f3 e0       	ldi	r31, 0x03	; 3
    5df4:	3f 12       	cpse	r3, r31
    5df6:	d1 cd       	rjmp	.-1118   	; 0x599a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xad6>
    5df8:	2e c0       	rjmp	.+92     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
						
						}
					
						/******************************************************** handle wired valve *******************************************************************/
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
    5dfa:	8d ee       	ldi	r24, 0xED	; 237
    5dfc:	8d 0d       	add	r24, r13
    5dfe:	81 35       	cpi	r24, 0x51	; 81
    5e00:	78 f4       	brcc	.+30     	; 0x5e20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf5c>
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5e02:	ed 2d       	mov	r30, r13
    5e04:	f0 e0       	ldi	r31, 0x00	; 0
    5e06:	e7 5c       	subi	r30, 0xC7	; 199
    5e08:	fb 4e       	sbci	r31, 0xEB	; 235
    5e0a:	6e a9       	ldd	r22, Y+54	; 0x36
    5e0c:	80 81       	ld	r24, Z
    5e0e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
							_kDELAY_MS(200);
    5e12:	68 ec       	ldi	r22, 0xC8	; 200
    5e14:	70 e0       	ldi	r23, 0x00	; 0
    5e16:	80 e0       	ldi	r24, 0x00	; 0
    5e18:	90 e0       	ldi	r25, 0x00	; 0
    5e1a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    5e1e:	1b c0       	rjmp	.+54     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
							
							}
						}
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
						{
							if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    5e20:	25 e6       	ldi	r18, 0x65	; 101
    5e22:	d2 12       	cpse	r13, r18
    5e24:	18 c0       	rjmp	.+48     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
    5e26:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
							{
								if(on_off == _kON)
    5e2a:	3b a9       	ldd	r19, Y+51	; 0x33
    5e2c:	31 30       	cpi	r19, 0x01	; 1
    5e2e:	29 f4       	brne	.+10     	; 0x5e3a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf76>
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5e30:	88 23       	and	r24, r24
    5e32:	89 f0       	breq	.+34     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    5e34:	30 93 7b 14 	sts	0x147B, r19	; 0x80147b <_sRuble_Parameters+0xcd>
    5e38:	05 c0       	rjmp	.+10     	; 0x5e44 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf80>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
									}
								}
								else
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5e3a:	88 23       	and	r24, r24
    5e3c:	61 f0       	breq	.+24     	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5e3e:	82 e0       	ldi	r24, 0x02	; 2
    5e40:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    5e44:	6b e7       	ldi	r22, 0x7B	; 123
    5e46:	74 e1       	ldi	r23, 0x14	; 20
    5e48:	88 ea       	ldi	r24, 0xA8	; 168
    5e4a:	9c e0       	ldi	r25, 0x0C	; 12
    5e4c:	0e 94 10 24 	call	0x4820	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    5e50:	02 c0       	rjmp	.+4      	; 0x5e56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf92>
    5e52:	81 e0       	ldi	r24, 0x01	; 1
    5e54:	01 c0       	rjmp	.+2      	; 0x5e58 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf94>
    5e56:	80 e0       	ldi	r24, 0x00	; 0
    5e58:	2a 94       	dec	r2
    5e5a:	0f 5f       	subi	r16, 0xFF	; 255
    5e5c:	1f 4f       	sbci	r17, 0xFF	; 255
					_kSERIAL_MON_CLEAR();
				}
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    5e5e:	21 10       	cpse	r2, r1
    5e60:	a8 cc       	rjmp	.-1712   	; 0x57b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8ee>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e62:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5e66:	81 30       	cpi	r24, 0x01	; 1
    5e68:	09 f0       	breq	.+2      	; 0x5e6c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfa8>
    5e6a:	62 c3       	rjmp	.+1732   	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    5e6c:	65 e7       	ldi	r22, 0x75	; 117
    5e6e:	74 e0       	ldi	r23, 0x04	; 4
    5e70:	55 c3       	rjmp	.+1706   	; 0x651c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1658>
				}
				return 1;
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e72:	81 30       	cpi	r24, 0x01	; 1
    5e74:	51 f4       	brne	.+20     	; 0x5e8a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfc6>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5e76:	67 e6       	ldi	r22, 0x67	; 103
    5e78:	74 e0       	ldi	r23, 0x04	; 4
    5e7a:	86 ec       	ldi	r24, 0xC6	; 198
    5e7c:	94 e1       	ldi	r25, 0x14	; 20
    5e7e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5e82:	86 ec       	ldi	r24, 0xC6	; 198
    5e84:	94 e1       	ldi	r25, 0x14	; 20
    5e86:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    5e8a:	4b e1       	ldi	r20, 0x1B	; 27
    5e8c:	74 9e       	mul	r7, r20
    5e8e:	50 01       	movw	r10, r0
    5e90:	11 24       	eor	r1, r1
    5e92:	e1 2c       	mov	r14, r1
    5e94:	f1 2c       	mov	r15, r1
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
				{
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
    5e96:	07 2d       	mov	r16, r7
    5e98:	10 e0       	ldi	r17, 0x00	; 0
    5e9a:	68 01       	movw	r12, r16
    5e9c:	55 e6       	ldi	r21, 0x65	; 101
    5e9e:	c5 1a       	sub	r12, r21
    5ea0:	d1 08       	sbc	r13, r1
    5ea2:	f7 01       	movw	r30, r14
    5ea4:	ea 0d       	add	r30, r10
    5ea6:	fb 1d       	adc	r31, r11
    5ea8:	ea 5b       	subi	r30, 0xBA	; 186
    5eaa:	fc 4f       	sbci	r31, 0xFC	; 252
    5eac:	4a e0       	ldi	r20, 0x0A	; 10
    5eae:	50 e0       	ldi	r21, 0x00	; 0
    5eb0:	60 81       	ld	r22, Z
    5eb2:	86 ec       	ldi	r24, 0xC6	; 198
    5eb4:	94 e1       	ldi	r25, 0x14	; 20
    5eb6:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
					_kSERAIL_MON_WRITE_NO_LN(" ");
    5eba:	65 e6       	ldi	r22, 0x65	; 101
    5ebc:	74 e0       	ldi	r23, 0x04	; 4
    5ebe:	86 ec       	ldi	r24, 0xC6	; 198
    5ec0:	94 e1       	ldi	r25, 0x14	; 20
    5ec2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5ec6:	86 ec       	ldi	r24, 0xC6	; 198
    5ec8:	94 e1       	ldi	r25, 0x14	; 20
    5eca:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    5ece:	8f ef       	ldi	r24, 0xFF	; 255
    5ed0:	e8 1a       	sub	r14, r24
    5ed2:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5ed4:	95 e0       	ldi	r25, 0x05	; 5
    5ed6:	e9 16       	cp	r14, r25
    5ed8:	f1 04       	cpc	r15, r1
    5eda:	19 f7       	brne	.-58     	; 0x5ea2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfde>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
					_kSERAIL_MON_WRITE_NO_LN(" ");
					_kSERIAL_MON_CLEAR();
				}
				
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5edc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5ee0:	81 30       	cpi	r24, 0x01	; 1
    5ee2:	99 f4       	brne	.+38     	; 0x5f0a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1046>
				{
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
    5ee4:	6f e4       	ldi	r22, 0x4F	; 79
    5ee6:	74 e0       	ldi	r23, 0x04	; 4
    5ee8:	86 ec       	ldi	r24, 0xC6	; 198
    5eea:	94 e1       	ldi	r25, 0x14	; 20
    5eec:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5ef0:	b8 01       	movw	r22, r16
    5ef2:	61 50       	subi	r22, 0x01	; 1
    5ef4:	71 09       	sbc	r23, r1
    5ef6:	4a e0       	ldi	r20, 0x0A	; 10
    5ef8:	50 e0       	ldi	r21, 0x00	; 0
    5efa:	86 ec       	ldi	r24, 0xC6	; 198
    5efc:	94 e1       	ldi	r25, 0x14	; 20
    5efe:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5f02:	86 ec       	ldi	r24, 0xC6	; 198
    5f04:	94 e1       	ldi	r25, 0x14	; 20
    5f06:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    5f0a:	8b e1       	ldi	r24, 0x1B	; 27
    5f0c:	8c 9d       	mul	r24, r12
    5f0e:	80 01       	movw	r16, r0
    5f10:	8d 9d       	mul	r24, r13
    5f12:	10 0d       	add	r17, r0
    5f14:	11 24       	eor	r1, r1
    5f16:	08 51       	subi	r16, 0x18	; 24
    5f18:	12 4f       	sbci	r17, 0xF2	; 242
    5f1a:	a6 e0       	ldi	r26, 0x06	; 6
    5f1c:	7a 9e       	mul	r7, r26
    5f1e:	50 01       	movw	r10, r0
    5f20:	11 24       	eor	r1, r1
    5f22:	e1 2c       	mov	r14, r1
    5f24:	f1 2c       	mov	r15, r1
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5f26:	52 e0       	ldi	r21, 0x02	; 2
    5f28:	d5 2e       	mov	r13, r21
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    5f2a:	cc 24       	eor	r12, r12
    5f2c:	c3 94       	inc	r12
    5f2e:	8b a9       	ldd	r24, Y+51	; 0x33
    5f30:	8c 25       	eor	r24, r12
    5f32:	81 70       	andi	r24, 0x01	; 1
    5f34:	88 af       	std	Y+56, r24	; 0x38
							if(Subscribed_data_check())
							{
								if(Seperate_Out_Sub_Data())
								{
									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5f36:	60 ed       	ldi	r22, 0xD0	; 208
    5f38:	26 2e       	mov	r2, r22
    5f3a:	6f e0       	ldi	r22, 0x0F	; 15
    5f3c:	36 2e       	mov	r3, r22
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > 0)
    5f3e:	f8 01       	movw	r30, r16
    5f40:	ee 0d       	add	r30, r14
    5f42:	ff 1d       	adc	r31, r15
    5f44:	85 80       	ldd	r8, Z+5	; 0x05
    5f46:	8f ef       	ldi	r24, 0xFF	; 255
    5f48:	88 0d       	add	r24, r8
    5f4a:	82 31       	cpi	r24, 0x12	; 18
    5f4c:	08 f0       	brcs	.+2      	; 0x5f50 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x108c>
    5f4e:	aa c2       	rjmp	.+1364   	; 0x64a4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15e0>
						unsigned char valve_number =0;
						unsigned char euro_valve_num=0,command_valve=0;
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5f50:	b3 e0       	ldi	r27, 0x03	; 3
    5f52:	b8 15       	cp	r27, r8
    5f54:	90 f4       	brcc	.+36     	; 0x5f7a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10b6>
							euro_valve_num = 1;
							command_valve = valve_number;
						}
						else
						{
							if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5f56:	8b ea       	ldi	r24, 0xAB	; 171
    5f58:	88 9e       	mul	r8, r24
    5f5a:	91 2c       	mov	r9, r1
    5f5c:	11 24       	eor	r1, r1
    5f5e:	89 2d       	mov	r24, r9
    5f60:	86 95       	lsr	r24
    5f62:	98 2f       	mov	r25, r24
    5f64:	99 0f       	add	r25, r25
    5f66:	89 0f       	add	r24, r25
    5f68:	88 1a       	sub	r8, r24
    5f6a:	96 94       	lsr	r9
    5f6c:	88 20       	and	r8, r8
    5f6e:	11 f0       	breq	.+4      	; 0x5f74 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10b0>
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5f70:	93 94       	inc	r9
    5f72:	05 c0       	rjmp	.+10     	; 0x5f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10ba>
								command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							else
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    5f74:	43 e0       	ldi	r20, 0x03	; 3
    5f76:	84 2e       	mov	r8, r20
    5f78:	02 c0       	rjmp	.+4      	; 0x5f7e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10ba>
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
						{
							euro_valve_num = 1;
    5f7a:	99 24       	eor	r9, r9
    5f7c:	93 94       	inc	r9
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							
						}
						/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    5f82:	81 30       	cpi	r24, 0x01	; 1
    5f84:	89 f4       	brne	.+34     	; 0x5fa8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10e4>
						{
							_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5f86:	6b e3       	ldi	r22, 0x3B	; 59
    5f88:	74 e0       	ldi	r23, 0x04	; 4
    5f8a:	86 ec       	ldi	r24, 0xC6	; 198
    5f8c:	94 e1       	ldi	r25, 0x14	; 20
    5f8e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    5f92:	4a e0       	ldi	r20, 0x0A	; 10
    5f94:	50 e0       	ldi	r21, 0x00	; 0
    5f96:	69 2d       	mov	r22, r9
    5f98:	86 ec       	ldi	r24, 0xC6	; 198
    5f9a:	94 e1       	ldi	r25, 0x14	; 20
    5f9c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
							_kSERIAL_MON_CLEAR();
    5fa0:	86 ec       	ldi	r24, 0xC6	; 198
    5fa2:	94 e1       	ldi	r25, 0x14	; 20
    5fa4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						
						
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5fa8:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
    5fac:	81 11       	cpse	r24, r1
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5fae:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5fb2:	84 e1       	ldi	r24, 0x14	; 20
    5fb4:	e5 ef       	ldi	r30, 0xF5	; 245
    5fb6:	f3 e1       	ldi	r31, 0x13	; 19
    5fb8:	11 92       	st	Z+, r1
    5fba:	8a 95       	dec	r24
    5fbc:	e9 f7       	brne	.-6      	; 0x5fb8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10f4>
						count = _kRESET;
						/********************************** wireless valve command (on/off) **********************************/
						/* valve id, on/off command, pump run timer */
						
						/************************************* copy the euro valve ID *********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5fbe:	29 2d       	mov	r18, r9
    5fc0:	30 e0       	ldi	r19, 0x00	; 0
    5fc2:	21 50       	subi	r18, 0x01	; 1
    5fc4:	31 09       	sbc	r19, r1
    5fc6:	f7 e0       	ldi	r31, 0x07	; 7
    5fc8:	f2 9f       	mul	r31, r18
    5fca:	c0 01       	movw	r24, r0
    5fcc:	f3 9f       	mul	r31, r19
    5fce:	90 0d       	add	r25, r0
    5fd0:	11 24       	eor	r1, r1
    5fd2:	82 55       	subi	r24, 0x52	; 82
    5fd4:	9c 4e       	sbci	r25, 0xEC	; 236
    5fd6:	fc 01       	movw	r30, r24
    5fd8:	ec 58       	subi	r30, 0x8C	; 140
    5fda:	ff 4f       	sbci	r31, 0xFF	; 255
    5fdc:	20 81       	ld	r18, Z
    5fde:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5fe2:	31 96       	adiw	r30, 0x01	; 1
    5fe4:	20 81       	ld	r18, Z
    5fe6:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5fea:	31 96       	adiw	r30, 0x01	; 1
    5fec:	20 81       	ld	r18, Z
    5fee:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5ff2:	31 96       	adiw	r30, 0x01	; 1
    5ff4:	20 81       	ld	r18, Z
    5ff6:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5ffa:	31 96       	adiw	r30, 0x01	; 1
    5ffc:	20 81       	ld	r18, Z
    5ffe:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    6002:	31 96       	adiw	r30, 0x01	; 1
    6004:	20 81       	ld	r18, Z
    6006:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
						
						/*********************************** packet_id ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    600a:	d0 92 fb 13 	sts	0x13FB, r13	; 0x8013fb <_sRuble_Parameters+0x4d>
						
						/*********************************** copy on/off command ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    600e:	2b a9       	ldd	r18, Y+51	; 0x33
    6010:	20 93 fc 13 	sts	0x13FC, r18	; 0x8013fc <_sRuble_Parameters+0x4e>
						
						/********************************** copy operation mode ************************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    6014:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    6018:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
						
						/******************************** copy pump timer (used if selected mode is timer) *********************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    601c:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    6020:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    6024:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    6028:	40 e0       	ldi	r20, 0x00	; 0
    602a:	50 e0       	ldi	r21, 0x00	; 0
    602c:	74 2e       	mov	r7, r20
    602e:	81 2c       	mov	r8, r1
    6030:	91 2c       	mov	r9, r1
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    6032:	3d e0       	ldi	r19, 0x0D	; 13
    6034:	34 9f       	mul	r19, r20
    6036:	b0 01       	movw	r22, r0
    6038:	35 9f       	mul	r19, r21
    603a:	70 0d       	add	r23, r0
    603c:	11 24       	eor	r1, r1
    603e:	6b 5e       	subi	r22, 0xEB	; 235
    6040:	73 4f       	sbci	r23, 0xF3	; 243
    6042:	29 2d       	mov	r18, r9
    6044:	30 e0       	ldi	r19, 0x00	; 0
    6046:	fb 01       	movw	r30, r22
    6048:	e2 0f       	add	r30, r18
    604a:	f3 1f       	adc	r31, r19
    604c:	28 0f       	add	r18, r24
    604e:	39 1f       	adc	r19, r25
    6050:	d9 01       	movw	r26, r18
    6052:	ac 58       	subi	r26, 0x8C	; 140
    6054:	bf 4f       	sbci	r27, 0xFF	; 255
    6056:	21 81       	ldd	r18, Z+1	; 0x01
    6058:	3c 91       	ld	r19, X
    605a:	23 17       	cp	r18, r19
    605c:	19 f0       	breq	.+6      	; 0x6064 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11a0>
								{
									compare_id = _kVALVE_ID_LEN;
									id_len = _kRESET;
    605e:	81 2c       	mov	r8, r1
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
								{
									compare_id = _kVALVE_ID_LEN;
    6060:	36 e0       	ldi	r19, 0x06	; 6
    6062:	93 2e       	mov	r9, r19
									id_len = _kRESET;
								}
								id_len++;
    6064:	83 94       	inc	r8
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    6066:	93 94       	inc	r9
    6068:	a5 e0       	ldi	r26, 0x05	; 5
    606a:	a9 15       	cp	r26, r9
    606c:	50 f7       	brcc	.-44     	; 0x6042 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x117e>
									id_len = _kRESET;
								}
								id_len++;
							}
							
							if(id_len == _kVALVE_ID_LEN)
    606e:	b6 e0       	ldi	r27, 0x06	; 6
    6070:	8b 16       	cp	r8, r27
    6072:	31 f0       	breq	.+12     	; 0x6080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11bc>
    6074:	4f 5f       	subi	r20, 0xFF	; 255
    6076:	5f 4f       	sbci	r21, 0xFF	; 255
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
    6078:	46 30       	cpi	r20, 0x06	; 6
    607a:	51 05       	cpc	r21, r1
    607c:	b9 f6       	brne	.-82     	; 0x602c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1168>
    607e:	01 c0       	rjmp	.+2      	; 0x6082 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11be>
    6080:	67 2c       	mov	r6, r7
							{
								current_valve_number = j;    /* data send will update of this valve because valve get match */
								break;
							}
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6082:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6086:	81 30       	cpi	r24, 0x01	; 1
    6088:	89 f4       	brne	.+34     	; 0x60ac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11e8>
						{
							_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    608a:	65 e2       	ldi	r22, 0x25	; 37
    608c:	74 e0       	ldi	r23, 0x04	; 4
    608e:	86 ec       	ldi	r24, 0xC6	; 198
    6090:	94 e1       	ldi	r25, 0x14	; 20
    6092:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    6096:	4a e0       	ldi	r20, 0x0A	; 10
    6098:	50 e0       	ldi	r21, 0x00	; 0
    609a:	66 2d       	mov	r22, r6
    609c:	86 ec       	ldi	r24, 0xC6	; 198
    609e:	94 e1       	ldi	r25, 0x14	; 20
    60a0:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
							_kSERIAL_MON_CLEAR();
    60a4:	86 ec       	ldi	r24, 0xC6	; 198
    60a6:	94 e1       	ldi	r25, 0x14	; 20
    60a8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    60ac:	ed e0       	ldi	r30, 0x0D	; 13
    60ae:	6e 9e       	mul	r6, r30
    60b0:	20 01       	movw	r4, r0
    60b2:	11 24       	eor	r1, r1
    60b4:	71 2c       	mov	r7, r1
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    60b6:	fd e0       	ldi	r31, 0x0D	; 13
    60b8:	f6 9d       	mul	r31, r6
    60ba:	c0 01       	movw	r24, r0
    60bc:	11 24       	eor	r1, r1
    60be:	9c 01       	movw	r18, r24
    60c0:	2b 5e       	subi	r18, 0xEB	; 235
    60c2:	33 4f       	sbci	r19, 0xF3	; 243
    60c4:	a9 01       	movw	r20, r18
    60c6:	45 5f       	subi	r20, 0xF5	; 245
    60c8:	5f 4f       	sbci	r21, 0xFF	; 255
    60ca:	5d ab       	std	Y+53, r21	; 0x35
    60cc:	4c ab       	std	Y+52, r20	; 0x34
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    60ce:	d9 01       	movw	r26, r18
    60d0:	18 96       	adiw	r26, 0x08	; 8
    60d2:	bf ab       	std	Y+55, r27	; 0x37
    60d4:	ae ab       	std	Y+54, r26	; 0x36
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    60d6:	fc 01       	movw	r30, r24
    60d8:	ea 5e       	subi	r30, 0xEA	; 234
    60da:	f3 4f       	sbci	r31, 0xF3	; 243
    60dc:	4f 01       	movw	r8, r30
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							if(Subscribed_data_check())
    60de:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    60e2:	88 23       	and	r24, r24
    60e4:	99 f0       	breq	.+38     	; 0x610c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1248>
							{
								if(Seperate_Out_Sub_Data())
    60e6:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    60ea:	88 23       	and	r24, r24
    60ec:	79 f0       	breq	.+30     	; 0x610c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1248>
								{
									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    60ee:	f1 01       	movw	r30, r2
    60f0:	01 90       	ld	r0, Z+
    60f2:	00 20       	and	r0, r0
    60f4:	e9 f7       	brne	.-6      	; 0x60f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x122c>
    60f6:	31 97       	sbiw	r30, 0x01	; 1
    60f8:	af 01       	movw	r20, r30
    60fa:	40 5d       	subi	r20, 0xD0	; 208
    60fc:	5f 40       	sbci	r21, 0x0F	; 15
    60fe:	21 e0       	ldi	r18, 0x01	; 1
    6100:	60 ed       	ldi	r22, 0xD0	; 208
    6102:	7f e0       	ldi	r23, 0x0F	; 15
    6104:	82 e6       	ldi	r24, 0x62	; 98
    6106:	9f e0       	ldi	r25, 0x0F	; 15
    6108:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							data_send_counter++;
    610c:	73 94       	inc	r7
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    610e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6112:	81 30       	cpi	r24, 0x01	; 1
    6114:	51 f4       	brne	.+20     	; 0x612a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1266>
							{
								_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    6116:	61 e0       	ldi	r22, 0x01	; 1
    6118:	74 e0       	ldi	r23, 0x04	; 4
    611a:	86 ec       	ldi	r24, 0xC6	; 198
    611c:	94 e1       	ldi	r25, 0x14	; 20
    611e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6122:	86 ec       	ldi	r24, 0xC6	; 198
    6124:	94 e1       	ldi	r25, 0x14	; 20
    6126:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    612a:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    612e:	8c e0       	ldi	r24, 0x0C	; 12
    6130:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    6134:	88 eb       	ldi	r24, 0xB8	; 184
    6136:	9b e0       	ldi	r25, 0x0B	; 11
    6138:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
    613c:	88 23       	and	r24, r24
    613e:	09 f4       	brne	.+2      	; 0x6142 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x127e>
    6140:	6f c1       	rjmp	.+734    	; 0x6420 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x155c>
							{
								/**************************** update the received data in buff lora rx_tx **********************/
								if(_kLORA_RECV_DATA())            /* check the received data */
    6142:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
    6146:	88 23       	and	r24, r24
    6148:	09 f4       	brne	.+2      	; 0x614c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1288>
    614a:	17 c1       	rjmp	.+558    	; 0x637a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14b6>
								{
									if(Subscribed_data_check())
    614c:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    6150:	88 23       	and	r24, r24
    6152:	99 f0       	breq	.+38     	; 0x617a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12b6>
									{
										if(Seperate_Out_Sub_Data())
    6154:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    6158:	88 23       	and	r24, r24
    615a:	79 f0       	breq	.+30     	; 0x617a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12b6>
										{
											//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
											Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    615c:	f1 01       	movw	r30, r2
    615e:	01 90       	ld	r0, Z+
    6160:	00 20       	and	r0, r0
    6162:	e9 f7       	brne	.-6      	; 0x615e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x129a>
    6164:	31 97       	sbiw	r30, 0x01	; 1
    6166:	af 01       	movw	r20, r30
    6168:	40 5d       	subi	r20, 0xD0	; 208
    616a:	5f 40       	sbci	r21, 0x0F	; 15
    616c:	21 e0       	ldi	r18, 0x01	; 1
    616e:	60 ed       	ldi	r22, 0xD0	; 208
    6170:	7f e0       	ldi	r23, 0x0F	; 15
    6172:	82 e6       	ldi	r24, 0x62	; 98
    6174:	9f e0       	ldi	r25, 0x0F	; 15
    6176:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
										}
									}
									//RF95_setModeRx_Continuous();
									/* check the id get matched to the valve or not */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    617a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    617e:	81 30       	cpi	r24, 0x01	; 1
    6180:	59 f5       	brne	.+86     	; 0x61d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1314>
									{
										_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    6182:	6b ee       	ldi	r22, 0xEB	; 235
    6184:	73 e0       	ldi	r23, 0x03	; 3
    6186:	86 ec       	ldi	r24, 0xC6	; 198
    6188:	94 e1       	ldi	r25, 0x14	; 20
    618a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    618e:	4a e0       	ldi	r20, 0x0A	; 10
    6190:	50 e0       	ldi	r21, 0x00	; 0
    6192:	69 e0       	ldi	r22, 0x09	; 9
    6194:	74 e1       	ldi	r23, 0x14	; 20
    6196:	86 ec       	ldi	r24, 0xC6	; 198
    6198:	94 e1       	ldi	r25, 0x14	; 20
    619a:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
										Serial.println();
    619e:	86 ec       	ldi	r24, 0xC6	; 198
    61a0:	94 e1       	ldi	r25, 0x14	; 20
    61a2:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    61a6:	86 ec       	ldi	r24, 0xC6	; 198
    61a8:	94 e1       	ldi	r25, 0x14	; 20
    61aa:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    61ae:	6d ec       	ldi	r22, 0xCD	; 205
    61b0:	73 e0       	ldi	r23, 0x03	; 3
    61b2:	86 ec       	ldi	r24, 0xC6	; 198
    61b4:	94 e1       	ldi	r25, 0x14	; 20
    61b6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    61ba:	47 e0       	ldi	r20, 0x07	; 7
    61bc:	50 e0       	ldi	r21, 0x00	; 0
    61be:	b4 01       	movw	r22, r8
    61c0:	86 ec       	ldi	r24, 0xC6	; 198
    61c2:	94 e1       	ldi	r25, 0x14	; 20
    61c4:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
										Serial.println();
    61c8:	86 ec       	ldi	r24, 0xC6	; 198
    61ca:	94 e1       	ldi	r25, 0x14	; 20
    61cc:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    61d0:	86 ec       	ldi	r24, 0xC6	; 198
    61d2:	94 e1       	ldi	r25, 0x14	; 20
    61d4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    61d8:	a9 e0       	ldi	r26, 0x09	; 9
    61da:	b4 e1       	ldi	r27, 0x14	; 20
    61dc:	80 e0       	ldi	r24, 0x00	; 0
    61de:	90 e0       	ldi	r25, 0x00	; 0
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
									{
										if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    61e0:	2d 91       	ld	r18, X+
    61e2:	f2 01       	movw	r30, r4
    61e4:	e8 0f       	add	r30, r24
    61e6:	f9 1f       	adc	r31, r25
    61e8:	eb 5e       	subi	r30, 0xEB	; 235
    61ea:	f3 4f       	sbci	r31, 0xF3	; 243
    61ec:	31 81       	ldd	r19, Z+1	; 0x01
    61ee:	32 17       	cp	r19, r18
    61f0:	09 f4       	brne	.+2      	; 0x61f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1330>
    61f2:	6a c0       	rjmp	.+212    	; 0x62c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1404>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    61f4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    61f8:	81 30       	cpi	r24, 0x01	; 1
    61fa:	51 f4       	brne	.+20     	; 0x6210 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x134c>
											{
												_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    61fc:	62 ea       	ldi	r22, 0xA2	; 162
    61fe:	73 e0       	ldi	r23, 0x03	; 3
    6200:	86 ec       	ldi	r24, 0xC6	; 198
    6202:	94 e1       	ldi	r25, 0x14	; 20
    6204:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    6208:	86 ec       	ldi	r24, 0xC6	; 198
    620a:	94 e1       	ldi	r25, 0x14	; 20
    620c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    6210:	f2 e0       	ldi	r31, 0x02	; 2
    6212:	7f 16       	cp	r7, r31
    6214:	b9 f0       	breq	.+46     	; 0x6244 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1380>
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    6216:	ac a9       	ldd	r26, Y+52	; 0x34
    6218:	bd a9       	ldd	r27, Y+53	; 0x35
    621a:	cc 92       	st	X, r12
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    621c:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    6220:	90 e0       	ldi	r25, 0x00	; 0
    6222:	98 2f       	mov	r25, r24
    6224:	88 27       	eor	r24, r24
    6226:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    622a:	82 2b       	or	r24, r18
    622c:	ee a9       	ldd	r30, Y+54	; 0x36
    622e:	ff a9       	ldd	r31, Y+55	; 0x37
    6230:	91 83       	std	Z+1, r25	; 0x01
    6232:	80 83       	st	Z, r24
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    6234:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    6238:	fb a9       	ldd	r31, Y+51	; 0x33
    623a:	f8 13       	cpse	r31, r24
    623c:	4b c0       	rjmp	.+150    	; 0x62d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1410>
											return 0;
										}
									}
									else
									{
										data_send_counter = 3;
    623e:	83 e0       	ldi	r24, 0x03	; 3
    6240:	78 2e       	mov	r7, r24
    6242:	26 c1       	rjmp	.+588    	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
												_kSERIAL_MON_CLEAR();
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6244:	86 e0       	ldi	r24, 0x06	; 6
    6246:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    624a:	84 e6       	ldi	r24, 0x64	; 100
    624c:	90 e0       	ldi	r25, 0x00	; 0
    624e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    6252:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6256:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    625a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    625e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6262:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6266:	a0 62       	ori	r26, 0x20	; 32
    6268:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    626c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    6270:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6274:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    6278:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    627c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    6280:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6284:	82 60       	ori	r24, 0x02	; 2
    6286:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    628a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    628e:	e1 2c       	mov	r14, r1
    6290:	f1 2c       	mov	r15, r1
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6292:	f8 01       	movw	r30, r16
    6294:	ee 0d       	add	r30, r14
    6296:	ff 1d       	adc	r31, r15
    6298:	e5 81       	ldd	r30, Z+5	; 0x05
    629a:	e3 31       	cpi	r30, 0x13	; 19
    629c:	68 f0       	brcs	.+26     	; 0x62b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13f4>
													{
														/********************************* turn on/off the wired valve *********************************/
														
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    629e:	f0 e0       	ldi	r31, 0x00	; 0
    62a0:	e7 5c       	subi	r30, 0xC7	; 199
    62a2:	fb 4e       	sbci	r31, 0xEB	; 235
    62a4:	61 e0       	ldi	r22, 0x01	; 1
    62a6:	80 81       	ld	r24, Z
    62a8:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
														_kDELAY_MS(200);
    62ac:	68 ec       	ldi	r22, 0xC8	; 200
    62ae:	70 e0       	ldi	r23, 0x00	; 0
    62b0:	80 e0       	ldi	r24, 0x00	; 0
    62b2:	90 e0       	ldi	r25, 0x00	; 0
    62b4:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    62b8:	2f ef       	ldi	r18, 0xFF	; 255
    62ba:	e2 1a       	sub	r14, r18
    62bc:	f2 0a       	sbc	r15, r18
												_gfault_Occure = _kFAULT_RESET_TIMER;
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    62be:	35 e0       	ldi	r19, 0x05	; 5
    62c0:	e3 16       	cp	r14, r19
    62c2:	f1 04       	cpc	r15, r1
    62c4:	31 f7       	brne	.-52     	; 0x6292 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13ce>
    62c6:	e2 c0       	rjmp	.+452    	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
    62c8:	01 96       	adiw	r24, 0x01	; 1
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
    62ca:	86 30       	cpi	r24, 0x06	; 6
    62cc:	91 05       	cpc	r25, r1
    62ce:	09 f0       	breq	.+2      	; 0x62d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x140e>
    62d0:	87 cf       	rjmp	.-242    	; 0x61e0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x131c>
    62d2:	a1 cf       	rjmp	.-190    	; 0x6216 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1352>
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    62d4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    62d8:	81 30       	cpi	r24, 0x01	; 1
    62da:	51 f4       	brne	.+20     	; 0x62f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x142c>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail");
    62dc:	6f e8       	ldi	r22, 0x8F	; 143
    62de:	73 e0       	ldi	r23, 0x03	; 3
    62e0:	86 ec       	ldi	r24, 0xC6	; 198
    62e2:	94 e1       	ldi	r25, 0x14	; 20
    62e4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    62e8:	86 ec       	ldi	r24, 0xC6	; 198
    62ea:	94 e1       	ldi	r25, 0x14	; 20
    62ec:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    62f0:	42 e0       	ldi	r20, 0x02	; 2
    62f2:	74 12       	cpse	r7, r20
    62f4:	cd c0       	rjmp	.+410    	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    62f6:	86 e0       	ldi	r24, 0x06	; 6
    62f8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    62fc:	84 e6       	ldi	r24, 0x64	; 100
    62fe:	90 e0       	ldi	r25, 0x00	; 0
    6300:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    6304:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6308:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    630c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    6310:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6314:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6318:	a0 62       	ori	r26, 0x20	; 32
    631a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    631e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    6322:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6326:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    632a:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    632e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    6332:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6336:	82 60       	ori	r24, 0x02	; 2
    6338:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    633c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    6340:	e1 2c       	mov	r14, r1
    6342:	f1 2c       	mov	r15, r1
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6344:	f8 01       	movw	r30, r16
    6346:	ee 0d       	add	r30, r14
    6348:	ff 1d       	adc	r31, r15
    634a:	e5 81       	ldd	r30, Z+5	; 0x05
    634c:	e3 31       	cpi	r30, 0x13	; 19
    634e:	68 f0       	brcs	.+26     	; 0x636a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14a6>
												{
													/********************************* turn on/off the wired valve *********************************/
													
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6350:	f0 e0       	ldi	r31, 0x00	; 0
    6352:	e7 5c       	subi	r30, 0xC7	; 199
    6354:	fb 4e       	sbci	r31, 0xEB	; 235
    6356:	61 e0       	ldi	r22, 0x01	; 1
    6358:	80 81       	ld	r24, Z
    635a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
													_kDELAY_MS(200);
    635e:	68 ec       	ldi	r22, 0xC8	; 200
    6360:	70 e0       	ldi	r23, 0x00	; 0
    6362:	80 e0       	ldi	r24, 0x00	; 0
    6364:	90 e0       	ldi	r25, 0x00	; 0
    6366:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    636a:	5f ef       	ldi	r21, 0xFF	; 255
    636c:	e5 1a       	sub	r14, r21
    636e:	f5 0a       	sbc	r15, r21
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6370:	85 e0       	ldi	r24, 0x05	; 5
    6372:	e8 16       	cp	r14, r24
    6374:	f1 04       	cpc	r15, r1
    6376:	31 f7       	brne	.-52     	; 0x6344 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1480>
    6378:	89 c0       	rjmp	.+274    	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
										data_send_counter = 3;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    637a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    637e:	81 30       	cpi	r24, 0x01	; 1
    6380:	51 f4       	brne	.+20     	; 0x6396 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14d2>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    6382:	64 e5       	ldi	r22, 0x54	; 84
    6384:	73 e0       	ldi	r23, 0x03	; 3
    6386:	86 ec       	ldi	r24, 0xC6	; 198
    6388:	94 e1       	ldi	r25, 0x14	; 20
    638a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    638e:	86 ec       	ldi	r24, 0xC6	; 198
    6390:	94 e1       	ldi	r25, 0x14	; 20
    6392:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									}
									if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    6396:	92 e0       	ldi	r25, 0x02	; 2
    6398:	79 12       	cpse	r7, r25
    639a:	7a c0       	rjmp	.+244    	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    639c:	86 e0       	ldi	r24, 0x06	; 6
    639e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    63a2:	84 e6       	ldi	r24, 0x64	; 100
    63a4:	90 e0       	ldi	r25, 0x00	; 0
    63a6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    63aa:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    63ae:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    63b2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    63b6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    63ba:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    63be:	a0 62       	ori	r26, 0x20	; 32
    63c0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    63c4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    63c8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    63cc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    63d0:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    63d4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    63d8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    63dc:	82 60       	ori	r24, 0x02	; 2
    63de:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    63e2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    63e6:	e1 2c       	mov	r14, r1
    63e8:	f1 2c       	mov	r15, r1
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    63ea:	f8 01       	movw	r30, r16
    63ec:	ee 0d       	add	r30, r14
    63ee:	ff 1d       	adc	r31, r15
    63f0:	e5 81       	ldd	r30, Z+5	; 0x05
    63f2:	e3 31       	cpi	r30, 0x13	; 19
    63f4:	68 f0       	brcs	.+26     	; 0x6410 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x154c>
											{
												/********************************* turn on/off the wired valve *********************************/
												
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    63f6:	f0 e0       	ldi	r31, 0x00	; 0
    63f8:	e7 5c       	subi	r30, 0xC7	; 199
    63fa:	fb 4e       	sbci	r31, 0xEB	; 235
    63fc:	61 e0       	ldi	r22, 0x01	; 1
    63fe:	80 81       	ld	r24, Z
    6400:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
												_kDELAY_MS(200);
    6404:	68 ec       	ldi	r22, 0xC8	; 200
    6406:	70 e0       	ldi	r23, 0x00	; 0
    6408:	80 e0       	ldi	r24, 0x00	; 0
    640a:	90 e0       	ldi	r25, 0x00	; 0
    640c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    6410:	af ef       	ldi	r26, 0xFF	; 255
    6412:	ea 1a       	sub	r14, r26
    6414:	fa 0a       	sbc	r15, r26
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6416:	b5 e0       	ldi	r27, 0x05	; 5
    6418:	eb 16       	cp	r14, r27
    641a:	f1 04       	cpc	r15, r1
    641c:	31 f7       	brne	.-52     	; 0x63ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
    641e:	36 c0       	rjmp	.+108    	; 0x648c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15c8>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6420:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6424:	81 30       	cpi	r24, 0x01	; 1
    6426:	51 f4       	brne	.+20     	; 0x643c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1578>
								{
									_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    6428:	69 e1       	ldi	r22, 0x19	; 25
    642a:	73 e0       	ldi	r23, 0x03	; 3
    642c:	86 ec       	ldi	r24, 0xC6	; 198
    642e:	94 e1       	ldi	r25, 0x14	; 20
    6430:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6434:	86 ec       	ldi	r24, 0xC6	; 198
    6436:	94 e1       	ldi	r25, 0x14	; 20
    6438:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								//RF95_setModeRx_Continuous();
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    643c:	e2 e0       	ldi	r30, 0x02	; 2
    643e:	7e 12       	cpse	r7, r30
    6440:	27 c0       	rjmp	.+78     	; 0x6490 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x15cc>
								{
									_gfault_Occure = _kFAULT_RESET_TIMER;
    6442:	84 e6       	ldi	r24, 0x64	; 100
    6444:	90 e0       	ldi	r25, 0x00	; 0
    6446:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    644a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    644e:	86 e0       	ldi	r24, 0x06	; 6
    6450:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6454:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    6458:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    645c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    6460:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    6464:	a0 62       	ori	r26, 0x20	; 32
    6466:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    646a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    646e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    6472:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    6476:	60 92 6e 14 	sts	0x146E, r6	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    647a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    647e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    6482:	82 60       	ori	r24, 0x02	; 2
    6484:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    6488:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									return 0;          /* no data available */
    648c:	80 e0       	ldi	r24, 0x00	; 0
    648e:	51 c0       	rjmp	.+162    	; 0x6532 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166e>
								}
							}
							_kDELAY_MS(1000);
    6490:	68 ee       	ldi	r22, 0xE8	; 232
    6492:	73 e0       	ldi	r23, 0x03	; 3
    6494:	80 e0       	ldi	r24, 0x00	; 0
    6496:	90 e0       	ldi	r25, 0x00	; 0
    6498:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
							_kSERIAL_MON_CLEAR();
						}
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    649c:	f3 e0       	ldi	r31, 0x03	; 3
    649e:	7f 12       	cpse	r7, r31
    64a0:	1e ce       	rjmp	.-964    	; 0x60de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x121a>
    64a2:	2e c0       	rjmp	.+92     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
						}
					}
					
					/******************************************************** handle wired valve *******************************************************************/
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    64a4:	22 e1       	ldi	r18, 0x12	; 18
    64a6:	28 15       	cp	r18, r8
    64a8:	78 f4       	brcc	.+30     	; 0x64c8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1604>
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    64aa:	e8 2d       	mov	r30, r8
    64ac:	f0 e0       	ldi	r31, 0x00	; 0
    64ae:	e7 5c       	subi	r30, 0xC7	; 199
    64b0:	fb 4e       	sbci	r31, 0xEB	; 235
    64b2:	68 ad       	ldd	r22, Y+56	; 0x38
    64b4:	80 81       	ld	r24, Z
    64b6:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
						_kDELAY_MS(200);
    64ba:	68 ec       	ldi	r22, 0xC8	; 200
    64bc:	70 e0       	ldi	r23, 0x00	; 0
    64be:	80 e0       	ldi	r24, 0x00	; 0
    64c0:	90 e0       	ldi	r25, 0x00	; 0
    64c2:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    64c6:	1c c0       	rjmp	.+56     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
    64c8:	f5 01       	movw	r30, r10
    64ca:	ee 0d       	add	r30, r14
    64cc:	ff 1d       	adc	r31, r15
						if(on_off == _kON)
						{
						}
					}
					
					else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
    64ce:	e7 5b       	subi	r30, 0xB7	; 183
    64d0:	f2 4f       	sbci	r31, 0xF2	; 242
					{
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    64d2:	80 81       	ld	r24, Z
    64d4:	85 36       	cpi	r24, 0x65	; 101
    64d6:	a1 f4       	brne	.+40     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
    64d8:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
						{
							if(on_off == _kON)
    64dc:	3b a9       	ldd	r19, Y+51	; 0x33
    64de:	31 30       	cpi	r19, 0x01	; 1
    64e0:	29 f4       	brne	.+10     	; 0x64ec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1628>
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    64e2:	88 23       	and	r24, r24
    64e4:	69 f0       	breq	.+26     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    64e6:	30 93 7b 14 	sts	0x147B, r19	; 0x80147b <_sRuble_Parameters+0xcd>
    64ea:	04 c0       	rjmp	.+8      	; 0x64f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1630>
								}
								
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    64ec:	88 23       	and	r24, r24
    64ee:	41 f0       	breq	.+16     	; 0x6500 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x163c>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    64f0:	d0 92 7b 14 	sts	0x147B, r13	; 0x80147b <_sRuble_Parameters+0xcd>
									_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    64f4:	6b e7       	ldi	r22, 0x7B	; 123
    64f6:	74 e1       	ldi	r23, 0x14	; 20
    64f8:	88 ea       	ldi	r24, 0xA8	; 168
    64fa:	9c e0       	ldi	r25, 0x0C	; 12
    64fc:	0e 94 10 24 	call	0x4820	; 0x4820 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    6500:	4f ef       	ldi	r20, 0xFF	; 255
    6502:	e4 1a       	sub	r14, r20
    6504:	f4 0a       	sbc	r15, r20
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    6506:	55 e0       	ldi	r21, 0x05	; 5
    6508:	e5 16       	cp	r14, r21
    650a:	f1 04       	cpc	r15, r1
    650c:	09 f0       	breq	.+2      	; 0x6510 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x164c>
    650e:	17 cd       	rjmp	.-1490   	; 0x5f3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x107a>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6510:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6514:	81 30       	cpi	r24, 0x01	; 1
    6516:	61 f4       	brne	.+24     	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    6518:	6a ef       	ldi	r22, 0xFA	; 250
    651a:	72 e0       	ldi	r23, 0x02	; 2
    651c:	86 ec       	ldi	r24, 0xC6	; 198
    651e:	94 e1       	ldi	r25, 0x14	; 20
    6520:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6524:	86 ec       	ldi	r24, 0xC6	; 198
    6526:	94 e1       	ldi	r25, 0x14	; 20
    6528:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    652c:	01 c0       	rjmp	.+2      	; 0x6530 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166c>
				return 1;
			}
			
		}break;
	}
}
    652e:	01 c0       	rjmp	.+2      	; 0x6532 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166e>
						_kDELAY_MS(200);
					}
				}
			}
		}
		return 1;
    6530:	81 e0       	ldi	r24, 0x01	; 1
				return 1;
			}
			
		}break;
	}
}
    6532:	e9 96       	adiw	r28, 0x39	; 57
    6534:	0f b6       	in	r0, 0x3f	; 63
    6536:	f8 94       	cli
    6538:	de bf       	out	0x3e, r29	; 62
    653a:	0f be       	out	0x3f, r0	; 63
    653c:	cd bf       	out	0x3d, r28	; 61
    653e:	df 91       	pop	r29
    6540:	cf 91       	pop	r28
    6542:	1f 91       	pop	r17
    6544:	0f 91       	pop	r16
    6546:	ff 90       	pop	r15
    6548:	ef 90       	pop	r14
    654a:	df 90       	pop	r13
    654c:	cf 90       	pop	r12
    654e:	bf 90       	pop	r11
    6550:	af 90       	pop	r10
    6552:	9f 90       	pop	r9
    6554:	8f 90       	pop	r8
    6556:	7f 90       	pop	r7
    6558:	6f 90       	pop	r6
    655a:	5f 90       	pop	r5
    655c:	4f 90       	pop	r4
    655e:	3f 90       	pop	r3
    6560:	2f 90       	pop	r2
    6562:	08 95       	ret

00006564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>:
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
		_kSERIAL_MON_CLEAR();
	}
}
    6564:	ff 92       	push	r15
    6566:	0f 93       	push	r16
    6568:	1f 93       	push	r17
    656a:	cf 93       	push	r28
    656c:	df 93       	push	r29
    656e:	0e e1       	ldi	r16, 0x1E	; 30
    6570:	19 e0       	ldi	r17, 0x09	; 9
    6572:	ca e1       	ldi	r28, 0x1A	; 26
    6574:	d5 e0       	ldi	r29, 0x05	; 5
    6576:	f8 01       	movw	r30, r16
    6578:	f1 90       	ld	r15, Z+
    657a:	8f 01       	movw	r16, r30
    657c:	ce 01       	movw	r24, r28
    657e:	0e 94 d9 f0 	call	0x1e1b2	; 0x1e1b2 <eeprom_read_byte>
    6582:	f8 16       	cp	r15, r24
    6584:	21 f0       	breq	.+8      	; 0x658e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x2a>
    6586:	6f 2d       	mov	r22, r15
    6588:	ce 01       	movw	r24, r28
    658a:	0e 94 e1 f0 	call	0x1e1c2	; 0x1e1c2 <eeprom_write_byte>
    658e:	21 96       	adiw	r28, 0x01	; 1
    6590:	c0 3f       	cpi	r28, 0xF0	; 240
    6592:	f7 e0       	ldi	r31, 0x07	; 7
    6594:	df 07       	cpc	r29, r31
    6596:	79 f7       	brne	.-34     	; 0x6576 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x12>
    6598:	8e e1       	ldi	r24, 0x1E	; 30
    659a:	99 e0       	ldi	r25, 0x09	; 9
    659c:	df 91       	pop	r29
    659e:	cf 91       	pop	r28
    65a0:	1f 91       	pop	r17
    65a2:	0f 91       	pop	r16
    65a4:	ff 90       	pop	r15
    65a6:	08 95       	ret

000065a8 <_Z24Return_Previous_Day_Datev>:
    65a8:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    65ac:	20 91 f3 13 	lds	r18, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    65b0:	42 2f       	mov	r20, r18
    65b2:	50 e0       	ldi	r21, 0x00	; 0
    65b4:	fa 01       	movw	r30, r20
    65b6:	31 97       	sbiw	r30, 0x01	; 1
    65b8:	ec 30       	cpi	r30, 0x0C	; 12
    65ba:	f1 05       	cpc	r31, r1
    65bc:	08 f0       	brcs	.+2      	; 0x65c0 <_Z24Return_Previous_Day_Datev+0x18>
    65be:	52 c0       	rjmp	.+164    	; 0x6664 <_Z24Return_Previous_Day_Datev+0xbc>
    65c0:	88 27       	eor	r24, r24
    65c2:	ee 58       	subi	r30, 0x8E	; 142
    65c4:	ff 4f       	sbci	r31, 0xFF	; 255
    65c6:	8f 4f       	sbci	r24, 0xFF	; 255
    65c8:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
    65cc:	91 30       	cpi	r25, 0x01	; 1
    65ce:	89 f5       	brne	.+98     	; 0x6632 <_Z24Return_Previous_Day_Datev+0x8a>
    65d0:	fa 01       	movw	r30, r20
    65d2:	31 97       	sbiw	r30, 0x01	; 1
    65d4:	eb 30       	cpi	r30, 0x0B	; 11
    65d6:	f1 05       	cpc	r31, r1
    65d8:	58 f4       	brcc	.+22     	; 0x65f0 <_Z24Return_Previous_Day_Datev+0x48>
    65da:	88 27       	eor	r24, r24
    65dc:	e2 58       	subi	r30, 0x82	; 130
    65de:	ff 4f       	sbci	r31, 0xFF	; 255
    65e0:	8f 4f       	sbci	r24, 0xFF	; 255
    65e2:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
    65e6:	8c e0       	ldi	r24, 0x0C	; 12
    65e8:	01 c0       	rjmp	.+2      	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    65ea:	81 e0       	ldi	r24, 0x01	; 1
    65ec:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    65f0:	8f e1       	ldi	r24, 0x1F	; 31
    65f2:	08 95       	ret
    65f4:	83 e0       	ldi	r24, 0x03	; 3
    65f6:	fa cf       	rjmp	.-12     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    65f8:	85 e0       	ldi	r24, 0x05	; 5
    65fa:	f8 cf       	rjmp	.-16     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    65fc:	87 e0       	ldi	r24, 0x07	; 7
    65fe:	f6 cf       	rjmp	.-20     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    6600:	88 e0       	ldi	r24, 0x08	; 8
    6602:	f4 cf       	rjmp	.-24     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    6604:	8a e0       	ldi	r24, 0x0A	; 10
    6606:	f2 cf       	rjmp	.-28     	; 0x65ec <_Z24Return_Previous_Day_Datev+0x44>
    6608:	91 30       	cpi	r25, 0x01	; 1
    660a:	99 f4       	brne	.+38     	; 0x6632 <_Z24Return_Previous_Day_Datev+0x8a>
    660c:	27 30       	cpi	r18, 0x07	; 7
    660e:	59 f0       	breq	.+22     	; 0x6626 <_Z24Return_Previous_Day_Datev+0x7e>
    6610:	20 f4       	brcc	.+8      	; 0x661a <_Z24Return_Previous_Day_Datev+0x72>
    6612:	25 30       	cpi	r18, 0x05	; 5
    6614:	41 f5       	brne	.+80     	; 0x6666 <_Z24Return_Previous_Day_Datev+0xbe>
    6616:	84 e0       	ldi	r24, 0x04	; 4
    6618:	09 c0       	rjmp	.+18     	; 0x662c <_Z24Return_Previous_Day_Datev+0x84>
    661a:	2a 30       	cpi	r18, 0x0A	; 10
    661c:	31 f0       	breq	.+12     	; 0x662a <_Z24Return_Previous_Day_Datev+0x82>
    661e:	2c 30       	cpi	r18, 0x0C	; 12
    6620:	11 f5       	brne	.+68     	; 0x6666 <_Z24Return_Previous_Day_Datev+0xbe>
    6622:	8b e0       	ldi	r24, 0x0B	; 11
    6624:	03 c0       	rjmp	.+6      	; 0x662c <_Z24Return_Previous_Day_Datev+0x84>
    6626:	86 e0       	ldi	r24, 0x06	; 6
    6628:	01 c0       	rjmp	.+2      	; 0x662c <_Z24Return_Previous_Day_Datev+0x84>
    662a:	89 e0       	ldi	r24, 0x09	; 9
    662c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6630:	1a c0       	rjmp	.+52     	; 0x6666 <_Z24Return_Previous_Day_Datev+0xbe>
    6632:	20 93 2b 09 	sts	0x092B, r18	; 0x80092b <_sSchedules+0xd>
    6636:	13 c0       	rjmp	.+38     	; 0x665e <_Z24Return_Previous_Day_Datev+0xb6>
    6638:	91 30       	cpi	r25, 0x01	; 1
    663a:	71 f4       	brne	.+28     	; 0x6658 <_Z24Return_Previous_Day_Datev+0xb0>
    663c:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    6640:	83 70       	andi	r24, 0x03	; 3
    6642:	29 f0       	breq	.+10     	; 0x664e <_Z24Return_Previous_Day_Datev+0xa6>
    6644:	82 e0       	ldi	r24, 0x02	; 2
    6646:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    664a:	8c e1       	ldi	r24, 0x1C	; 28
    664c:	08 95       	ret
    664e:	82 e0       	ldi	r24, 0x02	; 2
    6650:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6654:	8d e1       	ldi	r24, 0x1D	; 29
    6656:	08 95       	ret
    6658:	83 e0       	ldi	r24, 0x03	; 3
    665a:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    665e:	8f ef       	ldi	r24, 0xFF	; 255
    6660:	89 0f       	add	r24, r25
    6662:	08 95       	ret
    6664:	08 95       	ret
    6666:	8e e1       	ldi	r24, 0x1E	; 30
    6668:	08 95       	ret

0000666a <_Z15Delete_Scheduleh>:
    666a:	88 23       	and	r24, r24
    666c:	a9 f1       	breq	.+106    	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    666e:	30 91 d8 0b 	lds	r19, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    6672:	33 23       	and	r19, r19
    6674:	89 f1       	breq	.+98     	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    6676:	30 91 d8 0b 	lds	r19, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    667a:	83 13       	cpse	r24, r19
    667c:	2d c0       	rjmp	.+90     	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    667e:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
    6682:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
    6686:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    668a:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
    668e:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    6692:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    6696:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    669a:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    669e:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    66a2:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
    66a6:	23 30       	cpi	r18, 0x03	; 3
    66a8:	51 f0       	breq	.+20     	; 0x66be <_Z15Delete_Scheduleh+0x54>
    66aa:	e2 2f       	mov	r30, r18
    66ac:	f0 e0       	ldi	r31, 0x00	; 0
    66ae:	ee 0f       	add	r30, r30
    66b0:	ff 1f       	adc	r31, r31
    66b2:	ee 57       	subi	r30, 0x7E	; 126
    66b4:	f4 4f       	sbci	r31, 0xF4	; 244
    66b6:	11 82       	std	Z+1, r1	; 0x01
    66b8:	10 82       	st	Z, r1
    66ba:	2f 5f       	subi	r18, 0xFF	; 255
    66bc:	f4 cf       	rjmp	.-24     	; 0x66a6 <_Z15Delete_Scheduleh+0x3c>
    66be:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    66c2:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    66c6:	93 30       	cpi	r25, 0x03	; 3
    66c8:	39 f0       	breq	.+14     	; 0x66d8 <_Z15Delete_Scheduleh+0x6e>
    66ca:	e9 2f       	mov	r30, r25
    66cc:	f0 e0       	ldi	r31, 0x00	; 0
    66ce:	e2 58       	subi	r30, 0x82	; 130
    66d0:	f4 4f       	sbci	r31, 0xF4	; 244
    66d2:	10 82       	st	Z, r1
    66d4:	9f 5f       	subi	r25, 0xFF	; 255
    66d6:	f7 cf       	rjmp	.-18     	; 0x66c6 <_Z15Delete_Scheduleh+0x5c>
    66d8:	08 95       	ret

000066da <_Z35Return_Calculated_Previous_Day_Dateh>:

unsigned char Return_Calculated_Previous_Day_Date(unsigned char days_in_bet_schedule)
{
    66da:	ff 92       	push	r15
    66dc:	0f 93       	push	r16
    66de:	1f 93       	push	r17
    66e0:	cf 93       	push	r28
    66e2:	df 93       	push	r29
	int make_date;
	unsigned char return_date, return_month;
	unsigned char year;
	year  = _sRuble_Parameters.Update_Local_Date[2];
    66e4:	f0 90 f4 13 	lds	r15, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Irrigating_Date == 0)
    66e8:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    66ec:	81 11       	cpse	r24, r1
    66ee:	20 c0       	rjmp	.+64     	; 0x6730 <_Z35Return_Calculated_Previous_Day_Dateh+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    66f0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    66f4:	81 30       	cpi	r24, 0x01	; 1
    66f6:	51 f4       	brne	.+20     	; 0x670c <_Z35Return_Calculated_Previous_Day_Dateh+0x32>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 1///////////////////////////////////////////");
    66f8:	63 e8       	ldi	r22, 0x83	; 131
    66fa:	7d e1       	ldi	r23, 0x1D	; 29
    66fc:	86 ec       	ldi	r24, 0xC6	; 198
    66fe:	94 e1       	ldi	r25, 0x14	; 20
    6700:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    6704:	86 ec       	ldi	r24, 0xC6	; 198
    6706:	94 e1       	ldi	r25, 0x14	; 20
    6708:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Irrigating_Date = _sRuble_Parameters.Update_Local_Date[0];
    670c:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    6710:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    6714:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    6718:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		make_date = _sSchedules.Irrigating_Date - (_sSchedules.Days_In_Between_Schedules+1);
    671c:	00 91 28 09 	lds	r16, 0x0928	; 0x800928 <_sSchedules+0xa>
    6720:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    6724:	10 e0       	ldi	r17, 0x00	; 0
    6726:	90 e0       	ldi	r25, 0x00	; 0
    6728:	01 96       	adiw	r24, 0x01	; 1
    672a:	08 1b       	sub	r16, r24
    672c:	19 0b       	sbc	r17, r25
    672e:	13 c0       	rjmp	.+38     	; 0x6756 <_Z35Return_Calculated_Previous_Day_Dateh+0x7c>
		if(_sSchedules.Irrigating_Month == 0)
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
		}*/
		
		make_date = _sRuble_Parameters.Update_Local_Date[0] - (_sSchedules.Days_In_Between_Schedules+1);
    6730:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    6734:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    6738:	10 e0       	ldi	r17, 0x00	; 0
    673a:	90 e0       	ldi	r25, 0x00	; 0
    673c:	01 96       	adiw	r24, 0x01	; 1
    673e:	08 1b       	sub	r16, r24
    6740:	19 0b       	sbc	r17, r25
		if(_sSchedules.Irrigating_Month == 0)
    6742:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    6746:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    674a:	91 11       	cpse	r25, r1
    674c:	02 c0       	rjmp	.+4      	; 0x6752 <_Z35Return_Calculated_Previous_Day_Dateh+0x78>
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    674e:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		}
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    6752:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
	}
	
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6756:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    675a:	81 30       	cpi	r24, 0x01	; 1
    675c:	89 f4       	brne	.+34     	; 0x6780 <_Z35Return_Calculated_Previous_Day_Dateh+0xa6>
	{
		_kSERAIL_MON_WRITE("sc make date");
    675e:	66 e7       	ldi	r22, 0x76	; 118
    6760:	7d e1       	ldi	r23, 0x1D	; 29
    6762:	86 ec       	ldi	r24, 0xC6	; 198
    6764:	94 e1       	ldi	r25, 0x14	; 20
    6766:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(make_date);
    676a:	4a e0       	ldi	r20, 0x0A	; 10
    676c:	50 e0       	ldi	r21, 0x00	; 0
    676e:	b8 01       	movw	r22, r16
    6770:	86 ec       	ldi	r24, 0xC6	; 198
    6772:	94 e1       	ldi	r25, 0x14	; 20
    6774:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
		_kSERIAL_MON_CLEAR();
    6778:	86 ec       	ldi	r24, 0xC6	; 198
    677a:	94 e1       	ldi	r25, 0x14	; 20
    677c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if(make_date > 0)
    6780:	10 16       	cp	r1, r16
    6782:	11 06       	cpc	r1, r17
    6784:	24 f4       	brge	.+8      	; 0x678e <_Z35Return_Calculated_Previous_Day_Dateh+0xb4>
	{
		return_date = make_date;
    6786:	d0 2f       	mov	r29, r16
		return_month = _sSchedules.Irrigating_Month;
    6788:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    678c:	71 c0       	rjmp	.+226    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
	}
	else if(make_date == 0)
	{
		switch(_sSchedules.Irrigating_Month)
    678e:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6792:	8e 2f       	mov	r24, r30
    6794:	90 e0       	ldi	r25, 0x00	; 0
    6796:	fc 01       	movw	r30, r24
    6798:	31 97       	sbiw	r30, 0x01	; 1
	if(make_date > 0)
	{
		return_date = make_date;
		return_month = _sSchedules.Irrigating_Month;
	}
	else if(make_date == 0)
    679a:	01 15       	cp	r16, r1
    679c:	11 05       	cpc	r17, r1
    679e:	49 f5       	brne	.+82     	; 0x67f2 <_Z35Return_Calculated_Previous_Day_Dateh+0x118>
	{
		switch(_sSchedules.Irrigating_Month)
    67a0:	ec 30       	cpi	r30, 0x0C	; 12
    67a2:	f1 05       	cpc	r31, r1
    67a4:	08 f0       	brcs	.+2      	; 0x67a8 <_Z35Return_Calculated_Previous_Day_Dateh+0xce>
    67a6:	64 c0       	rjmp	.+200    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    67a8:	88 27       	eor	r24, r24
    67aa:	e7 57       	subi	r30, 0x77	; 119
    67ac:	ff 4f       	sbci	r31, 0xFF	; 255
    67ae:	8f 4f       	sbci	r24, 0xFF	; 255
    67b0:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31;
				return_month = _eDEC;
    67b4:	cc e0       	ldi	r28, 0x0C	; 12
    67b6:	18 c0       	rjmp	.+48     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eFEB:
			{
				return_date = 31;
				return_month = _eJAN;
    67b8:	c1 e0       	ldi	r28, 0x01	; 1
    67ba:	16 c0       	rjmp	.+44     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMARCH:
			{
				if(year%4)
    67bc:	8f 2d       	mov	r24, r15
    67be:	83 70       	andi	r24, 0x03	; 3
				else
				{
					return_date = 29;
				}
				
				return_month = _eFEB;
    67c0:	c2 e0       	ldi	r28, 0x02	; 2
				return_date = 31;
				return_month = _eJAN;
			}break;
			case _eMARCH:
			{
				if(year%4)
    67c2:	09 f0       	breq	.+2      	; 0x67c6 <_Z35Return_Calculated_Previous_Day_Dateh+0xec>
    67c4:	54 c0       	rjmp	.+168    	; 0x686e <_Z35Return_Calculated_Previous_Day_Dateh+0x194>
				{
					return_date = 28;
				}
				else
				{
					return_date = 29;
    67c6:	dd e1       	ldi	r29, 0x1D	; 29
    67c8:	53 c0       	rjmp	.+166    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
				return_month = _eFEB;
			}break;
			case _eAPR:
			{
				return_date = 31;
				return_month = _eMARCH;
    67ca:	c3 e0       	ldi	r28, 0x03	; 3
    67cc:	0d c0       	rjmp	.+26     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMAY:
			{
				return_date = 30;
				return_month = _eAPR;
    67ce:	c4 e0       	ldi	r28, 0x04	; 4
    67d0:	0e c0       	rjmp	.+28     	; 0x67ee <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eJUN:
			{
				return_date = 31;
				return_month = _eMAY;
    67d2:	c5 e0       	ldi	r28, 0x05	; 5
    67d4:	09 c0       	rjmp	.+18     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eJUL:
			{
				return_date = 30;
				return_month = _eJUN;
    67d6:	c6 e0       	ldi	r28, 0x06	; 6
    67d8:	0a c0       	rjmp	.+20     	; 0x67ee <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eAUG:
			{
				return_date = 31;
				return_month = _eJUL;
    67da:	c7 e0       	ldi	r28, 0x07	; 7
    67dc:	05 c0       	rjmp	.+10     	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eSEP:
			{
				return_date = 31;
				return_month = _eAUG;
    67de:	c8 e0       	ldi	r28, 0x08	; 8
    67e0:	03 c0       	rjmp	.+6      	; 0x67e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eOCT:
			{
				return_date = 30;
				return_month = _eSEP;
    67e2:	c9 e0       	ldi	r28, 0x09	; 9
    67e4:	04 c0       	rjmp	.+8      	; 0x67ee <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eNOV:
			{
				return_date = 31;
				return_month = _eOCT;
    67e6:	ca e0       	ldi	r28, 0x0A	; 10
				return_date = 30;
				return_month = _eSEP;
			}break;
			case _eNOV:
			{
				return_date = 31;
    67e8:	df e1       	ldi	r29, 0x1F	; 31
				return_month = _eOCT;
			}break;
    67ea:	42 c0       	rjmp	.+132    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30;
				return_month = _eNOV;
    67ec:	cb e0       	ldi	r28, 0x0B	; 11
				return_date = 31;
				return_month = _eOCT;
			}break;
			case _eDEC:
			{
				return_date = 30;
    67ee:	de e1       	ldi	r29, 0x1E	; 30
				return_month = _eNOV;
			}break;
    67f0:	3f c0       	rjmp	.+126    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
		}
	}
	
	else if(make_date < 0)
	{
		switch(_sSchedules.Irrigating_Month)
    67f2:	ec 30       	cpi	r30, 0x0C	; 12
    67f4:	f1 05       	cpc	r31, r1
    67f6:	e0 f5       	brcc	.+120    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    67f8:	88 27       	eor	r24, r24
    67fa:	eb 56       	subi	r30, 0x6B	; 107
    67fc:	ff 4f       	sbci	r31, 0xFF	; 255
    67fe:	8f 4f       	sbci	r24, 0xFF	; 255
    6800:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31 +  make_date;
    6804:	df e1       	ldi	r29, 0x1F	; 31
    6806:	d0 0f       	add	r29, r16
				return_month = _eDEC;
    6808:	cc e0       	ldi	r28, 0x0C	; 12
			}break;
    680a:	32 c0       	rjmp	.+100    	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eFEB:
			{
				return_date = 31+  make_date;
    680c:	df e1       	ldi	r29, 0x1F	; 31
    680e:	d0 0f       	add	r29, r16
				return_month = _eJAN;
    6810:	c1 e0       	ldi	r28, 0x01	; 1
			}break;
    6812:	2e c0       	rjmp	.+92     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMARCH:
			{
				if(year%4)
    6814:	8f 2d       	mov	r24, r15
    6816:	83 70       	andi	r24, 0x03	; 3
    6818:	11 f0       	breq	.+4      	; 0x681e <_Z35Return_Calculated_Previous_Day_Dateh+0x144>
				{
					return_date = 28+  make_date;
    681a:	dc e1       	ldi	r29, 0x1C	; 28
    681c:	01 c0       	rjmp	.+2      	; 0x6820 <_Z35Return_Calculated_Previous_Day_Dateh+0x146>
				}
				else
				{
					return_date = 29+  make_date;
    681e:	dd e1       	ldi	r29, 0x1D	; 29
    6820:	d0 0f       	add	r29, r16
				}
				
				return_month = _eFEB;
    6822:	c2 e0       	ldi	r28, 0x02	; 2
    6824:	25 c0       	rjmp	.+74     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eAPR:
			{
				return_date = 31+  make_date;
    6826:	df e1       	ldi	r29, 0x1F	; 31
    6828:	d0 0f       	add	r29, r16
				return_month = _eMARCH;
    682a:	c3 e0       	ldi	r28, 0x03	; 3
			}break;
    682c:	21 c0       	rjmp	.+66     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMAY:
			{
				return_date = 30+  make_date;
    682e:	de e1       	ldi	r29, 0x1E	; 30
    6830:	d0 0f       	add	r29, r16
				return_month = _eAPR;
    6832:	c4 e0       	ldi	r28, 0x04	; 4
			}break;
    6834:	1d c0       	rjmp	.+58     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUN:
			{
				return_date = 31+  make_date;
    6836:	df e1       	ldi	r29, 0x1F	; 31
    6838:	d0 0f       	add	r29, r16
				return_month = _eMAY;
    683a:	c5 e0       	ldi	r28, 0x05	; 5
			}break;
    683c:	19 c0       	rjmp	.+50     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUL:
			{
				return_date = 30+  make_date;
    683e:	de e1       	ldi	r29, 0x1E	; 30
    6840:	d0 0f       	add	r29, r16
				return_month = _eJUN;
    6842:	c6 e0       	ldi	r28, 0x06	; 6
			}break;
    6844:	15 c0       	rjmp	.+42     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eAUG:
			{
				return_date = 31+  make_date;
    6846:	df e1       	ldi	r29, 0x1F	; 31
    6848:	d0 0f       	add	r29, r16
				return_month = _eJUL;
    684a:	c7 e0       	ldi	r28, 0x07	; 7
			}break;
    684c:	11 c0       	rjmp	.+34     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eSEP:
			{
				return_date = 31+  make_date;
    684e:	df e1       	ldi	r29, 0x1F	; 31
    6850:	d0 0f       	add	r29, r16
				return_month = _eAUG;
    6852:	c8 e0       	ldi	r28, 0x08	; 8
			}break;
    6854:	0d c0       	rjmp	.+26     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eOCT:
			{
				return_date = 30+  make_date;
    6856:	de e1       	ldi	r29, 0x1E	; 30
    6858:	d0 0f       	add	r29, r16
				return_month = _eSEP;
    685a:	c9 e0       	ldi	r28, 0x09	; 9
			}break;
    685c:	09 c0       	rjmp	.+18     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eNOV:
			{
				return_date = 31+  make_date;
    685e:	df e1       	ldi	r29, 0x1F	; 31
    6860:	d0 0f       	add	r29, r16
				return_month = _eOCT;
    6862:	ca e0       	ldi	r28, 0x0A	; 10
			}break;
    6864:	05 c0       	rjmp	.+10     	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30+  make_date;
    6866:	de e1       	ldi	r29, 0x1E	; 30
    6868:	d0 0f       	add	r29, r16
				return_month = _eNOV;
    686a:	cb e0       	ldi	r28, 0x0B	; 11
			}break;
    686c:	01 c0       	rjmp	.+2      	; 0x6870 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eMARCH:
			{
				if(year%4)
				{
					return_date = 28;
    686e:	dc e1       	ldi	r29, 0x1C	; 28
			}break;
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6870:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6874:	81 30       	cpi	r24, 0x01	; 1
    6876:	51 f4       	brne	.+20     	; 0x688c <_Z35Return_Calculated_Previous_Day_Dateh+0x1b2>
	{
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_date");
    6878:	6d e5       	ldi	r22, 0x5D	; 93
    687a:	7d e1       	ldi	r23, 0x1D	; 29
    687c:	86 ec       	ldi	r24, 0xC6	; 198
    687e:	94 e1       	ldi	r25, 0x14	; 20
    6880:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    6884:	86 ec       	ldi	r24, 0xC6	; 198
    6886:	94 e1       	ldi	r25, 0x14	; 20
    6888:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_date  = return_date;
    688c:	d0 93 ec 0b 	sts	0x0BEC, r29	; 0x800bec <_sSchedules+0x2ce>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6890:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6894:	81 30       	cpi	r24, 0x01	; 1
    6896:	91 f4       	brne	.+36     	; 0x68bc <_Z35Return_Calculated_Previous_Day_Dateh+0x1e2>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_date);
    6898:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    689c:	4a e0       	ldi	r20, 0x0A	; 10
    689e:	50 e0       	ldi	r21, 0x00	; 0
    68a0:	86 ec       	ldi	r24, 0xC6	; 198
    68a2:	94 e1       	ldi	r25, 0x14	; 20
    68a4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_Month");
    68a8:	63 e4       	ldi	r22, 0x43	; 67
    68aa:	7d e1       	ldi	r23, 0x1D	; 29
    68ac:	86 ec       	ldi	r24, 0xC6	; 198
    68ae:	94 e1       	ldi	r25, 0x14	; 20
    68b0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    68b4:	86 ec       	ldi	r24, 0xC6	; 198
    68b6:	94 e1       	ldi	r25, 0x14	; 20
    68b8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_Month = return_month;
    68bc:	c0 93 ed 0b 	sts	0x0BED, r28	; 0x800bed <_sSchedules+0x2cf>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    68c0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    68c4:	81 30       	cpi	r24, 0x01	; 1
    68c6:	61 f4       	brne	.+24     	; 0x68e0 <_Z35Return_Calculated_Previous_Day_Dateh+0x206>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
    68c8:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    68cc:	4a e0       	ldi	r20, 0x0A	; 10
    68ce:	50 e0       	ldi	r21, 0x00	; 0
    68d0:	86 ec       	ldi	r24, 0xC6	; 198
    68d2:	94 e1       	ldi	r25, 0x14	; 20
    68d4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    68d8:	86 ec       	ldi	r24, 0xC6	; 198
    68da:	94 e1       	ldi	r25, 0x14	; 20
    68dc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
}
    68e0:	df 91       	pop	r29
    68e2:	cf 91       	pop	r28
    68e4:	1f 91       	pop	r17
    68e6:	0f 91       	pop	r16
    68e8:	ff 90       	pop	r15
    68ea:	08 95       	ret

000068ec <_Z22Day_In_Bet_Schedullingh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules)
{
    68ec:	bf 92       	push	r11
    68ee:	cf 92       	push	r12
    68f0:	df 92       	push	r13
    68f2:	ef 92       	push	r14
    68f4:	ff 92       	push	r15
    68f6:	0f 93       	push	r16
    68f8:	1f 93       	push	r17
    68fa:	cf 93       	push	r28
    68fc:	df 93       	push	r29
    68fe:	e8 2e       	mov	r14, r24
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	date  = _sRuble_Parameters.Update_Local_Date[0];
    6900:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
	month = _sRuble_Parameters.Update_Local_Date[1];
    6904:	d0 91 f3 13 	lds	r29, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6908:	b0 90 f4 13 	lds	r11, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    690c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6910:	81 30       	cpi	r24, 0x01	; 1
    6912:	09 f0       	breq	.+2      	; 0x6916 <_Z22Day_In_Bet_Schedullingh+0x2a>
    6914:	5a c0       	rjmp	.+180    	; 0x69ca <_Z22Day_In_Bet_Schedullingh+0xde>
	{
		_kSERAIL_MON_WRITE("date : ");
    6916:	6b e3       	ldi	r22, 0x3B	; 59
    6918:	7d e1       	ldi	r23, 0x1D	; 29
    691a:	86 ec       	ldi	r24, 0xC6	; 198
    691c:	94 e1       	ldi	r25, 0x14	; 20
    691e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    6922:	4a e0       	ldi	r20, 0x0A	; 10
    6924:	50 e0       	ldi	r21, 0x00	; 0
    6926:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    692a:	86 ec       	ldi	r24, 0xC6	; 198
    692c:	94 e1       	ldi	r25, 0x14	; 20
    692e:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6932:	86 ec       	ldi	r24, 0xC6	; 198
    6934:	94 e1       	ldi	r25, 0x14	; 20
    6936:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("month : ");
    693a:	62 e3       	ldi	r22, 0x32	; 50
    693c:	7d e1       	ldi	r23, 0x1D	; 29
    693e:	86 ec       	ldi	r24, 0xC6	; 198
    6940:	94 e1       	ldi	r25, 0x14	; 20
    6942:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    6946:	4a e0       	ldi	r20, 0x0A	; 10
    6948:	50 e0       	ldi	r21, 0x00	; 0
    694a:	60 91 f3 13 	lds	r22, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    694e:	86 ec       	ldi	r24, 0xC6	; 198
    6950:	94 e1       	ldi	r25, 0x14	; 20
    6952:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6956:	86 ec       	ldi	r24, 0xC6	; 198
    6958:	94 e1       	ldi	r25, 0x14	; 20
    695a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("year : ");
    695e:	6a e2       	ldi	r22, 0x2A	; 42
    6960:	7d e1       	ldi	r23, 0x1D	; 29
    6962:	86 ec       	ldi	r24, 0xC6	; 198
    6964:	94 e1       	ldi	r25, 0x14	; 20
    6966:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    696a:	4a e0       	ldi	r20, 0x0A	; 10
    696c:	50 e0       	ldi	r21, 0x00	; 0
    696e:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    6972:	86 ec       	ldi	r24, 0xC6	; 198
    6974:	94 e1       	ldi	r25, 0x14	; 20
    6976:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    697a:	86 ec       	ldi	r24, 0xC6	; 198
    697c:	94 e1       	ldi	r25, 0x14	; 20
    697e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating date : ");
    6982:	67 e1       	ldi	r22, 0x17	; 23
    6984:	7d e1       	ldi	r23, 0x1D	; 29
    6986:	86 ec       	ldi	r24, 0xC6	; 198
    6988:	94 e1       	ldi	r25, 0x14	; 20
    698a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Date);
    698e:	60 91 28 09 	lds	r22, 0x0928	; 0x800928 <_sSchedules+0xa>
    6992:	4a e0       	ldi	r20, 0x0A	; 10
    6994:	50 e0       	ldi	r21, 0x00	; 0
    6996:	86 ec       	ldi	r24, 0xC6	; 198
    6998:	94 e1       	ldi	r25, 0x14	; 20
    699a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    699e:	86 ec       	ldi	r24, 0xC6	; 198
    69a0:	94 e1       	ldi	r25, 0x14	; 20
    69a2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating month : ");
    69a6:	63 e0       	ldi	r22, 0x03	; 3
    69a8:	7d e1       	ldi	r23, 0x1D	; 29
    69aa:	86 ec       	ldi	r24, 0xC6	; 198
    69ac:	94 e1       	ldi	r25, 0x14	; 20
    69ae:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Month);
    69b2:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <_sSchedules+0xb>
    69b6:	4a e0       	ldi	r20, 0x0A	; 10
    69b8:	50 e0       	ldi	r21, 0x00	; 0
    69ba:	86 ec       	ldi	r24, 0xC6	; 198
    69bc:	94 e1       	ldi	r25, 0x14	; 20
    69be:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    69c2:	86 ec       	ldi	r24, 0xC6	; 198
    69c4:	94 e1       	ldi	r25, 0x14	; 20
    69c6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    69ca:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    69ce:	cc 24       	eor	r12, r12
    69d0:	c3 94       	inc	r12
    69d2:	ce 0c       	add	r12, r14
    69d4:	d1 2c       	mov	r13, r1
    69d6:	10 e0       	ldi	r17, 0x00	; 0
    69d8:	96 01       	movw	r18, r12
    69da:	28 0f       	add	r18, r24
    69dc:	31 1d       	adc	r19, r1
    69de:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    69e2:	02 17       	cp	r16, r18
    69e4:	13 07       	cpc	r17, r19
    69e6:	0c f4       	brge	.+2      	; 0x69ea <_Z22Day_In_Bet_Schedullingh+0xfe>
    69e8:	44 c0       	rjmp	.+136    	; 0x6a72 <_Z22Day_In_Bet_Schedullingh+0x186>
    69ea:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    69ee:	d8 13       	cpse	r29, r24
    69f0:	40 c0       	rjmp	.+128    	; 0x6a72 <_Z22Day_In_Bet_Schedullingh+0x186>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    69f2:	91 30       	cpi	r25, 0x01	; 1
    69f4:	d9 f5       	brne	.+118    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    69f6:	66 ef       	ldi	r22, 0xF6	; 246
    69f8:	7c e1       	ldi	r23, 0x1C	; 28
    69fa:	1f c0       	rjmp	.+62     	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    69fc:	91 30       	cpi	r25, 0x01	; 1
    69fe:	51 f4       	brne	.+20     	; 0x6a14 <_Z22Day_In_Bet_Schedullingh+0x128>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6a00:	69 ee       	ldi	r22, 0xE9	; 233
    6a02:	7c e1       	ldi	r23, 0x1C	; 28
    6a04:	86 ec       	ldi	r24, 0xC6	; 198
    6a06:	94 e1       	ldi	r25, 0x14	; 20
    6a08:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a0c:	86 ec       	ldi	r24, 0xC6	; 198
    6a0e:	94 e1       	ldi	r25, 0x14	; 20
    6a10:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a14:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6a18:	d1 30       	cpi	r29, 0x01	; 1
    6a1a:	41 f5       	brne	.+80     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a1c:	8f e1       	ldi	r24, 0x1F	; 31
    6a1e:	89 1b       	sub	r24, r25
    6a20:	98 01       	movw	r18, r16
    6a22:	28 0f       	add	r18, r24
    6a24:	31 1d       	adc	r19, r1
    6a26:	2c 15       	cp	r18, r12
    6a28:	3d 05       	cpc	r19, r13
    6a2a:	0c f4       	brge	.+2      	; 0x6a2e <_Z22Day_In_Bet_Schedullingh+0x142>
    6a2c:	bb c1       	rjmp	.+886    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6a32:	81 30       	cpi	r24, 0x01	; 1
    6a34:	d9 f4       	brne	.+54     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6a36:	6c ed       	ldi	r22, 0xDC	; 220
    6a38:	7c e1       	ldi	r23, 0x1C	; 28
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6a3a:	86 ec       	ldi	r24, 0xC6	; 198
    6a3c:	94 e1       	ldi	r25, 0x14	; 20
    6a3e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6a42:	86 ec       	ldi	r24, 0xC6	; 198
    6a44:	94 e1       	ldi	r25, 0x14	; 20
    6a46:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    6a4a:	10 c0       	rjmp	.+32     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a4c:	91 30       	cpi	r25, 0x01	; 1
    6a4e:	51 f4       	brne	.+20     	; 0x6a64 <_Z22Day_In_Bet_Schedullingh+0x178>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6a50:	6f ec       	ldi	r22, 0xCF	; 207
    6a52:	7c e1       	ldi	r23, 0x1C	; 28
    6a54:	86 ec       	ldi	r24, 0xC6	; 198
    6a56:	94 e1       	ldi	r25, 0x14	; 20
    6a58:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a5c:	86 ec       	ldi	r24, 0xC6	; 198
    6a5e:	94 e1       	ldi	r25, 0x14	; 20
    6a60:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a64:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6a68:	d2 30       	cpi	r29, 0x02	; 2
    6a6a:	c1 f0       	breq	.+48     	; 0x6a9c <_Z22Day_In_Bet_Schedullingh+0x1b0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("day in btw 1");
				_kSERIAL_MON_CLEAR();
			}
			return 2;
    6a6c:	c2 e0       	ldi	r28, 0x02	; 2
    6a6e:	8c 2f       	mov	r24, r28
    6a70:	a9 c3       	rjmp	.+1874   	; 0x71c4 <_Z22Day_In_Bet_Schedullingh+0x8d8>
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6a72:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6a76:	d8 17       	cp	r29, r24
    6a78:	09 f4       	brne	.+2      	; 0x6a7c <_Z22Day_In_Bet_Schedullingh+0x190>
    6a7a:	9b c1       	rjmp	.+822    	; 0x6db2 <_Z22Day_In_Bet_Schedullingh+0x4c6>
			{
				switch(_sSchedules.Irrigating_Month)
    6a7c:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    6a80:	4c 2f       	mov	r20, r28
    6a82:	50 e0       	ldi	r21, 0x00	; 0
    6a84:	fa 01       	movw	r30, r20
    6a86:	31 97       	sbiw	r30, 0x01	; 1
    6a88:	ec 30       	cpi	r30, 0x0C	; 12
    6a8a:	f1 05       	cpc	r31, r1
    6a8c:	08 f0       	brcs	.+2      	; 0x6a90 <_Z22Day_In_Bet_Schedullingh+0x1a4>
    6a8e:	8a c1       	rjmp	.+788    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
    6a90:	88 27       	eor	r24, r24
    6a92:	ef 55       	subi	r30, 0x5F	; 95
    6a94:	ff 4f       	sbci	r31, 0xFF	; 255
    6a96:	8f 4f       	sbci	r24, 0xFF	; 255
    6a98:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eFEB)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a9c:	8f e1       	ldi	r24, 0x1F	; 31
    6a9e:	89 1b       	sub	r24, r25
    6aa0:	98 01       	movw	r18, r16
    6aa2:	28 0f       	add	r18, r24
    6aa4:	31 1d       	adc	r19, r1
    6aa6:	2c 15       	cp	r18, r12
    6aa8:	3d 05       	cpc	r19, r13
    6aaa:	0c f4       	brge	.+2      	; 0x6aae <_Z22Day_In_Bet_Schedullingh+0x1c2>
    6aac:	7b c1       	rjmp	.+758    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ab2:	81 30       	cpi	r24, 0x01	; 1
    6ab4:	d9 f6       	brne	.-74     	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ab6:	62 ec       	ldi	r22, 0xC2	; 194
    6ab8:	7c e1       	ldi	r23, 0x1C	; 28
    6aba:	bf cf       	rjmp	.-130    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6abc:	91 30       	cpi	r25, 0x01	; 1
    6abe:	51 f4       	brne	.+20     	; 0x6ad4 <_Z22Day_In_Bet_Schedullingh+0x1e8>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ac0:	65 eb       	ldi	r22, 0xB5	; 181
    6ac2:	7c e1       	ldi	r23, 0x1C	; 28
    6ac4:	86 ec       	ldi	r24, 0xC6	; 198
    6ac6:	94 e1       	ldi	r25, 0x14	; 20
    6ac8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6acc:	86 ec       	ldi	r24, 0xC6	; 198
    6ace:	94 e1       	ldi	r25, 0x14	; 20
    6ad0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6ad4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6ad8:	d4 30       	cpi	r29, 0x04	; 4
    6ada:	41 f6       	brne	.-112    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6adc:	8f e1       	ldi	r24, 0x1F	; 31
    6ade:	89 1b       	sub	r24, r25
    6ae0:	98 01       	movw	r18, r16
    6ae2:	28 0f       	add	r18, r24
    6ae4:	31 1d       	adc	r19, r1
    6ae6:	2c 15       	cp	r18, r12
    6ae8:	3d 05       	cpc	r19, r13
    6aea:	0c f4       	brge	.+2      	; 0x6aee <_Z22Day_In_Bet_Schedullingh+0x202>
    6aec:	5b c1       	rjmp	.+694    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6af2:	81 30       	cpi	r24, 0x01	; 1
    6af4:	09 f0       	breq	.+2      	; 0x6af8 <_Z22Day_In_Bet_Schedullingh+0x20c>
    6af6:	ba cf       	rjmp	.-140    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6af8:	68 ea       	ldi	r22, 0xA8	; 168
    6afa:	7c e1       	ldi	r23, 0x1C	; 28
    6afc:	9e cf       	rjmp	.-196    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6afe:	91 30       	cpi	r25, 0x01	; 1
    6b00:	51 f4       	brne	.+20     	; 0x6b16 <_Z22Day_In_Bet_Schedullingh+0x22a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b02:	6b e9       	ldi	r22, 0x9B	; 155
    6b04:	7c e1       	ldi	r23, 0x1C	; 28
    6b06:	86 ec       	ldi	r24, 0xC6	; 198
    6b08:	94 e1       	ldi	r25, 0x14	; 20
    6b0a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b0e:	86 ec       	ldi	r24, 0xC6	; 198
    6b10:	94 e1       	ldi	r25, 0x14	; 20
    6b12:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b16:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6b1a:	d6 30       	cpi	r29, 0x06	; 6
    6b1c:	09 f0       	breq	.+2      	; 0x6b20 <_Z22Day_In_Bet_Schedullingh+0x234>
    6b1e:	a6 cf       	rjmp	.-180    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b20:	8f e1       	ldi	r24, 0x1F	; 31
    6b22:	89 1b       	sub	r24, r25
    6b24:	98 01       	movw	r18, r16
    6b26:	28 0f       	add	r18, r24
    6b28:	31 1d       	adc	r19, r1
    6b2a:	2c 15       	cp	r18, r12
    6b2c:	3d 05       	cpc	r19, r13
    6b2e:	0c f4       	brge	.+2      	; 0x6b32 <_Z22Day_In_Bet_Schedullingh+0x246>
    6b30:	39 c1       	rjmp	.+626    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6b36:	81 30       	cpi	r24, 0x01	; 1
    6b38:	09 f0       	breq	.+2      	; 0x6b3c <_Z22Day_In_Bet_Schedullingh+0x250>
    6b3a:	98 cf       	rjmp	.-208    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6b3c:	6e e8       	ldi	r22, 0x8E	; 142
    6b3e:	7c e1       	ldi	r23, 0x1C	; 28
    6b40:	7c cf       	rjmp	.-264    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b42:	91 30       	cpi	r25, 0x01	; 1
    6b44:	51 f4       	brne	.+20     	; 0x6b5a <_Z22Day_In_Bet_Schedullingh+0x26e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b46:	61 e8       	ldi	r22, 0x81	; 129
    6b48:	7c e1       	ldi	r23, 0x1C	; 28
    6b4a:	86 ec       	ldi	r24, 0xC6	; 198
    6b4c:	94 e1       	ldi	r25, 0x14	; 20
    6b4e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b52:	86 ec       	ldi	r24, 0xC6	; 198
    6b54:	94 e1       	ldi	r25, 0x14	; 20
    6b56:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b5a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6b5e:	d8 30       	cpi	r29, 0x08	; 8
    6b60:	09 f0       	breq	.+2      	; 0x6b64 <_Z22Day_In_Bet_Schedullingh+0x278>
    6b62:	84 cf       	rjmp	.-248    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b64:	8f e1       	ldi	r24, 0x1F	; 31
    6b66:	89 1b       	sub	r24, r25
    6b68:	98 01       	movw	r18, r16
    6b6a:	28 0f       	add	r18, r24
    6b6c:	31 1d       	adc	r19, r1
    6b6e:	2c 15       	cp	r18, r12
    6b70:	3d 05       	cpc	r19, r13
    6b72:	0c f4       	brge	.+2      	; 0x6b76 <_Z22Day_In_Bet_Schedullingh+0x28a>
    6b74:	17 c1       	rjmp	.+558    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b76:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6b7a:	81 30       	cpi	r24, 0x01	; 1
    6b7c:	09 f0       	breq	.+2      	; 0x6b80 <_Z22Day_In_Bet_Schedullingh+0x294>
    6b7e:	76 cf       	rjmp	.-276    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6b80:	64 e7       	ldi	r22, 0x74	; 116
    6b82:	7c e1       	ldi	r23, 0x1C	; 28
    6b84:	5a cf       	rjmp	.-332    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b86:	91 30       	cpi	r25, 0x01	; 1
    6b88:	51 f4       	brne	.+20     	; 0x6b9e <_Z22Day_In_Bet_Schedullingh+0x2b2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6b8a:	67 e6       	ldi	r22, 0x67	; 103
    6b8c:	7c e1       	ldi	r23, 0x1C	; 28
    6b8e:	86 ec       	ldi	r24, 0xC6	; 198
    6b90:	94 e1       	ldi	r25, 0x14	; 20
    6b92:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b96:	86 ec       	ldi	r24, 0xC6	; 198
    6b98:	94 e1       	ldi	r25, 0x14	; 20
    6b9a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6b9e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6ba2:	d9 30       	cpi	r29, 0x09	; 9
    6ba4:	09 f0       	breq	.+2      	; 0x6ba8 <_Z22Day_In_Bet_Schedullingh+0x2bc>
    6ba6:	62 cf       	rjmp	.-316    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ba8:	8f e1       	ldi	r24, 0x1F	; 31
    6baa:	89 1b       	sub	r24, r25
    6bac:	98 01       	movw	r18, r16
    6bae:	28 0f       	add	r18, r24
    6bb0:	31 1d       	adc	r19, r1
    6bb2:	2c 15       	cp	r18, r12
    6bb4:	3d 05       	cpc	r19, r13
    6bb6:	0c f4       	brge	.+2      	; 0x6bba <_Z22Day_In_Bet_Schedullingh+0x2ce>
    6bb8:	f5 c0       	rjmp	.+490    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bba:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6bbe:	81 30       	cpi	r24, 0x01	; 1
    6bc0:	09 f0       	breq	.+2      	; 0x6bc4 <_Z22Day_In_Bet_Schedullingh+0x2d8>
    6bc2:	54 cf       	rjmp	.-344    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6bc4:	6a e5       	ldi	r22, 0x5A	; 90
    6bc6:	7c e1       	ldi	r23, 0x1C	; 28
    6bc8:	38 cf       	rjmp	.-400    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bca:	91 30       	cpi	r25, 0x01	; 1
    6bcc:	51 f4       	brne	.+20     	; 0x6be2 <_Z22Day_In_Bet_Schedullingh+0x2f6>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6bce:	6d e4       	ldi	r22, 0x4D	; 77
    6bd0:	7c e1       	ldi	r23, 0x1C	; 28
    6bd2:	86 ec       	ldi	r24, 0xC6	; 198
    6bd4:	94 e1       	ldi	r25, 0x14	; 20
    6bd6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6bda:	86 ec       	ldi	r24, 0xC6	; 198
    6bdc:	94 e1       	ldi	r25, 0x14	; 20
    6bde:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6be2:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6be6:	db 30       	cpi	r29, 0x0B	; 11
    6be8:	09 f0       	breq	.+2      	; 0x6bec <_Z22Day_In_Bet_Schedullingh+0x300>
    6bea:	40 cf       	rjmp	.-384    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6bec:	8f e1       	ldi	r24, 0x1F	; 31
    6bee:	89 1b       	sub	r24, r25
    6bf0:	98 01       	movw	r18, r16
    6bf2:	28 0f       	add	r18, r24
    6bf4:	31 1d       	adc	r19, r1
    6bf6:	2c 15       	cp	r18, r12
    6bf8:	3d 05       	cpc	r19, r13
    6bfa:	0c f4       	brge	.+2      	; 0x6bfe <_Z22Day_In_Bet_Schedullingh+0x312>
    6bfc:	d3 c0       	rjmp	.+422    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bfe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c02:	81 30       	cpi	r24, 0x01	; 1
    6c04:	09 f0       	breq	.+2      	; 0x6c08 <_Z22Day_In_Bet_Schedullingh+0x31c>
    6c06:	32 cf       	rjmp	.-412    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6c08:	60 e4       	ldi	r22, 0x40	; 64
    6c0a:	7c e1       	ldi	r23, 0x1C	; 28
    6c0c:	16 cf       	rjmp	.-468    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6c0e:	8b 2d       	mov	r24, r11
    6c10:	83 70       	andi	r24, 0x03	; 3
    6c12:	11 f1       	breq	.+68     	; 0x6c58 <_Z22Day_In_Bet_Schedullingh+0x36c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c14:	91 30       	cpi	r25, 0x01	; 1
    6c16:	51 f4       	brne	.+20     	; 0x6c2c <_Z22Day_In_Bet_Schedullingh+0x340>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6c18:	63 e3       	ldi	r22, 0x33	; 51
    6c1a:	7c e1       	ldi	r23, 0x1C	; 28
    6c1c:	86 ec       	ldi	r24, 0xC6	; 198
    6c1e:	94 e1       	ldi	r25, 0x14	; 20
    6c20:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6c24:	86 ec       	ldi	r24, 0xC6	; 198
    6c26:	94 e1       	ldi	r25, 0x14	; 20
    6c28:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6c2c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6c30:	d3 30       	cpi	r29, 0x03	; 3
    6c32:	09 f0       	breq	.+2      	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x34a>
    6c34:	b7 c0       	rjmp	.+366    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6c36:	8c e1       	ldi	r24, 0x1C	; 28
    6c38:	89 1b       	sub	r24, r25
    6c3a:	98 01       	movw	r18, r16
    6c3c:	28 0f       	add	r18, r24
    6c3e:	31 1d       	adc	r19, r1
    6c40:	2c 15       	cp	r18, r12
    6c42:	3d 05       	cpc	r19, r13
    6c44:	0c f4       	brge	.+2      	; 0x6c48 <_Z22Day_In_Bet_Schedullingh+0x35c>
    6c46:	ae c0       	rjmp	.+348    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c48:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c4c:	81 30       	cpi	r24, 0x01	; 1
    6c4e:	09 f0       	breq	.+2      	; 0x6c52 <_Z22Day_In_Bet_Schedullingh+0x366>
    6c50:	0d cf       	rjmp	.-486    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6c52:	66 e2       	ldi	r22, 0x26	; 38
    6c54:	7c e1       	ldi	r23, 0x1C	; 28
    6c56:	cc c0       	rjmp	.+408    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
								}
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c58:	91 30       	cpi	r25, 0x01	; 1
    6c5a:	51 f4       	brne	.+20     	; 0x6c70 <_Z22Day_In_Bet_Schedullingh+0x384>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6c5c:	69 e1       	ldi	r22, 0x19	; 25
    6c5e:	7c e1       	ldi	r23, 0x1C	; 28
    6c60:	86 ec       	ldi	r24, 0xC6	; 198
    6c62:	94 e1       	ldi	r25, 0x14	; 20
    6c64:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6c68:	86 ec       	ldi	r24, 0xC6	; 198
    6c6a:	94 e1       	ldi	r25, 0x14	; 20
    6c6c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6c70:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6c74:	d3 30       	cpi	r29, 0x03	; 3
    6c76:	09 f0       	breq	.+2      	; 0x6c7a <_Z22Day_In_Bet_Schedullingh+0x38e>
    6c78:	f9 ce       	rjmp	.-526    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6c7a:	8d e1       	ldi	r24, 0x1D	; 29
    6c7c:	89 1b       	sub	r24, r25
    6c7e:	98 01       	movw	r18, r16
    6c80:	28 0f       	add	r18, r24
    6c82:	31 1d       	adc	r19, r1
    6c84:	2c 15       	cp	r18, r12
    6c86:	3d 05       	cpc	r19, r13
    6c88:	0c f4       	brge	.+2      	; 0x6c8c <_Z22Day_In_Bet_Schedullingh+0x3a0>
    6c8a:	8c c0       	rjmp	.+280    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c8c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6c90:	81 30       	cpi	r24, 0x01	; 1
    6c92:	09 f0       	breq	.+2      	; 0x6c96 <_Z22Day_In_Bet_Schedullingh+0x3aa>
    6c94:	eb ce       	rjmp	.-554    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6c96:	6c e0       	ldi	r22, 0x0C	; 12
    6c98:	7c e1       	ldi	r23, 0x1C	; 28
    6c9a:	aa c0       	rjmp	.+340    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c9c:	91 30       	cpi	r25, 0x01	; 1
    6c9e:	51 f4       	brne	.+20     	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x3c8>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6ca0:	6f ef       	ldi	r22, 0xFF	; 255
    6ca2:	7b e1       	ldi	r23, 0x1B	; 27
    6ca4:	86 ec       	ldi	r24, 0xC6	; 198
    6ca6:	94 e1       	ldi	r25, 0x14	; 20
    6ca8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cac:	86 ec       	ldi	r24, 0xC6	; 198
    6cae:	94 e1       	ldi	r25, 0x14	; 20
    6cb0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6cb4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    6cb8:	d5 30       	cpi	r29, 0x05	; 5
    6cba:	09 f0       	breq	.+2      	; 0x6cbe <_Z22Day_In_Bet_Schedullingh+0x3d2>
    6cbc:	73 c0       	rjmp	.+230    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6cbe:	8e e1       	ldi	r24, 0x1E	; 30
    6cc0:	89 1b       	sub	r24, r25
    6cc2:	98 01       	movw	r18, r16
    6cc4:	28 0f       	add	r18, r24
    6cc6:	31 1d       	adc	r19, r1
    6cc8:	2c 15       	cp	r18, r12
    6cca:	3d 05       	cpc	r19, r13
    6ccc:	0c f4       	brge	.+2      	; 0x6cd0 <_Z22Day_In_Bet_Schedullingh+0x3e4>
    6cce:	6a c0       	rjmp	.+212    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cd0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6cd4:	81 30       	cpi	r24, 0x01	; 1
    6cd6:	09 f0       	breq	.+2      	; 0x6cda <_Z22Day_In_Bet_Schedullingh+0x3ee>
    6cd8:	c9 ce       	rjmp	.-622    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6cda:	62 ef       	ldi	r22, 0xF2	; 242
    6cdc:	7b e1       	ldi	r23, 0x1B	; 27
    6cde:	ad ce       	rjmp	.-678    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ce0:	91 30       	cpi	r25, 0x01	; 1
    6ce2:	51 f4       	brne	.+20     	; 0x6cf8 <_Z22Day_In_Bet_Schedullingh+0x40c>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6ce4:	65 ee       	ldi	r22, 0xE5	; 229
    6ce6:	7b e1       	ldi	r23, 0x1B	; 27
    6ce8:	86 ec       	ldi	r24, 0xC6	; 198
    6cea:	94 e1       	ldi	r25, 0x14	; 20
    6cec:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cf0:	86 ec       	ldi	r24, 0xC6	; 198
    6cf2:	94 e1       	ldi	r25, 0x14	; 20
    6cf4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6cf8:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    6cfc:	d7 30       	cpi	r29, 0x07	; 7
    6cfe:	09 f0       	breq	.+2      	; 0x6d02 <_Z22Day_In_Bet_Schedullingh+0x416>
    6d00:	51 c0       	rjmp	.+162    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d02:	8e e1       	ldi	r24, 0x1E	; 30
    6d04:	89 1b       	sub	r24, r25
    6d06:	98 01       	movw	r18, r16
    6d08:	28 0f       	add	r18, r24
    6d0a:	31 1d       	adc	r19, r1
    6d0c:	2c 15       	cp	r18, r12
    6d0e:	3d 05       	cpc	r19, r13
    6d10:	0c f4       	brge	.+2      	; 0x6d14 <_Z22Day_In_Bet_Schedullingh+0x428>
    6d12:	48 c0       	rjmp	.+144    	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d14:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d18:	81 30       	cpi	r24, 0x01	; 1
    6d1a:	09 f0       	breq	.+2      	; 0x6d1e <_Z22Day_In_Bet_Schedullingh+0x432>
    6d1c:	a7 ce       	rjmp	.-690    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d1e:	68 ed       	ldi	r22, 0xD8	; 216
    6d20:	7b e1       	ldi	r23, 0x1B	; 27
    6d22:	8b ce       	rjmp	.-746    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d24:	91 30       	cpi	r25, 0x01	; 1
    6d26:	51 f4       	brne	.+20     	; 0x6d3c <_Z22Day_In_Bet_Schedullingh+0x450>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6d28:	6b ec       	ldi	r22, 0xCB	; 203
    6d2a:	7b e1       	ldi	r23, 0x1B	; 27
    6d2c:	86 ec       	ldi	r24, 0xC6	; 198
    6d2e:	94 e1       	ldi	r25, 0x14	; 20
    6d30:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d34:	86 ec       	ldi	r24, 0xC6	; 198
    6d36:	94 e1       	ldi	r25, 0x14	; 20
    6d38:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6d3c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    6d40:	da 30       	cpi	r29, 0x0A	; 10
    6d42:	81 f5       	brne	.+96     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d44:	8e e1       	ldi	r24, 0x1E	; 30
    6d46:	89 1b       	sub	r24, r25
    6d48:	98 01       	movw	r18, r16
    6d4a:	28 0f       	add	r18, r24
    6d4c:	31 1d       	adc	r19, r1
    6d4e:	2c 15       	cp	r18, r12
    6d50:	3d 05       	cpc	r19, r13
    6d52:	44 f1       	brlt	.+80     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d54:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d58:	81 30       	cpi	r24, 0x01	; 1
    6d5a:	09 f0       	breq	.+2      	; 0x6d5e <_Z22Day_In_Bet_Schedullingh+0x472>
    6d5c:	87 ce       	rjmp	.-754    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d5e:	6e eb       	ldi	r22, 0xBE	; 190
    6d60:	7b e1       	ldi	r23, 0x1B	; 27
    6d62:	6b ce       	rjmp	.-810    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d64:	91 30       	cpi	r25, 0x01	; 1
    6d66:	51 f4       	brne	.+20     	; 0x6d7c <_Z22Day_In_Bet_Schedullingh+0x490>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6d68:	61 eb       	ldi	r22, 0xB1	; 177
    6d6a:	7b e1       	ldi	r23, 0x1B	; 27
    6d6c:	86 ec       	ldi	r24, 0xC6	; 198
    6d6e:	94 e1       	ldi	r25, 0x14	; 20
    6d70:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d74:	86 ec       	ldi	r24, 0xC6	; 198
    6d76:	94 e1       	ldi	r25, 0x14	; 20
    6d78:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6d7c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    6d80:	dc 30       	cpi	r29, 0x0C	; 12
    6d82:	81 f4       	brne	.+32     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d84:	8e e1       	ldi	r24, 0x1E	; 30
    6d86:	89 1b       	sub	r24, r25
    6d88:	98 01       	movw	r18, r16
    6d8a:	28 0f       	add	r18, r24
    6d8c:	31 1d       	adc	r19, r1
    6d8e:	2c 15       	cp	r18, r12
    6d90:	3d 05       	cpc	r19, r13
    6d92:	44 f0       	brlt	.+16     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d94:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6d98:	81 30       	cpi	r24, 0x01	; 1
    6d9a:	09 f0       	breq	.+2      	; 0x6d9e <_Z22Day_In_Bet_Schedullingh+0x4b2>
    6d9c:	67 ce       	rjmp	.-818    	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6d9e:	64 ea       	ldi	r22, 0xA4	; 164
    6da0:	7b e1       	ldi	r23, 0x1B	; 27
    6da2:	4b ce       	rjmp	.-874    	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6da4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6da8:	81 30       	cpi	r24, 0x01	; 1
    6daa:	79 f4       	brne	.+30     	; 0x6dca <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6dac:	66 e9       	ldi	r22, 0x96	; 150
    6dae:	7b e1       	ldi	r23, 0x1B	; 27
    6db0:	04 c0       	rjmp	.+8      	; 0x6dba <_Z22Day_In_Bet_Schedullingh+0x4ce>
					_kSERIAL_MON_CLEAR();
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6db2:	91 30       	cpi	r25, 0x01	; 1
    6db4:	51 f4       	brne	.+20     	; 0x6dca <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6db6:	68 e8       	ldi	r22, 0x88	; 136
    6db8:	7b e1       	ldi	r23, 0x1B	; 27
    6dba:	86 ec       	ldi	r24, 0xC6	; 198
    6dbc:	94 e1       	ldi	r25, 0x14	; 20
    6dbe:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6dc2:	86 ec       	ldi	r24, 0xC6	; 198
    6dc4:	94 e1       	ldi	r25, 0x14	; 20
    6dc6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		
		//printf("\n");
		
		Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    6dca:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    6dce:	f1 2c       	mov	r15, r1
    6dd0:	97 01       	movw	r18, r14
    6dd2:	28 0f       	add	r18, r24
    6dd4:	31 1d       	adc	r19, r1
    6dd6:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6dda:	02 17       	cp	r16, r18
    6ddc:	13 07       	cpc	r17, r19
    6dde:	1c f1       	brlt	.+70     	; 0x6e26 <_Z22Day_In_Bet_Schedullingh+0x53a>
    6de0:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6de4:	d8 13       	cpse	r29, r24
    6de6:	1f c0       	rjmp	.+62     	; 0x6e26 <_Z22Day_In_Bet_Schedullingh+0x53a>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6de8:	c1 30       	cpi	r28, 0x01	; 1
    6dea:	d9 f4       	brne	.+54     	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6dec:	6b e7       	ldi	r22, 0x7B	; 123
    6dee:	7b e1       	ldi	r23, 0x1B	; 27
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6df0:	86 ec       	ldi	r24, 0xC6	; 198
    6df2:	94 e1       	ldi	r25, 0x14	; 20
    6df4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6df8:	86 ec       	ldi	r24, 0xC6	; 198
    6dfa:	94 e1       	ldi	r25, 0x14	; 20
    6dfc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    6e00:	36 ce       	rjmp	.-916    	; 0x6a6e <_Z22Day_In_Bet_Schedullingh+0x182>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e02:	c1 30       	cpi	r28, 0x01	; 1
    6e04:	51 f4       	brne	.+20     	; 0x6e1a <_Z22Day_In_Bet_Schedullingh+0x52e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e06:	6e e6       	ldi	r22, 0x6E	; 110
    6e08:	7b e1       	ldi	r23, 0x1B	; 27
    6e0a:	86 ec       	ldi	r24, 0xC6	; 198
    6e0c:	94 e1       	ldi	r25, 0x14	; 20
    6e0e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e12:	86 ec       	ldi	r24, 0xC6	; 198
    6e14:	94 e1       	ldi	r25, 0x14	; 20
    6e16:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e1a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6e1e:	d1 30       	cpi	r29, 0x01	; 1
    6e20:	b9 f0       	breq	.+46     	; 0x6e50 <_Z22Day_In_Bet_Schedullingh+0x564>
								return 1;
							}
						}
						else
						{
							return 1;
    6e22:	c1 e0       	ldi	r28, 0x01	; 1
    6e24:	24 ce       	rjmp	.-952    	; 0x6a6e <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			return 1;
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6e26:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6e2a:	d8 17       	cp	r29, r24
    6e2c:	09 f4       	brne	.+2      	; 0x6e30 <_Z22Day_In_Bet_Schedullingh+0x544>
    6e2e:	ba c1       	rjmp	.+884    	; 0x71a4 <_Z22Day_In_Bet_Schedullingh+0x8b8>
			{
				switch(_sSchedules.Irrigating_Month)
    6e30:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6e34:	8e 2f       	mov	r24, r30
    6e36:	90 e0       	ldi	r25, 0x00	; 0
    6e38:	fc 01       	movw	r30, r24
    6e3a:	31 97       	sbiw	r30, 0x01	; 1
    6e3c:	ec 30       	cpi	r30, 0x0C	; 12
    6e3e:	f1 05       	cpc	r31, r1
    6e40:	08 f0       	brcs	.+2      	; 0x6e44 <_Z22Day_In_Bet_Schedullingh+0x558>
    6e42:	a1 c1       	rjmp	.+834    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
    6e44:	88 27       	eor	r24, r24
    6e46:	e3 55       	subi	r30, 0x53	; 83
    6e48:	ff 4f       	sbci	r31, 0xFF	; 255
    6e4a:	8f 4f       	sbci	r24, 0xFF	; 255
    6e4c:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eJAN)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e50:	8f e1       	ldi	r24, 0x1F	; 31
    6e52:	89 1b       	sub	r24, r25
    6e54:	08 0f       	add	r16, r24
    6e56:	11 1d       	adc	r17, r1
    6e58:	0e 15       	cp	r16, r14
    6e5a:	1f 05       	cpc	r17, r15
    6e5c:	0c f4       	brge	.+2      	; 0x6e60 <_Z22Day_In_Bet_Schedullingh+0x574>
    6e5e:	93 c1       	rjmp	.+806    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e60:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6e64:	c1 30       	cpi	r28, 0x01	; 1
    6e66:	e9 f6       	brne	.-70     	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e68:	61 e6       	ldi	r22, 0x61	; 97
    6e6a:	7b e1       	ldi	r23, 0x1B	; 27
    6e6c:	c1 cf       	rjmp	.-126    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e6e:	c1 30       	cpi	r28, 0x01	; 1
    6e70:	51 f4       	brne	.+20     	; 0x6e86 <_Z22Day_In_Bet_Schedullingh+0x59a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e72:	64 e5       	ldi	r22, 0x54	; 84
    6e74:	7b e1       	ldi	r23, 0x1B	; 27
    6e76:	86 ec       	ldi	r24, 0xC6	; 198
    6e78:	94 e1       	ldi	r25, 0x14	; 20
    6e7a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e7e:	86 ec       	ldi	r24, 0xC6	; 198
    6e80:	94 e1       	ldi	r25, 0x14	; 20
    6e82:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e86:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6e8a:	d2 30       	cpi	r29, 0x02	; 2
    6e8c:	51 f6       	brne	.-108    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e8e:	8f e1       	ldi	r24, 0x1F	; 31
    6e90:	89 1b       	sub	r24, r25
    6e92:	08 0f       	add	r16, r24
    6e94:	11 1d       	adc	r17, r1
    6e96:	0e 15       	cp	r16, r14
    6e98:	1f 05       	cpc	r17, r15
    6e9a:	0c f4       	brge	.+2      	; 0x6e9e <_Z22Day_In_Bet_Schedullingh+0x5b2>
    6e9c:	74 c1       	rjmp	.+744    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e9e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ea2:	c1 30       	cpi	r28, 0x01	; 1
    6ea4:	09 f0       	breq	.+2      	; 0x6ea8 <_Z22Day_In_Bet_Schedullingh+0x5bc>
    6ea6:	bd cf       	rjmp	.-134    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ea8:	67 e4       	ldi	r22, 0x47	; 71
    6eaa:	7b e1       	ldi	r23, 0x1B	; 27
    6eac:	a1 cf       	rjmp	.-190    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6eae:	c1 30       	cpi	r28, 0x01	; 1
    6eb0:	51 f4       	brne	.+20     	; 0x6ec6 <_Z22Day_In_Bet_Schedullingh+0x5da>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6eb2:	6a e3       	ldi	r22, 0x3A	; 58
    6eb4:	7b e1       	ldi	r23, 0x1B	; 27
    6eb6:	86 ec       	ldi	r24, 0xC6	; 198
    6eb8:	94 e1       	ldi	r25, 0x14	; 20
    6eba:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ebe:	86 ec       	ldi	r24, 0xC6	; 198
    6ec0:	94 e1       	ldi	r25, 0x14	; 20
    6ec2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6ec6:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6eca:	d4 30       	cpi	r29, 0x04	; 4
    6ecc:	09 f0       	breq	.+2      	; 0x6ed0 <_Z22Day_In_Bet_Schedullingh+0x5e4>
    6ece:	a9 cf       	rjmp	.-174    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ed0:	8f e1       	ldi	r24, 0x1F	; 31
    6ed2:	89 1b       	sub	r24, r25
    6ed4:	08 0f       	add	r16, r24
    6ed6:	11 1d       	adc	r17, r1
    6ed8:	0e 15       	cp	r16, r14
    6eda:	1f 05       	cpc	r17, r15
    6edc:	0c f4       	brge	.+2      	; 0x6ee0 <_Z22Day_In_Bet_Schedullingh+0x5f4>
    6ede:	53 c1       	rjmp	.+678    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ee0:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6ee4:	c1 30       	cpi	r28, 0x01	; 1
    6ee6:	09 f0       	breq	.+2      	; 0x6eea <_Z22Day_In_Bet_Schedullingh+0x5fe>
    6ee8:	9c cf       	rjmp	.-200    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6eea:	6d e2       	ldi	r22, 0x2D	; 45
    6eec:	7b e1       	ldi	r23, 0x1B	; 27
    6eee:	80 cf       	rjmp	.-256    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ef0:	c1 30       	cpi	r28, 0x01	; 1
    6ef2:	51 f4       	brne	.+20     	; 0x6f08 <_Z22Day_In_Bet_Schedullingh+0x61c>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6ef4:	60 e2       	ldi	r22, 0x20	; 32
    6ef6:	7b e1       	ldi	r23, 0x1B	; 27
    6ef8:	86 ec       	ldi	r24, 0xC6	; 198
    6efa:	94 e1       	ldi	r25, 0x14	; 20
    6efc:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f00:	86 ec       	ldi	r24, 0xC6	; 198
    6f02:	94 e1       	ldi	r25, 0x14	; 20
    6f04:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f08:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6f0c:	d6 30       	cpi	r29, 0x06	; 6
    6f0e:	09 f0       	breq	.+2      	; 0x6f12 <_Z22Day_In_Bet_Schedullingh+0x626>
    6f10:	88 cf       	rjmp	.-240    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f12:	8f e1       	ldi	r24, 0x1F	; 31
    6f14:	89 1b       	sub	r24, r25
    6f16:	08 0f       	add	r16, r24
    6f18:	11 1d       	adc	r17, r1
    6f1a:	0e 15       	cp	r16, r14
    6f1c:	1f 05       	cpc	r17, r15
    6f1e:	0c f4       	brge	.+2      	; 0x6f22 <_Z22Day_In_Bet_Schedullingh+0x636>
    6f20:	32 c1       	rjmp	.+612    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f22:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6f26:	c1 30       	cpi	r28, 0x01	; 1
    6f28:	09 f0       	breq	.+2      	; 0x6f2c <_Z22Day_In_Bet_Schedullingh+0x640>
    6f2a:	7b cf       	rjmp	.-266    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6f2c:	63 e1       	ldi	r22, 0x13	; 19
    6f2e:	7b e1       	ldi	r23, 0x1B	; 27
    6f30:	5f cf       	rjmp	.-322    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f32:	c1 30       	cpi	r28, 0x01	; 1
    6f34:	51 f4       	brne	.+20     	; 0x6f4a <_Z22Day_In_Bet_Schedullingh+0x65e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6f36:	66 e0       	ldi	r22, 0x06	; 6
    6f38:	7b e1       	ldi	r23, 0x1B	; 27
    6f3a:	86 ec       	ldi	r24, 0xC6	; 198
    6f3c:	94 e1       	ldi	r25, 0x14	; 20
    6f3e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f42:	86 ec       	ldi	r24, 0xC6	; 198
    6f44:	94 e1       	ldi	r25, 0x14	; 20
    6f46:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f4a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6f4e:	d8 30       	cpi	r29, 0x08	; 8
    6f50:	09 f0       	breq	.+2      	; 0x6f54 <_Z22Day_In_Bet_Schedullingh+0x668>
    6f52:	67 cf       	rjmp	.-306    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f54:	8f e1       	ldi	r24, 0x1F	; 31
    6f56:	89 1b       	sub	r24, r25
    6f58:	08 0f       	add	r16, r24
    6f5a:	11 1d       	adc	r17, r1
    6f5c:	0e 15       	cp	r16, r14
    6f5e:	1f 05       	cpc	r17, r15
    6f60:	0c f4       	brge	.+2      	; 0x6f64 <_Z22Day_In_Bet_Schedullingh+0x678>
    6f62:	11 c1       	rjmp	.+546    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f64:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6f68:	c1 30       	cpi	r28, 0x01	; 1
    6f6a:	09 f0       	breq	.+2      	; 0x6f6e <_Z22Day_In_Bet_Schedullingh+0x682>
    6f6c:	5a cf       	rjmp	.-332    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6f6e:	69 ef       	ldi	r22, 0xF9	; 249
    6f70:	7a e1       	ldi	r23, 0x1A	; 26
    6f72:	3e cf       	rjmp	.-388    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f74:	c1 30       	cpi	r28, 0x01	; 1
    6f76:	51 f4       	brne	.+20     	; 0x6f8c <_Z22Day_In_Bet_Schedullingh+0x6a0>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6f78:	6c ee       	ldi	r22, 0xEC	; 236
    6f7a:	7a e1       	ldi	r23, 0x1A	; 26
    6f7c:	86 ec       	ldi	r24, 0xC6	; 198
    6f7e:	94 e1       	ldi	r25, 0x14	; 20
    6f80:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f84:	86 ec       	ldi	r24, 0xC6	; 198
    6f86:	94 e1       	ldi	r25, 0x14	; 20
    6f88:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6f8c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6f90:	d9 30       	cpi	r29, 0x09	; 9
    6f92:	09 f0       	breq	.+2      	; 0x6f96 <_Z22Day_In_Bet_Schedullingh+0x6aa>
    6f94:	46 cf       	rjmp	.-372    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f96:	8f e1       	ldi	r24, 0x1F	; 31
    6f98:	89 1b       	sub	r24, r25
    6f9a:	08 0f       	add	r16, r24
    6f9c:	11 1d       	adc	r17, r1
    6f9e:	0e 15       	cp	r16, r14
    6fa0:	1f 05       	cpc	r17, r15
    6fa2:	0c f4       	brge	.+2      	; 0x6fa6 <_Z22Day_In_Bet_Schedullingh+0x6ba>
    6fa4:	f0 c0       	rjmp	.+480    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fa6:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6faa:	c1 30       	cpi	r28, 0x01	; 1
    6fac:	09 f0       	breq	.+2      	; 0x6fb0 <_Z22Day_In_Bet_Schedullingh+0x6c4>
    6fae:	39 cf       	rjmp	.-398    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6fb0:	6f ed       	ldi	r22, 0xDF	; 223
    6fb2:	7a e1       	ldi	r23, 0x1A	; 26
    6fb4:	1d cf       	rjmp	.-454    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fb6:	c1 30       	cpi	r28, 0x01	; 1
    6fb8:	51 f4       	brne	.+20     	; 0x6fce <_Z22Day_In_Bet_Schedullingh+0x6e2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6fba:	62 ed       	ldi	r22, 0xD2	; 210
    6fbc:	7a e1       	ldi	r23, 0x1A	; 26
    6fbe:	86 ec       	ldi	r24, 0xC6	; 198
    6fc0:	94 e1       	ldi	r25, 0x14	; 20
    6fc2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6fc6:	86 ec       	ldi	r24, 0xC6	; 198
    6fc8:	94 e1       	ldi	r25, 0x14	; 20
    6fca:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6fce:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6fd2:	db 30       	cpi	r29, 0x0B	; 11
    6fd4:	09 f0       	breq	.+2      	; 0x6fd8 <_Z22Day_In_Bet_Schedullingh+0x6ec>
    6fd6:	25 cf       	rjmp	.-438    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6fd8:	8f e1       	ldi	r24, 0x1F	; 31
    6fda:	89 1b       	sub	r24, r25
    6fdc:	08 0f       	add	r16, r24
    6fde:	11 1d       	adc	r17, r1
    6fe0:	0e 15       	cp	r16, r14
    6fe2:	1f 05       	cpc	r17, r15
    6fe4:	0c f4       	brge	.+2      	; 0x6fe8 <_Z22Day_In_Bet_Schedullingh+0x6fc>
    6fe6:	cf c0       	rjmp	.+414    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fe8:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    6fec:	c1 30       	cpi	r28, 0x01	; 1
    6fee:	09 f0       	breq	.+2      	; 0x6ff2 <_Z22Day_In_Bet_Schedullingh+0x706>
    6ff0:	18 cf       	rjmp	.-464    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6ff2:	65 ec       	ldi	r22, 0xC5	; 197
    6ff4:	7a e1       	ldi	r23, 0x1A	; 26
    6ff6:	fc ce       	rjmp	.-520    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6ff8:	8b 2d       	mov	r24, r11
    6ffa:	83 70       	andi	r24, 0x03	; 3
    6ffc:	09 f1       	breq	.+66     	; 0x7040 <_Z22Day_In_Bet_Schedullingh+0x754>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ffe:	c1 30       	cpi	r28, 0x01	; 1
    7000:	51 f4       	brne	.+20     	; 0x7016 <_Z22Day_In_Bet_Schedullingh+0x72a>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    7002:	68 eb       	ldi	r22, 0xB8	; 184
    7004:	7a e1       	ldi	r23, 0x1A	; 26
    7006:	86 ec       	ldi	r24, 0xC6	; 198
    7008:	94 e1       	ldi	r25, 0x14	; 20
    700a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    700e:	86 ec       	ldi	r24, 0xC6	; 198
    7010:	94 e1       	ldi	r25, 0x14	; 20
    7012:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    7016:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    701a:	d3 30       	cpi	r29, 0x03	; 3
    701c:	09 f0       	breq	.+2      	; 0x7020 <_Z22Day_In_Bet_Schedullingh+0x734>
    701e:	01 cf       	rjmp	.-510    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    7020:	8c e1       	ldi	r24, 0x1C	; 28
    7022:	89 1b       	sub	r24, r25
    7024:	08 0f       	add	r16, r24
    7026:	11 1d       	adc	r17, r1
    7028:	0e 15       	cp	r16, r14
    702a:	1f 05       	cpc	r17, r15
    702c:	0c f4       	brge	.+2      	; 0x7030 <_Z22Day_In_Bet_Schedullingh+0x744>
    702e:	ab c0       	rjmp	.+342    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    7030:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7034:	c1 30       	cpi	r28, 0x01	; 1
    7036:	09 f0       	breq	.+2      	; 0x703a <_Z22Day_In_Bet_Schedullingh+0x74e>
    7038:	f4 ce       	rjmp	.-536    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    703a:	6b ea       	ldi	r22, 0xAB	; 171
    703c:	7a e1       	ldi	r23, 0x1A	; 26
    703e:	d8 ce       	rjmp	.-592    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
								return 1;
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7040:	c1 30       	cpi	r28, 0x01	; 1
    7042:	51 f4       	brne	.+20     	; 0x7058 <_Z22Day_In_Bet_Schedullingh+0x76c>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    7044:	6e e9       	ldi	r22, 0x9E	; 158
    7046:	7a e1       	ldi	r23, 0x1A	; 26
    7048:	86 ec       	ldi	r24, 0xC6	; 198
    704a:	94 e1       	ldi	r25, 0x14	; 20
    704c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    7050:	86 ec       	ldi	r24, 0xC6	; 198
    7052:	94 e1       	ldi	r25, 0x14	; 20
    7054:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    7058:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    705c:	d3 30       	cpi	r29, 0x03	; 3
    705e:	09 f0       	breq	.+2      	; 0x7062 <_Z22Day_In_Bet_Schedullingh+0x776>
    7060:	e0 ce       	rjmp	.-576    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    7062:	8d e1       	ldi	r24, 0x1D	; 29
    7064:	89 1b       	sub	r24, r25
    7066:	08 0f       	add	r16, r24
    7068:	11 1d       	adc	r17, r1
    706a:	0e 15       	cp	r16, r14
    706c:	1f 05       	cpc	r17, r15
    706e:	0c f4       	brge	.+2      	; 0x7072 <_Z22Day_In_Bet_Schedullingh+0x786>
    7070:	8a c0       	rjmp	.+276    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    7072:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7076:	c1 30       	cpi	r28, 0x01	; 1
    7078:	09 f0       	breq	.+2      	; 0x707c <_Z22Day_In_Bet_Schedullingh+0x790>
    707a:	d3 ce       	rjmp	.-602    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    707c:	61 e9       	ldi	r22, 0x91	; 145
    707e:	7a e1       	ldi	r23, 0x1A	; 26
    7080:	b7 ce       	rjmp	.-658    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7082:	c1 30       	cpi	r28, 0x01	; 1
    7084:	51 f4       	brne	.+20     	; 0x709a <_Z22Day_In_Bet_Schedullingh+0x7ae>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    7086:	64 e8       	ldi	r22, 0x84	; 132
    7088:	7a e1       	ldi	r23, 0x1A	; 26
    708a:	86 ec       	ldi	r24, 0xC6	; 198
    708c:	94 e1       	ldi	r25, 0x14	; 20
    708e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7092:	86 ec       	ldi	r24, 0xC6	; 198
    7094:	94 e1       	ldi	r25, 0x14	; 20
    7096:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    709a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    709e:	d5 30       	cpi	r29, 0x05	; 5
    70a0:	09 f0       	breq	.+2      	; 0x70a4 <_Z22Day_In_Bet_Schedullingh+0x7b8>
    70a2:	bf ce       	rjmp	.-642    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    70a4:	8e e1       	ldi	r24, 0x1E	; 30
    70a6:	89 1b       	sub	r24, r25
    70a8:	08 0f       	add	r16, r24
    70aa:	11 1d       	adc	r17, r1
    70ac:	0e 15       	cp	r16, r14
    70ae:	1f 05       	cpc	r17, r15
    70b0:	0c f4       	brge	.+2      	; 0x70b4 <_Z22Day_In_Bet_Schedullingh+0x7c8>
    70b2:	69 c0       	rjmp	.+210    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    70b4:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    70b8:	c1 30       	cpi	r28, 0x01	; 1
    70ba:	09 f0       	breq	.+2      	; 0x70be <_Z22Day_In_Bet_Schedullingh+0x7d2>
    70bc:	b2 ce       	rjmp	.-668    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    70be:	67 e7       	ldi	r22, 0x77	; 119
    70c0:	7a e1       	ldi	r23, 0x1A	; 26
    70c2:	96 ce       	rjmp	.-724    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    70c4:	c1 30       	cpi	r28, 0x01	; 1
    70c6:	51 f4       	brne	.+20     	; 0x70dc <_Z22Day_In_Bet_Schedullingh+0x7f0>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    70c8:	6a e6       	ldi	r22, 0x6A	; 106
    70ca:	7a e1       	ldi	r23, 0x1A	; 26
    70cc:	86 ec       	ldi	r24, 0xC6	; 198
    70ce:	94 e1       	ldi	r25, 0x14	; 20
    70d0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    70d4:	86 ec       	ldi	r24, 0xC6	; 198
    70d6:	94 e1       	ldi	r25, 0x14	; 20
    70d8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    70dc:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    70e0:	d7 30       	cpi	r29, 0x07	; 7
    70e2:	09 f0       	breq	.+2      	; 0x70e6 <_Z22Day_In_Bet_Schedullingh+0x7fa>
    70e4:	9e ce       	rjmp	.-708    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    70e6:	8e e1       	ldi	r24, 0x1E	; 30
    70e8:	89 1b       	sub	r24, r25
    70ea:	08 0f       	add	r16, r24
    70ec:	11 1d       	adc	r17, r1
    70ee:	0e 15       	cp	r16, r14
    70f0:	1f 05       	cpc	r17, r15
    70f2:	0c f4       	brge	.+2      	; 0x70f6 <_Z22Day_In_Bet_Schedullingh+0x80a>
    70f4:	48 c0       	rjmp	.+144    	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    70f6:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    70fa:	c1 30       	cpi	r28, 0x01	; 1
    70fc:	09 f0       	breq	.+2      	; 0x7100 <_Z22Day_In_Bet_Schedullingh+0x814>
    70fe:	91 ce       	rjmp	.-734    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7100:	6d e5       	ldi	r22, 0x5D	; 93
    7102:	7a e1       	ldi	r23, 0x1A	; 26
    7104:	75 ce       	rjmp	.-790    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7106:	c1 30       	cpi	r28, 0x01	; 1
    7108:	51 f4       	brne	.+20     	; 0x711e <_Z22Day_In_Bet_Schedullingh+0x832>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    710a:	60 e5       	ldi	r22, 0x50	; 80
    710c:	7a e1       	ldi	r23, 0x1A	; 26
    710e:	86 ec       	ldi	r24, 0xC6	; 198
    7110:	94 e1       	ldi	r25, 0x14	; 20
    7112:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7116:	86 ec       	ldi	r24, 0xC6	; 198
    7118:	94 e1       	ldi	r25, 0x14	; 20
    711a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    711e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    7122:	da 30       	cpi	r29, 0x0A	; 10
    7124:	09 f0       	breq	.+2      	; 0x7128 <_Z22Day_In_Bet_Schedullingh+0x83c>
    7126:	7d ce       	rjmp	.-774    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    7128:	8e e1       	ldi	r24, 0x1E	; 30
    712a:	89 1b       	sub	r24, r25
    712c:	08 0f       	add	r16, r24
    712e:	11 1d       	adc	r17, r1
    7130:	0e 15       	cp	r16, r14
    7132:	1f 05       	cpc	r17, r15
    7134:	44 f1       	brlt	.+80     	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7136:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    713a:	c1 30       	cpi	r28, 0x01	; 1
    713c:	09 f0       	breq	.+2      	; 0x7140 <_Z22Day_In_Bet_Schedullingh+0x854>
    713e:	71 ce       	rjmp	.-798    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7140:	63 e4       	ldi	r22, 0x43	; 67
    7142:	7a e1       	ldi	r23, 0x1A	; 26
    7144:	55 ce       	rjmp	.-854    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7146:	c1 30       	cpi	r28, 0x01	; 1
    7148:	51 f4       	brne	.+20     	; 0x715e <_Z22Day_In_Bet_Schedullingh+0x872>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    714a:	66 e3       	ldi	r22, 0x36	; 54
    714c:	7a e1       	ldi	r23, 0x1A	; 26
    714e:	86 ec       	ldi	r24, 0xC6	; 198
    7150:	94 e1       	ldi	r25, 0x14	; 20
    7152:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7156:	86 ec       	ldi	r24, 0xC6	; 198
    7158:	94 e1       	ldi	r25, 0x14	; 20
    715a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    715e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    7162:	dc 30       	cpi	r29, 0x0C	; 12
    7164:	09 f0       	breq	.+2      	; 0x7168 <_Z22Day_In_Bet_Schedullingh+0x87c>
    7166:	5d ce       	rjmp	.-838    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    7168:	8e e1       	ldi	r24, 0x1E	; 30
    716a:	89 1b       	sub	r24, r25
    716c:	08 0f       	add	r16, r24
    716e:	11 1d       	adc	r17, r1
    7170:	0e 15       	cp	r16, r14
    7172:	1f 05       	cpc	r17, r15
    7174:	44 f0       	brlt	.+16     	; 0x7186 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7176:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    717a:	c1 30       	cpi	r28, 0x01	; 1
    717c:	09 f0       	breq	.+2      	; 0x7180 <_Z22Day_In_Bet_Schedullingh+0x894>
    717e:	51 ce       	rjmp	.-862    	; 0x6e22 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7180:	69 e2       	ldi	r22, 0x29	; 41
    7182:	7a e1       	ldi	r23, 0x1A	; 26
    7184:	35 ce       	rjmp	.-918    	; 0x6df0 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7186:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    718a:	81 30       	cpi	r24, 0x01	; 1
    718c:	c1 f4       	brne	.+48     	; 0x71be <_Z22Day_In_Bet_Schedullingh+0x8d2>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    718e:	6b e1       	ldi	r22, 0x1B	; 27
    7190:	7a e1       	ldi	r23, 0x1A	; 26
    7192:	86 ec       	ldi	r24, 0xC6	; 198
    7194:	94 e1       	ldi	r25, 0x14	; 20
    7196:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    719a:	86 ec       	ldi	r24, 0xC6	; 198
    719c:	94 e1       	ldi	r25, 0x14	; 20
    719e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    71a2:	0d c0       	rjmp	.+26     	; 0x71be <_Z22Day_In_Bet_Schedullingh+0x8d2>
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    71a4:	c1 30       	cpi	r28, 0x01	; 1
    71a6:	61 f4       	brne	.+24     	; 0x71c0 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    71a8:	6d e0       	ldi	r22, 0x0D	; 13
    71aa:	7a e1       	ldi	r23, 0x1A	; 26
    71ac:	86 ec       	ldi	r24, 0xC6	; 198
    71ae:	94 e1       	ldi	r25, 0x14	; 20
    71b0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    71b4:	86 ec       	ldi	r24, 0xC6	; 198
    71b6:	94 e1       	ldi	r25, 0x14	; 20
    71b8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    71bc:	01 c0       	rjmp	.+2      	; 0x71c0 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				//printf("deny 4");
				return 0;
			}
			
		}
}
    71be:	02 c0       	rjmp	.+4      	; 0x71c4 <_Z22Day_In_Bet_Schedullingh+0x8d8>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
					_kSERIAL_MON_CLEAR();
				}
				//printf("deny 4");
				return 0;
    71c0:	c0 e0       	ldi	r28, 0x00	; 0
    71c2:	55 cc       	rjmp	.-1878   	; 0x6a6e <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			
		}
}
    71c4:	df 91       	pop	r29
    71c6:	cf 91       	pop	r28
    71c8:	1f 91       	pop	r17
    71ca:	0f 91       	pop	r16
    71cc:	ff 90       	pop	r15
    71ce:	ef 90       	pop	r14
    71d0:	df 90       	pop	r13
    71d2:	cf 90       	pop	r12
    71d4:	bf 90       	pop	r11
    71d6:	08 95       	ret

000071d8 <_Z22Day_In_Bet_Schedullinghhh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules, unsigned char last_schedule_date,
unsigned char last_schedule_month)
{
    71d8:	7f 92       	push	r7
    71da:	8f 92       	push	r8
    71dc:	9f 92       	push	r9
    71de:	af 92       	push	r10
    71e0:	bf 92       	push	r11
    71e2:	cf 92       	push	r12
    71e4:	df 92       	push	r13
    71e6:	ef 92       	push	r14
    71e8:	ff 92       	push	r15
    71ea:	0f 93       	push	r16
    71ec:	1f 93       	push	r17
    71ee:	cf 93       	push	r28
    71f0:	df 93       	push	r29
    71f2:	c8 2e       	mov	r12, r24
    71f4:	f6 2e       	mov	r15, r22
    71f6:	74 2e       	mov	r7, r20
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    71f8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    71fc:	81 30       	cpi	r24, 0x01	; 1
    71fe:	69 f4       	brne	.+26     	; 0x721a <_Z22Day_In_Bet_Schedullinghhh+0x42>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
    7200:	6a ef       	ldi	r22, 0xFA	; 250
    7202:	79 e1       	ldi	r23, 0x19	; 25
    7204:	86 ec       	ldi	r24, 0xC6	; 198
    7206:	94 e1       	ldi	r25, 0x14	; 20
    7208:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(Days_In_Between_Schedules);
    720c:	4a e0       	ldi	r20, 0x0A	; 10
    720e:	50 e0       	ldi	r21, 0x00	; 0
    7210:	6c 2d       	mov	r22, r12
    7212:	86 ec       	ldi	r24, 0xC6	; 198
    7214:	94 e1       	ldi	r25, 0x14	; 20
    7216:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
	}
	
	
	year  = _sRuble_Parameters.Update_Local_Date[2];
    721a:	e0 90 f4 13 	lds	r14, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Started_Date != 0)
    721e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    7222:	88 23       	and	r24, r24
    7224:	71 f0       	breq	.+28     	; 0x7242 <_Z22Day_In_Bet_Schedullinghhh+0x6a>
	{
		if(_sSchedules.Which_Sheduler_Is_Running == 1)
    7226:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    722a:	81 30       	cpi	r24, 0x01	; 1
    722c:	29 f4       	brne	.+10     	; 0x7238 <_Z22Day_In_Bet_Schedullinghhh+0x60>
		{
			date  = _sSchedules.Started_Date;
    722e:	00 91 2a 09 	lds	r16, 0x092A	; 0x80092a <_sSchedules+0xc>
			month = _sSchedules.Started_Month;
    7232:	d0 91 2b 09 	lds	r29, 0x092B	; 0x80092b <_sSchedules+0xd>
    7236:	09 c0       	rjmp	.+18     	; 0x724a <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		else
		{
			date  = _sSchedules.First_Schedule_Irrigated_Date;
    7238:	00 91 ee 0b 	lds	r16, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
			month = _sSchedules.First_Schedule_Irrigated_Month;
    723c:	d0 91 ef 0b 	lds	r29, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    7240:	04 c0       	rjmp	.+8      	; 0x724a <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		
	}
	else
	{
		date  = _sRuble_Parameters.Update_Local_Date[0];
    7242:	00 91 f2 13 	lds	r16, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
		month = _sRuble_Parameters.Update_Local_Date[1];
    7246:	d0 91 f3 13 	lds	r29, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
	}
	
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
    724a:	aa 24       	eor	r10, r10
    724c:	a3 94       	inc	r10
    724e:	ac 0c       	add	r10, r12
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7250:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7254:	81 30       	cpi	r24, 0x01	; 1
    7256:	09 f0       	breq	.+2      	; 0x725a <_Z22Day_In_Bet_Schedullinghhh+0x82>
    7258:	71 c0       	rjmp	.+226    	; 0x733c <_Z22Day_In_Bet_Schedullinghhh+0x164>
	{
		_kSERAIL_MON_WRITE("date : ");
    725a:	62 ef       	ldi	r22, 0xF2	; 242
    725c:	79 e1       	ldi	r23, 0x19	; 25
    725e:	86 ec       	ldi	r24, 0xC6	; 198
    7260:	94 e1       	ldi	r25, 0x14	; 20
    7262:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    7266:	4a e0       	ldi	r20, 0x0A	; 10
    7268:	50 e0       	ldi	r21, 0x00	; 0
    726a:	60 2f       	mov	r22, r16
    726c:	86 ec       	ldi	r24, 0xC6	; 198
    726e:	94 e1       	ldi	r25, 0x14	; 20
    7270:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7274:	86 ec       	ldi	r24, 0xC6	; 198
    7276:	94 e1       	ldi	r25, 0x14	; 20
    7278:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("month : ");
    727c:	69 ee       	ldi	r22, 0xE9	; 233
    727e:	79 e1       	ldi	r23, 0x19	; 25
    7280:	86 ec       	ldi	r24, 0xC6	; 198
    7282:	94 e1       	ldi	r25, 0x14	; 20
    7284:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(month);
    7288:	4a e0       	ldi	r20, 0x0A	; 10
    728a:	50 e0       	ldi	r21, 0x00	; 0
    728c:	6d 2f       	mov	r22, r29
    728e:	86 ec       	ldi	r24, 0xC6	; 198
    7290:	94 e1       	ldi	r25, 0x14	; 20
    7292:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7296:	86 ec       	ldi	r24, 0xC6	; 198
    7298:	94 e1       	ldi	r25, 0x14	; 20
    729a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>

		_kSERAIL_MON_WRITE("year : ");
    729e:	61 ee       	ldi	r22, 0xE1	; 225
    72a0:	79 e1       	ldi	r23, 0x19	; 25
    72a2:	86 ec       	ldi	r24, 0xC6	; 198
    72a4:	94 e1       	ldi	r25, 0x14	; 20
    72a6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    72aa:	4a e0       	ldi	r20, 0x0A	; 10
    72ac:	50 e0       	ldi	r21, 0x00	; 0
    72ae:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    72b2:	86 ec       	ldi	r24, 0xC6	; 198
    72b4:	94 e1       	ldi	r25, 0x14	; 20
    72b6:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72ba:	86 ec       	ldi	r24, 0xC6	; 198
    72bc:	94 e1       	ldi	r25, 0x14	; 20
    72be:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last date: ");
    72c2:	65 ed       	ldi	r22, 0xD5	; 213
    72c4:	79 e1       	ldi	r23, 0x19	; 25
    72c6:	86 ec       	ldi	r24, 0xC6	; 198
    72c8:	94 e1       	ldi	r25, 0x14	; 20
    72ca:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_date);
    72ce:	4a e0       	ldi	r20, 0x0A	; 10
    72d0:	50 e0       	ldi	r21, 0x00	; 0
    72d2:	6f 2d       	mov	r22, r15
    72d4:	86 ec       	ldi	r24, 0xC6	; 198
    72d6:	94 e1       	ldi	r25, 0x14	; 20
    72d8:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72dc:	86 ec       	ldi	r24, 0xC6	; 198
    72de:	94 e1       	ldi	r25, 0x14	; 20
    72e0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last month : ");
    72e4:	67 ec       	ldi	r22, 0xC7	; 199
    72e6:	79 e1       	ldi	r23, 0x19	; 25
    72e8:	86 ec       	ldi	r24, 0xC6	; 198
    72ea:	94 e1       	ldi	r25, 0x14	; 20
    72ec:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_month);
    72f0:	4a e0       	ldi	r20, 0x0A	; 10
    72f2:	50 e0       	ldi	r21, 0x00	; 0
    72f4:	67 2d       	mov	r22, r7
    72f6:	86 ec       	ldi	r24, 0xC6	; 198
    72f8:	94 e1       	ldi	r25, 0x14	; 20
    72fa:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    72fe:	86 ec       	ldi	r24, 0xC6	; 198
    7300:	94 e1       	ldi	r25, 0x14	; 20
    7302:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("day in btw started");
    7306:	64 eb       	ldi	r22, 0xB4	; 180
    7308:	79 e1       	ldi	r23, 0x19	; 25
    730a:	86 ec       	ldi	r24, 0xC6	; 198
    730c:	94 e1       	ldi	r25, 0x14	; 20
    730e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7312:	86 ec       	ldi	r24, 0xC6	; 198
    7314:	94 e1       	ldi	r25, 0x14	; 20
    7316:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("No of days in bet : ");
    731a:	6f e9       	ldi	r22, 0x9F	; 159
    731c:	79 e1       	ldi	r23, 0x19	; 25
    731e:	86 ec       	ldi	r24, 0xC6	; 198
    7320:	94 e1       	ldi	r25, 0x14	; 20
    7322:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    7326:	4a e0       	ldi	r20, 0x0A	; 10
    7328:	50 e0       	ldi	r21, 0x00	; 0
    732a:	6a 2d       	mov	r22, r10
    732c:	86 ec       	ldi	r24, 0xC6	; 198
    732e:	94 e1       	ldi	r25, 0x14	; 20
    7330:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7334:	86 ec       	ldi	r24, 0xC6	; 198
    7336:	94 e1       	ldi	r25, 0x14	; 20
    7338:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
	
	
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    733c:	8f 2c       	mov	r8, r15
    733e:	91 2c       	mov	r9, r1
    7340:	b1 2c       	mov	r11, r1
    7342:	10 e0       	ldi	r17, 0x00	; 0
    7344:	94 01       	movw	r18, r8
    7346:	2a 0d       	add	r18, r10
    7348:	3b 1d       	adc	r19, r11
    734a:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    734e:	02 17       	cp	r16, r18
    7350:	13 07       	cpc	r17, r19
    7352:	44 f0       	brlt	.+16     	; 0x7364 <_Z22Day_In_Bet_Schedullinghhh+0x18c>
    7354:	d7 11       	cpse	r29, r7
    7356:	09 c0       	rjmp	.+18     	; 0x736a <_Z22Day_In_Bet_Schedullinghhh+0x192>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    7358:	91 30       	cpi	r25, 0x01	; 1
    735a:	09 f0       	breq	.+2      	; 0x735e <_Z22Day_In_Bet_Schedullinghhh+0x186>
    735c:	be c3       	rjmp	.+1916   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
    735e:	62 e9       	ldi	r22, 0x92	; 146
    7360:	79 e1       	ldi	r23, 0x19	; 25
    7362:	30 c0       	rjmp	.+96     	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
		
		return 2;
	}
	else
	{
		if(last_schedule_month != month)
    7364:	d7 15       	cp	r29, r7
    7366:	09 f4       	brne	.+2      	; 0x736a <_Z22Day_In_Bet_Schedullinghhh+0x192>
    7368:	be c1       	rjmp	.+892    	; 0x76e6 <_Z22Day_In_Bet_Schedullinghhh+0x50e>
		{
			switch(last_schedule_month)
    736a:	47 2d       	mov	r20, r7
    736c:	50 e0       	ldi	r21, 0x00	; 0
    736e:	fa 01       	movw	r30, r20
    7370:	31 97       	sbiw	r30, 0x01	; 1
    7372:	ec 30       	cpi	r30, 0x0C	; 12
    7374:	f1 05       	cpc	r31, r1
    7376:	08 f0       	brcs	.+2      	; 0x737a <_Z22Day_In_Bet_Schedullinghhh+0x1a2>
    7378:	af c1       	rjmp	.+862    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
    737a:	88 27       	eor	r24, r24
    737c:	e7 54       	subi	r30, 0x47	; 71
    737e:	ff 4f       	sbci	r31, 0xFF	; 255
    7380:	8f 4f       	sbci	r24, 0xFF	; 255
    7382:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7386:	91 30       	cpi	r25, 0x01	; 1
    7388:	51 f4       	brne	.+20     	; 0x739e <_Z22Day_In_Bet_Schedullinghhh+0x1c6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    738a:	65 e8       	ldi	r22, 0x85	; 133
    738c:	79 e1       	ldi	r23, 0x19	; 25
    738e:	86 ec       	ldi	r24, 0xC6	; 198
    7390:	94 e1       	ldi	r25, 0x14	; 20
    7392:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7396:	86 ec       	ldi	r24, 0xC6	; 198
    7398:	94 e1       	ldi	r25, 0x14	; 20
    739a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    739e:	d1 30       	cpi	r29, 0x01	; 1
    73a0:	09 f0       	breq	.+2      	; 0x73a4 <_Z22Day_In_Bet_Schedullinghhh+0x1cc>
    73a2:	9b c3       	rjmp	.+1846   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73a4:	8f e1       	ldi	r24, 0x1F	; 31
    73a6:	8f 19       	sub	r24, r15
    73a8:	98 01       	movw	r18, r16
    73aa:	28 0f       	add	r18, r24
    73ac:	31 1d       	adc	r19, r1
    73ae:	2a 15       	cp	r18, r10
    73b0:	3b 05       	cpc	r19, r11
    73b2:	0c f4       	brge	.+2      	; 0x73b6 <_Z22Day_In_Bet_Schedullinghhh+0x1de>
    73b4:	91 c1       	rjmp	.+802    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    73ba:	81 30       	cpi	r24, 0x01	; 1
    73bc:	09 f0       	breq	.+2      	; 0x73c0 <_Z22Day_In_Bet_Schedullinghhh+0x1e8>
    73be:	8d c3       	rjmp	.+1818   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    73c0:	68 e7       	ldi	r22, 0x78	; 120
    73c2:	79 e1       	ldi	r23, 0x19	; 25
    73c4:	86 ec       	ldi	r24, 0xC6	; 198
    73c6:	94 e1       	ldi	r25, 0x14	; 20
    73c8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    73cc:	86 ec       	ldi	r24, 0xC6	; 198
    73ce:	94 e1       	ldi	r25, 0x14	; 20
    73d0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    73d4:	82 c3       	rjmp	.+1796   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73d6:	91 30       	cpi	r25, 0x01	; 1
    73d8:	51 f4       	brne	.+20     	; 0x73ee <_Z22Day_In_Bet_Schedullinghhh+0x216>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    73da:	6b e6       	ldi	r22, 0x6B	; 107
    73dc:	79 e1       	ldi	r23, 0x19	; 25
    73de:	86 ec       	ldi	r24, 0xC6	; 198
    73e0:	94 e1       	ldi	r25, 0x14	; 20
    73e2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    73e6:	86 ec       	ldi	r24, 0xC6	; 198
    73e8:	94 e1       	ldi	r25, 0x14	; 20
    73ea:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    73ee:	d2 30       	cpi	r29, 0x02	; 2
    73f0:	09 f0       	breq	.+2      	; 0x73f4 <_Z22Day_In_Bet_Schedullinghhh+0x21c>
    73f2:	73 c3       	rjmp	.+1766   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73f4:	8f e1       	ldi	r24, 0x1F	; 31
    73f6:	8f 19       	sub	r24, r15
    73f8:	98 01       	movw	r18, r16
    73fa:	28 0f       	add	r18, r24
    73fc:	31 1d       	adc	r19, r1
    73fe:	2a 15       	cp	r18, r10
    7400:	3b 05       	cpc	r19, r11
    7402:	0c f4       	brge	.+2      	; 0x7406 <_Z22Day_In_Bet_Schedullinghhh+0x22e>
    7404:	69 c1       	rjmp	.+722    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7406:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    740a:	81 30       	cpi	r24, 0x01	; 1
    740c:	09 f0       	breq	.+2      	; 0x7410 <_Z22Day_In_Bet_Schedullinghhh+0x238>
    740e:	65 c3       	rjmp	.+1738   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7410:	6e e5       	ldi	r22, 0x5E	; 94
    7412:	79 e1       	ldi	r23, 0x19	; 25
    7414:	d7 cf       	rjmp	.-82     	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7416:	91 30       	cpi	r25, 0x01	; 1
    7418:	51 f4       	brne	.+20     	; 0x742e <_Z22Day_In_Bet_Schedullinghhh+0x256>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    741a:	61 e5       	ldi	r22, 0x51	; 81
    741c:	79 e1       	ldi	r23, 0x19	; 25
    741e:	86 ec       	ldi	r24, 0xC6	; 198
    7420:	94 e1       	ldi	r25, 0x14	; 20
    7422:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7426:	86 ec       	ldi	r24, 0xC6	; 198
    7428:	94 e1       	ldi	r25, 0x14	; 20
    742a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    742e:	d4 30       	cpi	r29, 0x04	; 4
    7430:	09 f0       	breq	.+2      	; 0x7434 <_Z22Day_In_Bet_Schedullinghhh+0x25c>
    7432:	53 c3       	rjmp	.+1702   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7434:	8f e1       	ldi	r24, 0x1F	; 31
    7436:	8f 19       	sub	r24, r15
    7438:	98 01       	movw	r18, r16
    743a:	28 0f       	add	r18, r24
    743c:	31 1d       	adc	r19, r1
    743e:	2a 15       	cp	r18, r10
    7440:	3b 05       	cpc	r19, r11
    7442:	0c f4       	brge	.+2      	; 0x7446 <_Z22Day_In_Bet_Schedullinghhh+0x26e>
    7444:	49 c1       	rjmp	.+658    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7446:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    744a:	81 30       	cpi	r24, 0x01	; 1
    744c:	09 f0       	breq	.+2      	; 0x7450 <_Z22Day_In_Bet_Schedullinghhh+0x278>
    744e:	45 c3       	rjmp	.+1674   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7450:	64 e4       	ldi	r22, 0x44	; 68
    7452:	79 e1       	ldi	r23, 0x19	; 25
    7454:	b7 cf       	rjmp	.-146    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7456:	91 30       	cpi	r25, 0x01	; 1
    7458:	51 f4       	brne	.+20     	; 0x746e <_Z22Day_In_Bet_Schedullinghhh+0x296>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    745a:	67 e3       	ldi	r22, 0x37	; 55
    745c:	79 e1       	ldi	r23, 0x19	; 25
    745e:	86 ec       	ldi	r24, 0xC6	; 198
    7460:	94 e1       	ldi	r25, 0x14	; 20
    7462:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7466:	86 ec       	ldi	r24, 0xC6	; 198
    7468:	94 e1       	ldi	r25, 0x14	; 20
    746a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    746e:	d6 30       	cpi	r29, 0x06	; 6
    7470:	09 f0       	breq	.+2      	; 0x7474 <_Z22Day_In_Bet_Schedullinghhh+0x29c>
    7472:	33 c3       	rjmp	.+1638   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7474:	8f e1       	ldi	r24, 0x1F	; 31
    7476:	8f 19       	sub	r24, r15
    7478:	98 01       	movw	r18, r16
    747a:	28 0f       	add	r18, r24
    747c:	31 1d       	adc	r19, r1
    747e:	2a 15       	cp	r18, r10
    7480:	3b 05       	cpc	r19, r11
    7482:	0c f4       	brge	.+2      	; 0x7486 <_Z22Day_In_Bet_Schedullinghhh+0x2ae>
    7484:	29 c1       	rjmp	.+594    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7486:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    748a:	81 30       	cpi	r24, 0x01	; 1
    748c:	09 f0       	breq	.+2      	; 0x7490 <_Z22Day_In_Bet_Schedullinghhh+0x2b8>
    748e:	25 c3       	rjmp	.+1610   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7490:	6a e2       	ldi	r22, 0x2A	; 42
    7492:	79 e1       	ldi	r23, 0x19	; 25
    7494:	97 cf       	rjmp	.-210    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7496:	91 30       	cpi	r25, 0x01	; 1
    7498:	51 f4       	brne	.+20     	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x2d6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    749a:	6d e1       	ldi	r22, 0x1D	; 29
    749c:	79 e1       	ldi	r23, 0x19	; 25
    749e:	86 ec       	ldi	r24, 0xC6	; 198
    74a0:	94 e1       	ldi	r25, 0x14	; 20
    74a2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74a6:	86 ec       	ldi	r24, 0xC6	; 198
    74a8:	94 e1       	ldi	r25, 0x14	; 20
    74aa:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    74ae:	d8 30       	cpi	r29, 0x08	; 8
    74b0:	09 f0       	breq	.+2      	; 0x74b4 <_Z22Day_In_Bet_Schedullinghhh+0x2dc>
    74b2:	13 c3       	rjmp	.+1574   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    74b4:	8f e1       	ldi	r24, 0x1F	; 31
    74b6:	8f 19       	sub	r24, r15
    74b8:	98 01       	movw	r18, r16
    74ba:	28 0f       	add	r18, r24
    74bc:	31 1d       	adc	r19, r1
    74be:	2a 15       	cp	r18, r10
    74c0:	3b 05       	cpc	r19, r11
    74c2:	0c f4       	brge	.+2      	; 0x74c6 <_Z22Day_In_Bet_Schedullinghhh+0x2ee>
    74c4:	09 c1       	rjmp	.+530    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    74c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    74ca:	81 30       	cpi	r24, 0x01	; 1
    74cc:	09 f0       	breq	.+2      	; 0x74d0 <_Z22Day_In_Bet_Schedullinghhh+0x2f8>
    74ce:	05 c3       	rjmp	.+1546   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    74d0:	60 e1       	ldi	r22, 0x10	; 16
    74d2:	79 e1       	ldi	r23, 0x19	; 25
    74d4:	77 cf       	rjmp	.-274    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    74d6:	91 30       	cpi	r25, 0x01	; 1
    74d8:	51 f4       	brne	.+20     	; 0x74ee <_Z22Day_In_Bet_Schedullinghhh+0x316>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    74da:	63 e0       	ldi	r22, 0x03	; 3
    74dc:	79 e1       	ldi	r23, 0x19	; 25
    74de:	86 ec       	ldi	r24, 0xC6	; 198
    74e0:	94 e1       	ldi	r25, 0x14	; 20
    74e2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74e6:	86 ec       	ldi	r24, 0xC6	; 198
    74e8:	94 e1       	ldi	r25, 0x14	; 20
    74ea:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    74ee:	d9 30       	cpi	r29, 0x09	; 9
    74f0:	09 f0       	breq	.+2      	; 0x74f4 <_Z22Day_In_Bet_Schedullinghhh+0x31c>
    74f2:	f3 c2       	rjmp	.+1510   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    74f4:	8f e1       	ldi	r24, 0x1F	; 31
    74f6:	8f 19       	sub	r24, r15
    74f8:	98 01       	movw	r18, r16
    74fa:	28 0f       	add	r18, r24
    74fc:	31 1d       	adc	r19, r1
    74fe:	2a 15       	cp	r18, r10
    7500:	3b 05       	cpc	r19, r11
    7502:	0c f4       	brge	.+2      	; 0x7506 <_Z22Day_In_Bet_Schedullinghhh+0x32e>
    7504:	e9 c0       	rjmp	.+466    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7506:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    750a:	81 30       	cpi	r24, 0x01	; 1
    750c:	09 f0       	breq	.+2      	; 0x7510 <_Z22Day_In_Bet_Schedullinghhh+0x338>
    750e:	e5 c2       	rjmp	.+1482   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7510:	66 ef       	ldi	r22, 0xF6	; 246
    7512:	78 e1       	ldi	r23, 0x18	; 24
    7514:	57 cf       	rjmp	.-338    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7516:	91 30       	cpi	r25, 0x01	; 1
    7518:	51 f4       	brne	.+20     	; 0x752e <_Z22Day_In_Bet_Schedullinghhh+0x356>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    751a:	69 ee       	ldi	r22, 0xE9	; 233
    751c:	78 e1       	ldi	r23, 0x18	; 24
    751e:	86 ec       	ldi	r24, 0xC6	; 198
    7520:	94 e1       	ldi	r25, 0x14	; 20
    7522:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7526:	86 ec       	ldi	r24, 0xC6	; 198
    7528:	94 e1       	ldi	r25, 0x14	; 20
    752a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    752e:	db 30       	cpi	r29, 0x0B	; 11
    7530:	09 f0       	breq	.+2      	; 0x7534 <_Z22Day_In_Bet_Schedullinghhh+0x35c>
    7532:	d3 c2       	rjmp	.+1446   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7534:	8f e1       	ldi	r24, 0x1F	; 31
    7536:	8f 19       	sub	r24, r15
    7538:	98 01       	movw	r18, r16
    753a:	28 0f       	add	r18, r24
    753c:	31 1d       	adc	r19, r1
    753e:	2a 15       	cp	r18, r10
    7540:	3b 05       	cpc	r19, r11
    7542:	0c f4       	brge	.+2      	; 0x7546 <_Z22Day_In_Bet_Schedullinghhh+0x36e>
    7544:	c9 c0       	rjmp	.+402    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7546:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    754a:	81 30       	cpi	r24, 0x01	; 1
    754c:	09 f0       	breq	.+2      	; 0x7550 <_Z22Day_In_Bet_Schedullinghhh+0x378>
    754e:	c5 c2       	rjmp	.+1418   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7550:	6c ed       	ldi	r22, 0xDC	; 220
    7552:	78 e1       	ldi	r23, 0x18	; 24
    7554:	37 cf       	rjmp	.-402    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    7556:	8e 2d       	mov	r24, r14
    7558:	83 70       	andi	r24, 0x03	; 3
    755a:	01 f1       	breq	.+64     	; 0x759c <_Z22Day_In_Bet_Schedullinghhh+0x3c4>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    755c:	91 30       	cpi	r25, 0x01	; 1
    755e:	51 f4       	brne	.+20     	; 0x7574 <_Z22Day_In_Bet_Schedullinghhh+0x39c>
						{
							_kSERAIL_MON_WRITE("day in btw 4");
    7560:	6f ec       	ldi	r22, 0xCF	; 207
    7562:	78 e1       	ldi	r23, 0x18	; 24
    7564:	86 ec       	ldi	r24, 0xC6	; 198
    7566:	94 e1       	ldi	r25, 0x14	; 20
    7568:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    756c:	86 ec       	ldi	r24, 0xC6	; 198
    756e:	94 e1       	ldi	r25, 0x14	; 20
    7570:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    7574:	d3 30       	cpi	r29, 0x03	; 3
    7576:	09 f0       	breq	.+2      	; 0x757a <_Z22Day_In_Bet_Schedullinghhh+0x3a2>
    7578:	b0 c2       	rjmp	.+1376   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    757a:	8c e1       	ldi	r24, 0x1C	; 28
    757c:	8f 19       	sub	r24, r15
    757e:	98 01       	movw	r18, r16
    7580:	28 0f       	add	r18, r24
    7582:	31 1d       	adc	r19, r1
    7584:	2a 15       	cp	r18, r10
    7586:	3b 05       	cpc	r19, r11
    7588:	0c f4       	brge	.+2      	; 0x758c <_Z22Day_In_Bet_Schedullinghhh+0x3b4>
    758a:	a6 c0       	rjmp	.+332    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    758c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7590:	81 30       	cpi	r24, 0x01	; 1
    7592:	09 f0       	breq	.+2      	; 0x7596 <_Z22Day_In_Bet_Schedullinghhh+0x3be>
    7594:	a2 c2       	rjmp	.+1348   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 5");
    7596:	62 ec       	ldi	r22, 0xC2	; 194
    7598:	78 e1       	ldi	r23, 0x18	; 24
    759a:	14 cf       	rjmp	.-472    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
							return 2;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    759c:	91 30       	cpi	r25, 0x01	; 1
    759e:	51 f4       	brne	.+20     	; 0x75b4 <_Z22Day_In_Bet_Schedullinghhh+0x3dc>
						{
							_kSERAIL_MON_WRITE("day in btw 6");
    75a0:	65 eb       	ldi	r22, 0xB5	; 181
    75a2:	78 e1       	ldi	r23, 0x18	; 24
    75a4:	86 ec       	ldi	r24, 0xC6	; 198
    75a6:	94 e1       	ldi	r25, 0x14	; 20
    75a8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    75ac:	86 ec       	ldi	r24, 0xC6	; 198
    75ae:	94 e1       	ldi	r25, 0x14	; 20
    75b0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    75b4:	d3 30       	cpi	r29, 0x03	; 3
    75b6:	09 f0       	breq	.+2      	; 0x75ba <_Z22Day_In_Bet_Schedullinghhh+0x3e2>
    75b8:	90 c2       	rjmp	.+1312   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    75ba:	8d e1       	ldi	r24, 0x1D	; 29
    75bc:	8f 19       	sub	r24, r15
    75be:	98 01       	movw	r18, r16
    75c0:	28 0f       	add	r18, r24
    75c2:	31 1d       	adc	r19, r1
    75c4:	2a 15       	cp	r18, r10
    75c6:	3b 05       	cpc	r19, r11
    75c8:	0c f4       	brge	.+2      	; 0x75cc <_Z22Day_In_Bet_Schedullinghhh+0x3f4>
    75ca:	86 c0       	rjmp	.+268    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    75cc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    75d0:	81 30       	cpi	r24, 0x01	; 1
    75d2:	09 f0       	breq	.+2      	; 0x75d6 <_Z22Day_In_Bet_Schedullinghhh+0x3fe>
    75d4:	82 c2       	rjmp	.+1284   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 7");
    75d6:	68 ea       	ldi	r22, 0xA8	; 168
    75d8:	78 e1       	ldi	r23, 0x18	; 24
    75da:	f4 ce       	rjmp	.-536    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75dc:	91 30       	cpi	r25, 0x01	; 1
    75de:	51 f4       	brne	.+20     	; 0x75f4 <_Z22Day_In_Bet_Schedullinghhh+0x41c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    75e0:	6b e9       	ldi	r22, 0x9B	; 155
    75e2:	78 e1       	ldi	r23, 0x18	; 24
    75e4:	86 ec       	ldi	r24, 0xC6	; 198
    75e6:	94 e1       	ldi	r25, 0x14	; 20
    75e8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    75ec:	86 ec       	ldi	r24, 0xC6	; 198
    75ee:	94 e1       	ldi	r25, 0x14	; 20
    75f0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    75f4:	d5 30       	cpi	r29, 0x05	; 5
    75f6:	09 f0       	breq	.+2      	; 0x75fa <_Z22Day_In_Bet_Schedullinghhh+0x422>
    75f8:	70 c2       	rjmp	.+1248   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    75fa:	8e e1       	ldi	r24, 0x1E	; 30
    75fc:	8f 19       	sub	r24, r15
    75fe:	98 01       	movw	r18, r16
    7600:	28 0f       	add	r18, r24
    7602:	31 1d       	adc	r19, r1
    7604:	2a 15       	cp	r18, r10
    7606:	3b 05       	cpc	r19, r11
    7608:	0c f4       	brge	.+2      	; 0x760c <_Z22Day_In_Bet_Schedullinghhh+0x434>
    760a:	66 c0       	rjmp	.+204    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    760c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7610:	81 30       	cpi	r24, 0x01	; 1
    7612:	09 f0       	breq	.+2      	; 0x7616 <_Z22Day_In_Bet_Schedullinghhh+0x43e>
    7614:	62 c2       	rjmp	.+1220   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7616:	6e e8       	ldi	r22, 0x8E	; 142
    7618:	78 e1       	ldi	r23, 0x18	; 24
    761a:	d4 ce       	rjmp	.-600    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    761c:	91 30       	cpi	r25, 0x01	; 1
    761e:	51 f4       	brne	.+20     	; 0x7634 <_Z22Day_In_Bet_Schedullinghhh+0x45c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7620:	61 e8       	ldi	r22, 0x81	; 129
    7622:	78 e1       	ldi	r23, 0x18	; 24
    7624:	86 ec       	ldi	r24, 0xC6	; 198
    7626:	94 e1       	ldi	r25, 0x14	; 20
    7628:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    762c:	86 ec       	ldi	r24, 0xC6	; 198
    762e:	94 e1       	ldi	r25, 0x14	; 20
    7630:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    7634:	d7 30       	cpi	r29, 0x07	; 7
    7636:	09 f0       	breq	.+2      	; 0x763a <_Z22Day_In_Bet_Schedullinghhh+0x462>
    7638:	50 c2       	rjmp	.+1184   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    763a:	8e e1       	ldi	r24, 0x1E	; 30
    763c:	8f 19       	sub	r24, r15
    763e:	98 01       	movw	r18, r16
    7640:	28 0f       	add	r18, r24
    7642:	31 1d       	adc	r19, r1
    7644:	2a 15       	cp	r18, r10
    7646:	3b 05       	cpc	r19, r11
    7648:	0c f4       	brge	.+2      	; 0x764c <_Z22Day_In_Bet_Schedullinghhh+0x474>
    764a:	46 c0       	rjmp	.+140    	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    764c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7650:	81 30       	cpi	r24, 0x01	; 1
    7652:	09 f0       	breq	.+2      	; 0x7656 <_Z22Day_In_Bet_Schedullinghhh+0x47e>
    7654:	42 c2       	rjmp	.+1156   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7656:	64 e7       	ldi	r22, 0x74	; 116
    7658:	78 e1       	ldi	r23, 0x18	; 24
    765a:	b4 ce       	rjmp	.-664    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    765c:	91 30       	cpi	r25, 0x01	; 1
    765e:	51 f4       	brne	.+20     	; 0x7674 <_Z22Day_In_Bet_Schedullinghhh+0x49c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7660:	67 e6       	ldi	r22, 0x67	; 103
    7662:	78 e1       	ldi	r23, 0x18	; 24
    7664:	86 ec       	ldi	r24, 0xC6	; 198
    7666:	94 e1       	ldi	r25, 0x14	; 20
    7668:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    766c:	86 ec       	ldi	r24, 0xC6	; 198
    766e:	94 e1       	ldi	r25, 0x14	; 20
    7670:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    7674:	da 30       	cpi	r29, 0x0A	; 10
    7676:	09 f0       	breq	.+2      	; 0x767a <_Z22Day_In_Bet_Schedullinghhh+0x4a2>
    7678:	30 c2       	rjmp	.+1120   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    767a:	8e e1       	ldi	r24, 0x1E	; 30
    767c:	8f 19       	sub	r24, r15
    767e:	98 01       	movw	r18, r16
    7680:	28 0f       	add	r18, r24
    7682:	31 1d       	adc	r19, r1
    7684:	2a 15       	cp	r18, r10
    7686:	3b 05       	cpc	r19, r11
    7688:	3c f1       	brlt	.+78     	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    768a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    768e:	81 30       	cpi	r24, 0x01	; 1
    7690:	09 f0       	breq	.+2      	; 0x7694 <_Z22Day_In_Bet_Schedullinghhh+0x4bc>
    7692:	23 c2       	rjmp	.+1094   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7694:	6a e5       	ldi	r22, 0x5A	; 90
    7696:	78 e1       	ldi	r23, 0x18	; 24
    7698:	95 ce       	rjmp	.-726    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
						return 2;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    769a:	91 30       	cpi	r25, 0x01	; 1
    769c:	51 f4       	brne	.+20     	; 0x76b2 <_Z22Day_In_Bet_Schedullinghhh+0x4da>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    769e:	6d e4       	ldi	r22, 0x4D	; 77
    76a0:	78 e1       	ldi	r23, 0x18	; 24
    76a2:	86 ec       	ldi	r24, 0xC6	; 198
    76a4:	94 e1       	ldi	r25, 0x14	; 20
    76a6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    76aa:	86 ec       	ldi	r24, 0xC6	; 198
    76ac:	94 e1       	ldi	r25, 0x14	; 20
    76ae:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    76b2:	dc 30       	cpi	r29, 0x0C	; 12
    76b4:	09 f0       	breq	.+2      	; 0x76b8 <_Z22Day_In_Bet_Schedullinghhh+0x4e0>
    76b6:	11 c2       	rjmp	.+1058   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    76b8:	8e e1       	ldi	r24, 0x1E	; 30
    76ba:	8f 19       	sub	r24, r15
    76bc:	98 01       	movw	r18, r16
    76be:	28 0f       	add	r18, r24
    76c0:	31 1d       	adc	r19, r1
    76c2:	2a 15       	cp	r18, r10
    76c4:	3b 05       	cpc	r19, r11
    76c6:	44 f0       	brlt	.+16     	; 0x76d8 <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    76c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    76cc:	81 30       	cpi	r24, 0x01	; 1
    76ce:	09 f0       	breq	.+2      	; 0x76d2 <_Z22Day_In_Bet_Schedullinghhh+0x4fa>
    76d0:	04 c2       	rjmp	.+1032   	; 0x7ada <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    76d2:	60 e4       	ldi	r22, 0x40	; 64
    76d4:	78 e1       	ldi	r23, 0x18	; 24
    76d6:	76 ce       	rjmp	.-788    	; 0x73c4 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    76d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    76dc:	81 30       	cpi	r24, 0x01	; 1
    76de:	21 f5       	brne	.+72     	; 0x7728 <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 10");
    76e0:	62 e3       	ldi	r22, 0x32	; 50
    76e2:	78 e1       	ldi	r23, 0x18	; 24
    76e4:	04 c0       	rjmp	.+8      	; 0x76ee <_Z22Day_In_Bet_Schedullinghhh+0x516>
				_kSERIAL_MON_CLEAR();
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    76e6:	91 30       	cpi	r25, 0x01	; 1
    76e8:	f9 f4       	brne	.+62     	; 0x7728 <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 11");
    76ea:	64 e2       	ldi	r22, 0x24	; 36
    76ec:	78 e1       	ldi	r23, 0x18	; 24
    76ee:	86 ec       	ldi	r24, 0xC6	; 198
    76f0:	94 e1       	ldi	r25, 0x14	; 20
    76f2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    76f6:	86 ec       	ldi	r24, 0xC6	; 198
    76f8:	94 e1       	ldi	r25, 0x14	; 20
    76fa:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
	//printf("\n");
	
	Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    76fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7702:	81 30       	cpi	r24, 0x01	; 1
    7704:	89 f4       	brne	.+34     	; 0x7728 <_Z22Day_In_Bet_Schedullinghhh+0x550>
	{
		_kSERAIL_MON_WRITE("No of days in bet 1: ");
    7706:	6e e0       	ldi	r22, 0x0E	; 14
    7708:	78 e1       	ldi	r23, 0x18	; 24
    770a:	86 ec       	ldi	r24, 0xC6	; 198
    770c:	94 e1       	ldi	r25, 0x14	; 20
    770e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    7712:	4a e0       	ldi	r20, 0x0A	; 10
    7714:	50 e0       	ldi	r21, 0x00	; 0
    7716:	6c 2d       	mov	r22, r12
    7718:	86 ec       	ldi	r24, 0xC6	; 198
    771a:	94 e1       	ldi	r25, 0x14	; 20
    771c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7720:	86 ec       	ldi	r24, 0xC6	; 198
    7722:	94 e1       	ldi	r25, 0x14	; 20
    7724:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    7728:	d1 2c       	mov	r13, r1
    772a:	8c 0c       	add	r8, r12
    772c:	9d 1c       	adc	r9, r13
    772e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7732:	08 15       	cp	r16, r8
    7734:	19 05       	cpc	r17, r9
    7736:	4c f0       	brlt	.+18     	; 0x774a <_Z22Day_In_Bet_Schedullinghhh+0x572>
    7738:	d7 11       	cpse	r29, r7
    773a:	0a c0       	rjmp	.+20     	; 0x7750 <_Z22Day_In_Bet_Schedullinghhh+0x578>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    773c:	c1 30       	cpi	r28, 0x01	; 1
    773e:	11 f0       	breq	.+4      	; 0x7744 <_Z22Day_In_Bet_Schedullinghhh+0x56c>
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 1;
    7740:	c1 e0       	ldi	r28, 0x01	; 1
    7742:	ce c1       	rjmp	.+924    	; 0x7ae0 <_Z22Day_In_Bet_Schedullinghhh+0x908>
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
    7744:	6f ef       	ldi	r22, 0xFF	; 255
    7746:	77 e1       	ldi	r23, 0x17	; 23
    7748:	84 c1       	rjmp	.+776    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
		
		return 1;
	}
	else
	{
		if(last_schedule_month != month)
    774a:	d7 15       	cp	r29, r7
    774c:	09 f4       	brne	.+2      	; 0x7750 <_Z22Day_In_Bet_Schedullinghhh+0x578>
    774e:	b7 c1       	rjmp	.+878    	; 0x7abe <_Z22Day_In_Bet_Schedullinghhh+0x8e6>
		{
			switch(last_schedule_month)
    7750:	47 2d       	mov	r20, r7
    7752:	50 e0       	ldi	r21, 0x00	; 0
    7754:	fa 01       	movw	r30, r20
    7756:	31 97       	sbiw	r30, 0x01	; 1
    7758:	ec 30       	cpi	r30, 0x0C	; 12
    775a:	f1 05       	cpc	r31, r1
    775c:	08 f0       	brcs	.+2      	; 0x7760 <_Z22Day_In_Bet_Schedullinghhh+0x588>
    775e:	a0 c1       	rjmp	.+832    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
    7760:	88 27       	eor	r24, r24
    7762:	eb 53       	subi	r30, 0x3B	; 59
    7764:	ff 4f       	sbci	r31, 0xFF	; 255
    7766:	8f 4f       	sbci	r24, 0xFF	; 255
    7768:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    776c:	c1 30       	cpi	r28, 0x01	; 1
    776e:	51 f4       	brne	.+20     	; 0x7784 <_Z22Day_In_Bet_Schedullinghhh+0x5ac>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7770:	60 ef       	ldi	r22, 0xF0	; 240
    7772:	77 e1       	ldi	r23, 0x17	; 23
    7774:	86 ec       	ldi	r24, 0xC6	; 198
    7776:	94 e1       	ldi	r25, 0x14	; 20
    7778:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    777c:	86 ec       	ldi	r24, 0xC6	; 198
    777e:	94 e1       	ldi	r25, 0x14	; 20
    7780:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    7784:	d1 30       	cpi	r29, 0x01	; 1
    7786:	e1 f6       	brne	.-72     	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7788:	8f e1       	ldi	r24, 0x1F	; 31
    778a:	8f 19       	sub	r24, r15
    778c:	08 0f       	add	r16, r24
    778e:	11 1d       	adc	r17, r1
    7790:	0c 15       	cp	r16, r12
    7792:	1d 05       	cpc	r17, r13
    7794:	0c f4       	brge	.+2      	; 0x7798 <_Z22Day_In_Bet_Schedullinghhh+0x5c0>
    7796:	84 c1       	rjmp	.+776    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7798:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    779c:	c1 30       	cpi	r28, 0x01	; 1
    779e:	81 f6       	brne	.-96     	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    77a0:	61 ee       	ldi	r22, 0xE1	; 225
    77a2:	77 e1       	ldi	r23, 0x17	; 23
    77a4:	56 c1       	rjmp	.+684    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77a6:	c1 30       	cpi	r28, 0x01	; 1
    77a8:	51 f4       	brne	.+20     	; 0x77be <_Z22Day_In_Bet_Schedullinghhh+0x5e6>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    77aa:	62 ed       	ldi	r22, 0xD2	; 210
    77ac:	77 e1       	ldi	r23, 0x17	; 23
    77ae:	86 ec       	ldi	r24, 0xC6	; 198
    77b0:	94 e1       	ldi	r25, 0x14	; 20
    77b2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77b6:	86 ec       	ldi	r24, 0xC6	; 198
    77b8:	94 e1       	ldi	r25, 0x14	; 20
    77ba:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    77be:	d2 30       	cpi	r29, 0x02	; 2
    77c0:	09 f0       	breq	.+2      	; 0x77c4 <_Z22Day_In_Bet_Schedullinghhh+0x5ec>
    77c2:	be cf       	rjmp	.-132    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    77c4:	8f e1       	ldi	r24, 0x1F	; 31
    77c6:	8f 19       	sub	r24, r15
    77c8:	08 0f       	add	r16, r24
    77ca:	11 1d       	adc	r17, r1
    77cc:	0c 15       	cp	r16, r12
    77ce:	1d 05       	cpc	r17, r13
    77d0:	0c f4       	brge	.+2      	; 0x77d4 <_Z22Day_In_Bet_Schedullinghhh+0x5fc>
    77d2:	66 c1       	rjmp	.+716    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    77d4:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    77d8:	c1 30       	cpi	r28, 0x01	; 1
    77da:	09 f0       	breq	.+2      	; 0x77de <_Z22Day_In_Bet_Schedullinghhh+0x606>
    77dc:	b1 cf       	rjmp	.-158    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    77de:	63 ec       	ldi	r22, 0xC3	; 195
    77e0:	77 e1       	ldi	r23, 0x17	; 23
    77e2:	37 c1       	rjmp	.+622    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77e4:	c1 30       	cpi	r28, 0x01	; 1
    77e6:	51 f4       	brne	.+20     	; 0x77fc <_Z22Day_In_Bet_Schedullinghhh+0x624>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    77e8:	64 eb       	ldi	r22, 0xB4	; 180
    77ea:	77 e1       	ldi	r23, 0x17	; 23
    77ec:	86 ec       	ldi	r24, 0xC6	; 198
    77ee:	94 e1       	ldi	r25, 0x14	; 20
    77f0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77f4:	86 ec       	ldi	r24, 0xC6	; 198
    77f6:	94 e1       	ldi	r25, 0x14	; 20
    77f8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    77fc:	d4 30       	cpi	r29, 0x04	; 4
    77fe:	09 f0       	breq	.+2      	; 0x7802 <_Z22Day_In_Bet_Schedullinghhh+0x62a>
    7800:	9f cf       	rjmp	.-194    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7802:	8f e1       	ldi	r24, 0x1F	; 31
    7804:	8f 19       	sub	r24, r15
    7806:	08 0f       	add	r16, r24
    7808:	11 1d       	adc	r17, r1
    780a:	0c 15       	cp	r16, r12
    780c:	1d 05       	cpc	r17, r13
    780e:	0c f4       	brge	.+2      	; 0x7812 <_Z22Day_In_Bet_Schedullinghhh+0x63a>
    7810:	47 c1       	rjmp	.+654    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7812:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7816:	c1 30       	cpi	r28, 0x01	; 1
    7818:	09 f0       	breq	.+2      	; 0x781c <_Z22Day_In_Bet_Schedullinghhh+0x644>
    781a:	92 cf       	rjmp	.-220    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    781c:	65 ea       	ldi	r22, 0xA5	; 165
    781e:	77 e1       	ldi	r23, 0x17	; 23
    7820:	18 c1       	rjmp	.+560    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7822:	c1 30       	cpi	r28, 0x01	; 1
    7824:	51 f4       	brne	.+20     	; 0x783a <_Z22Day_In_Bet_Schedullinghhh+0x662>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7826:	66 e9       	ldi	r22, 0x96	; 150
    7828:	77 e1       	ldi	r23, 0x17	; 23
    782a:	86 ec       	ldi	r24, 0xC6	; 198
    782c:	94 e1       	ldi	r25, 0x14	; 20
    782e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7832:	86 ec       	ldi	r24, 0xC6	; 198
    7834:	94 e1       	ldi	r25, 0x14	; 20
    7836:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    783a:	d6 30       	cpi	r29, 0x06	; 6
    783c:	09 f0       	breq	.+2      	; 0x7840 <_Z22Day_In_Bet_Schedullinghhh+0x668>
    783e:	80 cf       	rjmp	.-256    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7840:	8f e1       	ldi	r24, 0x1F	; 31
    7842:	8f 19       	sub	r24, r15
    7844:	08 0f       	add	r16, r24
    7846:	11 1d       	adc	r17, r1
    7848:	0c 15       	cp	r16, r12
    784a:	1d 05       	cpc	r17, r13
    784c:	0c f4       	brge	.+2      	; 0x7850 <_Z22Day_In_Bet_Schedullinghhh+0x678>
    784e:	28 c1       	rjmp	.+592    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7850:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7854:	c1 30       	cpi	r28, 0x01	; 1
    7856:	09 f0       	breq	.+2      	; 0x785a <_Z22Day_In_Bet_Schedullinghhh+0x682>
    7858:	73 cf       	rjmp	.-282    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    785a:	67 e8       	ldi	r22, 0x87	; 135
    785c:	77 e1       	ldi	r23, 0x17	; 23
    785e:	f9 c0       	rjmp	.+498    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7860:	c1 30       	cpi	r28, 0x01	; 1
    7862:	51 f4       	brne	.+20     	; 0x7878 <_Z22Day_In_Bet_Schedullinghhh+0x6a0>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7864:	68 e7       	ldi	r22, 0x78	; 120
    7866:	77 e1       	ldi	r23, 0x17	; 23
    7868:	86 ec       	ldi	r24, 0xC6	; 198
    786a:	94 e1       	ldi	r25, 0x14	; 20
    786c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7870:	86 ec       	ldi	r24, 0xC6	; 198
    7872:	94 e1       	ldi	r25, 0x14	; 20
    7874:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    7878:	d8 30       	cpi	r29, 0x08	; 8
    787a:	09 f0       	breq	.+2      	; 0x787e <_Z22Day_In_Bet_Schedullinghhh+0x6a6>
    787c:	61 cf       	rjmp	.-318    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    787e:	8f e1       	ldi	r24, 0x1F	; 31
    7880:	8f 19       	sub	r24, r15
    7882:	08 0f       	add	r16, r24
    7884:	11 1d       	adc	r17, r1
    7886:	0c 15       	cp	r16, r12
    7888:	1d 05       	cpc	r17, r13
    788a:	0c f4       	brge	.+2      	; 0x788e <_Z22Day_In_Bet_Schedullinghhh+0x6b6>
    788c:	09 c1       	rjmp	.+530    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    788e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7892:	c1 30       	cpi	r28, 0x01	; 1
    7894:	09 f0       	breq	.+2      	; 0x7898 <_Z22Day_In_Bet_Schedullinghhh+0x6c0>
    7896:	54 cf       	rjmp	.-344    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7898:	69 e6       	ldi	r22, 0x69	; 105
    789a:	77 e1       	ldi	r23, 0x17	; 23
    789c:	da c0       	rjmp	.+436    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    789e:	c1 30       	cpi	r28, 0x01	; 1
    78a0:	51 f4       	brne	.+20     	; 0x78b6 <_Z22Day_In_Bet_Schedullinghhh+0x6de>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    78a2:	6a e5       	ldi	r22, 0x5A	; 90
    78a4:	77 e1       	ldi	r23, 0x17	; 23
    78a6:	86 ec       	ldi	r24, 0xC6	; 198
    78a8:	94 e1       	ldi	r25, 0x14	; 20
    78aa:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    78ae:	86 ec       	ldi	r24, 0xC6	; 198
    78b0:	94 e1       	ldi	r25, 0x14	; 20
    78b2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    78b6:	d9 30       	cpi	r29, 0x09	; 9
    78b8:	09 f0       	breq	.+2      	; 0x78bc <_Z22Day_In_Bet_Schedullinghhh+0x6e4>
    78ba:	42 cf       	rjmp	.-380    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    78bc:	8f e1       	ldi	r24, 0x1F	; 31
    78be:	8f 19       	sub	r24, r15
    78c0:	08 0f       	add	r16, r24
    78c2:	11 1d       	adc	r17, r1
    78c4:	0c 15       	cp	r16, r12
    78c6:	1d 05       	cpc	r17, r13
    78c8:	0c f4       	brge	.+2      	; 0x78cc <_Z22Day_In_Bet_Schedullinghhh+0x6f4>
    78ca:	ea c0       	rjmp	.+468    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    78cc:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    78d0:	c1 30       	cpi	r28, 0x01	; 1
    78d2:	09 f0       	breq	.+2      	; 0x78d6 <_Z22Day_In_Bet_Schedullinghhh+0x6fe>
    78d4:	35 cf       	rjmp	.-406    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    78d6:	6b e4       	ldi	r22, 0x4B	; 75
    78d8:	77 e1       	ldi	r23, 0x17	; 23
    78da:	bb c0       	rjmp	.+374    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    78dc:	c1 30       	cpi	r28, 0x01	; 1
    78de:	51 f4       	brne	.+20     	; 0x78f4 <_Z22Day_In_Bet_Schedullinghhh+0x71c>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    78e0:	6c e3       	ldi	r22, 0x3C	; 60
    78e2:	77 e1       	ldi	r23, 0x17	; 23
    78e4:	86 ec       	ldi	r24, 0xC6	; 198
    78e6:	94 e1       	ldi	r25, 0x14	; 20
    78e8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    78ec:	86 ec       	ldi	r24, 0xC6	; 198
    78ee:	94 e1       	ldi	r25, 0x14	; 20
    78f0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    78f4:	db 30       	cpi	r29, 0x0B	; 11
    78f6:	09 f0       	breq	.+2      	; 0x78fa <_Z22Day_In_Bet_Schedullinghhh+0x722>
    78f8:	23 cf       	rjmp	.-442    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    78fa:	8f e1       	ldi	r24, 0x1F	; 31
    78fc:	8f 19       	sub	r24, r15
    78fe:	08 0f       	add	r16, r24
    7900:	11 1d       	adc	r17, r1
    7902:	0c 15       	cp	r16, r12
    7904:	1d 05       	cpc	r17, r13
    7906:	0c f4       	brge	.+2      	; 0x790a <_Z22Day_In_Bet_Schedullinghhh+0x732>
    7908:	cb c0       	rjmp	.+406    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    790a:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    790e:	c1 30       	cpi	r28, 0x01	; 1
    7910:	09 f0       	breq	.+2      	; 0x7914 <_Z22Day_In_Bet_Schedullinghhh+0x73c>
    7912:	16 cf       	rjmp	.-468    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7914:	6d e2       	ldi	r22, 0x2D	; 45
    7916:	77 e1       	ldi	r23, 0x17	; 23
    7918:	9c c0       	rjmp	.+312    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    791a:	8e 2d       	mov	r24, r14
    791c:	83 70       	andi	r24, 0x03	; 3
    791e:	f9 f0       	breq	.+62     	; 0x795e <_Z22Day_In_Bet_Schedullinghhh+0x786>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7920:	c1 30       	cpi	r28, 0x01	; 1
    7922:	51 f4       	brne	.+20     	; 0x7938 <_Z22Day_In_Bet_Schedullinghhh+0x760>
						{
							_kSERAIL_MON_WRITE("day in btw 4.1");
    7924:	6e e1       	ldi	r22, 0x1E	; 30
    7926:	77 e1       	ldi	r23, 0x17	; 23
    7928:	86 ec       	ldi	r24, 0xC6	; 198
    792a:	94 e1       	ldi	r25, 0x14	; 20
    792c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7930:	86 ec       	ldi	r24, 0xC6	; 198
    7932:	94 e1       	ldi	r25, 0x14	; 20
    7934:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    7938:	d3 30       	cpi	r29, 0x03	; 3
    793a:	09 f0       	breq	.+2      	; 0x793e <_Z22Day_In_Bet_Schedullinghhh+0x766>
    793c:	01 cf       	rjmp	.-510    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    793e:	8c e1       	ldi	r24, 0x1C	; 28
    7940:	8f 19       	sub	r24, r15
    7942:	08 0f       	add	r16, r24
    7944:	11 1d       	adc	r17, r1
    7946:	0c 15       	cp	r16, r12
    7948:	1d 05       	cpc	r17, r13
    794a:	0c f4       	brge	.+2      	; 0x794e <_Z22Day_In_Bet_Schedullinghhh+0x776>
    794c:	a9 c0       	rjmp	.+338    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    794e:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7952:	c1 30       	cpi	r28, 0x01	; 1
    7954:	09 f0       	breq	.+2      	; 0x7958 <_Z22Day_In_Bet_Schedullinghhh+0x780>
    7956:	f4 ce       	rjmp	.-536    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 5.1");
    7958:	6f e0       	ldi	r22, 0x0F	; 15
    795a:	77 e1       	ldi	r23, 0x17	; 23
    795c:	7a c0       	rjmp	.+244    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
							return 1;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    795e:	c1 30       	cpi	r28, 0x01	; 1
    7960:	51 f4       	brne	.+20     	; 0x7976 <_Z22Day_In_Bet_Schedullinghhh+0x79e>
						{
							_kSERAIL_MON_WRITE("day in btw 6.1");
    7962:	60 e0       	ldi	r22, 0x00	; 0
    7964:	77 e1       	ldi	r23, 0x17	; 23
    7966:	86 ec       	ldi	r24, 0xC6	; 198
    7968:	94 e1       	ldi	r25, 0x14	; 20
    796a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    796e:	86 ec       	ldi	r24, 0xC6	; 198
    7970:	94 e1       	ldi	r25, 0x14	; 20
    7972:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    7976:	d3 30       	cpi	r29, 0x03	; 3
    7978:	09 f0       	breq	.+2      	; 0x797c <_Z22Day_In_Bet_Schedullinghhh+0x7a4>
    797a:	e2 ce       	rjmp	.-572    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    797c:	8d e1       	ldi	r24, 0x1D	; 29
    797e:	8f 19       	sub	r24, r15
    7980:	08 0f       	add	r16, r24
    7982:	11 1d       	adc	r17, r1
    7984:	0c 15       	cp	r16, r12
    7986:	1d 05       	cpc	r17, r13
    7988:	0c f4       	brge	.+2      	; 0x798c <_Z22Day_In_Bet_Schedullinghhh+0x7b4>
    798a:	8a c0       	rjmp	.+276    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    798c:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7990:	c1 30       	cpi	r28, 0x01	; 1
    7992:	09 f0       	breq	.+2      	; 0x7996 <_Z22Day_In_Bet_Schedullinghhh+0x7be>
    7994:	d5 ce       	rjmp	.-598    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 7.1");
    7996:	61 ef       	ldi	r22, 0xF1	; 241
    7998:	76 e1       	ldi	r23, 0x16	; 22
    799a:	5b c0       	rjmp	.+182    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    799c:	c1 30       	cpi	r28, 0x01	; 1
    799e:	51 f4       	brne	.+20     	; 0x79b4 <_Z22Day_In_Bet_Schedullinghhh+0x7dc>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    79a0:	62 ee       	ldi	r22, 0xE2	; 226
    79a2:	76 e1       	ldi	r23, 0x16	; 22
    79a4:	86 ec       	ldi	r24, 0xC6	; 198
    79a6:	94 e1       	ldi	r25, 0x14	; 20
    79a8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    79ac:	86 ec       	ldi	r24, 0xC6	; 198
    79ae:	94 e1       	ldi	r25, 0x14	; 20
    79b0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    79b4:	d5 30       	cpi	r29, 0x05	; 5
    79b6:	09 f0       	breq	.+2      	; 0x79ba <_Z22Day_In_Bet_Schedullinghhh+0x7e2>
    79b8:	c3 ce       	rjmp	.-634    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    79ba:	8e e1       	ldi	r24, 0x1E	; 30
    79bc:	8f 19       	sub	r24, r15
    79be:	08 0f       	add	r16, r24
    79c0:	11 1d       	adc	r17, r1
    79c2:	0c 15       	cp	r16, r12
    79c4:	1d 05       	cpc	r17, r13
    79c6:	0c f4       	brge	.+2      	; 0x79ca <_Z22Day_In_Bet_Schedullinghhh+0x7f2>
    79c8:	6b c0       	rjmp	.+214    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    79ca:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    79ce:	c1 30       	cpi	r28, 0x01	; 1
    79d0:	09 f0       	breq	.+2      	; 0x79d4 <_Z22Day_In_Bet_Schedullinghhh+0x7fc>
    79d2:	b6 ce       	rjmp	.-660    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    79d4:	63 ed       	ldi	r22, 0xD3	; 211
    79d6:	76 e1       	ldi	r23, 0x16	; 22
    79d8:	3c c0       	rjmp	.+120    	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    79da:	c1 30       	cpi	r28, 0x01	; 1
    79dc:	51 f4       	brne	.+20     	; 0x79f2 <_Z22Day_In_Bet_Schedullinghhh+0x81a>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    79de:	66 ec       	ldi	r22, 0xC6	; 198
    79e0:	76 e1       	ldi	r23, 0x16	; 22
    79e2:	86 ec       	ldi	r24, 0xC6	; 198
    79e4:	94 e1       	ldi	r25, 0x14	; 20
    79e6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    79ea:	86 ec       	ldi	r24, 0xC6	; 198
    79ec:	94 e1       	ldi	r25, 0x14	; 20
    79ee:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    79f2:	d7 30       	cpi	r29, 0x07	; 7
    79f4:	09 f0       	breq	.+2      	; 0x79f8 <_Z22Day_In_Bet_Schedullinghhh+0x820>
    79f6:	a4 ce       	rjmp	.-696    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    79f8:	8e e1       	ldi	r24, 0x1E	; 30
    79fa:	8f 19       	sub	r24, r15
    79fc:	08 0f       	add	r16, r24
    79fe:	11 1d       	adc	r17, r1
    7a00:	0c 15       	cp	r16, r12
    7a02:	1d 05       	cpc	r17, r13
    7a04:	0c f4       	brge	.+2      	; 0x7a08 <_Z22Day_In_Bet_Schedullinghhh+0x830>
    7a06:	4c c0       	rjmp	.+152    	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a08:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a0c:	c1 30       	cpi	r28, 0x01	; 1
    7a0e:	09 f0       	breq	.+2      	; 0x7a12 <_Z22Day_In_Bet_Schedullinghhh+0x83a>
    7a10:	97 ce       	rjmp	.-722    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7a12:	67 eb       	ldi	r22, 0xB7	; 183
    7a14:	76 e1       	ldi	r23, 0x16	; 22
    7a16:	1d c0       	rjmp	.+58     	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a18:	c1 30       	cpi	r28, 0x01	; 1
    7a1a:	51 f4       	brne	.+20     	; 0x7a30 <_Z22Day_In_Bet_Schedullinghhh+0x858>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7a1c:	6a ea       	ldi	r22, 0xAA	; 170
    7a1e:	76 e1       	ldi	r23, 0x16	; 22
    7a20:	86 ec       	ldi	r24, 0xC6	; 198
    7a22:	94 e1       	ldi	r25, 0x14	; 20
    7a24:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7a28:	86 ec       	ldi	r24, 0xC6	; 198
    7a2a:	94 e1       	ldi	r25, 0x14	; 20
    7a2c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    7a30:	da 30       	cpi	r29, 0x0A	; 10
    7a32:	09 f0       	breq	.+2      	; 0x7a36 <_Z22Day_In_Bet_Schedullinghhh+0x85e>
    7a34:	85 ce       	rjmp	.-758    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7a36:	8e e1       	ldi	r24, 0x1E	; 30
    7a38:	8f 19       	sub	r24, r15
    7a3a:	08 0f       	add	r16, r24
    7a3c:	11 1d       	adc	r17, r1
    7a3e:	0c 15       	cp	r16, r12
    7a40:	1d 05       	cpc	r17, r13
    7a42:	74 f1       	brlt	.+92     	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a44:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a48:	c1 30       	cpi	r28, 0x01	; 1
    7a4a:	09 f0       	breq	.+2      	; 0x7a4e <_Z22Day_In_Bet_Schedullinghhh+0x876>
    7a4c:	79 ce       	rjmp	.-782    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7a4e:	6b e9       	ldi	r22, 0x9B	; 155
    7a50:	76 e1       	ldi	r23, 0x16	; 22
    7a52:	86 ec       	ldi	r24, 0xC6	; 198
    7a54:	94 e1       	ldi	r25, 0x14	; 20
    7a56:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    7a5a:	86 ec       	ldi	r24, 0xC6	; 198
    7a5c:	94 e1       	ldi	r25, 0x14	; 20
    7a5e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    7a62:	3e c0       	rjmp	.+124    	; 0x7ae0 <_Z22Day_In_Bet_Schedullinghhh+0x908>
						return 1;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a64:	c1 30       	cpi	r28, 0x01	; 1
    7a66:	51 f4       	brne	.+20     	; 0x7a7c <_Z22Day_In_Bet_Schedullinghhh+0x8a4>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    7a68:	6c e8       	ldi	r22, 0x8C	; 140
    7a6a:	76 e1       	ldi	r23, 0x16	; 22
    7a6c:	86 ec       	ldi	r24, 0xC6	; 198
    7a6e:	94 e1       	ldi	r25, 0x14	; 20
    7a70:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7a74:	86 ec       	ldi	r24, 0xC6	; 198
    7a76:	94 e1       	ldi	r25, 0x14	; 20
    7a78:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7a7c:	dc 30       	cpi	r29, 0x0C	; 12
    7a7e:	09 f0       	breq	.+2      	; 0x7a82 <_Z22Day_In_Bet_Schedullinghhh+0x8aa>
    7a80:	5f ce       	rjmp	.-834    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7a82:	8e e1       	ldi	r24, 0x1E	; 30
    7a84:	8f 19       	sub	r24, r15
    7a86:	08 0f       	add	r16, r24
    7a88:	11 1d       	adc	r17, r1
    7a8a:	0c 15       	cp	r16, r12
    7a8c:	1d 05       	cpc	r17, r13
    7a8e:	44 f0       	brlt	.+16     	; 0x7aa0 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a90:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7a94:	c1 30       	cpi	r28, 0x01	; 1
    7a96:	09 f0       	breq	.+2      	; 0x7a9a <_Z22Day_In_Bet_Schedullinghhh+0x8c2>
    7a98:	53 ce       	rjmp	.-858    	; 0x7740 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7a9a:	6d e7       	ldi	r22, 0x7D	; 125
    7a9c:	76 e1       	ldi	r23, 0x16	; 22
    7a9e:	d9 cf       	rjmp	.-78     	; 0x7a52 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7aa0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7aa4:	81 30       	cpi	r24, 0x01	; 1
    7aa6:	c1 f4       	brne	.+48     	; 0x7ad8 <_Z22Day_In_Bet_Schedullinghhh+0x900>
			{
				_kSERAIL_MON_WRITE("day in btw 10.1");
    7aa8:	6d e6       	ldi	r22, 0x6D	; 109
    7aaa:	76 e1       	ldi	r23, 0x16	; 22
    7aac:	86 ec       	ldi	r24, 0xC6	; 198
    7aae:	94 e1       	ldi	r25, 0x14	; 20
    7ab0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7ab4:	86 ec       	ldi	r24, 0xC6	; 198
    7ab6:	94 e1       	ldi	r25, 0x14	; 20
    7ab8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    7abc:	0d c0       	rjmp	.+26     	; 0x7ad8 <_Z22Day_In_Bet_Schedullinghhh+0x900>
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7abe:	c1 30       	cpi	r28, 0x01	; 1
    7ac0:	71 f4       	brne	.+28     	; 0x7ade <_Z22Day_In_Bet_Schedullinghhh+0x906>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
    7ac2:	6d e5       	ldi	r22, 0x5D	; 93
    7ac4:	76 e1       	ldi	r23, 0x16	; 22
    7ac6:	86 ec       	ldi	r24, 0xC6	; 198
    7ac8:	94 e1       	ldi	r25, 0x14	; 20
    7aca:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7ace:	86 ec       	ldi	r24, 0xC6	; 198
    7ad0:	94 e1       	ldi	r25, 0x14	; 20
    7ad2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    7ad6:	03 c0       	rjmp	.+6      	; 0x7ade <_Z22Day_In_Bet_Schedullinghhh+0x906>
			return 0;
		}
		
	}
	
}	
    7ad8:	04 c0       	rjmp	.+8      	; 0x7ae2 <_Z22Day_In_Bet_Schedullinghhh+0x90a>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 2;
    7ada:	c2 e0       	ldi	r28, 0x02	; 2
    7adc:	01 c0       	rjmp	.+2      	; 0x7ae0 <_Z22Day_In_Bet_Schedullinghhh+0x908>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
				_kSERIAL_MON_CLEAR();
			}
			//printf("deny 4");
			return 0;
    7ade:	c0 e0       	ldi	r28, 0x00	; 0
    7ae0:	8c 2f       	mov	r24, r28
		}
		
	}
	
}	
    7ae2:	df 91       	pop	r29
    7ae4:	cf 91       	pop	r28
    7ae6:	1f 91       	pop	r17
    7ae8:	0f 91       	pop	r16
    7aea:	ff 90       	pop	r15
    7aec:	ef 90       	pop	r14
    7aee:	df 90       	pop	r13
    7af0:	cf 90       	pop	r12
    7af2:	bf 90       	pop	r11
    7af4:	af 90       	pop	r10
    7af6:	9f 90       	pop	r9
    7af8:	8f 90       	pop	r8
    7afa:	7f 90       	pop	r7
    7afc:	08 95       	ret

00007afe <_Z28Turn_Off_All_Tank_For_Safetyv>:
	
	return 1;
}

char Turn_Off_All_Tank_For_Safety(void)
{
    7afe:	8f 92       	push	r8
    7b00:	9f 92       	push	r9
    7b02:	af 92       	push	r10
    7b04:	bf 92       	push	r11
    7b06:	cf 92       	push	r12
    7b08:	df 92       	push	r13
    7b0a:	ef 92       	push	r14
    7b0c:	ff 92       	push	r15
    7b0e:	0f 93       	push	r16
    7b10:	1f 93       	push	r17
    7b12:	cf 93       	push	r28
    7b14:	df 93       	push	r29
    7b16:	cd b7       	in	r28, 0x3d	; 61
    7b18:	de b7       	in	r29, 0x3e	; 62
    7b1a:	aa 97       	sbiw	r28, 0x2a	; 42
    7b1c:	0f b6       	in	r0, 0x3f	; 63
    7b1e:	f8 94       	cli
    7b20:	de bf       	out	0x3e, r29	; 62
    7b22:	0f be       	out	0x3f, r0	; 63
    7b24:	cd bf       	out	0x3d, r28	; 61
	unsigned char tank_number_list[_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK], tank_number;
	
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
    7b26:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    7b2a:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    7b2e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    7b32:	9e 01       	movw	r18, r28
    7b34:	2f 5f       	subi	r18, 0xFF	; 255
    7b36:	3f 4f       	sbci	r19, 0xFF	; 255
    7b38:	69 01       	movw	r12, r18
    7b3a:	ce 01       	movw	r24, r28
    7b3c:	8b 96       	adiw	r24, 0x2b	; 43
    7b3e:	f9 01       	movw	r30, r18
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
	{
		tank_number_list[i] = 0;
    7b40:	11 92       	st	Z+, r1
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
    7b42:	e8 17       	cp	r30, r24
    7b44:	f9 07       	cpc	r31, r25
    7b46:	e1 f7       	brne	.-8      	; 0x7b40 <_Z28Turn_Off_All_Tank_For_Safetyv+0x42>
    7b48:	20 e0       	ldi	r18, 0x00	; 0
    7b4a:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
	{
		if(check_tank == 0)
    7b4c:	21 15       	cp	r18, r1
    7b4e:	31 05       	cpc	r19, r1
    7b50:	39 f4       	brne	.+14     	; 0x7b60 <_Z28Turn_Off_All_Tank_For_Safetyv+0x62>
		{
			if(tank_number_list[check_tank] == 0)
    7b52:	89 81       	ldd	r24, Y+1	; 0x01
    7b54:	81 11       	cpse	r24, r1
    7b56:	1a c0       	rjmp	.+52     	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
			{
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    7b58:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <_sSchedules+0x7a>
    7b5c:	89 83       	std	Y+1, r24	; 0x01
    7b5e:	16 c0       	rjmp	.+44     	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
    7b60:	f6 01       	movw	r30, r12
    7b62:	80 e0       	ldi	r24, 0x00	; 0
    7b64:	90 e0       	ldi	r25, 0x00	; 0
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
			{
				if(tank_number_list[check_tank2] == _sSchedules.Fertilizer_Tank_Number[check_tank])
    7b66:	d9 01       	movw	r26, r18
    7b68:	a8 56       	subi	r26, 0x68	; 104
    7b6a:	b6 4f       	sbci	r27, 0xF6	; 246
    7b6c:	41 91       	ld	r20, Z+
    7b6e:	5c 91       	ld	r21, X
    7b70:	45 17       	cp	r20, r21
    7b72:	61 f0       	breq	.+24     	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				{
					break;
				}
				if(tank_number_list[check_tank2] == 0)
    7b74:	41 11       	cpse	r20, r1
    7b76:	06 c0       	rjmp	.+12     	; 0x7b84 <_Z28Turn_Off_All_Tank_For_Safetyv+0x86>
				{
					tank_number_list[check_tank2] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    7b78:	4c 91       	ld	r20, X
    7b7a:	f6 01       	movw	r30, r12
    7b7c:	e8 0f       	add	r30, r24
    7b7e:	f9 1f       	adc	r31, r25
    7b80:	40 83       	st	Z, r20
					break;
    7b82:	04 c0       	rjmp	.+8      	; 0x7b8c <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
			}
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
    7b84:	01 96       	adiw	r24, 0x01	; 1
    7b86:	8a 32       	cpi	r24, 0x2A	; 42
    7b88:	91 05       	cpc	r25, r1
    7b8a:	81 f7       	brne	.-32     	; 0x7b6c <_Z28Turn_Off_All_Tank_For_Safetyv+0x6e>
	{
		tank_number_list[i] = 0;
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
    7b8c:	2f 5f       	subi	r18, 0xFF	; 255
    7b8e:	3f 4f       	sbci	r19, 0xFF	; 255
    7b90:	2a 32       	cpi	r18, 0x2A	; 42
    7b92:	31 05       	cpc	r19, r1
    7b94:	d9 f6       	brne	.-74     	; 0x7b4c <_Z28Turn_Off_All_Tank_For_Safetyv+0x4e>
					break;
				}
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7b96:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7b9a:	81 30       	cpi	r24, 0x01	; 1
    7b9c:	51 f4       	brne	.+20     	; 0x7bb2 <_Z28Turn_Off_All_Tank_For_Safetyv+0xb4>
	{
		_kSERAIL_MON_WRITE("tank number list");
    7b9e:	68 e3       	ldi	r22, 0x38	; 56
    7ba0:	7f e0       	ldi	r23, 0x0F	; 15
    7ba2:	86 ec       	ldi	r24, 0xC6	; 198
    7ba4:	94 e1       	ldi	r25, 0x14	; 20
    7ba6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7baa:	86 ec       	ldi	r24, 0xC6	; 198
    7bac:	94 e1       	ldi	r25, 0x14	; 20
    7bae:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7bb2:	8b e1       	ldi	r24, 0x1B	; 27
    7bb4:	e8 2e       	mov	r14, r24
						_kSERIAL_MON_CLEAR();
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7bb6:	92 e0       	ldi	r25, 0x02	; 2
    7bb8:	89 2e       	mov	r8, r25
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7bba:	25 e0       	ldi	r18, 0x05	; 5
    7bbc:	92 2e       	mov	r9, r18
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7bbe:	f6 01       	movw	r30, r12
    7bc0:	f1 90       	ld	r15, Z+
    7bc2:	6f 01       	movw	r12, r30
    7bc4:	ff 20       	and	r15, r15
    7bc6:	09 f4       	brne	.+2      	; 0x7bca <_Z28Turn_Off_All_Tank_For_Safetyv+0xcc>
    7bc8:	4c c0       	rjmp	.+152    	; 0x7c62 <_Z28Turn_Off_All_Tank_For_Safetyv+0x164>
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
    7bca:	4a e0       	ldi	r20, 0x0A	; 10
    7bcc:	50 e0       	ldi	r21, 0x00	; 0
    7bce:	6f 2d       	mov	r22, r15
    7bd0:	86 ec       	ldi	r24, 0xC6	; 198
    7bd2:	94 e1       	ldi	r25, 0x14	; 20
    7bd4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7bd8:	0f 2d       	mov	r16, r15
    7bda:	10 e0       	ldi	r17, 0x00	; 0
    7bdc:	05 56       	subi	r16, 0x65	; 101
    7bde:	11 09       	sbc	r17, r1
    7be0:	e0 9e       	mul	r14, r16
    7be2:	c0 01       	movw	r24, r0
    7be4:	e1 9e       	mul	r14, r17
    7be6:	90 0d       	add	r25, r0
    7be8:	11 24       	eor	r1, r1
    7bea:	9c 01       	movw	r18, r24
    7bec:	28 51       	subi	r18, 0x18	; 24
    7bee:	32 4f       	sbci	r19, 0xF2	; 242
    7bf0:	59 01       	movw	r10, r18
    7bf2:	f9 01       	movw	r30, r18
    7bf4:	80 81       	ld	r24, Z
    7bf6:	81 11       	cpse	r24, r1
    7bf8:	e2 cf       	rjmp	.-60     	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
		{
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM))
    7bfa:	6b e9       	ldi	r22, 0x9B	; 155
    7bfc:	6f 0d       	add	r22, r15
    7bfe:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7c02:	88 23       	and	r24, r24
    7c04:	e1 f2       	breq	.-72     	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			{
				//_kSERAIL_MON_WRITE("tank number list with tank number array : ");
				//_kSERIAL_MON_PRINT_NUM(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				
				if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7c06:	f5 01       	movw	r30, r10
    7c08:	82 81       	ldd	r24, Z+2	; 0x02
    7c0a:	85 30       	cpi	r24, 0x05	; 5
    7c0c:	c1 f2       	breq	.-80     	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7c0e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7c12:	81 30       	cpi	r24, 0x01	; 1
    7c14:	89 f4       	brne	.+34     	; 0x7c38 <_Z28Turn_Off_All_Tank_For_Safetyv+0x13a>
					{
						_kSERAIL_MON_WRITE("tank number gets to off safely");
    7c16:	69 e1       	ldi	r22, 0x19	; 25
    7c18:	7f e0       	ldi	r23, 0x0F	; 15
    7c1a:	86 ec       	ldi	r24, 0xC6	; 198
    7c1c:	94 e1       	ldi	r25, 0x14	; 20
    7c1e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM);
    7c22:	4a e0       	ldi	r20, 0x0A	; 10
    7c24:	50 e0       	ldi	r21, 0x00	; 0
    7c26:	b8 01       	movw	r22, r16
    7c28:	86 ec       	ldi	r24, 0xC6	; 198
    7c2a:	94 e1       	ldi	r25, 0x14	; 20
    7c2c:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
						_kSERIAL_MON_CLEAR();
    7c30:	86 ec       	ldi	r24, 0xC6	; 198
    7c32:	94 e1       	ldi	r25, 0x14	; 20
    7c34:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7c38:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    7c3c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    7c40:	90 62       	ori	r25, 0x20	; 32
    7c42:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    7c46:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
    7c4a:	f0 92 72 14 	sts	0x1472, r15	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7c4e:	e0 9e       	mul	r14, r16
    7c50:	f0 01       	movw	r30, r0
    7c52:	e1 9e       	mul	r14, r17
    7c54:	f0 0d       	add	r31, r0
    7c56:	11 24       	eor	r1, r1
    7c58:	e8 51       	subi	r30, 0x18	; 24
    7c5a:	f2 4f       	sbci	r31, 0xF2	; 242
    7c5c:	82 8e       	std	Z+26, r8	; 0x1a
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7c5e:	92 82       	std	Z+2, r9	; 0x02
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7c60:	ae cf       	rjmp	.-164    	; 0x7bbe <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			}
			//return 1;
		}
	}
	
}
    7c62:	aa 96       	adiw	r28, 0x2a	; 42
    7c64:	0f b6       	in	r0, 0x3f	; 63
    7c66:	f8 94       	cli
    7c68:	de bf       	out	0x3e, r29	; 62
    7c6a:	0f be       	out	0x3f, r0	; 63
    7c6c:	cd bf       	out	0x3d, r28	; 61
    7c6e:	df 91       	pop	r29
    7c70:	cf 91       	pop	r28
    7c72:	1f 91       	pop	r17
    7c74:	0f 91       	pop	r16
    7c76:	ff 90       	pop	r15
    7c78:	ef 90       	pop	r14
    7c7a:	df 90       	pop	r13
    7c7c:	cf 90       	pop	r12
    7c7e:	bf 90       	pop	r11
    7c80:	af 90       	pop	r10
    7c82:	9f 90       	pop	r9
    7c84:	8f 90       	pop	r8
    7c86:	08 95       	ret

00007c88 <_Z17Blower_Monitoringh>:

char Blower_Monitoring(unsigned char Forcefully_Off)
{	
    7c88:	cf 92       	push	r12
    7c8a:	df 92       	push	r13
    7c8c:	ef 92       	push	r14
    7c8e:	ff 92       	push	r15
    7c90:	0f 93       	push	r16
    7c92:	1f 93       	push	r17
	unsigned char tank_number,time_buffer;
	static unsigned char temp_number;
	
	if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Extra_Plot_Number == _kBLOWER_PLOT_NUMBER)
    7c94:	90 91 04 0e 	lds	r25, 0x0E04	; 0x800e04 <_sExtra_Plot+0x1c>
    7c98:	96 36       	cpi	r25, 0x66	; 102
    7c9a:	09 f0       	breq	.+2      	; 0x7c9e <_Z17Blower_Monitoringh+0x16>
    7c9c:	49 c0       	rjmp	.+146    	; 0x7d30 <_Z17Blower_Monitoringh+0xa8>
	{
		
		if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status == _kRESET)
    7c9e:	90 91 03 0e 	lds	r25, 0x0E03	; 0x800e03 <_sExtra_Plot+0x1b>
    7ca2:	91 11       	cpse	r25, r1
    7ca4:	45 c0       	rjmp	.+138    	; 0x7d30 <_Z17Blower_Monitoringh+0xa8>
		{
			if(Forcefully_Off == _kFORCEFULYY_OFF)
    7ca6:	83 30       	cpi	r24, 0x03	; 3
    7ca8:	09 f0       	breq	.+2      	; 0x7cac <_Z17Blower_Monitoringh+0x24>
    7caa:	42 c0       	rjmp	.+132    	; 0x7d30 <_Z17Blower_Monitoringh+0xa8>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7cac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7cb0:	81 30       	cpi	r24, 0x01	; 1
    7cb2:	51 f4       	brne	.+20     	; 0x7cc8 <_Z17Blower_Monitoringh+0x40>
				{
					_kSERAIL_MON_WRITE("blower gets 1.1 : ");
    7cb4:	66 e0       	ldi	r22, 0x06	; 6
    7cb6:	7f e0       	ldi	r23, 0x0F	; 15
    7cb8:	86 ec       	ldi	r24, 0xC6	; 198
    7cba:	94 e1       	ldi	r25, 0x14	; 20
    7cbc:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7cc0:	86 ec       	ldi	r24, 0xC6	; 198
    7cc2:	94 e1       	ldi	r25, 0x14	; 20
    7cc4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				
				_sSchedules.Blower_On_Scheduler_Status =_kOFF;
    7cc8:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
				_sSchedules.Blower_On_Retry = _kRESET;
    7ccc:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
				_sSchedules.Blower_On_Time = _kRESET;
    7cd0:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
				temp_number = 0;
				/* turn off blower */
				
				if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7cd4:	61 e0       	ldi	r22, 0x01	; 1
    7cd6:	80 e0       	ldi	r24, 0x00	; 0
    7cd8:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7cdc:	88 23       	and	r24, r24
    7cde:	21 f1       	breq	.+72     	; 0x7d28 <_Z17Blower_Monitoringh+0xa0>
				{
					//_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					//_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
					
					if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7ce0:	80 91 05 0e 	lds	r24, 0x0E05	; 0x800e05 <_sExtra_Plot+0x1d>
    7ce4:	85 30       	cpi	r24, 0x05	; 5
    7ce6:	01 f1       	breq	.+64     	; 0x7d28 <_Z17Blower_Monitoringh+0xa0>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7ce8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    7cec:	81 30       	cpi	r24, 0x01	; 1
    7cee:	51 f4       	brne	.+20     	; 0x7d04 <_Z17Blower_Monitoringh+0x7c>
						{
							_kSERAIL_MON_WRITE("blower gets 2.1 : ");
    7cf0:	63 ef       	ldi	r22, 0xF3	; 243
    7cf2:	7e e0       	ldi	r23, 0x0E	; 14
    7cf4:	86 ec       	ldi	r24, 0xC6	; 198
    7cf6:	94 e1       	ldi	r25, 0x14	; 20
    7cf8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7cfc:	86 ec       	ldi	r24, 0xC6	; 198
    7cfe:	94 e1       	ldi	r25, 0x14	; 20
    7d00:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7d04:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    7d08:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    7d0c:	90 62       	ori	r25, 0x20	; 32
    7d0e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    7d12:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7d16:	81 e0       	ldi	r24, 0x01	; 1
    7d18:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7d1c:	82 e0       	ldi	r24, 0x02	; 2
    7d1e:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7d22:	85 e0       	ldi	r24, 0x05	; 5
    7d24:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
					}
				}
				
				_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    7d28:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
				return 1;
    7d2c:	81 e0       	ldi	r24, 0x01	; 1
    7d2e:	d5 c1       	rjmp	.+938    	; 0x80da <_Z17Blower_Monitoringh+0x452>
				
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
    7d30:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d34:	90 e0       	ldi	r25, 0x00	; 0
    7d36:	01 97       	sbiw	r24, 0x01	; 1
    7d38:	fc 01       	movw	r30, r24
    7d3a:	ee 0f       	add	r30, r30
    7d3c:	ff 1f       	adc	r31, r31
    7d3e:	e8 0f       	add	r30, r24
    7d40:	f9 1f       	adc	r31, r25
    7d42:	ee 0f       	add	r30, r30
    7d44:	ff 1f       	adc	r31, r31
    7d46:	ed 53       	subi	r30, 0x3D	; 61
    7d48:	f6 4f       	sbci	r31, 0xF6	; 246
    7d4a:	20 81       	ld	r18, Z
    7d4c:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7d4e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d52:	90 e0       	ldi	r25, 0x00	; 0
    7d54:	01 97       	sbiw	r24, 0x01	; 1
    7d56:	fc 01       	movw	r30, r24
    7d58:	ee 0f       	add	r30, r30
    7d5a:	ff 1f       	adc	r31, r31
    7d5c:	e8 0f       	add	r30, r24
    7d5e:	f9 1f       	adc	r31, r25
    7d60:	ee 0f       	add	r30, r30
    7d62:	ff 1f       	adc	r31, r31
    7d64:	e7 5e       	subi	r30, 0xE7	; 231
    7d66:	f5 4f       	sbci	r31, 0xF5	; 245
    7d68:	40 81       	ld	r20, Z
    7d6a:	51 81       	ldd	r21, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
    7d6c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d70:	90 e0       	ldi	r25, 0x00	; 0
    7d72:	01 97       	sbiw	r24, 0x01	; 1
    7d74:	fc 01       	movw	r30, r24
    7d76:	ee 0f       	add	r30, r30
    7d78:	ff 1f       	adc	r31, r31
    7d7a:	8e 0f       	add	r24, r30
    7d7c:	9f 1f       	adc	r25, r31
    7d7e:	fc 01       	movw	r30, r24
    7d80:	e1 59       	subi	r30, 0x91	; 145
    7d82:	f5 4f       	sbci	r31, 0xF5	; 245
    7d84:	80 81       	ld	r24, Z
    7d86:	81 30       	cpi	r24, 0x01	; 1
    7d88:	29 f4       	brne	.+10     	; 0x7d94 <_Z17Blower_Monitoringh+0x10c>
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7d8a:	42 0f       	add	r20, r18
    7d8c:	53 1f       	adc	r21, r19
    7d8e:	60 e0       	ldi	r22, 0x00	; 0
    7d90:	70 e0       	ldi	r23, 0x00	; 0
    7d92:	03 c0       	rjmp	.+6      	; 0x7d9a <_Z17Blower_Monitoringh+0x112>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
	{
		tank1_time = _kRESET;
    7d94:	40 e0       	ldi	r20, 0x00	; 0
    7d96:	50 e0       	ldi	r21, 0x00	; 0
    7d98:	ba 01       	movw	r22, r20
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
    7d9a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d9e:	90 e0       	ldi	r25, 0x00	; 0
    7da0:	01 97       	sbiw	r24, 0x01	; 1
    7da2:	fc 01       	movw	r30, r24
    7da4:	ee 0f       	add	r30, r30
    7da6:	ff 1f       	adc	r31, r31
    7da8:	e8 0f       	add	r30, r24
    7daa:	f9 1f       	adc	r31, r25
    7dac:	ee 0f       	add	r30, r30
    7dae:	ff 1f       	adc	r31, r31
    7db0:	eb 53       	subi	r30, 0x3B	; 59
    7db2:	f6 4f       	sbci	r31, 0xF6	; 246
    7db4:	20 81       	ld	r18, Z
    7db6:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7db8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7dbc:	90 e0       	ldi	r25, 0x00	; 0
    7dbe:	01 97       	sbiw	r24, 0x01	; 1
    7dc0:	fc 01       	movw	r30, r24
    7dc2:	ee 0f       	add	r30, r30
    7dc4:	ff 1f       	adc	r31, r31
    7dc6:	e8 0f       	add	r30, r24
    7dc8:	f9 1f       	adc	r31, r25
    7dca:	ee 0f       	add	r30, r30
    7dcc:	ff 1f       	adc	r31, r31
    7dce:	e5 5e       	subi	r30, 0xE5	; 229
    7dd0:	f5 4f       	sbci	r31, 0xF5	; 245
    7dd2:	c0 80       	ld	r12, Z
    7dd4:	d1 80       	ldd	r13, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
    7dd6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7dda:	90 e0       	ldi	r25, 0x00	; 0
    7ddc:	01 97       	sbiw	r24, 0x01	; 1
    7dde:	fc 01       	movw	r30, r24
    7de0:	ee 0f       	add	r30, r30
    7de2:	ff 1f       	adc	r31, r31
    7de4:	8e 0f       	add	r24, r30
    7de6:	9f 1f       	adc	r25, r31
    7de8:	fc 01       	movw	r30, r24
    7dea:	e0 59       	subi	r30, 0x90	; 144
    7dec:	f5 4f       	sbci	r31, 0xF5	; 245
    7dee:	80 81       	ld	r24, Z
    7df0:	81 30       	cpi	r24, 0x01	; 1
    7df2:	29 f4       	brne	.+10     	; 0x7dfe <_Z17Blower_Monitoringh+0x176>
	{
		tank1_time = _kRESET;
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7df4:	c2 0e       	add	r12, r18
    7df6:	d3 1e       	adc	r13, r19
    7df8:	e1 2c       	mov	r14, r1
    7dfa:	f1 2c       	mov	r15, r1
    7dfc:	03 c0       	rjmp	.+6      	; 0x7e04 <_Z17Blower_Monitoringh+0x17c>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
	{
		tank2_time = _kRESET;
    7dfe:	c1 2c       	mov	r12, r1
    7e00:	d1 2c       	mov	r13, r1
    7e02:	76 01       	movw	r14, r12
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
    7e04:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e08:	90 e0       	ldi	r25, 0x00	; 0
    7e0a:	01 97       	sbiw	r24, 0x01	; 1
    7e0c:	fc 01       	movw	r30, r24
    7e0e:	ee 0f       	add	r30, r30
    7e10:	ff 1f       	adc	r31, r31
    7e12:	e8 0f       	add	r30, r24
    7e14:	f9 1f       	adc	r31, r25
    7e16:	ee 0f       	add	r30, r30
    7e18:	ff 1f       	adc	r31, r31
    7e1a:	e9 53       	subi	r30, 0x39	; 57
    7e1c:	f6 4f       	sbci	r31, 0xF6	; 246
    7e1e:	20 81       	ld	r18, Z
    7e20:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7e22:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e26:	90 e0       	ldi	r25, 0x00	; 0
    7e28:	01 97       	sbiw	r24, 0x01	; 1
    7e2a:	fc 01       	movw	r30, r24
    7e2c:	ee 0f       	add	r30, r30
    7e2e:	ff 1f       	adc	r31, r31
    7e30:	e8 0f       	add	r30, r24
    7e32:	f9 1f       	adc	r31, r25
    7e34:	ee 0f       	add	r30, r30
    7e36:	ff 1f       	adc	r31, r31
    7e38:	e3 5e       	subi	r30, 0xE3	; 227
    7e3a:	f5 4f       	sbci	r31, 0xF5	; 245
    7e3c:	00 81       	ld	r16, Z
    7e3e:	11 81       	ldd	r17, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
    7e40:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e44:	90 e0       	ldi	r25, 0x00	; 0
    7e46:	01 97       	sbiw	r24, 0x01	; 1
    7e48:	fc 01       	movw	r30, r24
    7e4a:	ee 0f       	add	r30, r30
    7e4c:	ff 1f       	adc	r31, r31
    7e4e:	8e 0f       	add	r24, r30
    7e50:	9f 1f       	adc	r25, r31
    7e52:	fc 01       	movw	r30, r24
    7e54:	ef 58       	subi	r30, 0x8F	; 143
    7e56:	f5 4f       	sbci	r31, 0xF5	; 245
    7e58:	80 81       	ld	r24, Z
    7e5a:	81 30       	cpi	r24, 0x01	; 1
    7e5c:	29 f4       	brne	.+10     	; 0x7e68 <_Z17Blower_Monitoringh+0x1e0>
	{
		tank2_time = _kRESET;
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7e5e:	02 0f       	add	r16, r18
    7e60:	13 1f       	adc	r17, r19
    7e62:	20 e0       	ldi	r18, 0x00	; 0
    7e64:	30 e0       	ldi	r19, 0x00	; 0
    7e66:	03 c0       	rjmp	.+6      	; 0x7e6e <_Z17Blower_Monitoringh+0x1e6>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
	{
		tank3_time = _kRESET;
    7e68:	00 e0       	ldi	r16, 0x00	; 0
    7e6a:	10 e0       	ldi	r17, 0x00	; 0
    7e6c:	98 01       	movw	r18, r16
	}
	
	if(_sSchedules.Blower_On_Retry != 0 || _sSchedules.Scheduler_Retry_Timer != 0)
    7e6e:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    7e72:	81 11       	cpse	r24, r1
    7e74:	06 c0       	rjmp	.+12     	; 0x7e82 <_Z17Blower_Monitoringh+0x1fa>
    7e76:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    7e7a:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    7e7e:	89 2b       	or	r24, r25
    7e80:	11 f0       	breq	.+4      	; 0x7e86 <_Z17Blower_Monitoringh+0x1fe>
	{
		return 0;
    7e82:	80 e0       	ldi	r24, 0x00	; 0
    7e84:	2a c1       	rjmp	.+596    	; 0x80da <_Z17Blower_Monitoringh+0x452>
	_kSERAIL_MON_WRITE("tank2_time : ");
	_kSERIAL_MON_PRINT_NUM(tank2_time);
	_kSERAIL_MON_WRITE("tank3_time : ");
	_kSERIAL_MON_PRINT_NUM(tank3_time);*/
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
    7e86:	80 91 8b 0b 	lds	r24, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
    7e8a:	81 30       	cpi	r24, 0x01	; 1
    7e8c:	89 f1       	breq	.+98     	; 0x7ef0 <_Z17Blower_Monitoringh+0x268>
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
    7e8e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7e92:	90 e0       	ldi	r25, 0x00	; 0
    7e94:	01 97       	sbiw	r24, 0x01	; 1
    7e96:	fc 01       	movw	r30, r24
    7e98:	ee 0f       	add	r30, r30
    7e9a:	ff 1f       	adc	r31, r31
    7e9c:	8e 0f       	add	r24, r30
    7e9e:	9f 1f       	adc	r25, r31
    7ea0:	fc 01       	movw	r30, r24
    7ea2:	e1 59       	subi	r30, 0x91	; 145
    7ea4:	f5 4f       	sbci	r31, 0xF5	; 245
    7ea6:	80 81       	ld	r24, Z
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7ea8:	81 30       	cpi	r24, 0x01	; 1
    7eaa:	09 f4       	brne	.+2      	; 0x7eae <_Z17Blower_Monitoringh+0x226>
    7eac:	cf c0       	rjmp	.+414    	; 0x804c <_Z17Blower_Monitoringh+0x3c4>
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
    7eae:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7eb2:	90 e0       	ldi	r25, 0x00	; 0
    7eb4:	01 97       	sbiw	r24, 0x01	; 1
    7eb6:	fc 01       	movw	r30, r24
    7eb8:	ee 0f       	add	r30, r30
    7eba:	ff 1f       	adc	r31, r31
    7ebc:	8e 0f       	add	r24, r30
    7ebe:	9f 1f       	adc	r25, r31
    7ec0:	fc 01       	movw	r30, r24
    7ec2:	e0 59       	subi	r30, 0x90	; 144
    7ec4:	f5 4f       	sbci	r31, 0xF5	; 245
    7ec6:	80 81       	ld	r24, Z
    7ec8:	81 30       	cpi	r24, 0x01	; 1
    7eca:	09 f4       	brne	.+2      	; 0x7ece <_Z17Blower_Monitoringh+0x246>
    7ecc:	bf c0       	rjmp	.+382    	; 0x804c <_Z17Blower_Monitoringh+0x3c4>
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7ece:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7ed2:	90 e0       	ldi	r25, 0x00	; 0
    7ed4:	01 97       	sbiw	r24, 0x01	; 1
    7ed6:	fc 01       	movw	r30, r24
    7ed8:	ee 0f       	add	r30, r30
    7eda:	ff 1f       	adc	r31, r31
    7edc:	8e 0f       	add	r24, r30
    7ede:	9f 1f       	adc	r25, r31
    7ee0:	fc 01       	movw	r30, r24
    7ee2:	ef 58       	subi	r30, 0x8F	; 143
    7ee4:	f5 4f       	sbci	r31, 0xF5	; 245
    7ee6:	80 81       	ld	r24, Z
    7ee8:	81 30       	cpi	r24, 0x01	; 1
    7eea:	09 f0       	breq	.+2      	; 0x7eee <_Z17Blower_Monitoringh+0x266>
    7eec:	ae c0       	rjmp	.+348    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
    7eee:	ae c0       	rjmp	.+348    	; 0x804c <_Z17Blower_Monitoringh+0x3c4>
		
	}
	else
	{
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
    7ef0:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    7ef4:	88 23       	and	r24, r24
    7ef6:	21 f1       	breq	.+72     	; 0x7f40 <_Z17Blower_Monitoringh+0x2b8>
    7ef8:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7efc:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7f00:	a0 e0       	ldi	r26, 0x00	; 0
    7f02:	b0 e0       	ldi	r27, 0x00	; 0
    7f04:	84 17       	cp	r24, r20
    7f06:	95 07       	cpc	r25, r21
    7f08:	a6 07       	cpc	r26, r22
    7f0a:	b7 07       	cpc	r27, r23
    7f0c:	08 f4       	brcc	.+2      	; 0x7f10 <_Z17Blower_Monitoringh+0x288>
    7f0e:	9d c0       	rjmp	.+314    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
    7f10:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7f14:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7f18:	a0 e0       	ldi	r26, 0x00	; 0
    7f1a:	b0 e0       	ldi	r27, 0x00	; 0
    7f1c:	8c 15       	cp	r24, r12
    7f1e:	9d 05       	cpc	r25, r13
    7f20:	ae 05       	cpc	r26, r14
    7f22:	bf 05       	cpc	r27, r15
    7f24:	08 f4       	brcc	.+2      	; 0x7f28 <_Z17Blower_Monitoringh+0x2a0>
    7f26:	91 c0       	rjmp	.+290    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
    7f28:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7f2c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7f30:	a0 e0       	ldi	r26, 0x00	; 0
    7f32:	b0 e0       	ldi	r27, 0x00	; 0
    7f34:	80 17       	cp	r24, r16
    7f36:	91 07       	cpc	r25, r17
    7f38:	a2 07       	cpc	r26, r18
    7f3a:	b3 07       	cpc	r27, r19
    7f3c:	08 f4       	brcc	.+2      	; 0x7f40 <_Z17Blower_Monitoringh+0x2b8>
    7f3e:	85 c0       	rjmp	.+266    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
    7f40:	20 e0       	ldi	r18, 0x00	; 0
    7f42:	30 e0       	ldi	r19, 0x00	; 0
    7f44:	40 e0       	ldi	r20, 0x00	; 0
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
    7f46:	5b e1       	ldi	r21, 0x1B	; 27
    7f48:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7f4c:	90 e0       	ldi	r25, 0x00	; 0
    7f4e:	01 97       	sbiw	r24, 0x01	; 1
    7f50:	fc 01       	movw	r30, r24
    7f52:	ee 0f       	add	r30, r30
    7f54:	ff 1f       	adc	r31, r31
    7f56:	e8 0f       	add	r30, r24
    7f58:	f9 1f       	adc	r31, r25
    7f5a:	e2 0f       	add	r30, r18
    7f5c:	f3 1f       	adc	r31, r19
    7f5e:	e8 56       	subi	r30, 0x68	; 104
    7f60:	f6 4f       	sbci	r31, 0xF6	; 246
    7f62:	80 81       	ld	r24, Z
    7f64:	90 e0       	ldi	r25, 0x00	; 0
    7f66:	85 56       	subi	r24, 0x65	; 101
    7f68:	91 09       	sbc	r25, r1
    7f6a:	58 9f       	mul	r21, r24
    7f6c:	f0 01       	movw	r30, r0
    7f6e:	59 9f       	mul	r21, r25
    7f70:	f0 0d       	add	r31, r0
    7f72:	11 24       	eor	r1, r1
    7f74:	e8 51       	subi	r30, 0x18	; 24
    7f76:	f2 4f       	sbci	r31, 0xF2	; 242
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7f78:	81 81       	ldd	r24, Z+1	; 0x01
    7f7a:	88 23       	and	r24, r24
    7f7c:	b9 f1       	breq	.+110    	; 0x7fec <_Z17Blower_Monitoringh+0x364>
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
    7f7e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7f82:	90 e0       	ldi	r25, 0x00	; 0
    7f84:	01 97       	sbiw	r24, 0x01	; 1
    7f86:	fc 01       	movw	r30, r24
    7f88:	ee 0f       	add	r30, r30
    7f8a:	ff 1f       	adc	r31, r31
    7f8c:	e8 0f       	add	r30, r24
    7f8e:	f9 1f       	adc	r31, r25
    7f90:	e2 0f       	add	r30, r18
    7f92:	f3 1f       	adc	r31, r19
    7f94:	e8 56       	subi	r30, 0x68	; 104
    7f96:	f6 4f       	sbci	r31, 0xF6	; 246
    7f98:	80 81       	ld	r24, Z
    7f9a:	90 e0       	ldi	r25, 0x00	; 0
    7f9c:	85 56       	subi	r24, 0x65	; 101
    7f9e:	91 09       	sbc	r25, r1
    7fa0:	58 9f       	mul	r21, r24
    7fa2:	f0 01       	movw	r30, r0
    7fa4:	59 9f       	mul	r21, r25
    7fa6:	f0 0d       	add	r31, r0
    7fa8:	11 24       	eor	r1, r1
    7faa:	e8 51       	subi	r30, 0x18	; 24
    7fac:	f2 4f       	sbci	r31, 0xF2	; 242
    7fae:	81 81       	ldd	r24, Z+1	; 0x01
    7fb0:	85 36       	cpi	r24, 0x65	; 101
    7fb2:	e0 f0       	brcs	.+56     	; 0x7fec <_Z17Blower_Monitoringh+0x364>
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7fb4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7fb8:	90 e0       	ldi	r25, 0x00	; 0
    7fba:	01 97       	sbiw	r24, 0x01	; 1
    7fbc:	fc 01       	movw	r30, r24
    7fbe:	ee 0f       	add	r30, r30
    7fc0:	ff 1f       	adc	r31, r31
    7fc2:	e8 0f       	add	r30, r24
    7fc4:	f9 1f       	adc	r31, r25
    7fc6:	e2 0f       	add	r30, r18
    7fc8:	f3 1f       	adc	r31, r19
    7fca:	e8 56       	subi	r30, 0x68	; 104
    7fcc:	f6 4f       	sbci	r31, 0xF6	; 246
    7fce:	80 81       	ld	r24, Z
    7fd0:	90 e0       	ldi	r25, 0x00	; 0
    7fd2:	85 56       	subi	r24, 0x65	; 101
    7fd4:	91 09       	sbc	r25, r1
    7fd6:	58 9f       	mul	r21, r24
    7fd8:	f0 01       	movw	r30, r0
    7fda:	59 9f       	mul	r21, r25
    7fdc:	f0 0d       	add	r31, r0
    7fde:	11 24       	eor	r1, r1
    7fe0:	e8 51       	subi	r30, 0x18	; 24
    7fe2:	f2 4f       	sbci	r31, 0xF2	; 242
    7fe4:	82 81       	ldd	r24, Z+2	; 0x02
    7fe6:	84 30       	cpi	r24, 0x04	; 4
    7fe8:	09 f4       	brne	.+2      	; 0x7fec <_Z17Blower_Monitoringh+0x364>
				{
					check_tank_status = 1;
    7fea:	41 e0       	ldi	r20, 0x01	; 1
    7fec:	2f 5f       	subi	r18, 0xFF	; 255
    7fee:	3f 4f       	sbci	r19, 0xFF	; 255
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    7ff0:	23 30       	cpi	r18, 0x03	; 3
    7ff2:	31 05       	cpc	r19, r1
    7ff4:	09 f0       	breq	.+2      	; 0x7ff8 <_Z17Blower_Monitoringh+0x370>
    7ff6:	a8 cf       	rjmp	.-176    	; 0x7f48 <_Z17Blower_Monitoringh+0x2c0>
				{
					check_tank_status = 1;
				}
			}
			
			if(check_tank_status)
    7ff8:	44 23       	and	r20, r20
    7ffa:	19 f0       	breq	.+6      	; 0x8002 <_Z17Blower_Monitoringh+0x37a>
			{
				_gWait_Blower_Time = _kMAX_BLOWER_REPEAT_TIME;
    7ffc:	88 e0       	ldi	r24, 0x08	; 8
    7ffe:	97 e0       	ldi	r25, 0x07	; 7
    8000:	02 c0       	rjmp	.+4      	; 0x8006 <_Z17Blower_Monitoringh+0x37e>
			}
			else
			{
				_gWait_Blower_Time = 60 * 60;
    8002:	80 e1       	ldi	r24, 0x10	; 16
    8004:	9e e0       	ldi	r25, 0x0E	; 14
    8006:	90 93 ef 0c 	sts	0x0CEF, r25	; 0x800cef <_gWait_Blower_Time+0x1>
    800a:	80 93 ee 0c 	sts	0x0CEE, r24	; 0x800cee <_gWait_Blower_Time>
			}
			
			_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    800e:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
			//_kSERAIL_MON_WRITE("blower gets 5 : ");
			
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    8012:	61 e0       	ldi	r22, 0x01	; 1
    8014:	80 e0       	ldi	r24, 0x00	; 0
    8016:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    801a:	88 23       	and	r24, r24
    801c:	b1 f0       	breq	.+44     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 6 : ");
				//_kSERIAL_MON_CLEAR();
				if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    801e:	80 91 05 0e 	lds	r24, 0x0E05	; 0x800e05 <_sExtra_Plot+0x1d>
    8022:	85 30       	cpi	r24, 0x05	; 5
    8024:	91 f0       	breq	.+36     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
				{
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    8026:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    802a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    802e:	90 62       	ori	r25, 0x20	; 32
    8030:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    8034:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    8038:	81 e0       	ldi	r24, 0x01	; 1
    803a:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    803e:	82 e0       	ldi	r24, 0x02	; 2
    8040:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    8044:	85 e0       	ldi	r24, 0x05	; 5
    8046:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
				}
			}
		}
	}	
}
    804a:	47 c0       	rjmp	.+142    	; 0x80da <_Z17Blower_Monitoringh+0x452>
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
		{
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
    804c:	80 91 ee 0c 	lds	r24, 0x0CEE	; 0x800cee <_gWait_Blower_Time>
    8050:	90 91 ef 0c 	lds	r25, 0x0CEF	; 0x800cef <_gWait_Blower_Time+0x1>
    8054:	89 2b       	or	r24, r25
    8056:	c9 f7       	brne	.-14     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
    8058:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    805c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    8060:	a0 e0       	ldi	r26, 0x00	; 0
    8062:	b0 e0       	ldi	r27, 0x00	; 0
    8064:	84 17       	cp	r24, r20
    8066:	95 07       	cpc	r25, r21
    8068:	a6 07       	cpc	r26, r22
    806a:	b7 07       	cpc	r27, r23
    806c:	b0 f0       	brcs	.+44     	; 0x809a <_Z17Blower_Monitoringh+0x412>
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
    806e:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8072:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8076:	a0 e0       	ldi	r26, 0x00	; 0
    8078:	b0 e0       	ldi	r27, 0x00	; 0
    807a:	8c 15       	cp	r24, r12
    807c:	9d 05       	cpc	r25, r13
    807e:	ae 05       	cpc	r26, r14
    8080:	bf 05       	cpc	r27, r15
    8082:	58 f0       	brcs	.+22     	; 0x809a <_Z17Blower_Monitoringh+0x412>
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    8084:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8088:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    808c:	a0 e0       	ldi	r26, 0x00	; 0
    808e:	b0 e0       	ldi	r27, 0x00	; 0
    8090:	80 17       	cp	r24, r16
    8092:	91 07       	cpc	r25, r17
    8094:	a2 07       	cpc	r26, r18
    8096:	b3 07       	cpc	r27, r19
    8098:	c0 f6       	brcc	.-80     	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
				{
					if(Extra_Plot_Valve_Grouping_Handler(_kON, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    809a:	61 e0       	ldi	r22, 0x01	; 1
    809c:	81 e0       	ldi	r24, 0x01	; 1
    809e:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    80a2:	88 23       	and	r24, r24
    80a4:	b1 f0       	breq	.+44     	; 0x80d2 <_Z17Blower_Monitoringh+0x44a>
					{
						//_kSERAIL_MON_WRITE("blower gets 4 : ");
						//_kSERIAL_MON_CLEAR();
						_sSchedules.Blower_On_Scheduler_Status = _kON;
    80a6:	21 e0       	ldi	r18, 0x01	; 1
    80a8:	20 93 8b 0b 	sts	0x0B8B, r18	; 0x800b8b <_sSchedules+0x26d>
						_sSchedules.Blower_On_Time = _kBLOWER_ON_TIME;
    80ac:	8a e5       	ldi	r24, 0x5A	; 90
    80ae:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    80b2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    80b6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    80ba:	90 62       	ori	r25, 0x20	; 32
    80bc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    80c0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    80c4:	20 93 72 14 	sts	0x1472, r18	; 0x801472 <_sRuble_Parameters+0xc4>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    80c8:	82 e0       	ldi	r24, 0x02	; 2
    80ca:	80 93 1d 0e 	sts	0x0E1D, r24	; 0x800e1d <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    80ce:	84 e0       	ldi	r24, 0x04	; 4
    80d0:	ba cf       	rjmp	.-140    	; 0x8046 <_Z17Blower_Monitoringh+0x3be>
					}
					else
					{
						_sSchedules.Blower_On_Retry = _kMAX_BLOWER_RETRY_TIME;
    80d2:	84 eb       	ldi	r24, 0xB4	; 180
    80d4:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
    80d8:	b8 cf       	rjmp	.-144    	; 0x804a <_Z17Blower_Monitoringh+0x3c2>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
				}
			}
		}
	}	
}
    80da:	1f 91       	pop	r17
    80dc:	0f 91       	pop	r16
    80de:	ff 90       	pop	r15
    80e0:	ef 90       	pop	r14
    80e2:	df 90       	pop	r13
    80e4:	cf 90       	pop	r12
    80e6:	08 95       	ret

000080e8 <_Z18Edited_In_Schedulev>:
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    80e8:	ef 92       	push	r14
    80ea:	ff 92       	push	r15
    80ec:	0f 93       	push	r16
    80ee:	1f 93       	push	r17
    80f0:	cf 93       	push	r28
    80f2:	df 93       	push	r29
	/* edit in the current schedule */
	/* edit in the current schedule */
	if(_sSchedules.Running_Schedule_At == 0)
    80f4:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    80f8:	81 11       	cpse	r24, r1
    80fa:	ca c0       	rjmp	.+404    	; 0x8290 <_Z18Edited_In_Schedulev+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    80fc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8100:	81 30       	cpi	r24, 0x01	; 1
    8102:	51 f4       	brne	.+20     	; 0x8118 <_Z18Edited_In_Schedulev+0x30>
		{
			_kSERAIL_MON_WRITE("my 14");
    8104:	6d ee       	ldi	r22, 0xED	; 237
    8106:	7e e0       	ldi	r23, 0x0E	; 14
    8108:	86 ec       	ldi	r24, 0xC6	; 198
    810a:	94 e1       	ldi	r25, 0x14	; 20
    810c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    8110:	86 ec       	ldi	r24, 0xC6	; 198
    8112:	94 e1       	ldi	r25, 0x14	; 20
    8114:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8118:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    811c:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8120:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    8124:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8128:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    812c:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    8130:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    8134:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8138:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    813c:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8140:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8144:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8148:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    814c:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8150:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    8154:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8158:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    815c:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    8160:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    8164:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8168:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
		}
		
		//_sSchedules.Schedule_Start_From_Today = 1;
		
		if(_sSchedules.Schedule_Start_From_Today != 1)
    816c:	80 91 f2 0b 	lds	r24, 0x0BF2	; 0x800bf2 <_sSchedules+0x2d4>
    8170:	81 30       	cpi	r24, 0x01	; 1
    8172:	21 f0       	breq	.+8      	; 0x817c <_Z18Edited_In_Schedulev+0x94>
		{
			Return_Calculated_Previous_Day_Date(1);
    8174:	81 e0       	ldi	r24, 0x01	; 1
    8176:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    817a:	18 c0       	rjmp	.+48     	; 0x81ac <_Z18Edited_In_Schedulev+0xc4>
		}
		else
		{
			_sSchedules.Temp_date  = _sRuble_Parameters.Update_Local_Date[0];
    817c:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8180:	80 93 ec 0b 	sts	0x0BEC, r24	; 0x800bec <_sSchedules+0x2ce>
			_sSchedules.Temp_Month = _sRuble_Parameters.Update_Local_Date[1];
    8184:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    8188:	80 93 ed 0b 	sts	0x0BED, r24	; 0x800bed <_sSchedules+0x2cf>
			_sSchedules.Started_Date = _sSchedules.Temp_date;
    818c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8190:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
			_sSchedules.Started_Month = _sSchedules.Temp_Month;
    8194:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8198:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
    819c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    81a0:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
    81a4:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    81a8:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    81ac:	00 e0       	ldi	r16, 0x00	; 0
    81ae:	10 e0       	ldi	r17, 0x00	; 0
    81b0:	e1 2c       	mov	r14, r1
    81b2:	f1 2c       	mov	r15, r1
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    81b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    81b8:	e7 01       	movw	r28, r14
    81ba:	c2 5e       	subi	r28, 0xE2	; 226
    81bc:	d6 4f       	sbci	r29, 0xF6	; 246
    81be:	81 30       	cpi	r24, 0x01	; 1
    81c0:	01 f5       	brne	.+64     	; 0x8202 <_Z18Edited_In_Schedulev+0x11a>
			{
				Serial.println(F("Running list date "));
    81c2:	6a ed       	ldi	r22, 0xDA	; 218
    81c4:	7e e0       	ldi	r23, 0x0E	; 14
    81c6:	86 ec       	ldi	r24, 0xC6	; 198
    81c8:	94 e1       	ldi	r25, 0x14	; 20
    81ca:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run[index_num]);
    81ce:	fe 01       	movw	r30, r28
    81d0:	e5 5a       	subi	r30, 0xA5	; 165
    81d2:	ff 4f       	sbci	r31, 0xFF	; 255
    81d4:	60 81       	ld	r22, Z
    81d6:	4a e0       	ldi	r20, 0x0A	; 10
    81d8:	50 e0       	ldi	r21, 0x00	; 0
    81da:	86 ec       	ldi	r24, 0xC6	; 198
    81dc:	94 e1       	ldi	r25, 0x14	; 20
    81de:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
				Serial.println(F("Running list month "));
    81e2:	66 ec       	ldi	r22, 0xC6	; 198
    81e4:	7e e0       	ldi	r23, 0x0E	; 14
    81e6:	86 ec       	ldi	r24, 0xC6	; 198
    81e8:	94 e1       	ldi	r25, 0x14	; 20
    81ea:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run_Month[index_num]);
    81ee:	fe 01       	movw	r30, r28
    81f0:	e6 59       	subi	r30, 0x96	; 150
    81f2:	ff 4f       	sbci	r31, 0xFF	; 255
    81f4:	60 81       	ld	r22, Z
    81f6:	4a e0       	ldi	r20, 0x0A	; 10
    81f8:	50 e0       	ldi	r21, 0x00	; 0
    81fa:	86 ec       	ldi	r24, 0xC6	; 198
    81fc:	94 e1       	ldi	r25, 0x14	; 20
    81fe:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
			}
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    8202:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8206:	fe 01       	movw	r30, r28
    8208:	e5 5a       	subi	r30, 0xA5	; 165
    820a:	ff 4f       	sbci	r31, 0xFF	; 255
    820c:	80 83       	st	Z, r24
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    820e:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8212:	c6 59       	subi	r28, 0x96	; 150
    8214:	df 4f       	sbci	r29, 0xFF	; 255
    8216:	88 83       	st	Y, r24
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8218:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    821c:	90 e0       	ldi	r25, 0x00	; 0
    821e:	f8 01       	movw	r30, r16
    8220:	ee 0f       	add	r30, r30
    8222:	ff 1f       	adc	r31, r31
    8224:	e5 5e       	subi	r30, 0xE5	; 229
    8226:	f4 4f       	sbci	r31, 0xF4	; 244
    8228:	91 83       	std	Z+1, r25	; 0x01
    822a:	80 83       	st	Z, r24
    822c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8230:	90 e0       	ldi	r25, 0x00	; 0
    8232:	f8 01       	movw	r30, r16
    8234:	ee 0f       	add	r30, r30
    8236:	ff 1f       	adc	r31, r31
    8238:	e3 5e       	subi	r30, 0xE3	; 227
    823a:	f4 4f       	sbci	r31, 0xF4	; 244
    823c:	91 83       	std	Z+1, r25	; 0x01
    823e:	80 83       	st	Z, r24
    8240:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8244:	90 e0       	ldi	r25, 0x00	; 0
    8246:	f8 01       	movw	r30, r16
    8248:	ee 0f       	add	r30, r30
    824a:	ff 1f       	adc	r31, r31
    824c:	e1 5e       	subi	r30, 0xE1	; 225
    824e:	f4 4f       	sbci	r31, 0xF4	; 244
    8250:	91 83       	std	Z+1, r25	; 0x01
    8252:	80 83       	st	Z, r24
    8254:	2f ef       	ldi	r18, 0xFF	; 255
    8256:	e2 1a       	sub	r14, r18
    8258:	f2 0a       	sbc	r15, r18
    825a:	0d 5f       	subi	r16, 0xFD	; 253
    825c:	1f 4f       	sbci	r17, 0xFF	; 255
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    825e:	8e e0       	ldi	r24, 0x0E	; 14
    8260:	e8 16       	cp	r14, r24
    8262:	f1 04       	cpc	r15, r1
    8264:	09 f0       	breq	.+2      	; 0x8268 <_Z18Edited_In_Schedulev+0x180>
    8266:	a6 cf       	rjmp	.-180    	; 0x81b4 <_Z18Edited_In_Schedulev+0xcc>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8268:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    826c:	81 30       	cpi	r24, 0x01	; 1
    826e:	31 f4       	brne	.+12     	; 0x827c <_Z18Edited_In_Schedulev+0x194>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8270:	61 e8       	ldi	r22, 0x81	; 129
    8272:	7e e0       	ldi	r23, 0x0E	; 14
    8274:	86 ec       	ldi	r24, 0xC6	; 198
    8276:	94 e1       	ldi	r25, 0x14	; 20
    8278:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    827c:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8280:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8284:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8288:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		return 1;
    828c:	81 e0       	ldi	r24, 0x01	; 1
    828e:	c0 c4       	rjmp	.+2432   	; 0x8c10 <_Z18Edited_In_Schedulev+0xb28>
		/* add previous dates here */
	}
	
	if(_sSchedules.Scheduler_Retry_Timer == _kRESET && _sSchedules.Running_Schedule_At !=0)
    8290:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8294:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    8298:	89 2b       	or	r24, r25
    829a:	09 f0       	breq	.+2      	; 0x829e <_Z18Edited_In_Schedulev+0x1b6>
    829c:	18 c4       	rjmp	.+2096   	; 0x8ace <_Z18Edited_In_Schedulev+0x9e6>
    829e:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    82a2:	88 23       	and	r24, r24
    82a4:	09 f4       	brne	.+2      	; 0x82a8 <_Z18Edited_In_Schedulev+0x1c0>
    82a6:	13 c4       	rjmp	.+2086   	; 0x8ace <_Z18Edited_In_Schedulev+0x9e6>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    82a8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    82ac:	81 30       	cpi	r24, 0x01	; 1
    82ae:	31 f4       	brne	.+12     	; 0x82bc <_Z18Edited_In_Schedulev+0x1d4>
		{
			_kSERAIL_MON_WRITE("my 0");
    82b0:	6c e7       	ldi	r22, 0x7C	; 124
    82b2:	7e e0       	ldi	r23, 0x0E	; 14
    82b4:	86 ec       	ldi	r24, 0xC6	; 198
    82b6:	94 e1       	ldi	r25, 0x14	; 20
    82b8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sSchedules.Back_Up_Running_Scheduler_Number)
    82bc:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    82c0:	88 23       	and	r24, r24
    82c2:	09 f4       	brne	.+2      	; 0x82c6 <_Z18Edited_In_Schedulev+0x1de>
    82c4:	8f c4       	rjmp	.+2334   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    82c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    82ca:	81 30       	cpi	r24, 0x01	; 1
    82cc:	31 f4       	brne	.+12     	; 0x82da <_Z18Edited_In_Schedulev+0x1f2>
			{
				_kSERAIL_MON_WRITE("my 1");
    82ce:	67 e7       	ldi	r22, 0x77	; 119
    82d0:	7e e0       	ldi	r23, 0x0E	; 14
    82d2:	86 ec       	ldi	r24, 0xC6	; 198
    82d4:	94 e1       	ldi	r25, 0x14	; 20
    82d6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			
			if(_sSchedules.Back_Up_Running_Schedule_Plot_Number)
    82da:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
    82de:	88 23       	and	r24, r24
    82e0:	09 f4       	brne	.+2      	; 0x82e4 <_Z18Edited_In_Schedulev+0x1fc>
    82e2:	80 c4       	rjmp	.+2304   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    82e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    82e8:	81 30       	cpi	r24, 0x01	; 1
    82ea:	51 f5       	brne	.+84     	; 0x8340 <_Z18Edited_In_Schedulev+0x258>
				{
					_kSERAIL_MON_WRITE("my 2");
    82ec:	62 e7       	ldi	r22, 0x72	; 114
    82ee:	7e e0       	ldi	r23, 0x0E	; 14
    82f0:	86 ec       	ldi	r24, 0xC6	; 198
    82f2:	94 e1       	ldi	r25, 0x14	; 20
    82f4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("Running schedule :");
    82f8:	6f e5       	ldi	r22, 0x5F	; 95
    82fa:	7e e0       	ldi	r23, 0x0E	; 14
    82fc:	86 ec       	ldi	r24, 0xC6	; 198
    82fe:	94 e1       	ldi	r25, 0x14	; 20
    8300:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8304:	86 ec       	ldi	r24, 0xC6	; 198
    8306:	94 e1       	ldi	r25, 0x14	; 20
    8308:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Running_Schedule_At);
    830c:	60 91 e6 0b 	lds	r22, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8310:	4a e0       	ldi	r20, 0x0A	; 10
    8312:	50 e0       	ldi	r21, 0x00	; 0
    8314:	86 ec       	ldi	r24, 0xC6	; 198
    8316:	94 e1       	ldi	r25, 0x14	; 20
    8318:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
					_kSERAIL_MON_WRITE("Back up schedule :");
    831c:	6c e4       	ldi	r22, 0x4C	; 76
    831e:	7e e0       	ldi	r23, 0x0E	; 14
    8320:	86 ec       	ldi	r24, 0xC6	; 198
    8322:	94 e1       	ldi	r25, 0x14	; 20
    8324:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8328:	86 ec       	ldi	r24, 0xC6	; 198
    832a:	94 e1       	ldi	r25, 0x14	; 20
    832c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Back_Up_Running_Scheduler_Number);
    8330:	60 91 d8 0b 	lds	r22, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8334:	4a e0       	ldi	r20, 0x0A	; 10
    8336:	50 e0       	ldi	r21, 0x00	; 0
    8338:	86 ec       	ldi	r24, 0xC6	; 198
    833a:	94 e1       	ldi	r25, 0x14	; 20
    833c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
				}
				
				if(_sSchedules.Running_Schedule_At == _sSchedules.Back_Up_Running_Scheduler_Number)
    8340:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8344:	90 91 d8 0b 	lds	r25, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8348:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    834c:	29 13       	cpse	r18, r25
    834e:	1f c1       	rjmp	.+574    	; 0x858e <_Z18Edited_In_Schedulev+0x4a6>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8350:	81 30       	cpi	r24, 0x01	; 1
    8352:	51 f4       	brne	.+20     	; 0x8368 <_Z18Edited_In_Schedulev+0x280>
					{
						_kSERAIL_MON_WRITE("my 3");
    8354:	67 e4       	ldi	r22, 0x47	; 71
    8356:	7e e0       	ldi	r23, 0x0E	; 14
    8358:	86 ec       	ldi	r24, 0xC6	; 198
    835a:	94 e1       	ldi	r25, 0x14	; 20
    835c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8360:	86 ec       	ldi	r24, 0xC6	; 198
    8362:	94 e1       	ldi	r25, 0x14	; 20
    8364:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					
					if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    8368:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    836c:	f0 e0       	ldi	r31, 0x00	; 0
    836e:	e7 59       	subi	r30, 0x97	; 151
    8370:	f6 4f       	sbci	r31, 0xF6	; 246
    8372:	90 81       	ld	r25, Z
    8374:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
					|| _sSchedules.Running_Schedule_At == _kRESET)
    8378:	98 13       	cpse	r25, r24
    837a:	04 c0       	rjmp	.+8      	; 0x8384 <_Z18Edited_In_Schedulev+0x29c>
    837c:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8380:	81 11       	cpse	r24, r1
    8382:	41 c0       	rjmp	.+130    	; 0x8406 <_Z18Edited_In_Schedulev+0x31e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8384:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8388:	81 30       	cpi	r24, 0x01	; 1
    838a:	51 f4       	brne	.+20     	; 0x83a0 <_Z18Edited_In_Schedulev+0x2b8>
						{
							_kSERAIL_MON_WRITE("my 4");
    838c:	62 e4       	ldi	r22, 0x42	; 66
    838e:	7e e0       	ldi	r23, 0x0E	; 14
    8390:	86 ec       	ldi	r24, 0xC6	; 198
    8392:	94 e1       	ldi	r25, 0x14	; 20
    8394:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8398:	86 ec       	ldi	r24, 0xC6	; 198
    839a:	94 e1       	ldi	r25, 0x14	; 20
    839c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Running_Schedule_At != _kRESET)
    83a0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    83a4:	88 23       	and	r24, r24
    83a6:	09 f4       	brne	.+2      	; 0x83aa <_Z18Edited_In_Schedulev+0x2c2>
    83a8:	2a c4       	rjmp	.+2132   	; 0x8bfe <_Z18Edited_In_Schedulev+0xb16>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    83aa:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    83ae:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    83b2:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
						_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    83b6:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
						_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    83ba:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    83be:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
						
						for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
						{
							_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    83c2:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    83c6:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    83ca:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    83ce:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    83d2:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    83d6:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
						}
				
						for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    83da:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    83de:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    83e2:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    83e6:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    83ea:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    83ee:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
						}
				
						_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    83f2:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    83f6:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
						for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Running_Tank[tank_number] = _kOFF;
    83fa:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    83fe:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8402:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
    8406:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    840a:	82 30       	cpi	r24, 0x02	; 2
    840c:	08 f4       	brcc	.+2      	; 0x8410 <_Z18Edited_In_Schedulev+0x328>
    840e:	82 c0       	rjmp	.+260    	; 0x8514 <_Z18Edited_In_Schedulev+0x42c>
    8410:	40 e0       	ldi	r20, 0x00	; 0
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8412:	84 2f       	mov	r24, r20
    8414:	90 e0       	ldi	r25, 0x00	; 0
    8416:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    841a:	30 e0       	ldi	r19, 0x00	; 0
    841c:	21 50       	subi	r18, 0x01	; 1
    841e:	31 09       	sbc	r19, r1
    8420:	82 17       	cp	r24, r18
    8422:	93 07       	cpc	r25, r19
    8424:	84 f5       	brge	.+96     	; 0x8486 <_Z18Edited_In_Schedulev+0x39e>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8426:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    842a:	82 5e       	subi	r24, 0xE2	; 226
    842c:	96 4f       	sbci	r25, 0xF6	; 246
    842e:	fc 01       	movw	r30, r24
    8430:	e5 5a       	subi	r30, 0xA5	; 165
    8432:	ff 4f       	sbci	r31, 0xFF	; 255
    8434:	20 83       	st	Z, r18
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8436:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    843a:	3f 96       	adiw	r30, 0x0f	; 15
    843c:	20 83       	st	Z, r18
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    843e:	23 e0       	ldi	r18, 0x03	; 3
    8440:	42 9f       	mul	r20, r18
    8442:	c0 01       	movw	r24, r0
    8444:	11 24       	eor	r1, r1
    8446:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    844a:	30 e0       	ldi	r19, 0x00	; 0
    844c:	fc 01       	movw	r30, r24
    844e:	ee 0f       	add	r30, r30
    8450:	ff 1f       	adc	r31, r31
    8452:	e5 5e       	subi	r30, 0xE5	; 229
    8454:	f4 4f       	sbci	r31, 0xF4	; 244
    8456:	31 83       	std	Z+1, r19	; 0x01
    8458:	20 83       	st	Z, r18
    845a:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    845e:	30 e0       	ldi	r19, 0x00	; 0
    8460:	fc 01       	movw	r30, r24
    8462:	ee 0f       	add	r30, r30
    8464:	ff 1f       	adc	r31, r31
    8466:	e3 5e       	subi	r30, 0xE3	; 227
    8468:	f4 4f       	sbci	r31, 0xF4	; 244
    846a:	31 83       	std	Z+1, r19	; 0x01
    846c:	20 83       	st	Z, r18
    846e:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8472:	30 e0       	ldi	r19, 0x00	; 0
    8474:	88 0f       	add	r24, r24
    8476:	99 1f       	adc	r25, r25
    8478:	fc 01       	movw	r30, r24
    847a:	e1 5e       	subi	r30, 0xE1	; 225
    847c:	f4 4f       	sbci	r31, 0xF4	; 244
    847e:	31 83       	std	Z+1, r19	; 0x01
    8480:	20 83       	st	Z, r18
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8482:	4f 5f       	subi	r20, 0xFF	; 255
    8484:	c6 cf       	rjmp	.-116    	; 0x8412 <_Z18Edited_In_Schedulev+0x32a>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8486:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    848a:	81 50       	subi	r24, 0x01	; 1
    848c:	8f 30       	cpi	r24, 0x0F	; 15
    848e:	90 f5       	brcc	.+100    	; 0x84f4 <_Z18Edited_In_Schedulev+0x40c>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8490:	28 2f       	mov	r18, r24
    8492:	30 e0       	ldi	r19, 0x00	; 0
    8494:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    8498:	22 5e       	subi	r18, 0xE2	; 226
    849a:	36 4f       	sbci	r19, 0xF6	; 246
    849c:	f9 01       	movw	r30, r18
    849e:	e5 5a       	subi	r30, 0xA5	; 165
    84a0:	ff 4f       	sbci	r31, 0xFF	; 255
    84a2:	90 83       	st	Z, r25
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    84a4:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    84a8:	3f 96       	adiw	r30, 0x0f	; 15
    84aa:	90 83       	st	Z, r25
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    84ac:	93 e0       	ldi	r25, 0x03	; 3
    84ae:	89 9f       	mul	r24, r25
    84b0:	90 01       	movw	r18, r0
    84b2:	11 24       	eor	r1, r1
    84b4:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84b8:	50 e0       	ldi	r21, 0x00	; 0
    84ba:	f9 01       	movw	r30, r18
    84bc:	ee 0f       	add	r30, r30
    84be:	ff 1f       	adc	r31, r31
    84c0:	e5 5e       	subi	r30, 0xE5	; 229
    84c2:	f4 4f       	sbci	r31, 0xF4	; 244
    84c4:	51 83       	std	Z+1, r21	; 0x01
    84c6:	40 83       	st	Z, r20
    84c8:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84cc:	50 e0       	ldi	r21, 0x00	; 0
    84ce:	f9 01       	movw	r30, r18
    84d0:	ee 0f       	add	r30, r30
    84d2:	ff 1f       	adc	r31, r31
    84d4:	e3 5e       	subi	r30, 0xE3	; 227
    84d6:	f4 4f       	sbci	r31, 0xF4	; 244
    84d8:	51 83       	std	Z+1, r21	; 0x01
    84da:	40 83       	st	Z, r20
    84dc:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    84e0:	50 e0       	ldi	r21, 0x00	; 0
    84e2:	22 0f       	add	r18, r18
    84e4:	33 1f       	adc	r19, r19
    84e6:	f9 01       	movw	r30, r18
    84e8:	e1 5e       	subi	r30, 0xE1	; 225
    84ea:	f4 4f       	sbci	r31, 0xF4	; 244
    84ec:	51 83       	std	Z+1, r21	; 0x01
    84ee:	40 83       	st	Z, r20
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    84f0:	8f 5f       	subi	r24, 0xFF	; 255
    84f2:	cc cf       	rjmp	.-104    	; 0x848c <_Z18Edited_In_Schedulev+0x3a4>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
							}
						}
						_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    84f4:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    84f8:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    84fc:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8500:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8504:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8508:	81 30       	cpi	r24, 0x01	; 1
    850a:	09 f0       	breq	.+2      	; 0x850e <_Z18Edited_In_Schedulev+0x426>
    850c:	6b c3       	rjmp	.+1750   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 3//// :");
    850e:	60 e1       	ldi	r22, 0x10	; 16
    8510:	7e e0       	ldi	r23, 0x0E	; 14
    8512:	45 c1       	rjmp	.+650    	; 0x879e <_Z18Edited_In_Schedulev+0x6b6>
							_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
							_kSERIAL_MON_CLEAR();
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
    8514:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8518:	81 30       	cpi	r24, 0x01	; 1
    851a:	09 f0       	breq	.+2      	; 0x851e <_Z18Edited_In_Schedulev+0x436>
    851c:	63 c3       	rjmp	.+1734   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
					{
						Return_Calculated_Previous_Day_Date(1);
    851e:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    8522:	80 e0       	ldi	r24, 0x00	; 0
    8524:	90 e0       	ldi	r25, 0x00	; 0
    8526:	20 e0       	ldi	r18, 0x00	; 0
    8528:	30 e0       	ldi	r19, 0x00	; 0
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    852a:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    852e:	a9 01       	movw	r20, r18
    8530:	42 5e       	subi	r20, 0xE2	; 226
    8532:	56 4f       	sbci	r21, 0xF6	; 246
    8534:	fa 01       	movw	r30, r20
    8536:	e5 5a       	subi	r30, 0xA5	; 165
    8538:	ff 4f       	sbci	r31, 0xFF	; 255
    853a:	60 83       	st	Z, r22
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    853c:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8540:	3f 96       	adiw	r30, 0x0f	; 15
    8542:	60 83       	st	Z, r22
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8544:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8548:	50 e0       	ldi	r21, 0x00	; 0
    854a:	fc 01       	movw	r30, r24
    854c:	ee 0f       	add	r30, r30
    854e:	ff 1f       	adc	r31, r31
    8550:	e5 5e       	subi	r30, 0xE5	; 229
    8552:	f4 4f       	sbci	r31, 0xF4	; 244
    8554:	51 83       	std	Z+1, r21	; 0x01
    8556:	40 83       	st	Z, r20
    8558:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    855c:	50 e0       	ldi	r21, 0x00	; 0
    855e:	fc 01       	movw	r30, r24
    8560:	ee 0f       	add	r30, r30
    8562:	ff 1f       	adc	r31, r31
    8564:	e3 5e       	subi	r30, 0xE3	; 227
    8566:	f4 4f       	sbci	r31, 0xF4	; 244
    8568:	51 83       	std	Z+1, r21	; 0x01
    856a:	40 83       	st	Z, r20
    856c:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8570:	50 e0       	ldi	r21, 0x00	; 0
    8572:	fc 01       	movw	r30, r24
    8574:	ee 0f       	add	r30, r30
    8576:	ff 1f       	adc	r31, r31
    8578:	e1 5e       	subi	r30, 0xE1	; 225
    857a:	f4 4f       	sbci	r31, 0xF4	; 244
    857c:	51 83       	std	Z+1, r21	; 0x01
    857e:	40 83       	st	Z, r20
    8580:	2f 5f       	subi	r18, 0xFF	; 255
    8582:	3f 4f       	sbci	r19, 0xFF	; 255
    8584:	03 96       	adiw	r24, 0x03	; 3
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
					{
						Return_Calculated_Previous_Day_Date(1);
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8586:	2f 30       	cpi	r18, 0x0F	; 15
    8588:	31 05       	cpc	r19, r1
    858a:	79 f6       	brne	.-98     	; 0x852a <_Z18Edited_In_Schedulev+0x442>
    858c:	23 c3       	rjmp	.+1606   	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
						_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
					}
				}
				else 
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    858e:	81 30       	cpi	r24, 0x01	; 1
    8590:	51 f4       	brne	.+20     	; 0x85a6 <_Z18Edited_In_Schedulev+0x4be>
					{
						_kSERAIL_MON_WRITE("my 5");
    8592:	6b e0       	ldi	r22, 0x0B	; 11
    8594:	7e e0       	ldi	r23, 0x0E	; 14
    8596:	86 ec       	ldi	r24, 0xC6	; 198
    8598:	94 e1       	ldi	r25, 0x14	; 20
    859a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    859e:	86 ec       	ldi	r24, 0xC6	; 198
    85a0:	94 e1       	ldi	r25, 0x14	; 20
    85a2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Running_Schedule_At < _sSchedules.Back_Up_Running_Scheduler_Number)
    85a6:	90 91 e6 0b 	lds	r25, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    85aa:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    85ae:	98 17       	cp	r25, r24
    85b0:	08 f0       	brcs	.+2      	; 0x85b4 <_Z18Edited_In_Schedulev+0x4cc>
    85b2:	43 c1       	rjmp	.+646    	; 0x883a <_Z18Edited_In_Schedulev+0x752>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    85b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    85b8:	81 30       	cpi	r24, 0x01	; 1
    85ba:	51 f4       	brne	.+20     	; 0x85d0 <_Z18Edited_In_Schedulev+0x4e8>
						{
							_kSERAIL_MON_WRITE("my 6");
    85bc:	66 e0       	ldi	r22, 0x06	; 6
    85be:	7e e0       	ldi	r23, 0x0E	; 14
    85c0:	86 ec       	ldi	r24, 0xC6	; 198
    85c2:	94 e1       	ldi	r25, 0x14	; 20
    85c4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    85c8:	86 ec       	ldi	r24, 0xC6	; 198
    85ca:	94 e1       	ldi	r25, 0x14	; 20
    85cc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    85d0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    85d4:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    85d8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    85dc:	81 30       	cpi	r24, 0x01	; 1
    85de:	51 f4       	brne	.+20     	; 0x85f4 <_Z18Edited_In_Schedulev+0x50c>
						{
							_kSERAIL_MON_WRITE("my 6.1");
    85e0:	6f ef       	ldi	r22, 0xFF	; 255
    85e2:	7d e0       	ldi	r23, 0x0D	; 13
    85e4:	86 ec       	ldi	r24, 0xC6	; 198
    85e6:	94 e1       	ldi	r25, 0x14	; 20
    85e8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    85ec:	86 ec       	ldi	r24, 0xC6	; 198
    85ee:	94 e1       	ldi	r25, 0x14	; 20
    85f0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    85f4:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    85f8:	f0 e0       	ldi	r31, 0x00	; 0
    85fa:	e7 59       	subi	r30, 0x97	; 151
    85fc:	f6 4f       	sbci	r31, 0xF6	; 246
    85fe:	90 81       	ld	r25, Z
    8600:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    8604:	98 13       	cpse	r25, r24
    8606:	04 c0       	rjmp	.+8      	; 0x8610 <_Z18Edited_In_Schedulev+0x528>
    8608:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    860c:	81 11       	cpse	r24, r1
    860e:	41 c0       	rjmp	.+130    	; 0x8692 <_Z18Edited_In_Schedulev+0x5aa>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8610:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8614:	81 30       	cpi	r24, 0x01	; 1
    8616:	51 f4       	brne	.+20     	; 0x862c <_Z18Edited_In_Schedulev+0x544>
							{
								_kSERAIL_MON_WRITE("my 6.2");
    8618:	68 ef       	ldi	r22, 0xF8	; 248
    861a:	7d e0       	ldi	r23, 0x0D	; 13
    861c:	86 ec       	ldi	r24, 0xC6	; 198
    861e:	94 e1       	ldi	r25, 0x14	; 20
    8620:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    8624:	86 ec       	ldi	r24, 0xC6	; 198
    8626:	94 e1       	ldi	r25, 0x14	; 20
    8628:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    862c:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8630:	88 23       	and	r24, r24
    8632:	09 f4       	brne	.+2      	; 0x8636 <_Z18Edited_In_Schedulev+0x54e>
    8634:	e7 c2       	rjmp	.+1486   	; 0x8c04 <_Z18Edited_In_Schedulev+0xb1c>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    8636:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    863a:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    863e:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8642:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8646:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    864a:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    864e:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    8652:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    8656:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    865a:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    865e:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8662:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8666:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    866a:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    866e:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8672:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8676:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    867a:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    867e:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8682:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    8686:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    868a:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    868e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8692:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8696:	82 30       	cpi	r24, 0x02	; 2
    8698:	08 f4       	brcc	.+2      	; 0x869c <_Z18Edited_In_Schedulev+0x5b4>
    869a:	92 c0       	rjmp	.+292    	; 0x87c0 <_Z18Edited_In_Schedulev+0x6d8>
    869c:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    869e:	84 2f       	mov	r24, r20
    86a0:	90 e0       	ldi	r25, 0x00	; 0
    86a2:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    86a6:	30 e0       	ldi	r19, 0x00	; 0
    86a8:	21 50       	subi	r18, 0x01	; 1
    86aa:	31 09       	sbc	r19, r1
    86ac:	82 17       	cp	r24, r18
    86ae:	93 07       	cpc	r25, r19
    86b0:	84 f5       	brge	.+96     	; 0x8712 <_Z18Edited_In_Schedulev+0x62a>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    86b2:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86b6:	82 5e       	subi	r24, 0xE2	; 226
    86b8:	96 4f       	sbci	r25, 0xF6	; 246
    86ba:	fc 01       	movw	r30, r24
    86bc:	e5 5a       	subi	r30, 0xA5	; 165
    86be:	ff 4f       	sbci	r31, 0xFF	; 255
    86c0:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    86c2:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    86c6:	3f 96       	adiw	r30, 0x0f	; 15
    86c8:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    86ca:	23 e0       	ldi	r18, 0x03	; 3
    86cc:	42 9f       	mul	r20, r18
    86ce:	c0 01       	movw	r24, r0
    86d0:	11 24       	eor	r1, r1
    86d2:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86d6:	30 e0       	ldi	r19, 0x00	; 0
    86d8:	fc 01       	movw	r30, r24
    86da:	ee 0f       	add	r30, r30
    86dc:	ff 1f       	adc	r31, r31
    86de:	e5 5e       	subi	r30, 0xE5	; 229
    86e0:	f4 4f       	sbci	r31, 0xF4	; 244
    86e2:	31 83       	std	Z+1, r19	; 0x01
    86e4:	20 83       	st	Z, r18
    86e6:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86ea:	30 e0       	ldi	r19, 0x00	; 0
    86ec:	fc 01       	movw	r30, r24
    86ee:	ee 0f       	add	r30, r30
    86f0:	ff 1f       	adc	r31, r31
    86f2:	e3 5e       	subi	r30, 0xE3	; 227
    86f4:	f4 4f       	sbci	r31, 0xF4	; 244
    86f6:	31 83       	std	Z+1, r19	; 0x01
    86f8:	20 83       	st	Z, r18
    86fa:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    86fe:	30 e0       	ldi	r19, 0x00	; 0
    8700:	88 0f       	add	r24, r24
    8702:	99 1f       	adc	r25, r25
    8704:	fc 01       	movw	r30, r24
    8706:	e1 5e       	subi	r30, 0xE1	; 225
    8708:	f4 4f       	sbci	r31, 0xF4	; 244
    870a:	31 83       	std	Z+1, r19	; 0x01
    870c:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    870e:	4f 5f       	subi	r20, 0xFF	; 255
    8710:	c6 cf       	rjmp	.-116    	; 0x869e <_Z18Edited_In_Schedulev+0x5b6>
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8712:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8716:	81 50       	subi	r24, 0x01	; 1
    8718:	8f 30       	cpi	r24, 0x0F	; 15
    871a:	90 f5       	brcc	.+100    	; 0x8780 <_Z18Edited_In_Schedulev+0x698>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    871c:	28 2f       	mov	r18, r24
    871e:	30 e0       	ldi	r19, 0x00	; 0
    8720:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    8724:	22 5e       	subi	r18, 0xE2	; 226
    8726:	36 4f       	sbci	r19, 0xF6	; 246
    8728:	f9 01       	movw	r30, r18
    872a:	e5 5a       	subi	r30, 0xA5	; 165
    872c:	ff 4f       	sbci	r31, 0xFF	; 255
    872e:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8730:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    8734:	3f 96       	adiw	r30, 0x0f	; 15
    8736:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    8738:	93 e0       	ldi	r25, 0x03	; 3
    873a:	89 9f       	mul	r24, r25
    873c:	90 01       	movw	r18, r0
    873e:	11 24       	eor	r1, r1
    8740:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8744:	50 e0       	ldi	r21, 0x00	; 0
    8746:	f9 01       	movw	r30, r18
    8748:	ee 0f       	add	r30, r30
    874a:	ff 1f       	adc	r31, r31
    874c:	e5 5e       	subi	r30, 0xE5	; 229
    874e:	f4 4f       	sbci	r31, 0xF4	; 244
    8750:	51 83       	std	Z+1, r21	; 0x01
    8752:	40 83       	st	Z, r20
    8754:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8758:	50 e0       	ldi	r21, 0x00	; 0
    875a:	f9 01       	movw	r30, r18
    875c:	ee 0f       	add	r30, r30
    875e:	ff 1f       	adc	r31, r31
    8760:	e3 5e       	subi	r30, 0xE3	; 227
    8762:	f4 4f       	sbci	r31, 0xF4	; 244
    8764:	51 83       	std	Z+1, r21	; 0x01
    8766:	40 83       	st	Z, r20
    8768:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    876c:	50 e0       	ldi	r21, 0x00	; 0
    876e:	22 0f       	add	r18, r18
    8770:	33 1f       	adc	r19, r19
    8772:	f9 01       	movw	r30, r18
    8774:	e1 5e       	subi	r30, 0xE1	; 225
    8776:	f4 4f       	sbci	r31, 0xF4	; 244
    8778:	51 83       	std	Z+1, r21	; 0x01
    877a:	40 83       	st	Z, r20
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    877c:	8f 5f       	subi	r24, 0xFF	; 255
    877e:	cc cf       	rjmp	.-104    	; 0x8718 <_Z18Edited_In_Schedulev+0x630>
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8780:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8784:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8788:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    878c:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8790:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8794:	81 30       	cpi	r24, 0x01	; 1
    8796:	09 f0       	breq	.+2      	; 0x879a <_Z18Edited_In_Schedulev+0x6b2>
    8798:	25 c2       	rjmp	.+1098   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 1//// :");
    879a:	66 ec       	ldi	r22, 0xC6	; 198
    879c:	7d e0       	ldi	r23, 0x0D	; 13
    879e:	86 ec       	ldi	r24, 0xC6	; 198
    87a0:	94 e1       	ldi	r25, 0x14	; 20
    87a2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    87a6:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    87aa:	4a e0       	ldi	r20, 0x0A	; 10
    87ac:	50 e0       	ldi	r21, 0x00	; 0
    87ae:	86 ec       	ldi	r24, 0xC6	; 198
    87b0:	94 e1       	ldi	r25, 0x14	; 20
    87b2:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    87b6:	86 ec       	ldi	r24, 0xC6	; 198
    87b8:	94 e1       	ldi	r25, 0x14	; 20
    87ba:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    87be:	12 c2       	rjmp	.+1060   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    87c0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    87c4:	81 30       	cpi	r24, 0x01	; 1
    87c6:	09 f0       	breq	.+2      	; 0x87ca <_Z18Edited_In_Schedulev+0x6e2>
    87c8:	0d c2       	rjmp	.+1050   	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    87ca:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    87ce:	80 e0       	ldi	r24, 0x00	; 0
    87d0:	90 e0       	ldi	r25, 0x00	; 0
    87d2:	20 e0       	ldi	r18, 0x00	; 0
    87d4:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    87d6:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    87da:	a9 01       	movw	r20, r18
    87dc:	42 5e       	subi	r20, 0xE2	; 226
    87de:	56 4f       	sbci	r21, 0xF6	; 246
    87e0:	fa 01       	movw	r30, r20
    87e2:	e5 5a       	subi	r30, 0xA5	; 165
    87e4:	ff 4f       	sbci	r31, 0xFF	; 255
    87e6:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    87e8:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    87ec:	3f 96       	adiw	r30, 0x0f	; 15
    87ee:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    87f0:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    87f4:	50 e0       	ldi	r21, 0x00	; 0
    87f6:	fc 01       	movw	r30, r24
    87f8:	ee 0f       	add	r30, r30
    87fa:	ff 1f       	adc	r31, r31
    87fc:	e5 5e       	subi	r30, 0xE5	; 229
    87fe:	f4 4f       	sbci	r31, 0xF4	; 244
    8800:	51 83       	std	Z+1, r21	; 0x01
    8802:	40 83       	st	Z, r20
    8804:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8808:	50 e0       	ldi	r21, 0x00	; 0
    880a:	fc 01       	movw	r30, r24
    880c:	ee 0f       	add	r30, r30
    880e:	ff 1f       	adc	r31, r31
    8810:	e3 5e       	subi	r30, 0xE3	; 227
    8812:	f4 4f       	sbci	r31, 0xF4	; 244
    8814:	51 83       	std	Z+1, r21	; 0x01
    8816:	40 83       	st	Z, r20
    8818:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    881c:	50 e0       	ldi	r21, 0x00	; 0
    881e:	fc 01       	movw	r30, r24
    8820:	ee 0f       	add	r30, r30
    8822:	ff 1f       	adc	r31, r31
    8824:	e1 5e       	subi	r30, 0xE1	; 225
    8826:	f4 4f       	sbci	r31, 0xF4	; 244
    8828:	51 83       	std	Z+1, r21	; 0x01
    882a:	40 83       	st	Z, r20
    882c:	2f 5f       	subi	r18, 0xFF	; 255
    882e:	3f 4f       	sbci	r19, 0xFF	; 255
    8830:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8832:	2f 30       	cpi	r18, 0x0F	; 15
    8834:	31 05       	cpc	r19, r1
    8836:	79 f6       	brne	.-98     	; 0x87d6 <_Z18Edited_In_Schedulev+0x6ee>
    8838:	cd c1       	rjmp	.+922    	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
							_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
						}
						
					}
					
					else if(_sSchedules.Running_Schedule_At > _sSchedules.Back_Up_Running_Scheduler_Number)
    883a:	90 91 e6 0b 	lds	r25, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    883e:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8842:	89 17       	cp	r24, r25
    8844:	08 f0       	brcs	.+2      	; 0x8848 <_Z18Edited_In_Schedulev+0x760>
    8846:	ce c1       	rjmp	.+924    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8848:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    884c:	81 30       	cpi	r24, 0x01	; 1
    884e:	51 f4       	brne	.+20     	; 0x8864 <_Z18Edited_In_Schedulev+0x77c>
						{
							_kSERAIL_MON_WRITE("my 7");
    8850:	61 ec       	ldi	r22, 0xC1	; 193
    8852:	7d e0       	ldi	r23, 0x0D	; 13
    8854:	86 ec       	ldi	r24, 0xC6	; 198
    8856:	94 e1       	ldi	r25, 0x14	; 20
    8858:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    885c:	86 ec       	ldi	r24, 0xC6	; 198
    885e:	94 e1       	ldi	r25, 0x14	; 20
    8860:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    8864:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8868:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    886c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8870:	81 30       	cpi	r24, 0x01	; 1
    8872:	51 f4       	brne	.+20     	; 0x8888 <_Z18Edited_In_Schedulev+0x7a0>
						{
							_kSERAIL_MON_WRITE("my 8");
    8874:	6c eb       	ldi	r22, 0xBC	; 188
    8876:	7d e0       	ldi	r23, 0x0D	; 13
    8878:	86 ec       	ldi	r24, 0xC6	; 198
    887a:	94 e1       	ldi	r25, 0x14	; 20
    887c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8880:	86 ec       	ldi	r24, 0xC6	; 198
    8882:	94 e1       	ldi	r25, 0x14	; 20
    8884:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    8888:	e0 91 d8 0b 	lds	r30, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    888c:	f0 e0       	ldi	r31, 0x00	; 0
    888e:	e7 59       	subi	r30, 0x97	; 151
    8890:	f6 4f       	sbci	r31, 0xF6	; 246
    8892:	90 81       	ld	r25, Z
    8894:	80 91 d9 0b 	lds	r24, 0x0BD9	; 0x800bd9 <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    8898:	98 13       	cpse	r25, r24
    889a:	04 c0       	rjmp	.+8      	; 0x88a4 <_Z18Edited_In_Schedulev+0x7bc>
    889c:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    88a0:	81 11       	cpse	r24, r1
    88a2:	41 c0       	rjmp	.+130    	; 0x8926 <_Z18Edited_In_Schedulev+0x83e>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    88a4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    88a8:	81 30       	cpi	r24, 0x01	; 1
    88aa:	51 f4       	brne	.+20     	; 0x88c0 <_Z18Edited_In_Schedulev+0x7d8>
							{
								_kSERAIL_MON_WRITE("my 9");
    88ac:	67 eb       	ldi	r22, 0xB7	; 183
    88ae:	7d e0       	ldi	r23, 0x0D	; 13
    88b0:	86 ec       	ldi	r24, 0xC6	; 198
    88b2:	94 e1       	ldi	r25, 0x14	; 20
    88b4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    88b8:	86 ec       	ldi	r24, 0xC6	; 198
    88ba:	94 e1       	ldi	r25, 0x14	; 20
    88bc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    88c0:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    88c4:	88 23       	and	r24, r24
    88c6:	09 f4       	brne	.+2      	; 0x88ca <_Z18Edited_In_Schedulev+0x7e2>
    88c8:	a0 c1       	rjmp	.+832    	; 0x8c0a <_Z18Edited_In_Schedulev+0xb22>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    88ca:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    88ce:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    88d2:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    88d6:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    88da:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    88de:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    88e2:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    88e6:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    88ea:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    88ee:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    88f2:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    88f6:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    88fa:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    88fe:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8902:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8906:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    890a:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    890e:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8912:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8916:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    891a:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    891e:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8922:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8926:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    892a:	82 30       	cpi	r24, 0x02	; 2
    892c:	08 f4       	brcc	.+2      	; 0x8930 <_Z18Edited_In_Schedulev+0x848>
    892e:	92 c0       	rjmp	.+292    	; 0x8a54 <_Z18Edited_In_Schedulev+0x96c>
    8930:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8932:	84 2f       	mov	r24, r20
    8934:	90 e0       	ldi	r25, 0x00	; 0
    8936:	20 91 e6 0b 	lds	r18, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    893a:	30 e0       	ldi	r19, 0x00	; 0
    893c:	21 50       	subi	r18, 0x01	; 1
    893e:	31 09       	sbc	r19, r1
    8940:	82 17       	cp	r24, r18
    8942:	93 07       	cpc	r25, r19
    8944:	84 f5       	brge	.+96     	; 0x89a6 <_Z18Edited_In_Schedulev+0x8be>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8946:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    894a:	82 5e       	subi	r24, 0xE2	; 226
    894c:	96 4f       	sbci	r25, 0xF6	; 246
    894e:	fc 01       	movw	r30, r24
    8950:	e5 5a       	subi	r30, 0xA5	; 165
    8952:	ff 4f       	sbci	r31, 0xFF	; 255
    8954:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8956:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    895a:	3f 96       	adiw	r30, 0x0f	; 15
    895c:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    895e:	23 e0       	ldi	r18, 0x03	; 3
    8960:	42 9f       	mul	r20, r18
    8962:	c0 01       	movw	r24, r0
    8964:	11 24       	eor	r1, r1
    8966:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    896a:	30 e0       	ldi	r19, 0x00	; 0
    896c:	fc 01       	movw	r30, r24
    896e:	ee 0f       	add	r30, r30
    8970:	ff 1f       	adc	r31, r31
    8972:	e5 5e       	subi	r30, 0xE5	; 229
    8974:	f4 4f       	sbci	r31, 0xF4	; 244
    8976:	31 83       	std	Z+1, r19	; 0x01
    8978:	20 83       	st	Z, r18
    897a:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    897e:	30 e0       	ldi	r19, 0x00	; 0
    8980:	fc 01       	movw	r30, r24
    8982:	ee 0f       	add	r30, r30
    8984:	ff 1f       	adc	r31, r31
    8986:	e3 5e       	subi	r30, 0xE3	; 227
    8988:	f4 4f       	sbci	r31, 0xF4	; 244
    898a:	31 83       	std	Z+1, r19	; 0x01
    898c:	20 83       	st	Z, r18
    898e:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8992:	30 e0       	ldi	r19, 0x00	; 0
    8994:	88 0f       	add	r24, r24
    8996:	99 1f       	adc	r25, r25
    8998:	fc 01       	movw	r30, r24
    899a:	e1 5e       	subi	r30, 0xE1	; 225
    899c:	f4 4f       	sbci	r31, 0xF4	; 244
    899e:	31 83       	std	Z+1, r19	; 0x01
    89a0:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    89a2:	4f 5f       	subi	r20, 0xFF	; 255
    89a4:	c6 cf       	rjmp	.-116    	; 0x8932 <_Z18Edited_In_Schedulev+0x84a>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    89a6:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    89aa:	81 50       	subi	r24, 0x01	; 1
    89ac:	8f 30       	cpi	r24, 0x0F	; 15
    89ae:	90 f5       	brcc	.+100    	; 0x8a14 <_Z18Edited_In_Schedulev+0x92c>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    89b0:	28 2f       	mov	r18, r24
    89b2:	30 e0       	ldi	r19, 0x00	; 0
    89b4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    89b8:	22 5e       	subi	r18, 0xE2	; 226
    89ba:	36 4f       	sbci	r19, 0xF6	; 246
    89bc:	f9 01       	movw	r30, r18
    89be:	e5 5a       	subi	r30, 0xA5	; 165
    89c0:	ff 4f       	sbci	r31, 0xFF	; 255
    89c2:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    89c4:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    89c8:	3f 96       	adiw	r30, 0x0f	; 15
    89ca:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    89cc:	93 e0       	ldi	r25, 0x03	; 3
    89ce:	89 9f       	mul	r24, r25
    89d0:	90 01       	movw	r18, r0
    89d2:	11 24       	eor	r1, r1
    89d4:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    89d8:	50 e0       	ldi	r21, 0x00	; 0
    89da:	f9 01       	movw	r30, r18
    89dc:	ee 0f       	add	r30, r30
    89de:	ff 1f       	adc	r31, r31
    89e0:	e5 5e       	subi	r30, 0xE5	; 229
    89e2:	f4 4f       	sbci	r31, 0xF4	; 244
    89e4:	51 83       	std	Z+1, r21	; 0x01
    89e6:	40 83       	st	Z, r20
    89e8:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    89ec:	50 e0       	ldi	r21, 0x00	; 0
    89ee:	f9 01       	movw	r30, r18
    89f0:	ee 0f       	add	r30, r30
    89f2:	ff 1f       	adc	r31, r31
    89f4:	e3 5e       	subi	r30, 0xE3	; 227
    89f6:	f4 4f       	sbci	r31, 0xF4	; 244
    89f8:	51 83       	std	Z+1, r21	; 0x01
    89fa:	40 83       	st	Z, r20
    89fc:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8a00:	50 e0       	ldi	r21, 0x00	; 0
    8a02:	22 0f       	add	r18, r18
    8a04:	33 1f       	adc	r19, r19
    8a06:	f9 01       	movw	r30, r18
    8a08:	e1 5e       	subi	r30, 0xE1	; 225
    8a0a:	f4 4f       	sbci	r31, 0xF4	; 244
    8a0c:	51 83       	std	Z+1, r21	; 0x01
    8a0e:	40 83       	st	Z, r20
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8a10:	8f 5f       	subi	r24, 0xFF	; 255
    8a12:	cc cf       	rjmp	.-104    	; 0x89ac <_Z18Edited_In_Schedulev+0x8c4>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8a14:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8a18:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8a1c:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8a20:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8a24:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8a28:	81 30       	cpi	r24, 0x01	; 1
    8a2a:	09 f0       	breq	.+2      	; 0x8a2e <_Z18Edited_In_Schedulev+0x946>
    8a2c:	db c0       	rjmp	.+438    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 4//// :");
    8a2e:	65 e8       	ldi	r22, 0x85	; 133
    8a30:	7d e0       	ldi	r23, 0x0D	; 13
    8a32:	86 ec       	ldi	r24, 0xC6	; 198
    8a34:	94 e1       	ldi	r25, 0x14	; 20
    8a36:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    8a3a:	86 ec       	ldi	r24, 0xC6	; 198
    8a3c:	94 e1       	ldi	r25, 0x14	; 20
    8a3e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    8a42:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8a46:	4a e0       	ldi	r20, 0x0A	; 10
    8a48:	50 e0       	ldi	r21, 0x00	; 0
    8a4a:	86 ec       	ldi	r24, 0xC6	; 198
    8a4c:	94 e1       	ldi	r25, 0x14	; 20
    8a4e:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
    8a52:	c8 c0       	rjmp	.+400    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    8a54:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8a58:	81 30       	cpi	r24, 0x01	; 1
    8a5a:	09 f0       	breq	.+2      	; 0x8a5e <_Z18Edited_In_Schedulev+0x976>
    8a5c:	c3 c0       	rjmp	.+390    	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    8a5e:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    8a62:	80 e0       	ldi	r24, 0x00	; 0
    8a64:	90 e0       	ldi	r25, 0x00	; 0
    8a66:	20 e0       	ldi	r18, 0x00	; 0
    8a68:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8a6a:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a6e:	a9 01       	movw	r20, r18
    8a70:	42 5e       	subi	r20, 0xE2	; 226
    8a72:	56 4f       	sbci	r21, 0xF6	; 246
    8a74:	fa 01       	movw	r30, r20
    8a76:	e5 5a       	subi	r30, 0xA5	; 165
    8a78:	ff 4f       	sbci	r31, 0xFF	; 255
    8a7a:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    8a7c:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8a80:	3f 96       	adiw	r30, 0x0f	; 15
    8a82:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8a84:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a88:	50 e0       	ldi	r21, 0x00	; 0
    8a8a:	fc 01       	movw	r30, r24
    8a8c:	ee 0f       	add	r30, r30
    8a8e:	ff 1f       	adc	r31, r31
    8a90:	e5 5e       	subi	r30, 0xE5	; 229
    8a92:	f4 4f       	sbci	r31, 0xF4	; 244
    8a94:	51 83       	std	Z+1, r21	; 0x01
    8a96:	40 83       	st	Z, r20
    8a98:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8a9c:	50 e0       	ldi	r21, 0x00	; 0
    8a9e:	fc 01       	movw	r30, r24
    8aa0:	ee 0f       	add	r30, r30
    8aa2:	ff 1f       	adc	r31, r31
    8aa4:	e3 5e       	subi	r30, 0xE3	; 227
    8aa6:	f4 4f       	sbci	r31, 0xF4	; 244
    8aa8:	51 83       	std	Z+1, r21	; 0x01
    8aaa:	40 83       	st	Z, r20
    8aac:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8ab0:	50 e0       	ldi	r21, 0x00	; 0
    8ab2:	fc 01       	movw	r30, r24
    8ab4:	ee 0f       	add	r30, r30
    8ab6:	ff 1f       	adc	r31, r31
    8ab8:	e1 5e       	subi	r30, 0xE1	; 225
    8aba:	f4 4f       	sbci	r31, 0xF4	; 244
    8abc:	51 83       	std	Z+1, r21	; 0x01
    8abe:	40 83       	st	Z, r20
    8ac0:	2f 5f       	subi	r18, 0xFF	; 255
    8ac2:	3f 4f       	sbci	r19, 0xFF	; 255
    8ac4:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8ac6:	2f 30       	cpi	r18, 0x0F	; 15
    8ac8:	31 05       	cpc	r19, r1
    8aca:	79 f6       	brne	.-98     	; 0x8a6a <_Z18Edited_In_Schedulev+0x982>
    8acc:	83 c0       	rjmp	.+262    	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8ace:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8ad2:	81 11       	cpse	r24, r1
    8ad4:	88 c0       	rjmp	.+272    	; 0x8be6 <_Z18Edited_In_Schedulev+0xafe>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8ad6:	80 91 d8 0b 	lds	r24, 0x0BD8	; 0x800bd8 <_sSchedules+0x2ba>
    8ada:	88 23       	and	r24, r24
    8adc:	09 f4       	brne	.+2      	; 0x8ae0 <_Z18Edited_In_Schedulev+0x9f8>
    8ade:	83 c0       	rjmp	.+262    	; 0x8be6 <_Z18Edited_In_Schedulev+0xafe>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ae0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8ae4:	81 30       	cpi	r24, 0x01	; 1
    8ae6:	51 f4       	brne	.+20     	; 0x8afc <_Z18Edited_In_Schedulev+0xa14>
		{
			_kSERAIL_MON_WRITE("my 14");
    8ae8:	6f e7       	ldi	r22, 0x7F	; 127
    8aea:	7d e0       	ldi	r23, 0x0D	; 13
    8aec:	86 ec       	ldi	r24, 0xC6	; 198
    8aee:	94 e1       	ldi	r25, 0x14	; 20
    8af0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    8af4:	86 ec       	ldi	r24, 0xC6	; 198
    8af6:	94 e1       	ldi	r25, 0x14	; 20
    8af8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8afc:	10 92 d8 0b 	sts	0x0BD8, r1	; 0x800bd8 <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8b00:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8b04:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sSchedules+0x2bd>
    8b08:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8b0c:	10 92 dd 0b 	sts	0x0BDD, r1	; 0x800bdd <_sSchedules+0x2bf>
    8b10:	10 92 dc 0b 	sts	0x0BDC, r1	; 0x800bdc <_sSchedules+0x2be>
    8b14:	10 92 df 0b 	sts	0x0BDF, r1	; 0x800bdf <_sSchedules+0x2c1>
    8b18:	10 92 de 0b 	sts	0x0BDE, r1	; 0x800bde <_sSchedules+0x2c0>
    8b1c:	10 92 e1 0b 	sts	0x0BE1, r1	; 0x800be1 <_sSchedules+0x2c3>
    8b20:	10 92 e0 0b 	sts	0x0BE0, r1	; 0x800be0 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    8b24:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8b28:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    8b2c:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
    8b30:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
    8b34:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
    8b38:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8b3c:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8b40:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    8b44:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    8b48:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8b4c:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
		}
		
		Return_Calculated_Previous_Day_Date(1);
    8b50:	81 e0       	ldi	r24, 0x01	; 1
    8b52:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    8b56:	80 e0       	ldi	r24, 0x00	; 0
    8b58:	90 e0       	ldi	r25, 0x00	; 0
    8b5a:	20 e0       	ldi	r18, 0x00	; 0
    8b5c:	30 e0       	ldi	r19, 0x00	; 0
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    8b5e:	60 91 ec 0b 	lds	r22, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b62:	a9 01       	movw	r20, r18
    8b64:	42 5e       	subi	r20, 0xE2	; 226
    8b66:	56 4f       	sbci	r21, 0xF6	; 246
    8b68:	fa 01       	movw	r30, r20
    8b6a:	e5 5a       	subi	r30, 0xA5	; 165
    8b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    8b6e:	60 83       	st	Z, r22
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    8b70:	60 91 ed 0b 	lds	r22, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8b74:	3f 96       	adiw	r30, 0x0f	; 15
    8b76:	60 83       	st	Z, r22
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8b78:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b7c:	50 e0       	ldi	r21, 0x00	; 0
    8b7e:	fc 01       	movw	r30, r24
    8b80:	ee 0f       	add	r30, r30
    8b82:	ff 1f       	adc	r31, r31
    8b84:	e5 5e       	subi	r30, 0xE5	; 229
    8b86:	f4 4f       	sbci	r31, 0xF4	; 244
    8b88:	51 83       	std	Z+1, r21	; 0x01
    8b8a:	40 83       	st	Z, r20
    8b8c:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8b90:	50 e0       	ldi	r21, 0x00	; 0
    8b92:	fc 01       	movw	r30, r24
    8b94:	ee 0f       	add	r30, r30
    8b96:	ff 1f       	adc	r31, r31
    8b98:	e3 5e       	subi	r30, 0xE3	; 227
    8b9a:	f4 4f       	sbci	r31, 0xF4	; 244
    8b9c:	51 83       	std	Z+1, r21	; 0x01
    8b9e:	40 83       	st	Z, r20
    8ba0:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8ba4:	50 e0       	ldi	r21, 0x00	; 0
    8ba6:	fc 01       	movw	r30, r24
    8ba8:	ee 0f       	add	r30, r30
    8baa:	ff 1f       	adc	r31, r31
    8bac:	e1 5e       	subi	r30, 0xE1	; 225
    8bae:	f4 4f       	sbci	r31, 0xF4	; 244
    8bb0:	51 83       	std	Z+1, r21	; 0x01
    8bb2:	40 83       	st	Z, r20
    8bb4:	2f 5f       	subi	r18, 0xFF	; 255
    8bb6:	3f 4f       	sbci	r19, 0xFF	; 255
    8bb8:	03 96       	adiw	r24, 0x03	; 3
			_sSchedules.Running_Tank[tank_number] = _kOFF;
		}
		
		Return_Calculated_Previous_Day_Date(1);
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    8bba:	2e 30       	cpi	r18, 0x0E	; 14
    8bbc:	31 05       	cpc	r19, r1
    8bbe:	79 f6       	brne	.-98     	; 0x8b5e <_Z18Edited_In_Schedulev+0xa76>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8bc0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8bc4:	81 30       	cpi	r24, 0x01	; 1
    8bc6:	31 f4       	brne	.+12     	; 0x8bd4 <_Z18Edited_In_Schedulev+0xaec>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8bc8:	6a e3       	ldi	r22, 0x3A	; 58
    8bca:	7d e0       	ldi	r23, 0x0D	; 13
    8bcc:	86 ec       	ldi	r24, 0xC6	; 198
    8bce:	94 e1       	ldi	r25, 0x14	; 20
    8bd0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    8bd4:	80 91 ec 0b 	lds	r24, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    8bd8:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8bdc:	80 91 ed 0b 	lds	r24, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    8be0:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8be4:	15 c0       	rjmp	.+42     	; 0x8c10 <_Z18Edited_In_Schedulev+0xb28>
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8be6:	80 91 e6 0b 	lds	r24, 0x0BE6	; 0x800be6 <_sSchedules+0x2c8>
    8bea:	81 11       	cpse	r24, r1
    8bec:	fb cf       	rjmp	.-10     	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
    8bee:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    8bf2:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    8bf6:	89 2b       	or	r24, r25
    8bf8:	09 f4       	brne	.+2      	; 0x8bfc <_Z18Edited_In_Schedulev+0xb14>
    8bfa:	72 cf       	rjmp	.-284    	; 0x8ae0 <_Z18Edited_In_Schedulev+0x9f8>
    8bfc:	f3 cf       	rjmp	.-26     	; 0x8be4 <_Z18Edited_In_Schedulev+0xafc>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
						}
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8bfe:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8c02:	d7 cb       	rjmp	.-2130   	; 0x83b2 <_Z18Edited_In_Schedulev+0x2ca>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8c04:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8c08:	1a cd       	rjmp	.-1484   	; 0x863e <_Z18Edited_In_Schedulev+0x556>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8c0a:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    8c0e:	61 ce       	rjmp	.-830    	; 0x88d2 <_Z18Edited_In_Schedulev+0x7ea>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8c10:	df 91       	pop	r29
    8c12:	cf 91       	pop	r28
    8c14:	1f 91       	pop	r17
    8c16:	0f 91       	pop	r16
    8c18:	ff 90       	pop	r15
    8c1a:	ef 90       	pop	r14
    8c1c:	08 95       	ret

00008c1e <_Z18Next_Day_Calculatehh>:
		return 0;
	}
}

unsigned char Next_Day_Calculate(unsigned char date,unsigned char month)
{
    8c1e:	1f 93       	push	r17
    8c20:	cf 93       	push	r28
    8c22:	df 93       	push	r29
    8c24:	c8 2f       	mov	r28, r24
    8c26:	16 2f       	mov	r17, r22
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c28:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8c2c:	81 30       	cpi	r24, 0x01	; 1
    8c2e:	89 f4       	brne	.+34     	; 0x8c52 <_Z18Next_Day_Calculatehh+0x34>
	{
		_kSERAIL_MON_WRITE("Current date 1: ");
    8c30:	6f e7       	ldi	r22, 0x7F	; 127
    8c32:	7c e0       	ldi	r23, 0x0C	; 12
    8c34:	86 ec       	ldi	r24, 0xC6	; 198
    8c36:	94 e1       	ldi	r25, 0x14	; 20
    8c38:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8c3c:	4a e0       	ldi	r20, 0x0A	; 10
    8c3e:	50 e0       	ldi	r21, 0x00	; 0
    8c40:	6c 2f       	mov	r22, r28
    8c42:	86 ec       	ldi	r24, 0xC6	; 198
    8c44:	94 e1       	ldi	r25, 0x14	; 20
    8c46:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8c4a:	86 ec       	ldi	r24, 0xC6	; 198
    8c4c:	94 e1       	ldi	r25, 0x14	; 20
    8c4e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	
	date = date + _sSchedules.Days_In_Between_Schedules;
    8c52:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8c56:	c8 0f       	add	r28, r24
	unsigned char c_month = month;
	unsigned char year = _sRuble_Parameters.Update_Local_Date[2];
    8c58:	d0 91 f4 13 	lds	r29, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c5c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8c60:	81 30       	cpi	r24, 0x01	; 1
    8c62:	19 f5       	brne	.+70     	; 0x8caa <_Z18Next_Day_Calculatehh+0x8c>
	{
		_kSERAIL_MON_WRITE("Current date 2: ");
    8c64:	6e e6       	ldi	r22, 0x6E	; 110
    8c66:	7c e0       	ldi	r23, 0x0C	; 12
    8c68:	86 ec       	ldi	r24, 0xC6	; 198
    8c6a:	94 e1       	ldi	r25, 0x14	; 20
    8c6c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8c70:	4a e0       	ldi	r20, 0x0A	; 10
    8c72:	50 e0       	ldi	r21, 0x00	; 0
    8c74:	6c 2f       	mov	r22, r28
    8c76:	86 ec       	ldi	r24, 0xC6	; 198
    8c78:	94 e1       	ldi	r25, 0x14	; 20
    8c7a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8c7e:	86 ec       	ldi	r24, 0xC6	; 198
    8c80:	94 e1       	ldi	r25, 0x14	; 20
    8c82:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("diays in beteweeen .............: ");
    8c86:	6b e4       	ldi	r22, 0x4B	; 75
    8c88:	7c e0       	ldi	r23, 0x0C	; 12
    8c8a:	86 ec       	ldi	r24, 0xC6	; 198
    8c8c:	94 e1       	ldi	r25, 0x14	; 20
    8c8e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
    8c92:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8c96:	4a e0       	ldi	r20, 0x0A	; 10
    8c98:	50 e0       	ldi	r21, 0x00	; 0
    8c9a:	86 ec       	ldi	r24, 0xC6	; 198
    8c9c:	94 e1       	ldi	r25, 0x14	; 20
    8c9e:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8ca2:	86 ec       	ldi	r24, 0xC6	; 198
    8ca4:	94 e1       	ldi	r25, 0x14	; 20
    8ca6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	
	switch(month)
    8caa:	81 2f       	mov	r24, r17
    8cac:	90 e0       	ldi	r25, 0x00	; 0
    8cae:	fc 01       	movw	r30, r24
    8cb0:	31 97       	sbiw	r30, 0x01	; 1
    8cb2:	ec 30       	cpi	r30, 0x0C	; 12
    8cb4:	f1 05       	cpc	r31, r1
    8cb6:	08 f0       	brcs	.+2      	; 0x8cba <_Z18Next_Day_Calculatehh+0x9c>
    8cb8:	56 c0       	rjmp	.+172    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
    8cba:	88 27       	eor	r24, r24
    8cbc:	ef 52       	subi	r30, 0x2F	; 47
    8cbe:	ff 4f       	sbci	r31, 0xFF	; 255
    8cc0:	8f 4f       	sbci	r24, 0xFF	; 255
    8cc2:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
    8cc6:	8d 2f       	mov	r24, r29
    8cc8:	83 70       	andi	r24, 0x03	; 3
			
		}break;
		
		case _eFEB:
		{
			if(year%4)
    8cca:	61 f0       	breq	.+24     	; 0x8ce4 <_Z18Next_Day_Calculatehh+0xc6>
			{
				if(date > 28)
    8ccc:	cd 31       	cpi	r28, 0x1D	; 29
    8cce:	08 f0       	brcs	.+2      	; 0x8cd2 <_Z18Next_Day_Calculatehh+0xb4>
    8cd0:	4a c0       	rjmp	.+148    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
					
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >=  date)
    8cd2:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8cd6:	8c 17       	cp	r24, r28
    8cd8:	08 f4       	brcc	.+2      	; 0x8cdc <_Z18Next_Day_Calculatehh+0xbe>
    8cda:	45 c0       	rjmp	.+138    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8cdc:	c8 13       	cpse	r28, r24
    8cde:	0b c0       	rjmp	.+22     	; 0x8cf6 <_Z18Next_Day_Calculatehh+0xd8>
					{
						return 1;
    8ce0:	81 e0       	ldi	r24, 0x01	; 1
    8ce2:	42 c0       	rjmp	.+132    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
					}
				}
			}
			else
			{
				if(date > 29)
    8ce4:	ce 31       	cpi	r28, 0x1E	; 30
    8ce6:	08 f0       	brcs	.+2      	; 0x8cea <_Z18Next_Day_Calculatehh+0xcc>
    8ce8:	3f c0       	rjmp	.+126    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
						}
					}
				}
				else
				{
					if( _sRuble_Parameters.Update_Local_Date[0] >=   date)
    8cea:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8cee:	9c 17       	cp	r25, r28
    8cf0:	d8 f1       	brcs	.+118    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
					{
						if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8cf2:	c9 17       	cp	r28, r25
    8cf4:	a9 f3       	breq	.-22     	; 0x8ce0 <_Z18Next_Day_Calculatehh+0xc2>
					{
						return 1;
					}
					else
					{
						return 2;
    8cf6:	82 e0       	ldi	r24, 0x02	; 2
    8cf8:	37 c0       	rjmp	.+110    	; 0x8d68 <_Z18Next_Day_Calculatehh+0x14a>
			
		}break;
		
		case _eMARCH:
		{
			if(date > 31)
    8cfa:	c0 32       	cpi	r28, 0x20	; 32
    8cfc:	a0 f5       	brcc	.+104    	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >= date)
    8cfe:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8d02:	8c 17       	cp	r24, r28
    8d04:	80 f1       	brcs	.+96     	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d06:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8d0a:	81 30       	cpi	r24, 0x01	; 1
    8d0c:	19 f5       	brne	.+70     	; 0x8d54 <_Z18Next_Day_Calculatehh+0x136>
					{
						_kSERAIL_MON_WRITE("Required date : ");
    8d0e:	6a e3       	ldi	r22, 0x3A	; 58
    8d10:	7c e0       	ldi	r23, 0x0C	; 12
    8d12:	86 ec       	ldi	r24, 0xC6	; 198
    8d14:	94 e1       	ldi	r25, 0x14	; 20
    8d16:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(date);
    8d1a:	4a e0       	ldi	r20, 0x0A	; 10
    8d1c:	50 e0       	ldi	r21, 0x00	; 0
    8d1e:	6c 2f       	mov	r22, r28
    8d20:	86 ec       	ldi	r24, 0xC6	; 198
    8d22:	94 e1       	ldi	r25, 0x14	; 20
    8d24:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8d28:	86 ec       	ldi	r24, 0xC6	; 198
    8d2a:	94 e1       	ldi	r25, 0x14	; 20
    8d2c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						
						_kSERAIL_MON_WRITE("Current date : ");
    8d30:	6a e2       	ldi	r22, 0x2A	; 42
    8d32:	7c e0       	ldi	r23, 0x0C	; 12
    8d34:	86 ec       	ldi	r24, 0xC6	; 198
    8d36:	94 e1       	ldi	r25, 0x14	; 20
    8d38:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    8d3c:	4a e0       	ldi	r20, 0x0A	; 10
    8d3e:	50 e0       	ldi	r21, 0x00	; 0
    8d40:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8d44:	86 ec       	ldi	r24, 0xC6	; 198
    8d46:	94 e1       	ldi	r25, 0x14	; 20
    8d48:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8d4c:	86 ec       	ldi	r24, 0xC6	; 198
    8d4e:	94 e1       	ldi	r25, 0x14	; 20
    8d50:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					
					
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8d54:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    8d58:	c1 cf       	rjmp	.-126    	; 0x8cdc <_Z18Next_Day_Calculatehh+0xbe>
			
		}break;
		
		case _eNOV:
		{
			if(date > 30)
    8d5a:	cf 31       	cpi	r28, 0x1F	; 31
    8d5c:	20 f4       	brcc	.+8      	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
    8d5e:	b9 cf       	rjmp	.-142    	; 0x8cd2 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
		case _eDEC:
		{
			if(date > 31)
    8d60:	c0 32       	cpi	r28, 0x20	; 32
    8d62:	08 f4       	brcc	.+2      	; 0x8d66 <_Z18Next_Day_Calculatehh+0x148>
    8d64:	b6 cf       	rjmp	.-148    	; 0x8cd2 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
	}
	
	return 0;
    8d66:	80 e0       	ldi	r24, 0x00	; 0
	
}
    8d68:	df 91       	pop	r29
    8d6a:	cf 91       	pop	r28
    8d6c:	1f 91       	pop	r17
    8d6e:	08 95       	ret

00008d70 <_Z22Do_Not_Repeat_Schedulev>:
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}

unsigned char Do_Not_Repeat_Schedule(void)
{
    8d70:	cf 93       	push	r28
	unsigned char check_for_repeat;
	
	if(_sSchedules.Cyclic_Schedule_Flag != _kSET)
    8d72:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    8d76:	81 30       	cpi	r24, 0x01	; 1
    8d78:	09 f4       	brne	.+2      	; 0x8d7c <_Z22Do_Not_Repeat_Schedulev+0xc>
    8d7a:	4b c0       	rjmp	.+150    	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
	{
		if(_sSchedules.Which_Sheduler_Is_Running)
    8d7c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d80:	88 23       	and	r24, r24
    8d82:	09 f4       	brne	.+2      	; 0x8d86 <_Z22Do_Not_Repeat_Schedulev+0x16>
    8d84:	46 c0       	rjmp	.+140    	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8d86:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d8a:	81 30       	cpi	r24, 0x01	; 1
    8d8c:	29 f4       	brne	.+10     	; 0x8d98 <_Z22Do_Not_Repeat_Schedulev+0x28>
			{
				
				check_for_repeat = Next_Day_Calculate(_sSchedules.Started_Date,_sSchedules.Started_Month);
    8d8e:	60 91 2b 09 	lds	r22, 0x092B	; 0x80092b <_sSchedules+0xd>
    8d92:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8d96:	04 c0       	rjmp	.+8      	; 0x8da0 <_Z22Do_Not_Repeat_Schedulev+0x30>
			}
			else
			{
				check_for_repeat = Next_Day_Calculate(_sSchedules.First_Schedule_Irrigated_Date,_sSchedules.First_Schedule_Irrigated_Month);
    8d98:	60 91 ef 0b 	lds	r22, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8d9c:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8da0:	3e df       	rcall	.-388    	; 0x8c1e <_Z18Next_Day_Calculatehh>
			}
			
			if(check_for_repeat == 1)
    8da2:	81 30       	cpi	r24, 0x01	; 1
    8da4:	09 f0       	breq	.+2      	; 0x8da8 <_Z22Do_Not_Repeat_Schedulev+0x38>
    8da6:	53 c0       	rjmp	.+166    	; 0x8e4e <_Z22Do_Not_Repeat_Schedulev+0xde>
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8da8:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8dac:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8db0:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8db4:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8db8:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    8dbc:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    8dc0:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    8dc4:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    8dc8:	48 17       	cp	r20, r24
    8dca:	59 07       	cpc	r21, r25
    8dcc:	6a 07       	cpc	r22, r26
    8dce:	7b 07       	cpc	r23, r27
    8dd0:	00 f5       	brcc	.+64     	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8dd2:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8dd6:	81 30       	cpi	r24, 0x01	; 1
    8dd8:	f1 f4       	brne	.+60     	; 0x8e16 <_Z22Do_Not_Repeat_Schedulev+0xa6>
						/*for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
						}*/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8dda:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8dde:	81 30       	cpi	r24, 0x01	; 1
    8de0:	51 f4       	brne	.+20     	; 0x8df6 <_Z22Do_Not_Repeat_Schedulev+0x86>
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1 ##############################");
    8de2:	62 e0       	ldi	r22, 0x02	; 2
    8de4:	7d e0       	ldi	r23, 0x0D	; 13
    8de6:	86 ec       	ldi	r24, 0xC6	; 198
    8de8:	94 e1       	ldi	r25, 0x14	; 20
    8dea:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8dee:	86 ec       	ldi	r24, 0xC6	; 198
    8df0:	94 e1       	ldi	r25, 0x14	; 20
    8df2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
    8df6:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    8dfa:	f0 e0       	ldi	r31, 0x00	; 0
    8dfc:	ee 0f       	add	r30, r30
    8dfe:	ff 1f       	adc	r31, r31
    8e00:	e4 5e       	subi	r30, 0xE4	; 228
    8e02:	f6 4f       	sbci	r31, 0xF6	; 246
    8e04:	87 8d       	ldd	r24, Z+31	; 0x1f
    8e06:	90 a1       	ldd	r25, Z+32	; 0x20
    8e08:	01 96       	adiw	r24, 0x01	; 1
    8e0a:	90 93 27 09 	sts	0x0927, r25	; 0x800927 <_sSchedules+0x9>
    8e0e:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <_sSchedules+0x8>
						return 0;
    8e12:	c0 e0       	ldi	r28, 0x00	; 0
    8e14:	3f c0       	rjmp	.+126    	; 0x8e94 <_Z22Do_Not_Repeat_Schedulev+0x124>
			
			if(check_for_repeat == 1)
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8e16:	80 e0       	ldi	r24, 0x00	; 0
    8e18:	90 e0       	ldi	r25, 0x00	; 0
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8e1a:	40 91 ee 0b 	lds	r20, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8e1e:	9c 01       	movw	r18, r24
    8e20:	22 5e       	subi	r18, 0xE2	; 226
    8e22:	36 4f       	sbci	r19, 0xF6	; 246
    8e24:	f9 01       	movw	r30, r18
    8e26:	e5 5a       	subi	r30, 0xA5	; 165
    8e28:	ff 4f       	sbci	r31, 0xFF	; 255
    8e2a:	40 83       	st	Z, r20
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8e2c:	40 91 ef 0b 	lds	r20, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8e30:	3f 96       	adiw	r30, 0x0f	; 15
    8e32:	40 83       	st	Z, r20
    8e34:	01 96       	adiw	r24, 0x01	; 1
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
						return 0;
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8e36:	8f 30       	cpi	r24, 0x0F	; 15
    8e38:	91 05       	cpc	r25, r1
    8e3a:	79 f7       	brne	.-34     	; 0x8e1a <_Z22Do_Not_Repeat_Schedulev+0xaa>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e3c:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8e40:	c1 30       	cpi	r28, 0x01	; 1
    8e42:	11 f0       	breq	.+4      	; 0x8e48 <_Z22Do_Not_Repeat_Schedulev+0xd8>
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
							_kSERIAL_MON_CLEAR();
						}
					}
					
					return 1;
    8e44:	c1 e0       	ldi	r28, 0x01	; 1
    8e46:	26 c0       	rjmp	.+76     	; 0x8e94 <_Z22Do_Not_Repeat_Schedulev+0x124>
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
    8e48:	68 ec       	ldi	r22, 0xC8	; 200
    8e4a:	7c e0       	ldi	r23, 0x0C	; 12
    8e4c:	1b c0       	rjmp	.+54     	; 0x8e84 <_Z22Do_Not_Repeat_Schedulev+0x114>
					}
					
					return 1;
				}
			}
			if(check_for_repeat == 2)
    8e4e:	82 30       	cpi	r24, 0x02	; 2
    8e50:	01 f7       	brne	.-64     	; 0x8e12 <_Z22Do_Not_Repeat_Schedulev+0xa2>
    8e52:	80 e0       	ldi	r24, 0x00	; 0
    8e54:	90 e0       	ldi	r25, 0x00	; 0
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8e56:	40 91 ee 0b 	lds	r20, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    8e5a:	9c 01       	movw	r18, r24
    8e5c:	22 5e       	subi	r18, 0xE2	; 226
    8e5e:	36 4f       	sbci	r19, 0xF6	; 246
    8e60:	f9 01       	movw	r30, r18
    8e62:	e5 5a       	subi	r30, 0xA5	; 165
    8e64:	ff 4f       	sbci	r31, 0xFF	; 255
    8e66:	40 83       	st	Z, r20
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8e68:	40 91 ef 0b 	lds	r20, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    8e6c:	3f 96       	adiw	r30, 0x0f	; 15
    8e6e:	40 83       	st	Z, r20
    8e70:	01 96       	adiw	r24, 0x01	; 1
					return 1;
				}
			}
			if(check_for_repeat == 2)
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8e72:	8f 30       	cpi	r24, 0x0F	; 15
    8e74:	91 05       	cpc	r25, r1
    8e76:	79 f7       	brne	.-34     	; 0x8e56 <_Z22Do_Not_Repeat_Schedulev+0xe6>
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e78:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8e7c:	c1 30       	cpi	r28, 0x01	; 1
    8e7e:	11 f7       	brne	.-60     	; 0x8e44 <_Z22Do_Not_Repeat_Schedulev+0xd4>
				{
					_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 2 ##############################");
    8e80:	60 e9       	ldi	r22, 0x90	; 144
    8e82:	7c e0       	ldi	r23, 0x0C	; 12
    8e84:	86 ec       	ldi	r24, 0xC6	; 198
    8e86:	94 e1       	ldi	r25, 0x14	; 20
    8e88:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8e8c:	86 ec       	ldi	r24, 0xC6	; 198
    8e8e:	94 e1       	ldi	r25, 0x14	; 20
    8e90:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	else
	{
		return 0;
	}
}
    8e94:	8c 2f       	mov	r24, r28
    8e96:	cf 91       	pop	r28
    8e98:	08 95       	ret

00008e9a <_Z34Check_Time_For_Schedule_To_Triggerhh>:
	return 0;
	
}

unsigned char Check_Time_For_Schedule_To_Trigger(unsigned char Case_Number, unsigned char check_days)
{
    8e9a:	cf 93       	push	r28
    8e9c:	df 93       	push	r29
    8e9e:	c8 2f       	mov	r28, r24
    8ea0:	d6 2f       	mov	r29, r22
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;   /* turn on the last schedule or new schedule */
    8ea2:	81 e0       	ldi	r24, 0x01	; 1
    8ea4:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
	
	if(_sSchedules.Which_Sheduler_Is_Running == _kRESET)
    8ea8:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8eac:	91 11       	cpse	r25, r1
    8eae:	06 c0       	rjmp	.+12     	; 0x8ebc <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22>
	{
		//_kSERAIL_MON_WRITE("sc enter 28");
		_sSchedules.Which_Sheduler_Is_Running = _kSET;
    8eb0:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8eb4:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8eb8:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
	}
	
	/* check weather schedules are already started save in eeprom */
	if(_sSchedules.Schedule_Are_Started == _kRESET || (_sSchedules.Which_Sheduler_Is_Running == 1))
    8ebc:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    8ec0:	88 23       	and	r24, r24
    8ec2:	29 f0       	breq	.+10     	; 0x8ece <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8ec4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8ec8:	81 30       	cpi	r24, 0x01	; 1
    8eca:	09 f0       	breq	.+2      	; 0x8ece <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8ecc:	79 c1       	rjmp	.+754    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
	{
		//_kSERAIL_MON_WRITE("sc enter 29");
		_sSchedules.Schedule_Are_Started = _kSET;
    8ece:	81 e0       	ldi	r24, 0x01	; 1
    8ed0:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
		
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8ed4:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8ed8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8edc:	91 30       	cpi	r25, 0x01	; 1
    8ede:	91 f4       	brne	.+36     	; 0x8f04 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x6a>
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8ee0:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8ee4:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8ee8:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8eec:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8ef0:	43 34       	cpi	r20, 0x43	; 67
    8ef2:	51 45       	sbci	r21, 0x51	; 81
    8ef4:	61 40       	sbci	r22, 0x01	; 1
    8ef6:	71 05       	cpc	r23, r1
    8ef8:	08 f0       	brcs	.+2      	; 0x8efc <_Z34Check_Time_For_Schedule_To_Triggerhh+0x62>
    8efa:	56 c0       	rjmp	.+172    	; 0x8fa8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8efc:	c1 30       	cpi	r28, 0x01	; 1
    8efe:	09 f0       	breq	.+2      	; 0x8f02 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x68>
    8f00:	53 c0       	rjmp	.+166    	; 0x8fa8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8f02:	6f c0       	rjmp	.+222    	; 0x8fe2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x148>
				
			}
		}
		else
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1 && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    8f04:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8f08:	91 30       	cpi	r25, 0x01	; 1
    8f0a:	d1 f5       	brne	.+116    	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
    8f0c:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    8f10:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    8f14:	23 2b       	or	r18, r19
    8f16:	a1 f5       	brne	.+104    	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
    8f18:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f1c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f20:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f24:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f28:	48 35       	cpi	r20, 0x58	; 88
    8f2a:	52 40       	sbci	r21, 0x02	; 2
    8f2c:	61 05       	cpc	r22, r1
    8f2e:	71 05       	cpc	r23, r1
    8f30:	08 f4       	brcc	.+2      	; 0x8f34 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x9a>
    8f32:	d5 c0       	rjmp	.+426    	; 0x90de <_Z34Check_Time_For_Schedule_To_Triggerhh+0x244>
					_sSchedules.Trigger_Time = 600;
					_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
				}
				else
				{
					if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    8f34:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f38:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f3c:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f40:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f44:	4c 32       	cpi	r20, 0x2C	; 44
    8f46:	51 40       	sbci	r21, 0x01	; 1
    8f48:	61 05       	cpc	r22, r1
    8f4a:	71 05       	cpc	r23, r1
    8f4c:	08 f0       	brcs	.+2      	; 0x8f50 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xb6>
    8f4e:	e0 c0       	rjmp	.+448    	; 0x9110 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x276>
					{
						_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    8f50:	47 e1       	ldi	r20, 0x17	; 23
    8f52:	50 e5       	ldi	r21, 0x50	; 80
    8f54:	61 e0       	ldi	r22, 0x01	; 1
    8f56:	70 e0       	ldi	r23, 0x00	; 0
    8f58:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    8f5c:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    8f60:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    8f64:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f68:	81 30       	cpi	r24, 0x01	; 1
    8f6a:	51 f4       	brne	.+20     	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
						{
							_kSERAIL_MON_WRITE("sc enter 11.1.0.1");
    8f6c:	63 e7       	ldi	r22, 0x73	; 115
    8f6e:	7b e0       	ldi	r23, 0x0B	; 11
    8f70:	86 ec       	ldi	r24, 0xC6	; 198
    8f72:	94 e1       	ldi	r25, 0x14	; 20
    8f74:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8f78:	86 ec       	ldi	r24, 0xC6	; 198
    8f7a:	94 e1       	ldi	r25, 0x14	; 20
    8f7c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
					}
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8f80:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f84:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f88:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f8c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    8f94:	43 34       	cpi	r20, 0x43	; 67
    8f96:	51 45       	sbci	r21, 0x51	; 81
    8f98:	61 40       	sbci	r22, 0x01	; 1
    8f9a:	71 05       	cpc	r23, r1
    8f9c:	08 f0       	brcs	.+2      	; 0x8fa0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x106>
    8f9e:	63 c0       	rjmp	.+198    	; 0x9066 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8fa0:	c1 30       	cpi	r28, 0x01	; 1
    8fa2:	09 f0       	breq	.+2      	; 0x8fa6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10c>
    8fa4:	60 c0       	rjmp	.+192    	; 0x9066 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8fa6:	34 c0       	rjmp	.+104    	; 0x9010 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x176>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8fa8:	81 30       	cpi	r24, 0x01	; 1
    8faa:	51 f4       	brne	.+20     	; 0x8fc0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x126>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8fac:	69 e9       	ldi	r22, 0x99	; 153
    8fae:	7b e0       	ldi	r23, 0x0B	; 11
    8fb0:	86 ec       	ldi	r24, 0xC6	; 198
    8fb2:	94 e1       	ldi	r25, 0x14	; 20
    8fb4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8fb8:	86 ec       	ldi	r24, 0xC6	; 198
    8fba:	94 e1       	ldi	r25, 0x14	; 20
    8fbc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8fc0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8fc4:	81 30       	cpi	r24, 0x01	; 1
    8fc6:	09 f0       	breq	.+2      	; 0x8fca <_Z34Check_Time_For_Schedule_To_Triggerhh+0x130>
    8fc8:	fb c0       	rjmp	.+502    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8fca:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8fce:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8fd2:	89 2b       	or	r24, r25
    8fd4:	09 f0       	breq	.+2      	; 0x8fd8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x13e>
    8fd6:	f4 c0       	rjmp	.+488    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
    8fd8:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <_Z24Return_Previous_Day_Datev>
    8fdc:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    8fe0:	7b c0       	rjmp	.+246    	; 0x90d8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x23e>
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				//_kSERAIL_MON_WRITE("sc enter 30");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8fe2:	81 30       	cpi	r24, 0x01	; 1
    8fe4:	51 f4       	brne	.+20     	; 0x8ffa <_Z34Check_Time_For_Schedule_To_Triggerhh+0x160>
				{
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8fe6:	6d ed       	ldi	r22, 0xDD	; 221
    8fe8:	7b e0       	ldi	r23, 0x0B	; 11
    8fea:	86 ec       	ldi	r24, 0xC6	; 198
    8fec:	94 e1       	ldi	r25, 0x14	; 20
    8fee:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8ff2:	86 ec       	ldi	r24, 0xC6	; 198
    8ff4:	94 e1       	ldi	r25, 0x14	; 20
    8ff6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8ffa:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8ffe:	81 30       	cpi	r24, 0x01	; 1
    9000:	f1 f4       	brne	.+60     	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    9002:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9006:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    900a:	89 2b       	or	r24, r25
    900c:	09 f1       	breq	.+66     	; 0x9050 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1b6>
    900e:	17 c0       	rjmp	.+46     	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9010:	81 30       	cpi	r24, 0x01	; 1
    9012:	81 f4       	brne	.+32     	; 0x9034 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x19a>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
    9014:	61 e5       	ldi	r22, 0x51	; 81
    9016:	7b e0       	ldi	r23, 0x0B	; 11
    9018:	86 ec       	ldi	r24, 0xC6	; 198
    901a:	94 e1       	ldi	r25, 0x14	; 20
    901c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    9020:	64 e0       	ldi	r22, 0x04	; 4
    9022:	7b e0       	ldi	r23, 0x0B	; 11
    9024:	86 ec       	ldi	r24, 0xC6	; 198
    9026:	94 e1       	ldi	r25, 0x14	; 20
    9028:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    902c:	86 ec       	ldi	r24, 0xC6	; 198
    902e:	94 e1       	ldi	r25, 0x14	; 20
    9030:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    9034:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    9038:	81 30       	cpi	r24, 0x01	; 1
    903a:	09 f4       	brne	.+2      	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    903c:	8a c0       	rjmp	.+276    	; 0x9152 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2b8>
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
				}
				
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
    903e:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <_sSchedules+0xc>
    9042:	4a e0       	ldi	r20, 0x0A	; 10
    9044:	50 e0       	ldi	r21, 0x00	; 0
    9046:	86 ec       	ldi	r24, 0xC6	; 198
    9048:	94 e1       	ldi	r25, 0x14	; 20
    904a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
    904e:	b8 c0       	rjmp	.+368    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    9050:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    9054:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    9058:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    905c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    9060:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    9064:	ec cf       	rjmp	.-40     	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31.1.2");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9066:	81 30       	cpi	r24, 0x01	; 1
    9068:	51 f4       	brne	.+20     	; 0x907e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1e4>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    906a:	61 e7       	ldi	r22, 0x71	; 113
    906c:	7a e0       	ldi	r23, 0x0A	; 10
    906e:	86 ec       	ldi	r24, 0xC6	; 198
    9070:	94 e1       	ldi	r25, 0x14	; 20
    9072:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9076:	86 ec       	ldi	r24, 0xC6	; 198
    9078:	94 e1       	ldi	r25, 0x14	; 20
    907a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    907e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    9082:	81 30       	cpi	r24, 0x01	; 1
    9084:	09 f0       	breq	.+2      	; 0x9088 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1ee>
    9086:	9c c0       	rjmp	.+312    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    9088:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    908c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    9090:	89 2b       	or	r24, r25
    9092:	09 f0       	breq	.+2      	; 0x9096 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1fc>
    9094:	95 c0       	rjmp	.+298    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    9096:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
				{
					if(check_days == 2)
    909a:	d2 30       	cpi	r29, 0x02	; 2
    909c:	09 f0       	breq	.+2      	; 0x90a0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x206>
    909e:	7f c0       	rjmp	.+254    	; 0x919e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x304>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    90a0:	81 30       	cpi	r24, 0x01	; 1
    90a2:	51 f4       	brne	.+20     	; 0x90b8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x21e>
						{
							_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 5.1///////////////////////////////////////////");
    90a4:	62 e2       	ldi	r22, 0x22	; 34
    90a6:	7a e0       	ldi	r23, 0x0A	; 10
    90a8:	86 ec       	ldi	r24, 0xC6	; 198
    90aa:	94 e1       	ldi	r25, 0x14	; 20
    90ac:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    90b0:	86 ec       	ldi	r24, 0xC6	; 198
    90b2:	94 e1       	ldi	r25, 0x14	; 20
    90b4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    90b8:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    90bc:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
						_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    90c0:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    90c4:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
							_kSERIAL_MON_CLEAR();
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
						_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    90c8:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    90cc:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    90d0:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    90d4:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    90d8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    90dc:	71 c0       	rjmp	.+226    	; 0x91c0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    90de:	81 30       	cpi	r24, 0x01	; 1
    90e0:	51 f4       	brne	.+20     	; 0x90f6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x25c>
					{
						_kSERAIL_MON_WRITE("sc enter 11.1.0.0.0");
    90e2:	65 e8       	ldi	r22, 0x85	; 133
    90e4:	7b e0       	ldi	r23, 0x0B	; 11
    90e6:	86 ec       	ldi	r24, 0xC6	; 198
    90e8:	94 e1       	ldi	r25, 0x14	; 20
    90ea:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    90ee:	86 ec       	ldi	r24, 0xC6	; 198
    90f0:	94 e1       	ldi	r25, 0x14	; 20
    90f2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					_sSchedules.Trigger_Time = 600;
    90f6:	88 e5       	ldi	r24, 0x58	; 88
    90f8:	92 e0       	ldi	r25, 0x02	; 2
    90fa:	a0 e0       	ldi	r26, 0x00	; 0
    90fc:	b0 e0       	ldi	r27, 0x00	; 0
    90fe:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    9102:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    9106:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    910a:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
    910e:	0c c0       	rjmp	.+24     	; 0x9128 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
							_kSERIAL_MON_CLEAR();
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9110:	81 30       	cpi	r24, 0x01	; 1
    9112:	51 f4       	brne	.+20     	; 0x9128 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
						{
							_kSERAIL_MON_WRITE("sc enter 11.2.0.2");
    9114:	61 e6       	ldi	r22, 0x61	; 97
    9116:	7b e0       	ldi	r23, 0x0B	; 11
    9118:	86 ec       	ldi	r24, 0xC6	; 198
    911a:	94 e1       	ldi	r25, 0x14	; 20
    911c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9120:	86 ec       	ldi	r24, 0xC6	; 198
    9122:	94 e1       	ldi	r25, 0x14	; 20
    9124:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    9128:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    912c:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    9130:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    9134:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    9138:	8c 52       	subi	r24, 0x2C	; 44
    913a:	91 40       	sbci	r25, 0x01	; 1
    913c:	a1 09       	sbc	r26, r1
    913e:	b1 09       	sbc	r27, r1
    9140:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    9144:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    9148:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    914c:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
    9150:	17 cf       	rjmp	.-466    	; 0x8f80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    9152:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9156:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    915a:	89 2b       	or	r24, r25
    915c:	09 f0       	breq	.+2      	; 0x9160 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2c6>
    915e:	6f cf       	rjmp	.-290    	; 0x903e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9160:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9164:	81 30       	cpi	r24, 0x01	; 1
    9166:	51 f4       	brne	.+20     	; 0x917c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2e2>
					{
						_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4.1///////////////////////////////////////////");
    9168:	65 eb       	ldi	r22, 0xB5	; 181
    916a:	7a e0       	ldi	r23, 0x0A	; 10
    916c:	86 ec       	ldi	r24, 0xC6	; 198
    916e:	94 e1       	ldi	r25, 0x14	; 20
    9170:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9174:	86 ec       	ldi	r24, 0xC6	; 198
    9176:	94 e1       	ldi	r25, 0x14	; 20
    9178:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    917c:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    9180:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    9184:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    9188:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    918c:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    9190:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    9194:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    9198:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
    919c:	61 cf       	rjmp	.-318    	; 0x9060 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1c6>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
						_sSchedules.Pump_On_In_Scheduler = _kRESET;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    919e:	81 30       	cpi	r24, 0x01	; 1
    91a0:	51 f4       	brne	.+20     	; 0x91b6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x31c>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
    91a2:	6c ed       	ldi	r22, 0xDC	; 220
    91a4:	79 e0       	ldi	r23, 0x09	; 9
    91a6:	86 ec       	ldi	r24, 0xC6	; 198
    91a8:	94 e1       	ldi	r25, 0x14	; 20
    91aa:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    91ae:	86 ec       	ldi	r24, 0xC6	; 198
    91b0:	94 e1       	ldi	r25, 0x14	; 20
    91b2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
    91b6:	0e 94 d4 32 	call	0x65a8	; 0x65a8 <_Z24Return_Previous_Day_Datev>
    91ba:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    91be:	84 cf       	rjmp	.-248    	; 0x90c8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22e>
			}
		}
		/* save in eeprom */
	}
	
	_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    91c0:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
}
    91c4:	80 e0       	ldi	r24, 0x00	; 0
    91c6:	df 91       	pop	r29
    91c8:	cf 91       	pop	r28
    91ca:	08 95       	ret

000091cc <_Z30Compare_Trigger_And_Reset_Timev>:

unsigned char Compare_Trigger_And_Reset_Time(void)
{
    91cc:	0f 93       	push	r16
    91ce:	1f 93       	push	r17
    91d0:	cf 93       	push	r28
	unsigned char check_true_condition = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _kSET)
    91d2:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    91d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    91da:	91 30       	cpi	r25, 0x01	; 1
    91dc:	09 f0       	breq	.+2      	; 0x91e0 <_Z30Compare_Trigger_And_Reset_Timev+0x14>
    91de:	51 c0       	rjmp	.+162    	; 0x9282 <_Z30Compare_Trigger_And_Reset_Timev+0xb6>
	{
		if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    91e0:	20 91 d7 0b 	lds	r18, 0x0BD7	; 0x800bd7 <_sSchedules+0x2b9>
    91e4:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    91e8:	29 13       	cpse	r18, r25
    91ea:	17 c0       	rjmp	.+46     	; 0x921a <_Z30Compare_Trigger_And_Reset_Timev+0x4e>
		{
			if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    91ec:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    91f0:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    91f4:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    91f8:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    91fc:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    9200:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    9204:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    9208:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    920c:	48 17       	cp	r20, r24
    920e:	59 07       	cpc	r21, r25
    9210:	6a 07       	cpc	r22, r26
    9212:	7b 07       	cpc	r23, r27
    9214:	08 f4       	brcc	.+2      	; 0x9218 <_Z30Compare_Trigger_And_Reset_Timev+0x4c>
    9216:	7f c0       	rjmp	.+254    	; 0x9316 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
    9218:	f9 c0       	rjmp	.+498    	; 0x940c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
		}
		else
		{
			/* check which is the current date */
			//_kSERAIL_MON_WRITE("sc enter 21.1");
			if(_sSchedules.all_schedule_done_flag == _eSET)
    921a:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    921e:	92 30       	cpi	r25, 0x02	; 2
    9220:	09 f0       	breq	.+2      	; 0x9224 <_Z30Compare_Trigger_And_Reset_Timev+0x58>
    9222:	f6 c0       	rjmp	.+492    	; 0x9410 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9224:	81 30       	cpi	r24, 0x01	; 1
    9226:	51 f4       	brne	.+20     	; 0x923c <_Z30Compare_Trigger_And_Reset_Timev+0x70>
				{
					_kSERAIL_MON_WRITE("sc enter 22");
    9228:	60 ed       	ldi	r22, 0xD0	; 208
    922a:	79 e0       	ldi	r23, 0x09	; 9
    922c:	86 ec       	ldi	r24, 0xC6	; 198
    922e:	94 e1       	ldi	r25, 0x14	; 20
    9230:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9234:	86 ec       	ldi	r24, 0xC6	; 198
    9236:	94 e1       	ldi	r25, 0x14	; 20
    9238:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				
				check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    923c:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    9240:	0e 94 76 34 	call	0x68ec	; 0x68ec <_Z22Day_In_Bet_Schedullingh>
    9244:	c8 2f       	mov	r28, r24
				
				if(check_true_condition == 2)
    9246:	82 30       	cpi	r24, 0x02	; 2
    9248:	41 f4       	brne	.+16     	; 0x925a <_Z30Compare_Trigger_And_Reset_Timev+0x8e>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    924a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    924e:	81 30       	cpi	r24, 0x01	; 1
    9250:	09 f0       	breq	.+2      	; 0x9254 <_Z30Compare_Trigger_And_Reset_Timev+0x88>
    9252:	b2 c0       	rjmp	.+356    	; 0x93b8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
					{
						_kSERAIL_MON_WRITE("sc enter 23");
    9254:	64 ec       	ldi	r22, 0xC4	; 196
    9256:	79 e0       	ldi	r23, 0x09	; 9
    9258:	a7 c0       	rjmp	.+334    	; 0x93a8 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
					_sSchedules.all_schedule_done_flag = _eNOT_SET;
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
				}
				else
				{
					if(check_true_condition == 1)
    925a:	81 30       	cpi	r24, 0x01	; 1
    925c:	09 f0       	breq	.+2      	; 0x9260 <_Z30Compare_Trigger_And_Reset_Timev+0x94>
    925e:	d6 c0       	rjmp	.+428    	; 0x940c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
					{
						if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9260:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    9264:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    9268:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    926c:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    9270:	83 34       	cpi	r24, 0x43	; 67
    9272:	91 45       	sbci	r25, 0x51	; 81
    9274:	a1 40       	sbci	r26, 0x01	; 1
    9276:	b1 05       	cpc	r27, r1
    9278:	08 f0       	brcs	.+2      	; 0x927c <_Z30Compare_Trigger_And_Reset_Timev+0xb0>
    927a:	c8 c0       	rjmp	.+400    	; 0x940c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
						{
							//_kSERAIL_MON_WRITE("sc enter 24");
							check_true_condition = 1;
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
    927c:	c0 93 3c 09 	sts	0x093C, r28	; 0x80093c <_sSchedules+0x1e>
    9280:	9e c0       	rjmp	.+316    	; 0x93be <_Z30Compare_Trigger_And_Reset_Timev+0x1f2>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9282:	20 91 39 09 	lds	r18, 0x0939	; 0x800939 <_sSchedules+0x1b>
    9286:	90 91 6a 14 	lds	r25, 0x146A	; 0x80146a <_sRuble_Parameters+0xbc>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    928a:	21 11       	cpse	r18, r1
    928c:	1a c0       	rjmp	.+52     	; 0x92c2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    928e:	20 91 21 09 	lds	r18, 0x0921	; 0x800921 <_sSchedules+0x3>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9292:	21 11       	cpse	r18, r1
    9294:	16 c0       	rjmp	.+44     	; 0x92c2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    9296:	91 30       	cpi	r25, 0x01	; 1
    9298:	a1 f4       	brne	.+40     	; 0x92c2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    929a:	20 91 da 0b 	lds	r18, 0x0BDA	; 0x800bda <_sSchedules+0x2bc>
    929e:	30 91 db 0b 	lds	r19, 0x0BDB	; 0x800bdb <_sSchedules+0x2bd>
    92a2:	23 2b       	or	r18, r19
    92a4:	89 f4       	brne	.+34     	; 0x92c8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    92a6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    92aa:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    92ae:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    92b2:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    92b6:	45 2b       	or	r20, r21
    92b8:	46 2b       	or	r20, r22
    92ba:	47 2b       	or	r20, r23
    92bc:	09 f4       	brne	.+2      	; 0x92c0 <_Z30Compare_Trigger_And_Reset_Timev+0xf4>
    92be:	bf c0       	rjmp	.+382    	; 0x943e <_Z30Compare_Trigger_And_Reset_Timev+0x272>
    92c0:	03 c0       	rjmp	.+6      	; 0x92c8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
			}
			check_true_condition = 1;
		}
		else
		{
			if(_sRuble_Parameters.Electricity_Status == _kON)
    92c2:	91 30       	cpi	r25, 0x01	; 1
    92c4:	09 f0       	breq	.+2      	; 0x92c8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    92c6:	96 c0       	rjmp	.+300    	; 0x93f4 <_Z30Compare_Trigger_And_Reset_Timev+0x228>
			{
				if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    92c8:	20 91 d7 0b 	lds	r18, 0x0BD7	; 0x800bd7 <_sSchedules+0x2b9>
    92cc:	90 91 f2 13 	lds	r25, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    92d0:	29 13       	cpse	r18, r25
    92d2:	2a c0       	rjmp	.+84     	; 0x9328 <_Z30Compare_Trigger_And_Reset_Timev+0x15c>
				{
					if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    92d4:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    92d8:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    92dc:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    92e0:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    92e4:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    92e8:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    92ec:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    92f0:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    92f4:	04 17       	cp	r16, r20
    92f6:	15 07       	cpc	r17, r21
    92f8:	26 07       	cpc	r18, r22
    92fa:	37 07       	cpc	r19, r23
    92fc:	78 f4       	brcc	.+30     	; 0x931c <_Z30Compare_Trigger_And_Reset_Timev+0x150>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    92fe:	81 30       	cpi	r24, 0x01	; 1
    9300:	51 f4       	brne	.+20     	; 0x9316 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.1");
    9302:	60 ea       	ldi	r22, 0xA0	; 160
    9304:	79 e0       	ldi	r23, 0x09	; 9
    9306:	86 ec       	ldi	r24, 0xC6	; 198
    9308:	94 e1       	ldi	r25, 0x14	; 20
    930a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    930e:	86 ec       	ldi	r24, 0xC6	; 198
    9310:	94 e1       	ldi	r25, 0x14	; 20
    9312:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.New_Schedul_Date = _kRESET;
    9316:	10 92 d7 0b 	sts	0x0BD7, r1	; 0x800bd7 <_sSchedules+0x2b9>
    931a:	7a c0       	rjmp	.+244    	; 0x9410 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
						check_true_condition = 1;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    931c:	81 30       	cpi	r24, 0x01	; 1
    931e:	09 f0       	breq	.+2      	; 0x9322 <_Z30Compare_Trigger_And_Reset_Timev+0x156>
    9320:	93 c0       	rjmp	.+294    	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.2");
    9322:	6c e8       	ldi	r22, 0x8C	; 140
    9324:	79 e0       	ldi	r23, 0x09	; 9
    9326:	6a c0       	rjmp	.+212    	; 0x93fc <_Z30Compare_Trigger_And_Reset_Timev+0x230>
						check_true_condition = _kRESET;
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9328:	81 30       	cpi	r24, 0x01	; 1
    932a:	51 f4       	brne	.+20     	; 0x9340 <_Z30Compare_Trigger_And_Reset_Timev+0x174>
					{
						_kSERAIL_MON_WRITE("sc 1 enter 12");
    932c:	6e e7       	ldi	r22, 0x7E	; 126
    932e:	79 e0       	ldi	r23, 0x09	; 9
    9330:	86 ec       	ldi	r24, 0xC6	; 198
    9332:	94 e1       	ldi	r25, 0x14	; 20
    9334:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9338:	86 ec       	ldi	r24, 0xC6	; 198
    933a:	94 e1       	ldi	r25, 0x14	; 20
    933c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.all_schedule_done_flag == _eSET)
    9340:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    9344:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9348:	92 30       	cpi	r25, 0x02	; 2
    934a:	09 f0       	breq	.+2      	; 0x934e <_Z30Compare_Trigger_And_Reset_Timev+0x182>
    934c:	46 c0       	rjmp	.+140    	; 0x93da <_Z30Compare_Trigger_And_Reset_Timev+0x20e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    934e:	81 30       	cpi	r24, 0x01	; 1
    9350:	51 f4       	brne	.+20     	; 0x9366 <_Z30Compare_Trigger_And_Reset_Timev+0x19a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 13");
    9352:	60 e7       	ldi	r22, 0x70	; 112
    9354:	79 e0       	ldi	r23, 0x09	; 9
    9356:	86 ec       	ldi	r24, 0xC6	; 198
    9358:	94 e1       	ldi	r25, 0x14	; 20
    935a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    935e:	86 ec       	ldi	r24, 0xC6	; 198
    9360:	94 e1       	ldi	r25, 0x14	; 20
    9362:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    9366:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    936a:	0e 94 76 34 	call	0x68ec	; 0x68ec <_Z22Day_In_Bet_Schedullingh>
    936e:	c8 2f       	mov	r28, r24
    9370:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
							
						if(check_true_condition == 2)
    9374:	c2 30       	cpi	r28, 0x02	; 2
    9376:	29 f4       	brne	.+10     	; 0x9382 <_Z30Compare_Trigger_And_Reset_Timev+0x1b6>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9378:	81 30       	cpi	r24, 0x01	; 1
    937a:	f1 f4       	brne	.+60     	; 0x93b8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
							{
								_kSERAIL_MON_WRITE("sc 1 enter 14");
    937c:	62 e6       	ldi	r22, 0x62	; 98
    937e:	79 e0       	ldi	r23, 0x09	; 9
    9380:	13 c0       	rjmp	.+38     	; 0x93a8 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
						}
						else
						{
							if(check_true_condition == 1)
    9382:	c1 30       	cpi	r28, 0x01	; 1
    9384:	29 f5       	brne	.+74     	; 0x93d0 <_Z30Compare_Trigger_And_Reset_Timev+0x204>
							{
								if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9386:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    938a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    938e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9392:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    9396:	43 34       	cpi	r20, 0x43	; 67
    9398:	51 45       	sbci	r21, 0x51	; 81
    939a:	61 40       	sbci	r22, 0x01	; 1
    939c:	71 05       	cpc	r23, r1
    939e:	90 f4       	brcc	.+36     	; 0x93c4 <_Z30Compare_Trigger_And_Reset_Timev+0x1f8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    93a0:	81 30       	cpi	r24, 0x01	; 1
    93a2:	51 f4       	brne	.+20     	; 0x93b8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15");
    93a4:	64 e5       	ldi	r22, 0x54	; 84
    93a6:	79 e0       	ldi	r23, 0x09	; 9
    93a8:	86 ec       	ldi	r24, 0xC6	; 198
    93aa:	94 e1       	ldi	r25, 0x14	; 20
    93ac:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    93b0:	86 ec       	ldi	r24, 0xC6	; 198
    93b2:	94 e1       	ldi	r25, 0x14	; 20
    93b4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									}
									check_true_condition = 1;
									_sSchedules.all_schedule_done_flag = _eNOT_SET;
    93b8:	81 e0       	ldi	r24, 0x01	; 1
    93ba:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    93be:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
    93c2:	27 c0       	rjmp	.+78     	; 0x9412 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    93c4:	81 30       	cpi	r24, 0x01	; 1
    93c6:	09 f0       	breq	.+2      	; 0x93ca <_Z30Compare_Trigger_And_Reset_Timev+0x1fe>
    93c8:	3f c0       	rjmp	.+126    	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15.1");
    93ca:	64 e4       	ldi	r22, 0x44	; 68
    93cc:	79 e0       	ldi	r23, 0x09	; 9
    93ce:	16 c0       	rjmp	.+44     	; 0x93fc <_Z30Compare_Trigger_And_Reset_Timev+0x230>
									check_true_condition = 0;
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    93d0:	81 30       	cpi	r24, 0x01	; 1
    93d2:	d1 f5       	brne	.+116    	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
								{
									_kSERAIL_MON_WRITE("sc 1 enter 15.2");
    93d4:	64 e3       	ldi	r22, 0x34	; 52
    93d6:	79 e0       	ldi	r23, 0x09	; 9
    93d8:	11 c0       	rjmp	.+34     	; 0x93fc <_Z30Compare_Trigger_And_Reset_Timev+0x230>
							}
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    93da:	81 30       	cpi	r24, 0x01	; 1
    93dc:	b9 f5       	brne	.+110    	; 0x944c <_Z30Compare_Trigger_And_Reset_Timev+0x280>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 15.3");
    93de:	64 e2       	ldi	r22, 0x24	; 36
    93e0:	79 e0       	ldi	r23, 0x09	; 9
    93e2:	86 ec       	ldi	r24, 0xC6	; 198
    93e4:	94 e1       	ldi	r25, 0x14	; 20
    93e6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    93ea:	86 ec       	ldi	r24, 0xC6	; 198
    93ec:	94 e1       	ldi	r25, 0x14	; 20
    93ee:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    93f2:	0e c0       	rjmp	.+28     	; 0x9410 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    93f4:	81 30       	cpi	r24, 0x01	; 1
    93f6:	41 f5       	brne	.+80     	; 0x9448 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
				{
					_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.4");
    93f8:	60 e1       	ldi	r22, 0x10	; 16
    93fa:	79 e0       	ldi	r23, 0x09	; 9
    93fc:	86 ec       	ldi	r24, 0xC6	; 198
    93fe:	94 e1       	ldi	r25, 0x14	; 20
    9400:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9404:	86 ec       	ldi	r24, 0xC6	; 198
    9406:	94 e1       	ldi	r25, 0x14	; 20
    9408:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				check_true_condition = _kRESET;
    940c:	c0 e0       	ldi	r28, 0x00	; 0
    940e:	01 c0       	rjmp	.+2      	; 0x9412 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    9410:	c1 e0       	ldi	r28, 0x01	; 1
				}
				check_true_condition = _kRESET;
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9412:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9416:	81 30       	cpi	r24, 0x01	; 1
    9418:	d1 f4       	brne	.+52     	; 0x944e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		_kSERAIL_MON_WRITE("check_true_condition");
    941a:	6b ef       	ldi	r22, 0xFB	; 251
    941c:	78 e0       	ldi	r23, 0x08	; 8
    941e:	86 ec       	ldi	r24, 0xC6	; 198
    9420:	94 e1       	ldi	r25, 0x14	; 20
    9422:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
    9426:	4a e0       	ldi	r20, 0x0A	; 10
    9428:	50 e0       	ldi	r21, 0x00	; 0
    942a:	6c 2f       	mov	r22, r28
    942c:	86 ec       	ldi	r24, 0xC6	; 198
    942e:	94 e1       	ldi	r25, 0x14	; 20
    9430:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    9434:	86 ec       	ldi	r24, 0xC6	; 198
    9436:	94 e1       	ldi	r25, 0x14	; 20
    9438:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    943c:	08 c0       	rjmp	.+16     	; 0x944e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    943e:	81 30       	cpi	r24, 0x01	; 1
    9440:	29 f4       	brne	.+10     	; 0x944c <_Z30Compare_Trigger_And_Reset_Timev+0x280>
			{
				_kSERAIL_MON_WRITE("sc 1 enter 12.0");
    9442:	64 eb       	ldi	r22, 0xB4	; 180
    9444:	79 e0       	ldi	r23, 0x09	; 9
    9446:	cd cf       	rjmp	.-102    	; 0x93e2 <_Z30Compare_Trigger_And_Reset_Timev+0x216>
				check_true_condition = 1;
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 21.0.1");
				check_true_condition = 0;
    9448:	c0 e0       	ldi	r28, 0x00	; 0
    944a:	01 c0       	rjmp	.+2      	; 0x944e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    944c:	c1 e0       	ldi	r28, 0x01	; 1
		_kSERAIL_MON_WRITE("check_true_condition");
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
		_kSERIAL_MON_CLEAR();
	}
	return check_true_condition;
}
    944e:	8c 2f       	mov	r24, r28
    9450:	cf 91       	pop	r28
    9452:	1f 91       	pop	r17
    9454:	0f 91       	pop	r16
    9456:	08 95       	ret

00009458 <_Z16Set_Trigger_Timev>:

unsigned char Set_Trigger_Time(void)
{
	unsigned char i = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY)
    9458:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    945c:	81 11       	cpse	r24, r1
    945e:	2a c0       	rjmp	.+84     	; 0x94b4 <_Z16Set_Trigger_Timev+0x5c>
	{
		for(i=0; _sSchedules.Schedule_Status[i]>0; i++)
    9460:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <_sSchedules+0x3d>
		{
			break;
		}
		
		if(_sSchedules.Which_Sheduler_Is_Running-1 == i && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    9464:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    9468:	81 30       	cpi	r24, 0x01	; 1
    946a:	21 f5       	brne	.+72     	; 0x94b4 <_Z16Set_Trigger_Timev+0x5c>
    946c:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9470:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    9474:	89 2b       	or	r24, r25
    9476:	f1 f4       	brne	.+60     	; 0x94b4 <_Z16Set_Trigger_Timev+0x5c>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9478:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    947c:	81 30       	cpi	r24, 0x01	; 1
    947e:	51 f4       	brne	.+20     	; 0x9494 <_Z16Set_Trigger_Timev+0x3c>
			{
				_kSERAIL_MON_WRITE("trigger time set");
    9480:	6a ee       	ldi	r22, 0xEA	; 234
    9482:	78 e0       	ldi	r23, 0x08	; 8
    9484:	86 ec       	ldi	r24, 0xC6	; 198
    9486:	94 e1       	ldi	r25, 0x14	; 20
    9488:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    948c:	86 ec       	ldi	r24, 0xC6	; 198
    948e:	94 e1       	ldi	r25, 0x14	; 20
    9490:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			_sSchedules.Trigger_Time = _sRuble_Parameters.Current_Time_In_Sec;
    9494:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    9498:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    949c:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    94a0:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    94a4:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    94a8:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    94ac:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    94b0:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
			//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
		}
	}	
}
    94b4:	80 e0       	ldi	r24, 0x00	; 0
    94b6:	08 95       	ret

000094b8 <_Z17Doser_Pump_On_Offh>:
	
	return 1;
}

char Doser_Pump_On_Off(unsigned char on_off)
{
    94b8:	2f 92       	push	r2
    94ba:	3f 92       	push	r3
    94bc:	4f 92       	push	r4
    94be:	5f 92       	push	r5
    94c0:	6f 92       	push	r6
    94c2:	7f 92       	push	r7
    94c4:	8f 92       	push	r8
    94c6:	9f 92       	push	r9
    94c8:	af 92       	push	r10
    94ca:	bf 92       	push	r11
    94cc:	cf 92       	push	r12
    94ce:	df 92       	push	r13
    94d0:	ef 92       	push	r14
    94d2:	ff 92       	push	r15
    94d4:	0f 93       	push	r16
    94d6:	1f 93       	push	r17
    94d8:	cf 93       	push	r28
    94da:	df 93       	push	r29
    94dc:	00 d0       	rcall	.+0      	; 0x94de <_Z17Doser_Pump_On_Offh+0x26>
    94de:	1f 92       	push	r1
    94e0:	cd b7       	in	r28, 0x3d	; 61
    94e2:	de b7       	in	r29, 0x3e	; 62
    94e4:	18 2f       	mov	r17, r24
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	unsigned char tank_number,number_of_running_tanks; 
	number_of_running_tanks = 0;
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number == 0 || 
    94e6:	80 91 e9 0d 	lds	r24, 0x0DE9	; 0x800de9 <_sExtra_Plot+0x1>
    94ea:	84 36       	cpi	r24, 0x64	; 100
    94ec:	08 f4       	brcc	.+2      	; 0x94f0 <_Z17Doser_Pump_On_Offh+0x38>
    94ee:	77 c3       	rjmp	.+1774   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
	_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number < 100)
	{
		return 1;
	}
	
	if(on_off == _kON && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    94f0:	11 30       	cpi	r17, 0x01	; 1
    94f2:	29 f4       	brne	.+10     	; 0x94fe <_Z17Doser_Pump_On_Offh+0x46>
    94f4:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    94f8:	84 30       	cpi	r24, 0x04	; 4
    94fa:	c1 f4       	brne	.+48     	; 0x952c <_Z17Doser_Pump_On_Offh+0x74>
    94fc:	70 c3       	rjmp	.+1760   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
	{
		return 1;
	}
	
	if(on_off == _kOFF)
    94fe:	11 11       	cpse	r17, r1
    9500:	12 c0       	rjmp	.+36     	; 0x9526 <_Z17Doser_Pump_On_Offh+0x6e>
    9502:	80 e0       	ldi	r24, 0x00	; 0
    9504:	90 e0       	ldi	r25, 0x00	; 0
    9506:	20 e0       	ldi	r18, 0x00	; 0
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
		{
			if(_sSchedules.Running_Tank[tank_number] == _kON)
    9508:	fc 01       	movw	r30, r24
    950a:	e2 58       	subi	r30, 0x82	; 130
    950c:	f4 4f       	sbci	r31, 0xF4	; 244
    950e:	30 81       	ld	r19, Z
    9510:	31 30       	cpi	r19, 0x01	; 1
    9512:	09 f4       	brne	.+2      	; 0x9516 <_Z17Doser_Pump_On_Offh+0x5e>
			{
				number_of_running_tanks++;
    9514:	2f 5f       	subi	r18, 0xFF	; 255
    9516:	01 96       	adiw	r24, 0x01	; 1
		return 1;
	}
	
	if(on_off == _kOFF)
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    9518:	83 30       	cpi	r24, 0x03	; 3
    951a:	91 05       	cpc	r25, r1
    951c:	a9 f7       	brne	.-22     	; 0x9508 <_Z17Doser_Pump_On_Offh+0x50>
			if(_sSchedules.Running_Tank[tank_number] == _kON)
			{
				number_of_running_tanks++;
			}
		}
		if(number_of_running_tanks > 1)
    951e:	22 30       	cpi	r18, 0x02	; 2
    9520:	08 f0       	brcs	.+2      	; 0x9524 <_Z17Doser_Pump_On_Offh+0x6c>
    9522:	5d c3       	rjmp	.+1722   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
    9524:	03 c0       	rjmp	.+6      	; 0x952c <_Z17Doser_Pump_On_Offh+0x74>
			return 1;
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
    9526:	13 30       	cpi	r17, 0x03	; 3
    9528:	09 f4       	brne	.+2      	; 0x952c <_Z17Doser_Pump_On_Offh+0x74>
	{
		on_off = _kOFF;
    952a:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].On_Off_Status == _kSET)
    952c:	80 91 e8 0d 	lds	r24, 0x0DE8	; 0x800de8 <_sExtra_Plot>
    9530:	81 11       	cpse	r24, r1
    9532:	55 c3       	rjmp	.+1706   	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9534:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9538:	81 30       	cpi	r24, 0x01	; 1
    953a:	41 f5       	brne	.+80     	; 0x958c <_Z17Doser_Pump_On_Offh+0xd4>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
    953c:	60 ea       	ldi	r22, 0xA0	; 160
    953e:	70 e1       	ldi	r23, 0x10	; 16
    9540:	86 ec       	ldi	r24, 0xC6	; 198
    9542:	94 e1       	ldi	r25, 0x14	; 20
    9544:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9548:	86 ec       	ldi	r24, 0xC6	; 198
    954a:	94 e1       	ldi	r25, 0x14	; 20
    954c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    9550:	2d ee       	ldi	r18, 0xED	; 237
    9552:	3d e0       	ldi	r19, 0x0D	; 13
    9554:	3a 83       	std	Y+2, r19	; 0x02
    9556:	29 83       	std	Y+1, r18	; 0x01
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]);
    9558:	a9 81       	ldd	r26, Y+1	; 0x01
    955a:	ba 81       	ldd	r27, Y+2	; 0x02
    955c:	6d 91       	ld	r22, X+
    955e:	ba 83       	std	Y+2, r27	; 0x02
    9560:	a9 83       	std	Y+1, r26	; 0x01
    9562:	4a e0       	ldi	r20, 0x0A	; 10
    9564:	50 e0       	ldi	r21, 0x00	; 0
    9566:	86 ec       	ldi	r24, 0xC6	; 198
    9568:	94 e1       	ldi	r25, 0x14	; 20
    956a:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    956e:	6e e9       	ldi	r22, 0x9E	; 158
    9570:	70 e1       	ldi	r23, 0x10	; 16
    9572:	86 ec       	ldi	r24, 0xC6	; 198
    9574:	94 e1       	ldi	r25, 0x14	; 20
    9576:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    957a:	86 ec       	ldi	r24, 0xC6	; 198
    957c:	94 e1       	ldi	r25, 0x14	; 20
    957e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9582:	e9 81       	ldd	r30, Y+1	; 0x01
    9584:	fa 81       	ldd	r31, Y+2	; 0x02
    9586:	e2 5f       	subi	r30, 0xF2	; 242
    9588:	fd 40       	sbci	r31, 0x0D	; 13
    958a:	31 f7       	brne	.-52     	; 0x9558 <_Z17Doser_Pump_On_Offh+0xa0>
    958c:	4d ee       	ldi	r20, 0xED	; 237
    958e:	5d e0       	ldi	r21, 0x0D	; 13
    9590:	5c 83       	std	Y+4, r21	; 0x04
    9592:	4b 83       	std	Y+3, r20	; 0x03
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		on_off = _kOFF;
    9594:	7a 01       	movw	r14, r20
    9596:	00 e0       	ldi	r16, 0x00	; 0
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9598:	99 24       	eor	r9, r9
    959a:	93 94       	inc	r9
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    959c:	57 e0       	ldi	r21, 0x07	; 7
    959e:	c5 2e       	mov	r12, r21
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    95a0:	6d e0       	ldi	r22, 0x0D	; 13
    95a2:	d6 2e       	mov	r13, r22
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    95a4:	70 ed       	ldi	r23, 0xD0	; 208
    95a6:	47 2e       	mov	r4, r23
    95a8:	7f e0       	ldi	r23, 0x0F	; 15
    95aa:	57 2e       	mov	r5, r23
    95ac:	5a c1       	rjmp	.+692    	; 0x9862 <_Z17Doser_Pump_On_Offh+0x3aa>
			unsigned char valve_number =0;
			unsigned char euro_valve_num=0,command_valve=0;
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    95ae:	b3 e0       	ldi	r27, 0x03	; 3
    95b0:	b8 15       	cp	r27, r8
    95b2:	08 f0       	brcs	.+2      	; 0x95b6 <_Z17Doser_Pump_On_Offh+0xfe>
    95b4:	64 c1       	rjmp	.+712    	; 0x987e <_Z17Doser_Pump_On_Offh+0x3c6>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    95b6:	88 2d       	mov	r24, r8
    95b8:	63 e0       	ldi	r22, 0x03	; 3
    95ba:	0e 94 4a eb 	call	0x1d694	; 0x1d694 <__udivmodqi4>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    95be:	2b ea       	ldi	r18, 0xAB	; 171
    95c0:	82 9e       	mul	r8, r18
    95c2:	21 2d       	mov	r18, r1
    95c4:	11 24       	eor	r1, r1
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    95c6:	99 23       	and	r25, r25
    95c8:	09 f4       	brne	.+2      	; 0x95cc <_Z17Doser_Pump_On_Offh+0x114>
    95ca:	54 c1       	rjmp	.+680    	; 0x9874 <_Z17Doser_Pump_On_Offh+0x3bc>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    95cc:	26 95       	lsr	r18
    95ce:	77 24       	eor	r7, r7
    95d0:	73 94       	inc	r7
    95d2:	72 0e       	add	r7, r18
    95d4:	89 2e       	mov	r8, r25
				}
				
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    95d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    95da:	81 30       	cpi	r24, 0x01	; 1
    95dc:	89 f4       	brne	.+34     	; 0x9600 <_Z17Doser_Pump_On_Offh+0x148>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    95de:	6a e8       	ldi	r22, 0x8A	; 138
    95e0:	70 e1       	ldi	r23, 0x10	; 16
    95e2:	86 ec       	ldi	r24, 0xC6	; 198
    95e4:	94 e1       	ldi	r25, 0x14	; 20
    95e6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    95ea:	4a e0       	ldi	r20, 0x0A	; 10
    95ec:	50 e0       	ldi	r21, 0x00	; 0
    95ee:	67 2d       	mov	r22, r7
    95f0:	86 ec       	ldi	r24, 0xC6	; 198
    95f2:	94 e1       	ldi	r25, 0x14	; 20
    95f4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    95f8:	86 ec       	ldi	r24, 0xC6	; 198
    95fa:	94 e1       	ldi	r25, 0x14	; 20
    95fc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9600:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
    9604:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9606:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    960a:	e5 ef       	ldi	r30, 0xF5	; 245
    960c:	f3 e1       	ldi	r31, 0x13	; 19
    960e:	24 e1       	ldi	r18, 0x14	; 20
    9610:	11 92       	st	Z+, r1
    9612:	2a 95       	dec	r18
    9614:	e9 f7       	brne	.-6      	; 0x9610 <_Z17Doser_Pump_On_Offh+0x158>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9616:	27 2d       	mov	r18, r7
    9618:	30 e0       	ldi	r19, 0x00	; 0
    961a:	21 50       	subi	r18, 0x01	; 1
    961c:	31 09       	sbc	r19, r1
    961e:	c2 9e       	mul	r12, r18
    9620:	c0 01       	movw	r24, r0
    9622:	c3 9e       	mul	r12, r19
    9624:	90 0d       	add	r25, r0
    9626:	11 24       	eor	r1, r1
    9628:	82 55       	subi	r24, 0x52	; 82
    962a:	9c 4e       	sbci	r25, 0xEC	; 236
    962c:	fc 01       	movw	r30, r24
    962e:	ec 58       	subi	r30, 0x8C	; 140
    9630:	ff 4f       	sbci	r31, 0xFF	; 255
    9632:	20 81       	ld	r18, Z
    9634:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9638:	31 96       	adiw	r30, 0x01	; 1
    963a:	20 81       	ld	r18, Z
    963c:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9640:	31 96       	adiw	r30, 0x01	; 1
    9642:	20 81       	ld	r18, Z
    9644:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9648:	31 96       	adiw	r30, 0x01	; 1
    964a:	20 81       	ld	r18, Z
    964c:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9650:	31 96       	adiw	r30, 0x01	; 1
    9652:	20 81       	ld	r18, Z
    9654:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9658:	31 96       	adiw	r30, 0x01	; 1
    965a:	20 81       	ld	r18, Z
    965c:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9660:	32 e0       	ldi	r19, 0x02	; 2
    9662:	30 93 fb 13 	sts	0x13FB, r19	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9666:	10 93 fc 13 	sts	0x13FC, r17	; 0x8013fc <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    966a:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    966e:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9672:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    9676:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    967a:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    967e:	40 e0       	ldi	r20, 0x00	; 0
    9680:	50 e0       	ldi	r21, 0x00	; 0
    9682:	64 2e       	mov	r6, r20
    9684:	71 2c       	mov	r7, r1
    9686:	81 2c       	mov	r8, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9688:	d4 9e       	mul	r13, r20
    968a:	b0 01       	movw	r22, r0
    968c:	d5 9e       	mul	r13, r21
    968e:	70 0d       	add	r23, r0
    9690:	11 24       	eor	r1, r1
    9692:	6b 5e       	subi	r22, 0xEB	; 235
    9694:	73 4f       	sbci	r23, 0xF3	; 243
    9696:	28 2d       	mov	r18, r8
    9698:	30 e0       	ldi	r19, 0x00	; 0
    969a:	fb 01       	movw	r30, r22
    969c:	e2 0f       	add	r30, r18
    969e:	f3 1f       	adc	r31, r19
    96a0:	28 0f       	add	r18, r24
    96a2:	39 1f       	adc	r19, r25
    96a4:	d9 01       	movw	r26, r18
    96a6:	ac 58       	subi	r26, 0x8C	; 140
    96a8:	bf 4f       	sbci	r27, 0xFF	; 255
    96aa:	31 81       	ldd	r19, Z+1	; 0x01
    96ac:	2c 91       	ld	r18, X
    96ae:	32 17       	cp	r19, r18
    96b0:	19 f0       	breq	.+6      	; 0x96b8 <_Z17Doser_Pump_On_Offh+0x200>
					{
						compare_id = _kVALVE_ID_LEN;
    96b2:	36 e0       	ldi	r19, 0x06	; 6
    96b4:	83 2e       	mov	r8, r19
						id_len = _kRESET;
    96b6:	71 2c       	mov	r7, r1
					}
					id_len++;
    96b8:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    96ba:	83 94       	inc	r8
    96bc:	a5 e0       	ldi	r26, 0x05	; 5
    96be:	a8 15       	cp	r26, r8
    96c0:	50 f7       	brcc	.-44     	; 0x9696 <_Z17Doser_Pump_On_Offh+0x1de>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    96c2:	b6 e0       	ldi	r27, 0x06	; 6
    96c4:	7b 16       	cp	r7, r27
    96c6:	09 f4       	brne	.+2      	; 0x96ca <_Z17Doser_Pump_On_Offh+0x212>
    96c8:	dd c0       	rjmp	.+442    	; 0x9884 <_Z17Doser_Pump_On_Offh+0x3cc>
    96ca:	4f 5f       	subi	r20, 0xFF	; 255
    96cc:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    96ce:	46 30       	cpi	r20, 0x06	; 6
    96d0:	51 05       	cpc	r21, r1
    96d2:	b9 f6       	brne	.-82     	; 0x9682 <_Z17Doser_Pump_On_Offh+0x1ca>
				{
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    96d4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    96d8:	81 30       	cpi	r24, 0x01	; 1
    96da:	89 f4       	brne	.+34     	; 0x96fe <_Z17Doser_Pump_On_Offh+0x246>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    96dc:	64 e7       	ldi	r22, 0x74	; 116
    96de:	70 e1       	ldi	r23, 0x10	; 16
    96e0:	86 ec       	ldi	r24, 0xC6	; 198
    96e2:	94 e1       	ldi	r25, 0x14	; 20
    96e4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    96e8:	4a e0       	ldi	r20, 0x0A	; 10
    96ea:	50 e0       	ldi	r21, 0x00	; 0
    96ec:	60 2f       	mov	r22, r16
    96ee:	86 ec       	ldi	r24, 0xC6	; 198
    96f0:	94 e1       	ldi	r25, 0x14	; 20
    96f2:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    96f6:	86 ec       	ldi	r24, 0xC6	; 198
    96f8:	94 e1       	ldi	r25, 0x14	; 20
    96fa:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    96fe:	ed e0       	ldi	r30, 0x0D	; 13
    9700:	0e 9f       	mul	r16, r30
    9702:	50 01       	movw	r10, r0
    9704:	11 24       	eor	r1, r1
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9706:	81 2c       	mov	r8, r1
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9708:	d0 9e       	mul	r13, r16
    970a:	c0 01       	movw	r24, r0
    970c:	11 24       	eor	r1, r1
    970e:	9c 01       	movw	r18, r24
    9710:	2b 5e       	subi	r18, 0xEB	; 235
    9712:	33 4f       	sbci	r19, 0xF3	; 243
    9714:	a9 01       	movw	r20, r18
    9716:	45 5f       	subi	r20, 0xF5	; 245
    9718:	5f 4f       	sbci	r21, 0xFF	; 255
    971a:	5a 83       	std	Y+2, r21	; 0x02
    971c:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    971e:	19 01       	movw	r2, r18
    9720:	58 e0       	ldi	r21, 0x08	; 8
    9722:	25 0e       	add	r2, r21
    9724:	31 1c       	adc	r3, r1
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9726:	dc 01       	movw	r26, r24
    9728:	aa 5e       	subi	r26, 0xEA	; 234
    972a:	b3 4f       	sbci	r27, 0xF3	; 243
    972c:	3d 01       	movw	r6, r26
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    972e:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    9732:	81 11       	cpse	r24, r1
    9734:	a9 c0       	rjmp	.+338    	; 0x9888 <_Z17Doser_Pump_On_Offh+0x3d0>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    9736:	83 94       	inc	r8
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9738:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    973c:	81 30       	cpi	r24, 0x01	; 1
    973e:	51 f4       	brne	.+20     	; 0x9754 <_Z17Doser_Pump_On_Offh+0x29c>
				{
					_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9740:	60 e5       	ldi	r22, 0x50	; 80
    9742:	70 e1       	ldi	r23, 0x10	; 16
    9744:	86 ec       	ldi	r24, 0xC6	; 198
    9746:	94 e1       	ldi	r25, 0x14	; 20
    9748:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    974c:	86 ec       	ldi	r24, 0xC6	; 198
    974e:	94 e1       	ldi	r25, 0x14	; 20
    9750:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				Display_Update_1();    // 20/1/2022
    9754:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9758:	8c e0       	ldi	r24, 0x0C	; 12
    975a:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    975e:	88 eb       	ldi	r24, 0xB8	; 184
    9760:	9b e0       	ldi	r25, 0x0B	; 11
    9762:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
    9766:	88 23       	and	r24, r24
    9768:	09 f4       	brne	.+2      	; 0x976c <_Z17Doser_Pump_On_Offh+0x2b4>
    976a:	9e c1       	rjmp	.+828    	; 0x9aa8 <_Z17Doser_Pump_On_Offh+0x5f0>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    976c:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
    9770:	88 23       	and	r24, r24
    9772:	09 f4       	brne	.+2      	; 0x9776 <_Z17Doser_Pump_On_Offh+0x2be>
    9774:	49 c1       	rjmp	.+658    	; 0x9a08 <_Z17Doser_Pump_On_Offh+0x550>
					{
						
						if(Subscribed_data_check())
    9776:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    977a:	81 11       	cpse	r24, r1
    977c:	9a c0       	rjmp	.+308    	; 0x98b2 <_Z17Doser_Pump_On_Offh+0x3fa>
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
							}
						}
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    977e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9782:	81 30       	cpi	r24, 0x01	; 1
    9784:	59 f5       	brne	.+86     	; 0x97dc <_Z17Doser_Pump_On_Offh+0x324>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9786:	6a e3       	ldi	r22, 0x3A	; 58
    9788:	70 e1       	ldi	r23, 0x10	; 16
    978a:	86 ec       	ldi	r24, 0xC6	; 198
    978c:	94 e1       	ldi	r25, 0x14	; 20
    978e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    9792:	4a e0       	ldi	r20, 0x0A	; 10
    9794:	50 e0       	ldi	r21, 0x00	; 0
    9796:	69 e0       	ldi	r22, 0x09	; 9
    9798:	74 e1       	ldi	r23, 0x14	; 20
    979a:	86 ec       	ldi	r24, 0xC6	; 198
    979c:	94 e1       	ldi	r25, 0x14	; 20
    979e:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    97a2:	86 ec       	ldi	r24, 0xC6	; 198
    97a4:	94 e1       	ldi	r25, 0x14	; 20
    97a6:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    97aa:	86 ec       	ldi	r24, 0xC6	; 198
    97ac:	94 e1       	ldi	r25, 0x14	; 20
    97ae:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    97b2:	6c e1       	ldi	r22, 0x1C	; 28
    97b4:	70 e1       	ldi	r23, 0x10	; 16
    97b6:	86 ec       	ldi	r24, 0xC6	; 198
    97b8:	94 e1       	ldi	r25, 0x14	; 20
    97ba:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    97be:	47 e0       	ldi	r20, 0x07	; 7
    97c0:	50 e0       	ldi	r21, 0x00	; 0
    97c2:	b3 01       	movw	r22, r6
    97c4:	86 ec       	ldi	r24, 0xC6	; 198
    97c6:	94 e1       	ldi	r25, 0x14	; 20
    97c8:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
							Serial.println();
    97cc:	86 ec       	ldi	r24, 0xC6	; 198
    97ce:	94 e1       	ldi	r25, 0x14	; 20
    97d0:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    97d4:	86 ec       	ldi	r24, 0xC6	; 198
    97d6:	94 e1       	ldi	r25, 0x14	; 20
    97d8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    97dc:	a9 e0       	ldi	r26, 0x09	; 9
    97de:	b4 e1       	ldi	r27, 0x14	; 20
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    97e0:	80 e0       	ldi	r24, 0x00	; 0
    97e2:	90 e0       	ldi	r25, 0x00	; 0
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    97e4:	2d 91       	ld	r18, X+
    97e6:	f5 01       	movw	r30, r10
    97e8:	e8 0f       	add	r30, r24
    97ea:	f9 1f       	adc	r31, r25
    97ec:	eb 5e       	subi	r30, 0xEB	; 235
    97ee:	f3 4f       	sbci	r31, 0xF3	; 243
    97f0:	31 81       	ldd	r19, Z+1	; 0x01
    97f2:	32 17       	cp	r19, r18
    97f4:	09 f4       	brne	.+2      	; 0x97f8 <_Z17Doser_Pump_On_Offh+0x340>
    97f6:	b2 c0       	rjmp	.+356    	; 0x995c <_Z17Doser_Pump_On_Offh+0x4a4>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    97f8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    97fc:	81 30       	cpi	r24, 0x01	; 1
    97fe:	51 f4       	brne	.+20     	; 0x9814 <_Z17Doser_Pump_On_Offh+0x35c>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9800:	61 ef       	ldi	r22, 0xF1	; 241
    9802:	7f e0       	ldi	r23, 0x0F	; 15
    9804:	86 ec       	ldi	r24, 0xC6	; 198
    9806:	94 e1       	ldi	r25, 0x14	; 20
    9808:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    980c:	86 ec       	ldi	r24, 0xC6	; 198
    980e:	94 e1       	ldi	r25, 0x14	; 20
    9810:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9814:	b2 e0       	ldi	r27, 0x02	; 2
    9816:	8b 16       	cp	r8, r27
    9818:	09 f4       	brne	.+2      	; 0x981c <_Z17Doser_Pump_On_Offh+0x364>
    981a:	60 c0       	rjmp	.+192    	; 0x98dc <_Z17Doser_Pump_On_Offh+0x424>
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    981c:	e9 81       	ldd	r30, Y+1	; 0x01
    981e:	fa 81       	ldd	r31, Y+2	; 0x02
    9820:	90 82       	st	Z, r9
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9822:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    9826:	90 e0       	ldi	r25, 0x00	; 0
    9828:	98 2f       	mov	r25, r24
    982a:	88 27       	eor	r24, r24
    982c:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    9830:	82 2b       	or	r24, r18
    9832:	d1 01       	movw	r26, r2
    9834:	8d 93       	st	X+, r24
    9836:	9c 93       	st	X, r25
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    9838:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    983c:	18 13       	cpse	r17, r24
    983e:	94 c0       	rjmp	.+296    	; 0x9968 <_Z17Doser_Pump_On_Offh+0x4b0>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    9840:	83 e0       	ldi	r24, 0x03	; 3
    9842:	88 2e       	mov	r8, r24
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    9844:	68 ee       	ldi	r22, 0xE8	; 232
    9846:	73 e0       	ldi	r23, 0x03	; 3
    9848:	80 e0       	ldi	r24, 0x00	; 0
    984a:	90 e0       	ldi	r25, 0x00	; 0
    984c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    9850:	33 e0       	ldi	r19, 0x03	; 3
    9852:	83 12       	cpse	r8, r19
    9854:	6c cf       	rjmp	.-296    	; 0x972e <_Z17Doser_Pump_On_Offh+0x276>
			_kSERIAL_MON_CLEAR();
		}
	}
	
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    9856:	52 ef       	ldi	r21, 0xF2	; 242
    9858:	e5 16       	cp	r14, r21
    985a:	5d e0       	ldi	r21, 0x0D	; 13
    985c:	f5 06       	cpc	r15, r21
    985e:	09 f4       	brne	.+2      	; 0x9862 <_Z17Doser_Pump_On_Offh+0x3aa>
    9860:	89 c1       	rjmp	.+786    	; 0x9b74 <_Z17Doser_Pump_On_Offh+0x6bc>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > 0)
    9862:	d7 01       	movw	r26, r14
    9864:	8d 90       	ld	r8, X+
    9866:	7d 01       	movw	r14, r26
    9868:	8f ef       	ldi	r24, 0xFF	; 255
    986a:	88 0d       	add	r24, r8
    986c:	82 31       	cpi	r24, 0x12	; 18
    986e:	08 f0       	brcs	.+2      	; 0x9872 <_Z17Doser_Pump_On_Offh+0x3ba>
    9870:	6b c1       	rjmp	.+726    	; 0x9b48 <_Z17Doser_Pump_On_Offh+0x690>
    9872:	9d ce       	rjmp	.-710    	; 0x95ae <_Z17Doser_Pump_On_Offh+0xf6>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9874:	72 2e       	mov	r7, r18
    9876:	76 94       	lsr	r7
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9878:	43 e0       	ldi	r20, 0x03	; 3
    987a:	84 2e       	mov	r8, r20
    987c:	ac ce       	rjmp	.-680    	; 0x95d6 <_Z17Doser_Pump_On_Offh+0x11e>
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    987e:	77 24       	eor	r7, r7
    9880:	73 94       	inc	r7
    9882:	a9 ce       	rjmp	.-686    	; 0x95d6 <_Z17Doser_Pump_On_Offh+0x11e>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9884:	06 2d       	mov	r16, r6
    9886:	26 cf       	rjmp	.-436    	; 0x96d4 <_Z17Doser_Pump_On_Offh+0x21c>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    9888:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    988c:	88 23       	and	r24, r24
    988e:	09 f4       	brne	.+2      	; 0x9892 <_Z17Doser_Pump_On_Offh+0x3da>
    9890:	52 cf       	rjmp	.-348    	; 0x9736 <_Z17Doser_Pump_On_Offh+0x27e>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9892:	f2 01       	movw	r30, r4
    9894:	01 90       	ld	r0, Z+
    9896:	00 20       	and	r0, r0
    9898:	e9 f7       	brne	.-6      	; 0x9894 <_Z17Doser_Pump_On_Offh+0x3dc>
    989a:	31 97       	sbiw	r30, 0x01	; 1
    989c:	af 01       	movw	r20, r30
    989e:	40 5d       	subi	r20, 0xD0	; 208
    98a0:	5f 40       	sbci	r21, 0x0F	; 15
    98a2:	21 e0       	ldi	r18, 0x01	; 1
    98a4:	60 ed       	ldi	r22, 0xD0	; 208
    98a6:	7f e0       	ldi	r23, 0x0F	; 15
    98a8:	82 e6       	ldi	r24, 0x62	; 98
    98aa:	9f e0       	ldi	r25, 0x0F	; 15
    98ac:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
    98b0:	42 cf       	rjmp	.-380    	; 0x9736 <_Z17Doser_Pump_On_Offh+0x27e>
					if(_kLORA_RECV_DATA())            /* check the received data */
					{
						
						if(Subscribed_data_check())
						{
							if(Seperate_Out_Sub_Data())
    98b2:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    98b6:	88 23       	and	r24, r24
    98b8:	09 f4       	brne	.+2      	; 0x98bc <_Z17Doser_Pump_On_Offh+0x404>
    98ba:	61 cf       	rjmp	.-318    	; 0x977e <_Z17Doser_Pump_On_Offh+0x2c6>
							{
								//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    98bc:	f2 01       	movw	r30, r4
    98be:	01 90       	ld	r0, Z+
    98c0:	00 20       	and	r0, r0
    98c2:	e9 f7       	brne	.-6      	; 0x98be <_Z17Doser_Pump_On_Offh+0x406>
    98c4:	31 97       	sbiw	r30, 0x01	; 1
    98c6:	af 01       	movw	r20, r30
    98c8:	40 5d       	subi	r20, 0xD0	; 208
    98ca:	5f 40       	sbci	r21, 0x0F	; 15
    98cc:	21 e0       	ldi	r18, 0x01	; 1
    98ce:	60 ed       	ldi	r22, 0xD0	; 208
    98d0:	7f e0       	ldi	r23, 0x0F	; 15
    98d2:	82 e6       	ldi	r24, 0x62	; 98
    98d4:	9f e0       	ldi	r25, 0x0F	; 15
    98d6:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
    98da:	51 cf       	rjmp	.-350    	; 0x977e <_Z17Doser_Pump_On_Offh+0x2c6>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    98dc:	86 e0       	ldi	r24, 0x06	; 6
    98de:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    98e2:	84 e6       	ldi	r24, 0x64	; 100
    98e4:	90 e0       	ldi	r25, 0x00	; 0
    98e6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    98ea:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    98ee:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    98f2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    98f6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    98fa:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    98fe:	a0 62       	ori	r26, 0x20	; 32
    9900:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9904:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9908:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    990c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    9910:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9914:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9918:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    991c:	82 60       	ori	r24, 0x02	; 2
    991e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9922:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
									{
										if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9926:	ab 81       	ldd	r26, Y+3	; 0x03
    9928:	bc 81       	ldd	r27, Y+4	; 0x04
    992a:	ed 91       	ld	r30, X+
    992c:	bc 83       	std	Y+4, r27	; 0x04
    992e:	ab 83       	std	Y+3, r26	; 0x03
    9930:	e3 31       	cpi	r30, 0x13	; 19
    9932:	68 f0       	brcs	.+26     	; 0x994e <_Z17Doser_Pump_On_Offh+0x496>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9934:	f0 e0       	ldi	r31, 0x00	; 0
    9936:	e7 5c       	subi	r30, 0xC7	; 199
    9938:	fb 4e       	sbci	r31, 0xEB	; 235
    993a:	61 e0       	ldi	r22, 0x01	; 1
    993c:	80 81       	ld	r24, Z
    993e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
											_kDELAY_MS(200);
    9942:	68 ec       	ldi	r22, 0xC8	; 200
    9944:	70 e0       	ldi	r23, 0x00	; 0
    9946:	80 e0       	ldi	r24, 0x00	; 0
    9948:	90 e0       	ldi	r25, 0x00	; 0
    994a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    994e:	eb 81       	ldd	r30, Y+3	; 0x03
    9950:	fc 81       	ldd	r31, Y+4	; 0x04
    9952:	e2 5f       	subi	r30, 0xF2	; 242
    9954:	fd 40       	sbci	r31, 0x0D	; 13
    9956:	39 f7       	brne	.-50     	; 0x9926 <_Z17Doser_Pump_On_Offh+0x46e>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    9958:	80 e0       	ldi	r24, 0x00	; 0
    995a:	42 c1       	rjmp	.+644    	; 0x9be0 <_Z17Doser_Pump_On_Offh+0x728>
    995c:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    995e:	86 30       	cpi	r24, 0x06	; 6
    9960:	91 05       	cpc	r25, r1
    9962:	09 f0       	breq	.+2      	; 0x9966 <_Z17Doser_Pump_On_Offh+0x4ae>
    9964:	3f cf       	rjmp	.-386    	; 0x97e4 <_Z17Doser_Pump_On_Offh+0x32c>
    9966:	5a cf       	rjmp	.-332    	; 0x981c <_Z17Doser_Pump_On_Offh+0x364>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9968:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    996c:	81 30       	cpi	r24, 0x01	; 1
    996e:	51 f4       	brne	.+20     	; 0x9984 <_Z17Doser_Pump_On_Offh+0x4cc>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    9970:	6e ed       	ldi	r22, 0xDE	; 222
    9972:	7f e0       	ldi	r23, 0x0F	; 15
    9974:	86 ec       	ldi	r24, 0xC6	; 198
    9976:	94 e1       	ldi	r25, 0x14	; 20
    9978:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    997c:	86 ec       	ldi	r24, 0xC6	; 198
    997e:	94 e1       	ldi	r25, 0x14	; 20
    9980:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9984:	32 e0       	ldi	r19, 0x02	; 2
    9986:	83 12       	cpse	r8, r19
    9988:	5d cf       	rjmp	.-326    	; 0x9844 <_Z17Doser_Pump_On_Offh+0x38c>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    998a:	86 e0       	ldi	r24, 0x06	; 6
    998c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    9990:	84 e6       	ldi	r24, 0x64	; 100
    9992:	90 e0       	ldi	r25, 0x00	; 0
    9994:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    9998:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    999c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    99a0:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    99a4:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    99a8:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    99ac:	a0 62       	ori	r26, 0x20	; 32
    99ae:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    99b2:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    99b6:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    99ba:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    99be:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    99c2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    99c6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    99ca:	82 60       	ori	r24, 0x02	; 2
    99cc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    99d0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
								{
									if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    99d4:	ab 81       	ldd	r26, Y+3	; 0x03
    99d6:	bc 81       	ldd	r27, Y+4	; 0x04
    99d8:	ed 91       	ld	r30, X+
    99da:	bc 83       	std	Y+4, r27	; 0x04
    99dc:	ab 83       	std	Y+3, r26	; 0x03
    99de:	e3 31       	cpi	r30, 0x13	; 19
    99e0:	68 f0       	brcs	.+26     	; 0x99fc <_Z17Doser_Pump_On_Offh+0x544>
									{
										/********************************* turn on/off the wired valve *********************************/
																				
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    99e2:	f0 e0       	ldi	r31, 0x00	; 0
    99e4:	e7 5c       	subi	r30, 0xC7	; 199
    99e6:	fb 4e       	sbci	r31, 0xEB	; 235
    99e8:	61 e0       	ldi	r22, 0x01	; 1
    99ea:	80 81       	ld	r24, Z
    99ec:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
										_kDELAY_MS(200);
    99f0:	68 ec       	ldi	r22, 0xC8	; 200
    99f2:	70 e0       	ldi	r23, 0x00	; 0
    99f4:	80 e0       	ldi	r24, 0x00	; 0
    99f6:	90 e0       	ldi	r25, 0x00	; 0
    99f8:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    99fc:	eb 81       	ldd	r30, Y+3	; 0x03
    99fe:	fc 81       	ldd	r31, Y+4	; 0x04
    9a00:	e2 5f       	subi	r30, 0xF2	; 242
    9a02:	fd 40       	sbci	r31, 0x0D	; 13
    9a04:	39 f7       	brne	.-50     	; 0x99d4 <_Z17Doser_Pump_On_Offh+0x51c>
    9a06:	a8 cf       	rjmp	.-176    	; 0x9958 <_Z17Doser_Pump_On_Offh+0x4a0>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9a08:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9a0c:	81 30       	cpi	r24, 0x01	; 1
    9a0e:	51 f4       	brne	.+20     	; 0x9a24 <_Z17Doser_Pump_On_Offh+0x56c>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    9a10:	63 ea       	ldi	r22, 0xA3	; 163
    9a12:	7f e0       	ldi	r23, 0x0F	; 15
    9a14:	86 ec       	ldi	r24, 0xC6	; 198
    9a16:	94 e1       	ldi	r25, 0x14	; 20
    9a18:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9a1c:	86 ec       	ldi	r24, 0xC6	; 198
    9a1e:	94 e1       	ldi	r25, 0x14	; 20
    9a20:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    9a24:	32 e0       	ldi	r19, 0x02	; 2
    9a26:	83 12       	cpse	r8, r19
    9a28:	0d cf       	rjmp	.-486    	; 0x9844 <_Z17Doser_Pump_On_Offh+0x38c>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9a2a:	86 e0       	ldi	r24, 0x06	; 6
    9a2c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    9a30:	84 e6       	ldi	r24, 0x64	; 100
    9a32:	90 e0       	ldi	r25, 0x00	; 0
    9a34:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    9a38:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9a3c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    9a40:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    9a44:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    9a48:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    9a4c:	a0 62       	ori	r26, 0x20	; 32
    9a4e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9a52:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9a56:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    9a5a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    9a5e:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9a62:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9a66:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9a6a:	82 60       	ori	r24, 0x02	; 2
    9a6c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9a70:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
							{
								if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9a74:	ab 81       	ldd	r26, Y+3	; 0x03
    9a76:	bc 81       	ldd	r27, Y+4	; 0x04
    9a78:	ed 91       	ld	r30, X+
    9a7a:	bc 83       	std	Y+4, r27	; 0x04
    9a7c:	ab 83       	std	Y+3, r26	; 0x03
    9a7e:	e3 31       	cpi	r30, 0x13	; 19
    9a80:	68 f0       	brcs	.+26     	; 0x9a9c <_Z17Doser_Pump_On_Offh+0x5e4>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9a82:	f0 e0       	ldi	r31, 0x00	; 0
    9a84:	e7 5c       	subi	r30, 0xC7	; 199
    9a86:	fb 4e       	sbci	r31, 0xEB	; 235
    9a88:	61 e0       	ldi	r22, 0x01	; 1
    9a8a:	80 81       	ld	r24, Z
    9a8c:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
									_kDELAY_MS(200);
    9a90:	68 ec       	ldi	r22, 0xC8	; 200
    9a92:	70 e0       	ldi	r23, 0x00	; 0
    9a94:	80 e0       	ldi	r24, 0x00	; 0
    9a96:	90 e0       	ldi	r25, 0x00	; 0
    9a98:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9a9c:	eb 81       	ldd	r30, Y+3	; 0x03
    9a9e:	fc 81       	ldd	r31, Y+4	; 0x04
    9aa0:	e2 5f       	subi	r30, 0xF2	; 242
    9aa2:	fd 40       	sbci	r31, 0x0D	; 13
    9aa4:	39 f7       	brne	.-50     	; 0x9a74 <_Z17Doser_Pump_On_Offh+0x5bc>
    9aa6:	58 cf       	rjmp	.-336    	; 0x9958 <_Z17Doser_Pump_On_Offh+0x4a0>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9aa8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9aac:	81 30       	cpi	r24, 0x01	; 1
    9aae:	51 f4       	brne	.+20     	; 0x9ac4 <_Z17Doser_Pump_On_Offh+0x60c>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    9ab0:	68 e6       	ldi	r22, 0x68	; 104
    9ab2:	7f e0       	ldi	r23, 0x0F	; 15
    9ab4:	86 ec       	ldi	r24, 0xC6	; 198
    9ab6:	94 e1       	ldi	r25, 0x14	; 20
    9ab8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9abc:	86 ec       	ldi	r24, 0xC6	; 198
    9abe:	94 e1       	ldi	r25, 0x14	; 20
    9ac0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					//RF95_setModeRx_Continuous();
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9ac4:	32 e0       	ldi	r19, 0x02	; 2
    9ac6:	83 12       	cpse	r8, r19
    9ac8:	bd ce       	rjmp	.-646    	; 0x9844 <_Z17Doser_Pump_On_Offh+0x38c>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9aca:	86 e0       	ldi	r24, 0x06	; 6
    9acc:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    9ad0:	84 e6       	ldi	r24, 0x64	; 100
    9ad2:	90 e0       	ldi	r25, 0x00	; 0
    9ad4:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    9ad8:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9adc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    9ae0:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    9ae4:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    9ae8:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    9aec:	a0 62       	ori	r26, 0x20	; 32
    9aee:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    9af2:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    9af6:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    9afa:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    9afe:	00 93 6e 14 	sts	0x146E, r16	; 0x80146e <_sRuble_Parameters+0xc0>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9b02:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9b06:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b0a:	82 60       	ori	r24, 0x02	; 2
    9b0c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9b10:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
						{
							if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9b14:	ab 81       	ldd	r26, Y+3	; 0x03
    9b16:	bc 81       	ldd	r27, Y+4	; 0x04
    9b18:	ed 91       	ld	r30, X+
    9b1a:	bc 83       	std	Y+4, r27	; 0x04
    9b1c:	ab 83       	std	Y+3, r26	; 0x03
    9b1e:	e3 31       	cpi	r30, 0x13	; 19
    9b20:	68 f0       	brcs	.+26     	; 0x9b3c <_Z17Doser_Pump_On_Offh+0x684>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9b22:	f0 e0       	ldi	r31, 0x00	; 0
    9b24:	e7 5c       	subi	r30, 0xC7	; 199
    9b26:	fb 4e       	sbci	r31, 0xEB	; 235
    9b28:	61 e0       	ldi	r22, 0x01	; 1
    9b2a:	80 81       	ld	r24, Z
    9b2c:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
								_kDELAY_MS(200);
    9b30:	68 ec       	ldi	r22, 0xC8	; 200
    9b32:	70 e0       	ldi	r23, 0x00	; 0
    9b34:	80 e0       	ldi	r24, 0x00	; 0
    9b36:	90 e0       	ldi	r25, 0x00	; 0
    9b38:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9b3c:	eb 81       	ldd	r30, Y+3	; 0x03
    9b3e:	fc 81       	ldd	r31, Y+4	; 0x04
    9b40:	e2 5f       	subi	r30, 0xF2	; 242
    9b42:	fd 40       	sbci	r31, 0x0D	; 13
    9b44:	39 f7       	brne	.-50     	; 0x9b14 <_Z17Doser_Pump_On_Offh+0x65c>
    9b46:	08 cf       	rjmp	.-496    	; 0x9958 <_Z17Doser_Pump_On_Offh+0x4a0>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9b48:	42 e1       	ldi	r20, 0x12	; 18
    9b4a:	48 15       	cp	r20, r8
    9b4c:	08 f0       	brcs	.+2      	; 0x9b50 <_Z17Doser_Pump_On_Offh+0x698>
    9b4e:	83 ce       	rjmp	.-762    	; 0x9856 <_Z17Doser_Pump_On_Offh+0x39e>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9b50:	61 e0       	ldi	r22, 0x01	; 1
    9b52:	11 11       	cpse	r17, r1
    9b54:	60 e0       	ldi	r22, 0x00	; 0
    9b56:	28 2d       	mov	r18, r8
    9b58:	30 e0       	ldi	r19, 0x00	; 0
    9b5a:	f9 01       	movw	r30, r18
    9b5c:	e7 5c       	subi	r30, 0xC7	; 199
    9b5e:	fb 4e       	sbci	r31, 0xEB	; 235
    9b60:	80 81       	ld	r24, Z
    9b62:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
			_kDELAY_MS(200);
    9b66:	68 ec       	ldi	r22, 0xC8	; 200
    9b68:	70 e0       	ldi	r23, 0x00	; 0
    9b6a:	80 e0       	ldi	r24, 0x00	; 0
    9b6c:	90 e0       	ldi	r25, 0x00	; 0
    9b6e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    9b72:	71 ce       	rjmp	.-798    	; 0x9856 <_Z17Doser_Pump_On_Offh+0x39e>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9b74:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9b78:	81 30       	cpi	r24, 0x01	; 1
    9b7a:	51 f4       	brne	.+20     	; 0x9b90 <_Z17Doser_Pump_On_Offh+0x6d8>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9b7c:	69 e4       	ldi	r22, 0x49	; 73
    9b7e:	7f e0       	ldi	r23, 0x0F	; 15
    9b80:	86 ec       	ldi	r24, 0xC6	; 198
    9b82:	94 e1       	ldi	r25, 0x14	; 20
    9b84:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9b88:	86 ec       	ldi	r24, 0xC6	; 198
    9b8a:	94 e1       	ldi	r25, 0x14	; 20
    9b8c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	
	
	
	if(on_off == _kOFF)
    9b90:	11 11       	cpse	r17, r1
    9b92:	14 c0       	rjmp	.+40     	; 0x9bbc <_Z17Doser_Pump_On_Offh+0x704>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status != _kSCHEDULER_OFF)
    9b94:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    9b98:	85 30       	cpi	r24, 0x05	; 5
    9b9a:	09 f1       	breq	.+66     	; 0x9bde <_Z17Doser_Pump_On_Offh+0x726>
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9b9c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9ba0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9ba4:	90 62       	ori	r25, 0x20	; 32
    9ba6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9baa:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    9bae:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9bb2:	82 e0       	ldi	r24, 0x02	; 2
    9bb4:	80 93 02 0e 	sts	0x0E02, r24	; 0x800e02 <_sExtra_Plot+0x1a>
			
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_OFF;
    9bb8:	85 e0       	ldi	r24, 0x05	; 5
    9bba:	0f c0       	rjmp	.+30     	; 0x9bda <_Z17Doser_Pump_On_Offh+0x722>
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9bbc:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    9bc0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    9bc4:	90 62       	ori	r25, 0x20	; 32
    9bc6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    9bca:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    9bce:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9bd2:	82 e0       	ldi	r24, 0x02	; 2
    9bd4:	80 93 02 0e 	sts	0x0E02, r24	; 0x800e02 <_sExtra_Plot+0x1a>
		
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_ON;
    9bd8:	84 e0       	ldi	r24, 0x04	; 4
    9bda:	80 93 ea 0d 	sts	0x0DEA, r24	; 0x800dea <_sExtra_Plot+0x2>
	}
	
	return 1;
    9bde:	81 e0       	ldi	r24, 0x01	; 1
}
    9be0:	0f 90       	pop	r0
    9be2:	0f 90       	pop	r0
    9be4:	0f 90       	pop	r0
    9be6:	0f 90       	pop	r0
    9be8:	df 91       	pop	r29
    9bea:	cf 91       	pop	r28
    9bec:	1f 91       	pop	r17
    9bee:	0f 91       	pop	r16
    9bf0:	ff 90       	pop	r15
    9bf2:	ef 90       	pop	r14
    9bf4:	df 90       	pop	r13
    9bf6:	cf 90       	pop	r12
    9bf8:	bf 90       	pop	r11
    9bfa:	af 90       	pop	r10
    9bfc:	9f 90       	pop	r9
    9bfe:	8f 90       	pop	r8
    9c00:	7f 90       	pop	r7
    9c02:	6f 90       	pop	r6
    9c04:	5f 90       	pop	r5
    9c06:	4f 90       	pop	r4
    9c08:	3f 90       	pop	r3
    9c0a:	2f 90       	pop	r2
    9c0c:	08 95       	ret

00009c0e <_Z22Fertilizer_Tank_On_Offhh>:
		}
	}
}

char Fertilizer_Tank_On_Off(unsigned char tank_number, unsigned char on_off)
{
    9c0e:	2f 92       	push	r2
    9c10:	3f 92       	push	r3
    9c12:	4f 92       	push	r4
    9c14:	5f 92       	push	r5
    9c16:	6f 92       	push	r6
    9c18:	7f 92       	push	r7
    9c1a:	8f 92       	push	r8
    9c1c:	9f 92       	push	r9
    9c1e:	af 92       	push	r10
    9c20:	bf 92       	push	r11
    9c22:	cf 92       	push	r12
    9c24:	df 92       	push	r13
    9c26:	ef 92       	push	r14
    9c28:	ff 92       	push	r15
    9c2a:	0f 93       	push	r16
    9c2c:	1f 93       	push	r17
    9c2e:	cf 93       	push	r28
    9c30:	df 93       	push	r29
    9c32:	00 d0       	rcall	.+0      	; 0x9c34 <_Z22Fertilizer_Tank_On_Offhh+0x26>
    9c34:	00 d0       	rcall	.+0      	; 0x9c36 <_Z22Fertilizer_Tank_On_Offhh+0x28>
    9c36:	cd b7       	in	r28, 0x3d	; 61
    9c38:	de b7       	in	r29, 0x3e	; 62
    9c3a:	f8 2e       	mov	r15, r24
    9c3c:	b6 2e       	mov	r11, r22
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	
	if(_sSchedules.Fertilizer_Tank_Number[tank_number] < 100)
    9c3e:	28 2f       	mov	r18, r24
    9c40:	30 e0       	ldi	r19, 0x00	; 0
    9c42:	22 5e       	subi	r18, 0xE2	; 226
    9c44:	36 4f       	sbci	r19, 0xF6	; 246
    9c46:	3e 83       	std	Y+6, r19	; 0x06
    9c48:	2d 83       	std	Y+5, r18	; 0x05
    9c4a:	89 01       	movw	r16, r18
    9c4c:	06 58       	subi	r16, 0x86	; 134
    9c4e:	1f 4f       	sbci	r17, 0xFF	; 255
    9c50:	f8 01       	movw	r30, r16
    9c52:	80 81       	ld	r24, Z
    9c54:	84 36       	cpi	r24, 0x64	; 100
    9c56:	60 f4       	brcc	.+24     	; 0x9c70 <_Z22Fertilizer_Tank_On_Offhh+0x62>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c58:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9c5c:	81 30       	cpi	r24, 0x01	; 1
    9c5e:	09 f0       	breq	.+2      	; 0x9c62 <_Z22Fertilizer_Tank_On_Offhh+0x54>
    9c60:	46 c2       	rjmp	.+1164   	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("fertilizer tank number is less than 100 : ");
    9c62:	62 ea       	ldi	r22, 0xA2	; 162
    9c64:	72 e1       	ldi	r23, 0x12	; 18
    9c66:	86 ec       	ldi	r24, 0xC6	; 198
    9c68:	94 e1       	ldi	r25, 0x14	; 20
    9c6a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    9c6e:	3b c2       	rjmp	.+1142   	; 0xa0e6 <_Z22Fertilizer_Tank_On_Offhh+0x4d8>
			_kSERIAL_MON_CLEAR();
		}
		return 1;
	}
	
	if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number] - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET)
    9c70:	f8 01       	movw	r30, r16
    9c72:	80 81       	ld	r24, Z
    9c74:	90 e0       	ldi	r25, 0x00	; 0
    9c76:	85 56       	subi	r24, 0x65	; 101
    9c78:	91 09       	sbc	r25, r1
    9c7a:	2b e1       	ldi	r18, 0x1B	; 27
    9c7c:	28 9f       	mul	r18, r24
    9c7e:	f0 01       	movw	r30, r0
    9c80:	29 9f       	mul	r18, r25
    9c82:	f0 0d       	add	r31, r0
    9c84:	11 24       	eor	r1, r1
    9c86:	e8 51       	subi	r30, 0x18	; 24
    9c88:	f2 4f       	sbci	r31, 0xF2	; 242
    9c8a:	80 81       	ld	r24, Z
    9c8c:	81 11       	cpse	r24, r1
    9c8e:	2f c2       	rjmp	.+1118   	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c90:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9c94:	81 30       	cpi	r24, 0x01	; 1
    9c96:	91 f0       	breq	.+36     	; 0x9cbc <_Z22Fertilizer_Tank_On_Offhh+0xae>
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
		_kSERIAL_MON_CLEAR();
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
    9c98:	e1 2c       	mov	r14, r1
    9c9a:	f1 2c       	mov	r15, r1
    9c9c:	10 e0       	ldi	r17, 0x00	; 0
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9c9e:	cd 80       	ldd	r12, Y+5	; 0x05
    9ca0:	de 80       	ldd	r13, Y+6	; 0x06
    9ca2:	fa e7       	ldi	r31, 0x7A	; 122
    9ca4:	cf 0e       	add	r12, r31
    9ca6:	d1 1c       	adc	r13, r1
    9ca8:	0b e1       	ldi	r16, 0x1B	; 27
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9caa:	b7 e0       	ldi	r27, 0x07	; 7
    9cac:	9b 2e       	mov	r9, r27
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9cae:	8d e0       	ldi	r24, 0x0D	; 13
    9cb0:	a8 2e       	mov	r10, r24
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9cb2:	90 ed       	ldi	r25, 0xD0	; 208
    9cb4:	29 2e       	mov	r2, r25
    9cb6:	9f e0       	ldi	r25, 0x0F	; 15
    9cb8:	39 2e       	mov	r3, r25
    9cba:	c2 c1       	rjmp	.+900    	; 0xa040 <_Z22Fertilizer_Tank_On_Offhh+0x432>
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
    9cbc:	68 e8       	ldi	r22, 0x88	; 136
    9cbe:	72 e1       	ldi	r23, 0x12	; 18
    9cc0:	86 ec       	ldi	r24, 0xC6	; 198
    9cc2:	94 e1       	ldi	r25, 0x14	; 20
    9cc4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9cc8:	86 ec       	ldi	r24, 0xC6	; 198
    9cca:	94 e1       	ldi	r25, 0x14	; 20
    9ccc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
    9cd0:	4a e0       	ldi	r20, 0x0A	; 10
    9cd2:	50 e0       	ldi	r21, 0x00	; 0
    9cd4:	6f 2d       	mov	r22, r15
    9cd6:	86 ec       	ldi	r24, 0xC6	; 198
    9cd8:	94 e1       	ldi	r25, 0x14	; 20
    9cda:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
		_kSERIAL_MON_CLEAR();
    9cde:	86 ec       	ldi	r24, 0xC6	; 198
    9ce0:	94 e1       	ldi	r25, 0x14	; 20
    9ce2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
    9ce6:	6a e6       	ldi	r22, 0x6A	; 106
    9ce8:	72 e1       	ldi	r23, 0x12	; 18
    9cea:	86 ec       	ldi	r24, 0xC6	; 198
    9cec:	94 e1       	ldi	r25, 0x14	; 20
    9cee:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9cf2:	86 ec       	ldi	r24, 0xC6	; 198
    9cf4:	94 e1       	ldi	r25, 0x14	; 20
    9cf6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    9cfa:	e1 2c       	mov	r14, r1
    9cfc:	f1 2c       	mov	r15, r1
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]);
    9cfe:	ab e1       	ldi	r26, 0x1B	; 27
    9d00:	da 2e       	mov	r13, r26
    9d02:	f8 01       	movw	r30, r16
    9d04:	80 81       	ld	r24, Z
    9d06:	90 e0       	ldi	r25, 0x00	; 0
    9d08:	85 56       	subi	r24, 0x65	; 101
    9d0a:	91 09       	sbc	r25, r1
    9d0c:	d8 9e       	mul	r13, r24
    9d0e:	f0 01       	movw	r30, r0
    9d10:	d9 9e       	mul	r13, r25
    9d12:	f0 0d       	add	r31, r0
    9d14:	11 24       	eor	r1, r1
    9d16:	e8 51       	subi	r30, 0x18	; 24
    9d18:	f2 4f       	sbci	r31, 0xF2	; 242
    9d1a:	ee 0d       	add	r30, r14
    9d1c:	ff 1d       	adc	r31, r15
    9d1e:	4a e0       	ldi	r20, 0x0A	; 10
    9d20:	50 e0       	ldi	r21, 0x00	; 0
    9d22:	65 81       	ldd	r22, Z+5	; 0x05
    9d24:	86 ec       	ldi	r24, 0xC6	; 198
    9d26:	94 e1       	ldi	r25, 0x14	; 20
    9d28:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    9d2c:	68 e6       	ldi	r22, 0x68	; 104
    9d2e:	72 e1       	ldi	r23, 0x12	; 18
    9d30:	86 ec       	ldi	r24, 0xC6	; 198
    9d32:	94 e1       	ldi	r25, 0x14	; 20
    9d34:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    9d38:	ff ef       	ldi	r31, 0xFF	; 255
    9d3a:	ef 1a       	sub	r14, r31
    9d3c:	ff 0a       	sbc	r15, r31
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9d3e:	25 e0       	ldi	r18, 0x05	; 5
    9d40:	e2 16       	cp	r14, r18
    9d42:	f1 04       	cpc	r15, r1
    9d44:	f1 f6       	brne	.-68     	; 0x9d02 <_Z22Fertilizer_Tank_On_Offhh+0xf4>
    9d46:	a8 cf       	rjmp	.-176    	; 0x9c98 <_Z22Fertilizer_Tank_On_Offhh+0x8a>
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9d48:	f6 01       	movw	r30, r12
    9d4a:	80 81       	ld	r24, Z
    9d4c:	90 e0       	ldi	r25, 0x00	; 0
    9d4e:	85 56       	subi	r24, 0x65	; 101
    9d50:	91 09       	sbc	r25, r1
    9d52:	08 9f       	mul	r16, r24
    9d54:	f0 01       	movw	r30, r0
    9d56:	09 9f       	mul	r16, r25
    9d58:	f0 0d       	add	r31, r0
    9d5a:	11 24       	eor	r1, r1
    9d5c:	e8 51       	subi	r30, 0x18	; 24
    9d5e:	f2 4f       	sbci	r31, 0xF2	; 242
    9d60:	ee 0d       	add	r30, r14
    9d62:	ff 1d       	adc	r31, r15
    9d64:	85 81       	ldd	r24, Z+5	; 0x05
    9d66:	88 23       	and	r24, r24
    9d68:	09 f4       	brne	.+2      	; 0x9d6c <_Z22Fertilizer_Tank_On_Offhh+0x15e>
    9d6a:	c3 c1       	rjmp	.+902    	; 0xa0f2 <_Z22Fertilizer_Tank_On_Offhh+0x4e4>
		{
			unsigned char valve_number = 0;
			unsigned char euro_valve_num = 0,command_valve = 0;
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
    9d6c:	f6 01       	movw	r30, r12
    9d6e:	80 81       	ld	r24, Z
    9d70:	90 e0       	ldi	r25, 0x00	; 0
    9d72:	85 56       	subi	r24, 0x65	; 101
    9d74:	91 09       	sbc	r25, r1
    9d76:	08 9f       	mul	r16, r24
    9d78:	f0 01       	movw	r30, r0
    9d7a:	09 9f       	mul	r16, r25
    9d7c:	f0 0d       	add	r31, r0
    9d7e:	11 24       	eor	r1, r1
    9d80:	e8 51       	subi	r30, 0x18	; 24
    9d82:	f2 4f       	sbci	r31, 0xF2	; 242
    9d84:	ee 0d       	add	r30, r14
    9d86:	ff 1d       	adc	r31, r15
    9d88:	85 80       	ldd	r8, Z+5	; 0x05
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9d8a:	f3 e0       	ldi	r31, 0x03	; 3
    9d8c:	f8 15       	cp	r31, r8
    9d8e:	08 f0       	brcs	.+2      	; 0x9d92 <_Z22Fertilizer_Tank_On_Offhh+0x184>
    9d90:	63 c2       	rjmp	.+1222   	; 0xa258 <_Z22Fertilizer_Tank_On_Offhh+0x64a>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9d92:	6b ea       	ldi	r22, 0xAB	; 171
    9d94:	86 9e       	mul	r8, r22
    9d96:	71 2c       	mov	r7, r1
    9d98:	11 24       	eor	r1, r1
    9d9a:	87 2d       	mov	r24, r7
    9d9c:	86 95       	lsr	r24
    9d9e:	98 2f       	mov	r25, r24
    9da0:	99 0f       	add	r25, r25
    9da2:	89 0f       	add	r24, r25
    9da4:	88 1a       	sub	r8, r24
    9da6:	67 2d       	mov	r22, r7
    9da8:	66 95       	lsr	r22
    9daa:	88 20       	and	r8, r8
    9dac:	09 f4       	brne	.+2      	; 0x9db0 <_Z22Fertilizer_Tank_On_Offhh+0x1a2>
    9dae:	50 c2       	rjmp	.+1184   	; 0xa250 <_Z22Fertilizer_Tank_On_Offhh+0x642>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9db0:	77 24       	eor	r7, r7
    9db2:	73 94       	inc	r7
    9db4:	76 0e       	add	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9db6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9dba:	81 30       	cpi	r24, 0x01	; 1
    9dbc:	89 f4       	brne	.+34     	; 0x9de0 <_Z22Fertilizer_Tank_On_Offhh+0x1d2>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9dbe:	64 e5       	ldi	r22, 0x54	; 84
    9dc0:	72 e1       	ldi	r23, 0x12	; 18
    9dc2:	86 ec       	ldi	r24, 0xC6	; 198
    9dc4:	94 e1       	ldi	r25, 0x14	; 20
    9dc6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    9dca:	4a e0       	ldi	r20, 0x0A	; 10
    9dcc:	50 e0       	ldi	r21, 0x00	; 0
    9dce:	67 2d       	mov	r22, r7
    9dd0:	86 ec       	ldi	r24, 0xC6	; 198
    9dd2:	94 e1       	ldi	r25, 0x14	; 20
    9dd4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    9dd8:	86 ec       	ldi	r24, 0xC6	; 198
    9dda:	94 e1       	ldi	r25, 0x14	; 20
    9ddc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9de0:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
    9de4:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9de6:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9dea:	84 e1       	ldi	r24, 0x14	; 20
    9dec:	e5 ef       	ldi	r30, 0xF5	; 245
    9dee:	f3 e1       	ldi	r31, 0x13	; 19
    9df0:	11 92       	st	Z+, r1
    9df2:	8a 95       	dec	r24
    9df4:	e9 f7       	brne	.-6      	; 0x9df0 <_Z22Fertilizer_Tank_On_Offhh+0x1e2>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9df6:	67 2d       	mov	r22, r7
    9df8:	70 e0       	ldi	r23, 0x00	; 0
    9dfa:	61 50       	subi	r22, 0x01	; 1
    9dfc:	71 09       	sbc	r23, r1
    9dfe:	96 9e       	mul	r9, r22
    9e00:	c0 01       	movw	r24, r0
    9e02:	97 9e       	mul	r9, r23
    9e04:	90 0d       	add	r25, r0
    9e06:	11 24       	eor	r1, r1
    9e08:	82 55       	subi	r24, 0x52	; 82
    9e0a:	9c 4e       	sbci	r25, 0xEC	; 236
    9e0c:	fc 01       	movw	r30, r24
    9e0e:	ec 58       	subi	r30, 0x8C	; 140
    9e10:	ff 4f       	sbci	r31, 0xFF	; 255
    9e12:	20 81       	ld	r18, Z
    9e14:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9e18:	31 96       	adiw	r30, 0x01	; 1
    9e1a:	20 81       	ld	r18, Z
    9e1c:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9e20:	31 96       	adiw	r30, 0x01	; 1
    9e22:	20 81       	ld	r18, Z
    9e24:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9e28:	31 96       	adiw	r30, 0x01	; 1
    9e2a:	20 81       	ld	r18, Z
    9e2c:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9e30:	31 96       	adiw	r30, 0x01	; 1
    9e32:	20 81       	ld	r18, Z
    9e34:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9e38:	31 96       	adiw	r30, 0x01	; 1
    9e3a:	20 81       	ld	r18, Z
    9e3c:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9e40:	22 e0       	ldi	r18, 0x02	; 2
    9e42:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9e46:	b0 92 fc 13 	sts	0x13FC, r11	; 0x8013fc <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    9e4a:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    9e4e:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9e52:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    9e56:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9e5a:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
    9e5e:	40 e0       	ldi	r20, 0x00	; 0
    9e60:	50 e0       	ldi	r21, 0x00	; 0
    9e62:	64 2e       	mov	r6, r20
    9e64:	81 2c       	mov	r8, r1
    9e66:	71 2c       	mov	r7, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9e68:	a4 9e       	mul	r10, r20
    9e6a:	b0 01       	movw	r22, r0
    9e6c:	a5 9e       	mul	r10, r21
    9e6e:	70 0d       	add	r23, r0
    9e70:	11 24       	eor	r1, r1
    9e72:	6b 5e       	subi	r22, 0xEB	; 235
    9e74:	73 4f       	sbci	r23, 0xF3	; 243
    9e76:	28 2d       	mov	r18, r8
    9e78:	30 e0       	ldi	r19, 0x00	; 0
    9e7a:	fb 01       	movw	r30, r22
    9e7c:	e2 0f       	add	r30, r18
    9e7e:	f3 1f       	adc	r31, r19
    9e80:	28 0f       	add	r18, r24
    9e82:	39 1f       	adc	r19, r25
    9e84:	d9 01       	movw	r26, r18
    9e86:	ac 58       	subi	r26, 0x8C	; 140
    9e88:	bf 4f       	sbci	r27, 0xFF	; 255
    9e8a:	31 81       	ldd	r19, Z+1	; 0x01
    9e8c:	2c 91       	ld	r18, X
    9e8e:	32 17       	cp	r19, r18
    9e90:	19 f0       	breq	.+6      	; 0x9e98 <_Z22Fertilizer_Tank_On_Offhh+0x28a>
					{
						compare_id = _kVALVE_ID_LEN;
    9e92:	e6 e0       	ldi	r30, 0x06	; 6
    9e94:	8e 2e       	mov	r8, r30
						id_len = _kRESET;
    9e96:	71 2c       	mov	r7, r1
					}
					id_len++;
    9e98:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    9e9a:	83 94       	inc	r8
    9e9c:	f5 e0       	ldi	r31, 0x05	; 5
    9e9e:	f8 15       	cp	r31, r8
    9ea0:	50 f7       	brcc	.-44     	; 0x9e76 <_Z22Fertilizer_Tank_On_Offhh+0x268>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9ea2:	26 e0       	ldi	r18, 0x06	; 6
    9ea4:	72 16       	cp	r7, r18
    9ea6:	09 f4       	brne	.+2      	; 0x9eaa <_Z22Fertilizer_Tank_On_Offhh+0x29c>
    9ea8:	da c1       	rjmp	.+948    	; 0xa25e <_Z22Fertilizer_Tank_On_Offhh+0x650>
    9eaa:	4f 5f       	subi	r20, 0xFF	; 255
    9eac:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    9eae:	46 30       	cpi	r20, 0x06	; 6
    9eb0:	51 05       	cpc	r21, r1
    9eb2:	b9 f6       	brne	.-82     	; 0x9e62 <_Z22Fertilizer_Tank_On_Offhh+0x254>
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9eb4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9eb8:	81 30       	cpi	r24, 0x01	; 1
    9eba:	89 f4       	brne	.+34     	; 0x9ede <_Z22Fertilizer_Tank_On_Offhh+0x2d0>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    9ebc:	6e e3       	ldi	r22, 0x3E	; 62
    9ebe:	72 e1       	ldi	r23, 0x12	; 18
    9ec0:	86 ec       	ldi	r24, 0xC6	; 198
    9ec2:	94 e1       	ldi	r25, 0x14	; 20
    9ec4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9ec8:	4a e0       	ldi	r20, 0x0A	; 10
    9eca:	50 e0       	ldi	r21, 0x00	; 0
    9ecc:	61 2f       	mov	r22, r17
    9ece:	86 ec       	ldi	r24, 0xC6	; 198
    9ed0:	94 e1       	ldi	r25, 0x14	; 20
    9ed2:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9ed6:	86 ec       	ldi	r24, 0xC6	; 198
    9ed8:	94 e1       	ldi	r25, 0x14	; 20
    9eda:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    9ede:	3d e0       	ldi	r19, 0x0D	; 13
    9ee0:	13 9f       	mul	r17, r19
    9ee2:	20 01       	movw	r4, r0
    9ee4:	11 24       	eor	r1, r1
    9ee6:	81 2c       	mov	r8, r1
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9ee8:	a1 9e       	mul	r10, r17
    9eea:	c0 01       	movw	r24, r0
    9eec:	11 24       	eor	r1, r1
    9eee:	9c 01       	movw	r18, r24
    9ef0:	2b 5e       	subi	r18, 0xEB	; 235
    9ef2:	33 4f       	sbci	r19, 0xF3	; 243
    9ef4:	a9 01       	movw	r20, r18
    9ef6:	45 5f       	subi	r20, 0xF5	; 245
    9ef8:	5f 4f       	sbci	r21, 0xFF	; 255
    9efa:	5a 83       	std	Y+2, r21	; 0x02
    9efc:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9efe:	f9 01       	movw	r30, r18
    9f00:	38 96       	adiw	r30, 0x08	; 8
    9f02:	fc 83       	std	Y+4, r31	; 0x04
    9f04:	eb 83       	std	Y+3, r30	; 0x03
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9f06:	9c 01       	movw	r18, r24
    9f08:	2a 5e       	subi	r18, 0xEA	; 234
    9f0a:	33 4f       	sbci	r19, 0xF3	; 243
    9f0c:	39 01       	movw	r6, r18
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    9f0e:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    9f12:	81 11       	cpse	r24, r1
    9f14:	a6 c1       	rjmp	.+844    	; 0xa262 <_Z22Fertilizer_Tank_On_Offhh+0x654>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    9f16:	83 94       	inc	r8
				
				_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9f18:	6a e1       	ldi	r22, 0x1A	; 26
    9f1a:	72 e1       	ldi	r23, 0x12	; 18
    9f1c:	86 ec       	ldi	r24, 0xC6	; 198
    9f1e:	94 e1       	ldi	r25, 0x14	; 20
    9f20:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    9f24:	86 ec       	ldi	r24, 0xC6	; 198
    9f26:	94 e1       	ldi	r25, 0x14	; 20
    9f28:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				Display_Update_1();    // 20/1/2022
    9f2c:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9f30:	8c e0       	ldi	r24, 0x0C	; 12
    9f32:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    9f36:	88 eb       	ldi	r24, 0xB8	; 184
    9f38:	9b e0       	ldi	r25, 0x0B	; 11
    9f3a:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
    9f3e:	88 23       	and	r24, r24
    9f40:	09 f4       	brne	.+2      	; 0x9f44 <_Z22Fertilizer_Tank_On_Offhh+0x336>
    9f42:	0e c3       	rjmp	.+1564   	; 0xa560 <_Z22Fertilizer_Tank_On_Offhh+0x952>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    9f44:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
    9f48:	88 23       	and	r24, r24
    9f4a:	09 f4       	brne	.+2      	; 0x9f4e <_Z22Fertilizer_Tank_On_Offhh+0x340>
    9f4c:	94 c2       	rjmp	.+1320   	; 0xa476 <_Z22Fertilizer_Tank_On_Offhh+0x868>
					{
						
						if(Subscribed_data_check())
    9f4e:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
    9f52:	81 11       	cpse	r24, r1
    9f54:	9b c1       	rjmp	.+822    	; 0xa28c <_Z22Fertilizer_Tank_On_Offhh+0x67e>
							}
						}
						
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9f56:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9f5a:	81 30       	cpi	r24, 0x01	; 1
    9f5c:	59 f5       	brne	.+86     	; 0x9fb4 <_Z22Fertilizer_Tank_On_Offhh+0x3a6>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9f5e:	64 e0       	ldi	r22, 0x04	; 4
    9f60:	72 e1       	ldi	r23, 0x12	; 18
    9f62:	86 ec       	ldi	r24, 0xC6	; 198
    9f64:	94 e1       	ldi	r25, 0x14	; 20
    9f66:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    9f6a:	4a e0       	ldi	r20, 0x0A	; 10
    9f6c:	50 e0       	ldi	r21, 0x00	; 0
    9f6e:	69 e0       	ldi	r22, 0x09	; 9
    9f70:	74 e1       	ldi	r23, 0x14	; 20
    9f72:	86 ec       	ldi	r24, 0xC6	; 198
    9f74:	94 e1       	ldi	r25, 0x14	; 20
    9f76:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    9f7a:	86 ec       	ldi	r24, 0xC6	; 198
    9f7c:	94 e1       	ldi	r25, 0x14	; 20
    9f7e:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9f82:	86 ec       	ldi	r24, 0xC6	; 198
    9f84:	94 e1       	ldi	r25, 0x14	; 20
    9f86:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9f8a:	66 ee       	ldi	r22, 0xE6	; 230
    9f8c:	71 e1       	ldi	r23, 0x11	; 17
    9f8e:	86 ec       	ldi	r24, 0xC6	; 198
    9f90:	94 e1       	ldi	r25, 0x14	; 20
    9f92:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9f96:	47 e0       	ldi	r20, 0x07	; 7
    9f98:	50 e0       	ldi	r21, 0x00	; 0
    9f9a:	b3 01       	movw	r22, r6
    9f9c:	86 ec       	ldi	r24, 0xC6	; 198
    9f9e:	94 e1       	ldi	r25, 0x14	; 20
    9fa0:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
							Serial.println();
    9fa4:	86 ec       	ldi	r24, 0xC6	; 198
    9fa6:	94 e1       	ldi	r25, 0x14	; 20
    9fa8:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9fac:	86 ec       	ldi	r24, 0xC6	; 198
    9fae:	94 e1       	ldi	r25, 0x14	; 20
    9fb0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    9fb4:	a9 e0       	ldi	r26, 0x09	; 9
    9fb6:	b4 e1       	ldi	r27, 0x14	; 20
    9fb8:	80 e0       	ldi	r24, 0x00	; 0
    9fba:	90 e0       	ldi	r25, 0x00	; 0
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    9fbc:	2d 91       	ld	r18, X+
    9fbe:	f2 01       	movw	r30, r4
    9fc0:	e8 0f       	add	r30, r24
    9fc2:	f9 1f       	adc	r31, r25
    9fc4:	eb 5e       	subi	r30, 0xEB	; 235
    9fc6:	f3 4f       	sbci	r31, 0xF3	; 243
    9fc8:	31 81       	ldd	r19, Z+1	; 0x01
    9fca:	32 17       	cp	r19, r18
    9fcc:	09 f4       	brne	.+2      	; 0x9fd0 <_Z22Fertilizer_Tank_On_Offhh+0x3c2>
    9fce:	d8 c1       	rjmp	.+944    	; 0xa380 <_Z22Fertilizer_Tank_On_Offhh+0x772>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9fd0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    9fd4:	81 30       	cpi	r24, 0x01	; 1
    9fd6:	51 f4       	brne	.+20     	; 0x9fec <_Z22Fertilizer_Tank_On_Offhh+0x3de>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9fd8:	6b eb       	ldi	r22, 0xBB	; 187
    9fda:	71 e1       	ldi	r23, 0x11	; 17
    9fdc:	86 ec       	ldi	r24, 0xC6	; 198
    9fde:	94 e1       	ldi	r25, 0x14	; 20
    9fe0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9fe4:	86 ec       	ldi	r24, 0xC6	; 198
    9fe6:	94 e1       	ldi	r25, 0x14	; 20
    9fe8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9fec:	32 e0       	ldi	r19, 0x02	; 2
    9fee:	83 16       	cp	r8, r19
    9ff0:	09 f4       	brne	.+2      	; 0x9ff4 <_Z22Fertilizer_Tank_On_Offhh+0x3e6>
    9ff2:	61 c1       	rjmp	.+706    	; 0xa2b6 <_Z22Fertilizer_Tank_On_Offhh+0x6a8>
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9ff4:	21 e0       	ldi	r18, 0x01	; 1
    9ff6:	e9 81       	ldd	r30, Y+1	; 0x01
    9ff8:	fa 81       	ldd	r31, Y+2	; 0x02
    9ffa:	20 83       	st	Z, r18
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9ffc:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    a000:	90 e0       	ldi	r25, 0x00	; 0
    a002:	98 2f       	mov	r25, r24
    a004:	88 27       	eor	r24, r24
    a006:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    a00a:	82 2b       	or	r24, r18
    a00c:	eb 81       	ldd	r30, Y+3	; 0x03
    a00e:	fc 81       	ldd	r31, Y+4	; 0x04
    a010:	91 83       	std	Z+1, r25	; 0x01
    a012:	80 83       	st	Z, r24
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    a014:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    a018:	b8 12       	cpse	r11, r24
    a01a:	b8 c1       	rjmp	.+880    	; 0xa38c <_Z22Fertilizer_Tank_On_Offhh+0x77e>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    a01c:	43 e0       	ldi	r20, 0x03	; 3
    a01e:	84 2e       	mov	r8, r20
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    a020:	68 ee       	ldi	r22, 0xE8	; 232
    a022:	73 e0       	ldi	r23, 0x03	; 3
    a024:	80 e0       	ldi	r24, 0x00	; 0
    a026:	90 e0       	ldi	r25, 0x00	; 0
    a028:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    a02c:	f3 e0       	ldi	r31, 0x03	; 3
    a02e:	8f 12       	cpse	r8, r31
    a030:	6e cf       	rjmp	.-292    	; 0x9f0e <_Z22Fertilizer_Tank_On_Offhh+0x300>
    a032:	ff ef       	ldi	r31, 0xFF	; 255
    a034:	ef 1a       	sub	r14, r31
    a036:	ff 0a       	sbc	r15, r31
		}
	}
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    a038:	25 e0       	ldi	r18, 0x05	; 5
    a03a:	e2 16       	cp	r14, r18
    a03c:	f1 04       	cpc	r15, r1
    a03e:	99 f0       	breq	.+38     	; 0xa066 <_Z22Fertilizer_Tank_On_Offhh+0x458>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    a040:	f6 01       	movw	r30, r12
    a042:	80 81       	ld	r24, Z
    a044:	90 e0       	ldi	r25, 0x00	; 0
    a046:	85 56       	subi	r24, 0x65	; 101
    a048:	91 09       	sbc	r25, r1
    a04a:	08 9f       	mul	r16, r24
    a04c:	f0 01       	movw	r30, r0
    a04e:	09 9f       	mul	r16, r25
    a050:	f0 0d       	add	r31, r0
    a052:	11 24       	eor	r1, r1
    a054:	e8 51       	subi	r30, 0x18	; 24
    a056:	f2 4f       	sbci	r31, 0xF2	; 242
    a058:	ee 0d       	add	r30, r14
    a05a:	ff 1d       	adc	r31, r15
    a05c:	85 81       	ldd	r24, Z+5	; 0x05
    a05e:	83 31       	cpi	r24, 0x13	; 19
    a060:	08 f0       	brcs	.+2      	; 0xa064 <_Z22Fertilizer_Tank_On_Offhh+0x456>
    a062:	47 c0       	rjmp	.+142    	; 0xa0f2 <_Z22Fertilizer_Tank_On_Offhh+0x4e4>
    a064:	71 ce       	rjmp	.-798    	; 0x9d48 <_Z22Fertilizer_Tank_On_Offhh+0x13a>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    a066:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a06a:	81 30       	cpi	r24, 0x01	; 1
    a06c:	51 f4       	brne	.+20     	; 0xa082 <_Z22Fertilizer_Tank_On_Offhh+0x474>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    a06e:	63 e1       	ldi	r22, 0x13	; 19
    a070:	71 e1       	ldi	r23, 0x11	; 17
    a072:	86 ec       	ldi	r24, 0xC6	; 198
    a074:	94 e1       	ldi	r25, 0x14	; 20
    a076:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    a07a:	86 ec       	ldi	r24, 0xC6	; 198
    a07c:	94 e1       	ldi	r25, 0x14	; 20
    a07e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    a082:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
	// 	else
	// 	{
	// 		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
	// 	}
	
	if(on_off == _kOFF)
    a086:	b1 10       	cpse	r11, r1
    a088:	a7 c0       	rjmp	.+334    	; 0xa1d8 <_Z22Fertilizer_Tank_On_Offhh+0x5ca>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    a08a:	0d 81       	ldd	r16, Y+5	; 0x05
    a08c:	1e 81       	ldd	r17, Y+6	; 0x06
    a08e:	06 58       	subi	r16, 0x86	; 134
    a090:	1f 4f       	sbci	r17, 0xFF	; 255
    a092:	f8 01       	movw	r30, r16
    a094:	80 81       	ld	r24, Z
    a096:	90 e0       	ldi	r25, 0x00	; 0
    a098:	85 56       	subi	r24, 0x65	; 101
    a09a:	91 09       	sbc	r25, r1
    a09c:	3b e1       	ldi	r19, 0x1B	; 27
    a09e:	38 9f       	mul	r19, r24
    a0a0:	f0 01       	movw	r30, r0
    a0a2:	39 9f       	mul	r19, r25
    a0a4:	f0 0d       	add	r31, r0
    a0a6:	11 24       	eor	r1, r1
    a0a8:	e8 51       	subi	r30, 0x18	; 24
    a0aa:	f2 4f       	sbci	r31, 0xF2	; 242
    a0ac:	82 81       	ldd	r24, Z+2	; 0x02
    a0ae:	85 30       	cpi	r24, 0x05	; 5
    a0b0:	09 f0       	breq	.+2      	; 0xa0b4 <_Z22Fertilizer_Tank_On_Offhh+0x4a6>
    a0b2:	50 c0       	rjmp	.+160    	; 0xa154 <_Z22Fertilizer_Tank_On_Offhh+0x546>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				_kSERIAL_MON_CLEAR();
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a0b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a0b8:	81 30       	cpi	r24, 0x01	; 1
    a0ba:	c9 f4       	brne	.+50     	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("tank to send schedule Off 1 : ");
    a0bc:	65 ed       	ldi	r22, 0xD5	; 213
    a0be:	70 e1       	ldi	r23, 0x10	; 16
    a0c0:	86 ec       	ldi	r24, 0xC6	; 198
    a0c2:	94 e1       	ldi	r25, 0x14	; 20
    a0c4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a0c8:	2d 81       	ldd	r18, Y+5	; 0x05
    a0ca:	3e 81       	ldd	r19, Y+6	; 0x06
    a0cc:	26 58       	subi	r18, 0x86	; 134
    a0ce:	3f 4f       	sbci	r19, 0xFF	; 255
    a0d0:	f9 01       	movw	r30, r18
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a0d2:	60 81       	ld	r22, Z
    a0d4:	70 e0       	ldi	r23, 0x00	; 0
    a0d6:	65 56       	subi	r22, 0x65	; 101
    a0d8:	71 09       	sbc	r23, r1
    a0da:	4a e0       	ldi	r20, 0x0A	; 10
    a0dc:	50 e0       	ldi	r21, 0x00	; 0
    a0de:	86 ec       	ldi	r24, 0xC6	; 198
    a0e0:	94 e1       	ldi	r25, 0x14	; 20
    a0e2:	0e 94 42 d6 	call	0x1ac84	; 0x1ac84 <_ZN5Print5printEii>
			_kSERIAL_MON_CLEAR();
    a0e6:	86 ec       	ldi	r24, 0xC6	; 198
    a0e8:	94 e1       	ldi	r25, 0x14	; 20
    a0ea:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		//_kSERAIL_MON_WRITE("publish status : ");
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
    a0ee:	81 e0       	ldi	r24, 0x01	; 1
    a0f0:	ac c2       	rjmp	.+1368   	; 0xa64a <_Z22Fertilizer_Tank_On_Offhh+0xa3c>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a0f2:	f6 01       	movw	r30, r12
    a0f4:	80 81       	ld	r24, Z
    a0f6:	90 e0       	ldi	r25, 0x00	; 0
    a0f8:	85 56       	subi	r24, 0x65	; 101
    a0fa:	91 09       	sbc	r25, r1
    a0fc:	08 9f       	mul	r16, r24
    a0fe:	f0 01       	movw	r30, r0
    a100:	09 9f       	mul	r16, r25
    a102:	f0 0d       	add	r31, r0
    a104:	11 24       	eor	r1, r1
    a106:	e8 51       	subi	r30, 0x18	; 24
    a108:	f2 4f       	sbci	r31, 0xF2	; 242
    a10a:	ee 0d       	add	r30, r14
    a10c:	ff 1d       	adc	r31, r15
    a10e:	85 81       	ldd	r24, Z+5	; 0x05
    a110:	83 31       	cpi	r24, 0x13	; 19
    a112:	08 f4       	brcc	.+2      	; 0xa116 <_Z22Fertilizer_Tank_On_Offhh+0x508>
    a114:	8e cf       	rjmp	.-228    	; 0xa032 <_Z22Fertilizer_Tank_On_Offhh+0x424>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    a116:	f6 01       	movw	r30, r12
    a118:	80 81       	ld	r24, Z
    a11a:	61 e0       	ldi	r22, 0x01	; 1
    a11c:	b1 10       	cpse	r11, r1
    a11e:	60 e0       	ldi	r22, 0x00	; 0
    a120:	90 e0       	ldi	r25, 0x00	; 0
    a122:	85 56       	subi	r24, 0x65	; 101
    a124:	91 09       	sbc	r25, r1
    a126:	08 9f       	mul	r16, r24
    a128:	f0 01       	movw	r30, r0
    a12a:	09 9f       	mul	r16, r25
    a12c:	f0 0d       	add	r31, r0
    a12e:	11 24       	eor	r1, r1
    a130:	e8 51       	subi	r30, 0x18	; 24
    a132:	f2 4f       	sbci	r31, 0xF2	; 242
    a134:	ee 0d       	add	r30, r14
    a136:	ff 1d       	adc	r31, r15
    a138:	e5 81       	ldd	r30, Z+5	; 0x05
    a13a:	f0 e0       	ldi	r31, 0x00	; 0
    a13c:	e7 5c       	subi	r30, 0xC7	; 199
    a13e:	fb 4e       	sbci	r31, 0xEB	; 235
    a140:	80 81       	ld	r24, Z
    a142:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
			_kDELAY_MS(200);
    a146:	68 ec       	ldi	r22, 0xC8	; 200
    a148:	70 e0       	ldi	r23, 0x00	; 0
    a14a:	80 e0       	ldi	r24, 0x00	; 0
    a14c:	90 e0       	ldi	r25, 0x00	; 0
    a14e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    a152:	6f cf       	rjmp	.-290    	; 0xa032 <_Z22Fertilizer_Tank_On_Offhh+0x424>
	
	if(on_off == _kOFF)
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a154:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a158:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a15c:	90 62       	ori	r25, 0x20	; 32
    a15e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a162:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a166:	f8 01       	movw	r30, r16
    a168:	80 81       	ld	r24, Z
    a16a:	85 56       	subi	r24, 0x65	; 101
    a16c:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a170:	80 81       	ld	r24, Z
    a172:	90 e0       	ldi	r25, 0x00	; 0
    a174:	85 56       	subi	r24, 0x65	; 101
    a176:	91 09       	sbc	r25, r1
    a178:	38 9f       	mul	r19, r24
    a17a:	f0 01       	movw	r30, r0
    a17c:	39 9f       	mul	r19, r25
    a17e:	f0 0d       	add	r31, r0
    a180:	11 24       	eor	r1, r1
    a182:	e8 51       	subi	r30, 0x18	; 24
    a184:	f2 4f       	sbci	r31, 0xF2	; 242
    a186:	82 e0       	ldi	r24, 0x02	; 2
    a188:	82 8f       	std	Z+26, r24	; 0x1a
			
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    a18a:	f8 01       	movw	r30, r16
    a18c:	80 81       	ld	r24, Z
    a18e:	90 e0       	ldi	r25, 0x00	; 0
    a190:	85 56       	subi	r24, 0x65	; 101
    a192:	91 09       	sbc	r25, r1
    a194:	38 9f       	mul	r19, r24
    a196:	f0 01       	movw	r30, r0
    a198:	39 9f       	mul	r19, r25
    a19a:	f0 0d       	add	r31, r0
    a19c:	11 24       	eor	r1, r1
    a19e:	e8 51       	subi	r30, 0x18	; 24
    a1a0:	f2 4f       	sbci	r31, 0xF2	; 242
    a1a2:	85 e0       	ldi	r24, 0x05	; 5
    a1a4:	82 83       	std	Z+2, r24	; 0x02
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a1a6:	21 30       	cpi	r18, 0x01	; 1
    a1a8:	09 f0       	breq	.+2      	; 0xa1ac <_Z22Fertilizer_Tank_On_Offhh+0x59e>
    a1aa:	a1 cf       	rjmp	.-190    	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
			{
				_kSERAIL_MON_WRITE("tank to send schedule Off 0 : ");
    a1ac:	64 ef       	ldi	r22, 0xF4	; 244
    a1ae:	70 e1       	ldi	r23, 0x10	; 16
    a1b0:	86 ec       	ldi	r24, 0xC6	; 198
    a1b2:	94 e1       	ldi	r25, 0x14	; 20
    a1b4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a1b8:	f8 01       	movw	r30, r16
    a1ba:	60 81       	ld	r22, Z
    a1bc:	70 e0       	ldi	r23, 0x00	; 0
    a1be:	65 56       	subi	r22, 0x65	; 101
    a1c0:	71 09       	sbc	r23, r1
    a1c2:	4a e0       	ldi	r20, 0x0A	; 10
    a1c4:	50 e0       	ldi	r21, 0x00	; 0
    a1c6:	86 ec       	ldi	r24, 0xC6	; 198
    a1c8:	94 e1       	ldi	r25, 0x14	; 20
    a1ca:	0e 94 42 d6 	call	0x1ac84	; 0x1ac84 <_ZN5Print5printEii>
				_kSERIAL_MON_CLEAR();
    a1ce:	86 ec       	ldi	r24, 0xC6	; 198
    a1d0:	94 e1       	ldi	r25, 0x14	; 20
    a1d2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    a1d6:	6e cf       	rjmp	.-292    	; 0xa0b4 <_Z22Fertilizer_Tank_On_Offhh+0x4a6>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a1d8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a1dc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a1e0:	90 62       	ori	r25, 0x20	; 32
    a1e2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a1e6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a1ea:	4d 81       	ldd	r20, Y+5	; 0x05
    a1ec:	5e 81       	ldd	r21, Y+6	; 0x06
    a1ee:	46 58       	subi	r20, 0x86	; 134
    a1f0:	5f 4f       	sbci	r21, 0xFF	; 255
    a1f2:	5a 83       	std	Y+2, r21	; 0x02
    a1f4:	49 83       	std	Y+1, r20	; 0x01
    a1f6:	fa 01       	movw	r30, r20
    a1f8:	80 81       	ld	r24, Z
    a1fa:	85 56       	subi	r24, 0x65	; 101
    a1fc:	80 93 72 14 	sts	0x1472, r24	; 0x801472 <_sRuble_Parameters+0xc4>
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a200:	80 81       	ld	r24, Z
    a202:	90 e0       	ldi	r25, 0x00	; 0
    a204:	85 56       	subi	r24, 0x65	; 101
    a206:	91 09       	sbc	r25, r1
    a208:	3b e1       	ldi	r19, 0x1B	; 27
    a20a:	38 9f       	mul	r19, r24
    a20c:	f0 01       	movw	r30, r0
    a20e:	39 9f       	mul	r19, r25
    a210:	f0 0d       	add	r31, r0
    a212:	11 24       	eor	r1, r1
    a214:	e8 51       	subi	r30, 0x18	; 24
    a216:	f2 4f       	sbci	r31, 0xF2	; 242
    a218:	82 e0       	ldi	r24, 0x02	; 2
    a21a:	82 8f       	std	Z+26, r24	; 0x1a
		
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    a21c:	fa 01       	movw	r30, r20
    a21e:	80 81       	ld	r24, Z
    a220:	90 e0       	ldi	r25, 0x00	; 0
    a222:	85 56       	subi	r24, 0x65	; 101
    a224:	91 09       	sbc	r25, r1
    a226:	38 9f       	mul	r19, r24
    a228:	f0 01       	movw	r30, r0
    a22a:	39 9f       	mul	r19, r25
    a22c:	f0 0d       	add	r31, r0
    a22e:	11 24       	eor	r1, r1
    a230:	e8 51       	subi	r30, 0x18	; 24
    a232:	f2 4f       	sbci	r31, 0xF2	; 242
    a234:	84 e0       	ldi	r24, 0x04	; 4
    a236:	82 83       	std	Z+2, r24	; 0x02
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a238:	21 30       	cpi	r18, 0x01	; 1
    a23a:	09 f0       	breq	.+2      	; 0xa23e <_Z22Fertilizer_Tank_On_Offhh+0x630>
    a23c:	58 cf       	rjmp	.-336    	; 0xa0ee <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
    a23e:	69 eb       	ldi	r22, 0xB9	; 185
    a240:	70 e1       	ldi	r23, 0x10	; 16
    a242:	86 ec       	ldi	r24, 0xC6	; 198
    a244:	94 e1       	ldi	r25, 0x14	; 20
    a246:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a24a:	e9 81       	ldd	r30, Y+1	; 0x01
    a24c:	fa 81       	ldd	r31, Y+2	; 0x02
    a24e:	41 cf       	rjmp	.-382    	; 0xa0d2 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    a250:	76 2e       	mov	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    a252:	f3 e0       	ldi	r31, 0x03	; 3
    a254:	8f 2e       	mov	r8, r31
    a256:	af cd       	rjmp	.-1186   	; 0x9db6 <_Z22Fertilizer_Tank_On_Offhh+0x1a8>
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    a258:	77 24       	eor	r7, r7
    a25a:	73 94       	inc	r7
    a25c:	ac cd       	rjmp	.-1192   	; 0x9db6 <_Z22Fertilizer_Tank_On_Offhh+0x1a8>
    a25e:	16 2d       	mov	r17, r6
    a260:	29 ce       	rjmp	.-942    	; 0x9eb4 <_Z22Fertilizer_Tank_On_Offhh+0x2a6>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    a262:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    a266:	88 23       	and	r24, r24
    a268:	09 f4       	brne	.+2      	; 0xa26c <_Z22Fertilizer_Tank_On_Offhh+0x65e>
    a26a:	55 ce       	rjmp	.-854    	; 0x9f16 <_Z22Fertilizer_Tank_On_Offhh+0x308>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    a26c:	f1 01       	movw	r30, r2
    a26e:	01 90       	ld	r0, Z+
    a270:	00 20       	and	r0, r0
    a272:	e9 f7       	brne	.-6      	; 0xa26e <_Z22Fertilizer_Tank_On_Offhh+0x660>
    a274:	31 97       	sbiw	r30, 0x01	; 1
    a276:	af 01       	movw	r20, r30
    a278:	40 5d       	subi	r20, 0xD0	; 208
    a27a:	5f 40       	sbci	r21, 0x0F	; 15
    a27c:	21 e0       	ldi	r18, 0x01	; 1
    a27e:	60 ed       	ldi	r22, 0xD0	; 208
    a280:	7f e0       	ldi	r23, 0x0F	; 15
    a282:	82 e6       	ldi	r24, 0x62	; 98
    a284:	9f e0       	ldi	r25, 0x0F	; 15
    a286:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
    a28a:	45 ce       	rjmp	.-886    	; 0x9f16 <_Z22Fertilizer_Tank_On_Offhh+0x308>
					if(_kLORA_RECV_DATA())            /* check the received data */
					{
						
						if(Subscribed_data_check())
						{
							if(Seperate_Out_Sub_Data())
    a28c:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    a290:	88 23       	and	r24, r24
    a292:	09 f4       	brne	.+2      	; 0xa296 <_Z22Fertilizer_Tank_On_Offhh+0x688>
    a294:	60 ce       	rjmp	.-832    	; 0x9f56 <_Z22Fertilizer_Tank_On_Offhh+0x348>
							{
								//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    a296:	f1 01       	movw	r30, r2
    a298:	01 90       	ld	r0, Z+
    a29a:	00 20       	and	r0, r0
    a29c:	e9 f7       	brne	.-6      	; 0xa298 <_Z22Fertilizer_Tank_On_Offhh+0x68a>
    a29e:	31 97       	sbiw	r30, 0x01	; 1
    a2a0:	af 01       	movw	r20, r30
    a2a2:	40 5d       	subi	r20, 0xD0	; 208
    a2a4:	5f 40       	sbci	r21, 0x0F	; 15
    a2a6:	21 e0       	ldi	r18, 0x01	; 1
    a2a8:	60 ed       	ldi	r22, 0xD0	; 208
    a2aa:	7f e0       	ldi	r23, 0x0F	; 15
    a2ac:	82 e6       	ldi	r24, 0x62	; 98
    a2ae:	9f e0       	ldi	r25, 0x0F	; 15
    a2b0:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
    a2b4:	50 ce       	rjmp	.-864    	; 0x9f56 <_Z22Fertilizer_Tank_On_Offhh+0x348>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a2b6:	86 e0       	ldi	r24, 0x06	; 6
    a2b8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    a2bc:	84 e6       	ldi	r24, 0x64	; 100
    a2be:	90 e0       	ldi	r25, 0x00	; 0
    a2c0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a2c4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a2c8:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a2cc:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a2d0:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a2d4:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a2d8:	a0 62       	ori	r26, 0x20	; 32
    a2da:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a2de:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a2e2:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a2e6:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    a2ea:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a2ee:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a2f2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a2f6:	82 60       	ori	r24, 0x02	; 2
    a2f8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a2fc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a300:	00 e0       	ldi	r16, 0x00	; 0
    a302:	10 e0       	ldi	r17, 0x00	; 0
									{
										if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a304:	2d 81       	ldd	r18, Y+5	; 0x05
    a306:	3e 81       	ldd	r19, Y+6	; 0x06
    a308:	26 58       	subi	r18, 0x86	; 134
    a30a:	3f 4f       	sbci	r19, 0xFF	; 255
    a30c:	3a 83       	std	Y+2, r19	; 0x02
    a30e:	29 83       	std	Y+1, r18	; 0x01
    a310:	3b e1       	ldi	r19, 0x1B	; 27
    a312:	f3 2e       	mov	r15, r19
    a314:	e9 81       	ldd	r30, Y+1	; 0x01
    a316:	fa 81       	ldd	r31, Y+2	; 0x02
    a318:	80 81       	ld	r24, Z
    a31a:	90 e0       	ldi	r25, 0x00	; 0
    a31c:	85 56       	subi	r24, 0x65	; 101
    a31e:	91 09       	sbc	r25, r1
    a320:	f8 9e       	mul	r15, r24
    a322:	f0 01       	movw	r30, r0
    a324:	f9 9e       	mul	r15, r25
    a326:	f0 0d       	add	r31, r0
    a328:	11 24       	eor	r1, r1
    a32a:	e8 51       	subi	r30, 0x18	; 24
    a32c:	f2 4f       	sbci	r31, 0xF2	; 242
    a32e:	e0 0f       	add	r30, r16
    a330:	f1 1f       	adc	r31, r17
    a332:	85 81       	ldd	r24, Z+5	; 0x05
    a334:	83 31       	cpi	r24, 0x13	; 19
    a336:	e8 f0       	brcs	.+58     	; 0xa372 <_Z22Fertilizer_Tank_On_Offhh+0x764>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a338:	e9 81       	ldd	r30, Y+1	; 0x01
    a33a:	fa 81       	ldd	r31, Y+2	; 0x02
    a33c:	80 81       	ld	r24, Z
    a33e:	90 e0       	ldi	r25, 0x00	; 0
    a340:	85 56       	subi	r24, 0x65	; 101
    a342:	91 09       	sbc	r25, r1
    a344:	f8 9e       	mul	r15, r24
    a346:	f0 01       	movw	r30, r0
    a348:	f9 9e       	mul	r15, r25
    a34a:	f0 0d       	add	r31, r0
    a34c:	11 24       	eor	r1, r1
    a34e:	e8 51       	subi	r30, 0x18	; 24
    a350:	f2 4f       	sbci	r31, 0xF2	; 242
    a352:	e0 0f       	add	r30, r16
    a354:	f1 1f       	adc	r31, r17
    a356:	e5 81       	ldd	r30, Z+5	; 0x05
    a358:	f0 e0       	ldi	r31, 0x00	; 0
    a35a:	e7 5c       	subi	r30, 0xC7	; 199
    a35c:	fb 4e       	sbci	r31, 0xEB	; 235
    a35e:	61 e0       	ldi	r22, 0x01	; 1
    a360:	80 81       	ld	r24, Z
    a362:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
											_kDELAY_MS(200);
    a366:	68 ec       	ldi	r22, 0xC8	; 200
    a368:	70 e0       	ldi	r23, 0x00	; 0
    a36a:	80 e0       	ldi	r24, 0x00	; 0
    a36c:	90 e0       	ldi	r25, 0x00	; 0
    a36e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a372:	0f 5f       	subi	r16, 0xFF	; 255
    a374:	1f 4f       	sbci	r17, 0xFF	; 255
    a376:	05 30       	cpi	r16, 0x05	; 5
    a378:	11 05       	cpc	r17, r1
    a37a:	61 f6       	brne	.-104    	; 0xa314 <_Z22Fertilizer_Tank_On_Offhh+0x706>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    a37c:	80 e0       	ldi	r24, 0x00	; 0
    a37e:	65 c1       	rjmp	.+714    	; 0xa64a <_Z22Fertilizer_Tank_On_Offhh+0xa3c>
    a380:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    a382:	86 30       	cpi	r24, 0x06	; 6
    a384:	91 05       	cpc	r25, r1
    a386:	09 f0       	breq	.+2      	; 0xa38a <_Z22Fertilizer_Tank_On_Offhh+0x77c>
    a388:	19 ce       	rjmp	.-974    	; 0x9fbc <_Z22Fertilizer_Tank_On_Offhh+0x3ae>
    a38a:	34 ce       	rjmp	.-920    	; 0x9ff4 <_Z22Fertilizer_Tank_On_Offhh+0x3e6>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    a38c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a390:	81 30       	cpi	r24, 0x01	; 1
    a392:	51 f4       	brne	.+20     	; 0xa3a8 <_Z22Fertilizer_Tank_On_Offhh+0x79a>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    a394:	68 ea       	ldi	r22, 0xA8	; 168
    a396:	71 e1       	ldi	r23, 0x11	; 17
    a398:	86 ec       	ldi	r24, 0xC6	; 198
    a39a:	94 e1       	ldi	r25, 0x14	; 20
    a39c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    a3a0:	86 ec       	ldi	r24, 0xC6	; 198
    a3a2:	94 e1       	ldi	r25, 0x14	; 20
    a3a4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a3a8:	f2 e0       	ldi	r31, 0x02	; 2
    a3aa:	8f 12       	cpse	r8, r31
    a3ac:	39 ce       	rjmp	.-910    	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x412>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a3ae:	86 e0       	ldi	r24, 0x06	; 6
    a3b0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    a3b4:	84 e6       	ldi	r24, 0x64	; 100
    a3b6:	90 e0       	ldi	r25, 0x00	; 0
    a3b8:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a3bc:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a3c0:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a3c4:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a3c8:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a3cc:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a3d0:	a0 62       	ori	r26, 0x20	; 32
    a3d2:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a3d6:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a3da:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a3de:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    a3e2:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a3e6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a3ea:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a3ee:	82 60       	ori	r24, 0x02	; 2
    a3f0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a3f4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a3f8:	00 e0       	ldi	r16, 0x00	; 0
    a3fa:	10 e0       	ldi	r17, 0x00	; 0
								{
									if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a3fc:	2d 81       	ldd	r18, Y+5	; 0x05
    a3fe:	3e 81       	ldd	r19, Y+6	; 0x06
    a400:	26 58       	subi	r18, 0x86	; 134
    a402:	3f 4f       	sbci	r19, 0xFF	; 255
    a404:	3a 83       	std	Y+2, r19	; 0x02
    a406:	29 83       	std	Y+1, r18	; 0x01
    a408:	2b e1       	ldi	r18, 0x1B	; 27
    a40a:	f2 2e       	mov	r15, r18
    a40c:	e9 81       	ldd	r30, Y+1	; 0x01
    a40e:	fa 81       	ldd	r31, Y+2	; 0x02
    a410:	80 81       	ld	r24, Z
    a412:	90 e0       	ldi	r25, 0x00	; 0
    a414:	85 56       	subi	r24, 0x65	; 101
    a416:	91 09       	sbc	r25, r1
    a418:	f8 9e       	mul	r15, r24
    a41a:	f0 01       	movw	r30, r0
    a41c:	f9 9e       	mul	r15, r25
    a41e:	f0 0d       	add	r31, r0
    a420:	11 24       	eor	r1, r1
    a422:	e8 51       	subi	r30, 0x18	; 24
    a424:	f2 4f       	sbci	r31, 0xF2	; 242
    a426:	e0 0f       	add	r30, r16
    a428:	f1 1f       	adc	r31, r17
    a42a:	85 81       	ldd	r24, Z+5	; 0x05
    a42c:	83 31       	cpi	r24, 0x13	; 19
    a42e:	e8 f0       	brcs	.+58     	; 0xa46a <_Z22Fertilizer_Tank_On_Offhh+0x85c>
									{
										/********************************* turn on/off the wired valve *********************************/
										
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a430:	e9 81       	ldd	r30, Y+1	; 0x01
    a432:	fa 81       	ldd	r31, Y+2	; 0x02
    a434:	80 81       	ld	r24, Z
    a436:	90 e0       	ldi	r25, 0x00	; 0
    a438:	85 56       	subi	r24, 0x65	; 101
    a43a:	91 09       	sbc	r25, r1
    a43c:	f8 9e       	mul	r15, r24
    a43e:	f0 01       	movw	r30, r0
    a440:	f9 9e       	mul	r15, r25
    a442:	f0 0d       	add	r31, r0
    a444:	11 24       	eor	r1, r1
    a446:	e8 51       	subi	r30, 0x18	; 24
    a448:	f2 4f       	sbci	r31, 0xF2	; 242
    a44a:	e0 0f       	add	r30, r16
    a44c:	f1 1f       	adc	r31, r17
    a44e:	e5 81       	ldd	r30, Z+5	; 0x05
    a450:	f0 e0       	ldi	r31, 0x00	; 0
    a452:	e7 5c       	subi	r30, 0xC7	; 199
    a454:	fb 4e       	sbci	r31, 0xEB	; 235
    a456:	61 e0       	ldi	r22, 0x01	; 1
    a458:	80 81       	ld	r24, Z
    a45a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
										_kDELAY_MS(200);
    a45e:	68 ec       	ldi	r22, 0xC8	; 200
    a460:	70 e0       	ldi	r23, 0x00	; 0
    a462:	80 e0       	ldi	r24, 0x00	; 0
    a464:	90 e0       	ldi	r25, 0x00	; 0
    a466:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a46a:	0f 5f       	subi	r16, 0xFF	; 255
    a46c:	1f 4f       	sbci	r17, 0xFF	; 255
    a46e:	05 30       	cpi	r16, 0x05	; 5
    a470:	11 05       	cpc	r17, r1
    a472:	61 f6       	brne	.-104    	; 0xa40c <_Z22Fertilizer_Tank_On_Offhh+0x7fe>
    a474:	83 cf       	rjmp	.-250    	; 0xa37c <_Z22Fertilizer_Tank_On_Offhh+0x76e>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    a476:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a47a:	81 30       	cpi	r24, 0x01	; 1
    a47c:	51 f4       	brne	.+20     	; 0xa492 <_Z22Fertilizer_Tank_On_Offhh+0x884>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    a47e:	6d e6       	ldi	r22, 0x6D	; 109
    a480:	71 e1       	ldi	r23, 0x11	; 17
    a482:	86 ec       	ldi	r24, 0xC6	; 198
    a484:	94 e1       	ldi	r25, 0x14	; 20
    a486:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    a48a:	86 ec       	ldi	r24, 0xC6	; 198
    a48c:	94 e1       	ldi	r25, 0x14	; 20
    a48e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    a492:	f2 e0       	ldi	r31, 0x02	; 2
    a494:	8f 12       	cpse	r8, r31
    a496:	c4 cd       	rjmp	.-1144   	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x412>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a498:	86 e0       	ldi	r24, 0x06	; 6
    a49a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    a49e:	84 e6       	ldi	r24, 0x64	; 100
    a4a0:	90 e0       	ldi	r25, 0x00	; 0
    a4a2:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a4a6:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a4aa:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a4ae:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a4b2:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a4b6:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a4ba:	a0 62       	ori	r26, 0x20	; 32
    a4bc:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a4c0:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a4c4:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a4c8:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    a4cc:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a4d0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a4d4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a4d8:	82 60       	ori	r24, 0x02	; 2
    a4da:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a4de:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a4e2:	00 e0       	ldi	r16, 0x00	; 0
    a4e4:	10 e0       	ldi	r17, 0x00	; 0
							{
								if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a4e6:	2d 81       	ldd	r18, Y+5	; 0x05
    a4e8:	3e 81       	ldd	r19, Y+6	; 0x06
    a4ea:	26 58       	subi	r18, 0x86	; 134
    a4ec:	3f 4f       	sbci	r19, 0xFF	; 255
    a4ee:	3a 83       	std	Y+2, r19	; 0x02
    a4f0:	29 83       	std	Y+1, r18	; 0x01
    a4f2:	9b e1       	ldi	r25, 0x1B	; 27
    a4f4:	f9 2e       	mov	r15, r25
    a4f6:	e9 81       	ldd	r30, Y+1	; 0x01
    a4f8:	fa 81       	ldd	r31, Y+2	; 0x02
    a4fa:	80 81       	ld	r24, Z
    a4fc:	90 e0       	ldi	r25, 0x00	; 0
    a4fe:	85 56       	subi	r24, 0x65	; 101
    a500:	91 09       	sbc	r25, r1
    a502:	f8 9e       	mul	r15, r24
    a504:	f0 01       	movw	r30, r0
    a506:	f9 9e       	mul	r15, r25
    a508:	f0 0d       	add	r31, r0
    a50a:	11 24       	eor	r1, r1
    a50c:	e8 51       	subi	r30, 0x18	; 24
    a50e:	f2 4f       	sbci	r31, 0xF2	; 242
    a510:	e0 0f       	add	r30, r16
    a512:	f1 1f       	adc	r31, r17
    a514:	85 81       	ldd	r24, Z+5	; 0x05
    a516:	83 31       	cpi	r24, 0x13	; 19
    a518:	e8 f0       	brcs	.+58     	; 0xa554 <_Z22Fertilizer_Tank_On_Offhh+0x946>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a51a:	e9 81       	ldd	r30, Y+1	; 0x01
    a51c:	fa 81       	ldd	r31, Y+2	; 0x02
    a51e:	80 81       	ld	r24, Z
    a520:	90 e0       	ldi	r25, 0x00	; 0
    a522:	85 56       	subi	r24, 0x65	; 101
    a524:	91 09       	sbc	r25, r1
    a526:	f8 9e       	mul	r15, r24
    a528:	f0 01       	movw	r30, r0
    a52a:	f9 9e       	mul	r15, r25
    a52c:	f0 0d       	add	r31, r0
    a52e:	11 24       	eor	r1, r1
    a530:	e8 51       	subi	r30, 0x18	; 24
    a532:	f2 4f       	sbci	r31, 0xF2	; 242
    a534:	e0 0f       	add	r30, r16
    a536:	f1 1f       	adc	r31, r17
    a538:	e5 81       	ldd	r30, Z+5	; 0x05
    a53a:	f0 e0       	ldi	r31, 0x00	; 0
    a53c:	e7 5c       	subi	r30, 0xC7	; 199
    a53e:	fb 4e       	sbci	r31, 0xEB	; 235
    a540:	61 e0       	ldi	r22, 0x01	; 1
    a542:	80 81       	ld	r24, Z
    a544:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
									_kDELAY_MS(200);
    a548:	68 ec       	ldi	r22, 0xC8	; 200
    a54a:	70 e0       	ldi	r23, 0x00	; 0
    a54c:	80 e0       	ldi	r24, 0x00	; 0
    a54e:	90 e0       	ldi	r25, 0x00	; 0
    a550:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a554:	0f 5f       	subi	r16, 0xFF	; 255
    a556:	1f 4f       	sbci	r17, 0xFF	; 255
    a558:	05 30       	cpi	r16, 0x05	; 5
    a55a:	11 05       	cpc	r17, r1
    a55c:	61 f6       	brne	.-104    	; 0xa4f6 <_Z22Fertilizer_Tank_On_Offhh+0x8e8>
    a55e:	0e cf       	rjmp	.-484    	; 0xa37c <_Z22Fertilizer_Tank_On_Offhh+0x76e>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a560:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a564:	81 30       	cpi	r24, 0x01	; 1
    a566:	51 f4       	brne	.+20     	; 0xa57c <_Z22Fertilizer_Tank_On_Offhh+0x96e>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    a568:	62 e3       	ldi	r22, 0x32	; 50
    a56a:	71 e1       	ldi	r23, 0x11	; 17
    a56c:	86 ec       	ldi	r24, 0xC6	; 198
    a56e:	94 e1       	ldi	r25, 0x14	; 20
    a570:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a574:	86 ec       	ldi	r24, 0xC6	; 198
    a576:	94 e1       	ldi	r25, 0x14	; 20
    a578:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a57c:	f2 e0       	ldi	r31, 0x02	; 2
    a57e:	8f 12       	cpse	r8, r31
    a580:	4f cd       	rjmp	.-1378   	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x412>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a582:	86 e0       	ldi	r24, 0x06	; 6
    a584:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    a588:	84 e6       	ldi	r24, 0x64	; 100
    a58a:	90 e0       	ldi	r25, 0x00	; 0
    a58c:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    a590:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a594:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    a598:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    a59c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    a5a0:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    a5a4:	a0 62       	ori	r26, 0x20	; 32
    a5a6:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    a5aa:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    a5ae:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    a5b2:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    a5b6:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a5ba:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    a5be:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    a5c2:	82 60       	ori	r24, 0x02	; 2
    a5c4:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    a5c8:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a5cc:	00 e0       	ldi	r16, 0x00	; 0
    a5ce:	10 e0       	ldi	r17, 0x00	; 0
						{
							if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a5d0:	2d 81       	ldd	r18, Y+5	; 0x05
    a5d2:	3e 81       	ldd	r19, Y+6	; 0x06
    a5d4:	26 58       	subi	r18, 0x86	; 134
    a5d6:	3f 4f       	sbci	r19, 0xFF	; 255
    a5d8:	3a 83       	std	Y+2, r19	; 0x02
    a5da:	29 83       	std	Y+1, r18	; 0x01
    a5dc:	8b e1       	ldi	r24, 0x1B	; 27
    a5de:	f8 2e       	mov	r15, r24
    a5e0:	e9 81       	ldd	r30, Y+1	; 0x01
    a5e2:	fa 81       	ldd	r31, Y+2	; 0x02
    a5e4:	80 81       	ld	r24, Z
    a5e6:	90 e0       	ldi	r25, 0x00	; 0
    a5e8:	85 56       	subi	r24, 0x65	; 101
    a5ea:	91 09       	sbc	r25, r1
    a5ec:	f8 9e       	mul	r15, r24
    a5ee:	f0 01       	movw	r30, r0
    a5f0:	f9 9e       	mul	r15, r25
    a5f2:	f0 0d       	add	r31, r0
    a5f4:	11 24       	eor	r1, r1
    a5f6:	e8 51       	subi	r30, 0x18	; 24
    a5f8:	f2 4f       	sbci	r31, 0xF2	; 242
    a5fa:	e0 0f       	add	r30, r16
    a5fc:	f1 1f       	adc	r31, r17
    a5fe:	85 81       	ldd	r24, Z+5	; 0x05
    a600:	83 31       	cpi	r24, 0x13	; 19
    a602:	e8 f0       	brcs	.+58     	; 0xa63e <_Z22Fertilizer_Tank_On_Offhh+0xa30>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a604:	e9 81       	ldd	r30, Y+1	; 0x01
    a606:	fa 81       	ldd	r31, Y+2	; 0x02
    a608:	80 81       	ld	r24, Z
    a60a:	90 e0       	ldi	r25, 0x00	; 0
    a60c:	85 56       	subi	r24, 0x65	; 101
    a60e:	91 09       	sbc	r25, r1
    a610:	f8 9e       	mul	r15, r24
    a612:	f0 01       	movw	r30, r0
    a614:	f9 9e       	mul	r15, r25
    a616:	f0 0d       	add	r31, r0
    a618:	11 24       	eor	r1, r1
    a61a:	e8 51       	subi	r30, 0x18	; 24
    a61c:	f2 4f       	sbci	r31, 0xF2	; 242
    a61e:	e0 0f       	add	r30, r16
    a620:	f1 1f       	adc	r31, r17
    a622:	e5 81       	ldd	r30, Z+5	; 0x05
    a624:	f0 e0       	ldi	r31, 0x00	; 0
    a626:	e7 5c       	subi	r30, 0xC7	; 199
    a628:	fb 4e       	sbci	r31, 0xEB	; 235
    a62a:	61 e0       	ldi	r22, 0x01	; 1
    a62c:	80 81       	ld	r24, Z
    a62e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
								_kDELAY_MS(200);
    a632:	68 ec       	ldi	r22, 0xC8	; 200
    a634:	70 e0       	ldi	r23, 0x00	; 0
    a636:	80 e0       	ldi	r24, 0x00	; 0
    a638:	90 e0       	ldi	r25, 0x00	; 0
    a63a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a63e:	0f 5f       	subi	r16, 0xFF	; 255
    a640:	1f 4f       	sbci	r17, 0xFF	; 255
    a642:	05 30       	cpi	r16, 0x05	; 5
    a644:	11 05       	cpc	r17, r1
    a646:	61 f6       	brne	.-104    	; 0xa5e0 <_Z22Fertilizer_Tank_On_Offhh+0x9d2>
    a648:	99 ce       	rjmp	.-718    	; 0xa37c <_Z22Fertilizer_Tank_On_Offhh+0x76e>
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
}
    a64a:	26 96       	adiw	r28, 0x06	; 6
    a64c:	0f b6       	in	r0, 0x3f	; 63
    a64e:	f8 94       	cli
    a650:	de bf       	out	0x3e, r29	; 62
    a652:	0f be       	out	0x3f, r0	; 63
    a654:	cd bf       	out	0x3d, r28	; 61
    a656:	df 91       	pop	r29
    a658:	cf 91       	pop	r28
    a65a:	1f 91       	pop	r17
    a65c:	0f 91       	pop	r16
    a65e:	ff 90       	pop	r15
    a660:	ef 90       	pop	r14
    a662:	df 90       	pop	r13
    a664:	cf 90       	pop	r12
    a666:	bf 90       	pop	r11
    a668:	af 90       	pop	r10
    a66a:	9f 90       	pop	r9
    a66c:	8f 90       	pop	r8
    a66e:	7f 90       	pop	r7
    a670:	6f 90       	pop	r6
    a672:	5f 90       	pop	r5
    a674:	4f 90       	pop	r4
    a676:	3f 90       	pop	r3
    a678:	2f 90       	pop	r2
    a67a:	08 95       	ret

0000a67c <_Z26Fertilizer_Tank_Monitoringv>:
	}
	
}					

void Fertilizer_Tank_Monitoring(void)
{
    a67c:	af 92       	push	r10
    a67e:	bf 92       	push	r11
    a680:	df 92       	push	r13
    a682:	ef 92       	push	r14
    a684:	ff 92       	push	r15
    a686:	0f 93       	push	r16
    a688:	1f 93       	push	r17
    a68a:	cf 93       	push	r28
    a68c:	df 93       	push	r29
	unsigned char tank_number;
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    a68e:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    a692:	81 30       	cpi	r24, 0x01	; 1
    a694:	29 f5       	brne	.+74     	; 0xa6e0 <_Z26Fertilizer_Tank_Monitoringv+0x64>
	{	
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a696:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a69a:	81 30       	cpi	r24, 0x01	; 1
    a69c:	31 f4       	brne	.+12     	; 0xa6aa <_Z26Fertilizer_Tank_Monitoringv+0x2e>
		{
			_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring : ");
    a69e:	6d ee       	ldi	r22, 0xED	; 237
    a6a0:	72 e1       	ldi	r23, 0x12	; 18
    a6a2:	86 ec       	ldi	r24, 0xC6	; 198
    a6a4:	94 e1       	ldi	r25, 0x14	; 20
    a6a6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    a6aa:	80 91 ea 0d 	lds	r24, 0x0DEA	; 0x800dea <_sExtra_Plot+0x2>
    a6ae:	84 30       	cpi	r24, 0x04	; 4
    a6b0:	09 f0       	breq	.+2      	; 0xa6b4 <_Z26Fertilizer_Tank_Monitoringv+0x38>
    a6b2:	46 c1       	rjmp	.+652    	; 0xa940 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a6b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a6b8:	81 30       	cpi	r24, 0x01	; 1
    a6ba:	31 f4       	brne	.+12     	; 0xa6c8 <_Z26Fertilizer_Tank_Monitoringv+0x4c>
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
    a6bc:	6d ec       	ldi	r22, 0xCD	; 205
    a6be:	72 e1       	ldi	r23, 0x12	; 18
    a6c0:	86 ec       	ldi	r24, 0xC6	; 198
    a6c2:	94 e1       	ldi	r25, 0x14	; 20
    a6c4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a6c8:	83 e0       	ldi	r24, 0x03	; 3
					}
				}
			}
		}
	}
}
    a6ca:	df 91       	pop	r29
    a6cc:	cf 91       	pop	r28
    a6ce:	1f 91       	pop	r17
    a6d0:	0f 91       	pop	r16
    a6d2:	ff 90       	pop	r15
    a6d4:	ef 90       	pop	r14
    a6d6:	df 90       	pop	r13
    a6d8:	bf 90       	pop	r11
    a6da:	af 90       	pop	r10
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a6dc:	0c 94 5c 4a 	jmp	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
    a6e0:	c0 e0       	ldi	r28, 0x00	; 0
    a6e2:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a6e4:	3b e1       	ldi	r19, 0x1B	; 27
    a6e6:	f3 2e       	mov	r15, r19
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a6e8:	48 e7       	ldi	r20, 0x78	; 120
    a6ea:	d4 2e       	mov	r13, r20
    a6ec:	ec 2e       	mov	r14, r28
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
    a6ee:	8e 01       	movw	r16, r28
    a6f0:	02 5e       	subi	r16, 0xE2	; 226
    a6f2:	16 4f       	sbci	r17, 0xF6	; 246
    a6f4:	f8 01       	movw	r30, r16
    a6f6:	ed 5a       	subi	r30, 0xAD	; 173
    a6f8:	fd 4f       	sbci	r31, 0xFD	; 253
    a6fa:	80 81       	ld	r24, Z
    a6fc:	81 11       	cpse	r24, r1
    a6fe:	7a c0       	rjmp	.+244    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
    a700:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a704:	90 e0       	ldi	r25, 0x00	; 0
    a706:	01 97       	sbiw	r24, 0x01	; 1
    a708:	fc 01       	movw	r30, r24
    a70a:	ee 0f       	add	r30, r30
    a70c:	ff 1f       	adc	r31, r31
    a70e:	e8 0f       	add	r30, r24
    a710:	f9 1f       	adc	r31, r25
    a712:	ec 0f       	add	r30, r28
    a714:	fd 1f       	adc	r31, r29
    a716:	e1 59       	subi	r30, 0x91	; 145
    a718:	f5 4f       	sbci	r31, 0xF5	; 245
    a71a:	80 81       	ld	r24, Z
    a71c:	81 30       	cpi	r24, 0x01	; 1
    a71e:	09 f0       	breq	.+2      	; 0xa722 <_Z26Fertilizer_Tank_Monitoringv+0xa6>
    a720:	69 c0       	rjmp	.+210    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a722:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a726:	90 e0       	ldi	r25, 0x00	; 0
    a728:	01 97       	sbiw	r24, 0x01	; 1
    a72a:	fc 01       	movw	r30, r24
    a72c:	ee 0f       	add	r30, r30
    a72e:	ff 1f       	adc	r31, r31
    a730:	e8 0f       	add	r30, r24
    a732:	f9 1f       	adc	r31, r25
    a734:	ec 0f       	add	r30, r28
    a736:	fd 1f       	adc	r31, r29
    a738:	e8 56       	subi	r30, 0x68	; 104
    a73a:	f6 4f       	sbci	r31, 0xF6	; 246
    a73c:	80 81       	ld	r24, Z
    a73e:	90 e0       	ldi	r25, 0x00	; 0
    a740:	85 56       	subi	r24, 0x65	; 101
    a742:	91 09       	sbc	r25, r1
    a744:	f8 9e       	mul	r15, r24
    a746:	f0 01       	movw	r30, r0
    a748:	f9 9e       	mul	r15, r25
    a74a:	f0 0d       	add	r31, r0
    a74c:	11 24       	eor	r1, r1
    a74e:	e8 51       	subi	r30, 0x18	; 24
    a750:	f2 4f       	sbci	r31, 0xF2	; 242
    a752:	81 81       	ldd	r24, Z+1	; 0x01
    a754:	88 23       	and	r24, r24
    a756:	09 f4       	brne	.+2      	; 0xa75a <_Z26Fertilizer_Tank_Monitoringv+0xde>
    a758:	4d c0       	rjmp	.+154    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
    a75a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a75e:	90 e0       	ldi	r25, 0x00	; 0
    a760:	01 97       	sbiw	r24, 0x01	; 1
    a762:	fc 01       	movw	r30, r24
    a764:	ee 0f       	add	r30, r30
    a766:	ff 1f       	adc	r31, r31
    a768:	e8 0f       	add	r30, r24
    a76a:	f9 1f       	adc	r31, r25
    a76c:	ec 0f       	add	r30, r28
    a76e:	fd 1f       	adc	r31, r29
    a770:	e8 56       	subi	r30, 0x68	; 104
    a772:	f6 4f       	sbci	r31, 0xF6	; 246
    a774:	80 81       	ld	r24, Z
    a776:	90 e0       	ldi	r25, 0x00	; 0
    a778:	85 56       	subi	r24, 0x65	; 101
    a77a:	91 09       	sbc	r25, r1
    a77c:	f8 9e       	mul	r15, r24
    a77e:	f0 01       	movw	r30, r0
    a780:	f9 9e       	mul	r15, r25
    a782:	f0 0d       	add	r31, r0
    a784:	11 24       	eor	r1, r1
    a786:	e8 51       	subi	r30, 0x18	; 24
    a788:	f2 4f       	sbci	r31, 0xF2	; 242
    a78a:	81 81       	ldd	r24, Z+1	; 0x01
    a78c:	85 36       	cpi	r24, 0x65	; 101
    a78e:	90 f1       	brcs	.+100    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
				{
					/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 1: ");*/
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    a790:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a794:	90 e0       	ldi	r25, 0x00	; 0
    a796:	01 97       	sbiw	r24, 0x01	; 1
    a798:	fc 01       	movw	r30, r24
    a79a:	ee 0f       	add	r30, r30
    a79c:	ff 1f       	adc	r31, r31
    a79e:	e8 0f       	add	r30, r24
    a7a0:	f9 1f       	adc	r31, r25
    a7a2:	ec 0f       	add	r30, r28
    a7a4:	fd 1f       	adc	r31, r29
    a7a6:	e8 56       	subi	r30, 0x68	; 104
    a7a8:	f6 4f       	sbci	r31, 0xF6	; 246
    a7aa:	80 81       	ld	r24, Z
    a7ac:	90 e0       	ldi	r25, 0x00	; 0
    a7ae:	85 56       	subi	r24, 0x65	; 101
    a7b0:	91 09       	sbc	r25, r1
    a7b2:	f8 9e       	mul	r15, r24
    a7b4:	f0 01       	movw	r30, r0
    a7b6:	f9 9e       	mul	r15, r25
    a7b8:	f0 0d       	add	r31, r0
    a7ba:	11 24       	eor	r1, r1
    a7bc:	e8 51       	subi	r30, 0x18	; 24
    a7be:	f2 4f       	sbci	r31, 0xF2	; 242
    a7c0:	80 81       	ld	r24, Z
    a7c2:	81 11       	cpse	r24, r1
    a7c4:	17 c0       	rjmp	.+46     	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a7c6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a7ca:	90 e0       	ldi	r25, 0x00	; 0
    a7cc:	01 97       	sbiw	r24, 0x01	; 1
    a7ce:	fc 01       	movw	r30, r24
    a7d0:	ee 0f       	add	r30, r30
    a7d2:	ff 1f       	adc	r31, r31
    a7d4:	e8 0f       	add	r30, r24
    a7d6:	f9 1f       	adc	r31, r25
    a7d8:	ec 0f       	add	r30, r28
    a7da:	fd 1f       	adc	r31, r29
    a7dc:	ee 0f       	add	r30, r30
    a7de:	ff 1f       	adc	r31, r31
    a7e0:	e5 5e       	subi	r30, 0xE5	; 229
    a7e2:	f4 4f       	sbci	r31, 0xF4	; 244
    a7e4:	20 81       	ld	r18, Z
    a7e6:	31 81       	ldd	r19, Z+1	; 0x01
    a7e8:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a7ec:	90 e0       	ldi	r25, 0x00	; 0
    a7ee:	28 17       	cp	r18, r24
    a7f0:	39 07       	cpc	r19, r25
    a7f2:	31 f4       	brne	.+12     	; 0xa800 <_Z26Fertilizer_Tank_Monitoringv+0x184>
    a7f4:	21 96       	adiw	r28, 0x01	; 1
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
		}
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    a7f6:	c3 30       	cpi	r28, 0x03	; 3
    a7f8:	d1 05       	cpc	r29, r1
    a7fa:	09 f0       	breq	.+2      	; 0xa7fe <_Z26Fertilizer_Tank_Monitoringv+0x182>
    a7fc:	77 cf       	rjmp	.-274    	; 0xa6ec <_Z26Fertilizer_Tank_Monitoringv+0x70>
    a7fe:	a0 c0       	rjmp	.+320    	; 0xa940 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
						{	
							/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 3: ");*/
							if(_sSchedules.Running_Tank[tank_number] == _kON)
    a800:	58 01       	movw	r10, r16
    a802:	80 ea       	ldi	r24, 0xA0	; 160
    a804:	a8 1a       	sub	r10, r24
    a806:	8d ef       	ldi	r24, 0xFD	; 253
    a808:	b8 0a       	sbc	r11, r24
    a80a:	f5 01       	movw	r30, r10
    a80c:	80 81       	ld	r24, Z
    a80e:	81 30       	cpi	r24, 0x01	; 1
    a810:	09 f0       	breq	.+2      	; 0xa814 <_Z26Fertilizer_Tank_Monitoringv+0x198>
    a812:	45 c0       	rjmp	.+138    	; 0xa89e <_Z26Fertilizer_Tank_Monitoringv+0x222>
							{
								Doser_Pump_On_Off(_kON);
    a814:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
								/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 4: ");*/
								if(_sSchedules.Tank_Running_Timer[tank_number] > _sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a818:	8e 01       	movw	r16, r28
    a81a:	00 0f       	add	r16, r16
    a81c:	11 1f       	adc	r17, r17
    a81e:	0e 57       	subi	r16, 0x7E	; 126
    a820:	14 4f       	sbci	r17, 0xF4	; 244
    a822:	f8 01       	movw	r30, r16
    a824:	20 81       	ld	r18, Z
    a826:	31 81       	ldd	r19, Z+1	; 0x01
    a828:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a82c:	90 e0       	ldi	r25, 0x00	; 0
    a82e:	01 97       	sbiw	r24, 0x01	; 1
    a830:	fc 01       	movw	r30, r24
    a832:	ee 0f       	add	r30, r30
    a834:	ff 1f       	adc	r31, r31
    a836:	e8 0f       	add	r30, r24
    a838:	f9 1f       	adc	r31, r25
    a83a:	ec 0f       	add	r30, r28
    a83c:	fd 1f       	adc	r31, r29
    a83e:	ee 0f       	add	r30, r30
    a840:	ff 1f       	adc	r31, r31
    a842:	e7 5e       	subi	r30, 0xE7	; 231
    a844:	f5 4f       	sbci	r31, 0xF5	; 245
    a846:	80 81       	ld	r24, Z
    a848:	91 81       	ldd	r25, Z+1	; 0x01
    a84a:	82 17       	cp	r24, r18
    a84c:	93 07       	cpc	r25, r19
    a84e:	90 f6       	brcc	.-92     	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									/* stop tank schedule */
									Doser_Pump_On_Off(_kOFF);
    a850:	80 e0       	ldi	r24, 0x00	; 0
    a852:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
									_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    a856:	f8 01       	movw	r30, r16
    a858:	11 82       	std	Z+1, r1	; 0x01
    a85a:	10 82       	st	Z, r1
									_sSchedules.Running_Tank[tank_number] = _kOFF;
    a85c:	f5 01       	movw	r30, r10
    a85e:	10 82       	st	Z, r1
									//_sSchedules.Already_Fertilze_Status[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
									_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;	
    a860:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a864:	90 e0       	ldi	r25, 0x00	; 0
    a866:	01 97       	sbiw	r24, 0x01	; 1
    a868:	fc 01       	movw	r30, r24
    a86a:	ee 0f       	add	r30, r30
    a86c:	ff 1f       	adc	r31, r31
    a86e:	e8 0f       	add	r30, r24
    a870:	f9 1f       	adc	r31, r25
    a872:	ec 0f       	add	r30, r28
    a874:	fd 1f       	adc	r31, r29
    a876:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a87a:	90 e0       	ldi	r25, 0x00	; 0
    a87c:	ee 0f       	add	r30, r30
    a87e:	ff 1f       	adc	r31, r31
    a880:	e5 5e       	subi	r30, 0xE5	; 229
    a882:	f4 4f       	sbci	r31, 0xF4	; 244
    a884:	91 83       	std	Z+1, r25	; 0x01
    a886:	80 83       	st	Z, r24
									Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kOFF);
    a888:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a88c:	90 e0       	ldi	r25, 0x00	; 0
    a88e:	01 97       	sbiw	r24, 0x01	; 1
    a890:	98 2f       	mov	r25, r24
    a892:	99 0f       	add	r25, r25
    a894:	89 0f       	add	r24, r25
    a896:	60 e0       	ldi	r22, 0x00	; 0
    a898:	8e 0d       	add	r24, r14
    a89a:	b9 d9       	rcall	.-3214   	; 0x9c0e <_Z22Fertilizer_Tank_On_Offhh>
    a89c:	ab cf       	rjmp	.-170    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									
								}
							}
							else
							{
								if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a89e:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    a8a2:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    a8a6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8aa:	90 e0       	ldi	r25, 0x00	; 0
    a8ac:	01 97       	sbiw	r24, 0x01	; 1
    a8ae:	fc 01       	movw	r30, r24
    a8b0:	ee 0f       	add	r30, r30
    a8b2:	ff 1f       	adc	r31, r31
    a8b4:	e8 0f       	add	r30, r24
    a8b6:	f9 1f       	adc	r31, r25
    a8b8:	ec 0f       	add	r30, r28
    a8ba:	fd 1f       	adc	r31, r29
    a8bc:	ee 0f       	add	r30, r30
    a8be:	ff 1f       	adc	r31, r31
    a8c0:	ed 53       	subi	r30, 0x3D	; 61
    a8c2:	f6 4f       	sbci	r31, 0xF6	; 246
    a8c4:	80 81       	ld	r24, Z
    a8c6:	91 81       	ldd	r25, Z+1	; 0x01
    a8c8:	82 17       	cp	r24, r18
    a8ca:	93 07       	cpc	r25, r19
    a8cc:	08 f0       	brcs	.+2      	; 0xa8d0 <_Z26Fertilizer_Tank_Monitoringv+0x254>
    a8ce:	92 cf       	rjmp	.-220    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a8d0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8d4:	90 e0       	ldi	r25, 0x00	; 0
    a8d6:	01 97       	sbiw	r24, 0x01	; 1
    a8d8:	fc 01       	movw	r30, r24
    a8da:	ee 0f       	add	r30, r30
    a8dc:	ff 1f       	adc	r31, r31
    a8de:	e8 0f       	add	r30, r24
    a8e0:	f9 1f       	adc	r31, r25
    a8e2:	ec 0f       	add	r30, r28
    a8e4:	fd 1f       	adc	r31, r29
    a8e6:	ee 0f       	add	r30, r30
    a8e8:	ff 1f       	adc	r31, r31
    a8ea:	e5 5e       	subi	r30, 0xE5	; 229
    a8ec:	f4 4f       	sbci	r31, 0xF4	; 244
    a8ee:	20 81       	ld	r18, Z
    a8f0:	31 81       	ldd	r19, Z+1	; 0x01
    a8f2:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a8f6:	90 e0       	ldi	r25, 0x00	; 0
    a8f8:	28 17       	cp	r18, r24
    a8fa:	39 07       	cpc	r19, r25
    a8fc:	09 f4       	brne	.+2      	; 0xa900 <_Z26Fertilizer_Tank_Monitoringv+0x284>
    a8fe:	7a cf       	rjmp	.-268    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									{
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
    a900:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a904:	90 e0       	ldi	r25, 0x00	; 0
    a906:	01 97       	sbiw	r24, 0x01	; 1
    a908:	98 2f       	mov	r25, r24
    a90a:	99 0f       	add	r25, r25
    a90c:	89 0f       	add	r24, r25
    a90e:	61 e0       	ldi	r22, 0x01	; 1
    a910:	8e 0d       	add	r24, r14
    a912:	7d d9       	rcall	.-3334   	; 0x9c0e <_Z22Fertilizer_Tank_On_Offhh>
    a914:	88 23       	and	r24, r24
    a916:	79 f0       	breq	.+30     	; 0xa936 <_Z26Fertilizer_Tank_Monitoringv+0x2ba>
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
    a918:	10 92 ef 0c 	sts	0x0CEF, r1	; 0x800cef <_gWait_Blower_Time+0x1>
    a91c:	10 92 ee 0c 	sts	0x0CEE, r1	; 0x800cee <_gWait_Blower_Time>
											if(Doser_Pump_On_Off(_kON))
    a920:	81 e0       	ldi	r24, 0x01	; 1
    a922:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a926:	f8 01       	movw	r30, r16
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
											if(Doser_Pump_On_Off(_kON))
    a928:	88 23       	and	r24, r24
    a92a:	31 f0       	breq	.+12     	; 0xa938 <_Z26Fertilizer_Tank_Monitoringv+0x2bc>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a92c:	e0 5a       	subi	r30, 0xA0	; 160
    a92e:	fd 4f       	sbci	r31, 0xFD	; 253
    a930:	81 e0       	ldi	r24, 0x01	; 1
    a932:	80 83       	st	Z, r24
    a934:	5f cf       	rjmp	.-322    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a936:	f8 01       	movw	r30, r16
    a938:	ed 5a       	subi	r30, 0xAD	; 173
    a93a:	fd 4f       	sbci	r31, 0xFD	; 253
    a93c:	d0 82       	st	Z, r13
    a93e:	5a cf       	rjmp	.-332    	; 0xa7f4 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					}
				}
			}
		}
	}
}
    a940:	df 91       	pop	r29
    a942:	cf 91       	pop	r28
    a944:	1f 91       	pop	r17
    a946:	0f 91       	pop	r16
    a948:	ff 90       	pop	r15
    a94a:	ef 90       	pop	r14
    a94c:	df 90       	pop	r13
    a94e:	bf 90       	pop	r11
    a950:	af 90       	pop	r10
    a952:	08 95       	ret

0000a954 <_Z20Schedules_Monitoringv>:
	
}	
	
	
void Schedules_Monitoring(void)
{
    a954:	0f 93       	push	r16
    a956:	1f 93       	push	r17
    a958:	cf 93       	push	r28
    a95a:	df 93       	push	r29
	unsigned char check_new_true_condition;
	unsigned char Check_for_no_repeat;
	static unsigned char irrigation_Start_Set = _kRESET,flush_running_status=_kRESET;
	static unsigned char mode_change = 0;
	
	_sSchedules.Schedule_Pause_Resume = _kRESET;
    a95c:	10 92 e5 0b 	sts	0x0BE5, r1	; 0x800be5 <_sSchedules+0x2c7>
	_sSchedules.Based_On_Trigger_Time = _sSchedules.Based_On_Trigger_Time;
    a960:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a964:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
	
	switch(_sSchedules.Based_On_Trigger_Time)
    a968:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a96c:	82 30       	cpi	r24, 0x02	; 2
    a96e:	90 f4       	brcc	.+36     	; 0xa994 <_Z20Schedules_Monitoringv+0x40>
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a970:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a974:	81 30       	cpi	r24, 0x01	; 1
    a976:	91 f4       	brne	.+36     	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
	switch(_sSchedules.Based_On_Trigger_Time)
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a978:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <_sSchedules+0x1>
    a97c:	91 11       	cpse	r25, r1
    a97e:	0e c0       	rjmp	.+28     	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a980:	90 91 e5 0b 	lds	r25, 0x0BE5	; 0x800be5 <_sSchedules+0x2c7>
    a984:	91 30       	cpi	r25, 0x01	; 1
    a986:	51 f0       	breq	.+20     	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
    a988:	90 91 f4 13 	lds	r25, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    a98c:	96 34       	cpi	r25, 0x46	; 70
    a98e:	09 f0       	breq	.+2      	; 0xa992 <_Z20Schedules_Monitoringv+0x3e>
    a990:	a7 c0       	rjmp	.+334    	; 0xaae0 <_Z20Schedules_Monitoringv+0x18c>
    a992:	04 c0       	rjmp	.+8      	; 0xa99c <_Z20Schedules_Monitoringv+0x48>
			}
		}break;
		
		default:
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
    a994:	81 e0       	ldi	r24, 0x01	; 1
    a996:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
		}break;
	}
	
}					
    a99a:	77 c7       	rjmp	.+3822   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a99c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a9a0:	88 23       	and	r24, r24
    a9a2:	21 f0       	breq	.+8      	; 0xa9ac <_Z20Schedules_Monitoringv+0x58>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a9a4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    a9a8:	81 11       	cpse	r24, r1
    a9aa:	07 c0       	rjmp	.+14     	; 0xa9ba <_Z20Schedules_Monitoringv+0x66>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a9ac:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a9b0:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a9b4:	89 2b       	or	r24, r25
    a9b6:	09 f4       	brne	.+2      	; 0xa9ba <_Z20Schedules_Monitoringv+0x66>
    a9b8:	67 c0       	rjmp	.+206    	; 0xaa88 <_Z20Schedules_Monitoringv+0x134>
				{
					if(_sPump_Parameter.Irrigation_Status)
    a9ba:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    a9be:	81 11       	cpse	r24, r1
					{
						_sPump_Parameter.Irrigation_Status = _kRESET;
    a9c0:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
					}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9c4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    a9c8:	81 30       	cpi	r24, 0x01	; 1
    a9ca:	51 f4       	brne	.+20     	; 0xa9e0 <_Z20Schedules_Monitoringv+0x8c>
					{
						_kSERAIL_MON_WRITE("sc enter 60");
    a9cc:	6a e4       	ldi	r22, 0x4A	; 74
    a9ce:	73 e1       	ldi	r23, 0x13	; 19
    a9d0:	86 ec       	ldi	r24, 0xC6	; 198
    a9d2:	94 e1       	ldi	r25, 0x14	; 20
    a9d4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a9d8:	86 ec       	ldi	r24, 0xC6	; 198
    a9da:	94 e1       	ldi	r25, 0x14	; 20
    a9dc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
    a9e0:	80 91 e5 0b 	lds	r24, 0x0BE5	; 0x800be5 <_sSchedules+0x2c7>
    a9e4:	81 11       	cpse	r24, r1
    a9e6:	0f c7       	rjmp	.+3614   	; 0xb806 <_Z20Schedules_Monitoringv+0xeb2>
    a9e8:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    a9ec:	81 30       	cpi	r24, 0x01	; 1
    a9ee:	09 f4       	brne	.+2      	; 0xa9f2 <_Z20Schedules_Monitoringv+0x9e>
    a9f0:	0a c7       	rjmp	.+3604   	; 0xb806 <_Z20Schedules_Monitoringv+0xeb2>
    a9f2:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    a9f6:	86 34       	cpi	r24, 0x46	; 70
    a9f8:	09 f4       	brne	.+2      	; 0xa9fc <_Z20Schedules_Monitoringv+0xa8>
    a9fa:	05 c7       	rjmp	.+3594   	; 0xb806 <_Z20Schedules_Monitoringv+0xeb2>
					}
					
					
					
					/* what should happen when scheduler mode id not enabled */
					_sSchedules.New_Schedules_Occur = _kRESET;
    a9fc:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    aa00:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    aa04:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    aa08:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    aa0c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    aa10:	81 11       	cpse	r24, r1
    aa12:	d9 c6       	rjmp	.+3506   	; 0xb7c6 <_Z20Schedules_Monitoringv+0xe72>
						Turn_Off_Blower_For_Safety();
					}
					
					//_sSchedules.Which_Sheduler_Is_Running = _kRESET;  // 17/02/2023
					
						if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    aa14:	0e 94 95 c1 	call	0x1832a	; 0x1832a <_Z15Stop_Irrigationv>
    aa18:	81 11       	cpse	r24, r1
    aa1a:	03 c0       	rjmp	.+6      	; 0xaa22 <_Z20Schedules_Monitoringv+0xce>
						{
							_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    aa1c:	84 e0       	ldi	r24, 0x04	; 4
    aa1e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
						}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    aa22:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    aa26:	81 30       	cpi	r24, 0x01	; 1
    aa28:	e1 f4       	brne	.+56     	; 0xaa62 <_Z20Schedules_Monitoringv+0x10e>
					{
						_kSERAIL_MON_WRITE("Scheduler gets off 11 : ");
    aa2a:	69 e1       	ldi	r22, 0x19	; 25
    aa2c:	73 e1       	ldi	r23, 0x13	; 19
    aa2e:	86 ec       	ldi	r24, 0xC6	; 198
    aa30:	94 e1       	ldi	r25, 0x14	; 20
    aa32:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    aa36:	86 ec       	ldi	r24, 0xC6	; 198
    aa38:	94 e1       	ldi	r25, 0x14	; 20
    aa3a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running);
    aa3e:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    aa42:	4a e0       	ldi	r20, 0x0A	; 10
    aa44:	50 e0       	ldi	r21, 0x00	; 0
    aa46:	86 ec       	ldi	r24, 0xC6	; 198
    aa48:	94 e1       	ldi	r25, 0x14	; 20
    aa4a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						
						_kSERAIL_MON_WRITE("sc enter 59.1");
    aa4e:	6b e0       	ldi	r22, 0x0B	; 11
    aa50:	73 e1       	ldi	r23, 0x13	; 19
    aa52:	86 ec       	ldi	r24, 0xC6	; 198
    aa54:	94 e1       	ldi	r25, 0x14	; 20
    aa56:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    aa5a:	86 ec       	ldi	r24, 0xC6	; 198
    aa5c:	94 e1       	ldi	r25, 0x14	; 20
    aa5e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    aa62:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aa66:	81 e0       	ldi	r24, 0x01	; 1
    aa68:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    aa6c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					
					_sSchedules.Schedule_Are_Started = _kRESET;
    aa70:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    aa74:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    aa78:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    aa7c:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    aa80:	89 13       	cpse	r24, r25
    aa82:	b8 c6       	rjmp	.+3440   	; 0xb7f4 <_Z20Schedules_Monitoringv+0xea0>
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
						}
					}
					
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aa84:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
					
				}
				
				if(_sSchedules.New_Schedules_Occur != _kRESET)
    aa88:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    aa8c:	88 23       	and	r24, r24
    aa8e:	b9 f0       	breq	.+46     	; 0xaabe <_Z20Schedules_Monitoringv+0x16a>
				{
					_sSchedules.New_Schedules_Occur = _kRESET;
    aa90:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    aa94:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aa98:	81 e0       	ldi	r24, 0x01	; 1
    aa9a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    aa9e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    aaa2:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    aaa6:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					_sSchedules.New_Schedules_Occur = _kRESET;
    aaaa:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    aaae:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    aab2:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    aab6:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
				
				
				
					Edited_In_Schedule();
    aaba:	0e 94 74 40 	call	0x80e8	; 0x80e8 <_Z18Edited_In_Schedulev>
				}
				
				if(_sRuble_Parameters.Irrigating_Plot && _sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    aabe:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    aac2:	88 23       	and	r24, r24
    aac4:	09 f4       	brne	.+2      	; 0xaac8 <_Z20Schedules_Monitoringv+0x174>
    aac6:	e1 c6       	rjmp	.+3522   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    aac8:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    aacc:	85 30       	cpi	r24, 0x05	; 5
    aace:	09 f0       	breq	.+2      	; 0xaad2 <_Z20Schedules_Monitoringv+0x17e>
    aad0:	dc c6       	rjmp	.+3512   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
				{
					Stop_Irrigation();
    aad2:	0e 94 95 c1 	call	0x1832a	; 0x1832a <_Z15Stop_Irrigationv>
					_sRuble_Parameters.Pump_Run_Timer = _kRESET;
    aad6:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
    aada:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
    aade:	d5 c6       	rjmp	.+3498   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
			_sRuble_Parameters.Update_Local_Date[2] != 70)
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    aae0:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    aae4:	95 30       	cpi	r25, 0x05	; 5
    aae6:	09 f0       	breq	.+2      	; 0xaaea <_Z20Schedules_Monitoringv+0x196>
    aae8:	42 c0       	rjmp	.+132    	; 0xab6e <_Z20Schedules_Monitoringv+0x21a>
				{
					mode_change = _kSET;
    aaea:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
					if(flush_running_status == _kSET)
    aaee:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
    aaf2:	81 30       	cpi	r24, 0x01	; 1
    aaf4:	61 f4       	brne	.+24     	; 0xab0e <_Z20Schedules_Monitoringv+0x1ba>
					{
						if(_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    aaf6:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    aafa:	81 30       	cpi	r24, 0x01	; 1
    aafc:	41 f0       	breq	.+16     	; 0xab0e <_Z20Schedules_Monitoringv+0x1ba>
						&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET)
    aafe:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
    ab02:	81 11       	cpse	r24, r1
    ab04:	04 c0       	rjmp	.+8      	; 0xab0e <_Z20Schedules_Monitoringv+0x1ba>
						{
							flush_running_status = _kRESET;
    ab06:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ab0a:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						{
							
						}
					}
					
					if(irrigation_Start_Set == _kSET)
    ab0e:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
    ab12:	81 30       	cpi	r24, 0x01	; 1
    ab14:	79 f4       	brne	.+30     	; 0xab34 <_Z20Schedules_Monitoringv+0x1e0>
					{
						irrigation_Start_Set = _kRESET;
    ab16:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    ab1a:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    ab1e:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ab22:	89 17       	cp	r24, r25
    ab24:	39 f0       	breq	.+14     	; 0xab34 <_Z20Schedules_Monitoringv+0x1e0>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    ab26:	88 23       	and	r24, r24
    ab28:	29 f0       	breq	.+10     	; 0xab34 <_Z20Schedules_Monitoringv+0x1e0>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    ab2a:	60 e0       	ldi	r22, 0x00	; 0
    ab2c:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    ab30:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
							}
						}
					}
					
					//_kSERAIL_MON_WRITE("sc enter 0.1");   //1/05
					if(_sSchedules.Scheduler_Retry_Timer == _kRESET)   /* if there is no wait timer to start the schedule again */
    ab34:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    ab38:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    ab3c:	89 2b       	or	r24, r25
    ab3e:	41 f4       	brne	.+16     	; 0xab50 <_Z20Schedules_Monitoringv+0x1fc>
					{
						//_kSERAIL_MON_WRITE("sc enter 0.2");     //1/05
						flush_running_status = _kRESET;
    ab40:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
						if(_sSchedules.Shedule_Run_Status_Is_Triggered == _kSET && flush_running_status == _kRESET)
    ab44:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <_sSchedules+0x6>
    ab48:	81 30       	cpi	r24, 0x01	; 1
    ab4a:	09 f0       	breq	.+2      	; 0xab4e <_Z20Schedules_Monitoringv+0x1fa>
    ab4c:	ea c0       	rjmp	.+468    	; 0xad22 <_Z20Schedules_Monitoringv+0x3ce>
    ab4e:	60 c0       	rjmp	.+192    	; 0xac10 <_Z20Schedules_Monitoringv+0x2bc>
							/*********************************************************************************/
						}
					}
					else
					{
						if(_sSchedules.Scheduler_Retry_Timer < 10)
    ab50:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    ab54:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    ab58:	0a 97       	sbiw	r24, 0x0a	; 10
    ab5a:	08 f0       	brcs	.+2      	; 0xab5e <_Z20Schedules_Monitoringv+0x20a>
    ab5c:	96 c6       	rjmp	.+3372   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
						{	
							if(_sPump_Parameter.Irrigation_Status)
    ab5e:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    ab62:	88 23       	and	r24, r24
    ab64:	09 f4       	brne	.+2      	; 0xab68 <_Z20Schedules_Monitoringv+0x214>
    ab66:	91 c6       	rjmp	.+3362   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
							{
								_sPump_Parameter.Irrigation_Status = _kRESET;
    ab68:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
    ab6c:	8e c6       	rjmp	.+3356   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
					}
				}
				else
				{
					/* what should happen if scheduler operation mode is not selected */
					if(mode_change)
    ab6e:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
    ab72:	88 23       	and	r24, r24
    ab74:	09 f4       	brne	.+2      	; 0xab78 <_Z20Schedules_Monitoringv+0x224>
    ab76:	89 c6       	rjmp	.+3346   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
					{
						mode_change = _kRESET;
    ab78:	10 92 1d 09 	sts	0x091D, r1	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
						if(_sPump_Parameter.Irrigation_Status)
    ab7c:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    ab80:	81 11       	cpse	r24, r1
						{
							_sPump_Parameter.Irrigation_Status = _kRESET;
    ab82:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
						}
						if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    ab86:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ab8a:	88 23       	and	r24, r24
    ab8c:	89 f1       	breq	.+98     	; 0xabf0 <_Z20Schedules_Monitoringv+0x29c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    ab8e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ab92:	81 30       	cpi	r24, 0x01	; 1
    ab94:	51 f4       	brne	.+20     	; 0xabaa <_Z20Schedules_Monitoringv+0x256>
							{
								_kSERAIL_MON_WRITE("sc enter 58");
    ab96:	62 e6       	ldi	r22, 0x62	; 98
    ab98:	73 e1       	ldi	r23, 0x13	; 19
    ab9a:	86 ec       	ldi	r24, 0xC6	; 198
    ab9c:	94 e1       	ldi	r25, 0x14	; 20
    ab9e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    aba2:	86 ec       	ldi	r24, 0xC6	; 198
    aba4:	94 e1       	ldi	r25, 0x14	; 20
    aba6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    abaa:	83 e0       	ldi	r24, 0x03	; 3
    abac:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
							Turn_Off_All_Tank_For_Safety();
    abb0:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
							Blower_Monitoring(_kFORCEFULYY_OFF);    // 11-4
    abb4:	83 e0       	ldi	r24, 0x03	; 3
    abb6:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
							Turn_Off_Blower_For_Safety();
						
							//_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    abba:	0e 94 95 c1 	call	0x1832a	; 0x1832a <_Z15Stop_Irrigationv>
    abbe:	81 11       	cpse	r24, r1
    abc0:	11 c0       	rjmp	.+34     	; 0xabe4 <_Z20Schedules_Monitoringv+0x290>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    abc2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    abc6:	81 30       	cpi	r24, 0x01	; 1
    abc8:	51 f4       	brne	.+20     	; 0xabde <_Z20Schedules_Monitoringv+0x28a>
								{
									_kSERAIL_MON_WRITE("sc enter 59");
    abca:	66 e5       	ldi	r22, 0x56	; 86
    abcc:	73 e1       	ldi	r23, 0x13	; 19
    abce:	86 ec       	ldi	r24, 0xC6	; 198
    abd0:	94 e1       	ldi	r25, 0x14	; 20
    abd2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    abd6:	86 ec       	ldi	r24, 0xC6	; 198
    abd8:	94 e1       	ldi	r25, 0x14	; 20
    abda:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								
								_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    abde:	84 e0       	ldi	r24, 0x04	; 4
    abe0:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
							}				
							_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    abe4:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
							_sSchedules.Pump_On_In_Scheduler = _kRESET;
    abe8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);	
    abec:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						}
						
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    abf0:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    abf4:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    abf8:	89 17       	cp	r24, r25
    abfa:	09 f4       	brne	.+2      	; 0xabfe <_Z20Schedules_Monitoringv+0x2aa>
    abfc:	46 c6       	rjmp	.+3212   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    abfe:	88 23       	and	r24, r24
    ac00:	09 f4       	brne	.+2      	; 0xac04 <_Z20Schedules_Monitoringv+0x2b0>
    ac02:	43 c6       	rjmp	.+3206   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    ac04:	60 e0       	ldi	r22, 0x00	; 0
    ac06:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    ac0a:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
    ac0e:	3d c6       	rjmp	.+3194   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    ac10:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac14:	f0 e0       	ldi	r31, 0x00	; 0
    ac16:	e9 57       	subi	r30, 0x79	; 121
    ac18:	f6 4f       	sbci	r31, 0xF6	; 246
    ac1a:	40 81       	ld	r20, Z
													
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
    ac1c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac20:	f0 e0       	ldi	r31, 0x00	; 0
    ac22:	e8 58       	subi	r30, 0x88	; 136
    ac24:	f6 4f       	sbci	r31, 0xF6	; 246
    ac26:	60 81       	ld	r22, Z
    ac28:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    ac2c:	0e 94 ec 38 	call	0x71d8	; 0x71d8 <_Z22Day_In_Bet_Schedullinghhh>
								
								if(check_new_true_condition == 2)
								{
									check_new_true_condition = _kSET;
								}
								else if(check_new_true_condition == 1)
    ac30:	81 50       	subi	r24, 0x01	; 1
    ac32:	82 30       	cpi	r24, 0x02	; 2
    ac34:	08 f4       	brcc	.+2      	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
    ac36:	8d c1       	rjmp	.+794    	; 0xaf52 <_Z20Schedules_Monitoringv+0x5fe>
									}
								}
							}
							else
							{
								if(_sSchedules.Which_Sheduler_Is_Running > _kNUMBER_OF_SCHEDULES+1) /* when reach to the last scheduler */
    ac38:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac3c:	80 31       	cpi	r24, 0x10	; 16
    ac3e:	90 f1       	brcs	.+100    	; 0xaca4 <_Z20Schedules_Monitoringv+0x350>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac40:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ac44:	81 30       	cpi	r24, 0x01	; 1
    ac46:	31 f4       	brne	.+12     	; 0xac54 <_Z20Schedules_Monitoringv+0x300>
									{
										_kSERAIL_MON_WRITE("sc enter 10");
    ac48:	63 ec       	ldi	r22, 0xC3	; 195
    ac4a:	74 e1       	ldi	r23, 0x14	; 20
    ac4c:	86 ec       	ldi	r24, 0xC6	; 198
    ac4e:	94 e1       	ldi	r25, 0x14	; 20
    ac50:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									}
									_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    ac54:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
									_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    ac58:	81 e0       	ldi	r24, 0x01	; 1
    ac5a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
									_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    ac5e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
									
									if(_sSchedules.Schedule_Are_Started == _kSET)
    ac62:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    ac66:	81 30       	cpi	r24, 0x01	; 1
    ac68:	61 f4       	brne	.+24     	; 0xac82 <_Z20Schedules_Monitoringv+0x32e>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac6a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ac6e:	81 30       	cpi	r24, 0x01	; 1
    ac70:	31 f4       	brne	.+12     	; 0xac7e <_Z20Schedules_Monitoringv+0x32a>
										{
											_kSERAIL_MON_WRITE("sc enter 11");
    ac72:	67 eb       	ldi	r22, 0xB7	; 183
    ac74:	74 e1       	ldi	r23, 0x14	; 20
    ac76:	86 ec       	ldi	r24, 0xC6	; 198
    ac78:	94 e1       	ldi	r25, 0x14	; 20
    ac7a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										}
										_sSchedules.Schedule_Are_Started = _kRESET;
    ac7e:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										/* save in eeprom */
									}
									
									_sSchedules.all_schedule_done_flag = _eSET;								
    ac82:	82 e0       	ldi	r24, 0x02	; 2
    ac84:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    ac88:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    ac8c:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
									_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    ac90:	80 91 ef 0b 	lds	r24, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    ac94:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    ac98:	df 91       	pop	r29
    ac9a:	cf 91       	pop	r28
    ac9c:	1f 91       	pop	r17
    ac9e:	0f 91       	pop	r16
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
										}
																					
										Set_Trigger_Time();								
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aca0:	0c 94 b2 32 	jmp	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									/* save in eeprom */
								}
								else
								{
									_sSchedules.Which_Sheduler_Is_Running++;  /* when time of current schedule over then next scheduler should be select */
    aca4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    aca8:	8f 5f       	subi	r24, 0xFF	; 255
    acaa:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
									if(_sSchedules.Which_Sheduler_Is_Running == 1)
    acae:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    acb2:	81 30       	cpi	r24, 0x01	; 1
    acb4:	09 f0       	breq	.+2      	; 0xacb8 <_Z20Schedules_Monitoringv+0x364>
    acb6:	e9 c5       	rjmp	.+3026   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									{
										_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    acb8:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    acbc:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
										_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    acc0:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    acc4:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    acc8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    accc:	81 30       	cpi	r24, 0x01	; 1
    acce:	91 f4       	brne	.+36     	; 0xacf4 <_Z20Schedules_Monitoringv+0x3a0>
										{
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
    acd0:	65 e8       	ldi	r22, 0x85	; 133
    acd2:	74 e1       	ldi	r23, 0x14	; 20
    acd4:	86 ec       	ldi	r24, 0xC6	; 198
    acd6:	94 e1       	ldi	r25, 0x14	; 20
    acd8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
    acdc:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    ace0:	4a e0       	ldi	r20, 0x0A	; 10
    ace2:	50 e0       	ldi	r21, 0x00	; 0
    ace4:	86 ec       	ldi	r24, 0xC6	; 198
    ace6:	94 e1       	ldi	r25, 0x14	; 20
    ace8:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
											_kSERIAL_MON_CLEAR();
    acec:	86 ec       	ldi	r24, 0xC6	; 198
    acee:	94 e1       	ldi	r25, 0x14	; 20
    acf0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										Return_Calculated_Previous_Day_Date(1);										
    acf4:	81 e0       	ldi	r24, 0x01	; 1
    acf6:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    acfa:	81 e0       	ldi	r24, 0x01	; 1
    acfc:	90 e0       	ldi	r25, 0x00	; 0
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
										{
											_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    acfe:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    ad02:	9c 01       	movw	r18, r24
    ad04:	22 5e       	subi	r18, 0xE2	; 226
    ad06:	36 4f       	sbci	r19, 0xF6	; 246
    ad08:	f9 01       	movw	r30, r18
    ad0a:	e5 5a       	subi	r30, 0xA5	; 165
    ad0c:	ff 4f       	sbci	r31, 0xFF	; 255
    ad0e:	40 83       	st	Z, r20
											_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    ad10:	40 91 ed 0b 	lds	r20, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    ad14:	3f 96       	adiw	r30, 0x0f	; 15
    ad16:	40 83       	st	Z, r20
    ad18:	01 96       	adiw	r24, 0x01	; 1
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
											_kSERIAL_MON_CLEAR();
										}
										Return_Calculated_Previous_Day_Date(1);										
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    ad1a:	8e 30       	cpi	r24, 0x0E	; 14
    ad1c:	91 05       	cpc	r25, r1
    ad1e:	79 f7       	brne	.-34     	; 0xacfe <_Z20Schedules_Monitoringv+0x3aa>
    ad20:	b4 c5       	rjmp	.+2920   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
// 							{
// 								return;
// 							}
							/* write logic to trigger the schedule */
							/* calculate trigger reset of time *there will be lag of 2 min* */
							if(_sSchedules.Based_On_Trigger_Time == _kSET)
    ad22:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    ad26:	81 30       	cpi	r24, 0x01	; 1
    ad28:	b1 f5       	brne	.+108    	; 0xad96 <_Z20Schedules_Monitoringv+0x442>
							{
								if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    ad2a:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    ad2e:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    ad32:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    ad36:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    ad3a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ad3e:	4c 32       	cpi	r20, 0x2C	; 44
    ad40:	51 40       	sbci	r21, 0x01	; 1
    ad42:	61 05       	cpc	r22, r1
    ad44:	71 05       	cpc	r23, r1
    ad46:	d0 f4       	brcc	.+52     	; 0xad7c <_Z20Schedules_Monitoringv+0x428>
								{
									_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    ad48:	47 e1       	ldi	r20, 0x17	; 23
    ad4a:	50 e5       	ldi	r21, 0x50	; 80
    ad4c:	61 e0       	ldi	r22, 0x01	; 1
    ad4e:	70 e0       	ldi	r23, 0x00	; 0
    ad50:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    ad54:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    ad58:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    ad5c:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad60:	81 30       	cpi	r24, 0x01	; 1
    ad62:	09 f0       	breq	.+2      	; 0xad66 <_Z20Schedules_Monitoringv+0x412>
    ad64:	47 c0       	rjmp	.+142    	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
									{
										_kSERAIL_MON_WRITE("sc enter 11.1");
    ad66:	67 e7       	ldi	r22, 0x77	; 119
    ad68:	74 e1       	ldi	r23, 0x14	; 20
    ad6a:	86 ec       	ldi	r24, 0xC6	; 198
    ad6c:	94 e1       	ldi	r25, 0x14	; 20
    ad6e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    ad72:	86 ec       	ldi	r24, 0xC6	; 198
    ad74:	94 e1       	ldi	r25, 0x14	; 20
    ad76:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    ad7a:	3c c0       	rjmp	.+120    	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad7c:	81 30       	cpi	r24, 0x01	; 1
    ad7e:	31 f5       	brne	.+76     	; 0xadcc <_Z20Schedules_Monitoringv+0x478>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2");
    ad80:	69 e6       	ldi	r22, 0x69	; 105
    ad82:	74 e1       	ldi	r23, 0x14	; 20
    ad84:	86 ec       	ldi	r24, 0xC6	; 198
    ad86:	94 e1       	ldi	r25, 0x14	; 20
    ad88:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    ad8c:	86 ec       	ldi	r24, 0xC6	; 198
    ad8e:	94 e1       	ldi	r25, 0x14	; 20
    ad90:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    ad94:	1b c0       	rjmp	.+54     	; 0xadcc <_Z20Schedules_Monitoringv+0x478>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ad96:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    ad9a:	81 11       	cpse	r24, r1
    ad9c:	4e c3       	rjmp	.+1692   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ad9e:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    ada2:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    ada6:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    adaa:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    adae:	89 2b       	or	r24, r25
    adb0:	8a 2b       	or	r24, r26
    adb2:	8b 2b       	or	r24, r27
    adb4:	09 f0       	breq	.+2      	; 0xadb8 <_Z20Schedules_Monitoringv+0x464>
    adb6:	41 c3       	rjmp	.+1666   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    adb8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    adbc:	81 11       	cpse	r24, r1
    adbe:	3d c3       	rjmp	.+1658   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    adc0:	80 91 6a 14 	lds	r24, 0x146A	; 0x80146a <_sRuble_Parameters+0xbc>
    adc4:	81 30       	cpi	r24, 0x01	; 1
    adc6:	09 f0       	breq	.+2      	; 0xadca <_Z20Schedules_Monitoringv+0x476>
    adc8:	38 c3       	rjmp	.+1648   	; 0xb43a <_Z20Schedules_Monitoringv+0xae6>
    adca:	20 c3       	rjmp	.+1600   	; 0xb40c <_Z20Schedules_Monitoringv+0xab8>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
										}
										else
										{
											_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    adcc:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    add0:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    add4:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    add8:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    addc:	8c 52       	subi	r24, 0x2C	; 44
    adde:	91 40       	sbci	r25, 0x01	; 1
    ade0:	a1 09       	sbc	r26, r1
    ade2:	b1 09       	sbc	r27, r1
    ade4:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    ade8:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    adec:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    adf0:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
										}
									}
								}
							}	
							
							irrigation_Start_Set = _kRESET;
    adf4:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    adf8:	80 91 7a 14 	lds	r24, 0x147A	; 0x80147a <_sRuble_Parameters+0xcc>
    adfc:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ae00:	89 17       	cp	r24, r25
    ae02:	59 f0       	breq	.+22     	; 0xae1a <_Z20Schedules_Monitoringv+0x4c6>
							{
								if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    ae04:	88 23       	and	r24, r24
    ae06:	49 f0       	breq	.+18     	; 0xae1a <_Z20Schedules_Monitoringv+0x4c6>
								{
									Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    ae08:	60 e0       	ldi	r22, 0x00	; 0
    ae0a:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
									_kSERIAL_MON_CLEAR();
    ae0e:	86 ec       	ldi	r24, 0xC6	; 198
    ae10:	94 e1       	ldi	r25, 0x14	; 20
    ae12:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    ae16:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
								}
							}	
													
							if(_sRuble_Parameters.Irrigating_Plot != _kRESET)
    ae1a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    ae1e:	88 23       	and	r24, r24
    ae20:	09 f4       	brne	.+2      	; 0xae24 <_Z20Schedules_Monitoringv+0x4d0>
    ae22:	43 c0       	rjmp	.+134    	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae24:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ae28:	81 30       	cpi	r24, 0x01	; 1
    ae2a:	51 f4       	brne	.+20     	; 0xae40 <_Z20Schedules_Monitoringv+0x4ec>
								{
									_kSERAIL_MON_WRITE("sc enter 6.0..........................");
    ae2c:	62 e3       	ldi	r22, 0x32	; 50
    ae2e:	74 e1       	ldi	r23, 0x14	; 20
    ae30:	86 ec       	ldi	r24, 0xC6	; 198
    ae32:	94 e1       	ldi	r25, 0x14	; 20
    ae34:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    ae38:	86 ec       	ldi	r24, 0xC6	; 198
    ae3a:	94 e1       	ldi	r25, 0x14	; 20
    ae3c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status          !=_kSCHEDULER_ON
    ae40:	80 91 56 0e 	lds	r24, 0x0E56	; 0x800e56 <_sExtra_Plot+0x6e>
    ae44:	84 30       	cpi	r24, 0x04	; 4
    ae46:	89 f1       	breq	.+98     	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    ae48:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    ae4c:	81 30       	cpi	r24, 0x01	; 1
    ae4e:	69 f1       	breq	.+90     	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET
    ae50:	80 91 54 0e 	lds	r24, 0x0E54	; 0x800e54 <_sExtra_Plot+0x6c>
    ae54:	81 11       	cpse	r24, r1
    ae56:	29 c0       	rjmp	.+82     	; 0xaeaa <_Z20Schedules_Monitoringv+0x556>
								/*&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET
								&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET*/)
								{
									if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    ae58:	0e 94 95 c1 	call	0x1832a	; 0x1832a <_Z15Stop_Irrigationv>
    ae5c:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ae60:	81 11       	cpse	r24, r1
    ae62:	13 c0       	rjmp	.+38     	; 0xae8a <_Z20Schedules_Monitoringv+0x536>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae64:	91 30       	cpi	r25, 0x01	; 1
    ae66:	51 f4       	brne	.+20     	; 0xae7c <_Z20Schedules_Monitoringv+0x528>
										{
											_kSERAIL_MON_WRITE("sc enter 6.1..........................");
    ae68:	6b e0       	ldi	r22, 0x0B	; 11
    ae6a:	74 e1       	ldi	r23, 0x14	; 20
    ae6c:	86 ec       	ldi	r24, 0xC6	; 198
    ae6e:	94 e1       	ldi	r25, 0x14	; 20
    ae70:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ae74:	86 ec       	ldi	r24, 0xC6	; 198
    ae76:	94 e1       	ldi	r25, 0x14	; 20
    ae78:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ae7c:	88 e5       	ldi	r24, 0x58	; 88
    ae7e:	92 e0       	ldi	r25, 0x02	; 2
    ae80:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ae84:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    ae88:	0c c0       	rjmp	.+24     	; 0xaea2 <_Z20Schedules_Monitoringv+0x54e>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae8a:	91 30       	cpi	r25, 0x01	; 1
    ae8c:	51 f4       	brne	.+20     	; 0xaea2 <_Z20Schedules_Monitoringv+0x54e>
										{
											_kSERAIL_MON_WRITE("sc enter 7.1");
    ae8e:	6e ef       	ldi	r22, 0xFE	; 254
    ae90:	73 e1       	ldi	r23, 0x13	; 19
    ae92:	86 ec       	ldi	r24, 0xC6	; 198
    ae94:	94 e1       	ldi	r25, 0x14	; 20
    ae96:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ae9a:	86 ec       	ldi	r24, 0xC6	; 198
    ae9c:	94 e1       	ldi	r25, 0x14	; 20
    ae9e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    aea2:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aea6:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
								}
							}							
							/* check the current time with trigger reset time */
							/*********************************************************************************/
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
    aeaa:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    aeae:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    aeb2:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    aeb6:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    aeba:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    aebe:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    aec2:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    aec6:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    aeca:	48 17       	cp	r20, r24
    aecc:	59 07       	cpc	r21, r25
    aece:	6a 07       	cpc	r22, r26
    aed0:	7b 07       	cpc	r23, r27
    aed2:	80 f4       	brcc	.+32     	; 0xaef4 <_Z20Schedules_Monitoringv+0x5a0>
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
    aed4:	0e 94 e6 48 	call	0x91cc	; 0x91cc <_Z30Compare_Trigger_And_Reset_Timev>
    aed8:	c8 2f       	mov	r28, r24
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    aeda:	81 11       	cpse	r24, r1
    aedc:	ce c2       	rjmp	.+1436   	; 0xb47a <_Z20Schedules_Monitoringv+0xb26>
    aede:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    aee2:	81 30       	cpi	r24, 0x01	; 1
    aee4:	09 f0       	breq	.+2      	; 0xaee8 <_Z20Schedules_Monitoringv+0x594>
    aee6:	d1 c4       	rjmp	.+2466   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    aee8:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    aeec:	81 30       	cpi	r24, 0x01	; 1
    aeee:	09 f0       	breq	.+2      	; 0xaef2 <_Z20Schedules_Monitoringv+0x59e>
    aef0:	cc c4       	rjmp	.+2456   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    aef2:	c3 c2       	rjmp	.+1414   	; 0xb47a <_Z20Schedules_Monitoringv+0xb26>
									}
								}
							}
							else
							{
								if(_sSchedules.Trigger_Time >= _sSchedules.Trigger_Reset)
    aef4:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    aef8:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    aefc:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    af00:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    af04:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    af08:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    af0c:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    af10:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    af14:	48 17       	cp	r20, r24
    af16:	59 07       	cpc	r21, r25
    af18:	6a 07       	cpc	r22, r26
    af1a:	7b 07       	cpc	r23, r27
    af1c:	08 f4       	brcc	.+2      	; 0xaf20 <_Z20Schedules_Monitoringv+0x5cc>
    af1e:	b5 c4       	rjmp	.+2410   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
								{
									check_true_condition = Compare_Trigger_And_Reset_Time();
    af20:	0e 94 e6 48 	call	0x91cc	; 0x91cc <_Z30Compare_Trigger_And_Reset_Timev>
    af24:	c8 2f       	mov	r28, r24
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    af26:	81 11       	cpse	r24, r1
    af28:	ed c2       	rjmp	.+1498   	; 0xb504 <_Z20Schedules_Monitoringv+0xbb0>
    af2a:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    af2e:	81 30       	cpi	r24, 0x01	; 1
    af30:	29 f4       	brne	.+10     	; 0xaf3c <_Z20Schedules_Monitoringv+0x5e8>
    af32:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    af36:	81 30       	cpi	r24, 0x01	; 1
    af38:	09 f4       	brne	.+2      	; 0xaf3c <_Z20Schedules_Monitoringv+0x5e8>
    af3a:	e4 c2       	rjmp	.+1480   	; 0xb504 <_Z20Schedules_Monitoringv+0xbb0>
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
										}
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    af3c:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    af40:	81 30       	cpi	r24, 0x01	; 1
    af42:	09 f0       	breq	.+2      	; 0xaf46 <_Z20Schedules_Monitoringv+0x5f2>
    af44:	a2 c4       	rjmp	.+2372   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    af46:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    af4a:	81 30       	cpi	r24, 0x01	; 1
    af4c:	09 f0       	breq	.+2      	; 0xaf50 <_Z20Schedules_Monitoringv+0x5fc>
    af4e:	9d c4       	rjmp	.+2362   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    af50:	36 c3       	rjmp	.+1644   	; 0xb5be <_Z20Schedules_Monitoringv+0xc6a>
									check_new_true_condition = _kRESET;
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
    af52:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af56:	f0 e0       	ldi	r31, 0x00	; 0
    af58:	e3 5e       	subi	r30, 0xE3	; 227
    af5a:	f6 4f       	sbci	r31, 0xF6	; 246
    af5c:	15 ad       	ldd	r17, Z+61	; 0x3d
    af5e:	11 30       	cpi	r17, 0x01	; 1
    af60:	09 f0       	breq	.+2      	; 0xaf64 <_Z20Schedules_Monitoringv+0x610>
    af62:	6a ce       	rjmp	.-812    	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    af64:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af68:	f0 e0       	ldi	r31, 0x00	; 0
    af6a:	e7 59       	subi	r30, 0x97	; 151
    af6c:	f6 4f       	sbci	r31, 0xF6	; 246
    af6e:	80 81       	ld	r24, Z
    af70:	90 e0       	ldi	r25, 0x00	; 0
    af72:	01 97       	sbiw	r24, 0x01	; 1
    af74:	26 e0       	ldi	r18, 0x06	; 6
    af76:	28 9f       	mul	r18, r24
    af78:	f0 01       	movw	r30, r0
    af7a:	29 9f       	mul	r18, r25
    af7c:	f0 0d       	add	r31, r0
    af7e:	11 24       	eor	r1, r1
    af80:	e2 5b       	subi	r30, 0xB2	; 178
    af82:	f2 4f       	sbci	r31, 0xF2	; 242
    af84:	80 81       	ld	r24, Z
    af86:	88 23       	and	r24, r24
    af88:	09 f4       	brne	.+2      	; 0xaf8c <_Z20Schedules_Monitoringv+0x638>
    af8a:	56 ce       	rjmp	.-852    	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
    af8c:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    af90:	f0 e0       	ldi	r31, 0x00	; 0
    af92:	e7 59       	subi	r30, 0x97	; 151
    af94:	f6 4f       	sbci	r31, 0xF6	; 246
    af96:	80 81       	ld	r24, Z
    af98:	90 e0       	ldi	r25, 0x00	; 0
    af9a:	01 97       	sbiw	r24, 0x01	; 1
    af9c:	28 9f       	mul	r18, r24
    af9e:	f0 01       	movw	r30, r0
    afa0:	29 9f       	mul	r18, r25
    afa2:	f0 0d       	add	r31, r0
    afa4:	11 24       	eor	r1, r1
    afa6:	e2 5b       	subi	r30, 0xB2	; 178
    afa8:	f2 4f       	sbci	r31, 0xF2	; 242
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    afaa:	80 81       	ld	r24, Z
    afac:	8f 30       	cpi	r24, 0x0F	; 15
    afae:	08 f0       	brcs	.+2      	; 0xafb2 <_Z20Schedules_Monitoringv+0x65e>
    afb0:	43 ce       	rjmp	.-890    	; 0xac38 <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
							{
								Check_for_no_repeat = Do_Not_Repeat_Schedule();	
    afb2:	0e 94 b8 46 	call	0x8d70	; 0x8d70 <_Z22Do_Not_Repeat_Schedulev>
    afb6:	d8 2f       	mov	r29, r24
								//_kSERAIL_MON_WRITE("sc enter 0.3");   //1/05
								/* save which scheduler is running in eeprom */
								if(_sSchedules.Pump_On_In_Scheduler == _kSET)   /* turn on scheduler */
    afb8:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <_sSchedules+0x79>
    afbc:	81 30       	cpi	r24, 0x01	; 1
    afbe:	09 f0       	breq	.+2      	; 0xafc2 <_Z20Schedules_Monitoringv+0x66e>
    afc0:	41 c1       	rjmp	.+642    	; 0xb244 <_Z20Schedules_Monitoringv+0x8f0>
								{
									/* save running time in eeprom  when no tank is running */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    afc2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    afc6:	81 30       	cpi	r24, 0x01	; 1
    afc8:	89 f5       	brne	.+98     	; 0xb02c <_Z20Schedules_Monitoringv+0x6d8>
									{
										Serial.println("Running time in sec");
    afca:	6f ee       	ldi	r22, 0xEF	; 239
    afcc:	72 e0       	ldi	r23, 0x02	; 2
    afce:	86 ec       	ldi	r24, 0xC6	; 198
    afd0:	94 e1       	ldi	r25, 0x14	; 20
    afd2:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Keep_Scheduler_Run_Timer);
    afd6:	60 91 26 09 	lds	r22, 0x0926	; 0x800926 <_sSchedules+0x8>
    afda:	70 91 27 09 	lds	r23, 0x0927	; 0x800927 <_sSchedules+0x9>
    afde:	4a e0       	ldi	r20, 0x0A	; 10
    afe0:	50 e0       	ldi	r21, 0x00	; 0
    afe2:	86 ec       	ldi	r24, 0xC6	; 198
    afe4:	94 e1       	ldi	r25, 0x14	; 20
    afe6:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
										Serial.println();
    afea:	86 ec       	ldi	r24, 0xC6	; 198
    afec:	94 e1       	ldi	r25, 0x14	; 20
    afee:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    aff2:	86 ec       	ldi	r24, 0xC6	; 198
    aff4:	94 e1       	ldi	r25, 0x14	; 20
    aff6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										Serial.println("Running schedule");
    affa:	63 e0       	ldi	r22, 0x03	; 3
    affc:	73 e0       	ldi	r23, 0x03	; 3
    affe:	86 ec       	ldi	r24, 0xC6	; 198
    b000:	94 e1       	ldi	r25, 0x14	; 20
    b002:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running-1);
    b006:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    b00a:	70 e0       	ldi	r23, 0x00	; 0
    b00c:	61 50       	subi	r22, 0x01	; 1
    b00e:	71 09       	sbc	r23, r1
    b010:	4a e0       	ldi	r20, 0x0A	; 10
    b012:	50 e0       	ldi	r21, 0x00	; 0
    b014:	86 ec       	ldi	r24, 0xC6	; 198
    b016:	94 e1       	ldi	r25, 0x14	; 20
    b018:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
										Serial.println(); //1/05
    b01c:	86 ec       	ldi	r24, 0xC6	; 198
    b01e:	94 e1       	ldi	r25, 0x14	; 20
    b020:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    b024:	86 ec       	ldi	r24, 0xC6	; 198
    b026:	94 e1       	ldi	r25, 0x14	; 20
    b028:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									}
									
									Fertilizer_Tank_Monitoring();
    b02c:	27 db       	rcall	.-2482   	; 0xa67c <_Z26Fertilizer_Tank_Monitoringv>
									
									Blower_Monitoring(_kON);  // 11-4
    b02e:	81 e0       	ldi	r24, 0x01	; 1
    b030:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
									
									if(_sSchedules.Save_Schedule_Data_In_Eeprom > 90)
    b034:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    b038:	8b 35       	cpi	r24, 0x5B	; 91
    b03a:	98 f4       	brcc	.+38     	; 0xb062 <_Z20Schedules_Monitoringv+0x70e>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
    b03c:	80 91 d6 0b 	lds	r24, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    b040:	84 32       	cpi	r24, 0x24	; 36
    b042:	98 f0       	brcs	.+38     	; 0xb06a <_Z20Schedules_Monitoringv+0x716>
    b044:	80 e0       	ldi	r24, 0x00	; 0
    b046:	90 e0       	ldi	r25, 0x00	; 0
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
											{
												if(_sSchedules.Running_Tank[tank_number] == _kON)
    b048:	fc 01       	movw	r30, r24
    b04a:	e2 58       	subi	r30, 0x82	; 130
    b04c:	f4 4f       	sbci	r31, 0xF4	; 244
    b04e:	20 81       	ld	r18, Z
    b050:	21 30       	cpi	r18, 0x01	; 1
    b052:	09 f4       	brne	.+2      	; 0xb056 <_Z20Schedules_Monitoringv+0x702>
												{
													number_of_running_tanks++;
    b054:	cf 5f       	subi	r28, 0xFF	; 255
    b056:	01 96       	adiw	r24, 0x01	; 1
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    b058:	83 30       	cpi	r24, 0x03	; 3
    b05a:	91 05       	cpc	r25, r1
    b05c:	a9 f7       	brne	.-22     	; 0xb048 <_Z20Schedules_Monitoringv+0x6f4>
												if(_sSchedules.Running_Tank[tank_number] == _kON)
												{
													number_of_running_tanks++;
												}
											}
											if(number_of_running_tanks > 0)
    b05e:	cc 23       	and	r28, r28
    b060:	21 f0       	breq	.+8      	; 0xb06a <_Z20Schedules_Monitoringv+0x716>
											{
												_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    b062:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
												_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b066:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
											}
										}
									}
									
									/* while running schedule check the time and compare with schedule time with that plot  */
									if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1]
    b06a:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    b06e:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    b072:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b076:	f0 e0       	ldi	r31, 0x00	; 0
    b078:	ee 0f       	add	r30, r30
    b07a:	ff 1f       	adc	r31, r31
    b07c:	e4 5e       	subi	r30, 0xE4	; 228
    b07e:	f6 4f       	sbci	r31, 0xF6	; 246
    b080:	87 8d       	ldd	r24, Z+31	; 0x1f
    b082:	90 a1       	ldd	r25, Z+32	; 0x20
									||  Check_for_no_repeat != 0)
    b084:	82 17       	cp	r24, r18
    b086:	93 07       	cpc	r25, r19
    b088:	18 f0       	brcs	.+6      	; 0xb090 <_Z20Schedules_Monitoringv+0x73c>
    b08a:	dd 23       	and	r29, r29
    b08c:	09 f4       	brne	.+2      	; 0xb090 <_Z20Schedules_Monitoringv+0x73c>
    b08e:	5f c0       	rjmp	.+190    	; 0xb14e <_Z20Schedules_Monitoringv+0x7fa>
									{
										_sRuble_Parameters.Last_Irrigating_Schedule = _sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    b090:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b094:	f0 e0       	ldi	r31, 0x00	; 0
    b096:	e7 59       	subi	r30, 0x97	; 151
    b098:	f6 4f       	sbci	r31, 0xF6	; 246
    b09a:	80 81       	ld	r24, Z
    b09c:	80 93 7a 14 	sts	0x147A, r24	; 0x80147a <_sRuble_Parameters+0xcc>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b0a0:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										Serial.println("time over");
    b0a4:	64 e1       	ldi	r22, 0x14	; 20
    b0a6:	73 e0       	ldi	r23, 0x03	; 3
    b0a8:	86 ec       	ldi	r24, 0xC6	; 198
    b0aa:	94 e1       	ldi	r25, 0x14	; 20
    b0ac:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b0b0:	83 e0       	ldi	r24, 0x03	; 3
    b0b2:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b0b6:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    b0ba:	83 e0       	ldi	r24, 0x03	; 3
    b0bc:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    b0c0:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    b0c4:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    b0c8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
										if(Check_for_no_repeat != 1)
    b0cc:	d1 30       	cpi	r29, 0x01	; 1
    b0ce:	09 f4       	brne	.+2      	; 0xb0d2 <_Z20Schedules_Monitoringv+0x77e>
    b0d0:	27 c1       	rjmp	.+590    	; 0xb320 <_Z20Schedules_Monitoringv+0x9cc>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b0d2:	81 30       	cpi	r24, 0x01	; 1
    b0d4:	51 f4       	brne	.+20     	; 0xb0ea <_Z20Schedules_Monitoringv+0x796>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.//// :");
    b0d6:	6a e2       	ldi	r22, 0x2A	; 42
    b0d8:	76 e1       	ldi	r23, 0x16	; 22
    b0da:	86 ec       	ldi	r24, 0xC6	; 198
    b0dc:	94 e1       	ldi	r25, 0x14	; 20
    b0de:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b0e2:	86 ec       	ldi	r24, 0xC6	; 198
    b0e4:	94 e1       	ldi	r25, 0x14	; 20
    b0e6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
    b0ea:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b0ee:	f0 e0       	ldi	r31, 0x00	; 0
    b0f0:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b0f4:	e8 58       	subi	r30, 0x88	; 136
    b0f6:	f6 4f       	sbci	r31, 0xF6	; 246
    b0f8:	80 83       	st	Z, r24
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
    b0fa:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b0fe:	f0 e0       	ldi	r31, 0x00	; 0
    b100:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    b104:	e9 57       	subi	r30, 0x79	; 121
    b106:	f6 4f       	sbci	r31, 0xF6	; 246
    b108:	80 83       	st	Z, r24
    b10a:	20 e0       	ldi	r18, 0x00	; 0
    b10c:	30 e0       	ldi	r19, 0x00	; 0
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
											{
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    b10e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b112:	90 e0       	ldi	r25, 0x00	; 0
    b114:	01 97       	sbiw	r24, 0x01	; 1
    b116:	fc 01       	movw	r30, r24
    b118:	ee 0f       	add	r30, r30
    b11a:	ff 1f       	adc	r31, r31
    b11c:	e8 0f       	add	r30, r24
    b11e:	f9 1f       	adc	r31, r25
    b120:	e2 0f       	add	r30, r18
    b122:	f3 1f       	adc	r31, r19
    b124:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b128:	90 e0       	ldi	r25, 0x00	; 0
    b12a:	ee 0f       	add	r30, r30
    b12c:	ff 1f       	adc	r31, r31
    b12e:	e5 5e       	subi	r30, 0xE5	; 229
    b130:	f4 4f       	sbci	r31, 0xF4	; 244
    b132:	91 83       	std	Z+1, r25	; 0x01
    b134:	80 83       	st	Z, r24
    b136:	2f 5f       	subi	r18, 0xFF	; 255
    b138:	3f 4f       	sbci	r19, 0xFF	; 255
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
    b13a:	23 30       	cpi	r18, 0x03	; 3
    b13c:	31 05       	cpc	r19, r1
    b13e:	39 f7       	brne	.-50     	; 0xb10e <_Z20Schedules_Monitoringv+0x7ba>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
    b140:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b144:	81 30       	cpi	r24, 0x01	; 1
    b146:	09 f4       	brne	.+2      	; 0xb14a <_Z20Schedules_Monitoringv+0x7f6>
    b148:	2c c1       	rjmp	.+600    	; 0xb3a2 <_Z20Schedules_Monitoringv+0xa4e>
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
											} // 22/8/2023
										}
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b14a:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
									
									if(_sPump_Parameter.Irrigation_Status /*||
    b14e:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    b152:	88 23       	and	r24, r24
    b154:	09 f4       	brne	.+2      	; 0xb158 <_Z20Schedules_Monitoringv+0x804>
    b156:	40 c0       	rjmp	.+128    	; 0xb1d8 <_Z20Schedules_Monitoringv+0x884>
									(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status != _kRESET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation != _kRESET)*/)
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    b158:	0e 94 95 c1 	call	0x1832a	; 0x1832a <_Z15Stop_Irrigationv>
    b15c:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b160:	81 11       	cpse	r24, r1
    b162:	05 c0       	rjmp	.+10     	; 0xb16e <_Z20Schedules_Monitoringv+0x81a>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b164:	91 30       	cpi	r25, 0x01	; 1
    b166:	79 f4       	brne	.+30     	; 0xb186 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 4..................");
    b168:	65 e6       	ldi	r22, 0x65	; 101
    b16a:	75 e1       	ldi	r23, 0x15	; 21
    b16c:	04 c0       	rjmp	.+8      	; 0xb176 <_Z20Schedules_Monitoringv+0x822>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b16e:	91 30       	cpi	r25, 0x01	; 1
    b170:	51 f4       	brne	.+20     	; 0xb186 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 5...................");
    b172:	67 e4       	ldi	r22, 0x47	; 71
    b174:	75 e1       	ldi	r23, 0x15	; 21
    b176:	86 ec       	ldi	r24, 0xC6	; 198
    b178:	94 e1       	ldi	r25, 0x14	; 20
    b17a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b17e:	86 ec       	ldi	r24, 0xC6	; 198
    b180:	94 e1       	ldi	r25, 0x14	; 20
    b182:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											if(_sPump_Parameter.Irrigation_Status)
    b186:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    b18a:	88 23       	and	r24, r24
    b18c:	89 f0       	breq	.+34     	; 0xb1b0 <_Z20Schedules_Monitoringv+0x85c>
											{
												if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    b18e:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    b192:	81 30       	cpi	r24, 0x01	; 1
    b194:	39 f4       	brne	.+14     	; 0xb1a4 <_Z20Schedules_Monitoringv+0x850>
    b196:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    b19a:	81 30       	cpi	r24, 0x01	; 1
    b19c:	19 f4       	brne	.+6      	; 0xb1a4 <_Z20Schedules_Monitoringv+0x850>
												{
													_sSchedules.Scheduler_Retry_Timer = 4*60;
    b19e:	80 ef       	ldi	r24, 0xF0	; 240
    b1a0:	90 e0       	ldi	r25, 0x00	; 0
    b1a2:	02 c0       	rjmp	.+4      	; 0xb1a8 <_Z20Schedules_Monitoringv+0x854>
												}
												else
												{
													_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b1a4:	88 e5       	ldi	r24, 0x58	; 88
    b1a6:	92 e0       	ldi	r25, 0x02	; 2
    b1a8:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b1ac:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											}
											else
											{
												//flush_running_status = _kSET;
											}
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b1b0:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b1b4:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b1b8:	83 e0       	ldi	r24, 0x03	; 3
    b1ba:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b1be:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    b1c2:	83 e0       	ldi	r24, 0x03	; 3
    b1c4:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b1c8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b1cc:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										
										_sSchedules.Schedule_Are_Started = _kRESET;
    b1d0:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    b1d4:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
									}
									
									if(_sRuble_Parameters.Switch_To_Battery == _eELECTRICITY_IS_NOT_THERE)
    b1d8:	80 91 ab 14 	lds	r24, 0x14AB	; 0x8014ab <_sRuble_Parameters+0xfd>
    b1dc:	81 11       	cpse	r24, r1
    b1de:	55 c3       	rjmp	.+1706   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    b1e0:	0e 94 95 c1 	call	0x1832a	; 0x1832a <_Z15Stop_Irrigationv>
    b1e4:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b1e8:	81 11       	cpse	r24, r1
    b1ea:	05 c0       	rjmp	.+10     	; 0xb1f6 <_Z20Schedules_Monitoringv+0x8a2>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b1ec:	91 30       	cpi	r25, 0x01	; 1
    b1ee:	79 f4       	brne	.+30     	; 0xb20e <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 6...................");
    b1f0:	69 e2       	ldi	r22, 0x29	; 41
    b1f2:	75 e1       	ldi	r23, 0x15	; 21
    b1f4:	04 c0       	rjmp	.+8      	; 0xb1fe <_Z20Schedules_Monitoringv+0x8aa>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b1f6:	91 30       	cpi	r25, 0x01	; 1
    b1f8:	51 f4       	brne	.+20     	; 0xb20e <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 7..............................");
    b1fa:	60 e0       	ldi	r22, 0x00	; 0
    b1fc:	75 e1       	ldi	r23, 0x15	; 21
    b1fe:	86 ec       	ldi	r24, 0xC6	; 198
    b200:	94 e1       	ldi	r25, 0x14	; 20
    b202:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b206:	86 ec       	ldi	r24, 0xC6	; 198
    b208:	94 e1       	ldi	r25, 0x14	; 20
    b20a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b20e:	88 e5       	ldi	r24, 0x58	; 88
    b210:	92 e0       	ldi	r25, 0x02	; 2
    b212:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b216:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b21a:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    b21e:	0e 94 b2 32 	call	0x6564	; 0x6564 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b222:	83 e0       	ldi	r24, 0x03	; 3
    b224:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    b228:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b22c:	83 e0       	ldi	r24, 0x03	; 3
    b22e:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    b232:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b236:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Schedule_Are_Started = _kRESET;
    b23a:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    b23e:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
    b242:	23 c3       	rjmp	.+1606   	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									}
								}
								else
								{
									_sRuble_Parameters.Irrigating_Plot =_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    b244:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    b248:	f0 e0       	ldi	r31, 0x00	; 0
    b24a:	e7 59       	subi	r30, 0x97	; 151
    b24c:	f6 4f       	sbci	r31, 0xF6	; 246
    b24e:	80 81       	ld	r24, Z
    b250:	80 93 1e 14 	sts	0x141E, r24	; 0x80141e <_sRuble_Parameters+0x70>
									//_sRuble_Parameters.Pump_Selected_For_Irrigation = _sSchedules.Pump_Selected_For_Schedule;
									_sRuble_Parameters.Pump_Selected_For_Irrigation = _sRuble_Parameters.Pump_Selected_For_Irrigation;
									if(!Start_Irrigation())
    b254:	0e 94 51 c5 	call	0x18aa2	; 0x18aa2 <_Z16Start_Irrigationv>
    b258:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b25c:	81 11       	cpse	r24, r1
    b25e:	22 c0       	rjmp	.+68     	; 0xb2a4 <_Z20Schedules_Monitoringv+0x950>
									{
										/* what should happen if irrigation doesn't start */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b260:	91 30       	cpi	r25, 0x01	; 1
    b262:	51 f4       	brne	.+20     	; 0xb278 <_Z20Schedules_Monitoringv+0x924>
										{
											_kSERAIL_MON_WRITE("sc enter 8...........................");
    b264:	6a ed       	ldi	r22, 0xDA	; 218
    b266:	74 e1       	ldi	r23, 0x14	; 20
    b268:	86 ec       	ldi	r24, 0xC6	; 198
    b26a:	94 e1       	ldi	r25, 0x14	; 20
    b26c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b270:	86 ec       	ldi	r24, 0xC6	; 198
    b272:	94 e1       	ldi	r25, 0x14	; 20
    b274:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    b278:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;  // 15/09/2023
    b27c:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										
										if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    b280:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    b284:	81 30       	cpi	r24, 0x01	; 1
    b286:	39 f4       	brne	.+14     	; 0xb296 <_Z20Schedules_Monitoringv+0x942>
    b288:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    b28c:	81 30       	cpi	r24, 0x01	; 1
    b28e:	19 f4       	brne	.+6      	; 0xb296 <_Z20Schedules_Monitoringv+0x942>
										{
											_sSchedules.Scheduler_Retry_Timer = 4*60;
    b290:	80 ef       	ldi	r24, 0xF0	; 240
    b292:	90 e0       	ldi	r25, 0x00	; 0
    b294:	02 c0       	rjmp	.+4      	; 0xb29a <_Z20Schedules_Monitoringv+0x946>
										}
										else
										{
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    b296:	88 e5       	ldi	r24, 0x58	; 88
    b298:	92 e0       	ldi	r25, 0x02	; 2
    b29a:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    b29e:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    b2a2:	fa cc       	rjmp	.-1548   	; 0xac98 <_Z20Schedules_Monitoringv+0x344>
										
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										irrigation_Start_Set = _kSET;
    b2a4:	10 93 1b 09 	sts	0x091B, r17	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b2a8:	91 30       	cpi	r25, 0x01	; 1
    b2aa:	51 f4       	brne	.+20     	; 0xb2c0 <_Z20Schedules_Monitoringv+0x96c>
										{
											_kSERAIL_MON_WRITE("sc enter 9");
    b2ac:	6f ec       	ldi	r22, 0xCF	; 207
    b2ae:	74 e1       	ldi	r23, 0x14	; 20
    b2b0:	86 ec       	ldi	r24, 0xC6	; 198
    b2b2:	94 e1       	ldi	r25, 0x14	; 20
    b2b4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b2b8:	86 ec       	ldi	r24, 0xC6	; 198
    b2ba:	94 e1       	ldi	r25, 0x14	; 20
    b2bc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Pump_On_In_Scheduler = _kSET;   /* pump on by the scheduler */
    b2c0:	81 e0       	ldi	r24, 0x01	; 1
    b2c2:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;
    b2c6:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b2ca:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b2ce:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
										_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b2d2:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    b2d6:	80 93 d9 0b 	sts	0x0BD9, r24	; 0x800bd9 <_sSchedules+0x2bb>
										_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;						
    b2da:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b2de:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b2e2:	90 93 db 0b 	sts	0x0BDB, r25	; 0x800bdb <_sSchedules+0x2bd>
    b2e6:	80 93 da 0b 	sts	0x0BDA, r24	; 0x800bda <_sSchedules+0x2bc>
										
										for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b2ea:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <_sSchedules+0x264>
    b2ee:	90 91 83 0b 	lds	r25, 0x0B83	; 0x800b83 <_sSchedules+0x265>
    b2f2:	90 93 dd 0b 	sts	0x0BDD, r25	; 0x800bdd <_sSchedules+0x2bf>
    b2f6:	80 93 dc 0b 	sts	0x0BDC, r24	; 0x800bdc <_sSchedules+0x2be>
    b2fa:	80 91 84 0b 	lds	r24, 0x0B84	; 0x800b84 <_sSchedules+0x266>
    b2fe:	90 91 85 0b 	lds	r25, 0x0B85	; 0x800b85 <_sSchedules+0x267>
    b302:	90 93 df 0b 	sts	0x0BDF, r25	; 0x800bdf <_sSchedules+0x2c1>
    b306:	80 93 de 0b 	sts	0x0BDE, r24	; 0x800bde <_sSchedules+0x2c0>
    b30a:	80 91 86 0b 	lds	r24, 0x0B86	; 0x800b86 <_sSchedules+0x268>
    b30e:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    b312:	90 93 e1 0b 	sts	0x0BE1, r25	; 0x800be1 <_sSchedules+0x2c3>
    b316:	80 93 e0 0b 	sts	0x0BE0, r24	; 0x800be0 <_sSchedules+0x2c2>
										}
																					
										Set_Trigger_Time();								
    b31a:	0e 94 2c 4a 	call	0x9458	; 0x9458 <_Z16Set_Trigger_Timev>
    b31e:	bc cc       	rjmp	.-1672   	; 0xac98 <_Z20Schedules_Monitoringv+0x344>
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
											}
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b320:	81 30       	cpi	r24, 0x01	; 1
    b322:	51 f4       	brne	.+20     	; 0xb338 <_Z20Schedules_Monitoringv+0x9e4>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0//// :");
    b324:	66 ef       	ldi	r22, 0xF6	; 246
    b326:	75 e1       	ldi	r23, 0x15	; 21
    b328:	86 ec       	ldi	r24, 0xC6	; 198
    b32a:	94 e1       	ldi	r25, 0x14	; 20
    b32c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b330:	86 ec       	ldi	r24, 0xC6	; 198
    b332:	94 e1       	ldi	r25, 0x14	; 20
    b334:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											if(Check_for_no_repeat == 1)
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b338:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b33c:	81 30       	cpi	r24, 0x01	; 1
    b33e:	51 f4       	brne	.+20     	; 0xb354 <_Z20Schedules_Monitoringv+0xa00>
												{
													_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0.0//// :");
    b340:	60 ec       	ldi	r22, 0xC0	; 192
    b342:	75 e1       	ldi	r23, 0x15	; 21
    b344:	86 ec       	ldi	r24, 0xC6	; 198
    b346:	94 e1       	ldi	r25, 0x14	; 20
    b348:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b34c:	86 ec       	ldi	r24, 0xC6	; 198
    b34e:	94 e1       	ldi	r25, 0x14	; 20
    b350:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
												}
												_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    b354:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
												_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    b358:	81 e0       	ldi	r24, 0x01	; 1
    b35a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
												_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    b35e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
												
												if(_sSchedules.Schedule_Are_Started == _kSET)
    b362:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    b366:	81 30       	cpi	r24, 0x01	; 1
    b368:	81 f4       	brne	.+32     	; 0xb38a <_Z20Schedules_Monitoringv+0xa36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b36a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b36e:	81 30       	cpi	r24, 0x01	; 1
    b370:	51 f4       	brne	.+20     	; 0xb386 <_Z20Schedules_Monitoringv+0xa32>
													{
														_kSERAIL_MON_WRITE("sc enter 11");
    b372:	64 eb       	ldi	r22, 0xB4	; 180
    b374:	75 e1       	ldi	r23, 0x15	; 21
    b376:	86 ec       	ldi	r24, 0xC6	; 198
    b378:	94 e1       	ldi	r25, 0x14	; 20
    b37a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b37e:	86 ec       	ldi	r24, 0xC6	; 198
    b380:	94 e1       	ldi	r25, 0x14	; 20
    b382:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
													}
													_sSchedules.Schedule_Are_Started = _kRESET;
    b386:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
													/* save in eeprom */
												}
												_sSchedules.all_schedule_done_flag = _eSET;
    b38a:	82 e0       	ldi	r24, 0x02	; 2
    b38c:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    b390:	80 91 ee 0b 	lds	r24, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    b394:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    b398:	80 91 ef 0b 	lds	r24, 0x0BEF	; 0x800bef <_sSchedules+0x2d1>
    b39c:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
    b3a0:	cf ce       	rjmp	.-610    	; 0xb140 <_Z20Schedules_Monitoringv+0x7ec>
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
										{
											_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    b3a2:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b3a6:	80 93 ee 0b 	sts	0x0BEE, r24	; 0x800bee <_sSchedules+0x2d0>
											_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    b3aa:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    b3ae:	80 93 ef 0b 	sts	0x0BEF, r24	; 0x800bef <_sSchedules+0x2d1>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b3b2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b3b6:	81 30       	cpi	r24, 0x01	; 1
    b3b8:	91 f4       	brne	.+36     	; 0xb3de <_Z20Schedules_Monitoringv+0xa8a>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0//// :");
    b3ba:	62 e8       	ldi	r22, 0x82	; 130
    b3bc:	75 e1       	ldi	r23, 0x15	; 21
    b3be:	86 ec       	ldi	r24, 0xC6	; 198
    b3c0:	94 e1       	ldi	r25, 0x14	; 20
    b3c2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    b3c6:	60 91 ee 0b 	lds	r22, 0x0BEE	; 0x800bee <_sSchedules+0x2d0>
    b3ca:	4a e0       	ldi	r20, 0x0A	; 10
    b3cc:	50 e0       	ldi	r21, 0x00	; 0
    b3ce:	86 ec       	ldi	r24, 0xC6	; 198
    b3d0:	94 e1       	ldi	r25, 0x14	; 20
    b3d2:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
												_kSERIAL_MON_CLEAR();
    b3d6:	86 ec       	ldi	r24, 0xC6	; 198
    b3d8:	94 e1       	ldi	r25, 0x14	; 20
    b3da:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											Return_Calculated_Previous_Day_Date(1);	
    b3de:	81 e0       	ldi	r24, 0x01	; 1
    b3e0:	0e 94 6d 33 	call	0x66da	; 0x66da <_Z35Return_Calculated_Previous_Day_Dateh>
    b3e4:	81 e0       	ldi	r24, 0x01	; 1
    b3e6:	90 e0       	ldi	r25, 0x00	; 0
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    b3e8:	40 91 ec 0b 	lds	r20, 0x0BEC	; 0x800bec <_sSchedules+0x2ce>
    b3ec:	9c 01       	movw	r18, r24
    b3ee:	22 5e       	subi	r18, 0xE2	; 226
    b3f0:	36 4f       	sbci	r19, 0xF6	; 246
    b3f2:	f9 01       	movw	r30, r18
    b3f4:	e5 5a       	subi	r30, 0xA5	; 165
    b3f6:	ff 4f       	sbci	r31, 0xFF	; 255
    b3f8:	40 83       	st	Z, r20
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    b3fa:	40 91 ed 0b 	lds	r20, 0x0BED	; 0x800bed <_sSchedules+0x2cf>
    b3fe:	3f 96       	adiw	r30, 0x0f	; 15
    b400:	40 83       	st	Z, r20
    b402:	01 96       	adiw	r24, 0x01	; 1
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
												_kSERIAL_MON_CLEAR();
											}
											Return_Calculated_Previous_Day_Date(1);	
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    b404:	8e 30       	cpi	r24, 0x0E	; 14
    b406:	91 05       	cpc	r25, r1
    b408:	79 f7       	brne	.-34     	; 0xb3e8 <_Z20Schedules_Monitoringv+0xa94>
    b40a:	9f ce       	rjmp	.-706    	; 0xb14a <_Z20Schedules_Monitoringv+0x7f6>
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b40c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b410:	81 30       	cpi	r24, 0x01	; 1
    b412:	51 f4       	brne	.+20     	; 0xb428 <_Z20Schedules_Monitoringv+0xad4>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2.1");
    b414:	69 e5       	ldi	r22, 0x59	; 89
    b416:	74 e1       	ldi	r23, 0x14	; 20
    b418:	86 ec       	ldi	r24, 0xC6	; 198
    b41a:	94 e1       	ldi	r25, 0x14	; 20
    b41c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b420:	86 ec       	ldi	r24, 0xC6	; 198
    b422:	94 e1       	ldi	r25, 0x14	; 20
    b424:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									}
									_sSchedules.Trigger_Reset = _kRESET;
    b428:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
    b42c:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
    b430:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
    b434:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
    b438:	dd cc       	rjmp	.-1606   	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
								}
								else
								{
									if(_sSchedules.Trigger_Time != 0)
    b43a:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b43e:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b442:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b446:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b44a:	89 2b       	or	r24, r25
    b44c:	8a 2b       	or	r24, r26
    b44e:	8b 2b       	or	r24, r27
    b450:	09 f4       	brne	.+2      	; 0xb454 <_Z20Schedules_Monitoringv+0xb00>
    b452:	d0 cc       	rjmp	.-1632   	; 0xadf4 <_Z20Schedules_Monitoringv+0x4a0>
									{
										if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    b454:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b458:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b45c:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b460:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b464:	8c 32       	cpi	r24, 0x2C	; 44
    b466:	91 40       	sbci	r25, 0x01	; 1
    b468:	a1 05       	cpc	r26, r1
    b46a:	b1 05       	cpc	r27, r1
    b46c:	08 f0       	brcs	.+2      	; 0xb470 <_Z20Schedules_Monitoringv+0xb1c>
    b46e:	ae cc       	rjmp	.-1700   	; 0xadcc <_Z20Schedules_Monitoringv+0x478>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    b470:	87 e1       	ldi	r24, 0x17	; 23
    b472:	90 e5       	ldi	r25, 0x50	; 80
    b474:	a1 e0       	ldi	r26, 0x01	; 1
    b476:	b0 e0       	ldi	r27, 0x00	; 0
    b478:	b5 cc       	rjmp	.-1686   	; 0xade4 <_Z20Schedules_Monitoringv+0x490>
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b47a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b47e:	81 30       	cpi	r24, 0x01	; 1
    b480:	51 f4       	brne	.+20     	; 0xb496 <_Z20Schedules_Monitoringv+0xb42>
									{
										_kSERAIL_MON_WRITE("sc enter 16");
    b482:	62 ef       	ldi	r22, 0xF2	; 242
    b484:	73 e1       	ldi	r23, 0x13	; 19
    b486:	86 ec       	ldi	r24, 0xC6	; 198
    b488:	94 e1       	ldi	r25, 0x14	; 20
    b48a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b48e:	86 ec       	ldi	r24, 0xC6	; 198
    b490:	94 e1       	ldi	r25, 0x14	; 20
    b492:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									}
									if((_sRuble_Parameters.Current_Time_In_Sec >= _sSchedules.Trigger_Time) &&(_sRuble_Parameters.Current_Time_In_Sec < _sSchedules.Trigger_Reset))
    b496:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b49a:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b49e:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b4a2:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b4a6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b4aa:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b4ae:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b4b2:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b4b6:	84 17       	cp	r24, r20
    b4b8:	95 07       	cpc	r25, r21
    b4ba:	a6 07       	cpc	r26, r22
    b4bc:	b7 07       	cpc	r27, r23
    b4be:	08 f4       	brcc	.+2      	; 0xb4c2 <_Z20Schedules_Monitoringv+0xb6e>
    b4c0:	e4 c1       	rjmp	.+968    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    b4c2:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b4c6:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b4ca:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b4ce:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b4d2:	84 17       	cp	r24, r20
    b4d4:	95 07       	cpc	r25, r21
    b4d6:	a6 07       	cpc	r26, r22
    b4d8:	b7 07       	cpc	r27, r23
    b4da:	08 f0       	brcs	.+2      	; 0xb4de <_Z20Schedules_Monitoringv+0xb8a>
    b4dc:	d6 c1       	rjmp	.+940    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b4de:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b4e2:	81 30       	cpi	r24, 0x01	; 1
    b4e4:	51 f4       	brne	.+20     	; 0xb4fa <_Z20Schedules_Monitoringv+0xba6>
										{
											_kSERAIL_MON_WRITE("sc enter 17");
    b4e6:	66 ee       	ldi	r22, 0xE6	; 230
    b4e8:	73 e1       	ldi	r23, 0x13	; 19
    b4ea:	86 ec       	ldi	r24, 0xC6	; 198
    b4ec:	94 e1       	ldi	r25, 0x14	; 20
    b4ee:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b4f2:	86 ec       	ldi	r24, 0xC6	; 198
    b4f4:	94 e1       	ldi	r25, 0x14	; 20
    b4f6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										/* set the trigger time for ON */
										Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b4fa:	6c 2f       	mov	r22, r28
    b4fc:	81 e0       	ldi	r24, 0x01	; 1
    b4fe:	0e 94 4d 47 	call	0x8e9a	; 0x8e9a <_Z34Check_Time_For_Schedule_To_Triggerhh>
    b502:	ca cb       	rjmp	.-2156   	; 0xac98 <_Z20Schedules_Monitoringv+0x344>
									check_true_condition = Compare_Trigger_And_Reset_Time();
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
									{
										/* no need to check next date */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b504:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b508:	81 30       	cpi	r24, 0x01	; 1
    b50a:	51 f4       	brne	.+20     	; 0xb520 <_Z20Schedules_Monitoringv+0xbcc>
										{
											_kSERAIL_MON_WRITE("sc enter 26");
    b50c:	6a ed       	ldi	r22, 0xDA	; 218
    b50e:	73 e1       	ldi	r23, 0x13	; 19
    b510:	86 ec       	ldi	r24, 0xC6	; 198
    b512:	94 e1       	ldi	r25, 0x14	; 20
    b514:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b518:	86 ec       	ldi	r24, 0xC6	; 198
    b51a:	94 e1       	ldi	r25, 0x14	; 20
    b51c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b520:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b524:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b528:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b52c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b530:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b534:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b538:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b53c:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b540:	84 17       	cp	r24, r20
    b542:	95 07       	cpc	r25, r21
    b544:	a6 07       	cpc	r26, r22
    b546:	b7 07       	cpc	r27, r23
    b548:	68 f0       	brcs	.+26     	; 0xb564 <_Z20Schedules_Monitoringv+0xc10>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b54a:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b54e:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b552:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b556:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b55a:	48 17       	cp	r20, r24
    b55c:	59 07       	cpc	r21, r25
    b55e:	6a 07       	cpc	r22, r26
    b560:	7b 07       	cpc	r23, r27
    b562:	e8 f0       	brcs	.+58     	; 0xb59e <_Z20Schedules_Monitoringv+0xc4a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b564:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b568:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b56c:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b570:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b574:	48 17       	cp	r20, r24
    b576:	59 07       	cpc	r21, r25
    b578:	6a 07       	cpc	r22, r26
    b57a:	7b 07       	cpc	r23, r27
    b57c:	08 f4       	brcc	.+2      	; 0xb580 <_Z20Schedules_Monitoringv+0xc2c>
    b57e:	85 c1       	rjmp	.+778    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b580:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b584:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b588:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b58c:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b590:	84 17       	cp	r24, r20
    b592:	95 07       	cpc	r25, r21
    b594:	a6 07       	cpc	r26, r22
    b596:	b7 07       	cpc	r27, r23
    b598:	08 f4       	brcc	.+2      	; 0xb59c <_Z20Schedules_Monitoringv+0xc48>
    b59a:	78 c0       	rjmp	.+240    	; 0xb68c <_Z20Schedules_Monitoringv+0xd38>
    b59c:	76 c1       	rjmp	.+748    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b59e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b5a2:	81 30       	cpi	r24, 0x01	; 1
    b5a4:	51 f4       	brne	.+20     	; 0xb5ba <_Z20Schedules_Monitoringv+0xc66>
											{
												_kSERAIL_MON_WRITE("sc enter 27");
    b5a6:	6e ec       	ldi	r22, 0xCE	; 206
    b5a8:	73 e1       	ldi	r23, 0x13	; 19
    b5aa:	86 ec       	ldi	r24, 0xC6	; 198
    b5ac:	94 e1       	ldi	r25, 0x14	; 20
    b5ae:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b5b2:	86 ec       	ldi	r24, 0xC6	; 198
    b5b4:	94 e1       	ldi	r25, 0x14	; 20
    b5b6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
    b5ba:	6c 2f       	mov	r22, r28
    b5bc:	65 c0       	rjmp	.+202    	; 0xb688 <_Z20Schedules_Monitoringv+0xd34>
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b5be:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b5c2:	81 30       	cpi	r24, 0x01	; 1
    b5c4:	51 f4       	brne	.+20     	; 0xb5da <_Z20Schedules_Monitoringv+0xc86>
											{
												_kSERAIL_MON_WRITE("sc enter 37");
    b5c6:	66 eb       	ldi	r22, 0xB6	; 182
    b5c8:	73 e1       	ldi	r23, 0x13	; 19
    b5ca:	86 ec       	ldi	r24, 0xC6	; 198
    b5cc:	94 e1       	ldi	r25, 0x14	; 20
    b5ce:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b5d2:	86 ec       	ldi	r24, 0xC6	; 198
    b5d4:	94 e1       	ldi	r25, 0x14	; 20
    b5d6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											if(_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec)
    b5da:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    b5de:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    b5e2:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    b5e6:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    b5ea:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b5ee:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b5f2:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b5f6:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b5fa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b5fe:	04 17       	cp	r16, r20
    b600:	15 07       	cpc	r17, r21
    b602:	26 07       	cpc	r18, r22
    b604:	37 07       	cpc	r19, r23
    b606:	08 f4       	brcc	.+2      	; 0xb60a <_Z20Schedules_Monitoringv+0xcb6>
    b608:	57 c0       	rjmp	.+174    	; 0xb6b8 <_Z20Schedules_Monitoringv+0xd64>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b60a:	81 30       	cpi	r24, 0x01	; 1
    b60c:	51 f4       	brne	.+20     	; 0xb622 <_Z20Schedules_Monitoringv+0xcce>
												{
													_kSERAIL_MON_WRITE("sc enter 38");
    b60e:	6a ea       	ldi	r22, 0xAA	; 170
    b610:	73 e1       	ldi	r23, 0x13	; 19
    b612:	86 ec       	ldi	r24, 0xC6	; 198
    b614:	94 e1       	ldi	r25, 0x14	; 20
    b616:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b61a:	86 ec       	ldi	r24, 0xC6	; 198
    b61c:	94 e1       	ldi	r25, 0x14	; 20
    b61e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b622:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b626:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b62a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b62e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b632:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b636:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b63a:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b63e:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b642:	84 17       	cp	r24, r20
    b644:	95 07       	cpc	r25, r21
    b646:	a6 07       	cpc	r26, r22
    b648:	b7 07       	cpc	r27, r23
    b64a:	08 f4       	brcc	.+2      	; 0xb64e <_Z20Schedules_Monitoringv+0xcfa>
    b64c:	65 c0       	rjmp	.+202    	; 0xb718 <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b64e:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b652:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b656:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b65a:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 38");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b65e:	48 17       	cp	r20, r24
    b660:	59 07       	cpc	r21, r25
    b662:	6a 07       	cpc	r22, r26
    b664:	7b 07       	cpc	r23, r27
    b666:	08 f0       	brcs	.+2      	; 0xb66a <_Z20Schedules_Monitoringv+0xd16>
    b668:	57 c0       	rjmp	.+174    	; 0xb718 <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b66a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b66e:	81 30       	cpi	r24, 0x01	; 1
    b670:	51 f4       	brne	.+20     	; 0xb686 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 39");
    b672:	6e e9       	ldi	r22, 0x9E	; 158
    b674:	73 e1       	ldi	r23, 0x13	; 19
    b676:	86 ec       	ldi	r24, 0xC6	; 198
    b678:	94 e1       	ldi	r25, 0x14	; 20
    b67a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b67e:	86 ec       	ldi	r24, 0xC6	; 198
    b680:	94 e1       	ldi	r25, 0x14	; 20
    b682:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b686:	60 e0       	ldi	r22, 0x00	; 0
    b688:	81 e0       	ldi	r24, 0x01	; 1
    b68a:	10 c0       	rjmp	.+32     	; 0xb6ac <_Z20Schedules_Monitoringv+0xd58>
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
										{
											/* set the trigger time for ON */
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b68c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b690:	81 30       	cpi	r24, 0x01	; 1
    b692:	51 f4       	brne	.+20     	; 0xb6a8 <_Z20Schedules_Monitoringv+0xd54>
											{
												_kSERAIL_MON_WRITE("sc enter 32");
    b694:	62 ec       	ldi	r22, 0xC2	; 194
    b696:	73 e1       	ldi	r23, 0x13	; 19
    b698:	86 ec       	ldi	r24, 0xC6	; 198
    b69a:	94 e1       	ldi	r25, 0x14	; 20
    b69c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b6a0:	86 ec       	ldi	r24, 0xC6	; 198
    b6a2:	94 e1       	ldi	r25, 0x14	; 20
    b6a4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b6a8:	6c 2f       	mov	r22, r28
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b6aa:	82 e0       	ldi	r24, 0x02	; 2
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b6ac:	df 91       	pop	r29
    b6ae:	cf 91       	pop	r28
    b6b0:	1f 91       	pop	r17
    b6b2:	0f 91       	pop	r16
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b6b4:	0c 94 4d 47 	jmp	0x8e9a	; 0x8e9a <_Z34Check_Time_For_Schedule_To_Triggerhh>
												}
												
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6b8:	81 30       	cpi	r24, 0x01	; 1
    b6ba:	51 f4       	brne	.+20     	; 0xb6d0 <_Z20Schedules_Monitoringv+0xd7c>
												{
													_kSERAIL_MON_WRITE("sc enter 49");
    b6bc:	66 e8       	ldi	r22, 0x86	; 134
    b6be:	73 e1       	ldi	r23, 0x13	; 19
    b6c0:	86 ec       	ldi	r24, 0xC6	; 198
    b6c2:	94 e1       	ldi	r25, 0x14	; 20
    b6c4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b6c8:	86 ec       	ldi	r24, 0xC6	; 198
    b6ca:	94 e1       	ldi	r25, 0x14	; 20
    b6cc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b6d0:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b6d4:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b6d8:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b6dc:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b6e0:	80 91 be 13 	lds	r24, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    b6e4:	90 91 bf 13 	lds	r25, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    b6e8:	a0 91 c0 13 	lds	r26, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    b6ec:	b0 91 c1 13 	lds	r27, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    b6f0:	84 17       	cp	r24, r20
    b6f2:	95 07       	cpc	r25, r21
    b6f4:	a6 07       	cpc	r26, r22
    b6f6:	b7 07       	cpc	r27, r23
    b6f8:	08 f4       	brcc	.+2      	; 0xb6fc <_Z20Schedules_Monitoringv+0xda8>
    b6fa:	42 c0       	rjmp	.+132    	; 0xb780 <_Z20Schedules_Monitoringv+0xe2c>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b6fc:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b700:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b704:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b708:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 49");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b70c:	48 17       	cp	r20, r24
    b70e:	59 07       	cpc	r21, r25
    b710:	6a 07       	cpc	r22, r26
    b712:	7b 07       	cpc	r23, r27
    b714:	68 f1       	brcs	.+90     	; 0xb770 <_Z20Schedules_Monitoringv+0xe1c>
    b716:	34 c0       	rjmp	.+104    	; 0xb780 <_Z20Schedules_Monitoringv+0xe2c>
														_kSERIAL_MON_CLEAR();
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b718:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b71c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b720:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b724:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b728:	48 17       	cp	r20, r24
    b72a:	59 07       	cpc	r21, r25
    b72c:	6a 07       	cpc	r22, r26
    b72e:	7b 07       	cpc	r23, r27
    b730:	08 f4       	brcc	.+2      	; 0xb734 <_Z20Schedules_Monitoringv+0xde0>
    b732:	ab c0       	rjmp	.+342    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    b734:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b738:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b73c:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b740:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b744:	84 17       	cp	r24, r20
    b746:	95 07       	cpc	r25, r21
    b748:	a6 07       	cpc	r26, r22
    b74a:	b7 07       	cpc	r27, r23
    b74c:	08 f0       	brcs	.+2      	; 0xb750 <_Z20Schedules_Monitoringv+0xdfc>
    b74e:	9d c0       	rjmp	.+314    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b750:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b754:	81 30       	cpi	r24, 0x01	; 1
    b756:	51 f4       	brne	.+20     	; 0xb76c <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 44");
    b758:	62 e9       	ldi	r22, 0x92	; 146
    b75a:	73 e1       	ldi	r23, 0x13	; 19
    b75c:	86 ec       	ldi	r24, 0xC6	; 198
    b75e:	94 e1       	ldi	r25, 0x14	; 20
    b760:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b764:	86 ec       	ldi	r24, 0xC6	; 198
    b766:	94 e1       	ldi	r25, 0x14	; 20
    b768:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b76c:	60 e0       	ldi	r22, 0x00	; 0
    b76e:	9d cf       	rjmp	.-198    	; 0xb6aa <_Z20Schedules_Monitoringv+0xd56>
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b770:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b774:	81 30       	cpi	r24, 0x01	; 1
    b776:	09 f0       	breq	.+2      	; 0xb77a <_Z20Schedules_Monitoringv+0xe26>
    b778:	86 cf       	rjmp	.-244    	; 0xb686 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 50");
    b77a:	6a e7       	ldi	r22, 0x7A	; 122
    b77c:	73 e1       	ldi	r23, 0x13	; 19
    b77e:	7b cf       	rjmp	.-266    	; 0xb676 <_Z20Schedules_Monitoringv+0xd22>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b780:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b784:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b788:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b78c:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b790:	48 17       	cp	r20, r24
    b792:	59 07       	cpc	r21, r25
    b794:	6a 07       	cpc	r22, r26
    b796:	7b 07       	cpc	r23, r27
    b798:	08 f4       	brcc	.+2      	; 0xb79c <_Z20Schedules_Monitoringv+0xe48>
    b79a:	77 c0       	rjmp	.+238    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
    b79c:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b7a0:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b7a4:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b7a8:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b7ac:	84 17       	cp	r24, r20
    b7ae:	95 07       	cpc	r25, r21
    b7b0:	a6 07       	cpc	r26, r22
    b7b2:	b7 07       	cpc	r27, r23
    b7b4:	08 f0       	brcs	.+2      	; 0xb7b8 <_Z20Schedules_Monitoringv+0xe64>
    b7b6:	69 c0       	rjmp	.+210    	; 0xb88a <_Z20Schedules_Monitoringv+0xf36>
												{
													/* set the trigger time for ON */
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7b8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b7bc:	81 30       	cpi	r24, 0x01	; 1
    b7be:	b1 f6       	brne	.-84     	; 0xb76c <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 55");
    b7c0:	6e e6       	ldi	r22, 0x6E	; 110
    b7c2:	73 e1       	ldi	r23, 0x13	; 19
    b7c4:	cb cf       	rjmp	.-106    	; 0xb75c <_Z20Schedules_Monitoringv+0xe08>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7c6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b7ca:	81 30       	cpi	r24, 0x01	; 1
    b7cc:	51 f4       	brne	.+20     	; 0xb7e2 <_Z20Schedules_Monitoringv+0xe8e>
						{
							_kSERAIL_MON_WRITE("sc enter 62");
    b7ce:	62 e3       	ldi	r22, 0x32	; 50
    b7d0:	73 e1       	ldi	r23, 0x13	; 19
    b7d2:	86 ec       	ldi	r24, 0xC6	; 198
    b7d4:	94 e1       	ldi	r25, 0x14	; 20
    b7d6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    b7da:	86 ec       	ldi	r24, 0xC6	; 198
    b7dc:	94 e1       	ldi	r25, 0x14	; 20
    b7de:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b7e2:	83 e0       	ldi	r24, 0x03	; 3
    b7e4:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <_Z17Doser_Pump_On_Offh>
						Turn_Off_All_Tank_For_Safety();
    b7e8:	0e 94 7f 3d 	call	0x7afe	; 0x7afe <_Z28Turn_Off_All_Tank_For_Safetyv>
						Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b7ec:	83 e0       	ldi	r24, 0x03	; 3
    b7ee:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <_Z17Blower_Monitoringh>
    b7f2:	10 c9       	rjmp	.-3552   	; 0xaa14 <_Z20Schedules_Monitoringv+0xc0>
					_sSchedules.Schedule_Are_Started = _kRESET;
					_sSchedules.all_schedule_done_flag = _kRESET;
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
					{
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    b7f4:	88 23       	and	r24, r24
    b7f6:	09 f4       	brne	.+2      	; 0xb7fa <_Z20Schedules_Monitoringv+0xea6>
    b7f8:	45 c9       	rjmp	.-3446   	; 0xaa84 <_Z20Schedules_Monitoringv+0x130>
						{
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    b7fa:	60 e0       	ldi	r22, 0x00	; 0
    b7fc:	0e 94 62 27 	call	0x4ec4	; 0x4ec4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    b800:	10 92 7a 14 	sts	0x147A, r1	; 0x80147a <_sRuble_Parameters+0xcc>
    b804:	3f c9       	rjmp	.-3458   	; 0xaa84 <_Z20Schedules_Monitoringv+0x130>
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
					{
						/* should add what happen if schedule pause */
						/* in ruble data resume section will be there */
						
						if(_sSchedules.Which_Sheduler_Is_Running)
    b806:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b80a:	88 23       	and	r24, r24
    b80c:	b1 f1       	breq	.+108    	; 0xb87a <_Z20Schedules_Monitoringv+0xf26>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b80e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    b812:	81 30       	cpi	r24, 0x01	; 1
    b814:	51 f4       	brne	.+20     	; 0xb82a <_Z20Schedules_Monitoringv+0xed6>
							{
								_kSERAIL_MON_WRITE("sc enter 61");
    b816:	6e e3       	ldi	r22, 0x3E	; 62
    b818:	73 e1       	ldi	r23, 0x13	; 19
    b81a:	86 ec       	ldi	r24, 0xC6	; 198
    b81c:	94 e1       	ldi	r25, 0x14	; 20
    b81e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b822:	86 ec       	ldi	r24, 0xC6	; 198
    b824:	94 e1       	ldi	r25, 0x14	; 20
    b826:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b82a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b82e:	80 93 d8 0b 	sts	0x0BD8, r24	; 0x800bd8 <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b832:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    b836:	80 93 d9 0b 	sts	0x0BD9, r24	; 0x800bd9 <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;
    b83a:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b83e:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b842:	90 93 db 0b 	sts	0x0BDB, r25	; 0x800bdb <_sSchedules+0x2bd>
    b846:	80 93 da 0b 	sts	0x0BDA, r24	; 0x800bda <_sSchedules+0x2bc>
							
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b84a:	80 91 82 0b 	lds	r24, 0x0B82	; 0x800b82 <_sSchedules+0x264>
    b84e:	90 91 83 0b 	lds	r25, 0x0B83	; 0x800b83 <_sSchedules+0x265>
    b852:	90 93 dd 0b 	sts	0x0BDD, r25	; 0x800bdd <_sSchedules+0x2bf>
    b856:	80 93 dc 0b 	sts	0x0BDC, r24	; 0x800bdc <_sSchedules+0x2be>
    b85a:	80 91 84 0b 	lds	r24, 0x0B84	; 0x800b84 <_sSchedules+0x266>
    b85e:	90 91 85 0b 	lds	r25, 0x0B85	; 0x800b85 <_sSchedules+0x267>
    b862:	90 93 df 0b 	sts	0x0BDF, r25	; 0x800bdf <_sSchedules+0x2c1>
    b866:	80 93 de 0b 	sts	0x0BDE, r24	; 0x800bde <_sSchedules+0x2c0>
    b86a:	80 91 86 0b 	lds	r24, 0x0B86	; 0x800b86 <_sSchedules+0x268>
    b86e:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    b872:	90 93 e1 0b 	sts	0x0BE1, r25	; 0x800be1 <_sSchedules+0x2c3>
    b876:	80 93 e0 0b 	sts	0x0BE0, r24	; 0x800be0 <_sSchedules+0x2c2>
							}
							
							/* ########################## add schedule pause to ruble data topic ############# */
						}
						
						if(_sSchedules.New_Schedules_Occur == _kSET)
    b87a:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    b87e:	81 30       	cpi	r24, 0x01	; 1
    b880:	09 f0       	breq	.+2      	; 0xb884 <_Z20Schedules_Monitoringv+0xf30>
    b882:	bc c8       	rjmp	.-3720   	; 0xa9fc <_Z20Schedules_Monitoringv+0xa8>
						{
							Edited_In_Schedule();
    b884:	0e 94 74 40 	call	0x80e8	; 0x80e8 <_Z18Edited_In_Schedulev>
    b888:	b9 c8       	rjmp	.-3726   	; 0xa9fc <_Z20Schedules_Monitoringv+0xa8>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b88a:	df 91       	pop	r29
    b88c:	cf 91       	pop	r28
    b88e:	1f 91       	pop	r17
    b890:	0f 91       	pop	r16
    b892:	08 95       	ret

0000b894 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>:
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
        return t;
    }
    
    template< typename T > const T &put( int idx, const T &t ){
    b894:	cf 93       	push	r28
    b896:	df 93       	push	r29
    b898:	1f 92       	push	r1
    b89a:	1f 92       	push	r1
    b89c:	cd b7       	in	r28, 0x3d	; 61
    b89e:	de b7       	in	r29, 0x3e	; 62
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b8a0:	60 91 7c 14 	lds	r22, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    b8a4:	8d ea       	ldi	r24, 0xAD	; 173
    b8a6:	9c e0       	ldi	r25, 0x0C	; 12
    b8a8:	9a 83       	std	Y+2, r25	; 0x02
    b8aa:	89 83       	std	Y+1, r24	; 0x01
    b8ac:	ce 01       	movw	r24, r28
    b8ae:	01 96       	adiw	r24, 0x01	; 1
    b8b0:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
        return t;
    }
    b8b4:	8c e7       	ldi	r24, 0x7C	; 124
    b8b6:	94 e1       	ldi	r25, 0x14	; 20
    b8b8:	0f 90       	pop	r0
    b8ba:	0f 90       	pop	r0
    b8bc:	df 91       	pop	r29
    b8be:	cf 91       	pop	r28
    b8c0:	08 95       	ret

0000b8c2 <_Z16Euro_Data_EEPROMh>:
	}
	return 0;
}

void Euro_Data_EEPROM(unsigned char valve_number)
{
    b8c2:	cf 92       	push	r12
    b8c4:	df 92       	push	r13
    b8c6:	ef 92       	push	r14
    b8c8:	ff 92       	push	r15
    b8ca:	0f 93       	push	r16
    b8cc:	1f 93       	push	r17
    b8ce:	cf 93       	push	r28
    b8d0:	df 93       	push	r29
    b8d2:	1f 92       	push	r1
    b8d4:	1f 92       	push	r1
    b8d6:	cd b7       	in	r28, 0x3d	; 61
    b8d8:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
    b8da:	94 e1       	ldi	r25, 0x14	; 20
    b8dc:	89 9f       	mul	r24, r25
    b8de:	90 01       	movw	r18, r0
    b8e0:	11 24       	eor	r1, r1
    b8e2:	69 01       	movw	r12, r18
    b8e4:	e6 e3       	ldi	r30, 0x36	; 54
    b8e6:	ce 1a       	sub	r12, r30
    b8e8:	ec ef       	ldi	r30, 0xFC	; 252
    b8ea:	de 0a       	sbc	r13, r30
    b8ec:	fd e0       	ldi	r31, 0x0D	; 13
    b8ee:	8f 9f       	mul	r24, r31
    b8f0:	80 01       	movw	r16, r0
    b8f2:	11 24       	eor	r1, r1
    b8f4:	0b 5e       	subi	r16, 0xEB	; 235
    b8f6:	13 4f       	sbci	r17, 0xF3	; 243
    b8f8:	79 01       	movw	r14, r18
    b8fa:	89 e2       	ldi	r24, 0x29	; 41
    b8fc:	e8 1a       	sub	r14, r24
    b8fe:	8c ef       	ldi	r24, 0xFC	; 252
    b900:	f8 0a       	sbc	r15, r24
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b902:	f8 01       	movw	r30, r16
    b904:	61 91       	ld	r22, Z+
    b906:	8f 01       	movw	r16, r30
    b908:	da 82       	std	Y+2, r13	; 0x02
    b90a:	c9 82       	std	Y+1, r12	; 0x01
    b90c:	ce 01       	movw	r24, r28
    b90e:	01 96       	adiw	r24, 0x01	; 1
    b910:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    b914:	ff ef       	ldi	r31, 0xFF	; 255
    b916:	cf 1a       	sub	r12, r31
    b918:	df 0a       	sbc	r13, r31
    b91a:	ce 14       	cp	r12, r14
    b91c:	df 04       	cpc	r13, r15
    b91e:	89 f7       	brne	.-30     	; 0xb902 <_Z16Euro_Data_EEPROMh+0x40>
	return;
}
    b920:	0f 90       	pop	r0
    b922:	0f 90       	pop	r0
    b924:	df 91       	pop	r29
    b926:	cf 91       	pop	r28
    b928:	1f 91       	pop	r17
    b92a:	0f 91       	pop	r16
    b92c:	ff 90       	pop	r15
    b92e:	ef 90       	pop	r14
    b930:	df 90       	pop	r13
    b932:	cf 90       	pop	r12
    b934:	08 95       	ret

0000b936 <_Z20Wireless_Pump_EEPROMh>:
	
	return 0;
}

void Wireless_Pump_EEPROM(unsigned char Pump_Number)
{
    b936:	cf 92       	push	r12
    b938:	df 92       	push	r13
    b93a:	ef 92       	push	r14
    b93c:	ff 92       	push	r15
    b93e:	0f 93       	push	r16
    b940:	1f 93       	push	r17
    b942:	cf 93       	push	r28
    b944:	df 93       	push	r29
    b946:	1f 92       	push	r1
    b948:	1f 92       	push	r1
    b94a:	cd b7       	in	r28, 0x3d	; 61
    b94c:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kWIRELESS_PUMP_DATA_SAVE(Pump_Number), _sWireless_Pump_Param[Pump_Number]);
    b94e:	94 e1       	ldi	r25, 0x14	; 20
    b950:	89 9f       	mul	r24, r25
    b952:	90 01       	movw	r18, r0
    b954:	11 24       	eor	r1, r1
    b956:	69 01       	movw	r12, r18
    b958:	e2 e5       	ldi	r30, 0x52	; 82
    b95a:	ce 1a       	sub	r12, r30
    b95c:	e3 ef       	ldi	r30, 0xF3	; 243
    b95e:	de 0a       	sbc	r13, r30
    b960:	fb e0       	ldi	r31, 0x0B	; 11
    b962:	8f 9f       	mul	r24, r31
    b964:	80 01       	movw	r16, r0
    b966:	11 24       	eor	r1, r1
    b968:	0c 50       	subi	r16, 0x0C	; 12
    b96a:	14 4f       	sbci	r17, 0xF4	; 244
    b96c:	79 01       	movw	r14, r18
    b96e:	87 e4       	ldi	r24, 0x47	; 71
    b970:	e8 1a       	sub	r14, r24
    b972:	83 ef       	ldi	r24, 0xF3	; 243
    b974:	f8 0a       	sbc	r15, r24
    b976:	f8 01       	movw	r30, r16
    b978:	61 91       	ld	r22, Z+
    b97a:	8f 01       	movw	r16, r30
    b97c:	da 82       	std	Y+2, r13	; 0x02
    b97e:	c9 82       	std	Y+1, r12	; 0x01
    b980:	ce 01       	movw	r24, r28
    b982:	01 96       	adiw	r24, 0x01	; 1
    b984:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    b988:	ff ef       	ldi	r31, 0xFF	; 255
    b98a:	cf 1a       	sub	r12, r31
    b98c:	df 0a       	sbc	r13, r31
    b98e:	ce 14       	cp	r12, r14
    b990:	df 04       	cpc	r13, r15
    b992:	89 f7       	brne	.-30     	; 0xb976 <_Z20Wireless_Pump_EEPROMh+0x40>
	return;
    b994:	0f 90       	pop	r0
    b996:	0f 90       	pop	r0
    b998:	df 91       	pop	r29
    b99a:	cf 91       	pop	r28
    b99c:	1f 91       	pop	r17
    b99e:	0f 91       	pop	r16
    b9a0:	ff 90       	pop	r15
    b9a2:	ef 90       	pop	r14
    b9a4:	df 90       	pop	r13
    b9a6:	cf 90       	pop	r12
    b9a8:	08 95       	ret

0000b9aa <_Z22Update_Euro_Valve_DataPh>:
Euro_Valve_Param _sEuro_Valve_Param[_kMAX_EURO_VALVE];
Wireless_Pump_Param _sWireless_Pump_Param[_kMAX_WIRELESS_PUMP];


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
    b9aa:	ef 92       	push	r14
    b9ac:	ff 92       	push	r15
    b9ae:	0f 93       	push	r16
    b9b0:	1f 93       	push	r17
    b9b2:	cf 93       	push	r28
    b9b4:	df 93       	push	r29
    b9b6:	fc 01       	movw	r30, r24
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b9b8:	81 e0       	ldi	r24, 0x01	; 1
    b9ba:	80 93 f4 0b 	sts	0x0BF4, r24	; 0x800bf4 <_sWireless_Pump_Param>
    b9be:	c0 e0       	ldi	r28, 0x00	; 0
    b9c0:	d0 e0       	ldi	r29, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b9c2:	8d e0       	ldi	r24, 0x0D	; 13
    b9c4:	fc 2e       	mov	r15, r28


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b9c6:	20 e0       	ldi	r18, 0x00	; 0
    b9c8:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b9ca:	8c 9f       	mul	r24, r28
    b9cc:	b0 01       	movw	r22, r0
    b9ce:	8d 9f       	mul	r24, r29
    b9d0:	70 0d       	add	r23, r0
    b9d2:	11 24       	eor	r1, r1
    b9d4:	6b 5e       	subi	r22, 0xEB	; 235
    b9d6:	73 4f       	sbci	r23, 0xF3	; 243
    b9d8:	49 2f       	mov	r20, r25
    b9da:	50 e0       	ldi	r21, 0x00	; 0
    b9dc:	df 01       	movw	r26, r30
    b9de:	a4 0f       	add	r26, r20
    b9e0:	b5 1f       	adc	r27, r21
    b9e2:	46 0f       	add	r20, r22
    b9e4:	57 1f       	adc	r21, r23
    b9e6:	1c 91       	ld	r17, X
    b9e8:	da 01       	movw	r26, r20
    b9ea:	11 96       	adiw	r26, 0x01	; 1
    b9ec:	3c 91       	ld	r19, X
    b9ee:	13 17       	cp	r17, r19
    b9f0:	11 f0       	breq	.+4      	; 0xb9f6 <_Z22Update_Euro_Valve_DataPh+0x4c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    b9f2:	20 e0       	ldi	r18, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
			{
				i = _kVALVE_ID_LEN;
    b9f4:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    b9f6:	2f 5f       	subi	r18, 0xFF	; 255
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    b9f8:	9f 5f       	subi	r25, 0xFF	; 255
    b9fa:	96 30       	cpi	r25, 0x06	; 6
    b9fc:	68 f3       	brcs	.-38     	; 0xb9d8 <_Z22Update_Euro_Valve_DataPh+0x2e>
			
			id_len++;
		}
		count = 0;
		
		if(id_len == _kVALVE_ID_LEN)
    b9fe:	26 30       	cpi	r18, 0x06	; 6
    ba00:	09 f0       	breq	.+2      	; 0xba04 <_Z22Update_Euro_Valve_DataPh+0x5a>
    ba02:	b7 c2       	rjmp	.+1390   	; 0xbf72 <_Z22Update_Euro_Valve_DataPh+0x5c8>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba04:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ba08:	81 30       	cpi	r24, 0x01	; 1
    ba0a:	51 f4       	brne	.+20     	; 0xba20 <_Z22Update_Euro_Valve_DataPh+0x76>
			{
				_kSERAIL_MON_WRITE("EURO DATA RECIEVED");                /* for debugging purpose */
    ba0c:	67 e9       	ldi	r22, 0x97	; 151
    ba0e:	7f e1       	ldi	r23, 0x1F	; 31
    ba10:	86 ec       	ldi	r24, 0xC6	; 198
    ba12:	94 e1       	ldi	r25, 0x14	; 20
    ba14:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    ba18:	86 ec       	ldi	r24, 0xC6	; 198
    ba1a:	94 e1       	ldi	r25, 0x14	; 20
    ba1c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    ba20:	90 91 0f 14 	lds	r25, 0x140F	; 0x80140f <_sRuble_Parameters+0x61>
    ba24:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ba28:	91 30       	cpi	r25, 0x01	; 1
    ba2a:	09 f0       	breq	.+2      	; 0xba2e <_Z22Update_Euro_Valve_DataPh+0x84>
    ba2c:	3e c1       	rjmp	.+636    	; 0xbcaa <_Z22Update_Euro_Valve_DataPh+0x300>
			{
				case _eEURO_VALVE_FAULT_DATA:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba2e:	81 30       	cpi	r24, 0x01	; 1
    ba30:	51 f4       	brne	.+20     	; 0xba46 <_Z22Update_Euro_Valve_DataPh+0x9c>
					{
						_kSERAIL_MON_WRITE("_eEURO_VALVE_FAULT_DATA");                /* for debugging purpose */
    ba32:	6f e7       	ldi	r22, 0x7F	; 127
    ba34:	7f e1       	ldi	r23, 0x1F	; 31
    ba36:	86 ec       	ldi	r24, 0xC6	; 198
    ba38:	94 e1       	ldi	r25, 0x14	; 20
    ba3a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    ba3e:	86 ec       	ldi	r24, 0xC6	; 198
    ba40:	94 e1       	ldi	r25, 0x14	; 20
    ba42:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					
					switch(_sRuble_Parameters.Lora_Data_Rx[7])
    ba46:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    ba4a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ba4e:	99 23       	and	r25, r25
    ba50:	19 f0       	breq	.+6      	; 0xba58 <_Z22Update_Euro_Valve_DataPh+0xae>
    ba52:	91 30       	cpi	r25, 0x01	; 1
    ba54:	f1 f0       	breq	.+60     	; 0xba92 <_Z22Update_Euro_Valve_DataPh+0xe8>
    ba56:	64 c0       	rjmp	.+200    	; 0xbb20 <_Z22Update_Euro_Valve_DataPh+0x176>
					{
						case _eNO_FAULT:
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba58:	81 30       	cpi	r24, 0x01	; 1
    ba5a:	51 f4       	brne	.+20     	; 0xba70 <_Z22Update_Euro_Valve_DataPh+0xc6>
							{
								_kSERAIL_MON_WRITE("_eNO_FAULT ");
    ba5c:	63 e7       	ldi	r22, 0x73	; 115
    ba5e:	7f e1       	ldi	r23, 0x1F	; 31
    ba60:	86 ec       	ldi	r24, 0xC6	; 198
    ba62:	94 e1       	ldi	r25, 0x14	; 20
    ba64:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    ba68:	86 ec       	ldi	r24, 0xC6	; 198
    ba6a:	94 e1       	ldi	r25, 0x14	; 20
    ba6c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    ba70:	8d e0       	ldi	r24, 0x0D	; 13
    ba72:	8c 9f       	mul	r24, r28
    ba74:	f0 01       	movw	r30, r0
    ba76:	8d 9f       	mul	r24, r29
    ba78:	f0 0d       	add	r31, r0
    ba7a:	11 24       	eor	r1, r1
    ba7c:	eb 5e       	subi	r30, 0xEB	; 235
    ba7e:	f3 4f       	sbci	r31, 0xF3	; 243
    ba80:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    ba84:	84 87       	std	Z+12, r24	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
    ba86:	81 e0       	ldi	r24, 0x01	; 1
    ba88:	83 87       	std	Z+11, r24	; 0x0b
							_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _sRuble_Parameters.Lora_Data_Rx[9];    /* update valve status data  */
    ba8a:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    ba8e:	82 87       	std	Z+10, r24	; 0x0a
						}break;
    ba90:	55 c0       	rjmp	.+170    	; 0xbb3c <_Z22Update_Euro_Valve_DataPh+0x192>
						
						case _eLOW_BAT_FAULT:
						{
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    ba92:	2d e0       	ldi	r18, 0x0D	; 13
    ba94:	2c 9f       	mul	r18, r28
    ba96:	f0 01       	movw	r30, r0
    ba98:	2d 9f       	mul	r18, r29
    ba9a:	f0 0d       	add	r31, r0
    ba9c:	11 24       	eor	r1, r1
    ba9e:	eb 5e       	subi	r30, 0xEB	; 235
    baa0:	f3 4f       	sbci	r31, 0xF3	; 243
    baa2:	94 87       	std	Z+12, r25	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_OFFLINE;
    baa4:	13 86       	std	Z+11, r1	; 0x0b
							if(_sRuble_Parameters.Irrigating_Plot == 0) /* if not any plot is irrigating and valve status is still on then off the valve */
    baa6:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    baaa:	91 11       	cpse	r25, r1
    baac:	16 c0       	rjmp	.+44     	; 0xbada <_Z22Update_Euro_Valve_DataPh+0x130>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    baae:	81 30       	cpi	r24, 0x01	; 1
    bab0:	51 f4       	brne	.+20     	; 0xbac6 <_Z22Update_Euro_Valve_DataPh+0x11c>
								{
									_kSERAIL_MON_WRITE_NO_LN("not any plot is irrigating");
    bab2:	68 e5       	ldi	r22, 0x58	; 88
    bab4:	7f e1       	ldi	r23, 0x1F	; 31
    bab6:	86 ec       	ldi	r24, 0xC6	; 198
    bab8:	94 e1       	ldi	r25, 0x14	; 20
    baba:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    babe:	86 ec       	ldi	r24, 0xC6	; 198
    bac0:	94 e1       	ldi	r25, 0x14	; 20
    bac2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
								}
								
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bac6:	8d e0       	ldi	r24, 0x0D	; 13
    bac8:	8c 9f       	mul	r24, r28
    baca:	f0 01       	movw	r30, r0
    bacc:	8d 9f       	mul	r24, r29
    bace:	f0 0d       	add	r31, r0
    bad0:	11 24       	eor	r1, r1
    bad2:	eb 5e       	subi	r30, 0xEB	; 235
    bad4:	f3 4f       	sbci	r31, 0xF3	; 243
    bad6:	81 e0       	ldi	r24, 0x01	; 1
    bad8:	02 c0       	rjmp	.+4      	; 0xbade <_Z22Update_Euro_Valve_DataPh+0x134>
							}
							else
							{
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status   = _sRuble_Parameters.Lora_Data_Rx[9];
    bada:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    bade:	82 87       	std	Z+10, r24	; 0x0a
							}
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    bae0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bae4:	81 30       	cpi	r24, 0x01	; 1
    bae6:	51 f4       	brne	.+20     	; 0xbafc <_Z22Update_Euro_Valve_DataPh+0x152>
							{
								_kSERAIL_MON_WRITE_NO_LN("low battery fault");
    bae8:	66 e4       	ldi	r22, 0x46	; 70
    baea:	7f e1       	ldi	r23, 0x1F	; 31
    baec:	86 ec       	ldi	r24, 0xC6	; 198
    baee:	94 e1       	ldi	r25, 0x14	; 20
    baf0:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR(); 
    baf4:	86 ec       	ldi	r24, 0xC6	; 198
    baf6:	94 e1       	ldi	r25, 0x14	; 20
    baf8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							_sGSM_Query.SMS_Alert |= _eEURO_BATT_LOW;
    bafc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    bb00:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    bb04:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    bb08:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    bb0c:	a4 60       	ori	r26, 0x04	; 4
    bb0e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    bb12:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    bb16:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    bb1a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						}break;
    bb1e:	0e c0       	rjmp	.+28     	; 0xbb3c <_Z22Update_Euro_Valve_DataPh+0x192>
						
						default:
						{
							/* Fault not matched */
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb20:	81 30       	cpi	r24, 0x01	; 1
    bb22:	51 f4       	brne	.+20     	; 0xbb38 <_Z22Update_Euro_Valve_DataPh+0x18e>
							{
								_kSERAIL_MON_WRITE("default command ");
    bb24:	65 e3       	ldi	r22, 0x35	; 53
    bb26:	7f e1       	ldi	r23, 0x1F	; 31
    bb28:	86 ec       	ldi	r24, 0xC6	; 198
    bb2a:	94 e1       	ldi	r25, 0x14	; 20
    bb2c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    bb30:	86 ec       	ldi	r24, 0xC6	; 198
    bb32:	94 e1       	ldi	r25, 0x14	; 20
    bb34:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							return 0;
    bb38:	80 e0       	ldi	r24, 0x00	; 0
    bb3a:	21 c2       	rjmp	.+1090   	; 0xbf7e <_Z22Update_Euro_Valve_DataPh+0x5d4>
						}break;
					}
					
					_sEuro_Valve_Param[valve_number].Euro_Battery_Level  = (_sRuble_Parameters.Lora_Data_Rx[10]<<8) | (_sRuble_Parameters.Lora_Data_Rx[11]);      /* update battery level */
    bb3c:	8d e0       	ldi	r24, 0x0D	; 13
    bb3e:	8c 9f       	mul	r24, r28
    bb40:	80 01       	movw	r16, r0
    bb42:	8d 9f       	mul	r24, r29
    bb44:	10 0d       	add	r17, r0
    bb46:	11 24       	eor	r1, r1
    bb48:	0b 5e       	subi	r16, 0xEB	; 235
    bb4a:	13 4f       	sbci	r17, 0xF3	; 243
    bb4c:	80 91 13 14 	lds	r24, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
    bb50:	90 91 14 14 	lds	r25, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
    bb54:	98 27       	eor	r25, r24
    bb56:	89 27       	eor	r24, r25
    bb58:	98 27       	eor	r25, r24
    bb5a:	f8 01       	movw	r30, r16
    bb5c:	91 87       	std	Z+9, r25	; 0x09
    bb5e:	80 87       	std	Z+8, r24	; 0x08
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb60:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bb64:	81 30       	cpi	r24, 0x01	; 1
    bb66:	09 f0       	breq	.+2      	; 0xbb6a <_Z22Update_Euro_Valve_DataPh+0x1c0>
    bb68:	52 c0       	rjmp	.+164    	; 0xbc0e <_Z22Update_Euro_Valve_DataPh+0x264>
					{
						_kSERAIL_MON_WRITE_NO_LN("Data recvd From Euro : "); 
    bb6a:	6d e1       	ldi	r22, 0x1D	; 29
    bb6c:	7f e1       	ldi	r23, 0x1F	; 31
    bb6e:	86 ec       	ldi	r24, 0xC6	; 198
    bb70:	94 e1       	ldi	r25, 0x14	; 20
    bb72:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                         /* for debugging purpose */
    bb76:	86 ec       	ldi	r24, 0xC6	; 198
    bb78:	94 e1       	ldi	r25, 0x14	; 20
    bb7a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Number);
    bb7e:	4a e0       	ldi	r20, 0x0A	; 10
    bb80:	50 e0       	ldi	r21, 0x00	; 0
    bb82:	d8 01       	movw	r26, r16
    bb84:	6c 91       	ld	r22, X
    bb86:	86 ec       	ldi	r24, 0xC6	; 198
    bb88:	94 e1       	ldi	r25, 0x14	; 20
    bb8a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    bb8e:	86 ec       	ldi	r24, 0xC6	; 198
    bb90:	94 e1       	ldi	r25, 0x14	; 20
    bb92:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Battery level : ");                                 /* for debugging purpose */
    bb96:	6c e0       	ldi	r22, 0x0C	; 12
    bb98:	7f e1       	ldi	r23, 0x1F	; 31
    bb9a:	86 ec       	ldi	r24, 0xC6	; 198
    bb9c:	94 e1       	ldi	r25, 0x14	; 20
    bb9e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Battery_Level);
    bba2:	f8 01       	movw	r30, r16
    bba4:	60 85       	ldd	r22, Z+8	; 0x08
    bba6:	71 85       	ldd	r23, Z+9	; 0x09
    bba8:	4a e0       	ldi	r20, 0x0A	; 10
    bbaa:	50 e0       	ldi	r21, 0x00	; 0
    bbac:	86 ec       	ldi	r24, 0xC6	; 198
    bbae:	94 e1       	ldi	r25, 0x14	; 20
    bbb0:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
						_kSERIAL_MON_CLEAR();
    bbb4:	86 ec       	ldi	r24, 0xC6	; 198
    bbb6:	94 e1       	ldi	r25, 0x14	; 20
    bbb8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Euro online/offline : ");      
    bbbc:	65 ef       	ldi	r22, 0xF5	; 245
    bbbe:	7e e1       	ldi	r23, 0x1E	; 30
    bbc0:	86 ec       	ldi	r24, 0xC6	; 198
    bbc2:	94 e1       	ldi	r25, 0x14	; 20
    bbc4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                     /* for debugging purpose */
    bbc8:	86 ec       	ldi	r24, 0xC6	; 198
    bbca:	94 e1       	ldi	r25, 0x14	; 20
    bbcc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Online);
    bbd0:	4a e0       	ldi	r20, 0x0A	; 10
    bbd2:	50 e0       	ldi	r21, 0x00	; 0
    bbd4:	d8 01       	movw	r26, r16
    bbd6:	1b 96       	adiw	r26, 0x0b	; 11
    bbd8:	6c 91       	ld	r22, X
    bbda:	86 ec       	ldi	r24, 0xC6	; 198
    bbdc:	94 e1       	ldi	r25, 0x14	; 20
    bbde:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						_kSERAIL_MON_WRITE_NO_LN("Euro status : "); 
    bbe2:	66 ee       	ldi	r22, 0xE6	; 230
    bbe4:	7e e1       	ldi	r23, 0x1E	; 30
    bbe6:	86 ec       	ldi	r24, 0xC6	; 198
    bbe8:	94 e1       	ldi	r25, 0x14	; 20
    bbea:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                                  /* for debugging purpose */
    bbee:	86 ec       	ldi	r24, 0xC6	; 198
    bbf0:	94 e1       	ldi	r25, 0x14	; 20
    bbf2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Status);
    bbf6:	4a e0       	ldi	r20, 0x0A	; 10
    bbf8:	50 e0       	ldi	r21, 0x00	; 0
    bbfa:	f8 01       	movw	r30, r16
    bbfc:	62 85       	ldd	r22, Z+10	; 0x0a
    bbfe:	86 ec       	ldi	r24, 0xC6	; 198
    bc00:	94 e1       	ldi	r25, 0x14	; 20
    bc02:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    bc06:	86 ec       	ldi	r24, 0xC6	; 198
    bc08:	94 e1       	ldi	r25, 0x14	; 20
    bc0a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    bc0e:	84 e1       	ldi	r24, 0x14	; 20
    bc10:	e5 ef       	ldi	r30, 0xF5	; 245
    bc12:	f3 e1       	ldi	r31, 0x13	; 19
    bc14:	df 01       	movw	r26, r30
    bc16:	1d 92       	st	X+, r1
    bc18:	8a 95       	dec	r24
    bc1a:	e9 f7       	brne	.-6      	; 0xbc16 <_Z22Update_Euro_Valve_DataPh+0x26c>
    bc1c:	8f 01       	movw	r16, r30
    bc1e:	8d e0       	ldi	r24, 0x0D	; 13
    bc20:	8c 9f       	mul	r24, r28
    bc22:	a0 01       	movw	r20, r0
    bc24:	8d 9f       	mul	r24, r29
    bc26:	50 0d       	add	r21, r0
    bc28:	11 24       	eor	r1, r1
    bc2a:	df 01       	movw	r26, r30
    bc2c:	80 e0       	ldi	r24, 0x00	; 0
    bc2e:	90 e0       	ldi	r25, 0x00	; 0
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
    bc30:	fa 01       	movw	r30, r20
    bc32:	e8 0f       	add	r30, r24
    bc34:	f9 1f       	adc	r31, r25
    bc36:	eb 5e       	subi	r30, 0xEB	; 235
    bc38:	f3 4f       	sbci	r31, 0xF3	; 243
    bc3a:	21 81       	ldd	r18, Z+1	; 0x01
    bc3c:	2d 93       	st	X+, r18
    bc3e:	01 96       	adiw	r24, 0x01	; 1
						_kSERIAL_MON_CLEAR();
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
    bc40:	86 30       	cpi	r24, 0x06	; 6
    bc42:	91 05       	cpc	r25, r1
    bc44:	a9 f7       	brne	.-22     	; 0xbc30 <_Z22Update_Euro_Valve_DataPh+0x286>
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
					}
					_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_FAULT_DATA;
    bc46:	81 e0       	ldi	r24, 0x01	; 1
    bc48:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Lora_Data_Rx[7];
    bc4c:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    bc50:	80 93 fc 13 	sts	0x13FC, r24	; 0x8013fc <_sRuble_Parameters+0x4e>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
    bc54:	8d e0       	ldi	r24, 0x0D	; 13
    bc56:	8c 9f       	mul	r24, r28
    bc58:	f0 01       	movw	r30, r0
    bc5a:	8d 9f       	mul	r24, r29
    bc5c:	f0 0d       	add	r31, r0
    bc5e:	11 24       	eor	r1, r1
    bc60:	eb 5e       	subi	r30, 0xEB	; 235
    bc62:	f3 4f       	sbci	r31, 0xF3	; 243
    bc64:	83 85       	ldd	r24, Z+11	; 0x0b
    bc66:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
			switch(_sRuble_Parameters.Lora_Data_TX[6])
			{
				case _eEURO_VALVE_FAULT_DATA:
				case _eVALVE_OFFLINE_FAULT:
				{
					_sRuble_Parameters.Last_Valve = valve_number;   /* update last valve number to publish the data */
    bc6a:	f0 92 6e 14 	sts	0x146E, r15	; 0x80146e <_sRuble_Parameters+0xc0>
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
    bc6e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    bc72:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    bc76:	80 68       	ori	r24, 0x80	; 128
    bc78:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    bc7c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
					Euro_Data_EEPROM(valve_number);
    bc80:	8f 2d       	mov	r24, r15
    bc82:	1f de       	rcall	.-962    	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
    bc84:	40 91 1e 14 	lds	r20, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    bc88:	ce 01       	movw	r24, r28
    bc8a:	88 0f       	add	r24, r24
    bc8c:	99 1f       	adc	r25, r25
    bc8e:	44 23       	and	r20, r20
    bc90:	09 f4       	brne	.+2      	; 0xbc94 <_Z22Update_Euro_Valve_DataPh+0x2ea>
    bc92:	94 c0       	rjmp	.+296    	; 0xbdbc <_Z22Update_Euro_Valve_DataPh+0x412>
    bc94:	9c 01       	movw	r18, r24
    bc96:	2c 0f       	add	r18, r28
    bc98:	3d 1f       	adc	r19, r29
    bc9a:	2f 5f       	subi	r18, 0xFF	; 255
    bc9c:	3f 4f       	sbci	r19, 0xFF	; 255
    bc9e:	b6 e0       	ldi	r27, 0x06	; 6
    bca0:	4b 9f       	mul	r20, r27
    bca2:	a0 01       	movw	r20, r0
    bca4:	11 24       	eor	r1, r1
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bca6:	e3 e0       	ldi	r30, 0x03	; 3
    bca8:	1b c0       	rjmp	.+54     	; 0xbce0 <_Z22Update_Euro_Valve_DataPh+0x336>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
				}break;
				
				default:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    bcaa:	81 30       	cpi	r24, 0x01	; 1
    bcac:	09 f0       	breq	.+2      	; 0xbcb0 <_Z22Update_Euro_Valve_DataPh+0x306>
    bcae:	44 cf       	rjmp	.-376    	; 0xbb38 <_Z22Update_Euro_Valve_DataPh+0x18e>
					{
						_kSERAIL_MON_WRITE("EURO PACKET IS NOT APPLICABLE");
    bcb0:	68 ec       	ldi	r22, 0xC8	; 200
    bcb2:	7e e1       	ldi	r23, 0x1E	; 30
    bcb4:	39 cf       	rjmp	.-398    	; 0xbb28 <_Z22Update_Euro_Valve_DataPh+0x17e>
    bcb6:	da 01       	movw	r26, r20
    bcb8:	a6 0f       	add	r26, r22
    bcba:	b7 1f       	adc	r27, r23
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bcbc:	a7 5b       	subi	r26, 0xB7	; 183
    bcbe:	b2 4f       	sbci	r27, 0xF2	; 242
    bcc0:	ac 91       	ld	r26, X
    bcc2:	b0 e0       	ldi	r27, 0x00	; 0
    bcc4:	a2 17       	cp	r26, r18
    bcc6:	b3 07       	cpc	r27, r19
    bcc8:	71 f0       	breq	.+28     	; 0xbce6 <_Z22Update_Euro_Valve_DataPh+0x33c>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bcca:	6f 5f       	subi	r22, 0xFF	; 255
    bccc:	7f 4f       	sbci	r23, 0xFF	; 255
    bcce:	65 30       	cpi	r22, 0x05	; 5
    bcd0:	71 05       	cpc	r23, r1
    bcd2:	89 f7       	brne	.-30     	; 0xbcb6 <_Z22Update_Euro_Valve_DataPh+0x30c>
    bcd4:	e1 50       	subi	r30, 0x01	; 1
    bcd6:	2f 5f       	subi	r18, 0xFF	; 255
    bcd8:	3f 4f       	sbci	r19, 0xFF	; 255
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
					Euro_Data_EEPROM(valve_number);
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    bcda:	ee 23       	and	r30, r30
    bcdc:	09 f4       	brne	.+2      	; 0xbce0 <_Z22Update_Euro_Valve_DataPh+0x336>
    bcde:	6e c0       	rjmp	.+220    	; 0xbdbc <_Z22Update_Euro_Valve_DataPh+0x412>
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bce0:	60 e0       	ldi	r22, 0x00	; 0
    bce2:	70 e0       	ldi	r23, 0x00	; 0
    bce4:	e8 cf       	rjmp	.-48     	; 0xbcb6 <_Z22Update_Euro_Valve_DataPh+0x30c>
								{
									/********* if valve is on and there is some fault then stop the irrigation process **********/
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    bce6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bcea:	81 30       	cpi	r24, 0x01	; 1
    bcec:	51 f4       	brne	.+20     	; 0xbd02 <_Z22Update_Euro_Valve_DataPh+0x358>
									{
										_kSERAIL_MON_WRITE("valve fault occure please turn off the pump");
    bcee:	6c e9       	ldi	r22, 0x9C	; 156
    bcf0:	7e e1       	ldi	r23, 0x1E	; 30
    bcf2:	86 ec       	ldi	r24, 0xC6	; 198
    bcf4:	94 e1       	ldi	r25, 0x14	; 20
    bcf6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    bcfa:	86 ec       	ldi	r24, 0xC6	; 198
    bcfc:	94 e1       	ldi	r25, 0x14	; 20
    bcfe:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
									}
									_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_SUSPENDED;   // suspend the operation if fault occur in running valve
    bd02:	81 e0       	ldi	r24, 0x01	; 1
    bd04:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
									// turn off the pump immediately
									if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    bd08:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    bd0c:	81 11       	cpse	r24, r1
    bd0e:	13 c0       	rjmp	.+38     	; 0xbd36 <_Z22Update_Euro_Valve_DataPh+0x38c>
									{
										if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    bd10:	8a e0       	ldi	r24, 0x0A	; 10
    bd12:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    bd16:	01 97       	sbiw	r24, 0x01	; 1
    bd18:	21 f0       	breq	.+8      	; 0xbd22 <_Z22Update_Euro_Valve_DataPh+0x378>
										{
											_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    bd1a:	61 e0       	ldi	r22, 0x01	; 1
    bd1c:	8a e0       	ldi	r24, 0x0A	; 10
    bd1e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
										}
										
										if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    bd22:	8b e0       	ldi	r24, 0x0B	; 11
    bd24:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    bd28:	01 97       	sbiw	r24, 0x01	; 1
    bd2a:	71 f1       	breq	.+92     	; 0xbd88 <_Z22Update_Euro_Valve_DataPh+0x3de>
										{
											_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    bd2c:	61 e0       	ldi	r22, 0x01	; 1
    bd2e:	8b e0       	ldi	r24, 0x0B	; 11
    bd30:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
    bd34:	29 c0       	rjmp	.+82     	; 0xbd88 <_Z22Update_Euro_Valve_DataPh+0x3de>
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    bd36:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bd3a:	81 30       	cpi	r24, 0x01	; 1
    bd3c:	51 f4       	brne	.+20     	; 0xbd52 <_Z22Update_Euro_Valve_DataPh+0x3a8>
										{
											_kSERAIL_MON_WRITE("wl pump trigger 11111111111111111111");
    bd3e:	67 e7       	ldi	r22, 0x77	; 119
    bd40:	7e e1       	ldi	r23, 0x1E	; 30
    bd42:	86 ec       	ldi	r24, 0xC6	; 198
    bd44:	94 e1       	ldi	r25, 0x14	; 20
    bd46:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    bd4a:	86 ec       	ldi	r24, 0xC6	; 198
    bd4c:	94 e1       	ldi	r25, 0x14	; 20
    bd4e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
										}
										if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    bd52:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    bd56:	62 50       	subi	r22, 0x02	; 2
    bd58:	84 e0       	ldi	r24, 0x04	; 4
    bd5a:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
    bd5e:	81 11       	cpse	r24, r1
    bd60:	10 c0       	rjmp	.+32     	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
										}
										else
										{
											if(_sRuble_Parameters.Irrigating_Plot == _kRESET 
    bd62:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    bd66:	81 11       	cpse	r24, r1
    bd68:	0c c0       	rjmp	.+24     	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    bd6a:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    bd6e:	81 30       	cpi	r24, 0x01	; 1
    bd70:	41 f0       	breq	.+16     	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    bd72:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    bd76:	81 30       	cpi	r24, 0x01	; 1
    bd78:	21 f0       	breq	.+8      	; 0xbd82 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    bd7a:	81 e0       	ldi	r24, 0x01	; 1
    bd7c:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
    bd80:	02 c0       	rjmp	.+4      	; 0xbd86 <_Z22Update_Euro_Valve_DataPh+0x3dc>
											}
											else
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;	
    bd82:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
											}
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    bd86:	86 dd       	rcall	.-1268   	; 0xb894 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
										}
									}				
									_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bd88:	8d e0       	ldi	r24, 0x0D	; 13
    bd8a:	8c 9f       	mul	r24, r28
    bd8c:	f0 01       	movw	r30, r0
    bd8e:	8d 9f       	mul	r24, r29
    bd90:	f0 0d       	add	r31, r0
    bd92:	11 24       	eor	r1, r1
    bd94:	eb 5e       	subi	r30, 0xEB	; 235
    bd96:	f3 4f       	sbci	r31, 0xF3	; 243
    bd98:	91 e0       	ldi	r25, 0x01	; 1
    bd9a:	92 87       	std	Z+10, r25	; 0x0a
									_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bd9c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    bda0:	84 e6       	ldi	r24, 0x64	; 100
    bda2:	90 e0       	ldi	r25, 0x00	; 0
    bda4:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    bda8:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    bdac:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bdb0:	81 30       	cpi	r24, 0x01	; 1
    bdb2:	09 f0       	breq	.+2      	; 0xbdb6 <_Z22Update_Euro_Valve_DataPh+0x40c>
    bdb4:	9b c0       	rjmp	.+310    	; 0xbeec <_Z22Update_Euro_Valve_DataPh+0x542>
									{
										_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW");
    bdb6:	64 e6       	ldi	r22, 0x64	; 100
    bdb8:	7e e1       	ldi	r23, 0x1E	; 30
    bdba:	94 c0       	rjmp	.+296    	; 0xbee4 <_Z22Update_Euro_Valve_DataPh+0x53a>
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bdbc:	8c 0f       	add	r24, r28
    bdbe:	9d 1f       	adc	r25, r29
    bdc0:	e8 ee       	ldi	r30, 0xE8	; 232
    bdc2:	fd e0       	ldi	r31, 0x0D	; 13
    bdc4:	20 e0       	ldi	r18, 0x00	; 0
    bdc6:	30 e0       	ldi	r19, 0x00	; 0
    bdc8:	7c 01       	movw	r14, r24
    bdca:	44 e0       	ldi	r20, 0x04	; 4
    bdcc:	e4 0e       	add	r14, r20
    bdce:	f1 1c       	adc	r15, r1
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
    bdd0:	41 81       	ldd	r20, Z+1	; 0x01
    bdd2:	44 23       	and	r20, r20
    bdd4:	09 f4       	brne	.+2      	; 0xbdd8 <_Z22Update_Euro_Valve_DataPh+0x42e>
    bdd6:	a0 c0       	rjmp	.+320    	; 0xbf18 <_Z22Update_Euro_Valve_DataPh+0x56e>
    bdd8:	ac 01       	movw	r20, r24
    bdda:	4f 5f       	subi	r20, 0xFF	; 255
    bddc:	5f 4f       	sbci	r21, 0xFF	; 255
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bdde:	60 e0       	ldi	r22, 0x00	; 0
    bde0:	70 e0       	ldi	r23, 0x00	; 0
    bde2:	df 01       	movw	r26, r30
    bde4:	a6 0f       	add	r26, r22
    bde6:	b7 1f       	adc	r27, r23
    bde8:	15 96       	adiw	r26, 0x05	; 5
    bdea:	ac 91       	ld	r26, X
    bdec:	b0 e0       	ldi	r27, 0x00	; 0
    bdee:	a4 17       	cp	r26, r20
    bdf0:	b5 07       	cpc	r27, r21
    bdf2:	09 f0       	breq	.+2      	; 0xbdf6 <_Z22Update_Euro_Valve_DataPh+0x44c>
    bdf4:	85 c0       	rjmp	.+266    	; 0xbf00 <_Z22Update_Euro_Valve_DataPh+0x556>
								{
									if(_sExtra_Plot[check_plot].On_Off_Status == _kSET || _sExtra_Plot[check_plot].Auto_Operation == _kSET)
    bdf6:	a0 81       	ld	r26, Z
    bdf8:	a1 11       	cpse	r26, r1
    bdfa:	04 c0       	rjmp	.+8      	; 0xbe04 <_Z22Update_Euro_Valve_DataPh+0x45a>
    bdfc:	a1 8d       	ldd	r26, Z+25	; 0x19
    bdfe:	a1 30       	cpi	r26, 0x01	; 1
    be00:	09 f0       	breq	.+2      	; 0xbe04 <_Z22Update_Euro_Valve_DataPh+0x45a>
    be02:	7e c0       	rjmp	.+252    	; 0xbf00 <_Z22Update_Euro_Valve_DataPh+0x556>
									{
										if((check_plot+_kEXTRA_PLOT_START_FROM) == _kFOOGER_PLOT_NUMBER)
    be04:	23 30       	cpi	r18, 0x03	; 3
    be06:	31 05       	cpc	r19, r1
    be08:	09 f0       	breq	.+2      	; 0xbe0c <_Z22Update_Euro_Valve_DataPh+0x462>
    be0a:	7a c0       	rjmp	.+244    	; 0xbf00 <_Z22Update_Euro_Valve_DataPh+0x556>
										{
											/********* if valve is on and there is some fault then stop the irrigation process **********/
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    be0c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    be10:	81 30       	cpi	r24, 0x01	; 1
    be12:	51 f4       	brne	.+20     	; 0xbe28 <_Z22Update_Euro_Valve_DataPh+0x47e>
											{
												_kSERAIL_MON_WRITE("fogger: valve fault occure please turn off the pump");
    be14:	60 e3       	ldi	r22, 0x30	; 48
    be16:	7e e1       	ldi	r23, 0x1E	; 30
    be18:	86 ec       	ldi	r24, 0xC6	; 198
    be1a:	94 e1       	ldi	r25, 0x14	; 20
    be1c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();	
    be20:	86 ec       	ldi	r24, 0xC6	; 198
    be22:	94 e1       	ldi	r25, 0x14	; 20
    be24:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
											}
											if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    be28:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    be2c:	81 11       	cpse	r24, r1
    be2e:	13 c0       	rjmp	.+38     	; 0xbe56 <_Z22Update_Euro_Valve_DataPh+0x4ac>
											{
												if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    be30:	8a e0       	ldi	r24, 0x0A	; 10
    be32:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    be36:	01 97       	sbiw	r24, 0x01	; 1
    be38:	21 f0       	breq	.+8      	; 0xbe42 <_Z22Update_Euro_Valve_DataPh+0x498>
												{
													_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    be3a:	61 e0       	ldi	r22, 0x01	; 1
    be3c:	8a e0       	ldi	r24, 0x0A	; 10
    be3e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
												}
												
												if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    be42:	8b e0       	ldi	r24, 0x0B	; 11
    be44:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    be48:	01 97       	sbiw	r24, 0x01	; 1
    be4a:	71 f1       	breq	.+92     	; 0xbea8 <_Z22Update_Euro_Valve_DataPh+0x4fe>
												{
													_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    be4c:	61 e0       	ldi	r22, 0x01	; 1
    be4e:	8b e0       	ldi	r24, 0x0B	; 11
    be50:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
    be54:	29 c0       	rjmp	.+82     	; 0xbea8 <_Z22Update_Euro_Valve_DataPh+0x4fe>
												}
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    be56:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    be5a:	81 30       	cpi	r24, 0x01	; 1
    be5c:	51 f4       	brne	.+20     	; 0xbe72 <_Z22Update_Euro_Valve_DataPh+0x4c8>
												{
													_kSERAIL_MON_WRITE("wl pump trigger 000000000000000000");
    be5e:	6d e0       	ldi	r22, 0x0D	; 13
    be60:	7e e1       	ldi	r23, 0x1E	; 30
    be62:	86 ec       	ldi	r24, 0xC6	; 198
    be64:	94 e1       	ldi	r25, 0x14	; 20
    be66:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    be6a:	86 ec       	ldi	r24, 0xC6	; 198
    be6c:	94 e1       	ldi	r25, 0x14	; 20
    be6e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
												}
												if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    be72:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    be76:	62 50       	subi	r22, 0x02	; 2
    be78:	84 e0       	ldi	r24, 0x04	; 4
    be7a:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
    be7e:	81 11       	cpse	r24, r1
    be80:	10 c0       	rjmp	.+32     	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
												}
												else
												{
													if(_sRuble_Parameters.Irrigating_Plot == _kRESET
    be82:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    be86:	81 11       	cpse	r24, r1
    be88:	0c c0       	rjmp	.+24     	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    be8a:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    be8e:	81 30       	cpi	r24, 0x01	; 1
    be90:	41 f0       	breq	.+16     	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    be92:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    be96:	81 30       	cpi	r24, 0x01	; 1
    be98:	21 f0       	breq	.+8      	; 0xbea2 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    be9a:	81 e0       	ldi	r24, 0x01	; 1
    be9c:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
    bea0:	02 c0       	rjmp	.+4      	; 0xbea6 <_Z22Update_Euro_Valve_DataPh+0x4fc>
													}
													else
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
    bea2:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
													}
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    bea6:	f6 dc       	rcall	.-1556   	; 0xb894 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
												}
											}
											_sExtra_Plot[check_plot].Run_Timer = _kRESET;
    bea8:	10 92 3d 0e 	sts	0x0E3D, r1	; 0x800e3d <_sExtra_Plot+0x55>
    beac:	10 92 3c 0e 	sts	0x0E3C, r1	; 0x800e3c <_sExtra_Plot+0x54>
											_sExtra_Plot[check_plot].One_Touch = _kRESET;					
    beb0:	10 92 43 0e 	sts	0x0E43, r1	; 0x800e43 <_sExtra_Plot+0x5b>
											_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    beb4:	8d e0       	ldi	r24, 0x0D	; 13
    beb6:	8c 9f       	mul	r24, r28
    beb8:	f0 01       	movw	r30, r0
    beba:	8d 9f       	mul	r24, r29
    bebc:	f0 0d       	add	r31, r0
    bebe:	11 24       	eor	r1, r1
    bec0:	eb 5e       	subi	r30, 0xEB	; 235
    bec2:	f3 4f       	sbci	r31, 0xF3	; 243
    bec4:	91 e0       	ldi	r25, 0x01	; 1
    bec6:	92 87       	std	Z+10, r25	; 0x0a
											_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bec8:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    becc:	84 e6       	ldi	r24, 0x64	; 100
    bece:	90 e0       	ldi	r25, 0x00	; 0
    bed0:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    bed4:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    bed8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bedc:	81 30       	cpi	r24, 0x01	; 1
    bede:	31 f4       	brne	.+12     	; 0xbeec <_Z22Update_Euro_Valve_DataPh+0x542>
											{
												_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW 1 ");
    bee0:	67 ef       	ldi	r22, 0xF7	; 247
    bee2:	7d e1       	ldi	r23, 0x1D	; 29
    bee4:	86 ec       	ldi	r24, 0xC6	; 198
    bee6:	94 e1       	ldi	r25, 0x14	; 20
    bee8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
											}
											_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    beec:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    bef0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    bef4:	82 60       	ori	r24, 0x02	; 2
    bef6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    befa:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    befe:	34 c0       	rjmp	.+104    	; 0xbf68 <_Z22Update_Euro_Valve_DataPh+0x5be>
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bf00:	6f 5f       	subi	r22, 0xFF	; 255
    bf02:	7f 4f       	sbci	r23, 0xFF	; 255
    bf04:	65 30       	cpi	r22, 0x05	; 5
    bf06:	71 05       	cpc	r23, r1
    bf08:	09 f0       	breq	.+2      	; 0xbf0c <_Z22Update_Euro_Valve_DataPh+0x562>
    bf0a:	6b cf       	rjmp	.-298    	; 0xbde2 <_Z22Update_Euro_Valve_DataPh+0x438>
    bf0c:	4f 5f       	subi	r20, 0xFF	; 255
    bf0e:	5f 4f       	sbci	r21, 0xFF	; 255
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    bf10:	4e 15       	cp	r20, r14
    bf12:	5f 05       	cpc	r21, r15
    bf14:	09 f0       	breq	.+2      	; 0xbf18 <_Z22Update_Euro_Valve_DataPh+0x56e>
    bf16:	63 cf       	rjmp	.-314    	; 0xbdde <_Z22Update_Euro_Valve_DataPh+0x434>
								}
							}
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
    bf18:	2f 5f       	subi	r18, 0xFF	; 255
    bf1a:	3f 4f       	sbci	r19, 0xFF	; 255
    bf1c:	7b 96       	adiw	r30, 0x1b	; 27
    bf1e:	2e 30       	cpi	r18, 0x0E	; 14
    bf20:	31 05       	cpc	r19, r1
    bf22:	09 f0       	breq	.+2      	; 0xbf26 <_Z22Update_Euro_Valve_DataPh+0x57c>
    bf24:	55 cf       	rjmp	.-342    	; 0xbdd0 <_Z22Update_Euro_Valve_DataPh+0x426>
							}
						}						
					}
				}
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    bf26:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bf2a:	81 30       	cpi	r24, 0x01	; 1
    bf2c:	c9 f4       	brne	.+50     	; 0xbf60 <_Z22Update_Euro_Valve_DataPh+0x5b6>
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
    bf2e:	63 ee       	ldi	r22, 0xE3	; 227
    bf30:	7d e1       	ldi	r23, 0x1D	; 29
    bf32:	86 ec       	ldi	r24, 0xC6	; 198
    bf34:	94 e1       	ldi	r25, 0x14	; 20
    bf36:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    bf3a:	86 ec       	ldi	r24, 0xC6	; 198
    bf3c:	94 e1       	ldi	r25, 0x14	; 20
    bf3e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    bf42:	ce ef       	ldi	r28, 0xFE	; 254
    bf44:	d3 e1       	ldi	r29, 0x13	; 19
					for(int k =0; k<count; k++)
    bf46:	c0 17       	cp	r28, r16
    bf48:	d1 07       	cpc	r29, r17
    bf4a:	51 f0       	breq	.+20     	; 0xbf60 <_Z22Update_Euro_Valve_DataPh+0x5b6>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
    bf4c:	d8 01       	movw	r26, r16
    bf4e:	6d 91       	ld	r22, X+
    bf50:	8d 01       	movw	r16, r26
    bf52:	4a e0       	ldi	r20, 0x0A	; 10
    bf54:	50 e0       	ldi	r21, 0x00	; 0
    bf56:	86 ec       	ldi	r24, 0xC6	; 198
    bf58:	94 e1       	ldi	r25, 0x14	; 20
    bf5a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
					_kSERIAL_MON_CLEAR();
					for(int k =0; k<count; k++)
    bf5e:	f3 cf       	rjmp	.-26     	; 0xbf46 <_Z22Update_Euro_Valve_DataPh+0x59c>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
    bf60:	86 ec       	ldi	r24, 0xC6	; 198
    bf62:	94 e1       	ldi	r25, 0x14	; 20
    bf64:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
					_kLORA_SEND_DATA(count);
    bf68:	89 e0       	ldi	r24, 0x09	; 9
    bf6a:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
					}
					_kLORA_SEND_DATA(count);
					_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
				}break;
			}
			return 1;
    bf6e:	81 e0       	ldi	r24, 0x01	; 1
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
					_kLORA_SEND_DATA(count);
				}break;
    bf70:	06 c0       	rjmp	.+12     	; 0xbf7e <_Z22Update_Euro_Valve_DataPh+0x5d4>
    bf72:	21 96       	adiw	r28, 0x01	; 1
bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
    bf74:	c6 30       	cpi	r28, 0x06	; 6
    bf76:	d1 05       	cpc	r29, r1
    bf78:	09 f0       	breq	.+2      	; 0xbf7c <_Z22Update_Euro_Valve_DataPh+0x5d2>
    bf7a:	24 cd       	rjmp	.-1464   	; 0xb9c4 <_Z22Update_Euro_Valve_DataPh+0x1a>
    bf7c:	dd cd       	rjmp	.-1094   	; 0xbb38 <_Z22Update_Euro_Valve_DataPh+0x18e>
			}
			return 1;
		}
	}
	return 0;
}
    bf7e:	df 91       	pop	r29
    bf80:	cf 91       	pop	r28
    bf82:	1f 91       	pop	r17
    bf84:	0f 91       	pop	r16
    bf86:	ff 90       	pop	r15
    bf88:	ef 90       	pop	r14
    bf8a:	08 95       	ret

0000bf8c <_Z25Update_Wireless_Pump_DataPh>:
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bf8c:	1f 93       	push	r17
    bf8e:	cf 93       	push	r28
    bf90:	df 93       	push	r29
    bf92:	dc 01       	movw	r26, r24
    bf94:	20 e0       	ldi	r18, 0x00	; 0
    bf96:	30 e0       	ldi	r19, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bf98:	8b e0       	ldi	r24, 0x0B	; 11
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bf9a:	40 e0       	ldi	r20, 0x00	; 0
    bf9c:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bf9e:	82 9f       	mul	r24, r18
    bfa0:	f0 01       	movw	r30, r0
    bfa2:	83 9f       	mul	r24, r19
    bfa4:	f0 0d       	add	r31, r0
    bfa6:	11 24       	eor	r1, r1
    bfa8:	ec 50       	subi	r30, 0x0C	; 12
    bfaa:	f4 4f       	sbci	r31, 0xF4	; 244
    bfac:	69 2f       	mov	r22, r25
    bfae:	70 e0       	ldi	r23, 0x00	; 0
    bfb0:	ed 01       	movw	r28, r26
    bfb2:	c6 0f       	add	r28, r22
    bfb4:	d7 1f       	adc	r29, r23
    bfb6:	6e 0f       	add	r22, r30
    bfb8:	7f 1f       	adc	r23, r31
    bfba:	18 81       	ld	r17, Y
    bfbc:	eb 01       	movw	r28, r22
    bfbe:	59 81       	ldd	r21, Y+1	; 0x01
    bfc0:	15 17       	cp	r17, r21
    bfc2:	11 f0       	breq	.+4      	; 0xbfc8 <_Z25Update_Wireless_Pump_DataPh+0x3c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    bfc4:	40 e0       	ldi	r20, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
			{
				i = _kVALVE_ID_LEN;
    bfc6:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    bfc8:	4f 5f       	subi	r20, 0xFF	; 255
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    bfca:	9f 5f       	subi	r25, 0xFF	; 255
    bfcc:	96 30       	cpi	r25, 0x06	; 6
    bfce:	70 f3       	brcs	.-36     	; 0xbfac <_Z25Update_Wireless_Pump_DataPh+0x20>
			}
			
			id_len++;
		}
		count = 0;
		if(id_len == _kVALVE_ID_LEN)
    bfd0:	46 30       	cpi	r20, 0x06	; 6
    bfd2:	09 f0       	breq	.+2      	; 0xbfd6 <_Z25Update_Wireless_Pump_DataPh+0x4a>
    bfd4:	59 c0       	rjmp	.+178    	; 0xc088 <_Z25Update_Wireless_Pump_DataPh+0xfc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    bfd6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    bfda:	81 30       	cpi	r24, 0x01	; 1
    bfdc:	51 f4       	brne	.+20     	; 0xbff2 <_Z25Update_Wireless_Pump_DataPh+0x66>
			{
				_kSERAIL_MON_WRITE("WIRELESS PUMP DATA RECIEVED");
    bfde:	67 ec       	ldi	r22, 0xC7	; 199
    bfe0:	7d e1       	ldi	r23, 0x1D	; 29
    bfe2:	86 ec       	ldi	r24, 0xC6	; 198
    bfe4:	94 e1       	ldi	r25, 0x14	; 20
    bfe6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    bfea:	86 ec       	ldi	r24, 0xC6	; 198
    bfec:	94 e1       	ldi	r25, 0x14	; 20
    bfee:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			
			pump_number =  _sRuble_Parameters.Lora_Data_Rx[10];
    bff2:	c0 91 13 14 	lds	r28, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
			pump_number = pump_number-1;
    bff6:	c1 50       	subi	r28, 0x01	; 1
			
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    bff8:	80 91 0f 14 	lds	r24, 0x140F	; 0x80140f <_sRuble_Parameters+0x61>
    bffc:	82 30       	cpi	r24, 0x02	; 2
    bffe:	b9 f0       	breq	.+46     	; 0xc02e <_Z25Update_Wireless_Pump_DataPh+0xa2>
    c000:	83 30       	cpi	r24, 0x03	; 3
    c002:	01 f5       	brne	.+64     	; 0xc044 <_Z25Update_Wireless_Pump_DataPh+0xb8>
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
				}break;
				
				case _eWIRELESS_FAULT:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
    c004:	8b e0       	ldi	r24, 0x0B	; 11
    c006:	c8 9f       	mul	r28, r24
    c008:	f0 01       	movw	r30, r0
    c00a:	11 24       	eor	r1, r1
    c00c:	ec 50       	subi	r30, 0x0C	; 12
    c00e:	f4 4f       	sbci	r31, 0xF4	; 244
    c010:	92 85       	ldd	r25, Z+10	; 0x0a
    c012:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    c016:	89 2b       	or	r24, r25
    c018:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
    c01a:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
    c01e:	90 91 12 14 	lds	r25, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
    c022:	98 27       	eor	r25, r24
    c024:	89 27       	eor	r24, r25
    c026:	98 27       	eor	r25, r24
    c028:	91 87       	std	Z+9, r25	; 0x09
    c02a:	80 87       	std	Z+8, r24	; 0x08
				}break;
    c02c:	0b c0       	rjmp	.+22     	; 0xc044 <_Z25Update_Wireless_Pump_DataPh+0xb8>
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
			{
				case _eCALIBRATION_RESPONSE:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
    c02e:	db e0       	ldi	r29, 0x0B	; 11
    c030:	cd 9f       	mul	r28, r29
    c032:	f0 01       	movw	r30, r0
    c034:	11 24       	eor	r1, r1
    c036:	ec 50       	subi	r30, 0x0C	; 12
    c038:	f4 4f       	sbci	r31, 0xF4	; 244
    c03a:	92 85       	ldd	r25, Z+10	; 0x0a
    c03c:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
    c040:	89 2b       	or	r24, r25
    c042:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    c044:	84 e1       	ldi	r24, 0x14	; 20
    c046:	e5 ef       	ldi	r30, 0xF5	; 245
    c048:	f3 e1       	ldi	r31, 0x13	; 19
    c04a:	df 01       	movw	r26, r30
    c04c:	1d 92       	st	X+, r1
    c04e:	8a 95       	dec	r24
    c050:	e9 f7       	brne	.-6      	; 0xc04c <_Z25Update_Wireless_Pump_DataPh+0xc0>
    c052:	df 01       	movw	r26, r30
    c054:	db e0       	ldi	r29, 0x0B	; 11
    c056:	cd 9f       	mul	r28, r29
    c058:	a0 01       	movw	r20, r0
    c05a:	11 24       	eor	r1, r1
    c05c:	80 e0       	ldi	r24, 0x00	; 0
    c05e:	90 e0       	ldi	r25, 0x00	; 0
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
    c060:	fc 01       	movw	r30, r24
    c062:	e4 0f       	add	r30, r20
    c064:	f5 1f       	adc	r31, r21
    c066:	ec 50       	subi	r30, 0x0C	; 12
    c068:	f4 4f       	sbci	r31, 0xF4	; 244
    c06a:	21 81       	ldd	r18, Z+1	; 0x01
    c06c:	2d 93       	st	X+, r18
    c06e:	01 96       	adiw	r24, 0x01	; 1
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
    c070:	86 30       	cpi	r24, 0x06	; 6
    c072:	91 05       	cpc	r25, r1
    c074:	a9 f7       	brne	.-22     	; 0xc060 <_Z25Update_Wireless_Pump_DataPh+0xd4>
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
			}
			
			_sRuble_Parameters.Lora_Data_TX[count++] = _eGOT_DATA;
    c076:	81 e0       	ldi	r24, 0x01	; 1
    c078:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
			
			_kLORA_SEND_DATA(count);
    c07c:	87 e0       	ldi	r24, 0x07	; 7
    c07e:	ed d7       	rcall	.+4058   	; 0xd05a <_Z14Lora_Data_Sendh>
			
			Wireless_Pump_EEPROM(pump_number);
    c080:	8c 2f       	mov	r24, r28
    c082:	59 dc       	rcall	.-1870   	; 0xb936 <_Z20Wireless_Pump_EEPROMh>
			
			return 1;
    c084:	81 e0       	ldi	r24, 0x01	; 1
    c086:	07 c0       	rjmp	.+14     	; 0xc096 <_Z25Update_Wireless_Pump_DataPh+0x10a>
    c088:	2f 5f       	subi	r18, 0xFF	; 255
    c08a:	3f 4f       	sbci	r19, 0xFF	; 255

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
	unsigned char pump_number=0,i=0,count = 0,id_len;
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
    c08c:	23 30       	cpi	r18, 0x03	; 3
    c08e:	31 05       	cpc	r19, r1
    c090:	09 f0       	breq	.+2      	; 0xc094 <_Z25Update_Wireless_Pump_DataPh+0x108>
    c092:	83 cf       	rjmp	.-250    	; 0xbf9a <_Z25Update_Wireless_Pump_DataPh+0xe>
			return 1;
			
		}
	}
	
	return 0;
    c094:	80 e0       	ldi	r24, 0x00	; 0
}
    c096:	df 91       	pop	r29
    c098:	cf 91       	pop	r28
    c09a:	1f 91       	pop	r17
    c09c:	08 95       	ret

0000c09e <_Z13Store_All_APNv>:
    c09e:	08 95       	ret

0000c0a0 <_Z16Check_GSM_Signalv>:
// 	sprintf(_sSim_APNs.Jio,"jionet");
}


void Check_GSM_Signal(void)
{
    c0a0:	cf 93       	push	r28
    c0a2:	df 93       	push	r29
	static unsigned char counter;
	int temp_sig_strenght;
	
	counter++;
    c0a4:	80 91 63 0c 	lds	r24, 0x0C63	; 0x800c63 <_ZZ16Check_GSM_SignalvE7counter>
    c0a8:	8f 5f       	subi	r24, 0xFF	; 255
    c0aa:	80 93 63 0c 	sts	0x0C63, r24	; 0x800c63 <_ZZ16Check_GSM_SignalvE7counter>
	
	if(_kSERIAL_AT.available() != 0)
    c0ae:	83 e8       	ldi	r24, 0x83	; 131
    c0b0:	96 e1       	ldi	r25, 0x16	; 22
    c0b2:	0e 94 02 d3 	call	0x1a604	; 0x1a604 <_ZN14HardwareSerial9availableEv>
    c0b6:	89 2b       	or	r24, r25
    c0b8:	c9 f5       	brne	.+114    	; 0xc12c <_Z16Check_GSM_Signalv+0x8c>
	{
		return;
	}
		
	if(_sRuble_Parameters.Sim_Check == _eSIM_INSERTED)
    c0ba:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    c0be:	82 30       	cpi	r24, 0x02	; 2
    c0c0:	a1 f4       	brne	.+40     	; 0xc0ea <_Z16Check_GSM_Signalv+0x4a>
	{
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */		
    c0c2:	0e 94 1a 6b 	call	0xd634	; 0xd634 <_Z18_kGSM_SIG_STRENGTHv>
    c0c6:	ec 01       	movw	r28, r24
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
    c0c8:	4a e0       	ldi	r20, 0x0A	; 10
    c0ca:	50 e0       	ldi	r21, 0x00	; 0
    c0cc:	bc 01       	movw	r22, r24
    c0ce:	86 ec       	ldi	r24, 0xC6	; 198
    c0d0:	94 e1       	ldi	r25, 0x14	; 20
    c0d2:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
	else
	{
		temp_sig_strenght = 0;
	}
	
	if(temp_sig_strenght > 19)                 /* if there is weak signal */
    c0d6:	c4 31       	cpi	r28, 0x14	; 20
    c0d8:	d1 05       	cpc	r29, r1
    c0da:	4c f0       	brlt	.+18     	; 0xc0ee <_Z16Check_GSM_Signalv+0x4e>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c0dc:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c0e0:	88 7f       	andi	r24, 0xF8	; 248
    c0e2:	88 60       	ori	r24, 0x08	; 8
    c0e4:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    c0e8:	02 c0       	rjmp	.+4      	; 0xc0ee <_Z16Check_GSM_Signalv+0x4e>
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */		
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
	}
	else
	{
		temp_sig_strenght = 0;
    c0ea:	c0 e0       	ldi	r28, 0x00	; 0
    c0ec:	d0 e0       	ldi	r29, 0x00	; 0
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
	}
	 
	if(temp_sig_strenght < 20 && temp_sig_strenght > 13)   /* if there is moderate signal */
    c0ee:	ce 01       	movw	r24, r28
    c0f0:	0e 97       	sbiw	r24, 0x0e	; 14
    c0f2:	06 97       	sbiw	r24, 0x06	; 6
    c0f4:	30 f4       	brcc	.+12     	; 0xc102 <_Z16Check_GSM_Signalv+0x62>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c0f6:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c0fa:	84 7f       	andi	r24, 0xF4	; 244
    c0fc:	84 60       	ori	r24, 0x04	; 4
    c0fe:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
	}
	 
	 if(temp_sig_strenght < 14 && temp_sig_strenght > 5)   /* if there is strong signal */
    c102:	ce 01       	movw	r24, r28
    c104:	06 97       	sbiw	r24, 0x06	; 6
    c106:	08 97       	sbiw	r24, 0x08	; 8
    c108:	28 f4       	brcc	.+10     	; 0xc114 <_Z16Check_GSM_Signalv+0x74>
	{
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    c10a:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c10e:	82 7f       	andi	r24, 0xF2	; 242
    c110:	82 60       	ori	r24, 0x02	; 2
    c112:	0a c0       	rjmp	.+20     	; 0xc128 <_Z16Check_GSM_Signalv+0x88>
	}
	 
	if(temp_sig_strenght < 5)                           /* if there is no signal */
    c114:	c5 30       	cpi	r28, 0x05	; 5
    c116:	d1 05       	cpc	r29, r1
    c118:	1c f0       	brlt	.+6      	; 0xc120 <_Z16Check_GSM_Signalv+0x80>
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
	}
	
	if (temp_sig_strenght >= 99) 
    c11a:	c3 36       	cpi	r28, 0x63	; 99
    c11c:	d1 05       	cpc	r29, r1
    c11e:	34 f0       	brlt	.+12     	; 0xc12c <_Z16Check_GSM_Signalv+0x8c>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
    c120:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    c124:	81 7f       	andi	r24, 0xF1	; 241
    c126:	81 60       	ori	r24, 0x01	; 1
    c128:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
	}
	
}
    c12c:	df 91       	pop	r29
    c12e:	cf 91       	pop	r28
    c130:	08 95       	ret

0000c132 <_Z14Get_Local_Timev>:


void Get_Local_Time(void)
{
    c132:	8f 92       	push	r8
    c134:	9f 92       	push	r9
    c136:	af 92       	push	r10
    c138:	bf 92       	push	r11
    c13a:	ef 92       	push	r14
    c13c:	ff 92       	push	r15
    c13e:	0f 93       	push	r16
    c140:	1f 93       	push	r17
    c142:	cf 93       	push	r28
    c144:	df 93       	push	r29
	char i;
	
	for(unsigned char count=0; count <2; count++)
    c146:	10 e0       	ldi	r17, 0x00	; 0
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    c148:	84 ed       	ldi	r24, 0xD4	; 212
    c14a:	e8 2e       	mov	r14, r24
    c14c:	83 e0       	ldi	r24, 0x03	; 3
    c14e:	f8 2e       	mov	r15, r24
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
	{
		if(count == 0)
    c150:	11 11       	cpse	r17, r1
    c152:	1f c0       	rjmp	.+62     	; 0xc192 <_Z14Get_Local_Timev+0x60>
		{
			Reset_Buffer();
    c154:	5c d7       	rcall	.+3768   	; 0xd00e <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZU=1"));
    c156:	68 ec       	ldi	r22, 0xC8	; 200
    c158:	70 e2       	ldi	r23, 0x20	; 32
    c15a:	83 e8       	ldi	r24, 0x83	; 131
    c15c:	96 e1       	ldi	r25, 0x16	; 22
    c15e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c162:	02 e0       	ldi	r16, 0x02	; 2
    c164:	28 eb       	ldi	r18, 0xB8	; 184
    c166:	3b e0       	ldi	r19, 0x0B	; 11
    c168:	40 e0       	ldi	r20, 0x00	; 0
    c16a:	50 e0       	ldi	r21, 0x00	; 0
    c16c:	6e e1       	ldi	r22, 0x1E	; 30
    c16e:	73 e0       	ldi	r23, 0x03	; 3
    c170:	80 e0       	ldi	r24, 0x00	; 0
    c172:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    c174:	b1 d7       	rcall	.+3938   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    c176:	4b d7       	rcall	.+3734   	; 0xd00e <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZR=1"));
    c178:	6e eb       	ldi	r22, 0xBE	; 190
    c17a:	70 e2       	ldi	r23, 0x20	; 32
    c17c:	83 e8       	ldi	r24, 0x83	; 131
    c17e:	96 e1       	ldi	r25, 0x16	; 22
    c180:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK1",  NULL,3000,2);
    c184:	28 eb       	ldi	r18, 0xB8	; 184
    c186:	3b e0       	ldi	r19, 0x0B	; 11
    c188:	40 e0       	ldi	r20, 0x00	; 0
    c18a:	50 e0       	ldi	r21, 0x00	; 0
    c18c:	61 e2       	ldi	r22, 0x21	; 33
    c18e:	73 e0       	ldi	r23, 0x03	; 3
		}
		else
		{
			Reset_Buffer();
    c190:	1e c0       	rjmp	.+60     	; 0xc1ce <_Z14Get_Local_Timev+0x9c>
    c192:	3d d7       	rcall	.+3706   	; 0xd00e <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP=\"in.pool.ntp.org\",22"));
    c194:	61 ea       	ldi	r22, 0xA1	; 161
    c196:	70 e2       	ldi	r23, 0x20	; 32
    c198:	83 e8       	ldi	r24, 0x83	; 131
    c19a:	96 e1       	ldi	r25, 0x16	; 22
    c19c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,5000,2);
    c1a0:	02 e0       	ldi	r16, 0x02	; 2
    c1a2:	28 e8       	ldi	r18, 0x88	; 136
    c1a4:	33 e1       	ldi	r19, 0x13	; 19
    c1a6:	40 e0       	ldi	r20, 0x00	; 0
    c1a8:	50 e0       	ldi	r21, 0x00	; 0
    c1aa:	6e e1       	ldi	r22, 0x1E	; 30
    c1ac:	73 e0       	ldi	r23, 0x03	; 3
    c1ae:	80 e0       	ldi	r24, 0x00	; 0
    c1b0:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    c1b2:	92 d7       	rcall	.+3876   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    c1b4:	2c d7       	rcall	.+3672   	; 0xd00e <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP"));
    c1b6:	69 e9       	ldi	r22, 0x99	; 153
    c1b8:	70 e2       	ldi	r23, 0x20	; 32
    c1ba:	83 e8       	ldi	r24, 0x83	; 131
    c1bc:	96 e1       	ldi	r25, 0x16	; 22
    c1be:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "+CNTP: 0",  NULL,3000,2);
    c1c2:	28 eb       	ldi	r18, 0xB8	; 184
    c1c4:	3b e0       	ldi	r19, 0x0B	; 11
    c1c6:	40 e0       	ldi	r20, 0x00	; 0
    c1c8:	50 e0       	ldi	r21, 0x00	; 0
    c1ca:	65 e2       	ldi	r22, 0x25	; 37
    c1cc:	73 e0       	ldi	r23, 0x03	; 3
    c1ce:	80 e0       	ldi	r24, 0x00	; 0
    c1d0:	90 e0       	ldi	r25, 0x00	; 0
		}
		

		Reset_Buffer();
    c1d2:	82 d7       	rcall	.+3844   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    c1d4:	1c d7       	rcall	.+3640   	; 0xd00e <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CCLK?"));
    c1d6:	60 e9       	ldi	r22, 0x90	; 144
    c1d8:	70 e2       	ldi	r23, 0x20	; 32
    c1da:	83 e8       	ldi	r24, 0x83	; 131
    c1dc:	96 e1       	ldi	r25, 0x16	; 22
    c1de:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK", NULL,2000,2);
    c1e2:	02 e0       	ldi	r16, 0x02	; 2
    c1e4:	20 ed       	ldi	r18, 0xD0	; 208
    c1e6:	37 e0       	ldi	r19, 0x07	; 7
    c1e8:	40 e0       	ldi	r20, 0x00	; 0
    c1ea:	50 e0       	ldi	r21, 0x00	; 0
    c1ec:	6e e1       	ldi	r22, 0x1E	; 30
    c1ee:	73 e0       	ldi	r23, 0x03	; 3
    c1f0:	80 e0       	ldi	r24, 0x00	; 0
    c1f2:	90 e0       	ldi	r25, 0x00	; 0
    c1f4:	71 d7       	rcall	.+3810   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
    c1f6:	6e e2       	ldi	r22, 0x2E	; 46
    c1f8:	73 e0       	ldi	r23, 0x03	; 3
    c1fa:	80 ed       	ldi	r24, 0xD0	; 208
    c1fc:	9f e0       	ldi	r25, 0x0F	; 15
    c1fe:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    c202:	89 2b       	or	r24, r25
    c204:	09 f4       	brne	.+2      	; 0xc208 <_Z14Get_Local_Timev+0xd6>
    c206:	0f c1       	rjmp	.+542    	; 0xc426 <_Z14Get_Local_Timev+0x2f4>
    c208:	80 e0       	ldi	r24, 0x00	; 0
    c20a:	90 e0       	ldi	r25, 0x00	; 0
    c20c:	c8 2f       	mov	r28, r24
		{
			for(i=0;i<20;i++)
			{
				if(_gPub_Buff[i] == '+' && _gPub_Buff[i+5] == ':')
    c20e:	fc 01       	movw	r30, r24
    c210:	e0 53       	subi	r30, 0x30	; 48
    c212:	f0 4f       	sbci	r31, 0xF0	; 240
    c214:	20 81       	ld	r18, Z
    c216:	2b 32       	cpi	r18, 0x2B	; 43
    c218:	31 f4       	brne	.+12     	; 0xc226 <_Z14Get_Local_Timev+0xf4>
    c21a:	fc 01       	movw	r30, r24
    c21c:	eb 52       	subi	r30, 0x2B	; 43
    c21e:	f0 4f       	sbci	r31, 0xF0	; 240
    c220:	20 81       	ld	r18, Z
    c222:	2a 33       	cpi	r18, 0x3A	; 58
    c224:	29 f0       	breq	.+10     	; 0xc230 <_Z14Get_Local_Timev+0xfe>
    c226:	01 96       	adiw	r24, 0x01	; 1
		_kSERIAL_AT.println(F("AT+CCLK?"));
		Send_AT_Command(NULL, "OK", NULL,2000,2);
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
		{
			for(i=0;i<20;i++)
    c228:	84 31       	cpi	r24, 0x14	; 20
    c22a:	91 05       	cpc	r25, r1
    c22c:	79 f7       	brne	.-34     	; 0xc20c <_Z14Get_Local_Timev+0xda>
    c22e:	c4 e1       	ldi	r28, 0x14	; 20
		{
			return;
		}
		
		/*************************************************** UPDATE TIME AND DATE *********************************************/
		_sRuble_Parameters.Update_Local_Time[0] = ((_gPub_Buff[i+17]-0x30)*10) + (_gPub_Buff[i+18]-0x30);    /* hold hour */
    c230:	d0 e0       	ldi	r29, 0x00	; 0
    c232:	fe 01       	movw	r30, r28
    c234:	ef 51       	subi	r30, 0x1F	; 31
    c236:	f0 4f       	sbci	r31, 0xF0	; 240
    c238:	20 81       	ld	r18, Z
    c23a:	fe 01       	movw	r30, r28
    c23c:	ee 51       	subi	r30, 0x1E	; 30
    c23e:	f0 4f       	sbci	r31, 0xF0	; 240
    c240:	90 81       	ld	r25, Z
    c242:	22 0f       	add	r18, r18
    c244:	20 56       	subi	r18, 0x60	; 96
    c246:	82 2f       	mov	r24, r18
    c248:	88 0f       	add	r24, r24
    c24a:	88 0f       	add	r24, r24
    c24c:	28 0f       	add	r18, r24
    c24e:	90 53       	subi	r25, 0x30	; 48
    c250:	82 2f       	mov	r24, r18
    c252:	89 0f       	add	r24, r25
    c254:	80 93 ef 13 	sts	0x13EF, r24	; 0x8013ef <_sRuble_Parameters+0x41>
		_sRuble_Parameters.Update_Local_Time[1] = ((_gPub_Buff[i+20]-0X30)*10) + (_gPub_Buff[i+21]-0X30);    /* hold minute */
    c258:	fe 01       	movw	r30, r28
    c25a:	ec 51       	subi	r30, 0x1C	; 28
    c25c:	f0 4f       	sbci	r31, 0xF0	; 240
    c25e:	90 81       	ld	r25, Z
    c260:	fe 01       	movw	r30, r28
    c262:	eb 51       	subi	r30, 0x1B	; 27
    c264:	f0 4f       	sbci	r31, 0xF0	; 240
    c266:	30 81       	ld	r19, Z
    c268:	99 0f       	add	r25, r25
    c26a:	90 56       	subi	r25, 0x60	; 96
    c26c:	29 2f       	mov	r18, r25
    c26e:	22 0f       	add	r18, r18
    c270:	22 0f       	add	r18, r18
    c272:	29 0f       	add	r18, r25
    c274:	30 53       	subi	r19, 0x30	; 48
    c276:	42 2f       	mov	r20, r18
    c278:	43 0f       	add	r20, r19
    c27a:	40 93 f0 13 	sts	0x13F0, r20	; 0x8013f0 <_sRuble_Parameters+0x42>
		_sRuble_Parameters.Update_Local_Time[2] = ((_gPub_Buff[i+23]-0X30)*10) + (_gPub_Buff[i+24]-0X30);    /* hold second */
    c27e:	fe 01       	movw	r30, r28
    c280:	e9 51       	subi	r30, 0x19	; 25
    c282:	f0 4f       	sbci	r31, 0xF0	; 240
    c284:	90 81       	ld	r25, Z
    c286:	fe 01       	movw	r30, r28
    c288:	e8 51       	subi	r30, 0x18	; 24
    c28a:	f0 4f       	sbci	r31, 0xF0	; 240
    c28c:	20 81       	ld	r18, Z
    c28e:	99 0f       	add	r25, r25
    c290:	90 56       	subi	r25, 0x60	; 96
    c292:	39 2f       	mov	r19, r25
    c294:	33 0f       	add	r19, r19
    c296:	33 0f       	add	r19, r19
    c298:	93 0f       	add	r25, r19
    c29a:	20 53       	subi	r18, 0x30	; 48
    c29c:	59 2f       	mov	r21, r25
    c29e:	52 0f       	add	r21, r18
    c2a0:	50 93 f1 13 	sts	0x13F1, r21	; 0x8013f1 <_sRuble_Parameters+0x43>
		
		_sRuble_Parameters.Current_Time_In_Sec = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]) ;
    c2a4:	28 2f       	mov	r18, r24
    c2a6:	30 e0       	ldi	r19, 0x00	; 0
    c2a8:	a0 e1       	ldi	r26, 0x10	; 16
    c2aa:	be e0       	ldi	r27, 0x0E	; 14
    c2ac:	0e 94 c3 eb 	call	0x1d786	; 0x1d786 <__umulhisi3>
    c2b0:	4b 01       	movw	r8, r22
    c2b2:	5c 01       	movw	r10, r24
    c2b4:	24 2f       	mov	r18, r20
    c2b6:	30 e0       	ldi	r19, 0x00	; 0
    c2b8:	ac e3       	ldi	r26, 0x3C	; 60
    c2ba:	b0 e0       	ldi	r27, 0x00	; 0
    c2bc:	0e 94 c3 eb 	call	0x1d786	; 0x1d786 <__umulhisi3>
    c2c0:	dc 01       	movw	r26, r24
    c2c2:	cb 01       	movw	r24, r22
    c2c4:	88 0d       	add	r24, r8
    c2c6:	99 1d       	adc	r25, r9
    c2c8:	aa 1d       	adc	r26, r10
    c2ca:	bb 1d       	adc	r27, r11
    c2cc:	85 0f       	add	r24, r21
    c2ce:	91 1d       	adc	r25, r1
    c2d0:	a1 1d       	adc	r26, r1
    c2d2:	b1 1d       	adc	r27, r1
    c2d4:	80 93 be 13 	sts	0x13BE, r24	; 0x8013be <_sRuble_Parameters+0x10>
    c2d8:	90 93 bf 13 	sts	0x13BF, r25	; 0x8013bf <_sRuble_Parameters+0x11>
    c2dc:	a0 93 c0 13 	sts	0x13C0, r26	; 0x8013c0 <_sRuble_Parameters+0x12>
    c2e0:	b0 93 c1 13 	sts	0x13C1, r27	; 0x8013c1 <_sRuble_Parameters+0x13>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c2e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c2e8:	81 30       	cpi	r24, 0x01	; 1
    c2ea:	91 f4       	brne	.+36     	; 0xc310 <_Z14Get_Local_Timev+0x1de>
		{
			Serial.println();
    c2ec:	86 ec       	ldi	r24, 0xC6	; 198
    c2ee:	94 e1       	ldi	r25, 0x14	; 20
    c2f0:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
			_kSERIAL_MON_PRINT_NUM((unsigned long int)_sRuble_Parameters.Current_Time_In_Sec);
    c2f4:	40 91 be 13 	lds	r20, 0x13BE	; 0x8013be <_sRuble_Parameters+0x10>
    c2f8:	50 91 bf 13 	lds	r21, 0x13BF	; 0x8013bf <_sRuble_Parameters+0x11>
    c2fc:	60 91 c0 13 	lds	r22, 0x13C0	; 0x8013c0 <_sRuble_Parameters+0x12>
    c300:	70 91 c1 13 	lds	r23, 0x13C1	; 0x8013c1 <_sRuble_Parameters+0x13>
    c304:	2a e0       	ldi	r18, 0x0A	; 10
    c306:	30 e0       	ldi	r19, 0x00	; 0
    c308:	86 ec       	ldi	r24, 0xC6	; 198
    c30a:	94 e1       	ldi	r25, 0x14	; 20
    c30c:	0e 94 ed d5 	call	0x1abda	; 0x1abda <_ZN5Print7printlnEmi>
		}
		
		_sRuble_Parameters.Update_Local_Date[2] = ((_gPub_Buff[i+8]-0X30)*10) +  (_gPub_Buff[i+9]-0X30);      /* hold date */
    c310:	fe 01       	movw	r30, r28
    c312:	e8 52       	subi	r30, 0x28	; 40
    c314:	f0 4f       	sbci	r31, 0xF0	; 240
    c316:	80 81       	ld	r24, Z
    c318:	fe 01       	movw	r30, r28
    c31a:	e7 52       	subi	r30, 0x27	; 39
    c31c:	f0 4f       	sbci	r31, 0xF0	; 240
    c31e:	90 81       	ld	r25, Z
    c320:	88 0f       	add	r24, r24
    c322:	80 56       	subi	r24, 0x60	; 96
    c324:	28 2f       	mov	r18, r24
    c326:	22 0f       	add	r18, r18
    c328:	22 0f       	add	r18, r18
    c32a:	82 0f       	add	r24, r18
    c32c:	90 53       	subi	r25, 0x30	; 48
    c32e:	89 0f       	add	r24, r25
    c330:	80 93 f4 13 	sts	0x13F4, r24	; 0x8013f4 <_sRuble_Parameters+0x46>
		_sRuble_Parameters.Update_Local_Date[1] = ((_gPub_Buff[i+11]-0X30)*10) + (_gPub_Buff[i+12]-0X30);     /* hold month */
    c334:	fe 01       	movw	r30, r28
    c336:	e5 52       	subi	r30, 0x25	; 37
    c338:	f0 4f       	sbci	r31, 0xF0	; 240
    c33a:	80 81       	ld	r24, Z
    c33c:	fe 01       	movw	r30, r28
    c33e:	e4 52       	subi	r30, 0x24	; 36
    c340:	f0 4f       	sbci	r31, 0xF0	; 240
    c342:	90 81       	ld	r25, Z
    c344:	88 0f       	add	r24, r24
    c346:	80 56       	subi	r24, 0x60	; 96
    c348:	28 2f       	mov	r18, r24
    c34a:	22 0f       	add	r18, r18
    c34c:	22 0f       	add	r18, r18
    c34e:	82 0f       	add	r24, r18
    c350:	90 53       	subi	r25, 0x30	; 48
    c352:	89 0f       	add	r24, r25
    c354:	80 93 f3 13 	sts	0x13F3, r24	; 0x8013f3 <_sRuble_Parameters+0x45>
		_sRuble_Parameters.Update_Local_Date[0] = ((_gPub_Buff[i+14]-0X30)*10) + (_gPub_Buff[i+15]-0X30);
    c358:	fe 01       	movw	r30, r28
    c35a:	e2 52       	subi	r30, 0x22	; 34
    c35c:	f0 4f       	sbci	r31, 0xF0	; 240
    c35e:	80 81       	ld	r24, Z
    c360:	c1 52       	subi	r28, 0x21	; 33
    c362:	d0 4f       	sbci	r29, 0xF0	; 240
    c364:	98 81       	ld	r25, Y
    c366:	88 0f       	add	r24, r24
    c368:	80 56       	subi	r24, 0x60	; 96
    c36a:	28 2f       	mov	r18, r24
    c36c:	22 0f       	add	r18, r18
    c36e:	22 0f       	add	r18, r18
    c370:	82 0f       	add	r24, r18
    c372:	90 53       	subi	r25, 0x30	; 48
    c374:	89 0f       	add	r24, r25
    c376:	80 93 f2 13 	sts	0x13F2, r24	; 0x8013f2 <_sRuble_Parameters+0x44>
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    c37a:	e0 ed       	ldi	r30, 0xD0	; 208
    c37c:	ff e0       	ldi	r31, 0x0F	; 15
    c37e:	df 01       	movw	r26, r30
    c380:	c7 01       	movw	r24, r14
    c382:	1d 92       	st	X+, r1
    c384:	01 97       	sbiw	r24, 0x01	; 1
    c386:	e9 f7       	brne	.-6      	; 0xc382 <_Z14Get_Local_Timev+0x250>
		
		_kSERAIL_MON_WRITE("my date : ");
    c388:	65 e8       	ldi	r22, 0x85	; 133
    c38a:	70 e2       	ldi	r23, 0x20	; 32
    c38c:	86 ec       	ldi	r24, 0xC6	; 198
    c38e:	94 e1       	ldi	r25, 0x14	; 20
    c390:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    c394:	4a e0       	ldi	r20, 0x0A	; 10
    c396:	50 e0       	ldi	r21, 0x00	; 0
    c398:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
    c39c:	86 ec       	ldi	r24, 0xC6	; 198
    c39e:	94 e1       	ldi	r25, 0x14	; 20
    c3a0:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c3a4:	86 ec       	ldi	r24, 0xC6	; 198
    c3a6:	94 e1       	ldi	r25, 0x14	; 20
    c3a8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my month : ");
    c3ac:	69 e7       	ldi	r22, 0x79	; 121
    c3ae:	70 e2       	ldi	r23, 0x20	; 32
    c3b0:	86 ec       	ldi	r24, 0xC6	; 198
    c3b2:	94 e1       	ldi	r25, 0x14	; 20
    c3b4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    c3b8:	4a e0       	ldi	r20, 0x0A	; 10
    c3ba:	50 e0       	ldi	r21, 0x00	; 0
    c3bc:	60 91 f3 13 	lds	r22, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0x45>
    c3c0:	86 ec       	ldi	r24, 0xC6	; 198
    c3c2:	94 e1       	ldi	r25, 0x14	; 20
    c3c4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c3c8:	86 ec       	ldi	r24, 0xC6	; 198
    c3ca:	94 e1       	ldi	r25, 0x14	; 20
    c3cc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my year : ");
    c3d0:	6e e6       	ldi	r22, 0x6E	; 110
    c3d2:	70 e2       	ldi	r23, 0x20	; 32
    c3d4:	86 ec       	ldi	r24, 0xC6	; 198
    c3d6:	94 e1       	ldi	r25, 0x14	; 20
    c3d8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    c3dc:	4a e0       	ldi	r20, 0x0A	; 10
    c3de:	50 e0       	ldi	r21, 0x00	; 0
    c3e0:	60 91 f4 13 	lds	r22, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    c3e4:	86 ec       	ldi	r24, 0xC6	; 198
    c3e6:	94 e1       	ldi	r25, 0x14	; 20
    c3e8:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c3ec:	86 ec       	ldi	r24, 0xC6	; 198
    c3ee:	94 e1       	ldi	r25, 0x14	; 20
    c3f0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		
		if(_sRuble_Parameters.Update_Local_Time[0] > 23 || _sRuble_Parameters.Update_Local_Time[1] > 59 ||  _sRuble_Parameters.Update_Local_Time[2] > 59)
    c3f4:	80 91 ef 13 	lds	r24, 0x13EF	; 0x8013ef <_sRuble_Parameters+0x41>
    c3f8:	88 31       	cpi	r24, 0x18	; 24
    c3fa:	a8 f4       	brcc	.+42     	; 0xc426 <_Z14Get_Local_Timev+0x2f4>
    c3fc:	80 91 f0 13 	lds	r24, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0x42>
    c400:	8c 33       	cpi	r24, 0x3C	; 60
    c402:	88 f4       	brcc	.+34     	; 0xc426 <_Z14Get_Local_Timev+0x2f4>
    c404:	80 91 f1 13 	lds	r24, 0x13F1	; 0x8013f1 <_sRuble_Parameters+0x43>
    c408:	8c 33       	cpi	r24, 0x3C	; 60
    c40a:	68 f4       	brcc	.+26     	; 0xc426 <_Z14Get_Local_Timev+0x2f4>
		{
			return;
		}
		_sRuble_Parameters.Display_Update  |= _kTIME_UPDATE;
    c40c:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    c410:	81 60       	ori	r24, 0x01	; 1
    c412:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
		
		if(_sRuble_Parameters.Update_Local_Date[2] != 70)
    c416:	80 91 f4 13 	lds	r24, 0x13F4	; 0x8013f4 <_sRuble_Parameters+0x46>
    c41a:	86 34       	cpi	r24, 0x46	; 70
    c41c:	21 f4       	brne	.+8      	; 0xc426 <_Z14Get_Local_Timev+0x2f4>

void Get_Local_Time(void)
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
    c41e:	1f 5f       	subi	r17, 0xFF	; 255
    c420:	12 30       	cpi	r17, 0x02	; 2
    c422:	09 f0       	breq	.+2      	; 0xc426 <_Z14Get_Local_Timev+0x2f4>
    c424:	95 ce       	rjmp	.-726    	; 0xc150 <_Z14Get_Local_Timev+0x1e>
		{
			return;
		}
	}
	
}
    c426:	df 91       	pop	r29
    c428:	cf 91       	pop	r28
    c42a:	1f 91       	pop	r17
    c42c:	0f 91       	pop	r16
    c42e:	ff 90       	pop	r15
    c430:	ef 90       	pop	r14
    c432:	bf 90       	pop	r11
    c434:	af 90       	pop	r10
    c436:	9f 90       	pop	r9
    c438:	8f 90       	pop	r8
    c43a:	08 95       	ret

0000c43c <_Z16Gsm_Gprs_Networkv>:


bool Gsm_Gprs_Network(void)
{
    c43c:	ff 92       	push	r15
    c43e:	0f 93       	push	r16
    c440:	1f 93       	push	r17
    c442:	cf 93       	push	r28
    c444:	df 93       	push	r29
    c446:	cd b7       	in	r28, 0x3d	; 61
    c448:	de b7       	in	r29, 0x3e	; 62
    c44a:	c4 56       	subi	r28, 0x64	; 100
    c44c:	d1 09       	sbc	r29, r1
    c44e:	0f b6       	in	r0, 0x3f	; 63
    c450:	f8 94       	cli
    c452:	de bf       	out	0x3e, r29	; 62
    c454:	0f be       	out	0x3f, r0	; 63
    c456:	cd bf       	out	0x3d, r28	; 61
	char temp_data[100];
	unsigned char check_sim;
	/***************************************** wait for the netwrok *******************************************/ 
	check_sim = 0;
	if (_kIS_GSM_CONNECTED())
    c458:	2b d7       	rcall	.+3670   	; 0xd2b0 <_Z20Check_Gsm_Connectionv>
    c45a:	f8 2e       	mov	r15, r24
    c45c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c460:	ff 20       	and	r15, r15
    c462:	09 f4       	brne	.+2      	; 0xc466 <_Z16Gsm_Gprs_Networkv+0x2a>
    c464:	bf c0       	rjmp	.+382    	; 0xc5e4 <_Z16Gsm_Gprs_Networkv+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c466:	81 30       	cpi	r24, 0x01	; 1
    c468:	51 f4       	brne	.+20     	; 0xc47e <_Z16Gsm_Gprs_Networkv+0x42>
		{
			_kSERAIL_MON_WRITE("Connected to gsm/GPRS network 0");                /* for debugging purpose */
    c46a:	6e e4       	ldi	r22, 0x4E	; 78
    c46c:	70 e2       	ldi	r23, 0x20	; 32
    c46e:	86 ec       	ldi	r24, 0xC6	; 198
    c470:	94 e1       	ldi	r25, 0x14	; 20
    c472:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c476:	86 ec       	ldi	r24, 0xC6	; 198
    c478:	94 e1       	ldi	r25, 0x14	; 20
    c47a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		memset(temp_data,0,sizeof(temp_data));
    c47e:	8e 01       	movw	r16, r28
    c480:	0f 5f       	subi	r16, 0xFF	; 255
    c482:	1f 4f       	sbci	r17, 0xFF	; 255
    c484:	84 e6       	ldi	r24, 0x64	; 100
    c486:	f8 01       	movw	r30, r16
    c488:	11 92       	st	Z+, r1
    c48a:	8a 95       	dec	r24
    c48c:	e9 f7       	brne	.-6      	; 0xc488 <_Z16Gsm_Gprs_Networkv+0x4c>
		Get_Operator_Name(temp_data);
    c48e:	c8 01       	movw	r24, r16
    c490:	c1 d7       	rcall	.+3970   	; 0xd414 <_Z17Get_Operator_NamePc>
		
		
		if(strstr(temp_data,"Vod") != 0 || strstr(temp_data,"Vi In") != 0)
    c492:	64 e3       	ldi	r22, 0x34	; 52
    c494:	73 e0       	ldi	r23, 0x03	; 3
    c496:	c8 01       	movw	r24, r16
    c498:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    c49c:	89 2b       	or	r24, r25
    c49e:	39 f4       	brne	.+14     	; 0xc4ae <_Z16Gsm_Gprs_Networkv+0x72>
    c4a0:	68 e3       	ldi	r22, 0x38	; 56
    c4a2:	73 e0       	ldi	r23, 0x03	; 3
    c4a4:	c8 01       	movw	r24, r16
    c4a6:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    c4aa:	89 2b       	or	r24, r25
    c4ac:	49 f0       	breq	.+18     	; 0xc4c0 <_Z16Gsm_Gprs_Networkv+0x84>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"www"/*_sSim_APNs.Vodafone*/);
    c4ae:	6e e3       	ldi	r22, 0x3E	; 62
    c4b0:	73 e0       	ldi	r23, 0x03	; 3
    c4b2:	85 ea       	ldi	r24, 0xA5	; 165
    c4b4:	9d e0       	ldi	r25, 0x0D	; 13
    c4b6:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
			_kSERAIL_MON_WRITE("Vodafone");               
    c4ba:	65 e4       	ldi	r22, 0x45	; 69
    c4bc:	70 e2       	ldi	r23, 0x20	; 32
    c4be:	2d c0       	rjmp	.+90     	; 0xc51a <_Z16Gsm_Gprs_Networkv+0xde>
			_kSERIAL_MON_CLEAR();
			check_sim = 1;
		}
		
		else if (strstr(temp_data,"Air") != 0 || strstr(temp_data,"air") != 0)
    c4c0:	62 e4       	ldi	r22, 0x42	; 66
    c4c2:	73 e0       	ldi	r23, 0x03	; 3
    c4c4:	c8 01       	movw	r24, r16
    c4c6:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    c4ca:	89 2b       	or	r24, r25
    c4cc:	39 f4       	brne	.+14     	; 0xc4dc <_Z16Gsm_Gprs_Networkv+0xa0>
    c4ce:	66 e4       	ldi	r22, 0x46	; 70
    c4d0:	73 e0       	ldi	r23, 0x03	; 3
    c4d2:	c8 01       	movw	r24, r16
    c4d4:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    c4d8:	89 2b       	or	r24, r25
    c4da:	49 f0       	breq	.+18     	; 0xc4ee <_Z16Gsm_Gprs_Networkv+0xb2>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"airtelgprs.com");
    c4dc:	6a e4       	ldi	r22, 0x4A	; 74
    c4de:	73 e0       	ldi	r23, 0x03	; 3
    c4e0:	85 ea       	ldi	r24, 0xA5	; 165
    c4e2:	9d e0       	ldi	r25, 0x0D	; 13
    c4e4:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
			_kSERAIL_MON_WRITE("Airtel");
    c4e8:	6e e3       	ldi	r22, 0x3E	; 62
    c4ea:	70 e2       	ldi	r23, 0x20	; 32
    c4ec:	26 c0       	rjmp	.+76     	; 0xc53a <_Z16Gsm_Gprs_Networkv+0xfe>
			/*strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,_sSim_APNs.BSNL);
			_kSERAIL_MON_WRITE("BSNL");               
			_kSERIAL_MON_CLEAR();
		}*/
		
		else if(strstr(temp_data,"jio") != 0  || strstr(temp_data,"Jio")!=0)
    c4ee:	69 e5       	ldi	r22, 0x59	; 89
    c4f0:	73 e0       	ldi	r23, 0x03	; 3
    c4f2:	c8 01       	movw	r24, r16
    c4f4:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    c4f8:	89 2b       	or	r24, r25
    c4fa:	39 f4       	brne	.+14     	; 0xc50a <_Z16Gsm_Gprs_Networkv+0xce>
    c4fc:	6d e5       	ldi	r22, 0x5D	; 93
    c4fe:	73 e0       	ldi	r23, 0x03	; 3
    c500:	c8 01       	movw	r24, r16
    c502:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    c506:	89 2b       	or	r24, r25
    c508:	b1 f0       	breq	.+44     	; 0xc536 <_Z16Gsm_Gprs_Networkv+0xfa>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"jionet"/*_sSim_APNs.Jio*/);
    c50a:	61 e6       	ldi	r22, 0x61	; 97
    c50c:	73 e0       	ldi	r23, 0x03	; 3
    c50e:	85 ea       	ldi	r24, 0xA5	; 165
    c510:	9d e0       	ldi	r25, 0x0D	; 13
    c512:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
			_kSERAIL_MON_WRITE("jio");                /* for debugging purpose */
    c516:	6a e3       	ldi	r22, 0x3A	; 58
    c518:	70 e2       	ldi	r23, 0x20	; 32
    c51a:	86 ec       	ldi	r24, 0xC6	; 198
    c51c:	94 e1       	ldi	r25, 0x14	; 20
    c51e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c522:	86 ec       	ldi	r24, 0xC6	; 198
    c524:	94 e1       	ldi	r25, 0x14	; 20
    c526:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			//return 0;
		}		
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
    c52a:	85 ea       	ldi	r24, 0xA5	; 165
    c52c:	9d e0       	ldi	r25, 0x0D	; 13
    c52e:	8f d7       	rcall	.+3870   	; 0xd44e <_Z12Gprs_ConnectPc>
    c530:	81 11       	cpse	r24, r1
    c532:	48 c0       	rjmp	.+144    	; 0xc5c4 <_Z16Gsm_Gprs_Networkv+0x188>
    c534:	0b c0       	rjmp	.+22     	; 0xc54c <_Z16Gsm_Gprs_Networkv+0x110>
			check_sim = 1;
		}
		
		else
		{
			_kSERAIL_MON_WRITE("Can't get opeartor Name");                /* for debugging purpose */
    c536:	62 e2       	ldi	r22, 0x22	; 34
    c538:	70 e2       	ldi	r23, 0x20	; 32
    c53a:	86 ec       	ldi	r24, 0xC6	; 198
    c53c:	94 e1       	ldi	r25, 0x14	; 20
    c53e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c542:	86 ec       	ldi	r24, 0xC6	; 198
    c544:	94 e1       	ldi	r25, 0x14	; 20
    c546:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    c54a:	3c c0       	rjmp	.+120    	; 0xc5c4 <_Z16Gsm_Gprs_Networkv+0x188>
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
			{
				_kSERAIL_MON_WRITE("Fail to Connect GPRS");                /* for debugging purpose */
    c54c:	6d e0       	ldi	r22, 0x0D	; 13
    c54e:	70 e2       	ldi	r23, 0x20	; 32
    c550:	86 ec       	ldi	r24, 0xC6	; 198
    c552:	94 e1       	ldi	r25, 0x14	; 20
    c554:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    c558:	86 ec       	ldi	r24, 0xC6	; 198
    c55a:	94 e1       	ldi	r25, 0x14	; 20
    c55c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				Reset_Buffer();
    c560:	56 d5       	rcall	.+2732   	; 0xd00e <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c562:	61 e0       	ldi	r22, 0x01	; 1
    c564:	70 e2       	ldi	r23, 0x20	; 32
    c566:	83 e8       	ldi	r24, 0x83	; 131
    c568:	96 e1       	ldi	r25, 0x16	; 22
    c56a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
    c56e:	01 e0       	ldi	r16, 0x01	; 1
    c570:	20 e1       	ldi	r18, 0x10	; 16
    c572:	37 e2       	ldi	r19, 0x27	; 39
    c574:	40 e0       	ldi	r20, 0x00	; 0
    c576:	50 e0       	ldi	r21, 0x00	; 0
    c578:	68 e6       	ldi	r22, 0x68	; 104
    c57a:	73 e0       	ldi	r23, 0x03	; 3
    c57c:	80 e0       	ldi	r24, 0x00	; 0
    c57e:	90 e0       	ldi	r25, 0x00	; 0
    c580:	ab d5       	rcall	.+2902   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
				_kDELAY_MS(10000);
    c582:	60 e1       	ldi	r22, 0x10	; 16
    c584:	77 e2       	ldi	r23, 0x27	; 39
    c586:	80 e0       	ldi	r24, 0x00	; 0
    c588:	90 e0       	ldi	r25, 0x00	; 0
    c58a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
				if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c58e:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
    c592:	81 30       	cpi	r24, 0x01	; 1
    c594:	31 f0       	breq	.+12     	; 0xc5a2 <_Z16Gsm_Gprs_Networkv+0x166>
				{
					_kDELAY_MS(120000);
    c596:	60 ec       	ldi	r22, 0xC0	; 192
    c598:	74 ed       	ldi	r23, 0xD4	; 212
    c59a:	81 e0       	ldi	r24, 0x01	; 1
    c59c:	90 e0       	ldi	r25, 0x00	; 0
    c59e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
				}
				Reset_Buffer();
    c5a2:	35 d5       	rcall	.+2666   	; 0xd00e <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("ATE0"));
    c5a4:	6c ef       	ldi	r22, 0xFC	; 252
    c5a6:	7f e1       	ldi	r23, 0x1F	; 31
    c5a8:	83 e8       	ldi	r24, 0x83	; 131
    c5aa:	96 e1       	ldi	r25, 0x16	; 22
    c5ac:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c5b0:	02 e0       	ldi	r16, 0x02	; 2
    c5b2:	28 eb       	ldi	r18, 0xB8	; 184
    c5b4:	3b e0       	ldi	r19, 0x0B	; 11
    c5b6:	40 e0       	ldi	r20, 0x00	; 0
    c5b8:	50 e0       	ldi	r21, 0x00	; 0
    c5ba:	6e e1       	ldi	r22, 0x1E	; 30
    c5bc:	73 e0       	ldi	r23, 0x03	; 3
    c5be:	80 e0       	ldi	r24, 0x00	; 0
    c5c0:	90 e0       	ldi	r25, 0x00	; 0
    c5c2:	8a d5       	rcall	.+2836   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
				//return 0;
			}
		}


		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c5c4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    c5c8:	81 30       	cpi	r24, 0x01	; 1
    c5ca:	09 f0       	breq	.+2      	; 0xc5ce <_Z16Gsm_Gprs_Networkv+0x192>
    c5cc:	49 c0       	rjmp	.+146    	; 0xc660 <_Z16Gsm_Gprs_Networkv+0x224>
		{			
			_kSERAIL_MON_WRITE("Succs Connected to GPRS network");                /* for debugging purpose */
    c5ce:	6c ed       	ldi	r22, 0xDC	; 220
    c5d0:	7f e1       	ldi	r23, 0x1F	; 31
    c5d2:	86 ec       	ldi	r24, 0xC6	; 198
    c5d4:	94 e1       	ldi	r25, 0x14	; 20
    c5d6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c5da:	86 ec       	ldi	r24, 0xC6	; 198
    c5dc:	94 e1       	ldi	r25, 0x14	; 20
    c5de:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    c5e2:	3e c0       	rjmp	.+124    	; 0xc660 <_Z16Gsm_Gprs_Networkv+0x224>
		return 1;
		
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c5e4:	81 30       	cpi	r24, 0x01	; 1
    c5e6:	51 f4       	brne	.+20     	; 0xc5fc <_Z16Gsm_Gprs_Networkv+0x1c0>
		{
			_kSERAIL_MON_WRITE("fail to connect gsm/GPRS network");                /* for debugging purpose */
    c5e8:	6b eb       	ldi	r22, 0xBB	; 187
    c5ea:	7f e1       	ldi	r23, 0x1F	; 31
    c5ec:	86 ec       	ldi	r24, 0xC6	; 198
    c5ee:	94 e1       	ldi	r25, 0x14	; 20
    c5f0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c5f4:	86 ec       	ldi	r24, 0xC6	; 198
    c5f6:	94 e1       	ldi	r25, 0x14	; 20
    c5f8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		Reset_Buffer();
    c5fc:	08 d5       	rcall	.+2576   	; 0xd00e <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c5fe:	6f ea       	ldi	r22, 0xAF	; 175
    c600:	7f e1       	ldi	r23, 0x1F	; 31
    c602:	83 e8       	ldi	r24, 0x83	; 131
    c604:	96 e1       	ldi	r25, 0x16	; 22
    c606:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,10000,1);
    c60a:	01 e0       	ldi	r16, 0x01	; 1
    c60c:	20 e1       	ldi	r18, 0x10	; 16
    c60e:	37 e2       	ldi	r19, 0x27	; 39
    c610:	40 e0       	ldi	r20, 0x00	; 0
    c612:	50 e0       	ldi	r21, 0x00	; 0
    c614:	6e e1       	ldi	r22, 0x1E	; 30
    c616:	73 e0       	ldi	r23, 0x03	; 3
    c618:	80 e0       	ldi	r24, 0x00	; 0
    c61a:	90 e0       	ldi	r25, 0x00	; 0
    c61c:	5d d5       	rcall	.+2746   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
		_kDELAY_MS(10000);
    c61e:	60 e1       	ldi	r22, 0x10	; 16
    c620:	77 e2       	ldi	r23, 0x27	; 39
    c622:	80 e0       	ldi	r24, 0x00	; 0
    c624:	90 e0       	ldi	r25, 0x00	; 0
    c626:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c62a:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
    c62e:	81 30       	cpi	r24, 0x01	; 1
		{
			_kDELAY_MS(120000);
    c630:	31 f0       	breq	.+12     	; 0xc63e <_Z16Gsm_Gprs_Networkv+0x202>
    c632:	60 ec       	ldi	r22, 0xC0	; 192
    c634:	74 ed       	ldi	r23, 0xD4	; 212
    c636:	81 e0       	ldi	r24, 0x01	; 1
    c638:	90 e0       	ldi	r25, 0x00	; 0
    c63a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
		}
		Reset_Buffer();
    c63e:	e7 d4       	rcall	.+2510   	; 0xd00e <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("ATE0"));
    c640:	6a ea       	ldi	r22, 0xAA	; 170
    c642:	7f e1       	ldi	r23, 0x1F	; 31
    c644:	83 e8       	ldi	r24, 0x83	; 131
    c646:	96 e1       	ldi	r25, 0x16	; 22
    c648:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c64c:	02 e0       	ldi	r16, 0x02	; 2
    c64e:	28 eb       	ldi	r18, 0xB8	; 184
    c650:	3b e0       	ldi	r19, 0x0B	; 11
    c652:	40 e0       	ldi	r20, 0x00	; 0
    c654:	50 e0       	ldi	r21, 0x00	; 0
    c656:	6e e1       	ldi	r22, 0x1E	; 30
    c658:	73 e0       	ldi	r23, 0x03	; 3
    c65a:	80 e0       	ldi	r24, 0x00	; 0
    c65c:	90 e0       	ldi	r25, 0x00	; 0
    c65e:	3c d5       	rcall	.+2680   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
		return 0;
	}
	
}
    c660:	8f 2d       	mov	r24, r15
    c662:	cc 59       	subi	r28, 0x9C	; 156
    c664:	df 4f       	sbci	r29, 0xFF	; 255
    c666:	0f b6       	in	r0, 0x3f	; 63
    c668:	f8 94       	cli
    c66a:	de bf       	out	0x3e, r29	; 62
    c66c:	0f be       	out	0x3f, r0	; 63
    c66e:	cd bf       	out	0x3d, r28	; 61
    c670:	df 91       	pop	r29
    c672:	cf 91       	pop	r28
    c674:	1f 91       	pop	r17
    c676:	0f 91       	pop	r16
    c678:	ff 90       	pop	r15
    c67a:	08 95       	ret

0000c67c <__vector_36>:
		Serial.println(response);
		_kSERIAL_MON_CLEAR();
	}
	sprintf((char *)_gRecvd_Data,"%s",(char *)response);
	return answer;
}
    c67c:	1f 92       	push	r1
    c67e:	0f 92       	push	r0
    c680:	0f b6       	in	r0, 0x3f	; 63
    c682:	0f 92       	push	r0
    c684:	11 24       	eor	r1, r1
    c686:	0b b6       	in	r0, 0x3b	; 59
    c688:	0f 92       	push	r0
    c68a:	2f 93       	push	r18
    c68c:	3f 93       	push	r19
    c68e:	8f 93       	push	r24
    c690:	9f 93       	push	r25
    c692:	ef 93       	push	r30
    c694:	ff 93       	push	r31
    c696:	80 91 79 0c 	lds	r24, 0x0C79	; 0x800c79 <int_counter>
    c69a:	90 91 7a 0c 	lds	r25, 0x0C7A	; 0x800c7a <int_counter+0x1>
    c69e:	84 3d       	cpi	r24, 0xD4	; 212
    c6a0:	93 40       	sbci	r25, 0x03	; 3
    c6a2:	a0 f4       	brcc	.+40     	; 0xc6cc <__vector_36+0x50>
    c6a4:	80 91 79 0c 	lds	r24, 0x0C79	; 0x800c79 <int_counter>
    c6a8:	90 91 7a 0c 	lds	r25, 0x0C7A	; 0x800c7a <int_counter+0x1>
    c6ac:	9c 01       	movw	r18, r24
    c6ae:	2f 5f       	subi	r18, 0xFF	; 255
    c6b0:	3f 4f       	sbci	r19, 0xFF	; 255
    c6b2:	30 93 7a 0c 	sts	0x0C7A, r19	; 0x800c7a <int_counter+0x1>
    c6b6:	20 93 79 0c 	sts	0x0C79, r18	; 0x800c79 <int_counter>
    c6ba:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    c6be:	fc 01       	movw	r30, r24
    c6c0:	e0 53       	subi	r30, 0x30	; 48
    c6c2:	f0 4f       	sbci	r31, 0xF0	; 240
    c6c4:	20 83       	st	Z, r18
    c6c6:	81 e0       	ldi	r24, 0x01	; 1
    c6c8:	80 93 77 0c 	sts	0x0C77, r24	; 0x800c77 <rx_flag>
    c6cc:	ff 91       	pop	r31
    c6ce:	ef 91       	pop	r30
    c6d0:	9f 91       	pop	r25
    c6d2:	8f 91       	pop	r24
    c6d4:	3f 91       	pop	r19
    c6d6:	2f 91       	pop	r18
    c6d8:	0f 90       	pop	r0
    c6da:	0b be       	out	0x3b, r0	; 59
    c6dc:	0f 90       	pop	r0
    c6de:	0f be       	out	0x3f, r0	; 63
    c6e0:	0f 90       	pop	r0
    c6e2:	1f 90       	pop	r1
    c6e4:	18 95       	reti

0000c6e6 <__vector_12>:
    c6e6:	1f 92       	push	r1
    c6e8:	0f 92       	push	r0
    c6ea:	0f b6       	in	r0, 0x3f	; 63
    c6ec:	0f 92       	push	r0
    c6ee:	11 24       	eor	r1, r1
    c6f0:	0b b6       	in	r0, 0x3b	; 59
    c6f2:	0f 92       	push	r0
    c6f4:	2f 93       	push	r18
    c6f6:	8f 93       	push	r24
    c6f8:	9f 93       	push	r25
    c6fa:	ef 93       	push	r30
    c6fc:	ff 93       	push	r31
    c6fe:	e7 e0       	ldi	r30, 0x07	; 7
    c700:	f1 e0       	ldi	r31, 0x01	; 1
    c702:	80 81       	ld	r24, Z
    c704:	80 64       	ori	r24, 0x40	; 64
    c706:	80 83       	st	Z, r24
    c708:	e8 e0       	ldi	r30, 0x08	; 8
    c70a:	f1 e0       	ldi	r31, 0x01	; 1
    c70c:	80 81       	ld	r24, Z
    c70e:	8f 7b       	andi	r24, 0xBF	; 191
    c710:	80 83       	st	Z, r24
    c712:	2f ef       	ldi	r18, 0xFF	; 255
    c714:	83 ed       	ldi	r24, 0xD3	; 211
    c716:	90 e3       	ldi	r25, 0x30	; 48
    c718:	21 50       	subi	r18, 0x01	; 1
    c71a:	80 40       	sbci	r24, 0x00	; 0
    c71c:	90 40       	sbci	r25, 0x00	; 0
    c71e:	e1 f7       	brne	.-8      	; 0xc718 <__vector_12+0x32>
    c720:	00 c0       	rjmp	.+0      	; 0xc722 <__vector_12+0x3c>
    c722:	00 00       	nop
    c724:	80 81       	ld	r24, Z
    c726:	80 64       	ori	r24, 0x40	; 64
    c728:	80 83       	st	Z, r24
    c72a:	0f b6       	in	r0, 0x3f	; 63
    c72c:	f8 94       	cli
    c72e:	a8 95       	wdr
    c730:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c734:	88 61       	ori	r24, 0x18	; 24
    c736:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c73a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c73e:	0f be       	out	0x3f, r0	; 63
    c740:	ff 91       	pop	r31
    c742:	ef 91       	pop	r30
    c744:	9f 91       	pop	r25
    c746:	8f 91       	pop	r24
    c748:	2f 91       	pop	r18
    c74a:	0f 90       	pop	r0
    c74c:	0b be       	out	0x3b, r0	; 59
    c74e:	0f 90       	pop	r0
    c750:	0f be       	out	0x3f, r0	; 63
    c752:	0f 90       	pop	r0
    c754:	1f 90       	pop	r1
    c756:	18 95       	reti

0000c758 <_Z20Timer1_Interrupt_Intv>:
    c758:	f8 94       	cli
    c75a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    c75e:	e1 e8       	ldi	r30, 0x81	; 129
    c760:	f0 e0       	ldi	r31, 0x00	; 0
    c762:	10 82       	st	Z, r1
    c764:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    c768:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    c76c:	88 e0       	ldi	r24, 0x08	; 8
    c76e:	9d e3       	ldi	r25, 0x3D	; 61
    c770:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    c774:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    c778:	80 81       	ld	r24, Z
    c77a:	88 60       	ori	r24, 0x08	; 8
    c77c:	80 83       	st	Z, r24
    c77e:	80 81       	ld	r24, Z
    c780:	85 60       	ori	r24, 0x05	; 5
    c782:	80 83       	st	Z, r24
    c784:	ef e6       	ldi	r30, 0x6F	; 111
    c786:	f0 e0       	ldi	r31, 0x00	; 0
    c788:	80 81       	ld	r24, Z
    c78a:	82 60       	ori	r24, 0x02	; 2
    c78c:	80 83       	st	Z, r24
    c78e:	78 94       	sei
    c790:	08 95       	ret

0000c792 <__vector_17>:
    c792:	1f 92       	push	r1
    c794:	0f 92       	push	r0
    c796:	0f b6       	in	r0, 0x3f	; 63
    c798:	0f 92       	push	r0
    c79a:	11 24       	eor	r1, r1
    c79c:	0b b6       	in	r0, 0x3b	; 59
    c79e:	0f 92       	push	r0
    c7a0:	2f 93       	push	r18
    c7a2:	3f 93       	push	r19
    c7a4:	4f 93       	push	r20
    c7a6:	5f 93       	push	r21
    c7a8:	6f 93       	push	r22
    c7aa:	7f 93       	push	r23
    c7ac:	8f 93       	push	r24
    c7ae:	9f 93       	push	r25
    c7b0:	af 93       	push	r26
    c7b2:	bf 93       	push	r27
    c7b4:	ef 93       	push	r30
    c7b6:	ff 93       	push	r31
    c7b8:	80 91 ec 0c 	lds	r24, 0x0CEC	; 0x800cec <_gfault_Occure>
    c7bc:	90 91 ed 0c 	lds	r25, 0x0CED	; 0x800ced <_gfault_Occure+0x1>
    c7c0:	00 97       	sbiw	r24, 0x00	; 0
    c7c2:	29 f0       	breq	.+10     	; 0xc7ce <__vector_17+0x3c>
    c7c4:	01 97       	sbiw	r24, 0x01	; 1
    c7c6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    c7ca:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
    c7ce:	81 e0       	ldi	r24, 0x01	; 1
    c7d0:	90 e0       	ldi	r25, 0x00	; 0
    c7d2:	a0 e0       	ldi	r26, 0x00	; 0
    c7d4:	b0 e0       	ldi	r27, 0x00	; 0
    c7d6:	80 93 cf 0c 	sts	0x0CCF, r24	; 0x800ccf <_g_1Sec_Time>
    c7da:	90 93 d0 0c 	sts	0x0CD0, r25	; 0x800cd0 <_g_1Sec_Time+0x1>
    c7de:	a0 93 d1 0c 	sts	0x0CD1, r26	; 0x800cd1 <_g_1Sec_Time+0x2>
    c7e2:	b0 93 d2 0c 	sts	0x0CD2, r27	; 0x800cd2 <_g_1Sec_Time+0x3>
    c7e6:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c7ea:	8e 33       	cpi	r24, 0x3E	; 62
    c7ec:	28 f4       	brcc	.+10     	; 0xc7f8 <__vector_17+0x66>
    c7ee:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c7f2:	8f 5f       	subi	r24, 0xFF	; 255
    c7f4:	80 93 e4 0c 	sts	0x0CE4, r24	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    c7f8:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c7fc:	8b 34       	cpi	r24, 0x4B	; 75
    c7fe:	28 f4       	brcc	.+10     	; 0xc80a <__vector_17+0x78>
    c800:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c804:	8f 5f       	subi	r24, 0xFF	; 255
    c806:	80 93 e5 0c 	sts	0x0CE5, r24	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    c80a:	80 91 c8 13 	lds	r24, 0x13C8	; 0x8013c8 <_sRuble_Parameters+0x1a>
    c80e:	90 91 c9 13 	lds	r25, 0x13C9	; 0x8013c9 <_sRuble_Parameters+0x1b>
    c812:	01 96       	adiw	r24, 0x01	; 1
    c814:	90 93 c9 13 	sts	0x13C9, r25	; 0x8013c9 <_sRuble_Parameters+0x1b>
    c818:	80 93 c8 13 	sts	0x13C8, r24	; 0x8013c8 <_sRuble_Parameters+0x1a>
    c81c:	80 91 73 0c 	lds	r24, 0x0C73	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c820:	8f 5f       	subi	r24, 0xFF	; 255
    c822:	85 30       	cpi	r24, 0x05	; 5
    c824:	18 f4       	brcc	.+6      	; 0xc82c <__vector_17+0x9a>
    c826:	80 93 73 0c 	sts	0x0C73, r24	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c82a:	05 c0       	rjmp	.+10     	; 0xc836 <__vector_17+0xa4>
    c82c:	10 92 73 0c 	sts	0x0C73, r1	; 0x800c73 <_ZZ11__vector_17E14display_conter>
    c830:	81 e0       	ldi	r24, 0x01	; 1
    c832:	80 93 6d 14 	sts	0x146D, r24	; 0x80146d <_sRuble_Parameters+0xbf>
    c836:	80 91 72 0c 	lds	r24, 0x0C72	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c83a:	8f 5f       	subi	r24, 0xFF	; 255
    c83c:	8a 30       	cpi	r24, 0x0A	; 10
    c83e:	18 f4       	brcc	.+6      	; 0xc846 <__vector_17+0xb4>
    c840:	80 93 72 0c 	sts	0x0C72, r24	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c844:	08 c0       	rjmp	.+16     	; 0xc856 <__vector_17+0xc4>
    c846:	10 92 72 0c 	sts	0x0C72, r1	; 0x800c72 <_ZZ11__vector_17E8ct_timer>
    c84a:	81 e0       	ldi	r24, 0x01	; 1
    c84c:	90 e0       	ldi	r25, 0x00	; 0
    c84e:	90 93 cb 13 	sts	0x13CB, r25	; 0x8013cb <_sRuble_Parameters+0x1d>
    c852:	80 93 ca 13 	sts	0x13CA, r24	; 0x8013ca <_sRuble_Parameters+0x1c>
    c856:	80 91 78 14 	lds	r24, 0x1478	; 0x801478 <_sRuble_Parameters+0xca>
    c85a:	88 23       	and	r24, r24
    c85c:	19 f0       	breq	.+6      	; 0xc864 <__vector_17+0xd2>
    c85e:	81 50       	subi	r24, 0x01	; 1
    c860:	80 93 78 14 	sts	0x1478, r24	; 0x801478 <_sRuble_Parameters+0xca>
    c864:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c868:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c86c:	89 2b       	or	r24, r25
    c86e:	49 f0       	breq	.+18     	; 0xc882 <__vector_17+0xf0>
    c870:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c874:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c878:	01 97       	sbiw	r24, 0x01	; 1
    c87a:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    c87e:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    c882:	80 91 70 0c 	lds	r24, 0x0C70	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c886:	90 91 71 0c 	lds	r25, 0x0C71	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c88a:	01 96       	adiw	r24, 0x01	; 1
    c88c:	8d 32       	cpi	r24, 0x2D	; 45
    c88e:	21 e0       	ldi	r18, 0x01	; 1
    c890:	92 07       	cpc	r25, r18
    c892:	28 f4       	brcc	.+10     	; 0xc89e <__vector_17+0x10c>
    c894:	90 93 71 0c 	sts	0x0C71, r25	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c898:	80 93 70 0c 	sts	0x0C70, r24	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c89c:	0d c0       	rjmp	.+26     	; 0xc8b8 <__vector_17+0x126>
    c89e:	10 92 71 0c 	sts	0x0C71, r1	; 0x800c71 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c8a2:	10 92 70 0c 	sts	0x0C70, r1	; 0x800c70 <_ZZ11__vector_17E22pub_ruble_data_counter>
    c8a6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    c8aa:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    c8ae:	84 60       	ori	r24, 0x04	; 4
    c8b0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    c8b4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    c8b8:	e8 ee       	ldi	r30, 0xE8	; 232
    c8ba:	fd e0       	ldi	r31, 0x0D	; 13
    c8bc:	22 e6       	ldi	r18, 0x62	; 98
    c8be:	3f e0       	ldi	r19, 0x0F	; 15
    c8c0:	83 81       	ldd	r24, Z+3	; 0x03
    c8c2:	94 81       	ldd	r25, Z+4	; 0x04
    c8c4:	00 97       	sbiw	r24, 0x00	; 0
    c8c6:	19 f0       	breq	.+6      	; 0xc8ce <__vector_17+0x13c>
    c8c8:	01 97       	sbiw	r24, 0x01	; 1
    c8ca:	94 83       	std	Z+4, r25	; 0x04
    c8cc:	83 83       	std	Z+3, r24	; 0x03
    c8ce:	7b 96       	adiw	r30, 0x1b	; 27
    c8d0:	2e 17       	cp	r18, r30
    c8d2:	3f 07       	cpc	r19, r31
    c8d4:	a9 f7       	brne	.-22     	; 0xc8c0 <__vector_17+0x12e>
    c8d6:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
    c8da:	81 30       	cpi	r24, 0x01	; 1
    c8dc:	59 f4       	brne	.+22     	; 0xc8f4 <__vector_17+0x162>
    c8de:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    c8e2:	88 23       	and	r24, r24
    c8e4:	09 f4       	brne	.+2      	; 0xc8e8 <__vector_17+0x156>
    c8e6:	75 c0       	rjmp	.+234    	; 0xc9d2 <__vector_17+0x240>
    c8e8:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    c8ec:	81 50       	subi	r24, 0x01	; 1
    c8ee:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
    c8f2:	6f c0       	rjmp	.+222    	; 0xc9d2 <__vector_17+0x240>
    c8f4:	20 91 a1 14 	lds	r18, 0x14A1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    c8f8:	80 91 cc 13 	lds	r24, 0x13CC	; 0x8013cc <_sRuble_Parameters+0x1e>
    c8fc:	90 91 cd 13 	lds	r25, 0x13CD	; 0x8013cd <_sRuble_Parameters+0x1f>
    c900:	22 23       	and	r18, r18
    c902:	e1 f1       	breq	.+120    	; 0xc97c <__vector_17+0x1ea>
    c904:	20 91 97 09 	lds	r18, 0x0997	; 0x800997 <_sSchedules+0x79>
    c908:	21 30       	cpi	r18, 0x01	; 1
    c90a:	79 f4       	brne	.+30     	; 0xc92a <__vector_17+0x198>
    c90c:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    c910:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    c914:	2f 5f       	subi	r18, 0xFF	; 255
    c916:	3f 4f       	sbci	r19, 0xFF	; 255
    c918:	30 93 27 09 	sts	0x0927, r19	; 0x800927 <_sSchedules+0x9>
    c91c:	20 93 26 09 	sts	0x0926, r18	; 0x800926 <_sSchedules+0x8>
    c920:	20 91 d6 0b 	lds	r18, 0x0BD6	; 0x800bd6 <_sSchedules+0x2b8>
    c924:	2f 5f       	subi	r18, 0xFF	; 255
    c926:	20 93 d6 0b 	sts	0x0BD6, r18	; 0x800bd6 <_sSchedules+0x2b8>
    c92a:	20 91 a5 14 	lds	r18, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    c92e:	30 91 a6 14 	lds	r19, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    c932:	23 2b       	or	r18, r19
    c934:	a1 f4       	brne	.+40     	; 0xc95e <__vector_17+0x1cc>
    c936:	40 91 9b 14 	lds	r20, 0x149B	; 0x80149b <_sRuble_Parameters+0xed>
    c93a:	50 91 9c 14 	lds	r21, 0x149C	; 0x80149c <_sRuble_Parameters+0xee>
    c93e:	60 91 9d 14 	lds	r22, 0x149D	; 0x80149d <_sRuble_Parameters+0xef>
    c942:	70 91 9e 14 	lds	r23, 0x149E	; 0x80149e <_sRuble_Parameters+0xf0>
    c946:	4f 5f       	subi	r20, 0xFF	; 255
    c948:	5f 4f       	sbci	r21, 0xFF	; 255
    c94a:	6f 4f       	sbci	r22, 0xFF	; 255
    c94c:	7f 4f       	sbci	r23, 0xFF	; 255
    c94e:	40 93 9b 14 	sts	0x149B, r20	; 0x80149b <_sRuble_Parameters+0xed>
    c952:	50 93 9c 14 	sts	0x149C, r21	; 0x80149c <_sRuble_Parameters+0xee>
    c956:	60 93 9d 14 	sts	0x149D, r22	; 0x80149d <_sRuble_Parameters+0xef>
    c95a:	70 93 9e 14 	sts	0x149E, r23	; 0x80149e <_sRuble_Parameters+0xf0>
    c95e:	00 97       	sbiw	r24, 0x00	; 0
    c960:	79 f4       	brne	.+30     	; 0xc980 <__vector_17+0x1ee>
    c962:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
    c966:	30 91 c5 13 	lds	r19, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
    c96a:	21 15       	cp	r18, r1
    c96c:	31 05       	cpc	r19, r1
    c96e:	69 f0       	breq	.+26     	; 0xc98a <__vector_17+0x1f8>
    c970:	21 50       	subi	r18, 0x01	; 1
    c972:	31 09       	sbc	r19, r1
    c974:	30 93 c5 13 	sts	0x13C5, r19	; 0x8013c5 <_sRuble_Parameters+0x17>
    c978:	20 93 c4 13 	sts	0x13C4, r18	; 0x8013c4 <_sRuble_Parameters+0x16>
    c97c:	00 97       	sbiw	r24, 0x00	; 0
    c97e:	29 f0       	breq	.+10     	; 0xc98a <__vector_17+0x1f8>
    c980:	01 97       	sbiw	r24, 0x01	; 1
    c982:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
    c986:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
    c98a:	80 e0       	ldi	r24, 0x00	; 0
    c98c:	90 e0       	ldi	r25, 0x00	; 0
    c98e:	9c 01       	movw	r18, r24
    c990:	22 5e       	subi	r18, 0xE2	; 226
    c992:	36 4f       	sbci	r19, 0xF6	; 246
    c994:	f9 01       	movw	r30, r18
    c996:	ed 5a       	subi	r30, 0xAD	; 173
    c998:	fd 4f       	sbci	r31, 0xFD	; 253
    c99a:	40 81       	ld	r20, Z
    c99c:	44 23       	and	r20, r20
    c99e:	19 f0       	breq	.+6      	; 0xc9a6 <__vector_17+0x214>
    c9a0:	40 81       	ld	r20, Z
    c9a2:	41 50       	subi	r20, 0x01	; 1
    c9a4:	40 83       	st	Z, r20
    c9a6:	f9 01       	movw	r30, r18
    c9a8:	e0 5a       	subi	r30, 0xA0	; 160
    c9aa:	fd 4f       	sbci	r31, 0xFD	; 253
    c9ac:	20 81       	ld	r18, Z
    c9ae:	21 30       	cpi	r18, 0x01	; 1
    c9b0:	59 f4       	brne	.+22     	; 0xc9c8 <__vector_17+0x236>
    c9b2:	fc 01       	movw	r30, r24
    c9b4:	ee 0f       	add	r30, r30
    c9b6:	ff 1f       	adc	r31, r31
    c9b8:	ee 57       	subi	r30, 0x7E	; 126
    c9ba:	f4 4f       	sbci	r31, 0xF4	; 244
    c9bc:	20 81       	ld	r18, Z
    c9be:	31 81       	ldd	r19, Z+1	; 0x01
    c9c0:	2f 5f       	subi	r18, 0xFF	; 255
    c9c2:	3f 4f       	sbci	r19, 0xFF	; 255
    c9c4:	31 83       	std	Z+1, r19	; 0x01
    c9c6:	20 83       	st	Z, r18
    c9c8:	01 96       	adiw	r24, 0x01	; 1
    c9ca:	83 30       	cpi	r24, 0x03	; 3
    c9cc:	91 05       	cpc	r25, r1
    c9ce:	f9 f6       	brne	.-66     	; 0xc98e <__vector_17+0x1fc>
    c9d0:	86 cf       	rjmp	.-244    	; 0xc8de <__vector_17+0x14c>
    c9d2:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    c9d6:	88 23       	and	r24, r24
    c9d8:	29 f0       	breq	.+10     	; 0xc9e4 <__vector_17+0x252>
    c9da:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    c9de:	81 50       	subi	r24, 0x01	; 1
    c9e0:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
    c9e4:	80 91 a5 14 	lds	r24, 0x14A5	; 0x8014a5 <_sRuble_Parameters+0xf7>
    c9e8:	90 91 a6 14 	lds	r25, 0x14A6	; 0x8014a6 <_sRuble_Parameters+0xf8>
    c9ec:	00 97       	sbiw	r24, 0x00	; 0
    c9ee:	61 f4       	brne	.+24     	; 0xca08 <__vector_17+0x276>
    c9f0:	80 91 9f 14 	lds	r24, 0x149F	; 0x80149f <_sRuble_Parameters+0xf1>
    c9f4:	90 91 a0 14 	lds	r25, 0x14A0	; 0x8014a0 <_sRuble_Parameters+0xf2>
    c9f8:	00 97       	sbiw	r24, 0x00	; 0
    c9fa:	59 f0       	breq	.+22     	; 0xca12 <__vector_17+0x280>
    c9fc:	01 97       	sbiw	r24, 0x01	; 1
    c9fe:	90 93 a0 14 	sts	0x14A0, r25	; 0x8014a0 <_sRuble_Parameters+0xf2>
    ca02:	80 93 9f 14 	sts	0x149F, r24	; 0x80149f <_sRuble_Parameters+0xf1>
    ca06:	05 c0       	rjmp	.+10     	; 0xca12 <__vector_17+0x280>
    ca08:	01 97       	sbiw	r24, 0x01	; 1
    ca0a:	90 93 a6 14 	sts	0x14A6, r25	; 0x8014a6 <_sRuble_Parameters+0xf8>
    ca0e:	80 93 a5 14 	sts	0x14A5, r24	; 0x8014a5 <_sRuble_Parameters+0xf7>
    ca12:	80 91 7d 14 	lds	r24, 0x147D	; 0x80147d <_sRuble_Parameters+0xcf>
    ca16:	90 91 7e 14 	lds	r25, 0x147E	; 0x80147e <_sRuble_Parameters+0xd0>
    ca1a:	00 97       	sbiw	r24, 0x00	; 0
    ca1c:	29 f0       	breq	.+10     	; 0xca28 <__vector_17+0x296>
    ca1e:	01 97       	sbiw	r24, 0x01	; 1
    ca20:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
    ca24:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
    ca28:	80 91 f0 0c 	lds	r24, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
    ca2c:	90 91 f1 0c 	lds	r25, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
    ca30:	01 96       	adiw	r24, 0x01	; 1
    ca32:	90 93 f1 0c 	sts	0x0CF1, r25	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
    ca36:	80 93 f0 0c 	sts	0x0CF0, r24	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
    ca3a:	80 91 ee 0c 	lds	r24, 0x0CEE	; 0x800cee <_gWait_Blower_Time>
    ca3e:	90 91 ef 0c 	lds	r25, 0x0CEF	; 0x800cef <_gWait_Blower_Time+0x1>
    ca42:	00 97       	sbiw	r24, 0x00	; 0
    ca44:	29 f0       	breq	.+10     	; 0xca50 <__vector_17+0x2be>
    ca46:	01 97       	sbiw	r24, 0x01	; 1
    ca48:	90 93 ef 0c 	sts	0x0CEF, r25	; 0x800cef <_gWait_Blower_Time+0x1>
    ca4c:	80 93 ee 0c 	sts	0x0CEE, r24	; 0x800cee <_gWait_Blower_Time>
    ca50:	80 91 e9 0c 	lds	r24, 0x0CE9	; 0x800ce9 <_gWdt_Counter>
    ca54:	90 91 ea 0c 	lds	r25, 0x0CEA	; 0x800cea <_gWdt_Counter+0x1>
    ca58:	01 96       	adiw	r24, 0x01	; 1
    ca5a:	90 93 ea 0c 	sts	0x0CEA, r25	; 0x800cea <_gWdt_Counter+0x1>
    ca5e:	80 93 e9 0c 	sts	0x0CE9, r24	; 0x800ce9 <_gWdt_Counter>
    ca62:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
    ca66:	8c 33       	cpi	r24, 0x3C	; 60
    ca68:	28 f4       	brcc	.+10     	; 0xca74 <__vector_17+0x2e2>
    ca6a:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
    ca6e:	8f 5f       	subi	r24, 0xFF	; 255
    ca70:	80 93 e7 0c 	sts	0x0CE7, r24	; 0x800ce7 <_gTank_Topic_check>
    ca74:	80 91 e8 0c 	lds	r24, 0x0CE8	; 0x800ce8 <_gStart_Wdt>
    ca78:	81 30       	cpi	r24, 0x01	; 1
    ca7a:	39 f4       	brne	.+14     	; 0xca8a <__vector_17+0x2f8>
    ca7c:	80 91 e9 0c 	lds	r24, 0x0CE9	; 0x800ce9 <_gWdt_Counter>
    ca80:	90 91 ea 0c 	lds	r25, 0x0CEA	; 0x800cea <_gWdt_Counter+0x1>
    ca84:	80 3f       	cpi	r24, 0xF0	; 240
    ca86:	91 05       	cpc	r25, r1
    ca88:	08 f4       	brcc	.+2      	; 0xca8c <__vector_17+0x2fa>
    ca8a:	a8 95       	wdr
    ca8c:	0e 94 41 87 	call	0x10e82	; 0x10e82 <_Z18Read_Switch_Statusv>
    ca90:	80 91 78 0c 	lds	r24, 0x0C78	; 0x800c78 <rx_complete>
    ca94:	88 23       	and	r24, r24
    ca96:	29 f0       	breq	.+10     	; 0xcaa2 <__vector_17+0x310>
    ca98:	80 91 74 0c 	lds	r24, 0x0C74	; 0x800c74 <monitor_serial_start>
    ca9c:	8f 5f       	subi	r24, 0xFF	; 255
    ca9e:	80 93 74 0c 	sts	0x0C74, r24	; 0x800c74 <monitor_serial_start>
    caa2:	ff 91       	pop	r31
    caa4:	ef 91       	pop	r30
    caa6:	bf 91       	pop	r27
    caa8:	af 91       	pop	r26
    caaa:	9f 91       	pop	r25
    caac:	8f 91       	pop	r24
    caae:	7f 91       	pop	r23
    cab0:	6f 91       	pop	r22
    cab2:	5f 91       	pop	r21
    cab4:	4f 91       	pop	r20
    cab6:	3f 91       	pop	r19
    cab8:	2f 91       	pop	r18
    caba:	0f 90       	pop	r0
    cabc:	0b be       	out	0x3b, r0	; 59
    cabe:	0f 90       	pop	r0
    cac0:	0f be       	out	0x3f, r0	; 63
    cac2:	0f 90       	pop	r0
    cac4:	1f 90       	pop	r1
    cac6:	18 95       	reti

0000cac8 <_Z20Timer0_Interrupt_Intv>:
    cac8:	f8 94       	cli
    caca:	a0 eb       	ldi	r26, 0xB0	; 176
    cacc:	b0 e0       	ldi	r27, 0x00	; 0
    cace:	1c 92       	st	X, r1
    cad0:	e1 eb       	ldi	r30, 0xB1	; 177
    cad2:	f0 e0       	ldi	r31, 0x00	; 0
    cad4:	10 82       	st	Z, r1
    cad6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    cada:	8c e7       	ldi	r24, 0x7C	; 124
    cadc:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
    cae0:	8c 91       	ld	r24, X
    cae2:	82 60       	ori	r24, 0x02	; 2
    cae4:	8c 93       	st	X, r24
    cae6:	80 81       	ld	r24, Z
    cae8:	85 60       	ori	r24, 0x05	; 5
    caea:	80 83       	st	Z, r24
    caec:	e0 e7       	ldi	r30, 0x70	; 112
    caee:	f0 e0       	ldi	r31, 0x00	; 0
    caf0:	80 81       	ld	r24, Z
    caf2:	82 60       	ori	r24, 0x02	; 2
    caf4:	80 83       	st	Z, r24
    caf6:	78 94       	sei
    caf8:	08 95       	ret

0000cafa <__vector_13>:
    cafa:	1f 92       	push	r1
    cafc:	0f 92       	push	r0
    cafe:	0f b6       	in	r0, 0x3f	; 63
    cb00:	0f 92       	push	r0
    cb02:	11 24       	eor	r1, r1
    cb04:	2f 93       	push	r18
    cb06:	3f 93       	push	r19
    cb08:	8f 93       	push	r24
    cb0a:	9f 93       	push	r25
    cb0c:	80 91 77 0c 	lds	r24, 0x0C77	; 0x800c77 <rx_flag>
    cb10:	88 23       	and	r24, r24
    cb12:	49 f0       	breq	.+18     	; 0xcb26 <__vector_13+0x2c>
    cb14:	80 91 75 0c 	lds	r24, 0x0C75	; 0x800c75 <my_timer>
    cb18:	90 91 76 0c 	lds	r25, 0x0C76	; 0x800c76 <my_timer+0x1>
    cb1c:	01 96       	adiw	r24, 0x01	; 1
    cb1e:	90 93 76 0c 	sts	0x0C76, r25	; 0x800c76 <my_timer+0x1>
    cb22:	80 93 75 0c 	sts	0x0C75, r24	; 0x800c75 <my_timer>
    cb26:	20 91 75 0c 	lds	r18, 0x0C75	; 0x800c75 <my_timer>
    cb2a:	30 91 76 0c 	lds	r19, 0x0C76	; 0x800c76 <my_timer+0x1>
    cb2e:	80 91 e2 0c 	lds	r24, 0x0CE2	; 0x800ce2 <Interrupt_Time_Out>
    cb32:	90 91 e3 0c 	lds	r25, 0x0CE3	; 0x800ce3 <Interrupt_Time_Out+0x1>
    cb36:	82 17       	cp	r24, r18
    cb38:	93 07       	cpc	r25, r19
    cb3a:	20 f4       	brcc	.+8      	; 0xcb44 <__vector_13+0x4a>
    cb3c:	80 91 77 0c 	lds	r24, 0x0C77	; 0x800c77 <rx_flag>
    cb40:	81 30       	cpi	r24, 0x01	; 1
    cb42:	c1 f0       	breq	.+48     	; 0xcb74 <__vector_13+0x7a>
    cb44:	90 91 77 0c 	lds	r25, 0x0C77	; 0x800c77 <rx_flag>
    cb48:	80 91 6f 0c 	lds	r24, 0x0C6F	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cb4c:	91 30       	cpi	r25, 0x01	; 1
    cb4e:	41 f4       	brne	.+16     	; 0xcb60 <__vector_13+0x66>
    cb50:	81 11       	cpse	r24, r1
    cb52:	1f c0       	rjmp	.+62     	; 0xcb92 <__vector_13+0x98>
    cb54:	90 93 6f 0c 	sts	0x0C6F, r25	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cb58:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb5c:	8d 7f       	andi	r24, 0xFD	; 253
    cb5e:	07 c0       	rjmp	.+14     	; 0xcb6e <__vector_13+0x74>
    cb60:	81 30       	cpi	r24, 0x01	; 1
    cb62:	b9 f4       	brne	.+46     	; 0xcb92 <__vector_13+0x98>
    cb64:	10 92 6f 0c 	sts	0x0C6F, r1	; 0x800c6f <_ZZ11__vector_13E9timer_int>
    cb68:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb6c:	82 60       	ori	r24, 0x02	; 2
    cb6e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    cb72:	0f c0       	rjmp	.+30     	; 0xcb92 <__vector_13+0x98>
    cb74:	80 93 78 0c 	sts	0x0C78, r24	; 0x800c78 <rx_complete>
    cb78:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    cb7c:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    cb80:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    cb84:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    cb88:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    cb8c:	10 92 74 0c 	sts	0x0C74, r1	; 0x800c74 <monitor_serial_start>
    cb90:	d9 cf       	rjmp	.-78     	; 0xcb44 <__vector_13+0x4a>
    cb92:	9f 91       	pop	r25
    cb94:	8f 91       	pop	r24
    cb96:	3f 91       	pop	r19
    cb98:	2f 91       	pop	r18
    cb9a:	0f 90       	pop	r0
    cb9c:	0f be       	out	0x3f, r0	; 63
    cb9e:	0f 90       	pop	r0
    cba0:	1f 90       	pop	r1
    cba2:	18 95       	reti

0000cba4 <_Z8Lcd_Initv>:
    cba4:	83 ec       	ldi	r24, 0xC3	; 195
    cba6:	9c e0       	ldi	r25, 0x0C	; 12
    cba8:	0c 94 62 db 	jmp	0x1b6c4	; 0x1b6c4 <_ZN17LiquidCrystal_I2C4initEv>
    cbac:	08 95       	ret

0000cbae <_Z14Lcd_Print_BuffPchhh>:
    cbae:	cf 92       	push	r12
    cbb0:	df 92       	push	r13
    cbb2:	ef 92       	push	r14
    cbb4:	ff 92       	push	r15
    cbb6:	0f 93       	push	r16
    cbb8:	1f 93       	push	r17
    cbba:	cf 93       	push	r28
    cbbc:	df 93       	push	r29
    cbbe:	7c 01       	movw	r14, r24
    cbc0:	c4 2e       	mov	r12, r20
    cbc2:	ec 01       	movw	r28, r24
    cbc4:	06 2f       	mov	r16, r22
    cbc6:	10 e0       	ldi	r17, 0x00	; 0
    cbc8:	ce 01       	movw	r24, r28
    cbca:	8e 19       	sub	r24, r14
    cbcc:	9f 09       	sbc	r25, r15
    cbce:	80 17       	cp	r24, r16
    cbd0:	91 07       	cpc	r25, r17
    cbd2:	84 f4       	brge	.+32     	; 0xcbf4 <_Z14Lcd_Print_BuffPchhh+0x46>
    cbd4:	dd 24       	eor	r13, r13
    cbd6:	d3 94       	inc	r13
    cbd8:	d2 0e       	add	r13, r18
    cbda:	4c 2d       	mov	r20, r12
    cbdc:	62 2f       	mov	r22, r18
    cbde:	83 ec       	ldi	r24, 0xC3	; 195
    cbe0:	9c e0       	ldi	r25, 0x0C	; 12
    cbe2:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cbe6:	69 91       	ld	r22, Y+
    cbe8:	83 ec       	ldi	r24, 0xC3	; 195
    cbea:	9c e0       	ldi	r25, 0x0C	; 12
    cbec:	0e 94 41 d5 	call	0x1aa82	; 0x1aa82 <_ZN5Print5printEc>
    cbf0:	2d 2d       	mov	r18, r13
    cbf2:	ea cf       	rjmp	.-44     	; 0xcbc8 <_Z14Lcd_Print_BuffPchhh+0x1a>
    cbf4:	df 91       	pop	r29
    cbf6:	cf 91       	pop	r28
    cbf8:	1f 91       	pop	r17
    cbfa:	0f 91       	pop	r16
    cbfc:	ff 90       	pop	r15
    cbfe:	ef 90       	pop	r14
    cc00:	df 90       	pop	r13
    cc02:	cf 90       	pop	r12
    cc04:	08 95       	ret

0000cc06 <_Z9Lcd_Clearv>:
    cc06:	83 ec       	ldi	r24, 0xC3	; 195
    cc08:	9c e0       	ldi	r25, 0x0C	; 12
    cc0a:	0c 94 a3 da 	jmp	0x1b546	; 0x1b546 <_ZN17LiquidCrystal_I2C5clearEv>

0000cc0e <_Z9Lora_Initv>:
    cc0e:	8b e7       	ldi	r24, 0x7B	; 123
    cc10:	9c e0       	ldi	r25, 0x0C	; 12
    cc12:	0c 94 36 e0 	jmp	0x1c06c	; 0x1c06c <_ZN7RH_RF954initEv>

0000cc16 <_Z14Lora_Availablev>:
    cc16:	8b e7       	ldi	r24, 0x7B	; 123
    cc18:	9c e0       	ldi	r25, 0x0C	; 12
    cc1a:	0c 94 56 df 	jmp	0x1beac	; 0x1beac <_ZN7RH_RF959availableEv>

0000cc1e <_Z17Lora_Data_Receivev>:
    cc1e:	cf 93       	push	r28
    cc20:	df 93       	push	r29
    cc22:	1f 92       	push	r1
    cc24:	cd b7       	in	r28, 0x3d	; 61
    cc26:	de b7       	in	r29, 0x3e	; 62
    cc28:	84 e1       	ldi	r24, 0x14	; 20
    cc2a:	e9 e0       	ldi	r30, 0x09	; 9
    cc2c:	f4 e1       	ldi	r31, 0x14	; 20
    cc2e:	df 01       	movw	r26, r30
    cc30:	98 2f       	mov	r25, r24
    cc32:	1d 92       	st	X+, r1
    cc34:	9a 95       	dec	r25
    cc36:	e9 f7       	brne	.-6      	; 0xcc32 <_Z17Lora_Data_Receivev+0x14>
    cc38:	89 83       	std	Y+1, r24	; 0x01
    cc3a:	ae 01       	movw	r20, r28
    cc3c:	4f 5f       	subi	r20, 0xFF	; 255
    cc3e:	5f 4f       	sbci	r21, 0xFF	; 255
    cc40:	bf 01       	movw	r22, r30
    cc42:	8b e7       	ldi	r24, 0x7B	; 123
    cc44:	9c e0       	ldi	r25, 0x0C	; 12
    cc46:	0e 94 d7 dd 	call	0x1bbae	; 0x1bbae <_ZN7RH_RF954recvEPhS0_>
    cc4a:	0f 90       	pop	r0
    cc4c:	df 91       	pop	r29
    cc4e:	cf 91       	pop	r28
    cc50:	08 95       	ret

0000cc52 <_Z13Lora_Set_Freqv>:
    cc52:	4a e5       	ldi	r20, 0x5A	; 90
    cc54:	54 e4       	ldi	r21, 0x44	; 68
    cc56:	68 e5       	ldi	r22, 0x58	; 88
    cc58:	74 e4       	ldi	r23, 0x44	; 68
    cc5a:	8b e7       	ldi	r24, 0x7B	; 123
    cc5c:	9c e0       	ldi	r25, 0x0C	; 12
    cc5e:	0c 94 15 de 	jmp	0x1bc2a	; 0x1bc2a <_ZN7RH_RF9512setFrequencyEf>

0000cc62 <_Z14Lora_Set_Powerv>:
    cc62:	40 e0       	ldi	r20, 0x00	; 0
    cc64:	64 e1       	ldi	r22, 0x14	; 20
    cc66:	8b e7       	ldi	r24, 0x7B	; 123
    cc68:	9c e0       	ldi	r25, 0x0C	; 12
    cc6a:	0c 94 cb df 	jmp	0x1bf96	; 0x1bf96 <_ZN7RH_RF9510setTxPowerEab>

0000cc6e <_Z15Lora_Set_Configv>:
    cc6e:	60 e0       	ldi	r22, 0x00	; 0
    cc70:	8b e7       	ldi	r24, 0x7B	; 123
    cc72:	9c e0       	ldi	r25, 0x0C	; 12
    cc74:	0e 94 fe df 	call	0x1bffc	; 0x1bffc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
    cc78:	6b e0       	ldi	r22, 0x0B	; 11
    cc7a:	8b e7       	ldi	r24, 0x7B	; 123
    cc7c:	9c e0       	ldi	r25, 0x0C	; 12
    cc7e:	0c 94 39 e1 	jmp	0x1c272	; 0x1c272 <_ZN7RH_RF9518setSpreadingFactorEh>

0000cc82 <_Z20Check_Data_Availablej>:
    cc82:	bc 01       	movw	r22, r24
    cc84:	8b e7       	ldi	r24, 0x7B	; 123
    cc86:	9c e0       	ldi	r25, 0x0C	; 12
    cc88:	0c 94 bc db 	jmp	0x1b778	; 0x1b778 <_ZN15RHGenericDriver20waitAvailableTimeoutEj>

0000cc8c <_Z21Seperate_Out_Sub_Datav>:
    cc8c:	8f 92       	push	r8
    cc8e:	9f 92       	push	r9
    cc90:	af 92       	push	r10
    cc92:	bf 92       	push	r11
    cc94:	cf 92       	push	r12
    cc96:	df 92       	push	r13
    cc98:	ef 92       	push	r14
    cc9a:	ff 92       	push	r15
    cc9c:	0f 93       	push	r16
    cc9e:	1f 93       	push	r17
    cca0:	cf 93       	push	r28
    cca2:	df 93       	push	r29
    cca4:	cd b7       	in	r28, 0x3d	; 61
    cca6:	de b7       	in	r29, 0x3e	; 62
    cca8:	c0 53       	subi	r28, 0x30	; 48
    ccaa:	d4 40       	sbci	r29, 0x04	; 4
    ccac:	0f b6       	in	r0, 0x3f	; 63
    ccae:	f8 94       	cli
    ccb0:	de bf       	out	0x3e, r29	; 62
    ccb2:	0f be       	out	0x3f, r0	; 63
    ccb4:	cd bf       	out	0x3d, r28	; 61
    ccb6:	22 e1       	ldi	r18, 0x12	; 18
    ccb8:	e3 e7       	ldi	r30, 0x73	; 115
    ccba:	f3 e0       	ldi	r31, 0x03	; 3
    ccbc:	de 01       	movw	r26, r28
    ccbe:	a5 5e       	subi	r26, 0xE5	; 229
    ccc0:	bb 4f       	sbci	r27, 0xFB	; 251
    ccc2:	01 90       	ld	r0, Z+
    ccc4:	0d 92       	st	X+, r0
    ccc6:	2a 95       	dec	r18
    ccc8:	e1 f7       	brne	.-8      	; 0xccc2 <_Z21Seperate_Out_Sub_Datav+0x36>
    ccca:	24 e1       	ldi	r18, 0x14	; 20
    cccc:	e5 e8       	ldi	r30, 0x85	; 133
    ccce:	f3 e0       	ldi	r31, 0x03	; 3
    ccd0:	de 01       	movw	r26, r28
    ccd2:	a9 5f       	subi	r26, 0xF9	; 249
    ccd4:	bb 4f       	sbci	r27, 0xFB	; 251
    ccd6:	01 90       	ld	r0, Z+
    ccd8:	0d 92       	st	X+, r0
    ccda:	2a 95       	dec	r18
    ccdc:	e1 f7       	brne	.-8      	; 0xccd6 <_Z21Seperate_Out_Sub_Datav+0x4a>
    ccde:	8e 01       	movw	r16, r28
    cce0:	0f 5f       	subi	r16, 0xFF	; 255
    cce2:	1f 4f       	sbci	r17, 0xFF	; 255
    cce4:	24 ed       	ldi	r18, 0xD4	; 212
    cce6:	33 e0       	ldi	r19, 0x03	; 3
    cce8:	d8 01       	movw	r26, r16
    ccea:	f9 01       	movw	r30, r18
    ccec:	1d 92       	st	X+, r1
    ccee:	31 97       	sbiw	r30, 0x01	; 1
    ccf0:	e9 f7       	brne	.-6      	; 0xccec <_Z21Seperate_Out_Sub_Datav+0x60>
    ccf2:	be 01       	movw	r22, r28
    ccf4:	6b 52       	subi	r22, 0x2B	; 43
    ccf6:	7c 4f       	sbci	r23, 0xFC	; 252
    ccf8:	22 e3       	ldi	r18, 0x32	; 50
    ccfa:	db 01       	movw	r26, r22
    ccfc:	1d 92       	st	X+, r1
    ccfe:	2a 95       	dec	r18
    cd00:	e9 f7       	brne	.-6      	; 0xccfc <_Z21Seperate_Out_Sub_Datav+0x70>
    cd02:	88 24       	eor	r8, r8
    cd04:	83 94       	inc	r8
    cd06:	91 2c       	mov	r9, r1
    cd08:	40 e0       	ldi	r20, 0x00	; 0
    cd0a:	50 e0       	ldi	r21, 0x00	; 0
    cd0c:	20 e0       	ldi	r18, 0x00	; 0
    cd0e:	30 e0       	ldi	r19, 0x00	; 0
    cd10:	fe 01       	movw	r30, r28
    cd12:	e3 5d       	subi	r30, 0xD3	; 211
    cd14:	fb 4f       	sbci	r31, 0xFB	; 251
    cd16:	aa e0       	ldi	r26, 0x0A	; 10
    cd18:	fa 2e       	mov	r15, r26
    cd1a:	b4 e6       	ldi	r27, 0x64	; 100
    cd1c:	eb 2e       	mov	r14, r27
    cd1e:	d9 01       	movw	r26, r18
    cd20:	a0 53       	subi	r26, 0x30	; 48
    cd22:	b0 4f       	sbci	r27, 0xF0	; 240
    cd24:	dc 90       	ld	r13, X
    cd26:	dd 20       	and	r13, r13
    cd28:	09 f4       	brne	.+2      	; 0xcd2c <_Z21Seperate_Out_Sub_Datav+0xa0>
    cd2a:	40 c1       	rjmp	.+640    	; 0xcfac <_Z21Seperate_Out_Sub_Datav+0x320>
    cd2c:	2f 5f       	subi	r18, 0xFF	; 255
    cd2e:	3f 4f       	sbci	r19, 0xFF	; 255
    cd30:	24 3d       	cpi	r18, 0xD4	; 212
    cd32:	b3 e0       	ldi	r27, 0x03	; 3
    cd34:	3b 07       	cpc	r19, r27
    cd36:	08 f0       	brcs	.+2      	; 0xcd3a <_Z21Seperate_Out_Sub_Datav+0xae>
    cd38:	55 c1       	rjmp	.+682    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cd3a:	d9 01       	movw	r26, r18
    cd3c:	a0 53       	subi	r26, 0x30	; 48
    cd3e:	b0 4f       	sbci	r27, 0xF0	; 240
    cd40:	6d 01       	movw	r12, r26
    cd42:	b1 e0       	ldi	r27, 0x01	; 1
    cd44:	8b 16       	cp	r8, r27
    cd46:	91 04       	cpc	r9, r1
    cd48:	31 f0       	breq	.+12     	; 0xcd56 <_Z21Seperate_Out_Sub_Datav+0xca>
    cd4a:	a2 e0       	ldi	r26, 0x02	; 2
    cd4c:	8a 16       	cp	r8, r26
    cd4e:	91 04       	cpc	r9, r1
    cd50:	09 f4       	brne	.+2      	; 0xcd54 <_Z21Seperate_Out_Sub_Datav+0xc8>
    cd52:	8f c0       	rjmp	.+286    	; 0xce72 <_Z21Seperate_Out_Sub_Datav+0x1e6>
    cd54:	e4 cf       	rjmp	.-56     	; 0xcd1e <_Z21Seperate_Out_Sub_Datav+0x92>
    cd56:	d6 01       	movw	r26, r12
    cd58:	bc 90       	ld	r11, X
    cd5a:	bb e1       	ldi	r27, 0x1B	; 27
    cd5c:	cb 2e       	mov	r12, r27
    cd5e:	b4 e0       	ldi	r27, 0x04	; 4
    cd60:	db 2e       	mov	r13, r27
    cd62:	cc 0e       	add	r12, r28
    cd64:	dd 1e       	adc	r13, r29
    cd66:	c4 0e       	add	r12, r20
    cd68:	d5 1e       	adc	r13, r21
    cd6a:	d6 01       	movw	r26, r12
    cd6c:	dc 90       	ld	r13, X
    cd6e:	bd 14       	cp	r11, r13
    cd70:	19 f0       	breq	.+6      	; 0xcd78 <_Z21Seperate_Out_Sub_Datav+0xec>
    cd72:	40 e0       	ldi	r20, 0x00	; 0
    cd74:	50 e0       	ldi	r21, 0x00	; 0
    cd76:	d3 cf       	rjmp	.-90     	; 0xcd1e <_Z21Seperate_Out_Sub_Datav+0x92>
    cd78:	4f 5f       	subi	r20, 0xFF	; 255
    cd7a:	5f 4f       	sbci	r21, 0xFF	; 255
    cd7c:	ab e1       	ldi	r26, 0x1B	; 27
    cd7e:	ca 2e       	mov	r12, r26
    cd80:	a4 e0       	ldi	r26, 0x04	; 4
    cd82:	da 2e       	mov	r13, r26
    cd84:	cc 0e       	add	r12, r28
    cd86:	dd 1e       	adc	r13, r29
    cd88:	c4 0e       	add	r12, r20
    cd8a:	d5 1e       	adc	r13, r21
    cd8c:	d6 01       	movw	r26, r12
    cd8e:	dc 90       	ld	r13, X
    cd90:	d1 10       	cpse	r13, r1
    cd92:	c5 cf       	rjmp	.-118    	; 0xcd1e <_Z21Seperate_Out_Sub_Datav+0x92>
    cd94:	af 01       	movw	r20, r30
    cd96:	5a 01       	movw	r10, r20
    cd98:	ae 1a       	sub	r10, r30
    cd9a:	bf 0a       	sbc	r11, r31
    cd9c:	d9 01       	movw	r26, r18
    cd9e:	a0 53       	subi	r26, 0x30	; 48
    cda0:	b0 4f       	sbci	r27, 0xF0	; 240
    cda2:	dc 90       	ld	r13, X
    cda4:	bd e0       	ldi	r27, 0x0D	; 13
    cda6:	db 16       	cp	r13, r27
    cda8:	79 f0       	breq	.+30     	; 0xcdc8 <_Z21Seperate_Out_Sub_Datav+0x13c>
    cdaa:	2f 5f       	subi	r18, 0xFF	; 255
    cdac:	3f 4f       	sbci	r19, 0xFF	; 255
    cdae:	24 3d       	cpi	r18, 0xD4	; 212
    cdb0:	a3 e0       	ldi	r26, 0x03	; 3
    cdb2:	3a 07       	cpc	r19, r26
    cdb4:	09 f4       	brne	.+2      	; 0xcdb8 <_Z21Seperate_Out_Sub_Datav+0x12c>
    cdb6:	16 c1       	rjmp	.+556    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cdb8:	d9 01       	movw	r26, r18
    cdba:	a0 53       	subi	r26, 0x30	; 48
    cdbc:	b0 4f       	sbci	r27, 0xF0	; 240
    cdbe:	dc 90       	ld	r13, X
    cdc0:	da 01       	movw	r26, r20
    cdc2:	dd 92       	st	X+, r13
    cdc4:	ad 01       	movw	r20, r26
    cdc6:	e7 cf       	rjmp	.-50     	; 0xcd96 <_Z21Seperate_Out_Sub_Datav+0x10a>
    cdc8:	d5 01       	movw	r26, r10
    cdca:	ae 0f       	add	r26, r30
    cdcc:	bf 1f       	adc	r27, r31
    cdce:	1c 92       	st	X, r1
    cdd0:	df 01       	movw	r26, r30
    cdd2:	0d 90       	ld	r0, X+
    cdd4:	00 20       	and	r0, r0
    cdd6:	e9 f7       	brne	.-6      	; 0xcdd2 <_Z21Seperate_Out_Sub_Datav+0x146>
    cdd8:	11 97       	sbiw	r26, 0x01	; 1
    cdda:	ad 01       	movw	r20, r26
    cddc:	4e 1b       	sub	r20, r30
    cdde:	5f 0b       	sbc	r21, r31
    cde0:	42 30       	cpi	r20, 0x02	; 2
    cde2:	51 05       	cpc	r21, r1
    cde4:	49 f0       	breq	.+18     	; 0xcdf8 <_Z21Seperate_Out_Sub_Datav+0x16c>
    cde6:	08 f4       	brcc	.+2      	; 0xcdea <_Z21Seperate_Out_Sub_Datav+0x15e>
    cde8:	fd c0       	rjmp	.+506    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cdea:	43 30       	cpi	r20, 0x03	; 3
    cdec:	51 05       	cpc	r21, r1
    cdee:	49 f0       	breq	.+18     	; 0xce02 <_Z21Seperate_Out_Sub_Datav+0x176>
    cdf0:	44 30       	cpi	r20, 0x04	; 4
    cdf2:	51 05       	cpc	r21, r1
    cdf4:	d9 f4       	brne	.+54     	; 0xce2c <_Z21Seperate_Out_Sub_Datav+0x1a0>
    cdf6:	f6 c0       	rjmp	.+492    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cdf8:	80 81       	ld	r24, Z
    cdfa:	90 e0       	ldi	r25, 0x00	; 0
    cdfc:	c0 97       	sbiw	r24, 0x30	; 48
    cdfe:	b1 f4       	brne	.+44     	; 0xce2c <_Z21Seperate_Out_Sub_Datav+0x1a0>
    ce00:	f1 c0       	rjmp	.+482    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    ce02:	80 81       	ld	r24, Z
    ce04:	90 e0       	ldi	r25, 0x00	; 0
    ce06:	c0 97       	sbiw	r24, 0x30	; 48
    ce08:	f8 9e       	mul	r15, r24
    ce0a:	a0 01       	movw	r20, r0
    ce0c:	f9 9e       	mul	r15, r25
    ce0e:	50 0d       	add	r21, r0
    ce10:	11 24       	eor	r1, r1
    ce12:	91 81       	ldd	r25, Z+1	; 0x01
    ce14:	89 2f       	mov	r24, r25
    ce16:	90 e0       	ldi	r25, 0x00	; 0
    ce18:	c0 97       	sbiw	r24, 0x30	; 48
    ce1a:	84 0f       	add	r24, r20
    ce1c:	95 1f       	adc	r25, r21
    ce1e:	ac 01       	movw	r20, r24
    ce20:	41 50       	subi	r20, 0x01	; 1
    ce22:	51 09       	sbc	r21, r1
    ce24:	42 33       	cpi	r20, 0x32	; 50
    ce26:	51 05       	cpc	r21, r1
    ce28:	08 f0       	brcs	.+2      	; 0xce2c <_Z21Seperate_Out_Sub_Datav+0x1a0>
    ce2a:	dc c0       	rjmp	.+440    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    ce2c:	2e 5f       	subi	r18, 0xFE	; 254
    ce2e:	3f 4f       	sbci	r19, 0xFF	; 255
    ce30:	24 3d       	cpi	r18, 0xD4	; 212
    ce32:	b3 e0       	ldi	r27, 0x03	; 3
    ce34:	3b 07       	cpc	r19, r27
    ce36:	08 f0       	brcs	.+2      	; 0xce3a <_Z21Seperate_Out_Sub_Datav+0x1ae>
    ce38:	d5 c0       	rjmp	.+426    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    ce3a:	6b 01       	movw	r12, r22
    ce3c:	a6 01       	movw	r20, r12
    ce3e:	46 1b       	sub	r20, r22
    ce40:	57 0b       	sbc	r21, r23
    ce42:	48 17       	cp	r20, r24
    ce44:	59 07       	cpc	r21, r25
    ce46:	20 f0       	brcs	.+8      	; 0xce50 <_Z21Seperate_Out_Sub_Datav+0x1c4>
    ce48:	42 e0       	ldi	r20, 0x02	; 2
    ce4a:	84 2e       	mov	r8, r20
    ce4c:	91 2c       	mov	r9, r1
    ce4e:	91 cf       	rjmp	.-222    	; 0xcd72 <_Z21Seperate_Out_Sub_Datav+0xe6>
    ce50:	a9 01       	movw	r20, r18
    ce52:	4f 5f       	subi	r20, 0xFF	; 255
    ce54:	5f 4f       	sbci	r21, 0xFF	; 255
    ce56:	20 53       	subi	r18, 0x30	; 48
    ce58:	30 4f       	sbci	r19, 0xF0	; 240
    ce5a:	d9 01       	movw	r26, r18
    ce5c:	2c 91       	ld	r18, X
    ce5e:	d6 01       	movw	r26, r12
    ce60:	2d 93       	st	X+, r18
    ce62:	6d 01       	movw	r12, r26
    ce64:	44 3d       	cpi	r20, 0xD4	; 212
    ce66:	b3 e0       	ldi	r27, 0x03	; 3
    ce68:	5b 07       	cpc	r21, r27
    ce6a:	09 f4       	brne	.+2      	; 0xce6e <_Z21Seperate_Out_Sub_Datav+0x1e2>
    ce6c:	bb c0       	rjmp	.+374    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    ce6e:	9a 01       	movw	r18, r20
    ce70:	e5 cf       	rjmp	.-54     	; 0xce3c <_Z21Seperate_Out_Sub_Datav+0x1b0>
    ce72:	d6 01       	movw	r26, r12
    ce74:	bc 90       	ld	r11, X
    ce76:	b7 e0       	ldi	r27, 0x07	; 7
    ce78:	cb 2e       	mov	r12, r27
    ce7a:	b4 e0       	ldi	r27, 0x04	; 4
    ce7c:	db 2e       	mov	r13, r27
    ce7e:	cc 0e       	add	r12, r28
    ce80:	dd 1e       	adc	r13, r29
    ce82:	c4 0e       	add	r12, r20
    ce84:	d5 1e       	adc	r13, r21
    ce86:	d6 01       	movw	r26, r12
    ce88:	dc 90       	ld	r13, X
    ce8a:	bd 10       	cpse	r11, r13
    ce8c:	72 cf       	rjmp	.-284    	; 0xcd72 <_Z21Seperate_Out_Sub_Datav+0xe6>
    ce8e:	4f 5f       	subi	r20, 0xFF	; 255
    ce90:	5f 4f       	sbci	r21, 0xFF	; 255
    ce92:	a7 e0       	ldi	r26, 0x07	; 7
    ce94:	ca 2e       	mov	r12, r26
    ce96:	a4 e0       	ldi	r26, 0x04	; 4
    ce98:	da 2e       	mov	r13, r26
    ce9a:	cc 0e       	add	r12, r28
    ce9c:	dd 1e       	adc	r13, r29
    ce9e:	c4 0e       	add	r12, r20
    cea0:	d5 1e       	adc	r13, r21
    cea2:	d6 01       	movw	r26, r12
    cea4:	dc 90       	ld	r13, X
    cea6:	d1 10       	cpse	r13, r1
    cea8:	3a cf       	rjmp	.-396    	; 0xcd1e <_Z21Seperate_Out_Sub_Datav+0x92>
    ceaa:	6f 01       	movw	r12, r30
    ceac:	46 01       	movw	r8, r12
    ceae:	8e 1a       	sub	r8, r30
    ceb0:	9f 0a       	sbc	r9, r31
    ceb2:	d9 01       	movw	r26, r18
    ceb4:	a0 53       	subi	r26, 0x30	; 48
    ceb6:	b0 4f       	sbci	r27, 0xF0	; 240
    ceb8:	bc 90       	ld	r11, X
    ceba:	bd e0       	ldi	r27, 0x0D	; 13
    cebc:	bb 16       	cp	r11, r27
    cebe:	79 f0       	breq	.+30     	; 0xcede <_Z21Seperate_Out_Sub_Datav+0x252>
    cec0:	2f 5f       	subi	r18, 0xFF	; 255
    cec2:	3f 4f       	sbci	r19, 0xFF	; 255
    cec4:	24 3d       	cpi	r18, 0xD4	; 212
    cec6:	a3 e0       	ldi	r26, 0x03	; 3
    cec8:	3a 07       	cpc	r19, r26
    ceca:	09 f4       	brne	.+2      	; 0xcece <_Z21Seperate_Out_Sub_Datav+0x242>
    cecc:	8b c0       	rjmp	.+278    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cece:	d9 01       	movw	r26, r18
    ced0:	a0 53       	subi	r26, 0x30	; 48
    ced2:	b0 4f       	sbci	r27, 0xF0	; 240
    ced4:	bc 90       	ld	r11, X
    ced6:	d6 01       	movw	r26, r12
    ced8:	bd 92       	st	X+, r11
    ceda:	6d 01       	movw	r12, r26
    cedc:	e7 cf       	rjmp	.-50     	; 0xceac <_Z21Seperate_Out_Sub_Datav+0x220>
    cede:	d4 01       	movw	r26, r8
    cee0:	ae 0f       	add	r26, r30
    cee2:	bf 1f       	adc	r27, r31
    cee4:	1c 92       	st	X, r1
    cee6:	df 01       	movw	r26, r30
    cee8:	0d 90       	ld	r0, X+
    ceea:	00 20       	and	r0, r0
    ceec:	e9 f7       	brne	.-6      	; 0xcee8 <_Z21Seperate_Out_Sub_Datav+0x25c>
    ceee:	11 97       	sbiw	r26, 0x01	; 1
    cef0:	ae 1b       	sub	r26, r30
    cef2:	bf 0b       	sbc	r27, r31
    cef4:	a2 30       	cpi	r26, 0x02	; 2
    cef6:	b1 05       	cpc	r27, r1
    cef8:	41 f0       	breq	.+16     	; 0xcf0a <_Z21Seperate_Out_Sub_Datav+0x27e>
    cefa:	08 f4       	brcc	.+2      	; 0xcefe <_Z21Seperate_Out_Sub_Datav+0x272>
    cefc:	73 c0       	rjmp	.+230    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cefe:	a3 30       	cpi	r26, 0x03	; 3
    cf00:	b1 05       	cpc	r27, r1
    cf02:	39 f0       	breq	.+14     	; 0xcf12 <_Z21Seperate_Out_Sub_Datav+0x286>
    cf04:	14 97       	sbiw	r26, 0x04	; 4
    cf06:	a9 f0       	breq	.+42     	; 0xcf32 <_Z21Seperate_Out_Sub_Datav+0x2a6>
    cf08:	2f c0       	rjmp	.+94     	; 0xcf68 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cf0a:	80 81       	ld	r24, Z
    cf0c:	90 e0       	ldi	r25, 0x00	; 0
    cf0e:	c0 97       	sbiw	r24, 0x30	; 48
    cf10:	0d c0       	rjmp	.+26     	; 0xcf2c <_Z21Seperate_Out_Sub_Datav+0x2a0>
    cf12:	80 81       	ld	r24, Z
    cf14:	90 e0       	ldi	r25, 0x00	; 0
    cf16:	c0 97       	sbiw	r24, 0x30	; 48
    cf18:	f8 9e       	mul	r15, r24
    cf1a:	d0 01       	movw	r26, r0
    cf1c:	f9 9e       	mul	r15, r25
    cf1e:	b0 0d       	add	r27, r0
    cf20:	11 24       	eor	r1, r1
    cf22:	81 81       	ldd	r24, Z+1	; 0x01
    cf24:	90 e0       	ldi	r25, 0x00	; 0
    cf26:	c0 97       	sbiw	r24, 0x30	; 48
    cf28:	8a 0f       	add	r24, r26
    cf2a:	9b 1f       	adc	r25, r27
    cf2c:	00 97       	sbiw	r24, 0x00	; 0
    cf2e:	e1 f4       	brne	.+56     	; 0xcf68 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cf30:	59 c0       	rjmp	.+178    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cf32:	a0 81       	ld	r26, Z
    cf34:	b0 e0       	ldi	r27, 0x00	; 0
    cf36:	d0 97       	sbiw	r26, 0x30	; 48
    cf38:	ea 9e       	mul	r14, r26
    cf3a:	c0 01       	movw	r24, r0
    cf3c:	eb 9e       	mul	r14, r27
    cf3e:	90 0d       	add	r25, r0
    cf40:	11 24       	eor	r1, r1
    cf42:	a1 81       	ldd	r26, Z+1	; 0x01
    cf44:	b0 e0       	ldi	r27, 0x00	; 0
    cf46:	d0 97       	sbiw	r26, 0x30	; 48
    cf48:	fa 9e       	mul	r15, r26
    cf4a:	60 01       	movw	r12, r0
    cf4c:	fb 9e       	mul	r15, r27
    cf4e:	d0 0c       	add	r13, r0
    cf50:	11 24       	eor	r1, r1
    cf52:	8c 0d       	add	r24, r12
    cf54:	9d 1d       	adc	r25, r13
    cf56:	a2 81       	ldd	r26, Z+2	; 0x02
    cf58:	b0 e0       	ldi	r27, 0x00	; 0
    cf5a:	d0 97       	sbiw	r26, 0x30	; 48
    cf5c:	8a 0f       	add	r24, r26
    cf5e:	9b 1f       	adc	r25, r27
    cf60:	85 3d       	cpi	r24, 0xD5	; 213
    cf62:	b3 e0       	ldi	r27, 0x03	; 3
    cf64:	9b 07       	cpc	r25, r27
    cf66:	f0 f5       	brcc	.+124    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cf68:	2e 5f       	subi	r18, 0xFE	; 254
    cf6a:	3f 4f       	sbci	r19, 0xFF	; 255
    cf6c:	24 3d       	cpi	r18, 0xD4	; 212
    cf6e:	a3 e0       	ldi	r26, 0x03	; 3
    cf70:	3a 07       	cpc	r19, r26
    cf72:	c0 f5       	brcc	.+112    	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cf74:	58 01       	movw	r10, r16
    cf76:	65 01       	movw	r12, r10
    cf78:	c0 1a       	sub	r12, r16
    cf7a:	d1 0a       	sbc	r13, r17
    cf7c:	c8 16       	cp	r12, r24
    cf7e:	d9 06       	cpc	r13, r25
    cf80:	18 f0       	brcs	.+6      	; 0xcf88 <_Z21Seperate_Out_Sub_Datav+0x2fc>
    cf82:	81 2c       	mov	r8, r1
    cf84:	91 2c       	mov	r9, r1
    cf86:	cb ce       	rjmp	.-618    	; 0xcd1e <_Z21Seperate_Out_Sub_Datav+0x92>
    cf88:	69 01       	movw	r12, r18
    cf8a:	bf ef       	ldi	r27, 0xFF	; 255
    cf8c:	cb 1a       	sub	r12, r27
    cf8e:	db 0a       	sbc	r13, r27
    cf90:	20 53       	subi	r18, 0x30	; 48
    cf92:	30 4f       	sbci	r19, 0xF0	; 240
    cf94:	d9 01       	movw	r26, r18
    cf96:	2c 91       	ld	r18, X
    cf98:	d5 01       	movw	r26, r10
    cf9a:	2d 93       	st	X+, r18
    cf9c:	5d 01       	movw	r10, r26
    cf9e:	b4 ed       	ldi	r27, 0xD4	; 212
    cfa0:	cb 16       	cp	r12, r27
    cfa2:	b3 e0       	ldi	r27, 0x03	; 3
    cfa4:	db 06       	cpc	r13, r27
    cfa6:	f1 f0       	breq	.+60     	; 0xcfe4 <_Z21Seperate_Out_Sub_Datav+0x358>
    cfa8:	96 01       	movw	r18, r12
    cfaa:	e5 cf       	rjmp	.-54     	; 0xcf76 <_Z21Seperate_Out_Sub_Datav+0x2ea>
    cfac:	8e e6       	ldi	r24, 0x6E	; 110
    cfae:	e2 e6       	ldi	r30, 0x62	; 98
    cfb0:	ff e0       	ldi	r31, 0x0F	; 15
    cfb2:	df 01       	movw	r26, r30
    cfb4:	1d 92       	st	X+, r1
    cfb6:	8a 95       	dec	r24
    cfb8:	e9 f7       	brne	.-6      	; 0xcfb4 <_Z21Seperate_Out_Sub_Datav+0x328>
    cfba:	84 ed       	ldi	r24, 0xD4	; 212
    cfbc:	93 e0       	ldi	r25, 0x03	; 3
    cfbe:	e0 ed       	ldi	r30, 0xD0	; 208
    cfc0:	ff e0       	ldi	r31, 0x0F	; 15
    cfc2:	df 01       	movw	r26, r30
    cfc4:	9c 01       	movw	r18, r24
    cfc6:	1d 92       	st	X+, r1
    cfc8:	21 50       	subi	r18, 0x01	; 1
    cfca:	30 40       	sbci	r19, 0x00	; 0
    cfcc:	e1 f7       	brne	.-8      	; 0xcfc6 <_Z21Seperate_Out_Sub_Datav+0x33a>
    cfce:	82 e6       	ldi	r24, 0x62	; 98
    cfd0:	9f e0       	ldi	r25, 0x0F	; 15
    cfd2:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
    cfd6:	b8 01       	movw	r22, r16
    cfd8:	80 ed       	ldi	r24, 0xD0	; 208
    cfda:	9f e0       	ldi	r25, 0x0F	; 15
    cfdc:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
    cfe0:	81 e0       	ldi	r24, 0x01	; 1
    cfe2:	01 c0       	rjmp	.+2      	; 0xcfe6 <_Z21Seperate_Out_Sub_Datav+0x35a>
    cfe4:	80 e0       	ldi	r24, 0x00	; 0
    cfe6:	c0 5d       	subi	r28, 0xD0	; 208
    cfe8:	db 4f       	sbci	r29, 0xFB	; 251
    cfea:	0f b6       	in	r0, 0x3f	; 63
    cfec:	f8 94       	cli
    cfee:	de bf       	out	0x3e, r29	; 62
    cff0:	0f be       	out	0x3f, r0	; 63
    cff2:	cd bf       	out	0x3d, r28	; 61
    cff4:	df 91       	pop	r29
    cff6:	cf 91       	pop	r28
    cff8:	1f 91       	pop	r17
    cffa:	0f 91       	pop	r16
    cffc:	ff 90       	pop	r15
    cffe:	ef 90       	pop	r14
    d000:	df 90       	pop	r13
    d002:	cf 90       	pop	r12
    d004:	bf 90       	pop	r11
    d006:	af 90       	pop	r10
    d008:	9f 90       	pop	r9
    d00a:	8f 90       	pop	r8
    d00c:	08 95       	ret

0000d00e <_Z12Reset_Bufferv>:
    d00e:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
    d012:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    d016:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    d01a:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    d01e:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    d022:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    d026:	84 ed       	ldi	r24, 0xD4	; 212
    d028:	93 e0       	ldi	r25, 0x03	; 3
    d02a:	e0 ed       	ldi	r30, 0xD0	; 208
    d02c:	ff e0       	ldi	r31, 0x0F	; 15
    d02e:	df 01       	movw	r26, r30
    d030:	9c 01       	movw	r18, r24
    d032:	1d 92       	st	X+, r1
    d034:	21 50       	subi	r18, 0x01	; 1
    d036:	30 40       	sbci	r19, 0x00	; 0
    d038:	e1 f7       	brne	.-8      	; 0xd032 <_Z12Reset_Bufferv+0x24>
    d03a:	08 95       	ret

0000d03c <_GLOBAL__sub_I_g_uTick>:
    d03c:	24 e0       	ldi	r18, 0x04	; 4
    d03e:	44 e1       	ldi	r20, 0x14	; 20
    d040:	67 e2       	ldi	r22, 0x27	; 39
    d042:	83 ec       	ldi	r24, 0xC3	; 195
    d044:	9c e0       	ldi	r25, 0x0C	; 12
    d046:	0e 94 49 da 	call	0x1b492	; 0x1b492 <_ZN17LiquidCrystal_I2CC1Ehhh>
    d04a:	29 e4       	ldi	r18, 0x49	; 73
    d04c:	38 e1       	ldi	r19, 0x18	; 24
    d04e:	42 e0       	ldi	r20, 0x02	; 2
    d050:	65 e3       	ldi	r22, 0x35	; 53
    d052:	8b e7       	ldi	r24, 0x7B	; 123
    d054:	9c e0       	ldi	r25, 0x0C	; 12
    d056:	0c 94 91 dd 	jmp	0x1bb22	; 0x1bb22 <_ZN7RH_RF95C1EhhR12RHGenericSPI>

0000d05a <_Z14Lora_Data_Sendh>:
    d05a:	cf 93       	push	r28
    d05c:	c8 2f       	mov	r28, r24
    d05e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d062:	81 30       	cpi	r24, 0x01	; 1
    d064:	89 f4       	brne	.+34     	; 0xd088 <_Z14Lora_Data_Sendh+0x2e>
    d066:	69 e6       	ldi	r22, 0x69	; 105
    d068:	74 e2       	ldi	r23, 0x24	; 36
    d06a:	86 ec       	ldi	r24, 0xC6	; 198
    d06c:	94 e1       	ldi	r25, 0x14	; 20
    d06e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d072:	4a e0       	ldi	r20, 0x0A	; 10
    d074:	50 e0       	ldi	r21, 0x00	; 0
    d076:	6c 2f       	mov	r22, r28
    d078:	86 ec       	ldi	r24, 0xC6	; 198
    d07a:	94 e1       	ldi	r25, 0x14	; 20
    d07c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
    d080:	86 ec       	ldi	r24, 0xC6	; 198
    d082:	94 e1       	ldi	r25, 0x14	; 20
    d084:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    d088:	4c 2f       	mov	r20, r28
    d08a:	65 ef       	ldi	r22, 0xF5	; 245
    d08c:	73 e1       	ldi	r23, 0x13	; 19
    d08e:	8b e7       	ldi	r24, 0x7B	; 123
    d090:	9c e0       	ldi	r25, 0x0C	; 12
    d092:	0e 94 84 df 	call	0x1bf08	; 0x1bf08 <_ZN7RH_RF954sendEPKhh>
    d096:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d09a:	81 30       	cpi	r24, 0x01	; 1
    d09c:	51 f4       	brne	.+20     	; 0xd0b2 <_Z14Lora_Data_Sendh+0x58>
    d09e:	6c e5       	ldi	r22, 0x5C	; 92
    d0a0:	74 e2       	ldi	r23, 0x24	; 36
    d0a2:	86 ec       	ldi	r24, 0xC6	; 198
    d0a4:	94 e1       	ldi	r25, 0x14	; 20
    d0a6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d0aa:	86 ec       	ldi	r24, 0xC6	; 198
    d0ac:	94 e1       	ldi	r25, 0x14	; 20
    d0ae:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    d0b2:	64 ef       	ldi	r22, 0xF4	; 244
    d0b4:	71 e0       	ldi	r23, 0x01	; 1
    d0b6:	8b e7       	ldi	r24, 0x7B	; 123
    d0b8:	9c e0       	ldi	r25, 0x0C	; 12
    d0ba:	0e 94 f0 db 	call	0x1b7e0	; 0x1b7e0 <_ZN15RHGenericDriver14waitPacketSentEj>
    d0be:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d0c2:	81 30       	cpi	r24, 0x01	; 1
    d0c4:	39 f4       	brne	.+14     	; 0xd0d4 <_Z14Lora_Data_Sendh+0x7a>
    d0c6:	62 e5       	ldi	r22, 0x52	; 82
    d0c8:	74 e2       	ldi	r23, 0x24	; 36
    d0ca:	86 ec       	ldi	r24, 0xC6	; 198
    d0cc:	94 e1       	ldi	r25, 0x14	; 20
    d0ce:	cf 91       	pop	r28
    d0d0:	0c 94 4c d5 	jmp	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d0d4:	cf 91       	pop	r28
    d0d6:	08 95       	ret

0000d0d8 <_Z15Send_AT_CommandPcS_S_jh>:
    d0d8:	4f 92       	push	r4
    d0da:	5f 92       	push	r5
    d0dc:	6f 92       	push	r6
    d0de:	7f 92       	push	r7
    d0e0:	8f 92       	push	r8
    d0e2:	9f 92       	push	r9
    d0e4:	af 92       	push	r10
    d0e6:	bf 92       	push	r11
    d0e8:	cf 92       	push	r12
    d0ea:	df 92       	push	r13
    d0ec:	ef 92       	push	r14
    d0ee:	ff 92       	push	r15
    d0f0:	0f 93       	push	r16
    d0f2:	1f 93       	push	r17
    d0f4:	cf 93       	push	r28
    d0f6:	df 93       	push	r29
    d0f8:	1f 92       	push	r1
    d0fa:	1f 92       	push	r1
    d0fc:	cd b7       	in	r28, 0x3d	; 61
    d0fe:	de b7       	in	r29, 0x3e	; 62
    d100:	5c 01       	movw	r10, r24
    d102:	7b 01       	movw	r14, r22
    d104:	6a 01       	movw	r12, r20
    d106:	89 01       	movw	r16, r18
    d108:	89 2b       	or	r24, r25
    d10a:	31 f0       	breq	.+12     	; 0xd118 <_Z15Send_AT_CommandPcS_S_jh+0x40>
    d10c:	64 e6       	ldi	r22, 0x64	; 100
    d10e:	70 e0       	ldi	r23, 0x00	; 0
    d110:	80 e0       	ldi	r24, 0x00	; 0
    d112:	90 e0       	ldi	r25, 0x00	; 0
    d114:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    d118:	10 93 e3 0c 	sts	0x0CE3, r17	; 0x800ce3 <Interrupt_Time_Out+0x1>
    d11c:	00 93 e2 0c 	sts	0x0CE2, r16	; 0x800ce2 <Interrupt_Time_Out>
    d120:	a1 14       	cp	r10, r1
    d122:	b1 04       	cpc	r11, r1
    d124:	31 f0       	breq	.+12     	; 0xd132 <_Z15Send_AT_CommandPcS_S_jh+0x5a>
    d126:	73 df       	rcall	.-282    	; 0xd00e <_Z12Reset_Bufferv>
    d128:	b5 01       	movw	r22, r10
    d12a:	83 e8       	ldi	r24, 0x83	; 131
    d12c:	96 e1       	ldi	r25, 0x16	; 22
    d12e:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
    d132:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    d136:	4b 01       	movw	r8, r22
    d138:	5c 01       	movw	r10, r24
    d13a:	28 01       	movw	r4, r16
    d13c:	61 2c       	mov	r6, r1
    d13e:	71 2c       	mov	r7, r1
    d140:	b7 01       	movw	r22, r14
    d142:	80 ed       	ldi	r24, 0xD0	; 208
    d144:	9f e0       	ldi	r25, 0x0F	; 15
    d146:	c1 14       	cp	r12, r1
    d148:	d1 04       	cpc	r13, r1
    d14a:	39 f0       	breq	.+14     	; 0xd15a <_Z15Send_AT_CommandPcS_S_jh+0x82>
    d14c:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    d150:	89 2b       	or	r24, r25
    d152:	b9 f4       	brne	.+46     	; 0xd182 <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    d154:	b6 01       	movw	r22, r12
    d156:	80 ed       	ldi	r24, 0xD0	; 208
    d158:	9f e0       	ldi	r25, 0x0F	; 15
    d15a:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    d15e:	89 2b       	or	r24, r25
    d160:	81 f4       	brne	.+32     	; 0xd182 <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    d162:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    d166:	dc 01       	movw	r26, r24
    d168:	cb 01       	movw	r24, r22
    d16a:	88 19       	sub	r24, r8
    d16c:	99 09       	sbc	r25, r9
    d16e:	aa 09       	sbc	r26, r10
    d170:	bb 09       	sbc	r27, r11
    d172:	84 15       	cp	r24, r4
    d174:	95 05       	cpc	r25, r5
    d176:	a6 05       	cpc	r26, r6
    d178:	b7 05       	cpc	r27, r7
    d17a:	10 f3       	brcs	.-60     	; 0xd140 <_Z15Send_AT_CommandPcS_S_jh+0x68>
    d17c:	00 e0       	ldi	r16, 0x00	; 0
    d17e:	10 e0       	ldi	r17, 0x00	; 0
    d180:	02 c0       	rjmp	.+4      	; 0xd186 <_Z15Send_AT_CommandPcS_S_jh+0xae>
    d182:	01 e0       	ldi	r16, 0x01	; 1
    d184:	10 e0       	ldi	r17, 0x00	; 0
    d186:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
    d18a:	10 92 77 0c 	sts	0x0C77, r1	; 0x800c77 <rx_flag>
    d18e:	10 92 7a 0c 	sts	0x0C7A, r1	; 0x800c7a <int_counter+0x1>
    d192:	10 92 79 0c 	sts	0x0C79, r1	; 0x800c79 <int_counter>
    d196:	10 92 76 0c 	sts	0x0C76, r1	; 0x800c76 <my_timer+0x1>
    d19a:	10 92 75 0c 	sts	0x0C75, r1	; 0x800c75 <my_timer>
    d19e:	84 e1       	ldi	r24, 0x14	; 20
    d1a0:	95 e0       	ldi	r25, 0x05	; 5
    d1a2:	90 93 e3 0c 	sts	0x0CE3, r25	; 0x800ce3 <Interrupt_Time_Out+0x1>
    d1a6:	80 93 e2 0c 	sts	0x0CE2, r24	; 0x800ce2 <Interrupt_Time_Out>
    d1aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d1ae:	81 30       	cpi	r24, 0x01	; 1
    d1b0:	51 f4       	brne	.+20     	; 0xd1c6 <_Z15Send_AT_CommandPcS_S_jh+0xee>
    d1b2:	60 ed       	ldi	r22, 0xD0	; 208
    d1b4:	7f e0       	ldi	r23, 0x0F	; 15
    d1b6:	86 ec       	ldi	r24, 0xC6	; 198
    d1b8:	94 e1       	ldi	r25, 0x14	; 20
    d1ba:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
    d1be:	86 ec       	ldi	r24, 0xC6	; 198
    d1c0:	94 e1       	ldi	r25, 0x14	; 20
    d1c2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    d1c6:	64 e6       	ldi	r22, 0x64	; 100
    d1c8:	70 e0       	ldi	r23, 0x00	; 0
    d1ca:	80 e0       	ldi	r24, 0x00	; 0
    d1cc:	90 e0       	ldi	r25, 0x00	; 0
    d1ce:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    d1d2:	80 91 e1 0c 	lds	r24, 0x0CE1	; 0x800ce1 <Reading_Time>
    d1d6:	81 11       	cpse	r24, r1
    d1d8:	0a c0       	rjmp	.+20     	; 0xd1ee <_Z15Send_AT_CommandPcS_S_jh+0x116>
    d1da:	84 ed       	ldi	r24, 0xD4	; 212
    d1dc:	93 e0       	ldi	r25, 0x03	; 3
    d1de:	e0 ed       	ldi	r30, 0xD0	; 208
    d1e0:	ff e0       	ldi	r31, 0x0F	; 15
    d1e2:	df 01       	movw	r26, r30
    d1e4:	9c 01       	movw	r18, r24
    d1e6:	1d 92       	st	X+, r1
    d1e8:	21 50       	subi	r18, 0x01	; 1
    d1ea:	30 40       	sbci	r19, 0x00	; 0
    d1ec:	e1 f7       	brne	.-8      	; 0xd1e6 <_Z15Send_AT_CommandPcS_S_jh+0x10e>
    d1ee:	0e 94 6c 7f 	call	0xfed8	; 0xfed8 <_Z17Clear_Serial_Datav>
    d1f2:	01 15       	cp	r16, r1
    d1f4:	11 05       	cpc	r17, r1
    d1f6:	89 f4       	brne	.+34     	; 0xd21a <_Z15Send_AT_CommandPcS_S_jh+0x142>
    d1f8:	1a 82       	std	Y+2, r1	; 0x02
    d1fa:	19 82       	std	Y+1, r1	; 0x01
    d1fc:	69 e9       	ldi	r22, 0x99	; 153
    d1fe:	73 e0       	ldi	r23, 0x03	; 3
    d200:	86 ec       	ldi	r24, 0xC6	; 198
    d202:	94 e1       	ldi	r25, 0x14	; 20
    d204:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
    d208:	8a e1       	ldi	r24, 0x1A	; 26
    d20a:	89 83       	std	Y+1, r24	; 0x01
    d20c:	be 01       	movw	r22, r28
    d20e:	6f 5f       	subi	r22, 0xFF	; 255
    d210:	7f 4f       	sbci	r23, 0xFF	; 255
    d212:	83 e8       	ldi	r24, 0x83	; 131
    d214:	96 e1       	ldi	r25, 0x16	; 22
    d216:	0e 94 3f d5 	call	0x1aa7e	; 0x1aa7e <_ZN5Print5printEPKc>
    d21a:	80 2f       	mov	r24, r16
    d21c:	0f 90       	pop	r0
    d21e:	0f 90       	pop	r0
    d220:	df 91       	pop	r29
    d222:	cf 91       	pop	r28
    d224:	1f 91       	pop	r17
    d226:	0f 91       	pop	r16
    d228:	ff 90       	pop	r15
    d22a:	ef 90       	pop	r14
    d22c:	df 90       	pop	r13
    d22e:	cf 90       	pop	r12
    d230:	bf 90       	pop	r11
    d232:	af 90       	pop	r10
    d234:	9f 90       	pop	r9
    d236:	8f 90       	pop	r8
    d238:	7f 90       	pop	r7
    d23a:	6f 90       	pop	r6
    d23c:	5f 90       	pop	r5
    d23e:	4f 90       	pop	r4
    d240:	08 95       	ret

0000d242 <_Z8Gsm_Initv>:
    d242:	0f 93       	push	r16
    d244:	e4 de       	rcall	.-568    	; 0xd00e <_Z12Reset_Bufferv>
    d246:	69 e3       	ldi	r22, 0x39	; 57
    d248:	74 e2       	ldi	r23, 0x24	; 36
    d24a:	83 e8       	ldi	r24, 0x83	; 131
    d24c:	96 e1       	ldi	r25, 0x16	; 22
    d24e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d252:	02 e0       	ldi	r16, 0x02	; 2
    d254:	28 ee       	ldi	r18, 0xE8	; 232
    d256:	33 e0       	ldi	r19, 0x03	; 3
    d258:	40 e0       	ldi	r20, 0x00	; 0
    d25a:	50 e0       	ldi	r21, 0x00	; 0
    d25c:	6e e1       	ldi	r22, 0x1E	; 30
    d25e:	73 e0       	ldi	r23, 0x03	; 3
    d260:	80 e0       	ldi	r24, 0x00	; 0
    d262:	90 e0       	ldi	r25, 0x00	; 0
    d264:	39 df       	rcall	.-398    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d266:	88 23       	and	r24, r24
    d268:	01 f1       	breq	.+64     	; 0xd2aa <_Z8Gsm_Initv+0x68>
    d26a:	d1 de       	rcall	.-606    	; 0xd00e <_Z12Reset_Bufferv>
    d26c:	6b e2       	ldi	r22, 0x2B	; 43
    d26e:	74 e2       	ldi	r23, 0x24	; 36
    d270:	83 e8       	ldi	r24, 0x83	; 131
    d272:	96 e1       	ldi	r25, 0x16	; 22
    d274:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d278:	68 ee       	ldi	r22, 0xE8	; 232
    d27a:	73 e0       	ldi	r23, 0x03	; 3
    d27c:	80 e0       	ldi	r24, 0x00	; 0
    d27e:	90 e0       	ldi	r25, 0x00	; 0
    d280:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    d284:	c4 de       	rcall	.-632    	; 0xd00e <_Z12Reset_Bufferv>
    d286:	61 e2       	ldi	r22, 0x21	; 33
    d288:	74 e2       	ldi	r23, 0x24	; 36
    d28a:	83 e8       	ldi	r24, 0x83	; 131
    d28c:	96 e1       	ldi	r25, 0x16	; 22
    d28e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d292:	01 e0       	ldi	r16, 0x01	; 1
    d294:	28 eb       	ldi	r18, 0xB8	; 184
    d296:	3b e0       	ldi	r19, 0x0B	; 11
    d298:	40 e0       	ldi	r20, 0x00	; 0
    d29a:	50 e0       	ldi	r21, 0x00	; 0
    d29c:	6e e1       	ldi	r22, 0x1E	; 30
    d29e:	73 e0       	ldi	r23, 0x03	; 3
    d2a0:	80 e0       	ldi	r24, 0x00	; 0
    d2a2:	90 e0       	ldi	r25, 0x00	; 0
    d2a4:	19 df       	rcall	.-462    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d2a6:	81 e0       	ldi	r24, 0x01	; 1
    d2a8:	01 c0       	rjmp	.+2      	; 0xd2ac <_Z8Gsm_Initv+0x6a>
    d2aa:	80 e0       	ldi	r24, 0x00	; 0
    d2ac:	0f 91       	pop	r16
    d2ae:	08 95       	ret

0000d2b0 <_Z20Check_Gsm_Connectionv>:
    d2b0:	0f 93       	push	r16
    d2b2:	ad de       	rcall	.-678    	; 0xd00e <_Z12Reset_Bufferv>
    d2b4:	66 e1       	ldi	r22, 0x16	; 22
    d2b6:	74 e2       	ldi	r23, 0x24	; 36
    d2b8:	83 e8       	ldi	r24, 0x83	; 131
    d2ba:	96 e1       	ldi	r25, 0x16	; 22
    d2bc:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d2c0:	02 e0       	ldi	r16, 0x02	; 2
    d2c2:	28 e8       	ldi	r18, 0x88	; 136
    d2c4:	33 e1       	ldi	r19, 0x13	; 19
    d2c6:	40 e0       	ldi	r20, 0x00	; 0
    d2c8:	50 e0       	ldi	r21, 0x00	; 0
    d2ca:	6e e1       	ldi	r22, 0x1E	; 30
    d2cc:	73 e0       	ldi	r23, 0x03	; 3
    d2ce:	80 e0       	ldi	r24, 0x00	; 0
    d2d0:	90 e0       	ldi	r25, 0x00	; 0
    d2d2:	02 df       	rcall	.-508    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d2d4:	9c de       	rcall	.-712    	; 0xd00e <_Z12Reset_Bufferv>
    d2d6:	6c e0       	ldi	r22, 0x0C	; 12
    d2d8:	74 e2       	ldi	r23, 0x24	; 36
    d2da:	83 e8       	ldi	r24, 0x83	; 131
    d2dc:	96 e1       	ldi	r25, 0x16	; 22
    d2de:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d2e2:	28 eb       	ldi	r18, 0xB8	; 184
    d2e4:	3b e0       	ldi	r19, 0x0B	; 11
    d2e6:	40 e0       	ldi	r20, 0x00	; 0
    d2e8:	50 e0       	ldi	r21, 0x00	; 0
    d2ea:	6e e1       	ldi	r22, 0x1E	; 30
    d2ec:	73 e0       	ldi	r23, 0x03	; 3
    d2ee:	80 e0       	ldi	r24, 0x00	; 0
    d2f0:	90 e0       	ldi	r25, 0x00	; 0
    d2f2:	f2 de       	rcall	.-540    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d2f4:	8c de       	rcall	.-744    	; 0xd00e <_Z12Reset_Bufferv>
    d2f6:	63 e0       	ldi	r22, 0x03	; 3
    d2f8:	74 e2       	ldi	r23, 0x24	; 36
    d2fa:	83 e8       	ldi	r24, 0x83	; 131
    d2fc:	96 e1       	ldi	r25, 0x16	; 22
    d2fe:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d302:	28 eb       	ldi	r18, 0xB8	; 184
    d304:	3b e0       	ldi	r19, 0x0B	; 11
    d306:	4c ea       	ldi	r20, 0xAC	; 172
    d308:	53 e0       	ldi	r21, 0x03	; 3
    d30a:	67 eb       	ldi	r22, 0xB7	; 183
    d30c:	73 e0       	ldi	r23, 0x03	; 3
    d30e:	80 e0       	ldi	r24, 0x00	; 0
    d310:	90 e0       	ldi	r25, 0x00	; 0
    d312:	e2 de       	rcall	.-572    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d314:	81 11       	cpse	r24, r1
    d316:	26 c0       	rjmp	.+76     	; 0xd364 <_Z20Check_Gsm_Connectionv+0xb4>
    d318:	68 eb       	ldi	r22, 0xB8	; 184
    d31a:	7b e0       	ldi	r23, 0x0B	; 11
    d31c:	80 e0       	ldi	r24, 0x00	; 0
    d31e:	90 e0       	ldi	r25, 0x00	; 0
    d320:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    d324:	74 de       	rcall	.-792    	; 0xd00e <_Z12Reset_Bufferv>
    d326:	69 ef       	ldi	r22, 0xF9	; 249
    d328:	73 e2       	ldi	r23, 0x23	; 35
    d32a:	83 e8       	ldi	r24, 0x83	; 131
    d32c:	96 e1       	ldi	r25, 0x16	; 22
    d32e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d332:	28 eb       	ldi	r18, 0xB8	; 184
    d334:	3b e0       	ldi	r19, 0x0B	; 11
    d336:	40 e0       	ldi	r20, 0x00	; 0
    d338:	50 e0       	ldi	r21, 0x00	; 0
    d33a:	6e e1       	ldi	r22, 0x1E	; 30
    d33c:	73 e0       	ldi	r23, 0x03	; 3
    d33e:	80 e0       	ldi	r24, 0x00	; 0
    d340:	90 e0       	ldi	r25, 0x00	; 0
    d342:	ca de       	rcall	.-620    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d344:	64 de       	rcall	.-824    	; 0xd00e <_Z12Reset_Bufferv>
    d346:	60 ef       	ldi	r22, 0xF0	; 240
    d348:	73 e2       	ldi	r23, 0x23	; 35
    d34a:	83 e8       	ldi	r24, 0x83	; 131
    d34c:	96 e1       	ldi	r25, 0x16	; 22
    d34e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d352:	28 eb       	ldi	r18, 0xB8	; 184
    d354:	3b e0       	ldi	r19, 0x0B	; 11
    d356:	4c ea       	ldi	r20, 0xAC	; 172
    d358:	53 e0       	ldi	r21, 0x03	; 3
    d35a:	67 eb       	ldi	r22, 0xB7	; 183
    d35c:	73 e0       	ldi	r23, 0x03	; 3
    d35e:	80 e0       	ldi	r24, 0x00	; 0
    d360:	90 e0       	ldi	r25, 0x00	; 0
    d362:	ba de       	rcall	.-652    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d364:	68 ee       	ldi	r22, 0xE8	; 232
    d366:	73 e0       	ldi	r23, 0x03	; 3
    d368:	80 e0       	ldi	r24, 0x00	; 0
    d36a:	90 e0       	ldi	r25, 0x00	; 0
    d36c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    d370:	4e de       	rcall	.-868    	; 0xd00e <_Z12Reset_Bufferv>
    d372:	65 ee       	ldi	r22, 0xE5	; 229
    d374:	73 e2       	ldi	r23, 0x23	; 35
    d376:	83 e8       	ldi	r24, 0x83	; 131
    d378:	96 e1       	ldi	r25, 0x16	; 22
    d37a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d37e:	02 e0       	ldi	r16, 0x02	; 2
    d380:	28 eb       	ldi	r18, 0xB8	; 184
    d382:	3b e0       	ldi	r19, 0x0B	; 11
    d384:	40 e0       	ldi	r20, 0x00	; 0
    d386:	50 e0       	ldi	r21, 0x00	; 0
    d388:	6e e1       	ldi	r22, 0x1E	; 30
    d38a:	73 e0       	ldi	r23, 0x03	; 3
    d38c:	80 e0       	ldi	r24, 0x00	; 0
    d38e:	90 e0       	ldi	r25, 0x00	; 0
    d390:	a3 de       	rcall	.-698    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d392:	3d de       	rcall	.-902    	; 0xd00e <_Z12Reset_Bufferv>
    d394:	6b ed       	ldi	r22, 0xDB	; 219
    d396:	73 e2       	ldi	r23, 0x23	; 35
    d398:	83 e8       	ldi	r24, 0x83	; 131
    d39a:	96 e1       	ldi	r25, 0x16	; 22
    d39c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3a0:	28 eb       	ldi	r18, 0xB8	; 184
    d3a2:	3b e0       	ldi	r19, 0x0B	; 11
    d3a4:	42 ec       	ldi	r20, 0xC2	; 194
    d3a6:	53 e0       	ldi	r21, 0x03	; 3
    d3a8:	6e ec       	ldi	r22, 0xCE	; 206
    d3aa:	73 e0       	ldi	r23, 0x03	; 3
    d3ac:	80 e0       	ldi	r24, 0x00	; 0
    d3ae:	90 e0       	ldi	r25, 0x00	; 0
    d3b0:	93 de       	rcall	.-730    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d3b2:	81 11       	cpse	r24, r1
    d3b4:	2b c0       	rjmp	.+86     	; 0xd40c <_Z20Check_Gsm_Connectionv+0x15c>
    d3b6:	68 ee       	ldi	r22, 0xE8	; 232
    d3b8:	73 e0       	ldi	r23, 0x03	; 3
    d3ba:	80 e0       	ldi	r24, 0x00	; 0
    d3bc:	90 e0       	ldi	r25, 0x00	; 0
    d3be:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    d3c2:	25 de       	rcall	.-950    	; 0xd00e <_Z12Reset_Bufferv>
    d3c4:	60 ed       	ldi	r22, 0xD0	; 208
    d3c6:	73 e2       	ldi	r23, 0x23	; 35
    d3c8:	83 e8       	ldi	r24, 0x83	; 131
    d3ca:	96 e1       	ldi	r25, 0x16	; 22
    d3cc:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3d0:	28 eb       	ldi	r18, 0xB8	; 184
    d3d2:	3b e0       	ldi	r19, 0x0B	; 11
    d3d4:	40 e0       	ldi	r20, 0x00	; 0
    d3d6:	50 e0       	ldi	r21, 0x00	; 0
    d3d8:	6e e1       	ldi	r22, 0x1E	; 30
    d3da:	73 e0       	ldi	r23, 0x03	; 3
    d3dc:	80 e0       	ldi	r24, 0x00	; 0
    d3de:	90 e0       	ldi	r25, 0x00	; 0
    d3e0:	7b de       	rcall	.-778    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d3e2:	15 de       	rcall	.-982    	; 0xd00e <_Z12Reset_Bufferv>
    d3e4:	66 ec       	ldi	r22, 0xC6	; 198
    d3e6:	73 e2       	ldi	r23, 0x23	; 35
    d3e8:	83 e8       	ldi	r24, 0x83	; 131
    d3ea:	96 e1       	ldi	r25, 0x16	; 22
    d3ec:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3f0:	28 eb       	ldi	r18, 0xB8	; 184
    d3f2:	3b e0       	ldi	r19, 0x0B	; 11
    d3f4:	42 ec       	ldi	r20, 0xC2	; 194
    d3f6:	53 e0       	ldi	r21, 0x03	; 3
    d3f8:	6e ec       	ldi	r22, 0xCE	; 206
    d3fa:	73 e0       	ldi	r23, 0x03	; 3
    d3fc:	80 e0       	ldi	r24, 0x00	; 0
    d3fe:	90 e0       	ldi	r25, 0x00	; 0
    d400:	6b de       	rcall	.-810    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d402:	91 e0       	ldi	r25, 0x01	; 1
    d404:	81 11       	cpse	r24, r1
    d406:	03 c0       	rjmp	.+6      	; 0xd40e <_Z20Check_Gsm_Connectionv+0x15e>
    d408:	90 e0       	ldi	r25, 0x00	; 0
    d40a:	01 c0       	rjmp	.+2      	; 0xd40e <_Z20Check_Gsm_Connectionv+0x15e>
    d40c:	91 e0       	ldi	r25, 0x01	; 1
    d40e:	89 2f       	mov	r24, r25
    d410:	0f 91       	pop	r16
    d412:	08 95       	ret

0000d414 <_Z17Get_Operator_NamePc>:
    d414:	0f 93       	push	r16
    d416:	cf 93       	push	r28
    d418:	df 93       	push	r29
    d41a:	ec 01       	movw	r28, r24
    d41c:	f8 dd       	rcall	.-1040   	; 0xd00e <_Z12Reset_Bufferv>
    d41e:	6d eb       	ldi	r22, 0xBD	; 189
    d420:	73 e2       	ldi	r23, 0x23	; 35
    d422:	83 e8       	ldi	r24, 0x83	; 131
    d424:	96 e1       	ldi	r25, 0x16	; 22
    d426:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d42a:	02 e0       	ldi	r16, 0x02	; 2
    d42c:	28 eb       	ldi	r18, 0xB8	; 184
    d42e:	3b e0       	ldi	r19, 0x0B	; 11
    d430:	40 e0       	ldi	r20, 0x00	; 0
    d432:	50 e0       	ldi	r21, 0x00	; 0
    d434:	6e e1       	ldi	r22, 0x1E	; 30
    d436:	73 e0       	ldi	r23, 0x03	; 3
    d438:	80 e0       	ldi	r24, 0x00	; 0
    d43a:	90 e0       	ldi	r25, 0x00	; 0
    d43c:	4d de       	rcall	.-870    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d43e:	62 e6       	ldi	r22, 0x62	; 98
    d440:	7f e0       	ldi	r23, 0x0F	; 15
    d442:	ce 01       	movw	r24, r28
    d444:	df 91       	pop	r29
    d446:	cf 91       	pop	r28
    d448:	0f 91       	pop	r16
    d44a:	0c 94 dd ed 	jmp	0x1dbba	; 0x1dbba <strcpy>

0000d44e <_Z12Gprs_ConnectPc>:
    d44e:	ef 92       	push	r14
    d450:	ff 92       	push	r15
    d452:	0f 93       	push	r16
    d454:	cf 93       	push	r28
    d456:	df 93       	push	r29
    d458:	cd b7       	in	r28, 0x3d	; 61
    d45a:	de b7       	in	r29, 0x3e	; 62
    d45c:	a8 97       	sbiw	r28, 0x28	; 40
    d45e:	0f b6       	in	r0, 0x3f	; 63
    d460:	f8 94       	cli
    d462:	de bf       	out	0x3e, r29	; 62
    d464:	0f be       	out	0x3f, r0	; 63
    d466:	cd bf       	out	0x3d, r28	; 61
    d468:	d2 dd       	rcall	.-1116   	; 0xd00e <_Z12Reset_Bufferv>
    d46a:	85 ea       	ldi	r24, 0xA5	; 165
    d46c:	9d e0       	ldi	r25, 0x0D	; 13
    d46e:	9f 93       	push	r25
    d470:	8f 93       	push	r24
    d472:	8a ed       	ldi	r24, 0xDA	; 218
    d474:	93 e0       	ldi	r25, 0x03	; 3
    d476:	9f 93       	push	r25
    d478:	8f 93       	push	r24
    d47a:	ce 01       	movw	r24, r28
    d47c:	01 96       	adiw	r24, 0x01	; 1
    d47e:	7c 01       	movw	r14, r24
    d480:	9f 93       	push	r25
    d482:	8f 93       	push	r24
    d484:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
    d488:	01 e0       	ldi	r16, 0x01	; 1
    d48a:	28 ee       	ldi	r18, 0xE8	; 232
    d48c:	33 e0       	ldi	r19, 0x03	; 3
    d48e:	40 e0       	ldi	r20, 0x00	; 0
    d490:	50 e0       	ldi	r21, 0x00	; 0
    d492:	6e e1       	ldi	r22, 0x1E	; 30
    d494:	73 e0       	ldi	r23, 0x03	; 3
    d496:	c7 01       	movw	r24, r14
    d498:	1f de       	rcall	.-962    	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d49a:	64 e9       	ldi	r22, 0x94	; 148
    d49c:	73 e2       	ldi	r23, 0x23	; 35
    d49e:	86 ec       	ldi	r24, 0xC6	; 198
    d4a0:	94 e1       	ldi	r25, 0x14	; 20
    d4a2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d4a6:	0f 90       	pop	r0
    d4a8:	0f 90       	pop	r0
    d4aa:	0f 90       	pop	r0
    d4ac:	0f 90       	pop	r0
    d4ae:	0f 90       	pop	r0
    d4b0:	0f 90       	pop	r0
    d4b2:	81 e0       	ldi	r24, 0x01	; 1
    d4b4:	a8 96       	adiw	r28, 0x28	; 40
    d4b6:	0f b6       	in	r0, 0x3f	; 63
    d4b8:	f8 94       	cli
    d4ba:	de bf       	out	0x3e, r29	; 62
    d4bc:	0f be       	out	0x3f, r0	; 63
    d4be:	cd bf       	out	0x3d, r28	; 61
    d4c0:	df 91       	pop	r29
    d4c2:	cf 91       	pop	r28
    d4c4:	0f 91       	pop	r16
    d4c6:	ff 90       	pop	r15
    d4c8:	ef 90       	pop	r14
    d4ca:	08 95       	ret

0000d4cc <_Z12MQTT_PublishPhS_>:
    d4cc:	af 92       	push	r10
    d4ce:	bf 92       	push	r11
    d4d0:	cf 92       	push	r12
    d4d2:	df 92       	push	r13
    d4d4:	ef 92       	push	r14
    d4d6:	ff 92       	push	r15
    d4d8:	0f 93       	push	r16
    d4da:	1f 93       	push	r17
    d4dc:	cf 93       	push	r28
    d4de:	df 93       	push	r29
    d4e0:	cd b7       	in	r28, 0x3d	; 61
    d4e2:	de b7       	in	r29, 0x3e	; 62
    d4e4:	6e 97       	sbiw	r28, 0x1e	; 30
    d4e6:	0f b6       	in	r0, 0x3f	; 63
    d4e8:	f8 94       	cli
    d4ea:	de bf       	out	0x3e, r29	; 62
    d4ec:	0f be       	out	0x3f, r0	; 63
    d4ee:	cd bf       	out	0x3d, r28	; 61
    d4f0:	5c 01       	movw	r10, r24
    d4f2:	6b 01       	movw	r12, r22
    d4f4:	1e e1       	ldi	r17, 0x1E	; 30
    d4f6:	ce 01       	movw	r24, r28
    d4f8:	01 96       	adiw	r24, 0x01	; 1
    d4fa:	7c 01       	movw	r14, r24
    d4fc:	fc 01       	movw	r30, r24
    d4fe:	81 2f       	mov	r24, r17
    d500:	11 92       	st	Z+, r1
    d502:	8a 95       	dec	r24
    d504:	e9 f7       	brne	.-6      	; 0xd500 <_Z12MQTT_PublishPhS_+0x34>
    d506:	83 dd       	rcall	.-1274   	; 0xd00e <_Z12Reset_Bufferv>
    d508:	f5 01       	movw	r30, r10
    d50a:	01 90       	ld	r0, Z+
    d50c:	00 20       	and	r0, r0
    d50e:	e9 f7       	brne	.-6      	; 0xd50a <_Z12MQTT_PublishPhS_+0x3e>
    d510:	31 97       	sbiw	r30, 0x01	; 1
    d512:	ea 19       	sub	r30, r10
    d514:	fb 09       	sbc	r31, r11
    d516:	ff 93       	push	r31
    d518:	ef 93       	push	r30
    d51a:	81 ef       	ldi	r24, 0xF1	; 241
    d51c:	93 e0       	ldi	r25, 0x03	; 3
    d51e:	9f 93       	push	r25
    d520:	8f 93       	push	r24
    d522:	ff 92       	push	r15
    d524:	ef 92       	push	r14
    d526:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
    d52a:	02 e0       	ldi	r16, 0x02	; 2
    d52c:	28 eb       	ldi	r18, 0xB8	; 184
    d52e:	3b e0       	ldi	r19, 0x0B	; 11
    d530:	40 e0       	ldi	r20, 0x00	; 0
    d532:	50 e0       	ldi	r21, 0x00	; 0
    d534:	64 e0       	ldi	r22, 0x04	; 4
    d536:	74 e0       	ldi	r23, 0x04	; 4
    d538:	c7 01       	movw	r24, r14
    d53a:	ce dd       	rcall	.-1124   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d53c:	0f 90       	pop	r0
    d53e:	0f 90       	pop	r0
    d540:	0f 90       	pop	r0
    d542:	0f 90       	pop	r0
    d544:	0f 90       	pop	r0
    d546:	0f 90       	pop	r0
    d548:	81 11       	cpse	r24, r1
    d54a:	22 c0       	rjmp	.+68     	; 0xd590 <_Z12MQTT_PublishPhS_+0xc4>
    d54c:	60 dd       	rcall	.-1344   	; 0xd00e <_Z12Reset_Bufferv>
    d54e:	6a e8       	ldi	r22, 0x8A	; 138
    d550:	73 e2       	ldi	r23, 0x23	; 35
    d552:	83 e8       	ldi	r24, 0x83	; 131
    d554:	96 e1       	ldi	r25, 0x16	; 22
    d556:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d55a:	01 e0       	ldi	r16, 0x01	; 1
    d55c:	28 ee       	ldi	r18, 0xE8	; 232
    d55e:	33 e0       	ldi	r19, 0x03	; 3
    d560:	40 e0       	ldi	r20, 0x00	; 0
    d562:	50 e0       	ldi	r21, 0x00	; 0
    d564:	6e e1       	ldi	r22, 0x1E	; 30
    d566:	73 e0       	ldi	r23, 0x03	; 3
    d568:	80 e0       	ldi	r24, 0x00	; 0
    d56a:	90 e0       	ldi	r25, 0x00	; 0
    d56c:	b5 dd       	rcall	.-1174   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d56e:	8e e1       	ldi	r24, 0x1E	; 30
    d570:	f7 01       	movw	r30, r14
    d572:	11 92       	st	Z+, r1
    d574:	8a 95       	dec	r24
    d576:	e9 f7       	brne	.-6      	; 0xd572 <_Z12MQTT_PublishPhS_+0xa6>
    d578:	8a e1       	ldi	r24, 0x1A	; 26
    d57a:	89 83       	std	Y+1, r24	; 0x01
    d57c:	28 ec       	ldi	r18, 0xC8	; 200
    d57e:	30 e0       	ldi	r19, 0x00	; 0
    d580:	40 e0       	ldi	r20, 0x00	; 0
    d582:	50 e0       	ldi	r21, 0x00	; 0
    d584:	6e e1       	ldi	r22, 0x1E	; 30
    d586:	73 e0       	ldi	r23, 0x03	; 3
    d588:	c7 01       	movw	r24, r14
    d58a:	a6 dd       	rcall	.-1204   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d58c:	80 e0       	ldi	r24, 0x00	; 0
    d58e:	41 c0       	rjmp	.+130    	; 0xd612 <_Z12MQTT_PublishPhS_+0x146>
    d590:	3e dd       	rcall	.-1412   	; 0xd00e <_Z12Reset_Bufferv>
    d592:	b5 01       	movw	r22, r10
    d594:	83 e8       	ldi	r24, 0x83	; 131
    d596:	96 e1       	ldi	r25, 0x16	; 22
    d598:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
    d59c:	f7 01       	movw	r30, r14
    d59e:	11 92       	st	Z+, r1
    d5a0:	1a 95       	dec	r17
    d5a2:	e9 f7       	brne	.-6      	; 0xd59e <_Z12MQTT_PublishPhS_+0xd2>
    d5a4:	34 dd       	rcall	.-1432   	; 0xd00e <_Z12Reset_Bufferv>
    d5a6:	f6 01       	movw	r30, r12
    d5a8:	01 90       	ld	r0, Z+
    d5aa:	00 20       	and	r0, r0
    d5ac:	e9 f7       	brne	.-6      	; 0xd5a8 <_Z12MQTT_PublishPhS_+0xdc>
    d5ae:	31 97       	sbiw	r30, 0x01	; 1
    d5b0:	ec 19       	sub	r30, r12
    d5b2:	fd 09       	sbc	r31, r13
    d5b4:	ff 93       	push	r31
    d5b6:	ef 93       	push	r30
    d5b8:	86 e0       	ldi	r24, 0x06	; 6
    d5ba:	94 e0       	ldi	r25, 0x04	; 4
    d5bc:	9f 93       	push	r25
    d5be:	8f 93       	push	r24
    d5c0:	ff 92       	push	r15
    d5c2:	ef 92       	push	r14
    d5c4:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
    d5c8:	02 e0       	ldi	r16, 0x02	; 2
    d5ca:	28 eb       	ldi	r18, 0xB8	; 184
    d5cc:	3b e0       	ldi	r19, 0x0B	; 11
    d5ce:	40 e0       	ldi	r20, 0x00	; 0
    d5d0:	50 e0       	ldi	r21, 0x00	; 0
    d5d2:	64 e0       	ldi	r22, 0x04	; 4
    d5d4:	74 e0       	ldi	r23, 0x04	; 4
    d5d6:	c7 01       	movw	r24, r14
    d5d8:	7f dd       	rcall	.-1282   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d5da:	0f 90       	pop	r0
    d5dc:	0f 90       	pop	r0
    d5de:	0f 90       	pop	r0
    d5e0:	0f 90       	pop	r0
    d5e2:	0f 90       	pop	r0
    d5e4:	0f 90       	pop	r0
    d5e6:	88 23       	and	r24, r24
    d5e8:	09 f4       	brne	.+2      	; 0xd5ec <_Z12MQTT_PublishPhS_+0x120>
    d5ea:	b0 cf       	rjmp	.-160    	; 0xd54c <_Z12MQTT_PublishPhS_+0x80>
    d5ec:	10 dd       	rcall	.-1504   	; 0xd00e <_Z12Reset_Bufferv>
    d5ee:	b6 01       	movw	r22, r12
    d5f0:	83 e8       	ldi	r24, 0x83	; 131
    d5f2:	96 e1       	ldi	r25, 0x16	; 22
    d5f4:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
    d5f8:	28 eb       	ldi	r18, 0xB8	; 184
    d5fa:	3b e0       	ldi	r19, 0x0B	; 11
    d5fc:	40 e0       	ldi	r20, 0x00	; 0
    d5fe:	50 e0       	ldi	r21, 0x00	; 0
    d600:	6b e1       	ldi	r22, 0x1B	; 27
    d602:	74 e0       	ldi	r23, 0x04	; 4
    d604:	8a e2       	ldi	r24, 0x2A	; 42
    d606:	94 e0       	ldi	r25, 0x04	; 4
    d608:	67 dd       	rcall	.-1330   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d60a:	88 23       	and	r24, r24
    d60c:	09 f4       	brne	.+2      	; 0xd610 <_Z12MQTT_PublishPhS_+0x144>
    d60e:	9e cf       	rjmp	.-196    	; 0xd54c <_Z12MQTT_PublishPhS_+0x80>
    d610:	81 e0       	ldi	r24, 0x01	; 1
    d612:	6e 96       	adiw	r28, 0x1e	; 30
    d614:	0f b6       	in	r0, 0x3f	; 63
    d616:	f8 94       	cli
    d618:	de bf       	out	0x3e, r29	; 62
    d61a:	0f be       	out	0x3f, r0	; 63
    d61c:	cd bf       	out	0x3d, r28	; 61
    d61e:	df 91       	pop	r29
    d620:	cf 91       	pop	r28
    d622:	1f 91       	pop	r17
    d624:	0f 91       	pop	r16
    d626:	ff 90       	pop	r15
    d628:	ef 90       	pop	r14
    d62a:	df 90       	pop	r13
    d62c:	cf 90       	pop	r12
    d62e:	bf 90       	pop	r11
    d630:	af 90       	pop	r10
    d632:	08 95       	ret

0000d634 <_Z18_kGSM_SIG_STRENGTHv>:
    d634:	0f 93       	push	r16
    d636:	eb dc       	rcall	.-1578   	; 0xd00e <_Z12Reset_Bufferv>
    d638:	6b e4       	ldi	r22, 0x4B	; 75
    d63a:	74 e2       	ldi	r23, 0x24	; 36
    d63c:	83 e8       	ldi	r24, 0x83	; 131
    d63e:	96 e1       	ldi	r25, 0x16	; 22
    d640:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d644:	01 e0       	ldi	r16, 0x01	; 1
    d646:	20 ed       	ldi	r18, 0xD0	; 208
    d648:	37 e0       	ldi	r19, 0x07	; 7
    d64a:	40 e0       	ldi	r20, 0x00	; 0
    d64c:	50 e0       	ldi	r21, 0x00	; 0
    d64e:	6e e1       	ldi	r22, 0x1E	; 30
    d650:	73 e0       	ldi	r23, 0x03	; 3
    d652:	80 e0       	ldi	r24, 0x00	; 0
    d654:	90 e0       	ldi	r25, 0x00	; 0
    d656:	40 dd       	rcall	.-1408   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d658:	88 23       	and	r24, r24
    d65a:	81 f1       	breq	.+96     	; 0xd6bc <_Z18_kGSM_SIG_STRENGTHv+0x88>
    d65c:	6d e3       	ldi	r22, 0x3D	; 61
    d65e:	74 e0       	ldi	r23, 0x04	; 4
    d660:	82 e6       	ldi	r24, 0x62	; 98
    d662:	9f e0       	ldi	r25, 0x0F	; 15
    d664:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    d668:	89 2b       	or	r24, r25
    d66a:	41 f1       	breq	.+80     	; 0xd6bc <_Z18_kGSM_SIG_STRENGTHv+0x88>
    d66c:	80 e0       	ldi	r24, 0x00	; 0
    d66e:	90 e0       	ldi	r25, 0x00	; 0
    d670:	28 2f       	mov	r18, r24
    d672:	fc 01       	movw	r30, r24
    d674:	ee 59       	subi	r30, 0x9E	; 158
    d676:	f0 4f       	sbci	r31, 0xF0	; 240
    d678:	30 81       	ld	r19, Z
    d67a:	3b 32       	cpi	r19, 0x2B	; 43
    d67c:	31 f4       	brne	.+12     	; 0xd68a <_Z18_kGSM_SIG_STRENGTHv+0x56>
    d67e:	fc 01       	movw	r30, r24
    d680:	ea 59       	subi	r30, 0x9A	; 154
    d682:	f0 4f       	sbci	r31, 0xF0	; 240
    d684:	30 81       	ld	r19, Z
    d686:	3a 33       	cpi	r19, 0x3A	; 58
    d688:	29 f0       	breq	.+10     	; 0xd694 <_Z18_kGSM_SIG_STRENGTHv+0x60>
    d68a:	01 96       	adiw	r24, 0x01	; 1
    d68c:	84 31       	cpi	r24, 0x14	; 20
    d68e:	91 05       	cpc	r25, r1
    d690:	79 f7       	brne	.-34     	; 0xd670 <_Z18_kGSM_SIG_STRENGTHv+0x3c>
    d692:	24 e1       	ldi	r18, 0x14	; 20
    d694:	2a 5f       	subi	r18, 0xFA	; 250
    d696:	30 e0       	ldi	r19, 0x00	; 0
    d698:	f9 01       	movw	r30, r18
    d69a:	ee 59       	subi	r30, 0x9E	; 158
    d69c:	f0 4f       	sbci	r31, 0xF0	; 240
    d69e:	80 81       	ld	r24, Z
    d6a0:	f9 01       	movw	r30, r18
    d6a2:	ed 59       	subi	r30, 0x9D	; 157
    d6a4:	f0 4f       	sbci	r31, 0xF0	; 240
    d6a6:	90 81       	ld	r25, Z
    d6a8:	88 0f       	add	r24, r24
    d6aa:	80 56       	subi	r24, 0x60	; 96
    d6ac:	28 2f       	mov	r18, r24
    d6ae:	22 0f       	add	r18, r18
    d6b0:	22 0f       	add	r18, r18
    d6b2:	82 0f       	add	r24, r18
    d6b4:	90 53       	subi	r25, 0x30	; 48
    d6b6:	89 0f       	add	r24, r25
    d6b8:	90 e0       	ldi	r25, 0x00	; 0
    d6ba:	10 c0       	rjmp	.+32     	; 0xd6dc <_Z18_kGSM_SIG_STRENGTHv+0xa8>
    d6bc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d6c0:	81 30       	cpi	r24, 0x01	; 1
    d6c2:	51 f4       	brne	.+20     	; 0xd6d8 <_Z18_kGSM_SIG_STRENGTHv+0xa4>
    d6c4:	6c e3       	ldi	r22, 0x3C	; 60
    d6c6:	74 e2       	ldi	r23, 0x24	; 36
    d6c8:	86 ec       	ldi	r24, 0xC6	; 198
    d6ca:	94 e1       	ldi	r25, 0x14	; 20
    d6cc:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    d6d0:	86 ec       	ldi	r24, 0xC6	; 198
    d6d2:	94 e1       	ldi	r25, 0x14	; 20
    d6d4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    d6d8:	80 e0       	ldi	r24, 0x00	; 0
    d6da:	90 e0       	ldi	r25, 0x00	; 0
    d6dc:	0f 91       	pop	r16
    d6de:	08 95       	ret

0000d6e0 <_Z17Is_MQTT_Connectedv>:
    d6e0:	0f 93       	push	r16
    d6e2:	95 dc       	rcall	.-1750   	; 0xd00e <_Z12Reset_Bufferv>
    d6e4:	6e e3       	ldi	r22, 0x3E	; 62
    d6e6:	73 e2       	ldi	r23, 0x23	; 35
    d6e8:	83 e8       	ldi	r24, 0x83	; 131
    d6ea:	96 e1       	ldi	r25, 0x16	; 22
    d6ec:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d6f0:	01 e0       	ldi	r16, 0x01	; 1
    d6f2:	28 eb       	ldi	r18, 0xB8	; 184
    d6f4:	3b e0       	ldi	r19, 0x0B	; 11
    d6f6:	40 e0       	ldi	r20, 0x00	; 0
    d6f8:	50 e0       	ldi	r21, 0x00	; 0
    d6fa:	61 e4       	ldi	r22, 0x41	; 65
    d6fc:	74 e0       	ldi	r23, 0x04	; 4
    d6fe:	80 e0       	ldi	r24, 0x00	; 0
    d700:	90 e0       	ldi	r25, 0x00	; 0
    d702:	ea dc       	rcall	.-1580   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d704:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    d708:	88 23       	and	r24, r24
    d70a:	69 f0       	breq	.+26     	; 0xd726 <_Z17Is_MQTT_Connectedv+0x46>
    d70c:	91 30       	cpi	r25, 0x01	; 1
    d70e:	c1 f4       	brne	.+48     	; 0xd740 <_Z17Is_MQTT_Connectedv+0x60>
    d710:	66 e2       	ldi	r22, 0x26	; 38
    d712:	73 e2       	ldi	r23, 0x23	; 35
    d714:	86 ec       	ldi	r24, 0xC6	; 198
    d716:	94 e1       	ldi	r25, 0x14	; 20
    d718:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d71c:	86 ec       	ldi	r24, 0xC6	; 198
    d71e:	94 e1       	ldi	r25, 0x14	; 20
    d720:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    d724:	0d c0       	rjmp	.+26     	; 0xd740 <_Z17Is_MQTT_Connectedv+0x60>
    d726:	91 30       	cpi	r25, 0x01	; 1
    d728:	69 f4       	brne	.+26     	; 0xd744 <_Z17Is_MQTT_Connectedv+0x64>
    d72a:	6a e0       	ldi	r22, 0x0A	; 10
    d72c:	73 e2       	ldi	r23, 0x23	; 35
    d72e:	86 ec       	ldi	r24, 0xC6	; 198
    d730:	94 e1       	ldi	r25, 0x14	; 20
    d732:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d736:	86 ec       	ldi	r24, 0xC6	; 198
    d738:	94 e1       	ldi	r25, 0x14	; 20
    d73a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    d73e:	02 c0       	rjmp	.+4      	; 0xd744 <_Z17Is_MQTT_Connectedv+0x64>
    d740:	81 e0       	ldi	r24, 0x01	; 1
    d742:	01 c0       	rjmp	.+2      	; 0xd746 <_Z17Is_MQTT_Connectedv+0x66>
    d744:	80 e0       	ldi	r24, 0x00	; 0
    d746:	0f 91       	pop	r16
    d748:	08 95       	ret

0000d74a <_Z12MQTT_ConnectPKcS0_S0_>:
    d74a:	af 92       	push	r10
    d74c:	bf 92       	push	r11
    d74e:	cf 92       	push	r12
    d750:	df 92       	push	r13
    d752:	ef 92       	push	r14
    d754:	ff 92       	push	r15
    d756:	0f 93       	push	r16
    d758:	1f 93       	push	r17
    d75a:	cf 93       	push	r28
    d75c:	df 93       	push	r29
    d75e:	cd b7       	in	r28, 0x3d	; 61
    d760:	de b7       	in	r29, 0x3e	; 62
    d762:	c8 57       	subi	r28, 0x78	; 120
    d764:	d1 09       	sbc	r29, r1
    d766:	0f b6       	in	r0, 0x3f	; 63
    d768:	f8 94       	cli
    d76a:	de bf       	out	0x3e, r29	; 62
    d76c:	0f be       	out	0x3f, r0	; 63
    d76e:	cd bf       	out	0x3d, r28	; 61
    d770:	d6 2e       	mov	r13, r22
    d772:	c7 2e       	mov	r12, r23
    d774:	b4 2e       	mov	r11, r20
    d776:	a5 2e       	mov	r10, r21
    d778:	18 e7       	ldi	r17, 0x78	; 120
    d77a:	9e 01       	movw	r18, r28
    d77c:	2f 5f       	subi	r18, 0xFF	; 255
    d77e:	3f 4f       	sbci	r19, 0xFF	; 255
    d780:	79 01       	movw	r14, r18
    d782:	f9 01       	movw	r30, r18
    d784:	21 2f       	mov	r18, r17
    d786:	11 92       	st	Z+, r1
    d788:	2a 95       	dec	r18
    d78a:	e9 f7       	brne	.-6      	; 0xd786 <_Z12MQTT_ConnectPKcS0_S0_+0x3c>
    d78c:	40 dc       	rcall	.-1920   	; 0xd00e <_Z12Reset_Bufferv>
    d78e:	6b e6       	ldi	r22, 0x6B	; 107
    d790:	73 e2       	ldi	r23, 0x23	; 35
    d792:	83 e8       	ldi	r24, 0x83	; 131
    d794:	96 e1       	ldi	r25, 0x16	; 22
    d796:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d79a:	02 e0       	ldi	r16, 0x02	; 2
    d79c:	28 eb       	ldi	r18, 0xB8	; 184
    d79e:	3b e0       	ldi	r19, 0x0B	; 11
    d7a0:	40 e0       	ldi	r20, 0x00	; 0
    d7a2:	50 e0       	ldi	r21, 0x00	; 0
    d7a4:	67 e5       	ldi	r22, 0x57	; 87
    d7a6:	74 e0       	ldi	r23, 0x04	; 4
    d7a8:	80 e0       	ldi	r24, 0x00	; 0
    d7aa:	90 e0       	ldi	r25, 0x00	; 0
    d7ac:	95 dc       	rcall	.-1750   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d7ae:	2f dc       	rcall	.-1954   	; 0xd00e <_Z12Reset_Bufferv>
    d7b0:	6d e5       	ldi	r22, 0x5D	; 93
    d7b2:	73 e2       	ldi	r23, 0x23	; 35
    d7b4:	83 e8       	ldi	r24, 0x83	; 131
    d7b6:	96 e1       	ldi	r25, 0x16	; 22
    d7b8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d7bc:	28 eb       	ldi	r18, 0xB8	; 184
    d7be:	3b e0       	ldi	r19, 0x0B	; 11
    d7c0:	40 e0       	ldi	r20, 0x00	; 0
    d7c2:	50 e0       	ldi	r21, 0x00	; 0
    d7c4:	6e e1       	ldi	r22, 0x1E	; 30
    d7c6:	73 e0       	ldi	r23, 0x03	; 3
    d7c8:	80 e0       	ldi	r24, 0x00	; 0
    d7ca:	90 e0       	ldi	r25, 0x00	; 0
    d7cc:	85 dc       	rcall	.-1782   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d7ce:	1f dc       	rcall	.-1986   	; 0xd00e <_Z12Reset_Bufferv>
    d7d0:	6f e4       	ldi	r22, 0x4F	; 79
    d7d2:	73 e2       	ldi	r23, 0x23	; 35
    d7d4:	83 e8       	ldi	r24, 0x83	; 131
    d7d6:	96 e1       	ldi	r25, 0x16	; 22
    d7d8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    d7dc:	28 eb       	ldi	r18, 0xB8	; 184
    d7de:	3b e0       	ldi	r19, 0x0B	; 11
    d7e0:	43 e6       	ldi	r20, 0x63	; 99
    d7e2:	54 e0       	ldi	r21, 0x04	; 4
    d7e4:	63 e7       	ldi	r22, 0x73	; 115
    d7e6:	74 e0       	ldi	r23, 0x04	; 4
    d7e8:	80 e0       	ldi	r24, 0x00	; 0
    d7ea:	90 e0       	ldi	r25, 0x00	; 0
    d7ec:	75 dc       	rcall	.-1814   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d7ee:	0f dc       	rcall	.-2018   	; 0xd00e <_Z12Reset_Bufferv>
    d7f0:	82 e8       	ldi	r24, 0x82	; 130
    d7f2:	94 e0       	ldi	r25, 0x04	; 4
    d7f4:	9f 93       	push	r25
    d7f6:	8f 93       	push	r24
    d7f8:	89 e8       	ldi	r24, 0x89	; 137
    d7fa:	94 e0       	ldi	r25, 0x04	; 4
    d7fc:	9f 93       	push	r25
    d7fe:	8f 93       	push	r24
    d800:	ff 92       	push	r15
    d802:	ef 92       	push	r14
    d804:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
    d808:	01 e0       	ldi	r16, 0x01	; 1
    d80a:	28 eb       	ldi	r18, 0xB8	; 184
    d80c:	3b e0       	ldi	r19, 0x0B	; 11
    d80e:	40 e0       	ldi	r20, 0x00	; 0
    d810:	50 e0       	ldi	r21, 0x00	; 0
    d812:	6e e1       	ldi	r22, 0x1E	; 30
    d814:	73 e0       	ldi	r23, 0x03	; 3
    d816:	c7 01       	movw	r24, r14
    d818:	5f dc       	rcall	.-1858   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d81a:	f7 01       	movw	r30, r14
    d81c:	11 92       	st	Z+, r1
    d81e:	1a 95       	dec	r17
    d820:	e9 f7       	brne	.-6      	; 0xd81c <_Z12MQTT_ConnectPKcS0_S0_+0xd2>
    d822:	af 92       	push	r10
    d824:	bf 92       	push	r11
    d826:	cf 92       	push	r12
    d828:	df 92       	push	r13
    d82a:	87 e0       	ldi	r24, 0x07	; 7
    d82c:	8f 93       	push	r24
    d82e:	8b e5       	ldi	r24, 0x5B	; 91
    d830:	8f 93       	push	r24
    d832:	8f e9       	ldi	r24, 0x9F	; 159
    d834:	94 e0       	ldi	r25, 0x04	; 4
    d836:	9f 93       	push	r25
    d838:	8f 93       	push	r24
    d83a:	8d ea       	ldi	r24, 0xAD	; 173
    d83c:	94 e0       	ldi	r25, 0x04	; 4
    d83e:	9f 93       	push	r25
    d840:	8f 93       	push	r24
    d842:	ff 92       	push	r15
    d844:	ef 92       	push	r14
    d846:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
    d84a:	28 e8       	ldi	r18, 0x88	; 136
    d84c:	33 e1       	ldi	r19, 0x13	; 19
    d84e:	40 e0       	ldi	r20, 0x00	; 0
    d850:	50 e0       	ldi	r21, 0x00	; 0
    d852:	6e e1       	ldi	r22, 0x1E	; 30
    d854:	73 e0       	ldi	r23, 0x03	; 3
    d856:	c7 01       	movw	r24, r14
    d858:	3f dc       	rcall	.-1922   	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    d85a:	68 eb       	ldi	r22, 0xB8	; 184
    d85c:	7b e0       	ldi	r23, 0x0B	; 11
    d85e:	80 e0       	ldi	r24, 0x00	; 0
    d860:	90 e0       	ldi	r25, 0x00	; 0
    d862:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    d866:	3c df       	rcall	.-392    	; 0xd6e0 <_Z17Is_MQTT_Connectedv>
    d868:	0f b6       	in	r0, 0x3f	; 63
    d86a:	f8 94       	cli
    d86c:	de bf       	out	0x3e, r29	; 62
    d86e:	0f be       	out	0x3f, r0	; 63
    d870:	cd bf       	out	0x3d, r28	; 61
    d872:	c8 58       	subi	r28, 0x88	; 136
    d874:	df 4f       	sbci	r29, 0xFF	; 255
    d876:	0f b6       	in	r0, 0x3f	; 63
    d878:	f8 94       	cli
    d87a:	de bf       	out	0x3e, r29	; 62
    d87c:	0f be       	out	0x3f, r0	; 63
    d87e:	cd bf       	out	0x3d, r28	; 61
    d880:	df 91       	pop	r29
    d882:	cf 91       	pop	r28
    d884:	1f 91       	pop	r17
    d886:	0f 91       	pop	r16
    d888:	ff 90       	pop	r15
    d88a:	ef 90       	pop	r14
    d88c:	df 90       	pop	r13
    d88e:	cf 90       	pop	r12
    d890:	bf 90       	pop	r11
    d892:	af 90       	pop	r10
    d894:	08 95       	ret

0000d896 <_Z9MQTT_Loopv>:
    d896:	83 e0       	ldi	r24, 0x03	; 3
    d898:	f5 d7       	rcall	.+4074   	; 0xe884 <_Z9Check_Simc>
    d89a:	81 e0       	ldi	r24, 0x01	; 1
    d89c:	80 93 e1 0c 	sts	0x0CE1, r24	; 0x800ce1 <Reading_Time>
    d8a0:	0e 94 50 60 	call	0xc0a0	; 0xc0a0 <_Z16Check_GSM_Signalv>
    d8a4:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
    d8a8:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    d8ac:	81 30       	cpi	r24, 0x01	; 1
    d8ae:	39 f0       	breq	.+14     	; 0xd8be <_Z9MQTT_Loopv+0x28>
    d8b0:	17 df       	rcall	.-466    	; 0xd6e0 <_Z17Is_MQTT_Connectedv>
    d8b2:	88 23       	and	r24, r24
    d8b4:	21 f0       	breq	.+8      	; 0xd8be <_Z9MQTT_Loopv+0x28>
    d8b6:	80 91 20 14 	lds	r24, 0x1420	; 0x801420 <_sRuble_Parameters+0x72>
    d8ba:	81 30       	cpi	r24, 0x01	; 1
    d8bc:	11 f0       	breq	.+4      	; 0xd8c2 <_Z9MQTT_Loopv+0x2c>
    d8be:	80 e0       	ldi	r24, 0x00	; 0
    d8c0:	08 95       	ret
    d8c2:	81 e0       	ldi	r24, 0x01	; 1
    d8c4:	08 95       	ret

0000d8c6 <_Z16Lcd_Special_Charhhhh>:
    d8c6:	df 92       	push	r13
    d8c8:	ef 92       	push	r14
    d8ca:	ff 92       	push	r15
    d8cc:	0f 93       	push	r16
    d8ce:	1f 93       	push	r17
    d8d0:	cf 93       	push	r28
    d8d2:	df 93       	push	r29
    d8d4:	cd b7       	in	r28, 0x3d	; 61
    d8d6:	de b7       	in	r29, 0x3e	; 62
    d8d8:	28 97       	sbiw	r28, 0x08	; 8
    d8da:	0f b6       	in	r0, 0x3f	; 63
    d8dc:	f8 94       	cli
    d8de:	de bf       	out	0x3e, r29	; 62
    d8e0:	0f be       	out	0x3f, r0	; 63
    d8e2:	cd bf       	out	0x3d, r28	; 61
    d8e4:	f8 2e       	mov	r15, r24
    d8e6:	e6 2e       	mov	r14, r22
    d8e8:	d4 2e       	mov	r13, r20
    d8ea:	8e 01       	movw	r16, r28
    d8ec:	0f 5f       	subi	r16, 0xFF	; 255
    d8ee:	1f 4f       	sbci	r17, 0xFF	; 255
    d8f0:	88 e0       	ldi	r24, 0x08	; 8
    d8f2:	f8 01       	movw	r30, r16
    d8f4:	11 92       	st	Z+, r1
    d8f6:	8a 95       	dec	r24
    d8f8:	e9 f7       	brne	.-6      	; 0xd8f4 <_Z16Lcd_Special_Charhhhh+0x2e>
    d8fa:	82 2f       	mov	r24, r18
    d8fc:	90 e0       	ldi	r25, 0x00	; 0
    d8fe:	fc 01       	movw	r30, r24
    d900:	31 97       	sbiw	r30, 0x01	; 1
    d902:	ea 30       	cpi	r30, 0x0A	; 10
    d904:	f1 05       	cpc	r31, r1
    d906:	08 f0       	brcs	.+2      	; 0xd90a <_Z16Lcd_Special_Charhhhh+0x44>
    d908:	86 c0       	rjmp	.+268    	; 0xda16 <_Z16Lcd_Special_Charhhhh+0x150>
    d90a:	88 27       	eor	r24, r24
    d90c:	e3 52       	subi	r30, 0x23	; 35
    d90e:	ff 4f       	sbci	r31, 0xFF	; 255
    d910:	8f 4f       	sbci	r24, 0xFF	; 255
    d912:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
    d916:	8f e1       	ldi	r24, 0x1F	; 31
    d918:	89 83       	std	Y+1, r24	; 0x01
    d91a:	81 e1       	ldi	r24, 0x11	; 17
    d91c:	8a 83       	std	Y+2, r24	; 0x02
    d91e:	8a e0       	ldi	r24, 0x0A	; 10
    d920:	58 c0       	rjmp	.+176    	; 0xd9d2 <_Z16Lcd_Special_Charhhhh+0x10c>
    d922:	9c e1       	ldi	r25, 0x1C	; 28
    d924:	99 83       	std	Y+1, r25	; 0x01
    d926:	80 e1       	ldi	r24, 0x10	; 16
    d928:	8a 83       	std	Y+2, r24	; 0x02
    d92a:	28 e1       	ldi	r18, 0x18	; 24
    d92c:	2b 83       	std	Y+3, r18	; 0x03
    d92e:	8c 83       	std	Y+4, r24	; 0x04
    d930:	9d 83       	std	Y+5, r25	; 0x05
    d932:	0b c0       	rjmp	.+22     	; 0xd94a <_Z16Lcd_Special_Charhhhh+0x84>
    d934:	8c e1       	ldi	r24, 0x1C	; 28
    d936:	89 83       	std	Y+1, r24	; 0x01
    d938:	90 e1       	ldi	r25, 0x10	; 16
    d93a:	9a 83       	std	Y+2, r25	; 0x02
    d93c:	28 e1       	ldi	r18, 0x18	; 24
    d93e:	2b 83       	std	Y+3, r18	; 0x03
    d940:	9c 83       	std	Y+4, r25	; 0x04
    d942:	8d 83       	std	Y+5, r24	; 0x05
    d944:	84 e0       	ldi	r24, 0x04	; 4
    d946:	8f 83       	std	Y+7, r24	; 0x07
    d948:	84 e1       	ldi	r24, 0x14	; 20
    d94a:	88 87       	std	Y+8, r24	; 0x08
    d94c:	64 c0       	rjmp	.+200    	; 0xda16 <_Z16Lcd_Special_Charhhhh+0x150>
    d94e:	8c e1       	ldi	r24, 0x1C	; 28
    d950:	89 83       	std	Y+1, r24	; 0x01
    d952:	80 e1       	ldi	r24, 0x10	; 16
    d954:	8a 83       	std	Y+2, r24	; 0x02
    d956:	98 e1       	ldi	r25, 0x18	; 24
    d958:	9b 83       	std	Y+3, r25	; 0x03
    d95a:	8c 83       	std	Y+4, r24	; 0x04
    d95c:	8d e1       	ldi	r24, 0x1D	; 29
    d95e:	8d 83       	std	Y+5, r24	; 0x05
    d960:	81 e0       	ldi	r24, 0x01	; 1
    d962:	8e 83       	std	Y+6, r24	; 0x06
    d964:	85 e0       	ldi	r24, 0x05	; 5
    d966:	8f 83       	std	Y+7, r24	; 0x07
    d968:	85 e1       	ldi	r24, 0x15	; 21
    d96a:	ef cf       	rjmp	.-34     	; 0xd94a <_Z16Lcd_Special_Charhhhh+0x84>
    d96c:	8c e1       	ldi	r24, 0x1C	; 28
    d96e:	89 83       	std	Y+1, r24	; 0x01
    d970:	90 e1       	ldi	r25, 0x10	; 16
    d972:	9a 83       	std	Y+2, r25	; 0x02
    d974:	28 e1       	ldi	r18, 0x18	; 24
    d976:	2b 83       	std	Y+3, r18	; 0x03
    d978:	9c 83       	std	Y+4, r25	; 0x04
    d97a:	8d 83       	std	Y+5, r24	; 0x05
    d97c:	85 e0       	ldi	r24, 0x05	; 5
    d97e:	8e 83       	std	Y+6, r24	; 0x06
    d980:	92 e0       	ldi	r25, 0x02	; 2
    d982:	9f 83       	std	Y+7, r25	; 0x07
    d984:	e2 cf       	rjmp	.-60     	; 0xd94a <_Z16Lcd_Special_Charhhhh+0x84>
    d986:	9e e0       	ldi	r25, 0x0E	; 14
    d988:	99 83       	std	Y+1, r25	; 0x01
    d98a:	81 e1       	ldi	r24, 0x11	; 17
    d98c:	8a 83       	std	Y+2, r24	; 0x02
    d98e:	8b 83       	std	Y+3, r24	; 0x03
    d990:	8c 83       	std	Y+4, r24	; 0x04
    d992:	8b e1       	ldi	r24, 0x1B	; 27
    d994:	8d 83       	std	Y+5, r24	; 0x05
    d996:	25 e1       	ldi	r18, 0x15	; 21
    d998:	2e 83       	std	Y+6, r18	; 0x06
    d99a:	8f 83       	std	Y+7, r24	; 0x07
    d99c:	98 87       	std	Y+8, r25	; 0x08
    d99e:	3b c0       	rjmp	.+118    	; 0xda16 <_Z16Lcd_Special_Charhhhh+0x150>
    d9a0:	87 e0       	ldi	r24, 0x07	; 7
    d9a2:	89 83       	std	Y+1, r24	; 0x01
    d9a4:	89 e0       	ldi	r24, 0x09	; 9
    d9a6:	8a 83       	std	Y+2, r24	; 0x02
    d9a8:	81 e1       	ldi	r24, 0x11	; 17
    d9aa:	8b 83       	std	Y+3, r24	; 0x03
    d9ac:	8c 83       	std	Y+4, r24	; 0x04
    d9ae:	8b e1       	ldi	r24, 0x1B	; 27
    d9b0:	8d 83       	std	Y+5, r24	; 0x05
    d9b2:	95 e1       	ldi	r25, 0x15	; 21
    d9b4:	9e 83       	std	Y+6, r25	; 0x06
    d9b6:	8f 83       	std	Y+7, r24	; 0x07
    d9b8:	8f e1       	ldi	r24, 0x1F	; 31
    d9ba:	c7 cf       	rjmp	.-114    	; 0xd94a <_Z16Lcd_Special_Charhhhh+0x84>
    d9bc:	84 e0       	ldi	r24, 0x04	; 4
    d9be:	89 83       	std	Y+1, r24	; 0x01
    d9c0:	8a 83       	std	Y+2, r24	; 0x02
    d9c2:	8b 83       	std	Y+3, r24	; 0x03
    d9c4:	87 e0       	ldi	r24, 0x07	; 7
    d9c6:	8c 83       	std	Y+4, r24	; 0x04
    d9c8:	26 c0       	rjmp	.+76     	; 0xda16 <_Z16Lcd_Special_Charhhhh+0x150>
    d9ca:	8f e1       	ldi	r24, 0x1F	; 31
    d9cc:	89 83       	std	Y+1, r24	; 0x01
    d9ce:	8a 83       	std	Y+2, r24	; 0x02
    d9d0:	8e e0       	ldi	r24, 0x0E	; 14
    d9d2:	8b 83       	std	Y+3, r24	; 0x03
    d9d4:	84 e0       	ldi	r24, 0x04	; 4
    d9d6:	8c 83       	std	Y+4, r24	; 0x04
    d9d8:	8d 83       	std	Y+5, r24	; 0x05
    d9da:	8e 83       	std	Y+6, r24	; 0x06
    d9dc:	8f 83       	std	Y+7, r24	; 0x07
    d9de:	1b c0       	rjmp	.+54     	; 0xda16 <_Z16Lcd_Special_Charhhhh+0x150>
    d9e0:	80 91 f0 13 	lds	r24, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0x42>
    d9e4:	1f 92       	push	r1
    d9e6:	8f 93       	push	r24
    d9e8:	80 91 ef 13 	lds	r24, 0x13EF	; 0x8013ef <_sRuble_Parameters+0x41>
    d9ec:	1f 92       	push	r1
    d9ee:	8f 93       	push	r24
    d9f0:	8c ed       	ldi	r24, 0xDC	; 220
    d9f2:	94 e0       	ldi	r25, 0x04	; 4
    d9f4:	9f 93       	push	r25
    d9f6:	8f 93       	push	r24
    d9f8:	1f 93       	push	r17
    d9fa:	0f 93       	push	r16
    d9fc:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
    da00:	2f e0       	ldi	r18, 0x0F	; 15
    da02:	40 e0       	ldi	r20, 0x00	; 0
    da04:	65 e0       	ldi	r22, 0x05	; 5
    da06:	c8 01       	movw	r24, r16
    da08:	d2 d8       	rcall	.-3676   	; 0xcbae <_Z14Lcd_Print_BuffPchhh>
    da0a:	0f b6       	in	r0, 0x3f	; 63
    da0c:	f8 94       	cli
    da0e:	de bf       	out	0x3e, r29	; 62
    da10:	0f be       	out	0x3f, r0	; 63
    da12:	cd bf       	out	0x3d, r28	; 61
    da14:	11 c0       	rjmp	.+34     	; 0xda38 <_Z16Lcd_Special_Charhhhh+0x172>
    da16:	a8 01       	movw	r20, r16
    da18:	6f 2d       	mov	r22, r15
    da1a:	83 ec       	ldi	r24, 0xC3	; 195
    da1c:	9c e0       	ldi	r25, 0x0C	; 12
    da1e:	0e 94 e1 da 	call	0x1b5c2	; 0x1b5c2 <_ZN17LiquidCrystal_I2C10createCharEhPh>
    da22:	4d 2d       	mov	r20, r13
    da24:	6e 2d       	mov	r22, r14
    da26:	83 ec       	ldi	r24, 0xC3	; 195
    da28:	9c e0       	ldi	r25, 0x0C	; 12
    da2a:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da2e:	6f 2d       	mov	r22, r15
    da30:	83 ec       	ldi	r24, 0xC3	; 195
    da32:	9c e0       	ldi	r25, 0x0C	; 12
    da34:	0e 94 08 db 	call	0x1b610	; 0x1b610 <_ZN17LiquidCrystal_I2C5writeEh>
    da38:	28 96       	adiw	r28, 0x08	; 8
    da3a:	0f b6       	in	r0, 0x3f	; 63
    da3c:	f8 94       	cli
    da3e:	de bf       	out	0x3e, r29	; 62
    da40:	0f be       	out	0x3f, r0	; 63
    da42:	cd bf       	out	0x3d, r28	; 61
    da44:	df 91       	pop	r29
    da46:	cf 91       	pop	r28
    da48:	1f 91       	pop	r17
    da4a:	0f 91       	pop	r16
    da4c:	ff 90       	pop	r15
    da4e:	ef 90       	pop	r14
    da50:	df 90       	pop	r13
    da52:	08 95       	ret

0000da54 <_Z16Display_Update_1v>:
    da54:	ff 92       	push	r15
    da56:	0f 93       	push	r16
    da58:	1f 93       	push	r17
    da5a:	cf 93       	push	r28
    da5c:	df 93       	push	r29
    da5e:	80 91 c2 0c 	lds	r24, 0x0CC2	; 0x800cc2 <Start_Display_In_Interrupt>
    da62:	81 11       	cpse	r24, r1
    da64:	7a c1       	rjmp	.+756    	; 0xdd5a <_Z16Display_Update_1v+0x306>
    da66:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    da6a:	3e 2f       	mov	r19, r30
    da6c:	32 70       	andi	r19, 0x02	; 2
    da6e:	20 e0       	ldi	r18, 0x00	; 0
    da70:	40 e0       	ldi	r20, 0x00	; 0
    da72:	50 e0       	ldi	r21, 0x00	; 0
    da74:	60 e0       	ldi	r22, 0x00	; 0
    da76:	70 e0       	ldi	r23, 0x00	; 0
    da78:	90 e0       	ldi	r25, 0x00	; 0
    da7a:	a0 e0       	ldi	r26, 0x00	; 0
    da7c:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    da80:	71 f0       	breq	.+28     	; 0xda9e <_Z16Display_Update_1v+0x4a>
    da82:	ed 7f       	andi	r30, 0xFD	; 253
    da84:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    da88:	41 e0       	ldi	r20, 0x01	; 1
    da8a:	83 ec       	ldi	r24, 0xC3	; 195
    da8c:	9c e0       	ldi	r25, 0x0C	; 12
    da8e:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da92:	61 ee       	ldi	r22, 0xE1	; 225
    da94:	72 e2       	ldi	r23, 0x22	; 34
    da96:	83 ec       	ldi	r24, 0xC3	; 195
    da98:	9c e0       	ldi	r25, 0x0C	; 12
    da9a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    da9e:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    daa2:	3e 2f       	mov	r19, r30
    daa4:	34 70       	andi	r19, 0x04	; 4
    daa6:	20 e0       	ldi	r18, 0x00	; 0
    daa8:	40 e0       	ldi	r20, 0x00	; 0
    daaa:	50 e0       	ldi	r21, 0x00	; 0
    daac:	60 e0       	ldi	r22, 0x00	; 0
    daae:	70 e0       	ldi	r23, 0x00	; 0
    dab0:	80 e0       	ldi	r24, 0x00	; 0
    dab2:	90 e0       	ldi	r25, 0x00	; 0
    dab4:	a0 e0       	ldi	r26, 0x00	; 0
    dab6:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    daba:	d1 f0       	breq	.+52     	; 0xdaf0 <_Z16Display_Update_1v+0x9c>
    dabc:	eb 7f       	andi	r30, 0xFB	; 251
    dabe:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dac2:	41 e0       	ldi	r20, 0x01	; 1
    dac4:	83 ec       	ldi	r24, 0xC3	; 195
    dac6:	9c e0       	ldi	r25, 0x0C	; 12
    dac8:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dacc:	6c ec       	ldi	r22, 0xCC	; 204
    dace:	72 e2       	ldi	r23, 0x22	; 34
    dad0:	83 ec       	ldi	r24, 0xC3	; 195
    dad2:	9c e0       	ldi	r25, 0x0C	; 12
    dad4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dad8:	42 e0       	ldi	r20, 0x02	; 2
    dada:	60 e0       	ldi	r22, 0x00	; 0
    dadc:	83 ec       	ldi	r24, 0xC3	; 195
    dade:	9c e0       	ldi	r25, 0x0C	; 12
    dae0:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dae4:	67 eb       	ldi	r22, 0xB7	; 183
    dae6:	72 e2       	ldi	r23, 0x22	; 34
    dae8:	83 ec       	ldi	r24, 0xC3	; 195
    daea:	9c e0       	ldi	r25, 0x0C	; 12
    daec:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    daf0:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    daf4:	3e 2f       	mov	r19, r30
    daf6:	38 70       	andi	r19, 0x08	; 8
    daf8:	20 e0       	ldi	r18, 0x00	; 0
    dafa:	40 e0       	ldi	r20, 0x00	; 0
    dafc:	50 e0       	ldi	r21, 0x00	; 0
    dafe:	60 e0       	ldi	r22, 0x00	; 0
    db00:	70 e0       	ldi	r23, 0x00	; 0
    db02:	80 e0       	ldi	r24, 0x00	; 0
    db04:	90 e0       	ldi	r25, 0x00	; 0
    db06:	a0 e0       	ldi	r26, 0x00	; 0
    db08:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    db0c:	d1 f0       	breq	.+52     	; 0xdb42 <_Z16Display_Update_1v+0xee>
    db0e:	e7 7f       	andi	r30, 0xF7	; 247
    db10:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    db14:	41 e0       	ldi	r20, 0x01	; 1
    db16:	83 ec       	ldi	r24, 0xC3	; 195
    db18:	9c e0       	ldi	r25, 0x0C	; 12
    db1a:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db1e:	62 ea       	ldi	r22, 0xA2	; 162
    db20:	72 e2       	ldi	r23, 0x22	; 34
    db22:	83 ec       	ldi	r24, 0xC3	; 195
    db24:	9c e0       	ldi	r25, 0x0C	; 12
    db26:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    db2a:	42 e0       	ldi	r20, 0x02	; 2
    db2c:	60 e0       	ldi	r22, 0x00	; 0
    db2e:	83 ec       	ldi	r24, 0xC3	; 195
    db30:	9c e0       	ldi	r25, 0x0C	; 12
    db32:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db36:	6d e8       	ldi	r22, 0x8D	; 141
    db38:	72 e2       	ldi	r23, 0x22	; 34
    db3a:	83 ec       	ldi	r24, 0xC3	; 195
    db3c:	9c e0       	ldi	r25, 0x0C	; 12
    db3e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    db42:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    db46:	e0 71       	andi	r30, 0x10	; 16
    db48:	20 e0       	ldi	r18, 0x00	; 0
    db4a:	3e 2f       	mov	r19, r30
    db4c:	40 e0       	ldi	r20, 0x00	; 0
    db4e:	50 e0       	ldi	r21, 0x00	; 0
    db50:	60 e0       	ldi	r22, 0x00	; 0
    db52:	70 e0       	ldi	r23, 0x00	; 0
    db54:	80 e0       	ldi	r24, 0x00	; 0
    db56:	90 e0       	ldi	r25, 0x00	; 0
    db58:	a0 e0       	ldi	r26, 0x00	; 0
    db5a:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    db5e:	39 f1       	breq	.+78     	; 0xdbae <_Z16Display_Update_1v+0x15a>
    db60:	10 92 ae 13 	sts	0x13AE, r1	; 0x8013ae <_sRuble_Parameters>
    db64:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    db68:	10 92 b0 13 	sts	0x13B0, r1	; 0x8013b0 <_sRuble_Parameters+0x2>
    db6c:	10 92 b1 13 	sts	0x13B1, r1	; 0x8013b1 <_sRuble_Parameters+0x3>
    db70:	10 92 b2 13 	sts	0x13B2, r1	; 0x8013b2 <_sRuble_Parameters+0x4>
    db74:	10 92 b3 13 	sts	0x13B3, r1	; 0x8013b3 <_sRuble_Parameters+0x5>
    db78:	10 92 b4 13 	sts	0x13B4, r1	; 0x8013b4 <_sRuble_Parameters+0x6>
    db7c:	10 92 b5 13 	sts	0x13B5, r1	; 0x8013b5 <_sRuble_Parameters+0x7>
    db80:	41 e0       	ldi	r20, 0x01	; 1
    db82:	83 ec       	ldi	r24, 0xC3	; 195
    db84:	9c e0       	ldi	r25, 0x0C	; 12
    db86:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    db8a:	68 e7       	ldi	r22, 0x78	; 120
    db8c:	72 e2       	ldi	r23, 0x22	; 34
    db8e:	83 ec       	ldi	r24, 0xC3	; 195
    db90:	9c e0       	ldi	r25, 0x0C	; 12
    db92:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    db96:	42 e0       	ldi	r20, 0x02	; 2
    db98:	60 e0       	ldi	r22, 0x00	; 0
    db9a:	83 ec       	ldi	r24, 0xC3	; 195
    db9c:	9c e0       	ldi	r25, 0x0C	; 12
    db9e:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dba2:	63 e6       	ldi	r22, 0x63	; 99
    dba4:	72 e2       	ldi	r23, 0x22	; 34
    dba6:	83 ec       	ldi	r24, 0xC3	; 195
    dba8:	9c e0       	ldi	r25, 0x0C	; 12
    dbaa:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dbae:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dbb2:	3e 2f       	mov	r19, r30
    dbb4:	30 72       	andi	r19, 0x20	; 32
    dbb6:	20 e0       	ldi	r18, 0x00	; 0
    dbb8:	40 e0       	ldi	r20, 0x00	; 0
    dbba:	50 e0       	ldi	r21, 0x00	; 0
    dbbc:	60 e0       	ldi	r22, 0x00	; 0
    dbbe:	70 e0       	ldi	r23, 0x00	; 0
    dbc0:	80 e0       	ldi	r24, 0x00	; 0
    dbc2:	90 e0       	ldi	r25, 0x00	; 0
    dbc4:	a0 e0       	ldi	r26, 0x00	; 0
    dbc6:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    dbca:	d1 f0       	breq	.+52     	; 0xdc00 <_Z16Display_Update_1v+0x1ac>
    dbcc:	ef 7d       	andi	r30, 0xDF	; 223
    dbce:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dbd2:	41 e0       	ldi	r20, 0x01	; 1
    dbd4:	83 ec       	ldi	r24, 0xC3	; 195
    dbd6:	9c e0       	ldi	r25, 0x0C	; 12
    dbd8:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbdc:	6e e4       	ldi	r22, 0x4E	; 78
    dbde:	72 e2       	ldi	r23, 0x22	; 34
    dbe0:	83 ec       	ldi	r24, 0xC3	; 195
    dbe2:	9c e0       	ldi	r25, 0x0C	; 12
    dbe4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dbe8:	42 e0       	ldi	r20, 0x02	; 2
    dbea:	60 e0       	ldi	r22, 0x00	; 0
    dbec:	83 ec       	ldi	r24, 0xC3	; 195
    dbee:	9c e0       	ldi	r25, 0x0C	; 12
    dbf0:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dbf4:	69 e3       	ldi	r22, 0x39	; 57
    dbf6:	72 e2       	ldi	r23, 0x22	; 34
    dbf8:	83 ec       	ldi	r24, 0xC3	; 195
    dbfa:	9c e0       	ldi	r25, 0x0C	; 12
    dbfc:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dc00:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dc04:	3e 2f       	mov	r19, r30
    dc06:	30 74       	andi	r19, 0x40	; 64
    dc08:	20 e0       	ldi	r18, 0x00	; 0
    dc0a:	40 e0       	ldi	r20, 0x00	; 0
    dc0c:	50 e0       	ldi	r21, 0x00	; 0
    dc0e:	60 e0       	ldi	r22, 0x00	; 0
    dc10:	70 e0       	ldi	r23, 0x00	; 0
    dc12:	80 e0       	ldi	r24, 0x00	; 0
    dc14:	90 e0       	ldi	r25, 0x00	; 0
    dc16:	a0 e0       	ldi	r26, 0x00	; 0
    dc18:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    dc1c:	d1 f0       	breq	.+52     	; 0xdc52 <_Z16Display_Update_1v+0x1fe>
    dc1e:	ef 7b       	andi	r30, 0xBF	; 191
    dc20:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dc24:	41 e0       	ldi	r20, 0x01	; 1
    dc26:	83 ec       	ldi	r24, 0xC3	; 195
    dc28:	9c e0       	ldi	r25, 0x0C	; 12
    dc2a:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc2e:	64 e2       	ldi	r22, 0x24	; 36
    dc30:	72 e2       	ldi	r23, 0x22	; 34
    dc32:	83 ec       	ldi	r24, 0xC3	; 195
    dc34:	9c e0       	ldi	r25, 0x0C	; 12
    dc36:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dc3a:	42 e0       	ldi	r20, 0x02	; 2
    dc3c:	60 e0       	ldi	r22, 0x00	; 0
    dc3e:	83 ec       	ldi	r24, 0xC3	; 195
    dc40:	9c e0       	ldi	r25, 0x0C	; 12
    dc42:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc46:	6f e0       	ldi	r22, 0x0F	; 15
    dc48:	72 e2       	ldi	r23, 0x22	; 34
    dc4a:	83 ec       	ldi	r24, 0xC3	; 195
    dc4c:	9c e0       	ldi	r25, 0x0C	; 12
    dc4e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dc52:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    dc56:	3e 2f       	mov	r19, r30
    dc58:	30 78       	andi	r19, 0x80	; 128
    dc5a:	20 e0       	ldi	r18, 0x00	; 0
    dc5c:	40 e0       	ldi	r20, 0x00	; 0
    dc5e:	50 e0       	ldi	r21, 0x00	; 0
    dc60:	60 e0       	ldi	r22, 0x00	; 0
    dc62:	70 e0       	ldi	r23, 0x00	; 0
    dc64:	80 e0       	ldi	r24, 0x00	; 0
    dc66:	90 e0       	ldi	r25, 0x00	; 0
    dc68:	a0 e0       	ldi	r26, 0x00	; 0
    dc6a:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    dc6e:	d1 f0       	breq	.+52     	; 0xdca4 <_Z16Display_Update_1v+0x250>
    dc70:	ef 77       	andi	r30, 0x7F	; 127
    dc72:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    dc76:	41 e0       	ldi	r20, 0x01	; 1
    dc78:	83 ec       	ldi	r24, 0xC3	; 195
    dc7a:	9c e0       	ldi	r25, 0x0C	; 12
    dc7c:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc80:	6a ef       	ldi	r22, 0xFA	; 250
    dc82:	71 e2       	ldi	r23, 0x21	; 33
    dc84:	83 ec       	ldi	r24, 0xC3	; 195
    dc86:	9c e0       	ldi	r25, 0x0C	; 12
    dc88:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dc8c:	42 e0       	ldi	r20, 0x02	; 2
    dc8e:	60 e0       	ldi	r22, 0x00	; 0
    dc90:	83 ec       	ldi	r24, 0xC3	; 195
    dc92:	9c e0       	ldi	r25, 0x0C	; 12
    dc94:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc98:	65 ee       	ldi	r22, 0xE5	; 229
    dc9a:	71 e2       	ldi	r23, 0x21	; 33
    dc9c:	83 ec       	ldi	r24, 0xC3	; 195
    dc9e:	9c e0       	ldi	r25, 0x0C	; 12
    dca0:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dca4:	e0 91 b0 13 	lds	r30, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    dca8:	4e 2f       	mov	r20, r30
    dcaa:	41 70       	andi	r20, 0x01	; 1
    dcac:	20 e0       	ldi	r18, 0x00	; 0
    dcae:	30 e0       	ldi	r19, 0x00	; 0
    dcb0:	50 e0       	ldi	r21, 0x00	; 0
    dcb2:	60 e0       	ldi	r22, 0x00	; 0
    dcb4:	70 e0       	ldi	r23, 0x00	; 0
    dcb6:	80 e0       	ldi	r24, 0x00	; 0
    dcb8:	90 e0       	ldi	r25, 0x00	; 0
    dcba:	a0 e0       	ldi	r26, 0x00	; 0
    dcbc:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    dcc0:	d1 f0       	breq	.+52     	; 0xdcf6 <_Z16Display_Update_1v+0x2a2>
    dcc2:	ee 7f       	andi	r30, 0xFE	; 254
    dcc4:	e0 93 b0 13 	sts	0x13B0, r30	; 0x8013b0 <_sRuble_Parameters+0x2>
    dcc8:	41 e0       	ldi	r20, 0x01	; 1
    dcca:	83 ec       	ldi	r24, 0xC3	; 195
    dccc:	9c e0       	ldi	r25, 0x0C	; 12
    dcce:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dcd2:	60 ed       	ldi	r22, 0xD0	; 208
    dcd4:	71 e2       	ldi	r23, 0x21	; 33
    dcd6:	83 ec       	ldi	r24, 0xC3	; 195
    dcd8:	9c e0       	ldi	r25, 0x0C	; 12
    dcda:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dcde:	42 e0       	ldi	r20, 0x02	; 2
    dce0:	60 e0       	ldi	r22, 0x00	; 0
    dce2:	83 ec       	ldi	r24, 0xC3	; 195
    dce4:	9c e0       	ldi	r25, 0x0C	; 12
    dce6:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dcea:	6b eb       	ldi	r22, 0xBB	; 187
    dcec:	71 e2       	ldi	r23, 0x21	; 33
    dcee:	83 ec       	ldi	r24, 0xC3	; 195
    dcf0:	9c e0       	ldi	r25, 0x0C	; 12
    dcf2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dcf6:	e0 91 b0 13 	lds	r30, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    dcfa:	4e 2f       	mov	r20, r30
    dcfc:	44 70       	andi	r20, 0x04	; 4
    dcfe:	20 e0       	ldi	r18, 0x00	; 0
    dd00:	30 e0       	ldi	r19, 0x00	; 0
    dd02:	50 e0       	ldi	r21, 0x00	; 0
    dd04:	60 e0       	ldi	r22, 0x00	; 0
    dd06:	70 e0       	ldi	r23, 0x00	; 0
    dd08:	80 e0       	ldi	r24, 0x00	; 0
    dd0a:	90 e0       	ldi	r25, 0x00	; 0
    dd0c:	a0 e0       	ldi	r26, 0x00	; 0
    dd0e:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    dd12:	d9 f0       	breq	.+54     	; 0xdd4a <_Z16Display_Update_1v+0x2f6>
    dd14:	eb 7f       	andi	r30, 0xFB	; 251
    dd16:	e0 93 b0 13 	sts	0x13B0, r30	; 0x8013b0 <_sRuble_Parameters+0x2>
    dd1a:	41 e0       	ldi	r20, 0x01	; 1
    dd1c:	61 e0       	ldi	r22, 0x01	; 1
    dd1e:	83 ec       	ldi	r24, 0xC3	; 195
    dd20:	9c e0       	ldi	r25, 0x0C	; 12
    dd22:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd26:	69 ea       	ldi	r22, 0xA9	; 169
    dd28:	71 e2       	ldi	r23, 0x21	; 33
    dd2a:	83 ec       	ldi	r24, 0xC3	; 195
    dd2c:	9c e0       	ldi	r25, 0x0C	; 12
    dd2e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dd32:	42 e0       	ldi	r20, 0x02	; 2
    dd34:	60 e0       	ldi	r22, 0x00	; 0
    dd36:	83 ec       	ldi	r24, 0xC3	; 195
    dd38:	9c e0       	ldi	r25, 0x0C	; 12
    dd3a:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd3e:	64 e9       	ldi	r22, 0x94	; 148
    dd40:	71 e2       	ldi	r23, 0x21	; 33
    dd42:	83 ec       	ldi	r24, 0xC3	; 195
    dd44:	9c e0       	ldi	r25, 0x0C	; 12
    dd46:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dd4a:	10 92 6b 0c 	sts	0x0C6B, r1	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dd4e:	10 92 6c 0c 	sts	0x0C6C, r1	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    dd52:	10 92 6d 0c 	sts	0x0C6D, r1	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    dd56:	10 92 6e 0c 	sts	0x0C6E, r1	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    dd5a:	80 91 c2 0c 	lds	r24, 0x0CC2	; 0x800cc2 <Start_Display_In_Interrupt>
    dd5e:	88 23       	and	r24, r24
    dd60:	09 f4       	brne	.+2      	; 0xdd64 <_Z16Display_Update_1v+0x310>
    dd62:	96 c1       	rjmp	.+812    	; 0xe090 <_Z16Display_Update_1v+0x63c>
    dd64:	80 91 69 0c 	lds	r24, 0x0C69	; 0x800c69 <_sGSM_Query+0x5>
    dd68:	e0 91 d9 13 	lds	r30, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    dd6c:	81 30       	cpi	r24, 0x01	; 1
    dd6e:	09 f4       	brne	.+2      	; 0xdd72 <_Z16Display_Update_1v+0x31e>
    dd70:	9f c0       	rjmp	.+318    	; 0xdeb0 <_Z16Display_Update_1v+0x45c>
    dd72:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    dd76:	81 30       	cpi	r24, 0x01	; 1
    dd78:	09 f4       	brne	.+2      	; 0xdd7c <_Z16Display_Update_1v+0x328>
    dd7a:	9a c0       	rjmp	.+308    	; 0xdeb0 <_Z16Display_Update_1v+0x45c>
    dd7c:	f0 91 ae 13 	lds	r31, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    dd80:	2f 2f       	mov	r18, r31
    dd82:	21 70       	andi	r18, 0x01	; 1
    dd84:	30 e0       	ldi	r19, 0x00	; 0
    dd86:	40 e0       	ldi	r20, 0x00	; 0
    dd88:	50 e0       	ldi	r21, 0x00	; 0
    dd8a:	60 e0       	ldi	r22, 0x00	; 0
    dd8c:	70 e0       	ldi	r23, 0x00	; 0
    dd8e:	80 e0       	ldi	r24, 0x00	; 0
    dd90:	90 e0       	ldi	r25, 0x00	; 0
    dd92:	a0 e0       	ldi	r26, 0x00	; 0
    dd94:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    dd98:	b9 f0       	breq	.+46     	; 0xddc8 <_Z16Display_Update_1v+0x374>
    dd9a:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dd9e:	80 fd       	sbrc	r24, 0
    dda0:	0e c0       	rjmp	.+28     	; 0xddbe <_Z16Display_Update_1v+0x36a>
    dda2:	e2 fd       	sbrc	r30, 2
    dda4:	02 c0       	rjmp	.+4      	; 0xddaa <_Z16Display_Update_1v+0x356>
    dda6:	21 e0       	ldi	r18, 0x01	; 1
    dda8:	03 c0       	rjmp	.+6      	; 0xddb0 <_Z16Display_Update_1v+0x35c>
    ddaa:	29 e0       	ldi	r18, 0x09	; 9
    ddac:	40 e0       	ldi	r20, 0x00	; 0
    ddae:	60 e0       	ldi	r22, 0x00	; 0
    ddb0:	80 e0       	ldi	r24, 0x00	; 0
    ddb2:	89 dd       	rcall	.-1262   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    ddb4:	25 e0       	ldi	r18, 0x05	; 5
    ddb6:	40 e0       	ldi	r20, 0x00	; 0
    ddb8:	61 e0       	ldi	r22, 0x01	; 1
    ddba:	81 e0       	ldi	r24, 0x01	; 1
    ddbc:	84 dd       	rcall	.-1272   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    ddbe:	81 ef       	ldi	r24, 0xF1	; 241
    ddc0:	9f ef       	ldi	r25, 0xFF	; 255
    ddc2:	af ef       	ldi	r26, 0xFF	; 255
    ddc4:	b0 e0       	ldi	r27, 0x00	; 0
    ddc6:	6b c0       	rjmp	.+214    	; 0xde9e <_Z16Display_Update_1v+0x44a>
    ddc8:	2f 2f       	mov	r18, r31
    ddca:	22 70       	andi	r18, 0x02	; 2
    ddcc:	30 e0       	ldi	r19, 0x00	; 0
    ddce:	40 e0       	ldi	r20, 0x00	; 0
    ddd0:	50 e0       	ldi	r21, 0x00	; 0
    ddd2:	60 e0       	ldi	r22, 0x00	; 0
    ddd4:	70 e0       	ldi	r23, 0x00	; 0
    ddd6:	80 e0       	ldi	r24, 0x00	; 0
    ddd8:	90 e0       	ldi	r25, 0x00	; 0
    ddda:	a0 e0       	ldi	r26, 0x00	; 0
    dddc:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    dde0:	b9 f0       	breq	.+46     	; 0xde10 <_Z16Display_Update_1v+0x3bc>
    dde2:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dde6:	81 fd       	sbrc	r24, 1
    dde8:	0e c0       	rjmp	.+28     	; 0xde06 <_Z16Display_Update_1v+0x3b2>
    ddea:	e2 fd       	sbrc	r30, 2
    ddec:	02 c0       	rjmp	.+4      	; 0xddf2 <_Z16Display_Update_1v+0x39e>
    ddee:	21 e0       	ldi	r18, 0x01	; 1
    ddf0:	03 c0       	rjmp	.+6      	; 0xddf8 <_Z16Display_Update_1v+0x3a4>
    ddf2:	29 e0       	ldi	r18, 0x09	; 9
    ddf4:	40 e0       	ldi	r20, 0x00	; 0
    ddf6:	60 e0       	ldi	r22, 0x00	; 0
    ddf8:	80 e0       	ldi	r24, 0x00	; 0
    ddfa:	65 dd       	rcall	.-1334   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    ddfc:	22 e0       	ldi	r18, 0x02	; 2
    ddfe:	40 e0       	ldi	r20, 0x00	; 0
    de00:	61 e0       	ldi	r22, 0x01	; 1
    de02:	89 e0       	ldi	r24, 0x09	; 9
    de04:	60 dd       	rcall	.-1344   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    de06:	82 ef       	ldi	r24, 0xF2	; 242
    de08:	9f ef       	ldi	r25, 0xFF	; 255
    de0a:	af ef       	ldi	r26, 0xFF	; 255
    de0c:	b0 e0       	ldi	r27, 0x00	; 0
    de0e:	47 c0       	rjmp	.+142    	; 0xde9e <_Z16Display_Update_1v+0x44a>
    de10:	2f 2f       	mov	r18, r31
    de12:	24 70       	andi	r18, 0x04	; 4
    de14:	30 e0       	ldi	r19, 0x00	; 0
    de16:	40 e0       	ldi	r20, 0x00	; 0
    de18:	50 e0       	ldi	r21, 0x00	; 0
    de1a:	60 e0       	ldi	r22, 0x00	; 0
    de1c:	70 e0       	ldi	r23, 0x00	; 0
    de1e:	80 e0       	ldi	r24, 0x00	; 0
    de20:	90 e0       	ldi	r25, 0x00	; 0
    de22:	a0 e0       	ldi	r26, 0x00	; 0
    de24:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    de28:	b9 f0       	breq	.+46     	; 0xde58 <_Z16Display_Update_1v+0x404>
    de2a:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    de2e:	82 fd       	sbrc	r24, 2
    de30:	0e c0       	rjmp	.+28     	; 0xde4e <_Z16Display_Update_1v+0x3fa>
    de32:	e2 fd       	sbrc	r30, 2
    de34:	02 c0       	rjmp	.+4      	; 0xde3a <_Z16Display_Update_1v+0x3e6>
    de36:	21 e0       	ldi	r18, 0x01	; 1
    de38:	03 c0       	rjmp	.+6      	; 0xde40 <_Z16Display_Update_1v+0x3ec>
    de3a:	29 e0       	ldi	r18, 0x09	; 9
    de3c:	40 e0       	ldi	r20, 0x00	; 0
    de3e:	60 e0       	ldi	r22, 0x00	; 0
    de40:	80 e0       	ldi	r24, 0x00	; 0
    de42:	41 dd       	rcall	.-1406   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    de44:	23 e0       	ldi	r18, 0x03	; 3
    de46:	40 e0       	ldi	r20, 0x00	; 0
    de48:	61 e0       	ldi	r22, 0x01	; 1
    de4a:	8a e0       	ldi	r24, 0x0A	; 10
    de4c:	3c dd       	rcall	.-1416   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    de4e:	84 ef       	ldi	r24, 0xF4	; 244
    de50:	9f ef       	ldi	r25, 0xFF	; 255
    de52:	af ef       	ldi	r26, 0xFF	; 255
    de54:	b0 e0       	ldi	r27, 0x00	; 0
    de56:	23 c0       	rjmp	.+70     	; 0xde9e <_Z16Display_Update_1v+0x44a>
    de58:	2f 2f       	mov	r18, r31
    de5a:	28 70       	andi	r18, 0x08	; 8
    de5c:	30 e0       	ldi	r19, 0x00	; 0
    de5e:	40 e0       	ldi	r20, 0x00	; 0
    de60:	50 e0       	ldi	r21, 0x00	; 0
    de62:	60 e0       	ldi	r22, 0x00	; 0
    de64:	70 e0       	ldi	r23, 0x00	; 0
    de66:	80 e0       	ldi	r24, 0x00	; 0
    de68:	90 e0       	ldi	r25, 0x00	; 0
    de6a:	a0 e0       	ldi	r26, 0x00	; 0
    de6c:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    de70:	a9 f1       	breq	.+106    	; 0xdedc <_Z16Display_Update_1v+0x488>
    de72:	80 91 6b 0c 	lds	r24, 0x0C6B	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    de76:	83 fd       	sbrc	r24, 3
    de78:	0e c0       	rjmp	.+28     	; 0xde96 <_Z16Display_Update_1v+0x442>
    de7a:	e2 fd       	sbrc	r30, 2
    de7c:	02 c0       	rjmp	.+4      	; 0xde82 <_Z16Display_Update_1v+0x42e>
    de7e:	21 e0       	ldi	r18, 0x01	; 1
    de80:	03 c0       	rjmp	.+6      	; 0xde88 <_Z16Display_Update_1v+0x434>
    de82:	29 e0       	ldi	r18, 0x09	; 9
    de84:	40 e0       	ldi	r20, 0x00	; 0
    de86:	60 e0       	ldi	r22, 0x00	; 0
    de88:	80 e0       	ldi	r24, 0x00	; 0
    de8a:	1d dd       	rcall	.-1478   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    de8c:	24 e0       	ldi	r18, 0x04	; 4
    de8e:	40 e0       	ldi	r20, 0x00	; 0
    de90:	61 e0       	ldi	r22, 0x01	; 1
    de92:	82 e0       	ldi	r24, 0x02	; 2
    de94:	18 dd       	rcall	.-1488   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    de96:	88 ef       	ldi	r24, 0xF8	; 248
    de98:	9f ef       	ldi	r25, 0xFF	; 255
    de9a:	af ef       	ldi	r26, 0xFF	; 255
    de9c:	b0 e0       	ldi	r27, 0x00	; 0
    de9e:	80 93 6b 0c 	sts	0x0C6B, r24	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    dea2:	90 93 6c 0c 	sts	0x0C6C, r25	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    dea6:	a0 93 6d 0c 	sts	0x0C6D, r26	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    deaa:	b0 93 6e 0c 	sts	0x0C6E, r27	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    deae:	16 c0       	rjmp	.+44     	; 0xdedc <_Z16Display_Update_1v+0x488>
    deb0:	e2 fd       	sbrc	r30, 2
    deb2:	02 c0       	rjmp	.+4      	; 0xdeb8 <_Z16Display_Update_1v+0x464>
    deb4:	21 e0       	ldi	r18, 0x01	; 1
    deb6:	01 c0       	rjmp	.+2      	; 0xdeba <_Z16Display_Update_1v+0x466>
    deb8:	29 e0       	ldi	r18, 0x09	; 9
    deba:	40 e0       	ldi	r20, 0x00	; 0
    debc:	60 e0       	ldi	r22, 0x00	; 0
    debe:	80 e0       	ldi	r24, 0x00	; 0
    dec0:	02 dd       	rcall	.-1532   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    dec2:	27 e0       	ldi	r18, 0x07	; 7
    dec4:	40 e0       	ldi	r20, 0x00	; 0
    dec6:	61 e0       	ldi	r22, 0x01	; 1
    dec8:	82 e0       	ldi	r24, 0x02	; 2
    deca:	fd dc       	rcall	.-1542   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    decc:	10 92 6b 0c 	sts	0x0C6B, r1	; 0x800c6b <_ZZ16Display_Update_1vE12temp_display>
    ded0:	10 92 6c 0c 	sts	0x0C6C, r1	; 0x800c6c <_ZZ16Display_Update_1vE12temp_display+0x1>
    ded4:	10 92 6d 0c 	sts	0x0C6D, r1	; 0x800c6d <_ZZ16Display_Update_1vE12temp_display+0x2>
    ded8:	10 92 6e 0c 	sts	0x0C6E, r1	; 0x800c6e <_ZZ16Display_Update_1vE12temp_display+0x3>
    dedc:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    dee0:	82 fd       	sbrc	r24, 2
    dee2:	02 c0       	rjmp	.+4      	; 0xdee8 <_Z16Display_Update_1v+0x494>
    dee4:	21 e0       	ldi	r18, 0x01	; 1
    dee6:	01 c0       	rjmp	.+2      	; 0xdeea <_Z16Display_Update_1v+0x496>
    dee8:	29 e0       	ldi	r18, 0x09	; 9
    deea:	40 e0       	ldi	r20, 0x00	; 0
    deec:	60 e0       	ldi	r22, 0x00	; 0
    deee:	80 e0       	ldi	r24, 0x00	; 0
    def0:	ea dc       	rcall	.-1580   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    def2:	e0 91 af 13 	lds	r30, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    def6:	3e 2f       	mov	r19, r30
    def8:	31 70       	andi	r19, 0x01	; 1
    defa:	20 e0       	ldi	r18, 0x00	; 0
    defc:	40 e0       	ldi	r20, 0x00	; 0
    defe:	50 e0       	ldi	r21, 0x00	; 0
    df00:	60 e0       	ldi	r22, 0x00	; 0
    df02:	70 e0       	ldi	r23, 0x00	; 0
    df04:	80 e0       	ldi	r24, 0x00	; 0
    df06:	90 e0       	ldi	r25, 0x00	; 0
    df08:	a0 e0       	ldi	r26, 0x00	; 0
    df0a:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    df0e:	29 f0       	breq	.+10     	; 0xdf1a <_Z16Display_Update_1v+0x4c6>
    df10:	ee 7f       	andi	r30, 0xFE	; 254
    df12:	e0 93 af 13 	sts	0x13AF, r30	; 0x8013af <_sRuble_Parameters+0x1>
    df16:	2a e0       	ldi	r18, 0x0A	; 10
    df18:	d6 dc       	rcall	.-1620   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    df1a:	ee e4       	ldi	r30, 0x4E	; 78
    df1c:	fd e0       	ldi	r31, 0x0D	; 13
    df1e:	22 ea       	ldi	r18, 0xA2	; 162
    df20:	3d e0       	ldi	r19, 0x0D	; 13
    df22:	80 e0       	ldi	r24, 0x00	; 0
    df24:	90 81       	ld	r25, Z
    df26:	91 11       	cpse	r25, r1
    df28:	8f 5f       	subi	r24, 0xFF	; 255
    df2a:	36 96       	adiw	r30, 0x06	; 6
    df2c:	2e 17       	cp	r18, r30
    df2e:	3f 07       	cpc	r19, r31
    df30:	c9 f7       	brne	.-14     	; 0xdf24 <_Z16Display_Update_1v+0x4d0>
    df32:	80 93 6a 0c 	sts	0x0C6A, r24	; 0x800c6a <_ZZ16Display_Update_1vE10plot_added>
    df36:	80 91 6d 14 	lds	r24, 0x146D	; 0x80146d <_sRuble_Parameters+0xbf>
    df3a:	88 23       	and	r24, r24
    df3c:	09 f4       	brne	.+2      	; 0xdf40 <_Z16Display_Update_1v+0x4ec>
    df3e:	a8 c0       	rjmp	.+336    	; 0xe090 <_Z16Display_Update_1v+0x63c>
    df40:	10 92 6d 14 	sts	0x146D, r1	; 0x80146d <_sRuble_Parameters+0xbf>
    df44:	80 91 6c 14 	lds	r24, 0x146C	; 0x80146c <_sRuble_Parameters+0xbe>
    df48:	81 11       	cpse	r24, r1
    df4a:	05 c0       	rjmp	.+10     	; 0xdf56 <_Z16Display_Update_1v+0x502>
    df4c:	28 e0       	ldi	r18, 0x08	; 8
    df4e:	40 e0       	ldi	r20, 0x00	; 0
    df50:	62 e0       	ldi	r22, 0x02	; 2
    df52:	84 e0       	ldi	r24, 0x04	; 4
    df54:	b8 dc       	rcall	.-1680   	; 0xd8c6 <_Z16Lcd_Special_Charhhhh>
    df56:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    df5a:	83 30       	cpi	r24, 0x03	; 3
    df5c:	b1 f0       	breq	.+44     	; 0xdf8a <_Z16Display_Update_1v+0x536>
    df5e:	85 30       	cpi	r24, 0x05	; 5
    df60:	59 f0       	breq	.+22     	; 0xdf78 <_Z16Display_Update_1v+0x524>
    df62:	82 30       	cpi	r24, 0x02	; 2
    df64:	f1 f4       	brne	.+60     	; 0xdfa2 <_Z16Display_Update_1v+0x54e>
    df66:	41 e0       	ldi	r20, 0x01	; 1
    df68:	60 e0       	ldi	r22, 0x00	; 0
    df6a:	83 ec       	ldi	r24, 0xC3	; 195
    df6c:	9c e0       	ldi	r25, 0x0C	; 12
    df6e:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df72:	65 e5       	ldi	r22, 0x55	; 85
    df74:	71 e2       	ldi	r23, 0x21	; 33
    df76:	11 c0       	rjmp	.+34     	; 0xdf9a <_Z16Display_Update_1v+0x546>
    df78:	41 e0       	ldi	r20, 0x01	; 1
    df7a:	60 e0       	ldi	r22, 0x00	; 0
    df7c:	83 ec       	ldi	r24, 0xC3	; 195
    df7e:	9c e0       	ldi	r25, 0x0C	; 12
    df80:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df84:	6f e7       	ldi	r22, 0x7F	; 127
    df86:	71 e2       	ldi	r23, 0x21	; 33
    df88:	08 c0       	rjmp	.+16     	; 0xdf9a <_Z16Display_Update_1v+0x546>
    df8a:	41 e0       	ldi	r20, 0x01	; 1
    df8c:	60 e0       	ldi	r22, 0x00	; 0
    df8e:	83 ec       	ldi	r24, 0xC3	; 195
    df90:	9c e0       	ldi	r25, 0x0C	; 12
    df92:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    df96:	6a e6       	ldi	r22, 0x6A	; 106
    df98:	71 e2       	ldi	r23, 0x21	; 33
    df9a:	83 ec       	ldi	r24, 0xC3	; 195
    df9c:	9c e0       	ldi	r25, 0x0C	; 12
    df9e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dfa2:	80 91 6a 0c 	lds	r24, 0x0C6A	; 0x800c6a <_ZZ16Display_Update_1vE10plot_added>
    dfa6:	81 11       	cpse	r24, r1
    dfa8:	15 c0       	rjmp	.+42     	; 0xdfd4 <_Z16Display_Update_1v+0x580>
    dfaa:	42 e0       	ldi	r20, 0x02	; 2
    dfac:	60 e0       	ldi	r22, 0x00	; 0
    dfae:	83 ec       	ldi	r24, 0xC3	; 195
    dfb0:	9c e0       	ldi	r25, 0x0C	; 12
    dfb2:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dfb6:	60 e4       	ldi	r22, 0x40	; 64
    dfb8:	71 e2       	ldi	r23, 0x21	; 33
    dfba:	83 ec       	ldi	r24, 0xC3	; 195
    dfbc:	9c e0       	ldi	r25, 0x0C	; 12
    dfbe:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    dfc2:	43 e0       	ldi	r20, 0x03	; 3
    dfc4:	60 e0       	ldi	r22, 0x00	; 0
    dfc6:	83 ec       	ldi	r24, 0xC3	; 195
    dfc8:	9c e0       	ldi	r25, 0x0C	; 12
    dfca:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dfce:	6b e2       	ldi	r22, 0x2B	; 43
    dfd0:	71 e2       	ldi	r23, 0x21	; 33
    dfd2:	3e c0       	rjmp	.+124    	; 0xe050 <_Z16Display_Update_1v+0x5fc>
    dfd4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    dfd8:	88 23       	and	r24, r24
    dfda:	31 f1       	breq	.+76     	; 0xe028 <_Z16Display_Update_1v+0x5d4>
    dfdc:	1f 92       	push	r1
    dfde:	8f 93       	push	r24
    dfe0:	86 ee       	ldi	r24, 0xE6	; 230
    dfe2:	94 e0       	ldi	r25, 0x04	; 4
    dfe4:	9f 93       	push	r25
    dfe6:	8f 93       	push	r24
    dfe8:	8a ed       	ldi	r24, 0xDA	; 218
    dfea:	93 e1       	ldi	r25, 0x13	; 19
    dfec:	9f 93       	push	r25
    dfee:	8f 93       	push	r24
    dff0:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
    dff4:	20 e0       	ldi	r18, 0x00	; 0
    dff6:	42 e0       	ldi	r20, 0x02	; 2
    dff8:	64 e1       	ldi	r22, 0x14	; 20
    dffa:	8a ed       	ldi	r24, 0xDA	; 218
    dffc:	93 e1       	ldi	r25, 0x13	; 19
    dffe:	0e 94 d7 65 	call	0xcbae	; 0xcbae <_Z14Lcd_Print_BuffPchhh>
    e002:	43 e0       	ldi	r20, 0x03	; 3
    e004:	60 e0       	ldi	r22, 0x00	; 0
    e006:	83 ec       	ldi	r24, 0xC3	; 195
    e008:	9c e0       	ldi	r25, 0x0C	; 12
    e00a:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e00e:	66 e1       	ldi	r22, 0x16	; 22
    e010:	71 e2       	ldi	r23, 0x21	; 33
    e012:	83 ec       	ldi	r24, 0xC3	; 195
    e014:	9c e0       	ldi	r25, 0x0C	; 12
    e016:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e01a:	0f 90       	pop	r0
    e01c:	0f 90       	pop	r0
    e01e:	0f 90       	pop	r0
    e020:	0f 90       	pop	r0
    e022:	0f 90       	pop	r0
    e024:	0f 90       	pop	r0
    e026:	18 c0       	rjmp	.+48     	; 0xe058 <_Z16Display_Update_1v+0x604>
    e028:	42 e0       	ldi	r20, 0x02	; 2
    e02a:	60 e0       	ldi	r22, 0x00	; 0
    e02c:	83 ec       	ldi	r24, 0xC3	; 195
    e02e:	9c e0       	ldi	r25, 0x0C	; 12
    e030:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e034:	61 e0       	ldi	r22, 0x01	; 1
    e036:	71 e2       	ldi	r23, 0x21	; 33
    e038:	83 ec       	ldi	r24, 0xC3	; 195
    e03a:	9c e0       	ldi	r25, 0x0C	; 12
    e03c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e040:	43 e0       	ldi	r20, 0x03	; 3
    e042:	60 e0       	ldi	r22, 0x00	; 0
    e044:	83 ec       	ldi	r24, 0xC3	; 195
    e046:	9c e0       	ldi	r25, 0x0C	; 12
    e048:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e04c:	6c ee       	ldi	r22, 0xEC	; 236
    e04e:	70 e2       	ldi	r23, 0x20	; 32
    e050:	83 ec       	ldi	r24, 0xC3	; 195
    e052:	9c e0       	ldi	r25, 0x0C	; 12
    e054:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e058:	80 91 a1 14 	lds	r24, 0x14A1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    e05c:	40 e0       	ldi	r20, 0x00	; 0
    e05e:	63 e0       	ldi	r22, 0x03	; 3
    e060:	81 30       	cpi	r24, 0x01	; 1
    e062:	39 f4       	brne	.+14     	; 0xe072 <_Z16Display_Update_1v+0x61e>
    e064:	83 ec       	ldi	r24, 0xC3	; 195
    e066:	9c e0       	ldi	r25, 0x0C	; 12
    e068:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e06c:	6f ed       	ldi	r22, 0xDF	; 223
    e06e:	70 e2       	ldi	r23, 0x20	; 32
    e070:	06 c0       	rjmp	.+12     	; 0xe07e <_Z16Display_Update_1v+0x62a>
    e072:	83 ec       	ldi	r24, 0xC3	; 195
    e074:	9c e0       	ldi	r25, 0x0C	; 12
    e076:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e07a:	62 ed       	ldi	r22, 0xD2	; 210
    e07c:	70 e2       	ldi	r23, 0x20	; 32
    e07e:	83 ec       	ldi	r24, 0xC3	; 195
    e080:	9c e0       	ldi	r25, 0x0C	; 12
    e082:	df 91       	pop	r29
    e084:	cf 91       	pop	r28
    e086:	1f 91       	pop	r17
    e088:	0f 91       	pop	r16
    e08a:	ff 90       	pop	r15
    e08c:	0c 94 1b d5 	jmp	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e090:	df 91       	pop	r29
    e092:	cf 91       	pop	r28
    e094:	1f 91       	pop	r17
    e096:	0f 91       	pop	r16
    e098:	ff 90       	pop	r15
    e09a:	08 95       	ret

0000e09c <_Z19Initialise_Hardwarev>:
    e09c:	0f 93       	push	r16
    e09e:	1f 93       	push	r17
    e0a0:	cf 93       	push	r28
    e0a2:	df 93       	push	r29
    e0a4:	00 d0       	rcall	.+0      	; 0xe0a6 <_Z19Initialise_Hardwarev+0xa>
    e0a6:	cd b7       	in	r28, 0x3d	; 61
    e0a8:	de b7       	in	r29, 0x3e	; 62
    e0aa:	18 e1       	ldi	r17, 0x18	; 24
    e0ac:	89 e2       	ldi	r24, 0x29	; 41
    e0ae:	0f b6       	in	r0, 0x3f	; 63
    e0b0:	f8 94       	cli
    e0b2:	a8 95       	wdr
    e0b4:	10 93 60 00 	sts	0x0060, r17	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    e0b8:	0f be       	out	0x3f, r0	; 63
    e0ba:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    e0be:	10 92 e8 0c 	sts	0x0CE8, r1	; 0x800ce8 <_gStart_Wdt>
    e0c2:	0e 94 ac 63 	call	0xc758	; 0xc758 <_Z20Timer1_Interrupt_Intv>
    e0c6:	0e 94 64 65 	call	0xcac8	; 0xcac8 <_Z20Timer0_Interrupt_Intv>
    e0ca:	0e 94 d2 65 	call	0xcba4	; 0xcba4 <_Z8Lcd_Initv>
    e0ce:	26 e0       	ldi	r18, 0x06	; 6
    e0d0:	40 e8       	ldi	r20, 0x80	; 128
    e0d2:	55 e2       	ldi	r21, 0x25	; 37
    e0d4:	60 e0       	ldi	r22, 0x00	; 0
    e0d6:	70 e0       	ldi	r23, 0x00	; 0
    e0d8:	86 ec       	ldi	r24, 0xC6	; 198
    e0da:	94 e1       	ldi	r25, 0x14	; 20
    e0dc:	0e 94 dc d3 	call	0x1a7b8	; 0x1a7b8 <_ZN14HardwareSerial5beginEmh>
    e0e0:	26 e0       	ldi	r18, 0x06	; 6
    e0e2:	40 e8       	ldi	r20, 0x80	; 128
    e0e4:	55 e2       	ldi	r21, 0x25	; 37
    e0e6:	60 e0       	ldi	r22, 0x00	; 0
    e0e8:	70 e0       	ldi	r23, 0x00	; 0
    e0ea:	83 e8       	ldi	r24, 0x83	; 131
    e0ec:	96 e1       	ldi	r25, 0x16	; 22
    e0ee:	0e 94 dc d3 	call	0x1a7b8	; 0x1a7b8 <_ZN14HardwareSerial5beginEmh>
    e0f2:	62 e0       	ldi	r22, 0x02	; 2
    e0f4:	83 e1       	ldi	r24, 0x13	; 19
    e0f6:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e0fa:	41 e0       	ldi	r20, 0x01	; 1
    e0fc:	60 e0       	ldi	r22, 0x00	; 0
    e0fe:	83 ec       	ldi	r24, 0xC3	; 195
    e100:	9c e0       	ldi	r25, 0x0C	; 12
    e102:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e106:	68 ef       	ldi	r22, 0xF8	; 248
    e108:	74 e2       	ldi	r23, 0x24	; 36
    e10a:	83 ec       	ldi	r24, 0xC3	; 195
    e10c:	9c e0       	ldi	r25, 0x0C	; 12
    e10e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e112:	42 e0       	ldi	r20, 0x02	; 2
    e114:	60 e0       	ldi	r22, 0x00	; 0
    e116:	83 ec       	ldi	r24, 0xC3	; 195
    e118:	9c e0       	ldi	r25, 0x0C	; 12
    e11a:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e11e:	63 ee       	ldi	r22, 0xE3	; 227
    e120:	74 e2       	ldi	r23, 0x24	; 36
    e122:	83 ec       	ldi	r24, 0xC3	; 195
    e124:	9c e0       	ldi	r25, 0x0C	; 12
    e126:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e12a:	68 eb       	ldi	r22, 0xB8	; 184
    e12c:	7b e0       	ldi	r23, 0x0B	; 11
    e12e:	80 e0       	ldi	r24, 0x00	; 0
    e130:	90 e0       	ldi	r25, 0x00	; 0
    e132:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e136:	41 e0       	ldi	r20, 0x01	; 1
    e138:	60 e0       	ldi	r22, 0x00	; 0
    e13a:	83 ec       	ldi	r24, 0xC3	; 195
    e13c:	9c e0       	ldi	r25, 0x0C	; 12
    e13e:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e142:	6e ec       	ldi	r22, 0xCE	; 206
    e144:	74 e2       	ldi	r23, 0x24	; 36
    e146:	83 ec       	ldi	r24, 0xC3	; 195
    e148:	9c e0       	ldi	r25, 0x0C	; 12
    e14a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e14e:	41 e0       	ldi	r20, 0x01	; 1
    e150:	65 e0       	ldi	r22, 0x05	; 5
    e152:	83 ec       	ldi	r24, 0xC3	; 195
    e154:	9c e0       	ldi	r25, 0x0C	; 12
    e156:	0e 94 ad da 	call	0x1b55a	; 0x1b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>
    e15a:	61 ec       	ldi	r22, 0xC1	; 193
    e15c:	74 e2       	ldi	r23, 0x24	; 36
    e15e:	83 ec       	ldi	r24, 0xC3	; 195
    e160:	9c e0       	ldi	r25, 0x0C	; 12
    e162:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
    e166:	86 ec       	ldi	r24, 0xC6	; 198
    e168:	94 e1       	ldi	r25, 0x14	; 20
    e16a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    e16e:	61 e0       	ldi	r22, 0x01	; 1
    e170:	8d e0       	ldi	r24, 0x0D	; 13
    e172:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e176:	61 e0       	ldi	r22, 0x01	; 1
    e178:	8a e0       	ldi	r24, 0x0A	; 10
    e17a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e17e:	61 e0       	ldi	r22, 0x01	; 1
    e180:	8b e0       	ldi	r24, 0x0B	; 11
    e182:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e186:	61 e0       	ldi	r22, 0x01	; 1
    e188:	86 e1       	ldi	r24, 0x16	; 22
    e18a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e18e:	61 e0       	ldi	r22, 0x01	; 1
    e190:	88 e1       	ldi	r24, 0x18	; 24
    e192:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e196:	61 e0       	ldi	r22, 0x01	; 1
    e198:	8a e1       	ldi	r24, 0x1A	; 26
    e19a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e19e:	61 e0       	ldi	r22, 0x01	; 1
    e1a0:	8c e1       	ldi	r24, 0x1C	; 28
    e1a2:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1a6:	61 e0       	ldi	r22, 0x01	; 1
    e1a8:	85 e2       	ldi	r24, 0x25	; 37
    e1aa:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1ae:	61 e0       	ldi	r22, 0x01	; 1
    e1b0:	82 e2       	ldi	r24, 0x22	; 34
    e1b2:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1b6:	61 e0       	ldi	r22, 0x01	; 1
    e1b8:	80 e2       	ldi	r24, 0x20	; 32
    e1ba:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1be:	61 e0       	ldi	r22, 0x01	; 1
    e1c0:	8e e1       	ldi	r24, 0x1E	; 30
    e1c2:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1c6:	61 e0       	ldi	r22, 0x01	; 1
    e1c8:	87 e1       	ldi	r24, 0x17	; 23
    e1ca:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1ce:	61 e0       	ldi	r22, 0x01	; 1
    e1d0:	89 e1       	ldi	r24, 0x19	; 25
    e1d2:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1d6:	61 e0       	ldi	r22, 0x01	; 1
    e1d8:	8b e1       	ldi	r24, 0x1B	; 27
    e1da:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1de:	61 e0       	ldi	r22, 0x01	; 1
    e1e0:	8d e1       	ldi	r24, 0x1D	; 29
    e1e2:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1e6:	61 e0       	ldi	r22, 0x01	; 1
    e1e8:	83 e2       	ldi	r24, 0x23	; 35
    e1ea:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1ee:	61 e0       	ldi	r22, 0x01	; 1
    e1f0:	81 e2       	ldi	r24, 0x21	; 33
    e1f2:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1f6:	61 e0       	ldi	r22, 0x01	; 1
    e1f8:	8f e1       	ldi	r24, 0x1F	; 31
    e1fa:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e1fe:	61 e0       	ldi	r22, 0x01	; 1
    e200:	81 e3       	ldi	r24, 0x31	; 49
    e202:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e206:	61 e0       	ldi	r22, 0x01	; 1
    e208:	86 e0       	ldi	r24, 0x06	; 6
    e20a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e20e:	61 e0       	ldi	r22, 0x01	; 1
    e210:	87 e0       	ldi	r24, 0x07	; 7
    e212:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e216:	61 e0       	ldi	r22, 0x01	; 1
    e218:	88 e0       	ldi	r24, 0x08	; 8
    e21a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e21e:	61 e0       	ldi	r22, 0x01	; 1
    e220:	89 e0       	ldi	r24, 0x09	; 9
    e222:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e226:	61 e0       	ldi	r22, 0x01	; 1
    e228:	80 e3       	ldi	r24, 0x30	; 48
    e22a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e22e:	61 e0       	ldi	r22, 0x01	; 1
    e230:	8f e2       	ldi	r24, 0x2F	; 47
    e232:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e236:	61 e0       	ldi	r22, 0x01	; 1
    e238:	8e e2       	ldi	r24, 0x2E	; 46
    e23a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e23e:	61 e0       	ldi	r22, 0x01	; 1
    e240:	8d e2       	ldi	r24, 0x2D	; 45
    e242:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e246:	61 e0       	ldi	r22, 0x01	; 1
    e248:	85 e3       	ldi	r24, 0x35	; 53
    e24a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e24e:	61 e0       	ldi	r22, 0x01	; 1
    e250:	84 e2       	ldi	r24, 0x24	; 36
    e252:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e256:	61 e0       	ldi	r22, 0x01	; 1
    e258:	81 e0       	ldi	r24, 0x01	; 1
    e25a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e25e:	61 e0       	ldi	r22, 0x01	; 1
    e260:	8c e0       	ldi	r24, 0x0C	; 12
    e262:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e266:	61 e0       	ldi	r22, 0x01	; 1
    e268:	87 e2       	ldi	r24, 0x27	; 39
    e26a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e26e:	61 e0       	ldi	r22, 0x01	; 1
    e270:	8e e1       	ldi	r24, 0x1E	; 30
    e272:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e276:	61 e0       	ldi	r22, 0x01	; 1
    e278:	8e e1       	ldi	r24, 0x1E	; 30
    e27a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
    e27e:	60 e0       	ldi	r22, 0x00	; 0
    e280:	87 e3       	ldi	r24, 0x37	; 55
    e282:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e286:	60 e0       	ldi	r22, 0x00	; 0
    e288:	88 e3       	ldi	r24, 0x38	; 56
    e28a:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e28e:	62 e0       	ldi	r22, 0x02	; 2
    e290:	89 e3       	ldi	r24, 0x39	; 57
    e292:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e296:	61 e0       	ldi	r22, 0x01	; 1
    e298:	8a e0       	ldi	r24, 0x0A	; 10
    e29a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
    e29e:	61 e0       	ldi	r22, 0x01	; 1
    e2a0:	8b e0       	ldi	r24, 0x0B	; 11
    e2a2:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
    e2a6:	60 e0       	ldi	r22, 0x00	; 0
    e2a8:	89 e3       	ldi	r24, 0x39	; 57
    e2aa:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e2ae:	60 e0       	ldi	r22, 0x00	; 0
    e2b0:	8a e3       	ldi	r24, 0x3A	; 58
    e2b2:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e2b6:	60 e0       	ldi	r22, 0x00	; 0
    e2b8:	8b e3       	ldi	r24, 0x3B	; 59
    e2ba:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    e2be:	86 e1       	ldi	r24, 0x16	; 22
    e2c0:	80 93 4c 14 	sts	0x144C, r24	; 0x80144c <_sRuble_Parameters+0x9e>
    e2c4:	10 93 4d 14 	sts	0x144D, r17	; 0x80144d <_sRuble_Parameters+0x9f>
    e2c8:	8a e1       	ldi	r24, 0x1A	; 26
    e2ca:	80 93 4e 14 	sts	0x144E, r24	; 0x80144e <_sRuble_Parameters+0xa0>
    e2ce:	8c e1       	ldi	r24, 0x1C	; 28
    e2d0:	80 93 4f 14 	sts	0x144F, r24	; 0x80144f <_sRuble_Parameters+0xa1>
    e2d4:	85 e2       	ldi	r24, 0x25	; 37
    e2d6:	80 93 50 14 	sts	0x1450, r24	; 0x801450 <_sRuble_Parameters+0xa2>
    e2da:	82 e2       	ldi	r24, 0x22	; 34
    e2dc:	80 93 51 14 	sts	0x1451, r24	; 0x801451 <_sRuble_Parameters+0xa3>
    e2e0:	80 e2       	ldi	r24, 0x20	; 32
    e2e2:	80 93 52 14 	sts	0x1452, r24	; 0x801452 <_sRuble_Parameters+0xa4>
    e2e6:	8e e1       	ldi	r24, 0x1E	; 30
    e2e8:	80 93 53 14 	sts	0x1453, r24	; 0x801453 <_sRuble_Parameters+0xa5>
    e2ec:	87 e1       	ldi	r24, 0x17	; 23
    e2ee:	80 93 54 14 	sts	0x1454, r24	; 0x801454 <_sRuble_Parameters+0xa6>
    e2f2:	89 e1       	ldi	r24, 0x19	; 25
    e2f4:	80 93 55 14 	sts	0x1455, r24	; 0x801455 <_sRuble_Parameters+0xa7>
    e2f8:	8b e1       	ldi	r24, 0x1B	; 27
    e2fa:	80 93 56 14 	sts	0x1456, r24	; 0x801456 <_sRuble_Parameters+0xa8>
    e2fe:	8d e1       	ldi	r24, 0x1D	; 29
    e300:	80 93 57 14 	sts	0x1457, r24	; 0x801457 <_sRuble_Parameters+0xa9>
    e304:	83 e2       	ldi	r24, 0x23	; 35
    e306:	80 93 58 14 	sts	0x1458, r24	; 0x801458 <_sRuble_Parameters+0xaa>
    e30a:	81 e2       	ldi	r24, 0x21	; 33
    e30c:	80 93 59 14 	sts	0x1459, r24	; 0x801459 <_sRuble_Parameters+0xab>
    e310:	8f e1       	ldi	r24, 0x1F	; 31
    e312:	80 93 5a 14 	sts	0x145A, r24	; 0x80145a <_sRuble_Parameters+0xac>
    e316:	81 e3       	ldi	r24, 0x31	; 49
    e318:	80 93 5b 14 	sts	0x145B, r24	; 0x80145b <_sRuble_Parameters+0xad>
    e31c:	86 e0       	ldi	r24, 0x06	; 6
    e31e:	80 93 5c 14 	sts	0x145C, r24	; 0x80145c <_sRuble_Parameters+0xae>
    e322:	87 e0       	ldi	r24, 0x07	; 7
    e324:	80 93 5d 14 	sts	0x145D, r24	; 0x80145d <_sRuble_Parameters+0xaf>
    e328:	88 e0       	ldi	r24, 0x08	; 8
    e32a:	80 93 5e 14 	sts	0x145E, r24	; 0x80145e <_sRuble_Parameters+0xb0>
    e32e:	89 e0       	ldi	r24, 0x09	; 9
    e330:	80 93 5f 14 	sts	0x145F, r24	; 0x80145f <_sRuble_Parameters+0xb1>
    e334:	80 e3       	ldi	r24, 0x30	; 48
    e336:	80 93 60 14 	sts	0x1460, r24	; 0x801460 <_sRuble_Parameters+0xb2>
    e33a:	8f e2       	ldi	r24, 0x2F	; 47
    e33c:	80 93 61 14 	sts	0x1461, r24	; 0x801461 <_sRuble_Parameters+0xb3>
    e340:	8e e2       	ldi	r24, 0x2E	; 46
    e342:	80 93 62 14 	sts	0x1462, r24	; 0x801462 <_sRuble_Parameters+0xb4>
    e346:	8d e2       	ldi	r24, 0x2D	; 45
    e348:	80 93 63 14 	sts	0x1463, r24	; 0x801463 <_sRuble_Parameters+0xb5>
    e34c:	0c e4       	ldi	r16, 0x4C	; 76
    e34e:	14 e1       	ldi	r17, 0x14	; 20
    e350:	61 e0       	ldi	r22, 0x01	; 1
    e352:	f8 01       	movw	r30, r16
    e354:	81 91       	ld	r24, Z+
    e356:	8f 01       	movw	r16, r30
    e358:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
    e35c:	f4 e1       	ldi	r31, 0x14	; 20
    e35e:	04 36       	cpi	r16, 0x64	; 100
    e360:	1f 07       	cpc	r17, r31
    e362:	b1 f7       	brne	.-20     	; 0xe350 <_Z19Initialise_Hardwarev+0x2b4>
    e364:	6e 98       	cbi	0x0d, 6	; 13
    e366:	76 9a       	sbi	0x0e, 6	; 14
    e368:	68 ee       	ldi	r22, 0xE8	; 232
    e36a:	73 e0       	ldi	r23, 0x03	; 3
    e36c:	80 e0       	ldi	r24, 0x00	; 0
    e36e:	90 e0       	ldi	r25, 0x00	; 0
    e370:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e374:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e378:	88 69       	ori	r24, 0x98	; 152
    e37a:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e37e:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e382:	86 60       	ori	r24, 0x06	; 6
    e384:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e388:	78 94       	sei
    e38a:	68 ee       	ldi	r22, 0xE8	; 232
    e38c:	73 e0       	ldi	r23, 0x03	; 3
    e38e:	80 e0       	ldi	r24, 0x00	; 0
    e390:	90 e0       	ldi	r25, 0x00	; 0
    e392:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e396:	c7 d3       	rcall	.+1934   	; 0xeb26 <_Z11Debug_Checkv>
    e398:	0e 94 07 66 	call	0xcc0e	; 0xcc0e <_Z9Lora_Initv>
    e39c:	88 23       	and	r24, r24
    e39e:	79 f0       	breq	.+30     	; 0xe3be <_Z19Initialise_Hardwarev+0x322>
    e3a0:	0e 94 29 66 	call	0xcc52	; 0xcc52 <_Z13Lora_Set_Freqv>
    e3a4:	0e 94 37 66 	call	0xcc6e	; 0xcc6e <_Z15Lora_Set_Configv>
    e3a8:	0e 94 31 66 	call	0xcc62	; 0xcc62 <_Z14Lora_Set_Powerv>
    e3ac:	10 92 6c 14 	sts	0x146C, r1	; 0x80146c <_sRuble_Parameters+0xbe>
    e3b0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e3b4:	81 30       	cpi	r24, 0x01	; 1
    e3b6:	11 f5       	brne	.+68     	; 0xe3fc <_Z19Initialise_Hardwarev+0x360>
    e3b8:	62 eb       	ldi	r22, 0xB2	; 178
    e3ba:	74 e2       	ldi	r23, 0x24	; 36
    e3bc:	17 c0       	rjmp	.+46     	; 0xe3ec <_Z19Initialise_Hardwarev+0x350>
    e3be:	80 91 1d 14 	lds	r24, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
    e3c2:	82 60       	ori	r24, 0x02	; 2
    e3c4:	80 93 1d 14 	sts	0x141D, r24	; 0x80141d <_sRuble_Parameters+0x6f>
    e3c8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    e3cc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    e3d0:	91 60       	ori	r25, 0x01	; 1
    e3d2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    e3d6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    e3da:	81 e0       	ldi	r24, 0x01	; 1
    e3dc:	80 93 6c 14 	sts	0x146C, r24	; 0x80146c <_sRuble_Parameters+0xbe>
    e3e0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e3e4:	81 30       	cpi	r24, 0x01	; 1
    e3e6:	51 f4       	brne	.+20     	; 0xe3fc <_Z19Initialise_Hardwarev+0x360>
    e3e8:	6f e9       	ldi	r22, 0x9F	; 159
    e3ea:	74 e2       	ldi	r23, 0x24	; 36
    e3ec:	86 ec       	ldi	r24, 0xC6	; 198
    e3ee:	94 e1       	ldi	r25, 0x14	; 20
    e3f0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e3f4:	86 ec       	ldi	r24, 0xC6	; 198
    e3f6:	94 e1       	ldi	r25, 0x14	; 20
    e3f8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    e3fc:	80 9a       	sbi	0x10, 0	; 16
    e3fe:	88 98       	cbi	0x11, 0	; 17
    e400:	68 e8       	ldi	r22, 0x88	; 136
    e402:	73 e1       	ldi	r23, 0x13	; 19
    e404:	80 e0       	ldi	r24, 0x00	; 0
    e406:	90 e0       	ldi	r25, 0x00	; 0
    e408:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e40c:	81 b3       	in	r24, 0x11	; 17
    e40e:	8e 6f       	ori	r24, 0xFE	; 254
    e410:	81 bb       	out	0x11, r24	; 17
    e412:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
    e416:	84 60       	ori	r24, 0x04	; 4
    e418:	80 93 b0 13 	sts	0x13B0, r24	; 0x8013b0 <_sRuble_Parameters+0x2>
    e41c:	1b db       	rcall	.-2506   	; 0xda54 <_Z16Display_Update_1v>
    e41e:	68 e8       	ldi	r22, 0x88	; 136
    e420:	73 e1       	ldi	r23, 0x13	; 19
    e422:	80 e0       	ldi	r24, 0x00	; 0
    e424:	90 e0       	ldi	r25, 0x00	; 0
    e426:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e42a:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
    e42e:	82 60       	ori	r24, 0x02	; 2
    e430:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
    e434:	0f db       	rcall	.-2530   	; 0xda54 <_Z16Display_Update_1v>
    e436:	68 e8       	ldi	r22, 0x88	; 136
    e438:	73 e1       	ldi	r23, 0x13	; 19
    e43a:	80 e0       	ldi	r24, 0x00	; 0
    e43c:	90 e0       	ldi	r25, 0x00	; 0
    e43e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e442:	68 e8       	ldi	r22, 0x88	; 136
    e444:	73 e1       	ldi	r23, 0x13	; 19
    e446:	80 e0       	ldi	r24, 0x00	; 0
    e448:	90 e0       	ldi	r25, 0x00	; 0
    e44a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e44e:	68 e8       	ldi	r22, 0x88	; 136
    e450:	73 e1       	ldi	r23, 0x13	; 19
    e452:	80 e0       	ldi	r24, 0x00	; 0
    e454:	90 e0       	ldi	r25, 0x00	; 0
    e456:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e45a:	68 e8       	ldi	r22, 0x88	; 136
    e45c:	73 e1       	ldi	r23, 0x13	; 19
    e45e:	80 e0       	ldi	r24, 0x00	; 0
    e460:	90 e0       	ldi	r25, 0x00	; 0
    e462:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e466:	68 e8       	ldi	r22, 0x88	; 136
    e468:	73 e1       	ldi	r23, 0x13	; 19
    e46a:	80 e0       	ldi	r24, 0x00	; 0
    e46c:	90 e0       	ldi	r25, 0x00	; 0
    e46e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
    e472:	ce 01       	movw	r24, r28
    e474:	01 96       	adiw	r24, 0x01	; 1
    e476:	23 e0       	ldi	r18, 0x03	; 3
    e478:	fc 01       	movw	r30, r24
    e47a:	11 92       	st	Z+, r1
    e47c:	2a 95       	dec	r18
    e47e:	e9 f7       	brne	.-6      	; 0xe47a <_Z19Initialise_Hardwarev+0x3de>
    e480:	2a e1       	ldi	r18, 0x1A	; 26
    e482:	29 83       	std	Y+1, r18	; 0x01
    e484:	01 e0       	ldi	r16, 0x01	; 1
    e486:	28 e8       	ldi	r18, 0x88	; 136
    e488:	33 e1       	ldi	r19, 0x13	; 19
    e48a:	40 e0       	ldi	r20, 0x00	; 0
    e48c:	50 e0       	ldi	r21, 0x00	; 0
    e48e:	6e e1       	ldi	r22, 0x1E	; 30
    e490:	73 e0       	ldi	r23, 0x03	; 3
    e492:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    e496:	0e 94 21 69 	call	0xd242	; 0xd242 <_Z8Gsm_Initv>
    e49a:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e49e:	88 23       	and	r24, r24
    e4a0:	29 f0       	breq	.+10     	; 0xe4ac <_Z19Initialise_Hardwarev+0x410>
    e4a2:	21 30       	cpi	r18, 0x01	; 1
    e4a4:	e9 f4       	brne	.+58     	; 0xe4e0 <_Z19Initialise_Hardwarev+0x444>
    e4a6:	61 e9       	ldi	r22, 0x91	; 145
    e4a8:	74 e2       	ldi	r23, 0x24	; 36
    e4aa:	12 c0       	rjmp	.+36     	; 0xe4d0 <_Z19Initialise_Hardwarev+0x434>
    e4ac:	80 91 1d 14 	lds	r24, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
    e4b0:	81 60       	ori	r24, 0x01	; 1
    e4b2:	80 93 1d 14 	sts	0x141D, r24	; 0x80141d <_sRuble_Parameters+0x6f>
    e4b6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    e4ba:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    e4be:	91 60       	ori	r25, 0x01	; 1
    e4c0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    e4c4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    e4c8:	21 30       	cpi	r18, 0x01	; 1
    e4ca:	51 f4       	brne	.+20     	; 0xe4e0 <_Z19Initialise_Hardwarev+0x444>
    e4cc:	6f e7       	ldi	r22, 0x7F	; 127
    e4ce:	74 e2       	ldi	r23, 0x24	; 36
    e4d0:	86 ec       	ldi	r24, 0xC6	; 198
    e4d2:	94 e1       	ldi	r25, 0x14	; 20
    e4d4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e4d8:	86 ec       	ldi	r24, 0xC6	; 198
    e4da:	94 e1       	ldi	r25, 0x14	; 20
    e4dc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    e4e0:	81 e0       	ldi	r24, 0x01	; 1
    e4e2:	80 93 ab 14 	sts	0x14AB, r24	; 0x8014ab <_sRuble_Parameters+0xfd>
    e4e6:	0f 90       	pop	r0
    e4e8:	0f 90       	pop	r0
    e4ea:	0f 90       	pop	r0
    e4ec:	df 91       	pop	r29
    e4ee:	cf 91       	pop	r28
    e4f0:	1f 91       	pop	r17
    e4f2:	0f 91       	pop	r16
    e4f4:	08 95       	ret

0000e4f6 <_Z14MQTT_SUBSCRIBEPc>:
	return 0;
	
}

bool MQTT_SUBSCRIBE(char topic[])
{
    e4f6:	cf 92       	push	r12
    e4f8:	df 92       	push	r13
    e4fa:	ef 92       	push	r14
    e4fc:	ff 92       	push	r15
    e4fe:	0f 93       	push	r16
    e500:	cf 93       	push	r28
    e502:	df 93       	push	r29
    e504:	cd b7       	in	r28, 0x3d	; 61
    e506:	de b7       	in	r29, 0x3e	; 62
    e508:	c4 56       	subi	r28, 0x64	; 100
    e50a:	d1 09       	sbc	r29, r1
    e50c:	0f b6       	in	r0, 0x3f	; 63
    e50e:	f8 94       	cli
    e510:	de bf       	out	0x3e, r29	; 62
    e512:	0f be       	out	0x3f, r0	; 63
    e514:	cd bf       	out	0x3d, r28	; 61
    e516:	7c 01       	movw	r14, r24
	char temp_data[100];
	memset(temp_data,0,sizeof(temp_data));
    e518:	ce 01       	movw	r24, r28
    e51a:	01 96       	adiw	r24, 0x01	; 1
    e51c:	6c 01       	movw	r12, r24
    e51e:	84 e6       	ldi	r24, 0x64	; 100
    e520:	f6 01       	movw	r30, r12
    e522:	11 92       	st	Z+, r1
    e524:	8a 95       	dec	r24
    e526:	e9 f7       	brne	.-6      	; 0xe522 <_Z14MQTT_SUBSCRIBEPc+0x2c>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    e528:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e52c:	81 30       	cpi	r24, 0x01	; 1
    e52e:	69 f4       	brne	.+26     	; 0xe54a <_Z14MQTT_SUBSCRIBEPc+0x54>
	{
		_kSERIAL_MON_WRITE(topic,strlen(topic));
    e530:	f7 01       	movw	r30, r14
    e532:	01 90       	ld	r0, Z+
    e534:	00 20       	and	r0, r0
    e536:	e9 f7       	brne	.-6      	; 0xe532 <_Z14MQTT_SUBSCRIBEPc+0x3c>
    e538:	31 97       	sbiw	r30, 0x01	; 1
    e53a:	af 01       	movw	r20, r30
    e53c:	4e 19       	sub	r20, r14
    e53e:	5f 09       	sbc	r21, r15
    e540:	b7 01       	movw	r22, r14
    e542:	86 ec       	ldi	r24, 0xC6	; 198
    e544:	94 e1       	ldi	r25, 0x14	; 20
    e546:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
	}
	Reset_Buffer();
    e54a:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
    e54e:	f7 01       	movw	r30, r14
    e550:	01 90       	ld	r0, Z+
    e552:	00 20       	and	r0, r0
    e554:	e9 f7       	brne	.-6      	; 0xe550 <_Z14MQTT_SUBSCRIBEPc+0x5a>
    e556:	31 97       	sbiw	r30, 0x01	; 1
    e558:	ee 19       	sub	r30, r14
    e55a:	ff 09       	sbc	r31, r15
    e55c:	ff 93       	push	r31
    e55e:	ef 93       	push	r30
    e560:	8d ef       	ldi	r24, 0xFD	; 253
    e562:	94 e0       	ldi	r25, 0x04	; 4
    e564:	9f 93       	push	r25
    e566:	8f 93       	push	r24
    e568:	df 92       	push	r13
    e56a:	cf 92       	push	r12
    e56c:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
    e570:	02 e0       	ldi	r16, 0x02	; 2
    e572:	28 eb       	ldi	r18, 0xB8	; 184
    e574:	3b e0       	ldi	r19, 0x0B	; 11
    e576:	40 e0       	ldi	r20, 0x00	; 0
    e578:	50 e0       	ldi	r21, 0x00	; 0
    e57a:	64 e0       	ldi	r22, 0x04	; 4
    e57c:	74 e0       	ldi	r23, 0x04	; 4
    e57e:	c6 01       	movw	r24, r12
    e580:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    e584:	0f 90       	pop	r0
    e586:	0f 90       	pop	r0
    e588:	0f 90       	pop	r0
    e58a:	0f 90       	pop	r0
    e58c:	0f 90       	pop	r0
    e58e:	0f 90       	pop	r0
    e590:	81 11       	cpse	r24, r1
    e592:	02 c0       	rjmp	.+4      	; 0xe598 <_Z14MQTT_SUBSCRIBEPc+0xa2>
				}
				return 1;
			}
		}
	}
	return 0;
    e594:	80 e0       	ldi	r24, 0x00	; 0
    e596:	36 c0       	rjmp	.+108    	; 0xe604 <_Z14MQTT_SUBSCRIBEPc+0x10e>
	Reset_Buffer();
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
	{
		Reset_Buffer();
    e598:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(topic);
    e59c:	b7 01       	movw	r22, r14
    e59e:	83 e8       	ldi	r24, 0x83	; 131
    e5a0:	96 e1       	ldi	r25, 0x16	; 22
    e5a2:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
		if(_kSEND_AT_COMMAND("AT+CMQTTSUB=0,10,1,1",">",NULL,3000,2))
    e5a6:	02 e0       	ldi	r16, 0x02	; 2
    e5a8:	28 eb       	ldi	r18, 0xB8	; 184
    e5aa:	3b e0       	ldi	r19, 0x0B	; 11
    e5ac:	40 e0       	ldi	r20, 0x00	; 0
    e5ae:	50 e0       	ldi	r21, 0x00	; 0
    e5b0:	64 e0       	ldi	r22, 0x04	; 4
    e5b2:	74 e0       	ldi	r23, 0x04	; 4
    e5b4:	85 e1       	ldi	r24, 0x15	; 21
    e5b6:	95 e0       	ldi	r25, 0x05	; 5
    e5b8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    e5bc:	88 23       	and	r24, r24
    e5be:	51 f3       	breq	.-44     	; 0xe594 <_Z14MQTT_SUBSCRIBEPc+0x9e>
		{
			Reset_Buffer();
    e5c0:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(topic);
    e5c4:	b7 01       	movw	r22, r14
    e5c6:	83 e8       	ldi	r24, 0x83	; 131
    e5c8:	96 e1       	ldi	r25, 0x16	; 22
    e5ca:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
			if((_kSEND_AT_COMMAND(NULL,"+CMQTTSUB: 0,0",NULL,5000,2)))
    e5ce:	28 e8       	ldi	r18, 0x88	; 136
    e5d0:	33 e1       	ldi	r19, 0x13	; 19
    e5d2:	40 e0       	ldi	r20, 0x00	; 0
    e5d4:	50 e0       	ldi	r21, 0x00	; 0
    e5d6:	6a e2       	ldi	r22, 0x2A	; 42
    e5d8:	75 e0       	ldi	r23, 0x05	; 5
    e5da:	80 e0       	ldi	r24, 0x00	; 0
    e5dc:	90 e0       	ldi	r25, 0x00	; 0
    e5de:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    e5e2:	88 23       	and	r24, r24
    e5e4:	b9 f2       	breq	.-82     	; 0xe594 <_Z14MQTT_SUBSCRIBEPc+0x9e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    e5e6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e5ea:	81 30       	cpi	r24, 0x01	; 1
    e5ec:	51 f4       	brne	.+20     	; 0xe602 <_Z14MQTT_SUBSCRIBEPc+0x10c>
				{
					_kSERAIL_MON_WRITE("SUB SUCCESS");
    e5ee:	6e e7       	ldi	r22, 0x7E	; 126
    e5f0:	73 e2       	ldi	r23, 0x23	; 35
    e5f2:	86 ec       	ldi	r24, 0xC6	; 198
    e5f4:	94 e1       	ldi	r25, 0x14	; 20
    e5f6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    e5fa:	86 ec       	ldi	r24, 0xC6	; 198
    e5fc:	94 e1       	ldi	r25, 0x14	; 20
    e5fe:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				}
				return 1;
    e602:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	return 0;
}
    e604:	cc 59       	subi	r28, 0x9C	; 156
    e606:	df 4f       	sbci	r29, 0xFF	; 255
    e608:	0f b6       	in	r0, 0x3f	; 63
    e60a:	f8 94       	cli
    e60c:	de bf       	out	0x3e, r29	; 62
    e60e:	0f be       	out	0x3f, r0	; 63
    e610:	cd bf       	out	0x3d, r28	; 61
    e612:	df 91       	pop	r29
    e614:	cf 91       	pop	r28
    e616:	0f 91       	pop	r16
    e618:	ff 90       	pop	r15
    e61a:	ef 90       	pop	r14
    e61c:	df 90       	pop	r13
    e61e:	cf 90       	pop	r12
    e620:	08 95       	ret

0000e622 <_Z21Subscribed_data_checkv>:
}

bool Subscribed_data_check(void)
{
	
	if(rx_complete)
    e622:	80 91 78 0c 	lds	r24, 0x0C78	; 0x800c78 <rx_complete>
    e626:	88 23       	and	r24, r24
    e628:	09 f4       	brne	.+2      	; 0xe62c <_Z21Subscribed_data_checkv+0xa>
    e62a:	48 c0       	rjmp	.+144    	; 0xe6bc <_Z21Subscribed_data_checkv+0x9a>
	{
		rx_complete = _kRESET;
    e62c:	10 92 78 0c 	sts	0x0C78, r1	; 0x800c78 <rx_complete>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    e630:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e634:	81 30       	cpi	r24, 0x01	; 1
    e636:	a9 f4       	brne	.+42     	; 0xe662 <_Z21Subscribed_data_checkv+0x40>
		{
			_kSERAIL_MON_WRITE("enter 1");
    e638:	62 e0       	ldi	r22, 0x02	; 2
    e63a:	73 e2       	ldi	r23, 0x23	; 35
    e63c:	86 ec       	ldi	r24, 0xC6	; 198
    e63e:	94 e1       	ldi	r25, 0x14	; 20
    e640:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_WRITE((const char*)_gPub_Buff,strlen((const char*)_gPub_Buff));
    e644:	e0 ed       	ldi	r30, 0xD0	; 208
    e646:	ff e0       	ldi	r31, 0x0F	; 15
    e648:	01 90       	ld	r0, Z+
    e64a:	00 20       	and	r0, r0
    e64c:	e9 f7       	brne	.-6      	; 0xe648 <_Z21Subscribed_data_checkv+0x26>
    e64e:	31 97       	sbiw	r30, 0x01	; 1
    e650:	af 01       	movw	r20, r30
    e652:	40 5d       	subi	r20, 0xD0	; 208
    e654:	5f 40       	sbci	r21, 0x0F	; 15
    e656:	60 ed       	ldi	r22, 0xD0	; 208
    e658:	7f e0       	ldi	r23, 0x0F	; 15
    e65a:	86 ec       	ldi	r24, 0xC6	; 198
    e65c:	94 e1       	ldi	r25, 0x14	; 20
    e65e:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
		}
		if(strstr((const char *)_gPub_Buff,"+CMQTTRX") && monitor_serial_start < 7)
    e662:	69 e3       	ldi	r22, 0x39	; 57
    e664:	75 e0       	ldi	r23, 0x05	; 5
    e666:	80 ed       	ldi	r24, 0xD0	; 208
    e668:	9f e0       	ldi	r25, 0x0F	; 15
    e66a:	0e 94 e4 ed 	call	0x1dbc8	; 0x1dbc8 <strstr>
    e66e:	89 2b       	or	r24, r25
    e670:	b1 f0       	breq	.+44     	; 0xe69e <_Z21Subscribed_data_checkv+0x7c>
    e672:	80 91 74 0c 	lds	r24, 0x0C74	; 0x800c74 <monitor_serial_start>
    e676:	87 30       	cpi	r24, 0x07	; 7
    e678:	90 f4       	brcc	.+36     	; 0xe69e <_Z21Subscribed_data_checkv+0x7c>
		{
			monitor_serial_start = 0;
    e67a:	10 92 74 0c 	sts	0x0C74, r1	; 0x800c74 <monitor_serial_start>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    e67e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e682:	81 30       	cpi	r24, 0x01	; 1
    e684:	51 f4       	brne	.+20     	; 0xe69a <_Z21Subscribed_data_checkv+0x78>
			{
				_kSERAIL_MON_WRITE("TOPIC MATCH");
    e686:	66 ef       	ldi	r22, 0xF6	; 246
    e688:	72 e2       	ldi	r23, 0x22	; 34
    e68a:	86 ec       	ldi	r24, 0xC6	; 198
    e68c:	94 e1       	ldi	r25, 0x14	; 20
    e68e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    e692:	86 ec       	ldi	r24, 0xC6	; 198
    e694:	94 e1       	ldi	r25, 0x14	; 20
    e696:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			return 1;
    e69a:	81 e0       	ldi	r24, 0x01	; 1
    e69c:	08 95       	ret
		}
		
		memset((char*)_gPub_Buff,0,strlen((const char*)_gPub_Buff));
    e69e:	e0 ed       	ldi	r30, 0xD0	; 208
    e6a0:	ff e0       	ldi	r31, 0x0F	; 15
    e6a2:	01 90       	ld	r0, Z+
    e6a4:	00 20       	and	r0, r0
    e6a6:	e9 f7       	brne	.-6      	; 0xe6a2 <_Z21Subscribed_data_checkv+0x80>
    e6a8:	31 97       	sbiw	r30, 0x01	; 1
    e6aa:	af 01       	movw	r20, r30
    e6ac:	40 5d       	subi	r20, 0xD0	; 208
    e6ae:	5f 40       	sbci	r21, 0x0F	; 15
    e6b0:	60 e0       	ldi	r22, 0x00	; 0
    e6b2:	70 e0       	ldi	r23, 0x00	; 0
    e6b4:	80 ed       	ldi	r24, 0xD0	; 208
    e6b6:	9f e0       	ldi	r25, 0x0F	; 15
    e6b8:	0e 94 cd ed 	call	0x1db9a	; 0x1db9a <memset>
	}
	
	return 0;
    e6bc:	80 e0       	ldi	r24, 0x00	; 0
			return 1;
		}
	}
	
	return 0;
}
    e6be:	08 95       	ret

0000e6c0 <_ZNK5EERefdeEv>:
	}
}


void Kill_Switch_Through_SMS(void)
{
    e6c0:	fc 01       	movw	r30, r24
    e6c2:	80 81       	ld	r24, Z
    e6c4:	91 81       	ldd	r25, Z+1	; 0x01
    e6c6:	0c 94 d9 f0 	jmp	0x1e1b2	; 0x1e1b2 <eeprom_read_byte>

0000e6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>:
    e6ca:	0f 93       	push	r16
    e6cc:	1f 93       	push	r17
    e6ce:	cf 93       	push	r28
    e6d0:	df 93       	push	r29
    e6d2:	1f 92       	push	r1
    e6d4:	1f 92       	push	r1
    e6d6:	cd b7       	in	r28, 0x3d	; 61
    e6d8:	de b7       	in	r29, 0x3e	; 62
    e6da:	8b 01       	movw	r16, r22
    e6dc:	9a 83       	std	Y+2, r25	; 0x02
    e6de:	89 83       	std	Y+1, r24	; 0x01
    e6e0:	ce 01       	movw	r24, r28
    e6e2:	01 96       	adiw	r24, 0x01	; 1
    e6e4:	ed df       	rcall	.-38     	; 0xe6c0 <_ZNK5EERefdeEv>
    e6e6:	f8 01       	movw	r30, r16
    e6e8:	80 83       	st	Z, r24
    e6ea:	c8 01       	movw	r24, r16
    e6ec:	0f 90       	pop	r0
    e6ee:	0f 90       	pop	r0
    e6f0:	df 91       	pop	r29
    e6f2:	cf 91       	pop	r28
    e6f4:	1f 91       	pop	r17
    e6f6:	0f 91       	pop	r16
    e6f8:	08 95       	ret

0000e6fa <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>:
    e6fa:	af 92       	push	r10
    e6fc:	bf 92       	push	r11
    e6fe:	cf 92       	push	r12
    e700:	df 92       	push	r13
    e702:	ef 92       	push	r14
    e704:	ff 92       	push	r15
    e706:	0f 93       	push	r16
    e708:	1f 93       	push	r17
    e70a:	cf 93       	push	r28
    e70c:	df 93       	push	r29
    e70e:	1f 92       	push	r1
    e710:	1f 92       	push	r1
    e712:	cd b7       	in	r28, 0x3d	; 61
    e714:	de b7       	in	r29, 0x3e	; 62
    e716:	8b 01       	movw	r16, r22
    e718:	6b 01       	movw	r12, r22
    e71a:	24 e0       	ldi	r18, 0x04	; 4
    e71c:	c2 0e       	add	r12, r18
    e71e:	d1 1c       	adc	r13, r1
    e720:	7b 01       	movw	r14, r22
    e722:	5c 01       	movw	r10, r24
    e724:	a6 1a       	sub	r10, r22
    e726:	b7 0a       	sbc	r11, r23
    e728:	c5 01       	movw	r24, r10
    e72a:	8e 0d       	add	r24, r14
    e72c:	9f 1d       	adc	r25, r15
    e72e:	9a 83       	std	Y+2, r25	; 0x02
    e730:	89 83       	std	Y+1, r24	; 0x01
    e732:	ce 01       	movw	r24, r28
    e734:	01 96       	adiw	r24, 0x01	; 1
    e736:	c4 df       	rcall	.-120    	; 0xe6c0 <_ZNK5EERefdeEv>
    e738:	f7 01       	movw	r30, r14
    e73a:	81 93       	st	Z+, r24
    e73c:	7f 01       	movw	r14, r30
    e73e:	ec 15       	cp	r30, r12
    e740:	fd 05       	cpc	r31, r13
    e742:	91 f7       	brne	.-28     	; 0xe728 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4+0x2e>
    e744:	c8 01       	movw	r24, r16
    e746:	0f 90       	pop	r0
    e748:	0f 90       	pop	r0
    e74a:	df 91       	pop	r29
    e74c:	cf 91       	pop	r28
    e74e:	1f 91       	pop	r17
    e750:	0f 91       	pop	r16
    e752:	ff 90       	pop	r15
    e754:	ef 90       	pop	r14
    e756:	df 90       	pop	r13
    e758:	cf 90       	pop	r12
    e75a:	bf 90       	pop	r11
    e75c:	af 90       	pop	r10
    e75e:	08 95       	ret

0000e760 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>:
    e760:	af 92       	push	r10
    e762:	bf 92       	push	r11
    e764:	cf 92       	push	r12
    e766:	df 92       	push	r13
    e768:	ef 92       	push	r14
    e76a:	ff 92       	push	r15
    e76c:	0f 93       	push	r16
    e76e:	1f 93       	push	r17
    e770:	cf 93       	push	r28
    e772:	df 93       	push	r29
    e774:	1f 92       	push	r1
    e776:	1f 92       	push	r1
    e778:	cd b7       	in	r28, 0x3d	; 61
    e77a:	de b7       	in	r29, 0x3e	; 62
    e77c:	8b 01       	movw	r16, r22
    e77e:	6b 01       	movw	r12, r22
    e780:	2b e0       	ldi	r18, 0x0B	; 11
    e782:	c2 0e       	add	r12, r18
    e784:	d1 1c       	adc	r13, r1
    e786:	7b 01       	movw	r14, r22
    e788:	5c 01       	movw	r10, r24
    e78a:	a6 1a       	sub	r10, r22
    e78c:	b7 0a       	sbc	r11, r23
    e78e:	c5 01       	movw	r24, r10
    e790:	8e 0d       	add	r24, r14
    e792:	9f 1d       	adc	r25, r15
    e794:	9a 83       	std	Y+2, r25	; 0x02
    e796:	89 83       	std	Y+1, r24	; 0x01
    e798:	ce 01       	movw	r24, r28
    e79a:	01 96       	adiw	r24, 0x01	; 1
    e79c:	91 df       	rcall	.-222    	; 0xe6c0 <_ZNK5EERefdeEv>
    e79e:	f7 01       	movw	r30, r14
    e7a0:	81 93       	st	Z+, r24
    e7a2:	7f 01       	movw	r14, r30
    e7a4:	ec 15       	cp	r30, r12
    e7a6:	fd 05       	cpc	r31, r13
    e7a8:	91 f7       	brne	.-28     	; 0xe78e <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15+0x2e>
    e7aa:	c8 01       	movw	r24, r16
    e7ac:	0f 90       	pop	r0
    e7ae:	0f 90       	pop	r0
    e7b0:	df 91       	pop	r29
    e7b2:	cf 91       	pop	r28
    e7b4:	1f 91       	pop	r17
    e7b6:	0f 91       	pop	r16
    e7b8:	ff 90       	pop	r15
    e7ba:	ef 90       	pop	r14
    e7bc:	df 90       	pop	r13
    e7be:	cf 90       	pop	r12
    e7c0:	bf 90       	pop	r11
    e7c2:	af 90       	pop	r10
    e7c4:	08 95       	ret

0000e7c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
    e7c6:	0f 93       	push	r16
    e7c8:	1f 93       	push	r17
    e7ca:	cf 93       	push	r28
    e7cc:	df 93       	push	r29
    e7ce:	1f 92       	push	r1
    e7d0:	1f 92       	push	r1
    e7d2:	cd b7       	in	r28, 0x3d	; 61
    e7d4:	de b7       	in	r29, 0x3e	; 62
    e7d6:	8b 01       	movw	r16, r22
    e7d8:	fb 01       	movw	r30, r22
    e7da:	60 81       	ld	r22, Z
    e7dc:	9a 83       	std	Y+2, r25	; 0x02
    e7de:	89 83       	std	Y+1, r24	; 0x01
    e7e0:	ce 01       	movw	r24, r28
    e7e2:	01 96       	adiw	r24, 0x01	; 1
    e7e4:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    e7e8:	c8 01       	movw	r24, r16
    e7ea:	0f 90       	pop	r0
    e7ec:	0f 90       	pop	r0
    e7ee:	df 91       	pop	r29
    e7f0:	cf 91       	pop	r28
    e7f2:	1f 91       	pop	r17
    e7f4:	0f 91       	pop	r16
    e7f6:	08 95       	ret

0000e7f8 <_Z11Check_Phasev>:
    e7f8:	cf 93       	push	r28
    e7fa:	87 e3       	ldi	r24, 0x37	; 55
    e7fc:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    e800:	89 2b       	or	r24, r25
    e802:	69 f0       	breq	.+26     	; 0xe81e <_Z11Check_Phasev+0x26>
    e804:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e808:	81 30       	cpi	r24, 0x01	; 1
    e80a:	31 f4       	brne	.+12     	; 0xe818 <_Z11Check_Phasev+0x20>
    e80c:	65 ed       	ldi	r22, 0xD5	; 213
    e80e:	75 e2       	ldi	r23, 0x25	; 37
    e810:	86 ec       	ldi	r24, 0xC6	; 198
    e812:	94 e1       	ldi	r25, 0x14	; 20
    e814:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e818:	10 92 e4 0c 	sts	0x0CE4, r1	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    e81c:	2f c0       	rjmp	.+94     	; 0xe87c <_Z11Check_Phasev+0x84>
    e81e:	80 91 e4 0c 	lds	r24, 0x0CE4	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
    e822:	8d 33       	cpi	r24, 0x3D	; 61
    e824:	38 f0       	brcs	.+14     	; 0xe834 <_Z11Check_Phasev+0x3c>
    e826:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e82a:	81 30       	cpi	r24, 0x01	; 1
    e82c:	f9 f4       	brne	.+62     	; 0xe86c <_Z11Check_Phasev+0x74>
    e82e:	65 ec       	ldi	r22, 0xC5	; 197
    e830:	75 e2       	ldi	r23, 0x25	; 37
    e832:	18 c0       	rjmp	.+48     	; 0xe864 <_Z11Check_Phasev+0x6c>
    e834:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
    e838:	8d 33       	cpi	r24, 0x3D	; 61
    e83a:	d0 f4       	brcc	.+52     	; 0xe870 <_Z11Check_Phasev+0x78>
    e83c:	87 e3       	ldi	r24, 0x37	; 55
    e83e:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    e842:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    e846:	89 2b       	or	r24, r25
    e848:	49 f0       	breq	.+18     	; 0xe85c <_Z11Check_Phasev+0x64>
    e84a:	c1 30       	cpi	r28, 0x01	; 1
    e84c:	b9 f4       	brne	.+46     	; 0xe87c <_Z11Check_Phasev+0x84>
    e84e:	6f ea       	ldi	r22, 0xAF	; 175
    e850:	75 e2       	ldi	r23, 0x25	; 37
    e852:	86 ec       	ldi	r24, 0xC6	; 198
    e854:	94 e1       	ldi	r25, 0x14	; 20
    e856:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e85a:	11 c0       	rjmp	.+34     	; 0xe87e <_Z11Check_Phasev+0x86>
    e85c:	c1 30       	cpi	r28, 0x01	; 1
    e85e:	31 f4       	brne	.+12     	; 0xe86c <_Z11Check_Phasev+0x74>
    e860:	6d e9       	ldi	r22, 0x9D	; 157
    e862:	75 e2       	ldi	r23, 0x25	; 37
    e864:	86 ec       	ldi	r24, 0xC6	; 198
    e866:	94 e1       	ldi	r25, 0x14	; 20
    e868:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e86c:	c0 e0       	ldi	r28, 0x00	; 0
    e86e:	07 c0       	rjmp	.+14     	; 0xe87e <_Z11Check_Phasev+0x86>
    e870:	6b e8       	ldi	r22, 0x8B	; 139
    e872:	75 e2       	ldi	r23, 0x25	; 37
    e874:	86 ec       	ldi	r24, 0xC6	; 198
    e876:	94 e1       	ldi	r25, 0x14	; 20
    e878:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e87c:	c1 e0       	ldi	r28, 0x01	; 1
    e87e:	8c 2f       	mov	r24, r28
    e880:	cf 91       	pop	r28
    e882:	08 95       	ret

0000e884 <_Z9Check_Simc>:
    e884:	0f 93       	push	r16
    e886:	cf 93       	push	r28
    e888:	df 93       	push	r29
    e88a:	1f 92       	push	r1
    e88c:	1f 92       	push	r1
    e88e:	cd b7       	in	r28, 0x3d	; 61
    e890:	de b7       	in	r29, 0x3e	; 62
    e892:	90 91 de 0c 	lds	r25, 0x0CDE	; 0x800cde <_ZZ9Check_SimcE7counter>
    e896:	9f 5f       	subi	r25, 0xFF	; 255
    e898:	90 93 de 0c 	sts	0x0CDE, r25	; 0x800cde <_ZZ9Check_SimcE7counter>
    e89c:	83 30       	cpi	r24, 0x03	; 3
    e89e:	09 f0       	breq	.+2      	; 0xe8a2 <_Z9Check_Simc+0x1e>
    e8a0:	62 c0       	rjmp	.+196    	; 0xe966 <_Z9Check_Simc+0xe2>
    e8a2:	80 91 6b 14 	lds	r24, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
    e8a6:	81 30       	cpi	r24, 0x01	; 1
    e8a8:	d1 f5       	brne	.+116    	; 0xe91e <_Z9Check_Simc+0x9a>
    e8aa:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    e8ae:	80 7f       	andi	r24, 0xF0	; 240
    e8b0:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    e8b4:	1a 82       	std	Y+2, r1	; 0x02
    e8b6:	19 82       	std	Y+1, r1	; 0x01
    e8b8:	8a e1       	ldi	r24, 0x1A	; 26
    e8ba:	89 83       	std	Y+1, r24	; 0x01
    e8bc:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
    e8c0:	be 01       	movw	r22, r28
    e8c2:	6f 5f       	subi	r22, 0xFF	; 255
    e8c4:	7f 4f       	sbci	r23, 0xFF	; 255
    e8c6:	83 e8       	ldi	r24, 0x83	; 131
    e8c8:	96 e1       	ldi	r25, 0x16	; 22
    e8ca:	0e 94 5c d5 	call	0x1aab8	; 0x1aab8 <_ZN5Print7printlnEPKc>
    e8ce:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
    e8d2:	6f e7       	ldi	r22, 0x7F	; 127
    e8d4:	75 e2       	ldi	r23, 0x25	; 37
    e8d6:	83 e8       	ldi	r24, 0x83	; 131
    e8d8:	96 e1       	ldi	r25, 0x16	; 22
    e8da:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e8de:	01 e0       	ldi	r16, 0x01	; 1
    e8e0:	20 e1       	ldi	r18, 0x10	; 16
    e8e2:	37 e2       	ldi	r19, 0x27	; 39
    e8e4:	40 e0       	ldi	r20, 0x00	; 0
    e8e6:	50 e0       	ldi	r21, 0x00	; 0
    e8e8:	6e e1       	ldi	r22, 0x1E	; 30
    e8ea:	73 e0       	ldi	r23, 0x03	; 3
    e8ec:	80 e0       	ldi	r24, 0x00	; 0
    e8ee:	90 e0       	ldi	r25, 0x00	; 0
    e8f0:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    e8f4:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
    e8f8:	6a e7       	ldi	r22, 0x7A	; 122
    e8fa:	75 e2       	ldi	r23, 0x25	; 37
    e8fc:	83 e8       	ldi	r24, 0x83	; 131
    e8fe:	96 e1       	ldi	r25, 0x16	; 22
    e900:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e904:	02 e0       	ldi	r16, 0x02	; 2
    e906:	28 eb       	ldi	r18, 0xB8	; 184
    e908:	3b e0       	ldi	r19, 0x0B	; 11
    e90a:	40 e0       	ldi	r20, 0x00	; 0
    e90c:	50 e0       	ldi	r21, 0x00	; 0
    e90e:	6e e1       	ldi	r22, 0x1E	; 30
    e910:	73 e0       	ldi	r23, 0x03	; 3
    e912:	80 e0       	ldi	r24, 0x00	; 0
    e914:	90 e0       	ldi	r25, 0x00	; 0
    e916:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    e91a:	0e 94 21 69 	call	0xd242	; 0xd242 <_Z8Gsm_Initv>
    e91e:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
    e922:	61 e7       	ldi	r22, 0x71	; 113
    e924:	75 e2       	ldi	r23, 0x25	; 37
    e926:	83 e8       	ldi	r24, 0x83	; 131
    e928:	96 e1       	ldi	r25, 0x16	; 22
    e92a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    e92e:	02 e0       	ldi	r16, 0x02	; 2
    e930:	20 ed       	ldi	r18, 0xD0	; 208
    e932:	37 e0       	ldi	r19, 0x07	; 7
    e934:	40 e0       	ldi	r20, 0x00	; 0
    e936:	50 e0       	ldi	r21, 0x00	; 0
    e938:	6e e1       	ldi	r22, 0x1E	; 30
    e93a:	73 e0       	ldi	r23, 0x03	; 3
    e93c:	80 e0       	ldi	r24, 0x00	; 0
    e93e:	90 e0       	ldi	r25, 0x00	; 0
    e940:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    e944:	81 11       	cpse	r24, r1
    e946:	0a c0       	rjmp	.+20     	; 0xe95c <_Z9Check_Simc+0xd8>
    e948:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
    e94c:	80 7f       	andi	r24, 0xF0	; 240
    e94e:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
    e952:	81 e0       	ldi	r24, 0x01	; 1
    e954:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    e958:	80 e0       	ldi	r24, 0x00	; 0
    e95a:	05 c0       	rjmp	.+10     	; 0xe966 <_Z9Check_Simc+0xe2>
    e95c:	82 e0       	ldi	r24, 0x02	; 2
    e95e:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    e962:	81 e0       	ldi	r24, 0x01	; 1
    e964:	00 c0       	rjmp	.+0      	; 0xe966 <_Z9Check_Simc+0xe2>
    e966:	0f 90       	pop	r0
    e968:	0f 90       	pop	r0
    e96a:	df 91       	pop	r29
    e96c:	cf 91       	pop	r28
    e96e:	0f 91       	pop	r16
    e970:	08 95       	ret

0000e972 <_Z31Keeps_Monitor_Server_Connectionv>:
{
	static uint32_t server_wait_timer;
	static unsigned char timer_count,connect_count,ping_timer,ping_req_timer;
	if(_sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)
	{
		ping_req_timer = 100;
    e972:	84 e6       	ldi	r24, 0x64	; 100
    e974:	80 93 dd 0c 	sts	0x0CDD, r24	; 0x800cdd <_ZZ31Keeps_Monitor_Server_ConnectionvE14ping_req_timer>
	else
	{
		ping_req_timer = 100;
	}
				
	if(!_sRuble_Parameters.Wait_Server_Not_Reachable)
    e978:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    e97c:	81 11       	cpse	r24, r1
    e97e:	40 c0       	rjmp	.+128    	; 0xea00 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
	{
		if(ping_timer > ping_req_timer)
    e980:	80 91 dc 0c 	lds	r24, 0x0CDC	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e984:	85 36       	cpi	r24, 0x65	; 101
    e986:	a8 f1       	brcs	.+106    	; 0xe9f2 <_Z31Keeps_Monitor_Server_Connectionv+0x80>
		{
			ping_timer = 0;
    e988:	10 92 dc 0c 	sts	0x0CDC, r1	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
			if(!_kMQTT_LOOP())
    e98c:	0e 94 4b 6c 	call	0xd896	; 0xd896 <_Z9MQTT_Loopv>
    e990:	81 11       	cpse	r24, r1
    e992:	32 c0       	rjmp	.+100    	; 0xe9f8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
			{
				_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
    e994:	82 e0       	ldi	r24, 0x02	; 2
    e996:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
				_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
    e99a:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    e99e:	8b 7f       	andi	r24, 0xFB	; 251
    e9a0:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				if(connect_count < _kRETRY_TO_CONNECT_SERVER)
    e9a4:	80 91 db 0c 	lds	r24, 0x0CDB	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e9a8:	83 30       	cpi	r24, 0x03	; 3
    e9aa:	78 f4       	brcc	.+30     	; 0xe9ca <_Z31Keeps_Monitor_Server_Connectionv+0x58>
				{
					_sRuble_Parameters.Wait_Server_Not_Reachable = _kRESET;
    e9ac:	10 92 68 14 	sts	0x1468, r1	; 0x801468 <_sRuble_Parameters+0xba>
					if(!Ping_to_Server())
    e9b0:	0e 94 29 81 	call	0x10252	; 0x10252 <_Z14Ping_to_Serverv>
    e9b4:	81 11       	cpse	r24, r1
    e9b6:	06 c0       	rjmp	.+12     	; 0xe9c4 <_Z31Keeps_Monitor_Server_Connectionv+0x52>
					{
						connect_count++;
    e9b8:	80 91 db 0c 	lds	r24, 0x0CDB	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e9bc:	8f 5f       	subi	r24, 0xFF	; 255
    e9be:	80 93 db 0c 	sts	0x0CDB, r24	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e9c2:	1a c0       	rjmp	.+52     	; 0xe9f8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
					}
					else
					{
						connect_count = _kRESET;
    e9c4:	10 92 db 0c 	sts	0x0CDB, r1	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e9c8:	17 c0       	rjmp	.+46     	; 0xe9f8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
					}
				}
				else
				{
					if(_sRuble_Parameters.Wait_Server_Not_Reachable != _kSET)
    e9ca:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    e9ce:	81 30       	cpi	r24, 0x01	; 1
    e9d0:	b9 f0       	breq	.+46     	; 0xea00 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
					{
						_sRuble_Parameters.Wait_Server_Not_Reachable = _kSET;
    e9d2:	81 e0       	ldi	r24, 0x01	; 1
    e9d4:	80 93 68 14 	sts	0x1468, r24	; 0x801468 <_sRuble_Parameters+0xba>
						server_wait_timer = _kWAIT_DUE_TO_SERVER_NOT_RECHABLE;
    e9d8:	8e e1       	ldi	r24, 0x1E	; 30
    e9da:	90 e0       	ldi	r25, 0x00	; 0
    e9dc:	a0 e0       	ldi	r26, 0x00	; 0
    e9de:	b0 e0       	ldi	r27, 0x00	; 0
    e9e0:	80 93 d7 0c 	sts	0x0CD7, r24	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e9e4:	90 93 d8 0c 	sts	0x0CD8, r25	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e9e8:	a0 93 d9 0c 	sts	0x0CD9, r26	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e9ec:	b0 93 da 0c 	sts	0x0CDA, r27	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e9f0:	03 c0       	rjmp	.+6      	; 0xe9f8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
				}
			}
		}
		else
		{
			ping_timer++;
    e9f2:	8f 5f       	subi	r24, 0xFF	; 255
    e9f4:	80 93 dc 0c 	sts	0x0CDC, r24	; 0x800cdc <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
		}
	}
						
	if(_sRuble_Parameters.Wait_Server_Not_Reachable)  /* don't try again and again to connect the server have to wait for some time */
    e9f8:	80 91 68 14 	lds	r24, 0x1468	; 0x801468 <_sRuble_Parameters+0xba>
    e9fc:	88 23       	and	r24, r24
    e9fe:	e1 f0       	breq	.+56     	; 0xea38 <_Z31Keeps_Monitor_Server_Connectionv+0xc6>
	{
		if(server_wait_timer)
    ea00:	80 91 d7 0c 	lds	r24, 0x0CD7	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    ea04:	90 91 d8 0c 	lds	r25, 0x0CD8	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    ea08:	a0 91 d9 0c 	lds	r26, 0x0CD9	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    ea0c:	b0 91 da 0c 	lds	r27, 0x0CDA	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    ea10:	00 97       	sbiw	r24, 0x00	; 0
    ea12:	a1 05       	cpc	r26, r1
    ea14:	b1 05       	cpc	r27, r1
    ea16:	61 f0       	breq	.+24     	; 0xea30 <_Z31Keeps_Monitor_Server_Connectionv+0xbe>
		{
			server_wait_timer--;
    ea18:	01 97       	sbiw	r24, 0x01	; 1
    ea1a:	a1 09       	sbc	r26, r1
    ea1c:	b1 09       	sbc	r27, r1
    ea1e:	80 93 d7 0c 	sts	0x0CD7, r24	; 0x800cd7 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    ea22:	90 93 d8 0c 	sts	0x0CD8, r25	; 0x800cd8 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    ea26:	a0 93 d9 0c 	sts	0x0CD9, r26	; 0x800cd9 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    ea2a:	b0 93 da 0c 	sts	0x0CDA, r27	; 0x800cda <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    ea2e:	08 95       	ret
		}
		else
		{
			_sRuble_Parameters.Wait_Server_Not_Reachable = _kRESET;
    ea30:	10 92 68 14 	sts	0x1468, r1	; 0x801468 <_sRuble_Parameters+0xba>
			connect_count = _kRESET;
    ea34:	10 92 db 0c 	sts	0x0CDB, r1	; 0x800cdb <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    ea38:	08 95       	ret

0000ea3a <_Z19Pump_Run_Monitoringv>:
	return;
}


char Pump_Run_Monitoring(void)
{
    ea3a:	cf 92       	push	r12
    ea3c:	df 92       	push	r13
    ea3e:	ef 92       	push	r14
    ea40:	ff 92       	push	r15
    ea42:	cf 93       	push	r28
	if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    ea44:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
    ea48:	81 11       	cpse	r24, r1
    ea4a:	50 c0       	rjmp	.+160    	; 0xeaec <_Z19Pump_Run_Monitoringv+0xb2>
	{
		if(_sRuble_Parameters.By_Pass_CT == _kSET)
    ea4c:	c0 91 79 14 	lds	r28, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
    ea50:	c1 30       	cpi	r28, 0x01	; 1
    ea52:	09 f0       	breq	.+2      	; 0xea56 <_Z19Pump_Run_Monitoringv+0x1c>
    ea54:	42 c0       	rjmp	.+132    	; 0xeada <_Z19Pump_Run_Monitoringv+0xa0>
		{
			if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current) - ((_sPump_Parameter.Pump_Nominal_Current/100) * 90)))   // DEMO ONLY
    ea56:	c0 90 a4 13 	lds	r12, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    ea5a:	d0 90 a5 13 	lds	r13, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    ea5e:	e0 90 a6 13 	lds	r14, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    ea62:	f0 90 a7 13 	lds	r15, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    ea66:	20 e0       	ldi	r18, 0x00	; 0
    ea68:	30 e0       	ldi	r19, 0x00	; 0
    ea6a:	48 ec       	ldi	r20, 0xC8	; 200
    ea6c:	52 e4       	ldi	r21, 0x42	; 66
    ea6e:	c7 01       	movw	r24, r14
    ea70:	b6 01       	movw	r22, r12
    ea72:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
    ea76:	20 e0       	ldi	r18, 0x00	; 0
    ea78:	30 e0       	ldi	r19, 0x00	; 0
    ea7a:	44 eb       	ldi	r20, 0xB4	; 180
    ea7c:	52 e4       	ldi	r21, 0x42	; 66
    ea7e:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    ea82:	9b 01       	movw	r18, r22
    ea84:	ac 01       	movw	r20, r24
    ea86:	c7 01       	movw	r24, r14
    ea88:	b6 01       	movw	r22, r12
    ea8a:	0e 94 ec d0 	call	0x1a1d8	; 0x1a1d8 <__subsf3>
    ea8e:	9b 01       	movw	r18, r22
    ea90:	ac 01       	movw	r20, r24
    ea92:	60 91 a8 13 	lds	r22, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    ea96:	70 91 a9 13 	lds	r23, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    ea9a:	80 91 aa 13 	lds	r24, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    ea9e:	90 91 ab 13 	lds	r25, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    eaa2:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
    eaa6:	18 16       	cp	r1, r24
    eaa8:	24 f4       	brge	.+8      	; 0xeab2 <_Z19Pump_Run_Monitoringv+0x78>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
    eaaa:	c0 93 a1 14 	sts	0x14A1, r28	; 0x8014a1 <_sRuble_Parameters+0xf3>
				_sRuble_Parameters.Pump_On_Flag = _ePUMP_ON;	
    eaae:	82 e0       	ldi	r24, 0x02	; 2
    eab0:	03 c0       	rjmp	.+6      	; 0xeab8 <_Z19Pump_Run_Monitoringv+0x7e>
			}
			else
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
    eab2:	10 92 a1 14 	sts	0x14A1, r1	; 0x8014a1 <_sRuble_Parameters+0xf3>
				_sRuble_Parameters.Pump_On_Flag = _ePUMP_OFF;
    eab6:	84 e0       	ldi	r24, 0x04	; 4
    eab8:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    eabc:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    eac0:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    eac4:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    eac8:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    eacc:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    ead0:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    ead4:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
    ead8:	20 c0       	rjmp	.+64     	; 0xeb1a <_Z19Pump_Run_Monitoringv+0xe0>
			}
		}
		else
		{
			if(!_kGPIO_GET(_kPUMP_1))
    eada:	8a e0       	ldi	r24, 0x0A	; 10
    eadc:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    eae0:	89 2b       	or	r24, r25
    eae2:	41 f4       	brne	.+16     	; 0xeaf4 <_Z19Pump_Run_Monitoringv+0xba>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
    eae4:	81 e0       	ldi	r24, 0x01	; 1
    eae6:	80 93 a1 14 	sts	0x14A1, r24	; 0x8014a1 <_sRuble_Parameters+0xf3>
    eaea:	17 c0       	rjmp	.+46     	; 0xeb1a <_Z19Pump_Run_Monitoringv+0xe0>
			}
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
    eaec:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    eaf0:	81 30       	cpi	r24, 0x01	; 1
    eaf2:	19 f0       	breq	.+6      	; 0xeafa <_Z19Pump_Run_Monitoringv+0xc0>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
			}
			else
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
    eaf4:	10 92 a1 14 	sts	0x14A1, r1	; 0x8014a1 <_sRuble_Parameters+0xf3>
    eaf8:	10 c0       	rjmp	.+32     	; 0xeb1a <_Z19Pump_Run_Monitoringv+0xe0>
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
		(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_STATUS) == _ePUMP_STATUS)
    eafa:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    eafe:	90 e0       	ldi	r25, 0x00	; 0
    eb00:	02 97       	sbiw	r24, 0x02	; 2
    eb02:	2b e0       	ldi	r18, 0x0B	; 11
    eb04:	28 9f       	mul	r18, r24
    eb06:	f0 01       	movw	r30, r0
    eb08:	29 9f       	mul	r18, r25
    eb0a:	f0 0d       	add	r31, r0
    eb0c:	11 24       	eor	r1, r1
    eb0e:	ec 50       	subi	r30, 0x0C	; 12
    eb10:	f4 4f       	sbci	r31, 0xF4	; 244
			}
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
    eb12:	80 85       	ldd	r24, Z+8	; 0x08
    eb14:	86 ff       	sbrs	r24, 6
    eb16:	ee cf       	rjmp	.-36     	; 0xeaf4 <_Z19Pump_Run_Monitoringv+0xba>
    eb18:	e5 cf       	rjmp	.-54     	; 0xeae4 <_Z19Pump_Run_Monitoringv+0xaa>
		{
			_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
		}
		
	}
}
    eb1a:	cf 91       	pop	r28
    eb1c:	ff 90       	pop	r15
    eb1e:	ef 90       	pop	r14
    eb20:	df 90       	pop	r13
    eb22:	cf 90       	pop	r12
    eb24:	08 95       	ret

0000eb26 <_Z11Debug_Checkv>:


unsigned char Debug_Check(void)
{
	if(_kGPIO_GET(_kDEBUG_PIN))
    eb26:	88 e3       	ldi	r24, 0x38	; 56
    eb28:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    eb2c:	89 2b       	or	r24, r25
    eb2e:	21 f0       	breq	.+8      	; 0xeb38 <_Z11Debug_Checkv+0x12>
	{
		_sRuble_Parameters.Debug_Mode = _kRESET;
    eb30:	10 92 ac 14 	sts	0x14AC, r1	; 0x8014ac <_sRuble_Parameters+0xfe>
		return	1;	
    eb34:	81 e0       	ldi	r24, 0x01	; 1
    eb36:	08 95       	ret
	}
	
	_sRuble_Parameters.Debug_Mode = _kSET;
    eb38:	81 e0       	ldi	r24, 0x01	; 1
    eb3a:	80 93 ac 14 	sts	0x14AC, r24	; 0x8014ac <_sRuble_Parameters+0xfe>
	return 0;
    eb3e:	80 e0       	ldi	r24, 0x00	; 0
}
    eb40:	08 95       	ret

0000eb42 <_Z8My_Delayj>:


void My_Delay(unsigned int my_delay)
{
    eb42:	ef 92       	push	r14
    eb44:	ff 92       	push	r15
    eb46:	0f 93       	push	r16
    eb48:	1f 93       	push	r17
    eb4a:	cf 93       	push	r28
	for(unsigned char i=0; i< my_delay/1000; i++)
    eb4c:	68 ee       	ldi	r22, 0xE8	; 232
    eb4e:	73 e0       	ldi	r23, 0x03	; 3
    eb50:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
    eb54:	8b 01       	movw	r16, r22
    eb56:	c0 e0       	ldi	r28, 0x00	; 0
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    eb58:	80 ed       	ldi	r24, 0xD0	; 208
    eb5a:	e8 2e       	mov	r14, r24
    eb5c:	8f e0       	ldi	r24, 0x0F	; 15
    eb5e:	f8 2e       	mov	r15, r24
}


void My_Delay(unsigned int my_delay)
{
	for(unsigned char i=0; i< my_delay/1000; i++)
    eb60:	8c 2f       	mov	r24, r28
    eb62:	90 e0       	ldi	r25, 0x00	; 0
    eb64:	80 17       	cp	r24, r16
    eb66:	91 07       	cpc	r25, r17
    eb68:	f0 f4       	brcc	.+60     	; 0xeba6 <_Z8My_Delayj+0x64>
	{
		delay(1000);
    eb6a:	68 ee       	ldi	r22, 0xE8	; 232
    eb6c:	73 e0       	ldi	r23, 0x03	; 3
    eb6e:	80 e0       	ldi	r24, 0x00	; 0
    eb70:	90 e0       	ldi	r25, 0x00	; 0
    eb72:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
		
		if(Subscribed_data_check())
    eb76:	55 dd       	rcall	.-1366   	; 0xe622 <_Z21Subscribed_data_checkv>
    eb78:	88 23       	and	r24, r24
    eb7a:	99 f0       	breq	.+38     	; 0xeba2 <_Z8My_Delayj+0x60>
		{
			if(Seperate_Out_Sub_Data())
    eb7c:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
    eb80:	88 23       	and	r24, r24
    eb82:	79 f0       	breq	.+30     	; 0xeba2 <_Z8My_Delayj+0x60>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    eb84:	f7 01       	movw	r30, r14
    eb86:	01 90       	ld	r0, Z+
    eb88:	00 20       	and	r0, r0
    eb8a:	e9 f7       	brne	.-6      	; 0xeb86 <_Z8My_Delayj+0x44>
    eb8c:	31 97       	sbiw	r30, 0x01	; 1
    eb8e:	af 01       	movw	r20, r30
    eb90:	40 5d       	subi	r20, 0xD0	; 208
    eb92:	5f 40       	sbci	r21, 0x0F	; 15
    eb94:	21 e0       	ldi	r18, 0x01	; 1
    eb96:	60 ed       	ldi	r22, 0xD0	; 208
    eb98:	7f e0       	ldi	r23, 0x0F	; 15
    eb9a:	82 e6       	ldi	r24, 0x62	; 98
    eb9c:	9f e0       	ldi	r25, 0x0F	; 15
    eb9e:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
}


void My_Delay(unsigned int my_delay)
{
	for(unsigned char i=0; i< my_delay/1000; i++)
    eba2:	cf 5f       	subi	r28, 0xFF	; 255
    eba4:	dd cf       	rjmp	.-70     	; 0xeb60 <_Z8My_Delayj+0x1e>
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
			}
		}
	}
}	
    eba6:	cf 91       	pop	r28
    eba8:	1f 91       	pop	r17
    ebaa:	0f 91       	pop	r16
    ebac:	ff 90       	pop	r15
    ebae:	ef 90       	pop	r14
    ebb0:	08 95       	ret

0000ebb2 <_Z19Calibration_Of_Pumpv>:
	
}


int Calibration_Of_Pump(void)
{
    ebb2:	2f 92       	push	r2
    ebb4:	3f 92       	push	r3
    ebb6:	4f 92       	push	r4
    ebb8:	5f 92       	push	r5
    ebba:	6f 92       	push	r6
    ebbc:	7f 92       	push	r7
    ebbe:	8f 92       	push	r8
    ebc0:	9f 92       	push	r9
    ebc2:	af 92       	push	r10
    ebc4:	bf 92       	push	r11
    ebc6:	cf 92       	push	r12
    ebc8:	df 92       	push	r13
    ebca:	ef 92       	push	r14
    ebcc:	ff 92       	push	r15
    ebce:	0f 93       	push	r16
    ebd0:	1f 93       	push	r17
    ebd2:	cf 93       	push	r28
    ebd4:	df 93       	push	r29
    ebd6:	cd b7       	in	r28, 0x3d	; 61
    ebd8:	de b7       	in	r29, 0x3e	; 62
    ebda:	c0 54       	subi	r28, 0x40	; 64
    ebdc:	d1 09       	sbc	r29, r1
    ebde:	0f b6       	in	r0, 0x3f	; 63
    ebe0:	f8 94       	cli
    ebe2:	de bf       	out	0x3e, r29	; 62
    ebe4:	0f be       	out	0x3f, r0	; 63
    ebe6:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_topic[40];
	
	
	
	
	if(_sRuble_Parameters.Do_Calibration == _kSET)
    ebe8:	60 91 67 14 	lds	r22, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    ebec:	61 30       	cpi	r22, 0x01	; 1
    ebee:	09 f0       	breq	.+2      	; 0xebf2 <_Z19Calibration_Of_Pumpv+0x40>
    ebf0:	ec c0       	rjmp	.+472    	; 0xedca <_Z19Calibration_Of_Pumpv+0x218>
	{
		_sRuble_Parameters.Do_Calibration = _kRESET;
    ebf2:	10 92 67 14 	sts	0x1467, r1	; 0x801467 <_sRuble_Parameters+0xb9>
		
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    ebf6:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    ebfa:	62 30       	cpi	r22, 0x02	; 2
    ebfc:	d8 f1       	brcs	.+118    	; 0xec74 <_Z19Calibration_Of_Pumpv+0xc2>
		{
			memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    ebfe:	84 ed       	ldi	r24, 0xD4	; 212
    ec00:	93 e0       	ldi	r25, 0x03	; 3
    ec02:	e0 ed       	ldi	r30, 0xD0	; 208
    ec04:	ff e0       	ldi	r31, 0x0F	; 15
    ec06:	df 01       	movw	r26, r30
    ec08:	9c 01       	movw	r18, r24
    ec0a:	1d 92       	st	X+, r1
    ec0c:	21 50       	subi	r18, 0x01	; 1
    ec0e:	30 40       	sbci	r19, 0x00	; 0
    ec10:	e1 f7       	brne	.-8      	; 0xec0a <_Z19Calibration_Of_Pumpv+0x58>
			if(Wireless_Pump_On_Off(_eDO_CALIBRATION,_sRuble_Parameters.Pump_Selected_For_Irrigation - 2))
    ec12:	62 50       	subi	r22, 0x02	; 2
    ec14:	81 e0       	ldi	r24, 0x01	; 1
    ec16:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
    ec1a:	88 23       	and	r24, r24
    ec1c:	19 f0       	breq	.+6      	; 0xec24 <_Z19Calibration_Of_Pumpv+0x72>
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");
    ec1e:	62 e4       	ldi	r22, 0x42	; 66
    ec20:	75 e0       	ldi	r23, 0x05	; 5
    ec22:	02 c0       	rjmp	.+4      	; 0xec28 <_Z19Calibration_Of_Pumpv+0x76>
			}
			else
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    ec24:	66 e5       	ldi	r22, 0x56	; 86
    ec26:	75 e0       	ldi	r23, 0x05	; 5
    ec28:	80 ed       	ldi	r24, 0xD0	; 208
    ec2a:	9f e0       	ldi	r25, 0x0F	; 15
    ec2c:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
			}
			
			memset((char *)temp_topic,0,sizeof(temp_topic));
    ec30:	8e 01       	movw	r16, r28
    ec32:	0f 5f       	subi	r16, 0xFF	; 255
    ec34:	1f 4f       	sbci	r17, 0xFF	; 255
    ec36:	88 e2       	ldi	r24, 0x28	; 40
    ec38:	d8 01       	movw	r26, r16
    ec3a:	1d 92       	st	X+, r1
    ec3c:	8a 95       	dec	r24
    ec3e:	e9 f7       	brne	.-6      	; 0xec3a <_Z19Calibration_Of_Pumpv+0x88>
			sprintf((char *)temp_topic,"SICCA/CALIBRATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    ec40:	8e ec       	ldi	r24, 0xCE	; 206
    ec42:	93 e1       	ldi	r25, 0x13	; 19
    ec44:	9f 93       	push	r25
    ec46:	8f 93       	push	r24
    ec48:	8b e6       	ldi	r24, 0x6B	; 107
    ec4a:	95 e0       	ldi	r25, 0x05	; 5
    ec4c:	9f 93       	push	r25
    ec4e:	8f 93       	push	r24
    ec50:	1f 93       	push	r17
    ec52:	0f 93       	push	r16
    ec54:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
			
			_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
    ec58:	60 ed       	ldi	r22, 0xD0	; 208
    ec5a:	7f e0       	ldi	r23, 0x0F	; 15
    ec5c:	c8 01       	movw	r24, r16
    ec5e:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
			
			return 1;
    ec62:	81 e0       	ldi	r24, 0x01	; 1
    ec64:	90 e0       	ldi	r25, 0x00	; 0
    ec66:	0f 90       	pop	r0
    ec68:	0f 90       	pop	r0
    ec6a:	0f 90       	pop	r0
    ec6c:	0f 90       	pop	r0
    ec6e:	0f 90       	pop	r0
    ec70:	0f 90       	pop	r0
    ec72:	5d c1       	rjmp	.+698    	; 0xef2e <_Z19Calibration_Of_Pumpv+0x37c>
		}
		
		
		previous = millis();
    ec74:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    ec78:	21 96       	adiw	r28, 0x01	; 1
    ec7a:	6c af       	std	Y+60, r22	; 0x3c
    ec7c:	7d af       	std	Y+61, r23	; 0x3d
    ec7e:	8e af       	std	Y+62, r24	; 0x3e
    ec80:	9f af       	std	Y+63, r25	; 0x3f
    ec82:	21 97       	sbiw	r28, 0x01	; 1
    ec84:	1e 01       	movw	r2, r28
    ec86:	bd e3       	ldi	r27, 0x3D	; 61
    ec88:	2b 0e       	add	r2, r27
    ec8a:	31 1c       	adc	r3, r1
    ec8c:	6e 01       	movw	r12, r28
    ec8e:	e9 e2       	ldi	r30, 0x29	; 41
    ec90:	ce 0e       	add	r12, r30
    ec92:	d1 1c       	adc	r13, r1
	
}


int Calibration_Of_Pump(void)
{
    ec94:	86 01       	movw	r16, r12
		previous = millis();
		do
		{
			for(i=0;i<5;i++)
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    ec96:	68 ec       	ldi	r22, 0xC8	; 200
    ec98:	75 e0       	ldi	r23, 0x05	; 5
    ec9a:	82 ef       	ldi	r24, 0xF2	; 242
    ec9c:	9c e0       	ldi	r25, 0x0C	; 12
    ec9e:	0e 94 79 d9 	call	0x1b2f2	; 0x1b2f2 <_ZN13EnergyMonitor8calcIrmsEj>
    eca2:	d8 01       	movw	r26, r16
    eca4:	6d 93       	st	X+, r22
    eca6:	7d 93       	st	X+, r23
    eca8:	8d 93       	st	X+, r24
    ecaa:	9d 93       	st	X+, r25
    ecac:	8d 01       	movw	r16, r26
		
		
		previous = millis();
		do
		{
			for(i=0;i<5;i++)
    ecae:	a2 15       	cp	r26, r2
    ecb0:	b3 05       	cpc	r27, r3
    ecb2:	89 f7       	brne	.-30     	; 0xec96 <_Z19Calibration_Of_Pumpv+0xe4>
    ecb4:	00 e0       	ldi	r16, 0x00	; 0
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
			{
				for (j = i + 1; j < 5; j++)
    ecb6:	0f 5f       	subi	r16, 0xFF	; 255
    ecb8:	10 2f       	mov	r17, r16
    ecba:	15 30       	cpi	r17, 0x05	; 5
    ecbc:	31 f4       	brne	.+12     	; 0xecca <_Z19Calibration_Of_Pumpv+0x118>
    ecbe:	b4 e0       	ldi	r27, 0x04	; 4
    ecc0:	cb 0e       	add	r12, r27
    ecc2:	d1 1c       	adc	r13, r1
		{
			for(i=0;i<5;i++)
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
    ecc4:	05 30       	cpi	r16, 0x05	; 5
    ecc6:	b9 f7       	brne	.-18     	; 0xecb6 <_Z19Calibration_Of_Pumpv+0x104>
    ecc8:	2c c0       	rjmp	.+88     	; 0xed22 <_Z19Calibration_Of_Pumpv+0x170>
			{
				for (j = i + 1; j < 5; j++)
				{
					if (filter_data[i] > filter_data[j])
    ecca:	f6 01       	movw	r30, r12
    eccc:	80 80       	ld	r8, Z
    ecce:	91 80       	ldd	r9, Z+1	; 0x01
    ecd0:	a2 80       	ldd	r10, Z+2	; 0x02
    ecd2:	b3 80       	ldd	r11, Z+3	; 0x03
    ecd4:	ee 24       	eor	r14, r14
    ecd6:	e3 94       	inc	r14
    ecd8:	f1 2c       	mov	r15, r1
    ecda:	ec 0e       	add	r14, r28
    ecdc:	fd 1e       	adc	r15, r29
    ecde:	f4 e0       	ldi	r31, 0x04	; 4
    ece0:	1f 9f       	mul	r17, r31
    ece2:	e0 0c       	add	r14, r0
    ece4:	f1 1c       	adc	r15, r1
    ece6:	11 24       	eor	r1, r1
    ece8:	d7 01       	movw	r26, r14
    ecea:	98 96       	adiw	r26, 0x28	; 40
    ecec:	4d 90       	ld	r4, X+
    ecee:	5d 90       	ld	r5, X+
    ecf0:	6d 90       	ld	r6, X+
    ecf2:	7c 90       	ld	r7, X
    ecf4:	9b 97       	sbiw	r26, 0x2b	; 43
    ecf6:	a3 01       	movw	r20, r6
    ecf8:	92 01       	movw	r18, r4
    ecfa:	c5 01       	movw	r24, r10
    ecfc:	b4 01       	movw	r22, r8
    ecfe:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
    ed02:	18 16       	cp	r1, r24
    ed04:	64 f4       	brge	.+24     	; 0xed1e <_Z19Calibration_Of_Pumpv+0x16c>
					{
						filter_data_1 = filter_data[i];
						filter_data[i] = filter_data[j];
    ed06:	f6 01       	movw	r30, r12
    ed08:	40 82       	st	Z, r4
    ed0a:	51 82       	std	Z+1, r5	; 0x01
    ed0c:	62 82       	std	Z+2, r6	; 0x02
    ed0e:	73 82       	std	Z+3, r7	; 0x03
						filter_data[j] = filter_data_1;
    ed10:	d7 01       	movw	r26, r14
    ed12:	98 96       	adiw	r26, 0x28	; 40
    ed14:	8d 92       	st	X+, r8
    ed16:	9d 92       	st	X+, r9
    ed18:	ad 92       	st	X+, r10
    ed1a:	bc 92       	st	X, r11
    ed1c:	9b 97       	sbiw	r26, 0x2b	; 43
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
			{
				for (j = i + 1; j < 5; j++)
    ed1e:	1f 5f       	subi	r17, 0xFF	; 255
    ed20:	cc cf       	rjmp	.-104    	; 0xecba <_Z19Calibration_Of_Pumpv+0x108>
						filter_data[i] = filter_data[j];
						filter_data[j] = filter_data_1;
					}
				}
			}
			_sPump_Parameter.Pump_Run_Current =  filter_data[2];      // RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    ed22:	69 a9       	ldd	r22, Y+49	; 0x31
    ed24:	7a a9       	ldd	r23, Y+50	; 0x32
    ed26:	8b a9       	ldd	r24, Y+51	; 0x33
    ed28:	9c a9       	ldd	r25, Y+52	; 0x34
    ed2a:	60 93 a8 13 	sts	0x13A8, r22	; 0x8013a8 <_sPump_Parameter+0x4>
    ed2e:	70 93 a9 13 	sts	0x13A9, r23	; 0x8013a9 <_sPump_Parameter+0x5>
    ed32:	80 93 aa 13 	sts	0x13AA, r24	; 0x8013aa <_sPump_Parameter+0x6>
    ed36:	90 93 ab 13 	sts	0x13AB, r25	; 0x8013ab <_sPump_Parameter+0x7>
			
			if(_sPump_Parameter.Pump_Run_Current > 2)
    ed3a:	20 e0       	ldi	r18, 0x00	; 0
    ed3c:	30 e0       	ldi	r19, 0x00	; 0
    ed3e:	40 e0       	ldi	r20, 0x00	; 0
    ed40:	50 e4       	ldi	r21, 0x40	; 64
    ed42:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
    ed46:	18 16       	cp	r1, r24
    ed48:	54 f5       	brge	.+84     	; 0xed9e <_Z19Calibration_Of_Pumpv+0x1ec>
    ed4a:	88 ea       	ldi	r24, 0xA8	; 168
    ed4c:	e8 2e       	mov	r14, r24
    ed4e:	83 e1       	ldi	r24, 0x13	; 19
    ed50:	f8 2e       	mov	r15, r24
    ed52:	0f e0       	ldi	r16, 0x0F	; 15
    ed54:	15 e0       	ldi	r17, 0x05	; 5
    ed56:	f7 01       	movw	r30, r14
    ed58:	61 91       	ld	r22, Z+
    ed5a:	7f 01       	movw	r14, r30
    ed5c:	1a 83       	std	Y+2, r17	; 0x02
    ed5e:	09 83       	std	Y+1, r16	; 0x01
    ed60:	ce 01       	movw	r24, r28
    ed62:	01 96       	adiw	r24, 0x01	; 1
    ed64:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    ed68:	0f 5f       	subi	r16, 0xFF	; 255
    ed6a:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    ed6c:	03 31       	cpi	r16, 0x13	; 19
    ed6e:	f5 e0       	ldi	r31, 0x05	; 5
    ed70:	1f 07       	cpc	r17, r31
    ed72:	89 f7       	brne	.-30     	; 0xed56 <_Z19Calibration_Of_Pumpv+0x1a4>
			{
				_kEEPROM_WRITE(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Run_Current);     /* save the pump current */
				_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read pump nominal current */
    ed74:	64 ea       	ldi	r22, 0xA4	; 164
    ed76:	73 e1       	ldi	r23, 0x13	; 19
    ed78:	8f e0       	ldi	r24, 0x0F	; 15
    ed7a:	95 e0       	ldi	r25, 0x05	; 5
    ed7c:	be dc       	rcall	.-1668   	; 0xe6fa <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    ed7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ed82:	81 30       	cpi	r24, 0x01	; 1
    ed84:	09 f0       	breq	.+2      	; 0xed88 <_Z19Calibration_Of_Pumpv+0x1d6>
    ed86:	4e c0       	rjmp	.+156    	; 0xee24 <_Z19Calibration_Of_Pumpv+0x272>
				{
					_kSERAIL_MON_WRITE("Pump Calibration is done");                /* for debugging purpose */
    ed88:	6e e6       	ldi	r22, 0x6E	; 110
    ed8a:	76 e2       	ldi	r23, 0x26	; 38
    ed8c:	86 ec       	ldi	r24, 0xC6	; 198
    ed8e:	94 e1       	ldi	r25, 0x14	; 20
    ed90:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    ed94:	86 ec       	ldi	r24, 0xC6	; 198
    ed96:	94 e1       	ldi	r25, 0x14	; 20
    ed98:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    ed9c:	43 c0       	rjmp	.+134    	; 0xee24 <_Z19Calibration_Of_Pumpv+0x272>
				}
				answer = 1;
			}	
		}while ((answer == 0) && ((millis() - previous) < timeout));
    ed9e:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    eda2:	dc 01       	movw	r26, r24
    eda4:	cb 01       	movw	r24, r22
    eda6:	21 96       	adiw	r28, 0x01	; 1
    eda8:	2c ad       	ldd	r18, Y+60	; 0x3c
    edaa:	3d ad       	ldd	r19, Y+61	; 0x3d
    edac:	4e ad       	ldd	r20, Y+62	; 0x3e
    edae:	5f ad       	ldd	r21, Y+63	; 0x3f
    edb0:	21 97       	sbiw	r28, 0x01	; 1
    edb2:	82 1b       	sub	r24, r18
    edb4:	93 0b       	sbc	r25, r19
    edb6:	a4 0b       	sbc	r26, r20
    edb8:	b5 0b       	sbc	r27, r21
    edba:	80 31       	cpi	r24, 0x10	; 16
    edbc:	97 42       	sbci	r25, 0x27	; 39
    edbe:	a1 05       	cpc	r26, r1
    edc0:	b1 05       	cpc	r27, r1
    edc2:	08 f4       	brcc	.+2      	; 0xedc6 <_Z19Calibration_Of_Pumpv+0x214>
    edc4:	63 cf       	rjmp	.-314    	; 0xec8c <_Z19Calibration_Of_Pumpv+0xda>
    edc6:	80 e0       	ldi	r24, 0x00	; 0
    edc8:	2e c0       	rjmp	.+92     	; 0xee26 <_Z19Calibration_Of_Pumpv+0x274>
		
		_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
	}
	else
	{
		if(_sRuble_Parameters.Do_Calibration > _kWIRED_PUMP_NUMBER)
    edca:	62 30       	cpi	r22, 0x02	; 2
    edcc:	08 f4       	brcc	.+2      	; 0xedd0 <_Z19Calibration_Of_Pumpv+0x21e>
    edce:	64 c0       	rjmp	.+200    	; 0xee98 <_Z19Calibration_Of_Pumpv+0x2e6>
		{
			//Wireless_Pump_On_Off(_kDO_CALIBRATION);
			Wireless_Pump_On_Off(_kDO_CALIBRATION,_sRuble_Parameters.Do_Calibration -2);
    edd0:	62 50       	subi	r22, 0x02	; 2
    edd2:	86 e0       	ldi	r24, 0x06	; 6
    edd4:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
			
			_sRuble_Parameters.Do_Calibration = _kRESET;
    edd8:	10 92 67 14 	sts	0x1467, r1	; 0x801467 <_sRuble_Parameters+0xb9>
			previous = millis();
    eddc:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    ede0:	6b 01       	movw	r12, r22
    ede2:	7c 01       	movw	r14, r24
			do
			{
				Lora_Operation();
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
    ede4:	1b e0       	ldi	r17, 0x0B	; 11
			
			_sRuble_Parameters.Do_Calibration = _kRESET;
			previous = millis();
			do
			{
				Lora_Operation();
    ede6:	0e 94 8f d0 	call	0x1a11e	; 0x1a11e <_Z14Lora_Operationv>
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
    edea:	80 91 67 14 	lds	r24, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    edee:	90 e0       	ldi	r25, 0x00	; 0
    edf0:	02 97       	sbiw	r24, 0x02	; 2
    edf2:	18 9f       	mul	r17, r24
    edf4:	f0 01       	movw	r30, r0
    edf6:	19 9f       	mul	r17, r25
    edf8:	f0 0d       	add	r31, r0
    edfa:	11 24       	eor	r1, r1
    edfc:	ec 50       	subi	r30, 0x0C	; 12
    edfe:	f4 4f       	sbci	r31, 0xF4	; 244
    ee00:	82 85       	ldd	r24, Z+10	; 0x0a
    ee02:	80 fd       	sbrc	r24, 0
    ee04:	4d c0       	rjmp	.+154    	; 0xeea0 <_Z19Calibration_Of_Pumpv+0x2ee>
				{
					answer = 1;
				}
			}while ((answer == 0) && ((millis() - previous) < timeout));
    ee06:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    ee0a:	dc 01       	movw	r26, r24
    ee0c:	cb 01       	movw	r24, r22
    ee0e:	8c 19       	sub	r24, r12
    ee10:	9d 09       	sbc	r25, r13
    ee12:	ae 09       	sbc	r26, r14
    ee14:	bf 09       	sbc	r27, r15
    ee16:	80 31       	cpi	r24, 0x10	; 16
    ee18:	97 42       	sbci	r25, 0x27	; 39
    ee1a:	a1 05       	cpc	r26, r1
    ee1c:	b1 05       	cpc	r27, r1
    ee1e:	18 f3       	brcs	.-58     	; 0xede6 <_Z19Calibration_Of_Pumpv+0x234>
    ee20:	80 e0       	ldi	r24, 0x00	; 0
    ee22:	3f c0       	rjmp	.+126    	; 0xeea2 <_Z19Calibration_Of_Pumpv+0x2f0>
					}
				}
			}
			_sPump_Parameter.Pump_Run_Current =  filter_data[2];      // RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			
			if(_sPump_Parameter.Pump_Run_Current > 2)
    ee24:	81 e0       	ldi	r24, 0x01	; 1
				}
				answer = 1;
			}	
		}while ((answer == 0) && ((millis() - previous) < timeout));
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    ee26:	24 ed       	ldi	r18, 0xD4	; 212
    ee28:	33 e0       	ldi	r19, 0x03	; 3
    ee2a:	e0 ed       	ldi	r30, 0xD0	; 208
    ee2c:	ff e0       	ldi	r31, 0x0F	; 15
    ee2e:	df 01       	movw	r26, r30
    ee30:	a9 01       	movw	r20, r18
    ee32:	1d 92       	st	X+, r1
    ee34:	41 50       	subi	r20, 0x01	; 1
    ee36:	50 40       	sbci	r21, 0x00	; 0
    ee38:	e1 f7       	brne	.-8      	; 0xee32 <_Z19Calibration_Of_Pumpv+0x280>
		if(answer)
    ee3a:	88 23       	and	r24, r24
    ee3c:	71 f1       	breq	.+92     	; 0xee9a <_Z19Calibration_Of_Pumpv+0x2e8>
		{
			_sRuble_Parameters.By_Pass_CT = _kSET;
    ee3e:	81 e0       	ldi	r24, 0x01	; 1
    ee40:	80 93 79 14 	sts	0x1479, r24	; 0x801479 <_sRuble_Parameters+0xcb>
			_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    ee44:	69 e7       	ldi	r22, 0x79	; 121
    ee46:	74 e1       	ldi	r23, 0x14	; 20
    ee48:	81 ea       	ldi	r24, 0xA1	; 161
    ee4a:	9c e0       	ldi	r25, 0x0C	; 12
    ee4c:	bc dc       	rcall	.-1672   	; 0xe7c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");	
    ee4e:	62 e4       	ldi	r22, 0x42	; 66
    ee50:	75 e0       	ldi	r23, 0x05	; 5
		}
		else
		{
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    ee52:	80 ed       	ldi	r24, 0xD0	; 208
    ee54:	9f e0       	ldi	r25, 0x0F	; 15
    ee56:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
		}
		
		memset((char *)temp_topic,0,sizeof(temp_topic));
    ee5a:	8e 01       	movw	r16, r28
    ee5c:	0f 5f       	subi	r16, 0xFF	; 255
    ee5e:	1f 4f       	sbci	r17, 0xFF	; 255
    ee60:	88 e2       	ldi	r24, 0x28	; 40
    ee62:	d8 01       	movw	r26, r16
    ee64:	1d 92       	st	X+, r1
    ee66:	8a 95       	dec	r24
    ee68:	e9 f7       	brne	.-6      	; 0xee64 <_Z19Calibration_Of_Pumpv+0x2b2>
		sprintf((char *)temp_topic,"SICCA/CALIBRATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    ee6a:	8e ec       	ldi	r24, 0xCE	; 206
    ee6c:	93 e1       	ldi	r25, 0x13	; 19
    ee6e:	9f 93       	push	r25
    ee70:	8f 93       	push	r24
    ee72:	8b e6       	ldi	r24, 0x6B	; 107
    ee74:	95 e0       	ldi	r25, 0x05	; 5
    ee76:	9f 93       	push	r25
    ee78:	8f 93       	push	r24
    ee7a:	1f 93       	push	r17
    ee7c:	0f 93       	push	r16
    ee7e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
		
		_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
    ee82:	60 ed       	ldi	r22, 0xD0	; 208
    ee84:	7f e0       	ldi	r23, 0x0F	; 15
    ee86:	c8 01       	movw	r24, r16
    ee88:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
    ee8c:	0f 90       	pop	r0
    ee8e:	0f 90       	pop	r0
    ee90:	0f 90       	pop	r0
    ee92:	0f 90       	pop	r0
    ee94:	0f 90       	pop	r0
    ee96:	0f 90       	pop	r0
			_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBARATION_SUCCESS;
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBRATION_FAIL;
		}
	}
}
    ee98:	4a c0       	rjmp	.+148    	; 0xef2e <_Z19Calibration_Of_Pumpv+0x37c>
			_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");	
		}
		else
		{
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    ee9a:	66 e5       	ldi	r22, 0x56	; 86
    ee9c:	75 e0       	ldi	r23, 0x05	; 5
    ee9e:	d9 cf       	rjmp	.-78     	; 0xee52 <_Z19Calibration_Of_Pumpv+0x2a0>
			{
				Lora_Operation();
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
				{
					answer = 1;
    eea0:	81 e0       	ldi	r24, 0x01	; 1
				}
			}while ((answer == 0) && ((millis() - previous) < timeout));
			
			memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    eea2:	24 ed       	ldi	r18, 0xD4	; 212
    eea4:	33 e0       	ldi	r19, 0x03	; 3
    eea6:	e0 ed       	ldi	r30, 0xD0	; 208
    eea8:	ff e0       	ldi	r31, 0x0F	; 15
    eeaa:	df 01       	movw	r26, r30
    eeac:	a9 01       	movw	r20, r18
    eeae:	1d 92       	st	X+, r1
    eeb0:	41 50       	subi	r20, 0x01	; 1
    eeb2:	50 40       	sbci	r21, 0x00	; 0
    eeb4:	e1 f7       	brne	.-8      	; 0xeeae <_Z19Calibration_Of_Pumpv+0x2fc>
			if(answer)
    eeb6:	88 23       	and	r24, r24
    eeb8:	59 f0       	breq	.+22     	; 0xeed0 <_Z19Calibration_Of_Pumpv+0x31e>
			{
				_sRuble_Parameters.By_Pass_CT = _kSET;
    eeba:	81 e0       	ldi	r24, 0x01	; 1
    eebc:	80 93 79 14 	sts	0x1479, r24	; 0x801479 <_sRuble_Parameters+0xcb>
				_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    eec0:	69 e7       	ldi	r22, 0x79	; 121
    eec2:	74 e1       	ldi	r23, 0x14	; 20
    eec4:	81 ea       	ldi	r24, 0xA1	; 161
    eec6:	9c e0       	ldi	r25, 0x0C	; 12
    eec8:	7e dc       	rcall	.-1796   	; 0xe7c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");
    eeca:	62 e4       	ldi	r22, 0x42	; 66
    eecc:	75 e0       	ldi	r23, 0x05	; 5
    eece:	02 c0       	rjmp	.+4      	; 0xeed4 <_Z19Calibration_Of_Pumpv+0x322>
			}
			else
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    eed0:	66 e5       	ldi	r22, 0x56	; 86
    eed2:	75 e0       	ldi	r23, 0x05	; 5
    eed4:	80 ed       	ldi	r24, 0xD0	; 208
    eed6:	9f e0       	ldi	r25, 0x0F	; 15
    eed8:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
			}
			
			memset((char *)temp_topic,0,sizeof(temp_topic));
    eedc:	8e 01       	movw	r16, r28
    eede:	0f 5f       	subi	r16, 0xFF	; 255
    eee0:	1f 4f       	sbci	r17, 0xFF	; 255
    eee2:	88 e2       	ldi	r24, 0x28	; 40
    eee4:	d8 01       	movw	r26, r16
    eee6:	1d 92       	st	X+, r1
    eee8:	8a 95       	dec	r24
    eeea:	e9 f7       	brne	.-6      	; 0xeee6 <_Z19Calibration_Of_Pumpv+0x334>
			sprintf((char *)temp_topic,"SICCA/CALIBRATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    eeec:	8e ec       	ldi	r24, 0xCE	; 206
    eeee:	93 e1       	ldi	r25, 0x13	; 19
    eef0:	9f 93       	push	r25
    eef2:	8f 93       	push	r24
    eef4:	8b e6       	ldi	r24, 0x6B	; 107
    eef6:	95 e0       	ldi	r25, 0x05	; 5
    eef8:	9f 93       	push	r25
    eefa:	8f 93       	push	r24
    eefc:	1f 93       	push	r17
    eefe:	0f 93       	push	r16
    ef00:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
			
			_kMQTT_PUB((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
    ef04:	60 ed       	ldi	r22, 0xD0	; 208
    ef06:	7f e0       	ldi	r23, 0x0F	; 15
    ef08:	c8 01       	movw	r24, r16
    ef0a:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBARATION_SUCCESS;
    ef0e:	80 91 67 14 	lds	r24, 0x1467	; 0x801467 <_sRuble_Parameters+0xb9>
    ef12:	90 e0       	ldi	r25, 0x00	; 0
    ef14:	02 97       	sbiw	r24, 0x02	; 2
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBRATION_FAIL;
    ef16:	2b e0       	ldi	r18, 0x0B	; 11
    ef18:	28 9f       	mul	r18, r24
    ef1a:	f0 01       	movw	r30, r0
    ef1c:	29 9f       	mul	r18, r25
    ef1e:	f0 0d       	add	r31, r0
    ef20:	11 24       	eor	r1, r1
    ef22:	ec 50       	subi	r30, 0x0C	; 12
    ef24:	f4 4f       	sbci	r31, 0xF4	; 244
    ef26:	82 85       	ldd	r24, Z+10	; 0x0a
    ef28:	8c 7f       	andi	r24, 0xFC	; 252
    ef2a:	82 87       	std	Z+10, r24	; 0x0a
    ef2c:	af cf       	rjmp	.-162    	; 0xee8c <_Z19Calibration_Of_Pumpv+0x2da>
		}
	}
}
    ef2e:	c0 5c       	subi	r28, 0xC0	; 192
    ef30:	df 4f       	sbci	r29, 0xFF	; 255
    ef32:	0f b6       	in	r0, 0x3f	; 63
    ef34:	f8 94       	cli
    ef36:	de bf       	out	0x3e, r29	; 62
    ef38:	0f be       	out	0x3f, r0	; 63
    ef3a:	cd bf       	out	0x3d, r28	; 61
    ef3c:	df 91       	pop	r29
    ef3e:	cf 91       	pop	r28
    ef40:	1f 91       	pop	r17
    ef42:	0f 91       	pop	r16
    ef44:	ff 90       	pop	r15
    ef46:	ef 90       	pop	r14
    ef48:	df 90       	pop	r13
    ef4a:	cf 90       	pop	r12
    ef4c:	bf 90       	pop	r11
    ef4e:	af 90       	pop	r10
    ef50:	9f 90       	pop	r9
    ef52:	8f 90       	pop	r8
    ef54:	7f 90       	pop	r7
    ef56:	6f 90       	pop	r6
    ef58:	5f 90       	pop	r5
    ef5a:	4f 90       	pop	r4
    ef5c:	3f 90       	pop	r3
    ef5e:	2f 90       	pop	r2
    ef60:	08 95       	ret

0000ef62 <_Z14Faults_Handlerv>:


void Faults_Handler(void)
{
    ef62:	4f 92       	push	r4
    ef64:	5f 92       	push	r5
    ef66:	6f 92       	push	r6
    ef68:	7f 92       	push	r7
    ef6a:	8f 92       	push	r8
    ef6c:	9f 92       	push	r9
    ef6e:	af 92       	push	r10
    ef70:	bf 92       	push	r11
    ef72:	cf 92       	push	r12
    ef74:	df 92       	push	r13
    ef76:	ef 92       	push	r14
    ef78:	ff 92       	push	r15
	static unsigned char temp_back_up;
	static unsigned char faults_check_timer = 0,fault_occure = 0;
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    ef7a:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    ef7e:	82 30       	cpi	r24, 0x02	; 2
    ef80:	08 f4       	brcc	.+2      	; 0xef84 <_Z14Faults_Handlerv+0x22>
    ef82:	52 c0       	rjmp	.+164    	; 0xf028 <_Z14Faults_Handlerv+0xc6>
	{
		if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    ef84:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    ef88:	29 2f       	mov	r18, r25
    ef8a:	2d 7f       	andi	r18, 0xFD	; 253
    ef8c:	21 30       	cpi	r18, 0x01	; 1
    ef8e:	19 f0       	breq	.+6      	; 0xef96 <_Z14Faults_Handlerv+0x34>
    ef90:	95 30       	cpi	r25, 0x05	; 5
    ef92:	09 f0       	breq	.+2      	; 0xef96 <_Z14Faults_Handlerv+0x34>
    ef94:	fb c2       	rjmp	.+1526   	; 0xf58c <_Z14Faults_Handlerv+0x62a>
		_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
		{
			if(_sRuble_Parameters.Wirelss_Pump_Status == _kON)
    ef96:	90 91 7c 14 	lds	r25, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
    ef9a:	91 30       	cpi	r25, 0x01	; 1
    ef9c:	09 f0       	breq	.+2      	; 0xefa0 <_Z14Faults_Handlerv+0x3e>
    ef9e:	f6 c2       	rjmp	.+1516   	; 0xf58c <_Z14Faults_Handlerv+0x62a>
			{
				/* check faults */
				//_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults;
				if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    efa0:	90 e0       	ldi	r25, 0x00	; 0
    efa2:	02 97       	sbiw	r24, 0x02	; 2
    efa4:	2b e0       	ldi	r18, 0x0B	; 11
    efa6:	28 9f       	mul	r18, r24
    efa8:	f0 01       	movw	r30, r0
    efaa:	29 9f       	mul	r18, r25
    efac:	f0 0d       	add	r31, r0
    efae:	11 24       	eor	r1, r1
    efb0:	ec 50       	subi	r30, 0x0C	; 12
    efb2:	f4 4f       	sbci	r31, 0xF4	; 244
    efb4:	80 85       	ldd	r24, Z+8	; 0x08
    efb6:	91 85       	ldd	r25, Z+9	; 0x09
    efb8:	9c 01       	movw	r18, r24
    efba:	23 70       	andi	r18, 0x03	; 3
    efbc:	33 27       	eor	r19, r19
    efbe:	23 30       	cpi	r18, 0x03	; 3
    efc0:	31 05       	cpc	r19, r1
    efc2:	39 f4       	brne	.+14     	; 0xefd2 <_Z14Faults_Handlerv+0x70>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    efc4:	82 ff       	sbrs	r24, 2
    efc6:	05 c0       	rjmp	.+10     	; 0xefd2 <_Z14Faults_Handlerv+0x70>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    efc8:	88 7b       	andi	r24, 0xB8	; 184
    efca:	92 70       	andi	r25, 0x02	; 2
    efcc:	89 2b       	or	r24, r25
    efce:	09 f4       	brne	.+2      	; 0xefd2 <_Z14Faults_Handlerv+0x70>
    efd0:	dd c2       	rjmp	.+1466   	; 0xf58c <_Z14Faults_Handlerv+0x62a>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING /*||
				   _sRuble_Parameters.Update_Local_Date[2] == 70*/)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    efd2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    efd6:	81 30       	cpi	r24, 0x01	; 1
    efd8:	d1 f4       	brne	.+52     	; 0xf00e <_Z14Faults_Handlerv+0xac>
					{
						_kSERAIL_MON_WRITE("Wireless Pump Fault ocuure............ ");
    efda:	66 e4       	ldi	r22, 0x46	; 70
    efdc:	76 e2       	ldi	r23, 0x26	; 38
    efde:	86 ec       	ldi	r24, 0xC6	; 198
    efe0:	94 e1       	ldi	r25, 0x14	; 20
    efe2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults);
    efe6:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    efea:	90 e0       	ldi	r25, 0x00	; 0
    efec:	02 97       	sbiw	r24, 0x02	; 2
    efee:	2b e0       	ldi	r18, 0x0B	; 11
    eff0:	28 9f       	mul	r18, r24
    eff2:	f0 01       	movw	r30, r0
    eff4:	29 9f       	mul	r18, r25
    eff6:	f0 0d       	add	r31, r0
    eff8:	11 24       	eor	r1, r1
    effa:	ec 50       	subi	r30, 0x0C	; 12
    effc:	f4 4f       	sbci	r31, 0xF4	; 244
    effe:	60 85       	ldd	r22, Z+8	; 0x08
    f000:	71 85       	ldd	r23, Z+9	; 0x09
    f002:	4a e0       	ldi	r20, 0x0A	; 10
    f004:	50 e0       	ldi	r21, 0x00	; 0
    f006:	86 ec       	ldi	r24, 0xC6	; 198
    f008:	94 e1       	ldi	r25, 0x14	; 20
    f00a:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
					}
					_sPump_Parameter.Irrigation_Status = _eWIRELESS_PUMP_FAIL_FAULT;
					_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    f00e:	84 e0       	ldi	r24, 0x04	; 4
    f010:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
					_sRuble_Parameters.Publish_Topic  |= _ePUB_RUBLE_FAULTS; 
    f014:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f018:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f01c:	82 60       	ori	r24, 0x02	; 2
    f01e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f022:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f026:	b2 c2       	rjmp	.+1380   	; 0xf58c <_Z14Faults_Handlerv+0x62a>
		return;
	}
	
	
	
	if(_sPump_Parameter.Irrigation_Status != 0)
    f028:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f02c:	88 23       	and	r24, r24
    f02e:	41 f0       	breq	.+16     	; 0xf040 <_Z14Faults_Handlerv+0xde>
	{
		if(_gfault_Occure == 0)
    f030:	80 91 ec 0c 	lds	r24, 0x0CEC	; 0x800cec <_gfault_Occure>
    f034:	90 91 ed 0c 	lds	r25, 0x0CED	; 0x800ced <_gfault_Occure+0x1>
    f038:	89 2b       	or	r24, r25
    f03a:	11 f4       	brne	.+4      	; 0xf040 <_Z14Faults_Handlerv+0xde>
		{
			_sPump_Parameter.Irrigation_Status = 0;
    f03c:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
		}	
	}
	
	
	
	if(_sRuble_Parameters.Read_Ct_Value_Timer)
    f040:	80 91 ca 13 	lds	r24, 0x13CA	; 0x8013ca <_sRuble_Parameters+0x1c>
    f044:	90 91 cb 13 	lds	r25, 0x13CB	; 0x8013cb <_sRuble_Parameters+0x1d>
    f048:	89 2b       	or	r24, r25
    f04a:	e9 f0       	breq	.+58     	; 0xf086 <_Z14Faults_Handlerv+0x124>
	{
		if(fault_occure)
    f04c:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f050:	88 23       	and	r24, r24
    f052:	39 f0       	breq	.+14     	; 0xf062 <_Z14Faults_Handlerv+0x100>
		{
			fault_occure = _kRESET;
    f054:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer++;
    f058:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f05c:	8f 5f       	subi	r24, 0xFF	; 255
    f05e:	80 93 df 0c 	sts	0x0CDF, r24	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
		}
		
		_sRuble_Parameters.Read_Ct_Value_Timer = _kRESET;
    f062:	10 92 cb 13 	sts	0x13CB, r1	; 0x8013cb <_sRuble_Parameters+0x1d>
    f066:	10 92 ca 13 	sts	0x13CA, r1	; 0x8013ca <_sRuble_Parameters+0x1c>
		_sPump_Parameter.Pump_Run_Current = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    f06a:	68 ec       	ldi	r22, 0xC8	; 200
    f06c:	75 e0       	ldi	r23, 0x05	; 5
    f06e:	82 ef       	ldi	r24, 0xF2	; 242
    f070:	9c e0       	ldi	r25, 0x0C	; 12
    f072:	0e 94 79 d9 	call	0x1b2f2	; 0x1b2f2 <_ZN13EnergyMonitor8calcIrmsEj>
    f076:	60 93 a8 13 	sts	0x13A8, r22	; 0x8013a8 <_sPump_Parameter+0x4>
    f07a:	70 93 a9 13 	sts	0x13A9, r23	; 0x8013a9 <_sPump_Parameter+0x5>
    f07e:	80 93 aa 13 	sts	0x13AA, r24	; 0x8013aa <_sPump_Parameter+0x6>
    f082:	90 93 ab 13 	sts	0x13AB, r25	; 0x8013ab <_sPump_Parameter+0x7>
	}
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER)
    f086:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    f08a:	81 30       	cpi	r24, 0x01	; 1
    f08c:	51 f5       	brne	.+84     	; 0xf0e2 <_Z14Faults_Handlerv+0x180>
	{
		if((Check_Phase()) == 1)
    f08e:	b4 db       	rcall	.-2200   	; 0xe7f8 <_Z11Check_Phasev>
    f090:	81 30       	cpi	r24, 0x01	; 1
    f092:	21 f5       	brne	.+72     	; 0xf0dc <_Z14Faults_Handlerv+0x17a>
		{
			if(_kGPIO_GET(_kPUMP_1) == _kPUMP_ON)
    f094:	8a e0       	ldi	r24, 0x0A	; 10
    f096:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    f09a:	89 2b       	or	r24, r25
    f09c:	59 f4       	brne	.+22     	; 0xf0b4 <_Z14Faults_Handlerv+0x152>
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    f09e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f0a2:	98 2f       	mov	r25, r24
    f0a4:	9d 7f       	andi	r25, 0xFD	; 253
    f0a6:	91 30       	cpi	r25, 0x01	; 1
    f0a8:	11 f0       	breq	.+4      	; 0xf0ae <_Z14Faults_Handlerv+0x14c>
    f0aa:	85 30       	cpi	r24, 0x05	; 5
    f0ac:	19 f4       	brne	.+6      	; 0xf0b4 <_Z14Faults_Handlerv+0x152>
				_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
				{
					_sPump_Parameter.Irrigation_Status = _eTHREE_PHASE_POWER_INT;
    f0ae:	8c e0       	ldi	r24, 0x0C	; 12
    f0b0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
				}
			}
			if(!_sRuble_Parameters.Line_Fault_Flag)
    f0b4:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    f0b8:	81 11       	cpse	r24, r1
    f0ba:	15 c0       	rjmp	.+42     	; 0xf0e6 <_Z14Faults_Handlerv+0x184>
			{
				_sRuble_Parameters.Line_Fault_Flag = _kSET;
    f0bc:	81 e0       	ldi	r24, 0x01	; 1
    f0be:	80 93 70 14 	sts	0x1470, r24	; 0x801470 <_sRuble_Parameters+0xc2>
				_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    f0c2:	84 e0       	ldi	r24, 0x04	; 4
    f0c4:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
				_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    f0c8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f0cc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f0d0:	82 60       	ori	r24, 0x02	; 2
    f0d2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f0d6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f0da:	05 c0       	rjmp	.+10     	; 0xf0e6 <_Z14Faults_Handlerv+0x184>
			}
		}
		else
		{
			if(_sRuble_Parameters.Line_Fault_Flag)
    f0dc:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
    f0e0:	81 11       	cpse	r24, r1
			{
				_sRuble_Parameters.Line_Fault_Flag = _kRESET;
    f0e2:	10 92 70 14 	sts	0x1470, r1	; 0x801470 <_sRuble_Parameters+0xc2>
		_sRuble_Parameters.Line_Fault_Flag = _kRESET;
	}
	
	
	
	if(!_sRuble_Parameters.By_Pass_CT)
    f0e6:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
    f0ea:	88 23       	and	r24, r24
    f0ec:	09 f4       	brne	.+2      	; 0xf0f0 <_Z14Faults_Handlerv+0x18e>
    f0ee:	4e c2       	rjmp	.+1180   	; 0xf58c <_Z14Faults_Handlerv+0x62a>
	{
		return;
	}
	
	if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 15))
    f0f0:	c0 90 a8 13 	lds	r12, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f0f4:	d0 90 a9 13 	lds	r13, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f0f8:	e0 90 aa 13 	lds	r14, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f0fc:	f0 90 ab 13 	lds	r15, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f100:	40 90 a4 13 	lds	r4, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f104:	50 90 a5 13 	lds	r5, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f108:	60 90 a6 13 	lds	r6, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f10c:	70 90 a7 13 	lds	r7, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f110:	20 e0       	ldi	r18, 0x00	; 0
    f112:	30 e0       	ldi	r19, 0x00	; 0
    f114:	48 ec       	ldi	r20, 0xC8	; 200
    f116:	52 e4       	ldi	r21, 0x42	; 66
    f118:	c3 01       	movw	r24, r6
    f11a:	b2 01       	movw	r22, r4
    f11c:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
    f120:	4b 01       	movw	r8, r22
    f122:	5c 01       	movw	r10, r24
    f124:	20 e0       	ldi	r18, 0x00	; 0
    f126:	30 e0       	ldi	r19, 0x00	; 0
    f128:	40 e7       	ldi	r20, 0x70	; 112
    f12a:	51 e4       	ldi	r21, 0x41	; 65
    f12c:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    f130:	9b 01       	movw	r18, r22
    f132:	ac 01       	movw	r20, r24
    f134:	c7 01       	movw	r24, r14
    f136:	b6 01       	movw	r22, r12
    f138:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
    f13c:	87 ff       	sbrs	r24, 7
    f13e:	43 c0       	rjmp	.+134    	; 0xf1c6 <_Z14Faults_Handlerv+0x264>
	{
		if(_sRuble_Parameters.Pump_On_Flag == _ePUMP_ON)
    f140:	20 91 b6 13 	lds	r18, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
    f144:	30 91 b7 13 	lds	r19, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
    f148:	40 91 b8 13 	lds	r20, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
    f14c:	50 91 b9 13 	lds	r21, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
    f150:	60 91 ba 13 	lds	r22, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
    f154:	70 91 bb 13 	lds	r23, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
    f158:	80 91 bc 13 	lds	r24, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
    f15c:	90 91 bd 13 	lds	r25, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
    f160:	a2 e0       	ldi	r26, 0x02	; 2
    f162:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    f166:	79 f5       	brne	.+94     	; 0xf1c6 <_Z14Faults_Handlerv+0x264>
		{
			fault_occure = _kRESET;
    f168:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer = _kRESET;
    f16c:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
			_sRuble_Parameters.Pump_On_Flag = _ePUMP_OFF;
    f170:	84 e0       	ldi	r24, 0x04	; 4
    f172:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    f176:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    f17a:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    f17e:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    f182:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    f186:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    f18a:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    f18e:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
			_sGSM_Query.SMS_Alert |= _ePUMP_OFF;
    f192:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f196:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f19a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f19e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f1a2:	84 60       	ori	r24, 0x04	; 4
    f1a4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f1a8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f1ac:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f1b0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
			_sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
    f1b4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f1b8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f1bc:	84 60       	ori	r24, 0x04	; 4
    f1be:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f1c2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		}
	}
	
	if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current/100) * 18))
    f1c6:	20 e0       	ldi	r18, 0x00	; 0
    f1c8:	30 e0       	ldi	r19, 0x00	; 0
    f1ca:	40 e9       	ldi	r20, 0x90	; 144
    f1cc:	51 e4       	ldi	r21, 0x41	; 65
    f1ce:	c5 01       	movw	r24, r10
    f1d0:	b4 01       	movw	r22, r8
    f1d2:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    f1d6:	9b 01       	movw	r18, r22
    f1d8:	ac 01       	movw	r20, r24
    f1da:	c7 01       	movw	r24, r14
    f1dc:	b6 01       	movw	r22, r12
    f1de:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
    f1e2:	18 16       	cp	r1, r24
    f1e4:	0c f0       	brlt	.+2      	; 0xf1e8 <_Z14Faults_Handlerv+0x286>
    f1e6:	43 c0       	rjmp	.+134    	; 0xf26e <_Z14Faults_Handlerv+0x30c>
	{
		if(_sRuble_Parameters.Pump_On_Flag == _ePUMP_OFF)
    f1e8:	20 91 b6 13 	lds	r18, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
    f1ec:	30 91 b7 13 	lds	r19, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
    f1f0:	40 91 b8 13 	lds	r20, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
    f1f4:	50 91 b9 13 	lds	r21, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
    f1f8:	60 91 ba 13 	lds	r22, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
    f1fc:	70 91 bb 13 	lds	r23, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
    f200:	80 91 bc 13 	lds	r24, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
    f204:	90 91 bd 13 	lds	r25, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
    f208:	a4 e0       	ldi	r26, 0x04	; 4
    f20a:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
    f20e:	79 f5       	brne	.+94     	; 0xf26e <_Z14Faults_Handlerv+0x30c>
		{
			fault_occure = _kRESET;
    f210:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer = _kRESET;
    f214:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
			_sGSM_Query.SMS_Alert |=  _ePUMP_ON;
    f218:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f21c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f220:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f224:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f228:	82 60       	ori	r24, 0x02	; 2
    f22a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f22e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f232:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f236:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
			_sRuble_Parameters.Pump_On_Flag = _ePUMP_ON;
    f23a:	82 e0       	ldi	r24, 0x02	; 2
    f23c:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
    f240:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
    f244:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
    f248:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
    f24c:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
    f250:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
    f254:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
    f258:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
			_sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
    f25c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f260:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f264:	84 60       	ori	r24, 0x04	; 4
    f266:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f26a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
	}
	
	//_kSERAIL_MON_WRITE("Faults_Handler 9 ");
	
	
	if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_MANUAL || ( (_sRuble_Parameters.Start_Monitoring_Pump_Faults_Timer > _kSTART_MONITORING_PUMP_FAULTS_TIMER) && ((_sRuble_Parameters.Irrigating_Plot !=0) ||( _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET) || (_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET))))
    f26e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f272:	82 30       	cpi	r24, 0x02	; 2
    f274:	a9 f0       	breq	.+42     	; 0xf2a0 <_Z14Faults_Handlerv+0x33e>
    f276:	80 91 c8 13 	lds	r24, 0x13C8	; 0x8013c8 <_sRuble_Parameters+0x1a>
    f27a:	90 91 c9 13 	lds	r25, 0x13C9	; 0x8013c9 <_sRuble_Parameters+0x1b>
    f27e:	89 37       	cpi	r24, 0x79	; 121
    f280:	91 05       	cpc	r25, r1
    f282:	08 f4       	brcc	.+2      	; 0xf286 <_Z14Faults_Handlerv+0x324>
    f284:	83 c1       	rjmp	.+774    	; 0xf58c <_Z14Faults_Handlerv+0x62a>
    f286:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
    f28a:	81 11       	cpse	r24, r1
    f28c:	09 c0       	rjmp	.+18     	; 0xf2a0 <_Z14Faults_Handlerv+0x33e>
    f28e:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
    f292:	81 11       	cpse	r24, r1
    f294:	05 c0       	rjmp	.+10     	; 0xf2a0 <_Z14Faults_Handlerv+0x33e>
    f296:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
    f29a:	81 30       	cpi	r24, 0x01	; 1
    f29c:	09 f0       	breq	.+2      	; 0xf2a0 <_Z14Faults_Handlerv+0x33e>
    f29e:	76 c1       	rjmp	.+748    	; 0xf58c <_Z14Faults_Handlerv+0x62a>
	// || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET))
	{
		_sRuble_Parameters.Start_Monitoring_Pump_Faults_Timer = _kSTART_MONITORING_PUMP_FAULTS_TIMER+1;   /* don't want to overflow */
    f2a0:	89 e7       	ldi	r24, 0x79	; 121
    f2a2:	90 e0       	ldi	r25, 0x00	; 0
    f2a4:	90 93 c9 13 	sts	0x13C9, r25	; 0x8013c9 <_sRuble_Parameters+0x1b>
    f2a8:	80 93 c8 13 	sts	0x13C8, r24	; 0x8013c8 <_sRuble_Parameters+0x1a>
		
		if(_sPump_Parameter.Pump_Run_Current > (_sPump_Parameter.Pump_Nominal_Current) + ((_sPump_Parameter.Pump_Nominal_Current/100) * 32))
    f2ac:	20 e0       	ldi	r18, 0x00	; 0
    f2ae:	30 e0       	ldi	r19, 0x00	; 0
    f2b0:	40 e0       	ldi	r20, 0x00	; 0
    f2b2:	52 e4       	ldi	r21, 0x42	; 66
    f2b4:	c5 01       	movw	r24, r10
    f2b6:	b4 01       	movw	r22, r8
    f2b8:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    f2bc:	a3 01       	movw	r20, r6
    f2be:	92 01       	movw	r18, r4
    f2c0:	0e 94 ed d0 	call	0x1a1da	; 0x1a1da <__addsf3>
    f2c4:	9b 01       	movw	r18, r22
    f2c6:	ac 01       	movw	r20, r24
    f2c8:	c7 01       	movw	r24, r14
    f2ca:	b6 01       	movw	r22, r12
    f2cc:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
    f2d0:	18 16       	cp	r1, r24
    f2d2:	0c f0       	brlt	.+2      	; 0xf2d6 <_Z14Faults_Handlerv+0x374>
    f2d4:	52 c0       	rjmp	.+164    	; 0xf37a <_Z14Faults_Handlerv+0x418>
		{
			if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_OVER_LOAD))
    f2d6:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f2da:	89 30       	cpi	r24, 0x09	; 9
    f2dc:	09 f4       	brne	.+2      	; 0xf2e0 <_Z14Faults_Handlerv+0x37e>
    f2de:	53 c0       	rjmp	.+166    	; 0xf386 <_Z14Faults_Handlerv+0x424>
			{
				fault_occure = _eIRRIG_STAT_OVER_LOAD;
    f2e0:	89 e0       	ldi	r24, 0x09	; 9
    f2e2:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    f2e6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f2ea:	81 30       	cpi	r24, 0x01	; 1
    f2ec:	71 f4       	brne	.+28     	; 0xf30a <_Z14Faults_Handlerv+0x3a8>
				{
					_kSERAIL_MON_WRITE("Pump Overlaoded ");
    f2ee:	65 e3       	ldi	r22, 0x35	; 53
    f2f0:	76 e2       	ldi	r23, 0x26	; 38
    f2f2:	86 ec       	ldi	r24, 0xC6	; 198
    f2f4:	94 e1       	ldi	r25, 0x14	; 20
    f2f6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(faults_check_timer);
    f2fa:	4a e0       	ldi	r20, 0x0A	; 10
    f2fc:	50 e0       	ldi	r21, 0x00	; 0
    f2fe:	60 91 df 0c 	lds	r22, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f302:	86 ec       	ldi	r24, 0xC6	; 198
    f304:	94 e1       	ldi	r25, 0x14	; 20
    f306:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
				}
				if(faults_check_timer > 3)
    f30a:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f30e:	84 30       	cpi	r24, 0x04	; 4
    f310:	d0 f1       	brcs	.+116    	; 0xf386 <_Z14Faults_Handlerv+0x424>
				{
					faults_check_timer = 0;
    f312:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    f316:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f31a:	81 30       	cpi	r24, 0x01	; 1
    f31c:	51 f4       	brne	.+20     	; 0xf332 <_Z14Faults_Handlerv+0x3d0>
					{
						_kSERAIL_MON_WRITE("Pump Overlaoded");
    f31e:	65 e2       	ldi	r22, 0x25	; 37
    f320:	76 e2       	ldi	r23, 0x26	; 38
    f322:	86 ec       	ldi	r24, 0xC6	; 198
    f324:	94 e1       	ldi	r25, 0x14	; 20
    f326:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    f32a:	86 ec       	ldi	r24, 0xC6	; 198
    f32c:	94 e1       	ldi	r25, 0x14	; 20
    f32e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					}
					_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_OVER_LOAD;
    f332:	89 e0       	ldi	r24, 0x09	; 9
    f334:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
					_gfault_Occure = _kFAULT_RESET_TIMER;
    f338:	84 e6       	ldi	r24, 0x64	; 100
    f33a:	90 e0       	ldi	r25, 0x00	; 0
    f33c:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f340:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
					_sGSM_Query.SMS_Alert |=  _ePUMP_OVERLOAD;
    f344:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f348:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f34c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f350:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f354:	80 62       	ori	r24, 0x20	; 32
    f356:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f35a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f35e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f362:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
					_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    f366:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f36a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f36e:	82 60       	ori	r24, 0x02	; 2
    f370:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f374:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f378:	06 c0       	rjmp	.+12     	; 0xf386 <_Z14Faults_Handlerv+0x424>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_OVER_LOAD)
    f37a:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f37e:	89 30       	cpi	r24, 0x09	; 9
    f380:	11 f4       	brne	.+4      	; 0xf386 <_Z14Faults_Handlerv+0x424>
			{
				fault_occure = _kRESET;
    f382:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
		
		//_kSERAIL_MON_WRITE("Faults_Handler 10 ");
		
		/*********if pump consume less current which is 60% less than nominal current then there is dry run fault *******************/
		
		if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 58))
    f386:	c0 90 a8 13 	lds	r12, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f38a:	d0 90 a9 13 	lds	r13, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f38e:	e0 90 aa 13 	lds	r14, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f392:	f0 90 ab 13 	lds	r15, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f396:	20 e0       	ldi	r18, 0x00	; 0
    f398:	30 e0       	ldi	r19, 0x00	; 0
    f39a:	48 ec       	ldi	r20, 0xC8	; 200
    f39c:	52 e4       	ldi	r21, 0x42	; 66
    f39e:	60 91 a4 13 	lds	r22, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f3a2:	70 91 a5 13 	lds	r23, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f3a6:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f3aa:	90 91 a7 13 	lds	r25, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f3ae:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
    f3b2:	4b 01       	movw	r8, r22
    f3b4:	5c 01       	movw	r10, r24
    f3b6:	20 e0       	ldi	r18, 0x00	; 0
    f3b8:	30 e0       	ldi	r19, 0x00	; 0
    f3ba:	48 e6       	ldi	r20, 0x68	; 104
    f3bc:	52 e4       	ldi	r21, 0x42	; 66
    f3be:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    f3c2:	9b 01       	movw	r18, r22
    f3c4:	ac 01       	movw	r20, r24
    f3c6:	c7 01       	movw	r24, r14
    f3c8:	b6 01       	movw	r22, r12
    f3ca:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
    f3ce:	87 ff       	sbrs	r24, 7
    f3d0:	63 c0       	rjmp	.+198    	; 0xf498 <_Z14Faults_Handlerv+0x536>
		{
			if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current/100) * 20))
    f3d2:	20 e0       	ldi	r18, 0x00	; 0
    f3d4:	30 e0       	ldi	r19, 0x00	; 0
    f3d6:	40 ea       	ldi	r20, 0xA0	; 160
    f3d8:	51 e4       	ldi	r21, 0x41	; 65
    f3da:	c5 01       	movw	r24, r10
    f3dc:	b4 01       	movw	r22, r8
    f3de:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    f3e2:	9b 01       	movw	r18, r22
    f3e4:	ac 01       	movw	r20, r24
    f3e6:	c7 01       	movw	r24, r14
    f3e8:	b6 01       	movw	r22, r12
    f3ea:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
    f3ee:	18 16       	cp	r1, r24
    f3f0:	0c f0       	brlt	.+2      	; 0xf3f4 <_Z14Faults_Handlerv+0x492>
    f3f2:	58 c0       	rjmp	.+176    	; 0xf4a4 <_Z14Faults_Handlerv+0x542>
			{
				if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_DRY_RUN))
    f3f4:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f3f8:	81 30       	cpi	r24, 0x01	; 1
    f3fa:	09 f4       	brne	.+2      	; 0xf3fe <_Z14Faults_Handlerv+0x49c>
    f3fc:	53 c0       	rjmp	.+166    	; 0xf4a4 <_Z14Faults_Handlerv+0x542>
				{
					fault_occure = _eIRRIG_STAT_DRY_RUN;
    f3fe:	81 e0       	ldi	r24, 0x01	; 1
    f400:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    f404:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f408:	81 30       	cpi	r24, 0x01	; 1
    f40a:	71 f4       	brne	.+28     	; 0xf428 <_Z14Faults_Handlerv+0x4c6>
					{
						_kSERAIL_MON_WRITE("Pump Dry Run ");
    f40c:	67 e1       	ldi	r22, 0x17	; 23
    f40e:	76 e2       	ldi	r23, 0x26	; 38
    f410:	86 ec       	ldi	r24, 0xC6	; 198
    f412:	94 e1       	ldi	r25, 0x14	; 20
    f414:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(faults_check_timer);
    f418:	4a e0       	ldi	r20, 0x0A	; 10
    f41a:	50 e0       	ldi	r21, 0x00	; 0
    f41c:	60 91 df 0c 	lds	r22, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f420:	86 ec       	ldi	r24, 0xC6	; 198
    f422:	94 e1       	ldi	r25, 0x14	; 20
    f424:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
					}
					if(faults_check_timer > 3)
    f428:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f42c:	84 30       	cpi	r24, 0x04	; 4
    f42e:	d0 f1       	brcs	.+116    	; 0xf4a4 <_Z14Faults_Handlerv+0x542>
					{
						faults_check_timer = 0;
    f430:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    f434:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f438:	81 30       	cpi	r24, 0x01	; 1
    f43a:	51 f4       	brne	.+20     	; 0xf450 <_Z14Faults_Handlerv+0x4ee>
						{
							_kSERAIL_MON_WRITE("Pump Dry Run");
    f43c:	6a e0       	ldi	r22, 0x0A	; 10
    f43e:	76 e2       	ldi	r23, 0x26	; 38
    f440:	86 ec       	ldi	r24, 0xC6	; 198
    f442:	94 e1       	ldi	r25, 0x14	; 20
    f444:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    f448:	86 ec       	ldi	r24, 0xC6	; 198
    f44a:	94 e1       	ldi	r25, 0x14	; 20
    f44c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
						}
						_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_DRY_RUN;
    f450:	81 e0       	ldi	r24, 0x01	; 1
    f452:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    f456:	84 e6       	ldi	r24, 0x64	; 100
    f458:	90 e0       	ldi	r25, 0x00	; 0
    f45a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f45e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
						_sGSM_Query.SMS_Alert |=  _eDRY_RUN;
    f462:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
    f466:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
    f46a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
    f46e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
    f472:	90 61       	ori	r25, 0x10	; 16
    f474:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
    f478:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
    f47c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
    f480:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    f484:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f488:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f48c:	82 60       	ori	r24, 0x02	; 2
    f48e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f492:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f496:	06 c0       	rjmp	.+12     	; 0xf4a4 <_Z14Faults_Handlerv+0x542>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_DRY_RUN)
    f498:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f49c:	81 30       	cpi	r24, 0x01	; 1
    f49e:	11 f4       	brne	.+4      	; 0xf4a4 <_Z14Faults_Handlerv+0x542>
			{
				fault_occure = _kRESET;
    f4a0:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
		}
		
		//_kSERAIL_MON_WRITE("Faults_Handler 11 ");
		
		/*********if pump consume less current which is 90% less than nominal current then there is line fault *******************/
		if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 15))
    f4a4:	20 e0       	ldi	r18, 0x00	; 0
    f4a6:	30 e0       	ldi	r19, 0x00	; 0
    f4a8:	48 ec       	ldi	r20, 0xC8	; 200
    f4aa:	52 e4       	ldi	r21, 0x42	; 66
    f4ac:	60 91 a4 13 	lds	r22, 0x13A4	; 0x8013a4 <_sPump_Parameter>
    f4b0:	70 91 a5 13 	lds	r23, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
    f4b4:	80 91 a6 13 	lds	r24, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
    f4b8:	90 91 a7 13 	lds	r25, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
    f4bc:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
    f4c0:	20 e0       	ldi	r18, 0x00	; 0
    f4c2:	30 e0       	ldi	r19, 0x00	; 0
    f4c4:	40 e7       	ldi	r20, 0x70	; 112
    f4c6:	51 e4       	ldi	r21, 0x41	; 65
    f4c8:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    f4cc:	9b 01       	movw	r18, r22
    f4ce:	ac 01       	movw	r20, r24
    f4d0:	60 91 a8 13 	lds	r22, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
    f4d4:	70 91 a9 13 	lds	r23, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
    f4d8:	80 91 aa 13 	lds	r24, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
    f4dc:	90 91 ab 13 	lds	r25, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
    f4e0:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
    f4e4:	87 ff       	sbrs	r24, 7
    f4e6:	46 c0       	rjmp	.+140    	; 0xf574 <_Z14Faults_Handlerv+0x612>
		{
			if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    f4e8:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f4ec:	98 2f       	mov	r25, r24
    f4ee:	9d 7f       	andi	r25, 0xFD	; 253
    f4f0:	91 30       	cpi	r25, 0x01	; 1
    f4f2:	19 f0       	breq	.+6      	; 0xf4fa <_Z14Faults_Handlerv+0x598>
    f4f4:	85 30       	cpi	r24, 0x05	; 5
    f4f6:	09 f0       	breq	.+2      	; 0xf4fa <_Z14Faults_Handlerv+0x598>
    f4f8:	43 c0       	rjmp	.+134    	; 0xf580 <_Z14Faults_Handlerv+0x61e>
			_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
			{
				if(_kGPIO_GET(_kPUMP_1) == _kPUMP_ON)
    f4fa:	8a e0       	ldi	r24, 0x0A	; 10
    f4fc:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
    f500:	89 2b       	or	r24, r25
    f502:	f1 f5       	brne	.+124    	; 0xf580 <_Z14Faults_Handlerv+0x61e>
				{
					if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_LINE_FAULT))
    f504:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
    f508:	84 30       	cpi	r24, 0x04	; 4
    f50a:	d1 f1       	breq	.+116    	; 0xf580 <_Z14Faults_Handlerv+0x61e>
					{
						fault_occure = _eIRRIG_STAT_LINE_FAULT;
						fault_occure = _eIRRIG_STAT_DRY_RUN;
    f50c:	81 e0       	ldi	r24, 0x01	; 1
    f50e:	80 93 e0 0c 	sts	0x0CE0, r24	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    f512:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f516:	81 30       	cpi	r24, 0x01	; 1
    f518:	31 f4       	brne	.+12     	; 0xf526 <_Z14Faults_Handlerv+0x5c4>
						{
							_kSERAIL_MON_WRITE("Pump Line Fault ");
    f51a:	69 ef       	ldi	r22, 0xF9	; 249
    f51c:	75 e2       	ldi	r23, 0x25	; 37
    f51e:	86 ec       	ldi	r24, 0xC6	; 198
    f520:	94 e1       	ldi	r25, 0x14	; 20
    f522:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
						}
						if(faults_check_timer > 3)
    f526:	80 91 df 0c 	lds	r24, 0x0CDF	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
    f52a:	84 30       	cpi	r24, 0x04	; 4
    f52c:	48 f1       	brcs	.+82     	; 0xf580 <_Z14Faults_Handlerv+0x61e>
						{
							faults_check_timer = _kRESET;
    f52e:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    f532:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f536:	81 30       	cpi	r24, 0x01	; 1
    f538:	51 f4       	brne	.+20     	; 0xf54e <_Z14Faults_Handlerv+0x5ec>
							{
								_kSERAIL_MON_WRITE("Pump Line Fault");
    f53a:	69 ee       	ldi	r22, 0xE9	; 233
    f53c:	75 e2       	ldi	r23, 0x25	; 37
    f53e:	86 ec       	ldi	r24, 0xC6	; 198
    f540:	94 e1       	ldi	r25, 0x14	; 20
    f542:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    f546:	86 ec       	ldi	r24, 0xC6	; 198
    f548:	94 e1       	ldi	r25, 0x14	; 20
    f54a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
							}
							
							_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    f54e:	84 e0       	ldi	r24, 0x04	; 4
    f550:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    f554:	84 e6       	ldi	r24, 0x64	; 100
    f556:	90 e0       	ldi	r25, 0x00	; 0
    f558:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
    f55c:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
							{
								_sRuble_Parameters.Line_Fault_Flag = _kSET;
								_sGSM_Query.SMS_Alert |=  _eLINE_FAULT_SMS;
							}*/
							
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    f560:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f564:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f568:	82 60       	ori	r24, 0x02	; 2
    f56a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f56e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
    f572:	06 c0       	rjmp	.+12     	; 0xf580 <_Z14Faults_Handlerv+0x61e>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_LINE_FAULT)
    f574:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f578:	84 30       	cpi	r24, 0x04	; 4
    f57a:	11 f4       	brne	.+4      	; 0xf580 <_Z14Faults_Handlerv+0x61e>
			{
				fault_occure = _kRESET;
    f57c:	10 92 e0 0c 	sts	0x0CE0, r1	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
				_sRuble_Parameters.Line_Fault_Flag = _kRESET;
				//_sGSM_Query.SMS_Alert |=  _e3PHASE_POWER_INTERRUPTED;
			}*/
		}
		
		if(fault_occure == _kRESET)
    f580:	80 91 e0 0c 	lds	r24, 0x0CE0	; 0x800ce0 <_ZZ14Faults_HandlervE12fault_occure>
    f584:	81 11       	cpse	r24, r1
    f586:	02 c0       	rjmp	.+4      	; 0xf58c <_Z14Faults_Handlerv+0x62a>
		{
			faults_check_timer = _kRESET;
    f588:	10 92 df 0c 	sts	0x0CDF, r1	; 0x800cdf <_ZZ14Faults_HandlervE18faults_check_timer>
		}
	}
	
	//_kSERAIL_MON_WRITE("Faults_Handler 12 ");
}
    f58c:	ff 90       	pop	r15
    f58e:	ef 90       	pop	r14
    f590:	df 90       	pop	r13
    f592:	cf 90       	pop	r12
    f594:	bf 90       	pop	r11
    f596:	af 90       	pop	r10
    f598:	9f 90       	pop	r9
    f59a:	8f 90       	pop	r8
    f59c:	7f 90       	pop	r7
    f59e:	6f 90       	pop	r6
    f5a0:	5f 90       	pop	r5
    f5a2:	4f 90       	pop	r4
    f5a4:	08 95       	ret

0000f5a6 <_Z18Local_Time_Settingv>:
	}
}


void Local_Time_Setting(void)
{
    f5a6:	0f 93       	push	r16
	Reset_Buffer();
    f5a8:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
	_kSERIAL_AT.println(F("AT"));
    f5ac:	6e e6       	ldi	r22, 0x6E	; 110
    f5ae:	75 e2       	ldi	r23, 0x25	; 37
    f5b0:	83 e8       	ldi	r24, 0x83	; 131
    f5b2:	96 e1       	ldi	r25, 0x16	; 22
    f5b4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(Send_AT_Command(NULL, "OK",  NULL,3000,2))
    f5b8:	02 e0       	ldi	r16, 0x02	; 2
    f5ba:	28 eb       	ldi	r18, 0xB8	; 184
    f5bc:	3b e0       	ldi	r19, 0x0B	; 11
    f5be:	40 e0       	ldi	r20, 0x00	; 0
    f5c0:	50 e0       	ldi	r21, 0x00	; 0
    f5c2:	6e e1       	ldi	r22, 0x1E	; 30
    f5c4:	73 e0       	ldi	r23, 0x03	; 3
    f5c6:	80 e0       	ldi	r24, 0x00	; 0
    f5c8:	90 e0       	ldi	r25, 0x00	; 0
    f5ca:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    f5ce:	88 23       	and	r24, r24
    f5d0:	c1 f1       	breq	.+112    	; 0xf642 <_Z18Local_Time_Settingv+0x9c>
	{	
		Reset_Buffer();		
    f5d2:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("ATE0"));
    f5d6:	69 e6       	ldi	r22, 0x69	; 105
    f5d8:	75 e2       	ldi	r23, 0x25	; 37
    f5da:	83 e8       	ldi	r24, 0x83	; 131
    f5dc:	96 e1       	ldi	r25, 0x16	; 22
    f5de:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    f5e2:	28 eb       	ldi	r18, 0xB8	; 184
    f5e4:	3b e0       	ldi	r19, 0x0B	; 11
    f5e6:	40 e0       	ldi	r20, 0x00	; 0
    f5e8:	50 e0       	ldi	r21, 0x00	; 0
    f5ea:	6e e1       	ldi	r22, 0x1E	; 30
    f5ec:	73 e0       	ldi	r23, 0x03	; 3
    f5ee:	80 e0       	ldi	r24, 0x00	; 0
    f5f0:	90 e0       	ldi	r25, 0x00	; 0
    f5f2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
		
		Reset_Buffer();
    f5f6:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CPIN?"));
    f5fa:	60 e6       	ldi	r22, 0x60	; 96
    f5fc:	75 e2       	ldi	r23, 0x25	; 37
    f5fe:	83 e8       	ldi	r24, 0x83	; 131
    f600:	96 e1       	ldi	r25, 0x16	; 22
    f602:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		
		if(!Send_AT_Command(NULL, "OK",  NULL,10000,2))
    f606:	20 e1       	ldi	r18, 0x10	; 16
    f608:	37 e2       	ldi	r19, 0x27	; 39
    f60a:	40 e0       	ldi	r20, 0x00	; 0
    f60c:	50 e0       	ldi	r21, 0x00	; 0
    f60e:	6e e1       	ldi	r22, 0x1E	; 30
    f610:	73 e0       	ldi	r23, 0x03	; 3
    f612:	80 e0       	ldi	r24, 0x00	; 0
    f614:	90 e0       	ldi	r25, 0x00	; 0
    f616:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
    f61a:	81 11       	cpse	r24, r1
    f61c:	15 c0       	rjmp	.+42     	; 0xf648 <_Z18Local_Time_Settingv+0xa2>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f61e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f622:	81 30       	cpi	r24, 0x01	; 1
    f624:	51 f4       	brne	.+20     	; 0xf63a <_Z18Local_Time_Settingv+0x94>
			{
				_kSERAIL_MON_WRITE("check sim me");
    f626:	63 e5       	ldi	r22, 0x53	; 83
    f628:	75 e2       	ldi	r23, 0x25	; 37
    f62a:	86 ec       	ldi	r24, 0xC6	; 198
    f62c:	94 e1       	ldi	r25, 0x14	; 20
    f62e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    f632:	86 ec       	ldi	r24, 0xC6	; 198
    f634:	94 e1       	ldi	r25, 0x14	; 20
    f636:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Sim_Check = _eSIM_NOT_INSERTED;
    f63a:	81 e0       	ldi	r24, 0x01	; 1
    f63c:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
    f640:	03 c0       	rjmp	.+6      	; 0xf648 <_Z18Local_Time_Settingv+0xa2>
		}
	}
	else
	{
		_sGSM_Query.Gsm_Module_Test = _kSET;
    f642:	81 e0       	ldi	r24, 0x01	; 1
    f644:	80 93 69 0c 	sts	0x0C69, r24	; 0x800c69 <_sGSM_Query+0x5>
	}
}
    f648:	0f 91       	pop	r16
    f64a:	08 95       	ret

0000f64c <_Z21Exra_Plot_Data_EEPROMh>:


void Exra_Plot_Data_EEPROM(unsigned char plot_number)
{
    f64c:	cf 92       	push	r12
    f64e:	df 92       	push	r13
    f650:	ef 92       	push	r14
    f652:	ff 92       	push	r15
    f654:	0f 93       	push	r16
    f656:	1f 93       	push	r17
    f658:	cf 93       	push	r28
    f65a:	df 93       	push	r29
    f65c:	1f 92       	push	r1
    f65e:	1f 92       	push	r1
    f660:	cd b7       	in	r28, 0x3d	; 61
    f662:	de b7       	in	r29, 0x3e	; 62
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    f664:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    f668:	08 2f       	mov	r16, r24
    f66a:	10 e0       	ldi	r17, 0x00	; 0
    f66c:	91 30       	cpi	r25, 0x01	; 1
    f66e:	d9 f0       	breq	.+54     	; 0xf6a6 <_Z21Exra_Plot_Data_EEPROMh+0x5a>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[plot_number-1].Euro_Valve_Group[i]);
			_kSERIAL_MON_CLEAR();
		}
	}
	
	_kEEPROM_WRITE(_kEEPROM_EXTRA_PLOT_DATA(plot_number), _sExtra_Plot[plot_number-1]);
    f670:	01 50       	subi	r16, 0x01	; 1
    f672:	11 09       	sbc	r17, r1
    f674:	8e e1       	ldi	r24, 0x1E	; 30
    f676:	80 9f       	mul	r24, r16
    f678:	90 01       	movw	r18, r0
    f67a:	81 9f       	mul	r24, r17
    f67c:	30 0d       	add	r19, r0
    f67e:	11 24       	eor	r1, r1
    f680:	79 01       	movw	r14, r18
    f682:	8f e0       	ldi	r24, 0x0F	; 15
    f684:	e8 1a       	sub	r14, r24
    f686:	86 ef       	ldi	r24, 0xF6	; 246
    f688:	f8 0a       	sbc	r15, r24
    f68a:	8b e1       	ldi	r24, 0x1B	; 27
    f68c:	80 9f       	mul	r24, r16
    f68e:	a0 01       	movw	r20, r0
    f690:	81 9f       	mul	r24, r17
    f692:	50 0d       	add	r21, r0
    f694:	11 24       	eor	r1, r1
    f696:	fa 01       	movw	r30, r20
    f698:	e8 51       	subi	r30, 0x18	; 24
    f69a:	f2 4f       	sbci	r31, 0xF2	; 242
    f69c:	6f 01       	movw	r12, r30
    f69e:	89 01       	movw	r16, r18
    f6a0:	04 5f       	subi	r16, 0xF4	; 244
    f6a2:	15 4f       	sbci	r17, 0xF5	; 245
    f6a4:	5f c0       	rjmp	.+190    	; 0xf764 <_Z21Exra_Plot_Data_EEPROMh+0x118>

void Exra_Plot_Data_EEPROM(unsigned char plot_number)
{
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		Serial.println();
    f6a6:	86 ec       	ldi	r24, 0xC6	; 198
    f6a8:	94 e1       	ldi	r25, 0x14	; 20
    f6aa:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
		_kSERAIL_MON_WRITE_NO_LN("extra plot : ");
    f6ae:	65 e4       	ldi	r22, 0x45	; 69
    f6b0:	75 e2       	ldi	r23, 0x25	; 37
    f6b2:	86 ec       	ldi	r24, 0xC6	; 198
    f6b4:	94 e1       	ldi	r25, 0x14	; 20
    f6b6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM((int )plot_number);
    f6ba:	4a e0       	ldi	r20, 0x0A	; 10
    f6bc:	50 e0       	ldi	r21, 0x00	; 0
    f6be:	b8 01       	movw	r22, r16
    f6c0:	86 ec       	ldi	r24, 0xC6	; 198
    f6c2:	94 e1       	ldi	r25, 0x14	; 20
    f6c4:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
		Serial.println();
    f6c8:	86 ec       	ldi	r24, 0xC6	; 198
    f6ca:	94 e1       	ldi	r25, 0x14	; 20
    f6cc:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
		_kSERIAL_MON_CLEAR();
    f6d0:	86 ec       	ldi	r24, 0xC6	; 198
    f6d2:	94 e1       	ldi	r25, 0x14	; 20
    f6d4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("data saving in eeprom ");
    f6d8:	6e e2       	ldi	r22, 0x2E	; 46
    f6da:	75 e2       	ldi	r23, 0x25	; 37
    f6dc:	86 ec       	ldi	r24, 0xC6	; 198
    f6de:	94 e1       	ldi	r25, 0x14	; 20
    f6e0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number.: ");
    f6e4:	69 e1       	ldi	r22, 0x19	; 25
    f6e6:	75 e2       	ldi	r23, 0x25	; 37
    f6e8:	86 ec       	ldi	r24, 0xC6	; 198
    f6ea:	94 e1       	ldi	r25, 0x14	; 20
    f6ec:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[plot_number-1].Extra_Plot_Number);
    f6f0:	c8 01       	movw	r24, r16
    f6f2:	01 97       	sbiw	r24, 0x01	; 1
    f6f4:	2b e1       	ldi	r18, 0x1B	; 27
    f6f6:	28 9f       	mul	r18, r24
    f6f8:	60 01       	movw	r12, r0
    f6fa:	29 9f       	mul	r18, r25
    f6fc:	d0 0c       	add	r13, r0
    f6fe:	11 24       	eor	r1, r1
    f700:	f6 01       	movw	r30, r12
    f702:	e8 51       	subi	r30, 0x18	; 24
    f704:	f2 4f       	sbci	r31, 0xF2	; 242
    f706:	4a e0       	ldi	r20, 0x0A	; 10
    f708:	50 e0       	ldi	r21, 0x00	; 0
    f70a:	61 81       	ldd	r22, Z+1	; 0x01
    f70c:	86 ec       	ldi	r24, 0xC6	; 198
    f70e:	94 e1       	ldi	r25, 0x14	; 20
    f710:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    f714:	86 ec       	ldi	r24, 0xC6	; 198
    f716:	94 e1       	ldi	r25, 0x14	; 20
    f718:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
		for(int i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    f71c:	e1 2c       	mov	r14, r1
    f71e:	f1 2c       	mov	r15, r1
		{
			Serial.println();
    f720:	86 ec       	ldi	r24, 0xC6	; 198
    f722:	94 e1       	ldi	r25, 0x14	; 20
    f724:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
			_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    f728:	6d e0       	ldi	r22, 0x0D	; 13
    f72a:	75 e2       	ldi	r23, 0x25	; 37
    f72c:	86 ec       	ldi	r24, 0xC6	; 198
    f72e:	94 e1       	ldi	r25, 0x14	; 20
    f730:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[plot_number-1].Euro_Valve_Group[i]);
    f734:	f7 01       	movw	r30, r14
    f736:	ec 0d       	add	r30, r12
    f738:	fd 1d       	adc	r31, r13
    f73a:	e8 51       	subi	r30, 0x18	; 24
    f73c:	f2 4f       	sbci	r31, 0xF2	; 242
    f73e:	4a e0       	ldi	r20, 0x0A	; 10
    f740:	50 e0       	ldi	r21, 0x00	; 0
    f742:	65 81       	ldd	r22, Z+5	; 0x05
    f744:	86 ec       	ldi	r24, 0xC6	; 198
    f746:	94 e1       	ldi	r25, 0x14	; 20
    f748:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
			_kSERIAL_MON_CLEAR();
    f74c:	86 ec       	ldi	r24, 0xC6	; 198
    f74e:	94 e1       	ldi	r25, 0x14	; 20
    f750:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("data saving in eeprom ");
		_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number.: ");
		_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[plot_number-1].Extra_Plot_Number);
		_kSERIAL_MON_CLEAR();
	
		for(int i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    f754:	ff ef       	ldi	r31, 0xFF	; 255
    f756:	ef 1a       	sub	r14, r31
    f758:	ff 0a       	sbc	r15, r31
    f75a:	85 e0       	ldi	r24, 0x05	; 5
    f75c:	e8 16       	cp	r14, r24
    f75e:	f1 04       	cpc	r15, r1
    f760:	f9 f6       	brne	.-66     	; 0xf720 <_Z21Exra_Plot_Data_EEPROMh+0xd4>
    f762:	86 cf       	rjmp	.-244    	; 0xf670 <_Z21Exra_Plot_Data_EEPROMh+0x24>
    f764:	f6 01       	movw	r30, r12
    f766:	61 91       	ld	r22, Z+
    f768:	6f 01       	movw	r12, r30
    f76a:	fa 82       	std	Y+2, r15	; 0x02
    f76c:	e9 82       	std	Y+1, r14	; 0x01
    f76e:	ce 01       	movw	r24, r28
    f770:	01 96       	adiw	r24, 0x01	; 1
    f772:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    f776:	ff ef       	ldi	r31, 0xFF	; 255
    f778:	ef 1a       	sub	r14, r31
    f77a:	ff 0a       	sbc	r15, r31
    f77c:	e0 16       	cp	r14, r16
    f77e:	f1 06       	cpc	r15, r17
    f780:	89 f7       	brne	.-30     	; 0xf764 <_Z21Exra_Plot_Data_EEPROMh+0x118>
		}
	}
	
	_kEEPROM_WRITE(_kEEPROM_EXTRA_PLOT_DATA(plot_number), _sExtra_Plot[plot_number-1]);
	return;
}
    f782:	0f 90       	pop	r0
    f784:	0f 90       	pop	r0
    f786:	df 91       	pop	r29
    f788:	cf 91       	pop	r28
    f78a:	1f 91       	pop	r17
    f78c:	0f 91       	pop	r16
    f78e:	ff 90       	pop	r15
    f790:	ef 90       	pop	r14
    f792:	df 90       	pop	r13
    f794:	cf 90       	pop	r12
    f796:	08 95       	ret

0000f798 <_Z11Read_EEPROMv>:
	
}


void Read_EEPROM(void)
{
    f798:	4f 92       	push	r4
    f79a:	5f 92       	push	r5
    f79c:	6f 92       	push	r6
    f79e:	7f 92       	push	r7
    f7a0:	8f 92       	push	r8
    f7a2:	9f 92       	push	r9
    f7a4:	af 92       	push	r10
    f7a6:	bf 92       	push	r11
    f7a8:	cf 92       	push	r12
    f7aa:	df 92       	push	r13
    f7ac:	ef 92       	push	r14
    f7ae:	ff 92       	push	r15
    f7b0:	0f 93       	push	r16
    f7b2:	1f 93       	push	r17
    f7b4:	cf 93       	push	r28
    f7b6:	df 93       	push	r29
    f7b8:	cd b7       	in	r28, 0x3d	; 61
    f7ba:	de b7       	in	r29, 0x3e	; 62
    f7bc:	e4 97       	sbiw	r28, 0x34	; 52
    f7be:	0f b6       	in	r0, 0x3f	; 63
    f7c0:	f8 94       	cli
    f7c2:	de bf       	out	0x3e, r29	; 62
    f7c4:	0f be       	out	0x3f, r0	; 63
    f7c6:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_data[50],count=0,i=0,j=0;
	
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
    f7c8:	64 ea       	ldi	r22, 0xA4	; 164
    f7ca:	73 e1       	ldi	r23, 0x13	; 19
    f7cc:	8f e0       	ldi	r24, 0x0F	; 15
    f7ce:	95 e0       	ldi	r25, 0x05	; 5
    f7d0:	0e 94 7d 73 	call	0xe6fa	; 0xe6fa <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    f7d4:	fe ec       	ldi	r31, 0xCE	; 206
    f7d6:	ef 2e       	mov	r14, r31
    f7d8:	f3 e1       	ldi	r31, 0x13	; 19
    f7da:	ff 2e       	mov	r15, r31
    f7dc:	67 01       	movw	r12, r14
    f7de:	00 e0       	ldi	r16, 0x00	; 0
    f7e0:	10 e0       	ldi	r17, 0x00	; 0
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f7e2:	ce 01       	movw	r24, r28
    f7e4:	01 96       	adiw	r24, 0x01	; 1
    f7e6:	3c 01       	movw	r6, r24
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f7e8:	1a 83       	std	Y+2, r17	; 0x02
    f7ea:	09 83       	std	Y+1, r16	; 0x01
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f7ec:	c3 01       	movw	r24, r6
    f7ee:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f7f2:	f6 01       	movw	r30, r12
    f7f4:	81 93       	st	Z+, r24
    f7f6:	6f 01       	movw	r12, r30
    f7f8:	0f 5f       	subi	r16, 0xFF	; 255
    f7fa:	1f 4f       	sbci	r17, 0xFF	; 255
    f7fc:	07 30       	cpi	r16, 0x07	; 7
    f7fe:	11 05       	cpc	r17, r1
    f800:	99 f7       	brne	.-26     	; 0xf7e8 <_Z11Read_EEPROMv+0x50>
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);
    f802:	f7 01       	movw	r30, r14
    f804:	61 91       	ld	r22, Z+
    f806:	7f 01       	movw	r14, r30
    f808:	86 ec       	ldi	r24, 0xC6	; 198
    f80a:	94 e1       	ldi	r25, 0x14	; 20
    f80c:	0e 94 71 d3 	call	0x1a6e2	; 0x1a6e2 <_ZN14HardwareSerial5writeEh>
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
    f810:	f4 ed       	ldi	r31, 0xD4	; 212
    f812:	ef 16       	cp	r14, r31
    f814:	f3 e1       	ldi	r31, 0x13	; 19
    f816:	ff 06       	cpc	r15, r31
    f818:	a1 f7       	brne	.-24     	; 0xf802 <_Z11Read_EEPROMv+0x6a>
    f81a:	7e e4       	ldi	r23, 0x4E	; 78
    f81c:	c7 2e       	mov	r12, r23
    f81e:	7d e0       	ldi	r23, 0x0D	; 13
    f820:	d7 2e       	mov	r13, r23
    f822:	08 e0       	ldi	r16, 0x08	; 8
    f824:	10 e0       	ldi	r17, 0x00	; 0
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		memset(temp_data,0,sizeof(temp_data));
    f826:	e2 e3       	ldi	r30, 0x32	; 50
    f828:	5e 2e       	mov	r5, r30
    f82a:	f3 01       	movw	r30, r6
    f82c:	85 2d       	mov	r24, r5
    f82e:	11 92       	st	Z+, r1
    f830:	8a 95       	dec	r24
    f832:	e9 f7       	brne	.-6      	; 0xf82e <_Z11Read_EEPROMv+0x96>
    f834:	48 01       	movw	r8, r16
    f836:	96 e0       	ldi	r25, 0x06	; 6
    f838:	89 0e       	add	r8, r25
    f83a:	91 1c       	adc	r9, r1
    f83c:	56 01       	movw	r10, r12
    f83e:	78 01       	movw	r14, r16
    f840:	fc aa       	std	Y+52, r15	; 0x34
    f842:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f844:	ce 01       	movw	r24, r28
    f846:	c3 96       	adiw	r24, 0x33	; 51
    f848:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f84c:	f5 01       	movw	r30, r10
    f84e:	81 93       	st	Z+, r24
    f850:	5f 01       	movw	r10, r30
    f852:	ff ef       	ldi	r31, 0xFF	; 255
    f854:	ef 1a       	sub	r14, r31
    f856:	ff 0a       	sbc	r15, r31
    f858:	8e 14       	cp	r8, r14
    f85a:	9f 04       	cpc	r9, r15
    f85c:	89 f7       	brne	.-30     	; 0xf840 <_Z11Read_EEPROMv+0xa8>
    f85e:	08 5d       	subi	r16, 0xD8	; 216
    f860:	1f 4f       	sbci	r17, 0xFF	; 255
    f862:	86 e0       	ldi	r24, 0x06	; 6
    f864:	c8 0e       	add	r12, r24
    f866:	d1 1c       	adc	r13, r1
	/************************* Read FC value ******************************/
	//_kEEPROM_READ(_kEEPROM_LOC_FC_VALUE,_sRuble_Parameters.FC_Value_Deafault);
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    f868:	08 33       	cpi	r16, 0x38	; 56
    f86a:	92 e0       	ldi	r25, 0x02	; 2
    f86c:	19 07       	cpc	r17, r25
    f86e:	e9 f6       	brne	.-70     	; 0xf82a <_Z11Read_EEPROMv+0x92>
    f870:	65 e1       	ldi	r22, 0x15	; 21
    f872:	c6 2e       	mov	r12, r22
    f874:	6c e0       	ldi	r22, 0x0C	; 12
    f876:	d6 2e       	mov	r13, r22
    f878:	0a ec       	ldi	r16, 0xCA	; 202
    f87a:	13 e0       	ldi	r17, 0x03	; 3
    f87c:	48 01       	movw	r8, r16
    f87e:	ed e0       	ldi	r30, 0x0D	; 13
    f880:	8e 0e       	add	r8, r30
    f882:	91 1c       	adc	r9, r1
    f884:	56 01       	movw	r10, r12
    f886:	78 01       	movw	r14, r16
    f888:	fc aa       	std	Y+52, r15	; 0x34
    f88a:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f88c:	ce 01       	movw	r24, r28
    f88e:	c3 96       	adiw	r24, 0x33	; 51
    f890:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f894:	f5 01       	movw	r30, r10
    f896:	81 93       	st	Z+, r24
    f898:	5f 01       	movw	r10, r30
    f89a:	ff ef       	ldi	r31, 0xFF	; 255
    f89c:	ef 1a       	sub	r14, r31
    f89e:	ff 0a       	sbc	r15, r31
    f8a0:	8e 14       	cp	r8, r14
    f8a2:	9f 04       	cpc	r9, r15
    f8a4:	89 f7       	brne	.-30     	; 0xf888 <_Z11Read_EEPROMv+0xf0>
    f8a6:	0c 5e       	subi	r16, 0xEC	; 236
    f8a8:	1f 4f       	sbci	r17, 0xFF	; 255
    f8aa:	8d e0       	ldi	r24, 0x0D	; 13
    f8ac:	c8 0e       	add	r12, r24
    f8ae:	d1 1c       	adc	r13, r1
		_kEEPROM_READ(_kEEPROM_LOC_LIRA_SENSOR_DATA(i),_sLira_Node_Param[i]);
	}
	
	/*************************** Update all euro valve data ********************************/
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f8b0:	02 34       	cpi	r16, 0x42	; 66
    f8b2:	94 e0       	ldi	r25, 0x04	; 4
    f8b4:	19 07       	cpc	r17, r25
    f8b6:	11 f7       	brne	.-60     	; 0xf87c <_Z11Read_EEPROMv+0xe4>
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_sEuro_Valve_Param[i].Euro_Valve_Status = _kUNDEFINED;
    f8b8:	14 e0       	ldi	r17, 0x04	; 4
    f8ba:	10 93 1f 0c 	sts	0x0C1F, r17	; 0x800c1f <_sEuro_Valve_Param+0xa>
    f8be:	10 93 2c 0c 	sts	0x0C2C, r17	; 0x800c2c <_sEuro_Valve_Param+0x17>
    f8c2:	10 93 39 0c 	sts	0x0C39, r17	; 0x800c39 <_sEuro_Valve_Param+0x24>
    f8c6:	10 93 46 0c 	sts	0x0C46, r17	; 0x800c46 <_sEuro_Valve_Param+0x31>
    f8ca:	10 93 53 0c 	sts	0x0C53, r17	; 0x800c53 <_sEuro_Valve_Param+0x3e>
    f8ce:	10 93 60 0c 	sts	0x0C60, r17	; 0x800c60 <_sEuro_Valve_Param+0x4b>
	/******************************************* update hardware version **************************/
	//_kEEPROM_READ(_kEEPROM_LOC_HARDWARE_VESRION,_sRuble_Parameters.Hardware_Version);
	
	
	/******************************************* update operation mode **************************/
	_kEEPROM_READ(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f8d2:	65 ed       	ldi	r22, 0xD5	; 213
    f8d4:	73 e1       	ldi	r23, 0x13	; 19
    f8d6:	88 ed       	ldi	r24, 0xD8	; 216
    f8d8:	94 e0       	ldi	r25, 0x04	; 4
    f8da:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	switch(_sRuble_Parameters.Operation_Mode)
    f8de:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    f8e2:	83 30       	cpi	r24, 0x03	; 3
    f8e4:	99 f0       	breq	.+38     	; 0xf90c <_Z11Read_EEPROMv+0x174>
    f8e6:	28 f4       	brcc	.+10     	; 0xf8f2 <_Z11Read_EEPROMv+0x15a>
    f8e8:	81 30       	cpi	r24, 0x01	; 1
    f8ea:	39 f0       	breq	.+14     	; 0xf8fa <_Z11Read_EEPROMv+0x162>
    f8ec:	82 30       	cpi	r24, 0x02	; 2
    f8ee:	c9 f1       	breq	.+114    	; 0xf962 <_Z11Read_EEPROMv+0x1ca>
    f8f0:	41 c0       	rjmp	.+130    	; 0xf974 <_Z11Read_EEPROMv+0x1dc>
    f8f2:	84 30       	cpi	r24, 0x04	; 4
    f8f4:	b1 f1       	breq	.+108    	; 0xf962 <_Z11Read_EEPROMv+0x1ca>
    f8f6:	85 30       	cpi	r24, 0x05	; 5
    f8f8:	e9 f5       	brne	.+122    	; 0xf974 <_Z11Read_EEPROMv+0x1dc>
	{
		case _eOPER_MOD_AUTO:
		case _eOPER_MOD_SCHEDULER:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f8fa:	85 e0       	ldi	r24, 0x05	; 5
    f8fc:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f900:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f904:	8e 7f       	andi	r24, 0xFE	; 254
    f906:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f90a:	37 c0       	rjmp	.+110    	; 0xf97a <_Z11Read_EEPROMv+0x1e2>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
		}break;
		
		case _eOPER_MOD_TIMER:
		{
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f90c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f910:	8e 7f       	andi	r24, 0xFE	; 254
    f912:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f916:	10 93 d6 13 	sts	0x13D6, r17	; 0x8013d6 <_sRuble_Parameters+0x28>
			
			_kEEPROM_READ(_kTIMER_IRRIGATING_PLOT,_sRuble_Parameters.Temp_Irrigating_Plot);
    f91a:	65 e6       	ldi	r22, 0x65	; 101
    f91c:	74 e1       	ldi	r23, 0x14	; 20
    f91e:	86 e9       	ldi	r24, 0x96	; 150
    f920:	9c e0       	ldi	r25, 0x0C	; 12
    f922:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f926:	88 e9       	ldi	r24, 0x98	; 152
    f928:	9c e0       	ldi	r25, 0x0C	; 12
    f92a:	9c ab       	std	Y+52, r25	; 0x34
    f92c:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f92e:	ce 01       	movw	r24, r28
    f930:	c3 96       	adiw	r24, 0x33	; 51
    f932:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f936:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
    f93a:	89 e9       	ldi	r24, 0x99	; 153
    f93c:	9c e0       	ldi	r25, 0x0C	; 12
    f93e:	9c ab       	std	Y+52, r25	; 0x34
    f940:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f942:	ce 01       	movw	r24, r28
    f944:	c3 96       	adiw	r24, 0x33	; 51
    f946:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f94a:	80 93 c5 13 	sts	0x13C5, r24	; 0x8013c5 <_sRuble_Parameters+0x17>
			_kEEPROM_READ(_kPUMP_REMAINING_TIME,_sRuble_Parameters.Pump_Run_Timer);
			//_sRuble_Parameters.Temp_Irrigating_Plot = _sRuble_Parameters.Irrigating_Plot;
			_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    f94e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
    f952:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
    f956:	88 60       	ori	r24, 0x08	; 8
    f958:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
    f95c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
		}break;
    f960:	15 c0       	rjmp	.+42     	; 0xf98c <_Z11Read_EEPROMv+0x1f4>
		
		case _eOPER_MOD_MANUAL:
		case _eOPER_MOD_DATALOG:
		{
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f962:	84 e0       	ldi	r24, 0x04	; 4
    f964:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			_sRuble_Parameters.lndications   |= _eRUBL_INDI_AUTO_MANUAL;
    f968:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    f96c:	81 60       	ori	r24, 0x01	; 1
    f96e:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
		}break;
    f972:	0c c0       	rjmp	.+24     	; 0xf98c <_Z11Read_EEPROMv+0x1f4>
		default:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f974:	85 e0       	ldi	r24, 0x05	; 5
    f976:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f97a:	84 e0       	ldi	r24, 0x04	; 4
    f97c:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f980:	65 ed       	ldi	r22, 0xD5	; 213
    f982:	73 e1       	ldi	r23, 0x13	; 19
    f984:	88 ed       	ldi	r24, 0xD8	; 216
    f986:	94 e0       	ldi	r25, 0x04	; 4
    f988:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
		}break;
	}
	
	/******************************************* update ruble sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_SIM_NUM,_sNetwork_and_Usr_Info.Ruble_SIM_No);
    f98c:	69 eb       	ldi	r22, 0xB9	; 185
    f98e:	7d e0       	ldi	r23, 0x0D	; 13
    f990:	8a ed       	ldi	r24, 0xDA	; 218
    f992:	94 e0       	ldi	r25, 0x04	; 4
    f994:	0e 94 b0 73 	call	0xe760	; 0xe760 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	
	
	/******************************************* update user sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_USER_SIM_NUM,_sNetwork_and_Usr_Info.User_Sim_No);
    f998:	64 ec       	ldi	r22, 0xC4	; 196
    f99a:	7d e0       	ldi	r23, 0x0D	; 13
    f99c:	87 ee       	ldi	r24, 0xE7	; 231
    f99e:	94 e0       	ldi	r25, 0x04	; 4
    f9a0:	0e 94 b0 73 	call	0xe760	; 0xe760 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	/***************************************** Update coefficient 3 *************************************/
	//_kEEPROM_READ(_kEEPROM_LOC_COEFF_3,_sRuble_Parameters.Coeff_3);
	
	
	/***************************************** update the sms alert ***********************************/
	_kEEPROM_READ(_kEEPROM_SMS_ALERT_START,_sRuble_Parameters.SMS_Alert_Start);
    f9a4:	69 e6       	ldi	r22, 0x69	; 105
    f9a6:	74 e1       	ldi	r23, 0x14	; 20
    f9a8:	88 e1       	ldi	r24, 0x18	; 24
    f9aa:	95 e0       	ldi	r25, 0x05	; 5
    f9ac:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	
	/**************************************** update the kill switch **********************************/
	_kEEPROM_READ(_kEEPROM_KILL_SWITCH,_sRuble_Parameters.Kill_Switch);
    f9b0:	61 e7       	ldi	r22, 0x71	; 113
    f9b2:	74 e1       	ldi	r23, 0x14	; 20
    f9b4:	89 e1       	ldi	r24, 0x19	; 25
    f9b6:	95 e0       	ldi	r25, 0x05	; 5
    f9b8:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f9bc:	5e e1       	ldi	r21, 0x1E	; 30
    f9be:	e5 2e       	mov	r14, r21
    f9c0:	59 e0       	ldi	r21, 0x09	; 9
    f9c2:	f5 2e       	mov	r15, r21
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f9c4:	0a e1       	ldi	r16, 0x1A	; 26
    f9c6:	15 e0       	ldi	r17, 0x05	; 5
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f9c8:	1c ab       	std	Y+52, r17	; 0x34
    f9ca:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f9cc:	ce 01       	movw	r24, r28
    f9ce:	c3 96       	adiw	r24, 0x33	; 51
    f9d0:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f9d4:	f7 01       	movw	r30, r14
    f9d6:	81 93       	st	Z+, r24
    f9d8:	7f 01       	movw	r14, r30
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f9da:	0f 5f       	subi	r16, 0xFF	; 255
    f9dc:	1f 4f       	sbci	r17, 0xFF	; 255
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f9de:	00 3f       	cpi	r16, 0xF0	; 240
    f9e0:	f7 e0       	ldi	r31, 0x07	; 7
    f9e2:	1f 07       	cpc	r17, r31
    f9e4:	89 f7       	brne	.-30     	; 0xf9c8 <_Z11Read_EEPROMv+0x230>
	
	/*************************************** read schedule data ******************************************/
	_kEEPROM_READ(_kEEPROM_SCHEDULE_DATA, _sSchedules);
	
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
    f9e6:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    f9ea:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sSchedules.Fertilizer_On_Scheduler_Status = _kRESET;
    f9ee:	10 92 75 0b 	sts	0x0B75, r1	; 0x800b75 <_sSchedules+0x257>
	_sSchedules.New_Schedules_Occur = _kRESET;
    f9f2:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    f9f6:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
    f9fa:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    f9fe:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
	_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    fa02:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
	
	for(unsigned char tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		_sSchedules.Running_Tank[tank_number] = _kRESET;
    fa06:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    fa0a:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    fa0e:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
	
	
	
	
	
	if(_sSchedules.Schedule_Enable)   /* schedules are enable then change the mode from auto to scheduler */
    fa12:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
    fa16:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
    fa1a:	99 23       	and	r25, r25
    fa1c:	21 f1       	breq	.+72     	; 0xfa66 <_Z11Read_EEPROMv+0x2ce>
	{
		switch(_sRuble_Parameters.Operation_Mode)
    fa1e:	81 30       	cpi	r24, 0x01	; 1
    fa20:	11 f0       	breq	.+4      	; 0xfa26 <_Z11Read_EEPROMv+0x28e>
    fa22:	85 30       	cpi	r24, 0x05	; 5
    fa24:	89 f4       	brne	.+34     	; 0xfa48 <_Z11Read_EEPROMv+0x2b0>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    fa26:	85 e0       	ldi	r24, 0x05	; 5
    fa28:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    fa2c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    fa30:	8e 7f       	andi	r24, 0xFE	; 254
    fa32:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fa36:	84 e0       	ldi	r24, 0x04	; 4
    fa38:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
				_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    fa3c:	65 ed       	ldi	r22, 0xD5	; 213
    fa3e:	73 e1       	ldi	r23, 0x13	; 19
    fa40:	88 ed       	ldi	r24, 0xD8	; 216
    fa42:	94 e0       	ldi	r25, 0x04	; 4
    fa44:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    fa48:	08 ee       	ldi	r16, 0xE8	; 232
    fa4a:	1d e0       	ldi	r17, 0x0D	; 13
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fa4c:	91 ef       	ldi	r25, 0xF1	; 241
    fa4e:	e9 2e       	mov	r14, r25
    fa50:	99 e0       	ldi	r25, 0x09	; 9
    fa52:	f9 2e       	mov	r15, r25
    fa54:	2e ef       	ldi	r18, 0xFE	; 254
    fa56:	72 2e       	mov	r7, r18
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
				_kSERIAL_MON_CLEAR();
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    fa58:	66 24       	eor	r6, r6
    fa5a:	63 94       	inc	r6
			
			default:
			{
				if(i < 2 || i > 9)
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    fa5c:	35 e0       	ldi	r19, 0x05	; 5
    fa5e:	53 2e       	mov	r5, r19
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    fa60:	42 e0       	ldi	r20, 0x02	; 2
    fa62:	44 2e       	mov	r4, r20
    fa64:	14 c0       	rjmp	.+40     	; 0xfa8e <_Z11Read_EEPROMv+0x2f6>
			}break;
		}
	}
	else    /* schedules are not enable then change the mode from scheduler to auto */
	{
		switch(_sRuble_Parameters.Operation_Mode)
    fa66:	81 30       	cpi	r24, 0x01	; 1
    fa68:	11 f0       	breq	.+4      	; 0xfa6e <_Z11Read_EEPROMv+0x2d6>
    fa6a:	85 30       	cpi	r24, 0x05	; 5
    fa6c:	69 f7       	brne	.-38     	; 0xfa48 <_Z11Read_EEPROMv+0x2b0>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Manual_Mode_Wait = 0;
    fa6e:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
    fa72:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;   // 5/5
    fa76:	85 e0       	ldi	r24, 0x05	; 5
    fa78:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    fa7c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
    fa80:	8e 7f       	andi	r24, 0xFE	; 254
    fa82:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fa86:	84 e0       	ldi	r24, 0x04	; 4
    fa88:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
			}break;
    fa8c:	dd cf       	rjmp	.-70     	; 0xfa48 <_Z11Read_EEPROMv+0x2b0>
    fa8e:	47 01       	movw	r8, r14
    fa90:	8b e1       	ldi	r24, 0x1B	; 27
    fa92:	88 0e       	add	r8, r24
    fa94:	91 1c       	adc	r9, r1
    fa96:	58 01       	movw	r10, r16
    fa98:	67 01       	movw	r12, r14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fa9a:	dc aa       	std	Y+52, r13	; 0x34
    fa9c:	cb aa       	std	Y+51, r12	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    fa9e:	ce 01       	movw	r24, r28
    faa0:	c3 96       	adiw	r24, 0x33	; 51
    faa2:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    faa6:	f5 01       	movw	r30, r10
    faa8:	81 93       	st	Z+, r24
    faaa:	5f 01       	movw	r10, r30
    faac:	ff ef       	ldi	r31, 0xFF	; 255
    faae:	cf 1a       	sub	r12, r31
    fab0:	df 0a       	sbc	r13, r31
    fab2:	8c 14       	cp	r8, r12
    fab4:	9d 04       	cpc	r9, r13
    fab6:	89 f7       	brne	.-30     	; 0xfa9a <_Z11Read_EEPROMv+0x302>
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
	{
		_kEEPROM_READ(_kEEPROM_EXTRA_PLOT_DATA(i+1),_sExtra_Plot[i]);
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fab8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fabc:	81 30       	cpi	r24, 0x01	; 1
    fabe:	91 f4       	brne	.+36     	; 0xfae4 <_Z11Read_EEPROMv+0x34c>
		{
			_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number : ");
    fac0:	67 ec       	ldi	r22, 0xC7	; 199
    fac2:	76 e2       	ldi	r23, 0x26	; 38
    fac4:	86 ec       	ldi	r24, 0xC6	; 198
    fac6:	94 e1       	ldi	r25, 0x14	; 20
    fac8:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Extra_Plot_Number);
    facc:	4a e0       	ldi	r20, 0x0A	; 10
    face:	50 e0       	ldi	r21, 0x00	; 0
    fad0:	f8 01       	movw	r30, r16
    fad2:	61 81       	ldd	r22, Z+1	; 0x01
    fad4:	86 ec       	ldi	r24, 0xC6	; 198
    fad6:	94 e1       	ldi	r25, 0x14	; 20
    fad8:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
			_kSERIAL_MON_CLEAR();
    fadc:	86 ec       	ldi	r24, 0xC6	; 198
    fade:	94 e1       	ldi	r25, 0x14	; 20
    fae0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_sExtra_Plot[i].Run_Timer)    /* check if timer was set for the extra plot */
    fae4:	f8 01       	movw	r30, r16
    fae6:	83 81       	ldd	r24, Z+3	; 0x03
    fae8:	94 81       	ldd	r25, Z+4	; 0x04
    faea:	89 2b       	or	r24, r25
    faec:	c9 f0       	breq	.+50     	; 0xfb20 <_Z11Read_EEPROMv+0x388>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    faee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    faf2:	81 30       	cpi	r24, 0x01	; 1
    faf4:	99 f4       	brne	.+38     	; 0xfb1c <_Z11Read_EEPROMv+0x384>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
    faf6:	6f ea       	ldi	r22, 0xAF	; 175
    faf8:	76 e2       	ldi	r23, 0x26	; 38
    fafa:	86 ec       	ldi	r24, 0xC6	; 198
    fafc:	94 e1       	ldi	r25, 0x14	; 20
    fafe:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
    fb02:	f8 01       	movw	r30, r16
    fb04:	63 81       	ldd	r22, Z+3	; 0x03
    fb06:	74 81       	ldd	r23, Z+4	; 0x04
    fb08:	4a e0       	ldi	r20, 0x0A	; 10
    fb0a:	50 e0       	ldi	r21, 0x00	; 0
    fb0c:	86 ec       	ldi	r24, 0xC6	; 198
    fb0e:	94 e1       	ldi	r25, 0x14	; 20
    fb10:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
				_kSERIAL_MON_CLEAR();
    fb14:	86 ec       	ldi	r24, 0xC6	; 198
    fb16:	94 e1       	ldi	r25, 0x14	; 20
    fb18:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    fb1c:	f8 01       	movw	r30, r16
    fb1e:	63 86       	std	Z+11, r6	; 0x0b
		}
		
		if(!_sExtra_Plot[i].Run_Timer &&  !_sExtra_Plot[i].One_Touch)   /* if user not took any action earlier */
    fb20:	f8 01       	movw	r30, r16
    fb22:	83 81       	ldd	r24, Z+3	; 0x03
    fb24:	94 81       	ldd	r25, Z+4	; 0x04
    fb26:	89 2b       	or	r24, r25
    fb28:	a1 f4       	brne	.+40     	; 0xfb52 <_Z11Read_EEPROMv+0x3ba>
    fb2a:	82 85       	ldd	r24, Z+10	; 0x0a
    fb2c:	81 11       	cpse	r24, r1
    fb2e:	11 c0       	rjmp	.+34     	; 0xfb52 <_Z11Read_EEPROMv+0x3ba>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fb30:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fb34:	81 30       	cpi	r24, 0x01	; 1
    fb36:	51 f4       	brne	.+20     	; 0xfb4c <_Z11Read_EEPROMv+0x3b4>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra not Plot Run Timer : ");
    fb38:	63 e9       	ldi	r22, 0x93	; 147
    fb3a:	76 e2       	ldi	r23, 0x26	; 38
    fb3c:	86 ec       	ldi	r24, 0xC6	; 198
    fb3e:	94 e1       	ldi	r25, 0x14	; 20
    fb40:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    fb44:	86 ec       	ldi	r24, 0xC6	; 198
    fb46:	94 e1       	ldi	r25, 0x14	; 20
    fb48:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    fb4c:	f8 01       	movw	r30, r16
    fb4e:	62 82       	std	Z+2, r6	; 0x02
			_sExtra_Plot[i].Set_Through_Timer = _kRESET;
    fb50:	13 86       	std	Z+11, r1	; 0x0b
		}
		
		_sExtra_Plot[i].On_Off_Status = _kRESET;   /* initially off the status */
    fb52:	f8 01       	movw	r30, r16
    fb54:	10 82       	st	Z, r1
		
		switch(_sExtra_Plot[i].Status)
    fb56:	82 81       	ldd	r24, Z+2	; 0x02
    fb58:	82 30       	cpi	r24, 0x02	; 2
    fb5a:	49 f0       	breq	.+18     	; 0xfb6e <_Z11Read_EEPROMv+0x3d6>
    fb5c:	83 30       	cpi	r24, 0x03	; 3
    fb5e:	11 f4       	brne	.+4      	; 0xfb64 <_Z11Read_EEPROMv+0x3cc>
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    fb60:	42 82       	std	Z+2, r4	; 0x02
			}break;
    fb62:	05 c0       	rjmp	.+10     	; 0xfb6e <_Z11Read_EEPROMv+0x3d6>
			
			default:
			{
				if(i < 2 || i > 9)
    fb64:	f7 e0       	ldi	r31, 0x07	; 7
    fb66:	f7 15       	cp	r31, r7
    fb68:	28 f4       	brcc	.+10     	; 0xfb74 <_Z11Read_EEPROMv+0x3dc>
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    fb6a:	f8 01       	movw	r30, r16
    fb6c:	52 82       	std	Z+2, r5	; 0x02
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fb6e:	c1 2c       	mov	r12, r1
    fb70:	d1 2c       	mov	r13, r1
    fb72:	0a c0       	rjmp	.+20     	; 0xfb88 <_Z11Read_EEPROMv+0x3f0>
					
				}
				else
				{
					_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    fb74:	f8 01       	movw	r30, r16
    fb76:	62 82       	std	Z+2, r6	; 0x02
    fb78:	fa cf       	rjmp	.-12     	; 0xfb6e <_Z11Read_EEPROMv+0x3d6>
				}
				//_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
			}break;
		}
		
		for(int k=0;k<_kMAX_VALVE_FOR_1PLOT;k++)
    fb7a:	ff ef       	ldi	r31, 0xFF	; 255
    fb7c:	cf 1a       	sub	r12, r31
    fb7e:	df 0a       	sbc	r13, r31
    fb80:	85 e0       	ldi	r24, 0x05	; 5
    fb82:	c8 16       	cp	r12, r24
    fb84:	d1 04       	cpc	r13, r1
    fb86:	e9 f0       	breq	.+58     	; 0xfbc2 <_Z11Read_EEPROMv+0x42a>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fb88:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fb8c:	81 30       	cpi	r24, 0x01	; 1
    fb8e:	a9 f7       	brne	.-22     	; 0xfb7a <_Z11Read_EEPROMv+0x3e2>
			{
				Serial.println();
    fb90:	86 ec       	ldi	r24, 0xC6	; 198
    fb92:	94 e1       	ldi	r25, 0x14	; 20
    fb94:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
				_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    fb98:	67 e8       	ldi	r22, 0x87	; 135
    fb9a:	76 e2       	ldi	r23, 0x26	; 38
    fb9c:	86 ec       	ldi	r24, 0xC6	; 198
    fb9e:	94 e1       	ldi	r25, 0x14	; 20
    fba0:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[i].Euro_Valve_Group[k]);
    fba4:	4a e0       	ldi	r20, 0x0A	; 10
    fba6:	50 e0       	ldi	r21, 0x00	; 0
    fba8:	f8 01       	movw	r30, r16
    fbaa:	ec 0d       	add	r30, r12
    fbac:	fd 1d       	adc	r31, r13
    fbae:	65 81       	ldd	r22, Z+5	; 0x05
    fbb0:	86 ec       	ldi	r24, 0xC6	; 198
    fbb2:	94 e1       	ldi	r25, 0x14	; 20
    fbb4:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    fbb8:	86 ec       	ldi	r24, 0xC6	; 198
    fbba:	94 e1       	ldi	r25, 0x14	; 20
    fbbc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    fbc0:	dc cf       	rjmp	.-72     	; 0xfb7a <_Z11Read_EEPROMv+0x3e2>
    fbc2:	05 5e       	subi	r16, 0xE5	; 229
    fbc4:	1f 4f       	sbci	r17, 0xFF	; 255
    fbc6:	73 94       	inc	r7
    fbc8:	9e e1       	ldi	r25, 0x1E	; 30
    fbca:	e9 0e       	add	r14, r25
    fbcc:	f1 1c       	adc	r15, r1
	}
	
	
	/*********************************** update extra plot ***************************/
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    fbce:	e5 e9       	ldi	r30, 0x95	; 149
    fbd0:	ee 16       	cp	r14, r30
    fbd2:	eb e0       	ldi	r30, 0x0B	; 11
    fbd4:	fe 06       	cpc	r15, r30
    fbd6:	09 f0       	breq	.+2      	; 0xfbda <_Z11Read_EEPROMv+0x442>
    fbd8:	5a cf       	rjmp	.-332    	; 0xfa8e <_Z11Read_EEPROMv+0x2f6>
		}
	}
	
	
	
	_kEEPROM_READ(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    fbda:	69 e7       	ldi	r22, 0x79	; 121
    fbdc:	74 e1       	ldi	r23, 0x14	; 20
    fbde:	81 ea       	ldi	r24, 0xA1	; 161
    fbe0:	9c e0       	ldi	r25, 0x0C	; 12
    fbe2:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    fbe6:	6b e7       	ldi	r22, 0x7B	; 123
    fbe8:	74 e1       	ldi	r23, 0x14	; 20
    fbea:	88 ea       	ldi	r24, 0xA8	; 168
    fbec:	9c e0       	ldi	r25, 0x0C	; 12
    fbee:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    fbf2:	6c e7       	ldi	r22, 0x7C	; 124
    fbf4:	74 e1       	ldi	r23, 0x14	; 20
    fbf6:	8d ea       	ldi	r24, 0xAD	; 173
    fbf8:	9c e0       	ldi	r25, 0x0C	; 12
    fbfa:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    fbfe:	83 e9       	ldi	r24, 0x93	; 147
    fc00:	e8 2e       	mov	r14, r24
    fc02:	84 e1       	ldi	r24, 0x14	; 20
    fc04:	f8 2e       	mov	r15, r24
    fc06:	08 e8       	ldi	r16, 0x88	; 136
    fc08:	1e e0       	ldi	r17, 0x0E	; 14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fc0a:	1c ab       	std	Y+52, r17	; 0x34
    fc0c:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    fc0e:	ce 01       	movw	r24, r28
    fc10:	c3 96       	adiw	r24, 0x33	; 51
    fc12:	0e 94 60 73 	call	0xe6c0	; 0xe6c0 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    fc16:	f7 01       	movw	r30, r14
    fc18:	81 93       	st	Z+, r24
    fc1a:	7f 01       	movw	r14, r30
    fc1c:	0f 5f       	subi	r16, 0xFF	; 255
    fc1e:	1f 4f       	sbci	r17, 0xFF	; 255
    fc20:	0d 38       	cpi	r16, 0x8D	; 141
    fc22:	fe e0       	ldi	r31, 0x0E	; 14
    fc24:	1f 07       	cpc	r17, r31
    fc26:	89 f7       	brne	.-30     	; 0xfc0a <_Z11Read_EEPROMv+0x472>
	
	_kEEPROM_READ(_kHANDLE_WIRELESS_STATUS_LIST,_sRuble_Parameters.Wireless_Pump_Handle_List);
	
	_kEEPROM_READ(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    fc28:	68 e9       	ldi	r22, 0x98	; 152
    fc2a:	74 e1       	ldi	r23, 0x14	; 20
    fc2c:	8b ea       	ldi	r24, 0xAB	; 171
    fc2e:	9e e0       	ldi	r25, 0x0E	; 14
    fc30:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kRESET || _sRuble_Parameters.Pump_Selected_For_Irrigation > _kMAX_WIRELESS_PUMP+1)
    fc34:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
    fc38:	81 50       	subi	r24, 0x01	; 1
    fc3a:	84 30       	cpi	r24, 0x04	; 4
    fc3c:	48 f0       	brcs	.+18     	; 0xfc50 <_Z11Read_EEPROMv+0x4b8>
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = _kWIRED_PUMP_NUMBER;
    fc3e:	81 e0       	ldi	r24, 0x01	; 1
    fc40:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
		_kEEPROM_WRITE(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    fc44:	68 e9       	ldi	r22, 0x98	; 152
    fc46:	74 e1       	ldi	r23, 0x14	; 20
    fc48:	8b ea       	ldi	r24, 0xAB	; 171
    fc4a:	9e e0       	ldi	r25, 0x0E	; 14
    fc4c:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
	}
	
	_kEEPROM_READ(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    fc50:	6b e9       	ldi	r22, 0x9B	; 155
    fc52:	74 e1       	ldi	r23, 0x14	; 20
    fc54:	8d ea       	ldi	r24, 0xAD	; 173
    fc56:	9e e0       	ldi	r25, 0x0E	; 14
    fc58:	0e 94 7d 73 	call	0xe6fa	; 0xe6fa <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
	
	for(unsigned char wl_pump_num=0; wl_pump_num < _kMAX_WIRELESS_PUMP; wl_pump_num++)
	{
		_kEEPROM_READ(_kWIRELESS_PUMP_DATA_SAVE(wl_pump_num), _sWireless_Pump_Param[wl_pump_num]);
    fc5c:	64 ef       	ldi	r22, 0xF4	; 244
    fc5e:	7b e0       	ldi	r23, 0x0B	; 11
    fc60:	8e ea       	ldi	r24, 0xAE	; 174
    fc62:	9c e0       	ldi	r25, 0x0C	; 12
    fc64:	0e 94 b0 73 	call	0xe760	; 0xe760 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
    fc68:	6f ef       	ldi	r22, 0xFF	; 255
    fc6a:	7b e0       	ldi	r23, 0x0B	; 11
    fc6c:	82 ec       	ldi	r24, 0xC2	; 194
    fc6e:	9c e0       	ldi	r25, 0x0C	; 12
    fc70:	0e 94 b0 73 	call	0xe760	; 0xe760 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
    fc74:	6a e0       	ldi	r22, 0x0A	; 10
    fc76:	7c e0       	ldi	r23, 0x0C	; 12
    fc78:	86 ed       	ldi	r24, 0xD6	; 214
    fc7a:	9c e0       	ldi	r25, 0x0C	; 12
    fc7c:	0e 94 b0 73 	call	0xe760	; 0xe760 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	}
	
	_kEEPROM_READ(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    fc80:	6b ee       	ldi	r22, 0xEB	; 235
    fc82:	7c e0       	ldi	r23, 0x0C	; 12
    fc84:	87 eb       	ldi	r24, 0xB7	; 183
    fc86:	9e e0       	ldi	r25, 0x0E	; 14
    fc88:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
}
    fc8c:	e4 96       	adiw	r28, 0x34	; 52
    fc8e:	0f b6       	in	r0, 0x3f	; 63
    fc90:	f8 94       	cli
    fc92:	de bf       	out	0x3e, r29	; 62
    fc94:	0f be       	out	0x3f, r0	; 63
    fc96:	cd bf       	out	0x3d, r28	; 61
    fc98:	df 91       	pop	r29
    fc9a:	cf 91       	pop	r28
    fc9c:	1f 91       	pop	r17
    fc9e:	0f 91       	pop	r16
    fca0:	ff 90       	pop	r15
    fca2:	ef 90       	pop	r14
    fca4:	df 90       	pop	r13
    fca6:	cf 90       	pop	r12
    fca8:	bf 90       	pop	r11
    fcaa:	af 90       	pop	r10
    fcac:	9f 90       	pop	r9
    fcae:	8f 90       	pop	r8
    fcb0:	7f 90       	pop	r7
    fcb2:	6f 90       	pop	r6
    fcb4:	5f 90       	pop	r5
    fcb6:	4f 90       	pop	r4
    fcb8:	08 95       	ret

0000fcba <_Z20Param_Initializationv>:
volatile unsigned int Interrupt_Time_Out;
volatile unsigned char Reading_Time;


void Param_Initialization(void)
{
    fcba:	cf 92       	push	r12
    fcbc:	df 92       	push	r13
    fcbe:	ef 92       	push	r14
    fcc0:	ff 92       	push	r15
    fcc2:	0f 93       	push	r16
    fcc4:	1f 93       	push	r17
    fcc6:	cf 93       	push	r28
    fcc8:	df 93       	push	r29
    fcca:	00 d0       	rcall	.+0      	; 0xfccc <_Z20Param_Initializationv+0x12>
    fccc:	cd b7       	in	r28, 0x3d	; 61
    fcce:	de b7       	in	r29, 0x3e	; 62
	char temp = 0;
    fcd0:	1b 82       	std	Y+3, r1	; 0x03
	unsigned int i;
	
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
    fcd2:	62 e8       	ldi	r22, 0x82	; 130
    fcd4:	74 e0       	ldi	r23, 0x04	; 4
    fcd6:	8e ec       	ldi	r24, 0xCE	; 206
    fcd8:	93 e1       	ldi	r25, 0x13	; 19
    fcda:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
    fcde:	8e ec       	ldi	r24, 0xCE	; 206
    fce0:	e8 2e       	mov	r14, r24
    fce2:	83 e1       	ldi	r24, 0x13	; 19
    fce4:	f8 2e       	mov	r15, r24
    fce6:	67 01       	movw	r12, r14
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    fce8:	00 e0       	ldi	r16, 0x00	; 0
    fcea:	10 e0       	ldi	r17, 0x00	; 0
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fcec:	f6 01       	movw	r30, r12
    fcee:	61 91       	ld	r22, Z+
    fcf0:	6f 01       	movw	r12, r30
    fcf2:	1a 83       	std	Y+2, r17	; 0x02
    fcf4:	09 83       	std	Y+1, r16	; 0x01
    fcf6:	ce 01       	movw	r24, r28
    fcf8:	01 96       	adiw	r24, 0x01	; 1
    fcfa:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    fcfe:	0f 5f       	subi	r16, 0xFF	; 255
    fd00:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fd02:	07 30       	cpi	r16, 0x07	; 7
    fd04:	11 05       	cpc	r17, r1
    fd06:	91 f7       	brne	.-28     	; 0xfcec <_Z20Param_Initializationv+0x32>
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
    fd08:	86 ec       	ldi	r24, 0xC6	; 198
    fd0a:	94 e1       	ldi	r25, 0x14	; 20
    fd0c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	
	_kSERIAL_MON_PRINT_NUM();
    fd10:	86 ec       	ldi	r24, 0xC6	; 198
    fd12:	94 e1       	ldi	r25, 0x14	; 20
    fd14:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
    fd18:	f7 01       	movw	r30, r14
    fd1a:	61 91       	ld	r22, Z+
    fd1c:	7f 01       	movw	r14, r30
    fd1e:	86 ec       	ldi	r24, 0xC6	; 198
    fd20:	94 e1       	ldi	r25, 0x14	; 20
    fd22:	0e 94 71 d3 	call	0x1a6e2	; 0x1a6e2 <_ZN14HardwareSerial5writeEh>
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
	
	_kSERIAL_MON_PRINT_NUM();
	for(i=0;i<6;i++)
    fd26:	f4 ed       	ldi	r31, 0xD4	; 212
    fd28:	ef 16       	cp	r14, r31
    fd2a:	f3 e1       	ldi	r31, 0x13	; 19
    fd2c:	ff 06       	cpc	r15, r31
    fd2e:	a1 f7       	brne	.-24     	; 0xfd18 <_Z20Param_Initializationv+0x5e>
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
	}
	_kSERIAL_MON_PRINT_NUM();
    fd30:	86 ec       	ldi	r24, 0xC6	; 198
    fd32:	94 e1       	ldi	r25, 0x14	; 20
    fd34:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
	
	Store_MQTT_Pub_Topics();                        /* store all publish topics */
    fd38:	26 d1       	rcall	.+588    	; 0xff86 <_Z21Store_MQTT_Pub_Topicsv>
	
	Store_MQTT_Sub_Topics();                        /* store all subscribe topics */
    fd3a:	26 d1       	rcall	.+588    	; 0xff88 <_Z21Store_MQTT_Sub_Topicsv>
    fd3c:	0e 94 4f 60 	call	0xc09e	; 0xc09e <_Z13Store_All_APNv>
	
	Store_All_APN();                                /* store all operating network's APN */
    fd40:	be 01       	movw	r22, r28
	
	
	_kEEPROM_READ(_kEEPROM_LOC_READ_REGISTRATION,temp);                     /* read that ruble is registered or not */
    fd42:	6d 5f       	subi	r22, 0xFD	; 253
    fd44:	7f 4f       	sbci	r23, 0xFF	; 255
    fd46:	84 ef       	ldi	r24, 0xF4	; 244
    fd48:	94 e0       	ldi	r25, 0x04	; 4
    fd4a:	0e 94 65 73 	call	0xe6ca	; 0xe6ca <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    fd4e:	9b 81       	ldd	r25, Y+3	; 0x03

	if(temp == _kCHECK_REGISTRATION)  /* if _kEEPROM_LOC_READ_REGISTRATION location filled with 0x09 it means that ruble controller is already register */
    fd50:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    fd54:	91 30       	cpi	r25, 0x01	; 1
    fd56:	79 f4       	brne	.+30     	; 0xfd76 <_Z20Param_Initializationv+0xbc>
    fd58:	90 93 1f 14 	sts	0x141F, r25	; 0x80141f <_sRuble_Parameters+0x71>
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_REGISTERED; /* update that ruble is already registered */
    fd5c:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fd5e:	e1 f4       	brne	.+56     	; 0xfd98 <_Z20Param_Initializationv+0xde>
    fd60:	65 e8       	ldi	r22, 0x85	; 133
		{	
			_kSERAIL_MON_WRITE("Ruble is already Registered To Sever");                /* for debugging purpose */
    fd62:	77 e2       	ldi	r23, 0x27	; 39
    fd64:	86 ec       	ldi	r24, 0xC6	; 198
    fd66:	94 e1       	ldi	r25, 0x14	; 20
    fd68:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    fd6c:	86 ec       	ldi	r24, 0xC6	; 198
			_kSERIAL_MON_CLEAR();
    fd6e:	94 e1       	ldi	r25, 0x14	; 20
    fd70:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    fd74:	11 c0       	rjmp	.+34     	; 0xfd98 <_Z20Param_Initializationv+0xde>
    fd76:	92 e0       	ldi	r25, 0x02	; 2
		}
	}
	else
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_NOT_REGISTERED;  /* set that ruble is not register to server */
    fd78:	90 93 1f 14 	sts	0x141F, r25	; 0x80141f <_sRuble_Parameters+0x71>
    fd7c:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fd7e:	51 f4       	brne	.+20     	; 0xfd94 <_Z20Param_Initializationv+0xda>
    fd80:	64 e6       	ldi	r22, 0x64	; 100
		{
			_kSERAIL_MON_WRITE("Ruble is not Registered To Sever");                /* for debugging purpose */
    fd82:	77 e2       	ldi	r23, 0x27	; 39
    fd84:	86 ec       	ldi	r24, 0xC6	; 198
    fd86:	94 e1       	ldi	r25, 0x14	; 20
    fd88:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    fd8c:	86 ec       	ldi	r24, 0xC6	; 198
			_kSERIAL_MON_CLEAR();
    fd8e:	94 e1       	ldi	r25, 0x14	; 20
    fd90:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    fd94:	0e 94 76 87 	call	0x10eec	; 0x10eec <_Z16Dummy_Data_Storev>
		}
		/****************************** Reset all the epprom location *************************************************/
		Dummy_Data_Store();
    fd98:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	/********************************** Check gsm fault to init the gsm/gprs network and init broker **************************/
	_sRuble_Parameters.Sim_Check = _eSIM_INSERTED;   /* initially set sim is inserted, then we will check sim status using  AT command */
    fd9a:	80 93 6b 14 	sts	0x146B, r24	; 0x80146b <_sRuble_Parameters+0xbd>
	
	
	Local_Time_Setting();
    fd9e:	03 dc       	rcall	.-2042   	; 0xf5a6 <_Z18Local_Time_Settingv>
    fda0:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
	
	
	if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fda4:	81 30       	cpi	r24, 0x01	; 1
    fda6:	e1 f0       	breq	.+56     	; 0xfde0 <_Z20Param_Initializationv+0x126>
    fda8:	90 91 6b 14 	lds	r25, 0x146B	; 0x80146b <_sRuble_Parameters+0xbd>
	{
		if(_sRuble_Parameters.Sim_Check == _eSIM_NOT_INSERTED)
    fdac:	91 30       	cpi	r25, 0x01	; 1
    fdae:	c1 f4       	brne	.+48     	; 0xfde0 <_Z20Param_Initializationv+0x126>
    fdb0:	0e 94 03 66 	call	0xcc06	; 0xcc06 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fdb4:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: SIM",10,0,5);        /* print company name */
    fdb6:	40 e0       	ldi	r20, 0x00	; 0
    fdb8:	6a e0       	ldi	r22, 0x0A	; 10
    fdba:	87 e8       	ldi	r24, 0x87	; 135
    fdbc:	95 e0       	ldi	r25, 0x05	; 5
    fdbe:	0e 94 d7 65 	call	0xcbae	; 0xcbae <_Z14Lcd_Print_BuffPchhh>
    fdc2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fdc6:	81 30       	cpi	r24, 0x01	; 1
    fdc8:	51 f4       	brne	.+20     	; 0xfdde <_Z20Param_Initializationv+0x124>
    fdca:	6d e4       	ldi	r22, 0x4D	; 77
			{
				_kSERAIL_MON_WRITE("Please Insert Sim Card");  /* for debugging purpose */
    fdcc:	77 e2       	ldi	r23, 0x27	; 39
    fdce:	86 ec       	ldi	r24, 0xC6	; 198
    fdd0:	94 e1       	ldi	r25, 0x14	; 20
    fdd2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    fdd6:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fdd8:	94 e1       	ldi	r25, 0x14	; 20
    fdda:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    fdde:	ff cf       	rjmp	.-2      	; 0xfdde <_Z20Param_Initializationv+0x124>
    fde0:	90 91 1d 14 	lds	r25, 0x141D	; 0x80141d <_sRuble_Parameters+0x6f>
			}
			while(1);
		}
	}
	
	if(!(_sRuble_Parameters.Hardware_Faults & _eGSM_INIT_FAIL))
    fde4:	90 fd       	sbrc	r25, 0
    fde6:	09 c0       	rjmp	.+18     	; 0xfdfa <_Z20Param_Initializationv+0x140>
    fde8:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
	{
		_sRuble_Parameters.Display_Update |= _eSEARCHING_FOR_NETWORK;
    fdec:	80 62       	ori	r24, 0x20	; 32
    fdee:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
		Display_Update_1();
    fdf2:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
		Init_Broker();          /* if gsm initialize successfully then call the init_broker() function */
    fdf6:	86 d3       	rcall	.+1804   	; 0x10504 <_Z11Init_Brokerv>
    fdf8:	28 c0       	rjmp	.+80     	; 0xfe4a <_Z20Param_Initializationv+0x190>
    fdfa:	81 30       	cpi	r24, 0x01	; 1
	}
	else
	{
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fdfc:	c1 f0       	breq	.+48     	; 0xfe2e <_Z20Param_Initializationv+0x174>
    fdfe:	0e 94 03 66 	call	0xcc06	; 0xcc06 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fe02:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: GSM",10,0,5);        /* print company name */
    fe04:	40 e0       	ldi	r20, 0x00	; 0
    fe06:	6a e0       	ldi	r22, 0x0A	; 10
    fe08:	82 e9       	ldi	r24, 0x92	; 146
    fe0a:	95 e0       	ldi	r25, 0x05	; 5
    fe0c:	0e 94 d7 65 	call	0xcbae	; 0xcbae <_Z14Lcd_Print_BuffPchhh>
    fe10:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe14:	81 30       	cpi	r24, 0x01	; 1
    fe16:	51 f4       	brne	.+20     	; 0xfe2c <_Z20Param_Initializationv+0x172>
    fe18:	67 ef       	ldi	r22, 0xF7	; 247
			{
				_kSERAIL_MON_WRITE("NOT REGISTER AND ALSO MODULE NOT WORK, PLEASE CHECK THE MODULE AND RESTART THE DEVICE");  /* for debugging purpose */
    fe1a:	76 e2       	ldi	r23, 0x26	; 38
    fe1c:	86 ec       	ldi	r24, 0xC6	; 198
    fe1e:	94 e1       	ldi	r25, 0x14	; 20
    fe20:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    fe24:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fe26:	94 e1       	ldi	r25, 0x14	; 20
    fe28:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    fe2c:	ff cf       	rjmp	.-2      	; 0xfe2c <_Z20Param_Initializationv+0x172>
    fe2e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
			}
			while(1);
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe32:	81 30       	cpi	r24, 0x01	; 1
    fe34:	51 f4       	brne	.+20     	; 0xfe4a <_Z20Param_Initializationv+0x190>
    fe36:	6c ed       	ldi	r22, 0xDC	; 220
			{
				_kSERAIL_MON_WRITE("GSM AND MQTT WILL NOT WORK");                /* for debugging purpose */
    fe38:	76 e2       	ldi	r23, 0x26	; 38
    fe3a:	86 ec       	ldi	r24, 0xC6	; 198
    fe3c:	94 e1       	ldi	r25, 0x14	; 20
    fe3e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
    fe42:	86 ec       	ldi	r24, 0xC6	; 198
				_kSERIAL_MON_CLEAR();
    fe44:	94 e1       	ldi	r25, 0x14	; 20
    fe46:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
		}
	}
	
	Read_EEPROM();                        /* read all the data which is stored in the EEPROM till now */
    fe4a:	a6 dc       	rcall	.-1716   	; 0xf798 <_Z11Read_EEPROMv>
    fe4c:	05 e1       	ldi	r16, 0x15	; 21
    fe4e:	1c e0       	ldi	r17, 0x0C	; 12
    fe50:	e1 2c       	mov	r14, r1
    fe52:	f1 2c       	mov	r15, r1
    fe54:	dd 24       	eor	r13, r13
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fe56:	d3 94       	inc	r13
    fe58:	b8 01       	movw	r22, r16
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
    fe5a:	6f 5f       	subi	r22, 0xFF	; 255
    fe5c:	7f 4f       	sbci	r23, 0xFF	; 255
    fe5e:	c7 01       	movw	r24, r14
    fe60:	8e 5d       	subi	r24, 0xDE	; 222
    fe62:	9b 4e       	sbci	r25, 0xEB	; 235
    fe64:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
    fe68:	f8 01       	movw	r30, r16
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    fe6a:	80 81       	ld	r24, Z
    fe6c:	81 11       	cpse	r24, r1
    fe6e:	d3 86       	std	Z+11, r13	; 0x0b
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fe70:	f7 e0       	ldi	r31, 0x07	; 7
    fe72:	ef 0e       	add	r14, r31
    fe74:	f1 1c       	adc	r15, r1
    fe76:	03 5f       	subi	r16, 0xF3	; 243
    fe78:	1f 4f       	sbci	r17, 0xFF	; 255
    fe7a:	8a e2       	ldi	r24, 0x2A	; 42
	/******************************************************* Read the pump Nominal current **********************************/
	
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    fe7c:	e8 16       	cp	r14, r24
    fe7e:	f1 04       	cpc	r15, r1
    fe80:	59 f7       	brne	.-42     	; 0xfe58 <_Z20Param_Initializationv+0x19e>
    fe82:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
		}
	}
	
	
	/****************************************** set the operation mode if Read EEPROM function is not working *************************/
	switch(_sRuble_Parameters.Operation_Mode)
    fe86:	81 50       	subi	r24, 0x01	; 1
    fe88:	85 30       	cpi	r24, 0x05	; 5
    fe8a:	80 f0       	brcs	.+32     	; 0xfeac <_Z20Param_Initializationv+0x1f2>
    fe8c:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
		{
			
		}break;
		default:
		{
			_sRuble_Parameters.Manual_Mode_Wait = 0;
    fe90:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
    fe94:	85 e0       	ldi	r24, 0x05	; 5
			_sRuble_Parameters.Operation_Mode   = _eOPER_MOD_SCHEDULER;  // 5/5
    fe96:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
    fe9a:	84 e0       	ldi	r24, 0x04	; 4
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fe9c:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
    fea0:	65 ed       	ldi	r22, 0xD5	; 213
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    fea2:	73 e1       	ldi	r23, 0x13	; 19
    fea4:	88 ed       	ldi	r24, 0xD8	; 216
    fea6:	94 e0       	ldi	r25, 0x04	; 4
    fea8:	0e 94 e3 73 	call	0xe7c6	; 0xe7c6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    feac:	20 e0       	ldi	r18, 0x00	; 0
		}break;
	}
	
	/****************************************** set the CT calibration ************************************************/
	RUBLE_PUMP_CURRENT.current(_kADC_PUMP_CUR, _kCT_CALIBRATION_FACTOR);
    feae:	30 e0       	ldi	r19, 0x00	; 0
    feb0:	40 ec       	ldi	r20, 0xC0	; 192
    feb2:	50 e4       	ldi	r21, 0x40	; 64
    feb4:	65 e4       	ldi	r22, 0x45	; 69
    feb6:	70 e0       	ldi	r23, 0x00	; 0
    feb8:	82 ef       	ldi	r24, 0xF2	; 242
    feba:	9c e0       	ldi	r25, 0x0C	; 12
    febc:	0e 94 3c d9 	call	0x1b278	; 0x1b278 <_ZN13EnergyMonitor7currentEjd>
    fec0:	0f 90       	pop	r0
	
}
    fec2:	0f 90       	pop	r0
    fec4:	0f 90       	pop	r0
    fec6:	df 91       	pop	r29
    fec8:	cf 91       	pop	r28
    feca:	1f 91       	pop	r17
    fecc:	0f 91       	pop	r16
    fece:	ff 90       	pop	r15
    fed0:	ef 90       	pop	r14
    fed2:	df 90       	pop	r13
    fed4:	cf 90       	pop	r12
    fed6:	08 95       	ret

0000fed8 <_Z17Clear_Serial_Datav>:
    fed8:	cf 92       	push	r12
	}	
}


void Clear_Serial_Data(void)
{
    feda:	df 92       	push	r13
    fedc:	ef 92       	push	r14
    fede:	ff 92       	push	r15
	unsigned long previous;
	previous = millis();
    fee0:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    fee4:	6b 01       	movw	r12, r22
    fee6:	7c 01       	movw	r14, r24
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    fee8:	83 e8       	ldi	r24, 0x83	; 131
    feea:	96 e1       	ldi	r25, 0x16	; 22
    feec:	0e 94 02 d3 	call	0x1a604	; 0x1a604 <_ZN14HardwareSerial9availableEv>
    fef0:	18 16       	cp	r1, r24
    fef2:	19 06       	cpc	r1, r25
    fef4:	94 f4       	brge	.+36     	; 0xff1a <_Z17Clear_Serial_Datav+0x42>
    fef6:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
    fefa:	dc 01       	movw	r26, r24
    fefc:	cb 01       	movw	r24, r22
    fefe:	8c 19       	sub	r24, r12
    ff00:	9d 09       	sbc	r25, r13
    ff02:	ae 09       	sbc	r26, r14
    ff04:	bf 09       	sbc	r27, r15
    ff06:	84 36       	cpi	r24, 0x64	; 100
    ff08:	91 05       	cpc	r25, r1
    ff0a:	a1 05       	cpc	r26, r1
    ff0c:	b1 05       	cpc	r27, r1
    ff0e:	28 f4       	brcc	.+10     	; 0xff1a <_Z17Clear_Serial_Datav+0x42>
	{
		_kSERIAL_AT.read(); 
    ff10:	83 e8       	ldi	r24, 0x83	; 131
    ff12:	96 e1       	ldi	r25, 0x16	; 22
    ff14:	0e 94 23 d3 	call	0x1a646	; 0x1a646 <_ZN14HardwareSerial4readEv>

void Clear_Serial_Data(void)
{
	unsigned long previous;
	previous = millis();
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    ff18:	e7 cf       	rjmp	.-50     	; 0xfee8 <_Z17Clear_Serial_Datav+0x10>
	{
		_kSERIAL_AT.read(); 
	}
}
    ff1a:	ff 90       	pop	r15
    ff1c:	ef 90       	pop	r14
    ff1e:	df 90       	pop	r13
    ff20:	cf 90       	pop	r12
    ff22:	08 95       	ret

0000ff24 <_Z23Update_Lira_Sensor_DataPh>:
// 			return 1;    /* if id get matched lira sensor node */
// 		}
// 	}
	
	return 0;           /*  id not matched with any lira sensor node */
}
    ff24:	80 e0       	ldi	r24, 0x00	; 0
    ff26:	08 95       	ret

0000ff28 <_Z16Lira_Data_EEPROMh>:


void Lira_Data_EEPROM(unsigned char plot_number)
{
    ff28:	df 92       	push	r13
    ff2a:	ef 92       	push	r14
    ff2c:	ff 92       	push	r15
    ff2e:	0f 93       	push	r16
    ff30:	1f 93       	push	r17
    ff32:	cf 93       	push	r28
    ff34:	df 93       	push	r29
	_kEEPROM_WRITE(_kEEPROM_LOC_LIRA_SENSOR_DATA(plot_number), _sLira_Node_Param[plot_number]);
    ff36:	98 e2       	ldi	r25, 0x28	; 40
    ff38:	89 9f       	mul	r24, r25
    ff3a:	90 01       	movw	r18, r0
    ff3c:	11 24       	eor	r1, r1
    ff3e:	89 01       	movw	r16, r18
    ff40:	08 5f       	subi	r16, 0xF8	; 248
    ff42:	1f 4f       	sbci	r17, 0xFF	; 255
    ff44:	96 e0       	ldi	r25, 0x06	; 6
    ff46:	89 9f       	mul	r24, r25
    ff48:	e0 01       	movw	r28, r0
    ff4a:	11 24       	eor	r1, r1
    ff4c:	c2 5b       	subi	r28, 0xB2	; 178
    ff4e:	d2 4f       	sbci	r29, 0xF2	; 242
    ff50:	79 01       	movw	r14, r18
    ff52:	8e e0       	ldi	r24, 0x0E	; 14
    ff54:	e8 0e       	add	r14, r24
    ff56:	f1 1c       	adc	r15, r1
    ff58:	d9 90       	ld	r13, Y+

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    ff5a:	c8 01       	movw	r24, r16
    ff5c:	0e 94 d9 f0 	call	0x1e1b2	; 0x1e1b2 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    ff60:	d8 16       	cp	r13, r24
    ff62:	21 f0       	breq	.+8      	; 0xff6c <_Z16Lira_Data_EEPROMh+0x44>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    ff64:	6d 2d       	mov	r22, r13
    ff66:	c8 01       	movw	r24, r16
    ff68:	0e 94 e1 f0 	call	0x1e1c2	; 0x1e1c2 <eeprom_write_byte>
    ff6c:	0f 5f       	subi	r16, 0xFF	; 255
    ff6e:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    ff70:	0e 15       	cp	r16, r14
    ff72:	1f 05       	cpc	r17, r15
    ff74:	89 f7       	brne	.-30     	; 0xff58 <_Z16Lira_Data_EEPROMh+0x30>
	return;
}
    ff76:	df 91       	pop	r29
    ff78:	cf 91       	pop	r28
    ff7a:	1f 91       	pop	r17
    ff7c:	0f 91       	pop	r16
    ff7e:	ff 90       	pop	r15
    ff80:	ef 90       	pop	r14
    ff82:	df 90       	pop	r13
    ff84:	08 95       	ret

0000ff86 <_Z21Store_MQTT_Pub_Topicsv>:
    ff86:	08 95       	ret

0000ff88 <_Z21Store_MQTT_Sub_Topicsv>:
		
}


void Store_MQTT_Sub_Topics(void)
{	
    ff88:	08 95       	ret

0000ff8a <_Z21Subscribe_MQTT_Topicsv>:
	}
}


bool Subscribe_MQTT_Topics(void)
{
    ff8a:	ff 92       	push	r15
    ff8c:	0f 93       	push	r16
    ff8e:	1f 93       	push	r17
    ff90:	cf 93       	push	r28
    ff92:	df 93       	push	r29
    ff94:	cd b7       	in	r28, 0x3d	; 61
    ff96:	de b7       	in	r29, 0x3e	; 62
    ff98:	a8 97       	sbiw	r28, 0x28	; 40
    ff9a:	0f b6       	in	r0, 0x3f	; 63
    ff9c:	f8 94       	cli
    ff9e:	de bf       	out	0x3e, r29	; 62
    ffa0:	0f be       	out	0x3f, r0	; 63
    ffa2:	cd bf       	out	0x3d, r28	; 61
	
	unsigned char temp_sub_topic[40];
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    ffa4:	8e 01       	movw	r16, r28
    ffa6:	0f 5f       	subi	r16, 0xFF	; 255
    ffa8:	1f 4f       	sbci	r17, 0xFF	; 255
    ffaa:	88 e2       	ldi	r24, 0x28	; 40
    ffac:	f8 01       	movw	r30, r16
    ffae:	11 92       	st	Z+, r1
    ffb0:	8a 95       	dec	r24
    ffb2:	e9 f7       	brne	.-6      	; 0xffae <_Z21Subscribe_MQTT_Topicsv+0x24>
	sprintf((char *)temp_sub_topic,"SICCA/DELETE/VALVE/%s",_sRuble_Parameters.Ruble_ID);
    ffb4:	8e ec       	ldi	r24, 0xCE	; 206
    ffb6:	93 e1       	ldi	r25, 0x13	; 19
    ffb8:	9f 93       	push	r25
    ffba:	8f 93       	push	r24
    ffbc:	8d e9       	ldi	r24, 0x9D	; 157
    ffbe:	95 e0       	ldi	r25, 0x05	; 5
    ffc0:	9f 93       	push	r25
    ffc2:	8f 93       	push	r24
    ffc4:	1f 93       	push	r17
    ffc6:	0f 93       	push	r16
    ffc8:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    ffcc:	c8 01       	movw	r24, r16
    ffce:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
    ffd2:	0f 90       	pop	r0
    ffd4:	0f 90       	pop	r0
    ffd6:	0f 90       	pop	r0
    ffd8:	0f 90       	pop	r0
    ffda:	0f 90       	pop	r0
    ffdc:	0f 90       	pop	r0
    ffde:	81 11       	cpse	r24, r1
    ffe0:	0f c0       	rjmp	.+30     	; 0x10000 <_Z21Subscribe_MQTT_Topicsv+0x76>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    ffe2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
    ffe6:	81 30       	cpi	r24, 0x01	; 1
    ffe8:	69 f4       	brne	.+26     	; 0x10004 <_Z21Subscribe_MQTT_Topicsv+0x7a>
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
    ffea:	6a ea       	ldi	r22, 0xAA	; 170
    ffec:	77 e2       	ldi	r23, 0x27	; 39
    ffee:	86 ec       	ldi	r24, 0xC6	; 198
    fff0:	94 e1       	ldi	r25, 0x14	; 20
    fff2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    fff6:	86 ec       	ldi	r24, 0xC6	; 198
    fff8:	94 e1       	ldi	r25, 0x14	; 20
    fffa:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
    fffe:	02 c0       	rjmp	.+4      	; 0x10004 <_Z21Subscribe_MQTT_Topicsv+0x7a>
}


bool Subscribe_MQTT_Topics(void)
{
	char temp_flag = _kRESET;
   10000:	f1 2c       	mov	r15, r1
   10002:	02 c0       	rjmp	.+4      	; 0x10008 <_Z21Subscribe_MQTT_Topicsv+0x7e>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		temp_flag = _kSET;
   10004:	ff 24       	eor	r15, r15
   10006:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10008:	88 e2       	ldi	r24, 0x28	; 40
   1000a:	f8 01       	movw	r30, r16
   1000c:	11 92       	st	Z+, r1
   1000e:	8a 95       	dec	r24
   10010:	e9 f7       	brne	.-6      	; 0x1000c <_Z21Subscribe_MQTT_Topicsv+0x82>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/PLOT/%s",_sRuble_Parameters.Ruble_ID);
   10012:	8e ec       	ldi	r24, 0xCE	; 206
   10014:	93 e1       	ldi	r25, 0x13	; 19
   10016:	9f 93       	push	r25
   10018:	8f 93       	push	r24
   1001a:	83 eb       	ldi	r24, 0xB3	; 179
   1001c:	95 e0       	ldi	r25, 0x05	; 5
   1001e:	9f 93       	push	r25
   10020:	8f 93       	push	r24
   10022:	1f 93       	push	r17
   10024:	0f 93       	push	r16
   10026:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	//SICCA/CONFIG/SETUP/PLOT/
		
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1002a:	c8 01       	movw	r24, r16
   1002c:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   10030:	0f 90       	pop	r0
   10032:	0f 90       	pop	r0
   10034:	0f 90       	pop	r0
   10036:	0f 90       	pop	r0
   10038:	0f 90       	pop	r0
   1003a:	0f 90       	pop	r0
   1003c:	81 11       	cpse	r24, r1
   1003e:	02 c0       	rjmp	.+4      	; 0x10044 <_Z21Subscribe_MQTT_Topicsv+0xba>
	{
		temp_flag = _kSET;
   10040:	ff 24       	eor	r15, r15
   10042:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10044:	88 e2       	ldi	r24, 0x28	; 40
   10046:	f8 01       	movw	r30, r16
   10048:	11 92       	st	Z+, r1
   1004a:	8a 95       	dec	r24
   1004c:	e9 f7       	brne	.-6      	; 0x10048 <_Z21Subscribe_MQTT_Topicsv+0xbe>
	sprintf((char *)temp_sub_topic,"SICCA/STATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
   1004e:	8e ec       	ldi	r24, 0xCE	; 206
   10050:	93 e1       	ldi	r25, 0x13	; 19
   10052:	9f 93       	push	r25
   10054:	8f 93       	push	r24
   10056:	8e ec       	ldi	r24, 0xCE	; 206
   10058:	95 e0       	ldi	r25, 0x05	; 5
   1005a:	9f 93       	push	r25
   1005c:	8f 93       	push	r24
   1005e:	1f 93       	push	r17
   10060:	0f 93       	push	r16
   10062:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   10066:	c8 01       	movw	r24, r16
   10068:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   1006c:	0f 90       	pop	r0
   1006e:	0f 90       	pop	r0
   10070:	0f 90       	pop	r0
   10072:	0f 90       	pop	r0
   10074:	0f 90       	pop	r0
   10076:	0f 90       	pop	r0
   10078:	81 11       	cpse	r24, r1
   1007a:	02 c0       	rjmp	.+4      	; 0x10080 <_Z21Subscribe_MQTT_Topicsv+0xf6>
	{
		temp_flag = _kSET;
   1007c:	ff 24       	eor	r15, r15
   1007e:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10080:	88 e2       	ldi	r24, 0x28	; 40
   10082:	f8 01       	movw	r30, r16
   10084:	11 92       	st	Z+, r1
   10086:	8a 95       	dec	r24
   10088:	e9 f7       	brne	.-6      	; 0x10084 <_Z21Subscribe_MQTT_Topicsv+0xfa>
	sprintf((char *)temp_sub_topic,"SICCA/TIMER/%s",_sRuble_Parameters.Ruble_ID);
   1008a:	8e ec       	ldi	r24, 0xCE	; 206
   1008c:	93 e1       	ldi	r25, 0x13	; 19
   1008e:	9f 93       	push	r25
   10090:	8f 93       	push	r24
   10092:	86 ee       	ldi	r24, 0xE6	; 230
   10094:	95 e0       	ldi	r25, 0x05	; 5
   10096:	9f 93       	push	r25
   10098:	8f 93       	push	r24
   1009a:	1f 93       	push	r17
   1009c:	0f 93       	push	r16
   1009e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   100a2:	c8 01       	movw	r24, r16
   100a4:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   100a8:	0f 90       	pop	r0
   100aa:	0f 90       	pop	r0
   100ac:	0f 90       	pop	r0
   100ae:	0f 90       	pop	r0
   100b0:	0f 90       	pop	r0
   100b2:	0f 90       	pop	r0
   100b4:	81 11       	cpse	r24, r1
   100b6:	02 c0       	rjmp	.+4      	; 0x100bc <_Z21Subscribe_MQTT_Topicsv+0x132>
	{
		temp_flag = _kSET;
   100b8:	ff 24       	eor	r15, r15
   100ba:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   100bc:	88 e2       	ldi	r24, 0x28	; 40
   100be:	f8 01       	movw	r30, r16
   100c0:	11 92       	st	Z+, r1
   100c2:	8a 95       	dec	r24
   100c4:	e9 f7       	brne	.-6      	; 0x100c0 <_Z21Subscribe_MQTT_Topicsv+0x136>
	sprintf((char *)temp_sub_topic,"SICCA/SOIL/COEFF/%s",_sRuble_Parameters.Ruble_ID);
   100c6:	8e ec       	ldi	r24, 0xCE	; 206
   100c8:	93 e1       	ldi	r25, 0x13	; 19
   100ca:	9f 93       	push	r25
   100cc:	8f 93       	push	r24
   100ce:	85 ef       	ldi	r24, 0xF5	; 245
   100d0:	95 e0       	ldi	r25, 0x05	; 5
   100d2:	9f 93       	push	r25
   100d4:	8f 93       	push	r24
   100d6:	1f 93       	push	r17
   100d8:	0f 93       	push	r16
   100da:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   100de:	c8 01       	movw	r24, r16
   100e0:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   100e4:	0f 90       	pop	r0
   100e6:	0f 90       	pop	r0
   100e8:	0f 90       	pop	r0
   100ea:	0f 90       	pop	r0
   100ec:	0f 90       	pop	r0
   100ee:	0f 90       	pop	r0
   100f0:	81 11       	cpse	r24, r1
   100f2:	02 c0       	rjmp	.+4      	; 0x100f8 <_Z21Subscribe_MQTT_Topicsv+0x16e>
	{
		temp_flag = _kSET;
   100f4:	ff 24       	eor	r15, r15
   100f6:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   100f8:	88 e2       	ldi	r24, 0x28	; 40
   100fa:	f8 01       	movw	r30, r16
   100fc:	11 92       	st	Z+, r1
   100fe:	8a 95       	dec	r24
   10100:	e9 f7       	brne	.-6      	; 0x100fc <_Z21Subscribe_MQTT_Topicsv+0x172>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/%s",_sRuble_Parameters.Ruble_ID);
   10102:	8e ec       	ldi	r24, 0xCE	; 206
   10104:	93 e1       	ldi	r25, 0x13	; 19
   10106:	9f 93       	push	r25
   10108:	8f 93       	push	r24
   1010a:	89 e0       	ldi	r24, 0x09	; 9
   1010c:	96 e0       	ldi	r25, 0x06	; 6
   1010e:	9f 93       	push	r25
   10110:	8f 93       	push	r24
   10112:	1f 93       	push	r17
   10114:	0f 93       	push	r16
   10116:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1011a:	c8 01       	movw	r24, r16
   1011c:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   10120:	0f 90       	pop	r0
   10122:	0f 90       	pop	r0
   10124:	0f 90       	pop	r0
   10126:	0f 90       	pop	r0
   10128:	0f 90       	pop	r0
   1012a:	0f 90       	pop	r0
   1012c:	81 11       	cpse	r24, r1
   1012e:	02 c0       	rjmp	.+4      	; 0x10134 <_Z21Subscribe_MQTT_Topicsv+0x1aa>
	{
		temp_flag = _kSET;
   10130:	ff 24       	eor	r15, r15
   10132:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}



	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10134:	88 e2       	ldi	r24, 0x28	; 40
   10136:	f8 01       	movw	r30, r16
   10138:	11 92       	st	Z+, r1
   1013a:	8a 95       	dec	r24
   1013c:	e9 f7       	brne	.-6      	; 0x10138 <_Z21Subscribe_MQTT_Topicsv+0x1ae>
	sprintf((char *)temp_sub_topic,"SICCA/CALIBRATE/%s",_sRuble_Parameters.Ruble_ID);
   1013e:	8e ec       	ldi	r24, 0xCE	; 206
   10140:	93 e1       	ldi	r25, 0x13	; 19
   10142:	9f 93       	push	r25
   10144:	8f 93       	push	r24
   10146:	8f e1       	ldi	r24, 0x1F	; 31
   10148:	96 e0       	ldi	r25, 0x06	; 6
   1014a:	9f 93       	push	r25
   1014c:	8f 93       	push	r24
   1014e:	1f 93       	push	r17
   10150:	0f 93       	push	r16
   10152:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   10156:	c8 01       	movw	r24, r16
   10158:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   1015c:	0f 90       	pop	r0
   1015e:	0f 90       	pop	r0
   10160:	0f 90       	pop	r0
   10162:	0f 90       	pop	r0
   10164:	0f 90       	pop	r0
   10166:	0f 90       	pop	r0
   10168:	81 11       	cpse	r24, r1
   1016a:	02 c0       	rjmp	.+4      	; 0x10170 <_Z21Subscribe_MQTT_Topicsv+0x1e6>
	{
		temp_flag = _kSET;
   1016c:	ff 24       	eor	r15, r15
   1016e:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}

	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   10170:	88 e2       	ldi	r24, 0x28	; 40
   10172:	f8 01       	movw	r30, r16
   10174:	11 92       	st	Z+, r1
   10176:	8a 95       	dec	r24
   10178:	e9 f7       	brne	.-6      	; 0x10174 <_Z21Subscribe_MQTT_Topicsv+0x1ea>
	sprintf((char *)temp_sub_topic,"SICCA/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
   1017a:	8e ec       	ldi	r24, 0xCE	; 206
   1017c:	93 e1       	ldi	r25, 0x13	; 19
   1017e:	9f 93       	push	r25
   10180:	8f 93       	push	r24
   10182:	82 e3       	ldi	r24, 0x32	; 50
   10184:	96 e0       	ldi	r25, 0x06	; 6
   10186:	9f 93       	push	r25
   10188:	8f 93       	push	r24
   1018a:	1f 93       	push	r17
   1018c:	0f 93       	push	r16
   1018e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   10192:	c8 01       	movw	r24, r16
   10194:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   10198:	0f 90       	pop	r0
   1019a:	0f 90       	pop	r0
   1019c:	0f 90       	pop	r0
   1019e:	0f 90       	pop	r0
   101a0:	0f 90       	pop	r0
   101a2:	0f 90       	pop	r0
   101a4:	81 11       	cpse	r24, r1
   101a6:	02 c0       	rjmp	.+4      	; 0x101ac <_Z21Subscribe_MQTT_Topicsv+0x222>
	{
		temp_flag = _kSET;
   101a8:	ff 24       	eor	r15, r15
   101aa:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   101ac:	88 e2       	ldi	r24, 0x28	; 40
   101ae:	f8 01       	movw	r30, r16
   101b0:	11 92       	st	Z+, r1
   101b2:	8a 95       	dec	r24
   101b4:	e9 f7       	brne	.-6      	; 0x101b0 <_Z21Subscribe_MQTT_Topicsv+0x226>
	sprintf((char *)temp_sub_topic,"SICCA/DEVICE/%s",_sRuble_Parameters.Ruble_ID);
   101b6:	8e ec       	ldi	r24, 0xCE	; 206
   101b8:	93 e1       	ldi	r25, 0x13	; 19
   101ba:	9f 93       	push	r25
   101bc:	8f 93       	push	r24
   101be:	84 e4       	ldi	r24, 0x44	; 68
   101c0:	96 e0       	ldi	r25, 0x06	; 6
   101c2:	9f 93       	push	r25
   101c4:	8f 93       	push	r24
   101c6:	1f 93       	push	r17
   101c8:	0f 93       	push	r16
   101ca:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   101ce:	c8 01       	movw	r24, r16
   101d0:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   101d4:	0f 90       	pop	r0
   101d6:	0f 90       	pop	r0
   101d8:	0f 90       	pop	r0
   101da:	0f 90       	pop	r0
   101dc:	0f 90       	pop	r0
   101de:	0f 90       	pop	r0
   101e0:	81 11       	cpse	r24, r1
   101e2:	02 c0       	rjmp	.+4      	; 0x101e8 <_Z21Subscribe_MQTT_Topicsv+0x25e>
	{
		temp_flag = _kSET;
   101e4:	ff 24       	eor	r15, r15
   101e6:	f3 94       	inc	r15
	}
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
   101e8:	88 e2       	ldi	r24, 0x28	; 40
   101ea:	f8 01       	movw	r30, r16
   101ec:	11 92       	st	Z+, r1
   101ee:	8a 95       	dec	r24
   101f0:	e9 f7       	brne	.-6      	; 0x101ec <_Z21Subscribe_MQTT_Topicsv+0x262>
	sprintf((char *)temp_sub_topic,"SICCA/TANK/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
   101f2:	8e ec       	ldi	r24, 0xCE	; 206
   101f4:	93 e1       	ldi	r25, 0x13	; 19
   101f6:	9f 93       	push	r25
   101f8:	8f 93       	push	r24
   101fa:	84 e5       	ldi	r24, 0x54	; 84
   101fc:	96 e0       	ldi	r25, 0x06	; 6
   101fe:	9f 93       	push	r25
   10200:	8f 93       	push	r24
   10202:	1f 93       	push	r17
   10204:	0f 93       	push	r16
   10206:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
   1020a:	c8 01       	movw	r24, r16
   1020c:	0e 94 7b 72 	call	0xe4f6	; 0xe4f6 <_Z14MQTT_SUBSCRIBEPc>
   10210:	0f 90       	pop	r0
   10212:	0f 90       	pop	r0
   10214:	0f 90       	pop	r0
   10216:	0f 90       	pop	r0
   10218:	0f 90       	pop	r0
   1021a:	0f 90       	pop	r0
   1021c:	88 23       	and	r24, r24
   1021e:	11 f0       	breq	.+4      	; 0x10224 <_Z21Subscribe_MQTT_Topicsv+0x29a>
// 	{
// 		temp_flag = _kSET;
// 	}
	
	
	if(temp_flag)
   10220:	ff 20       	and	r15, r15
   10222:	31 f0       	breq	.+12     	; 0x10230 <_Z21Subscribe_MQTT_Topicsv+0x2a6>
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
   10224:	82 e0       	ldi	r24, 0x02	; 2
   10226:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
   1022a:	ff 24       	eor	r15, r15
   1022c:	f3 94       	inc	r15
   1022e:	03 c0       	rjmp	.+6      	; 0x10236 <_Z21Subscribe_MQTT_Topicsv+0x2ac>
	}
	else
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_SUBSCRIBED;
   10230:	81 e0       	ldi	r24, 0x01	; 1
   10232:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
	}
	
	return !temp_flag;
}
   10236:	81 e0       	ldi	r24, 0x01	; 1
   10238:	8f 25       	eor	r24, r15
   1023a:	a8 96       	adiw	r28, 0x28	; 40
   1023c:	0f b6       	in	r0, 0x3f	; 63
   1023e:	f8 94       	cli
   10240:	de bf       	out	0x3e, r29	; 62
   10242:	0f be       	out	0x3f, r0	; 63
   10244:	cd bf       	out	0x3d, r28	; 61
   10246:	df 91       	pop	r29
   10248:	cf 91       	pop	r28
   1024a:	1f 91       	pop	r17
   1024c:	0f 91       	pop	r16
   1024e:	ff 90       	pop	r15
   10250:	08 95       	ret

00010252 <_Z14Ping_to_Serverv>:
	
}


bool Ping_to_Server(void)
{
   10252:	0f 93       	push	r16
   10254:	cf 93       	push	r28
	Reset_Buffer();
   10256:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
   _kSERIAL_AT.println(F("ATE0"));
   1025a:	60 ea       	ldi	r22, 0xA0	; 160
   1025c:	78 e2       	ldi	r23, 0x28	; 40
   1025e:	83 e8       	ldi	r24, 0x83	; 131
   10260:	96 e1       	ldi	r25, 0x16	; 22
   10262:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   Send_AT_Command(NULL, "OK",  NULL,3000,2);
   10266:	02 e0       	ldi	r16, 0x02	; 2
   10268:	28 eb       	ldi	r18, 0xB8	; 184
   1026a:	3b e0       	ldi	r19, 0x0B	; 11
   1026c:	40 e0       	ldi	r20, 0x00	; 0
   1026e:	50 e0       	ldi	r21, 0x00	; 0
   10270:	6e e1       	ldi	r22, 0x1E	; 30
   10272:	73 e0       	ldi	r23, 0x03	; 3
   10274:	80 e0       	ldi	r24, 0x00	; 0
   10276:	90 e0       	ldi	r25, 0x00	; 0
   10278:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
	
	
	if (!Check_Sim(_eDIRESCT_CHECK))
   1027c:	83 e0       	ldi	r24, 0x03	; 3
   1027e:	0e 94 42 74 	call	0xe884	; 0xe884 <_Z9Check_Simc>
   10282:	c8 2f       	mov	r28, r24
   10284:	81 11       	cpse	r24, r1
   10286:	10 c0       	rjmp	.+32     	; 0x102a8 <_Z14Ping_to_Serverv+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   10288:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1028c:	81 30       	cpi	r24, 0x01	; 1
   1028e:	09 f0       	breq	.+2      	; 0x10292 <_Z14Ping_to_Serverv+0x40>
   10290:	35 c1       	rjmp	.+618    	; 0x104fc <_Z14Ping_to_Serverv+0x2aa>
		{
			_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
   10292:	6f e8       	ldi	r22, 0x8F	; 143
   10294:	78 e2       	ldi	r23, 0x28	; 40
   10296:	86 ec       	ldi	r24, 0xC6	; 198
   10298:	94 e1       	ldi	r25, 0x14	; 20
   1029a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   1029e:	86 ec       	ldi	r24, 0xC6	; 198
   102a0:	94 e1       	ldi	r25, 0x14	; 20
   102a2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   102a6:	2a c1       	rjmp	.+596    	; 0x104fc <_Z14Ping_to_Serverv+0x2aa>
		}
		return 0;
	}
	
	
	Reset_Buffer();
   102a8:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
	 _kSERIAL_AT.println(F("AT+QMTCLOSE=0"));
   102ac:	61 e8       	ldi	r22, 0x81	; 129
   102ae:	78 e2       	ldi	r23, 0x28	; 40
   102b0:	83 e8       	ldi	r24, 0x83	; 131
   102b2:	96 e1       	ldi	r25, 0x16	; 22
   102b4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(_kSEND_AT_COMMAND(NULL,"OK",NULL,3000,1))
   102b8:	01 e0       	ldi	r16, 0x01	; 1
   102ba:	28 eb       	ldi	r18, 0xB8	; 184
   102bc:	3b e0       	ldi	r19, 0x0B	; 11
   102be:	40 e0       	ldi	r20, 0x00	; 0
   102c0:	50 e0       	ldi	r21, 0x00	; 0
   102c2:	6e e1       	ldi	r22, 0x1E	; 30
   102c4:	73 e0       	ldi	r23, 0x03	; 3
   102c6:	80 e0       	ldi	r24, 0x00	; 0
   102c8:	90 e0       	ldi	r25, 0x00	; 0
   102ca:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
   102ce:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   102d2:	88 23       	and	r24, r24
   102d4:	29 f0       	breq	.+10     	; 0x102e0 <_Z14Ping_to_Serverv+0x8e>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   102d6:	91 30       	cpi	r25, 0x01	; 1
   102d8:	79 f4       	brne	.+30     	; 0x102f8 <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE");                /* for debugging purpose */
   102da:	65 e7       	ldi	r22, 0x75	; 117
   102dc:	78 e2       	ldi	r23, 0x28	; 40
   102de:	04 c0       	rjmp	.+8      	; 0x102e8 <_Z14Ping_to_Serverv+0x96>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   102e0:	91 30       	cpi	r25, 0x01	; 1
   102e2:	51 f4       	brne	.+20     	; 0x102f8 <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE NOT CLOSE ");                /* for debugging purpose */
   102e4:	6e e5       	ldi	r22, 0x5E	; 94
   102e6:	78 e2       	ldi	r23, 0x28	; 40
   102e8:	86 ec       	ldi	r24, 0xC6	; 198
   102ea:	94 e1       	ldi	r25, 0x14	; 20
   102ec:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   102f0:	86 ec       	ldi	r24, 0xC6	; 198
   102f2:	94 e1       	ldi	r25, 0x14	; 20
   102f4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
	}
	
	if(!Gsm_Gprs_Network())
   102f8:	0e 94 1e 62 	call	0xc43c	; 0xc43c <_Z16Gsm_Gprs_Networkv>
   102fc:	c8 2f       	mov	r28, r24
   102fe:	81 11       	cpse	r24, r1
   10300:	06 c0       	rjmp	.+12     	; 0x1030e <_Z14Ping_to_Serverv+0xbc>
	{
		_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   10302:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   10306:	8b 7f       	andi	r24, 0xFB	; 251
   10308:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1030c:	f7 c0       	rjmp	.+494    	; 0x104fc <_Z14Ping_to_Serverv+0x2aa>
		return 0;
		
	}
	
	_sRuble_Parameters.Display_Update |= _eNETWORK_SELECTED;
   1030e:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   10312:	80 64       	ori	r24, 0x40	; 64
   10314:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
	 Display_Update_1();  // 20/1/2022
   10318:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
	
	
	if(!_kIS_MQTT_CONNECTED() ||  _sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)      /* check weather already connected to server */
   1031c:	0e 94 70 6b 	call	0xd6e0	; 0xd6e0 <_Z17Is_MQTT_Connectedv>
   10320:	c8 2f       	mov	r28, r24
   10322:	88 23       	and	r24, r24
   10324:	29 f0       	breq	.+10     	; 0x10330 <_Z14Ping_to_Serverv+0xde>
   10326:	80 91 20 14 	lds	r24, 0x1420	; 0x801420 <_sRuble_Parameters+0x72>
   1032a:	82 30       	cpi	r24, 0x02	; 2
   1032c:	09 f0       	breq	.+2      	; 0x10330 <_Z14Ping_to_Serverv+0xde>
   1032e:	e6 c0       	rjmp	.+460    	; 0x104fc <_Z14Ping_to_Serverv+0x2aa>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   10330:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10334:	81 30       	cpi	r24, 0x01	; 1
   10336:	51 f4       	brne	.+20     	; 0x1034c <_Z14Ping_to_Serverv+0xfa>
		{
			_kSERAIL_MON_WRITE("Try to connect the server");                /* for debugging purpose */
   10338:	64 e4       	ldi	r22, 0x44	; 68
   1033a:	78 e2       	ldi	r23, 0x28	; 40
   1033c:	86 ec       	ldi	r24, 0xC6	; 198
   1033e:	94 e1       	ldi	r25, 0x14	; 20
   10340:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   10344:	86 ec       	ldi	r24, 0xC6	; 198
   10346:	94 e1       	ldi	r25, 0x14	; 20
   10348:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		
		_sRuble_Parameters.Display_Update =  _eCONNECTING_TO_SERVER;
   1034c:	10 92 ae 13 	sts	0x13AE, r1	; 0x8013ae <_sRuble_Parameters>
   10350:	84 e0       	ldi	r24, 0x04	; 4
   10352:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
   10356:	10 92 b0 13 	sts	0x13B0, r1	; 0x8013b0 <_sRuble_Parameters+0x2>
   1035a:	10 92 b1 13 	sts	0x13B1, r1	; 0x8013b1 <_sRuble_Parameters+0x3>
   1035e:	10 92 b2 13 	sts	0x13B2, r1	; 0x8013b2 <_sRuble_Parameters+0x4>
   10362:	10 92 b3 13 	sts	0x13B3, r1	; 0x8013b3 <_sRuble_Parameters+0x5>
   10366:	10 92 b4 13 	sts	0x13B4, r1	; 0x8013b4 <_sRuble_Parameters+0x6>
   1036a:	10 92 b5 13 	sts	0x13B5, r1	; 0x8013b5 <_sRuble_Parameters+0x7>
		Display_Update_1();    // 20/1/2022
   1036e:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
		
		
		if(_kMQTT_CONNCET(_kMQTT_CLIENT_ID,_kMQTT_USER,_kMQTT_PASSWORD))
   10372:	4b e6       	ldi	r20, 0x6B	; 107
   10374:	56 e0       	ldi	r21, 0x06	; 6
   10376:	6c e7       	ldi	r22, 0x7C	; 124
   10378:	76 e0       	ldi	r23, 0x06	; 6
   1037a:	cb 01       	movw	r24, r22
   1037c:	0e 94 a5 6b 	call	0xd74a	; 0xd74a <_Z12MQTT_ConnectPKcS0_S0_>
   10380:	c8 2f       	mov	r28, r24
   10382:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10386:	88 23       	and	r24, r24
   10388:	09 f4       	brne	.+2      	; 0x1038c <_Z14Ping_to_Serverv+0x13a>
   1038a:	6c c0       	rjmp	.+216    	; 0x10464 <_Z14Ping_to_Serverv+0x212>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   1038c:	91 30       	cpi	r25, 0x01	; 1
   1038e:	51 f4       	brne	.+20     	; 0x103a4 <_Z14Ping_to_Serverv+0x152>
			{
				_kSERAIL_MON_WRITE("Connected To server");                /* for debugging purpose */
   10390:	60 e3       	ldi	r22, 0x30	; 48
   10392:	78 e2       	ldi	r23, 0x28	; 40
   10394:	86 ec       	ldi	r24, 0xC6	; 198
   10396:	94 e1       	ldi	r25, 0x14	; 20
   10398:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   1039c:	86 ec       	ldi	r24, 0xC6	; 198
   1039e:	94 e1       	ldi	r25, 0x14	; 20
   103a0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Display_Update |= _kDISP_RANGE_3;
			
			_sRuble_Parameters.Display_Update |=  _eCONNECTED_TO_SERVER;
   103a4:	90 91 ae 13 	lds	r25, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   103a8:	98 60       	ori	r25, 0x08	; 8
   103aa:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   103ae:	80 68       	ori	r24, 0x80	; 128
   103b0:	90 93 ae 13 	sts	0x13AE, r25	; 0x8013ae <_sRuble_Parameters>
   103b4:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
			Display_Update_1();   // 20/1/2022
   103b8:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
			
			 if(Subscribe_MQTT_Topics())
   103bc:	e6 dd       	rcall	.-1076   	; 0xff8a <_Z21Subscribe_MQTT_Topicsv>
   103be:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   103c2:	88 23       	and	r24, r24
   103c4:	91 f0       	breq	.+36     	; 0x103ea <_Z14Ping_to_Serverv+0x198>
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   103c6:	91 30       	cpi	r25, 0x01	; 1
   103c8:	51 f4       	brne	.+20     	; 0x103de <_Z14Ping_to_Serverv+0x18c>
				 {
					 _kSERAIL_MON_WRITE("all topic subscribed");                /* for debugging purpose */
   103ca:	6b e1       	ldi	r22, 0x1B	; 27
   103cc:	78 e2       	ldi	r23, 0x28	; 40
   103ce:	86 ec       	ldi	r24, 0xC6	; 198
   103d0:	94 e1       	ldi	r25, 0x14	; 20
   103d2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   103d6:	86 ec       	ldi	r24, 0xC6	; 198
   103d8:	94 e1       	ldi	r25, 0x14	; 20
   103da:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
				 }
				  _sRuble_Parameters.lndications   |= _eRUBL_INDI_SERVER_CONN;
   103de:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   103e2:	84 60       	ori	r24, 0x04	; 4
   103e4:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   103e8:	08 c0       	rjmp	.+16     	; 0x103fa <_Z14Ping_to_Serverv+0x1a8>
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   103ea:	91 30       	cpi	r25, 0x01	; 1
   103ec:	31 f4       	brne	.+12     	; 0x103fa <_Z14Ping_to_Serverv+0x1a8>
				 {
					 _kSERAIL_MON_WRITE("all topic not subscribed");                /* for debugging purpose */
   103ee:	62 e0       	ldi	r22, 0x02	; 2
   103f0:	78 e2       	ldi	r23, 0x28	; 40
   103f2:	86 ec       	ldi	r24, 0xC6	; 198
   103f4:	94 e1       	ldi	r25, 0x14	; 20
   103f6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				 }
			 }
			 
			
			 _sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
   103fa:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   103fe:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   10402:	84 60       	ori	r24, 0x04	; 4
   10404:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   10408:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
			 
			 if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1040c:	e0 91 1f 14 	lds	r30, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10410:	70 91 ae 13 	lds	r23, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   10414:	90 91 af 13 	lds	r25, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   10418:	80 91 b0 13 	lds	r24, 0x13B0	; 0x8013b0 <_sRuble_Parameters+0x2>
   1041c:	60 91 b1 13 	lds	r22, 0x13B1	; 0x8013b1 <_sRuble_Parameters+0x3>
   10420:	50 91 b2 13 	lds	r21, 0x13B2	; 0x8013b2 <_sRuble_Parameters+0x4>
   10424:	40 91 b3 13 	lds	r20, 0x13B3	; 0x8013b3 <_sRuble_Parameters+0x5>
   10428:	30 91 b4 13 	lds	r19, 0x13B4	; 0x8013b4 <_sRuble_Parameters+0x6>
   1042c:	20 91 b5 13 	lds	r18, 0x13B5	; 0x8013b5 <_sRuble_Parameters+0x7>
   10430:	e1 30       	cpi	r30, 0x01	; 1
   10432:	21 f0       	breq	.+8      	; 0x1043c <_Z14Ping_to_Serverv+0x1ea>
			 {
				  _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   10434:	98 60       	ori	r25, 0x08	; 8
   10436:	90 93 af 13 	sts	0x13AF, r25	; 0x8013af <_sRuble_Parameters+0x1>
   1043a:	11 c0       	rjmp	.+34     	; 0x1045e <_Z14Ping_to_Serverv+0x20c>
				  Display_Update_1();   // 20/1/2022
			 }
			 else
			 {
				  _sRuble_Parameters.Display_Update |= _eTHANK_YOU_FOR_WAITING;
   1043c:	81 60       	ori	r24, 0x01	; 1
   1043e:	70 93 ae 13 	sts	0x13AE, r23	; 0x8013ae <_sRuble_Parameters>
   10442:	90 93 af 13 	sts	0x13AF, r25	; 0x8013af <_sRuble_Parameters+0x1>
   10446:	80 93 b0 13 	sts	0x13B0, r24	; 0x8013b0 <_sRuble_Parameters+0x2>
   1044a:	60 93 b1 13 	sts	0x13B1, r22	; 0x8013b1 <_sRuble_Parameters+0x3>
   1044e:	50 93 b2 13 	sts	0x13B2, r21	; 0x8013b2 <_sRuble_Parameters+0x4>
   10452:	40 93 b3 13 	sts	0x13B3, r20	; 0x8013b3 <_sRuble_Parameters+0x5>
   10456:	30 93 b4 13 	sts	0x13B4, r19	; 0x8013b4 <_sRuble_Parameters+0x6>
   1045a:	20 93 b5 13 	sts	0x13B5, r18	; 0x8013b5 <_sRuble_Parameters+0x7>
				  Display_Update_1();   // 20/1/2022
   1045e:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   10462:	4c c0       	rjmp	.+152    	; 0x104fc <_Z14Ping_to_Serverv+0x2aa>
			 
			 return 1;
		}
		else
		{
			_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   10464:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   10468:	8b 7f       	andi	r24, 0xFB	; 251
   1046a:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Display_Update |= _kDISP_NO_RANGE;
   1046e:	80 91 ae 13 	lds	r24, 0x13AE	; 0x8013ae <_sRuble_Parameters>
   10472:	81 60       	ori	r24, 0x01	; 1
   10474:	80 93 ae 13 	sts	0x13AE, r24	; 0x8013ae <_sRuble_Parameters>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   10478:	91 30       	cpi	r25, 0x01	; 1
   1047a:	51 f4       	brne	.+20     	; 0x10490 <_Z14Ping_to_Serverv+0x23e>
			{
				_kSERAIL_MON_WRITE("Fail To connect the server");                /* for debugging purpose */
   1047c:	67 ee       	ldi	r22, 0xE7	; 231
   1047e:	77 e2       	ldi	r23, 0x27	; 39
   10480:	86 ec       	ldi	r24, 0xC6	; 198
   10482:	94 e1       	ldi	r25, 0x14	; 20
   10484:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   10488:	86 ec       	ldi	r24, 0xC6	; 198
   1048a:	94 e1       	ldi	r25, 0x14	; 20
   1048c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
			}
			
			Reset_Buffer();
   10490:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("AT+CFUN=1,1"));
   10494:	6b ed       	ldi	r22, 0xDB	; 219
   10496:	77 e2       	ldi	r23, 0x27	; 39
   10498:	83 e8       	ldi	r24, 0x83	; 131
   1049a:	96 e1       	ldi	r25, 0x16	; 22
   1049c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL,"OK",  NULL,10000,1);     // 22/3/2022
   104a0:	01 e0       	ldi	r16, 0x01	; 1
   104a2:	20 e1       	ldi	r18, 0x10	; 16
   104a4:	37 e2       	ldi	r19, 0x27	; 39
   104a6:	40 e0       	ldi	r20, 0x00	; 0
   104a8:	50 e0       	ldi	r21, 0x00	; 0
   104aa:	6e e1       	ldi	r22, 0x1E	; 30
   104ac:	73 e0       	ldi	r23, 0x03	; 3
   104ae:	80 e0       	ldi	r24, 0x00	; 0
   104b0:	90 e0       	ldi	r25, 0x00	; 0
   104b2:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
			_kDELAY_MS(10000);
   104b6:	60 e1       	ldi	r22, 0x10	; 16
   104b8:	77 e2       	ldi	r23, 0x27	; 39
   104ba:	80 e0       	ldi	r24, 0x00	; 0
   104bc:	90 e0       	ldi	r25, 0x00	; 0
   104be:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
			if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   104c2:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   104c6:	81 30       	cpi	r24, 0x01	; 1
   104c8:	31 f0       	breq	.+12     	; 0x104d6 <_Z14Ping_to_Serverv+0x284>
			{
				_kDELAY_MS(120000);
   104ca:	60 ec       	ldi	r22, 0xC0	; 192
   104cc:	74 ed       	ldi	r23, 0xD4	; 212
   104ce:	81 e0       	ldi	r24, 0x01	; 1
   104d0:	90 e0       	ldi	r25, 0x00	; 0
   104d2:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
			}
			
			Reset_Buffer();
   104d6:	0e 94 07 68 	call	0xd00e	; 0xd00e <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("ATE0"));
   104da:	66 ed       	ldi	r22, 0xD6	; 214
   104dc:	77 e2       	ldi	r23, 0x27	; 39
   104de:	83 e8       	ldi	r24, 0x83	; 131
   104e0:	96 e1       	ldi	r25, 0x16	; 22
   104e2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
   104e6:	02 e0       	ldi	r16, 0x02	; 2
   104e8:	28 eb       	ldi	r18, 0xB8	; 184
   104ea:	3b e0       	ldi	r19, 0x0B	; 11
   104ec:	40 e0       	ldi	r20, 0x00	; 0
   104ee:	50 e0       	ldi	r21, 0x00	; 0
   104f0:	6e e1       	ldi	r22, 0x1E	; 30
   104f2:	73 e0       	ldi	r23, 0x03	; 3
   104f4:	80 e0       	ldi	r24, 0x00	; 0
   104f6:	90 e0       	ldi	r25, 0x00	; 0
   104f8:	0e 94 6c 68 	call	0xd0d8	; 0xd0d8 <_Z15Send_AT_CommandPcS_S_jh>
	}
	else
	{
		return 1;
	}
}
   104fc:	8c 2f       	mov	r24, r28
   104fe:	cf 91       	pop	r28
   10500:	0f 91       	pop	r16
   10502:	08 95       	ret

00010504 <_Z11Init_Brokerv>:
	
}


bool Init_Broker(void)
{
   10504:	2f 92       	push	r2
   10506:	3f 92       	push	r3
   10508:	4f 92       	push	r4
   1050a:	5f 92       	push	r5
   1050c:	6f 92       	push	r6
   1050e:	7f 92       	push	r7
   10510:	8f 92       	push	r8
   10512:	9f 92       	push	r9
   10514:	af 92       	push	r10
   10516:	bf 92       	push	r11
   10518:	cf 92       	push	r12
   1051a:	df 92       	push	r13
   1051c:	ef 92       	push	r14
   1051e:	ff 92       	push	r15
   10520:	0f 93       	push	r16
   10522:	1f 93       	push	r17
   10524:	cf 93       	push	r28
   10526:	df 93       	push	r29
   10528:	cd b7       	in	r28, 0x3d	; 61
   1052a:	de b7       	in	r29, 0x3e	; 62
   1052c:	a8 97       	sbiw	r28, 0x28	; 40
   1052e:	0f b6       	in	r0, 0x3f	; 63
   10530:	f8 94       	cli
   10532:	de bf       	out	0x3e, r29	; 62
   10534:	0f be       	out	0x3f, r0	; 63
   10536:	cd bf       	out	0x3d, r28	; 61
	static unsigned char connect_count;
	static unsigned int loop_count;
	unsigned long previous;
	
	if(_sRuble_Parameters.Ruble_Registration_Status == _eRUBLE_REGISTERED)
   10538:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   1053c:	81 30       	cpi	r24, 0x01	; 1
   1053e:	89 f4       	brne	.+34     	; 0x10562 <_Z11Init_Brokerv+0x5e>
	{
		 if(Ping_to_Server())
   10540:	88 de       	rcall	.-752    	; 0x10252 <_Z14Ping_to_Serverv>
   10542:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10546:	88 23       	and	r24, r24
   10548:	c9 f0       	breq	.+50     	; 0x1057c <_Z11Init_Brokerv+0x78>
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1054a:	91 30       	cpi	r25, 0x01	; 1
   1054c:	51 f4       	brne	.+20     	; 0x10562 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Ping to server 0");                /* for debugging purpose */
   1054e:	68 e1       	ldi	r22, 0x18	; 24
   10550:	79 e2       	ldi	r23, 0x29	; 41
   10552:	86 ec       	ldi	r24, 0xC6	; 198
   10554:	94 e1       	ldi	r25, 0x14	; 20
   10556:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
				 _kSERIAL_MON_CLEAR();
   1055a:	86 ec       	ldi	r24, 0xC6	; 198
   1055c:	94 e1       	ldi	r25, 0x14	; 20
   1055e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
		 
		
		//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10562:	32 e6       	ldi	r19, 0x62	; 98
   10564:	a3 2e       	mov	r10, r19
   10566:	3f e0       	ldi	r19, 0x0F	; 15
   10568:	b3 2e       	mov	r11, r19
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
		
		//sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1056a:	4e ec       	ldi	r20, 0xCE	; 206
   1056c:	e4 2e       	mov	r14, r20
   1056e:	43 e1       	ldi	r20, 0x13	; 19
   10570:	f4 2e       	mov	r15, r20
			if(Subscribed_data_check())
			{
				if(Seperate_Out_Sub_Data())
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10572:	50 ed       	ldi	r21, 0xD0	; 208
   10574:	85 2e       	mov	r8, r21
   10576:	5f e0       	ldi	r21, 0x0F	; 15
   10578:	95 2e       	mov	r9, r21
   1057a:	18 c0       	rjmp	.+48     	; 0x105ac <_Z11Init_Brokerv+0xa8>
				 _kSERIAL_MON_CLEAR();
			 }
		 }
		 else
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1057c:	91 30       	cpi	r25, 0x01	; 1
   1057e:	89 f7       	brne	.-30     	; 0x10562 <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Fail to Ping server 0");                /* for debugging purpose */
   10580:	62 e0       	ldi	r22, 0x02	; 2
   10582:	79 e2       	ldi	r23, 0x29	; 41
   10584:	e6 cf       	rjmp	.-52     	; 0x10552 <_Z11Init_Brokerv+0x4e>
					 _kSERIAL_MON_CLEAR();
				 }
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10586:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1058a:	81 30       	cpi	r24, 0x01	; 1
   1058c:	51 f4       	brne	.+20     	; 0x105a2 <_Z11Init_Brokerv+0x9e>
				 {
					_kSERAIL_MON_WRITE("Fail to Ping server");                /* for debugging purpose */
   1058e:	6f ed       	ldi	r22, 0xDF	; 223
   10590:	78 e2       	ldi	r23, 0x28	; 40
   10592:	86 ec       	ldi	r24, 0xC6	; 198
   10594:	94 e1       	ldi	r25, 0x14	; 20
   10596:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
   1059a:	86 ec       	ldi	r24, 0xC6	; 198
   1059c:	94 e1       	ldi	r25, 0x14	; 20
   1059e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   105a2:	80 91 a4 0d 	lds	r24, 0x0DA4	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
   105a6:	83 30       	cpi	r24, 0x03	; 3
   105a8:	08 f4       	brcc	.+2      	; 0x105ac <_Z11Init_Brokerv+0xa8>
   105aa:	5c c0       	rjmp	.+184    	; 0x10664 <_Z11Init_Brokerv+0x160>
	
	//_kLCD_CLEAR();
	
	unsigned char temp_topic[40];   
	
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
   105ac:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   105b0:	8e 01       	movw	r16, r28
   105b2:	0f 5f       	subi	r16, 0xFF	; 255
   105b4:	1f 4f       	sbci	r17, 0xFF	; 255
   105b6:	81 30       	cpi	r24, 0x01	; 1
   105b8:	f1 f1       	breq	.+124    	; 0x10636 <_Z11Init_Brokerv+0x132>
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
   105ba:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
		 
		
		//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   105be:	8e e6       	ldi	r24, 0x6E	; 110
   105c0:	d5 01       	movw	r26, r10
   105c2:	1d 92       	st	X+, r1
   105c4:	8a 95       	dec	r24
   105c6:	e9 f7       	brne	.-6      	; 0x105c2 <_Z11Init_Brokerv+0xbe>
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   105c8:	88 e2       	ldi	r24, 0x28	; 40
   105ca:	f8 01       	movw	r30, r16
   105cc:	11 92       	st	Z+, r1
   105ce:	8a 95       	dec	r24
   105d0:	e9 f7       	brne	.-6      	; 0x105cc <_Z11Init_Brokerv+0xc8>
		
		//sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   105d2:	67 e8       	ldi	r22, 0x87	; 135
   105d4:	76 e0       	ldi	r23, 0x06	; 6
   105d6:	82 e6       	ldi	r24, 0x62	; 98
   105d8:	9f e0       	ldi	r25, 0x0F	; 15
   105da:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   105de:	ff 92       	push	r15
   105e0:	ef 92       	push	r14
   105e2:	8a e9       	ldi	r24, 0x9A	; 154
   105e4:	96 e0       	ldi	r25, 0x06	; 6
   105e6:	9f 93       	push	r25
   105e8:	8f 93       	push	r24
   105ea:	1f 93       	push	r17
   105ec:	0f 93       	push	r16
   105ee:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
		//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
   105f2:	62 e6       	ldi	r22, 0x62	; 98
   105f4:	7f e0       	ldi	r23, 0x0F	; 15
   105f6:	cb 01       	movw	r24, r22
   105f8:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
		
		previous = millis();
   105fc:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
   10600:	2b 01       	movw	r4, r22
   10602:	3c 01       	movw	r6, r24
   10604:	0f 90       	pop	r0
   10606:	0f 90       	pop	r0
   10608:	0f 90       	pop	r0
   1060a:	0f 90       	pop	r0
   1060c:	0f 90       	pop	r0
   1060e:	0f 90       	pop	r0
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10610:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
   10614:	dc 01       	movw	r26, r24
   10616:	cb 01       	movw	r24, r22
   10618:	84 19       	sub	r24, r4
   1061a:	95 09       	sbc	r25, r5
   1061c:	a6 09       	sbc	r26, r6
   1061e:	b7 09       	sbc	r27, r7
   10620:	88 39       	cpi	r24, 0x98	; 152
   10622:	9a 43       	sbci	r25, 0x3A	; 58
   10624:	a1 05       	cpc	r26, r1
   10626:	b1 05       	cpc	r27, r1
   10628:	b0 f4       	brcc	.+44     	; 0x10656 <_Z11Init_Brokerv+0x152>
   1062a:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   1062e:	81 30       	cpi	r24, 0x01	; 1
   10630:	09 f0       	breq	.+2      	; 0x10634 <_Z11Init_Brokerv+0x130>
   10632:	65 c0       	rjmp	.+202    	; 0x106fe <_Z11Init_Brokerv+0x1fa>
   10634:	10 c0       	rjmp	.+32     	; 0x10656 <_Z11Init_Brokerv+0x152>
				}
			}
			loop_count =0;
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10636:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1063a:	81 30       	cpi	r24, 0x01	; 1
   1063c:	09 f0       	breq	.+2      	; 0x10640 <_Z11Init_Brokerv+0x13c>
   1063e:	30 c1       	rjmp	.+608    	; 0x108a0 <_Z11Init_Brokerv+0x39c>
	{
		_kSERAIL_MON_WRITE("Ruble controller is registered");                /* for debugging purpose */
   10640:	65 ea       	ldi	r22, 0xA5	; 165
   10642:	78 e2       	ldi	r23, 0x28	; 40
   10644:	86 ec       	ldi	r24, 0xC6	; 198
   10646:	94 e1       	ldi	r25, 0x14	; 20
   10648:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
 		_kSERIAL_MON_CLEAR();
   1064c:	86 ec       	ldi	r24, 0xC6	; 198
   1064e:	94 e1       	ldi	r25, 0x14	; 20
   10650:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   10654:	25 c1       	rjmp	.+586    	; 0x108a0 <_Z11Init_Brokerv+0x39c>
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				}
			}
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   10656:	10 92 a4 0d 	sts	0x0DA4, r1	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1065a:	8a e9       	ldi	r24, 0x9A	; 154
   1065c:	c8 2e       	mov	r12, r24
   1065e:	86 e0       	ldi	r24, 0x06	; 6
   10660:	d8 2e       	mov	r13, r24
   10662:	9f cf       	rjmp	.-194    	; 0x105a2 <_Z11Init_Brokerv+0x9e>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   10664:	90 91 1f 14 	lds	r25, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10668:	91 30       	cpi	r25, 0x01	; 1
   1066a:	09 f4       	brne	.+2      	; 0x1066e <_Z11Init_Brokerv+0x16a>
   1066c:	9f cf       	rjmp	.-194    	; 0x105ac <_Z11Init_Brokerv+0xa8>
		{
			connect_count++;                               /* increase each time to maintain the 30 count */                                
   1066e:	8f 5f       	subi	r24, 0xFF	; 255
   10670:	80 93 a4 0d 	sts	0x0DA4, r24	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
			 if(Ping_to_Server())
   10674:	ee dd       	rcall	.-1060   	; 0x10252 <_Z14Ping_to_Serverv>
   10676:	88 23       	and	r24, r24
   10678:	09 f4       	brne	.+2      	; 0x1067c <_Z11Init_Brokerv+0x178>
   1067a:	85 cf       	rjmp	.-246    	; 0x10586 <_Z11Init_Brokerv+0x82>
			 {
				 _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   1067c:	80 91 af 13 	lds	r24, 0x13AF	; 0x8013af <_sRuble_Parameters+0x1>
   10680:	88 60       	ori	r24, 0x08	; 8
   10682:	80 93 af 13 	sts	0x13AF, r24	; 0x8013af <_sRuble_Parameters+0x1>
				 Display_Update_1();   // 20/1/2022
   10686:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
				 
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1068a:	8e e6       	ldi	r24, 0x6E	; 110
   1068c:	d5 01       	movw	r26, r10
   1068e:	1d 92       	st	X+, r1
   10690:	8a 95       	dec	r24
   10692:	e9 f7       	brne	.-6      	; 0x1068e <_Z11Init_Brokerv+0x18a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10694:	88 e2       	ldi	r24, 0x28	; 40
   10696:	f8 01       	movw	r30, r16
   10698:	11 92       	st	Z+, r1
   1069a:	8a 95       	dec	r24
   1069c:	e9 f7       	brne	.-6      	; 0x10698 <_Z11Init_Brokerv+0x194>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   1069e:	67 e8       	ldi	r22, 0x87	; 135
   106a0:	76 e0       	ldi	r23, 0x06	; 6
   106a2:	82 e6       	ldi	r24, 0x62	; 98
   106a4:	9f e0       	ldi	r25, 0x0F	; 15
   106a6:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   106aa:	ff 92       	push	r15
   106ac:	ef 92       	push	r14
   106ae:	df 92       	push	r13
   106b0:	cf 92       	push	r12
   106b2:	1f 93       	push	r17
   106b4:	0f 93       	push	r16
   106b6:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
				 //MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   106ba:	62 e6       	ldi	r22, 0x62	; 98
   106bc:	7f e0       	ldi	r23, 0x0F	; 15
   106be:	c8 01       	movw	r24, r16
   106c0:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
				 
				previous = millis();
   106c4:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
   106c8:	2b 01       	movw	r4, r22
   106ca:	3c 01       	movw	r6, r24
   106cc:	0f 90       	pop	r0
   106ce:	0f 90       	pop	r0
   106d0:	0f 90       	pop	r0
   106d2:	0f 90       	pop	r0
   106d4:	0f 90       	pop	r0
   106d6:	0f 90       	pop	r0
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   106d8:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
   106dc:	dc 01       	movw	r26, r24
   106de:	cb 01       	movw	r24, r22
   106e0:	84 19       	sub	r24, r4
   106e2:	95 09       	sbc	r25, r5
   106e4:	a6 09       	sbc	r26, r6
   106e6:	b7 09       	sbc	r27, r7
   106e8:	88 39       	cpi	r24, 0x98	; 152
   106ea:	9a 43       	sbci	r25, 0x3A	; 58
   106ec:	a1 05       	cpc	r26, r1
   106ee:	b1 05       	cpc	r27, r1
   106f0:	00 f5       	brcc	.+64     	; 0x10732 <_Z11Init_Brokerv+0x22e>
   106f2:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   106f6:	81 30       	cpi	r24, 0x01	; 1
   106f8:	09 f0       	breq	.+2      	; 0x106fc <_Z11Init_Brokerv+0x1f8>
   106fa:	86 c0       	rjmp	.+268    	; 0x10808 <_Z11Init_Brokerv+0x304>
   106fc:	1a c0       	rjmp	.+52     	; 0x10732 <_Z11Init_Brokerv+0x22e>
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
		
		previous = millis();
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
		{
			if(Subscribed_data_check())
   106fe:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   10702:	88 23       	and	r24, r24
   10704:	09 f4       	brne	.+2      	; 0x10708 <_Z11Init_Brokerv+0x204>
   10706:	84 cf       	rjmp	.-248    	; 0x10610 <_Z11Init_Brokerv+0x10c>
			{
				if(Seperate_Out_Sub_Data())
   10708:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   1070c:	88 23       	and	r24, r24
   1070e:	09 f4       	brne	.+2      	; 0x10712 <_Z11Init_Brokerv+0x20e>
   10710:	7f cf       	rjmp	.-258    	; 0x10610 <_Z11Init_Brokerv+0x10c>
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10712:	f4 01       	movw	r30, r8
   10714:	01 90       	ld	r0, Z+
   10716:	00 20       	and	r0, r0
   10718:	e9 f7       	brne	.-6      	; 0x10714 <_Z11Init_Brokerv+0x210>
   1071a:	31 97       	sbiw	r30, 0x01	; 1
   1071c:	af 01       	movw	r20, r30
   1071e:	40 5d       	subi	r20, 0xD0	; 208
   10720:	5f 40       	sbci	r21, 0x0F	; 15
   10722:	21 e0       	ldi	r18, 0x01	; 1
   10724:	60 ed       	ldi	r22, 0xD0	; 208
   10726:	7f e0       	ldi	r23, 0x0F	; 15
   10728:	82 e6       	ldi	r24, 0x62	; 98
   1072a:	9f e0       	ldi	r25, 0x0F	; 15
   1072c:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   10730:	6f cf       	rjmp	.-290    	; 0x10610 <_Z11Init_Brokerv+0x10c>
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						 }
					 }
				}
				 
				 connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   10732:	10 92 a4 0d 	sts	0x0DA4, r1	; 0x800da4 <_ZZ11Init_BrokervE13connect_count>
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10736:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1073a:	81 30       	cpi	r24, 0x01	; 1
   1073c:	51 f4       	brne	.+20     	; 0x10752 <_Z11Init_Brokerv+0x24e>
				 {
					 _kSERAIL_MON_WRITE("Ping to server");                /* for debugging purpose */
   1073e:	63 ef       	ldi	r22, 0xF3	; 243
   10740:	78 e2       	ldi	r23, 0x28	; 40
   10742:	86 ec       	ldi	r24, 0xC6	; 198
   10744:	94 e1       	ldi	r25, 0x14	; 20
   10746:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   1074a:	86 ec       	ldi	r24, 0xC6	; 198
   1074c:	94 e1       	ldi	r25, 0x14	; 20
   1074e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_CLEAR();
				 }
				 continue;
			 }
			 
			loop_count = 0;
   10752:	10 92 a3 0d 	sts	0x0DA3, r1	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   10756:	10 92 a2 0d 	sts	0x0DA2, r1	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1075a:	9e e6       	ldi	r25, 0x6E	; 110
   1075c:	79 2e       	mov	r7, r25
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   1075e:	28 e2       	ldi	r18, 0x28	; 40
   10760:	62 2e       	mov	r6, r18
				 continue;
			 }
			 
			loop_count = 0;
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
   10762:	80 91 a2 0d 	lds	r24, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   10766:	90 91 a3 0d 	lds	r25, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   1076a:	0a 97       	sbiw	r24, 0x0a	; 10
   1076c:	08 f0       	brcs	.+2      	; 0x10770 <_Z11Init_Brokerv+0x26c>
   1076e:	47 c0       	rjmp	.+142    	; 0x107fe <_Z11Init_Brokerv+0x2fa>
   10770:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   10774:	81 30       	cpi	r24, 0x01	; 1
   10776:	09 f4       	brne	.+2      	; 0x1077a <_Z11Init_Brokerv+0x276>
   10778:	42 c0       	rjmp	.+132    	; 0x107fe <_Z11Init_Brokerv+0x2fa>
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1077a:	d5 01       	movw	r26, r10
   1077c:	e7 2d       	mov	r30, r7
   1077e:	1d 92       	st	X+, r1
   10780:	ea 95       	dec	r30
   10782:	e9 f7       	brne	.-6      	; 0x1077e <_Z11Init_Brokerv+0x27a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10784:	d8 01       	movw	r26, r16
   10786:	e6 2d       	mov	r30, r6
   10788:	1d 92       	st	X+, r1
   1078a:	ea 95       	dec	r30
   1078c:	e9 f7       	brne	.-6      	; 0x10788 <_Z11Init_Brokerv+0x284>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   1078e:	67 e8       	ldi	r22, 0x87	; 135
   10790:	76 e0       	ldi	r23, 0x06	; 6
   10792:	82 e6       	ldi	r24, 0x62	; 98
   10794:	9f e0       	ldi	r25, 0x0F	; 15
   10796:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   1079a:	ff 92       	push	r15
   1079c:	ef 92       	push	r14
   1079e:	df 92       	push	r13
   107a0:	cf 92       	push	r12
   107a2:	1f 93       	push	r17
   107a4:	0f 93       	push	r16
   107a6:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
				// MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   107aa:	62 e6       	ldi	r22, 0x62	; 98
   107ac:	7f e0       	ldi	r23, 0x0F	; 15
   107ae:	c8 01       	movw	r24, r16
   107b0:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
				
				loop_count++;
   107b4:	80 91 a2 0d 	lds	r24, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   107b8:	90 91 a3 0d 	lds	r25, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   107bc:	01 96       	adiw	r24, 0x01	; 1
   107be:	90 93 a3 0d 	sts	0x0DA3, r25	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   107c2:	80 93 a2 0d 	sts	0x0DA2, r24	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
				
				previous = millis();
   107c6:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
   107ca:	1b 01       	movw	r2, r22
   107cc:	2c 01       	movw	r4, r24
   107ce:	0f 90       	pop	r0
   107d0:	0f 90       	pop	r0
   107d2:	0f 90       	pop	r0
   107d4:	0f 90       	pop	r0
   107d6:	0f 90       	pop	r0
   107d8:	0f 90       	pop	r0
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   107da:	0e 94 7c d7 	call	0x1aef8	; 0x1aef8 <millis>
   107de:	dc 01       	movw	r26, r24
   107e0:	cb 01       	movw	r24, r22
   107e2:	82 19       	sub	r24, r2
   107e4:	93 09       	sbc	r25, r3
   107e6:	a4 09       	sbc	r26, r4
   107e8:	b5 09       	sbc	r27, r5
   107ea:	88 3a       	cpi	r24, 0xA8	; 168
   107ec:	91 46       	sbci	r25, 0x61	; 97
   107ee:	a1 05       	cpc	r26, r1
   107f0:	b1 05       	cpc	r27, r1
   107f2:	e0 f5       	brcc	.+120    	; 0x1086c <_Z11Init_Brokerv+0x368>
   107f4:	80 91 1f 14 	lds	r24, 0x141F	; 0x80141f <_sRuble_Parameters+0x71>
   107f8:	81 30       	cpi	r24, 0x01	; 1
   107fa:	01 f5       	brne	.+64     	; 0x1083c <_Z11Init_Brokerv+0x338>
   107fc:	37 c0       	rjmp	.+110    	; 0x1086c <_Z11Init_Brokerv+0x368>
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
					_kSERIAL_MON_CLEAR();
				}
			}
			loop_count =0;
   107fe:	10 92 a3 0d 	sts	0x0DA3, r1	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   10802:	10 92 a2 0d 	sts	0x0DA2, r1	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   10806:	cd ce       	rjmp	.-614    	; 0x105a2 <_Z11Init_Brokerv+0x9e>
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
				 
				previous = millis();
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{ 
					 if(Subscribed_data_check())
   10808:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   1080c:	88 23       	and	r24, r24
   1080e:	09 f4       	brne	.+2      	; 0x10812 <_Z11Init_Brokerv+0x30e>
   10810:	63 cf       	rjmp	.-314    	; 0x106d8 <_Z11Init_Brokerv+0x1d4>
					 {
						 if(Seperate_Out_Sub_Data())
   10812:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   10816:	88 23       	and	r24, r24
   10818:	09 f4       	brne	.+2      	; 0x1081c <_Z11Init_Brokerv+0x318>
   1081a:	5e cf       	rjmp	.-324    	; 0x106d8 <_Z11Init_Brokerv+0x1d4>
						 {
							 //mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1081c:	f4 01       	movw	r30, r8
   1081e:	01 90       	ld	r0, Z+
   10820:	00 20       	and	r0, r0
   10822:	e9 f7       	brne	.-6      	; 0x1081e <_Z11Init_Brokerv+0x31a>
   10824:	31 97       	sbiw	r30, 0x01	; 1
   10826:	af 01       	movw	r20, r30
   10828:	40 5d       	subi	r20, 0xD0	; 208
   1082a:	5f 40       	sbci	r21, 0x0F	; 15
   1082c:	21 e0       	ldi	r18, 0x01	; 1
   1082e:	60 ed       	ldi	r22, 0xD0	; 208
   10830:	7f e0       	ldi	r23, 0x0F	; 15
   10832:	82 e6       	ldi	r24, 0x62	; 98
   10834:	9f e0       	ldi	r25, 0x0F	; 15
   10836:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   1083a:	4e cf       	rjmp	.-356    	; 0x106d8 <_Z11Init_Brokerv+0x1d4>
				loop_count++;
				
				previous = millis();
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{
					if(Subscribed_data_check())
   1083c:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   10840:	88 23       	and	r24, r24
   10842:	59 f2       	breq	.-106    	; 0x107da <_Z11Init_Brokerv+0x2d6>
					{
						if(Seperate_Out_Sub_Data())
   10844:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   10848:	88 23       	and	r24, r24
   1084a:	39 f2       	breq	.-114    	; 0x107da <_Z11Init_Brokerv+0x2d6>
						{
							//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1084c:	f4 01       	movw	r30, r8
   1084e:	01 90       	ld	r0, Z+
   10850:	00 20       	and	r0, r0
   10852:	e9 f7       	brne	.-6      	; 0x1084e <_Z11Init_Brokerv+0x34a>
   10854:	31 97       	sbiw	r30, 0x01	; 1
   10856:	af 01       	movw	r20, r30
   10858:	40 5d       	subi	r20, 0xD0	; 208
   1085a:	5f 40       	sbci	r21, 0x0F	; 15
   1085c:	21 e0       	ldi	r18, 0x01	; 1
   1085e:	60 ed       	ldi	r22, 0xD0	; 208
   10860:	7f e0       	ldi	r23, 0x0F	; 15
   10862:	82 e6       	ldi	r24, 0x62	; 98
   10864:	9f e0       	ldi	r25, 0x0F	; 15
   10866:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   1086a:	b7 cf       	rjmp	.-146    	; 0x107da <_Z11Init_Brokerv+0x2d6>
						}
					}
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
   1086c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10870:	81 30       	cpi	r24, 0x01	; 1
   10872:	09 f0       	breq	.+2      	; 0x10876 <_Z11Init_Brokerv+0x372>
   10874:	76 cf       	rjmp	.-276    	; 0x10762 <_Z11Init_Brokerv+0x25e>
				{
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
   10876:	64 ec       	ldi	r22, 0xC4	; 196
   10878:	78 e2       	ldi	r23, 0x28	; 40
   1087a:	86 ec       	ldi	r24, 0xC6	; 198
   1087c:	94 e1       	ldi	r25, 0x14	; 20
   1087e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
   10882:	60 91 a2 0d 	lds	r22, 0x0DA2	; 0x800da2 <_ZZ11Init_BrokervE10loop_count>
   10886:	70 91 a3 0d 	lds	r23, 0x0DA3	; 0x800da3 <_ZZ11Init_BrokervE10loop_count+0x1>
   1088a:	4a e0       	ldi	r20, 0x0A	; 10
   1088c:	50 e0       	ldi	r21, 0x00	; 0
   1088e:	86 ec       	ldi	r24, 0xC6	; 198
   10890:	94 e1       	ldi	r25, 0x14	; 20
   10892:	0e 94 d8 d5 	call	0x1abb0	; 0x1abb0 <_ZN5Print5printEji>
					_kSERIAL_MON_CLEAR();
   10896:	86 ec       	ldi	r24, 0xC6	; 198
   10898:	94 e1       	ldi	r25, 0x14	; 20
   1089a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1089e:	61 cf       	rjmp	.-318    	; 0x10762 <_Z11Init_Brokerv+0x25e>

	/******************* published the topic that Ruble is Restarted ********************/
	//unsigned char temp[33];
	//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
	
	memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   108a0:	8e e6       	ldi	r24, 0x6E	; 110
   108a2:	e2 e6       	ldi	r30, 0x62	; 98
   108a4:	ff e0       	ldi	r31, 0x0F	; 15
   108a6:	df 01       	movw	r26, r30
   108a8:	1d 92       	st	X+, r1
   108aa:	8a 95       	dec	r24
   108ac:	e9 f7       	brne	.-6      	; 0x108a8 <_Z11Init_Brokerv+0x3a4>
	sprintf((char *)_gRecvd_Data,"{\"sicca_start\": \"true\"}");
   108ae:	69 ea       	ldi	r22, 0xA9	; 169
   108b0:	76 e0       	ldi	r23, 0x06	; 6
   108b2:	cf 01       	movw	r24, r30
   108b4:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
	memset((char *)temp_topic, 0, sizeof(temp_topic));
   108b8:	88 e2       	ldi	r24, 0x28	; 40
   108ba:	f8 01       	movw	r30, r16
   108bc:	11 92       	st	Z+, r1
   108be:	8a 95       	dec	r24
   108c0:	e9 f7       	brne	.-6      	; 0x108bc <_Z11Init_Brokerv+0x3b8>
	
	sprintf((char *)temp_topic,"SICCA/CONTROLLER/RESTART/%s",_sRuble_Parameters.Ruble_ID);
   108c2:	8e ec       	ldi	r24, 0xCE	; 206
   108c4:	93 e1       	ldi	r25, 0x13	; 19
   108c6:	9f 93       	push	r25
   108c8:	8f 93       	push	r24
   108ca:	81 ec       	ldi	r24, 0xC1	; 193
   108cc:	96 e0       	ldi	r25, 0x06	; 6
   108ce:	9f 93       	push	r25
   108d0:	8f 93       	push	r24
   108d2:	1f 93       	push	r17
   108d4:	0f 93       	push	r16
   108d6:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
	
	//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
	
	MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   108da:	62 e6       	ldi	r22, 0x62	; 98
   108dc:	7f e0       	ldi	r23, 0x0F	; 15
   108de:	c8 01       	movw	r24, r16
   108e0:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
	
	_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_DATA;
   108e4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   108e8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   108ec:	84 60       	ori	r24, 0x04	; 4
   108ee:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   108f2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
	
}
   108f6:	0f 90       	pop	r0
   108f8:	0f 90       	pop	r0
   108fa:	0f 90       	pop	r0
   108fc:	0f 90       	pop	r0
   108fe:	0f 90       	pop	r0
   10900:	0f 90       	pop	r0
   10902:	80 e0       	ldi	r24, 0x00	; 0
   10904:	a8 96       	adiw	r28, 0x28	; 40
   10906:	0f b6       	in	r0, 0x3f	; 63
   10908:	f8 94       	cli
   1090a:	de bf       	out	0x3e, r29	; 62
   1090c:	0f be       	out	0x3f, r0	; 63
   1090e:	cd bf       	out	0x3d, r28	; 61
   10910:	df 91       	pop	r29
   10912:	cf 91       	pop	r28
   10914:	1f 91       	pop	r17
   10916:	0f 91       	pop	r16
   10918:	ff 90       	pop	r15
   1091a:	ef 90       	pop	r14
   1091c:	df 90       	pop	r13
   1091e:	cf 90       	pop	r12
   10920:	bf 90       	pop	r11
   10922:	af 90       	pop	r10
   10924:	9f 90       	pop	r9
   10926:	8f 90       	pop	r8
   10928:	7f 90       	pop	r7
   1092a:	6f 90       	pop	r6
   1092c:	5f 90       	pop	r5
   1092e:	4f 90       	pop	r4
   10930:	3f 90       	pop	r3
   10932:	2f 90       	pop	r2
   10934:	08 95       	ret

00010936 <initVariant>:
   10936:	08 95       	ret

00010938 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
   10938:	0e 94 f2 d7 	call	0x1afe4	; 0x1afe4 <init>

	initVariant();
   1093c:	fc df       	rcall	.-8      	; 0x10936 <initVariant>
 
	static uint32_t tickcount;
	static unsigned char timer_count,i;
	i = 0;
	
	Interrupt_Time_Out = 1300;
   1093e:	84 e1       	ldi	r24, 0x14	; 20
   10940:	95 e0       	ldi	r25, 0x05	; 5
   10942:	90 93 e3 0c 	sts	0x0CE3, r25	; 0x800ce3 <Interrupt_Time_Out+0x1>
   10946:	80 93 e2 0c 	sts	0x0CE2, r24	; 0x800ce2 <Interrupt_Time_Out>
	
	Initialise_Hardware();
   1094a:	0e 94 4e 70 	call	0xe09c	; 0xe09c <_Z19Initialise_Hardwarev>
	
	Param_Initialization();
   1094e:	b5 d9       	rcall	.-3222   	; 0xfcba <_Z20Param_Initializationv>
	if(_sRuble_Parameters.SMS_Alert_Start == 0x08)
	{
		//_kSEND_SMS(_sNetwork_and_Usr_Info.User_Sim_No,"RUBLE RESTART");
	}
	
	while (_kSERAIL_AT_CHECK())
   10950:	83 e8       	ldi	r24, 0x83	; 131
   10952:	96 e1       	ldi	r25, 0x16	; 22
   10954:	0e 94 02 d3 	call	0x1a604	; 0x1a604 <_ZN14HardwareSerial9availableEv>
   10958:	89 2b       	or	r24, r25
   1095a:	29 f0       	breq	.+10     	; 0x10966 <main+0x2e>
	{
		_kSERIAL_AT_READ();
   1095c:	83 e8       	ldi	r24, 0x83	; 131
   1095e:	96 e1       	ldi	r25, 0x16	; 22
   10960:	0e 94 23 d3 	call	0x1a646	; 0x1a646 <_ZN14HardwareSerial4readEv>
	if(_sRuble_Parameters.SMS_Alert_Start == 0x08)
	{
		//_kSEND_SMS(_sNetwork_and_Usr_Info.User_Sim_No,"RUBLE RESTART");
	}
	
	while (_kSERAIL_AT_CHECK())
   10964:	f5 cf       	rjmp	.-22     	; 0x10950 <main+0x18>
	{
		_kSERIAL_AT_READ();
	}
	
	Reading_Time = _kSET;
   10966:	c1 e0       	ldi	r28, 0x01	; 1
   10968:	c0 93 e1 0c 	sts	0x0CE1, r28	; 0x800ce1 <Reading_Time>
	Get_Local_Time();
   1096c:	0e 94 99 60 	call	0xc132	; 0xc132 <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   10970:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
	Check_GSM_Signal();
   10974:	0e 94 50 60 	call	0xc0a0	; 0xc0a0 <_Z16Check_GSM_Signalv>
	
	Start_Display_In_Interrupt = 1;
   10978:	c0 93 c2 0c 	sts	0x0CC2, r28	; 0x800cc2 <Start_Display_In_Interrupt>
   _sRuble_Parameters.Display_Refresh = _kSET;
   1097c:	c0 93 6d 14 	sts	0x146D, r28	; 0x80146d <_sRuble_Parameters+0xbf>
   
	//Display_Update_1();    
	tickcount = g_uTick;
   10980:	80 91 d3 0c 	lds	r24, 0x0CD3	; 0x800cd3 <g_uTick>
   10984:	90 91 d4 0c 	lds	r25, 0x0CD4	; 0x800cd4 <g_uTick+0x1>
   10988:	a0 91 d5 0c 	lds	r26, 0x0CD5	; 0x800cd5 <g_uTick+0x2>
   1098c:	b0 91 d6 0c 	lds	r27, 0x0CD6	; 0x800cd6 <g_uTick+0x3>
	_sRuble_Parameters.Line_Fault_Flag = _kRESET;
   10990:	10 92 70 14 	sts	0x1470, r1	; 0x801470 <_sRuble_Parameters+0xc2>
	_sRuble_Parameters.Pump_On_Flag =_ePUMP_OFF;
   10994:	84 e0       	ldi	r24, 0x04	; 4
   10996:	80 93 b6 13 	sts	0x13B6, r24	; 0x8013b6 <_sRuble_Parameters+0x8>
   1099a:	10 92 b7 13 	sts	0x13B7, r1	; 0x8013b7 <_sRuble_Parameters+0x9>
   1099e:	10 92 b8 13 	sts	0x13B8, r1	; 0x8013b8 <_sRuble_Parameters+0xa>
   109a2:	10 92 b9 13 	sts	0x13B9, r1	; 0x8013b9 <_sRuble_Parameters+0xb>
   109a6:	10 92 ba 13 	sts	0x13BA, r1	; 0x8013ba <_sRuble_Parameters+0xc>
   109aa:	10 92 bb 13 	sts	0x13BB, r1	; 0x8013bb <_sRuble_Parameters+0xd>
   109ae:	10 92 bc 13 	sts	0x13BC, r1	; 0x8013bc <_sRuble_Parameters+0xe>
   109b2:	10 92 bd 13 	sts	0x13BD, r1	; 0x8013bd <_sRuble_Parameters+0xf>
	
	Valve_Grouping_Handler(_kFORCEFULYY_OFF);
   109b6:	83 e0       	ldi	r24, 0x03	; 3
   109b8:	0e 94 28 af 	call	0x15e50	; 0x15e50 <_Z22Valve_Grouping_Handlerh>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   109bc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   109c0:	81 30       	cpi	r24, 0x01	; 1
   109c2:	c1 f4       	brne	.+48     	; 0x109f4 <main+0xbc>
	{
		_kSERAIL_MON_WRITE("NOMINAL CURRENT : ");
   109c4:	6c e3       	ldi	r22, 0x3C	; 60
   109c6:	79 e2       	ldi	r23, 0x29	; 41
   109c8:	86 ec       	ldi	r24, 0xC6	; 198
   109ca:	94 e1       	ldi	r25, 0x14	; 20
   109cc:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sPump_Parameter.Pump_Nominal_Current);
   109d0:	40 91 a4 13 	lds	r20, 0x13A4	; 0x8013a4 <_sPump_Parameter>
   109d4:	50 91 a5 13 	lds	r21, 0x13A5	; 0x8013a5 <_sPump_Parameter+0x1>
   109d8:	60 91 a6 13 	lds	r22, 0x13A6	; 0x8013a6 <_sPump_Parameter+0x2>
   109dc:	70 91 a7 13 	lds	r23, 0x13A7	; 0x8013a7 <_sPump_Parameter+0x3>
   109e0:	22 e0       	ldi	r18, 0x02	; 2
   109e2:	30 e0       	ldi	r19, 0x00	; 0
   109e4:	86 ec       	ldi	r24, 0xC6	; 198
   109e6:	94 e1       	ldi	r25, 0x14	; 20
   109e8:	0e 94 22 d7 	call	0x1ae44	; 0x1ae44 <_ZN5Print7printlnEdi>
		_kSERIAL_MON_CLEAR();
   109ec:	86 ec       	ldi	r24, 0xC6	; 198
   109ee:	94 e1       	ldi	r25, 0x14	; 20
   109f0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
   109f4:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   109f8:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sRuble_Parameters.Wireless_Pump_Operate_Timer = _kMAX_TIME_TO_MONITOR_WIRELESS_PUMP;
   109fc:	86 e9       	ldi	r24, 0x96	; 150
   109fe:	90 e0       	ldi	r25, 0x00	; 0
   10a00:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   10a04:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10a08:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   10a0c:	81 30       	cpi	r24, 0x01	; 1
   10a0e:	91 f4       	brne	.+36     	; 0x10a34 <main+0xfc>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
   10a10:	69 e2       	ldi	r22, 0x29	; 41
   10a12:	79 e2       	ldi	r23, 0x29	; 41
   10a14:	86 ec       	ldi	r24, 0xC6	; 198
   10a16:	94 e1       	ldi	r25, 0x14	; 20
   10a18:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
   10a1c:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
   10a20:	4a e0       	ldi	r20, 0x0A	; 10
   10a22:	50 e0       	ldi	r21, 0x00	; 0
   10a24:	86 ec       	ldi	r24, 0xC6	; 198
   10a26:	94 e1       	ldi	r25, 0x14	; 20
   10a28:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
   10a2c:	86 ec       	ldi	r24, 0xC6	; 198
   10a2e:	94 e1       	ldi	r25, 0x14	; 20
   10a30:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
	}
	//Turn_Off_All_Pump_For_Safety();
	
	_sSchedules.Shedule_Run_Status_Is_Triggered  = _kRESET;
   10a34:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sRuble_Parameters.Immediately_Turn_Off_Pump = _kRESET;
   10a38:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
	_sRuble_Parameters.Wireless_Pump_Command     = _kRESET;
   10a3c:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
	_sRuble_Parameters.Electricity_Status        = _kON;
   10a40:	c1 e0       	ldi	r28, 0x01	; 1
   10a42:	c0 93 6a 14 	sts	0x146A, r28	; 0x80146a <_sRuble_Parameters+0xbc>
	
	Select_Operation_Mode();
   10a46:	0e 94 7d c2 	call	0x184fa	; 0x184fa <_Z21Select_Operation_Modev>
	
	//_sRuble_Parameters.By_Pass_CT = _kRESET;
	//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status         = _kRESET;
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10a4a:	10 92 6d 0e 	sts	0x0E6D, r1	; 0x800e6d <_sExtra_Plot+0x85>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status  = _kRESET;
   10a4e:	10 92 54 0e 	sts	0x0E54, r1	; 0x800e54 <_sExtra_Plot+0x6c>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _eSTOP_EXTRA_PLOT_OPERATION;
   10a52:	c0 93 56 0e 	sts	0x0E56, r28	; 0x800e56 <_sExtra_Plot+0x6e>
	
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10a56:	10 92 03 0e 	sts	0x0E03, r1	; 0x800e03 <_sExtra_Plot+0x1b>
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
   10a5a:	85 e0       	ldi	r24, 0x05	; 5
   10a5c:	80 93 05 0e 	sts	0x0E05, r24	; 0x800e05 <_sExtra_Plot+0x1d>
	
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10a60:	10 92 39 0e 	sts	0x0E39, r1	; 0x800e39 <_sExtra_Plot+0x51>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10a64:	10 92 52 0e 	sts	0x0E52, r1	; 0x800e52 <_sExtra_Plot+0x6a>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kRESET;
   10a68:	10 92 3b 0e 	sts	0x0E3B, r1	; 0x800e3b <_sExtra_Plot+0x53>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _kRESET;
   10a6c:	10 92 53 0e 	sts	0x0E53, r1	; 0x800e53 <_sExtra_Plot+0x6b>
	
	
	
	delay(5000);
   10a70:	68 e8       	ldi	r22, 0x88	; 136
   10a72:	73 e1       	ldi	r23, 0x13	; 19
   10a74:	80 e0       	ldi	r24, 0x00	; 0
   10a76:	90 e0       	ldi	r25, 0x00	; 0
   10a78:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
	Reading_Time = _kSET;
   10a7c:	c0 93 e1 0c 	sts	0x0CE1, r28	; 0x800ce1 <Reading_Time>
	Get_Local_Time();
   10a80:	0e 94 99 60 	call	0xc132	; 0xc132 <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   10a84:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
// 	delay(3000);  /* Done so that the Arduino doesn't keep resetting infinitely in case of wrong configuration */
// 	wdt_enable(WDTO_8S);
	//wdt_reset();
	
	unsigned int temp;
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0] !=0 &&
   10a88:	80 91 60 0e 	lds	r24, 0x0E60	; 0x800e60 <_sExtra_Plot+0x78>
   10a8c:	90 91 61 0e 	lds	r25, 0x0E61	; 0x800e61 <_sExtra_Plot+0x79>
   10a90:	00 97       	sbiw	r24, 0x00	; 0
   10a92:	01 f1       	breq	.+64     	; 0x10ad4 <main+0x19c>
   10a94:	20 91 55 0e 	lds	r18, 0x0E55	; 0x800e55 <_sExtra_Plot+0x6d>
   10a98:	29 36       	cpi	r18, 0x69	; 105
   10a9a:	e1 f4       	brne	.+56     	; 0x10ad4 <main+0x19c>
	(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER))
	{
		//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
		temp =  _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Max_Value[0];
		_sSchedules.Flush_Schedule_In_Every = temp *3600;
   10a9c:	60 91 66 0e 	lds	r22, 0x0E66	; 0x800e66 <_sExtra_Plot+0x7e>
   10aa0:	70 91 67 0e 	lds	r23, 0x0E67	; 0x800e67 <_sExtra_Plot+0x7f>
   10aa4:	40 e1       	ldi	r20, 0x10	; 16
   10aa6:	5e e0       	ldi	r21, 0x0E	; 14
   10aa8:	64 9f       	mul	r22, r20
   10aaa:	90 01       	movw	r18, r0
   10aac:	65 9f       	mul	r22, r21
   10aae:	30 0d       	add	r19, r0
   10ab0:	74 9f       	mul	r23, r20
   10ab2:	30 0d       	add	r19, r0
   10ab4:	11 24       	eor	r1, r1
   10ab6:	30 93 e9 0b 	sts	0x0BE9, r19	; 0x800be9 <_sSchedules+0x2cb>
   10aba:	20 93 e8 0b 	sts	0x0BE8, r18	; 0x800be8 <_sSchedules+0x2ca>
		temp = _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0];
		_sSchedules.Flush_Schedule_For = temp * 60;
   10abe:	4c e3       	ldi	r20, 0x3C	; 60
   10ac0:	48 9f       	mul	r20, r24
   10ac2:	90 01       	movw	r18, r0
   10ac4:	49 9f       	mul	r20, r25
   10ac6:	30 0d       	add	r19, r0
   10ac8:	11 24       	eor	r1, r1
   10aca:	30 93 eb 0b 	sts	0x0BEB, r19	; 0x800beb <_sSchedules+0x2cd>
   10ace:	20 93 ea 0b 	sts	0x0BEA, r18	; 0x800bea <_sSchedules+0x2cc>
   10ad2:	08 c0       	rjmp	.+16     	; 0x10ae4 <main+0x1ac>
	}
	else
	{
		_sSchedules.Flush_Schedule_In_Every = 0;
   10ad4:	10 92 e9 0b 	sts	0x0BE9, r1	; 0x800be9 <_sSchedules+0x2cb>
   10ad8:	10 92 e8 0b 	sts	0x0BE8, r1	; 0x800be8 <_sSchedules+0x2ca>
		_sSchedules.Flush_Schedule_For = 0;
   10adc:	10 92 eb 0b 	sts	0x0BEB, r1	; 0x800beb <_sSchedules+0x2cd>
   10ae0:	10 92 ea 0b 	sts	0x0BEA, r1	; 0x800bea <_sSchedules+0x2cc>
	}
	
	_gStart_Wdt = _kSET;
   10ae4:	81 e0       	ldi	r24, 0x01	; 1
   10ae6:	80 93 e8 0c 	sts	0x0CE8, r24	; 0x800ce8 <_gStart_Wdt>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
   10aea:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	
	_gStart_Monitoring_Three_Phase = 0;
   10aee:	10 92 e5 0c 	sts	0x0CE5, r1	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
	_gTimer_For_Three_Phase_Testing = _kRESET;
   10af2:	10 92 e4 0c 	sts	0x0CE4, r1	; 0x800ce4 <_gTimer_For_Three_Phase_Testing>
			Keeps_Monitor_Server_Connection();	
			
			if(timer_count > 80)           /* update in every 1 minute */
			{
				timer_count = 0;
				Reading_Time = _kSET;
   10af6:	11 e0       	ldi	r17, 0x01	; 1
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10af8:	c0 ed       	ldi	r28, 0xD0	; 208
   10afa:	df e0       	ldi	r29, 0x0F	; 15
	_gTimer_For_Three_Phase_Testing = _kRESET;
	
	
	while (1)
	{
		if(_g_1Sec_Time)
   10afc:	80 91 cf 0c 	lds	r24, 0x0CCF	; 0x800ccf <_g_1Sec_Time>
   10b00:	90 91 d0 0c 	lds	r25, 0x0CD0	; 0x800cd0 <_g_1Sec_Time+0x1>
   10b04:	a0 91 d1 0c 	lds	r26, 0x0CD1	; 0x800cd1 <_g_1Sec_Time+0x2>
   10b08:	b0 91 d2 0c 	lds	r27, 0x0CD2	; 0x800cd2 <_g_1Sec_Time+0x3>
   10b0c:	89 2b       	or	r24, r25
   10b0e:	8a 2b       	or	r24, r26
   10b10:	8b 2b       	or	r24, r27
   10b12:	09 f4       	brne	.+2      	; 0x10b16 <main+0x1de>
   10b14:	46 c0       	rjmp	.+140    	; 0x10ba2 <main+0x26a>
		{
			_g_1Sec_Time = _kRESET;
   10b16:	10 92 cf 0c 	sts	0x0CCF, r1	; 0x800ccf <_g_1Sec_Time>
   10b1a:	10 92 d0 0c 	sts	0x0CD0, r1	; 0x800cd0 <_g_1Sec_Time+0x1>
   10b1e:	10 92 d1 0c 	sts	0x0CD1, r1	; 0x800cd1 <_g_1Sec_Time+0x2>
   10b22:	10 92 d2 0c 	sts	0x0CD2, r1	; 0x800cd2 <_g_1Sec_Time+0x3>
			tickcount = g_uTick;
   10b26:	80 91 d3 0c 	lds	r24, 0x0CD3	; 0x800cd3 <g_uTick>
   10b2a:	90 91 d4 0c 	lds	r25, 0x0CD4	; 0x800cd4 <g_uTick+0x1>
   10b2e:	a0 91 d5 0c 	lds	r26, 0x0CD5	; 0x800cd5 <g_uTick+0x2>
   10b32:	b0 91 d6 0c 	lds	r27, 0x0CD6	; 0x800cd6 <g_uTick+0x3>
			timer_count++;
   10b36:	80 91 cf 0d 	lds	r24, 0x0DCF	; 0x800dcf <_ZZ4mainE11timer_count>
   10b3a:	8f 5f       	subi	r24, 0xFF	; 255
   10b3c:	80 93 cf 0d 	sts	0x0DCF, r24	; 0x800dcf <_ZZ4mainE11timer_count>
			
			_gWdt_Counter = 0;
   10b40:	10 92 ea 0c 	sts	0x0CEA, r1	; 0x800cea <_gWdt_Counter+0x1>
   10b44:	10 92 e9 0c 	sts	0x0CE9, r1	; 0x800ce9 <_gWdt_Counter>
			
			Publish_Data();
   10b48:	0e 94 2d a5 	call	0x14a5a	; 0x14a5a <_Z12Publish_Datav>
			//Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_ePUBLSIH_DATA);
			
			Lora_Operation();
   10b4c:	0e 94 8f d0 	call	0x1a11e	; 0x1a11e <_Z14Lora_Operationv>
			
			Run_Extra_Plot_Operation();	
   10b50:	0e 94 4b cb 	call	0x19696	; 0x19696 <_Z24Run_Extra_Plot_Operationv>
			
			Run_Operation();             /* Run the operation as per the selected mode */
   10b54:	0e 94 3c c6 	call	0x18c78	; 0x18c78 <_Z13Run_Operationv>
			
		   /* read strength of GSM signal and update the display update variable */
			
			Display_Update_1();
   10b58:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
			
			Keeps_Monitor_Server_Connection();	
   10b5c:	0e 94 b9 74 	call	0xe972	; 0xe972 <_Z31Keeps_Monitor_Server_Connectionv>
			
			if(timer_count > 80)           /* update in every 1 minute */
   10b60:	80 91 cf 0d 	lds	r24, 0x0DCF	; 0x800dcf <_ZZ4mainE11timer_count>
   10b64:	81 35       	cpi	r24, 0x51	; 81
   10b66:	58 f0       	brcs	.+22     	; 0x10b7e <main+0x246>
			{
				timer_count = 0;
   10b68:	10 92 cf 0d 	sts	0x0DCF, r1	; 0x800dcf <_ZZ4mainE11timer_count>
				Reading_Time = _kSET;
   10b6c:	10 93 e1 0c 	sts	0x0CE1, r17	; 0x800ce1 <Reading_Time>
				Get_Local_Time();
   10b70:	0e 94 99 60 	call	0xc132	; 0xc132 <_Z14Get_Local_Timev>
				Reading_Time = _kRESET;
   10b74:	10 92 e1 0c 	sts	0x0CE1, r1	; 0x800ce1 <Reading_Time>
				Hard_Coded_Flush_Valve(_kON);	
   10b78:	81 e0       	ldi	r24, 0x01	; 1
   10b7a:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
			}
			
			Wireless_Motor_Enable_Disable_Check();  /* changed */
   10b7e:	0e 94 53 24 	call	0x48a6	; 0x48a6 <_Z35Wireless_Motor_Enable_Disable_Checkv>
			
			Handle_Wireless_Pump();
   10b82:	0e 94 04 cc 	call	0x19808	; 0x19808 <_Z20Handle_Wireless_Pumpv>
			
			Plot_Status_List_Monitor();
   10b86:	0e 94 e4 cc 	call	0x199c8	; 0x199c8 <_Z24Plot_Status_List_Monitorv>
			
			Pump_Status_List_Monitor();
   10b8a:	0e 94 87 cc 	call	0x1990e	; 0x1990e <_Z24Pump_Status_List_Monitorv>
			
			Pump_Run_Monitoring();
   10b8e:	0e 94 1d 75 	call	0xea3a	; 0xea3a <_Z19Pump_Run_Monitoringv>
			
			Flush_Controlling();
   10b92:	0e 94 1d 25 	call	0x4a3a	; 0x4a3a <_Z17Flush_Controllingv>
			
//			Debug_Check();
			
			Calibration_Of_Pump();
   10b96:	0e 94 d9 75 	call	0xebb2	; 0xebb2 <_Z19Calibration_Of_Pumpv>
			
			Select_Operation_Mode();
   10b9a:	0e 94 7d c2 	call	0x184fa	; 0x184fa <_Z21Select_Operation_Modev>
			
			Faults_Handler();
   10b9e:	0e 94 b1 77 	call	0xef62	; 0xef62 <_Z14Faults_Handlerv>
			
		}	
		
		if(Subscribed_data_check())
   10ba2:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   10ba6:	88 23       	and	r24, r24
   10ba8:	09 f4       	brne	.+2      	; 0x10bac <main+0x274>
   10baa:	a8 cf       	rjmp	.-176    	; 0x10afc <main+0x1c4>
		{
			if(Seperate_Out_Sub_Data())
   10bac:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   10bb0:	88 23       	and	r24, r24
   10bb2:	09 f4       	brne	.+2      	; 0x10bb6 <main+0x27e>
   10bb4:	a3 cf       	rjmp	.-186    	; 0x10afc <main+0x1c4>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10bb6:	fe 01       	movw	r30, r28
   10bb8:	01 90       	ld	r0, Z+
   10bba:	00 20       	and	r0, r0
   10bbc:	e9 f7       	brne	.-6      	; 0x10bb8 <main+0x280>
   10bbe:	31 97       	sbiw	r30, 0x01	; 1
   10bc0:	af 01       	movw	r20, r30
   10bc2:	40 5d       	subi	r20, 0xD0	; 208
   10bc4:	5f 40       	sbci	r21, 0x0F	; 15
   10bc6:	21 e0       	ldi	r18, 0x01	; 1
   10bc8:	60 ed       	ldi	r22, 0xD0	; 208
   10bca:	7f e0       	ldi	r23, 0x0F	; 15
   10bcc:	82 e6       	ldi	r24, 0x62	; 98
   10bce:	9f e0       	ldi	r25, 0x0F	; 15
   10bd0:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   10bd4:	93 cf       	rjmp	.-218    	; 0x10afc <main+0x1c4>

00010bd6 <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj>:
				/* if all valve gets on */
			
			}
		}
	}
}
   10bd6:	fc 01       	movw	r30, r24
   10bd8:	26 81       	ldd	r18, Z+6	; 0x06
   10bda:	37 81       	ldd	r19, Z+7	; 0x07
   10bdc:	62 0f       	add	r22, r18
   10bde:	73 1f       	adc	r23, r19
   10be0:	84 81       	ldd	r24, Z+4	; 0x04
   10be2:	95 81       	ldd	r25, Z+5	; 0x05
   10be4:	86 17       	cp	r24, r22
   10be6:	97 07       	cpc	r25, r23
   10be8:	38 f0       	brcs	.+14     	; 0x10bf8 <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj+0x22>
   10bea:	82 81       	ldd	r24, Z+2	; 0x02
   10bec:	93 81       	ldd	r25, Z+3	; 0x03
   10bee:	77 83       	std	Z+7, r23	; 0x07
   10bf0:	66 83       	std	Z+6, r22	; 0x06
   10bf2:	82 0f       	add	r24, r18
   10bf4:	93 1f       	adc	r25, r19
   10bf6:	08 95       	ret
   10bf8:	80 e0       	ldi	r24, 0x00	; 0
   10bfa:	90 e0       	ldi	r25, 0x00	; 0
   10bfc:	08 95       	ret

00010bfe <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>:
   10bfe:	77 fd       	sbrc	r23, 7
   10c00:	06 c0       	rjmp	.+12     	; 0x10c0e <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x10>
   10c02:	ab 01       	movw	r20, r22
   10c04:	77 0f       	add	r23, r23
   10c06:	66 0b       	sbc	r22, r22
   10c08:	77 0b       	sbc	r23, r23
   10c0a:	24 e0       	ldi	r18, 0x04	; 4
   10c0c:	09 c0       	rjmp	.+18     	; 0x10c20 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x22>
   10c0e:	44 27       	eor	r20, r20
   10c10:	55 27       	eor	r21, r21
   10c12:	46 1b       	sub	r20, r22
   10c14:	57 0b       	sbc	r21, r23
   10c16:	05 2e       	mov	r0, r21
   10c18:	00 0c       	add	r0, r0
   10c1a:	66 0b       	sbc	r22, r22
   10c1c:	77 0b       	sbc	r23, r23
   10c1e:	25 e0       	ldi	r18, 0x05	; 5
   10c20:	fc 01       	movw	r30, r24
   10c22:	20 83       	st	Z, r18
   10c24:	41 83       	std	Z+1, r20	; 0x01
   10c26:	52 83       	std	Z+2, r21	; 0x02
   10c28:	63 83       	std	Z+3, r22	; 0x03
   10c2a:	74 83       	std	Z+4, r23	; 0x04
   10c2c:	81 e0       	ldi	r24, 0x01	; 1
   10c2e:	08 95       	ret

00010c30 <_ZN5Print5writeEPKc>:
   10c30:	61 15       	cp	r22, r1
   10c32:	71 05       	cpc	r23, r1
   10c34:	79 f0       	breq	.+30     	; 0x10c54 <_ZN5Print5writeEPKc+0x24>
   10c36:	fb 01       	movw	r30, r22
   10c38:	01 90       	ld	r0, Z+
   10c3a:	00 20       	and	r0, r0
   10c3c:	e9 f7       	brne	.-6      	; 0x10c38 <_ZN5Print5writeEPKc+0x8>
   10c3e:	31 97       	sbiw	r30, 0x01	; 1
   10c40:	af 01       	movw	r20, r30
   10c42:	46 1b       	sub	r20, r22
   10c44:	57 0b       	sbc	r21, r23
   10c46:	dc 01       	movw	r26, r24
   10c48:	ed 91       	ld	r30, X+
   10c4a:	fc 91       	ld	r31, X
   10c4c:	02 80       	ldd	r0, Z+2	; 0x02
   10c4e:	f3 81       	ldd	r31, Z+3	; 0x03
   10c50:	e0 2d       	mov	r30, r0
   10c52:	19 94       	eijmp
   10c54:	80 e0       	ldi	r24, 0x00	; 0
   10c56:	90 e0       	ldi	r25, 0x00	; 0
   10c58:	08 95       	ret

00010c5a <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>:
   10c5a:	db 01       	movw	r26, r22
   10c5c:	10 97       	sbiw	r26, 0x00	; 0
   10c5e:	49 f0       	breq	.+18     	; 0x10c72 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE+0x18>
   10c60:	ed 91       	ld	r30, X+
   10c62:	fc 91       	ld	r31, X
   10c64:	11 97       	sbiw	r26, 0x01	; 1
   10c66:	01 90       	ld	r0, Z+
   10c68:	f0 81       	ld	r31, Z
   10c6a:	e0 2d       	mov	r30, r0
   10c6c:	bc 01       	movw	r22, r24
   10c6e:	cd 01       	movw	r24, r26
   10c70:	19 94       	eijmp
   10c72:	80 e0       	ldi	r24, 0x00	; 0
   10c74:	90 e0       	ldi	r25, 0x00	; 0
   10c76:	08 95       	ret

00010c78 <_ZN11ArduinoJson9JsonArray7invalidEv>:
   10c78:	80 91 ba 14 	lds	r24, 0x14BA	; 0x8014ba <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10c7c:	81 11       	cpse	r24, r1
   10c7e:	0b c0       	rjmp	.+22     	; 0x10c96 <_ZN11ArduinoJson9JsonArray7invalidEv+0x1e>
   10c80:	10 92 c3 14 	sts	0x14C3, r1	; 0x8014c3 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x1>
   10c84:	10 92 c2 14 	sts	0x14C2, r1	; 0x8014c2 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10c88:	10 92 c5 14 	sts	0x14C5, r1	; 0x8014c5 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x3>
   10c8c:	10 92 c4 14 	sts	0x14C4, r1	; 0x8014c4 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x2>
   10c90:	81 e0       	ldi	r24, 0x01	; 1
   10c92:	80 93 ba 14 	sts	0x14BA, r24	; 0x8014ba <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10c96:	82 ec       	ldi	r24, 0xC2	; 194
   10c98:	94 e1       	ldi	r25, 0x14	; 20
   10c9a:	08 95       	ret

00010c9c <_ZN11ArduinoJson10JsonObject7invalidEv>:
   10c9c:	80 91 ae 14 	lds	r24, 0x14AE	; 0x8014ae <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10ca0:	81 11       	cpse	r24, r1
   10ca2:	0b c0       	rjmp	.+22     	; 0x10cba <_ZN11ArduinoJson10JsonObject7invalidEv+0x1e>
   10ca4:	10 92 b7 14 	sts	0x14B7, r1	; 0x8014b7 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x1>
   10ca8:	10 92 b6 14 	sts	0x14B6, r1	; 0x8014b6 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10cac:	10 92 b9 14 	sts	0x14B9, r1	; 0x8014b9 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x3>
   10cb0:	10 92 b8 14 	sts	0x14B8, r1	; 0x8014b8 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x2>
   10cb4:	81 e0       	ldi	r24, 0x01	; 1
   10cb6:	80 93 ae 14 	sts	0x14AE, r24	; 0x8014ae <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10cba:	86 eb       	ldi	r24, 0xB6	; 182
   10cbc:	94 e1       	ldi	r25, 0x14	; 20
   10cbe:	08 95       	ret

00010cc0 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>:
   10cc0:	cf 93       	push	r28
   10cc2:	df 93       	push	r29
   10cc4:	ec 01       	movw	r28, r24
   10cc6:	bc 01       	movw	r22, r24
   10cc8:	84 e0       	ldi	r24, 0x04	; 4
   10cca:	90 e0       	ldi	r25, 0x00	; 0
   10ccc:	c6 df       	rcall	.-116    	; 0x10c5a <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   10cce:	00 97       	sbiw	r24, 0x00	; 0
   10cd0:	41 f0       	breq	.+16     	; 0x10ce2 <_ZN11ArduinoJson10JsonBuffer12createObjectEv+0x22>
   10cd2:	fc 01       	movw	r30, r24
   10cd4:	d1 83       	std	Z+1, r29	; 0x01
   10cd6:	c0 83       	st	Z, r28
   10cd8:	13 82       	std	Z+3, r1	; 0x03
   10cda:	12 82       	std	Z+2, r1	; 0x02
   10cdc:	df 91       	pop	r29
   10cde:	cf 91       	pop	r28
   10ce0:	08 95       	ret
   10ce2:	df 91       	pop	r29
   10ce4:	cf 91       	pop	r28
   10ce6:	da cf       	rjmp	.-76     	; 0x10c9c <_ZN11ArduinoJson10JsonObject7invalidEv>

00010ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
   10ce8:	0f 93       	push	r16
   10cea:	1f 93       	push	r17
   10cec:	cf 93       	push	r28
   10cee:	df 93       	push	r29
   10cf0:	1f 92       	push	r1
   10cf2:	1f 92       	push	r1
   10cf4:	cd b7       	in	r28, 0x3d	; 61
   10cf6:	de b7       	in	r29, 0x3e	; 62
   10cf8:	8b 01       	movw	r16, r22
   10cfa:	fb 01       	movw	r30, r22
   10cfc:	60 81       	ld	r22, Z
   10cfe:	9a 83       	std	Y+2, r25	; 0x02
   10d00:	89 83       	std	Y+1, r24	; 0x01
   10d02:	ce 01       	movw	r24, r28
   10d04:	01 96       	adiw	r24, 0x01	; 1
   10d06:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10d0a:	c8 01       	movw	r24, r16
   10d0c:	0f 90       	pop	r0
   10d0e:	0f 90       	pop	r0
   10d10:	df 91       	pop	r29
   10d12:	cf 91       	pop	r28
   10d14:	1f 91       	pop	r17
   10d16:	0f 91       	pop	r16
   10d18:	08 95       	ret

00010d1a <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>:
   10d1a:	af 92       	push	r10
   10d1c:	bf 92       	push	r11
   10d1e:	cf 92       	push	r12
   10d20:	df 92       	push	r13
   10d22:	ef 92       	push	r14
   10d24:	ff 92       	push	r15
   10d26:	0f 93       	push	r16
   10d28:	1f 93       	push	r17
   10d2a:	cf 93       	push	r28
   10d2c:	df 93       	push	r29
   10d2e:	1f 92       	push	r1
   10d30:	1f 92       	push	r1
   10d32:	cd b7       	in	r28, 0x3d	; 61
   10d34:	de b7       	in	r29, 0x3e	; 62
   10d36:	8b 01       	movw	r16, r22
   10d38:	6b 01       	movw	r12, r22
   10d3a:	2b e0       	ldi	r18, 0x0B	; 11
   10d3c:	c2 0e       	add	r12, r18
   10d3e:	d1 1c       	adc	r13, r1
   10d40:	7b 01       	movw	r14, r22
   10d42:	5c 01       	movw	r10, r24
   10d44:	a6 1a       	sub	r10, r22
   10d46:	b7 0a       	sbc	r11, r23
   10d48:	c5 01       	movw	r24, r10
   10d4a:	8e 0d       	add	r24, r14
   10d4c:	9f 1d       	adc	r25, r15
   10d4e:	f7 01       	movw	r30, r14
   10d50:	61 91       	ld	r22, Z+
   10d52:	7f 01       	movw	r14, r30
   10d54:	9a 83       	std	Y+2, r25	; 0x02
   10d56:	89 83       	std	Y+1, r24	; 0x01
   10d58:	ce 01       	movw	r24, r28
   10d5a:	01 96       	adiw	r24, 0x01	; 1
   10d5c:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10d60:	ec 14       	cp	r14, r12
   10d62:	fd 04       	cpc	r15, r13
   10d64:	89 f7       	brne	.-30     	; 0x10d48 <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8+0x2e>
   10d66:	c8 01       	movw	r24, r16
   10d68:	0f 90       	pop	r0
   10d6a:	0f 90       	pop	r0
   10d6c:	df 91       	pop	r29
   10d6e:	cf 91       	pop	r28
   10d70:	1f 91       	pop	r17
   10d72:	0f 91       	pop	r16
   10d74:	ff 90       	pop	r15
   10d76:	ef 90       	pop	r14
   10d78:	df 90       	pop	r13
   10d7a:	cf 90       	pop	r12
   10d7c:	bf 90       	pop	r11
   10d7e:	af 90       	pop	r10
   10d80:	08 95       	ret

00010d82 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>:
   10d82:	ef 92       	push	r14
   10d84:	ff 92       	push	r15
   10d86:	0f 93       	push	r16
   10d88:	1f 93       	push	r17
   10d8a:	cf 93       	push	r28
   10d8c:	df 93       	push	r29
   10d8e:	1f 92       	push	r1
   10d90:	1f 92       	push	r1
   10d92:	cd b7       	in	r28, 0x3d	; 61
   10d94:	de b7       	in	r29, 0x3e	; 62
   10d96:	8c 01       	movw	r16, r24
   10d98:	8e ea       	ldi	r24, 0xAE	; 174
   10d9a:	e8 2e       	mov	r14, r24
   10d9c:	83 e1       	ldi	r24, 0x13	; 19
   10d9e:	f8 2e       	mov	r15, r24
   10da0:	f7 01       	movw	r30, r14
   10da2:	66 89       	ldd	r22, Z+22	; 0x16
   10da4:	1a 83       	std	Y+2, r17	; 0x02
   10da6:	09 83       	std	Y+1, r16	; 0x01
   10da8:	ce 01       	movw	r24, r28
   10daa:	01 96       	adiw	r24, 0x01	; 1
   10dac:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10db0:	f7 01       	movw	r30, r14
   10db2:	67 89       	ldd	r22, Z+23	; 0x17
   10db4:	0f 5f       	subi	r16, 0xFF	; 255
   10db6:	1f 4f       	sbci	r17, 0xFF	; 255
   10db8:	1a 83       	std	Y+2, r17	; 0x02
   10dba:	09 83       	std	Y+1, r16	; 0x01
   10dbc:	ce 01       	movw	r24, r28
   10dbe:	01 96       	adiw	r24, 0x01	; 1
   10dc0:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10dc4:	84 ec       	ldi	r24, 0xC4	; 196
   10dc6:	93 e1       	ldi	r25, 0x13	; 19
   10dc8:	0f 90       	pop	r0
   10dca:	0f 90       	pop	r0
   10dcc:	df 91       	pop	r29
   10dce:	cf 91       	pop	r28
   10dd0:	1f 91       	pop	r17
   10dd2:	0f 91       	pop	r16
   10dd4:	ff 90       	pop	r15
   10dd6:	ef 90       	pop	r14
   10dd8:	08 95       	ret

00010dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>:
   10dda:	ef 92       	push	r14
   10ddc:	ff 92       	push	r15
   10dde:	0f 93       	push	r16
   10de0:	1f 93       	push	r17
   10de2:	cf 93       	push	r28
   10de4:	df 93       	push	r29
   10de6:	1f 92       	push	r1
   10de8:	1f 92       	push	r1
   10dea:	cd b7       	in	r28, 0x3d	; 61
   10dec:	de b7       	in	r29, 0x3e	; 62
   10dee:	83 e9       	ldi	r24, 0x93	; 147
   10df0:	e8 2e       	mov	r14, r24
   10df2:	84 e1       	ldi	r24, 0x14	; 20
   10df4:	f8 2e       	mov	r15, r24
   10df6:	08 e8       	ldi	r16, 0x88	; 136
   10df8:	1e e0       	ldi	r17, 0x0E	; 14
   10dfa:	f7 01       	movw	r30, r14
   10dfc:	61 91       	ld	r22, Z+
   10dfe:	7f 01       	movw	r14, r30
   10e00:	1a 83       	std	Y+2, r17	; 0x02
   10e02:	09 83       	std	Y+1, r16	; 0x01
   10e04:	ce 01       	movw	r24, r28
   10e06:	01 96       	adiw	r24, 0x01	; 1
   10e08:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10e0c:	0f 5f       	subi	r16, 0xFF	; 255
   10e0e:	1f 4f       	sbci	r17, 0xFF	; 255
   10e10:	0d 38       	cpi	r16, 0x8D	; 141
   10e12:	fe e0       	ldi	r31, 0x0E	; 14
   10e14:	1f 07       	cpc	r17, r31
   10e16:	89 f7       	brne	.-30     	; 0x10dfa <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40+0x20>
   10e18:	83 e9       	ldi	r24, 0x93	; 147
   10e1a:	94 e1       	ldi	r25, 0x14	; 20
   10e1c:	0f 90       	pop	r0
   10e1e:	0f 90       	pop	r0
   10e20:	df 91       	pop	r29
   10e22:	cf 91       	pop	r28
   10e24:	1f 91       	pop	r17
   10e26:	0f 91       	pop	r16
   10e28:	ff 90       	pop	r15
   10e2a:	ef 90       	pop	r14
   10e2c:	08 95       	ret

00010e2e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>:
   10e2e:	ef 92       	push	r14
   10e30:	ff 92       	push	r15
   10e32:	0f 93       	push	r16
   10e34:	1f 93       	push	r17
   10e36:	cf 93       	push	r28
   10e38:	df 93       	push	r29
   10e3a:	1f 92       	push	r1
   10e3c:	1f 92       	push	r1
   10e3e:	cd b7       	in	r28, 0x3d	; 61
   10e40:	de b7       	in	r29, 0x3e	; 62
   10e42:	8e e1       	ldi	r24, 0x1E	; 30
   10e44:	e8 2e       	mov	r14, r24
   10e46:	89 e0       	ldi	r24, 0x09	; 9
   10e48:	f8 2e       	mov	r15, r24
   10e4a:	0a e1       	ldi	r16, 0x1A	; 26
   10e4c:	15 e0       	ldi	r17, 0x05	; 5
   10e4e:	f7 01       	movw	r30, r14
   10e50:	61 91       	ld	r22, Z+
   10e52:	7f 01       	movw	r14, r30
   10e54:	1a 83       	std	Y+2, r17	; 0x02
   10e56:	09 83       	std	Y+1, r16	; 0x01
   10e58:	ce 01       	movw	r24, r28
   10e5a:	01 96       	adiw	r24, 0x01	; 1
   10e5c:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   10e60:	0f 5f       	subi	r16, 0xFF	; 255
   10e62:	1f 4f       	sbci	r17, 0xFF	; 255
   10e64:	00 3f       	cpi	r16, 0xF0	; 240
   10e66:	f7 e0       	ldi	r31, 0x07	; 7
   10e68:	1f 07       	cpc	r17, r31
   10e6a:	89 f7       	brne	.-30     	; 0x10e4e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42+0x20>
   10e6c:	8e e1       	ldi	r24, 0x1E	; 30
   10e6e:	99 e0       	ldi	r25, 0x09	; 9
   10e70:	0f 90       	pop	r0
   10e72:	0f 90       	pop	r0
   10e74:	df 91       	pop	r29
   10e76:	cf 91       	pop	r28
   10e78:	1f 91       	pop	r17
   10e7a:	0f 91       	pop	r16
   10e7c:	ff 90       	pop	r15
   10e7e:	ef 90       	pop	r14
   10e80:	08 95       	ret

00010e82 <_Z18Read_Switch_Statusv>:
   10e82:	61 e0       	ldi	r22, 0x01	; 1
   10e84:	84 e2       	ldi	r24, 0x24	; 36
   10e86:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   10e8a:	86 e2       	ldi	r24, 0x26	; 38
   10e8c:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   10e90:	30 91 e7 0d 	lds	r19, 0x0DE7	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10e94:	33 23       	and	r19, r19
   10e96:	b9 f0       	breq	.+46     	; 0x10ec6 <_Z18Read_Switch_Statusv+0x44>
   10e98:	90 91 e6 0d 	lds	r25, 0x0DE6	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10e9c:	94 30       	cpi	r25, 0x04	; 4
   10e9e:	30 f0       	brcs	.+12     	; 0x10eac <_Z18Read_Switch_Statusv+0x2a>
   10ea0:	31 30       	cpi	r19, 0x01	; 1
   10ea2:	61 f4       	brne	.+24     	; 0x10ebc <_Z18Read_Switch_Statusv+0x3a>
   10ea4:	82 e0       	ldi	r24, 0x02	; 2
   10ea6:	80 93 d8 13 	sts	0x13D8, r24	; 0x8013d8 <_sRuble_Parameters+0x2a>
   10eaa:	08 c0       	rjmp	.+16     	; 0x10ebc <_Z18Read_Switch_Statusv+0x3a>
   10eac:	21 e0       	ldi	r18, 0x01	; 1
   10eae:	82 27       	eor	r24, r18
   10eb0:	38 13       	cpse	r19, r24
   10eb2:	04 c0       	rjmp	.+8      	; 0x10ebc <_Z18Read_Switch_Statusv+0x3a>
   10eb4:	9f 5f       	subi	r25, 0xFF	; 255
   10eb6:	90 93 e6 0d 	sts	0x0DE6, r25	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10eba:	08 95       	ret
   10ebc:	10 92 e6 0d 	sts	0x0DE6, r1	; 0x800de6 <_ZZ18Read_Switch_StatusvE10time_count>
   10ec0:	10 92 e7 0d 	sts	0x0DE7, r1	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10ec4:	08 95       	ret
   10ec6:	91 e0       	ldi	r25, 0x01	; 1
   10ec8:	89 27       	eor	r24, r25
   10eca:	80 93 e7 0d 	sts	0x0DE7, r24	; 0x800de7 <_ZZ18Read_Switch_StatusvE9key_press>
   10ece:	81 11       	cpse	r24, r1
   10ed0:	0c c0       	rjmp	.+24     	; 0x10eea <_Z18Read_Switch_Statusv+0x68>
   10ed2:	80 91 e5 0d 	lds	r24, 0x0DE5	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10ed6:	84 30       	cpi	r24, 0x04	; 4
   10ed8:	28 f0       	brcs	.+10     	; 0x10ee4 <_Z18Read_Switch_Statusv+0x62>
   10eda:	10 92 e5 0d 	sts	0x0DE5, r1	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10ede:	90 93 d8 13 	sts	0x13D8, r25	; 0x8013d8 <_sRuble_Parameters+0x2a>
   10ee2:	08 95       	ret
   10ee4:	8f 5f       	subi	r24, 0xFF	; 255
   10ee6:	80 93 e5 0d 	sts	0x0DE5, r24	; 0x800de5 <_ZZ18Read_Switch_StatusvE11time_count2>
   10eea:	08 95       	ret

00010eec <_Z16Dummy_Data_Storev>:
   10eec:	8f 92       	push	r8
   10eee:	9f 92       	push	r9
   10ef0:	af 92       	push	r10
   10ef2:	bf 92       	push	r11
   10ef4:	cf 92       	push	r12
   10ef6:	df 92       	push	r13
   10ef8:	ef 92       	push	r14
   10efa:	ff 92       	push	r15
   10efc:	0f 93       	push	r16
   10efe:	1f 93       	push	r17
   10f00:	cf 93       	push	r28
   10f02:	df 93       	push	r29
   10f04:	1f 92       	push	r1
   10f06:	1f 92       	push	r1
   10f08:	cd b7       	in	r28, 0x3d	; 61
   10f0a:	de b7       	in	r29, 0x3e	; 62
   10f0c:	fe e4       	ldi	r31, 0x4E	; 78
   10f0e:	ef 2e       	mov	r14, r31
   10f10:	fd e0       	ldi	r31, 0x0D	; 13
   10f12:	ff 2e       	mov	r15, r31
   10f14:	10 e0       	ldi	r17, 0x00	; 0
   10f16:	f7 01       	movw	r30, r14
   10f18:	10 82       	st	Z, r1
   10f1a:	81 2f       	mov	r24, r17
   10f1c:	05 d8       	rcall	.-4086   	; 0xff28 <_Z16Lira_Data_EEPROMh>
   10f1e:	f6 e0       	ldi	r31, 0x06	; 6
   10f20:	ef 0e       	add	r14, r31
   10f22:	f1 1c       	adc	r15, r1
   10f24:	1f 5f       	subi	r17, 0xFF	; 255
   10f26:	1e 30       	cpi	r17, 0x0E	; 14
   10f28:	b1 f7       	brne	.-20     	; 0x10f16 <_Z16Dummy_Data_Storev+0x2a>
   10f2a:	e5 e1       	ldi	r30, 0x15	; 21
   10f2c:	ee 2e       	mov	r14, r30
   10f2e:	ec e0       	ldi	r30, 0x0C	; 12
   10f30:	fe 2e       	mov	r15, r30
   10f32:	10 e0       	ldi	r17, 0x00	; 0
   10f34:	f7 01       	movw	r30, r14
   10f36:	10 82       	st	Z, r1
   10f38:	81 2f       	mov	r24, r17
   10f3a:	0e 94 61 5c 	call	0xb8c2	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
   10f3e:	fd e0       	ldi	r31, 0x0D	; 13
   10f40:	ef 0e       	add	r14, r31
   10f42:	f1 1c       	adc	r15, r1
   10f44:	1f 5f       	subi	r17, 0xFF	; 255
   10f46:	16 30       	cpi	r17, 0x06	; 6
   10f48:	a9 f7       	brne	.-22     	; 0x10f34 <_Z16Dummy_Data_Storev+0x48>
   10f4a:	69 eb       	ldi	r22, 0xB9	; 185
   10f4c:	7d e0       	ldi	r23, 0x0D	; 13
   10f4e:	8a ed       	ldi	r24, 0xDA	; 218
   10f50:	94 e0       	ldi	r25, 0x04	; 4
   10f52:	e3 de       	rcall	.-570    	; 0x10d1a <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10f54:	64 ec       	ldi	r22, 0xC4	; 196
   10f56:	7d e0       	ldi	r23, 0x0D	; 13
   10f58:	87 ee       	ldi	r24, 0xE7	; 231
   10f5a:	94 e0       	ldi	r25, 0x04	; 4
   10f5c:	de de       	rcall	.-580    	; 0x10d1a <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10f5e:	89 e0       	ldi	r24, 0x09	; 9
   10f60:	80 93 69 14 	sts	0x1469, r24	; 0x801469 <_sRuble_Parameters+0xbb>
   10f64:	69 e6       	ldi	r22, 0x69	; 105
   10f66:	74 e1       	ldi	r23, 0x14	; 20
   10f68:	88 e1       	ldi	r24, 0x18	; 24
   10f6a:	95 e0       	ldi	r25, 0x05	; 5
   10f6c:	bd de       	rcall	.-646    	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10f6e:	82 e0       	ldi	r24, 0x02	; 2
   10f70:	80 93 71 14 	sts	0x1471, r24	; 0x801471 <_sRuble_Parameters+0xc3>
   10f74:	61 e7       	ldi	r22, 0x71	; 113
   10f76:	74 e1       	ldi	r23, 0x14	; 20
   10f78:	89 e1       	ldi	r24, 0x19	; 25
   10f7a:	95 e0       	ldi	r25, 0x05	; 5
   10f7c:	b5 de       	rcall	.-662    	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10f7e:	10 92 1e 09 	sts	0x091E, r1	; 0x80091e <_sSchedules>
   10f82:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
   10f86:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <_sSchedules+0x2>
   10f8a:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   10f8e:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
   10f92:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   10f96:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <_sSchedules+0x7>
   10f9a:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
   10f9e:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
   10fa2:	81 e0       	ldi	r24, 0x01	; 1
   10fa4:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
   10fa8:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
   10fac:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
   10fb0:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
   10fb4:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
   10fb8:	41 e0       	ldi	r20, 0x01	; 1
   10fba:	50 e0       	ldi	r21, 0x00	; 0
   10fbc:	60 e0       	ldi	r22, 0x00	; 0
   10fbe:	70 e0       	ldi	r23, 0x00	; 0
   10fc0:	40 93 31 09 	sts	0x0931, r20	; 0x800931 <_sSchedules+0x13>
   10fc4:	50 93 32 09 	sts	0x0932, r21	; 0x800932 <_sSchedules+0x14>
   10fc8:	60 93 33 09 	sts	0x0933, r22	; 0x800933 <_sSchedules+0x15>
   10fcc:	70 93 34 09 	sts	0x0934, r23	; 0x800934 <_sSchedules+0x16>
   10fd0:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
   10fd4:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
   10fd8:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
   10fdc:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
   10fe0:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   10fe4:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <_sSchedules+0x1c>
   10fe8:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <_sSchedules+0x1d>
   10fec:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
   10ff0:	80 e0       	ldi	r24, 0x00	; 0
   10ff2:	90 e0       	ldi	r25, 0x00	; 0
   10ff4:	fc 01       	movw	r30, r24
   10ff6:	ee 0f       	add	r30, r30
   10ff8:	ff 1f       	adc	r31, r31
   10ffa:	e2 5e       	subi	r30, 0xE2	; 226
   10ffc:	f6 4f       	sbci	r31, 0xF6	; 246
   10ffe:	10 a2       	std	Z+32, r1	; 0x20
   11000:	17 8e       	std	Z+31, r1	; 0x1f
   11002:	01 96       	adiw	r24, 0x01	; 1
   11004:	8f 30       	cpi	r24, 0x0F	; 15
   11006:	91 05       	cpc	r25, r1
   11008:	a9 f7       	brne	.-22     	; 0x10ff4 <_Z16Dummy_Data_Storev+0x108>
   1100a:	80 e0       	ldi	r24, 0x00	; 0
   1100c:	90 e0       	ldi	r25, 0x00	; 0
   1100e:	fc 01       	movw	r30, r24
   11010:	e2 5e       	subi	r30, 0xE2	; 226
   11012:	f6 4f       	sbci	r31, 0xF6	; 246
   11014:	15 ae       	std	Z+61, r1	; 0x3d
   11016:	01 96       	adiw	r24, 0x01	; 1
   11018:	8f 30       	cpi	r24, 0x0F	; 15
   1101a:	91 05       	cpc	r25, r1
   1101c:	c1 f7       	brne	.-16     	; 0x1100e <_Z16Dummy_Data_Storev+0x122>
   1101e:	80 e0       	ldi	r24, 0x00	; 0
   11020:	90 e0       	ldi	r25, 0x00	; 0
   11022:	fc 01       	movw	r30, r24
   11024:	e6 59       	subi	r30, 0x96	; 150
   11026:	f6 4f       	sbci	r31, 0xF6	; 246
   11028:	10 82       	st	Z, r1
   1102a:	01 96       	adiw	r24, 0x01	; 1
   1102c:	8f 30       	cpi	r24, 0x0F	; 15
   1102e:	91 05       	cpc	r25, r1
   11030:	c1 f7       	brne	.-16     	; 0x11022 <_Z16Dummy_Data_Storev+0x136>
   11032:	80 e0       	ldi	r24, 0x00	; 0
   11034:	90 e0       	ldi	r25, 0x00	; 0
   11036:	9c 01       	movw	r18, r24
   11038:	22 5e       	subi	r18, 0xE2	; 226
   1103a:	36 4f       	sbci	r19, 0xF6	; 246
   1103c:	f9 01       	movw	r30, r18
   1103e:	e5 5a       	subi	r30, 0xA5	; 165
   11040:	ff 4f       	sbci	r31, 0xFF	; 255
   11042:	10 82       	st	Z, r1
   11044:	3f 96       	adiw	r30, 0x0f	; 15
   11046:	10 82       	st	Z, r1
   11048:	01 96       	adiw	r24, 0x01	; 1
   1104a:	8f 30       	cpi	r24, 0x0F	; 15
   1104c:	91 05       	cpc	r25, r1
   1104e:	99 f7       	brne	.-26     	; 0x11036 <_Z16Dummy_Data_Storev+0x14a>
   11050:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   11054:	80 e0       	ldi	r24, 0x00	; 0
   11056:	90 e0       	ldi	r25, 0x00	; 0
   11058:	fc 01       	movw	r30, r24
   1105a:	e8 56       	subi	r30, 0x68	; 104
   1105c:	f6 4f       	sbci	r31, 0xF6	; 246
   1105e:	10 82       	st	Z, r1
   11060:	01 96       	adiw	r24, 0x01	; 1
   11062:	8b 32       	cpi	r24, 0x2B	; 43
   11064:	91 05       	cpc	r25, r1
   11066:	c1 f7       	brne	.-16     	; 0x11058 <_Z16Dummy_Data_Storev+0x16c>
   11068:	80 e0       	ldi	r24, 0x00	; 0
   1106a:	90 e0       	ldi	r25, 0x00	; 0
   1106c:	fc 01       	movw	r30, r24
   1106e:	e8 56       	subi	r30, 0x68	; 104
   11070:	f6 4f       	sbci	r31, 0xF6	; 246
   11072:	10 82       	st	Z, r1
   11074:	01 96       	adiw	r24, 0x01	; 1
   11076:	8b 32       	cpi	r24, 0x2B	; 43
   11078:	91 05       	cpc	r25, r1
   1107a:	c1 f7       	brne	.-16     	; 0x1106c <_Z16Dummy_Data_Storev+0x180>
   1107c:	80 e0       	ldi	r24, 0x00	; 0
   1107e:	90 e0       	ldi	r25, 0x00	; 0
   11080:	fc 01       	movw	r30, r24
   11082:	ee 0f       	add	r30, r30
   11084:	ff 1f       	adc	r31, r31
   11086:	ed 53       	subi	r30, 0x3D	; 61
   11088:	f6 4f       	sbci	r31, 0xF6	; 246
   1108a:	11 82       	std	Z+1, r1	; 0x01
   1108c:	10 82       	st	Z, r1
   1108e:	01 96       	adiw	r24, 0x01	; 1
   11090:	8b 32       	cpi	r24, 0x2B	; 43
   11092:	91 05       	cpc	r25, r1
   11094:	a9 f7       	brne	.-22     	; 0x11080 <_Z16Dummy_Data_Storev+0x194>
   11096:	80 e0       	ldi	r24, 0x00	; 0
   11098:	90 e0       	ldi	r25, 0x00	; 0
   1109a:	fc 01       	movw	r30, r24
   1109c:	ee 0f       	add	r30, r30
   1109e:	ff 1f       	adc	r31, r31
   110a0:	e7 5e       	subi	r30, 0xE7	; 231
   110a2:	f5 4f       	sbci	r31, 0xF5	; 245
   110a4:	11 82       	std	Z+1, r1	; 0x01
   110a6:	10 82       	st	Z, r1
   110a8:	01 96       	adiw	r24, 0x01	; 1
   110aa:	8b 32       	cpi	r24, 0x2B	; 43
   110ac:	91 05       	cpc	r25, r1
   110ae:	a9 f7       	brne	.-22     	; 0x1109a <_Z16Dummy_Data_Storev+0x1ae>
   110b0:	80 e0       	ldi	r24, 0x00	; 0
   110b2:	90 e0       	ldi	r25, 0x00	; 0
   110b4:	fc 01       	movw	r30, r24
   110b6:	e1 59       	subi	r30, 0x91	; 145
   110b8:	f5 4f       	sbci	r31, 0xF5	; 245
   110ba:	10 82       	st	Z, r1
   110bc:	01 96       	adiw	r24, 0x01	; 1
   110be:	8b 32       	cpi	r24, 0x2B	; 43
   110c0:	91 05       	cpc	r25, r1
   110c2:	c1 f7       	brne	.-16     	; 0x110b4 <_Z16Dummy_Data_Storev+0x1c8>
   110c4:	80 e0       	ldi	r24, 0x00	; 0
   110c6:	90 e0       	ldi	r25, 0x00	; 0
   110c8:	fc 01       	movw	r30, r24
   110ca:	ee 0f       	add	r30, r30
   110cc:	ff 1f       	adc	r31, r31
   110ce:	eb 53       	subi	r30, 0x3B	; 59
   110d0:	f5 4f       	sbci	r31, 0xF5	; 245
   110d2:	11 82       	std	Z+1, r1	; 0x01
   110d4:	10 82       	st	Z, r1
   110d6:	01 96       	adiw	r24, 0x01	; 1
   110d8:	8b 32       	cpi	r24, 0x2B	; 43
   110da:	91 05       	cpc	r25, r1
   110dc:	a9 f7       	brne	.-22     	; 0x110c8 <_Z16Dummy_Data_Storev+0x1dc>
   110de:	80 e0       	ldi	r24, 0x00	; 0
   110e0:	90 e0       	ldi	r25, 0x00	; 0
   110e2:	fc 01       	movw	r30, r24
   110e4:	ee 0f       	add	r30, r30
   110e6:	ff 1f       	adc	r31, r31
   110e8:	e5 5e       	subi	r30, 0xE5	; 229
   110ea:	f4 4f       	sbci	r31, 0xF4	; 244
   110ec:	11 82       	std	Z+1, r1	; 0x01
   110ee:	10 82       	st	Z, r1
   110f0:	01 96       	adiw	r24, 0x01	; 1
   110f2:	8b 32       	cpi	r24, 0x2B	; 43
   110f4:	91 05       	cpc	r25, r1
   110f6:	a9 f7       	brne	.-22     	; 0x110e2 <_Z16Dummy_Data_Storev+0x1f6>
   110f8:	10 92 71 0b 	sts	0x0B71, r1	; 0x800b71 <_sSchedules+0x253>
   110fc:	10 92 72 0b 	sts	0x0B72, r1	; 0x800b72 <_sSchedules+0x254>
   11100:	10 92 73 0b 	sts	0x0B73, r1	; 0x800b73 <_sSchedules+0x255>
   11104:	10 92 74 0b 	sts	0x0B74, r1	; 0x800b74 <_sSchedules+0x256>
   11108:	10 92 75 0b 	sts	0x0B75, r1	; 0x800b75 <_sSchedules+0x257>
   1110c:	10 92 77 0b 	sts	0x0B77, r1	; 0x800b77 <_sSchedules+0x259>
   11110:	10 92 76 0b 	sts	0x0B76, r1	; 0x800b76 <_sSchedules+0x258>
   11114:	10 92 79 0b 	sts	0x0B79, r1	; 0x800b79 <_sSchedules+0x25b>
   11118:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
   1111c:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
   11120:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
   11124:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
   11128:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
   1112c:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
   11130:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
   11134:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
   11138:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
   1113c:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
   11140:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
   11144:	10 92 85 0b 	sts	0x0B85, r1	; 0x800b85 <_sSchedules+0x267>
   11148:	10 92 84 0b 	sts	0x0B84, r1	; 0x800b84 <_sSchedules+0x266>
   1114c:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
   11150:	10 92 86 0b 	sts	0x0B86, r1	; 0x800b86 <_sSchedules+0x268>
   11154:	10 92 89 0b 	sts	0x0B89, r1	; 0x800b89 <_sSchedules+0x26b>
   11158:	10 92 88 0b 	sts	0x0B88, r1	; 0x800b88 <_sSchedules+0x26a>
   1115c:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
   11160:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
   11164:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
   11168:	10 92 91 0b 	sts	0x0B91, r1	; 0x800b91 <_sSchedules+0x273>
   1116c:	10 92 92 0b 	sts	0x0B92, r1	; 0x800b92 <_sSchedules+0x274>
   11170:	10 92 93 0b 	sts	0x0B93, r1	; 0x800b93 <_sSchedules+0x275>
   11174:	10 92 94 0b 	sts	0x0B94, r1	; 0x800b94 <_sSchedules+0x276>
   11178:	10 92 95 0b 	sts	0x0B95, r1	; 0x800b95 <_sSchedules+0x277>
   1117c:	10 92 96 0b 	sts	0x0B96, r1	; 0x800b96 <_sSchedules+0x278>
   11180:	10 92 97 0b 	sts	0x0B97, r1	; 0x800b97 <_sSchedules+0x279>
   11184:	10 92 98 0b 	sts	0x0B98, r1	; 0x800b98 <_sSchedules+0x27a>
   11188:	10 92 99 0b 	sts	0x0B99, r1	; 0x800b99 <_sSchedules+0x27b>
   1118c:	80 e0       	ldi	r24, 0x00	; 0
   1118e:	90 e0       	ldi	r25, 0x00	; 0
   11190:	fc 01       	movw	r30, r24
   11192:	ee 0f       	add	r30, r30
   11194:	ff 1f       	adc	r31, r31
   11196:	e6 56       	subi	r30, 0x66	; 102
   11198:	f4 4f       	sbci	r31, 0xF4	; 244
   1119a:	11 82       	std	Z+1, r1	; 0x01
   1119c:	10 82       	st	Z, r1
   1119e:	01 96       	adiw	r24, 0x01	; 1
   111a0:	8f 30       	cpi	r24, 0x0F	; 15
   111a2:	91 05       	cpc	r25, r1
   111a4:	a9 f7       	brne	.-22     	; 0x11190 <_Z16Dummy_Data_Storev+0x2a4>
   111a6:	80 e0       	ldi	r24, 0x00	; 0
   111a8:	90 e0       	ldi	r25, 0x00	; 0
   111aa:	fc 01       	movw	r30, r24
   111ac:	e8 54       	subi	r30, 0x48	; 72
   111ae:	f4 4f       	sbci	r31, 0xF4	; 244
   111b0:	10 82       	st	Z, r1
   111b2:	01 96       	adiw	r24, 0x01	; 1
   111b4:	8f 30       	cpi	r24, 0x0F	; 15
   111b6:	91 05       	cpc	r25, r1
   111b8:	c1 f7       	brne	.-16     	; 0x111aa <_Z16Dummy_Data_Storev+0x2be>
   111ba:	80 e0       	ldi	r24, 0x00	; 0
   111bc:	90 e0       	ldi	r25, 0x00	; 0
   111be:	fc 01       	movw	r30, r24
   111c0:	e9 53       	subi	r30, 0x39	; 57
   111c2:	f4 4f       	sbci	r31, 0xF4	; 244
   111c4:	10 82       	st	Z, r1
   111c6:	01 96       	adiw	r24, 0x01	; 1
   111c8:	8f 30       	cpi	r24, 0x0F	; 15
   111ca:	91 05       	cpc	r25, r1
   111cc:	c1 f7       	brne	.-16     	; 0x111be <_Z16Dummy_Data_Storev+0x2d2>
   111ce:	80 e0       	ldi	r24, 0x00	; 0
   111d0:	90 e0       	ldi	r25, 0x00	; 0
   111d2:	fc 01       	movw	r30, r24
   111d4:	e9 53       	subi	r30, 0x39	; 57
   111d6:	f4 4f       	sbci	r31, 0xF4	; 244
   111d8:	10 82       	st	Z, r1
   111da:	01 96       	adiw	r24, 0x01	; 1
   111dc:	8b 32       	cpi	r24, 0x2B	; 43
   111de:	91 05       	cpc	r25, r1
   111e0:	c1 f7       	brne	.-16     	; 0x111d2 <_Z16Dummy_Data_Storev+0x2e6>
   111e2:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
   111e6:	10 92 8d 0b 	sts	0x0B8D, r1	; 0x800b8d <_sSchedules+0x26f>
   111ea:	10 92 8e 0b 	sts	0x0B8E, r1	; 0x800b8e <_sSchedules+0x270>
   111ee:	10 92 8f 0b 	sts	0x0B8F, r1	; 0x800b8f <_sSchedules+0x271>
   111f2:	10 92 90 0b 	sts	0x0B90, r1	; 0x800b90 <_sSchedules+0x272>
   111f6:	1b de       	rcall	.-970    	; 0x10e2e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   111f8:	98 ee       	ldi	r25, 0xE8	; 232
   111fa:	e9 2e       	mov	r14, r25
   111fc:	9d e0       	ldi	r25, 0x0D	; 13
   111fe:	f9 2e       	mov	r15, r25
   11200:	01 ef       	ldi	r16, 0xF1	; 241
   11202:	19 e0       	ldi	r17, 0x09	; 9
   11204:	f7 01       	movw	r30, r14
   11206:	11 82       	std	Z+1, r1	; 0x01
   11208:	10 92 ed 0d 	sts	0x0DED, r1	; 0x800ded <_sExtra_Plot+0x5>
   1120c:	10 92 09 0e 	sts	0x0E09, r1	; 0x800e09 <_sExtra_Plot+0x21>
   11210:	10 92 25 0e 	sts	0x0E25, r1	; 0x800e25 <_sExtra_Plot+0x3d>
   11214:	10 92 41 0e 	sts	0x0E41, r1	; 0x800e41 <_sExtra_Plot+0x59>
   11218:	10 92 5d 0e 	sts	0x0E5D, r1	; 0x800e5d <_sExtra_Plot+0x75>
   1121c:	48 01       	movw	r8, r16
   1121e:	fb e1       	ldi	r31, 0x1B	; 27
   11220:	8f 0e       	add	r8, r31
   11222:	91 1c       	adc	r9, r1
   11224:	57 01       	movw	r10, r14
   11226:	68 01       	movw	r12, r16
   11228:	f5 01       	movw	r30, r10
   1122a:	61 91       	ld	r22, Z+
   1122c:	5f 01       	movw	r10, r30
   1122e:	da 82       	std	Y+2, r13	; 0x02
   11230:	c9 82       	std	Y+1, r12	; 0x01
   11232:	ce 01       	movw	r24, r28
   11234:	01 96       	adiw	r24, 0x01	; 1
   11236:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   1123a:	ff ef       	ldi	r31, 0xFF	; 255
   1123c:	cf 1a       	sub	r12, r31
   1123e:	df 0a       	sbc	r13, r31
   11240:	8c 14       	cp	r8, r12
   11242:	9d 04       	cpc	r9, r13
   11244:	89 f7       	brne	.-30     	; 0x11228 <_Z16Dummy_Data_Storev+0x33c>
   11246:	8b e1       	ldi	r24, 0x1B	; 27
   11248:	e8 0e       	add	r14, r24
   1124a:	f1 1c       	adc	r15, r1
   1124c:	02 5e       	subi	r16, 0xE2	; 226
   1124e:	1f 4f       	sbci	r17, 0xFF	; 255
   11250:	05 39       	cpi	r16, 0x95	; 149
   11252:	eb e0       	ldi	r30, 0x0B	; 11
   11254:	1e 07       	cpc	r17, r30
   11256:	b1 f6       	brne	.-84     	; 0x11204 <_Z16Dummy_Data_Storev+0x318>
   11258:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   1125c:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   11260:	86 e9       	ldi	r24, 0x96	; 150
   11262:	9c e0       	ldi	r25, 0x0C	; 12
   11264:	8e dd       	rcall	.-1252   	; 0x10d82 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   11266:	10 92 65 14 	sts	0x1465, r1	; 0x801465 <_sRuble_Parameters+0xb7>
   1126a:	65 e6       	ldi	r22, 0x65	; 101
   1126c:	74 e1       	ldi	r23, 0x14	; 20
   1126e:	86 e9       	ldi	r24, 0x96	; 150
   11270:	9c e0       	ldi	r25, 0x0C	; 12
   11272:	3a dd       	rcall	.-1420   	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   11274:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   11278:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   1127c:	85 e0       	ldi	r24, 0x05	; 5
   1127e:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   11282:	65 ed       	ldi	r22, 0xD5	; 213
   11284:	73 e1       	ldi	r23, 0x13	; 19
   11286:	88 ed       	ldi	r24, 0xD8	; 216
   11288:	94 e0       	ldi	r25, 0x04	; 4
   1128a:	2e dd       	rcall	.-1444   	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1128c:	10 92 79 14 	sts	0x1479, r1	; 0x801479 <_sRuble_Parameters+0xcb>
   11290:	69 e7       	ldi	r22, 0x79	; 121
   11292:	74 e1       	ldi	r23, 0x14	; 20
   11294:	81 ea       	ldi	r24, 0xA1	; 161
   11296:	9c e0       	ldi	r25, 0x0C	; 12
   11298:	27 dd       	rcall	.-1458   	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1129a:	10 92 7b 14 	sts	0x147B, r1	; 0x80147b <_sRuble_Parameters+0xcd>
   1129e:	6b e7       	ldi	r22, 0x7B	; 123
   112a0:	74 e1       	ldi	r23, 0x14	; 20
   112a2:	88 ea       	ldi	r24, 0xA8	; 168
   112a4:	9c e0       	ldi	r25, 0x0C	; 12
   112a6:	20 dd       	rcall	.-1472   	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   112a8:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   112ac:	6c e7       	ldi	r22, 0x7C	; 124
   112ae:	74 e1       	ldi	r23, 0x14	; 20
   112b0:	8d ea       	ldi	r24, 0xAD	; 173
   112b2:	9c e0       	ldi	r25, 0x0C	; 12
   112b4:	19 dd       	rcall	.-1486   	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   112b6:	03 e9       	ldi	r16, 0x93	; 147
   112b8:	14 e1       	ldi	r17, 0x14	; 20
   112ba:	f8 01       	movw	r30, r16
   112bc:	11 92       	st	Z+, r1
   112be:	8f 01       	movw	r16, r30
   112c0:	8c dd       	rcall	.-1256   	; 0x10dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   112c2:	f4 e1       	ldi	r31, 0x14	; 20
   112c4:	08 39       	cpi	r16, 0x98	; 152
   112c6:	1f 07       	cpc	r17, r31
   112c8:	c1 f7       	brne	.-16     	; 0x112ba <_Z16Dummy_Data_Storev+0x3ce>
   112ca:	81 e0       	ldi	r24, 0x01	; 1
   112cc:	80 93 98 14 	sts	0x1498, r24	; 0x801498 <_sRuble_Parameters+0xea>
   112d0:	68 e9       	ldi	r22, 0x98	; 152
   112d2:	74 e1       	ldi	r23, 0x14	; 20
   112d4:	8b ea       	ldi	r24, 0xAB	; 171
   112d6:	9e e0       	ldi	r25, 0x0E	; 14
   112d8:	07 dd       	rcall	.-1522   	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   112da:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
   112de:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
   112e2:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
   112e6:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
   112ea:	8b e9       	ldi	r24, 0x9B	; 155
   112ec:	e8 2e       	mov	r14, r24
   112ee:	84 e1       	ldi	r24, 0x14	; 20
   112f0:	f8 2e       	mov	r15, r24
   112f2:	0d ea       	ldi	r16, 0xAD	; 173
   112f4:	1e e0       	ldi	r17, 0x0E	; 14
   112f6:	f7 01       	movw	r30, r14
   112f8:	61 91       	ld	r22, Z+
   112fa:	7f 01       	movw	r14, r30
   112fc:	1a 83       	std	Y+2, r17	; 0x02
   112fe:	09 83       	std	Y+1, r16	; 0x01
   11300:	ce 01       	movw	r24, r28
   11302:	01 96       	adiw	r24, 0x01	; 1
   11304:	0e 94 f7 23 	call	0x47ee	; 0x47ee <_ZN5EERef6updateEh>
   11308:	0f 5f       	subi	r16, 0xFF	; 255
   1130a:	1f 4f       	sbci	r17, 0xFF	; 255
   1130c:	01 3b       	cpi	r16, 0xB1	; 177
   1130e:	fe e0       	ldi	r31, 0x0E	; 14
   11310:	1f 07       	cpc	r17, r31
   11312:	89 f7       	brne	.-30     	; 0x112f6 <_Z16Dummy_Data_Storev+0x40a>
   11314:	04 ef       	ldi	r16, 0xF4	; 244
   11316:	1b e0       	ldi	r17, 0x0B	; 11
   11318:	f1 2c       	mov	r15, r1
   1131a:	f8 01       	movw	r30, r16
   1131c:	11 86       	std	Z+9, r1	; 0x09
   1131e:	10 86       	std	Z+8, r1	; 0x08
   11320:	10 82       	st	Z, r1
   11322:	12 86       	std	Z+10, r1	; 0x0a
   11324:	8f 2d       	mov	r24, r15
   11326:	0e 94 9b 5c 	call	0xb936	; 0xb936 <_Z20Wireless_Pump_EEPROMh>
   1132a:	f3 94       	inc	r15
   1132c:	05 5f       	subi	r16, 0xF5	; 245
   1132e:	1f 4f       	sbci	r17, 0xFF	; 255
   11330:	f3 e0       	ldi	r31, 0x03	; 3
   11332:	ff 12       	cpse	r15, r31
   11334:	f2 cf       	rjmp	.-28     	; 0x1131a <_Z16Dummy_Data_Storev+0x42e>
   11336:	0f 90       	pop	r0
   11338:	0f 90       	pop	r0
   1133a:	df 91       	pop	r29
   1133c:	cf 91       	pop	r28
   1133e:	1f 91       	pop	r17
   11340:	0f 91       	pop	r16
   11342:	ff 90       	pop	r15
   11344:	ef 90       	pop	r14
   11346:	df 90       	pop	r13
   11348:	cf 90       	pop	r12
   1134a:	bf 90       	pop	r11
   1134c:	af 90       	pop	r10
   1134e:	9f 90       	pop	r9
   11350:	8f 90       	pop	r8
   11352:	08 95       	ret

00011354 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11354:	0f 93       	push	r16
   11356:	1f 93       	push	r17
   11358:	cf 93       	push	r28
   1135a:	df 93       	push	r29
   1135c:	dc 01       	movw	r26, r24
   1135e:	12 96       	adiw	r26, 0x02	; 2
   11360:	ed 91       	ld	r30, X+
   11362:	fc 91       	ld	r31, X
   11364:	13 97       	sbiw	r26, 0x03	; 3
   11366:	30 97       	sbiw	r30, 0x00	; 0
   11368:	a1 f0       	breq	.+40     	; 0x11392 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   1136a:	61 15       	cp	r22, r1
   1136c:	71 05       	cpc	r23, r1
   1136e:	31 f0       	breq	.+12     	; 0x1137c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x28>
   11370:	01 90       	ld	r0, Z+
   11372:	f0 81       	ld	r31, Z
   11374:	e0 2d       	mov	r30, r0
   11376:	61 50       	subi	r22, 0x01	; 1
   11378:	71 09       	sbc	r23, r1
   1137a:	f5 cf       	rjmp	.-22     	; 0x11366 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x12>
   1137c:	82 81       	ldd	r24, Z+2	; 0x02
   1137e:	83 30       	cpi	r24, 0x03	; 3
   11380:	08 f0       	brcs	.+2      	; 0x11384 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x30>
   11382:	44 c0       	rjmp	.+136    	; 0x1140c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb8>
   11384:	81 30       	cpi	r24, 0x01	; 1
   11386:	28 f0       	brcs	.+10     	; 0x11392 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   11388:	03 80       	ldd	r0, Z+3	; 0x03
   1138a:	f4 81       	ldd	r31, Z+4	; 0x04
   1138c:	e0 2d       	mov	r30, r0
   1138e:	30 97       	sbiw	r30, 0x00	; 0
   11390:	21 f4       	brne	.+8      	; 0x1139a <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x46>
   11392:	60 e0       	ldi	r22, 0x00	; 0
   11394:	70 e0       	ldi	r23, 0x00	; 0
   11396:	cb 01       	movw	r24, r22
   11398:	4f c0       	rjmp	.+158    	; 0x11438 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   1139a:	80 81       	ld	r24, Z
   1139c:	84 37       	cpi	r24, 0x74	; 116
   1139e:	71 f1       	breq	.+92     	; 0x113fc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xa8>
   113a0:	8b 32       	cpi	r24, 0x2B	; 43
   113a2:	29 f0       	breq	.+10     	; 0x113ae <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5a>
   113a4:	8d 32       	cpi	r24, 0x2D	; 45
   113a6:	21 f4       	brne	.+8      	; 0x113b0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5c>
   113a8:	31 96       	adiw	r30, 0x01	; 1
   113aa:	d1 e0       	ldi	r29, 0x01	; 1
   113ac:	02 c0       	rjmp	.+4      	; 0x113b2 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5e>
   113ae:	31 96       	adiw	r30, 0x01	; 1
   113b0:	d0 e0       	ldi	r29, 0x00	; 0
   113b2:	20 e0       	ldi	r18, 0x00	; 0
   113b4:	30 e0       	ldi	r19, 0x00	; 0
   113b6:	a9 01       	movw	r20, r18
   113b8:	c1 91       	ld	r28, Z+
   113ba:	80 ed       	ldi	r24, 0xD0	; 208
   113bc:	8c 0f       	add	r24, r28
   113be:	8a 30       	cpi	r24, 0x0A	; 10
   113c0:	98 f4       	brcc	.+38     	; 0x113e8 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x94>
   113c2:	aa e0       	ldi	r26, 0x0A	; 10
   113c4:	b0 e0       	ldi	r27, 0x00	; 0
   113c6:	0e 94 d2 eb 	call	0x1d7a4	; 0x1d7a4 <__muluhisi3>
   113ca:	2c 2f       	mov	r18, r28
   113cc:	30 e0       	ldi	r19, 0x00	; 0
   113ce:	20 53       	subi	r18, 0x30	; 48
   113d0:	31 09       	sbc	r19, r1
   113d2:	89 01       	movw	r16, r18
   113d4:	33 0f       	add	r19, r19
   113d6:	22 0b       	sbc	r18, r18
   113d8:	33 0b       	sbc	r19, r19
   113da:	a9 01       	movw	r20, r18
   113dc:	98 01       	movw	r18, r16
   113de:	26 0f       	add	r18, r22
   113e0:	37 1f       	adc	r19, r23
   113e2:	48 1f       	adc	r20, r24
   113e4:	59 1f       	adc	r21, r25
   113e6:	e8 cf       	rjmp	.-48     	; 0x113b8 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x64>
   113e8:	dd 23       	and	r29, r29
   113ea:	69 f0       	breq	.+26     	; 0x11406 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb2>
   113ec:	66 27       	eor	r22, r22
   113ee:	77 27       	eor	r23, r23
   113f0:	cb 01       	movw	r24, r22
   113f2:	62 1b       	sub	r22, r18
   113f4:	73 0b       	sbc	r23, r19
   113f6:	84 0b       	sbc	r24, r20
   113f8:	95 0b       	sbc	r25, r21
   113fa:	1e c0       	rjmp	.+60     	; 0x11438 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   113fc:	61 e0       	ldi	r22, 0x01	; 1
   113fe:	70 e0       	ldi	r23, 0x00	; 0
   11400:	80 e0       	ldi	r24, 0x00	; 0
   11402:	90 e0       	ldi	r25, 0x00	; 0
   11404:	19 c0       	rjmp	.+50     	; 0x11438 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   11406:	ca 01       	movw	r24, r20
   11408:	b9 01       	movw	r22, r18
   1140a:	16 c0       	rjmp	.+44     	; 0x11438 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   1140c:	85 30       	cpi	r24, 0x05	; 5
   1140e:	28 f4       	brcc	.+10     	; 0x1141a <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xc6>
   11410:	63 81       	ldd	r22, Z+3	; 0x03
   11412:	74 81       	ldd	r23, Z+4	; 0x04
   11414:	85 81       	ldd	r24, Z+5	; 0x05
   11416:	96 81       	ldd	r25, Z+6	; 0x06
   11418:	0f c0       	rjmp	.+30     	; 0x11438 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   1141a:	85 30       	cpi	r24, 0x05	; 5
   1141c:	39 f4       	brne	.+14     	; 0x1142c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xd8>
   1141e:	83 81       	ldd	r24, Z+3	; 0x03
   11420:	94 81       	ldd	r25, Z+4	; 0x04
   11422:	a5 81       	ldd	r26, Z+5	; 0x05
   11424:	b6 81       	ldd	r27, Z+6	; 0x06
   11426:	9c 01       	movw	r18, r24
   11428:	ad 01       	movw	r20, r26
   1142a:	e0 cf       	rjmp	.-64     	; 0x113ec <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x98>
   1142c:	63 81       	ldd	r22, Z+3	; 0x03
   1142e:	74 81       	ldd	r23, Z+4	; 0x04
   11430:	85 81       	ldd	r24, Z+5	; 0x05
   11432:	96 81       	ldd	r25, Z+6	; 0x06
   11434:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <__fixunssfsi>
   11438:	df 91       	pop	r29
   1143a:	cf 91       	pop	r28
   1143c:	1f 91       	pop	r17
   1143e:	0f 91       	pop	r16
   11440:	08 95       	ret

00011442 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>:
   11442:	fc 01       	movw	r30, r24
   11444:	a0 81       	ld	r26, Z
   11446:	b1 81       	ldd	r27, Z+1	; 0x01
   11448:	8c 91       	ld	r24, X
   1144a:	8d 30       	cpi	r24, 0x0D	; 13
   1144c:	51 f0       	breq	.+20     	; 0x11462 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   1144e:	20 f4       	brcc	.+8      	; 0x11458 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x16>
   11450:	89 50       	subi	r24, 0x09	; 9
   11452:	82 30       	cpi	r24, 0x02	; 2
   11454:	b8 f5       	brcc	.+110    	; 0x114c4 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11456:	05 c0       	rjmp	.+10     	; 0x11462 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   11458:	80 32       	cpi	r24, 0x20	; 32
   1145a:	19 f0       	breq	.+6      	; 0x11462 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   1145c:	8f 32       	cpi	r24, 0x2F	; 47
   1145e:	19 f0       	breq	.+6      	; 0x11466 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x24>
   11460:	08 95       	ret
   11462:	11 96       	adiw	r26, 0x01	; 1
   11464:	2c c0       	rjmp	.+88     	; 0x114be <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   11466:	11 96       	adiw	r26, 0x01	; 1
   11468:	8c 91       	ld	r24, X
   1146a:	11 97       	sbiw	r26, 0x01	; 1
   1146c:	8a 32       	cpi	r24, 0x2A	; 42
   1146e:	19 f0       	breq	.+6      	; 0x11476 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x34>
   11470:	8f 32       	cpi	r24, 0x2F	; 47
   11472:	d1 f0       	breq	.+52     	; 0x114a8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x66>
   11474:	08 95       	ret
   11476:	11 96       	adiw	r26, 0x01	; 1
   11478:	b1 83       	std	Z+1, r27	; 0x01
   1147a:	a0 83       	st	Z, r26
   1147c:	a0 81       	ld	r26, Z
   1147e:	b1 81       	ldd	r27, Z+1	; 0x01
   11480:	cd 01       	movw	r24, r26
   11482:	01 96       	adiw	r24, 0x01	; 1
   11484:	91 83       	std	Z+1, r25	; 0x01
   11486:	80 83       	st	Z, r24
   11488:	11 96       	adiw	r26, 0x01	; 1
   1148a:	8c 91       	ld	r24, X
   1148c:	11 97       	sbiw	r26, 0x01	; 1
   1148e:	88 23       	and	r24, r24
   11490:	c9 f0       	breq	.+50     	; 0x114c4 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11492:	8a 32       	cpi	r24, 0x2A	; 42
   11494:	99 f7       	brne	.-26     	; 0x1147c <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   11496:	12 96       	adiw	r26, 0x02	; 2
   11498:	8c 91       	ld	r24, X
   1149a:	12 97       	sbiw	r26, 0x02	; 2
   1149c:	8f 32       	cpi	r24, 0x2F	; 47
   1149e:	71 f7       	brne	.-36     	; 0x1147c <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   114a0:	13 96       	adiw	r26, 0x03	; 3
   114a2:	0d c0       	rjmp	.+26     	; 0x114be <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   114a4:	8a 30       	cpi	r24, 0x0A	; 10
   114a6:	71 f2       	breq	.-100    	; 0x11444 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   114a8:	a0 81       	ld	r26, Z
   114aa:	b1 81       	ldd	r27, Z+1	; 0x01
   114ac:	cd 01       	movw	r24, r26
   114ae:	01 96       	adiw	r24, 0x01	; 1
   114b0:	91 83       	std	Z+1, r25	; 0x01
   114b2:	80 83       	st	Z, r24
   114b4:	11 96       	adiw	r26, 0x01	; 1
   114b6:	8c 91       	ld	r24, X
   114b8:	81 11       	cpse	r24, r1
   114ba:	f4 cf       	rjmp	.-24     	; 0x114a4 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x62>
   114bc:	03 c0       	rjmp	.+6      	; 0x114c4 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   114be:	b1 83       	std	Z+1, r27	; 0x01
   114c0:	a0 83       	st	Z, r26
   114c2:	c0 cf       	rjmp	.-128    	; 0x11444 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   114c4:	08 95       	ret

000114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>:
   114c6:	1f 93       	push	r17
   114c8:	cf 93       	push	r28
   114ca:	df 93       	push	r29
   114cc:	ec 01       	movw	r28, r24
   114ce:	16 2f       	mov	r17, r22
   114d0:	b8 df       	rcall	.-144    	; 0x11442 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   114d2:	e8 81       	ld	r30, Y
   114d4:	f9 81       	ldd	r31, Y+1	; 0x01
   114d6:	80 81       	ld	r24, Z
   114d8:	18 13       	cpse	r17, r24
   114da:	05 c0       	rjmp	.+10     	; 0x114e6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x20>
   114dc:	31 96       	adiw	r30, 0x01	; 1
   114de:	f9 83       	std	Y+1, r31	; 0x01
   114e0:	e8 83       	st	Y, r30
   114e2:	81 e0       	ldi	r24, 0x01	; 1
   114e4:	01 c0       	rjmp	.+2      	; 0x114e8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x22>
   114e6:	80 e0       	ldi	r24, 0x00	; 0
   114e8:	df 91       	pop	r29
   114ea:	cf 91       	pop	r28
   114ec:	1f 91       	pop	r17
   114ee:	08 95       	ret

000114f0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>:
   114f0:	0f 93       	push	r16
   114f2:	1f 93       	push	r17
   114f4:	cf 93       	push	r28
   114f6:	df 93       	push	r29
   114f8:	ec 01       	movw	r28, r24
   114fa:	0c 81       	ldd	r16, Y+4	; 0x04
   114fc:	1d 81       	ldd	r17, Y+5	; 0x05
   114fe:	02 96       	adiw	r24, 0x02	; 2
   11500:	a0 df       	rcall	.-192    	; 0x11442 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11502:	ea 81       	ldd	r30, Y+2	; 0x02
   11504:	fb 81       	ldd	r31, Y+3	; 0x03
   11506:	80 81       	ld	r24, Z
   11508:	87 32       	cpi	r24, 0x27	; 39
   1150a:	31 f1       	breq	.+76     	; 0x11558 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   1150c:	82 32       	cpi	r24, 0x22	; 34
   1150e:	21 f1       	breq	.+72     	; 0x11558 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11510:	90 ed       	ldi	r25, 0xD0	; 208
   11512:	98 0f       	add	r25, r24
   11514:	9a 30       	cpi	r25, 0x0A	; 10
   11516:	70 f0       	brcs	.+28     	; 0x11534 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11518:	91 ea       	ldi	r25, 0xA1	; 161
   1151a:	98 0f       	add	r25, r24
   1151c:	9c 31       	cpi	r25, 0x1C	; 28
   1151e:	50 f0       	brcs	.+20     	; 0x11534 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11520:	9f eb       	ldi	r25, 0xBF	; 191
   11522:	98 0f       	add	r25, r24
   11524:	9a 31       	cpi	r25, 0x1A	; 26
   11526:	30 f0       	brcs	.+12     	; 0x11534 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11528:	8b 32       	cpi	r24, 0x2B	; 43
   1152a:	21 f0       	breq	.+8      	; 0x11534 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   1152c:	93 ed       	ldi	r25, 0xD3	; 211
   1152e:	98 0f       	add	r25, r24
   11530:	92 30       	cpi	r25, 0x02	; 2
   11532:	f0 f5       	brcc	.+124    	; 0x115b0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11534:	2a 81       	ldd	r18, Y+2	; 0x02
   11536:	3b 81       	ldd	r19, Y+3	; 0x03
   11538:	2f 5f       	subi	r18, 0xFF	; 255
   1153a:	3f 4f       	sbci	r19, 0xFF	; 255
   1153c:	3b 83       	std	Y+3, r19	; 0x03
   1153e:	2a 83       	std	Y+2, r18	; 0x02
   11540:	ec 81       	ldd	r30, Y+4	; 0x04
   11542:	fd 81       	ldd	r31, Y+5	; 0x05
   11544:	9f 01       	movw	r18, r30
   11546:	2f 5f       	subi	r18, 0xFF	; 255
   11548:	3f 4f       	sbci	r19, 0xFF	; 255
   1154a:	3d 83       	std	Y+5, r19	; 0x05
   1154c:	2c 83       	std	Y+4, r18	; 0x04
   1154e:	80 83       	st	Z, r24
   11550:	ea 81       	ldd	r30, Y+2	; 0x02
   11552:	fb 81       	ldd	r31, Y+3	; 0x03
   11554:	80 81       	ld	r24, Z
   11556:	dc cf       	rjmp	.-72     	; 0x11510 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x20>
   11558:	31 96       	adiw	r30, 0x01	; 1
   1155a:	fb 83       	std	Y+3, r31	; 0x03
   1155c:	ea 83       	std	Y+2, r30	; 0x02
   1155e:	ea 81       	ldd	r30, Y+2	; 0x02
   11560:	fb 81       	ldd	r31, Y+3	; 0x03
   11562:	90 81       	ld	r25, Z
   11564:	99 23       	and	r25, r25
   11566:	21 f1       	breq	.+72     	; 0x115b0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11568:	9f 01       	movw	r18, r30
   1156a:	2f 5f       	subi	r18, 0xFF	; 255
   1156c:	3f 4f       	sbci	r19, 0xFF	; 255
   1156e:	3b 83       	std	Y+3, r19	; 0x03
   11570:	2a 83       	std	Y+2, r18	; 0x02
   11572:	98 17       	cp	r25, r24
   11574:	e9 f0       	breq	.+58     	; 0x115b0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11576:	9c 35       	cpi	r25, 0x5C	; 92
   11578:	91 f4       	brne	.+36     	; 0x1159e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xae>
   1157a:	91 81       	ldd	r25, Z+1	; 0x01
   1157c:	a1 ee       	ldi	r26, 0xE1	; 225
   1157e:	b6 e0       	ldi	r27, 0x06	; 6
   11580:	2c 91       	ld	r18, X
   11582:	22 23       	and	r18, r18
   11584:	39 f0       	breq	.+14     	; 0x11594 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   11586:	92 13       	cpse	r25, r18
   11588:	03 c0       	rjmp	.+6      	; 0x11590 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa0>
   1158a:	11 96       	adiw	r26, 0x01	; 1
   1158c:	9c 91       	ld	r25, X
   1158e:	02 c0       	rjmp	.+4      	; 0x11594 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   11590:	12 96       	adiw	r26, 0x02	; 2
   11592:	f6 cf       	rjmp	.-20     	; 0x11580 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x90>
   11594:	99 23       	and	r25, r25
   11596:	61 f0       	breq	.+24     	; 0x115b0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11598:	32 96       	adiw	r30, 0x02	; 2
   1159a:	fb 83       	std	Y+3, r31	; 0x03
   1159c:	ea 83       	std	Y+2, r30	; 0x02
   1159e:	ec 81       	ldd	r30, Y+4	; 0x04
   115a0:	fd 81       	ldd	r31, Y+5	; 0x05
   115a2:	9f 01       	movw	r18, r30
   115a4:	2f 5f       	subi	r18, 0xFF	; 255
   115a6:	3f 4f       	sbci	r19, 0xFF	; 255
   115a8:	3d 83       	std	Y+5, r19	; 0x05
   115aa:	2c 83       	std	Y+4, r18	; 0x04
   115ac:	90 83       	st	Z, r25
   115ae:	d7 cf       	rjmp	.-82     	; 0x1155e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x6e>
   115b0:	ec 81       	ldd	r30, Y+4	; 0x04
   115b2:	fd 81       	ldd	r31, Y+5	; 0x05
   115b4:	cf 01       	movw	r24, r30
   115b6:	01 96       	adiw	r24, 0x01	; 1
   115b8:	9d 83       	std	Y+5, r25	; 0x05
   115ba:	8c 83       	std	Y+4, r24	; 0x04
   115bc:	10 82       	st	Z, r1
   115be:	c8 01       	movw	r24, r16
   115c0:	df 91       	pop	r29
   115c2:	cf 91       	pop	r28
   115c4:	1f 91       	pop	r17
   115c6:	0f 91       	pop	r16
   115c8:	08 95       	ret

000115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   115ca:	0f 93       	push	r16
   115cc:	1f 93       	push	r17
   115ce:	cf 93       	push	r28
   115d0:	df 93       	push	r29
   115d2:	8b 01       	movw	r16, r22
   115d4:	fc 01       	movw	r30, r24
   115d6:	c2 81       	ldd	r28, Z+2	; 0x02
   115d8:	d3 81       	ldd	r29, Z+3	; 0x03
   115da:	20 97       	sbiw	r28, 0x00	; 0
   115dc:	a1 f0       	breq	.+40     	; 0x11606 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   115de:	8a 81       	ldd	r24, Y+2	; 0x02
   115e0:	9b 81       	ldd	r25, Y+3	; 0x03
   115e2:	01 15       	cp	r16, r1
   115e4:	11 05       	cpc	r17, r1
   115e6:	11 f0       	breq	.+4      	; 0x115ec <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x22>
   115e8:	00 97       	sbiw	r24, 0x00	; 0
   115ea:	21 f4       	brne	.+8      	; 0x115f4 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2a>
   115ec:	80 17       	cp	r24, r16
   115ee:	91 07       	cpc	r25, r17
   115f0:	31 f4       	brne	.+12     	; 0x115fe <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x34>
   115f2:	09 c0       	rjmp	.+18     	; 0x11606 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   115f4:	b8 01       	movw	r22, r16
   115f6:	0e 94 b2 ed 	call	0x1db64	; 0x1db64 <strcmp_P>
   115fa:	89 2b       	or	r24, r25
   115fc:	21 f0       	breq	.+8      	; 0x11606 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   115fe:	09 90       	ld	r0, Y+
   11600:	d8 81       	ld	r29, Y
   11602:	c0 2d       	mov	r28, r0
   11604:	ea cf       	rjmp	.-44     	; 0x115da <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   11606:	ce 01       	movw	r24, r28
   11608:	df 91       	pop	r29
   1160a:	cf 91       	pop	r28
   1160c:	1f 91       	pop	r17
   1160e:	0f 91       	pop	r16
   11610:	08 95       	ret

00011612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>:
   11612:	cf 93       	push	r28
   11614:	df 93       	push	r29
   11616:	ec 01       	movw	r28, r24
   11618:	68 81       	ld	r22, Y
   1161a:	79 81       	ldd	r23, Y+1	; 0x01
   1161c:	89 e0       	ldi	r24, 0x09	; 9
   1161e:	90 e0       	ldi	r25, 0x00	; 0
   11620:	1c db       	rcall	.-2504   	; 0x10c5a <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   11622:	00 97       	sbiw	r24, 0x00	; 0
   11624:	21 f0       	breq	.+8      	; 0x1162e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x1c>
   11626:	fc 01       	movw	r30, r24
   11628:	11 82       	std	Z+1, r1	; 0x01
   1162a:	10 82       	st	Z, r1
   1162c:	14 82       	std	Z+4, r1	; 0x04
   1162e:	ea 81       	ldd	r30, Y+2	; 0x02
   11630:	fb 81       	ldd	r31, Y+3	; 0x03
   11632:	30 97       	sbiw	r30, 0x00	; 0
   11634:	51 f0       	breq	.+20     	; 0x1164a <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x38>
   11636:	20 81       	ld	r18, Z
   11638:	31 81       	ldd	r19, Z+1	; 0x01
   1163a:	21 15       	cp	r18, r1
   1163c:	31 05       	cpc	r19, r1
   1163e:	11 f0       	breq	.+4      	; 0x11644 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x32>
   11640:	f9 01       	movw	r30, r18
   11642:	f9 cf       	rjmp	.-14     	; 0x11636 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x24>
   11644:	91 83       	std	Z+1, r25	; 0x01
   11646:	80 83       	st	Z, r24
   11648:	02 c0       	rjmp	.+4      	; 0x1164e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x3c>
   1164a:	9b 83       	std	Y+3, r25	; 0x03
   1164c:	8a 83       	std	Y+2, r24	; 0x02
   1164e:	df 91       	pop	r29
   11650:	cf 91       	pop	r28
   11652:	08 95       	ret

00011654 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>:
   11654:	cf 92       	push	r12
   11656:	df 92       	push	r13
   11658:	ef 92       	push	r14
   1165a:	ff 92       	push	r15
   1165c:	0f 93       	push	r16
   1165e:	1f 93       	push	r17
   11660:	cf 93       	push	r28
   11662:	df 93       	push	r29
   11664:	41 15       	cp	r20, r1
   11666:	51 05       	cpc	r21, r1
   11668:	e1 f0       	breq	.+56     	; 0x116a2 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x4e>
   1166a:	ea 01       	movw	r28, r20
   1166c:	8b 01       	movw	r16, r22
   1166e:	7c 01       	movw	r14, r24
   11670:	ca 01       	movw	r24, r20
   11672:	0e 94 bb ed 	call	0x1db76	; 0x1db76 <__strlen_P>
   11676:	01 96       	adiw	r24, 0x01	; 1
   11678:	6c 01       	movw	r12, r24
   1167a:	d7 01       	movw	r26, r14
   1167c:	ed 91       	ld	r30, X+
   1167e:	fc 91       	ld	r31, X
   11680:	01 90       	ld	r0, Z+
   11682:	f0 81       	ld	r31, Z
   11684:	e0 2d       	mov	r30, r0
   11686:	bc 01       	movw	r22, r24
   11688:	c7 01       	movw	r24, r14
   1168a:	19 95       	eicall
   1168c:	7c 01       	movw	r14, r24
   1168e:	00 97       	sbiw	r24, 0x00	; 0
   11690:	69 f0       	breq	.+26     	; 0x116ac <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x58>
   11692:	a6 01       	movw	r20, r12
   11694:	be 01       	movw	r22, r28
   11696:	0e 94 a9 ed 	call	0x1db52	; 0x1db52 <memcpy_P>
   1169a:	f8 01       	movw	r30, r16
   1169c:	f1 82       	std	Z+1, r15	; 0x01
   1169e:	e0 82       	st	Z, r14
   116a0:	03 c0       	rjmp	.+6      	; 0x116a8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x54>
   116a2:	db 01       	movw	r26, r22
   116a4:	1d 92       	st	X+, r1
   116a6:	1c 92       	st	X, r1
   116a8:	81 e0       	ldi	r24, 0x01	; 1
   116aa:	01 c0       	rjmp	.+2      	; 0x116ae <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x5a>
   116ac:	80 e0       	ldi	r24, 0x00	; 0
   116ae:	df 91       	pop	r29
   116b0:	cf 91       	pop	r28
   116b2:	1f 91       	pop	r17
   116b4:	0f 91       	pop	r16
   116b6:	ff 90       	pop	r15
   116b8:	ef 90       	pop	r14
   116ba:	df 90       	pop	r13
   116bc:	cf 90       	pop	r12
   116be:	08 95       	ret

000116c0 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>:
   116c0:	cf 92       	push	r12
   116c2:	df 92       	push	r13
   116c4:	ef 92       	push	r14
   116c6:	ff 92       	push	r15
   116c8:	0f 93       	push	r16
   116ca:	1f 93       	push	r17
   116cc:	cf 93       	push	r28
   116ce:	df 93       	push	r29
   116d0:	61 15       	cp	r22, r1
   116d2:	71 05       	cpc	r23, r1
   116d4:	11 f4       	brne	.+4      	; 0x116da <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   116d6:	80 e0       	ldi	r24, 0x00	; 0
   116d8:	22 c0       	rjmp	.+68     	; 0x1171e <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   116da:	6a 01       	movw	r12, r20
   116dc:	7b 01       	movw	r14, r22
   116de:	8c 01       	movw	r16, r24
   116e0:	74 df       	rcall	.-280    	; 0x115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   116e2:	ec 01       	movw	r28, r24
   116e4:	89 2b       	or	r24, r25
   116e6:	79 f4       	brne	.+30     	; 0x11706 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x46>
   116e8:	c8 01       	movw	r24, r16
   116ea:	93 df       	rcall	.-218    	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   116ec:	ec 01       	movw	r28, r24
   116ee:	00 97       	sbiw	r24, 0x00	; 0
   116f0:	91 f3       	breq	.-28     	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   116f2:	a7 01       	movw	r20, r14
   116f4:	bc 01       	movw	r22, r24
   116f6:	6e 5f       	subi	r22, 0xFE	; 254
   116f8:	7f 4f       	sbci	r23, 0xFF	; 255
   116fa:	f8 01       	movw	r30, r16
   116fc:	80 81       	ld	r24, Z
   116fe:	91 81       	ldd	r25, Z+1	; 0x01
   11700:	a9 df       	rcall	.-174    	; 0x11654 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11702:	88 23       	and	r24, r24
   11704:	41 f3       	breq	.-48     	; 0x116d6 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11706:	f6 01       	movw	r30, r12
   11708:	80 81       	ld	r24, Z
   1170a:	90 e0       	ldi	r25, 0x00	; 0
   1170c:	a0 e0       	ldi	r26, 0x00	; 0
   1170e:	b0 e0       	ldi	r27, 0x00	; 0
   11710:	23 e0       	ldi	r18, 0x03	; 3
   11712:	2c 83       	std	Y+4, r18	; 0x04
   11714:	8d 83       	std	Y+5, r24	; 0x05
   11716:	9e 83       	std	Y+6, r25	; 0x06
   11718:	af 83       	std	Y+7, r26	; 0x07
   1171a:	b8 87       	std	Y+8, r27	; 0x08
   1171c:	81 e0       	ldi	r24, 0x01	; 1
   1171e:	df 91       	pop	r29
   11720:	cf 91       	pop	r28
   11722:	1f 91       	pop	r17
   11724:	0f 91       	pop	r16
   11726:	ff 90       	pop	r15
   11728:	ef 90       	pop	r14
   1172a:	df 90       	pop	r13
   1172c:	cf 90       	pop	r12
   1172e:	08 95       	ret

00011730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>:
   11730:	cf 92       	push	r12
   11732:	df 92       	push	r13
   11734:	ef 92       	push	r14
   11736:	ff 92       	push	r15
   11738:	0f 93       	push	r16
   1173a:	1f 93       	push	r17
   1173c:	cf 93       	push	r28
   1173e:	df 93       	push	r29
   11740:	61 15       	cp	r22, r1
   11742:	71 05       	cpc	r23, r1
   11744:	11 f4       	brne	.+4      	; 0x1174a <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   11746:	80 e0       	ldi	r24, 0x00	; 0
   11748:	22 c0       	rjmp	.+68     	; 0x1178e <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1174a:	6a 01       	movw	r12, r20
   1174c:	7b 01       	movw	r14, r22
   1174e:	8c 01       	movw	r16, r24
   11750:	3c df       	rcall	.-392    	; 0x115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11752:	ec 01       	movw	r28, r24
   11754:	89 2b       	or	r24, r25
   11756:	79 f4       	brne	.+30     	; 0x11776 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x46>
   11758:	c8 01       	movw	r24, r16
   1175a:	5b df       	rcall	.-330    	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1175c:	ec 01       	movw	r28, r24
   1175e:	00 97       	sbiw	r24, 0x00	; 0
   11760:	91 f3       	breq	.-28     	; 0x11746 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11762:	a7 01       	movw	r20, r14
   11764:	bc 01       	movw	r22, r24
   11766:	6e 5f       	subi	r22, 0xFE	; 254
   11768:	7f 4f       	sbci	r23, 0xFF	; 255
   1176a:	f8 01       	movw	r30, r16
   1176c:	80 81       	ld	r24, Z
   1176e:	91 81       	ldd	r25, Z+1	; 0x01
   11770:	71 df       	rcall	.-286    	; 0x11654 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11772:	88 23       	and	r24, r24
   11774:	41 f3       	breq	.-48     	; 0x11746 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11776:	f6 01       	movw	r30, r12
   11778:	80 81       	ld	r24, Z
   1177a:	91 81       	ldd	r25, Z+1	; 0x01
   1177c:	a0 e0       	ldi	r26, 0x00	; 0
   1177e:	b0 e0       	ldi	r27, 0x00	; 0
   11780:	24 e0       	ldi	r18, 0x04	; 4
   11782:	2c 83       	std	Y+4, r18	; 0x04
   11784:	8d 83       	std	Y+5, r24	; 0x05
   11786:	9e 83       	std	Y+6, r25	; 0x06
   11788:	af 83       	std	Y+7, r26	; 0x07
   1178a:	b8 87       	std	Y+8, r27	; 0x08
   1178c:	81 e0       	ldi	r24, 0x01	; 1
   1178e:	df 91       	pop	r29
   11790:	cf 91       	pop	r28
   11792:	1f 91       	pop	r17
   11794:	0f 91       	pop	r16
   11796:	ff 90       	pop	r15
   11798:	ef 90       	pop	r14
   1179a:	df 90       	pop	r13
   1179c:	cf 90       	pop	r12
   1179e:	08 95       	ret

000117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>:
   117a0:	cf 92       	push	r12
   117a2:	df 92       	push	r13
   117a4:	ef 92       	push	r14
   117a6:	ff 92       	push	r15
   117a8:	0f 93       	push	r16
   117aa:	1f 93       	push	r17
   117ac:	cf 93       	push	r28
   117ae:	df 93       	push	r29
   117b0:	61 15       	cp	r22, r1
   117b2:	71 05       	cpc	r23, r1
   117b4:	21 f1       	breq	.+72     	; 0x117fe <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   117b6:	6a 01       	movw	r12, r20
   117b8:	7b 01       	movw	r14, r22
   117ba:	8c 01       	movw	r16, r24
   117bc:	06 df       	rcall	.-500    	; 0x115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   117be:	ec 01       	movw	r28, r24
   117c0:	89 2b       	or	r24, r25
   117c2:	79 f4       	brne	.+30     	; 0x117e2 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x42>
   117c4:	c8 01       	movw	r24, r16
   117c6:	25 df       	rcall	.-438    	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   117c8:	ec 01       	movw	r28, r24
   117ca:	00 97       	sbiw	r24, 0x00	; 0
   117cc:	c1 f0       	breq	.+48     	; 0x117fe <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   117ce:	a7 01       	movw	r20, r14
   117d0:	bc 01       	movw	r22, r24
   117d2:	6e 5f       	subi	r22, 0xFE	; 254
   117d4:	7f 4f       	sbci	r23, 0xFF	; 255
   117d6:	f8 01       	movw	r30, r16
   117d8:	80 81       	ld	r24, Z
   117da:	91 81       	ldd	r25, Z+1	; 0x01
   117dc:	3b df       	rcall	.-394    	; 0x11654 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   117de:	88 23       	and	r24, r24
   117e0:	71 f0       	breq	.+28     	; 0x117fe <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   117e2:	f6 01       	movw	r30, r12
   117e4:	60 81       	ld	r22, Z
   117e6:	71 81       	ldd	r23, Z+1	; 0x01
   117e8:	ce 01       	movw	r24, r28
   117ea:	04 96       	adiw	r24, 0x04	; 4
   117ec:	df 91       	pop	r29
   117ee:	cf 91       	pop	r28
   117f0:	1f 91       	pop	r17
   117f2:	0f 91       	pop	r16
   117f4:	ff 90       	pop	r15
   117f6:	ef 90       	pop	r14
   117f8:	df 90       	pop	r13
   117fa:	cf 90       	pop	r12
   117fc:	00 ca       	rjmp	.-3072   	; 0x10bfe <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   117fe:	80 e0       	ldi	r24, 0x00	; 0
   11800:	df 91       	pop	r29
   11802:	cf 91       	pop	r28
   11804:	1f 91       	pop	r17
   11806:	0f 91       	pop	r16
   11808:	ff 90       	pop	r15
   1180a:	ef 90       	pop	r14
   1180c:	df 90       	pop	r13
   1180e:	cf 90       	pop	r12
   11810:	08 95       	ret

00011812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>:
   11812:	cf 92       	push	r12
   11814:	df 92       	push	r13
   11816:	ef 92       	push	r14
   11818:	ff 92       	push	r15
   1181a:	0f 93       	push	r16
   1181c:	1f 93       	push	r17
   1181e:	cf 93       	push	r28
   11820:	df 93       	push	r29
   11822:	61 15       	cp	r22, r1
   11824:	71 05       	cpc	r23, r1
   11826:	11 f4       	brne	.+4      	; 0x1182c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   11828:	80 e0       	ldi	r24, 0x00	; 0
   1182a:	22 c0       	rjmp	.+68     	; 0x11870 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1182c:	6a 01       	movw	r12, r20
   1182e:	7b 01       	movw	r14, r22
   11830:	8c 01       	movw	r16, r24
   11832:	cb de       	rcall	.-618    	; 0x115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11834:	ec 01       	movw	r28, r24
   11836:	89 2b       	or	r24, r25
   11838:	79 f4       	brne	.+30     	; 0x11858 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x46>
   1183a:	c8 01       	movw	r24, r16
   1183c:	ea de       	rcall	.-556    	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1183e:	ec 01       	movw	r28, r24
   11840:	00 97       	sbiw	r24, 0x00	; 0
   11842:	91 f3       	breq	.-28     	; 0x11828 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11844:	a7 01       	movw	r20, r14
   11846:	bc 01       	movw	r22, r24
   11848:	6e 5f       	subi	r22, 0xFE	; 254
   1184a:	7f 4f       	sbci	r23, 0xFF	; 255
   1184c:	f8 01       	movw	r30, r16
   1184e:	80 81       	ld	r24, Z
   11850:	91 81       	ldd	r25, Z+1	; 0x01
   11852:	00 df       	rcall	.-512    	; 0x11654 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11854:	88 23       	and	r24, r24
   11856:	41 f3       	breq	.-48     	; 0x11828 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11858:	f6 01       	movw	r30, r12
   1185a:	80 81       	ld	r24, Z
   1185c:	90 e0       	ldi	r25, 0x00	; 0
   1185e:	a0 e0       	ldi	r26, 0x00	; 0
   11860:	b0 e0       	ldi	r27, 0x00	; 0
   11862:	24 e0       	ldi	r18, 0x04	; 4
   11864:	2c 83       	std	Y+4, r18	; 0x04
   11866:	8d 83       	std	Y+5, r24	; 0x05
   11868:	9e 83       	std	Y+6, r25	; 0x06
   1186a:	af 83       	std	Y+7, r26	; 0x07
   1186c:	b8 87       	std	Y+8, r27	; 0x08
   1186e:	81 e0       	ldi	r24, 0x01	; 1
   11870:	df 91       	pop	r29
   11872:	cf 91       	pop	r28
   11874:	1f 91       	pop	r17
   11876:	0f 91       	pop	r16
   11878:	ff 90       	pop	r15
   1187a:	ef 90       	pop	r14
   1187c:	df 90       	pop	r13
   1187e:	cf 90       	pop	r12
   11880:	08 95       	ret

00011882 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   11882:	0f 93       	push	r16
   11884:	1f 93       	push	r17
   11886:	cf 93       	push	r28
   11888:	df 93       	push	r29
   1188a:	8b 01       	movw	r16, r22
   1188c:	fc 01       	movw	r30, r24
   1188e:	c2 81       	ldd	r28, Z+2	; 0x02
   11890:	d3 81       	ldd	r29, Z+3	; 0x03
   11892:	20 97       	sbiw	r28, 0x00	; 0
   11894:	a9 f0       	breq	.+42     	; 0x118c0 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   11896:	6a 81       	ldd	r22, Y+2	; 0x02
   11898:	7b 81       	ldd	r23, Y+3	; 0x03
   1189a:	01 15       	cp	r16, r1
   1189c:	11 05       	cpc	r17, r1
   1189e:	19 f0       	breq	.+6      	; 0x118a6 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x24>
   118a0:	61 15       	cp	r22, r1
   118a2:	71 05       	cpc	r23, r1
   118a4:	21 f4       	brne	.+8      	; 0x118ae <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2c>
   118a6:	60 17       	cp	r22, r16
   118a8:	71 07       	cpc	r23, r17
   118aa:	31 f4       	brne	.+12     	; 0x118b8 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x36>
   118ac:	09 c0       	rjmp	.+18     	; 0x118c0 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   118ae:	c8 01       	movw	r24, r16
   118b0:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   118b4:	89 2b       	or	r24, r25
   118b6:	21 f0       	breq	.+8      	; 0x118c0 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   118b8:	09 90       	ld	r0, Y+
   118ba:	d8 81       	ld	r29, Y
   118bc:	c0 2d       	mov	r28, r0
   118be:	e9 cf       	rjmp	.-46     	; 0x11892 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   118c0:	ce 01       	movw	r24, r28
   118c2:	df 91       	pop	r29
   118c4:	cf 91       	pop	r28
   118c6:	1f 91       	pop	r17
   118c8:	0f 91       	pop	r16
   118ca:	08 95       	ret

000118cc <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>:
   118cc:	ef 92       	push	r14
   118ce:	ff 92       	push	r15
   118d0:	0f 93       	push	r16
   118d2:	1f 93       	push	r17
   118d4:	cf 93       	push	r28
   118d6:	df 93       	push	r29
   118d8:	61 15       	cp	r22, r1
   118da:	71 05       	cpc	r23, r1
   118dc:	c1 f0       	breq	.+48     	; 0x1190e <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   118de:	7a 01       	movw	r14, r20
   118e0:	eb 01       	movw	r28, r22
   118e2:	8c 01       	movw	r16, r24
   118e4:	ce df       	rcall	.-100    	; 0x11882 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   118e6:	00 97       	sbiw	r24, 0x00	; 0
   118e8:	39 f4       	brne	.+14     	; 0x118f8 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x2c>
   118ea:	c8 01       	movw	r24, r16
   118ec:	92 de       	rcall	.-732    	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   118ee:	00 97       	sbiw	r24, 0x00	; 0
   118f0:	71 f0       	breq	.+28     	; 0x1190e <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   118f2:	fc 01       	movw	r30, r24
   118f4:	d3 83       	std	Z+3, r29	; 0x03
   118f6:	c2 83       	std	Z+2, r28	; 0x02
   118f8:	f7 01       	movw	r30, r14
   118fa:	60 81       	ld	r22, Z
   118fc:	71 81       	ldd	r23, Z+1	; 0x01
   118fe:	04 96       	adiw	r24, 0x04	; 4
   11900:	df 91       	pop	r29
   11902:	cf 91       	pop	r28
   11904:	1f 91       	pop	r17
   11906:	0f 91       	pop	r16
   11908:	ff 90       	pop	r15
   1190a:	ef 90       	pop	r14
   1190c:	78 c9       	rjmp	.-3344   	; 0x10bfe <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   1190e:	80 e0       	ldi	r24, 0x00	; 0
   11910:	df 91       	pop	r29
   11912:	cf 91       	pop	r28
   11914:	1f 91       	pop	r17
   11916:	0f 91       	pop	r16
   11918:	ff 90       	pop	r15
   1191a:	ef 90       	pop	r14
   1191c:	08 95       	ret

0001191e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>:
   1191e:	cf 92       	push	r12
   11920:	df 92       	push	r13
   11922:	ef 92       	push	r14
   11924:	ff 92       	push	r15
   11926:	0f 93       	push	r16
   11928:	1f 93       	push	r17
   1192a:	cf 93       	push	r28
   1192c:	df 93       	push	r29
   1192e:	00 d0       	rcall	.+0      	; 0x11930 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x12>
   11930:	1f 92       	push	r1
   11932:	1f 92       	push	r1
   11934:	cd b7       	in	r28, 0x3d	; 61
   11936:	de b7       	in	r29, 0x3e	; 62
   11938:	7c 01       	movw	r14, r24
   1193a:	fc 01       	movw	r30, r24
   1193c:	86 81       	ldd	r24, Z+6	; 0x06
   1193e:	88 23       	and	r24, r24
   11940:	09 f4       	brne	.+2      	; 0x11944 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x26>
   11942:	67 c0       	rjmp	.+206    	; 0x11a12 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11944:	81 50       	subi	r24, 0x01	; 1
   11946:	f7 01       	movw	r30, r14
   11948:	86 83       	std	Z+6, r24	; 0x06
   1194a:	00 81       	ld	r16, Z
   1194c:	11 81       	ldd	r17, Z+1	; 0x01
   1194e:	b8 01       	movw	r22, r16
   11950:	84 e0       	ldi	r24, 0x04	; 4
   11952:	90 e0       	ldi	r25, 0x00	; 0
   11954:	82 d9       	rcall	.-3324   	; 0x10c5a <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   11956:	00 97       	sbiw	r24, 0x00	; 0
   11958:	09 f4       	brne	.+2      	; 0x1195c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x3e>
   1195a:	5d c0       	rjmp	.+186    	; 0x11a16 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf8>
   1195c:	fc 01       	movw	r30, r24
   1195e:	11 83       	std	Z+1, r17	; 0x01
   11960:	00 83       	st	Z, r16
   11962:	13 82       	std	Z+3, r1	; 0x03
   11964:	12 82       	std	Z+2, r1	; 0x02
   11966:	8c 01       	movw	r16, r24
   11968:	67 01       	movw	r12, r14
   1196a:	f2 e0       	ldi	r31, 0x02	; 2
   1196c:	cf 0e       	add	r12, r31
   1196e:	d1 1c       	adc	r13, r1
   11970:	6b e5       	ldi	r22, 0x5B	; 91
   11972:	c6 01       	movw	r24, r12
   11974:	a8 dd       	rcall	.-1200   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11976:	88 23       	and	r24, r24
   11978:	09 f4       	brne	.+2      	; 0x1197c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x5e>
   1197a:	4b c0       	rjmp	.+150    	; 0x11a12 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   1197c:	6d e5       	ldi	r22, 0x5D	; 93
   1197e:	c6 01       	movw	r24, r12
   11980:	a2 dd       	rcall	.-1212   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11982:	81 11       	cpse	r24, r1
   11984:	40 c0       	rjmp	.+128    	; 0x11a06 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   11986:	19 82       	std	Y+1, r1	; 0x01
   11988:	be 01       	movw	r22, r28
   1198a:	6f 5f       	subi	r22, 0xFF	; 255
   1198c:	7f 4f       	sbci	r23, 0xFF	; 255
   1198e:	c7 01       	movw	r24, r14
   11990:	52 d0       	rcall	.+164    	; 0x11a36 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   11992:	88 23       	and	r24, r24
   11994:	09 f4       	brne	.+2      	; 0x11998 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x7a>
   11996:	3d c0       	rjmp	.+122    	; 0x11a12 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11998:	f8 01       	movw	r30, r16
   1199a:	60 81       	ld	r22, Z
   1199c:	71 81       	ldd	r23, Z+1	; 0x01
   1199e:	87 e0       	ldi	r24, 0x07	; 7
   119a0:	90 e0       	ldi	r25, 0x00	; 0
   119a2:	5b d9       	rcall	.-3402   	; 0x10c5a <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   119a4:	dc 01       	movw	r26, r24
   119a6:	89 2b       	or	r24, r25
   119a8:	31 f0       	breq	.+12     	; 0x119b6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x98>
   119aa:	11 96       	adiw	r26, 0x01	; 1
   119ac:	1c 92       	st	X, r1
   119ae:	1e 92       	st	-X, r1
   119b0:	12 96       	adiw	r26, 0x02	; 2
   119b2:	1c 92       	st	X, r1
   119b4:	12 97       	sbiw	r26, 0x02	; 2
   119b6:	f8 01       	movw	r30, r16
   119b8:	22 81       	ldd	r18, Z+2	; 0x02
   119ba:	33 81       	ldd	r19, Z+3	; 0x03
   119bc:	21 15       	cp	r18, r1
   119be:	31 05       	cpc	r19, r1
   119c0:	51 f0       	breq	.+20     	; 0x119d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb8>
   119c2:	f9 01       	movw	r30, r18
   119c4:	80 81       	ld	r24, Z
   119c6:	91 81       	ldd	r25, Z+1	; 0x01
   119c8:	00 97       	sbiw	r24, 0x00	; 0
   119ca:	11 f0       	breq	.+4      	; 0x119d0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb2>
   119cc:	9c 01       	movw	r18, r24
   119ce:	f9 cf       	rjmp	.-14     	; 0x119c2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xa4>
   119d0:	b1 83       	std	Z+1, r27	; 0x01
   119d2:	a0 83       	st	Z, r26
   119d4:	03 c0       	rjmp	.+6      	; 0x119dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xbe>
   119d6:	f8 01       	movw	r30, r16
   119d8:	b3 83       	std	Z+3, r27	; 0x03
   119da:	a2 83       	std	Z+2, r26	; 0x02
   119dc:	10 97       	sbiw	r26, 0x00	; 0
   119de:	c9 f0       	breq	.+50     	; 0x11a12 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   119e0:	85 e0       	ldi	r24, 0x05	; 5
   119e2:	fe 01       	movw	r30, r28
   119e4:	31 96       	adiw	r30, 0x01	; 1
   119e6:	12 96       	adiw	r26, 0x02	; 2
   119e8:	01 90       	ld	r0, Z+
   119ea:	0d 92       	st	X+, r0
   119ec:	8a 95       	dec	r24
   119ee:	e1 f7       	brne	.-8      	; 0x119e8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xca>
   119f0:	6d e5       	ldi	r22, 0x5D	; 93
   119f2:	c6 01       	movw	r24, r12
   119f4:	68 dd       	rcall	.-1328   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   119f6:	81 11       	cpse	r24, r1
   119f8:	06 c0       	rjmp	.+12     	; 0x11a06 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   119fa:	6c e2       	ldi	r22, 0x2C	; 44
   119fc:	c6 01       	movw	r24, r12
   119fe:	63 dd       	rcall	.-1338   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11a00:	81 11       	cpse	r24, r1
   11a02:	c1 cf       	rjmp	.-126    	; 0x11986 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x68>
   11a04:	06 c0       	rjmp	.+12     	; 0x11a12 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11a06:	f7 01       	movw	r30, r14
   11a08:	86 81       	ldd	r24, Z+6	; 0x06
   11a0a:	8f 5f       	subi	r24, 0xFF	; 255
   11a0c:	86 83       	std	Z+6, r24	; 0x06
   11a0e:	c8 01       	movw	r24, r16
   11a10:	04 c0       	rjmp	.+8      	; 0x11a1a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   11a12:	32 d9       	rcall	.-3484   	; 0x10c78 <_ZN11ArduinoJson9JsonArray7invalidEv>
   11a14:	02 c0       	rjmp	.+4      	; 0x11a1a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   11a16:	30 d9       	rcall	.-3488   	; 0x10c78 <_ZN11ArduinoJson9JsonArray7invalidEv>
   11a18:	a6 cf       	rjmp	.-180    	; 0x11966 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x48>
   11a1a:	0f 90       	pop	r0
   11a1c:	0f 90       	pop	r0
   11a1e:	0f 90       	pop	r0
   11a20:	0f 90       	pop	r0
   11a22:	0f 90       	pop	r0
   11a24:	df 91       	pop	r29
   11a26:	cf 91       	pop	r28
   11a28:	1f 91       	pop	r17
   11a2a:	0f 91       	pop	r16
   11a2c:	ff 90       	pop	r15
   11a2e:	ef 90       	pop	r14
   11a30:	df 90       	pop	r13
   11a32:	cf 90       	pop	r12
   11a34:	08 95       	ret

00011a36 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>:
   11a36:	ef 92       	push	r14
   11a38:	ff 92       	push	r15
   11a3a:	0f 93       	push	r16
   11a3c:	1f 93       	push	r17
   11a3e:	cf 93       	push	r28
   11a40:	7c 01       	movw	r14, r24
   11a42:	8b 01       	movw	r16, r22
   11a44:	02 96       	adiw	r24, 0x02	; 2
   11a46:	fd dc       	rcall	.-1542   	; 0x11442 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11a48:	d7 01       	movw	r26, r14
   11a4a:	12 96       	adiw	r26, 0x02	; 2
   11a4c:	ed 91       	ld	r30, X+
   11a4e:	fc 91       	ld	r31, X
   11a50:	13 97       	sbiw	r26, 0x03	; 3
   11a52:	80 81       	ld	r24, Z
   11a54:	8b 35       	cpi	r24, 0x5B	; 91
   11a56:	19 f0       	breq	.+6      	; 0x11a5e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x28>
   11a58:	8b 37       	cpi	r24, 0x7B	; 123
   11a5a:	61 f0       	breq	.+24     	; 0x11a74 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3e>
   11a5c:	14 c0       	rjmp	.+40     	; 0x11a86 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x50>
   11a5e:	c7 01       	movw	r24, r14
   11a60:	5e df       	rcall	.-324    	; 0x1191e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>
   11a62:	fc 01       	movw	r30, r24
   11a64:	20 81       	ld	r18, Z
   11a66:	31 81       	ldd	r19, Z+1	; 0x01
   11a68:	23 2b       	or	r18, r19
   11a6a:	11 f4       	brne	.+4      	; 0x11a70 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3a>
   11a6c:	c0 e0       	ldi	r28, 0x00	; 0
   11a6e:	25 c0       	rjmp	.+74     	; 0x11aba <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   11a70:	26 e0       	ldi	r18, 0x06	; 6
   11a72:	1c c0       	rjmp	.+56     	; 0x11aac <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   11a74:	c7 01       	movw	r24, r14
   11a76:	28 d0       	rcall	.+80     	; 0x11ac8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   11a78:	fc 01       	movw	r30, r24
   11a7a:	20 81       	ld	r18, Z
   11a7c:	31 81       	ldd	r19, Z+1	; 0x01
   11a7e:	23 2b       	or	r18, r19
   11a80:	a9 f3       	breq	.-22     	; 0x11a6c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11a82:	27 e0       	ldi	r18, 0x07	; 7
   11a84:	13 c0       	rjmp	.+38     	; 0x11aac <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   11a86:	c1 e0       	ldi	r28, 0x01	; 1
   11a88:	87 32       	cpi	r24, 0x27	; 39
   11a8a:	19 f0       	breq	.+6      	; 0x11a92 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11a8c:	82 32       	cpi	r24, 0x22	; 34
   11a8e:	09 f0       	breq	.+2      	; 0x11a92 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   11a90:	c0 e0       	ldi	r28, 0x00	; 0
   11a92:	c7 01       	movw	r24, r14
   11a94:	2d dd       	rcall	.-1446   	; 0x114f0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   11a96:	00 97       	sbiw	r24, 0x00	; 0
   11a98:	49 f3       	breq	.-46     	; 0x11a6c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11a9a:	cc 23       	and	r28, r28
   11a9c:	31 f0       	breq	.+12     	; 0x11aaa <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x74>
   11a9e:	22 e0       	ldi	r18, 0x02	; 2
   11aa0:	f8 01       	movw	r30, r16
   11aa2:	20 83       	st	Z, r18
   11aa4:	92 83       	std	Z+2, r25	; 0x02
   11aa6:	81 83       	std	Z+1, r24	; 0x01
   11aa8:	08 c0       	rjmp	.+16     	; 0x11aba <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   11aaa:	21 e0       	ldi	r18, 0x01	; 1
   11aac:	d8 01       	movw	r26, r16
   11aae:	2c 93       	st	X, r18
   11ab0:	12 96       	adiw	r26, 0x02	; 2
   11ab2:	9c 93       	st	X, r25
   11ab4:	8e 93       	st	-X, r24
   11ab6:	11 97       	sbiw	r26, 0x01	; 1
   11ab8:	c1 e0       	ldi	r28, 0x01	; 1
   11aba:	8c 2f       	mov	r24, r28
   11abc:	cf 91       	pop	r28
   11abe:	1f 91       	pop	r17
   11ac0:	0f 91       	pop	r16
   11ac2:	ff 90       	pop	r15
   11ac4:	ef 90       	pop	r14
   11ac6:	08 95       	ret

00011ac8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>:
   11ac8:	af 92       	push	r10
   11aca:	bf 92       	push	r11
   11acc:	cf 92       	push	r12
   11ace:	df 92       	push	r13
   11ad0:	ef 92       	push	r14
   11ad2:	ff 92       	push	r15
   11ad4:	0f 93       	push	r16
   11ad6:	1f 93       	push	r17
   11ad8:	cf 93       	push	r28
   11ada:	df 93       	push	r29
   11adc:	00 d0       	rcall	.+0      	; 0x11ade <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x16>
   11ade:	1f 92       	push	r1
   11ae0:	1f 92       	push	r1
   11ae2:	cd b7       	in	r28, 0x3d	; 61
   11ae4:	de b7       	in	r29, 0x3e	; 62
   11ae6:	7c 01       	movw	r14, r24
   11ae8:	fc 01       	movw	r30, r24
   11aea:	86 81       	ldd	r24, Z+6	; 0x06
   11aec:	88 23       	and	r24, r24
   11aee:	09 f4       	brne	.+2      	; 0x11af2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x2a>
   11af0:	4b c0       	rjmp	.+150    	; 0x11b88 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11af2:	81 50       	subi	r24, 0x01	; 1
   11af4:	f7 01       	movw	r30, r14
   11af6:	86 83       	std	Z+6, r24	; 0x06
   11af8:	81 91       	ld	r24, Z+
   11afa:	91 91       	ld	r25, Z+
   11afc:	6f 01       	movw	r12, r30
   11afe:	e0 d8       	rcall	.-3648   	; 0x10cc0 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   11b00:	8c 01       	movw	r16, r24
   11b02:	6b e7       	ldi	r22, 0x7B	; 123
   11b04:	c6 01       	movw	r24, r12
   11b06:	df dc       	rcall	.-1602   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b08:	88 23       	and	r24, r24
   11b0a:	09 f4       	brne	.+2      	; 0x11b0e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x46>
   11b0c:	3d c0       	rjmp	.+122    	; 0x11b88 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b0e:	6d e7       	ldi	r22, 0x7D	; 125
   11b10:	c6 01       	movw	r24, r12
   11b12:	d9 dc       	rcall	.-1614   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b14:	81 11       	cpse	r24, r1
   11b16:	32 c0       	rjmp	.+100    	; 0x11b7c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   11b18:	c7 01       	movw	r24, r14
   11b1a:	ea dc       	rcall	.-1580   	; 0x114f0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   11b1c:	5c 01       	movw	r10, r24
   11b1e:	89 2b       	or	r24, r25
   11b20:	99 f1       	breq	.+102    	; 0x11b88 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b22:	6a e3       	ldi	r22, 0x3A	; 58
   11b24:	c6 01       	movw	r24, r12
   11b26:	cf dc       	rcall	.-1634   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b28:	88 23       	and	r24, r24
   11b2a:	71 f1       	breq	.+92     	; 0x11b88 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b2c:	19 82       	std	Y+1, r1	; 0x01
   11b2e:	be 01       	movw	r22, r28
   11b30:	6f 5f       	subi	r22, 0xFF	; 255
   11b32:	7f 4f       	sbci	r23, 0xFF	; 255
   11b34:	c7 01       	movw	r24, r14
   11b36:	7f df       	rcall	.-258    	; 0x11a36 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   11b38:	88 23       	and	r24, r24
   11b3a:	31 f1       	breq	.+76     	; 0x11b88 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b3c:	b5 01       	movw	r22, r10
   11b3e:	c8 01       	movw	r24, r16
   11b40:	a0 de       	rcall	.-704    	; 0x11882 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11b42:	00 97       	sbiw	r24, 0x00	; 0
   11b44:	39 f4       	brne	.+14     	; 0x11b54 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x8c>
   11b46:	c8 01       	movw	r24, r16
   11b48:	64 dd       	rcall	.-1336   	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11b4a:	00 97       	sbiw	r24, 0x00	; 0
   11b4c:	e9 f0       	breq	.+58     	; 0x11b88 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b4e:	fc 01       	movw	r30, r24
   11b50:	b3 82       	std	Z+3, r11	; 0x03
   11b52:	a2 82       	std	Z+2, r10	; 0x02
   11b54:	25 e0       	ldi	r18, 0x05	; 5
   11b56:	fe 01       	movw	r30, r28
   11b58:	31 96       	adiw	r30, 0x01	; 1
   11b5a:	dc 01       	movw	r26, r24
   11b5c:	14 96       	adiw	r26, 0x04	; 4
   11b5e:	01 90       	ld	r0, Z+
   11b60:	0d 92       	st	X+, r0
   11b62:	2a 95       	dec	r18
   11b64:	e1 f7       	brne	.-8      	; 0x11b5e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x96>
   11b66:	6d e7       	ldi	r22, 0x7D	; 125
   11b68:	c6 01       	movw	r24, r12
   11b6a:	ad dc       	rcall	.-1702   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b6c:	81 11       	cpse	r24, r1
   11b6e:	06 c0       	rjmp	.+12     	; 0x11b7c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   11b70:	6c e2       	ldi	r22, 0x2C	; 44
   11b72:	c6 01       	movw	r24, r12
   11b74:	a8 dc       	rcall	.-1712   	; 0x114c6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11b76:	81 11       	cpse	r24, r1
   11b78:	cf cf       	rjmp	.-98     	; 0x11b18 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x50>
   11b7a:	06 c0       	rjmp	.+12     	; 0x11b88 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11b7c:	f7 01       	movw	r30, r14
   11b7e:	86 81       	ldd	r24, Z+6	; 0x06
   11b80:	8f 5f       	subi	r24, 0xFF	; 255
   11b82:	86 83       	std	Z+6, r24	; 0x06
   11b84:	c8 01       	movw	r24, r16
   11b86:	01 c0       	rjmp	.+2      	; 0x11b8a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc2>
   11b88:	89 d8       	rcall	.-3822   	; 0x10c9c <_ZN11ArduinoJson10JsonObject7invalidEv>
   11b8a:	0f 90       	pop	r0
   11b8c:	0f 90       	pop	r0
   11b8e:	0f 90       	pop	r0
   11b90:	0f 90       	pop	r0
   11b92:	0f 90       	pop	r0
   11b94:	df 91       	pop	r29
   11b96:	cf 91       	pop	r28
   11b98:	1f 91       	pop	r17
   11b9a:	0f 91       	pop	r16
   11b9c:	ff 90       	pop	r15
   11b9e:	ef 90       	pop	r14
   11ba0:	df 90       	pop	r13
   11ba2:	cf 90       	pop	r12
   11ba4:	bf 90       	pop	r11
   11ba6:	af 90       	pop	r10
   11ba8:	08 95       	ret

00011baa <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>:
   11baa:	0f cd       	rjmp	.-1506   	; 0x115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11bac:	08 95       	ret

00011bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11bae:	1f 93       	push	r17
   11bb0:	cf 93       	push	r28
   11bb2:	df 93       	push	r29
   11bb4:	fa df       	rcall	.-12     	; 0x11baa <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11bb6:	ec 01       	movw	r28, r24
   11bb8:	89 2b       	or	r24, r25
   11bba:	a1 f0       	breq	.+40     	; 0x11be4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11bbc:	1c 81       	ldd	r17, Y+4	; 0x04
   11bbe:	11 30       	cpi	r17, 0x01	; 1
   11bc0:	59 f4       	brne	.+22     	; 0x11bd8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11bc2:	6d 81       	ldd	r22, Y+5	; 0x05
   11bc4:	7e 81       	ldd	r23, Y+6	; 0x06
   11bc6:	61 15       	cp	r22, r1
   11bc8:	71 05       	cpc	r23, r1
   11bca:	31 f0       	breq	.+12     	; 0x11bd8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   11bcc:	8c ee       	ldi	r24, 0xEC	; 236
   11bce:	96 e0       	ldi	r25, 0x06	; 6
   11bd0:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   11bd4:	89 2b       	or	r24, r25
   11bd6:	31 f0       	breq	.+12     	; 0x11be4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11bd8:	11 50       	subi	r17, 0x01	; 1
   11bda:	12 30       	cpi	r17, 0x02	; 2
   11bdc:	18 f4       	brcc	.+6      	; 0x11be4 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11bde:	8d 81       	ldd	r24, Y+5	; 0x05
   11be0:	9e 81       	ldd	r25, Y+6	; 0x06
   11be2:	02 c0       	rjmp	.+4      	; 0x11be8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x3a>
   11be4:	80 e0       	ldi	r24, 0x00	; 0
   11be6:	90 e0       	ldi	r25, 0x00	; 0
   11be8:	df 91       	pop	r29
   11bea:	cf 91       	pop	r28
   11bec:	1f 91       	pop	r17
   11bee:	08 95       	ret

00011bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11bf0:	dc df       	rcall	.-72     	; 0x11baa <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11bf2:	00 97       	sbiw	r24, 0x00	; 0
   11bf4:	39 f0       	breq	.+14     	; 0x11c04 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11bf6:	fc 01       	movw	r30, r24
   11bf8:	24 81       	ldd	r18, Z+4	; 0x04
   11bfa:	26 30       	cpi	r18, 0x06	; 6
   11bfc:	19 f4       	brne	.+6      	; 0x11c04 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11bfe:	85 81       	ldd	r24, Z+5	; 0x05
   11c00:	96 81       	ldd	r25, Z+6	; 0x06
   11c02:	08 95       	ret
   11c04:	39 c8       	rjmp	.-3982   	; 0x10c78 <_ZN11ArduinoJson9JsonArray7invalidEv>

00011c06 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>:
   11c06:	fc 01       	movw	r30, r24
   11c08:	80 81       	ld	r24, Z
   11c0a:	83 30       	cpi	r24, 0x03	; 3
   11c0c:	18 f4       	brcc	.+6      	; 0x11c14 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0xe>
   11c0e:	81 30       	cpi	r24, 0x01	; 1
   11c10:	e8 f1       	brcs	.+122    	; 0x11c8c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11c12:	0a c0       	rjmp	.+20     	; 0x11c28 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x22>
   11c14:	85 30       	cpi	r24, 0x05	; 5
   11c16:	28 f0       	brcs	.+10     	; 0x11c22 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x1c>
   11c18:	85 30       	cpi	r24, 0x05	; 5
   11c1a:	89 f5       	brne	.+98     	; 0x11c7e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x78>
   11c1c:	61 81       	ldd	r22, Z+1	; 0x01
   11c1e:	72 81       	ldd	r23, Z+2	; 0x02
   11c20:	29 c0       	rjmp	.+82     	; 0x11c74 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6e>
   11c22:	81 81       	ldd	r24, Z+1	; 0x01
   11c24:	92 81       	ldd	r25, Z+2	; 0x02
   11c26:	08 95       	ret
   11c28:	01 80       	ldd	r0, Z+1	; 0x01
   11c2a:	f2 81       	ldd	r31, Z+2	; 0x02
   11c2c:	e0 2d       	mov	r30, r0
   11c2e:	30 97       	sbiw	r30, 0x00	; 0
   11c30:	69 f1       	breq	.+90     	; 0x11c8c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11c32:	80 81       	ld	r24, Z
   11c34:	84 37       	cpi	r24, 0x74	; 116
   11c36:	69 f1       	breq	.+90     	; 0x11c92 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x8c>
   11c38:	8b 32       	cpi	r24, 0x2B	; 43
   11c3a:	29 f0       	breq	.+10     	; 0x11c46 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x40>
   11c3c:	8d 32       	cpi	r24, 0x2D	; 45
   11c3e:	21 f4       	brne	.+8      	; 0x11c48 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x42>
   11c40:	31 96       	adiw	r30, 0x01	; 1
   11c42:	91 e0       	ldi	r25, 0x01	; 1
   11c44:	02 c0       	rjmp	.+4      	; 0x11c4a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x44>
   11c46:	31 96       	adiw	r30, 0x01	; 1
   11c48:	90 e0       	ldi	r25, 0x00	; 0
   11c4a:	60 e0       	ldi	r22, 0x00	; 0
   11c4c:	70 e0       	ldi	r23, 0x00	; 0
   11c4e:	4a e0       	ldi	r20, 0x0A	; 10
   11c50:	81 91       	ld	r24, Z+
   11c52:	20 ed       	ldi	r18, 0xD0	; 208
   11c54:	28 0f       	add	r18, r24
   11c56:	2a 30       	cpi	r18, 0x0A	; 10
   11c58:	58 f4       	brcc	.+22     	; 0x11c70 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6a>
   11c5a:	46 9f       	mul	r20, r22
   11c5c:	90 01       	movw	r18, r0
   11c5e:	47 9f       	mul	r20, r23
   11c60:	30 0d       	add	r19, r0
   11c62:	11 24       	eor	r1, r1
   11c64:	b9 01       	movw	r22, r18
   11c66:	60 53       	subi	r22, 0x30	; 48
   11c68:	71 09       	sbc	r23, r1
   11c6a:	68 0f       	add	r22, r24
   11c6c:	71 1d       	adc	r23, r1
   11c6e:	f0 cf       	rjmp	.-32     	; 0x11c50 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x4a>
   11c70:	99 23       	and	r25, r25
   11c72:	91 f0       	breq	.+36     	; 0x11c98 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   11c74:	88 27       	eor	r24, r24
   11c76:	99 27       	eor	r25, r25
   11c78:	86 1b       	sub	r24, r22
   11c7a:	97 0b       	sbc	r25, r23
   11c7c:	08 95       	ret
   11c7e:	61 81       	ldd	r22, Z+1	; 0x01
   11c80:	72 81       	ldd	r23, Z+2	; 0x02
   11c82:	83 81       	ldd	r24, Z+3	; 0x03
   11c84:	94 81       	ldd	r25, Z+4	; 0x04
   11c86:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <__fixunssfsi>
   11c8a:	06 c0       	rjmp	.+12     	; 0x11c98 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   11c8c:	80 e0       	ldi	r24, 0x00	; 0
   11c8e:	90 e0       	ldi	r25, 0x00	; 0
   11c90:	08 95       	ret
   11c92:	81 e0       	ldi	r24, 0x01	; 1
   11c94:	90 e0       	ldi	r25, 0x00	; 0
   11c96:	08 95       	ret
   11c98:	cb 01       	movw	r24, r22
   11c9a:	08 95       	ret

00011c9c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11c9c:	86 df       	rcall	.-244    	; 0x11baa <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11c9e:	00 97       	sbiw	r24, 0x00	; 0
   11ca0:	11 f0       	breq	.+4      	; 0x11ca6 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   11ca2:	04 96       	adiw	r24, 0x04	; 4
   11ca4:	b0 cf       	rjmp	.-160    	; 0x11c06 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   11ca6:	80 e0       	ldi	r24, 0x00	; 0
   11ca8:	90 e0       	ldi	r25, 0x00	; 0
   11caa:	08 95       	ret

00011cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11cac:	fc 01       	movw	r30, r24
   11cae:	82 81       	ldd	r24, Z+2	; 0x02
   11cb0:	93 81       	ldd	r25, Z+3	; 0x03
   11cb2:	00 97       	sbiw	r24, 0x00	; 0
   11cb4:	59 f0       	breq	.+22     	; 0x11ccc <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   11cb6:	61 15       	cp	r22, r1
   11cb8:	71 05       	cpc	r23, r1
   11cba:	31 f0       	breq	.+12     	; 0x11cc8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11cbc:	fc 01       	movw	r30, r24
   11cbe:	80 81       	ld	r24, Z
   11cc0:	91 81       	ldd	r25, Z+1	; 0x01
   11cc2:	61 50       	subi	r22, 0x01	; 1
   11cc4:	71 09       	sbc	r23, r1
   11cc6:	f5 cf       	rjmp	.-22     	; 0x11cb2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11cc8:	02 96       	adiw	r24, 0x02	; 2
   11cca:	9d cf       	rjmp	.-198    	; 0x11c06 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   11ccc:	80 e0       	ldi	r24, 0x00	; 0
   11cce:	90 e0       	ldi	r25, 0x00	; 0
   11cd0:	08 95       	ret

00011cd2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>:
   11cd2:	fc 01       	movw	r30, r24
   11cd4:	80 81       	ld	r24, Z
   11cd6:	83 30       	cpi	r24, 0x03	; 3
   11cd8:	18 f4       	brcc	.+6      	; 0x11ce0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0xe>
   11cda:	81 30       	cpi	r24, 0x01	; 1
   11cdc:	98 f1       	brcs	.+102    	; 0x11d44 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11cde:	08 c0       	rjmp	.+16     	; 0x11cf0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1e>
   11ce0:	85 30       	cpi	r24, 0x05	; 5
   11ce2:	20 f0       	brcs	.+8      	; 0x11cec <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1a>
   11ce4:	85 30       	cpi	r24, 0x05	; 5
   11ce6:	39 f5       	brne	.+78     	; 0x11d36 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x64>
   11ce8:	61 81       	ldd	r22, Z+1	; 0x01
   11cea:	23 c0       	rjmp	.+70     	; 0x11d32 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x60>
   11cec:	61 81       	ldd	r22, Z+1	; 0x01
   11cee:	2d c0       	rjmp	.+90     	; 0x11d4a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11cf0:	01 80       	ldd	r0, Z+1	; 0x01
   11cf2:	f2 81       	ldd	r31, Z+2	; 0x02
   11cf4:	e0 2d       	mov	r30, r0
   11cf6:	30 97       	sbiw	r30, 0x00	; 0
   11cf8:	29 f1       	breq	.+74     	; 0x11d44 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11cfa:	80 81       	ld	r24, Z
   11cfc:	84 37       	cpi	r24, 0x74	; 116
   11cfe:	21 f1       	breq	.+72     	; 0x11d48 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x76>
   11d00:	8b 32       	cpi	r24, 0x2B	; 43
   11d02:	29 f0       	breq	.+10     	; 0x11d0e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3c>
   11d04:	8d 32       	cpi	r24, 0x2D	; 45
   11d06:	21 f4       	brne	.+8      	; 0x11d10 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3e>
   11d08:	31 96       	adiw	r30, 0x01	; 1
   11d0a:	91 e0       	ldi	r25, 0x01	; 1
   11d0c:	02 c0       	rjmp	.+4      	; 0x11d12 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x40>
   11d0e:	31 96       	adiw	r30, 0x01	; 1
   11d10:	90 e0       	ldi	r25, 0x00	; 0
   11d12:	60 e0       	ldi	r22, 0x00	; 0
   11d14:	21 91       	ld	r18, Z+
   11d16:	80 ed       	ldi	r24, 0xD0	; 208
   11d18:	82 0f       	add	r24, r18
   11d1a:	8a 30       	cpi	r24, 0x0A	; 10
   11d1c:	40 f4       	brcc	.+16     	; 0x11d2e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x5c>
   11d1e:	66 0f       	add	r22, r22
   11d20:	86 2f       	mov	r24, r22
   11d22:	88 0f       	add	r24, r24
   11d24:	88 0f       	add	r24, r24
   11d26:	68 0f       	add	r22, r24
   11d28:	60 53       	subi	r22, 0x30	; 48
   11d2a:	62 0f       	add	r22, r18
   11d2c:	f3 cf       	rjmp	.-26     	; 0x11d14 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x42>
   11d2e:	99 23       	and	r25, r25
   11d30:	61 f0       	breq	.+24     	; 0x11d4a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11d32:	61 95       	neg	r22
   11d34:	0a c0       	rjmp	.+20     	; 0x11d4a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11d36:	61 81       	ldd	r22, Z+1	; 0x01
   11d38:	72 81       	ldd	r23, Z+2	; 0x02
   11d3a:	83 81       	ldd	r24, Z+3	; 0x03
   11d3c:	94 81       	ldd	r25, Z+4	; 0x04
   11d3e:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <__fixunssfsi>
   11d42:	03 c0       	rjmp	.+6      	; 0x11d4a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11d44:	60 e0       	ldi	r22, 0x00	; 0
   11d46:	01 c0       	rjmp	.+2      	; 0x11d4a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11d48:	61 e0       	ldi	r22, 0x01	; 1
   11d4a:	86 2f       	mov	r24, r22
   11d4c:	08 95       	ret

00011d4e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11d4e:	fc 01       	movw	r30, r24
   11d50:	82 81       	ldd	r24, Z+2	; 0x02
   11d52:	93 81       	ldd	r25, Z+3	; 0x03
   11d54:	00 97       	sbiw	r24, 0x00	; 0
   11d56:	59 f0       	breq	.+22     	; 0x11d6e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   11d58:	61 15       	cp	r22, r1
   11d5a:	71 05       	cpc	r23, r1
   11d5c:	31 f0       	breq	.+12     	; 0x11d6a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11d5e:	fc 01       	movw	r30, r24
   11d60:	80 81       	ld	r24, Z
   11d62:	91 81       	ldd	r25, Z+1	; 0x01
   11d64:	61 50       	subi	r22, 0x01	; 1
   11d66:	71 09       	sbc	r23, r1
   11d68:	f5 cf       	rjmp	.-22     	; 0x11d54 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11d6a:	02 96       	adiw	r24, 0x02	; 2
   11d6c:	b2 cf       	rjmp	.-156    	; 0x11cd2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11d6e:	80 e0       	ldi	r24, 0x00	; 0
   11d70:	08 95       	ret

00011d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11d72:	1b df       	rcall	.-458    	; 0x11baa <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11d74:	00 97       	sbiw	r24, 0x00	; 0
   11d76:	11 f0       	breq	.+4      	; 0x11d7c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   11d78:	04 96       	adiw	r24, 0x04	; 4
   11d7a:	ab cf       	rjmp	.-170    	; 0x11cd2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11d7c:	80 e0       	ldi	r24, 0x00	; 0
   11d7e:	08 95       	ret

00011d80 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>:
   11d80:	2f 92       	push	r2
   11d82:	3f 92       	push	r3
   11d84:	4f 92       	push	r4
   11d86:	5f 92       	push	r5
   11d88:	6f 92       	push	r6
   11d8a:	7f 92       	push	r7
   11d8c:	8f 92       	push	r8
   11d8e:	9f 92       	push	r9
   11d90:	af 92       	push	r10
   11d92:	bf 92       	push	r11
   11d94:	cf 92       	push	r12
   11d96:	df 92       	push	r13
   11d98:	ef 92       	push	r14
   11d9a:	ff 92       	push	r15
   11d9c:	0f 93       	push	r16
   11d9e:	1f 93       	push	r17
   11da0:	cf 93       	push	r28
   11da2:	df 93       	push	r29
   11da4:	00 d0       	rcall	.+0      	; 0x11da6 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x26>
   11da6:	1f 92       	push	r1
   11da8:	cd b7       	in	r28, 0x3d	; 61
   11daa:	de b7       	in	r29, 0x3e	; 62
   11dac:	1c 01       	movw	r2, r24
   11dae:	6a 01       	movw	r12, r20
   11db0:	7b 01       	movw	r14, r22
   11db2:	86 e0       	ldi	r24, 0x06	; 6
   11db4:	d1 01       	movw	r26, r2
   11db6:	1a 96       	adiw	r26, 0x0a	; 10
   11db8:	8c 93       	st	X, r24
   11dba:	20 e8       	ldi	r18, 0x80	; 128
   11dbc:	36 e9       	ldi	r19, 0x96	; 150
   11dbe:	48 e1       	ldi	r20, 0x18	; 24
   11dc0:	5b e4       	ldi	r21, 0x4B	; 75
   11dc2:	c7 01       	movw	r24, r14
   11dc4:	b6 01       	movw	r22, r12
   11dc6:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
   11dca:	87 fd       	sbrc	r24, 7
   11dcc:	3a c0       	rjmp	.+116    	; 0x11e42 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xc2>
   11dce:	52 e5       	ldi	r21, 0x52	; 82
   11dd0:	85 2e       	mov	r8, r21
   11dd2:	52 e0       	ldi	r21, 0x02	; 2
   11dd4:	95 2e       	mov	r9, r21
   11dd6:	62 e2       	ldi	r22, 0x22	; 34
   11dd8:	a6 2e       	mov	r10, r22
   11dda:	62 e0       	ldi	r22, 0x02	; 2
   11ddc:	b6 2e       	mov	r11, r22
   11dde:	e0 e2       	ldi	r30, 0x20	; 32
   11de0:	f0 e0       	ldi	r31, 0x00	; 0
   11de2:	fa 83       	std	Y+2, r31	; 0x02
   11de4:	e9 83       	std	Y+1, r30	; 0x01
   11de6:	00 e0       	ldi	r16, 0x00	; 0
   11de8:	10 e0       	ldi	r17, 0x00	; 0
   11dea:	a7 01       	movw	r20, r14
   11dec:	96 01       	movw	r18, r12
   11dee:	d4 01       	movw	r26, r8
   11df0:	9e 91       	ld	r25, -X
   11df2:	8e 91       	ld	r24, -X
   11df4:	7e 91       	ld	r23, -X
   11df6:	6e 91       	ld	r22, -X
   11df8:	4d 01       	movw	r8, r26
   11dfa:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
   11dfe:	18 16       	cp	r1, r24
   11e00:	7c f0       	brlt	.+30     	; 0x11e20 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xa0>
   11e02:	f5 01       	movw	r30, r10
   11e04:	24 89       	ldd	r18, Z+20	; 0x14
   11e06:	35 89       	ldd	r19, Z+21	; 0x15
   11e08:	46 89       	ldd	r20, Z+22	; 0x16
   11e0a:	57 89       	ldd	r21, Z+23	; 0x17
   11e0c:	c7 01       	movw	r24, r14
   11e0e:	b6 01       	movw	r22, r12
   11e10:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
   11e14:	6b 01       	movw	r12, r22
   11e16:	7c 01       	movw	r14, r24
   11e18:	89 81       	ldd	r24, Y+1	; 0x01
   11e1a:	9a 81       	ldd	r25, Y+2	; 0x02
   11e1c:	08 0f       	add	r16, r24
   11e1e:	19 1f       	adc	r17, r25
   11e20:	a9 81       	ldd	r26, Y+1	; 0x01
   11e22:	ba 81       	ldd	r27, Y+2	; 0x02
   11e24:	b5 95       	asr	r27
   11e26:	a7 95       	ror	r26
   11e28:	ba 83       	std	Y+2, r27	; 0x02
   11e2a:	a9 83       	std	Y+1, r26	; 0x01
   11e2c:	b4 e0       	ldi	r27, 0x04	; 4
   11e2e:	ab 1a       	sub	r10, r27
   11e30:	b1 08       	sbc	r11, r1
   11e32:	ea e3       	ldi	r30, 0x3A	; 58
   11e34:	8e 16       	cp	r8, r30
   11e36:	e2 e0       	ldi	r30, 0x02	; 2
   11e38:	9e 06       	cpc	r9, r30
   11e3a:	b9 f6       	brne	.-82     	; 0x11dea <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x6a>
   11e3c:	bb 24       	eor	r11, r11
   11e3e:	ba 94       	dec	r11
   11e40:	08 c0       	rjmp	.+16     	; 0x11e52 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xd2>
   11e42:	80 e2       	ldi	r24, 0x20	; 32
   11e44:	90 e0       	ldi	r25, 0x00	; 0
   11e46:	9a 83       	std	Y+2, r25	; 0x02
   11e48:	89 83       	std	Y+1, r24	; 0x01
   11e4a:	35 e0       	ldi	r19, 0x05	; 5
   11e4c:	b3 2e       	mov	r11, r19
   11e4e:	00 e0       	ldi	r16, 0x00	; 0
   11e50:	10 e0       	ldi	r17, 0x00	; 0
   11e52:	20 e0       	ldi	r18, 0x00	; 0
   11e54:	30 e0       	ldi	r19, 0x00	; 0
   11e56:	a9 01       	movw	r20, r18
   11e58:	c7 01       	movw	r24, r14
   11e5a:	b6 01       	movw	r22, r12
   11e5c:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
   11e60:	18 16       	cp	r1, r24
   11e62:	c4 f5       	brge	.+112    	; 0x11ed4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11e64:	2c ea       	ldi	r18, 0xAC	; 172
   11e66:	35 ec       	ldi	r19, 0xC5	; 197
   11e68:	47 e2       	ldi	r20, 0x27	; 39
   11e6a:	57 e3       	ldi	r21, 0x37	; 55
   11e6c:	c7 01       	movw	r24, r14
   11e6e:	b6 01       	movw	r22, r12
   11e70:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
   11e74:	18 16       	cp	r1, r24
   11e76:	74 f1       	brlt	.+92     	; 0x11ed4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11e78:	9f ef       	ldi	r25, 0xFF	; 255
   11e7a:	b9 16       	cp	r11, r25
   11e7c:	59 f1       	breq	.+86     	; 0x11ed4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11e7e:	ab 2d       	mov	r26, r11
   11e80:	b4 e0       	ldi	r27, 0x04	; 4
   11e82:	ab 02       	muls	r26, r27
   11e84:	40 01       	movw	r8, r0
   11e86:	11 24       	eor	r1, r1
   11e88:	f4 01       	movw	r30, r8
   11e8a:	e6 5f       	subi	r30, 0xF6	; 246
   11e8c:	fd 4f       	sbci	r31, 0xFD	; 253
   11e8e:	a7 01       	movw	r20, r14
   11e90:	96 01       	movw	r18, r12
   11e92:	60 81       	ld	r22, Z
   11e94:	71 81       	ldd	r23, Z+1	; 0x01
   11e96:	82 81       	ldd	r24, Z+2	; 0x02
   11e98:	93 81       	ldd	r25, Z+3	; 0x03
   11e9a:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
   11e9e:	18 16       	cp	r1, r24
   11ea0:	8c f4       	brge	.+34     	; 0x11ec4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x144>
   11ea2:	f4 01       	movw	r30, r8
   11ea4:	e6 5c       	subi	r30, 0xC6	; 198
   11ea6:	fd 4f       	sbci	r31, 0xFD	; 253
   11ea8:	20 81       	ld	r18, Z
   11eaa:	31 81       	ldd	r19, Z+1	; 0x01
   11eac:	42 81       	ldd	r20, Z+2	; 0x02
   11eae:	53 81       	ldd	r21, Z+3	; 0x03
   11eb0:	c7 01       	movw	r24, r14
   11eb2:	b6 01       	movw	r22, r12
   11eb4:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
   11eb8:	6b 01       	movw	r12, r22
   11eba:	7c 01       	movw	r14, r24
   11ebc:	e9 81       	ldd	r30, Y+1	; 0x01
   11ebe:	fa 81       	ldd	r31, Y+2	; 0x02
   11ec0:	0e 1b       	sub	r16, r30
   11ec2:	1f 0b       	sbc	r17, r31
   11ec4:	89 81       	ldd	r24, Y+1	; 0x01
   11ec6:	9a 81       	ldd	r25, Y+2	; 0x02
   11ec8:	95 95       	asr	r25
   11eca:	87 95       	ror	r24
   11ecc:	9a 83       	std	Y+2, r25	; 0x02
   11ece:	89 83       	std	Y+1, r24	; 0x01
   11ed0:	ba 94       	dec	r11
   11ed2:	d2 cf       	rjmp	.-92     	; 0x11e78 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xf8>
   11ed4:	d1 01       	movw	r26, r2
   11ed6:	19 96       	adiw	r26, 0x09	; 9
   11ed8:	1c 93       	st	X, r17
   11eda:	0e 93       	st	-X, r16
   11edc:	18 97       	sbiw	r26, 0x08	; 8
   11ede:	c7 01       	movw	r24, r14
   11ee0:	b6 01       	movw	r22, r12
   11ee2:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <__fixunssfsi>
   11ee6:	69 83       	std	Y+1, r22	; 0x01
   11ee8:	7a 83       	std	Y+2, r23	; 0x02
   11eea:	8b 83       	std	Y+3, r24	; 0x03
   11eec:	9c 83       	std	Y+4, r25	; 0x04
   11eee:	f1 01       	movw	r30, r2
   11ef0:	60 83       	st	Z, r22
   11ef2:	71 83       	std	Z+1, r23	; 0x01
   11ef4:	82 83       	std	Z+2, r24	; 0x02
   11ef6:	93 83       	std	Z+3, r25	; 0x03
   11ef8:	2b 01       	movw	r4, r22
   11efa:	3c 01       	movw	r6, r24
   11efc:	90 e4       	ldi	r25, 0x40	; 64
   11efe:	89 2e       	mov	r8, r25
   11f00:	92 e4       	ldi	r25, 0x42	; 66
   11f02:	99 2e       	mov	r9, r25
   11f04:	9f e0       	ldi	r25, 0x0F	; 15
   11f06:	a9 2e       	mov	r10, r25
   11f08:	b1 2c       	mov	r11, r1
   11f0a:	fa e0       	ldi	r31, 0x0A	; 10
   11f0c:	4f 16       	cp	r4, r31
   11f0e:	51 04       	cpc	r5, r1
   11f10:	61 04       	cpc	r6, r1
   11f12:	71 04       	cpc	r7, r1
   11f14:	e0 f0       	brcs	.+56     	; 0x11f4e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x1ce>
   11f16:	c5 01       	movw	r24, r10
   11f18:	b4 01       	movw	r22, r8
   11f1a:	2a e0       	ldi	r18, 0x0A	; 10
   11f1c:	30 e0       	ldi	r19, 0x00	; 0
   11f1e:	40 e0       	ldi	r20, 0x00	; 0
   11f20:	50 e0       	ldi	r21, 0x00	; 0
   11f22:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   11f26:	49 01       	movw	r8, r18
   11f28:	5a 01       	movw	r10, r20
   11f2a:	d1 01       	movw	r26, r2
   11f2c:	1a 96       	adiw	r26, 0x0a	; 10
   11f2e:	8c 91       	ld	r24, X
   11f30:	1a 97       	sbiw	r26, 0x0a	; 10
   11f32:	81 50       	subi	r24, 0x01	; 1
   11f34:	1a 96       	adiw	r26, 0x0a	; 10
   11f36:	8c 93       	st	X, r24
   11f38:	c3 01       	movw	r24, r6
   11f3a:	b2 01       	movw	r22, r4
   11f3c:	2a e0       	ldi	r18, 0x0A	; 10
   11f3e:	30 e0       	ldi	r19, 0x00	; 0
   11f40:	40 e0       	ldi	r20, 0x00	; 0
   11f42:	50 e0       	ldi	r21, 0x00	; 0
   11f44:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   11f48:	29 01       	movw	r4, r18
   11f4a:	3a 01       	movw	r6, r20
   11f4c:	de cf       	rjmp	.-68     	; 0x11f0a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x18a>
   11f4e:	69 81       	ldd	r22, Y+1	; 0x01
   11f50:	7a 81       	ldd	r23, Y+2	; 0x02
   11f52:	8b 81       	ldd	r24, Y+3	; 0x03
   11f54:	9c 81       	ldd	r25, Y+4	; 0x04
   11f56:	0e 94 e9 d1 	call	0x1a3d2	; 0x1a3d2 <__floatunsisf>
   11f5a:	9b 01       	movw	r18, r22
   11f5c:	ac 01       	movw	r20, r24
   11f5e:	c7 01       	movw	r24, r14
   11f60:	b6 01       	movw	r22, r12
   11f62:	0e 94 ec d0 	call	0x1a1d8	; 0x1a1d8 <__subsf3>
   11f66:	6b 01       	movw	r12, r22
   11f68:	7c 01       	movw	r14, r24
   11f6a:	c5 01       	movw	r24, r10
   11f6c:	b4 01       	movw	r22, r8
   11f6e:	0e 94 e9 d1 	call	0x1a3d2	; 0x1a3d2 <__floatunsisf>
   11f72:	9b 01       	movw	r18, r22
   11f74:	ac 01       	movw	r20, r24
   11f76:	c7 01       	movw	r24, r14
   11f78:	b6 01       	movw	r22, r12
   11f7a:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
   11f7e:	2b 01       	movw	r4, r22
   11f80:	3c 01       	movw	r6, r24
   11f82:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <__fixunssfsi>
   11f86:	6b 01       	movw	r12, r22
   11f88:	7c 01       	movw	r14, r24
   11f8a:	0e 94 e9 d1 	call	0x1a3d2	; 0x1a3d2 <__floatunsisf>
   11f8e:	9b 01       	movw	r18, r22
   11f90:	ac 01       	movw	r20, r24
   11f92:	c3 01       	movw	r24, r6
   11f94:	b2 01       	movw	r22, r4
   11f96:	0e 94 ec d0 	call	0x1a1d8	; 0x1a1d8 <__subsf3>
   11f9a:	9b 01       	movw	r18, r22
   11f9c:	ac 01       	movw	r20, r24
   11f9e:	0e 94 ed d0 	call	0x1a1da	; 0x1a1da <__addsf3>
   11fa2:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <__fixunssfsi>
   11fa6:	c6 0e       	add	r12, r22
   11fa8:	d7 1e       	adc	r13, r23
   11faa:	e8 1e       	adc	r14, r24
   11fac:	f9 1e       	adc	r15, r25
   11fae:	c8 14       	cp	r12, r8
   11fb0:	d9 04       	cpc	r13, r9
   11fb2:	ea 04       	cpc	r14, r10
   11fb4:	fb 04       	cpc	r15, r11
   11fb6:	30 f4       	brcc	.+12     	; 0x11fc4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x244>
   11fb8:	f1 01       	movw	r30, r2
   11fba:	c4 82       	std	Z+4, r12	; 0x04
   11fbc:	d5 82       	std	Z+5, r13	; 0x05
   11fbe:	e6 82       	std	Z+6, r14	; 0x06
   11fc0:	f7 82       	std	Z+7, r15	; 0x07
   11fc2:	26 c0       	rjmp	.+76     	; 0x12010 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11fc4:	d1 01       	movw	r26, r2
   11fc6:	14 96       	adiw	r26, 0x04	; 4
   11fc8:	1d 92       	st	X+, r1
   11fca:	1d 92       	st	X+, r1
   11fcc:	1d 92       	st	X+, r1
   11fce:	1c 92       	st	X, r1
   11fd0:	17 97       	sbiw	r26, 0x07	; 7
   11fd2:	89 81       	ldd	r24, Y+1	; 0x01
   11fd4:	9a 81       	ldd	r25, Y+2	; 0x02
   11fd6:	ab 81       	ldd	r26, Y+3	; 0x03
   11fd8:	bc 81       	ldd	r27, Y+4	; 0x04
   11fda:	01 96       	adiw	r24, 0x01	; 1
   11fdc:	a1 1d       	adc	r26, r1
   11fde:	b1 1d       	adc	r27, r1
   11fe0:	f1 01       	movw	r30, r2
   11fe2:	80 83       	st	Z, r24
   11fe4:	91 83       	std	Z+1, r25	; 0x01
   11fe6:	a2 83       	std	Z+2, r26	; 0x02
   11fe8:	b3 83       	std	Z+3, r27	; 0x03
   11fea:	01 15       	cp	r16, r1
   11fec:	11 05       	cpc	r17, r1
   11fee:	81 f0       	breq	.+32     	; 0x12010 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11ff0:	0a 97       	sbiw	r24, 0x0a	; 10
   11ff2:	a1 05       	cpc	r26, r1
   11ff4:	b1 05       	cpc	r27, r1
   11ff6:	60 f0       	brcs	.+24     	; 0x12010 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11ff8:	c8 01       	movw	r24, r16
   11ffa:	01 96       	adiw	r24, 0x01	; 1
   11ffc:	91 87       	std	Z+9, r25	; 0x09
   11ffe:	80 87       	std	Z+8, r24	; 0x08
   12000:	81 e0       	ldi	r24, 0x01	; 1
   12002:	90 e0       	ldi	r25, 0x00	; 0
   12004:	a0 e0       	ldi	r26, 0x00	; 0
   12006:	b0 e0       	ldi	r27, 0x00	; 0
   12008:	80 83       	st	Z, r24
   1200a:	91 83       	std	Z+1, r25	; 0x01
   1200c:	a2 83       	std	Z+2, r26	; 0x02
   1200e:	b3 83       	std	Z+3, r27	; 0x03
   12010:	8a e0       	ldi	r24, 0x0A	; 10
   12012:	c8 2e       	mov	r12, r24
   12014:	d1 2c       	mov	r13, r1
   12016:	e1 2c       	mov	r14, r1
   12018:	f1 2c       	mov	r15, r1
   1201a:	d1 01       	movw	r26, r2
   1201c:	14 96       	adiw	r26, 0x04	; 4
   1201e:	6d 91       	ld	r22, X+
   12020:	7d 91       	ld	r23, X+
   12022:	8d 91       	ld	r24, X+
   12024:	9c 91       	ld	r25, X
   12026:	17 97       	sbiw	r26, 0x07	; 7
   12028:	a7 01       	movw	r20, r14
   1202a:	96 01       	movw	r18, r12
   1202c:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   12030:	67 2b       	or	r22, r23
   12032:	68 2b       	or	r22, r24
   12034:	69 2b       	or	r22, r25
   12036:	59 f4       	brne	.+22     	; 0x1204e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   12038:	f1 01       	movw	r30, r2
   1203a:	82 85       	ldd	r24, Z+10	; 0x0a
   1203c:	18 16       	cp	r1, r24
   1203e:	3c f4       	brge	.+14     	; 0x1204e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   12040:	24 83       	std	Z+4, r18	; 0x04
   12042:	35 83       	std	Z+5, r19	; 0x05
   12044:	46 83       	std	Z+6, r20	; 0x06
   12046:	57 83       	std	Z+7, r21	; 0x07
   12048:	81 50       	subi	r24, 0x01	; 1
   1204a:	82 87       	std	Z+10, r24	; 0x0a
   1204c:	e6 cf       	rjmp	.-52     	; 0x1201a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x29a>
   1204e:	0f 90       	pop	r0
   12050:	0f 90       	pop	r0
   12052:	0f 90       	pop	r0
   12054:	0f 90       	pop	r0
   12056:	df 91       	pop	r29
   12058:	cf 91       	pop	r28
   1205a:	1f 91       	pop	r17
   1205c:	0f 91       	pop	r16
   1205e:	ff 90       	pop	r15
   12060:	ef 90       	pop	r14
   12062:	df 90       	pop	r13
   12064:	cf 90       	pop	r12
   12066:	bf 90       	pop	r11
   12068:	af 90       	pop	r10
   1206a:	9f 90       	pop	r9
   1206c:	8f 90       	pop	r8
   1206e:	7f 90       	pop	r7
   12070:	6f 90       	pop	r6
   12072:	5f 90       	pop	r5
   12074:	4f 90       	pop	r4
   12076:	3f 90       	pop	r3
   12078:	2f 90       	pop	r2
   1207a:	08 95       	ret

0001207c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>:
   1207c:	cf 93       	push	r28
   1207e:	df 93       	push	r29
   12080:	fc 01       	movw	r30, r24
   12082:	82 81       	ldd	r24, Z+2	; 0x02
   12084:	87 ff       	sbrs	r24, 7
   12086:	32 c0       	rjmp	.+100    	; 0x120ec <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x70>
   12088:	40 e0       	ldi	r20, 0x00	; 0
   1208a:	50 e0       	ldi	r21, 0x00	; 0
   1208c:	20 e0       	ldi	r18, 0x00	; 0
   1208e:	30 e0       	ldi	r19, 0x00	; 0
   12090:	70 e2       	ldi	r23, 0x20	; 32
   12092:	92 81       	ldd	r25, Z+2	; 0x02
   12094:	89 2f       	mov	r24, r25
   12096:	8f 70       	andi	r24, 0x0F	; 15
   12098:	92 95       	swap	r25
   1209a:	97 70       	andi	r25, 0x07	; 7
   1209c:	89 9f       	mul	r24, r25
   1209e:	c0 01       	movw	r24, r0
   120a0:	11 24       	eor	r1, r1
   120a2:	48 17       	cp	r20, r24
   120a4:	59 07       	cpc	r21, r25
   120a6:	24 f5       	brge	.+72     	; 0x120f0 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x74>
   120a8:	a0 81       	ld	r26, Z
   120aa:	b1 81       	ldd	r27, Z+1	; 0x01
   120ac:	12 96       	adiw	r26, 0x02	; 2
   120ae:	cd 91       	ld	r28, X+
   120b0:	dc 91       	ld	r29, X
   120b2:	13 97       	sbiw	r26, 0x03	; 3
   120b4:	8d 91       	ld	r24, X+
   120b6:	9c 91       	ld	r25, X
   120b8:	11 97       	sbiw	r26, 0x01	; 1
   120ba:	c8 17       	cp	r28, r24
   120bc:	d9 07       	cpc	r29, r25
   120be:	78 f4       	brcc	.+30     	; 0x120de <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x62>
   120c0:	ce 01       	movw	r24, r28
   120c2:	01 96       	adiw	r24, 0x01	; 1
   120c4:	13 96       	adiw	r26, 0x03	; 3
   120c6:	9c 93       	st	X, r25
   120c8:	8e 93       	st	-X, r24
   120ca:	12 97       	sbiw	r26, 0x02	; 2
   120cc:	78 83       	st	Y, r23
   120ce:	12 96       	adiw	r26, 0x02	; 2
   120d0:	0d 90       	ld	r0, X+
   120d2:	bc 91       	ld	r27, X
   120d4:	a0 2d       	mov	r26, r0
   120d6:	1c 92       	st	X, r1
   120d8:	81 e0       	ldi	r24, 0x01	; 1
   120da:	90 e0       	ldi	r25, 0x00	; 0
   120dc:	02 c0       	rjmp	.+4      	; 0x120e2 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x66>
   120de:	80 e0       	ldi	r24, 0x00	; 0
   120e0:	90 e0       	ldi	r25, 0x00	; 0
   120e2:	28 0f       	add	r18, r24
   120e4:	39 1f       	adc	r19, r25
   120e6:	4f 5f       	subi	r20, 0xFF	; 255
   120e8:	5f 4f       	sbci	r21, 0xFF	; 255
   120ea:	d3 cf       	rjmp	.-90     	; 0x12092 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x16>
   120ec:	20 e0       	ldi	r18, 0x00	; 0
   120ee:	30 e0       	ldi	r19, 0x00	; 0
   120f0:	a0 81       	ld	r26, Z
   120f2:	b1 81       	ldd	r27, Z+1	; 0x01
   120f4:	12 96       	adiw	r26, 0x02	; 2
   120f6:	cd 91       	ld	r28, X+
   120f8:	dc 91       	ld	r29, X
   120fa:	13 97       	sbiw	r26, 0x03	; 3
   120fc:	8d 91       	ld	r24, X+
   120fe:	9c 91       	ld	r25, X
   12100:	11 97       	sbiw	r26, 0x01	; 1
   12102:	c8 17       	cp	r28, r24
   12104:	d9 07       	cpc	r29, r25
   12106:	78 f4       	brcc	.+30     	; 0x12126 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xaa>
   12108:	ce 01       	movw	r24, r28
   1210a:	01 96       	adiw	r24, 0x01	; 1
   1210c:	13 96       	adiw	r26, 0x03	; 3
   1210e:	9c 93       	st	X, r25
   12110:	8e 93       	st	-X, r24
   12112:	12 97       	sbiw	r26, 0x02	; 2
   12114:	68 83       	st	Y, r22
   12116:	12 96       	adiw	r26, 0x02	; 2
   12118:	0d 90       	ld	r0, X+
   1211a:	bc 91       	ld	r27, X
   1211c:	a0 2d       	mov	r26, r0
   1211e:	1c 92       	st	X, r1
   12120:	81 e0       	ldi	r24, 0x01	; 1
   12122:	90 e0       	ldi	r25, 0x00	; 0
   12124:	02 c0       	rjmp	.+4      	; 0x1212a <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xae>
   12126:	80 e0       	ldi	r24, 0x00	; 0
   12128:	90 e0       	ldi	r25, 0x00	; 0
   1212a:	51 e0       	ldi	r21, 0x01	; 1
   1212c:	6a 30       	cpi	r22, 0x0A	; 10
   1212e:	09 f0       	breq	.+2      	; 0x12132 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xb6>
   12130:	50 e0       	ldi	r21, 0x00	; 0
   12132:	42 81       	ldd	r20, Z+2	; 0x02
   12134:	50 fb       	bst	r21, 0
   12136:	47 f9       	bld	r20, 7
   12138:	42 83       	std	Z+2, r20	; 0x02
   1213a:	82 0f       	add	r24, r18
   1213c:	93 1f       	adc	r25, r19
   1213e:	df 91       	pop	r29
   12140:	cf 91       	pop	r28
   12142:	08 95       	ret

00012144 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>:
   12144:	ef 92       	push	r14
   12146:	ff 92       	push	r15
   12148:	0f 93       	push	r16
   1214a:	1f 93       	push	r17
   1214c:	cf 93       	push	r28
   1214e:	df 93       	push	r29
   12150:	7c 01       	movw	r14, r24
   12152:	8b 01       	movw	r16, r22
   12154:	c0 e0       	ldi	r28, 0x00	; 0
   12156:	d0 e0       	ldi	r29, 0x00	; 0
   12158:	f8 01       	movw	r30, r16
   1215a:	61 91       	ld	r22, Z+
   1215c:	8f 01       	movw	r16, r30
   1215e:	66 23       	and	r22, r22
   12160:	29 f0       	breq	.+10     	; 0x1216c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x28>
   12162:	c7 01       	movw	r24, r14
   12164:	8b df       	rcall	.-234    	; 0x1207c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   12166:	c8 0f       	add	r28, r24
   12168:	d9 1f       	adc	r29, r25
   1216a:	f6 cf       	rjmp	.-20     	; 0x12158 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x14>
   1216c:	ce 01       	movw	r24, r28
   1216e:	df 91       	pop	r29
   12170:	cf 91       	pop	r28
   12172:	1f 91       	pop	r17
   12174:	0f 91       	pop	r16
   12176:	ff 90       	pop	r15
   12178:	ef 90       	pop	r14
   1217a:	08 95       	ret

0001217c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>:
   1217c:	fc 01       	movw	r30, r24
   1217e:	90 81       	ld	r25, Z
   12180:	9f 7d       	andi	r25, 0xDF	; 223
   12182:	9b 35       	cpi	r25, 0x5B	; 91
   12184:	99 f4       	brne	.+38     	; 0x121ac <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x30>
   12186:	01 80       	ldd	r0, Z+1	; 0x01
   12188:	f2 81       	ldd	r31, Z+2	; 0x02
   1218a:	e0 2d       	mov	r30, r0
   1218c:	32 81       	ldd	r19, Z+2	; 0x02
   1218e:	93 2f       	mov	r25, r19
   12190:	9f 70       	andi	r25, 0x0F	; 15
   12192:	9f 30       	cpi	r25, 0x0F	; 15
   12194:	39 f0       	breq	.+14     	; 0x121a4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x28>
   12196:	9f 5f       	subi	r25, 0xFF	; 255
   12198:	29 2f       	mov	r18, r25
   1219a:	2f 70       	andi	r18, 0x0F	; 15
   1219c:	93 2f       	mov	r25, r19
   1219e:	90 7f       	andi	r25, 0xF0	; 240
   121a0:	92 2b       	or	r25, r18
   121a2:	92 83       	std	Z+2, r25	; 0x02
   121a4:	65 ef       	ldi	r22, 0xF5	; 245
   121a6:	76 e0       	ldi	r23, 0x06	; 6
   121a8:	cf 01       	movw	r24, r30
   121aa:	cc cf       	rjmp	.-104    	; 0x12144 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   121ac:	80 e0       	ldi	r24, 0x00	; 0
   121ae:	90 e0       	ldi	r25, 0x00	; 0
   121b0:	08 95       	ret

000121b2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>:
   121b2:	ff 92       	push	r15
   121b4:	0f 93       	push	r16
   121b6:	1f 93       	push	r17
   121b8:	cf 93       	push	r28
   121ba:	df 93       	push	r29
   121bc:	8c 01       	movw	r16, r24
   121be:	f6 2e       	mov	r15, r22
   121c0:	8b e5       	ldi	r24, 0x5B	; 91
   121c2:	68 17       	cp	r22, r24
   121c4:	f9 f0       	breq	.+62     	; 0x12204 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   121c6:	86 17       	cp	r24, r22
   121c8:	98 f0       	brcs	.+38     	; 0x121f0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x3e>
   121ca:	ac e2       	ldi	r26, 0x2C	; 44
   121cc:	6a 17       	cp	r22, r26
   121ce:	09 f4       	brne	.+2      	; 0x121d2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x20>
   121d0:	43 c0       	rjmp	.+134    	; 0x12258 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xa6>
   121d2:	ba e3       	ldi	r27, 0x3A	; 58
   121d4:	6b 17       	cp	r22, r27
   121d6:	c1 f1       	breq	.+112    	; 0x12248 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x96>
   121d8:	e2 e2       	ldi	r30, 0x22	; 34
   121da:	6e 13       	cpse	r22, r30
   121dc:	4c c0       	rjmp	.+152    	; 0x12276 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   121de:	81 e0       	ldi	r24, 0x01	; 1
   121e0:	d8 01       	movw	r26, r16
   121e2:	13 96       	adiw	r26, 0x03	; 3
   121e4:	8c 93       	st	X, r24
   121e6:	c8 01       	movw	r24, r16
   121e8:	c9 df       	rcall	.-110    	; 0x1217c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   121ea:	ec 01       	movw	r28, r24
   121ec:	62 e2       	ldi	r22, 0x22	; 34
   121ee:	3f c0       	rjmp	.+126    	; 0x1226e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   121f0:	fb e7       	ldi	r31, 0x7B	; 123
   121f2:	6f 17       	cp	r22, r31
   121f4:	39 f0       	breq	.+14     	; 0x12204 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   121f6:	8d e7       	ldi	r24, 0x7D	; 125
   121f8:	68 17       	cp	r22, r24
   121fa:	39 f0       	breq	.+14     	; 0x1220a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   121fc:	ad e5       	ldi	r26, 0x5D	; 93
   121fe:	6a 13       	cpse	r22, r26
   12200:	3a c0       	rjmp	.+116    	; 0x12276 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   12202:	03 c0       	rjmp	.+6      	; 0x1220a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   12204:	c8 01       	movw	r24, r16
   12206:	ba df       	rcall	.-140    	; 0x1217c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   12208:	1c c0       	rjmp	.+56     	; 0x12242 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x90>
   1220a:	d8 01       	movw	r26, r16
   1220c:	8c 91       	ld	r24, X
   1220e:	8f 7d       	andi	r24, 0xDF	; 223
   12210:	8b 35       	cpi	r24, 0x5B	; 91
   12212:	19 f4       	brne	.+6      	; 0x1221a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x68>
   12214:	c0 e0       	ldi	r28, 0x00	; 0
   12216:	d0 e0       	ldi	r29, 0x00	; 0
   12218:	15 c0       	rjmp	.+42     	; 0x12244 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x92>
   1221a:	d8 01       	movw	r26, r16
   1221c:	11 96       	adiw	r26, 0x01	; 1
   1221e:	ed 91       	ld	r30, X+
   12220:	fc 91       	ld	r31, X
   12222:	12 97       	sbiw	r26, 0x02	; 2
   12224:	32 81       	ldd	r19, Z+2	; 0x02
   12226:	93 2f       	mov	r25, r19
   12228:	9f 70       	andi	r25, 0x0F	; 15
   1222a:	39 f0       	breq	.+14     	; 0x1223a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x88>
   1222c:	91 5f       	subi	r25, 0xF1	; 241
   1222e:	29 2f       	mov	r18, r25
   12230:	2f 70       	andi	r18, 0x0F	; 15
   12232:	93 2f       	mov	r25, r19
   12234:	90 7f       	andi	r25, 0xF0	; 240
   12236:	92 2b       	or	r25, r18
   12238:	92 83       	std	Z+2, r25	; 0x02
   1223a:	65 ef       	ldi	r22, 0xF5	; 245
   1223c:	76 e0       	ldi	r23, 0x06	; 6
   1223e:	cf 01       	movw	r24, r30
   12240:	81 df       	rcall	.-254    	; 0x12144 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   12242:	ec 01       	movw	r28, r24
   12244:	6f 2d       	mov	r22, r15
   12246:	13 c0       	rjmp	.+38     	; 0x1226e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   12248:	61 ef       	ldi	r22, 0xF1	; 241
   1224a:	76 e0       	ldi	r23, 0x06	; 6
   1224c:	d8 01       	movw	r26, r16
   1224e:	11 96       	adiw	r26, 0x01	; 1
   12250:	8d 91       	ld	r24, X+
   12252:	9c 91       	ld	r25, X
   12254:	12 97       	sbiw	r26, 0x02	; 2
   12256:	05 c0       	rjmp	.+10     	; 0x12262 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xb0>
   12258:	64 ef       	ldi	r22, 0xF4	; 244
   1225a:	76 e0       	ldi	r23, 0x06	; 6
   1225c:	f8 01       	movw	r30, r16
   1225e:	81 81       	ldd	r24, Z+1	; 0x01
   12260:	92 81       	ldd	r25, Z+2	; 0x02
   12262:	df 91       	pop	r29
   12264:	cf 91       	pop	r28
   12266:	1f 91       	pop	r17
   12268:	0f 91       	pop	r16
   1226a:	ff 90       	pop	r15
   1226c:	6b cf       	rjmp	.-298    	; 0x12144 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   1226e:	f8 01       	movw	r30, r16
   12270:	81 81       	ldd	r24, Z+1	; 0x01
   12272:	92 81       	ldd	r25, Z+2	; 0x02
   12274:	09 c0       	rjmp	.+18     	; 0x12288 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xd6>
   12276:	c8 01       	movw	r24, r16
   12278:	81 df       	rcall	.-254    	; 0x1217c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   1227a:	ec 01       	movw	r28, r24
   1227c:	6f 2d       	mov	r22, r15
   1227e:	d8 01       	movw	r26, r16
   12280:	11 96       	adiw	r26, 0x01	; 1
   12282:	8d 91       	ld	r24, X+
   12284:	9c 91       	ld	r25, X
   12286:	12 97       	sbiw	r26, 0x02	; 2
   12288:	f9 de       	rcall	.-526    	; 0x1207c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   1228a:	8c 0f       	add	r24, r28
   1228c:	9d 1f       	adc	r25, r29
   1228e:	df 91       	pop	r29
   12290:	cf 91       	pop	r28
   12292:	1f 91       	pop	r17
   12294:	0f 91       	pop	r16
   12296:	ff 90       	pop	r15
   12298:	08 95       	ret

0001229a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>:
   1229a:	1f 93       	push	r17
   1229c:	cf 93       	push	r28
   1229e:	df 93       	push	r29
   122a0:	ec 01       	movw	r28, r24
   122a2:	16 2f       	mov	r17, r22
   122a4:	8b 81       	ldd	r24, Y+3	; 0x03
   122a6:	88 23       	and	r24, r24
   122a8:	51 f0       	breq	.+20     	; 0x122be <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x24>
   122aa:	62 32       	cpi	r22, 0x22	; 34
   122ac:	19 f4       	brne	.+6      	; 0x122b4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>
   122ae:	88 81       	ld	r24, Y
   122b0:	8c 35       	cpi	r24, 0x5C	; 92
   122b2:	61 f4       	brne	.+24     	; 0x122cc <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x32>
   122b4:	61 2f       	mov	r22, r17
   122b6:	89 81       	ldd	r24, Y+1	; 0x01
   122b8:	9a 81       	ldd	r25, Y+2	; 0x02
   122ba:	e0 de       	rcall	.-576    	; 0x1207c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   122bc:	02 c0       	rjmp	.+4      	; 0x122c2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x28>
   122be:	ce 01       	movw	r24, r28
   122c0:	78 df       	rcall	.-272    	; 0x121b2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>
   122c2:	18 83       	st	Y, r17
   122c4:	df 91       	pop	r29
   122c6:	cf 91       	pop	r28
   122c8:	1f 91       	pop	r17
   122ca:	08 95       	ret
   122cc:	1b 82       	std	Y+3, r1	; 0x03
   122ce:	f2 cf       	rjmp	.-28     	; 0x122b4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>

000122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>:
   122d0:	cf 93       	push	r28
   122d2:	df 93       	push	r29
   122d4:	ec 01       	movw	r28, r24
   122d6:	88 81       	ld	r24, Y
   122d8:	99 81       	ldd	r25, Y+1	; 0x01
   122da:	df df       	rcall	.-66     	; 0x1229a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   122dc:	2a 81       	ldd	r18, Y+2	; 0x02
   122de:	3b 81       	ldd	r19, Y+3	; 0x03
   122e0:	82 0f       	add	r24, r18
   122e2:	93 1f       	adc	r25, r19
   122e4:	9b 83       	std	Y+3, r25	; 0x03
   122e6:	8a 83       	std	Y+2, r24	; 0x02
   122e8:	df 91       	pop	r29
   122ea:	cf 91       	pop	r28
   122ec:	08 95       	ret

000122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>:
   122ee:	cf 92       	push	r12
   122f0:	df 92       	push	r13
   122f2:	ef 92       	push	r14
   122f4:	ff 92       	push	r15
   122f6:	0f 93       	push	r16
   122f8:	1f 93       	push	r17
   122fa:	cf 93       	push	r28
   122fc:	df 93       	push	r29
   122fe:	7c 01       	movw	r14, r24
   12300:	fc 01       	movw	r30, r24
   12302:	c0 80       	ld	r12, Z
   12304:	d1 80       	ldd	r13, Z+1	; 0x01
   12306:	8b 01       	movw	r16, r22
   12308:	c0 e0       	ldi	r28, 0x00	; 0
   1230a:	d0 e0       	ldi	r29, 0x00	; 0
   1230c:	f8 01       	movw	r30, r16
   1230e:	61 91       	ld	r22, Z+
   12310:	8f 01       	movw	r16, r30
   12312:	66 23       	and	r22, r22
   12314:	29 f0       	breq	.+10     	; 0x12320 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x32>
   12316:	c6 01       	movw	r24, r12
   12318:	c0 df       	rcall	.-128    	; 0x1229a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   1231a:	c8 0f       	add	r28, r24
   1231c:	d9 1f       	adc	r29, r25
   1231e:	f6 cf       	rjmp	.-20     	; 0x1230c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x1e>
   12320:	f7 01       	movw	r30, r14
   12322:	82 81       	ldd	r24, Z+2	; 0x02
   12324:	93 81       	ldd	r25, Z+3	; 0x03
   12326:	c8 0f       	add	r28, r24
   12328:	d9 1f       	adc	r29, r25
   1232a:	d3 83       	std	Z+3, r29	; 0x03
   1232c:	c2 83       	std	Z+2, r28	; 0x02
   1232e:	df 91       	pop	r29
   12330:	cf 91       	pop	r28
   12332:	1f 91       	pop	r17
   12334:	0f 91       	pop	r16
   12336:	ff 90       	pop	r15
   12338:	ef 90       	pop	r14
   1233a:	df 90       	pop	r13
   1233c:	cf 90       	pop	r12
   1233e:	08 95       	ret

00012340 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>:
   12340:	ff 92       	push	r15
   12342:	0f 93       	push	r16
   12344:	1f 93       	push	r17
   12346:	cf 93       	push	r28
   12348:	df 93       	push	r29
   1234a:	61 15       	cp	r22, r1
   1234c:	71 05       	cpc	r23, r1
   1234e:	41 f4       	brne	.+16     	; 0x12360 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x20>
   12350:	6c ee       	ldi	r22, 0xEC	; 236
   12352:	76 e0       	ldi	r23, 0x06	; 6
   12354:	df 91       	pop	r29
   12356:	cf 91       	pop	r28
   12358:	1f 91       	pop	r17
   1235a:	0f 91       	pop	r16
   1235c:	ff 90       	pop	r15
   1235e:	c7 cf       	rjmp	.-114    	; 0x122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12360:	8b 01       	movw	r16, r22
   12362:	ec 01       	movw	r28, r24
   12364:	62 e2       	ldi	r22, 0x22	; 34
   12366:	ce 01       	movw	r24, r28
   12368:	b3 df       	rcall	.-154    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1236a:	f8 01       	movw	r30, r16
   1236c:	61 91       	ld	r22, Z+
   1236e:	8f 01       	movw	r16, r30
   12370:	66 23       	and	r22, r22
   12372:	51 f0       	breq	.+20     	; 0x12388 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x48>
   12374:	ed ed       	ldi	r30, 0xDD	; 221
   12376:	f6 e0       	ldi	r31, 0x06	; 6
   12378:	f0 80       	ld	r15, Z
   1237a:	ff 20       	and	r15, r15
   1237c:	a1 f3       	breq	.-24     	; 0x12366 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>
   1237e:	81 81       	ldd	r24, Z+1	; 0x01
   12380:	68 17       	cp	r22, r24
   12382:	51 f0       	breq	.+20     	; 0x12398 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x58>
   12384:	32 96       	adiw	r30, 0x02	; 2
   12386:	f8 cf       	rjmp	.-16     	; 0x12378 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x38>
   12388:	62 e2       	ldi	r22, 0x22	; 34
   1238a:	ce 01       	movw	r24, r28
   1238c:	df 91       	pop	r29
   1238e:	cf 91       	pop	r28
   12390:	1f 91       	pop	r17
   12392:	0f 91       	pop	r16
   12394:	ff 90       	pop	r15
   12396:	9c cf       	rjmp	.-200    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12398:	6c e5       	ldi	r22, 0x5C	; 92
   1239a:	ce 01       	movw	r24, r28
   1239c:	99 df       	rcall	.-206    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1239e:	6f 2d       	mov	r22, r15
   123a0:	e2 cf       	rjmp	.-60     	; 0x12366 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>

000123a2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>:
   123a2:	0f 93       	push	r16
   123a4:	1f 93       	push	r17
   123a6:	cf 93       	push	r28
   123a8:	df 93       	push	r29
   123aa:	cd b7       	in	r28, 0x3d	; 61
   123ac:	de b7       	in	r29, 0x3e	; 62
   123ae:	66 97       	sbiw	r28, 0x16	; 22
   123b0:	0f b6       	in	r0, 0x3f	; 63
   123b2:	f8 94       	cli
   123b4:	de bf       	out	0x3e, r29	; 62
   123b6:	0f be       	out	0x3f, r0	; 63
   123b8:	cd bf       	out	0x3d, r28	; 61
   123ba:	9c 01       	movw	r18, r24
   123bc:	cb 01       	movw	r24, r22
   123be:	1e 8a       	std	Y+22, r1	; 0x16
   123c0:	fe 01       	movw	r30, r28
   123c2:	76 96       	adiw	r30, 0x16	; 22
   123c4:	0a e0       	ldi	r16, 0x0A	; 10
   123c6:	10 e0       	ldi	r17, 0x00	; 0
   123c8:	b8 01       	movw	r22, r16
   123ca:	0e 94 6a eb 	call	0x1d6d4	; 0x1d6d4 <__divmodhi4>
   123ce:	80 5d       	subi	r24, 0xD0	; 208
   123d0:	82 93       	st	-Z, r24
   123d2:	cb 01       	movw	r24, r22
   123d4:	00 97       	sbiw	r24, 0x00	; 0
   123d6:	c1 f7       	brne	.-16     	; 0x123c8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_+0x26>
   123d8:	bf 01       	movw	r22, r30
   123da:	c9 01       	movw	r24, r18
   123dc:	88 df       	rcall	.-240    	; 0x122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   123de:	66 96       	adiw	r28, 0x16	; 22
   123e0:	0f b6       	in	r0, 0x3f	; 63
   123e2:	f8 94       	cli
   123e4:	de bf       	out	0x3e, r29	; 62
   123e6:	0f be       	out	0x3f, r0	; 63
   123e8:	cd bf       	out	0x3d, r28	; 61
   123ea:	df 91       	pop	r29
   123ec:	cf 91       	pop	r28
   123ee:	1f 91       	pop	r17
   123f0:	0f 91       	pop	r16
   123f2:	08 95       	ret

000123f4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>:
   123f4:	8f 92       	push	r8
   123f6:	9f 92       	push	r9
   123f8:	af 92       	push	r10
   123fa:	bf 92       	push	r11
   123fc:	ef 92       	push	r14
   123fe:	ff 92       	push	r15
   12400:	0f 93       	push	r16
   12402:	1f 93       	push	r17
   12404:	cf 93       	push	r28
   12406:	df 93       	push	r29
   12408:	cd b7       	in	r28, 0x3d	; 61
   1240a:	de b7       	in	r29, 0x3e	; 62
   1240c:	66 97       	sbiw	r28, 0x16	; 22
   1240e:	0f b6       	in	r0, 0x3f	; 63
   12410:	f8 94       	cli
   12412:	de bf       	out	0x3e, r29	; 62
   12414:	0f be       	out	0x3f, r0	; 63
   12416:	cd bf       	out	0x3d, r28	; 61
   12418:	7c 01       	movw	r14, r24
   1241a:	1e 8a       	std	Y+22, r1	; 0x16
   1241c:	8e 01       	movw	r16, r28
   1241e:	0a 5e       	subi	r16, 0xEA	; 234
   12420:	1f 4f       	sbci	r17, 0xFF	; 255
   12422:	8a e0       	ldi	r24, 0x0A	; 10
   12424:	88 2e       	mov	r8, r24
   12426:	91 2c       	mov	r9, r1
   12428:	a1 2c       	mov	r10, r1
   1242a:	b1 2c       	mov	r11, r1
   1242c:	cb 01       	movw	r24, r22
   1242e:	ba 01       	movw	r22, r20
   12430:	a5 01       	movw	r20, r10
   12432:	94 01       	movw	r18, r8
   12434:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   12438:	94 2f       	mov	r25, r20
   1243a:	85 2f       	mov	r24, r21
   1243c:	60 5d       	subi	r22, 0xD0	; 208
   1243e:	f8 01       	movw	r30, r16
   12440:	62 93       	st	-Z, r22
   12442:	8f 01       	movw	r16, r30
   12444:	a9 01       	movw	r20, r18
   12446:	69 2f       	mov	r22, r25
   12448:	78 2f       	mov	r23, r24
   1244a:	41 15       	cp	r20, r1
   1244c:	51 05       	cpc	r21, r1
   1244e:	61 05       	cpc	r22, r1
   12450:	71 05       	cpc	r23, r1
   12452:	61 f7       	brne	.-40     	; 0x1242c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_+0x38>
   12454:	bf 01       	movw	r22, r30
   12456:	c7 01       	movw	r24, r14
   12458:	4a df       	rcall	.-364    	; 0x122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1245a:	66 96       	adiw	r28, 0x16	; 22
   1245c:	0f b6       	in	r0, 0x3f	; 63
   1245e:	f8 94       	cli
   12460:	de bf       	out	0x3e, r29	; 62
   12462:	0f be       	out	0x3f, r0	; 63
   12464:	cd bf       	out	0x3d, r28	; 61
   12466:	df 91       	pop	r29
   12468:	cf 91       	pop	r28
   1246a:	1f 91       	pop	r17
   1246c:	0f 91       	pop	r16
   1246e:	ff 90       	pop	r15
   12470:	ef 90       	pop	r14
   12472:	bf 90       	pop	r11
   12474:	af 90       	pop	r10
   12476:	9f 90       	pop	r9
   12478:	8f 90       	pop	r8
   1247a:	08 95       	ret

0001247c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>:
   1247c:	4f 92       	push	r4
   1247e:	5f 92       	push	r5
   12480:	6f 92       	push	r6
   12482:	7f 92       	push	r7
   12484:	af 92       	push	r10
   12486:	bf 92       	push	r11
   12488:	cf 92       	push	r12
   1248a:	df 92       	push	r13
   1248c:	ef 92       	push	r14
   1248e:	ff 92       	push	r15
   12490:	0f 93       	push	r16
   12492:	1f 93       	push	r17
   12494:	cf 93       	push	r28
   12496:	df 93       	push	r29
   12498:	cd b7       	in	r28, 0x3d	; 61
   1249a:	de b7       	in	r29, 0x3e	; 62
   1249c:	6b 97       	sbiw	r28, 0x1b	; 27
   1249e:	0f b6       	in	r0, 0x3f	; 63
   124a0:	f8 94       	cli
   124a2:	de bf       	out	0x3e, r29	; 62
   124a4:	0f be       	out	0x3f, r0	; 63
   124a6:	cd bf       	out	0x3d, r28	; 61
   124a8:	8c 01       	movw	r16, r24
   124aa:	6a 01       	movw	r12, r20
   124ac:	7b 01       	movw	r14, r22
   124ae:	9a 01       	movw	r18, r20
   124b0:	ab 01       	movw	r20, r22
   124b2:	c7 01       	movw	r24, r14
   124b4:	b6 01       	movw	r22, r12
   124b6:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
   124ba:	88 23       	and	r24, r24
   124bc:	19 f0       	breq	.+6      	; 0x124c4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x48>
   124be:	68 ef       	ldi	r22, 0xF8	; 248
   124c0:	76 e0       	ldi	r23, 0x06	; 6
   124c2:	29 c0       	rjmp	.+82     	; 0x12516 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x9a>
   124c4:	20 e0       	ldi	r18, 0x00	; 0
   124c6:	30 e0       	ldi	r19, 0x00	; 0
   124c8:	a9 01       	movw	r20, r18
   124ca:	c7 01       	movw	r24, r14
   124cc:	b6 01       	movw	r22, r12
   124ce:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
   124d2:	87 ff       	sbrs	r24, 7
   124d4:	07 c0       	rjmp	.+14     	; 0x124e4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x68>
   124d6:	6d e2       	ldi	r22, 0x2D	; 45
   124d8:	c8 01       	movw	r24, r16
   124da:	fa de       	rcall	.-524    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   124dc:	f7 fa       	bst	r15, 7
   124de:	f0 94       	com	r15
   124e0:	f7 f8       	bld	r15, 7
   124e2:	f0 94       	com	r15
   124e4:	20 e0       	ldi	r18, 0x00	; 0
   124e6:	30 e0       	ldi	r19, 0x00	; 0
   124e8:	a9 01       	movw	r20, r18
   124ea:	c7 01       	movw	r24, r14
   124ec:	b6 01       	movw	r22, r12
   124ee:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
   124f2:	88 23       	and	r24, r24
   124f4:	99 f0       	breq	.+38     	; 0x1251c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   124f6:	a7 01       	movw	r20, r14
   124f8:	96 01       	movw	r18, r12
   124fa:	c7 01       	movw	r24, r14
   124fc:	b6 01       	movw	r22, r12
   124fe:	0e 94 ed d0 	call	0x1a1da	; 0x1a1da <__addsf3>
   12502:	9b 01       	movw	r18, r22
   12504:	ac 01       	movw	r20, r24
   12506:	c7 01       	movw	r24, r14
   12508:	b6 01       	movw	r22, r12
   1250a:	0e 94 51 d1 	call	0x1a2a2	; 0x1a2a2 <__cmpsf2>
   1250e:	81 11       	cpse	r24, r1
   12510:	05 c0       	rjmp	.+10     	; 0x1251c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   12512:	6f ef       	ldi	r22, 0xFF	; 255
   12514:	76 e0       	ldi	r23, 0x06	; 6
   12516:	c8 01       	movw	r24, r16
   12518:	ea de       	rcall	.-556    	; 0x122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1251a:	51 c0       	rjmp	.+162    	; 0x125be <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   1251c:	b7 01       	movw	r22, r14
   1251e:	a6 01       	movw	r20, r12
   12520:	ce 01       	movw	r24, r28
   12522:	41 96       	adiw	r24, 0x11	; 17
   12524:	2d dc       	rcall	.-1958   	; 0x11d80 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>
   12526:	49 89       	ldd	r20, Y+17	; 0x11
   12528:	5a 89       	ldd	r21, Y+18	; 0x12
   1252a:	6b 89       	ldd	r22, Y+19	; 0x13
   1252c:	7c 89       	ldd	r23, Y+20	; 0x14
   1252e:	c8 01       	movw	r24, r16
   12530:	61 df       	rcall	.-318    	; 0x123f4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   12532:	bb 8c       	ldd	r11, Y+27	; 0x1b
   12534:	bb 20       	and	r11, r11
   12536:	41 f1       	breq	.+80     	; 0x12588 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x10c>
   12538:	6d 89       	ldd	r22, Y+21	; 0x15
   1253a:	7e 89       	ldd	r23, Y+22	; 0x16
   1253c:	8f 89       	ldd	r24, Y+23	; 0x17
   1253e:	98 8d       	ldd	r25, Y+24	; 0x18
   12540:	18 8a       	std	Y+16, r1	; 0x10
   12542:	ab 2c       	mov	r10, r11
   12544:	6e 01       	movw	r12, r28
   12546:	20 e1       	ldi	r18, 0x10	; 16
   12548:	c2 0e       	add	r12, r18
   1254a:	d1 1c       	adc	r13, r1
   1254c:	76 01       	movw	r14, r12
   1254e:	2a e0       	ldi	r18, 0x0A	; 10
   12550:	42 2e       	mov	r4, r18
   12552:	51 2c       	mov	r5, r1
   12554:	61 2c       	mov	r6, r1
   12556:	71 2c       	mov	r7, r1
   12558:	aa 94       	dec	r10
   1255a:	ef ef       	ldi	r30, 0xFF	; 255
   1255c:	ae 16       	cp	r10, r30
   1255e:	59 f0       	breq	.+22     	; 0x12576 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xfa>
   12560:	a3 01       	movw	r20, r6
   12562:	92 01       	movw	r18, r4
   12564:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   12568:	60 5d       	subi	r22, 0xD0	; 208
   1256a:	f6 01       	movw	r30, r12
   1256c:	62 93       	st	-Z, r22
   1256e:	6f 01       	movw	r12, r30
   12570:	b9 01       	movw	r22, r18
   12572:	ca 01       	movw	r24, r20
   12574:	f1 cf       	rjmp	.-30     	; 0x12558 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xdc>
   12576:	b7 01       	movw	r22, r14
   12578:	6b 19       	sub	r22, r11
   1257a:	71 09       	sbc	r23, r1
   1257c:	8e e2       	ldi	r24, 0x2E	; 46
   1257e:	fb 01       	movw	r30, r22
   12580:	82 93       	st	-Z, r24
   12582:	bf 01       	movw	r22, r30
   12584:	c8 01       	movw	r24, r16
   12586:	b3 de       	rcall	.-666    	; 0x122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12588:	89 8d       	ldd	r24, Y+25	; 0x19
   1258a:	9a 8d       	ldd	r25, Y+26	; 0x1a
   1258c:	97 ff       	sbrs	r25, 7
   1258e:	0b c0       	rjmp	.+22     	; 0x125a6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x12a>
   12590:	6c ef       	ldi	r22, 0xFC	; 252
   12592:	76 e0       	ldi	r23, 0x06	; 6
   12594:	c8 01       	movw	r24, r16
   12596:	ab de       	rcall	.-682    	; 0x122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12598:	69 8d       	ldd	r22, Y+25	; 0x19
   1259a:	7a 8d       	ldd	r23, Y+26	; 0x1a
   1259c:	71 95       	neg	r23
   1259e:	61 95       	neg	r22
   125a0:	71 09       	sbc	r23, r1
   125a2:	c8 01       	movw	r24, r16
   125a4:	fe de       	rcall	.-516    	; 0x123a2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   125a6:	89 8d       	ldd	r24, Y+25	; 0x19
   125a8:	9a 8d       	ldd	r25, Y+26	; 0x1a
   125aa:	18 16       	cp	r1, r24
   125ac:	19 06       	cpc	r1, r25
   125ae:	3c f4       	brge	.+14     	; 0x125be <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   125b0:	65 e6       	ldi	r22, 0x65	; 101
   125b2:	c8 01       	movw	r24, r16
   125b4:	8d de       	rcall	.-742    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   125b6:	69 8d       	ldd	r22, Y+25	; 0x19
   125b8:	7a 8d       	ldd	r23, Y+26	; 0x1a
   125ba:	c8 01       	movw	r24, r16
   125bc:	f2 de       	rcall	.-540    	; 0x123a2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   125be:	6b 96       	adiw	r28, 0x1b	; 27
   125c0:	0f b6       	in	r0, 0x3f	; 63
   125c2:	f8 94       	cli
   125c4:	de bf       	out	0x3e, r29	; 62
   125c6:	0f be       	out	0x3f, r0	; 63
   125c8:	cd bf       	out	0x3d, r28	; 61
   125ca:	df 91       	pop	r29
   125cc:	cf 91       	pop	r28
   125ce:	1f 91       	pop	r17
   125d0:	0f 91       	pop	r16
   125d2:	ff 90       	pop	r15
   125d4:	ef 90       	pop	r14
   125d6:	df 90       	pop	r13
   125d8:	cf 90       	pop	r12
   125da:	bf 90       	pop	r11
   125dc:	af 90       	pop	r10
   125de:	7f 90       	pop	r7
   125e0:	6f 90       	pop	r6
   125e2:	5f 90       	pop	r5
   125e4:	4f 90       	pop	r4
   125e6:	08 95       	ret

000125e8 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>:
   125e8:	0f 93       	push	r16
   125ea:	1f 93       	push	r17
   125ec:	cf 93       	push	r28
   125ee:	df 93       	push	r29
   125f0:	eb 01       	movw	r28, r22
   125f2:	dc 01       	movw	r26, r24
   125f4:	ec 91       	ld	r30, X
   125f6:	4e 2f       	mov	r20, r30
   125f8:	50 e0       	ldi	r21, 0x00	; 0
   125fa:	fa 01       	movw	r30, r20
   125fc:	31 97       	sbiw	r30, 0x01	; 1
   125fe:	e8 30       	cpi	r30, 0x08	; 8
   12600:	f1 05       	cpc	r31, r1
   12602:	08 f0       	brcs	.+2      	; 0x12606 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x1e>
   12604:	6e c0       	rjmp	.+220    	; 0x126e2 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xfa>
   12606:	8c 01       	movw	r16, r24
   12608:	88 27       	eor	r24, r24
   1260a:	e9 51       	subi	r30, 0x19	; 25
   1260c:	ff 4f       	sbci	r31, 0xFF	; 255
   1260e:	8f 4f       	sbci	r24, 0xFF	; 255
   12610:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
   12614:	fd 01       	movw	r30, r26
   12616:	41 81       	ldd	r20, Z+1	; 0x01
   12618:	52 81       	ldd	r21, Z+2	; 0x02
   1261a:	63 81       	ldd	r22, Z+3	; 0x03
   1261c:	74 81       	ldd	r23, Z+4	; 0x04
   1261e:	ce 01       	movw	r24, r28
   12620:	df 91       	pop	r29
   12622:	cf 91       	pop	r28
   12624:	1f 91       	pop	r17
   12626:	0f 91       	pop	r16
   12628:	29 cf       	rjmp	.-430    	; 0x1247c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>
   1262a:	11 96       	adiw	r26, 0x01	; 1
   1262c:	0d 91       	ld	r16, X+
   1262e:	1c 91       	ld	r17, X
   12630:	12 97       	sbiw	r26, 0x02	; 2
   12632:	6b e5       	ldi	r22, 0x5B	; 91
   12634:	ce 01       	movw	r24, r28
   12636:	4c de       	rcall	.-872    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12638:	f8 01       	movw	r30, r16
   1263a:	02 81       	ldd	r16, Z+2	; 0x02
   1263c:	13 81       	ldd	r17, Z+3	; 0x03
   1263e:	01 15       	cp	r16, r1
   12640:	11 05       	cpc	r17, r1
   12642:	71 f0       	breq	.+28     	; 0x12660 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   12644:	be 01       	movw	r22, r28
   12646:	c8 01       	movw	r24, r16
   12648:	02 96       	adiw	r24, 0x02	; 2
   1264a:	ce df       	rcall	.-100    	; 0x125e8 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   1264c:	d8 01       	movw	r26, r16
   1264e:	0d 91       	ld	r16, X+
   12650:	1c 91       	ld	r17, X
   12652:	01 15       	cp	r16, r1
   12654:	11 05       	cpc	r17, r1
   12656:	21 f0       	breq	.+8      	; 0x12660 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   12658:	6c e2       	ldi	r22, 0x2C	; 44
   1265a:	ce 01       	movw	r24, r28
   1265c:	39 de       	rcall	.-910    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1265e:	ef cf       	rjmp	.-34     	; 0x1263e <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x56>
   12660:	6d e5       	ldi	r22, 0x5D	; 93
   12662:	ce 01       	movw	r24, r28
   12664:	df 91       	pop	r29
   12666:	cf 91       	pop	r28
   12668:	1f 91       	pop	r17
   1266a:	0f 91       	pop	r16
   1266c:	31 ce       	rjmp	.-926    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1266e:	fd 01       	movw	r30, r26
   12670:	81 81       	ldd	r24, Z+1	; 0x01
   12672:	92 81       	ldd	r25, Z+2	; 0x02
   12674:	df 91       	pop	r29
   12676:	cf 91       	pop	r28
   12678:	1f 91       	pop	r17
   1267a:	0f 91       	pop	r16
   1267c:	37 c0       	rjmp	.+110    	; 0x126ec <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   1267e:	11 96       	adiw	r26, 0x01	; 1
   12680:	6d 91       	ld	r22, X+
   12682:	7c 91       	ld	r23, X
   12684:	12 97       	sbiw	r26, 0x02	; 2
   12686:	ce 01       	movw	r24, r28
   12688:	df 91       	pop	r29
   1268a:	cf 91       	pop	r28
   1268c:	1f 91       	pop	r17
   1268e:	0f 91       	pop	r16
   12690:	57 ce       	rjmp	.-850    	; 0x12340 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   12692:	fd 01       	movw	r30, r26
   12694:	61 81       	ldd	r22, Z+1	; 0x01
   12696:	72 81       	ldd	r23, Z+2	; 0x02
   12698:	1e c0       	rjmp	.+60     	; 0x126d6 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   1269a:	6d e2       	ldi	r22, 0x2D	; 45
   1269c:	ce 01       	movw	r24, r28
   1269e:	18 de       	rcall	.-976    	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   126a0:	d8 01       	movw	r26, r16
   126a2:	11 96       	adiw	r26, 0x01	; 1
   126a4:	4d 91       	ld	r20, X+
   126a6:	5d 91       	ld	r21, X+
   126a8:	6d 91       	ld	r22, X+
   126aa:	7c 91       	ld	r23, X
   126ac:	14 97       	sbiw	r26, 0x04	; 4
   126ae:	ce 01       	movw	r24, r28
   126b0:	df 91       	pop	r29
   126b2:	cf 91       	pop	r28
   126b4:	1f 91       	pop	r17
   126b6:	0f 91       	pop	r16
   126b8:	9d ce       	rjmp	.-710    	; 0x123f4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   126ba:	fd 01       	movw	r30, r26
   126bc:	81 81       	ldd	r24, Z+1	; 0x01
   126be:	92 81       	ldd	r25, Z+2	; 0x02
   126c0:	a3 81       	ldd	r26, Z+3	; 0x03
   126c2:	b4 81       	ldd	r27, Z+4	; 0x04
   126c4:	89 2b       	or	r24, r25
   126c6:	8a 2b       	or	r24, r26
   126c8:	8b 2b       	or	r24, r27
   126ca:	19 f4       	brne	.+6      	; 0x126d2 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xea>
   126cc:	6d e0       	ldi	r22, 0x0D	; 13
   126ce:	77 e0       	ldi	r23, 0x07	; 7
   126d0:	02 c0       	rjmp	.+4      	; 0x126d6 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   126d2:	68 e0       	ldi	r22, 0x08	; 8
   126d4:	77 e0       	ldi	r23, 0x07	; 7
   126d6:	ce 01       	movw	r24, r28
   126d8:	df 91       	pop	r29
   126da:	cf 91       	pop	r28
   126dc:	1f 91       	pop	r17
   126de:	0f 91       	pop	r16
   126e0:	06 ce       	rjmp	.-1012   	; 0x122ee <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   126e2:	df 91       	pop	r29
   126e4:	cf 91       	pop	r28
   126e6:	1f 91       	pop	r17
   126e8:	0f 91       	pop	r16
   126ea:	08 95       	ret

000126ec <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>:
   126ec:	0f 93       	push	r16
   126ee:	1f 93       	push	r17
   126f0:	cf 93       	push	r28
   126f2:	df 93       	push	r29
   126f4:	8c 01       	movw	r16, r24
   126f6:	eb 01       	movw	r28, r22
   126f8:	6b e7       	ldi	r22, 0x7B	; 123
   126fa:	ce 01       	movw	r24, r28
   126fc:	e9 dd       	rcall	.-1070   	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   126fe:	f8 01       	movw	r30, r16
   12700:	02 81       	ldd	r16, Z+2	; 0x02
   12702:	13 81       	ldd	r17, Z+3	; 0x03
   12704:	01 15       	cp	r16, r1
   12706:	11 05       	cpc	r17, r1
   12708:	b1 f0       	breq	.+44     	; 0x12736 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   1270a:	f8 01       	movw	r30, r16
   1270c:	62 81       	ldd	r22, Z+2	; 0x02
   1270e:	73 81       	ldd	r23, Z+3	; 0x03
   12710:	ce 01       	movw	r24, r28
   12712:	16 de       	rcall	.-980    	; 0x12340 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   12714:	6a e3       	ldi	r22, 0x3A	; 58
   12716:	ce 01       	movw	r24, r28
   12718:	db dd       	rcall	.-1098   	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1271a:	be 01       	movw	r22, r28
   1271c:	c8 01       	movw	r24, r16
   1271e:	04 96       	adiw	r24, 0x04	; 4
   12720:	63 df       	rcall	.-314    	; 0x125e8 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   12722:	f8 01       	movw	r30, r16
   12724:	00 81       	ld	r16, Z
   12726:	11 81       	ldd	r17, Z+1	; 0x01
   12728:	01 15       	cp	r16, r1
   1272a:	11 05       	cpc	r17, r1
   1272c:	21 f0       	breq	.+8      	; 0x12736 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   1272e:	6c e2       	ldi	r22, 0x2C	; 44
   12730:	ce 01       	movw	r24, r28
   12732:	ce dd       	rcall	.-1124   	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12734:	e7 cf       	rjmp	.-50     	; 0x12704 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x18>
   12736:	6d e7       	ldi	r22, 0x7D	; 125
   12738:	ce 01       	movw	r24, r28
   1273a:	df 91       	pop	r29
   1273c:	cf 91       	pop	r28
   1273e:	1f 91       	pop	r17
   12740:	0f 91       	pop	r16
   12742:	c6 cd       	rjmp	.-1140   	; 0x122d0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>

00012744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>:
   12744:	cf 93       	push	r28
   12746:	df 93       	push	r29
   12748:	cd b7       	in	r28, 0x3d	; 61
   1274a:	de b7       	in	r29, 0x3e	; 62
   1274c:	2f 97       	sbiw	r28, 0x0f	; 15
   1274e:	0f b6       	in	r0, 0x3f	; 63
   12750:	f8 94       	cli
   12752:	de bf       	out	0x3e, r29	; 62
   12754:	0f be       	out	0x3f, r0	; 63
   12756:	cd bf       	out	0x3d, r28	; 61
   12758:	41 50       	subi	r20, 0x01	; 1
   1275a:	51 09       	sbc	r21, r1
   1275c:	46 0f       	add	r20, r22
   1275e:	57 1f       	adc	r21, r23
   12760:	5a 87       	std	Y+10, r21	; 0x0a
   12762:	49 87       	std	Y+9, r20	; 0x09
   12764:	7c 87       	std	Y+12, r23	; 0x0c
   12766:	6b 87       	std	Y+11, r22	; 0x0b
   12768:	fb 01       	movw	r30, r22
   1276a:	10 82       	st	Z, r1
   1276c:	9e 01       	movw	r18, r28
   1276e:	27 5f       	subi	r18, 0xF7	; 247
   12770:	3f 4f       	sbci	r19, 0xFF	; 255
   12772:	3e 87       	std	Y+14, r19	; 0x0e
   12774:	2d 87       	std	Y+13, r18	; 0x0d
   12776:	2f 85       	ldd	r18, Y+15	; 0x0f
   12778:	20 78       	andi	r18, 0x80	; 128
   1277a:	20 62       	ori	r18, 0x20	; 32
   1277c:	20 68       	ori	r18, 0x80	; 128
   1277e:	2f 87       	std	Y+15, r18	; 0x0f
   12780:	9e 01       	movw	r18, r28
   12782:	23 5f       	subi	r18, 0xF3	; 243
   12784:	3f 4f       	sbci	r19, 0xFF	; 255
   12786:	3f 83       	std	Y+7, r19	; 0x07
   12788:	2e 83       	std	Y+6, r18	; 0x06
   1278a:	1d 82       	std	Y+5, r1	; 0x05
   1278c:	18 86       	std	Y+8, r1	; 0x08
   1278e:	28 50       	subi	r18, 0x08	; 8
   12790:	31 09       	sbc	r19, r1
   12792:	3a 83       	std	Y+2, r19	; 0x02
   12794:	29 83       	std	Y+1, r18	; 0x01
   12796:	1c 82       	std	Y+4, r1	; 0x04
   12798:	1b 82       	std	Y+3, r1	; 0x03
   1279a:	be 01       	movw	r22, r28
   1279c:	6f 5f       	subi	r22, 0xFF	; 255
   1279e:	7f 4f       	sbci	r23, 0xFF	; 255
   127a0:	a5 df       	rcall	.-182    	; 0x126ec <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   127a2:	8b 81       	ldd	r24, Y+3	; 0x03
   127a4:	9c 81       	ldd	r25, Y+4	; 0x04
   127a6:	2f 96       	adiw	r28, 0x0f	; 15
   127a8:	0f b6       	in	r0, 0x3f	; 63
   127aa:	f8 94       	cli
   127ac:	de bf       	out	0x3e, r29	; 62
   127ae:	0f be       	out	0x3f, r0	; 63
   127b0:	cd bf       	out	0x3d, r28	; 61
   127b2:	df 91       	pop	r29
   127b4:	cf 91       	pop	r28
   127b6:	08 95       	ret

000127b8 <_Z12Pub_Sub_DataPcPhjh>:
   127b8:	2f 92       	push	r2
   127ba:	3f 92       	push	r3
   127bc:	4f 92       	push	r4
   127be:	5f 92       	push	r5
   127c0:	6f 92       	push	r6
   127c2:	7f 92       	push	r7
   127c4:	8f 92       	push	r8
   127c6:	9f 92       	push	r9
   127c8:	af 92       	push	r10
   127ca:	bf 92       	push	r11
   127cc:	cf 92       	push	r12
   127ce:	df 92       	push	r13
   127d0:	ef 92       	push	r14
   127d2:	ff 92       	push	r15
   127d4:	0f 93       	push	r16
   127d6:	1f 93       	push	r17
   127d8:	cf 93       	push	r28
   127da:	df 93       	push	r29
   127dc:	cd b7       	in	r28, 0x3d	; 61
   127de:	de b7       	in	r29, 0x3e	; 62
   127e0:	ce 5b       	subi	r28, 0xBE	; 190
   127e2:	d6 40       	sbci	r29, 0x06	; 6
   127e4:	0f b6       	in	r0, 0x3f	; 63
   127e6:	f8 94       	cli
   127e8:	de bf       	out	0x3e, r29	; 62
   127ea:	0f be       	out	0x3f, r0	; 63
   127ec:	cd bf       	out	0x3d, r28	; 61
   127ee:	ae 01       	movw	r20, r28
   127f0:	47 5f       	subi	r20, 0xF7	; 247
   127f2:	5f 4f       	sbci	r21, 0xFF	; 255
   127f4:	5c 83       	std	Y+4, r21	; 0x04
   127f6:	4b 83       	std	Y+3, r20	; 0x03
   127f8:	4c e2       	ldi	r20, 0x2C	; 44
   127fa:	56 e0       	ldi	r21, 0x06	; 6
   127fc:	5e 83       	std	Y+6, r21	; 0x06
   127fe:	4d 83       	std	Y+5, r20	; 0x05
   12800:	18 86       	std	Y+8, r1	; 0x08
   12802:	1f 82       	std	Y+7, r1	; 0x07
   12804:	43 ed       	ldi	r20, 0xD3	; 211
   12806:	57 e0       	ldi	r21, 0x07	; 7
   12808:	5a 83       	std	Y+2, r21	; 0x02
   1280a:	49 83       	std	Y+1, r20	; 0x01
   1280c:	21 30       	cpi	r18, 0x01	; 1
   1280e:	11 f0       	breq	.+4      	; 0x12814 <_Z12Pub_Sub_DataPcPhjh+0x5c>
   12810:	0c 94 13 a5 	jmp	0x14a26	; 0x14a26 <_Z12Pub_Sub_DataPcPhjh+0x226e>
   12814:	61 15       	cp	r22, r1
   12816:	71 05       	cpc	r23, r1
   12818:	19 f4       	brne	.+6      	; 0x12820 <_Z12Pub_Sub_DataPcPhjh+0x68>
   1281a:	2b ee       	ldi	r18, 0xEB	; 235
   1281c:	36 e0       	ldi	r19, 0x06	; 6
   1281e:	01 c0       	rjmp	.+2      	; 0x12822 <_Z12Pub_Sub_DataPcPhjh+0x6a>
   12820:	9b 01       	movw	r18, r22
   12822:	ca 54       	subi	r28, 0x4A	; 74
   12824:	d9 4f       	sbci	r29, 0xF9	; 249
   12826:	99 83       	std	Y+1, r25	; 0x01
   12828:	88 83       	st	Y, r24
   1282a:	c6 5b       	subi	r28, 0xB6	; 182
   1282c:	d6 40       	sbci	r29, 0x06	; 6
   1282e:	ae 01       	movw	r20, r28
   12830:	4b 5c       	subi	r20, 0xCB	; 203
   12832:	59 4f       	sbci	r21, 0xF9	; 249
   12834:	c2 55       	subi	r28, 0x52	; 82
   12836:	d9 4f       	sbci	r29, 0xF9	; 249
   12838:	59 83       	std	Y+1, r21	; 0x01
   1283a:	48 83       	st	Y, r20
   1283c:	ce 5a       	subi	r28, 0xAE	; 174
   1283e:	d6 40       	sbci	r29, 0x06	; 6
   12840:	ce 01       	movw	r24, r28
   12842:	01 96       	adiw	r24, 0x01	; 1
   12844:	cb 5c       	subi	r28, 0xCB	; 203
   12846:	d9 4f       	sbci	r29, 0xF9	; 249
   12848:	99 83       	std	Y+1, r25	; 0x01
   1284a:	88 83       	st	Y, r24
   1284c:	c5 53       	subi	r28, 0x35	; 53
   1284e:	d6 40       	sbci	r29, 0x06	; 6
   12850:	c9 5c       	subi	r28, 0xC9	; 201
   12852:	d9 4f       	sbci	r29, 0xF9	; 249
   12854:	39 83       	std	Y+1, r19	; 0x01
   12856:	28 83       	st	Y, r18
   12858:	c7 53       	subi	r28, 0x37	; 55
   1285a:	d6 40       	sbci	r29, 0x06	; 6
   1285c:	c7 5c       	subi	r28, 0xC7	; 199
   1285e:	d9 4f       	sbci	r29, 0xF9	; 249
   12860:	79 83       	std	Y+1, r23	; 0x01
   12862:	68 83       	st	Y, r22
   12864:	c9 53       	subi	r28, 0x39	; 57
   12866:	d6 40       	sbci	r29, 0x06	; 6
   12868:	8a e0       	ldi	r24, 0x0A	; 10
   1286a:	c5 5c       	subi	r28, 0xC5	; 197
   1286c:	d9 4f       	sbci	r29, 0xF9	; 249
   1286e:	88 83       	st	Y, r24
   12870:	cb 53       	subi	r28, 0x3B	; 59
   12872:	d6 40       	sbci	r29, 0x06	; 6
   12874:	ca 01       	movw	r24, r20
   12876:	28 d9       	rcall	.-3504   	; 0x11ac8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   12878:	2c 01       	movw	r4, r24
   1287a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1287e:	81 30       	cpi	r24, 0x01	; 1
   12880:	31 f4       	brne	.+12     	; 0x1288e <_Z12Pub_Sub_DataPcPhjh+0xd6>
   12882:	60 e5       	ldi	r22, 0x50	; 80
   12884:	7b e3       	ldi	r23, 0x3B	; 59
   12886:	86 ec       	ldi	r24, 0xC6	; 198
   12888:	94 e1       	ldi	r25, 0x14	; 20
   1288a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1288e:	d2 01       	movw	r26, r4
   12890:	8d 91       	ld	r24, X+
   12892:	9c 91       	ld	r25, X
   12894:	89 2b       	or	r24, r25
   12896:	11 f4       	brne	.+4      	; 0x1289c <_Z12Pub_Sub_DataPcPhjh+0xe4>
   12898:	0c 94 13 a5 	jmp	0x14a26	; 0x14a26 <_Z12Pub_Sub_DataPcPhjh+0x226e>
   1289c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   128a0:	81 30       	cpi	r24, 0x01	; 1
   128a2:	31 f4       	brne	.+12     	; 0x128b0 <_Z12Pub_Sub_DataPcPhjh+0xf8>
   128a4:	67 e3       	ldi	r22, 0x37	; 55
   128a6:	7b e3       	ldi	r23, 0x3B	; 59
   128a8:	86 ec       	ldi	r24, 0xC6	; 198
   128aa:	94 e1       	ldi	r25, 0x14	; 20
   128ac:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   128b0:	8e 01       	movw	r16, r28
   128b2:	0b 57       	subi	r16, 0x7B	; 123
   128b4:	19 4f       	sbci	r17, 0xF9	; 249
   128b6:	88 e2       	ldi	r24, 0x28	; 40
   128b8:	f8 01       	movw	r30, r16
   128ba:	11 92       	st	Z+, r1
   128bc:	8a 95       	dec	r24
   128be:	e9 f7       	brne	.-6      	; 0x128ba <_Z12Pub_Sub_DataPcPhjh+0x102>
   128c0:	8e ec       	ldi	r24, 0xCE	; 206
   128c2:	93 e1       	ldi	r25, 0x13	; 19
   128c4:	9f 93       	push	r25
   128c6:	8f 93       	push	r24
   128c8:	8e ec       	ldi	r24, 0xCE	; 206
   128ca:	95 e0       	ldi	r25, 0x05	; 5
   128cc:	9f 93       	push	r25
   128ce:	8f 93       	push	r24
   128d0:	1f 93       	push	r17
   128d2:	0f 93       	push	r16
   128d4:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   128d8:	ca 54       	subi	r28, 0x4A	; 74
   128da:	d9 4f       	sbci	r29, 0xF9	; 249
   128dc:	68 81       	ld	r22, Y
   128de:	79 81       	ldd	r23, Y+1	; 0x01
   128e0:	c6 5b       	subi	r28, 0xB6	; 182
   128e2:	d6 40       	sbci	r29, 0x06	; 6
   128e4:	c8 01       	movw	r24, r16
   128e6:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   128ea:	0f 90       	pop	r0
   128ec:	0f 90       	pop	r0
   128ee:	0f 90       	pop	r0
   128f0:	0f 90       	pop	r0
   128f2:	0f 90       	pop	r0
   128f4:	0f 90       	pop	r0
   128f6:	89 2b       	or	r24, r25
   128f8:	31 f5       	brne	.+76     	; 0x12946 <_Z12Pub_Sub_DataPcPhjh+0x18e>
   128fa:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   128fe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12902:	81 30       	cpi	r24, 0x01	; 1
   12904:	51 f4       	brne	.+20     	; 0x1291a <_Z12Pub_Sub_DataPcPhjh+0x162>
   12906:	6b e0       	ldi	r22, 0x0B	; 11
   12908:	7b e3       	ldi	r23, 0x3B	; 59
   1290a:	86 ec       	ldi	r24, 0xC6	; 198
   1290c:	94 e1       	ldi	r25, 0x14	; 20
   1290e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   12912:	86 ec       	ldi	r24, 0xC6	; 198
   12914:	94 e1       	ldi	r25, 0x14	; 20
   12916:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1291a:	81 e0       	ldi	r24, 0x01	; 1
   1291c:	80 93 1f 14 	sts	0x141F, r24	; 0x80141f <_sRuble_Parameters+0x71>
   12920:	c3 55       	subi	r28, 0x53	; 83
   12922:	d9 4f       	sbci	r29, 0xF9	; 249
   12924:	88 83       	st	Y, r24
   12926:	cd 5a       	subi	r28, 0xAD	; 173
   12928:	d6 40       	sbci	r29, 0x06	; 6
   1292a:	be 01       	movw	r22, r28
   1292c:	63 55       	subi	r22, 0x53	; 83
   1292e:	79 4f       	sbci	r23, 0xF9	; 249
   12930:	84 ef       	ldi	r24, 0xF4	; 244
   12932:	94 e0       	ldi	r25, 0x04	; 4
   12934:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   12938:	f1 e0       	ldi	r31, 0x01	; 1
   1293a:	c0 55       	subi	r28, 0x50	; 80
   1293c:	d9 4f       	sbci	r29, 0xF9	; 249
   1293e:	f8 83       	st	Y, r31
   12940:	c0 5b       	subi	r28, 0xB0	; 176
   12942:	d6 40       	sbci	r29, 0x06	; 6
   12944:	05 c0       	rjmp	.+10     	; 0x12950 <_Z12Pub_Sub_DataPcPhjh+0x198>
   12946:	c0 55       	subi	r28, 0x50	; 80
   12948:	d9 4f       	sbci	r29, 0xF9	; 249
   1294a:	18 82       	st	Y, r1
   1294c:	c0 5b       	subi	r28, 0xB0	; 176
   1294e:	d6 40       	sbci	r29, 0x06	; 6
   12950:	88 e2       	ldi	r24, 0x28	; 40
   12952:	d8 01       	movw	r26, r16
   12954:	1d 92       	st	X+, r1
   12956:	8a 95       	dec	r24
   12958:	e9 f7       	brne	.-6      	; 0x12954 <_Z12Pub_Sub_DataPcPhjh+0x19c>
   1295a:	8e ec       	ldi	r24, 0xCE	; 206
   1295c:	93 e1       	ldi	r25, 0x13	; 19
   1295e:	9f 93       	push	r25
   12960:	8f 93       	push	r24
   12962:	86 ee       	ldi	r24, 0xE6	; 230
   12964:	95 e0       	ldi	r25, 0x05	; 5
   12966:	9f 93       	push	r25
   12968:	8f 93       	push	r24
   1296a:	1f 93       	push	r17
   1296c:	0f 93       	push	r16
   1296e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   12972:	ca 54       	subi	r28, 0x4A	; 74
   12974:	d9 4f       	sbci	r29, 0xF9	; 249
   12976:	68 81       	ld	r22, Y
   12978:	79 81       	ldd	r23, Y+1	; 0x01
   1297a:	c6 5b       	subi	r28, 0xB6	; 182
   1297c:	d6 40       	sbci	r29, 0x06	; 6
   1297e:	c8 01       	movw	r24, r16
   12980:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   12984:	0f 90       	pop	r0
   12986:	0f 90       	pop	r0
   12988:	0f 90       	pop	r0
   1298a:	0f 90       	pop	r0
   1298c:	0f 90       	pop	r0
   1298e:	0f 90       	pop	r0
   12990:	89 2b       	or	r24, r25
   12992:	09 f0       	breq	.+2      	; 0x12996 <_Z12Pub_Sub_DataPcPhjh+0x1de>
   12994:	bd c0       	rjmp	.+378    	; 0x12b10 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12996:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   1299a:	86 34       	cpi	r24, 0x46	; 70
   1299c:	10 f4       	brcc	.+4      	; 0x129a2 <_Z12Pub_Sub_DataPcPhjh+0x1ea>
   1299e:	0c 94 13 a5 	jmp	0x14a26	; 0x14a26 <_Z12Pub_Sub_DataPcPhjh+0x226e>
   129a2:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   129a6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   129aa:	81 30       	cpi	r24, 0x01	; 1
   129ac:	51 f4       	brne	.+20     	; 0x129c2 <_Z12Pub_Sub_DataPcPhjh+0x20a>
   129ae:	65 ef       	ldi	r22, 0xF5	; 245
   129b0:	7a e3       	ldi	r23, 0x3A	; 58
   129b2:	86 ec       	ldi	r24, 0xC6	; 198
   129b4:	94 e1       	ldi	r25, 0x14	; 20
   129b6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   129ba:	86 ec       	ldi	r24, 0xC6	; 198
   129bc:	94 e1       	ldi	r25, 0x14	; 20
   129be:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   129c2:	80 91 71 14 	lds	r24, 0x1471	; 0x801471 <_sRuble_Parameters+0xc3>
   129c6:	81 30       	cpi	r24, 0x01	; 1
   129c8:	09 f4       	brne	.+2      	; 0x129cc <_Z12Pub_Sub_DataPcPhjh+0x214>
   129ca:	8e c0       	rjmp	.+284    	; 0x12ae8 <_Z12Pub_Sub_DataPcPhjh+0x330>
   129cc:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   129d0:	82 30       	cpi	r24, 0x02	; 2
   129d2:	09 f4       	brne	.+2      	; 0x129d6 <_Z12Pub_Sub_DataPcPhjh+0x21e>
   129d4:	90 c0       	rjmp	.+288    	; 0x12af6 <_Z12Pub_Sub_DataPcPhjh+0x33e>
   129d6:	84 30       	cpi	r24, 0x04	; 4
   129d8:	09 f4       	brne	.+2      	; 0x129dc <_Z12Pub_Sub_DataPcPhjh+0x224>
   129da:	94 c0       	rjmp	.+296    	; 0x12b04 <_Z12Pub_Sub_DataPcPhjh+0x34c>
   129dc:	61 ef       	ldi	r22, 0xF1	; 241
   129de:	7a e3       	ldi	r23, 0x3A	; 58
   129e0:	c2 01       	movw	r24, r4
   129e2:	c7 d9       	rcall	.-3186   	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   129e4:	88 23       	and	r24, r24
   129e6:	09 f4       	brne	.+2      	; 0x129ea <_Z12Pub_Sub_DataPcPhjh+0x232>
   129e8:	76 c0       	rjmp	.+236    	; 0x12ad6 <_Z12Pub_Sub_DataPcPhjh+0x31e>
   129ea:	8f 30       	cpi	r24, 0x0F	; 15
   129ec:	98 f4       	brcc	.+38     	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   129ee:	28 2f       	mov	r18, r24
   129f0:	30 e0       	ldi	r19, 0x00	; 0
   129f2:	21 50       	subi	r18, 0x01	; 1
   129f4:	31 09       	sbc	r19, r1
   129f6:	96 e0       	ldi	r25, 0x06	; 6
   129f8:	92 9f       	mul	r25, r18
   129fa:	f0 01       	movw	r30, r0
   129fc:	93 9f       	mul	r25, r19
   129fe:	f0 0d       	add	r31, r0
   12a00:	11 24       	eor	r1, r1
   12a02:	e2 5b       	subi	r30, 0xB2	; 178
   12a04:	f2 4f       	sbci	r31, 0xF2	; 242
   12a06:	90 81       	ld	r25, Z
   12a08:	99 23       	and	r25, r25
   12a0a:	21 f0       	breq	.+8      	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   12a0c:	80 93 65 14 	sts	0x1465, r24	; 0x801465 <_sRuble_Parameters+0xb7>
   12a10:	81 30       	cpi	r24, 0x01	; 1
   12a12:	61 f4       	brne	.+24     	; 0x12a2c <_Z12Pub_Sub_DataPcPhjh+0x274>
   12a14:	84 ed       	ldi	r24, 0xD4	; 212
   12a16:	93 e0       	ldi	r25, 0x03	; 3
   12a18:	e0 ed       	ldi	r30, 0xD0	; 208
   12a1a:	ff e0       	ldi	r31, 0x0F	; 15
   12a1c:	df 01       	movw	r26, r30
   12a1e:	9c 01       	movw	r18, r24
   12a20:	1d 92       	st	X+, r1
   12a22:	21 50       	subi	r18, 0x01	; 1
   12a24:	30 40       	sbci	r19, 0x00	; 0
   12a26:	e1 f7       	brne	.-8      	; 0x12a20 <_Z12Pub_Sub_DataPcPhjh+0x268>
   12a28:	0c 94 13 a5 	jmp	0x14a26	; 0x14a26 <_Z12Pub_Sub_DataPcPhjh+0x226e>
   12a2c:	6f ee       	ldi	r22, 0xEF	; 239
   12a2e:	7a e3       	ldi	r23, 0x3A	; 58
   12a30:	c2 01       	movw	r24, r4
   12a32:	34 d9       	rcall	.-3480   	; 0x11c9c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12a34:	2c e3       	ldi	r18, 0x3C	; 60
   12a36:	ac 01       	movw	r20, r24
   12a38:	24 9f       	mul	r18, r20
   12a3a:	c0 01       	movw	r24, r0
   12a3c:	25 9f       	mul	r18, r21
   12a3e:	90 0d       	add	r25, r0
   12a40:	11 24       	eor	r1, r1
   12a42:	90 93 c5 13 	sts	0x13C5, r25	; 0x8013c5 <_sRuble_Parameters+0x17>
   12a46:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
   12a4a:	83 e0       	ldi	r24, 0x03	; 3
   12a4c:	80 93 d7 13 	sts	0x13D7, r24	; 0x8013d7 <_sRuble_Parameters+0x29>
   12a50:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12a54:	81 30       	cpi	r24, 0x01	; 1
   12a56:	31 f5       	brne	.+76     	; 0x12aa4 <_Z12Pub_Sub_DataPcPhjh+0x2ec>
   12a58:	60 ee       	ldi	r22, 0xE0	; 224
   12a5a:	7a e3       	ldi	r23, 0x3A	; 58
   12a5c:	86 ec       	ldi	r24, 0xC6	; 198
   12a5e:	94 e1       	ldi	r25, 0x14	; 20
   12a60:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   12a64:	86 ec       	ldi	r24, 0xC6	; 198
   12a66:	94 e1       	ldi	r25, 0x14	; 20
   12a68:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   12a6c:	60 91 c4 13 	lds	r22, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   12a70:	70 91 c5 13 	lds	r23, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   12a74:	4a e0       	ldi	r20, 0x0A	; 10
   12a76:	50 e0       	ldi	r21, 0x00	; 0
   12a78:	86 ec       	ldi	r24, 0xC6	; 198
   12a7a:	94 e1       	ldi	r25, 0x14	; 20
   12a7c:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
   12a80:	60 ed       	ldi	r22, 0xD0	; 208
   12a82:	7a e3       	ldi	r23, 0x3A	; 58
   12a84:	86 ec       	ldi	r24, 0xC6	; 198
   12a86:	94 e1       	ldi	r25, 0x14	; 20
   12a88:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   12a8c:	86 ec       	ldi	r24, 0xC6	; 198
   12a8e:	94 e1       	ldi	r25, 0x14	; 20
   12a90:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   12a94:	4a e0       	ldi	r20, 0x0A	; 10
   12a96:	50 e0       	ldi	r21, 0x00	; 0
   12a98:	60 91 65 14 	lds	r22, 0x1465	; 0x801465 <_sRuble_Parameters+0xb7>
   12a9c:	86 ec       	ldi	r24, 0xC6	; 198
   12a9e:	94 e1       	ldi	r25, 0x14	; 20
   12aa0:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   12aa4:	10 92 cd 13 	sts	0x13CD, r1	; 0x8013cd <_sRuble_Parameters+0x1f>
   12aa8:	10 92 cc 13 	sts	0x13CC, r1	; 0x8013cc <_sRuble_Parameters+0x1e>
   12aac:	10 92 72 14 	sts	0x1472, r1	; 0x801472 <_sRuble_Parameters+0xc4>
   12ab0:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
   12ab4:	88 e9       	ldi	r24, 0x98	; 152
   12ab6:	9c e0       	ldi	r25, 0x0C	; 12
   12ab8:	0e 94 c1 86 	call	0x10d82	; 0x10d82 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   12abc:	68 e9       	ldi	r22, 0x98	; 152
   12abe:	74 e1       	ldi	r23, 0x14	; 20
   12ac0:	8b ea       	ldi	r24, 0xAB	; 171
   12ac2:	9e e0       	ldi	r25, 0x0E	; 14
   12ac4:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   12ac8:	51 e0       	ldi	r21, 0x01	; 1
   12aca:	c0 55       	subi	r28, 0x50	; 80
   12acc:	d9 4f       	sbci	r29, 0xF9	; 249
   12ace:	58 83       	st	Y, r21
   12ad0:	c0 5b       	subi	r28, 0xB0	; 176
   12ad2:	d6 40       	sbci	r29, 0x06	; 6
   12ad4:	1d c0       	rjmp	.+58     	; 0x12b10 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12ad6:	10 92 65 14 	sts	0x1465, r1	; 0x801465 <_sRuble_Parameters+0xb7>
   12ada:	81 e0       	ldi	r24, 0x01	; 1
   12adc:	c0 55       	subi	r28, 0x50	; 80
   12ade:	d9 4f       	sbci	r29, 0xF9	; 249
   12ae0:	88 83       	st	Y, r24
   12ae2:	c0 5b       	subi	r28, 0xB0	; 176
   12ae4:	d6 40       	sbci	r29, 0x06	; 6
   12ae6:	14 c0       	rjmp	.+40     	; 0x12b10 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12ae8:	91 e0       	ldi	r25, 0x01	; 1
   12aea:	c0 55       	subi	r28, 0x50	; 80
   12aec:	d9 4f       	sbci	r29, 0xF9	; 249
   12aee:	98 83       	st	Y, r25
   12af0:	c0 5b       	subi	r28, 0xB0	; 176
   12af2:	d6 40       	sbci	r29, 0x06	; 6
   12af4:	0d c0       	rjmp	.+26     	; 0x12b10 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12af6:	a1 e0       	ldi	r26, 0x01	; 1
   12af8:	c0 55       	subi	r28, 0x50	; 80
   12afa:	d9 4f       	sbci	r29, 0xF9	; 249
   12afc:	a8 83       	st	Y, r26
   12afe:	c0 5b       	subi	r28, 0xB0	; 176
   12b00:	d6 40       	sbci	r29, 0x06	; 6
   12b02:	06 c0       	rjmp	.+12     	; 0x12b10 <_Z12Pub_Sub_DataPcPhjh+0x358>
   12b04:	b1 e0       	ldi	r27, 0x01	; 1
   12b06:	c0 55       	subi	r28, 0x50	; 80
   12b08:	d9 4f       	sbci	r29, 0xF9	; 249
   12b0a:	b8 83       	st	Y, r27
   12b0c:	c0 5b       	subi	r28, 0xB0	; 176
   12b0e:	d6 40       	sbci	r29, 0x06	; 6
   12b10:	88 e2       	ldi	r24, 0x28	; 40
   12b12:	f8 01       	movw	r30, r16
   12b14:	11 92       	st	Z+, r1
   12b16:	8a 95       	dec	r24
   12b18:	e9 f7       	brne	.-6      	; 0x12b14 <_Z12Pub_Sub_DataPcPhjh+0x35c>
   12b1a:	8e ec       	ldi	r24, 0xCE	; 206
   12b1c:	93 e1       	ldi	r25, 0x13	; 19
   12b1e:	9f 93       	push	r25
   12b20:	8f 93       	push	r24
   12b22:	85 ef       	ldi	r24, 0xF5	; 245
   12b24:	95 e0       	ldi	r25, 0x05	; 5
   12b26:	9f 93       	push	r25
   12b28:	8f 93       	push	r24
   12b2a:	1f 93       	push	r17
   12b2c:	0f 93       	push	r16
   12b2e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   12b32:	ca 54       	subi	r28, 0x4A	; 74
   12b34:	d9 4f       	sbci	r29, 0xF9	; 249
   12b36:	68 81       	ld	r22, Y
   12b38:	79 81       	ldd	r23, Y+1	; 0x01
   12b3a:	c6 5b       	subi	r28, 0xB6	; 182
   12b3c:	d6 40       	sbci	r29, 0x06	; 6
   12b3e:	c8 01       	movw	r24, r16
   12b40:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   12b44:	0f 90       	pop	r0
   12b46:	0f 90       	pop	r0
   12b48:	0f 90       	pop	r0
   12b4a:	0f 90       	pop	r0
   12b4c:	0f 90       	pop	r0
   12b4e:	0f 90       	pop	r0
   12b50:	89 2b       	or	r24, r25
   12b52:	e9 f4       	brne	.+58     	; 0x12b8e <_Z12Pub_Sub_DataPcPhjh+0x3d6>
   12b54:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12b58:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12b5c:	81 30       	cpi	r24, 0x01	; 1
   12b5e:	89 f4       	brne	.+34     	; 0x12b82 <_Z12Pub_Sub_DataPcPhjh+0x3ca>
   12b60:	6e ea       	ldi	r22, 0xAE	; 174
   12b62:	7a e3       	ldi	r23, 0x3A	; 58
   12b64:	86 ec       	ldi	r24, 0xC6	; 198
   12b66:	94 e1       	ldi	r25, 0x14	; 20
   12b68:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   12b6c:	86 ec       	ldi	r24, 0xC6	; 198
   12b6e:	94 e1       	ldi	r25, 0x14	; 20
   12b70:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   12b74:	f1 e0       	ldi	r31, 0x01	; 1
   12b76:	c0 55       	subi	r28, 0x50	; 80
   12b78:	d9 4f       	sbci	r29, 0xF9	; 249
   12b7a:	f8 83       	st	Y, r31
   12b7c:	c0 5b       	subi	r28, 0xB0	; 176
   12b7e:	d6 40       	sbci	r29, 0x06	; 6
   12b80:	06 c0       	rjmp	.+12     	; 0x12b8e <_Z12Pub_Sub_DataPcPhjh+0x3d6>
   12b82:	21 e0       	ldi	r18, 0x01	; 1
   12b84:	c0 55       	subi	r28, 0x50	; 80
   12b86:	d9 4f       	sbci	r29, 0xF9	; 249
   12b88:	28 83       	st	Y, r18
   12b8a:	c0 5b       	subi	r28, 0xB0	; 176
   12b8c:	d6 40       	sbci	r29, 0x06	; 6
   12b8e:	88 e2       	ldi	r24, 0x28	; 40
   12b90:	d8 01       	movw	r26, r16
   12b92:	1d 92       	st	X+, r1
   12b94:	8a 95       	dec	r24
   12b96:	e9 f7       	brne	.-6      	; 0x12b92 <_Z12Pub_Sub_DataPcPhjh+0x3da>
   12b98:	8e ec       	ldi	r24, 0xCE	; 206
   12b9a:	93 e1       	ldi	r25, 0x13	; 19
   12b9c:	9f 93       	push	r25
   12b9e:	8f 93       	push	r24
   12ba0:	83 eb       	ldi	r24, 0xB3	; 179
   12ba2:	95 e0       	ldi	r25, 0x05	; 5
   12ba4:	9f 93       	push	r25
   12ba6:	8f 93       	push	r24
   12ba8:	1f 93       	push	r17
   12baa:	0f 93       	push	r16
   12bac:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   12bb0:	ca 54       	subi	r28, 0x4A	; 74
   12bb2:	d9 4f       	sbci	r29, 0xF9	; 249
   12bb4:	68 81       	ld	r22, Y
   12bb6:	79 81       	ldd	r23, Y+1	; 0x01
   12bb8:	c6 5b       	subi	r28, 0xB6	; 182
   12bba:	d6 40       	sbci	r29, 0x06	; 6
   12bbc:	c8 01       	movw	r24, r16
   12bbe:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   12bc2:	0f 90       	pop	r0
   12bc4:	0f 90       	pop	r0
   12bc6:	0f 90       	pop	r0
   12bc8:	0f 90       	pop	r0
   12bca:	0f 90       	pop	r0
   12bcc:	0f 90       	pop	r0
   12bce:	89 2b       	or	r24, r25
   12bd0:	09 f0       	breq	.+2      	; 0x12bd4 <_Z12Pub_Sub_DataPcPhjh+0x41c>
   12bd2:	bc c6       	rjmp	.+3448   	; 0x1394c <_Z12Pub_Sub_DataPcPhjh+0x1194>
   12bd4:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   12bd8:	6a ea       	ldi	r22, 0xAA	; 170
   12bda:	7a e3       	ldi	r23, 0x3A	; 58
   12bdc:	c2 01       	movw	r24, r4
   12bde:	c9 d8       	rcall	.-3694   	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12be0:	98 2e       	mov	r9, r24
   12be2:	b8 e6       	ldi	r27, 0x68	; 104
   12be4:	8b 17       	cp	r24, r27
   12be6:	11 f4       	brne	.+4      	; 0x12bec <_Z12Pub_Sub_DataPcPhjh+0x434>
   12be8:	0c 94 13 a5 	jmp	0x14a26	; 0x14a26 <_Z12Pub_Sub_DataPcPhjh+0x226e>
   12bec:	ef ef       	ldi	r30, 0xFF	; 255
   12bee:	e8 0f       	add	r30, r24
   12bf0:	c8 54       	subi	r28, 0x48	; 72
   12bf2:	d9 4f       	sbci	r29, 0xF9	; 249
   12bf4:	e8 83       	st	Y, r30
   12bf6:	c8 5b       	subi	r28, 0xB8	; 184
   12bf8:	d6 40       	sbci	r29, 0x06	; 6
   12bfa:	e2 37       	cpi	r30, 0x72	; 114
   12bfc:	08 f0       	brcs	.+2      	; 0x12c00 <_Z12Pub_Sub_DataPcPhjh+0x448>
   12bfe:	a6 c6       	rjmp	.+3404   	; 0x1394c <_Z12Pub_Sub_DataPcPhjh+0x1194>
   12c00:	fe e0       	ldi	r31, 0x0E	; 14
   12c02:	f8 17       	cp	r31, r24
   12c04:	60 f0       	brcs	.+24     	; 0x12c1e <_Z12Pub_Sub_DataPcPhjh+0x466>
   12c06:	90 e0       	ldi	r25, 0x00	; 0
   12c08:	01 97       	sbiw	r24, 0x01	; 1
   12c0a:	26 e0       	ldi	r18, 0x06	; 6
   12c0c:	28 9f       	mul	r18, r24
   12c0e:	f0 01       	movw	r30, r0
   12c10:	29 9f       	mul	r18, r25
   12c12:	f0 0d       	add	r31, r0
   12c14:	11 24       	eor	r1, r1
   12c16:	e2 5b       	subi	r30, 0xB2	; 178
   12c18:	f2 4f       	sbci	r31, 0xF2	; 242
   12c1a:	90 82       	st	Z, r9
   12c1c:	0f c0       	rjmp	.+30     	; 0x12c3c <_Z12Pub_Sub_DataPcPhjh+0x484>
   12c1e:	24 e6       	ldi	r18, 0x64	; 100
   12c20:	28 17       	cp	r18, r24
   12c22:	60 f4       	brcc	.+24     	; 0x12c3c <_Z12Pub_Sub_DataPcPhjh+0x484>
   12c24:	90 e0       	ldi	r25, 0x00	; 0
   12c26:	85 56       	subi	r24, 0x65	; 101
   12c28:	91 09       	sbc	r25, r1
   12c2a:	2b e1       	ldi	r18, 0x1B	; 27
   12c2c:	28 9f       	mul	r18, r24
   12c2e:	f0 01       	movw	r30, r0
   12c30:	29 9f       	mul	r18, r25
   12c32:	f0 0d       	add	r31, r0
   12c34:	11 24       	eor	r1, r1
   12c36:	e8 51       	subi	r30, 0x18	; 24
   12c38:	f2 4f       	sbci	r31, 0xF2	; 242
   12c3a:	91 82       	std	Z+1, r9	; 0x01
   12c3c:	3e 01       	movw	r6, r28
   12c3e:	33 ea       	ldi	r19, 0xA3	; 163
   12c40:	63 1a       	sub	r6, r19
   12c42:	39 ef       	ldi	r19, 0xF9	; 249
   12c44:	73 0a       	sbc	r7, r19
   12c46:	88 e0       	ldi	r24, 0x08	; 8
   12c48:	d3 01       	movw	r26, r6
   12c4a:	e8 2f       	mov	r30, r24
   12c4c:	1d 92       	st	X+, r1
   12c4e:	ea 95       	dec	r30
   12c50:	e9 f7       	brne	.-6      	; 0x12c4c <_Z12Pub_Sub_DataPcPhjh+0x494>
   12c52:	53 01       	movw	r10, r6
   12c54:	f8 e0       	ldi	r31, 0x08	; 8
   12c56:	af 0e       	add	r10, r31
   12c58:	b1 1c       	adc	r11, r1
   12c5a:	d5 01       	movw	r26, r10
   12c5c:	e8 2f       	mov	r30, r24
   12c5e:	1d 92       	st	X+, r1
   12c60:	ea 95       	dec	r30
   12c62:	e9 f7       	brne	.-6      	; 0x12c5e <_Z12Pub_Sub_DataPcPhjh+0x4a6>
   12c64:	63 01       	movw	r12, r6
   12c66:	f0 e1       	ldi	r31, 0x10	; 16
   12c68:	cf 0e       	add	r12, r31
   12c6a:	d1 1c       	adc	r13, r1
   12c6c:	d6 01       	movw	r26, r12
   12c6e:	e8 2f       	mov	r30, r24
   12c70:	1d 92       	st	X+, r1
   12c72:	ea 95       	dec	r30
   12c74:	e9 f7       	brne	.-6      	; 0x12c70 <_Z12Pub_Sub_DataPcPhjh+0x4b8>
   12c76:	73 01       	movw	r14, r6
   12c78:	f8 e1       	ldi	r31, 0x18	; 24
   12c7a:	ef 0e       	add	r14, r31
   12c7c:	f1 1c       	adc	r15, r1
   12c7e:	d7 01       	movw	r26, r14
   12c80:	e8 2f       	mov	r30, r24
   12c82:	1d 92       	st	X+, r1
   12c84:	ea 95       	dec	r30
   12c86:	e9 f7       	brne	.-6      	; 0x12c82 <_Z12Pub_Sub_DataPcPhjh+0x4ca>
   12c88:	83 01       	movw	r16, r6
   12c8a:	00 5e       	subi	r16, 0xE0	; 224
   12c8c:	1f 4f       	sbci	r17, 0xFF	; 255
   12c8e:	d8 01       	movw	r26, r16
   12c90:	1d 92       	st	X+, r1
   12c92:	8a 95       	dec	r24
   12c94:	e9 f7       	brne	.-6      	; 0x12c90 <_Z12Pub_Sub_DataPcPhjh+0x4d8>
   12c96:	63 ea       	ldi	r22, 0xA3	; 163
   12c98:	7a e3       	ldi	r23, 0x3A	; 58
   12c9a:	c2 01       	movw	r24, r4
   12c9c:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12ca0:	bc 01       	movw	r22, r24
   12ca2:	c3 01       	movw	r24, r6
   12ca4:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   12ca8:	6c e9       	ldi	r22, 0x9C	; 156
   12caa:	7a e3       	ldi	r23, 0x3A	; 58
   12cac:	c2 01       	movw	r24, r4
   12cae:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12cb2:	bc 01       	movw	r22, r24
   12cb4:	c5 01       	movw	r24, r10
   12cb6:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   12cba:	65 e9       	ldi	r22, 0x95	; 149
   12cbc:	7a e3       	ldi	r23, 0x3A	; 58
   12cbe:	c2 01       	movw	r24, r4
   12cc0:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12cc4:	bc 01       	movw	r22, r24
   12cc6:	c6 01       	movw	r24, r12
   12cc8:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   12ccc:	6e e8       	ldi	r22, 0x8E	; 142
   12cce:	7a e3       	ldi	r23, 0x3A	; 58
   12cd0:	c2 01       	movw	r24, r4
   12cd2:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12cd6:	bc 01       	movw	r22, r24
   12cd8:	c7 01       	movw	r24, r14
   12cda:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   12cde:	67 e8       	ldi	r22, 0x87	; 135
   12ce0:	7a e3       	ldi	r23, 0x3A	; 58
   12ce2:	c2 01       	movw	r24, r4
   12ce4:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12ce8:	bc 01       	movw	r22, r24
   12cea:	c8 01       	movw	r24, r16
   12cec:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   12cf0:	be e0       	ldi	r27, 0x0E	; 14
   12cf2:	b9 15       	cp	r27, r9
   12cf4:	98 f1       	brcs	.+102    	; 0x12d5c <_Z12Pub_Sub_DataPcPhjh+0x5a4>
   12cf6:	89 2d       	mov	r24, r9
   12cf8:	90 e0       	ldi	r25, 0x00	; 0
   12cfa:	01 97       	sbiw	r24, 0x01	; 1
   12cfc:	26 e0       	ldi	r18, 0x06	; 6
   12cfe:	28 9f       	mul	r18, r24
   12d00:	f0 01       	movw	r30, r0
   12d02:	29 9f       	mul	r18, r25
   12d04:	f0 0d       	add	r31, r0
   12d06:	11 24       	eor	r1, r1
   12d08:	e1 5b       	subi	r30, 0xB1	; 177
   12d0a:	f2 4f       	sbci	r31, 0xF2	; 242
   12d0c:	85 e0       	ldi	r24, 0x05	; 5
   12d0e:	df 01       	movw	r26, r30
   12d10:	1d 92       	st	X+, r1
   12d12:	8a 95       	dec	r24
   12d14:	e9 f7       	brne	.-6      	; 0x12d10 <_Z12Pub_Sub_DataPcPhjh+0x558>
   12d16:	13 01       	movw	r2, r6
   12d18:	26 e0       	ldi	r18, 0x06	; 6
   12d1a:	92 9e       	mul	r9, r18
   12d1c:	f0 01       	movw	r30, r0
   12d1e:	11 24       	eor	r1, r1
   12d20:	c5 54       	subi	r28, 0x45	; 69
   12d22:	d9 4f       	sbci	r29, 0xF9	; 249
   12d24:	f9 83       	std	Y+1, r31	; 0x01
   12d26:	e8 83       	st	Y, r30
   12d28:	cb 5b       	subi	r28, 0xBB	; 187
   12d2a:	d6 40       	sbci	r29, 0x06	; 6
   12d2c:	e7 5b       	subi	r30, 0xB7	; 183
   12d2e:	f2 4f       	sbci	r31, 0xF2	; 242
   12d30:	7f 01       	movw	r14, r30
   12d32:	3b e1       	ldi	r19, 0x1B	; 27
   12d34:	93 9e       	mul	r9, r19
   12d36:	c0 01       	movw	r24, r0
   12d38:	11 24       	eor	r1, r1
   12d3a:	ac 01       	movw	r20, r24
   12d3c:	4a 5b       	subi	r20, 0xBA	; 186
   12d3e:	5c 4f       	sbci	r21, 0xFC	; 252
   12d40:	6a 01       	movw	r12, r20
   12d42:	c3 01       	movw	r24, r6
   12d44:	88 96       	adiw	r24, 0x28	; 40
   12d46:	c3 54       	subi	r28, 0x43	; 67
   12d48:	d9 4f       	sbci	r29, 0xF9	; 249
   12d4a:	99 83       	std	Y+1, r25	; 0x01
   12d4c:	88 83       	st	Y, r24
   12d4e:	cd 5b       	subi	r28, 0xBD	; 189
   12d50:	d6 40       	sbci	r29, 0x06	; 6
   12d52:	96 e6       	ldi	r25, 0x66	; 102
   12d54:	89 2e       	mov	r8, r25
   12d56:	25 e6       	ldi	r18, 0x65	; 101
   12d58:	a2 2e       	mov	r10, r18
   12d5a:	3a c0       	rjmp	.+116    	; 0x12dd0 <_Z12Pub_Sub_DataPcPhjh+0x618>
   12d5c:	94 e6       	ldi	r25, 0x64	; 100
   12d5e:	99 15       	cp	r25, r9
   12d60:	d0 f6       	brcc	.-76     	; 0x12d16 <_Z12Pub_Sub_DataPcPhjh+0x55e>
   12d62:	89 2d       	mov	r24, r9
   12d64:	90 e0       	ldi	r25, 0x00	; 0
   12d66:	85 56       	subi	r24, 0x65	; 101
   12d68:	91 09       	sbc	r25, r1
   12d6a:	2b e1       	ldi	r18, 0x1B	; 27
   12d6c:	28 9f       	mul	r18, r24
   12d6e:	f0 01       	movw	r30, r0
   12d70:	29 9f       	mul	r18, r25
   12d72:	f0 0d       	add	r31, r0
   12d74:	11 24       	eor	r1, r1
   12d76:	e3 51       	subi	r30, 0x13	; 19
   12d78:	f2 4f       	sbci	r31, 0xF2	; 242
   12d7a:	c8 cf       	rjmp	.-112    	; 0x12d0c <_Z12Pub_Sub_DataPcPhjh+0x554>
   12d7c:	90 35       	cpi	r25, 0x50	; 80
   12d7e:	09 f4       	brne	.+2      	; 0x12d82 <_Z12Pub_Sub_DataPcPhjh+0x5ca>
   12d80:	44 c2       	rjmp	.+1160   	; 0x1320a <_Z12Pub_Sub_DataPcPhjh+0xa52>
   12d82:	80 33       	cpi	r24, 0x30	; 48
   12d84:	c9 f1       	breq	.+114    	; 0x12df8 <_Z12Pub_Sub_DataPcPhjh+0x640>
   12d86:	88 23       	and	r24, r24
   12d88:	b9 f1       	breq	.+110    	; 0x12df8 <_Z12Pub_Sub_DataPcPhjh+0x640>
   12d8a:	80 53       	subi	r24, 0x30	; 48
   12d8c:	91 81       	ldd	r25, Z+1	; 0x01
   12d8e:	99 23       	and	r25, r25
   12d90:	31 f0       	breq	.+12     	; 0x12d9e <_Z12Pub_Sub_DataPcPhjh+0x5e6>
   12d92:	90 53       	subi	r25, 0x30	; 48
   12d94:	fa e0       	ldi	r31, 0x0A	; 10
   12d96:	8f 9f       	mul	r24, r31
   12d98:	90 0d       	add	r25, r0
   12d9a:	11 24       	eor	r1, r1
   12d9c:	89 2f       	mov	r24, r25
   12d9e:	2e e0       	ldi	r18, 0x0E	; 14
   12da0:	29 15       	cp	r18, r9
   12da2:	e8 f4       	brcc	.+58     	; 0x12dde <_Z12Pub_Sub_DataPcPhjh+0x626>
   12da4:	f4 e6       	ldi	r31, 0x64	; 100
   12da6:	f9 15       	cp	r31, r9
   12da8:	08 f1       	brcs	.+66     	; 0x12dec <_Z12Pub_Sub_DataPcPhjh+0x634>
   12daa:	38 e0       	ldi	r19, 0x08	; 8
   12dac:	23 0e       	add	r2, r19
   12dae:	31 1c       	adc	r3, r1
   12db0:	4f ef       	ldi	r20, 0xFF	; 255
   12db2:	e4 1a       	sub	r14, r20
   12db4:	f4 0a       	sbc	r15, r20
   12db6:	5f ef       	ldi	r21, 0xFF	; 255
   12db8:	c5 1a       	sub	r12, r21
   12dba:	d5 0a       	sbc	r13, r21
   12dbc:	c3 54       	subi	r28, 0x43	; 67
   12dbe:	d9 4f       	sbci	r29, 0xF9	; 249
   12dc0:	88 81       	ld	r24, Y
   12dc2:	99 81       	ldd	r25, Y+1	; 0x01
   12dc4:	cd 5b       	subi	r28, 0xBD	; 189
   12dc6:	d6 40       	sbci	r29, 0x06	; 6
   12dc8:	28 16       	cp	r2, r24
   12dca:	39 06       	cpc	r3, r25
   12dcc:	09 f4       	brne	.+2      	; 0x12dd0 <_Z12Pub_Sub_DataPcPhjh+0x618>
   12dce:	83 c3       	rjmp	.+1798   	; 0x134d6 <_Z12Pub_Sub_DataPcPhjh+0xd1e>
   12dd0:	f1 01       	movw	r30, r2
   12dd2:	80 81       	ld	r24, Z
   12dd4:	98 2f       	mov	r25, r24
   12dd6:	9f 7d       	andi	r25, 0xDF	; 223
   12dd8:	96 35       	cpi	r25, 0x56	; 86
   12dda:	81 f6       	brne	.-96     	; 0x12d7c <_Z12Pub_Sub_DataPcPhjh+0x5c4>
   12ddc:	19 c0       	rjmp	.+50     	; 0x12e10 <_Z12Pub_Sub_DataPcPhjh+0x658>
   12dde:	8e 5e       	subi	r24, 0xEE	; 238
   12de0:	8b 32       	cpi	r24, 0x2B	; 43
   12de2:	10 f4       	brcc	.+4      	; 0x12de8 <_Z12Pub_Sub_DataPcPhjh+0x630>
   12de4:	d7 01       	movw	r26, r14
   12de6:	06 c0       	rjmp	.+12     	; 0x12df4 <_Z12Pub_Sub_DataPcPhjh+0x63c>
   12de8:	f7 01       	movw	r30, r14
   12dea:	10 c0       	rjmp	.+32     	; 0x12e0c <_Z12Pub_Sub_DataPcPhjh+0x654>
   12dec:	8e 5e       	subi	r24, 0xEE	; 238
   12dee:	8b 32       	cpi	r24, 0x2B	; 43
   12df0:	60 f4       	brcc	.+24     	; 0x12e0a <_Z12Pub_Sub_DataPcPhjh+0x652>
   12df2:	d6 01       	movw	r26, r12
   12df4:	8c 93       	st	X, r24
   12df6:	d9 cf       	rjmp	.-78     	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12df8:	fe e0       	ldi	r31, 0x0E	; 14
   12dfa:	f9 15       	cp	r31, r9
   12dfc:	18 f0       	brcs	.+6      	; 0x12e04 <_Z12Pub_Sub_DataPcPhjh+0x64c>
   12dfe:	d7 01       	movw	r26, r14
   12e00:	1c 92       	st	X, r1
   12e02:	d3 cf       	rjmp	.-90     	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e04:	b4 e6       	ldi	r27, 0x64	; 100
   12e06:	b9 15       	cp	r27, r9
   12e08:	80 f6       	brcc	.-96     	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e0a:	f6 01       	movw	r30, r12
   12e0c:	10 82       	st	Z, r1
   12e0e:	cd cf       	rjmp	.-102    	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12e10:	4e ea       	ldi	r20, 0xAE	; 174
   12e12:	53 e1       	ldi	r21, 0x13	; 19
   12e14:	80 e0       	ldi	r24, 0x00	; 0
   12e16:	90 e0       	ldi	r25, 0x00	; 0
   12e18:	68 2f       	mov	r22, r24
   12e1a:	20 e0       	ldi	r18, 0x00	; 0
   12e1c:	30 e0       	ldi	r19, 0x00	; 0
   12e1e:	70 e0       	ldi	r23, 0x00	; 0
   12e20:	f9 01       	movw	r30, r18
   12e22:	ec 58       	subi	r30, 0x8C	; 140
   12e24:	ff 4f       	sbci	r31, 0xFF	; 255
   12e26:	e4 0f       	add	r30, r20
   12e28:	f5 1f       	adc	r31, r21
   12e2a:	a0 81       	ld	r26, Z
   12e2c:	f1 01       	movw	r30, r2
   12e2e:	e2 0f       	add	r30, r18
   12e30:	f3 1f       	adc	r31, r19
   12e32:	e0 81       	ld	r30, Z
   12e34:	ae 13       	cpse	r26, r30
   12e36:	01 c0       	rjmp	.+2      	; 0x12e3a <_Z12Pub_Sub_DataPcPhjh+0x682>
   12e38:	7f 5f       	subi	r23, 0xFF	; 255
   12e3a:	2f 5f       	subi	r18, 0xFF	; 255
   12e3c:	3f 4f       	sbci	r19, 0xFF	; 255
   12e3e:	26 30       	cpi	r18, 0x06	; 6
   12e40:	31 05       	cpc	r19, r1
   12e42:	71 f7       	brne	.-36     	; 0x12e20 <_Z12Pub_Sub_DataPcPhjh+0x668>
   12e44:	76 30       	cpi	r23, 0x06	; 6
   12e46:	09 f0       	breq	.+2      	; 0x12e4a <_Z12Pub_Sub_DataPcPhjh+0x692>
   12e48:	7a c0       	rjmp	.+244    	; 0x12f3e <_Z12Pub_Sub_DataPcPhjh+0x786>
   12e4a:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12e4e:	fe e0       	ldi	r31, 0x0E	; 14
   12e50:	f9 15       	cp	r31, r9
   12e52:	70 f1       	brcs	.+92     	; 0x12eb0 <_Z12Pub_Sub_DataPcPhjh+0x6f8>
   12e54:	d1 01       	movw	r26, r2
   12e56:	17 96       	adiw	r26, 0x07	; 7
   12e58:	3c 91       	ld	r19, X
   12e5a:	32 33       	cpi	r19, 0x32	; 50
   12e5c:	89 f0       	breq	.+34     	; 0x12e80 <_Z12Pub_Sub_DataPcPhjh+0x6c8>
   12e5e:	33 33       	cpi	r19, 0x33	; 51
   12e60:	d9 f0       	breq	.+54     	; 0x12e98 <_Z12Pub_Sub_DataPcPhjh+0x6e0>
   12e62:	31 33       	cpi	r19, 0x31	; 49
   12e64:	09 f0       	breq	.+2      	; 0x12e68 <_Z12Pub_Sub_DataPcPhjh+0x6b0>
   12e66:	5c c0       	rjmp	.+184    	; 0x12f20 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12e68:	86 2f       	mov	r24, r22
   12e6a:	88 0f       	add	r24, r24
   12e6c:	68 0f       	add	r22, r24
   12e6e:	6f 5f       	subi	r22, 0xFF	; 255
   12e70:	f7 01       	movw	r30, r14
   12e72:	60 83       	st	Z, r22
   12e74:	21 30       	cpi	r18, 0x01	; 1
   12e76:	09 f0       	breq	.+2      	; 0x12e7a <_Z12Pub_Sub_DataPcPhjh+0x6c2>
   12e78:	69 c0       	rjmp	.+210    	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12e7a:	6c e6       	ldi	r22, 0x6C	; 108
   12e7c:	7a e3       	ldi	r23, 0x3A	; 58
   12e7e:	44 c0       	rjmp	.+136    	; 0x12f08 <_Z12Pub_Sub_DataPcPhjh+0x750>
   12e80:	86 2f       	mov	r24, r22
   12e82:	88 0f       	add	r24, r24
   12e84:	68 0f       	add	r22, r24
   12e86:	6e 5f       	subi	r22, 0xFE	; 254
   12e88:	d7 01       	movw	r26, r14
   12e8a:	6c 93       	st	X, r22
   12e8c:	21 30       	cpi	r18, 0x01	; 1
   12e8e:	09 f0       	breq	.+2      	; 0x12e92 <_Z12Pub_Sub_DataPcPhjh+0x6da>
   12e90:	5d c0       	rjmp	.+186    	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12e92:	61 e5       	ldi	r22, 0x51	; 81
   12e94:	7a e3       	ldi	r23, 0x3A	; 58
   12e96:	38 c0       	rjmp	.+112    	; 0x12f08 <_Z12Pub_Sub_DataPcPhjh+0x750>
   12e98:	01 96       	adiw	r24, 0x01	; 1
   12e9a:	98 2f       	mov	r25, r24
   12e9c:	99 0f       	add	r25, r25
   12e9e:	89 0f       	add	r24, r25
   12ea0:	f7 01       	movw	r30, r14
   12ea2:	80 83       	st	Z, r24
   12ea4:	21 30       	cpi	r18, 0x01	; 1
   12ea6:	09 f0       	breq	.+2      	; 0x12eaa <_Z12Pub_Sub_DataPcPhjh+0x6f2>
   12ea8:	51 c0       	rjmp	.+162    	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12eaa:	66 e3       	ldi	r22, 0x36	; 54
   12eac:	7a e3       	ldi	r23, 0x3A	; 58
   12eae:	2c c0       	rjmp	.+88     	; 0x12f08 <_Z12Pub_Sub_DataPcPhjh+0x750>
   12eb0:	f4 e6       	ldi	r31, 0x64	; 100
   12eb2:	f9 15       	cp	r31, r9
   12eb4:	a8 f5       	brcc	.+106    	; 0x12f20 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12eb6:	d1 01       	movw	r26, r2
   12eb8:	17 96       	adiw	r26, 0x07	; 7
   12eba:	3c 91       	ld	r19, X
   12ebc:	32 33       	cpi	r19, 0x32	; 50
   12ebe:	79 f0       	breq	.+30     	; 0x12ede <_Z12Pub_Sub_DataPcPhjh+0x726>
   12ec0:	33 33       	cpi	r19, 0x33	; 51
   12ec2:	c1 f0       	breq	.+48     	; 0x12ef4 <_Z12Pub_Sub_DataPcPhjh+0x73c>
   12ec4:	31 33       	cpi	r19, 0x31	; 49
   12ec6:	61 f5       	brne	.+88     	; 0x12f20 <_Z12Pub_Sub_DataPcPhjh+0x768>
   12ec8:	86 2f       	mov	r24, r22
   12eca:	88 0f       	add	r24, r24
   12ecc:	68 0f       	add	r22, r24
   12ece:	6f 5f       	subi	r22, 0xFF	; 255
   12ed0:	f6 01       	movw	r30, r12
   12ed2:	60 83       	st	Z, r22
   12ed4:	21 30       	cpi	r18, 0x01	; 1
   12ed6:	d1 f5       	brne	.+116    	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12ed8:	6b e1       	ldi	r22, 0x1B	; 27
   12eda:	7a e3       	ldi	r23, 0x3A	; 58
   12edc:	15 c0       	rjmp	.+42     	; 0x12f08 <_Z12Pub_Sub_DataPcPhjh+0x750>
   12ede:	86 2f       	mov	r24, r22
   12ee0:	88 0f       	add	r24, r24
   12ee2:	68 0f       	add	r22, r24
   12ee4:	6e 5f       	subi	r22, 0xFE	; 254
   12ee6:	d6 01       	movw	r26, r12
   12ee8:	6c 93       	st	X, r22
   12eea:	21 30       	cpi	r18, 0x01	; 1
   12eec:	79 f5       	brne	.+94     	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12eee:	60 e0       	ldi	r22, 0x00	; 0
   12ef0:	7a e3       	ldi	r23, 0x3A	; 58
   12ef2:	0a c0       	rjmp	.+20     	; 0x12f08 <_Z12Pub_Sub_DataPcPhjh+0x750>
   12ef4:	01 96       	adiw	r24, 0x01	; 1
   12ef6:	98 2f       	mov	r25, r24
   12ef8:	99 0f       	add	r25, r25
   12efa:	89 0f       	add	r24, r25
   12efc:	f6 01       	movw	r30, r12
   12efe:	80 83       	st	Z, r24
   12f00:	21 30       	cpi	r18, 0x01	; 1
   12f02:	21 f5       	brne	.+72     	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f04:	65 ee       	ldi	r22, 0xE5	; 229
   12f06:	79 e3       	ldi	r23, 0x39	; 57
   12f08:	86 ec       	ldi	r24, 0xC6	; 198
   12f0a:	94 e1       	ldi	r25, 0x14	; 20
   12f0c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   12f10:	86 ec       	ldi	r24, 0xC6	; 198
   12f12:	94 e1       	ldi	r25, 0x14	; 20
   12f14:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   12f18:	86 ec       	ldi	r24, 0xC6	; 198
   12f1a:	94 e1       	ldi	r25, 0x14	; 20
   12f1c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   12f20:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12f24:	81 30       	cpi	r24, 0x01	; 1
   12f26:	91 f4       	brne	.+36     	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f28:	64 ed       	ldi	r22, 0xD4	; 212
   12f2a:	79 e3       	ldi	r23, 0x39	; 57
   12f2c:	86 ec       	ldi	r24, 0xC6	; 198
   12f2e:	94 e1       	ldi	r25, 0x14	; 20
   12f30:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   12f34:	86 ec       	ldi	r24, 0xC6	; 198
   12f36:	94 e1       	ldi	r25, 0x14	; 20
   12f38:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   12f3c:	07 c0       	rjmp	.+14     	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f3e:	01 96       	adiw	r24, 0x01	; 1
   12f40:	49 5f       	subi	r20, 0xF9	; 249
   12f42:	5f 4f       	sbci	r21, 0xFF	; 255
   12f44:	85 30       	cpi	r24, 0x05	; 5
   12f46:	91 05       	cpc	r25, r1
   12f48:	09 f0       	breq	.+2      	; 0x12f4c <_Z12Pub_Sub_DataPcPhjh+0x794>
   12f4a:	66 cf       	rjmp	.-308    	; 0x12e18 <_Z12Pub_Sub_DataPcPhjh+0x660>
   12f4c:	d7 01       	movw	r26, r14
   12f4e:	8c 91       	ld	r24, X
   12f50:	81 11       	cpse	r24, r1
   12f52:	03 c0       	rjmp	.+6      	; 0x12f5a <_Z12Pub_Sub_DataPcPhjh+0x7a2>
   12f54:	be e0       	ldi	r27, 0x0E	; 14
   12f56:	b9 15       	cp	r27, r9
   12f58:	40 f4       	brcc	.+16     	; 0x12f6a <_Z12Pub_Sub_DataPcPhjh+0x7b2>
   12f5a:	f6 01       	movw	r30, r12
   12f5c:	80 81       	ld	r24, Z
   12f5e:	81 11       	cpse	r24, r1
   12f60:	24 cf       	rjmp	.-440    	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12f62:	fe e0       	ldi	r31, 0x0E	; 14
   12f64:	f9 15       	cp	r31, r9
   12f66:	08 f0       	brcs	.+2      	; 0x12f6a <_Z12Pub_Sub_DataPcPhjh+0x7b2>
   12f68:	20 cf       	rjmp	.-448    	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   12f6a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12f6e:	81 30       	cpi	r24, 0x01	; 1
   12f70:	51 f4       	brne	.+20     	; 0x12f86 <_Z12Pub_Sub_DataPcPhjh+0x7ce>
   12f72:	6b eb       	ldi	r22, 0xBB	; 187
   12f74:	79 e3       	ldi	r23, 0x39	; 57
   12f76:	86 ec       	ldi	r24, 0xC6	; 198
   12f78:	94 e1       	ldi	r25, 0x14	; 20
   12f7a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   12f7e:	86 ec       	ldi	r24, 0xC6	; 198
   12f80:	94 e1       	ldi	r25, 0x14	; 20
   12f82:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   12f86:	e5 e1       	ldi	r30, 0x15	; 21
   12f88:	fc e0       	ldi	r31, 0x0C	; 12
   12f8a:	b1 2c       	mov	r11, r1
   12f8c:	80 81       	ld	r24, Z
   12f8e:	88 23       	and	r24, r24
   12f90:	29 f0       	breq	.+10     	; 0x12f9c <_Z12Pub_Sub_DataPcPhjh+0x7e4>
   12f92:	b3 94       	inc	r11
   12f94:	3d 96       	adiw	r30, 0x0d	; 13
   12f96:	25 e0       	ldi	r18, 0x05	; 5
   12f98:	b2 12       	cpse	r11, r18
   12f9a:	f8 cf       	rjmp	.-16     	; 0x12f8c <_Z12Pub_Sub_DataPcPhjh+0x7d4>
   12f9c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   12fa0:	81 30       	cpi	r24, 0x01	; 1
   12fa2:	c9 f4       	brne	.+50     	; 0x12fd6 <_Z12Pub_Sub_DataPcPhjh+0x81e>
   12fa4:	86 ec       	ldi	r24, 0xC6	; 198
   12fa6:	94 e1       	ldi	r25, 0x14	; 20
   12fa8:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   12fac:	67 ea       	ldi	r22, 0xA7	; 167
   12fae:	79 e3       	ldi	r23, 0x39	; 57
   12fb0:	86 ec       	ldi	r24, 0xC6	; 198
   12fb2:	94 e1       	ldi	r25, 0x14	; 20
   12fb4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   12fb8:	86 ec       	ldi	r24, 0xC6	; 198
   12fba:	94 e1       	ldi	r25, 0x14	; 20
   12fbc:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   12fc0:	4a e0       	ldi	r20, 0x0A	; 10
   12fc2:	50 e0       	ldi	r21, 0x00	; 0
   12fc4:	6b 2d       	mov	r22, r11
   12fc6:	86 ec       	ldi	r24, 0xC6	; 198
   12fc8:	94 e1       	ldi	r25, 0x14	; 20
   12fca:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   12fce:	86 ec       	ldi	r24, 0xC6	; 198
   12fd0:	94 e1       	ldi	r25, 0x14	; 20
   12fd2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   12fd6:	3d e0       	ldi	r19, 0x0D	; 13
   12fd8:	b3 9e       	mul	r11, r19
   12fda:	a0 01       	movw	r20, r0
   12fdc:	11 24       	eor	r1, r1
   12fde:	80 e0       	ldi	r24, 0x00	; 0
   12fe0:	90 e0       	ldi	r25, 0x00	; 0
   12fe2:	0b 2d       	mov	r16, r11
   12fe4:	10 e0       	ldi	r17, 0x00	; 0
   12fe6:	fa 01       	movw	r30, r20
   12fe8:	e8 0f       	add	r30, r24
   12fea:	f9 1f       	adc	r31, r25
   12fec:	eb 5e       	subi	r30, 0xEB	; 235
   12fee:	f3 4f       	sbci	r31, 0xF3	; 243
   12ff0:	d1 01       	movw	r26, r2
   12ff2:	a8 0f       	add	r26, r24
   12ff4:	b9 1f       	adc	r27, r25
   12ff6:	2c 91       	ld	r18, X
   12ff8:	21 83       	std	Z+1, r18	; 0x01
   12ffa:	01 96       	adiw	r24, 0x01	; 1
   12ffc:	86 30       	cpi	r24, 0x06	; 6
   12ffe:	91 05       	cpc	r25, r1
   13000:	91 f7       	brne	.-28     	; 0x12fe6 <_Z12Pub_Sub_DataPcPhjh+0x82e>
   13002:	8d e0       	ldi	r24, 0x0D	; 13
   13004:	80 9f       	mul	r24, r16
   13006:	a0 01       	movw	r20, r0
   13008:	81 9f       	mul	r24, r17
   1300a:	50 0d       	add	r21, r0
   1300c:	11 24       	eor	r1, r1
   1300e:	cc 54       	subi	r28, 0x4C	; 76
   13010:	d9 4f       	sbci	r29, 0xF9	; 249
   13012:	59 83       	std	Y+1, r21	; 0x01
   13014:	48 83       	st	Y, r20
   13016:	c4 5b       	subi	r28, 0xB4	; 180
   13018:	d6 40       	sbci	r29, 0x06	; 6
   1301a:	4a 5e       	subi	r20, 0xEA	; 234
   1301c:	53 4f       	sbci	r21, 0xF3	; 243
   1301e:	c7 54       	subi	r28, 0x47	; 71
   13020:	d9 4f       	sbci	r29, 0xF9	; 249
   13022:	59 83       	std	Y+1, r21	; 0x01
   13024:	48 83       	st	Y, r20
   13026:	c9 5b       	subi	r28, 0xB9	; 185
   13028:	d6 40       	sbci	r29, 0x06	; 6
   1302a:	a7 e0       	ldi	r26, 0x07	; 7
   1302c:	a0 9f       	mul	r26, r16
   1302e:	c0 01       	movw	r24, r0
   13030:	a1 9f       	mul	r26, r17
   13032:	90 0d       	add	r25, r0
   13034:	11 24       	eor	r1, r1
   13036:	ba 01       	movw	r22, r20
   13038:	8e 5d       	subi	r24, 0xDE	; 222
   1303a:	9b 4e       	sbci	r25, 0xEB	; 235
   1303c:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   13040:	cc 54       	subi	r28, 0x4C	; 76
   13042:	d9 4f       	sbci	r29, 0xF9	; 249
   13044:	e8 81       	ld	r30, Y
   13046:	f9 81       	ldd	r31, Y+1	; 0x01
   13048:	c4 5b       	subi	r28, 0xB4	; 180
   1304a:	d6 40       	sbci	r29, 0x06	; 6
   1304c:	eb 5e       	subi	r30, 0xEB	; 235
   1304e:	f3 4f       	sbci	r31, 0xF3	; 243
   13050:	cc 54       	subi	r28, 0x4C	; 76
   13052:	d9 4f       	sbci	r29, 0xF9	; 249
   13054:	f9 83       	std	Y+1, r31	; 0x01
   13056:	e8 83       	st	Y, r30
   13058:	c4 5b       	subi	r28, 0xB4	; 180
   1305a:	d6 40       	sbci	r29, 0x06	; 6
   1305c:	81 e0       	ldi	r24, 0x01	; 1
   1305e:	8b 0d       	add	r24, r11
   13060:	80 83       	st	Z, r24
   13062:	2f ef       	ldi	r18, 0xFF	; 255
   13064:	30 e0       	ldi	r19, 0x00	; 0
   13066:	31 87       	std	Z+9, r19	; 0x09
   13068:	20 87       	std	Z+8, r18	; 0x08
   1306a:	31 e0       	ldi	r19, 0x01	; 1
   1306c:	33 87       	std	Z+11, r19	; 0x0b
   1306e:	12 86       	std	Z+10, r1	; 0x0a
   13070:	14 86       	std	Z+12, r1	; 0x0c
   13072:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13076:	81 30       	cpi	r24, 0x01	; 1
   13078:	09 f0       	breq	.+2      	; 0x1307c <_Z12Pub_Sub_DataPcPhjh+0x8c4>
   1307a:	45 c0       	rjmp	.+138    	; 0x13106 <_Z12Pub_Sub_DataPcPhjh+0x94e>
   1307c:	86 ec       	ldi	r24, 0xC6	; 198
   1307e:	94 e1       	ldi	r25, 0x14	; 20
   13080:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13084:	6c e8       	ldi	r22, 0x8C	; 140
   13086:	79 e3       	ldi	r23, 0x39	; 57
   13088:	86 ec       	ldi	r24, 0xC6	; 198
   1308a:	94 e1       	ldi	r25, 0x14	; 20
   1308c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13090:	86 ec       	ldi	r24, 0xC6	; 198
   13092:	94 e1       	ldi	r25, 0x14	; 20
   13094:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13098:	86 ec       	ldi	r24, 0xC6	; 198
   1309a:	94 e1       	ldi	r25, 0x14	; 20
   1309c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   130a0:	61 e8       	ldi	r22, 0x81	; 129
   130a2:	79 e3       	ldi	r23, 0x39	; 57
   130a4:	86 ec       	ldi	r24, 0xC6	; 198
   130a6:	94 e1       	ldi	r25, 0x14	; 20
   130a8:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   130ac:	4a e0       	ldi	r20, 0x0A	; 10
   130ae:	50 e0       	ldi	r21, 0x00	; 0
   130b0:	cc 54       	subi	r28, 0x4C	; 76
   130b2:	d9 4f       	sbci	r29, 0xF9	; 249
   130b4:	a8 81       	ld	r26, Y
   130b6:	b9 81       	ldd	r27, Y+1	; 0x01
   130b8:	c4 5b       	subi	r28, 0xB4	; 180
   130ba:	d6 40       	sbci	r29, 0x06	; 6
   130bc:	6c 91       	ld	r22, X
   130be:	86 ec       	ldi	r24, 0xC6	; 198
   130c0:	94 e1       	ldi	r25, 0x14	; 20
   130c2:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   130c6:	86 ec       	ldi	r24, 0xC6	; 198
   130c8:	94 e1       	ldi	r25, 0x14	; 20
   130ca:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   130ce:	86 ec       	ldi	r24, 0xC6	; 198
   130d0:	94 e1       	ldi	r25, 0x14	; 20
   130d2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   130d6:	66 e7       	ldi	r22, 0x76	; 118
   130d8:	79 e3       	ldi	r23, 0x39	; 57
   130da:	86 ec       	ldi	r24, 0xC6	; 198
   130dc:	94 e1       	ldi	r25, 0x14	; 20
   130de:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   130e2:	c7 54       	subi	r28, 0x47	; 71
   130e4:	d9 4f       	sbci	r29, 0xF9	; 249
   130e6:	68 81       	ld	r22, Y
   130e8:	79 81       	ldd	r23, Y+1	; 0x01
   130ea:	c9 5b       	subi	r28, 0xB9	; 185
   130ec:	d6 40       	sbci	r29, 0x06	; 6
   130ee:	86 ec       	ldi	r24, 0xC6	; 198
   130f0:	94 e1       	ldi	r25, 0x14	; 20
   130f2:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   130f6:	86 ec       	ldi	r24, 0xC6	; 198
   130f8:	94 e1       	ldi	r25, 0x14	; 20
   130fa:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   130fe:	86 ec       	ldi	r24, 0xC6	; 198
   13100:	94 e1       	ldi	r25, 0x14	; 20
   13102:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13106:	be e0       	ldi	r27, 0x0E	; 14
   13108:	b9 15       	cp	r27, r9
   1310a:	a0 f1       	brcs	.+104    	; 0x13174 <_Z12Pub_Sub_DataPcPhjh+0x9bc>
   1310c:	f1 01       	movw	r30, r2
   1310e:	87 81       	ldd	r24, Z+7	; 0x07
   13110:	82 33       	cpi	r24, 0x32	; 50
   13112:	99 f0       	breq	.+38     	; 0x1313a <_Z12Pub_Sub_DataPcPhjh+0x982>
   13114:	83 33       	cpi	r24, 0x33	; 51
   13116:	f9 f0       	breq	.+62     	; 0x13156 <_Z12Pub_Sub_DataPcPhjh+0x99e>
   13118:	81 33       	cpi	r24, 0x31	; 49
   1311a:	09 f0       	breq	.+2      	; 0x1311e <_Z12Pub_Sub_DataPcPhjh+0x966>
   1311c:	72 c0       	rjmp	.+228    	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1311e:	8b 2d       	mov	r24, r11
   13120:	88 0f       	add	r24, r24
   13122:	8b 0d       	add	r24, r11
   13124:	8f 5f       	subi	r24, 0xFF	; 255
   13126:	d7 01       	movw	r26, r14
   13128:	8c 93       	st	X, r24
   1312a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1312e:	81 30       	cpi	r24, 0x01	; 1
   13130:	09 f0       	breq	.+2      	; 0x13134 <_Z12Pub_Sub_DataPcPhjh+0x97c>
   13132:	67 c0       	rjmp	.+206    	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13134:	67 e5       	ldi	r22, 0x57	; 87
   13136:	79 e3       	ldi	r23, 0x39	; 57
   13138:	58 c0       	rjmp	.+176    	; 0x131ea <_Z12Pub_Sub_DataPcPhjh+0xa32>
   1313a:	8b 2d       	mov	r24, r11
   1313c:	88 0f       	add	r24, r24
   1313e:	8b 0d       	add	r24, r11
   13140:	8e 5f       	subi	r24, 0xFE	; 254
   13142:	f7 01       	movw	r30, r14
   13144:	80 83       	st	Z, r24
   13146:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1314a:	81 30       	cpi	r24, 0x01	; 1
   1314c:	09 f0       	breq	.+2      	; 0x13150 <_Z12Pub_Sub_DataPcPhjh+0x998>
   1314e:	59 c0       	rjmp	.+178    	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   13150:	68 e3       	ldi	r22, 0x38	; 56
   13152:	79 e3       	ldi	r23, 0x39	; 57
   13154:	4a c0       	rjmp	.+148    	; 0x131ea <_Z12Pub_Sub_DataPcPhjh+0xa32>
   13156:	0f 5f       	subi	r16, 0xFF	; 255
   13158:	1f 4f       	sbci	r17, 0xFF	; 255
   1315a:	80 2f       	mov	r24, r16
   1315c:	88 0f       	add	r24, r24
   1315e:	08 0f       	add	r16, r24
   13160:	d7 01       	movw	r26, r14
   13162:	0c 93       	st	X, r16
   13164:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13168:	81 30       	cpi	r24, 0x01	; 1
   1316a:	09 f0       	breq	.+2      	; 0x1316e <_Z12Pub_Sub_DataPcPhjh+0x9b6>
   1316c:	4a c0       	rjmp	.+148    	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1316e:	69 e1       	ldi	r22, 0x19	; 25
   13170:	79 e3       	ldi	r23, 0x39	; 57
   13172:	3b c0       	rjmp	.+118    	; 0x131ea <_Z12Pub_Sub_DataPcPhjh+0xa32>
   13174:	b4 e6       	ldi	r27, 0x64	; 100
   13176:	b9 15       	cp	r27, r9
   13178:	08 f0       	brcs	.+2      	; 0x1317c <_Z12Pub_Sub_DataPcPhjh+0x9c4>
   1317a:	43 c0       	rjmp	.+134    	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1317c:	f1 01       	movw	r30, r2
   1317e:	87 81       	ldd	r24, Z+7	; 0x07
   13180:	82 33       	cpi	r24, 0x32	; 50
   13182:	c9 f0       	breq	.+50     	; 0x131b6 <_Z12Pub_Sub_DataPcPhjh+0x9fe>
   13184:	83 33       	cpi	r24, 0x33	; 51
   13186:	21 f1       	breq	.+72     	; 0x131d0 <_Z12Pub_Sub_DataPcPhjh+0xa18>
   13188:	81 33       	cpi	r24, 0x31	; 49
   1318a:	d9 f5       	brne	.+118    	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   1318c:	8b 2d       	mov	r24, r11
   1318e:	88 0f       	add	r24, r24
   13190:	8b 0d       	add	r24, r11
   13192:	8f 5f       	subi	r24, 0xFF	; 255
   13194:	d6 01       	movw	r26, r12
   13196:	8c 93       	st	X, r24
   13198:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1319c:	81 30       	cpi	r24, 0x01	; 1
   1319e:	89 f5       	brne	.+98     	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131a0:	6e ef       	ldi	r22, 0xFE	; 254
   131a2:	78 e3       	ldi	r23, 0x38	; 56
   131a4:	86 ec       	ldi	r24, 0xC6	; 198
   131a6:	94 e1       	ldi	r25, 0x14	; 20
   131a8:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   131ac:	86 ec       	ldi	r24, 0xC6	; 198
   131ae:	94 e1       	ldi	r25, 0x14	; 20
   131b0:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   131b4:	26 c0       	rjmp	.+76     	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131b6:	8b 2d       	mov	r24, r11
   131b8:	88 0f       	add	r24, r24
   131ba:	8b 0d       	add	r24, r11
   131bc:	8e 5f       	subi	r24, 0xFE	; 254
   131be:	f6 01       	movw	r30, r12
   131c0:	80 83       	st	Z, r24
   131c2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   131c6:	81 30       	cpi	r24, 0x01	; 1
   131c8:	e1 f4       	brne	.+56     	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131ca:	63 ee       	ldi	r22, 0xE3	; 227
   131cc:	78 e3       	ldi	r23, 0x38	; 56
   131ce:	0d c0       	rjmp	.+26     	; 0x131ea <_Z12Pub_Sub_DataPcPhjh+0xa32>
   131d0:	0f 5f       	subi	r16, 0xFF	; 255
   131d2:	1f 4f       	sbci	r17, 0xFF	; 255
   131d4:	80 2f       	mov	r24, r16
   131d6:	88 0f       	add	r24, r24
   131d8:	08 0f       	add	r16, r24
   131da:	d6 01       	movw	r26, r12
   131dc:	0c 93       	st	X, r16
   131de:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   131e2:	81 30       	cpi	r24, 0x01	; 1
   131e4:	71 f4       	brne	.+28     	; 0x13202 <_Z12Pub_Sub_DataPcPhjh+0xa4a>
   131e6:	68 ec       	ldi	r22, 0xC8	; 200
   131e8:	78 e3       	ldi	r23, 0x38	; 56
   131ea:	86 ec       	ldi	r24, 0xC6	; 198
   131ec:	94 e1       	ldi	r25, 0x14	; 20
   131ee:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   131f2:	86 ec       	ldi	r24, 0xC6	; 198
   131f4:	94 e1       	ldi	r25, 0x14	; 20
   131f6:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   131fa:	86 ec       	ldi	r24, 0xC6	; 198
   131fc:	94 e1       	ldi	r25, 0x14	; 20
   131fe:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13202:	8b 2d       	mov	r24, r11
   13204:	0e 94 61 5c 	call	0xb8c2	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
   13208:	d0 cd       	rjmp	.-1120   	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   1320a:	4e ea       	ldi	r20, 0xAE	; 174
   1320c:	53 e1       	ldi	r21, 0x13	; 19
   1320e:	26 e0       	ldi	r18, 0x06	; 6
   13210:	80 e0       	ldi	r24, 0x00	; 0
   13212:	90 e0       	ldi	r25, 0x00	; 0
   13214:	30 e0       	ldi	r19, 0x00	; 0
   13216:	fc 01       	movw	r30, r24
   13218:	ec 58       	subi	r30, 0x8C	; 140
   1321a:	ff 4f       	sbci	r31, 0xFF	; 255
   1321c:	e4 0f       	add	r30, r20
   1321e:	f5 1f       	adc	r31, r21
   13220:	70 81       	ld	r23, Z
   13222:	f1 01       	movw	r30, r2
   13224:	e8 0f       	add	r30, r24
   13226:	f9 1f       	adc	r31, r25
   13228:	60 81       	ld	r22, Z
   1322a:	76 13       	cpse	r23, r22
   1322c:	01 c0       	rjmp	.+2      	; 0x13230 <_Z12Pub_Sub_DataPcPhjh+0xa78>
   1322e:	3f 5f       	subi	r19, 0xFF	; 255
   13230:	01 96       	adiw	r24, 0x01	; 1
   13232:	86 30       	cpi	r24, 0x06	; 6
   13234:	91 05       	cpc	r25, r1
   13236:	79 f7       	brne	.-34     	; 0x13216 <_Z12Pub_Sub_DataPcPhjh+0xa5e>
   13238:	36 30       	cpi	r19, 0x06	; 6
   1323a:	09 f0       	breq	.+2      	; 0x1323e <_Z12Pub_Sub_DataPcPhjh+0xa86>
   1323c:	63 c0       	rjmp	.+198    	; 0x13304 <_Z12Pub_Sub_DataPcPhjh+0xb4c>
   1323e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13242:	be e0       	ldi	r27, 0x0E	; 14
   13244:	b9 15       	cp	r27, r9
   13246:	10 f1       	brcs	.+68     	; 0x1328c <_Z12Pub_Sub_DataPcPhjh+0xad4>
   13248:	f1 01       	movw	r30, r2
   1324a:	97 81       	ldd	r25, Z+7	; 0x07
   1324c:	92 33       	cpi	r25, 0x32	; 50
   1324e:	69 f0       	breq	.+26     	; 0x1326a <_Z12Pub_Sub_DataPcPhjh+0xab2>
   13250:	93 33       	cpi	r25, 0x33	; 51
   13252:	99 f0       	breq	.+38     	; 0x1327a <_Z12Pub_Sub_DataPcPhjh+0xac2>
   13254:	91 33       	cpi	r25, 0x31	; 49
   13256:	09 f0       	breq	.+2      	; 0x1325a <_Z12Pub_Sub_DataPcPhjh+0xaa2>
   13258:	46 c0       	rjmp	.+140    	; 0x132e6 <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   1325a:	d7 01       	movw	r26, r14
   1325c:	ac 92       	st	X, r10
   1325e:	81 30       	cpi	r24, 0x01	; 1
   13260:	09 f0       	breq	.+2      	; 0x13264 <_Z12Pub_Sub_DataPcPhjh+0xaac>
   13262:	55 c0       	rjmp	.+170    	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13264:	6d ea       	ldi	r22, 0xAD	; 173
   13266:	78 e3       	ldi	r23, 0x38	; 56
   13268:	32 c0       	rjmp	.+100    	; 0x132ce <_Z12Pub_Sub_DataPcPhjh+0xb16>
   1326a:	f7 01       	movw	r30, r14
   1326c:	80 82       	st	Z, r8
   1326e:	81 30       	cpi	r24, 0x01	; 1
   13270:	09 f0       	breq	.+2      	; 0x13274 <_Z12Pub_Sub_DataPcPhjh+0xabc>
   13272:	4d c0       	rjmp	.+154    	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13274:	62 e9       	ldi	r22, 0x92	; 146
   13276:	78 e3       	ldi	r23, 0x38	; 56
   13278:	2a c0       	rjmp	.+84     	; 0x132ce <_Z12Pub_Sub_DataPcPhjh+0xb16>
   1327a:	e7 e6       	ldi	r30, 0x67	; 103
   1327c:	d7 01       	movw	r26, r14
   1327e:	ec 93       	st	X, r30
   13280:	81 30       	cpi	r24, 0x01	; 1
   13282:	09 f0       	breq	.+2      	; 0x13286 <_Z12Pub_Sub_DataPcPhjh+0xace>
   13284:	44 c0       	rjmp	.+136    	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13286:	67 e7       	ldi	r22, 0x77	; 119
   13288:	78 e3       	ldi	r23, 0x38	; 56
   1328a:	21 c0       	rjmp	.+66     	; 0x132ce <_Z12Pub_Sub_DataPcPhjh+0xb16>
   1328c:	f4 e6       	ldi	r31, 0x64	; 100
   1328e:	f9 15       	cp	r31, r9
   13290:	50 f5       	brcc	.+84     	; 0x132e6 <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   13292:	d1 01       	movw	r26, r2
   13294:	17 96       	adiw	r26, 0x07	; 7
   13296:	9c 91       	ld	r25, X
   13298:	92 33       	cpi	r25, 0x32	; 50
   1329a:	59 f0       	breq	.+22     	; 0x132b2 <_Z12Pub_Sub_DataPcPhjh+0xafa>
   1329c:	93 33       	cpi	r25, 0x33	; 51
   1329e:	81 f0       	breq	.+32     	; 0x132c0 <_Z12Pub_Sub_DataPcPhjh+0xb08>
   132a0:	91 33       	cpi	r25, 0x31	; 49
   132a2:	09 f5       	brne	.+66     	; 0x132e6 <_Z12Pub_Sub_DataPcPhjh+0xb2e>
   132a4:	f6 01       	movw	r30, r12
   132a6:	a0 82       	st	Z, r10
   132a8:	81 30       	cpi	r24, 0x01	; 1
   132aa:	89 f5       	brne	.+98     	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   132ac:	6c e5       	ldi	r22, 0x5C	; 92
   132ae:	78 e3       	ldi	r23, 0x38	; 56
   132b0:	0e c0       	rjmp	.+28     	; 0x132ce <_Z12Pub_Sub_DataPcPhjh+0xb16>
   132b2:	d6 01       	movw	r26, r12
   132b4:	8c 92       	st	X, r8
   132b6:	81 30       	cpi	r24, 0x01	; 1
   132b8:	51 f5       	brne	.+84     	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   132ba:	61 e4       	ldi	r22, 0x41	; 65
   132bc:	78 e3       	ldi	r23, 0x38	; 56
   132be:	07 c0       	rjmp	.+14     	; 0x132ce <_Z12Pub_Sub_DataPcPhjh+0xb16>
   132c0:	27 e6       	ldi	r18, 0x67	; 103
   132c2:	f6 01       	movw	r30, r12
   132c4:	20 83       	st	Z, r18
   132c6:	81 30       	cpi	r24, 0x01	; 1
   132c8:	11 f5       	brne	.+68     	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   132ca:	66 e2       	ldi	r22, 0x26	; 38
   132cc:	78 e3       	ldi	r23, 0x38	; 56
   132ce:	86 ec       	ldi	r24, 0xC6	; 198
   132d0:	94 e1       	ldi	r25, 0x14	; 20
   132d2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   132d6:	86 ec       	ldi	r24, 0xC6	; 198
   132d8:	94 e1       	ldi	r25, 0x14	; 20
   132da:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   132de:	86 ec       	ldi	r24, 0xC6	; 198
   132e0:	94 e1       	ldi	r25, 0x14	; 20
   132e2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   132e6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   132ea:	81 30       	cpi	r24, 0x01	; 1
   132ec:	81 f4       	brne	.+32     	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   132ee:	65 e1       	ldi	r22, 0x15	; 21
   132f0:	78 e3       	ldi	r23, 0x38	; 56
   132f2:	86 ec       	ldi	r24, 0xC6	; 198
   132f4:	94 e1       	ldi	r25, 0x14	; 20
   132f6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   132fa:	86 ec       	ldi	r24, 0xC6	; 198
   132fc:	94 e1       	ldi	r25, 0x14	; 20
   132fe:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13302:	05 c0       	rjmp	.+10     	; 0x1330e <_Z12Pub_Sub_DataPcPhjh+0xb56>
   13304:	21 50       	subi	r18, 0x01	; 1
   13306:	49 5f       	subi	r20, 0xF9	; 249
   13308:	5f 4f       	sbci	r21, 0xFF	; 255
   1330a:	21 11       	cpse	r18, r1
   1330c:	81 cf       	rjmp	.-254    	; 0x13210 <_Z12Pub_Sub_DataPcPhjh+0xa58>
   1330e:	d7 01       	movw	r26, r14
   13310:	8c 91       	ld	r24, X
   13312:	81 11       	cpse	r24, r1
   13314:	03 c0       	rjmp	.+6      	; 0x1331c <_Z12Pub_Sub_DataPcPhjh+0xb64>
   13316:	be e0       	ldi	r27, 0x0E	; 14
   13318:	b9 15       	cp	r27, r9
   1331a:	40 f4       	brcc	.+16     	; 0x1332c <_Z12Pub_Sub_DataPcPhjh+0xb74>
   1331c:	f6 01       	movw	r30, r12
   1331e:	80 81       	ld	r24, Z
   13320:	81 11       	cpse	r24, r1
   13322:	43 cd       	rjmp	.-1402   	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   13324:	fe e0       	ldi	r31, 0x0E	; 14
   13326:	f9 15       	cp	r31, r9
   13328:	08 f0       	brcs	.+2      	; 0x1332c <_Z12Pub_Sub_DataPcPhjh+0xb74>
   1332a:	3f cd       	rjmp	.-1410   	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   1332c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13330:	81 30       	cpi	r24, 0x01	; 1
   13332:	51 f4       	brne	.+20     	; 0x13348 <_Z12Pub_Sub_DataPcPhjh+0xb90>
   13334:	6c ef       	ldi	r22, 0xFC	; 252
   13336:	77 e3       	ldi	r23, 0x37	; 55
   13338:	86 ec       	ldi	r24, 0xC6	; 198
   1333a:	94 e1       	ldi	r25, 0x14	; 20
   1333c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13340:	86 ec       	ldi	r24, 0xC6	; 198
   13342:	94 e1       	ldi	r25, 0x14	; 20
   13344:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13348:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1334c:	81 30       	cpi	r24, 0x01	; 1
   1334e:	c9 f4       	brne	.+50     	; 0x13382 <_Z12Pub_Sub_DataPcPhjh+0xbca>
   13350:	86 ec       	ldi	r24, 0xC6	; 198
   13352:	94 e1       	ldi	r25, 0x14	; 20
   13354:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13358:	68 ee       	ldi	r22, 0xE8	; 232
   1335a:	77 e3       	ldi	r23, 0x37	; 55
   1335c:	86 ec       	ldi	r24, 0xC6	; 198
   1335e:	94 e1       	ldi	r25, 0x14	; 20
   13360:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13364:	86 ec       	ldi	r24, 0xC6	; 198
   13366:	94 e1       	ldi	r25, 0x14	; 20
   13368:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   1336c:	4a e0       	ldi	r20, 0x0A	; 10
   1336e:	50 e0       	ldi	r21, 0x00	; 0
   13370:	65 e0       	ldi	r22, 0x05	; 5
   13372:	86 ec       	ldi	r24, 0xC6	; 198
   13374:	94 e1       	ldi	r25, 0x14	; 20
   13376:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1337a:	86 ec       	ldi	r24, 0xC6	; 198
   1337c:	94 e1       	ldi	r25, 0x14	; 20
   1337e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13382:	e5 ef       	ldi	r30, 0xF5	; 245
   13384:	fb e0       	ldi	r31, 0x0B	; 11
   13386:	80 e0       	ldi	r24, 0x00	; 0
   13388:	90 e0       	ldi	r25, 0x00	; 0
   1338a:	d1 01       	movw	r26, r2
   1338c:	a8 0f       	add	r26, r24
   1338e:	b9 1f       	adc	r27, r25
   13390:	2c 91       	ld	r18, X
   13392:	21 93       	st	Z+, r18
   13394:	22 87       	std	Z+10, r18	; 0x0a
   13396:	25 8b       	std	Z+21, r18	; 0x15
   13398:	01 96       	adiw	r24, 0x01	; 1
   1339a:	86 30       	cpi	r24, 0x06	; 6
   1339c:	91 05       	cpc	r25, r1
   1339e:	a9 f7       	brne	.-22     	; 0x1338a <_Z12Pub_Sub_DataPcPhjh+0xbd2>
   133a0:	21 e0       	ldi	r18, 0x01	; 1
   133a2:	20 93 f4 0b 	sts	0x0BF4, r18	; 0x800bf4 <_sWireless_Pump_Param>
   133a6:	32 e0       	ldi	r19, 0x02	; 2
   133a8:	30 93 ff 0b 	sts	0x0BFF, r19	; 0x800bff <_sWireless_Pump_Param+0xb>
   133ac:	43 e0       	ldi	r20, 0x03	; 3
   133ae:	40 93 0a 0c 	sts	0x0C0A, r20	; 0x800c0a <_sWireless_Pump_Param+0x16>
   133b2:	10 92 fe 0b 	sts	0x0BFE, r1	; 0x800bfe <_sWireless_Pump_Param+0xa>
   133b6:	10 92 09 0c 	sts	0x0C09, r1	; 0x800c09 <_sWireless_Pump_Param+0x15>
   133ba:	10 92 14 0c 	sts	0x0C14, r1	; 0x800c14 <_sWireless_Pump_Param+0x20>
   133be:	10 92 fd 0b 	sts	0x0BFD, r1	; 0x800bfd <_sWireless_Pump_Param+0x9>
   133c2:	10 92 fc 0b 	sts	0x0BFC, r1	; 0x800bfc <_sWireless_Pump_Param+0x8>
   133c6:	10 92 08 0c 	sts	0x0C08, r1	; 0x800c08 <_sWireless_Pump_Param+0x14>
   133ca:	10 92 07 0c 	sts	0x0C07, r1	; 0x800c07 <_sWireless_Pump_Param+0x13>
   133ce:	10 92 13 0c 	sts	0x0C13, r1	; 0x800c13 <_sWireless_Pump_Param+0x1f>
   133d2:	10 92 12 0c 	sts	0x0C12, r1	; 0x800c12 <_sWireless_Pump_Param+0x1e>
   133d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   133da:	81 30       	cpi	r24, 0x01	; 1
   133dc:	91 f4       	brne	.+36     	; 0x13402 <_Z12Pub_Sub_DataPcPhjh+0xc4a>
   133de:	86 ec       	ldi	r24, 0xC6	; 198
   133e0:	94 e1       	ldi	r25, 0x14	; 20
   133e2:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   133e6:	65 ec       	ldi	r22, 0xC5	; 197
   133e8:	77 e3       	ldi	r23, 0x37	; 55
   133ea:	86 ec       	ldi	r24, 0xC6	; 198
   133ec:	94 e1       	ldi	r25, 0x14	; 20
   133ee:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   133f2:	86 ec       	ldi	r24, 0xC6	; 198
   133f4:	94 e1       	ldi	r25, 0x14	; 20
   133f6:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   133fa:	86 ec       	ldi	r24, 0xC6	; 198
   133fc:	94 e1       	ldi	r25, 0x14	; 20
   133fe:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13402:	5e e0       	ldi	r21, 0x0E	; 14
   13404:	59 15       	cp	r21, r9
   13406:	90 f1       	brcs	.+100    	; 0x1346c <_Z12Pub_Sub_DataPcPhjh+0xcb4>
   13408:	d1 01       	movw	r26, r2
   1340a:	17 96       	adiw	r26, 0x07	; 7
   1340c:	8c 91       	ld	r24, X
   1340e:	82 33       	cpi	r24, 0x32	; 50
   13410:	d1 f0       	breq	.+52     	; 0x13446 <_Z12Pub_Sub_DataPcPhjh+0xc8e>
   13412:	83 33       	cpi	r24, 0x33	; 51
   13414:	09 f1       	breq	.+66     	; 0x13458 <_Z12Pub_Sub_DataPcPhjh+0xca0>
   13416:	81 33       	cpi	r24, 0x31	; 49
   13418:	a1 f4       	brne	.+40     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   1341a:	f7 01       	movw	r30, r14
   1341c:	a0 82       	st	Z, r10
   1341e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13422:	81 30       	cpi	r24, 0x01	; 1
   13424:	71 f4       	brne	.+28     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13426:	66 ea       	ldi	r22, 0xA6	; 166
   13428:	77 e3       	ldi	r23, 0x37	; 55
   1342a:	86 ec       	ldi	r24, 0xC6	; 198
   1342c:	94 e1       	ldi	r25, 0x14	; 20
   1342e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13432:	86 ec       	ldi	r24, 0xC6	; 198
   13434:	94 e1       	ldi	r25, 0x14	; 20
   13436:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   1343a:	86 ec       	ldi	r24, 0xC6	; 198
   1343c:	94 e1       	ldi	r25, 0x14	; 20
   1343e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13442:	10 e0       	ldi	r17, 0x00	; 0
   13444:	3b c0       	rjmp	.+118    	; 0x134bc <_Z12Pub_Sub_DataPcPhjh+0xd04>
   13446:	d7 01       	movw	r26, r14
   13448:	8c 92       	st	X, r8
   1344a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1344e:	81 30       	cpi	r24, 0x01	; 1
   13450:	c1 f7       	brne	.-16     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13452:	67 e8       	ldi	r22, 0x87	; 135
   13454:	77 e3       	ldi	r23, 0x37	; 55
   13456:	e9 cf       	rjmp	.-46     	; 0x1342a <_Z12Pub_Sub_DataPcPhjh+0xc72>
   13458:	27 e6       	ldi	r18, 0x67	; 103
   1345a:	f7 01       	movw	r30, r14
   1345c:	20 83       	st	Z, r18
   1345e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13462:	81 30       	cpi	r24, 0x01	; 1
   13464:	71 f7       	brne	.-36     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13466:	68 e6       	ldi	r22, 0x68	; 104
   13468:	77 e3       	ldi	r23, 0x37	; 55
   1346a:	df cf       	rjmp	.-66     	; 0x1342a <_Z12Pub_Sub_DataPcPhjh+0xc72>
   1346c:	34 e6       	ldi	r19, 0x64	; 100
   1346e:	39 15       	cp	r19, r9
   13470:	40 f7       	brcc	.-48     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13472:	d1 01       	movw	r26, r2
   13474:	17 96       	adiw	r26, 0x07	; 7
   13476:	8c 91       	ld	r24, X
   13478:	82 33       	cpi	r24, 0x32	; 50
   1347a:	69 f0       	breq	.+26     	; 0x13496 <_Z12Pub_Sub_DataPcPhjh+0xcde>
   1347c:	83 33       	cpi	r24, 0x33	; 51
   1347e:	a1 f0       	breq	.+40     	; 0x134a8 <_Z12Pub_Sub_DataPcPhjh+0xcf0>
   13480:	81 33       	cpi	r24, 0x31	; 49
   13482:	f9 f6       	brne	.-66     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13484:	f6 01       	movw	r30, r12
   13486:	a0 82       	st	Z, r10
   13488:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1348c:	81 30       	cpi	r24, 0x01	; 1
   1348e:	c9 f6       	brne	.-78     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   13490:	6d e4       	ldi	r22, 0x4D	; 77
   13492:	77 e3       	ldi	r23, 0x37	; 55
   13494:	ca cf       	rjmp	.-108    	; 0x1342a <_Z12Pub_Sub_DataPcPhjh+0xc72>
   13496:	d6 01       	movw	r26, r12
   13498:	8c 92       	st	X, r8
   1349a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1349e:	81 30       	cpi	r24, 0x01	; 1
   134a0:	81 f6       	brne	.-96     	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   134a2:	62 e3       	ldi	r22, 0x32	; 50
   134a4:	77 e3       	ldi	r23, 0x37	; 55
   134a6:	c1 cf       	rjmp	.-126    	; 0x1342a <_Z12Pub_Sub_DataPcPhjh+0xc72>
   134a8:	27 e6       	ldi	r18, 0x67	; 103
   134aa:	f6 01       	movw	r30, r12
   134ac:	20 83       	st	Z, r18
   134ae:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   134b2:	81 30       	cpi	r24, 0x01	; 1
   134b4:	31 f6       	brne	.-116    	; 0x13442 <_Z12Pub_Sub_DataPcPhjh+0xc8a>
   134b6:	67 e1       	ldi	r22, 0x17	; 23
   134b8:	77 e3       	ldi	r23, 0x37	; 55
   134ba:	b7 cf       	rjmp	.-146    	; 0x1342a <_Z12Pub_Sub_DataPcPhjh+0xc72>
   134bc:	81 2f       	mov	r24, r17
   134be:	0e 94 9b 5c 	call	0xb936	; 0xb936 <_Z20Wireless_Pump_EEPROMh>
   134c2:	64 e6       	ldi	r22, 0x64	; 100
   134c4:	70 e0       	ldi	r23, 0x00	; 0
   134c6:	80 e0       	ldi	r24, 0x00	; 0
   134c8:	90 e0       	ldi	r25, 0x00	; 0
   134ca:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   134ce:	1f 5f       	subi	r17, 0xFF	; 255
   134d0:	13 30       	cpi	r17, 0x03	; 3
   134d2:	a1 f7       	brne	.-24     	; 0x134bc <_Z12Pub_Sub_DataPcPhjh+0xd04>
   134d4:	6a cc       	rjmp	.-1836   	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x5f2>
   134d6:	9e e0       	ldi	r25, 0x0E	; 14
   134d8:	99 15       	cp	r25, r9
   134da:	08 f4       	brcc	.+2      	; 0x134de <_Z12Pub_Sub_DataPcPhjh+0xd26>
   134dc:	f5 c0       	rjmp	.+490    	; 0x136c8 <_Z12Pub_Sub_DataPcPhjh+0xf10>
   134de:	60 e1       	ldi	r22, 0x10	; 16
   134e0:	77 e3       	ldi	r23, 0x37	; 55
   134e2:	c2 01       	movw	r24, r4
   134e4:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   134e8:	c3 55       	subi	r28, 0x53	; 83
   134ea:	d9 4f       	sbci	r29, 0xF9	; 249
   134ec:	88 83       	st	Y, r24
   134ee:	cd 5a       	subi	r28, 0xAD	; 173
   134f0:	d6 40       	sbci	r29, 0x06	; 6
   134f2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   134f6:	81 30       	cpi	r24, 0x01	; 1
   134f8:	09 f0       	breq	.+2      	; 0x134fc <_Z12Pub_Sub_DataPcPhjh+0xd44>
   134fa:	91 c0       	rjmp	.+290    	; 0x1361e <_Z12Pub_Sub_DataPcPhjh+0xe66>
   134fc:	64 ef       	ldi	r22, 0xF4	; 244
   134fe:	76 e3       	ldi	r23, 0x36	; 54
   13500:	86 ec       	ldi	r24, 0xC6	; 198
   13502:	94 e1       	ldi	r25, 0x14	; 20
   13504:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   13508:	67 ee       	ldi	r22, 0xE7	; 231
   1350a:	76 e3       	ldi	r23, 0x36	; 54
   1350c:	86 ec       	ldi	r24, 0xC6	; 198
   1350e:	94 e1       	ldi	r25, 0x14	; 20
   13510:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13514:	86 ec       	ldi	r24, 0xC6	; 198
   13516:	94 e1       	ldi	r25, 0x14	; 20
   13518:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1351c:	89 2d       	mov	r24, r9
   1351e:	90 e0       	ldi	r25, 0x00	; 0
   13520:	01 97       	sbiw	r24, 0x01	; 1
   13522:	26 e0       	ldi	r18, 0x06	; 6
   13524:	28 9f       	mul	r18, r24
   13526:	f0 01       	movw	r30, r0
   13528:	29 9f       	mul	r18, r25
   1352a:	f0 0d       	add	r31, r0
   1352c:	11 24       	eor	r1, r1
   1352e:	e2 5b       	subi	r30, 0xB2	; 178
   13530:	f2 4f       	sbci	r31, 0xF2	; 242
   13532:	4a e0       	ldi	r20, 0x0A	; 10
   13534:	50 e0       	ldi	r21, 0x00	; 0
   13536:	60 81       	ld	r22, Z
   13538:	86 ec       	ldi	r24, 0xC6	; 198
   1353a:	94 e1       	ldi	r25, 0x14	; 20
   1353c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   13540:	86 ec       	ldi	r24, 0xC6	; 198
   13542:	94 e1       	ldi	r25, 0x14	; 20
   13544:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13548:	86 ec       	ldi	r24, 0xC6	; 198
   1354a:	94 e1       	ldi	r25, 0x14	; 20
   1354c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13550:	6d ed       	ldi	r22, 0xDD	; 221
   13552:	76 e3       	ldi	r23, 0x36	; 54
   13554:	86 ec       	ldi	r24, 0xC6	; 198
   13556:	94 e1       	ldi	r25, 0x14	; 20
   13558:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1355c:	b3 01       	movw	r22, r6
   1355e:	86 ec       	ldi	r24, 0xC6	; 198
   13560:	94 e1       	ldi	r25, 0x14	; 20
   13562:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   13566:	86 ec       	ldi	r24, 0xC6	; 198
   13568:	94 e1       	ldi	r25, 0x14	; 20
   1356a:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   1356e:	86 ec       	ldi	r24, 0xC6	; 198
   13570:	94 e1       	ldi	r25, 0x14	; 20
   13572:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13576:	63 ed       	ldi	r22, 0xD3	; 211
   13578:	76 e3       	ldi	r23, 0x36	; 54
   1357a:	86 ec       	ldi	r24, 0xC6	; 198
   1357c:	94 e1       	ldi	r25, 0x14	; 20
   1357e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13582:	b3 01       	movw	r22, r6
   13584:	68 5f       	subi	r22, 0xF8	; 248
   13586:	7f 4f       	sbci	r23, 0xFF	; 255
   13588:	86 ec       	ldi	r24, 0xC6	; 198
   1358a:	94 e1       	ldi	r25, 0x14	; 20
   1358c:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   13590:	86 ec       	ldi	r24, 0xC6	; 198
   13592:	94 e1       	ldi	r25, 0x14	; 20
   13594:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13598:	86 ec       	ldi	r24, 0xC6	; 198
   1359a:	94 e1       	ldi	r25, 0x14	; 20
   1359c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   135a0:	69 ec       	ldi	r22, 0xC9	; 201
   135a2:	76 e3       	ldi	r23, 0x36	; 54
   135a4:	86 ec       	ldi	r24, 0xC6	; 198
   135a6:	94 e1       	ldi	r25, 0x14	; 20
   135a8:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   135ac:	b3 01       	movw	r22, r6
   135ae:	60 5f       	subi	r22, 0xF0	; 240
   135b0:	7f 4f       	sbci	r23, 0xFF	; 255
   135b2:	86 ec       	ldi	r24, 0xC6	; 198
   135b4:	94 e1       	ldi	r25, 0x14	; 20
   135b6:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   135ba:	86 ec       	ldi	r24, 0xC6	; 198
   135bc:	94 e1       	ldi	r25, 0x14	; 20
   135be:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   135c2:	86 ec       	ldi	r24, 0xC6	; 198
   135c4:	94 e1       	ldi	r25, 0x14	; 20
   135c6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   135ca:	6f eb       	ldi	r22, 0xBF	; 191
   135cc:	76 e3       	ldi	r23, 0x36	; 54
   135ce:	86 ec       	ldi	r24, 0xC6	; 198
   135d0:	94 e1       	ldi	r25, 0x14	; 20
   135d2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   135d6:	b3 01       	movw	r22, r6
   135d8:	68 5e       	subi	r22, 0xE8	; 232
   135da:	7f 4f       	sbci	r23, 0xFF	; 255
   135dc:	86 ec       	ldi	r24, 0xC6	; 198
   135de:	94 e1       	ldi	r25, 0x14	; 20
   135e0:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   135e4:	86 ec       	ldi	r24, 0xC6	; 198
   135e6:	94 e1       	ldi	r25, 0x14	; 20
   135e8:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   135ec:	86 ec       	ldi	r24, 0xC6	; 198
   135ee:	94 e1       	ldi	r25, 0x14	; 20
   135f0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   135f4:	65 eb       	ldi	r22, 0xB5	; 181
   135f6:	76 e3       	ldi	r23, 0x36	; 54
   135f8:	86 ec       	ldi	r24, 0xC6	; 198
   135fa:	94 e1       	ldi	r25, 0x14	; 20
   135fc:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13600:	b3 01       	movw	r22, r6
   13602:	60 5e       	subi	r22, 0xE0	; 224
   13604:	7f 4f       	sbci	r23, 0xFF	; 255
   13606:	86 ec       	ldi	r24, 0xC6	; 198
   13608:	94 e1       	ldi	r25, 0x14	; 20
   1360a:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   1360e:	86 ec       	ldi	r24, 0xC6	; 198
   13610:	94 e1       	ldi	r25, 0x14	; 20
   13612:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13616:	86 ec       	ldi	r24, 0xC6	; 198
   13618:	94 e1       	ldi	r25, 0x14	; 20
   1361a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1361e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13622:	81 30       	cpi	r24, 0x01	; 1
   13624:	71 f0       	breq	.+28     	; 0x13642 <_Z12Pub_Sub_DataPcPhjh+0xe8a>
   13626:	c8 54       	subi	r28, 0x48	; 72
   13628:	d9 4f       	sbci	r29, 0xF9	; 249
   1362a:	88 81       	ld	r24, Y
   1362c:	c8 5b       	subi	r28, 0xB8	; 184
   1362e:	d6 40       	sbci	r29, 0x06	; 6
   13630:	0e 94 94 7f 	call	0xff28	; 0xff28 <_Z16Lira_Data_EEPROMh>
   13634:	a1 e0       	ldi	r26, 0x01	; 1
   13636:	c0 55       	subi	r28, 0x50	; 80
   13638:	d9 4f       	sbci	r29, 0xF9	; 249
   1363a:	a8 83       	st	Y, r26
   1363c:	c0 5b       	subi	r28, 0xB0	; 176
   1363e:	d6 40       	sbci	r29, 0x06	; 6
   13640:	85 c1       	rjmp	.+778    	; 0x1394c <_Z12Pub_Sub_DataPcPhjh+0x1194>
   13642:	00 e0       	ldi	r16, 0x00	; 0
   13644:	10 e0       	ldi	r17, 0x00	; 0
   13646:	86 ec       	ldi	r24, 0xC6	; 198
   13648:	94 e1       	ldi	r25, 0x14	; 20
   1364a:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   1364e:	69 ea       	ldi	r22, 0xA9	; 169
   13650:	76 e3       	ldi	r23, 0x36	; 54
   13652:	86 ec       	ldi	r24, 0xC6	; 198
   13654:	94 e1       	ldi	r25, 0x14	; 20
   13656:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1365a:	c5 54       	subi	r28, 0x45	; 69
   1365c:	d9 4f       	sbci	r29, 0xF9	; 249
   1365e:	e8 81       	ld	r30, Y
   13660:	f9 81       	ldd	r31, Y+1	; 0x01
   13662:	cb 5b       	subi	r28, 0xBB	; 187
   13664:	d6 40       	sbci	r29, 0x06	; 6
   13666:	e0 0f       	add	r30, r16
   13668:	f1 1f       	adc	r31, r17
   1366a:	e7 5b       	subi	r30, 0xB7	; 183
   1366c:	f2 4f       	sbci	r31, 0xF2	; 242
   1366e:	4a e0       	ldi	r20, 0x0A	; 10
   13670:	50 e0       	ldi	r21, 0x00	; 0
   13672:	60 81       	ld	r22, Z
   13674:	86 ec       	ldi	r24, 0xC6	; 198
   13676:	94 e1       	ldi	r25, 0x14	; 20
   13678:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   1367c:	86 ec       	ldi	r24, 0xC6	; 198
   1367e:	94 e1       	ldi	r25, 0x14	; 20
   13680:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13684:	0f 5f       	subi	r16, 0xFF	; 255
   13686:	1f 4f       	sbci	r17, 0xFF	; 255
   13688:	05 30       	cpi	r16, 0x05	; 5
   1368a:	11 05       	cpc	r17, r1
   1368c:	e1 f6       	brne	.-72     	; 0x13646 <_Z12Pub_Sub_DataPcPhjh+0xe8e>
   1368e:	00 e0       	ldi	r16, 0x00	; 0
   13690:	10 e0       	ldi	r17, 0x00	; 0
   13692:	86 ec       	ldi	r24, 0xC6	; 198
   13694:	94 e1       	ldi	r25, 0x14	; 20
   13696:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   1369a:	6e e9       	ldi	r22, 0x9E	; 158
   1369c:	76 e3       	ldi	r23, 0x36	; 54
   1369e:	86 ec       	ldi	r24, 0xC6	; 198
   136a0:	94 e1       	ldi	r25, 0x14	; 20
   136a2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   136a6:	b8 01       	movw	r22, r16
   136a8:	6a 5e       	subi	r22, 0xEA	; 234
   136aa:	73 4f       	sbci	r23, 0xF3	; 243
   136ac:	86 ec       	ldi	r24, 0xC6	; 198
   136ae:	94 e1       	ldi	r25, 0x14	; 20
   136b0:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   136b4:	86 ec       	ldi	r24, 0xC6	; 198
   136b6:	94 e1       	ldi	r25, 0x14	; 20
   136b8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   136bc:	03 5f       	subi	r16, 0xF3	; 243
   136be:	1f 4f       	sbci	r17, 0xFF	; 255
   136c0:	0e 34       	cpi	r16, 0x4E	; 78
   136c2:	11 05       	cpc	r17, r1
   136c4:	31 f7       	brne	.-52     	; 0x13692 <_Z12Pub_Sub_DataPcPhjh+0xeda>
   136c6:	af cf       	rjmp	.-162    	; 0x13626 <_Z12Pub_Sub_DataPcPhjh+0xe6e>
   136c8:	b4 e6       	ldi	r27, 0x64	; 100
   136ca:	b9 15       	cp	r27, r9
   136cc:	08 f0       	brcs	.+2      	; 0x136d0 <_Z12Pub_Sub_DataPcPhjh+0xf18>
   136ce:	3e c1       	rjmp	.+636    	; 0x1394c <_Z12Pub_Sub_DataPcPhjh+0x1194>
   136d0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   136d4:	09 2d       	mov	r16, r9
   136d6:	10 e0       	ldi	r17, 0x00	; 0
   136d8:	81 30       	cpi	r24, 0x01	; 1
   136da:	09 f4       	brne	.+2      	; 0x136de <_Z12Pub_Sub_DataPcPhjh+0xf26>
   136dc:	57 c0       	rjmp	.+174    	; 0x1378c <_Z12Pub_Sub_DataPcPhjh+0xfd4>
   136de:	78 01       	movw	r14, r16
   136e0:	e5 e6       	ldi	r30, 0x65	; 101
   136e2:	ee 1a       	sub	r14, r30
   136e4:	f1 08       	sbc	r15, r1
   136e6:	6d e5       	ldi	r22, 0x5D	; 93
   136e8:	76 e3       	ldi	r23, 0x36	; 54
   136ea:	c2 01       	movw	r24, r4
   136ec:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   136f0:	60 e0       	ldi	r22, 0x00	; 0
   136f2:	70 e0       	ldi	r23, 0x00	; 0
   136f4:	0e 94 56 8e 	call	0x11cac	; 0x11cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   136f8:	2b e1       	ldi	r18, 0x1B	; 27
   136fa:	2e 9d       	mul	r18, r14
   136fc:	80 01       	movw	r16, r0
   136fe:	2f 9d       	mul	r18, r15
   13700:	10 0d       	add	r17, r0
   13702:	11 24       	eor	r1, r1
   13704:	08 51       	subi	r16, 0x18	; 24
   13706:	12 4f       	sbci	r17, 0xF2	; 242
   13708:	d8 01       	movw	r26, r16
   1370a:	1d 96       	adiw	r26, 0x0d	; 13
   1370c:	9c 93       	st	X, r25
   1370e:	8e 93       	st	-X, r24
   13710:	1c 97       	sbiw	r26, 0x0c	; 12
   13712:	69 e5       	ldi	r22, 0x59	; 89
   13714:	76 e3       	ldi	r23, 0x36	; 54
   13716:	c2 01       	movw	r24, r4
   13718:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1371c:	61 e0       	ldi	r22, 0x01	; 1
   1371e:	70 e0       	ldi	r23, 0x00	; 0
   13720:	0e 94 56 8e 	call	0x11cac	; 0x11cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13724:	f8 01       	movw	r30, r16
   13726:	97 87       	std	Z+15, r25	; 0x0f
   13728:	86 87       	std	Z+14, r24	; 0x0e
   1372a:	65 e5       	ldi	r22, 0x55	; 85
   1372c:	76 e3       	ldi	r23, 0x36	; 54
   1372e:	c2 01       	movw	r24, r4
   13730:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13734:	60 e0       	ldi	r22, 0x00	; 0
   13736:	70 e0       	ldi	r23, 0x00	; 0
   13738:	0e 94 56 8e 	call	0x11cac	; 0x11cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1373c:	d8 01       	movw	r26, r16
   1373e:	53 96       	adiw	r26, 0x13	; 19
   13740:	9c 93       	st	X, r25
   13742:	8e 93       	st	-X, r24
   13744:	52 97       	sbiw	r26, 0x12	; 18
   13746:	61 e5       	ldi	r22, 0x51	; 81
   13748:	76 e3       	ldi	r23, 0x36	; 54
   1374a:	c2 01       	movw	r24, r4
   1374c:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13750:	61 e0       	ldi	r22, 0x01	; 1
   13752:	70 e0       	ldi	r23, 0x00	; 0
   13754:	0e 94 56 8e 	call	0x11cac	; 0x11cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13758:	f8 01       	movw	r30, r16
   1375a:	95 8b       	std	Z+21, r25	; 0x15
   1375c:	84 8b       	std	Z+20, r24	; 0x14
   1375e:	68 e4       	ldi	r22, 0x48	; 72
   13760:	76 e3       	ldi	r23, 0x36	; 54
   13762:	c2 01       	movw	r24, r4
   13764:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13768:	d8 01       	movw	r26, r16
   1376a:	58 96       	adiw	r26, 0x18	; 24
   1376c:	8c 93       	st	X, r24
   1376e:	58 97       	sbiw	r26, 0x18	; 24
   13770:	1a 96       	adiw	r26, 0x0a	; 10
   13772:	1c 92       	st	X, r1
   13774:	1a 97       	sbiw	r26, 0x0a	; 10
   13776:	1b 96       	adiw	r26, 0x0b	; 11
   13778:	1c 92       	st	X, r1
   1377a:	1b 97       	sbiw	r26, 0x0b	; 11
   1377c:	14 96       	adiw	r26, 0x04	; 4
   1377e:	1c 92       	st	X, r1
   13780:	1e 92       	st	-X, r1
   13782:	13 97       	sbiw	r26, 0x03	; 3
   13784:	b9 e6       	ldi	r27, 0x69	; 105
   13786:	9b 12       	cpse	r9, r27
   13788:	7b c0       	rjmp	.+246    	; 0x13880 <_Z12Pub_Sub_DataPcPhjh+0x10c8>
   1378a:	47 c0       	rjmp	.+142    	; 0x1381a <_Z12Pub_Sub_DataPcPhjh+0x1062>
   1378c:	62 e8       	ldi	r22, 0x82	; 130
   1378e:	76 e3       	ldi	r23, 0x36	; 54
   13790:	86 ec       	ldi	r24, 0xC6	; 198
   13792:	94 e1       	ldi	r25, 0x14	; 20
   13794:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   13798:	6d e6       	ldi	r22, 0x6D	; 109
   1379a:	76 e3       	ldi	r23, 0x36	; 54
   1379c:	86 ec       	ldi	r24, 0xC6	; 198
   1379e:	94 e1       	ldi	r25, 0x14	; 20
   137a0:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   137a4:	c8 01       	movw	r24, r16
   137a6:	85 56       	subi	r24, 0x65	; 101
   137a8:	91 09       	sbc	r25, r1
   137aa:	2b e1       	ldi	r18, 0x1B	; 27
   137ac:	28 9f       	mul	r18, r24
   137ae:	60 01       	movw	r12, r0
   137b0:	29 9f       	mul	r18, r25
   137b2:	d0 0c       	add	r13, r0
   137b4:	11 24       	eor	r1, r1
   137b6:	f6 01       	movw	r30, r12
   137b8:	e8 51       	subi	r30, 0x18	; 24
   137ba:	f2 4f       	sbci	r31, 0xF2	; 242
   137bc:	4a e0       	ldi	r20, 0x0A	; 10
   137be:	50 e0       	ldi	r21, 0x00	; 0
   137c0:	61 81       	ldd	r22, Z+1	; 0x01
   137c2:	86 ec       	ldi	r24, 0xC6	; 198
   137c4:	94 e1       	ldi	r25, 0x14	; 20
   137c6:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   137ca:	86 ec       	ldi	r24, 0xC6	; 198
   137cc:	94 e1       	ldi	r25, 0x14	; 20
   137ce:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   137d2:	e1 2c       	mov	r14, r1
   137d4:	f1 2c       	mov	r15, r1
   137d6:	86 ec       	ldi	r24, 0xC6	; 198
   137d8:	94 e1       	ldi	r25, 0x14	; 20
   137da:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   137de:	61 e6       	ldi	r22, 0x61	; 97
   137e0:	76 e3       	ldi	r23, 0x36	; 54
   137e2:	86 ec       	ldi	r24, 0xC6	; 198
   137e4:	94 e1       	ldi	r25, 0x14	; 20
   137e6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   137ea:	f6 01       	movw	r30, r12
   137ec:	ee 0d       	add	r30, r14
   137ee:	ff 1d       	adc	r31, r15
   137f0:	e8 51       	subi	r30, 0x18	; 24
   137f2:	f2 4f       	sbci	r31, 0xF2	; 242
   137f4:	4a e0       	ldi	r20, 0x0A	; 10
   137f6:	50 e0       	ldi	r21, 0x00	; 0
   137f8:	65 81       	ldd	r22, Z+5	; 0x05
   137fa:	86 ec       	ldi	r24, 0xC6	; 198
   137fc:	94 e1       	ldi	r25, 0x14	; 20
   137fe:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   13802:	86 ec       	ldi	r24, 0xC6	; 198
   13804:	94 e1       	ldi	r25, 0x14	; 20
   13806:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1380a:	ef ef       	ldi	r30, 0xFF	; 255
   1380c:	ee 1a       	sub	r14, r30
   1380e:	fe 0a       	sbc	r15, r30
   13810:	f5 e0       	ldi	r31, 0x05	; 5
   13812:	ef 16       	cp	r14, r31
   13814:	f1 04       	cpc	r15, r1
   13816:	f9 f6       	brne	.-66     	; 0x137d6 <_Z12Pub_Sub_DataPcPhjh+0x101e>
   13818:	62 cf       	rjmp	.-316    	; 0x136de <_Z12Pub_Sub_DataPcPhjh+0xf26>
   1381a:	10 92 9b 14 	sts	0x149B, r1	; 0x80149b <_sRuble_Parameters+0xed>
   1381e:	10 92 9c 14 	sts	0x149C, r1	; 0x80149c <_sRuble_Parameters+0xee>
   13822:	10 92 9d 14 	sts	0x149D, r1	; 0x80149d <_sRuble_Parameters+0xef>
   13826:	10 92 9e 14 	sts	0x149E, r1	; 0x80149e <_sRuble_Parameters+0xf0>
   1382a:	d8 01       	movw	r26, r16
   1382c:	1c 96       	adiw	r26, 0x0c	; 12
   1382e:	8d 91       	ld	r24, X+
   13830:	9c 91       	ld	r25, X
   13832:	1d 97       	sbiw	r26, 0x0d	; 13
   13834:	00 97       	sbiw	r24, 0x00	; 0
   13836:	e1 f0       	breq	.+56     	; 0x13870 <_Z12Pub_Sub_DataPcPhjh+0x10b8>
   13838:	52 96       	adiw	r26, 0x12	; 18
   1383a:	6d 91       	ld	r22, X+
   1383c:	7c 91       	ld	r23, X
   1383e:	53 97       	sbiw	r26, 0x13	; 19
   13840:	40 e1       	ldi	r20, 0x10	; 16
   13842:	5e e0       	ldi	r21, 0x0E	; 14
   13844:	64 9f       	mul	r22, r20
   13846:	90 01       	movw	r18, r0
   13848:	65 9f       	mul	r22, r21
   1384a:	30 0d       	add	r19, r0
   1384c:	74 9f       	mul	r23, r20
   1384e:	30 0d       	add	r19, r0
   13850:	11 24       	eor	r1, r1
   13852:	30 93 e9 0b 	sts	0x0BE9, r19	; 0x800be9 <_sSchedules+0x2cb>
   13856:	20 93 e8 0b 	sts	0x0BE8, r18	; 0x800be8 <_sSchedules+0x2ca>
   1385a:	4c e3       	ldi	r20, 0x3C	; 60
   1385c:	48 9f       	mul	r20, r24
   1385e:	90 01       	movw	r18, r0
   13860:	49 9f       	mul	r20, r25
   13862:	30 0d       	add	r19, r0
   13864:	11 24       	eor	r1, r1
   13866:	30 93 eb 0b 	sts	0x0BEB, r19	; 0x800beb <_sSchedules+0x2cd>
   1386a:	20 93 ea 0b 	sts	0x0BEA, r18	; 0x800bea <_sSchedules+0x2cc>
   1386e:	08 c0       	rjmp	.+16     	; 0x13880 <_Z12Pub_Sub_DataPcPhjh+0x10c8>
   13870:	10 92 eb 0b 	sts	0x0BEB, r1	; 0x800beb <_sSchedules+0x2cd>
   13874:	10 92 ea 0b 	sts	0x0BEA, r1	; 0x800bea <_sSchedules+0x2cc>
   13878:	10 92 e9 0b 	sts	0x0BE9, r1	; 0x800be9 <_sSchedules+0x2cb>
   1387c:	10 92 e8 0b 	sts	0x0BE8, r1	; 0x800be8 <_sSchedules+0x2ca>
   13880:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13884:	81 30       	cpi	r24, 0x01	; 1
   13886:	09 f0       	breq	.+2      	; 0x1388a <_Z12Pub_Sub_DataPcPhjh+0x10d2>
   13888:	57 c0       	rjmp	.+174    	; 0x13938 <_Z12Pub_Sub_DataPcPhjh+0x1180>
   1388a:	8b e1       	ldi	r24, 0x1B	; 27
   1388c:	8e 9d       	mul	r24, r14
   1388e:	80 01       	movw	r16, r0
   13890:	8f 9d       	mul	r24, r15
   13892:	10 0d       	add	r17, r0
   13894:	11 24       	eor	r1, r1
   13896:	0c 50       	subi	r16, 0x0C	; 12
   13898:	12 4f       	sbci	r17, 0xF2	; 242
   1389a:	82 e0       	ldi	r24, 0x02	; 2
   1389c:	d8 2e       	mov	r13, r24
   1389e:	86 ec       	ldi	r24, 0xC6	; 198
   138a0:	94 e1       	ldi	r25, 0x14	; 20
   138a2:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   138a6:	61 e4       	ldi	r22, 0x41	; 65
   138a8:	76 e3       	ldi	r23, 0x36	; 54
   138aa:	86 ec       	ldi	r24, 0xC6	; 198
   138ac:	94 e1       	ldi	r25, 0x14	; 20
   138ae:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   138b2:	f8 01       	movw	r30, r16
   138b4:	61 91       	ld	r22, Z+
   138b6:	71 91       	ld	r23, Z+
   138b8:	8f 01       	movw	r16, r30
   138ba:	4a e0       	ldi	r20, 0x0A	; 10
   138bc:	50 e0       	ldi	r21, 0x00	; 0
   138be:	86 ec       	ldi	r24, 0xC6	; 198
   138c0:	94 e1       	ldi	r25, 0x14	; 20
   138c2:	0e 94 d8 d5 	call	0x1abb0	; 0x1abb0 <_ZN5Print5printEji>
   138c6:	86 ec       	ldi	r24, 0xC6	; 198
   138c8:	94 e1       	ldi	r25, 0x14	; 20
   138ca:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   138ce:	6a e3       	ldi	r22, 0x3A	; 58
   138d0:	76 e3       	ldi	r23, 0x36	; 54
   138d2:	86 ec       	ldi	r24, 0xC6	; 198
   138d4:	94 e1       	ldi	r25, 0x14	; 20
   138d6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   138da:	d8 01       	movw	r26, r16
   138dc:	14 96       	adiw	r26, 0x04	; 4
   138de:	6d 91       	ld	r22, X+
   138e0:	7c 91       	ld	r23, X
   138e2:	15 97       	sbiw	r26, 0x05	; 5
   138e4:	4a e0       	ldi	r20, 0x0A	; 10
   138e6:	50 e0       	ldi	r21, 0x00	; 0
   138e8:	86 ec       	ldi	r24, 0xC6	; 198
   138ea:	94 e1       	ldi	r25, 0x14	; 20
   138ec:	0e 94 d8 d5 	call	0x1abb0	; 0x1abb0 <_ZN5Print5printEji>
   138f0:	86 ec       	ldi	r24, 0xC6	; 198
   138f2:	94 e1       	ldi	r25, 0x14	; 20
   138f4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   138f8:	da 94       	dec	r13
   138fa:	d1 10       	cpse	r13, r1
   138fc:	d0 cf       	rjmp	.-96     	; 0x1389e <_Z12Pub_Sub_DataPcPhjh+0x10e6>
   138fe:	86 ec       	ldi	r24, 0xC6	; 198
   13900:	94 e1       	ldi	r25, 0x14	; 20
   13902:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13906:	6e e2       	ldi	r22, 0x2E	; 46
   13908:	76 e3       	ldi	r23, 0x36	; 54
   1390a:	86 ec       	ldi	r24, 0xC6	; 198
   1390c:	94 e1       	ldi	r25, 0x14	; 20
   1390e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13912:	8b e1       	ldi	r24, 0x1B	; 27
   13914:	8e 9d       	mul	r24, r14
   13916:	f0 01       	movw	r30, r0
   13918:	8f 9d       	mul	r24, r15
   1391a:	f0 0d       	add	r31, r0
   1391c:	11 24       	eor	r1, r1
   1391e:	e8 51       	subi	r30, 0x18	; 24
   13920:	f2 4f       	sbci	r31, 0xF2	; 242
   13922:	4a e0       	ldi	r20, 0x0A	; 10
   13924:	50 e0       	ldi	r21, 0x00	; 0
   13926:	60 8d       	ldd	r22, Z+24	; 0x18
   13928:	86 ec       	ldi	r24, 0xC6	; 198
   1392a:	94 e1       	ldi	r25, 0x14	; 20
   1392c:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   13930:	86 ec       	ldi	r24, 0xC6	; 198
   13932:	94 e1       	ldi	r25, 0x14	; 20
   13934:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13938:	8c e9       	ldi	r24, 0x9C	; 156
   1393a:	89 0d       	add	r24, r9
   1393c:	0e 94 26 7b 	call	0xf64c	; 0xf64c <_Z21Exra_Plot_Data_EEPROMh>
   13940:	b1 e0       	ldi	r27, 0x01	; 1
   13942:	c0 55       	subi	r28, 0x50	; 80
   13944:	d9 4f       	sbci	r29, 0xF9	; 249
   13946:	b8 83       	st	Y, r27
   13948:	c0 5b       	subi	r28, 0xB0	; 176
   1394a:	d6 40       	sbci	r29, 0x06	; 6
   1394c:	8e 01       	movw	r16, r28
   1394e:	0b 57       	subi	r16, 0x7B	; 123
   13950:	19 4f       	sbci	r17, 0xF9	; 249
   13952:	88 e2       	ldi	r24, 0x28	; 40
   13954:	f8 01       	movw	r30, r16
   13956:	11 92       	st	Z+, r1
   13958:	8a 95       	dec	r24
   1395a:	e9 f7       	brne	.-6      	; 0x13956 <_Z12Pub_Sub_DataPcPhjh+0x119e>
   1395c:	8e ec       	ldi	r24, 0xCE	; 206
   1395e:	93 e1       	ldi	r25, 0x13	; 19
   13960:	9f 93       	push	r25
   13962:	8f 93       	push	r24
   13964:	8d e9       	ldi	r24, 0x9D	; 157
   13966:	95 e0       	ldi	r25, 0x05	; 5
   13968:	9f 93       	push	r25
   1396a:	8f 93       	push	r24
   1396c:	1f 93       	push	r17
   1396e:	0f 93       	push	r16
   13970:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   13974:	ca 54       	subi	r28, 0x4A	; 74
   13976:	d9 4f       	sbci	r29, 0xF9	; 249
   13978:	68 81       	ld	r22, Y
   1397a:	79 81       	ldd	r23, Y+1	; 0x01
   1397c:	c6 5b       	subi	r28, 0xB6	; 182
   1397e:	d6 40       	sbci	r29, 0x06	; 6
   13980:	c8 01       	movw	r24, r16
   13982:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   13986:	0f 90       	pop	r0
   13988:	0f 90       	pop	r0
   1398a:	0f 90       	pop	r0
   1398c:	0f 90       	pop	r0
   1398e:	0f 90       	pop	r0
   13990:	0f 90       	pop	r0
   13992:	89 2b       	or	r24, r25
   13994:	09 f0       	breq	.+2      	; 0x13998 <_Z12Pub_Sub_DataPcPhjh+0x11e0>
   13996:	f4 c1       	rjmp	.+1000   	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13998:	69 e2       	ldi	r22, 0x29	; 41
   1399a:	76 e3       	ldi	r23, 0x36	; 54
   1399c:	c2 01       	movw	r24, r4
   1399e:	0e 94 4e 8e 	call	0x11c9c	; 0x11c9c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   139a2:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   139a6:	fc 01       	movw	r30, r24
   139a8:	31 97       	sbiw	r30, 0x01	; 1
   139aa:	e8 30       	cpi	r30, 0x08	; 8
   139ac:	f1 05       	cpc	r31, r1
   139ae:	08 f0       	brcs	.+2      	; 0x139b2 <_Z12Pub_Sub_DataPcPhjh+0x11fa>
   139b0:	e1 c1       	rjmp	.+962    	; 0x13d74 <_Z12Pub_Sub_DataPcPhjh+0x15bc>
   139b2:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   139b6:	88 27       	eor	r24, r24
   139b8:	e1 51       	subi	r30, 0x11	; 17
   139ba:	ff 4f       	sbci	r31, 0xFF	; 255
   139bc:	8f 4f       	sbci	r24, 0xFF	; 255
   139be:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
   139c2:	91 30       	cpi	r25, 0x01	; 1
   139c4:	51 f4       	brne	.+20     	; 0x139da <_Z12Pub_Sub_DataPcPhjh+0x1222>
   139c6:	63 e1       	ldi	r22, 0x13	; 19
   139c8:	76 e3       	ldi	r23, 0x36	; 54
   139ca:	86 ec       	ldi	r24, 0xC6	; 198
   139cc:	94 e1       	ldi	r25, 0x14	; 20
   139ce:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   139d2:	86 ec       	ldi	r24, 0xC6	; 198
   139d4:	94 e1       	ldi	r25, 0x14	; 20
   139d6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   139da:	6f e0       	ldi	r22, 0x0F	; 15
   139dc:	76 e3       	ldi	r23, 0x36	; 54
   139de:	c2 01       	movw	r24, r4
   139e0:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   139e4:	bc 01       	movw	r22, r24
   139e6:	ce 01       	movw	r24, r28
   139e8:	83 5a       	subi	r24, 0xA3	; 163
   139ea:	99 4f       	sbci	r25, 0xF9	; 249
   139ec:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   139f0:	25 e1       	ldi	r18, 0x15	; 21
   139f2:	3c e0       	ldi	r19, 0x0C	; 12
   139f4:	61 2c       	mov	r6, r1
   139f6:	71 2c       	mov	r7, r1
   139f8:	96 2c       	mov	r9, r6
   139fa:	fe 01       	movw	r30, r28
   139fc:	e3 5a       	subi	r30, 0xA3	; 163
   139fe:	f9 4f       	sbci	r31, 0xF9	; 249
   13a00:	80 e0       	ldi	r24, 0x00	; 0
   13a02:	90 e0       	ldi	r25, 0x00	; 0
   13a04:	40 e0       	ldi	r20, 0x00	; 0
   13a06:	51 91       	ld	r21, Z+
   13a08:	d9 01       	movw	r26, r18
   13a0a:	a8 0f       	add	r26, r24
   13a0c:	b9 1f       	adc	r27, r25
   13a0e:	11 96       	adiw	r26, 0x01	; 1
   13a10:	6c 91       	ld	r22, X
   13a12:	65 13       	cpse	r22, r21
   13a14:	01 c0       	rjmp	.+2      	; 0x13a18 <_Z12Pub_Sub_DataPcPhjh+0x1260>
   13a16:	4f 5f       	subi	r20, 0xFF	; 255
   13a18:	01 96       	adiw	r24, 0x01	; 1
   13a1a:	86 30       	cpi	r24, 0x06	; 6
   13a1c:	91 05       	cpc	r25, r1
   13a1e:	99 f7       	brne	.-26     	; 0x13a06 <_Z12Pub_Sub_DataPcPhjh+0x124e>
   13a20:	c3 01       	movw	r24, r6
   13a22:	01 96       	adiw	r24, 0x01	; 1
   13a24:	7c 01       	movw	r14, r24
   13a26:	46 30       	cpi	r20, 0x06	; 6
   13a28:	09 f0       	breq	.+2      	; 0x13a2c <_Z12Pub_Sub_DataPcPhjh+0x1274>
   13a2a:	b1 c0       	rjmp	.+354    	; 0x13b8e <_Z12Pub_Sub_DataPcPhjh+0x13d6>
   13a2c:	8d e0       	ldi	r24, 0x0D	; 13
   13a2e:	86 9d       	mul	r24, r6
   13a30:	60 01       	movw	r12, r0
   13a32:	87 9d       	mul	r24, r7
   13a34:	d0 0c       	add	r13, r0
   13a36:	11 24       	eor	r1, r1
   13a38:	d6 01       	movw	r26, r12
   13a3a:	aa 5e       	subi	r26, 0xEA	; 234
   13a3c:	b3 4f       	sbci	r27, 0xF3	; 243
   13a3e:	5d 01       	movw	r10, r26
   13a40:	63 e1       	ldi	r22, 0x13	; 19
   13a42:	77 e0       	ldi	r23, 0x07	; 7
   13a44:	cd 01       	movw	r24, r26
   13a46:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   13a4a:	27 e0       	ldi	r18, 0x07	; 7
   13a4c:	26 9d       	mul	r18, r6
   13a4e:	c0 01       	movw	r24, r0
   13a50:	27 9d       	mul	r18, r7
   13a52:	90 0d       	add	r25, r0
   13a54:	11 24       	eor	r1, r1
   13a56:	b5 01       	movw	r22, r10
   13a58:	8e 5d       	subi	r24, 0xDE	; 222
   13a5a:	9b 4e       	sbci	r25, 0xEB	; 235
   13a5c:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   13a60:	f6 01       	movw	r30, r12
   13a62:	eb 5e       	subi	r30, 0xEB	; 235
   13a64:	f3 4f       	sbci	r31, 0xF3	; 243
   13a66:	6f 01       	movw	r12, r30
   13a68:	10 82       	st	Z, r1
   13a6a:	8f ef       	ldi	r24, 0xFF	; 255
   13a6c:	90 e0       	ldi	r25, 0x00	; 0
   13a6e:	91 87       	std	Z+9, r25	; 0x09
   13a70:	80 87       	std	Z+8, r24	; 0x08
   13a72:	81 e0       	ldi	r24, 0x01	; 1
   13a74:	83 87       	std	Z+11, r24	; 0x0b
   13a76:	12 86       	std	Z+10, r1	; 0x0a
   13a78:	14 86       	std	Z+12, r1	; 0x0c
   13a7a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13a7e:	81 30       	cpi	r24, 0x01	; 1
   13a80:	79 f5       	brne	.+94     	; 0x13ae0 <_Z12Pub_Sub_DataPcPhjh+0x1328>
   13a82:	64 ef       	ldi	r22, 0xF4	; 244
   13a84:	75 e3       	ldi	r23, 0x35	; 53
   13a86:	86 ec       	ldi	r24, 0xC6	; 198
   13a88:	94 e1       	ldi	r25, 0x14	; 20
   13a8a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13a8e:	86 ec       	ldi	r24, 0xC6	; 198
   13a90:	94 e1       	ldi	r25, 0x14	; 20
   13a92:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13a96:	69 ee       	ldi	r22, 0xE9	; 233
   13a98:	75 e3       	ldi	r23, 0x35	; 53
   13a9a:	86 ec       	ldi	r24, 0xC6	; 198
   13a9c:	94 e1       	ldi	r25, 0x14	; 20
   13a9e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13aa2:	86 ec       	ldi	r24, 0xC6	; 198
   13aa4:	94 e1       	ldi	r25, 0x14	; 20
   13aa6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13aaa:	4a e0       	ldi	r20, 0x0A	; 10
   13aac:	50 e0       	ldi	r21, 0x00	; 0
   13aae:	d6 01       	movw	r26, r12
   13ab0:	6c 91       	ld	r22, X
   13ab2:	86 ec       	ldi	r24, 0xC6	; 198
   13ab4:	94 e1       	ldi	r25, 0x14	; 20
   13ab6:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   13aba:	6e ed       	ldi	r22, 0xDE	; 222
   13abc:	75 e3       	ldi	r23, 0x35	; 53
   13abe:	86 ec       	ldi	r24, 0xC6	; 198
   13ac0:	94 e1       	ldi	r25, 0x14	; 20
   13ac2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13ac6:	86 ec       	ldi	r24, 0xC6	; 198
   13ac8:	94 e1       	ldi	r25, 0x14	; 20
   13aca:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13ace:	b5 01       	movw	r22, r10
   13ad0:	86 ec       	ldi	r24, 0xC6	; 198
   13ad2:	94 e1       	ldi	r25, 0x14	; 20
   13ad4:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   13ad8:	86 ec       	ldi	r24, 0xC6	; 198
   13ada:	94 e1       	ldi	r25, 0x14	; 20
   13adc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13ae0:	89 2d       	mov	r24, r9
   13ae2:	0e 94 61 5c 	call	0xb8c2	; 0xb8c2 <_Z16Euro_Data_EEPROMh>
   13ae6:	b5 e0       	ldi	r27, 0x05	; 5
   13ae8:	6b 0e       	add	r6, r27
   13aea:	71 1c       	adc	r7, r1
   13aec:	ae e4       	ldi	r26, 0x4E	; 78
   13aee:	8a 2e       	mov	r8, r26
   13af0:	ad e0       	ldi	r26, 0x0D	; 13
   13af2:	9a 2e       	mov	r9, r26
   13af4:	cc 24       	eor	r12, r12
   13af6:	c3 94       	inc	r12
   13af8:	d1 2c       	mov	r13, r1
   13afa:	22 24       	eor	r2, r2
   13afc:	2a 94       	dec	r2
   13afe:	2c 0c       	add	r2, r12
   13b00:	54 01       	movw	r10, r8
   13b02:	f5 e0       	ldi	r31, 0x05	; 5
   13b04:	3f 2e       	mov	r3, r31
   13b06:	f5 01       	movw	r30, r10
   13b08:	81 81       	ldd	r24, Z+1	; 0x01
   13b0a:	88 23       	and	r24, r24
   13b0c:	09 f1       	breq	.+66     	; 0x13b50 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   13b0e:	90 e0       	ldi	r25, 0x00	; 0
   13b10:	8e 15       	cp	r24, r14
   13b12:	9f 05       	cpc	r25, r15
   13b14:	e9 f4       	brne	.+58     	; 0x13b50 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   13b16:	11 82       	std	Z+1, r1	; 0x01
   13b18:	82 2d       	mov	r24, r2
   13b1a:	0e 94 94 7f 	call	0xff28	; 0xff28 <_Z16Lira_Data_EEPROMh>
   13b1e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13b22:	81 30       	cpi	r24, 0x01	; 1
   13b24:	a9 f4       	brne	.+42     	; 0x13b50 <_Z12Pub_Sub_DataPcPhjh+0x1398>
   13b26:	61 ec       	ldi	r22, 0xC1	; 193
   13b28:	75 e3       	ldi	r23, 0x35	; 53
   13b2a:	86 ec       	ldi	r24, 0xC6	; 198
   13b2c:	94 e1       	ldi	r25, 0x14	; 20
   13b2e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13b32:	86 ec       	ldi	r24, 0xC6	; 198
   13b34:	94 e1       	ldi	r25, 0x14	; 20
   13b36:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13b3a:	4a e0       	ldi	r20, 0x0A	; 10
   13b3c:	50 e0       	ldi	r21, 0x00	; 0
   13b3e:	b6 01       	movw	r22, r12
   13b40:	86 ec       	ldi	r24, 0xC6	; 198
   13b42:	94 e1       	ldi	r25, 0x14	; 20
   13b44:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
   13b48:	86 ec       	ldi	r24, 0xC6	; 198
   13b4a:	94 e1       	ldi	r25, 0x14	; 20
   13b4c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13b50:	3a 94       	dec	r3
   13b52:	ff ef       	ldi	r31, 0xFF	; 255
   13b54:	af 1a       	sub	r10, r31
   13b56:	bf 0a       	sbc	r11, r31
   13b58:	31 10       	cpse	r3, r1
   13b5a:	d5 cf       	rjmp	.-86     	; 0x13b06 <_Z12Pub_Sub_DataPcPhjh+0x134e>
   13b5c:	2f ef       	ldi	r18, 0xFF	; 255
   13b5e:	c2 1a       	sub	r12, r18
   13b60:	d2 0a       	sbc	r13, r18
   13b62:	36 e0       	ldi	r19, 0x06	; 6
   13b64:	83 0e       	add	r8, r19
   13b66:	91 1c       	adc	r9, r1
   13b68:	4f e0       	ldi	r20, 0x0F	; 15
   13b6a:	c4 16       	cp	r12, r20
   13b6c:	d1 04       	cpc	r13, r1
   13b6e:	29 f6       	brne	.-118    	; 0x13afa <_Z12Pub_Sub_DataPcPhjh+0x1342>
   13b70:	5f ef       	ldi	r21, 0xFF	; 255
   13b72:	e5 1a       	sub	r14, r21
   13b74:	f5 0a       	sbc	r15, r21
   13b76:	6e 14       	cp	r6, r14
   13b78:	7f 04       	cpc	r7, r15
   13b7a:	09 f0       	breq	.+2      	; 0x13b7e <_Z12Pub_Sub_DataPcPhjh+0x13c6>
   13b7c:	b7 cf       	rjmp	.-146    	; 0x13aec <_Z12Pub_Sub_DataPcPhjh+0x1334>
   13b7e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13b82:	81 30       	cpi	r24, 0x01	; 1
   13b84:	09 f0       	breq	.+2      	; 0x13b88 <_Z12Pub_Sub_DataPcPhjh+0x13d0>
   13b86:	ef c0       	rjmp	.+478    	; 0x13d66 <_Z12Pub_Sub_DataPcPhjh+0x15ae>
   13b88:	e1 2c       	mov	r14, r1
   13b8a:	f1 2c       	mov	r15, r1
   13b8c:	09 c0       	rjmp	.+18     	; 0x13ba0 <_Z12Pub_Sub_DataPcPhjh+0x13e8>
   13b8e:	3c 01       	movw	r6, r24
   13b90:	23 5f       	subi	r18, 0xF3	; 243
   13b92:	3f 4f       	sbci	r19, 0xFF	; 255
   13b94:	86 e0       	ldi	r24, 0x06	; 6
   13b96:	e8 16       	cp	r14, r24
   13b98:	f1 04       	cpc	r15, r1
   13b9a:	09 f0       	breq	.+2      	; 0x13b9e <_Z12Pub_Sub_DataPcPhjh+0x13e6>
   13b9c:	2d cf       	rjmp	.-422    	; 0x139f8 <_Z12Pub_Sub_DataPcPhjh+0x1240>
   13b9e:	ef cf       	rjmp	.-34     	; 0x13b7e <_Z12Pub_Sub_DataPcPhjh+0x13c6>
   13ba0:	86 ec       	ldi	r24, 0xC6	; 198
   13ba2:	94 e1       	ldi	r25, 0x14	; 20
   13ba4:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   13ba8:	66 eb       	ldi	r22, 0xB6	; 182
   13baa:	75 e3       	ldi	r23, 0x35	; 53
   13bac:	86 ec       	ldi	r24, 0xC6	; 198
   13bae:	94 e1       	ldi	r25, 0x14	; 20
   13bb0:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13bb4:	86 ec       	ldi	r24, 0xC6	; 198
   13bb6:	94 e1       	ldi	r25, 0x14	; 20
   13bb8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13bbc:	b7 01       	movw	r22, r14
   13bbe:	6a 5e       	subi	r22, 0xEA	; 234
   13bc0:	73 4f       	sbci	r23, 0xF3	; 243
   13bc2:	86 ec       	ldi	r24, 0xC6	; 198
   13bc4:	94 e1       	ldi	r25, 0x14	; 20
   13bc6:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   13bca:	86 ec       	ldi	r24, 0xC6	; 198
   13bcc:	94 e1       	ldi	r25, 0x14	; 20
   13bce:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13bd2:	ad e0       	ldi	r26, 0x0D	; 13
   13bd4:	ea 0e       	add	r14, r26
   13bd6:	f1 1c       	adc	r15, r1
   13bd8:	be e4       	ldi	r27, 0x4E	; 78
   13bda:	eb 16       	cp	r14, r27
   13bdc:	f1 04       	cpc	r15, r1
   13bde:	01 f7       	brne	.-64     	; 0x13ba0 <_Z12Pub_Sub_DataPcPhjh+0x13e8>
   13be0:	c2 c0       	rjmp	.+388    	; 0x13d66 <_Z12Pub_Sub_DataPcPhjh+0x15ae>
   13be2:	91 30       	cpi	r25, 0x01	; 1
   13be4:	51 f4       	brne	.+20     	; 0x13bfa <_Z12Pub_Sub_DataPcPhjh+0x1442>
   13be6:	61 ea       	ldi	r22, 0xA1	; 161
   13be8:	75 e3       	ldi	r23, 0x35	; 53
   13bea:	86 ec       	ldi	r24, 0xC6	; 198
   13bec:	94 e1       	ldi	r25, 0x14	; 20
   13bee:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13bf2:	86 ec       	ldi	r24, 0xC6	; 198
   13bf4:	94 e1       	ldi	r25, 0x14	; 20
   13bf6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13bfa:	68 e9       	ldi	r22, 0x98	; 152
   13bfc:	75 e3       	ldi	r23, 0x35	; 53
   13bfe:	c2 01       	movw	r24, r4
   13c00:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c04:	90 e0       	ldi	r25, 0x00	; 0
   13c06:	01 97       	sbiw	r24, 0x01	; 1
   13c08:	26 e0       	ldi	r18, 0x06	; 6
   13c0a:	28 9f       	mul	r18, r24
   13c0c:	f0 01       	movw	r30, r0
   13c0e:	29 9f       	mul	r18, r25
   13c10:	f0 0d       	add	r31, r0
   13c12:	11 24       	eor	r1, r1
   13c14:	e2 5b       	subi	r30, 0xB2	; 178
   13c16:	f2 4f       	sbci	r31, 0xF2	; 242
   13c18:	10 82       	st	Z, r1
   13c1a:	e1 e0       	ldi	r30, 0x01	; 1
   13c1c:	c0 55       	subi	r28, 0x50	; 80
   13c1e:	d9 4f       	sbci	r29, 0xF9	; 249
   13c20:	e8 83       	st	Y, r30
   13c22:	c0 5b       	subi	r28, 0xB0	; 176
   13c24:	d6 40       	sbci	r29, 0x06	; 6
   13c26:	ac c0       	rjmp	.+344    	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13c28:	91 30       	cpi	r25, 0x01	; 1
   13c2a:	51 f4       	brne	.+20     	; 0x13c40 <_Z12Pub_Sub_DataPcPhjh+0x1488>
   13c2c:	6a e7       	ldi	r22, 0x7A	; 122
   13c2e:	75 e3       	ldi	r23, 0x35	; 53
   13c30:	86 ec       	ldi	r24, 0xC6	; 198
   13c32:	94 e1       	ldi	r25, 0x14	; 20
   13c34:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13c38:	86 ec       	ldi	r24, 0xC6	; 198
   13c3a:	94 e1       	ldi	r25, 0x14	; 20
   13c3c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13c40:	60 e7       	ldi	r22, 0x70	; 112
   13c42:	75 e3       	ldi	r23, 0x35	; 53
   13c44:	c2 01       	movw	r24, r4
   13c46:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c4a:	0e 94 35 33 	call	0x666a	; 0x666a <_Z15Delete_Scheduleh>
   13c4e:	f1 e0       	ldi	r31, 0x01	; 1
   13c50:	c0 55       	subi	r28, 0x50	; 80
   13c52:	d9 4f       	sbci	r29, 0xF9	; 249
   13c54:	f8 83       	st	Y, r31
   13c56:	c0 5b       	subi	r28, 0xB0	; 176
   13c58:	d6 40       	sbci	r29, 0x06	; 6
   13c5a:	92 c0       	rjmp	.+292    	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13c5c:	91 30       	cpi	r25, 0x01	; 1
   13c5e:	51 f4       	brne	.+20     	; 0x13c74 <_Z12Pub_Sub_DataPcPhjh+0x14bc>
   13c60:	65 e5       	ldi	r22, 0x55	; 85
   13c62:	75 e3       	ldi	r23, 0x35	; 53
   13c64:	86 ec       	ldi	r24, 0xC6	; 198
   13c66:	94 e1       	ldi	r25, 0x14	; 20
   13c68:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13c6c:	86 ec       	ldi	r24, 0xC6	; 198
   13c6e:	94 e1       	ldi	r25, 0x14	; 20
   13c70:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13c74:	6c e4       	ldi	r22, 0x4C	; 76
   13c76:	75 e3       	ldi	r23, 0x35	; 53
   13c78:	c2 01       	movw	r24, r4
   13c7a:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c7e:	85 56       	subi	r24, 0x65	; 101
   13c80:	2b e1       	ldi	r18, 0x1B	; 27
   13c82:	82 9f       	mul	r24, r18
   13c84:	f0 01       	movw	r30, r0
   13c86:	11 24       	eor	r1, r1
   13c88:	e8 51       	subi	r30, 0x18	; 24
   13c8a:	f2 4f       	sbci	r31, 0xF2	; 242
   13c8c:	11 8e       	std	Z+25, r1	; 0x19
   13c8e:	11 82       	std	Z+1, r1	; 0x01
   13c90:	13 8a       	std	Z+19, r1	; 0x13
   13c92:	12 8a       	std	Z+18, r1	; 0x12
   13c94:	15 8a       	std	Z+21, r1	; 0x15
   13c96:	14 8a       	std	Z+20, r1	; 0x14
   13c98:	17 8a       	std	Z+23, r1	; 0x17
   13c9a:	16 8a       	std	Z+22, r1	; 0x16
   13c9c:	15 86       	std	Z+13, r1	; 0x0d
   13c9e:	14 86       	std	Z+12, r1	; 0x0c
   13ca0:	17 86       	std	Z+15, r1	; 0x0f
   13ca2:	16 86       	std	Z+14, r1	; 0x0e
   13ca4:	10 82       	st	Z, r1
   13ca6:	12 86       	std	Z+10, r1	; 0x0a
   13ca8:	12 8e       	std	Z+26, r1	; 0x1a
   13caa:	14 82       	std	Z+4, r1	; 0x04
   13cac:	13 82       	std	Z+3, r1	; 0x03
   13cae:	10 8e       	std	Z+24, r1	; 0x18
   13cb0:	13 86       	std	Z+11, r1	; 0x0b
   13cb2:	12 82       	std	Z+2, r1	; 0x02
   13cb4:	31 e0       	ldi	r19, 0x01	; 1
   13cb6:	c0 55       	subi	r28, 0x50	; 80
   13cb8:	d9 4f       	sbci	r29, 0xF9	; 249
   13cba:	38 83       	st	Y, r19
   13cbc:	c0 5b       	subi	r28, 0xB0	; 176
   13cbe:	d6 40       	sbci	r29, 0x06	; 6
   13cc0:	5f c0       	rjmp	.+190    	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13cc2:	91 30       	cpi	r25, 0x01	; 1
   13cc4:	51 f4       	brne	.+20     	; 0x13cda <_Z12Pub_Sub_DataPcPhjh+0x1522>
   13cc6:	64 e3       	ldi	r22, 0x34	; 52
   13cc8:	75 e3       	ldi	r23, 0x35	; 53
   13cca:	86 ec       	ldi	r24, 0xC6	; 198
   13ccc:	94 e1       	ldi	r25, 0x14	; 20
   13cce:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13cd2:	86 ec       	ldi	r24, 0xC6	; 198
   13cd4:	94 e1       	ldi	r25, 0x14	; 20
   13cd6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13cda:	81 e0       	ldi	r24, 0x01	; 1
   13cdc:	80 93 e5 0b 	sts	0x0BE5, r24	; 0x800be5 <_sSchedules+0x2c7>
   13ce0:	0e 94 17 87 	call	0x10e2e	; 0x10e2e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   13ce4:	41 e0       	ldi	r20, 0x01	; 1
   13ce6:	c0 55       	subi	r28, 0x50	; 80
   13ce8:	d9 4f       	sbci	r29, 0xF9	; 249
   13cea:	48 83       	st	Y, r20
   13cec:	c0 5b       	subi	r28, 0xB0	; 176
   13cee:	d6 40       	sbci	r29, 0x06	; 6
   13cf0:	47 c0       	rjmp	.+142    	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13cf2:	91 30       	cpi	r25, 0x01	; 1
   13cf4:	51 f4       	brne	.+20     	; 0x13d0a <_Z12Pub_Sub_DataPcPhjh+0x1552>
   13cf6:	6b e1       	ldi	r22, 0x1B	; 27
   13cf8:	75 e3       	ldi	r23, 0x35	; 53
   13cfa:	86 ec       	ldi	r24, 0xC6	; 198
   13cfc:	94 e1       	ldi	r25, 0x14	; 20
   13cfe:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13d02:	86 ec       	ldi	r24, 0xC6	; 198
   13d04:	94 e1       	ldi	r25, 0x14	; 20
   13d06:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13d0a:	10 92 e5 0b 	sts	0x0BE5, r1	; 0x800be5 <_sSchedules+0x2c7>
   13d0e:	0e 94 17 87 	call	0x10e2e	; 0x10e2e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   13d12:	51 e0       	ldi	r21, 0x01	; 1
   13d14:	c0 55       	subi	r28, 0x50	; 80
   13d16:	d9 4f       	sbci	r29, 0xF9	; 249
   13d18:	58 83       	st	Y, r21
   13d1a:	c0 5b       	subi	r28, 0xB0	; 176
   13d1c:	d6 40       	sbci	r29, 0x06	; 6
   13d1e:	30 c0       	rjmp	.+96     	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13d20:	91 30       	cpi	r25, 0x01	; 1
   13d22:	51 f4       	brne	.+20     	; 0x13d38 <_Z12Pub_Sub_DataPcPhjh+0x1580>
   13d24:	67 e0       	ldi	r22, 0x07	; 7
   13d26:	75 e3       	ldi	r23, 0x35	; 53
   13d28:	86 ec       	ldi	r24, 0xC6	; 198
   13d2a:	94 e1       	ldi	r25, 0x14	; 20
   13d2c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13d30:	86 ec       	ldi	r24, 0xC6	; 198
   13d32:	94 e1       	ldi	r25, 0x14	; 20
   13d34:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13d38:	81 e0       	ldi	r24, 0x01	; 1
   13d3a:	80 93 a2 14 	sts	0x14A2, r24	; 0x8014a2 <_sRuble_Parameters+0xf4>
   13d3e:	c0 55       	subi	r28, 0x50	; 80
   13d40:	d9 4f       	sbci	r29, 0xF9	; 249
   13d42:	88 83       	st	Y, r24
   13d44:	c0 5b       	subi	r28, 0xB0	; 176
   13d46:	d6 40       	sbci	r29, 0x06	; 6
   13d48:	1b c0       	rjmp	.+54     	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13d4a:	91 30       	cpi	r25, 0x01	; 1
   13d4c:	51 f4       	brne	.+20     	; 0x13d62 <_Z12Pub_Sub_DataPcPhjh+0x15aa>
   13d4e:	6c ee       	ldi	r22, 0xEC	; 236
   13d50:	74 e3       	ldi	r23, 0x34	; 52
   13d52:	86 ec       	ldi	r24, 0xC6	; 198
   13d54:	94 e1       	ldi	r25, 0x14	; 20
   13d56:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13d5a:	86 ec       	ldi	r24, 0xC6	; 198
   13d5c:	94 e1       	ldi	r25, 0x14	; 20
   13d5e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13d62:	10 92 a2 14 	sts	0x14A2, r1	; 0x8014a2 <_sRuble_Parameters+0xf4>
   13d66:	91 e0       	ldi	r25, 0x01	; 1
   13d68:	c0 55       	subi	r28, 0x50	; 80
   13d6a:	d9 4f       	sbci	r29, 0xF9	; 249
   13d6c:	98 83       	st	Y, r25
   13d6e:	c0 5b       	subi	r28, 0xB0	; 176
   13d70:	d6 40       	sbci	r29, 0x06	; 6
   13d72:	06 c0       	rjmp	.+12     	; 0x13d80 <_Z12Pub_Sub_DataPcPhjh+0x15c8>
   13d74:	a1 e0       	ldi	r26, 0x01	; 1
   13d76:	c0 55       	subi	r28, 0x50	; 80
   13d78:	d9 4f       	sbci	r29, 0xF9	; 249
   13d7a:	a8 83       	st	Y, r26
   13d7c:	c0 5b       	subi	r28, 0xB0	; 176
   13d7e:	d6 40       	sbci	r29, 0x06	; 6
   13d80:	88 e2       	ldi	r24, 0x28	; 40
   13d82:	f8 01       	movw	r30, r16
   13d84:	11 92       	st	Z+, r1
   13d86:	8a 95       	dec	r24
   13d88:	e9 f7       	brne	.-6      	; 0x13d84 <_Z12Pub_Sub_DataPcPhjh+0x15cc>
   13d8a:	8e ec       	ldi	r24, 0xCE	; 206
   13d8c:	93 e1       	ldi	r25, 0x13	; 19
   13d8e:	9f 93       	push	r25
   13d90:	8f 93       	push	r24
   13d92:	89 e0       	ldi	r24, 0x09	; 9
   13d94:	96 e0       	ldi	r25, 0x06	; 6
   13d96:	9f 93       	push	r25
   13d98:	8f 93       	push	r24
   13d9a:	1f 93       	push	r17
   13d9c:	0f 93       	push	r16
   13d9e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   13da2:	ca 54       	subi	r28, 0x4A	; 74
   13da4:	d9 4f       	sbci	r29, 0xF9	; 249
   13da6:	68 81       	ld	r22, Y
   13da8:	79 81       	ldd	r23, Y+1	; 0x01
   13daa:	c6 5b       	subi	r28, 0xB6	; 182
   13dac:	d6 40       	sbci	r29, 0x06	; 6
   13dae:	c8 01       	movw	r24, r16
   13db0:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   13db4:	0f 90       	pop	r0
   13db6:	0f 90       	pop	r0
   13db8:	0f 90       	pop	r0
   13dba:	0f 90       	pop	r0
   13dbc:	0f 90       	pop	r0
   13dbe:	0f 90       	pop	r0
   13dc0:	89 2b       	or	r24, r25
   13dc2:	09 f0       	breq	.+2      	; 0x13dc6 <_Z12Pub_Sub_DataPcPhjh+0x160e>
   13dc4:	73 c0       	rjmp	.+230    	; 0x13eac <_Z12Pub_Sub_DataPcPhjh+0x16f4>
   13dc6:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   13dca:	8b e0       	ldi	r24, 0x0B	; 11
   13dcc:	e4 ec       	ldi	r30, 0xC4	; 196
   13dce:	fd e0       	ldi	r31, 0x0D	; 13
   13dd0:	df 01       	movw	r26, r30
   13dd2:	28 2f       	mov	r18, r24
   13dd4:	1d 92       	st	X+, r1
   13dd6:	2a 95       	dec	r18
   13dd8:	e9 f7       	brne	.-6      	; 0x13dd4 <_Z12Pub_Sub_DataPcPhjh+0x161c>
   13dda:	e9 eb       	ldi	r30, 0xB9	; 185
   13ddc:	fd e0       	ldi	r31, 0x0D	; 13
   13dde:	df 01       	movw	r26, r30
   13de0:	1d 92       	st	X+, r1
   13de2:	8a 95       	dec	r24
   13de4:	e9 f7       	brne	.-6      	; 0x13de0 <_Z12Pub_Sub_DataPcPhjh+0x1628>
   13de6:	6f ed       	ldi	r22, 0xDF	; 223
   13de8:	74 e3       	ldi	r23, 0x34	; 52
   13dea:	c2 01       	movw	r24, r4
   13dec:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13df0:	bc 01       	movw	r22, r24
   13df2:	84 ec       	ldi	r24, 0xC4	; 196
   13df4:	9d e0       	ldi	r25, 0x0D	; 13
   13df6:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   13dfa:	62 ed       	ldi	r22, 0xD2	; 210
   13dfc:	74 e3       	ldi	r23, 0x34	; 52
   13dfe:	c2 01       	movw	r24, r4
   13e00:	0e 94 d7 8d 	call	0x11bae	; 0x11bae <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e04:	bc 01       	movw	r22, r24
   13e06:	89 eb       	ldi	r24, 0xB9	; 185
   13e08:	9d e0       	ldi	r25, 0x0D	; 13
   13e0a:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   13e0e:	6e ec       	ldi	r22, 0xCE	; 206
   13e10:	74 e3       	ldi	r23, 0x34	; 52
   13e12:	c2 01       	movw	r24, r4
   13e14:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e18:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13e1c:	81 30       	cpi	r24, 0x01	; 1
   13e1e:	f9 f4       	brne	.+62     	; 0x13e5e <_Z12Pub_Sub_DataPcPhjh+0x16a6>
   13e20:	91 30       	cpi	r25, 0x01	; 1
   13e22:	51 f4       	brne	.+20     	; 0x13e38 <_Z12Pub_Sub_DataPcPhjh+0x1680>
   13e24:	61 ec       	ldi	r22, 0xC1	; 193
   13e26:	74 e3       	ldi	r23, 0x34	; 52
   13e28:	86 ec       	ldi	r24, 0xC6	; 198
   13e2a:	94 e1       	ldi	r25, 0x14	; 20
   13e2c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   13e30:	86 ec       	ldi	r24, 0xC6	; 198
   13e32:	94 e1       	ldi	r25, 0x14	; 20
   13e34:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13e38:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   13e3c:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   13e40:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   13e44:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   13e48:	a0 68       	ori	r26, 0x80	; 128
   13e4a:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   13e4e:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   13e52:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   13e56:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   13e5a:	88 e0       	ldi	r24, 0x08	; 8
   13e5c:	0d c0       	rjmp	.+26     	; 0x13e78 <_Z12Pub_Sub_DataPcPhjh+0x16c0>
   13e5e:	91 30       	cpi	r25, 0x01	; 1
   13e60:	51 f4       	brne	.+20     	; 0x13e76 <_Z12Pub_Sub_DataPcPhjh+0x16be>
   13e62:	63 eb       	ldi	r22, 0xB3	; 179
   13e64:	74 e3       	ldi	r23, 0x34	; 52
   13e66:	86 ec       	ldi	r24, 0xC6	; 198
   13e68:	94 e1       	ldi	r25, 0x14	; 20
   13e6a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   13e6e:	86 ec       	ldi	r24, 0xC6	; 198
   13e70:	94 e1       	ldi	r25, 0x14	; 20
   13e72:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13e76:	89 e0       	ldi	r24, 0x09	; 9
   13e78:	80 93 69 14 	sts	0x1469, r24	; 0x801469 <_sRuble_Parameters+0xbb>
   13e7c:	69 e6       	ldi	r22, 0x69	; 105
   13e7e:	74 e1       	ldi	r23, 0x14	; 20
   13e80:	88 e1       	ldi	r24, 0x18	; 24
   13e82:	95 e0       	ldi	r25, 0x05	; 5
   13e84:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   13e88:	69 eb       	ldi	r22, 0xB9	; 185
   13e8a:	7d e0       	ldi	r23, 0x0D	; 13
   13e8c:	8a ed       	ldi	r24, 0xDA	; 218
   13e8e:	94 e0       	ldi	r25, 0x04	; 4
   13e90:	0e 94 8d 86 	call	0x10d1a	; 0x10d1a <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   13e94:	64 ec       	ldi	r22, 0xC4	; 196
   13e96:	7d e0       	ldi	r23, 0x0D	; 13
   13e98:	87 ee       	ldi	r24, 0xE7	; 231
   13e9a:	94 e0       	ldi	r25, 0x04	; 4
   13e9c:	0e 94 8d 86 	call	0x10d1a	; 0x10d1a <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   13ea0:	b1 e0       	ldi	r27, 0x01	; 1
   13ea2:	c0 55       	subi	r28, 0x50	; 80
   13ea4:	d9 4f       	sbci	r29, 0xF9	; 249
   13ea6:	b8 83       	st	Y, r27
   13ea8:	c0 5b       	subi	r28, 0xB0	; 176
   13eaa:	d6 40       	sbci	r29, 0x06	; 6
   13eac:	88 e2       	ldi	r24, 0x28	; 40
   13eae:	f8 01       	movw	r30, r16
   13eb0:	11 92       	st	Z+, r1
   13eb2:	8a 95       	dec	r24
   13eb4:	e9 f7       	brne	.-6      	; 0x13eb0 <_Z12Pub_Sub_DataPcPhjh+0x16f8>
   13eb6:	8e ec       	ldi	r24, 0xCE	; 206
   13eb8:	93 e1       	ldi	r25, 0x13	; 19
   13eba:	9f 93       	push	r25
   13ebc:	8f 93       	push	r24
   13ebe:	82 e3       	ldi	r24, 0x32	; 50
   13ec0:	96 e0       	ldi	r25, 0x06	; 6
   13ec2:	9f 93       	push	r25
   13ec4:	8f 93       	push	r24
   13ec6:	1f 93       	push	r17
   13ec8:	0f 93       	push	r16
   13eca:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   13ece:	ca 54       	subi	r28, 0x4A	; 74
   13ed0:	d9 4f       	sbci	r29, 0xF9	; 249
   13ed2:	68 81       	ld	r22, Y
   13ed4:	79 81       	ldd	r23, Y+1	; 0x01
   13ed6:	c6 5b       	subi	r28, 0xB6	; 182
   13ed8:	d6 40       	sbci	r29, 0x06	; 6
   13eda:	c8 01       	movw	r24, r16
   13edc:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   13ee0:	0f 90       	pop	r0
   13ee2:	0f 90       	pop	r0
   13ee4:	0f 90       	pop	r0
   13ee6:	0f 90       	pop	r0
   13ee8:	0f 90       	pop	r0
   13eea:	0f 90       	pop	r0
   13eec:	89 2b       	or	r24, r25
   13eee:	09 f0       	breq	.+2      	; 0x13ef2 <_Z12Pub_Sub_DataPcPhjh+0x173a>
   13ef0:	53 c1       	rjmp	.+678    	; 0x14198 <_Z12Pub_Sub_DataPcPhjh+0x19e0>
   13ef2:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   13ef6:	86 34       	cpi	r24, 0x46	; 70
   13ef8:	10 f4       	brcc	.+4      	; 0x13efe <_Z12Pub_Sub_DataPcPhjh+0x1746>
   13efa:	0c 94 0a 95 	jmp	0x12a14	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   13efe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   13f02:	81 30       	cpi	r24, 0x01	; 1
   13f04:	51 f4       	brne	.+20     	; 0x13f1a <_Z12Pub_Sub_DataPcPhjh+0x1762>
   13f06:	61 e9       	ldi	r22, 0x91	; 145
   13f08:	74 e3       	ldi	r23, 0x34	; 52
   13f0a:	86 ec       	ldi	r24, 0xC6	; 198
   13f0c:	94 e1       	ldi	r25, 0x14	; 20
   13f0e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   13f12:	86 ec       	ldi	r24, 0xC6	; 198
   13f14:	94 e1       	ldi	r25, 0x14	; 20
   13f16:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   13f1a:	6d e8       	ldi	r22, 0x8D	; 141
   13f1c:	74 e3       	ldi	r23, 0x34	; 52
   13f1e:	c2 01       	movw	r24, r4
   13f20:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13f24:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
   13f28:	81 e0       	ldi	r24, 0x01	; 1
   13f2a:	80 93 99 0b 	sts	0x0B99, r24	; 0x800b99 <_sSchedules+0x27b>
   13f2e:	10 92 92 0b 	sts	0x0B92, r1	; 0x800b92 <_sSchedules+0x274>
   13f32:	80 93 94 0b 	sts	0x0B94, r24	; 0x800b94 <_sSchedules+0x276>
   13f36:	10 92 e7 0b 	sts	0x0BE7, r1	; 0x800be7 <_sSchedules+0x2c9>
   13f3a:	68 e8       	ldi	r22, 0x88	; 136
   13f3c:	74 e3       	ldi	r23, 0x34	; 52
   13f3e:	c2 01       	movw	r24, r4
   13f40:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13f44:	60 e0       	ldi	r22, 0x00	; 0
   13f46:	70 e0       	ldi	r23, 0x00	; 0
   13f48:	0e 94 aa 89 	call	0x11354	; 0x11354 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13f4c:	60 93 95 0b 	sts	0x0B95, r22	; 0x800b95 <_sSchedules+0x277>
   13f50:	70 93 96 0b 	sts	0x0B96, r23	; 0x800b96 <_sSchedules+0x278>
   13f54:	80 93 97 0b 	sts	0x0B97, r24	; 0x800b97 <_sSchedules+0x279>
   13f58:	90 93 98 0b 	sts	0x0B98, r25	; 0x800b98 <_sSchedules+0x27a>
   13f5c:	60 91 95 0b 	lds	r22, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   13f60:	70 91 96 0b 	lds	r23, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   13f64:	80 91 97 0b 	lds	r24, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   13f68:	90 91 98 0b 	lds	r25, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   13f6c:	20 91 95 0b 	lds	r18, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   13f70:	30 91 96 0b 	lds	r19, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   13f74:	40 91 97 0b 	lds	r20, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   13f78:	50 91 98 0b 	lds	r21, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   13f7c:	c0 55       	subi	r28, 0x50	; 80
   13f7e:	d9 4f       	sbci	r29, 0xF9	; 249
   13f80:	28 83       	st	Y, r18
   13f82:	39 83       	std	Y+1, r19	; 0x01
   13f84:	4a 83       	std	Y+2, r20	; 0x02
   13f86:	5b 83       	std	Y+3, r21	; 0x03
   13f88:	c0 5b       	subi	r28, 0xB0	; 176
   13f8a:	d6 40       	sbci	r29, 0x06	; 6
   13f8c:	e4 e6       	ldi	r30, 0x64	; 100
   13f8e:	ce 2e       	mov	r12, r30
   13f90:	d1 2c       	mov	r13, r1
   13f92:	e1 2c       	mov	r14, r1
   13f94:	f1 2c       	mov	r15, r1
   13f96:	a7 01       	movw	r20, r14
   13f98:	96 01       	movw	r18, r12
   13f9a:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   13f9e:	a0 e1       	ldi	r26, 0x10	; 16
   13fa0:	be e0       	ldi	r27, 0x0E	; 14
   13fa2:	0e 94 d2 eb 	call	0x1d7a4	; 0x1d7a4 <__muluhisi3>
   13fa6:	4b 01       	movw	r8, r22
   13fa8:	5c 01       	movw	r10, r24
   13faa:	c0 55       	subi	r28, 0x50	; 80
   13fac:	d9 4f       	sbci	r29, 0xF9	; 249
   13fae:	68 81       	ld	r22, Y
   13fb0:	79 81       	ldd	r23, Y+1	; 0x01
   13fb2:	8a 81       	ldd	r24, Y+2	; 0x02
   13fb4:	9b 81       	ldd	r25, Y+3	; 0x03
   13fb6:	c0 5b       	subi	r28, 0xB0	; 176
   13fb8:	d6 40       	sbci	r29, 0x06	; 6
   13fba:	a7 01       	movw	r20, r14
   13fbc:	96 01       	movw	r18, r12
   13fbe:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   13fc2:	9b 01       	movw	r18, r22
   13fc4:	ac 01       	movw	r20, r24
   13fc6:	ac e3       	ldi	r26, 0x3C	; 60
   13fc8:	b0 e0       	ldi	r27, 0x00	; 0
   13fca:	0e 94 d2 eb 	call	0x1d7a4	; 0x1d7a4 <__muluhisi3>
   13fce:	86 0e       	add	r8, r22
   13fd0:	97 1e       	adc	r9, r23
   13fd2:	a8 1e       	adc	r10, r24
   13fd4:	b9 1e       	adc	r11, r25
   13fd6:	80 92 95 0b 	sts	0x0B95, r8	; 0x800b95 <_sSchedules+0x277>
   13fda:	90 92 96 0b 	sts	0x0B96, r9	; 0x800b96 <_sSchedules+0x278>
   13fde:	a0 92 97 0b 	sts	0x0B97, r10	; 0x800b97 <_sSchedules+0x279>
   13fe2:	b0 92 98 0b 	sts	0x0B98, r11	; 0x800b98 <_sSchedules+0x27a>
   13fe6:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   13fea:	80 93 f1 0b 	sts	0x0BF1, r24	; 0x800bf1 <_sSchedules+0x2d3>
   13fee:	62 e8       	ldi	r22, 0x82	; 130
   13ff0:	74 e3       	ldi	r23, 0x34	; 52
   13ff2:	c2 01       	movw	r24, r4
   13ff4:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ff8:	60 e0       	ldi	r22, 0x00	; 0
   13ffa:	70 e0       	ldi	r23, 0x00	; 0
   13ffc:	0e 94 a7 8e 	call	0x11d4e	; 0x11d4e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14000:	80 93 f3 0b 	sts	0x0BF3, r24	; 0x800bf3 <_sSchedules+0x2d5>
   14004:	e1 2c       	mov	r14, r1
   14006:	f1 2c       	mov	r15, r1
   14008:	67 01       	movw	r12, r14
   1400a:	4f ef       	ldi	r20, 0xFF	; 255
   1400c:	c4 1a       	sub	r12, r20
   1400e:	d4 0a       	sbc	r13, r20
   14010:	6c e7       	ldi	r22, 0x7C	; 124
   14012:	74 e3       	ldi	r23, 0x34	; 52
   14014:	c2 01       	movw	r24, r4
   14016:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1401a:	b6 01       	movw	r22, r12
   1401c:	0e 94 a7 8e 	call	0x11d4e	; 0x11d4e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14020:	d7 01       	movw	r26, r14
   14022:	a9 53       	subi	r26, 0x39	; 57
   14024:	b4 4f       	sbci	r27, 0xF4	; 244
   14026:	7d 01       	movw	r14, r26
   14028:	8c 93       	st	X, r24
   1402a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1402e:	81 30       	cpi	r24, 0x01	; 1
   14030:	89 f0       	breq	.+34     	; 0x14054 <_Z12Pub_Sub_DataPcPhjh+0x189c>
   14032:	76 01       	movw	r14, r12
   14034:	3d e0       	ldi	r19, 0x0D	; 13
   14036:	c3 16       	cp	r12, r19
   14038:	d1 04       	cpc	r13, r1
   1403a:	31 f7       	brne	.-52     	; 0x14008 <_Z12Pub_Sub_DataPcPhjh+0x1850>
   1403c:	e1 2c       	mov	r14, r1
   1403e:	f1 2c       	mov	r15, r1
   14040:	54 e6       	ldi	r21, 0x64	; 100
   14042:	a5 2e       	mov	r10, r21
   14044:	b1 2c       	mov	r11, r1
   14046:	60 e1       	ldi	r22, 0x10	; 16
   14048:	86 2e       	mov	r8, r22
   1404a:	6e e0       	ldi	r22, 0x0E	; 14
   1404c:	96 2e       	mov	r9, r22
   1404e:	7c e3       	ldi	r23, 0x3C	; 60
   14050:	77 2e       	mov	r7, r23
   14052:	13 c0       	rjmp	.+38     	; 0x1407a <_Z12Pub_Sub_DataPcPhjh+0x18c2>
   14054:	62 e7       	ldi	r22, 0x72	; 114
   14056:	74 e3       	ldi	r23, 0x34	; 52
   14058:	86 ec       	ldi	r24, 0xC6	; 198
   1405a:	94 e1       	ldi	r25, 0x14	; 20
   1405c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   14060:	f7 01       	movw	r30, r14
   14062:	60 81       	ld	r22, Z
   14064:	4a e0       	ldi	r20, 0x0A	; 10
   14066:	50 e0       	ldi	r21, 0x00	; 0
   14068:	86 ec       	ldi	r24, 0xC6	; 198
   1406a:	94 e1       	ldi	r25, 0x14	; 20
   1406c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   14070:	86 ec       	ldi	r24, 0xC6	; 198
   14072:	94 e1       	ldi	r25, 0x14	; 20
   14074:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14078:	dc cf       	rjmp	.-72     	; 0x14032 <_Z12Pub_Sub_DataPcPhjh+0x187a>
   1407a:	67 01       	movw	r12, r14
   1407c:	2f ef       	ldi	r18, 0xFF	; 255
   1407e:	c2 1a       	sub	r12, r18
   14080:	d2 0a       	sbc	r13, r18
   14082:	6d e6       	ldi	r22, 0x6D	; 109
   14084:	74 e3       	ldi	r23, 0x34	; 52
   14086:	c2 01       	movw	r24, r4
   14088:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1408c:	b6 01       	movw	r22, r12
   1408e:	0e 94 56 8e 	call	0x11cac	; 0x11cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14092:	97 01       	movw	r18, r14
   14094:	22 0f       	add	r18, r18
   14096:	33 1f       	adc	r19, r19
   14098:	a9 01       	movw	r20, r18
   1409a:	46 56       	subi	r20, 0x66	; 102
   1409c:	54 4f       	sbci	r21, 0xF4	; 244
   1409e:	7a 01       	movw	r14, r20
   140a0:	da 01       	movw	r26, r20
   140a2:	11 96       	adiw	r26, 0x01	; 1
   140a4:	9c 93       	st	X, r25
   140a6:	8e 93       	st	-X, r24
   140a8:	8d 91       	ld	r24, X+
   140aa:	9c 91       	ld	r25, X
   140ac:	11 97       	sbiw	r26, 0x01	; 1
   140ae:	2d 91       	ld	r18, X+
   140b0:	3c 91       	ld	r19, X
   140b2:	b5 01       	movw	r22, r10
   140b4:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   140b8:	68 9d       	mul	r22, r8
   140ba:	f0 01       	movw	r30, r0
   140bc:	69 9d       	mul	r22, r9
   140be:	f0 0d       	add	r31, r0
   140c0:	78 9d       	mul	r23, r8
   140c2:	f0 0d       	add	r31, r0
   140c4:	11 24       	eor	r1, r1
   140c6:	c9 01       	movw	r24, r18
   140c8:	b5 01       	movw	r22, r10
   140ca:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   140ce:	78 9e       	mul	r7, r24
   140d0:	90 01       	movw	r18, r0
   140d2:	79 9e       	mul	r7, r25
   140d4:	30 0d       	add	r19, r0
   140d6:	11 24       	eor	r1, r1
   140d8:	cf 01       	movw	r24, r30
   140da:	82 0f       	add	r24, r18
   140dc:	93 1f       	adc	r25, r19
   140de:	f7 01       	movw	r30, r14
   140e0:	91 83       	std	Z+1, r25	; 0x01
   140e2:	80 83       	st	Z, r24
   140e4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   140e8:	81 30       	cpi	r24, 0x01	; 1
   140ea:	41 f0       	breq	.+16     	; 0x140fc <_Z12Pub_Sub_DataPcPhjh+0x1944>
   140ec:	76 01       	movw	r14, r12
   140ee:	fd e0       	ldi	r31, 0x0D	; 13
   140f0:	cf 16       	cp	r12, r31
   140f2:	d1 04       	cpc	r13, r1
   140f4:	11 f6       	brne	.-124    	; 0x1407a <_Z12Pub_Sub_DataPcPhjh+0x18c2>
   140f6:	e1 2c       	mov	r14, r1
   140f8:	f1 2c       	mov	r15, r1
   140fa:	14 c0       	rjmp	.+40     	; 0x14124 <_Z12Pub_Sub_DataPcPhjh+0x196c>
   140fc:	6b e5       	ldi	r22, 0x5B	; 91
   140fe:	74 e3       	ldi	r23, 0x34	; 52
   14100:	86 ec       	ldi	r24, 0xC6	; 198
   14102:	94 e1       	ldi	r25, 0x14	; 20
   14104:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   14108:	d7 01       	movw	r26, r14
   1410a:	6d 91       	ld	r22, X+
   1410c:	7c 91       	ld	r23, X
   1410e:	4a e0       	ldi	r20, 0x0A	; 10
   14110:	50 e0       	ldi	r21, 0x00	; 0
   14112:	86 ec       	ldi	r24, 0xC6	; 198
   14114:	94 e1       	ldi	r25, 0x14	; 20
   14116:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
   1411a:	86 ec       	ldi	r24, 0xC6	; 198
   1411c:	94 e1       	ldi	r25, 0x14	; 20
   1411e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14122:	e4 cf       	rjmp	.-56     	; 0x140ec <_Z12Pub_Sub_DataPcPhjh+0x1934>
   14124:	67 01       	movw	r12, r14
   14126:	ef ef       	ldi	r30, 0xFF	; 255
   14128:	ce 1a       	sub	r12, r30
   1412a:	de 0a       	sbc	r13, r30
   1412c:	64 e5       	ldi	r22, 0x54	; 84
   1412e:	74 e3       	ldi	r23, 0x34	; 52
   14130:	c2 01       	movw	r24, r4
   14132:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14136:	b6 01       	movw	r22, r12
   14138:	0e 94 a7 8e 	call	0x11d4e	; 0x11d4e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1413c:	97 01       	movw	r18, r14
   1413e:	28 54       	subi	r18, 0x48	; 72
   14140:	34 4f       	sbci	r19, 0xF4	; 244
   14142:	79 01       	movw	r14, r18
   14144:	d9 01       	movw	r26, r18
   14146:	8c 93       	st	X, r24
   14148:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1414c:	81 30       	cpi	r24, 0x01	; 1
   1414e:	89 f0       	breq	.+34     	; 0x14172 <_Z12Pub_Sub_DataPcPhjh+0x19ba>
   14150:	76 01       	movw	r14, r12
   14152:	bd e0       	ldi	r27, 0x0D	; 13
   14154:	cb 16       	cp	r12, r27
   14156:	d1 04       	cpc	r13, r1
   14158:	29 f7       	brne	.-54     	; 0x14124 <_Z12Pub_Sub_DataPcPhjh+0x196c>
   1415a:	81 e0       	ldi	r24, 0x01	; 1
   1415c:	80 93 e6 0c 	sts	0x0CE6, r24	; 0x800ce6 <plot_schedule_topic>
   14160:	10 92 e7 0c 	sts	0x0CE7, r1	; 0x800ce7 <_gTank_Topic_check>
   14164:	f1 e0       	ldi	r31, 0x01	; 1
   14166:	c0 55       	subi	r28, 0x50	; 80
   14168:	d9 4f       	sbci	r29, 0xF9	; 249
   1416a:	f8 83       	st	Y, r31
   1416c:	c0 5b       	subi	r28, 0xB0	; 176
   1416e:	d6 40       	sbci	r29, 0x06	; 6
   14170:	13 c0       	rjmp	.+38     	; 0x14198 <_Z12Pub_Sub_DataPcPhjh+0x19e0>
   14172:	69 e4       	ldi	r22, 0x49	; 73
   14174:	74 e3       	ldi	r23, 0x34	; 52
   14176:	86 ec       	ldi	r24, 0xC6	; 198
   14178:	94 e1       	ldi	r25, 0x14	; 20
   1417a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1417e:	f7 01       	movw	r30, r14
   14180:	60 81       	ld	r22, Z
   14182:	4a e0       	ldi	r20, 0x0A	; 10
   14184:	50 e0       	ldi	r21, 0x00	; 0
   14186:	86 ec       	ldi	r24, 0xC6	; 198
   14188:	94 e1       	ldi	r25, 0x14	; 20
   1418a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1418e:	86 ec       	ldi	r24, 0xC6	; 198
   14190:	94 e1       	ldi	r25, 0x14	; 20
   14192:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14196:	dc cf       	rjmp	.-72     	; 0x14150 <_Z12Pub_Sub_DataPcPhjh+0x1998>
   14198:	88 e2       	ldi	r24, 0x28	; 40
   1419a:	d8 01       	movw	r26, r16
   1419c:	1d 92       	st	X+, r1
   1419e:	8a 95       	dec	r24
   141a0:	e9 f7       	brne	.-6      	; 0x1419c <_Z12Pub_Sub_DataPcPhjh+0x19e4>
   141a2:	8e ec       	ldi	r24, 0xCE	; 206
   141a4:	93 e1       	ldi	r25, 0x13	; 19
   141a6:	9f 93       	push	r25
   141a8:	8f 93       	push	r24
   141aa:	84 e5       	ldi	r24, 0x54	; 84
   141ac:	96 e0       	ldi	r25, 0x06	; 6
   141ae:	9f 93       	push	r25
   141b0:	8f 93       	push	r24
   141b2:	1f 93       	push	r17
   141b4:	0f 93       	push	r16
   141b6:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   141ba:	ca 54       	subi	r28, 0x4A	; 74
   141bc:	d9 4f       	sbci	r29, 0xF9	; 249
   141be:	68 81       	ld	r22, Y
   141c0:	79 81       	ldd	r23, Y+1	; 0x01
   141c2:	c6 5b       	subi	r28, 0xB6	; 182
   141c4:	d6 40       	sbci	r29, 0x06	; 6
   141c6:	c8 01       	movw	r24, r16
   141c8:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   141cc:	0f 90       	pop	r0
   141ce:	0f 90       	pop	r0
   141d0:	0f 90       	pop	r0
   141d2:	0f 90       	pop	r0
   141d4:	0f 90       	pop	r0
   141d6:	0f 90       	pop	r0
   141d8:	89 2b       	or	r24, r25
   141da:	09 f0       	breq	.+2      	; 0x141de <_Z12Pub_Sub_DataPcPhjh+0x1a26>
   141dc:	cc c2       	rjmp	.+1432   	; 0x14776 <_Z12Pub_Sub_DataPcPhjh+0x1fbe>
   141de:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   141e2:	86 34       	cpi	r24, 0x46	; 70
   141e4:	10 f4       	brcc	.+4      	; 0x141ea <_Z12Pub_Sub_DataPcPhjh+0x1a32>
   141e6:	0c 94 0a 95 	jmp	0x12a14	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   141ea:	80 91 e6 0c 	lds	r24, 0x0CE6	; 0x800ce6 <plot_schedule_topic>
   141ee:	88 23       	and	r24, r24
   141f0:	11 f4       	brne	.+4      	; 0x141f6 <_Z12Pub_Sub_DataPcPhjh+0x1a3e>
   141f2:	0c 94 0a 95 	jmp	0x12a14	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   141f6:	80 91 e7 0c 	lds	r24, 0x0CE7	; 0x800ce7 <_gTank_Topic_check>
   141fa:	83 33       	cpi	r24, 0x33	; 51
   141fc:	10 f0       	brcs	.+4      	; 0x14202 <_Z12Pub_Sub_DataPcPhjh+0x1a4a>
   141fe:	0c 94 0a 95 	jmp	0x12a14	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   14202:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   14206:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1420a:	81 30       	cpi	r24, 0x01	; 1
   1420c:	51 f4       	brne	.+20     	; 0x14222 <_Z12Pub_Sub_DataPcPhjh+0x1a6a>
   1420e:	6b e2       	ldi	r22, 0x2B	; 43
   14210:	74 e3       	ldi	r23, 0x34	; 52
   14212:	86 ec       	ldi	r24, 0xC6	; 198
   14214:	94 e1       	ldi	r25, 0x14	; 20
   14216:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1421a:	86 ec       	ldi	r24, 0xC6	; 198
   1421c:	94 e1       	ldi	r25, 0x14	; 20
   1421e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14222:	81 e0       	ldi	r24, 0x01	; 1
   14224:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <_sSchedules+0x1>
   14228:	80 91 91 0b 	lds	r24, 0x0B91	; 0x800b91 <_sSchedules+0x273>
   1422c:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <_sSchedules>
   14230:	e1 2c       	mov	r14, r1
   14232:	f1 2c       	mov	r15, r1
   14234:	66 e2       	ldi	r22, 0x26	; 38
   14236:	74 e3       	ldi	r23, 0x34	; 52
   14238:	c2 01       	movw	r24, r4
   1423a:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1423e:	b7 01       	movw	r22, r14
   14240:	6d 5f       	subi	r22, 0xFD	; 253
   14242:	7f 4f       	sbci	r23, 0xFF	; 255
   14244:	0e 94 a7 8e 	call	0x11d4e	; 0x11d4e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14248:	f7 01       	movw	r30, r14
   1424a:	e1 59       	subi	r30, 0x91	; 145
   1424c:	f5 4f       	sbci	r31, 0xF5	; 245
   1424e:	80 83       	st	Z, r24
   14250:	bf ef       	ldi	r27, 0xFF	; 255
   14252:	eb 1a       	sub	r14, r27
   14254:	fb 0a       	sbc	r15, r27
   14256:	e7 e2       	ldi	r30, 0x27	; 39
   14258:	ee 16       	cp	r14, r30
   1425a:	f1 04       	cpc	r15, r1
   1425c:	59 f7       	brne	.-42     	; 0x14234 <_Z12Pub_Sub_DataPcPhjh+0x1a7c>
   1425e:	e1 2c       	mov	r14, r1
   14260:	f1 2c       	mov	r15, r1
   14262:	61 e2       	ldi	r22, 0x21	; 33
   14264:	74 e3       	ldi	r23, 0x34	; 52
   14266:	c2 01       	movw	r24, r4
   14268:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1426c:	b7 01       	movw	r22, r14
   1426e:	6d 5f       	subi	r22, 0xFD	; 253
   14270:	7f 4f       	sbci	r23, 0xFF	; 255
   14272:	0e 94 a7 8e 	call	0x11d4e	; 0x11d4e <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14276:	f7 01       	movw	r30, r14
   14278:	e8 56       	subi	r30, 0x68	; 104
   1427a:	f6 4f       	sbci	r31, 0xF6	; 246
   1427c:	80 83       	st	Z, r24
   1427e:	ff ef       	ldi	r31, 0xFF	; 255
   14280:	ef 1a       	sub	r14, r31
   14282:	ff 0a       	sbc	r15, r31
   14284:	27 e2       	ldi	r18, 0x27	; 39
   14286:	e2 16       	cp	r14, r18
   14288:	f1 04       	cpc	r15, r1
   1428a:	59 f7       	brne	.-42     	; 0x14262 <_Z12Pub_Sub_DataPcPhjh+0x1aaa>
   1428c:	e1 2c       	mov	r14, r1
   1428e:	f1 2c       	mov	r15, r1
   14290:	b4 e6       	ldi	r27, 0x64	; 100
   14292:	cb 2e       	mov	r12, r27
   14294:	d1 2c       	mov	r13, r1
   14296:	80 e1       	ldi	r24, 0x10	; 16
   14298:	a8 2e       	mov	r10, r24
   1429a:	8e e0       	ldi	r24, 0x0E	; 14
   1429c:	b8 2e       	mov	r11, r24
   1429e:	9c e3       	ldi	r25, 0x3C	; 60
   142a0:	79 2e       	mov	r7, r25
   142a2:	6c e1       	ldi	r22, 0x1C	; 28
   142a4:	74 e3       	ldi	r23, 0x34	; 52
   142a6:	c2 01       	movw	r24, r4
   142a8:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   142ac:	b7 01       	movw	r22, r14
   142ae:	6d 5f       	subi	r22, 0xFD	; 253
   142b0:	7f 4f       	sbci	r23, 0xFF	; 255
   142b2:	0e 94 56 8e 	call	0x11cac	; 0x11cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   142b6:	f7 01       	movw	r30, r14
   142b8:	ee 0f       	add	r30, r30
   142ba:	ff 1f       	adc	r31, r31
   142bc:	ed 53       	subi	r30, 0x3D	; 61
   142be:	f6 4f       	sbci	r31, 0xF6	; 246
   142c0:	91 83       	std	Z+1, r25	; 0x01
   142c2:	80 83       	st	Z, r24
   142c4:	80 81       	ld	r24, Z
   142c6:	91 81       	ldd	r25, Z+1	; 0x01
   142c8:	80 80       	ld	r8, Z
   142ca:	91 80       	ldd	r9, Z+1	; 0x01
   142cc:	b6 01       	movw	r22, r12
   142ce:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   142d2:	6a 9d       	mul	r22, r10
   142d4:	90 01       	movw	r18, r0
   142d6:	6b 9d       	mul	r22, r11
   142d8:	30 0d       	add	r19, r0
   142da:	7a 9d       	mul	r23, r10
   142dc:	30 0d       	add	r19, r0
   142de:	11 24       	eor	r1, r1
   142e0:	c4 01       	movw	r24, r8
   142e2:	b6 01       	movw	r22, r12
   142e4:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   142e8:	78 9e       	mul	r7, r24
   142ea:	a0 01       	movw	r20, r0
   142ec:	79 9e       	mul	r7, r25
   142ee:	50 0d       	add	r21, r0
   142f0:	11 24       	eor	r1, r1
   142f2:	24 0f       	add	r18, r20
   142f4:	35 1f       	adc	r19, r21
   142f6:	31 83       	std	Z+1, r19	; 0x01
   142f8:	20 83       	st	Z, r18
   142fa:	3f ef       	ldi	r19, 0xFF	; 255
   142fc:	e3 1a       	sub	r14, r19
   142fe:	f3 0a       	sbc	r15, r19
   14300:	47 e2       	ldi	r20, 0x27	; 39
   14302:	e4 16       	cp	r14, r20
   14304:	f1 04       	cpc	r15, r1
   14306:	69 f6       	brne	.-102    	; 0x142a2 <_Z12Pub_Sub_DataPcPhjh+0x1aea>
   14308:	e1 2c       	mov	r14, r1
   1430a:	f1 2c       	mov	r15, r1
   1430c:	64 e6       	ldi	r22, 0x64	; 100
   1430e:	c6 2e       	mov	r12, r22
   14310:	d1 2c       	mov	r13, r1
   14312:	70 e1       	ldi	r23, 0x10	; 16
   14314:	a7 2e       	mov	r10, r23
   14316:	7e e0       	ldi	r23, 0x0E	; 14
   14318:	b7 2e       	mov	r11, r23
   1431a:	ec e3       	ldi	r30, 0x3C	; 60
   1431c:	7e 2e       	mov	r7, r30
   1431e:	67 e1       	ldi	r22, 0x17	; 23
   14320:	74 e3       	ldi	r23, 0x34	; 52
   14322:	c2 01       	movw	r24, r4
   14324:	0e 94 f8 8d 	call	0x11bf0	; 0x11bf0 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14328:	b7 01       	movw	r22, r14
   1432a:	6d 5f       	subi	r22, 0xFD	; 253
   1432c:	7f 4f       	sbci	r23, 0xFF	; 255
   1432e:	0e 94 56 8e 	call	0x11cac	; 0x11cac <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   14332:	f7 01       	movw	r30, r14
   14334:	ee 0f       	add	r30, r30
   14336:	ff 1f       	adc	r31, r31
   14338:	e7 5e       	subi	r30, 0xE7	; 231
   1433a:	f5 4f       	sbci	r31, 0xF5	; 245
   1433c:	91 83       	std	Z+1, r25	; 0x01
   1433e:	80 83       	st	Z, r24
   14340:	80 81       	ld	r24, Z
   14342:	91 81       	ldd	r25, Z+1	; 0x01
   14344:	80 80       	ld	r8, Z
   14346:	91 80       	ldd	r9, Z+1	; 0x01
   14348:	b6 01       	movw	r22, r12
   1434a:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   1434e:	6a 9d       	mul	r22, r10
   14350:	90 01       	movw	r18, r0
   14352:	6b 9d       	mul	r22, r11
   14354:	30 0d       	add	r19, r0
   14356:	7a 9d       	mul	r23, r10
   14358:	30 0d       	add	r19, r0
   1435a:	11 24       	eor	r1, r1
   1435c:	c4 01       	movw	r24, r8
   1435e:	b6 01       	movw	r22, r12
   14360:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   14364:	78 9e       	mul	r7, r24
   14366:	a0 01       	movw	r20, r0
   14368:	79 9e       	mul	r7, r25
   1436a:	50 0d       	add	r21, r0
   1436c:	11 24       	eor	r1, r1
   1436e:	24 0f       	add	r18, r20
   14370:	35 1f       	adc	r19, r21
   14372:	31 83       	std	Z+1, r19	; 0x01
   14374:	20 83       	st	Z, r18
   14376:	5f ef       	ldi	r21, 0xFF	; 255
   14378:	e5 1a       	sub	r14, r21
   1437a:	f5 0a       	sbc	r15, r21
   1437c:	87 e2       	ldi	r24, 0x27	; 39
   1437e:	e8 16       	cp	r14, r24
   14380:	f1 04       	cpc	r15, r1
   14382:	69 f6       	brne	.-102    	; 0x1431e <_Z12Pub_Sub_DataPcPhjh+0x1b66>
   14384:	80 e0       	ldi	r24, 0x00	; 0
   14386:	90 e0       	ldi	r25, 0x00	; 0
   14388:	fc 01       	movw	r30, r24
   1438a:	e2 5e       	subi	r30, 0xE2	; 226
   1438c:	f6 4f       	sbci	r31, 0xF6	; 246
   1438e:	df 01       	movw	r26, r30
   14390:	a6 56       	subi	r26, 0x66	; 102
   14392:	bd 4f       	sbci	r27, 0xFD	; 253
   14394:	2c 91       	ld	r18, X
   14396:	25 af       	std	Z+61, r18	; 0x3d
   14398:	01 96       	adiw	r24, 0x01	; 1
   1439a:	8e 30       	cpi	r24, 0x0E	; 14
   1439c:	91 05       	cpc	r25, r1
   1439e:	a1 f7       	brne	.-24     	; 0x14388 <_Z12Pub_Sub_DataPcPhjh+0x1bd0>
   143a0:	80 e0       	ldi	r24, 0x00	; 0
   143a2:	90 e0       	ldi	r25, 0x00	; 0
   143a4:	fc 01       	movw	r30, r24
   143a6:	ee 0f       	add	r30, r30
   143a8:	ff 1f       	adc	r31, r31
   143aa:	e6 56       	subi	r30, 0x66	; 102
   143ac:	f4 4f       	sbci	r31, 0xF4	; 244
   143ae:	20 81       	ld	r18, Z
   143b0:	31 81       	ldd	r19, Z+1	; 0x01
   143b2:	fc 01       	movw	r30, r24
   143b4:	ee 0f       	add	r30, r30
   143b6:	ff 1f       	adc	r31, r31
   143b8:	e2 5e       	subi	r30, 0xE2	; 226
   143ba:	f6 4f       	sbci	r31, 0xF6	; 246
   143bc:	30 a3       	std	Z+32, r19	; 0x20
   143be:	27 8f       	std	Z+31, r18	; 0x1f
   143c0:	01 96       	adiw	r24, 0x01	; 1
   143c2:	8e 30       	cpi	r24, 0x0E	; 14
   143c4:	91 05       	cpc	r25, r1
   143c6:	71 f7       	brne	.-36     	; 0x143a4 <_Z12Pub_Sub_DataPcPhjh+0x1bec>
   143c8:	80 e0       	ldi	r24, 0x00	; 0
   143ca:	90 e0       	ldi	r25, 0x00	; 0
   143cc:	9c 01       	movw	r18, r24
   143ce:	22 5e       	subi	r18, 0xE2	; 226
   143d0:	36 4f       	sbci	r19, 0xF6	; 246
   143d2:	f9 01       	movw	r30, r18
   143d4:	e7 55       	subi	r30, 0x57	; 87
   143d6:	fd 4f       	sbci	r31, 0xFD	; 253
   143d8:	40 81       	ld	r20, Z
   143da:	ed 55       	subi	r30, 0x5D	; 93
   143dc:	f2 40       	sbci	r31, 0x02	; 2
   143de:	40 83       	st	Z, r20
   143e0:	01 96       	adiw	r24, 0x01	; 1
   143e2:	8e 30       	cpi	r24, 0x0E	; 14
   143e4:	91 05       	cpc	r25, r1
   143e6:	91 f7       	brne	.-28     	; 0x143cc <_Z12Pub_Sub_DataPcPhjh+0x1c14>
   143e8:	e1 2c       	mov	r14, r1
   143ea:	f1 2c       	mov	r15, r1
   143ec:	40 e0       	ldi	r20, 0x00	; 0
   143ee:	50 e0       	ldi	r21, 0x00	; 0
   143f0:	91 2c       	mov	r9, r1
   143f2:	fa 01       	movw	r30, r20
   143f4:	e2 5e       	subi	r30, 0xE2	; 226
   143f6:	f6 4f       	sbci	r31, 0xF6	; 246
   143f8:	85 ad       	ldd	r24, Z+61	; 0x3d
   143fa:	81 30       	cpi	r24, 0x01	; 1
   143fc:	09 f0       	breq	.+2      	; 0x14400 <_Z12Pub_Sub_DataPcPhjh+0x1c48>
   143fe:	6c c0       	rjmp	.+216    	; 0x144d8 <_Z12Pub_Sub_DataPcPhjh+0x1d20>
   14400:	89 2d       	mov	r24, r9
   14402:	90 e0       	ldi	r25, 0x00	; 0
   14404:	25 ad       	ldd	r18, Z+61	; 0x3d
   14406:	bc 01       	movw	r22, r24
   14408:	62 5e       	subi	r22, 0xE2	; 226
   1440a:	76 4f       	sbci	r23, 0xF6	; 246
   1440c:	db 01       	movw	r26, r22
   1440e:	dd 96       	adiw	r26, 0x3d	; 61
   14410:	2c 93       	st	X, r18
   14412:	9a 01       	movw	r18, r20
   14414:	22 0f       	add	r18, r18
   14416:	33 1f       	adc	r19, r19
   14418:	22 5e       	subi	r18, 0xE2	; 226
   1441a:	36 4f       	sbci	r19, 0xF6	; 246
   1441c:	d9 01       	movw	r26, r18
   1441e:	5f 96       	adiw	r26, 0x1f	; 31
   14420:	2d 91       	ld	r18, X+
   14422:	3c 91       	ld	r19, X
   14424:	90 97       	sbiw	r26, 0x20	; 32
   14426:	88 0f       	add	r24, r24
   14428:	99 1f       	adc	r25, r25
   1442a:	82 5e       	subi	r24, 0xE2	; 226
   1442c:	96 4f       	sbci	r25, 0xF6	; 246
   1442e:	dc 01       	movw	r26, r24
   14430:	90 96       	adiw	r26, 0x20	; 32
   14432:	3c 93       	st	X, r19
   14434:	2e 93       	st	-X, r18
   14436:	5f 97       	sbiw	r26, 0x1f	; 31
   14438:	e4 5b       	subi	r30, 0xB4	; 180
   1443a:	ff 4f       	sbci	r31, 0xFF	; 255
   1443c:	80 81       	ld	r24, Z
   1443e:	db 01       	movw	r26, r22
   14440:	a4 5b       	subi	r26, 0xB4	; 180
   14442:	bf 4f       	sbci	r27, 0xFF	; 255
   14444:	8c 93       	st	X, r24
   14446:	b3 e0       	ldi	r27, 0x03	; 3
   14448:	9b 9e       	mul	r9, r27
   1444a:	50 01       	movw	r10, r0
   1444c:	11 24       	eor	r1, r1
   1444e:	60 e0       	ldi	r22, 0x00	; 0
   14450:	70 e0       	ldi	r23, 0x00	; 0
   14452:	35 01       	movw	r6, r10
   14454:	66 0e       	add	r6, r22
   14456:	77 1e       	adc	r7, r23
   14458:	97 01       	movw	r18, r14
   1445a:	26 0f       	add	r18, r22
   1445c:	37 1f       	adc	r19, r23
   1445e:	d9 01       	movw	r26, r18
   14460:	a2 5e       	subi	r26, 0xE2	; 226
   14462:	b6 4f       	sbci	r27, 0xF6	; 246
   14464:	fd 01       	movw	r30, r26
   14466:	ef 5a       	subi	r30, 0xAF	; 175
   14468:	fe 4f       	sbci	r31, 0xFE	; 254
   1446a:	80 80       	ld	r8, Z
   1446c:	f3 01       	movw	r30, r6
   1446e:	e2 5e       	subi	r30, 0xE2	; 226
   14470:	f6 4f       	sbci	r31, 0xF6	; 246
   14472:	6f 01       	movw	r12, r30
   14474:	ff ea       	ldi	r31, 0xAF	; 175
   14476:	cf 1a       	sub	r12, r31
   14478:	fe ef       	ldi	r31, 0xFE	; 254
   1447a:	df 0a       	sbc	r13, r31
   1447c:	f6 01       	movw	r30, r12
   1447e:	80 82       	st	Z, r8
   14480:	a6 58       	subi	r26, 0x86	; 134
   14482:	bf 4f       	sbci	r27, 0xFF	; 255
   14484:	ac 91       	ld	r26, X
   14486:	e7 5d       	subi	r30, 0xD7	; 215
   14488:	f1 09       	sbc	r31, r1
   1448a:	a0 83       	st	Z, r26
   1448c:	22 0f       	add	r18, r18
   1448e:	33 1f       	adc	r19, r19
   14490:	22 5e       	subi	r18, 0xE2	; 226
   14492:	36 4f       	sbci	r19, 0xF6	; 246
   14494:	f9 01       	movw	r30, r18
   14496:	eb 55       	subi	r30, 0x5B	; 91
   14498:	ff 4f       	sbci	r31, 0xFF	; 255
   1449a:	01 90       	ld	r0, Z+
   1449c:	f0 81       	ld	r31, Z
   1449e:	e0 2d       	mov	r30, r0
   144a0:	c3 01       	movw	r24, r6
   144a2:	88 0f       	add	r24, r24
   144a4:	99 1f       	adc	r25, r25
   144a6:	82 5e       	subi	r24, 0xE2	; 226
   144a8:	96 4f       	sbci	r25, 0xF6	; 246
   144aa:	dc 01       	movw	r26, r24
   144ac:	ab 55       	subi	r26, 0x5B	; 91
   144ae:	bf 4f       	sbci	r27, 0xFF	; 255
   144b0:	11 96       	adiw	r26, 0x01	; 1
   144b2:	fc 93       	st	X, r31
   144b4:	ee 93       	st	-X, r30
   144b6:	f9 01       	movw	r30, r18
   144b8:	e5 50       	subi	r30, 0x05	; 5
   144ba:	ff 4f       	sbci	r31, 0xFF	; 255
   144bc:	20 81       	ld	r18, Z
   144be:	31 81       	ldd	r19, Z+1	; 0x01
   144c0:	fc 01       	movw	r30, r24
   144c2:	e5 50       	subi	r30, 0x05	; 5
   144c4:	ff 4f       	sbci	r31, 0xFF	; 255
   144c6:	31 83       	std	Z+1, r19	; 0x01
   144c8:	20 83       	st	Z, r18
   144ca:	6f 5f       	subi	r22, 0xFF	; 255
   144cc:	7f 4f       	sbci	r23, 0xFF	; 255
   144ce:	63 30       	cpi	r22, 0x03	; 3
   144d0:	71 05       	cpc	r23, r1
   144d2:	09 f0       	breq	.+2      	; 0x144d6 <_Z12Pub_Sub_DataPcPhjh+0x1d1e>
   144d4:	be cf       	rjmp	.-132    	; 0x14452 <_Z12Pub_Sub_DataPcPhjh+0x1c9a>
   144d6:	93 94       	inc	r9
   144d8:	4f 5f       	subi	r20, 0xFF	; 255
   144da:	5f 4f       	sbci	r21, 0xFF	; 255
   144dc:	f3 e0       	ldi	r31, 0x03	; 3
   144de:	ef 0e       	add	r14, r31
   144e0:	f1 1c       	adc	r15, r1
   144e2:	4e 30       	cpi	r20, 0x0E	; 14
   144e4:	51 05       	cpc	r21, r1
   144e6:	09 f0       	breq	.+2      	; 0x144ea <_Z12Pub_Sub_DataPcPhjh+0x1d32>
   144e8:	84 cf       	rjmp	.-248    	; 0x143f2 <_Z12Pub_Sub_DataPcPhjh+0x1c3a>
   144ea:	2d e0       	ldi	r18, 0x0D	; 13
   144ec:	29 15       	cp	r18, r9
   144ee:	08 f0       	brcs	.+2      	; 0x144f2 <_Z12Pub_Sub_DataPcPhjh+0x1d3a>
   144f0:	89 c2       	rjmp	.+1298   	; 0x14a04 <_Z12Pub_Sub_DataPcPhjh+0x224c>
   144f2:	e1 2c       	mov	r14, r1
   144f4:	f1 2c       	mov	r15, r1
   144f6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   144fa:	81 30       	cpi	r24, 0x01	; 1
   144fc:	a1 f4       	brne	.+40     	; 0x14526 <_Z12Pub_Sub_DataPcPhjh+0x1d6e>
   144fe:	6c e0       	ldi	r22, 0x0C	; 12
   14500:	74 e3       	ldi	r23, 0x34	; 52
   14502:	86 ec       	ldi	r24, 0xC6	; 198
   14504:	94 e1       	ldi	r25, 0x14	; 20
   14506:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1450a:	f7 01       	movw	r30, r14
   1450c:	e2 5e       	subi	r30, 0xE2	; 226
   1450e:	f6 4f       	sbci	r31, 0xF6	; 246
   14510:	65 ad       	ldd	r22, Z+61	; 0x3d
   14512:	4a e0       	ldi	r20, 0x0A	; 10
   14514:	50 e0       	ldi	r21, 0x00	; 0
   14516:	86 ec       	ldi	r24, 0xC6	; 198
   14518:	94 e1       	ldi	r25, 0x14	; 20
   1451a:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1451e:	86 ec       	ldi	r24, 0xC6	; 198
   14520:	94 e1       	ldi	r25, 0x14	; 20
   14522:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14526:	4f ef       	ldi	r20, 0xFF	; 255
   14528:	e4 1a       	sub	r14, r20
   1452a:	f4 0a       	sbc	r15, r20
   1452c:	5e e0       	ldi	r21, 0x0E	; 14
   1452e:	e5 16       	cp	r14, r21
   14530:	f1 04       	cpc	r15, r1
   14532:	09 f7       	brne	.-62     	; 0x144f6 <_Z12Pub_Sub_DataPcPhjh+0x1d3e>
   14534:	e1 2c       	mov	r14, r1
   14536:	f1 2c       	mov	r15, r1
   14538:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1453c:	81 30       	cpi	r24, 0x01	; 1
   1453e:	b9 f4       	brne	.+46     	; 0x1456e <_Z12Pub_Sub_DataPcPhjh+0x1db6>
   14540:	6a ef       	ldi	r22, 0xFA	; 250
   14542:	73 e3       	ldi	r23, 0x33	; 51
   14544:	86 ec       	ldi	r24, 0xC6	; 198
   14546:	94 e1       	ldi	r25, 0x14	; 20
   14548:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1454c:	f7 01       	movw	r30, r14
   1454e:	ee 0f       	add	r30, r30
   14550:	ff 1f       	adc	r31, r31
   14552:	e2 5e       	subi	r30, 0xE2	; 226
   14554:	f6 4f       	sbci	r31, 0xF6	; 246
   14556:	67 8d       	ldd	r22, Z+31	; 0x1f
   14558:	70 a1       	ldd	r23, Z+32	; 0x20
   1455a:	4a e0       	ldi	r20, 0x0A	; 10
   1455c:	50 e0       	ldi	r21, 0x00	; 0
   1455e:	86 ec       	ldi	r24, 0xC6	; 198
   14560:	94 e1       	ldi	r25, 0x14	; 20
   14562:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
   14566:	86 ec       	ldi	r24, 0xC6	; 198
   14568:	94 e1       	ldi	r25, 0x14	; 20
   1456a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1456e:	8f ef       	ldi	r24, 0xFF	; 255
   14570:	e8 1a       	sub	r14, r24
   14572:	f8 0a       	sbc	r15, r24
   14574:	9e e0       	ldi	r25, 0x0E	; 14
   14576:	e9 16       	cp	r14, r25
   14578:	f1 04       	cpc	r15, r1
   1457a:	f1 f6       	brne	.-68     	; 0x14538 <_Z12Pub_Sub_DataPcPhjh+0x1d80>
   1457c:	e1 2c       	mov	r14, r1
   1457e:	f1 2c       	mov	r15, r1
   14580:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14584:	81 30       	cpi	r24, 0x01	; 1
   14586:	a1 f4       	brne	.+40     	; 0x145b0 <_Z12Pub_Sub_DataPcPhjh+0x1df8>
   14588:	60 ef       	ldi	r22, 0xF0	; 240
   1458a:	73 e3       	ldi	r23, 0x33	; 51
   1458c:	86 ec       	ldi	r24, 0xC6	; 198
   1458e:	94 e1       	ldi	r25, 0x14	; 20
   14590:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   14594:	f7 01       	movw	r30, r14
   14596:	e6 59       	subi	r30, 0x96	; 150
   14598:	f6 4f       	sbci	r31, 0xF6	; 246
   1459a:	60 81       	ld	r22, Z
   1459c:	4a e0       	ldi	r20, 0x0A	; 10
   1459e:	50 e0       	ldi	r21, 0x00	; 0
   145a0:	86 ec       	ldi	r24, 0xC6	; 198
   145a2:	94 e1       	ldi	r25, 0x14	; 20
   145a4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   145a8:	86 ec       	ldi	r24, 0xC6	; 198
   145aa:	94 e1       	ldi	r25, 0x14	; 20
   145ac:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   145b0:	af ef       	ldi	r26, 0xFF	; 255
   145b2:	ea 1a       	sub	r14, r26
   145b4:	fa 0a       	sbc	r15, r26
   145b6:	be e0       	ldi	r27, 0x0E	; 14
   145b8:	eb 16       	cp	r14, r27
   145ba:	f1 04       	cpc	r15, r1
   145bc:	09 f7       	brne	.-62     	; 0x14580 <_Z12Pub_Sub_DataPcPhjh+0x1dc8>
   145be:	e1 2c       	mov	r14, r1
   145c0:	f1 2c       	mov	r15, r1
   145c2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   145c6:	81 30       	cpi	r24, 0x01	; 1
   145c8:	a1 f4       	brne	.+40     	; 0x145f2 <_Z12Pub_Sub_DataPcPhjh+0x1e3a>
   145ca:	64 ee       	ldi	r22, 0xE4	; 228
   145cc:	73 e3       	ldi	r23, 0x33	; 51
   145ce:	86 ec       	ldi	r24, 0xC6	; 198
   145d0:	94 e1       	ldi	r25, 0x14	; 20
   145d2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   145d6:	f7 01       	movw	r30, r14
   145d8:	e1 59       	subi	r30, 0x91	; 145
   145da:	f5 4f       	sbci	r31, 0xF5	; 245
   145dc:	60 81       	ld	r22, Z
   145de:	4a e0       	ldi	r20, 0x0A	; 10
   145e0:	50 e0       	ldi	r21, 0x00	; 0
   145e2:	86 ec       	ldi	r24, 0xC6	; 198
   145e4:	94 e1       	ldi	r25, 0x14	; 20
   145e6:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   145ea:	86 ec       	ldi	r24, 0xC6	; 198
   145ec:	94 e1       	ldi	r25, 0x14	; 20
   145ee:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   145f2:	ef ef       	ldi	r30, 0xFF	; 255
   145f4:	ee 1a       	sub	r14, r30
   145f6:	fe 0a       	sbc	r15, r30
   145f8:	f7 e2       	ldi	r31, 0x27	; 39
   145fa:	ef 16       	cp	r14, r31
   145fc:	f1 04       	cpc	r15, r1
   145fe:	09 f7       	brne	.-62     	; 0x145c2 <_Z12Pub_Sub_DataPcPhjh+0x1e0a>
   14600:	e1 2c       	mov	r14, r1
   14602:	f1 2c       	mov	r15, r1
   14604:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14608:	81 30       	cpi	r24, 0x01	; 1
   1460a:	a1 f4       	brne	.+40     	; 0x14634 <_Z12Pub_Sub_DataPcPhjh+0x1e7c>
   1460c:	6a ed       	ldi	r22, 0xDA	; 218
   1460e:	73 e3       	ldi	r23, 0x33	; 51
   14610:	86 ec       	ldi	r24, 0xC6	; 198
   14612:	94 e1       	ldi	r25, 0x14	; 20
   14614:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   14618:	f7 01       	movw	r30, r14
   1461a:	e8 56       	subi	r30, 0x68	; 104
   1461c:	f6 4f       	sbci	r31, 0xF6	; 246
   1461e:	60 81       	ld	r22, Z
   14620:	4a e0       	ldi	r20, 0x0A	; 10
   14622:	50 e0       	ldi	r21, 0x00	; 0
   14624:	86 ec       	ldi	r24, 0xC6	; 198
   14626:	94 e1       	ldi	r25, 0x14	; 20
   14628:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1462c:	86 ec       	ldi	r24, 0xC6	; 198
   1462e:	94 e1       	ldi	r25, 0x14	; 20
   14630:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14634:	2f ef       	ldi	r18, 0xFF	; 255
   14636:	e2 1a       	sub	r14, r18
   14638:	f2 0a       	sbc	r15, r18
   1463a:	37 e2       	ldi	r19, 0x27	; 39
   1463c:	e3 16       	cp	r14, r19
   1463e:	f1 04       	cpc	r15, r1
   14640:	09 f7       	brne	.-62     	; 0x14604 <_Z12Pub_Sub_DataPcPhjh+0x1e4c>
   14642:	e1 2c       	mov	r14, r1
   14644:	f1 2c       	mov	r15, r1
   14646:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1464a:	81 30       	cpi	r24, 0x01	; 1
   1464c:	b9 f4       	brne	.+46     	; 0x1467c <_Z12Pub_Sub_DataPcPhjh+0x1ec4>
   1464e:	6a ec       	ldi	r22, 0xCA	; 202
   14650:	73 e3       	ldi	r23, 0x33	; 51
   14652:	86 ec       	ldi	r24, 0xC6	; 198
   14654:	94 e1       	ldi	r25, 0x14	; 20
   14656:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1465a:	f7 01       	movw	r30, r14
   1465c:	ee 0f       	add	r30, r30
   1465e:	ff 1f       	adc	r31, r31
   14660:	ed 53       	subi	r30, 0x3D	; 61
   14662:	f6 4f       	sbci	r31, 0xF6	; 246
   14664:	60 81       	ld	r22, Z
   14666:	71 81       	ldd	r23, Z+1	; 0x01
   14668:	4a e0       	ldi	r20, 0x0A	; 10
   1466a:	50 e0       	ldi	r21, 0x00	; 0
   1466c:	86 ec       	ldi	r24, 0xC6	; 198
   1466e:	94 e1       	ldi	r25, 0x14	; 20
   14670:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
   14674:	86 ec       	ldi	r24, 0xC6	; 198
   14676:	94 e1       	ldi	r25, 0x14	; 20
   14678:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1467c:	4f ef       	ldi	r20, 0xFF	; 255
   1467e:	e4 1a       	sub	r14, r20
   14680:	f4 0a       	sbc	r15, r20
   14682:	57 e2       	ldi	r21, 0x27	; 39
   14684:	e5 16       	cp	r14, r21
   14686:	f1 04       	cpc	r15, r1
   14688:	f1 f6       	brne	.-68     	; 0x14646 <_Z12Pub_Sub_DataPcPhjh+0x1e8e>
   1468a:	e1 2c       	mov	r14, r1
   1468c:	f1 2c       	mov	r15, r1
   1468e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14692:	81 30       	cpi	r24, 0x01	; 1
   14694:	b9 f4       	brne	.+46     	; 0x146c4 <_Z12Pub_Sub_DataPcPhjh+0x1f0c>
   14696:	6a eb       	ldi	r22, 0xBA	; 186
   14698:	73 e3       	ldi	r23, 0x33	; 51
   1469a:	86 ec       	ldi	r24, 0xC6	; 198
   1469c:	94 e1       	ldi	r25, 0x14	; 20
   1469e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   146a2:	f7 01       	movw	r30, r14
   146a4:	ee 0f       	add	r30, r30
   146a6:	ff 1f       	adc	r31, r31
   146a8:	e7 5e       	subi	r30, 0xE7	; 231
   146aa:	f5 4f       	sbci	r31, 0xF5	; 245
   146ac:	60 81       	ld	r22, Z
   146ae:	71 81       	ldd	r23, Z+1	; 0x01
   146b0:	4a e0       	ldi	r20, 0x0A	; 10
   146b2:	50 e0       	ldi	r21, 0x00	; 0
   146b4:	86 ec       	ldi	r24, 0xC6	; 198
   146b6:	94 e1       	ldi	r25, 0x14	; 20
   146b8:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
   146bc:	86 ec       	ldi	r24, 0xC6	; 198
   146be:	94 e1       	ldi	r25, 0x14	; 20
   146c0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   146c4:	8f ef       	ldi	r24, 0xFF	; 255
   146c6:	e8 1a       	sub	r14, r24
   146c8:	f8 0a       	sbc	r15, r24
   146ca:	97 e2       	ldi	r25, 0x27	; 39
   146cc:	e9 16       	cp	r14, r25
   146ce:	f1 04       	cpc	r15, r1
   146d0:	f1 f6       	brne	.-68     	; 0x1468e <_Z12Pub_Sub_DataPcPhjh+0x1ed6>
   146d2:	80 91 99 0b 	lds	r24, 0x0B99	; 0x800b99 <_sSchedules+0x27b>
   146d6:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   146da:	80 91 92 0b 	lds	r24, 0x0B92	; 0x800b92 <_sSchedules+0x274>
   146de:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <_sSchedules+0x1d>
   146e2:	80 91 94 0b 	lds	r24, 0x0B94	; 0x800b94 <_sSchedules+0x276>
   146e6:	80 93 3a 09 	sts	0x093A, r24	; 0x80093a <_sSchedules+0x1c>
   146ea:	80 91 95 0b 	lds	r24, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   146ee:	90 91 96 0b 	lds	r25, 0x0B96	; 0x800b96 <_sSchedules+0x278>
   146f2:	a0 91 97 0b 	lds	r26, 0x0B97	; 0x800b97 <_sSchedules+0x279>
   146f6:	b0 91 98 0b 	lds	r27, 0x0B98	; 0x800b98 <_sSchedules+0x27a>
   146fa:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
   146fe:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
   14702:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
   14706:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
   1470a:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
   1470e:	88 e6       	ldi	r24, 0x68	; 104
   14710:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   14714:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0x44>
   14718:	80 93 d7 0b 	sts	0x0BD7, r24	; 0x800bd7 <_sSchedules+0x2b9>
   1471c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   14720:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   14724:	10 92 d6 0b 	sts	0x0BD6, r1	; 0x800bd6 <_sSchedules+0x2b8>
   14728:	80 91 e7 0b 	lds	r24, 0x0BE7	; 0x800be7 <_sSchedules+0x2c9>
   1472c:	80 93 e6 0b 	sts	0x0BE6, r24	; 0x800be6 <_sSchedules+0x2c8>
   14730:	80 91 f1 0b 	lds	r24, 0x0BF1	; 0x800bf1 <_sSchedules+0x2d3>
   14734:	80 93 f0 0b 	sts	0x0BF0, r24	; 0x800bf0 <_sSchedules+0x2d2>
   14738:	80 91 f3 0b 	lds	r24, 0x0BF3	; 0x800bf3 <_sSchedules+0x2d5>
   1473c:	80 93 f2 0b 	sts	0x0BF2, r24	; 0x800bf2 <_sSchedules+0x2d4>
   14740:	0e 94 17 87 	call	0x10e2e	; 0x10e2e <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.42>
   14744:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14748:	81 30       	cpi	r24, 0x01	; 1
   1474a:	09 f0       	breq	.+2      	; 0x1474e <_Z12Pub_Sub_DataPcPhjh+0x1f96>
   1474c:	65 c1       	rjmp	.+714    	; 0x14a18 <_Z12Pub_Sub_DataPcPhjh+0x2260>
   1474e:	69 ea       	ldi	r22, 0xA9	; 169
   14750:	73 e3       	ldi	r23, 0x33	; 51
   14752:	86 ec       	ldi	r24, 0xC6	; 198
   14754:	94 e1       	ldi	r25, 0x14	; 20
   14756:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1475a:	60 91 f2 0b 	lds	r22, 0x0BF2	; 0x800bf2 <_sSchedules+0x2d4>
   1475e:	4a e0       	ldi	r20, 0x0A	; 10
   14760:	50 e0       	ldi	r21, 0x00	; 0
   14762:	86 ec       	ldi	r24, 0xC6	; 198
   14764:	94 e1       	ldi	r25, 0x14	; 20
   14766:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1476a:	a1 e0       	ldi	r26, 0x01	; 1
   1476c:	c0 55       	subi	r28, 0x50	; 80
   1476e:	d9 4f       	sbci	r29, 0xF9	; 249
   14770:	a8 83       	st	Y, r26
   14772:	c0 5b       	subi	r28, 0xB0	; 176
   14774:	d6 40       	sbci	r29, 0x06	; 6
   14776:	88 e2       	ldi	r24, 0x28	; 40
   14778:	f8 01       	movw	r30, r16
   1477a:	11 92       	st	Z+, r1
   1477c:	8a 95       	dec	r24
   1477e:	e9 f7       	brne	.-6      	; 0x1477a <_Z12Pub_Sub_DataPcPhjh+0x1fc2>
   14780:	8e ec       	ldi	r24, 0xCE	; 206
   14782:	93 e1       	ldi	r25, 0x13	; 19
   14784:	9f 93       	push	r25
   14786:	8f 93       	push	r24
   14788:	8f e1       	ldi	r24, 0x1F	; 31
   1478a:	96 e0       	ldi	r25, 0x06	; 6
   1478c:	9f 93       	push	r25
   1478e:	8f 93       	push	r24
   14790:	1f 93       	push	r17
   14792:	0f 93       	push	r16
   14794:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   14798:	ca 54       	subi	r28, 0x4A	; 74
   1479a:	d9 4f       	sbci	r29, 0xF9	; 249
   1479c:	68 81       	ld	r22, Y
   1479e:	79 81       	ldd	r23, Y+1	; 0x01
   147a0:	c6 5b       	subi	r28, 0xB6	; 182
   147a2:	d6 40       	sbci	r29, 0x06	; 6
   147a4:	c8 01       	movw	r24, r16
   147a6:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   147aa:	0f 90       	pop	r0
   147ac:	0f 90       	pop	r0
   147ae:	0f 90       	pop	r0
   147b0:	0f 90       	pop	r0
   147b2:	0f 90       	pop	r0
   147b4:	0f 90       	pop	r0
   147b6:	89 2b       	or	r24, r25
   147b8:	09 f0       	breq	.+2      	; 0x147bc <_Z12Pub_Sub_DataPcPhjh+0x2004>
   147ba:	42 c0       	rjmp	.+132    	; 0x14840 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   147bc:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   147c0:	10 92 ad 14 	sts	0x14AD, r1	; 0x8014ad <_sRuble_Parameters+0xff>
   147c4:	6d e9       	ldi	r22, 0x9D	; 157
   147c6:	73 e3       	ldi	r23, 0x33	; 51
   147c8:	c2 01       	movw	r24, r4
   147ca:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   147ce:	88 23       	and	r24, r24
   147d0:	e1 f0       	breq	.+56     	; 0x1480a <_Z12Pub_Sub_DataPcPhjh+0x2052>
   147d2:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   147d6:	82 30       	cpi	r24, 0x02	; 2
   147d8:	99 f5       	brne	.+102    	; 0x14840 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   147da:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   147de:	81 30       	cpi	r24, 0x01	; 1
   147e0:	51 f4       	brne	.+20     	; 0x147f6 <_Z12Pub_Sub_DataPcPhjh+0x203e>
   147e2:	6b e7       	ldi	r22, 0x7B	; 123
   147e4:	73 e3       	ldi	r23, 0x33	; 51
   147e6:	86 ec       	ldi	r24, 0xC6	; 198
   147e8:	94 e1       	ldi	r25, 0x14	; 20
   147ea:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   147ee:	86 ec       	ldi	r24, 0xC6	; 198
   147f0:	94 e1       	ldi	r25, 0x14	; 20
   147f2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   147f6:	81 e0       	ldi	r24, 0x01	; 1
   147f8:	80 93 67 14 	sts	0x1467, r24	; 0x801467 <_sRuble_Parameters+0xb9>
   147fc:	f1 e0       	ldi	r31, 0x01	; 1
   147fe:	c0 55       	subi	r28, 0x50	; 80
   14800:	d9 4f       	sbci	r29, 0xF9	; 249
   14802:	f8 83       	st	Y, r31
   14804:	c0 5b       	subi	r28, 0xB0	; 176
   14806:	d6 40       	sbci	r29, 0x06	; 6
   14808:	1b c0       	rjmp	.+54     	; 0x14840 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   1480a:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   1480e:	82 30       	cpi	r24, 0x02	; 2
   14810:	60 f0       	brcs	.+24     	; 0x1482a <_Z12Pub_Sub_DataPcPhjh+0x2072>
   14812:	64 e6       	ldi	r22, 0x64	; 100
   14814:	73 e3       	ldi	r23, 0x33	; 51
   14816:	86 ec       	ldi	r24, 0xC6	; 198
   14818:	94 e1       	ldi	r25, 0x14	; 20
   1481a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1481e:	81 e0       	ldi	r24, 0x01	; 1
   14820:	80 93 67 14 	sts	0x1467, r24	; 0x801467 <_sRuble_Parameters+0xb9>
   14824:	80 93 ad 14 	sts	0x14AD, r24	; 0x8014ad <_sRuble_Parameters+0xff>
   14828:	0b c0       	rjmp	.+22     	; 0x14840 <_Z12Pub_Sub_DataPcPhjh+0x2088>
   1482a:	82 e0       	ldi	r24, 0x02	; 2
   1482c:	80 93 ad 14 	sts	0x14AD, r24	; 0x8014ad <_sRuble_Parameters+0xff>
   14830:	10 92 79 14 	sts	0x1479, r1	; 0x801479 <_sRuble_Parameters+0xcb>
   14834:	69 e7       	ldi	r22, 0x79	; 121
   14836:	74 e1       	ldi	r23, 0x14	; 20
   14838:	81 ea       	ldi	r24, 0xA1	; 161
   1483a:	9c e0       	ldi	r25, 0x0C	; 12
   1483c:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   14840:	88 e2       	ldi	r24, 0x28	; 40
   14842:	d8 01       	movw	r26, r16
   14844:	1d 92       	st	X+, r1
   14846:	8a 95       	dec	r24
   14848:	e9 f7       	brne	.-6      	; 0x14844 <_Z12Pub_Sub_DataPcPhjh+0x208c>
   1484a:	8e ec       	ldi	r24, 0xCE	; 206
   1484c:	93 e1       	ldi	r25, 0x13	; 19
   1484e:	9f 93       	push	r25
   14850:	8f 93       	push	r24
   14852:	84 e4       	ldi	r24, 0x44	; 68
   14854:	96 e0       	ldi	r25, 0x06	; 6
   14856:	9f 93       	push	r25
   14858:	8f 93       	push	r24
   1485a:	1f 93       	push	r17
   1485c:	0f 93       	push	r16
   1485e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   14862:	ca 54       	subi	r28, 0x4A	; 74
   14864:	d9 4f       	sbci	r29, 0xF9	; 249
   14866:	68 81       	ld	r22, Y
   14868:	79 81       	ldd	r23, Y+1	; 0x01
   1486a:	c6 5b       	subi	r28, 0xB6	; 182
   1486c:	d6 40       	sbci	r29, 0x06	; 6
   1486e:	c8 01       	movw	r24, r16
   14870:	0e 94 d4 ed 	call	0x1dba8	; 0x1dba8 <strcmp>
   14874:	0f 90       	pop	r0
   14876:	0f 90       	pop	r0
   14878:	0f 90       	pop	r0
   1487a:	0f 90       	pop	r0
   1487c:	0f 90       	pop	r0
   1487e:	0f 90       	pop	r0
   14880:	89 2b       	or	r24, r25
   14882:	09 f0       	breq	.+2      	; 0x14886 <_Z12Pub_Sub_DataPcPhjh+0x20ce>
   14884:	73 c0       	rjmp	.+230    	; 0x1496c <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   14886:	10 92 e6 0c 	sts	0x0CE6, r1	; 0x800ce6 <plot_schedule_topic>
   1488a:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1488e:	82 30       	cpi	r24, 0x02	; 2
   14890:	09 f4       	brne	.+2      	; 0x14894 <_Z12Pub_Sub_DataPcPhjh+0x20dc>
   14892:	6c c0       	rjmp	.+216    	; 0x1496c <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   14894:	60 e6       	ldi	r22, 0x60	; 96
   14896:	73 e3       	ldi	r23, 0x33	; 51
   14898:	c2 01       	movw	r24, r4
   1489a:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1489e:	18 2f       	mov	r17, r24
   148a0:	69 e5       	ldi	r22, 0x59	; 89
   148a2:	73 e3       	ldi	r23, 0x33	; 51
   148a4:	c2 01       	movw	r24, r4
   148a6:	0e 94 b9 8e 	call	0x11d72	; 0x11d72 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   148aa:	08 2f       	mov	r16, r24
   148ac:	17 36       	cpi	r17, 0x67	; 103
   148ae:	21 f0       	breq	.+8      	; 0x148b8 <_Z12Pub_Sub_DataPcPhjh+0x2100>
   148b0:	1d 36       	cpi	r17, 0x6D	; 109
   148b2:	11 f0       	breq	.+4      	; 0x148b8 <_Z12Pub_Sub_DataPcPhjh+0x2100>
   148b4:	0c 94 0a 95 	jmp	0x12a14	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   148b8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   148bc:	81 30       	cpi	r24, 0x01	; 1
   148be:	51 f4       	brne	.+20     	; 0x148d4 <_Z12Pub_Sub_DataPcPhjh+0x211c>
   148c0:	68 e1       	ldi	r22, 0x18	; 24
   148c2:	73 e3       	ldi	r23, 0x33	; 51
   148c4:	86 ec       	ldi	r24, 0xC6	; 198
   148c6:	94 e1       	ldi	r25, 0x14	; 20
   148c8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   148cc:	86 ec       	ldi	r24, 0xC6	; 198
   148ce:	94 e1       	ldi	r25, 0x14	; 20
   148d0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   148d4:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   148d8:	88 23       	and	r24, r24
   148da:	21 f0       	breq	.+8      	; 0x148e4 <_Z12Pub_Sub_DataPcPhjh+0x212c>
   148dc:	1d 36       	cpi	r17, 0x6D	; 109
   148de:	11 f4       	brne	.+4      	; 0x148e4 <_Z12Pub_Sub_DataPcPhjh+0x212c>
   148e0:	0c 94 0a 95 	jmp	0x12a14	; 0x12a14 <_Z12Pub_Sub_DataPcPhjh+0x25c>
   148e4:	15 36       	cpi	r17, 0x65	; 101
   148e6:	08 f4       	brcc	.+2      	; 0x148ea <_Z12Pub_Sub_DataPcPhjh+0x2132>
   148e8:	41 c0       	rjmp	.+130    	; 0x1496c <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   148ea:	81 2f       	mov	r24, r17
   148ec:	90 e0       	ldi	r25, 0x00	; 0
   148ee:	85 56       	subi	r24, 0x65	; 101
   148f0:	91 09       	sbc	r25, r1
   148f2:	4b e1       	ldi	r20, 0x1B	; 27
   148f4:	48 9f       	mul	r20, r24
   148f6:	f0 01       	movw	r30, r0
   148f8:	49 9f       	mul	r20, r25
   148fa:	f0 0d       	add	r31, r0
   148fc:	11 24       	eor	r1, r1
   148fe:	e8 51       	subi	r30, 0x18	; 24
   14900:	f2 4f       	sbci	r31, 0xF2	; 242
   14902:	81 81       	ldd	r24, Z+1	; 0x01
   14904:	88 23       	and	r24, r24
   14906:	91 f1       	breq	.+100    	; 0x1496c <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   14908:	9b e9       	ldi	r25, 0x9B	; 155
   1490a:	91 0f       	add	r25, r17
   1490c:	29 2f       	mov	r18, r25
   1490e:	30 e0       	ldi	r19, 0x00	; 0
   14910:	42 9f       	mul	r20, r18
   14912:	f0 01       	movw	r30, r0
   14914:	43 9f       	mul	r20, r19
   14916:	f0 0d       	add	r31, r0
   14918:	11 24       	eor	r1, r1
   1491a:	e8 51       	subi	r30, 0x18	; 24
   1491c:	f2 4f       	sbci	r31, 0xF2	; 242
   1491e:	82 81       	ldd	r24, Z+2	; 0x02
   14920:	84 30       	cpi	r24, 0x04	; 4
   14922:	21 f1       	breq	.+72     	; 0x1496c <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   14924:	94 30       	cpi	r25, 0x04	; 4
   14926:	11 f1       	breq	.+68     	; 0x1496c <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   14928:	43 81       	ldd	r20, Z+3	; 0x03
   1492a:	54 81       	ldd	r21, Z+4	; 0x04
   1492c:	45 2b       	or	r20, r21
   1492e:	f1 f4       	brne	.+60     	; 0x1496c <_Z12Pub_Sub_DataPcPhjh+0x21b4>
   14930:	00 23       	and	r16, r16
   14932:	31 f0       	breq	.+12     	; 0x14940 <_Z12Pub_Sub_DataPcPhjh+0x2188>
   14934:	81 e0       	ldi	r24, 0x01	; 1
   14936:	82 87       	std	Z+10, r24	; 0x0a
   14938:	82 e0       	ldi	r24, 0x02	; 2
   1493a:	82 83       	std	Z+2, r24	; 0x02
   1493c:	83 87       	std	Z+11, r24	; 0x0b
   1493e:	11 c0       	rjmp	.+34     	; 0x14962 <_Z12Pub_Sub_DataPcPhjh+0x21aa>
   14940:	82 30       	cpi	r24, 0x02	; 2
   14942:	19 f4       	brne	.+6      	; 0x1494a <_Z12Pub_Sub_DataPcPhjh+0x2192>
   14944:	93 e0       	ldi	r25, 0x03	; 3
   14946:	92 83       	std	Z+2, r25	; 0x02
   14948:	02 c0       	rjmp	.+4      	; 0x1494e <_Z12Pub_Sub_DataPcPhjh+0x2196>
   1494a:	82 e0       	ldi	r24, 0x02	; 2
   1494c:	82 83       	std	Z+2, r24	; 0x02
   1494e:	83 87       	std	Z+11, r24	; 0x0b
   14950:	8b e1       	ldi	r24, 0x1B	; 27
   14952:	82 9f       	mul	r24, r18
   14954:	f0 01       	movw	r30, r0
   14956:	83 9f       	mul	r24, r19
   14958:	f0 0d       	add	r31, r0
   1495a:	11 24       	eor	r1, r1
   1495c:	e8 51       	subi	r30, 0x18	; 24
   1495e:	f2 4f       	sbci	r31, 0xF2	; 242
   14960:	12 86       	std	Z+10, r1	; 0x0a
   14962:	8c e9       	ldi	r24, 0x9C	; 156
   14964:	81 0f       	add	r24, r17
   14966:	0e 94 26 7b 	call	0xf64c	; 0xf64c <_Z21Exra_Plot_Data_EEPROMh>
   1496a:	08 c0       	rjmp	.+16     	; 0x1497c <_Z12Pub_Sub_DataPcPhjh+0x21c4>
   1496c:	c0 55       	subi	r28, 0x50	; 80
   1496e:	d9 4f       	sbci	r29, 0xF9	; 249
   14970:	b8 81       	ld	r27, Y
   14972:	c0 5b       	subi	r28, 0xB0	; 176
   14974:	d6 40       	sbci	r29, 0x06	; 6
   14976:	b1 30       	cpi	r27, 0x01	; 1
   14978:	09 f0       	breq	.+2      	; 0x1497c <_Z12Pub_Sub_DataPcPhjh+0x21c4>
   1497a:	55 c0       	rjmp	.+170    	; 0x14a26 <_Z12Pub_Sub_DataPcPhjh+0x226e>
   1497c:	8e e6       	ldi	r24, 0x6E	; 110
   1497e:	e2 e6       	ldi	r30, 0x62	; 98
   14980:	ff e0       	ldi	r31, 0x0F	; 15
   14982:	df 01       	movw	r26, r30
   14984:	1d 92       	st	X+, r1
   14986:	8a 95       	dec	r24
   14988:	e9 f7       	brne	.-6      	; 0x14984 <_Z12Pub_Sub_DataPcPhjh+0x21cc>
   1498a:	62 e4       	ldi	r22, 0x42	; 66
   1498c:	75 e0       	ldi	r23, 0x05	; 5
   1498e:	cf 01       	movw	r24, r30
   14990:	0e 94 dd ed 	call	0x1dbba	; 0x1dbba <strcpy>
   14994:	88 e2       	ldi	r24, 0x28	; 40
   14996:	c2 55       	subi	r28, 0x52	; 82
   14998:	d9 4f       	sbci	r29, 0xF9	; 249
   1499a:	e8 81       	ld	r30, Y
   1499c:	f9 81       	ldd	r31, Y+1	; 0x01
   1499e:	ce 5a       	subi	r28, 0xAE	; 174
   149a0:	d6 40       	sbci	r29, 0x06	; 6
   149a2:	11 92       	st	Z+, r1
   149a4:	8a 95       	dec	r24
   149a6:	e9 f7       	brne	.-6      	; 0x149a2 <_Z12Pub_Sub_DataPcPhjh+0x21ea>
   149a8:	8e ec       	ldi	r24, 0xCE	; 206
   149aa:	93 e1       	ldi	r25, 0x13	; 19
   149ac:	9f 93       	push	r25
   149ae:	8f 93       	push	r24
   149b0:	8a e1       	ldi	r24, 0x1A	; 26
   149b2:	97 e0       	ldi	r25, 0x07	; 7
   149b4:	9f 93       	push	r25
   149b6:	8f 93       	push	r24
   149b8:	c1 55       	subi	r28, 0x51	; 81
   149ba:	d9 4f       	sbci	r29, 0xF9	; 249
   149bc:	f8 81       	ld	r31, Y
   149be:	cf 5a       	subi	r28, 0xAF	; 175
   149c0:	d6 40       	sbci	r29, 0x06	; 6
   149c2:	ff 93       	push	r31
   149c4:	c2 55       	subi	r28, 0x52	; 82
   149c6:	d9 4f       	sbci	r29, 0xF9	; 249
   149c8:	28 81       	ld	r18, Y
   149ca:	ce 5a       	subi	r28, 0xAE	; 174
   149cc:	d6 40       	sbci	r29, 0x06	; 6
   149ce:	2f 93       	push	r18
   149d0:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   149d4:	62 e6       	ldi	r22, 0x62	; 98
   149d6:	7f e0       	ldi	r23, 0x0F	; 15
   149d8:	ce 01       	movw	r24, r28
   149da:	8b 5c       	subi	r24, 0xCB	; 203
   149dc:	99 4f       	sbci	r25, 0xF9	; 249
   149de:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   149e2:	84 ed       	ldi	r24, 0xD4	; 212
   149e4:	93 e0       	ldi	r25, 0x03	; 3
   149e6:	e0 ed       	ldi	r30, 0xD0	; 208
   149e8:	ff e0       	ldi	r31, 0x0F	; 15
   149ea:	df 01       	movw	r26, r30
   149ec:	9c 01       	movw	r18, r24
   149ee:	1d 92       	st	X+, r1
   149f0:	21 50       	subi	r18, 0x01	; 1
   149f2:	30 40       	sbci	r19, 0x00	; 0
   149f4:	e1 f7       	brne	.-8      	; 0x149ee <_Z12Pub_Sub_DataPcPhjh+0x2236>
   149f6:	0f 90       	pop	r0
   149f8:	0f 90       	pop	r0
   149fa:	0f 90       	pop	r0
   149fc:	0f 90       	pop	r0
   149fe:	0f 90       	pop	r0
   14a00:	0f 90       	pop	r0
   14a02:	11 c0       	rjmp	.+34     	; 0x14a26 <_Z12Pub_Sub_DataPcPhjh+0x226e>
   14a04:	e9 2d       	mov	r30, r9
   14a06:	f0 e0       	ldi	r31, 0x00	; 0
   14a08:	e2 5e       	subi	r30, 0xE2	; 226
   14a0a:	f6 4f       	sbci	r31, 0xF6	; 246
   14a0c:	15 ae       	std	Z+61, r1	; 0x3d
   14a0e:	93 94       	inc	r9
   14a10:	3e e0       	ldi	r19, 0x0E	; 14
   14a12:	93 12       	cpse	r9, r19
   14a14:	f7 cf       	rjmp	.-18     	; 0x14a04 <_Z12Pub_Sub_DataPcPhjh+0x224c>
   14a16:	6d cd       	rjmp	.-1318   	; 0x144f2 <_Z12Pub_Sub_DataPcPhjh+0x1d3a>
   14a18:	b1 e0       	ldi	r27, 0x01	; 1
   14a1a:	c0 55       	subi	r28, 0x50	; 80
   14a1c:	d9 4f       	sbci	r29, 0xF9	; 249
   14a1e:	b8 83       	st	Y, r27
   14a20:	c0 5b       	subi	r28, 0xB0	; 176
   14a22:	d6 40       	sbci	r29, 0x06	; 6
   14a24:	a8 ce       	rjmp	.-688    	; 0x14776 <_Z12Pub_Sub_DataPcPhjh+0x1fbe>
   14a26:	c2 54       	subi	r28, 0x42	; 66
   14a28:	d9 4f       	sbci	r29, 0xF9	; 249
   14a2a:	0f b6       	in	r0, 0x3f	; 63
   14a2c:	f8 94       	cli
   14a2e:	de bf       	out	0x3e, r29	; 62
   14a30:	0f be       	out	0x3f, r0	; 63
   14a32:	cd bf       	out	0x3d, r28	; 61
   14a34:	df 91       	pop	r29
   14a36:	cf 91       	pop	r28
   14a38:	1f 91       	pop	r17
   14a3a:	0f 91       	pop	r16
   14a3c:	ff 90       	pop	r15
   14a3e:	ef 90       	pop	r14
   14a40:	df 90       	pop	r13
   14a42:	cf 90       	pop	r12
   14a44:	bf 90       	pop	r11
   14a46:	af 90       	pop	r10
   14a48:	9f 90       	pop	r9
   14a4a:	8f 90       	pop	r8
   14a4c:	7f 90       	pop	r7
   14a4e:	6f 90       	pop	r6
   14a50:	5f 90       	pop	r5
   14a52:	4f 90       	pop	r4
   14a54:	3f 90       	pop	r3
   14a56:	2f 90       	pop	r2
   14a58:	08 95       	ret

00014a5a <_Z12Publish_Datav>:
   14a5a:	6f 92       	push	r6
   14a5c:	7f 92       	push	r7
   14a5e:	8f 92       	push	r8
   14a60:	9f 92       	push	r9
   14a62:	af 92       	push	r10
   14a64:	bf 92       	push	r11
   14a66:	cf 92       	push	r12
   14a68:	df 92       	push	r13
   14a6a:	ef 92       	push	r14
   14a6c:	ff 92       	push	r15
   14a6e:	0f 93       	push	r16
   14a70:	1f 93       	push	r17
   14a72:	cf 93       	push	r28
   14a74:	df 93       	push	r29
   14a76:	cd b7       	in	r28, 0x3d	; 61
   14a78:	de b7       	in	r29, 0x3e	; 62
   14a7a:	c4 5f       	subi	r28, 0xF4	; 244
   14a7c:	d1 40       	sbci	r29, 0x01	; 1
   14a7e:	0f b6       	in	r0, 0x3f	; 63
   14a80:	f8 94       	cli
   14a82:	de bf       	out	0x3e, r29	; 62
   14a84:	0f be       	out	0x3f, r0	; 63
   14a86:	cd bf       	out	0x3d, r28	; 61
   14a88:	82 e0       	ldi	r24, 0x02	; 2
   14a8a:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14a8e:	ce 01       	movw	r24, r28
   14a90:	09 96       	adiw	r24, 0x09	; 9
   14a92:	9c 83       	std	Y+4, r25	; 0x04
   14a94:	8b 83       	std	Y+3, r24	; 0x03
   14a96:	8e e0       	ldi	r24, 0x0E	; 14
   14a98:	91 e0       	ldi	r25, 0x01	; 1
   14a9a:	9e 83       	std	Y+6, r25	; 0x06
   14a9c:	8d 83       	std	Y+5, r24	; 0x05
   14a9e:	18 86       	std	Y+8, r1	; 0x08
   14aa0:	1f 82       	std	Y+7, r1	; 0x07
   14aa2:	89 ed       	ldi	r24, 0xD9	; 217
   14aa4:	97 e0       	ldi	r25, 0x07	; 7
   14aa6:	9a 83       	std	Y+2, r25	; 0x02
   14aa8:	89 83       	std	Y+1, r24	; 0x01
   14aaa:	ce 01       	movw	r24, r28
   14aac:	01 96       	adiw	r24, 0x01	; 1
   14aae:	0e 94 60 86 	call	0x10cc0	; 0x10cc0 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   14ab2:	8c 01       	movw	r16, r24
   14ab4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14ab8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14abc:	81 ff       	sbrs	r24, 1
   14abe:	69 c0       	rjmp	.+210    	; 0x14b92 <_Z12Publish_Datav+0x138>
   14ac0:	7e 01       	movw	r14, r28
   14ac2:	29 ee       	ldi	r18, 0xE9	; 233
   14ac4:	e2 1a       	sub	r14, r18
   14ac6:	2e ef       	ldi	r18, 0xFE	; 254
   14ac8:	f2 0a       	sbc	r15, r18
   14aca:	8c ed       	ldi	r24, 0xDC	; 220
   14acc:	d7 01       	movw	r26, r14
   14ace:	1d 92       	st	X+, r1
   14ad0:	8a 95       	dec	r24
   14ad2:	e9 f7       	brne	.-6      	; 0x14ace <_Z12Publish_Datav+0x74>
   14ad4:	4c ea       	ldi	r20, 0xAC	; 172
   14ad6:	53 e1       	ldi	r21, 0x13	; 19
   14ad8:	62 e1       	ldi	r22, 0x12	; 18
   14ada:	73 e3       	ldi	r23, 0x33	; 51
   14adc:	c8 01       	movw	r24, r16
   14ade:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14ae2:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   14ae6:	82 30       	cpi	r24, 0x02	; 2
   14ae8:	80 f0       	brcs	.+32     	; 0x14b0a <_Z12Publish_Datav+0xb0>
   14aea:	90 e0       	ldi	r25, 0x00	; 0
   14aec:	02 97       	sbiw	r24, 0x02	; 2
   14aee:	2b e0       	ldi	r18, 0x0B	; 11
   14af0:	28 9f       	mul	r18, r24
   14af2:	a0 01       	movw	r20, r0
   14af4:	29 9f       	mul	r18, r25
   14af6:	50 0d       	add	r21, r0
   14af8:	11 24       	eor	r1, r1
   14afa:	44 50       	subi	r20, 0x04	; 4
   14afc:	54 4f       	sbci	r21, 0xF4	; 244
   14afe:	6d e0       	ldi	r22, 0x0D	; 13
   14b00:	73 e3       	ldi	r23, 0x33	; 51
   14b02:	c8 01       	movw	r24, r16
   14b04:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14b08:	0e c0       	rjmp	.+28     	; 0x14b26 <_Z12Publish_Datav+0xcc>
   14b0a:	cd 50       	subi	r28, 0x0D	; 13
   14b0c:	de 4f       	sbci	r29, 0xFE	; 254
   14b0e:	19 82       	std	Y+1, r1	; 0x01
   14b10:	18 82       	st	Y, r1
   14b12:	c3 5f       	subi	r28, 0xF3	; 243
   14b14:	d1 40       	sbci	r29, 0x01	; 1
   14b16:	ae 01       	movw	r20, r28
   14b18:	4d 50       	subi	r20, 0x0D	; 13
   14b1a:	5e 4f       	sbci	r21, 0xFE	; 254
   14b1c:	68 e0       	ldi	r22, 0x08	; 8
   14b1e:	73 e3       	ldi	r23, 0x33	; 51
   14b20:	c8 01       	movw	r24, r16
   14b22:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14b26:	4c ed       	ldi	r20, 0xDC	; 220
   14b28:	50 e0       	ldi	r21, 0x00	; 0
   14b2a:	b7 01       	movw	r22, r14
   14b2c:	c8 01       	movw	r24, r16
   14b2e:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14b32:	e2 e6       	ldi	r30, 0x62	; 98
   14b34:	ff e0       	ldi	r31, 0x0F	; 15
   14b36:	8e e6       	ldi	r24, 0x6E	; 110
   14b38:	df 01       	movw	r26, r30
   14b3a:	1d 92       	st	X+, r1
   14b3c:	8a 95       	dec	r24
   14b3e:	e9 f7       	brne	.-6      	; 0x14b3a <_Z12Publish_Datav+0xe0>
   14b40:	8e ec       	ldi	r24, 0xCE	; 206
   14b42:	93 e1       	ldi	r25, 0x13	; 19
   14b44:	9f 93       	push	r25
   14b46:	8f 93       	push	r24
   14b48:	8c e2       	ldi	r24, 0x2C	; 44
   14b4a:	97 e0       	ldi	r25, 0x07	; 7
   14b4c:	9f 93       	push	r25
   14b4e:	8f 93       	push	r24
   14b50:	ff 93       	push	r31
   14b52:	ef 93       	push	r30
   14b54:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   14b58:	0f 90       	pop	r0
   14b5a:	0f 90       	pop	r0
   14b5c:	0f 90       	pop	r0
   14b5e:	0f 90       	pop	r0
   14b60:	0f 90       	pop	r0
   14b62:	0f 90       	pop	r0
   14b64:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14b68:	88 23       	and	r24, r24
   14b6a:	69 f0       	breq	.+26     	; 0x14b86 <_Z12Publish_Datav+0x12c>
   14b6c:	b7 01       	movw	r22, r14
   14b6e:	82 e6       	ldi	r24, 0x62	; 98
   14b70:	9f e0       	ldi	r25, 0x0F	; 15
   14b72:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   14b76:	81 11       	cpse	r24, r1
   14b78:	06 c0       	rjmp	.+12     	; 0x14b86 <_Z12Publish_Datav+0x12c>
   14b7a:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14b7e:	81 50       	subi	r24, 0x01	; 1
   14b80:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14b84:	ef cf       	rjmp	.-34     	; 0x14b64 <_Z12Publish_Datav+0x10a>
   14b86:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14b8a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14b8e:	8d 7f       	andi	r24, 0xFD	; 253
   14b90:	a5 c0       	rjmp	.+330    	; 0x14cdc <_Z12Publish_Datav+0x282>
   14b92:	83 ff       	sbrs	r24, 3
   14b94:	a9 c0       	rjmp	.+338    	; 0x14ce8 <_Z12Publish_Datav+0x28e>
   14b96:	7e 01       	movw	r14, r28
   14b98:	b9 ee       	ldi	r27, 0xE9	; 233
   14b9a:	eb 1a       	sub	r14, r27
   14b9c:	be ef       	ldi	r27, 0xFE	; 254
   14b9e:	fb 0a       	sbc	r15, r27
   14ba0:	8c ed       	ldi	r24, 0xDC	; 220
   14ba2:	f7 01       	movw	r30, r14
   14ba4:	11 92       	st	Z+, r1
   14ba6:	8a 95       	dec	r24
   14ba8:	e9 f7       	brne	.-6      	; 0x14ba4 <_Z12Publish_Datav+0x14a>
   14baa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14bae:	81 30       	cpi	r24, 0x01	; 1
   14bb0:	51 f4       	brne	.+20     	; 0x14bc6 <_Z12Publish_Datav+0x16c>
   14bb2:	63 ef       	ldi	r22, 0xF3	; 243
   14bb4:	72 e3       	ldi	r23, 0x32	; 50
   14bb6:	86 ec       	ldi	r24, 0xC6	; 198
   14bb8:	94 e1       	ldi	r25, 0x14	; 20
   14bba:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14bbe:	86 ec       	ldi	r24, 0xC6	; 198
   14bc0:	94 e1       	ldi	r25, 0x14	; 20
   14bc2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14bc6:	8a e0       	ldi	r24, 0x0A	; 10
   14bc8:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   14bcc:	21 e0       	ldi	r18, 0x01	; 1
   14bce:	89 2b       	or	r24, r25
   14bd0:	09 f0       	breq	.+2      	; 0x14bd4 <_Z12Publish_Datav+0x17a>
   14bd2:	20 e0       	ldi	r18, 0x00	; 0
   14bd4:	cd 50       	subi	r28, 0x0D	; 13
   14bd6:	de 4f       	sbci	r29, 0xFE	; 254
   14bd8:	28 83       	st	Y, r18
   14bda:	c3 5f       	subi	r28, 0xF3	; 243
   14bdc:	d1 40       	sbci	r29, 0x01	; 1
   14bde:	ae 01       	movw	r20, r28
   14be0:	4d 50       	subi	r20, 0x0D	; 13
   14be2:	5e 4f       	sbci	r21, 0xFE	; 254
   14be4:	6b ee       	ldi	r22, 0xEB	; 235
   14be6:	72 e3       	ldi	r23, 0x32	; 50
   14be8:	c8 01       	movw	r24, r16
   14bea:	0e 94 60 8b 	call	0x116c0	; 0x116c0 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   14bee:	cd 50       	subi	r28, 0x0D	; 13
   14bf0:	de 4f       	sbci	r29, 0xFE	; 254
   14bf2:	19 82       	std	Y+1, r1	; 0x01
   14bf4:	18 82       	st	Y, r1
   14bf6:	c3 5f       	subi	r28, 0xF3	; 243
   14bf8:	d1 40       	sbci	r29, 0x01	; 1
   14bfa:	ae 01       	movw	r20, r28
   14bfc:	4d 50       	subi	r20, 0x0D	; 13
   14bfe:	5e 4f       	sbci	r21, 0xFE	; 254
   14c00:	64 ee       	ldi	r22, 0xE4	; 228
   14c02:	72 e3       	ldi	r23, 0x32	; 50
   14c04:	c8 01       	movw	r24, r16
   14c06:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14c0a:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   14c0e:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   14c12:	00 97       	sbiw	r24, 0x00	; 0
   14c14:	91 f0       	breq	.+36     	; 0x14c3a <_Z12Publish_Datav+0x1e0>
   14c16:	6c e3       	ldi	r22, 0x3C	; 60
   14c18:	70 e0       	ldi	r23, 0x00	; 0
   14c1a:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   14c1e:	6f 5f       	subi	r22, 0xFF	; 255
   14c20:	7f 4f       	sbci	r23, 0xFF	; 255
   14c22:	cd 50       	subi	r28, 0x0D	; 13
   14c24:	de 4f       	sbci	r29, 0xFE	; 254
   14c26:	79 83       	std	Y+1, r23	; 0x01
   14c28:	68 83       	st	Y, r22
   14c2a:	c3 5f       	subi	r28, 0xF3	; 243
   14c2c:	d1 40       	sbci	r29, 0x01	; 1
   14c2e:	ae 01       	movw	r20, r28
   14c30:	4d 50       	subi	r20, 0x0D	; 13
   14c32:	5e 4f       	sbci	r21, 0xFE	; 254
   14c34:	6f ed       	ldi	r22, 0xDF	; 223
   14c36:	72 e3       	ldi	r23, 0x32	; 50
   14c38:	04 c0       	rjmp	.+8      	; 0x14c42 <_Z12Publish_Datav+0x1e8>
   14c3a:	44 ec       	ldi	r20, 0xC4	; 196
   14c3c:	53 e1       	ldi	r21, 0x13	; 19
   14c3e:	6a ed       	ldi	r22, 0xDA	; 218
   14c40:	72 e3       	ldi	r23, 0x32	; 50
   14c42:	c8 01       	movw	r24, r16
   14c44:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14c48:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   14c4c:	83 30       	cpi	r24, 0x03	; 3
   14c4e:	41 f4       	brne	.+16     	; 0x14c60 <_Z12Publish_Datav+0x206>
   14c50:	45 e6       	ldi	r20, 0x65	; 101
   14c52:	54 e1       	ldi	r21, 0x14	; 20
   14c54:	65 ed       	ldi	r22, 0xD5	; 213
   14c56:	72 e3       	ldi	r23, 0x32	; 50
   14c58:	c8 01       	movw	r24, r16
   14c5a:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14c5e:	09 c0       	rjmp	.+18     	; 0x14c72 <_Z12Publish_Datav+0x218>
   14c60:	47 e7       	ldi	r20, 0x77	; 119
   14c62:	54 e1       	ldi	r21, 0x14	; 20
   14c64:	60 ed       	ldi	r22, 0xD0	; 208
   14c66:	72 e3       	ldi	r23, 0x32	; 50
   14c68:	c8 01       	movw	r24, r16
   14c6a:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14c6e:	10 92 77 14 	sts	0x1477, r1	; 0x801477 <_sRuble_Parameters+0xc9>
   14c72:	4c ed       	ldi	r20, 0xDC	; 220
   14c74:	50 e0       	ldi	r21, 0x00	; 0
   14c76:	b7 01       	movw	r22, r14
   14c78:	c8 01       	movw	r24, r16
   14c7a:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14c7e:	e2 e6       	ldi	r30, 0x62	; 98
   14c80:	ff e0       	ldi	r31, 0x0F	; 15
   14c82:	8e e6       	ldi	r24, 0x6E	; 110
   14c84:	df 01       	movw	r26, r30
   14c86:	1d 92       	st	X+, r1
   14c88:	8a 95       	dec	r24
   14c8a:	e9 f7       	brne	.-6      	; 0x14c86 <_Z12Publish_Datav+0x22c>
   14c8c:	8e ec       	ldi	r24, 0xCE	; 206
   14c8e:	93 e1       	ldi	r25, 0x13	; 19
   14c90:	9f 93       	push	r25
   14c92:	8f 93       	push	r24
   14c94:	8b e3       	ldi	r24, 0x3B	; 59
   14c96:	97 e0       	ldi	r25, 0x07	; 7
   14c98:	9f 93       	push	r25
   14c9a:	8f 93       	push	r24
   14c9c:	ff 93       	push	r31
   14c9e:	ef 93       	push	r30
   14ca0:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   14ca4:	0f 90       	pop	r0
   14ca6:	0f 90       	pop	r0
   14ca8:	0f 90       	pop	r0
   14caa:	0f 90       	pop	r0
   14cac:	0f 90       	pop	r0
   14cae:	0f 90       	pop	r0
   14cb0:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14cb4:	88 23       	and	r24, r24
   14cb6:	69 f0       	breq	.+26     	; 0x14cd2 <_Z12Publish_Datav+0x278>
   14cb8:	b7 01       	movw	r22, r14
   14cba:	82 e6       	ldi	r24, 0x62	; 98
   14cbc:	9f e0       	ldi	r25, 0x0F	; 15
   14cbe:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   14cc2:	81 11       	cpse	r24, r1
   14cc4:	06 c0       	rjmp	.+12     	; 0x14cd2 <_Z12Publish_Datav+0x278>
   14cc6:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14cca:	81 50       	subi	r24, 0x01	; 1
   14ccc:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14cd0:	ef cf       	rjmp	.-34     	; 0x14cb0 <_Z12Publish_Datav+0x256>
   14cd2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14cd6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14cda:	87 7f       	andi	r24, 0xF7	; 247
   14cdc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   14ce0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   14ce4:	0c 94 12 af 	jmp	0x15e24	; 0x15e24 <_Z12Publish_Datav+0x13ca>
   14ce8:	97 ff       	sbrs	r25, 7
   14cea:	50 c0       	rjmp	.+160    	; 0x14d8c <_Z12Publish_Datav+0x332>
   14cec:	7e 01       	movw	r14, r28
   14cee:	b9 ee       	ldi	r27, 0xE9	; 233
   14cf0:	eb 1a       	sub	r14, r27
   14cf2:	be ef       	ldi	r27, 0xFE	; 254
   14cf4:	fb 0a       	sbc	r15, r27
   14cf6:	8c ed       	ldi	r24, 0xDC	; 220
   14cf8:	f7 01       	movw	r30, r14
   14cfa:	11 92       	st	Z+, r1
   14cfc:	8a 95       	dec	r24
   14cfe:	e9 f7       	brne	.-6      	; 0x14cfa <_Z12Publish_Datav+0x2a0>
   14d00:	86 e0       	ldi	r24, 0x06	; 6
   14d02:	90 e0       	ldi	r25, 0x00	; 0
   14d04:	cd 50       	subi	r28, 0x0D	; 13
   14d06:	de 4f       	sbci	r29, 0xFE	; 254
   14d08:	99 83       	std	Y+1, r25	; 0x01
   14d0a:	88 83       	st	Y, r24
   14d0c:	c3 5f       	subi	r28, 0xF3	; 243
   14d0e:	d1 40       	sbci	r29, 0x01	; 1
   14d10:	ae 01       	movw	r20, r28
   14d12:	4d 50       	subi	r20, 0x0D	; 13
   14d14:	5e 4f       	sbci	r21, 0xFE	; 254
   14d16:	6a ec       	ldi	r22, 0xCA	; 202
   14d18:	72 e3       	ldi	r23, 0x32	; 50
   14d1a:	c8 01       	movw	r24, r16
   14d1c:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d20:	4c ed       	ldi	r20, 0xDC	; 220
   14d22:	50 e0       	ldi	r21, 0x00	; 0
   14d24:	b7 01       	movw	r22, r14
   14d26:	c8 01       	movw	r24, r16
   14d28:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14d2c:	e2 e6       	ldi	r30, 0x62	; 98
   14d2e:	ff e0       	ldi	r31, 0x0F	; 15
   14d30:	8e e6       	ldi	r24, 0x6E	; 110
   14d32:	df 01       	movw	r26, r30
   14d34:	1d 92       	st	X+, r1
   14d36:	8a 95       	dec	r24
   14d38:	e9 f7       	brne	.-6      	; 0x14d34 <_Z12Publish_Datav+0x2da>
   14d3a:	8e ec       	ldi	r24, 0xCE	; 206
   14d3c:	93 e1       	ldi	r25, 0x13	; 19
   14d3e:	9f 93       	push	r25
   14d40:	8f 93       	push	r24
   14d42:	8c e2       	ldi	r24, 0x2C	; 44
   14d44:	97 e0       	ldi	r25, 0x07	; 7
   14d46:	9f 93       	push	r25
   14d48:	8f 93       	push	r24
   14d4a:	ff 93       	push	r31
   14d4c:	ef 93       	push	r30
   14d4e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   14d52:	0f 90       	pop	r0
   14d54:	0f 90       	pop	r0
   14d56:	0f 90       	pop	r0
   14d58:	0f 90       	pop	r0
   14d5a:	0f 90       	pop	r0
   14d5c:	0f 90       	pop	r0
   14d5e:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14d62:	88 23       	and	r24, r24
   14d64:	69 f0       	breq	.+26     	; 0x14d80 <_Z12Publish_Datav+0x326>
   14d66:	b7 01       	movw	r22, r14
   14d68:	82 e6       	ldi	r24, 0x62	; 98
   14d6a:	9f e0       	ldi	r25, 0x0F	; 15
   14d6c:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   14d70:	81 11       	cpse	r24, r1
   14d72:	06 c0       	rjmp	.+12     	; 0x14d80 <_Z12Publish_Datav+0x326>
   14d74:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14d78:	81 50       	subi	r24, 0x01	; 1
   14d7a:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14d7e:	ef cf       	rjmp	.-34     	; 0x14d5e <_Z12Publish_Datav+0x304>
   14d80:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14d84:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14d88:	9f 77       	andi	r25, 0x7F	; 127
   14d8a:	a8 cf       	rjmp	.-176    	; 0x14cdc <_Z12Publish_Datav+0x282>
   14d8c:	86 ff       	sbrs	r24, 6
   14d8e:	e3 c0       	rjmp	.+454    	; 0x14f56 <_Z12Publish_Datav+0x4fc>
   14d90:	7e 01       	movw	r14, r28
   14d92:	b9 ee       	ldi	r27, 0xE9	; 233
   14d94:	eb 1a       	sub	r14, r27
   14d96:	be ef       	ldi	r27, 0xFE	; 254
   14d98:	fb 0a       	sbc	r15, r27
   14d9a:	8c ed       	ldi	r24, 0xDC	; 220
   14d9c:	f7 01       	movw	r30, r14
   14d9e:	11 92       	st	Z+, r1
   14da0:	8a 95       	dec	r24
   14da2:	e9 f7       	brne	.-6      	; 0x14d9e <_Z12Publish_Datav+0x344>
   14da4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14da8:	81 30       	cpi	r24, 0x01	; 1
   14daa:	51 f4       	brne	.+20     	; 0x14dc0 <_Z12Publish_Datav+0x366>
   14dac:	65 eb       	ldi	r22, 0xB5	; 181
   14dae:	72 e3       	ldi	r23, 0x32	; 50
   14db0:	86 ec       	ldi	r24, 0xC6	; 198
   14db2:	94 e1       	ldi	r25, 0x14	; 20
   14db4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14db8:	86 ec       	ldi	r24, 0xC6	; 198
   14dba:	94 e1       	ldi	r25, 0x14	; 20
   14dbc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14dc0:	cd 50       	subi	r28, 0x0D	; 13
   14dc2:	de 4f       	sbci	r29, 0xFE	; 254
   14dc4:	19 82       	std	Y+1, r1	; 0x01
   14dc6:	18 82       	st	Y, r1
   14dc8:	c3 5f       	subi	r28, 0xF3	; 243
   14dca:	d1 40       	sbci	r29, 0x01	; 1
   14dcc:	ae 01       	movw	r20, r28
   14dce:	4d 50       	subi	r20, 0x0D	; 13
   14dd0:	5e 4f       	sbci	r21, 0xFE	; 254
   14dd2:	6b ea       	ldi	r22, 0xAB	; 171
   14dd4:	72 e3       	ldi	r23, 0x32	; 50
   14dd6:	c8 01       	movw	r24, r16
   14dd8:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ddc:	cd 50       	subi	r28, 0x0D	; 13
   14dde:	de 4f       	sbci	r29, 0xFE	; 254
   14de0:	19 82       	std	Y+1, r1	; 0x01
   14de2:	18 82       	st	Y, r1
   14de4:	c3 5f       	subi	r28, 0xF3	; 243
   14de6:	d1 40       	sbci	r29, 0x01	; 1
   14de8:	ae 01       	movw	r20, r28
   14dea:	4d 50       	subi	r20, 0x0D	; 13
   14dec:	5e 4f       	sbci	r21, 0xFE	; 254
   14dee:	67 ea       	ldi	r22, 0xA7	; 167
   14df0:	72 e3       	ldi	r23, 0x32	; 50
   14df2:	c8 01       	movw	r24, r16
   14df4:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14df8:	cd 50       	subi	r28, 0x0D	; 13
   14dfa:	de 4f       	sbci	r29, 0xFE	; 254
   14dfc:	19 82       	std	Y+1, r1	; 0x01
   14dfe:	18 82       	st	Y, r1
   14e00:	c3 5f       	subi	r28, 0xF3	; 243
   14e02:	d1 40       	sbci	r29, 0x01	; 1
   14e04:	ae 01       	movw	r20, r28
   14e06:	4d 50       	subi	r20, 0x0D	; 13
   14e08:	5e 4f       	sbci	r21, 0xFE	; 254
   14e0a:	63 ea       	ldi	r22, 0xA3	; 163
   14e0c:	72 e3       	ldi	r23, 0x32	; 50
   14e0e:	c8 01       	movw	r24, r16
   14e10:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e14:	cd 50       	subi	r28, 0x0D	; 13
   14e16:	de 4f       	sbci	r29, 0xFE	; 254
   14e18:	19 82       	std	Y+1, r1	; 0x01
   14e1a:	18 82       	st	Y, r1
   14e1c:	c3 5f       	subi	r28, 0xF3	; 243
   14e1e:	d1 40       	sbci	r29, 0x01	; 1
   14e20:	ae 01       	movw	r20, r28
   14e22:	4d 50       	subi	r20, 0x0D	; 13
   14e24:	5e 4f       	sbci	r21, 0xFE	; 254
   14e26:	6f e9       	ldi	r22, 0x9F	; 159
   14e28:	72 e3       	ldi	r23, 0x32	; 50
   14e2a:	c8 01       	movw	r24, r16
   14e2c:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e30:	cd 50       	subi	r28, 0x0D	; 13
   14e32:	de 4f       	sbci	r29, 0xFE	; 254
   14e34:	19 82       	std	Y+1, r1	; 0x01
   14e36:	18 82       	st	Y, r1
   14e38:	c3 5f       	subi	r28, 0xF3	; 243
   14e3a:	d1 40       	sbci	r29, 0x01	; 1
   14e3c:	ae 01       	movw	r20, r28
   14e3e:	4d 50       	subi	r20, 0x0D	; 13
   14e40:	5e 4f       	sbci	r21, 0xFE	; 254
   14e42:	6b e9       	ldi	r22, 0x9B	; 155
   14e44:	72 e3       	ldi	r23, 0x32	; 50
   14e46:	c8 01       	movw	r24, r16
   14e48:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e4c:	cd 50       	subi	r28, 0x0D	; 13
   14e4e:	de 4f       	sbci	r29, 0xFE	; 254
   14e50:	19 82       	std	Y+1, r1	; 0x01
   14e52:	18 82       	st	Y, r1
   14e54:	c3 5f       	subi	r28, 0xF3	; 243
   14e56:	d1 40       	sbci	r29, 0x01	; 1
   14e58:	ae 01       	movw	r20, r28
   14e5a:	4d 50       	subi	r20, 0x0D	; 13
   14e5c:	5e 4f       	sbci	r21, 0xFE	; 254
   14e5e:	61 e9       	ldi	r22, 0x91	; 145
   14e60:	72 e3       	ldi	r23, 0x32	; 50
   14e62:	c8 01       	movw	r24, r16
   14e64:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e68:	cd 50       	subi	r28, 0x0D	; 13
   14e6a:	de 4f       	sbci	r29, 0xFE	; 254
   14e6c:	19 82       	std	Y+1, r1	; 0x01
   14e6e:	18 82       	st	Y, r1
   14e70:	c3 5f       	subi	r28, 0xF3	; 243
   14e72:	d1 40       	sbci	r29, 0x01	; 1
   14e74:	ae 01       	movw	r20, r28
   14e76:	4d 50       	subi	r20, 0x0D	; 13
   14e78:	5e 4f       	sbci	r21, 0xFE	; 254
   14e7a:	65 e8       	ldi	r22, 0x85	; 133
   14e7c:	72 e3       	ldi	r23, 0x32	; 50
   14e7e:	c8 01       	movw	r24, r16
   14e80:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e84:	cd 50       	subi	r28, 0x0D	; 13
   14e86:	de 4f       	sbci	r29, 0xFE	; 254
   14e88:	19 82       	std	Y+1, r1	; 0x01
   14e8a:	18 82       	st	Y, r1
   14e8c:	c3 5f       	subi	r28, 0xF3	; 243
   14e8e:	d1 40       	sbci	r29, 0x01	; 1
   14e90:	ae 01       	movw	r20, r28
   14e92:	4d 50       	subi	r20, 0x0D	; 13
   14e94:	5e 4f       	sbci	r21, 0xFE	; 254
   14e96:	6c e7       	ldi	r22, 0x7C	; 124
   14e98:	72 e3       	ldi	r23, 0x32	; 50
   14e9a:	c8 01       	movw	r24, r16
   14e9c:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ea0:	cd 50       	subi	r28, 0x0D	; 13
   14ea2:	de 4f       	sbci	r29, 0xFE	; 254
   14ea4:	19 82       	std	Y+1, r1	; 0x01
   14ea6:	18 82       	st	Y, r1
   14ea8:	c3 5f       	subi	r28, 0xF3	; 243
   14eaa:	d1 40       	sbci	r29, 0x01	; 1
   14eac:	ae 01       	movw	r20, r28
   14eae:	4d 50       	subi	r20, 0x0D	; 13
   14eb0:	5e 4f       	sbci	r21, 0xFE	; 254
   14eb2:	66 e7       	ldi	r22, 0x76	; 118
   14eb4:	72 e3       	ldi	r23, 0x32	; 50
   14eb6:	c8 01       	movw	r24, r16
   14eb8:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ebc:	cd 50       	subi	r28, 0x0D	; 13
   14ebe:	de 4f       	sbci	r29, 0xFE	; 254
   14ec0:	19 82       	std	Y+1, r1	; 0x01
   14ec2:	18 82       	st	Y, r1
   14ec4:	c3 5f       	subi	r28, 0xF3	; 243
   14ec6:	d1 40       	sbci	r29, 0x01	; 1
   14ec8:	ae 01       	movw	r20, r28
   14eca:	4d 50       	subi	r20, 0x0D	; 13
   14ecc:	5e 4f       	sbci	r21, 0xFE	; 254
   14ece:	61 e7       	ldi	r22, 0x71	; 113
   14ed0:	72 e3       	ldi	r23, 0x32	; 50
   14ed2:	c8 01       	movw	r24, r16
   14ed4:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ed8:	4c ed       	ldi	r20, 0xDC	; 220
   14eda:	50 e0       	ldi	r21, 0x00	; 0
   14edc:	b7 01       	movw	r22, r14
   14ede:	c8 01       	movw	r24, r16
   14ee0:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14ee4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14ee8:	81 30       	cpi	r24, 0x01	; 1
   14eea:	29 f4       	brne	.+10     	; 0x14ef6 <_Z12Publish_Datav+0x49c>
   14eec:	b7 01       	movw	r22, r14
   14eee:	86 ec       	ldi	r24, 0xC6	; 198
   14ef0:	94 e1       	ldi	r25, 0x14	; 20
   14ef2:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   14ef6:	e2 e6       	ldi	r30, 0x62	; 98
   14ef8:	ff e0       	ldi	r31, 0x0F	; 15
   14efa:	8e e6       	ldi	r24, 0x6E	; 110
   14efc:	df 01       	movw	r26, r30
   14efe:	1d 92       	st	X+, r1
   14f00:	8a 95       	dec	r24
   14f02:	e9 f7       	brne	.-6      	; 0x14efe <_Z12Publish_Datav+0x4a4>
   14f04:	83 e1       	ldi	r24, 0x13	; 19
   14f06:	97 e0       	ldi	r25, 0x07	; 7
   14f08:	9f 93       	push	r25
   14f0a:	8f 93       	push	r24
   14f0c:	83 e5       	ldi	r24, 0x53	; 83
   14f0e:	97 e0       	ldi	r25, 0x07	; 7
   14f10:	9f 93       	push	r25
   14f12:	8f 93       	push	r24
   14f14:	ff 93       	push	r31
   14f16:	ef 93       	push	r30
   14f18:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   14f1c:	0f 90       	pop	r0
   14f1e:	0f 90       	pop	r0
   14f20:	0f 90       	pop	r0
   14f22:	0f 90       	pop	r0
   14f24:	0f 90       	pop	r0
   14f26:	0f 90       	pop	r0
   14f28:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14f2c:	88 23       	and	r24, r24
   14f2e:	69 f0       	breq	.+26     	; 0x14f4a <_Z12Publish_Datav+0x4f0>
   14f30:	b7 01       	movw	r22, r14
   14f32:	82 e6       	ldi	r24, 0x62	; 98
   14f34:	9f e0       	ldi	r25, 0x0F	; 15
   14f36:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   14f3a:	81 11       	cpse	r24, r1
   14f3c:	06 c0       	rjmp	.+12     	; 0x14f4a <_Z12Publish_Datav+0x4f0>
   14f3e:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14f42:	81 50       	subi	r24, 0x01	; 1
   14f44:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   14f48:	ef cf       	rjmp	.-34     	; 0x14f28 <_Z12Publish_Datav+0x4ce>
   14f4a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   14f4e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   14f52:	8f 7b       	andi	r24, 0xBF	; 191
   14f54:	c3 ce       	rjmp	.-634    	; 0x14cdc <_Z12Publish_Datav+0x282>
   14f56:	87 ff       	sbrs	r24, 7
   14f58:	7f c0       	rjmp	.+254    	; 0x15058 <_Z12Publish_Datav+0x5fe>
   14f5a:	6e 01       	movw	r12, r28
   14f5c:	b9 ee       	ldi	r27, 0xE9	; 233
   14f5e:	cb 1a       	sub	r12, r27
   14f60:	be ef       	ldi	r27, 0xFE	; 254
   14f62:	db 0a       	sbc	r13, r27
   14f64:	8c ed       	ldi	r24, 0xDC	; 220
   14f66:	f6 01       	movw	r30, r12
   14f68:	11 92       	st	Z+, r1
   14f6a:	8a 95       	dec	r24
   14f6c:	e9 f7       	brne	.-6      	; 0x14f68 <_Z12Publish_Datav+0x50e>
   14f6e:	80 91 6e 14 	lds	r24, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14f72:	86 30       	cpi	r24, 0x06	; 6
   14f74:	08 f0       	brcs	.+2      	; 0x14f78 <_Z12Publish_Datav+0x51e>
   14f76:	6a c0       	rjmp	.+212    	; 0x1504c <_Z12Publish_Datav+0x5f2>
   14f78:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   14f7c:	81 30       	cpi	r24, 0x01	; 1
   14f7e:	51 f4       	brne	.+20     	; 0x14f94 <_Z12Publish_Datav+0x53a>
   14f80:	6b e5       	ldi	r22, 0x5B	; 91
   14f82:	72 e3       	ldi	r23, 0x32	; 50
   14f84:	86 ec       	ldi	r24, 0xC6	; 198
   14f86:	94 e1       	ldi	r25, 0x14	; 20
   14f88:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   14f8c:	86 ec       	ldi	r24, 0xC6	; 198
   14f8e:	94 e1       	ldi	r25, 0x14	; 20
   14f90:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   14f94:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14f98:	7d e0       	ldi	r23, 0x0D	; 13
   14f9a:	f7 2e       	mov	r15, r23
   14f9c:	f4 9e       	mul	r15, r20
   14f9e:	a0 01       	movw	r20, r0
   14fa0:	11 24       	eor	r1, r1
   14fa2:	40 5e       	subi	r20, 0xE0	; 224
   14fa4:	53 4f       	sbci	r21, 0xF3	; 243
   14fa6:	6f e4       	ldi	r22, 0x4F	; 79
   14fa8:	72 e3       	ldi	r23, 0x32	; 50
   14faa:	c8 01       	movw	r24, r16
   14fac:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14fb0:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14fb4:	f4 9e       	mul	r15, r20
   14fb6:	a0 01       	movw	r20, r0
   14fb8:	11 24       	eor	r1, r1
   14fba:	43 5e       	subi	r20, 0xE3	; 227
   14fbc:	53 4f       	sbci	r21, 0xF3	; 243
   14fbe:	6a e4       	ldi	r22, 0x4A	; 74
   14fc0:	72 e3       	ldi	r23, 0x32	; 50
   14fc2:	c8 01       	movw	r24, r16
   14fc4:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14fc8:	40 91 6e 14 	lds	r20, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   14fcc:	f4 9e       	mul	r15, r20
   14fce:	a0 01       	movw	r20, r0
   14fd0:	11 24       	eor	r1, r1
   14fd2:	41 5e       	subi	r20, 0xE1	; 225
   14fd4:	53 4f       	sbci	r21, 0xF3	; 243
   14fd6:	60 e4       	ldi	r22, 0x40	; 64
   14fd8:	72 e3       	ldi	r23, 0x32	; 50
   14fda:	c8 01       	movw	r24, r16
   14fdc:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14fe0:	44 ed       	ldi	r20, 0xD4	; 212
   14fe2:	53 e0       	ldi	r21, 0x03	; 3
   14fe4:	60 ed       	ldi	r22, 0xD0	; 208
   14fe6:	7f e0       	ldi	r23, 0x0F	; 15
   14fe8:	c8 01       	movw	r24, r16
   14fea:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14fee:	e2 e6       	ldi	r30, 0x62	; 98
   14ff0:	ff e0       	ldi	r31, 0x0F	; 15
   14ff2:	8e e6       	ldi	r24, 0x6E	; 110
   14ff4:	df 01       	movw	r26, r30
   14ff6:	1d 92       	st	X+, r1
   14ff8:	8a 95       	dec	r24
   14ffa:	e9 f7       	brne	.-6      	; 0x14ff6 <_Z12Publish_Datav+0x59c>
   14ffc:	80 91 6e 14 	lds	r24, 0x146E	; 0x80146e <_sRuble_Parameters+0xc0>
   15000:	f8 9e       	mul	r15, r24
   15002:	c0 01       	movw	r24, r0
   15004:	11 24       	eor	r1, r1
   15006:	8a 5e       	subi	r24, 0xEA	; 234
   15008:	93 4f       	sbci	r25, 0xF3	; 243
   1500a:	9f 93       	push	r25
   1500c:	8f 93       	push	r24
   1500e:	88 e6       	ldi	r24, 0x68	; 104
   15010:	97 e0       	ldi	r25, 0x07	; 7
   15012:	9f 93       	push	r25
   15014:	8f 93       	push	r24
   15016:	ff 93       	push	r31
   15018:	ef 93       	push	r30
   1501a:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   1501e:	0f 90       	pop	r0
   15020:	0f 90       	pop	r0
   15022:	0f 90       	pop	r0
   15024:	0f 90       	pop	r0
   15026:	0f 90       	pop	r0
   15028:	0f 90       	pop	r0
   1502a:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1502e:	88 23       	and	r24, r24
   15030:	69 f0       	breq	.+26     	; 0x1504c <_Z12Publish_Datav+0x5f2>
   15032:	b6 01       	movw	r22, r12
   15034:	82 e6       	ldi	r24, 0x62	; 98
   15036:	9f e0       	ldi	r25, 0x0F	; 15
   15038:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   1503c:	81 11       	cpse	r24, r1
   1503e:	06 c0       	rjmp	.+12     	; 0x1504c <_Z12Publish_Datav+0x5f2>
   15040:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15044:	81 50       	subi	r24, 0x01	; 1
   15046:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1504a:	ef cf       	rjmp	.-34     	; 0x1502a <_Z12Publish_Datav+0x5d0>
   1504c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   15050:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15054:	8f 77       	andi	r24, 0x7F	; 127
   15056:	42 ce       	rjmp	.-892    	; 0x14cdc <_Z12Publish_Datav+0x282>
   15058:	90 ff       	sbrs	r25, 0
   1505a:	55 c0       	rjmp	.+170    	; 0x15106 <_Z12Publish_Datav+0x6ac>
   1505c:	7e 01       	movw	r14, r28
   1505e:	b9 ee       	ldi	r27, 0xE9	; 233
   15060:	eb 1a       	sub	r14, r27
   15062:	be ef       	ldi	r27, 0xFE	; 254
   15064:	fb 0a       	sbc	r15, r27
   15066:	8c ed       	ldi	r24, 0xDC	; 220
   15068:	f7 01       	movw	r30, r14
   1506a:	11 92       	st	Z+, r1
   1506c:	8a 95       	dec	r24
   1506e:	e9 f7       	brne	.-6      	; 0x1506a <_Z12Publish_Datav+0x610>
   15070:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15074:	81 30       	cpi	r24, 0x01	; 1
   15076:	51 f4       	brne	.+20     	; 0x1508c <_Z12Publish_Datav+0x632>
   15078:	6a e2       	ldi	r22, 0x2A	; 42
   1507a:	72 e3       	ldi	r23, 0x32	; 50
   1507c:	86 ec       	ldi	r24, 0xC6	; 198
   1507e:	94 e1       	ldi	r25, 0x14	; 20
   15080:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15084:	86 ec       	ldi	r24, 0xC6	; 198
   15086:	94 e1       	ldi	r25, 0x14	; 20
   15088:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1508c:	4d e1       	ldi	r20, 0x1D	; 29
   1508e:	54 e1       	ldi	r21, 0x14	; 20
   15090:	64 e2       	ldi	r22, 0x24	; 36
   15092:	72 e3       	ldi	r23, 0x32	; 50
   15094:	c8 01       	movw	r24, r16
   15096:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1509a:	4c ed       	ldi	r20, 0xDC	; 220
   1509c:	50 e0       	ldi	r21, 0x00	; 0
   1509e:	b7 01       	movw	r22, r14
   150a0:	c8 01       	movw	r24, r16
   150a2:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   150a6:	e2 e6       	ldi	r30, 0x62	; 98
   150a8:	ff e0       	ldi	r31, 0x0F	; 15
   150aa:	8e e6       	ldi	r24, 0x6E	; 110
   150ac:	df 01       	movw	r26, r30
   150ae:	1d 92       	st	X+, r1
   150b0:	8a 95       	dec	r24
   150b2:	e9 f7       	brne	.-6      	; 0x150ae <_Z12Publish_Datav+0x654>
   150b4:	8e ec       	ldi	r24, 0xCE	; 206
   150b6:	93 e1       	ldi	r25, 0x13	; 19
   150b8:	9f 93       	push	r25
   150ba:	8f 93       	push	r24
   150bc:	8c e7       	ldi	r24, 0x7C	; 124
   150be:	97 e0       	ldi	r25, 0x07	; 7
   150c0:	9f 93       	push	r25
   150c2:	8f 93       	push	r24
   150c4:	ff 93       	push	r31
   150c6:	ef 93       	push	r30
   150c8:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   150cc:	0f 90       	pop	r0
   150ce:	0f 90       	pop	r0
   150d0:	0f 90       	pop	r0
   150d2:	0f 90       	pop	r0
   150d4:	0f 90       	pop	r0
   150d6:	0f 90       	pop	r0
   150d8:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   150dc:	88 23       	and	r24, r24
   150de:	69 f0       	breq	.+26     	; 0x150fa <_Z12Publish_Datav+0x6a0>
   150e0:	b7 01       	movw	r22, r14
   150e2:	82 e6       	ldi	r24, 0x62	; 98
   150e4:	9f e0       	ldi	r25, 0x0F	; 15
   150e6:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   150ea:	81 11       	cpse	r24, r1
   150ec:	06 c0       	rjmp	.+12     	; 0x150fa <_Z12Publish_Datav+0x6a0>
   150ee:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   150f2:	81 50       	subi	r24, 0x01	; 1
   150f4:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   150f8:	ef cf       	rjmp	.-34     	; 0x150d8 <_Z12Publish_Datav+0x67e>
   150fa:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   150fe:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15102:	9e 7f       	andi	r25, 0xFE	; 254
   15104:	eb cd       	rjmp	.-1066   	; 0x14cdc <_Z12Publish_Datav+0x282>
   15106:	94 ff       	sbrs	r25, 4
   15108:	3f c1       	rjmp	.+638    	; 0x15388 <_Z12Publish_Datav+0x92e>
   1510a:	7e 01       	movw	r14, r28
   1510c:	b9 ee       	ldi	r27, 0xE9	; 233
   1510e:	eb 1a       	sub	r14, r27
   15110:	be ef       	ldi	r27, 0xFE	; 254
   15112:	fb 0a       	sbc	r15, r27
   15114:	8c ed       	ldi	r24, 0xDC	; 220
   15116:	f7 01       	movw	r30, r14
   15118:	11 92       	st	Z+, r1
   1511a:	8a 95       	dec	r24
   1511c:	e9 f7       	brne	.-6      	; 0x15118 <_Z12Publish_Datav+0x6be>
   1511e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15122:	81 30       	cpi	r24, 0x01	; 1
   15124:	51 f4       	brne	.+20     	; 0x1513a <_Z12Publish_Datav+0x6e0>
   15126:	60 e1       	ldi	r22, 0x10	; 16
   15128:	72 e3       	ldi	r23, 0x32	; 50
   1512a:	86 ec       	ldi	r24, 0xC6	; 198
   1512c:	94 e1       	ldi	r25, 0x14	; 20
   1512e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15132:	86 ec       	ldi	r24, 0xC6	; 198
   15134:	94 e1       	ldi	r25, 0x14	; 20
   15136:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1513a:	8a e0       	ldi	r24, 0x0A	; 10
   1513c:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   15140:	21 e0       	ldi	r18, 0x01	; 1
   15142:	89 2b       	or	r24, r25
   15144:	09 f0       	breq	.+2      	; 0x15148 <_Z12Publish_Datav+0x6ee>
   15146:	20 e0       	ldi	r18, 0x00	; 0
   15148:	cd 50       	subi	r28, 0x0D	; 13
   1514a:	de 4f       	sbci	r29, 0xFE	; 254
   1514c:	28 83       	st	Y, r18
   1514e:	c3 5f       	subi	r28, 0xF3	; 243
   15150:	d1 40       	sbci	r29, 0x01	; 1
   15152:	ae 01       	movw	r20, r28
   15154:	4d 50       	subi	r20, 0x0D	; 13
   15156:	5e 4f       	sbci	r21, 0xFE	; 254
   15158:	68 e0       	ldi	r22, 0x08	; 8
   1515a:	72 e3       	ldi	r23, 0x32	; 50
   1515c:	c8 01       	movw	r24, r16
   1515e:	0e 94 60 8b 	call	0x116c0	; 0x116c0 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   15162:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   15166:	81 11       	cpse	r24, r1
   15168:	4e c0       	rjmp	.+156    	; 0x15206 <_Z12Publish_Datav+0x7ac>
   1516a:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   1516e:	88 23       	and	r24, r24
   15170:	09 f4       	brne	.+2      	; 0x15174 <_Z12Publish_Datav+0x71a>
   15172:	43 c0       	rjmp	.+134    	; 0x151fa <_Z12Publish_Datav+0x7a0>
   15174:	90 90 b6 13 	lds	r9, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   15178:	a0 90 b7 13 	lds	r10, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   1517c:	b0 90 b8 13 	lds	r11, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   15180:	c0 90 b9 13 	lds	r12, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   15184:	d0 90 ba 13 	lds	r13, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   15188:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   1518c:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   15190:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   15194:	29 2d       	mov	r18, r9
   15196:	3a 2d       	mov	r19, r10
   15198:	4b 2d       	mov	r20, r11
   1519a:	5c 2d       	mov	r21, r12
   1519c:	6d 2d       	mov	r22, r13
   1519e:	7b 2f       	mov	r23, r27
   151a0:	8f 2f       	mov	r24, r31
   151a2:	9e 2f       	mov	r25, r30
   151a4:	a2 e0       	ldi	r26, 0x02	; 2
   151a6:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
   151aa:	81 f0       	breq	.+32     	; 0x151cc <_Z12Publish_Datav+0x772>
   151ac:	a4 e0       	ldi	r26, 0x04	; 4
   151ae:	cd 50       	subi	r28, 0x0D	; 13
   151b0:	de 4f       	sbci	r29, 0xFE	; 254
   151b2:	19 82       	std	Y+1, r1	; 0x01
   151b4:	18 82       	st	Y, r1
   151b6:	c3 5f       	subi	r28, 0xF3	; 243
   151b8:	d1 40       	sbci	r29, 0x01	; 1
   151ba:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
   151be:	a1 f4       	brne	.+40     	; 0x151e8 <_Z12Publish_Datav+0x78e>
   151c0:	ae 01       	movw	r20, r28
   151c2:	4d 50       	subi	r20, 0x0D	; 13
   151c4:	5e 4f       	sbci	r21, 0xFE	; 254
   151c6:	60 e0       	ldi	r22, 0x00	; 0
   151c8:	72 e3       	ldi	r23, 0x32	; 50
   151ca:	13 c0       	rjmp	.+38     	; 0x151f2 <_Z12Publish_Datav+0x798>
   151cc:	81 e0       	ldi	r24, 0x01	; 1
   151ce:	90 e0       	ldi	r25, 0x00	; 0
   151d0:	cd 50       	subi	r28, 0x0D	; 13
   151d2:	de 4f       	sbci	r29, 0xFE	; 254
   151d4:	99 83       	std	Y+1, r25	; 0x01
   151d6:	88 83       	st	Y, r24
   151d8:	c3 5f       	subi	r28, 0xF3	; 243
   151da:	d1 40       	sbci	r29, 0x01	; 1
   151dc:	ae 01       	movw	r20, r28
   151de:	4d 50       	subi	r20, 0x0D	; 13
   151e0:	5e 4f       	sbci	r21, 0xFE	; 254
   151e2:	68 ef       	ldi	r22, 0xF8	; 248
   151e4:	71 e3       	ldi	r23, 0x31	; 49
   151e6:	05 c0       	rjmp	.+10     	; 0x151f2 <_Z12Publish_Datav+0x798>
   151e8:	ae 01       	movw	r20, r28
   151ea:	4d 50       	subi	r20, 0x0D	; 13
   151ec:	5e 4f       	sbci	r21, 0xFE	; 254
   151ee:	60 ef       	ldi	r22, 0xF0	; 240
   151f0:	71 e3       	ldi	r23, 0x31	; 49
   151f2:	c8 01       	movw	r24, r16
   151f4:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   151f8:	21 c0       	rjmp	.+66     	; 0x1523c <_Z12Publish_Datav+0x7e2>
   151fa:	8a e0       	ldi	r24, 0x0A	; 10
   151fc:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   15200:	89 2b       	or	r24, r25
   15202:	71 f4       	brne	.+28     	; 0x15220 <_Z12Publish_Datav+0x7c6>
   15204:	04 c0       	rjmp	.+8      	; 0x1520e <_Z12Publish_Datav+0x7b4>
   15206:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   1520a:	81 30       	cpi	r24, 0x01	; 1
   1520c:	49 f4       	brne	.+18     	; 0x15220 <_Z12Publish_Datav+0x7c6>
   1520e:	81 e0       	ldi	r24, 0x01	; 1
   15210:	90 e0       	ldi	r25, 0x00	; 0
   15212:	cd 50       	subi	r28, 0x0D	; 13
   15214:	de 4f       	sbci	r29, 0xFE	; 254
   15216:	99 83       	std	Y+1, r25	; 0x01
   15218:	88 83       	st	Y, r24
   1521a:	c3 5f       	subi	r28, 0xF3	; 243
   1521c:	d1 40       	sbci	r29, 0x01	; 1
   1521e:	06 c0       	rjmp	.+12     	; 0x1522c <_Z12Publish_Datav+0x7d2>
   15220:	cd 50       	subi	r28, 0x0D	; 13
   15222:	de 4f       	sbci	r29, 0xFE	; 254
   15224:	19 82       	std	Y+1, r1	; 0x01
   15226:	18 82       	st	Y, r1
   15228:	c3 5f       	subi	r28, 0xF3	; 243
   1522a:	d1 40       	sbci	r29, 0x01	; 1
   1522c:	ae 01       	movw	r20, r28
   1522e:	4d 50       	subi	r20, 0x0D	; 13
   15230:	5e 4f       	sbci	r21, 0xFE	; 254
   15232:	65 e9       	ldi	r22, 0x95	; 149
   15234:	77 e0       	ldi	r23, 0x07	; 7
   15236:	c8 01       	movw	r24, r16
   15238:	0e 94 66 8c 	call	0x118cc	; 0x118cc <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   1523c:	cd 50       	subi	r28, 0x0D	; 13
   1523e:	de 4f       	sbci	r29, 0xFE	; 254
   15240:	19 82       	std	Y+1, r1	; 0x01
   15242:	18 82       	st	Y, r1
   15244:	c3 5f       	subi	r28, 0xF3	; 243
   15246:	d1 40       	sbci	r29, 0x01	; 1
   15248:	ae 01       	movw	r20, r28
   1524a:	4d 50       	subi	r20, 0x0D	; 13
   1524c:	5e 4f       	sbci	r21, 0xFE	; 254
   1524e:	69 ee       	ldi	r22, 0xE9	; 233
   15250:	71 e3       	ldi	r23, 0x31	; 49
   15252:	c8 01       	movw	r24, r16
   15254:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15258:	40 91 73 14 	lds	r20, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   1525c:	fb e1       	ldi	r31, 0x1B	; 27
   1525e:	4f 9f       	mul	r20, r31
   15260:	a0 01       	movw	r20, r0
   15262:	11 24       	eor	r1, r1
   15264:	fa 01       	movw	r30, r20
   15266:	e8 51       	subi	r30, 0x18	; 24
   15268:	f2 4f       	sbci	r31, 0xF2	; 242
   1526a:	83 81       	ldd	r24, Z+3	; 0x03
   1526c:	94 81       	ldd	r25, Z+4	; 0x04
   1526e:	00 97       	sbiw	r24, 0x00	; 0
   15270:	29 f1       	breq	.+74     	; 0x152bc <_Z12Publish_Datav+0x862>
   15272:	6c e3       	ldi	r22, 0x3C	; 60
   15274:	70 e0       	ldi	r23, 0x00	; 0
   15276:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   1527a:	6f 5f       	subi	r22, 0xFF	; 255
   1527c:	7f 4f       	sbci	r23, 0xFF	; 255
   1527e:	cd 50       	subi	r28, 0x0D	; 13
   15280:	de 4f       	sbci	r29, 0xFE	; 254
   15282:	79 83       	std	Y+1, r23	; 0x01
   15284:	68 83       	st	Y, r22
   15286:	c3 5f       	subi	r28, 0xF3	; 243
   15288:	d1 40       	sbci	r29, 0x01	; 1
   1528a:	ae 01       	movw	r20, r28
   1528c:	4d 50       	subi	r20, 0x0D	; 13
   1528e:	5e 4f       	sbci	r21, 0xFE	; 254
   15290:	64 ee       	ldi	r22, 0xE4	; 228
   15292:	71 e3       	ldi	r23, 0x31	; 49
   15294:	c8 01       	movw	r24, r16
   15296:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1529a:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   1529e:	90 e0       	ldi	r25, 0x00	; 0
   152a0:	8b 59       	subi	r24, 0x9B	; 155
   152a2:	9f 4f       	sbci	r25, 0xFF	; 255
   152a4:	cd 50       	subi	r28, 0x0D	; 13
   152a6:	de 4f       	sbci	r29, 0xFE	; 254
   152a8:	99 83       	std	Y+1, r25	; 0x01
   152aa:	88 83       	st	Y, r24
   152ac:	c3 5f       	subi	r28, 0xF3	; 243
   152ae:	d1 40       	sbci	r29, 0x01	; 1
   152b0:	ae 01       	movw	r20, r28
   152b2:	4d 50       	subi	r20, 0x0D	; 13
   152b4:	5e 4f       	sbci	r21, 0xFE	; 254
   152b6:	6f ed       	ldi	r22, 0xDF	; 223
   152b8:	71 e3       	ldi	r23, 0x31	; 49
   152ba:	17 c0       	rjmp	.+46     	; 0x152ea <_Z12Publish_Datav+0x890>
   152bc:	45 51       	subi	r20, 0x15	; 21
   152be:	52 4f       	sbci	r21, 0xF2	; 242
   152c0:	6a ed       	ldi	r22, 0xDA	; 218
   152c2:	71 e3       	ldi	r23, 0x31	; 49
   152c4:	c8 01       	movw	r24, r16
   152c6:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   152ca:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   152ce:	90 e0       	ldi	r25, 0x00	; 0
   152d0:	8b 59       	subi	r24, 0x9B	; 155
   152d2:	9f 4f       	sbci	r25, 0xFF	; 255
   152d4:	cd 50       	subi	r28, 0x0D	; 13
   152d6:	de 4f       	sbci	r29, 0xFE	; 254
   152d8:	99 83       	std	Y+1, r25	; 0x01
   152da:	88 83       	st	Y, r24
   152dc:	c3 5f       	subi	r28, 0xF3	; 243
   152de:	d1 40       	sbci	r29, 0x01	; 1
   152e0:	ae 01       	movw	r20, r28
   152e2:	4d 50       	subi	r20, 0x0D	; 13
   152e4:	5e 4f       	sbci	r21, 0xFE	; 254
   152e6:	65 ed       	ldi	r22, 0xD5	; 213
   152e8:	71 e3       	ldi	r23, 0x31	; 49
   152ea:	c8 01       	movw	r24, r16
   152ec:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   152f0:	4c ed       	ldi	r20, 0xDC	; 220
   152f2:	50 e0       	ldi	r21, 0x00	; 0
   152f4:	b7 01       	movw	r22, r14
   152f6:	c8 01       	movw	r24, r16
   152f8:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   152fc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15300:	81 30       	cpi	r24, 0x01	; 1
   15302:	29 f4       	brne	.+10     	; 0x1530e <_Z12Publish_Datav+0x8b4>
   15304:	b7 01       	movw	r22, r14
   15306:	86 ec       	ldi	r24, 0xC6	; 198
   15308:	94 e1       	ldi	r25, 0x14	; 20
   1530a:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   1530e:	e2 e6       	ldi	r30, 0x62	; 98
   15310:	ff e0       	ldi	r31, 0x0F	; 15
   15312:	8e e6       	ldi	r24, 0x6E	; 110
   15314:	df 01       	movw	r26, r30
   15316:	1d 92       	st	X+, r1
   15318:	8a 95       	dec	r24
   1531a:	e9 f7       	brne	.-6      	; 0x15316 <_Z12Publish_Datav+0x8bc>
   1531c:	8e ec       	ldi	r24, 0xCE	; 206
   1531e:	93 e1       	ldi	r25, 0x13	; 19
   15320:	9f 93       	push	r25
   15322:	8f 93       	push	r24
   15324:	8b e3       	ldi	r24, 0x3B	; 59
   15326:	97 e0       	ldi	r25, 0x07	; 7
   15328:	9f 93       	push	r25
   1532a:	8f 93       	push	r24
   1532c:	ff 93       	push	r31
   1532e:	ef 93       	push	r30
   15330:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   15334:	0f 90       	pop	r0
   15336:	0f 90       	pop	r0
   15338:	0f 90       	pop	r0
   1533a:	0f 90       	pop	r0
   1533c:	0f 90       	pop	r0
   1533e:	0f 90       	pop	r0
   15340:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15344:	88 23       	and	r24, r24
   15346:	d1 f0       	breq	.+52     	; 0x1537c <_Z12Publish_Datav+0x922>
   15348:	b7 01       	movw	r22, r14
   1534a:	82 e6       	ldi	r24, 0x62	; 98
   1534c:	9f e0       	ldi	r25, 0x0F	; 15
   1534e:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   15352:	88 23       	and	r24, r24
   15354:	69 f0       	breq	.+26     	; 0x15370 <_Z12Publish_Datav+0x916>
   15356:	80 91 73 14 	lds	r24, 0x1473	; 0x801473 <_sRuble_Parameters+0xc5>
   1535a:	bb e1       	ldi	r27, 0x1B	; 27
   1535c:	8b 9f       	mul	r24, r27
   1535e:	f0 01       	movw	r30, r0
   15360:	11 24       	eor	r1, r1
   15362:	e8 51       	subi	r30, 0x18	; 24
   15364:	f2 4f       	sbci	r31, 0xF2	; 242
   15366:	12 8e       	std	Z+26, r1	; 0x1a
   15368:	8f 5f       	subi	r24, 0xFF	; 255
   1536a:	0e 94 26 7b 	call	0xf64c	; 0xf64c <_Z21Exra_Plot_Data_EEPROMh>
   1536e:	06 c0       	rjmp	.+12     	; 0x1537c <_Z12Publish_Datav+0x922>
   15370:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15374:	81 50       	subi	r24, 0x01	; 1
   15376:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   1537a:	e2 cf       	rjmp	.-60     	; 0x15340 <_Z12Publish_Datav+0x8e6>
   1537c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   15380:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15384:	9f 7e       	andi	r25, 0xEF	; 239
   15386:	aa cc       	rjmp	.-1708   	; 0x14cdc <_Z12Publish_Datav+0x282>
   15388:	95 ff       	sbrs	r25, 5
   1538a:	4c c1       	rjmp	.+664    	; 0x15624 <_Z12Publish_Datav+0xbca>
   1538c:	6e 01       	movw	r12, r28
   1538e:	e9 ee       	ldi	r30, 0xE9	; 233
   15390:	ce 1a       	sub	r12, r30
   15392:	ee ef       	ldi	r30, 0xFE	; 254
   15394:	de 0a       	sbc	r13, r30
   15396:	8c ed       	ldi	r24, 0xDC	; 220
   15398:	d6 01       	movw	r26, r12
   1539a:	1d 92       	st	X+, r1
   1539c:	8a 95       	dec	r24
   1539e:	e9 f7       	brne	.-6      	; 0x1539a <_Z12Publish_Datav+0x940>
   153a0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   153a4:	81 30       	cpi	r24, 0x01	; 1
   153a6:	31 f4       	brne	.+12     	; 0x153b4 <_Z12Publish_Datav+0x95a>
   153a8:	62 ec       	ldi	r22, 0xC2	; 194
   153aa:	71 e3       	ldi	r23, 0x31	; 49
   153ac:	86 ec       	ldi	r24, 0xC6	; 198
   153ae:	94 e1       	ldi	r25, 0x14	; 20
   153b0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   153b4:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   153b8:	90 e0       	ldi	r25, 0x00	; 0
   153ba:	8b 59       	subi	r24, 0x9B	; 155
   153bc:	9f 4f       	sbci	r25, 0xFF	; 255
   153be:	cd 50       	subi	r28, 0x0D	; 13
   153c0:	de 4f       	sbci	r29, 0xFE	; 254
   153c2:	99 83       	std	Y+1, r25	; 0x01
   153c4:	88 83       	st	Y, r24
   153c6:	c3 5f       	subi	r28, 0xF3	; 243
   153c8:	d1 40       	sbci	r29, 0x01	; 1
   153ca:	ae 01       	movw	r20, r28
   153cc:	4d 50       	subi	r20, 0x0D	; 13
   153ce:	5e 4f       	sbci	r21, 0xFE	; 254
   153d0:	6e eb       	ldi	r22, 0xBE	; 190
   153d2:	71 e3       	ldi	r23, 0x31	; 49
   153d4:	c8 01       	movw	r24, r16
   153d6:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   153da:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   153de:	6b e1       	ldi	r22, 0x1B	; 27
   153e0:	f6 2e       	mov	r15, r22
   153e2:	fe 9e       	mul	r15, r30
   153e4:	f0 01       	movw	r30, r0
   153e6:	11 24       	eor	r1, r1
   153e8:	e8 51       	subi	r30, 0x18	; 24
   153ea:	f2 4f       	sbci	r31, 0xF2	; 242
   153ec:	92 81       	ldd	r25, Z+2	; 0x02
   153ee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   153f2:	91 30       	cpi	r25, 0x01	; 1
   153f4:	b9 f5       	brne	.+110    	; 0x15464 <_Z12Publish_Datav+0xa0a>
   153f6:	91 8d       	ldd	r25, Z+25	; 0x19
   153f8:	91 11       	cpse	r25, r1
   153fa:	34 c0       	rjmp	.+104    	; 0x15464 <_Z12Publish_Datav+0xa0a>
   153fc:	81 30       	cpi	r24, 0x01	; 1
   153fe:	31 f5       	brne	.+76     	; 0x1544c <_Z12Publish_Datav+0x9f2>
   15400:	6d e9       	ldi	r22, 0x9D	; 157
   15402:	71 e3       	ldi	r23, 0x31	; 49
   15404:	86 ec       	ldi	r24, 0xC6	; 198
   15406:	94 e1       	ldi	r25, 0x14	; 20
   15408:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1540c:	86 ec       	ldi	r24, 0xC6	; 198
   1540e:	94 e1       	ldi	r25, 0x14	; 20
   15410:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   15414:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15418:	fe 9e       	mul	r15, r30
   1541a:	f0 01       	movw	r30, r0
   1541c:	11 24       	eor	r1, r1
   1541e:	e8 51       	subi	r30, 0x18	; 24
   15420:	f2 4f       	sbci	r31, 0xF2	; 242
   15422:	4a e0       	ldi	r20, 0x0A	; 10
   15424:	50 e0       	ldi	r21, 0x00	; 0
   15426:	62 81       	ldd	r22, Z+2	; 0x02
   15428:	86 ec       	ldi	r24, 0xC6	; 198
   1542a:	94 e1       	ldi	r25, 0x14	; 20
   1542c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   15430:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15434:	fe 9e       	mul	r15, r30
   15436:	f0 01       	movw	r30, r0
   15438:	11 24       	eor	r1, r1
   1543a:	e8 51       	subi	r30, 0x18	; 24
   1543c:	f2 4f       	sbci	r31, 0xF2	; 242
   1543e:	4a e0       	ldi	r20, 0x0A	; 10
   15440:	50 e0       	ldi	r21, 0x00	; 0
   15442:	61 8d       	ldd	r22, Z+25	; 0x19
   15444:	86 ec       	ldi	r24, 0xC6	; 198
   15446:	94 e1       	ldi	r25, 0x14	; 20
   15448:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1544c:	cd 50       	subi	r28, 0x0D	; 13
   1544e:	de 4f       	sbci	r29, 0xFE	; 254
   15450:	19 82       	std	Y+1, r1	; 0x01
   15452:	18 82       	st	Y, r1
   15454:	c3 5f       	subi	r28, 0xF3	; 243
   15456:	d1 40       	sbci	r29, 0x01	; 1
   15458:	ae 01       	movw	r20, r28
   1545a:	4d 50       	subi	r20, 0x0D	; 13
   1545c:	5e 4f       	sbci	r21, 0xFE	; 254
   1545e:	66 e9       	ldi	r22, 0x96	; 150
   15460:	71 e3       	ldi	r23, 0x31	; 49
   15462:	37 c0       	rjmp	.+110    	; 0x154d2 <_Z12Publish_Datav+0xa78>
   15464:	81 30       	cpi	r24, 0x01	; 1
   15466:	41 f5       	brne	.+80     	; 0x154b8 <_Z12Publish_Datav+0xa5e>
   15468:	64 e7       	ldi	r22, 0x74	; 116
   1546a:	71 e3       	ldi	r23, 0x31	; 49
   1546c:	86 ec       	ldi	r24, 0xC6	; 198
   1546e:	94 e1       	ldi	r25, 0x14	; 20
   15470:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15474:	86 ec       	ldi	r24, 0xC6	; 198
   15476:	94 e1       	ldi	r25, 0x14	; 20
   15478:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1547c:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15480:	5b e1       	ldi	r21, 0x1B	; 27
   15482:	f5 2e       	mov	r15, r21
   15484:	fe 9e       	mul	r15, r30
   15486:	f0 01       	movw	r30, r0
   15488:	11 24       	eor	r1, r1
   1548a:	e8 51       	subi	r30, 0x18	; 24
   1548c:	f2 4f       	sbci	r31, 0xF2	; 242
   1548e:	4a e0       	ldi	r20, 0x0A	; 10
   15490:	50 e0       	ldi	r21, 0x00	; 0
   15492:	62 81       	ldd	r22, Z+2	; 0x02
   15494:	86 ec       	ldi	r24, 0xC6	; 198
   15496:	94 e1       	ldi	r25, 0x14	; 20
   15498:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1549c:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   154a0:	fe 9e       	mul	r15, r30
   154a2:	f0 01       	movw	r30, r0
   154a4:	11 24       	eor	r1, r1
   154a6:	e8 51       	subi	r30, 0x18	; 24
   154a8:	f2 4f       	sbci	r31, 0xF2	; 242
   154aa:	4a e0       	ldi	r20, 0x0A	; 10
   154ac:	50 e0       	ldi	r21, 0x00	; 0
   154ae:	61 8d       	ldd	r22, Z+25	; 0x19
   154b0:	86 ec       	ldi	r24, 0xC6	; 198
   154b2:	94 e1       	ldi	r25, 0x14	; 20
   154b4:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   154b8:	81 e0       	ldi	r24, 0x01	; 1
   154ba:	90 e0       	ldi	r25, 0x00	; 0
   154bc:	cd 50       	subi	r28, 0x0D	; 13
   154be:	de 4f       	sbci	r29, 0xFE	; 254
   154c0:	99 83       	std	Y+1, r25	; 0x01
   154c2:	88 83       	st	Y, r24
   154c4:	c3 5f       	subi	r28, 0xF3	; 243
   154c6:	d1 40       	sbci	r29, 0x01	; 1
   154c8:	ae 01       	movw	r20, r28
   154ca:	4d 50       	subi	r20, 0x0D	; 13
   154cc:	5e 4f       	sbci	r21, 0xFE	; 254
   154ce:	6d e6       	ldi	r22, 0x6D	; 109
   154d0:	71 e3       	ldi	r23, 0x31	; 49
   154d2:	c8 01       	movw	r24, r16
   154d4:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   154d8:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   154dc:	8e ef       	ldi	r24, 0xFE	; 254
   154de:	8e 0f       	add	r24, r30
   154e0:	88 30       	cpi	r24, 0x08	; 8
   154e2:	08 f4       	brcc	.+2      	; 0x154e6 <_Z12Publish_Datav+0xa8c>
   154e4:	5c c0       	rjmp	.+184    	; 0x1559e <_Z12Publish_Datav+0xb44>
   154e6:	bb e1       	ldi	r27, 0x1B	; 27
   154e8:	eb 9f       	mul	r30, r27
   154ea:	f0 01       	movw	r30, r0
   154ec:	11 24       	eor	r1, r1
   154ee:	e8 51       	subi	r30, 0x18	; 24
   154f0:	f2 4f       	sbci	r31, 0xF2	; 242
   154f2:	82 81       	ldd	r24, Z+2	; 0x02
   154f4:	85 30       	cpi	r24, 0x05	; 5
   154f6:	71 f4       	brne	.+28     	; 0x15514 <_Z12Publish_Datav+0xaba>
   154f8:	cd 50       	subi	r28, 0x0D	; 13
   154fa:	de 4f       	sbci	r29, 0xFE	; 254
   154fc:	19 82       	std	Y+1, r1	; 0x01
   154fe:	18 82       	st	Y, r1
   15500:	c3 5f       	subi	r28, 0xF3	; 243
   15502:	d1 40       	sbci	r29, 0x01	; 1
   15504:	ae 01       	movw	r20, r28
   15506:	4d 50       	subi	r20, 0x0D	; 13
   15508:	5e 4f       	sbci	r21, 0xFE	; 254
   1550a:	66 e6       	ldi	r22, 0x66	; 102
   1550c:	71 e3       	ldi	r23, 0x31	; 49
   1550e:	c8 01       	movw	r24, r16
   15510:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15514:	e0 91 72 14 	lds	r30, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   15518:	2b e1       	ldi	r18, 0x1B	; 27
   1551a:	e2 9f       	mul	r30, r18
   1551c:	f0 01       	movw	r30, r0
   1551e:	11 24       	eor	r1, r1
   15520:	e8 51       	subi	r30, 0x18	; 24
   15522:	f2 4f       	sbci	r31, 0xF2	; 242
   15524:	82 81       	ldd	r24, Z+2	; 0x02
   15526:	84 30       	cpi	r24, 0x04	; 4
   15528:	81 f4       	brne	.+32     	; 0x1554a <_Z12Publish_Datav+0xaf0>
   1552a:	81 e0       	ldi	r24, 0x01	; 1
   1552c:	90 e0       	ldi	r25, 0x00	; 0
   1552e:	cd 50       	subi	r28, 0x0D	; 13
   15530:	de 4f       	sbci	r29, 0xFE	; 254
   15532:	99 83       	std	Y+1, r25	; 0x01
   15534:	88 83       	st	Y, r24
   15536:	c3 5f       	subi	r28, 0xF3	; 243
   15538:	d1 40       	sbci	r29, 0x01	; 1
   1553a:	ae 01       	movw	r20, r28
   1553c:	4d 50       	subi	r20, 0x0D	; 13
   1553e:	5e 4f       	sbci	r21, 0xFE	; 254
   15540:	6f e5       	ldi	r22, 0x5F	; 95
   15542:	71 e3       	ldi	r23, 0x31	; 49
   15544:	c8 01       	movw	r24, r16
   15546:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1554a:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   1554e:	81 30       	cpi	r24, 0x01	; 1
   15550:	31 f5       	brne	.+76     	; 0x1559e <_Z12Publish_Datav+0xb44>
   15552:	e0 91 08 0e 	lds	r30, 0x0E08	; 0x800e08 <_sExtra_Plot+0x20>
   15556:	f0 e0       	ldi	r31, 0x00	; 0
   15558:	e7 5c       	subi	r30, 0xC7	; 199
   1555a:	fb 4e       	sbci	r31, 0xEB	; 235
   1555c:	80 81       	ld	r24, Z
   1555e:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   15562:	89 2b       	or	r24, r25
   15564:	61 f0       	breq	.+24     	; 0x1557e <_Z12Publish_Datav+0xb24>
   15566:	cd 50       	subi	r28, 0x0D	; 13
   15568:	de 4f       	sbci	r29, 0xFE	; 254
   1556a:	19 82       	std	Y+1, r1	; 0x01
   1556c:	18 82       	st	Y, r1
   1556e:	c3 5f       	subi	r28, 0xF3	; 243
   15570:	d1 40       	sbci	r29, 0x01	; 1
   15572:	ae 01       	movw	r20, r28
   15574:	4d 50       	subi	r20, 0x0D	; 13
   15576:	5e 4f       	sbci	r21, 0xFE	; 254
   15578:	68 e5       	ldi	r22, 0x58	; 88
   1557a:	71 e3       	ldi	r23, 0x31	; 49
   1557c:	0d c0       	rjmp	.+26     	; 0x15598 <_Z12Publish_Datav+0xb3e>
   1557e:	81 e0       	ldi	r24, 0x01	; 1
   15580:	90 e0       	ldi	r25, 0x00	; 0
   15582:	cd 50       	subi	r28, 0x0D	; 13
   15584:	de 4f       	sbci	r29, 0xFE	; 254
   15586:	99 83       	std	Y+1, r25	; 0x01
   15588:	88 83       	st	Y, r24
   1558a:	c3 5f       	subi	r28, 0xF3	; 243
   1558c:	d1 40       	sbci	r29, 0x01	; 1
   1558e:	ae 01       	movw	r20, r28
   15590:	4d 50       	subi	r20, 0x0D	; 13
   15592:	5e 4f       	sbci	r21, 0xFE	; 254
   15594:	61 e5       	ldi	r22, 0x51	; 81
   15596:	71 e3       	ldi	r23, 0x31	; 49
   15598:	c8 01       	movw	r24, r16
   1559a:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1559e:	4c ed       	ldi	r20, 0xDC	; 220
   155a0:	50 e0       	ldi	r21, 0x00	; 0
   155a2:	b6 01       	movw	r22, r12
   155a4:	c8 01       	movw	r24, r16
   155a6:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   155aa:	e2 e6       	ldi	r30, 0x62	; 98
   155ac:	ff e0       	ldi	r31, 0x0F	; 15
   155ae:	8e e6       	ldi	r24, 0x6E	; 110
   155b0:	df 01       	movw	r26, r30
   155b2:	1d 92       	st	X+, r1
   155b4:	8a 95       	dec	r24
   155b6:	e9 f7       	brne	.-6      	; 0x155b2 <_Z12Publish_Datav+0xb58>
   155b8:	8e ec       	ldi	r24, 0xCE	; 206
   155ba:	93 e1       	ldi	r25, 0x13	; 19
   155bc:	9f 93       	push	r25
   155be:	8f 93       	push	r24
   155c0:	8d e9       	ldi	r24, 0x9D	; 157
   155c2:	97 e0       	ldi	r25, 0x07	; 7
   155c4:	9f 93       	push	r25
   155c6:	8f 93       	push	r24
   155c8:	ff 93       	push	r31
   155ca:	ef 93       	push	r30
   155cc:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   155d0:	0f 90       	pop	r0
   155d2:	0f 90       	pop	r0
   155d4:	0f 90       	pop	r0
   155d6:	0f 90       	pop	r0
   155d8:	0f 90       	pop	r0
   155da:	0f 90       	pop	r0
   155dc:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   155e0:	88 23       	and	r24, r24
   155e2:	d1 f0       	breq	.+52     	; 0x15618 <_Z12Publish_Datav+0xbbe>
   155e4:	b6 01       	movw	r22, r12
   155e6:	82 e6       	ldi	r24, 0x62	; 98
   155e8:	9f e0       	ldi	r25, 0x0F	; 15
   155ea:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   155ee:	88 23       	and	r24, r24
   155f0:	69 f0       	breq	.+26     	; 0x1560c <_Z12Publish_Datav+0xbb2>
   155f2:	80 91 72 14 	lds	r24, 0x1472	; 0x801472 <_sRuble_Parameters+0xc4>
   155f6:	bb e1       	ldi	r27, 0x1B	; 27
   155f8:	8b 9f       	mul	r24, r27
   155fa:	f0 01       	movw	r30, r0
   155fc:	11 24       	eor	r1, r1
   155fe:	e8 51       	subi	r30, 0x18	; 24
   15600:	f2 4f       	sbci	r31, 0xF2	; 242
   15602:	12 8e       	std	Z+26, r1	; 0x1a
   15604:	8f 5f       	subi	r24, 0xFF	; 255
   15606:	0e 94 26 7b 	call	0xf64c	; 0xf64c <_Z21Exra_Plot_Data_EEPROMh>
   1560a:	06 c0       	rjmp	.+12     	; 0x15618 <_Z12Publish_Datav+0xbbe>
   1560c:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15610:	81 50       	subi	r24, 0x01	; 1
   15612:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15616:	e2 cf       	rjmp	.-60     	; 0x155dc <_Z12Publish_Datav+0xb82>
   15618:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1561c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15620:	9f 7d       	andi	r25, 0xDF	; 223
   15622:	5c cb       	rjmp	.-2376   	; 0x14cdc <_Z12Publish_Datav+0x282>
   15624:	82 ff       	sbrs	r24, 2
   15626:	b0 c1       	rjmp	.+864    	; 0x15988 <_Z12Publish_Datav+0xf2e>
   15628:	7e 01       	movw	r14, r28
   1562a:	e9 ee       	ldi	r30, 0xE9	; 233
   1562c:	ee 1a       	sub	r14, r30
   1562e:	ee ef       	ldi	r30, 0xFE	; 254
   15630:	fe 0a       	sbc	r15, r30
   15632:	8c ed       	ldi	r24, 0xDC	; 220
   15634:	d7 01       	movw	r26, r14
   15636:	1d 92       	st	X+, r1
   15638:	8a 95       	dec	r24
   1563a:	e9 f7       	brne	.-6      	; 0x15636 <_Z12Publish_Datav+0xbdc>
   1563c:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   15640:	81 11       	cpse	r24, r1
   15642:	4e c0       	rjmp	.+156    	; 0x156e0 <_Z12Publish_Datav+0xc86>
   15644:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   15648:	88 23       	and	r24, r24
   1564a:	09 f4       	brne	.+2      	; 0x1564e <_Z12Publish_Datav+0xbf4>
   1564c:	43 c0       	rjmp	.+134    	; 0x156d4 <_Z12Publish_Datav+0xc7a>
   1564e:	90 90 b6 13 	lds	r9, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   15652:	a0 90 b7 13 	lds	r10, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   15656:	b0 90 b8 13 	lds	r11, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   1565a:	c0 90 b9 13 	lds	r12, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   1565e:	d0 90 ba 13 	lds	r13, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   15662:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   15666:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   1566a:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   1566e:	29 2d       	mov	r18, r9
   15670:	3a 2d       	mov	r19, r10
   15672:	4b 2d       	mov	r20, r11
   15674:	5c 2d       	mov	r21, r12
   15676:	6d 2d       	mov	r22, r13
   15678:	7b 2f       	mov	r23, r27
   1567a:	8f 2f       	mov	r24, r31
   1567c:	9e 2f       	mov	r25, r30
   1567e:	a2 e0       	ldi	r26, 0x02	; 2
   15680:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
   15684:	81 f0       	breq	.+32     	; 0x156a6 <_Z12Publish_Datav+0xc4c>
   15686:	a4 e0       	ldi	r26, 0x04	; 4
   15688:	cd 50       	subi	r28, 0x0D	; 13
   1568a:	de 4f       	sbci	r29, 0xFE	; 254
   1568c:	19 82       	std	Y+1, r1	; 0x01
   1568e:	18 82       	st	Y, r1
   15690:	c3 5f       	subi	r28, 0xF3	; 243
   15692:	d1 40       	sbci	r29, 0x01	; 1
   15694:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
   15698:	a1 f4       	brne	.+40     	; 0x156c2 <_Z12Publish_Datav+0xc68>
   1569a:	ae 01       	movw	r20, r28
   1569c:	4d 50       	subi	r20, 0x0D	; 13
   1569e:	5e 4f       	sbci	r21, 0xFE	; 254
   156a0:	69 e4       	ldi	r22, 0x49	; 73
   156a2:	71 e3       	ldi	r23, 0x31	; 49
   156a4:	13 c0       	rjmp	.+38     	; 0x156cc <_Z12Publish_Datav+0xc72>
   156a6:	81 e0       	ldi	r24, 0x01	; 1
   156a8:	90 e0       	ldi	r25, 0x00	; 0
   156aa:	cd 50       	subi	r28, 0x0D	; 13
   156ac:	de 4f       	sbci	r29, 0xFE	; 254
   156ae:	99 83       	std	Y+1, r25	; 0x01
   156b0:	88 83       	st	Y, r24
   156b2:	c3 5f       	subi	r28, 0xF3	; 243
   156b4:	d1 40       	sbci	r29, 0x01	; 1
   156b6:	ae 01       	movw	r20, r28
   156b8:	4d 50       	subi	r20, 0x0D	; 13
   156ba:	5e 4f       	sbci	r21, 0xFE	; 254
   156bc:	61 e4       	ldi	r22, 0x41	; 65
   156be:	71 e3       	ldi	r23, 0x31	; 49
   156c0:	05 c0       	rjmp	.+10     	; 0x156cc <_Z12Publish_Datav+0xc72>
   156c2:	ae 01       	movw	r20, r28
   156c4:	4d 50       	subi	r20, 0x0D	; 13
   156c6:	5e 4f       	sbci	r21, 0xFE	; 254
   156c8:	69 e3       	ldi	r22, 0x39	; 57
   156ca:	71 e3       	ldi	r23, 0x31	; 49
   156cc:	c8 01       	movw	r24, r16
   156ce:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   156d2:	21 c0       	rjmp	.+66     	; 0x15716 <_Z12Publish_Datav+0xcbc>
   156d4:	8a e0       	ldi	r24, 0x0A	; 10
   156d6:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   156da:	89 2b       	or	r24, r25
   156dc:	71 f4       	brne	.+28     	; 0x156fa <_Z12Publish_Datav+0xca0>
   156de:	04 c0       	rjmp	.+8      	; 0x156e8 <_Z12Publish_Datav+0xc8e>
   156e0:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   156e4:	81 30       	cpi	r24, 0x01	; 1
   156e6:	49 f4       	brne	.+18     	; 0x156fa <_Z12Publish_Datav+0xca0>
   156e8:	81 e0       	ldi	r24, 0x01	; 1
   156ea:	90 e0       	ldi	r25, 0x00	; 0
   156ec:	cd 50       	subi	r28, 0x0D	; 13
   156ee:	de 4f       	sbci	r29, 0xFE	; 254
   156f0:	99 83       	std	Y+1, r25	; 0x01
   156f2:	88 83       	st	Y, r24
   156f4:	c3 5f       	subi	r28, 0xF3	; 243
   156f6:	d1 40       	sbci	r29, 0x01	; 1
   156f8:	06 c0       	rjmp	.+12     	; 0x15706 <_Z12Publish_Datav+0xcac>
   156fa:	cd 50       	subi	r28, 0x0D	; 13
   156fc:	de 4f       	sbci	r29, 0xFE	; 254
   156fe:	19 82       	std	Y+1, r1	; 0x01
   15700:	18 82       	st	Y, r1
   15702:	c3 5f       	subi	r28, 0xF3	; 243
   15704:	d1 40       	sbci	r29, 0x01	; 1
   15706:	ae 01       	movw	r20, r28
   15708:	4d 50       	subi	r20, 0x0D	; 13
   1570a:	5e 4f       	sbci	r21, 0xFE	; 254
   1570c:	65 e9       	ldi	r22, 0x95	; 149
   1570e:	77 e0       	ldi	r23, 0x07	; 7
   15710:	c8 01       	movw	r24, r16
   15712:	0e 94 66 8c 	call	0x118cc	; 0x118cc <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15716:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1571a:	cd 50       	subi	r28, 0x0D	; 13
   1571c:	de 4f       	sbci	r29, 0xFE	; 254
   1571e:	88 83       	st	Y, r24
   15720:	c3 5f       	subi	r28, 0xF3	; 243
   15722:	d1 40       	sbci	r29, 0x01	; 1
   15724:	ae 01       	movw	r20, r28
   15726:	4d 50       	subi	r20, 0x0D	; 13
   15728:	5e 4f       	sbci	r21, 0xFE	; 254
   1572a:	64 e3       	ldi	r22, 0x34	; 52
   1572c:	71 e3       	ldi	r23, 0x31	; 49
   1572e:	c8 01       	movw	r24, r16
   15730:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15734:	61 e2       	ldi	r22, 0x21	; 33
   15736:	71 e3       	ldi	r23, 0x31	; 49
   15738:	c8 01       	movw	r24, r16
   1573a:	0e 94 e5 8a 	call	0x115ca	; 0x115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1573e:	6c 01       	movw	r12, r24
   15740:	89 2b       	or	r24, r25
   15742:	91 f4       	brne	.+36     	; 0x15768 <_Z12Publish_Datav+0xd0e>
   15744:	c8 01       	movw	r24, r16
   15746:	0e 94 09 8b 	call	0x11612	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1574a:	6c 01       	movw	r12, r24
   1574c:	00 97       	sbiw	r24, 0x00	; 0
   1574e:	d9 f0       	breq	.+54     	; 0x15786 <_Z12Publish_Datav+0xd2c>
   15750:	41 e2       	ldi	r20, 0x21	; 33
   15752:	51 e3       	ldi	r21, 0x31	; 49
   15754:	bc 01       	movw	r22, r24
   15756:	6e 5f       	subi	r22, 0xFE	; 254
   15758:	7f 4f       	sbci	r23, 0xFF	; 255
   1575a:	f8 01       	movw	r30, r16
   1575c:	80 81       	ld	r24, Z
   1575e:	91 81       	ldd	r25, Z+1	; 0x01
   15760:	0e 94 2a 8b 	call	0x11654	; 0x11654 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   15764:	88 23       	and	r24, r24
   15766:	79 f0       	breq	.+30     	; 0x15786 <_Z12Publish_Datav+0xd2c>
   15768:	80 91 a8 13 	lds	r24, 0x13A8	; 0x8013a8 <_sPump_Parameter+0x4>
   1576c:	90 91 a9 13 	lds	r25, 0x13A9	; 0x8013a9 <_sPump_Parameter+0x5>
   15770:	a0 91 aa 13 	lds	r26, 0x13AA	; 0x8013aa <_sPump_Parameter+0x6>
   15774:	b0 91 ab 13 	lds	r27, 0x13AB	; 0x8013ab <_sPump_Parameter+0x7>
   15778:	28 e0       	ldi	r18, 0x08	; 8
   1577a:	f6 01       	movw	r30, r12
   1577c:	24 83       	std	Z+4, r18	; 0x04
   1577e:	85 83       	std	Z+5, r24	; 0x05
   15780:	96 83       	std	Z+6, r25	; 0x06
   15782:	a7 83       	std	Z+7, r26	; 0x07
   15784:	b0 87       	std	Z+8, r27	; 0x08
   15786:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1578a:	82 30       	cpi	r24, 0x02	; 2
   1578c:	41 f0       	breq	.+16     	; 0x1579e <_Z12Publish_Datav+0xd44>
   1578e:	4e e1       	ldi	r20, 0x1E	; 30
   15790:	54 e1       	ldi	r21, 0x14	; 20
   15792:	6c e1       	ldi	r22, 0x1C	; 28
   15794:	71 e3       	ldi	r23, 0x31	; 49
   15796:	c8 01       	movw	r24, r16
   15798:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1579c:	0e c0       	rjmp	.+28     	; 0x157ba <_Z12Publish_Datav+0xd60>
   1579e:	cd 50       	subi	r28, 0x0D	; 13
   157a0:	de 4f       	sbci	r29, 0xFE	; 254
   157a2:	19 82       	std	Y+1, r1	; 0x01
   157a4:	18 82       	st	Y, r1
   157a6:	c3 5f       	subi	r28, 0xF3	; 243
   157a8:	d1 40       	sbci	r29, 0x01	; 1
   157aa:	ae 01       	movw	r20, r28
   157ac:	4d 50       	subi	r20, 0x0D	; 13
   157ae:	5e 4f       	sbci	r21, 0xFE	; 254
   157b0:	67 e1       	ldi	r22, 0x17	; 23
   157b2:	71 e3       	ldi	r23, 0x31	; 49
   157b4:	c8 01       	movw	r24, r16
   157b6:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   157ba:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   157be:	85 30       	cpi	r24, 0x05	; 5
   157c0:	09 f0       	breq	.+2      	; 0x157c4 <_Z12Publish_Datav+0xd6a>
   157c2:	67 c0       	rjmp	.+206    	; 0x15892 <_Z12Publish_Datav+0xe38>
   157c4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   157c8:	88 23       	and	r24, r24
   157ca:	09 f4       	brne	.+2      	; 0x157ce <_Z12Publish_Datav+0xd74>
   157cc:	48 c0       	rjmp	.+144    	; 0x1585e <_Z12Publish_Datav+0xe04>
   157ce:	6e e0       	ldi	r22, 0x0E	; 14
   157d0:	71 e3       	ldi	r23, 0x31	; 49
   157d2:	c8 01       	movw	r24, r16
   157d4:	0e 94 e5 8a 	call	0x115ca	; 0x115ca <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   157d8:	6c 01       	movw	r12, r24
   157da:	89 2b       	or	r24, r25
   157dc:	91 f4       	brne	.+36     	; 0x15802 <_Z12Publish_Datav+0xda8>
   157de:	c8 01       	movw	r24, r16
   157e0:	0e 94 09 8b 	call	0x11612	; 0x11612 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   157e4:	6c 01       	movw	r12, r24
   157e6:	00 97       	sbiw	r24, 0x00	; 0
   157e8:	c1 f0       	breq	.+48     	; 0x1581a <_Z12Publish_Datav+0xdc0>
   157ea:	4e e0       	ldi	r20, 0x0E	; 14
   157ec:	51 e3       	ldi	r21, 0x31	; 49
   157ee:	bc 01       	movw	r22, r24
   157f0:	6e 5f       	subi	r22, 0xFE	; 254
   157f2:	7f 4f       	sbci	r23, 0xFF	; 255
   157f4:	d8 01       	movw	r26, r16
   157f6:	8d 91       	ld	r24, X+
   157f8:	9c 91       	ld	r25, X
   157fa:	0e 94 2a 8b 	call	0x11654	; 0x11654 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   157fe:	88 23       	and	r24, r24
   15800:	61 f0       	breq	.+24     	; 0x1581a <_Z12Publish_Datav+0xdc0>
   15802:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   15806:	94 e0       	ldi	r25, 0x04	; 4
   15808:	f6 01       	movw	r30, r12
   1580a:	94 83       	std	Z+4, r25	; 0x04
   1580c:	90 e0       	ldi	r25, 0x00	; 0
   1580e:	a0 e0       	ldi	r26, 0x00	; 0
   15810:	b0 e0       	ldi	r27, 0x00	; 0
   15812:	85 83       	std	Z+5, r24	; 0x05
   15814:	96 83       	std	Z+6, r25	; 0x06
   15816:	a7 83       	std	Z+7, r26	; 0x07
   15818:	b0 87       	std	Z+8, r27	; 0x08
   1581a:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
   1581e:	f0 e0       	ldi	r31, 0x00	; 0
   15820:	ee 0f       	add	r30, r30
   15822:	ff 1f       	adc	r31, r31
   15824:	e4 5e       	subi	r30, 0xE4	; 228
   15826:	f6 4f       	sbci	r31, 0xF6	; 246
   15828:	87 8d       	ldd	r24, Z+31	; 0x1f
   1582a:	90 a1       	ldd	r25, Z+32	; 0x20
   1582c:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
   15830:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
   15834:	82 1b       	sub	r24, r18
   15836:	93 0b       	sbc	r25, r19
   15838:	6c e3       	ldi	r22, 0x3C	; 60
   1583a:	70 e0       	ldi	r23, 0x00	; 0
   1583c:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   15840:	cd 50       	subi	r28, 0x0D	; 13
   15842:	de 4f       	sbci	r29, 0xFE	; 254
   15844:	79 83       	std	Y+1, r23	; 0x01
   15846:	68 83       	st	Y, r22
   15848:	c3 5f       	subi	r28, 0xF3	; 243
   1584a:	d1 40       	sbci	r29, 0x01	; 1
   1584c:	ae 01       	movw	r20, r28
   1584e:	4d 50       	subi	r20, 0x0D	; 13
   15850:	5e 4f       	sbci	r21, 0xFE	; 254
   15852:	6f ef       	ldi	r22, 0xFF	; 255
   15854:	70 e3       	ldi	r23, 0x30	; 48
   15856:	c8 01       	movw	r24, r16
   15858:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1585c:	36 c0       	rjmp	.+108    	; 0x158ca <_Z12Publish_Datav+0xe70>
   1585e:	cd 50       	subi	r28, 0x0D	; 13
   15860:	de 4f       	sbci	r29, 0xFE	; 254
   15862:	19 82       	std	Y+1, r1	; 0x01
   15864:	18 82       	st	Y, r1
   15866:	c3 5f       	subi	r28, 0xF3	; 243
   15868:	d1 40       	sbci	r29, 0x01	; 1
   1586a:	ae 01       	movw	r20, r28
   1586c:	4d 50       	subi	r20, 0x0D	; 13
   1586e:	5e 4f       	sbci	r21, 0xFE	; 254
   15870:	66 ef       	ldi	r22, 0xF6	; 246
   15872:	70 e3       	ldi	r23, 0x30	; 48
   15874:	c8 01       	movw	r24, r16
   15876:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1587a:	cd 50       	subi	r28, 0x0D	; 13
   1587c:	de 4f       	sbci	r29, 0xFE	; 254
   1587e:	19 82       	std	Y+1, r1	; 0x01
   15880:	18 82       	st	Y, r1
   15882:	c3 5f       	subi	r28, 0xF3	; 243
   15884:	d1 40       	sbci	r29, 0x01	; 1
   15886:	ae 01       	movw	r20, r28
   15888:	4d 50       	subi	r20, 0x0D	; 13
   1588a:	5e 4f       	sbci	r21, 0xFE	; 254
   1588c:	67 ee       	ldi	r22, 0xE7	; 231
   1588e:	70 e3       	ldi	r23, 0x30	; 48
   15890:	19 c0       	rjmp	.+50     	; 0x158c4 <_Z12Publish_Datav+0xe6a>
   15892:	cd 50       	subi	r28, 0x0D	; 13
   15894:	de 4f       	sbci	r29, 0xFE	; 254
   15896:	19 82       	std	Y+1, r1	; 0x01
   15898:	18 82       	st	Y, r1
   1589a:	c3 5f       	subi	r28, 0xF3	; 243
   1589c:	d1 40       	sbci	r29, 0x01	; 1
   1589e:	ae 01       	movw	r20, r28
   158a0:	4d 50       	subi	r20, 0x0D	; 13
   158a2:	5e 4f       	sbci	r21, 0xFE	; 254
   158a4:	6e ed       	ldi	r22, 0xDE	; 222
   158a6:	70 e3       	ldi	r23, 0x30	; 48
   158a8:	c8 01       	movw	r24, r16
   158aa:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   158ae:	cd 50       	subi	r28, 0x0D	; 13
   158b0:	de 4f       	sbci	r29, 0xFE	; 254
   158b2:	19 82       	std	Y+1, r1	; 0x01
   158b4:	18 82       	st	Y, r1
   158b6:	c3 5f       	subi	r28, 0xF3	; 243
   158b8:	d1 40       	sbci	r29, 0x01	; 1
   158ba:	ae 01       	movw	r20, r28
   158bc:	4d 50       	subi	r20, 0x0D	; 13
   158be:	5e 4f       	sbci	r21, 0xFE	; 254
   158c0:	6f ec       	ldi	r22, 0xCF	; 207
   158c2:	70 e3       	ldi	r23, 0x30	; 48
   158c4:	c8 01       	movw	r24, r16
   158c6:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   158ca:	48 e9       	ldi	r20, 0x98	; 152
   158cc:	54 e1       	ldi	r21, 0x14	; 20
   158ce:	66 ec       	ldi	r22, 0xC6	; 198
   158d0:	70 e3       	ldi	r23, 0x30	; 48
   158d2:	c8 01       	movw	r24, r16
   158d4:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   158d8:	40 e7       	ldi	r20, 0x70	; 112
   158da:	54 e1       	ldi	r21, 0x14	; 20
   158dc:	6a eb       	ldi	r22, 0xBA	; 186
   158de:	70 e3       	ldi	r23, 0x30	; 48
   158e0:	c8 01       	movw	r24, r16
   158e2:	0e 94 09 8c 	call	0x11812	; 0x11812 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   158e6:	4c ed       	ldi	r20, 0xDC	; 220
   158e8:	50 e0       	ldi	r21, 0x00	; 0
   158ea:	b7 01       	movw	r22, r14
   158ec:	c8 01       	movw	r24, r16
   158ee:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   158f2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   158f6:	81 30       	cpi	r24, 0x01	; 1
   158f8:	31 f4       	brne	.+12     	; 0x15906 <_Z12Publish_Datav+0xeac>
   158fa:	60 ed       	ldi	r22, 0xD0	; 208
   158fc:	7f e0       	ldi	r23, 0x0F	; 15
   158fe:	86 ec       	ldi	r24, 0xC6	; 198
   15900:	94 e1       	ldi	r25, 0x14	; 20
   15902:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   15906:	80 91 e2 0d 	lds	r24, 0x0DE2	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   1590a:	8f 5f       	subi	r24, 0xFF	; 255
   1590c:	80 93 e2 0d 	sts	0x0DE2, r24	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15910:	e2 e6       	ldi	r30, 0x62	; 98
   15912:	ff e0       	ldi	r31, 0x0F	; 15
   15914:	8e e6       	ldi	r24, 0x6E	; 110
   15916:	df 01       	movw	r26, r30
   15918:	1d 92       	st	X+, r1
   1591a:	8a 95       	dec	r24
   1591c:	e9 f7       	brne	.-6      	; 0x15918 <_Z12Publish_Datav+0xebe>
   1591e:	8e ec       	ldi	r24, 0xCE	; 206
   15920:	93 e1       	ldi	r25, 0x13	; 19
   15922:	9f 93       	push	r25
   15924:	8f 93       	push	r24
   15926:	86 eb       	ldi	r24, 0xB6	; 182
   15928:	97 e0       	ldi	r25, 0x07	; 7
   1592a:	9f 93       	push	r25
   1592c:	8f 93       	push	r24
   1592e:	ff 93       	push	r31
   15930:	ef 93       	push	r30
   15932:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   15936:	0f 90       	pop	r0
   15938:	0f 90       	pop	r0
   1593a:	0f 90       	pop	r0
   1593c:	0f 90       	pop	r0
   1593e:	0f 90       	pop	r0
   15940:	0f 90       	pop	r0
   15942:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15946:	88 23       	and	r24, r24
   15948:	81 f0       	breq	.+32     	; 0x1596a <_Z12Publish_Datav+0xf10>
   1594a:	b7 01       	movw	r22, r14
   1594c:	82 e6       	ldi	r24, 0x62	; 98
   1594e:	9f e0       	ldi	r25, 0x0F	; 15
   15950:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   15954:	88 23       	and	r24, r24
   15956:	19 f0       	breq	.+6      	; 0x1595e <_Z12Publish_Datav+0xf04>
   15958:	10 92 e2 0d 	sts	0x0DE2, r1	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   1595c:	06 c0       	rjmp	.+12     	; 0x1596a <_Z12Publish_Datav+0xf10>
   1595e:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15962:	81 50       	subi	r24, 0x01	; 1
   15964:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15968:	ec cf       	rjmp	.-40     	; 0x15942 <_Z12Publish_Datav+0xee8>
   1596a:	80 91 e2 0d 	lds	r24, 0x0DE2	; 0x800de2 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   1596e:	84 30       	cpi	r24, 0x04	; 4
   15970:	28 f0       	brcs	.+10     	; 0x1597c <_Z12Publish_Datav+0xf22>
   15972:	82 e0       	ldi	r24, 0x02	; 2
   15974:	80 93 20 14 	sts	0x1420, r24	; 0x801420 <_sRuble_Parameters+0x72>
   15978:	0e 94 29 81 	call	0x10252	; 0x10252 <_Z14Ping_to_Serverv>
   1597c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   15980:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   15984:	8b 7f       	andi	r24, 0xFB	; 251
   15986:	aa c9       	rjmp	.-3244   	; 0x14cdc <_Z12Publish_Datav+0x282>
   15988:	80 91 e0 0d 	lds	r24, 0x0DE0	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   1598c:	90 91 e1 0d 	lds	r25, 0x0DE1	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15990:	00 97       	sbiw	r24, 0x00	; 0
   15992:	09 f0       	breq	.+2      	; 0x15996 <_Z12Publish_Datav+0xf3c>
   15994:	42 c2       	rjmp	.+1156   	; 0x15e1a <_Z12Publish_Datav+0x13c0>
   15996:	38 ee       	ldi	r19, 0xE8	; 232
   15998:	c3 2e       	mov	r12, r19
   1599a:	3d e0       	ldi	r19, 0x0D	; 13
   1599c:	d3 2e       	mov	r13, r19
   1599e:	e1 2c       	mov	r14, r1
   159a0:	f1 2c       	mov	r15, r1
   159a2:	7e 2c       	mov	r7, r14
   159a4:	f6 01       	movw	r30, r12
   159a6:	81 81       	ldd	r24, Z+1	; 0x01
   159a8:	85 36       	cpi	r24, 0x65	; 101
   159aa:	08 f4       	brcc	.+2      	; 0x159ae <_Z12Publish_Datav+0xf54>
   159ac:	2a c2       	rjmp	.+1108   	; 0x15e02 <_Z12Publish_Datav+0x13a8>
   159ae:	62 8d       	ldd	r22, Z+26	; 0x1a
   159b0:	66 23       	and	r22, r22
   159b2:	09 f4       	brne	.+2      	; 0x159b6 <_Z12Publish_Datav+0xf5c>
   159b4:	26 c2       	rjmp	.+1100   	; 0x15e02 <_Z12Publish_Datav+0x13a8>
   159b6:	4a e0       	ldi	r20, 0x0A	; 10
   159b8:	50 e0       	ldi	r21, 0x00	; 0
   159ba:	86 ec       	ldi	r24, 0xC6	; 198
   159bc:	94 e1       	ldi	r25, 0x14	; 20
   159be:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   159c2:	d6 01       	movw	r26, r12
   159c4:	5a 96       	adiw	r26, 0x1a	; 26
   159c6:	8c 91       	ld	r24, X
   159c8:	81 30       	cpi	r24, 0x01	; 1
   159ca:	09 f4       	brne	.+2      	; 0x159ce <_Z12Publish_Datav+0xf74>
   159cc:	f8 c0       	rjmp	.+496    	; 0x15bbe <_Z12Publish_Datav+0x1164>
   159ce:	82 30       	cpi	r24, 0x02	; 2
   159d0:	09 f0       	breq	.+2      	; 0x159d4 <_Z12Publish_Datav+0xf7a>
   159d2:	17 c2       	rjmp	.+1070   	; 0x15e02 <_Z12Publish_Datav+0x13a8>
   159d4:	6e 01       	movw	r12, r28
   159d6:	b9 ee       	ldi	r27, 0xE9	; 233
   159d8:	cb 1a       	sub	r12, r27
   159da:	be ef       	ldi	r27, 0xFE	; 254
   159dc:	db 0a       	sbc	r13, r27
   159de:	8c ed       	ldi	r24, 0xDC	; 220
   159e0:	f6 01       	movw	r30, r12
   159e2:	11 92       	st	Z+, r1
   159e4:	8a 95       	dec	r24
   159e6:	e9 f7       	brne	.-6      	; 0x159e2 <_Z12Publish_Datav+0xf88>
   159e8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   159ec:	81 30       	cpi	r24, 0x01	; 1
   159ee:	51 f4       	brne	.+20     	; 0x15a04 <_Z12Publish_Datav+0xfaa>
   159f0:	6f e9       	ldi	r22, 0x9F	; 159
   159f2:	70 e3       	ldi	r23, 0x30	; 48
   159f4:	86 ec       	ldi	r24, 0xC6	; 198
   159f6:	94 e1       	ldi	r25, 0x14	; 20
   159f8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   159fc:	86 ec       	ldi	r24, 0xC6	; 198
   159fe:	94 e1       	ldi	r25, 0x14	; 20
   15a00:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   15a04:	c7 01       	movw	r24, r14
   15a06:	8b 59       	subi	r24, 0x9B	; 155
   15a08:	9f 4f       	sbci	r25, 0xFF	; 255
   15a0a:	cd 50       	subi	r28, 0x0D	; 13
   15a0c:	de 4f       	sbci	r29, 0xFE	; 254
   15a0e:	99 83       	std	Y+1, r25	; 0x01
   15a10:	88 83       	st	Y, r24
   15a12:	c3 5f       	subi	r28, 0xF3	; 243
   15a14:	d1 40       	sbci	r29, 0x01	; 1
   15a16:	ae 01       	movw	r20, r28
   15a18:	4d 50       	subi	r20, 0x0D	; 13
   15a1a:	5e 4f       	sbci	r21, 0xFE	; 254
   15a1c:	6b e9       	ldi	r22, 0x9B	; 155
   15a1e:	70 e3       	ldi	r23, 0x30	; 48
   15a20:	c8 01       	movw	r24, r16
   15a22:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15a26:	8b e1       	ldi	r24, 0x1B	; 27
   15a28:	8e 9d       	mul	r24, r14
   15a2a:	f0 01       	movw	r30, r0
   15a2c:	8f 9d       	mul	r24, r15
   15a2e:	f0 0d       	add	r31, r0
   15a30:	11 24       	eor	r1, r1
   15a32:	e8 51       	subi	r30, 0x18	; 24
   15a34:	f2 4f       	sbci	r31, 0xF2	; 242
   15a36:	82 81       	ldd	r24, Z+2	; 0x02
   15a38:	81 30       	cpi	r24, 0x01	; 1
   15a3a:	79 f4       	brne	.+30     	; 0x15a5a <_Z12Publish_Datav+0x1000>
   15a3c:	81 8d       	ldd	r24, Z+25	; 0x19
   15a3e:	81 11       	cpse	r24, r1
   15a40:	0c c0       	rjmp	.+24     	; 0x15a5a <_Z12Publish_Datav+0x1000>
   15a42:	cd 50       	subi	r28, 0x0D	; 13
   15a44:	de 4f       	sbci	r29, 0xFE	; 254
   15a46:	19 82       	std	Y+1, r1	; 0x01
   15a48:	18 82       	st	Y, r1
   15a4a:	c3 5f       	subi	r28, 0xF3	; 243
   15a4c:	d1 40       	sbci	r29, 0x01	; 1
   15a4e:	ae 01       	movw	r20, r28
   15a50:	4d 50       	subi	r20, 0x0D	; 13
   15a52:	5e 4f       	sbci	r21, 0xFE	; 254
   15a54:	64 e9       	ldi	r22, 0x94	; 148
   15a56:	70 e3       	ldi	r23, 0x30	; 48
   15a58:	0d c0       	rjmp	.+26     	; 0x15a74 <_Z12Publish_Datav+0x101a>
   15a5a:	81 e0       	ldi	r24, 0x01	; 1
   15a5c:	90 e0       	ldi	r25, 0x00	; 0
   15a5e:	cd 50       	subi	r28, 0x0D	; 13
   15a60:	de 4f       	sbci	r29, 0xFE	; 254
   15a62:	99 83       	std	Y+1, r25	; 0x01
   15a64:	88 83       	st	Y, r24
   15a66:	c3 5f       	subi	r28, 0xF3	; 243
   15a68:	d1 40       	sbci	r29, 0x01	; 1
   15a6a:	ae 01       	movw	r20, r28
   15a6c:	4d 50       	subi	r20, 0x0D	; 13
   15a6e:	5e 4f       	sbci	r21, 0xFE	; 254
   15a70:	6d e8       	ldi	r22, 0x8D	; 141
   15a72:	70 e3       	ldi	r23, 0x30	; 48
   15a74:	c8 01       	movw	r24, r16
   15a76:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15a7a:	8e ef       	ldi	r24, 0xFE	; 254
   15a7c:	87 0d       	add	r24, r7
   15a7e:	88 30       	cpi	r24, 0x08	; 8
   15a80:	08 f4       	brcc	.+2      	; 0x15a84 <_Z12Publish_Datav+0x102a>
   15a82:	64 c0       	rjmp	.+200    	; 0x15b4c <_Z12Publish_Datav+0x10f2>
   15a84:	8b e1       	ldi	r24, 0x1B	; 27
   15a86:	8e 9d       	mul	r24, r14
   15a88:	f0 01       	movw	r30, r0
   15a8a:	8f 9d       	mul	r24, r15
   15a8c:	f0 0d       	add	r31, r0
   15a8e:	11 24       	eor	r1, r1
   15a90:	e8 51       	subi	r30, 0x18	; 24
   15a92:	f2 4f       	sbci	r31, 0xF2	; 242
   15a94:	82 81       	ldd	r24, Z+2	; 0x02
   15a96:	85 30       	cpi	r24, 0x05	; 5
   15a98:	71 f4       	brne	.+28     	; 0x15ab6 <_Z12Publish_Datav+0x105c>
   15a9a:	cd 50       	subi	r28, 0x0D	; 13
   15a9c:	de 4f       	sbci	r29, 0xFE	; 254
   15a9e:	19 82       	std	Y+1, r1	; 0x01
   15aa0:	18 82       	st	Y, r1
   15aa2:	c3 5f       	subi	r28, 0xF3	; 243
   15aa4:	d1 40       	sbci	r29, 0x01	; 1
   15aa6:	ae 01       	movw	r20, r28
   15aa8:	4d 50       	subi	r20, 0x0D	; 13
   15aaa:	5e 4f       	sbci	r21, 0xFE	; 254
   15aac:	66 e8       	ldi	r22, 0x86	; 134
   15aae:	70 e3       	ldi	r23, 0x30	; 48
   15ab0:	c8 01       	movw	r24, r16
   15ab2:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15ab6:	8b e1       	ldi	r24, 0x1B	; 27
   15ab8:	8e 9d       	mul	r24, r14
   15aba:	f0 01       	movw	r30, r0
   15abc:	8f 9d       	mul	r24, r15
   15abe:	f0 0d       	add	r31, r0
   15ac0:	11 24       	eor	r1, r1
   15ac2:	e8 51       	subi	r30, 0x18	; 24
   15ac4:	f2 4f       	sbci	r31, 0xF2	; 242
   15ac6:	82 81       	ldd	r24, Z+2	; 0x02
   15ac8:	84 30       	cpi	r24, 0x04	; 4
   15aca:	81 f4       	brne	.+32     	; 0x15aec <_Z12Publish_Datav+0x1092>
   15acc:	81 e0       	ldi	r24, 0x01	; 1
   15ace:	90 e0       	ldi	r25, 0x00	; 0
   15ad0:	cd 50       	subi	r28, 0x0D	; 13
   15ad2:	de 4f       	sbci	r29, 0xFE	; 254
   15ad4:	99 83       	std	Y+1, r25	; 0x01
   15ad6:	88 83       	st	Y, r24
   15ad8:	c3 5f       	subi	r28, 0xF3	; 243
   15ada:	d1 40       	sbci	r29, 0x01	; 1
   15adc:	ae 01       	movw	r20, r28
   15ade:	4d 50       	subi	r20, 0x0D	; 13
   15ae0:	5e 4f       	sbci	r21, 0xFE	; 254
   15ae2:	6f e7       	ldi	r22, 0x7F	; 127
   15ae4:	70 e3       	ldi	r23, 0x30	; 48
   15ae6:	c8 01       	movw	r24, r16
   15ae8:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15aec:	f1 e0       	ldi	r31, 0x01	; 1
   15aee:	7f 12       	cpse	r7, r31
   15af0:	2d c0       	rjmp	.+90     	; 0x15b4c <_Z12Publish_Datav+0x10f2>
   15af2:	8b e1       	ldi	r24, 0x1B	; 27
   15af4:	8e 9d       	mul	r24, r14
   15af6:	f0 01       	movw	r30, r0
   15af8:	8f 9d       	mul	r24, r15
   15afa:	f0 0d       	add	r31, r0
   15afc:	11 24       	eor	r1, r1
   15afe:	e8 51       	subi	r30, 0x18	; 24
   15b00:	f2 4f       	sbci	r31, 0xF2	; 242
   15b02:	e5 81       	ldd	r30, Z+5	; 0x05
   15b04:	f0 e0       	ldi	r31, 0x00	; 0
   15b06:	e7 5c       	subi	r30, 0xC7	; 199
   15b08:	fb 4e       	sbci	r31, 0xEB	; 235
   15b0a:	80 81       	ld	r24, Z
   15b0c:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   15b10:	89 2b       	or	r24, r25
   15b12:	61 f0       	breq	.+24     	; 0x15b2c <_Z12Publish_Datav+0x10d2>
   15b14:	cd 50       	subi	r28, 0x0D	; 13
   15b16:	de 4f       	sbci	r29, 0xFE	; 254
   15b18:	19 82       	std	Y+1, r1	; 0x01
   15b1a:	18 82       	st	Y, r1
   15b1c:	c3 5f       	subi	r28, 0xF3	; 243
   15b1e:	d1 40       	sbci	r29, 0x01	; 1
   15b20:	ae 01       	movw	r20, r28
   15b22:	4d 50       	subi	r20, 0x0D	; 13
   15b24:	5e 4f       	sbci	r21, 0xFE	; 254
   15b26:	68 e7       	ldi	r22, 0x78	; 120
   15b28:	70 e3       	ldi	r23, 0x30	; 48
   15b2a:	0d c0       	rjmp	.+26     	; 0x15b46 <_Z12Publish_Datav+0x10ec>
   15b2c:	81 e0       	ldi	r24, 0x01	; 1
   15b2e:	90 e0       	ldi	r25, 0x00	; 0
   15b30:	cd 50       	subi	r28, 0x0D	; 13
   15b32:	de 4f       	sbci	r29, 0xFE	; 254
   15b34:	99 83       	std	Y+1, r25	; 0x01
   15b36:	88 83       	st	Y, r24
   15b38:	c3 5f       	subi	r28, 0xF3	; 243
   15b3a:	d1 40       	sbci	r29, 0x01	; 1
   15b3c:	ae 01       	movw	r20, r28
   15b3e:	4d 50       	subi	r20, 0x0D	; 13
   15b40:	5e 4f       	sbci	r21, 0xFE	; 254
   15b42:	61 e7       	ldi	r22, 0x71	; 113
   15b44:	70 e3       	ldi	r23, 0x30	; 48
   15b46:	c8 01       	movw	r24, r16
   15b48:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15b4c:	4c ed       	ldi	r20, 0xDC	; 220
   15b4e:	50 e0       	ldi	r21, 0x00	; 0
   15b50:	b6 01       	movw	r22, r12
   15b52:	c8 01       	movw	r24, r16
   15b54:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15b58:	02 e6       	ldi	r16, 0x62	; 98
   15b5a:	1f e0       	ldi	r17, 0x0F	; 15
   15b5c:	8e e6       	ldi	r24, 0x6E	; 110
   15b5e:	68 2e       	mov	r6, r24
   15b60:	9e ec       	ldi	r25, 0xCE	; 206
   15b62:	a9 2e       	mov	r10, r25
   15b64:	93 e1       	ldi	r25, 0x13	; 19
   15b66:	b9 2e       	mov	r11, r25
   15b68:	2d e9       	ldi	r18, 0x9D	; 157
   15b6a:	82 2e       	mov	r8, r18
   15b6c:	27 e0       	ldi	r18, 0x07	; 7
   15b6e:	92 2e       	mov	r9, r18
   15b70:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15b74:	88 23       	and	r24, r24
   15b76:	01 f1       	breq	.+64     	; 0x15bb8 <_Z12Publish_Datav+0x115e>
   15b78:	d8 01       	movw	r26, r16
   15b7a:	e6 2d       	mov	r30, r6
   15b7c:	1d 92       	st	X+, r1
   15b7e:	ea 95       	dec	r30
   15b80:	e9 f7       	brne	.-6      	; 0x15b7c <_Z12Publish_Datav+0x1122>
   15b82:	bf 92       	push	r11
   15b84:	af 92       	push	r10
   15b86:	9f 92       	push	r9
   15b88:	8f 92       	push	r8
   15b8a:	1f 93       	push	r17
   15b8c:	0f 93       	push	r16
   15b8e:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   15b92:	b6 01       	movw	r22, r12
   15b94:	82 e6       	ldi	r24, 0x62	; 98
   15b96:	9f e0       	ldi	r25, 0x0F	; 15
   15b98:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   15b9c:	0f 90       	pop	r0
   15b9e:	0f 90       	pop	r0
   15ba0:	0f 90       	pop	r0
   15ba2:	0f 90       	pop	r0
   15ba4:	0f 90       	pop	r0
   15ba6:	0f 90       	pop	r0
   15ba8:	81 11       	cpse	r24, r1
   15baa:	13 c1       	rjmp	.+550    	; 0x15dd2 <_Z12Publish_Datav+0x1378>
   15bac:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15bb0:	81 50       	subi	r24, 0x01	; 1
   15bb2:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15bb6:	dc cf       	rjmp	.-72     	; 0x15b70 <_Z12Publish_Datav+0x1116>
   15bb8:	8c e3       	ldi	r24, 0x3C	; 60
   15bba:	90 e0       	ldi	r25, 0x00	; 0
   15bbc:	2f c1       	rjmp	.+606    	; 0x15e1c <_Z12Publish_Datav+0x13c2>
   15bbe:	6e 01       	movw	r12, r28
   15bc0:	f9 ee       	ldi	r31, 0xE9	; 233
   15bc2:	cf 1a       	sub	r12, r31
   15bc4:	fe ef       	ldi	r31, 0xFE	; 254
   15bc6:	df 0a       	sbc	r13, r31
   15bc8:	8c ed       	ldi	r24, 0xDC	; 220
   15bca:	d6 01       	movw	r26, r12
   15bcc:	1d 92       	st	X+, r1
   15bce:	8a 95       	dec	r24
   15bd0:	e9 f7       	brne	.-6      	; 0x15bcc <_Z12Publish_Datav+0x1172>
   15bd2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15bd6:	81 30       	cpi	r24, 0x01	; 1
   15bd8:	51 f4       	brne	.+20     	; 0x15bee <_Z12Publish_Datav+0x1194>
   15bda:	65 e5       	ldi	r22, 0x55	; 85
   15bdc:	70 e3       	ldi	r23, 0x30	; 48
   15bde:	86 ec       	ldi	r24, 0xC6	; 198
   15be0:	94 e1       	ldi	r25, 0x14	; 20
   15be2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15be6:	86 ec       	ldi	r24, 0xC6	; 198
   15be8:	94 e1       	ldi	r25, 0x14	; 20
   15bea:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   15bee:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   15bf2:	81 11       	cpse	r24, r1
   15bf4:	4e c0       	rjmp	.+156    	; 0x15c92 <_Z12Publish_Datav+0x1238>
   15bf6:	80 91 79 14 	lds	r24, 0x1479	; 0x801479 <_sRuble_Parameters+0xcb>
   15bfa:	88 23       	and	r24, r24
   15bfc:	09 f4       	brne	.+2      	; 0x15c00 <_Z12Publish_Datav+0x11a6>
   15bfe:	43 c0       	rjmp	.+134    	; 0x15c86 <_Z12Publish_Datav+0x122c>
   15c00:	60 90 b6 13 	lds	r6, 0x13B6	; 0x8013b6 <_sRuble_Parameters+0x8>
   15c04:	80 90 b7 13 	lds	r8, 0x13B7	; 0x8013b7 <_sRuble_Parameters+0x9>
   15c08:	90 90 b8 13 	lds	r9, 0x13B8	; 0x8013b8 <_sRuble_Parameters+0xa>
   15c0c:	a0 90 b9 13 	lds	r10, 0x13B9	; 0x8013b9 <_sRuble_Parameters+0xb>
   15c10:	b0 90 ba 13 	lds	r11, 0x13BA	; 0x8013ba <_sRuble_Parameters+0xc>
   15c14:	b0 91 bb 13 	lds	r27, 0x13BB	; 0x8013bb <_sRuble_Parameters+0xd>
   15c18:	f0 91 bc 13 	lds	r31, 0x13BC	; 0x8013bc <_sRuble_Parameters+0xe>
   15c1c:	e0 91 bd 13 	lds	r30, 0x13BD	; 0x8013bd <_sRuble_Parameters+0xf>
   15c20:	26 2d       	mov	r18, r6
   15c22:	38 2d       	mov	r19, r8
   15c24:	49 2d       	mov	r20, r9
   15c26:	5a 2d       	mov	r21, r10
   15c28:	6b 2d       	mov	r22, r11
   15c2a:	7b 2f       	mov	r23, r27
   15c2c:	8f 2f       	mov	r24, r31
   15c2e:	9e 2f       	mov	r25, r30
   15c30:	a2 e0       	ldi	r26, 0x02	; 2
   15c32:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
   15c36:	81 f0       	breq	.+32     	; 0x15c58 <_Z12Publish_Datav+0x11fe>
   15c38:	a4 e0       	ldi	r26, 0x04	; 4
   15c3a:	cd 50       	subi	r28, 0x0D	; 13
   15c3c:	de 4f       	sbci	r29, 0xFE	; 254
   15c3e:	19 82       	std	Y+1, r1	; 0x01
   15c40:	18 82       	st	Y, r1
   15c42:	c3 5f       	subi	r28, 0xF3	; 243
   15c44:	d1 40       	sbci	r29, 0x01	; 1
   15c46:	0e 94 dc eb 	call	0x1d7b8	; 0x1d7b8 <__cmpdi2_s8>
   15c4a:	a1 f4       	brne	.+40     	; 0x15c74 <_Z12Publish_Datav+0x121a>
   15c4c:	ae 01       	movw	r20, r28
   15c4e:	4d 50       	subi	r20, 0x0D	; 13
   15c50:	5e 4f       	sbci	r21, 0xFE	; 254
   15c52:	6d e4       	ldi	r22, 0x4D	; 77
   15c54:	70 e3       	ldi	r23, 0x30	; 48
   15c56:	13 c0       	rjmp	.+38     	; 0x15c7e <_Z12Publish_Datav+0x1224>
   15c58:	81 e0       	ldi	r24, 0x01	; 1
   15c5a:	90 e0       	ldi	r25, 0x00	; 0
   15c5c:	cd 50       	subi	r28, 0x0D	; 13
   15c5e:	de 4f       	sbci	r29, 0xFE	; 254
   15c60:	99 83       	std	Y+1, r25	; 0x01
   15c62:	88 83       	st	Y, r24
   15c64:	c3 5f       	subi	r28, 0xF3	; 243
   15c66:	d1 40       	sbci	r29, 0x01	; 1
   15c68:	ae 01       	movw	r20, r28
   15c6a:	4d 50       	subi	r20, 0x0D	; 13
   15c6c:	5e 4f       	sbci	r21, 0xFE	; 254
   15c6e:	65 e4       	ldi	r22, 0x45	; 69
   15c70:	70 e3       	ldi	r23, 0x30	; 48
   15c72:	05 c0       	rjmp	.+10     	; 0x15c7e <_Z12Publish_Datav+0x1224>
   15c74:	ae 01       	movw	r20, r28
   15c76:	4d 50       	subi	r20, 0x0D	; 13
   15c78:	5e 4f       	sbci	r21, 0xFE	; 254
   15c7a:	6d e3       	ldi	r22, 0x3D	; 61
   15c7c:	70 e3       	ldi	r23, 0x30	; 48
   15c7e:	c8 01       	movw	r24, r16
   15c80:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15c84:	21 c0       	rjmp	.+66     	; 0x15cc8 <_Z12Publish_Datav+0x126e>
   15c86:	8a e0       	ldi	r24, 0x0A	; 10
   15c88:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   15c8c:	89 2b       	or	r24, r25
   15c8e:	71 f4       	brne	.+28     	; 0x15cac <_Z12Publish_Datav+0x1252>
   15c90:	04 c0       	rjmp	.+8      	; 0x15c9a <_Z12Publish_Datav+0x1240>
   15c92:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   15c96:	81 30       	cpi	r24, 0x01	; 1
   15c98:	49 f4       	brne	.+18     	; 0x15cac <_Z12Publish_Datav+0x1252>
   15c9a:	81 e0       	ldi	r24, 0x01	; 1
   15c9c:	90 e0       	ldi	r25, 0x00	; 0
   15c9e:	cd 50       	subi	r28, 0x0D	; 13
   15ca0:	de 4f       	sbci	r29, 0xFE	; 254
   15ca2:	99 83       	std	Y+1, r25	; 0x01
   15ca4:	88 83       	st	Y, r24
   15ca6:	c3 5f       	subi	r28, 0xF3	; 243
   15ca8:	d1 40       	sbci	r29, 0x01	; 1
   15caa:	06 c0       	rjmp	.+12     	; 0x15cb8 <_Z12Publish_Datav+0x125e>
   15cac:	cd 50       	subi	r28, 0x0D	; 13
   15cae:	de 4f       	sbci	r29, 0xFE	; 254
   15cb0:	19 82       	std	Y+1, r1	; 0x01
   15cb2:	18 82       	st	Y, r1
   15cb4:	c3 5f       	subi	r28, 0xF3	; 243
   15cb6:	d1 40       	sbci	r29, 0x01	; 1
   15cb8:	ae 01       	movw	r20, r28
   15cba:	4d 50       	subi	r20, 0x0D	; 13
   15cbc:	5e 4f       	sbci	r21, 0xFE	; 254
   15cbe:	65 e9       	ldi	r22, 0x95	; 149
   15cc0:	77 e0       	ldi	r23, 0x07	; 7
   15cc2:	c8 01       	movw	r24, r16
   15cc4:	0e 94 66 8c 	call	0x118cc	; 0x118cc <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   15cc8:	cd 50       	subi	r28, 0x0D	; 13
   15cca:	de 4f       	sbci	r29, 0xFE	; 254
   15ccc:	19 82       	std	Y+1, r1	; 0x01
   15cce:	18 82       	st	Y, r1
   15cd0:	c3 5f       	subi	r28, 0xF3	; 243
   15cd2:	d1 40       	sbci	r29, 0x01	; 1
   15cd4:	ae 01       	movw	r20, r28
   15cd6:	4d 50       	subi	r20, 0x0D	; 13
   15cd8:	5e 4f       	sbci	r21, 0xFE	; 254
   15cda:	66 e3       	ldi	r22, 0x36	; 54
   15cdc:	70 e3       	ldi	r23, 0x30	; 48
   15cde:	c8 01       	movw	r24, r16
   15ce0:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15ce4:	8b e1       	ldi	r24, 0x1B	; 27
   15ce6:	8e 9d       	mul	r24, r14
   15ce8:	a0 01       	movw	r20, r0
   15cea:	8f 9d       	mul	r24, r15
   15cec:	50 0d       	add	r21, r0
   15cee:	11 24       	eor	r1, r1
   15cf0:	fa 01       	movw	r30, r20
   15cf2:	e8 51       	subi	r30, 0x18	; 24
   15cf4:	f2 4f       	sbci	r31, 0xF2	; 242
   15cf6:	83 81       	ldd	r24, Z+3	; 0x03
   15cf8:	94 81       	ldd	r25, Z+4	; 0x04
   15cfa:	f7 01       	movw	r30, r14
   15cfc:	eb 59       	subi	r30, 0x9B	; 155
   15cfe:	ff 4f       	sbci	r31, 0xFF	; 255
   15d00:	5f 01       	movw	r10, r30
   15d02:	00 97       	sbiw	r24, 0x00	; 0
   15d04:	01 f1       	breq	.+64     	; 0x15d46 <_Z12Publish_Datav+0x12ec>
   15d06:	6c e3       	ldi	r22, 0x3C	; 60
   15d08:	70 e0       	ldi	r23, 0x00	; 0
   15d0a:	0e 94 56 eb 	call	0x1d6ac	; 0x1d6ac <__udivmodhi4>
   15d0e:	6f 5f       	subi	r22, 0xFF	; 255
   15d10:	7f 4f       	sbci	r23, 0xFF	; 255
   15d12:	cd 50       	subi	r28, 0x0D	; 13
   15d14:	de 4f       	sbci	r29, 0xFE	; 254
   15d16:	79 83       	std	Y+1, r23	; 0x01
   15d18:	68 83       	st	Y, r22
   15d1a:	c3 5f       	subi	r28, 0xF3	; 243
   15d1c:	d1 40       	sbci	r29, 0x01	; 1
   15d1e:	ae 01       	movw	r20, r28
   15d20:	4d 50       	subi	r20, 0x0D	; 13
   15d22:	5e 4f       	sbci	r21, 0xFE	; 254
   15d24:	61 e3       	ldi	r22, 0x31	; 49
   15d26:	70 e3       	ldi	r23, 0x30	; 48
   15d28:	c8 01       	movw	r24, r16
   15d2a:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15d2e:	cd 50       	subi	r28, 0x0D	; 13
   15d30:	de 4f       	sbci	r29, 0xFE	; 254
   15d32:	b9 82       	std	Y+1, r11	; 0x01
   15d34:	a8 82       	st	Y, r10
   15d36:	c3 5f       	subi	r28, 0xF3	; 243
   15d38:	d1 40       	sbci	r29, 0x01	; 1
   15d3a:	ae 01       	movw	r20, r28
   15d3c:	4d 50       	subi	r20, 0x0D	; 13
   15d3e:	5e 4f       	sbci	r21, 0xFE	; 254
   15d40:	6c e2       	ldi	r22, 0x2C	; 44
   15d42:	70 e3       	ldi	r23, 0x30	; 48
   15d44:	12 c0       	rjmp	.+36     	; 0x15d6a <_Z12Publish_Datav+0x1310>
   15d46:	45 51       	subi	r20, 0x15	; 21
   15d48:	52 4f       	sbci	r21, 0xF2	; 242
   15d4a:	67 e2       	ldi	r22, 0x27	; 39
   15d4c:	70 e3       	ldi	r23, 0x30	; 48
   15d4e:	c8 01       	movw	r24, r16
   15d50:	0e 94 98 8b 	call	0x11730	; 0x11730 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15d54:	cd 50       	subi	r28, 0x0D	; 13
   15d56:	de 4f       	sbci	r29, 0xFE	; 254
   15d58:	b9 82       	std	Y+1, r11	; 0x01
   15d5a:	a8 82       	st	Y, r10
   15d5c:	c3 5f       	subi	r28, 0xF3	; 243
   15d5e:	d1 40       	sbci	r29, 0x01	; 1
   15d60:	ae 01       	movw	r20, r28
   15d62:	4d 50       	subi	r20, 0x0D	; 13
   15d64:	5e 4f       	sbci	r21, 0xFE	; 254
   15d66:	62 e2       	ldi	r22, 0x22	; 34
   15d68:	70 e3       	ldi	r23, 0x30	; 48
   15d6a:	c8 01       	movw	r24, r16
   15d6c:	0e 94 d0 8b 	call	0x117a0	; 0x117a0 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15d70:	4c ed       	ldi	r20, 0xDC	; 220
   15d72:	50 e0       	ldi	r21, 0x00	; 0
   15d74:	b6 01       	movw	r22, r12
   15d76:	c8 01       	movw	r24, r16
   15d78:	0e 94 a2 93 	call	0x12744	; 0x12744 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15d7c:	b6 01       	movw	r22, r12
   15d7e:	86 ec       	ldi	r24, 0xC6	; 198
   15d80:	94 e1       	ldi	r25, 0x14	; 20
   15d82:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   15d86:	e2 e6       	ldi	r30, 0x62	; 98
   15d88:	ff e0       	ldi	r31, 0x0F	; 15
   15d8a:	8e e6       	ldi	r24, 0x6E	; 110
   15d8c:	df 01       	movw	r26, r30
   15d8e:	1d 92       	st	X+, r1
   15d90:	8a 95       	dec	r24
   15d92:	e9 f7       	brne	.-6      	; 0x15d8e <_Z12Publish_Datav+0x1334>
   15d94:	8e ec       	ldi	r24, 0xCE	; 206
   15d96:	93 e1       	ldi	r25, 0x13	; 19
   15d98:	9f 93       	push	r25
   15d9a:	8f 93       	push	r24
   15d9c:	8b e3       	ldi	r24, 0x3B	; 59
   15d9e:	97 e0       	ldi	r25, 0x07	; 7
   15da0:	9f 93       	push	r25
   15da2:	8f 93       	push	r24
   15da4:	ff 93       	push	r31
   15da6:	ef 93       	push	r30
   15da8:	0e 94 fe ed 	call	0x1dbfc	; 0x1dbfc <sprintf>
   15dac:	0f 90       	pop	r0
   15dae:	0f 90       	pop	r0
   15db0:	0f 90       	pop	r0
   15db2:	0f 90       	pop	r0
   15db4:	0f 90       	pop	r0
   15db6:	0f 90       	pop	r0
   15db8:	0c e3       	ldi	r16, 0x3C	; 60
   15dba:	10 e0       	ldi	r17, 0x00	; 0
   15dbc:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15dc0:	88 23       	and	r24, r24
   15dc2:	81 f1       	breq	.+96     	; 0x15e24 <_Z12Publish_Datav+0x13ca>
   15dc4:	b6 01       	movw	r22, r12
   15dc6:	82 e6       	ldi	r24, 0x62	; 98
   15dc8:	9f e0       	ldi	r25, 0x0F	; 15
   15dca:	0e 94 66 6a 	call	0xd4cc	; 0xd4cc <_Z12MQTT_PublishPhS_>
   15dce:	88 23       	and	r24, r24
   15dd0:	71 f0       	breq	.+28     	; 0x15dee <_Z12Publish_Datav+0x1394>
   15dd2:	8b e1       	ldi	r24, 0x1B	; 27
   15dd4:	8e 9d       	mul	r24, r14
   15dd6:	f0 01       	movw	r30, r0
   15dd8:	8f 9d       	mul	r24, r15
   15dda:	f0 0d       	add	r31, r0
   15ddc:	11 24       	eor	r1, r1
   15dde:	e8 51       	subi	r30, 0x18	; 24
   15de0:	f2 4f       	sbci	r31, 0xF2	; 242
   15de2:	12 8e       	std	Z+26, r1	; 0x1a
   15de4:	81 e0       	ldi	r24, 0x01	; 1
   15de6:	87 0d       	add	r24, r7
   15de8:	0e 94 26 7b 	call	0xf64c	; 0xf64c <_Z21Exra_Plot_Data_EEPROMh>
   15dec:	1b c0       	rjmp	.+54     	; 0x15e24 <_Z12Publish_Datav+0x13ca>
   15dee:	10 93 e1 0d 	sts	0x0DE1, r17	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15df2:	00 93 e0 0d 	sts	0x0DE0, r16	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15df6:	80 91 e3 0d 	lds	r24, 0x0DE3	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15dfa:	81 50       	subi	r24, 0x01	; 1
   15dfc:	80 93 e3 0d 	sts	0x0DE3, r24	; 0x800de3 <_ZZ12Publish_DatavE5retry>
   15e00:	dd cf       	rjmp	.-70     	; 0x15dbc <_Z12Publish_Datav+0x1362>
   15e02:	bf ef       	ldi	r27, 0xFF	; 255
   15e04:	eb 1a       	sub	r14, r27
   15e06:	fb 0a       	sbc	r15, r27
   15e08:	eb e1       	ldi	r30, 0x1B	; 27
   15e0a:	ce 0e       	add	r12, r30
   15e0c:	d1 1c       	adc	r13, r1
   15e0e:	fe e0       	ldi	r31, 0x0E	; 14
   15e10:	ef 16       	cp	r14, r31
   15e12:	f1 04       	cpc	r15, r1
   15e14:	09 f0       	breq	.+2      	; 0x15e18 <_Z12Publish_Datav+0x13be>
   15e16:	c5 cd       	rjmp	.-1142   	; 0x159a2 <_Z12Publish_Datav+0xf48>
   15e18:	05 c0       	rjmp	.+10     	; 0x15e24 <_Z12Publish_Datav+0x13ca>
   15e1a:	01 97       	sbiw	r24, 0x01	; 1
   15e1c:	90 93 e1 0d 	sts	0x0DE1, r25	; 0x800de1 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15e20:	80 93 e0 0d 	sts	0x0DE0, r24	; 0x800de0 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15e24:	cc 50       	subi	r28, 0x0C	; 12
   15e26:	de 4f       	sbci	r29, 0xFE	; 254
   15e28:	0f b6       	in	r0, 0x3f	; 63
   15e2a:	f8 94       	cli
   15e2c:	de bf       	out	0x3e, r29	; 62
   15e2e:	0f be       	out	0x3f, r0	; 63
   15e30:	cd bf       	out	0x3d, r28	; 61
   15e32:	df 91       	pop	r29
   15e34:	cf 91       	pop	r28
   15e36:	1f 91       	pop	r17
   15e38:	0f 91       	pop	r16
   15e3a:	ff 90       	pop	r15
   15e3c:	ef 90       	pop	r14
   15e3e:	df 90       	pop	r13
   15e40:	cf 90       	pop	r12
   15e42:	bf 90       	pop	r11
   15e44:	af 90       	pop	r10
   15e46:	9f 90       	pop	r9
   15e48:	8f 90       	pop	r8
   15e4a:	7f 90       	pop	r7
   15e4c:	6f 90       	pop	r6
   15e4e:	08 95       	ret

00015e50 <_Z22Valve_Grouping_Handlerh>:
   15e50:	2f 92       	push	r2
   15e52:	3f 92       	push	r3
   15e54:	4f 92       	push	r4
   15e56:	5f 92       	push	r5
   15e58:	6f 92       	push	r6
   15e5a:	7f 92       	push	r7
   15e5c:	8f 92       	push	r8
   15e5e:	9f 92       	push	r9
   15e60:	af 92       	push	r10
   15e62:	bf 92       	push	r11
   15e64:	cf 92       	push	r12
   15e66:	df 92       	push	r13
   15e68:	ef 92       	push	r14
   15e6a:	ff 92       	push	r15
   15e6c:	0f 93       	push	r16
   15e6e:	1f 93       	push	r17
   15e70:	cf 93       	push	r28
   15e72:	df 93       	push	r29
   15e74:	cd b7       	in	r28, 0x3d	; 61
   15e76:	de b7       	in	r29, 0x3e	; 62
   15e78:	e8 97       	sbiw	r28, 0x38	; 56
   15e7a:	0f b6       	in	r0, 0x3f	; 63
   15e7c:	f8 94       	cli
   15e7e:	de bf       	out	0x3e, r29	; 62
   15e80:	0f be       	out	0x3f, r0	; 63
   15e82:	cd bf       	out	0x3d, r28	; 61
   15e84:	58 2e       	mov	r5, r24
   15e86:	88 e0       	ldi	r24, 0x08	; 8
   15e88:	eb e6       	ldi	r30, 0x6B	; 107
   15e8a:	f2 e0       	ldi	r31, 0x02	; 2
   15e8c:	de 01       	movw	r26, r28
   15e8e:	9b 96       	adiw	r26, 0x2b	; 43
   15e90:	01 90       	ld	r0, Z+
   15e92:	0d 92       	st	X+, r0
   15e94:	8a 95       	dec	r24
   15e96:	e1 f7       	brne	.-8      	; 0x15e90 <_Z22Valve_Grouping_Handlerh+0x40>
   15e98:	9e 01       	movw	r18, r28
   15e9a:	2f 5f       	subi	r18, 0xFF	; 255
   15e9c:	3f 4f       	sbci	r19, 0xFF	; 255
   15e9e:	79 01       	movw	r14, r18
   15ea0:	8a e2       	ldi	r24, 0x2A	; 42
   15ea2:	d9 01       	movw	r26, r18
   15ea4:	1d 92       	st	X+, r1
   15ea6:	8a 95       	dec	r24
   15ea8:	e9 f7       	brne	.-6      	; 0x15ea4 <_Z22Valve_Grouping_Handlerh+0x54>
   15eaa:	2e e4       	ldi	r18, 0x4E	; 78
   15eac:	82 2e       	mov	r8, r18
   15eae:	2d e0       	ldi	r18, 0x0D	; 13
   15eb0:	92 2e       	mov	r9, r18
   15eb2:	42 ea       	ldi	r20, 0xA2	; 162
   15eb4:	5d e0       	ldi	r21, 0x0D	; 13
   15eb6:	64 01       	movw	r12, r8
   15eb8:	10 e0       	ldi	r17, 0x00	; 0
   15eba:	f6 01       	movw	r30, r12
   15ebc:	80 81       	ld	r24, Z
   15ebe:	81 50       	subi	r24, 0x01	; 1
   15ec0:	8e 30       	cpi	r24, 0x0E	; 14
   15ec2:	d8 f5       	brcc	.+118    	; 0x15f3a <_Z22Valve_Grouping_Handlerh+0xea>
   15ec4:	d6 01       	movw	r26, r12
   15ec6:	25 e0       	ldi	r18, 0x05	; 5
   15ec8:	89 81       	ldd	r24, Y+1	; 0x01
   15eca:	88 23       	and	r24, r24
   15ecc:	f9 f0       	breq	.+62     	; 0x15f0c <_Z22Valve_Grouping_Handlerh+0xbc>
   15ece:	00 e0       	ldi	r16, 0x00	; 0
   15ed0:	30 e0       	ldi	r19, 0x00	; 0
   15ed2:	83 2f       	mov	r24, r19
   15ed4:	90 e0       	ldi	r25, 0x00	; 0
   15ed6:	b7 01       	movw	r22, r14
   15ed8:	68 0f       	add	r22, r24
   15eda:	79 1f       	adc	r23, r25
   15edc:	fb 01       	movw	r30, r22
   15ede:	70 81       	ld	r23, Z
   15ee0:	77 23       	and	r23, r23
   15ee2:	d1 f0       	breq	.+52     	; 0x15f18 <_Z22Valve_Grouping_Handlerh+0xc8>
   15ee4:	11 96       	adiw	r26, 0x01	; 1
   15ee6:	6c 91       	ld	r22, X
   15ee8:	11 97       	sbiw	r26, 0x01	; 1
   15eea:	66 23       	and	r22, r22
   15eec:	69 f0       	breq	.+26     	; 0x15f08 <_Z22Valve_Grouping_Handlerh+0xb8>
   15eee:	76 17       	cp	r23, r22
   15ef0:	99 f0       	breq	.+38     	; 0x15f18 <_Z22Valve_Grouping_Handlerh+0xc8>
   15ef2:	62 e0       	ldi	r22, 0x02	; 2
   15ef4:	70 e0       	ldi	r23, 0x00	; 0
   15ef6:	6c 0f       	add	r22, r28
   15ef8:	7d 1f       	adc	r23, r29
   15efa:	86 0f       	add	r24, r22
   15efc:	97 1f       	adc	r25, r23
   15efe:	fc 01       	movw	r30, r24
   15f00:	80 81       	ld	r24, Z
   15f02:	81 11       	cpse	r24, r1
   15f04:	01 c0       	rjmp	.+2      	; 0x15f08 <_Z22Valve_Grouping_Handlerh+0xb8>
   15f06:	01 e0       	ldi	r16, 0x01	; 1
   15f08:	3f 5f       	subi	r19, 0xFF	; 255
   15f0a:	e3 cf       	rjmp	.-58     	; 0x15ed2 <_Z22Valve_Grouping_Handlerh+0x82>
   15f0c:	11 96       	adiw	r26, 0x01	; 1
   15f0e:	8c 91       	ld	r24, X
   15f10:	11 97       	sbiw	r26, 0x01	; 1
   15f12:	81 11       	cpse	r24, r1
   15f14:	03 c0       	rjmp	.+6      	; 0x15f1c <_Z22Valve_Grouping_Handlerh+0xcc>
   15f16:	0d c0       	rjmp	.+26     	; 0x15f32 <_Z22Valve_Grouping_Handlerh+0xe2>
   15f18:	00 23       	and	r16, r16
   15f1a:	59 f0       	breq	.+22     	; 0x15f32 <_Z22Valve_Grouping_Handlerh+0xe2>
   15f1c:	11 96       	adiw	r26, 0x01	; 1
   15f1e:	8c 91       	ld	r24, X
   15f20:	11 97       	sbiw	r26, 0x01	; 1
   15f22:	83 31       	cpi	r24, 0x13	; 19
   15f24:	30 f4       	brcc	.+12     	; 0x15f32 <_Z22Valve_Grouping_Handlerh+0xe2>
   15f26:	b7 01       	movw	r22, r14
   15f28:	61 0f       	add	r22, r17
   15f2a:	71 1d       	adc	r23, r1
   15f2c:	fb 01       	movw	r30, r22
   15f2e:	80 83       	st	Z, r24
   15f30:	1f 5f       	subi	r17, 0xFF	; 255
   15f32:	21 50       	subi	r18, 0x01	; 1
   15f34:	11 96       	adiw	r26, 0x01	; 1
   15f36:	21 11       	cpse	r18, r1
   15f38:	c7 cf       	rjmp	.-114    	; 0x15ec8 <_Z22Valve_Grouping_Handlerh+0x78>
   15f3a:	f6 e0       	ldi	r31, 0x06	; 6
   15f3c:	cf 0e       	add	r12, r31
   15f3e:	d1 1c       	adc	r13, r1
   15f40:	4c 15       	cp	r20, r12
   15f42:	5d 05       	cpc	r21, r13
   15f44:	09 f0       	breq	.+2      	; 0x15f48 <_Z22Valve_Grouping_Handlerh+0xf8>
   15f46:	b9 cf       	rjmp	.-142    	; 0x15eba <_Z22Valve_Grouping_Handlerh+0x6a>
   15f48:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15f4c:	81 30       	cpi	r24, 0x01	; 1
   15f4e:	51 f4       	brne	.+20     	; 0x15f64 <_Z22Valve_Grouping_Handlerh+0x114>
   15f50:	60 e5       	ldi	r22, 0x50	; 80
   15f52:	70 e4       	ldi	r23, 0x40	; 64
   15f54:	86 ec       	ldi	r24, 0xC6	; 198
   15f56:	94 e1       	ldi	r25, 0x14	; 20
   15f58:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15f5c:	86 ec       	ldi	r24, 0xC6	; 198
   15f5e:	94 e1       	ldi	r25, 0x14	; 20
   15f60:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   15f64:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   15f68:	81 30       	cpi	r24, 0x01	; 1
   15f6a:	e9 f4       	brne	.+58     	; 0x15fa6 <_Z22Valve_Grouping_Handlerh+0x156>
   15f6c:	00 e0       	ldi	r16, 0x00	; 0
   15f6e:	67 01       	movw	r12, r14
   15f70:	c0 0e       	add	r12, r16
   15f72:	d1 1c       	adc	r13, r1
   15f74:	d6 01       	movw	r26, r12
   15f76:	8c 91       	ld	r24, X
   15f78:	88 23       	and	r24, r24
   15f7a:	a9 f0       	breq	.+42     	; 0x15fa6 <_Z22Valve_Grouping_Handlerh+0x156>
   15f7c:	6e e3       	ldi	r22, 0x3E	; 62
   15f7e:	70 e4       	ldi	r23, 0x40	; 64
   15f80:	86 ec       	ldi	r24, 0xC6	; 198
   15f82:	94 e1       	ldi	r25, 0x14	; 20
   15f84:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   15f88:	f6 01       	movw	r30, r12
   15f8a:	60 81       	ld	r22, Z
   15f8c:	70 e0       	ldi	r23, 0x00	; 0
   15f8e:	4a e0       	ldi	r20, 0x0A	; 10
   15f90:	50 e0       	ldi	r21, 0x00	; 0
   15f92:	86 ec       	ldi	r24, 0xC6	; 198
   15f94:	94 e1       	ldi	r25, 0x14	; 20
   15f96:	0e 94 42 d6 	call	0x1ac84	; 0x1ac84 <_ZN5Print5printEii>
   15f9a:	86 ec       	ldi	r24, 0xC6	; 198
   15f9c:	94 e1       	ldi	r25, 0x14	; 20
   15f9e:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   15fa2:	0f 5f       	subi	r16, 0xFF	; 255
   15fa4:	e4 cf       	rjmp	.-56     	; 0x15f6e <_Z22Valve_Grouping_Handlerh+0x11e>
   15fa6:	f3 e0       	ldi	r31, 0x03	; 3
   15fa8:	5f 12       	cpse	r5, r31
   15faa:	81 c0       	rjmp	.+258    	; 0x160ae <_Z22Valve_Grouping_Handlerh+0x25e>
   15fac:	98 ee       	ldi	r25, 0xE8	; 232
   15fae:	c9 2e       	mov	r12, r25
   15fb0:	9d e0       	ldi	r25, 0x0D	; 13
   15fb2:	d9 2e       	mov	r13, r25
   15fb4:	42 e6       	ldi	r20, 0x62	; 98
   15fb6:	5f e0       	ldi	r21, 0x0F	; 15
   15fb8:	d6 01       	movw	r26, r12
   15fba:	11 96       	adiw	r26, 0x01	; 1
   15fbc:	8c 91       	ld	r24, X
   15fbe:	11 97       	sbiw	r26, 0x01	; 1
   15fc0:	85 56       	subi	r24, 0x65	; 101
   15fc2:	8e 30       	cpi	r24, 0x0E	; 14
   15fc4:	d0 f5       	brcc	.+116    	; 0x1603a <_Z22Valve_Grouping_Handlerh+0x1ea>
   15fc6:	25 e0       	ldi	r18, 0x05	; 5
   15fc8:	89 81       	ldd	r24, Y+1	; 0x01
   15fca:	88 23       	and	r24, r24
   15fcc:	f9 f0       	breq	.+62     	; 0x1600c <_Z22Valve_Grouping_Handlerh+0x1bc>
   15fce:	00 e0       	ldi	r16, 0x00	; 0
   15fd0:	30 e0       	ldi	r19, 0x00	; 0
   15fd2:	83 2f       	mov	r24, r19
   15fd4:	90 e0       	ldi	r25, 0x00	; 0
   15fd6:	b7 01       	movw	r22, r14
   15fd8:	68 0f       	add	r22, r24
   15fda:	79 1f       	adc	r23, r25
   15fdc:	fb 01       	movw	r30, r22
   15fde:	70 81       	ld	r23, Z
   15fe0:	77 23       	and	r23, r23
   15fe2:	d1 f0       	breq	.+52     	; 0x16018 <_Z22Valve_Grouping_Handlerh+0x1c8>
   15fe4:	15 96       	adiw	r26, 0x05	; 5
   15fe6:	6c 91       	ld	r22, X
   15fe8:	15 97       	sbiw	r26, 0x05	; 5
   15fea:	66 23       	and	r22, r22
   15fec:	69 f0       	breq	.+26     	; 0x16008 <_Z22Valve_Grouping_Handlerh+0x1b8>
   15fee:	76 17       	cp	r23, r22
   15ff0:	99 f0       	breq	.+38     	; 0x16018 <_Z22Valve_Grouping_Handlerh+0x1c8>
   15ff2:	62 e0       	ldi	r22, 0x02	; 2
   15ff4:	70 e0       	ldi	r23, 0x00	; 0
   15ff6:	6c 0f       	add	r22, r28
   15ff8:	7d 1f       	adc	r23, r29
   15ffa:	86 0f       	add	r24, r22
   15ffc:	97 1f       	adc	r25, r23
   15ffe:	fc 01       	movw	r30, r24
   16000:	80 81       	ld	r24, Z
   16002:	81 11       	cpse	r24, r1
   16004:	01 c0       	rjmp	.+2      	; 0x16008 <_Z22Valve_Grouping_Handlerh+0x1b8>
   16006:	01 e0       	ldi	r16, 0x01	; 1
   16008:	3f 5f       	subi	r19, 0xFF	; 255
   1600a:	e3 cf       	rjmp	.-58     	; 0x15fd2 <_Z22Valve_Grouping_Handlerh+0x182>
   1600c:	15 96       	adiw	r26, 0x05	; 5
   1600e:	8c 91       	ld	r24, X
   16010:	15 97       	sbiw	r26, 0x05	; 5
   16012:	81 11       	cpse	r24, r1
   16014:	03 c0       	rjmp	.+6      	; 0x1601c <_Z22Valve_Grouping_Handlerh+0x1cc>
   16016:	0d c0       	rjmp	.+26     	; 0x16032 <_Z22Valve_Grouping_Handlerh+0x1e2>
   16018:	00 23       	and	r16, r16
   1601a:	59 f0       	breq	.+22     	; 0x16032 <_Z22Valve_Grouping_Handlerh+0x1e2>
   1601c:	15 96       	adiw	r26, 0x05	; 5
   1601e:	8c 91       	ld	r24, X
   16020:	15 97       	sbiw	r26, 0x05	; 5
   16022:	83 31       	cpi	r24, 0x13	; 19
   16024:	30 f4       	brcc	.+12     	; 0x16032 <_Z22Valve_Grouping_Handlerh+0x1e2>
   16026:	b7 01       	movw	r22, r14
   16028:	61 0f       	add	r22, r17
   1602a:	71 1d       	adc	r23, r1
   1602c:	fb 01       	movw	r30, r22
   1602e:	80 83       	st	Z, r24
   16030:	1f 5f       	subi	r17, 0xFF	; 255
   16032:	21 50       	subi	r18, 0x01	; 1
   16034:	11 96       	adiw	r26, 0x01	; 1
   16036:	21 11       	cpse	r18, r1
   16038:	c7 cf       	rjmp	.-114    	; 0x15fc8 <_Z22Valve_Grouping_Handlerh+0x178>
   1603a:	fb e1       	ldi	r31, 0x1B	; 27
   1603c:	cf 0e       	add	r12, r31
   1603e:	d1 1c       	adc	r13, r1
   16040:	4c 15       	cp	r20, r12
   16042:	5d 05       	cpc	r21, r13
   16044:	09 f0       	breq	.+2      	; 0x16048 <_Z22Valve_Grouping_Handlerh+0x1f8>
   16046:	b8 cf       	rjmp	.-144    	; 0x15fb8 <_Z22Valve_Grouping_Handlerh+0x168>
   16048:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1604c:	81 30       	cpi	r24, 0x01	; 1
   1604e:	51 f4       	brne	.+20     	; 0x16064 <_Z22Valve_Grouping_Handlerh+0x214>
   16050:	6d e2       	ldi	r22, 0x2D	; 45
   16052:	70 e4       	ldi	r23, 0x40	; 64
   16054:	86 ec       	ldi	r24, 0xC6	; 198
   16056:	94 e1       	ldi	r25, 0x14	; 20
   16058:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1605c:	86 ec       	ldi	r24, 0xC6	; 198
   1605e:	94 e1       	ldi	r25, 0x14	; 20
   16060:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16064:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16068:	81 30       	cpi	r24, 0x01	; 1
   1606a:	91 f5       	brne	.+100    	; 0x160d0 <_Z22Valve_Grouping_Handlerh+0x280>
   1606c:	10 e0       	ldi	r17, 0x00	; 0
   1606e:	67 01       	movw	r12, r14
   16070:	c1 0e       	add	r12, r17
   16072:	d1 1c       	adc	r13, r1
   16074:	d6 01       	movw	r26, r12
   16076:	8c 91       	ld	r24, X
   16078:	88 23       	and	r24, r24
   1607a:	e1 f0       	breq	.+56     	; 0x160b4 <_Z22Valve_Grouping_Handlerh+0x264>
   1607c:	6b e1       	ldi	r22, 0x1B	; 27
   1607e:	70 e4       	ldi	r23, 0x40	; 64
   16080:	86 ec       	ldi	r24, 0xC6	; 198
   16082:	94 e1       	ldi	r25, 0x14	; 20
   16084:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16088:	f6 01       	movw	r30, r12
   1608a:	60 81       	ld	r22, Z
   1608c:	70 e0       	ldi	r23, 0x00	; 0
   1608e:	4a e0       	ldi	r20, 0x0A	; 10
   16090:	50 e0       	ldi	r21, 0x00	; 0
   16092:	86 ec       	ldi	r24, 0xC6	; 198
   16094:	94 e1       	ldi	r25, 0x14	; 20
   16096:	0e 94 42 d6 	call	0x1ac84	; 0x1ac84 <_ZN5Print5printEii>
   1609a:	86 ec       	ldi	r24, 0xC6	; 198
   1609c:	94 e1       	ldi	r25, 0x14	; 20
   1609e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   160a2:	86 ec       	ldi	r24, 0xC6	; 198
   160a4:	94 e1       	ldi	r25, 0x14	; 20
   160a6:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   160aa:	1f 5f       	subi	r17, 0xFF	; 255
   160ac:	e0 cf       	rjmp	.-64     	; 0x1606e <_Z22Valve_Grouping_Handlerh+0x21e>
   160ae:	55 e0       	ldi	r21, 0x05	; 5
   160b0:	55 12       	cpse	r5, r21
   160b2:	9c c1       	rjmp	.+824    	; 0x163ec <_Z22Valve_Grouping_Handlerh+0x59c>
   160b4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   160b8:	81 30       	cpi	r24, 0x01	; 1
   160ba:	51 f4       	brne	.+20     	; 0x160d0 <_Z22Valve_Grouping_Handlerh+0x280>
   160bc:	60 ef       	ldi	r22, 0xF0	; 240
   160be:	7f e3       	ldi	r23, 0x3F	; 63
   160c0:	86 ec       	ldi	r24, 0xC6	; 198
   160c2:	94 e1       	ldi	r25, 0x14	; 20
   160c4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   160c8:	86 ec       	ldi	r24, 0xC6	; 198
   160ca:	94 e1       	ldi	r25, 0x14	; 20
   160cc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   160d0:	05 e1       	ldi	r16, 0x15	; 21
   160d2:	1c e0       	ldi	r17, 0x0C	; 12
   160d4:	b4 e0       	ldi	r27, 0x04	; 4
   160d6:	ab 2e       	mov	r10, r27
   160d8:	b1 2c       	mov	r11, r1
   160da:	c1 2c       	mov	r12, r1
   160dc:	d1 2c       	mov	r13, r1
   160de:	8d e0       	ldi	r24, 0x0D	; 13
   160e0:	28 2e       	mov	r2, r24
   160e2:	d8 01       	movw	r26, r16
   160e4:	8c 91       	ld	r24, X
   160e6:	88 23       	and	r24, r24
   160e8:	21 f1       	breq	.+72     	; 0x16132 <_Z22Valve_Grouping_Handlerh+0x2e2>
   160ea:	31 2c       	mov	r3, r1
   160ec:	40 e0       	ldi	r20, 0x00	; 0
   160ee:	39 c0       	rjmp	.+114    	; 0x16162 <_Z22Valve_Grouping_Handlerh+0x312>
   160f0:	9e 01       	movw	r18, r28
   160f2:	25 5d       	subi	r18, 0xD5	; 213
   160f4:	3f 4f       	sbci	r19, 0xFF	; 255
   160f6:	3c ab       	std	Y+52, r19	; 0x34
   160f8:	2b ab       	std	Y+51, r18	; 0x33
   160fa:	77 24       	eor	r7, r7
   160fc:	73 94       	inc	r7
   160fe:	a6 01       	movw	r20, r12
   16100:	4f 5f       	subi	r20, 0xFF	; 255
   16102:	5f 4f       	sbci	r21, 0xFF	; 255
   16104:	5e ab       	std	Y+54, r21	; 0x36
   16106:	4d ab       	std	Y+53, r20	; 0x35
   16108:	2c 9c       	mul	r2, r12
   1610a:	c0 01       	movw	r24, r0
   1610c:	2d 9c       	mul	r2, r13
   1610e:	90 0d       	add	r25, r0
   16110:	11 24       	eor	r1, r1
   16112:	bc 01       	movw	r22, r24
   16114:	6b 5e       	subi	r22, 0xEB	; 235
   16116:	73 4f       	sbci	r23, 0xF3	; 243
   16118:	78 af       	std	Y+56, r23	; 0x38
   1611a:	6f ab       	std	Y+55, r22	; 0x37
   1611c:	ab a9       	ldd	r26, Y+51	; 0x33
   1611e:	bc a9       	ldd	r27, Y+52	; 0x34
   16120:	8d 91       	ld	r24, X+
   16122:	bc ab       	std	Y+52, r27	; 0x34
   16124:	ab ab       	std	Y+51, r26	; 0x33
   16126:	83 21       	and	r24, r3
   16128:	49 f5       	brne	.+82     	; 0x1617c <_Z22Valve_Grouping_Handlerh+0x32c>
   1612a:	73 94       	inc	r7
   1612c:	b4 e0       	ldi	r27, 0x04	; 4
   1612e:	7b 12       	cpse	r7, r27
   16130:	f5 cf       	rjmp	.-22     	; 0x1611c <_Z22Valve_Grouping_Handlerh+0x2cc>
   16132:	bf ef       	ldi	r27, 0xFF	; 255
   16134:	cb 1a       	sub	r12, r27
   16136:	db 0a       	sbc	r13, r27
   16138:	03 5f       	subi	r16, 0xF3	; 243
   1613a:	1f 4f       	sbci	r17, 0xFF	; 255
   1613c:	e3 e0       	ldi	r30, 0x03	; 3
   1613e:	ae 0e       	add	r10, r30
   16140:	b1 1c       	adc	r11, r1
   16142:	f5 e0       	ldi	r31, 0x05	; 5
   16144:	cf 16       	cp	r12, r31
   16146:	d1 04       	cpc	r13, r1
   16148:	61 f6       	brne	.-104    	; 0x160e2 <_Z22Valve_Grouping_Handlerh+0x292>
   1614a:	03 c1       	rjmp	.+518    	; 0x16352 <_Z22Valve_Grouping_Handlerh+0x502>
   1614c:	82 17       	cp	r24, r18
   1614e:	93 07       	cpc	r25, r19
   16150:	11 f4       	brne	.+4      	; 0x16156 <_Z22Valve_Grouping_Handlerh+0x306>
   16152:	50 81       	ld	r21, Z
   16154:	35 2a       	or	r3, r21
   16156:	01 96       	adiw	r24, 0x01	; 1
   16158:	31 96       	adiw	r30, 0x01	; 1
   1615a:	a8 16       	cp	r10, r24
   1615c:	b9 06       	cpc	r11, r25
   1615e:	b1 f7       	brne	.-20     	; 0x1614c <_Z22Valve_Grouping_Handlerh+0x2fc>
   16160:	4f 5f       	subi	r20, 0xFF	; 255
   16162:	f7 01       	movw	r30, r14
   16164:	e4 0f       	add	r30, r20
   16166:	f1 1d       	adc	r31, r1
   16168:	20 81       	ld	r18, Z
   1616a:	22 23       	and	r18, r18
   1616c:	09 f4       	brne	.+2      	; 0x16170 <_Z22Valve_Grouping_Handlerh+0x320>
   1616e:	c0 cf       	rjmp	.-128    	; 0x160f0 <_Z22Valve_Grouping_Handlerh+0x2a0>
   16170:	c5 01       	movw	r24, r10
   16172:	03 97       	sbiw	r24, 0x03	; 3
   16174:	fe 01       	movw	r30, r28
   16176:	bb 96       	adiw	r30, 0x2b	; 43
   16178:	30 e0       	ldi	r19, 0x00	; 0
   1617a:	e8 cf       	rjmp	.-48     	; 0x1614c <_Z22Valve_Grouping_Handlerh+0x2fc>
   1617c:	61 2c       	mov	r6, r1
   1617e:	63 94       	inc	r6
   16180:	e5 ef       	ldi	r30, 0xF5	; 245
   16182:	f3 e1       	ldi	r31, 0x13	; 19
   16184:	24 e1       	ldi	r18, 0x14	; 20
   16186:	11 92       	st	Z+, r1
   16188:	2a 95       	dec	r18
   1618a:	e9 f7       	brne	.-6      	; 0x16186 <_Z22Valve_Grouping_Handlerh+0x336>
   1618c:	d8 01       	movw	r26, r16
   1618e:	11 96       	adiw	r26, 0x01	; 1
   16190:	8c 91       	ld	r24, X
   16192:	11 97       	sbiw	r26, 0x01	; 1
   16194:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   16198:	12 96       	adiw	r26, 0x02	; 2
   1619a:	8c 91       	ld	r24, X
   1619c:	12 97       	sbiw	r26, 0x02	; 2
   1619e:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   161a2:	13 96       	adiw	r26, 0x03	; 3
   161a4:	8c 91       	ld	r24, X
   161a6:	13 97       	sbiw	r26, 0x03	; 3
   161a8:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   161ac:	14 96       	adiw	r26, 0x04	; 4
   161ae:	8c 91       	ld	r24, X
   161b0:	14 97       	sbiw	r26, 0x04	; 4
   161b2:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   161b6:	15 96       	adiw	r26, 0x05	; 5
   161b8:	8c 91       	ld	r24, X
   161ba:	15 97       	sbiw	r26, 0x05	; 5
   161bc:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   161c0:	16 96       	adiw	r26, 0x06	; 6
   161c2:	8c 91       	ld	r24, X
   161c4:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   161c8:	b2 e0       	ldi	r27, 0x02	; 2
   161ca:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
   161ce:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   161d2:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   161d6:	70 92 00 14 	sts	0x1400, r7	; 0x801400 <_sRuble_Parameters+0x52>
   161da:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   161de:	81 30       	cpi	r24, 0x01	; 1
   161e0:	41 f5       	brne	.+80     	; 0x16232 <_Z22Valve_Grouping_Handlerh+0x3e2>
   161e2:	6d ec       	ldi	r22, 0xCD	; 205
   161e4:	7f e3       	ldi	r23, 0x3F	; 63
   161e6:	86 ec       	ldi	r24, 0xC6	; 198
   161e8:	94 e1       	ldi	r25, 0x14	; 20
   161ea:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   161ee:	4a e0       	ldi	r20, 0x0A	; 10
   161f0:	50 e0       	ldi	r21, 0x00	; 0
   161f2:	6d a9       	ldd	r22, Y+53	; 0x35
   161f4:	7e a9       	ldd	r23, Y+54	; 0x36
   161f6:	86 ec       	ldi	r24, 0xC6	; 198
   161f8:	94 e1       	ldi	r25, 0x14	; 20
   161fa:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
   161fe:	86 ec       	ldi	r24, 0xC6	; 198
   16200:	94 e1       	ldi	r25, 0x14	; 20
   16202:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16206:	68 eb       	ldi	r22, 0xB8	; 184
   16208:	7f e3       	ldi	r23, 0x3F	; 63
   1620a:	86 ec       	ldi	r24, 0xC6	; 198
   1620c:	94 e1       	ldi	r25, 0x14	; 20
   1620e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16212:	4c e0       	ldi	r20, 0x0C	; 12
   16214:	50 e0       	ldi	r21, 0x00	; 0
   16216:	65 ef       	ldi	r22, 0xF5	; 245
   16218:	73 e1       	ldi	r23, 0x13	; 19
   1621a:	86 ec       	ldi	r24, 0xC6	; 198
   1621c:	94 e1       	ldi	r25, 0x14	; 20
   1621e:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   16222:	86 ec       	ldi	r24, 0xC6	; 198
   16224:	94 e1       	ldi	r25, 0x14	; 20
   16226:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   1622a:	86 ec       	ldi	r24, 0xC6	; 198
   1622c:	94 e1       	ldi	r25, 0x14	; 20
   1622e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16232:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   16236:	88 23       	and	r24, r24
   16238:	a1 f0       	breq	.+40     	; 0x16262 <_Z22Valve_Grouping_Handlerh+0x412>
   1623a:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   1623e:	88 23       	and	r24, r24
   16240:	81 f0       	breq	.+32     	; 0x16262 <_Z22Valve_Grouping_Handlerh+0x412>
   16242:	e0 ed       	ldi	r30, 0xD0	; 208
   16244:	ff e0       	ldi	r31, 0x0F	; 15
   16246:	01 90       	ld	r0, Z+
   16248:	00 20       	and	r0, r0
   1624a:	e9 f7       	brne	.-6      	; 0x16246 <_Z22Valve_Grouping_Handlerh+0x3f6>
   1624c:	31 97       	sbiw	r30, 0x01	; 1
   1624e:	af 01       	movw	r20, r30
   16250:	40 5d       	subi	r20, 0xD0	; 208
   16252:	5f 40       	sbci	r21, 0x0F	; 15
   16254:	21 e0       	ldi	r18, 0x01	; 1
   16256:	60 ed       	ldi	r22, 0xD0	; 208
   16258:	7f e0       	ldi	r23, 0x0F	; 15
   1625a:	82 e6       	ldi	r24, 0x62	; 98
   1625c:	9f e0       	ldi	r25, 0x0F	; 15
   1625e:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   16262:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   16266:	8c e0       	ldi	r24, 0x0C	; 12
   16268:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   1626c:	88 eb       	ldi	r24, 0xB8	; 184
   1626e:	9b e0       	ldi	r25, 0x0B	; 11
   16270:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
   16274:	88 23       	and	r24, r24
   16276:	09 f4       	brne	.+2      	; 0x1627a <_Z22Valve_Grouping_Handlerh+0x42a>
   16278:	59 c0       	rjmp	.+178    	; 0x1632c <_Z22Valve_Grouping_Handlerh+0x4dc>
   1627a:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   1627e:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   16282:	88 23       	and	r24, r24
   16284:	a1 f0       	breq	.+40     	; 0x162ae <_Z22Valve_Grouping_Handlerh+0x45e>
   16286:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   1628a:	88 23       	and	r24, r24
   1628c:	81 f0       	breq	.+32     	; 0x162ae <_Z22Valve_Grouping_Handlerh+0x45e>
   1628e:	e0 ed       	ldi	r30, 0xD0	; 208
   16290:	ff e0       	ldi	r31, 0x0F	; 15
   16292:	01 90       	ld	r0, Z+
   16294:	00 20       	and	r0, r0
   16296:	e9 f7       	brne	.-6      	; 0x16292 <_Z22Valve_Grouping_Handlerh+0x442>
   16298:	31 97       	sbiw	r30, 0x01	; 1
   1629a:	af 01       	movw	r20, r30
   1629c:	40 5d       	subi	r20, 0xD0	; 208
   1629e:	5f 40       	sbci	r21, 0x0F	; 15
   162a0:	21 e0       	ldi	r18, 0x01	; 1
   162a2:	60 ed       	ldi	r22, 0xD0	; 208
   162a4:	7f e0       	ldi	r23, 0x0F	; 15
   162a6:	82 e6       	ldi	r24, 0x62	; 98
   162a8:	9f e0       	ldi	r25, 0x0F	; 15
   162aa:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   162ae:	90 e0       	ldi	r25, 0x00	; 0
   162b0:	80 e0       	ldi	r24, 0x00	; 0
   162b2:	28 2f       	mov	r18, r24
   162b4:	30 e0       	ldi	r19, 0x00	; 0
   162b6:	ef a9       	ldd	r30, Y+55	; 0x37
   162b8:	f8 ad       	ldd	r31, Y+56	; 0x38
   162ba:	e2 0f       	add	r30, r18
   162bc:	f3 1f       	adc	r31, r19
   162be:	d9 01       	movw	r26, r18
   162c0:	a7 5f       	subi	r26, 0xF7	; 247
   162c2:	bb 4e       	sbci	r27, 0xEB	; 235
   162c4:	41 81       	ldd	r20, Z+1	; 0x01
   162c6:	2c 91       	ld	r18, X
   162c8:	42 17       	cp	r20, r18
   162ca:	11 f0       	breq	.+4      	; 0x162d0 <_Z22Valve_Grouping_Handlerh+0x480>
   162cc:	90 e0       	ldi	r25, 0x00	; 0
   162ce:	86 e0       	ldi	r24, 0x06	; 6
   162d0:	9f 5f       	subi	r25, 0xFF	; 255
   162d2:	8f 5f       	subi	r24, 0xFF	; 255
   162d4:	86 30       	cpi	r24, 0x06	; 6
   162d6:	68 f3       	brcs	.-38     	; 0x162b2 <_Z22Valve_Grouping_Handlerh+0x462>
   162d8:	96 30       	cpi	r25, 0x06	; 6
   162da:	c9 f4       	brne	.+50     	; 0x1630e <_Z22Valve_Grouping_Handlerh+0x4be>
   162dc:	81 e0       	ldi	r24, 0x01	; 1
   162de:	f8 01       	movw	r30, r16
   162e0:	83 87       	std	Z+11, r24	; 0x0b
   162e2:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   162e6:	22 87       	std	Z+10, r18	; 0x0a
   162e8:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   162ec:	90 e0       	ldi	r25, 0x00	; 0
   162ee:	98 2f       	mov	r25, r24
   162f0:	88 27       	eor	r24, r24
   162f2:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   162f6:	83 2b       	or	r24, r19
   162f8:	91 87       	std	Z+9, r25	; 0x09
   162fa:	80 87       	std	Z+8, r24	; 0x08
   162fc:	22 23       	and	r18, r18
   162fe:	e9 f0       	breq	.+58     	; 0x1633a <_Z22Valve_Grouping_Handlerh+0x4ea>
   16300:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16304:	81 30       	cpi	r24, 0x01	; 1
   16306:	d9 f4       	brne	.+54     	; 0x1633e <_Z22Valve_Grouping_Handlerh+0x4ee>
   16308:	63 e9       	ldi	r22, 0x93	; 147
   1630a:	7f e3       	ldi	r23, 0x3F	; 63
   1630c:	06 c0       	rjmp	.+12     	; 0x1631a <_Z22Valve_Grouping_Handlerh+0x4ca>
   1630e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16312:	81 30       	cpi	r24, 0x01	; 1
   16314:	a1 f4       	brne	.+40     	; 0x1633e <_Z22Valve_Grouping_Handlerh+0x4ee>
   16316:	62 e7       	ldi	r22, 0x72	; 114
   16318:	7f e3       	ldi	r23, 0x3F	; 63
   1631a:	86 ec       	ldi	r24, 0xC6	; 198
   1631c:	94 e1       	ldi	r25, 0x14	; 20
   1631e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16322:	86 ec       	ldi	r24, 0xC6	; 198
   16324:	94 e1       	ldi	r25, 0x14	; 20
   16326:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1632a:	09 c0       	rjmp	.+18     	; 0x1633e <_Z22Valve_Grouping_Handlerh+0x4ee>
   1632c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16330:	81 30       	cpi	r24, 0x01	; 1
   16332:	29 f4       	brne	.+10     	; 0x1633e <_Z22Valve_Grouping_Handlerh+0x4ee>
   16334:	6b e4       	ldi	r22, 0x4B	; 75
   16336:	7f e3       	ldi	r23, 0x3F	; 63
   16338:	f0 cf       	rjmp	.-32     	; 0x1631a <_Z22Valve_Grouping_Handlerh+0x4ca>
   1633a:	e3 e0       	ldi	r30, 0x03	; 3
   1633c:	6e 2e       	mov	r6, r30
   1633e:	68 ee       	ldi	r22, 0xE8	; 232
   16340:	73 e0       	ldi	r23, 0x03	; 3
   16342:	80 e0       	ldi	r24, 0x00	; 0
   16344:	90 e0       	ldi	r25, 0x00	; 0
   16346:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   1634a:	f3 e0       	ldi	r31, 0x03	; 3
   1634c:	6f 12       	cpse	r6, r31
   1634e:	17 cf       	rjmp	.-466    	; 0x1617e <_Z22Valve_Grouping_Handlerh+0x32e>
   16350:	ec ce       	rjmp	.-552    	; 0x1612a <_Z22Valve_Grouping_Handlerh+0x2da>
   16352:	23 e0       	ldi	r18, 0x03	; 3
   16354:	52 16       	cp	r5, r18
   16356:	11 f4       	brne	.+4      	; 0x1635c <_Z22Valve_Grouping_Handlerh+0x50c>
   16358:	0c 94 62 ba 	jmp	0x174c4	; 0x174c4 <_Z22Valve_Grouping_Handlerh+0x1674>
   1635c:	35 e0       	ldi	r19, 0x05	; 5
   1635e:	53 12       	cpse	r5, r19
   16360:	45 c0       	rjmp	.+138    	; 0x163ec <_Z22Valve_Grouping_Handlerh+0x59c>
   16362:	7e e0       	ldi	r23, 0x0E	; 14
   16364:	f7 2e       	mov	r15, r23
   16366:	00 e0       	ldi	r16, 0x00	; 0
   16368:	10 e0       	ldi	r17, 0x00	; 0
   1636a:	f4 01       	movw	r30, r8
   1636c:	e0 0f       	add	r30, r16
   1636e:	f1 1f       	adc	r31, r17
   16370:	e1 81       	ldd	r30, Z+1	; 0x01
   16372:	e3 31       	cpi	r30, 0x13	; 19
   16374:	68 f0       	brcs	.+26     	; 0x16390 <_Z22Valve_Grouping_Handlerh+0x540>
   16376:	f0 e0       	ldi	r31, 0x00	; 0
   16378:	e7 5c       	subi	r30, 0xC7	; 199
   1637a:	fb 4e       	sbci	r31, 0xEB	; 235
   1637c:	61 e0       	ldi	r22, 0x01	; 1
   1637e:	80 81       	ld	r24, Z
   16380:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   16384:	68 ec       	ldi	r22, 0xC8	; 200
   16386:	70 e0       	ldi	r23, 0x00	; 0
   16388:	80 e0       	ldi	r24, 0x00	; 0
   1638a:	90 e0       	ldi	r25, 0x00	; 0
   1638c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16390:	0f 5f       	subi	r16, 0xFF	; 255
   16392:	1f 4f       	sbci	r17, 0xFF	; 255
   16394:	05 30       	cpi	r16, 0x05	; 5
   16396:	11 05       	cpc	r17, r1
   16398:	41 f7       	brne	.-48     	; 0x1636a <_Z22Valve_Grouping_Handlerh+0x51a>
   1639a:	fa 94       	dec	r15
   1639c:	46 e0       	ldi	r20, 0x06	; 6
   1639e:	84 0e       	add	r8, r20
   163a0:	91 1c       	adc	r9, r1
   163a2:	f1 10       	cpse	r15, r1
   163a4:	e0 cf       	rjmp	.-64     	; 0x16366 <_Z22Valve_Grouping_Handlerh+0x516>
   163a6:	80 91 3a 0e 	lds	r24, 0x0E3A	; 0x800e3a <_sExtra_Plot+0x52>
   163aa:	88 36       	cpi	r24, 0x68	; 104
   163ac:	11 f0       	breq	.+4      	; 0x163b2 <_Z22Valve_Grouping_Handlerh+0x562>
   163ae:	0c 94 62 ba 	jmp	0x174c4	; 0x174c4 <_Z22Valve_Grouping_Handlerh+0x1674>
   163b2:	0e e3       	ldi	r16, 0x3E	; 62
   163b4:	1e e0       	ldi	r17, 0x0E	; 14
   163b6:	63 e4       	ldi	r22, 0x43	; 67
   163b8:	e6 2e       	mov	r14, r22
   163ba:	6e e0       	ldi	r22, 0x0E	; 14
   163bc:	f6 2e       	mov	r15, r22
   163be:	d8 01       	movw	r26, r16
   163c0:	ed 91       	ld	r30, X+
   163c2:	8d 01       	movw	r16, r26
   163c4:	e3 31       	cpi	r30, 0x13	; 19
   163c6:	68 f0       	brcs	.+26     	; 0x163e2 <_Z22Valve_Grouping_Handlerh+0x592>
   163c8:	f0 e0       	ldi	r31, 0x00	; 0
   163ca:	e7 5c       	subi	r30, 0xC7	; 199
   163cc:	fb 4e       	sbci	r31, 0xEB	; 235
   163ce:	61 e0       	ldi	r22, 0x01	; 1
   163d0:	80 81       	ld	r24, Z
   163d2:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   163d6:	68 ec       	ldi	r22, 0xC8	; 200
   163d8:	70 e0       	ldi	r23, 0x00	; 0
   163da:	80 e0       	ldi	r24, 0x00	; 0
   163dc:	90 e0       	ldi	r25, 0x00	; 0
   163de:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   163e2:	e0 16       	cp	r14, r16
   163e4:	f1 06       	cpc	r15, r17
   163e6:	59 f7       	brne	.-42     	; 0x163be <_Z22Valve_Grouping_Handlerh+0x56e>
   163e8:	0c 94 62 ba 	jmp	0x174c4	; 0x174c4 <_Z22Valve_Grouping_Handlerh+0x1674>
   163ec:	b1 e0       	ldi	r27, 0x01	; 1
   163ee:	5b 12       	cpse	r5, r27
   163f0:	4b c1       	rjmp	.+662    	; 0x16688 <_Z22Valve_Grouping_Handlerh+0x838>
   163f2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   163f6:	81 30       	cpi	r24, 0x01	; 1
   163f8:	51 f4       	brne	.+20     	; 0x1640e <_Z22Valve_Grouping_Handlerh+0x5be>
   163fa:	60 e2       	ldi	r22, 0x20	; 32
   163fc:	7f e3       	ldi	r23, 0x3F	; 63
   163fe:	86 ec       	ldi	r24, 0xC6	; 198
   16400:	94 e1       	ldi	r25, 0x14	; 20
   16402:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16406:	86 ec       	ldi	r24, 0xC6	; 198
   16408:	94 e1       	ldi	r25, 0x14	; 20
   1640a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1640e:	05 e1       	ldi	r16, 0x15	; 21
   16410:	1c e0       	ldi	r17, 0x0C	; 12
   16412:	44 e0       	ldi	r20, 0x04	; 4
   16414:	a4 2e       	mov	r10, r20
   16416:	b1 2c       	mov	r11, r1
   16418:	c1 2c       	mov	r12, r1
   1641a:	d1 2c       	mov	r13, r1
   1641c:	5d e0       	ldi	r21, 0x0D	; 13
   1641e:	65 2e       	mov	r6, r21
   16420:	f8 01       	movw	r30, r16
   16422:	82 85       	ldd	r24, Z+10	; 0x0a
   16424:	88 23       	and	r24, r24
   16426:	09 f1       	breq	.+66     	; 0x1646a <_Z22Valve_Grouping_Handlerh+0x61a>
   16428:	71 2c       	mov	r7, r1
   1642a:	40 e0       	ldi	r20, 0x00	; 0
   1642c:	36 c0       	rjmp	.+108    	; 0x1649a <_Z22Valve_Grouping_Handlerh+0x64a>
   1642e:	ae 01       	movw	r20, r28
   16430:	45 5d       	subi	r20, 0xD5	; 213
   16432:	5f 4f       	sbci	r21, 0xFF	; 255
   16434:	1a 01       	movw	r2, r20
   16436:	99 24       	eor	r9, r9
   16438:	93 94       	inc	r9
   1643a:	b6 01       	movw	r22, r12
   1643c:	6f 5f       	subi	r22, 0xFF	; 255
   1643e:	7f 4f       	sbci	r23, 0xFF	; 255
   16440:	7c ab       	std	Y+52, r23	; 0x34
   16442:	6b ab       	std	Y+51, r22	; 0x33
   16444:	6c 9c       	mul	r6, r12
   16446:	c0 01       	movw	r24, r0
   16448:	6d 9c       	mul	r6, r13
   1644a:	90 0d       	add	r25, r0
   1644c:	11 24       	eor	r1, r1
   1644e:	dc 01       	movw	r26, r24
   16450:	ab 5e       	subi	r26, 0xEB	; 235
   16452:	b3 4f       	sbci	r27, 0xF3	; 243
   16454:	be ab       	std	Y+54, r27	; 0x36
   16456:	ad ab       	std	Y+53, r26	; 0x35
   16458:	f1 01       	movw	r30, r2
   1645a:	81 91       	ld	r24, Z+
   1645c:	1f 01       	movw	r2, r30
   1645e:	87 21       	and	r24, r7
   16460:	41 f5       	brne	.+80     	; 0x164b2 <_Z22Valve_Grouping_Handlerh+0x662>
   16462:	93 94       	inc	r9
   16464:	f4 e0       	ldi	r31, 0x04	; 4
   16466:	9f 12       	cpse	r9, r31
   16468:	f7 cf       	rjmp	.-18     	; 0x16458 <_Z22Valve_Grouping_Handlerh+0x608>
   1646a:	ff ef       	ldi	r31, 0xFF	; 255
   1646c:	cf 1a       	sub	r12, r31
   1646e:	df 0a       	sbc	r13, r31
   16470:	03 5f       	subi	r16, 0xF3	; 243
   16472:	1f 4f       	sbci	r17, 0xFF	; 255
   16474:	23 e0       	ldi	r18, 0x03	; 3
   16476:	a2 0e       	add	r10, r18
   16478:	b1 1c       	adc	r11, r1
   1647a:	36 e0       	ldi	r19, 0x06	; 6
   1647c:	c3 16       	cp	r12, r19
   1647e:	d1 04       	cpc	r13, r1
   16480:	79 f6       	brne	.-98     	; 0x16420 <_Z22Valve_Grouping_Handlerh+0x5d0>
   16482:	06 c1       	rjmp	.+524    	; 0x16690 <_Z22Valve_Grouping_Handlerh+0x840>
   16484:	28 17       	cp	r18, r24
   16486:	39 07       	cpc	r19, r25
   16488:	11 f4       	brne	.+4      	; 0x1648e <_Z22Valve_Grouping_Handlerh+0x63e>
   1648a:	50 81       	ld	r21, Z
   1648c:	75 2a       	or	r7, r21
   1648e:	01 96       	adiw	r24, 0x01	; 1
   16490:	31 96       	adiw	r30, 0x01	; 1
   16492:	a8 16       	cp	r10, r24
   16494:	b9 06       	cpc	r11, r25
   16496:	b1 f7       	brne	.-20     	; 0x16484 <_Z22Valve_Grouping_Handlerh+0x634>
   16498:	4f 5f       	subi	r20, 0xFF	; 255
   1649a:	f7 01       	movw	r30, r14
   1649c:	e4 0f       	add	r30, r20
   1649e:	f1 1d       	adc	r31, r1
   164a0:	20 81       	ld	r18, Z
   164a2:	22 23       	and	r18, r18
   164a4:	21 f2       	breq	.-120    	; 0x1642e <_Z22Valve_Grouping_Handlerh+0x5de>
   164a6:	c5 01       	movw	r24, r10
   164a8:	03 97       	sbiw	r24, 0x03	; 3
   164aa:	fe 01       	movw	r30, r28
   164ac:	bb 96       	adiw	r30, 0x2b	; 43
   164ae:	30 e0       	ldi	r19, 0x00	; 0
   164b0:	e9 cf       	rjmp	.-46     	; 0x16484 <_Z22Valve_Grouping_Handlerh+0x634>
   164b2:	81 2c       	mov	r8, r1
   164b4:	83 94       	inc	r8
   164b6:	a5 ef       	ldi	r26, 0xF5	; 245
   164b8:	b3 e1       	ldi	r27, 0x13	; 19
   164ba:	e4 e1       	ldi	r30, 0x14	; 20
   164bc:	1d 92       	st	X+, r1
   164be:	ea 95       	dec	r30
   164c0:	e9 f7       	brne	.-6      	; 0x164bc <_Z22Valve_Grouping_Handlerh+0x66c>
   164c2:	d8 01       	movw	r26, r16
   164c4:	11 96       	adiw	r26, 0x01	; 1
   164c6:	8c 91       	ld	r24, X
   164c8:	11 97       	sbiw	r26, 0x01	; 1
   164ca:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   164ce:	12 96       	adiw	r26, 0x02	; 2
   164d0:	8c 91       	ld	r24, X
   164d2:	12 97       	sbiw	r26, 0x02	; 2
   164d4:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   164d8:	13 96       	adiw	r26, 0x03	; 3
   164da:	8c 91       	ld	r24, X
   164dc:	13 97       	sbiw	r26, 0x03	; 3
   164de:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   164e2:	14 96       	adiw	r26, 0x04	; 4
   164e4:	8c 91       	ld	r24, X
   164e6:	14 97       	sbiw	r26, 0x04	; 4
   164e8:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   164ec:	15 96       	adiw	r26, 0x05	; 5
   164ee:	8c 91       	ld	r24, X
   164f0:	15 97       	sbiw	r26, 0x05	; 5
   164f2:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   164f6:	16 96       	adiw	r26, 0x06	; 6
   164f8:	8c 91       	ld	r24, X
   164fa:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   164fe:	b2 e0       	ldi	r27, 0x02	; 2
   16500:	b0 93 fb 13 	sts	0x13FB, r27	; 0x8013fb <_sRuble_Parameters+0x4d>
   16504:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16508:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   1650c:	90 92 00 14 	sts	0x1400, r9	; 0x801400 <_sRuble_Parameters+0x52>
   16510:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16514:	81 30       	cpi	r24, 0x01	; 1
   16516:	41 f5       	brne	.+80     	; 0x16568 <_Z22Valve_Grouping_Handlerh+0x718>
   16518:	6c ef       	ldi	r22, 0xFC	; 252
   1651a:	7e e3       	ldi	r23, 0x3E	; 62
   1651c:	86 ec       	ldi	r24, 0xC6	; 198
   1651e:	94 e1       	ldi	r25, 0x14	; 20
   16520:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16524:	4a e0       	ldi	r20, 0x0A	; 10
   16526:	50 e0       	ldi	r21, 0x00	; 0
   16528:	6b a9       	ldd	r22, Y+51	; 0x33
   1652a:	7c a9       	ldd	r23, Y+52	; 0x34
   1652c:	86 ec       	ldi	r24, 0xC6	; 198
   1652e:	94 e1       	ldi	r25, 0x14	; 20
   16530:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
   16534:	86 ec       	ldi	r24, 0xC6	; 198
   16536:	94 e1       	ldi	r25, 0x14	; 20
   16538:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1653c:	67 ee       	ldi	r22, 0xE7	; 231
   1653e:	7e e3       	ldi	r23, 0x3E	; 62
   16540:	86 ec       	ldi	r24, 0xC6	; 198
   16542:	94 e1       	ldi	r25, 0x14	; 20
   16544:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16548:	46 e0       	ldi	r20, 0x06	; 6
   1654a:	50 e0       	ldi	r21, 0x00	; 0
   1654c:	65 ef       	ldi	r22, 0xF5	; 245
   1654e:	73 e1       	ldi	r23, 0x13	; 19
   16550:	86 ec       	ldi	r24, 0xC6	; 198
   16552:	94 e1       	ldi	r25, 0x14	; 20
   16554:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   16558:	86 ec       	ldi	r24, 0xC6	; 198
   1655a:	94 e1       	ldi	r25, 0x14	; 20
   1655c:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   16560:	86 ec       	ldi	r24, 0xC6	; 198
   16562:	94 e1       	ldi	r25, 0x14	; 20
   16564:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16568:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   1656c:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   16570:	88 23       	and	r24, r24
   16572:	a1 f0       	breq	.+40     	; 0x1659c <_Z22Valve_Grouping_Handlerh+0x74c>
   16574:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   16578:	88 23       	and	r24, r24
   1657a:	81 f0       	breq	.+32     	; 0x1659c <_Z22Valve_Grouping_Handlerh+0x74c>
   1657c:	e0 ed       	ldi	r30, 0xD0	; 208
   1657e:	ff e0       	ldi	r31, 0x0F	; 15
   16580:	01 90       	ld	r0, Z+
   16582:	00 20       	and	r0, r0
   16584:	e9 f7       	brne	.-6      	; 0x16580 <_Z22Valve_Grouping_Handlerh+0x730>
   16586:	31 97       	sbiw	r30, 0x01	; 1
   16588:	af 01       	movw	r20, r30
   1658a:	40 5d       	subi	r20, 0xD0	; 208
   1658c:	5f 40       	sbci	r21, 0x0F	; 15
   1658e:	21 e0       	ldi	r18, 0x01	; 1
   16590:	60 ed       	ldi	r22, 0xD0	; 208
   16592:	7f e0       	ldi	r23, 0x0F	; 15
   16594:	82 e6       	ldi	r24, 0x62	; 98
   16596:	9f e0       	ldi	r25, 0x0F	; 15
   16598:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   1659c:	8c e0       	ldi	r24, 0x0C	; 12
   1659e:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   165a2:	88 eb       	ldi	r24, 0xB8	; 184
   165a4:	9b e0       	ldi	r25, 0x0B	; 11
   165a6:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
   165aa:	88 23       	and	r24, r24
   165ac:	09 f4       	brne	.+2      	; 0x165b0 <_Z22Valve_Grouping_Handlerh+0x760>
   165ae:	59 c0       	rjmp	.+178    	; 0x16662 <_Z22Valve_Grouping_Handlerh+0x812>
   165b0:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   165b4:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   165b8:	88 23       	and	r24, r24
   165ba:	a1 f0       	breq	.+40     	; 0x165e4 <_Z22Valve_Grouping_Handlerh+0x794>
   165bc:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   165c0:	88 23       	and	r24, r24
   165c2:	81 f0       	breq	.+32     	; 0x165e4 <_Z22Valve_Grouping_Handlerh+0x794>
   165c4:	e0 ed       	ldi	r30, 0xD0	; 208
   165c6:	ff e0       	ldi	r31, 0x0F	; 15
   165c8:	01 90       	ld	r0, Z+
   165ca:	00 20       	and	r0, r0
   165cc:	e9 f7       	brne	.-6      	; 0x165c8 <_Z22Valve_Grouping_Handlerh+0x778>
   165ce:	31 97       	sbiw	r30, 0x01	; 1
   165d0:	af 01       	movw	r20, r30
   165d2:	40 5d       	subi	r20, 0xD0	; 208
   165d4:	5f 40       	sbci	r21, 0x0F	; 15
   165d6:	21 e0       	ldi	r18, 0x01	; 1
   165d8:	60 ed       	ldi	r22, 0xD0	; 208
   165da:	7f e0       	ldi	r23, 0x0F	; 15
   165dc:	82 e6       	ldi	r24, 0x62	; 98
   165de:	9f e0       	ldi	r25, 0x0F	; 15
   165e0:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   165e4:	90 e0       	ldi	r25, 0x00	; 0
   165e6:	80 e0       	ldi	r24, 0x00	; 0
   165e8:	28 2f       	mov	r18, r24
   165ea:	30 e0       	ldi	r19, 0x00	; 0
   165ec:	ed a9       	ldd	r30, Y+53	; 0x35
   165ee:	fe a9       	ldd	r31, Y+54	; 0x36
   165f0:	e2 0f       	add	r30, r18
   165f2:	f3 1f       	adc	r31, r19
   165f4:	d9 01       	movw	r26, r18
   165f6:	a7 5f       	subi	r26, 0xF7	; 247
   165f8:	bb 4e       	sbci	r27, 0xEB	; 235
   165fa:	41 81       	ldd	r20, Z+1	; 0x01
   165fc:	2c 91       	ld	r18, X
   165fe:	42 17       	cp	r20, r18
   16600:	11 f0       	breq	.+4      	; 0x16606 <_Z22Valve_Grouping_Handlerh+0x7b6>
   16602:	90 e0       	ldi	r25, 0x00	; 0
   16604:	86 e0       	ldi	r24, 0x06	; 6
   16606:	9f 5f       	subi	r25, 0xFF	; 255
   16608:	8f 5f       	subi	r24, 0xFF	; 255
   1660a:	86 30       	cpi	r24, 0x06	; 6
   1660c:	68 f3       	brcs	.-38     	; 0x165e8 <_Z22Valve_Grouping_Handlerh+0x798>
   1660e:	96 30       	cpi	r25, 0x06	; 6
   16610:	c9 f4       	brne	.+50     	; 0x16644 <_Z22Valve_Grouping_Handlerh+0x7f4>
   16612:	81 e0       	ldi	r24, 0x01	; 1
   16614:	f8 01       	movw	r30, r16
   16616:	83 87       	std	Z+11, r24	; 0x0b
   16618:	20 91 11 14 	lds	r18, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   1661c:	22 87       	std	Z+10, r18	; 0x0a
   1661e:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   16622:	90 e0       	ldi	r25, 0x00	; 0
   16624:	98 2f       	mov	r25, r24
   16626:	88 27       	eor	r24, r24
   16628:	30 91 13 14 	lds	r19, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   1662c:	83 2b       	or	r24, r19
   1662e:	91 87       	std	Z+9, r25	; 0x09
   16630:	80 87       	std	Z+8, r24	; 0x08
   16632:	22 23       	and	r18, r18
   16634:	e9 f0       	breq	.+58     	; 0x16670 <_Z22Valve_Grouping_Handlerh+0x820>
   16636:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1663a:	81 30       	cpi	r24, 0x01	; 1
   1663c:	d9 f4       	brne	.+54     	; 0x16674 <_Z22Valve_Grouping_Handlerh+0x824>
   1663e:	61 ec       	ldi	r22, 0xC1	; 193
   16640:	7e e3       	ldi	r23, 0x3E	; 62
   16642:	06 c0       	rjmp	.+12     	; 0x16650 <_Z22Valve_Grouping_Handlerh+0x800>
   16644:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16648:	81 30       	cpi	r24, 0x01	; 1
   1664a:	a1 f4       	brne	.+40     	; 0x16674 <_Z22Valve_Grouping_Handlerh+0x824>
   1664c:	6f e9       	ldi	r22, 0x9F	; 159
   1664e:	7e e3       	ldi	r23, 0x3E	; 62
   16650:	86 ec       	ldi	r24, 0xC6	; 198
   16652:	94 e1       	ldi	r25, 0x14	; 20
   16654:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16658:	86 ec       	ldi	r24, 0xC6	; 198
   1665a:	94 e1       	ldi	r25, 0x14	; 20
   1665c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16660:	09 c0       	rjmp	.+18     	; 0x16674 <_Z22Valve_Grouping_Handlerh+0x824>
   16662:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16666:	81 30       	cpi	r24, 0x01	; 1
   16668:	29 f4       	brne	.+10     	; 0x16674 <_Z22Valve_Grouping_Handlerh+0x824>
   1666a:	61 e7       	ldi	r22, 0x71	; 113
   1666c:	7e e3       	ldi	r23, 0x3E	; 62
   1666e:	f0 cf       	rjmp	.-32     	; 0x16650 <_Z22Valve_Grouping_Handlerh+0x800>
   16670:	93 e0       	ldi	r25, 0x03	; 3
   16672:	89 2e       	mov	r8, r25
   16674:	68 ee       	ldi	r22, 0xE8	; 232
   16676:	73 e0       	ldi	r23, 0x03	; 3
   16678:	80 e0       	ldi	r24, 0x00	; 0
   1667a:	90 e0       	ldi	r25, 0x00	; 0
   1667c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16680:	f3 e0       	ldi	r31, 0x03	; 3
   16682:	8f 12       	cpse	r8, r31
   16684:	17 cf       	rjmp	.-466    	; 0x164b4 <_Z22Valve_Grouping_Handlerh+0x664>
   16686:	ed ce       	rjmp	.-550    	; 0x16462 <_Z22Valve_Grouping_Handlerh+0x612>
   16688:	21 e0       	ldi	r18, 0x01	; 1
   1668a:	25 15       	cp	r18, r5
   1668c:	08 f4       	brcc	.+2      	; 0x16690 <_Z22Valve_Grouping_Handlerh+0x840>
   1668e:	19 c7       	rjmp	.+3634   	; 0x174c2 <_Z22Valve_Grouping_Handlerh+0x1672>
   16690:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16694:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16698:	9f 30       	cpi	r25, 0x0F	; 15
   1669a:	08 f0       	brcs	.+2      	; 0x1669e <_Z22Valve_Grouping_Handlerh+0x84e>
   1669c:	96 c3       	rjmp	.+1836   	; 0x16dca <_Z22Valve_Grouping_Handlerh+0xf7a>
   1669e:	81 30       	cpi	r24, 0x01	; 1
   166a0:	51 f4       	brne	.+20     	; 0x166b6 <_Z22Valve_Grouping_Handlerh+0x866>
   166a2:	63 e6       	ldi	r22, 0x63	; 99
   166a4:	7e e3       	ldi	r23, 0x3E	; 62
   166a6:	86 ec       	ldi	r24, 0xC6	; 198
   166a8:	94 e1       	ldi	r25, 0x14	; 20
   166aa:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   166ae:	86 ec       	ldi	r24, 0xC6	; 198
   166b0:	94 e1       	ldi	r25, 0x14	; 20
   166b2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   166b6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   166ba:	81 30       	cpi	r24, 0x01	; 1
   166bc:	c1 f5       	brne	.+112    	; 0x1672e <_Z22Valve_Grouping_Handlerh+0x8de>
   166be:	00 e0       	ldi	r16, 0x00	; 0
   166c0:	10 e0       	ldi	r17, 0x00	; 0
   166c2:	86 e0       	ldi	r24, 0x06	; 6
   166c4:	f8 2e       	mov	r15, r24
   166c6:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   166ca:	90 e0       	ldi	r25, 0x00	; 0
   166cc:	01 97       	sbiw	r24, 0x01	; 1
   166ce:	f8 9e       	mul	r15, r24
   166d0:	f0 01       	movw	r30, r0
   166d2:	f9 9e       	mul	r15, r25
   166d4:	f0 0d       	add	r31, r0
   166d6:	11 24       	eor	r1, r1
   166d8:	e2 5b       	subi	r30, 0xB2	; 178
   166da:	f2 4f       	sbci	r31, 0xF2	; 242
   166dc:	e0 0f       	add	r30, r16
   166de:	f1 1f       	adc	r31, r17
   166e0:	4a e0       	ldi	r20, 0x0A	; 10
   166e2:	50 e0       	ldi	r21, 0x00	; 0
   166e4:	61 81       	ldd	r22, Z+1	; 0x01
   166e6:	86 ec       	ldi	r24, 0xC6	; 198
   166e8:	94 e1       	ldi	r25, 0x14	; 20
   166ea:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   166ee:	61 e6       	ldi	r22, 0x61	; 97
   166f0:	7e e3       	ldi	r23, 0x3E	; 62
   166f2:	86 ec       	ldi	r24, 0xC6	; 198
   166f4:	94 e1       	ldi	r25, 0x14	; 20
   166f6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   166fa:	0f 5f       	subi	r16, 0xFF	; 255
   166fc:	1f 4f       	sbci	r17, 0xFF	; 255
   166fe:	05 30       	cpi	r16, 0x05	; 5
   16700:	11 05       	cpc	r17, r1
   16702:	09 f7       	brne	.-62     	; 0x166c6 <_Z22Valve_Grouping_Handlerh+0x876>
   16704:	6b e4       	ldi	r22, 0x4B	; 75
   16706:	7e e3       	ldi	r23, 0x3E	; 62
   16708:	86 ec       	ldi	r24, 0xC6	; 198
   1670a:	94 e1       	ldi	r25, 0x14	; 20
   1670c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16710:	60 91 1e 14 	lds	r22, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16714:	70 e0       	ldi	r23, 0x00	; 0
   16716:	61 50       	subi	r22, 0x01	; 1
   16718:	71 09       	sbc	r23, r1
   1671a:	4a e0       	ldi	r20, 0x0A	; 10
   1671c:	50 e0       	ldi	r21, 0x00	; 0
   1671e:	86 ec       	ldi	r24, 0xC6	; 198
   16720:	94 e1       	ldi	r25, 0x14	; 20
   16722:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
   16726:	86 ec       	ldi	r24, 0xC6	; 198
   16728:	94 e1       	ldi	r25, 0x14	; 20
   1672a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1672e:	00 e0       	ldi	r16, 0x00	; 0
   16730:	10 e0       	ldi	r17, 0x00	; 0
   16732:	81 e0       	ldi	r24, 0x01	; 1
   16734:	85 25       	eor	r24, r5
   16736:	81 70       	andi	r24, 0x01	; 1
   16738:	8f ab       	std	Y+55, r24	; 0x37
   1673a:	ad e0       	ldi	r26, 0x0D	; 13
   1673c:	2a 2e       	mov	r2, r26
   1673e:	b0 ed       	ldi	r27, 0xD0	; 208
   16740:	6b 2e       	mov	r6, r27
   16742:	bf e0       	ldi	r27, 0x0F	; 15
   16744:	7b 2e       	mov	r7, r27
   16746:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1674a:	90 e0       	ldi	r25, 0x00	; 0
   1674c:	01 97       	sbiw	r24, 0x01	; 1
   1674e:	36 e0       	ldi	r19, 0x06	; 6
   16750:	38 9f       	mul	r19, r24
   16752:	f0 01       	movw	r30, r0
   16754:	39 9f       	mul	r19, r25
   16756:	f0 0d       	add	r31, r0
   16758:	11 24       	eor	r1, r1
   1675a:	e2 5b       	subi	r30, 0xB2	; 178
   1675c:	f2 4f       	sbci	r31, 0xF2	; 242
   1675e:	e0 0f       	add	r30, r16
   16760:	f1 1f       	adc	r31, r17
   16762:	f1 80       	ldd	r15, Z+1	; 0x01
   16764:	8f ef       	ldi	r24, 0xFF	; 255
   16766:	8f 0d       	add	r24, r15
   16768:	82 31       	cpi	r24, 0x12	; 18
   1676a:	08 f0       	brcs	.+2      	; 0x1676e <_Z22Valve_Grouping_Handlerh+0x91e>
   1676c:	f5 c2       	rjmp	.+1514   	; 0x16d58 <_Z22Valve_Grouping_Handlerh+0xf08>
   1676e:	43 e0       	ldi	r20, 0x03	; 3
   16770:	4f 15       	cp	r20, r15
   16772:	a8 f4       	brcc	.+42     	; 0x1679e <_Z22Valve_Grouping_Handlerh+0x94e>
   16774:	8f 2d       	mov	r24, r15
   16776:	63 e0       	ldi	r22, 0x03	; 3
   16778:	0e 94 4a eb 	call	0x1d694	; 0x1d694 <__udivmodqi4>
   1677c:	2b ea       	ldi	r18, 0xAB	; 171
   1677e:	f2 9e       	mul	r15, r18
   16780:	21 2d       	mov	r18, r1
   16782:	11 24       	eor	r1, r1
   16784:	99 23       	and	r25, r25
   16786:	31 f0       	breq	.+12     	; 0x16794 <_Z22Valve_Grouping_Handlerh+0x944>
   16788:	26 95       	lsr	r18
   1678a:	ee 24       	eor	r14, r14
   1678c:	e3 94       	inc	r14
   1678e:	e2 0e       	add	r14, r18
   16790:	f9 2e       	mov	r15, r25
   16792:	07 c0       	rjmp	.+14     	; 0x167a2 <_Z22Valve_Grouping_Handlerh+0x952>
   16794:	e2 2e       	mov	r14, r18
   16796:	e6 94       	lsr	r14
   16798:	f3 e0       	ldi	r31, 0x03	; 3
   1679a:	ff 2e       	mov	r15, r31
   1679c:	02 c0       	rjmp	.+4      	; 0x167a2 <_Z22Valve_Grouping_Handlerh+0x952>
   1679e:	ee 24       	eor	r14, r14
   167a0:	e3 94       	inc	r14
   167a2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   167a6:	81 30       	cpi	r24, 0x01	; 1
   167a8:	89 f4       	brne	.+34     	; 0x167cc <_Z22Valve_Grouping_Handlerh+0x97c>
   167aa:	67 e3       	ldi	r22, 0x37	; 55
   167ac:	7e e3       	ldi	r23, 0x3E	; 62
   167ae:	86 ec       	ldi	r24, 0xC6	; 198
   167b0:	94 e1       	ldi	r25, 0x14	; 20
   167b2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   167b6:	4a e0       	ldi	r20, 0x0A	; 10
   167b8:	50 e0       	ldi	r21, 0x00	; 0
   167ba:	6e 2d       	mov	r22, r14
   167bc:	86 ec       	ldi	r24, 0xC6	; 198
   167be:	94 e1       	ldi	r25, 0x14	; 20
   167c0:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   167c4:	86 ec       	ldi	r24, 0xC6	; 198
   167c6:	94 e1       	ldi	r25, 0x14	; 20
   167c8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   167cc:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   167d0:	81 11       	cpse	r24, r1
   167d2:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   167d6:	84 e1       	ldi	r24, 0x14	; 20
   167d8:	a5 ef       	ldi	r26, 0xF5	; 245
   167da:	b3 e1       	ldi	r27, 0x13	; 19
   167dc:	1d 92       	st	X+, r1
   167de:	8a 95       	dec	r24
   167e0:	e9 f7       	brne	.-6      	; 0x167dc <_Z22Valve_Grouping_Handlerh+0x98c>
   167e2:	2e 2d       	mov	r18, r14
   167e4:	30 e0       	ldi	r19, 0x00	; 0
   167e6:	21 50       	subi	r18, 0x01	; 1
   167e8:	31 09       	sbc	r19, r1
   167ea:	b7 e0       	ldi	r27, 0x07	; 7
   167ec:	b2 9f       	mul	r27, r18
   167ee:	c0 01       	movw	r24, r0
   167f0:	b3 9f       	mul	r27, r19
   167f2:	90 0d       	add	r25, r0
   167f4:	11 24       	eor	r1, r1
   167f6:	82 55       	subi	r24, 0x52	; 82
   167f8:	9c 4e       	sbci	r25, 0xEC	; 236
   167fa:	fc 01       	movw	r30, r24
   167fc:	ec 58       	subi	r30, 0x8C	; 140
   167fe:	ff 4f       	sbci	r31, 0xFF	; 255
   16800:	20 81       	ld	r18, Z
   16802:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   16806:	31 96       	adiw	r30, 0x01	; 1
   16808:	20 81       	ld	r18, Z
   1680a:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   1680e:	31 96       	adiw	r30, 0x01	; 1
   16810:	20 81       	ld	r18, Z
   16812:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   16816:	31 96       	adiw	r30, 0x01	; 1
   16818:	20 81       	ld	r18, Z
   1681a:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   1681e:	31 96       	adiw	r30, 0x01	; 1
   16820:	20 81       	ld	r18, Z
   16822:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   16826:	31 96       	adiw	r30, 0x01	; 1
   16828:	20 81       	ld	r18, Z
   1682a:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   1682e:	22 e0       	ldi	r18, 0x02	; 2
   16830:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   16834:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0x4e>
   16838:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1683c:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   16840:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   16844:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   16848:	f0 92 00 14 	sts	0x1400, r15	; 0x801400 <_sRuble_Parameters+0x52>
   1684c:	40 e0       	ldi	r20, 0x00	; 0
   1684e:	50 e0       	ldi	r21, 0x00	; 0
   16850:	d4 2e       	mov	r13, r20
   16852:	e1 2c       	mov	r14, r1
   16854:	f1 2c       	mov	r15, r1
   16856:	24 9e       	mul	r2, r20
   16858:	b0 01       	movw	r22, r0
   1685a:	25 9e       	mul	r2, r21
   1685c:	70 0d       	add	r23, r0
   1685e:	11 24       	eor	r1, r1
   16860:	6b 5e       	subi	r22, 0xEB	; 235
   16862:	73 4f       	sbci	r23, 0xF3	; 243
   16864:	2f 2d       	mov	r18, r15
   16866:	30 e0       	ldi	r19, 0x00	; 0
   16868:	fb 01       	movw	r30, r22
   1686a:	e2 0f       	add	r30, r18
   1686c:	f3 1f       	adc	r31, r19
   1686e:	28 0f       	add	r18, r24
   16870:	39 1f       	adc	r19, r25
   16872:	d9 01       	movw	r26, r18
   16874:	ac 58       	subi	r26, 0x8C	; 140
   16876:	bf 4f       	sbci	r27, 0xFF	; 255
   16878:	31 81       	ldd	r19, Z+1	; 0x01
   1687a:	2c 91       	ld	r18, X
   1687c:	32 17       	cp	r19, r18
   1687e:	19 f0       	breq	.+6      	; 0x16886 <_Z22Valve_Grouping_Handlerh+0xa36>
   16880:	e1 2c       	mov	r14, r1
   16882:	e6 e0       	ldi	r30, 0x06	; 6
   16884:	fe 2e       	mov	r15, r30
   16886:	e3 94       	inc	r14
   16888:	f3 94       	inc	r15
   1688a:	e5 e0       	ldi	r30, 0x05	; 5
   1688c:	ef 15       	cp	r30, r15
   1688e:	50 f7       	brcc	.-44     	; 0x16864 <_Z22Valve_Grouping_Handlerh+0xa14>
   16890:	f6 e0       	ldi	r31, 0x06	; 6
   16892:	ef 16       	cp	r14, r31
   16894:	31 f0       	breq	.+12     	; 0x168a2 <_Z22Valve_Grouping_Handlerh+0xa52>
   16896:	4f 5f       	subi	r20, 0xFF	; 255
   16898:	5f 4f       	sbci	r21, 0xFF	; 255
   1689a:	46 30       	cpi	r20, 0x06	; 6
   1689c:	51 05       	cpc	r21, r1
   1689e:	c1 f6       	brne	.-80     	; 0x16850 <_Z22Valve_Grouping_Handlerh+0xa00>
   168a0:	01 c0       	rjmp	.+2      	; 0x168a4 <_Z22Valve_Grouping_Handlerh+0xa54>
   168a2:	4d 2c       	mov	r4, r13
   168a4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   168a8:	81 30       	cpi	r24, 0x01	; 1
   168aa:	89 f4       	brne	.+34     	; 0x168ce <_Z22Valve_Grouping_Handlerh+0xa7e>
   168ac:	61 e2       	ldi	r22, 0x21	; 33
   168ae:	7e e3       	ldi	r23, 0x3E	; 62
   168b0:	86 ec       	ldi	r24, 0xC6	; 198
   168b2:	94 e1       	ldi	r25, 0x14	; 20
   168b4:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   168b8:	4a e0       	ldi	r20, 0x0A	; 10
   168ba:	50 e0       	ldi	r21, 0x00	; 0
   168bc:	64 2d       	mov	r22, r4
   168be:	86 ec       	ldi	r24, 0xC6	; 198
   168c0:	94 e1       	ldi	r25, 0x14	; 20
   168c2:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   168c6:	86 ec       	ldi	r24, 0xC6	; 198
   168c8:	94 e1       	ldi	r25, 0x14	; 20
   168ca:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   168ce:	2d e0       	ldi	r18, 0x0D	; 13
   168d0:	42 9e       	mul	r4, r18
   168d2:	40 01       	movw	r8, r0
   168d4:	11 24       	eor	r1, r1
   168d6:	31 2c       	mov	r3, r1
   168d8:	24 9c       	mul	r2, r4
   168da:	c0 01       	movw	r24, r0
   168dc:	11 24       	eor	r1, r1
   168de:	9c 01       	movw	r18, r24
   168e0:	2b 5e       	subi	r18, 0xEB	; 235
   168e2:	33 4f       	sbci	r19, 0xF3	; 243
   168e4:	a9 01       	movw	r20, r18
   168e6:	45 5f       	subi	r20, 0xF5	; 245
   168e8:	5f 4f       	sbci	r21, 0xFF	; 255
   168ea:	5c ab       	std	Y+52, r21	; 0x34
   168ec:	4b ab       	std	Y+51, r20	; 0x33
   168ee:	b9 01       	movw	r22, r18
   168f0:	68 5f       	subi	r22, 0xF8	; 248
   168f2:	7f 4f       	sbci	r23, 0xFF	; 255
   168f4:	7e ab       	std	Y+54, r23	; 0x36
   168f6:	6d ab       	std	Y+53, r22	; 0x35
   168f8:	dc 01       	movw	r26, r24
   168fa:	aa 5e       	subi	r26, 0xEA	; 234
   168fc:	b3 4f       	sbci	r27, 0xF3	; 243
   168fe:	7d 01       	movw	r14, r26
   16900:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   16904:	88 23       	and	r24, r24
   16906:	99 f0       	breq	.+38     	; 0x1692e <_Z22Valve_Grouping_Handlerh+0xade>
   16908:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   1690c:	88 23       	and	r24, r24
   1690e:	79 f0       	breq	.+30     	; 0x1692e <_Z22Valve_Grouping_Handlerh+0xade>
   16910:	f3 01       	movw	r30, r6
   16912:	01 90       	ld	r0, Z+
   16914:	00 20       	and	r0, r0
   16916:	e9 f7       	brne	.-6      	; 0x16912 <_Z22Valve_Grouping_Handlerh+0xac2>
   16918:	31 97       	sbiw	r30, 0x01	; 1
   1691a:	af 01       	movw	r20, r30
   1691c:	40 5d       	subi	r20, 0xD0	; 208
   1691e:	5f 40       	sbci	r21, 0x0F	; 15
   16920:	21 e0       	ldi	r18, 0x01	; 1
   16922:	60 ed       	ldi	r22, 0xD0	; 208
   16924:	7f e0       	ldi	r23, 0x0F	; 15
   16926:	82 e6       	ldi	r24, 0x62	; 98
   16928:	9f e0       	ldi	r25, 0x0F	; 15
   1692a:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   1692e:	33 94       	inc	r3
   16930:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16934:	81 30       	cpi	r24, 0x01	; 1
   16936:	51 f4       	brne	.+20     	; 0x1694c <_Z22Valve_Grouping_Handlerh+0xafc>
   16938:	6d ef       	ldi	r22, 0xFD	; 253
   1693a:	7d e3       	ldi	r23, 0x3D	; 61
   1693c:	86 ec       	ldi	r24, 0xC6	; 198
   1693e:	94 e1       	ldi	r25, 0x14	; 20
   16940:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16944:	86 ec       	ldi	r24, 0xC6	; 198
   16946:	94 e1       	ldi	r25, 0x14	; 20
   16948:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1694c:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   16950:	8c e0       	ldi	r24, 0x0C	; 12
   16952:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   16956:	88 eb       	ldi	r24, 0xB8	; 184
   16958:	9b e0       	ldi	r25, 0x0B	; 11
   1695a:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
   1695e:	88 23       	and	r24, r24
   16960:	09 f4       	brne	.+2      	; 0x16964 <_Z22Valve_Grouping_Handlerh+0xb14>
   16962:	91 c1       	rjmp	.+802    	; 0x16c86 <_Z22Valve_Grouping_Handlerh+0xe36>
   16964:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   16968:	88 23       	and	r24, r24
   1696a:	09 f4       	brne	.+2      	; 0x1696e <_Z22Valve_Grouping_Handlerh+0xb1e>
   1696c:	2f c1       	rjmp	.+606    	; 0x16bcc <_Z22Valve_Grouping_Handlerh+0xd7c>
   1696e:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   16972:	88 23       	and	r24, r24
   16974:	99 f0       	breq	.+38     	; 0x1699c <_Z22Valve_Grouping_Handlerh+0xb4c>
   16976:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   1697a:	88 23       	and	r24, r24
   1697c:	79 f0       	breq	.+30     	; 0x1699c <_Z22Valve_Grouping_Handlerh+0xb4c>
   1697e:	f3 01       	movw	r30, r6
   16980:	01 90       	ld	r0, Z+
   16982:	00 20       	and	r0, r0
   16984:	e9 f7       	brne	.-6      	; 0x16980 <_Z22Valve_Grouping_Handlerh+0xb30>
   16986:	31 97       	sbiw	r30, 0x01	; 1
   16988:	af 01       	movw	r20, r30
   1698a:	40 5d       	subi	r20, 0xD0	; 208
   1698c:	5f 40       	sbci	r21, 0x0F	; 15
   1698e:	21 e0       	ldi	r18, 0x01	; 1
   16990:	60 ed       	ldi	r22, 0xD0	; 208
   16992:	7f e0       	ldi	r23, 0x0F	; 15
   16994:	82 e6       	ldi	r24, 0x62	; 98
   16996:	9f e0       	ldi	r25, 0x0F	; 15
   16998:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   1699c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   169a0:	81 30       	cpi	r24, 0x01	; 1
   169a2:	59 f5       	brne	.+86     	; 0x169fa <_Z22Valve_Grouping_Handlerh+0xbaa>
   169a4:	67 ee       	ldi	r22, 0xE7	; 231
   169a6:	7d e3       	ldi	r23, 0x3D	; 61
   169a8:	86 ec       	ldi	r24, 0xC6	; 198
   169aa:	94 e1       	ldi	r25, 0x14	; 20
   169ac:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   169b0:	4a e0       	ldi	r20, 0x0A	; 10
   169b2:	50 e0       	ldi	r21, 0x00	; 0
   169b4:	69 e0       	ldi	r22, 0x09	; 9
   169b6:	74 e1       	ldi	r23, 0x14	; 20
   169b8:	86 ec       	ldi	r24, 0xC6	; 198
   169ba:	94 e1       	ldi	r25, 0x14	; 20
   169bc:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   169c0:	86 ec       	ldi	r24, 0xC6	; 198
   169c2:	94 e1       	ldi	r25, 0x14	; 20
   169c4:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   169c8:	86 ec       	ldi	r24, 0xC6	; 198
   169ca:	94 e1       	ldi	r25, 0x14	; 20
   169cc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   169d0:	69 ec       	ldi	r22, 0xC9	; 201
   169d2:	7d e3       	ldi	r23, 0x3D	; 61
   169d4:	86 ec       	ldi	r24, 0xC6	; 198
   169d6:	94 e1       	ldi	r25, 0x14	; 20
   169d8:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   169dc:	47 e0       	ldi	r20, 0x07	; 7
   169de:	50 e0       	ldi	r21, 0x00	; 0
   169e0:	b7 01       	movw	r22, r14
   169e2:	86 ec       	ldi	r24, 0xC6	; 198
   169e4:	94 e1       	ldi	r25, 0x14	; 20
   169e6:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
   169ea:	86 ec       	ldi	r24, 0xC6	; 198
   169ec:	94 e1       	ldi	r25, 0x14	; 20
   169ee:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   169f2:	86 ec       	ldi	r24, 0xC6	; 198
   169f4:	94 e1       	ldi	r25, 0x14	; 20
   169f6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   169fa:	79 e0       	ldi	r23, 0x09	; 9
   169fc:	a7 2e       	mov	r10, r23
   169fe:	74 e1       	ldi	r23, 0x14	; 20
   16a00:	b7 2e       	mov	r11, r23
   16a02:	c1 2c       	mov	r12, r1
   16a04:	d1 2c       	mov	r13, r1
   16a06:	f5 01       	movw	r30, r10
   16a08:	81 91       	ld	r24, Z+
   16a0a:	5f 01       	movw	r10, r30
   16a0c:	f4 01       	movw	r30, r8
   16a0e:	ec 0d       	add	r30, r12
   16a10:	fd 1d       	adc	r31, r13
   16a12:	eb 5e       	subi	r30, 0xEB	; 235
   16a14:	f3 4f       	sbci	r31, 0xF3	; 243
   16a16:	91 81       	ldd	r25, Z+1	; 0x01
   16a18:	98 17       	cp	r25, r24
   16a1a:	09 f4       	brne	.+2      	; 0x16a1e <_Z22Valve_Grouping_Handlerh+0xbce>
   16a1c:	5d c0       	rjmp	.+186    	; 0x16ad8 <_Z22Valve_Grouping_Handlerh+0xc88>
   16a1e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16a22:	81 30       	cpi	r24, 0x01	; 1
   16a24:	51 f4       	brne	.+20     	; 0x16a3a <_Z22Valve_Grouping_Handlerh+0xbea>
   16a26:	6e e9       	ldi	r22, 0x9E	; 158
   16a28:	7d e3       	ldi	r23, 0x3D	; 61
   16a2a:	86 ec       	ldi	r24, 0xC6	; 198
   16a2c:	94 e1       	ldi	r25, 0x14	; 20
   16a2e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16a32:	86 ec       	ldi	r24, 0xC6	; 198
   16a34:	94 e1       	ldi	r25, 0x14	; 20
   16a36:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16a3a:	f2 e0       	ldi	r31, 0x02	; 2
   16a3c:	3f 12       	cpse	r3, r31
   16a3e:	4c c0       	rjmp	.+152    	; 0x16ad8 <_Z22Valve_Grouping_Handlerh+0xc88>
   16a40:	86 e0       	ldi	r24, 0x06	; 6
   16a42:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16a46:	84 e6       	ldi	r24, 0x64	; 100
   16a48:	90 e0       	ldi	r25, 0x00	; 0
   16a4a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16a4e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16a52:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16a56:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16a5a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16a5e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16a62:	a0 62       	ori	r26, 0x20	; 32
   16a64:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16a68:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16a6c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16a70:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16a74:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16a78:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16a7c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16a80:	82 60       	ori	r24, 0x02	; 2
   16a82:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16a86:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16a8a:	00 e0       	ldi	r16, 0x00	; 0
   16a8c:	10 e0       	ldi	r17, 0x00	; 0
   16a8e:	66 e0       	ldi	r22, 0x06	; 6
   16a90:	f6 2e       	mov	r15, r22
   16a92:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16a96:	90 e0       	ldi	r25, 0x00	; 0
   16a98:	01 97       	sbiw	r24, 0x01	; 1
   16a9a:	f8 9e       	mul	r15, r24
   16a9c:	f0 01       	movw	r30, r0
   16a9e:	f9 9e       	mul	r15, r25
   16aa0:	f0 0d       	add	r31, r0
   16aa2:	11 24       	eor	r1, r1
   16aa4:	e2 5b       	subi	r30, 0xB2	; 178
   16aa6:	f2 4f       	sbci	r31, 0xF2	; 242
   16aa8:	e0 0f       	add	r30, r16
   16aaa:	f1 1f       	adc	r31, r17
   16aac:	e1 81       	ldd	r30, Z+1	; 0x01
   16aae:	e3 31       	cpi	r30, 0x13	; 19
   16ab0:	68 f0       	brcs	.+26     	; 0x16acc <_Z22Valve_Grouping_Handlerh+0xc7c>
   16ab2:	f0 e0       	ldi	r31, 0x00	; 0
   16ab4:	e7 5c       	subi	r30, 0xC7	; 199
   16ab6:	fb 4e       	sbci	r31, 0xEB	; 235
   16ab8:	61 e0       	ldi	r22, 0x01	; 1
   16aba:	80 81       	ld	r24, Z
   16abc:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   16ac0:	68 ec       	ldi	r22, 0xC8	; 200
   16ac2:	70 e0       	ldi	r23, 0x00	; 0
   16ac4:	80 e0       	ldi	r24, 0x00	; 0
   16ac6:	90 e0       	ldi	r25, 0x00	; 0
   16ac8:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16acc:	0f 5f       	subi	r16, 0xFF	; 255
   16ace:	1f 4f       	sbci	r17, 0xFF	; 255
   16ad0:	05 30       	cpi	r16, 0x05	; 5
   16ad2:	11 05       	cpc	r17, r1
   16ad4:	f1 f6       	brne	.-68     	; 0x16a92 <_Z22Valve_Grouping_Handlerh+0xc42>
   16ad6:	9f c4       	rjmp	.+2366   	; 0x17416 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16ad8:	2f ef       	ldi	r18, 0xFF	; 255
   16ada:	c2 1a       	sub	r12, r18
   16adc:	d2 0a       	sbc	r13, r18
   16ade:	36 e0       	ldi	r19, 0x06	; 6
   16ae0:	c3 16       	cp	r12, r19
   16ae2:	d1 04       	cpc	r13, r1
   16ae4:	09 f0       	breq	.+2      	; 0x16ae8 <_Z22Valve_Grouping_Handlerh+0xc98>
   16ae6:	8f cf       	rjmp	.-226    	; 0x16a06 <_Z22Valve_Grouping_Handlerh+0xbb6>
   16ae8:	e1 e0       	ldi	r30, 0x01	; 1
   16aea:	ab a9       	ldd	r26, Y+51	; 0x33
   16aec:	bc a9       	ldd	r27, Y+52	; 0x34
   16aee:	ec 93       	st	X, r30
   16af0:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   16af4:	90 e0       	ldi	r25, 0x00	; 0
   16af6:	98 2f       	mov	r25, r24
   16af8:	88 27       	eor	r24, r24
   16afa:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   16afe:	82 2b       	or	r24, r18
   16b00:	ad a9       	ldd	r26, Y+53	; 0x35
   16b02:	be a9       	ldd	r27, Y+54	; 0x36
   16b04:	8d 93       	st	X+, r24
   16b06:	9c 93       	st	X, r25
   16b08:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   16b0c:	58 16       	cp	r5, r24
   16b0e:	09 f4       	brne	.+2      	; 0x16b12 <_Z22Valve_Grouping_Handlerh+0xcc2>
   16b10:	17 c1       	rjmp	.+558    	; 0x16d40 <_Z22Valve_Grouping_Handlerh+0xef0>
   16b12:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16b16:	81 30       	cpi	r24, 0x01	; 1
   16b18:	51 f4       	brne	.+20     	; 0x16b2e <_Z22Valve_Grouping_Handlerh+0xcde>
   16b1a:	6b e8       	ldi	r22, 0x8B	; 139
   16b1c:	7d e3       	ldi	r23, 0x3D	; 61
   16b1e:	86 ec       	ldi	r24, 0xC6	; 198
   16b20:	94 e1       	ldi	r25, 0x14	; 20
   16b22:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16b26:	86 ec       	ldi	r24, 0xC6	; 198
   16b28:	94 e1       	ldi	r25, 0x14	; 20
   16b2a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16b2e:	b2 e0       	ldi	r27, 0x02	; 2
   16b30:	3b 12       	cpse	r3, r27
   16b32:	08 c1       	rjmp	.+528    	; 0x16d44 <_Z22Valve_Grouping_Handlerh+0xef4>
   16b34:	86 e0       	ldi	r24, 0x06	; 6
   16b36:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16b3a:	84 e6       	ldi	r24, 0x64	; 100
   16b3c:	90 e0       	ldi	r25, 0x00	; 0
   16b3e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16b42:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16b46:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16b4a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16b4e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16b52:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16b56:	a0 62       	ori	r26, 0x20	; 32
   16b58:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16b5c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16b60:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16b64:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16b68:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16b6c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16b70:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16b74:	82 60       	ori	r24, 0x02	; 2
   16b76:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16b7a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16b7e:	00 e0       	ldi	r16, 0x00	; 0
   16b80:	10 e0       	ldi	r17, 0x00	; 0
   16b82:	46 e0       	ldi	r20, 0x06	; 6
   16b84:	f4 2e       	mov	r15, r20
   16b86:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16b8a:	90 e0       	ldi	r25, 0x00	; 0
   16b8c:	01 97       	sbiw	r24, 0x01	; 1
   16b8e:	f8 9e       	mul	r15, r24
   16b90:	f0 01       	movw	r30, r0
   16b92:	f9 9e       	mul	r15, r25
   16b94:	f0 0d       	add	r31, r0
   16b96:	11 24       	eor	r1, r1
   16b98:	e2 5b       	subi	r30, 0xB2	; 178
   16b9a:	f2 4f       	sbci	r31, 0xF2	; 242
   16b9c:	e0 0f       	add	r30, r16
   16b9e:	f1 1f       	adc	r31, r17
   16ba0:	e1 81       	ldd	r30, Z+1	; 0x01
   16ba2:	e3 31       	cpi	r30, 0x13	; 19
   16ba4:	68 f0       	brcs	.+26     	; 0x16bc0 <_Z22Valve_Grouping_Handlerh+0xd70>
   16ba6:	f0 e0       	ldi	r31, 0x00	; 0
   16ba8:	e7 5c       	subi	r30, 0xC7	; 199
   16baa:	fb 4e       	sbci	r31, 0xEB	; 235
   16bac:	61 e0       	ldi	r22, 0x01	; 1
   16bae:	80 81       	ld	r24, Z
   16bb0:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   16bb4:	68 ec       	ldi	r22, 0xC8	; 200
   16bb6:	70 e0       	ldi	r23, 0x00	; 0
   16bb8:	80 e0       	ldi	r24, 0x00	; 0
   16bba:	90 e0       	ldi	r25, 0x00	; 0
   16bbc:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16bc0:	0f 5f       	subi	r16, 0xFF	; 255
   16bc2:	1f 4f       	sbci	r17, 0xFF	; 255
   16bc4:	05 30       	cpi	r16, 0x05	; 5
   16bc6:	11 05       	cpc	r17, r1
   16bc8:	f1 f6       	brne	.-68     	; 0x16b86 <_Z22Valve_Grouping_Handlerh+0xd36>
   16bca:	25 c4       	rjmp	.+2122   	; 0x17416 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16bcc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16bd0:	81 30       	cpi	r24, 0x01	; 1
   16bd2:	51 f4       	brne	.+20     	; 0x16be8 <_Z22Valve_Grouping_Handlerh+0xd98>
   16bd4:	60 e5       	ldi	r22, 0x50	; 80
   16bd6:	7d e3       	ldi	r23, 0x3D	; 61
   16bd8:	86 ec       	ldi	r24, 0xC6	; 198
   16bda:	94 e1       	ldi	r25, 0x14	; 20
   16bdc:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16be0:	86 ec       	ldi	r24, 0xC6	; 198
   16be2:	94 e1       	ldi	r25, 0x14	; 20
   16be4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16be8:	e2 e0       	ldi	r30, 0x02	; 2
   16bea:	3e 12       	cpse	r3, r30
   16bec:	ab c0       	rjmp	.+342    	; 0x16d44 <_Z22Valve_Grouping_Handlerh+0xef4>
   16bee:	86 e0       	ldi	r24, 0x06	; 6
   16bf0:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16bf4:	84 e6       	ldi	r24, 0x64	; 100
   16bf6:	90 e0       	ldi	r25, 0x00	; 0
   16bf8:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16bfc:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16c00:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16c04:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16c08:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16c0c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16c10:	a0 62       	ori	r26, 0x20	; 32
   16c12:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16c16:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16c1a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16c1e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16c22:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16c26:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16c2a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16c2e:	82 60       	ori	r24, 0x02	; 2
   16c30:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16c34:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16c38:	00 e0       	ldi	r16, 0x00	; 0
   16c3a:	10 e0       	ldi	r17, 0x00	; 0
   16c3c:	36 e0       	ldi	r19, 0x06	; 6
   16c3e:	f3 2e       	mov	r15, r19
   16c40:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16c44:	90 e0       	ldi	r25, 0x00	; 0
   16c46:	01 97       	sbiw	r24, 0x01	; 1
   16c48:	f8 9e       	mul	r15, r24
   16c4a:	f0 01       	movw	r30, r0
   16c4c:	f9 9e       	mul	r15, r25
   16c4e:	f0 0d       	add	r31, r0
   16c50:	11 24       	eor	r1, r1
   16c52:	e2 5b       	subi	r30, 0xB2	; 178
   16c54:	f2 4f       	sbci	r31, 0xF2	; 242
   16c56:	e0 0f       	add	r30, r16
   16c58:	f1 1f       	adc	r31, r17
   16c5a:	e1 81       	ldd	r30, Z+1	; 0x01
   16c5c:	e3 31       	cpi	r30, 0x13	; 19
   16c5e:	68 f0       	brcs	.+26     	; 0x16c7a <_Z22Valve_Grouping_Handlerh+0xe2a>
   16c60:	f0 e0       	ldi	r31, 0x00	; 0
   16c62:	e7 5c       	subi	r30, 0xC7	; 199
   16c64:	fb 4e       	sbci	r31, 0xEB	; 235
   16c66:	61 e0       	ldi	r22, 0x01	; 1
   16c68:	80 81       	ld	r24, Z
   16c6a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   16c6e:	68 ec       	ldi	r22, 0xC8	; 200
   16c70:	70 e0       	ldi	r23, 0x00	; 0
   16c72:	80 e0       	ldi	r24, 0x00	; 0
   16c74:	90 e0       	ldi	r25, 0x00	; 0
   16c76:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16c7a:	0f 5f       	subi	r16, 0xFF	; 255
   16c7c:	1f 4f       	sbci	r17, 0xFF	; 255
   16c7e:	05 30       	cpi	r16, 0x05	; 5
   16c80:	11 05       	cpc	r17, r1
   16c82:	f1 f6       	brne	.-68     	; 0x16c40 <_Z22Valve_Grouping_Handlerh+0xdf0>
   16c84:	c8 c3       	rjmp	.+1936   	; 0x17416 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16c86:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16c8a:	81 30       	cpi	r24, 0x01	; 1
   16c8c:	51 f4       	brne	.+20     	; 0x16ca2 <_Z22Valve_Grouping_Handlerh+0xe52>
   16c8e:	65 e1       	ldi	r22, 0x15	; 21
   16c90:	7d e3       	ldi	r23, 0x3D	; 61
   16c92:	86 ec       	ldi	r24, 0xC6	; 198
   16c94:	94 e1       	ldi	r25, 0x14	; 20
   16c96:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16c9a:	86 ec       	ldi	r24, 0xC6	; 198
   16c9c:	94 e1       	ldi	r25, 0x14	; 20
   16c9e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16ca2:	f2 e0       	ldi	r31, 0x02	; 2
   16ca4:	3f 12       	cpse	r3, r31
   16ca6:	4e c0       	rjmp	.+156    	; 0x16d44 <_Z22Valve_Grouping_Handlerh+0xef4>
   16ca8:	86 e0       	ldi	r24, 0x06	; 6
   16caa:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   16cae:	84 e6       	ldi	r24, 0x64	; 100
   16cb0:	90 e0       	ldi	r25, 0x00	; 0
   16cb2:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   16cb6:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   16cba:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   16cbe:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   16cc2:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   16cc6:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   16cca:	a0 62       	ori	r26, 0x20	; 32
   16ccc:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   16cd0:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   16cd4:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   16cd8:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   16cdc:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   16ce0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   16ce4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   16ce8:	82 60       	ori	r24, 0x02	; 2
   16cea:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   16cee:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   16cf2:	00 e0       	ldi	r16, 0x00	; 0
   16cf4:	10 e0       	ldi	r17, 0x00	; 0
   16cf6:	26 e0       	ldi	r18, 0x06	; 6
   16cf8:	f2 2e       	mov	r15, r18
   16cfa:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16cfe:	90 e0       	ldi	r25, 0x00	; 0
   16d00:	01 97       	sbiw	r24, 0x01	; 1
   16d02:	f8 9e       	mul	r15, r24
   16d04:	f0 01       	movw	r30, r0
   16d06:	f9 9e       	mul	r15, r25
   16d08:	f0 0d       	add	r31, r0
   16d0a:	11 24       	eor	r1, r1
   16d0c:	e2 5b       	subi	r30, 0xB2	; 178
   16d0e:	f2 4f       	sbci	r31, 0xF2	; 242
   16d10:	e0 0f       	add	r30, r16
   16d12:	f1 1f       	adc	r31, r17
   16d14:	e1 81       	ldd	r30, Z+1	; 0x01
   16d16:	e3 31       	cpi	r30, 0x13	; 19
   16d18:	68 f0       	brcs	.+26     	; 0x16d34 <_Z22Valve_Grouping_Handlerh+0xee4>
   16d1a:	f0 e0       	ldi	r31, 0x00	; 0
   16d1c:	e7 5c       	subi	r30, 0xC7	; 199
   16d1e:	fb 4e       	sbci	r31, 0xEB	; 235
   16d20:	61 e0       	ldi	r22, 0x01	; 1
   16d22:	80 81       	ld	r24, Z
   16d24:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   16d28:	68 ec       	ldi	r22, 0xC8	; 200
   16d2a:	70 e0       	ldi	r23, 0x00	; 0
   16d2c:	80 e0       	ldi	r24, 0x00	; 0
   16d2e:	90 e0       	ldi	r25, 0x00	; 0
   16d30:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16d34:	0f 5f       	subi	r16, 0xFF	; 255
   16d36:	1f 4f       	sbci	r17, 0xFF	; 255
   16d38:	05 30       	cpi	r16, 0x05	; 5
   16d3a:	11 05       	cpc	r17, r1
   16d3c:	f1 f6       	brne	.-68     	; 0x16cfa <_Z22Valve_Grouping_Handlerh+0xeaa>
   16d3e:	6b c3       	rjmp	.+1750   	; 0x17416 <_Z22Valve_Grouping_Handlerh+0x15c6>
   16d40:	93 e0       	ldi	r25, 0x03	; 3
   16d42:	39 2e       	mov	r3, r25
   16d44:	68 ee       	ldi	r22, 0xE8	; 232
   16d46:	73 e0       	ldi	r23, 0x03	; 3
   16d48:	80 e0       	ldi	r24, 0x00	; 0
   16d4a:	90 e0       	ldi	r25, 0x00	; 0
   16d4c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16d50:	23 e0       	ldi	r18, 0x03	; 3
   16d52:	32 12       	cpse	r3, r18
   16d54:	d5 cd       	rjmp	.-1110   	; 0x16900 <_Z22Valve_Grouping_Handlerh+0xab0>
   16d56:	2b c0       	rjmp	.+86     	; 0x16dae <_Z22Valve_Grouping_Handlerh+0xf5e>
   16d58:	8d ee       	ldi	r24, 0xED	; 237
   16d5a:	8f 0d       	add	r24, r15
   16d5c:	81 35       	cpi	r24, 0x51	; 81
   16d5e:	78 f4       	brcc	.+30     	; 0x16d7e <_Z22Valve_Grouping_Handlerh+0xf2e>
   16d60:	ef 2d       	mov	r30, r15
   16d62:	f0 e0       	ldi	r31, 0x00	; 0
   16d64:	e7 5c       	subi	r30, 0xC7	; 199
   16d66:	fb 4e       	sbci	r31, 0xEB	; 235
   16d68:	6f a9       	ldd	r22, Y+55	; 0x37
   16d6a:	80 81       	ld	r24, Z
   16d6c:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   16d70:	68 ec       	ldi	r22, 0xC8	; 200
   16d72:	70 e0       	ldi	r23, 0x00	; 0
   16d74:	80 e0       	ldi	r24, 0x00	; 0
   16d76:	90 e0       	ldi	r25, 0x00	; 0
   16d78:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   16d7c:	18 c0       	rjmp	.+48     	; 0x16dae <_Z22Valve_Grouping_Handlerh+0xf5e>
   16d7e:	35 e6       	ldi	r19, 0x65	; 101
   16d80:	f3 12       	cpse	r15, r19
   16d82:	15 c0       	rjmp	.+42     	; 0x16dae <_Z22Valve_Grouping_Handlerh+0xf5e>
   16d84:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   16d88:	41 e0       	ldi	r20, 0x01	; 1
   16d8a:	54 12       	cpse	r5, r20
   16d8c:	05 c0       	rjmp	.+10     	; 0x16d98 <_Z22Valve_Grouping_Handlerh+0xf48>
   16d8e:	88 23       	and	r24, r24
   16d90:	71 f0       	breq	.+28     	; 0x16dae <_Z22Valve_Grouping_Handlerh+0xf5e>
   16d92:	50 92 7b 14 	sts	0x147B, r5	; 0x80147b <_sRuble_Parameters+0xcd>
   16d96:	05 c0       	rjmp	.+10     	; 0x16da2 <_Z22Valve_Grouping_Handlerh+0xf52>
   16d98:	88 23       	and	r24, r24
   16d9a:	49 f0       	breq	.+18     	; 0x16dae <_Z22Valve_Grouping_Handlerh+0xf5e>
   16d9c:	82 e0       	ldi	r24, 0x02	; 2
   16d9e:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   16da2:	6b e7       	ldi	r22, 0x7B	; 123
   16da4:	74 e1       	ldi	r23, 0x14	; 20
   16da6:	88 ea       	ldi	r24, 0xA8	; 168
   16da8:	9c e0       	ldi	r25, 0x0C	; 12
   16daa:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16dae:	0f 5f       	subi	r16, 0xFF	; 255
   16db0:	1f 4f       	sbci	r17, 0xFF	; 255
   16db2:	05 30       	cpi	r16, 0x05	; 5
   16db4:	11 05       	cpc	r17, r1
   16db6:	09 f0       	breq	.+2      	; 0x16dba <_Z22Valve_Grouping_Handlerh+0xf6a>
   16db8:	c6 cc       	rjmp	.-1652   	; 0x16746 <_Z22Valve_Grouping_Handlerh+0x8f6>
   16dba:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16dbe:	81 30       	cpi	r24, 0x01	; 1
   16dc0:	09 f0       	breq	.+2      	; 0x16dc4 <_Z22Valve_Grouping_Handlerh+0xf74>
   16dc2:	80 c3       	rjmp	.+1792   	; 0x174c4 <_Z22Valve_Grouping_Handlerh+0x1674>
   16dc4:	66 ef       	ldi	r22, 0xF6	; 246
   16dc6:	7c e3       	ldi	r23, 0x3C	; 60
   16dc8:	73 c3       	rjmp	.+1766   	; 0x174b0 <_Z22Valve_Grouping_Handlerh+0x1660>
   16dca:	81 30       	cpi	r24, 0x01	; 1
   16dcc:	51 f4       	brne	.+20     	; 0x16de2 <_Z22Valve_Grouping_Handlerh+0xf92>
   16dce:	68 ee       	ldi	r22, 0xE8	; 232
   16dd0:	7c e3       	ldi	r23, 0x3C	; 60
   16dd2:	86 ec       	ldi	r24, 0xC6	; 198
   16dd4:	94 e1       	ldi	r25, 0x14	; 20
   16dd6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   16dda:	86 ec       	ldi	r24, 0xC6	; 198
   16ddc:	94 e1       	ldi	r25, 0x14	; 20
   16dde:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16de2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16de6:	81 30       	cpi	r24, 0x01	; 1
   16de8:	d1 f0       	breq	.+52     	; 0x16e1e <_Z22Valve_Grouping_Handlerh+0xfce>
   16dea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16dee:	81 30       	cpi	r24, 0x01	; 1
   16df0:	d9 f5       	brne	.+118    	; 0x16e68 <_Z22Valve_Grouping_Handlerh+0x1018>
   16df2:	60 ed       	ldi	r22, 0xD0	; 208
   16df4:	7c e3       	ldi	r23, 0x3C	; 60
   16df6:	86 ec       	ldi	r24, 0xC6	; 198
   16df8:	94 e1       	ldi	r25, 0x14	; 20
   16dfa:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16dfe:	60 91 1e 14 	lds	r22, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16e02:	70 e0       	ldi	r23, 0x00	; 0
   16e04:	61 50       	subi	r22, 0x01	; 1
   16e06:	71 09       	sbc	r23, r1
   16e08:	4a e0       	ldi	r20, 0x0A	; 10
   16e0a:	50 e0       	ldi	r21, 0x00	; 0
   16e0c:	86 ec       	ldi	r24, 0xC6	; 198
   16e0e:	94 e1       	ldi	r25, 0x14	; 20
   16e10:	0e 94 48 d6 	call	0x1ac90	; 0x1ac90 <_ZN5Print7printlnEii>
   16e14:	86 ec       	ldi	r24, 0xC6	; 198
   16e16:	94 e1       	ldi	r25, 0x14	; 20
   16e18:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16e1c:	25 c0       	rjmp	.+74     	; 0x16e68 <_Z22Valve_Grouping_Handlerh+0x1018>
   16e1e:	00 e0       	ldi	r16, 0x00	; 0
   16e20:	10 e0       	ldi	r17, 0x00	; 0
   16e22:	8b e1       	ldi	r24, 0x1B	; 27
   16e24:	f8 2e       	mov	r15, r24
   16e26:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16e2a:	90 e0       	ldi	r25, 0x00	; 0
   16e2c:	85 56       	subi	r24, 0x65	; 101
   16e2e:	91 09       	sbc	r25, r1
   16e30:	f8 9e       	mul	r15, r24
   16e32:	f0 01       	movw	r30, r0
   16e34:	f9 9e       	mul	r15, r25
   16e36:	f0 0d       	add	r31, r0
   16e38:	11 24       	eor	r1, r1
   16e3a:	e8 51       	subi	r30, 0x18	; 24
   16e3c:	f2 4f       	sbci	r31, 0xF2	; 242
   16e3e:	e0 0f       	add	r30, r16
   16e40:	f1 1f       	adc	r31, r17
   16e42:	4a e0       	ldi	r20, 0x0A	; 10
   16e44:	50 e0       	ldi	r21, 0x00	; 0
   16e46:	65 81       	ldd	r22, Z+5	; 0x05
   16e48:	86 ec       	ldi	r24, 0xC6	; 198
   16e4a:	94 e1       	ldi	r25, 0x14	; 20
   16e4c:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   16e50:	66 ee       	ldi	r22, 0xE6	; 230
   16e52:	7c e3       	ldi	r23, 0x3C	; 60
   16e54:	86 ec       	ldi	r24, 0xC6	; 198
   16e56:	94 e1       	ldi	r25, 0x14	; 20
   16e58:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16e5c:	0f 5f       	subi	r16, 0xFF	; 255
   16e5e:	1f 4f       	sbci	r17, 0xFF	; 255
   16e60:	05 30       	cpi	r16, 0x05	; 5
   16e62:	11 05       	cpc	r17, r1
   16e64:	01 f7       	brne	.-64     	; 0x16e26 <_Z22Valve_Grouping_Handlerh+0xfd6>
   16e66:	c1 cf       	rjmp	.-126    	; 0x16dea <_Z22Valve_Grouping_Handlerh+0xf9a>
   16e68:	00 e0       	ldi	r16, 0x00	; 0
   16e6a:	10 e0       	ldi	r17, 0x00	; 0
   16e6c:	81 e0       	ldi	r24, 0x01	; 1
   16e6e:	85 25       	eor	r24, r5
   16e70:	81 70       	andi	r24, 0x01	; 1
   16e72:	8b ab       	std	Y+51, r24	; 0x33
   16e74:	ad e0       	ldi	r26, 0x0D	; 13
   16e76:	2a 2e       	mov	r2, r26
   16e78:	b0 ed       	ldi	r27, 0xD0	; 208
   16e7a:	ab 2e       	mov	r10, r27
   16e7c:	bf e0       	ldi	r27, 0x0F	; 15
   16e7e:	bb 2e       	mov	r11, r27
   16e80:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   16e84:	90 e0       	ldi	r25, 0x00	; 0
   16e86:	9c 01       	movw	r18, r24
   16e88:	25 56       	subi	r18, 0x65	; 101
   16e8a:	31 09       	sbc	r19, r1
   16e8c:	5b e1       	ldi	r21, 0x1B	; 27
   16e8e:	52 9f       	mul	r21, r18
   16e90:	f0 01       	movw	r30, r0
   16e92:	53 9f       	mul	r21, r19
   16e94:	f0 0d       	add	r31, r0
   16e96:	11 24       	eor	r1, r1
   16e98:	e8 51       	subi	r30, 0x18	; 24
   16e9a:	f2 4f       	sbci	r31, 0xF2	; 242
   16e9c:	e0 0f       	add	r30, r16
   16e9e:	f1 1f       	adc	r31, r17
   16ea0:	f5 80       	ldd	r15, Z+5	; 0x05
   16ea2:	2f ef       	ldi	r18, 0xFF	; 255
   16ea4:	2f 0d       	add	r18, r15
   16ea6:	22 31       	cpi	r18, 0x12	; 18
   16ea8:	08 f0       	brcs	.+2      	; 0x16eac <_Z22Valve_Grouping_Handlerh+0x105c>
   16eaa:	c1 c2       	rjmp	.+1410   	; 0x1742e <_Z22Valve_Grouping_Handlerh+0x15de>
   16eac:	63 e0       	ldi	r22, 0x03	; 3
   16eae:	6f 15       	cp	r22, r15
   16eb0:	a8 f4       	brcc	.+42     	; 0x16edc <_Z22Valve_Grouping_Handlerh+0x108c>
   16eb2:	6b ea       	ldi	r22, 0xAB	; 171
   16eb4:	f6 9e       	mul	r15, r22
   16eb6:	61 2d       	mov	r22, r1
   16eb8:	11 24       	eor	r1, r1
   16eba:	86 2f       	mov	r24, r22
   16ebc:	86 95       	lsr	r24
   16ebe:	98 2f       	mov	r25, r24
   16ec0:	99 0f       	add	r25, r25
   16ec2:	89 0f       	add	r24, r25
   16ec4:	f8 1a       	sub	r15, r24
   16ec6:	66 95       	lsr	r22
   16ec8:	ff 20       	and	r15, r15
   16eca:	21 f0       	breq	.+8      	; 0x16ed4 <_Z22Valve_Grouping_Handlerh+0x1084>
   16ecc:	ee 24       	eor	r14, r14
   16ece:	e3 94       	inc	r14
   16ed0:	e6 0e       	add	r14, r22
   16ed2:	06 c0       	rjmp	.+12     	; 0x16ee0 <_Z22Valve_Grouping_Handlerh+0x1090>
   16ed4:	e6 2e       	mov	r14, r22
   16ed6:	f3 e0       	ldi	r31, 0x03	; 3
   16ed8:	ff 2e       	mov	r15, r31
   16eda:	02 c0       	rjmp	.+4      	; 0x16ee0 <_Z22Valve_Grouping_Handlerh+0x1090>
   16edc:	ee 24       	eor	r14, r14
   16ede:	e3 94       	inc	r14
   16ee0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16ee4:	81 30       	cpi	r24, 0x01	; 1
   16ee6:	89 f4       	brne	.+34     	; 0x16f0a <_Z22Valve_Grouping_Handlerh+0x10ba>
   16ee8:	6c eb       	ldi	r22, 0xBC	; 188
   16eea:	7c e3       	ldi	r23, 0x3C	; 60
   16eec:	86 ec       	ldi	r24, 0xC6	; 198
   16eee:	94 e1       	ldi	r25, 0x14	; 20
   16ef0:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16ef4:	4a e0       	ldi	r20, 0x0A	; 10
   16ef6:	50 e0       	ldi	r21, 0x00	; 0
   16ef8:	6e 2d       	mov	r22, r14
   16efa:	86 ec       	ldi	r24, 0xC6	; 198
   16efc:	94 e1       	ldi	r25, 0x14	; 20
   16efe:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   16f02:	86 ec       	ldi	r24, 0xC6	; 198
   16f04:	94 e1       	ldi	r25, 0x14	; 20
   16f06:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   16f0a:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   16f0e:	81 11       	cpse	r24, r1
   16f10:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   16f14:	84 e1       	ldi	r24, 0x14	; 20
   16f16:	a5 ef       	ldi	r26, 0xF5	; 245
   16f18:	b3 e1       	ldi	r27, 0x13	; 19
   16f1a:	1d 92       	st	X+, r1
   16f1c:	8a 95       	dec	r24
   16f1e:	e9 f7       	brne	.-6      	; 0x16f1a <_Z22Valve_Grouping_Handlerh+0x10ca>
   16f20:	6e 2d       	mov	r22, r14
   16f22:	70 e0       	ldi	r23, 0x00	; 0
   16f24:	61 50       	subi	r22, 0x01	; 1
   16f26:	71 09       	sbc	r23, r1
   16f28:	b7 e0       	ldi	r27, 0x07	; 7
   16f2a:	b6 9f       	mul	r27, r22
   16f2c:	c0 01       	movw	r24, r0
   16f2e:	b7 9f       	mul	r27, r23
   16f30:	90 0d       	add	r25, r0
   16f32:	11 24       	eor	r1, r1
   16f34:	82 55       	subi	r24, 0x52	; 82
   16f36:	9c 4e       	sbci	r25, 0xEC	; 236
   16f38:	fc 01       	movw	r30, r24
   16f3a:	ec 58       	subi	r30, 0x8C	; 140
   16f3c:	ff 4f       	sbci	r31, 0xFF	; 255
   16f3e:	20 81       	ld	r18, Z
   16f40:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   16f44:	31 96       	adiw	r30, 0x01	; 1
   16f46:	20 81       	ld	r18, Z
   16f48:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   16f4c:	31 96       	adiw	r30, 0x01	; 1
   16f4e:	20 81       	ld	r18, Z
   16f50:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   16f54:	31 96       	adiw	r30, 0x01	; 1
   16f56:	20 81       	ld	r18, Z
   16f58:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   16f5c:	31 96       	adiw	r30, 0x01	; 1
   16f5e:	20 81       	ld	r18, Z
   16f60:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   16f64:	31 96       	adiw	r30, 0x01	; 1
   16f66:	20 81       	ld	r18, Z
   16f68:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   16f6c:	22 e0       	ldi	r18, 0x02	; 2
   16f6e:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   16f72:	50 92 fc 13 	sts	0x13FC, r5	; 0x8013fc <_sRuble_Parameters+0x4e>
   16f76:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   16f7a:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   16f7e:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   16f82:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   16f86:	f0 92 00 14 	sts	0x1400, r15	; 0x801400 <_sRuble_Parameters+0x52>
   16f8a:	40 e0       	ldi	r20, 0x00	; 0
   16f8c:	50 e0       	ldi	r21, 0x00	; 0
   16f8e:	d4 2e       	mov	r13, r20
   16f90:	e1 2c       	mov	r14, r1
   16f92:	f1 2c       	mov	r15, r1
   16f94:	24 9e       	mul	r2, r20
   16f96:	b0 01       	movw	r22, r0
   16f98:	25 9e       	mul	r2, r21
   16f9a:	70 0d       	add	r23, r0
   16f9c:	11 24       	eor	r1, r1
   16f9e:	6b 5e       	subi	r22, 0xEB	; 235
   16fa0:	73 4f       	sbci	r23, 0xF3	; 243
   16fa2:	2f 2d       	mov	r18, r15
   16fa4:	30 e0       	ldi	r19, 0x00	; 0
   16fa6:	fb 01       	movw	r30, r22
   16fa8:	e2 0f       	add	r30, r18
   16faa:	f3 1f       	adc	r31, r19
   16fac:	28 0f       	add	r18, r24
   16fae:	39 1f       	adc	r19, r25
   16fb0:	d9 01       	movw	r26, r18
   16fb2:	ac 58       	subi	r26, 0x8C	; 140
   16fb4:	bf 4f       	sbci	r27, 0xFF	; 255
   16fb6:	31 81       	ldd	r19, Z+1	; 0x01
   16fb8:	2c 91       	ld	r18, X
   16fba:	32 17       	cp	r19, r18
   16fbc:	19 f0       	breq	.+6      	; 0x16fc4 <_Z22Valve_Grouping_Handlerh+0x1174>
   16fbe:	e1 2c       	mov	r14, r1
   16fc0:	e6 e0       	ldi	r30, 0x06	; 6
   16fc2:	fe 2e       	mov	r15, r30
   16fc4:	e3 94       	inc	r14
   16fc6:	f3 94       	inc	r15
   16fc8:	e5 e0       	ldi	r30, 0x05	; 5
   16fca:	ef 15       	cp	r30, r15
   16fcc:	50 f7       	brcc	.-44     	; 0x16fa2 <_Z22Valve_Grouping_Handlerh+0x1152>
   16fce:	f6 e0       	ldi	r31, 0x06	; 6
   16fd0:	ef 16       	cp	r14, r31
   16fd2:	31 f0       	breq	.+12     	; 0x16fe0 <_Z22Valve_Grouping_Handlerh+0x1190>
   16fd4:	4f 5f       	subi	r20, 0xFF	; 255
   16fd6:	5f 4f       	sbci	r21, 0xFF	; 255
   16fd8:	46 30       	cpi	r20, 0x06	; 6
   16fda:	51 05       	cpc	r21, r1
   16fdc:	c1 f6       	brne	.-80     	; 0x16f8e <_Z22Valve_Grouping_Handlerh+0x113e>
   16fde:	01 c0       	rjmp	.+2      	; 0x16fe2 <_Z22Valve_Grouping_Handlerh+0x1192>
   16fe0:	4d 2c       	mov	r4, r13
   16fe2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   16fe6:	81 30       	cpi	r24, 0x01	; 1
   16fe8:	89 f4       	brne	.+34     	; 0x1700c <_Z22Valve_Grouping_Handlerh+0x11bc>
   16fea:	66 ea       	ldi	r22, 0xA6	; 166
   16fec:	7c e3       	ldi	r23, 0x3C	; 60
   16fee:	86 ec       	ldi	r24, 0xC6	; 198
   16ff0:	94 e1       	ldi	r25, 0x14	; 20
   16ff2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   16ff6:	4a e0       	ldi	r20, 0x0A	; 10
   16ff8:	50 e0       	ldi	r21, 0x00	; 0
   16ffa:	64 2d       	mov	r22, r4
   16ffc:	86 ec       	ldi	r24, 0xC6	; 198
   16ffe:	94 e1       	ldi	r25, 0x14	; 20
   17000:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   17004:	86 ec       	ldi	r24, 0xC6	; 198
   17006:	94 e1       	ldi	r25, 0x14	; 20
   17008:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1700c:	2d e0       	ldi	r18, 0x0D	; 13
   1700e:	42 9e       	mul	r4, r18
   17010:	40 01       	movw	r8, r0
   17012:	11 24       	eor	r1, r1
   17014:	31 2c       	mov	r3, r1
   17016:	24 9c       	mul	r2, r4
   17018:	c0 01       	movw	r24, r0
   1701a:	11 24       	eor	r1, r1
   1701c:	9c 01       	movw	r18, r24
   1701e:	2b 5e       	subi	r18, 0xEB	; 235
   17020:	33 4f       	sbci	r19, 0xF3	; 243
   17022:	39 01       	movw	r6, r18
   17024:	4b e0       	ldi	r20, 0x0B	; 11
   17026:	64 0e       	add	r6, r20
   17028:	71 1c       	adc	r7, r1
   1702a:	79 01       	movw	r14, r18
   1702c:	58 e0       	ldi	r21, 0x08	; 8
   1702e:	e5 0e       	add	r14, r21
   17030:	f1 1c       	adc	r15, r1
   17032:	bc 01       	movw	r22, r24
   17034:	6a 5e       	subi	r22, 0xEA	; 234
   17036:	73 4f       	sbci	r23, 0xF3	; 243
   17038:	6b 01       	movw	r12, r22
   1703a:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   1703e:	88 23       	and	r24, r24
   17040:	99 f0       	breq	.+38     	; 0x17068 <_Z22Valve_Grouping_Handlerh+0x1218>
   17042:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   17046:	88 23       	and	r24, r24
   17048:	79 f0       	breq	.+30     	; 0x17068 <_Z22Valve_Grouping_Handlerh+0x1218>
   1704a:	f5 01       	movw	r30, r10
   1704c:	01 90       	ld	r0, Z+
   1704e:	00 20       	and	r0, r0
   17050:	e9 f7       	brne	.-6      	; 0x1704c <_Z22Valve_Grouping_Handlerh+0x11fc>
   17052:	31 97       	sbiw	r30, 0x01	; 1
   17054:	af 01       	movw	r20, r30
   17056:	40 5d       	subi	r20, 0xD0	; 208
   17058:	5f 40       	sbci	r21, 0x0F	; 15
   1705a:	21 e0       	ldi	r18, 0x01	; 1
   1705c:	60 ed       	ldi	r22, 0xD0	; 208
   1705e:	7f e0       	ldi	r23, 0x0F	; 15
   17060:	82 e6       	ldi	r24, 0x62	; 98
   17062:	9f e0       	ldi	r25, 0x0F	; 15
   17064:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   17068:	33 94       	inc	r3
   1706a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1706e:	81 30       	cpi	r24, 0x01	; 1
   17070:	51 f4       	brne	.+20     	; 0x17086 <_Z22Valve_Grouping_Handlerh+0x1236>
   17072:	62 e8       	ldi	r22, 0x82	; 130
   17074:	7c e3       	ldi	r23, 0x3C	; 60
   17076:	86 ec       	ldi	r24, 0xC6	; 198
   17078:	94 e1       	ldi	r25, 0x14	; 20
   1707a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1707e:	86 ec       	ldi	r24, 0xC6	; 198
   17080:	94 e1       	ldi	r25, 0x14	; 20
   17082:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17086:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   1708a:	8c e0       	ldi	r24, 0x0C	; 12
   1708c:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   17090:	88 eb       	ldi	r24, 0xB8	; 184
   17092:	9b e0       	ldi	r25, 0x0B	; 11
   17094:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
   17098:	88 23       	and	r24, r24
   1709a:	09 f4       	brne	.+2      	; 0x1709e <_Z22Valve_Grouping_Handlerh+0x124e>
   1709c:	86 c1       	rjmp	.+780    	; 0x173aa <_Z22Valve_Grouping_Handlerh+0x155a>
   1709e:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   170a2:	88 23       	and	r24, r24
   170a4:	09 f4       	brne	.+2      	; 0x170a8 <_Z22Valve_Grouping_Handlerh+0x1258>
   170a6:	23 c1       	rjmp	.+582    	; 0x172ee <_Z22Valve_Grouping_Handlerh+0x149e>
   170a8:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   170ac:	88 23       	and	r24, r24
   170ae:	99 f0       	breq	.+38     	; 0x170d6 <_Z22Valve_Grouping_Handlerh+0x1286>
   170b0:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   170b4:	88 23       	and	r24, r24
   170b6:	79 f0       	breq	.+30     	; 0x170d6 <_Z22Valve_Grouping_Handlerh+0x1286>
   170b8:	f5 01       	movw	r30, r10
   170ba:	01 90       	ld	r0, Z+
   170bc:	00 20       	and	r0, r0
   170be:	e9 f7       	brne	.-6      	; 0x170ba <_Z22Valve_Grouping_Handlerh+0x126a>
   170c0:	31 97       	sbiw	r30, 0x01	; 1
   170c2:	af 01       	movw	r20, r30
   170c4:	40 5d       	subi	r20, 0xD0	; 208
   170c6:	5f 40       	sbci	r21, 0x0F	; 15
   170c8:	21 e0       	ldi	r18, 0x01	; 1
   170ca:	60 ed       	ldi	r22, 0xD0	; 208
   170cc:	7f e0       	ldi	r23, 0x0F	; 15
   170ce:	82 e6       	ldi	r24, 0x62	; 98
   170d0:	9f e0       	ldi	r25, 0x0F	; 15
   170d2:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   170d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   170da:	81 30       	cpi	r24, 0x01	; 1
   170dc:	19 f5       	brne	.+70     	; 0x17124 <_Z22Valve_Grouping_Handlerh+0x12d4>
   170de:	6c e6       	ldi	r22, 0x6C	; 108
   170e0:	7c e3       	ldi	r23, 0x3C	; 60
   170e2:	86 ec       	ldi	r24, 0xC6	; 198
   170e4:	94 e1       	ldi	r25, 0x14	; 20
   170e6:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   170ea:	4a e0       	ldi	r20, 0x0A	; 10
   170ec:	50 e0       	ldi	r21, 0x00	; 0
   170ee:	69 e0       	ldi	r22, 0x09	; 9
   170f0:	74 e1       	ldi	r23, 0x14	; 20
   170f2:	86 ec       	ldi	r24, 0xC6	; 198
   170f4:	94 e1       	ldi	r25, 0x14	; 20
   170f6:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   170fa:	86 ec       	ldi	r24, 0xC6	; 198
   170fc:	94 e1       	ldi	r25, 0x14	; 20
   170fe:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17102:	6e e4       	ldi	r22, 0x4E	; 78
   17104:	7c e3       	ldi	r23, 0x3C	; 60
   17106:	86 ec       	ldi	r24, 0xC6	; 198
   17108:	94 e1       	ldi	r25, 0x14	; 20
   1710a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1710e:	47 e0       	ldi	r20, 0x07	; 7
   17110:	50 e0       	ldi	r21, 0x00	; 0
   17112:	b6 01       	movw	r22, r12
   17114:	86 ec       	ldi	r24, 0xC6	; 198
   17116:	94 e1       	ldi	r25, 0x14	; 20
   17118:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
   1711c:	86 ec       	ldi	r24, 0xC6	; 198
   1711e:	94 e1       	ldi	r25, 0x14	; 20
   17120:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17124:	a9 e0       	ldi	r26, 0x09	; 9
   17126:	b4 e1       	ldi	r27, 0x14	; 20
   17128:	80 e0       	ldi	r24, 0x00	; 0
   1712a:	90 e0       	ldi	r25, 0x00	; 0
   1712c:	2d 91       	ld	r18, X+
   1712e:	f4 01       	movw	r30, r8
   17130:	e8 0f       	add	r30, r24
   17132:	f9 1f       	adc	r31, r25
   17134:	eb 5e       	subi	r30, 0xEB	; 235
   17136:	f3 4f       	sbci	r31, 0xF3	; 243
   17138:	31 81       	ldd	r19, Z+1	; 0x01
   1713a:	32 17       	cp	r19, r18
   1713c:	09 f4       	brne	.+2      	; 0x17140 <_Z22Valve_Grouping_Handlerh+0x12f0>
   1713e:	73 c0       	rjmp	.+230    	; 0x17226 <_Z22Valve_Grouping_Handlerh+0x13d6>
   17140:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17144:	81 30       	cpi	r24, 0x01	; 1
   17146:	51 f4       	brne	.+20     	; 0x1715c <_Z22Valve_Grouping_Handlerh+0x130c>
   17148:	63 e2       	ldi	r22, 0x23	; 35
   1714a:	7c e3       	ldi	r23, 0x3C	; 60
   1714c:	86 ec       	ldi	r24, 0xC6	; 198
   1714e:	94 e1       	ldi	r25, 0x14	; 20
   17150:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17154:	86 ec       	ldi	r24, 0xC6	; 198
   17156:	94 e1       	ldi	r25, 0x14	; 20
   17158:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1715c:	72 e0       	ldi	r23, 0x02	; 2
   1715e:	37 16       	cp	r3, r23
   17160:	a9 f0       	breq	.+42     	; 0x1718c <_Z22Valve_Grouping_Handlerh+0x133c>
   17162:	e1 e0       	ldi	r30, 0x01	; 1
   17164:	d3 01       	movw	r26, r6
   17166:	ec 93       	st	X, r30
   17168:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   1716c:	90 e0       	ldi	r25, 0x00	; 0
   1716e:	98 2f       	mov	r25, r24
   17170:	88 27       	eor	r24, r24
   17172:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   17176:	82 2b       	or	r24, r18
   17178:	d7 01       	movw	r26, r14
   1717a:	8d 93       	st	X+, r24
   1717c:	9c 93       	st	X, r25
   1717e:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   17182:	58 12       	cpse	r5, r24
   17184:	56 c0       	rjmp	.+172    	; 0x17232 <_Z22Valve_Grouping_Handlerh+0x13e2>
   17186:	33 e0       	ldi	r19, 0x03	; 3
   17188:	33 2e       	mov	r3, r19
   1718a:	47 c1       	rjmp	.+654    	; 0x1741a <_Z22Valve_Grouping_Handlerh+0x15ca>
   1718c:	86 e0       	ldi	r24, 0x06	; 6
   1718e:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17192:	84 e6       	ldi	r24, 0x64	; 100
   17194:	90 e0       	ldi	r25, 0x00	; 0
   17196:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1719a:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   1719e:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   171a2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   171a6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   171aa:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   171ae:	a0 62       	ori	r26, 0x20	; 32
   171b0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   171b4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   171b8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   171bc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   171c0:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   171c4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   171c8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   171cc:	82 60       	ori	r24, 0x02	; 2
   171ce:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   171d2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   171d6:	00 e0       	ldi	r16, 0x00	; 0
   171d8:	10 e0       	ldi	r17, 0x00	; 0
   171da:	2b e1       	ldi	r18, 0x1B	; 27
   171dc:	f2 2e       	mov	r15, r18
   171de:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   171e2:	90 e0       	ldi	r25, 0x00	; 0
   171e4:	85 56       	subi	r24, 0x65	; 101
   171e6:	91 09       	sbc	r25, r1
   171e8:	f8 9e       	mul	r15, r24
   171ea:	f0 01       	movw	r30, r0
   171ec:	f9 9e       	mul	r15, r25
   171ee:	f0 0d       	add	r31, r0
   171f0:	11 24       	eor	r1, r1
   171f2:	e8 51       	subi	r30, 0x18	; 24
   171f4:	f2 4f       	sbci	r31, 0xF2	; 242
   171f6:	e0 0f       	add	r30, r16
   171f8:	f1 1f       	adc	r31, r17
   171fa:	e5 81       	ldd	r30, Z+5	; 0x05
   171fc:	e3 31       	cpi	r30, 0x13	; 19
   171fe:	68 f0       	brcs	.+26     	; 0x1721a <_Z22Valve_Grouping_Handlerh+0x13ca>
   17200:	f0 e0       	ldi	r31, 0x00	; 0
   17202:	e7 5c       	subi	r30, 0xC7	; 199
   17204:	fb 4e       	sbci	r31, 0xEB	; 235
   17206:	61 e0       	ldi	r22, 0x01	; 1
   17208:	80 81       	ld	r24, Z
   1720a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1720e:	68 ec       	ldi	r22, 0xC8	; 200
   17210:	70 e0       	ldi	r23, 0x00	; 0
   17212:	80 e0       	ldi	r24, 0x00	; 0
   17214:	90 e0       	ldi	r25, 0x00	; 0
   17216:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   1721a:	0f 5f       	subi	r16, 0xFF	; 255
   1721c:	1f 4f       	sbci	r17, 0xFF	; 255
   1721e:	05 30       	cpi	r16, 0x05	; 5
   17220:	11 05       	cpc	r17, r1
   17222:	e9 f6       	brne	.-70     	; 0x171de <_Z22Valve_Grouping_Handlerh+0x138e>
   17224:	f8 c0       	rjmp	.+496    	; 0x17416 <_Z22Valve_Grouping_Handlerh+0x15c6>
   17226:	01 96       	adiw	r24, 0x01	; 1
   17228:	86 30       	cpi	r24, 0x06	; 6
   1722a:	91 05       	cpc	r25, r1
   1722c:	09 f0       	breq	.+2      	; 0x17230 <_Z22Valve_Grouping_Handlerh+0x13e0>
   1722e:	7e cf       	rjmp	.-260    	; 0x1712c <_Z22Valve_Grouping_Handlerh+0x12dc>
   17230:	98 cf       	rjmp	.-208    	; 0x17162 <_Z22Valve_Grouping_Handlerh+0x1312>
   17232:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17236:	81 30       	cpi	r24, 0x01	; 1
   17238:	51 f4       	brne	.+20     	; 0x1724e <_Z22Valve_Grouping_Handlerh+0x13fe>
   1723a:	60 e1       	ldi	r22, 0x10	; 16
   1723c:	7c e3       	ldi	r23, 0x3C	; 60
   1723e:	86 ec       	ldi	r24, 0xC6	; 198
   17240:	94 e1       	ldi	r25, 0x14	; 20
   17242:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17246:	86 ec       	ldi	r24, 0xC6	; 198
   17248:	94 e1       	ldi	r25, 0x14	; 20
   1724a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1724e:	b2 e0       	ldi	r27, 0x02	; 2
   17250:	3b 12       	cpse	r3, r27
   17252:	e3 c0       	rjmp	.+454    	; 0x1741a <_Z22Valve_Grouping_Handlerh+0x15ca>
   17254:	86 e0       	ldi	r24, 0x06	; 6
   17256:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1725a:	84 e6       	ldi	r24, 0x64	; 100
   1725c:	90 e0       	ldi	r25, 0x00	; 0
   1725e:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17262:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17266:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1726a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1726e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17272:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17276:	a0 62       	ori	r26, 0x20	; 32
   17278:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1727c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17280:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17284:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17288:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   1728c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17290:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17294:	82 60       	ori	r24, 0x02	; 2
   17296:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1729a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1729e:	00 e0       	ldi	r16, 0x00	; 0
   172a0:	10 e0       	ldi	r17, 0x00	; 0
   172a2:	9b e1       	ldi	r25, 0x1B	; 27
   172a4:	f9 2e       	mov	r15, r25
   172a6:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   172aa:	90 e0       	ldi	r25, 0x00	; 0
   172ac:	85 56       	subi	r24, 0x65	; 101
   172ae:	91 09       	sbc	r25, r1
   172b0:	f8 9e       	mul	r15, r24
   172b2:	f0 01       	movw	r30, r0
   172b4:	f9 9e       	mul	r15, r25
   172b6:	f0 0d       	add	r31, r0
   172b8:	11 24       	eor	r1, r1
   172ba:	e8 51       	subi	r30, 0x18	; 24
   172bc:	f2 4f       	sbci	r31, 0xF2	; 242
   172be:	e0 0f       	add	r30, r16
   172c0:	f1 1f       	adc	r31, r17
   172c2:	e5 81       	ldd	r30, Z+5	; 0x05
   172c4:	e3 31       	cpi	r30, 0x13	; 19
   172c6:	68 f0       	brcs	.+26     	; 0x172e2 <_Z22Valve_Grouping_Handlerh+0x1492>
   172c8:	f0 e0       	ldi	r31, 0x00	; 0
   172ca:	e7 5c       	subi	r30, 0xC7	; 199
   172cc:	fb 4e       	sbci	r31, 0xEB	; 235
   172ce:	61 e0       	ldi	r22, 0x01	; 1
   172d0:	80 81       	ld	r24, Z
   172d2:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   172d6:	68 ec       	ldi	r22, 0xC8	; 200
   172d8:	70 e0       	ldi	r23, 0x00	; 0
   172da:	80 e0       	ldi	r24, 0x00	; 0
   172dc:	90 e0       	ldi	r25, 0x00	; 0
   172de:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   172e2:	0f 5f       	subi	r16, 0xFF	; 255
   172e4:	1f 4f       	sbci	r17, 0xFF	; 255
   172e6:	05 30       	cpi	r16, 0x05	; 5
   172e8:	11 05       	cpc	r17, r1
   172ea:	e9 f6       	brne	.-70     	; 0x172a6 <_Z22Valve_Grouping_Handlerh+0x1456>
   172ec:	94 c0       	rjmp	.+296    	; 0x17416 <_Z22Valve_Grouping_Handlerh+0x15c6>
   172ee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   172f2:	81 30       	cpi	r24, 0x01	; 1
   172f4:	51 f4       	brne	.+20     	; 0x1730a <_Z22Valve_Grouping_Handlerh+0x14ba>
   172f6:	65 ed       	ldi	r22, 0xD5	; 213
   172f8:	7b e3       	ldi	r23, 0x3B	; 59
   172fa:	86 ec       	ldi	r24, 0xC6	; 198
   172fc:	94 e1       	ldi	r25, 0x14	; 20
   172fe:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17302:	86 ec       	ldi	r24, 0xC6	; 198
   17304:	94 e1       	ldi	r25, 0x14	; 20
   17306:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1730a:	e2 e0       	ldi	r30, 0x02	; 2
   1730c:	3e 12       	cpse	r3, r30
   1730e:	85 c0       	rjmp	.+266    	; 0x1741a <_Z22Valve_Grouping_Handlerh+0x15ca>
   17310:	86 e0       	ldi	r24, 0x06	; 6
   17312:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17316:	84 e6       	ldi	r24, 0x64	; 100
   17318:	90 e0       	ldi	r25, 0x00	; 0
   1731a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1731e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17322:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17326:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1732a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1732e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17332:	a0 62       	ori	r26, 0x20	; 32
   17334:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17338:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1733c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17340:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17344:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   17348:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1734c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17350:	82 60       	ori	r24, 0x02	; 2
   17352:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17356:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1735a:	00 e0       	ldi	r16, 0x00	; 0
   1735c:	10 e0       	ldi	r17, 0x00	; 0
   1735e:	8b e1       	ldi	r24, 0x1B	; 27
   17360:	f8 2e       	mov	r15, r24
   17362:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   17366:	90 e0       	ldi	r25, 0x00	; 0
   17368:	85 56       	subi	r24, 0x65	; 101
   1736a:	91 09       	sbc	r25, r1
   1736c:	f8 9e       	mul	r15, r24
   1736e:	f0 01       	movw	r30, r0
   17370:	f9 9e       	mul	r15, r25
   17372:	f0 0d       	add	r31, r0
   17374:	11 24       	eor	r1, r1
   17376:	e8 51       	subi	r30, 0x18	; 24
   17378:	f2 4f       	sbci	r31, 0xF2	; 242
   1737a:	e0 0f       	add	r30, r16
   1737c:	f1 1f       	adc	r31, r17
   1737e:	e5 81       	ldd	r30, Z+5	; 0x05
   17380:	e3 31       	cpi	r30, 0x13	; 19
   17382:	68 f0       	brcs	.+26     	; 0x1739e <_Z22Valve_Grouping_Handlerh+0x154e>
   17384:	f0 e0       	ldi	r31, 0x00	; 0
   17386:	e7 5c       	subi	r30, 0xC7	; 199
   17388:	fb 4e       	sbci	r31, 0xEB	; 235
   1738a:	61 e0       	ldi	r22, 0x01	; 1
   1738c:	80 81       	ld	r24, Z
   1738e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17392:	68 ec       	ldi	r22, 0xC8	; 200
   17394:	70 e0       	ldi	r23, 0x00	; 0
   17396:	80 e0       	ldi	r24, 0x00	; 0
   17398:	90 e0       	ldi	r25, 0x00	; 0
   1739a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   1739e:	0f 5f       	subi	r16, 0xFF	; 255
   173a0:	1f 4f       	sbci	r17, 0xFF	; 255
   173a2:	05 30       	cpi	r16, 0x05	; 5
   173a4:	11 05       	cpc	r17, r1
   173a6:	e9 f6       	brne	.-70     	; 0x17362 <_Z22Valve_Grouping_Handlerh+0x1512>
   173a8:	36 c0       	rjmp	.+108    	; 0x17416 <_Z22Valve_Grouping_Handlerh+0x15c6>
   173aa:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   173ae:	81 30       	cpi	r24, 0x01	; 1
   173b0:	51 f4       	brne	.+20     	; 0x173c6 <_Z22Valve_Grouping_Handlerh+0x1576>
   173b2:	6a e9       	ldi	r22, 0x9A	; 154
   173b4:	7b e3       	ldi	r23, 0x3B	; 59
   173b6:	86 ec       	ldi	r24, 0xC6	; 198
   173b8:	94 e1       	ldi	r25, 0x14	; 20
   173ba:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   173be:	86 ec       	ldi	r24, 0xC6	; 198
   173c0:	94 e1       	ldi	r25, 0x14	; 20
   173c2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   173c6:	f2 e0       	ldi	r31, 0x02	; 2
   173c8:	3f 12       	cpse	r3, r31
   173ca:	27 c0       	rjmp	.+78     	; 0x1741a <_Z22Valve_Grouping_Handlerh+0x15ca>
   173cc:	86 e0       	ldi	r24, 0x06	; 6
   173ce:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   173d2:	84 e6       	ldi	r24, 0x64	; 100
   173d4:	90 e0       	ldi	r25, 0x00	; 0
   173d6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   173da:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   173de:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   173e2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   173e6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   173ea:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   173ee:	a0 62       	ori	r26, 0x20	; 32
   173f0:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   173f4:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   173f8:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   173fc:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17400:	40 92 6e 14 	sts	0x146E, r4	; 0x80146e <_sRuble_Parameters+0xc0>
   17404:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17408:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1740c:	82 60       	ori	r24, 0x02	; 2
   1740e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17412:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17416:	80 e0       	ldi	r24, 0x00	; 0
   17418:	56 c0       	rjmp	.+172    	; 0x174c6 <_Z22Valve_Grouping_Handlerh+0x1676>
   1741a:	68 ee       	ldi	r22, 0xE8	; 232
   1741c:	73 e0       	ldi	r23, 0x03	; 3
   1741e:	80 e0       	ldi	r24, 0x00	; 0
   17420:	90 e0       	ldi	r25, 0x00	; 0
   17422:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17426:	23 e0       	ldi	r18, 0x03	; 3
   17428:	32 12       	cpse	r3, r18
   1742a:	07 ce       	rjmp	.-1010   	; 0x1703a <_Z22Valve_Grouping_Handlerh+0x11ea>
   1742c:	35 c0       	rjmp	.+106    	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x1648>
   1742e:	32 e1       	ldi	r19, 0x12	; 18
   17430:	3f 15       	cp	r19, r15
   17432:	78 f4       	brcc	.+30     	; 0x17452 <_Z22Valve_Grouping_Handlerh+0x1602>
   17434:	ef 2d       	mov	r30, r15
   17436:	f0 e0       	ldi	r31, 0x00	; 0
   17438:	e7 5c       	subi	r30, 0xC7	; 199
   1743a:	fb 4e       	sbci	r31, 0xEB	; 235
   1743c:	6b a9       	ldd	r22, Y+51	; 0x33
   1743e:	80 81       	ld	r24, Z
   17440:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17444:	68 ec       	ldi	r22, 0xC8	; 200
   17446:	70 e0       	ldi	r23, 0x00	; 0
   17448:	80 e0       	ldi	r24, 0x00	; 0
   1744a:	90 e0       	ldi	r25, 0x00	; 0
   1744c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17450:	23 c0       	rjmp	.+70     	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x1648>
   17452:	01 97       	sbiw	r24, 0x01	; 1
   17454:	26 e0       	ldi	r18, 0x06	; 6
   17456:	28 9f       	mul	r18, r24
   17458:	f0 01       	movw	r30, r0
   1745a:	29 9f       	mul	r18, r25
   1745c:	f0 0d       	add	r31, r0
   1745e:	11 24       	eor	r1, r1
   17460:	e2 5b       	subi	r30, 0xB2	; 178
   17462:	f2 4f       	sbci	r31, 0xF2	; 242
   17464:	e0 0f       	add	r30, r16
   17466:	f1 1f       	adc	r31, r17
   17468:	81 81       	ldd	r24, Z+1	; 0x01
   1746a:	85 36       	cpi	r24, 0x65	; 101
   1746c:	a9 f4       	brne	.+42     	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x1648>
   1746e:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   17472:	41 e0       	ldi	r20, 0x01	; 1
   17474:	54 12       	cpse	r5, r20
   17476:	05 c0       	rjmp	.+10     	; 0x17482 <_Z22Valve_Grouping_Handlerh+0x1632>
   17478:	88 23       	and	r24, r24
   1747a:	71 f0       	breq	.+28     	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x1648>
   1747c:	50 92 7b 14 	sts	0x147B, r5	; 0x80147b <_sRuble_Parameters+0xcd>
   17480:	05 c0       	rjmp	.+10     	; 0x1748c <_Z22Valve_Grouping_Handlerh+0x163c>
   17482:	88 23       	and	r24, r24
   17484:	49 f0       	breq	.+18     	; 0x17498 <_Z22Valve_Grouping_Handlerh+0x1648>
   17486:	82 e0       	ldi	r24, 0x02	; 2
   17488:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   1748c:	6b e7       	ldi	r22, 0x7B	; 123
   1748e:	74 e1       	ldi	r23, 0x14	; 20
   17490:	88 ea       	ldi	r24, 0xA8	; 168
   17492:	9c e0       	ldi	r25, 0x0C	; 12
   17494:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17498:	0f 5f       	subi	r16, 0xFF	; 255
   1749a:	1f 4f       	sbci	r17, 0xFF	; 255
   1749c:	05 30       	cpi	r16, 0x05	; 5
   1749e:	11 05       	cpc	r17, r1
   174a0:	09 f0       	breq	.+2      	; 0x174a4 <_Z22Valve_Grouping_Handlerh+0x1654>
   174a2:	ee cc       	rjmp	.-1572   	; 0x16e80 <_Z22Valve_Grouping_Handlerh+0x1030>
   174a4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   174a8:	81 30       	cpi	r24, 0x01	; 1
   174aa:	61 f4       	brne	.+24     	; 0x174c4 <_Z22Valve_Grouping_Handlerh+0x1674>
   174ac:	6b e7       	ldi	r22, 0x7B	; 123
   174ae:	7b e3       	ldi	r23, 0x3B	; 59
   174b0:	86 ec       	ldi	r24, 0xC6	; 198
   174b2:	94 e1       	ldi	r25, 0x14	; 20
   174b4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   174b8:	86 ec       	ldi	r24, 0xC6	; 198
   174ba:	94 e1       	ldi	r25, 0x14	; 20
   174bc:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   174c0:	01 c0       	rjmp	.+2      	; 0x174c4 <_Z22Valve_Grouping_Handlerh+0x1674>
   174c2:	01 c0       	rjmp	.+2      	; 0x174c6 <_Z22Valve_Grouping_Handlerh+0x1676>
   174c4:	81 e0       	ldi	r24, 0x01	; 1
   174c6:	e8 96       	adiw	r28, 0x38	; 56
   174c8:	0f b6       	in	r0, 0x3f	; 63
   174ca:	f8 94       	cli
   174cc:	de bf       	out	0x3e, r29	; 62
   174ce:	0f be       	out	0x3f, r0	; 63
   174d0:	cd bf       	out	0x3d, r28	; 61
   174d2:	df 91       	pop	r29
   174d4:	cf 91       	pop	r28
   174d6:	1f 91       	pop	r17
   174d8:	0f 91       	pop	r16
   174da:	ff 90       	pop	r15
   174dc:	ef 90       	pop	r14
   174de:	df 90       	pop	r13
   174e0:	cf 90       	pop	r12
   174e2:	bf 90       	pop	r11
   174e4:	af 90       	pop	r10
   174e6:	9f 90       	pop	r9
   174e8:	8f 90       	pop	r8
   174ea:	7f 90       	pop	r7
   174ec:	6f 90       	pop	r6
   174ee:	5f 90       	pop	r5
   174f0:	4f 90       	pop	r4
   174f2:	3f 90       	pop	r3
   174f4:	2f 90       	pop	r2
   174f6:	08 95       	ret

000174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>:
   174f8:	2f 92       	push	r2
   174fa:	3f 92       	push	r3
   174fc:	4f 92       	push	r4
   174fe:	5f 92       	push	r5
   17500:	6f 92       	push	r6
   17502:	7f 92       	push	r7
   17504:	8f 92       	push	r8
   17506:	9f 92       	push	r9
   17508:	af 92       	push	r10
   1750a:	bf 92       	push	r11
   1750c:	cf 92       	push	r12
   1750e:	df 92       	push	r13
   17510:	ef 92       	push	r14
   17512:	ff 92       	push	r15
   17514:	0f 93       	push	r16
   17516:	1f 93       	push	r17
   17518:	cf 93       	push	r28
   1751a:	df 93       	push	r29
   1751c:	00 d0       	rcall	.+0      	; 0x1751e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x26>
   1751e:	cd b7       	in	r28, 0x3d	; 61
   17520:	de b7       	in	r29, 0x3e	; 62
   17522:	89 83       	std	Y+1, r24	; 0x01
   17524:	6a 83       	std	Y+2, r22	; 0x02
   17526:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1752a:	81 30       	cpi	r24, 0x01	; 1
   1752c:	31 f4       	brne	.+12     	; 0x1753a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42>
   1752e:	63 ef       	ldi	r22, 0xF3	; 243
   17530:	7e e2       	ldi	r23, 0x2E	; 46
   17532:	86 ec       	ldi	r24, 0xC6	; 198
   17534:	94 e1       	ldi	r25, 0x14	; 20
   17536:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1753a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1753e:	81 30       	cpi	r24, 0x01	; 1
   17540:	89 f5       	brne	.+98     	; 0x175a4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xac>
   17542:	3a 81       	ldd	r19, Y+2	; 0x02
   17544:	2b e1       	ldi	r18, 0x1B	; 27
   17546:	32 9f       	mul	r19, r18
   17548:	60 01       	movw	r12, r0
   1754a:	11 24       	eor	r1, r1
   1754c:	e1 2c       	mov	r14, r1
   1754e:	f1 2c       	mov	r15, r1
   17550:	f6 01       	movw	r30, r12
   17552:	ee 0d       	add	r30, r14
   17554:	ff 1d       	adc	r31, r15
   17556:	e8 51       	subi	r30, 0x18	; 24
   17558:	f2 4f       	sbci	r31, 0xF2	; 242
   1755a:	4a e0       	ldi	r20, 0x0A	; 10
   1755c:	50 e0       	ldi	r21, 0x00	; 0
   1755e:	65 81       	ldd	r22, Z+5	; 0x05
   17560:	86 ec       	ldi	r24, 0xC6	; 198
   17562:	94 e1       	ldi	r25, 0x14	; 20
   17564:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   17568:	61 ef       	ldi	r22, 0xF1	; 241
   1756a:	7e e2       	ldi	r23, 0x2E	; 46
   1756c:	86 ec       	ldi	r24, 0xC6	; 198
   1756e:	94 e1       	ldi	r25, 0x14	; 20
   17570:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17574:	4f ef       	ldi	r20, 0xFF	; 255
   17576:	e4 1a       	sub	r14, r20
   17578:	f4 0a       	sbc	r15, r20
   1757a:	85 e0       	ldi	r24, 0x05	; 5
   1757c:	e8 16       	cp	r14, r24
   1757e:	f1 04       	cpc	r15, r1
   17580:	39 f7       	brne	.-50     	; 0x17550 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x58>
   17582:	65 ed       	ldi	r22, 0xD5	; 213
   17584:	7e e2       	ldi	r23, 0x2E	; 46
   17586:	86 ec       	ldi	r24, 0xC6	; 198
   17588:	94 e1       	ldi	r25, 0x14	; 20
   1758a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1758e:	4a e0       	ldi	r20, 0x0A	; 10
   17590:	50 e0       	ldi	r21, 0x00	; 0
   17592:	6a 81       	ldd	r22, Y+2	; 0x02
   17594:	86 ec       	ldi	r24, 0xC6	; 198
   17596:	94 e1       	ldi	r25, 0x14	; 20
   17598:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   1759c:	86 ec       	ldi	r24, 0xC6	; 198
   1759e:	94 e1       	ldi	r25, 0x14	; 20
   175a0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   175a4:	9a 81       	ldd	r25, Y+2	; 0x02
   175a6:	94 30       	cpi	r25, 0x04	; 4
   175a8:	19 f4       	brne	.+6      	; 0x175b0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xb8>
   175aa:	e9 81       	ldd	r30, Y+1	; 0x01
   175ac:	e1 30       	cpi	r30, 0x01	; 1
   175ae:	91 f0       	breq	.+36     	; 0x175d4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xdc>
   175b0:	2a 81       	ldd	r18, Y+2	; 0x02
   175b2:	4b e1       	ldi	r20, 0x1B	; 27
   175b4:	24 9f       	mul	r18, r20
   175b6:	90 01       	movw	r18, r0
   175b8:	11 24       	eor	r1, r1
   175ba:	3b 83       	std	Y+3, r19	; 0x03
   175bc:	2a 83       	std	Y+2, r18	; 0x02
   175be:	e1 2c       	mov	r14, r1
   175c0:	f1 2c       	mov	r15, r1
   175c2:	52 e0       	ldi	r21, 0x02	; 2
   175c4:	a5 2e       	mov	r10, r21
   175c6:	6d e0       	ldi	r22, 0x0D	; 13
   175c8:	b6 2e       	mov	r11, r22
   175ca:	70 ed       	ldi	r23, 0xD0	; 208
   175cc:	c7 2e       	mov	r12, r23
   175ce:	7f e0       	ldi	r23, 0x0F	; 15
   175d0:	d7 2e       	mov	r13, r23
   175d2:	97 c1       	rjmp	.+814    	; 0x17902 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x40a>
   175d4:	e9 e5       	ldi	r30, 0x59	; 89
   175d6:	fe e0       	ldi	r31, 0x0E	; 14
   175d8:	80 e0       	ldi	r24, 0x00	; 0
   175da:	91 91       	ld	r25, Z+
   175dc:	91 11       	cpse	r25, r1
   175de:	8f 5f       	subi	r24, 0xFF	; 255
   175e0:	3e e0       	ldi	r19, 0x0E	; 14
   175e2:	ee 35       	cpi	r30, 0x5E	; 94
   175e4:	f3 07       	cpc	r31, r19
   175e6:	c9 f7       	brne	.-14     	; 0x175da <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xe2>
   175e8:	82 30       	cpi	r24, 0x02	; 2
   175ea:	18 f4       	brcc	.+6      	; 0x175f2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xfa>
   175ec:	91 e0       	ldi	r25, 0x01	; 1
   175ee:	90 93 eb 0c 	sts	0x0CEB, r25	; 0x800ceb <_gRunning_Flush_Num>
   175f2:	90 91 eb 0c 	lds	r25, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
   175f6:	99 23       	and	r25, r25
   175f8:	11 f0       	breq	.+4      	; 0x175fe <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x106>
   175fa:	89 17       	cp	r24, r25
   175fc:	48 f4       	brcc	.+18     	; 0x17610 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x118>
   175fe:	81 e0       	ldi	r24, 0x01	; 1
   17600:	80 93 eb 0c 	sts	0x0CEB, r24	; 0x800ceb <_gRunning_Flush_Num>
   17604:	6b ee       	ldi	r22, 0xEB	; 235
   17606:	7c e0       	ldi	r23, 0x0C	; 12
   17608:	87 eb       	ldi	r24, 0xB7	; 183
   1760a:	9e e0       	ldi	r25, 0x0E	; 14
   1760c:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17610:	e0 91 eb 0c 	lds	r30, 0x0CEB	; 0x800ceb <_gRunning_Flush_Num>
   17614:	f0 e0       	ldi	r31, 0x00	; 0
   17616:	e8 5a       	subi	r30, 0xA8	; 168
   17618:	f1 4f       	sbci	r31, 0xF1	; 241
   1761a:	e0 81       	ld	r30, Z
   1761c:	e3 31       	cpi	r30, 0x13	; 19
   1761e:	20 f4       	brcc	.+8      	; 0x17628 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x130>
   17620:	80 91 5e 0e 	lds	r24, 0x0E5E	; 0x800e5e <_sExtra_Plot+0x76>
   17624:	81 11       	cpse	r24, r1
   17626:	2b c3       	rjmp	.+1622   	; 0x17c7e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   17628:	f0 e0       	ldi	r31, 0x00	; 0
   1762a:	e7 5c       	subi	r30, 0xC7	; 199
   1762c:	fb 4e       	sbci	r31, 0xEB	; 235
   1762e:	60 e0       	ldi	r22, 0x00	; 0
   17630:	80 81       	ld	r24, Z
   17632:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17636:	68 ec       	ldi	r22, 0xC8	; 200
   17638:	70 e0       	ldi	r23, 0x00	; 0
   1763a:	80 e0       	ldi	r24, 0x00	; 0
   1763c:	90 e0       	ldi	r25, 0x00	; 0
   1763e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17642:	1d c3       	rjmp	.+1594   	; 0x17c7e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   17644:	43 e0       	ldi	r20, 0x03	; 3
   17646:	48 15       	cp	r20, r8
   17648:	08 f0       	brcs	.+2      	; 0x1764c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x154>
   1764a:	6c c1       	rjmp	.+728    	; 0x17924 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42c>
   1764c:	6b ea       	ldi	r22, 0xAB	; 171
   1764e:	86 9e       	mul	r8, r22
   17650:	71 2c       	mov	r7, r1
   17652:	11 24       	eor	r1, r1
   17654:	87 2d       	mov	r24, r7
   17656:	86 95       	lsr	r24
   17658:	98 2f       	mov	r25, r24
   1765a:	99 0f       	add	r25, r25
   1765c:	89 0f       	add	r24, r25
   1765e:	88 1a       	sub	r8, r24
   17660:	67 2d       	mov	r22, r7
   17662:	66 95       	lsr	r22
   17664:	88 20       	and	r8, r8
   17666:	09 f4       	brne	.+2      	; 0x1766a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x172>
   17668:	59 c1       	rjmp	.+690    	; 0x1791c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x424>
   1766a:	01 e0       	ldi	r16, 0x01	; 1
   1766c:	06 0f       	add	r16, r22
   1766e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17672:	81 30       	cpi	r24, 0x01	; 1
   17674:	89 f4       	brne	.+34     	; 0x17698 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1a0>
   17676:	61 ec       	ldi	r22, 0xC1	; 193
   17678:	7e e2       	ldi	r23, 0x2E	; 46
   1767a:	86 ec       	ldi	r24, 0xC6	; 198
   1767c:	94 e1       	ldi	r25, 0x14	; 20
   1767e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17682:	86 ec       	ldi	r24, 0xC6	; 198
   17684:	94 e1       	ldi	r25, 0x14	; 20
   17686:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1768a:	4a e0       	ldi	r20, 0x0A	; 10
   1768c:	50 e0       	ldi	r21, 0x00	; 0
   1768e:	60 2f       	mov	r22, r16
   17690:	86 ec       	ldi	r24, 0xC6	; 198
   17692:	94 e1       	ldi	r25, 0x14	; 20
   17694:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   17698:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   1769c:	81 11       	cpse	r24, r1
   1769e:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   176a2:	e5 ef       	ldi	r30, 0xF5	; 245
   176a4:	f3 e1       	ldi	r31, 0x13	; 19
   176a6:	24 e1       	ldi	r18, 0x14	; 20
   176a8:	11 92       	st	Z+, r1
   176aa:	2a 95       	dec	r18
   176ac:	e9 f7       	brne	.-6      	; 0x176a8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1b0>
   176ae:	60 2f       	mov	r22, r16
   176b0:	70 e0       	ldi	r23, 0x00	; 0
   176b2:	61 50       	subi	r22, 0x01	; 1
   176b4:	71 09       	sbc	r23, r1
   176b6:	37 e0       	ldi	r19, 0x07	; 7
   176b8:	36 9f       	mul	r19, r22
   176ba:	c0 01       	movw	r24, r0
   176bc:	37 9f       	mul	r19, r23
   176be:	90 0d       	add	r25, r0
   176c0:	11 24       	eor	r1, r1
   176c2:	82 55       	subi	r24, 0x52	; 82
   176c4:	9c 4e       	sbci	r25, 0xEC	; 236
   176c6:	fc 01       	movw	r30, r24
   176c8:	ec 58       	subi	r30, 0x8C	; 140
   176ca:	ff 4f       	sbci	r31, 0xFF	; 255
   176cc:	20 81       	ld	r18, Z
   176ce:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   176d2:	31 96       	adiw	r30, 0x01	; 1
   176d4:	20 81       	ld	r18, Z
   176d6:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   176da:	31 96       	adiw	r30, 0x01	; 1
   176dc:	20 81       	ld	r18, Z
   176de:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   176e2:	31 96       	adiw	r30, 0x01	; 1
   176e4:	20 81       	ld	r18, Z
   176e6:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   176ea:	31 96       	adiw	r30, 0x01	; 1
   176ec:	20 81       	ld	r18, Z
   176ee:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   176f2:	31 96       	adiw	r30, 0x01	; 1
   176f4:	20 81       	ld	r18, Z
   176f6:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   176fa:	a0 92 fb 13 	sts	0x13FB, r10	; 0x8013fb <_sRuble_Parameters+0x4d>
   176fe:	49 81       	ldd	r20, Y+1	; 0x01
   17700:	40 93 fc 13 	sts	0x13FC, r20	; 0x8013fc <_sRuble_Parameters+0x4e>
   17704:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   17708:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   1770c:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   17710:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   17714:	80 92 00 14 	sts	0x1400, r8	; 0x801400 <_sRuble_Parameters+0x52>
   17718:	40 e0       	ldi	r20, 0x00	; 0
   1771a:	50 e0       	ldi	r21, 0x00	; 0
   1771c:	64 2e       	mov	r6, r20
   1771e:	00 e0       	ldi	r16, 0x00	; 0
   17720:	81 2c       	mov	r8, r1
   17722:	b4 9e       	mul	r11, r20
   17724:	b0 01       	movw	r22, r0
   17726:	b5 9e       	mul	r11, r21
   17728:	70 0d       	add	r23, r0
   1772a:	11 24       	eor	r1, r1
   1772c:	6b 5e       	subi	r22, 0xEB	; 235
   1772e:	73 4f       	sbci	r23, 0xF3	; 243
   17730:	28 2d       	mov	r18, r8
   17732:	30 e0       	ldi	r19, 0x00	; 0
   17734:	fb 01       	movw	r30, r22
   17736:	e2 0f       	add	r30, r18
   17738:	f3 1f       	adc	r31, r19
   1773a:	28 0f       	add	r18, r24
   1773c:	39 1f       	adc	r19, r25
   1773e:	d9 01       	movw	r26, r18
   17740:	ac 58       	subi	r26, 0x8C	; 140
   17742:	bf 4f       	sbci	r27, 0xFF	; 255
   17744:	31 81       	ldd	r19, Z+1	; 0x01
   17746:	2c 91       	ld	r18, X
   17748:	32 17       	cp	r19, r18
   1774a:	19 f0       	breq	.+6      	; 0x17752 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x25a>
   1774c:	00 e0       	ldi	r16, 0x00	; 0
   1774e:	36 e0       	ldi	r19, 0x06	; 6
   17750:	83 2e       	mov	r8, r19
   17752:	0f 5f       	subi	r16, 0xFF	; 255
   17754:	83 94       	inc	r8
   17756:	e5 e0       	ldi	r30, 0x05	; 5
   17758:	e8 15       	cp	r30, r8
   1775a:	50 f7       	brcc	.-44     	; 0x17730 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x238>
   1775c:	06 30       	cpi	r16, 0x06	; 6
   1775e:	09 f4       	brne	.+2      	; 0x17762 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x26a>
   17760:	e3 c0       	rjmp	.+454    	; 0x17928 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x430>
   17762:	4f 5f       	subi	r20, 0xFF	; 255
   17764:	5f 4f       	sbci	r21, 0xFF	; 255
   17766:	46 30       	cpi	r20, 0x06	; 6
   17768:	51 05       	cpc	r21, r1
   1776a:	c1 f6       	brne	.-80     	; 0x1771c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x224>
   1776c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17770:	81 30       	cpi	r24, 0x01	; 1
   17772:	89 f4       	brne	.+34     	; 0x17796 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x29e>
   17774:	6b ea       	ldi	r22, 0xAB	; 171
   17776:	7e e2       	ldi	r23, 0x2E	; 46
   17778:	86 ec       	ldi	r24, 0xC6	; 198
   1777a:	94 e1       	ldi	r25, 0x14	; 20
   1777c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17780:	4a e0       	ldi	r20, 0x0A	; 10
   17782:	50 e0       	ldi	r21, 0x00	; 0
   17784:	61 2f       	mov	r22, r17
   17786:	86 ec       	ldi	r24, 0xC6	; 198
   17788:	94 e1       	ldi	r25, 0x14	; 20
   1778a:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   1778e:	86 ec       	ldi	r24, 0xC6	; 198
   17790:	94 e1       	ldi	r25, 0x14	; 20
   17792:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17796:	fd e0       	ldi	r31, 0x0D	; 13
   17798:	1f 9f       	mul	r17, r31
   1779a:	40 01       	movw	r8, r0
   1779c:	11 24       	eor	r1, r1
   1779e:	00 e0       	ldi	r16, 0x00	; 0
   177a0:	b1 9e       	mul	r11, r17
   177a2:	c0 01       	movw	r24, r0
   177a4:	11 24       	eor	r1, r1
   177a6:	9c 01       	movw	r18, r24
   177a8:	2b 5e       	subi	r18, 0xEB	; 235
   177aa:	33 4f       	sbci	r19, 0xF3	; 243
   177ac:	29 01       	movw	r4, r18
   177ae:	4b e0       	ldi	r20, 0x0B	; 11
   177b0:	44 0e       	add	r4, r20
   177b2:	51 1c       	adc	r5, r1
   177b4:	19 01       	movw	r2, r18
   177b6:	e8 e0       	ldi	r30, 0x08	; 8
   177b8:	2e 0e       	add	r2, r30
   177ba:	31 1c       	adc	r3, r1
   177bc:	9c 01       	movw	r18, r24
   177be:	2a 5e       	subi	r18, 0xEA	; 234
   177c0:	33 4f       	sbci	r19, 0xF3	; 243
   177c2:	39 01       	movw	r6, r18
   177c4:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   177c8:	81 11       	cpse	r24, r1
   177ca:	b0 c0       	rjmp	.+352    	; 0x1792c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x434>
   177cc:	0f 5f       	subi	r16, 0xFF	; 255
   177ce:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   177d2:	81 30       	cpi	r24, 0x01	; 1
   177d4:	51 f4       	brne	.+20     	; 0x177ea <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2f2>
   177d6:	67 e8       	ldi	r22, 0x87	; 135
   177d8:	7e e2       	ldi	r23, 0x2E	; 46
   177da:	86 ec       	ldi	r24, 0xC6	; 198
   177dc:	94 e1       	ldi	r25, 0x14	; 20
   177de:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   177e2:	86 ec       	ldi	r24, 0xC6	; 198
   177e4:	94 e1       	ldi	r25, 0x14	; 20
   177e6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   177ea:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   177ee:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   177f2:	81 11       	cpse	r24, r1
   177f4:	b0 c0       	rjmp	.+352    	; 0x17956 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x45e>
   177f6:	8c e0       	ldi	r24, 0x0C	; 12
   177f8:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   177fc:	88 eb       	ldi	r24, 0xB8	; 184
   177fe:	9b e0       	ldi	r25, 0x0B	; 11
   17800:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
   17804:	88 23       	and	r24, r24
   17806:	09 f4       	brne	.+2      	; 0x1780a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x312>
   17808:	c2 c1       	rjmp	.+900    	; 0x17b8e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x696>
   1780a:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   1780e:	88 23       	and	r24, r24
   17810:	09 f4       	brne	.+2      	; 0x17814 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x31c>
   17812:	69 c1       	rjmp	.+722    	; 0x17ae6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5ee>
   17814:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   17818:	81 11       	cpse	r24, r1
   1781a:	b2 c0       	rjmp	.+356    	; 0x17980 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x488>
   1781c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17820:	81 30       	cpi	r24, 0x01	; 1
   17822:	59 f5       	brne	.+86     	; 0x1787a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x382>
   17824:	61 e7       	ldi	r22, 0x71	; 113
   17826:	7e e2       	ldi	r23, 0x2E	; 46
   17828:	86 ec       	ldi	r24, 0xC6	; 198
   1782a:	94 e1       	ldi	r25, 0x14	; 20
   1782c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17830:	4a e0       	ldi	r20, 0x0A	; 10
   17832:	50 e0       	ldi	r21, 0x00	; 0
   17834:	69 e0       	ldi	r22, 0x09	; 9
   17836:	74 e1       	ldi	r23, 0x14	; 20
   17838:	86 ec       	ldi	r24, 0xC6	; 198
   1783a:	94 e1       	ldi	r25, 0x14	; 20
   1783c:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   17840:	86 ec       	ldi	r24, 0xC6	; 198
   17842:	94 e1       	ldi	r25, 0x14	; 20
   17844:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17848:	86 ec       	ldi	r24, 0xC6	; 198
   1784a:	94 e1       	ldi	r25, 0x14	; 20
   1784c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17850:	63 e5       	ldi	r22, 0x53	; 83
   17852:	7e e2       	ldi	r23, 0x2E	; 46
   17854:	86 ec       	ldi	r24, 0xC6	; 198
   17856:	94 e1       	ldi	r25, 0x14	; 20
   17858:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1785c:	47 e0       	ldi	r20, 0x07	; 7
   1785e:	50 e0       	ldi	r21, 0x00	; 0
   17860:	b3 01       	movw	r22, r6
   17862:	86 ec       	ldi	r24, 0xC6	; 198
   17864:	94 e1       	ldi	r25, 0x14	; 20
   17866:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
   1786a:	86 ec       	ldi	r24, 0xC6	; 198
   1786c:	94 e1       	ldi	r25, 0x14	; 20
   1786e:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17872:	86 ec       	ldi	r24, 0xC6	; 198
   17874:	94 e1       	ldi	r25, 0x14	; 20
   17876:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1787a:	a9 e0       	ldi	r26, 0x09	; 9
   1787c:	b4 e1       	ldi	r27, 0x14	; 20
   1787e:	80 e0       	ldi	r24, 0x00	; 0
   17880:	90 e0       	ldi	r25, 0x00	; 0
   17882:	2d 91       	ld	r18, X+
   17884:	f4 01       	movw	r30, r8
   17886:	e8 0f       	add	r30, r24
   17888:	f9 1f       	adc	r31, r25
   1788a:	eb 5e       	subi	r30, 0xEB	; 235
   1788c:	f3 4f       	sbci	r31, 0xF3	; 243
   1788e:	31 81       	ldd	r19, Z+1	; 0x01
   17890:	32 17       	cp	r19, r18
   17892:	09 f4       	brne	.+2      	; 0x17896 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x39e>
   17894:	ce c0       	rjmp	.+412    	; 0x17a32 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x53a>
   17896:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1789a:	81 30       	cpi	r24, 0x01	; 1
   1789c:	51 f4       	brne	.+20     	; 0x178b2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ba>
   1789e:	68 e2       	ldi	r22, 0x28	; 40
   178a0:	7e e2       	ldi	r23, 0x2E	; 46
   178a2:	86 ec       	ldi	r24, 0xC6	; 198
   178a4:	94 e1       	ldi	r25, 0x14	; 20
   178a6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   178aa:	86 ec       	ldi	r24, 0xC6	; 198
   178ac:	94 e1       	ldi	r25, 0x14	; 20
   178ae:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   178b2:	02 30       	cpi	r16, 0x02	; 2
   178b4:	09 f4       	brne	.+2      	; 0x178b8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c0>
   178b6:	79 c0       	rjmp	.+242    	; 0x179aa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4b2>
   178b8:	21 e0       	ldi	r18, 0x01	; 1
   178ba:	f2 01       	movw	r30, r4
   178bc:	20 83       	st	Z, r18
   178be:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   178c2:	90 e0       	ldi	r25, 0x00	; 0
   178c4:	98 2f       	mov	r25, r24
   178c6:	88 27       	eor	r24, r24
   178c8:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   178cc:	82 2b       	or	r24, r18
   178ce:	f1 01       	movw	r30, r2
   178d0:	91 83       	std	Z+1, r25	; 0x01
   178d2:	80 83       	st	Z, r24
   178d4:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   178d8:	f9 81       	ldd	r31, Y+1	; 0x01
   178da:	f8 13       	cpse	r31, r24
   178dc:	b0 c0       	rjmp	.+352    	; 0x17a3e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x546>
   178de:	03 e0       	ldi	r16, 0x03	; 3
   178e0:	68 ee       	ldi	r22, 0xE8	; 232
   178e2:	73 e0       	ldi	r23, 0x03	; 3
   178e4:	80 e0       	ldi	r24, 0x00	; 0
   178e6:	90 e0       	ldi	r25, 0x00	; 0
   178e8:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   178ec:	03 30       	cpi	r16, 0x03	; 3
   178ee:	09 f0       	breq	.+2      	; 0x178f2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   178f0:	69 cf       	rjmp	.-302    	; 0x177c4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2cc>
   178f2:	4f ef       	ldi	r20, 0xFF	; 255
   178f4:	e4 1a       	sub	r14, r20
   178f6:	f4 0a       	sbc	r15, r20
   178f8:	85 e0       	ldi	r24, 0x05	; 5
   178fa:	e8 16       	cp	r14, r24
   178fc:	f1 04       	cpc	r15, r1
   178fe:	09 f4       	brne	.+2      	; 0x17902 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x40a>
   17900:	b0 c1       	rjmp	.+864    	; 0x17c62 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x76a>
   17902:	ea 81       	ldd	r30, Y+2	; 0x02
   17904:	fb 81       	ldd	r31, Y+3	; 0x03
   17906:	ee 0d       	add	r30, r14
   17908:	ff 1d       	adc	r31, r15
   1790a:	e8 51       	subi	r30, 0x18	; 24
   1790c:	f2 4f       	sbci	r31, 0xF2	; 242
   1790e:	85 80       	ldd	r8, Z+5	; 0x05
   17910:	8f ef       	ldi	r24, 0xFF	; 255
   17912:	88 0d       	add	r24, r8
   17914:	82 31       	cpi	r24, 0x12	; 18
   17916:	08 f0       	brcs	.+2      	; 0x1791a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x422>
   17918:	8e c1       	rjmp	.+796    	; 0x17c36 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x73e>
   1791a:	94 ce       	rjmp	.-728    	; 0x17644 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x14c>
   1791c:	06 2f       	mov	r16, r22
   1791e:	43 e0       	ldi	r20, 0x03	; 3
   17920:	84 2e       	mov	r8, r20
   17922:	a5 ce       	rjmp	.-694    	; 0x1766e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   17924:	01 e0       	ldi	r16, 0x01	; 1
   17926:	a3 ce       	rjmp	.-698    	; 0x1766e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   17928:	16 2d       	mov	r17, r6
   1792a:	20 cf       	rjmp	.-448    	; 0x1776c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x274>
   1792c:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   17930:	88 23       	and	r24, r24
   17932:	09 f4       	brne	.+2      	; 0x17936 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x43e>
   17934:	4b cf       	rjmp	.-362    	; 0x177cc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d4>
   17936:	f6 01       	movw	r30, r12
   17938:	01 90       	ld	r0, Z+
   1793a:	00 20       	and	r0, r0
   1793c:	e9 f7       	brne	.-6      	; 0x17938 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x440>
   1793e:	31 97       	sbiw	r30, 0x01	; 1
   17940:	af 01       	movw	r20, r30
   17942:	40 5d       	subi	r20, 0xD0	; 208
   17944:	5f 40       	sbci	r21, 0x0F	; 15
   17946:	21 e0       	ldi	r18, 0x01	; 1
   17948:	60 ed       	ldi	r22, 0xD0	; 208
   1794a:	7f e0       	ldi	r23, 0x0F	; 15
   1794c:	82 e6       	ldi	r24, 0x62	; 98
   1794e:	9f e0       	ldi	r25, 0x0F	; 15
   17950:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   17954:	3b cf       	rjmp	.-394    	; 0x177cc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d4>
   17956:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   1795a:	88 23       	and	r24, r24
   1795c:	09 f4       	brne	.+2      	; 0x17960 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x468>
   1795e:	4b cf       	rjmp	.-362    	; 0x177f6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2fe>
   17960:	f6 01       	movw	r30, r12
   17962:	01 90       	ld	r0, Z+
   17964:	00 20       	and	r0, r0
   17966:	e9 f7       	brne	.-6      	; 0x17962 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x46a>
   17968:	31 97       	sbiw	r30, 0x01	; 1
   1796a:	af 01       	movw	r20, r30
   1796c:	40 5d       	subi	r20, 0xD0	; 208
   1796e:	5f 40       	sbci	r21, 0x0F	; 15
   17970:	21 e0       	ldi	r18, 0x01	; 1
   17972:	60 ed       	ldi	r22, 0xD0	; 208
   17974:	7f e0       	ldi	r23, 0x0F	; 15
   17976:	82 e6       	ldi	r24, 0x62	; 98
   17978:	9f e0       	ldi	r25, 0x0F	; 15
   1797a:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   1797e:	3b cf       	rjmp	.-394    	; 0x177f6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2fe>
   17980:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   17984:	88 23       	and	r24, r24
   17986:	09 f4       	brne	.+2      	; 0x1798a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x492>
   17988:	49 cf       	rjmp	.-366    	; 0x1781c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x324>
   1798a:	f6 01       	movw	r30, r12
   1798c:	01 90       	ld	r0, Z+
   1798e:	00 20       	and	r0, r0
   17990:	e9 f7       	brne	.-6      	; 0x1798c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x494>
   17992:	31 97       	sbiw	r30, 0x01	; 1
   17994:	af 01       	movw	r20, r30
   17996:	40 5d       	subi	r20, 0xD0	; 208
   17998:	5f 40       	sbci	r21, 0x0F	; 15
   1799a:	21 e0       	ldi	r18, 0x01	; 1
   1799c:	60 ed       	ldi	r22, 0xD0	; 208
   1799e:	7f e0       	ldi	r23, 0x0F	; 15
   179a0:	82 e6       	ldi	r24, 0x62	; 98
   179a2:	9f e0       	ldi	r25, 0x0F	; 15
   179a4:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   179a8:	39 cf       	rjmp	.-398    	; 0x1781c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x324>
   179aa:	86 e0       	ldi	r24, 0x06	; 6
   179ac:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   179b0:	84 e6       	ldi	r24, 0x64	; 100
   179b2:	90 e0       	ldi	r25, 0x00	; 0
   179b4:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   179b8:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   179bc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   179c0:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   179c4:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   179c8:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   179cc:	a0 62       	ori	r26, 0x20	; 32
   179ce:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   179d2:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   179d6:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   179da:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   179de:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   179e2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   179e6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   179ea:	82 60       	ori	r24, 0x02	; 2
   179ec:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   179f0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   179f4:	00 e0       	ldi	r16, 0x00	; 0
   179f6:	10 e0       	ldi	r17, 0x00	; 0
   179f8:	ea 81       	ldd	r30, Y+2	; 0x02
   179fa:	fb 81       	ldd	r31, Y+3	; 0x03
   179fc:	e0 0f       	add	r30, r16
   179fe:	f1 1f       	adc	r31, r17
   17a00:	e8 51       	subi	r30, 0x18	; 24
   17a02:	f2 4f       	sbci	r31, 0xF2	; 242
   17a04:	e5 81       	ldd	r30, Z+5	; 0x05
   17a06:	e3 31       	cpi	r30, 0x13	; 19
   17a08:	68 f0       	brcs	.+26     	; 0x17a24 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x52c>
   17a0a:	f0 e0       	ldi	r31, 0x00	; 0
   17a0c:	e7 5c       	subi	r30, 0xC7	; 199
   17a0e:	fb 4e       	sbci	r31, 0xEB	; 235
   17a10:	61 e0       	ldi	r22, 0x01	; 1
   17a12:	80 81       	ld	r24, Z
   17a14:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17a18:	68 ec       	ldi	r22, 0xC8	; 200
   17a1a:	70 e0       	ldi	r23, 0x00	; 0
   17a1c:	80 e0       	ldi	r24, 0x00	; 0
   17a1e:	90 e0       	ldi	r25, 0x00	; 0
   17a20:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17a24:	0f 5f       	subi	r16, 0xFF	; 255
   17a26:	1f 4f       	sbci	r17, 0xFF	; 255
   17a28:	05 30       	cpi	r16, 0x05	; 5
   17a2a:	11 05       	cpc	r17, r1
   17a2c:	29 f7       	brne	.-54     	; 0x179f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x500>
   17a2e:	80 e0       	ldi	r24, 0x00	; 0
   17a30:	27 c1       	rjmp	.+590    	; 0x17c80 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x788>
   17a32:	01 96       	adiw	r24, 0x01	; 1
   17a34:	86 30       	cpi	r24, 0x06	; 6
   17a36:	91 05       	cpc	r25, r1
   17a38:	09 f0       	breq	.+2      	; 0x17a3c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x544>
   17a3a:	23 cf       	rjmp	.-442    	; 0x17882 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x38a>
   17a3c:	3d cf       	rjmp	.-390    	; 0x178b8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c0>
   17a3e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17a42:	81 30       	cpi	r24, 0x01	; 1
   17a44:	51 f4       	brne	.+20     	; 0x17a5a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x562>
   17a46:	65 e1       	ldi	r22, 0x15	; 21
   17a48:	7e e2       	ldi	r23, 0x2E	; 46
   17a4a:	86 ec       	ldi	r24, 0xC6	; 198
   17a4c:	94 e1       	ldi	r25, 0x14	; 20
   17a4e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17a52:	86 ec       	ldi	r24, 0xC6	; 198
   17a54:	94 e1       	ldi	r25, 0x14	; 20
   17a56:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17a5a:	02 30       	cpi	r16, 0x02	; 2
   17a5c:	09 f0       	breq	.+2      	; 0x17a60 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x568>
   17a5e:	40 cf       	rjmp	.-384    	; 0x178e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17a60:	86 e0       	ldi	r24, 0x06	; 6
   17a62:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17a66:	84 e6       	ldi	r24, 0x64	; 100
   17a68:	90 e0       	ldi	r25, 0x00	; 0
   17a6a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17a6e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17a72:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17a76:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17a7a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17a7e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17a82:	a0 62       	ori	r26, 0x20	; 32
   17a84:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17a88:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17a8c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17a90:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17a94:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17a98:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17a9c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17aa0:	82 60       	ori	r24, 0x02	; 2
   17aa2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17aa6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17aaa:	00 e0       	ldi	r16, 0x00	; 0
   17aac:	10 e0       	ldi	r17, 0x00	; 0
   17aae:	ea 81       	ldd	r30, Y+2	; 0x02
   17ab0:	fb 81       	ldd	r31, Y+3	; 0x03
   17ab2:	e0 0f       	add	r30, r16
   17ab4:	f1 1f       	adc	r31, r17
   17ab6:	e8 51       	subi	r30, 0x18	; 24
   17ab8:	f2 4f       	sbci	r31, 0xF2	; 242
   17aba:	e5 81       	ldd	r30, Z+5	; 0x05
   17abc:	e3 31       	cpi	r30, 0x13	; 19
   17abe:	68 f0       	brcs	.+26     	; 0x17ada <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5e2>
   17ac0:	f0 e0       	ldi	r31, 0x00	; 0
   17ac2:	e7 5c       	subi	r30, 0xC7	; 199
   17ac4:	fb 4e       	sbci	r31, 0xEB	; 235
   17ac6:	61 e0       	ldi	r22, 0x01	; 1
   17ac8:	80 81       	ld	r24, Z
   17aca:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17ace:	68 ec       	ldi	r22, 0xC8	; 200
   17ad0:	70 e0       	ldi	r23, 0x00	; 0
   17ad2:	80 e0       	ldi	r24, 0x00	; 0
   17ad4:	90 e0       	ldi	r25, 0x00	; 0
   17ad6:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17ada:	0f 5f       	subi	r16, 0xFF	; 255
   17adc:	1f 4f       	sbci	r17, 0xFF	; 255
   17ade:	05 30       	cpi	r16, 0x05	; 5
   17ae0:	11 05       	cpc	r17, r1
   17ae2:	29 f7       	brne	.-54     	; 0x17aae <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5b6>
   17ae4:	a4 cf       	rjmp	.-184    	; 0x17a2e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17ae6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17aea:	81 30       	cpi	r24, 0x01	; 1
   17aec:	51 f4       	brne	.+20     	; 0x17b02 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x60a>
   17aee:	6a ed       	ldi	r22, 0xDA	; 218
   17af0:	7d e2       	ldi	r23, 0x2D	; 45
   17af2:	86 ec       	ldi	r24, 0xC6	; 198
   17af4:	94 e1       	ldi	r25, 0x14	; 20
   17af6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17afa:	86 ec       	ldi	r24, 0xC6	; 198
   17afc:	94 e1       	ldi	r25, 0x14	; 20
   17afe:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17b02:	02 30       	cpi	r16, 0x02	; 2
   17b04:	09 f0       	breq	.+2      	; 0x17b08 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x610>
   17b06:	ec ce       	rjmp	.-552    	; 0x178e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17b08:	86 e0       	ldi	r24, 0x06	; 6
   17b0a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17b0e:	84 e6       	ldi	r24, 0x64	; 100
   17b10:	90 e0       	ldi	r25, 0x00	; 0
   17b12:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17b16:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17b1a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17b1e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17b22:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17b26:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17b2a:	a0 62       	ori	r26, 0x20	; 32
   17b2c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17b30:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17b34:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17b38:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17b3c:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17b40:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17b44:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17b48:	82 60       	ori	r24, 0x02	; 2
   17b4a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17b4e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17b52:	00 e0       	ldi	r16, 0x00	; 0
   17b54:	10 e0       	ldi	r17, 0x00	; 0
   17b56:	ea 81       	ldd	r30, Y+2	; 0x02
   17b58:	fb 81       	ldd	r31, Y+3	; 0x03
   17b5a:	e0 0f       	add	r30, r16
   17b5c:	f1 1f       	adc	r31, r17
   17b5e:	e8 51       	subi	r30, 0x18	; 24
   17b60:	f2 4f       	sbci	r31, 0xF2	; 242
   17b62:	e5 81       	ldd	r30, Z+5	; 0x05
   17b64:	e3 31       	cpi	r30, 0x13	; 19
   17b66:	68 f0       	brcs	.+26     	; 0x17b82 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x68a>
   17b68:	f0 e0       	ldi	r31, 0x00	; 0
   17b6a:	e7 5c       	subi	r30, 0xC7	; 199
   17b6c:	fb 4e       	sbci	r31, 0xEB	; 235
   17b6e:	61 e0       	ldi	r22, 0x01	; 1
   17b70:	80 81       	ld	r24, Z
   17b72:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17b76:	68 ec       	ldi	r22, 0xC8	; 200
   17b78:	70 e0       	ldi	r23, 0x00	; 0
   17b7a:	80 e0       	ldi	r24, 0x00	; 0
   17b7c:	90 e0       	ldi	r25, 0x00	; 0
   17b7e:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17b82:	0f 5f       	subi	r16, 0xFF	; 255
   17b84:	1f 4f       	sbci	r17, 0xFF	; 255
   17b86:	05 30       	cpi	r16, 0x05	; 5
   17b88:	11 05       	cpc	r17, r1
   17b8a:	29 f7       	brne	.-54     	; 0x17b56 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x65e>
   17b8c:	50 cf       	rjmp	.-352    	; 0x17a2e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17b8e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17b92:	81 30       	cpi	r24, 0x01	; 1
   17b94:	51 f4       	brne	.+20     	; 0x17baa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6b2>
   17b96:	6f e9       	ldi	r22, 0x9F	; 159
   17b98:	7d e2       	ldi	r23, 0x2D	; 45
   17b9a:	86 ec       	ldi	r24, 0xC6	; 198
   17b9c:	94 e1       	ldi	r25, 0x14	; 20
   17b9e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ba2:	86 ec       	ldi	r24, 0xC6	; 198
   17ba4:	94 e1       	ldi	r25, 0x14	; 20
   17ba6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17baa:	02 30       	cpi	r16, 0x02	; 2
   17bac:	09 f0       	breq	.+2      	; 0x17bb0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6b8>
   17bae:	98 ce       	rjmp	.-720    	; 0x178e0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17bb0:	86 e0       	ldi	r24, 0x06	; 6
   17bb2:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17bb6:	84 e6       	ldi	r24, 0x64	; 100
   17bb8:	90 e0       	ldi	r25, 0x00	; 0
   17bba:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   17bbe:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   17bc2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17bc6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17bca:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17bce:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17bd2:	a0 62       	ori	r26, 0x20	; 32
   17bd4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17bd8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17bdc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17be0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17be4:	10 93 6e 14 	sts	0x146E, r17	; 0x80146e <_sRuble_Parameters+0xc0>
   17be8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17bec:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17bf0:	82 60       	ori	r24, 0x02	; 2
   17bf2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17bf6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17bfa:	00 e0       	ldi	r16, 0x00	; 0
   17bfc:	10 e0       	ldi	r17, 0x00	; 0
   17bfe:	ea 81       	ldd	r30, Y+2	; 0x02
   17c00:	fb 81       	ldd	r31, Y+3	; 0x03
   17c02:	e0 0f       	add	r30, r16
   17c04:	f1 1f       	adc	r31, r17
   17c06:	e8 51       	subi	r30, 0x18	; 24
   17c08:	f2 4f       	sbci	r31, 0xF2	; 242
   17c0a:	e5 81       	ldd	r30, Z+5	; 0x05
   17c0c:	e3 31       	cpi	r30, 0x13	; 19
   17c0e:	68 f0       	brcs	.+26     	; 0x17c2a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x732>
   17c10:	f0 e0       	ldi	r31, 0x00	; 0
   17c12:	e7 5c       	subi	r30, 0xC7	; 199
   17c14:	fb 4e       	sbci	r31, 0xEB	; 235
   17c16:	61 e0       	ldi	r22, 0x01	; 1
   17c18:	80 81       	ld	r24, Z
   17c1a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17c1e:	68 ec       	ldi	r22, 0xC8	; 200
   17c20:	70 e0       	ldi	r23, 0x00	; 0
   17c22:	80 e0       	ldi	r24, 0x00	; 0
   17c24:	90 e0       	ldi	r25, 0x00	; 0
   17c26:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17c2a:	0f 5f       	subi	r16, 0xFF	; 255
   17c2c:	1f 4f       	sbci	r17, 0xFF	; 255
   17c2e:	05 30       	cpi	r16, 0x05	; 5
   17c30:	11 05       	cpc	r17, r1
   17c32:	29 f7       	brne	.-54     	; 0x17bfe <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x706>
   17c34:	fc ce       	rjmp	.-520    	; 0x17a2e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x536>
   17c36:	22 e1       	ldi	r18, 0x12	; 18
   17c38:	28 15       	cp	r18, r8
   17c3a:	08 f0       	brcs	.+2      	; 0x17c3e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x746>
   17c3c:	5a ce       	rjmp	.-844    	; 0x178f2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   17c3e:	61 e0       	ldi	r22, 0x01	; 1
   17c40:	39 81       	ldd	r19, Y+1	; 0x01
   17c42:	31 11       	cpse	r19, r1
   17c44:	60 e0       	ldi	r22, 0x00	; 0
   17c46:	e8 2d       	mov	r30, r8
   17c48:	f0 e0       	ldi	r31, 0x00	; 0
   17c4a:	e7 5c       	subi	r30, 0xC7	; 199
   17c4c:	fb 4e       	sbci	r31, 0xEB	; 235
   17c4e:	80 81       	ld	r24, Z
   17c50:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   17c54:	68 ec       	ldi	r22, 0xC8	; 200
   17c56:	70 e0       	ldi	r23, 0x00	; 0
   17c58:	80 e0       	ldi	r24, 0x00	; 0
   17c5a:	90 e0       	ldi	r25, 0x00	; 0
   17c5c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17c60:	48 ce       	rjmp	.-880    	; 0x178f2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fa>
   17c62:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17c66:	81 30       	cpi	r24, 0x01	; 1
   17c68:	51 f4       	brne	.+20     	; 0x17c7e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x786>
   17c6a:	60 e8       	ldi	r22, 0x80	; 128
   17c6c:	7d e2       	ldi	r23, 0x2D	; 45
   17c6e:	86 ec       	ldi	r24, 0xC6	; 198
   17c70:	94 e1       	ldi	r25, 0x14	; 20
   17c72:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17c76:	86 ec       	ldi	r24, 0xC6	; 198
   17c78:	94 e1       	ldi	r25, 0x14	; 20
   17c7a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17c7e:	81 e0       	ldi	r24, 0x01	; 1
   17c80:	0f 90       	pop	r0
   17c82:	0f 90       	pop	r0
   17c84:	0f 90       	pop	r0
   17c86:	df 91       	pop	r29
   17c88:	cf 91       	pop	r28
   17c8a:	1f 91       	pop	r17
   17c8c:	0f 91       	pop	r16
   17c8e:	ff 90       	pop	r15
   17c90:	ef 90       	pop	r14
   17c92:	df 90       	pop	r13
   17c94:	cf 90       	pop	r12
   17c96:	bf 90       	pop	r11
   17c98:	af 90       	pop	r10
   17c9a:	9f 90       	pop	r9
   17c9c:	8f 90       	pop	r8
   17c9e:	7f 90       	pop	r7
   17ca0:	6f 90       	pop	r6
   17ca2:	5f 90       	pop	r5
   17ca4:	4f 90       	pop	r4
   17ca6:	3f 90       	pop	r3
   17ca8:	2f 90       	pop	r2
   17caa:	08 95       	ret

00017cac <_Z20Wireless_Pump_On_Offhh>:
   17cac:	6f 92       	push	r6
   17cae:	7f 92       	push	r7
   17cb0:	8f 92       	push	r8
   17cb2:	9f 92       	push	r9
   17cb4:	af 92       	push	r10
   17cb6:	bf 92       	push	r11
   17cb8:	cf 92       	push	r12
   17cba:	df 92       	push	r13
   17cbc:	ef 92       	push	r14
   17cbe:	ff 92       	push	r15
   17cc0:	0f 93       	push	r16
   17cc2:	1f 93       	push	r17
   17cc4:	cf 93       	push	r28
   17cc6:	df 93       	push	r29
   17cc8:	78 2e       	mov	r7, r24
   17cca:	c6 2f       	mov	r28, r22
   17ccc:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17cd0:	8f 5f       	subi	r24, 0xFF	; 255
   17cd2:	80 93 d1 0d 	sts	0x0DD1, r24	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17cd6:	22 e0       	ldi	r18, 0x02	; 2
   17cd8:	72 16       	cp	r7, r18
   17cda:	39 f0       	breq	.+14     	; 0x17cea <_Z20Wireless_Pump_On_Offhh+0x3e>
   17cdc:	34 e0       	ldi	r19, 0x04	; 4
   17cde:	73 16       	cp	r7, r19
   17ce0:	21 f0       	breq	.+8      	; 0x17cea <_Z20Wireless_Pump_On_Offhh+0x3e>
   17ce2:	81 e0       	ldi	r24, 0x01	; 1
   17ce4:	78 12       	cpse	r7, r24
   17ce6:	0f c3       	rjmp	.+1566   	; 0x18306 <_Z20Wireless_Pump_On_Offhh+0x65a>
   17ce8:	42 c2       	rjmp	.+1156   	; 0x1816e <_Z20Wireless_Pump_On_Offhh+0x4c2>
   17cea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17cee:	81 30       	cpi	r24, 0x01	; 1
   17cf0:	89 f4       	brne	.+34     	; 0x17d14 <_Z20Wireless_Pump_On_Offhh+0x68>
   17cf2:	63 e1       	ldi	r22, 0x13	; 19
   17cf4:	7d e2       	ldi	r23, 0x2D	; 45
   17cf6:	86 ec       	ldi	r24, 0xC6	; 198
   17cf8:	94 e1       	ldi	r25, 0x14	; 20
   17cfa:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17cfe:	4a e0       	ldi	r20, 0x0A	; 10
   17d00:	50 e0       	ldi	r21, 0x00	; 0
   17d02:	6c 2f       	mov	r22, r28
   17d04:	86 ec       	ldi	r24, 0xC6	; 198
   17d06:	94 e1       	ldi	r25, 0x14	; 20
   17d08:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   17d0c:	86 ec       	ldi	r24, 0xC6	; 198
   17d0e:	94 e1       	ldi	r25, 0x14	; 20
   17d10:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17d14:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   17d18:	81 11       	cpse	r24, r1
   17d1a:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   17d1e:	84 e1       	ldi	r24, 0x14	; 20
   17d20:	e5 ef       	ldi	r30, 0xF5	; 245
   17d22:	f3 e1       	ldi	r31, 0x13	; 19
   17d24:	df 01       	movw	r26, r30
   17d26:	1d 92       	st	X+, r1
   17d28:	8a 95       	dec	r24
   17d2a:	e9 f7       	brne	.-6      	; 0x17d26 <_Z20Wireless_Pump_On_Offhh+0x7a>
   17d2c:	0c 2f       	mov	r16, r28
   17d2e:	10 e0       	ldi	r17, 0x00	; 0
   17d30:	bb e0       	ldi	r27, 0x0B	; 11
   17d32:	cb 9f       	mul	r28, r27
   17d34:	c0 01       	movw	r24, r0
   17d36:	11 24       	eor	r1, r1
   17d38:	fc 01       	movw	r30, r24
   17d3a:	ec 50       	subi	r30, 0x0C	; 12
   17d3c:	f4 4f       	sbci	r31, 0xF4	; 244
   17d3e:	21 81       	ldd	r18, Z+1	; 0x01
   17d40:	20 93 f5 13 	sts	0x13F5, r18	; 0x8013f5 <_sRuble_Parameters+0x47>
   17d44:	22 81       	ldd	r18, Z+2	; 0x02
   17d46:	20 93 f6 13 	sts	0x13F6, r18	; 0x8013f6 <_sRuble_Parameters+0x48>
   17d4a:	23 81       	ldd	r18, Z+3	; 0x03
   17d4c:	20 93 f7 13 	sts	0x13F7, r18	; 0x8013f7 <_sRuble_Parameters+0x49>
   17d50:	24 81       	ldd	r18, Z+4	; 0x04
   17d52:	20 93 f8 13 	sts	0x13F8, r18	; 0x8013f8 <_sRuble_Parameters+0x4a>
   17d56:	25 81       	ldd	r18, Z+5	; 0x05
   17d58:	20 93 f9 13 	sts	0x13F9, r18	; 0x8013f9 <_sRuble_Parameters+0x4b>
   17d5c:	26 81       	ldd	r18, Z+6	; 0x06
   17d5e:	20 93 fa 13 	sts	0x13FA, r18	; 0x8013fa <_sRuble_Parameters+0x4c>
   17d62:	21 e0       	ldi	r18, 0x01	; 1
   17d64:	20 93 fb 13 	sts	0x13FB, r18	; 0x8013fb <_sRuble_Parameters+0x4d>
   17d68:	70 92 fc 13 	sts	0x13FC, r7	; 0x8013fc <_sRuble_Parameters+0x4e>
   17d6c:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   17d70:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0x4f>
   17d74:	20 91 c4 13 	lds	r18, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   17d78:	20 93 ff 13 	sts	0x13FF, r18	; 0x8013ff <_sRuble_Parameters+0x51>
   17d7c:	21 e0       	ldi	r18, 0x01	; 1
   17d7e:	2c 0f       	add	r18, r28
   17d80:	20 93 00 14 	sts	0x1400, r18	; 0x801400 <_sRuble_Parameters+0x52>
   17d84:	23 e5       	ldi	r18, 0x53	; 83
   17d86:	20 93 01 14 	sts	0x1401, r18	; 0x801401 <_sRuble_Parameters+0x53>
   17d8a:	4c 01       	movw	r8, r24
   17d8c:	d0 e0       	ldi	r29, 0x00	; 0
   17d8e:	9c 01       	movw	r18, r24
   17d90:	2b 50       	subi	r18, 0x0B	; 11
   17d92:	34 4f       	sbci	r19, 0xF4	; 244
   17d94:	79 01       	movw	r14, r18
   17d96:	df 5f       	subi	r29, 0xFF	; 255
   17d98:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17d9c:	81 30       	cpi	r24, 0x01	; 1
   17d9e:	51 f4       	brne	.+20     	; 0x17db4 <_Z20Wireless_Pump_On_Offhh+0x108>
   17da0:	6c ee       	ldi	r22, 0xEC	; 236
   17da2:	7c e2       	ldi	r23, 0x2C	; 44
   17da4:	86 ec       	ldi	r24, 0xC6	; 198
   17da6:	94 e1       	ldi	r25, 0x14	; 20
   17da8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17dac:	86 ec       	ldi	r24, 0xC6	; 198
   17dae:	94 e1       	ldi	r25, 0x14	; 20
   17db0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17db4:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   17db8:	10 92 f1 0c 	sts	0x0CF1, r1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   17dbc:	10 92 f0 0c 	sts	0x0CF0, r1	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   17dc0:	8d e0       	ldi	r24, 0x0D	; 13
   17dc2:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   17dc6:	61 2c       	mov	r6, r1
   17dc8:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   17dcc:	88 23       	and	r24, r24
   17dce:	09 f4       	brne	.+2      	; 0x17dd2 <_Z20Wireless_Pump_On_Offhh+0x126>
   17dd0:	68 c1       	rjmp	.+720    	; 0x180a2 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17dd2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17dd6:	81 30       	cpi	r24, 0x01	; 1
   17dd8:	71 f4       	brne	.+28     	; 0x17df6 <_Z20Wireless_Pump_On_Offhh+0x14a>
   17dda:	60 ed       	ldi	r22, 0xD0	; 208
   17ddc:	7c e2       	ldi	r23, 0x2C	; 44
   17dde:	86 ec       	ldi	r24, 0xC6	; 198
   17de0:	94 e1       	ldi	r25, 0x14	; 20
   17de2:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17de6:	86 ec       	ldi	r24, 0xC6	; 198
   17de8:	94 e1       	ldi	r25, 0x14	; 20
   17dea:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17dee:	86 ec       	ldi	r24, 0xC6	; 198
   17df0:	94 e1       	ldi	r25, 0x14	; 20
   17df2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17df6:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   17dfa:	88 23       	and	r24, r24
   17dfc:	09 f4       	brne	.+2      	; 0x17e00 <_Z20Wireless_Pump_On_Offhh+0x154>
   17dfe:	51 c1       	rjmp	.+674    	; 0x180a2 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17e00:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17e04:	81 30       	cpi	r24, 0x01	; 1
   17e06:	59 f5       	brne	.+86     	; 0x17e5e <_Z20Wireless_Pump_On_Offhh+0x1b2>
   17e08:	67 eb       	ldi	r22, 0xB7	; 183
   17e0a:	7c e2       	ldi	r23, 0x2C	; 44
   17e0c:	86 ec       	ldi	r24, 0xC6	; 198
   17e0e:	94 e1       	ldi	r25, 0x14	; 20
   17e10:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17e14:	4a e0       	ldi	r20, 0x0A	; 10
   17e16:	50 e0       	ldi	r21, 0x00	; 0
   17e18:	69 e0       	ldi	r22, 0x09	; 9
   17e1a:	74 e1       	ldi	r23, 0x14	; 20
   17e1c:	86 ec       	ldi	r24, 0xC6	; 198
   17e1e:	94 e1       	ldi	r25, 0x14	; 20
   17e20:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   17e24:	86 ec       	ldi	r24, 0xC6	; 198
   17e26:	94 e1       	ldi	r25, 0x14	; 20
   17e28:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17e2c:	86 ec       	ldi	r24, 0xC6	; 198
   17e2e:	94 e1       	ldi	r25, 0x14	; 20
   17e30:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17e34:	60 e9       	ldi	r22, 0x90	; 144
   17e36:	7c e2       	ldi	r23, 0x2C	; 44
   17e38:	86 ec       	ldi	r24, 0xC6	; 198
   17e3a:	94 e1       	ldi	r25, 0x14	; 20
   17e3c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17e40:	47 e0       	ldi	r20, 0x07	; 7
   17e42:	50 e0       	ldi	r21, 0x00	; 0
   17e44:	b7 01       	movw	r22, r14
   17e46:	86 ec       	ldi	r24, 0xC6	; 198
   17e48:	94 e1       	ldi	r25, 0x14	; 20
   17e4a:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
   17e4e:	86 ec       	ldi	r24, 0xC6	; 198
   17e50:	94 e1       	ldi	r25, 0x14	; 20
   17e52:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17e56:	86 ec       	ldi	r24, 0xC6	; 198
   17e58:	94 e1       	ldi	r25, 0x14	; 20
   17e5a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17e5e:	89 e0       	ldi	r24, 0x09	; 9
   17e60:	a8 2e       	mov	r10, r24
   17e62:	84 e1       	ldi	r24, 0x14	; 20
   17e64:	b8 2e       	mov	r11, r24
   17e66:	c1 2c       	mov	r12, r1
   17e68:	d1 2c       	mov	r13, r1
   17e6a:	d5 01       	movw	r26, r10
   17e6c:	8d 91       	ld	r24, X+
   17e6e:	5d 01       	movw	r10, r26
   17e70:	f4 01       	movw	r30, r8
   17e72:	ec 0d       	add	r30, r12
   17e74:	fd 1d       	adc	r31, r13
   17e76:	ec 50       	subi	r30, 0x0C	; 12
   17e78:	f4 4f       	sbci	r31, 0xF4	; 244
   17e7a:	91 81       	ldd	r25, Z+1	; 0x01
   17e7c:	98 17       	cp	r25, r24
   17e7e:	09 f4       	brne	.+2      	; 0x17e82 <_Z20Wireless_Pump_On_Offhh+0x1d6>
   17e80:	54 c0       	rjmp	.+168    	; 0x17f2a <_Z20Wireless_Pump_On_Offhh+0x27e>
   17e82:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17e86:	81 30       	cpi	r24, 0x01	; 1
   17e88:	51 f4       	brne	.+20     	; 0x17e9e <_Z20Wireless_Pump_On_Offhh+0x1f2>
   17e8a:	64 e6       	ldi	r22, 0x64	; 100
   17e8c:	7c e2       	ldi	r23, 0x2C	; 44
   17e8e:	86 ec       	ldi	r24, 0xC6	; 198
   17e90:	94 e1       	ldi	r25, 0x14	; 20
   17e92:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e96:	86 ec       	ldi	r24, 0xC6	; 198
   17e98:	94 e1       	ldi	r25, 0x14	; 20
   17e9a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17e9e:	68 ee       	ldi	r22, 0xE8	; 232
   17ea0:	73 e0       	ldi	r23, 0x03	; 3
   17ea2:	80 e0       	ldi	r24, 0x00	; 0
   17ea4:	90 e0       	ldi	r25, 0x00	; 0
   17ea6:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17eaa:	80 91 f0 0c 	lds	r24, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   17eae:	90 91 f1 0c 	lds	r25, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   17eb2:	0b 97       	sbiw	r24, 0x0b	; 11
   17eb4:	a0 f0       	brcs	.+40     	; 0x17ede <_Z20Wireless_Pump_On_Offhh+0x232>
   17eb6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17eba:	81 30       	cpi	r24, 0x01	; 1
   17ebc:	09 f0       	breq	.+2      	; 0x17ec0 <_Z20Wireless_Pump_On_Offhh+0x214>
   17ebe:	91 c0       	rjmp	.+290    	; 0x17fe2 <_Z20Wireless_Pump_On_Offhh+0x336>
   17ec0:	66 e4       	ldi	r22, 0x46	; 70
   17ec2:	7c e2       	ldi	r23, 0x2C	; 44
   17ec4:	86 ec       	ldi	r24, 0xC6	; 198
   17ec6:	94 e1       	ldi	r25, 0x14	; 20
   17ec8:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17ecc:	86 ec       	ldi	r24, 0xC6	; 198
   17ece:	94 e1       	ldi	r25, 0x14	; 20
   17ed0:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17ed4:	86 ec       	ldi	r24, 0xC6	; 198
   17ed6:	94 e1       	ldi	r25, 0x14	; 20
   17ed8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17edc:	82 c0       	rjmp	.+260    	; 0x17fe2 <_Z20Wireless_Pump_On_Offhh+0x336>
   17ede:	d3 30       	cpi	r29, 0x03	; 3
   17ee0:	10 f1       	brcs	.+68     	; 0x17f26 <_Z20Wireless_Pump_On_Offhh+0x27a>
   17ee2:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17ee6:	83 30       	cpi	r24, 0x03	; 3
   17ee8:	f0 f0       	brcs	.+60     	; 0x17f26 <_Z20Wireless_Pump_On_Offhh+0x27a>
   17eea:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17eee:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   17ef2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   17ef6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   17efa:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   17efe:	a0 62       	ori	r26, 0x20	; 32
   17f00:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   17f04:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   17f08:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   17f0c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   17f10:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   17f14:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17f18:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17f1c:	90 68       	ori	r25, 0x80	; 128
   17f1e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17f22:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17f26:	66 24       	eor	r6, r6
   17f28:	63 94       	inc	r6
   17f2a:	bf ef       	ldi	r27, 0xFF	; 255
   17f2c:	cb 1a       	sub	r12, r27
   17f2e:	db 0a       	sbc	r13, r27
   17f30:	e6 e0       	ldi	r30, 0x06	; 6
   17f32:	ce 16       	cp	r12, r30
   17f34:	d1 04       	cpc	r13, r1
   17f36:	09 f0       	breq	.+2      	; 0x17f3a <_Z20Wireless_Pump_On_Offhh+0x28e>
   17f38:	98 cf       	rjmp	.-208    	; 0x17e6a <_Z20Wireless_Pump_On_Offhh+0x1be>
   17f3a:	61 10       	cpse	r6, r1
   17f3c:	b2 c0       	rjmp	.+356    	; 0x180a2 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17f3e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17f42:	81 30       	cpi	r24, 0x01	; 1
   17f44:	71 f4       	brne	.+28     	; 0x17f62 <_Z20Wireless_Pump_On_Offhh+0x2b6>
   17f46:	6a e2       	ldi	r22, 0x2A	; 42
   17f48:	7c e2       	ldi	r23, 0x2C	; 44
   17f4a:	86 ec       	ldi	r24, 0xC6	; 198
   17f4c:	94 e1       	ldi	r25, 0x14	; 20
   17f4e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   17f52:	86 ec       	ldi	r24, 0xC6	; 198
   17f54:	94 e1       	ldi	r25, 0x14	; 20
   17f56:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   17f5a:	86 ec       	ldi	r24, 0xC6	; 198
   17f5c:	94 e1       	ldi	r25, 0x14	; 20
   17f5e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   17f62:	68 ee       	ldi	r22, 0xE8	; 232
   17f64:	73 e0       	ldi	r23, 0x03	; 3
   17f66:	80 e0       	ldi	r24, 0x00	; 0
   17f68:	90 e0       	ldi	r25, 0x00	; 0
   17f6a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   17f6e:	f2 e0       	ldi	r31, 0x02	; 2
   17f70:	7f 12       	cpse	r7, r31
   17f72:	3f c0       	rjmp	.+126    	; 0x17ff2 <_Z20Wireless_Pump_On_Offhh+0x346>
   17f74:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   17f78:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   17f7c:	92 30       	cpi	r25, 0x02	; 2
   17f7e:	31 f4       	brne	.+12     	; 0x17f8c <_Z20Wireless_Pump_On_Offhh+0x2e0>
   17f80:	81 30       	cpi	r24, 0x01	; 1
   17f82:	09 f0       	breq	.+2      	; 0x17f86 <_Z20Wireless_Pump_On_Offhh+0x2da>
   17f84:	47 c0       	rjmp	.+142    	; 0x18014 <_Z20Wireless_Pump_On_Offhh+0x368>
   17f86:	60 e2       	ldi	r22, 0x20	; 32
   17f88:	7c e2       	ldi	r23, 0x2C	; 44
   17f8a:	40 c0       	rjmp	.+128    	; 0x1800c <_Z20Wireless_Pump_On_Offhh+0x360>
   17f8c:	98 30       	cpi	r25, 0x08	; 8
   17f8e:	59 f5       	brne	.+86     	; 0x17fe6 <_Z20Wireless_Pump_On_Offhh+0x33a>
   17f90:	81 30       	cpi	r24, 0x01	; 1
   17f92:	31 f4       	brne	.+12     	; 0x17fa0 <_Z20Wireless_Pump_On_Offhh+0x2f4>
   17f94:	62 e0       	ldi	r22, 0x02	; 2
   17f96:	7c e2       	ldi	r23, 0x2C	; 44
   17f98:	86 ec       	ldi	r24, 0xC6	; 198
   17f9a:	94 e1       	ldi	r25, 0x14	; 20
   17f9c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   17fa0:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17fa4:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   17fa8:	84 e0       	ldi	r24, 0x04	; 4
   17faa:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   17fae:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   17fb2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   17fb6:	82 60       	ori	r24, 0x02	; 2
   17fb8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   17fbc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   17fc0:	8b e0       	ldi	r24, 0x0B	; 11
   17fc2:	80 9f       	mul	r24, r16
   17fc4:	f0 01       	movw	r30, r0
   17fc6:	81 9f       	mul	r24, r17
   17fc8:	f0 0d       	add	r31, r0
   17fca:	11 24       	eor	r1, r1
   17fcc:	ec 50       	subi	r30, 0x0C	; 12
   17fce:	f4 4f       	sbci	r31, 0xF4	; 244
   17fd0:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   17fd4:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   17fd8:	98 27       	eor	r25, r24
   17fda:	89 27       	eor	r24, r25
   17fdc:	98 27       	eor	r25, r24
   17fde:	91 87       	std	Z+9, r25	; 0x09
   17fe0:	80 87       	std	Z+8, r24	; 0x08
   17fe2:	c0 e0       	ldi	r28, 0x00	; 0
   17fe4:	92 c1       	rjmp	.+804    	; 0x1830a <_Z20Wireless_Pump_On_Offhh+0x65e>
   17fe6:	81 30       	cpi	r24, 0x01	; 1
   17fe8:	09 f0       	breq	.+2      	; 0x17fec <_Z20Wireless_Pump_On_Offhh+0x340>
   17fea:	5d c0       	rjmp	.+186    	; 0x180a6 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17fec:	66 ee       	ldi	r22, 0xE6	; 230
   17fee:	7b e2       	ldi	r23, 0x2B	; 43
   17ff0:	4f c0       	rjmp	.+158    	; 0x18090 <_Z20Wireless_Pump_On_Offhh+0x3e4>
   17ff2:	24 e0       	ldi	r18, 0x04	; 4
   17ff4:	72 12       	cpse	r7, r18
   17ff6:	57 c0       	rjmp	.+174    	; 0x180a6 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17ff8:	90 91 10 14 	lds	r25, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   17ffc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18000:	94 30       	cpi	r25, 0x04	; 4
   18002:	e1 f4       	brne	.+56     	; 0x1803c <_Z20Wireless_Pump_On_Offhh+0x390>
   18004:	81 30       	cpi	r24, 0x01	; 1
   18006:	31 f4       	brne	.+12     	; 0x18014 <_Z20Wireless_Pump_On_Offhh+0x368>
   18008:	6b ed       	ldi	r22, 0xDB	; 219
   1800a:	7b e2       	ldi	r23, 0x2B	; 43
   1800c:	86 ec       	ldi	r24, 0xC6	; 198
   1800e:	94 e1       	ldi	r25, 0x14	; 20
   18010:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18014:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   18018:	8b e0       	ldi	r24, 0x0B	; 11
   1801a:	80 9f       	mul	r24, r16
   1801c:	f0 01       	movw	r30, r0
   1801e:	81 9f       	mul	r24, r17
   18020:	f0 0d       	add	r31, r0
   18022:	11 24       	eor	r1, r1
   18024:	ec 50       	subi	r30, 0x0C	; 12
   18026:	f4 4f       	sbci	r31, 0xF4	; 244
   18028:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   1802c:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   18030:	98 27       	eor	r25, r24
   18032:	89 27       	eor	r24, r25
   18034:	98 27       	eor	r25, r24
   18036:	91 87       	std	Z+9, r25	; 0x09
   18038:	80 87       	std	Z+8, r24	; 0x08
   1803a:	66 c1       	rjmp	.+716    	; 0x18308 <_Z20Wireless_Pump_On_Offhh+0x65c>
   1803c:	98 30       	cpi	r25, 0x08	; 8
   1803e:	21 f5       	brne	.+72     	; 0x18088 <_Z20Wireless_Pump_On_Offhh+0x3dc>
   18040:	81 30       	cpi	r24, 0x01	; 1
   18042:	31 f4       	brne	.+12     	; 0x18050 <_Z20Wireless_Pump_On_Offhh+0x3a4>
   18044:	6d eb       	ldi	r22, 0xBD	; 189
   18046:	7b e2       	ldi	r23, 0x2B	; 43
   18048:	86 ec       	ldi	r24, 0xC6	; 198
   1804a:	94 e1       	ldi	r25, 0x14	; 20
   1804c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18050:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   18054:	8b e0       	ldi	r24, 0x0B	; 11
   18056:	80 9f       	mul	r24, r16
   18058:	f0 01       	movw	r30, r0
   1805a:	81 9f       	mul	r24, r17
   1805c:	f0 0d       	add	r31, r0
   1805e:	11 24       	eor	r1, r1
   18060:	ec 50       	subi	r30, 0x0C	; 12
   18062:	f4 4f       	sbci	r31, 0xF4	; 244
   18064:	80 91 14 14 	lds	r24, 0x1414	; 0x801414 <_sRuble_Parameters+0x66>
   18068:	90 91 15 14 	lds	r25, 0x1415	; 0x801415 <_sRuble_Parameters+0x67>
   1806c:	98 27       	eor	r25, r24
   1806e:	89 27       	eor	r24, r25
   18070:	98 27       	eor	r25, r24
   18072:	91 87       	std	Z+9, r25	; 0x09
   18074:	80 87       	std	Z+8, r24	; 0x08
   18076:	84 e0       	ldi	r24, 0x04	; 4
   18078:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1807c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18080:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18084:	82 60       	ori	r24, 0x02	; 2
   18086:	6e c0       	rjmp	.+220    	; 0x18164 <_Z20Wireless_Pump_On_Offhh+0x4b8>
   18088:	81 30       	cpi	r24, 0x01	; 1
   1808a:	69 f4       	brne	.+26     	; 0x180a6 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   1808c:	61 ea       	ldi	r22, 0xA1	; 161
   1808e:	7b e2       	ldi	r23, 0x2B	; 43
   18090:	86 ec       	ldi	r24, 0xC6	; 198
   18092:	94 e1       	ldi	r25, 0x14	; 20
   18094:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18098:	86 ec       	ldi	r24, 0xC6	; 198
   1809a:	94 e1       	ldi	r25, 0x14	; 20
   1809c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   180a0:	02 c0       	rjmp	.+4      	; 0x180a6 <_Z20Wireless_Pump_On_Offhh+0x3fa>
   180a2:	80 e0       	ldi	r24, 0x00	; 0
   180a4:	02 c0       	rjmp	.+4      	; 0x180aa <_Z20Wireless_Pump_On_Offhh+0x3fe>
   180a6:	81 e0       	ldi	r24, 0x01	; 1
   180a8:	d3 e0       	ldi	r29, 0x03	; 3
   180aa:	20 91 f0 0c 	lds	r18, 0x0CF0	; 0x800cf0 <_gTime_To_Wait_Lora_Resp>
   180ae:	30 91 f1 0c 	lds	r19, 0x0CF1	; 0x800cf1 <_gTime_To_Wait_Lora_Resp+0x1>
   180b2:	28 30       	cpi	r18, 0x08	; 8
   180b4:	31 05       	cpc	r19, r1
   180b6:	20 f4       	brcc	.+8      	; 0x180c0 <_Z20Wireless_Pump_On_Offhh+0x414>
   180b8:	88 23       	and	r24, r24
   180ba:	09 f4       	brne	.+2      	; 0x180be <_Z20Wireless_Pump_On_Offhh+0x412>
   180bc:	85 ce       	rjmp	.-758    	; 0x17dc8 <_Z20Wireless_Pump_On_Offhh+0x11c>
   180be:	02 c0       	rjmp	.+4      	; 0x180c4 <_Z20Wireless_Pump_On_Offhh+0x418>
   180c0:	81 30       	cpi	r24, 0x01	; 1
   180c2:	b1 f4       	brne	.+44     	; 0x180f0 <_Z20Wireless_Pump_On_Offhh+0x444>
   180c4:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   180c8:	c0 91 ac 14 	lds	r28, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   180cc:	c1 30       	cpi	r28, 0x01	; 1
   180ce:	09 f0       	breq	.+2      	; 0x180d2 <_Z20Wireless_Pump_On_Offhh+0x426>
   180d0:	1b c1       	rjmp	.+566    	; 0x18308 <_Z20Wireless_Pump_On_Offhh+0x65c>
   180d2:	65 e8       	ldi	r22, 0x85	; 133
   180d4:	7b e2       	ldi	r23, 0x2B	; 43
   180d6:	86 ec       	ldi	r24, 0xC6	; 198
   180d8:	94 e1       	ldi	r25, 0x14	; 20
   180da:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   180de:	86 ec       	ldi	r24, 0xC6	; 198
   180e0:	94 e1       	ldi	r25, 0x14	; 20
   180e2:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   180e6:	86 ec       	ldi	r24, 0xC6	; 198
   180e8:	94 e1       	ldi	r25, 0x14	; 20
   180ea:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   180ee:	0d c1       	rjmp	.+538    	; 0x1830a <_Z20Wireless_Pump_On_Offhh+0x65e>
   180f0:	80 91 d1 0d 	lds	r24, 0x0DD1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   180f4:	83 30       	cpi	r24, 0x03	; 3
   180f6:	a8 f0       	brcs	.+42     	; 0x18122 <_Z20Wireless_Pump_On_Offhh+0x476>
   180f8:	10 92 d1 0d 	sts	0x0DD1, r1	; 0x800dd1 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   180fc:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18100:	81 30       	cpi	r24, 0x01	; 1
   18102:	c1 f4       	brne	.+48     	; 0x18134 <_Z20Wireless_Pump_On_Offhh+0x488>
   18104:	69 e6       	ldi	r22, 0x69	; 105
   18106:	7b e2       	ldi	r23, 0x2B	; 43
   18108:	86 ec       	ldi	r24, 0xC6	; 198
   1810a:	94 e1       	ldi	r25, 0x14	; 20
   1810c:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   18110:	86 ec       	ldi	r24, 0xC6	; 198
   18112:	94 e1       	ldi	r25, 0x14	; 20
   18114:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   18118:	86 ec       	ldi	r24, 0xC6	; 198
   1811a:	94 e1       	ldi	r25, 0x14	; 20
   1811c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18120:	09 c0       	rjmp	.+18     	; 0x18134 <_Z20Wireless_Pump_On_Offhh+0x488>
   18122:	68 ee       	ldi	r22, 0xE8	; 232
   18124:	73 e0       	ldi	r23, 0x03	; 3
   18126:	80 e0       	ldi	r24, 0x00	; 0
   18128:	90 e0       	ldi	r25, 0x00	; 0
   1812a:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   1812e:	d3 30       	cpi	r29, 0x03	; 3
   18130:	08 f4       	brcc	.+2      	; 0x18134 <_Z20Wireless_Pump_On_Offhh+0x488>
   18132:	31 ce       	rjmp	.-926    	; 0x17d96 <_Z20Wireless_Pump_On_Offhh+0xea>
   18134:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18138:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1813c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18140:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18144:	a0 62       	ori	r26, 0x20	; 32
   18146:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1814a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1814e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18152:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18156:	c0 93 6f 14 	sts	0x146F, r28	; 0x80146f <_sRuble_Parameters+0xc1>
   1815a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1815e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18162:	90 68       	ori	r25, 0x80	; 128
   18164:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18168:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1816c:	3a cf       	rjmp	.-396    	; 0x17fe2 <_Z20Wireless_Pump_On_Offhh+0x336>
   1816e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18172:	81 30       	cpi	r24, 0x01	; 1
   18174:	89 f4       	brne	.+34     	; 0x18198 <_Z20Wireless_Pump_On_Offhh+0x4ec>
   18176:	66 e5       	ldi	r22, 0x56	; 86
   18178:	7b e2       	ldi	r23, 0x2B	; 43
   1817a:	86 ec       	ldi	r24, 0xC6	; 198
   1817c:	94 e1       	ldi	r25, 0x14	; 20
   1817e:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   18182:	4a e0       	ldi	r20, 0x0A	; 10
   18184:	50 e0       	ldi	r21, 0x00	; 0
   18186:	6c 2f       	mov	r22, r28
   18188:	86 ec       	ldi	r24, 0xC6	; 198
   1818a:	94 e1       	ldi	r25, 0x14	; 20
   1818c:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   18190:	86 ec       	ldi	r24, 0xC6	; 198
   18192:	94 e1       	ldi	r25, 0x14	; 20
   18194:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18198:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   1819c:	81 11       	cpse	r24, r1
   1819e:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   181a2:	84 e1       	ldi	r24, 0x14	; 20
   181a4:	e5 ef       	ldi	r30, 0xF5	; 245
   181a6:	f3 e1       	ldi	r31, 0x13	; 19
   181a8:	df 01       	movw	r26, r30
   181aa:	1d 92       	st	X+, r1
   181ac:	8a 95       	dec	r24
   181ae:	e9 f7       	brne	.-6      	; 0x181aa <_Z20Wireless_Pump_On_Offhh+0x4fe>
   181b0:	bb e0       	ldi	r27, 0x0B	; 11
   181b2:	cb 9f       	mul	r28, r27
   181b4:	80 01       	movw	r16, r0
   181b6:	11 24       	eor	r1, r1
   181b8:	f8 01       	movw	r30, r16
   181ba:	ec 50       	subi	r30, 0x0C	; 12
   181bc:	f4 4f       	sbci	r31, 0xF4	; 244
   181be:	81 81       	ldd	r24, Z+1	; 0x01
   181c0:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   181c4:	82 81       	ldd	r24, Z+2	; 0x02
   181c6:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   181ca:	83 81       	ldd	r24, Z+3	; 0x03
   181cc:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   181d0:	84 81       	ldd	r24, Z+4	; 0x04
   181d2:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   181d6:	85 81       	ldd	r24, Z+5	; 0x05
   181d8:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   181dc:	86 81       	ldd	r24, Z+6	; 0x06
   181de:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   181e2:	81 e0       	ldi	r24, 0x01	; 1
   181e4:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0x4d>
   181e8:	80 93 fc 13 	sts	0x13FC, r24	; 0x8013fc <_sRuble_Parameters+0x4e>
   181ec:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   181f0:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   181f4:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   181f8:	80 93 ff 13 	sts	0x13FF, r24	; 0x8013ff <_sRuble_Parameters+0x51>
   181fc:	81 e0       	ldi	r24, 0x01	; 1
   181fe:	8c 0f       	add	r24, r28
   18200:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <_sRuble_Parameters+0x52>
   18204:	83 e5       	ldi	r24, 0x53	; 83
   18206:	80 93 01 14 	sts	0x1401, r24	; 0x801401 <_sRuble_Parameters+0x53>
   1820a:	80 91 ad 14 	lds	r24, 0x14AD	; 0x8014ad <_sRuble_Parameters+0xff>
   1820e:	80 93 02 14 	sts	0x1402, r24	; 0x801402 <_sRuble_Parameters+0x54>
   18212:	78 01       	movw	r14, r16
   18214:	d0 e0       	ldi	r29, 0x00	; 0
   18216:	0b 50       	subi	r16, 0x0B	; 11
   18218:	14 4f       	sbci	r17, 0xF4	; 244
   1821a:	df 5f       	subi	r29, 0xFF	; 255
   1821c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18220:	81 30       	cpi	r24, 0x01	; 1
   18222:	51 f4       	brne	.+20     	; 0x18238 <_Z20Wireless_Pump_On_Offhh+0x58c>
   18224:	6f e2       	ldi	r22, 0x2F	; 47
   18226:	7b e2       	ldi	r23, 0x2B	; 43
   18228:	86 ec       	ldi	r24, 0xC6	; 198
   1822a:	94 e1       	ldi	r25, 0x14	; 20
   1822c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18230:	86 ec       	ldi	r24, 0xC6	; 198
   18232:	94 e1       	ldi	r25, 0x14	; 20
   18234:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18238:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   1823c:	8e e0       	ldi	r24, 0x0E	; 14
   1823e:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   18242:	80 ee       	ldi	r24, 0xE0	; 224
   18244:	9e e2       	ldi	r25, 0x2E	; 46
   18246:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
   1824a:	88 23       	and	r24, r24
   1824c:	09 f4       	brne	.+2      	; 0x18250 <_Z20Wireless_Pump_On_Offhh+0x5a4>
   1824e:	4f c0       	rjmp	.+158    	; 0x182ee <_Z20Wireless_Pump_On_Offhh+0x642>
   18250:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   18254:	88 23       	and	r24, r24
   18256:	09 f4       	brne	.+2      	; 0x1825a <_Z20Wireless_Pump_On_Offhh+0x5ae>
   18258:	4a c0       	rjmp	.+148    	; 0x182ee <_Z20Wireless_Pump_On_Offhh+0x642>
   1825a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1825e:	81 30       	cpi	r24, 0x01	; 1
   18260:	59 f5       	brne	.+86     	; 0x182b8 <_Z20Wireless_Pump_On_Offhh+0x60c>
   18262:	66 e1       	ldi	r22, 0x16	; 22
   18264:	7b e2       	ldi	r23, 0x2B	; 43
   18266:	86 ec       	ldi	r24, 0xC6	; 198
   18268:	94 e1       	ldi	r25, 0x14	; 20
   1826a:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1826e:	4a e0       	ldi	r20, 0x0A	; 10
   18270:	50 e0       	ldi	r21, 0x00	; 0
   18272:	69 e0       	ldi	r22, 0x09	; 9
   18274:	74 e1       	ldi	r23, 0x14	; 20
   18276:	86 ec       	ldi	r24, 0xC6	; 198
   18278:	94 e1       	ldi	r25, 0x14	; 20
   1827a:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   1827e:	86 ec       	ldi	r24, 0xC6	; 198
   18280:	94 e1       	ldi	r25, 0x14	; 20
   18282:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   18286:	86 ec       	ldi	r24, 0xC6	; 198
   18288:	94 e1       	ldi	r25, 0x14	; 20
   1828a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1828e:	68 ef       	ldi	r22, 0xF8	; 248
   18290:	7a e2       	ldi	r23, 0x2A	; 42
   18292:	86 ec       	ldi	r24, 0xC6	; 198
   18294:	94 e1       	ldi	r25, 0x14	; 20
   18296:	0e 94 1b d5 	call	0x1aa36	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1829a:	47 e0       	ldi	r20, 0x07	; 7
   1829c:	50 e0       	ldi	r21, 0x00	; 0
   1829e:	b8 01       	movw	r22, r16
   182a0:	86 ec       	ldi	r24, 0xC6	; 198
   182a2:	94 e1       	ldi	r25, 0x14	; 20
   182a4:	0e 94 f1 d4 	call	0x1a9e2	; 0x1a9e2 <_ZN5Print5writeEPKhj>
   182a8:	86 ec       	ldi	r24, 0xC6	; 198
   182aa:	94 e1       	ldi	r25, 0x14	; 20
   182ac:	0e 94 48 d5 	call	0x1aa90	; 0x1aa90 <_ZN5Print7printlnEv>
   182b0:	86 ec       	ldi	r24, 0xC6	; 198
   182b2:	94 e1       	ldi	r25, 0x14	; 20
   182b4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   182b8:	a9 e0       	ldi	r26, 0x09	; 9
   182ba:	b4 e1       	ldi	r27, 0x14	; 20
   182bc:	80 e0       	ldi	r24, 0x00	; 0
   182be:	90 e0       	ldi	r25, 0x00	; 0
   182c0:	2d 91       	ld	r18, X+
   182c2:	f7 01       	movw	r30, r14
   182c4:	e8 0f       	add	r30, r24
   182c6:	f9 1f       	adc	r31, r25
   182c8:	ec 50       	subi	r30, 0x0C	; 12
   182ca:	f4 4f       	sbci	r31, 0xF4	; 244
   182cc:	31 81       	ldd	r19, Z+1	; 0x01
   182ce:	32 17       	cp	r19, r18
   182d0:	19 f0       	breq	.+6      	; 0x182d8 <_Z20Wireless_Pump_On_Offhh+0x62c>
   182d2:	d1 30       	cpi	r29, 0x01	; 1
   182d4:	09 f0       	breq	.+2      	; 0x182d8 <_Z20Wireless_Pump_On_Offhh+0x62c>
   182d6:	85 ce       	rjmp	.-758    	; 0x17fe2 <_Z20Wireless_Pump_On_Offhh+0x336>
   182d8:	01 96       	adiw	r24, 0x01	; 1
   182da:	86 30       	cpi	r24, 0x06	; 6
   182dc:	91 05       	cpc	r25, r1
   182de:	81 f7       	brne	.-32     	; 0x182c0 <_Z20Wireless_Pump_On_Offhh+0x614>
   182e0:	80 91 10 14 	lds	r24, 0x1410	; 0x801410 <_sRuble_Parameters+0x62>
   182e4:	81 30       	cpi	r24, 0x01	; 1
   182e6:	19 f4       	brne	.+6      	; 0x182ee <_Z20Wireless_Pump_On_Offhh+0x642>
   182e8:	d3 30       	cpi	r29, 0x03	; 3
   182ea:	31 f0       	breq	.+12     	; 0x182f8 <_Z20Wireless_Pump_On_Offhh+0x64c>
   182ec:	96 cf       	rjmp	.-212    	; 0x1821a <_Z20Wireless_Pump_On_Offhh+0x56e>
   182ee:	d1 30       	cpi	r29, 0x01	; 1
   182f0:	09 f0       	breq	.+2      	; 0x182f4 <_Z20Wireless_Pump_On_Offhh+0x648>
   182f2:	77 ce       	rjmp	.-786    	; 0x17fe2 <_Z20Wireless_Pump_On_Offhh+0x336>
   182f4:	d1 e0       	ldi	r29, 0x01	; 1
   182f6:	91 cf       	rjmp	.-222    	; 0x1821a <_Z20Wireless_Pump_On_Offhh+0x56e>
   182f8:	c1 e0       	ldi	r28, 0x01	; 1
   182fa:	80 91 16 14 	lds	r24, 0x1416	; 0x801416 <_sRuble_Parameters+0x68>
   182fe:	81 30       	cpi	r24, 0x01	; 1
   18300:	09 f0       	breq	.+2      	; 0x18304 <_Z20Wireless_Pump_On_Offhh+0x658>
   18302:	6f ce       	rjmp	.-802    	; 0x17fe2 <_Z20Wireless_Pump_On_Offhh+0x336>
   18304:	02 c0       	rjmp	.+4      	; 0x1830a <_Z20Wireless_Pump_On_Offhh+0x65e>
   18306:	02 c0       	rjmp	.+4      	; 0x1830c <_Z20Wireless_Pump_On_Offhh+0x660>
   18308:	c1 e0       	ldi	r28, 0x01	; 1
   1830a:	8c 2f       	mov	r24, r28
   1830c:	df 91       	pop	r29
   1830e:	cf 91       	pop	r28
   18310:	1f 91       	pop	r17
   18312:	0f 91       	pop	r16
   18314:	ff 90       	pop	r15
   18316:	ef 90       	pop	r14
   18318:	df 90       	pop	r13
   1831a:	cf 90       	pop	r12
   1831c:	bf 90       	pop	r11
   1831e:	af 90       	pop	r10
   18320:	9f 90       	pop	r9
   18322:	8f 90       	pop	r8
   18324:	7f 90       	pop	r7
   18326:	6f 90       	pop	r6
   18328:	08 95       	ret

0001832a <_Z15Stop_Irrigationv>:
   1832a:	cf 93       	push	r28
   1832c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18330:	81 30       	cpi	r24, 0x01	; 1
   18332:	51 f4       	brne	.+20     	; 0x18348 <_Z15Stop_Irrigationv+0x1e>
   18334:	65 ec       	ldi	r22, 0xC5	; 197
   18336:	70 e4       	ldi	r23, 0x40	; 64
   18338:	86 ec       	ldi	r24, 0xC6	; 198
   1833a:	94 e1       	ldi	r25, 0x14	; 20
   1833c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18340:	86 ec       	ldi	r24, 0xC6	; 198
   18342:	94 e1       	ldi	r25, 0x14	; 20
   18344:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18348:	c0 91 9a 14 	lds	r28, 0x149A	; 0x80149a <_sRuble_Parameters+0xec>
   1834c:	8f ef       	ldi	r24, 0xFF	; 255
   1834e:	8c 0f       	add	r24, r28
   18350:	83 30       	cpi	r24, 0x03	; 3
   18352:	18 f4       	brcc	.+6      	; 0x1835a <_Z15Stop_Irrigationv+0x30>
   18354:	10 92 9a 14 	sts	0x149A, r1	; 0x80149a <_sRuble_Parameters+0xec>
   18358:	02 c0       	rjmp	.+4      	; 0x1835e <_Z15Stop_Irrigationv+0x34>
   1835a:	c0 91 98 14 	lds	r28, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   1835e:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   18362:	81 30       	cpi	r24, 0x01	; 1
   18364:	59 f4       	brne	.+22     	; 0x1837c <_Z15Stop_Irrigationv+0x52>
   18366:	c2 30       	cpi	r28, 0x02	; 2
   18368:	48 f0       	brcs	.+18     	; 0x1837c <_Z15Stop_Irrigationv+0x52>
   1836a:	82 e0       	ldi	r24, 0x02	; 2
   1836c:	80 93 7b 14 	sts	0x147B, r24	; 0x80147b <_sRuble_Parameters+0xcd>
   18370:	6b e7       	ldi	r22, 0x7B	; 123
   18372:	74 e1       	ldi	r23, 0x14	; 20
   18374:	88 ea       	ldi	r24, 0xA8	; 168
   18376:	9c e0       	ldi	r25, 0x0C	; 12
   18378:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1837c:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   18380:	81 30       	cpi	r24, 0x01	; 1
   18382:	29 f4       	brne	.+10     	; 0x1838e <_Z15Stop_Irrigationv+0x64>
   18384:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18388:	81 30       	cpi	r24, 0x01	; 1
   1838a:	09 f0       	breq	.+2      	; 0x1838e <_Z15Stop_Irrigationv+0x64>
   1838c:	6b c0       	rjmp	.+214    	; 0x18464 <_Z15Stop_Irrigationv+0x13a>
   1838e:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   18392:	81 11       	cpse	r24, r1
   18394:	16 c0       	rjmp	.+44     	; 0x183c2 <_Z15Stop_Irrigationv+0x98>
   18396:	c1 30       	cpi	r28, 0x01	; 1
   18398:	a1 f4       	brne	.+40     	; 0x183c2 <_Z15Stop_Irrigationv+0x98>
   1839a:	8a e0       	ldi	r24, 0x0A	; 10
   1839c:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   183a0:	01 97       	sbiw	r24, 0x01	; 1
   183a2:	21 f0       	breq	.+8      	; 0x183ac <_Z15Stop_Irrigationv+0x82>
   183a4:	61 e0       	ldi	r22, 0x01	; 1
   183a6:	8a e0       	ldi	r24, 0x0A	; 10
   183a8:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   183ac:	8b e0       	ldi	r24, 0x0B	; 11
   183ae:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   183b2:	01 97       	sbiw	r24, 0x01	; 1
   183b4:	09 f4       	brne	.+2      	; 0x183b8 <_Z15Stop_Irrigationv+0x8e>
   183b6:	56 c0       	rjmp	.+172    	; 0x18464 <_Z15Stop_Irrigationv+0x13a>
   183b8:	61 e0       	ldi	r22, 0x01	; 1
   183ba:	8b e0       	ldi	r24, 0x0B	; 11
   183bc:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   183c0:	51 c0       	rjmp	.+162    	; 0x18464 <_Z15Stop_Irrigationv+0x13a>
   183c2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   183c6:	81 30       	cpi	r24, 0x01	; 1
   183c8:	31 f4       	brne	.+12     	; 0x183d6 <_Z15Stop_Irrigationv+0xac>
   183ca:	6b e9       	ldi	r22, 0x9B	; 155
   183cc:	70 e4       	ldi	r23, 0x40	; 64
   183ce:	86 ec       	ldi	r24, 0xC6	; 198
   183d0:	94 e1       	ldi	r25, 0x14	; 20
   183d2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   183d6:	6e ef       	ldi	r22, 0xFE	; 254
   183d8:	6c 0f       	add	r22, r28
   183da:	84 e0       	ldi	r24, 0x04	; 4
   183dc:	67 dc       	rcall	.-1842   	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
   183de:	2c 2f       	mov	r18, r28
   183e0:	30 e0       	ldi	r19, 0x00	; 0
   183e2:	e0 91 1e 14 	lds	r30, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   183e6:	d9 01       	movw	r26, r18
   183e8:	ae 56       	subi	r26, 0x6E	; 110
   183ea:	bb 4e       	sbci	r27, 0xEB	; 235
   183ec:	1c 92       	st	X, r1
   183ee:	f0 e0       	ldi	r31, 0x00	; 0
   183f0:	e2 58       	subi	r30, 0x82	; 130
   183f2:	fb 4e       	sbci	r31, 0xEB	; 235
   183f4:	88 23       	and	r24, r24
   183f6:	61 f0       	breq	.+24     	; 0x18410 <_Z15Stop_Irrigationv+0xe6>
   183f8:	10 82       	st	Z, r1
   183fa:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   183fe:	6c e7       	ldi	r22, 0x7C	; 124
   18400:	74 e1       	ldi	r23, 0x14	; 20
   18402:	8d ea       	ldi	r24, 0xAD	; 173
   18404:	9c e0       	ldi	r25, 0x0C	; 12
   18406:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1840a:	0e 94 ed 86 	call	0x10dda	; 0x10dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   1840e:	2a c0       	rjmp	.+84     	; 0x18464 <_Z15Stop_Irrigationv+0x13a>
   18410:	81 e0       	ldi	r24, 0x01	; 1
   18412:	80 83       	st	Z, r24
   18414:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   18418:	6c e7       	ldi	r22, 0x7C	; 124
   1841a:	74 e1       	ldi	r23, 0x14	; 20
   1841c:	8d ea       	ldi	r24, 0xAD	; 173
   1841e:	9c e0       	ldi	r25, 0x0C	; 12
   18420:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18424:	0e 94 ed 86 	call	0x10dda	; 0x10dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   18428:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1842c:	8d 7f       	andi	r24, 0xFD	; 253
   1842e:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18432:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   18436:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1843a:	81 30       	cpi	r24, 0x01	; 1
   1843c:	51 f4       	brne	.+20     	; 0x18452 <_Z15Stop_Irrigationv+0x128>
   1843e:	6a e8       	ldi	r22, 0x8A	; 138
   18440:	70 e4       	ldi	r23, 0x40	; 64
   18442:	86 ec       	ldi	r24, 0xC6	; 198
   18444:	94 e1       	ldi	r25, 0x14	; 20
   18446:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1844a:	86 ec       	ldi	r24, 0xC6	; 198
   1844c:	94 e1       	ldi	r25, 0x14	; 20
   1844e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18452:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18456:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1845a:	84 60       	ori	r24, 0x04	; 4
   1845c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18460:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18464:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18468:	88 23       	and	r24, r24
   1846a:	09 f4       	brne	.+2      	; 0x1846e <_Z15Stop_Irrigationv+0x144>
   1846c:	41 c0       	rjmp	.+130    	; 0x184f0 <_Z15Stop_Irrigationv+0x1c6>
   1846e:	80 93 77 14 	sts	0x1477, r24	; 0x801477 <_sRuble_Parameters+0xc9>
   18472:	83 e0       	ldi	r24, 0x03	; 3
   18474:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   18478:	80 e0       	ldi	r24, 0x00	; 0
   1847a:	0e 94 28 af 	call	0x15e50	; 0x15e50 <_Z22Valve_Grouping_Handlerh>
   1847e:	20 91 ac 14 	lds	r18, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18482:	88 23       	and	r24, r24
   18484:	e9 f0       	breq	.+58     	; 0x184c0 <_Z15Stop_Irrigationv+0x196>
   18486:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1848a:	8d 7f       	andi	r24, 0xFD	; 253
   1848c:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18490:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   18494:	21 30       	cpi	r18, 0x01	; 1
   18496:	51 f4       	brne	.+20     	; 0x184ac <_Z15Stop_Irrigationv+0x182>
   18498:	69 e7       	ldi	r22, 0x79	; 121
   1849a:	70 e4       	ldi	r23, 0x40	; 64
   1849c:	86 ec       	ldi	r24, 0xC6	; 198
   1849e:	94 e1       	ldi	r25, 0x14	; 20
   184a0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   184a4:	86 ec       	ldi	r24, 0xC6	; 198
   184a6:	94 e1       	ldi	r25, 0x14	; 20
   184a8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   184ac:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   184b0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   184b4:	84 60       	ori	r24, 0x04	; 4
   184b6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   184ba:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   184be:	18 c0       	rjmp	.+48     	; 0x184f0 <_Z15Stop_Irrigationv+0x1c6>
   184c0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   184c4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   184c8:	84 60       	ori	r24, 0x04	; 4
   184ca:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   184ce:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   184d2:	10 92 1e 14 	sts	0x141E, r1	; 0x80141e <_sRuble_Parameters+0x70>
   184d6:	21 30       	cpi	r18, 0x01	; 1
   184d8:	69 f4       	brne	.+26     	; 0x184f4 <_Z15Stop_Irrigationv+0x1ca>
   184da:	61 e6       	ldi	r22, 0x61	; 97
   184dc:	70 e4       	ldi	r23, 0x40	; 64
   184de:	86 ec       	ldi	r24, 0xC6	; 198
   184e0:	94 e1       	ldi	r25, 0x14	; 20
   184e2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   184e6:	86 ec       	ldi	r24, 0xC6	; 198
   184e8:	94 e1       	ldi	r25, 0x14	; 20
   184ea:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   184ee:	02 c0       	rjmp	.+4      	; 0x184f4 <_Z15Stop_Irrigationv+0x1ca>
   184f0:	81 e0       	ldi	r24, 0x01	; 1
   184f2:	01 c0       	rjmp	.+2      	; 0x184f6 <_Z15Stop_Irrigationv+0x1cc>
   184f4:	80 e0       	ldi	r24, 0x00	; 0
   184f6:	cf 91       	pop	r28
   184f8:	08 95       	ret

000184fa <_Z21Select_Operation_Modev>:
   184fa:	90 91 d7 13 	lds	r25, 0x13D7	; 0x8013d7 <_sRuble_Parameters+0x29>
   184fe:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   18502:	93 30       	cpi	r25, 0x03	; 3
   18504:	09 f4       	brne	.+2      	; 0x18508 <_Z21Select_Operation_Modev+0xe>
   18506:	c5 c0       	rjmp	.+394    	; 0x18692 <_Z21Select_Operation_Modev+0x198>
   18508:	94 30       	cpi	r25, 0x04	; 4
   1850a:	09 f4       	brne	.+2      	; 0x1850e <_Z21Select_Operation_Modev+0x14>
   1850c:	7e c0       	rjmp	.+252    	; 0x1860a <_Z21Select_Operation_Modev+0x110>
   1850e:	91 30       	cpi	r25, 0x01	; 1
   18510:	09 f0       	breq	.+2      	; 0x18514 <_Z21Select_Operation_Modev+0x1a>
   18512:	0d c1       	rjmp	.+538    	; 0x1872e <_Z21Select_Operation_Modev+0x234>
   18514:	2d ef       	ldi	r18, 0xFD	; 253
   18516:	28 0f       	add	r18, r24
   18518:	22 30       	cpi	r18, 0x02	; 2
   1851a:	08 f0       	brcs	.+2      	; 0x1851e <_Z21Select_Operation_Modev+0x24>
   1851c:	08 c1       	rjmp	.+528    	; 0x1872e <_Z21Select_Operation_Modev+0x234>
   1851e:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   18522:	83 30       	cpi	r24, 0x03	; 3
   18524:	21 f4       	brne	.+8      	; 0x1852e <_Z21Select_Operation_Modev+0x34>
   18526:	82 e0       	ldi	r24, 0x02	; 2
   18528:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1852c:	02 c0       	rjmp	.+4      	; 0x18532 <_Z21Select_Operation_Modev+0x38>
   1852e:	90 93 d6 13 	sts	0x13D6, r25	; 0x8013d6 <_sRuble_Parameters+0x28>
   18532:	90 91 d8 13 	lds	r25, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   18536:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1853a:	92 30       	cpi	r25, 0x02	; 2
   1853c:	79 f1       	breq	.+94     	; 0x1859c <_Z21Select_Operation_Modev+0xa2>
   1853e:	81 30       	cpi	r24, 0x01	; 1
   18540:	51 f4       	brne	.+20     	; 0x18556 <_Z21Select_Operation_Modev+0x5c>
   18542:	6b e2       	ldi	r22, 0x2B	; 43
   18544:	76 e4       	ldi	r23, 0x46	; 70
   18546:	86 ec       	ldi	r24, 0xC6	; 198
   18548:	94 e1       	ldi	r25, 0x14	; 20
   1854a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1854e:	86 ec       	ldi	r24, 0xC6	; 198
   18550:	94 e1       	ldi	r25, 0x14	; 20
   18552:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18556:	85 e0       	ldi	r24, 0x05	; 5
   18558:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1855c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18560:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18564:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18568:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1856c:	80 61       	ori	r24, 0x10	; 16
   1856e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18572:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18576:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1857a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1857e:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18582:	8e 7f       	andi	r24, 0xFE	; 254
   18584:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18588:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1858c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18590:	84 60       	ori	r24, 0x04	; 4
   18592:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18596:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1859a:	25 c0       	rjmp	.+74     	; 0x185e6 <_Z21Select_Operation_Modev+0xec>
   1859c:	81 30       	cpi	r24, 0x01	; 1
   1859e:	51 f4       	brne	.+20     	; 0x185b4 <_Z21Select_Operation_Modev+0xba>
   185a0:	6f e0       	ldi	r22, 0x0F	; 15
   185a2:	76 e4       	ldi	r23, 0x46	; 70
   185a4:	86 ec       	ldi	r24, 0xC6	; 198
   185a6:	94 e1       	ldi	r25, 0x14	; 20
   185a8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   185ac:	86 ec       	ldi	r24, 0xC6	; 198
   185ae:	94 e1       	ldi	r25, 0x14	; 20
   185b0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   185b4:	85 e0       	ldi	r24, 0x05	; 5
   185b6:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   185ba:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   185be:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   185c2:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   185c6:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   185ca:	80 61       	ori	r24, 0x10	; 16
   185cc:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   185d0:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   185d4:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   185d8:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   185dc:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   185e0:	81 60       	ori	r24, 0x01	; 1
   185e2:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   185e6:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   185ea:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   185ee:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   185f2:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   185f6:	84 60       	ori	r24, 0x04	; 4
   185f8:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   185fc:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18600:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18604:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18608:	3d c0       	rjmp	.+122    	; 0x18684 <_Z21Select_Operation_Modev+0x18a>
   1860a:	81 50       	subi	r24, 0x01	; 1
   1860c:	83 30       	cpi	r24, 0x03	; 3
   1860e:	08 f0       	brcs	.+2      	; 0x18612 <_Z21Select_Operation_Modev+0x118>
   18610:	8e c0       	rjmp	.+284    	; 0x1872e <_Z21Select_Operation_Modev+0x234>
   18612:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18616:	81 30       	cpi	r24, 0x01	; 1
   18618:	51 f4       	brne	.+20     	; 0x1862e <_Z21Select_Operation_Modev+0x134>
   1861a:	65 ef       	ldi	r22, 0xF5	; 245
   1861c:	75 e4       	ldi	r23, 0x45	; 69
   1861e:	86 ec       	ldi	r24, 0xC6	; 198
   18620:	94 e1       	ldi	r25, 0x14	; 20
   18622:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18626:	86 ec       	ldi	r24, 0xC6	; 198
   18628:	94 e1       	ldi	r25, 0x14	; 20
   1862a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1862e:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   18632:	81 e0       	ldi	r24, 0x01	; 1
   18634:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18638:	84 e0       	ldi	r24, 0x04	; 4
   1863a:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1863e:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   18642:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   18646:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1864a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1864e:	84 60       	ori	r24, 0x04	; 4
   18650:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18654:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18658:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1865c:	81 60       	ori	r24, 0x01	; 1
   1865e:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18662:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18666:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1866a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1866e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18672:	84 60       	ori	r24, 0x04	; 4
   18674:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18678:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1867c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18680:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18684:	65 ed       	ldi	r22, 0xD5	; 213
   18686:	73 e1       	ldi	r23, 0x13	; 19
   18688:	88 ed       	ldi	r24, 0xD8	; 216
   1868a:	94 e0       	ldi	r25, 0x04	; 4
   1868c:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18690:	4e c0       	rjmp	.+156    	; 0x1872e <_Z21Select_Operation_Modev+0x234>
   18692:	81 30       	cpi	r24, 0x01	; 1
   18694:	19 f0       	breq	.+6      	; 0x1869c <_Z21Select_Operation_Modev+0x1a2>
   18696:	85 30       	cpi	r24, 0x05	; 5
   18698:	69 f0       	breq	.+26     	; 0x186b4 <_Z21Select_Operation_Modev+0x1ba>
   1869a:	47 c0       	rjmp	.+142    	; 0x1872a <_Z21Select_Operation_Modev+0x230>
   1869c:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   186a0:	82 e0       	ldi	r24, 0x02	; 2
   186a2:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   186a6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   186aa:	81 30       	cpi	r24, 0x01	; 1
   186ac:	b1 f4       	brne	.+44     	; 0x186da <_Z21Select_Operation_Modev+0x1e0>
   186ae:	61 ee       	ldi	r22, 0xE1	; 225
   186b0:	75 e4       	ldi	r23, 0x45	; 69
   186b2:	0b c0       	rjmp	.+22     	; 0x186ca <_Z21Select_Operation_Modev+0x1d0>
   186b4:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   186b8:	82 e0       	ldi	r24, 0x02	; 2
   186ba:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   186be:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   186c2:	81 30       	cpi	r24, 0x01	; 1
   186c4:	51 f4       	brne	.+20     	; 0x186da <_Z21Select_Operation_Modev+0x1e0>
   186c6:	6d ec       	ldi	r22, 0xCD	; 205
   186c8:	75 e4       	ldi	r23, 0x45	; 69
   186ca:	86 ec       	ldi	r24, 0xC6	; 198
   186cc:	94 e1       	ldi	r25, 0x14	; 20
   186ce:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   186d2:	86 ec       	ldi	r24, 0xC6	; 198
   186d4:	94 e1       	ldi	r25, 0x14	; 20
   186d6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   186da:	83 e0       	ldi	r24, 0x03	; 3
   186dc:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   186e0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   186e4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   186e8:	8c 60       	ori	r24, 0x0C	; 12
   186ea:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   186ee:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   186f2:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   186f6:	8e 7f       	andi	r24, 0xFE	; 254
   186f8:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   186fc:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18700:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18704:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18708:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1870c:	80 62       	ori	r24, 0x20	; 32
   1870e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18712:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18716:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1871a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1871e:	65 ed       	ldi	r22, 0xD5	; 213
   18720:	73 e1       	ldi	r23, 0x13	; 19
   18722:	88 ed       	ldi	r24, 0xD8	; 216
   18724:	94 e0       	ldi	r25, 0x04	; 4
   18726:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1872a:	10 92 d7 13 	sts	0x13D7, r1	; 0x8013d7 <_sRuble_Parameters+0x29>
   1872e:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   18732:	82 30       	cpi	r24, 0x02	; 2
   18734:	09 f4       	brne	.+2      	; 0x18738 <_Z21Select_Operation_Modev+0x23e>
   18736:	66 c1       	rjmp	.+716    	; 0x18a04 <_Z21Select_Operation_Modev+0x50a>
   18738:	20 f4       	brcc	.+8      	; 0x18742 <_Z21Select_Operation_Modev+0x248>
   1873a:	81 30       	cpi	r24, 0x01	; 1
   1873c:	09 f4       	brne	.+2      	; 0x18740 <_Z21Select_Operation_Modev+0x246>
   1873e:	c6 c0       	rjmp	.+396    	; 0x188cc <_Z21Select_Operation_Modev+0x3d2>
   18740:	08 95       	ret
   18742:	83 30       	cpi	r24, 0x03	; 3
   18744:	21 f0       	breq	.+8      	; 0x1874e <_Z21Select_Operation_Modev+0x254>
   18746:	85 30       	cpi	r24, 0x05	; 5
   18748:	09 f4       	brne	.+2      	; 0x1874c <_Z21Select_Operation_Modev+0x252>
   1874a:	17 c1       	rjmp	.+558    	; 0x1897a <_Z21Select_Operation_Modev+0x480>
   1874c:	08 95       	ret
   1874e:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   18752:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   18756:	89 2b       	or	r24, r25
   18758:	09 f0       	breq	.+2      	; 0x1875c <_Z21Select_Operation_Modev+0x262>
   1875a:	5f c0       	rjmp	.+190    	; 0x1881a <_Z21Select_Operation_Modev+0x320>
   1875c:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   18760:	88 23       	and	r24, r24
   18762:	e1 f0       	breq	.+56     	; 0x1879c <_Z21Select_Operation_Modev+0x2a2>
   18764:	e2 dd       	rcall	.-1084   	; 0x1832a <_Z15Stop_Irrigationv>
   18766:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1876a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1876e:	84 60       	ori	r24, 0x04	; 4
   18770:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18774:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18778:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1877c:	81 30       	cpi	r24, 0x01	; 1
   1877e:	51 f4       	brne	.+20     	; 0x18794 <_Z21Select_Operation_Modev+0x29a>
   18780:	6a eb       	ldi	r22, 0xBA	; 186
   18782:	75 e4       	ldi	r23, 0x45	; 69
   18784:	86 ec       	ldi	r24, 0xC6	; 198
   18786:	94 e1       	ldi	r25, 0x14	; 20
   18788:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1878c:	86 ec       	ldi	r24, 0xC6	; 198
   1878e:	94 e1       	ldi	r25, 0x14	; 20
   18790:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18794:	85 e0       	ldi	r24, 0x05	; 5
   18796:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   1879a:	1e c0       	rjmp	.+60     	; 0x187d8 <_Z21Select_Operation_Modev+0x2de>
   1879c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   187a0:	81 30       	cpi	r24, 0x01	; 1
   187a2:	51 f4       	brne	.+20     	; 0x187b8 <_Z21Select_Operation_Modev+0x2be>
   187a4:	6e e9       	ldi	r22, 0x9E	; 158
   187a6:	75 e4       	ldi	r23, 0x45	; 69
   187a8:	86 ec       	ldi	r24, 0xC6	; 198
   187aa:	94 e1       	ldi	r25, 0x14	; 20
   187ac:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   187b0:	86 ec       	ldi	r24, 0xC6	; 198
   187b2:	94 e1       	ldi	r25, 0x14	; 20
   187b4:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   187b8:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   187bc:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   187c0:	85 e0       	ldi	r24, 0x05	; 5
   187c2:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   187c6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   187ca:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   187ce:	84 60       	ori	r24, 0x04	; 4
   187d0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   187d4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   187d8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   187dc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   187e0:	20 91 d9 13 	lds	r18, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   187e4:	2e 7f       	andi	r18, 0xFE	; 254
   187e6:	20 93 d9 13 	sts	0x13D9, r18	; 0x8013d9 <_sRuble_Parameters+0x2b>
   187ea:	24 e0       	ldi	r18, 0x04	; 4
   187ec:	20 93 d6 13 	sts	0x13D6, r18	; 0x8013d6 <_sRuble_Parameters+0x28>
   187f0:	8c 60       	ori	r24, 0x0C	; 12
   187f2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   187f6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   187fa:	65 ed       	ldi	r22, 0xD5	; 213
   187fc:	73 e1       	ldi	r23, 0x13	; 19
   187fe:	88 ed       	ldi	r24, 0xD8	; 216
   18800:	94 e0       	ldi	r25, 0x04	; 4
   18802:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18806:	6e e1       	ldi	r22, 0x1E	; 30
   18808:	74 e1       	ldi	r23, 0x14	; 20
   1880a:	86 e9       	ldi	r24, 0x96	; 150
   1880c:	9c e0       	ldi	r25, 0x0C	; 12
   1880e:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18812:	88 e9       	ldi	r24, 0x98	; 152
   18814:	9c e0       	ldi	r25, 0x0C	; 12
   18816:	0e 94 c1 86 	call	0x10d82	; 0x10d82 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   1881a:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   1881e:	82 30       	cpi	r24, 0x02	; 2
   18820:	09 f4       	brne	.+2      	; 0x18824 <_Z21Select_Operation_Modev+0x32a>
   18822:	3e c1       	rjmp	.+636    	; 0x18aa0 <_Z21Select_Operation_Modev+0x5a6>
   18824:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18828:	81 30       	cpi	r24, 0x01	; 1
   1882a:	51 f4       	brne	.+20     	; 0x18840 <_Z21Select_Operation_Modev+0x346>
   1882c:	69 e8       	ldi	r22, 0x89	; 137
   1882e:	75 e4       	ldi	r23, 0x45	; 69
   18830:	86 ec       	ldi	r24, 0xC6	; 198
   18832:	94 e1       	ldi	r25, 0x14	; 20
   18834:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18838:	86 ec       	ldi	r24, 0xC6	; 198
   1883a:	94 e1       	ldi	r25, 0x14	; 20
   1883c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18840:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   18844:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   18848:	22 e0       	ldi	r18, 0x02	; 2
   1884a:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   1884e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18852:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18856:	88 60       	ori	r24, 0x08	; 8
   18858:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1885c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18860:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18864:	81 60       	ori	r24, 0x01	; 1
   18866:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1886a:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1886e:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18872:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18876:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1887a:	92 60       	ori	r25, 0x02	; 2
   1887c:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18880:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18884:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18888:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1888c:	81 e0       	ldi	r24, 0x01	; 1
   1888e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18892:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   18896:	61 e7       	ldi	r22, 0x71	; 113
   18898:	74 e1       	ldi	r23, 0x14	; 20
   1889a:	89 e1       	ldi	r24, 0x19	; 25
   1889c:	95 e0       	ldi	r25, 0x05	; 5
   1889e:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   188a2:	65 ed       	ldi	r22, 0xD5	; 213
   188a4:	73 e1       	ldi	r23, 0x13	; 19
   188a6:	88 ed       	ldi	r24, 0xD8	; 216
   188a8:	94 e0       	ldi	r25, 0x04	; 4
   188aa:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   188ae:	6e e1       	ldi	r22, 0x1E	; 30
   188b0:	74 e1       	ldi	r23, 0x14	; 20
   188b2:	86 e9       	ldi	r24, 0x96	; 150
   188b4:	9c e0       	ldi	r25, 0x0C	; 12
   188b6:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   188ba:	88 e9       	ldi	r24, 0x98	; 152
   188bc:	9c e0       	ldi	r25, 0x0C	; 12
   188be:	0e 94 c1 86 	call	0x10d82	; 0x10d82 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   188c2:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   188c6:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   188ca:	08 95       	ret
   188cc:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   188d0:	82 30       	cpi	r24, 0x02	; 2
   188d2:	09 f4       	brne	.+2      	; 0x188d6 <_Z21Select_Operation_Modev+0x3dc>
   188d4:	45 c0       	rjmp	.+138    	; 0x18960 <_Z21Select_Operation_Modev+0x466>
   188d6:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   188da:	81 30       	cpi	r24, 0x01	; 1
   188dc:	51 f4       	brne	.+20     	; 0x188f2 <_Z21Select_Operation_Modev+0x3f8>
   188de:	64 e7       	ldi	r22, 0x74	; 116
   188e0:	75 e4       	ldi	r23, 0x45	; 69
   188e2:	86 ec       	ldi	r24, 0xC6	; 198
   188e4:	94 e1       	ldi	r25, 0x14	; 20
   188e6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   188ea:	86 ec       	ldi	r24, 0xC6	; 198
   188ec:	94 e1       	ldi	r25, 0x14	; 20
   188ee:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   188f2:	22 e0       	ldi	r18, 0x02	; 2
   188f4:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   188f8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   188fc:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18900:	84 60       	ori	r24, 0x04	; 4
   18902:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18906:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1890a:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   1890e:	81 60       	ori	r24, 0x01	; 1
   18910:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18914:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18918:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1891c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18920:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18924:	88 60       	ori	r24, 0x08	; 8
   18926:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1892a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1892e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18932:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18936:	81 e0       	ldi	r24, 0x01	; 1
   18938:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1893c:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   18940:	61 e7       	ldi	r22, 0x71	; 113
   18942:	74 e1       	ldi	r23, 0x14	; 20
   18944:	89 e1       	ldi	r24, 0x19	; 25
   18946:	95 e0       	ldi	r25, 0x05	; 5
   18948:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1894c:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18950:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18954:	65 ed       	ldi	r22, 0xD5	; 213
   18956:	73 e1       	ldi	r23, 0x13	; 19
   18958:	88 ed       	ldi	r24, 0xD8	; 216
   1895a:	94 e0       	ldi	r25, 0x04	; 4
   1895c:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18960:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   18964:	88 23       	and	r24, r24
   18966:	09 f4       	brne	.+2      	; 0x1896a <_Z21Select_Operation_Modev+0x470>
   18968:	9b c0       	rjmp	.+310    	; 0x18aa0 <_Z21Select_Operation_Modev+0x5a6>
   1896a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1896e:	81 30       	cpi	r24, 0x01	; 1
   18970:	09 f0       	breq	.+2      	; 0x18974 <_Z21Select_Operation_Modev+0x47a>
   18972:	70 c0       	rjmp	.+224    	; 0x18a54 <_Z21Select_Operation_Modev+0x55a>
   18974:	61 e6       	ldi	r22, 0x61	; 97
   18976:	75 e4       	ldi	r23, 0x45	; 69
   18978:	54 c0       	rjmp	.+168    	; 0x18a22 <_Z21Select_Operation_Modev+0x528>
   1897a:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   1897e:	82 30       	cpi	r24, 0x02	; 2
   18980:	09 f4       	brne	.+2      	; 0x18984 <_Z21Select_Operation_Modev+0x48a>
   18982:	8e c0       	rjmp	.+284    	; 0x18aa0 <_Z21Select_Operation_Modev+0x5a6>
   18984:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18988:	81 30       	cpi	r24, 0x01	; 1
   1898a:	51 f4       	brne	.+20     	; 0x189a0 <_Z21Select_Operation_Modev+0x4a6>
   1898c:	6c e4       	ldi	r22, 0x4C	; 76
   1898e:	75 e4       	ldi	r23, 0x45	; 69
   18990:	86 ec       	ldi	r24, 0xC6	; 198
   18992:	94 e1       	ldi	r25, 0x14	; 20
   18994:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18998:	86 ec       	ldi	r24, 0xC6	; 198
   1899a:	94 e1       	ldi	r25, 0x14	; 20
   1899c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   189a0:	22 e0       	ldi	r18, 0x02	; 2
   189a2:	20 93 d5 13 	sts	0x13D5, r18	; 0x8013d5 <_sRuble_Parameters+0x27>
   189a6:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   189aa:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   189ae:	84 60       	ori	r24, 0x04	; 4
   189b0:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   189b4:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   189b8:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   189bc:	81 60       	ori	r24, 0x01	; 1
   189be:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   189c2:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   189c6:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   189ca:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   189ce:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   189d2:	88 60       	ori	r24, 0x08	; 8
   189d4:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   189d8:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   189dc:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   189e0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   189e4:	81 e0       	ldi	r24, 0x01	; 1
   189e6:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   189ea:	20 93 71 14 	sts	0x1471, r18	; 0x801471 <_sRuble_Parameters+0xc3>
   189ee:	61 e7       	ldi	r22, 0x71	; 113
   189f0:	74 e1       	ldi	r23, 0x14	; 20
   189f2:	89 e1       	ldi	r24, 0x19	; 25
   189f4:	95 e0       	ldi	r25, 0x05	; 5
   189f6:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   189fa:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   189fe:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18a02:	48 c0       	rjmp	.+144    	; 0x18a94 <_Z21Select_Operation_Modev+0x59a>
   18a04:	80 91 d8 13 	lds	r24, 0x13D8	; 0x8013d8 <_sRuble_Parameters+0x2a>
   18a08:	82 30       	cpi	r24, 0x02	; 2
   18a0a:	09 f0       	breq	.+2      	; 0x18a0e <_Z21Select_Operation_Modev+0x514>
   18a0c:	49 c0       	rjmp	.+146    	; 0x18aa0 <_Z21Select_Operation_Modev+0x5a6>
   18a0e:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
   18a12:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18a16:	99 23       	and	r25, r25
   18a18:	69 f0       	breq	.+26     	; 0x18a34 <_Z21Select_Operation_Modev+0x53a>
   18a1a:	81 30       	cpi	r24, 0x01	; 1
   18a1c:	d9 f4       	brne	.+54     	; 0x18a54 <_Z21Select_Operation_Modev+0x55a>
   18a1e:	69 e3       	ldi	r22, 0x39	; 57
   18a20:	75 e4       	ldi	r23, 0x45	; 69
   18a22:	86 ec       	ldi	r24, 0xC6	; 198
   18a24:	94 e1       	ldi	r25, 0x14	; 20
   18a26:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a2a:	86 ec       	ldi	r24, 0xC6	; 198
   18a2c:	94 e1       	ldi	r25, 0x14	; 20
   18a2e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18a32:	10 c0       	rjmp	.+32     	; 0x18a54 <_Z21Select_Operation_Modev+0x55a>
   18a34:	81 30       	cpi	r24, 0x01	; 1
   18a36:	51 f4       	brne	.+20     	; 0x18a4c <_Z21Select_Operation_Modev+0x552>
   18a38:	66 e2       	ldi	r22, 0x26	; 38
   18a3a:	75 e4       	ldi	r23, 0x45	; 69
   18a3c:	86 ec       	ldi	r24, 0xC6	; 198
   18a3e:	94 e1       	ldi	r25, 0x14	; 20
   18a40:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a44:	86 ec       	ldi	r24, 0xC6	; 198
   18a46:	94 e1       	ldi	r25, 0x14	; 20
   18a48:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18a4c:	10 92 a4 14 	sts	0x14A4, r1	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18a50:	10 92 a3 14 	sts	0x14A3, r1	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18a54:	85 e0       	ldi	r24, 0x05	; 5
   18a56:	80 93 d5 13 	sts	0x13D5, r24	; 0x8013d5 <_sRuble_Parameters+0x27>
   18a5a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18a5e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18a62:	84 60       	ori	r24, 0x04	; 4
   18a64:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18a68:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18a6c:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18a70:	8e 7f       	andi	r24, 0xFE	; 254
   18a72:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18a76:	80 e1       	ldi	r24, 0x10	; 16
   18a78:	90 e0       	ldi	r25, 0x00	; 0
   18a7a:	a0 e0       	ldi	r26, 0x00	; 0
   18a7c:	b0 e0       	ldi	r27, 0x00	; 0
   18a7e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18a82:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18a86:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18a8a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18a8e:	81 e0       	ldi	r24, 0x01	; 1
   18a90:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18a94:	65 ed       	ldi	r22, 0xD5	; 213
   18a96:	73 e1       	ldi	r23, 0x13	; 19
   18a98:	88 ed       	ldi	r24, 0xD8	; 216
   18a9a:	94 e0       	ldi	r25, 0x04	; 4
   18a9c:	0c 94 74 86 	jmp	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18aa0:	08 95       	ret

00018aa2 <_Z16Start_Irrigationv>:
   18aa2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18aa6:	81 30       	cpi	r24, 0x01	; 1
   18aa8:	31 f4       	brne	.+12     	; 0x18ab6 <_Z16Start_Irrigationv+0x14>
   18aaa:	62 e7       	ldi	r22, 0x72	; 114
   18aac:	71 e4       	ldi	r23, 0x41	; 65
   18aae:	86 ec       	ldi	r24, 0xC6	; 198
   18ab0:	94 e1       	ldi	r25, 0x14	; 20
   18ab2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ab6:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   18aba:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18abe:	81 30       	cpi	r24, 0x01	; 1
   18ac0:	29 f4       	brne	.+10     	; 0x18acc <_Z16Start_Irrigationv+0x2a>
   18ac2:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18ac6:	81 30       	cpi	r24, 0x01	; 1
   18ac8:	09 f4       	brne	.+2      	; 0x18acc <_Z16Start_Irrigationv+0x2a>
   18aca:	d4 c0       	rjmp	.+424    	; 0x18c74 <_Z16Start_Irrigationv+0x1d2>
   18acc:	82 e0       	ldi	r24, 0x02	; 2
   18ace:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   18ad2:	81 e0       	ldi	r24, 0x01	; 1
   18ad4:	0e 94 28 af 	call	0x15e50	; 0x15e50 <_Z22Valve_Grouping_Handlerh>
   18ad8:	88 23       	and	r24, r24
   18ada:	09 f4       	brne	.+2      	; 0x18ade <_Z16Start_Irrigationv+0x3c>
   18adc:	b3 c0       	rjmp	.+358    	; 0x18c44 <_Z16Start_Irrigationv+0x1a2>
   18ade:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   18ae2:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   18ae6:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   18aea:	81 11       	cpse	r24, r1
   18aec:	22 c0       	rjmp	.+68     	; 0x18b32 <_Z16Start_Irrigationv+0x90>
   18aee:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18af2:	81 30       	cpi	r24, 0x01	; 1
   18af4:	f1 f4       	brne	.+60     	; 0x18b32 <_Z16Start_Irrigationv+0x90>
   18af6:	8a e0       	ldi	r24, 0x0A	; 10
   18af8:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   18afc:	89 2b       	or	r24, r25
   18afe:	21 f0       	breq	.+8      	; 0x18b08 <_Z16Start_Irrigationv+0x66>
   18b00:	60 e0       	ldi	r22, 0x00	; 0
   18b02:	8a e0       	ldi	r24, 0x0A	; 10
   18b04:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   18b08:	80 e3       	ldi	r24, 0x30	; 48
   18b0a:	95 e7       	ldi	r25, 0x75	; 117
   18b0c:	0e 94 a1 75 	call	0xeb42	; 0xeb42 <_Z8My_Delayj>
   18b10:	8b e0       	ldi	r24, 0x0B	; 11
   18b12:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   18b16:	89 2b       	or	r24, r25
   18b18:	21 f0       	breq	.+8      	; 0x18b22 <_Z16Start_Irrigationv+0x80>
   18b1a:	60 e0       	ldi	r22, 0x00	; 0
   18b1c:	8b e0       	ldi	r24, 0x0B	; 11
   18b1e:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   18b22:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18b26:	f0 e0       	ldi	r31, 0x00	; 0
   18b28:	ee 56       	subi	r30, 0x6E	; 110
   18b2a:	fb 4e       	sbci	r31, 0xEB	; 235
   18b2c:	81 e0       	ldi	r24, 0x01	; 1
   18b2e:	80 83       	st	Z, r24
   18b30:	32 c0       	rjmp	.+100    	; 0x18b96 <_Z16Start_Irrigationv+0xf4>
   18b32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18b36:	81 30       	cpi	r24, 0x01	; 1
   18b38:	51 f4       	brne	.+20     	; 0x18b4e <_Z16Start_Irrigationv+0xac>
   18b3a:	6b e4       	ldi	r22, 0x4B	; 75
   18b3c:	71 e4       	ldi	r23, 0x41	; 65
   18b3e:	86 ec       	ldi	r24, 0xC6	; 198
   18b40:	94 e1       	ldi	r25, 0x14	; 20
   18b42:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b46:	86 ec       	ldi	r24, 0xC6	; 198
   18b48:	94 e1       	ldi	r25, 0x14	; 20
   18b4a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18b4e:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18b52:	62 50       	subi	r22, 0x02	; 2
   18b54:	82 e0       	ldi	r24, 0x02	; 2
   18b56:	aa d8       	rcall	.-3756   	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
   18b58:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18b5c:	88 23       	and	r24, r24
   18b5e:	b9 f1       	breq	.+110    	; 0x18bce <_Z16Start_Irrigationv+0x12c>
   18b60:	91 30       	cpi	r25, 0x01	; 1
   18b62:	51 f4       	brne	.+20     	; 0x18b78 <_Z16Start_Irrigationv+0xd6>
   18b64:	66 e3       	ldi	r22, 0x36	; 54
   18b66:	71 e4       	ldi	r23, 0x41	; 65
   18b68:	86 ec       	ldi	r24, 0xC6	; 198
   18b6a:	94 e1       	ldi	r25, 0x14	; 20
   18b6c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b70:	86 ec       	ldi	r24, 0xC6	; 198
   18b72:	94 e1       	ldi	r25, 0x14	; 20
   18b74:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18b78:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18b7c:	f0 e0       	ldi	r31, 0x00	; 0
   18b7e:	ee 56       	subi	r30, 0x6E	; 110
   18b80:	fb 4e       	sbci	r31, 0xEB	; 235
   18b82:	81 e0       	ldi	r24, 0x01	; 1
   18b84:	80 83       	st	Z, r24
   18b86:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   18b8a:	6c e7       	ldi	r22, 0x7C	; 124
   18b8c:	74 e1       	ldi	r23, 0x14	; 20
   18b8e:	8d ea       	ldi	r24, 0xAD	; 173
   18b90:	9c e0       	ldi	r25, 0x0C	; 12
   18b92:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18b96:	0e 94 ed 86 	call	0x10dda	; 0x10dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   18b9a:	86 e9       	ldi	r24, 0x96	; 150
   18b9c:	90 e0       	ldi	r25, 0x00	; 0
   18b9e:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   18ba2:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   18ba6:	80 91 d9 13 	lds	r24, 0x13D9	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18baa:	82 60       	ori	r24, 0x02	; 2
   18bac:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x2b>
   18bb0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18bb4:	81 30       	cpi	r24, 0x01	; 1
   18bb6:	d9 f5       	brne	.+118    	; 0x18c2e <_Z16Start_Irrigationv+0x18c>
   18bb8:	62 ef       	ldi	r22, 0xF2	; 242
   18bba:	70 e4       	ldi	r23, 0x40	; 64
   18bbc:	86 ec       	ldi	r24, 0xC6	; 198
   18bbe:	94 e1       	ldi	r25, 0x14	; 20
   18bc0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18bc4:	86 ec       	ldi	r24, 0xC6	; 198
   18bc6:	94 e1       	ldi	r25, 0x14	; 20
   18bc8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18bcc:	30 c0       	rjmp	.+96     	; 0x18c2e <_Z16Start_Irrigationv+0x18c>
   18bce:	91 30       	cpi	r25, 0x01	; 1
   18bd0:	51 f4       	brne	.+20     	; 0x18be6 <_Z16Start_Irrigationv+0x144>
   18bd2:	69 e1       	ldi	r22, 0x19	; 25
   18bd4:	71 e4       	ldi	r23, 0x41	; 65
   18bd6:	86 ec       	ldi	r24, 0xC6	; 198
   18bd8:	94 e1       	ldi	r25, 0x14	; 20
   18bda:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18bde:	86 ec       	ldi	r24, 0xC6	; 198
   18be0:	94 e1       	ldi	r25, 0x14	; 20
   18be2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18be6:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   18bea:	6c e7       	ldi	r22, 0x7C	; 124
   18bec:	74 e1       	ldi	r23, 0x14	; 20
   18bee:	8d ea       	ldi	r24, 0xAD	; 173
   18bf0:	9c e0       	ldi	r25, 0x0C	; 12
   18bf2:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18bf6:	e0 91 98 14 	lds	r30, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18bfa:	f0 e0       	ldi	r31, 0x00	; 0
   18bfc:	ee 56       	subi	r30, 0x6E	; 110
   18bfe:	fb 4e       	sbci	r31, 0xEB	; 235
   18c00:	10 82       	st	Z, r1
   18c02:	0e 94 ed 86 	call	0x10dda	; 0x10dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   18c06:	91 db       	rcall	.-2270   	; 0x1832a <_Z15Stop_Irrigationv>
   18c08:	64 e0       	ldi	r22, 0x04	; 4
   18c0a:	80 e0       	ldi	r24, 0x00	; 0
   18c0c:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18c10:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18c14:	81 30       	cpi	r24, 0x01	; 1
   18c16:	71 f5       	brne	.+92     	; 0x18c74 <_Z16Start_Irrigationv+0x1d2>
   18c18:	63 e0       	ldi	r22, 0x03	; 3
   18c1a:	71 e4       	ldi	r23, 0x41	; 65
   18c1c:	86 ec       	ldi	r24, 0xC6	; 198
   18c1e:	94 e1       	ldi	r25, 0x14	; 20
   18c20:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c24:	86 ec       	ldi	r24, 0xC6	; 198
   18c26:	94 e1       	ldi	r25, 0x14	; 20
   18c28:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18c2c:	23 c0       	rjmp	.+70     	; 0x18c74 <_Z16Start_Irrigationv+0x1d2>
   18c2e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18c32:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18c36:	84 60       	ori	r24, 0x04	; 4
   18c38:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18c3c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18c40:	81 e0       	ldi	r24, 0x01	; 1
   18c42:	08 95       	ret
   18c44:	72 db       	rcall	.-2332   	; 0x1832a <_Z15Stop_Irrigationv>
   18c46:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18c4a:	81 30       	cpi	r24, 0x01	; 1
   18c4c:	51 f4       	brne	.+20     	; 0x18c62 <_Z16Start_Irrigationv+0x1c0>
   18c4e:	6c ed       	ldi	r22, 0xDC	; 220
   18c50:	70 e4       	ldi	r23, 0x40	; 64
   18c52:	86 ec       	ldi	r24, 0xC6	; 198
   18c54:	94 e1       	ldi	r25, 0x14	; 20
   18c56:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c5a:	86 ec       	ldi	r24, 0xC6	; 198
   18c5c:	94 e1       	ldi	r25, 0x14	; 20
   18c5e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18c62:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18c66:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18c6a:	84 60       	ori	r24, 0x04	; 4
   18c6c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18c70:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18c74:	80 e0       	ldi	r24, 0x00	; 0
   18c76:	08 95       	ret

00018c78 <_Z13Run_Operationv>:
   18c78:	0f 93       	push	r16
   18c7a:	1f 93       	push	r17
   18c7c:	cf 93       	push	r28
   18c7e:	df 93       	push	r29
   18c80:	1f 92       	push	r1
   18c82:	1f 92       	push	r1
   18c84:	cd b7       	in	r28, 0x3d	; 61
   18c86:	de b7       	in	r29, 0x3e	; 62
   18c88:	80 91 e5 0c 	lds	r24, 0x0CE5	; 0x800ce5 <_gStart_Monitoring_Three_Phase>
   18c8c:	86 34       	cpi	r24, 0x46	; 70
   18c8e:	08 f4       	brcc	.+2      	; 0x18c92 <_Z13Run_Operationv+0x1a>
   18c90:	f8 c2       	rjmp	.+1520   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18c92:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   18c96:	82 30       	cpi	r24, 0x02	; 2
   18c98:	61 f0       	breq	.+24     	; 0x18cb2 <_Z13Run_Operationv+0x3a>
   18c9a:	20 f4       	brcc	.+8      	; 0x18ca4 <_Z13Run_Operationv+0x2c>
   18c9c:	81 30       	cpi	r24, 0x01	; 1
   18c9e:	09 f4       	brne	.+2      	; 0x18ca2 <_Z13Run_Operationv+0x2a>
   18ca0:	42 c0       	rjmp	.+132    	; 0x18d26 <_Z13Run_Operationv+0xae>
   18ca2:	ef c2       	rjmp	.+1502   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18ca4:	83 30       	cpi	r24, 0x03	; 3
   18ca6:	09 f4       	brne	.+2      	; 0x18caa <_Z13Run_Operationv+0x32>
   18ca8:	d5 c0       	rjmp	.+426    	; 0x18e54 <_Z13Run_Operationv+0x1dc>
   18caa:	85 30       	cpi	r24, 0x05	; 5
   18cac:	09 f4       	brne	.+2      	; 0x18cb0 <_Z13Run_Operationv+0x38>
   18cae:	c5 c2       	rjmp	.+1418   	; 0x1923a <_Z13Run_Operationv+0x5c2>
   18cb0:	e8 c2       	rjmp	.+1488   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18cb2:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18cb6:	81 30       	cpi	r24, 0x01	; 1
   18cb8:	19 f0       	breq	.+6      	; 0x18cc0 <_Z13Run_Operationv+0x48>
   18cba:	84 30       	cpi	r24, 0x04	; 4
   18cbc:	09 f0       	breq	.+2      	; 0x18cc0 <_Z13Run_Operationv+0x48>
   18cbe:	e1 c2       	rjmp	.+1474   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18cc0:	0e 94 aa 54 	call	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   18cc4:	80 91 a3 14 	lds	r24, 0x14A3	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18cc8:	90 91 a4 14 	lds	r25, 0x14A4	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18ccc:	89 2b       	or	r24, r25
   18cce:	09 f0       	breq	.+2      	; 0x18cd2 <_Z13Run_Operationv+0x5a>
   18cd0:	d8 c2       	rjmp	.+1456   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18cd2:	2b db       	rcall	.-2474   	; 0x1832a <_Z15Stop_Irrigationv>
   18cd4:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18cd8:	88 23       	and	r24, r24
   18cda:	49 f0       	breq	.+18     	; 0x18cee <_Z13Run_Operationv+0x76>
   18cdc:	83 e0       	ldi	r24, 0x03	; 3
   18cde:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18ce2:	91 30       	cpi	r25, 0x01	; 1
   18ce4:	09 f0       	breq	.+2      	; 0x18ce8 <_Z13Run_Operationv+0x70>
   18ce6:	cd c2       	rjmp	.+1434   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18ce8:	6e ef       	ldi	r22, 0xFE	; 254
   18cea:	74 e4       	ldi	r23, 0x44	; 68
   18cec:	0e c0       	rjmp	.+28     	; 0x18d0a <_Z13Run_Operationv+0x92>
   18cee:	84 e0       	ldi	r24, 0x04	; 4
   18cf0:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18cf4:	28 e5       	ldi	r18, 0x58	; 88
   18cf6:	32 e0       	ldi	r19, 0x02	; 2
   18cf8:	30 93 a4 14 	sts	0x14A4, r19	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18cfc:	20 93 a3 14 	sts	0x14A3, r18	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18d00:	91 30       	cpi	r25, 0x01	; 1
   18d02:	09 f0       	breq	.+2      	; 0x18d06 <_Z13Run_Operationv+0x8e>
   18d04:	be c2       	rjmp	.+1404   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18d06:	66 ed       	ldi	r22, 0xD6	; 214
   18d08:	74 e4       	ldi	r23, 0x44	; 68
   18d0a:	86 ec       	ldi	r24, 0xC6	; 198
   18d0c:	94 e1       	ldi	r25, 0x14	; 20
   18d0e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d12:	86 ec       	ldi	r24, 0xC6	; 198
   18d14:	94 e1       	ldi	r25, 0x14	; 20
   18d16:	0f 90       	pop	r0
   18d18:	0f 90       	pop	r0
   18d1a:	df 91       	pop	r29
   18d1c:	cf 91       	pop	r28
   18d1e:	1f 91       	pop	r17
   18d20:	0f 91       	pop	r16
   18d22:	0c 94 bb d3 	jmp	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18d26:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18d2a:	83 30       	cpi	r24, 0x03	; 3
   18d2c:	09 f4       	brne	.+2      	; 0x18d30 <_Z13Run_Operationv+0xb8>
   18d2e:	48 c0       	rjmp	.+144    	; 0x18dc0 <_Z13Run_Operationv+0x148>
   18d30:	20 f4       	brcc	.+8      	; 0x18d3a <_Z13Run_Operationv+0xc2>
   18d32:	81 30       	cpi	r24, 0x01	; 1
   18d34:	08 f4       	brcc	.+2      	; 0x18d38 <_Z13Run_Operationv+0xc0>
   18d36:	a5 c2       	rjmp	.+1354   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18d38:	03 c0       	rjmp	.+6      	; 0x18d40 <_Z13Run_Operationv+0xc8>
   18d3a:	84 30       	cpi	r24, 0x04	; 4
   18d3c:	09 f0       	breq	.+2      	; 0x18d40 <_Z13Run_Operationv+0xc8>
   18d3e:	a1 c2       	rjmp	.+1346   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18d40:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   18d44:	81 11       	cpse	r24, r1
   18d46:	9d c2       	rjmp	.+1338   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18d48:	0e 94 aa 54 	call	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   18d4c:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18d50:	88 23       	and	r24, r24
   18d52:	59 f1       	breq	.+86     	; 0x18daa <_Z13Run_Operationv+0x132>
   18d54:	80 91 a3 14 	lds	r24, 0x14A3	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18d58:	90 91 a4 14 	lds	r25, 0x14A4	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18d5c:	89 2b       	or	r24, r25
   18d5e:	09 f0       	breq	.+2      	; 0x18d62 <_Z13Run_Operationv+0xea>
   18d60:	90 c2       	rjmp	.+1312   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18d62:	e3 da       	rcall	.-2618   	; 0x1832a <_Z15Stop_Irrigationv>
   18d64:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18d68:	88 23       	and	r24, r24
   18d6a:	49 f0       	breq	.+18     	; 0x18d7e <_Z13Run_Operationv+0x106>
   18d6c:	83 e0       	ldi	r24, 0x03	; 3
   18d6e:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18d72:	91 30       	cpi	r25, 0x01	; 1
   18d74:	09 f0       	breq	.+2      	; 0x18d78 <_Z13Run_Operationv+0x100>
   18d76:	85 c2       	rjmp	.+1290   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18d78:	64 eb       	ldi	r22, 0xB4	; 180
   18d7a:	74 e4       	ldi	r23, 0x44	; 68
   18d7c:	c6 cf       	rjmp	.-116    	; 0x18d0a <_Z13Run_Operationv+0x92>
   18d7e:	84 e0       	ldi	r24, 0x04	; 4
   18d80:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18d84:	91 30       	cpi	r25, 0x01	; 1
   18d86:	51 f4       	brne	.+20     	; 0x18d9c <_Z13Run_Operationv+0x124>
   18d88:	69 e8       	ldi	r22, 0x89	; 137
   18d8a:	74 e4       	ldi	r23, 0x44	; 68
   18d8c:	86 ec       	ldi	r24, 0xC6	; 198
   18d8e:	94 e1       	ldi	r25, 0x14	; 20
   18d90:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d94:	86 ec       	ldi	r24, 0xC6	; 198
   18d96:	94 e1       	ldi	r25, 0x14	; 20
   18d98:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18d9c:	88 e5       	ldi	r24, 0x58	; 88
   18d9e:	92 e0       	ldi	r25, 0x02	; 2
   18da0:	90 93 a4 14 	sts	0x14A4, r25	; 0x8014a4 <_sRuble_Parameters+0xf6>
   18da4:	80 93 a3 14 	sts	0x14A3, r24	; 0x8014a3 <_sRuble_Parameters+0xf5>
   18da8:	6c c2       	rjmp	.+1240   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18daa:	83 e0       	ldi	r24, 0x03	; 3
   18dac:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18db0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18db4:	81 30       	cpi	r24, 0x01	; 1
   18db6:	09 f0       	breq	.+2      	; 0x18dba <_Z13Run_Operationv+0x142>
   18db8:	64 c2       	rjmp	.+1224   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18dba:	68 e6       	ldi	r22, 0x68	; 104
   18dbc:	74 e4       	ldi	r23, 0x44	; 68
   18dbe:	a5 cf       	rjmp	.-182    	; 0x18d0a <_Z13Run_Operationv+0x92>
   18dc0:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   18dc4:	88 23       	and	r24, r24
   18dc6:	a1 f0       	breq	.+40     	; 0x18df0 <_Z13Run_Operationv+0x178>
   18dc8:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18dcc:	81 30       	cpi	r24, 0x01	; 1
   18dce:	51 f4       	brne	.+20     	; 0x18de4 <_Z13Run_Operationv+0x16c>
   18dd0:	69 e3       	ldi	r22, 0x39	; 57
   18dd2:	74 e4       	ldi	r23, 0x44	; 68
   18dd4:	86 ec       	ldi	r24, 0xC6	; 198
   18dd6:	94 e1       	ldi	r25, 0x14	; 20
   18dd8:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ddc:	86 ec       	ldi	r24, 0xC6	; 198
   18dde:	94 e1       	ldi	r25, 0x14	; 20
   18de0:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18de4:	a2 da       	rcall	.-2748   	; 0x1832a <_Z15Stop_Irrigationv>
   18de6:	81 11       	cpse	r24, r1
   18de8:	03 c0       	rjmp	.+6      	; 0x18df0 <_Z13Run_Operationv+0x178>
   18dea:	84 e0       	ldi	r24, 0x04	; 4
   18dec:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18df0:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18df4:	81 11       	cpse	r24, r1
   18df6:	04 c0       	rjmp	.+8      	; 0x18e00 <_Z13Run_Operationv+0x188>
   18df8:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18dfc:	88 23       	and	r24, r24
   18dfe:	a1 f0       	breq	.+40     	; 0x18e28 <_Z13Run_Operationv+0x1b0>
   18e00:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18e04:	81 30       	cpi	r24, 0x01	; 1
   18e06:	51 f4       	brne	.+20     	; 0x18e1c <_Z13Run_Operationv+0x1a4>
   18e08:	6e e1       	ldi	r22, 0x1E	; 30
   18e0a:	74 e4       	ldi	r23, 0x44	; 68
   18e0c:	86 ec       	ldi	r24, 0xC6	; 198
   18e0e:	94 e1       	ldi	r25, 0x14	; 20
   18e10:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e14:	86 ec       	ldi	r24, 0xC6	; 198
   18e16:	94 e1       	ldi	r25, 0x14	; 20
   18e18:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18e1c:	86 da       	rcall	.-2804   	; 0x1832a <_Z15Stop_Irrigationv>
   18e1e:	81 11       	cpse	r24, r1
   18e20:	03 c0       	rjmp	.+6      	; 0x18e28 <_Z13Run_Operationv+0x1b0>
   18e22:	84 e0       	ldi	r24, 0x04	; 4
   18e24:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18e28:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   18e2c:	88 23       	and	r24, r24
   18e2e:	09 f4       	brne	.+2      	; 0x18e32 <_Z13Run_Operationv+0x1ba>
   18e30:	28 c2       	rjmp	.+1104   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18e32:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18e36:	81 30       	cpi	r24, 0x01	; 1
   18e38:	51 f4       	brne	.+20     	; 0x18e4e <_Z13Run_Operationv+0x1d6>
   18e3a:	65 ef       	ldi	r22, 0xF5	; 245
   18e3c:	73 e4       	ldi	r23, 0x43	; 67
   18e3e:	86 ec       	ldi	r24, 0xC6	; 198
   18e40:	94 e1       	ldi	r25, 0x14	; 20
   18e42:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e46:	86 ec       	ldi	r24, 0xC6	; 198
   18e48:	94 e1       	ldi	r25, 0x14	; 20
   18e4a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18e4e:	6d da       	rcall	.-2854   	; 0x1832a <_Z15Stop_Irrigationv>
   18e50:	84 e0       	ldi	r24, 0x04	; 4
   18e52:	55 c0       	rjmp	.+170    	; 0x18efe <_Z13Run_Operationv+0x286>
   18e54:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   18e58:	83 30       	cpi	r24, 0x03	; 3
   18e5a:	09 f4       	brne	.+2      	; 0x18e5e <_Z13Run_Operationv+0x1e6>
   18e5c:	76 c0       	rjmp	.+236    	; 0x18f4a <_Z13Run_Operationv+0x2d2>
   18e5e:	20 f4       	brcc	.+8      	; 0x18e68 <_Z13Run_Operationv+0x1f0>
   18e60:	81 30       	cpi	r24, 0x01	; 1
   18e62:	08 f4       	brcc	.+2      	; 0x18e66 <_Z13Run_Operationv+0x1ee>
   18e64:	0e c2       	rjmp	.+1052   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18e66:	03 c0       	rjmp	.+6      	; 0x18e6e <_Z13Run_Operationv+0x1f6>
   18e68:	84 30       	cpi	r24, 0x04	; 4
   18e6a:	09 f0       	breq	.+2      	; 0x18e6e <_Z13Run_Operationv+0x1f6>
   18e6c:	0a c2       	rjmp	.+1044   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18e6e:	80 91 cc 13 	lds	r24, 0x13CC	; 0x8013cc <_sRuble_Parameters+0x1e>
   18e72:	90 91 cd 13 	lds	r25, 0x13CD	; 0x8013cd <_sRuble_Parameters+0x1f>
   18e76:	89 2b       	or	r24, r25
   18e78:	09 f0       	breq	.+2      	; 0x18e7c <_Z13Run_Operationv+0x204>
   18e7a:	03 c2       	rjmp	.+1030   	; 0x19282 <_Z13Run_Operationv+0x60a>
   18e7c:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   18e80:	81 30       	cpi	r24, 0x01	; 1
   18e82:	b1 f4       	brne	.+44     	; 0x18eb0 <_Z13Run_Operationv+0x238>
   18e84:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   18e88:	81 30       	cpi	r24, 0x01	; 1
   18e8a:	91 f4       	brne	.+36     	; 0x18eb0 <_Z13Run_Operationv+0x238>
   18e8c:	80 ef       	ldi	r24, 0xF0	; 240
   18e8e:	90 e0       	ldi	r25, 0x00	; 0
   18e90:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18e94:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18e98:	65 e6       	ldi	r22, 0x65	; 101
   18e9a:	74 e1       	ldi	r23, 0x14	; 20
   18e9c:	86 e9       	ldi	r24, 0x96	; 150
   18e9e:	9c e0       	ldi	r25, 0x0C	; 12
   18ea0:	0f 90       	pop	r0
   18ea2:	0f 90       	pop	r0
   18ea4:	df 91       	pop	r29
   18ea6:	cf 91       	pop	r28
   18ea8:	1f 91       	pop	r17
   18eaa:	0f 91       	pop	r16
   18eac:	0c 94 74 86 	jmp	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18eb0:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18eb4:	81 11       	cpse	r24, r1
   18eb6:	04 c0       	rjmp	.+8      	; 0x18ec0 <_Z13Run_Operationv+0x248>
   18eb8:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18ebc:	88 23       	and	r24, r24
   18ebe:	39 f0       	breq	.+14     	; 0x18ece <_Z13Run_Operationv+0x256>
   18ec0:	8c e3       	ldi	r24, 0x3C	; 60
   18ec2:	90 e0       	ldi	r25, 0x00	; 0
   18ec4:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   18ec8:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   18ecc:	da c1       	rjmp	.+948    	; 0x19282 <_Z13Run_Operationv+0x60a>
   18ece:	10 92 e4 0d 	sts	0x0DE4, r1	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18ed2:	10 92 78 14 	sts	0x1478, r1	; 0x801478 <_sRuble_Parameters+0xca>
   18ed6:	0e 94 aa 54 	call	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   18eda:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18ede:	88 23       	and	r24, r24
   18ee0:	69 f0       	breq	.+26     	; 0x18efc <_Z13Run_Operationv+0x284>
   18ee2:	23 da       	rcall	.-3002   	; 0x1832a <_Z15Stop_Irrigationv>
   18ee4:	88 23       	and	r24, r24
   18ee6:	71 f0       	breq	.+28     	; 0x18f04 <_Z13Run_Operationv+0x28c>
   18ee8:	63 ed       	ldi	r22, 0xD3	; 211
   18eea:	73 e4       	ldi	r23, 0x43	; 67
   18eec:	86 ec       	ldi	r24, 0xC6	; 198
   18eee:	94 e1       	ldi	r25, 0x14	; 20
   18ef0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ef4:	86 ec       	ldi	r24, 0xC6	; 198
   18ef6:	94 e1       	ldi	r25, 0x14	; 20
   18ef8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18efc:	83 e0       	ldi	r24, 0x03	; 3
   18efe:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18f02:	bf c1       	rjmp	.+894    	; 0x19282 <_Z13Run_Operationv+0x60a>
   18f04:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18f08:	81 30       	cpi	r24, 0x01	; 1
   18f0a:	51 f4       	brne	.+20     	; 0x18f20 <_Z13Run_Operationv+0x2a8>
   18f0c:	60 e9       	ldi	r22, 0x90	; 144
   18f0e:	73 e4       	ldi	r23, 0x43	; 67
   18f10:	86 ec       	ldi	r24, 0xC6	; 198
   18f12:	94 e1       	ldi	r25, 0x14	; 20
   18f14:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18f18:	86 ec       	ldi	r24, 0xC6	; 198
   18f1a:	94 e1       	ldi	r25, 0x14	; 20
   18f1c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18f20:	83 e0       	ldi	r24, 0x03	; 3
   18f22:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18f26:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   18f2a:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   18f2e:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   18f32:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   18f36:	92 60       	ori	r25, 0x02	; 2
   18f38:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   18f3c:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   18f40:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   18f44:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   18f48:	9c c1       	rjmp	.+824    	; 0x19282 <_Z13Run_Operationv+0x60a>
   18f4a:	80 91 e4 0d 	lds	r24, 0x0DE4	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18f4e:	8f 5f       	subi	r24, 0xFF	; 255
   18f50:	8b 3a       	cpi	r24, 0xAB	; 171
   18f52:	18 f4       	brcc	.+6      	; 0x18f5a <_Z13Run_Operationv+0x2e2>
   18f54:	80 93 e4 0d 	sts	0x0DE4, r24	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18f58:	06 c0       	rjmp	.+12     	; 0x18f66 <_Z13Run_Operationv+0x2ee>
   18f5a:	10 92 e4 0d 	sts	0x0DE4, r1	; 0x800de4 <_ZZ13Run_OperationvE12eeprom_timer>
   18f5e:	88 e9       	ldi	r24, 0x98	; 152
   18f60:	9c e0       	ldi	r25, 0x0C	; 12
   18f62:	0e 94 c1 86 	call	0x10d82	; 0x10d82 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.39>
   18f66:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   18f6a:	81 11       	cpse	r24, r1
   18f6c:	95 c0       	rjmp	.+298    	; 0x19098 <_Z13Run_Operationv+0x420>
   18f6e:	00 91 c6 13 	lds	r16, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   18f72:	10 91 c7 13 	lds	r17, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   18f76:	c8 01       	movw	r24, r16
   18f78:	88 60       	ori	r24, 0x08	; 8
   18f7a:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   18f7e:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   18f82:	88 e9       	ldi	r24, 0x98	; 152
   18f84:	9c e0       	ldi	r25, 0x0C	; 12
   18f86:	0e 94 d9 f0 	call	0x1e1b2	; 0x1e1b2 <eeprom_read_byte>
   18f8a:	89 83       	std	Y+1, r24	; 0x01
   18f8c:	89 e9       	ldi	r24, 0x99	; 153
   18f8e:	9c e0       	ldi	r25, 0x0C	; 12
   18f90:	0e 94 d9 f0 	call	0x1e1b2	; 0x1e1b2 <eeprom_read_byte>
   18f94:	8a 83       	std	Y+2, r24	; 0x02
   18f96:	89 81       	ldd	r24, Y+1	; 0x01
   18f98:	9a 81       	ldd	r25, Y+2	; 0x02
   18f9a:	90 93 c5 13 	sts	0x13C5, r25	; 0x8013c5 <_sRuble_Parameters+0x17>
   18f9e:	80 93 c4 13 	sts	0x13C4, r24	; 0x8013c4 <_sRuble_Parameters+0x16>
   18fa2:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   18fa6:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   18faa:	88 e7       	ldi	r24, 0x78	; 120
   18fac:	80 93 78 14 	sts	0x1478, r24	; 0x801478 <_sRuble_Parameters+0xca>
   18fb0:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   18fb4:	81 11       	cpse	r24, r1
   18fb6:	62 c0       	rjmp	.+196    	; 0x1907c <_Z13Run_Operationv+0x404>
   18fb8:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   18fbc:	81 11       	cpse	r24, r1
   18fbe:	5e c0       	rjmp	.+188    	; 0x1907c <_Z13Run_Operationv+0x404>
   18fc0:	80 91 65 14 	lds	r24, 0x1465	; 0x801465 <_sRuble_Parameters+0xb7>
   18fc4:	80 93 1e 14 	sts	0x141E, r24	; 0x80141e <_sRuble_Parameters+0x70>
   18fc8:	6e e1       	ldi	r22, 0x1E	; 30
   18fca:	74 e1       	ldi	r23, 0x14	; 20
   18fcc:	86 e9       	ldi	r24, 0x96	; 150
   18fce:	9c e0       	ldi	r25, 0x0C	; 12
   18fd0:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18fd4:	66 dd       	rcall	.-1332   	; 0x18aa2 <_Z16Start_Irrigationv>
   18fd6:	81 11       	cpse	r24, r1
   18fd8:	2c c0       	rjmp	.+88     	; 0x19032 <_Z13Run_Operationv+0x3ba>
   18fda:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   18fde:	81 30       	cpi	r24, 0x01	; 1
   18fe0:	51 f4       	brne	.+20     	; 0x18ff6 <_Z13Run_Operationv+0x37e>
   18fe2:	68 e4       	ldi	r22, 0x48	; 72
   18fe4:	73 e4       	ldi	r23, 0x43	; 67
   18fe6:	86 ec       	ldi	r24, 0xC6	; 198
   18fe8:	94 e1       	ldi	r25, 0x14	; 20
   18fea:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   18fee:	86 ec       	ldi	r24, 0xC6	; 198
   18ff0:	94 e1       	ldi	r25, 0x14	; 20
   18ff2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   18ff6:	81 e0       	ldi	r24, 0x01	; 1
   18ff8:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   18ffc:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19000:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19004:	84 60       	ori	r24, 0x04	; 4
   19006:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1900a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1900e:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19012:	81 30       	cpi	r24, 0x01	; 1
   19014:	39 f4       	brne	.+14     	; 0x19024 <_Z13Run_Operationv+0x3ac>
   19016:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   1901a:	81 30       	cpi	r24, 0x01	; 1
   1901c:	19 f4       	brne	.+6      	; 0x19024 <_Z13Run_Operationv+0x3ac>
   1901e:	80 ef       	ldi	r24, 0xF0	; 240
   19020:	90 e0       	ldi	r25, 0x00	; 0
   19022:	02 c0       	rjmp	.+4      	; 0x19028 <_Z13Run_Operationv+0x3b0>
   19024:	88 e5       	ldi	r24, 0x58	; 88
   19026:	92 e0       	ldi	r25, 0x02	; 2
   19028:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   1902c:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   19030:	33 c0       	rjmp	.+102    	; 0x19098 <_Z13Run_Operationv+0x420>
   19032:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19036:	81 11       	cpse	r24, r1
   19038:	2f c0       	rjmp	.+94     	; 0x19098 <_Z13Run_Operationv+0x420>
   1903a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1903e:	81 30       	cpi	r24, 0x01	; 1
   19040:	51 f4       	brne	.+20     	; 0x19056 <_Z13Run_Operationv+0x3de>
   19042:	60 e0       	ldi	r22, 0x00	; 0
   19044:	73 e4       	ldi	r23, 0x43	; 67
   19046:	86 ec       	ldi	r24, 0xC6	; 198
   19048:	94 e1       	ldi	r25, 0x14	; 20
   1904a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1904e:	86 ec       	ldi	r24, 0xC6	; 198
   19050:	94 e1       	ldi	r25, 0x14	; 20
   19052:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19056:	88 e5       	ldi	r24, 0x58	; 88
   19058:	92 e0       	ldi	r25, 0x02	; 2
   1905a:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   1905e:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   19062:	81 e0       	ldi	r24, 0x01	; 1
   19064:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   19068:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1906c:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19070:	84 60       	ori	r24, 0x04	; 4
   19072:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19076:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1907a:	0e c0       	rjmp	.+28     	; 0x19098 <_Z13Run_Operationv+0x420>
   1907c:	88 e5       	ldi	r24, 0x58	; 88
   1907e:	92 e0       	ldi	r25, 0x02	; 2
   19080:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   19084:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   19088:	81 e0       	ldi	r24, 0x01	; 1
   1908a:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   1908e:	0c 60       	ori	r16, 0x0C	; 12
   19090:	10 93 c7 13 	sts	0x13C7, r17	; 0x8013c7 <_sRuble_Parameters+0x19>
   19094:	00 93 c6 13 	sts	0x13C6, r16	; 0x8013c6 <_sRuble_Parameters+0x18>
   19098:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   1909c:	90 91 c5 13 	lds	r25, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   190a0:	89 2b       	or	r24, r25
   190a2:	a9 f0       	breq	.+42     	; 0x190ce <_Z13Run_Operationv+0x456>
   190a4:	65 ee       	ldi	r22, 0xE5	; 229
   190a6:	72 e4       	ldi	r23, 0x42	; 66
   190a8:	86 ec       	ldi	r24, 0xC6	; 198
   190aa:	94 e1       	ldi	r25, 0x14	; 20
   190ac:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   190b0:	60 91 c4 13 	lds	r22, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   190b4:	70 91 c5 13 	lds	r23, 0x13C5	; 0x8013c5 <_sRuble_Parameters+0x17>
   190b8:	4a e0       	ldi	r20, 0x0A	; 10
   190ba:	50 e0       	ldi	r21, 0x00	; 0
   190bc:	86 ec       	ldi	r24, 0xC6	; 198
   190be:	94 e1       	ldi	r25, 0x14	; 20
   190c0:	0e 94 dd d5 	call	0x1abba	; 0x1abba <_ZN5Print7printlnEji>
   190c4:	86 ec       	ldi	r24, 0xC6	; 198
   190c6:	94 e1       	ldi	r25, 0x14	; 20
   190c8:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   190cc:	13 c0       	rjmp	.+38     	; 0x190f4 <_Z13Run_Operationv+0x47c>
   190ce:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   190d2:	81 30       	cpi	r24, 0x01	; 1
   190d4:	51 f4       	brne	.+20     	; 0x190ea <_Z13Run_Operationv+0x472>
   190d6:	68 ec       	ldi	r22, 0xC8	; 200
   190d8:	72 e4       	ldi	r23, 0x42	; 66
   190da:	86 ec       	ldi	r24, 0xC6	; 198
   190dc:	94 e1       	ldi	r25, 0x14	; 20
   190de:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   190e2:	86 ec       	ldi	r24, 0xC6	; 198
   190e4:	94 e1       	ldi	r25, 0x14	; 20
   190e6:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   190ea:	1f d9       	rcall	.-3522   	; 0x1832a <_Z15Stop_Irrigationv>
   190ec:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   190f0:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   190f4:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   190f8:	81 11       	cpse	r24, r1
   190fa:	09 c0       	rjmp	.+18     	; 0x1910e <_Z13Run_Operationv+0x496>
   190fc:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   19100:	81 11       	cpse	r24, r1
   19102:	11 c0       	rjmp	.+34     	; 0x19126 <_Z13Run_Operationv+0x4ae>
   19104:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   19108:	81 11       	cpse	r24, r1
   1910a:	0d c0       	rjmp	.+26     	; 0x19126 <_Z13Run_Operationv+0x4ae>
   1910c:	8a c0       	rjmp	.+276    	; 0x19222 <_Z13Run_Operationv+0x5aa>
   1910e:	98 2f       	mov	r25, r24
   19110:	97 7f       	andi	r25, 0xF7	; 247
   19112:	91 30       	cpi	r25, 0x01	; 1
   19114:	89 f0       	breq	.+34     	; 0x19138 <_Z13Run_Operationv+0x4c0>
   19116:	98 2f       	mov	r25, r24
   19118:	9d 7f       	andi	r25, 0xFD	; 253
   1911a:	94 30       	cpi	r25, 0x04	; 4
   1911c:	69 f0       	breq	.+26     	; 0x19138 <_Z13Run_Operationv+0x4c0>
   1911e:	8c 30       	cpi	r24, 0x0C	; 12
   19120:	59 f0       	breq	.+22     	; 0x19138 <_Z13Run_Operationv+0x4c0>
   19122:	8f 30       	cpi	r24, 0x0F	; 15
   19124:	49 f0       	breq	.+18     	; 0x19138 <_Z13Run_Operationv+0x4c0>
   19126:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   1912a:	81 11       	cpse	r24, r1
   1912c:	05 c0       	rjmp	.+10     	; 0x19138 <_Z13Run_Operationv+0x4c0>
   1912e:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   19132:	88 23       	and	r24, r24
   19134:	09 f4       	brne	.+2      	; 0x19138 <_Z13Run_Operationv+0x4c0>
   19136:	49 c0       	rjmp	.+146    	; 0x191ca <_Z13Run_Operationv+0x552>
   19138:	f8 d8       	rcall	.-3600   	; 0x1832a <_Z15Stop_Irrigationv>
   1913a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1913e:	81 30       	cpi	r24, 0x01	; 1
   19140:	51 f4       	brne	.+20     	; 0x19156 <_Z13Run_Operationv+0x4de>
   19142:	65 e9       	ldi	r22, 0x95	; 149
   19144:	72 e4       	ldi	r23, 0x42	; 66
   19146:	86 ec       	ldi	r24, 0xC6	; 198
   19148:	94 e1       	ldi	r25, 0x14	; 20
   1914a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1914e:	86 ec       	ldi	r24, 0xC6	; 198
   19150:	94 e1       	ldi	r25, 0x14	; 20
   19152:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19156:	90 91 39 0e 	lds	r25, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   1915a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1915e:	91 11       	cpse	r25, r1
   19160:	04 c0       	rjmp	.+8      	; 0x1916a <_Z13Run_Operationv+0x4f2>
   19162:	90 91 52 0e 	lds	r25, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   19166:	99 23       	and	r25, r25
   19168:	79 f0       	breq	.+30     	; 0x19188 <_Z13Run_Operationv+0x510>
   1916a:	81 30       	cpi	r24, 0x01	; 1
   1916c:	51 f4       	brne	.+20     	; 0x19182 <_Z13Run_Operationv+0x50a>
   1916e:	62 e6       	ldi	r22, 0x62	; 98
   19170:	72 e4       	ldi	r23, 0x42	; 66
   19172:	86 ec       	ldi	r24, 0xC6	; 198
   19174:	94 e1       	ldi	r25, 0x14	; 20
   19176:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1917a:	86 ec       	ldi	r24, 0xC6	; 198
   1917c:	94 e1       	ldi	r25, 0x14	; 20
   1917e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19182:	8c e3       	ldi	r24, 0x3C	; 60
   19184:	90 e0       	ldi	r25, 0x00	; 0
   19186:	19 c0       	rjmp	.+50     	; 0x191ba <_Z13Run_Operationv+0x542>
   19188:	81 30       	cpi	r24, 0x01	; 1
   1918a:	51 f4       	brne	.+20     	; 0x191a0 <_Z13Run_Operationv+0x528>
   1918c:	6f e2       	ldi	r22, 0x2F	; 47
   1918e:	72 e4       	ldi	r23, 0x42	; 66
   19190:	86 ec       	ldi	r24, 0xC6	; 198
   19192:	94 e1       	ldi	r25, 0x14	; 20
   19194:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19198:	86 ec       	ldi	r24, 0xC6	; 198
   1919a:	94 e1       	ldi	r25, 0x14	; 20
   1919c:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   191a0:	80 91 98 14 	lds	r24, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   191a4:	81 30       	cpi	r24, 0x01	; 1
   191a6:	39 f4       	brne	.+14     	; 0x191b6 <_Z13Run_Operationv+0x53e>
   191a8:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   191ac:	81 30       	cpi	r24, 0x01	; 1
   191ae:	19 f4       	brne	.+6      	; 0x191b6 <_Z13Run_Operationv+0x53e>
   191b0:	80 ef       	ldi	r24, 0xF0	; 240
   191b2:	90 e0       	ldi	r25, 0x00	; 0
   191b4:	02 c0       	rjmp	.+4      	; 0x191ba <_Z13Run_Operationv+0x542>
   191b6:	88 e5       	ldi	r24, 0x58	; 88
   191b8:	92 e0       	ldi	r25, 0x02	; 2
   191ba:	90 93 cd 13 	sts	0x13CD, r25	; 0x8013cd <_sRuble_Parameters+0x1f>
   191be:	80 93 cc 13 	sts	0x13CC, r24	; 0x8013cc <_sRuble_Parameters+0x1e>
   191c2:	81 e0       	ldi	r24, 0x01	; 1
   191c4:	80 93 d6 13 	sts	0x13D6, r24	; 0x8013d6 <_sRuble_Parameters+0x28>
   191c8:	2c c0       	rjmp	.+88     	; 0x19222 <_Z13Run_Operationv+0x5aa>
   191ca:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   191ce:	81 30       	cpi	r24, 0x01	; 1
   191d0:	51 f4       	brne	.+20     	; 0x191e6 <_Z13Run_Operationv+0x56e>
   191d2:	6c ef       	ldi	r22, 0xFC	; 252
   191d4:	71 e4       	ldi	r23, 0x41	; 65
   191d6:	86 ec       	ldi	r24, 0xC6	; 198
   191d8:	94 e1       	ldi	r25, 0x14	; 20
   191da:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   191de:	86 ec       	ldi	r24, 0xC6	; 198
   191e0:	94 e1       	ldi	r25, 0x14	; 20
   191e2:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   191e6:	a1 d8       	rcall	.-3774   	; 0x1832a <_Z15Stop_Irrigationv>
   191e8:	80 91 39 0e 	lds	r24, 0x0E39	; 0x800e39 <_sExtra_Plot+0x51>
   191ec:	88 23       	and	r24, r24
   191ee:	21 f0       	breq	.+8      	; 0x191f8 <_Z13Run_Operationv+0x580>
   191f0:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   191f4:	81 11       	cpse	r24, r1
   191f6:	04 c0       	rjmp	.+8      	; 0x19200 <_Z13Run_Operationv+0x588>
   191f8:	10 92 c5 13 	sts	0x13C5, r1	; 0x8013c5 <_sRuble_Parameters+0x17>
   191fc:	10 92 c4 13 	sts	0x13C4, r1	; 0x8013c4 <_sRuble_Parameters+0x16>
   19200:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19204:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19208:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1920c:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19210:	92 60       	ori	r25, 0x02	; 2
   19212:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19216:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1921a:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1921e:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19222:	80 91 74 14 	lds	r24, 0x1474	; 0x801474 <_sRuble_Parameters+0xc6>
   19226:	88 23       	and	r24, r24
   19228:	61 f1       	breq	.+88     	; 0x19282 <_Z13Run_Operationv+0x60a>
   1922a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1922e:	81 30       	cpi	r24, 0x01	; 1
   19230:	09 f0       	breq	.+2      	; 0x19234 <_Z13Run_Operationv+0x5bc>
   19232:	0d ce       	rjmp	.-998    	; 0x18e4e <_Z13Run_Operationv+0x1d6>
   19234:	62 ed       	ldi	r22, 0xD2	; 210
   19236:	71 e4       	ldi	r23, 0x41	; 65
   19238:	02 ce       	rjmp	.-1020   	; 0x18e3e <_Z13Run_Operationv+0x1c6>
   1923a:	80 91 d6 13 	lds	r24, 0x13D6	; 0x8013d6 <_sRuble_Parameters+0x28>
   1923e:	83 30       	cpi	r24, 0x03	; 3
   19240:	c1 f0       	breq	.+48     	; 0x19272 <_Z13Run_Operationv+0x5fa>
   19242:	18 f4       	brcc	.+6      	; 0x1924a <_Z13Run_Operationv+0x5d2>
   19244:	81 30       	cpi	r24, 0x01	; 1
   19246:	e8 f0       	brcs	.+58     	; 0x19282 <_Z13Run_Operationv+0x60a>
   19248:	02 c0       	rjmp	.+4      	; 0x1924e <_Z13Run_Operationv+0x5d6>
   1924a:	84 30       	cpi	r24, 0x04	; 4
   1924c:	d1 f4       	brne	.+52     	; 0x19282 <_Z13Run_Operationv+0x60a>
   1924e:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19252:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19256:	99 23       	and	r25, r25
   19258:	31 f0       	breq	.+12     	; 0x19266 <_Z13Run_Operationv+0x5ee>
   1925a:	81 30       	cpi	r24, 0x01	; 1
   1925c:	09 f0       	breq	.+2      	; 0x19260 <_Z13Run_Operationv+0x5e8>
   1925e:	4e ce       	rjmp	.-868    	; 0x18efc <_Z13Run_Operationv+0x284>
   19260:	6b ea       	ldi	r22, 0xAB	; 171
   19262:	71 e4       	ldi	r23, 0x41	; 65
   19264:	43 ce       	rjmp	.-890    	; 0x18eec <_Z13Run_Operationv+0x274>
   19266:	81 30       	cpi	r24, 0x01	; 1
   19268:	09 f0       	breq	.+2      	; 0x1926c <_Z13Run_Operationv+0x5f4>
   1926a:	48 ce       	rjmp	.-880    	; 0x18efc <_Z13Run_Operationv+0x284>
   1926c:	6e e8       	ldi	r22, 0x8E	; 142
   1926e:	71 e4       	ldi	r23, 0x41	; 65
   19270:	3d ce       	rjmp	.-902    	; 0x18eec <_Z13Run_Operationv+0x274>
   19272:	0f 90       	pop	r0
   19274:	0f 90       	pop	r0
   19276:	df 91       	pop	r29
   19278:	cf 91       	pop	r28
   1927a:	1f 91       	pop	r17
   1927c:	0f 91       	pop	r16
   1927e:	0c 94 aa 54 	jmp	0xa954	; 0xa954 <_Z20Schedules_Monitoringv>
   19282:	0f 90       	pop	r0
   19284:	0f 90       	pop	r0
   19286:	df 91       	pop	r29
   19288:	cf 91       	pop	r28
   1928a:	1f 91       	pop	r17
   1928c:	0f 91       	pop	r16
   1928e:	08 95       	ret

00019290 <_Z26Start_Extra_Plot_Operationh>:
   19290:	1f 93       	push	r17
   19292:	cf 93       	push	r28
   19294:	df 93       	push	r29
   19296:	c8 2f       	mov	r28, r24
   19298:	65 ef       	ldi	r22, 0xF5	; 245
   1929a:	7f e2       	ldi	r23, 0x2F	; 47
   1929c:	86 ec       	ldi	r24, 0xC6	; 198
   1929e:	94 e1       	ldi	r25, 0x14	; 20
   192a0:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   192a4:	4a e0       	ldi	r20, 0x0A	; 10
   192a6:	50 e0       	ldi	r21, 0x00	; 0
   192a8:	6c 2f       	mov	r22, r28
   192aa:	86 ec       	ldi	r24, 0xC6	; 198
   192ac:	94 e1       	ldi	r25, 0x14	; 20
   192ae:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   192b2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   192b6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   192ba:	84 60       	ori	r24, 0x04	; 4
   192bc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   192c0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   192c4:	1d ef       	ldi	r17, 0xFD	; 253
   192c6:	1c 0f       	add	r17, r28
   192c8:	12 30       	cpi	r17, 0x02	; 2
   192ca:	10 f4       	brcc	.+4      	; 0x192d0 <_Z26Start_Extra_Plot_Operationh+0x40>
   192cc:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   192d0:	6c 2f       	mov	r22, r28
   192d2:	81 e0       	ldi	r24, 0x01	; 1
   192d4:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   192d8:	d8 2f       	mov	r29, r24
   192da:	88 23       	and	r24, r24
   192dc:	09 f4       	brne	.+2      	; 0x192e0 <_Z26Start_Extra_Plot_Operationh+0x50>
   192de:	85 c0       	rjmp	.+266    	; 0x193ea <_Z26Start_Extra_Plot_Operationh+0x15a>
   192e0:	12 30       	cpi	r17, 0x02	; 2
   192e2:	08 f0       	brcs	.+2      	; 0x192e6 <_Z26Start_Extra_Plot_Operationh+0x56>
   192e4:	50 c0       	rjmp	.+160    	; 0x19386 <_Z26Start_Extra_Plot_Operationh+0xf6>
   192e6:	c4 30       	cpi	r28, 0x04	; 4
   192e8:	19 f0       	breq	.+6      	; 0x192f0 <_Z26Start_Extra_Plot_Operationh+0x60>
   192ea:	82 e0       	ldi	r24, 0x02	; 2
   192ec:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   192f0:	10 92 c9 13 	sts	0x13C9, r1	; 0x8013c9 <_sRuble_Parameters+0x1b>
   192f4:	10 92 c8 13 	sts	0x13C8, r1	; 0x8013c8 <_sRuble_Parameters+0x1a>
   192f8:	10 92 ac 13 	sts	0x13AC, r1	; 0x8013ac <_sPump_Parameter+0x8>
   192fc:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   19300:	81 11       	cpse	r24, r1
   19302:	17 c0       	rjmp	.+46     	; 0x19332 <_Z26Start_Extra_Plot_Operationh+0xa2>
   19304:	8a e0       	ldi	r24, 0x0A	; 10
   19306:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   1930a:	89 2b       	or	r24, r25
   1930c:	21 f0       	breq	.+8      	; 0x19316 <_Z26Start_Extra_Plot_Operationh+0x86>
   1930e:	60 e0       	ldi	r22, 0x00	; 0
   19310:	8a e0       	ldi	r24, 0x0A	; 10
   19312:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   19316:	80 e3       	ldi	r24, 0x30	; 48
   19318:	95 e7       	ldi	r25, 0x75	; 117
   1931a:	0e 94 a1 75 	call	0xeb42	; 0xeb42 <_Z8My_Delayj>
   1931e:	8b e0       	ldi	r24, 0x0B	; 11
   19320:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   19324:	89 2b       	or	r24, r25
   19326:	79 f1       	breq	.+94     	; 0x19386 <_Z26Start_Extra_Plot_Operationh+0xf6>
   19328:	60 e0       	ldi	r22, 0x00	; 0
   1932a:	8b e0       	ldi	r24, 0x0B	; 11
   1932c:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   19330:	2a c0       	rjmp	.+84     	; 0x19386 <_Z26Start_Extra_Plot_Operationh+0xf6>
   19332:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19336:	81 30       	cpi	r24, 0x01	; 1
   19338:	51 f4       	brne	.+20     	; 0x1934e <_Z26Start_Extra_Plot_Operationh+0xbe>
   1933a:	60 ed       	ldi	r22, 0xD0	; 208
   1933c:	7f e2       	ldi	r23, 0x2F	; 47
   1933e:	86 ec       	ldi	r24, 0xC6	; 198
   19340:	94 e1       	ldi	r25, 0x14	; 20
   19342:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19346:	86 ec       	ldi	r24, 0xC6	; 198
   19348:	94 e1       	ldi	r25, 0x14	; 20
   1934a:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1934e:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19352:	62 50       	subi	r22, 0x02	; 2
   19354:	82 e0       	ldi	r24, 0x02	; 2
   19356:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
   1935a:	88 23       	and	r24, r24
   1935c:	51 f0       	breq	.+20     	; 0x19372 <_Z26Start_Extra_Plot_Operationh+0xe2>
   1935e:	81 e0       	ldi	r24, 0x01	; 1
   19360:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   19364:	6c e7       	ldi	r22, 0x7C	; 124
   19366:	74 e1       	ldi	r23, 0x14	; 20
   19368:	8d ea       	ldi	r24, 0xAD	; 173
   1936a:	9c e0       	ldi	r25, 0x0C	; 12
   1936c:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19370:	0a c0       	rjmp	.+20     	; 0x19386 <_Z26Start_Extra_Plot_Operationh+0xf6>
   19372:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   19376:	6c e7       	ldi	r22, 0x7C	; 124
   19378:	74 e1       	ldi	r23, 0x14	; 20
   1937a:	8d ea       	ldi	r24, 0xAD	; 173
   1937c:	9c e0       	ldi	r25, 0x0C	; 12
   1937e:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19382:	d0 e0       	ldi	r29, 0x00	; 0
   19384:	40 c0       	rjmp	.+128    	; 0x19406 <_Z26Start_Extra_Plot_Operationh+0x176>
   19386:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1938a:	81 30       	cpi	r24, 0x01	; 1
   1938c:	51 f4       	brne	.+20     	; 0x193a2 <_Z26Start_Extra_Plot_Operationh+0x112>
   1938e:	62 ec       	ldi	r22, 0xC2	; 194
   19390:	7f e2       	ldi	r23, 0x2F	; 47
   19392:	86 ec       	ldi	r24, 0xC6	; 198
   19394:	94 e1       	ldi	r25, 0x14	; 20
   19396:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1939a:	86 ec       	ldi	r24, 0xC6	; 198
   1939c:	94 e1       	ldi	r25, 0x14	; 20
   1939e:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   193a2:	8b e1       	ldi	r24, 0x1B	; 27
   193a4:	c8 9f       	mul	r28, r24
   193a6:	f0 01       	movw	r30, r0
   193a8:	11 24       	eor	r1, r1
   193aa:	e8 51       	subi	r30, 0x18	; 24
   193ac:	f2 4f       	sbci	r31, 0xF2	; 242
   193ae:	81 e0       	ldi	r24, 0x01	; 1
   193b0:	80 83       	st	Z, r24
   193b2:	23 85       	ldd	r18, Z+11	; 0x0b
   193b4:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   193b8:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   193bc:	21 30       	cpi	r18, 0x01	; 1
   193be:	51 f4       	brne	.+20     	; 0x193d4 <_Z26Start_Extra_Plot_Operationh+0x144>
   193c0:	90 61       	ori	r25, 0x10	; 16
   193c2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   193c6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   193ca:	12 86       	std	Z+10, r1	; 0x0a
   193cc:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   193d0:	22 8f       	std	Z+26, r18	; 0x1a
   193d2:	19 c0       	rjmp	.+50     	; 0x19406 <_Z26Start_Extra_Plot_Operationh+0x176>
   193d4:	90 62       	ori	r25, 0x20	; 32
   193d6:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   193da:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   193de:	13 86       	std	Z+11, r1	; 0x0b
   193e0:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   193e4:	82 e0       	ldi	r24, 0x02	; 2
   193e6:	82 8f       	std	Z+26, r24	; 0x1a
   193e8:	0e c0       	rjmp	.+28     	; 0x19406 <_Z26Start_Extra_Plot_Operationh+0x176>
   193ea:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   193ee:	81 30       	cpi	r24, 0x01	; 1
   193f0:	51 f4       	brne	.+20     	; 0x19406 <_Z26Start_Extra_Plot_Operationh+0x176>
   193f2:	6b ea       	ldi	r22, 0xAB	; 171
   193f4:	7f e2       	ldi	r23, 0x2F	; 47
   193f6:	86 ec       	ldi	r24, 0xC6	; 198
   193f8:	94 e1       	ldi	r25, 0x14	; 20
   193fa:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   193fe:	86 ec       	ldi	r24, 0xC6	; 198
   19400:	94 e1       	ldi	r25, 0x14	; 20
   19402:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19406:	8d 2f       	mov	r24, r29
   19408:	df 91       	pop	r29
   1940a:	cf 91       	pop	r28
   1940c:	1f 91       	pop	r17
   1940e:	08 95       	ret

00019410 <_Z25Stop_Extra_Plot_Operationh>:
   19410:	0f 93       	push	r16
   19412:	1f 93       	push	r17
   19414:	cf 93       	push	r28
   19416:	df 93       	push	r29
   19418:	c8 2f       	mov	r28, r24
   1941a:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1941e:	81 30       	cpi	r24, 0x01	; 1
   19420:	51 f4       	brne	.+20     	; 0x19436 <_Z25Stop_Extra_Plot_Operationh+0x26>
   19422:	69 e9       	ldi	r22, 0x99	; 153
   19424:	7f e2       	ldi	r23, 0x2F	; 47
   19426:	86 ec       	ldi	r24, 0xC6	; 198
   19428:	94 e1       	ldi	r25, 0x14	; 20
   1942a:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1942e:	86 ec       	ldi	r24, 0xC6	; 198
   19430:	94 e1       	ldi	r25, 0x14	; 20
   19432:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19436:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1943a:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1943e:	84 60       	ori	r24, 0x04	; 4
   19440:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19444:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19448:	0c 2f       	mov	r16, r28
   1944a:	10 e0       	ldi	r17, 0x00	; 0
   1944c:	8b e1       	ldi	r24, 0x1B	; 27
   1944e:	c8 9f       	mul	r28, r24
   19450:	f0 01       	movw	r30, r0
   19452:	11 24       	eor	r1, r1
   19454:	e8 51       	subi	r30, 0x18	; 24
   19456:	f2 4f       	sbci	r31, 0xF2	; 242
   19458:	10 82       	st	Z, r1
   1945a:	8d ef       	ldi	r24, 0xFD	; 253
   1945c:	8c 0f       	add	r24, r28
   1945e:	82 30       	cpi	r24, 0x02	; 2
   19460:	20 f4       	brcc	.+8      	; 0x1946a <_Z25Stop_Extra_Plot_Operationh+0x5a>
   19462:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   19466:	93 30       	cpi	r25, 0x03	; 3
   19468:	a9 f4       	brne	.+42     	; 0x19494 <_Z25Stop_Extra_Plot_Operationh+0x84>
   1946a:	90 91 ac 13 	lds	r25, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   1946e:	99 23       	and	r25, r25
   19470:	11 f0       	breq	.+4      	; 0x19476 <_Z25Stop_Extra_Plot_Operationh+0x66>
   19472:	82 30       	cpi	r24, 0x02	; 2
   19474:	78 f0       	brcs	.+30     	; 0x19494 <_Z25Stop_Extra_Plot_Operationh+0x84>
   19476:	90 91 d5 13 	lds	r25, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   1947a:	93 30       	cpi	r25, 0x03	; 3
   1947c:	31 f4       	brne	.+12     	; 0x1948a <_Z25Stop_Extra_Plot_Operationh+0x7a>
   1947e:	90 91 1e 14 	lds	r25, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19482:	91 11       	cpse	r25, r1
   19484:	02 c0       	rjmp	.+4      	; 0x1948a <_Z25Stop_Extra_Plot_Operationh+0x7a>
   19486:	82 30       	cpi	r24, 0x02	; 2
   19488:	28 f0       	brcs	.+10     	; 0x19494 <_Z25Stop_Extra_Plot_Operationh+0x84>
   1948a:	80 91 70 14 	lds	r24, 0x1470	; 0x801470 <_sRuble_Parameters+0xc2>
   1948e:	81 30       	cpi	r24, 0x01	; 1
   19490:	09 f0       	breq	.+2      	; 0x19494 <_Z25Stop_Extra_Plot_Operationh+0x84>
   19492:	aa c0       	rjmp	.+340    	; 0x195e8 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   19494:	83 e0       	ldi	r24, 0x03	; 3
   19496:	0e 94 51 24 	call	0x48a2	; 0x48a2 <_Z22Hard_Coded_Flush_Valveh>
   1949a:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1949e:	81 11       	cpse	r24, r1
   194a0:	a3 c0       	rjmp	.+326    	; 0x195e8 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   194a2:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   194a6:	81 11       	cpse	r24, r1
   194a8:	14 c0       	rjmp	.+40     	; 0x194d2 <_Z25Stop_Extra_Plot_Operationh+0xc2>
   194aa:	8a e0       	ldi	r24, 0x0A	; 10
   194ac:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   194b0:	01 97       	sbiw	r24, 0x01	; 1
   194b2:	21 f0       	breq	.+8      	; 0x194bc <_Z25Stop_Extra_Plot_Operationh+0xac>
   194b4:	61 e0       	ldi	r22, 0x01	; 1
   194b6:	8a e0       	ldi	r24, 0x0A	; 10
   194b8:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   194bc:	8b e0       	ldi	r24, 0x0B	; 11
   194be:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   194c2:	01 97       	sbiw	r24, 0x01	; 1
   194c4:	09 f4       	brne	.+2      	; 0x194c8 <_Z25Stop_Extra_Plot_Operationh+0xb8>
   194c6:	90 c0       	rjmp	.+288    	; 0x195e8 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   194c8:	61 e0       	ldi	r22, 0x01	; 1
   194ca:	8b e0       	ldi	r24, 0x0B	; 11
   194cc:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   194d0:	8b c0       	rjmp	.+278    	; 0x195e8 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   194d2:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   194d6:	81 30       	cpi	r24, 0x01	; 1
   194d8:	51 f4       	brne	.+20     	; 0x194ee <_Z25Stop_Extra_Plot_Operationh+0xde>
   194da:	63 e7       	ldi	r22, 0x73	; 115
   194dc:	7f e2       	ldi	r23, 0x2F	; 47
   194de:	86 ec       	ldi	r24, 0xC6	; 198
   194e0:	94 e1       	ldi	r25, 0x14	; 20
   194e2:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   194e6:	86 ec       	ldi	r24, 0xC6	; 198
   194e8:	94 e1       	ldi	r25, 0x14	; 20
   194ea:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   194ee:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   194f2:	62 50       	subi	r22, 0x02	; 2
   194f4:	84 e0       	ldi	r24, 0x04	; 4
   194f6:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
   194fa:	90 91 ac 14 	lds	r25, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   194fe:	88 23       	and	r24, r24
   19500:	b9 f0       	breq	.+46     	; 0x19530 <_Z25Stop_Extra_Plot_Operationh+0x120>
   19502:	91 30       	cpi	r25, 0x01	; 1
   19504:	51 f4       	brne	.+20     	; 0x1951a <_Z25Stop_Extra_Plot_Operationh+0x10a>
   19506:	63 e5       	ldi	r22, 0x53	; 83
   19508:	7f e2       	ldi	r23, 0x2F	; 47
   1950a:	86 ec       	ldi	r24, 0xC6	; 198
   1950c:	94 e1       	ldi	r25, 0x14	; 20
   1950e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19512:	86 ec       	ldi	r24, 0xC6	; 198
   19514:	94 e1       	ldi	r25, 0x14	; 20
   19516:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1951a:	10 92 8c 14 	sts	0x148C, r1	; 0x80148c <_sRuble_Parameters+0xde>
   1951e:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   19522:	6c e7       	ldi	r22, 0x7C	; 124
   19524:	74 e1       	ldi	r23, 0x14	; 20
   19526:	8d ea       	ldi	r24, 0xAD	; 173
   19528:	9c e0       	ldi	r25, 0x0C	; 12
   1952a:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1952e:	5c c0       	rjmp	.+184    	; 0x195e8 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   19530:	91 30       	cpi	r25, 0x01	; 1
   19532:	51 f4       	brne	.+20     	; 0x19548 <_Z25Stop_Extra_Plot_Operationh+0x138>
   19534:	6b e2       	ldi	r22, 0x2B	; 43
   19536:	7f e2       	ldi	r23, 0x2F	; 47
   19538:	86 ec       	ldi	r24, 0xC6	; 198
   1953a:	94 e1       	ldi	r25, 0x14	; 20
   1953c:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19540:	86 ec       	ldi	r24, 0xC6	; 198
   19542:	94 e1       	ldi	r25, 0x14	; 20
   19544:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19548:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   1954c:	81 11       	cpse	r24, r1
   1954e:	0c c0       	rjmp	.+24     	; 0x19568 <_Z25Stop_Extra_Plot_Operationh+0x158>
   19550:	80 91 6d 0e 	lds	r24, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   19554:	81 30       	cpi	r24, 0x01	; 1
   19556:	41 f0       	breq	.+16     	; 0x19568 <_Z25Stop_Extra_Plot_Operationh+0x158>
   19558:	80 91 52 0e 	lds	r24, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   1955c:	81 30       	cpi	r24, 0x01	; 1
   1955e:	21 f0       	breq	.+8      	; 0x19568 <_Z25Stop_Extra_Plot_Operationh+0x158>
   19560:	81 e0       	ldi	r24, 0x01	; 1
   19562:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   19566:	02 c0       	rjmp	.+4      	; 0x1956c <_Z25Stop_Extra_Plot_Operationh+0x15c>
   19568:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   1956c:	6c e7       	ldi	r22, 0x7C	; 124
   1956e:	74 e1       	ldi	r23, 0x14	; 20
   19570:	8d ea       	ldi	r24, 0xAD	; 173
   19572:	9c e0       	ldi	r25, 0x0C	; 12
   19574:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19578:	6c e7       	ldi	r22, 0x7C	; 124
   1957a:	74 e1       	ldi	r23, 0x14	; 20
   1957c:	8d ea       	ldi	r24, 0xAD	; 173
   1957e:	9c e0       	ldi	r25, 0x0C	; 12
   19580:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   19584:	81 e0       	ldi	r24, 0x01	; 1
   19586:	80 93 8c 14 	sts	0x148C, r24	; 0x80148c <_sRuble_Parameters+0xde>
   1958a:	8b e1       	ldi	r24, 0x1B	; 27
   1958c:	80 9f       	mul	r24, r16
   1958e:	f0 01       	movw	r30, r0
   19590:	81 9f       	mul	r24, r17
   19592:	f0 0d       	add	r31, r0
   19594:	11 24       	eor	r1, r1
   19596:	e8 51       	subi	r30, 0x18	; 24
   19598:	f2 4f       	sbci	r31, 0xF2	; 242
   1959a:	23 85       	ldd	r18, Z+11	; 0x0b
   1959c:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   195a0:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   195a4:	21 30       	cpi	r18, 0x01	; 1
   195a6:	51 f4       	brne	.+20     	; 0x195bc <_Z25Stop_Extra_Plot_Operationh+0x1ac>
   195a8:	90 61       	ori	r25, 0x10	; 16
   195aa:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   195ae:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   195b2:	13 86       	std	Z+11, r1	; 0x0b
   195b4:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   195b8:	22 8f       	std	Z+26, r18	; 0x1a
   195ba:	0b c0       	rjmp	.+22     	; 0x195d2 <_Z25Stop_Extra_Plot_Operationh+0x1c2>
   195bc:	90 62       	ori	r25, 0x20	; 32
   195be:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   195c2:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   195c6:	12 86       	std	Z+10, r1	; 0x0a
   195c8:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   195cc:	13 86       	std	Z+11, r1	; 0x0b
   195ce:	82 e0       	ldi	r24, 0x02	; 2
   195d0:	82 8f       	std	Z+26, r24	; 0x1a
   195d2:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   195d6:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   195da:	84 60       	ori	r24, 0x04	; 4
   195dc:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   195e0:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   195e4:	d1 e0       	ldi	r29, 0x01	; 1
   195e6:	51 c0       	rjmp	.+162    	; 0x1968a <_Z25Stop_Extra_Plot_Operationh+0x27a>
   195e8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   195ec:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   195f0:	84 60       	ori	r24, 0x04	; 4
   195f2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   195f6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   195fa:	6c 2f       	mov	r22, r28
   195fc:	80 e0       	ldi	r24, 0x00	; 0
   195fe:	0e 94 7c ba 	call	0x174f8	; 0x174f8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   19602:	d8 2f       	mov	r29, r24
   19604:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19608:	dd 23       	and	r29, r29
   1960a:	99 f1       	breq	.+102    	; 0x19672 <_Z25Stop_Extra_Plot_Operationh+0x262>
   1960c:	81 30       	cpi	r24, 0x01	; 1
   1960e:	51 f4       	brne	.+20     	; 0x19624 <_Z25Stop_Extra_Plot_Operationh+0x214>
   19610:	6a e1       	ldi	r22, 0x1A	; 26
   19612:	7f e2       	ldi	r23, 0x2F	; 47
   19614:	86 ec       	ldi	r24, 0xC6	; 198
   19616:	94 e1       	ldi	r25, 0x14	; 20
   19618:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1961c:	86 ec       	ldi	r24, 0xC6	; 198
   1961e:	94 e1       	ldi	r25, 0x14	; 20
   19620:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19624:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19628:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1962c:	2b e1       	ldi	r18, 0x1B	; 27
   1962e:	20 9f       	mul	r18, r16
   19630:	f0 01       	movw	r30, r0
   19632:	21 9f       	mul	r18, r17
   19634:	f0 0d       	add	r31, r0
   19636:	11 24       	eor	r1, r1
   19638:	e8 51       	subi	r30, 0x18	; 24
   1963a:	f2 4f       	sbci	r31, 0xF2	; 242
   1963c:	23 85       	ldd	r18, Z+11	; 0x0b
   1963e:	21 30       	cpi	r18, 0x01	; 1
   19640:	59 f4       	brne	.+22     	; 0x19658 <_Z25Stop_Extra_Plot_Operationh+0x248>
   19642:	84 60       	ori	r24, 0x04	; 4
   19644:	90 61       	ori	r25, 0x10	; 16
   19646:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1964a:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1964e:	13 86       	std	Z+11, r1	; 0x0b
   19650:	c0 93 73 14 	sts	0x1473, r28	; 0x801473 <_sRuble_Parameters+0xc5>
   19654:	22 8f       	std	Z+26, r18	; 0x1a
   19656:	19 c0       	rjmp	.+50     	; 0x1968a <_Z25Stop_Extra_Plot_Operationh+0x27a>
   19658:	84 60       	ori	r24, 0x04	; 4
   1965a:	90 62       	ori	r25, 0x20	; 32
   1965c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19660:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19664:	12 86       	std	Z+10, r1	; 0x0a
   19666:	c0 93 72 14 	sts	0x1472, r28	; 0x801472 <_sRuble_Parameters+0xc4>
   1966a:	13 86       	std	Z+11, r1	; 0x0b
   1966c:	82 e0       	ldi	r24, 0x02	; 2
   1966e:	82 8f       	std	Z+26, r24	; 0x1a
   19670:	0c c0       	rjmp	.+24     	; 0x1968a <_Z25Stop_Extra_Plot_Operationh+0x27a>
   19672:	81 30       	cpi	r24, 0x01	; 1
   19674:	51 f4       	brne	.+20     	; 0x1968a <_Z25Stop_Extra_Plot_Operationh+0x27a>
   19676:	61 e0       	ldi	r22, 0x01	; 1
   19678:	7f e2       	ldi	r23, 0x2F	; 47
   1967a:	86 ec       	ldi	r24, 0xC6	; 198
   1967c:	94 e1       	ldi	r25, 0x14	; 20
   1967e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19682:	86 ec       	ldi	r24, 0xC6	; 198
   19684:	94 e1       	ldi	r25, 0x14	; 20
   19686:	0e 94 bb d3 	call	0x1a776	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1968a:	8d 2f       	mov	r24, r29
   1968c:	df 91       	pop	r29
   1968e:	cf 91       	pop	r28
   19690:	1f 91       	pop	r17
   19692:	0f 91       	pop	r16
   19694:	08 95       	ret

00019696 <_Z24Run_Extra_Plot_Operationv>:
   19696:	cf 92       	push	r12
   19698:	df 92       	push	r13
   1969a:	ef 92       	push	r14
   1969c:	ff 92       	push	r15
   1969e:	1f 93       	push	r17
   196a0:	cf 93       	push	r28
   196a2:	df 93       	push	r29
   196a4:	88 ee       	ldi	r24, 0xE8	; 232
   196a6:	e8 2e       	mov	r14, r24
   196a8:	8d e0       	ldi	r24, 0x0D	; 13
   196aa:	f8 2e       	mov	r15, r24
   196ac:	92 ed       	ldi	r25, 0xD2	; 210
   196ae:	c9 2e       	mov	r12, r25
   196b0:	9d e0       	ldi	r25, 0x0D	; 13
   196b2:	d9 2e       	mov	r13, r25
   196b4:	c0 e0       	ldi	r28, 0x00	; 0
   196b6:	d0 e0       	ldi	r29, 0x00	; 0
   196b8:	1c 2f       	mov	r17, r28
   196ba:	f7 01       	movw	r30, r14
   196bc:	81 81       	ldd	r24, Z+1	; 0x01
   196be:	81 50       	subi	r24, 0x01	; 1
   196c0:	82 37       	cpi	r24, 0x72	; 114
   196c2:	08 f0       	brcs	.+2      	; 0x196c6 <_Z24Run_Extra_Plot_Operationv+0x30>
   196c4:	8e c0       	rjmp	.+284    	; 0x197e2 <_Z24Run_Extra_Plot_Operationv+0x14c>
   196c6:	82 81       	ldd	r24, Z+2	; 0x02
   196c8:	82 30       	cpi	r24, 0x02	; 2
   196ca:	19 f0       	breq	.+6      	; 0x196d2 <_Z24Run_Extra_Plot_Operationv+0x3c>
   196cc:	83 30       	cpi	r24, 0x03	; 3
   196ce:	21 f1       	breq	.+72     	; 0x19718 <_Z24Run_Extra_Plot_Operationv+0x82>
   196d0:	88 c0       	rjmp	.+272    	; 0x197e2 <_Z24Run_Extra_Plot_Operationv+0x14c>
   196d2:	8b e1       	ldi	r24, 0x1B	; 27
   196d4:	8c 9f       	mul	r24, r28
   196d6:	f0 01       	movw	r30, r0
   196d8:	8d 9f       	mul	r24, r29
   196da:	f0 0d       	add	r31, r0
   196dc:	11 24       	eor	r1, r1
   196de:	e8 51       	subi	r30, 0x18	; 24
   196e0:	f2 4f       	sbci	r31, 0xF2	; 242
   196e2:	83 81       	ldd	r24, Z+3	; 0x03
   196e4:	94 81       	ldd	r25, Z+4	; 0x04
   196e6:	89 2b       	or	r24, r25
   196e8:	41 f4       	brne	.+16     	; 0x196fa <_Z24Run_Extra_Plot_Operationv+0x64>
   196ea:	82 85       	ldd	r24, Z+10	; 0x0a
   196ec:	81 11       	cpse	r24, r1
   196ee:	05 c0       	rjmp	.+10     	; 0x196fa <_Z24Run_Extra_Plot_Operationv+0x64>
   196f0:	81 e0       	ldi	r24, 0x01	; 1
   196f2:	82 83       	std	Z+2, r24	; 0x02
   196f4:	14 82       	std	Z+4, r1	; 0x04
   196f6:	13 82       	std	Z+3, r1	; 0x03
   196f8:	44 c0       	rjmp	.+136    	; 0x19782 <_Z24Run_Extra_Plot_Operationv+0xec>
   196fa:	81 2f       	mov	r24, r17
   196fc:	c9 dd       	rcall	.-1134   	; 0x19290 <_Z26Start_Extra_Plot_Operationh>
   196fe:	88 23       	and	r24, r24
   19700:	d1 f0       	breq	.+52     	; 0x19736 <_Z24Run_Extra_Plot_Operationv+0xa0>
   19702:	8b e1       	ldi	r24, 0x1B	; 27
   19704:	8c 9f       	mul	r24, r28
   19706:	f0 01       	movw	r30, r0
   19708:	8d 9f       	mul	r24, r29
   1970a:	f0 0d       	add	r31, r0
   1970c:	11 24       	eor	r1, r1
   1970e:	e8 51       	subi	r30, 0x18	; 24
   19710:	f2 4f       	sbci	r31, 0xF2	; 242
   19712:	83 e0       	ldi	r24, 0x03	; 3
   19714:	82 83       	std	Z+2, r24	; 0x02
   19716:	70 c0       	rjmp	.+224    	; 0x197f8 <_Z24Run_Extra_Plot_Operationv+0x162>
   19718:	f7 01       	movw	r30, r14
   1971a:	83 81       	ldd	r24, Z+3	; 0x03
   1971c:	94 81       	ldd	r25, Z+4	; 0x04
   1971e:	00 97       	sbiw	r24, 0x00	; 0
   19720:	19 f1       	breq	.+70     	; 0x19768 <_Z24Run_Extra_Plot_Operationv+0xd2>
   19722:	20 91 d5 13 	lds	r18, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   19726:	22 30       	cpi	r18, 0x02	; 2
   19728:	71 f5       	brne	.+92     	; 0x19786 <_Z24Run_Extra_Plot_Operationv+0xf0>
   1972a:	18 30       	cpi	r17, 0x08	; 8
   1972c:	09 f4       	brne	.+2      	; 0x19730 <_Z24Run_Extra_Plot_Operationv+0x9a>
   1972e:	64 c0       	rjmp	.+200    	; 0x197f8 <_Z24Run_Extra_Plot_Operationv+0x162>
   19730:	14 30       	cpi	r17, 0x04	; 4
   19732:	09 f4       	brne	.+2      	; 0x19736 <_Z24Run_Extra_Plot_Operationv+0xa0>
   19734:	61 c0       	rjmp	.+194    	; 0x197f8 <_Z24Run_Extra_Plot_Operationv+0x162>
   19736:	8b e1       	ldi	r24, 0x1B	; 27
   19738:	8c 9f       	mul	r24, r28
   1973a:	f0 01       	movw	r30, r0
   1973c:	8d 9f       	mul	r24, r29
   1973e:	f0 0d       	add	r31, r0
   19740:	11 24       	eor	r1, r1
   19742:	e8 51       	subi	r30, 0x18	; 24
   19744:	f2 4f       	sbci	r31, 0xF2	; 242
   19746:	81 e0       	ldi	r24, 0x01	; 1
   19748:	82 83       	std	Z+2, r24	; 0x02
   1974a:	14 82       	std	Z+4, r1	; 0x04
   1974c:	13 82       	std	Z+3, r1	; 0x03
   1974e:	81 2f       	mov	r24, r17
   19750:	5f de       	rcall	.-834    	; 0x19410 <_Z25Stop_Extra_Plot_Operationh>
   19752:	81 e0       	ldi	r24, 0x01	; 1
   19754:	81 0f       	add	r24, r17
   19756:	df 91       	pop	r29
   19758:	cf 91       	pop	r28
   1975a:	1f 91       	pop	r17
   1975c:	ff 90       	pop	r15
   1975e:	ef 90       	pop	r14
   19760:	df 90       	pop	r13
   19762:	cf 90       	pop	r12
   19764:	0c 94 26 7b 	jmp	0xf64c	; 0xf64c <_Z21Exra_Plot_Data_EEPROMh>
   19768:	22 85       	ldd	r18, Z+10	; 0x0a
   1976a:	21 11       	cpse	r18, r1
   1976c:	da cf       	rjmp	.-76     	; 0x19722 <_Z24Run_Extra_Plot_Operationv+0x8c>
   1976e:	8b e1       	ldi	r24, 0x1B	; 27
   19770:	8c 9f       	mul	r24, r28
   19772:	f0 01       	movw	r30, r0
   19774:	8d 9f       	mul	r24, r29
   19776:	f0 0d       	add	r31, r0
   19778:	11 24       	eor	r1, r1
   1977a:	e8 51       	subi	r30, 0x18	; 24
   1977c:	f2 4f       	sbci	r31, 0xF2	; 242
   1977e:	81 e0       	ldi	r24, 0x01	; 1
   19780:	82 83       	std	Z+2, r24	; 0x02
   19782:	8c 2f       	mov	r24, r28
   19784:	e5 cf       	rjmp	.-54     	; 0x19750 <_Z24Run_Extra_Plot_Operationv+0xba>
   19786:	89 2b       	or	r24, r25
   19788:	69 f0       	breq	.+26     	; 0x197a4 <_Z24Run_Extra_Plot_Operationv+0x10e>
   1978a:	f6 01       	movw	r30, r12
   1978c:	80 81       	ld	r24, Z
   1978e:	8f 5f       	subi	r24, 0xFF	; 255
   19790:	83 33       	cpi	r24, 0x33	; 51
   19792:	10 f4       	brcc	.+4      	; 0x19798 <_Z24Run_Extra_Plot_Operationv+0x102>
   19794:	80 83       	st	Z, r24
   19796:	06 c0       	rjmp	.+12     	; 0x197a4 <_Z24Run_Extra_Plot_Operationv+0x10e>
   19798:	f6 01       	movw	r30, r12
   1979a:	10 82       	st	Z, r1
   1979c:	81 e0       	ldi	r24, 0x01	; 1
   1979e:	81 0f       	add	r24, r17
   197a0:	0e 94 26 7b 	call	0xf64c	; 0xf64c <_Z21Exra_Plot_Data_EEPROMh>
   197a4:	13 30       	cpi	r17, 0x03	; 3
   197a6:	e9 f4       	brne	.+58     	; 0x197e2 <_Z24Run_Extra_Plot_Operationv+0x14c>
   197a8:	80 91 ac 13 	lds	r24, 0x13AC	; 0x8013ac <_sPump_Parameter+0x8>
   197ac:	98 2f       	mov	r25, r24
   197ae:	97 7f       	andi	r25, 0xF7	; 247
   197b0:	91 30       	cpi	r25, 0x01	; 1
   197b2:	29 f0       	breq	.+10     	; 0x197be <_Z24Run_Extra_Plot_Operationv+0x128>
   197b4:	84 30       	cpi	r24, 0x04	; 4
   197b6:	19 f0       	breq	.+6      	; 0x197be <_Z24Run_Extra_Plot_Operationv+0x128>
   197b8:	8c 50       	subi	r24, 0x0C	; 12
   197ba:	82 30       	cpi	r24, 0x02	; 2
   197bc:	90 f4       	brcc	.+36     	; 0x197e2 <_Z24Run_Extra_Plot_Operationv+0x14c>
   197be:	6d e0       	ldi	r22, 0x0D	; 13
   197c0:	70 e3       	ldi	r23, 0x30	; 48
   197c2:	86 ec       	ldi	r24, 0xC6	; 198
   197c4:	94 e1       	ldi	r25, 0x14	; 20
   197c6:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   197ca:	86 ec       	ldi	r24, 0xC6	; 198
   197cc:	94 e1       	ldi	r25, 0x14	; 20
   197ce:	d3 d7       	rcall	.+4006   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   197d0:	83 e0       	ldi	r24, 0x03	; 3
   197d2:	df 91       	pop	r29
   197d4:	cf 91       	pop	r28
   197d6:	1f 91       	pop	r17
   197d8:	ff 90       	pop	r15
   197da:	ef 90       	pop	r14
   197dc:	df 90       	pop	r13
   197de:	cf 90       	pop	r12
   197e0:	17 ce       	rjmp	.-978    	; 0x19410 <_Z25Stop_Extra_Plot_Operationh>
   197e2:	21 96       	adiw	r28, 0x01	; 1
   197e4:	fb e1       	ldi	r31, 0x1B	; 27
   197e6:	ef 0e       	add	r14, r31
   197e8:	f1 1c       	adc	r15, r1
   197ea:	8f ef       	ldi	r24, 0xFF	; 255
   197ec:	c8 1a       	sub	r12, r24
   197ee:	d8 0a       	sbc	r13, r24
   197f0:	ce 30       	cpi	r28, 0x0E	; 14
   197f2:	d1 05       	cpc	r29, r1
   197f4:	09 f0       	breq	.+2      	; 0x197f8 <_Z24Run_Extra_Plot_Operationv+0x162>
   197f6:	60 cf       	rjmp	.-320    	; 0x196b8 <_Z24Run_Extra_Plot_Operationv+0x22>
   197f8:	df 91       	pop	r29
   197fa:	cf 91       	pop	r28
   197fc:	1f 91       	pop	r17
   197fe:	ff 90       	pop	r15
   19800:	ef 90       	pop	r14
   19802:	df 90       	pop	r13
   19804:	cf 90       	pop	r12
   19806:	08 95       	ret

00019808 <_Z20Handle_Wireless_Pumpv>:
   19808:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   1980c:	88 23       	and	r24, r24
   1980e:	09 f4       	brne	.+2      	; 0x19812 <_Z20Handle_Wireless_Pumpv+0xa>
   19810:	7d c0       	rjmp	.+250    	; 0x1990c <_Z20Handle_Wireless_Pumpv+0x104>
   19812:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19816:	80 91 7d 14 	lds	r24, 0x147D	; 0x80147d <_sRuble_Parameters+0xcf>
   1981a:	90 91 7e 14 	lds	r25, 0x147E	; 0x80147e <_sRuble_Parameters+0xd0>
   1981e:	21 11       	cpse	r18, r1
   19820:	09 c0       	rjmp	.+18     	; 0x19834 <_Z20Handle_Wireless_Pumpv+0x2c>
   19822:	20 91 52 0e 	lds	r18, 0x0E52	; 0x800e52 <_sExtra_Plot+0x6a>
   19826:	21 11       	cpse	r18, r1
   19828:	05 c0       	rjmp	.+10     	; 0x19834 <_Z20Handle_Wireless_Pumpv+0x2c>
   1982a:	20 91 6d 0e 	lds	r18, 0x0E6D	; 0x800e6d <_sExtra_Plot+0x85>
   1982e:	22 23       	and	r18, r18
   19830:	09 f4       	brne	.+2      	; 0x19834 <_Z20Handle_Wireless_Pumpv+0x2c>
   19832:	40 c0       	rjmp	.+128    	; 0x198b4 <_Z20Handle_Wireless_Pumpv+0xac>
   19834:	89 2b       	or	r24, r25
   19836:	09 f0       	breq	.+2      	; 0x1983a <_Z20Handle_Wireless_Pumpv+0x32>
   19838:	69 c0       	rjmp	.+210    	; 0x1990c <_Z20Handle_Wireless_Pumpv+0x104>
   1983a:	86 e9       	ldi	r24, 0x96	; 150
   1983c:	90 e0       	ldi	r25, 0x00	; 0
   1983e:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   19842:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   19846:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1984a:	81 30       	cpi	r24, 0x01	; 1
   1984c:	49 f4       	brne	.+18     	; 0x19860 <_Z20Handle_Wireless_Pumpv+0x58>
   1984e:	65 e5       	ldi	r22, 0x55	; 85
   19850:	7d e2       	ldi	r23, 0x2D	; 45
   19852:	86 ec       	ldi	r24, 0xC6	; 198
   19854:	94 e1       	ldi	r25, 0x14	; 20
   19856:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1985a:	86 ec       	ldi	r24, 0xC6	; 198
   1985c:	94 e1       	ldi	r25, 0x14	; 20
   1985e:	8b d7       	rcall	.+3862   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19860:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19864:	62 50       	subi	r22, 0x02	; 2
   19866:	82 e0       	ldi	r24, 0x02	; 2
   19868:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
   1986c:	88 23       	and	r24, r24
   1986e:	21 f0       	breq	.+8      	; 0x19878 <_Z20Handle_Wireless_Pumpv+0x70>
   19870:	81 e0       	ldi	r24, 0x01	; 1
   19872:	80 93 7c 14 	sts	0x147C, r24	; 0x80147c <_sRuble_Parameters+0xce>
   19876:	0e c0       	rjmp	.+28     	; 0x19894 <_Z20Handle_Wireless_Pumpv+0x8c>
   19878:	86 e0       	ldi	r24, 0x06	; 6
   1987a:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1987e:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19882:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19886:	90 68       	ori	r25, 0x80	; 128
   19888:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1988c:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19890:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   19894:	6c e7       	ldi	r22, 0x7C	; 124
   19896:	74 e1       	ldi	r23, 0x14	; 20
   19898:	8d ea       	ldi	r24, 0xAD	; 173
   1989a:	9c e0       	ldi	r25, 0x0C	; 12
   1989c:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   198a0:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   198a4:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   198a8:	84 60       	ori	r24, 0x04	; 4
   198aa:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   198ae:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   198b2:	08 95       	ret
   198b4:	89 2b       	or	r24, r25
   198b6:	51 f5       	brne	.+84     	; 0x1990c <_Z20Handle_Wireless_Pumpv+0x104>
   198b8:	88 e5       	ldi	r24, 0x58	; 88
   198ba:	92 e0       	ldi	r25, 0x02	; 2
   198bc:	90 93 7e 14 	sts	0x147E, r25	; 0x80147e <_sRuble_Parameters+0xd0>
   198c0:	80 93 7d 14 	sts	0x147D, r24	; 0x80147d <_sRuble_Parameters+0xcf>
   198c4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   198c8:	81 30       	cpi	r24, 0x01	; 1
   198ca:	49 f4       	brne	.+18     	; 0x198de <_Z20Handle_Wireless_Pumpv+0xd6>
   198cc:	66 e2       	ldi	r22, 0x26	; 38
   198ce:	7d e2       	ldi	r23, 0x2D	; 45
   198d0:	86 ec       	ldi	r24, 0xC6	; 198
   198d2:	94 e1       	ldi	r25, 0x14	; 20
   198d4:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   198d8:	86 ec       	ldi	r24, 0xC6	; 198
   198da:	94 e1       	ldi	r25, 0x14	; 20
   198dc:	4c d7       	rcall	.+3736   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   198de:	60 91 98 14 	lds	r22, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   198e2:	62 50       	subi	r22, 0x02	; 2
   198e4:	84 e0       	ldi	r24, 0x04	; 4
   198e6:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
   198ea:	10 92 7c 14 	sts	0x147C, r1	; 0x80147c <_sRuble_Parameters+0xce>
   198ee:	6c e7       	ldi	r22, 0x7C	; 124
   198f0:	74 e1       	ldi	r23, 0x14	; 20
   198f2:	8d ea       	ldi	r24, 0xAD	; 173
   198f4:	9c e0       	ldi	r25, 0x0C	; 12
   198f6:	0e 94 74 86 	call	0x10ce8	; 0x10ce8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   198fa:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   198fe:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19902:	84 60       	ori	r24, 0x04	; 4
   19904:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19908:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1990c:	08 95       	ret

0001990e <_Z24Pump_Status_List_Monitorv>:
   1990e:	0f 93       	push	r16
   19910:	1f 93       	push	r17
   19912:	cf 93       	push	r28
   19914:	df 93       	push	r29
   19916:	80 91 d0 0d 	lds	r24, 0x0DD0	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   1991a:	89 37       	cpi	r24, 0x79	; 121
   1991c:	08 f4       	brcc	.+2      	; 0x19920 <_Z24Pump_Status_List_Monitorv+0x12>
   1991e:	4a c0       	rjmp	.+148    	; 0x199b4 <_Z24Pump_Status_List_Monitorv+0xa6>
   19920:	20 91 98 14 	lds	r18, 0x1498	; 0x801498 <_sRuble_Parameters+0xea>
   19924:	30 e0       	ldi	r19, 0x00	; 0
   19926:	e3 e9       	ldi	r30, 0x93	; 147
   19928:	f4 e1       	ldi	r31, 0x14	; 20
   1992a:	80 e0       	ldi	r24, 0x00	; 0
   1992c:	90 e0       	ldi	r25, 0x00	; 0
   1992e:	08 2f       	mov	r16, r24
   19930:	ec 01       	movw	r28, r24
   19932:	11 91       	ld	r17, Z+
   19934:	01 96       	adiw	r24, 0x01	; 1
   19936:	11 30       	cpi	r17, 0x01	; 1
   19938:	c1 f5       	brne	.+112    	; 0x199aa <_Z24Pump_Status_List_Monitorv+0x9c>
   1993a:	28 17       	cp	r18, r24
   1993c:	39 07       	cpc	r19, r25
   1993e:	a9 f1       	breq	.+106    	; 0x199aa <_Z24Pump_Status_List_Monitorv+0x9c>
   19940:	10 92 d0 0d 	sts	0x0DD0, r1	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   19944:	01 11       	cpse	r16, r1
   19946:	13 c0       	rjmp	.+38     	; 0x1996e <_Z24Pump_Status_List_Monitorv+0x60>
   19948:	8a e0       	ldi	r24, 0x0A	; 10
   1994a:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   1994e:	01 97       	sbiw	r24, 0x01	; 1
   19950:	21 f0       	breq	.+8      	; 0x1995a <_Z24Pump_Status_List_Monitorv+0x4c>
   19952:	61 e0       	ldi	r22, 0x01	; 1
   19954:	8a e0       	ldi	r24, 0x0A	; 10
   19956:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1995a:	8b e0       	ldi	r24, 0x0B	; 11
   1995c:	0e 94 14 d9 	call	0x1b228	; 0x1b228 <digitalRead>
   19960:	01 97       	sbiw	r24, 0x01	; 1
   19962:	c9 f0       	breq	.+50     	; 0x19996 <_Z24Pump_Status_List_Monitorv+0x88>
   19964:	61 e0       	ldi	r22, 0x01	; 1
   19966:	8b e0       	ldi	r24, 0x0B	; 11
   19968:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1996c:	14 c0       	rjmp	.+40     	; 0x19996 <_Z24Pump_Status_List_Monitorv+0x88>
   1996e:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19972:	81 30       	cpi	r24, 0x01	; 1
   19974:	49 f4       	brne	.+18     	; 0x19988 <_Z24Pump_Status_List_Monitorv+0x7a>
   19976:	6f e4       	ldi	r22, 0x4F	; 79
   19978:	79 e2       	ldi	r23, 0x29	; 41
   1997a:	86 ec       	ldi	r24, 0xC6	; 198
   1997c:	94 e1       	ldi	r25, 0x14	; 20
   1997e:	0e 94 4c d5 	call	0x1aa98	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19982:	86 ec       	ldi	r24, 0xC6	; 198
   19984:	94 e1       	ldi	r25, 0x14	; 20
   19986:	f7 d6       	rcall	.+3566   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19988:	6f ef       	ldi	r22, 0xFF	; 255
   1998a:	60 0f       	add	r22, r16
   1998c:	84 e0       	ldi	r24, 0x04	; 4
   1998e:	0e 94 56 be 	call	0x17cac	; 0x17cac <_Z20Wireless_Pump_On_Offhh>
   19992:	88 23       	and	r24, r24
   19994:	31 f0       	breq	.+12     	; 0x199a2 <_Z24Pump_Status_List_Monitorv+0x94>
   19996:	cd 56       	subi	r28, 0x6D	; 109
   19998:	db 4e       	sbci	r29, 0xEB	; 235
   1999a:	18 82       	st	Y, r1
   1999c:	0e 94 ed 86 	call	0x10dda	; 0x10dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   199a0:	0d c0       	rjmp	.+26     	; 0x199bc <_Z24Pump_Status_List_Monitorv+0xae>
   199a2:	0e 94 ed 86 	call	0x10dda	; 0x10dda <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.40>
   199a6:	10 e0       	ldi	r17, 0x00	; 0
   199a8:	09 c0       	rjmp	.+18     	; 0x199bc <_Z24Pump_Status_List_Monitorv+0xae>
   199aa:	84 30       	cpi	r24, 0x04	; 4
   199ac:	91 05       	cpc	r25, r1
   199ae:	09 f0       	breq	.+2      	; 0x199b2 <_Z24Pump_Status_List_Monitorv+0xa4>
   199b0:	be cf       	rjmp	.-132    	; 0x1992e <_Z24Pump_Status_List_Monitorv+0x20>
   199b2:	03 c0       	rjmp	.+6      	; 0x199ba <_Z24Pump_Status_List_Monitorv+0xac>
   199b4:	8f 5f       	subi	r24, 0xFF	; 255
   199b6:	80 93 d0 0d 	sts	0x0DD0, r24	; 0x800dd0 <_ZZ24Pump_Status_List_MonitorvE7counter>
   199ba:	01 c0       	rjmp	.+2      	; 0x199be <_Z24Pump_Status_List_Monitorv+0xb0>
   199bc:	81 2f       	mov	r24, r17
   199be:	df 91       	pop	r29
   199c0:	cf 91       	pop	r28
   199c2:	1f 91       	pop	r17
   199c4:	0f 91       	pop	r16
   199c6:	08 95       	ret

000199c8 <_Z24Plot_Status_List_Monitorv>:
   199c8:	2f 92       	push	r2
   199ca:	3f 92       	push	r3
   199cc:	4f 92       	push	r4
   199ce:	5f 92       	push	r5
   199d0:	6f 92       	push	r6
   199d2:	7f 92       	push	r7
   199d4:	8f 92       	push	r8
   199d6:	9f 92       	push	r9
   199d8:	af 92       	push	r10
   199da:	bf 92       	push	r11
   199dc:	cf 92       	push	r12
   199de:	df 92       	push	r13
   199e0:	ef 92       	push	r14
   199e2:	ff 92       	push	r15
   199e4:	0f 93       	push	r16
   199e6:	1f 93       	push	r17
   199e8:	cf 93       	push	r28
   199ea:	df 93       	push	r29
   199ec:	cd b7       	in	r28, 0x3d	; 61
   199ee:	de b7       	in	r29, 0x3e	; 62
   199f0:	2b 97       	sbiw	r28, 0x0b	; 11
   199f2:	0f b6       	in	r0, 0x3f	; 63
   199f4:	f8 94       	cli
   199f6:	de bf       	out	0x3e, r29	; 62
   199f8:	0f be       	out	0x3f, r0	; 63
   199fa:	cd bf       	out	0x3d, r28	; 61
   199fc:	80 91 7b 14 	lds	r24, 0x147B	; 0x80147b <_sRuble_Parameters+0xcd>
   19a00:	88 23       	and	r24, r24
   19a02:	09 f4       	brne	.+2      	; 0x19a06 <_Z24Plot_Status_List_Monitorv+0x3e>
   19a04:	71 c3       	rjmp	.+1762   	; 0x1a0e8 <_Z24Plot_Status_List_Monitorv+0x720>
   19a06:	80 91 7c 14 	lds	r24, 0x147C	; 0x80147c <_sRuble_Parameters+0xce>
   19a0a:	88 23       	and	r24, r24
   19a0c:	49 f0       	breq	.+18     	; 0x19a20 <_Z24Plot_Status_List_Monitorv+0x58>
   19a0e:	80 91 1e 14 	lds	r24, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19a12:	81 11       	cpse	r24, r1
   19a14:	05 c0       	rjmp	.+10     	; 0x19a20 <_Z24Plot_Status_List_Monitorv+0x58>
   19a16:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   19a1a:	82 30       	cpi	r24, 0x02	; 2
   19a1c:	09 f0       	breq	.+2      	; 0x19a20 <_Z24Plot_Status_List_Monitorv+0x58>
   19a1e:	64 c3       	rjmp	.+1736   	; 0x1a0e8 <_Z24Plot_Status_List_Monitorv+0x720>
   19a20:	ef e7       	ldi	r30, 0x7F	; 127
   19a22:	f4 e1       	ldi	r31, 0x14	; 20
   19a24:	e1 2c       	mov	r14, r1
   19a26:	f1 2c       	mov	r15, r1
   19a28:	de 2c       	mov	r13, r14
   19a2a:	c1 90       	ld	r12, Z+
   19a2c:	21 e0       	ldi	r18, 0x01	; 1
   19a2e:	c2 12       	cpse	r12, r18
   19a30:	53 c3       	rjmp	.+1702   	; 0x1a0d8 <_Z24Plot_Status_List_Monitorv+0x710>
   19a32:	20 91 1e 14 	lds	r18, 0x141E	; 0x80141e <_sRuble_Parameters+0x70>
   19a36:	82 2f       	mov	r24, r18
   19a38:	90 e0       	ldi	r25, 0x00	; 0
   19a3a:	01 97       	sbiw	r24, 0x01	; 1
   19a3c:	e8 16       	cp	r14, r24
   19a3e:	f9 06       	cpc	r15, r25
   19a40:	09 f4       	brne	.+2      	; 0x19a44 <_Z24Plot_Status_List_Monitorv+0x7c>
   19a42:	53 c3       	rjmp	.+1702   	; 0x1a0ea <_Z24Plot_Status_List_Monitorv+0x722>
   19a44:	8e 01       	movw	r16, r28
   19a46:	0f 5f       	subi	r16, 0xFF	; 255
   19a48:	1f 4f       	sbci	r17, 0xFF	; 255
   19a4a:	22 23       	and	r18, r18
   19a4c:	09 f4       	brne	.+2      	; 0x19a50 <_Z24Plot_Status_List_Monitorv+0x88>
   19a4e:	4a c0       	rjmp	.+148    	; 0x19ae4 <_Z24Plot_Status_List_Monitorv+0x11c>
   19a50:	25 e0       	ldi	r18, 0x05	; 5
   19a52:	d8 01       	movw	r26, r16
   19a54:	1d 92       	st	X+, r1
   19a56:	2a 95       	dec	r18
   19a58:	e9 f7       	brne	.-6      	; 0x19a54 <_Z24Plot_Status_List_Monitorv+0x8c>
   19a5a:	26 e0       	ldi	r18, 0x06	; 6
   19a5c:	2e 9d       	mul	r18, r14
   19a5e:	b0 01       	movw	r22, r0
   19a60:	2f 9d       	mul	r18, r15
   19a62:	70 0d       	add	r23, r0
   19a64:	11 24       	eor	r1, r1
   19a66:	28 9f       	mul	r18, r24
   19a68:	f0 01       	movw	r30, r0
   19a6a:	29 9f       	mul	r18, r25
   19a6c:	f0 0d       	add	r31, r0
   19a6e:	11 24       	eor	r1, r1
   19a70:	80 e0       	ldi	r24, 0x00	; 0
   19a72:	90 e0       	ldi	r25, 0x00	; 0
   19a74:	40 e0       	ldi	r20, 0x00	; 0
   19a76:	db 01       	movw	r26, r22
   19a78:	a8 0f       	add	r26, r24
   19a7a:	b9 1f       	adc	r27, r25
   19a7c:	a2 5b       	subi	r26, 0xB2	; 178
   19a7e:	b2 4f       	sbci	r27, 0xF2	; 242
   19a80:	11 96       	adiw	r26, 0x01	; 1
   19a82:	5c 91       	ld	r21, X
   19a84:	20 e0       	ldi	r18, 0x00	; 0
   19a86:	30 e0       	ldi	r19, 0x00	; 0
   19a88:	b1 2c       	mov	r11, r1
   19a8a:	d9 01       	movw	r26, r18
   19a8c:	ae 0f       	add	r26, r30
   19a8e:	bf 1f       	adc	r27, r31
   19a90:	a2 5b       	subi	r26, 0xB2	; 178
   19a92:	b2 4f       	sbci	r27, 0xF2	; 242
   19a94:	11 96       	adiw	r26, 0x01	; 1
   19a96:	ac 91       	ld	r26, X
   19a98:	5a 13       	cpse	r21, r26
   19a9a:	02 c0       	rjmp	.+4      	; 0x19aa0 <_Z24Plot_Status_List_Monitorv+0xd8>
   19a9c:	bb 24       	eor	r11, r11
   19a9e:	b3 94       	inc	r11
   19aa0:	2f 5f       	subi	r18, 0xFF	; 255
   19aa2:	3f 4f       	sbci	r19, 0xFF	; 255
   19aa4:	25 30       	cpi	r18, 0x05	; 5
   19aa6:	31 05       	cpc	r19, r1
   19aa8:	81 f7       	brne	.-32     	; 0x19a8a <_Z24Plot_Status_List_Monitorv+0xc2>
   19aaa:	b1 10       	cpse	r11, r1
   19aac:	05 c0       	rjmp	.+10     	; 0x19ab8 <_Z24Plot_Status_List_Monitorv+0xf0>
   19aae:	d8 01       	movw	r26, r16
   19ab0:	a4 0f       	add	r26, r20
   19ab2:	b1 1d       	adc	r27, r1
   19ab4:	5c 93       	st	X, r21
   19ab6:	4f 5f       	subi	r20, 0xFF	; 255
   19ab8:	01 96       	adiw	r24, 0x01	; 1
   19aba:	85 30       	cpi	r24, 0x05	; 5
   19abc:	91 05       	cpc	r25, r1
   19abe:	d9 f6       	brne	.-74     	; 0x19a76 <_Z24Plot_Status_List_Monitorv+0xae>
   19ac0:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19ac4:	fe 01       	movw	r30, r28
   19ac6:	36 96       	adiw	r30, 0x06	; 6
   19ac8:	5f 01       	movw	r10, r30
   19aca:	81 30       	cpi	r24, 0x01	; 1
   19acc:	09 f0       	breq	.+2      	; 0x19ad0 <_Z24Plot_Status_List_Monitorv+0x108>
   19ace:	3f c0       	rjmp	.+126    	; 0x19b4e <_Z24Plot_Status_List_Monitorv+0x186>
   19ad0:	6f ed       	ldi	r22, 0xDF	; 223
   19ad2:	7a e2       	ldi	r23, 0x2A	; 42
   19ad4:	86 ec       	ldi	r24, 0xC6	; 198
   19ad6:	94 e1       	ldi	r25, 0x14	; 20
   19ad8:	df d7       	rcall	.+4030   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19ada:	86 ec       	ldi	r24, 0xC6	; 198
   19adc:	94 e1       	ldi	r25, 0x14	; 20
   19ade:	4b d6       	rcall	.+3222   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19ae0:	48 01       	movw	r8, r16
   19ae2:	15 c0       	rjmp	.+42     	; 0x19b0e <_Z24Plot_Status_List_Monitorv+0x146>
   19ae4:	d8 01       	movw	r26, r16
   19ae6:	86 e0       	ldi	r24, 0x06	; 6
   19ae8:	8e 9d       	mul	r24, r14
   19aea:	a0 01       	movw	r20, r0
   19aec:	8f 9d       	mul	r24, r15
   19aee:	50 0d       	add	r21, r0
   19af0:	11 24       	eor	r1, r1
   19af2:	80 e0       	ldi	r24, 0x00	; 0
   19af4:	90 e0       	ldi	r25, 0x00	; 0
   19af6:	fa 01       	movw	r30, r20
   19af8:	e8 0f       	add	r30, r24
   19afa:	f9 1f       	adc	r31, r25
   19afc:	e2 5b       	subi	r30, 0xB2	; 178
   19afe:	f2 4f       	sbci	r31, 0xF2	; 242
   19b00:	21 81       	ldd	r18, Z+1	; 0x01
   19b02:	2d 93       	st	X+, r18
   19b04:	01 96       	adiw	r24, 0x01	; 1
   19b06:	85 30       	cpi	r24, 0x05	; 5
   19b08:	91 05       	cpc	r25, r1
   19b0a:	a9 f7       	brne	.-22     	; 0x19af6 <_Z24Plot_Status_List_Monitorv+0x12e>
   19b0c:	d9 cf       	rjmp	.-78     	; 0x19ac0 <_Z24Plot_Status_List_Monitorv+0xf8>
   19b0e:	d4 01       	movw	r26, r8
   19b10:	6d 91       	ld	r22, X+
   19b12:	4d 01       	movw	r8, r26
   19b14:	4a e0       	ldi	r20, 0x0A	; 10
   19b16:	50 e0       	ldi	r21, 0x00	; 0
   19b18:	86 ec       	ldi	r24, 0xC6	; 198
   19b1a:	94 e1       	ldi	r25, 0x14	; 20
   19b1c:	0e 94 c2 d5 	call	0x1ab84	; 0x1ab84 <_ZN5Print5printEhi>
   19b20:	6d ed       	ldi	r22, 0xDD	; 221
   19b22:	7a e2       	ldi	r23, 0x2A	; 42
   19b24:	86 ec       	ldi	r24, 0xC6	; 198
   19b26:	94 e1       	ldi	r25, 0x14	; 20
   19b28:	86 d7       	rcall	.+3852   	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   19b2a:	a8 14       	cp	r10, r8
   19b2c:	b9 04       	cpc	r11, r9
   19b2e:	79 f7       	brne	.-34     	; 0x19b0e <_Z24Plot_Status_List_Monitorv+0x146>
   19b30:	6d ec       	ldi	r22, 0xCD	; 205
   19b32:	7a e2       	ldi	r23, 0x2A	; 42
   19b34:	86 ec       	ldi	r24, 0xC6	; 198
   19b36:	94 e1       	ldi	r25, 0x14	; 20
   19b38:	7e d7       	rcall	.+3836   	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   19b3a:	4a e0       	ldi	r20, 0x0A	; 10
   19b3c:	50 e0       	ldi	r21, 0x00	; 0
   19b3e:	6d 2d       	mov	r22, r13
   19b40:	86 ec       	ldi	r24, 0xC6	; 198
   19b42:	94 e1       	ldi	r25, 0x14	; 20
   19b44:	0e 94 c8 d5 	call	0x1ab90	; 0x1ab90 <_ZN5Print7printlnEhi>
   19b48:	86 ec       	ldi	r24, 0xC6	; 198
   19b4a:	94 e1       	ldi	r25, 0x14	; 20
   19b4c:	14 d6       	rcall	.+3112   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19b4e:	28 01       	movw	r4, r16
   19b50:	d1 2c       	mov	r13, r1
   19b52:	ad e0       	ldi	r26, 0x0D	; 13
   19b54:	9a 2e       	mov	r9, r26
   19b56:	b0 ed       	ldi	r27, 0xD0	; 208
   19b58:	2b 2e       	mov	r2, r27
   19b5a:	bf e0       	ldi	r27, 0x0F	; 15
   19b5c:	3b 2e       	mov	r3, r27
   19b5e:	f2 01       	movw	r30, r4
   19b60:	71 90       	ld	r7, Z+
   19b62:	2f 01       	movw	r4, r30
   19b64:	8f ef       	ldi	r24, 0xFF	; 255
   19b66:	87 0d       	add	r24, r7
   19b68:	82 31       	cpi	r24, 0x12	; 18
   19b6a:	08 f0       	brcs	.+2      	; 0x19b6e <_Z24Plot_Status_List_Monitorv+0x1a6>
   19b6c:	8d c2       	rjmp	.+1306   	; 0x1a088 <_Z24Plot_Status_List_Monitorv+0x6c0>
   19b6e:	f3 e0       	ldi	r31, 0x03	; 3
   19b70:	f7 15       	cp	r31, r7
   19b72:	90 f4       	brcc	.+36     	; 0x19b98 <_Z24Plot_Status_List_Monitorv+0x1d0>
   19b74:	2b ea       	ldi	r18, 0xAB	; 171
   19b76:	72 9e       	mul	r7, r18
   19b78:	81 2c       	mov	r8, r1
   19b7a:	11 24       	eor	r1, r1
   19b7c:	88 2d       	mov	r24, r8
   19b7e:	86 95       	lsr	r24
   19b80:	98 2f       	mov	r25, r24
   19b82:	99 0f       	add	r25, r25
   19b84:	89 0f       	add	r24, r25
   19b86:	78 1a       	sub	r7, r24
   19b88:	86 94       	lsr	r8
   19b8a:	77 20       	and	r7, r7
   19b8c:	11 f0       	breq	.+4      	; 0x19b92 <_Z24Plot_Status_List_Monitorv+0x1ca>
   19b8e:	83 94       	inc	r8
   19b90:	05 c0       	rjmp	.+10     	; 0x19b9c <_Z24Plot_Status_List_Monitorv+0x1d4>
   19b92:	f3 e0       	ldi	r31, 0x03	; 3
   19b94:	7f 2e       	mov	r7, r31
   19b96:	02 c0       	rjmp	.+4      	; 0x19b9c <_Z24Plot_Status_List_Monitorv+0x1d4>
   19b98:	88 24       	eor	r8, r8
   19b9a:	83 94       	inc	r8
   19b9c:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19ba0:	81 30       	cpi	r24, 0x01	; 1
   19ba2:	71 f4       	brne	.+28     	; 0x19bc0 <_Z24Plot_Status_List_Monitorv+0x1f8>
   19ba4:	69 eb       	ldi	r22, 0xB9	; 185
   19ba6:	7a e2       	ldi	r23, 0x2A	; 42
   19ba8:	86 ec       	ldi	r24, 0xC6	; 198
   19baa:	94 e1       	ldi	r25, 0x14	; 20
   19bac:	44 d7       	rcall	.+3720   	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   19bae:	4a e0       	ldi	r20, 0x0A	; 10
   19bb0:	50 e0       	ldi	r21, 0x00	; 0
   19bb2:	68 2d       	mov	r22, r8
   19bb4:	86 ec       	ldi	r24, 0xC6	; 198
   19bb6:	94 e1       	ldi	r25, 0x14	; 20
   19bb8:	eb d7       	rcall	.+4054   	; 0x1ab90 <_ZN5Print7printlnEhi>
   19bba:	86 ec       	ldi	r24, 0xC6	; 198
   19bbc:	94 e1       	ldi	r25, 0x14	; 20
   19bbe:	db d5       	rcall	.+2998   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19bc0:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   19bc4:	81 11       	cpse	r24, r1
   19bc6:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   19bca:	a5 ef       	ldi	r26, 0xF5	; 245
   19bcc:	b3 e1       	ldi	r27, 0x13	; 19
   19bce:	e4 e1       	ldi	r30, 0x14	; 20
   19bd0:	1d 92       	st	X+, r1
   19bd2:	ea 95       	dec	r30
   19bd4:	e9 f7       	brne	.-6      	; 0x19bd0 <_Z24Plot_Status_List_Monitorv+0x208>
   19bd6:	88 2d       	mov	r24, r8
   19bd8:	90 e0       	ldi	r25, 0x00	; 0
   19bda:	01 97       	sbiw	r24, 0x01	; 1
   19bdc:	f7 e0       	ldi	r31, 0x07	; 7
   19bde:	f8 9f       	mul	r31, r24
   19be0:	90 01       	movw	r18, r0
   19be2:	f9 9f       	mul	r31, r25
   19be4:	30 0d       	add	r19, r0
   19be6:	11 24       	eor	r1, r1
   19be8:	22 55       	subi	r18, 0x52	; 82
   19bea:	3c 4e       	sbci	r19, 0xEC	; 236
   19bec:	f9 01       	movw	r30, r18
   19bee:	ec 58       	subi	r30, 0x8C	; 140
   19bf0:	ff 4f       	sbci	r31, 0xFF	; 255
   19bf2:	80 81       	ld	r24, Z
   19bf4:	80 93 f5 13 	sts	0x13F5, r24	; 0x8013f5 <_sRuble_Parameters+0x47>
   19bf8:	31 96       	adiw	r30, 0x01	; 1
   19bfa:	80 81       	ld	r24, Z
   19bfc:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0x48>
   19c00:	31 96       	adiw	r30, 0x01	; 1
   19c02:	80 81       	ld	r24, Z
   19c04:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0x49>
   19c08:	31 96       	adiw	r30, 0x01	; 1
   19c0a:	80 81       	ld	r24, Z
   19c0c:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0x4a>
   19c10:	31 96       	adiw	r30, 0x01	; 1
   19c12:	80 81       	ld	r24, Z
   19c14:	80 93 f9 13 	sts	0x13F9, r24	; 0x8013f9 <_sRuble_Parameters+0x4b>
   19c18:	31 96       	adiw	r30, 0x01	; 1
   19c1a:	80 81       	ld	r24, Z
   19c1c:	80 93 fa 13 	sts	0x13FA, r24	; 0x8013fa <_sRuble_Parameters+0x4c>
   19c20:	42 e0       	ldi	r20, 0x02	; 2
   19c22:	40 93 fb 13 	sts	0x13FB, r20	; 0x8013fb <_sRuble_Parameters+0x4d>
   19c26:	80 91 d5 13 	lds	r24, 0x13D5	; 0x8013d5 <_sRuble_Parameters+0x27>
   19c2a:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0x4f>
   19c2e:	80 91 c4 13 	lds	r24, 0x13C4	; 0x8013c4 <_sRuble_Parameters+0x16>
   19c32:	80 93 ff 13 	sts	0x13FF, r24	; 0x8013ff <_sRuble_Parameters+0x51>
   19c36:	70 92 00 14 	sts	0x1400, r7	; 0x801400 <_sRuble_Parameters+0x52>
   19c3a:	40 e0       	ldi	r20, 0x00	; 0
   19c3c:	50 e0       	ldi	r21, 0x00	; 0
   19c3e:	64 2e       	mov	r6, r20
   19c40:	81 2c       	mov	r8, r1
   19c42:	71 2c       	mov	r7, r1
   19c44:	94 9e       	mul	r9, r20
   19c46:	b0 01       	movw	r22, r0
   19c48:	95 9e       	mul	r9, r21
   19c4a:	70 0d       	add	r23, r0
   19c4c:	11 24       	eor	r1, r1
   19c4e:	6b 5e       	subi	r22, 0xEB	; 235
   19c50:	73 4f       	sbci	r23, 0xF3	; 243
   19c52:	88 2d       	mov	r24, r8
   19c54:	90 e0       	ldi	r25, 0x00	; 0
   19c56:	fb 01       	movw	r30, r22
   19c58:	e8 0f       	add	r30, r24
   19c5a:	f9 1f       	adc	r31, r25
   19c5c:	82 0f       	add	r24, r18
   19c5e:	93 1f       	adc	r25, r19
   19c60:	dc 01       	movw	r26, r24
   19c62:	ac 58       	subi	r26, 0x8C	; 140
   19c64:	bf 4f       	sbci	r27, 0xFF	; 255
   19c66:	81 81       	ldd	r24, Z+1	; 0x01
   19c68:	9c 91       	ld	r25, X
   19c6a:	89 17       	cp	r24, r25
   19c6c:	19 f0       	breq	.+6      	; 0x19c74 <_Z24Plot_Status_List_Monitorv+0x2ac>
   19c6e:	e6 e0       	ldi	r30, 0x06	; 6
   19c70:	8e 2e       	mov	r8, r30
   19c72:	71 2c       	mov	r7, r1
   19c74:	73 94       	inc	r7
   19c76:	83 94       	inc	r8
   19c78:	85 e0       	ldi	r24, 0x05	; 5
   19c7a:	88 15       	cp	r24, r8
   19c7c:	50 f7       	brcc	.-44     	; 0x19c52 <_Z24Plot_Status_List_Monitorv+0x28a>
   19c7e:	a6 e0       	ldi	r26, 0x06	; 6
   19c80:	7a 16       	cp	r7, r26
   19c82:	31 f0       	breq	.+12     	; 0x19c90 <_Z24Plot_Status_List_Monitorv+0x2c8>
   19c84:	4f 5f       	subi	r20, 0xFF	; 255
   19c86:	5f 4f       	sbci	r21, 0xFF	; 255
   19c88:	46 30       	cpi	r20, 0x06	; 6
   19c8a:	51 05       	cpc	r21, r1
   19c8c:	c1 f6       	brne	.-80     	; 0x19c3e <_Z24Plot_Status_List_Monitorv+0x276>
   19c8e:	01 c0       	rjmp	.+2      	; 0x19c92 <_Z24Plot_Status_List_Monitorv+0x2ca>
   19c90:	d6 2c       	mov	r13, r6
   19c92:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19c96:	81 30       	cpi	r24, 0x01	; 1
   19c98:	71 f4       	brne	.+28     	; 0x19cb6 <_Z24Plot_Status_List_Monitorv+0x2ee>
   19c9a:	63 ea       	ldi	r22, 0xA3	; 163
   19c9c:	7a e2       	ldi	r23, 0x2A	; 42
   19c9e:	86 ec       	ldi	r24, 0xC6	; 198
   19ca0:	94 e1       	ldi	r25, 0x14	; 20
   19ca2:	c9 d6       	rcall	.+3474   	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   19ca4:	4a e0       	ldi	r20, 0x0A	; 10
   19ca6:	50 e0       	ldi	r21, 0x00	; 0
   19ca8:	6d 2d       	mov	r22, r13
   19caa:	86 ec       	ldi	r24, 0xC6	; 198
   19cac:	94 e1       	ldi	r25, 0x14	; 20
   19cae:	6a d7       	rcall	.+3796   	; 0x1ab84 <_ZN5Print5printEhi>
   19cb0:	86 ec       	ldi	r24, 0xC6	; 198
   19cb2:	94 e1       	ldi	r25, 0x14	; 20
   19cb4:	60 d5       	rcall	.+2752   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19cb6:	bd e0       	ldi	r27, 0x0D	; 13
   19cb8:	db 9e       	mul	r13, r27
   19cba:	30 01       	movw	r6, r0
   19cbc:	11 24       	eor	r1, r1
   19cbe:	81 2c       	mov	r8, r1
   19cc0:	9d 9c       	mul	r9, r13
   19cc2:	c0 01       	movw	r24, r0
   19cc4:	11 24       	eor	r1, r1
   19cc6:	9c 01       	movw	r18, r24
   19cc8:	2b 5e       	subi	r18, 0xEB	; 235
   19cca:	33 4f       	sbci	r19, 0xF3	; 243
   19ccc:	f9 01       	movw	r30, r18
   19cce:	3b 96       	adiw	r30, 0x0b	; 11
   19cd0:	ff 83       	std	Y+7, r31	; 0x07
   19cd2:	ee 83       	std	Y+6, r30	; 0x06
   19cd4:	a9 01       	movw	r20, r18
   19cd6:	48 5f       	subi	r20, 0xF8	; 248
   19cd8:	5f 4f       	sbci	r21, 0xFF	; 255
   19cda:	59 87       	std	Y+9, r21	; 0x09
   19cdc:	48 87       	std	Y+8, r20	; 0x08
   19cde:	dc 01       	movw	r26, r24
   19ce0:	aa 5e       	subi	r26, 0xEA	; 234
   19ce2:	b3 4f       	sbci	r27, 0xF3	; 243
   19ce4:	bb 87       	std	Y+11, r27	; 0x0b
   19ce6:	aa 87       	std	Y+10, r26	; 0x0a
   19ce8:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   19cec:	88 23       	and	r24, r24
   19cee:	99 f0       	breq	.+38     	; 0x19d16 <_Z24Plot_Status_List_Monitorv+0x34e>
   19cf0:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   19cf4:	88 23       	and	r24, r24
   19cf6:	79 f0       	breq	.+30     	; 0x19d16 <_Z24Plot_Status_List_Monitorv+0x34e>
   19cf8:	f1 01       	movw	r30, r2
   19cfa:	01 90       	ld	r0, Z+
   19cfc:	00 20       	and	r0, r0
   19cfe:	e9 f7       	brne	.-6      	; 0x19cfa <_Z24Plot_Status_List_Monitorv+0x332>
   19d00:	31 97       	sbiw	r30, 0x01	; 1
   19d02:	af 01       	movw	r20, r30
   19d04:	40 5d       	subi	r20, 0xD0	; 208
   19d06:	5f 40       	sbci	r21, 0x0F	; 15
   19d08:	21 e0       	ldi	r18, 0x01	; 1
   19d0a:	60 ed       	ldi	r22, 0xD0	; 208
   19d0c:	7f e0       	ldi	r23, 0x0F	; 15
   19d0e:	82 e6       	ldi	r24, 0x62	; 98
   19d10:	9f e0       	ldi	r25, 0x0F	; 15
   19d12:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   19d16:	83 94       	inc	r8
   19d18:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19d1c:	81 30       	cpi	r24, 0x01	; 1
   19d1e:	41 f4       	brne	.+16     	; 0x19d30 <_Z24Plot_Status_List_Monitorv+0x368>
   19d20:	6f e7       	ldi	r22, 0x7F	; 127
   19d22:	7a e2       	ldi	r23, 0x2A	; 42
   19d24:	86 ec       	ldi	r24, 0xC6	; 198
   19d26:	94 e1       	ldi	r25, 0x14	; 20
   19d28:	b7 d6       	rcall	.+3438   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19d2a:	86 ec       	ldi	r24, 0xC6	; 198
   19d2c:	94 e1       	ldi	r25, 0x14	; 20
   19d2e:	23 d5       	rcall	.+2630   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19d30:	0e 94 2a 6d 	call	0xda54	; 0xda54 <_Z16Display_Update_1v>
   19d34:	8c e0       	ldi	r24, 0x0C	; 12
   19d36:	0e 94 2d 68 	call	0xd05a	; 0xd05a <_Z14Lora_Data_Sendh>
   19d3a:	88 eb       	ldi	r24, 0xB8	; 184
   19d3c:	9b e0       	ldi	r25, 0x0B	; 11
   19d3e:	0e 94 41 66 	call	0xcc82	; 0xcc82 <_Z20Check_Data_Availablej>
   19d42:	88 23       	and	r24, r24
   19d44:	09 f4       	brne	.+2      	; 0x19d48 <_Z24Plot_Status_List_Monitorv+0x380>
   19d46:	4e c1       	rjmp	.+668    	; 0x19fe4 <_Z24Plot_Status_List_Monitorv+0x61c>
   19d48:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   19d4c:	88 23       	and	r24, r24
   19d4e:	09 f4       	brne	.+2      	; 0x19d52 <_Z24Plot_Status_List_Monitorv+0x38a>
   19d50:	00 c1       	rjmp	.+512    	; 0x19f52 <_Z24Plot_Status_List_Monitorv+0x58a>
   19d52:	0e 94 11 73 	call	0xe622	; 0xe622 <_Z21Subscribed_data_checkv>
   19d56:	88 23       	and	r24, r24
   19d58:	99 f0       	breq	.+38     	; 0x19d80 <_Z24Plot_Status_List_Monitorv+0x3b8>
   19d5a:	0e 94 46 66 	call	0xcc8c	; 0xcc8c <_Z21Seperate_Out_Sub_Datav>
   19d5e:	88 23       	and	r24, r24
   19d60:	79 f0       	breq	.+30     	; 0x19d80 <_Z24Plot_Status_List_Monitorv+0x3b8>
   19d62:	f1 01       	movw	r30, r2
   19d64:	01 90       	ld	r0, Z+
   19d66:	00 20       	and	r0, r0
   19d68:	e9 f7       	brne	.-6      	; 0x19d64 <_Z24Plot_Status_List_Monitorv+0x39c>
   19d6a:	31 97       	sbiw	r30, 0x01	; 1
   19d6c:	af 01       	movw	r20, r30
   19d6e:	40 5d       	subi	r20, 0xD0	; 208
   19d70:	5f 40       	sbci	r21, 0x0F	; 15
   19d72:	21 e0       	ldi	r18, 0x01	; 1
   19d74:	60 ed       	ldi	r22, 0xD0	; 208
   19d76:	7f e0       	ldi	r23, 0x0F	; 15
   19d78:	82 e6       	ldi	r24, 0x62	; 98
   19d7a:	9f e0       	ldi	r25, 0x0F	; 15
   19d7c:	0e 94 dc 93 	call	0x127b8	; 0x127b8 <_Z12Pub_Sub_DataPcPhjh>
   19d80:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19d84:	81 30       	cpi	r24, 0x01	; 1
   19d86:	29 f5       	brne	.+74     	; 0x19dd2 <_Z24Plot_Status_List_Monitorv+0x40a>
   19d88:	69 e6       	ldi	r22, 0x69	; 105
   19d8a:	7a e2       	ldi	r23, 0x2A	; 42
   19d8c:	86 ec       	ldi	r24, 0xC6	; 198
   19d8e:	94 e1       	ldi	r25, 0x14	; 20
   19d90:	52 d6       	rcall	.+3236   	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   19d92:	4a e0       	ldi	r20, 0x0A	; 10
   19d94:	50 e0       	ldi	r21, 0x00	; 0
   19d96:	69 e0       	ldi	r22, 0x09	; 9
   19d98:	74 e1       	ldi	r23, 0x14	; 20
   19d9a:	86 ec       	ldi	r24, 0xC6	; 198
   19d9c:	94 e1       	ldi	r25, 0x14	; 20
   19d9e:	0e 94 f0 23 	call	0x47e0	; 0x47e0 <_ZN5Print5writeEPKcj>
   19da2:	86 ec       	ldi	r24, 0xC6	; 198
   19da4:	94 e1       	ldi	r25, 0x14	; 20
   19da6:	74 d6       	rcall	.+3304   	; 0x1aa90 <_ZN5Print7printlnEv>
   19da8:	86 ec       	ldi	r24, 0xC6	; 198
   19daa:	94 e1       	ldi	r25, 0x14	; 20
   19dac:	e4 d4       	rcall	.+2504   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19dae:	6b e4       	ldi	r22, 0x4B	; 75
   19db0:	7a e2       	ldi	r23, 0x2A	; 42
   19db2:	86 ec       	ldi	r24, 0xC6	; 198
   19db4:	94 e1       	ldi	r25, 0x14	; 20
   19db6:	3f d6       	rcall	.+3198   	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   19db8:	47 e0       	ldi	r20, 0x07	; 7
   19dba:	50 e0       	ldi	r21, 0x00	; 0
   19dbc:	6a 85       	ldd	r22, Y+10	; 0x0a
   19dbe:	7b 85       	ldd	r23, Y+11	; 0x0b
   19dc0:	86 ec       	ldi	r24, 0xC6	; 198
   19dc2:	94 e1       	ldi	r25, 0x14	; 20
   19dc4:	0e d6       	rcall	.+3100   	; 0x1a9e2 <_ZN5Print5writeEPKhj>
   19dc6:	86 ec       	ldi	r24, 0xC6	; 198
   19dc8:	94 e1       	ldi	r25, 0x14	; 20
   19dca:	62 d6       	rcall	.+3268   	; 0x1aa90 <_ZN5Print7printlnEv>
   19dcc:	86 ec       	ldi	r24, 0xC6	; 198
   19dce:	94 e1       	ldi	r25, 0x14	; 20
   19dd0:	d2 d4       	rcall	.+2468   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19dd2:	a9 e0       	ldi	r26, 0x09	; 9
   19dd4:	b4 e1       	ldi	r27, 0x14	; 20
   19dd6:	80 e0       	ldi	r24, 0x00	; 0
   19dd8:	90 e0       	ldi	r25, 0x00	; 0
   19dda:	2d 91       	ld	r18, X+
   19ddc:	f3 01       	movw	r30, r6
   19dde:	e8 0f       	add	r30, r24
   19de0:	f9 1f       	adc	r31, r25
   19de2:	eb 5e       	subi	r30, 0xEB	; 235
   19de4:	f3 4f       	sbci	r31, 0xF3	; 243
   19de6:	31 81       	ldd	r19, Z+1	; 0x01
   19de8:	32 17       	cp	r19, r18
   19dea:	09 f4       	brne	.+2      	; 0x19dee <_Z24Plot_Status_List_Monitorv+0x426>
   19dec:	62 c0       	rjmp	.+196    	; 0x19eb2 <_Z24Plot_Status_List_Monitorv+0x4ea>
   19dee:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19df2:	81 30       	cpi	r24, 0x01	; 1
   19df4:	41 f4       	brne	.+16     	; 0x19e06 <_Z24Plot_Status_List_Monitorv+0x43e>
   19df6:	60 e2       	ldi	r22, 0x20	; 32
   19df8:	7a e2       	ldi	r23, 0x2A	; 42
   19dfa:	86 ec       	ldi	r24, 0xC6	; 198
   19dfc:	94 e1       	ldi	r25, 0x14	; 20
   19dfe:	4c d6       	rcall	.+3224   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19e00:	86 ec       	ldi	r24, 0xC6	; 198
   19e02:	94 e1       	ldi	r25, 0x14	; 20
   19e04:	b8 d4       	rcall	.+2416   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19e06:	b2 e0       	ldi	r27, 0x02	; 2
   19e08:	8b 16       	cp	r8, r27
   19e0a:	b9 f0       	breq	.+46     	; 0x19e3a <_Z24Plot_Status_List_Monitorv+0x472>
   19e0c:	81 e0       	ldi	r24, 0x01	; 1
   19e0e:	ee 81       	ldd	r30, Y+6	; 0x06
   19e10:	ff 81       	ldd	r31, Y+7	; 0x07
   19e12:	80 83       	st	Z, r24
   19e14:	80 91 12 14 	lds	r24, 0x1412	; 0x801412 <_sRuble_Parameters+0x64>
   19e18:	90 e0       	ldi	r25, 0x00	; 0
   19e1a:	98 2f       	mov	r25, r24
   19e1c:	88 27       	eor	r24, r24
   19e1e:	20 91 13 14 	lds	r18, 0x1413	; 0x801413 <_sRuble_Parameters+0x65>
   19e22:	82 2b       	or	r24, r18
   19e24:	a8 85       	ldd	r26, Y+8	; 0x08
   19e26:	b9 85       	ldd	r27, Y+9	; 0x09
   19e28:	8d 93       	st	X+, r24
   19e2a:	9c 93       	st	X, r25
   19e2c:	80 91 11 14 	lds	r24, 0x1411	; 0x801411 <_sRuble_Parameters+0x63>
   19e30:	81 11       	cpse	r24, r1
   19e32:	45 c0       	rjmp	.+138    	; 0x19ebe <_Z24Plot_Status_List_Monitorv+0x4f6>
   19e34:	83 e0       	ldi	r24, 0x03	; 3
   19e36:	88 2e       	mov	r8, r24
   19e38:	1e c1       	rjmp	.+572    	; 0x1a076 <_Z24Plot_Status_List_Monitorv+0x6ae>
   19e3a:	86 e0       	ldi	r24, 0x06	; 6
   19e3c:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19e40:	84 e6       	ldi	r24, 0x64	; 100
   19e42:	90 e0       	ldi	r25, 0x00	; 0
   19e44:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19e48:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19e4c:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19e50:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19e54:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19e58:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19e5c:	a0 62       	ori	r26, 0x20	; 32
   19e5e:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19e62:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19e66:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19e6a:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19e6e:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19e72:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19e76:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19e7a:	82 60       	ori	r24, 0x02	; 2
   19e7c:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19e80:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19e84:	d8 01       	movw	r26, r16
   19e86:	ed 91       	ld	r30, X+
   19e88:	8d 01       	movw	r16, r26
   19e8a:	e3 31       	cpi	r30, 0x13	; 19
   19e8c:	68 f0       	brcs	.+26     	; 0x19ea8 <_Z24Plot_Status_List_Monitorv+0x4e0>
   19e8e:	f0 e0       	ldi	r31, 0x00	; 0
   19e90:	e7 5c       	subi	r30, 0xC7	; 199
   19e92:	fb 4e       	sbci	r31, 0xEB	; 235
   19e94:	61 e0       	ldi	r22, 0x01	; 1
   19e96:	80 81       	ld	r24, Z
   19e98:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   19e9c:	68 ec       	ldi	r22, 0xC8	; 200
   19e9e:	70 e0       	ldi	r23, 0x00	; 0
   19ea0:	80 e0       	ldi	r24, 0x00	; 0
   19ea2:	90 e0       	ldi	r25, 0x00	; 0
   19ea4:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   19ea8:	a0 16       	cp	r10, r16
   19eaa:	b1 06       	cpc	r11, r17
   19eac:	59 f7       	brne	.-42     	; 0x19e84 <_Z24Plot_Status_List_Monitorv+0x4bc>
   19eae:	c1 2c       	mov	r12, r1
   19eb0:	1c c1       	rjmp	.+568    	; 0x1a0ea <_Z24Plot_Status_List_Monitorv+0x722>
   19eb2:	01 96       	adiw	r24, 0x01	; 1
   19eb4:	86 30       	cpi	r24, 0x06	; 6
   19eb6:	91 05       	cpc	r25, r1
   19eb8:	09 f0       	breq	.+2      	; 0x19ebc <_Z24Plot_Status_List_Monitorv+0x4f4>
   19eba:	8f cf       	rjmp	.-226    	; 0x19dda <_Z24Plot_Status_List_Monitorv+0x412>
   19ebc:	a7 cf       	rjmp	.-178    	; 0x19e0c <_Z24Plot_Status_List_Monitorv+0x444>
   19ebe:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19ec2:	81 30       	cpi	r24, 0x01	; 1
   19ec4:	41 f4       	brne	.+16     	; 0x19ed6 <_Z24Plot_Status_List_Monitorv+0x50e>
   19ec6:	6d e0       	ldi	r22, 0x0D	; 13
   19ec8:	7a e2       	ldi	r23, 0x2A	; 42
   19eca:	86 ec       	ldi	r24, 0xC6	; 198
   19ecc:	94 e1       	ldi	r25, 0x14	; 20
   19ece:	e4 d5       	rcall	.+3016   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19ed0:	86 ec       	ldi	r24, 0xC6	; 198
   19ed2:	94 e1       	ldi	r25, 0x14	; 20
   19ed4:	50 d4       	rcall	.+2208   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19ed6:	b2 e0       	ldi	r27, 0x02	; 2
   19ed8:	8b 12       	cpse	r8, r27
   19eda:	cd c0       	rjmp	.+410    	; 0x1a076 <_Z24Plot_Status_List_Monitorv+0x6ae>
   19edc:	86 e0       	ldi	r24, 0x06	; 6
   19ede:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19ee2:	84 e6       	ldi	r24, 0x64	; 100
   19ee4:	90 e0       	ldi	r25, 0x00	; 0
   19ee6:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19eea:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19eee:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19ef2:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19ef6:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19efa:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19efe:	a0 62       	ori	r26, 0x20	; 32
   19f00:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19f04:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19f08:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19f0c:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19f10:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19f14:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19f18:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19f1c:	82 60       	ori	r24, 0x02	; 2
   19f1e:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19f22:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19f26:	d8 01       	movw	r26, r16
   19f28:	ed 91       	ld	r30, X+
   19f2a:	8d 01       	movw	r16, r26
   19f2c:	e3 31       	cpi	r30, 0x13	; 19
   19f2e:	68 f0       	brcs	.+26     	; 0x19f4a <_Z24Plot_Status_List_Monitorv+0x582>
   19f30:	f0 e0       	ldi	r31, 0x00	; 0
   19f32:	e7 5c       	subi	r30, 0xC7	; 199
   19f34:	fb 4e       	sbci	r31, 0xEB	; 235
   19f36:	61 e0       	ldi	r22, 0x01	; 1
   19f38:	80 81       	ld	r24, Z
   19f3a:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   19f3e:	68 ec       	ldi	r22, 0xC8	; 200
   19f40:	70 e0       	ldi	r23, 0x00	; 0
   19f42:	80 e0       	ldi	r24, 0x00	; 0
   19f44:	90 e0       	ldi	r25, 0x00	; 0
   19f46:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   19f4a:	a0 16       	cp	r10, r16
   19f4c:	b1 06       	cpc	r11, r17
   19f4e:	59 f7       	brne	.-42     	; 0x19f26 <_Z24Plot_Status_List_Monitorv+0x55e>
   19f50:	ae cf       	rjmp	.-164    	; 0x19eae <_Z24Plot_Status_List_Monitorv+0x4e6>
   19f52:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19f56:	81 30       	cpi	r24, 0x01	; 1
   19f58:	41 f4       	brne	.+16     	; 0x19f6a <_Z24Plot_Status_List_Monitorv+0x5a2>
   19f5a:	62 ed       	ldi	r22, 0xD2	; 210
   19f5c:	79 e2       	ldi	r23, 0x29	; 41
   19f5e:	86 ec       	ldi	r24, 0xC6	; 198
   19f60:	94 e1       	ldi	r25, 0x14	; 20
   19f62:	9a d5       	rcall	.+2868   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19f64:	86 ec       	ldi	r24, 0xC6	; 198
   19f66:	94 e1       	ldi	r25, 0x14	; 20
   19f68:	06 d4       	rcall	.+2060   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19f6a:	b2 e0       	ldi	r27, 0x02	; 2
   19f6c:	8b 12       	cpse	r8, r27
   19f6e:	83 c0       	rjmp	.+262    	; 0x1a076 <_Z24Plot_Status_List_Monitorv+0x6ae>
   19f70:	86 e0       	ldi	r24, 0x06	; 6
   19f72:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   19f76:	84 e6       	ldi	r24, 0x64	; 100
   19f78:	90 e0       	ldi	r25, 0x00	; 0
   19f7a:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   19f7e:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   19f82:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   19f86:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   19f8a:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   19f8e:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   19f92:	a0 62       	ori	r26, 0x20	; 32
   19f94:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   19f98:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   19f9c:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   19fa0:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   19fa4:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   19fa8:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   19fac:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   19fb0:	82 60       	ori	r24, 0x02	; 2
   19fb2:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   19fb6:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   19fba:	d8 01       	movw	r26, r16
   19fbc:	ed 91       	ld	r30, X+
   19fbe:	8d 01       	movw	r16, r26
   19fc0:	e3 31       	cpi	r30, 0x13	; 19
   19fc2:	60 f0       	brcs	.+24     	; 0x19fdc <_Z24Plot_Status_List_Monitorv+0x614>
   19fc4:	f0 e0       	ldi	r31, 0x00	; 0
   19fc6:	e7 5c       	subi	r30, 0xC7	; 199
   19fc8:	fb 4e       	sbci	r31, 0xEB	; 235
   19fca:	61 e0       	ldi	r22, 0x01	; 1
   19fcc:	80 81       	ld	r24, Z
   19fce:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   19fd2:	68 ec       	ldi	r22, 0xC8	; 200
   19fd4:	70 e0       	ldi	r23, 0x00	; 0
   19fd6:	80 e0       	ldi	r24, 0x00	; 0
   19fd8:	90 e0       	ldi	r25, 0x00	; 0
   19fda:	bf d7       	rcall	.+3966   	; 0x1af5a <delay>
   19fdc:	a0 16       	cp	r10, r16
   19fde:	b1 06       	cpc	r11, r17
   19fe0:	61 f7       	brne	.-40     	; 0x19fba <_Z24Plot_Status_List_Monitorv+0x5f2>
   19fe2:	65 cf       	rjmp	.-310    	; 0x19eae <_Z24Plot_Status_List_Monitorv+0x4e6>
   19fe4:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   19fe8:	81 30       	cpi	r24, 0x01	; 1
   19fea:	41 f4       	brne	.+16     	; 0x19ffc <_Z24Plot_Status_List_Monitorv+0x634>
   19fec:	67 e9       	ldi	r22, 0x97	; 151
   19fee:	79 e2       	ldi	r23, 0x29	; 41
   19ff0:	86 ec       	ldi	r24, 0xC6	; 198
   19ff2:	94 e1       	ldi	r25, 0x14	; 20
   19ff4:	51 d5       	rcall	.+2722   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   19ff6:	86 ec       	ldi	r24, 0xC6	; 198
   19ff8:	94 e1       	ldi	r25, 0x14	; 20
   19ffa:	bd d3       	rcall	.+1914   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   19ffc:	b2 e0       	ldi	r27, 0x02	; 2
   19ffe:	8b 12       	cpse	r8, r27
   1a000:	3a c0       	rjmp	.+116    	; 0x1a076 <_Z24Plot_Status_List_Monitorv+0x6ae>
   1a002:	86 e0       	ldi	r24, 0x06	; 6
   1a004:	80 93 ac 13 	sts	0x13AC, r24	; 0x8013ac <_sPump_Parameter+0x8>
   1a008:	84 e6       	ldi	r24, 0x64	; 100
   1a00a:	90 e0       	ldi	r25, 0x00	; 0
   1a00c:	90 93 ed 0c 	sts	0x0CED, r25	; 0x800ced <_gfault_Occure+0x1>
   1a010:	80 93 ec 0c 	sts	0x0CEC, r24	; 0x800cec <_gfault_Occure>
   1a014:	80 91 64 0c 	lds	r24, 0x0C64	; 0x800c64 <_sGSM_Query>
   1a018:	90 91 65 0c 	lds	r25, 0x0C65	; 0x800c65 <_sGSM_Query+0x1>
   1a01c:	a0 91 66 0c 	lds	r26, 0x0C66	; 0x800c66 <_sGSM_Query+0x2>
   1a020:	b0 91 67 0c 	lds	r27, 0x0C67	; 0x800c67 <_sGSM_Query+0x3>
   1a024:	a0 62       	ori	r26, 0x20	; 32
   1a026:	80 93 64 0c 	sts	0x0C64, r24	; 0x800c64 <_sGSM_Query>
   1a02a:	90 93 65 0c 	sts	0x0C65, r25	; 0x800c65 <_sGSM_Query+0x1>
   1a02e:	a0 93 66 0c 	sts	0x0C66, r26	; 0x800c66 <_sGSM_Query+0x2>
   1a032:	b0 93 67 0c 	sts	0x0C67, r27	; 0x800c67 <_sGSM_Query+0x3>
   1a036:	d0 92 6e 14 	sts	0x146E, r13	; 0x80146e <_sRuble_Parameters+0xc0>
   1a03a:	80 91 c6 13 	lds	r24, 0x13C6	; 0x8013c6 <_sRuble_Parameters+0x18>
   1a03e:	90 91 c7 13 	lds	r25, 0x13C7	; 0x8013c7 <_sRuble_Parameters+0x19>
   1a042:	82 60       	ori	r24, 0x02	; 2
   1a044:	90 93 c7 13 	sts	0x13C7, r25	; 0x8013c7 <_sRuble_Parameters+0x19>
   1a048:	80 93 c6 13 	sts	0x13C6, r24	; 0x8013c6 <_sRuble_Parameters+0x18>
   1a04c:	d8 01       	movw	r26, r16
   1a04e:	ed 91       	ld	r30, X+
   1a050:	8d 01       	movw	r16, r26
   1a052:	e3 31       	cpi	r30, 0x13	; 19
   1a054:	60 f0       	brcs	.+24     	; 0x1a06e <_Z24Plot_Status_List_Monitorv+0x6a6>
   1a056:	f0 e0       	ldi	r31, 0x00	; 0
   1a058:	e7 5c       	subi	r30, 0xC7	; 199
   1a05a:	fb 4e       	sbci	r31, 0xEB	; 235
   1a05c:	61 e0       	ldi	r22, 0x01	; 1
   1a05e:	80 81       	ld	r24, Z
   1a060:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1a064:	68 ec       	ldi	r22, 0xC8	; 200
   1a066:	70 e0       	ldi	r23, 0x00	; 0
   1a068:	80 e0       	ldi	r24, 0x00	; 0
   1a06a:	90 e0       	ldi	r25, 0x00	; 0
   1a06c:	76 d7       	rcall	.+3820   	; 0x1af5a <delay>
   1a06e:	a0 16       	cp	r10, r16
   1a070:	b1 06       	cpc	r11, r17
   1a072:	61 f7       	brne	.-40     	; 0x1a04c <_Z24Plot_Status_List_Monitorv+0x684>
   1a074:	1c cf       	rjmp	.-456    	; 0x19eae <_Z24Plot_Status_List_Monitorv+0x4e6>
   1a076:	68 ee       	ldi	r22, 0xE8	; 232
   1a078:	73 e0       	ldi	r23, 0x03	; 3
   1a07a:	80 e0       	ldi	r24, 0x00	; 0
   1a07c:	90 e0       	ldi	r25, 0x00	; 0
   1a07e:	6d d7       	rcall	.+3802   	; 0x1af5a <delay>
   1a080:	b3 e0       	ldi	r27, 0x03	; 3
   1a082:	8b 12       	cpse	r8, r27
   1a084:	31 ce       	rjmp	.-926    	; 0x19ce8 <_Z24Plot_Status_List_Monitorv+0x320>
   1a086:	11 c0       	rjmp	.+34     	; 0x1a0aa <_Z24Plot_Status_List_Monitorv+0x6e2>
   1a088:	8d ee       	ldi	r24, 0xED	; 237
   1a08a:	87 0d       	add	r24, r7
   1a08c:	81 35       	cpi	r24, 0x51	; 81
   1a08e:	68 f4       	brcc	.+26     	; 0x1a0aa <_Z24Plot_Status_List_Monitorv+0x6e2>
   1a090:	e7 2d       	mov	r30, r7
   1a092:	f0 e0       	ldi	r31, 0x00	; 0
   1a094:	e7 5c       	subi	r30, 0xC7	; 199
   1a096:	fb 4e       	sbci	r31, 0xEB	; 235
   1a098:	61 e0       	ldi	r22, 0x01	; 1
   1a09a:	80 81       	ld	r24, Z
   1a09c:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1a0a0:	68 ec       	ldi	r22, 0xC8	; 200
   1a0a2:	70 e0       	ldi	r23, 0x00	; 0
   1a0a4:	80 e0       	ldi	r24, 0x00	; 0
   1a0a6:	90 e0       	ldi	r25, 0x00	; 0
   1a0a8:	58 d7       	rcall	.+3760   	; 0x1af5a <delay>
   1a0aa:	4a 14       	cp	r4, r10
   1a0ac:	5b 04       	cpc	r5, r11
   1a0ae:	09 f0       	breq	.+2      	; 0x1a0b2 <_Z24Plot_Status_List_Monitorv+0x6ea>
   1a0b0:	56 cd       	rjmp	.-1364   	; 0x19b5e <_Z24Plot_Status_List_Monitorv+0x196>
   1a0b2:	f7 01       	movw	r30, r14
   1a0b4:	e1 58       	subi	r30, 0x81	; 129
   1a0b6:	fb 4e       	sbci	r31, 0xEB	; 235
   1a0b8:	10 82       	st	Z, r1
   1a0ba:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a0be:	81 30       	cpi	r24, 0x01	; 1
   1a0c0:	a1 f4       	brne	.+40     	; 0x1a0ea <_Z24Plot_Status_List_Monitorv+0x722>
   1a0c2:	68 e7       	ldi	r22, 0x78	; 120
   1a0c4:	79 e2       	ldi	r23, 0x29	; 41
   1a0c6:	86 ec       	ldi	r24, 0xC6	; 198
   1a0c8:	94 e1       	ldi	r25, 0x14	; 20
   1a0ca:	e6 d4       	rcall	.+2508   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
   1a0cc:	86 ec       	ldi	r24, 0xC6	; 198
   1a0ce:	94 e1       	ldi	r25, 0x14	; 20
   1a0d0:	52 d3       	rcall	.+1700   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
   1a0d2:	cc 24       	eor	r12, r12
   1a0d4:	c3 94       	inc	r12
   1a0d6:	09 c0       	rjmp	.+18     	; 0x1a0ea <_Z24Plot_Status_List_Monitorv+0x722>
   1a0d8:	2f ef       	ldi	r18, 0xFF	; 255
   1a0da:	e2 1a       	sub	r14, r18
   1a0dc:	f2 0a       	sbc	r15, r18
   1a0de:	3e e0       	ldi	r19, 0x0E	; 14
   1a0e0:	e3 16       	cp	r14, r19
   1a0e2:	f1 04       	cpc	r15, r1
   1a0e4:	09 f0       	breq	.+2      	; 0x1a0e8 <_Z24Plot_Status_List_Monitorv+0x720>
   1a0e6:	a0 cc       	rjmp	.-1728   	; 0x19a28 <_Z24Plot_Status_List_Monitorv+0x60>
   1a0e8:	01 c0       	rjmp	.+2      	; 0x1a0ec <_Z24Plot_Status_List_Monitorv+0x724>
   1a0ea:	8c 2d       	mov	r24, r12
   1a0ec:	2b 96       	adiw	r28, 0x0b	; 11
   1a0ee:	0f b6       	in	r0, 0x3f	; 63
   1a0f0:	f8 94       	cli
   1a0f2:	de bf       	out	0x3e, r29	; 62
   1a0f4:	0f be       	out	0x3f, r0	; 63
   1a0f6:	cd bf       	out	0x3d, r28	; 61
   1a0f8:	df 91       	pop	r29
   1a0fa:	cf 91       	pop	r28
   1a0fc:	1f 91       	pop	r17
   1a0fe:	0f 91       	pop	r16
   1a100:	ff 90       	pop	r15
   1a102:	ef 90       	pop	r14
   1a104:	df 90       	pop	r13
   1a106:	cf 90       	pop	r12
   1a108:	bf 90       	pop	r11
   1a10a:	af 90       	pop	r10
   1a10c:	9f 90       	pop	r9
   1a10e:	8f 90       	pop	r8
   1a110:	7f 90       	pop	r7
   1a112:	6f 90       	pop	r6
   1a114:	5f 90       	pop	r5
   1a116:	4f 90       	pop	r4
   1a118:	3f 90       	pop	r3
   1a11a:	2f 90       	pop	r2
   1a11c:	08 95       	ret

0001a11e <_Z14Lora_Operationv>:
		}break;
	}
}

void Lora_Operation(void)
{
   1a11e:	0f 93       	push	r16
   1a120:	1f 93       	push	r17
   1a122:	cf 93       	push	r28
   1a124:	df 93       	push	r29
   1a126:	00 d0       	rcall	.+0      	; 0x1a128 <_Z14Lora_Operationv+0xa>
   1a128:	00 d0       	rcall	.+0      	; 0x1a12a <_Z14Lora_Operationv+0xc>
   1a12a:	cd b7       	in	r28, 0x3d	; 61
   1a12c:	de b7       	in	r29, 0x3e	; 62
	unsigned char temp_id[_kVALVE_ID_LEN],i;
	
	if(_kLORA_DATA_AVAIALABLE())     /* check weather data is available */
   1a12e:	0e 94 0b 66 	call	0xcc16	; 0xcc16 <_Z14Lora_Availablev>
   1a132:	88 23       	and	r24, r24
   1a134:	09 f4       	brne	.+2      	; 0x1a138 <_Z14Lora_Operationv+0x1a>
   1a136:	45 c0       	rjmp	.+138    	; 0x1a1c2 <_Z14Lora_Operationv+0xa4>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   1a138:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a13c:	81 30       	cpi	r24, 0x01	; 1
   1a13e:	41 f4       	brne	.+16     	; 0x1a150 <_Z14Lora_Operationv+0x32>
		{
			_kSERAIL_MON_WRITE("Lora Data Recived");                /* for debugging purpose */
   1a140:	69 e6       	ldi	r22, 0x69	; 105
   1a142:	7b e3       	ldi	r23, 0x3B	; 59
   1a144:	86 ec       	ldi	r24, 0xC6	; 198
   1a146:	94 e1       	ldi	r25, 0x14	; 20
   1a148:	a7 d4       	rcall	.+2382   	; 0x1aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   1a14a:	86 ec       	ldi	r24, 0xC6	; 198
   1a14c:	94 e1       	ldi	r25, 0x14	; 20
   1a14e:	13 d3       	rcall	.+1574   	; 0x1a776 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
   1a150:	0e 94 0f 66 	call	0xcc1e	; 0xcc1e <_Z17Lora_Data_Receivev>
   1a154:	88 23       	and	r24, r24
   1a156:	a9 f1       	breq	.+106    	; 0x1a1c2 <_Z14Lora_Operationv+0xa4>
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   1a158:	80 91 ac 14 	lds	r24, 0x14AC	; 0x8014ac <_sRuble_Parameters+0xfe>
   1a15c:	81 30       	cpi	r24, 0x01	; 1
   1a15e:	11 f4       	brne	.+4      	; 0x1a164 <_Z14Lora_Operationv+0x46>
   1a160:	10 e0       	ldi	r17, 0x00	; 0
   1a162:	08 c0       	rjmp	.+16     	; 0x1a174 <_Z14Lora_Operationv+0x56>
   1a164:	a9 e0       	ldi	r26, 0x09	; 9
   1a166:	b4 e1       	ldi	r27, 0x14	; 20
   1a168:	fe 01       	movw	r30, r28
   1a16a:	31 96       	adiw	r30, 0x01	; 1
   1a16c:	ce 01       	movw	r24, r28
   1a16e:	07 96       	adiw	r24, 0x07	; 7
   1a170:	8f 01       	movw	r16, r30
   1a172:	0c c0       	rjmp	.+24     	; 0x1a18c <_Z14Lora_Operationv+0x6e>
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   1a174:	e1 2f       	mov	r30, r17
   1a176:	f0 e0       	ldi	r31, 0x00	; 0
   1a178:	e7 5f       	subi	r30, 0xF7	; 247
   1a17a:	fb 4e       	sbci	r31, 0xEB	; 235
   1a17c:	60 81       	ld	r22, Z
   1a17e:	66 23       	and	r22, r22
   1a180:	89 f3       	breq	.-30     	; 0x1a164 <_Z14Lora_Operationv+0x46>
				{
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
   1a182:	86 ec       	ldi	r24, 0xC6	; 198
   1a184:	94 e1       	ldi	r25, 0x14	; 20
   1a186:	ad d2       	rcall	.+1370   	; 0x1a6e2 <_ZN14HardwareSerial5writeEh>
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   1a188:	1f 5f       	subi	r17, 0xFF	; 255
   1a18a:	f4 cf       	rjmp	.-24     	; 0x1a174 <_Z14Lora_Operationv+0x56>
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
   1a18c:	2d 91       	ld	r18, X+
   1a18e:	21 93       	st	Z+, r18
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
				}
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
   1a190:	e8 17       	cp	r30, r24
   1a192:	f9 07       	cpc	r31, r25
   1a194:	d9 f7       	brne	.-10     	; 0x1a18c <_Z14Lora_Operationv+0x6e>
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
			}
			
			if(!Update_Lira_Sensor_Data(temp_id))    /* check weather is lira node has send the packet */
   1a196:	c8 01       	movw	r24, r16
   1a198:	0e 94 92 7f 	call	0xff24	; 0xff24 <_Z23Update_Lira_Sensor_DataPh>
   1a19c:	81 11       	cpse	r24, r1
   1a19e:	11 c0       	rjmp	.+34     	; 0x1a1c2 <_Z14Lora_Operationv+0xa4>
			{
				if(!Update_Euro_Valve_Data(temp_id))   /* check weather EURO valve have sent the packet */
   1a1a0:	c8 01       	movw	r24, r16
   1a1a2:	0e 94 d5 5c 	call	0xb9aa	; 0xb9aa <_Z22Update_Euro_Valve_DataPh>
   1a1a6:	81 11       	cpse	r24, r1
   1a1a8:	0c c0       	rjmp	.+24     	; 0x1a1c2 <_Z14Lora_Operationv+0xa4>
				{
					if(!Update_Wireless_Pump_Data(temp_id))
   1a1aa:	c8 01       	movw	r24, r16
   1a1ac:	0e 94 c6 5f 	call	0xbf8c	; 0xbf8c <_Z25Update_Wireless_Pump_DataPh>
   1a1b0:	81 11       	cpse	r24, r1
   1a1b2:	07 c0       	rjmp	.+14     	; 0x1a1c2 <_Z14Lora_Operationv+0xa4>
					{
						memset(_sRuble_Parameters.Lora_Data_Rx,0,sizeof(_sRuble_Parameters.Lora_Data_Rx));  /* discard the package */
   1a1b4:	84 e1       	ldi	r24, 0x14	; 20
   1a1b6:	e9 e0       	ldi	r30, 0x09	; 9
   1a1b8:	f4 e1       	ldi	r31, 0x14	; 20
   1a1ba:	df 01       	movw	r26, r30
   1a1bc:	1d 92       	st	X+, r1
   1a1be:	8a 95       	dec	r24
   1a1c0:	e9 f7       	brne	.-6      	; 0x1a1bc <_Z14Lora_Operationv+0x9e>
					}	
				}
			}
		}
	}
}
   1a1c2:	26 96       	adiw	r28, 0x06	; 6
   1a1c4:	0f b6       	in	r0, 0x3f	; 63
   1a1c6:	f8 94       	cli
   1a1c8:	de bf       	out	0x3e, r29	; 62
   1a1ca:	0f be       	out	0x3f, r0	; 63
   1a1cc:	cd bf       	out	0x3d, r28	; 61
   1a1ce:	df 91       	pop	r29
   1a1d0:	cf 91       	pop	r28
   1a1d2:	1f 91       	pop	r17
   1a1d4:	0f 91       	pop	r16
   1a1d6:	08 95       	ret

0001a1d8 <__subsf3>:
   1a1d8:	50 58       	subi	r21, 0x80	; 128

0001a1da <__addsf3>:
   1a1da:	bb 27       	eor	r27, r27
   1a1dc:	aa 27       	eor	r26, r26
   1a1de:	0e d0       	rcall	.+28     	; 0x1a1fc <__addsf3x>
   1a1e0:	70 c1       	rjmp	.+736    	; 0x1a4c2 <__fp_round>
   1a1e2:	61 d1       	rcall	.+706    	; 0x1a4a6 <__fp_pscA>
   1a1e4:	30 f0       	brcs	.+12     	; 0x1a1f2 <__addsf3+0x18>
   1a1e6:	66 d1       	rcall	.+716    	; 0x1a4b4 <__fp_pscB>
   1a1e8:	20 f0       	brcs	.+8      	; 0x1a1f2 <__addsf3+0x18>
   1a1ea:	31 f4       	brne	.+12     	; 0x1a1f8 <__addsf3+0x1e>
   1a1ec:	9f 3f       	cpi	r25, 0xFF	; 255
   1a1ee:	11 f4       	brne	.+4      	; 0x1a1f4 <__addsf3+0x1a>
   1a1f0:	1e f4       	brtc	.+6      	; 0x1a1f8 <__addsf3+0x1e>
   1a1f2:	56 c1       	rjmp	.+684    	; 0x1a4a0 <__fp_nan>
   1a1f4:	0e f4       	brtc	.+2      	; 0x1a1f8 <__addsf3+0x1e>
   1a1f6:	e0 95       	com	r30
   1a1f8:	e7 fb       	bst	r30, 7
   1a1fa:	4c c1       	rjmp	.+664    	; 0x1a494 <__fp_inf>

0001a1fc <__addsf3x>:
   1a1fc:	e9 2f       	mov	r30, r25
   1a1fe:	72 d1       	rcall	.+740    	; 0x1a4e4 <__fp_split3>
   1a200:	80 f3       	brcs	.-32     	; 0x1a1e2 <__addsf3+0x8>
   1a202:	ba 17       	cp	r27, r26
   1a204:	62 07       	cpc	r22, r18
   1a206:	73 07       	cpc	r23, r19
   1a208:	84 07       	cpc	r24, r20
   1a20a:	95 07       	cpc	r25, r21
   1a20c:	18 f0       	brcs	.+6      	; 0x1a214 <__addsf3x+0x18>
   1a20e:	71 f4       	brne	.+28     	; 0x1a22c <__addsf3x+0x30>
   1a210:	9e f5       	brtc	.+102    	; 0x1a278 <__addsf3x+0x7c>
   1a212:	8a c1       	rjmp	.+788    	; 0x1a528 <__fp_zero>
   1a214:	0e f4       	brtc	.+2      	; 0x1a218 <__addsf3x+0x1c>
   1a216:	e0 95       	com	r30
   1a218:	0b 2e       	mov	r0, r27
   1a21a:	ba 2f       	mov	r27, r26
   1a21c:	a0 2d       	mov	r26, r0
   1a21e:	0b 01       	movw	r0, r22
   1a220:	b9 01       	movw	r22, r18
   1a222:	90 01       	movw	r18, r0
   1a224:	0c 01       	movw	r0, r24
   1a226:	ca 01       	movw	r24, r20
   1a228:	a0 01       	movw	r20, r0
   1a22a:	11 24       	eor	r1, r1
   1a22c:	ff 27       	eor	r31, r31
   1a22e:	59 1b       	sub	r21, r25
   1a230:	99 f0       	breq	.+38     	; 0x1a258 <__addsf3x+0x5c>
   1a232:	59 3f       	cpi	r21, 0xF9	; 249
   1a234:	50 f4       	brcc	.+20     	; 0x1a24a <__addsf3x+0x4e>
   1a236:	50 3e       	cpi	r21, 0xE0	; 224
   1a238:	68 f1       	brcs	.+90     	; 0x1a294 <__addsf3x+0x98>
   1a23a:	1a 16       	cp	r1, r26
   1a23c:	f0 40       	sbci	r31, 0x00	; 0
   1a23e:	a2 2f       	mov	r26, r18
   1a240:	23 2f       	mov	r18, r19
   1a242:	34 2f       	mov	r19, r20
   1a244:	44 27       	eor	r20, r20
   1a246:	58 5f       	subi	r21, 0xF8	; 248
   1a248:	f3 cf       	rjmp	.-26     	; 0x1a230 <__addsf3x+0x34>
   1a24a:	46 95       	lsr	r20
   1a24c:	37 95       	ror	r19
   1a24e:	27 95       	ror	r18
   1a250:	a7 95       	ror	r26
   1a252:	f0 40       	sbci	r31, 0x00	; 0
   1a254:	53 95       	inc	r21
   1a256:	c9 f7       	brne	.-14     	; 0x1a24a <__addsf3x+0x4e>
   1a258:	7e f4       	brtc	.+30     	; 0x1a278 <__addsf3x+0x7c>
   1a25a:	1f 16       	cp	r1, r31
   1a25c:	ba 0b       	sbc	r27, r26
   1a25e:	62 0b       	sbc	r22, r18
   1a260:	73 0b       	sbc	r23, r19
   1a262:	84 0b       	sbc	r24, r20
   1a264:	ba f0       	brmi	.+46     	; 0x1a294 <__addsf3x+0x98>
   1a266:	91 50       	subi	r25, 0x01	; 1
   1a268:	a1 f0       	breq	.+40     	; 0x1a292 <__addsf3x+0x96>
   1a26a:	ff 0f       	add	r31, r31
   1a26c:	bb 1f       	adc	r27, r27
   1a26e:	66 1f       	adc	r22, r22
   1a270:	77 1f       	adc	r23, r23
   1a272:	88 1f       	adc	r24, r24
   1a274:	c2 f7       	brpl	.-16     	; 0x1a266 <__addsf3x+0x6a>
   1a276:	0e c0       	rjmp	.+28     	; 0x1a294 <__addsf3x+0x98>
   1a278:	ba 0f       	add	r27, r26
   1a27a:	62 1f       	adc	r22, r18
   1a27c:	73 1f       	adc	r23, r19
   1a27e:	84 1f       	adc	r24, r20
   1a280:	48 f4       	brcc	.+18     	; 0x1a294 <__addsf3x+0x98>
   1a282:	87 95       	ror	r24
   1a284:	77 95       	ror	r23
   1a286:	67 95       	ror	r22
   1a288:	b7 95       	ror	r27
   1a28a:	f7 95       	ror	r31
   1a28c:	9e 3f       	cpi	r25, 0xFE	; 254
   1a28e:	08 f0       	brcs	.+2      	; 0x1a292 <__addsf3x+0x96>
   1a290:	b3 cf       	rjmp	.-154    	; 0x1a1f8 <__addsf3+0x1e>
   1a292:	93 95       	inc	r25
   1a294:	88 0f       	add	r24, r24
   1a296:	08 f0       	brcs	.+2      	; 0x1a29a <__addsf3x+0x9e>
   1a298:	99 27       	eor	r25, r25
   1a29a:	ee 0f       	add	r30, r30
   1a29c:	97 95       	ror	r25
   1a29e:	87 95       	ror	r24
   1a2a0:	08 95       	ret

0001a2a2 <__cmpsf2>:
   1a2a2:	d4 d0       	rcall	.+424    	; 0x1a44c <__fp_cmp>
   1a2a4:	08 f4       	brcc	.+2      	; 0x1a2a8 <__cmpsf2+0x6>
   1a2a6:	81 e0       	ldi	r24, 0x01	; 1
   1a2a8:	08 95       	ret

0001a2aa <__divsf3>:
   1a2aa:	0c d0       	rcall	.+24     	; 0x1a2c4 <__divsf3x>
   1a2ac:	0a c1       	rjmp	.+532    	; 0x1a4c2 <__fp_round>
   1a2ae:	02 d1       	rcall	.+516    	; 0x1a4b4 <__fp_pscB>
   1a2b0:	40 f0       	brcs	.+16     	; 0x1a2c2 <__divsf3+0x18>
   1a2b2:	f9 d0       	rcall	.+498    	; 0x1a4a6 <__fp_pscA>
   1a2b4:	30 f0       	brcs	.+12     	; 0x1a2c2 <__divsf3+0x18>
   1a2b6:	21 f4       	brne	.+8      	; 0x1a2c0 <__divsf3+0x16>
   1a2b8:	5f 3f       	cpi	r21, 0xFF	; 255
   1a2ba:	19 f0       	breq	.+6      	; 0x1a2c2 <__divsf3+0x18>
   1a2bc:	eb c0       	rjmp	.+470    	; 0x1a494 <__fp_inf>
   1a2be:	51 11       	cpse	r21, r1
   1a2c0:	34 c1       	rjmp	.+616    	; 0x1a52a <__fp_szero>
   1a2c2:	ee c0       	rjmp	.+476    	; 0x1a4a0 <__fp_nan>

0001a2c4 <__divsf3x>:
   1a2c4:	0f d1       	rcall	.+542    	; 0x1a4e4 <__fp_split3>
   1a2c6:	98 f3       	brcs	.-26     	; 0x1a2ae <__divsf3+0x4>

0001a2c8 <__divsf3_pse>:
   1a2c8:	99 23       	and	r25, r25
   1a2ca:	c9 f3       	breq	.-14     	; 0x1a2be <__divsf3+0x14>
   1a2cc:	55 23       	and	r21, r21
   1a2ce:	b1 f3       	breq	.-20     	; 0x1a2bc <__divsf3+0x12>
   1a2d0:	95 1b       	sub	r25, r21
   1a2d2:	55 0b       	sbc	r21, r21
   1a2d4:	bb 27       	eor	r27, r27
   1a2d6:	aa 27       	eor	r26, r26
   1a2d8:	62 17       	cp	r22, r18
   1a2da:	73 07       	cpc	r23, r19
   1a2dc:	84 07       	cpc	r24, r20
   1a2de:	38 f0       	brcs	.+14     	; 0x1a2ee <__divsf3_pse+0x26>
   1a2e0:	9f 5f       	subi	r25, 0xFF	; 255
   1a2e2:	5f 4f       	sbci	r21, 0xFF	; 255
   1a2e4:	22 0f       	add	r18, r18
   1a2e6:	33 1f       	adc	r19, r19
   1a2e8:	44 1f       	adc	r20, r20
   1a2ea:	aa 1f       	adc	r26, r26
   1a2ec:	a9 f3       	breq	.-22     	; 0x1a2d8 <__divsf3_pse+0x10>
   1a2ee:	33 d0       	rcall	.+102    	; 0x1a356 <__divsf3_pse+0x8e>
   1a2f0:	0e 2e       	mov	r0, r30
   1a2f2:	3a f0       	brmi	.+14     	; 0x1a302 <__divsf3_pse+0x3a>
   1a2f4:	e0 e8       	ldi	r30, 0x80	; 128
   1a2f6:	30 d0       	rcall	.+96     	; 0x1a358 <__divsf3_pse+0x90>
   1a2f8:	91 50       	subi	r25, 0x01	; 1
   1a2fa:	50 40       	sbci	r21, 0x00	; 0
   1a2fc:	e6 95       	lsr	r30
   1a2fe:	00 1c       	adc	r0, r0
   1a300:	ca f7       	brpl	.-14     	; 0x1a2f4 <__divsf3_pse+0x2c>
   1a302:	29 d0       	rcall	.+82     	; 0x1a356 <__divsf3_pse+0x8e>
   1a304:	fe 2f       	mov	r31, r30
   1a306:	27 d0       	rcall	.+78     	; 0x1a356 <__divsf3_pse+0x8e>
   1a308:	66 0f       	add	r22, r22
   1a30a:	77 1f       	adc	r23, r23
   1a30c:	88 1f       	adc	r24, r24
   1a30e:	bb 1f       	adc	r27, r27
   1a310:	26 17       	cp	r18, r22
   1a312:	37 07       	cpc	r19, r23
   1a314:	48 07       	cpc	r20, r24
   1a316:	ab 07       	cpc	r26, r27
   1a318:	b0 e8       	ldi	r27, 0x80	; 128
   1a31a:	09 f0       	breq	.+2      	; 0x1a31e <__divsf3_pse+0x56>
   1a31c:	bb 0b       	sbc	r27, r27
   1a31e:	80 2d       	mov	r24, r0
   1a320:	bf 01       	movw	r22, r30
   1a322:	ff 27       	eor	r31, r31
   1a324:	93 58       	subi	r25, 0x83	; 131
   1a326:	5f 4f       	sbci	r21, 0xFF	; 255
   1a328:	2a f0       	brmi	.+10     	; 0x1a334 <__divsf3_pse+0x6c>
   1a32a:	9e 3f       	cpi	r25, 0xFE	; 254
   1a32c:	51 05       	cpc	r21, r1
   1a32e:	68 f0       	brcs	.+26     	; 0x1a34a <__divsf3_pse+0x82>
   1a330:	b1 c0       	rjmp	.+354    	; 0x1a494 <__fp_inf>
   1a332:	fb c0       	rjmp	.+502    	; 0x1a52a <__fp_szero>
   1a334:	5f 3f       	cpi	r21, 0xFF	; 255
   1a336:	ec f3       	brlt	.-6      	; 0x1a332 <__divsf3_pse+0x6a>
   1a338:	98 3e       	cpi	r25, 0xE8	; 232
   1a33a:	dc f3       	brlt	.-10     	; 0x1a332 <__divsf3_pse+0x6a>
   1a33c:	86 95       	lsr	r24
   1a33e:	77 95       	ror	r23
   1a340:	67 95       	ror	r22
   1a342:	b7 95       	ror	r27
   1a344:	f7 95       	ror	r31
   1a346:	9f 5f       	subi	r25, 0xFF	; 255
   1a348:	c9 f7       	brne	.-14     	; 0x1a33c <__divsf3_pse+0x74>
   1a34a:	88 0f       	add	r24, r24
   1a34c:	91 1d       	adc	r25, r1
   1a34e:	96 95       	lsr	r25
   1a350:	87 95       	ror	r24
   1a352:	97 f9       	bld	r25, 7
   1a354:	08 95       	ret
   1a356:	e1 e0       	ldi	r30, 0x01	; 1
   1a358:	66 0f       	add	r22, r22
   1a35a:	77 1f       	adc	r23, r23
   1a35c:	88 1f       	adc	r24, r24
   1a35e:	bb 1f       	adc	r27, r27
   1a360:	62 17       	cp	r22, r18
   1a362:	73 07       	cpc	r23, r19
   1a364:	84 07       	cpc	r24, r20
   1a366:	ba 07       	cpc	r27, r26
   1a368:	20 f0       	brcs	.+8      	; 0x1a372 <__divsf3_pse+0xaa>
   1a36a:	62 1b       	sub	r22, r18
   1a36c:	73 0b       	sbc	r23, r19
   1a36e:	84 0b       	sbc	r24, r20
   1a370:	ba 0b       	sbc	r27, r26
   1a372:	ee 1f       	adc	r30, r30
   1a374:	88 f7       	brcc	.-30     	; 0x1a358 <__divsf3_pse+0x90>
   1a376:	e0 95       	com	r30
   1a378:	08 95       	ret

0001a37a <__fixunssfsi>:
   1a37a:	bc d0       	rcall	.+376    	; 0x1a4f4 <__fp_splitA>
   1a37c:	88 f0       	brcs	.+34     	; 0x1a3a0 <__fixunssfsi+0x26>
   1a37e:	9f 57       	subi	r25, 0x7F	; 127
   1a380:	90 f0       	brcs	.+36     	; 0x1a3a6 <__fixunssfsi+0x2c>
   1a382:	b9 2f       	mov	r27, r25
   1a384:	99 27       	eor	r25, r25
   1a386:	b7 51       	subi	r27, 0x17	; 23
   1a388:	a0 f0       	brcs	.+40     	; 0x1a3b2 <__fixunssfsi+0x38>
   1a38a:	d1 f0       	breq	.+52     	; 0x1a3c0 <__fixunssfsi+0x46>
   1a38c:	66 0f       	add	r22, r22
   1a38e:	77 1f       	adc	r23, r23
   1a390:	88 1f       	adc	r24, r24
   1a392:	99 1f       	adc	r25, r25
   1a394:	1a f0       	brmi	.+6      	; 0x1a39c <__fixunssfsi+0x22>
   1a396:	ba 95       	dec	r27
   1a398:	c9 f7       	brne	.-14     	; 0x1a38c <__fixunssfsi+0x12>
   1a39a:	12 c0       	rjmp	.+36     	; 0x1a3c0 <__fixunssfsi+0x46>
   1a39c:	b1 30       	cpi	r27, 0x01	; 1
   1a39e:	81 f0       	breq	.+32     	; 0x1a3c0 <__fixunssfsi+0x46>
   1a3a0:	c3 d0       	rcall	.+390    	; 0x1a528 <__fp_zero>
   1a3a2:	b1 e0       	ldi	r27, 0x01	; 1
   1a3a4:	08 95       	ret
   1a3a6:	c0 c0       	rjmp	.+384    	; 0x1a528 <__fp_zero>
   1a3a8:	67 2f       	mov	r22, r23
   1a3aa:	78 2f       	mov	r23, r24
   1a3ac:	88 27       	eor	r24, r24
   1a3ae:	b8 5f       	subi	r27, 0xF8	; 248
   1a3b0:	39 f0       	breq	.+14     	; 0x1a3c0 <__fixunssfsi+0x46>
   1a3b2:	b9 3f       	cpi	r27, 0xF9	; 249
   1a3b4:	cc f3       	brlt	.-14     	; 0x1a3a8 <__fixunssfsi+0x2e>
   1a3b6:	86 95       	lsr	r24
   1a3b8:	77 95       	ror	r23
   1a3ba:	67 95       	ror	r22
   1a3bc:	b3 95       	inc	r27
   1a3be:	d9 f7       	brne	.-10     	; 0x1a3b6 <__fixunssfsi+0x3c>
   1a3c0:	3e f4       	brtc	.+14     	; 0x1a3d0 <__fixunssfsi+0x56>
   1a3c2:	90 95       	com	r25
   1a3c4:	80 95       	com	r24
   1a3c6:	70 95       	com	r23
   1a3c8:	61 95       	neg	r22
   1a3ca:	7f 4f       	sbci	r23, 0xFF	; 255
   1a3cc:	8f 4f       	sbci	r24, 0xFF	; 255
   1a3ce:	9f 4f       	sbci	r25, 0xFF	; 255
   1a3d0:	08 95       	ret

0001a3d2 <__floatunsisf>:
   1a3d2:	e8 94       	clt
   1a3d4:	09 c0       	rjmp	.+18     	; 0x1a3e8 <__floatsisf+0x12>

0001a3d6 <__floatsisf>:
   1a3d6:	97 fb       	bst	r25, 7
   1a3d8:	3e f4       	brtc	.+14     	; 0x1a3e8 <__floatsisf+0x12>
   1a3da:	90 95       	com	r25
   1a3dc:	80 95       	com	r24
   1a3de:	70 95       	com	r23
   1a3e0:	61 95       	neg	r22
   1a3e2:	7f 4f       	sbci	r23, 0xFF	; 255
   1a3e4:	8f 4f       	sbci	r24, 0xFF	; 255
   1a3e6:	9f 4f       	sbci	r25, 0xFF	; 255
   1a3e8:	99 23       	and	r25, r25
   1a3ea:	a9 f0       	breq	.+42     	; 0x1a416 <__floatsisf+0x40>
   1a3ec:	f9 2f       	mov	r31, r25
   1a3ee:	96 e9       	ldi	r25, 0x96	; 150
   1a3f0:	bb 27       	eor	r27, r27
   1a3f2:	93 95       	inc	r25
   1a3f4:	f6 95       	lsr	r31
   1a3f6:	87 95       	ror	r24
   1a3f8:	77 95       	ror	r23
   1a3fa:	67 95       	ror	r22
   1a3fc:	b7 95       	ror	r27
   1a3fe:	f1 11       	cpse	r31, r1
   1a400:	f8 cf       	rjmp	.-16     	; 0x1a3f2 <__floatsisf+0x1c>
   1a402:	fa f4       	brpl	.+62     	; 0x1a442 <__floatsisf+0x6c>
   1a404:	bb 0f       	add	r27, r27
   1a406:	11 f4       	brne	.+4      	; 0x1a40c <__floatsisf+0x36>
   1a408:	60 ff       	sbrs	r22, 0
   1a40a:	1b c0       	rjmp	.+54     	; 0x1a442 <__floatsisf+0x6c>
   1a40c:	6f 5f       	subi	r22, 0xFF	; 255
   1a40e:	7f 4f       	sbci	r23, 0xFF	; 255
   1a410:	8f 4f       	sbci	r24, 0xFF	; 255
   1a412:	9f 4f       	sbci	r25, 0xFF	; 255
   1a414:	16 c0       	rjmp	.+44     	; 0x1a442 <__floatsisf+0x6c>
   1a416:	88 23       	and	r24, r24
   1a418:	11 f0       	breq	.+4      	; 0x1a41e <__floatsisf+0x48>
   1a41a:	96 e9       	ldi	r25, 0x96	; 150
   1a41c:	11 c0       	rjmp	.+34     	; 0x1a440 <__floatsisf+0x6a>
   1a41e:	77 23       	and	r23, r23
   1a420:	21 f0       	breq	.+8      	; 0x1a42a <__floatsisf+0x54>
   1a422:	9e e8       	ldi	r25, 0x8E	; 142
   1a424:	87 2f       	mov	r24, r23
   1a426:	76 2f       	mov	r23, r22
   1a428:	05 c0       	rjmp	.+10     	; 0x1a434 <__floatsisf+0x5e>
   1a42a:	66 23       	and	r22, r22
   1a42c:	71 f0       	breq	.+28     	; 0x1a44a <__floatsisf+0x74>
   1a42e:	96 e8       	ldi	r25, 0x86	; 134
   1a430:	86 2f       	mov	r24, r22
   1a432:	70 e0       	ldi	r23, 0x00	; 0
   1a434:	60 e0       	ldi	r22, 0x00	; 0
   1a436:	2a f0       	brmi	.+10     	; 0x1a442 <__floatsisf+0x6c>
   1a438:	9a 95       	dec	r25
   1a43a:	66 0f       	add	r22, r22
   1a43c:	77 1f       	adc	r23, r23
   1a43e:	88 1f       	adc	r24, r24
   1a440:	da f7       	brpl	.-10     	; 0x1a438 <__floatsisf+0x62>
   1a442:	88 0f       	add	r24, r24
   1a444:	96 95       	lsr	r25
   1a446:	87 95       	ror	r24
   1a448:	97 f9       	bld	r25, 7
   1a44a:	08 95       	ret

0001a44c <__fp_cmp>:
   1a44c:	99 0f       	add	r25, r25
   1a44e:	00 08       	sbc	r0, r0
   1a450:	55 0f       	add	r21, r21
   1a452:	aa 0b       	sbc	r26, r26
   1a454:	e0 e8       	ldi	r30, 0x80	; 128
   1a456:	fe ef       	ldi	r31, 0xFE	; 254
   1a458:	16 16       	cp	r1, r22
   1a45a:	17 06       	cpc	r1, r23
   1a45c:	e8 07       	cpc	r30, r24
   1a45e:	f9 07       	cpc	r31, r25
   1a460:	c0 f0       	brcs	.+48     	; 0x1a492 <__fp_cmp+0x46>
   1a462:	12 16       	cp	r1, r18
   1a464:	13 06       	cpc	r1, r19
   1a466:	e4 07       	cpc	r30, r20
   1a468:	f5 07       	cpc	r31, r21
   1a46a:	98 f0       	brcs	.+38     	; 0x1a492 <__fp_cmp+0x46>
   1a46c:	62 1b       	sub	r22, r18
   1a46e:	73 0b       	sbc	r23, r19
   1a470:	84 0b       	sbc	r24, r20
   1a472:	95 0b       	sbc	r25, r21
   1a474:	39 f4       	brne	.+14     	; 0x1a484 <__fp_cmp+0x38>
   1a476:	0a 26       	eor	r0, r26
   1a478:	61 f0       	breq	.+24     	; 0x1a492 <__fp_cmp+0x46>
   1a47a:	23 2b       	or	r18, r19
   1a47c:	24 2b       	or	r18, r20
   1a47e:	25 2b       	or	r18, r21
   1a480:	21 f4       	brne	.+8      	; 0x1a48a <__fp_cmp+0x3e>
   1a482:	08 95       	ret
   1a484:	0a 26       	eor	r0, r26
   1a486:	09 f4       	brne	.+2      	; 0x1a48a <__fp_cmp+0x3e>
   1a488:	a1 40       	sbci	r26, 0x01	; 1
   1a48a:	a6 95       	lsr	r26
   1a48c:	8f ef       	ldi	r24, 0xFF	; 255
   1a48e:	81 1d       	adc	r24, r1
   1a490:	81 1d       	adc	r24, r1
   1a492:	08 95       	ret

0001a494 <__fp_inf>:
   1a494:	97 f9       	bld	r25, 7
   1a496:	9f 67       	ori	r25, 0x7F	; 127
   1a498:	80 e8       	ldi	r24, 0x80	; 128
   1a49a:	70 e0       	ldi	r23, 0x00	; 0
   1a49c:	60 e0       	ldi	r22, 0x00	; 0
   1a49e:	08 95       	ret

0001a4a0 <__fp_nan>:
   1a4a0:	9f ef       	ldi	r25, 0xFF	; 255
   1a4a2:	80 ec       	ldi	r24, 0xC0	; 192
   1a4a4:	08 95       	ret

0001a4a6 <__fp_pscA>:
   1a4a6:	00 24       	eor	r0, r0
   1a4a8:	0a 94       	dec	r0
   1a4aa:	16 16       	cp	r1, r22
   1a4ac:	17 06       	cpc	r1, r23
   1a4ae:	18 06       	cpc	r1, r24
   1a4b0:	09 06       	cpc	r0, r25
   1a4b2:	08 95       	ret

0001a4b4 <__fp_pscB>:
   1a4b4:	00 24       	eor	r0, r0
   1a4b6:	0a 94       	dec	r0
   1a4b8:	12 16       	cp	r1, r18
   1a4ba:	13 06       	cpc	r1, r19
   1a4bc:	14 06       	cpc	r1, r20
   1a4be:	05 06       	cpc	r0, r21
   1a4c0:	08 95       	ret

0001a4c2 <__fp_round>:
   1a4c2:	09 2e       	mov	r0, r25
   1a4c4:	03 94       	inc	r0
   1a4c6:	00 0c       	add	r0, r0
   1a4c8:	11 f4       	brne	.+4      	; 0x1a4ce <__fp_round+0xc>
   1a4ca:	88 23       	and	r24, r24
   1a4cc:	52 f0       	brmi	.+20     	; 0x1a4e2 <__fp_round+0x20>
   1a4ce:	bb 0f       	add	r27, r27
   1a4d0:	40 f4       	brcc	.+16     	; 0x1a4e2 <__fp_round+0x20>
   1a4d2:	bf 2b       	or	r27, r31
   1a4d4:	11 f4       	brne	.+4      	; 0x1a4da <__fp_round+0x18>
   1a4d6:	60 ff       	sbrs	r22, 0
   1a4d8:	04 c0       	rjmp	.+8      	; 0x1a4e2 <__fp_round+0x20>
   1a4da:	6f 5f       	subi	r22, 0xFF	; 255
   1a4dc:	7f 4f       	sbci	r23, 0xFF	; 255
   1a4de:	8f 4f       	sbci	r24, 0xFF	; 255
   1a4e0:	9f 4f       	sbci	r25, 0xFF	; 255
   1a4e2:	08 95       	ret

0001a4e4 <__fp_split3>:
   1a4e4:	57 fd       	sbrc	r21, 7
   1a4e6:	90 58       	subi	r25, 0x80	; 128
   1a4e8:	44 0f       	add	r20, r20
   1a4ea:	55 1f       	adc	r21, r21
   1a4ec:	59 f0       	breq	.+22     	; 0x1a504 <__fp_splitA+0x10>
   1a4ee:	5f 3f       	cpi	r21, 0xFF	; 255
   1a4f0:	71 f0       	breq	.+28     	; 0x1a50e <__fp_splitA+0x1a>
   1a4f2:	47 95       	ror	r20

0001a4f4 <__fp_splitA>:
   1a4f4:	88 0f       	add	r24, r24
   1a4f6:	97 fb       	bst	r25, 7
   1a4f8:	99 1f       	adc	r25, r25
   1a4fa:	61 f0       	breq	.+24     	; 0x1a514 <__fp_splitA+0x20>
   1a4fc:	9f 3f       	cpi	r25, 0xFF	; 255
   1a4fe:	79 f0       	breq	.+30     	; 0x1a51e <__fp_splitA+0x2a>
   1a500:	87 95       	ror	r24
   1a502:	08 95       	ret
   1a504:	12 16       	cp	r1, r18
   1a506:	13 06       	cpc	r1, r19
   1a508:	14 06       	cpc	r1, r20
   1a50a:	55 1f       	adc	r21, r21
   1a50c:	f2 cf       	rjmp	.-28     	; 0x1a4f2 <__fp_split3+0xe>
   1a50e:	46 95       	lsr	r20
   1a510:	f1 df       	rcall	.-30     	; 0x1a4f4 <__fp_splitA>
   1a512:	08 c0       	rjmp	.+16     	; 0x1a524 <__fp_splitA+0x30>
   1a514:	16 16       	cp	r1, r22
   1a516:	17 06       	cpc	r1, r23
   1a518:	18 06       	cpc	r1, r24
   1a51a:	99 1f       	adc	r25, r25
   1a51c:	f1 cf       	rjmp	.-30     	; 0x1a500 <__fp_splitA+0xc>
   1a51e:	86 95       	lsr	r24
   1a520:	71 05       	cpc	r23, r1
   1a522:	61 05       	cpc	r22, r1
   1a524:	08 94       	sec
   1a526:	08 95       	ret

0001a528 <__fp_zero>:
   1a528:	e8 94       	clt

0001a52a <__fp_szero>:
   1a52a:	bb 27       	eor	r27, r27
   1a52c:	66 27       	eor	r22, r22
   1a52e:	77 27       	eor	r23, r23
   1a530:	cb 01       	movw	r24, r22
   1a532:	97 f9       	bld	r25, 7
   1a534:	08 95       	ret

0001a536 <__gesf2>:
   1a536:	8a df       	rcall	.-236    	; 0x1a44c <__fp_cmp>
   1a538:	08 f4       	brcc	.+2      	; 0x1a53c <__gesf2+0x6>
   1a53a:	8f ef       	ldi	r24, 0xFF	; 255
   1a53c:	08 95       	ret

0001a53e <__mulsf3>:
   1a53e:	0b d0       	rcall	.+22     	; 0x1a556 <__mulsf3x>
   1a540:	c0 cf       	rjmp	.-128    	; 0x1a4c2 <__fp_round>
   1a542:	b1 df       	rcall	.-158    	; 0x1a4a6 <__fp_pscA>
   1a544:	28 f0       	brcs	.+10     	; 0x1a550 <__mulsf3+0x12>
   1a546:	b6 df       	rcall	.-148    	; 0x1a4b4 <__fp_pscB>
   1a548:	18 f0       	brcs	.+6      	; 0x1a550 <__mulsf3+0x12>
   1a54a:	95 23       	and	r25, r21
   1a54c:	09 f0       	breq	.+2      	; 0x1a550 <__mulsf3+0x12>
   1a54e:	a2 cf       	rjmp	.-188    	; 0x1a494 <__fp_inf>
   1a550:	a7 cf       	rjmp	.-178    	; 0x1a4a0 <__fp_nan>
   1a552:	11 24       	eor	r1, r1
   1a554:	ea cf       	rjmp	.-44     	; 0x1a52a <__fp_szero>

0001a556 <__mulsf3x>:
   1a556:	c6 df       	rcall	.-116    	; 0x1a4e4 <__fp_split3>
   1a558:	a0 f3       	brcs	.-24     	; 0x1a542 <__mulsf3+0x4>

0001a55a <__mulsf3_pse>:
   1a55a:	95 9f       	mul	r25, r21
   1a55c:	d1 f3       	breq	.-12     	; 0x1a552 <__mulsf3+0x14>
   1a55e:	95 0f       	add	r25, r21
   1a560:	50 e0       	ldi	r21, 0x00	; 0
   1a562:	55 1f       	adc	r21, r21
   1a564:	62 9f       	mul	r22, r18
   1a566:	f0 01       	movw	r30, r0
   1a568:	72 9f       	mul	r23, r18
   1a56a:	bb 27       	eor	r27, r27
   1a56c:	f0 0d       	add	r31, r0
   1a56e:	b1 1d       	adc	r27, r1
   1a570:	63 9f       	mul	r22, r19
   1a572:	aa 27       	eor	r26, r26
   1a574:	f0 0d       	add	r31, r0
   1a576:	b1 1d       	adc	r27, r1
   1a578:	aa 1f       	adc	r26, r26
   1a57a:	64 9f       	mul	r22, r20
   1a57c:	66 27       	eor	r22, r22
   1a57e:	b0 0d       	add	r27, r0
   1a580:	a1 1d       	adc	r26, r1
   1a582:	66 1f       	adc	r22, r22
   1a584:	82 9f       	mul	r24, r18
   1a586:	22 27       	eor	r18, r18
   1a588:	b0 0d       	add	r27, r0
   1a58a:	a1 1d       	adc	r26, r1
   1a58c:	62 1f       	adc	r22, r18
   1a58e:	73 9f       	mul	r23, r19
   1a590:	b0 0d       	add	r27, r0
   1a592:	a1 1d       	adc	r26, r1
   1a594:	62 1f       	adc	r22, r18
   1a596:	83 9f       	mul	r24, r19
   1a598:	a0 0d       	add	r26, r0
   1a59a:	61 1d       	adc	r22, r1
   1a59c:	22 1f       	adc	r18, r18
   1a59e:	74 9f       	mul	r23, r20
   1a5a0:	33 27       	eor	r19, r19
   1a5a2:	a0 0d       	add	r26, r0
   1a5a4:	61 1d       	adc	r22, r1
   1a5a6:	23 1f       	adc	r18, r19
   1a5a8:	84 9f       	mul	r24, r20
   1a5aa:	60 0d       	add	r22, r0
   1a5ac:	21 1d       	adc	r18, r1
   1a5ae:	82 2f       	mov	r24, r18
   1a5b0:	76 2f       	mov	r23, r22
   1a5b2:	6a 2f       	mov	r22, r26
   1a5b4:	11 24       	eor	r1, r1
   1a5b6:	9f 57       	subi	r25, 0x7F	; 127
   1a5b8:	50 40       	sbci	r21, 0x00	; 0
   1a5ba:	8a f0       	brmi	.+34     	; 0x1a5de <__mulsf3_pse+0x84>
   1a5bc:	e1 f0       	breq	.+56     	; 0x1a5f6 <__mulsf3_pse+0x9c>
   1a5be:	88 23       	and	r24, r24
   1a5c0:	4a f0       	brmi	.+18     	; 0x1a5d4 <__mulsf3_pse+0x7a>
   1a5c2:	ee 0f       	add	r30, r30
   1a5c4:	ff 1f       	adc	r31, r31
   1a5c6:	bb 1f       	adc	r27, r27
   1a5c8:	66 1f       	adc	r22, r22
   1a5ca:	77 1f       	adc	r23, r23
   1a5cc:	88 1f       	adc	r24, r24
   1a5ce:	91 50       	subi	r25, 0x01	; 1
   1a5d0:	50 40       	sbci	r21, 0x00	; 0
   1a5d2:	a9 f7       	brne	.-22     	; 0x1a5be <__mulsf3_pse+0x64>
   1a5d4:	9e 3f       	cpi	r25, 0xFE	; 254
   1a5d6:	51 05       	cpc	r21, r1
   1a5d8:	70 f0       	brcs	.+28     	; 0x1a5f6 <__mulsf3_pse+0x9c>
   1a5da:	5c cf       	rjmp	.-328    	; 0x1a494 <__fp_inf>
   1a5dc:	a6 cf       	rjmp	.-180    	; 0x1a52a <__fp_szero>
   1a5de:	5f 3f       	cpi	r21, 0xFF	; 255
   1a5e0:	ec f3       	brlt	.-6      	; 0x1a5dc <__mulsf3_pse+0x82>
   1a5e2:	98 3e       	cpi	r25, 0xE8	; 232
   1a5e4:	dc f3       	brlt	.-10     	; 0x1a5dc <__mulsf3_pse+0x82>
   1a5e6:	86 95       	lsr	r24
   1a5e8:	77 95       	ror	r23
   1a5ea:	67 95       	ror	r22
   1a5ec:	b7 95       	ror	r27
   1a5ee:	f7 95       	ror	r31
   1a5f0:	e7 95       	ror	r30
   1a5f2:	9f 5f       	subi	r25, 0xFF	; 255
   1a5f4:	c1 f7       	brne	.-16     	; 0x1a5e6 <__mulsf3_pse+0x8c>
   1a5f6:	fe 2b       	or	r31, r30
   1a5f8:	88 0f       	add	r24, r24
   1a5fa:	91 1d       	adc	r25, r1
   1a5fc:	96 95       	lsr	r25
   1a5fe:	87 95       	ror	r24
   1a600:	97 f9       	bld	r25, 7
   1a602:	08 95       	ret

0001a604 <_ZN14HardwareSerial9availableEv>:
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
   1a604:	fc 01       	movw	r30, r24
   1a606:	91 8d       	ldd	r25, Z+25	; 0x19
   1a608:	22 8d       	ldd	r18, Z+26	; 0x1a
   1a60a:	89 2f       	mov	r24, r25
   1a60c:	90 e0       	ldi	r25, 0x00	; 0
   1a60e:	80 53       	subi	r24, 0x30	; 48
   1a610:	9f 4f       	sbci	r25, 0xFF	; 255
   1a612:	82 1b       	sub	r24, r18
   1a614:	91 09       	sbc	r25, r1
   1a616:	8f 70       	andi	r24, 0x0F	; 15
   1a618:	99 27       	eor	r25, r25
   1a61a:	2d e0       	ldi	r18, 0x0D	; 13
   1a61c:	ac 01       	movw	r20, r24
   1a61e:	24 9f       	mul	r18, r20
   1a620:	c0 01       	movw	r24, r0
   1a622:	25 9f       	mul	r18, r21
   1a624:	90 0d       	add	r25, r0
   1a626:	11 24       	eor	r1, r1
   1a628:	08 95       	ret

0001a62a <_ZN14HardwareSerial4peekEv>:
   1a62a:	fc 01       	movw	r30, r24
   1a62c:	91 8d       	ldd	r25, Z+25	; 0x19
   1a62e:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a630:	98 17       	cp	r25, r24
   1a632:	31 f0       	breq	.+12     	; 0x1a640 <_ZN14HardwareSerial4peekEv+0x16>
   1a634:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a636:	e8 0f       	add	r30, r24
   1a638:	f1 1d       	adc	r31, r1
   1a63a:	85 8d       	ldd	r24, Z+29	; 0x1d
   1a63c:	90 e0       	ldi	r25, 0x00	; 0
   1a63e:	08 95       	ret
   1a640:	8f ef       	ldi	r24, 0xFF	; 255
   1a642:	9f ef       	ldi	r25, 0xFF	; 255
   1a644:	08 95       	ret

0001a646 <_ZN14HardwareSerial4readEv>:
   1a646:	fc 01       	movw	r30, r24
   1a648:	91 8d       	ldd	r25, Z+25	; 0x19
   1a64a:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a64c:	98 17       	cp	r25, r24
   1a64e:	81 f0       	breq	.+32     	; 0x1a670 <_ZN14HardwareSerial4readEv+0x2a>
   1a650:	82 8d       	ldd	r24, Z+26	; 0x1a
   1a652:	df 01       	movw	r26, r30
   1a654:	a8 0f       	add	r26, r24
   1a656:	b1 1d       	adc	r27, r1
   1a658:	5d 96       	adiw	r26, 0x1d	; 29
   1a65a:	8c 91       	ld	r24, X
   1a65c:	92 8d       	ldd	r25, Z+26	; 0x1a
   1a65e:	9f 5f       	subi	r25, 0xFF	; 255
   1a660:	9f 70       	andi	r25, 0x0F	; 15
   1a662:	2d e0       	ldi	r18, 0x0D	; 13
   1a664:	92 9f       	mul	r25, r18
   1a666:	90 2d       	mov	r25, r0
   1a668:	11 24       	eor	r1, r1
   1a66a:	92 8f       	std	Z+26, r25	; 0x1a
   1a66c:	90 e0       	ldi	r25, 0x00	; 0
   1a66e:	08 95       	ret
   1a670:	8f ef       	ldi	r24, 0xFF	; 255
   1a672:	9f ef       	ldi	r25, 0xFF	; 255
   1a674:	08 95       	ret

0001a676 <_ZN14HardwareSerial17availableForWriteEv>:
   1a676:	fc 01       	movw	r30, r24
   1a678:	53 8d       	ldd	r21, Z+27	; 0x1b
   1a67a:	44 8d       	ldd	r20, Z+28	; 0x1c
   1a67c:	25 2f       	mov	r18, r21
   1a67e:	30 e0       	ldi	r19, 0x00	; 0
   1a680:	84 2f       	mov	r24, r20
   1a682:	90 e0       	ldi	r25, 0x00	; 0
   1a684:	82 1b       	sub	r24, r18
   1a686:	93 0b       	sbc	r25, r19
   1a688:	54 17       	cp	r21, r20
   1a68a:	18 f0       	brcs	.+6      	; 0x1a692 <_ZN14HardwareSerial17availableForWriteEv+0x1c>
   1a68c:	81 53       	subi	r24, 0x31	; 49
   1a68e:	9f 4f       	sbci	r25, 0xFF	; 255
   1a690:	08 95       	ret
   1a692:	01 97       	sbiw	r24, 0x01	; 1
   1a694:	08 95       	ret

0001a696 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
   1a696:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
   1a698:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a69a:	df 01       	movw	r26, r30
   1a69c:	a8 0f       	add	r26, r24
   1a69e:	b1 1d       	adc	r27, r1
   1a6a0:	a3 51       	subi	r26, 0x13	; 19
   1a6a2:	bf 4f       	sbci	r27, 0xFF	; 255
   1a6a4:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
   1a6a6:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a6a8:	90 e0       	ldi	r25, 0x00	; 0
   1a6aa:	01 96       	adiw	r24, 0x01	; 1
   1a6ac:	8f 70       	andi	r24, 0x0F	; 15
   1a6ae:	99 27       	eor	r25, r25
   1a6b0:	9d e0       	ldi	r25, 0x0D	; 13
   1a6b2:	89 9f       	mul	r24, r25
   1a6b4:	80 2d       	mov	r24, r0
   1a6b6:	11 24       	eor	r1, r1
   1a6b8:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
   1a6ba:	a6 89       	ldd	r26, Z+22	; 0x16
   1a6bc:	b7 89       	ldd	r27, Z+23	; 0x17
   1a6be:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   1a6c0:	a0 89       	ldd	r26, Z+16	; 0x10
   1a6c2:	b1 89       	ldd	r27, Z+17	; 0x11
   1a6c4:	8c 91       	ld	r24, X
   1a6c6:	83 70       	andi	r24, 0x03	; 3
   1a6c8:	80 64       	ori	r24, 0x40	; 64
   1a6ca:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
   1a6cc:	93 8d       	ldd	r25, Z+27	; 0x1b
   1a6ce:	84 8d       	ldd	r24, Z+28	; 0x1c
   1a6d0:	98 13       	cpse	r25, r24
   1a6d2:	06 c0       	rjmp	.+12     	; 0x1a6e0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x4a>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
   1a6d4:	02 88       	ldd	r0, Z+18	; 0x12
   1a6d6:	f3 89       	ldd	r31, Z+19	; 0x13
   1a6d8:	e0 2d       	mov	r30, r0
   1a6da:	80 81       	ld	r24, Z
   1a6dc:	8f 7d       	andi	r24, 0xDF	; 223
   1a6de:	80 83       	st	Z, r24
   1a6e0:	08 95       	ret

0001a6e2 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
   1a6e2:	0f 93       	push	r16
   1a6e4:	1f 93       	push	r17
   1a6e6:	cf 93       	push	r28
   1a6e8:	df 93       	push	r29
   1a6ea:	ec 01       	movw	r28, r24
  _written = true;
   1a6ec:	81 e0       	ldi	r24, 0x01	; 1
   1a6ee:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
   1a6f0:	9b 8d       	ldd	r25, Y+27	; 0x1b
   1a6f2:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1a6f4:	98 13       	cpse	r25, r24
   1a6f6:	05 c0       	rjmp	.+10     	; 0x1a702 <_ZN14HardwareSerial5writeEh+0x20>
   1a6f8:	e8 89       	ldd	r30, Y+16	; 0x10
   1a6fa:	f9 89       	ldd	r31, Y+17	; 0x11
   1a6fc:	80 81       	ld	r24, Z
   1a6fe:	85 fd       	sbrc	r24, 5
   1a700:	27 c0       	rjmp	.+78     	; 0x1a750 <_ZN14HardwareSerial5writeEh+0x6e>
   1a702:	06 2f       	mov	r16, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
   1a704:	8b 8d       	ldd	r24, Y+27	; 0x1b
   1a706:	90 e0       	ldi	r25, 0x00	; 0
   1a708:	01 96       	adiw	r24, 0x01	; 1
   1a70a:	8f 70       	andi	r24, 0x0F	; 15
   1a70c:	99 27       	eor	r25, r25
   1a70e:	1d e0       	ldi	r17, 0x0D	; 13
   1a710:	81 9f       	mul	r24, r17
   1a712:	10 2d       	mov	r17, r0
   1a714:	11 24       	eor	r1, r1
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
   1a716:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1a718:	18 13       	cpse	r17, r24
   1a71a:	0b c0       	rjmp	.+22     	; 0x1a732 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
   1a71c:	0f b6       	in	r0, 0x3f	; 63
   1a71e:	07 fc       	sbrc	r0, 7
   1a720:	fa cf       	rjmp	.-12     	; 0x1a716 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
   1a722:	e8 89       	ldd	r30, Y+16	; 0x10
   1a724:	f9 89       	ldd	r31, Y+17	; 0x11
   1a726:	80 81       	ld	r24, Z
   1a728:	85 ff       	sbrs	r24, 5
   1a72a:	f5 cf       	rjmp	.-22     	; 0x1a716 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
   1a72c:	ce 01       	movw	r24, r28
   1a72e:	b3 df       	rcall	.-154    	; 0x1a696 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a730:	f2 cf       	rjmp	.-28     	; 0x1a716 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
   1a732:	8b 8d       	ldd	r24, Y+27	; 0x1b
   1a734:	fe 01       	movw	r30, r28
   1a736:	e8 0f       	add	r30, r24
   1a738:	f1 1d       	adc	r31, r1
   1a73a:	e3 51       	subi	r30, 0x13	; 19
   1a73c:	ff 4f       	sbci	r31, 0xFF	; 255
   1a73e:	00 83       	st	Z, r16

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a740:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
   1a742:	f8 94       	cli
    _tx_buffer_head = i;
   1a744:	1b 8f       	std	Y+27, r17	; 0x1b
    sbi(*_ucsrb, UDRIE0);
   1a746:	ea 89       	ldd	r30, Y+18	; 0x12
   1a748:	fb 89       	ldd	r31, Y+19	; 0x13
   1a74a:	80 81       	ld	r24, Z
   1a74c:	80 62       	ori	r24, 0x20	; 32
   1a74e:	0a c0       	rjmp	.+20     	; 0x1a764 <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a750:	9f b7       	in	r25, 0x3f	; 63
   1a752:	f8 94       	cli
      *_udr = c;
   1a754:	ee 89       	ldd	r30, Y+22	; 0x16
   1a756:	ff 89       	ldd	r31, Y+23	; 0x17
   1a758:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   1a75a:	e8 89       	ldd	r30, Y+16	; 0x10
   1a75c:	f9 89       	ldd	r31, Y+17	; 0x11
   1a75e:	80 81       	ld	r24, Z
   1a760:	83 70       	andi	r24, 0x03	; 3
   1a762:	80 64       	ori	r24, 0x40	; 64
   1a764:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
   1a766:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
   1a768:	81 e0       	ldi	r24, 0x01	; 1
   1a76a:	90 e0       	ldi	r25, 0x00	; 0
   1a76c:	df 91       	pop	r29
   1a76e:	cf 91       	pop	r28
   1a770:	1f 91       	pop	r17
   1a772:	0f 91       	pop	r16
   1a774:	08 95       	ret

0001a776 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
   1a776:	cf 93       	push	r28
   1a778:	df 93       	push	r29
   1a77a:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
   1a77c:	88 8d       	ldd	r24, Y+24	; 0x18
   1a77e:	88 23       	and	r24, r24
   1a780:	c1 f0       	breq	.+48     	; 0x1a7b2 <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
   1a782:	ea 89       	ldd	r30, Y+18	; 0x12
   1a784:	fb 89       	ldd	r31, Y+19	; 0x13
   1a786:	80 81       	ld	r24, Z
   1a788:	85 fd       	sbrc	r24, 5
   1a78a:	05 c0       	rjmp	.+10     	; 0x1a796 <_ZN14HardwareSerial5flushEv+0x20>
   1a78c:	a8 89       	ldd	r26, Y+16	; 0x10
   1a78e:	b9 89       	ldd	r27, Y+17	; 0x11
   1a790:	8c 91       	ld	r24, X
   1a792:	86 fd       	sbrc	r24, 6
   1a794:	0e c0       	rjmp	.+28     	; 0x1a7b2 <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
   1a796:	0f b6       	in	r0, 0x3f	; 63
   1a798:	07 fc       	sbrc	r0, 7
   1a79a:	f5 cf       	rjmp	.-22     	; 0x1a786 <_ZN14HardwareSerial5flushEv+0x10>
   1a79c:	80 81       	ld	r24, Z
   1a79e:	85 ff       	sbrs	r24, 5
   1a7a0:	f2 cf       	rjmp	.-28     	; 0x1a786 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
   1a7a2:	a8 89       	ldd	r26, Y+16	; 0x10
   1a7a4:	b9 89       	ldd	r27, Y+17	; 0x11
   1a7a6:	8c 91       	ld	r24, X
   1a7a8:	85 ff       	sbrs	r24, 5
   1a7aa:	ed cf       	rjmp	.-38     	; 0x1a786 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
   1a7ac:	ce 01       	movw	r24, r28
   1a7ae:	73 df       	rcall	.-282    	; 0x1a696 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a7b0:	e8 cf       	rjmp	.-48     	; 0x1a782 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
   1a7b2:	df 91       	pop	r29
   1a7b4:	cf 91       	pop	r28
   1a7b6:	08 95       	ret

0001a7b8 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
   1a7b8:	cf 92       	push	r12
   1a7ba:	df 92       	push	r13
   1a7bc:	ef 92       	push	r14
   1a7be:	ff 92       	push	r15
   1a7c0:	1f 93       	push	r17
   1a7c2:	cf 93       	push	r28
   1a7c4:	df 93       	push	r29
   1a7c6:	ec 01       	movw	r28, r24
   1a7c8:	6a 01       	movw	r12, r20
   1a7ca:	7b 01       	movw	r14, r22
   1a7cc:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
   1a7ce:	e8 89       	ldd	r30, Y+16	; 0x10
   1a7d0:	f9 89       	ldd	r31, Y+17	; 0x11
   1a7d2:	82 e0       	ldi	r24, 0x02	; 2
   1a7d4:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a7d6:	41 15       	cp	r20, r1
   1a7d8:	51 4e       	sbci	r21, 0xE1	; 225
   1a7da:	61 05       	cpc	r22, r1
   1a7dc:	71 05       	cpc	r23, r1
   1a7de:	b1 f0       	breq	.+44     	; 0x1a80c <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
   1a7e0:	60 e0       	ldi	r22, 0x00	; 0
   1a7e2:	79 e0       	ldi	r23, 0x09	; 9
   1a7e4:	8d e3       	ldi	r24, 0x3D	; 61
   1a7e6:	90 e0       	ldi	r25, 0x00	; 0
   1a7e8:	a7 01       	movw	r20, r14
   1a7ea:	96 01       	movw	r18, r12
   1a7ec:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   1a7f0:	da 01       	movw	r26, r20
   1a7f2:	c9 01       	movw	r24, r18
   1a7f4:	01 97       	sbiw	r24, 0x01	; 1
   1a7f6:	a1 09       	sbc	r26, r1
   1a7f8:	b1 09       	sbc	r27, r1
   1a7fa:	b6 95       	lsr	r27
   1a7fc:	a7 95       	ror	r26
   1a7fe:	97 95       	ror	r25
   1a800:	87 95       	ror	r24
   1a802:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a804:	21 15       	cp	r18, r1
   1a806:	80 e1       	ldi	r24, 0x10	; 16
   1a808:	38 07       	cpc	r19, r24
   1a80a:	a8 f0       	brcs	.+42     	; 0x1a836 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
   1a80c:	e8 89       	ldd	r30, Y+16	; 0x10
   1a80e:	f9 89       	ldd	r31, Y+17	; 0x11
   1a810:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
   1a812:	60 e8       	ldi	r22, 0x80	; 128
   1a814:	74 e8       	ldi	r23, 0x84	; 132
   1a816:	8e e1       	ldi	r24, 0x1E	; 30
   1a818:	90 e0       	ldi	r25, 0x00	; 0
   1a81a:	a7 01       	movw	r20, r14
   1a81c:	96 01       	movw	r18, r12
   1a81e:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   1a822:	da 01       	movw	r26, r20
   1a824:	c9 01       	movw	r24, r18
   1a826:	01 97       	sbiw	r24, 0x01	; 1
   1a828:	a1 09       	sbc	r26, r1
   1a82a:	b1 09       	sbc	r27, r1
   1a82c:	b6 95       	lsr	r27
   1a82e:	a7 95       	ror	r26
   1a830:	97 95       	ror	r25
   1a832:	87 95       	ror	r24
   1a834:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
   1a836:	ec 85       	ldd	r30, Y+12	; 0x0c
   1a838:	fd 85       	ldd	r31, Y+13	; 0x0d
   1a83a:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
   1a83c:	ee 85       	ldd	r30, Y+14	; 0x0e
   1a83e:	ff 85       	ldd	r31, Y+15	; 0x0f
   1a840:	20 83       	st	Z, r18

  _written = false;
   1a842:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
   1a844:	ec 89       	ldd	r30, Y+20	; 0x14
   1a846:	fd 89       	ldd	r31, Y+21	; 0x15
   1a848:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
   1a84a:	ea 89       	ldd	r30, Y+18	; 0x12
   1a84c:	fb 89       	ldd	r31, Y+19	; 0x13
   1a84e:	80 81       	ld	r24, Z
   1a850:	80 61       	ori	r24, 0x10	; 16
   1a852:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
   1a854:	ea 89       	ldd	r30, Y+18	; 0x12
   1a856:	fb 89       	ldd	r31, Y+19	; 0x13
   1a858:	80 81       	ld	r24, Z
   1a85a:	88 60       	ori	r24, 0x08	; 8
   1a85c:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
   1a85e:	ea 89       	ldd	r30, Y+18	; 0x12
   1a860:	fb 89       	ldd	r31, Y+19	; 0x13
   1a862:	80 81       	ld	r24, Z
   1a864:	80 68       	ori	r24, 0x80	; 128
   1a866:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
   1a868:	ea 89       	ldd	r30, Y+18	; 0x12
   1a86a:	fb 89       	ldd	r31, Y+19	; 0x13
   1a86c:	80 81       	ld	r24, Z
   1a86e:	8f 7d       	andi	r24, 0xDF	; 223
   1a870:	80 83       	st	Z, r24
}
   1a872:	df 91       	pop	r29
   1a874:	cf 91       	pop	r28
   1a876:	1f 91       	pop	r17
   1a878:	ff 90       	pop	r15
   1a87a:	ef 90       	pop	r14
   1a87c:	df 90       	pop	r13
   1a87e:	cf 90       	pop	r12
   1a880:	08 95       	ret

0001a882 <_ZN5Print17availableForWriteEv>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
}
   1a882:	80 e0       	ldi	r24, 0x00	; 0
   1a884:	90 e0       	ldi	r25, 0x00	; 0
   1a886:	08 95       	ret

0001a888 <_ZN5Print5flushEv>:
   1a888:	08 95       	ret

0001a88a <__vector_26>:
   1a88a:	1f 92       	push	r1
   1a88c:	0f 92       	push	r0
   1a88e:	0f b6       	in	r0, 0x3f	; 63
   1a890:	0f 92       	push	r0
   1a892:	11 24       	eor	r1, r1
   1a894:	0b b6       	in	r0, 0x3b	; 59
   1a896:	0f 92       	push	r0
   1a898:	2f 93       	push	r18
   1a89a:	3f 93       	push	r19
   1a89c:	4f 93       	push	r20
   1a89e:	5f 93       	push	r21
   1a8a0:	6f 93       	push	r22
   1a8a2:	7f 93       	push	r23
   1a8a4:	8f 93       	push	r24
   1a8a6:	9f 93       	push	r25
   1a8a8:	af 93       	push	r26
   1a8aa:	bf 93       	push	r27
   1a8ac:	ef 93       	push	r30
   1a8ae:	ff 93       	push	r31
   1a8b0:	86 ec       	ldi	r24, 0xC6	; 198
   1a8b2:	94 e1       	ldi	r25, 0x14	; 20
   1a8b4:	f0 de       	rcall	.-544    	; 0x1a696 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a8b6:	ff 91       	pop	r31
   1a8b8:	ef 91       	pop	r30
   1a8ba:	bf 91       	pop	r27
   1a8bc:	af 91       	pop	r26
   1a8be:	9f 91       	pop	r25
   1a8c0:	8f 91       	pop	r24
   1a8c2:	7f 91       	pop	r23
   1a8c4:	6f 91       	pop	r22
   1a8c6:	5f 91       	pop	r21
   1a8c8:	4f 91       	pop	r20
   1a8ca:	3f 91       	pop	r19
   1a8cc:	2f 91       	pop	r18
   1a8ce:	0f 90       	pop	r0
   1a8d0:	0b be       	out	0x3b, r0	; 59
   1a8d2:	0f 90       	pop	r0
   1a8d4:	0f be       	out	0x3f, r0	; 63
   1a8d6:	0f 90       	pop	r0
   1a8d8:	1f 90       	pop	r1
   1a8da:	18 95       	reti

0001a8dc <_GLOBAL__sub_I___vector_26>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
   1a8dc:	e6 ec       	ldi	r30, 0xC6	; 198
   1a8de:	f4 e1       	ldi	r31, 0x14	; 20
   1a8e0:	13 82       	std	Z+3, r1	; 0x03
   1a8e2:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
   1a8e4:	88 ee       	ldi	r24, 0xE8	; 232
   1a8e6:	93 e0       	ldi	r25, 0x03	; 3
   1a8e8:	a0 e0       	ldi	r26, 0x00	; 0
   1a8ea:	b0 e0       	ldi	r27, 0x00	; 0
   1a8ec:	84 83       	std	Z+4, r24	; 0x04
   1a8ee:	95 83       	std	Z+5, r25	; 0x05
   1a8f0:	a6 83       	std	Z+6, r26	; 0x06
   1a8f2:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
   1a8f4:	8f ed       	ldi	r24, 0xDF	; 223
   1a8f6:	97 e0       	ldi	r25, 0x07	; 7
   1a8f8:	91 83       	std	Z+1, r25	; 0x01
   1a8fa:	80 83       	st	Z, r24
   1a8fc:	85 ec       	ldi	r24, 0xC5	; 197
   1a8fe:	90 e0       	ldi	r25, 0x00	; 0
   1a900:	95 87       	std	Z+13, r25	; 0x0d
   1a902:	84 87       	std	Z+12, r24	; 0x0c
   1a904:	84 ec       	ldi	r24, 0xC4	; 196
   1a906:	90 e0       	ldi	r25, 0x00	; 0
   1a908:	97 87       	std	Z+15, r25	; 0x0f
   1a90a:	86 87       	std	Z+14, r24	; 0x0e
   1a90c:	80 ec       	ldi	r24, 0xC0	; 192
   1a90e:	90 e0       	ldi	r25, 0x00	; 0
   1a910:	91 8b       	std	Z+17, r25	; 0x11
   1a912:	80 8b       	std	Z+16, r24	; 0x10
   1a914:	81 ec       	ldi	r24, 0xC1	; 193
   1a916:	90 e0       	ldi	r25, 0x00	; 0
   1a918:	93 8b       	std	Z+19, r25	; 0x13
   1a91a:	82 8b       	std	Z+18, r24	; 0x12
   1a91c:	82 ec       	ldi	r24, 0xC2	; 194
   1a91e:	90 e0       	ldi	r25, 0x00	; 0
   1a920:	95 8b       	std	Z+21, r25	; 0x15
   1a922:	84 8b       	std	Z+20, r24	; 0x14
   1a924:	86 ec       	ldi	r24, 0xC6	; 198
   1a926:	90 e0       	ldi	r25, 0x00	; 0
   1a928:	97 8b       	std	Z+23, r25	; 0x17
   1a92a:	86 8b       	std	Z+22, r24	; 0x16
   1a92c:	11 8e       	std	Z+25, r1	; 0x19
   1a92e:	12 8e       	std	Z+26, r1	; 0x1a
   1a930:	13 8e       	std	Z+27, r1	; 0x1b
   1a932:	14 8e       	std	Z+28, r1	; 0x1c
   1a934:	08 95       	ret

0001a936 <__vector_37>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
}
   1a936:	1f 92       	push	r1
   1a938:	0f 92       	push	r0
   1a93a:	0f b6       	in	r0, 0x3f	; 63
   1a93c:	0f 92       	push	r0
   1a93e:	11 24       	eor	r1, r1
   1a940:	0b b6       	in	r0, 0x3b	; 59
   1a942:	0f 92       	push	r0
   1a944:	2f 93       	push	r18
   1a946:	3f 93       	push	r19
   1a948:	4f 93       	push	r20
   1a94a:	5f 93       	push	r21
   1a94c:	6f 93       	push	r22
   1a94e:	7f 93       	push	r23
   1a950:	8f 93       	push	r24
   1a952:	9f 93       	push	r25
   1a954:	af 93       	push	r26
   1a956:	bf 93       	push	r27
   1a958:	ef 93       	push	r30
   1a95a:	ff 93       	push	r31
   1a95c:	83 e8       	ldi	r24, 0x83	; 131
   1a95e:	96 e1       	ldi	r25, 0x16	; 22
   1a960:	9a de       	rcall	.-716    	; 0x1a696 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a962:	ff 91       	pop	r31
   1a964:	ef 91       	pop	r30
   1a966:	bf 91       	pop	r27
   1a968:	af 91       	pop	r26
   1a96a:	9f 91       	pop	r25
   1a96c:	8f 91       	pop	r24
   1a96e:	7f 91       	pop	r23
   1a970:	6f 91       	pop	r22
   1a972:	5f 91       	pop	r21
   1a974:	4f 91       	pop	r20
   1a976:	3f 91       	pop	r19
   1a978:	2f 91       	pop	r18
   1a97a:	0f 90       	pop	r0
   1a97c:	0b be       	out	0x3b, r0	; 59
   1a97e:	0f 90       	pop	r0
   1a980:	0f be       	out	0x3f, r0	; 63
   1a982:	0f 90       	pop	r0
   1a984:	1f 90       	pop	r1
   1a986:	18 95       	reti

0001a988 <_GLOBAL__sub_I___vector_37>:
   1a988:	e3 e8       	ldi	r30, 0x83	; 131
   1a98a:	f6 e1       	ldi	r31, 0x16	; 22
   1a98c:	13 82       	std	Z+3, r1	; 0x03
   1a98e:	12 82       	std	Z+2, r1	; 0x02
   1a990:	88 ee       	ldi	r24, 0xE8	; 232
   1a992:	93 e0       	ldi	r25, 0x03	; 3
   1a994:	a0 e0       	ldi	r26, 0x00	; 0
   1a996:	b0 e0       	ldi	r27, 0x00	; 0
   1a998:	84 83       	std	Z+4, r24	; 0x04
   1a99a:	95 83       	std	Z+5, r25	; 0x05
   1a99c:	a6 83       	std	Z+6, r26	; 0x06
   1a99e:	b7 83       	std	Z+7, r27	; 0x07
   1a9a0:	8f ed       	ldi	r24, 0xDF	; 223
   1a9a2:	97 e0       	ldi	r25, 0x07	; 7
   1a9a4:	91 83       	std	Z+1, r25	; 0x01
   1a9a6:	80 83       	st	Z, r24
   1a9a8:	8d ec       	ldi	r24, 0xCD	; 205
   1a9aa:	90 e0       	ldi	r25, 0x00	; 0
   1a9ac:	95 87       	std	Z+13, r25	; 0x0d
   1a9ae:	84 87       	std	Z+12, r24	; 0x0c
   1a9b0:	8c ec       	ldi	r24, 0xCC	; 204
   1a9b2:	90 e0       	ldi	r25, 0x00	; 0
   1a9b4:	97 87       	std	Z+15, r25	; 0x0f
   1a9b6:	86 87       	std	Z+14, r24	; 0x0e
   1a9b8:	88 ec       	ldi	r24, 0xC8	; 200
   1a9ba:	90 e0       	ldi	r25, 0x00	; 0
   1a9bc:	91 8b       	std	Z+17, r25	; 0x11
   1a9be:	80 8b       	std	Z+16, r24	; 0x10
   1a9c0:	89 ec       	ldi	r24, 0xC9	; 201
   1a9c2:	90 e0       	ldi	r25, 0x00	; 0
   1a9c4:	93 8b       	std	Z+19, r25	; 0x13
   1a9c6:	82 8b       	std	Z+18, r24	; 0x12
   1a9c8:	8a ec       	ldi	r24, 0xCA	; 202
   1a9ca:	90 e0       	ldi	r25, 0x00	; 0
   1a9cc:	95 8b       	std	Z+21, r25	; 0x15
   1a9ce:	84 8b       	std	Z+20, r24	; 0x14
   1a9d0:	8e ec       	ldi	r24, 0xCE	; 206
   1a9d2:	90 e0       	ldi	r25, 0x00	; 0
   1a9d4:	97 8b       	std	Z+23, r25	; 0x17
   1a9d6:	86 8b       	std	Z+22, r24	; 0x16
   1a9d8:	11 8e       	std	Z+25, r1	; 0x19
   1a9da:	12 8e       	std	Z+26, r1	; 0x1a
   1a9dc:	13 8e       	std	Z+27, r1	; 0x1b
   1a9de:	14 8e       	std	Z+28, r1	; 0x1c
   1a9e0:	08 95       	ret

0001a9e2 <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a9e2:	cf 92       	push	r12
   1a9e4:	df 92       	push	r13
   1a9e6:	ef 92       	push	r14
   1a9e8:	ff 92       	push	r15
   1a9ea:	0f 93       	push	r16
   1a9ec:	1f 93       	push	r17
   1a9ee:	cf 93       	push	r28
   1a9f0:	df 93       	push	r29
   1a9f2:	6c 01       	movw	r12, r24
   1a9f4:	7a 01       	movw	r14, r20
   1a9f6:	8b 01       	movw	r16, r22
   1a9f8:	c0 e0       	ldi	r28, 0x00	; 0
   1a9fa:	d0 e0       	ldi	r29, 0x00	; 0
   1a9fc:	ce 15       	cp	r28, r14
   1a9fe:	df 05       	cpc	r29, r15
   1aa00:	81 f0       	breq	.+32     	; 0x1aa22 <_ZN5Print5writeEPKhj+0x40>
   1aa02:	d8 01       	movw	r26, r16
   1aa04:	6d 91       	ld	r22, X+
   1aa06:	8d 01       	movw	r16, r26
   1aa08:	d6 01       	movw	r26, r12
   1aa0a:	ed 91       	ld	r30, X+
   1aa0c:	fc 91       	ld	r31, X
   1aa0e:	01 90       	ld	r0, Z+
   1aa10:	f0 81       	ld	r31, Z
   1aa12:	e0 2d       	mov	r30, r0
   1aa14:	c6 01       	movw	r24, r12
   1aa16:	19 95       	eicall
   1aa18:	89 2b       	or	r24, r25
   1aa1a:	11 f0       	breq	.+4      	; 0x1aa20 <_ZN5Print5writeEPKhj+0x3e>
   1aa1c:	21 96       	adiw	r28, 0x01	; 1
   1aa1e:	ee cf       	rjmp	.-36     	; 0x1a9fc <_ZN5Print5writeEPKhj+0x1a>
   1aa20:	7e 01       	movw	r14, r28
   1aa22:	c7 01       	movw	r24, r14
   1aa24:	df 91       	pop	r29
   1aa26:	cf 91       	pop	r28
   1aa28:	1f 91       	pop	r17
   1aa2a:	0f 91       	pop	r16
   1aa2c:	ff 90       	pop	r15
   1aa2e:	ef 90       	pop	r14
   1aa30:	df 90       	pop	r13
   1aa32:	cf 90       	pop	r12
   1aa34:	08 95       	ret

0001aa36 <_ZN5Print5printEPK19__FlashStringHelper>:
   1aa36:	ef 92       	push	r14
   1aa38:	ff 92       	push	r15
   1aa3a:	0f 93       	push	r16
   1aa3c:	1f 93       	push	r17
   1aa3e:	cf 93       	push	r28
   1aa40:	df 93       	push	r29
   1aa42:	8c 01       	movw	r16, r24
   1aa44:	7b 01       	movw	r14, r22
   1aa46:	c0 e0       	ldi	r28, 0x00	; 0
   1aa48:	d0 e0       	ldi	r29, 0x00	; 0
   1aa4a:	f7 01       	movw	r30, r14
   1aa4c:	ec 0f       	add	r30, r28
   1aa4e:	fd 1f       	adc	r31, r29
   1aa50:	64 91       	lpm	r22, Z
   1aa52:	66 23       	and	r22, r22
   1aa54:	61 f0       	breq	.+24     	; 0x1aa6e <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1aa56:	d8 01       	movw	r26, r16
   1aa58:	ed 91       	ld	r30, X+
   1aa5a:	fc 91       	ld	r31, X
   1aa5c:	01 90       	ld	r0, Z+
   1aa5e:	f0 81       	ld	r31, Z
   1aa60:	e0 2d       	mov	r30, r0
   1aa62:	c8 01       	movw	r24, r16
   1aa64:	19 95       	eicall
   1aa66:	89 2b       	or	r24, r25
   1aa68:	11 f0       	breq	.+4      	; 0x1aa6e <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1aa6a:	21 96       	adiw	r28, 0x01	; 1
   1aa6c:	ee cf       	rjmp	.-36     	; 0x1aa4a <_ZN5Print5printEPK19__FlashStringHelper+0x14>
   1aa6e:	ce 01       	movw	r24, r28
   1aa70:	df 91       	pop	r29
   1aa72:	cf 91       	pop	r28
   1aa74:	1f 91       	pop	r17
   1aa76:	0f 91       	pop	r16
   1aa78:	ff 90       	pop	r15
   1aa7a:	ef 90       	pop	r14
   1aa7c:	08 95       	ret

0001aa7e <_ZN5Print5printEPKc>:
   1aa7e:	0c 94 18 86 	jmp	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>

0001aa82 <_ZN5Print5printEc>:
   1aa82:	dc 01       	movw	r26, r24
   1aa84:	ed 91       	ld	r30, X+
   1aa86:	fc 91       	ld	r31, X
   1aa88:	01 90       	ld	r0, Z+
   1aa8a:	f0 81       	ld	r31, Z
   1aa8c:	e0 2d       	mov	r30, r0
   1aa8e:	19 94       	eijmp

0001aa90 <_ZN5Print7printlnEv>:
   1aa90:	65 ef       	ldi	r22, 0xF5	; 245
   1aa92:	76 e0       	ldi	r23, 0x06	; 6
   1aa94:	0c 94 18 86 	jmp	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>

0001aa98 <_ZN5Print7printlnEPK19__FlashStringHelper>:
   1aa98:	0f 93       	push	r16
   1aa9a:	1f 93       	push	r17
   1aa9c:	cf 93       	push	r28
   1aa9e:	df 93       	push	r29
   1aaa0:	ec 01       	movw	r28, r24
   1aaa2:	c9 df       	rcall	.-110    	; 0x1aa36 <_ZN5Print5printEPK19__FlashStringHelper>
   1aaa4:	8c 01       	movw	r16, r24
   1aaa6:	ce 01       	movw	r24, r28
   1aaa8:	f3 df       	rcall	.-26     	; 0x1aa90 <_ZN5Print7printlnEv>
   1aaaa:	80 0f       	add	r24, r16
   1aaac:	91 1f       	adc	r25, r17
   1aaae:	df 91       	pop	r29
   1aab0:	cf 91       	pop	r28
   1aab2:	1f 91       	pop	r17
   1aab4:	0f 91       	pop	r16
   1aab6:	08 95       	ret

0001aab8 <_ZN5Print7printlnEPKc>:
   1aab8:	0f 93       	push	r16
   1aaba:	1f 93       	push	r17
   1aabc:	cf 93       	push	r28
   1aabe:	df 93       	push	r29
   1aac0:	ec 01       	movw	r28, r24
   1aac2:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   1aac6:	8c 01       	movw	r16, r24
   1aac8:	ce 01       	movw	r24, r28
   1aaca:	e2 df       	rcall	.-60     	; 0x1aa90 <_ZN5Print7printlnEv>
   1aacc:	80 0f       	add	r24, r16
   1aace:	91 1f       	adc	r25, r17
   1aad0:	df 91       	pop	r29
   1aad2:	cf 91       	pop	r28
   1aad4:	1f 91       	pop	r17
   1aad6:	0f 91       	pop	r16
   1aad8:	08 95       	ret

0001aada <_ZN5Print11printNumberEmh>:
   1aada:	8f 92       	push	r8
   1aadc:	9f 92       	push	r9
   1aade:	af 92       	push	r10
   1aae0:	bf 92       	push	r11
   1aae2:	ef 92       	push	r14
   1aae4:	ff 92       	push	r15
   1aae6:	0f 93       	push	r16
   1aae8:	1f 93       	push	r17
   1aaea:	cf 93       	push	r28
   1aaec:	df 93       	push	r29
   1aaee:	cd b7       	in	r28, 0x3d	; 61
   1aaf0:	de b7       	in	r29, 0x3e	; 62
   1aaf2:	a1 97       	sbiw	r28, 0x21	; 33
   1aaf4:	0f b6       	in	r0, 0x3f	; 63
   1aaf6:	f8 94       	cli
   1aaf8:	de bf       	out	0x3e, r29	; 62
   1aafa:	0f be       	out	0x3f, r0	; 63
   1aafc:	cd bf       	out	0x3d, r28	; 61
   1aafe:	7c 01       	movw	r14, r24
   1ab00:	fa 01       	movw	r30, r20
   1ab02:	cb 01       	movw	r24, r22
   1ab04:	19 a2       	std	Y+33, r1	; 0x21
   1ab06:	22 30       	cpi	r18, 0x02	; 2
   1ab08:	08 f4       	brcc	.+2      	; 0x1ab0c <_ZN5Print11printNumberEmh+0x32>
   1ab0a:	2a e0       	ldi	r18, 0x0A	; 10
   1ab0c:	8e 01       	movw	r16, r28
   1ab0e:	0f 5d       	subi	r16, 0xDF	; 223
   1ab10:	1f 4f       	sbci	r17, 0xFF	; 255
   1ab12:	82 2e       	mov	r8, r18
   1ab14:	91 2c       	mov	r9, r1
   1ab16:	a1 2c       	mov	r10, r1
   1ab18:	b1 2c       	mov	r11, r1
   1ab1a:	bf 01       	movw	r22, r30
   1ab1c:	a5 01       	movw	r20, r10
   1ab1e:	94 01       	movw	r18, r8
   1ab20:	0e 94 7d eb 	call	0x1d6fa	; 0x1d6fa <__udivmodsi4>
   1ab24:	f9 01       	movw	r30, r18
   1ab26:	ca 01       	movw	r24, r20
   1ab28:	01 50       	subi	r16, 0x01	; 1
   1ab2a:	11 09       	sbc	r17, r1
   1ab2c:	6a 30       	cpi	r22, 0x0A	; 10
   1ab2e:	10 f4       	brcc	.+4      	; 0x1ab34 <_ZN5Print11printNumberEmh+0x5a>
   1ab30:	60 5d       	subi	r22, 0xD0	; 208
   1ab32:	01 c0       	rjmp	.+2      	; 0x1ab36 <_ZN5Print11printNumberEmh+0x5c>
   1ab34:	69 5c       	subi	r22, 0xC9	; 201
   1ab36:	d8 01       	movw	r26, r16
   1ab38:	6c 93       	st	X, r22
   1ab3a:	23 2b       	or	r18, r19
   1ab3c:	24 2b       	or	r18, r20
   1ab3e:	25 2b       	or	r18, r21
   1ab40:	61 f7       	brne	.-40     	; 0x1ab1a <_ZN5Print11printNumberEmh+0x40>
   1ab42:	b8 01       	movw	r22, r16
   1ab44:	c7 01       	movw	r24, r14
   1ab46:	0e 94 18 86 	call	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   1ab4a:	a1 96       	adiw	r28, 0x21	; 33
   1ab4c:	0f b6       	in	r0, 0x3f	; 63
   1ab4e:	f8 94       	cli
   1ab50:	de bf       	out	0x3e, r29	; 62
   1ab52:	0f be       	out	0x3f, r0	; 63
   1ab54:	cd bf       	out	0x3d, r28	; 61
   1ab56:	df 91       	pop	r29
   1ab58:	cf 91       	pop	r28
   1ab5a:	1f 91       	pop	r17
   1ab5c:	0f 91       	pop	r16
   1ab5e:	ff 90       	pop	r15
   1ab60:	ef 90       	pop	r14
   1ab62:	bf 90       	pop	r11
   1ab64:	af 90       	pop	r10
   1ab66:	9f 90       	pop	r9
   1ab68:	8f 90       	pop	r8
   1ab6a:	08 95       	ret

0001ab6c <_ZN5Print5printEmi>:
   1ab6c:	21 15       	cp	r18, r1
   1ab6e:	31 05       	cpc	r19, r1
   1ab70:	41 f4       	brne	.+16     	; 0x1ab82 <_ZN5Print5printEmi+0x16>
   1ab72:	dc 01       	movw	r26, r24
   1ab74:	ed 91       	ld	r30, X+
   1ab76:	fc 91       	ld	r31, X
   1ab78:	01 90       	ld	r0, Z+
   1ab7a:	f0 81       	ld	r31, Z
   1ab7c:	e0 2d       	mov	r30, r0
   1ab7e:	64 2f       	mov	r22, r20
   1ab80:	19 94       	eijmp
   1ab82:	ab cf       	rjmp	.-170    	; 0x1aada <_ZN5Print11printNumberEmh>

0001ab84 <_ZN5Print5printEhi>:
   1ab84:	9a 01       	movw	r18, r20
   1ab86:	46 2f       	mov	r20, r22
   1ab88:	50 e0       	ldi	r21, 0x00	; 0
   1ab8a:	60 e0       	ldi	r22, 0x00	; 0
   1ab8c:	70 e0       	ldi	r23, 0x00	; 0
   1ab8e:	ee cf       	rjmp	.-36     	; 0x1ab6c <_ZN5Print5printEmi>

0001ab90 <_ZN5Print7printlnEhi>:
   1ab90:	0f 93       	push	r16
   1ab92:	1f 93       	push	r17
   1ab94:	cf 93       	push	r28
   1ab96:	df 93       	push	r29
   1ab98:	ec 01       	movw	r28, r24
   1ab9a:	f4 df       	rcall	.-24     	; 0x1ab84 <_ZN5Print5printEhi>
   1ab9c:	8c 01       	movw	r16, r24
   1ab9e:	ce 01       	movw	r24, r28
   1aba0:	77 df       	rcall	.-274    	; 0x1aa90 <_ZN5Print7printlnEv>
   1aba2:	80 0f       	add	r24, r16
   1aba4:	91 1f       	adc	r25, r17
   1aba6:	df 91       	pop	r29
   1aba8:	cf 91       	pop	r28
   1abaa:	1f 91       	pop	r17
   1abac:	0f 91       	pop	r16
   1abae:	08 95       	ret

0001abb0 <_ZN5Print5printEji>:
   1abb0:	9a 01       	movw	r18, r20
   1abb2:	ab 01       	movw	r20, r22
   1abb4:	60 e0       	ldi	r22, 0x00	; 0
   1abb6:	70 e0       	ldi	r23, 0x00	; 0
   1abb8:	d9 cf       	rjmp	.-78     	; 0x1ab6c <_ZN5Print5printEmi>

0001abba <_ZN5Print7printlnEji>:
   1abba:	0f 93       	push	r16
   1abbc:	1f 93       	push	r17
   1abbe:	cf 93       	push	r28
   1abc0:	df 93       	push	r29
   1abc2:	ec 01       	movw	r28, r24
   1abc4:	f5 df       	rcall	.-22     	; 0x1abb0 <_ZN5Print5printEji>
   1abc6:	8c 01       	movw	r16, r24
   1abc8:	ce 01       	movw	r24, r28
   1abca:	62 df       	rcall	.-316    	; 0x1aa90 <_ZN5Print7printlnEv>
   1abcc:	80 0f       	add	r24, r16
   1abce:	91 1f       	adc	r25, r17
   1abd0:	df 91       	pop	r29
   1abd2:	cf 91       	pop	r28
   1abd4:	1f 91       	pop	r17
   1abd6:	0f 91       	pop	r16
   1abd8:	08 95       	ret

0001abda <_ZN5Print7printlnEmi>:
   1abda:	0f 93       	push	r16
   1abdc:	1f 93       	push	r17
   1abde:	cf 93       	push	r28
   1abe0:	df 93       	push	r29
   1abe2:	ec 01       	movw	r28, r24
   1abe4:	c3 df       	rcall	.-122    	; 0x1ab6c <_ZN5Print5printEmi>
   1abe6:	8c 01       	movw	r16, r24
   1abe8:	ce 01       	movw	r24, r28
   1abea:	52 df       	rcall	.-348    	; 0x1aa90 <_ZN5Print7printlnEv>
   1abec:	80 0f       	add	r24, r16
   1abee:	91 1f       	adc	r25, r17
   1abf0:	df 91       	pop	r29
   1abf2:	cf 91       	pop	r28
   1abf4:	1f 91       	pop	r17
   1abf6:	0f 91       	pop	r16
   1abf8:	08 95       	ret

0001abfa <_ZN5Print5printEli>:
   1abfa:	cf 92       	push	r12
   1abfc:	df 92       	push	r13
   1abfe:	ef 92       	push	r14
   1ac00:	ff 92       	push	r15
   1ac02:	0f 93       	push	r16
   1ac04:	1f 93       	push	r17
   1ac06:	cf 93       	push	r28
   1ac08:	df 93       	push	r29
   1ac0a:	21 15       	cp	r18, r1
   1ac0c:	31 05       	cpc	r19, r1
   1ac0e:	81 f4       	brne	.+32     	; 0x1ac30 <_ZN5Print5printEli+0x36>
   1ac10:	dc 01       	movw	r26, r24
   1ac12:	ed 91       	ld	r30, X+
   1ac14:	fc 91       	ld	r31, X
   1ac16:	01 90       	ld	r0, Z+
   1ac18:	f0 81       	ld	r31, Z
   1ac1a:	e0 2d       	mov	r30, r0
   1ac1c:	64 2f       	mov	r22, r20
   1ac1e:	df 91       	pop	r29
   1ac20:	cf 91       	pop	r28
   1ac22:	1f 91       	pop	r17
   1ac24:	0f 91       	pop	r16
   1ac26:	ff 90       	pop	r15
   1ac28:	ef 90       	pop	r14
   1ac2a:	df 90       	pop	r13
   1ac2c:	cf 90       	pop	r12
   1ac2e:	19 94       	eijmp
   1ac30:	2a 30       	cpi	r18, 0x0A	; 10
   1ac32:	31 05       	cpc	r19, r1
   1ac34:	f1 f4       	brne	.+60     	; 0x1ac72 <_ZN5Print5printEli+0x78>
   1ac36:	77 ff       	sbrs	r23, 7
   1ac38:	1b c0       	rjmp	.+54     	; 0x1ac70 <_ZN5Print5printEli+0x76>
   1ac3a:	6a 01       	movw	r12, r20
   1ac3c:	7b 01       	movw	r14, r22
   1ac3e:	ec 01       	movw	r28, r24
   1ac40:	6d e2       	ldi	r22, 0x2D	; 45
   1ac42:	1f df       	rcall	.-450    	; 0x1aa82 <_ZN5Print5printEc>
   1ac44:	8c 01       	movw	r16, r24
   1ac46:	44 27       	eor	r20, r20
   1ac48:	55 27       	eor	r21, r21
   1ac4a:	ba 01       	movw	r22, r20
   1ac4c:	4c 19       	sub	r20, r12
   1ac4e:	5d 09       	sbc	r21, r13
   1ac50:	6e 09       	sbc	r22, r14
   1ac52:	7f 09       	sbc	r23, r15
   1ac54:	2a e0       	ldi	r18, 0x0A	; 10
   1ac56:	ce 01       	movw	r24, r28
   1ac58:	40 df       	rcall	.-384    	; 0x1aada <_ZN5Print11printNumberEmh>
   1ac5a:	80 0f       	add	r24, r16
   1ac5c:	91 1f       	adc	r25, r17
   1ac5e:	df 91       	pop	r29
   1ac60:	cf 91       	pop	r28
   1ac62:	1f 91       	pop	r17
   1ac64:	0f 91       	pop	r16
   1ac66:	ff 90       	pop	r15
   1ac68:	ef 90       	pop	r14
   1ac6a:	df 90       	pop	r13
   1ac6c:	cf 90       	pop	r12
   1ac6e:	08 95       	ret
   1ac70:	2a e0       	ldi	r18, 0x0A	; 10
   1ac72:	df 91       	pop	r29
   1ac74:	cf 91       	pop	r28
   1ac76:	1f 91       	pop	r17
   1ac78:	0f 91       	pop	r16
   1ac7a:	ff 90       	pop	r15
   1ac7c:	ef 90       	pop	r14
   1ac7e:	df 90       	pop	r13
   1ac80:	cf 90       	pop	r12
   1ac82:	2b cf       	rjmp	.-426    	; 0x1aada <_ZN5Print11printNumberEmh>

0001ac84 <_ZN5Print5printEii>:
   1ac84:	9a 01       	movw	r18, r20
   1ac86:	ab 01       	movw	r20, r22
   1ac88:	77 0f       	add	r23, r23
   1ac8a:	66 0b       	sbc	r22, r22
   1ac8c:	77 0b       	sbc	r23, r23
   1ac8e:	b5 cf       	rjmp	.-150    	; 0x1abfa <_ZN5Print5printEli>

0001ac90 <_ZN5Print7printlnEii>:
   1ac90:	0f 93       	push	r16
   1ac92:	1f 93       	push	r17
   1ac94:	cf 93       	push	r28
   1ac96:	df 93       	push	r29
   1ac98:	ec 01       	movw	r28, r24
   1ac9a:	f4 df       	rcall	.-24     	; 0x1ac84 <_ZN5Print5printEii>
   1ac9c:	8c 01       	movw	r16, r24
   1ac9e:	ce 01       	movw	r24, r28
   1aca0:	f7 de       	rcall	.-530    	; 0x1aa90 <_ZN5Print7printlnEv>
   1aca2:	80 0f       	add	r24, r16
   1aca4:	91 1f       	adc	r25, r17
   1aca6:	df 91       	pop	r29
   1aca8:	cf 91       	pop	r28
   1acaa:	1f 91       	pop	r17
   1acac:	0f 91       	pop	r16
   1acae:	08 95       	ret

0001acb0 <_ZN5Print10printFloatEdh>:
   1acb0:	7f 92       	push	r7
   1acb2:	8f 92       	push	r8
   1acb4:	9f 92       	push	r9
   1acb6:	af 92       	push	r10
   1acb8:	bf 92       	push	r11
   1acba:	cf 92       	push	r12
   1acbc:	df 92       	push	r13
   1acbe:	ef 92       	push	r14
   1acc0:	ff 92       	push	r15
   1acc2:	0f 93       	push	r16
   1acc4:	1f 93       	push	r17
   1acc6:	cf 93       	push	r28
   1acc8:	df 93       	push	r29
   1acca:	8c 01       	movw	r16, r24
   1accc:	6a 01       	movw	r12, r20
   1acce:	7b 01       	movw	r14, r22
   1acd0:	72 2e       	mov	r7, r18
   1acd2:	9a 01       	movw	r18, r20
   1acd4:	ab 01       	movw	r20, r22
   1acd6:	c7 01       	movw	r24, r14
   1acd8:	b6 01       	movw	r22, r12
   1acda:	0e 94 10 ea 	call	0x1d420	; 0x1d420 <__unordsf2>
   1acde:	88 23       	and	r24, r24
   1ace0:	19 f0       	breq	.+6      	; 0x1ace8 <_ZN5Print10printFloatEdh+0x38>
   1ace2:	6d ee       	ldi	r22, 0xED	; 237
   1ace4:	77 e0       	ldi	r23, 0x07	; 7
   1ace6:	25 c0       	rjmp	.+74     	; 0x1ad32 <_ZN5Print10printFloatEdh+0x82>
   1ace8:	46 01       	movw	r8, r12
   1acea:	57 01       	movw	r10, r14
   1acec:	e8 94       	clt
   1acee:	b7 f8       	bld	r11, 7
   1acf0:	2f ef       	ldi	r18, 0xFF	; 255
   1acf2:	3f ef       	ldi	r19, 0xFF	; 255
   1acf4:	4f e7       	ldi	r20, 0x7F	; 127
   1acf6:	5f e7       	ldi	r21, 0x7F	; 127
   1acf8:	c5 01       	movw	r24, r10
   1acfa:	b4 01       	movw	r22, r8
   1acfc:	0e 94 10 ea 	call	0x1d420	; 0x1d420 <__unordsf2>
   1ad00:	81 11       	cpse	r24, r1
   1ad02:	0c c0       	rjmp	.+24     	; 0x1ad1c <_ZN5Print10printFloatEdh+0x6c>
   1ad04:	2f ef       	ldi	r18, 0xFF	; 255
   1ad06:	3f ef       	ldi	r19, 0xFF	; 255
   1ad08:	4f e7       	ldi	r20, 0x7F	; 127
   1ad0a:	5f e7       	ldi	r21, 0x7F	; 127
   1ad0c:	c5 01       	movw	r24, r10
   1ad0e:	b4 01       	movw	r22, r8
   1ad10:	c8 da       	rcall	.-2672   	; 0x1a2a2 <__cmpsf2>
   1ad12:	18 16       	cp	r1, r24
   1ad14:	1c f4       	brge	.+6      	; 0x1ad1c <_ZN5Print10printFloatEdh+0x6c>
   1ad16:	61 ef       	ldi	r22, 0xF1	; 241
   1ad18:	77 e0       	ldi	r23, 0x07	; 7
   1ad1a:	0b c0       	rjmp	.+22     	; 0x1ad32 <_ZN5Print10printFloatEdh+0x82>
   1ad1c:	2f ef       	ldi	r18, 0xFF	; 255
   1ad1e:	3f ef       	ldi	r19, 0xFF	; 255
   1ad20:	4f e7       	ldi	r20, 0x7F	; 127
   1ad22:	5f e4       	ldi	r21, 0x4F	; 79
   1ad24:	c7 01       	movw	r24, r14
   1ad26:	b6 01       	movw	r22, r12
   1ad28:	06 dc       	rcall	.-2036   	; 0x1a536 <__gesf2>
   1ad2a:	18 16       	cp	r1, r24
   1ad2c:	94 f4       	brge	.+36     	; 0x1ad52 <_ZN5Print10printFloatEdh+0xa2>
   1ad2e:	65 ef       	ldi	r22, 0xF5	; 245
   1ad30:	77 e0       	ldi	r23, 0x07	; 7
   1ad32:	c8 01       	movw	r24, r16
   1ad34:	df 91       	pop	r29
   1ad36:	cf 91       	pop	r28
   1ad38:	1f 91       	pop	r17
   1ad3a:	0f 91       	pop	r16
   1ad3c:	ff 90       	pop	r15
   1ad3e:	ef 90       	pop	r14
   1ad40:	df 90       	pop	r13
   1ad42:	cf 90       	pop	r12
   1ad44:	bf 90       	pop	r11
   1ad46:	af 90       	pop	r10
   1ad48:	9f 90       	pop	r9
   1ad4a:	8f 90       	pop	r8
   1ad4c:	7f 90       	pop	r7
   1ad4e:	0c 94 18 86 	jmp	0x10c30	; 0x10c30 <_ZN5Print5writeEPKc>
   1ad52:	2f ef       	ldi	r18, 0xFF	; 255
   1ad54:	3f ef       	ldi	r19, 0xFF	; 255
   1ad56:	4f e7       	ldi	r20, 0x7F	; 127
   1ad58:	5f ec       	ldi	r21, 0xCF	; 207
   1ad5a:	c7 01       	movw	r24, r14
   1ad5c:	b6 01       	movw	r22, r12
   1ad5e:	a1 da       	rcall	.-2750   	; 0x1a2a2 <__cmpsf2>
   1ad60:	87 fd       	sbrc	r24, 7
   1ad62:	e5 cf       	rjmp	.-54     	; 0x1ad2e <_ZN5Print10printFloatEdh+0x7e>
   1ad64:	20 e0       	ldi	r18, 0x00	; 0
   1ad66:	30 e0       	ldi	r19, 0x00	; 0
   1ad68:	a9 01       	movw	r20, r18
   1ad6a:	c7 01       	movw	r24, r14
   1ad6c:	b6 01       	movw	r22, r12
   1ad6e:	99 da       	rcall	.-2766   	; 0x1a2a2 <__cmpsf2>
   1ad70:	87 ff       	sbrs	r24, 7
   1ad72:	09 c0       	rjmp	.+18     	; 0x1ad86 <_ZN5Print10printFloatEdh+0xd6>
   1ad74:	6d e2       	ldi	r22, 0x2D	; 45
   1ad76:	c8 01       	movw	r24, r16
   1ad78:	84 de       	rcall	.-760    	; 0x1aa82 <_ZN5Print5printEc>
   1ad7a:	ec 01       	movw	r28, r24
   1ad7c:	f7 fa       	bst	r15, 7
   1ad7e:	f0 94       	com	r15
   1ad80:	f7 f8       	bld	r15, 7
   1ad82:	f0 94       	com	r15
   1ad84:	02 c0       	rjmp	.+4      	; 0x1ad8a <_ZN5Print10printFloatEdh+0xda>
   1ad86:	c0 e0       	ldi	r28, 0x00	; 0
   1ad88:	d0 e0       	ldi	r29, 0x00	; 0
   1ad8a:	b1 2c       	mov	r11, r1
   1ad8c:	60 e0       	ldi	r22, 0x00	; 0
   1ad8e:	70 e0       	ldi	r23, 0x00	; 0
   1ad90:	80 e0       	ldi	r24, 0x00	; 0
   1ad92:	9f e3       	ldi	r25, 0x3F	; 63
   1ad94:	7b 14       	cp	r7, r11
   1ad96:	39 f0       	breq	.+14     	; 0x1ada6 <_ZN5Print10printFloatEdh+0xf6>
   1ad98:	20 e0       	ldi	r18, 0x00	; 0
   1ad9a:	30 e0       	ldi	r19, 0x00	; 0
   1ad9c:	40 e2       	ldi	r20, 0x20	; 32
   1ad9e:	51 e4       	ldi	r21, 0x41	; 65
   1ada0:	84 da       	rcall	.-2808   	; 0x1a2aa <__divsf3>
   1ada2:	b3 94       	inc	r11
   1ada4:	f7 cf       	rjmp	.-18     	; 0x1ad94 <_ZN5Print10printFloatEdh+0xe4>
   1ada6:	a7 01       	movw	r20, r14
   1ada8:	96 01       	movw	r18, r12
   1adaa:	17 da       	rcall	.-3026   	; 0x1a1da <__addsf3>
   1adac:	6b 01       	movw	r12, r22
   1adae:	7c 01       	movw	r14, r24
   1adb0:	e4 da       	rcall	.-2616   	; 0x1a37a <__fixunssfsi>
   1adb2:	4b 01       	movw	r8, r22
   1adb4:	5c 01       	movw	r10, r24
   1adb6:	2a e0       	ldi	r18, 0x0A	; 10
   1adb8:	ab 01       	movw	r20, r22
   1adba:	bc 01       	movw	r22, r24
   1adbc:	c8 01       	movw	r24, r16
   1adbe:	8d de       	rcall	.-742    	; 0x1aada <_ZN5Print11printNumberEmh>
   1adc0:	c8 0f       	add	r28, r24
   1adc2:	d9 1f       	adc	r29, r25
   1adc4:	77 20       	and	r7, r7
   1adc6:	79 f1       	breq	.+94     	; 0x1ae26 <_ZN5Print10printFloatEdh+0x176>
   1adc8:	c5 01       	movw	r24, r10
   1adca:	b4 01       	movw	r22, r8
   1adcc:	02 db       	rcall	.-2556   	; 0x1a3d2 <__floatunsisf>
   1adce:	9b 01       	movw	r18, r22
   1add0:	ac 01       	movw	r20, r24
   1add2:	c7 01       	movw	r24, r14
   1add4:	b6 01       	movw	r22, r12
   1add6:	00 da       	rcall	.-3072   	; 0x1a1d8 <__subsf3>
   1add8:	6b 01       	movw	r12, r22
   1adda:	7c 01       	movw	r14, r24
   1addc:	6e e2       	ldi	r22, 0x2E	; 46
   1adde:	c8 01       	movw	r24, r16
   1ade0:	50 de       	rcall	.-864    	; 0x1aa82 <_ZN5Print5printEc>
   1ade2:	c8 0f       	add	r28, r24
   1ade4:	d9 1f       	adc	r29, r25
   1ade6:	20 e0       	ldi	r18, 0x00	; 0
   1ade8:	30 e0       	ldi	r19, 0x00	; 0
   1adea:	40 e2       	ldi	r20, 0x20	; 32
   1adec:	51 e4       	ldi	r21, 0x41	; 65
   1adee:	c7 01       	movw	r24, r14
   1adf0:	b6 01       	movw	r22, r12
   1adf2:	a5 db       	rcall	.-2230   	; 0x1a53e <__mulsf3>
   1adf4:	4b 01       	movw	r8, r22
   1adf6:	5c 01       	movw	r10, r24
   1adf8:	c0 da       	rcall	.-2688   	; 0x1a37a <__fixunssfsi>
   1adfa:	6b 01       	movw	r12, r22
   1adfc:	7c 01       	movw	r14, r24
   1adfe:	4a e0       	ldi	r20, 0x0A	; 10
   1ae00:	50 e0       	ldi	r21, 0x00	; 0
   1ae02:	c8 01       	movw	r24, r16
   1ae04:	d5 de       	rcall	.-598    	; 0x1abb0 <_ZN5Print5printEji>
   1ae06:	c8 0f       	add	r28, r24
   1ae08:	d9 1f       	adc	r29, r25
   1ae0a:	b6 01       	movw	r22, r12
   1ae0c:	80 e0       	ldi	r24, 0x00	; 0
   1ae0e:	90 e0       	ldi	r25, 0x00	; 0
   1ae10:	e0 da       	rcall	.-2624   	; 0x1a3d2 <__floatunsisf>
   1ae12:	9b 01       	movw	r18, r22
   1ae14:	ac 01       	movw	r20, r24
   1ae16:	c5 01       	movw	r24, r10
   1ae18:	b4 01       	movw	r22, r8
   1ae1a:	de d9       	rcall	.-3140   	; 0x1a1d8 <__subsf3>
   1ae1c:	6b 01       	movw	r12, r22
   1ae1e:	7c 01       	movw	r14, r24
   1ae20:	7a 94       	dec	r7
   1ae22:	71 10       	cpse	r7, r1
   1ae24:	e0 cf       	rjmp	.-64     	; 0x1ade6 <_ZN5Print10printFloatEdh+0x136>
   1ae26:	ce 01       	movw	r24, r28
   1ae28:	df 91       	pop	r29
   1ae2a:	cf 91       	pop	r28
   1ae2c:	1f 91       	pop	r17
   1ae2e:	0f 91       	pop	r16
   1ae30:	ff 90       	pop	r15
   1ae32:	ef 90       	pop	r14
   1ae34:	df 90       	pop	r13
   1ae36:	cf 90       	pop	r12
   1ae38:	bf 90       	pop	r11
   1ae3a:	af 90       	pop	r10
   1ae3c:	9f 90       	pop	r9
   1ae3e:	8f 90       	pop	r8
   1ae40:	7f 90       	pop	r7
   1ae42:	08 95       	ret

0001ae44 <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
   1ae44:	0f 93       	push	r16
   1ae46:	1f 93       	push	r17
   1ae48:	cf 93       	push	r28
   1ae4a:	df 93       	push	r29
   1ae4c:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1ae4e:	30 df       	rcall	.-416    	; 0x1acb0 <_ZN5Print10printFloatEdh>
   1ae50:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
   1ae52:	ce 01       	movw	r24, r28
   1ae54:	1d de       	rcall	.-966    	; 0x1aa90 <_ZN5Print7printlnEv>
  return n;
}
   1ae56:	80 0f       	add	r24, r16
   1ae58:	91 1f       	adc	r25, r17
   1ae5a:	df 91       	pop	r29
   1ae5c:	cf 91       	pop	r28
   1ae5e:	1f 91       	pop	r17
   1ae60:	0f 91       	pop	r16
   1ae62:	08 95       	ret

0001ae64 <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
   1ae64:	1f 92       	push	r1
   1ae66:	0f 92       	push	r0
   1ae68:	0f b6       	in	r0, 0x3f	; 63
   1ae6a:	0f 92       	push	r0
   1ae6c:	11 24       	eor	r1, r1
   1ae6e:	2f 93       	push	r18
   1ae70:	3f 93       	push	r19
   1ae72:	8f 93       	push	r24
   1ae74:	9f 93       	push	r25
   1ae76:	af 93       	push	r26
   1ae78:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
   1ae7a:	80 91 41 18 	lds	r24, 0x1841	; 0x801841 <timer0_millis>
   1ae7e:	90 91 42 18 	lds	r25, 0x1842	; 0x801842 <timer0_millis+0x1>
   1ae82:	a0 91 43 18 	lds	r26, 0x1843	; 0x801843 <timer0_millis+0x2>
   1ae86:	b0 91 44 18 	lds	r27, 0x1844	; 0x801844 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
   1ae8a:	30 91 40 18 	lds	r19, 0x1840	; 0x801840 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
   1ae8e:	23 e0       	ldi	r18, 0x03	; 3
   1ae90:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
   1ae92:	2d 37       	cpi	r18, 0x7D	; 125
   1ae94:	20 f4       	brcc	.+8      	; 0x1ae9e <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
   1ae96:	01 96       	adiw	r24, 0x01	; 1
   1ae98:	a1 1d       	adc	r26, r1
   1ae9a:	b1 1d       	adc	r27, r1
   1ae9c:	05 c0       	rjmp	.+10     	; 0x1aea8 <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
   1ae9e:	26 e8       	ldi	r18, 0x86	; 134
   1aea0:	23 0f       	add	r18, r19
		m += 1;
   1aea2:	02 96       	adiw	r24, 0x02	; 2
   1aea4:	a1 1d       	adc	r26, r1
   1aea6:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
   1aea8:	20 93 40 18 	sts	0x1840, r18	; 0x801840 <timer0_fract>
	timer0_millis = m;
   1aeac:	80 93 41 18 	sts	0x1841, r24	; 0x801841 <timer0_millis>
   1aeb0:	90 93 42 18 	sts	0x1842, r25	; 0x801842 <timer0_millis+0x1>
   1aeb4:	a0 93 43 18 	sts	0x1843, r26	; 0x801843 <timer0_millis+0x2>
   1aeb8:	b0 93 44 18 	sts	0x1844, r27	; 0x801844 <timer0_millis+0x3>
	timer0_overflow_count++;
   1aebc:	80 91 45 18 	lds	r24, 0x1845	; 0x801845 <timer0_overflow_count>
   1aec0:	90 91 46 18 	lds	r25, 0x1846	; 0x801846 <timer0_overflow_count+0x1>
   1aec4:	a0 91 47 18 	lds	r26, 0x1847	; 0x801847 <timer0_overflow_count+0x2>
   1aec8:	b0 91 48 18 	lds	r27, 0x1848	; 0x801848 <timer0_overflow_count+0x3>
   1aecc:	01 96       	adiw	r24, 0x01	; 1
   1aece:	a1 1d       	adc	r26, r1
   1aed0:	b1 1d       	adc	r27, r1
   1aed2:	80 93 45 18 	sts	0x1845, r24	; 0x801845 <timer0_overflow_count>
   1aed6:	90 93 46 18 	sts	0x1846, r25	; 0x801846 <timer0_overflow_count+0x1>
   1aeda:	a0 93 47 18 	sts	0x1847, r26	; 0x801847 <timer0_overflow_count+0x2>
   1aede:	b0 93 48 18 	sts	0x1848, r27	; 0x801848 <timer0_overflow_count+0x3>
}
   1aee2:	bf 91       	pop	r27
   1aee4:	af 91       	pop	r26
   1aee6:	9f 91       	pop	r25
   1aee8:	8f 91       	pop	r24
   1aeea:	3f 91       	pop	r19
   1aeec:	2f 91       	pop	r18
   1aeee:	0f 90       	pop	r0
   1aef0:	0f be       	out	0x3f, r0	; 63
   1aef2:	0f 90       	pop	r0
   1aef4:	1f 90       	pop	r1
   1aef6:	18 95       	reti

0001aef8 <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
   1aef8:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
   1aefa:	f8 94       	cli
	m = timer0_millis;
   1aefc:	60 91 41 18 	lds	r22, 0x1841	; 0x801841 <timer0_millis>
   1af00:	70 91 42 18 	lds	r23, 0x1842	; 0x801842 <timer0_millis+0x1>
   1af04:	80 91 43 18 	lds	r24, 0x1843	; 0x801843 <timer0_millis+0x2>
   1af08:	90 91 44 18 	lds	r25, 0x1844	; 0x801844 <timer0_millis+0x3>
	SREG = oldSREG;
   1af0c:	2f bf       	out	0x3f, r18	; 63

	return m;
}
   1af0e:	08 95       	ret

0001af10 <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
   1af10:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
   1af12:	f8 94       	cli
	m = timer0_overflow_count;
   1af14:	80 91 45 18 	lds	r24, 0x1845	; 0x801845 <timer0_overflow_count>
   1af18:	90 91 46 18 	lds	r25, 0x1846	; 0x801846 <timer0_overflow_count+0x1>
   1af1c:	a0 91 47 18 	lds	r26, 0x1847	; 0x801847 <timer0_overflow_count+0x2>
   1af20:	b0 91 48 18 	lds	r27, 0x1848	; 0x801848 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
   1af24:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
   1af26:	a8 9b       	sbis	0x15, 0	; 21
   1af28:	05 c0       	rjmp	.+10     	; 0x1af34 <micros+0x24>
   1af2a:	2f 3f       	cpi	r18, 0xFF	; 255
   1af2c:	19 f0       	breq	.+6      	; 0x1af34 <micros+0x24>
		m++;
   1af2e:	01 96       	adiw	r24, 0x01	; 1
   1af30:	a1 1d       	adc	r26, r1
   1af32:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
   1af34:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
   1af36:	ba 2f       	mov	r27, r26
   1af38:	a9 2f       	mov	r26, r25
   1af3a:	98 2f       	mov	r25, r24
   1af3c:	88 27       	eor	r24, r24
   1af3e:	82 0f       	add	r24, r18
   1af40:	91 1d       	adc	r25, r1
   1af42:	a1 1d       	adc	r26, r1
   1af44:	b1 1d       	adc	r27, r1
   1af46:	bc 01       	movw	r22, r24
   1af48:	cd 01       	movw	r24, r26
   1af4a:	42 e0       	ldi	r20, 0x02	; 2
   1af4c:	66 0f       	add	r22, r22
   1af4e:	77 1f       	adc	r23, r23
   1af50:	88 1f       	adc	r24, r24
   1af52:	99 1f       	adc	r25, r25
   1af54:	4a 95       	dec	r20
   1af56:	d1 f7       	brne	.-12     	; 0x1af4c <micros+0x3c>
}
   1af58:	08 95       	ret

0001af5a <delay>:

void delay(unsigned long ms)
{
   1af5a:	8f 92       	push	r8
   1af5c:	9f 92       	push	r9
   1af5e:	af 92       	push	r10
   1af60:	bf 92       	push	r11
   1af62:	cf 92       	push	r12
   1af64:	df 92       	push	r13
   1af66:	ef 92       	push	r14
   1af68:	ff 92       	push	r15
   1af6a:	6b 01       	movw	r12, r22
   1af6c:	7c 01       	movw	r14, r24
	uint32_t start = micros();
   1af6e:	d0 df       	rcall	.-96     	; 0x1af10 <micros>
   1af70:	4b 01       	movw	r8, r22
   1af72:	5c 01       	movw	r10, r24

	while (ms > 0) {
   1af74:	c1 14       	cp	r12, r1
   1af76:	d1 04       	cpc	r13, r1
   1af78:	e1 04       	cpc	r14, r1
   1af7a:	f1 04       	cpc	r15, r1
   1af7c:	f9 f0       	breq	.+62     	; 0x1afbc <delay+0x62>
		yield();
   1af7e:	0e 94 db e2 	call	0x1c5b6	; 0x1c5b6 <yield>
		while ( ms > 0 && (micros() - start) >= 1000) {
   1af82:	c6 df       	rcall	.-116    	; 0x1af10 <micros>
   1af84:	dc 01       	movw	r26, r24
   1af86:	cb 01       	movw	r24, r22
   1af88:	88 19       	sub	r24, r8
   1af8a:	99 09       	sbc	r25, r9
   1af8c:	aa 09       	sbc	r26, r10
   1af8e:	bb 09       	sbc	r27, r11
   1af90:	88 3e       	cpi	r24, 0xE8	; 232
   1af92:	93 40       	sbci	r25, 0x03	; 3
   1af94:	a1 05       	cpc	r26, r1
   1af96:	b1 05       	cpc	r27, r1
   1af98:	68 f3       	brcs	.-38     	; 0x1af74 <delay+0x1a>
			ms--;
   1af9a:	21 e0       	ldi	r18, 0x01	; 1
   1af9c:	c2 1a       	sub	r12, r18
   1af9e:	d1 08       	sbc	r13, r1
   1afa0:	e1 08       	sbc	r14, r1
   1afa2:	f1 08       	sbc	r15, r1
			start += 1000;
   1afa4:	88 ee       	ldi	r24, 0xE8	; 232
   1afa6:	88 0e       	add	r8, r24
   1afa8:	83 e0       	ldi	r24, 0x03	; 3
   1afaa:	98 1e       	adc	r9, r24
   1afac:	a1 1c       	adc	r10, r1
   1afae:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
   1afb0:	c1 14       	cp	r12, r1
   1afb2:	d1 04       	cpc	r13, r1
   1afb4:	e1 04       	cpc	r14, r1
   1afb6:	f1 04       	cpc	r15, r1
   1afb8:	21 f7       	brne	.-56     	; 0x1af82 <delay+0x28>
   1afba:	dc cf       	rjmp	.-72     	; 0x1af74 <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
   1afbc:	ff 90       	pop	r15
   1afbe:	ef 90       	pop	r14
   1afc0:	df 90       	pop	r13
   1afc2:	cf 90       	pop	r12
   1afc4:	bf 90       	pop	r11
   1afc6:	af 90       	pop	r10
   1afc8:	9f 90       	pop	r9
   1afca:	8f 90       	pop	r8
   1afcc:	08 95       	ret

0001afce <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
   1afce:	82 30       	cpi	r24, 0x02	; 2
   1afd0:	91 05       	cpc	r25, r1
   1afd2:	38 f0       	brcs	.+14     	; 0x1afe2 <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
   1afd4:	88 0f       	add	r24, r24
   1afd6:	99 1f       	adc	r25, r25
   1afd8:	88 0f       	add	r24, r24
   1afda:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
   1afdc:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
   1afde:	01 97       	sbiw	r24, 0x01	; 1
   1afe0:	f1 f7       	brne	.-4      	; 0x1afde <delayMicroseconds+0x10>
   1afe2:	08 95       	ret

0001afe4 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
   1afe4:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
   1afe6:	84 b5       	in	r24, 0x24	; 36
   1afe8:	82 60       	ori	r24, 0x02	; 2
   1afea:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
   1afec:	84 b5       	in	r24, 0x24	; 36
   1afee:	81 60       	ori	r24, 0x01	; 1
   1aff0:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
   1aff2:	85 b5       	in	r24, 0x25	; 37
   1aff4:	82 60       	ori	r24, 0x02	; 2
   1aff6:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
   1aff8:	85 b5       	in	r24, 0x25	; 37
   1affa:	81 60       	ori	r24, 0x01	; 1
   1affc:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
   1affe:	ee e6       	ldi	r30, 0x6E	; 110
   1b000:	f0 e0       	ldi	r31, 0x00	; 0
   1b002:	80 81       	ld	r24, Z
   1b004:	81 60       	ori	r24, 0x01	; 1
   1b006:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
   1b008:	e1 e8       	ldi	r30, 0x81	; 129
   1b00a:	f0 e0       	ldi	r31, 0x00	; 0
   1b00c:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
   1b00e:	80 81       	ld	r24, Z
   1b010:	82 60       	ori	r24, 0x02	; 2
   1b012:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
   1b014:	80 81       	ld	r24, Z
   1b016:	81 60       	ori	r24, 0x01	; 1
   1b018:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
   1b01a:	e0 e8       	ldi	r30, 0x80	; 128
   1b01c:	f0 e0       	ldi	r31, 0x00	; 0
   1b01e:	80 81       	ld	r24, Z
   1b020:	81 60       	ori	r24, 0x01	; 1
   1b022:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
   1b024:	e1 eb       	ldi	r30, 0xB1	; 177
   1b026:	f0 e0       	ldi	r31, 0x00	; 0
   1b028:	80 81       	ld	r24, Z
   1b02a:	84 60       	ori	r24, 0x04	; 4
   1b02c:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
   1b02e:	e0 eb       	ldi	r30, 0xB0	; 176
   1b030:	f0 e0       	ldi	r31, 0x00	; 0
   1b032:	80 81       	ld	r24, Z
   1b034:	81 60       	ori	r24, 0x01	; 1
   1b036:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
   1b038:	e1 e9       	ldi	r30, 0x91	; 145
   1b03a:	f0 e0       	ldi	r31, 0x00	; 0
   1b03c:	80 81       	ld	r24, Z
   1b03e:	82 60       	ori	r24, 0x02	; 2
   1b040:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
   1b042:	80 81       	ld	r24, Z
   1b044:	81 60       	ori	r24, 0x01	; 1
   1b046:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
   1b048:	e0 e9       	ldi	r30, 0x90	; 144
   1b04a:	f0 e0       	ldi	r31, 0x00	; 0
   1b04c:	80 81       	ld	r24, Z
   1b04e:	81 60       	ori	r24, 0x01	; 1
   1b050:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
   1b052:	e1 ea       	ldi	r30, 0xA1	; 161
   1b054:	f0 e0       	ldi	r31, 0x00	; 0
   1b056:	80 81       	ld	r24, Z
   1b058:	82 60       	ori	r24, 0x02	; 2
   1b05a:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
   1b05c:	80 81       	ld	r24, Z
   1b05e:	81 60       	ori	r24, 0x01	; 1
   1b060:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
   1b062:	e0 ea       	ldi	r30, 0xA0	; 160
   1b064:	f0 e0       	ldi	r31, 0x00	; 0
   1b066:	80 81       	ld	r24, Z
   1b068:	81 60       	ori	r24, 0x01	; 1
   1b06a:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
   1b06c:	e1 e2       	ldi	r30, 0x21	; 33
   1b06e:	f1 e0       	ldi	r31, 0x01	; 1
   1b070:	80 81       	ld	r24, Z
   1b072:	82 60       	ori	r24, 0x02	; 2
   1b074:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
   1b076:	80 81       	ld	r24, Z
   1b078:	81 60       	ori	r24, 0x01	; 1
   1b07a:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
   1b07c:	e0 e2       	ldi	r30, 0x20	; 32
   1b07e:	f1 e0       	ldi	r31, 0x01	; 1
   1b080:	80 81       	ld	r24, Z
   1b082:	81 60       	ori	r24, 0x01	; 1
   1b084:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
   1b086:	ea e7       	ldi	r30, 0x7A	; 122
   1b088:	f0 e0       	ldi	r31, 0x00	; 0
   1b08a:	80 81       	ld	r24, Z
   1b08c:	84 60       	ori	r24, 0x04	; 4
   1b08e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
   1b090:	80 81       	ld	r24, Z
   1b092:	82 60       	ori	r24, 0x02	; 2
   1b094:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
   1b096:	80 81       	ld	r24, Z
   1b098:	81 60       	ori	r24, 0x01	; 1
   1b09a:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
   1b09c:	80 81       	ld	r24, Z
   1b09e:	80 68       	ori	r24, 0x80	; 128
   1b0a0:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
   1b0a2:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
   1b0a6:	08 95       	ret

0001b0a8 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
   1b0a8:	90 e0       	ldi	r25, 0x00	; 0
   1b0aa:	fc 01       	movw	r30, r24
   1b0ac:	31 97       	sbiw	r30, 0x01	; 1
   1b0ae:	e2 31       	cpi	r30, 0x12	; 18
   1b0b0:	f1 05       	cpc	r31, r1
   1b0b2:	08 f0       	brcs	.+2      	; 0x1b0b6 <turnOffPWM+0xe>
   1b0b4:	4e c0       	rjmp	.+156    	; 0x1b152 <turnOffPWM+0xaa>
   1b0b6:	88 27       	eor	r24, r24
   1b0b8:	e9 50       	subi	r30, 0x09	; 9
   1b0ba:	ff 4f       	sbci	r31, 0xFF	; 255
   1b0bc:	8f 4f       	sbci	r24, 0xFF	; 255
   1b0be:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
   1b0c2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b0c6:	8f 77       	andi	r24, 0x7F	; 127
   1b0c8:	03 c0       	rjmp	.+6      	; 0x1b0d0 <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
   1b0ca:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b0ce:	8f 7d       	andi	r24, 0xDF	; 223
   1b0d0:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b0d4:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
   1b0d6:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1b0da:	87 7f       	andi	r24, 0xF7	; 247
   1b0dc:	f9 cf       	rjmp	.-14     	; 0x1b0d0 <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
   1b0de:	84 b5       	in	r24, 0x24	; 36
   1b0e0:	8f 77       	andi	r24, 0x7F	; 127
   1b0e2:	02 c0       	rjmp	.+4      	; 0x1b0e8 <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
   1b0e4:	84 b5       	in	r24, 0x24	; 36
   1b0e6:	8f 7d       	andi	r24, 0xDF	; 223
   1b0e8:	84 bd       	out	0x24, r24	; 36
   1b0ea:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
   1b0ec:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1b0f0:	8f 77       	andi	r24, 0x7F	; 127
   1b0f2:	03 c0       	rjmp	.+6      	; 0x1b0fa <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
   1b0f4:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1b0f8:	8f 7d       	andi	r24, 0xDF	; 223
   1b0fa:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1b0fe:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
   1b100:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b104:	8f 77       	andi	r24, 0x7F	; 127
   1b106:	07 c0       	rjmp	.+14     	; 0x1b116 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
   1b108:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b10c:	8f 7d       	andi	r24, 0xDF	; 223
   1b10e:	03 c0       	rjmp	.+6      	; 0x1b116 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
   1b110:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b114:	87 7f       	andi	r24, 0xF7	; 247
   1b116:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1b11a:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
   1b11c:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b120:	8f 77       	andi	r24, 0x7F	; 127
   1b122:	07 c0       	rjmp	.+14     	; 0x1b132 <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
   1b124:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b128:	8f 7d       	andi	r24, 0xDF	; 223
   1b12a:	03 c0       	rjmp	.+6      	; 0x1b132 <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
   1b12c:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b130:	87 7f       	andi	r24, 0xF7	; 247
   1b132:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1b136:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
   1b138:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b13c:	8f 77       	andi	r24, 0x7F	; 127
   1b13e:	07 c0       	rjmp	.+14     	; 0x1b14e <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
   1b140:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b144:	8f 7d       	andi	r24, 0xDF	; 223
   1b146:	03 c0       	rjmp	.+6      	; 0x1b14e <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
   1b148:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b14c:	87 7f       	andi	r24, 0xF7	; 247
   1b14e:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1b152:	08 95       	ret

0001b154 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
   1b154:	cf 93       	push	r28
   1b156:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
   1b158:	90 e0       	ldi	r25, 0x00	; 0
   1b15a:	fc 01       	movw	r30, r24
   1b15c:	ea 57       	subi	r30, 0x7A	; 122
   1b15e:	f9 4b       	sbci	r31, 0xB9	; 185
   1b160:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
   1b162:	fc 01       	movw	r30, r24
   1b164:	e4 53       	subi	r30, 0x34	; 52
   1b166:	f9 4b       	sbci	r31, 0xB9	; 185
   1b168:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
   1b16a:	88 23       	and	r24, r24
   1b16c:	61 f1       	breq	.+88     	; 0x1b1c6 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
   1b16e:	90 e0       	ldi	r25, 0x00	; 0
   1b170:	88 0f       	add	r24, r24
   1b172:	99 1f       	adc	r25, r25
   1b174:	fc 01       	movw	r30, r24
   1b176:	ea 5b       	subi	r30, 0xBA	; 186
   1b178:	f8 4b       	sbci	r31, 0xB8	; 184
   1b17a:	c5 91       	lpm	r28, Z+
   1b17c:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
   1b17e:	fc 01       	movw	r30, r24
   1b180:	e4 5d       	subi	r30, 0xD4	; 212
   1b182:	f8 4b       	sbci	r31, 0xB8	; 184
   1b184:	a5 91       	lpm	r26, Z+
   1b186:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
   1b188:	61 11       	cpse	r22, r1
   1b18a:	09 c0       	rjmp	.+18     	; 0x1b19e <pinMode+0x4a>
		uint8_t oldSREG = SREG;
   1b18c:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1b18e:	f8 94       	cli
		*reg &= ~bit;
   1b190:	88 81       	ld	r24, Y
   1b192:	20 95       	com	r18
   1b194:	82 23       	and	r24, r18
   1b196:	88 83       	st	Y, r24
		*out &= ~bit;
   1b198:	ec 91       	ld	r30, X
   1b19a:	2e 23       	and	r18, r30
   1b19c:	0b c0       	rjmp	.+22     	; 0x1b1b4 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
   1b19e:	62 30       	cpi	r22, 0x02	; 2
   1b1a0:	61 f4       	brne	.+24     	; 0x1b1ba <pinMode+0x66>
		uint8_t oldSREG = SREG;
   1b1a2:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1b1a4:	f8 94       	cli
		*reg &= ~bit;
   1b1a6:	88 81       	ld	r24, Y
   1b1a8:	32 2f       	mov	r19, r18
   1b1aa:	30 95       	com	r19
   1b1ac:	83 23       	and	r24, r19
   1b1ae:	88 83       	st	Y, r24
		*out |= bit;
   1b1b0:	ec 91       	ld	r30, X
   1b1b2:	2e 2b       	or	r18, r30
   1b1b4:	2c 93       	st	X, r18
		SREG = oldSREG;
   1b1b6:	9f bf       	out	0x3f, r25	; 63
   1b1b8:	06 c0       	rjmp	.+12     	; 0x1b1c6 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
   1b1ba:	8f b7       	in	r24, 0x3f	; 63
                cli();
   1b1bc:	f8 94       	cli
		*reg |= bit;
   1b1be:	e8 81       	ld	r30, Y
   1b1c0:	2e 2b       	or	r18, r30
   1b1c2:	28 83       	st	Y, r18
		SREG = oldSREG;
   1b1c4:	8f bf       	out	0x3f, r24	; 63
	}
}
   1b1c6:	df 91       	pop	r29
   1b1c8:	cf 91       	pop	r28
   1b1ca:	08 95       	ret

0001b1cc <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
   1b1cc:	1f 93       	push	r17
   1b1ce:	cf 93       	push	r28
   1b1d0:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1b1d2:	28 2f       	mov	r18, r24
   1b1d4:	30 e0       	ldi	r19, 0x00	; 0
   1b1d6:	f9 01       	movw	r30, r18
   1b1d8:	e0 5c       	subi	r30, 0xC0	; 192
   1b1da:	f9 4b       	sbci	r31, 0xB9	; 185
   1b1dc:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1b1de:	f9 01       	movw	r30, r18
   1b1e0:	ea 57       	subi	r30, 0x7A	; 122
   1b1e2:	f9 4b       	sbci	r31, 0xB9	; 185
   1b1e4:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1b1e6:	f9 01       	movw	r30, r18
   1b1e8:	e4 53       	subi	r30, 0x34	; 52
   1b1ea:	f9 4b       	sbci	r31, 0xB9	; 185
   1b1ec:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
   1b1ee:	cc 23       	and	r28, r28
   1b1f0:	b9 f0       	breq	.+46     	; 0x1b220 <digitalWrite+0x54>
   1b1f2:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1b1f4:	81 11       	cpse	r24, r1
   1b1f6:	58 df       	rcall	.-336    	; 0x1b0a8 <turnOffPWM>

	out = portOutputRegister(port);
   1b1f8:	ec 2f       	mov	r30, r28
   1b1fa:	f0 e0       	ldi	r31, 0x00	; 0
   1b1fc:	ee 0f       	add	r30, r30
   1b1fe:	ff 1f       	adc	r31, r31
   1b200:	e4 5d       	subi	r30, 0xD4	; 212
   1b202:	f8 4b       	sbci	r31, 0xB8	; 184
   1b204:	a5 91       	lpm	r26, Z+
   1b206:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
   1b208:	9f b7       	in	r25, 0x3f	; 63
	cli();
   1b20a:	f8 94       	cli

	if (val == LOW) {
   1b20c:	11 11       	cpse	r17, r1
   1b20e:	04 c0       	rjmp	.+8      	; 0x1b218 <digitalWrite+0x4c>
		*out &= ~bit;
   1b210:	8c 91       	ld	r24, X
   1b212:	d0 95       	com	r29
   1b214:	d8 23       	and	r29, r24
   1b216:	02 c0       	rjmp	.+4      	; 0x1b21c <digitalWrite+0x50>
	} else {
		*out |= bit;
   1b218:	ec 91       	ld	r30, X
   1b21a:	de 2b       	or	r29, r30
   1b21c:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
   1b21e:	9f bf       	out	0x3f, r25	; 63
}
   1b220:	df 91       	pop	r29
   1b222:	cf 91       	pop	r28
   1b224:	1f 91       	pop	r17
   1b226:	08 95       	ret

0001b228 <digitalRead>:

int digitalRead(uint8_t pin)
{
   1b228:	cf 93       	push	r28
   1b22a:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1b22c:	28 2f       	mov	r18, r24
   1b22e:	30 e0       	ldi	r19, 0x00	; 0
   1b230:	f9 01       	movw	r30, r18
   1b232:	e0 5c       	subi	r30, 0xC0	; 192
   1b234:	f9 4b       	sbci	r31, 0xB9	; 185
   1b236:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1b238:	f9 01       	movw	r30, r18
   1b23a:	ea 57       	subi	r30, 0x7A	; 122
   1b23c:	f9 4b       	sbci	r31, 0xB9	; 185
   1b23e:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1b240:	f9 01       	movw	r30, r18
   1b242:	e4 53       	subi	r30, 0x34	; 52
   1b244:	f9 4b       	sbci	r31, 0xB9	; 185
   1b246:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
   1b248:	cc 23       	and	r28, r28
   1b24a:	89 f0       	breq	.+34     	; 0x1b26e <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1b24c:	81 11       	cpse	r24, r1
   1b24e:	2c df       	rcall	.-424    	; 0x1b0a8 <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
   1b250:	ec 2f       	mov	r30, r28
   1b252:	f0 e0       	ldi	r31, 0x00	; 0
   1b254:	ee 0f       	add	r30, r30
   1b256:	ff 1f       	adc	r31, r31
   1b258:	ee 5e       	subi	r30, 0xEE	; 238
   1b25a:	f8 4b       	sbci	r31, 0xB8	; 184
   1b25c:	a5 91       	lpm	r26, Z+
   1b25e:	b4 91       	lpm	r27, Z
   1b260:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
   1b262:	ed 23       	and	r30, r29
   1b264:	81 e0       	ldi	r24, 0x01	; 1
   1b266:	90 e0       	ldi	r25, 0x00	; 0
   1b268:	21 f4       	brne	.+8      	; 0x1b272 <digitalRead+0x4a>
   1b26a:	80 e0       	ldi	r24, 0x00	; 0
   1b26c:	02 c0       	rjmp	.+4      	; 0x1b272 <digitalRead+0x4a>
   1b26e:	80 e0       	ldi	r24, 0x00	; 0
   1b270:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
   1b272:	df 91       	pop	r29
   1b274:	cf 91       	pop	r28
   1b276:	08 95       	ret

0001b278 <_ZN13EnergyMonitor7currentEjd>:
    //    - every 2 crosses we will have sampled 1 wavelength
    //    - so this method allows us to sample an integer number of half wavelengths which increases accuracy
    //-----------------------------------------------------------------------------
    lastVCross = checkVCross;
    if (sampleV > startV) checkVCross = true;
                     else checkVCross = false;
   1b278:	fc 01       	movw	r30, r24
   1b27a:	77 8b       	std	Z+23, r23	; 0x17
   1b27c:	66 8b       	std	Z+22, r22	; 0x16
   1b27e:	24 8f       	std	Z+28, r18	; 0x1c
   1b280:	35 8f       	std	Z+29, r19	; 0x1d
   1b282:	46 8f       	std	Z+30, r20	; 0x1e
   1b284:	57 8f       	std	Z+31, r21	; 0x1f
   1b286:	80 e0       	ldi	r24, 0x00	; 0
   1b288:	90 e0       	ldi	r25, 0x00	; 0
   1b28a:	a0 e0       	ldi	r26, 0x00	; 0
   1b28c:	b4 e4       	ldi	r27, 0x44	; 68
   1b28e:	80 af       	std	Z+56, r24	; 0x38
   1b290:	91 af       	std	Z+57, r25	; 0x39
   1b292:	a2 af       	std	Z+58, r26	; 0x3a
   1b294:	b3 af       	std	Z+59, r27	; 0x3b
   1b296:	08 95       	ret

0001b298 <_ZN13EnergyMonitor7readVccEv>:
   1b298:	8e e5       	ldi	r24, 0x5E	; 94
   1b29a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
   1b29e:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1b2a2:	87 7f       	andi	r24, 0xF7	; 247
   1b2a4:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1b2a8:	62 e0       	ldi	r22, 0x02	; 2
   1b2aa:	70 e0       	ldi	r23, 0x00	; 0
   1b2ac:	80 e0       	ldi	r24, 0x00	; 0
   1b2ae:	90 e0       	ldi	r25, 0x00	; 0
   1b2b0:	54 de       	rcall	.-856    	; 0x1af5a <delay>
   1b2b2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b2b6:	80 64       	ori	r24, 0x40	; 64
   1b2b8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b2bc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1b2c0:	86 fd       	sbrc	r24, 6
   1b2c2:	fc cf       	rjmp	.-8      	; 0x1b2bc <_ZN13EnergyMonitor7readVccEv+0x24>
   1b2c4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
   1b2c8:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
   1b2cc:	30 e0       	ldi	r19, 0x00	; 0
   1b2ce:	32 2f       	mov	r19, r18
   1b2d0:	22 27       	eor	r18, r18
   1b2d2:	a9 01       	movw	r20, r18
   1b2d4:	33 0f       	add	r19, r19
   1b2d6:	66 0b       	sbc	r22, r22
   1b2d8:	77 0b       	sbc	r23, r23
   1b2da:	9a 01       	movw	r18, r20
   1b2dc:	ab 01       	movw	r20, r22
   1b2de:	28 2b       	or	r18, r24
   1b2e0:	60 e0       	ldi	r22, 0x00	; 0
   1b2e2:	70 e3       	ldi	r23, 0x30	; 48
   1b2e4:	81 e1       	ldi	r24, 0x11	; 17
   1b2e6:	90 e0       	ldi	r25, 0x00	; 0
   1b2e8:	0e 94 9f eb 	call	0x1d73e	; 0x1d73e <__divmodsi4>
   1b2ec:	ca 01       	movw	r24, r20
   1b2ee:	b9 01       	movw	r22, r18
   1b2f0:	08 95       	ret

0001b2f2 <_ZN13EnergyMonitor8calcIrmsEj>:
//--------------------------------------------------------------------------------------
}

//--------------------------------------------------------------------------------------
double EnergyMonitor::calcIrms(unsigned int Number_of_Samples)
{
   1b2f2:	2f 92       	push	r2
   1b2f4:	3f 92       	push	r3
   1b2f6:	4f 92       	push	r4
   1b2f8:	5f 92       	push	r5
   1b2fa:	6f 92       	push	r6
   1b2fc:	7f 92       	push	r7
   1b2fe:	8f 92       	push	r8
   1b300:	9f 92       	push	r9
   1b302:	af 92       	push	r10
   1b304:	bf 92       	push	r11
   1b306:	cf 92       	push	r12
   1b308:	df 92       	push	r13
   1b30a:	ef 92       	push	r14
   1b30c:	ff 92       	push	r15
   1b30e:	0f 93       	push	r16
   1b310:	1f 93       	push	r17
   1b312:	cf 93       	push	r28
   1b314:	df 93       	push	r29
   1b316:	00 d0       	rcall	.+0      	; 0x1b318 <_ZN13EnergyMonitor8calcIrmsEj+0x26>
   1b318:	00 d0       	rcall	.+0      	; 0x1b31a <_ZN13EnergyMonitor8calcIrmsEj+0x28>
   1b31a:	cd b7       	in	r28, 0x3d	; 61
   1b31c:	de b7       	in	r29, 0x3e	; 62
   1b31e:	9e 83       	std	Y+6, r25	; 0x06
   1b320:	8d 83       	std	Y+5, r24	; 0x05
   1b322:	7a 83       	std	Y+2, r23	; 0x02
   1b324:	69 83       	std	Y+1, r22	; 0x01

  #if defined emonTxV3
    int SupplyVoltage=3300;
  #else
    int SupplyVoltage = readVcc();
   1b326:	b8 df       	rcall	.-144    	; 0x1b298 <_ZN13EnergyMonitor7readVccEv>
   1b328:	6b 01       	movw	r12, r22
   1b32a:	7c 01       	movw	r14, r24
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b32c:	00 e0       	ldi	r16, 0x00	; 0
   1b32e:	10 e0       	ldi	r17, 0x00	; 0
   1b330:	8d 81       	ldd	r24, Y+5	; 0x05
   1b332:	9e 81       	ldd	r25, Y+6	; 0x06
   1b334:	84 5b       	subi	r24, 0xB4	; 180
   1b336:	9f 4f       	sbci	r25, 0xFF	; 255
   1b338:	1c 01       	movw	r2, r24
    offsetI = (offsetI + (sampleI-offsetI)/1024);
    filteredI = sampleI - offsetI;

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1b33a:	ed 81       	ldd	r30, Y+5	; 0x05
   1b33c:	fe 81       	ldd	r31, Y+6	; 0x06
   1b33e:	e8 5b       	subi	r30, 0xB8	; 184
   1b340:	ff 4f       	sbci	r31, 0xFF	; 255
   1b342:	fc 83       	std	Y+4, r31	; 0x04
   1b344:	eb 83       	std	Y+3, r30	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b346:	89 81       	ldd	r24, Y+1	; 0x01
   1b348:	9a 81       	ldd	r25, Y+2	; 0x02
   1b34a:	08 17       	cp	r16, r24
   1b34c:	19 07       	cpc	r17, r25
   1b34e:	09 f4       	brne	.+2      	; 0x1b352 <_ZN13EnergyMonitor8calcIrmsEj+0x60>
   1b350:	4f c0       	rjmp	.+158    	; 0x1b3f0 <_ZN13EnergyMonitor8calcIrmsEj+0xfe>
  {
    sampleI = analogRead(inPinI);
   1b352:	ed 81       	ldd	r30, Y+5	; 0x05
   1b354:	fe 81       	ldd	r31, Y+6	; 0x06
   1b356:	86 89       	ldd	r24, Z+22	; 0x16
   1b358:	0e 94 ab e4 	call	0x1c956	; 0x1c956 <analogRead>
   1b35c:	ed 81       	ldd	r30, Y+5	; 0x05
   1b35e:	fe 81       	ldd	r31, Y+6	; 0x06
   1b360:	97 a3       	std	Z+39, r25	; 0x27
   1b362:	86 a3       	std	Z+38, r24	; 0x26

    // Digital low pass filter extracts the 2.5 V or 1.65 V dc offset,
    //  then subtract this - signal is now centered on 0 counts.
    offsetI = (offsetI + (sampleI-offsetI)/1024);
   1b364:	bc 01       	movw	r22, r24
   1b366:	99 0f       	add	r25, r25
   1b368:	88 0b       	sbc	r24, r24
   1b36a:	99 0b       	sbc	r25, r25
   1b36c:	34 d8       	rcall	.-3992   	; 0x1a3d6 <__floatsisf>
   1b36e:	4b 01       	movw	r8, r22
   1b370:	5c 01       	movw	r10, r24
   1b372:	ed 81       	ldd	r30, Y+5	; 0x05
   1b374:	fe 81       	ldd	r31, Y+6	; 0x06
   1b376:	40 ac       	ldd	r4, Z+56	; 0x38
   1b378:	51 ac       	ldd	r5, Z+57	; 0x39
   1b37a:	62 ac       	ldd	r6, Z+58	; 0x3a
   1b37c:	73 ac       	ldd	r7, Z+59	; 0x3b
   1b37e:	a3 01       	movw	r20, r6
   1b380:	92 01       	movw	r18, r4
   1b382:	0e 94 ec d0 	call	0x1a1d8	; 0x1a1d8 <__subsf3>
   1b386:	20 e0       	ldi	r18, 0x00	; 0
   1b388:	30 e0       	ldi	r19, 0x00	; 0
   1b38a:	40 e8       	ldi	r20, 0x80	; 128
   1b38c:	5a e3       	ldi	r21, 0x3A	; 58
   1b38e:	d7 d8       	rcall	.-3666   	; 0x1a53e <__mulsf3>
   1b390:	a3 01       	movw	r20, r6
   1b392:	92 01       	movw	r18, r4
   1b394:	0e 94 ed d0 	call	0x1a1da	; 0x1a1da <__addsf3>
   1b398:	9b 01       	movw	r18, r22
   1b39a:	ac 01       	movw	r20, r24
   1b39c:	ed 81       	ldd	r30, Y+5	; 0x05
   1b39e:	fe 81       	ldd	r31, Y+6	; 0x06
   1b3a0:	60 af       	std	Z+56, r22	; 0x38
   1b3a2:	71 af       	std	Z+57, r23	; 0x39
   1b3a4:	82 af       	std	Z+58, r24	; 0x3a
   1b3a6:	93 af       	std	Z+59, r25	; 0x3b
    filteredI = sampleI - offsetI;
   1b3a8:	c5 01       	movw	r24, r10
   1b3aa:	b4 01       	movw	r22, r8
   1b3ac:	0e 94 ec d0 	call	0x1a1d8	; 0x1a1d8 <__subsf3>
   1b3b0:	ed 81       	ldd	r30, Y+5	; 0x05
   1b3b2:	fe 81       	ldd	r31, Y+6	; 0x06
   1b3b4:	60 ab       	std	Z+48, r22	; 0x30
   1b3b6:	71 ab       	std	Z+49, r23	; 0x31
   1b3b8:	82 ab       	std	Z+50, r24	; 0x32

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1b3ba:	93 ab       	std	Z+51, r25	; 0x33
   1b3bc:	9b 01       	movw	r18, r22
   1b3be:	ac 01       	movw	r20, r24
   1b3c0:	be d8       	rcall	.-3716   	; 0x1a53e <__mulsf3>
   1b3c2:	9b 01       	movw	r18, r22
   1b3c4:	ac 01       	movw	r20, r24
   1b3c6:	eb 81       	ldd	r30, Y+3	; 0x03
   1b3c8:	fc 81       	ldd	r31, Y+4	; 0x04
   1b3ca:	60 83       	st	Z, r22
   1b3cc:	71 83       	std	Z+1, r23	; 0x01
   1b3ce:	82 83       	std	Z+2, r24	; 0x02
   1b3d0:	93 83       	std	Z+3, r25	; 0x03
    // 2) sum
    sumI += sqI;
   1b3d2:	f1 01       	movw	r30, r2
   1b3d4:	60 81       	ld	r22, Z
   1b3d6:	71 81       	ldd	r23, Z+1	; 0x01
   1b3d8:	82 81       	ldd	r24, Z+2	; 0x02
   1b3da:	93 81       	ldd	r25, Z+3	; 0x03
   1b3dc:	0e 94 ed d0 	call	0x1a1da	; 0x1a1da <__addsf3>
   1b3e0:	f1 01       	movw	r30, r2
   1b3e2:	60 83       	st	Z, r22
   1b3e4:	71 83       	std	Z+1, r23	; 0x01
   1b3e6:	82 83       	std	Z+2, r24	; 0x02
   1b3e8:	93 83       	std	Z+3, r25	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1b3ea:	0f 5f       	subi	r16, 0xFF	; 255
   1b3ec:	1f 4f       	sbci	r17, 0xFF	; 255
   1b3ee:	ab cf       	rjmp	.-170    	; 0x1b346 <_ZN13EnergyMonitor8calcIrmsEj+0x54>
    // 2) sum
    sumI += sqI;
  }

  double I_RATIO = ICAL *((SupplyVoltage/1000.0) / (ADC_COUNTS));
  Irms = I_RATIO * sqrt(sumI / Number_of_Samples);
   1b3f0:	b8 01       	movw	r22, r16
   1b3f2:	80 e0       	ldi	r24, 0x00	; 0
   1b3f4:	90 e0       	ldi	r25, 0x00	; 0
   1b3f6:	0e 94 e9 d1 	call	0x1a3d2	; 0x1a3d2 <__floatunsisf>
   1b3fa:	9b 01       	movw	r18, r22
   1b3fc:	ac 01       	movw	r20, r24
   1b3fe:	f1 01       	movw	r30, r2
   1b400:	60 81       	ld	r22, Z
   1b402:	71 81       	ldd	r23, Z+1	; 0x01
   1b404:	82 81       	ldd	r24, Z+2	; 0x02
   1b406:	93 81       	ldd	r25, Z+3	; 0x03
   1b408:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
   1b40c:	0e 94 d1 e9 	call	0x1d3a2	; 0x1d3a2 <sqrt>
   1b410:	4b 01       	movw	r8, r22
   1b412:	5c 01       	movw	r10, r24
   1b414:	b6 01       	movw	r22, r12
   1b416:	dd 0c       	add	r13, r13
   1b418:	88 0b       	sbc	r24, r24
   1b41a:	99 0b       	sbc	r25, r25
   1b41c:	0e 94 eb d1 	call	0x1a3d6	; 0x1a3d6 <__floatsisf>
   1b420:	20 e0       	ldi	r18, 0x00	; 0
   1b422:	30 e0       	ldi	r19, 0x00	; 0
   1b424:	4a e7       	ldi	r20, 0x7A	; 122
   1b426:	54 e4       	ldi	r21, 0x44	; 68
   1b428:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
   1b42c:	20 e0       	ldi	r18, 0x00	; 0
   1b42e:	30 e0       	ldi	r19, 0x00	; 0
   1b430:	40 e8       	ldi	r20, 0x80	; 128
   1b432:	5a e3       	ldi	r21, 0x3A	; 58
   1b434:	84 d8       	rcall	.-3832   	; 0x1a53e <__mulsf3>
   1b436:	ed 81       	ldd	r30, Y+5	; 0x05
   1b438:	fe 81       	ldd	r31, Y+6	; 0x06
   1b43a:	24 8d       	ldd	r18, Z+28	; 0x1c
   1b43c:	35 8d       	ldd	r19, Z+29	; 0x1d
   1b43e:	46 8d       	ldd	r20, Z+30	; 0x1e
   1b440:	57 8d       	ldd	r21, Z+31	; 0x1f
   1b442:	7d d8       	rcall	.-3846   	; 0x1a53e <__mulsf3>
   1b444:	a5 01       	movw	r20, r10
   1b446:	94 01       	movw	r18, r8
   1b448:	7a d8       	rcall	.-3852   	; 0x1a53e <__mulsf3>
   1b44a:	ed 81       	ldd	r30, Y+5	; 0x05
   1b44c:	fe 81       	ldd	r31, Y+6	; 0x06
   1b44e:	60 8b       	std	Z+16, r22	; 0x10
   1b450:	71 8b       	std	Z+17, r23	; 0x11
   1b452:	82 8b       	std	Z+18, r24	; 0x12
   1b454:	93 8b       	std	Z+19, r25	; 0x13

  //Reset accumulators
  sumI = 0;
   1b456:	f1 01       	movw	r30, r2
   1b458:	10 82       	st	Z, r1
   1b45a:	11 82       	std	Z+1, r1	; 0x01
   1b45c:	12 82       	std	Z+2, r1	; 0x02
   1b45e:	13 82       	std	Z+3, r1	; 0x03
  //--------------------------------------------------------------------------------------

  return Irms;
}
   1b460:	26 96       	adiw	r28, 0x06	; 6
   1b462:	0f b6       	in	r0, 0x3f	; 63
   1b464:	f8 94       	cli
   1b466:	de bf       	out	0x3e, r29	; 62
   1b468:	0f be       	out	0x3f, r0	; 63
   1b46a:	cd bf       	out	0x3d, r28	; 61
   1b46c:	df 91       	pop	r29
   1b46e:	cf 91       	pop	r28
   1b470:	1f 91       	pop	r17
   1b472:	0f 91       	pop	r16
   1b474:	ff 90       	pop	r15
   1b476:	ef 90       	pop	r14
   1b478:	df 90       	pop	r13
   1b47a:	cf 90       	pop	r12
   1b47c:	bf 90       	pop	r11
   1b47e:	af 90       	pop	r10
   1b480:	9f 90       	pop	r9
   1b482:	8f 90       	pop	r8
   1b484:	7f 90       	pop	r7
   1b486:	6f 90       	pop	r6
   1b488:	5f 90       	pop	r5
   1b48a:	4f 90       	pop	r4
   1b48c:	3f 90       	pop	r3
   1b48e:	2f 90       	pop	r2
   1b490:	08 95       	ret

0001b492 <_ZN17LiquidCrystal_I2CC1Ehhh>:
void LiquidCrystal_I2C::blink_off(){
	noBlink();
}

void LiquidCrystal_I2C::load_custom_character(uint8_t char_num, uint8_t *rows){
		createChar(char_num, rows);
   1b492:	fc 01       	movw	r30, r24
   1b494:	13 82       	std	Z+3, r1	; 0x03
   1b496:	12 82       	std	Z+2, r1	; 0x02
   1b498:	8d ef       	ldi	r24, 0xFD	; 253
   1b49a:	97 e0       	ldi	r25, 0x07	; 7
   1b49c:	91 83       	std	Z+1, r25	; 0x01
   1b49e:	80 83       	st	Z, r24
   1b4a0:	64 83       	std	Z+4, r22	; 0x04
   1b4a2:	41 87       	std	Z+9, r20	; 0x09
   1b4a4:	22 87       	std	Z+10, r18	; 0x0a
   1b4a6:	13 86       	std	Z+11, r1	; 0x0b
   1b4a8:	08 95       	ret

0001b4aa <_ZN17LiquidCrystal_I2C13expanderWriteEh>:
   1b4aa:	1f 93       	push	r17
   1b4ac:	cf 93       	push	r28
   1b4ae:	df 93       	push	r29
   1b4b0:	ec 01       	movw	r28, r24
   1b4b2:	16 2f       	mov	r17, r22
   1b4b4:	6c 81       	ldd	r22, Y+4	; 0x04
   1b4b6:	8b e5       	ldi	r24, 0x5B	; 91
   1b4b8:	98 e1       	ldi	r25, 0x18	; 24
   1b4ba:	0e 94 b8 e2 	call	0x1c570	; 0x1c570 <_ZN7TwoWire17beginTransmissionEh>
   1b4be:	6b 85       	ldd	r22, Y+11	; 0x0b
   1b4c0:	61 2b       	or	r22, r17
   1b4c2:	8b e5       	ldi	r24, 0x5B	; 91
   1b4c4:	98 e1       	ldi	r25, 0x18	; 24
   1b4c6:	0e 94 6b e2 	call	0x1c4d6	; 0x1c4d6 <_ZN7TwoWire5writeEh>
   1b4ca:	8b e5       	ldi	r24, 0x5B	; 91
   1b4cc:	98 e1       	ldi	r25, 0x18	; 24
   1b4ce:	df 91       	pop	r29
   1b4d0:	cf 91       	pop	r28
   1b4d2:	1f 91       	pop	r17
   1b4d4:	0c 94 d4 e2 	jmp	0x1c5a8	; 0x1c5a8 <_ZN7TwoWire15endTransmissionEv>

0001b4d8 <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
   1b4d8:	0f 93       	push	r16
   1b4da:	1f 93       	push	r17
   1b4dc:	cf 93       	push	r28
   1b4de:	8c 01       	movw	r16, r24
   1b4e0:	c6 2f       	mov	r28, r22
   1b4e2:	64 60       	ori	r22, 0x04	; 4
   1b4e4:	e2 df       	rcall	.-60     	; 0x1b4aa <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b4e6:	81 e0       	ldi	r24, 0x01	; 1
   1b4e8:	90 e0       	ldi	r25, 0x00	; 0
   1b4ea:	71 dd       	rcall	.-1310   	; 0x1afce <delayMicroseconds>
   1b4ec:	6c 2f       	mov	r22, r28
   1b4ee:	6b 7f       	andi	r22, 0xFB	; 251
   1b4f0:	c8 01       	movw	r24, r16
   1b4f2:	db df       	rcall	.-74     	; 0x1b4aa <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b4f4:	82 e3       	ldi	r24, 0x32	; 50
   1b4f6:	90 e0       	ldi	r25, 0x00	; 0
   1b4f8:	cf 91       	pop	r28
   1b4fa:	1f 91       	pop	r17
   1b4fc:	0f 91       	pop	r16
   1b4fe:	67 cd       	rjmp	.-1330   	; 0x1afce <delayMicroseconds>

0001b500 <_ZN17LiquidCrystal_I2C10write4bitsEh>:
   1b500:	1f 93       	push	r17
   1b502:	cf 93       	push	r28
   1b504:	df 93       	push	r29
   1b506:	ec 01       	movw	r28, r24
   1b508:	16 2f       	mov	r17, r22
   1b50a:	cf df       	rcall	.-98     	; 0x1b4aa <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1b50c:	61 2f       	mov	r22, r17
   1b50e:	ce 01       	movw	r24, r28
   1b510:	df 91       	pop	r29
   1b512:	cf 91       	pop	r28
   1b514:	1f 91       	pop	r17
   1b516:	e0 cf       	rjmp	.-64     	; 0x1b4d8 <_ZN17LiquidCrystal_I2C11pulseEnableEh>

0001b518 <_ZN17LiquidCrystal_I2C4sendEhh>:
   1b518:	0f 93       	push	r16
   1b51a:	1f 93       	push	r17
   1b51c:	cf 93       	push	r28
   1b51e:	df 93       	push	r29
   1b520:	8c 01       	movw	r16, r24
   1b522:	c6 2f       	mov	r28, r22
   1b524:	d4 2f       	mov	r29, r20
   1b526:	60 7f       	andi	r22, 0xF0	; 240
   1b528:	64 2b       	or	r22, r20
   1b52a:	ea df       	rcall	.-44     	; 0x1b500 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   1b52c:	80 e1       	ldi	r24, 0x10	; 16
   1b52e:	c8 9f       	mul	r28, r24
   1b530:	b0 01       	movw	r22, r0
   1b532:	11 24       	eor	r1, r1
   1b534:	6d 2b       	or	r22, r29
   1b536:	c8 01       	movw	r24, r16
   1b538:	df 91       	pop	r29
   1b53a:	cf 91       	pop	r28
   1b53c:	1f 91       	pop	r17
   1b53e:	0f 91       	pop	r16
   1b540:	df cf       	rjmp	.-66     	; 0x1b500 <_ZN17LiquidCrystal_I2C10write4bitsEh>

0001b542 <_ZN17LiquidCrystal_I2C7commandEh>:
   1b542:	40 e0       	ldi	r20, 0x00	; 0
   1b544:	e9 cf       	rjmp	.-46     	; 0x1b518 <_ZN17LiquidCrystal_I2C4sendEhh>

0001b546 <_ZN17LiquidCrystal_I2C5clearEv>:
   1b546:	61 e0       	ldi	r22, 0x01	; 1
   1b548:	fc df       	rcall	.-8      	; 0x1b542 <_ZN17LiquidCrystal_I2C7commandEh>
   1b54a:	80 ed       	ldi	r24, 0xD0	; 208
   1b54c:	97 e0       	ldi	r25, 0x07	; 7
   1b54e:	3f cd       	rjmp	.-1410   	; 0x1afce <delayMicroseconds>

0001b550 <_ZN17LiquidCrystal_I2C4homeEv>:
   1b550:	62 e0       	ldi	r22, 0x02	; 2
   1b552:	f7 df       	rcall	.-18     	; 0x1b542 <_ZN17LiquidCrystal_I2C7commandEh>
   1b554:	80 ed       	ldi	r24, 0xD0	; 208
   1b556:	97 e0       	ldi	r25, 0x07	; 7
   1b558:	3a cd       	rjmp	.-1420   	; 0x1afce <delayMicroseconds>

0001b55a <_ZN17LiquidCrystal_I2C9setCursorEhh>:
   1b55a:	cf 93       	push	r28
   1b55c:	df 93       	push	r29
   1b55e:	cd b7       	in	r28, 0x3d	; 61
   1b560:	de b7       	in	r29, 0x3e	; 62
   1b562:	28 97       	sbiw	r28, 0x08	; 8
   1b564:	0f b6       	in	r0, 0x3f	; 63
   1b566:	f8 94       	cli
   1b568:	de bf       	out	0x3e, r29	; 62
   1b56a:	0f be       	out	0x3f, r0	; 63
   1b56c:	cd bf       	out	0x3d, r28	; 61
   1b56e:	9c 01       	movw	r18, r24
   1b570:	88 e0       	ldi	r24, 0x08	; 8
   1b572:	e3 e7       	ldi	r30, 0x73	; 115
   1b574:	f2 e0       	ldi	r31, 0x02	; 2
   1b576:	de 01       	movw	r26, r28
   1b578:	11 96       	adiw	r26, 0x01	; 1
   1b57a:	01 90       	ld	r0, Z+
   1b57c:	0d 92       	st	X+, r0
   1b57e:	8a 95       	dec	r24
   1b580:	e1 f7       	brne	.-8      	; 0x1b57a <_ZN17LiquidCrystal_I2C9setCursorEhh+0x20>
   1b582:	f9 01       	movw	r30, r18
   1b584:	80 85       	ldd	r24, Z+8	; 0x08
   1b586:	84 17       	cp	r24, r20
   1b588:	10 f4       	brcc	.+4      	; 0x1b58e <_ZN17LiquidCrystal_I2C9setCursorEhh+0x34>
   1b58a:	4f ef       	ldi	r20, 0xFF	; 255
   1b58c:	48 0f       	add	r20, r24
   1b58e:	fe 01       	movw	r30, r28
   1b590:	31 96       	adiw	r30, 0x01	; 1
   1b592:	e4 0f       	add	r30, r20
   1b594:	f1 1d       	adc	r31, r1
   1b596:	e4 0f       	add	r30, r20
   1b598:	f1 1d       	adc	r31, r1
   1b59a:	90 81       	ld	r25, Z
   1b59c:	69 0f       	add	r22, r25
   1b59e:	60 68       	ori	r22, 0x80	; 128
   1b5a0:	c9 01       	movw	r24, r18
   1b5a2:	28 96       	adiw	r28, 0x08	; 8
   1b5a4:	0f b6       	in	r0, 0x3f	; 63
   1b5a6:	f8 94       	cli
   1b5a8:	de bf       	out	0x3e, r29	; 62
   1b5aa:	0f be       	out	0x3f, r0	; 63
   1b5ac:	cd bf       	out	0x3d, r28	; 61
   1b5ae:	df 91       	pop	r29
   1b5b0:	cf 91       	pop	r28
   1b5b2:	c7 cf       	rjmp	.-114    	; 0x1b542 <_ZN17LiquidCrystal_I2C7commandEh>

0001b5b4 <_ZN17LiquidCrystal_I2C7displayEv>:
   1b5b4:	fc 01       	movw	r30, r24
   1b5b6:	66 81       	ldd	r22, Z+6	; 0x06
   1b5b8:	26 2f       	mov	r18, r22
   1b5ba:	24 60       	ori	r18, 0x04	; 4
   1b5bc:	26 83       	std	Z+6, r18	; 0x06
   1b5be:	6c 60       	ori	r22, 0x0C	; 12
   1b5c0:	c0 cf       	rjmp	.-128    	; 0x1b542 <_ZN17LiquidCrystal_I2C7commandEh>

0001b5c2 <_ZN17LiquidCrystal_I2C10createCharEhPh>:
   1b5c2:	ef 92       	push	r14
   1b5c4:	ff 92       	push	r15
   1b5c6:	0f 93       	push	r16
   1b5c8:	1f 93       	push	r17
   1b5ca:	cf 93       	push	r28
   1b5cc:	df 93       	push	r29
   1b5ce:	8c 01       	movw	r16, r24
   1b5d0:	7a 01       	movw	r14, r20
   1b5d2:	67 70       	andi	r22, 0x07	; 7
   1b5d4:	88 e0       	ldi	r24, 0x08	; 8
   1b5d6:	68 9f       	mul	r22, r24
   1b5d8:	b0 01       	movw	r22, r0
   1b5da:	11 24       	eor	r1, r1
   1b5dc:	60 64       	ori	r22, 0x40	; 64
   1b5de:	c8 01       	movw	r24, r16
   1b5e0:	b0 df       	rcall	.-160    	; 0x1b542 <_ZN17LiquidCrystal_I2C7commandEh>
   1b5e2:	e7 01       	movw	r28, r14
   1b5e4:	a8 e0       	ldi	r26, 0x08	; 8
   1b5e6:	ea 0e       	add	r14, r26
   1b5e8:	f1 1c       	adc	r15, r1
   1b5ea:	69 91       	ld	r22, Y+
   1b5ec:	d8 01       	movw	r26, r16
   1b5ee:	ed 91       	ld	r30, X+
   1b5f0:	fc 91       	ld	r31, X
   1b5f2:	01 90       	ld	r0, Z+
   1b5f4:	f0 81       	ld	r31, Z
   1b5f6:	e0 2d       	mov	r30, r0
   1b5f8:	c8 01       	movw	r24, r16
   1b5fa:	19 95       	eicall
   1b5fc:	ce 15       	cp	r28, r14
   1b5fe:	df 05       	cpc	r29, r15
   1b600:	a1 f7       	brne	.-24     	; 0x1b5ea <_ZN17LiquidCrystal_I2C10createCharEhPh+0x28>
   1b602:	df 91       	pop	r29
   1b604:	cf 91       	pop	r28
   1b606:	1f 91       	pop	r17
   1b608:	0f 91       	pop	r16
   1b60a:	ff 90       	pop	r15
   1b60c:	ef 90       	pop	r14
   1b60e:	08 95       	ret

0001b610 <_ZN17LiquidCrystal_I2C5writeEh>:

#include "Arduino.h"

#define printIIC(args)	Wire.write(args)
inline size_t LiquidCrystal_I2C::write(uint8_t value) {
	send(value, Rs);
   1b610:	41 e0       	ldi	r20, 0x01	; 1
   1b612:	82 df       	rcall	.-252    	; 0x1b518 <_ZN17LiquidCrystal_I2C4sendEhh>
	return 1;
}
   1b614:	81 e0       	ldi	r24, 0x01	; 1
   1b616:	90 e0       	ldi	r25, 0x00	; 0
   1b618:	08 95       	ret

0001b61a <_ZN17LiquidCrystal_I2C5beginEhhh>:
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
}

void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
   1b61a:	cf 93       	push	r28
   1b61c:	df 93       	push	r29
   1b61e:	ec 01       	movw	r28, r24
	if (lines > 1) {
   1b620:	42 30       	cpi	r20, 0x02	; 2
   1b622:	18 f0       	brcs	.+6      	; 0x1b62a <_ZN17LiquidCrystal_I2C5beginEhhh+0x10>
		_displayfunction |= LCD_2LINE;
   1b624:	8d 81       	ldd	r24, Y+5	; 0x05
   1b626:	88 60       	ori	r24, 0x08	; 8
   1b628:	8d 83       	std	Y+5, r24	; 0x05
	}
	_numlines = lines;
   1b62a:	48 87       	std	Y+8, r20	; 0x08

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotsize != 0) && (lines == 1)) {
   1b62c:	22 23       	and	r18, r18
   1b62e:	29 f0       	breq	.+10     	; 0x1b63a <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
   1b630:	41 30       	cpi	r20, 0x01	; 1
   1b632:	19 f4       	brne	.+6      	; 0x1b63a <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
		_displayfunction |= LCD_5x10DOTS;
   1b634:	8d 81       	ldd	r24, Y+5	; 0x05
   1b636:	84 60       	ori	r24, 0x04	; 4
   1b638:	8d 83       	std	Y+5, r24	; 0x05
	}

	// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	delay(50); 
   1b63a:	62 e3       	ldi	r22, 0x32	; 50
   1b63c:	70 e0       	ldi	r23, 0x00	; 0
   1b63e:	80 e0       	ldi	r24, 0x00	; 0
   1b640:	90 e0       	ldi	r25, 0x00	; 0
   1b642:	8b dc       	rcall	.-1770   	; 0x1af5a <delay>
  
	// Now we pull both RS and R/W low to begin commands
// 	expanderWrite(_backlightval);	// reset expanderand turn backlight off (Bit 8 =1)   // kishorr
// 	delay(1000);
	
	_backlightval=LCD_BACKLIGHT;   // kishorr
   1b644:	88 e0       	ldi	r24, 0x08	; 8
   1b646:	8b 87       	std	Y+11, r24	; 0x0b
	expanderWrite(0);
   1b648:	60 e0       	ldi	r22, 0x00	; 0
   1b64a:	ce 01       	movw	r24, r28
   1b64c:	2e df       	rcall	.-420    	; 0x1b4aa <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    delay(1000);
   1b64e:	68 ee       	ldi	r22, 0xE8	; 232
   1b650:	73 e0       	ldi	r23, 0x03	; 3
   1b652:	80 e0       	ldi	r24, 0x00	; 0
   1b654:	90 e0       	ldi	r25, 0x00	; 0
   1b656:	81 dc       	rcall	.-1790   	; 0x1af5a <delay>
  	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	  // we start in 8bit mode, try to set 4 bit mode
   write4bits(0x03 << 4);
   1b658:	60 e3       	ldi	r22, 0x30	; 48
   1b65a:	ce 01       	movw	r24, r28
   1b65c:	51 df       	rcall	.-350    	; 0x1b500 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1b65e:	84 e9       	ldi	r24, 0x94	; 148
   1b660:	91 e1       	ldi	r25, 0x11	; 17
   1b662:	b5 dc       	rcall	.-1686   	; 0x1afce <delayMicroseconds>
   
   // second try
   write4bits(0x03 << 4);
   1b664:	60 e3       	ldi	r22, 0x30	; 48
   1b666:	ce 01       	movw	r24, r28
   1b668:	4b df       	rcall	.-362    	; 0x1b500 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1b66a:	84 e9       	ldi	r24, 0x94	; 148
   1b66c:	91 e1       	ldi	r25, 0x11	; 17
   1b66e:	af dc       	rcall	.-1698   	; 0x1afce <delayMicroseconds>
   
   // third go!
   write4bits(0x03 << 4); 
   1b670:	60 e3       	ldi	r22, 0x30	; 48
   1b672:	ce 01       	movw	r24, r28
   1b674:	45 df       	rcall	.-374    	; 0x1b500 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(150);
   1b676:	86 e9       	ldi	r24, 0x96	; 150
   1b678:	90 e0       	ldi	r25, 0x00	; 0
   1b67a:	a9 dc       	rcall	.-1710   	; 0x1afce <delayMicroseconds>
   
   // finally, set to 4-bit interface
   write4bits(0x02 << 4); 
   1b67c:	60 e2       	ldi	r22, 0x20	; 32
   1b67e:	ce 01       	movw	r24, r28
   1b680:	3f df       	rcall	.-386    	; 0x1b500 <_ZN17LiquidCrystal_I2C10write4bitsEh>


	// set # lines, font size, etc.
	command(LCD_FUNCTIONSET | _displayfunction);  
   1b682:	6d 81       	ldd	r22, Y+5	; 0x05
   1b684:	60 62       	ori	r22, 0x20	; 32
   1b686:	ce 01       	movw	r24, r28
   1b688:	5c df       	rcall	.-328    	; 0x1b542 <_ZN17LiquidCrystal_I2C7commandEh>
	
	// turn the display on with no cursor or blinking default
	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
   1b68a:	84 e0       	ldi	r24, 0x04	; 4
   1b68c:	8e 83       	std	Y+6, r24	; 0x06
	display();
   1b68e:	ce 01       	movw	r24, r28
   1b690:	91 df       	rcall	.-222    	; 0x1b5b4 <_ZN17LiquidCrystal_I2C7displayEv>
	
	// clear it off
	clear();
   1b692:	ce 01       	movw	r24, r28
   1b694:	58 df       	rcall	.-336    	; 0x1b546 <_ZN17LiquidCrystal_I2C5clearEv>
   1b696:	82 e0       	ldi	r24, 0x02	; 2
	
	// Initialize to default text direction (for roman languages)
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
   1b698:	8f 83       	std	Y+7, r24	; 0x07
   1b69a:	66 e0       	ldi	r22, 0x06	; 6
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
   1b69c:	ce 01       	movw	r24, r28
   1b69e:	51 df       	rcall	.-350    	; 0x1b542 <_ZN17LiquidCrystal_I2C7commandEh>
   1b6a0:	ce 01       	movw	r24, r28
   1b6a2:	df 91       	pop	r29
	
	home();
   1b6a4:	cf 91       	pop	r28
  
}
   1b6a6:	54 cf       	rjmp	.-344    	; 0x1b550 <_ZN17LiquidCrystal_I2C4homeEv>

0001b6a8 <_ZN17LiquidCrystal_I2C9init_privEv>:
   1b6a8:	cf 93       	push	r28
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
	
	home();
   1b6aa:	df 93       	push	r29
   1b6ac:	ec 01       	movw	r28, r24
	init_priv();
}

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
   1b6ae:	8b e5       	ldi	r24, 0x5B	; 91
   1b6b0:	98 e1       	ldi	r25, 0x18	; 24
   1b6b2:	4f d7       	rcall	.+3742   	; 0x1c552 <_ZN7TwoWire5beginEv>
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
   1b6b4:	1d 82       	std	Y+5, r1	; 0x05
	begin(_cols, _rows);  
   1b6b6:	20 e0       	ldi	r18, 0x00	; 0
   1b6b8:	4a 85       	ldd	r20, Y+10	; 0x0a
   1b6ba:	69 85       	ldd	r22, Y+9	; 0x09
   1b6bc:	ce 01       	movw	r24, r28
}
   1b6be:	df 91       	pop	r29

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
   1b6c0:	cf 91       	pop	r28
   1b6c2:	ab cf       	rjmp	.-170    	; 0x1b61a <_ZN17LiquidCrystal_I2C5beginEhhh>

0001b6c4 <_ZN17LiquidCrystal_I2C4initEv>:
  _rows = lcd_rows;
  _backlightval = LCD_NOBACKLIGHT;
}

void LiquidCrystal_I2C::init(){
	init_priv();
   1b6c4:	f1 cf       	rjmp	.-30     	; 0x1b6a8 <_ZN17LiquidCrystal_I2C9init_privEv>

0001b6c6 <_ZN15RHGenericDriver4initEv>:
}

bool RHGenericDriver::init()
{
    return true;
}
   1b6c6:	81 e0       	ldi	r24, 0x01	; 1
   1b6c8:	08 95       	ret

0001b6ca <_ZN15RHGenericDriver14setPromiscuousEb>:
    return false;
}

void RHGenericDriver::setPromiscuous(bool promiscuous)
{
    _promiscuous = promiscuous;
   1b6ca:	fc 01       	movw	r30, r24
   1b6cc:	64 83       	std	Z+4, r22	; 0x04
   1b6ce:	08 95       	ret

0001b6d0 <_ZN15RHGenericDriver14setThisAddressEh>:
}

void RHGenericDriver::setThisAddress(uint8_t address)
{
    _thisAddress = address;
   1b6d0:	fc 01       	movw	r30, r24
   1b6d2:	63 83       	std	Z+3, r22	; 0x03
   1b6d4:	08 95       	ret

0001b6d6 <_ZN15RHGenericDriver11setHeaderToEh>:
}

void RHGenericDriver::setHeaderTo(uint8_t to)
{
    _txHeaderTo = to;
   1b6d6:	fc 01       	movw	r30, r24
   1b6d8:	61 87       	std	Z+9, r22	; 0x09
   1b6da:	08 95       	ret

0001b6dc <_ZN15RHGenericDriver13setHeaderFromEh>:
}

void RHGenericDriver::setHeaderFrom(uint8_t from)
{
    _txHeaderFrom = from;
   1b6dc:	fc 01       	movw	r30, r24
   1b6de:	62 87       	std	Z+10, r22	; 0x0a
   1b6e0:	08 95       	ret

0001b6e2 <_ZN15RHGenericDriver11setHeaderIdEh>:
}

void RHGenericDriver::setHeaderId(uint8_t id)
{
    _txHeaderId = id;
   1b6e2:	fc 01       	movw	r30, r24
   1b6e4:	63 87       	std	Z+11, r22	; 0x0b
   1b6e6:	08 95       	ret

0001b6e8 <_ZN15RHGenericDriver14setHeaderFlagsEhh>:
}

void RHGenericDriver::setHeaderFlags(uint8_t set, uint8_t clear)
{
   1b6e8:	fc 01       	movw	r30, r24
    _txHeaderFlags &= ~clear;
    _txHeaderFlags |= set;
   1b6ea:	40 95       	com	r20
   1b6ec:	94 85       	ldd	r25, Z+12	; 0x0c
   1b6ee:	49 23       	and	r20, r25
   1b6f0:	64 2b       	or	r22, r20
   1b6f2:	64 87       	std	Z+12, r22	; 0x0c
   1b6f4:	08 95       	ret

0001b6f6 <_ZN15RHGenericDriver8headerToEv>:
}

uint8_t RHGenericDriver::headerTo()
{
    return _rxHeaderTo;
   1b6f6:	fc 01       	movw	r30, r24
   1b6f8:	85 81       	ldd	r24, Z+5	; 0x05
}
   1b6fa:	08 95       	ret

0001b6fc <_ZN15RHGenericDriver10headerFromEv>:

uint8_t RHGenericDriver::headerFrom()
{
    return _rxHeaderFrom;
   1b6fc:	fc 01       	movw	r30, r24
   1b6fe:	86 81       	ldd	r24, Z+6	; 0x06
}
   1b700:	08 95       	ret

0001b702 <_ZN15RHGenericDriver8headerIdEv>:

uint8_t RHGenericDriver::headerId()
{
    return _rxHeaderId;
   1b702:	fc 01       	movw	r30, r24
   1b704:	87 81       	ldd	r24, Z+7	; 0x07
}
   1b706:	08 95       	ret

0001b708 <_ZN15RHGenericDriver11headerFlagsEv>:

uint8_t RHGenericDriver::headerFlags()
{
    return _rxHeaderFlags;
   1b708:	fc 01       	movw	r30, r24
   1b70a:	80 85       	ldd	r24, Z+8	; 0x08
}
   1b70c:	08 95       	ret

0001b70e <_ZN15RHGenericDriver8lastRssiEv>:

int16_t RHGenericDriver::lastRssi()
{
    return _lastRssi;
   1b70e:	fc 01       	movw	r30, r24
   1b710:	85 85       	ldd	r24, Z+13	; 0x0d
   1b712:	96 85       	ldd	r25, Z+14	; 0x0e
}
   1b714:	08 95       	ret

0001b716 <_ZN15RHGenericDriver4modeEv>:

RHGenericDriver::RHMode  RHGenericDriver::mode()
{
    return _mode;
   1b716:	fc 01       	movw	r30, r24
   1b718:	82 81       	ldd	r24, Z+2	; 0x02
}
   1b71a:	08 95       	ret

0001b71c <_ZN15RHGenericDriver7setModeENS_6RHModeE>:

void  RHGenericDriver::setMode(RHMode mode)
{
    _mode = mode;
   1b71c:	fc 01       	movw	r30, r24
   1b71e:	62 83       	std	Z+2, r22	; 0x02
   1b720:	08 95       	ret

0001b722 <_ZN15RHGenericDriver15isChannelActiveEv>:
}

bool  RHGenericDriver::sleep()
{
    return false;
}
   1b722:	80 e0       	ldi	r24, 0x00	; 0
   1b724:	08 95       	ret

0001b726 <_ZN15RHGenericDriver5rxBadEv>:
#endif
}

uint16_t RHGenericDriver::rxBad()
{
    return _rxBad;
   1b726:	fc 01       	movw	r30, r24
   1b728:	87 85       	ldd	r24, Z+15	; 0x0f
   1b72a:	90 89       	ldd	r25, Z+16	; 0x10
}
   1b72c:	08 95       	ret

0001b72e <_ZN15RHGenericDriver6rxGoodEv>:

uint16_t RHGenericDriver::rxGood()
{
    return _rxGood;
   1b72e:	fc 01       	movw	r30, r24
   1b730:	81 89       	ldd	r24, Z+17	; 0x11
   1b732:	92 89       	ldd	r25, Z+18	; 0x12
}
   1b734:	08 95       	ret

0001b736 <_ZN15RHGenericDriver6txGoodEv>:

uint16_t RHGenericDriver::txGood()
{
    return _txGood;
   1b736:	fc 01       	movw	r30, r24
   1b738:	83 89       	ldd	r24, Z+19	; 0x13
   1b73a:	94 89       	ldd	r25, Z+20	; 0x14
}
   1b73c:	08 95       	ret

0001b73e <_ZN15RHGenericDriver13waitAvailableEv>:
    return true;
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
   1b73e:	cf 93       	push	r28
   1b740:	df 93       	push	r29
   1b742:	ec 01       	movw	r28, r24
    while (!available())
   1b744:	e8 81       	ld	r30, Y
   1b746:	f9 81       	ldd	r31, Y+1	; 0x01
   1b748:	06 80       	ldd	r0, Z+6	; 0x06
   1b74a:	f7 81       	ldd	r31, Z+7	; 0x07
   1b74c:	e0 2d       	mov	r30, r0
   1b74e:	ce 01       	movw	r24, r28
   1b750:	19 95       	eicall
   1b752:	81 11       	cpse	r24, r1
   1b754:	02 c0       	rjmp	.+4      	; 0x1b75a <_ZN15RHGenericDriver13waitAvailableEv+0x1c>
	YIELD;
   1b756:	2f d7       	rcall	.+3678   	; 0x1c5b6 <yield>
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
    while (!available())
   1b758:	f5 cf       	rjmp	.-22     	; 0x1b744 <_ZN15RHGenericDriver13waitAvailableEv+0x6>
	YIELD;
}
   1b75a:	df 91       	pop	r29
   1b75c:	cf 91       	pop	r28
   1b75e:	08 95       	ret

0001b760 <_ZN15RHGenericDriver14waitPacketSentEv>:
    }
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
   1b760:	cf 93       	push	r28
   1b762:	df 93       	push	r29
   1b764:	ec 01       	movw	r28, r24
    while (_mode == RHModeTx)
   1b766:	8a 81       	ldd	r24, Y+2	; 0x02
   1b768:	83 30       	cpi	r24, 0x03	; 3
   1b76a:	11 f4       	brne	.+4      	; 0x1b770 <_ZN15RHGenericDriver14waitPacketSentEv+0x10>
	YIELD; // Wait for any previous transmit to finish
   1b76c:	24 d7       	rcall	.+3656   	; 0x1c5b6 <yield>
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
    while (_mode == RHModeTx)
   1b76e:	fb cf       	rjmp	.-10     	; 0x1b766 <_ZN15RHGenericDriver14waitPacketSentEv+0x6>
	YIELD; // Wait for any previous transmit to finish
    return true;
}
   1b770:	81 e0       	ldi	r24, 0x01	; 1
   1b772:	df 91       	pop	r29
   1b774:	cf 91       	pop	r28
   1b776:	08 95       	ret

0001b778 <_ZN15RHGenericDriver20waitAvailableTimeoutEj>:

// Blocks until a valid message is received or timeout expires
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
   1b778:	8f 92       	push	r8
   1b77a:	9f 92       	push	r9
   1b77c:	af 92       	push	r10
   1b77e:	bf 92       	push	r11
   1b780:	cf 92       	push	r12
   1b782:	df 92       	push	r13
   1b784:	ef 92       	push	r14
   1b786:	ff 92       	push	r15
   1b788:	cf 93       	push	r28
   1b78a:	df 93       	push	r29
   1b78c:	ec 01       	movw	r28, r24
   1b78e:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b790:	b3 db       	rcall	.-2202   	; 0x1aef8 <millis>
   1b792:	4b 01       	movw	r8, r22
   1b794:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b796:	e1 2c       	mov	r14, r1
   1b798:	f1 2c       	mov	r15, r1
   1b79a:	ae db       	rcall	.-2212   	; 0x1aef8 <millis>
   1b79c:	dc 01       	movw	r26, r24
   1b79e:	cb 01       	movw	r24, r22
   1b7a0:	88 19       	sub	r24, r8
   1b7a2:	99 09       	sbc	r25, r9
   1b7a4:	aa 09       	sbc	r26, r10
   1b7a6:	bb 09       	sbc	r27, r11
   1b7a8:	8c 15       	cp	r24, r12
   1b7aa:	9d 05       	cpc	r25, r13
   1b7ac:	ae 05       	cpc	r26, r14
   1b7ae:	bf 05       	cpc	r27, r15
   1b7b0:	58 f4       	brcc	.+22     	; 0x1b7c8 <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x50>
    {
        if (available())
   1b7b2:	e8 81       	ld	r30, Y
   1b7b4:	f9 81       	ldd	r31, Y+1	; 0x01
   1b7b6:	06 80       	ldd	r0, Z+6	; 0x06
   1b7b8:	f7 81       	ldd	r31, Z+7	; 0x07
   1b7ba:	e0 2d       	mov	r30, r0
   1b7bc:	ce 01       	movw	r24, r28
   1b7be:	19 95       	eicall
   1b7c0:	81 11       	cpse	r24, r1
	{
           return true;
	}
	YIELD;
   1b7c2:	03 c0       	rjmp	.+6      	; 0x1b7ca <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x52>
   1b7c4:	f8 d6       	rcall	.+3568   	; 0x1c5b6 <yield>
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b7c6:	e9 cf       	rjmp	.-46     	; 0x1b79a <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x22>
	{
           return true;
	}
	YIELD;
    }
    return false;
   1b7c8:	80 e0       	ldi	r24, 0x00	; 0
}
   1b7ca:	df 91       	pop	r29
   1b7cc:	cf 91       	pop	r28
   1b7ce:	ff 90       	pop	r15
   1b7d0:	ef 90       	pop	r14
   1b7d2:	df 90       	pop	r13
   1b7d4:	cf 90       	pop	r12
   1b7d6:	bf 90       	pop	r11
   1b7d8:	af 90       	pop	r10
   1b7da:	9f 90       	pop	r9
   1b7dc:	8f 90       	pop	r8
   1b7de:	08 95       	ret

0001b7e0 <_ZN15RHGenericDriver14waitPacketSentEj>:
	YIELD; // Wait for any previous transmit to finish
    return true;
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
   1b7e0:	8f 92       	push	r8
   1b7e2:	9f 92       	push	r9
   1b7e4:	af 92       	push	r10
   1b7e6:	bf 92       	push	r11
   1b7e8:	cf 92       	push	r12
   1b7ea:	df 92       	push	r13
   1b7ec:	ef 92       	push	r14
   1b7ee:	ff 92       	push	r15
   1b7f0:	cf 93       	push	r28
   1b7f2:	df 93       	push	r29
   1b7f4:	ec 01       	movw	r28, r24
   1b7f6:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b7f8:	7f db       	rcall	.-2306   	; 0x1aef8 <millis>
   1b7fa:	4b 01       	movw	r8, r22
   1b7fc:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b7fe:	e1 2c       	mov	r14, r1
   1b800:	f1 2c       	mov	r15, r1
   1b802:	7a db       	rcall	.-2316   	; 0x1aef8 <millis>
   1b804:	dc 01       	movw	r26, r24
   1b806:	cb 01       	movw	r24, r22
   1b808:	88 19       	sub	r24, r8
   1b80a:	99 09       	sbc	r25, r9
   1b80c:	aa 09       	sbc	r26, r10
   1b80e:	bb 09       	sbc	r27, r11
   1b810:	8c 15       	cp	r24, r12
   1b812:	9d 05       	cpc	r25, r13
   1b814:	ae 05       	cpc	r26, r14
   1b816:	bf 05       	cpc	r27, r15
   1b818:	28 f4       	brcc	.+10     	; 0x1b824 <_ZN15RHGenericDriver14waitPacketSentEj+0x44>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
   1b81a:	8a 81       	ldd	r24, Y+2	; 0x02
   1b81c:	83 30       	cpi	r24, 0x03	; 3
           return true;
	YIELD;
   1b81e:	21 f4       	brne	.+8      	; 0x1b828 <_ZN15RHGenericDriver14waitPacketSentEj+0x48>
   1b820:	ca d6       	rcall	.+3476   	; 0x1c5b6 <yield>
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b822:	ef cf       	rjmp	.-34     	; 0x1b802 <_ZN15RHGenericDriver14waitPacketSentEj+0x22>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
	YIELD;
    }
    return false;
   1b824:	80 e0       	ldi	r24, 0x00	; 0
   1b826:	01 c0       	rjmp	.+2      	; 0x1b82a <_ZN15RHGenericDriver14waitPacketSentEj+0x4a>
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
   1b828:	81 e0       	ldi	r24, 0x01	; 1
	YIELD;
    }
    return false;
}
   1b82a:	df 91       	pop	r29
   1b82c:	cf 91       	pop	r28
   1b82e:	ff 90       	pop	r15
   1b830:	ef 90       	pop	r14
   1b832:	df 90       	pop	r13
   1b834:	cf 90       	pop	r12
   1b836:	bf 90       	pop	r11
   1b838:	af 90       	pop	r10
   1b83a:	9f 90       	pop	r9
   1b83c:	8f 90       	pop	r8
   1b83e:	08 95       	ret

0001b840 <_ZN15RHGenericDriver7waitCADEv>:

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
   1b840:	cf 92       	push	r12
   1b842:	df 92       	push	r13
   1b844:	ef 92       	push	r14
   1b846:	ff 92       	push	r15
   1b848:	cf 93       	push	r28
   1b84a:	df 93       	push	r29
    if (!_cad_timeout)
   1b84c:	fc 01       	movw	r30, r24
   1b84e:	26 89       	ldd	r18, Z+22	; 0x16
   1b850:	37 89       	ldd	r19, Z+23	; 0x17
   1b852:	23 2b       	or	r18, r19
   1b854:	79 f1       	breq	.+94     	; 0x1b8b4 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b856:	ec 01       	movw	r28, r24
    // Wait for any channel activity to finish or timeout
    // Sophisticated DCF function...
    // DCF : BackoffTime = random() x aSlotTime
    // 100 - 1000 ms
    // 10 sec timeout
    unsigned long t = millis();
   1b858:	4f db       	rcall	.-2402   	; 0x1aef8 <millis>
   1b85a:	6b 01       	movw	r12, r22
   1b85c:	7c 01       	movw	r14, r24
    while (isChannelActive())
   1b85e:	e8 81       	ld	r30, Y
   1b860:	f9 81       	ldd	r31, Y+1	; 0x01
   1b862:	00 8c       	ldd	r0, Z+24	; 0x18
   1b864:	f1 8d       	ldd	r31, Z+25	; 0x19
   1b866:	e0 2d       	mov	r30, r0
   1b868:	ce 01       	movw	r24, r28
   1b86a:	19 95       	eicall
   1b86c:	88 23       	and	r24, r24
    {
         if (millis() - t > _cad_timeout) 
   1b86e:	11 f1       	breq	.+68     	; 0x1b8b4 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b870:	43 db       	rcall	.-2426   	; 0x1aef8 <millis>
   1b872:	ab 01       	movw	r20, r22
   1b874:	bc 01       	movw	r22, r24
   1b876:	4c 19       	sub	r20, r12
   1b878:	5d 09       	sbc	r21, r13
   1b87a:	6e 09       	sbc	r22, r14
   1b87c:	7f 09       	sbc	r23, r15
   1b87e:	8e 89       	ldd	r24, Y+22	; 0x16
   1b880:	9f 89       	ldd	r25, Y+23	; 0x17
   1b882:	a0 e0       	ldi	r26, 0x00	; 0
   1b884:	b0 e0       	ldi	r27, 0x00	; 0
   1b886:	84 17       	cp	r24, r20
   1b888:	95 07       	cpc	r25, r21
   1b88a:	a6 07       	cpc	r26, r22
   1b88c:	b7 07       	cpc	r27, r23
   1b88e:	a0 f0       	brcs	.+40     	; 0x1b8b8 <_ZN15RHGenericDriver7waitCADEv+0x78>
	     return false;
#if (RH_PLATFORM == RH_PLATFORM_STM32) // stdlib on STMF103 gets confused if random is redefined
	 delay(_random(1, 10) * 100);
#else
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
   1b890:	2a e0       	ldi	r18, 0x0A	; 10
   1b892:	30 e0       	ldi	r19, 0x00	; 0
   1b894:	40 e0       	ldi	r20, 0x00	; 0
   1b896:	50 e0       	ldi	r21, 0x00	; 0
   1b898:	61 e0       	ldi	r22, 0x01	; 1
   1b89a:	70 e0       	ldi	r23, 0x00	; 0
   1b89c:	80 e0       	ldi	r24, 0x00	; 0
   1b89e:	90 e0       	ldi	r25, 0x00	; 0
   1b8a0:	0e 94 e9 e4 	call	0x1c9d2	; 0x1c9d2 <_Z6randomll>
   1b8a4:	9b 01       	movw	r18, r22
   1b8a6:	ac 01       	movw	r20, r24
   1b8a8:	a4 e6       	ldi	r26, 0x64	; 100
   1b8aa:	b0 e0       	ldi	r27, 0x00	; 0
   1b8ac:	0e 94 d2 eb 	call	0x1d7a4	; 0x1d7a4 <__muluhisi3>
   1b8b0:	54 db       	rcall	.-2392   	; 0x1af5a <delay>
   1b8b2:	d5 cf       	rjmp	.-86     	; 0x1b85e <_ZN15RHGenericDriver7waitCADEv+0x1e>

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
    if (!_cad_timeout)
	return true;
   1b8b4:	81 e0       	ldi	r24, 0x01	; 1
   1b8b6:	01 c0       	rjmp	.+2      	; 0x1b8ba <_ZN15RHGenericDriver7waitCADEv+0x7a>
    // 10 sec timeout
    unsigned long t = millis();
    while (isChannelActive())
    {
         if (millis() - t > _cad_timeout) 
	     return false;
   1b8b8:	80 e0       	ldi	r24, 0x00	; 0
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
#endif
    }

    return true;
}
   1b8ba:	df 91       	pop	r29
   1b8bc:	cf 91       	pop	r28
   1b8be:	ff 90       	pop	r15
   1b8c0:	ef 90       	pop	r14
   1b8c2:	df 90       	pop	r13
   1b8c4:	cf 90       	pop	r12
   1b8c6:	08 95       	ret

0001b8c8 <_ZN15RHGenericDriverC1Ev>:
// Copyright (C) 2014 Mike McCauley
// $Id: RHGenericDriver.cpp,v 1.24 2020/01/07 23:35:02 mikem Exp $

#include <RHGenericDriver.h>

RHGenericDriver::RHGenericDriver()
   1b8c8:	fc 01       	movw	r30, r24
    _txHeaderId(0),
    _txHeaderFlags(0),
    _rxBad(0),
    _rxGood(0),
    _txGood(0),
    _cad_timeout(0)
   1b8ca:	89 e0       	ldi	r24, 0x09	; 9
   1b8cc:	98 e0       	ldi	r25, 0x08	; 8
   1b8ce:	91 83       	std	Z+1, r25	; 0x01
   1b8d0:	80 83       	st	Z, r24
   1b8d2:	12 82       	std	Z+2, r1	; 0x02
   1b8d4:	8f ef       	ldi	r24, 0xFF	; 255
   1b8d6:	83 83       	std	Z+3, r24	; 0x03
   1b8d8:	81 87       	std	Z+9, r24	; 0x09
   1b8da:	82 87       	std	Z+10, r24	; 0x0a
   1b8dc:	13 86       	std	Z+11, r1	; 0x0b
   1b8de:	14 86       	std	Z+12, r1	; 0x0c
   1b8e0:	10 8a       	std	Z+16, r1	; 0x10
   1b8e2:	17 86       	std	Z+15, r1	; 0x0f
   1b8e4:	12 8a       	std	Z+18, r1	; 0x12
   1b8e6:	11 8a       	std	Z+17, r1	; 0x11
   1b8e8:	14 8a       	std	Z+20, r1	; 0x14
   1b8ea:	13 8a       	std	Z+19, r1	; 0x13
   1b8ec:	17 8a       	std	Z+23, r1	; 0x17
   1b8ee:	16 8a       	std	Z+22, r1	; 0x16
   1b8f0:	08 95       	ret

0001b8f2 <_ZN13RHHardwareSPI8transferEh>:
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    SPDR = data;
   1b8f2:	6e bd       	out	0x2e, r22	; 46
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
   1b8f4:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
   1b8f6:	0d b4       	in	r0, 0x2d	; 45
   1b8f8:	07 fe       	sbrs	r0, 7
   1b8fa:	fd cf       	rjmp	.-6      	; 0x1b8f6 <_ZN13RHHardwareSPI8transferEh+0x4>
    return SPDR;
   1b8fc:	8e b5       	in	r24, 0x2e	; 46
}

uint8_t RHHardwareSPI::transfer(uint8_t data) 
{
    return SPI.transfer(data);
}
   1b8fe:	08 95       	ret

0001b900 <_ZN13RHHardwareSPI15attachInterruptEv>:
    SPSR = (SPSR & ~SPI_2XCLOCK_MASK) | ((clockDiv >> 2) & SPI_2XCLOCK_MASK);
  }
  // These undocumented functions should not be used.  SPI.transfer()
  // polls the hardware flag which is automatically cleared as the
  // AVR responds to SPI's interrupt
  inline static void attachInterrupt() { SPCR |= _BV(SPIE); }
   1b900:	8c b5       	in	r24, 0x2c	; 44
   1b902:	80 68       	ori	r24, 0x80	; 128
   1b904:	8c bd       	out	0x2c, r24	; 44
   1b906:	08 95       	ret

0001b908 <_ZN13RHHardwareSPI15detachInterruptEv>:
  inline static void detachInterrupt() { SPCR &= ~_BV(SPIE); }
   1b908:	8c b5       	in	r24, 0x2c	; 44
   1b90a:	8f 77       	andi	r24, 0x7F	; 127
   1b90c:	8c bd       	out	0x2c, r24	; 44
   1b90e:	08 95       	ret

0001b910 <_ZN13RHHardwareSPI16beginTransactionEv>:
{
    return SPI.end();
}

void RHHardwareSPI::beginTransaction()
{
   1b910:	fc 01       	movw	r30, r24
   1b912:	45 81       	ldd	r20, Z+5	; 0x05
   1b914:	36 81       	ldd	r19, Z+6	; 0x06

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    if (interruptMode > 0) {
   1b916:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b91a:	88 23       	and	r24, r24
   1b91c:	99 f0       	breq	.+38     	; 0x1b944 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      uint8_t sreg = SREG;
   1b91e:	2f b7       	in	r18, 0x3f	; 63
      noInterrupts();
   1b920:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b922:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1b926:	81 30       	cpi	r24, 0x01	; 1
   1b928:	59 f4       	brne	.+22     	; 0x1b940 <_ZN13RHHardwareSPI16beginTransactionEv+0x30>
        interruptSave = SPI_AVR_EIMSK;
   1b92a:	8d b3       	in	r24, 0x1d	; 29
   1b92c:	80 93 57 18 	sts	0x1857, r24	; 0x801857 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
   1b930:	9d b3       	in	r25, 0x1d	; 29
   1b932:	80 91 58 18 	lds	r24, 0x1858	; 0x801858 <_ZN8SPIClass13interruptMaskE>
   1b936:	80 95       	com	r24
   1b938:	89 23       	and	r24, r25
   1b93a:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b93c:	2f bf       	out	0x3f, r18	; 63
   1b93e:	02 c0       	rjmp	.+4      	; 0x1b944 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      } else
      #endif
      {
        interruptSave = sreg;
   1b940:	20 93 57 18 	sts	0x1857, r18	; 0x801857 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
   1b944:	4c bd       	out	0x2c, r20	; 44
    SPSR = settings.spsr;
   1b946:	3d bd       	out	0x2d, r19	; 45
   1b948:	08 95       	ret

0001b94a <_ZN13RHHardwareSPI5beginEv>:
    SPI.detachInterrupt();
#endif
}
    
void RHHardwareSPI::begin() 
{
   1b94a:	0f 93       	push	r16
   1b94c:	1f 93       	push	r17
   1b94e:	fc 01       	movw	r30, r24
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
   1b950:	82 81       	ldd	r24, Z+2	; 0x02
   1b952:	84 30       	cpi	r24, 0x04	; 4
   1b954:	59 f0       	breq	.+22     	; 0x1b96c <_ZN13RHHardwareSPI5beginEv+0x22>
       frequency = 16000000;
   else if (_frequency == Frequency8MHz)
   1b956:	83 30       	cpi	r24, 0x03	; 3
   1b958:	71 f0       	breq	.+28     	; 0x1b976 <_ZN13RHHardwareSPI5beginEv+0x2c>
       frequency = 8000000;
   else if (_frequency == Frequency4MHz)
   1b95a:	82 30       	cpi	r24, 0x02	; 2
   1b95c:	89 f0       	breq	.+34     	; 0x1b980 <_ZN13RHHardwareSPI5beginEv+0x36>
       frequency = 4000000;
   else if (_frequency == Frequency2MHz)
   1b95e:	81 30       	cpi	r24, 0x01	; 1
   1b960:	a1 f0       	breq	.+40     	; 0x1b98a <_ZN13RHHardwareSPI5beginEv+0x40>
       frequency = 2000000;
   else
       frequency = 1000000;
   1b962:	40 e4       	ldi	r20, 0x40	; 64
   1b964:	52 e4       	ldi	r21, 0x42	; 66
   1b966:	6f e0       	ldi	r22, 0x0F	; 15
   1b968:	70 e0       	ldi	r23, 0x00	; 0
   1b96a:	13 c0       	rjmp	.+38     	; 0x1b992 <_ZN13RHHardwareSPI5beginEv+0x48>
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
       frequency = 16000000;
   1b96c:	40 e0       	ldi	r20, 0x00	; 0
   1b96e:	54 e2       	ldi	r21, 0x24	; 36
   1b970:	64 ef       	ldi	r22, 0xF4	; 244
   1b972:	70 e0       	ldi	r23, 0x00	; 0
   1b974:	0e c0       	rjmp	.+28     	; 0x1b992 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency8MHz)
       frequency = 8000000;
   1b976:	40 e0       	ldi	r20, 0x00	; 0
   1b978:	52 e1       	ldi	r21, 0x12	; 18
   1b97a:	6a e7       	ldi	r22, 0x7A	; 122
   1b97c:	70 e0       	ldi	r23, 0x00	; 0
   1b97e:	09 c0       	rjmp	.+18     	; 0x1b992 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency4MHz)
       frequency = 4000000;
   1b980:	40 e0       	ldi	r20, 0x00	; 0
   1b982:	59 e0       	ldi	r21, 0x09	; 9
   1b984:	6d e3       	ldi	r22, 0x3D	; 61
   1b986:	70 e0       	ldi	r23, 0x00	; 0
   1b988:	04 c0       	rjmp	.+8      	; 0x1b992 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency2MHz)
       frequency = 2000000;
   1b98a:	40 e8       	ldi	r20, 0x80	; 128
   1b98c:	54 e8       	ldi	r21, 0x84	; 132
   1b98e:	6e e1       	ldi	r22, 0x1E	; 30
   1b990:	70 e0       	ldi	r23, 0x00	; 0
       bitOrder = LSBFIRST;
   else
       bitOrder = MSBFIRST;
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
   1b992:	84 81       	ldd	r24, Z+4	; 0x04
   1b994:	88 23       	and	r24, r24
   1b996:	61 f0       	breq	.+24     	; 0x1b9b0 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
   1b998:	81 30       	cpi	r24, 0x01	; 1
   1b99a:	31 f0       	breq	.+12     	; 0x1b9a8 <_ZN13RHHardwareSPI5beginEv+0x5e>
	dataMode = SPI_MODE1;
    else if (_dataMode == DataMode2)
   1b99c:	82 30       	cpi	r24, 0x02	; 2
   1b99e:	31 f0       	breq	.+12     	; 0x1b9ac <_ZN13RHHardwareSPI5beginEv+0x62>
	dataMode = SPI_MODE2;
    else if (_dataMode == DataMode3)
   1b9a0:	83 30       	cpi	r24, 0x03	; 3
   1b9a2:	31 f4       	brne	.+12     	; 0x1b9b0 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE3;
   1b9a4:	9c e0       	ldi	r25, 0x0C	; 12
   1b9a6:	05 c0       	rjmp	.+10     	; 0x1b9b2 <_ZN13RHHardwareSPI5beginEv+0x68>
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
	dataMode = SPI_MODE1;
   1b9a8:	94 e0       	ldi	r25, 0x04	; 4
   1b9aa:	03 c0       	rjmp	.+6      	; 0x1b9b2 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode2)
	dataMode = SPI_MODE2;
   1b9ac:	98 e0       	ldi	r25, 0x08	; 8
   1b9ae:	01 c0       	rjmp	.+2      	; 0x1b9b2 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode3)
	dataMode = SPI_MODE3;
    else
	dataMode = SPI_MODE0;
   1b9b0:	90 e0       	ldi	r25, 0x00	; 0
   1b9b2:	00 e0       	ldi	r16, 0x00	; 0
   1b9b4:	12 e1       	ldi	r17, 0x12	; 18
   1b9b6:	2a e7       	ldi	r18, 0x7A	; 122
   1b9b8:	30 e0       	ldi	r19, 0x00	; 0
   1b9ba:	80 e0       	ldi	r24, 0x00	; 0
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b9bc:	40 17       	cp	r20, r16
   1b9be:	51 07       	cpc	r21, r17
   1b9c0:	62 07       	cpc	r22, r18
   1b9c2:	73 07       	cpc	r23, r19
   1b9c4:	40 f4       	brcc	.+16     	; 0x1b9d6 <_ZN13RHHardwareSPI5beginEv+0x8c>
        clockSetting /= 2;
   1b9c6:	36 95       	lsr	r19
   1b9c8:	27 95       	ror	r18
   1b9ca:	17 95       	ror	r17
   1b9cc:	07 95       	ror	r16
        clockDiv++;
   1b9ce:	8f 5f       	subi	r24, 0xFF	; 255
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b9d0:	86 30       	cpi	r24, 0x06	; 6
   1b9d2:	a1 f7       	brne	.-24     	; 0x1b9bc <_ZN13RHHardwareSPI5beginEv+0x72>
      }
    }

    // Compensate for the duplicate fosc/64
    if (clockDiv == 6)
    clockDiv = 7;
   1b9d4:	87 e0       	ldi	r24, 0x07	; 7

    // Invert the SPI2X bit
    clockDiv ^= 0x1;
   1b9d6:	21 e0       	ldi	r18, 0x01	; 1
   1b9d8:	28 27       	eor	r18, r24

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b9da:	83 81       	ldd	r24, Z+3	; 0x03
   1b9dc:	81 30       	cpi	r24, 0x01	; 1
   1b9de:	11 f0       	breq	.+4      	; 0x1b9e4 <_ZN13RHHardwareSPI5beginEv+0x9a>
   1b9e0:	80 e5       	ldi	r24, 0x50	; 80
   1b9e2:	01 c0       	rjmp	.+2      	; 0x1b9e6 <_ZN13RHHardwareSPI5beginEv+0x9c>
   1b9e4:	80 e7       	ldi	r24, 0x70	; 112

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   1b9e6:	32 2f       	mov	r19, r18
   1b9e8:	36 95       	lsr	r19
   1b9ea:	93 2b       	or	r25, r19
   1b9ec:	98 2b       	or	r25, r24
   1b9ee:	95 83       	std	Z+5, r25	; 0x05
   1b9f0:	21 70       	andi	r18, 0x01	; 1
   1b9f2:	26 83       	std	Z+6, r18	; 0x06
#else
 #warning RHHardwareSPI does not support this platform yet. Consider adding it and contributing a patch.
#endif

#endif // SPI_HAS_TRANSACTION
}
   1b9f4:	1f 91       	pop	r17
   1b9f6:	0f 91       	pop	r16
    else
	dataMode = SPI_MODE0;

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   SPI.begin();
   1b9f8:	67 c4       	rjmp	.+2254   	; 0x1c2c8 <_ZN8SPIClass5beginEv>

0001b9fa <_ZN13RHHardwareSPI3endEv>:
#endif // SPI_HAS_TRANSACTION
}

void RHHardwareSPI::end() 
{
    return SPI.end();
   1b9fa:	9c c4       	rjmp	.+2360   	; 0x1c334 <_ZN8SPIClass3endEv>

0001b9fc <_ZN13RHHardwareSPI14usingInterruptEh>:
    SPI.endTransaction();
#endif
}

void RHHardwareSPI::usingInterrupt(uint8_t interrupt)
{
   1b9fc:	86 2f       	mov	r24, r22
#if defined(SPI_HAS_TRANSACTION) && !defined(RH_MISSING_SPIUSINGINTERRUPT)
    SPI.usingInterrupt(interrupt);
   1b9fe:	ae c4       	rjmp	.+2396   	; 0x1c35c <_ZN8SPIClass14usingInterruptEh>

0001ba00 <_ZN13RHHardwareSPI14endTransactionEv>:
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
   1ba00:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1ba04:	88 23       	and	r24, r24
   1ba06:	61 f0       	breq	.+24     	; 0x1ba20 <_ZN13RHHardwareSPI14endTransactionEv+0x20>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
   1ba08:	9f b7       	in	r25, 0x3f	; 63
      #endif
      noInterrupts();
   1ba0a:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1ba0c:	20 91 59 18 	lds	r18, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1ba10:	80 91 57 18 	lds	r24, 0x1857	; 0x801857 <_ZN8SPIClass13interruptSaveE>
   1ba14:	21 30       	cpi	r18, 0x01	; 1
   1ba16:	19 f4       	brne	.+6      	; 0x1ba1e <_ZN13RHHardwareSPI14endTransactionEv+0x1e>
        SPI_AVR_EIMSK = interruptSave;
   1ba18:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1ba1a:	9f bf       	out	0x3f, r25	; 63
   1ba1c:	08 95       	ret
      } else
      #endif
      {
        SREG = interruptSave;
   1ba1e:	8f bf       	out	0x3f, r24	; 63
   1ba20:	08 95       	ret

0001ba22 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>:
 #define SPI_CLOCK_DIV4  (VARIANT_MCK/21000000) // 4MHz
 #define SPI_CLOCK_DIV2  (VARIANT_MCK/10500000) // 8MHz
 #define SPI_CLOCK_DIV1  (VARIANT_MCK/5250000)  // 16MHz
#endif

RHHardwareSPI::RHHardwareSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1ba22:	cf 93       	push	r28
   1ba24:	df 93       	push	r29
   1ba26:	ec 01       	movw	r28, r24
    :
    RHGenericSPI(frequency, bitOrder, dataMode)
   1ba28:	0e 94 18 e5 	call	0x1ca30	; 0x1ca30 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>
   1ba2c:	89 e4       	ldi	r24, 0x49	; 73
   1ba2e:	98 e0       	ldi	r25, 0x08	; 8
   1ba30:	99 83       	std	Y+1, r25	; 0x01
   1ba32:	88 83       	st	Y, r24
    // Invert the SPI2X bit
    clockDiv ^= 0x1;

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1ba34:	80 e5       	ldi	r24, 0x50	; 80
   1ba36:	8d 83       	std	Y+5, r24	; 0x05
    spsr = clockDiv & SPI_2XCLOCK_MASK;
   1ba38:	1e 82       	std	Y+6, r1	; 0x06
{
}
   1ba3a:	df 91       	pop	r29
   1ba3c:	cf 91       	pop	r28
   1ba3e:	08 95       	ret

0001ba40 <_GLOBAL__sub_I_hardware_spi>:
#include <RHHardwareSPI.h>

#ifdef RH_HAVE_HARDWARE_SPI

// Declare a single default instance of the hardware SPI interface class
RHHardwareSPI hardware_spi;
   1ba40:	20 e0       	ldi	r18, 0x00	; 0
   1ba42:	40 e0       	ldi	r20, 0x00	; 0
   1ba44:	60 e0       	ldi	r22, 0x00	; 0
   1ba46:	89 e4       	ldi	r24, 0x49	; 73
   1ba48:	98 e1       	ldi	r25, 0x18	; 24
   1ba4a:	eb cf       	rjmp	.-42     	; 0x1ba22 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>

0001ba4c <_ZN7RH_RF9514modeWillChangeEN15RHGenericDriver6RHModeE>:
	cr = RH_RF95_CODING_RATE_4_7;
    else if (denominator >= 8)
	cr = RH_RF95_CODING_RATE_4_8;
 
    // CR is bits 3..1 of RH_RF95_REG_1D_MODEM_CONFIG1
    spiWrite(RH_RF95_REG_1D_MODEM_CONFIG1, (spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) & ~RH_RF95_CODING_RATE) | cr);
   1ba4c:	81 e0       	ldi	r24, 0x01	; 1
   1ba4e:	08 95       	ret

0001ba50 <_ZN7RH_RF9516maxMessageLengthEv>:
   1ba50:	8f e1       	ldi	r24, 0x1F	; 31
   1ba52:	08 95       	ret

0001ba54 <_ZN7RH_RF95D1Ev>:
   1ba54:	08 95       	ret

0001ba56 <_ZN7RH_RF9515isChannelActiveEv>:
   1ba56:	cf 93       	push	r28
   1ba58:	df 93       	push	r29
   1ba5a:	ec 01       	movw	r28, r24
   1ba5c:	8a 81       	ldd	r24, Y+2	; 0x02
   1ba5e:	85 30       	cpi	r24, 0x05	; 5
   1ba60:	b1 f0       	breq	.+44     	; 0x1ba8e <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1ba62:	e8 81       	ld	r30, Y
   1ba64:	f9 81       	ldd	r31, Y+1	; 0x01
   1ba66:	e0 5c       	subi	r30, 0xC0	; 192
   1ba68:	ff 4f       	sbci	r31, 0xFF	; 255
   1ba6a:	01 90       	ld	r0, Z+
   1ba6c:	f0 81       	ld	r31, Z
   1ba6e:	e0 2d       	mov	r30, r0
   1ba70:	65 e0       	ldi	r22, 0x05	; 5
   1ba72:	ce 01       	movw	r24, r28
   1ba74:	19 95       	eicall
   1ba76:	47 e0       	ldi	r20, 0x07	; 7
   1ba78:	61 e0       	ldi	r22, 0x01	; 1
   1ba7a:	ce 01       	movw	r24, r28
   1ba7c:	0e 94 aa e5 	call	0x1cb54	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1ba80:	40 e8       	ldi	r20, 0x80	; 128
   1ba82:	60 e4       	ldi	r22, 0x40	; 64
   1ba84:	ce 01       	movw	r24, r28
   1ba86:	0e 94 aa e5 	call	0x1cb54	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1ba8a:	85 e0       	ldi	r24, 0x05	; 5
   1ba8c:	8a 83       	std	Y+2, r24	; 0x02
   1ba8e:	8a 81       	ldd	r24, Y+2	; 0x02
   1ba90:	85 30       	cpi	r24, 0x05	; 5
   1ba92:	11 f4       	brne	.+4      	; 0x1ba98 <_ZN7RH_RF9515isChannelActiveEv+0x42>
   1ba94:	90 d5       	rcall	.+2848   	; 0x1c5b6 <yield>
   1ba96:	fb cf       	rjmp	.-10     	; 0x1ba8e <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1ba98:	8d 89       	ldd	r24, Y+21	; 0x15
   1ba9a:	df 91       	pop	r29
   1ba9c:	cf 91       	pop	r28
   1ba9e:	08 95       	ret

0001baa0 <_ZN7RH_RF95D0Ev>:
   1baa0:	8b c5       	rjmp	.+2838   	; 0x1c5b8 <_ZdlPv>

0001baa2 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>:
   1baa2:	0f 93       	push	r16
   1baa4:	1f 93       	push	r17
   1baa6:	cf 93       	push	r28
   1baa8:	8c 01       	movw	r16, r24
   1baaa:	c6 2f       	mov	r28, r22
   1baac:	65 31       	cpi	r22, 0x15	; 21
   1baae:	2c f4       	brge	.+10     	; 0x1baba <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x18>
   1bab0:	62 30       	cpi	r22, 0x02	; 2
   1bab2:	5c f0       	brlt	.+22     	; 0x1baca <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x28>
   1bab4:	62 31       	cpi	r22, 0x12	; 18
   1bab6:	54 f0       	brlt	.+20     	; 0x1bacc <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x2a>
   1bab8:	01 c0       	rjmp	.+2      	; 0x1babc <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x1a>
   1baba:	c4 e1       	ldi	r28, 0x14	; 20
   1babc:	47 e0       	ldi	r20, 0x07	; 7
   1babe:	6d e4       	ldi	r22, 0x4D	; 77
   1bac0:	c8 01       	movw	r24, r16
   1bac2:	0e 94 aa e5 	call	0x1cb54	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bac6:	c3 50       	subi	r28, 0x03	; 3
   1bac8:	06 c0       	rjmp	.+12     	; 0x1bad6 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x34>
   1baca:	c2 e0       	ldi	r28, 0x02	; 2
   1bacc:	44 e0       	ldi	r20, 0x04	; 4
   1bace:	6d e4       	ldi	r22, 0x4D	; 77
   1bad0:	c8 01       	movw	r24, r16
   1bad2:	0e 94 aa e5 	call	0x1cb54	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bad6:	4e ef       	ldi	r20, 0xFE	; 254
   1bad8:	4c 0f       	add	r20, r28
   1bada:	40 68       	ori	r20, 0x80	; 128
   1badc:	69 e0       	ldi	r22, 0x09	; 9
   1bade:	c8 01       	movw	r24, r16
   1bae0:	cf 91       	pop	r28
   1bae2:	1f 91       	pop	r17
   1bae4:	0f 91       	pop	r16
   1bae6:	0c 94 aa e5 	jmp	0x1cb54	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>

0001baea <_ZN7RH_RF955sleepEv>:
   1baea:	cf 93       	push	r28
   1baec:	df 93       	push	r29
   1baee:	fc 01       	movw	r30, r24
   1baf0:	22 81       	ldd	r18, Z+2	; 0x02
   1baf2:	21 30       	cpi	r18, 0x01	; 1
   1baf4:	91 f0       	breq	.+36     	; 0x1bb1a <_ZN7RH_RF955sleepEv+0x30>
   1baf6:	ec 01       	movw	r28, r24
   1baf8:	01 90       	ld	r0, Z+
   1bafa:	f0 81       	ld	r31, Z
   1bafc:	e0 2d       	mov	r30, r0
   1bafe:	e0 5c       	subi	r30, 0xC0	; 192
   1bb00:	ff 4f       	sbci	r31, 0xFF	; 255
   1bb02:	01 90       	ld	r0, Z+
   1bb04:	f0 81       	ld	r31, Z
   1bb06:	e0 2d       	mov	r30, r0
   1bb08:	61 e0       	ldi	r22, 0x01	; 1
   1bb0a:	19 95       	eicall
   1bb0c:	40 e0       	ldi	r20, 0x00	; 0
   1bb0e:	61 e0       	ldi	r22, 0x01	; 1
   1bb10:	ce 01       	movw	r24, r28
   1bb12:	0e 94 aa e5 	call	0x1cb54	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bb16:	81 e0       	ldi	r24, 0x01	; 1
   1bb18:	8a 83       	std	Y+2, r24	; 0x02
   1bb1a:	81 e0       	ldi	r24, 0x01	; 1
   1bb1c:	df 91       	pop	r29
   1bb1e:	cf 91       	pop	r28
   1bb20:	08 95       	ret

0001bb22 <_ZN7RH_RF95C1EhhR12RHGenericSPI>:
   1bb22:	1f 93       	push	r17
   1bb24:	cf 93       	push	r28
   1bb26:	df 93       	push	r29
   1bb28:	ec 01       	movw	r28, r24
   1bb2a:	14 2f       	mov	r17, r20
   1bb2c:	a9 01       	movw	r20, r18
   1bb2e:	b6 d7       	rcall	.+3948   	; 0x1ca9c <_ZN11RHSPIDriverC1EhR12RHGenericSPI>
   1bb30:	83 e6       	ldi	r24, 0x63	; 99
   1bb32:	98 e0       	ldi	r25, 0x08	; 8
   1bb34:	99 83       	std	Y+1, r25	; 0x01
   1bb36:	88 83       	st	Y, r24
   1bb38:	fe 01       	movw	r30, r28
   1bb3a:	ee 5b       	subi	r30, 0xBE	; 190
   1bb3c:	ff 4f       	sbci	r31, 0xFF	; 255
   1bb3e:	10 82       	st	Z, r1
   1bb40:	34 96       	adiw	r30, 0x04	; 4
   1bb42:	10 82       	st	Z, r1
   1bb44:	1c 8f       	std	Y+28, r17	; 0x1c
   1bb46:	8f ef       	ldi	r24, 0xFF	; 255
   1bb48:	8d 8f       	std	Y+29, r24	; 0x1d
   1bb4a:	31 97       	sbiw	r30, 0x01	; 1
   1bb4c:	81 e0       	ldi	r24, 0x01	; 1
   1bb4e:	80 83       	st	Z, r24
   1bb50:	1b 8e       	std	Y+27, r1	; 0x1b
   1bb52:	df 91       	pop	r29
   1bb54:	cf 91       	pop	r28
   1bb56:	1f 91       	pop	r17
   1bb58:	08 95       	ret

0001bb5a <_ZN7RH_RF9513validateRxBufEv>:
   1bb5a:	fc 01       	movw	r30, r24
   1bb5c:	86 8d       	ldd	r24, Z+30	; 0x1e
   1bb5e:	84 30       	cpi	r24, 0x04	; 4
   1bb60:	d8 f0       	brcs	.+54     	; 0x1bb98 <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1bb62:	87 8d       	ldd	r24, Z+31	; 0x1f
   1bb64:	85 83       	std	Z+5, r24	; 0x05
   1bb66:	80 a1       	ldd	r24, Z+32	; 0x20
   1bb68:	86 83       	std	Z+6, r24	; 0x06
   1bb6a:	81 a1       	ldd	r24, Z+33	; 0x21
   1bb6c:	87 83       	std	Z+7, r24	; 0x07
   1bb6e:	82 a1       	ldd	r24, Z+34	; 0x22
   1bb70:	80 87       	std	Z+8, r24	; 0x08
   1bb72:	84 81       	ldd	r24, Z+4	; 0x04
   1bb74:	81 11       	cpse	r24, r1
   1bb76:	07 c0       	rjmp	.+14     	; 0x1bb86 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1bb78:	95 81       	ldd	r25, Z+5	; 0x05
   1bb7a:	83 81       	ldd	r24, Z+3	; 0x03
   1bb7c:	98 17       	cp	r25, r24
   1bb7e:	19 f0       	breq	.+6      	; 0x1bb86 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1bb80:	85 81       	ldd	r24, Z+5	; 0x05
   1bb82:	8f 3f       	cpi	r24, 0xFF	; 255
   1bb84:	49 f4       	brne	.+18     	; 0x1bb98 <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1bb86:	81 89       	ldd	r24, Z+17	; 0x11
   1bb88:	92 89       	ldd	r25, Z+18	; 0x12
   1bb8a:	01 96       	adiw	r24, 0x01	; 1
   1bb8c:	92 8b       	std	Z+18, r25	; 0x12
   1bb8e:	81 8b       	std	Z+17, r24	; 0x11
   1bb90:	ee 5b       	subi	r30, 0xBE	; 190
   1bb92:	ff 4f       	sbci	r31, 0xFF	; 255
   1bb94:	81 e0       	ldi	r24, 0x01	; 1
   1bb96:	80 83       	st	Z, r24
   1bb98:	08 95       	ret

0001bb9a <_ZN7RH_RF9510clearRxBufEv>:
   1bb9a:	2f b7       	in	r18, 0x3f	; 63
   1bb9c:	f8 94       	cli
   1bb9e:	fc 01       	movw	r30, r24
   1bba0:	ee 5b       	subi	r30, 0xBE	; 190
   1bba2:	ff 4f       	sbci	r31, 0xFF	; 255
   1bba4:	10 82       	st	Z, r1
   1bba6:	fc 01       	movw	r30, r24
   1bba8:	16 8e       	std	Z+30, r1	; 0x1e
   1bbaa:	2f bf       	out	0x3f, r18	; 63
   1bbac:	08 95       	ret

0001bbae <_ZN7RH_RF954recvEPhS0_>:
   1bbae:	cf 92       	push	r12
   1bbb0:	df 92       	push	r13
   1bbb2:	ef 92       	push	r14
   1bbb4:	ff 92       	push	r15
   1bbb6:	0f 93       	push	r16
   1bbb8:	1f 93       	push	r17
   1bbba:	cf 93       	push	r28
   1bbbc:	df 93       	push	r29
   1bbbe:	ec 01       	movw	r28, r24
   1bbc0:	7b 01       	movw	r14, r22
   1bbc2:	8a 01       	movw	r16, r20
   1bbc4:	e8 81       	ld	r30, Y
   1bbc6:	f9 81       	ldd	r31, Y+1	; 0x01
   1bbc8:	06 80       	ldd	r0, Z+6	; 0x06
   1bbca:	f7 81       	ldd	r31, Z+7	; 0x07
   1bbcc:	e0 2d       	mov	r30, r0
   1bbce:	19 95       	eicall
   1bbd0:	d8 2e       	mov	r13, r24
   1bbd2:	88 23       	and	r24, r24
   1bbd4:	01 f1       	breq	.+64     	; 0x1bc16 <_ZN7RH_RF954recvEPhS0_+0x68>
   1bbd6:	e1 14       	cp	r14, r1
   1bbd8:	f1 04       	cpc	r15, r1
   1bbda:	d9 f0       	breq	.+54     	; 0x1bc12 <_ZN7RH_RF954recvEPhS0_+0x64>
   1bbdc:	01 15       	cp	r16, r1
   1bbde:	11 05       	cpc	r17, r1
   1bbe0:	c1 f0       	breq	.+48     	; 0x1bc12 <_ZN7RH_RF954recvEPhS0_+0x64>
   1bbe2:	cf b6       	in	r12, 0x3f	; 63
   1bbe4:	f8 94       	cli
   1bbe6:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1bbe8:	90 e0       	ldi	r25, 0x00	; 0
   1bbea:	03 97       	sbiw	r24, 0x03	; 3
   1bbec:	f8 01       	movw	r30, r16
   1bbee:	20 81       	ld	r18, Z
   1bbf0:	30 e0       	ldi	r19, 0x00	; 0
   1bbf2:	28 17       	cp	r18, r24
   1bbf4:	39 07       	cpc	r19, r25
   1bbf6:	1c f0       	brlt	.+6      	; 0x1bbfe <_ZN7RH_RF954recvEPhS0_+0x50>
   1bbf8:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1bbfa:	84 50       	subi	r24, 0x04	; 4
   1bbfc:	80 83       	st	Z, r24
   1bbfe:	f8 01       	movw	r30, r16
   1bc00:	40 81       	ld	r20, Z
   1bc02:	50 e0       	ldi	r21, 0x00	; 0
   1bc04:	be 01       	movw	r22, r28
   1bc06:	6d 5d       	subi	r22, 0xDD	; 221
   1bc08:	7f 4f       	sbci	r23, 0xFF	; 255
   1bc0a:	c7 01       	movw	r24, r14
   1bc0c:	0e 94 c4 ed 	call	0x1db88	; 0x1db88 <memcpy>
   1bc10:	cf be       	out	0x3f, r12	; 63
   1bc12:	ce 01       	movw	r24, r28
   1bc14:	c2 df       	rcall	.-124    	; 0x1bb9a <_ZN7RH_RF9510clearRxBufEv>
   1bc16:	8d 2d       	mov	r24, r13
   1bc18:	df 91       	pop	r29
   1bc1a:	cf 91       	pop	r28
   1bc1c:	1f 91       	pop	r17
   1bc1e:	0f 91       	pop	r16
   1bc20:	ff 90       	pop	r15
   1bc22:	ef 90       	pop	r14
   1bc24:	df 90       	pop	r13
   1bc26:	cf 90       	pop	r12
   1bc28:	08 95       	ret

0001bc2a <_ZN7RH_RF9512setFrequencyEf>:
   1bc2a:	8f 92       	push	r8
   1bc2c:	9f 92       	push	r9
   1bc2e:	af 92       	push	r10
   1bc30:	bf 92       	push	r11
   1bc32:	cf 92       	push	r12
   1bc34:	df 92       	push	r13
   1bc36:	ef 92       	push	r14
   1bc38:	ff 92       	push	r15
   1bc3a:	1f 93       	push	r17
   1bc3c:	cf 93       	push	r28
   1bc3e:	df 93       	push	r29
   1bc40:	ec 01       	movw	r28, r24
   1bc42:	4a 01       	movw	r8, r20
   1bc44:	5b 01       	movw	r10, r22
   1bc46:	20 e0       	ldi	r18, 0x00	; 0
   1bc48:	34 e2       	ldi	r19, 0x24	; 36
   1bc4a:	44 e7       	ldi	r20, 0x74	; 116
   1bc4c:	59 e4       	ldi	r21, 0x49	; 73
   1bc4e:	c5 01       	movw	r24, r10
   1bc50:	b4 01       	movw	r22, r8
   1bc52:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
   1bc56:	20 e0       	ldi	r18, 0x00	; 0
   1bc58:	34 e2       	ldi	r19, 0x24	; 36
   1bc5a:	44 e7       	ldi	r20, 0x74	; 116
   1bc5c:	52 e4       	ldi	r21, 0x42	; 66
   1bc5e:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
   1bc62:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <__fixunssfsi>
   1bc66:	6b 01       	movw	r12, r22
   1bc68:	7c 01       	movw	r14, r24
   1bc6a:	a7 01       	movw	r20, r14
   1bc6c:	66 27       	eor	r22, r22
   1bc6e:	77 27       	eor	r23, r23
   1bc70:	66 e0       	ldi	r22, 0x06	; 6
   1bc72:	ce 01       	movw	r24, r28
   1bc74:	6f d7       	rcall	.+3806   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bc76:	77 27       	eor	r23, r23
   1bc78:	6f 2d       	mov	r22, r15
   1bc7a:	5e 2d       	mov	r21, r14
   1bc7c:	4d 2d       	mov	r20, r13
   1bc7e:	67 e0       	ldi	r22, 0x07	; 7
   1bc80:	ce 01       	movw	r24, r28
   1bc82:	68 d7       	rcall	.+3792   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bc84:	4c 2d       	mov	r20, r12
   1bc86:	68 e0       	ldi	r22, 0x08	; 8
   1bc88:	ce 01       	movw	r24, r28
   1bc8a:	64 d7       	rcall	.+3784   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bc8c:	cd 5b       	subi	r28, 0xBD	; 189
   1bc8e:	df 4f       	sbci	r29, 0xFF	; 255
   1bc90:	11 e0       	ldi	r17, 0x01	; 1
   1bc92:	20 e0       	ldi	r18, 0x00	; 0
   1bc94:	30 ec       	ldi	r19, 0xC0	; 192
   1bc96:	42 e4       	ldi	r20, 0x42	; 66
   1bc98:	54 e4       	ldi	r21, 0x44	; 68
   1bc9a:	c5 01       	movw	r24, r10
   1bc9c:	b4 01       	movw	r22, r8
   1bc9e:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
   1bca2:	87 fd       	sbrc	r24, 7
   1bca4:	10 e0       	ldi	r17, 0x00	; 0
   1bca6:	18 83       	st	Y, r17
   1bca8:	81 e0       	ldi	r24, 0x01	; 1
   1bcaa:	df 91       	pop	r29
   1bcac:	cf 91       	pop	r28
   1bcae:	1f 91       	pop	r17
   1bcb0:	ff 90       	pop	r15
   1bcb2:	ef 90       	pop	r14
   1bcb4:	df 90       	pop	r13
   1bcb6:	cf 90       	pop	r12
   1bcb8:	bf 90       	pop	r11
   1bcba:	af 90       	pop	r10
   1bcbc:	9f 90       	pop	r9
   1bcbe:	8f 90       	pop	r8
   1bcc0:	08 95       	ret

0001bcc2 <_ZN7RH_RF9511setModeIdleEv>:
   1bcc2:	cf 93       	push	r28
   1bcc4:	df 93       	push	r29
   1bcc6:	fc 01       	movw	r30, r24
   1bcc8:	22 81       	ldd	r18, Z+2	; 0x02
   1bcca:	22 30       	cpi	r18, 0x02	; 2
   1bccc:	89 f0       	breq	.+34     	; 0x1bcf0 <_ZN7RH_RF9511setModeIdleEv+0x2e>
   1bcce:	ec 01       	movw	r28, r24
   1bcd0:	01 90       	ld	r0, Z+
   1bcd2:	f0 81       	ld	r31, Z
   1bcd4:	e0 2d       	mov	r30, r0
   1bcd6:	e0 5c       	subi	r30, 0xC0	; 192
   1bcd8:	ff 4f       	sbci	r31, 0xFF	; 255
   1bcda:	01 90       	ld	r0, Z+
   1bcdc:	f0 81       	ld	r31, Z
   1bcde:	e0 2d       	mov	r30, r0
   1bce0:	62 e0       	ldi	r22, 0x02	; 2
   1bce2:	19 95       	eicall
   1bce4:	41 e0       	ldi	r20, 0x01	; 1
   1bce6:	61 e0       	ldi	r22, 0x01	; 1
   1bce8:	ce 01       	movw	r24, r28
   1bcea:	34 d7       	rcall	.+3688   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bcec:	82 e0       	ldi	r24, 0x02	; 2
   1bcee:	8a 83       	std	Y+2, r24	; 0x02
   1bcf0:	df 91       	pop	r29
   1bcf2:	cf 91       	pop	r28
   1bcf4:	08 95       	ret

0001bcf6 <_ZN7RH_RF9515handleInterruptEv>:
   1bcf6:	0f 93       	push	r16
   1bcf8:	1f 93       	push	r17
   1bcfa:	cf 93       	push	r28
   1bcfc:	df 93       	push	r29
   1bcfe:	ec 01       	movw	r28, r24
   1bd00:	62 e1       	ldi	r22, 0x12	; 18
   1bd02:	e3 d6       	rcall	.+3526   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1bd04:	18 2f       	mov	r17, r24
   1bd06:	6c e1       	ldi	r22, 0x1C	; 28
   1bd08:	ce 01       	movw	r24, r28
   1bd0a:	df d6       	rcall	.+3518   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1bd0c:	08 2f       	mov	r16, r24
   1bd0e:	4f ef       	ldi	r20, 0xFF	; 255
   1bd10:	62 e1       	ldi	r22, 0x12	; 18
   1bd12:	ce 01       	movw	r24, r28
   1bd14:	1f d7       	rcall	.+3646   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bd16:	8a 81       	ldd	r24, Y+2	; 0x02
   1bd18:	84 30       	cpi	r24, 0x04	; 4
   1bd1a:	b1 f4       	brne	.+44     	; 0x1bd48 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bd1c:	81 2f       	mov	r24, r17
   1bd1e:	80 7a       	andi	r24, 0xA0	; 160
   1bd20:	41 f4       	brne	.+16     	; 0x1bd32 <_ZN7RH_RF9515handleInterruptEv+0x3c>
   1bd22:	fe 01       	movw	r30, r28
   1bd24:	eb 5b       	subi	r30, 0xBB	; 187
   1bd26:	ff 4f       	sbci	r31, 0xFF	; 255
   1bd28:	80 81       	ld	r24, Z
   1bd2a:	88 23       	and	r24, r24
   1bd2c:	69 f0       	breq	.+26     	; 0x1bd48 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bd2e:	06 fd       	sbrc	r16, 6
   1bd30:	0b c0       	rjmp	.+22     	; 0x1bd48 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1bd32:	8f 85       	ldd	r24, Y+15	; 0x0f
   1bd34:	98 89       	ldd	r25, Y+16	; 0x10
   1bd36:	01 96       	adiw	r24, 0x01	; 1
   1bd38:	98 8b       	std	Y+16, r25	; 0x10
   1bd3a:	8f 87       	std	Y+15, r24	; 0x0f
   1bd3c:	ce 01       	movw	r24, r28
   1bd3e:	df 91       	pop	r29
   1bd40:	cf 91       	pop	r28
   1bd42:	1f 91       	pop	r17
   1bd44:	0f 91       	pop	r16
   1bd46:	29 cf       	rjmp	.-430    	; 0x1bb9a <_ZN7RH_RF9510clearRxBufEv>
   1bd48:	8a 81       	ldd	r24, Y+2	; 0x02
   1bd4a:	84 30       	cpi	r24, 0x04	; 4
   1bd4c:	11 f4       	brne	.+4      	; 0x1bd52 <_ZN7RH_RF9515handleInterruptEv+0x5c>
   1bd4e:	16 fd       	sbrc	r17, 6
   1bd50:	0c c0       	rjmp	.+24     	; 0x1bd6a <_ZN7RH_RF9515handleInterruptEv+0x74>
   1bd52:	8a 81       	ldd	r24, Y+2	; 0x02
   1bd54:	83 30       	cpi	r24, 0x03	; 3
   1bd56:	09 f0       	breq	.+2      	; 0x1bd5a <_ZN7RH_RF9515handleInterruptEv+0x64>
   1bd58:	61 c0       	rjmp	.+194    	; 0x1be1c <_ZN7RH_RF9515handleInterruptEv+0x126>
   1bd5a:	13 ff       	sbrs	r17, 3
   1bd5c:	5f c0       	rjmp	.+190    	; 0x1be1c <_ZN7RH_RF9515handleInterruptEv+0x126>
   1bd5e:	8b 89       	ldd	r24, Y+19	; 0x13
   1bd60:	9c 89       	ldd	r25, Y+20	; 0x14
   1bd62:	01 96       	adiw	r24, 0x01	; 1
   1bd64:	9c 8b       	std	Y+20, r25	; 0x14
   1bd66:	8b 8b       	std	Y+19, r24	; 0x13
   1bd68:	60 c0       	rjmp	.+192    	; 0x1be2a <_ZN7RH_RF9515handleInterruptEv+0x134>
   1bd6a:	63 e1       	ldi	r22, 0x13	; 19
   1bd6c:	ce 01       	movw	r24, r28
   1bd6e:	ad d6       	rcall	.+3418   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1bd70:	18 2f       	mov	r17, r24
   1bd72:	60 e1       	ldi	r22, 0x10	; 16
   1bd74:	ce 01       	movw	r24, r28
   1bd76:	a9 d6       	rcall	.+3410   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1bd78:	48 2f       	mov	r20, r24
   1bd7a:	6d e0       	ldi	r22, 0x0D	; 13
   1bd7c:	ce 01       	movw	r24, r28
   1bd7e:	ea d6       	rcall	.+3540   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bd80:	21 2f       	mov	r18, r17
   1bd82:	ae 01       	movw	r20, r28
   1bd84:	41 5e       	subi	r20, 0xE1	; 225
   1bd86:	5f 4f       	sbci	r21, 0xFF	; 255
   1bd88:	60 e0       	ldi	r22, 0x00	; 0
   1bd8a:	ce 01       	movw	r24, r28
   1bd8c:	2b d7       	rcall	.+3670   	; 0x1cbe4 <_ZN11RHSPIDriver12spiBurstReadEhPhh>
   1bd8e:	1e 8f       	std	Y+30, r17	; 0x1e
   1bd90:	69 e1       	ldi	r22, 0x19	; 25
   1bd92:	ce 01       	movw	r24, r28
   1bd94:	9a d6       	rcall	.+3380   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1bd96:	8e 01       	movw	r16, r28
   1bd98:	0c 5b       	subi	r16, 0xBC	; 188
   1bd9a:	1f 4f       	sbci	r17, 0xFF	; 255
   1bd9c:	87 fd       	sbrc	r24, 7
   1bd9e:	8d 5f       	subi	r24, 0xFD	; 253
   1bda0:	85 95       	asr	r24
   1bda2:	85 95       	asr	r24
   1bda4:	f8 01       	movw	r30, r16
   1bda6:	80 83       	st	Z, r24
   1bda8:	6a e1       	ldi	r22, 0x1A	; 26
   1bdaa:	ce 01       	movw	r24, r28
   1bdac:	8e d6       	rcall	.+3356   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1bdae:	90 e0       	ldi	r25, 0x00	; 0
   1bdb0:	9e 87       	std	Y+14, r25	; 0x0e
   1bdb2:	8d 87       	std	Y+13, r24	; 0x0d
   1bdb4:	f8 01       	movw	r30, r16
   1bdb6:	20 81       	ld	r18, Z
   1bdb8:	27 ff       	sbrs	r18, 7
   1bdba:	09 c0       	rjmp	.+18     	; 0x1bdce <_ZN7RH_RF9515handleInterruptEv+0xd8>
   1bdbc:	8d 85       	ldd	r24, Y+13	; 0x0d
   1bdbe:	9e 85       	ldd	r25, Y+14	; 0x0e
   1bdc0:	82 0f       	add	r24, r18
   1bdc2:	91 1d       	adc	r25, r1
   1bdc4:	27 fd       	sbrc	r18, 7
   1bdc6:	9a 95       	dec	r25
   1bdc8:	9e 87       	std	Y+14, r25	; 0x0e
   1bdca:	8d 87       	std	Y+13, r24	; 0x0d
   1bdcc:	0d c0       	rjmp	.+26     	; 0x1bde8 <_ZN7RH_RF9515handleInterruptEv+0xf2>
   1bdce:	8d 85       	ldd	r24, Y+13	; 0x0d
   1bdd0:	9e 85       	ldd	r25, Y+14	; 0x0e
   1bdd2:	24 e0       	ldi	r18, 0x04	; 4
   1bdd4:	88 0f       	add	r24, r24
   1bdd6:	99 1f       	adc	r25, r25
   1bdd8:	2a 95       	dec	r18
   1bdda:	e1 f7       	brne	.-8      	; 0x1bdd4 <_ZN7RH_RF9515handleInterruptEv+0xde>
   1bddc:	6f e0       	ldi	r22, 0x0F	; 15
   1bdde:	70 e0       	ldi	r23, 0x00	; 0
   1bde0:	0e 94 6a eb 	call	0x1d6d4	; 0x1d6d4 <__divmodhi4>
   1bde4:	7e 87       	std	Y+14, r23	; 0x0e
   1bde6:	6d 87       	std	Y+13, r22	; 0x0d
   1bde8:	fe 01       	movw	r30, r28
   1bdea:	ed 5b       	subi	r30, 0xBD	; 189
   1bdec:	ff 4f       	sbci	r31, 0xFF	; 255
   1bdee:	80 81       	ld	r24, Z
   1bdf0:	88 23       	and	r24, r24
   1bdf2:	29 f0       	breq	.+10     	; 0x1bdfe <_ZN7RH_RF9515handleInterruptEv+0x108>
   1bdf4:	8d 85       	ldd	r24, Y+13	; 0x0d
   1bdf6:	9e 85       	ldd	r25, Y+14	; 0x0e
   1bdf8:	8d 59       	subi	r24, 0x9D	; 157
   1bdfa:	91 09       	sbc	r25, r1
   1bdfc:	04 c0       	rjmp	.+8      	; 0x1be06 <_ZN7RH_RF9515handleInterruptEv+0x110>
   1bdfe:	8d 85       	ldd	r24, Y+13	; 0x0d
   1be00:	9e 85       	ldd	r25, Y+14	; 0x0e
   1be02:	84 5a       	subi	r24, 0xA4	; 164
   1be04:	91 09       	sbc	r25, r1
   1be06:	9e 87       	std	Y+14, r25	; 0x0e
   1be08:	8d 87       	std	Y+13, r24	; 0x0d
   1be0a:	ce 01       	movw	r24, r28
   1be0c:	a6 de       	rcall	.-692    	; 0x1bb5a <_ZN7RH_RF9513validateRxBufEv>
   1be0e:	fe 01       	movw	r30, r28
   1be10:	ee 5b       	subi	r30, 0xBE	; 190
   1be12:	ff 4f       	sbci	r31, 0xFF	; 255
   1be14:	80 81       	ld	r24, Z
   1be16:	88 23       	and	r24, r24
   1be18:	71 f0       	breq	.+28     	; 0x1be36 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1be1a:	07 c0       	rjmp	.+14     	; 0x1be2a <_ZN7RH_RF9515handleInterruptEv+0x134>
   1be1c:	8a 81       	ldd	r24, Y+2	; 0x02
   1be1e:	85 30       	cpi	r24, 0x05	; 5
   1be20:	51 f4       	brne	.+20     	; 0x1be36 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1be22:	12 ff       	sbrs	r17, 2
   1be24:	08 c0       	rjmp	.+16     	; 0x1be36 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1be26:	11 70       	andi	r17, 0x01	; 1
   1be28:	1d 8b       	std	Y+21, r17	; 0x15
   1be2a:	ce 01       	movw	r24, r28
   1be2c:	df 91       	pop	r29
   1be2e:	cf 91       	pop	r28
   1be30:	1f 91       	pop	r17
   1be32:	0f 91       	pop	r16
   1be34:	46 cf       	rjmp	.-372    	; 0x1bcc2 <_ZN7RH_RF9511setModeIdleEv>
   1be36:	df 91       	pop	r29
   1be38:	cf 91       	pop	r28
   1be3a:	1f 91       	pop	r17
   1be3c:	0f 91       	pop	r16
   1be3e:	08 95       	ret

0001be40 <_ZN7RH_RF954isr0Ev>:
   1be40:	80 91 51 18 	lds	r24, 0x1851	; 0x801851 <_ZN7RH_RF9519_deviceForInterruptE>
   1be44:	90 91 52 18 	lds	r25, 0x1852	; 0x801852 <_ZN7RH_RF9519_deviceForInterruptE+0x1>
   1be48:	00 97       	sbiw	r24, 0x00	; 0
   1be4a:	09 f0       	breq	.+2      	; 0x1be4e <_ZN7RH_RF954isr0Ev+0xe>
   1be4c:	54 cf       	rjmp	.-344    	; 0x1bcf6 <_ZN7RH_RF9515handleInterruptEv>
   1be4e:	08 95       	ret

0001be50 <_ZN7RH_RF954isr1Ev>:
   1be50:	80 91 53 18 	lds	r24, 0x1853	; 0x801853 <_ZN7RH_RF9519_deviceForInterruptE+0x2>
   1be54:	90 91 54 18 	lds	r25, 0x1854	; 0x801854 <_ZN7RH_RF9519_deviceForInterruptE+0x3>
   1be58:	00 97       	sbiw	r24, 0x00	; 0
   1be5a:	09 f0       	breq	.+2      	; 0x1be5e <_ZN7RH_RF954isr1Ev+0xe>
   1be5c:	4c cf       	rjmp	.-360    	; 0x1bcf6 <_ZN7RH_RF9515handleInterruptEv>
   1be5e:	08 95       	ret

0001be60 <_ZN7RH_RF954isr2Ev>:
   1be60:	80 91 55 18 	lds	r24, 0x1855	; 0x801855 <_ZN7RH_RF9519_deviceForInterruptE+0x4>
   1be64:	90 91 56 18 	lds	r25, 0x1856	; 0x801856 <_ZN7RH_RF9519_deviceForInterruptE+0x5>
   1be68:	00 97       	sbiw	r24, 0x00	; 0
   1be6a:	09 f0       	breq	.+2      	; 0x1be6e <_ZN7RH_RF954isr2Ev+0xe>
   1be6c:	44 cf       	rjmp	.-376    	; 0x1bcf6 <_ZN7RH_RF9515handleInterruptEv>
   1be6e:	08 95       	ret

0001be70 <_ZN7RH_RF959setModeRxEv>:
   1be70:	cf 93       	push	r28
   1be72:	df 93       	push	r29
   1be74:	fc 01       	movw	r30, r24
   1be76:	22 81       	ldd	r18, Z+2	; 0x02
   1be78:	24 30       	cpi	r18, 0x04	; 4
   1be7a:	a9 f0       	breq	.+42     	; 0x1bea6 <_ZN7RH_RF959setModeRxEv+0x36>
   1be7c:	ec 01       	movw	r28, r24
   1be7e:	01 90       	ld	r0, Z+
   1be80:	f0 81       	ld	r31, Z
   1be82:	e0 2d       	mov	r30, r0
   1be84:	e0 5c       	subi	r30, 0xC0	; 192
   1be86:	ff 4f       	sbci	r31, 0xFF	; 255
   1be88:	01 90       	ld	r0, Z+
   1be8a:	f0 81       	ld	r31, Z
   1be8c:	e0 2d       	mov	r30, r0
   1be8e:	64 e0       	ldi	r22, 0x04	; 4
   1be90:	19 95       	eicall
   1be92:	45 e0       	ldi	r20, 0x05	; 5
   1be94:	61 e0       	ldi	r22, 0x01	; 1
   1be96:	ce 01       	movw	r24, r28
   1be98:	5d d6       	rcall	.+3258   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1be9a:	40 e0       	ldi	r20, 0x00	; 0
   1be9c:	60 e4       	ldi	r22, 0x40	; 64
   1be9e:	ce 01       	movw	r24, r28
   1bea0:	59 d6       	rcall	.+3250   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bea2:	84 e0       	ldi	r24, 0x04	; 4
   1bea4:	8a 83       	std	Y+2, r24	; 0x02
   1bea6:	df 91       	pop	r29
   1bea8:	cf 91       	pop	r28
   1beaa:	08 95       	ret

0001beac <_ZN7RH_RF959availableEv>:
   1beac:	cf 93       	push	r28
   1beae:	df 93       	push	r29
   1beb0:	fc 01       	movw	r30, r24
   1beb2:	22 81       	ldd	r18, Z+2	; 0x02
   1beb4:	23 30       	cpi	r18, 0x03	; 3
   1beb6:	31 f0       	breq	.+12     	; 0x1bec4 <_ZN7RH_RF959availableEv+0x18>
   1beb8:	ec 01       	movw	r28, r24
   1beba:	da df       	rcall	.-76     	; 0x1be70 <_ZN7RH_RF959setModeRxEv>
   1bebc:	ce 5b       	subi	r28, 0xBE	; 190
   1bebe:	df 4f       	sbci	r29, 0xFF	; 255
   1bec0:	88 81       	ld	r24, Y
   1bec2:	01 c0       	rjmp	.+2      	; 0x1bec6 <_ZN7RH_RF959availableEv+0x1a>
   1bec4:	80 e0       	ldi	r24, 0x00	; 0
   1bec6:	df 91       	pop	r29
   1bec8:	cf 91       	pop	r28
   1beca:	08 95       	ret

0001becc <_ZN7RH_RF959setModeTxEv>:
   1becc:	cf 93       	push	r28
   1bece:	df 93       	push	r29
   1bed0:	fc 01       	movw	r30, r24
   1bed2:	22 81       	ldd	r18, Z+2	; 0x02
   1bed4:	23 30       	cpi	r18, 0x03	; 3
   1bed6:	a9 f0       	breq	.+42     	; 0x1bf02 <_ZN7RH_RF959setModeTxEv+0x36>
   1bed8:	ec 01       	movw	r28, r24
   1beda:	01 90       	ld	r0, Z+
   1bedc:	f0 81       	ld	r31, Z
   1bede:	e0 2d       	mov	r30, r0
   1bee0:	e0 5c       	subi	r30, 0xC0	; 192
   1bee2:	ff 4f       	sbci	r31, 0xFF	; 255
   1bee4:	01 90       	ld	r0, Z+
   1bee6:	f0 81       	ld	r31, Z
   1bee8:	e0 2d       	mov	r30, r0
   1beea:	63 e0       	ldi	r22, 0x03	; 3
   1beec:	19 95       	eicall
   1beee:	43 e0       	ldi	r20, 0x03	; 3
   1bef0:	61 e0       	ldi	r22, 0x01	; 1
   1bef2:	ce 01       	movw	r24, r28
   1bef4:	2f d6       	rcall	.+3166   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bef6:	40 e4       	ldi	r20, 0x40	; 64
   1bef8:	60 e4       	ldi	r22, 0x40	; 64
   1befa:	ce 01       	movw	r24, r28
   1befc:	2b d6       	rcall	.+3158   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1befe:	83 e0       	ldi	r24, 0x03	; 3
   1bf00:	8a 83       	std	Y+2, r24	; 0x02
   1bf02:	df 91       	pop	r29
   1bf04:	cf 91       	pop	r28
   1bf06:	08 95       	ret

0001bf08 <_ZN7RH_RF954sendEPKhh>:
   1bf08:	ef 92       	push	r14
   1bf0a:	ff 92       	push	r15
   1bf0c:	0f 93       	push	r16
   1bf0e:	1f 93       	push	r17
   1bf10:	cf 93       	push	r28
   1bf12:	df 93       	push	r29
   1bf14:	40 32       	cpi	r20, 0x20	; 32
   1bf16:	10 f0       	brcs	.+4      	; 0x1bf1c <_ZN7RH_RF954sendEPKhh+0x14>
   1bf18:	00 e0       	ldi	r16, 0x00	; 0
   1bf1a:	35 c0       	rjmp	.+106    	; 0x1bf86 <_ZN7RH_RF954sendEPKhh+0x7e>
   1bf1c:	14 2f       	mov	r17, r20
   1bf1e:	7b 01       	movw	r14, r22
   1bf20:	ec 01       	movw	r28, r24
   1bf22:	e8 81       	ld	r30, Y
   1bf24:	f9 81       	ldd	r31, Y+1	; 0x01
   1bf26:	00 88       	ldd	r0, Z+16	; 0x10
   1bf28:	f1 89       	ldd	r31, Z+17	; 0x11
   1bf2a:	e0 2d       	mov	r30, r0
   1bf2c:	19 95       	eicall
   1bf2e:	ce 01       	movw	r24, r28
   1bf30:	c8 de       	rcall	.-624    	; 0x1bcc2 <_ZN7RH_RF9511setModeIdleEv>
   1bf32:	e8 81       	ld	r30, Y
   1bf34:	f9 81       	ldd	r31, Y+1	; 0x01
   1bf36:	06 88       	ldd	r0, Z+22	; 0x16
   1bf38:	f7 89       	ldd	r31, Z+23	; 0x17
   1bf3a:	e0 2d       	mov	r30, r0
   1bf3c:	ce 01       	movw	r24, r28
   1bf3e:	19 95       	eicall
   1bf40:	08 2f       	mov	r16, r24
   1bf42:	88 23       	and	r24, r24
   1bf44:	49 f3       	breq	.-46     	; 0x1bf18 <_ZN7RH_RF954sendEPKhh+0x10>
   1bf46:	40 e0       	ldi	r20, 0x00	; 0
   1bf48:	6d e0       	ldi	r22, 0x0D	; 13
   1bf4a:	ce 01       	movw	r24, r28
   1bf4c:	03 d6       	rcall	.+3078   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf4e:	49 85       	ldd	r20, Y+9	; 0x09
   1bf50:	60 e0       	ldi	r22, 0x00	; 0
   1bf52:	ce 01       	movw	r24, r28
   1bf54:	ff d5       	rcall	.+3070   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf56:	4a 85       	ldd	r20, Y+10	; 0x0a
   1bf58:	60 e0       	ldi	r22, 0x00	; 0
   1bf5a:	ce 01       	movw	r24, r28
   1bf5c:	fb d5       	rcall	.+3062   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf5e:	4b 85       	ldd	r20, Y+11	; 0x0b
   1bf60:	60 e0       	ldi	r22, 0x00	; 0
   1bf62:	ce 01       	movw	r24, r28
   1bf64:	f7 d5       	rcall	.+3054   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf66:	4c 85       	ldd	r20, Y+12	; 0x0c
   1bf68:	60 e0       	ldi	r22, 0x00	; 0
   1bf6a:	ce 01       	movw	r24, r28
   1bf6c:	f3 d5       	rcall	.+3046   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf6e:	21 2f       	mov	r18, r17
   1bf70:	a7 01       	movw	r20, r14
   1bf72:	60 e0       	ldi	r22, 0x00	; 0
   1bf74:	ce 01       	movw	r24, r28
   1bf76:	91 d6       	rcall	.+3362   	; 0x1cc9a <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>
   1bf78:	44 e0       	ldi	r20, 0x04	; 4
   1bf7a:	41 0f       	add	r20, r17
   1bf7c:	62 e2       	ldi	r22, 0x22	; 34
   1bf7e:	ce 01       	movw	r24, r28
   1bf80:	e9 d5       	rcall	.+3026   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bf82:	ce 01       	movw	r24, r28
   1bf84:	a3 df       	rcall	.-186    	; 0x1becc <_ZN7RH_RF959setModeTxEv>
   1bf86:	80 2f       	mov	r24, r16
   1bf88:	df 91       	pop	r29
   1bf8a:	cf 91       	pop	r28
   1bf8c:	1f 91       	pop	r17
   1bf8e:	0f 91       	pop	r16
   1bf90:	ff 90       	pop	r15
   1bf92:	ef 90       	pop	r14
   1bf94:	08 95       	ret

0001bf96 <_ZN7RH_RF9510setTxPowerEab>:
   1bf96:	cf 93       	push	r28
   1bf98:	df 93       	push	r29
   1bf9a:	ec 01       	movw	r28, r24
   1bf9c:	4b 8f       	std	Y+27, r20	; 0x1b
   1bf9e:	44 23       	and	r20, r20
   1bfa0:	91 f0       	breq	.+36     	; 0x1bfc6 <_ZN7RH_RF9510setTxPowerEab+0x30>
   1bfa2:	60 31       	cpi	r22, 0x10	; 16
   1bfa4:	24 f4       	brge	.+8      	; 0x1bfae <_ZN7RH_RF9510setTxPowerEab+0x18>
   1bfa6:	67 ff       	sbrs	r22, 7
   1bfa8:	03 c0       	rjmp	.+6      	; 0x1bfb0 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1bfaa:	60 e0       	ldi	r22, 0x00	; 0
   1bfac:	01 c0       	rjmp	.+2      	; 0x1bfb0 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1bfae:	6f e0       	ldi	r22, 0x0F	; 15
   1bfb0:	46 2f       	mov	r20, r22
   1bfb2:	40 67       	ori	r20, 0x70	; 112
   1bfb4:	69 e0       	ldi	r22, 0x09	; 9
   1bfb6:	ce 01       	movw	r24, r28
   1bfb8:	cd d5       	rcall	.+2970   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bfba:	44 e0       	ldi	r20, 0x04	; 4
   1bfbc:	6d e4       	ldi	r22, 0x4D	; 77
   1bfbe:	ce 01       	movw	r24, r28
   1bfc0:	df 91       	pop	r29
   1bfc2:	cf 91       	pop	r28
   1bfc4:	c7 c5       	rjmp	.+2958   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bfc6:	df 91       	pop	r29
   1bfc8:	cf 91       	pop	r28
   1bfca:	6b cd       	rjmp	.-1322   	; 0x1baa2 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>

0001bfcc <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>:
   1bfcc:	0f 93       	push	r16
   1bfce:	1f 93       	push	r17
   1bfd0:	cf 93       	push	r28
   1bfd2:	df 93       	push	r29
   1bfd4:	ec 01       	movw	r28, r24
   1bfd6:	8b 01       	movw	r16, r22
   1bfd8:	fb 01       	movw	r30, r22
   1bfda:	40 81       	ld	r20, Z
   1bfdc:	6d e1       	ldi	r22, 0x1D	; 29
   1bfde:	ba d5       	rcall	.+2932   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bfe0:	f8 01       	movw	r30, r16
   1bfe2:	41 81       	ldd	r20, Z+1	; 0x01
   1bfe4:	6e e1       	ldi	r22, 0x1E	; 30
   1bfe6:	ce 01       	movw	r24, r28
   1bfe8:	b5 d5       	rcall	.+2922   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1bfea:	f8 01       	movw	r30, r16
   1bfec:	42 81       	ldd	r20, Z+2	; 0x02
   1bfee:	66 e2       	ldi	r22, 0x26	; 38
   1bff0:	ce 01       	movw	r24, r28
   1bff2:	df 91       	pop	r29
   1bff4:	cf 91       	pop	r28
   1bff6:	1f 91       	pop	r17
   1bff8:	0f 91       	pop	r16
   1bffa:	ac c5       	rjmp	.+2904   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>

0001bffc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>:
   1bffc:	0f 93       	push	r16
   1bffe:	1f 93       	push	r17
   1c000:	cf 93       	push	r28
   1c002:	df 93       	push	r29
   1c004:	00 d0       	rcall	.+0      	; 0x1c006 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0xa>
   1c006:	cd b7       	in	r28, 0x3d	; 61
   1c008:	de b7       	in	r29, 0x3e	; 62
   1c00a:	70 e0       	ldi	r23, 0x00	; 0
   1c00c:	66 30       	cpi	r22, 0x06	; 6
   1c00e:	71 05       	cpc	r23, r1
   1c010:	ac f4       	brge	.+42     	; 0x1c03c <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x40>
   1c012:	8c 01       	movw	r16, r24
   1c014:	cb 01       	movw	r24, r22
   1c016:	88 0f       	add	r24, r24
   1c018:	99 1f       	adc	r25, r25
   1c01a:	68 0f       	add	r22, r24
   1c01c:	79 1f       	adc	r23, r25
   1c01e:	60 5a       	subi	r22, 0xA0	; 160
   1c020:	78 4b       	sbci	r23, 0xB8	; 184
   1c022:	43 e0       	ldi	r20, 0x03	; 3
   1c024:	50 e0       	ldi	r21, 0x00	; 0
   1c026:	ce 01       	movw	r24, r28
   1c028:	01 96       	adiw	r24, 0x01	; 1
   1c02a:	0e 94 a9 ed 	call	0x1db52	; 0x1db52 <memcpy_P>
   1c02e:	be 01       	movw	r22, r28
   1c030:	6f 5f       	subi	r22, 0xFF	; 255
   1c032:	7f 4f       	sbci	r23, 0xFF	; 255
   1c034:	c8 01       	movw	r24, r16
   1c036:	ca df       	rcall	.-108    	; 0x1bfcc <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>
   1c038:	81 e0       	ldi	r24, 0x01	; 1
   1c03a:	01 c0       	rjmp	.+2      	; 0x1c03e <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x42>
   1c03c:	80 e0       	ldi	r24, 0x00	; 0
   1c03e:	0f 90       	pop	r0
   1c040:	0f 90       	pop	r0
   1c042:	0f 90       	pop	r0
   1c044:	df 91       	pop	r29
   1c046:	cf 91       	pop	r28
   1c048:	1f 91       	pop	r17
   1c04a:	0f 91       	pop	r16
   1c04c:	08 95       	ret

0001c04e <_ZN7RH_RF9517setPreambleLengthEj>:
   1c04e:	1f 93       	push	r17
   1c050:	cf 93       	push	r28
   1c052:	df 93       	push	r29
   1c054:	ec 01       	movw	r28, r24
   1c056:	16 2f       	mov	r17, r22
   1c058:	47 2f       	mov	r20, r23
   1c05a:	60 e2       	ldi	r22, 0x20	; 32
   1c05c:	7b d5       	rcall	.+2806   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1c05e:	41 2f       	mov	r20, r17
   1c060:	61 e2       	ldi	r22, 0x21	; 33
   1c062:	ce 01       	movw	r24, r28
   1c064:	df 91       	pop	r29
   1c066:	cf 91       	pop	r28
   1c068:	1f 91       	pop	r17
   1c06a:	74 c5       	rjmp	.+2792   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>

0001c06c <_ZN7RH_RF954initEv>:
   1c06c:	ff 92       	push	r15
   1c06e:	0f 93       	push	r16
   1c070:	1f 93       	push	r17
   1c072:	cf 93       	push	r28
   1c074:	df 93       	push	r29
   1c076:	ec 01       	movw	r28, r24
   1c078:	e4 d4       	rcall	.+2504   	; 0x1ca42 <_ZN11RHSPIDriver4initEv>
   1c07a:	f8 2e       	mov	r15, r24
   1c07c:	81 11       	cpse	r24, r1
   1c07e:	02 c0       	rjmp	.+4      	; 0x1c084 <_ZN7RH_RF954initEv+0x18>
   1c080:	f1 2c       	mov	r15, r1
   1c082:	79 c0       	rjmp	.+242    	; 0x1c176 <_ZN7RH_RF954initEv+0x10a>
   1c084:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1c086:	8f 3f       	cpi	r24, 0xFF	; 255
   1c088:	79 f0       	breq	.+30     	; 0x1c0a8 <_ZN7RH_RF954initEv+0x3c>
   1c08a:	82 30       	cpi	r24, 0x02	; 2
   1c08c:	09 f4       	brne	.+2      	; 0x1c090 <_ZN7RH_RF954initEv+0x24>
   1c08e:	6a c0       	rjmp	.+212    	; 0x1c164 <_ZN7RH_RF954initEv+0xf8>
   1c090:	83 30       	cpi	r24, 0x03	; 3
   1c092:	09 f4       	brne	.+2      	; 0x1c096 <_ZN7RH_RF954initEv+0x2a>
   1c094:	6a c0       	rjmp	.+212    	; 0x1c16a <_ZN7RH_RF954initEv+0xfe>
   1c096:	9e ee       	ldi	r25, 0xEE	; 238
   1c098:	98 0f       	add	r25, r24
   1c09a:	94 30       	cpi	r25, 0x04	; 4
   1c09c:	88 f7       	brcc	.-30     	; 0x1c080 <_ZN7RH_RF954initEv+0x14>
   1c09e:	07 e1       	ldi	r16, 0x17	; 23
   1c0a0:	10 e0       	ldi	r17, 0x00	; 0
   1c0a2:	08 1b       	sub	r16, r24
   1c0a4:	11 09       	sbc	r17, r1
   1c0a6:	63 c0       	rjmp	.+198    	; 0x1c16e <_ZN7RH_RF954initEv+0x102>
   1c0a8:	0f ef       	ldi	r16, 0xFF	; 255
   1c0aa:	1f ef       	ldi	r17, 0xFF	; 255
   1c0ac:	40 e8       	ldi	r20, 0x80	; 128
   1c0ae:	61 e0       	ldi	r22, 0x01	; 1
   1c0b0:	ce 01       	movw	r24, r28
   1c0b2:	50 d5       	rcall	.+2720   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1c0b4:	6a e0       	ldi	r22, 0x0A	; 10
   1c0b6:	70 e0       	ldi	r23, 0x00	; 0
   1c0b8:	80 e0       	ldi	r24, 0x00	; 0
   1c0ba:	90 e0       	ldi	r25, 0x00	; 0
   1c0bc:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   1c0c0:	61 e0       	ldi	r22, 0x01	; 1
   1c0c2:	ce 01       	movw	r24, r28
   1c0c4:	02 d5       	rcall	.+2564   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1c0c6:	80 38       	cpi	r24, 0x80	; 128
   1c0c8:	d9 f6       	brne	.-74     	; 0x1c080 <_ZN7RH_RF954initEv+0x14>
   1c0ca:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1c0cc:	8f 3f       	cpi	r24, 0xFF	; 255
   1c0ce:	71 f1       	breq	.+92     	; 0x1c12c <_ZN7RH_RF954initEv+0xc0>
   1c0d0:	60 e0       	ldi	r22, 0x00	; 0
   1c0d2:	40 d8       	rcall	.-3968   	; 0x1b154 <pinMode>
   1c0d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1c0d6:	8f 3f       	cpi	r24, 0xFF	; 255
   1c0d8:	49 f4       	brne	.+18     	; 0x1c0ec <_ZN7RH_RF954initEv+0x80>
   1c0da:	80 91 50 18 	lds	r24, 0x1850	; 0x801850 <_ZN7RH_RF9515_interruptCountE>
   1c0de:	84 30       	cpi	r24, 0x04	; 4
   1c0e0:	78 f6       	brcc	.-98     	; 0x1c080 <_ZN7RH_RF954initEv+0x14>
   1c0e2:	91 e0       	ldi	r25, 0x01	; 1
   1c0e4:	98 0f       	add	r25, r24
   1c0e6:	90 93 50 18 	sts	0x1850, r25	; 0x801850 <_ZN7RH_RF9515_interruptCountE>
   1c0ea:	8d 8f       	std	Y+29, r24	; 0x1d
   1c0ec:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1c0ee:	e8 2f       	mov	r30, r24
   1c0f0:	f0 e0       	ldi	r31, 0x00	; 0
   1c0f2:	ee 0f       	add	r30, r30
   1c0f4:	ff 1f       	adc	r31, r31
   1c0f6:	ef 5a       	subi	r30, 0xAF	; 175
   1c0f8:	f7 4e       	sbci	r31, 0xE7	; 231
   1c0fa:	d1 83       	std	Z+1, r29	; 0x01
   1c0fc:	c0 83       	st	Z, r28
   1c0fe:	81 11       	cpse	r24, r1
   1c100:	05 c0       	rjmp	.+10     	; 0x1c10c <_ZN7RH_RF954initEv+0xa0>
   1c102:	43 e0       	ldi	r20, 0x03	; 3
   1c104:	50 e0       	ldi	r21, 0x00	; 0
   1c106:	60 e2       	ldi	r22, 0x20	; 32
   1c108:	7f ed       	ldi	r23, 0xDF	; 223
   1c10a:	0e c0       	rjmp	.+28     	; 0x1c128 <_ZN7RH_RF954initEv+0xbc>
   1c10c:	81 30       	cpi	r24, 0x01	; 1
   1c10e:	29 f4       	brne	.+10     	; 0x1c11a <_ZN7RH_RF954initEv+0xae>
   1c110:	43 e0       	ldi	r20, 0x03	; 3
   1c112:	50 e0       	ldi	r21, 0x00	; 0
   1c114:	68 e2       	ldi	r22, 0x28	; 40
   1c116:	7f ed       	ldi	r23, 0xDF	; 223
   1c118:	07 c0       	rjmp	.+14     	; 0x1c128 <_ZN7RH_RF954initEv+0xbc>
   1c11a:	82 30       	cpi	r24, 0x02	; 2
   1c11c:	09 f0       	breq	.+2      	; 0x1c120 <_ZN7RH_RF954initEv+0xb4>
   1c11e:	b0 cf       	rjmp	.-160    	; 0x1c080 <_ZN7RH_RF954initEv+0x14>
   1c120:	43 e0       	ldi	r20, 0x03	; 3
   1c122:	50 e0       	ldi	r21, 0x00	; 0
   1c124:	60 e3       	ldi	r22, 0x30	; 48
   1c126:	7f ed       	ldi	r23, 0xDF	; 223
   1c128:	80 2f       	mov	r24, r16
   1c12a:	49 d2       	rcall	.+1170   	; 0x1c5be <attachInterrupt>
   1c12c:	40 e0       	ldi	r20, 0x00	; 0
   1c12e:	6e e0       	ldi	r22, 0x0E	; 14
   1c130:	ce 01       	movw	r24, r28
   1c132:	10 d5       	rcall	.+2592   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1c134:	40 e0       	ldi	r20, 0x00	; 0
   1c136:	6f e0       	ldi	r22, 0x0F	; 15
   1c138:	ce 01       	movw	r24, r28
   1c13a:	0c d5       	rcall	.+2584   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   1c13c:	ce 01       	movw	r24, r28
   1c13e:	c1 dd       	rcall	.-1150   	; 0x1bcc2 <_ZN7RH_RF9511setModeIdleEv>
   1c140:	60 e0       	ldi	r22, 0x00	; 0
   1c142:	ce 01       	movw	r24, r28
   1c144:	5b df       	rcall	.-330    	; 0x1bffc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
   1c146:	68 e0       	ldi	r22, 0x08	; 8
   1c148:	70 e0       	ldi	r23, 0x00	; 0
   1c14a:	ce 01       	movw	r24, r28
   1c14c:	80 df       	rcall	.-256    	; 0x1c04e <_ZN7RH_RF9517setPreambleLengthEj>
   1c14e:	40 e0       	ldi	r20, 0x00	; 0
   1c150:	50 e0       	ldi	r21, 0x00	; 0
   1c152:	69 ed       	ldi	r22, 0xD9	; 217
   1c154:	73 e4       	ldi	r23, 0x43	; 67
   1c156:	ce 01       	movw	r24, r28
   1c158:	68 dd       	rcall	.-1328   	; 0x1bc2a <_ZN7RH_RF9512setFrequencyEf>
   1c15a:	1b 8e       	std	Y+27, r1	; 0x1b
   1c15c:	6d e0       	ldi	r22, 0x0D	; 13
   1c15e:	ce 01       	movw	r24, r28
   1c160:	a0 dc       	rcall	.-1728   	; 0x1baa2 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>
   1c162:	09 c0       	rjmp	.+18     	; 0x1c176 <_ZN7RH_RF954initEv+0x10a>
   1c164:	00 e0       	ldi	r16, 0x00	; 0
   1c166:	10 e0       	ldi	r17, 0x00	; 0
   1c168:	02 c0       	rjmp	.+4      	; 0x1c16e <_ZN7RH_RF954initEv+0x102>
   1c16a:	01 e0       	ldi	r16, 0x01	; 1
   1c16c:	10 e0       	ldi	r17, 0x00	; 0
   1c16e:	60 2f       	mov	r22, r16
   1c170:	ce 01       	movw	r24, r28
   1c172:	ed d5       	rcall	.+3034   	; 0x1cd4e <_ZN11RHSPIDriver17spiUsingInterruptEh>
   1c174:	9b cf       	rjmp	.-202    	; 0x1c0ac <_ZN7RH_RF954initEv+0x40>
   1c176:	8f 2d       	mov	r24, r15
   1c178:	df 91       	pop	r29
   1c17a:	cf 91       	pop	r28
   1c17c:	1f 91       	pop	r17
   1c17e:	0f 91       	pop	r16
   1c180:	ff 90       	pop	r15
   1c182:	08 95       	ret

0001c184 <_ZN7RH_RF9514setLowDatarateEv>:
}
 
void RH_RF95::setLowDatarate()
{
   1c184:	8f 92       	push	r8
   1c186:	9f 92       	push	r9
   1c188:	af 92       	push	r10
   1c18a:	bf 92       	push	r11
   1c18c:	ef 92       	push	r14
   1c18e:	ff 92       	push	r15
   1c190:	1f 93       	push	r17
   1c192:	cf 93       	push	r28
   1c194:	df 93       	push	r29
   1c196:	cd b7       	in	r28, 0x3d	; 61
   1c198:	de b7       	in	r29, 0x3e	; 62
   1c19a:	a8 97       	sbiw	r28, 0x28	; 40
   1c19c:	0f b6       	in	r0, 0x3f	; 63
   1c19e:	f8 94       	cli
   1c1a0:	de bf       	out	0x3e, r29	; 62
   1c1a2:	0f be       	out	0x3f, r0	; 63
   1c1a4:	cd bf       	out	0x3d, r28	; 61
   1c1a6:	7c 01       	movw	r14, r24
    // "To avoid issues surrounding  drift  of  the  crystal  reference  oscillator  due  to  either  temperature  change  
    // or  motion,the  low  data  rate optimization  bit  is  used. Specifically for 125  kHz  bandwidth  and  SF  =  11  and  12,  
    // this  adds  a  small  overhead  to increase robustness to reference frequency variations over the timescale of the LoRa packet."
 
    // read current value for BW and SF
    uint8_t BW = spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) >> 4;	// bw is in bits 7..4
   1c1a8:	6d e1       	ldi	r22, 0x1D	; 29
   1c1aa:	8f d4       	rcall	.+2334   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1c1ac:	18 2f       	mov	r17, r24
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   1c1ae:	6e e1       	ldi	r22, 0x1E	; 30
   1c1b0:	c7 01       	movw	r24, r14
   1c1b2:	8b d4       	rcall	.+2326   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   1c1b4:	98 e2       	ldi	r25, 0x28	; 40
   1c1b6:	e7 ec       	ldi	r30, 0xC7	; 199
   1c1b8:	f2 e0       	ldi	r31, 0x02	; 2
   1c1ba:	de 01       	movw	r26, r28
   1c1bc:	11 96       	adiw	r26, 0x01	; 1
   1c1be:	01 90       	ld	r0, Z+
   1c1c0:	0d 92       	st	X+, r0
   1c1c2:	9a 95       	dec	r25
   1c1c4:	e1 f7       	brne	.-8      	; 0x1c1be <_ZN7RH_RF9514setLowDatarateEv+0x3a>
   
    float bandwidth = bw_tab[BW];
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1c1c6:	68 2f       	mov	r22, r24
   1c1c8:	70 e0       	ldi	r23, 0x00	; 0
   1c1ca:	84 e0       	ldi	r24, 0x04	; 4
   1c1cc:	75 95       	asr	r23
   1c1ce:	67 95       	ror	r22
   1c1d0:	8a 95       	dec	r24
   1c1d2:	e1 f7       	brne	.-8      	; 0x1c1cc <_ZN7RH_RF9514setLowDatarateEv+0x48>
   1c1d4:	70 e0       	ldi	r23, 0x00	; 0
   1c1d6:	80 e0       	ldi	r24, 0x00	; 0
   1c1d8:	90 e0       	ldi	r25, 0x00	; 0
   1c1da:	0e 94 e9 d1 	call	0x1a3d2	; 0x1a3d2 <__floatunsisf>
   1c1de:	9b 01       	movw	r18, r22
   1c1e0:	ac 01       	movw	r20, r24
   1c1e2:	60 e0       	ldi	r22, 0x00	; 0
   1c1e4:	70 e0       	ldi	r23, 0x00	; 0
   1c1e6:	80 e0       	ldi	r24, 0x00	; 0
   1c1e8:	90 e4       	ldi	r25, 0x40	; 64
   1c1ea:	0e 94 7e e9 	call	0x1d2fc	; 0x1d2fc <pow>
   1c1ee:	20 e0       	ldi	r18, 0x00	; 0
   1c1f0:	30 e0       	ldi	r19, 0x00	; 0
   1c1f2:	4a e7       	ldi	r20, 0x7A	; 122
   1c1f4:	54 e4       	ldi	r21, 0x44	; 68
   1c1f6:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   
    float bandwidth = bw_tab[BW];
   1c1fa:	e1 2f       	mov	r30, r17
   1c1fc:	f0 e0       	ldi	r31, 0x00	; 0
   1c1fe:	24 e0       	ldi	r18, 0x04	; 4
   1c200:	f5 95       	asr	r31
   1c202:	e7 95       	ror	r30
   1c204:	2a 95       	dec	r18
   1c206:	e1 f7       	brne	.-8      	; 0x1c200 <_ZN7RH_RF9514setLowDatarateEv+0x7c>
   1c208:	ee 0f       	add	r30, r30
   1c20a:	ff 1f       	adc	r31, r31
   1c20c:	ee 0f       	add	r30, r30
   1c20e:	ff 1f       	adc	r31, r31
   1c210:	21 e0       	ldi	r18, 0x01	; 1
   1c212:	30 e0       	ldi	r19, 0x00	; 0
   1c214:	2c 0f       	add	r18, r28
   1c216:	3d 1f       	adc	r19, r29
   1c218:	e2 0f       	add	r30, r18
   1c21a:	f3 1f       	adc	r31, r19
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1c21c:	20 81       	ld	r18, Z
   1c21e:	31 81       	ldd	r19, Z+1	; 0x01
   1c220:	42 81       	ldd	r20, Z+2	; 0x02
   1c222:	53 81       	ldd	r21, Z+3	; 0x03
   1c224:	0e 94 55 d1 	call	0x1a2aa	; 0x1a2aa <__divsf3>
   1c228:	4b 01       	movw	r8, r22
   1c22a:	5c 01       	movw	r10, r24
    // https://www.thethingsnetwork.org/forum/t/a-point-to-note-lora-low-data-rate-optimisation-flag/12007
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
   1c22c:	66 e2       	ldi	r22, 0x26	; 38
   1c22e:	c7 01       	movw	r24, r14
   1c230:	4c d4       	rcall	.+2200   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1c232:	18 2f       	mov	r17, r24
   1c234:	17 7f       	andi	r17, 0xF7	; 247
    if (symbolTime > 16.0)
   1c236:	20 e0       	ldi	r18, 0x00	; 0
   1c238:	30 e0       	ldi	r19, 0x00	; 0
   1c23a:	40 e8       	ldi	r20, 0x80	; 128
   1c23c:	51 e4       	ldi	r21, 0x41	; 65
   1c23e:	c5 01       	movw	r24, r10
   1c240:	b4 01       	movw	r22, r8
   1c242:	0e 94 9b d2 	call	0x1a536	; 0x1a536 <__gesf2>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1c246:	41 2f       	mov	r20, r17
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
   1c248:	18 16       	cp	r1, r24
   1c24a:	0c f4       	brge	.+2      	; 0x1c24e <_ZN7RH_RF9514setLowDatarateEv+0xca>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1c24c:	48 60       	ori	r20, 0x08	; 8
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1c24e:	66 e2       	ldi	r22, 0x26	; 38
   1c250:	c7 01       	movw	r24, r14
   
}
   1c252:	a8 96       	adiw	r28, 0x28	; 40
   1c254:	0f b6       	in	r0, 0x3f	; 63
   1c256:	f8 94       	cli
   1c258:	de bf       	out	0x3e, r29	; 62
   1c25a:	0f be       	out	0x3f, r0	; 63
   1c25c:	cd bf       	out	0x3d, r28	; 61
   1c25e:	df 91       	pop	r29
   1c260:	cf 91       	pop	r28
   1c262:	1f 91       	pop	r17
   1c264:	ff 90       	pop	r15
   1c266:	ef 90       	pop	r14
   1c268:	bf 90       	pop	r11
   1c26a:	af 90       	pop	r10
   1c26c:	9f 90       	pop	r9
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1c26e:	8f 90       	pop	r8
   1c270:	71 c4       	rjmp	.+2274   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>

0001c272 <_ZN7RH_RF9518setSpreadingFactorEh>:
 // a bit more intuitive
 //
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   1c272:	0f 93       	push	r16
   1c274:	1f 93       	push	r17
   1c276:	cf 93       	push	r28
   1c278:	8c 01       	movw	r16, r24
   if (sf <= 6) 
   1c27a:	67 30       	cpi	r22, 0x07	; 7
   1c27c:	60 f0       	brcs	.+24     	; 0x1c296 <_ZN7RH_RF9518setSpreadingFactorEh+0x24>
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   else if (sf == 7) 
   1c27e:	67 30       	cpi	r22, 0x07	; 7
   1c280:	61 f0       	breq	.+24     	; 0x1c29a <_ZN7RH_RF9518setSpreadingFactorEh+0x28>
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   else if (sf == 8) 
   1c282:	68 30       	cpi	r22, 0x08	; 8
   1c284:	61 f0       	breq	.+24     	; 0x1c29e <_ZN7RH_RF9518setSpreadingFactorEh+0x2c>
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   else if (sf == 9)
   1c286:	69 30       	cpi	r22, 0x09	; 9
   1c288:	61 f0       	breq	.+24     	; 0x1c2a2 <_ZN7RH_RF9518setSpreadingFactorEh+0x30>
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   else if (sf == 10)
   1c28a:	6a 30       	cpi	r22, 0x0A	; 10
   1c28c:	61 f0       	breq	.+24     	; 0x1c2a6 <_ZN7RH_RF9518setSpreadingFactorEh+0x34>
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   else if (sf == 11) 
   1c28e:	6b 30       	cpi	r22, 0x0B	; 11
   1c290:	61 f4       	brne	.+24     	; 0x1c2aa <_ZN7RH_RF9518setSpreadingFactorEh+0x38>
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   1c292:	c0 eb       	ldi	r28, 0xB0	; 176
   1c294:	0b c0       	rjmp	.+22     	; 0x1c2ac <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   if (sf <= 6) 
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   1c296:	c0 e6       	ldi	r28, 0x60	; 96
   1c298:	09 c0       	rjmp	.+18     	; 0x1c2ac <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 7) 
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   1c29a:	c0 e7       	ldi	r28, 0x70	; 112
   1c29c:	07 c0       	rjmp	.+14     	; 0x1c2ac <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 8) 
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   1c29e:	c0 e8       	ldi	r28, 0x80	; 128
   1c2a0:	05 c0       	rjmp	.+10     	; 0x1c2ac <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 9)
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   1c2a2:	c0 e9       	ldi	r28, 0x90	; 144
   1c2a4:	03 c0       	rjmp	.+6      	; 0x1c2ac <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 10)
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   1c2a6:	c0 ea       	ldi	r28, 0xA0	; 160
   1c2a8:	01 c0       	rjmp	.+2      	; 0x1c2ac <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 11) 
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   else if (sf >= 12)
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
   1c2aa:	c0 ec       	ldi	r28, 0xC0	; 192
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   1c2ac:	6e e1       	ldi	r22, 0x1E	; 30
   1c2ae:	c8 01       	movw	r24, r16
   1c2b0:	0c d4       	rcall	.+2072   	; 0x1caca <_ZN11RHSPIDriver7spiReadEh>
   1c2b2:	8f 70       	andi	r24, 0x0F	; 15
   1c2b4:	48 2f       	mov	r20, r24
   1c2b6:	4c 2b       	or	r20, r28
   1c2b8:	6e e1       	ldi	r22, 0x1E	; 30
   1c2ba:	c8 01       	movw	r24, r16
   1c2bc:	4b d4       	rcall	.+2198   	; 0x1cb54 <_ZN11RHSPIDriver8spiWriteEhh>
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1c2be:	c8 01       	movw	r24, r16
 }
   1c2c0:	cf 91       	pop	r28
   1c2c2:	1f 91       	pop	r17
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1c2c4:	0f 91       	pop	r16
   1c2c6:	5e cf       	rjmp	.-324    	; 0x1c184 <_ZN7RH_RF9514setLowDatarateEv>

0001c2c8 <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
   1c2c8:	cf 93       	push	r28
  uint8_t sreg = SREG;
   1c2ca:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c2cc:	f8 94       	cli
  if (!initialized) {
   1c2ce:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c2d2:	81 11       	cpse	r24, r1
   1c2d4:	27 c0       	rjmp	.+78     	; 0x1c324 <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
   1c2d6:	e1 e0       	ldi	r30, 0x01	; 1
   1c2d8:	f7 e4       	ldi	r31, 0x47	; 71
   1c2da:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
   1c2dc:	eb eb       	ldi	r30, 0xBB	; 187
   1c2de:	f6 e4       	ldi	r31, 0x46	; 70
   1c2e0:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
   1c2e2:	e8 2f       	mov	r30, r24
   1c2e4:	f0 e0       	ldi	r31, 0x00	; 0
   1c2e6:	ee 0f       	add	r30, r30
   1c2e8:	ff 1f       	adc	r31, r31
   1c2ea:	ea 5b       	subi	r30, 0xBA	; 186
   1c2ec:	f8 4b       	sbci	r31, 0xB8	; 184
   1c2ee:	a5 91       	lpm	r26, Z+
   1c2f0:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
   1c2f2:	ec 91       	ld	r30, X
   1c2f4:	e9 23       	and	r30, r25
   1c2f6:	21 f4       	brne	.+8      	; 0x1c300 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
   1c2f8:	61 e0       	ldi	r22, 0x01	; 1
   1c2fa:	85 e3       	ldi	r24, 0x35	; 53
   1c2fc:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
   1c300:	61 e0       	ldi	r22, 0x01	; 1
   1c302:	85 e3       	ldi	r24, 0x35	; 53
   1c304:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
   1c308:	8c b5       	in	r24, 0x2c	; 44
   1c30a:	80 61       	ori	r24, 0x10	; 16
   1c30c:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
   1c30e:	8c b5       	in	r24, 0x2c	; 44
   1c310:	80 64       	ori	r24, 0x40	; 64
   1c312:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
   1c314:	61 e0       	ldi	r22, 0x01	; 1
   1c316:	84 e3       	ldi	r24, 0x34	; 52
   1c318:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
    pinMode(MOSI, OUTPUT);
   1c31c:	61 e0       	ldi	r22, 0x01	; 1
   1c31e:	83 e3       	ldi	r24, 0x33	; 51
   1c320:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
  }
  initialized++; // reference count
   1c324:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c328:	8f 5f       	subi	r24, 0xFF	; 255
   1c32a:	80 93 5a 18 	sts	0x185A, r24	; 0x80185a <_ZN8SPIClass11initializedE>
  SREG = sreg;
   1c32e:	cf bf       	out	0x3f, r28	; 63
}
   1c330:	cf 91       	pop	r28
   1c332:	08 95       	ret

0001c334 <_ZN8SPIClass3endEv>:

void SPIClass::end() {
  uint8_t sreg = SREG;
   1c334:	9f b7       	in	r25, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c336:	f8 94       	cli
  // Decrease the reference counter
  if (initialized)
   1c338:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c33c:	88 23       	and	r24, r24
   1c33e:	19 f0       	breq	.+6      	; 0x1c346 <_ZN8SPIClass3endEv+0x12>
    initialized--;
   1c340:	81 50       	subi	r24, 0x01	; 1
   1c342:	80 93 5a 18 	sts	0x185A, r24	; 0x80185a <_ZN8SPIClass11initializedE>
  // If there are no more references disable SPI
  if (!initialized) {
   1c346:	80 91 5a 18 	lds	r24, 0x185A	; 0x80185a <_ZN8SPIClass11initializedE>
   1c34a:	81 11       	cpse	r24, r1
   1c34c:	05 c0       	rjmp	.+10     	; 0x1c358 <_ZN8SPIClass3endEv+0x24>
    SPCR &= ~_BV(SPE);
   1c34e:	8c b5       	in	r24, 0x2c	; 44
   1c350:	8f 7b       	andi	r24, 0xBF	; 191
   1c352:	8c bd       	out	0x2c, r24	; 44
    interruptMode = 0;
   1c354:	10 92 59 18 	sts	0x1859, r1	; 0x801859 <_ZN8SPIClass13interruptModeE>
    #ifdef SPI_TRANSACTION_MISMATCH_LED
    inTransactionFlag = 0;
    #endif
  }
  SREG = sreg;
   1c358:	9f bf       	out	0x3f, r25	; 63
   1c35a:	08 95       	ret

0001c35c <_ZN8SPIClass14usingInterruptEh>:
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
  uint8_t sreg = SREG;
   1c35c:	2f b7       	in	r18, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1c35e:	f8 94       	cli
  switch (interruptNumber) {
   1c360:	90 e0       	ldi	r25, 0x00	; 0
   1c362:	88 30       	cpi	r24, 0x08	; 8
   1c364:	91 05       	cpc	r25, r1
   1c366:	a8 f4       	brcc	.+42     	; 0x1c392 <_ZN8SPIClass14usingInterruptEh+0x36>
   1c368:	fc 01       	movw	r30, r24
   1c36a:	88 27       	eor	r24, r24
   1c36c:	e7 5f       	subi	r30, 0xF7	; 247
   1c36e:	fe 4f       	sbci	r31, 0xFE	; 254
   1c370:	8f 4f       	sbci	r24, 0xFF	; 255
   1c372:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
  #endif
  #ifdef SPI_INT1_MASK
  case 1: mask = SPI_INT1_MASK; break;
   1c376:	80 e2       	ldi	r24, 0x20	; 32
   1c378:	12 c0       	rjmp	.+36     	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT2_MASK
  case 2: mask = SPI_INT2_MASK; break;
   1c37a:	81 e0       	ldi	r24, 0x01	; 1
   1c37c:	10 c0       	rjmp	.+32     	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT3_MASK
  case 3: mask = SPI_INT3_MASK; break;
   1c37e:	82 e0       	ldi	r24, 0x02	; 2
   1c380:	0e c0       	rjmp	.+28     	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT4_MASK
  case 4: mask = SPI_INT4_MASK; break;
   1c382:	84 e0       	ldi	r24, 0x04	; 4
   1c384:	0c c0       	rjmp	.+24     	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT5_MASK
  case 5: mask = SPI_INT5_MASK; break;
   1c386:	88 e0       	ldi	r24, 0x08	; 8
   1c388:	0a c0       	rjmp	.+20     	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT6_MASK
  case 6: mask = SPI_INT6_MASK; break;
   1c38a:	80 e4       	ldi	r24, 0x40	; 64
   1c38c:	08 c0       	rjmp	.+16     	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
   1c38e:	80 e8       	ldi	r24, 0x80	; 128
   1c390:	06 c0       	rjmp	.+12     	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  default:
    interruptMode = 2;
   1c392:	82 e0       	ldi	r24, 0x02	; 2
   1c394:	80 93 59 18 	sts	0x1859, r24	; 0x801859 <_ZN8SPIClass13interruptModeE>
  #endif
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
   1c398:	80 e0       	ldi	r24, 0x00	; 0
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
  #endif
  default:
    interruptMode = 2;
    break;
   1c39a:	01 c0       	rjmp	.+2      	; 0x1c39e <_ZN8SPIClass14usingInterruptEh+0x42>
  uint8_t mask = 0;
  uint8_t sreg = SREG;
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
  switch (interruptNumber) {
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
   1c39c:	80 e1       	ldi	r24, 0x10	; 16
  #endif
  default:
    interruptMode = 2;
    break;
  }
  interruptMask |= mask;
   1c39e:	90 91 58 18 	lds	r25, 0x1858	; 0x801858 <_ZN8SPIClass13interruptMaskE>
   1c3a2:	89 2b       	or	r24, r25
   1c3a4:	80 93 58 18 	sts	0x1858, r24	; 0x801858 <_ZN8SPIClass13interruptMaskE>
  if (!interruptMode)
   1c3a8:	80 91 59 18 	lds	r24, 0x1859	; 0x801859 <_ZN8SPIClass13interruptModeE>
   1c3ac:	81 11       	cpse	r24, r1
   1c3ae:	03 c0       	rjmp	.+6      	; 0x1c3b6 <_ZN8SPIClass14usingInterruptEh+0x5a>
    interruptMode = 1;
   1c3b0:	81 e0       	ldi	r24, 0x01	; 1
   1c3b2:	80 93 59 18 	sts	0x1859, r24	; 0x801859 <_ZN8SPIClass13interruptModeE>
  SREG = sreg;
   1c3b6:	2f bf       	out	0x3f, r18	; 63
   1c3b8:	08 95       	ret

0001c3ba <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
   1c3ba:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c3be:	90 e0       	ldi	r25, 0x00	; 0
   1c3c0:	20 91 90 18 	lds	r18, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c3c4:	82 1b       	sub	r24, r18
   1c3c6:	91 09       	sbc	r25, r1
   1c3c8:	08 95       	ret

0001c3ca <_ZN7TwoWire4readEv>:
   1c3ca:	90 91 90 18 	lds	r25, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c3ce:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c3d2:	98 17       	cp	r25, r24
   1c3d4:	50 f4       	brcc	.+20     	; 0x1c3ea <_ZN7TwoWire4readEv+0x20>
   1c3d6:	e9 2f       	mov	r30, r25
   1c3d8:	f0 e0       	ldi	r31, 0x00	; 0
   1c3da:	ef 56       	subi	r30, 0x6F	; 111
   1c3dc:	f7 4e       	sbci	r31, 0xE7	; 231
   1c3de:	20 81       	ld	r18, Z
   1c3e0:	30 e0       	ldi	r19, 0x00	; 0
   1c3e2:	9f 5f       	subi	r25, 0xFF	; 255
   1c3e4:	90 93 90 18 	sts	0x1890, r25	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c3e8:	02 c0       	rjmp	.+4      	; 0x1c3ee <_ZN7TwoWire4readEv+0x24>
   1c3ea:	2f ef       	ldi	r18, 0xFF	; 255
   1c3ec:	3f ef       	ldi	r19, 0xFF	; 255
   1c3ee:	c9 01       	movw	r24, r18
   1c3f0:	08 95       	ret

0001c3f2 <_ZN7TwoWire4peekEv>:
   1c3f2:	e0 91 90 18 	lds	r30, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c3f6:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c3fa:	e8 17       	cp	r30, r24
   1c3fc:	30 f4       	brcc	.+12     	; 0x1c40a <_ZN7TwoWire4peekEv+0x18>
   1c3fe:	f0 e0       	ldi	r31, 0x00	; 0
   1c400:	ef 56       	subi	r30, 0x6F	; 111
   1c402:	f7 4e       	sbci	r31, 0xE7	; 231
   1c404:	80 81       	ld	r24, Z
   1c406:	90 e0       	ldi	r25, 0x00	; 0
   1c408:	08 95       	ret
   1c40a:	8f ef       	ldi	r24, 0xFF	; 255
   1c40c:	9f ef       	ldi	r25, 0xFF	; 255
   1c40e:	08 95       	ret

0001c410 <_ZN7TwoWire5flushEv>:
   1c410:	08 95       	ret

0001c412 <_ZN7TwoWire16onReceiveServiceEPhi>:
   1c412:	cf 93       	push	r28
   1c414:	df 93       	push	r29
   1c416:	ec 01       	movw	r28, r24
   1c418:	e0 91 67 18 	lds	r30, 0x1867	; 0x801867 <_ZN7TwoWire14user_onReceiveE>
   1c41c:	f0 91 68 18 	lds	r31, 0x1868	; 0x801868 <_ZN7TwoWire14user_onReceiveE+0x1>
   1c420:	30 97       	sbiw	r30, 0x00	; 0
   1c422:	f1 f0       	breq	.+60     	; 0x1c460 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1c424:	90 91 90 18 	lds	r25, 0x1890	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c428:	80 91 8f 18 	lds	r24, 0x188F	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c42c:	98 17       	cp	r25, r24
   1c42e:	c0 f0       	brcs	.+48     	; 0x1c460 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1c430:	90 e0       	ldi	r25, 0x00	; 0
   1c432:	29 2f       	mov	r18, r25
   1c434:	30 e0       	ldi	r19, 0x00	; 0
   1c436:	26 17       	cp	r18, r22
   1c438:	37 07       	cpc	r19, r23
   1c43a:	54 f4       	brge	.+20     	; 0x1c450 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
   1c43c:	de 01       	movw	r26, r28
   1c43e:	a2 0f       	add	r26, r18
   1c440:	b3 1f       	adc	r27, r19
   1c442:	4c 91       	ld	r20, X
   1c444:	d9 01       	movw	r26, r18
   1c446:	af 56       	subi	r26, 0x6F	; 111
   1c448:	b7 4e       	sbci	r27, 0xE7	; 231
   1c44a:	4c 93       	st	X, r20
   1c44c:	9f 5f       	subi	r25, 0xFF	; 255
   1c44e:	f1 cf       	rjmp	.-30     	; 0x1c432 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
   1c450:	10 92 90 18 	sts	0x1890, r1	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c454:	60 93 8f 18 	sts	0x188F, r22	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c458:	cb 01       	movw	r24, r22
   1c45a:	df 91       	pop	r29
   1c45c:	cf 91       	pop	r28
   1c45e:	19 94       	eijmp
   1c460:	df 91       	pop	r29
   1c462:	cf 91       	pop	r28
   1c464:	08 95       	ret

0001c466 <_ZN7TwoWire16onRequestServiceEv>:
   1c466:	e0 91 69 18 	lds	r30, 0x1869	; 0x801869 <_ZN7TwoWire14user_onRequestE>
   1c46a:	f0 91 6a 18 	lds	r31, 0x186A	; 0x80186a <_ZN7TwoWire14user_onRequestE+0x1>
   1c46e:	30 97       	sbiw	r30, 0x00	; 0
   1c470:	29 f0       	breq	.+10     	; 0x1c47c <_ZN7TwoWire16onRequestServiceEv+0x16>
   1c472:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c476:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c47a:	19 94       	eijmp
   1c47c:	08 95       	ret

0001c47e <_ZN7TwoWire5writeEPKhj>:
   1c47e:	cf 92       	push	r12
   1c480:	df 92       	push	r13
   1c482:	ef 92       	push	r14
   1c484:	ff 92       	push	r15
   1c486:	0f 93       	push	r16
   1c488:	1f 93       	push	r17
   1c48a:	cf 93       	push	r28
   1c48c:	df 93       	push	r29
   1c48e:	7c 01       	movw	r14, r24
   1c490:	cb 01       	movw	r24, r22
   1c492:	8a 01       	movw	r16, r20
   1c494:	20 91 6b 18 	lds	r18, 0x186B	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c498:	22 23       	and	r18, r18
   1c49a:	89 f0       	breq	.+34     	; 0x1c4be <_ZN7TwoWire5writeEPKhj+0x40>
   1c49c:	eb 01       	movw	r28, r22
   1c49e:	6b 01       	movw	r12, r22
   1c4a0:	c4 0e       	add	r12, r20
   1c4a2:	d5 1e       	adc	r13, r21
   1c4a4:	cc 15       	cp	r28, r12
   1c4a6:	dd 05       	cpc	r29, r13
   1c4a8:	61 f0       	breq	.+24     	; 0x1c4c2 <_ZN7TwoWire5writeEPKhj+0x44>
   1c4aa:	69 91       	ld	r22, Y+
   1c4ac:	d7 01       	movw	r26, r14
   1c4ae:	ed 91       	ld	r30, X+
   1c4b0:	fc 91       	ld	r31, X
   1c4b2:	01 90       	ld	r0, Z+
   1c4b4:	f0 81       	ld	r31, Z
   1c4b6:	e0 2d       	mov	r30, r0
   1c4b8:	c7 01       	movw	r24, r14
   1c4ba:	19 95       	eicall
   1c4bc:	f3 cf       	rjmp	.-26     	; 0x1c4a4 <_ZN7TwoWire5writeEPKhj+0x26>
   1c4be:	64 2f       	mov	r22, r20
   1c4c0:	7d d4       	rcall	.+2298   	; 0x1cdbc <twi_transmit>
   1c4c2:	c8 01       	movw	r24, r16
   1c4c4:	df 91       	pop	r29
   1c4c6:	cf 91       	pop	r28
   1c4c8:	1f 91       	pop	r17
   1c4ca:	0f 91       	pop	r16
   1c4cc:	ff 90       	pop	r15
   1c4ce:	ef 90       	pop	r14
   1c4d0:	df 90       	pop	r13
   1c4d2:	cf 90       	pop	r12
   1c4d4:	08 95       	ret

0001c4d6 <_ZN7TwoWire5writeEh>:
   1c4d6:	cf 93       	push	r28
   1c4d8:	df 93       	push	r29
   1c4da:	1f 92       	push	r1
   1c4dc:	cd b7       	in	r28, 0x3d	; 61
   1c4de:	de b7       	in	r29, 0x3e	; 62
   1c4e0:	69 83       	std	Y+1, r22	; 0x01
   1c4e2:	20 91 6b 18 	lds	r18, 0x186B	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c4e6:	22 23       	and	r18, r18
   1c4e8:	d1 f0       	breq	.+52     	; 0x1c51e <_ZN7TwoWire5writeEh+0x48>
   1c4ea:	20 91 6c 18 	lds	r18, 0x186C	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c4ee:	20 32       	cpi	r18, 0x20	; 32
   1c4f0:	40 f0       	brcs	.+16     	; 0x1c502 <_ZN7TwoWire5writeEh+0x2c>
   1c4f2:	21 e0       	ldi	r18, 0x01	; 1
   1c4f4:	30 e0       	ldi	r19, 0x00	; 0
   1c4f6:	fc 01       	movw	r30, r24
   1c4f8:	33 83       	std	Z+3, r19	; 0x03
   1c4fa:	22 83       	std	Z+2, r18	; 0x02
   1c4fc:	80 e0       	ldi	r24, 0x00	; 0
   1c4fe:	90 e0       	ldi	r25, 0x00	; 0
   1c500:	14 c0       	rjmp	.+40     	; 0x1c52a <_ZN7TwoWire5writeEh+0x54>
   1c502:	80 91 6d 18 	lds	r24, 0x186D	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c506:	e8 2f       	mov	r30, r24
   1c508:	f0 e0       	ldi	r31, 0x00	; 0
   1c50a:	e2 59       	subi	r30, 0x92	; 146
   1c50c:	f7 4e       	sbci	r31, 0xE7	; 231
   1c50e:	99 81       	ldd	r25, Y+1	; 0x01
   1c510:	90 83       	st	Z, r25
   1c512:	8f 5f       	subi	r24, 0xFF	; 255
   1c514:	80 93 6d 18 	sts	0x186D, r24	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c518:	80 93 6c 18 	sts	0x186C, r24	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c51c:	04 c0       	rjmp	.+8      	; 0x1c526 <_ZN7TwoWire5writeEh+0x50>
   1c51e:	61 e0       	ldi	r22, 0x01	; 1
   1c520:	ce 01       	movw	r24, r28
   1c522:	01 96       	adiw	r24, 0x01	; 1
   1c524:	4b d4       	rcall	.+2198   	; 0x1cdbc <twi_transmit>
   1c526:	81 e0       	ldi	r24, 0x01	; 1
   1c528:	90 e0       	ldi	r25, 0x00	; 0
   1c52a:	0f 90       	pop	r0
   1c52c:	df 91       	pop	r29
   1c52e:	cf 91       	pop	r28
   1c530:	08 95       	ret

0001c532 <_ZN7TwoWireC1Ev>:
   1c532:	fc 01       	movw	r30, r24
   1c534:	13 82       	std	Z+3, r1	; 0x03
   1c536:	12 82       	std	Z+2, r1	; 0x02
   1c538:	88 ee       	ldi	r24, 0xE8	; 232
   1c53a:	93 e0       	ldi	r25, 0x03	; 3
   1c53c:	a0 e0       	ldi	r26, 0x00	; 0
   1c53e:	b0 e0       	ldi	r27, 0x00	; 0
   1c540:	84 83       	std	Z+4, r24	; 0x04
   1c542:	95 83       	std	Z+5, r25	; 0x05
   1c544:	a6 83       	std	Z+6, r26	; 0x06
   1c546:	b7 83       	std	Z+7, r27	; 0x07
   1c548:	89 ea       	ldi	r24, 0xA9	; 169
   1c54a:	98 e0       	ldi	r25, 0x08	; 8
   1c54c:	91 83       	std	Z+1, r25	; 0x01
   1c54e:	80 83       	st	Z, r24
   1c550:	08 95       	ret

0001c552 <_ZN7TwoWire5beginEv>:
   1c552:	10 92 90 18 	sts	0x1890, r1	; 0x801890 <_ZN7TwoWire13rxBufferIndexE>
   1c556:	10 92 8f 18 	sts	0x188F, r1	; 0x80188f <_ZN7TwoWire14rxBufferLengthE>
   1c55a:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c55e:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c562:	01 d4       	rcall	.+2050   	; 0x1cd66 <twi_init>
   1c564:	83 e3       	ldi	r24, 0x33	; 51
   1c566:	92 ee       	ldi	r25, 0xE2	; 226
   1c568:	56 d4       	rcall	.+2220   	; 0x1ce16 <twi_attachSlaveTxEvent>
   1c56a:	89 e0       	ldi	r24, 0x09	; 9
   1c56c:	92 ee       	ldi	r25, 0xE2	; 226
   1c56e:	4e c4       	rjmp	.+2204   	; 0x1ce0c <twi_attachSlaveRxEvent>

0001c570 <_ZN7TwoWire17beginTransmissionEh>:
   1c570:	81 e0       	ldi	r24, 0x01	; 1
   1c572:	80 93 6b 18 	sts	0x186B, r24	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c576:	60 93 8e 18 	sts	0x188E, r22	; 0x80188e <_ZN7TwoWire9txAddressE>
   1c57a:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c57e:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c582:	08 95       	ret

0001c584 <_ZN7TwoWire15endTransmissionEh>:
   1c584:	0f 93       	push	r16
   1c586:	06 2f       	mov	r16, r22
   1c588:	21 e0       	ldi	r18, 0x01	; 1
   1c58a:	40 91 6c 18 	lds	r20, 0x186C	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c58e:	6e e6       	ldi	r22, 0x6E	; 110
   1c590:	78 e1       	ldi	r23, 0x18	; 24
   1c592:	80 91 8e 18 	lds	r24, 0x188E	; 0x80188e <_ZN7TwoWire9txAddressE>
   1c596:	5e d4       	rcall	.+2236   	; 0x1ce54 <twi_writeTo>
   1c598:	10 92 6d 18 	sts	0x186D, r1	; 0x80186d <_ZN7TwoWire13txBufferIndexE>
   1c59c:	10 92 6c 18 	sts	0x186C, r1	; 0x80186c <_ZN7TwoWire14txBufferLengthE>
   1c5a0:	10 92 6b 18 	sts	0x186B, r1	; 0x80186b <_ZN7TwoWire12transmittingE>
   1c5a4:	0f 91       	pop	r16
   1c5a6:	08 95       	ret

0001c5a8 <_ZN7TwoWire15endTransmissionEv>:
   1c5a8:	61 e0       	ldi	r22, 0x01	; 1
   1c5aa:	ec cf       	rjmp	.-40     	; 0x1c584 <_ZN7TwoWire15endTransmissionEh>

0001c5ac <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
   1c5ac:	8b e5       	ldi	r24, 0x5B	; 91
   1c5ae:	98 e1       	ldi	r25, 0x18	; 24
   1c5b0:	c0 cf       	rjmp	.-128    	; 0x1c532 <_ZN7TwoWireC1Ev>

0001c5b2 <__cxa_pure_virtual>:
   1c5b2:	0e 94 a5 ed 	call	0x1db4a	; 0x1db4a <abort>

0001c5b6 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
   1c5b6:	08 95       	ret

0001c5b8 <_ZdlPv>:
   1c5b8:	0c 94 80 ec 	jmp	0x1d900	; 0x1d900 <free>

0001c5bc <nothing>:
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
   1c5bc:	08 95       	ret

0001c5be <attachInterrupt>:
   1c5be:	88 30       	cpi	r24, 0x08	; 8
   1c5c0:	08 f0       	brcs	.+2      	; 0x1c5c4 <attachInterrupt+0x6>
   1c5c2:	70 c0       	rjmp	.+224    	; 0x1c6a4 <attachInterrupt+0xe6>
   1c5c4:	a8 2f       	mov	r26, r24
   1c5c6:	b0 e0       	ldi	r27, 0x00	; 0
   1c5c8:	aa 0f       	add	r26, r26
   1c5ca:	bb 1f       	adc	r27, r27
   1c5cc:	ae 5a       	subi	r26, 0xAE	; 174
   1c5ce:	bd 4f       	sbci	r27, 0xFD	; 253
   1c5d0:	11 96       	adiw	r26, 0x01	; 1
   1c5d2:	7c 93       	st	X, r23
   1c5d4:	6e 93       	st	-X, r22
   1c5d6:	90 e0       	ldi	r25, 0x00	; 0
   1c5d8:	fc 01       	movw	r30, r24
   1c5da:	31 97       	sbiw	r30, 0x01	; 1
   1c5dc:	e7 30       	cpi	r30, 0x07	; 7
   1c5de:	f1 05       	cpc	r31, r1
   1c5e0:	a0 f5       	brcc	.+104    	; 0x1c64a <attachInterrupt+0x8c>
   1c5e2:	88 27       	eor	r24, r24
   1c5e4:	ef 5e       	subi	r30, 0xEF	; 239
   1c5e6:	fe 4f       	sbci	r31, 0xFE	; 254
   1c5e8:	8f 4f       	sbci	r24, 0xFF	; 255
   1c5ea:	0c 94 bb eb 	jmp	0x1d776	; 0x1d776 <__tablejump2__>
   1c5ee:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c5f2:	8c 7f       	andi	r24, 0xFC	; 252
   1c5f4:	48 2b       	or	r20, r24
   1c5f6:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c5fa:	e8 9a       	sbi	0x1d, 0	; 29
   1c5fc:	08 95       	ret
   1c5fe:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c602:	83 7f       	andi	r24, 0xF3	; 243
   1c604:	44 0f       	add	r20, r20
   1c606:	55 1f       	adc	r21, r21
   1c608:	44 0f       	add	r20, r20
   1c60a:	55 1f       	adc	r21, r21
   1c60c:	48 2b       	or	r20, r24
   1c60e:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c612:	e9 9a       	sbi	0x1d, 1	; 29
   1c614:	08 95       	ret
   1c616:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c61a:	8f 7c       	andi	r24, 0xCF	; 207
   1c61c:	74 e0       	ldi	r23, 0x04	; 4
   1c61e:	44 0f       	add	r20, r20
   1c620:	55 1f       	adc	r21, r21
   1c622:	7a 95       	dec	r23
   1c624:	e1 f7       	brne	.-8      	; 0x1c61e <attachInterrupt+0x60>
   1c626:	48 2b       	or	r20, r24
   1c628:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c62c:	ea 9a       	sbi	0x1d, 2	; 29
   1c62e:	08 95       	ret
   1c630:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c634:	8f 73       	andi	r24, 0x3F	; 63
   1c636:	66 e0       	ldi	r22, 0x06	; 6
   1c638:	44 0f       	add	r20, r20
   1c63a:	55 1f       	adc	r21, r21
   1c63c:	6a 95       	dec	r22
   1c63e:	e1 f7       	brne	.-8      	; 0x1c638 <attachInterrupt+0x7a>
   1c640:	48 2b       	or	r20, r24
   1c642:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1c646:	eb 9a       	sbi	0x1d, 3	; 29
   1c648:	08 95       	ret
   1c64a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c64e:	8c 7f       	andi	r24, 0xFC	; 252
   1c650:	48 2b       	or	r20, r24
   1c652:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c656:	ec 9a       	sbi	0x1d, 4	; 29
   1c658:	08 95       	ret
   1c65a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c65e:	83 7f       	andi	r24, 0xF3	; 243
   1c660:	44 0f       	add	r20, r20
   1c662:	55 1f       	adc	r21, r21
   1c664:	44 0f       	add	r20, r20
   1c666:	55 1f       	adc	r21, r21
   1c668:	48 2b       	or	r20, r24
   1c66a:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c66e:	ed 9a       	sbi	0x1d, 5	; 29
   1c670:	08 95       	ret
   1c672:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c676:	8f 7c       	andi	r24, 0xCF	; 207
   1c678:	24 e0       	ldi	r18, 0x04	; 4
   1c67a:	44 0f       	add	r20, r20
   1c67c:	55 1f       	adc	r21, r21
   1c67e:	2a 95       	dec	r18
   1c680:	e1 f7       	brne	.-8      	; 0x1c67a <attachInterrupt+0xbc>
   1c682:	48 2b       	or	r20, r24
   1c684:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c688:	ee 9a       	sbi	0x1d, 6	; 29
   1c68a:	08 95       	ret
   1c68c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c690:	8f 73       	andi	r24, 0x3F	; 63
   1c692:	96 e0       	ldi	r25, 0x06	; 6
   1c694:	44 0f       	add	r20, r20
   1c696:	55 1f       	adc	r21, r21
   1c698:	9a 95       	dec	r25
   1c69a:	e1 f7       	brne	.-8      	; 0x1c694 <attachInterrupt+0xd6>
   1c69c:	48 2b       	or	r20, r24
   1c69e:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1c6a2:	ef 9a       	sbi	0x1d, 7	; 29
   1c6a4:	08 95       	ret

0001c6a6 <__vector_1>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)

#elif defined(EICRA) && defined(EICRB)

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_2)
   1c6a6:	1f 92       	push	r1
   1c6a8:	0f 92       	push	r0
   1c6aa:	0f b6       	in	r0, 0x3f	; 63
   1c6ac:	0f 92       	push	r0
   1c6ae:	11 24       	eor	r1, r1
   1c6b0:	0b b6       	in	r0, 0x3b	; 59
   1c6b2:	0f 92       	push	r0
   1c6b4:	2f 93       	push	r18
   1c6b6:	3f 93       	push	r19
   1c6b8:	4f 93       	push	r20
   1c6ba:	5f 93       	push	r21
   1c6bc:	6f 93       	push	r22
   1c6be:	7f 93       	push	r23
   1c6c0:	8f 93       	push	r24
   1c6c2:	9f 93       	push	r25
   1c6c4:	af 93       	push	r26
   1c6c6:	bf 93       	push	r27
   1c6c8:	ef 93       	push	r30
   1c6ca:	ff 93       	push	r31
   1c6cc:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <intFunc+0x4>
   1c6d0:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <intFunc+0x5>
   1c6d4:	19 95       	eicall
   1c6d6:	ff 91       	pop	r31
   1c6d8:	ef 91       	pop	r30
   1c6da:	bf 91       	pop	r27
   1c6dc:	af 91       	pop	r26
   1c6de:	9f 91       	pop	r25
   1c6e0:	8f 91       	pop	r24
   1c6e2:	7f 91       	pop	r23
   1c6e4:	6f 91       	pop	r22
   1c6e6:	5f 91       	pop	r21
   1c6e8:	4f 91       	pop	r20
   1c6ea:	3f 91       	pop	r19
   1c6ec:	2f 91       	pop	r18
   1c6ee:	0f 90       	pop	r0
   1c6f0:	0b be       	out	0x3b, r0	; 59
   1c6f2:	0f 90       	pop	r0
   1c6f4:	0f be       	out	0x3f, r0	; 63
   1c6f6:	0f 90       	pop	r0
   1c6f8:	1f 90       	pop	r1
   1c6fa:	18 95       	reti

0001c6fc <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_3)
   1c6fc:	1f 92       	push	r1
   1c6fe:	0f 92       	push	r0
   1c700:	0f b6       	in	r0, 0x3f	; 63
   1c702:	0f 92       	push	r0
   1c704:	11 24       	eor	r1, r1
   1c706:	0b b6       	in	r0, 0x3b	; 59
   1c708:	0f 92       	push	r0
   1c70a:	2f 93       	push	r18
   1c70c:	3f 93       	push	r19
   1c70e:	4f 93       	push	r20
   1c710:	5f 93       	push	r21
   1c712:	6f 93       	push	r22
   1c714:	7f 93       	push	r23
   1c716:	8f 93       	push	r24
   1c718:	9f 93       	push	r25
   1c71a:	af 93       	push	r26
   1c71c:	bf 93       	push	r27
   1c71e:	ef 93       	push	r30
   1c720:	ff 93       	push	r31
   1c722:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <intFunc+0x6>
   1c726:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <intFunc+0x7>
   1c72a:	19 95       	eicall
   1c72c:	ff 91       	pop	r31
   1c72e:	ef 91       	pop	r30
   1c730:	bf 91       	pop	r27
   1c732:	af 91       	pop	r26
   1c734:	9f 91       	pop	r25
   1c736:	8f 91       	pop	r24
   1c738:	7f 91       	pop	r23
   1c73a:	6f 91       	pop	r22
   1c73c:	5f 91       	pop	r21
   1c73e:	4f 91       	pop	r20
   1c740:	3f 91       	pop	r19
   1c742:	2f 91       	pop	r18
   1c744:	0f 90       	pop	r0
   1c746:	0b be       	out	0x3b, r0	; 59
   1c748:	0f 90       	pop	r0
   1c74a:	0f be       	out	0x3f, r0	; 63
   1c74c:	0f 90       	pop	r0
   1c74e:	1f 90       	pop	r1
   1c750:	18 95       	reti

0001c752 <__vector_3>:
IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_4)
   1c752:	1f 92       	push	r1
   1c754:	0f 92       	push	r0
   1c756:	0f b6       	in	r0, 0x3f	; 63
   1c758:	0f 92       	push	r0
   1c75a:	11 24       	eor	r1, r1
   1c75c:	0b b6       	in	r0, 0x3b	; 59
   1c75e:	0f 92       	push	r0
   1c760:	2f 93       	push	r18
   1c762:	3f 93       	push	r19
   1c764:	4f 93       	push	r20
   1c766:	5f 93       	push	r21
   1c768:	6f 93       	push	r22
   1c76a:	7f 93       	push	r23
   1c76c:	8f 93       	push	r24
   1c76e:	9f 93       	push	r25
   1c770:	af 93       	push	r26
   1c772:	bf 93       	push	r27
   1c774:	ef 93       	push	r30
   1c776:	ff 93       	push	r31
   1c778:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <intFunc+0x8>
   1c77c:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <intFunc+0x9>
   1c780:	19 95       	eicall
   1c782:	ff 91       	pop	r31
   1c784:	ef 91       	pop	r30
   1c786:	bf 91       	pop	r27
   1c788:	af 91       	pop	r26
   1c78a:	9f 91       	pop	r25
   1c78c:	8f 91       	pop	r24
   1c78e:	7f 91       	pop	r23
   1c790:	6f 91       	pop	r22
   1c792:	5f 91       	pop	r21
   1c794:	4f 91       	pop	r20
   1c796:	3f 91       	pop	r19
   1c798:	2f 91       	pop	r18
   1c79a:	0f 90       	pop	r0
   1c79c:	0b be       	out	0x3b, r0	; 59
   1c79e:	0f 90       	pop	r0
   1c7a0:	0f be       	out	0x3f, r0	; 63
   1c7a2:	0f 90       	pop	r0
   1c7a4:	1f 90       	pop	r1
   1c7a6:	18 95       	reti

0001c7a8 <__vector_4>:
IMPLEMENT_ISR(INT3_vect, EXTERNAL_INT_5)
   1c7a8:	1f 92       	push	r1
   1c7aa:	0f 92       	push	r0
   1c7ac:	0f b6       	in	r0, 0x3f	; 63
   1c7ae:	0f 92       	push	r0
   1c7b0:	11 24       	eor	r1, r1
   1c7b2:	0b b6       	in	r0, 0x3b	; 59
   1c7b4:	0f 92       	push	r0
   1c7b6:	2f 93       	push	r18
   1c7b8:	3f 93       	push	r19
   1c7ba:	4f 93       	push	r20
   1c7bc:	5f 93       	push	r21
   1c7be:	6f 93       	push	r22
   1c7c0:	7f 93       	push	r23
   1c7c2:	8f 93       	push	r24
   1c7c4:	9f 93       	push	r25
   1c7c6:	af 93       	push	r26
   1c7c8:	bf 93       	push	r27
   1c7ca:	ef 93       	push	r30
   1c7cc:	ff 93       	push	r31
   1c7ce:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <intFunc+0xa>
   1c7d2:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <intFunc+0xb>
   1c7d6:	19 95       	eicall
   1c7d8:	ff 91       	pop	r31
   1c7da:	ef 91       	pop	r30
   1c7dc:	bf 91       	pop	r27
   1c7de:	af 91       	pop	r26
   1c7e0:	9f 91       	pop	r25
   1c7e2:	8f 91       	pop	r24
   1c7e4:	7f 91       	pop	r23
   1c7e6:	6f 91       	pop	r22
   1c7e8:	5f 91       	pop	r21
   1c7ea:	4f 91       	pop	r20
   1c7ec:	3f 91       	pop	r19
   1c7ee:	2f 91       	pop	r18
   1c7f0:	0f 90       	pop	r0
   1c7f2:	0b be       	out	0x3b, r0	; 59
   1c7f4:	0f 90       	pop	r0
   1c7f6:	0f be       	out	0x3f, r0	; 63
   1c7f8:	0f 90       	pop	r0
   1c7fa:	1f 90       	pop	r1
   1c7fc:	18 95       	reti

0001c7fe <__vector_5>:
IMPLEMENT_ISR(INT4_vect, EXTERNAL_INT_0)
   1c7fe:	1f 92       	push	r1
   1c800:	0f 92       	push	r0
   1c802:	0f b6       	in	r0, 0x3f	; 63
   1c804:	0f 92       	push	r0
   1c806:	11 24       	eor	r1, r1
   1c808:	0b b6       	in	r0, 0x3b	; 59
   1c80a:	0f 92       	push	r0
   1c80c:	2f 93       	push	r18
   1c80e:	3f 93       	push	r19
   1c810:	4f 93       	push	r20
   1c812:	5f 93       	push	r21
   1c814:	6f 93       	push	r22
   1c816:	7f 93       	push	r23
   1c818:	8f 93       	push	r24
   1c81a:	9f 93       	push	r25
   1c81c:	af 93       	push	r26
   1c81e:	bf 93       	push	r27
   1c820:	ef 93       	push	r30
   1c822:	ff 93       	push	r31
   1c824:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <intFunc>
   1c828:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <intFunc+0x1>
   1c82c:	19 95       	eicall
   1c82e:	ff 91       	pop	r31
   1c830:	ef 91       	pop	r30
   1c832:	bf 91       	pop	r27
   1c834:	af 91       	pop	r26
   1c836:	9f 91       	pop	r25
   1c838:	8f 91       	pop	r24
   1c83a:	7f 91       	pop	r23
   1c83c:	6f 91       	pop	r22
   1c83e:	5f 91       	pop	r21
   1c840:	4f 91       	pop	r20
   1c842:	3f 91       	pop	r19
   1c844:	2f 91       	pop	r18
   1c846:	0f 90       	pop	r0
   1c848:	0b be       	out	0x3b, r0	; 59
   1c84a:	0f 90       	pop	r0
   1c84c:	0f be       	out	0x3f, r0	; 63
   1c84e:	0f 90       	pop	r0
   1c850:	1f 90       	pop	r1
   1c852:	18 95       	reti

0001c854 <__vector_6>:
IMPLEMENT_ISR(INT5_vect, EXTERNAL_INT_1)
   1c854:	1f 92       	push	r1
   1c856:	0f 92       	push	r0
   1c858:	0f b6       	in	r0, 0x3f	; 63
   1c85a:	0f 92       	push	r0
   1c85c:	11 24       	eor	r1, r1
   1c85e:	0b b6       	in	r0, 0x3b	; 59
   1c860:	0f 92       	push	r0
   1c862:	2f 93       	push	r18
   1c864:	3f 93       	push	r19
   1c866:	4f 93       	push	r20
   1c868:	5f 93       	push	r21
   1c86a:	6f 93       	push	r22
   1c86c:	7f 93       	push	r23
   1c86e:	8f 93       	push	r24
   1c870:	9f 93       	push	r25
   1c872:	af 93       	push	r26
   1c874:	bf 93       	push	r27
   1c876:	ef 93       	push	r30
   1c878:	ff 93       	push	r31
   1c87a:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <intFunc+0x2>
   1c87e:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <intFunc+0x3>
   1c882:	19 95       	eicall
   1c884:	ff 91       	pop	r31
   1c886:	ef 91       	pop	r30
   1c888:	bf 91       	pop	r27
   1c88a:	af 91       	pop	r26
   1c88c:	9f 91       	pop	r25
   1c88e:	8f 91       	pop	r24
   1c890:	7f 91       	pop	r23
   1c892:	6f 91       	pop	r22
   1c894:	5f 91       	pop	r21
   1c896:	4f 91       	pop	r20
   1c898:	3f 91       	pop	r19
   1c89a:	2f 91       	pop	r18
   1c89c:	0f 90       	pop	r0
   1c89e:	0b be       	out	0x3b, r0	; 59
   1c8a0:	0f 90       	pop	r0
   1c8a2:	0f be       	out	0x3f, r0	; 63
   1c8a4:	0f 90       	pop	r0
   1c8a6:	1f 90       	pop	r1
   1c8a8:	18 95       	reti

0001c8aa <__vector_7>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
   1c8aa:	1f 92       	push	r1
   1c8ac:	0f 92       	push	r0
   1c8ae:	0f b6       	in	r0, 0x3f	; 63
   1c8b0:	0f 92       	push	r0
   1c8b2:	11 24       	eor	r1, r1
   1c8b4:	0b b6       	in	r0, 0x3b	; 59
   1c8b6:	0f 92       	push	r0
   1c8b8:	2f 93       	push	r18
   1c8ba:	3f 93       	push	r19
   1c8bc:	4f 93       	push	r20
   1c8be:	5f 93       	push	r21
   1c8c0:	6f 93       	push	r22
   1c8c2:	7f 93       	push	r23
   1c8c4:	8f 93       	push	r24
   1c8c6:	9f 93       	push	r25
   1c8c8:	af 93       	push	r26
   1c8ca:	bf 93       	push	r27
   1c8cc:	ef 93       	push	r30
   1c8ce:	ff 93       	push	r31
   1c8d0:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <intFunc+0xc>
   1c8d4:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <intFunc+0xd>
   1c8d8:	19 95       	eicall
   1c8da:	ff 91       	pop	r31
   1c8dc:	ef 91       	pop	r30
   1c8de:	bf 91       	pop	r27
   1c8e0:	af 91       	pop	r26
   1c8e2:	9f 91       	pop	r25
   1c8e4:	8f 91       	pop	r24
   1c8e6:	7f 91       	pop	r23
   1c8e8:	6f 91       	pop	r22
   1c8ea:	5f 91       	pop	r21
   1c8ec:	4f 91       	pop	r20
   1c8ee:	3f 91       	pop	r19
   1c8f0:	2f 91       	pop	r18
   1c8f2:	0f 90       	pop	r0
   1c8f4:	0b be       	out	0x3b, r0	; 59
   1c8f6:	0f 90       	pop	r0
   1c8f8:	0f be       	out	0x3f, r0	; 63
   1c8fa:	0f 90       	pop	r0
   1c8fc:	1f 90       	pop	r1
   1c8fe:	18 95       	reti

0001c900 <__vector_8>:
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)
   1c900:	1f 92       	push	r1
   1c902:	0f 92       	push	r0
   1c904:	0f b6       	in	r0, 0x3f	; 63
   1c906:	0f 92       	push	r0
   1c908:	11 24       	eor	r1, r1
   1c90a:	0b b6       	in	r0, 0x3b	; 59
   1c90c:	0f 92       	push	r0
   1c90e:	2f 93       	push	r18
   1c910:	3f 93       	push	r19
   1c912:	4f 93       	push	r20
   1c914:	5f 93       	push	r21
   1c916:	6f 93       	push	r22
   1c918:	7f 93       	push	r23
   1c91a:	8f 93       	push	r24
   1c91c:	9f 93       	push	r25
   1c91e:	af 93       	push	r26
   1c920:	bf 93       	push	r27
   1c922:	ef 93       	push	r30
   1c924:	ff 93       	push	r31
   1c926:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <intFunc+0xe>
   1c92a:	f0 91 61 02 	lds	r31, 0x0261	; 0x800261 <intFunc+0xf>
   1c92e:	19 95       	eicall
   1c930:	ff 91       	pop	r31
   1c932:	ef 91       	pop	r30
   1c934:	bf 91       	pop	r27
   1c936:	af 91       	pop	r26
   1c938:	9f 91       	pop	r25
   1c93a:	8f 91       	pop	r24
   1c93c:	7f 91       	pop	r23
   1c93e:	6f 91       	pop	r22
   1c940:	5f 91       	pop	r21
   1c942:	4f 91       	pop	r20
   1c944:	3f 91       	pop	r19
   1c946:	2f 91       	pop	r18
   1c948:	0f 90       	pop	r0
   1c94a:	0b be       	out	0x3b, r0	; 59
   1c94c:	0f 90       	pop	r0
   1c94e:	0f be       	out	0x3f, r0	; 63
   1c950:	0f 90       	pop	r0
   1c952:	1f 90       	pop	r1
   1c954:	18 95       	reti

0001c956 <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
   1c956:	86 33       	cpi	r24, 0x36	; 54
   1c958:	08 f0       	brcs	.+2      	; 0x1c95c <analogRead+0x6>
   1c95a:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
   1c95c:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1c960:	28 2f       	mov	r18, r24
   1c962:	28 70       	andi	r18, 0x08	; 8
   1c964:	97 7f       	andi	r25, 0xF7	; 247
   1c966:	92 2b       	or	r25, r18
   1c968:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
   1c96c:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <analog_reference>
   1c970:	90 e4       	ldi	r25, 0x40	; 64
   1c972:	29 9f       	mul	r18, r25
   1c974:	90 01       	movw	r18, r0
   1c976:	11 24       	eor	r1, r1
   1c978:	87 70       	andi	r24, 0x07	; 7
   1c97a:	82 2b       	or	r24, r18
   1c97c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
   1c980:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c984:	80 64       	ori	r24, 0x40	; 64
   1c986:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
   1c98a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c98e:	86 fd       	sbrc	r24, 6
   1c990:	fc cf       	rjmp	.-8      	; 0x1c98a <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
   1c992:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	high = ADCH;
   1c996:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
   1c99a:	90 e0       	ldi	r25, 0x00	; 0
}
   1c99c:	92 2b       	or	r25, r18
   1c99e:	08 95       	ret

0001c9a0 <_Z6randoml>:
    srandom(seed);
  }
}

long random(long howbig)
{
   1c9a0:	cf 92       	push	r12
   1c9a2:	df 92       	push	r13
   1c9a4:	ef 92       	push	r14
   1c9a6:	ff 92       	push	r15
  if (howbig == 0) {
   1c9a8:	61 15       	cp	r22, r1
   1c9aa:	71 05       	cpc	r23, r1
   1c9ac:	81 05       	cpc	r24, r1
   1c9ae:	91 05       	cpc	r25, r1
   1c9b0:	41 f0       	breq	.+16     	; 0x1c9c2 <_Z6randoml+0x22>
   1c9b2:	6b 01       	movw	r12, r22
   1c9b4:	7c 01       	movw	r14, r24
    return 0;
  }
  return random() % howbig;
   1c9b6:	0e 94 51 ed 	call	0x1daa2	; 0x1daa2 <random>
   1c9ba:	a7 01       	movw	r20, r14
   1c9bc:	96 01       	movw	r18, r12
   1c9be:	bf d6       	rcall	.+3454   	; 0x1d73e <__divmodsi4>
   1c9c0:	03 c0       	rjmp	.+6      	; 0x1c9c8 <_Z6randoml+0x28>
}

long random(long howbig)
{
  if (howbig == 0) {
    return 0;
   1c9c2:	60 e0       	ldi	r22, 0x00	; 0
   1c9c4:	70 e0       	ldi	r23, 0x00	; 0
   1c9c6:	cb 01       	movw	r24, r22
  }
  return random() % howbig;
}
   1c9c8:	ff 90       	pop	r15
   1c9ca:	ef 90       	pop	r14
   1c9cc:	df 90       	pop	r13
   1c9ce:	cf 90       	pop	r12
   1c9d0:	08 95       	ret

0001c9d2 <_Z6randomll>:

long random(long howsmall, long howbig)
{
   1c9d2:	cf 92       	push	r12
   1c9d4:	df 92       	push	r13
   1c9d6:	ef 92       	push	r14
   1c9d8:	ff 92       	push	r15
   1c9da:	0f 93       	push	r16
   1c9dc:	1f 93       	push	r17
  if (howsmall >= howbig) {
   1c9de:	62 17       	cp	r22, r18
   1c9e0:	73 07       	cpc	r23, r19
   1c9e2:	84 07       	cpc	r24, r20
   1c9e4:	95 07       	cpc	r25, r21
   1c9e6:	7c f4       	brge	.+30     	; 0x1ca06 <_Z6randomll+0x34>
   1c9e8:	89 01       	movw	r16, r18
   1c9ea:	9a 01       	movw	r18, r20
   1c9ec:	6b 01       	movw	r12, r22
   1c9ee:	7c 01       	movw	r14, r24
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
   1c9f0:	c9 01       	movw	r24, r18
   1c9f2:	b8 01       	movw	r22, r16
   1c9f4:	6c 19       	sub	r22, r12
   1c9f6:	7d 09       	sbc	r23, r13
   1c9f8:	8e 09       	sbc	r24, r14
   1c9fa:	9f 09       	sbc	r25, r15
   1c9fc:	d1 df       	rcall	.-94     	; 0x1c9a0 <_Z6randoml>
   1c9fe:	6c 0d       	add	r22, r12
   1ca00:	7d 1d       	adc	r23, r13
   1ca02:	8e 1d       	adc	r24, r14
   1ca04:	9f 1d       	adc	r25, r15
}
   1ca06:	1f 91       	pop	r17
   1ca08:	0f 91       	pop	r16
   1ca0a:	ff 90       	pop	r15
   1ca0c:	ef 90       	pop	r14
   1ca0e:	df 90       	pop	r13
   1ca10:	cf 90       	pop	r12
   1ca12:	08 95       	ret

0001ca14 <_ZN12RHGenericSPI15attachInterruptEv>:
#endif

    /// SPI Configuration methods
    /// Enable SPI interrupts (if supported)
    /// This can be used in an SPI slave to indicate when an SPI message has been received
    virtual void attachInterrupt() {};
   1ca14:	08 95       	ret

0001ca16 <_ZN12RHGenericSPI15detachInterruptEv>:

    /// Disable SPI interrupts (if supported)
    /// This can be used to diable the SPI interrupt in slaves where that is supported.
    virtual void detachInterrupt() {};
   1ca16:	08 95       	ret

0001ca18 <_ZN12RHGenericSPI16beginTransactionEv>:
    /// Signal the start of an SPI transaction that must not be interrupted by other SPI actions
    /// In subclasses that support transactions this will ensure that other SPI transactions
    /// are blocked until this one is completed by endTransaction().
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void beginTransaction(){}
   1ca18:	08 95       	ret

0001ca1a <_ZN12RHGenericSPI14endTransactionEv>:

    /// Signal the end of an SPI transaction
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void endTransaction(){}
   1ca1a:	08 95       	ret

0001ca1c <_ZN12RHGenericSPI14usingInterruptEh>:
    /// Tells the SPI support software that SPI transactions will occur with the interrupt
    /// handler assocated with interruptNumber
    /// Base does nothing
    /// Might be overridden in subclass
    /// \param[in] interruptNumber The number of the interrupt
    virtual void usingInterrupt(uint8_t interruptNumber){
   1ca1c:	08 95       	ret

0001ca1e <_ZN12RHGenericSPI11setBitOrderENS_8BitOrderE>:
{
}

void RHGenericSPI::setBitOrder(BitOrder bitOrder)
{
    _bitOrder = bitOrder;
   1ca1e:	fc 01       	movw	r30, r24
   1ca20:	63 83       	std	Z+3, r22	; 0x03
   1ca22:	08 95       	ret

0001ca24 <_ZN12RHGenericSPI11setDataModeENS_8DataModeE>:
}

void RHGenericSPI::setDataMode(DataMode dataMode)
{
    _dataMode = dataMode; 
   1ca24:	fc 01       	movw	r30, r24
   1ca26:	64 83       	std	Z+4, r22	; 0x04
   1ca28:	08 95       	ret

0001ca2a <_ZN12RHGenericSPI12setFrequencyENS_9FrequencyE>:
}

void RHGenericSPI::setFrequency(Frequency frequency)
{
    _frequency = frequency;
   1ca2a:	fc 01       	movw	r30, r24
   1ca2c:	62 83       	std	Z+2, r22	; 0x02
   1ca2e:	08 95       	ret

0001ca30 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>:
// Contributed by Joanna Rutkowska
// $Id: RHGenericSPI.cpp,v 1.2 2014/04/12 05:26:05 mikem Exp $

#include <RHGenericSPI.h>

RHGenericSPI::RHGenericSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1ca30:	fc 01       	movw	r30, r24
    :
    _frequency(frequency),
    _bitOrder(bitOrder),
    _dataMode(dataMode)
   1ca32:	8b eb       	ldi	r24, 0xBB	; 187
   1ca34:	98 e0       	ldi	r25, 0x08	; 8
   1ca36:	91 83       	std	Z+1, r25	; 0x01
   1ca38:	80 83       	st	Z, r24
   1ca3a:	62 83       	std	Z+2, r22	; 0x02
   1ca3c:	43 83       	std	Z+3, r20	; 0x03
   1ca3e:	24 83       	std	Z+4, r18	; 0x04
   1ca40:	08 95       	ret

0001ca42 <_ZN11RHSPIDriver4initEv>:
    return status;
}

void RHSPIDriver::setSlaveSelectPin(uint8_t slaveSelectPin)
{
    _slaveSelectPin = slaveSelectPin;
   1ca42:	cf 93       	push	r28
   1ca44:	df 93       	push	r29
   1ca46:	ec 01       	movw	r28, r24
   1ca48:	88 8d       	ldd	r24, Y+24	; 0x18
   1ca4a:	99 8d       	ldd	r25, Y+25	; 0x19
   1ca4c:	dc 01       	movw	r26, r24
   1ca4e:	ed 91       	ld	r30, X+
   1ca50:	fc 91       	ld	r31, X
   1ca52:	06 80       	ldd	r0, Z+6	; 0x06
   1ca54:	f7 81       	ldd	r31, Z+7	; 0x07
   1ca56:	e0 2d       	mov	r30, r0
   1ca58:	19 95       	eicall
   1ca5a:	8a 8d       	ldd	r24, Y+26	; 0x1a
   1ca5c:	8f 3f       	cpi	r24, 0xFF	; 255
   1ca5e:	19 f0       	breq	.+6      	; 0x1ca66 <_ZN11RHSPIDriver4initEv+0x24>
   1ca60:	61 e0       	ldi	r22, 0x01	; 1
   1ca62:	0e 94 aa d8 	call	0x1b154	; 0x1b154 <pinMode>
   1ca66:	e8 81       	ld	r30, Y
   1ca68:	f9 81       	ldd	r31, Y+1	; 0x01
   1ca6a:	06 ac       	ldd	r0, Z+62	; 0x3e
   1ca6c:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1ca6e:	e0 2d       	mov	r30, r0
   1ca70:	ce 01       	movw	r24, r28
   1ca72:	19 95       	eicall
   1ca74:	64 e6       	ldi	r22, 0x64	; 100
   1ca76:	70 e0       	ldi	r23, 0x00	; 0
   1ca78:	80 e0       	ldi	r24, 0x00	; 0
   1ca7a:	90 e0       	ldi	r25, 0x00	; 0
   1ca7c:	0e 94 ad d7 	call	0x1af5a	; 0x1af5a <delay>
   1ca80:	81 e0       	ldi	r24, 0x01	; 1
   1ca82:	df 91       	pop	r29
   1ca84:	cf 91       	pop	r28
   1ca86:	08 95       	ret

0001ca88 <_ZN11RHSPIDriver11selectSlaveEv>:
   1ca88:	60 e0       	ldi	r22, 0x00	; 0
   1ca8a:	fc 01       	movw	r30, r24
   1ca8c:	82 8d       	ldd	r24, Z+26	; 0x1a
   1ca8e:	0c 94 e6 d8 	jmp	0x1b1cc	; 0x1b1cc <digitalWrite>

0001ca92 <_ZN11RHSPIDriver13deselectSlaveEv>:
   1ca92:	61 e0       	ldi	r22, 0x01	; 1
   1ca94:	fc 01       	movw	r30, r24
   1ca96:	82 8d       	ldd	r24, Z+26	; 0x1a
   1ca98:	0c 94 e6 d8 	jmp	0x1b1cc	; 0x1b1cc <digitalWrite>

0001ca9c <_ZN11RHSPIDriverC1EhR12RHGenericSPI>:
   1ca9c:	ef 92       	push	r14
   1ca9e:	ff 92       	push	r15
   1caa0:	1f 93       	push	r17
   1caa2:	cf 93       	push	r28
   1caa4:	df 93       	push	r29
   1caa6:	ec 01       	movw	r28, r24
   1caa8:	16 2f       	mov	r17, r22
   1caaa:	7a 01       	movw	r14, r20
   1caac:	0e 94 64 dc 	call	0x1b8c8	; 0x1b8c8 <_ZN15RHGenericDriverC1Ev>
   1cab0:	85 ed       	ldi	r24, 0xD5	; 213
   1cab2:	98 e0       	ldi	r25, 0x08	; 8
   1cab4:	99 83       	std	Y+1, r25	; 0x01
   1cab6:	88 83       	st	Y, r24
   1cab8:	f9 8e       	std	Y+25, r15	; 0x19
   1caba:	e8 8e       	std	Y+24, r14	; 0x18
   1cabc:	1a 8f       	std	Y+26, r17	; 0x1a
   1cabe:	df 91       	pop	r29
   1cac0:	cf 91       	pop	r28
   1cac2:	1f 91       	pop	r17
   1cac4:	ff 90       	pop	r15
   1cac6:	ef 90       	pop	r14
   1cac8:	08 95       	ret

0001caca <_ZN11RHSPIDriver7spiReadEh>:
   1caca:	0f 93       	push	r16
   1cacc:	1f 93       	push	r17
   1cace:	cf 93       	push	r28
   1cad0:	df 93       	push	r29
   1cad2:	ec 01       	movw	r28, r24
   1cad4:	16 2f       	mov	r17, r22
   1cad6:	0f b7       	in	r16, 0x3f	; 63
   1cad8:	f8 94       	cli
   1cada:	88 8d       	ldd	r24, Y+24	; 0x18
   1cadc:	99 8d       	ldd	r25, Y+25	; 0x19
   1cade:	dc 01       	movw	r26, r24
   1cae0:	ed 91       	ld	r30, X+
   1cae2:	fc 91       	ld	r31, X
   1cae4:	00 88       	ldd	r0, Z+16	; 0x10
   1cae6:	f1 89       	ldd	r31, Z+17	; 0x11
   1cae8:	e0 2d       	mov	r30, r0
   1caea:	19 95       	eicall
   1caec:	e8 81       	ld	r30, Y
   1caee:	f9 81       	ldd	r31, Y+1	; 0x01
   1caf0:	04 ac       	ldd	r0, Z+60	; 0x3c
   1caf2:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1caf4:	e0 2d       	mov	r30, r0
   1caf6:	ce 01       	movw	r24, r28
   1caf8:	19 95       	eicall
   1cafa:	88 8d       	ldd	r24, Y+24	; 0x18
   1cafc:	99 8d       	ldd	r25, Y+25	; 0x19
   1cafe:	61 2f       	mov	r22, r17
   1cb00:	6f 77       	andi	r22, 0x7F	; 127
   1cb02:	dc 01       	movw	r26, r24
   1cb04:	ed 91       	ld	r30, X+
   1cb06:	fc 91       	ld	r31, X
   1cb08:	01 90       	ld	r0, Z+
   1cb0a:	f0 81       	ld	r31, Z
   1cb0c:	e0 2d       	mov	r30, r0
   1cb0e:	19 95       	eicall
   1cb10:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb12:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb14:	dc 01       	movw	r26, r24
   1cb16:	ed 91       	ld	r30, X+
   1cb18:	fc 91       	ld	r31, X
   1cb1a:	01 90       	ld	r0, Z+
   1cb1c:	f0 81       	ld	r31, Z
   1cb1e:	e0 2d       	mov	r30, r0
   1cb20:	60 e0       	ldi	r22, 0x00	; 0
   1cb22:	19 95       	eicall
   1cb24:	18 2f       	mov	r17, r24
   1cb26:	e8 81       	ld	r30, Y
   1cb28:	f9 81       	ldd	r31, Y+1	; 0x01
   1cb2a:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cb2c:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cb2e:	e0 2d       	mov	r30, r0
   1cb30:	ce 01       	movw	r24, r28
   1cb32:	19 95       	eicall
   1cb34:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb36:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb38:	dc 01       	movw	r26, r24
   1cb3a:	ed 91       	ld	r30, X+
   1cb3c:	fc 91       	ld	r31, X
   1cb3e:	02 88       	ldd	r0, Z+18	; 0x12
   1cb40:	f3 89       	ldd	r31, Z+19	; 0x13
   1cb42:	e0 2d       	mov	r30, r0
   1cb44:	19 95       	eicall
   1cb46:	0f bf       	out	0x3f, r16	; 63
   1cb48:	81 2f       	mov	r24, r17
   1cb4a:	df 91       	pop	r29
   1cb4c:	cf 91       	pop	r28
   1cb4e:	1f 91       	pop	r17
   1cb50:	0f 91       	pop	r16
   1cb52:	08 95       	ret

0001cb54 <_ZN11RHSPIDriver8spiWriteEhh>:
   1cb54:	ff 92       	push	r15
   1cb56:	0f 93       	push	r16
   1cb58:	1f 93       	push	r17
   1cb5a:	cf 93       	push	r28
   1cb5c:	df 93       	push	r29
   1cb5e:	ec 01       	movw	r28, r24
   1cb60:	16 2f       	mov	r17, r22
   1cb62:	f4 2e       	mov	r15, r20
   1cb64:	0f b7       	in	r16, 0x3f	; 63
   1cb66:	f8 94       	cli
   1cb68:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb6a:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb6c:	dc 01       	movw	r26, r24
   1cb6e:	ed 91       	ld	r30, X+
   1cb70:	fc 91       	ld	r31, X
   1cb72:	00 88       	ldd	r0, Z+16	; 0x10
   1cb74:	f1 89       	ldd	r31, Z+17	; 0x11
   1cb76:	e0 2d       	mov	r30, r0
   1cb78:	19 95       	eicall
   1cb7a:	e8 81       	ld	r30, Y
   1cb7c:	f9 81       	ldd	r31, Y+1	; 0x01
   1cb7e:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cb80:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cb82:	e0 2d       	mov	r30, r0
   1cb84:	ce 01       	movw	r24, r28
   1cb86:	19 95       	eicall
   1cb88:	88 8d       	ldd	r24, Y+24	; 0x18
   1cb8a:	99 8d       	ldd	r25, Y+25	; 0x19
   1cb8c:	61 2f       	mov	r22, r17
   1cb8e:	60 68       	ori	r22, 0x80	; 128
   1cb90:	dc 01       	movw	r26, r24
   1cb92:	ed 91       	ld	r30, X+
   1cb94:	fc 91       	ld	r31, X
   1cb96:	01 90       	ld	r0, Z+
   1cb98:	f0 81       	ld	r31, Z
   1cb9a:	e0 2d       	mov	r30, r0
   1cb9c:	19 95       	eicall
   1cb9e:	18 2f       	mov	r17, r24
   1cba0:	88 8d       	ldd	r24, Y+24	; 0x18
   1cba2:	99 8d       	ldd	r25, Y+25	; 0x19
   1cba4:	dc 01       	movw	r26, r24
   1cba6:	ed 91       	ld	r30, X+
   1cba8:	fc 91       	ld	r31, X
   1cbaa:	01 90       	ld	r0, Z+
   1cbac:	f0 81       	ld	r31, Z
   1cbae:	e0 2d       	mov	r30, r0
   1cbb0:	6f 2d       	mov	r22, r15
   1cbb2:	19 95       	eicall
   1cbb4:	e8 81       	ld	r30, Y
   1cbb6:	f9 81       	ldd	r31, Y+1	; 0x01
   1cbb8:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cbba:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cbbc:	e0 2d       	mov	r30, r0
   1cbbe:	ce 01       	movw	r24, r28
   1cbc0:	19 95       	eicall
   1cbc2:	88 8d       	ldd	r24, Y+24	; 0x18
   1cbc4:	99 8d       	ldd	r25, Y+25	; 0x19
   1cbc6:	dc 01       	movw	r26, r24
   1cbc8:	ed 91       	ld	r30, X+
   1cbca:	fc 91       	ld	r31, X
   1cbcc:	02 88       	ldd	r0, Z+18	; 0x12
   1cbce:	f3 89       	ldd	r31, Z+19	; 0x13
   1cbd0:	e0 2d       	mov	r30, r0
   1cbd2:	19 95       	eicall
   1cbd4:	0f bf       	out	0x3f, r16	; 63
   1cbd6:	81 2f       	mov	r24, r17
   1cbd8:	df 91       	pop	r29
   1cbda:	cf 91       	pop	r28
   1cbdc:	1f 91       	pop	r17
   1cbde:	0f 91       	pop	r16
   1cbe0:	ff 90       	pop	r15
   1cbe2:	08 95       	ret

0001cbe4 <_ZN11RHSPIDriver12spiBurstReadEhPhh>:
   1cbe4:	bf 92       	push	r11
   1cbe6:	cf 92       	push	r12
   1cbe8:	df 92       	push	r13
   1cbea:	ef 92       	push	r14
   1cbec:	ff 92       	push	r15
   1cbee:	0f 93       	push	r16
   1cbf0:	1f 93       	push	r17
   1cbf2:	cf 93       	push	r28
   1cbf4:	df 93       	push	r29
   1cbf6:	ec 01       	movw	r28, r24
   1cbf8:	06 2f       	mov	r16, r22
   1cbfa:	b4 2e       	mov	r11, r20
   1cbfc:	c5 2e       	mov	r12, r21
   1cbfe:	12 2f       	mov	r17, r18
   1cc00:	df b6       	in	r13, 0x3f	; 63
   1cc02:	f8 94       	cli
   1cc04:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc06:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc08:	dc 01       	movw	r26, r24
   1cc0a:	ed 91       	ld	r30, X+
   1cc0c:	fc 91       	ld	r31, X
   1cc0e:	00 88       	ldd	r0, Z+16	; 0x10
   1cc10:	f1 89       	ldd	r31, Z+17	; 0x11
   1cc12:	e0 2d       	mov	r30, r0
   1cc14:	19 95       	eicall
   1cc16:	e8 81       	ld	r30, Y
   1cc18:	f9 81       	ldd	r31, Y+1	; 0x01
   1cc1a:	04 ac       	ldd	r0, Z+60	; 0x3c
   1cc1c:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1cc1e:	e0 2d       	mov	r30, r0
   1cc20:	ce 01       	movw	r24, r28
   1cc22:	19 95       	eicall
   1cc24:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc26:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc28:	60 2f       	mov	r22, r16
   1cc2a:	6f 77       	andi	r22, 0x7F	; 127
   1cc2c:	dc 01       	movw	r26, r24
   1cc2e:	ed 91       	ld	r30, X+
   1cc30:	fc 91       	ld	r31, X
   1cc32:	01 90       	ld	r0, Z+
   1cc34:	f0 81       	ld	r31, Z
   1cc36:	e0 2d       	mov	r30, r0
   1cc38:	19 95       	eicall
   1cc3a:	08 2f       	mov	r16, r24
   1cc3c:	eb 2c       	mov	r14, r11
   1cc3e:	fc 2c       	mov	r15, r12
   1cc40:	11 23       	and	r17, r17
   1cc42:	79 f0       	breq	.+30     	; 0x1cc62 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x7e>
   1cc44:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc46:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc48:	dc 01       	movw	r26, r24
   1cc4a:	ed 91       	ld	r30, X+
   1cc4c:	fc 91       	ld	r31, X
   1cc4e:	01 90       	ld	r0, Z+
   1cc50:	f0 81       	ld	r31, Z
   1cc52:	e0 2d       	mov	r30, r0
   1cc54:	60 e0       	ldi	r22, 0x00	; 0
   1cc56:	19 95       	eicall
   1cc58:	f7 01       	movw	r30, r14
   1cc5a:	81 93       	st	Z+, r24
   1cc5c:	7f 01       	movw	r14, r30
   1cc5e:	11 50       	subi	r17, 0x01	; 1
   1cc60:	ef cf       	rjmp	.-34     	; 0x1cc40 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x5c>
   1cc62:	e8 81       	ld	r30, Y
   1cc64:	f9 81       	ldd	r31, Y+1	; 0x01
   1cc66:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cc68:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cc6a:	e0 2d       	mov	r30, r0
   1cc6c:	ce 01       	movw	r24, r28
   1cc6e:	19 95       	eicall
   1cc70:	88 8d       	ldd	r24, Y+24	; 0x18
   1cc72:	99 8d       	ldd	r25, Y+25	; 0x19
   1cc74:	dc 01       	movw	r26, r24
   1cc76:	ed 91       	ld	r30, X+
   1cc78:	fc 91       	ld	r31, X
   1cc7a:	02 88       	ldd	r0, Z+18	; 0x12
   1cc7c:	f3 89       	ldd	r31, Z+19	; 0x13
   1cc7e:	e0 2d       	mov	r30, r0
   1cc80:	19 95       	eicall
   1cc82:	df be       	out	0x3f, r13	; 63
   1cc84:	80 2f       	mov	r24, r16
   1cc86:	df 91       	pop	r29
   1cc88:	cf 91       	pop	r28
   1cc8a:	1f 91       	pop	r17
   1cc8c:	0f 91       	pop	r16
   1cc8e:	ff 90       	pop	r15
   1cc90:	ef 90       	pop	r14
   1cc92:	df 90       	pop	r13
   1cc94:	cf 90       	pop	r12
   1cc96:	bf 90       	pop	r11
   1cc98:	08 95       	ret

0001cc9a <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>:
   1cc9a:	bf 92       	push	r11
   1cc9c:	cf 92       	push	r12
   1cc9e:	df 92       	push	r13
   1cca0:	ef 92       	push	r14
   1cca2:	ff 92       	push	r15
   1cca4:	0f 93       	push	r16
   1cca6:	1f 93       	push	r17
   1cca8:	cf 93       	push	r28
   1ccaa:	df 93       	push	r29
   1ccac:	ec 01       	movw	r28, r24
   1ccae:	06 2f       	mov	r16, r22
   1ccb0:	b4 2e       	mov	r11, r20
   1ccb2:	c5 2e       	mov	r12, r21
   1ccb4:	12 2f       	mov	r17, r18
   1ccb6:	df b6       	in	r13, 0x3f	; 63
   1ccb8:	f8 94       	cli
   1ccba:	88 8d       	ldd	r24, Y+24	; 0x18
   1ccbc:	99 8d       	ldd	r25, Y+25	; 0x19
   1ccbe:	dc 01       	movw	r26, r24
   1ccc0:	ed 91       	ld	r30, X+
   1ccc2:	fc 91       	ld	r31, X
   1ccc4:	00 88       	ldd	r0, Z+16	; 0x10
   1ccc6:	f1 89       	ldd	r31, Z+17	; 0x11
   1ccc8:	e0 2d       	mov	r30, r0
   1ccca:	19 95       	eicall
   1cccc:	e8 81       	ld	r30, Y
   1ccce:	f9 81       	ldd	r31, Y+1	; 0x01
   1ccd0:	04 ac       	ldd	r0, Z+60	; 0x3c
   1ccd2:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1ccd4:	e0 2d       	mov	r30, r0
   1ccd6:	ce 01       	movw	r24, r28
   1ccd8:	19 95       	eicall
   1ccda:	88 8d       	ldd	r24, Y+24	; 0x18
   1ccdc:	99 8d       	ldd	r25, Y+25	; 0x19
   1ccde:	60 2f       	mov	r22, r16
   1cce0:	60 68       	ori	r22, 0x80	; 128
   1cce2:	dc 01       	movw	r26, r24
   1cce4:	ed 91       	ld	r30, X+
   1cce6:	fc 91       	ld	r31, X
   1cce8:	01 90       	ld	r0, Z+
   1ccea:	f0 81       	ld	r31, Z
   1ccec:	e0 2d       	mov	r30, r0
   1ccee:	19 95       	eicall
   1ccf0:	08 2f       	mov	r16, r24
   1ccf2:	eb 2c       	mov	r14, r11
   1ccf4:	fc 2c       	mov	r15, r12
   1ccf6:	11 23       	and	r17, r17
   1ccf8:	71 f0       	breq	.+28     	; 0x1cd16 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x7c>
   1ccfa:	88 8d       	ldd	r24, Y+24	; 0x18
   1ccfc:	99 8d       	ldd	r25, Y+25	; 0x19
   1ccfe:	f7 01       	movw	r30, r14
   1cd00:	61 91       	ld	r22, Z+
   1cd02:	7f 01       	movw	r14, r30
   1cd04:	dc 01       	movw	r26, r24
   1cd06:	ed 91       	ld	r30, X+
   1cd08:	fc 91       	ld	r31, X
   1cd0a:	01 90       	ld	r0, Z+
   1cd0c:	f0 81       	ld	r31, Z
   1cd0e:	e0 2d       	mov	r30, r0
   1cd10:	19 95       	eicall
   1cd12:	11 50       	subi	r17, 0x01	; 1
   1cd14:	f0 cf       	rjmp	.-32     	; 0x1ccf6 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x5c>
   1cd16:	e8 81       	ld	r30, Y
   1cd18:	f9 81       	ldd	r31, Y+1	; 0x01
   1cd1a:	06 ac       	ldd	r0, Z+62	; 0x3e
   1cd1c:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1cd1e:	e0 2d       	mov	r30, r0
   1cd20:	ce 01       	movw	r24, r28
   1cd22:	19 95       	eicall
   1cd24:	88 8d       	ldd	r24, Y+24	; 0x18
   1cd26:	99 8d       	ldd	r25, Y+25	; 0x19
   1cd28:	dc 01       	movw	r26, r24
   1cd2a:	ed 91       	ld	r30, X+
   1cd2c:	fc 91       	ld	r31, X
   1cd2e:	02 88       	ldd	r0, Z+18	; 0x12
   1cd30:	f3 89       	ldd	r31, Z+19	; 0x13
   1cd32:	e0 2d       	mov	r30, r0
   1cd34:	19 95       	eicall
   1cd36:	df be       	out	0x3f, r13	; 63
   1cd38:	80 2f       	mov	r24, r16
   1cd3a:	df 91       	pop	r29
   1cd3c:	cf 91       	pop	r28
   1cd3e:	1f 91       	pop	r17
   1cd40:	0f 91       	pop	r16
   1cd42:	ff 90       	pop	r15
   1cd44:	ef 90       	pop	r14
   1cd46:	df 90       	pop	r13
   1cd48:	cf 90       	pop	r12
   1cd4a:	bf 90       	pop	r11
   1cd4c:	08 95       	ret

0001cd4e <_ZN11RHSPIDriver17spiUsingInterruptEh>:
}

void RHSPIDriver::spiUsingInterrupt(uint8_t interruptNumber)
{
    _spi.usingInterrupt(interruptNumber);
   1cd4e:	dc 01       	movw	r26, r24
   1cd50:	58 96       	adiw	r26, 0x18	; 24
   1cd52:	8d 91       	ld	r24, X+
   1cd54:	9c 91       	ld	r25, X
   1cd56:	59 97       	sbiw	r26, 0x19	; 25
   1cd58:	dc 01       	movw	r26, r24
   1cd5a:	ed 91       	ld	r30, X+
   1cd5c:	fc 91       	ld	r31, X
   1cd5e:	04 88       	ldd	r0, Z+20	; 0x14
   1cd60:	f5 89       	ldd	r31, Z+21	; 0x15
   1cd62:	e0 2d       	mov	r30, r0
   1cd64:	19 94       	eijmp

0001cd66 <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
   1cd66:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1cd6a:	81 e0       	ldi	r24, 0x01	; 1
   1cd6c:	80 93 22 19 	sts	0x1922, r24	; 0x801922 <twi_sendStop>
   1cd70:	10 92 21 19 	sts	0x1921, r1	; 0x801921 <twi_inRepStart>
   1cd74:	61 e0       	ldi	r22, 0x01	; 1
   1cd76:	84 e1       	ldi	r24, 0x14	; 20
   1cd78:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1cd7c:	61 e0       	ldi	r22, 0x01	; 1
   1cd7e:	85 e1       	ldi	r24, 0x15	; 21
   1cd80:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1cd84:	e9 eb       	ldi	r30, 0xB9	; 185
   1cd86:	f0 e0       	ldi	r31, 0x00	; 0
   1cd88:	80 81       	ld	r24, Z
   1cd8a:	8e 7f       	andi	r24, 0xFE	; 254
   1cd8c:	80 83       	st	Z, r24
   1cd8e:	80 81       	ld	r24, Z
   1cd90:	8d 7f       	andi	r24, 0xFD	; 253
   1cd92:	80 83       	st	Z, r24
   1cd94:	88 e4       	ldi	r24, 0x48	; 72
   1cd96:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1cd9a:	85 e4       	ldi	r24, 0x45	; 69
   1cd9c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cda0:	08 95       	ret

0001cda2 <twi_disable>:
   1cda2:	ec eb       	ldi	r30, 0xBC	; 188
   1cda4:	f0 e0       	ldi	r31, 0x00	; 0
   1cda6:	80 81       	ld	r24, Z
   1cda8:	8a 7b       	andi	r24, 0xBA	; 186
   1cdaa:	80 83       	st	Z, r24
   1cdac:	60 e0       	ldi	r22, 0x00	; 0
   1cdae:	84 e1       	ldi	r24, 0x14	; 20
   1cdb0:	0e 94 e6 d8 	call	0x1b1cc	; 0x1b1cc <digitalWrite>
   1cdb4:	60 e0       	ldi	r22, 0x00	; 0
   1cdb6:	85 e1       	ldi	r24, 0x15	; 21
   1cdb8:	0c 94 e6 d8 	jmp	0x1b1cc	; 0x1b1cc <digitalWrite>

0001cdbc <twi_transmit>:
   1cdbc:	40 91 d3 18 	lds	r20, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1cdc0:	26 2f       	mov	r18, r22
   1cdc2:	30 e0       	ldi	r19, 0x00	; 0
   1cdc4:	24 0f       	add	r18, r20
   1cdc6:	31 1d       	adc	r19, r1
   1cdc8:	21 32       	cpi	r18, 0x21	; 33
   1cdca:	31 05       	cpc	r19, r1
   1cdcc:	dc f4       	brge	.+54     	; 0x1ce04 <twi_transmit+0x48>
   1cdce:	20 91 24 19 	lds	r18, 0x1924	; 0x801924 <twi_state>
   1cdd2:	24 30       	cpi	r18, 0x04	; 4
   1cdd4:	c9 f4       	brne	.+50     	; 0x1ce08 <twi_transmit+0x4c>
   1cdd6:	fc 01       	movw	r30, r24
   1cdd8:	80 e0       	ldi	r24, 0x00	; 0
   1cdda:	90 e0       	ldi	r25, 0x00	; 0
   1cddc:	86 17       	cp	r24, r22
   1cdde:	58 f4       	brcc	.+22     	; 0x1cdf6 <twi_transmit+0x3a>
   1cde0:	30 91 d3 18 	lds	r19, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1cde4:	21 91       	ld	r18, Z+
   1cde6:	dc 01       	movw	r26, r24
   1cde8:	ab 52       	subi	r26, 0x2B	; 43
   1cdea:	b7 4e       	sbci	r27, 0xE7	; 231
   1cdec:	a3 0f       	add	r26, r19
   1cdee:	b1 1d       	adc	r27, r1
   1cdf0:	2c 93       	st	X, r18
   1cdf2:	01 96       	adiw	r24, 0x01	; 1
   1cdf4:	f3 cf       	rjmp	.-26     	; 0x1cddc <twi_transmit+0x20>
   1cdf6:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1cdfa:	68 0f       	add	r22, r24
   1cdfc:	60 93 d3 18 	sts	0x18D3, r22	; 0x8018d3 <twi_txBufferLength>
   1ce00:	80 e0       	ldi	r24, 0x00	; 0
   1ce02:	08 95       	ret
   1ce04:	81 e0       	ldi	r24, 0x01	; 1
   1ce06:	08 95       	ret
   1ce08:	82 e0       	ldi	r24, 0x02	; 2
   1ce0a:	08 95       	ret

0001ce0c <twi_attachSlaveRxEvent>:
   1ce0c:	90 93 18 19 	sts	0x1918, r25	; 0x801918 <twi_onSlaveReceive+0x1>
   1ce10:	80 93 17 19 	sts	0x1917, r24	; 0x801917 <twi_onSlaveReceive>
   1ce14:	08 95       	ret

0001ce16 <twi_attachSlaveTxEvent>:
   1ce16:	90 93 1a 19 	sts	0x191A, r25	; 0x80191a <twi_onSlaveTransmit+0x1>
   1ce1a:	80 93 19 19 	sts	0x1919, r24	; 0x801919 <twi_onSlaveTransmit>
   1ce1e:	08 95       	ret

0001ce20 <twi_releaseBus>:
   1ce20:	85 ec       	ldi	r24, 0xC5	; 197
   1ce22:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ce26:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1ce2a:	08 95       	ret

0001ce2c <twi_handleTimeout>:
   1ce2c:	cf 93       	push	r28
   1ce2e:	df 93       	push	r29
   1ce30:	91 e0       	ldi	r25, 0x01	; 1
   1ce32:	90 93 1c 19 	sts	0x191C, r25	; 0x80191c <twi_timed_out_flag>
   1ce36:	88 23       	and	r24, r24
   1ce38:	51 f0       	breq	.+20     	; 0x1ce4e <twi_handleTimeout+0x22>
   1ce3a:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1ce3e:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1ce42:	af df       	rcall	.-162    	; 0x1cda2 <twi_disable>
   1ce44:	90 df       	rcall	.-224    	; 0x1cd66 <twi_init>
   1ce46:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1ce4a:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1ce4e:	df 91       	pop	r29
   1ce50:	cf 91       	pop	r28
   1ce52:	08 95       	ret

0001ce54 <twi_writeTo>:
   1ce54:	4f 92       	push	r4
   1ce56:	5f 92       	push	r5
   1ce58:	6f 92       	push	r6
   1ce5a:	7f 92       	push	r7
   1ce5c:	8f 92       	push	r8
   1ce5e:	9f 92       	push	r9
   1ce60:	af 92       	push	r10
   1ce62:	bf 92       	push	r11
   1ce64:	cf 92       	push	r12
   1ce66:	df 92       	push	r13
   1ce68:	ef 92       	push	r14
   1ce6a:	ff 92       	push	r15
   1ce6c:	0f 93       	push	r16
   1ce6e:	1f 93       	push	r17
   1ce70:	cf 93       	push	r28
   1ce72:	df 93       	push	r29
   1ce74:	41 32       	cpi	r20, 0x21	; 33
   1ce76:	08 f0       	brcs	.+2      	; 0x1ce7a <twi_writeTo+0x26>
   1ce78:	c5 c0       	rjmp	.+394    	; 0x1d004 <twi_writeTo+0x1b0>
   1ce7a:	12 2f       	mov	r17, r18
   1ce7c:	f4 2e       	mov	r15, r20
   1ce7e:	d7 2e       	mov	r13, r23
   1ce80:	e6 2e       	mov	r14, r22
   1ce82:	d8 2f       	mov	r29, r24
   1ce84:	0e 94 88 d7 	call	0x1af10	; 0x1af10 <micros>
   1ce88:	4b 01       	movw	r8, r22
   1ce8a:	5c 01       	movw	r10, r24
   1ce8c:	c0 91 24 19 	lds	r28, 0x1924	; 0x801924 <twi_state>
   1ce90:	cc 23       	and	r28, r28
   1ce92:	11 f1       	breq	.+68     	; 0x1ced8 <twi_writeTo+0x84>
   1ce94:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1ce98:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1ce9c:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cea0:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cea4:	89 2b       	or	r24, r25
   1cea6:	8a 2b       	or	r24, r26
   1cea8:	8b 2b       	or	r24, r27
   1ceaa:	81 f3       	breq	.-32     	; 0x1ce8c <twi_writeTo+0x38>
   1ceac:	0e 94 88 d7 	call	0x1af10	; 0x1af10 <micros>
   1ceb0:	40 90 1d 19 	lds	r4, 0x191D	; 0x80191d <twi_timeout_us>
   1ceb4:	50 90 1e 19 	lds	r5, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1ceb8:	60 90 1f 19 	lds	r6, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cebc:	70 90 20 19 	lds	r7, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cec0:	dc 01       	movw	r26, r24
   1cec2:	cb 01       	movw	r24, r22
   1cec4:	88 19       	sub	r24, r8
   1cec6:	99 09       	sbc	r25, r9
   1cec8:	aa 09       	sbc	r26, r10
   1ceca:	bb 09       	sbc	r27, r11
   1cecc:	48 16       	cp	r4, r24
   1cece:	59 06       	cpc	r5, r25
   1ced0:	6a 06       	cpc	r6, r26
   1ced2:	7b 06       	cpc	r7, r27
   1ced4:	d8 f6       	brcc	.-74     	; 0x1ce8c <twi_writeTo+0x38>
   1ced6:	83 c0       	rjmp	.+262    	; 0x1cfde <twi_writeTo+0x18a>
   1ced8:	82 e0       	ldi	r24, 0x02	; 2
   1ceda:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
   1cede:	00 93 22 19 	sts	0x1922, r16	; 0x801922 <twi_sendStop>
   1cee2:	8f ef       	ldi	r24, 0xFF	; 255
   1cee4:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
   1cee8:	10 92 f6 18 	sts	0x18F6, r1	; 0x8018f6 <twi_masterBufferIndex>
   1ceec:	f0 92 f5 18 	sts	0x18F5, r15	; 0x8018f5 <twi_masterBufferLength>
   1cef0:	9e 2d       	mov	r25, r14
   1cef2:	a7 ef       	ldi	r26, 0xF7	; 247
   1cef4:	b8 e1       	ldi	r27, 0x18	; 24
   1cef6:	ee 2d       	mov	r30, r14
   1cef8:	fd 2d       	mov	r31, r13
   1cefa:	8e 2f       	mov	r24, r30
   1cefc:	89 1b       	sub	r24, r25
   1cefe:	8f 15       	cp	r24, r15
   1cf00:	18 f4       	brcc	.+6      	; 0x1cf08 <twi_writeTo+0xb4>
   1cf02:	81 91       	ld	r24, Z+
   1cf04:	8d 93       	st	X+, r24
   1cf06:	f9 cf       	rjmp	.-14     	; 0x1cefa <twi_writeTo+0xa6>
   1cf08:	10 92 23 19 	sts	0x1923, r1	; 0x801923 <twi_slarw>
   1cf0c:	90 91 23 19 	lds	r25, 0x1923	; 0x801923 <twi_slarw>
   1cf10:	dd 0f       	add	r29, r29
   1cf12:	d9 2b       	or	r29, r25
   1cf14:	d0 93 23 19 	sts	0x1923, r29	; 0x801923 <twi_slarw>
   1cf18:	80 91 21 19 	lds	r24, 0x1921	; 0x801921 <twi_inRepStart>
   1cf1c:	81 30       	cpi	r24, 0x01	; 1
   1cf1e:	89 f5       	brne	.+98     	; 0x1cf82 <twi_writeTo+0x12e>
   1cf20:	10 92 21 19 	sts	0x1921, r1	; 0x801921 <twi_inRepStart>
   1cf24:	0e 94 88 d7 	call	0x1af10	; 0x1af10 <micros>
   1cf28:	6b 01       	movw	r12, r22
   1cf2a:	7c 01       	movw	r14, r24
   1cf2c:	80 91 23 19 	lds	r24, 0x1923	; 0x801923 <twi_slarw>
   1cf30:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1cf34:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1cf38:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cf3c:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cf40:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cf44:	89 2b       	or	r24, r25
   1cf46:	8a 2b       	or	r24, r26
   1cf48:	8b 2b       	or	r24, r27
   1cf4a:	a9 f0       	breq	.+42     	; 0x1cf76 <twi_writeTo+0x122>
   1cf4c:	0e 94 88 d7 	call	0x1af10	; 0x1af10 <micros>
   1cf50:	80 90 1d 19 	lds	r8, 0x191D	; 0x80191d <twi_timeout_us>
   1cf54:	90 90 1e 19 	lds	r9, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cf58:	a0 90 1f 19 	lds	r10, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cf5c:	b0 90 20 19 	lds	r11, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cf60:	dc 01       	movw	r26, r24
   1cf62:	cb 01       	movw	r24, r22
   1cf64:	8c 19       	sub	r24, r12
   1cf66:	9d 09       	sbc	r25, r13
   1cf68:	ae 09       	sbc	r26, r14
   1cf6a:	bf 09       	sbc	r27, r15
   1cf6c:	88 16       	cp	r8, r24
   1cf6e:	99 06       	cpc	r9, r25
   1cf70:	aa 06       	cpc	r10, r26
   1cf72:	bb 06       	cpc	r11, r27
   1cf74:	a0 f1       	brcs	.+104    	; 0x1cfde <twi_writeTo+0x18a>
   1cf76:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cf7a:	83 fd       	sbrc	r24, 3
   1cf7c:	d7 cf       	rjmp	.-82     	; 0x1cf2c <twi_writeTo+0xd8>
   1cf7e:	85 ec       	ldi	r24, 0xC5	; 197
   1cf80:	01 c0       	rjmp	.+2      	; 0x1cf84 <twi_writeTo+0x130>
   1cf82:	85 ee       	ldi	r24, 0xE5	; 229
   1cf84:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cf88:	0e 94 88 d7 	call	0x1af10	; 0x1af10 <micros>
   1cf8c:	6b 01       	movw	r12, r22
   1cf8e:	7c 01       	movw	r14, r24
   1cf90:	11 23       	and	r17, r17
   1cf92:	51 f1       	breq	.+84     	; 0x1cfe8 <twi_writeTo+0x194>
   1cf94:	80 91 24 19 	lds	r24, 0x1924	; 0x801924 <twi_state>
   1cf98:	82 30       	cpi	r24, 0x02	; 2
   1cf9a:	31 f5       	brne	.+76     	; 0x1cfe8 <twi_writeTo+0x194>
   1cf9c:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1cfa0:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cfa4:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cfa8:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cfac:	89 2b       	or	r24, r25
   1cfae:	8a 2b       	or	r24, r26
   1cfb0:	8b 2b       	or	r24, r27
   1cfb2:	71 f3       	breq	.-36     	; 0x1cf90 <twi_writeTo+0x13c>
   1cfb4:	0e 94 88 d7 	call	0x1af10	; 0x1af10 <micros>
   1cfb8:	80 90 1d 19 	lds	r8, 0x191D	; 0x80191d <twi_timeout_us>
   1cfbc:	90 90 1e 19 	lds	r9, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1cfc0:	a0 90 1f 19 	lds	r10, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1cfc4:	b0 90 20 19 	lds	r11, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1cfc8:	dc 01       	movw	r26, r24
   1cfca:	cb 01       	movw	r24, r22
   1cfcc:	8c 19       	sub	r24, r12
   1cfce:	9d 09       	sbc	r25, r13
   1cfd0:	ae 09       	sbc	r26, r14
   1cfd2:	bf 09       	sbc	r27, r15
   1cfd4:	88 16       	cp	r8, r24
   1cfd6:	99 06       	cpc	r9, r25
   1cfd8:	aa 06       	cpc	r10, r26
   1cfda:	bb 06       	cpc	r11, r27
   1cfdc:	c8 f6       	brcc	.-78     	; 0x1cf90 <twi_writeTo+0x13c>
   1cfde:	80 91 1b 19 	lds	r24, 0x191B	; 0x80191b <twi_do_reset_on_timeout>
   1cfe2:	24 df       	rcall	.-440    	; 0x1ce2c <twi_handleTimeout>
   1cfe4:	c5 e0       	ldi	r28, 0x05	; 5
   1cfe6:	13 c0       	rjmp	.+38     	; 0x1d00e <twi_writeTo+0x1ba>
   1cfe8:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1cfec:	8f 3f       	cpi	r24, 0xFF	; 255
   1cfee:	79 f0       	breq	.+30     	; 0x1d00e <twi_writeTo+0x1ba>
   1cff0:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1cff4:	80 32       	cpi	r24, 0x20	; 32
   1cff6:	41 f0       	breq	.+16     	; 0x1d008 <twi_writeTo+0x1b4>
   1cff8:	80 91 b1 18 	lds	r24, 0x18B1	; 0x8018b1 <twi_error>
   1cffc:	80 33       	cpi	r24, 0x30	; 48
   1cffe:	31 f0       	breq	.+12     	; 0x1d00c <twi_writeTo+0x1b8>
   1d000:	c4 e0       	ldi	r28, 0x04	; 4
   1d002:	05 c0       	rjmp	.+10     	; 0x1d00e <twi_writeTo+0x1ba>
   1d004:	c1 e0       	ldi	r28, 0x01	; 1
   1d006:	03 c0       	rjmp	.+6      	; 0x1d00e <twi_writeTo+0x1ba>
   1d008:	c2 e0       	ldi	r28, 0x02	; 2
   1d00a:	01 c0       	rjmp	.+2      	; 0x1d00e <twi_writeTo+0x1ba>
   1d00c:	c3 e0       	ldi	r28, 0x03	; 3
   1d00e:	8c 2f       	mov	r24, r28
   1d010:	df 91       	pop	r29
   1d012:	cf 91       	pop	r28
   1d014:	1f 91       	pop	r17
   1d016:	0f 91       	pop	r16
   1d018:	ff 90       	pop	r15
   1d01a:	ef 90       	pop	r14
   1d01c:	df 90       	pop	r13
   1d01e:	cf 90       	pop	r12
   1d020:	bf 90       	pop	r11
   1d022:	af 90       	pop	r10
   1d024:	9f 90       	pop	r9
   1d026:	8f 90       	pop	r8
   1d028:	7f 90       	pop	r7
   1d02a:	6f 90       	pop	r6
   1d02c:	5f 90       	pop	r5
   1d02e:	4f 90       	pop	r4
   1d030:	08 95       	ret

0001d032 <twi_stop>:
   1d032:	85 ed       	ldi	r24, 0xD5	; 213
   1d034:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1d038:	80 91 1d 19 	lds	r24, 0x191D	; 0x80191d <twi_timeout_us>
   1d03c:	90 91 1e 19 	lds	r25, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1d040:	a0 91 1f 19 	lds	r26, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1d044:	b0 91 20 19 	lds	r27, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1d048:	07 96       	adiw	r24, 0x07	; 7
   1d04a:	a1 1d       	adc	r26, r1
   1d04c:	b1 1d       	adc	r27, r1
   1d04e:	23 e0       	ldi	r18, 0x03	; 3
   1d050:	b6 95       	lsr	r27
   1d052:	a7 95       	ror	r26
   1d054:	97 95       	ror	r25
   1d056:	87 95       	ror	r24
   1d058:	2a 95       	dec	r18
   1d05a:	d1 f7       	brne	.-12     	; 0x1d050 <twi_stop+0x1e>
   1d05c:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1d060:	24 ff       	sbrs	r18, 4
   1d062:	1b c0       	rjmp	.+54     	; 0x1d09a <twi_stop+0x68>
   1d064:	40 91 1d 19 	lds	r20, 0x191D	; 0x80191d <twi_timeout_us>
   1d068:	50 91 1e 19 	lds	r21, 0x191E	; 0x80191e <twi_timeout_us+0x1>
   1d06c:	60 91 1f 19 	lds	r22, 0x191F	; 0x80191f <twi_timeout_us+0x2>
   1d070:	70 91 20 19 	lds	r23, 0x1920	; 0x801920 <twi_timeout_us+0x3>
   1d074:	45 2b       	or	r20, r21
   1d076:	46 2b       	or	r20, r22
   1d078:	47 2b       	or	r20, r23
   1d07a:	81 f3       	breq	.-32     	; 0x1d05c <twi_stop+0x2a>
   1d07c:	00 97       	sbiw	r24, 0x00	; 0
   1d07e:	a1 05       	cpc	r26, r1
   1d080:	b1 05       	cpc	r27, r1
   1d082:	41 f0       	breq	.+16     	; 0x1d094 <twi_stop+0x62>
   1d084:	25 e3       	ldi	r18, 0x35	; 53
   1d086:	2a 95       	dec	r18
   1d088:	f1 f7       	brne	.-4      	; 0x1d086 <twi_stop+0x54>
   1d08a:	00 00       	nop
   1d08c:	01 97       	sbiw	r24, 0x01	; 1
   1d08e:	a1 09       	sbc	r26, r1
   1d090:	b1 09       	sbc	r27, r1
   1d092:	e4 cf       	rjmp	.-56     	; 0x1d05c <twi_stop+0x2a>
   1d094:	80 91 1b 19 	lds	r24, 0x191B	; 0x80191b <twi_do_reset_on_timeout>
   1d098:	c9 ce       	rjmp	.-622    	; 0x1ce2c <twi_handleTimeout>
   1d09a:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
   1d09e:	08 95       	ret

0001d0a0 <__vector_39>:

ISR(TWI_vect)
{
   1d0a0:	1f 92       	push	r1
   1d0a2:	0f 92       	push	r0
   1d0a4:	0f b6       	in	r0, 0x3f	; 63
   1d0a6:	0f 92       	push	r0
   1d0a8:	11 24       	eor	r1, r1
   1d0aa:	0b b6       	in	r0, 0x3b	; 59
   1d0ac:	0f 92       	push	r0
   1d0ae:	2f 93       	push	r18
   1d0b0:	3f 93       	push	r19
   1d0b2:	4f 93       	push	r20
   1d0b4:	5f 93       	push	r21
   1d0b6:	6f 93       	push	r22
   1d0b8:	7f 93       	push	r23
   1d0ba:	8f 93       	push	r24
   1d0bc:	9f 93       	push	r25
   1d0be:	af 93       	push	r26
   1d0c0:	bf 93       	push	r27
   1d0c2:	ef 93       	push	r30
   1d0c4:	ff 93       	push	r31
  switch(TW_STATUS){
   1d0c6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
   1d0ca:	88 7f       	andi	r24, 0xF8	; 248
   1d0cc:	80 36       	cpi	r24, 0x60	; 96
   1d0ce:	09 f4       	brne	.+2      	; 0x1d0d2 <__vector_39+0x32>
   1d0d0:	9d c0       	rjmp	.+314    	; 0x1d20c <__vector_39+0x16c>
   1d0d2:	70 f5       	brcc	.+92     	; 0x1d130 <__vector_39+0x90>
   1d0d4:	88 32       	cpi	r24, 0x28	; 40
   1d0d6:	09 f4       	brne	.+2      	; 0x1d0da <__vector_39+0x3a>
   1d0d8:	5c c0       	rjmp	.+184    	; 0x1d192 <__vector_39+0xf2>
   1d0da:	90 f4       	brcc	.+36     	; 0x1d100 <__vector_39+0x60>
   1d0dc:	80 31       	cpi	r24, 0x10	; 16
   1d0de:	09 f4       	brne	.+2      	; 0x1d0e2 <__vector_39+0x42>
   1d0e0:	55 c0       	rjmp	.+170    	; 0x1d18c <__vector_39+0xec>
   1d0e2:	38 f4       	brcc	.+14     	; 0x1d0f2 <__vector_39+0x52>
   1d0e4:	88 23       	and	r24, r24
   1d0e6:	09 f4       	brne	.+2      	; 0x1d0ea <__vector_39+0x4a>
   1d0e8:	f3 c0       	rjmp	.+486    	; 0x1d2d0 <__vector_39+0x230>
   1d0ea:	88 30       	cpi	r24, 0x08	; 8
   1d0ec:	09 f4       	brne	.+2      	; 0x1d0f0 <__vector_39+0x50>
   1d0ee:	4e c0       	rjmp	.+156    	; 0x1d18c <__vector_39+0xec>
   1d0f0:	f2 c0       	rjmp	.+484    	; 0x1d2d6 <__vector_39+0x236>
   1d0f2:	88 31       	cpi	r24, 0x18	; 24
   1d0f4:	09 f4       	brne	.+2      	; 0x1d0f8 <__vector_39+0x58>
   1d0f6:	4d c0       	rjmp	.+154    	; 0x1d192 <__vector_39+0xf2>
   1d0f8:	80 32       	cpi	r24, 0x20	; 32
   1d0fa:	09 f4       	brne	.+2      	; 0x1d0fe <__vector_39+0x5e>
   1d0fc:	5e c0       	rjmp	.+188    	; 0x1d1ba <__vector_39+0x11a>
   1d0fe:	eb c0       	rjmp	.+470    	; 0x1d2d6 <__vector_39+0x236>
   1d100:	80 34       	cpi	r24, 0x40	; 64
   1d102:	09 f4       	brne	.+2      	; 0x1d106 <__vector_39+0x66>
   1d104:	69 c0       	rjmp	.+210    	; 0x1d1d8 <__vector_39+0x138>
   1d106:	50 f4       	brcc	.+20     	; 0x1d11c <__vector_39+0x7c>
   1d108:	80 33       	cpi	r24, 0x30	; 48
   1d10a:	09 f4       	brne	.+2      	; 0x1d10e <__vector_39+0x6e>
   1d10c:	56 c0       	rjmp	.+172    	; 0x1d1ba <__vector_39+0x11a>
   1d10e:	88 33       	cpi	r24, 0x38	; 56
   1d110:	09 f0       	breq	.+2      	; 0x1d114 <__vector_39+0x74>
   1d112:	e1 c0       	rjmp	.+450    	; 0x1d2d6 <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
   1d114:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
      twi_releaseBus();
   1d118:	83 de       	rcall	.-762    	; 0x1ce20 <twi_releaseBus>
      break;
   1d11a:	dd c0       	rjmp	.+442    	; 0x1d2d6 <__vector_39+0x236>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
   1d11c:	80 35       	cpi	r24, 0x50	; 80
   1d11e:	09 f4       	brne	.+2      	; 0x1d122 <__vector_39+0x82>
   1d120:	4f c0       	rjmp	.+158    	; 0x1d1c0 <__vector_39+0x120>
   1d122:	88 35       	cpi	r24, 0x58	; 88
   1d124:	09 f4       	brne	.+2      	; 0x1d128 <__vector_39+0x88>
   1d126:	5d c0       	rjmp	.+186    	; 0x1d1e2 <__vector_39+0x142>
   1d128:	88 34       	cpi	r24, 0x48	; 72
   1d12a:	09 f0       	breq	.+2      	; 0x1d12e <__vector_39+0x8e>
   1d12c:	d4 c0       	rjmp	.+424    	; 0x1d2d6 <__vector_39+0x236>
   1d12e:	d2 c0       	rjmp	.+420    	; 0x1d2d4 <__vector_39+0x234>
   1d130:	88 39       	cpi	r24, 0x98	; 152
   1d132:	09 f4       	brne	.+2      	; 0x1d136 <__vector_39+0x96>
   1d134:	c3 c0       	rjmp	.+390    	; 0x1d2bc <__vector_39+0x21c>
   1d136:	a8 f4       	brcc	.+42     	; 0x1d162 <__vector_39+0xc2>
   1d138:	88 37       	cpi	r24, 0x78	; 120
   1d13a:	09 f4       	brne	.+2      	; 0x1d13e <__vector_39+0x9e>
   1d13c:	67 c0       	rjmp	.+206    	; 0x1d20c <__vector_39+0x16c>
   1d13e:	38 f4       	brcc	.+14     	; 0x1d14e <__vector_39+0xae>
   1d140:	88 36       	cpi	r24, 0x68	; 104
   1d142:	09 f4       	brne	.+2      	; 0x1d146 <__vector_39+0xa6>
   1d144:	63 c0       	rjmp	.+198    	; 0x1d20c <__vector_39+0x16c>
   1d146:	80 37       	cpi	r24, 0x70	; 112
   1d148:	09 f4       	brne	.+2      	; 0x1d14c <__vector_39+0xac>
   1d14a:	60 c0       	rjmp	.+192    	; 0x1d20c <__vector_39+0x16c>
   1d14c:	c4 c0       	rjmp	.+392    	; 0x1d2d6 <__vector_39+0x236>
   1d14e:	88 38       	cpi	r24, 0x88	; 136
   1d150:	09 f4       	brne	.+2      	; 0x1d154 <__vector_39+0xb4>
   1d152:	b4 c0       	rjmp	.+360    	; 0x1d2bc <__vector_39+0x21c>
   1d154:	80 39       	cpi	r24, 0x90	; 144
   1d156:	09 f4       	brne	.+2      	; 0x1d15a <__vector_39+0xba>
   1d158:	5f c0       	rjmp	.+190    	; 0x1d218 <__vector_39+0x178>
   1d15a:	80 38       	cpi	r24, 0x80	; 128
   1d15c:	09 f0       	breq	.+2      	; 0x1d160 <__vector_39+0xc0>
   1d15e:	bb c0       	rjmp	.+374    	; 0x1d2d6 <__vector_39+0x236>
   1d160:	5b c0       	rjmp	.+182    	; 0x1d218 <__vector_39+0x178>
   1d162:	80 3b       	cpi	r24, 0xB0	; 176
   1d164:	09 f4       	brne	.+2      	; 0x1d168 <__vector_39+0xc8>
   1d166:	82 c0       	rjmp	.+260    	; 0x1d26c <__vector_39+0x1cc>
   1d168:	38 f4       	brcc	.+14     	; 0x1d178 <__vector_39+0xd8>
   1d16a:	80 3a       	cpi	r24, 0xA0	; 160
   1d16c:	09 f4       	brne	.+2      	; 0x1d170 <__vector_39+0xd0>
   1d16e:	66 c0       	rjmp	.+204    	; 0x1d23c <__vector_39+0x19c>
   1d170:	88 3a       	cpi	r24, 0xA8	; 168
   1d172:	09 f4       	brne	.+2      	; 0x1d176 <__vector_39+0xd6>
   1d174:	7b c0       	rjmp	.+246    	; 0x1d26c <__vector_39+0x1cc>
   1d176:	af c0       	rjmp	.+350    	; 0x1d2d6 <__vector_39+0x236>
   1d178:	80 3c       	cpi	r24, 0xC0	; 192
   1d17a:	09 f4       	brne	.+2      	; 0x1d17e <__vector_39+0xde>
   1d17c:	a3 c0       	rjmp	.+326    	; 0x1d2c4 <__vector_39+0x224>
   1d17e:	88 3c       	cpi	r24, 0xC8	; 200
   1d180:	09 f4       	brne	.+2      	; 0x1d184 <__vector_39+0xe4>
   1d182:	a0 c0       	rjmp	.+320    	; 0x1d2c4 <__vector_39+0x224>
   1d184:	88 3b       	cpi	r24, 0xB8	; 184
   1d186:	09 f4       	brne	.+2      	; 0x1d18a <__vector_39+0xea>
   1d188:	86 c0       	rjmp	.+268    	; 0x1d296 <__vector_39+0x1f6>
   1d18a:	a5 c0       	rjmp	.+330    	; 0x1d2d6 <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
   1d18c:	80 91 23 19 	lds	r24, 0x1923	; 0x801923 <twi_slarw>
   1d190:	10 c0       	rjmp	.+32     	; 0x1d1b2 <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1d192:	90 91 f6 18 	lds	r25, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d196:	80 91 f5 18 	lds	r24, 0x18F5	; 0x8018f5 <twi_masterBufferLength>
   1d19a:	98 17       	cp	r25, r24
   1d19c:	70 f5       	brcc	.+92     	; 0x1d1fa <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
   1d19e:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d1a2:	81 e0       	ldi	r24, 0x01	; 1
   1d1a4:	8e 0f       	add	r24, r30
   1d1a6:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d1aa:	f0 e0       	ldi	r31, 0x00	; 0
   1d1ac:	e9 50       	subi	r30, 0x09	; 9
   1d1ae:	f7 4e       	sbci	r31, 0xE7	; 231
   1d1b0:	80 81       	ld	r24, Z
   1d1b2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1d1b6:	85 ec       	ldi	r24, 0xC5	; 197
   1d1b8:	82 c0       	rjmp	.+260    	; 0x1d2be <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
   1d1ba:	80 93 b1 18 	sts	0x18B1, r24	; 0x8018b1 <twi_error>
   1d1be:	8a c0       	rjmp	.+276    	; 0x1d2d4 <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1d1c0:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d1c4:	81 e0       	ldi	r24, 0x01	; 1
   1d1c6:	8e 0f       	add	r24, r30
   1d1c8:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d1cc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d1d0:	f0 e0       	ldi	r31, 0x00	; 0
   1d1d2:	e9 50       	subi	r30, 0x09	; 9
   1d1d4:	f7 4e       	sbci	r31, 0xE7	; 231
   1d1d6:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1d1d8:	90 91 f6 18 	lds	r25, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d1dc:	80 91 f5 18 	lds	r24, 0x18F5	; 0x8018f5 <twi_masterBufferLength>
   1d1e0:	6a c0       	rjmp	.+212    	; 0x1d2b6 <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1d1e2:	e0 91 f6 18 	lds	r30, 0x18F6	; 0x8018f6 <twi_masterBufferIndex>
   1d1e6:	81 e0       	ldi	r24, 0x01	; 1
   1d1e8:	8e 0f       	add	r24, r30
   1d1ea:	80 93 f6 18 	sts	0x18F6, r24	; 0x8018f6 <twi_masterBufferIndex>
   1d1ee:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d1f2:	f0 e0       	ldi	r31, 0x00	; 0
   1d1f4:	e9 50       	subi	r30, 0x09	; 9
   1d1f6:	f7 4e       	sbci	r31, 0xE7	; 231
   1d1f8:	80 83       	st	Z, r24
      if (twi_sendStop){
   1d1fa:	80 91 22 19 	lds	r24, 0x1922	; 0x801922 <twi_sendStop>
   1d1fe:	81 11       	cpse	r24, r1
   1d200:	69 c0       	rjmp	.+210    	; 0x1d2d4 <__vector_39+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
   1d202:	81 e0       	ldi	r24, 0x01	; 1
   1d204:	80 93 21 19 	sts	0x1921, r24	; 0x801921 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
   1d208:	84 ea       	ldi	r24, 0xA4	; 164
   1d20a:	5d c0       	rjmp	.+186    	; 0x1d2c6 <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
   1d20c:	83 e0       	ldi	r24, 0x03	; 3
   1d20e:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
   1d212:	10 92 b2 18 	sts	0x18B2, r1	; 0x8018b2 <twi_rxBufferIndex>
   1d216:	cf cf       	rjmp	.-98     	; 0x1d1b6 <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1d218:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d21c:	80 32       	cpi	r24, 0x20	; 32
   1d21e:	08 f0       	brcs	.+2      	; 0x1d222 <__vector_39+0x182>
   1d220:	4d c0       	rjmp	.+154    	; 0x1d2bc <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
   1d222:	e0 91 b2 18 	lds	r30, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d226:	81 e0       	ldi	r24, 0x01	; 1
   1d228:	8e 0f       	add	r24, r30
   1d22a:	80 93 b2 18 	sts	0x18B2, r24	; 0x8018b2 <twi_rxBufferIndex>
   1d22e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1d232:	f0 e0       	ldi	r31, 0x00	; 0
   1d234:	ed 54       	subi	r30, 0x4D	; 77
   1d236:	f7 4e       	sbci	r31, 0xE7	; 231
   1d238:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
   1d23a:	bd cf       	rjmp	.-134    	; 0x1d1b6 <__vector_39+0x116>
   1d23c:	f1 dd       	rcall	.-1054   	; 0x1ce20 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1d23e:	80 91 b2 18 	lds	r24, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d242:	80 32       	cpi	r24, 0x20	; 32
   1d244:	30 f4       	brcc	.+12     	; 0x1d252 <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
   1d246:	e0 91 b2 18 	lds	r30, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d24a:	f0 e0       	ldi	r31, 0x00	; 0
   1d24c:	ed 54       	subi	r30, 0x4D	; 77
   1d24e:	f7 4e       	sbci	r31, 0xE7	; 231
   1d250:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
   1d252:	60 91 b2 18 	lds	r22, 0x18B2	; 0x8018b2 <twi_rxBufferIndex>
   1d256:	70 e0       	ldi	r23, 0x00	; 0
   1d258:	e0 91 17 19 	lds	r30, 0x1917	; 0x801917 <twi_onSlaveReceive>
   1d25c:	f0 91 18 19 	lds	r31, 0x1918	; 0x801918 <twi_onSlaveReceive+0x1>
   1d260:	83 eb       	ldi	r24, 0xB3	; 179
   1d262:	98 e1       	ldi	r25, 0x18	; 24
   1d264:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
   1d266:	10 92 b2 18 	sts	0x18B2, r1	; 0x8018b2 <twi_rxBufferIndex>
      break;
   1d26a:	35 c0       	rjmp	.+106    	; 0x1d2d6 <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
   1d26c:	84 e0       	ldi	r24, 0x04	; 4
   1d26e:	80 93 24 19 	sts	0x1924, r24	; 0x801924 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
   1d272:	10 92 d4 18 	sts	0x18D4, r1	; 0x8018d4 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
   1d276:	10 92 d3 18 	sts	0x18D3, r1	; 0x8018d3 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
   1d27a:	e0 91 19 19 	lds	r30, 0x1919	; 0x801919 <twi_onSlaveTransmit>
   1d27e:	f0 91 1a 19 	lds	r31, 0x191A	; 0x80191a <twi_onSlaveTransmit+0x1>
   1d282:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
   1d284:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1d288:	81 11       	cpse	r24, r1
   1d28a:	05 c0       	rjmp	.+10     	; 0x1d296 <__vector_39+0x1f6>
        twi_txBufferLength = 1;
   1d28c:	81 e0       	ldi	r24, 0x01	; 1
   1d28e:	80 93 d3 18 	sts	0x18D3, r24	; 0x8018d3 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
   1d292:	10 92 d5 18 	sts	0x18D5, r1	; 0x8018d5 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
   1d296:	e0 91 d4 18 	lds	r30, 0x18D4	; 0x8018d4 <twi_txBufferIndex>
   1d29a:	81 e0       	ldi	r24, 0x01	; 1
   1d29c:	8e 0f       	add	r24, r30
   1d29e:	80 93 d4 18 	sts	0x18D4, r24	; 0x8018d4 <twi_txBufferIndex>
   1d2a2:	f0 e0       	ldi	r31, 0x00	; 0
   1d2a4:	eb 52       	subi	r30, 0x2B	; 43
   1d2a6:	f7 4e       	sbci	r31, 0xE7	; 231
   1d2a8:	80 81       	ld	r24, Z
   1d2aa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
   1d2ae:	90 91 d4 18 	lds	r25, 0x18D4	; 0x8018d4 <twi_txBufferIndex>
   1d2b2:	80 91 d3 18 	lds	r24, 0x18D3	; 0x8018d3 <twi_txBufferLength>
   1d2b6:	98 17       	cp	r25, r24
   1d2b8:	08 f4       	brcc	.+2      	; 0x1d2bc <__vector_39+0x21c>
   1d2ba:	7d cf       	rjmp	.-262    	; 0x1d1b6 <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
   1d2bc:	85 e8       	ldi	r24, 0x85	; 133
   1d2be:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1d2c2:	09 c0       	rjmp	.+18     	; 0x1d2d6 <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1d2c4:	85 ec       	ldi	r24, 0xC5	; 197
   1d2c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
   1d2ca:	10 92 24 19 	sts	0x1924, r1	; 0x801924 <twi_state>
      break;
   1d2ce:	03 c0       	rjmp	.+6      	; 0x1d2d6 <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
   1d2d0:	10 92 b1 18 	sts	0x18B1, r1	; 0x8018b1 <twi_error>
      twi_stop();
   1d2d4:	ae de       	rcall	.-676    	; 0x1d032 <twi_stop>
      break;
  }
}
   1d2d6:	ff 91       	pop	r31
   1d2d8:	ef 91       	pop	r30
   1d2da:	bf 91       	pop	r27
   1d2dc:	af 91       	pop	r26
   1d2de:	9f 91       	pop	r25
   1d2e0:	8f 91       	pop	r24
   1d2e2:	7f 91       	pop	r23
   1d2e4:	6f 91       	pop	r22
   1d2e6:	5f 91       	pop	r21
   1d2e8:	4f 91       	pop	r20
   1d2ea:	3f 91       	pop	r19
   1d2ec:	2f 91       	pop	r18
   1d2ee:	0f 90       	pop	r0
   1d2f0:	0b be       	out	0x3b, r0	; 59
   1d2f2:	0f 90       	pop	r0
   1d2f4:	0f be       	out	0x3f, r0	; 63
   1d2f6:	0f 90       	pop	r0
   1d2f8:	1f 90       	pop	r1
   1d2fa:	18 95       	reti

0001d2fc <pow>:
   1d2fc:	fa 01       	movw	r30, r20
   1d2fe:	ee 0f       	add	r30, r30
   1d300:	ff 1f       	adc	r31, r31
   1d302:	30 96       	adiw	r30, 0x00	; 0
   1d304:	21 05       	cpc	r18, r1
   1d306:	31 05       	cpc	r19, r1
   1d308:	a1 f1       	breq	.+104    	; 0x1d372 <pow+0x76>
   1d30a:	61 15       	cp	r22, r1
   1d30c:	71 05       	cpc	r23, r1
   1d30e:	61 f4       	brne	.+24     	; 0x1d328 <pow+0x2c>
   1d310:	80 38       	cpi	r24, 0x80	; 128
   1d312:	bf e3       	ldi	r27, 0x3F	; 63
   1d314:	9b 07       	cpc	r25, r27
   1d316:	49 f1       	breq	.+82     	; 0x1d36a <pow+0x6e>
   1d318:	68 94       	set
   1d31a:	90 38       	cpi	r25, 0x80	; 128
   1d31c:	81 05       	cpc	r24, r1
   1d31e:	61 f0       	breq	.+24     	; 0x1d338 <pow+0x3c>
   1d320:	80 38       	cpi	r24, 0x80	; 128
   1d322:	bf ef       	ldi	r27, 0xFF	; 255
   1d324:	9b 07       	cpc	r25, r27
   1d326:	41 f0       	breq	.+16     	; 0x1d338 <pow+0x3c>
   1d328:	99 23       	and	r25, r25
   1d32a:	4a f5       	brpl	.+82     	; 0x1d37e <pow+0x82>
   1d32c:	ff 3f       	cpi	r31, 0xFF	; 255
   1d32e:	e1 05       	cpc	r30, r1
   1d330:	31 05       	cpc	r19, r1
   1d332:	21 05       	cpc	r18, r1
   1d334:	19 f1       	breq	.+70     	; 0x1d37c <pow+0x80>
   1d336:	e8 94       	clt
   1d338:	08 94       	sec
   1d33a:	e7 95       	ror	r30
   1d33c:	d9 01       	movw	r26, r18
   1d33e:	aa 23       	and	r26, r26
   1d340:	29 f4       	brne	.+10     	; 0x1d34c <pow+0x50>
   1d342:	ab 2f       	mov	r26, r27
   1d344:	be 2f       	mov	r27, r30
   1d346:	f8 5f       	subi	r31, 0xF8	; 248
   1d348:	d0 f3       	brcs	.-12     	; 0x1d33e <pow+0x42>
   1d34a:	10 c0       	rjmp	.+32     	; 0x1d36c <pow+0x70>
   1d34c:	ff 5f       	subi	r31, 0xFF	; 255
   1d34e:	70 f4       	brcc	.+28     	; 0x1d36c <pow+0x70>
   1d350:	a6 95       	lsr	r26
   1d352:	e0 f7       	brcc	.-8      	; 0x1d34c <pow+0x50>
   1d354:	f7 39       	cpi	r31, 0x97	; 151
   1d356:	50 f0       	brcs	.+20     	; 0x1d36c <pow+0x70>
   1d358:	19 f0       	breq	.+6      	; 0x1d360 <pow+0x64>
   1d35a:	ff 3a       	cpi	r31, 0xAF	; 175
   1d35c:	38 f4       	brcc	.+14     	; 0x1d36c <pow+0x70>
   1d35e:	9f 77       	andi	r25, 0x7F	; 127
   1d360:	9f 93       	push	r25
   1d362:	0d d0       	rcall	.+26     	; 0x1d37e <pow+0x82>
   1d364:	0f 90       	pop	r0
   1d366:	07 fc       	sbrc	r0, 7
   1d368:	90 58       	subi	r25, 0x80	; 128
   1d36a:	08 95       	ret
   1d36c:	46 f0       	brts	.+16     	; 0x1d37e <pow+0x82>
   1d36e:	0c 94 50 d2 	jmp	0x1a4a0	; 0x1a4a0 <__fp_nan>
   1d372:	60 e0       	ldi	r22, 0x00	; 0
   1d374:	70 e0       	ldi	r23, 0x00	; 0
   1d376:	80 e8       	ldi	r24, 0x80	; 128
   1d378:	9f e3       	ldi	r25, 0x3F	; 63
   1d37a:	08 95       	ret
   1d37c:	4f e7       	ldi	r20, 0x7F	; 127
   1d37e:	9f 77       	andi	r25, 0x7F	; 127
   1d380:	5f 93       	push	r21
   1d382:	4f 93       	push	r20
   1d384:	3f 93       	push	r19
   1d386:	2f 93       	push	r18
   1d388:	0a d1       	rcall	.+532    	; 0x1d59e <log>
   1d38a:	2f 91       	pop	r18
   1d38c:	3f 91       	pop	r19
   1d38e:	4f 91       	pop	r20
   1d390:	5f 91       	pop	r21
   1d392:	0e 94 9f d2 	call	0x1a53e	; 0x1a53e <__mulsf3>
   1d396:	51 c0       	rjmp	.+162    	; 0x1d43a <exp>
   1d398:	19 f4       	brne	.+6      	; 0x1d3a0 <pow+0xa4>
   1d39a:	16 f4       	brtc	.+4      	; 0x1d3a0 <pow+0xa4>
   1d39c:	0c 94 50 d2 	jmp	0x1a4a0	; 0x1a4a0 <__fp_nan>
   1d3a0:	7a c0       	rjmp	.+244    	; 0x1d496 <__fp_mpack>

0001d3a2 <sqrt>:
   1d3a2:	0e 94 7a d2 	call	0x1a4f4	; 0x1a4f4 <__fp_splitA>
   1d3a6:	c0 f3       	brcs	.-16     	; 0x1d398 <pow+0x9c>
   1d3a8:	99 23       	and	r25, r25
   1d3aa:	d1 f3       	breq	.-12     	; 0x1d3a0 <pow+0xa4>
   1d3ac:	be f3       	brts	.-18     	; 0x1d39c <pow+0xa0>
   1d3ae:	9f 57       	subi	r25, 0x7F	; 127
   1d3b0:	55 0b       	sbc	r21, r21
   1d3b2:	87 ff       	sbrs	r24, 7
   1d3b4:	7e d0       	rcall	.+252    	; 0x1d4b2 <__fp_norm2>
   1d3b6:	00 24       	eor	r0, r0
   1d3b8:	a0 e6       	ldi	r26, 0x60	; 96
   1d3ba:	40 ea       	ldi	r20, 0xA0	; 160
   1d3bc:	90 01       	movw	r18, r0
   1d3be:	80 58       	subi	r24, 0x80	; 128
   1d3c0:	56 95       	lsr	r21
   1d3c2:	97 95       	ror	r25
   1d3c4:	28 f4       	brcc	.+10     	; 0x1d3d0 <sqrt+0x2e>
   1d3c6:	80 5c       	subi	r24, 0xC0	; 192
   1d3c8:	66 0f       	add	r22, r22
   1d3ca:	77 1f       	adc	r23, r23
   1d3cc:	88 1f       	adc	r24, r24
   1d3ce:	20 f0       	brcs	.+8      	; 0x1d3d8 <sqrt+0x36>
   1d3d0:	26 17       	cp	r18, r22
   1d3d2:	37 07       	cpc	r19, r23
   1d3d4:	48 07       	cpc	r20, r24
   1d3d6:	30 f4       	brcc	.+12     	; 0x1d3e4 <sqrt+0x42>
   1d3d8:	62 1b       	sub	r22, r18
   1d3da:	73 0b       	sbc	r23, r19
   1d3dc:	84 0b       	sbc	r24, r20
   1d3de:	20 29       	or	r18, r0
   1d3e0:	31 29       	or	r19, r1
   1d3e2:	4a 2b       	or	r20, r26
   1d3e4:	a6 95       	lsr	r26
   1d3e6:	17 94       	ror	r1
   1d3e8:	07 94       	ror	r0
   1d3ea:	20 25       	eor	r18, r0
   1d3ec:	31 25       	eor	r19, r1
   1d3ee:	4a 27       	eor	r20, r26
   1d3f0:	58 f7       	brcc	.-42     	; 0x1d3c8 <sqrt+0x26>
   1d3f2:	66 0f       	add	r22, r22
   1d3f4:	77 1f       	adc	r23, r23
   1d3f6:	88 1f       	adc	r24, r24
   1d3f8:	20 f0       	brcs	.+8      	; 0x1d402 <sqrt+0x60>
   1d3fa:	26 17       	cp	r18, r22
   1d3fc:	37 07       	cpc	r19, r23
   1d3fe:	48 07       	cpc	r20, r24
   1d400:	30 f4       	brcc	.+12     	; 0x1d40e <sqrt+0x6c>
   1d402:	62 0b       	sbc	r22, r18
   1d404:	73 0b       	sbc	r23, r19
   1d406:	84 0b       	sbc	r24, r20
   1d408:	20 0d       	add	r18, r0
   1d40a:	31 1d       	adc	r19, r1
   1d40c:	41 1d       	adc	r20, r1
   1d40e:	a0 95       	com	r26
   1d410:	81 f7       	brne	.-32     	; 0x1d3f2 <sqrt+0x50>
   1d412:	b9 01       	movw	r22, r18
   1d414:	84 2f       	mov	r24, r20
   1d416:	91 58       	subi	r25, 0x81	; 129
   1d418:	88 0f       	add	r24, r24
   1d41a:	96 95       	lsr	r25
   1d41c:	87 95       	ror	r24
   1d41e:	08 95       	ret

0001d420 <__unordsf2>:
   1d420:	0e 94 26 d2 	call	0x1a44c	; 0x1a44c <__fp_cmp>
   1d424:	88 0b       	sbc	r24, r24
   1d426:	99 0b       	sbc	r25, r25
   1d428:	08 95       	ret
   1d42a:	29 f4       	brne	.+10     	; 0x1d436 <__unordsf2+0x16>
   1d42c:	16 f0       	brts	.+4      	; 0x1d432 <__unordsf2+0x12>
   1d42e:	0c 94 4a d2 	jmp	0x1a494	; 0x1a494 <__fp_inf>
   1d432:	0c 94 94 d2 	jmp	0x1a528	; 0x1a528 <__fp_zero>
   1d436:	0c 94 50 d2 	jmp	0x1a4a0	; 0x1a4a0 <__fp_nan>

0001d43a <exp>:
   1d43a:	0e 94 7a d2 	call	0x1a4f4	; 0x1a4f4 <__fp_splitA>
   1d43e:	a8 f3       	brcs	.-22     	; 0x1d42a <__unordsf2+0xa>
   1d440:	96 38       	cpi	r25, 0x86	; 134
   1d442:	a0 f7       	brcc	.-24     	; 0x1d42c <__unordsf2+0xc>
   1d444:	07 f8       	bld	r0, 7
   1d446:	0f 92       	push	r0
   1d448:	e8 94       	clt
   1d44a:	2b e3       	ldi	r18, 0x3B	; 59
   1d44c:	3a ea       	ldi	r19, 0xAA	; 170
   1d44e:	48 eb       	ldi	r20, 0xB8	; 184
   1d450:	5f e7       	ldi	r21, 0x7F	; 127
   1d452:	0e 94 ad d2 	call	0x1a55a	; 0x1a55a <__mulsf3_pse>
   1d456:	0f 92       	push	r0
   1d458:	0f 92       	push	r0
   1d45a:	0f 92       	push	r0
   1d45c:	4d b7       	in	r20, 0x3d	; 61
   1d45e:	5e b7       	in	r21, 0x3e	; 62
   1d460:	0f 92       	push	r0
   1d462:	e4 d0       	rcall	.+456    	; 0x1d62c <modf>
   1d464:	e0 e3       	ldi	r30, 0x30	; 48
   1d466:	f2 e0       	ldi	r31, 0x02	; 2
   1d468:	2b d0       	rcall	.+86     	; 0x1d4c0 <__fp_powser>
   1d46a:	4f 91       	pop	r20
   1d46c:	5f 91       	pop	r21
   1d46e:	ef 91       	pop	r30
   1d470:	ff 91       	pop	r31
   1d472:	e5 95       	asr	r30
   1d474:	ee 1f       	adc	r30, r30
   1d476:	ff 1f       	adc	r31, r31
   1d478:	49 f0       	breq	.+18     	; 0x1d48c <exp+0x52>
   1d47a:	fe 57       	subi	r31, 0x7E	; 126
   1d47c:	e0 68       	ori	r30, 0x80	; 128
   1d47e:	44 27       	eor	r20, r20
   1d480:	ee 0f       	add	r30, r30
   1d482:	44 1f       	adc	r20, r20
   1d484:	fa 95       	dec	r31
   1d486:	e1 f7       	brne	.-8      	; 0x1d480 <exp+0x46>
   1d488:	41 95       	neg	r20
   1d48a:	55 0b       	sbc	r21, r21
   1d48c:	4b d0       	rcall	.+150    	; 0x1d524 <ldexp>
   1d48e:	0f 90       	pop	r0
   1d490:	07 fe       	sbrs	r0, 7
   1d492:	3d c0       	rjmp	.+122    	; 0x1d50e <inverse>
   1d494:	08 95       	ret

0001d496 <__fp_mpack>:
   1d496:	9f 3f       	cpi	r25, 0xFF	; 255
   1d498:	31 f0       	breq	.+12     	; 0x1d4a6 <__fp_mpack_finite+0xc>

0001d49a <__fp_mpack_finite>:
   1d49a:	91 50       	subi	r25, 0x01	; 1
   1d49c:	20 f4       	brcc	.+8      	; 0x1d4a6 <__fp_mpack_finite+0xc>
   1d49e:	87 95       	ror	r24
   1d4a0:	77 95       	ror	r23
   1d4a2:	67 95       	ror	r22
   1d4a4:	b7 95       	ror	r27
   1d4a6:	88 0f       	add	r24, r24
   1d4a8:	91 1d       	adc	r25, r1
   1d4aa:	96 95       	lsr	r25
   1d4ac:	87 95       	ror	r24
   1d4ae:	97 f9       	bld	r25, 7
   1d4b0:	08 95       	ret

0001d4b2 <__fp_norm2>:
   1d4b2:	91 50       	subi	r25, 0x01	; 1
   1d4b4:	50 40       	sbci	r21, 0x00	; 0
   1d4b6:	66 0f       	add	r22, r22
   1d4b8:	77 1f       	adc	r23, r23
   1d4ba:	88 1f       	adc	r24, r24
   1d4bc:	d2 f7       	brpl	.-12     	; 0x1d4b2 <__fp_norm2>
   1d4be:	08 95       	ret

0001d4c0 <__fp_powser>:
   1d4c0:	df 93       	push	r29
   1d4c2:	cf 93       	push	r28
   1d4c4:	1f 93       	push	r17
   1d4c6:	0f 93       	push	r16
   1d4c8:	ff 92       	push	r15
   1d4ca:	ef 92       	push	r14
   1d4cc:	df 92       	push	r13
   1d4ce:	7b 01       	movw	r14, r22
   1d4d0:	8c 01       	movw	r16, r24
   1d4d2:	68 94       	set
   1d4d4:	06 c0       	rjmp	.+12     	; 0x1d4e2 <__fp_powser+0x22>
   1d4d6:	da 2e       	mov	r13, r26
   1d4d8:	ef 01       	movw	r28, r30
   1d4da:	0e 94 ab d2 	call	0x1a556	; 0x1a556 <__mulsf3x>
   1d4de:	fe 01       	movw	r30, r28
   1d4e0:	e8 94       	clt
   1d4e2:	a5 91       	lpm	r26, Z+
   1d4e4:	25 91       	lpm	r18, Z+
   1d4e6:	35 91       	lpm	r19, Z+
   1d4e8:	45 91       	lpm	r20, Z+
   1d4ea:	55 91       	lpm	r21, Z+
   1d4ec:	a6 f3       	brts	.-24     	; 0x1d4d6 <__fp_powser+0x16>
   1d4ee:	ef 01       	movw	r28, r30
   1d4f0:	0e 94 fe d0 	call	0x1a1fc	; 0x1a1fc <__addsf3x>
   1d4f4:	fe 01       	movw	r30, r28
   1d4f6:	97 01       	movw	r18, r14
   1d4f8:	a8 01       	movw	r20, r16
   1d4fa:	da 94       	dec	r13
   1d4fc:	69 f7       	brne	.-38     	; 0x1d4d8 <__fp_powser+0x18>
   1d4fe:	df 90       	pop	r13
   1d500:	ef 90       	pop	r14
   1d502:	ff 90       	pop	r15
   1d504:	0f 91       	pop	r16
   1d506:	1f 91       	pop	r17
   1d508:	cf 91       	pop	r28
   1d50a:	df 91       	pop	r29
   1d50c:	08 95       	ret

0001d50e <inverse>:
   1d50e:	9b 01       	movw	r18, r22
   1d510:	ac 01       	movw	r20, r24
   1d512:	60 e0       	ldi	r22, 0x00	; 0
   1d514:	70 e0       	ldi	r23, 0x00	; 0
   1d516:	80 e8       	ldi	r24, 0x80	; 128
   1d518:	9f e3       	ldi	r25, 0x3F	; 63
   1d51a:	0c 94 55 d1 	jmp	0x1a2aa	; 0x1a2aa <__divsf3>
   1d51e:	0c 94 4a d2 	jmp	0x1a494	; 0x1a494 <__fp_inf>
   1d522:	b9 cf       	rjmp	.-142    	; 0x1d496 <__fp_mpack>

0001d524 <ldexp>:
   1d524:	0e 94 7a d2 	call	0x1a4f4	; 0x1a4f4 <__fp_splitA>
   1d528:	e0 f3       	brcs	.-8      	; 0x1d522 <inverse+0x14>
   1d52a:	99 23       	and	r25, r25
   1d52c:	d1 f3       	breq	.-12     	; 0x1d522 <inverse+0x14>
   1d52e:	94 0f       	add	r25, r20
   1d530:	51 1d       	adc	r21, r1
   1d532:	ab f3       	brvs	.-22     	; 0x1d51e <inverse+0x10>
   1d534:	91 50       	subi	r25, 0x01	; 1
   1d536:	50 40       	sbci	r21, 0x00	; 0
   1d538:	94 f0       	brlt	.+36     	; 0x1d55e <ldexp+0x3a>
   1d53a:	59 f0       	breq	.+22     	; 0x1d552 <ldexp+0x2e>
   1d53c:	88 23       	and	r24, r24
   1d53e:	32 f0       	brmi	.+12     	; 0x1d54c <ldexp+0x28>
   1d540:	66 0f       	add	r22, r22
   1d542:	77 1f       	adc	r23, r23
   1d544:	88 1f       	adc	r24, r24
   1d546:	91 50       	subi	r25, 0x01	; 1
   1d548:	50 40       	sbci	r21, 0x00	; 0
   1d54a:	c1 f7       	brne	.-16     	; 0x1d53c <ldexp+0x18>
   1d54c:	9e 3f       	cpi	r25, 0xFE	; 254
   1d54e:	51 05       	cpc	r21, r1
   1d550:	34 f7       	brge	.-52     	; 0x1d51e <inverse+0x10>
   1d552:	88 0f       	add	r24, r24
   1d554:	91 1d       	adc	r25, r1
   1d556:	96 95       	lsr	r25
   1d558:	87 95       	ror	r24
   1d55a:	97 f9       	bld	r25, 7
   1d55c:	08 95       	ret
   1d55e:	5f 3f       	cpi	r21, 0xFF	; 255
   1d560:	ac f0       	brlt	.+42     	; 0x1d58c <ldexp+0x68>
   1d562:	98 3e       	cpi	r25, 0xE8	; 232
   1d564:	9c f0       	brlt	.+38     	; 0x1d58c <ldexp+0x68>
   1d566:	bb 27       	eor	r27, r27
   1d568:	86 95       	lsr	r24
   1d56a:	77 95       	ror	r23
   1d56c:	67 95       	ror	r22
   1d56e:	b7 95       	ror	r27
   1d570:	08 f4       	brcc	.+2      	; 0x1d574 <ldexp+0x50>
   1d572:	b1 60       	ori	r27, 0x01	; 1
   1d574:	93 95       	inc	r25
   1d576:	c1 f7       	brne	.-16     	; 0x1d568 <ldexp+0x44>
   1d578:	bb 0f       	add	r27, r27
   1d57a:	58 f7       	brcc	.-42     	; 0x1d552 <ldexp+0x2e>
   1d57c:	11 f4       	brne	.+4      	; 0x1d582 <ldexp+0x5e>
   1d57e:	60 ff       	sbrs	r22, 0
   1d580:	e8 cf       	rjmp	.-48     	; 0x1d552 <ldexp+0x2e>
   1d582:	6f 5f       	subi	r22, 0xFF	; 255
   1d584:	7f 4f       	sbci	r23, 0xFF	; 255
   1d586:	8f 4f       	sbci	r24, 0xFF	; 255
   1d588:	9f 4f       	sbci	r25, 0xFF	; 255
   1d58a:	e3 cf       	rjmp	.-58     	; 0x1d552 <ldexp+0x2e>
   1d58c:	0c 94 95 d2 	jmp	0x1a52a	; 0x1a52a <__fp_szero>
   1d590:	0e f0       	brts	.+2      	; 0x1d594 <ldexp+0x70>
   1d592:	81 cf       	rjmp	.-254    	; 0x1d496 <__fp_mpack>
   1d594:	0c 94 50 d2 	jmp	0x1a4a0	; 0x1a4a0 <__fp_nan>
   1d598:	68 94       	set
   1d59a:	0c 94 4a d2 	jmp	0x1a494	; 0x1a494 <__fp_inf>

0001d59e <log>:
   1d59e:	0e 94 7a d2 	call	0x1a4f4	; 0x1a4f4 <__fp_splitA>
   1d5a2:	b0 f3       	brcs	.-20     	; 0x1d590 <ldexp+0x6c>
   1d5a4:	99 23       	and	r25, r25
   1d5a6:	c1 f3       	breq	.-16     	; 0x1d598 <ldexp+0x74>
   1d5a8:	ae f3       	brts	.-22     	; 0x1d594 <ldexp+0x70>
   1d5aa:	df 93       	push	r29
   1d5ac:	cf 93       	push	r28
   1d5ae:	1f 93       	push	r17
   1d5b0:	0f 93       	push	r16
   1d5b2:	ff 92       	push	r15
   1d5b4:	c9 2f       	mov	r28, r25
   1d5b6:	dd 27       	eor	r29, r29
   1d5b8:	88 23       	and	r24, r24
   1d5ba:	2a f0       	brmi	.+10     	; 0x1d5c6 <log+0x28>
   1d5bc:	21 97       	sbiw	r28, 0x01	; 1
   1d5be:	66 0f       	add	r22, r22
   1d5c0:	77 1f       	adc	r23, r23
   1d5c2:	88 1f       	adc	r24, r24
   1d5c4:	da f7       	brpl	.-10     	; 0x1d5bc <log+0x1e>
   1d5c6:	20 e0       	ldi	r18, 0x00	; 0
   1d5c8:	30 e0       	ldi	r19, 0x00	; 0
   1d5ca:	40 e8       	ldi	r20, 0x80	; 128
   1d5cc:	5f eb       	ldi	r21, 0xBF	; 191
   1d5ce:	9f e3       	ldi	r25, 0x3F	; 63
   1d5d0:	88 39       	cpi	r24, 0x98	; 152
   1d5d2:	20 f0       	brcs	.+8      	; 0x1d5dc <log+0x3e>
   1d5d4:	80 3e       	cpi	r24, 0xE0	; 224
   1d5d6:	38 f0       	brcs	.+14     	; 0x1d5e6 <log+0x48>
   1d5d8:	21 96       	adiw	r28, 0x01	; 1
   1d5da:	8f 77       	andi	r24, 0x7F	; 127
   1d5dc:	0e 94 ed d0 	call	0x1a1da	; 0x1a1da <__addsf3>
   1d5e0:	e8 e5       	ldi	r30, 0x58	; 88
   1d5e2:	f2 e0       	ldi	r31, 0x02	; 2
   1d5e4:	04 c0       	rjmp	.+8      	; 0x1d5ee <log+0x50>
   1d5e6:	0e 94 ed d0 	call	0x1a1da	; 0x1a1da <__addsf3>
   1d5ea:	e5 e8       	ldi	r30, 0x85	; 133
   1d5ec:	f2 e0       	ldi	r31, 0x02	; 2
   1d5ee:	68 df       	rcall	.-304    	; 0x1d4c0 <__fp_powser>
   1d5f0:	8b 01       	movw	r16, r22
   1d5f2:	be 01       	movw	r22, r28
   1d5f4:	ec 01       	movw	r28, r24
   1d5f6:	fb 2e       	mov	r15, r27
   1d5f8:	6f 57       	subi	r22, 0x7F	; 127
   1d5fa:	71 09       	sbc	r23, r1
   1d5fc:	75 95       	asr	r23
   1d5fe:	77 1f       	adc	r23, r23
   1d600:	88 0b       	sbc	r24, r24
   1d602:	99 0b       	sbc	r25, r25
   1d604:	0e 94 eb d1 	call	0x1a3d6	; 0x1a3d6 <__floatsisf>
   1d608:	28 e1       	ldi	r18, 0x18	; 24
   1d60a:	32 e7       	ldi	r19, 0x72	; 114
   1d60c:	41 e3       	ldi	r20, 0x31	; 49
   1d60e:	5f e3       	ldi	r21, 0x3F	; 63
   1d610:	0e 94 ab d2 	call	0x1a556	; 0x1a556 <__mulsf3x>
   1d614:	af 2d       	mov	r26, r15
   1d616:	98 01       	movw	r18, r16
   1d618:	ae 01       	movw	r20, r28
   1d61a:	ff 90       	pop	r15
   1d61c:	0f 91       	pop	r16
   1d61e:	1f 91       	pop	r17
   1d620:	cf 91       	pop	r28
   1d622:	df 91       	pop	r29
   1d624:	0e 94 fe d0 	call	0x1a1fc	; 0x1a1fc <__addsf3x>
   1d628:	0c 94 61 d2 	jmp	0x1a4c2	; 0x1a4c2 <__fp_round>

0001d62c <modf>:
   1d62c:	fa 01       	movw	r30, r20
   1d62e:	dc 01       	movw	r26, r24
   1d630:	aa 0f       	add	r26, r26
   1d632:	bb 1f       	adc	r27, r27
   1d634:	9b 01       	movw	r18, r22
   1d636:	ac 01       	movw	r20, r24
   1d638:	bf 57       	subi	r27, 0x7F	; 127
   1d63a:	28 f4       	brcc	.+10     	; 0x1d646 <modf+0x1a>
   1d63c:	22 27       	eor	r18, r18
   1d63e:	33 27       	eor	r19, r19
   1d640:	44 27       	eor	r20, r20
   1d642:	50 78       	andi	r21, 0x80	; 128
   1d644:	20 c0       	rjmp	.+64     	; 0x1d686 <modf+0x5a>
   1d646:	b7 51       	subi	r27, 0x17	; 23
   1d648:	90 f4       	brcc	.+36     	; 0x1d66e <modf+0x42>
   1d64a:	ab 2f       	mov	r26, r27
   1d64c:	00 24       	eor	r0, r0
   1d64e:	46 95       	lsr	r20
   1d650:	37 95       	ror	r19
   1d652:	27 95       	ror	r18
   1d654:	01 1c       	adc	r0, r1
   1d656:	a3 95       	inc	r26
   1d658:	d2 f3       	brmi	.-12     	; 0x1d64e <modf+0x22>
   1d65a:	00 20       	and	r0, r0
   1d65c:	71 f0       	breq	.+28     	; 0x1d67a <modf+0x4e>
   1d65e:	22 0f       	add	r18, r18
   1d660:	33 1f       	adc	r19, r19
   1d662:	44 1f       	adc	r20, r20
   1d664:	b3 95       	inc	r27
   1d666:	da f3       	brmi	.-10     	; 0x1d65e <modf+0x32>
   1d668:	0e d0       	rcall	.+28     	; 0x1d686 <modf+0x5a>
   1d66a:	0c 94 ec d0 	jmp	0x1a1d8	; 0x1a1d8 <__subsf3>
   1d66e:	61 30       	cpi	r22, 0x01	; 1
   1d670:	71 05       	cpc	r23, r1
   1d672:	a0 e8       	ldi	r26, 0x80	; 128
   1d674:	8a 07       	cpc	r24, r26
   1d676:	b9 46       	sbci	r27, 0x69	; 105
   1d678:	30 f4       	brcc	.+12     	; 0x1d686 <modf+0x5a>
   1d67a:	9b 01       	movw	r18, r22
   1d67c:	ac 01       	movw	r20, r24
   1d67e:	66 27       	eor	r22, r22
   1d680:	77 27       	eor	r23, r23
   1d682:	88 27       	eor	r24, r24
   1d684:	90 78       	andi	r25, 0x80	; 128
   1d686:	30 96       	adiw	r30, 0x00	; 0
   1d688:	21 f0       	breq	.+8      	; 0x1d692 <modf+0x66>
   1d68a:	20 83       	st	Z, r18
   1d68c:	31 83       	std	Z+1, r19	; 0x01
   1d68e:	42 83       	std	Z+2, r20	; 0x02
   1d690:	53 83       	std	Z+3, r21	; 0x03
   1d692:	08 95       	ret

0001d694 <__udivmodqi4>:
   1d694:	99 1b       	sub	r25, r25
   1d696:	79 e0       	ldi	r23, 0x09	; 9
   1d698:	04 c0       	rjmp	.+8      	; 0x1d6a2 <__udivmodqi4_ep>

0001d69a <__udivmodqi4_loop>:
   1d69a:	99 1f       	adc	r25, r25
   1d69c:	96 17       	cp	r25, r22
   1d69e:	08 f0       	brcs	.+2      	; 0x1d6a2 <__udivmodqi4_ep>
   1d6a0:	96 1b       	sub	r25, r22

0001d6a2 <__udivmodqi4_ep>:
   1d6a2:	88 1f       	adc	r24, r24
   1d6a4:	7a 95       	dec	r23
   1d6a6:	c9 f7       	brne	.-14     	; 0x1d69a <__udivmodqi4_loop>
   1d6a8:	80 95       	com	r24
   1d6aa:	08 95       	ret

0001d6ac <__udivmodhi4>:
   1d6ac:	aa 1b       	sub	r26, r26
   1d6ae:	bb 1b       	sub	r27, r27
   1d6b0:	51 e1       	ldi	r21, 0x11	; 17
   1d6b2:	07 c0       	rjmp	.+14     	; 0x1d6c2 <__udivmodhi4_ep>

0001d6b4 <__udivmodhi4_loop>:
   1d6b4:	aa 1f       	adc	r26, r26
   1d6b6:	bb 1f       	adc	r27, r27
   1d6b8:	a6 17       	cp	r26, r22
   1d6ba:	b7 07       	cpc	r27, r23
   1d6bc:	10 f0       	brcs	.+4      	; 0x1d6c2 <__udivmodhi4_ep>
   1d6be:	a6 1b       	sub	r26, r22
   1d6c0:	b7 0b       	sbc	r27, r23

0001d6c2 <__udivmodhi4_ep>:
   1d6c2:	88 1f       	adc	r24, r24
   1d6c4:	99 1f       	adc	r25, r25
   1d6c6:	5a 95       	dec	r21
   1d6c8:	a9 f7       	brne	.-22     	; 0x1d6b4 <__udivmodhi4_loop>
   1d6ca:	80 95       	com	r24
   1d6cc:	90 95       	com	r25
   1d6ce:	bc 01       	movw	r22, r24
   1d6d0:	cd 01       	movw	r24, r26
   1d6d2:	08 95       	ret

0001d6d4 <__divmodhi4>:
   1d6d4:	97 fb       	bst	r25, 7
   1d6d6:	07 2e       	mov	r0, r23
   1d6d8:	16 f4       	brtc	.+4      	; 0x1d6de <__divmodhi4+0xa>
   1d6da:	00 94       	com	r0
   1d6dc:	06 d0       	rcall	.+12     	; 0x1d6ea <__divmodhi4_neg1>
   1d6de:	77 fd       	sbrc	r23, 7
   1d6e0:	08 d0       	rcall	.+16     	; 0x1d6f2 <__divmodhi4_neg2>
   1d6e2:	e4 df       	rcall	.-56     	; 0x1d6ac <__udivmodhi4>
   1d6e4:	07 fc       	sbrc	r0, 7
   1d6e6:	05 d0       	rcall	.+10     	; 0x1d6f2 <__divmodhi4_neg2>
   1d6e8:	3e f4       	brtc	.+14     	; 0x1d6f8 <__divmodhi4_exit>

0001d6ea <__divmodhi4_neg1>:
   1d6ea:	90 95       	com	r25
   1d6ec:	81 95       	neg	r24
   1d6ee:	9f 4f       	sbci	r25, 0xFF	; 255
   1d6f0:	08 95       	ret

0001d6f2 <__divmodhi4_neg2>:
   1d6f2:	70 95       	com	r23
   1d6f4:	61 95       	neg	r22
   1d6f6:	7f 4f       	sbci	r23, 0xFF	; 255

0001d6f8 <__divmodhi4_exit>:
   1d6f8:	08 95       	ret

0001d6fa <__udivmodsi4>:
   1d6fa:	a1 e2       	ldi	r26, 0x21	; 33
   1d6fc:	1a 2e       	mov	r1, r26
   1d6fe:	aa 1b       	sub	r26, r26
   1d700:	bb 1b       	sub	r27, r27
   1d702:	fd 01       	movw	r30, r26
   1d704:	0d c0       	rjmp	.+26     	; 0x1d720 <__udivmodsi4_ep>

0001d706 <__udivmodsi4_loop>:
   1d706:	aa 1f       	adc	r26, r26
   1d708:	bb 1f       	adc	r27, r27
   1d70a:	ee 1f       	adc	r30, r30
   1d70c:	ff 1f       	adc	r31, r31
   1d70e:	a2 17       	cp	r26, r18
   1d710:	b3 07       	cpc	r27, r19
   1d712:	e4 07       	cpc	r30, r20
   1d714:	f5 07       	cpc	r31, r21
   1d716:	20 f0       	brcs	.+8      	; 0x1d720 <__udivmodsi4_ep>
   1d718:	a2 1b       	sub	r26, r18
   1d71a:	b3 0b       	sbc	r27, r19
   1d71c:	e4 0b       	sbc	r30, r20
   1d71e:	f5 0b       	sbc	r31, r21

0001d720 <__udivmodsi4_ep>:
   1d720:	66 1f       	adc	r22, r22
   1d722:	77 1f       	adc	r23, r23
   1d724:	88 1f       	adc	r24, r24
   1d726:	99 1f       	adc	r25, r25
   1d728:	1a 94       	dec	r1
   1d72a:	69 f7       	brne	.-38     	; 0x1d706 <__udivmodsi4_loop>
   1d72c:	60 95       	com	r22
   1d72e:	70 95       	com	r23
   1d730:	80 95       	com	r24
   1d732:	90 95       	com	r25
   1d734:	9b 01       	movw	r18, r22
   1d736:	ac 01       	movw	r20, r24
   1d738:	bd 01       	movw	r22, r26
   1d73a:	cf 01       	movw	r24, r30
   1d73c:	08 95       	ret

0001d73e <__divmodsi4>:
   1d73e:	05 2e       	mov	r0, r21
   1d740:	97 fb       	bst	r25, 7
   1d742:	16 f4       	brtc	.+4      	; 0x1d748 <__divmodsi4+0xa>
   1d744:	00 94       	com	r0
   1d746:	0f d0       	rcall	.+30     	; 0x1d766 <__negsi2>
   1d748:	57 fd       	sbrc	r21, 7
   1d74a:	05 d0       	rcall	.+10     	; 0x1d756 <__divmodsi4_neg2>
   1d74c:	d6 df       	rcall	.-84     	; 0x1d6fa <__udivmodsi4>
   1d74e:	07 fc       	sbrc	r0, 7
   1d750:	02 d0       	rcall	.+4      	; 0x1d756 <__divmodsi4_neg2>
   1d752:	46 f4       	brtc	.+16     	; 0x1d764 <__divmodsi4_exit>
   1d754:	08 c0       	rjmp	.+16     	; 0x1d766 <__negsi2>

0001d756 <__divmodsi4_neg2>:
   1d756:	50 95       	com	r21
   1d758:	40 95       	com	r20
   1d75a:	30 95       	com	r19
   1d75c:	21 95       	neg	r18
   1d75e:	3f 4f       	sbci	r19, 0xFF	; 255
   1d760:	4f 4f       	sbci	r20, 0xFF	; 255
   1d762:	5f 4f       	sbci	r21, 0xFF	; 255

0001d764 <__divmodsi4_exit>:
   1d764:	08 95       	ret

0001d766 <__negsi2>:
   1d766:	90 95       	com	r25
   1d768:	80 95       	com	r24
   1d76a:	70 95       	com	r23
   1d76c:	61 95       	neg	r22
   1d76e:	7f 4f       	sbci	r23, 0xFF	; 255
   1d770:	8f 4f       	sbci	r24, 0xFF	; 255
   1d772:	9f 4f       	sbci	r25, 0xFF	; 255
   1d774:	08 95       	ret

0001d776 <__tablejump2__>:
   1d776:	ee 0f       	add	r30, r30
   1d778:	ff 1f       	adc	r31, r31
   1d77a:	88 1f       	adc	r24, r24
   1d77c:	8b bf       	out	0x3b, r24	; 59
   1d77e:	07 90       	elpm	r0, Z+
   1d780:	f6 91       	elpm	r31, Z
   1d782:	e0 2d       	mov	r30, r0
   1d784:	19 94       	eijmp

0001d786 <__umulhisi3>:
   1d786:	a2 9f       	mul	r26, r18
   1d788:	b0 01       	movw	r22, r0
   1d78a:	b3 9f       	mul	r27, r19
   1d78c:	c0 01       	movw	r24, r0
   1d78e:	a3 9f       	mul	r26, r19
   1d790:	70 0d       	add	r23, r0
   1d792:	81 1d       	adc	r24, r1
   1d794:	11 24       	eor	r1, r1
   1d796:	91 1d       	adc	r25, r1
   1d798:	b2 9f       	mul	r27, r18
   1d79a:	70 0d       	add	r23, r0
   1d79c:	81 1d       	adc	r24, r1
   1d79e:	11 24       	eor	r1, r1
   1d7a0:	91 1d       	adc	r25, r1
   1d7a2:	08 95       	ret

0001d7a4 <__muluhisi3>:
   1d7a4:	f0 df       	rcall	.-32     	; 0x1d786 <__umulhisi3>
   1d7a6:	a5 9f       	mul	r26, r21
   1d7a8:	90 0d       	add	r25, r0
   1d7aa:	b4 9f       	mul	r27, r20
   1d7ac:	90 0d       	add	r25, r0
   1d7ae:	a4 9f       	mul	r26, r20
   1d7b0:	80 0d       	add	r24, r0
   1d7b2:	91 1d       	adc	r25, r1
   1d7b4:	11 24       	eor	r1, r1
   1d7b6:	08 95       	ret

0001d7b8 <__cmpdi2_s8>:
   1d7b8:	00 24       	eor	r0, r0
   1d7ba:	a7 fd       	sbrc	r26, 7
   1d7bc:	00 94       	com	r0
   1d7be:	2a 17       	cp	r18, r26
   1d7c0:	30 05       	cpc	r19, r0
   1d7c2:	40 05       	cpc	r20, r0
   1d7c4:	50 05       	cpc	r21, r0
   1d7c6:	60 05       	cpc	r22, r0
   1d7c8:	70 05       	cpc	r23, r0
   1d7ca:	80 05       	cpc	r24, r0
   1d7cc:	90 05       	cpc	r25, r0
   1d7ce:	08 95       	ret

0001d7d0 <malloc>:
   1d7d0:	0f 93       	push	r16
   1d7d2:	1f 93       	push	r17
   1d7d4:	cf 93       	push	r28
   1d7d6:	df 93       	push	r29
   1d7d8:	82 30       	cpi	r24, 0x02	; 2
   1d7da:	91 05       	cpc	r25, r1
   1d7dc:	10 f4       	brcc	.+4      	; 0x1d7e2 <malloc+0x12>
   1d7de:	82 e0       	ldi	r24, 0x02	; 2
   1d7e0:	90 e0       	ldi	r25, 0x00	; 0
   1d7e2:	e0 91 27 19 	lds	r30, 0x1927	; 0x801927 <__flp>
   1d7e6:	f0 91 28 19 	lds	r31, 0x1928	; 0x801928 <__flp+0x1>
   1d7ea:	20 e0       	ldi	r18, 0x00	; 0
   1d7ec:	30 e0       	ldi	r19, 0x00	; 0
   1d7ee:	a0 e0       	ldi	r26, 0x00	; 0
   1d7f0:	b0 e0       	ldi	r27, 0x00	; 0
   1d7f2:	30 97       	sbiw	r30, 0x00	; 0
   1d7f4:	19 f1       	breq	.+70     	; 0x1d83c <malloc+0x6c>
   1d7f6:	40 81       	ld	r20, Z
   1d7f8:	51 81       	ldd	r21, Z+1	; 0x01
   1d7fa:	02 81       	ldd	r16, Z+2	; 0x02
   1d7fc:	13 81       	ldd	r17, Z+3	; 0x03
   1d7fe:	48 17       	cp	r20, r24
   1d800:	59 07       	cpc	r21, r25
   1d802:	c8 f0       	brcs	.+50     	; 0x1d836 <malloc+0x66>
   1d804:	84 17       	cp	r24, r20
   1d806:	95 07       	cpc	r25, r21
   1d808:	69 f4       	brne	.+26     	; 0x1d824 <malloc+0x54>
   1d80a:	10 97       	sbiw	r26, 0x00	; 0
   1d80c:	31 f0       	breq	.+12     	; 0x1d81a <malloc+0x4a>
   1d80e:	12 96       	adiw	r26, 0x02	; 2
   1d810:	0c 93       	st	X, r16
   1d812:	12 97       	sbiw	r26, 0x02	; 2
   1d814:	13 96       	adiw	r26, 0x03	; 3
   1d816:	1c 93       	st	X, r17
   1d818:	27 c0       	rjmp	.+78     	; 0x1d868 <malloc+0x98>
   1d81a:	00 93 27 19 	sts	0x1927, r16	; 0x801927 <__flp>
   1d81e:	10 93 28 19 	sts	0x1928, r17	; 0x801928 <__flp+0x1>
   1d822:	22 c0       	rjmp	.+68     	; 0x1d868 <malloc+0x98>
   1d824:	21 15       	cp	r18, r1
   1d826:	31 05       	cpc	r19, r1
   1d828:	19 f0       	breq	.+6      	; 0x1d830 <malloc+0x60>
   1d82a:	42 17       	cp	r20, r18
   1d82c:	53 07       	cpc	r21, r19
   1d82e:	18 f4       	brcc	.+6      	; 0x1d836 <malloc+0x66>
   1d830:	9a 01       	movw	r18, r20
   1d832:	bd 01       	movw	r22, r26
   1d834:	ef 01       	movw	r28, r30
   1d836:	df 01       	movw	r26, r30
   1d838:	f8 01       	movw	r30, r16
   1d83a:	db cf       	rjmp	.-74     	; 0x1d7f2 <malloc+0x22>
   1d83c:	21 15       	cp	r18, r1
   1d83e:	31 05       	cpc	r19, r1
   1d840:	f9 f0       	breq	.+62     	; 0x1d880 <malloc+0xb0>
   1d842:	28 1b       	sub	r18, r24
   1d844:	39 0b       	sbc	r19, r25
   1d846:	24 30       	cpi	r18, 0x04	; 4
   1d848:	31 05       	cpc	r19, r1
   1d84a:	80 f4       	brcc	.+32     	; 0x1d86c <malloc+0x9c>
   1d84c:	8a 81       	ldd	r24, Y+2	; 0x02
   1d84e:	9b 81       	ldd	r25, Y+3	; 0x03
   1d850:	61 15       	cp	r22, r1
   1d852:	71 05       	cpc	r23, r1
   1d854:	21 f0       	breq	.+8      	; 0x1d85e <malloc+0x8e>
   1d856:	fb 01       	movw	r30, r22
   1d858:	93 83       	std	Z+3, r25	; 0x03
   1d85a:	82 83       	std	Z+2, r24	; 0x02
   1d85c:	04 c0       	rjmp	.+8      	; 0x1d866 <malloc+0x96>
   1d85e:	90 93 28 19 	sts	0x1928, r25	; 0x801928 <__flp+0x1>
   1d862:	80 93 27 19 	sts	0x1927, r24	; 0x801927 <__flp>
   1d866:	fe 01       	movw	r30, r28
   1d868:	32 96       	adiw	r30, 0x02	; 2
   1d86a:	44 c0       	rjmp	.+136    	; 0x1d8f4 <malloc+0x124>
   1d86c:	fe 01       	movw	r30, r28
   1d86e:	e2 0f       	add	r30, r18
   1d870:	f3 1f       	adc	r31, r19
   1d872:	81 93       	st	Z+, r24
   1d874:	91 93       	st	Z+, r25
   1d876:	22 50       	subi	r18, 0x02	; 2
   1d878:	31 09       	sbc	r19, r1
   1d87a:	39 83       	std	Y+1, r19	; 0x01
   1d87c:	28 83       	st	Y, r18
   1d87e:	3a c0       	rjmp	.+116    	; 0x1d8f4 <malloc+0x124>
   1d880:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d884:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d888:	23 2b       	or	r18, r19
   1d88a:	41 f4       	brne	.+16     	; 0x1d89c <malloc+0xcc>
   1d88c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
   1d890:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
   1d894:	30 93 26 19 	sts	0x1926, r19	; 0x801926 <__brkval+0x1>
   1d898:	20 93 25 19 	sts	0x1925, r18	; 0x801925 <__brkval>
   1d89c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
   1d8a0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
   1d8a4:	21 15       	cp	r18, r1
   1d8a6:	31 05       	cpc	r19, r1
   1d8a8:	41 f4       	brne	.+16     	; 0x1d8ba <malloc+0xea>
   1d8aa:	2d b7       	in	r18, 0x3d	; 61
   1d8ac:	3e b7       	in	r19, 0x3e	; 62
   1d8ae:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
   1d8b2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
   1d8b6:	24 1b       	sub	r18, r20
   1d8b8:	35 0b       	sbc	r19, r21
   1d8ba:	e0 91 25 19 	lds	r30, 0x1925	; 0x801925 <__brkval>
   1d8be:	f0 91 26 19 	lds	r31, 0x1926	; 0x801926 <__brkval+0x1>
   1d8c2:	e2 17       	cp	r30, r18
   1d8c4:	f3 07       	cpc	r31, r19
   1d8c6:	a0 f4       	brcc	.+40     	; 0x1d8f0 <malloc+0x120>
   1d8c8:	2e 1b       	sub	r18, r30
   1d8ca:	3f 0b       	sbc	r19, r31
   1d8cc:	28 17       	cp	r18, r24
   1d8ce:	39 07       	cpc	r19, r25
   1d8d0:	78 f0       	brcs	.+30     	; 0x1d8f0 <malloc+0x120>
   1d8d2:	ac 01       	movw	r20, r24
   1d8d4:	4e 5f       	subi	r20, 0xFE	; 254
   1d8d6:	5f 4f       	sbci	r21, 0xFF	; 255
   1d8d8:	24 17       	cp	r18, r20
   1d8da:	35 07       	cpc	r19, r21
   1d8dc:	48 f0       	brcs	.+18     	; 0x1d8f0 <malloc+0x120>
   1d8de:	4e 0f       	add	r20, r30
   1d8e0:	5f 1f       	adc	r21, r31
   1d8e2:	50 93 26 19 	sts	0x1926, r21	; 0x801926 <__brkval+0x1>
   1d8e6:	40 93 25 19 	sts	0x1925, r20	; 0x801925 <__brkval>
   1d8ea:	81 93       	st	Z+, r24
   1d8ec:	91 93       	st	Z+, r25
   1d8ee:	02 c0       	rjmp	.+4      	; 0x1d8f4 <malloc+0x124>
   1d8f0:	e0 e0       	ldi	r30, 0x00	; 0
   1d8f2:	f0 e0       	ldi	r31, 0x00	; 0
   1d8f4:	cf 01       	movw	r24, r30
   1d8f6:	df 91       	pop	r29
   1d8f8:	cf 91       	pop	r28
   1d8fa:	1f 91       	pop	r17
   1d8fc:	0f 91       	pop	r16
   1d8fe:	08 95       	ret

0001d900 <free>:
   1d900:	cf 93       	push	r28
   1d902:	df 93       	push	r29
   1d904:	00 97       	sbiw	r24, 0x00	; 0
   1d906:	09 f4       	brne	.+2      	; 0x1d90a <free+0xa>
   1d908:	81 c0       	rjmp	.+258    	; 0x1da0c <free+0x10c>
   1d90a:	fc 01       	movw	r30, r24
   1d90c:	32 97       	sbiw	r30, 0x02	; 2
   1d90e:	13 82       	std	Z+3, r1	; 0x03
   1d910:	12 82       	std	Z+2, r1	; 0x02
   1d912:	a0 91 27 19 	lds	r26, 0x1927	; 0x801927 <__flp>
   1d916:	b0 91 28 19 	lds	r27, 0x1928	; 0x801928 <__flp+0x1>
   1d91a:	10 97       	sbiw	r26, 0x00	; 0
   1d91c:	81 f4       	brne	.+32     	; 0x1d93e <free+0x3e>
   1d91e:	20 81       	ld	r18, Z
   1d920:	31 81       	ldd	r19, Z+1	; 0x01
   1d922:	82 0f       	add	r24, r18
   1d924:	93 1f       	adc	r25, r19
   1d926:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d92a:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d92e:	28 17       	cp	r18, r24
   1d930:	39 07       	cpc	r19, r25
   1d932:	51 f5       	brne	.+84     	; 0x1d988 <free+0x88>
   1d934:	f0 93 26 19 	sts	0x1926, r31	; 0x801926 <__brkval+0x1>
   1d938:	e0 93 25 19 	sts	0x1925, r30	; 0x801925 <__brkval>
   1d93c:	67 c0       	rjmp	.+206    	; 0x1da0c <free+0x10c>
   1d93e:	ed 01       	movw	r28, r26
   1d940:	20 e0       	ldi	r18, 0x00	; 0
   1d942:	30 e0       	ldi	r19, 0x00	; 0
   1d944:	ce 17       	cp	r28, r30
   1d946:	df 07       	cpc	r29, r31
   1d948:	40 f4       	brcc	.+16     	; 0x1d95a <free+0x5a>
   1d94a:	4a 81       	ldd	r20, Y+2	; 0x02
   1d94c:	5b 81       	ldd	r21, Y+3	; 0x03
   1d94e:	9e 01       	movw	r18, r28
   1d950:	41 15       	cp	r20, r1
   1d952:	51 05       	cpc	r21, r1
   1d954:	f1 f0       	breq	.+60     	; 0x1d992 <free+0x92>
   1d956:	ea 01       	movw	r28, r20
   1d958:	f5 cf       	rjmp	.-22     	; 0x1d944 <free+0x44>
   1d95a:	d3 83       	std	Z+3, r29	; 0x03
   1d95c:	c2 83       	std	Z+2, r28	; 0x02
   1d95e:	40 81       	ld	r20, Z
   1d960:	51 81       	ldd	r21, Z+1	; 0x01
   1d962:	84 0f       	add	r24, r20
   1d964:	95 1f       	adc	r25, r21
   1d966:	c8 17       	cp	r28, r24
   1d968:	d9 07       	cpc	r29, r25
   1d96a:	59 f4       	brne	.+22     	; 0x1d982 <free+0x82>
   1d96c:	88 81       	ld	r24, Y
   1d96e:	99 81       	ldd	r25, Y+1	; 0x01
   1d970:	84 0f       	add	r24, r20
   1d972:	95 1f       	adc	r25, r21
   1d974:	02 96       	adiw	r24, 0x02	; 2
   1d976:	91 83       	std	Z+1, r25	; 0x01
   1d978:	80 83       	st	Z, r24
   1d97a:	8a 81       	ldd	r24, Y+2	; 0x02
   1d97c:	9b 81       	ldd	r25, Y+3	; 0x03
   1d97e:	93 83       	std	Z+3, r25	; 0x03
   1d980:	82 83       	std	Z+2, r24	; 0x02
   1d982:	21 15       	cp	r18, r1
   1d984:	31 05       	cpc	r19, r1
   1d986:	29 f4       	brne	.+10     	; 0x1d992 <free+0x92>
   1d988:	f0 93 28 19 	sts	0x1928, r31	; 0x801928 <__flp+0x1>
   1d98c:	e0 93 27 19 	sts	0x1927, r30	; 0x801927 <__flp>
   1d990:	3d c0       	rjmp	.+122    	; 0x1da0c <free+0x10c>
   1d992:	e9 01       	movw	r28, r18
   1d994:	fb 83       	std	Y+3, r31	; 0x03
   1d996:	ea 83       	std	Y+2, r30	; 0x02
   1d998:	49 91       	ld	r20, Y+
   1d99a:	59 91       	ld	r21, Y+
   1d99c:	c4 0f       	add	r28, r20
   1d99e:	d5 1f       	adc	r29, r21
   1d9a0:	ec 17       	cp	r30, r28
   1d9a2:	fd 07       	cpc	r31, r29
   1d9a4:	61 f4       	brne	.+24     	; 0x1d9be <free+0xbe>
   1d9a6:	80 81       	ld	r24, Z
   1d9a8:	91 81       	ldd	r25, Z+1	; 0x01
   1d9aa:	84 0f       	add	r24, r20
   1d9ac:	95 1f       	adc	r25, r21
   1d9ae:	02 96       	adiw	r24, 0x02	; 2
   1d9b0:	e9 01       	movw	r28, r18
   1d9b2:	99 83       	std	Y+1, r25	; 0x01
   1d9b4:	88 83       	st	Y, r24
   1d9b6:	82 81       	ldd	r24, Z+2	; 0x02
   1d9b8:	93 81       	ldd	r25, Z+3	; 0x03
   1d9ba:	9b 83       	std	Y+3, r25	; 0x03
   1d9bc:	8a 83       	std	Y+2, r24	; 0x02
   1d9be:	e0 e0       	ldi	r30, 0x00	; 0
   1d9c0:	f0 e0       	ldi	r31, 0x00	; 0
   1d9c2:	12 96       	adiw	r26, 0x02	; 2
   1d9c4:	8d 91       	ld	r24, X+
   1d9c6:	9c 91       	ld	r25, X
   1d9c8:	13 97       	sbiw	r26, 0x03	; 3
   1d9ca:	00 97       	sbiw	r24, 0x00	; 0
   1d9cc:	19 f0       	breq	.+6      	; 0x1d9d4 <free+0xd4>
   1d9ce:	fd 01       	movw	r30, r26
   1d9d0:	dc 01       	movw	r26, r24
   1d9d2:	f7 cf       	rjmp	.-18     	; 0x1d9c2 <free+0xc2>
   1d9d4:	8d 91       	ld	r24, X+
   1d9d6:	9c 91       	ld	r25, X
   1d9d8:	11 97       	sbiw	r26, 0x01	; 1
   1d9da:	9d 01       	movw	r18, r26
   1d9dc:	2e 5f       	subi	r18, 0xFE	; 254
   1d9de:	3f 4f       	sbci	r19, 0xFF	; 255
   1d9e0:	82 0f       	add	r24, r18
   1d9e2:	93 1f       	adc	r25, r19
   1d9e4:	20 91 25 19 	lds	r18, 0x1925	; 0x801925 <__brkval>
   1d9e8:	30 91 26 19 	lds	r19, 0x1926	; 0x801926 <__brkval+0x1>
   1d9ec:	28 17       	cp	r18, r24
   1d9ee:	39 07       	cpc	r19, r25
   1d9f0:	69 f4       	brne	.+26     	; 0x1da0c <free+0x10c>
   1d9f2:	30 97       	sbiw	r30, 0x00	; 0
   1d9f4:	29 f4       	brne	.+10     	; 0x1da00 <free+0x100>
   1d9f6:	10 92 28 19 	sts	0x1928, r1	; 0x801928 <__flp+0x1>
   1d9fa:	10 92 27 19 	sts	0x1927, r1	; 0x801927 <__flp>
   1d9fe:	02 c0       	rjmp	.+4      	; 0x1da04 <free+0x104>
   1da00:	13 82       	std	Z+3, r1	; 0x03
   1da02:	12 82       	std	Z+2, r1	; 0x02
   1da04:	b0 93 26 19 	sts	0x1926, r27	; 0x801926 <__brkval+0x1>
   1da08:	a0 93 25 19 	sts	0x1925, r26	; 0x801925 <__brkval>
   1da0c:	df 91       	pop	r29
   1da0e:	cf 91       	pop	r28
   1da10:	08 95       	ret

0001da12 <random_r>:
   1da12:	8f 92       	push	r8
   1da14:	9f 92       	push	r9
   1da16:	af 92       	push	r10
   1da18:	bf 92       	push	r11
   1da1a:	cf 92       	push	r12
   1da1c:	df 92       	push	r13
   1da1e:	ef 92       	push	r14
   1da20:	ff 92       	push	r15
   1da22:	cf 93       	push	r28
   1da24:	df 93       	push	r29
   1da26:	ec 01       	movw	r28, r24
   1da28:	68 81       	ld	r22, Y
   1da2a:	79 81       	ldd	r23, Y+1	; 0x01
   1da2c:	8a 81       	ldd	r24, Y+2	; 0x02
   1da2e:	9b 81       	ldd	r25, Y+3	; 0x03
   1da30:	61 15       	cp	r22, r1
   1da32:	71 05       	cpc	r23, r1
   1da34:	81 05       	cpc	r24, r1
   1da36:	91 05       	cpc	r25, r1
   1da38:	21 f4       	brne	.+8      	; 0x1da42 <random_r+0x30>
   1da3a:	64 e2       	ldi	r22, 0x24	; 36
   1da3c:	79 ed       	ldi	r23, 0xD9	; 217
   1da3e:	8b e5       	ldi	r24, 0x5B	; 91
   1da40:	97 e0       	ldi	r25, 0x07	; 7
   1da42:	2d e1       	ldi	r18, 0x1D	; 29
   1da44:	33 ef       	ldi	r19, 0xF3	; 243
   1da46:	41 e0       	ldi	r20, 0x01	; 1
   1da48:	50 e0       	ldi	r21, 0x00	; 0
   1da4a:	79 de       	rcall	.-782    	; 0x1d73e <__divmodsi4>
   1da4c:	49 01       	movw	r8, r18
   1da4e:	5a 01       	movw	r10, r20
   1da50:	9b 01       	movw	r18, r22
   1da52:	ac 01       	movw	r20, r24
   1da54:	a7 ea       	ldi	r26, 0xA7	; 167
   1da56:	b1 e4       	ldi	r27, 0x41	; 65
   1da58:	a5 de       	rcall	.-694    	; 0x1d7a4 <__muluhisi3>
   1da5a:	6b 01       	movw	r12, r22
   1da5c:	7c 01       	movw	r14, r24
   1da5e:	ac ee       	ldi	r26, 0xEC	; 236
   1da60:	b4 ef       	ldi	r27, 0xF4	; 244
   1da62:	a5 01       	movw	r20, r10
   1da64:	94 01       	movw	r18, r8
   1da66:	bd d3       	rcall	.+1914   	; 0x1e1e2 <__mulohisi3>
   1da68:	dc 01       	movw	r26, r24
   1da6a:	cb 01       	movw	r24, r22
   1da6c:	8c 0d       	add	r24, r12
   1da6e:	9d 1d       	adc	r25, r13
   1da70:	ae 1d       	adc	r26, r14
   1da72:	bf 1d       	adc	r27, r15
   1da74:	b7 ff       	sbrs	r27, 7
   1da76:	03 c0       	rjmp	.+6      	; 0x1da7e <random_r+0x6c>
   1da78:	01 97       	sbiw	r24, 0x01	; 1
   1da7a:	a1 09       	sbc	r26, r1
   1da7c:	b0 48       	sbci	r27, 0x80	; 128
   1da7e:	88 83       	st	Y, r24
   1da80:	99 83       	std	Y+1, r25	; 0x01
   1da82:	aa 83       	std	Y+2, r26	; 0x02
   1da84:	bb 83       	std	Y+3, r27	; 0x03
   1da86:	bc 01       	movw	r22, r24
   1da88:	cd 01       	movw	r24, r26
   1da8a:	9f 77       	andi	r25, 0x7F	; 127
   1da8c:	df 91       	pop	r29
   1da8e:	cf 91       	pop	r28
   1da90:	ff 90       	pop	r15
   1da92:	ef 90       	pop	r14
   1da94:	df 90       	pop	r13
   1da96:	cf 90       	pop	r12
   1da98:	bf 90       	pop	r11
   1da9a:	af 90       	pop	r10
   1da9c:	9f 90       	pop	r9
   1da9e:	8f 90       	pop	r8
   1daa0:	08 95       	ret

0001daa2 <random>:
   1daa2:	8f 92       	push	r8
   1daa4:	9f 92       	push	r9
   1daa6:	af 92       	push	r10
   1daa8:	bf 92       	push	r11
   1daaa:	cf 92       	push	r12
   1daac:	df 92       	push	r13
   1daae:	ef 92       	push	r14
   1dab0:	ff 92       	push	r15
   1dab2:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <next>
   1dab6:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <next+0x1>
   1daba:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <next+0x2>
   1dabe:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <next+0x3>
   1dac2:	61 15       	cp	r22, r1
   1dac4:	71 05       	cpc	r23, r1
   1dac6:	81 05       	cpc	r24, r1
   1dac8:	91 05       	cpc	r25, r1
   1daca:	21 f4       	brne	.+8      	; 0x1dad4 <random+0x32>
   1dacc:	64 e2       	ldi	r22, 0x24	; 36
   1dace:	79 ed       	ldi	r23, 0xD9	; 217
   1dad0:	8b e5       	ldi	r24, 0x5B	; 91
   1dad2:	97 e0       	ldi	r25, 0x07	; 7
   1dad4:	2d e1       	ldi	r18, 0x1D	; 29
   1dad6:	33 ef       	ldi	r19, 0xF3	; 243
   1dad8:	41 e0       	ldi	r20, 0x01	; 1
   1dada:	50 e0       	ldi	r21, 0x00	; 0
   1dadc:	30 de       	rcall	.-928    	; 0x1d73e <__divmodsi4>
   1dade:	49 01       	movw	r8, r18
   1dae0:	5a 01       	movw	r10, r20
   1dae2:	9b 01       	movw	r18, r22
   1dae4:	ac 01       	movw	r20, r24
   1dae6:	a7 ea       	ldi	r26, 0xA7	; 167
   1dae8:	b1 e4       	ldi	r27, 0x41	; 65
   1daea:	5c de       	rcall	.-840    	; 0x1d7a4 <__muluhisi3>
   1daec:	6b 01       	movw	r12, r22
   1daee:	7c 01       	movw	r14, r24
   1daf0:	ac ee       	ldi	r26, 0xEC	; 236
   1daf2:	b4 ef       	ldi	r27, 0xF4	; 244
   1daf4:	a5 01       	movw	r20, r10
   1daf6:	94 01       	movw	r18, r8
   1daf8:	74 d3       	rcall	.+1768   	; 0x1e1e2 <__mulohisi3>
   1dafa:	dc 01       	movw	r26, r24
   1dafc:	cb 01       	movw	r24, r22
   1dafe:	8c 0d       	add	r24, r12
   1db00:	9d 1d       	adc	r25, r13
   1db02:	ae 1d       	adc	r26, r14
   1db04:	bf 1d       	adc	r27, r15
   1db06:	b7 ff       	sbrs	r27, 7
   1db08:	03 c0       	rjmp	.+6      	; 0x1db10 <random+0x6e>
   1db0a:	01 97       	sbiw	r24, 0x01	; 1
   1db0c:	a1 09       	sbc	r26, r1
   1db0e:	b0 48       	sbci	r27, 0x80	; 128
   1db10:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
   1db14:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
   1db18:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
   1db1c:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
   1db20:	bc 01       	movw	r22, r24
   1db22:	cd 01       	movw	r24, r26
   1db24:	9f 77       	andi	r25, 0x7F	; 127
   1db26:	ff 90       	pop	r15
   1db28:	ef 90       	pop	r14
   1db2a:	df 90       	pop	r13
   1db2c:	cf 90       	pop	r12
   1db2e:	bf 90       	pop	r11
   1db30:	af 90       	pop	r10
   1db32:	9f 90       	pop	r9
   1db34:	8f 90       	pop	r8
   1db36:	08 95       	ret

0001db38 <srandom>:
   1db38:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <next>
   1db3c:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <next+0x1>
   1db40:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <next+0x2>
   1db44:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <next+0x3>
   1db48:	08 95       	ret

0001db4a <abort>:
   1db4a:	81 e0       	ldi	r24, 0x01	; 1
   1db4c:	90 e0       	ldi	r25, 0x00	; 0
   1db4e:	f8 94       	cli
   1db50:	4c c3       	rjmp	.+1688   	; 0x1e1ea <_exit>

0001db52 <memcpy_P>:
   1db52:	fb 01       	movw	r30, r22
   1db54:	dc 01       	movw	r26, r24
   1db56:	02 c0       	rjmp	.+4      	; 0x1db5c <memcpy_P+0xa>
   1db58:	05 90       	lpm	r0, Z+
   1db5a:	0d 92       	st	X+, r0
   1db5c:	41 50       	subi	r20, 0x01	; 1
   1db5e:	50 40       	sbci	r21, 0x00	; 0
   1db60:	d8 f7       	brcc	.-10     	; 0x1db58 <memcpy_P+0x6>
   1db62:	08 95       	ret

0001db64 <strcmp_P>:
   1db64:	fb 01       	movw	r30, r22
   1db66:	dc 01       	movw	r26, r24
   1db68:	8d 91       	ld	r24, X+
   1db6a:	05 90       	lpm	r0, Z+
   1db6c:	80 19       	sub	r24, r0
   1db6e:	01 10       	cpse	r0, r1
   1db70:	d9 f3       	breq	.-10     	; 0x1db68 <strcmp_P+0x4>
   1db72:	99 0b       	sbc	r25, r25
   1db74:	08 95       	ret

0001db76 <__strlen_P>:
   1db76:	fc 01       	movw	r30, r24
   1db78:	05 90       	lpm	r0, Z+
   1db7a:	00 20       	and	r0, r0
   1db7c:	e9 f7       	brne	.-6      	; 0x1db78 <__strlen_P+0x2>
   1db7e:	80 95       	com	r24
   1db80:	90 95       	com	r25
   1db82:	8e 0f       	add	r24, r30
   1db84:	9f 1f       	adc	r25, r31
   1db86:	08 95       	ret

0001db88 <memcpy>:
   1db88:	fb 01       	movw	r30, r22
   1db8a:	dc 01       	movw	r26, r24
   1db8c:	02 c0       	rjmp	.+4      	; 0x1db92 <memcpy+0xa>
   1db8e:	01 90       	ld	r0, Z+
   1db90:	0d 92       	st	X+, r0
   1db92:	41 50       	subi	r20, 0x01	; 1
   1db94:	50 40       	sbci	r21, 0x00	; 0
   1db96:	d8 f7       	brcc	.-10     	; 0x1db8e <memcpy+0x6>
   1db98:	08 95       	ret

0001db9a <memset>:
   1db9a:	dc 01       	movw	r26, r24
   1db9c:	01 c0       	rjmp	.+2      	; 0x1dba0 <memset+0x6>
   1db9e:	6d 93       	st	X+, r22
   1dba0:	41 50       	subi	r20, 0x01	; 1
   1dba2:	50 40       	sbci	r21, 0x00	; 0
   1dba4:	e0 f7       	brcc	.-8      	; 0x1db9e <memset+0x4>
   1dba6:	08 95       	ret

0001dba8 <strcmp>:
   1dba8:	fb 01       	movw	r30, r22
   1dbaa:	dc 01       	movw	r26, r24
   1dbac:	8d 91       	ld	r24, X+
   1dbae:	01 90       	ld	r0, Z+
   1dbb0:	80 19       	sub	r24, r0
   1dbb2:	01 10       	cpse	r0, r1
   1dbb4:	d9 f3       	breq	.-10     	; 0x1dbac <strcmp+0x4>
   1dbb6:	99 0b       	sbc	r25, r25
   1dbb8:	08 95       	ret

0001dbba <strcpy>:
   1dbba:	fb 01       	movw	r30, r22
   1dbbc:	dc 01       	movw	r26, r24
   1dbbe:	01 90       	ld	r0, Z+
   1dbc0:	0d 92       	st	X+, r0
   1dbc2:	00 20       	and	r0, r0
   1dbc4:	e1 f7       	brne	.-8      	; 0x1dbbe <strcpy+0x4>
   1dbc6:	08 95       	ret

0001dbc8 <strstr>:
   1dbc8:	fb 01       	movw	r30, r22
   1dbca:	51 91       	ld	r21, Z+
   1dbcc:	55 23       	and	r21, r21
   1dbce:	a9 f0       	breq	.+42     	; 0x1dbfa <strstr+0x32>
   1dbd0:	bf 01       	movw	r22, r30
   1dbd2:	dc 01       	movw	r26, r24
   1dbd4:	4d 91       	ld	r20, X+
   1dbd6:	45 17       	cp	r20, r21
   1dbd8:	41 11       	cpse	r20, r1
   1dbda:	e1 f7       	brne	.-8      	; 0x1dbd4 <strstr+0xc>
   1dbdc:	59 f4       	brne	.+22     	; 0x1dbf4 <strstr+0x2c>
   1dbde:	cd 01       	movw	r24, r26
   1dbe0:	01 90       	ld	r0, Z+
   1dbe2:	00 20       	and	r0, r0
   1dbe4:	49 f0       	breq	.+18     	; 0x1dbf8 <strstr+0x30>
   1dbe6:	4d 91       	ld	r20, X+
   1dbe8:	40 15       	cp	r20, r0
   1dbea:	41 11       	cpse	r20, r1
   1dbec:	c9 f3       	breq	.-14     	; 0x1dbe0 <strstr+0x18>
   1dbee:	fb 01       	movw	r30, r22
   1dbf0:	41 11       	cpse	r20, r1
   1dbf2:	ef cf       	rjmp	.-34     	; 0x1dbd2 <strstr+0xa>
   1dbf4:	81 e0       	ldi	r24, 0x01	; 1
   1dbf6:	90 e0       	ldi	r25, 0x00	; 0
   1dbf8:	01 97       	sbiw	r24, 0x01	; 1
   1dbfa:	08 95       	ret

0001dbfc <sprintf>:
   1dbfc:	0f 93       	push	r16
   1dbfe:	1f 93       	push	r17
   1dc00:	cf 93       	push	r28
   1dc02:	df 93       	push	r29
   1dc04:	cd b7       	in	r28, 0x3d	; 61
   1dc06:	de b7       	in	r29, 0x3e	; 62
   1dc08:	2e 97       	sbiw	r28, 0x0e	; 14
   1dc0a:	0f b6       	in	r0, 0x3f	; 63
   1dc0c:	f8 94       	cli
   1dc0e:	de bf       	out	0x3e, r29	; 62
   1dc10:	0f be       	out	0x3f, r0	; 63
   1dc12:	cd bf       	out	0x3d, r28	; 61
   1dc14:	0e 89       	ldd	r16, Y+22	; 0x16
   1dc16:	1f 89       	ldd	r17, Y+23	; 0x17
   1dc18:	86 e0       	ldi	r24, 0x06	; 6
   1dc1a:	8c 83       	std	Y+4, r24	; 0x04
   1dc1c:	1a 83       	std	Y+2, r17	; 0x02
   1dc1e:	09 83       	std	Y+1, r16	; 0x01
   1dc20:	8f ef       	ldi	r24, 0xFF	; 255
   1dc22:	9f e7       	ldi	r25, 0x7F	; 127
   1dc24:	9e 83       	std	Y+6, r25	; 0x06
   1dc26:	8d 83       	std	Y+5, r24	; 0x05
   1dc28:	ae 01       	movw	r20, r28
   1dc2a:	46 5e       	subi	r20, 0xE6	; 230
   1dc2c:	5f 4f       	sbci	r21, 0xFF	; 255
   1dc2e:	68 8d       	ldd	r22, Y+24	; 0x18
   1dc30:	79 8d       	ldd	r23, Y+25	; 0x19
   1dc32:	ce 01       	movw	r24, r28
   1dc34:	01 96       	adiw	r24, 0x01	; 1
   1dc36:	10 d0       	rcall	.+32     	; 0x1dc58 <vfprintf>
   1dc38:	ef 81       	ldd	r30, Y+7	; 0x07
   1dc3a:	f8 85       	ldd	r31, Y+8	; 0x08
   1dc3c:	e0 0f       	add	r30, r16
   1dc3e:	f1 1f       	adc	r31, r17
   1dc40:	10 82       	st	Z, r1
   1dc42:	2e 96       	adiw	r28, 0x0e	; 14
   1dc44:	0f b6       	in	r0, 0x3f	; 63
   1dc46:	f8 94       	cli
   1dc48:	de bf       	out	0x3e, r29	; 62
   1dc4a:	0f be       	out	0x3f, r0	; 63
   1dc4c:	cd bf       	out	0x3d, r28	; 61
   1dc4e:	df 91       	pop	r29
   1dc50:	cf 91       	pop	r28
   1dc52:	1f 91       	pop	r17
   1dc54:	0f 91       	pop	r16
   1dc56:	08 95       	ret

0001dc58 <vfprintf>:
   1dc58:	2f 92       	push	r2
   1dc5a:	3f 92       	push	r3
   1dc5c:	4f 92       	push	r4
   1dc5e:	5f 92       	push	r5
   1dc60:	6f 92       	push	r6
   1dc62:	7f 92       	push	r7
   1dc64:	8f 92       	push	r8
   1dc66:	9f 92       	push	r9
   1dc68:	af 92       	push	r10
   1dc6a:	bf 92       	push	r11
   1dc6c:	cf 92       	push	r12
   1dc6e:	df 92       	push	r13
   1dc70:	ef 92       	push	r14
   1dc72:	ff 92       	push	r15
   1dc74:	0f 93       	push	r16
   1dc76:	1f 93       	push	r17
   1dc78:	cf 93       	push	r28
   1dc7a:	df 93       	push	r29
   1dc7c:	cd b7       	in	r28, 0x3d	; 61
   1dc7e:	de b7       	in	r29, 0x3e	; 62
   1dc80:	2b 97       	sbiw	r28, 0x0b	; 11
   1dc82:	0f b6       	in	r0, 0x3f	; 63
   1dc84:	f8 94       	cli
   1dc86:	de bf       	out	0x3e, r29	; 62
   1dc88:	0f be       	out	0x3f, r0	; 63
   1dc8a:	cd bf       	out	0x3d, r28	; 61
   1dc8c:	6c 01       	movw	r12, r24
   1dc8e:	7b 01       	movw	r14, r22
   1dc90:	8a 01       	movw	r16, r20
   1dc92:	fc 01       	movw	r30, r24
   1dc94:	17 82       	std	Z+7, r1	; 0x07
   1dc96:	16 82       	std	Z+6, r1	; 0x06
   1dc98:	83 81       	ldd	r24, Z+3	; 0x03
   1dc9a:	81 ff       	sbrs	r24, 1
   1dc9c:	bf c1       	rjmp	.+894    	; 0x1e01c <vfprintf+0x3c4>
   1dc9e:	ce 01       	movw	r24, r28
   1dca0:	01 96       	adiw	r24, 0x01	; 1
   1dca2:	3c 01       	movw	r6, r24
   1dca4:	f6 01       	movw	r30, r12
   1dca6:	93 81       	ldd	r25, Z+3	; 0x03
   1dca8:	f7 01       	movw	r30, r14
   1dcaa:	93 fd       	sbrc	r25, 3
   1dcac:	85 91       	lpm	r24, Z+
   1dcae:	93 ff       	sbrs	r25, 3
   1dcb0:	81 91       	ld	r24, Z+
   1dcb2:	7f 01       	movw	r14, r30
   1dcb4:	88 23       	and	r24, r24
   1dcb6:	09 f4       	brne	.+2      	; 0x1dcba <vfprintf+0x62>
   1dcb8:	ad c1       	rjmp	.+858    	; 0x1e014 <vfprintf+0x3bc>
   1dcba:	85 32       	cpi	r24, 0x25	; 37
   1dcbc:	39 f4       	brne	.+14     	; 0x1dccc <vfprintf+0x74>
   1dcbe:	93 fd       	sbrc	r25, 3
   1dcc0:	85 91       	lpm	r24, Z+
   1dcc2:	93 ff       	sbrs	r25, 3
   1dcc4:	81 91       	ld	r24, Z+
   1dcc6:	7f 01       	movw	r14, r30
   1dcc8:	85 32       	cpi	r24, 0x25	; 37
   1dcca:	21 f4       	brne	.+8      	; 0x1dcd4 <vfprintf+0x7c>
   1dccc:	b6 01       	movw	r22, r12
   1dcce:	90 e0       	ldi	r25, 0x00	; 0
   1dcd0:	d6 d1       	rcall	.+940    	; 0x1e07e <fputc>
   1dcd2:	e8 cf       	rjmp	.-48     	; 0x1dca4 <vfprintf+0x4c>
   1dcd4:	91 2c       	mov	r9, r1
   1dcd6:	21 2c       	mov	r2, r1
   1dcd8:	31 2c       	mov	r3, r1
   1dcda:	ff e1       	ldi	r31, 0x1F	; 31
   1dcdc:	f3 15       	cp	r31, r3
   1dcde:	d8 f0       	brcs	.+54     	; 0x1dd16 <vfprintf+0xbe>
   1dce0:	8b 32       	cpi	r24, 0x2B	; 43
   1dce2:	79 f0       	breq	.+30     	; 0x1dd02 <vfprintf+0xaa>
   1dce4:	38 f4       	brcc	.+14     	; 0x1dcf4 <vfprintf+0x9c>
   1dce6:	80 32       	cpi	r24, 0x20	; 32
   1dce8:	79 f0       	breq	.+30     	; 0x1dd08 <vfprintf+0xb0>
   1dcea:	83 32       	cpi	r24, 0x23	; 35
   1dcec:	a1 f4       	brne	.+40     	; 0x1dd16 <vfprintf+0xbe>
   1dcee:	23 2d       	mov	r18, r3
   1dcf0:	20 61       	ori	r18, 0x10	; 16
   1dcf2:	1d c0       	rjmp	.+58     	; 0x1dd2e <vfprintf+0xd6>
   1dcf4:	8d 32       	cpi	r24, 0x2D	; 45
   1dcf6:	61 f0       	breq	.+24     	; 0x1dd10 <vfprintf+0xb8>
   1dcf8:	80 33       	cpi	r24, 0x30	; 48
   1dcfa:	69 f4       	brne	.+26     	; 0x1dd16 <vfprintf+0xbe>
   1dcfc:	23 2d       	mov	r18, r3
   1dcfe:	21 60       	ori	r18, 0x01	; 1
   1dd00:	16 c0       	rjmp	.+44     	; 0x1dd2e <vfprintf+0xd6>
   1dd02:	83 2d       	mov	r24, r3
   1dd04:	82 60       	ori	r24, 0x02	; 2
   1dd06:	38 2e       	mov	r3, r24
   1dd08:	e3 2d       	mov	r30, r3
   1dd0a:	e4 60       	ori	r30, 0x04	; 4
   1dd0c:	3e 2e       	mov	r3, r30
   1dd0e:	2a c0       	rjmp	.+84     	; 0x1dd64 <vfprintf+0x10c>
   1dd10:	f3 2d       	mov	r31, r3
   1dd12:	f8 60       	ori	r31, 0x08	; 8
   1dd14:	1d c0       	rjmp	.+58     	; 0x1dd50 <vfprintf+0xf8>
   1dd16:	37 fc       	sbrc	r3, 7
   1dd18:	2d c0       	rjmp	.+90     	; 0x1dd74 <vfprintf+0x11c>
   1dd1a:	20 ed       	ldi	r18, 0xD0	; 208
   1dd1c:	28 0f       	add	r18, r24
   1dd1e:	2a 30       	cpi	r18, 0x0A	; 10
   1dd20:	40 f0       	brcs	.+16     	; 0x1dd32 <vfprintf+0xda>
   1dd22:	8e 32       	cpi	r24, 0x2E	; 46
   1dd24:	b9 f4       	brne	.+46     	; 0x1dd54 <vfprintf+0xfc>
   1dd26:	36 fc       	sbrc	r3, 6
   1dd28:	75 c1       	rjmp	.+746    	; 0x1e014 <vfprintf+0x3bc>
   1dd2a:	23 2d       	mov	r18, r3
   1dd2c:	20 64       	ori	r18, 0x40	; 64
   1dd2e:	32 2e       	mov	r3, r18
   1dd30:	19 c0       	rjmp	.+50     	; 0x1dd64 <vfprintf+0x10c>
   1dd32:	36 fe       	sbrs	r3, 6
   1dd34:	06 c0       	rjmp	.+12     	; 0x1dd42 <vfprintf+0xea>
   1dd36:	8a e0       	ldi	r24, 0x0A	; 10
   1dd38:	98 9e       	mul	r9, r24
   1dd3a:	20 0d       	add	r18, r0
   1dd3c:	11 24       	eor	r1, r1
   1dd3e:	92 2e       	mov	r9, r18
   1dd40:	11 c0       	rjmp	.+34     	; 0x1dd64 <vfprintf+0x10c>
   1dd42:	ea e0       	ldi	r30, 0x0A	; 10
   1dd44:	2e 9e       	mul	r2, r30
   1dd46:	20 0d       	add	r18, r0
   1dd48:	11 24       	eor	r1, r1
   1dd4a:	22 2e       	mov	r2, r18
   1dd4c:	f3 2d       	mov	r31, r3
   1dd4e:	f0 62       	ori	r31, 0x20	; 32
   1dd50:	3f 2e       	mov	r3, r31
   1dd52:	08 c0       	rjmp	.+16     	; 0x1dd64 <vfprintf+0x10c>
   1dd54:	8c 36       	cpi	r24, 0x6C	; 108
   1dd56:	21 f4       	brne	.+8      	; 0x1dd60 <vfprintf+0x108>
   1dd58:	83 2d       	mov	r24, r3
   1dd5a:	80 68       	ori	r24, 0x80	; 128
   1dd5c:	38 2e       	mov	r3, r24
   1dd5e:	02 c0       	rjmp	.+4      	; 0x1dd64 <vfprintf+0x10c>
   1dd60:	88 36       	cpi	r24, 0x68	; 104
   1dd62:	41 f4       	brne	.+16     	; 0x1dd74 <vfprintf+0x11c>
   1dd64:	f7 01       	movw	r30, r14
   1dd66:	93 fd       	sbrc	r25, 3
   1dd68:	85 91       	lpm	r24, Z+
   1dd6a:	93 ff       	sbrs	r25, 3
   1dd6c:	81 91       	ld	r24, Z+
   1dd6e:	7f 01       	movw	r14, r30
   1dd70:	81 11       	cpse	r24, r1
   1dd72:	b3 cf       	rjmp	.-154    	; 0x1dcda <vfprintf+0x82>
   1dd74:	98 2f       	mov	r25, r24
   1dd76:	9f 7d       	andi	r25, 0xDF	; 223
   1dd78:	95 54       	subi	r25, 0x45	; 69
   1dd7a:	93 30       	cpi	r25, 0x03	; 3
   1dd7c:	28 f4       	brcc	.+10     	; 0x1dd88 <vfprintf+0x130>
   1dd7e:	0c 5f       	subi	r16, 0xFC	; 252
   1dd80:	1f 4f       	sbci	r17, 0xFF	; 255
   1dd82:	9f e3       	ldi	r25, 0x3F	; 63
   1dd84:	99 83       	std	Y+1, r25	; 0x01
   1dd86:	0d c0       	rjmp	.+26     	; 0x1dda2 <vfprintf+0x14a>
   1dd88:	83 36       	cpi	r24, 0x63	; 99
   1dd8a:	31 f0       	breq	.+12     	; 0x1dd98 <vfprintf+0x140>
   1dd8c:	83 37       	cpi	r24, 0x73	; 115
   1dd8e:	71 f0       	breq	.+28     	; 0x1ddac <vfprintf+0x154>
   1dd90:	83 35       	cpi	r24, 0x53	; 83
   1dd92:	09 f0       	breq	.+2      	; 0x1dd96 <vfprintf+0x13e>
   1dd94:	55 c0       	rjmp	.+170    	; 0x1de40 <vfprintf+0x1e8>
   1dd96:	20 c0       	rjmp	.+64     	; 0x1ddd8 <vfprintf+0x180>
   1dd98:	f8 01       	movw	r30, r16
   1dd9a:	80 81       	ld	r24, Z
   1dd9c:	89 83       	std	Y+1, r24	; 0x01
   1dd9e:	0e 5f       	subi	r16, 0xFE	; 254
   1dda0:	1f 4f       	sbci	r17, 0xFF	; 255
   1dda2:	88 24       	eor	r8, r8
   1dda4:	83 94       	inc	r8
   1dda6:	91 2c       	mov	r9, r1
   1dda8:	53 01       	movw	r10, r6
   1ddaa:	12 c0       	rjmp	.+36     	; 0x1ddd0 <vfprintf+0x178>
   1ddac:	28 01       	movw	r4, r16
   1ddae:	f2 e0       	ldi	r31, 0x02	; 2
   1ddb0:	4f 0e       	add	r4, r31
   1ddb2:	51 1c       	adc	r5, r1
   1ddb4:	f8 01       	movw	r30, r16
   1ddb6:	a0 80       	ld	r10, Z
   1ddb8:	b1 80       	ldd	r11, Z+1	; 0x01
   1ddba:	36 fe       	sbrs	r3, 6
   1ddbc:	03 c0       	rjmp	.+6      	; 0x1ddc4 <vfprintf+0x16c>
   1ddbe:	69 2d       	mov	r22, r9
   1ddc0:	70 e0       	ldi	r23, 0x00	; 0
   1ddc2:	02 c0       	rjmp	.+4      	; 0x1ddc8 <vfprintf+0x170>
   1ddc4:	6f ef       	ldi	r22, 0xFF	; 255
   1ddc6:	7f ef       	ldi	r23, 0xFF	; 255
   1ddc8:	c5 01       	movw	r24, r10
   1ddca:	4e d1       	rcall	.+668    	; 0x1e068 <strnlen>
   1ddcc:	4c 01       	movw	r8, r24
   1ddce:	82 01       	movw	r16, r4
   1ddd0:	f3 2d       	mov	r31, r3
   1ddd2:	ff 77       	andi	r31, 0x7F	; 127
   1ddd4:	3f 2e       	mov	r3, r31
   1ddd6:	15 c0       	rjmp	.+42     	; 0x1de02 <vfprintf+0x1aa>
   1ddd8:	28 01       	movw	r4, r16
   1ddda:	22 e0       	ldi	r18, 0x02	; 2
   1dddc:	42 0e       	add	r4, r18
   1ddde:	51 1c       	adc	r5, r1
   1dde0:	f8 01       	movw	r30, r16
   1dde2:	a0 80       	ld	r10, Z
   1dde4:	b1 80       	ldd	r11, Z+1	; 0x01
   1dde6:	36 fe       	sbrs	r3, 6
   1dde8:	03 c0       	rjmp	.+6      	; 0x1ddf0 <vfprintf+0x198>
   1ddea:	69 2d       	mov	r22, r9
   1ddec:	70 e0       	ldi	r23, 0x00	; 0
   1ddee:	02 c0       	rjmp	.+4      	; 0x1ddf4 <vfprintf+0x19c>
   1ddf0:	6f ef       	ldi	r22, 0xFF	; 255
   1ddf2:	7f ef       	ldi	r23, 0xFF	; 255
   1ddf4:	c5 01       	movw	r24, r10
   1ddf6:	2d d1       	rcall	.+602    	; 0x1e052 <strnlen_P>
   1ddf8:	4c 01       	movw	r8, r24
   1ddfa:	f3 2d       	mov	r31, r3
   1ddfc:	f0 68       	ori	r31, 0x80	; 128
   1ddfe:	3f 2e       	mov	r3, r31
   1de00:	82 01       	movw	r16, r4
   1de02:	33 fc       	sbrc	r3, 3
   1de04:	19 c0       	rjmp	.+50     	; 0x1de38 <vfprintf+0x1e0>
   1de06:	82 2d       	mov	r24, r2
   1de08:	90 e0       	ldi	r25, 0x00	; 0
   1de0a:	88 16       	cp	r8, r24
   1de0c:	99 06       	cpc	r9, r25
   1de0e:	a0 f4       	brcc	.+40     	; 0x1de38 <vfprintf+0x1e0>
   1de10:	b6 01       	movw	r22, r12
   1de12:	80 e2       	ldi	r24, 0x20	; 32
   1de14:	90 e0       	ldi	r25, 0x00	; 0
   1de16:	33 d1       	rcall	.+614    	; 0x1e07e <fputc>
   1de18:	2a 94       	dec	r2
   1de1a:	f5 cf       	rjmp	.-22     	; 0x1de06 <vfprintf+0x1ae>
   1de1c:	f5 01       	movw	r30, r10
   1de1e:	37 fc       	sbrc	r3, 7
   1de20:	85 91       	lpm	r24, Z+
   1de22:	37 fe       	sbrs	r3, 7
   1de24:	81 91       	ld	r24, Z+
   1de26:	5f 01       	movw	r10, r30
   1de28:	b6 01       	movw	r22, r12
   1de2a:	90 e0       	ldi	r25, 0x00	; 0
   1de2c:	28 d1       	rcall	.+592    	; 0x1e07e <fputc>
   1de2e:	21 10       	cpse	r2, r1
   1de30:	2a 94       	dec	r2
   1de32:	21 e0       	ldi	r18, 0x01	; 1
   1de34:	82 1a       	sub	r8, r18
   1de36:	91 08       	sbc	r9, r1
   1de38:	81 14       	cp	r8, r1
   1de3a:	91 04       	cpc	r9, r1
   1de3c:	79 f7       	brne	.-34     	; 0x1de1c <vfprintf+0x1c4>
   1de3e:	e1 c0       	rjmp	.+450    	; 0x1e002 <vfprintf+0x3aa>
   1de40:	84 36       	cpi	r24, 0x64	; 100
   1de42:	11 f0       	breq	.+4      	; 0x1de48 <vfprintf+0x1f0>
   1de44:	89 36       	cpi	r24, 0x69	; 105
   1de46:	39 f5       	brne	.+78     	; 0x1de96 <vfprintf+0x23e>
   1de48:	f8 01       	movw	r30, r16
   1de4a:	37 fe       	sbrs	r3, 7
   1de4c:	07 c0       	rjmp	.+14     	; 0x1de5c <vfprintf+0x204>
   1de4e:	60 81       	ld	r22, Z
   1de50:	71 81       	ldd	r23, Z+1	; 0x01
   1de52:	82 81       	ldd	r24, Z+2	; 0x02
   1de54:	93 81       	ldd	r25, Z+3	; 0x03
   1de56:	0c 5f       	subi	r16, 0xFC	; 252
   1de58:	1f 4f       	sbci	r17, 0xFF	; 255
   1de5a:	08 c0       	rjmp	.+16     	; 0x1de6c <vfprintf+0x214>
   1de5c:	60 81       	ld	r22, Z
   1de5e:	71 81       	ldd	r23, Z+1	; 0x01
   1de60:	07 2e       	mov	r0, r23
   1de62:	00 0c       	add	r0, r0
   1de64:	88 0b       	sbc	r24, r24
   1de66:	99 0b       	sbc	r25, r25
   1de68:	0e 5f       	subi	r16, 0xFE	; 254
   1de6a:	1f 4f       	sbci	r17, 0xFF	; 255
   1de6c:	f3 2d       	mov	r31, r3
   1de6e:	ff 76       	andi	r31, 0x6F	; 111
   1de70:	3f 2e       	mov	r3, r31
   1de72:	97 ff       	sbrs	r25, 7
   1de74:	09 c0       	rjmp	.+18     	; 0x1de88 <vfprintf+0x230>
   1de76:	90 95       	com	r25
   1de78:	80 95       	com	r24
   1de7a:	70 95       	com	r23
   1de7c:	61 95       	neg	r22
   1de7e:	7f 4f       	sbci	r23, 0xFF	; 255
   1de80:	8f 4f       	sbci	r24, 0xFF	; 255
   1de82:	9f 4f       	sbci	r25, 0xFF	; 255
   1de84:	f0 68       	ori	r31, 0x80	; 128
   1de86:	3f 2e       	mov	r3, r31
   1de88:	2a e0       	ldi	r18, 0x0A	; 10
   1de8a:	30 e0       	ldi	r19, 0x00	; 0
   1de8c:	a3 01       	movw	r20, r6
   1de8e:	33 d1       	rcall	.+614    	; 0x1e0f6 <__ultoa_invert>
   1de90:	88 2e       	mov	r8, r24
   1de92:	86 18       	sub	r8, r6
   1de94:	44 c0       	rjmp	.+136    	; 0x1df1e <vfprintf+0x2c6>
   1de96:	85 37       	cpi	r24, 0x75	; 117
   1de98:	31 f4       	brne	.+12     	; 0x1dea6 <vfprintf+0x24e>
   1de9a:	23 2d       	mov	r18, r3
   1de9c:	2f 7e       	andi	r18, 0xEF	; 239
   1de9e:	b2 2e       	mov	r11, r18
   1dea0:	2a e0       	ldi	r18, 0x0A	; 10
   1dea2:	30 e0       	ldi	r19, 0x00	; 0
   1dea4:	25 c0       	rjmp	.+74     	; 0x1def0 <vfprintf+0x298>
   1dea6:	93 2d       	mov	r25, r3
   1dea8:	99 7f       	andi	r25, 0xF9	; 249
   1deaa:	b9 2e       	mov	r11, r25
   1deac:	8f 36       	cpi	r24, 0x6F	; 111
   1deae:	c1 f0       	breq	.+48     	; 0x1dee0 <vfprintf+0x288>
   1deb0:	18 f4       	brcc	.+6      	; 0x1deb8 <vfprintf+0x260>
   1deb2:	88 35       	cpi	r24, 0x58	; 88
   1deb4:	79 f0       	breq	.+30     	; 0x1ded4 <vfprintf+0x27c>
   1deb6:	ae c0       	rjmp	.+348    	; 0x1e014 <vfprintf+0x3bc>
   1deb8:	80 37       	cpi	r24, 0x70	; 112
   1deba:	19 f0       	breq	.+6      	; 0x1dec2 <vfprintf+0x26a>
   1debc:	88 37       	cpi	r24, 0x78	; 120
   1debe:	21 f0       	breq	.+8      	; 0x1dec8 <vfprintf+0x270>
   1dec0:	a9 c0       	rjmp	.+338    	; 0x1e014 <vfprintf+0x3bc>
   1dec2:	e9 2f       	mov	r30, r25
   1dec4:	e0 61       	ori	r30, 0x10	; 16
   1dec6:	be 2e       	mov	r11, r30
   1dec8:	b4 fe       	sbrs	r11, 4
   1deca:	0d c0       	rjmp	.+26     	; 0x1dee6 <vfprintf+0x28e>
   1decc:	fb 2d       	mov	r31, r11
   1dece:	f4 60       	ori	r31, 0x04	; 4
   1ded0:	bf 2e       	mov	r11, r31
   1ded2:	09 c0       	rjmp	.+18     	; 0x1dee6 <vfprintf+0x28e>
   1ded4:	34 fe       	sbrs	r3, 4
   1ded6:	0a c0       	rjmp	.+20     	; 0x1deec <vfprintf+0x294>
   1ded8:	29 2f       	mov	r18, r25
   1deda:	26 60       	ori	r18, 0x06	; 6
   1dedc:	b2 2e       	mov	r11, r18
   1dede:	06 c0       	rjmp	.+12     	; 0x1deec <vfprintf+0x294>
   1dee0:	28 e0       	ldi	r18, 0x08	; 8
   1dee2:	30 e0       	ldi	r19, 0x00	; 0
   1dee4:	05 c0       	rjmp	.+10     	; 0x1def0 <vfprintf+0x298>
   1dee6:	20 e1       	ldi	r18, 0x10	; 16
   1dee8:	30 e0       	ldi	r19, 0x00	; 0
   1deea:	02 c0       	rjmp	.+4      	; 0x1def0 <vfprintf+0x298>
   1deec:	20 e1       	ldi	r18, 0x10	; 16
   1deee:	32 e0       	ldi	r19, 0x02	; 2
   1def0:	f8 01       	movw	r30, r16
   1def2:	b7 fe       	sbrs	r11, 7
   1def4:	07 c0       	rjmp	.+14     	; 0x1df04 <vfprintf+0x2ac>
   1def6:	60 81       	ld	r22, Z
   1def8:	71 81       	ldd	r23, Z+1	; 0x01
   1defa:	82 81       	ldd	r24, Z+2	; 0x02
   1defc:	93 81       	ldd	r25, Z+3	; 0x03
   1defe:	0c 5f       	subi	r16, 0xFC	; 252
   1df00:	1f 4f       	sbci	r17, 0xFF	; 255
   1df02:	06 c0       	rjmp	.+12     	; 0x1df10 <vfprintf+0x2b8>
   1df04:	60 81       	ld	r22, Z
   1df06:	71 81       	ldd	r23, Z+1	; 0x01
   1df08:	80 e0       	ldi	r24, 0x00	; 0
   1df0a:	90 e0       	ldi	r25, 0x00	; 0
   1df0c:	0e 5f       	subi	r16, 0xFE	; 254
   1df0e:	1f 4f       	sbci	r17, 0xFF	; 255
   1df10:	a3 01       	movw	r20, r6
   1df12:	f1 d0       	rcall	.+482    	; 0x1e0f6 <__ultoa_invert>
   1df14:	88 2e       	mov	r8, r24
   1df16:	86 18       	sub	r8, r6
   1df18:	fb 2d       	mov	r31, r11
   1df1a:	ff 77       	andi	r31, 0x7F	; 127
   1df1c:	3f 2e       	mov	r3, r31
   1df1e:	36 fe       	sbrs	r3, 6
   1df20:	0d c0       	rjmp	.+26     	; 0x1df3c <vfprintf+0x2e4>
   1df22:	23 2d       	mov	r18, r3
   1df24:	2e 7f       	andi	r18, 0xFE	; 254
   1df26:	a2 2e       	mov	r10, r18
   1df28:	89 14       	cp	r8, r9
   1df2a:	58 f4       	brcc	.+22     	; 0x1df42 <vfprintf+0x2ea>
   1df2c:	34 fe       	sbrs	r3, 4
   1df2e:	0b c0       	rjmp	.+22     	; 0x1df46 <vfprintf+0x2ee>
   1df30:	32 fc       	sbrc	r3, 2
   1df32:	09 c0       	rjmp	.+18     	; 0x1df46 <vfprintf+0x2ee>
   1df34:	83 2d       	mov	r24, r3
   1df36:	8e 7e       	andi	r24, 0xEE	; 238
   1df38:	a8 2e       	mov	r10, r24
   1df3a:	05 c0       	rjmp	.+10     	; 0x1df46 <vfprintf+0x2ee>
   1df3c:	b8 2c       	mov	r11, r8
   1df3e:	a3 2c       	mov	r10, r3
   1df40:	03 c0       	rjmp	.+6      	; 0x1df48 <vfprintf+0x2f0>
   1df42:	b8 2c       	mov	r11, r8
   1df44:	01 c0       	rjmp	.+2      	; 0x1df48 <vfprintf+0x2f0>
   1df46:	b9 2c       	mov	r11, r9
   1df48:	a4 fe       	sbrs	r10, 4
   1df4a:	0f c0       	rjmp	.+30     	; 0x1df6a <vfprintf+0x312>
   1df4c:	fe 01       	movw	r30, r28
   1df4e:	e8 0d       	add	r30, r8
   1df50:	f1 1d       	adc	r31, r1
   1df52:	80 81       	ld	r24, Z
   1df54:	80 33       	cpi	r24, 0x30	; 48
   1df56:	21 f4       	brne	.+8      	; 0x1df60 <vfprintf+0x308>
   1df58:	9a 2d       	mov	r25, r10
   1df5a:	99 7e       	andi	r25, 0xE9	; 233
   1df5c:	a9 2e       	mov	r10, r25
   1df5e:	09 c0       	rjmp	.+18     	; 0x1df72 <vfprintf+0x31a>
   1df60:	a2 fe       	sbrs	r10, 2
   1df62:	06 c0       	rjmp	.+12     	; 0x1df70 <vfprintf+0x318>
   1df64:	b3 94       	inc	r11
   1df66:	b3 94       	inc	r11
   1df68:	04 c0       	rjmp	.+8      	; 0x1df72 <vfprintf+0x31a>
   1df6a:	8a 2d       	mov	r24, r10
   1df6c:	86 78       	andi	r24, 0x86	; 134
   1df6e:	09 f0       	breq	.+2      	; 0x1df72 <vfprintf+0x31a>
   1df70:	b3 94       	inc	r11
   1df72:	a3 fc       	sbrc	r10, 3
   1df74:	10 c0       	rjmp	.+32     	; 0x1df96 <vfprintf+0x33e>
   1df76:	a0 fe       	sbrs	r10, 0
   1df78:	06 c0       	rjmp	.+12     	; 0x1df86 <vfprintf+0x32e>
   1df7a:	b2 14       	cp	r11, r2
   1df7c:	80 f4       	brcc	.+32     	; 0x1df9e <vfprintf+0x346>
   1df7e:	28 0c       	add	r2, r8
   1df80:	92 2c       	mov	r9, r2
   1df82:	9b 18       	sub	r9, r11
   1df84:	0d c0       	rjmp	.+26     	; 0x1dfa0 <vfprintf+0x348>
   1df86:	b2 14       	cp	r11, r2
   1df88:	58 f4       	brcc	.+22     	; 0x1dfa0 <vfprintf+0x348>
   1df8a:	b6 01       	movw	r22, r12
   1df8c:	80 e2       	ldi	r24, 0x20	; 32
   1df8e:	90 e0       	ldi	r25, 0x00	; 0
   1df90:	76 d0       	rcall	.+236    	; 0x1e07e <fputc>
   1df92:	b3 94       	inc	r11
   1df94:	f8 cf       	rjmp	.-16     	; 0x1df86 <vfprintf+0x32e>
   1df96:	b2 14       	cp	r11, r2
   1df98:	18 f4       	brcc	.+6      	; 0x1dfa0 <vfprintf+0x348>
   1df9a:	2b 18       	sub	r2, r11
   1df9c:	02 c0       	rjmp	.+4      	; 0x1dfa2 <vfprintf+0x34a>
   1df9e:	98 2c       	mov	r9, r8
   1dfa0:	21 2c       	mov	r2, r1
   1dfa2:	a4 fe       	sbrs	r10, 4
   1dfa4:	0f c0       	rjmp	.+30     	; 0x1dfc4 <vfprintf+0x36c>
   1dfa6:	b6 01       	movw	r22, r12
   1dfa8:	80 e3       	ldi	r24, 0x30	; 48
   1dfaa:	90 e0       	ldi	r25, 0x00	; 0
   1dfac:	68 d0       	rcall	.+208    	; 0x1e07e <fputc>
   1dfae:	a2 fe       	sbrs	r10, 2
   1dfb0:	16 c0       	rjmp	.+44     	; 0x1dfde <vfprintf+0x386>
   1dfb2:	a1 fc       	sbrc	r10, 1
   1dfb4:	03 c0       	rjmp	.+6      	; 0x1dfbc <vfprintf+0x364>
   1dfb6:	88 e7       	ldi	r24, 0x78	; 120
   1dfb8:	90 e0       	ldi	r25, 0x00	; 0
   1dfba:	02 c0       	rjmp	.+4      	; 0x1dfc0 <vfprintf+0x368>
   1dfbc:	88 e5       	ldi	r24, 0x58	; 88
   1dfbe:	90 e0       	ldi	r25, 0x00	; 0
   1dfc0:	b6 01       	movw	r22, r12
   1dfc2:	0c c0       	rjmp	.+24     	; 0x1dfdc <vfprintf+0x384>
   1dfc4:	8a 2d       	mov	r24, r10
   1dfc6:	86 78       	andi	r24, 0x86	; 134
   1dfc8:	51 f0       	breq	.+20     	; 0x1dfde <vfprintf+0x386>
   1dfca:	a1 fe       	sbrs	r10, 1
   1dfcc:	02 c0       	rjmp	.+4      	; 0x1dfd2 <vfprintf+0x37a>
   1dfce:	8b e2       	ldi	r24, 0x2B	; 43
   1dfd0:	01 c0       	rjmp	.+2      	; 0x1dfd4 <vfprintf+0x37c>
   1dfd2:	80 e2       	ldi	r24, 0x20	; 32
   1dfd4:	a7 fc       	sbrc	r10, 7
   1dfd6:	8d e2       	ldi	r24, 0x2D	; 45
   1dfd8:	b6 01       	movw	r22, r12
   1dfda:	90 e0       	ldi	r25, 0x00	; 0
   1dfdc:	50 d0       	rcall	.+160    	; 0x1e07e <fputc>
   1dfde:	89 14       	cp	r8, r9
   1dfe0:	30 f4       	brcc	.+12     	; 0x1dfee <vfprintf+0x396>
   1dfe2:	b6 01       	movw	r22, r12
   1dfe4:	80 e3       	ldi	r24, 0x30	; 48
   1dfe6:	90 e0       	ldi	r25, 0x00	; 0
   1dfe8:	4a d0       	rcall	.+148    	; 0x1e07e <fputc>
   1dfea:	9a 94       	dec	r9
   1dfec:	f8 cf       	rjmp	.-16     	; 0x1dfde <vfprintf+0x386>
   1dfee:	8a 94       	dec	r8
   1dff0:	f3 01       	movw	r30, r6
   1dff2:	e8 0d       	add	r30, r8
   1dff4:	f1 1d       	adc	r31, r1
   1dff6:	80 81       	ld	r24, Z
   1dff8:	b6 01       	movw	r22, r12
   1dffa:	90 e0       	ldi	r25, 0x00	; 0
   1dffc:	40 d0       	rcall	.+128    	; 0x1e07e <fputc>
   1dffe:	81 10       	cpse	r8, r1
   1e000:	f6 cf       	rjmp	.-20     	; 0x1dfee <vfprintf+0x396>
   1e002:	22 20       	and	r2, r2
   1e004:	09 f4       	brne	.+2      	; 0x1e008 <vfprintf+0x3b0>
   1e006:	4e ce       	rjmp	.-868    	; 0x1dca4 <vfprintf+0x4c>
   1e008:	b6 01       	movw	r22, r12
   1e00a:	80 e2       	ldi	r24, 0x20	; 32
   1e00c:	90 e0       	ldi	r25, 0x00	; 0
   1e00e:	37 d0       	rcall	.+110    	; 0x1e07e <fputc>
   1e010:	2a 94       	dec	r2
   1e012:	f7 cf       	rjmp	.-18     	; 0x1e002 <vfprintf+0x3aa>
   1e014:	f6 01       	movw	r30, r12
   1e016:	86 81       	ldd	r24, Z+6	; 0x06
   1e018:	97 81       	ldd	r25, Z+7	; 0x07
   1e01a:	02 c0       	rjmp	.+4      	; 0x1e020 <vfprintf+0x3c8>
   1e01c:	8f ef       	ldi	r24, 0xFF	; 255
   1e01e:	9f ef       	ldi	r25, 0xFF	; 255
   1e020:	2b 96       	adiw	r28, 0x0b	; 11
   1e022:	0f b6       	in	r0, 0x3f	; 63
   1e024:	f8 94       	cli
   1e026:	de bf       	out	0x3e, r29	; 62
   1e028:	0f be       	out	0x3f, r0	; 63
   1e02a:	cd bf       	out	0x3d, r28	; 61
   1e02c:	df 91       	pop	r29
   1e02e:	cf 91       	pop	r28
   1e030:	1f 91       	pop	r17
   1e032:	0f 91       	pop	r16
   1e034:	ff 90       	pop	r15
   1e036:	ef 90       	pop	r14
   1e038:	df 90       	pop	r13
   1e03a:	cf 90       	pop	r12
   1e03c:	bf 90       	pop	r11
   1e03e:	af 90       	pop	r10
   1e040:	9f 90       	pop	r9
   1e042:	8f 90       	pop	r8
   1e044:	7f 90       	pop	r7
   1e046:	6f 90       	pop	r6
   1e048:	5f 90       	pop	r5
   1e04a:	4f 90       	pop	r4
   1e04c:	3f 90       	pop	r3
   1e04e:	2f 90       	pop	r2
   1e050:	08 95       	ret

0001e052 <strnlen_P>:
   1e052:	fc 01       	movw	r30, r24
   1e054:	05 90       	lpm	r0, Z+
   1e056:	61 50       	subi	r22, 0x01	; 1
   1e058:	70 40       	sbci	r23, 0x00	; 0
   1e05a:	01 10       	cpse	r0, r1
   1e05c:	d8 f7       	brcc	.-10     	; 0x1e054 <strnlen_P+0x2>
   1e05e:	80 95       	com	r24
   1e060:	90 95       	com	r25
   1e062:	8e 0f       	add	r24, r30
   1e064:	9f 1f       	adc	r25, r31
   1e066:	08 95       	ret

0001e068 <strnlen>:
   1e068:	fc 01       	movw	r30, r24
   1e06a:	61 50       	subi	r22, 0x01	; 1
   1e06c:	70 40       	sbci	r23, 0x00	; 0
   1e06e:	01 90       	ld	r0, Z+
   1e070:	01 10       	cpse	r0, r1
   1e072:	d8 f7       	brcc	.-10     	; 0x1e06a <strnlen+0x2>
   1e074:	80 95       	com	r24
   1e076:	90 95       	com	r25
   1e078:	8e 0f       	add	r24, r30
   1e07a:	9f 1f       	adc	r25, r31
   1e07c:	08 95       	ret

0001e07e <fputc>:
   1e07e:	0f 93       	push	r16
   1e080:	1f 93       	push	r17
   1e082:	cf 93       	push	r28
   1e084:	df 93       	push	r29
   1e086:	fb 01       	movw	r30, r22
   1e088:	23 81       	ldd	r18, Z+3	; 0x03
   1e08a:	21 fd       	sbrc	r18, 1
   1e08c:	03 c0       	rjmp	.+6      	; 0x1e094 <fputc+0x16>
   1e08e:	8f ef       	ldi	r24, 0xFF	; 255
   1e090:	9f ef       	ldi	r25, 0xFF	; 255
   1e092:	2c c0       	rjmp	.+88     	; 0x1e0ec <fputc+0x6e>
   1e094:	22 ff       	sbrs	r18, 2
   1e096:	16 c0       	rjmp	.+44     	; 0x1e0c4 <fputc+0x46>
   1e098:	46 81       	ldd	r20, Z+6	; 0x06
   1e09a:	57 81       	ldd	r21, Z+7	; 0x07
   1e09c:	24 81       	ldd	r18, Z+4	; 0x04
   1e09e:	35 81       	ldd	r19, Z+5	; 0x05
   1e0a0:	42 17       	cp	r20, r18
   1e0a2:	53 07       	cpc	r21, r19
   1e0a4:	44 f4       	brge	.+16     	; 0x1e0b6 <fputc+0x38>
   1e0a6:	a0 81       	ld	r26, Z
   1e0a8:	b1 81       	ldd	r27, Z+1	; 0x01
   1e0aa:	9d 01       	movw	r18, r26
   1e0ac:	2f 5f       	subi	r18, 0xFF	; 255
   1e0ae:	3f 4f       	sbci	r19, 0xFF	; 255
   1e0b0:	31 83       	std	Z+1, r19	; 0x01
   1e0b2:	20 83       	st	Z, r18
   1e0b4:	8c 93       	st	X, r24
   1e0b6:	26 81       	ldd	r18, Z+6	; 0x06
   1e0b8:	37 81       	ldd	r19, Z+7	; 0x07
   1e0ba:	2f 5f       	subi	r18, 0xFF	; 255
   1e0bc:	3f 4f       	sbci	r19, 0xFF	; 255
   1e0be:	37 83       	std	Z+7, r19	; 0x07
   1e0c0:	26 83       	std	Z+6, r18	; 0x06
   1e0c2:	14 c0       	rjmp	.+40     	; 0x1e0ec <fputc+0x6e>
   1e0c4:	8b 01       	movw	r16, r22
   1e0c6:	ec 01       	movw	r28, r24
   1e0c8:	fb 01       	movw	r30, r22
   1e0ca:	00 84       	ldd	r0, Z+8	; 0x08
   1e0cc:	f1 85       	ldd	r31, Z+9	; 0x09
   1e0ce:	e0 2d       	mov	r30, r0
   1e0d0:	19 95       	eicall
   1e0d2:	89 2b       	or	r24, r25
   1e0d4:	e1 f6       	brne	.-72     	; 0x1e08e <fputc+0x10>
   1e0d6:	d8 01       	movw	r26, r16
   1e0d8:	16 96       	adiw	r26, 0x06	; 6
   1e0da:	8d 91       	ld	r24, X+
   1e0dc:	9c 91       	ld	r25, X
   1e0de:	17 97       	sbiw	r26, 0x07	; 7
   1e0e0:	01 96       	adiw	r24, 0x01	; 1
   1e0e2:	17 96       	adiw	r26, 0x07	; 7
   1e0e4:	9c 93       	st	X, r25
   1e0e6:	8e 93       	st	-X, r24
   1e0e8:	16 97       	sbiw	r26, 0x06	; 6
   1e0ea:	ce 01       	movw	r24, r28
   1e0ec:	df 91       	pop	r29
   1e0ee:	cf 91       	pop	r28
   1e0f0:	1f 91       	pop	r17
   1e0f2:	0f 91       	pop	r16
   1e0f4:	08 95       	ret

0001e0f6 <__ultoa_invert>:
   1e0f6:	fa 01       	movw	r30, r20
   1e0f8:	aa 27       	eor	r26, r26
   1e0fa:	28 30       	cpi	r18, 0x08	; 8
   1e0fc:	51 f1       	breq	.+84     	; 0x1e152 <__ultoa_invert+0x5c>
   1e0fe:	20 31       	cpi	r18, 0x10	; 16
   1e100:	81 f1       	breq	.+96     	; 0x1e162 <__ultoa_invert+0x6c>
   1e102:	e8 94       	clt
   1e104:	6f 93       	push	r22
   1e106:	6e 7f       	andi	r22, 0xFE	; 254
   1e108:	6e 5f       	subi	r22, 0xFE	; 254
   1e10a:	7f 4f       	sbci	r23, 0xFF	; 255
   1e10c:	8f 4f       	sbci	r24, 0xFF	; 255
   1e10e:	9f 4f       	sbci	r25, 0xFF	; 255
   1e110:	af 4f       	sbci	r26, 0xFF	; 255
   1e112:	b1 e0       	ldi	r27, 0x01	; 1
   1e114:	3e d0       	rcall	.+124    	; 0x1e192 <__ultoa_invert+0x9c>
   1e116:	b4 e0       	ldi	r27, 0x04	; 4
   1e118:	3c d0       	rcall	.+120    	; 0x1e192 <__ultoa_invert+0x9c>
   1e11a:	67 0f       	add	r22, r23
   1e11c:	78 1f       	adc	r23, r24
   1e11e:	89 1f       	adc	r24, r25
   1e120:	9a 1f       	adc	r25, r26
   1e122:	a1 1d       	adc	r26, r1
   1e124:	68 0f       	add	r22, r24
   1e126:	79 1f       	adc	r23, r25
   1e128:	8a 1f       	adc	r24, r26
   1e12a:	91 1d       	adc	r25, r1
   1e12c:	a1 1d       	adc	r26, r1
   1e12e:	6a 0f       	add	r22, r26
   1e130:	71 1d       	adc	r23, r1
   1e132:	81 1d       	adc	r24, r1
   1e134:	91 1d       	adc	r25, r1
   1e136:	a1 1d       	adc	r26, r1
   1e138:	20 d0       	rcall	.+64     	; 0x1e17a <__ultoa_invert+0x84>
   1e13a:	09 f4       	brne	.+2      	; 0x1e13e <__ultoa_invert+0x48>
   1e13c:	68 94       	set
   1e13e:	3f 91       	pop	r19
   1e140:	2a e0       	ldi	r18, 0x0A	; 10
   1e142:	26 9f       	mul	r18, r22
   1e144:	11 24       	eor	r1, r1
   1e146:	30 19       	sub	r19, r0
   1e148:	30 5d       	subi	r19, 0xD0	; 208
   1e14a:	31 93       	st	Z+, r19
   1e14c:	de f6       	brtc	.-74     	; 0x1e104 <__ultoa_invert+0xe>
   1e14e:	cf 01       	movw	r24, r30
   1e150:	08 95       	ret
   1e152:	46 2f       	mov	r20, r22
   1e154:	47 70       	andi	r20, 0x07	; 7
   1e156:	40 5d       	subi	r20, 0xD0	; 208
   1e158:	41 93       	st	Z+, r20
   1e15a:	b3 e0       	ldi	r27, 0x03	; 3
   1e15c:	0f d0       	rcall	.+30     	; 0x1e17c <__ultoa_invert+0x86>
   1e15e:	c9 f7       	brne	.-14     	; 0x1e152 <__ultoa_invert+0x5c>
   1e160:	f6 cf       	rjmp	.-20     	; 0x1e14e <__ultoa_invert+0x58>
   1e162:	46 2f       	mov	r20, r22
   1e164:	4f 70       	andi	r20, 0x0F	; 15
   1e166:	40 5d       	subi	r20, 0xD0	; 208
   1e168:	4a 33       	cpi	r20, 0x3A	; 58
   1e16a:	18 f0       	brcs	.+6      	; 0x1e172 <__ultoa_invert+0x7c>
   1e16c:	49 5d       	subi	r20, 0xD9	; 217
   1e16e:	31 fd       	sbrc	r19, 1
   1e170:	40 52       	subi	r20, 0x20	; 32
   1e172:	41 93       	st	Z+, r20
   1e174:	02 d0       	rcall	.+4      	; 0x1e17a <__ultoa_invert+0x84>
   1e176:	a9 f7       	brne	.-22     	; 0x1e162 <__ultoa_invert+0x6c>
   1e178:	ea cf       	rjmp	.-44     	; 0x1e14e <__ultoa_invert+0x58>
   1e17a:	b4 e0       	ldi	r27, 0x04	; 4
   1e17c:	a6 95       	lsr	r26
   1e17e:	97 95       	ror	r25
   1e180:	87 95       	ror	r24
   1e182:	77 95       	ror	r23
   1e184:	67 95       	ror	r22
   1e186:	ba 95       	dec	r27
   1e188:	c9 f7       	brne	.-14     	; 0x1e17c <__ultoa_invert+0x86>
   1e18a:	00 97       	sbiw	r24, 0x00	; 0
   1e18c:	61 05       	cpc	r22, r1
   1e18e:	71 05       	cpc	r23, r1
   1e190:	08 95       	ret
   1e192:	9b 01       	movw	r18, r22
   1e194:	ac 01       	movw	r20, r24
   1e196:	0a 2e       	mov	r0, r26
   1e198:	06 94       	lsr	r0
   1e19a:	57 95       	ror	r21
   1e19c:	47 95       	ror	r20
   1e19e:	37 95       	ror	r19
   1e1a0:	27 95       	ror	r18
   1e1a2:	ba 95       	dec	r27
   1e1a4:	c9 f7       	brne	.-14     	; 0x1e198 <__ultoa_invert+0xa2>
   1e1a6:	62 0f       	add	r22, r18
   1e1a8:	73 1f       	adc	r23, r19
   1e1aa:	84 1f       	adc	r24, r20
   1e1ac:	95 1f       	adc	r25, r21
   1e1ae:	a0 1d       	adc	r26, r0
   1e1b0:	08 95       	ret

0001e1b2 <eeprom_read_byte>:
   1e1b2:	f9 99       	sbic	0x1f, 1	; 31
   1e1b4:	fe cf       	rjmp	.-4      	; 0x1e1b2 <eeprom_read_byte>
   1e1b6:	92 bd       	out	0x22, r25	; 34
   1e1b8:	81 bd       	out	0x21, r24	; 33
   1e1ba:	f8 9a       	sbi	0x1f, 0	; 31
   1e1bc:	99 27       	eor	r25, r25
   1e1be:	80 b5       	in	r24, 0x20	; 32
   1e1c0:	08 95       	ret

0001e1c2 <eeprom_write_byte>:
   1e1c2:	26 2f       	mov	r18, r22

0001e1c4 <eeprom_write_r18>:
   1e1c4:	f9 99       	sbic	0x1f, 1	; 31
   1e1c6:	fe cf       	rjmp	.-4      	; 0x1e1c4 <eeprom_write_r18>
   1e1c8:	1f ba       	out	0x1f, r1	; 31
   1e1ca:	92 bd       	out	0x22, r25	; 34
   1e1cc:	81 bd       	out	0x21, r24	; 33
   1e1ce:	20 bd       	out	0x20, r18	; 32
   1e1d0:	0f b6       	in	r0, 0x3f	; 63
   1e1d2:	f8 94       	cli
   1e1d4:	fa 9a       	sbi	0x1f, 2	; 31
   1e1d6:	f9 9a       	sbi	0x1f, 1	; 31
   1e1d8:	0f be       	out	0x3f, r0	; 63
   1e1da:	01 96       	adiw	r24, 0x01	; 1
   1e1dc:	08 95       	ret

0001e1de <__mulshisi3>:
   1e1de:	b7 ff       	sbrs	r27, 7
   1e1e0:	e1 ca       	rjmp	.-2622   	; 0x1d7a4 <__muluhisi3>

0001e1e2 <__mulohisi3>:
   1e1e2:	e0 da       	rcall	.-2624   	; 0x1d7a4 <__muluhisi3>
   1e1e4:	82 1b       	sub	r24, r18
   1e1e6:	93 0b       	sbc	r25, r19
   1e1e8:	08 95       	ret

0001e1ea <_exit>:
   1e1ea:	f8 94       	cli

0001e1ec <__stop_program>:
   1e1ec:	ff cf       	rjmp	.-2      	; 0x1e1ec <__stop_program>
