
SKU3_1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000716  00800200  0001dab0  0001db44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0001dab0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000f9f  00800916  00800916  0001e25a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0001e25a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0001e2b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000011e8  00000000  00000000  0001e2f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00048177  00000000  00000000  0001f4e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00007df8  00000000  00000000  00067657  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00016daa  00000000  00000000  0006f44f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00004094  00000000  00000000  000861fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00014d45  00000000  00000000  0008a290  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00019d84  00000000  00000000  0009efd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001550  00000000  00000000  000b8d59  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 81 23 	jmp	0x4702	; 0x4702 <__ctors_end>
       4:	0c 94 b4 df 	jmp	0x1bf68	; 0x1bf68 <__vector_1>
       8:	0c 94 df df 	jmp	0x1bfbe	; 0x1bfbe <__vector_2>
       c:	0c 94 0a e0 	jmp	0x1c014	; 0x1c014 <__vector_3>
      10:	0c 94 35 e0 	jmp	0x1c06a	; 0x1c06a <__vector_4>
      14:	0c 94 60 e0 	jmp	0x1c0c0	; 0x1c0c0 <__vector_5>
      18:	0c 94 8b e0 	jmp	0x1c116	; 0x1c116 <__vector_6>
      1c:	0c 94 b6 e0 	jmp	0x1c16c	; 0x1c16c <__vector_7>
      20:	0c 94 e1 e0 	jmp	0x1c1c2	; 0x1c1c2 <__vector_8>
      24:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      28:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      2c:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      30:	0c 94 c9 61 	jmp	0xc392	; 0xc392 <__vector_12>
      34:	0c 94 d3 63 	jmp	0xc7a6	; 0xc7a6 <__vector_13>
      38:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      3c:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      40:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      44:	0c 94 1f 62 	jmp	0xc43e	; 0xc43e <__vector_17>
      48:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      4c:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      50:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      54:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      58:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      5c:	0c 94 93 d3 	jmp	0x1a726	; 0x1a726 <__vector_23>
      60:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      64:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      68:	0c 94 a6 d0 	jmp	0x1a14c	; 0x1a14c <__vector_26>
      6c:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      70:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      74:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      78:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      7c:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      80:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      84:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      88:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      8c:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      90:	0c 94 94 61 	jmp	0xc328	; 0xc328 <__vector_36>
      94:	0c 94 fc d0 	jmp	0x1a1f8	; 0x1a1f8 <__vector_37>
      98:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      9c:	0c 94 b1 e4 	jmp	0x1c962	; 0x1c962 <__vector_39>
      a0:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      a4:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      a8:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      ac:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      b0:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      b4:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      b8:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      bc:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      c0:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      c4:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      c8:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      cc:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      d0:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      d4:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      d8:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      dc:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      e0:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <__bad_interrupt>
      e4:	d1 31       	cpi	r29, 0x11	; 17
      e6:	d1 31       	cpi	r29, 0x11	; 17
      e8:	07 32       	cpi	r16, 0x27	; 39
      ea:	d1 31       	cpi	r29, 0x11	; 17
      ec:	ef 31       	cpi	r30, 0x1F	; 31
      ee:	d1 31       	cpi	r29, 0x11	; 17
      f0:	ef 31       	cpi	r30, 0x1F	; 31
      f2:	d1 31       	cpi	r29, 0x11	; 17
      f4:	d1 31       	cpi	r29, 0x11	; 17
      f6:	ef 31       	cpi	r30, 0x1F	; 31
      f8:	d1 31       	cpi	r29, 0x11	; 17
      fa:	ef 31       	cpi	r30, 0x1F	; 31
      fc:	de 31       	cpi	r29, 0x1E	; 30
      fe:	e0 31       	cpi	r30, 0x10	; 16
     100:	e3 31       	cpi	r30, 0x13	; 19
     102:	e5 31       	cpi	r30, 0x15	; 21
     104:	e3 31       	cpi	r30, 0x13	; 19
     106:	e7 31       	cpi	r30, 0x17	; 23
     108:	e3 31       	cpi	r30, 0x13	; 19
     10a:	e9 31       	cpi	r30, 0x19	; 25
     10c:	eb 31       	cpi	r30, 0x1B	; 27
     10e:	e3 31       	cpi	r30, 0x13	; 19
     110:	ed 31       	cpi	r30, 0x1D	; 29
     112:	c5 32       	cpi	r28, 0x25	; 37
     114:	c7 32       	cpi	r28, 0x27	; 39
     116:	c9 32       	cpi	r28, 0x29	; 41
     118:	d0 32       	cpi	r29, 0x20	; 32
     11a:	d2 32       	cpi	r29, 0x22	; 34
     11c:	d4 32       	cpi	r29, 0x24	; 36
     11e:	d6 32       	cpi	r29, 0x26	; 38
     120:	d8 32       	cpi	r29, 0x28	; 40
     122:	da 32       	cpi	r29, 0x2A	; 42
     124:	dc 32       	cpi	r29, 0x2C	; 44
     126:	de 32       	cpi	r29, 0x2E	; 46
     128:	e1 32       	cpi	r30, 0x21	; 33
     12a:	ed 32       	cpi	r30, 0x2D	; 45
     12c:	f1 32       	cpi	r31, 0x21	; 33
     12e:	f5 32       	cpi	r31, 0x25	; 37
     130:	fe 32       	cpi	r31, 0x2E	; 46
     132:	02 33       	cpi	r16, 0x32	; 50
     134:	06 33       	cpi	r16, 0x36	; 54
     136:	0a 33       	cpi	r16, 0x3A	; 58
     138:	0e 33       	cpi	r16, 0x3E	; 62
     13a:	12 33       	cpi	r17, 0x32	; 50
     13c:	16 33       	cpi	r17, 0x36	; 54
     13e:	1a 33       	cpi	r17, 0x3A	; 58
     140:	1e 33       	cpi	r17, 0x3E	; 62
     142:	11 34       	cpi	r17, 0x41	; 65
     144:	f2 34       	cpi	r31, 0x42	; 66
     146:	49 34       	cpi	r20, 0x49	; 73
     148:	39 35       	cpi	r19, 0x59	; 89
     14a:	6a 34       	cpi	r22, 0x4A	; 74
     14c:	5b 35       	cpi	r21, 0x5B	; 91
     14e:	8c 34       	cpi	r24, 0x4C	; 76
     150:	ae 34       	cpi	r26, 0x4E	; 78
     152:	7d 35       	cpi	r23, 0x5D	; 93
     154:	d0 34       	cpi	r29, 0x40	; 64
     156:	9d 35       	cpi	r25, 0x5D	; 93
     158:	e9 33       	cpi	r30, 0x39	; 57
     15a:	22 36       	cpi	r18, 0x62	; 98
     15c:	e7 36       	cpi	r30, 0x67	; 103
     15e:	42 36       	cpi	r20, 0x62	; 98
     160:	2c 37       	cpi	r18, 0x7C	; 124
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	4d 37       	cpi	r20, 0x7D	; 125
     166:	84 36       	cpi	r24, 0x64	; 100
     168:	a5 36       	cpi	r26, 0x65	; 101
     16a:	6e 37       	cpi	r22, 0x7E	; 126
     16c:	c6 36       	cpi	r28, 0x66	; 102
     16e:	8e 37       	cpi	r24, 0x7E	; 126
     170:	ec 35       	cpi	r30, 0x5C	; 92
     172:	d6 38       	cpi	r29, 0x86	; 134
     174:	96 39       	cpi	r25, 0x96	; 150
     176:	f6 38       	cpi	r31, 0x86	; 134
     178:	d9 39       	cpi	r29, 0x99	; 153
     17a:	16 39       	cpi	r17, 0x96	; 150
     17c:	f9 39       	cpi	r31, 0x99	; 153
     17e:	36 39       	cpi	r19, 0x96	; 150
     180:	56 39       	cpi	r21, 0x96	; 150
     182:	19 3a       	cpi	r17, 0xA9	; 169
     184:	76 39       	cpi	r23, 0x96	; 150
     186:	38 3a       	cpi	r19, 0xA8	; 168
     188:	ae 38       	cpi	r26, 0x8E	; 142
     18a:	be 3a       	cpi	r27, 0xAE	; 174
     18c:	78 3b       	cpi	r23, 0xB8	; 184
     18e:	dd 3a       	cpi	r29, 0xAD	; 173
     190:	b9 3b       	cpi	r27, 0xB9	; 185
     192:	fc 3a       	cpi	r31, 0xAC	; 172
     194:	d8 3b       	cpi	r29, 0xB8	; 184
     196:	1b 3b       	cpi	r17, 0xBB	; 187
     198:	3a 3b       	cpi	r19, 0xBA	; 186
     19a:	f7 3b       	cpi	r31, 0xB7	; 183
     19c:	59 3b       	cpi	r21, 0xB9	; 185
     19e:	1d 3c       	cpi	r17, 0xCD	; 205
     1a0:	a1 3a       	cpi	r26, 0xA1	; 161
     1a2:	9b 45       	sbci	r25, 0x5B	; 91
     1a4:	4e 45       	sbci	r20, 0x5E	; 94
     1a6:	68 45       	sbci	r22, 0x58	; 88
     1a8:	98 45       	sbci	r25, 0x58	; 88
     1aa:	9b 45       	sbci	r25, 0x5B	; 91
     1ac:	98 45       	sbci	r25, 0x58	; 88
     1ae:	9b 45       	sbci	r25, 0x5B	; 91
     1b0:	9b 45       	sbci	r25, 0x5B	; 91
     1b2:	98 45       	sbci	r25, 0x58	; 88
     1b4:	9b 45       	sbci	r25, 0x5B	; 91
     1b6:	98 45       	sbci	r25, 0x58	; 88
     1b8:	9b 45       	sbci	r25, 0x5B	; 91
     1ba:	00 6b       	ori	r16, 0xB0	; 176
     1bc:	06 6b       	ori	r16, 0xB6	; 182
     1be:	0f 6b       	ori	r16, 0xBF	; 191
     1c0:	1c 6b       	ori	r17, 0xBC	; 188
     1c2:	2b 6b       	ori	r18, 0xBB	; 187
     1c4:	38 6b       	ori	r19, 0xB8	; 184
     1c6:	45 6b       	ori	r20, 0xB5	; 181
     1c8:	53 6b       	ori	r21, 0xB3	; 179
     1ca:	5a 6b       	ori	r21, 0xBA	; 186
     1cc:	65 6b       	ori	r22, 0xB5	; 181
     1ce:	5f 91       	pop	r21
     1d0:	55 91       	lpm	r21, Z+
     1d2:	73 91       	.word	0x9173	; ????
     1d4:	66 91       	elpm	r22, Z
     1d6:	63 91       	.word	0x9163	; ????
     1d8:	2b 91       	.word	0x912b	; ????
     1da:	4d 91       	ld	r20, X+
     1dc:	20 91 d0 9a 	lds	r18, 0x9AD0	; 0x809ad0 <__bss_end+0x821b>
     1e0:	e0 9b       	sbis	0x1c, 0	; 28
     1e2:	03 9c       	mul	r0, r3
     1e4:	1d 9c       	mul	r1, r13
     1e6:	50 9c       	mul	r5, r0
     1e8:	68 9c       	mul	r6, r8
     1ea:	7f 9c       	mul	r7, r15
     1ec:	94 9c       	mul	r9, r4
     1ee:	d0 d4       	rcall	.+2464   	; 0xb90 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1+0xb>
     1f0:	d3 d4       	rcall	.+2470   	; 0xb98 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1+0x13>
     1f2:	c2 d4       	rcall	.+2436   	; 0xb78 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2+0x5>
     1f4:	c6 d4       	rcall	.+2444   	; 0xb82 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2+0xf>
     1f6:	cc d4       	rcall	.+2456   	; 0xb90 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1+0xb>
     1f8:	0a d5       	rcall	.+2580   	; 0xc0e <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x31>
     1fa:	d7 d4       	rcall	.+2478   	; 0xbaa <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0+0x11>
     1fc:	db d4       	rcall	.+2486   	; 0xbb4 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0+0x1b>
     1fe:	e1 d4       	rcall	.+2498   	; 0xbc2 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0+0x29>
     200:	e5 d4       	rcall	.+2506   	; 0xbcc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0+0x33>
     202:	e9 d4       	rcall	.+2514   	; 0xbd6 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0+0x3d>
     204:	ef d4       	rcall	.+2526   	; 0xbe4 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x7>
     206:	f3 d4       	rcall	.+2534   	; 0xbee <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x11>
     208:	f7 d4       	rcall	.+2542   	; 0xbf8 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x1b>
     20a:	0a d5       	rcall	.+2580   	; 0xc20 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x43>
     20c:	fd d4       	rcall	.+2554   	; 0xc08 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x2b>
     20e:	01 d5       	rcall	.+2562   	; 0xc12 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x35>
     210:	05 d5       	rcall	.+2570   	; 0xc1c <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c+0x3f>
     212:	2f de       	rcall	.-930    	; 0xfffffe72 <__eeprom_end+0xff7efe72>
     214:	1c de       	rcall	.-968    	; 0xfffffe4e <__eeprom_end+0xff7efe4e>
     216:	1e de       	rcall	.-964    	; 0xfffffe54 <__eeprom_end+0xff7efe54>
     218:	20 de       	rcall	.-960    	; 0xfffffe5a <__eeprom_end+0xff7efe5a>
     21a:	22 de       	rcall	.-956    	; 0xfffffe60 <__eeprom_end+0xff7efe60>
     21c:	24 de       	rcall	.-952    	; 0xfffffe66 <__eeprom_end+0xff7efe66>
     21e:	26 de       	rcall	.-948    	; 0xfffffe6c <__eeprom_end+0xff7efe6c>
     220:	28 de       	rcall	.-944    	; 0xfffffe72 <__eeprom_end+0xff7efe72>
     222:	8e df       	rcall	.-228    	; 0x140 <__SREG__+0x101>
     224:	58 df       	rcall	.-336    	; 0xd6 <__SREG__+0x97>
     226:	60 df       	rcall	.-320    	; 0xe8 <__SREG__+0xa9>
     228:	6c df       	rcall	.-296    	; 0x102 <__SREG__+0xc3>
     22a:	79 df       	rcall	.-270    	; 0x11e <__SREG__+0xdf>
     22c:	9a df       	rcall	.-204    	; 0x162 <__SREG__+0x123>
     22e:	a7 df       	rcall	.-178    	; 0x17e <__SREG__+0x13f>
     230:	07 63       	ori	r16, 0x37	; 55
     232:	42 36       	cpi	r20, 0x62	; 98
     234:	b7 9b       	sbis	0x16, 7	; 22
     236:	d8 a7       	std	Y+40, r29	; 0x28
     238:	1a 39       	cpi	r17, 0x9A	; 154
     23a:	68 56       	subi	r22, 0x68	; 104
     23c:	18 ae       	std	Y+56, r1	; 0x38
     23e:	ba ab       	std	Y+50, r27	; 0x32
     240:	55 8c       	ldd	r5, Z+29	; 0x1d
     242:	1d 3c       	cpi	r17, 0xCD	; 205
     244:	b7 cc       	rjmp	.-1682   	; 0xfffffbb4 <__eeprom_end+0xff7efbb4>
     246:	57 63       	ori	r21, 0x37	; 55
     248:	bd 6d       	ori	r27, 0xDD	; 221
     24a:	ed fd       	.word	0xfded	; ????
     24c:	75 3e       	cpi	r23, 0xE5	; 229
     24e:	f6 17       	cp	r31, r22
     250:	72 31       	cpi	r23, 0x12	; 18
     252:	bf 00       	.word	0x00bf	; ????
     254:	00 00       	nop
     256:	80 3f       	cpi	r24, 0xF0	; 240
     258:	08 00       	.word	0x0008	; ????
     25a:	00 00       	nop
     25c:	be 92       	st	-X, r11
     25e:	24 49       	sbci	r18, 0x94	; 148
     260:	12 3e       	cpi	r17, 0xE2	; 226
     262:	ab aa       	std	Y+51, r10	; 0x33
     264:	aa 2a       	or	r10, r26
     266:	be cd       	rjmp	.-1156   	; 0xfffffde4 <__eeprom_end+0xff7efde4>
     268:	cc cc       	rjmp	.-1640   	; 0xfffffc02 <__eeprom_end+0xff7efc02>
     26a:	4c 3e       	cpi	r20, 0xEC	; 236
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
     270:	be ab       	std	Y+54, r27	; 0x36
     272:	aa aa       	std	Y+50, r10	; 0x32
     274:	aa 3e       	cpi	r26, 0xEA	; 234
     276:	00 00       	nop
     278:	00 00       	nop
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	00 00       	nop
     282:	00 00       	nop
     284:	00 08       	sbc	r0, r0
     286:	41 78       	andi	r20, 0x81	; 129
     288:	d3 bb       	out	0x13, r29	; 19
     28a:	43 87       	std	Z+11, r20	; 0x0b
     28c:	d1 13       	cpse	r29, r17
     28e:	3d 19       	sub	r19, r13
     290:	0e 3c       	cpi	r16, 0xCE	; 206
     292:	c3 bd       	out	0x23, r28	; 35
     294:	42 82       	std	Z+2, r4	; 0x02
     296:	ad 2b       	or	r26, r29
     298:	3e 68       	ori	r19, 0x8E	; 142
     29a:	ec 82       	std	Y+4, r14	; 0x04
     29c:	76 be       	out	0x36, r7	; 54
     29e:	d9 8f       	std	Y+25, r29	; 0x19
     2a0:	e1 a9       	ldd	r30, Z+49	; 0x31
     2a2:	3e 4c       	sbci	r19, 0xCE	; 206
     2a4:	80 ef       	ldi	r24, 0xF0	; 240
     2a6:	ff be       	out	0x3f, r15	; 63
     2a8:	01 c4       	rjmp	.+2050   	; 0xaac <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x3b>
     2aa:	ff 7f       	andi	r31, 0xFF	; 255
     2ac:	3f 00       	.word	0x003f	; ????
     2ae:	00 00       	nop
	...

000002b2 <__trampolines_end>:
     2b2:	46 6c       	ori	r20, 0xC6	; 198
     2b4:	75 73       	andi	r23, 0x35	; 53
     2b6:	68 5f       	subi	r22, 0xF8	; 248
     2b8:	52 75       	andi	r21, 0x52	; 82
     2ba:	6e 6e       	ori	r22, 0xEE	; 238
     2bc:	69 6e       	ori	r22, 0xE9	; 233
     2be:	67 20       	and	r6, r7
     2c0:	36 3a       	cpi	r19, 0xA6	; 166
     2c2:	20 00       	.word	0x0020	; ????

000002c4 <_ZZ17Flush_ControllingvE3__c_1>:
     2c4:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 33 3a     Flush_Running 3:
     2d4:	20 00                                                .

000002d6 <_ZZ17Flush_ControllingvE3__c_0>:
     2d6:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 32 3a     Flush_Running 2:
     2e6:	20 00                                                .

000002e8 <_ZZ17Flush_ControllingvE3__c>:
     2e8:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 30 3a     Flush_Running 0:
     2f8:	20 00                                                .

000002fa <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_42>:
     2fa:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     30a:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000319 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_41>:
     319:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     329:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     339:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     349:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000354 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_40>:
     354:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     364:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     374:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     384:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000038f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_39>:
     38f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     39f:	69 6c 00                                            il.

000003a2 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_38>:
     3a2:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     3b2:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     3c2:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000003cd <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_37>:
     3cd:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     3dd:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000003eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_36>:
     3eb:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     3fb:	74 61 20 3a 20 00                                   ta : .

00000401 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_35>:
     401:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     411:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     421:	65 20 31 00                                         e 1.

00000425 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_34>:
     425:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     435:	6d 62 65 72 20 00                                   mber .

0000043b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_33>:
     43b:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     44b:	6f 2e 20 00                                         o. .

0000044f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_32>:
     44f:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
     45f:	6e 6f 20 3a 20 00                                   no : .

00000465 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_31>:
     465:	20 00                                                .

00000467 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_30>:
     467:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00000475 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_29>:
     475:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     485:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000494 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_28>:
     494:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4a4:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4b4:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4c4:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000004cf <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_27>:
     4cf:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4df:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4ef:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4ff:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000050a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_26>:
     50a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     51a:	4f 5f 46 45 45 44 42 41 43 4b 20 31 00              O_FEEDBACK 1.

00000527 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_25>:
     527:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     537:	69 6c 00                                            il.

0000053a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_24>:
     53a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     54a:	4f 5f 46 45 45 44 42 41 43 4b 20 30 00              O_FEEDBACK 0.

00000557 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_23>:
     557:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     567:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     577:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00000582 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_22>:
     582:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     592:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000005a0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_21>:
     5a0:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     5b0:	74 61 20 3a 20 00                                   ta : .

000005b6 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_20>:
     5b6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     5c6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     5d6:	65 20 31 00                                         e 1.

000005da <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_19>:
     5da:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     5ea:	6d 62 65 72 20 00                                   mber .

000005f0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_18>:
     5f0:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     600:	6f 2e 20 00                                         o. .

00000604 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_17>:
     604:	54 61 72 67 65 74 5f 50 6c 6f 74 5f 4e 75 6d 20     Target_Plot_Num 
     614:	70 6c 6f 74 20 6e 6f 20 3a 20 00                    plot no : .

0000061f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_16>:
     61f:	20 00                                                .

00000621 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_15>:
     621:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

0000062f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_14>:
     62f:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
     63f:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
     64f:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

0000065d <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_13>:
     65d:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     66d:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
     67d:	29 00                                               ).

0000067f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_12>:
     67f:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     68f:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     69f:	20 6f 6e 6e 29 00                                    onn).

000006a5 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_11>:
     6a5:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     6b5:	61 20 3a 20 00                                      a : .

000006ba <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_10>:
     6ba:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     6ca:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     6da:	65 20 3b 00                                         e ;.

000006de <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_9>:
     6de:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     6ee:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     6fe:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00000709 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_8>:
     709:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
     719:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
     729:	61 64 79 20 6f 6e 00                                ady on.

00000730 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_7>:
     730:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     740:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00000751 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_6>:
     751:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     761:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     771:	20 6f 6e 29 00                                       on).

00000776 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_5>:
     776:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     786:	61 20 3a 20 00                                      a : .

0000078b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_4>:
     78b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     79b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     7ab:	65 20 00                                            e .

000007ae <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_3>:
     7ae:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     7be:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     7ce:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

000007d9 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_2>:
     7d9:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     7e9:	20 00                                                .

000007eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_1>:
     7eb:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

000007fc <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_0>:
     7fc:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     80c:	20 00                                                .

0000080e <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c>:
     80e:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000081f <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_5>:
     81f:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000830 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_4>:
     830:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 20     wireless pump 3 
	...

00000841 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_3>:
     841:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000852 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_2>:
     852:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 34 20     wireless pump 4 
     862:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     872:	23 23 23 23 23 23 23 23 23 23 00                    ##########.

0000087d <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_1>:
     87d:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 2e     wireless pump 3.
     88d:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
     89d:	2e 2e 2e 2c 2c 2c 2c 2c 2c 2c 20 00                 ...,,,,,,, .

000008a9 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_0>:
     8a9:	53 65 6c 65 63 74 65 64 20 77 69 72 65 6c 65 73     Selected wireles
     8b9:	73 20 70 75 6d 70 20 3e 20 00                       s pump > .

000008c3 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c>:
     8c3:	53 65 6c 65 63 74 65 64 20 76 61 6c 76 65 20 6e     Selected valve n
     8d3:	75 6d 62 65 72 20 77 69 72 65 6c 65 73 73 20 70     umber wireless p
     8e3:	75 6d 70 20 3e 20 00                                ump > .

000008ea <_ZZ16Set_Trigger_TimevE3__c>:
     8ea:	74 72 69 67 67 65 72 20 74 69 6d 65 20 73 65 74     trigger time set
	...

000008fb <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_12>:
     8fb:	63 68 65 63 6b 5f 74 72 75 65 5f 63 6f 6e 64 69     check_true_condi
     90b:	74 69 6f 6e 00                                      tion.

00000910 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_11>:
     910:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     920:	30 2e 34 00                                         0.4.

00000924 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_10>:
     924:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 33 00     sc 1 enter 15.3.

00000934 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_9>:
     934:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 32 00     sc 1 enter 15.2.

00000944 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_8>:
     944:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 31 00     sc 1 enter 15.1.

00000954 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_7>:
     954:	73 63 20 31 20 65 6e 74 65 72 20 31 35 00           sc 1 enter 15.

00000962 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_6>:
     962:	73 63 20 31 20 65 6e 74 65 72 20 31 34 00           sc 1 enter 14.

00000970 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_5>:
     970:	73 63 20 31 20 65 6e 74 65 72 20 31 33 00           sc 1 enter 13.

0000097e <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_4>:
     97e:	73 63 20 31 20 65 6e 74 65 72 20 31 32 00           sc 1 enter 12.

0000098c <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_3>:
     98c:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     99c:	30 2e 32 00                                         0.2.

000009a0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_2>:
     9a0:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     9b0:	30 2e 31 00                                         0.1.

000009b4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_1>:
     9b4:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 00     sc 1 enter 12.0.

000009c4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_0>:
     9c4:	73 63 20 65 6e 74 65 72 20 32 33 00                 sc enter 23.

000009d0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c>:
     9d0:	73 63 20 65 6e 74 65 72 20 32 32 00                 sc enter 22.

000009dc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_9>:
     9dc:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     9ec:	75 70 61 64 74 65 20 35 2e 32 2f 2f 2f 2f 2f 2f     upadte 5.2//////
     9fc:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a0c:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a1c:	2f 2f 2f 2f 2f 00                                   /////.

00000a22 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8>:
     a22:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     a32:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     a42:	35 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     5.1/////////////
     a52:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a62:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000a71 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7>:
     a71:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     a81:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     a91:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     aa1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ab1:	2f 2f 2f 00                                         ///.

00000ab5 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6>:
     ab5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     ac5:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     ad5:	34 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4.1/////////////
     ae5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     af5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000b04 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5>:
     b04:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     b14:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     b24:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     b34:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     b44:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000b51 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_4>:
     b51:	73 63 20 65 6e 74 65 72 20 33 30 2e 31 2e 31 00     sc enter 30.1.1.

00000b61 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_3>:
     b61:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 30 2e     sc enter 11.2.0.
     b71:	32 00                                               2.

00000b73 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2>:
     b73:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b83:	31 00                                               1.

00000b85 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1>:
     b85:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b95:	30 2e 30 00                                         0.0.

00000b99 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0>:
     b99:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     ba9:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     bb9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bc9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bd9:	2f 2f 2f 00                                         ///.

00000bdd <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c>:
     bdd:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     bed:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     bfd:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     c0d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     c1d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000c2a <_ZZ18Next_Day_CalculatehhE3__c_3>:
     c2a:	43 75 72 72 65 6e 74 20 64 61 74 65 20 3a 20 00     Current date : .

00000c3a <_ZZ18Next_Day_CalculatehhE3__c_2>:
     c3a:	52 65 71 75 69 72 65 64 20 64 61 74 65 20 3a 20     Required date : 
	...

00000c4b <_ZZ18Next_Day_CalculatehhE3__c_1>:
     c4b:	64 69 61 79 73 20 69 6e 20 62 65 74 65 77 65 65     diays in betewee
     c5b:	65 6e 20 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     en .............
     c6b:	3a 20 00                                            : .

00000c6e <_ZZ18Next_Day_CalculatehhE3__c_0>:
     c6e:	43 75 72 72 65 6e 74 20 64 61 74 65 20 32 3a 20     Current date 2: 
	...

00000c7f <_ZZ18Next_Day_CalculatehhE3__c>:
     c7f:	43 75 72 72 65 6e 74 20 64 61 74 65 20 31 3a 20     Current date 1: 
	...

00000c90 <_ZZ22Do_Not_Repeat_SchedulevE3__c_1>:
     c90:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     ca0:	68 65 64 75 6c 65 20 32 20 23 23 23 23 23 23 23     hedule 2 #######
     cb0:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cc0:	23 23 23 23 23 23 23 00                             #######.

00000cc8 <_ZZ22Do_Not_Repeat_SchedulevE3__c_0>:
     cc8:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     cd8:	68 65 64 75 6c 65 20 31 2e 31 20 23 23 23 23 23     hedule 1.1 #####
     ce8:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cf8:	23 23 23 23 23 23 23 23 23 00                       #########.

00000d02 <_ZZ22Do_Not_Repeat_SchedulevE3__c>:
     d02:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     d12:	68 65 64 75 6c 65 20 31 20 23 23 23 23 23 23 23     hedule 1 #######
     d22:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     d32:	23 23 23 23 23 23 23 00                             #######.

00000d3a <_ZZ18Edited_In_SchedulevE3__c_21>:
     d3a:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     d4a:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     d5a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d6a:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d7a:	2f 2f 2f 2f 00                                      ////.

00000d7f <_ZZ18Edited_In_SchedulevE3__c_20>:
     d7f:	6d 79 20 31 34 00                                   my 14.

00000d85 <_ZZ18Edited_In_SchedulevE3__c_19>:
     d85:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     d95:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     da5:	61 74 65 64 5f 44 61 74 65 20 34 2f 2f 2f 2f 20     ated_Date 4//// 
     db5:	3a 00                                               :.

00000db7 <_ZZ18Edited_In_SchedulevE3__c_18>:
     db7:	6d 79 20 39 00                                      my 9.

00000dbc <_ZZ18Edited_In_SchedulevE3__c_17>:
     dbc:	6d 79 20 38 00                                      my 8.

00000dc1 <_ZZ18Edited_In_SchedulevE3__c_16>:
     dc1:	6d 79 20 37 00                                      my 7.

00000dc6 <_ZZ18Edited_In_SchedulevE3__c_15>:
     dc6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     dd6:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     de6:	61 74 65 64 5f 44 61 74 65 20 31 2f 2f 2f 2f 20     ated_Date 1//// 
     df6:	3a 00                                               :.

00000df8 <_ZZ18Edited_In_SchedulevE3__c_14>:
     df8:	6d 79 20 36 2e 32 00                                my 6.2.

00000dff <_ZZ18Edited_In_SchedulevE3__c_13>:
     dff:	6d 79 20 36 2e 31 00                                my 6.1.

00000e06 <_ZZ18Edited_In_SchedulevE3__c_12>:
     e06:	6d 79 20 36 00                                      my 6.

00000e0b <_ZZ18Edited_In_SchedulevE3__c_11>:
     e0b:	6d 79 20 35 00                                      my 5.

00000e10 <_ZZ18Edited_In_SchedulevE3__c_10>:
     e10:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     e20:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     e30:	61 74 65 64 5f 44 61 74 65 20 33 2f 2f 2f 2f 20     ated_Date 3//// 
     e40:	3a 00                                               :.

00000e42 <_ZZ18Edited_In_SchedulevE3__c_9>:
     e42:	6d 79 20 34 00                                      my 4.

00000e47 <_ZZ18Edited_In_SchedulevE3__c_8>:
     e47:	6d 79 20 33 00                                      my 3.

00000e4c <_ZZ18Edited_In_SchedulevE3__c_7>:
     e4c:	42 61 63 6b 20 75 70 20 73 63 68 65 64 75 6c 65     Back up schedule
     e5c:	20 3a 00                                             :.

00000e5f <_ZZ18Edited_In_SchedulevE3__c_6>:
     e5f:	52 75 6e 6e 69 6e 67 20 73 63 68 65 64 75 6c 65     Running schedule
     e6f:	20 3a 00                                             :.

00000e72 <_ZZ18Edited_In_SchedulevE3__c_5>:
     e72:	6d 79 20 32 00                                      my 2.

00000e77 <_ZZ18Edited_In_SchedulevE3__c_4>:
     e77:	6d 79 20 31 00                                      my 1.

00000e7c <_ZZ18Edited_In_SchedulevE3__c_3>:
     e7c:	6d 79 20 30 00                                      my 0.

00000e81 <_ZZ18Edited_In_SchedulevE3__c_2>:
     e81:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     e91:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     ea1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     eb1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ec1:	2f 2f 2f 2f 00                                      ////.

00000ec6 <_ZZ18Edited_In_SchedulevE3__c_1>:
     ec6:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 6d 6f 6e     Running list mon
     ed6:	74 68 20 00                                         th .

00000eda <_ZZ18Edited_In_SchedulevE3__c_0>:
     eda:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 64 61 74     Running list dat
     eea:	65 20 00                                            e .

00000eed <_ZZ18Edited_In_SchedulevE3__c>:
     eed:	6d 79 20 31 34 00                                   my 14.

00000ef3 <_ZZ17Blower_MonitoringhE3__c_0>:
     ef3:	62 6c 6f 77 65 72 20 67 65 74 73 20 32 2e 31 20     blower gets 2.1 
     f03:	3a 20 00                                            : .

00000f06 <_ZZ17Blower_MonitoringhE3__c>:
     f06:	62 6c 6f 77 65 72 20 67 65 74 73 20 31 2e 31 20     blower gets 1.1 
     f16:	3a 20 00                                            : .

00000f19 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c_0>:
     f19:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 67 65 74 73     tank number gets
     f29:	20 74 6f 20 6f 66 66 20 73 61 66 65 6c 79 00         to off safely.

00000f38 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c>:
     f38:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 6c 69 73 74     tank number list
	...

00000f49 <_ZZ17Doser_Pump_On_OffhE3__c_10>:
     f49:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     f59:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000f68 <_ZZ17Doser_Pump_On_OffhE3__c_9>:
     f68:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     f78:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     f88:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     f98:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000fa3 <_ZZ17Doser_Pump_On_OffhE3__c_8>:
     fa3:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fb3:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     fc3:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     fd3:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00000fde <_ZZ17Doser_Pump_On_OffhE3__c_7>:
     fde:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fee:	69 6c 00                                            il.

00000ff1 <_ZZ17Doser_Pump_On_OffhE3__c_6>:
     ff1:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    1001:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    1011:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

0000101c <_ZZ17Doser_Pump_On_OffhE3__c_5>:
    101c:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    102c:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

0000103a <_ZZ17Doser_Pump_On_OffhE3__c_4>:
    103a:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    104a:	74 61 20 3a 20 00                                   ta : .

00001050 <_ZZ17Doser_Pump_On_OffhE3__c_3>:
    1050:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    1060:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    1070:	65 20 31 00                                         e 1.

00001074 <_ZZ17Doser_Pump_On_OffhE3__c_2>:
    1074:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    1084:	6d 62 65 72 20 00                                   mber .

0000108a <_ZZ17Doser_Pump_On_OffhE3__c_1>:
    108a:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    109a:	6f 2e 20 00                                         o. .

0000109e <_ZZ17Doser_Pump_On_OffhE3__c_0>:
    109e:	20 00                                                .

000010a0 <_ZZ17Doser_Pump_On_OffhE3__c>:
    10a0:	64 6f 73 65 72 20 70 75 6d 70 20 76 61 6c 76 65     doser pump valve
    10b0:	20 6c 69 73 74 20 3a 20 00                           list : .

000010b9 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_15>:
    10b9:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10c9:	65 64 75 6c 65 20 4f 4e 20 3a 20 00                 edule ON : .

000010d5 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_14>:
    10d5:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10e5:	65 64 75 6c 65 20 4f 66 66 20 31 20 3a 20 00        edule Off 1 : .

000010f4 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_13>:
    10f4:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    1104:	65 64 75 6c 65 20 4f 66 66 20 30 20 3a 20 00        edule Off 0 : .

00001113 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_12>:
    1113:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    1123:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00001132 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_11>:
    1132:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    1142:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    1152:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    1162:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

0000116d <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10>:
    116d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    117d:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    118d:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    119d:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

000011a8 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9>:
    11a8:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    11b8:	69 6c 00                                            il.

000011bb <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8>:
    11bb:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    11cb:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    11db:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000011e6 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7>:
    11e6:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    11f6:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00001204 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_6>:
    1204:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    1214:	74 61 20 3a 20 00                                   ta : .

0000121a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_5>:
    121a:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    122a:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    123a:	65 20 31 00                                         e 1.

0000123e <_ZZ22Fertilizer_Tank_On_OffhhE3__c_4>:
    123e:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    124e:	6d 62 65 72 20 00                                   mber .

00001254 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_3>:
    1254:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    1264:	6f 2e 20 00                                         o. .

00001268 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_2>:
    1268:	20 00                                                .

0000126a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_1>:
    126a:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    127a:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00001288 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_0>:
    1288:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1298:	6e 75 6d 62 65 72 20 3a 20 00                       number : .

000012a2 <_ZZ22Fertilizer_Tank_On_OffhhE3__c>:
    12a2:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    12b2:	6e 75 6d 62 65 72 20 69 73 20 6c 65 73 73 20 74     number is less t
    12c2:	68 61 6e 20 31 30 30 20 3a 20 00                    han 100 : .

000012cd <_ZZ26Fertilizer_Tank_MonitoringvE3__c_0>:
    12cd:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12dd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 31 20 3a 20 00     Monitoring 1 : .

000012ed <_ZZ26Fertilizer_Tank_MonitoringvE3__c>:
    12ed:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12fd:	4d 6f 6e 69 74 6f 72 69 6e 67 20 3a 20 00           Monitoring : .

0000130b <_ZZ20Schedules_MonitoringvE3__c_37>:
    130b:	73 63 20 65 6e 74 65 72 20 35 39 2e 31 00           sc enter 59.1.

00001319 <_ZZ20Schedules_MonitoringvE3__c_36>:
    1319:	53 63 68 65 64 75 6c 65 72 20 67 65 74 73 20 6f     Scheduler gets o
    1329:	66 66 20 31 31 20 3a 20 00                          ff 11 : .

00001332 <_ZZ20Schedules_MonitoringvE3__c_35>:
    1332:	73 63 20 65 6e 74 65 72 20 36 32 00                 sc enter 62.

0000133e <_ZZ20Schedules_MonitoringvE3__c_34>:
    133e:	73 63 20 65 6e 74 65 72 20 36 31 00                 sc enter 61.

0000134a <_ZZ20Schedules_MonitoringvE3__c_33>:
    134a:	73 63 20 65 6e 74 65 72 20 36 30 00                 sc enter 60.

00001356 <_ZZ20Schedules_MonitoringvE3__c_32>:
    1356:	73 63 20 65 6e 74 65 72 20 35 39 00                 sc enter 59.

00001362 <_ZZ20Schedules_MonitoringvE3__c_31>:
    1362:	73 63 20 65 6e 74 65 72 20 35 38 00                 sc enter 58.

0000136e <_ZZ20Schedules_MonitoringvE3__c_30>:
    136e:	73 63 20 65 6e 74 65 72 20 35 35 00                 sc enter 55.

0000137a <_ZZ20Schedules_MonitoringvE3__c_29>:
    137a:	73 63 20 65 6e 74 65 72 20 35 30 00                 sc enter 50.

00001386 <_ZZ20Schedules_MonitoringvE3__c_28>:
    1386:	73 63 20 65 6e 74 65 72 20 34 39 00                 sc enter 49.

00001392 <_ZZ20Schedules_MonitoringvE3__c_27>:
    1392:	73 63 20 65 6e 74 65 72 20 34 34 00                 sc enter 44.

0000139e <_ZZ20Schedules_MonitoringvE3__c_26>:
    139e:	73 63 20 65 6e 74 65 72 20 33 39 00                 sc enter 39.

000013aa <_ZZ20Schedules_MonitoringvE3__c_25>:
    13aa:	73 63 20 65 6e 74 65 72 20 33 38 00                 sc enter 38.

000013b6 <_ZZ20Schedules_MonitoringvE3__c_24>:
    13b6:	73 63 20 65 6e 74 65 72 20 33 37 00                 sc enter 37.

000013c2 <_ZZ20Schedules_MonitoringvE3__c_23>:
    13c2:	73 63 20 65 6e 74 65 72 20 33 32 00                 sc enter 32.

000013ce <_ZZ20Schedules_MonitoringvE3__c_22>:
    13ce:	73 63 20 65 6e 74 65 72 20 32 37 00                 sc enter 27.

000013da <_ZZ20Schedules_MonitoringvE3__c_21>:
    13da:	73 63 20 65 6e 74 65 72 20 32 36 00                 sc enter 26.

000013e6 <_ZZ20Schedules_MonitoringvE3__c_20>:
    13e6:	73 63 20 65 6e 74 65 72 20 31 37 00                 sc enter 17.

000013f2 <_ZZ20Schedules_MonitoringvE3__c_19>:
    13f2:	73 63 20 65 6e 74 65 72 20 31 36 00                 sc enter 16.

000013fe <_ZZ20Schedules_MonitoringvE3__c_18>:
    13fe:	73 63 20 65 6e 74 65 72 20 37 2e 31 00              sc enter 7.1.

0000140b <_ZZ20Schedules_MonitoringvE3__c_17>:
    140b:	73 63 20 65 6e 74 65 72 20 36 2e 31 2e 2e 2e 2e     sc enter 6.1....
    141b:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    142b:	2e 2e 2e 2e 2e 2e 00                                .......

00001432 <_ZZ20Schedules_MonitoringvE3__c_16>:
    1432:	73 63 20 65 6e 74 65 72 20 36 2e 30 2e 2e 2e 2e     sc enter 6.0....
    1442:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1452:	2e 2e 2e 2e 2e 2e 00                                .......

00001459 <_ZZ20Schedules_MonitoringvE3__c_15>:
    1459:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 31 00     sc enter 11.2.1.

00001469 <_ZZ20Schedules_MonitoringvE3__c_14>:
    1469:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 00           sc enter 11.2.

00001477 <_ZZ20Schedules_MonitoringvE3__c_13>:
    1477:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 00           sc enter 11.1.

00001485 <_ZZ20Schedules_MonitoringvE3__c_12>:
    1485:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1495:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    14a5:	61 74 65 64 5f 44 61 74 65 20 32 2f 2f 2f 2f 20     ated_Date 2//// 
    14b5:	3a 00                                               :.

000014b7 <_ZZ20Schedules_MonitoringvE3__c_11>:
    14b7:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000014c3 <_ZZ20Schedules_MonitoringvE3__c_10>:
    14c3:	73 63 20 65 6e 74 65 72 20 31 30 00                 sc enter 10.

000014cf <_ZZ20Schedules_MonitoringvE3__c_9>:
    14cf:	73 63 20 65 6e 74 65 72 20 39 00                    sc enter 9.

000014da <_ZZ20Schedules_MonitoringvE3__c_8>:
    14da:	73 63 20 65 6e 74 65 72 20 38 2e 2e 2e 2e 2e 2e     sc enter 8......
    14ea:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    14fa:	2e 2e 2e 2e 2e 00                                   ......

00001500 <_ZZ20Schedules_MonitoringvE3__c_7>:
    1500:	73 63 20 65 6e 74 65 72 20 37 2e 2e 2e 2e 2e 2e     sc enter 7......
    1510:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1520:	2e 2e 2e 2e 2e 2e 2e 2e 00                          .........

00001529 <_ZZ20Schedules_MonitoringvE3__c_6>:
    1529:	73 63 20 65 6e 74 65 72 20 36 2e 2e 2e 2e 2e 2e     sc enter 6......
    1539:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001547 <_ZZ20Schedules_MonitoringvE3__c_5>:
    1547:	73 63 20 65 6e 74 65 72 20 35 2e 2e 2e 2e 2e 2e     sc enter 5......
    1557:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001565 <_ZZ20Schedules_MonitoringvE3__c_4>:
    1565:	73 63 20 65 6e 74 65 72 20 34 2e 2e 2e 2e 2e 2e     sc enter 4......
    1575:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00              .............

00001582 <_ZZ20Schedules_MonitoringvE3__c_3>:
    1582:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1592:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15a2:	61 74 65 64 5f 44 61 74 65 20 30 2f 2f 2f 2f 20     ated_Date 0//// 
    15b2:	3a 00                                               :.

000015b4 <_ZZ20Schedules_MonitoringvE3__c_2>:
    15b4:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000015c0 <_ZZ20Schedules_MonitoringvE3__c_1>:
    15c0:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    15d0:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15e0:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2e 30 2f     ated_Date 0.0.0/
    15f0:	2f 2f 2f 20 3a 00                                   /// :.

000015f6 <_ZZ20Schedules_MonitoringvE3__c_0>:
    15f6:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1606:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1616:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2f 2f 2f     ated_Date 0.0///
    1626:	2f 20 3a 00                                         / :.

0000162a <_ZZ20Schedules_MonitoringvE3__c>:
    162a:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    163a:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    164a:	61 74 65 64 5f 44 61 74 65 20 30 2e 2f 2f 2f 2f     ated_Date 0.////
    165a:	20 3a 00                                             :.

0000165d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_65>:
    165d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 2e 31 00     day in btw 11.1.

0000166d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_64>:
    166d:	64 61 79 20 69 6e 20 62 74 77 20 31 30 2e 31 00     day in btw 10.1.

0000167d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_63>:
    167d:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

0000168c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_62>:
    168c:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

0000169b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_61>:
    169b:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016aa <_ZZ22Day_In_Bet_SchedullinghhhE3__c_60>:
    16aa:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016b7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_59>:
    16b7:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016c6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_58>:
    16c6:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016d3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_57>:
    16d3:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016e2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_56>:
    16e2:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

000016f1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_55>:
    16f1:	64 61 79 20 69 6e 20 62 74 77 20 37 2e 31 00        day in btw 7.1.

00001700 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_54>:
    1700:	64 61 79 20 69 6e 20 62 74 77 20 36 2e 31 00        day in btw 6.1.

0000170f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_53>:
    170f:	64 61 79 20 69 6e 20 62 74 77 20 35 2e 31 00        day in btw 5.1.

0000171e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_52>:
    171e:	64 61 79 20 69 6e 20 62 74 77 20 34 2e 31 00        day in btw 4.1.

0000172d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_51>:
    172d:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000173c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_50>:
    173c:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

0000174b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_49>:
    174b:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000175a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_48>:
    175a:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001769 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_47>:
    1769:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001778 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_46>:
    1778:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001787 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_45>:
    1787:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001796 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_44>:
    1796:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017a5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_43>:
    17a5:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_42>:
    17b4:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017c3 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_41>:
    17c3:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017d2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_40>:
    17d2:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_39>:
    17e1:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017f0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_38>:
    17f0:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017ff <_ZZ22Day_In_Bet_SchedullinghhhE3__c_37>:
    17ff:	64 61 79 20 69 6e 20 62 74 77 20 31 2e 31 00        day in btw 1.1.

0000180e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_36>:
    180e:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    181e:	74 20 31 3a 20 00                                   t 1: .

00001824 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_35>:
    1824:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001832 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_34>:
    1832:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001840 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_33>:
    1840:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000184d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_32>:
    184d:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000185a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_31>:
    185a:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001867 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_30>:
    1867:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001874 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_29>:
    1874:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001881 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_28>:
    1881:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000188e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_27>:
    188e:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000189b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_26>:
    189b:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000018a8 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_25>:
    18a8:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

000018b5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_24>:
    18b5:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

000018c2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_23>:
    18c2:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

000018cf <_ZZ22Day_In_Bet_SchedullinghhhE3__c_22>:
    18cf:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

000018dc <_ZZ22Day_In_Bet_SchedullinghhhE3__c_21>:
    18dc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_20>:
    18e9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

000018f6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_19>:
    18f6:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001903 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_18>:
    1903:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001910 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_17>:
    1910:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000191d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_16>:
    191d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000192a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_15>:
    192a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001937 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_14>:
    1937:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001944 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_13>:
    1944:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001951 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_12>:
    1951:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000195e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_11>:
    195e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000196b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_10>:
    196b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001978 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_9>:
    1978:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001985 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_8>:
    1985:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001992 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_7>:
    1992:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

0000199f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_6>:
    199f:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    19af:	74 20 3a 20 00                                      t : .

000019b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_5>:
    19b4:	64 61 79 20 69 6e 20 62 74 77 20 73 74 61 72 74     day in btw start
    19c4:	65 64 00                                            ed.

000019c7 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_4>:
    19c7:	6c 61 73 74 20 6d 6f 6e 74 68 20 3a 20 00           last month : .

000019d5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_3>:
    19d5:	6c 61 73 74 20 64 61 74 65 3a 20 00                 last date: .

000019e1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_2>:
    19e1:	79 65 61 72 20 3a 20 00                             year : .

000019e9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_1>:
    19e9:	6d 6f 6e 74 68 20 3a 20 00                          month : .

000019f2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_0>:
    19f2:	64 61 74 65 20 3a 20 00                             date : .

000019fa <_ZZ22Day_In_Bet_SchedullinghhhE3__c>:
    19fa:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    1a0a:	3a 20 00                                            : .

00001a0d <_ZZ22Day_In_Bet_SchedullinghE3__c_61>:
    1a0d:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001a1b <_ZZ22Day_In_Bet_SchedullinghE3__c_60>:
    1a1b:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001a29 <_ZZ22Day_In_Bet_SchedullinghE3__c_59>:
    1a29:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a36 <_ZZ22Day_In_Bet_SchedullinghE3__c_58>:
    1a36:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a43 <_ZZ22Day_In_Bet_SchedullinghE3__c_57>:
    1a43:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a50 <_ZZ22Day_In_Bet_SchedullinghE3__c_56>:
    1a50:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a5d <_ZZ22Day_In_Bet_SchedullinghE3__c_55>:
    1a5d:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a6a <_ZZ22Day_In_Bet_SchedullinghE3__c_54>:
    1a6a:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a77 <_ZZ22Day_In_Bet_SchedullinghE3__c_53>:
    1a77:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a84 <_ZZ22Day_In_Bet_SchedullinghE3__c_52>:
    1a84:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a91 <_ZZ22Day_In_Bet_SchedullinghE3__c_51>:
    1a91:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001a9e <_ZZ22Day_In_Bet_SchedullinghE3__c_50>:
    1a9e:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001aab <_ZZ22Day_In_Bet_SchedullinghE3__c_49>:
    1aab:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001ab8 <_ZZ22Day_In_Bet_SchedullinghE3__c_48>:
    1ab8:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001ac5 <_ZZ22Day_In_Bet_SchedullinghE3__c_47>:
    1ac5:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ad2 <_ZZ22Day_In_Bet_SchedullinghE3__c_46>:
    1ad2:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001adf <_ZZ22Day_In_Bet_SchedullinghE3__c_45>:
    1adf:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001aec <_ZZ22Day_In_Bet_SchedullinghE3__c_44>:
    1aec:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001af9 <_ZZ22Day_In_Bet_SchedullinghE3__c_43>:
    1af9:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b06 <_ZZ22Day_In_Bet_SchedullinghE3__c_42>:
    1b06:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b13 <_ZZ22Day_In_Bet_SchedullinghE3__c_41>:
    1b13:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b20 <_ZZ22Day_In_Bet_SchedullinghE3__c_40>:
    1b20:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b2d <_ZZ22Day_In_Bet_SchedullinghE3__c_39>:
    1b2d:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b3a <_ZZ22Day_In_Bet_SchedullinghE3__c_38>:
    1b3a:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b47 <_ZZ22Day_In_Bet_SchedullinghE3__c_37>:
    1b47:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b54 <_ZZ22Day_In_Bet_SchedullinghE3__c_36>:
    1b54:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b61 <_ZZ22Day_In_Bet_SchedullinghE3__c_35>:
    1b61:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b6e <_ZZ22Day_In_Bet_SchedullinghE3__c_34>:
    1b6e:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b7b <_ZZ22Day_In_Bet_SchedullinghE3__c_33>:
    1b7b:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001b88 <_ZZ22Day_In_Bet_SchedullinghE3__c_32>:
    1b88:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001b96 <_ZZ22Day_In_Bet_SchedullinghE3__c_31>:
    1b96:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001ba4 <_ZZ22Day_In_Bet_SchedullinghE3__c_30>:
    1ba4:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bb1 <_ZZ22Day_In_Bet_SchedullinghE3__c_29>:
    1bb1:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bbe <_ZZ22Day_In_Bet_SchedullinghE3__c_28>:
    1bbe:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bcb <_ZZ22Day_In_Bet_SchedullinghE3__c_27>:
    1bcb:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bd8 <_ZZ22Day_In_Bet_SchedullinghE3__c_26>:
    1bd8:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001be5 <_ZZ22Day_In_Bet_SchedullinghE3__c_25>:
    1be5:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bf2 <_ZZ22Day_In_Bet_SchedullinghE3__c_24>:
    1bf2:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bff <_ZZ22Day_In_Bet_SchedullinghE3__c_23>:
    1bff:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001c0c <_ZZ22Day_In_Bet_SchedullinghE3__c_22>:
    1c0c:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001c19 <_ZZ22Day_In_Bet_SchedullinghE3__c_21>:
    1c19:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001c26 <_ZZ22Day_In_Bet_SchedullinghE3__c_20>:
    1c26:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001c33 <_ZZ22Day_In_Bet_SchedullinghE3__c_19>:
    1c33:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001c40 <_ZZ22Day_In_Bet_SchedullinghE3__c_18>:
    1c40:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c4d <_ZZ22Day_In_Bet_SchedullinghE3__c_17>:
    1c4d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c5a <_ZZ22Day_In_Bet_SchedullinghE3__c_16>:
    1c5a:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c67 <_ZZ22Day_In_Bet_SchedullinghE3__c_15>:
    1c67:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c74 <_ZZ22Day_In_Bet_SchedullinghE3__c_14>:
    1c74:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c81 <_ZZ22Day_In_Bet_SchedullinghE3__c_13>:
    1c81:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c8e <_ZZ22Day_In_Bet_SchedullinghE3__c_12>:
    1c8e:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c9b <_ZZ22Day_In_Bet_SchedullinghE3__c_11>:
    1c9b:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001ca8 <_ZZ22Day_In_Bet_SchedullinghE3__c_10>:
    1ca8:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001cb5 <_ZZ22Day_In_Bet_SchedullinghE3__c_9>:
    1cb5:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cc2 <_ZZ22Day_In_Bet_SchedullinghE3__c_8>:
    1cc2:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ccf <_ZZ22Day_In_Bet_SchedullinghE3__c_7>:
    1ccf:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cdc <_ZZ22Day_In_Bet_SchedullinghE3__c_6>:
    1cdc:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ce9 <_ZZ22Day_In_Bet_SchedullinghE3__c_5>:
    1ce9:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cf6 <_ZZ22Day_In_Bet_SchedullinghE3__c_4>:
    1cf6:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001d03 <_ZZ22Day_In_Bet_SchedullinghE3__c_3>:
    1d03:	69 72 72 69 67 61 74 69 6e 67 20 6d 6f 6e 74 68     irrigating month
    1d13:	20 3a 20 00                                          : .

00001d17 <_ZZ22Day_In_Bet_SchedullinghE3__c_2>:
    1d17:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d27:	3a 20 00                                            : .

00001d2a <_ZZ22Day_In_Bet_SchedullinghE3__c_1>:
    1d2a:	79 65 61 72 20 3a 20 00                             year : .

00001d32 <_ZZ22Day_In_Bet_SchedullinghE3__c_0>:
    1d32:	6d 6f 6e 74 68 20 3a 20 00                          month : .

00001d3b <_ZZ22Day_In_Bet_SchedullinghE3__c>:
    1d3b:	64 61 74 65 20 3a 20 00                             date : .

00001d43 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_2>:
    1d43:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d53:	65 6d 70 5f 4d 6f 6e 74 68 00                       emp_Month.

00001d5d <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_1>:
    1d5d:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d6d:	65 6d 70 5f 64 61 74 65 00                          emp_date.

00001d76 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_0>:
    1d76:	73 63 20 6d 61 6b 65 20 64 61 74 65 00              sc make date.

00001d83 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c>:
    1d83:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d93:	75 70 61 64 74 65 20 31 2f 2f 2f 2f 2f 2f 2f 2f     upadte 1////////
    1da3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1db3:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1dc3:	2f 2f 2f 00                                         ///.

00001dc7 <_ZZ25Update_Wireless_Pump_DataPhE3__c>:
    1dc7:	57 49 52 45 4c 45 53 53 20 50 55 4d 50 20 44 41     WIRELESS PUMP DA
    1dd7:	54 41 20 52 45 43 49 45 56 45 44 00                 TA RECIEVED.

00001de3 <_ZZ22Update_Euro_Valve_DataPhE3__c_16>:
    1de3:	41 43 4b 30 20 53 45 4e 44 20 54 4f 20 56 41 4c     ACK0 SEND TO VAL
    1df3:	56 45 20 00                                         VE .

00001df7 <_ZZ22Update_Euro_Valve_DataPhE3__c_15>:
    1df7:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e07:	4f 57 20 31 20 00                                   OW 1 .

00001e0d <_ZZ22Update_Euro_Valve_DataPhE3__c_14>:
    1e0d:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e1d:	30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     0000000000000000
    1e2d:	30 30 00                                            00.

00001e30 <_ZZ22Update_Euro_Valve_DataPhE3__c_13>:
    1e30:	66 6f 67 67 65 72 3a 20 76 61 6c 76 65 20 66 61     fogger: valve fa
    1e40:	75 6c 74 20 6f 63 63 75 72 65 20 70 6c 65 61 73     ult occure pleas
    1e50:	65 20 74 75 72 6e 20 6f 66 66 20 74 68 65 20 70     e turn off the p
    1e60:	75 6d 70 00                                         ump.

00001e64 <_ZZ22Update_Euro_Valve_DataPhE3__c_12>:
    1e64:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e74:	4f 57 00                                            OW.

00001e77 <_ZZ22Update_Euro_Valve_DataPhE3__c_11>:
    1e77:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e87:	31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31     1111111111111111
    1e97:	31 31 31 31 00                                      1111.

00001e9c <_ZZ22Update_Euro_Valve_DataPhE3__c_10>:
    1e9c:	76 61 6c 76 65 20 66 61 75 6c 74 20 6f 63 63 75     valve fault occu
    1eac:	72 65 20 70 6c 65 61 73 65 20 74 75 72 6e 20 6f     re please turn o
    1ebc:	66 66 20 74 68 65 20 70 75 6d 70 00                 ff the pump.

00001ec8 <_ZZ22Update_Euro_Valve_DataPhE3__c_9>:
    1ec8:	45 55 52 4f 20 50 41 43 4b 45 54 20 49 53 20 4e     EURO PACKET IS N
    1ed8:	4f 54 20 41 50 50 4c 49 43 41 42 4c 45 00           OT APPLICABLE.

00001ee6 <_ZZ22Update_Euro_Valve_DataPhE3__c_8>:
    1ee6:	45 75 72 6f 20 73 74 61 74 75 73 20 3a 20 00        Euro status : .

00001ef5 <_ZZ22Update_Euro_Valve_DataPhE3__c_7>:
    1ef5:	45 75 72 6f 20 6f 6e 6c 69 6e 65 2f 6f 66 66 6c     Euro online/offl
    1f05:	69 6e 65 20 3a 20 00                                ine : .

00001f0c <_ZZ22Update_Euro_Valve_DataPhE3__c_6>:
    1f0c:	42 61 74 74 65 72 79 20 6c 65 76 65 6c 20 3a 20     Battery level : 
	...

00001f1d <_ZZ22Update_Euro_Valve_DataPhE3__c_5>:
    1f1d:	44 61 74 61 20 72 65 63 76 64 20 46 72 6f 6d 20     Data recvd From 
    1f2d:	45 75 72 6f 20 3a 20 00                             Euro : .

00001f35 <_ZZ22Update_Euro_Valve_DataPhE3__c_4>:
    1f35:	64 65 66 61 75 6c 74 20 63 6f 6d 6d 61 6e 64 20     default command 
	...

00001f46 <_ZZ22Update_Euro_Valve_DataPhE3__c_3>:
    1f46:	6c 6f 77 20 62 61 74 74 65 72 79 20 66 61 75 6c     low battery faul
    1f56:	74 00                                               t.

00001f58 <_ZZ22Update_Euro_Valve_DataPhE3__c_2>:
    1f58:	6e 6f 74 20 61 6e 79 20 70 6c 6f 74 20 69 73 20     not any plot is 
    1f68:	69 72 72 69 67 61 74 69 6e 67 00                    irrigating.

00001f73 <_ZZ22Update_Euro_Valve_DataPhE3__c_1>:
    1f73:	5f 65 4e 4f 5f 46 41 55 4c 54 20 00                 _eNO_FAULT .

00001f7f <_ZZ22Update_Euro_Valve_DataPhE3__c_0>:
    1f7f:	5f 65 45 55 52 4f 5f 56 41 4c 56 45 5f 46 41 55     _eEURO_VALVE_FAU
    1f8f:	4c 54 5f 44 41 54 41 00                             LT_DATA.

00001f97 <_ZZ22Update_Euro_Valve_DataPhE3__c>:
    1f97:	45 55 52 4f 20 44 41 54 41 20 52 45 43 49 45 56     EURO DATA RECIEV
    1fa7:	45 44 00                                            ED.

00001faa <_ZZ16Gsm_Gprs_NetworkvE3__c_10>:
    1faa:	41 54 45 30 00                                      ATE0.

00001faf <_ZZ16Gsm_Gprs_NetworkvE3__c_9>:
    1faf:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00001fbb <_ZZ16Gsm_Gprs_NetworkvE3__c_8>:
    1fbb:	66 61 69 6c 20 74 6f 20 63 6f 6e 6e 65 63 74 20     fail to connect 
    1fcb:	67 73 6d 2f 47 50 52 53 20 6e 65 74 77 6f 72 6b     gsm/GPRS network
	...

00001fdc <_ZZ16Gsm_Gprs_NetworkvE3__c_7>:
    1fdc:	53 75 63 63 73 20 43 6f 6e 6e 65 63 74 65 64 20     Succs Connected 
    1fec:	74 6f 20 47 50 52 53 20 6e 65 74 77 6f 72 6b 00     to GPRS network.

00001ffc <_ZZ16Gsm_Gprs_NetworkvE3__c_6>:
    1ffc:	41 54 45 30 00                                      ATE0.

00002001 <_ZZ16Gsm_Gprs_NetworkvE3__c_5>:
    2001:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000200d <_ZZ16Gsm_Gprs_NetworkvE3__c_4>:
    200d:	46 61 69 6c 20 74 6f 20 43 6f 6e 6e 65 63 74 20     Fail to Connect 
    201d:	47 50 52 53 00                                      GPRS.

00002022 <_ZZ16Gsm_Gprs_NetworkvE3__c_3>:
    2022:	43 61 6e 27 74 20 67 65 74 20 6f 70 65 61 72 74     Can't get opeart
    2032:	6f 72 20 4e 61 6d 65 00                             or Name.

0000203a <_ZZ16Gsm_Gprs_NetworkvE3__c_2>:
    203a:	6a 69 6f 00                                         jio.

0000203e <_ZZ16Gsm_Gprs_NetworkvE3__c_1>:
    203e:	41 69 72 74 65 6c 00                                Airtel.

00002045 <_ZZ16Gsm_Gprs_NetworkvE3__c_0>:
    2045:	56 6f 64 61 66 6f 6e 65 00                          Vodafone.

0000204e <_ZZ16Gsm_Gprs_NetworkvE3__c>:
    204e:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 20 67 73 6d     Connected to gsm
    205e:	2f 47 50 52 53 20 6e 65 74 77 6f 72 6b 20 30 00     /GPRS network 0.

0000206e <_ZZ14Get_Local_TimevE3__c_6>:
    206e:	6d 79 20 79 65 61 72 20 3a 20 00                    my year : .

00002079 <_ZZ14Get_Local_TimevE3__c_5>:
    2079:	6d 79 20 6d 6f 6e 74 68 20 3a 20 00                 my month : .

00002085 <_ZZ14Get_Local_TimevE3__c_4>:
    2085:	6d 79 20 64 61 74 65 20 3a 20 00                    my date : .

00002090 <_ZZ14Get_Local_TimevE3__c_3>:
    2090:	41 54 2b 43 43 4c 4b 3f 00                          AT+CCLK?.

00002099 <_ZZ14Get_Local_TimevE3__c_2>:
    2099:	41 54 2b 43 4e 54 50 00                             AT+CNTP.

000020a1 <_ZZ14Get_Local_TimevE3__c_1>:
    20a1:	41 54 2b 43 4e 54 50 3d 22 69 6e 2e 70 6f 6f 6c     AT+CNTP="in.pool
    20b1:	2e 6e 74 70 2e 6f 72 67 22 2c 32 32 00              .ntp.org",22.

000020be <_ZZ14Get_Local_TimevE3__c_0>:
    20be:	41 54 2b 43 54 5a 52 3d 31 00                       AT+CTZR=1.

000020c8 <_ZZ14Get_Local_TimevE3__c>:
    20c8:	41 54 2b 43 54 5a 55 3d 31 00                       AT+CTZU=1.

000020d2 <_ZZ16Display_Update_1vE3__c_25>:
    20d2:	20 20 50 55 4d 50 20 4f 46 46 20 20 00                PUMP OFF  .

000020df <_ZZ16Display_Update_1vE3__c_24>:
    20df:	20 20 20 50 55 4d 50 20 4f 4e 20 20 00                 PUMP ON  .

000020ec <_ZZ16Display_Update_1vE3__c_23>:
    20ec:	20 20 20 20 20 20 49 52 52 49 47 41 54 45 44 20           IRRIGATED 
    20fc:	20 20 20 20 00                                          .

00002101 <_ZZ16Display_Update_1vE3__c_22>:
    2101:	20 4e 4f 20 50 4c 4f 54 20 49 53 20 47 45 54 54      NO PLOT IS GETT
    2111:	49 4e 47 20 00                                      ING .

00002116 <_ZZ16Display_Update_1vE3__c_21>:
    2116:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2126:	20 20 20 20 00                                          .

0000212b <_ZZ16Display_Update_1vE3__c_20>:
    212b:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    213b:	20 20 20 20 00                                          .

00002140 <_ZZ16Display_Update_1vE3__c_19>:
    2140:	20 4e 4f 20 50 4c 4f 54 20 41 44 44 45 44 20 59      NO PLOT ADDED Y
    2150:	45 54 21 20 00                                      ET! .

00002155 <_ZZ16Display_Update_1vE3__c_18>:
    2155:	20 20 20 20 20 4d 41 4e 55 41 4c 20 4d 4f 44 45          MANUAL MODE
    2165:	20 20 20 20 00                                          .

0000216a <_ZZ16Display_Update_1vE3__c_17>:
    216a:	20 20 20 20 20 54 49 4d 45 52 20 4d 4f 44 45 20          TIMER MODE 
    217a:	20 20 20 20 00                                          .

0000217f <_ZZ16Display_Update_1vE3__c_16>:
    217f:	20 20 20 53 43 48 45 44 55 4c 45 52 20 4d 4f 44        SCHEDULER MOD
    218f:	45 20 20 20 00                                      E   .

00002194 <_ZZ16Display_Update_1vE3__c_15>:
    2194:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21a4:	20 20 20 20 00                                          .

000021a9 <_ZZ16Display_Update_1vE3__c_14>:
    21a9:	44 41 54 41 20 49 4e 49 54 49 41 4c 49 53 49 4e     DATA INITIALISIN
    21b9:	47 00                                               G.

000021bb <_ZZ16Display_Update_1vE3__c_13>:
    21bb:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21cb:	20 20 20 20 00                                          .

000021d0 <_ZZ16Display_Update_1vE3__c_12>:
    21d0:	20 20 20 20 20 20 54 48 41 4e 4b 20 59 4f 55 20           THANK YOU 
    21e0:	20 20 20 20 00                                          .

000021e5 <_ZZ16Display_Update_1vE3__c_11>:
    21e5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21f5:	20 20 20 20 00                                          .

000021fa <_ZZ16Display_Update_1vE3__c_10>:
    21fa:	43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 53 45 52     CONNECTED TO SER
    220a:	56 45 52 20 00                                      VER .

0000220f <_ZZ16Display_Update_1vE3__c_9>:
    220f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    221f:	20 20 20 20 00                                          .

00002224 <_ZZ16Display_Update_1vE3__c_8>:
    2224:	20 20 4e 45 54 57 4f 52 4b 20 53 45 4c 45 43 54       NETWORK SELECT
    2234:	45 44 20 20 00                                      ED  .

00002239 <_ZZ16Display_Update_1vE3__c_7>:
    2239:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2249:	20 20 20 20 00                                          .

0000224e <_ZZ16Display_Update_1vE3__c_6>:
    224e:	53 45 41 52 43 48 49 4e 47 20 46 4f 52 20 4e 45     SEARCHING FOR NE
    225e:	54 2e 2e 2e 00                                      T....

00002263 <_ZZ16Display_Update_1vE3__c_5>:
    2263:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2273:	20 20 20 20 00                                          .

00002278 <_ZZ16Display_Update_1vE3__c_4>:
    2278:	52 45 47 49 53 54 45 52 45 44 20 54 4f 20 53 45     REGISTERED TO SE
    2288:	52 56 45 52 00                                      RVER.

0000228d <_ZZ16Display_Update_1vE3__c_3>:
    228d:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    229d:	20 20 20 20 00                                          .

000022a2 <_ZZ16Display_Update_1vE3__c_2>:
    22a2:	20 20 20 20 20 52 45 47 49 53 54 45 52 49 4e 47          REGISTERING
    22b2:	20 20 20 20 00                                          .

000022b7 <_ZZ16Display_Update_1vE3__c_1>:
    22b7:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    22c7:	20 20 20 20 00                                          .

000022cc <_ZZ16Display_Update_1vE3__c_0>:
    22cc:	43 4f 4e 4e 45 43 54 49 4e 47 20 54 4f 20 53 45     CONNECTING TO SE
    22dc:	52 56 45 52 00                                      RVER.

000022e1 <_ZZ16Display_Update_1vE3__c>:
    22e1:	20 20 20 20 20 50 4c 45 41 53 45 20 57 41 49 54          PLEASE WAIT
    22f1:	20 20 20 20 00                                          .

000022f6 <_ZZ21Subscribed_data_checkvE3__c_0>:
    22f6:	54 4f 50 49 43 20 4d 41 54 43 48 00                 TOPIC MATCH.

00002302 <_ZZ21Subscribed_data_checkvE3__c>:
    2302:	65 6e 74 65 72 20 31 00                             enter 1.

0000230a <_ZZ17Is_MQTT_ConnectedvE3__c_1>:
    230a:	63 68 65 63 6b 20 6e 6f 74 20 43 6f 6e 6e 65 63     check not Connec
    231a:	74 65 64 20 74 6f 20 6d 71 74 74 00                 ted to mqtt.

00002326 <_ZZ17Is_MQTT_ConnectedvE3__c_0>:
    2326:	63 68 65 63 6b 20 43 6f 6e 6e 65 63 74 65 64 20     check Connected 
    2336:	74 6f 20 6d 71 74 74 00                             to mqtt.

0000233e <_ZZ17Is_MQTT_ConnectedvE3__c>:
    233e:	41 54 2b 43 4d 51 54 54 43 4f 4e 4e 45 43 54 3f     AT+CMQTTCONNECT?
	...

0000234f <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_1>:
    234f:	41 54 2b 43 4d 51 54 54 53 54 41 52 54 00           AT+CMQTTSTART.

0000235d <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_0>:
    235d:	41 54 2b 43 4d 51 54 54 52 45 4c 3d 30 00           AT+CMQTTREL=0.

0000236b <_ZZ12MQTT_ConnectPKcS0_S0_E3__c>:
    236b:	41 54 2b 43 4d 51 54 54 44 49 53 43 3d 30 2c 31     AT+CMQTTDISC=0,1
    237b:	32 30 00                                            20.

0000237e <_ZZ14MQTT_SUBSCRIBEPcE3__c>:
    237e:	53 55 42 20 53 55 43 43 45 53 53 00                 SUB SUCCESS.

0000238a <_ZZ12MQTT_PublishPhS_E3__c>:
    238a:	41 54 2b 43 46 55 4e 3d 31 00                       AT+CFUN=1.

00002394 <_ZZ12Gprs_ConnectPcE3__c>:
    2394:	21 21 21 21 21 53 55 43 43 45 53 53 46 55 4c 4c     !!!!!SUCCESSFULL
    23a4:	59 20 43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 47     Y CONNECTED TO G
    23b4:	50 52 53 21 21 21 21 21 00                          PRS!!!!!.

000023bd <_ZZ17Get_Operator_NamePcE3__c>:
    23bd:	41 54 2b 43 53 50 4e 3f 00                          AT+CSPN?.

000023c6 <_ZZ20Check_Gsm_ConnectionvE3__c_7>:
    23c6:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023d0 <_ZZ20Check_Gsm_ConnectionvE3__c_6>:
    23d0:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023db <_ZZ20Check_Gsm_ConnectionvE3__c_5>:
    23db:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023e5 <_ZZ20Check_Gsm_ConnectionvE3__c_4>:
    23e5:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023f0 <_ZZ20Check_Gsm_ConnectionvE3__c_3>:
    23f0:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000023f9 <_ZZ20Check_Gsm_ConnectionvE3__c_2>:
    23f9:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002403 <_ZZ20Check_Gsm_ConnectionvE3__c_1>:
    2403:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

0000240c <_ZZ20Check_Gsm_ConnectionvE3__c_0>:
    240c:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

00002416 <_ZZ20Check_Gsm_ConnectionvE3__c>:
    2416:	41 54 2b 43 4e 4d 50 3d 33 38 00                    AT+CNMP=38.

00002421 <_ZZ8Gsm_InitvE3__c_1>:
    2421:	41 54 2b 43 4d 45 45 3d 30 00                       AT+CMEE=0.

0000242b <_ZZ8Gsm_InitvE3__c_0>:
    242b:	41 54 2b 49 50 52 45 58 3d 39 36 30 30 00           AT+IPREX=9600.

00002439 <_ZZ8Gsm_InitvE3__c>:
    2439:	41 54 00                                            AT.

0000243c <_ZZ18_kGSM_SIG_STRENGTHvE3__c_0>:
    243c:	43 53 51 20 52 45 54 45 55 52 4e 20 30 20 00        CSQ RETEURN 0 .

0000244b <_ZZ18_kGSM_SIG_STRENGTHvE3__c>:
    244b:	41 54 2b 43 53 51 00                                AT+CSQ.

00002452 <_ZZ14Lora_Data_SendhE3__c_1>:
    2452:	53 45 4e 54 20 73 75 63 63 00                       SENT succ.

0000245c <_ZZ14Lora_Data_SendhE3__c_0>:
    245c:	53 45 4e 54 20 57 41 49 54 49 4e 47 00              SENT WAITING.

00002469 <_ZZ14Lora_Data_SendhE3__c>:
    2469:	6c 6f 72 61 20 64 61 74 61 20 73 65 6e 64 20 6c     lora data send l
    2479:	65 6e 20 3a 20 00                                   en : .

0000247f <_ZZ19Initialise_HardwarevE3__c_6>:
    247f:	47 53 4d 20 4e 4f 54 20 49 4e 49 54 49 41 54 45     GSM NOT INITIATE
    248f:	44 00                                               D.

00002491 <_ZZ19Initialise_HardwarevE3__c_5>:
    2491:	47 53 4d 20 49 4e 49 54 49 41 54 45 44 00           GSM INITIATED.

0000249f <_ZZ19Initialise_HardwarevE3__c_4>:
    249f:	4c 4f 52 41 20 4e 4f 54 20 49 4e 49 54 49 41 54     LORA NOT INITIAT
    24af:	45 44 00                                            ED.

000024b2 <_ZZ19Initialise_HardwarevE3__c_3>:
    24b2:	4c 4f 52 41 20 49 4e 49 54 49 41 54 45 44 00        LORA INITIATED.

000024c1 <_ZZ19Initialise_HardwarevE3__c_2>:
    24c1:	53 45 4e 53 45 20 49 54 20 4f 55 54 00              SENSE IT OUT.

000024ce <_ZZ19Initialise_HardwarevE3__c_1>:
    24ce:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24de:	20 20 20 20 00                                          .

000024e3 <_ZZ19Initialise_HardwarevE3__c_0>:
    24e3:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24f3:	20 20 20 20 00                                          .

000024f8 <_ZZ19Initialise_HardwarevE3__c>:
    24f8:	20 20 46 56 20 3a 20 53 4b 55 33 5f 31 2e 30 2e       FV : SKU3_1.0.
    2508:	32 2e 30 20 00                                      2.0 .

0000250d <_ZZ21Exra_Plot_Data_EEPROMhE3__c_2>:
    250d:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002519 <_ZZ21Exra_Plot_Data_EEPROMhE3__c_1>:
    2519:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    2529:	72 2e 3a 20 00                                      r.: .

0000252e <_ZZ21Exra_Plot_Data_EEPROMhE3__c_0>:
    252e:	64 61 74 61 20 73 61 76 69 6e 67 20 69 6e 20 65     data saving in e
    253e:	65 70 72 6f 6d 20 00                                eprom .

00002545 <_ZZ21Exra_Plot_Data_EEPROMhE3__c>:
    2545:	65 78 74 72 61 20 70 6c 6f 74 20 3a 20 00           extra plot : .

00002553 <_ZZ18Local_Time_SettingvE3__c_2>:
    2553:	63 68 65 63 6b 20 73 69 6d 20 6d 65 00              check sim me.

00002560 <_ZZ18Local_Time_SettingvE3__c_1>:
    2560:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

00002569 <_ZZ18Local_Time_SettingvE3__c_0>:
    2569:	41 54 45 30 00                                      ATE0.

0000256e <_ZZ18Local_Time_SettingvE3__c>:
    256e:	41 54 00                                            AT.

00002571 <_ZZ9Check_SimcE3__c_1>:
    2571:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

0000257a <_ZZ9Check_SimcE3__c_0>:
    257a:	41 54 45 30 00                                      ATE0.

0000257f <_ZZ9Check_SimcE3__c>:
    257f:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

0000258b <_ZZ11Check_PhasevE3__c_3>:
    258b:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 32     phase is there 2
    259b:	20 00                                                .

0000259d <_ZZ11Check_PhasevE3__c_2>:
    259d:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 31     phase is there 1
    25ad:	20 00                                                .

000025af <_ZZ11Check_PhasevE3__c_1>:
    25af:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25bf:	72 65 20 31 20 00                                   re 1 .

000025c5 <_ZZ11Check_PhasevE3__c_0>:
    25c5:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 00     phase is there .

000025d5 <_ZZ11Check_PhasevE3__c>:
    25d5:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    25e5:	72 65 20 00                                         re .

000025e9 <_ZZ14Faults_HandlervE3__c_5>:
    25e9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 00     Pump Line Fault.

000025f9 <_ZZ14Faults_HandlervE3__c_4>:
    25f9:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 20     Pump Line Fault 
	...

0000260a <_ZZ14Faults_HandlervE3__c_3>:
    260a:	50 75 6d 70 20 44 72 79 20 52 75 6e 00              Pump Dry Run.

00002617 <_ZZ14Faults_HandlervE3__c_2>:
    2617:	50 75 6d 70 20 44 72 79 20 52 75 6e 20 00           Pump Dry Run .

00002625 <_ZZ14Faults_HandlervE3__c_1>:
    2625:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 00     Pump Overlaoded.

00002635 <_ZZ14Faults_HandlervE3__c_0>:
    2635:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 20     Pump Overlaoded 
	...

00002646 <_ZZ14Faults_HandlervE3__c>:
    2646:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 61     Wireless Pump Fa
    2656:	75 6c 74 20 6f 63 75 75 72 65 2e 2e 2e 2e 2e 2e     ult ocuure......
    2666:	2e 2e 2e 2e 2e 2e 20 00                             ...... .

0000266e <_ZZ19Calibration_Of_PumpvE3__c>:
    266e:	50 75 6d 70 20 43 61 6c 69 62 72 61 74 69 6f 6e     Pump Calibration
    267e:	20 69 73 20 64 6f 6e 65 00                           is done.

00002687 <_ZZ11Read_EEPROMvE3__c_2>:
    2687:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002693 <_ZZ11Read_EEPROMvE3__c_1>:
    2693:	45 78 74 72 61 20 6e 6f 74 20 50 6c 6f 74 20 52     Extra not Plot R
    26a3:	75 6e 20 54 69 6d 65 72 20 3a 20 00                 un Timer : .

000026af <_ZZ11Read_EEPROMvE3__c_0>:
    26af:	45 78 74 72 61 20 50 6c 6f 74 20 52 75 6e 20 54     Extra Plot Run T
    26bf:	69 6d 65 72 20 3a 20 00                             imer : .

000026c7 <_ZZ11Read_EEPROMvE3__c>:
    26c7:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    26d7:	72 20 3a 20 00                                      r : .

000026dc <_ZZ20Param_InitializationvE3__c_3>:
    26dc:	47 53 4d 20 41 4e 44 20 4d 51 54 54 20 57 49 4c     GSM AND MQTT WIL
    26ec:	4c 20 4e 4f 54 20 57 4f 52 4b 00                    L NOT WORK.

000026f7 <_ZZ20Param_InitializationvE3__c_2>:
    26f7:	4e 4f 54 20 52 45 47 49 53 54 45 52 20 41 4e 44     NOT REGISTER AND
    2707:	20 41 4c 53 4f 20 4d 4f 44 55 4c 45 20 4e 4f 54      ALSO MODULE NOT
    2717:	20 57 4f 52 4b 2c 20 50 4c 45 41 53 45 20 43 48      WORK, PLEASE CH
    2727:	45 43 4b 20 54 48 45 20 4d 4f 44 55 4c 45 20 41     ECK THE MODULE A
    2737:	4e 44 20 52 45 53 54 41 52 54 20 54 48 45 20 44     ND RESTART THE D
    2747:	45 56 49 43 45 00                                   EVICE.

0000274d <_ZZ20Param_InitializationvE3__c_1>:
    274d:	50 6c 65 61 73 65 20 49 6e 73 65 72 74 20 53 69     Please Insert Si
    275d:	6d 20 43 61 72 64 00                                m Card.

00002764 <_ZZ20Param_InitializationvE3__c_0>:
    2764:	52 75 62 6c 65 20 69 73 20 6e 6f 74 20 52 65 67     Ruble is not Reg
    2774:	69 73 74 65 72 65 64 20 54 6f 20 53 65 76 65 72     istered To Sever
	...

00002785 <_ZZ20Param_InitializationvE3__c>:
    2785:	52 75 62 6c 65 20 69 73 20 61 6c 72 65 61 64 79     Ruble is already
    2795:	20 52 65 67 69 73 74 65 72 65 64 20 54 6f 20 53      Registered To S
    27a5:	65 76 65 72 00                                      ever.

000027aa <_ZZ21Subscribe_MQTT_TopicsvE3__c>:
    27aa:	5f 73 53 75 62 73 63 72 69 62 65 5f 54 6f 70 69     _sSubscribe_Topi
    27ba:	63 2e 52 75 62 6c 65 5f 45 75 72 6f 5f 56 61 6c     c.Ruble_Euro_Val
    27ca:	76 65 5f 53 65 74 20 66 61 69 6c 00                 ve_Set fail.

000027d6 <_ZZ14Ping_to_ServervE3__c_10>:
    27d6:	41 54 45 30 00                                      ATE0.

000027db <_ZZ14Ping_to_ServervE3__c_9>:
    27db:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

000027e7 <_ZZ14Ping_to_ServervE3__c_8>:
    27e7:	46 61 69 6c 20 54 6f 20 63 6f 6e 6e 65 63 74 20     Fail To connect 
    27f7:	74 68 65 20 73 65 72 76 65 72 00                    the server.

00002802 <_ZZ14Ping_to_ServervE3__c_7>:
    2802:	61 6c 6c 20 74 6f 70 69 63 20 6e 6f 74 20 73 75     all topic not su
    2812:	62 73 63 72 69 62 65 64 00                          bscribed.

0000281b <_ZZ14Ping_to_ServervE3__c_6>:
    281b:	61 6c 6c 20 74 6f 70 69 63 20 73 75 62 73 63 72     all topic subscr
    282b:	69 62 65 64 00                                      ibed.

00002830 <_ZZ14Ping_to_ServervE3__c_5>:
    2830:	43 6f 6e 6e 65 63 74 65 64 20 54 6f 20 73 65 72     Connected To ser
    2840:	76 65 72 00                                         ver.

00002844 <_ZZ14Ping_to_ServervE3__c_4>:
    2844:	54 72 79 20 74 6f 20 63 6f 6e 6e 65 63 74 20 74     Try to connect t
    2854:	68 65 20 73 65 72 76 65 72 00                       he server.

0000285e <_ZZ14Ping_to_ServervE3__c_3>:
    285e:	41 54 2b 51 4d 54 43 4c 4f 53 45 20 4e 4f 54 20     AT+QMTCLOSE NOT 
    286e:	43 4c 4f 53 45 20 00                                CLOSE .

00002875 <_ZZ14Ping_to_ServervE3__c_2>:
    2875:	41 54 2b 51 4d 54 43 4c 4f 53 45 00                 AT+QMTCLOSE.

00002881 <_ZZ14Ping_to_ServervE3__c_1>:
    2881:	41 54 2b 51 4d 54 43 4c 4f 53 45 3d 30 00           AT+QMTCLOSE=0.

0000288f <_ZZ14Ping_to_ServervE3__c_0>:
    288f:	53 69 6d 20 69 73 20 6e 6f 74 20 74 68 65 72 65     Sim is not there
	...

000028a0 <_ZZ14Ping_to_ServervE3__c>:
    28a0:	41 54 45 30 00                                      ATE0.

000028a5 <_ZZ11Init_BrokervE3__c_4>:
    28a5:	52 75 62 6c 65 20 63 6f 6e 74 72 6f 6c 6c 65 72     Ruble controller
    28b5:	20 69 73 20 72 65 67 69 73 74 65 72 65 64 00         is registered.

000028c4 <_ZZ11Init_BrokervE3__c_3>:
    28c4:	77 61 69 74 20 72 65 67 69 73 74 65 72 69 6e 67     wait registering
    28d4:	20 73 74 61 74 75 73 20 3a 20 00                     status : .

000028df <_ZZ11Init_BrokervE3__c_2>:
    28df:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    28ef:	76 65 72 00                                         ver.

000028f3 <_ZZ11Init_BrokervE3__c_1>:
    28f3:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 00        Ping to server.

00002902 <_ZZ11Init_BrokervE3__c_0>:
    2902:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    2912:	76 65 72 20 30 00                                   ver 0.

00002918 <_ZZ11Init_BrokervE3__c>:
    2918:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 20 30     Ping to server 0
	...

00002929 <_ZZ4mainE3__c_0>:
    2929:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    2939:	3a 20 00                                            : .

0000293c <_ZZ4mainE3__c>:
    293c:	4e 4f 4d 49 4e 41 4c 20 43 55 52 52 45 4e 54 20     NOMINAL CURRENT 
    294c:	3a 20 00                                            : .

0000294f <_ZZ24Pump_Status_List_MonitorvE3__c>:
    294f:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    295f:	72 20 35 35 35 35 35 35 35 35 35 35 35 35 35 35     r 55555555555555
    296f:	35 35 35 35 35 35 35 35 00                          55555555.

00002978 <_ZZ24Plot_Status_List_MonitorvE3__c_11>:
    2978:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2988:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002997 <_ZZ24Plot_Status_List_MonitorvE3__c_10>:
    2997:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29a7:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29b7:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    29c7:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000029d2 <_ZZ24Plot_Status_List_MonitorvE3__c_9>:
    29d2:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29e2:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    29f2:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2a02:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002a0d <_ZZ24Plot_Status_List_MonitorvE3__c_8>:
    2a0d:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2a1d:	69 6c 00                                            il.

00002a20 <_ZZ24Plot_Status_List_MonitorvE3__c_7>:
    2a20:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2a30:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2a40:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002a4b <_ZZ24Plot_Status_List_MonitorvE3__c_6>:
    2a4b:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2a5b:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002a69 <_ZZ24Plot_Status_List_MonitorvE3__c_5>:
    2a69:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2a79:	74 61 20 3a 20 00                                   ta : .

00002a7f <_ZZ24Plot_Status_List_MonitorvE3__c_4>:
    2a7f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2a8f:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2a9f:	65 20 31 00                                         e 1.

00002aa3 <_ZZ24Plot_Status_List_MonitorvE3__c_3>:
    2aa3:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ab3:	6d 62 65 72 20 00                                   mber .

00002ab9 <_ZZ24Plot_Status_List_MonitorvE3__c_2>:
    2ab9:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ac9:	6f 2e 20 00                                         o. .

00002acd <_ZZ24Plot_Status_List_MonitorvE3__c_1>:
    2acd:	6c 61 73 74 20 70 6c 6f 74 20 6e 6f 20 3a 20 00     last plot no : .

00002add <_ZZ24Plot_Status_List_MonitorvE3__c_0>:
    2add:	20 00                                                .

00002adf <_ZZ24Plot_Status_List_MonitorvE3__c>:
    2adf:	6c 61 73 74 20 70 6c 6f 74 20 76 76 61 6c 76 65     last plot vvalve
    2aef:	20 6c 69 73 74 20 3a 20 00                           list : .

00002af8 <_ZZ20Wireless_Pump_On_OffhhE3__c_21>:
    2af8:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2b08:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002b16 <_ZZ20Wireless_Pump_On_OffhhE3__c_20>:
    2b16:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2b26:	20 64 61 74 61 20 3a 20 00                           data : .

00002b2f <_ZZ20Wireless_Pump_On_OffhhE3__c_19>:
    2b2f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2b3f:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2b4f:	50 75 6d 70 20 31 00                                Pump 1.

00002b56 <_ZZ20Wireless_Pump_On_OffhhE3__c_18>:
    2b56:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2b66:	2e 20 00                                            . .

00002b69 <_ZZ20Wireless_Pump_On_OffhhE3__c_14>:
    2b69:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b79:	61 69 6c 61 62 6c 65 20 37 3a 20 00                 ailable 7: .

00002b85 <_ZZ20Wireless_Pump_On_OffhhE3__c_13>:
    2b85:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b95:	61 69 6c 61 62 6c 65 20 36 3a 20 00                 ailable 6: .

00002ba1 <_ZZ20Wireless_Pump_On_OffhhE3__c_12>:
    2ba1:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bb1:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002bbd <_ZZ20Wireless_Pump_On_OffhhE3__c_11>:
    2bbd:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2bcd:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002bdb <_ZZ20Wireless_Pump_On_OffhhE3__c_10>:
    2bdb:	5f 65 50 55 4d 50 5f 4f 46 46 00                    _ePUMP_OFF.

00002be6 <_ZZ20Wireless_Pump_On_OffhhE3__c_9>:
    2be6:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2bf6:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002c02 <_ZZ20Wireless_Pump_On_OffhhE3__c_8>:
    2c02:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2c12:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002c20 <_ZZ20Wireless_Pump_On_OffhhE3__c_7>:
    2c20:	5f 65 50 55 4d 50 5f 4f 4e 00                       _ePUMP_ON.

00002c2a <_ZZ20Wireless_Pump_On_OffhhE3__c_6>:
    2c2a:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c3a:	61 69 6c 61 62 6c 65 20 34 3a 20 00                 ailable 4: .

00002c46 <_ZZ20Wireless_Pump_On_OffhhE3__c_5>:
    2c46:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c56:	61 69 6c 61 62 6c 65 20 34 2e 31 3a 20 00           ailable 4.1: .

00002c64 <_ZZ20Wireless_Pump_On_OffhhE3__c_4>:
    2c64:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2c74:	69 74 68 20 70 75 6d 70 20 77 68 69 63 68 20 69     ith pump which i
    2c84:	73 20 72 65 70 6c 69 65 64 20 34 00                 s replied 4.

00002c90 <_ZZ20Wireless_Pump_On_OffhhE3__c_3>:
    2c90:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 76 61     wireless pump va
    2ca0:	6c 76 65 20 49 44 20 77 68 69 63 68 20 69 73 20     lve ID which is 
    2cb0:	53 65 6e 74 20 3a 00                                Sent :.

00002cb7 <_ZZ20Wireless_Pump_On_OffhhE3__c_2>:
    2cb7:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2cc7:	20 64 61 74 61 20 3a 20 00                           data : .

00002cd0 <_ZZ20Wireless_Pump_On_OffhhE3__c_1>:
    2cd0:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2ce0:	61 69 6c 61 62 6c 65 20 31 3a 20 00                 ailable 1: .

00002cec <_ZZ20Wireless_Pump_On_OffhhE3__c_0>:
    2cec:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2cfc:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2d0c:	50 75 6d 70 20 31 00                                Pump 1.

00002d13 <_ZZ20Wireless_Pump_On_OffhhE3__c>:
    2d13:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2d23:	2e 20 00                                            . .

00002d26 <_ZZ20Handle_Wireless_PumpvE3__c_0>:
    2d26:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d36:	72 20 34 34 34 34 34 34 34 34 34 34 34 34 34 34     r 44444444444444
    2d46:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 00        44444444444444.

00002d55 <_ZZ20Handle_Wireless_PumpvE3__c>:
    2d55:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d65:	72 20 33 33 33 33 33 33 33 33 33 33 33 33 33 33     r 33333333333333
    2d75:	33 33 33 33 33 33 33 33 33 33 00                    3333333333.

00002d80 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_11>:
    2d80:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2d90:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002d9f <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_10>:
    2d9f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2daf:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dbf:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2dcf:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002dda <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_9>:
    2dda:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2dea:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2dfa:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2e0a:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002e15 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_8>:
    2e15:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2e25:	69 6c 00                                            il.

00002e28 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_7>:
    2e28:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2e38:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2e48:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002e53 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_6>:
    2e53:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2e63:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002e71 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_5>:
    2e71:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2e81:	74 61 20 3a 20 00                                   ta : .

00002e87 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_4>:
    2e87:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2e97:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2ea7:	65 20 31 00                                         e 1.

00002eab <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_3>:
    2eab:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2ebb:	6d 62 65 72 20 00                                   mber .

00002ec1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_2>:
    2ec1:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2ed1:	6f 2e 20 00                                         o. .

00002ed5 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_1>:
    2ed5:	49 72 72 69 67 61 74 69 6e 67 20 45 78 74 72 61     Irrigating Extra
    2ee5:	20 70 6c 6f 74 20 6e 6f 20 3a 20 00                  plot no : .

00002ef1 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_0>:
    2ef1:	20 00                                                .

00002ef3 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c>:
    2ef3:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00002f01 <_ZZ25Stop_Extra_Plot_OperationhE3__c_4>:
    2f01:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     Extra plot fails
    2f11:	20 74 6f 20 53 74 6f 70 00                           to Stop.

00002f1a <_ZZ25Stop_Extra_Plot_OperationhE3__c_3>:
    2f1a:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
	...

00002f2b <_ZZ25Stop_Extra_Plot_OperationhE3__c_2>:
    2f2b:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 20     Extra plot fail 
    2f3b:	74 6f 20 53 74 6f 70 73 20 66 6f 67 67 65 72 20     to Stops fogger 
    2f4b:	62 61 63 6b 20 75 70 00                             back up.

00002f53 <_ZZ25Stop_Extra_Plot_OperationhE3__c_1>:
    2f53:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
    2f63:	20 66 6f 67 67 65 72 20 62 61 63 6b 20 75 70 00      fogger back up.

00002f73 <_ZZ25Stop_Extra_Plot_OperationhE3__c_0>:
    2f73:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f83:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34     4444444444444444
    2f93:	34 34 34 34 34 00                                   44444.

00002f99 <_ZZ25Stop_Extra_Plot_OperationhE3__c>:
    2f99:	54 72 79 20 74 6f 20 73 74 6f 70 20 45 78 74 72     Try to stop Extr
    2fa9:	61 00                                               a.

00002fab <_ZZ26Start_Extra_Plot_OperationhE3__c_2>:
    2fab:	65 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     extra plot fails
    2fbb:	20 74 6f 20 6f 6e 00                                 to on.

00002fc2 <_ZZ26Start_Extra_Plot_OperationhE3__c_1>:
    2fc2:	45 78 74 72 61 20 50 6c 6f 74 20 4f 4e 00           Extra Plot ON.

00002fd0 <_ZZ26Start_Extra_Plot_OperationhE3__c_0>:
    2fd0:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2fe0:	33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33     3333333333333333
    2ff0:	33 33 33 33 00                                      3333.

00002ff5 <_ZZ26Start_Extra_Plot_OperationhE3__c>:
    2ff5:	54 72 79 20 74 6f 20 53 74 61 72 74 20 65 78 74     Try to Start ext
    3005:	72 61 20 70 6c 6f 74 00                             ra plot.

0000300d <_ZZ24Run_Extra_Plot_OperationvE3__c>:
    300d:	66 6f 67 67 65 72 3a 20 66 61 75 6c 74 20 6f 63     fogger: fault oc
    301d:	63 75 72 65 00                                      cure.

00003022 <_ZZ12Publish_DatavE3__c_78>:
    3022:	70 6c 6f 74 00                                      plot.

00003027 <_ZZ12Publish_DatavE3__c_77>:
    3027:	74 69 6d 65 00                                      time.

0000302c <_ZZ12Publish_DatavE3__c_76>:
    302c:	70 6c 6f 74 00                                      plot.

00003031 <_ZZ12Publish_DatavE3__c_75>:
    3031:	74 69 6d 65 00                                      time.

00003036 <_ZZ12Publish_DatavE3__c_74>:
    3036:	6d 65 64 69 75 6d 00                                medium.

0000303d <_ZZ12Publish_DatavE3__c_73>:
    303d:	70 53 74 61 74 75 73 00                             pStatus.

00003045 <_ZZ12Publish_DatavE3__c_72>:
    3045:	70 53 74 61 74 75 73 00                             pStatus.

0000304d <_ZZ12Publish_DatavE3__c_71>:
    304d:	70 53 74 61 74 75 73 00                             pStatus.

00003055 <_ZZ12Publish_DatavE3__c_70>:
    3055:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3065:	20 46 62 20 72 65 73 65 6e 64 20 00                  Fb resend .

00003071 <_ZZ12Publish_DatavE3__c_69>:
    3071:	73 74 61 74 75 73 00                                status.

00003078 <_ZZ12Publish_DatavE3__c_68>:
    3078:	73 74 61 74 75 73 00                                status.

0000307f <_ZZ12Publish_DatavE3__c_67>:
    307f:	73 74 61 74 75 73 00                                status.

00003086 <_ZZ12Publish_DatavE3__c_66>:
    3086:	73 74 61 74 75 73 00                                status.

0000308d <_ZZ12Publish_DatavE3__c_65>:
    308d:	73 74 61 74 75 73 00                                status.

00003094 <_ZZ12Publish_DatavE3__c_64>:
    3094:	73 74 61 74 75 73 00                                status.

0000309b <_ZZ12Publish_DatavE3__c_63>:
    309b:	70 4e 6f 00                                         pNo.

0000309f <_ZZ12Publish_DatavE3__c_62>:
    309f:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    30af:	63 6b 20 72 65 73 65 6e 64 20 00                    ck resend .

000030ba <_ZZ12Publish_DatavE3__c_61>:
    30ba:	74 68 72 65 65 5f 70 68 61 73 65 00                 three_phase.

000030c6 <_ZZ12Publish_DatavE3__c_60>:
    30c6:	70 75 6d 70 5f 6e 75 6d 00                          pump_num.

000030cf <_ZZ12Publish_DatavE3__c_59>:
    30cf:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030de <_ZZ12Publish_DatavE3__c_58>:
    30de:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030e7 <_ZZ12Publish_DatavE3__c_57>:
    30e7:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030f6 <_ZZ12Publish_DatavE3__c_56>:
    30f6:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030ff <_ZZ12Publish_DatavE3__c_55>:
    30ff:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

0000310e <_ZZ12Publish_DatavE3__c_54>:
    310e:	73 63 5f 69 6e 64 65 78 00                          sc_index.

00003117 <_ZZ12Publish_DatavE3__c_53>:
    3117:	70 6c 6f 74 00                                      plot.

0000311c <_ZZ12Publish_DatavE3__c_52>:
    311c:	70 6c 6f 74 00                                      plot.

00003121 <_ZZ12Publish_DatavE3__c_51>:
    3121:	63 75 72 72 65 6e 74 54 72 61 6e 73 66 6f 72 6d     currentTransform
    3131:	65 72 00                                            er.

00003134 <_ZZ12Publish_DatavE3__c_50>:
    3134:	6d 6f 64 65 00                                      mode.

00003139 <_ZZ12Publish_DatavE3__c_49>:
    3139:	70 53 74 61 74 75 73 00                             pStatus.

00003141 <_ZZ12Publish_DatavE3__c_48>:
    3141:	70 53 74 61 74 75 73 00                             pStatus.

00003149 <_ZZ12Publish_DatavE3__c_47>:
    3149:	70 53 74 61 74 75 73 00                             pStatus.

00003151 <_ZZ12Publish_DatavE3__c_46>:
    3151:	73 74 61 74 75 73 00                                status.

00003158 <_ZZ12Publish_DatavE3__c_45>:
    3158:	73 74 61 74 75 73 00                                status.

0000315f <_ZZ12Publish_DatavE3__c_44>:
    315f:	73 74 61 74 75 73 00                                status.

00003166 <_ZZ12Publish_DatavE3__c_43>:
    3166:	73 74 61 74 75 73 00                                status.

0000316d <_ZZ12Publish_DatavE3__c_42>:
    316d:	73 74 61 74 75 73 00                                status.

00003174 <_ZZ12Publish_DatavE3__c_41>:
    3174:	6f 6e 65 20 74 6f 75 63 68 20 6f 6e 2e 2e 2e 2e     one touch on....
    3184:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3194:	2e 00                                               ..

00003196 <_ZZ12Publish_DatavE3__c_40>:
    3196:	73 74 61 74 75 73 00                                status.

0000319d <_ZZ12Publish_DatavE3__c_39>:
    319d:	6f 6e 65 20 74 6f 75 63 68 20 6f 66 66 2e 2e 2e     one touch off...
    31ad:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

000031be <_ZZ12Publish_DatavE3__c_38>:
    31be:	70 4e 6f 00                                         pNo.

000031c2 <_ZZ12Publish_DatavE3__c_37>:
    31c2:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    31d2:	63 6b 00                                            ck.

000031d5 <_ZZ12Publish_DatavE3__c_36>:
    31d5:	70 6c 6f 74 00                                      plot.

000031da <_ZZ12Publish_DatavE3__c_35>:
    31da:	74 69 6d 65 00                                      time.

000031df <_ZZ12Publish_DatavE3__c_34>:
    31df:	70 6c 6f 74 00                                      plot.

000031e4 <_ZZ12Publish_DatavE3__c_33>:
    31e4:	74 69 6d 65 00                                      time.

000031e9 <_ZZ12Publish_DatavE3__c_32>:
    31e9:	6d 65 64 69 75 6d 00                                medium.

000031f0 <_ZZ12Publish_DatavE3__c_31>:
    31f0:	70 53 74 61 74 75 73 00                             pStatus.

000031f8 <_ZZ12Publish_DatavE3__c_30>:
    31f8:	70 53 74 61 74 75 73 00                             pStatus.

00003200 <_ZZ12Publish_DatavE3__c_29>:
    3200:	70 53 74 61 74 75 73 00                             pStatus.

00003208 <_ZZ12Publish_DatavE3__c_28>:
    3208:	70 53 74 61 74 75 73 00                             pStatus.

00003210 <_ZZ12Publish_DatavE3__c_27>:
    3210:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3220:	20 46 62 00                                          Fb.

00003224 <_ZZ12Publish_DatavE3__c_26>:
    3224:	63 6f 64 65 73 00                                   codes.

0000322a <_ZZ12Publish_DatavE3__c_25>:
    322a:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    323a:	5f 44 41 54 41 00                                   _DATA.

00003240 <_ZZ12Publish_DatavE3__c_24>:
    3240:	76 61 6c 76 65 4f 70 65 6e 00                       valveOpen.

0000324a <_ZZ12Publish_DatavE3__c_23>:
    324a:	76 42 61 74 00                                      vBat.

0000324f <_ZZ12Publish_DatavE3__c_22>:
    324f:	76 61 6c 76 65 53 74 61 74 75 73 00                 valveStatus.

0000325b <_ZZ12Publish_DatavE3__c_21>:
    325b:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    326b:	5f 44 41 54 41 00                                   _DATA.

00003271 <_ZZ12Publish_DatavE3__c_20>:
    3271:	76 42 61 74 00                                      vBat.

00003276 <_ZZ12Publish_DatavE3__c_19>:
    3276:	6c 69 67 68 74 00                                   light.

0000327c <_ZZ12Publish_DatavE3__c_18>:
    327c:	68 75 6d 69 64 69 74 79 00                          humidity.

00003285 <_ZZ12Publish_DatavE3__c_17>:
    3285:	74 65 6d 70 65 72 61 74 75 72 65 00                 temperature.

00003291 <_ZZ12Publish_DatavE3__c_16>:
    3291:	73 6f 69 6c 5f 74 65 6d 70 00                       soil_temp.

0000329b <_ZZ12Publish_DatavE3__c_15>:
    329b:	73 6d 34 00                                         sm4.

0000329f <_ZZ12Publish_DatavE3__c_14>:
    329f:	73 6d 33 00                                         sm3.

000032a3 <_ZZ12Publish_DatavE3__c_13>:
    32a3:	73 6d 32 00                                         sm2.

000032a7 <_ZZ12Publish_DatavE3__c_12>:
    32a7:	73 6d 31 00                                         sm1.

000032ab <_ZZ12Publish_DatavE3__c_11>:
    32ab:	70 61 63 6b 65 74 5f 69 64 00                       packet_id.

000032b5 <_ZZ12Publish_DatavE3__c_10>:
    32b5:	5f 65 50 55 42 5f 4c 49 52 41 5f 4e 4f 44 45 5f     _ePUB_LIRA_NODE_
    32c5:	44 41 54 41 00                                      DATA.

000032ca <_ZZ12Publish_DatavE3__c_9>:
    32ca:	63 6f 64 65 73 00                                   codes.

000032d0 <_ZZ12Publish_DatavE3__c_8>:
    32d0:	70 6c 6f 74 00                                      plot.

000032d5 <_ZZ12Publish_DatavE3__c_7>:
    32d5:	70 6c 6f 74 00                                      plot.

000032da <_ZZ12Publish_DatavE3__c_6>:
    32da:	74 69 6d 65 00                                      time.

000032df <_ZZ12Publish_DatavE3__c_5>:
    32df:	74 69 6d 65 00                                      time.

000032e4 <_ZZ12Publish_DatavE3__c_4>:
    32e4:	6d 65 64 69 75 6d 00                                medium.

000032eb <_ZZ12Publish_DatavE3__c_3>:
    32eb:	70 53 74 61 74 75 73 00                             pStatus.

000032f3 <_ZZ12Publish_DatavE3__c_2>:
    32f3:	5f 65 50 55 42 5f 54 49 4d 45 52 5f 46 45 45 44     _ePUB_TIMER_FEED
    3303:	42 41 43 4b 00                                      BACK.

00003308 <_ZZ12Publish_DatavE3__c_1>:
    3308:	74 65 73 74 00                                      test.

0000330d <_ZZ12Publish_DatavE3__c_0>:
    330d:	74 65 73 74 00                                      test.

00003312 <_ZZ12Publish_DatavE3__c>:
    3312:	63 6f 64 65 73 00                                   codes.

00003318 <_ZZ12Pub_Sub_DataPcPhjhE3__c_118>:
    3318:	70 6c 6f 74 20 6d 61 74 63 68 2e 2e 2e 2e 2e 2e     plot match......
    3328:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3338:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3348:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

00003359 <_ZZ12Pub_Sub_DataPcPhjhE3__c_117>:
    3359:	73 74 61 74 75 73 00                                status.

00003360 <_ZZ12Pub_Sub_DataPcPhjhE3__c_116>:
    3360:	70 4e 6f 00                                         pNo.

00003364 <_ZZ12Pub_Sub_DataPcPhjhE3__c_115>:
    3364:	43 61 6c 69 62 72 61 74 69 6f 6e 20 6f 76 65 72     Calibration over
    3374:	20 72 75 6c 65 64 00                                 ruled.

0000337b <_ZZ12Pub_Sub_DataPcPhjhE3__c_114>:
    337b:	43 61 6c 69 62 72 61 74 69 6f 6e 20 74 6f 70 69     Calibration topi
    338b:	63 20 67 65 74 20 66 72 6f 6d 20 73 65 72 76 65     c get from serve
    339b:	72 00                                               r.

0000339d <_ZZ12Pub_Sub_DataPcPhjhE3__c_113>:
    339d:	43 61 6c 69 62 72 61 74 69 6f 6e 00                 Calibration.

000033a9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_112>:
    33a9:	53 43 20 53 54 41 52 54 20 46 52 4f 4d 20 3a 20     SC START FROM : 
	...

000033ba <_ZZ12Pub_Sub_DataPcPhjhE3__c_111>:
    33ba:	54 41 4e 4b 20 44 75 72 61 74 69 6f 6e 3a 20 00     TANK Duration: .

000033ca <_ZZ12Pub_Sub_DataPcPhjhE3__c_110>:
    33ca:	54 41 4e 4b 20 6f 6e 20 61 66 74 65 72 3a 20 00     TANK on after: .

000033da <_ZZ12Pub_Sub_DataPcPhjhE3__c_109>:
    33da:	54 41 4e 4b 20 4e 4f 3a 20 00                       TANK NO: .

000033e4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_108>:
    33e4:	54 41 4e 4b 20 53 54 41 54 3a 20 00                 TANK STAT: .

000033f0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_107>:
    33f0:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

000033fa <_ZZ12Pub_Sub_DataPcPhjhE3__c_106>:
    33fa:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    340a:	20 00                                                .

0000340c <_ZZ12Pub_Sub_DataPcPhjhE3__c_105>:
    340c:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003417 <_ZZ12Pub_Sub_DataPcPhjhE3__c_104>:
    3417:	54 6e 4f 66 00                                      TnOf.

0000341c <_ZZ12Pub_Sub_DataPcPhjhE3__c_103>:
    341c:	54 6e 4f 6e 00                                      TnOn.

00003421 <_ZZ12Pub_Sub_DataPcPhjhE3__c_102>:
    3421:	54 6e 4e 6f 00                                      TnNo.

00003426 <_ZZ12Pub_Sub_DataPcPhjhE3__c_101>:
    3426:	54 6e 53 74 00                                      TnSt.

0000342b <_ZZ12Pub_Sub_DataPcPhjhE3__c_100>:
    342b:	47 65 74 20 54 61 6e 6b 5f 53 63 68 65 64 75 6c     Get Tank_Schedul
    343b:	65 20 66 72 6f 6d 20 53 65 72 76 65 72 00           e from Server.

00003449 <_ZZ12Pub_Sub_DataPcPhjhE3__c_99>:
    3449:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

00003454 <_ZZ12Pub_Sub_DataPcPhjhE3__c_98>:
    3454:	53 63 53 74 61 74 00                                ScStat.

0000345b <_ZZ12Pub_Sub_DataPcPhjhE3__c_97>:
    345b:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    346b:	20 00                                                .

0000346d <_ZZ12Pub_Sub_DataPcPhjhE3__c_96>:
    346d:	53 63 4f 6e 00                                      ScOn.

00003472 <_ZZ12Pub_Sub_DataPcPhjhE3__c_95>:
    3472:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

0000347c <_ZZ12Pub_Sub_DataPcPhjhE3__c_94>:
    347c:	53 63 4e 75 6d 00                                   ScNum.

00003482 <_ZZ12Pub_Sub_DataPcPhjhE3__c_93>:
    3482:	53 63 4f 66 66 00                                   ScOff.

00003488 <_ZZ12Pub_Sub_DataPcPhjhE3__c_92>:
    3488:	53 63 4f 6e 00                                      ScOn.

0000348d <_ZZ12Pub_Sub_DataPcPhjhE3__c_91>:
    348d:	53 65 6e 00                                         Sen.

00003491 <_ZZ12Pub_Sub_DataPcPhjhE3__c_90>:
    3491:	53 63 68 65 64 75 6c 65 20 74 6f 70 69 63 20 67     Schedule topic g
    34a1:	65 74 20 66 72 6f 6d 20 73 65 72 76 65 72 20 3a     et from server :
    34b1:	20 00                                                .

000034b3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_89>:
    34b3:	73 6d 73 20 61 6c 65 72 74 20 6f 66 66 00           sms alert off.

000034c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_88>:
    34c1:	73 6d 73 20 61 6c 65 72 74 20 6f 6e 00              sms alert on.

000034ce <_ZZ12Pub_Sub_DataPcPhjhE3__c_87>:
    34ce:	73 6d 73 00                                         sms.

000034d2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_86>:
    34d2:	66 6f 72 63 65 20 73 74 6f 70 20 72 65 73 75 6d     force stop resum
    34e2:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

000034ed <_ZZ12Pub_Sub_DataPcPhjhE3__c_85>:
    34ed:	66 6f 72 63 65 20 73 74 6f 70 20 74 6f 70 69 63     force stop topic
    34fd:	20 3a 20 00                                          : .

00003501 <_ZZ12Pub_Sub_DataPcPhjhE3__c_84>:
    3501:	72 65 73 75 6d 65 20 73 63 68 65 64 75 6c 65 20     resume schedule 
    3511:	74 6f 70 69 63 20 3a 20 00                          topic : .

0000351a <_ZZ12Pub_Sub_DataPcPhjhE3__c_83>:
    351a:	70 61 75 73 65 20 73 63 68 65 64 75 6c 65 20 74     pause schedule t
    352a:	6f 70 69 63 20 3a 20 00                             opic : .

00003532 <_ZZ12Pub_Sub_DataPcPhjhE3__c_82>:
    3532:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

0000353b <_ZZ12Pub_Sub_DataPcPhjhE3__c_81>:
    353b:	65 78 74 72 61 20 70 6c 6f 74 20 64 65 6c 65 74     extra plot delet
    354b:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003556 <_ZZ12Pub_Sub_DataPcPhjhE3__c_80>:
    3556:	53 43 48 45 44 5f 4e 55 4d 00                       SCHED_NUM.

00003560 <_ZZ12Pub_Sub_DataPcPhjhE3__c_79>:
    3560:	73 63 68 65 64 75 6c 65 20 70 6c 6f 74 20 64 65     schedule plot de
    3570:	6c 65 74 65 20 74 6f 70 69 63 20 3a 20 00           lete topic : .

0000357e <_ZZ12Pub_Sub_DataPcPhjhE3__c_78>:
    357e:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

00003587 <_ZZ12Pub_Sub_DataPcPhjhE3__c_77>:
    3587:	70 6c 6f 74 20 64 65 6c 65 74 65 20 74 6f 70 69     plot delete topi
    3597:	63 20 3a 20 00                                      c : .

0000359c <_ZZ12Pub_Sub_DataPcPhjhE3__c_76>:
    359c:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035a7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_75>:
    35a7:	56 41 4c 56 45 20 64 65 6c 65 74 65 20 66 72 6f     VALVE delete fro
    35b7:	6d 20 50 6c 6f 74 20 6e 6f 2e 3a 20 00              m Plot no.: .

000035c4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_74>:
    35c4:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035cf <_ZZ12Pub_Sub_DataPcPhjhE3__c_73>:
    35cf:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

000035da <_ZZ12Pub_Sub_DataPcPhjhE3__c_72>:
    35da:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    35ea:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

000035f5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_71>:
    35f5:	76 49 64 00                                         vId.

000035f9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_70>:
    35f9:	76 61 6c 76 65 20 64 65 6c 65 74 65 20 74 6f 70     valve delete top
    3609:	69 63 20 3a 20 00                                   ic : .

0000360f <_ZZ12Pub_Sub_DataPcPhjhE3__c_69>:
    360f:	63 6f 64 65 00                                      code.

00003614 <_ZZ12Pub_Sub_DataPcPhjhE3__c_68>:
    3614:	70 6c 6f 74 20 73 65 6c 20 3a 20 00                 plot sel : .

00003620 <_ZZ12Pub_Sub_DataPcPhjhE3__c_67>:
    3620:	6d 61 78 20 3a 20 00                                max : .

00003627 <_ZZ12Pub_Sub_DataPcPhjhE3__c_66>:
    3627:	6d 69 6e 20 3a 20 00                                min : .

0000362e <_ZZ12Pub_Sub_DataPcPhjhE3__c_65>:
    362e:	73 65 6c 5f 70 6c 6f 74 00                          sel_plot.

00003637 <_ZZ12Pub_Sub_DataPcPhjhE3__c_64>:
    3637:	6d 61 78 00                                         max.

0000363b <_ZZ12Pub_Sub_DataPcPhjhE3__c_63>:
    363b:	6d 61 78 00                                         max.

0000363f <_ZZ12Pub_Sub_DataPcPhjhE3__c_62>:
    363f:	6d 69 6e 00                                         min.

00003643 <_ZZ12Pub_Sub_DataPcPhjhE3__c_61>:
    3643:	6d 69 6e 00                                         min.

00003647 <_ZZ12Pub_Sub_DataPcPhjhE3__c_60>:
    3647:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00003653 <_ZZ12Pub_Sub_DataPcPhjhE3__c_59>:
    3653:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    3663:	72 2e 3a 20 00                                      r.: .

00003668 <_ZZ12Pub_Sub_DataPcPhjhE3__c_58>:
    3668:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    3678:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

00003684 <_ZZ12Pub_Sub_DataPcPhjhE3__c_57>:
    3684:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

0000368f <_ZZ12Pub_Sub_DataPcPhjhE3__c_56>:
    368f:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

0000369b <_ZZ12Pub_Sub_DataPcPhjhE3__c_55>:
    369b:	76 61 6c 76 65 20 35 3a 20 00                       valve 5: .

000036a5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_54>:
    36a5:	76 61 6c 76 65 20 34 3a 20 00                       valve 4: .

000036af <_ZZ12Pub_Sub_DataPcPhjhE3__c_53>:
    36af:	76 61 6c 76 65 20 33 3a 20 00                       valve 3: .

000036b9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_52>:
    36b9:	76 61 6c 76 65 20 32 3a 20 00                       valve 2: .

000036c3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_51>:
    36c3:	76 61 6c 76 65 20 31 3a 20 00                       valve 1: .

000036cd <_ZZ12Pub_Sub_DataPcPhjhE3__c_50>:
    36cd:	53 65 6e 73 6f 72 20 4e 6f 2e 3a 20 00              Sensor No.: .

000036da <_ZZ12Pub_Sub_DataPcPhjhE3__c_49>:
    36da:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    36ea:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

000036f6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_48>:
    36f6:	6f 70 4d 6f 64 65 00                                opMode.

000036fd <_ZZ12Pub_Sub_DataPcPhjhE3__c_47>:
    36fd:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    370d:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003718 <_ZZ12Pub_Sub_DataPcPhjhE3__c_46>:
    3718:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3728:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003733 <_ZZ12Pub_Sub_DataPcPhjhE3__c_45>:
    3733:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3743:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000374e <_ZZ12Pub_Sub_DataPcPhjhE3__c_44>:
    374e:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 44 41     wireless pump DA
    375e:	54 41 20 47 45 54 20 46 52 4f 4d 20 53 45 52 56     TA GET FROM SERV
    376e:	45 52 00                                            ER.

00003771 <_ZZ12Pub_Sub_DataPcPhjhE3__c_43>:
    3771:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    3781:	6f 6e 20 00                                         on .

00003785 <_ZZ12Pub_Sub_DataPcPhjhE3__c_42>:
    3785:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    3795:	74 68 65 20 6c 69 73 74 00                          the list.

0000379e <_ZZ12Pub_Sub_DataPcPhjhE3__c_41>:
    379e:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

000037af <_ZZ12Pub_Sub_DataPcPhjhE3__c_40>:
    37af:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    37bf:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000037ca <_ZZ12Pub_Sub_DataPcPhjhE3__c_39>:
    37ca:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    37da:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000037e5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_38>:
    37e5:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    37f5:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003800 <_ZZ12Pub_Sub_DataPcPhjhE3__c_37>:
    3800:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3810:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000381b <_ZZ12Pub_Sub_DataPcPhjhE3__c_36>:
    381b:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    382b:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003836 <_ZZ12Pub_Sub_DataPcPhjhE3__c_35>:
    3836:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3846:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003851 <_ZZ12Pub_Sub_DataPcPhjhE3__c_34>:
    3851:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3861:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000386c <_ZZ12Pub_Sub_DataPcPhjhE3__c_33>:
    386c:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    387c:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003887 <_ZZ12Pub_Sub_DataPcPhjhE3__c_32>:
    3887:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3897:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038a2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_31>:
    38a2:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    38b2:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000038c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_30>:
    38c1:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38d1:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000038e0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_29>:
    38e0:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    38f0:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

000038ff <_ZZ12Pub_Sub_DataPcPhjhE3__c_28>:
    38ff:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

0000390a <_ZZ12Pub_Sub_DataPcPhjhE3__c_27>:
    390a:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

00003915 <_ZZ12Pub_Sub_DataPcPhjhE3__c_26>:
    3915:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    3925:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

00003930 <_ZZ12Pub_Sub_DataPcPhjhE3__c_25>:
    3930:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    3940:	6f 6e 20 00                                         on .

00003944 <_ZZ12Pub_Sub_DataPcPhjhE3__c_24>:
    3944:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    3954:	74 68 65 20 6c 69 73 74 00                          the list.

0000395d <_ZZ12Pub_Sub_DataPcPhjhE3__c_23>:
    395d:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

0000396e <_ZZ12Pub_Sub_DataPcPhjhE3__c_22>:
    396e:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    397e:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003989 <_ZZ12Pub_Sub_DataPcPhjhE3__c_21>:
    3989:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3999:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039a4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_20>:
    39a4:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    39b4:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039bf <_ZZ12Pub_Sub_DataPcPhjhE3__c_19>:
    39bf:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    39cf:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039da <_ZZ12Pub_Sub_DataPcPhjhE3__c_18>:
    39da:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    39ea:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039f5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_17>:
    39f5:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a05:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a10 <_ZZ12Pub_Sub_DataPcPhjhE3__c_16>:
    3a10:	76 61 6c 76 65 35 00                                valve5.

00003a17 <_ZZ12Pub_Sub_DataPcPhjhE3__c_15>:
    3a17:	76 61 6c 76 65 34 00                                valve4.

00003a1e <_ZZ12Pub_Sub_DataPcPhjhE3__c_14>:
    3a1e:	76 61 6c 76 65 33 00                                valve3.

00003a25 <_ZZ12Pub_Sub_DataPcPhjhE3__c_13>:
    3a25:	76 61 6c 76 65 32 00                                valve2.

00003a2c <_ZZ12Pub_Sub_DataPcPhjhE3__c_12>:
    3a2c:	76 61 6c 76 65 31 00                                valve1.

00003a33 <_ZZ12Pub_Sub_DataPcPhjhE3__c_11>:
    3a33:	70 4e 6f 00                                         pNo.

00003a37 <_ZZ12Pub_Sub_DataPcPhjhE3__c_10>:
    3a37:	53 65 74 20 63 6f 65 66 66 65 63 69 65 6e 74 20     Set coeffecient 
    3a47:	54 6f 70 69 63 20 66 72 6f 6d 20 73 65 72 76 65     Topic from serve
    3a57:	72 00                                               r.

00003a59 <_ZZ12Pub_Sub_DataPcPhjhE3__c_6>:
    3a59:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 00     Irrigating plot.

00003a69 <_ZZ12Pub_Sub_DataPcPhjhE3__c_5>:
    3a69:	50 55 4d 50 20 52 55 4e 20 54 49 4d 45 52 00        PUMP RUN TIMER.

00003a78 <_ZZ12Pub_Sub_DataPcPhjhE3__c_4>:
    3a78:	74 00                                               t.

00003a7a <_ZZ12Pub_Sub_DataPcPhjhE3__c_3>:
    3a7a:	70 4e 6f 00                                         pNo.

00003a7e <_ZZ12Pub_Sub_DataPcPhjhE3__c_2>:
    3a7e:	67 65 74 20 54 49 4d 45 52 20 66 72 6f 6d 20 73     get TIMER from s
    3a8e:	65 72 76 65 72 00                                   erver.

00003a94 <_ZZ12Pub_Sub_DataPcPhjhE3__c_1>:
    3a94:	47 65 74 20 43 6f 6e 74 72 6f 6c 6c 65 72 20 69     Get Controller i
    3aa4:	73 20 72 65 67 69 73 74 65 72 65 64 20 74 6f 20     s registered to 
    3ab4:	53 65 76 65 72 20 54 6f 70 69 63 00                 Sever Topic.

00003ac0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_0>:
    3ac0:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3ad0:	6e 63 74 69 6f 6e 20 32 00                          nction 2.

00003ad9 <_ZZ12Pub_Sub_DataPcPhjhE3__c>:
    3ad9:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3ae9:	6e 63 74 69 6f 6e 20 31 00                          nction 1.

00003af2 <_ZZ14Lora_OperationvE3__c>:
    3af2:	4c 6f 72 61 20 44 61 74 61 20 52 65 63 69 76 65     Lora Data Recive
    3b02:	64 00                                               d.

00003b04 <_ZZ22Valve_Grouping_HandlerhE3__c_40>:
    3b04:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3b14:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003b23 <_ZZ22Valve_Grouping_HandlerhE3__c_39>:
    3b23:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3b33:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3b43:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3b53:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003b5e <_ZZ22Valve_Grouping_HandlerhE3__c_38>:
    3b5e:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3b6e:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3b7e:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3b8e:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003b99 <_ZZ22Valve_Grouping_HandlerhE3__c_37>:
    3b99:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3ba9:	69 6c 00                                            il.

00003bac <_ZZ22Valve_Grouping_HandlerhE3__c_36>:
    3bac:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3bbc:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3bcc:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003bd7 <_ZZ22Valve_Grouping_HandlerhE3__c_35>:
    3bd7:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3be7:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003bf5 <_ZZ22Valve_Grouping_HandlerhE3__c_34>:
    3bf5:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3c05:	74 61 20 3a 20 00                                   ta : .

00003c0b <_ZZ22Valve_Grouping_HandlerhE3__c_33>:
    3c0b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3c1b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3c2b:	65 20 31 00                                         e 1.

00003c2f <_ZZ22Valve_Grouping_HandlerhE3__c_32>:
    3c2f:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3c3f:	6d 62 65 72 20 00                                   mber .

00003c45 <_ZZ22Valve_Grouping_HandlerhE3__c_31>:
    3c45:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3c55:	6f 2e 20 00                                         o. .

00003c59 <_ZZ22Valve_Grouping_HandlerhE3__c_30>:
    3c59:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3c69:	6e 6f 20 3a 20 00                                   no : .

00003c6f <_ZZ22Valve_Grouping_HandlerhE3__c_29>:
    3c6f:	20 00                                                .

00003c71 <_ZZ22Valve_Grouping_HandlerhE3__c_28>:
    3c71:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003c7f <_ZZ22Valve_Grouping_HandlerhE3__c_27>:
    3c7f:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3c8f:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003c9e <_ZZ22Valve_Grouping_HandlerhE3__c_26>:
    3c9e:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3cae:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3cbe:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3cce:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003cd9 <_ZZ22Valve_Grouping_HandlerhE3__c_25>:
    3cd9:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3ce9:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3cf9:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d09:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003d14 <_ZZ22Valve_Grouping_HandlerhE3__c_24>:
    3d14:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d24:	69 6c 00                                            il.

00003d27 <_ZZ22Valve_Grouping_HandlerhE3__c_23>:
    3d27:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3d37:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3d47:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003d52 <_ZZ22Valve_Grouping_HandlerhE3__c_22>:
    3d52:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3d62:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003d70 <_ZZ22Valve_Grouping_HandlerhE3__c_21>:
    3d70:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3d80:	74 61 20 3a 20 00                                   ta : .

00003d86 <_ZZ22Valve_Grouping_HandlerhE3__c_20>:
    3d86:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3d96:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3da6:	65 20 31 00                                         e 1.

00003daa <_ZZ22Valve_Grouping_HandlerhE3__c_19>:
    3daa:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3dba:	6d 62 65 72 20 00                                   mber .

00003dc0 <_ZZ22Valve_Grouping_HandlerhE3__c_18>:
    3dc0:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3dd0:	6f 2e 20 00                                         o. .

00003dd4 <_ZZ22Valve_Grouping_HandlerhE3__c_17>:
    3dd4:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3de4:	6e 6f 20 3a 20 00                                   no : .

00003dea <_ZZ22Valve_Grouping_HandlerhE3__c_16>:
    3dea:	20 00                                                .

00003dec <_ZZ22Valve_Grouping_HandlerhE3__c_15>:
    3dec:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003dfa <_ZZ22Valve_Grouping_HandlerhE3__c_14>:
    3dfa:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
    3e0a:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
    3e1a:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

00003e28 <_ZZ22Valve_Grouping_HandlerhE3__c_13>:
    3e28:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3e38:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
    3e48:	29 00                                               ).

00003e4a <_ZZ22Valve_Grouping_HandlerhE3__c_12>:
    3e4a:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3e5a:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3e6a:	20 6f 6e 6e 29 00                                    onn).

00003e70 <_ZZ22Valve_Grouping_HandlerhE3__c_11>:
    3e70:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3e80:	61 20 3a 20 00                                      a : .

00003e85 <_ZZ22Valve_Grouping_HandlerhE3__c_10>:
    3e85:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3e95:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3ea5:	65 20 3b 00                                         e ;.

00003ea9 <_ZZ22Valve_Grouping_HandlerhE3__c_9>:
    3ea9:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3eb9:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3ec9:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003ed4 <_ZZ22Valve_Grouping_HandlerhE3__c_8>:
    3ed4:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
    3ee4:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
    3ef4:	61 64 79 20 6f 6e 00                                ady on.

00003efb <_ZZ22Valve_Grouping_HandlerhE3__c_7>:
    3efb:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3f0b:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00003f1c <_ZZ22Valve_Grouping_HandlerhE3__c_6>:
    3f1c:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3f2c:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3f3c:	20 6f 6e 29 00                                       on).

00003f41 <_ZZ22Valve_Grouping_HandlerhE3__c_5>:
    3f41:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3f51:	61 20 3a 20 00                                      a : .

00003f56 <_ZZ22Valve_Grouping_HandlerhE3__c_4>:
    3f56:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3f66:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3f76:	65 20 00                                            e .

00003f79 <_ZZ22Valve_Grouping_HandlerhE3__c_3>:
    3f79:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3f89:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3f99:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003fa4 <_ZZ22Valve_Grouping_HandlerhE3__c_2>:
    3fa4:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    3fb4:	20 00                                                .

00003fb6 <_ZZ22Valve_Grouping_HandlerhE3__c_1>:
    3fb6:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00003fc7 <_ZZ22Valve_Grouping_HandlerhE3__c_0>:
    3fc7:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    3fd7:	20 00                                                .

00003fd9 <_ZZ22Valve_Grouping_HandlerhE3__c>:
    3fd9:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00003fea <_ZZ15Stop_IrrigationvE3__c_3>:
    3fea:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    3ffa:	74 6f 20 53 74 6f 70 00                             to Stop.

00004002 <_ZZ15Stop_IrrigationvE3__c_2>:
    4002:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

00004013 <_ZZ15Stop_IrrigationvE3__c_1>:
    4013:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

00004024 <_ZZ15Stop_IrrigationvE3__c_0>:
    4024:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4034:	72 20 32 32 32 32 32 32 32 32 32 32 32 32 32 32     r 22222222222222
    4044:	32 32 32 32 32 32 32 32 32 00                       222222222.

0000404e <_ZZ15Stop_IrrigationvE3__c>:
    404e:	54 72 79 20 74 6f 20 73 74 6f 70 20 49 72 72 69     Try to stop Irri
    405e:	67 61 74 69 6f 6e 00                                gation.

00004065 <_ZZ16Start_IrrigationvE3__c_5>:
    4065:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    4075:	53 74 61 72 74 00                                   Start.

0000407b <_ZZ16Start_IrrigationvE3__c_4>:
    407b:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 61 72 74     Irrigation Start
	...

0000408c <_ZZ16Start_IrrigationvE3__c_3>:
    408c:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    409c:	53 74 61 72 74 00                                   Start.

000040a2 <_ZZ16Start_IrrigationvE3__c_2>:
    40a2:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40b2:	72 20 66 61 69 6c 20 74 6f 20 6f 6e 00              r fail to on.

000040bf <_ZZ16Start_IrrigationvE3__c_1>:
    40bf:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40cf:	72 20 6f 6e 00                                      r on.

000040d4 <_ZZ16Start_IrrigationvE3__c_0>:
    40d4:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    40e4:	72 20 31 31 31 31 31 31 31 31 31 31 31 31 31 31     r 11111111111111
    40f4:	31 31 31 31 31 31 00                                111111.

000040fb <_ZZ16Start_IrrigationvE3__c>:
    40fb:	54 72 79 20 74 6f 20 53 74 61 72 74 20 54 68 65     Try to Start The
    410b:	20 49 72 72 69 67 61 74 69 6f 6e 00                  Irrigation.

00004117 <_ZZ13Run_OperationvE3__c_21>:
    4117:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    4127:	2c 20 49 72 72 69 67 61 74 69 6f 6e 00              , Irrigation.

00004134 <_ZZ13Run_OperationvE3__c_19>:
    4134:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    4144:	6d 6f 64 65 20 2c 20 4f 70 65 72 61 74 69 6f 6e     mode , Operation
    4154:	20 53 74 61 72 74 00                                 Start.

0000415b <_ZZ13Run_OperationvE3__c_18>:
    415b:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    416b:	2c 20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68     , kill switch th
    417b:	72 6f 75 67 68 20 61 70 70 00                       rough app.

00004185 <_ZZ13Run_OperationvE3__c_17>:
    4185:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4195:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    41a5:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    41b5:	20 33 00                                             3.

000041b8 <_ZZ13Run_OperationvE3__c_16>:
    41b8:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41c8:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    41d8:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    41e8:	20 32 00                                             2.

000041eb <_ZZ13Run_OperationvE3__c_15>:
    41eb:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41fb:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    420b:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    421b:	20 31 00                                             1.

0000421e <_ZZ13Run_OperationvE3__c_14>:
    421e:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    422e:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    423e:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    424e:	20 30 00                                             0.

00004251 <_ZZ13Run_OperationvE3__c_13>:
    4251:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4261:	20 2c 20 54 69 6d 65 20 4f 76 65 72 00               , Time Over.

0000426e <_ZZ13Run_OperationvE3__c_12>:
    426e:	50 75 6d 70 20 52 75 6e 20 54 69 6d 65 72 20 69     Pump Run Timer i
    427e:	6e 20 54 69 6d 65 72 20 3a 20 00                    n Timer : .

00004289 <_ZZ13Run_OperationvE3__c_11>:
    4289:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4299:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    42a9:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    42b9:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    42c9:	74 6f 70 20 30 2e 31 00                             top 0.1.

000042d1 <_ZZ13Run_OperationvE3__c_10>:
    42d1:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42e1:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    42f1:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    4301:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    4311:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004319 <_ZZ13Run_OperationvE3__c_9>:
    4319:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4329:	20 2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61      , Irrigation fa
    4339:	69 6c 73 20 74 6f 20 73 74 6f 70 20 62 75 74 20     ils to stop but 
    4349:	72 75 6e 20 66 6f 72 20 6e 65 78 74 20 70 6c 6f     run for next plo
    4359:	74 20 00                                            t .

0000435c <_ZZ13Run_OperationvE3__c_8>:
    435c:	4d 6f 64 65 3a 54 69 6d 65 72 20 4d 6f 64 65 20     Mode:Timer Mode 
    436c:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    437c:	74 00                                               t.

0000437e <_ZZ13Run_OperationvE3__c_7>:
    437e:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    438e:	20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68 72      kill switch thr
    439e:	6f 75 67 68 20 61 70 70 00                          ough app.

000043a7 <_ZZ13Run_OperationvE3__c_6>:
    43a7:	66 6f 67 67 65 72 20 6f 6e 20 49 72 72 69 67 61     fogger on Irriga
    43b7:	74 69 6f 6e 20 73 74 6f 70 73 00                    tion stops.

000043c2 <_ZZ13Run_OperationvE3__c_5>:
    43c2:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    43d2:	49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c 61 74     Irrigation Relat
    43e2:	65 64 20 46 61 75 6c 74 20 6f 63 63 75 72 00        ed Fault occur.

000043f1 <_ZZ13Run_OperationvE3__c_3>:
    43f1:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4401:	2c 20 47 6f 69 6e 67 20 54 6f 20 53 74 61 72 74     , Going To Start
	...

00004412 <_ZZ13Run_OperationvE3__c_2>:
    4412:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4422:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61 69     , Irrigation fai
    4432:	6c 73 20 74 6f 20 73 74 6f 70 00                    ls to stop.

0000443d <_ZZ13Run_OperationvE3__c_1>:
    443d:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    444d:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    445d:	74 00                                               t.

0000445f <_ZZ13Run_OperationvE3__c_0>:
    445f:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 2c 20 49     Mode: Manual , I
    446f:	72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 73 20     rrigation fails 
    447f:	74 6f 20 73 74 6f 70 00                             to stop.

00004487 <_ZZ13Run_OperationvE3__c>:
    4487:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 73 65 6c     Mode: Manual sel
    4497:	65 63 74 65 64 2c 20 20 4f 70 65 72 61 74 69 6f     ected,  Operatio
    44a7:	6e 20 53 74 61 72 74 00                             n Start.

000044af <_ZZ21Select_Operation_ModevE3__c_11>:
    44af:	41 75 74 6f 20 4d 6f 64 65 20 73 65 6c 65 63 74     Auto Mode select
    44bf:	65 64 00                                            ed.

000044c2 <_ZZ21Select_Operation_ModevE3__c_10>:
    44c2:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    44d2:	65 64 00                                            ed.

000044d5 <_ZZ21Select_Operation_ModevE3__c_9>:
    44d5:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    44e5:	63 74 65 64 00                                      cted.

000044ea <_ZZ21Select_Operation_ModevE3__c_8>:
    44ea:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    44fa:	65 64 00                                            ed.

000044fd <_ZZ21Select_Operation_ModevE3__c_7>:
    44fd:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    450d:	63 74 65 64 00                                      cted.

00004512 <_ZZ21Select_Operation_ModevE3__c_6>:
    4512:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4522:	63 74 65 64 00                                      cted.

00004527 <_ZZ21Select_Operation_ModevE3__c_5>:
    4527:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    4537:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

00004543 <_ZZ21Select_Operation_ModevE3__c_4>:
    4543:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4553:	65 64 00                                            ed.

00004556 <_ZZ21Select_Operation_ModevE3__c_3>:
    4556:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    4566:	74 65 64 00                                         ted.

0000456a <_ZZ21Select_Operation_ModevE3__c_2>:
    456a:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    457a:	74 65 64 00                                         ted.

0000457e <_ZZ21Select_Operation_ModevE3__c_1>:
    457e:	44 61 74 61 20 4c 6f 67 67 65 72 20 4d 6f 64 65     Data Logger Mode
    458e:	20 73 65 6c 65 63 74 65 64 00                        selected.

00004598 <_ZZ21Select_Operation_ModevE3__c_0>:
    4598:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    45a8:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

000045b4 <_ZZ21Select_Operation_ModevE3__c>:
    45b4:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    45c4:	63 74 65 64 00                                      cted.

000045c9 <digital_pin_to_timer_PGM>:
    45c9:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    45f5:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000460f <digital_pin_to_bit_mask_PGM>:
    460f:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    461f:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    462f:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    463f:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    464f:	04 08 10 20 40 80                                   ... @.

00004655 <digital_pin_to_port_PGM>:
    4655:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    4665:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    4675:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    4685:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    4695:	0b 0b 0b 0b 0b 0b                                   ......

0000469b <port_to_input_PGM>:
    469b:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    46ab:	00 01 00 00 03 01 06 01 09 01                       ..........

000046b5 <port_to_output_PGM>:
    46b5:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    46c5:	02 01 00 00 05 01 08 01 0b 01                       ..........

000046cf <port_to_mode_PGM>:
    46cf:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    46df:	01 01 00 00 04 01 07 01 0a 01                       ..........

000046e9 <_ZL18MODEM_CONFIG_TABLE>:
    46e9:	72 74 04 92 74 04 48 94 04 78 c4 0c 72 b4 04        rt..t.H..x..r..

000046f8 <__ctors_start>:
    46f8:	74 66       	ori	r23, 0x64	; 100
    46fa:	cf d0       	rcall	.+414    	; 0x489a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x6c>
    46fc:	25 d1       	rcall	.+586    	; 0x4948 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11a>
    46fe:	81 d9       	rcall	.-3326   	; 0x3a02 <_ZZ12Pub_Sub_DataPcPhjhE3__c_17+0xd>
    4700:	37 df       	rcall	.-402    	; 0x4570 <_ZZ21Select_Operation_ModevE3__c_2+0x6>

00004702 <__ctors_end>:
    4702:	11 24       	eor	r1, r1
    4704:	1f be       	out	0x3f, r1	; 63
    4706:	cf ef       	ldi	r28, 0xFF	; 255
    4708:	d1 e2       	ldi	r29, 0x21	; 33
    470a:	de bf       	out	0x3e, r29	; 62
    470c:	cd bf       	out	0x3d, r28	; 61
    470e:	00 e0       	ldi	r16, 0x00	; 0
    4710:	0c bf       	out	0x3c, r16	; 60

00004712 <__do_copy_data>:
    4712:	19 e0       	ldi	r17, 0x09	; 9
    4714:	a0 e0       	ldi	r26, 0x00	; 0
    4716:	b2 e0       	ldi	r27, 0x02	; 2
    4718:	e0 eb       	ldi	r30, 0xB0	; 176
    471a:	fa ed       	ldi	r31, 0xDA	; 218
    471c:	01 e0       	ldi	r16, 0x01	; 1
    471e:	0b bf       	out	0x3b, r16	; 59
    4720:	02 c0       	rjmp	.+4      	; 0x4726 <__do_copy_data+0x14>
    4722:	07 90       	elpm	r0, Z+
    4724:	0d 92       	st	X+, r0
    4726:	a6 31       	cpi	r26, 0x16	; 22
    4728:	b1 07       	cpc	r27, r17
    472a:	d9 f7       	brne	.-10     	; 0x4722 <__do_copy_data+0x10>

0000472c <__do_clear_bss>:
    472c:	28 e1       	ldi	r18, 0x18	; 24
    472e:	a6 e1       	ldi	r26, 0x16	; 22
    4730:	b9 e0       	ldi	r27, 0x09	; 9
    4732:	01 c0       	rjmp	.+2      	; 0x4736 <.do_clear_bss_start>

00004734 <.do_clear_bss_loop>:
    4734:	1d 92       	st	X+, r1

00004736 <.do_clear_bss_start>:
    4736:	a5 3b       	cpi	r26, 0xB5	; 181
    4738:	b2 07       	cpc	r27, r18
    473a:	e1 f7       	brne	.-8      	; 0x4734 <.do_clear_bss_loop>

0000473c <__do_global_ctors>:
    473c:	13 e2       	ldi	r17, 0x23	; 35
    473e:	c1 e8       	ldi	r28, 0x81	; 129
    4740:	d3 e2       	ldi	r29, 0x23	; 35
    4742:	00 e0       	ldi	r16, 0x00	; 0
    4744:	06 c0       	rjmp	.+12     	; 0x4752 <__do_global_ctors+0x16>
    4746:	21 97       	sbiw	r28, 0x01	; 1
    4748:	01 09       	sbc	r16, r1
    474a:	80 2f       	mov	r24, r16
    474c:	fe 01       	movw	r30, r28
    474e:	0e 94 1c e8 	call	0x1d038	; 0x1d038 <__tablejump2__>
    4752:	cc 37       	cpi	r28, 0x7C	; 124
    4754:	d1 07       	cpc	r29, r17
    4756:	80 e0       	ldi	r24, 0x00	; 0
    4758:	08 07       	cpc	r16, r24
    475a:	a9 f7       	brne	.-22     	; 0x4746 <__do_global_ctors+0xa>
    475c:	0e 94 08 83 	call	0x10610	; 0x10610 <main>
    4760:	0c 94 56 ed 	jmp	0x1daac	; 0x1daac <_exit>

00004764 <__bad_interrupt>:
    4764:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00004768 <_ZN5Print5writeEPKcj>:
			}
			Wireless_Pump_On_Off(_ePUMP_OFF,i);
			//Wireless_Pump_On_Off(i,_kOFF);
		}
	}
}
    4768:	dc 01       	movw	r26, r24
    476a:	ed 91       	ld	r30, X+
    476c:	fc 91       	ld	r31, X
    476e:	02 80       	ldd	r0, Z+2	; 0x02
    4770:	f3 81       	ldd	r31, Z+3	; 0x03
    4772:	e0 2d       	mov	r30, r0
    4774:	19 94       	eijmp

00004776 <_ZN5EERef6updateEh>:
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    4776:	ff 92       	push	r15
    4778:	0f 93       	push	r16
    477a:	1f 93       	push	r17
    477c:	cf 93       	push	r28
    477e:	df 93       	push	r29
    4780:	ec 01       	movw	r28, r24
    4782:	f6 2e       	mov	r15, r22

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    4784:	08 81       	ld	r16, Y
    4786:	19 81       	ldd	r17, Y+1	; 0x01
    4788:	c8 01       	movw	r24, r16
    478a:	0e 94 3a ed 	call	0x1da74	; 0x1da74 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    478e:	f8 16       	cp	r15, r24
    4790:	21 f0       	breq	.+8      	; 0x479a <_ZN5EERef6updateEh+0x24>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    4792:	6f 2d       	mov	r22, r15
    4794:	c8 01       	movw	r24, r16
    4796:	0e 94 42 ed 	call	0x1da84	; 0x1da84 <eeprom_write_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    479a:	ce 01       	movw	r24, r28
    479c:	df 91       	pop	r29
    479e:	cf 91       	pop	r28
    47a0:	1f 91       	pop	r17
    47a2:	0f 91       	pop	r16
    47a4:	ff 90       	pop	r15
    47a6:	08 95       	ret

000047a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>:
    47a8:	0f 93       	push	r16
    47aa:	1f 93       	push	r17
    47ac:	cf 93       	push	r28
    47ae:	df 93       	push	r29
    47b0:	1f 92       	push	r1
    47b2:	1f 92       	push	r1
    47b4:	cd b7       	in	r28, 0x3d	; 61
    47b6:	de b7       	in	r29, 0x3e	; 62
    47b8:	8b 01       	movw	r16, r22
    47ba:	fb 01       	movw	r30, r22
    47bc:	60 81       	ld	r22, Z
    47be:	9a 83       	std	Y+2, r25	; 0x02
    47c0:	89 83       	std	Y+1, r24	; 0x01
    47c2:	ce 01       	movw	r24, r28
    47c4:	01 96       	adiw	r24, 0x01	; 1
    47c6:	d7 df       	rcall	.-82     	; 0x4776 <_ZN5EERef6updateEh>
    47c8:	c8 01       	movw	r24, r16
    47ca:	0f 90       	pop	r0
    47cc:	0f 90       	pop	r0
    47ce:	df 91       	pop	r29
    47d0:	cf 91       	pop	r28
    47d2:	1f 91       	pop	r17
    47d4:	0f 91       	pop	r16
    47d6:	08 95       	ret

000047d8 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>:
    47d8:	ef 92       	push	r14
    47da:	ff 92       	push	r15
    47dc:	0f 93       	push	r16
    47de:	1f 93       	push	r17
    47e0:	cf 93       	push	r28
    47e2:	df 93       	push	r29
    47e4:	1f 92       	push	r1
    47e6:	1f 92       	push	r1
    47e8:	cd b7       	in	r28, 0x3d	; 61
    47ea:	de b7       	in	r29, 0x3e	; 62
    47ec:	86 e2       	ldi	r24, 0x26	; 38
    47ee:	e8 2e       	mov	r14, r24
    47f0:	84 e1       	ldi	r24, 0x14	; 20
    47f2:	f8 2e       	mov	r15, r24
    47f4:	0d ea       	ldi	r16, 0xAD	; 173
    47f6:	1e e0       	ldi	r17, 0x0E	; 14
    47f8:	f7 01       	movw	r30, r14
    47fa:	61 91       	ld	r22, Z+
    47fc:	7f 01       	movw	r14, r30
    47fe:	1a 83       	std	Y+2, r17	; 0x02
    4800:	09 83       	std	Y+1, r16	; 0x01
    4802:	ce 01       	movw	r24, r28
    4804:	01 96       	adiw	r24, 0x01	; 1
    4806:	b7 df       	rcall	.-146    	; 0x4776 <_ZN5EERef6updateEh>
    4808:	0f 5f       	subi	r16, 0xFF	; 255
    480a:	1f 4f       	sbci	r17, 0xFF	; 255
    480c:	01 3b       	cpi	r16, 0xB1	; 177
    480e:	fe e0       	ldi	r31, 0x0E	; 14
    4810:	1f 07       	cpc	r17, r31
    4812:	91 f7       	brne	.-28     	; 0x47f8 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3+0x20>
    4814:	86 e2       	ldi	r24, 0x26	; 38
    4816:	94 e1       	ldi	r25, 0x14	; 20
    4818:	0f 90       	pop	r0
    481a:	0f 90       	pop	r0
    481c:	df 91       	pop	r29
    481e:	cf 91       	pop	r28
    4820:	1f 91       	pop	r17
    4822:	0f 91       	pop	r16
    4824:	ff 90       	pop	r15
    4826:	ef 90       	pop	r14
    4828:	08 95       	ret

0000482a <_Z22Hard_Coded_Flush_Valveh>:
    482a:	81 e0       	ldi	r24, 0x01	; 1
    482c:	08 95       	ret

0000482e <_Z35Wireless_Motor_Enable_Disable_Checkv>:

unsigned char Wireless_Motor_Enable_Disable_Check(void)
{
	if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kWIRELESS_PUMP_ENABLE_DISABLE_PLOT)
    482e:	80 91 5a 0e 	lds	r24, 0x0E5A	; 0x800e5a <_sExtra_Plot+0xd9>
    4832:	8d 36       	cpi	r24, 0x6D	; 109
    4834:	09 f0       	breq	.+2      	; 0x4838 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xa>
    4836:	7c c0       	rjmp	.+248    	; 0x4930 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x102>
	{
		if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET &&
    4838:	80 91 59 0e 	lds	r24, 0x0E59	; 0x800e59 <_sExtra_Plot+0xd8>
    483c:	88 23       	and	r24, r24
    483e:	09 f4       	brne	.+2      	; 0x4842 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14>
    4840:	56 c0       	rjmp	.+172    	; 0x48ee <_Z35Wireless_Motor_Enable_Disable_Checkv+0xc0>
		_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number != 0)
		{
			switch(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0])
    4842:	80 91 5e 0e 	lds	r24, 0x0E5E	; 0x800e5e <_sExtra_Plot+0xdd>
    4846:	86 36       	cpi	r24, 0x66	; 102
    4848:	31 f0       	breq	.+12     	; 0x4856 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x28>
    484a:	87 36       	cpi	r24, 0x67	; 103
    484c:	41 f0       	breq	.+16     	; 0x485e <_Z35Wireless_Motor_Enable_Disable_Checkv+0x30>
    484e:	85 36       	cpi	r24, 0x65	; 101
    4850:	41 f4       	brne	.+16     	; 0x4862 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x34>
			{
				case 101:
				{
					
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    4852:	82 e0       	ldi	r24, 0x02	; 2
    4854:	01 c0       	rjmp	.+2      	; 0x4858 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				case 102:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 3;
    4856:	83 e0       	ldi	r24, 0x03	; 3
    4858:	80 93 23 14 	sts	0x1423, r24	; 0x801423 <_sRuble_Parameters+0xdc>

				}break;
    485c:	2d c0       	rjmp	.+90     	; 0x48b8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
				
				case 103:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 4;
    485e:	84 e0       	ldi	r24, 0x04	; 4
    4860:	fb cf       	rjmp	.-10     	; 0x4858 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				default:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    4862:	82 e0       	ldi	r24, 0x02	; 2
    4864:	80 93 23 14 	sts	0x1423, r24	; 0x801423 <_sRuble_Parameters+0xdc>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    4868:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    486c:	81 30       	cpi	r24, 0x01	; 1
    486e:	21 f5       	brne	.+72     	; 0x48b8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
					{
						_kSERAIL_MON_WRITE("Selected valve number wireless pump > ");
    4870:	63 ec       	ldi	r22, 0xC3	; 195
    4872:	78 e0       	ldi	r23, 0x08	; 8
    4874:	82 e5       	ldi	r24, 0x52	; 82
    4876:	94 e1       	ldi	r25, 0x14	; 20
    4878:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0]);
    487c:	4a e0       	ldi	r20, 0x0A	; 10
    487e:	50 e0       	ldi	r21, 0x00	; 0
    4880:	60 91 5e 0e 	lds	r22, 0x0E5E	; 0x800e5e <_sExtra_Plot+0xdd>
    4884:	82 e5       	ldi	r24, 0x52	; 82
    4886:	94 e1       	ldi	r25, 0x14	; 20
    4888:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    488c:	82 e5       	ldi	r24, 0x52	; 82
    488e:	94 e1       	ldi	r25, 0x14	; 20
    4890:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE("Selected wireless pump > ");
    4894:	69 ea       	ldi	r22, 0xA9	; 169
    4896:	78 e0       	ldi	r23, 0x08	; 8
    4898:	82 e5       	ldi	r24, 0x52	; 82
    489a:	94 e1       	ldi	r25, 0x14	; 20
    489c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Pump_Selected_For_Irrigation);
    48a0:	4a e0       	ldi	r20, 0x0A	; 10
    48a2:	50 e0       	ldi	r21, 0x00	; 0
    48a4:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    48a8:	82 e5       	ldi	r24, 0x52	; 82
    48aa:	94 e1       	ldi	r25, 0x14	; 20
    48ac:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    48b0:	82 e5       	ldi	r24, 0x52	; 82
    48b2:	94 e1       	ldi	r25, 0x14	; 20
    48b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
				}break;
			}
			
			if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    48b8:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    48bc:	81 11       	cpse	r24, r1
    48be:	46 c0       	rjmp	.+140    	; 0x494c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    48c0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    48c4:	81 30       	cpi	r24, 0x01	; 1
    48c6:	51 f4       	brne	.+20     	; 0x48dc <_Z35Wireless_Motor_Enable_Disable_Checkv+0xae>
				{
					_kSERAIL_MON_WRITE("wireless pump 3....................,,,,,,, ");
    48c8:	6d e7       	ldi	r22, 0x7D	; 125
    48ca:	78 e0       	ldi	r23, 0x08	; 8
    48cc:	82 e5       	ldi	r24, 0x52	; 82
    48ce:	94 e1       	ldi	r25, 0x14	; 20
    48d0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    48d4:	82 e5       	ldi	r24, 0x52	; 82
    48d6:	94 e1       	ldi	r25, 0x14	; 20
    48d8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    48dc:	83 e0       	ldi	r24, 0x03	; 3
    48de:	80 93 06 14 	sts	0x1406, r24	; 0x801406 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    48e2:	66 e0       	ldi	r22, 0x06	; 6
    48e4:	74 e1       	ldi	r23, 0x14	; 20
    48e6:	88 ea       	ldi	r24, 0xA8	; 168
    48e8:	9c e0       	ldi	r25, 0x0C	; 12
    48ea:	5e df       	rcall	.-324    	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    48ec:	2f c0       	rjmp	.+94     	; 0x494c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
		else
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    48ee:	81 e0       	ldi	r24, 0x01	; 1
    48f0:	80 93 23 14 	sts	0x1423, r24	; 0x801423 <_sRuble_Parameters+0xdc>
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    48f4:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    48f8:	88 23       	and	r24, r24
    48fa:	09 f4       	brne	.+2      	; 0x48fe <_Z35Wireless_Motor_Enable_Disable_Checkv+0xd0>
    48fc:	48 c0       	rjmp	.+144    	; 0x498e <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    48fe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    4902:	81 30       	cpi	r24, 0x01	; 1
    4904:	51 f4       	brne	.+20     	; 0x491a <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
				{
					_kSERAIL_MON_WRITE("wireless pump 4 ##########################");
    4906:	62 e5       	ldi	r22, 0x52	; 82
    4908:	78 e0       	ldi	r23, 0x08	; 8
    490a:	82 e5       	ldi	r24, 0x52	; 82
    490c:	94 e1       	ldi	r25, 0x14	; 20
    490e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    4912:	82 e5       	ldi	r24, 0x52	; 82
    4914:	94 e1       	ldi	r25, 0x14	; 20
    4916:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    491a:	10 92 06 14 	sts	0x1406, r1	; 0x801406 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    491e:	66 e0       	ldi	r22, 0x06	; 6
    4920:	74 e1       	ldi	r23, 0x14	; 20
    4922:	88 ea       	ldi	r24, 0xA8	; 168
    4924:	9c e0       	ldi	r25, 0x0C	; 12
    4926:	40 df       	rcall	.-384    	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
    4928:	85 e0       	ldi	r24, 0x05	; 5
    492a:	0e 94 03 ad 	call	0x15a06	; 0x15a06 <_Z22Valve_Grouping_Handlerh>
    492e:	0e c0       	rjmp	.+28     	; 0x494c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
	}
	else
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    4930:	81 e0       	ldi	r24, 0x01	; 1
    4932:	80 93 23 14 	sts	0x1423, r24	; 0x801423 <_sRuble_Parameters+0xdc>
		
		if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4936:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    493a:	88 23       	and	r24, r24
    493c:	41 f1       	breq	.+80     	; 0x498e <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    493e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    4942:	81 30       	cpi	r24, 0x01	; 1
    4944:	51 f7       	brne	.-44     	; 0x491a <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
			{
				_kSERAIL_MON_WRITE("wireless pump 5 ");
    4946:	61 e4       	ldi	r22, 0x41	; 65
    4948:	78 e0       	ldi	r23, 0x08	; 8
    494a:	df cf       	rjmp	.-66     	; 0x490a <_Z35Wireless_Motor_Enable_Disable_Checkv+0xdc>
	
	
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    494c:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    4950:	82 30       	cpi	r24, 0x02	; 2
    4952:	d8 f0       	brcs	.+54     	; 0x498a <_Z35Wireless_Motor_Enable_Disable_Checkv+0x15c>
	{
		if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    4954:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    4958:	81 11       	cpse	r24, r1
    495a:	32 c0       	rjmp	.+100    	; 0x49c0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    495c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    4960:	81 30       	cpi	r24, 0x01	; 1
    4962:	51 f4       	brne	.+20     	; 0x4978 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14a>
			{
				_kSERAIL_MON_WRITE("wireless pump 3 ");
    4964:	60 e3       	ldi	r22, 0x30	; 48
    4966:	78 e0       	ldi	r23, 0x08	; 8
    4968:	82 e5       	ldi	r24, 0x52	; 82
    496a:	94 e1       	ldi	r25, 0x14	; 20
    496c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    4970:	82 e5       	ldi	r24, 0x52	; 82
    4972:	94 e1       	ldi	r25, 0x14	; 20
    4974:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    4978:	83 e0       	ldi	r24, 0x03	; 3
    497a:	80 93 06 14 	sts	0x1406, r24	; 0x801406 <_sRuble_Parameters+0xbf>
			_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    497e:	66 e0       	ldi	r22, 0x06	; 6
    4980:	74 e1       	ldi	r23, 0x14	; 20
    4982:	88 ea       	ldi	r24, 0xA8	; 168
    4984:	9c e0       	ldi	r25, 0x0C	; 12
    4986:	10 cf       	rjmp	.-480    	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4988:	08 95       	ret
		}
	}
	else
	{
		/* Turn on wired motor */
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation == 1)
    498a:	81 30       	cpi	r24, 0x01	; 1
    498c:	c9 f4       	brne	.+50     	; 0x49c0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    498e:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    4992:	88 23       	and	r24, r24
    4994:	a9 f0       	breq	.+42     	; 0x49c0 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4996:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    499a:	81 30       	cpi	r24, 0x01	; 1
    499c:	51 f4       	brne	.+20     	; 0x49b2 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x184>
				{
					_kSERAIL_MON_WRITE("wireless pump 5 ");
    499e:	6f e1       	ldi	r22, 0x1F	; 31
    49a0:	78 e0       	ldi	r23, 0x08	; 8
    49a2:	82 e5       	ldi	r24, 0x52	; 82
    49a4:	94 e1       	ldi	r25, 0x14	; 20
    49a6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    49aa:	82 e5       	ldi	r24, 0x52	; 82
    49ac:	94 e1       	ldi	r25, 0x14	; 20
    49ae:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    49b2:	10 92 06 14 	sts	0x1406, r1	; 0x801406 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    49b6:	66 e0       	ldi	r22, 0x06	; 6
    49b8:	74 e1       	ldi	r23, 0x14	; 20
    49ba:	88 ea       	ldi	r24, 0xA8	; 168
    49bc:	9c e0       	ldi	r25, 0x0C	; 12
    49be:	f4 ce       	rjmp	.-536    	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				// ######################### what should to to switch the pump ###################// 
				//Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
			}
		}
	}
}
    49c0:	08 95       	ret

000049c2 <_Z17Flush_Controllingv>:
		}break;
	}
}

unsigned char Flush_Controlling(void)
{	
    49c2:	e2 ef       	ldi	r30, 0xF2	; 242
    49c4:	fd e0       	ldi	r31, 0x0D	; 13
    49c6:	27 ef       	ldi	r18, 0xF7	; 247
    49c8:	3d e0       	ldi	r19, 0x0D	; 13
    49ca:	80 e0       	ldi	r24, 0x00	; 0
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
	{
		if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[valve_num] != _kRESET)
    49cc:	91 91       	ld	r25, Z+
    49ce:	91 11       	cpse	r25, r1
		{
			total_valve++;
    49d0:	8f 5f       	subi	r24, 0xFF	; 255
	static unsigned int flush_monitor_timer = _kRESET;
	static unsigned char flush_monitoring_trigger = _kRESET;
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
    49d2:	2e 17       	cp	r18, r30
    49d4:	3f 07       	cpc	r19, r31
    49d6:	d1 f7       	brne	.-12     	; 0x49cc <_Z17Flush_Controllingv+0xa>
    49d8:	80 93 1a 09 	sts	0x091A, r24	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
		{
			total_valve++;
		}
	}
	
	if(total_valve < 2)
    49dc:	82 30       	cpi	r24, 0x02	; 2
    49de:	18 f4       	brcc	.+6      	; 0x49e6 <_Z17Flush_Controllingv+0x24>
	{
		_gRunning_Flush_Num = _kSET;
    49e0:	81 e0       	ldi	r24, 0x01	; 1
    49e2:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
	}
	
	
	
	
	if(_sSchedules.Flush_Schedule_In_Every > 14400)
    49e6:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    49ea:	90 91 8b 0b 	lds	r25, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
    49ee:	81 34       	cpi	r24, 0x41	; 65
    49f0:	98 43       	sbci	r25, 0x38	; 56
    49f2:	30 f0       	brcs	.+12     	; 0x4a00 <_Z17Flush_Controllingv+0x3e>
	{
		_sSchedules.Flush_Schedule_In_Every = 14400;
    49f4:	80 e4       	ldi	r24, 0x40	; 64
    49f6:	98 e3       	ldi	r25, 0x38	; 56
    49f8:	90 93 8b 0b 	sts	0x0B8B, r25	; 0x800b8b <_sSchedules+0x26d>
    49fc:	80 93 8a 0b 	sts	0x0B8A, r24	; 0x800b8a <_sSchedules+0x26c>
		
	}
	
	if(_sSchedules.Flush_Schedule_For > 900)
    4a00:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    4a04:	90 91 8d 0b 	lds	r25, 0x0B8D	; 0x800b8d <_sSchedules+0x26f>
    4a08:	85 38       	cpi	r24, 0x85	; 133
    4a0a:	93 40       	sbci	r25, 0x03	; 3
    4a0c:	30 f0       	brcs	.+12     	; 0x4a1a <_Z17Flush_Controllingv+0x58>
	{
		_sSchedules.Flush_Schedule_For = 900;
    4a0e:	84 e8       	ldi	r24, 0x84	; 132
    4a10:	93 e0       	ldi	r25, 0x03	; 3
    4a12:	90 93 8d 0b 	sts	0x0B8D, r25	; 0x800b8d <_sSchedules+0x26f>
    4a16:	80 93 8c 0b 	sts	0x0B8C, r24	; 0x800b8c <_sSchedules+0x26e>
	}
	
	
	if(flush_time_save > 40)
    4a1a:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
    4a1e:	89 32       	cpi	r24, 0x29	; 41
    4a20:	20 f0       	brcs	.+8      	; 0x4a2a <_Z17Flush_Controllingv+0x68>
	{
		flush_time_save = 0;
    4a22:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
		_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a26:	d8 de       	rcall	.-592    	; 0x47d8 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4a28:	03 c0       	rjmp	.+6      	; 0x4a30 <_Z17Flush_Controllingv+0x6e>
	}
	else
	{
		flush_time_save++;
    4a2a:	8f 5f       	subi	r24, 0xFF	; 255
    4a2c:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <_ZZ17Flush_ControllingvE15flush_time_save>
	}
	
	
	
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER)
    4a30:	80 91 ee 0d 	lds	r24, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6d>
    4a34:	89 36       	cpi	r24, 0x69	; 105
    4a36:	09 f0       	breq	.+2      	; 0x4a3a <_Z17Flush_Controllingv+0x78>
    4a38:	38 c1       	rjmp	.+624    	; 0x4caa <_Z17Flush_Controllingv+0x2e8>
	{
		if(_sRuble_Parameters.Operation_Mode != _eOPER_MOD_MANUAL)
    4a3a:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    4a3e:	82 30       	cpi	r24, 0x02	; 2
    4a40:	09 f4       	brne	.+2      	; 0x4a44 <_Z17Flush_Controllingv+0x82>
    4a42:	f9 c0       	rjmp	.+498    	; 0x4c36 <_Z17Flush_Controllingv+0x274>
		{
			if(!_sRuble_Parameters.Flush_Retry)
    4a44:	80 91 30 14 	lds	r24, 0x1430	; 0x801430 <_sRuble_Parameters+0xe9>
    4a48:	90 91 31 14 	lds	r25, 0x1431	; 0x801431 <_sRuble_Parameters+0xea>
    4a4c:	89 2b       	or	r24, r25
    4a4e:	09 f0       	breq	.+2      	; 0x4a52 <_Z17Flush_Controllingv+0x90>
    4a50:	2c c1       	rjmp	.+600    	; 0x4caa <_Z17Flush_Controllingv+0x2e8>
			{
				_kSERAIL_MON_WRITE("Flush_Running 0: ");
    4a52:	68 ee       	ldi	r22, 0xE8	; 232
    4a54:	72 e0       	ldi	r23, 0x02	; 2
    4a56:	82 e5       	ldi	r24, 0x52	; 82
    4a58:	94 e1       	ldi	r25, 0x14	; 20
    4a5a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a5e:	40 91 26 14 	lds	r20, 0x1426	; 0x801426 <_sRuble_Parameters+0xdf>
    4a62:	50 91 27 14 	lds	r21, 0x1427	; 0x801427 <_sRuble_Parameters+0xe0>
    4a66:	60 91 28 14 	lds	r22, 0x1428	; 0x801428 <_sRuble_Parameters+0xe1>
    4a6a:	70 91 29 14 	lds	r23, 0x1429	; 0x801429 <_sRuble_Parameters+0xe2>
    4a6e:	2a e0       	ldi	r18, 0x0A	; 10
    4a70:	30 e0       	ldi	r19, 0x00	; 0
    4a72:	82 e5       	ldi	r24, 0x52	; 82
    4a74:	94 e1       	ldi	r25, 0x14	; 20
    4a76:	0e 94 17 d2 	call	0x1a42e	; 0x1a42e <_ZN5Print5printEmi>
				Serial.println();
    4a7a:	82 e5       	ldi	r24, 0x52	; 82
    4a7c:	94 e1       	ldi	r25, 0x14	; 20
    4a7e:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    4a82:	82 e5       	ldi	r24, 0x52	; 82
    4a84:	94 e1       	ldi	r25, 0x14	; 20
    4a86:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				
				if(_sRuble_Parameters.Pump_Run_Timer_for_flush > _sSchedules.Flush_Schedule_In_Every)
    4a8a:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    4a8e:	90 91 8b 0b 	lds	r25, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
    4a92:	a0 e0       	ldi	r26, 0x00	; 0
    4a94:	b0 e0       	ldi	r27, 0x00	; 0
    4a96:	40 91 26 14 	lds	r20, 0x1426	; 0x801426 <_sRuble_Parameters+0xdf>
    4a9a:	50 91 27 14 	lds	r21, 0x1427	; 0x801427 <_sRuble_Parameters+0xe0>
    4a9e:	60 91 28 14 	lds	r22, 0x1428	; 0x801428 <_sRuble_Parameters+0xe1>
    4aa2:	70 91 29 14 	lds	r23, 0x1429	; 0x801429 <_sRuble_Parameters+0xe2>
    4aa6:	84 17       	cp	r24, r20
    4aa8:	95 07       	cpc	r25, r21
    4aaa:	a6 07       	cpc	r26, r22
    4aac:	b7 07       	cpc	r27, r23
    4aae:	08 f0       	brcs	.+2      	; 0x4ab2 <_Z17Flush_Controllingv+0xf0>
    4ab0:	fc c0       	rjmp	.+504    	; 0x4caa <_Z17Flush_Controllingv+0x2e8>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 1: ");
					//_kSERIAL_MON_CLEAR();
					if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    4ab2:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    4ab6:	81 30       	cpi	r24, 0x01	; 1
    4ab8:	09 f0       	breq	.+2      	; 0x4abc <_Z17Flush_Controllingv+0xfa>
    4aba:	68 c0       	rjmp	.+208    	; 0x4b8c <_Z17Flush_Controllingv+0x1ca>
					{
						if(_sRuble_Parameters.Flush_Running)
    4abc:	80 91 2a 14 	lds	r24, 0x142A	; 0x80142a <_sRuble_Parameters+0xe3>
    4ac0:	90 91 2b 14 	lds	r25, 0x142B	; 0x80142b <_sRuble_Parameters+0xe4>
    4ac4:	89 2b       	or	r24, r25
    4ac6:	f9 f0       	breq	.+62     	; 0x4b06 <_Z17Flush_Controllingv+0x144>
						{
							Hard_Coded_Flush_Valve(_kON);
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    4ac8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    4acc:	81 30       	cpi	r24, 0x01	; 1
    4ace:	51 f4       	brne	.+20     	; 0x4ae4 <_Z17Flush_Controllingv+0x122>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
    4ad0:	66 ed       	ldi	r22, 0xD6	; 214
    4ad2:	72 e0       	ldi	r23, 0x02	; 2
    4ad4:	82 e5       	ldi	r24, 0x52	; 82
    4ad6:	94 e1       	ldi	r25, 0x14	; 20
    4ad8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    4adc:	82 e5       	ldi	r24, 0x52	; 82
    4ade:	94 e1       	ldi	r25, 0x14	; 20
    4ae0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4ae4:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    4ae8:	81 11       	cpse	r24, r1
    4aea:	13 c1       	rjmp	.+550    	; 0x4d12 <_Z17Flush_Controllingv+0x350>
    4aec:	80 91 8a 0b 	lds	r24, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    4af0:	90 91 8b 0b 	lds	r25, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
								_kSERIAL_MON_CLEAR();
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
    4af4:	89 2b       	or	r24, r25
    4af6:	09 f4       	brne	.+2      	; 0x4afa <_Z17Flush_Controllingv+0x138>
    4af8:	0c c1       	rjmp	.+536    	; 0x4d12 <_Z17Flush_Controllingv+0x350>
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4afa:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
    4afe:	81 30       	cpi	r24, 0x01	; 1
    4b00:	09 f0       	breq	.+2      	; 0x4b04 <_Z17Flush_Controllingv+0x142>
    4b02:	d3 c0       	rjmp	.+422    	; 0x4caa <_Z17Flush_Controllingv+0x2e8>
    4b04:	06 c1       	rjmp	.+524    	; 0x4d12 <_Z17Flush_Controllingv+0x350>
								//_kSERAIL_MON_WRITE("Flush_Running 4: ");
								//_kSERIAL_MON_CLEAR();
								
								//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
							
								if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER)
    4b06:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    4b0a:	83 30       	cpi	r24, 0x03	; 3
    4b0c:	49 f4       	brne	.+18     	; 0x4b20 <_Z17Flush_Controllingv+0x15e>
								{
									_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    4b0e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    4b12:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    4b16:	88 60       	ori	r24, 0x08	; 8
    4b18:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    4b1c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
								}
							
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4b20:	84 e0       	ldi	r24, 0x04	; 4
    4b22:	0e 94 a1 c6 	call	0x18d42	; 0x18d42 <_Z25Stop_Extra_Plot_Operationh>
								{
								
								}
							
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4b26:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    4b2a:	88 23       	and	r24, r24
    4b2c:	09 f4       	brne	.+2      	; 0x4b30 <_Z17Flush_Controllingv+0x16e>
    4b2e:	7d c0       	rjmp	.+250    	; 0x4c2a <_Z17Flush_Controllingv+0x268>
								{
									
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4b30:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    4b34:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    4b38:	90 62       	ori	r25, 0x20	; 32
    4b3a:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    4b3e:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4b42:	84 e0       	ldi	r24, 0x04	; 4
    4b44:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4b48:	82 e0       	ldi	r24, 0x02	; 2
    4b4a:	80 93 07 0e 	sts	0x0E07, r24	; 0x800e07 <_sExtra_Plot+0x86>
								
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4b4e:	10 92 06 0e 	sts	0x0E06, r1	; 0x800e06 <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4b52:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4b56:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4b5a:	91 e0       	ldi	r25, 0x01	; 1
    4b5c:	90 93 16 09 	sts	0x0916, r25	; 0x800916 <__data_end>
									
									if(_gRunning_Flush_Num >= total_valve)
    4b60:	80 91 9a 0c 	lds	r24, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
    4b64:	20 91 1a 09 	lds	r18, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4b68:	82 17       	cp	r24, r18
    4b6a:	58 f0       	brcs	.+22     	; 0x4b82 <_Z17Flush_Controllingv+0x1c0>
									{
										_gRunning_Flush_Num = _kSET;
    4b6c:	90 93 9a 0c 	sts	0x0C9A, r25	; 0x800c9a <_gRunning_Flush_Num>
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4b70:	10 92 26 14 	sts	0x1426, r1	; 0x801426 <_sRuble_Parameters+0xdf>
    4b74:	10 92 27 14 	sts	0x1427, r1	; 0x801427 <_sRuble_Parameters+0xe0>
    4b78:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xe1>
    4b7c:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xe2>
    4b80:	03 c0       	rjmp	.+6      	; 0x4b88 <_Z17Flush_Controllingv+0x1c6>
									}
									else
									{
										_gRunning_Flush_Num++;
    4b82:	8f 5f       	subi	r24, 0xFF	; 255
    4b84:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
									}
									
									_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4b88:	27 de       	rcall	.-946    	; 0x47d8 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4b8a:	4f c0       	rjmp	.+158    	; 0x4c2a <_Z17Flush_Controllingv+0x268>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4b8c:	90 91 ed 0d 	lds	r25, 0x0DED	; 0x800ded <_sExtra_Plot+0x6c>
    4b90:	91 11       	cpse	r25, r1
    4b92:	bd c0       	rjmp	.+378    	; 0x4d0e <_Z17Flush_Controllingv+0x34c>
						_sSchedules.Flush_Schedule_In_Every == 0)
    4b94:	20 91 8a 0b 	lds	r18, 0x0B8A	; 0x800b8a <_sSchedules+0x26c>
    4b98:	30 91 8b 0b 	lds	r19, 0x0B8B	; 0x800b8b <_sSchedules+0x26d>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4b9c:	23 2b       	or	r18, r19
    4b9e:	09 f4       	brne	.+2      	; 0x4ba2 <_Z17Flush_Controllingv+0x1e0>
    4ba0:	b6 c0       	rjmp	.+364    	; 0x4d0e <_Z17Flush_Controllingv+0x34c>
							return 1;
						}
						
						
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4ba2:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    4ba6:	91 11       	cpse	r25, r1
    4ba8:	03 c0       	rjmp	.+6      	; 0x4bb0 <_Z17Flush_Controllingv+0x1ee>
    4baa:	88 23       	and	r24, r24
    4bac:	09 f4       	brne	.+2      	; 0x4bb0 <_Z17Flush_Controllingv+0x1ee>
    4bae:	81 c0       	rjmp	.+258    	; 0x4cb2 <_Z17Flush_Controllingv+0x2f0>
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4bb0:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    4bb4:	81 30       	cpi	r24, 0x01	; 1
    4bb6:	09 f0       	breq	.+2      	; 0x4bba <_Z17Flush_Controllingv+0x1f8>
    4bb8:	1a c1       	rjmp	.+564    	; 0x4dee <_Z17Flush_Controllingv+0x42c>
    4bba:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
    4bbe:	81 30       	cpi	r24, 0x01	; 1
    4bc0:	09 f4       	brne	.+2      	; 0x4bc4 <_Z17Flush_Controllingv+0x202>
    4bc2:	42 c1       	rjmp	.+644    	; 0x4e48 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING)
								{
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    4bc4:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    4bc8:	85 30       	cpi	r24, 0x05	; 5
    4bca:	09 f4       	brne	.+2      	; 0x4bce <_Z17Flush_Controllingv+0x20c>
    4bcc:	2d c1       	rjmp	.+602    	; 0x4e28 <_Z17Flush_Controllingv+0x466>
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
									return 0;
								}
							}
							
							if(Start_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4bce:	84 e0       	ldi	r24, 0x04	; 4
    4bd0:	0e 94 e5 c5 	call	0x18bca	; 0x18bca <_Z26Start_Extra_Plot_Operationh>
    4bd4:	88 23       	and	r24, r24
    4bd6:	09 f4       	brne	.+2      	; 0x4bda <_Z17Flush_Controllingv+0x218>
    4bd8:	da c0       	rjmp	.+436    	; 0x4d8e <_Z17Flush_Controllingv+0x3cc>
							{
							     if(_sRuble_Parameters.Debug_Mode == _kSET)
    4bda:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    4bde:	81 30       	cpi	r24, 0x01	; 1
    4be0:	51 f4       	brne	.+20     	; 0x4bf6 <_Z17Flush_Controllingv+0x234>
							     {
									_kSERAIL_MON_WRITE("Flush_Running 6: ");
    4be2:	62 eb       	ldi	r22, 0xB2	; 178
    4be4:	72 e0       	ldi	r23, 0x02	; 2
    4be6:	82 e5       	ldi	r24, 0x52	; 82
    4be8:	94 e1       	ldi	r25, 0x14	; 20
    4bea:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4bee:	82 e5       	ldi	r24, 0x52	; 82
    4bf0:	94 e1       	ldi	r25, 0x14	; 20
    4bf2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								 }
								
								_sRuble_Parameters.Flush_Running =  _sSchedules.Flush_Schedule_For;
    4bf6:	80 91 8c 0b 	lds	r24, 0x0B8C	; 0x800b8c <_sSchedules+0x26e>
    4bfa:	90 91 8d 0b 	lds	r25, 0x0B8D	; 0x800b8d <_sSchedules+0x26f>
    4bfe:	90 93 2b 14 	sts	0x142B, r25	; 0x80142b <_sRuble_Parameters+0xe4>
    4c02:	80 93 2a 14 	sts	0x142A, r24	; 0x80142a <_sRuble_Parameters+0xe3>
								_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c06:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    4c0a:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    4c0e:	90 62       	ori	r25, 0x20	; 32
    4c10:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    4c14:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
								_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c18:	84 e0       	ldi	r24, 0x04	; 4
    4c1a:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c1e:	82 e0       	ldi	r24, 0x02	; 2
    4c20:	80 93 07 0e 	sts	0x0E07, r24	; 0x800e07 <_sExtra_Plot+0x86>
							
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_ON;
							
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kSET;
    4c24:	81 e0       	ldi	r24, 0x01	; 1
    4c26:	80 93 06 0e 	sts	0x0E06, r24	; 0x800e06 <_sExtra_Plot+0x85>
							
								Hard_Coded_Flush_Valve(_kOFF);
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4c2a:	6a e9       	ldi	r22, 0x9A	; 154
    4c2c:	7c e0       	ldi	r23, 0x0C	; 12
    4c2e:	87 eb       	ldi	r24, 0xB7	; 183
    4c30:	9e e0       	ldi	r25, 0x0E	; 14
    4c32:	ba dd       	rcall	.-1164   	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4c34:	3a c0       	rjmp	.+116    	; 0x4caa <_Z17Flush_Controllingv+0x2e8>
				
			}
		}
		else
		{
			if(_sRuble_Parameters.Flush_Running || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c36:	80 91 2a 14 	lds	r24, 0x142A	; 0x80142a <_sRuble_Parameters+0xe3>
    4c3a:	90 91 2b 14 	lds	r25, 0x142B	; 0x80142b <_sRuble_Parameters+0xe4>
    4c3e:	89 2b       	or	r24, r25
    4c40:	21 f4       	brne	.+8      	; 0x4c4a <_Z17Flush_Controllingv+0x288>
    4c42:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    4c46:	88 23       	and	r24, r24
    4c48:	a1 f1       	breq	.+104    	; 0x4cb2 <_Z17Flush_Controllingv+0x2f0>
			{
				//_kSERAIL_MON_WRITE("Flush_Running 7: ");
				//_kSERIAL_MON_CLEAR();
				_sRuble_Parameters.Flush_Running = _kRESET;
    4c4a:	10 92 2b 14 	sts	0x142B, r1	; 0x80142b <_sRuble_Parameters+0xe4>
    4c4e:	10 92 2a 14 	sts	0x142A, r1	; 0x80142a <_sRuble_Parameters+0xe3>
				
				
				if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4c52:	84 e0       	ldi	r24, 0x04	; 4
    4c54:	0e 94 a1 c6 	call	0x18d42	; 0x18d42 <_Z25Stop_Extra_Plot_Operationh>
				{
					
				}
				
				//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
				if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c58:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    4c5c:	88 23       	and	r24, r24
    4c5e:	09 f1       	breq	.+66     	; 0x4ca2 <_Z17Flush_Controllingv+0x2e0>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 8: ");
					//_kSERIAL_MON_CLEAR();
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c60:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    4c64:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    4c68:	90 62       	ori	r25, 0x20	; 32
    4c6a:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    4c6e:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c72:	84 e0       	ldi	r24, 0x04	; 4
    4c74:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c78:	82 e0       	ldi	r24, 0x02	; 2
    4c7a:	80 93 07 0e 	sts	0x0E07, r24	; 0x800e07 <_sExtra_Plot+0x86>
					
					//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4c7e:	10 92 06 0e 	sts	0x0E06, r1	; 0x800e06 <_sExtra_Plot+0x85>
					flush_monitor_timer = _kRESET;
    4c82:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4c86:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
					flush_monitoring_trigger = _kSET;
    4c8a:	81 e0       	ldi	r24, 0x01	; 1
    4c8c:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
					_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4c90:	10 92 26 14 	sts	0x1426, r1	; 0x801426 <_sRuble_Parameters+0xdf>
    4c94:	10 92 27 14 	sts	0x1427, r1	; 0x801427 <_sRuble_Parameters+0xe0>
    4c98:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xe1>
    4c9c:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xe2>
					_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4ca0:	9b dd       	rcall	.-1226   	; 0x47d8 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
				}
				_sRuble_Parameters.Flush_Valve_Off_Timer = _kRESET;
    4ca2:	10 92 33 14 	sts	0x1433, r1	; 0x801433 <_sRuble_Parameters+0xec>
    4ca6:	10 92 32 14 	sts	0x1432, r1	; 0x801432 <_sRuble_Parameters+0xeb>
		}
	}
	
	
	
	if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation == _kRESET)
    4caa:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    4cae:	81 11       	cpse	r24, r1
    4cb0:	1d c0       	rjmp	.+58     	; 0x4cec <_Z17Flush_Controllingv+0x32a>
	{
		if(flush_monitoring_trigger)
    4cb2:	80 91 16 09 	lds	r24, 0x0916	; 0x800916 <__data_end>
    4cb6:	88 23       	and	r24, r24
    4cb8:	c9 f0       	breq	.+50     	; 0x4cec <_Z17Flush_Controllingv+0x32a>
		{
			if(flush_monitor_timer > 60)
    4cba:	80 91 17 09 	lds	r24, 0x0917	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
    4cbe:	90 91 18 09 	lds	r25, 0x0918	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4cc2:	8d 33       	cpi	r24, 0x3D	; 61
    4cc4:	91 05       	cpc	r25, r1
    4cc6:	68 f0       	brcs	.+26     	; 0x4ce2 <_Z17Flush_Controllingv+0x320>
			{
				flush_monitor_timer = _kRESET;
    4cc8:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4ccc:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
				if(flush_monitoring_trigger)
				{
					Hard_Coded_Flush_Valve(_kON);
					if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)))
    4cd0:	64 e0       	ldi	r22, 0x04	; 4
    4cd2:	80 e0       	ldi	r24, 0x00	; 0
    4cd4:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    4cd8:	88 23       	and	r24, r24
    4cda:	41 f0       	breq	.+16     	; 0x4cec <_Z17Flush_Controllingv+0x32a>
					{
						flush_monitoring_trigger = _kRESET;
    4cdc:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <__data_end>
    4ce0:	05 c0       	rjmp	.+10     	; 0x4cec <_Z17Flush_Controllingv+0x32a>
				}
			
			}
			else
			{
				flush_monitor_timer++;
    4ce2:	01 96       	adiw	r24, 0x01	; 1
    4ce4:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4ce8:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
			}
		}
	}
	
	
	if(_gRunning_Flush_Num == _kRESET || _gRunning_Flush_Num > total_valve)
    4cec:	80 91 9a 0c 	lds	r24, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
    4cf0:	88 23       	and	r24, r24
    4cf2:	21 f0       	breq	.+8      	; 0x4cfc <_Z17Flush_Controllingv+0x33a>
    4cf4:	90 91 1a 09 	lds	r25, 0x091A	; 0x80091a <_ZZ17Flush_ControllingvE11total_valve>
    4cf8:	98 17       	cp	r25, r24
    4cfa:	40 f4       	brcc	.+16     	; 0x4d0c <_Z17Flush_Controllingv+0x34a>
	{
		_gRunning_Flush_Num = _kSET;
    4cfc:	81 e0       	ldi	r24, 0x01	; 1
    4cfe:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
		_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d02:	6a e9       	ldi	r22, 0x9A	; 154
    4d04:	7c e0       	ldi	r23, 0x0C	; 12
    4d06:	87 eb       	ldi	r24, 0xB7	; 183
    4d08:	9e e0       	ldi	r25, 0x0E	; 14
    4d0a:	4e cd       	rjmp	.-1380   	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
	}
	
}
    4d0c:	08 95       	ret
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
						_sSchedules.Flush_Schedule_In_Every == 0)
						{
							//_kSERAIL_MON_WRITE("Flush_Running 5: ");
							//_kSERIAL_MON_CLEAR();
							return 1;
    4d0e:	81 e0       	ldi	r24, 0x01	; 1
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d10:	08 95       	ret
    4d12:	6a e9       	ldi	r22, 0x9A	; 154
    4d14:	7c e0       	ldi	r23, 0x0C	; 12
    4d16:	87 eb       	ldi	r24, 0xB7	; 183
    4d18:	9e e0       	ldi	r25, 0x0E	; 14
    4d1a:	46 dd       	rcall	.-1396   	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
								
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    4d1c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    4d20:	81 30       	cpi	r24, 0x01	; 1
    4d22:	51 f4       	brne	.+20     	; 0x4d38 <_Z17Flush_Controllingv+0x376>
								{
									_kSERAIL_MON_WRITE("Flush_Running 3: ");
    4d24:	64 ec       	ldi	r22, 0xC4	; 196
    4d26:	72 e0       	ldi	r23, 0x02	; 2
    4d28:	82 e5       	ldi	r24, 0x52	; 82
    4d2a:	94 e1       	ldi	r25, 0x14	; 20
    4d2c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4d30:	82 e5       	ldi	r24, 0x52	; 82
    4d32:	94 e1       	ldi	r25, 0x14	; 20
    4d34:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								
								if(_sPump_Parameter.Irrigation_Status || _sPump_Parameter.Irrigation_Status == _kSET)
    4d38:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    4d3c:	88 23       	and	r24, r24
    4d3e:	31 f0       	breq	.+12     	; 0x4d4c <_Z17Flush_Controllingv+0x38a>
								{
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4d40:	88 e5       	ldi	r24, 0x58	; 88
    4d42:	92 e0       	ldi	r25, 0x02	; 2
    4d44:	90 93 31 14 	sts	0x1431, r25	; 0x801431 <_sRuble_Parameters+0xea>
    4d48:	80 93 30 14 	sts	0x1430, r24	; 0x801430 <_sRuble_Parameters+0xe9>
								}
								
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4d4c:	84 e0       	ldi	r24, 0x04	; 4
    4d4e:	0e 94 a1 c6 	call	0x18d42	; 0x18d42 <_Z25Stop_Extra_Plot_Operationh>
								{
									
								}
								
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4d52:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    4d56:	88 23       	and	r24, r24
    4d58:	09 f4       	brne	.+2      	; 0x4d5c <_Z17Flush_Controllingv+0x39a>
    4d5a:	ab cf       	rjmp	.-170    	; 0x4cb2 <_Z17Flush_Controllingv+0x2f0>
								{
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4d5c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    4d60:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    4d64:	90 62       	ori	r25, 0x20	; 32
    4d66:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    4d6a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4d6e:	84 e0       	ldi	r24, 0x04	; 4
    4d70:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4d74:	82 e0       	ldi	r24, 0x02	; 2
    4d76:	80 93 07 0e 	sts	0x0E07, r24	; 0x800e07 <_sExtra_Plot+0x86>
									
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4d7a:	10 92 06 0e 	sts	0x0E06, r1	; 0x800e06 <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4d7e:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d82:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4d86:	81 e0       	ldi	r24, 0x01	; 1
    4d88:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
    4d8c:	2e c0       	rjmp	.+92     	; 0x4dea <_Z17Flush_Controllingv+0x428>
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kSET)
								if(1)
								{
									//_kSERAIL_MON_WRITE("Flush_Running 6.1: ");
									//_kSERIAL_MON_CLEAR();
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4d8e:	88 e5       	ldi	r24, 0x58	; 88
    4d90:	92 e0       	ldi	r25, 0x02	; 2
    4d92:	90 93 31 14 	sts	0x1431, r25	; 0x801431 <_sRuble_Parameters+0xea>
    4d96:	80 93 30 14 	sts	0x1430, r24	; 0x801430 <_sRuble_Parameters+0xe9>
								
									if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4d9a:	84 e0       	ldi	r24, 0x04	; 4
    4d9c:	0e 94 a1 c6 	call	0x18d42	; 0x18d42 <_Z25Stop_Extra_Plot_Operationh>
									{
									
									}
								
									if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4da0:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    4da4:	88 23       	and	r24, r24
    4da6:	09 f4       	brne	.+2      	; 0x4daa <_Z17Flush_Controllingv+0x3e8>
    4da8:	84 cf       	rjmp	.-248    	; 0x4cb2 <_Z17Flush_Controllingv+0x2f0>
									{
										_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4daa:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    4dae:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    4db2:	90 62       	ori	r25, 0x20	; 32
    4db4:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    4db8:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
										_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4dbc:	84 e0       	ldi	r24, 0x04	; 4
    4dbe:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4dc2:	82 e0       	ldi	r24, 0x02	; 2
    4dc4:	80 93 07 0e 	sts	0x0E07, r24	; 0x800e07 <_sExtra_Plot+0x86>
									
										//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4dc8:	10 92 06 0e 	sts	0x0E06, r1	; 0x800e06 <_sExtra_Plot+0x85>
										flush_monitor_timer = _kRESET;
    4dcc:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4dd0:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
										flush_monitoring_trigger = _kSET;
    4dd4:	81 e0       	ldi	r24, 0x01	; 1
    4dd6:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <__data_end>
									
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4dda:	10 92 26 14 	sts	0x1426, r1	; 0x801426 <_sRuble_Parameters+0xdf>
    4dde:	10 92 27 14 	sts	0x1427, r1	; 0x801427 <_sRuble_Parameters+0xe0>
    4de2:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xe1>
    4de6:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xe2>
										_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4dea:	f6 dc       	rcall	.-1556   	; 0x47d8 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4dec:	5e cf       	rjmp	.-324    	; 0x4caa <_Z17Flush_Controllingv+0x2e8>
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
							}
							
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    4dee:	82 30       	cpi	r24, 0x02	; 2
    4df0:	08 f4       	brcc	.+2      	; 0x4df4 <_Z17Flush_Controllingv+0x432>
    4df2:	e8 ce       	rjmp	.-560    	; 0x4bc4 <_Z17Flush_Controllingv+0x202>
							{
								if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    4df4:	90 e0       	ldi	r25, 0x00	; 0
    4df6:	02 97       	sbiw	r24, 0x02	; 2
    4df8:	2b e0       	ldi	r18, 0x0B	; 11
    4dfa:	28 9f       	mul	r18, r24
    4dfc:	f0 01       	movw	r30, r0
    4dfe:	29 9f       	mul	r18, r25
    4e00:	f0 0d       	add	r31, r0
    4e02:	11 24       	eor	r1, r1
    4e04:	ea 56       	subi	r30, 0x6A	; 106
    4e06:	f4 4f       	sbci	r31, 0xF4	; 244
    4e08:	80 85       	ldd	r24, Z+8	; 0x08
    4e0a:	91 85       	ldd	r25, Z+9	; 0x09
    4e0c:	9c 01       	movw	r18, r24
    4e0e:	23 70       	andi	r18, 0x03	; 3
    4e10:	33 27       	eor	r19, r19
    4e12:	23 30       	cpi	r18, 0x03	; 3
    4e14:	31 05       	cpc	r19, r1
    4e16:	c1 f4       	brne	.+48     	; 0x4e48 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    4e18:	82 ff       	sbrs	r24, 2
    4e1a:	16 c0       	rjmp	.+44     	; 0x4e48 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    4e1c:	88 7b       	andi	r24, 0xB8	; 184
    4e1e:	92 70       	andi	r25, 0x02	; 2
    4e20:	89 2b       	or	r24, r25
    4e22:	09 f4       	brne	.+2      	; 0x4e26 <_Z17Flush_Controllingv+0x464>
    4e24:	cf ce       	rjmp	.-610    	; 0x4bc4 <_Z17Flush_Controllingv+0x202>
    4e26:	10 c0       	rjmp	.+32     	; 0x4e48 <_Z17Flush_Controllingv+0x486>
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
							{
								if(_sSchedules.Scheduler_Retry_Timer != 0)
    4e28:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4e2c:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4e30:	89 2b       	or	r24, r25
    4e32:	09 f4       	brne	.+2      	; 0x4e36 <_Z17Flush_Controllingv+0x474>
    4e34:	cc ce       	rjmp	.-616    	; 0x4bce <_Z17Flush_Controllingv+0x20c>
								{
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
    4e36:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    4e3a:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    4e3e:	44 96       	adiw	r24, 0x14	; 20
    4e40:	90 93 31 14 	sts	0x1431, r25	; 0x801431 <_sRuble_Parameters+0xea>
    4e44:	80 93 30 14 	sts	0x1430, r24	; 0x801430 <_sRuble_Parameters+0xe9>
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
    4e48:	80 e0       	ldi	r24, 0x00	; 0
    4e4a:	08 95       	ret

00004e4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>:
		}
	}
}

char Valve_Grouping_Handler_For_wireless_Pump(unsigned char Target_Plot_Num, unsigned char on_off)
{
    4e4c:	2f 92       	push	r2
    4e4e:	3f 92       	push	r3
    4e50:	4f 92       	push	r4
    4e52:	5f 92       	push	r5
    4e54:	6f 92       	push	r6
    4e56:	7f 92       	push	r7
    4e58:	8f 92       	push	r8
    4e5a:	9f 92       	push	r9
    4e5c:	af 92       	push	r10
    4e5e:	bf 92       	push	r11
    4e60:	cf 92       	push	r12
    4e62:	df 92       	push	r13
    4e64:	ef 92       	push	r14
    4e66:	ff 92       	push	r15
    4e68:	0f 93       	push	r16
    4e6a:	1f 93       	push	r17
    4e6c:	cf 93       	push	r28
    4e6e:	df 93       	push	r29
    4e70:	cd b7       	in	r28, 0x3d	; 61
    4e72:	de b7       	in	r29, 0x3e	; 62
    4e74:	e8 97       	sbiw	r28, 0x38	; 56
    4e76:	0f b6       	in	r0, 0x3f	; 63
    4e78:	f8 94       	cli
    4e7a:	de bf       	out	0x3e, r29	; 62
    4e7c:	0f be       	out	0x3f, r0	; 63
    4e7e:	cd bf       	out	0x3d, r28	; 61
    4e80:	68 2e       	mov	r6, r24
    4e82:	76 2e       	mov	r7, r22
	unsigned char i,j,k,count=0,current_valve_number,compare_id,id_len,data_send_counter = 0,temp_data[30];
	unsigned char valve_number_list[_kMAX_LIRA_SENSOR_NODE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO], total_valve_number,valve_number_not_match_flag=0;
	unsigned char hex_array[] = {0x01,0x02,0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
    4e84:	88 e0       	ldi	r24, 0x08	; 8
    4e86:	e3 e6       	ldi	r30, 0x63	; 99
    4e88:	f2 e0       	ldi	r31, 0x02	; 2
    4e8a:	de 01       	movw	r26, r28
    4e8c:	9b 96       	adiw	r26, 0x2b	; 43
    4e8e:	01 90       	ld	r0, Z+
    4e90:	0d 92       	st	X+, r0
    4e92:	8a 95       	dec	r24
    4e94:	e1 f7       	brne	.-8      	; 0x4e8e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x42>
	
	/******************************************* check weather all valves status is off before starts the irrigation *******************************/
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
    4e96:	9e 01       	movw	r18, r28
    4e98:	2f 5f       	subi	r18, 0xFF	; 255
    4e9a:	3f 4f       	sbci	r19, 0xFF	; 255
    4e9c:	19 01       	movw	r2, r18
    4e9e:	8a e2       	ldi	r24, 0x2A	; 42
    4ea0:	d9 01       	movw	r26, r18
    4ea2:	1d 92       	st	X+, r1
    4ea4:	8a 95       	dec	r24
    4ea6:	e9 f7       	brne	.-6      	; 0x4ea2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56>
    4ea8:	0d ef       	ldi	r16, 0xFD	; 253
    4eaa:	a0 2e       	mov	r10, r16
    4eac:	0c e0       	ldi	r16, 0x0C	; 12
    4eae:	b0 2e       	mov	r11, r16
    4eb0:	d5 01       	movw	r26, r10
	total_valve_number = _kRESET;
    4eb2:	f1 2c       	mov	r15, r1
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
    4eb4:	8c 91       	ld	r24, X
    4eb6:	81 50       	subi	r24, 0x01	; 1
    4eb8:	8e 30       	cpi	r24, 0x0E	; 14
    4eba:	b0 f5       	brcc	.+108    	; 0x4f28 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdc>
    4ebc:	cd 01       	movw	r24, r26
    4ebe:	25 e0       	ldi	r18, 0x05	; 5
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
    4ec0:	39 81       	ldd	r19, Y+1	; 0x01
    4ec2:	33 23       	and	r19, r19
    4ec4:	e9 f0       	breq	.+58     	; 0x4f00 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb4>
    4ec6:	60 e0       	ldi	r22, 0x00	; 0
    4ec8:	30 e0       	ldi	r19, 0x00	; 0
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4eca:	03 2f       	mov	r16, r19
    4ecc:	10 e0       	ldi	r17, 0x00	; 0
    4ece:	a1 01       	movw	r20, r2
    4ed0:	40 0f       	add	r20, r16
    4ed2:	51 1f       	adc	r21, r17
    4ed4:	fa 01       	movw	r30, r20
    4ed6:	50 81       	ld	r21, Z
    4ed8:	55 23       	and	r21, r21
    4eda:	b9 f0       	breq	.+46     	; 0x4f0a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
					{
						if(_sLira_Node_Param[i].Euro_Valve_Group[j])
    4edc:	fc 01       	movw	r30, r24
    4ede:	41 81       	ldd	r20, Z+1	; 0x01
    4ee0:	44 23       	and	r20, r20
    4ee2:	61 f0       	breq	.+24     	; 0x4efc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb0>
						{
							if(valve_number_list[k] == _sLira_Node_Param[i].Euro_Valve_Group[j])
    4ee4:	54 17       	cp	r21, r20
    4ee6:	89 f0       	breq	.+34     	; 0x4f0a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
							{
								break;
							}
							
							if(valve_number_list[k] != _sLira_Node_Param[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4ee8:	e2 e0       	ldi	r30, 0x02	; 2
    4eea:	f0 e0       	ldi	r31, 0x00	; 0
    4eec:	ec 0f       	add	r30, r28
    4eee:	fd 1f       	adc	r31, r29
    4ef0:	e0 0f       	add	r30, r16
    4ef2:	f1 1f       	adc	r31, r17
    4ef4:	40 81       	ld	r20, Z
    4ef6:	41 11       	cpse	r20, r1
    4ef8:	01 c0       	rjmp	.+2      	; 0x4efc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb0>
							{
								valve_number_not_match_flag = _kSET;
    4efa:	61 e0       	ldi	r22, 0x01	; 1
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4efc:	3f 5f       	subi	r19, 0xFF	; 255
    4efe:	e5 cf       	rjmp	.-54     	; 0x4eca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7e>
						}
					}
				}
				else
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j])   // check weather valve is there or not
    4f00:	fc 01       	movw	r30, r24
    4f02:	31 81       	ldd	r19, Z+1	; 0x01
    4f04:	31 11       	cpse	r19, r1
    4f06:	03 c0       	rjmp	.+6      	; 0x4f0e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc2>
    4f08:	0b c0       	rjmp	.+22     	; 0x4f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd4>
					{
						valve_number_not_match_flag = _kSET;
					}
				}
				if(valve_number_not_match_flag)
    4f0a:	66 23       	and	r22, r22
    4f0c:	49 f0       	breq	.+18     	; 0x4f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd4>
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    4f0e:	fc 01       	movw	r30, r24
    4f10:	31 81       	ldd	r19, Z+1	; 0x01
    4f12:	36 31       	cpi	r19, 0x16	; 22
    4f14:	28 f4       	brcc	.+10     	; 0x4f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd4>
					{
						valve_number_list[total_valve_number] = _sLira_Node_Param[i].Euro_Valve_Group[j];
    4f16:	f1 01       	movw	r30, r2
    4f18:	ef 0d       	add	r30, r15
    4f1a:	f1 1d       	adc	r31, r1
    4f1c:	30 83       	st	Z, r19
						total_valve_number++;
    4f1e:	f3 94       	inc	r15
    4f20:	21 50       	subi	r18, 0x01	; 1
    4f22:	01 96       	adiw	r24, 0x01	; 1
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    4f24:	21 11       	cpse	r18, r1
    4f26:	cc cf       	rjmp	.-104    	; 0x4ec0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74>
    4f28:	16 96       	adiw	r26, 0x06	; 6
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
	total_valve_number = _kRESET;
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    4f2a:	fd e0       	ldi	r31, 0x0D	; 13
    4f2c:	a1 35       	cpi	r26, 0x51	; 81
    4f2e:	bf 07       	cpc	r27, r31
    4f30:	09 f6       	brne	.-126    	; 0x4eb4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x68>
			}
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    4f32:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    4f36:	81 30       	cpi	r24, 0x01	; 1
    4f38:	59 f5       	brne	.+86     	; 0x4f90 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x144>
	{
		_kSERAIL_MON_WRITE("valve list is : ");
    4f3a:	6e e0       	ldi	r22, 0x0E	; 14
    4f3c:	78 e0       	ldi	r23, 0x08	; 8
    4f3e:	82 e5       	ldi	r24, 0x52	; 82
    4f40:	94 e1       	ldi	r25, 0x14	; 20
    4f42:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    4f46:	82 e5       	ldi	r24, 0x52	; 82
    4f48:	94 e1       	ldi	r25, 0x14	; 20
    4f4a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
		for(i=0;valve_number_list[i]!=0;i++)
    4f4e:	e1 2c       	mov	r14, r1
    4f50:	81 01       	movw	r16, r2
    4f52:	0e 0d       	add	r16, r14
    4f54:	11 1d       	adc	r17, r1
    4f56:	d8 01       	movw	r26, r16
    4f58:	8c 91       	ld	r24, X
    4f5a:	88 23       	and	r24, r24
    4f5c:	c9 f0       	breq	.+50     	; 0x4f90 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x144>
		{
			_kSERAIL_MON_WRITE("valve list enter ");
    4f5e:	6c ef       	ldi	r22, 0xFC	; 252
    4f60:	77 e0       	ldi	r23, 0x07	; 7
    4f62:	82 e5       	ldi	r24, 0x52	; 82
    4f64:	94 e1       	ldi	r25, 0x14	; 20
    4f66:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    4f6a:	f8 01       	movw	r30, r16
    4f6c:	60 81       	ld	r22, Z
    4f6e:	70 e0       	ldi	r23, 0x00	; 0
    4f70:	4a e0       	ldi	r20, 0x0A	; 10
    4f72:	50 e0       	ldi	r21, 0x00	; 0
    4f74:	82 e5       	ldi	r24, 0x52	; 82
    4f76:	94 e1       	ldi	r25, 0x14	; 20
    4f78:	0e 94 a3 d2 	call	0x1a546	; 0x1a546 <_ZN5Print5printEii>
			Serial.println();
    4f7c:	82 e5       	ldi	r24, 0x52	; 82
    4f7e:	94 e1       	ldi	r25, 0x14	; 20
    4f80:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
			_kSERIAL_MON_CLEAR();
    4f84:	82 e5       	ldi	r24, 0x52	; 82
    4f86:	94 e1       	ldi	r25, 0x14	; 20
    4f88:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("valve list is : ");
		_kSERIAL_MON_CLEAR();
	
		for(i=0;valve_number_list[i]!=0;i++)
    4f8c:	e3 94       	inc	r14
    4f8e:	e0 cf       	rjmp	.-64     	; 0x4f50 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x104>
	}
	
	
	
	
	if(on_off == _kFORCEFULYY_OFF)
    4f90:	f3 e0       	ldi	r31, 0x03	; 3
    4f92:	7f 12       	cpse	r7, r31
    4f94:	7d c0       	rjmp	.+250    	; 0x5090 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x244>
    4f96:	11 e8       	ldi	r17, 0x81	; 129
    4f98:	c1 2e       	mov	r12, r17
    4f9a:	1d e0       	ldi	r17, 0x0D	; 13
    4f9c:	d1 2e       	mov	r13, r17
    4f9e:	2b ef       	ldi	r18, 0xFB	; 251
    4fa0:	3e e0       	ldi	r19, 0x0E	; 14
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
    4fa2:	d6 01       	movw	r26, r12
    4fa4:	11 96       	adiw	r26, 0x01	; 1
    4fa6:	8c 91       	ld	r24, X
    4fa8:	11 97       	sbiw	r26, 0x01	; 1
    4faa:	85 56       	subi	r24, 0x65	; 101
    4fac:	8e 30       	cpi	r24, 0x0E	; 14
    4fae:	d0 f5       	brcc	.+116    	; 0x5024 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d8>
    4fb0:	65 e0       	ldi	r22, 0x05	; 5
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
    4fb2:	89 81       	ldd	r24, Y+1	; 0x01
    4fb4:	88 23       	and	r24, r24
    4fb6:	f9 f0       	breq	.+62     	; 0x4ff6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1aa>
    4fb8:	10 e0       	ldi	r17, 0x00	; 0
    4fba:	70 e0       	ldi	r23, 0x00	; 0
					{
						for(k=0;valve_number_list[k]!=0;k++)
    4fbc:	87 2f       	mov	r24, r23
    4fbe:	90 e0       	ldi	r25, 0x00	; 0
    4fc0:	a1 01       	movw	r20, r2
    4fc2:	48 0f       	add	r20, r24
    4fc4:	59 1f       	adc	r21, r25
    4fc6:	fa 01       	movw	r30, r20
    4fc8:	50 81       	ld	r21, Z
    4fca:	55 23       	and	r21, r21
    4fcc:	d1 f0       	breq	.+52     	; 0x5002 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1b6>
						{
							if(_sExtra_Plot[i].Euro_Valve_Group[j])
    4fce:	15 96       	adiw	r26, 0x05	; 5
    4fd0:	4c 91       	ld	r20, X
    4fd2:	15 97       	sbiw	r26, 0x05	; 5
    4fd4:	44 23       	and	r20, r20
    4fd6:	69 f0       	breq	.+26     	; 0x4ff2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1a6>
							{
								if(valve_number_list[k] == _sExtra_Plot[i].Euro_Valve_Group[j])
    4fd8:	54 17       	cp	r21, r20
    4fda:	99 f0       	breq	.+38     	; 0x5002 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1b6>
								{
									break;
								}
								
								if(valve_number_list[k] != _sExtra_Plot[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4fdc:	42 e0       	ldi	r20, 0x02	; 2
    4fde:	50 e0       	ldi	r21, 0x00	; 0
    4fe0:	4c 0f       	add	r20, r28
    4fe2:	5d 1f       	adc	r21, r29
    4fe4:	84 0f       	add	r24, r20
    4fe6:	95 1f       	adc	r25, r21
    4fe8:	fc 01       	movw	r30, r24
    4fea:	80 81       	ld	r24, Z
    4fec:	81 11       	cpse	r24, r1
    4fee:	01 c0       	rjmp	.+2      	; 0x4ff2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1a6>
								{
									valve_number_not_match_flag = _kSET;
    4ff0:	11 e0       	ldi	r17, 0x01	; 1
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
					{
						for(k=0;valve_number_list[k]!=0;k++)
    4ff2:	7f 5f       	subi	r23, 0xFF	; 255
    4ff4:	e3 cf       	rjmp	.-58     	; 0x4fbc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x170>
							}
						}
					}
					else
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j])   // check weather valve is there or not
    4ff6:	15 96       	adiw	r26, 0x05	; 5
    4ff8:	8c 91       	ld	r24, X
    4ffa:	15 97       	sbiw	r26, 0x05	; 5
    4ffc:	81 11       	cpse	r24, r1
    4ffe:	03 c0       	rjmp	.+6      	; 0x5006 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ba>
    5000:	0d c0       	rjmp	.+26     	; 0x501c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d0>
						{
							valve_number_not_match_flag = _kSET;
						}
					}
					if(valve_number_not_match_flag)
    5002:	11 23       	and	r17, r17
    5004:	59 f0       	breq	.+22     	; 0x501c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d0>
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5006:	15 96       	adiw	r26, 0x05	; 5
    5008:	4c 91       	ld	r20, X
    500a:	15 97       	sbiw	r26, 0x05	; 5
    500c:	46 31       	cpi	r20, 0x16	; 22
    500e:	30 f4       	brcc	.+12     	; 0x501c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1d0>
						{
							valve_number_list[total_valve_number] = _sExtra_Plot[i].Euro_Valve_Group[j];
    5010:	c1 01       	movw	r24, r2
    5012:	8f 0d       	add	r24, r15
    5014:	91 1d       	adc	r25, r1
    5016:	fc 01       	movw	r30, r24
    5018:	40 83       	st	Z, r20
							total_valve_number++;
    501a:	f3 94       	inc	r15
    501c:	61 50       	subi	r22, 0x01	; 1
    501e:	11 96       	adiw	r26, 0x01	; 1
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    5020:	61 11       	cpse	r22, r1
    5022:	c7 cf       	rjmp	.-114    	; 0x4fb2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x166>
    5024:	fb e1       	ldi	r31, 0x1B	; 27
    5026:	cf 0e       	add	r12, r31
    5028:	d1 1c       	adc	r13, r1
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    502a:	2c 15       	cp	r18, r12
    502c:	3d 05       	cpc	r19, r13
    502e:	09 f0       	breq	.+2      	; 0x5032 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e6>
    5030:	b8 cf       	rjmp	.-144    	; 0x4fa2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x156>
				}
				
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5032:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5036:	81 30       	cpi	r24, 0x01	; 1
    5038:	e1 f5       	brne	.+120    	; 0x50b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x266>
		{
			_kSERAIL_MON_WRITE("valve list is : ");
    503a:	6b ee       	ldi	r22, 0xEB	; 235
    503c:	77 e0       	ldi	r23, 0x07	; 7
    503e:	82 e5       	ldi	r24, 0x52	; 82
    5040:	94 e1       	ldi	r25, 0x14	; 20
    5042:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    5046:	82 e5       	ldi	r24, 0x52	; 82
    5048:	94 e1       	ldi	r25, 0x14	; 20
    504a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		
			for(i=0;valve_number_list[i]!=0;i++)
    504e:	f1 2c       	mov	r15, r1
    5050:	81 01       	movw	r16, r2
    5052:	0f 0d       	add	r16, r15
    5054:	11 1d       	adc	r17, r1
    5056:	d8 01       	movw	r26, r16
    5058:	8c 91       	ld	r24, X
    505a:	88 23       	and	r24, r24
    505c:	e1 f0       	breq	.+56     	; 0x5096 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x24a>
			{
				_kSERAIL_MON_WRITE("valve list enter ");
    505e:	69 ed       	ldi	r22, 0xD9	; 217
    5060:	77 e0       	ldi	r23, 0x07	; 7
    5062:	82 e5       	ldi	r24, 0x52	; 82
    5064:	94 e1       	ldi	r25, 0x14	; 20
    5066:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    506a:	f8 01       	movw	r30, r16
    506c:	60 81       	ld	r22, Z
    506e:	70 e0       	ldi	r23, 0x00	; 0
    5070:	4a e0       	ldi	r20, 0x0A	; 10
    5072:	50 e0       	ldi	r21, 0x00	; 0
    5074:	82 e5       	ldi	r24, 0x52	; 82
    5076:	94 e1       	ldi	r25, 0x14	; 20
    5078:	0e 94 a3 d2 	call	0x1a546	; 0x1a546 <_ZN5Print5printEii>
				Serial.println();
    507c:	82 e5       	ldi	r24, 0x52	; 82
    507e:	94 e1       	ldi	r25, 0x14	; 20
    5080:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    5084:	82 e5       	ldi	r24, 0x52	; 82
    5086:	94 e1       	ldi	r25, 0x14	; 20
    5088:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    508c:	f3 94       	inc	r15
    508e:	e0 cf       	rjmp	.-64     	; 0x5050 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x204>
			}
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    5090:	a5 e0       	ldi	r26, 0x05	; 5
    5092:	7a 12       	cpse	r7, r26
    5094:	68 c1       	rjmp	.+720    	; 0x5366 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x51a>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5096:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    509a:	81 30       	cpi	r24, 0x01	; 1
    509c:	51 f4       	brne	.+20     	; 0x50b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x266>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    509e:	6e ea       	ldi	r22, 0xAE	; 174
    50a0:	77 e0       	ldi	r23, 0x07	; 7
    50a2:	82 e5       	ldi	r24, 0x52	; 82
    50a4:	94 e1       	ldi	r25, 0x14	; 20
    50a6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    50aa:	82 e5       	ldi	r24, 0x52	; 82
    50ac:	94 e1       	ldi	r25, 0x14	; 20
    50ae:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    50b2:	07 eb       	ldi	r16, 0xB7	; 183
    50b4:	1b e0       	ldi	r17, 0x0B	; 11
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    50b6:	b4 e0       	ldi	r27, 0x04	; 4
    50b8:	cb 2e       	mov	r12, r27
    50ba:	d1 2c       	mov	r13, r1
    50bc:	e1 2c       	mov	r14, r1
    50be:	f1 2c       	mov	r15, r1
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    50c0:	d8 01       	movw	r26, r16
    50c2:	8c 91       	ld	r24, X
    50c4:	88 23       	and	r24, r24
    50c6:	29 f1       	breq	.+74     	; 0x5112 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2c6>
    50c8:	51 2c       	mov	r5, r1
    50ca:	40 e0       	ldi	r20, 0x00	; 0
    50cc:	3a c0       	rjmp	.+116    	; 0x5142 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2f6>
    50ce:	9e 01       	movw	r18, r28
    50d0:	25 5d       	subi	r18, 0xD5	; 213
    50d2:	3f 4f       	sbci	r19, 0xFF	; 255
    50d4:	3c ab       	std	Y+52, r19	; 0x34
    50d6:	2b ab       	std	Y+51, r18	; 0x33
			{
				for(k=0;valve_number_list[k]!=0;k++)
    50d8:	99 24       	eor	r9, r9
    50da:	93 94       	inc	r9
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
								_kSERIAL_MON_PRINT_NUM(i+1);
    50dc:	a7 01       	movw	r20, r14
    50de:	4f 5f       	subi	r20, 0xFF	; 255
    50e0:	5f 4f       	sbci	r21, 0xFF	; 255
    50e2:	5e ab       	std	Y+54, r21	; 0x36
    50e4:	4d ab       	std	Y+53, r20	; 0x35
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    50e6:	5d e0       	ldi	r21, 0x0D	; 13
    50e8:	5e 9d       	mul	r21, r14
    50ea:	c0 01       	movw	r24, r0
    50ec:	5f 9d       	mul	r21, r15
    50ee:	90 0d       	add	r25, r0
    50f0:	11 24       	eor	r1, r1
    50f2:	dc 01       	movw	r26, r24
    50f4:	a9 54       	subi	r26, 0x49	; 73
    50f6:	b4 4f       	sbci	r27, 0xF4	; 244
    50f8:	b8 af       	std	Y+56, r27	; 0x38
    50fa:	af ab       	std	Y+55, r26	; 0x37
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    50fc:	eb a9       	ldd	r30, Y+51	; 0x33
    50fe:	fc a9       	ldd	r31, Y+52	; 0x34
    5100:	81 91       	ld	r24, Z+
    5102:	fc ab       	std	Y+52, r31	; 0x34
    5104:	eb ab       	std	Y+51, r30	; 0x33
    5106:	85 21       	and	r24, r5
    5108:	49 f5       	brne	.+82     	; 0x515c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x310>
    510a:	93 94       	inc	r9
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    510c:	f4 e0       	ldi	r31, 0x04	; 4
    510e:	9f 12       	cpse	r9, r31
    5110:	f5 cf       	rjmp	.-22     	; 0x50fc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2b0>
    5112:	bf ef       	ldi	r27, 0xFF	; 255
    5114:	eb 1a       	sub	r14, r27
    5116:	fb 0a       	sbc	r15, r27
    5118:	03 5f       	subi	r16, 0xF3	; 243
    511a:	1f 4f       	sbci	r17, 0xFF	; 255
    511c:	e3 e0       	ldi	r30, 0x03	; 3
    511e:	ce 0e       	add	r12, r30
    5120:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
    5122:	f6 e0       	ldi	r31, 0x06	; 6
    5124:	ef 16       	cp	r14, r31
    5126:	f1 04       	cpc	r15, r1
    5128:	59 f6       	brne	.-106    	; 0x50c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x274>
    512a:	d2 c0       	rjmp	.+420    	; 0x52d0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x484>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    512c:	28 17       	cp	r18, r24
    512e:	39 07       	cpc	r19, r25
    5130:	11 f4       	brne	.+4      	; 0x5136 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2ea>
						{
							total_valve_number |= hex_array[j];
    5132:	50 81       	ld	r21, Z
    5134:	55 2a       	or	r5, r21
    5136:	01 96       	adiw	r24, 0x01	; 1
    5138:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    513a:	8c 15       	cp	r24, r12
    513c:	9d 05       	cpc	r25, r13
    513e:	b1 f7       	brne	.-20     	; 0x512c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2e0>
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    5140:	4f 5f       	subi	r20, 0xFF	; 255
    5142:	f1 01       	movw	r30, r2
    5144:	e4 0f       	add	r30, r20
    5146:	f1 1d       	adc	r31, r1
    5148:	20 81       	ld	r18, Z
    514a:	22 23       	and	r18, r18
    514c:	09 f4       	brne	.+2      	; 0x5150 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x304>
    514e:	bf cf       	rjmp	.-130    	; 0x50ce <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x282>
    5150:	c6 01       	movw	r24, r12
    5152:	03 97       	sbiw	r24, 0x03	; 3
    5154:	fe 01       	movw	r30, r28
    5156:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5158:	30 e0       	ldi	r19, 0x00	; 0
    515a:	e8 cf       	rjmp	.-48     	; 0x512c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2e0>
    515c:	81 2c       	mov	r8, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    515e:	83 94       	inc	r8
							/****************** if any valve on then turn off that valve first *******************************/
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5160:	a9 e7       	ldi	r26, 0x79	; 121
    5162:	b3 e1       	ldi	r27, 0x13	; 19
    5164:	e4 e1       	ldi	r30, 0x14	; 20
    5166:	1d 92       	st	X+, r1
    5168:	ea 95       	dec	r30
    516a:	e9 f7       	brne	.-6      	; 0x5166 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x31a>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    516c:	d8 01       	movw	r26, r16
    516e:	11 96       	adiw	r26, 0x01	; 1
    5170:	8c 91       	ld	r24, X
    5172:	11 97       	sbiw	r26, 0x01	; 1
    5174:	80 93 79 13 	sts	0x1379, r24	; 0x801379 <_sRuble_Parameters+0x32>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    5178:	12 96       	adiw	r26, 0x02	; 2
    517a:	8c 91       	ld	r24, X
    517c:	12 97       	sbiw	r26, 0x02	; 2
    517e:	80 93 7a 13 	sts	0x137A, r24	; 0x80137a <_sRuble_Parameters+0x33>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    5182:	13 96       	adiw	r26, 0x03	; 3
    5184:	8c 91       	ld	r24, X
    5186:	13 97       	sbiw	r26, 0x03	; 3
    5188:	80 93 7b 13 	sts	0x137B, r24	; 0x80137b <_sRuble_Parameters+0x34>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    518c:	14 96       	adiw	r26, 0x04	; 4
    518e:	8c 91       	ld	r24, X
    5190:	14 97       	sbiw	r26, 0x04	; 4
    5192:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x35>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    5196:	15 96       	adiw	r26, 0x05	; 5
    5198:	8c 91       	ld	r24, X
    519a:	15 97       	sbiw	r26, 0x05	; 5
    519c:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x36>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    51a0:	16 96       	adiw	r26, 0x06	; 6
    51a2:	8c 91       	ld	r24, X
    51a4:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x37>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    51a8:	b2 e0       	ldi	r27, 0x02	; 2
    51aa:	b0 93 7f 13 	sts	0x137F, r27	; 0x80137f <_sRuble_Parameters+0x38>
							
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    51ae:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    51b2:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x3a>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    51b6:	90 92 84 13 	sts	0x1384, r9	; 0x801384 <_sRuble_Parameters+0x3d>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    51ba:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    51be:	81 30       	cpi	r24, 0x01	; 1
    51c0:	39 f5       	brne	.+78     	; 0x5210 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3c4>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
    51c2:	6b e8       	ldi	r22, 0x8B	; 139
    51c4:	77 e0       	ldi	r23, 0x07	; 7
    51c6:	82 e5       	ldi	r24, 0x52	; 82
    51c8:	94 e1       	ldi	r25, 0x14	; 20
    51ca:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    51ce:	4a e0       	ldi	r20, 0x0A	; 10
    51d0:	50 e0       	ldi	r21, 0x00	; 0
    51d2:	6d a9       	ldd	r22, Y+53	; 0x35
    51d4:	7e a9       	ldd	r23, Y+54	; 0x36
    51d6:	82 e5       	ldi	r24, 0x52	; 82
    51d8:	94 e1       	ldi	r25, 0x14	; 20
    51da:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    51de:	82 e5       	ldi	r24, 0x52	; 82
    51e0:	94 e1       	ldi	r25, 0x14	; 20
    51e2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    51e6:	66 e7       	ldi	r22, 0x76	; 118
    51e8:	77 e0       	ldi	r23, 0x07	; 7
    51ea:	82 e5       	ldi	r24, 0x52	; 82
    51ec:	94 e1       	ldi	r25, 0x14	; 20
    51ee:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,count);
    51f2:	4c e0       	ldi	r20, 0x0C	; 12
    51f4:	50 e0       	ldi	r21, 0x00	; 0
    51f6:	69 e7       	ldi	r22, 0x79	; 121
    51f8:	73 e1       	ldi	r23, 0x13	; 19
    51fa:	82 e5       	ldi	r24, 0x52	; 82
    51fc:	94 e1       	ldi	r25, 0x14	; 20
    51fe:	b4 da       	rcall	.-2712   	; 0x4768 <_ZN5Print5writeEPKcj>
								Serial.println();
    5200:	82 e5       	ldi	r24, 0x52	; 82
    5202:	94 e1       	ldi	r25, 0x14	; 20
    5204:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    5208:	82 e5       	ldi	r24, 0x52	; 82
    520a:	94 e1       	ldi	r25, 0x14	; 20
    520c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();   // 20/1/2022
    5210:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    5214:	8c e0       	ldi	r24, 0x0C	; 12
    5216:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
// 								{
// 									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 								}
// 							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    521a:	88 eb       	ldi	r24, 0xB8	; 184
    521c:	9b e0       	ldi	r25, 0x0B	; 11
    521e:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
    5222:	88 23       	and	r24, r24
    5224:	09 f4       	brne	.+2      	; 0x5228 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3dc>
    5226:	41 c0       	rjmp	.+130    	; 0x52aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x45e>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    5228:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
								
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    522c:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    522e:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5230:	28 2f       	mov	r18, r24
    5232:	30 e0       	ldi	r19, 0x00	; 0
    5234:	ef a9       	ldd	r30, Y+55	; 0x37
    5236:	f8 ad       	ldd	r31, Y+56	; 0x38
    5238:	e2 0f       	add	r30, r18
    523a:	f3 1f       	adc	r31, r19
    523c:	d9 01       	movw	r26, r18
    523e:	a3 57       	subi	r26, 0x73	; 115
    5240:	bc 4e       	sbci	r27, 0xEC	; 236
    5242:	41 81       	ldd	r20, Z+1	; 0x01
    5244:	2c 91       	ld	r18, X
    5246:	42 17       	cp	r20, r18
    5248:	11 f0       	breq	.+4      	; 0x524e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x402>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    524a:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    524c:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    524e:	9f 5f       	subi	r25, 0xFF	; 255
								//_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5250:	8f 5f       	subi	r24, 0xFF	; 255
    5252:	86 30       	cpi	r24, 0x06	; 6
    5254:	68 f3       	brcs	.-38     	; 0x5230 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3e4>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    5256:	96 30       	cpi	r25, 0x06	; 6
    5258:	c9 f4       	brne	.+50     	; 0x528c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x440>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    525a:	21 e0       	ldi	r18, 0x01	; 1
    525c:	f8 01       	movw	r30, r16
    525e:	23 87       	std	Z+11, r18	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    5260:	20 91 95 13 	lds	r18, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
    5264:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5266:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    526a:	90 e0       	ldi	r25, 0x00	; 0
    526c:	98 2f       	mov	r25, r24
    526e:	88 27       	eor	r24, r24
    5270:	30 91 97 13 	lds	r19, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
    5274:	83 2b       	or	r24, r19
    5276:	91 87       	std	Z+9, r25	; 0x09
    5278:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    527a:	22 23       	and	r18, r18
    527c:	e9 f0       	breq	.+58     	; 0x52b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x46c>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    527e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5282:	81 30       	cpi	r24, 0x01	; 1
    5284:	d9 f4       	brne	.+54     	; 0x52bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x470>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier on)");
    5286:	61 e5       	ldi	r22, 0x51	; 81
    5288:	77 e0       	ldi	r23, 0x07	; 7
    528a:	06 c0       	rjmp	.+12     	; 0x5298 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x44c>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    528c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5290:	81 30       	cpi	r24, 0x01	; 1
    5292:	a1 f4       	brne	.+40     	; 0x52bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x470>
									{
										_kSERAIL_MON_WRITE("valve id not match(before start)");
    5294:	60 e3       	ldi	r22, 0x30	; 48
    5296:	77 e0       	ldi	r23, 0x07	; 7
    5298:	82 e5       	ldi	r24, 0x52	; 82
    529a:	94 e1       	ldi	r25, 0x14	; 20
    529c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    52a0:	82 e5       	ldi	r24, 0x52	; 82
    52a2:	94 e1       	ldi	r25, 0x14	; 20
    52a4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    52a8:	09 c0       	rjmp	.+18     	; 0x52bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x470>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    52aa:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    52ae:	81 30       	cpi	r24, 0x01	; 1
    52b0:	29 f4       	brne	.+10     	; 0x52bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x470>
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
    52b2:	69 e0       	ldi	r22, 0x09	; 9
    52b4:	77 e0       	ldi	r23, 0x07	; 7
    52b6:	f0 cf       	rjmp	.-32     	; 0x5298 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x44c>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    52b8:	e3 e0       	ldi	r30, 0x03	; 3
    52ba:	8e 2e       	mov	r8, r30
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    52bc:	68 ee       	ldi	r22, 0xE8	; 232
    52be:	73 e0       	ldi	r23, 0x03	; 3
    52c0:	80 e0       	ldi	r24, 0x00	; 0
    52c2:	90 e0       	ldi	r25, 0x00	; 0
    52c4:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    52c8:	33 e0       	ldi	r19, 0x03	; 3
    52ca:	83 12       	cpse	r8, r19
    52cc:	48 cf       	rjmp	.-368    	; 0x515e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x312>
    52ce:	1d cf       	rjmp	.-454    	; 0x510a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2be>
			}
			
		}
	}
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    52d0:	43 e0       	ldi	r20, 0x03	; 3
    52d2:	74 16       	cp	r7, r20
    52d4:	11 f4       	brne	.+4      	; 0x52da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x48e>
    52d6:	0c 94 83 31 	jmp	0x6306	; 0x6306 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14ba>
    52da:	55 e0       	ldi	r21, 0x05	; 5
    52dc:	75 12       	cpse	r7, r21
    52de:	43 c0       	rjmp	.+134    	; 0x5366 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x51a>
    52e0:	7e e0       	ldi	r23, 0x0E	; 14
    52e2:	f7 2e       	mov	r15, r23
    52e4:	00 e0       	ldi	r16, 0x00	; 0
    52e6:	10 e0       	ldi	r17, 0x00	; 0
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    52e8:	f5 01       	movw	r30, r10
    52ea:	e0 0f       	add	r30, r16
    52ec:	f1 1f       	adc	r31, r17
    52ee:	e1 81       	ldd	r30, Z+1	; 0x01
    52f0:	e6 31       	cpi	r30, 0x16	; 22
    52f2:	68 f0       	brcs	.+26     	; 0x530e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4c2>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    52f4:	f0 e0       	ldi	r31, 0x00	; 0
    52f6:	ef 53       	subi	r30, 0x3F	; 63
    52f8:	fc 4e       	sbci	r31, 0xEC	; 236
    52fa:	61 e0       	ldi	r22, 0x01	; 1
    52fc:	80 81       	ld	r24, Z
    52fe:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
						_kDELAY_MS(200);
    5302:	68 ec       	ldi	r22, 0xC8	; 200
    5304:	70 e0       	ldi	r23, 0x00	; 0
    5306:	80 e0       	ldi	r24, 0x00	; 0
    5308:	90 e0       	ldi	r25, 0x00	; 0
    530a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    530e:	0f 5f       	subi	r16, 0xFF	; 255
    5310:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5312:	05 30       	cpi	r16, 0x05	; 5
    5314:	11 05       	cpc	r17, r1
    5316:	41 f7       	brne	.-48     	; 0x52e8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x49c>
    5318:	fa 94       	dec	r15
    531a:	86 e0       	ldi	r24, 0x06	; 6
    531c:	a8 0e       	add	r10, r24
    531e:	b1 1c       	adc	r11, r1
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
    5320:	f1 10       	cpse	r15, r1
    5322:	e0 cf       	rjmp	.-64     	; 0x52e4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x498>
						_kDELAY_MS(200);
					}
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
    5324:	80 91 d3 0d 	lds	r24, 0x0DD3	; 0x800dd3 <_sExtra_Plot+0x52>
    5328:	88 36       	cpi	r24, 0x68	; 104
    532a:	09 f0       	breq	.+2      	; 0x532e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4e2>
    532c:	ec c7       	rjmp	.+4056   	; 0x6306 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14ba>
    532e:	07 ed       	ldi	r16, 0xD7	; 215
    5330:	1d e0       	ldi	r17, 0x0D	; 13
    5332:	6c ed       	ldi	r22, 0xDC	; 220
    5334:	e6 2e       	mov	r14, r22
    5336:	6d e0       	ldi	r22, 0x0D	; 13
    5338:	f6 2e       	mov	r15, r22
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    533a:	d8 01       	movw	r26, r16
    533c:	ed 91       	ld	r30, X+
    533e:	8d 01       	movw	r16, r26
    5340:	e6 31       	cpi	r30, 0x16	; 22
    5342:	68 f0       	brcs	.+26     	; 0x535e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x512>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5344:	f0 e0       	ldi	r31, 0x00	; 0
    5346:	ef 53       	subi	r30, 0x3F	; 63
    5348:	fc 4e       	sbci	r31, 0xEC	; 236
    534a:	61 e0       	ldi	r22, 0x01	; 1
    534c:	80 81       	ld	r24, Z
    534e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
						_kDELAY_MS(200);
    5352:	68 ec       	ldi	r22, 0xC8	; 200
    5354:	70 e0       	ldi	r23, 0x00	; 0
    5356:	80 e0       	ldi	r24, 0x00	; 0
    5358:	90 e0       	ldi	r25, 0x00	; 0
    535a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    535e:	e0 16       	cp	r14, r16
    5360:	f1 06       	cpc	r15, r17
    5362:	59 f7       	brne	.-42     	; 0x533a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ee>
    5364:	d0 c7       	rjmp	.+4000   	; 0x6306 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14ba>
	
	
	
	
	
	if(on_off == _kON)
    5366:	b1 e0       	ldi	r27, 0x01	; 1
    5368:	7b 12       	cpse	r7, r27
    536a:	1f c1       	rjmp	.+574    	; 0x55aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75e>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    536c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5370:	81 30       	cpi	r24, 0x01	; 1
    5372:	51 f4       	brne	.+20     	; 0x5388 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x53c>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    5374:	6e ed       	ldi	r22, 0xDE	; 222
    5376:	76 e0       	ldi	r23, 0x06	; 6
    5378:	82 e5       	ldi	r24, 0x52	; 82
    537a:	94 e1       	ldi	r25, 0x14	; 20
    537c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    5380:	82 e5       	ldi	r24, 0x52	; 82
    5382:	94 e1       	ldi	r25, 0x14	; 20
    5384:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5388:	07 eb       	ldi	r16, 0xB7	; 183
    538a:	1b e0       	ldi	r17, 0x0B	; 11
    538c:	44 e0       	ldi	r20, 0x04	; 4
    538e:	c4 2e       	mov	r12, r20
    5390:	d1 2c       	mov	r13, r1
    5392:	e1 2c       	mov	r14, r1
    5394:	f1 2c       	mov	r15, r1
						{
							data_send_counter++;
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5396:	54 e1       	ldi	r21, 0x14	; 20
    5398:	85 2e       	mov	r8, r21
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    539a:	f8 01       	movw	r30, r16
    539c:	82 85       	ldd	r24, Z+10	; 0x0a
    539e:	88 23       	and	r24, r24
    53a0:	21 f1       	breq	.+72     	; 0x53ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x59e>
    53a2:	91 2c       	mov	r9, r1
    53a4:	40 e0       	ldi	r20, 0x00	; 0
    53a6:	39 c0       	rjmp	.+114    	; 0x541a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5ce>
    53a8:	ae 01       	movw	r20, r28
    53aa:	45 5d       	subi	r20, 0xD5	; 213
    53ac:	5f 4f       	sbci	r21, 0xFF	; 255
    53ae:	5c ab       	std	Y+52, r21	; 0x34
    53b0:	4b ab       	std	Y+51, r20	; 0x33
			{
				for(k=0;valve_number_list[k]!=0;k++)
    53b2:	bb 24       	eor	r11, r11
    53b4:	b3 94       	inc	r11
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
								_kSERIAL_MON_PRINT_NUM(i+1);
    53b6:	c7 01       	movw	r24, r14
    53b8:	01 96       	adiw	r24, 0x01	; 1
    53ba:	9e ab       	std	Y+54, r25	; 0x36
    53bc:	8d ab       	std	Y+53, r24	; 0x35
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    53be:	ad e0       	ldi	r26, 0x0D	; 13
    53c0:	ae 9d       	mul	r26, r14
    53c2:	c0 01       	movw	r24, r0
    53c4:	af 9d       	mul	r26, r15
    53c6:	90 0d       	add	r25, r0
    53c8:	11 24       	eor	r1, r1
    53ca:	fc 01       	movw	r30, r24
    53cc:	e9 54       	subi	r30, 0x49	; 73
    53ce:	f4 4f       	sbci	r31, 0xF4	; 244
    53d0:	f8 af       	std	Y+56, r31	; 0x38
    53d2:	ef ab       	std	Y+55, r30	; 0x37
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    53d4:	ab a9       	ldd	r26, Y+51	; 0x33
    53d6:	bc a9       	ldd	r27, Y+52	; 0x34
    53d8:	8d 91       	ld	r24, X+
    53da:	bc ab       	std	Y+52, r27	; 0x34
    53dc:	ab ab       	std	Y+51, r26	; 0x33
    53de:	89 21       	and	r24, r9
    53e0:	49 f5       	brne	.+82     	; 0x5434 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5e8>
    53e2:	b3 94       	inc	r11
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    53e4:	b4 e0       	ldi	r27, 0x04	; 4
    53e6:	bb 12       	cpse	r11, r27
    53e8:	f5 cf       	rjmp	.-22     	; 0x53d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x588>
    53ea:	ff ef       	ldi	r31, 0xFF	; 255
    53ec:	ef 1a       	sub	r14, r31
    53ee:	ff 0a       	sbc	r15, r31
    53f0:	03 5f       	subi	r16, 0xF3	; 243
    53f2:	1f 4f       	sbci	r17, 0xFF	; 255
    53f4:	23 e0       	ldi	r18, 0x03	; 3
    53f6:	c2 0e       	add	r12, r18
    53f8:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
    53fa:	37 e0       	ldi	r19, 0x07	; 7
    53fc:	e3 16       	cp	r14, r19
    53fe:	f1 04       	cpc	r15, r1
    5400:	61 f6       	brne	.-104    	; 0x539a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x54e>
    5402:	d7 c0       	rjmp	.+430    	; 0x55b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x766>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5404:	28 17       	cp	r18, r24
    5406:	39 07       	cpc	r19, r25
    5408:	11 f4       	brne	.+4      	; 0x540e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5c2>
						{
							total_valve_number |= hex_array[j];
    540a:	50 81       	ld	r21, Z
    540c:	95 2a       	or	r9, r21
    540e:	01 96       	adiw	r24, 0x01	; 1
    5410:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    5412:	c8 16       	cp	r12, r24
    5414:	d9 06       	cpc	r13, r25
    5416:	b1 f7       	brne	.-20     	; 0x5404 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5b8>
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    5418:	4f 5f       	subi	r20, 0xFF	; 255
    541a:	f1 01       	movw	r30, r2
    541c:	e4 0f       	add	r30, r20
    541e:	f1 1d       	adc	r31, r1
    5420:	20 81       	ld	r18, Z
    5422:	22 23       	and	r18, r18
    5424:	09 f4       	brne	.+2      	; 0x5428 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5dc>
    5426:	c0 cf       	rjmp	.-128    	; 0x53a8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x55c>
    5428:	c6 01       	movw	r24, r12
    542a:	03 97       	sbiw	r24, 0x03	; 3
    542c:	fe 01       	movw	r30, r28
    542e:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5430:	30 e0       	ldi	r19, 0x00	; 0
    5432:	e8 cf       	rjmp	.-48     	; 0x5404 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5b8>
    5434:	a1 2c       	mov	r10, r1
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5436:	55 24       	eor	r5, r5
    5438:	53 94       	inc	r5
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    543a:	a3 94       	inc	r10
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    543c:	e9 e7       	ldi	r30, 0x79	; 121
    543e:	f3 e1       	ldi	r31, 0x13	; 19
    5440:	28 2d       	mov	r18, r8
    5442:	11 92       	st	Z+, r1
    5444:	2a 95       	dec	r18
    5446:	e9 f7       	brne	.-6      	; 0x5442 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5f6>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    5448:	d8 01       	movw	r26, r16
    544a:	11 96       	adiw	r26, 0x01	; 1
    544c:	8c 91       	ld	r24, X
    544e:	11 97       	sbiw	r26, 0x01	; 1
    5450:	80 93 79 13 	sts	0x1379, r24	; 0x801379 <_sRuble_Parameters+0x32>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    5454:	12 96       	adiw	r26, 0x02	; 2
    5456:	8c 91       	ld	r24, X
    5458:	12 97       	sbiw	r26, 0x02	; 2
    545a:	80 93 7a 13 	sts	0x137A, r24	; 0x80137a <_sRuble_Parameters+0x33>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    545e:	13 96       	adiw	r26, 0x03	; 3
    5460:	8c 91       	ld	r24, X
    5462:	13 97       	sbiw	r26, 0x03	; 3
    5464:	80 93 7b 13 	sts	0x137B, r24	; 0x80137b <_sRuble_Parameters+0x34>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    5468:	14 96       	adiw	r26, 0x04	; 4
    546a:	8c 91       	ld	r24, X
    546c:	14 97       	sbiw	r26, 0x04	; 4
    546e:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x35>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    5472:	15 96       	adiw	r26, 0x05	; 5
    5474:	8c 91       	ld	r24, X
    5476:	15 97       	sbiw	r26, 0x05	; 5
    5478:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x36>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    547c:	16 96       	adiw	r26, 0x06	; 6
    547e:	8c 91       	ld	r24, X
    5480:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x37>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5484:	b2 e0       	ldi	r27, 0x02	; 2
    5486:	b0 93 7f 13 	sts	0x137F, r27	; 0x80137f <_sRuble_Parameters+0x38>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    548a:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    548e:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x3a>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    5492:	b0 92 84 13 	sts	0x1384, r11	; 0x801384 <_sRuble_Parameters+0x3d>
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5496:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    549a:	81 30       	cpi	r24, 0x01	; 1
    549c:	39 f5       	brne	.+78     	; 0x54ec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6a0>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
    549e:	6a eb       	ldi	r22, 0xBA	; 186
    54a0:	76 e0       	ldi	r23, 0x06	; 6
    54a2:	82 e5       	ldi	r24, 0x52	; 82
    54a4:	94 e1       	ldi	r25, 0x14	; 20
    54a6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    54aa:	4a e0       	ldi	r20, 0x0A	; 10
    54ac:	50 e0       	ldi	r21, 0x00	; 0
    54ae:	6d a9       	ldd	r22, Y+53	; 0x35
    54b0:	7e a9       	ldd	r23, Y+54	; 0x36
    54b2:	82 e5       	ldi	r24, 0x52	; 82
    54b4:	94 e1       	ldi	r25, 0x14	; 20
    54b6:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    54ba:	82 e5       	ldi	r24, 0x52	; 82
    54bc:	94 e1       	ldi	r25, 0x14	; 20
    54be:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    54c2:	65 ea       	ldi	r22, 0xA5	; 165
    54c4:	76 e0       	ldi	r23, 0x06	; 6
    54c6:	82 e5       	ldi	r24, 0x52	; 82
    54c8:	94 e1       	ldi	r25, 0x14	; 20
    54ca:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,6);
    54ce:	46 e0       	ldi	r20, 0x06	; 6
    54d0:	50 e0       	ldi	r21, 0x00	; 0
    54d2:	69 e7       	ldi	r22, 0x79	; 121
    54d4:	73 e1       	ldi	r23, 0x13	; 19
    54d6:	82 e5       	ldi	r24, 0x52	; 82
    54d8:	94 e1       	ldi	r25, 0x14	; 20
    54da:	46 d9       	rcall	.-3444   	; 0x4768 <_ZN5Print5writeEPKcj>
								Serial.println();
    54dc:	82 e5       	ldi	r24, 0x52	; 82
    54de:	94 e1       	ldi	r25, 0x14	; 20
    54e0:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    54e4:	82 e5       	ldi	r24, 0x52	; 82
    54e6:	94 e1       	ldi	r25, 0x14	; 20
    54e8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    54ec:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    54f0:	8c e0       	ldi	r24, 0x0C	; 12
    54f2:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
// 								{
// 									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 								}
// 							}
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    54f6:	88 eb       	ldi	r24, 0xB8	; 184
    54f8:	9b e0       	ldi	r25, 0x0B	; 11
    54fa:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
    54fe:	88 23       	and	r24, r24
    5500:	09 f4       	brne	.+2      	; 0x5504 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6b8>
    5502:	40 c0       	rjmp	.+128    	; 0x5584 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x738>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    5504:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
// 									}
// 								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    5508:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    550a:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    550c:	28 2f       	mov	r18, r24
    550e:	30 e0       	ldi	r19, 0x00	; 0
    5510:	ef a9       	ldd	r30, Y+55	; 0x37
    5512:	f8 ad       	ldd	r31, Y+56	; 0x38
    5514:	e2 0f       	add	r30, r18
    5516:	f3 1f       	adc	r31, r19
    5518:	d9 01       	movw	r26, r18
    551a:	a3 57       	subi	r26, 0x73	; 115
    551c:	bc 4e       	sbci	r27, 0xEC	; 236
    551e:	41 81       	ldd	r20, Z+1	; 0x01
    5520:	2c 91       	ld	r18, X
    5522:	42 17       	cp	r20, r18
    5524:	11 f0       	breq	.+4      	; 0x552a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6de>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    5526:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    5528:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    552a:	9f 5f       	subi	r25, 0xFF	; 255
// 								}
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    552c:	8f 5f       	subi	r24, 0xFF	; 255
    552e:	86 30       	cpi	r24, 0x06	; 6
    5530:	68 f3       	brcs	.-38     	; 0x550c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6c0>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    5532:	96 30       	cpi	r25, 0x06	; 6
    5534:	c1 f4       	brne	.+48     	; 0x5566 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x71a>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5536:	f8 01       	movw	r30, r16
    5538:	53 86       	std	Z+11, r5	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    553a:	20 91 95 13 	lds	r18, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
    553e:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5540:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    5544:	90 e0       	ldi	r25, 0x00	; 0
    5546:	98 2f       	mov	r25, r24
    5548:	88 27       	eor	r24, r24
    554a:	30 91 97 13 	lds	r19, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
    554e:	83 2b       	or	r24, r19
    5550:	91 87       	std	Z+9, r25	; 0x09
    5552:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    5554:	22 23       	and	r18, r18
    5556:	e9 f0       	breq	.+58     	; 0x5592 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x746>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5558:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    555c:	81 30       	cpi	r24, 0x01	; 1
    555e:	d9 f4       	brne	.+54     	; 0x5596 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74a>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier onn)");
    5560:	6f e7       	ldi	r22, 0x7F	; 127
    5562:	76 e0       	ldi	r23, 0x06	; 6
    5564:	06 c0       	rjmp	.+12     	; 0x5572 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x726>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5566:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    556a:	81 30       	cpi	r24, 0x01	; 1
    556c:	a1 f4       	brne	.+40     	; 0x5596 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74a>
									{
										_kSERAIL_MON_WRITE("valve id not match(before startt)");
    556e:	6d e5       	ldi	r22, 0x5D	; 93
    5570:	76 e0       	ldi	r23, 0x06	; 6
    5572:	82 e5       	ldi	r24, 0x52	; 82
    5574:	94 e1       	ldi	r25, 0x14	; 20
    5576:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    557a:	82 e5       	ldi	r24, 0x52	; 82
    557c:	94 e1       	ldi	r25, 0x14	; 20
    557e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5582:	09 c0       	rjmp	.+18     	; 0x5596 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74a>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    5584:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5588:	81 30       	cpi	r24, 0x01	; 1
    558a:	29 f4       	brne	.+10     	; 0x5596 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74a>
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
    558c:	6f e2       	ldi	r22, 0x2F	; 47
    558e:	76 e0       	ldi	r23, 0x06	; 6
    5590:	f0 cf       	rjmp	.-32     	; 0x5572 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x726>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    5592:	93 e0       	ldi	r25, 0x03	; 3
    5594:	a9 2e       	mov	r10, r25
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    5596:	68 ee       	ldi	r22, 0xE8	; 232
    5598:	73 e0       	ldi	r23, 0x03	; 3
    559a:	80 e0       	ldi	r24, 0x00	; 0
    559c:	90 e0       	ldi	r25, 0x00	; 0
    559e:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    55a2:	f3 e0       	ldi	r31, 0x03	; 3
    55a4:	af 12       	cpse	r10, r31
    55a6:	49 cf       	rjmp	.-366    	; 0x543a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5ee>
    55a8:	1c cf       	rjmp	.-456    	; 0x53e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x596>
	}
	
	
	/************************************************* if everything ok then turn on or off the valves *********************************************/
	
	switch(on_off)
    55aa:	21 e0       	ldi	r18, 0x01	; 1
    55ac:	27 15       	cp	r18, r7
    55ae:	08 f4       	brcc	.+2      	; 0x55b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x766>
    55b0:	a9 c6       	rjmp	.+3410   	; 0x6304 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14b8>
    55b2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
		case _kON:
		case _kOFF:
		{
			/* check weather the plot is already irrigating or not  to stop the irrigation */
			
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
    55b6:	3e e0       	ldi	r19, 0x0E	; 14
    55b8:	36 15       	cp	r19, r6
    55ba:	08 f4       	brcc	.+2      	; 0x55be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x772>
    55bc:	7d c3       	rjmp	.+1786   	; 0x5cb8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe6c>
    55be:	46 e0       	ldi	r20, 0x06	; 6
    55c0:	64 9e       	mul	r6, r20
    55c2:	80 01       	movw	r16, r0
    55c4:	11 24       	eor	r1, r1
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    55c6:	81 30       	cpi	r24, 0x01	; 1
    55c8:	d9 f5       	brne	.+118    	; 0x5640 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7f4>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    55ca:	61 e2       	ldi	r22, 0x21	; 33
    55cc:	76 e0       	ldi	r23, 0x06	; 6
    55ce:	82 e5       	ldi	r24, 0x52	; 82
    55d0:	94 e1       	ldi	r25, 0x14	; 20
    55d2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    55d6:	82 e5       	ldi	r24, 0x52	; 82
    55d8:	94 e1       	ldi	r25, 0x14	; 20
    55da:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    55de:	e1 2c       	mov	r14, r1
    55e0:	f1 2c       	mov	r15, r1
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
    55e2:	c6 2c       	mov	r12, r6
    55e4:	d1 2c       	mov	r13, r1
    55e6:	51 e0       	ldi	r21, 0x01	; 1
    55e8:	c5 1a       	sub	r12, r21
    55ea:	d1 08       	sbc	r13, r1
    55ec:	f7 01       	movw	r30, r14
    55ee:	e0 0f       	add	r30, r16
    55f0:	f1 1f       	adc	r31, r17
    55f2:	e8 50       	subi	r30, 0x08	; 8
    55f4:	f3 4f       	sbci	r31, 0xF3	; 243
    55f6:	4a e0       	ldi	r20, 0x0A	; 10
    55f8:	50 e0       	ldi	r21, 0x00	; 0
    55fa:	60 81       	ld	r22, Z
    55fc:	82 e5       	ldi	r24, 0x52	; 82
    55fe:	94 e1       	ldi	r25, 0x14	; 20
    5600:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
						_kSERAIL_MON_WRITE_NO_LN(" ");
    5604:	6f e1       	ldi	r22, 0x1F	; 31
    5606:	76 e0       	ldi	r23, 0x06	; 6
    5608:	82 e5       	ldi	r24, 0x52	; 82
    560a:	94 e1       	ldi	r25, 0x14	; 20
    560c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    5610:	8f ef       	ldi	r24, 0xFF	; 255
    5612:	e8 1a       	sub	r14, r24
    5614:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5616:	95 e0       	ldi	r25, 0x05	; 5
    5618:	e9 16       	cp	r14, r25
    561a:	f1 04       	cpc	r15, r1
    561c:	39 f7       	brne	.-50     	; 0x55ec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7a0>
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
						_kSERAIL_MON_WRITE_NO_LN(" ");
					}
				
					_kSERAIL_MON_WRITE_NO_LN("Target_Plot_Num plot no : ");
    561e:	64 e0       	ldi	r22, 0x04	; 4
    5620:	76 e0       	ldi	r23, 0x06	; 6
    5622:	82 e5       	ldi	r24, 0x52	; 82
    5624:	94 e1       	ldi	r25, 0x14	; 20
    5626:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    562a:	4a e0       	ldi	r20, 0x0A	; 10
    562c:	50 e0       	ldi	r21, 0x00	; 0
    562e:	b6 01       	movw	r22, r12
    5630:	82 e5       	ldi	r24, 0x52	; 82
    5632:	94 e1       	ldi	r25, 0x14	; 20
    5634:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5638:	82 e5       	ldi	r24, 0x52	; 82
    563a:	94 e1       	ldi	r25, 0x14	; 20
    563c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5640:	08 50       	subi	r16, 0x08	; 8
    5642:	13 4f       	sbci	r17, 0xF3	; 243
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
    5644:	85 e0       	ldi	r24, 0x05	; 5
    5646:	38 2e       	mov	r3, r24
    5648:	80 e0       	ldi	r24, 0x00	; 0
					if(same_valve == _kRESET)
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    564a:	e6 2c       	mov	r14, r6
    564c:	f1 2c       	mov	r15, r1
    564e:	a1 e0       	ldi	r26, 0x01	; 1
    5650:	ea 1a       	sub	r14, r26
    5652:	f1 08       	sbc	r15, r1
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5654:	22 24       	eor	r2, r2
    5656:	23 94       	inc	r2
    5658:	97 2d       	mov	r25, r7
    565a:	92 25       	eor	r25, r2
    565c:	91 70       	andi	r25, 0x01	; 1
    565e:	9d ab       	std	Y+53, r25	; 0x35
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(on_off == _kOFF)
    5660:	71 10       	cpse	r7, r1
    5662:	1f c0       	rjmp	.+62     	; 0x56a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x856>
					{
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
    5664:	20 91 a2 13 	lds	r18, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    5668:	62 16       	cp	r6, r18
    566a:	c9 f0       	breq	.+50     	; 0x569e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x852>
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
    566c:	22 23       	and	r18, r18
    566e:	c9 f0       	breq	.+50     	; 0x56a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x856>
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    5670:	f8 01       	movw	r30, r16
    5672:	90 81       	ld	r25, Z
    5674:	f6 e0       	ldi	r31, 0x06	; 6
    5676:	2f 9f       	mul	r18, r31
    5678:	90 01       	movw	r18, r0
    567a:	11 24       	eor	r1, r1
    567c:	40 e0       	ldi	r20, 0x00	; 0
    567e:	50 e0       	ldi	r21, 0x00	; 0
    5680:	80 e0       	ldi	r24, 0x00	; 0
    5682:	fa 01       	movw	r30, r20
    5684:	e2 0f       	add	r30, r18
    5686:	f3 1f       	adc	r31, r19
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
    5688:	e8 50       	subi	r30, 0x08	; 8
    568a:	f3 4f       	sbci	r31, 0xF3	; 243
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    568c:	60 81       	ld	r22, Z
    568e:	96 13       	cpse	r25, r22
    5690:	01 c0       	rjmp	.+2      	; 0x5694 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x848>
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
									{
										same_valve = _kSET;
    5692:	81 e0       	ldi	r24, 0x01	; 1
    5694:	4f 5f       	subi	r20, 0xFF	; 255
    5696:	5f 4f       	sbci	r21, 0xFF	; 255
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
    5698:	45 30       	cpi	r20, 0x05	; 5
    569a:	51 05       	cpc	r21, r1
    569c:	91 f7       	brne	.-28     	; 0x5682 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x836>
					else
					{
						same_valve = _kRESET;
					}
					
					if(same_valve == _kRESET)
    569e:	81 11       	cpse	r24, r1
    56a0:	fb c2       	rjmp	.+1526   	; 0x5c98 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4c>
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    56a2:	d8 01       	movw	r26, r16
    56a4:	dc 90       	ld	r13, X
    56a6:	8f ef       	ldi	r24, 0xFF	; 255
    56a8:	8d 0d       	add	r24, r13
    56aa:	85 31       	cpi	r24, 0x15	; 21
    56ac:	08 f0       	brcs	.+2      	; 0x56b0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x864>
    56ae:	c8 c2       	rjmp	.+1424   	; 0x5c40 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdf4>
							unsigned char valve_number =0;
							unsigned char euro_valve_num=0,command_valve=0;
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    56b0:	b3 e0       	ldi	r27, 0x03	; 3
    56b2:	bd 15       	cp	r27, r13
    56b4:	a8 f4       	brcc	.+42     	; 0x56e0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x894>
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    56b6:	8d 2d       	mov	r24, r13
    56b8:	63 e0       	ldi	r22, 0x03	; 3
    56ba:	0e 94 ab e7 	call	0x1cf56	; 0x1cf56 <__udivmodqi4>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    56be:	6b ea       	ldi	r22, 0xAB	; 171
    56c0:	d6 9e       	mul	r13, r22
    56c2:	61 2d       	mov	r22, r1
    56c4:	11 24       	eor	r1, r1
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    56c6:	99 23       	and	r25, r25
    56c8:	31 f0       	breq	.+12     	; 0x56d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x88a>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    56ca:	66 95       	lsr	r22
    56cc:	cc 24       	eor	r12, r12
    56ce:	c3 94       	inc	r12
    56d0:	c6 0e       	add	r12, r22
    56d2:	d9 2e       	mov	r13, r25
    56d4:	07 c0       	rjmp	.+14     	; 0x56e4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x898>
									command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								}
								else
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    56d6:	c6 2e       	mov	r12, r22
    56d8:	c6 94       	lsr	r12
									command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    56da:	b3 e0       	ldi	r27, 0x03	; 3
    56dc:	db 2e       	mov	r13, r27
    56de:	02 c0       	rjmp	.+4      	; 0x56e4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x898>
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
							{
								euro_valve_num = 1;
    56e0:	cc 24       	eor	r12, r12
    56e2:	c3 94       	inc	r12
								}
							
							}
						
							/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    56e4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    56e8:	81 30       	cpi	r24, 0x01	; 1
    56ea:	89 f4       	brne	.+34     	; 0x570e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8c2>
							{
								_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    56ec:	60 ef       	ldi	r22, 0xF0	; 240
    56ee:	75 e0       	ldi	r23, 0x05	; 5
    56f0:	82 e5       	ldi	r24, 0x52	; 82
    56f2:	94 e1       	ldi	r25, 0x14	; 20
    56f4:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    56f8:	4a e0       	ldi	r20, 0x0A	; 10
    56fa:	50 e0       	ldi	r21, 0x00	; 0
    56fc:	6c 2d       	mov	r22, r12
    56fe:	82 e5       	ldi	r24, 0x52	; 82
    5700:	94 e1       	ldi	r25, 0x14	; 20
    5702:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    5706:	82 e5       	ldi	r24, 0x52	; 82
    5708:	94 e1       	ldi	r25, 0x14	; 20
    570a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
						
							if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    570e:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
    5712:	81 11       	cpse	r24, r1
							{
								_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5714:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
							}
						
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5718:	84 e1       	ldi	r24, 0x14	; 20
    571a:	e9 e7       	ldi	r30, 0x79	; 121
    571c:	f3 e1       	ldi	r31, 0x13	; 19
    571e:	11 92       	st	Z+, r1
    5720:	8a 95       	dec	r24
    5722:	e9 f7       	brne	.-6      	; 0x571e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8d2>
							count = _kRESET;
							/********************************** wireless valve command (on/off) **********************************/
							/* valve id, on/off command, pump run timer */
						
							/************************************* copy the euro valve ID *********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5724:	6c 2d       	mov	r22, r12
    5726:	70 e0       	ldi	r23, 0x00	; 0
    5728:	61 50       	subi	r22, 0x01	; 1
    572a:	71 09       	sbc	r23, r1
    572c:	f7 e0       	ldi	r31, 0x07	; 7
    572e:	f6 9f       	mul	r31, r22
    5730:	c0 01       	movw	r24, r0
    5732:	f7 9f       	mul	r31, r23
    5734:	90 0d       	add	r25, r0
    5736:	11 24       	eor	r1, r1
    5738:	89 5b       	subi	r24, 0xB9	; 185
    573a:	9c 4e       	sbci	r25, 0xEC	; 236
    573c:	fc 01       	movw	r30, r24
    573e:	e1 5a       	subi	r30, 0xA1	; 161
    5740:	ff 4f       	sbci	r31, 0xFF	; 255
    5742:	20 81       	ld	r18, Z
    5744:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5748:	31 96       	adiw	r30, 0x01	; 1
    574a:	20 81       	ld	r18, Z
    574c:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5750:	31 96       	adiw	r30, 0x01	; 1
    5752:	20 81       	ld	r18, Z
    5754:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5758:	31 96       	adiw	r30, 0x01	; 1
    575a:	20 81       	ld	r18, Z
    575c:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5760:	31 96       	adiw	r30, 0x01	; 1
    5762:	20 81       	ld	r18, Z
    5764:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    5768:	31 96       	adiw	r30, 0x01	; 1
    576a:	20 81       	ld	r18, Z
    576c:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
						
							/*********************************** packet_id ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5770:	22 e0       	ldi	r18, 0x02	; 2
    5772:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x38>
						
							/*********************************** copy on/off command ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    5776:	70 92 80 13 	sts	0x1380, r7	; 0x801380 <_sRuble_Parameters+0x39>
						
							/********************************** copy operation mode ************************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    577a:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    577e:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
						
							/******************************** copy pump timer (used if selected mode is timer) *********************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    5782:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
    5786:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    578a:	d0 92 84 13 	sts	0x1384, r13	; 0x801384 <_sRuble_Parameters+0x3d>
    578e:	40 e0       	ldi	r20, 0x00	; 0
    5790:	50 e0       	ldi	r21, 0x00	; 0
    5792:	b4 2e       	mov	r11, r20
    5794:	c1 2c       	mov	r12, r1
    5796:	d1 2c       	mov	r13, r1
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5798:	2d e0       	ldi	r18, 0x0D	; 13
    579a:	24 9f       	mul	r18, r20
    579c:	b0 01       	movw	r22, r0
    579e:	25 9f       	mul	r18, r21
    57a0:	70 0d       	add	r23, r0
    57a2:	11 24       	eor	r1, r1
    57a4:	69 54       	subi	r22, 0x49	; 73
    57a6:	74 4f       	sbci	r23, 0xF4	; 244
    57a8:	2d 2d       	mov	r18, r13
    57aa:	30 e0       	ldi	r19, 0x00	; 0
    57ac:	fb 01       	movw	r30, r22
    57ae:	e2 0f       	add	r30, r18
    57b0:	f3 1f       	adc	r31, r19
    57b2:	28 0f       	add	r18, r24
    57b4:	39 1f       	adc	r19, r25
    57b6:	d9 01       	movw	r26, r18
    57b8:	a1 5a       	subi	r26, 0xA1	; 161
    57ba:	bf 4f       	sbci	r27, 0xFF	; 255
    57bc:	31 81       	ldd	r19, Z+1	; 0x01
    57be:	2c 91       	ld	r18, X
    57c0:	32 17       	cp	r19, r18
    57c2:	19 f0       	breq	.+6      	; 0x57ca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x97e>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    57c4:	c1 2c       	mov	r12, r1
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    57c6:	a6 e0       	ldi	r26, 0x06	; 6
    57c8:	da 2e       	mov	r13, r26
										id_len = _kRESET;
									}
									id_len++;
    57ca:	c3 94       	inc	r12
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    57cc:	d3 94       	inc	r13
    57ce:	35 e0       	ldi	r19, 0x05	; 5
    57d0:	3d 15       	cp	r19, r13
    57d2:	50 f7       	brcc	.-44     	; 0x57a8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x95c>
										id_len = _kRESET;
									}
									id_len++;
								}
							
								if(id_len == _kVALVE_ID_LEN)
    57d4:	a6 e0       	ldi	r26, 0x06	; 6
    57d6:	ca 16       	cp	r12, r26
    57d8:	31 f0       	breq	.+12     	; 0x57e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x99a>
    57da:	4f 5f       	subi	r20, 0xFF	; 255
    57dc:	5f 4f       	sbci	r21, 0xFF	; 255
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
    57de:	47 30       	cpi	r20, 0x07	; 7
    57e0:	51 05       	cpc	r21, r1
    57e2:	b9 f6       	brne	.-82     	; 0x5792 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x946>
    57e4:	01 c0       	rjmp	.+2      	; 0x57e8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x99c>
    57e6:	4b 2c       	mov	r4, r11
								{
									current_valve_number = j;    /* data send will update of this valve because valve get match */
									break;
								}
							}
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    57e8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    57ec:	81 30       	cpi	r24, 0x01	; 1
    57ee:	89 f4       	brne	.+34     	; 0x5812 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9c6>
							{
								_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    57f0:	6a ed       	ldi	r22, 0xDA	; 218
    57f2:	75 e0       	ldi	r23, 0x05	; 5
    57f4:	82 e5       	ldi	r24, 0x52	; 82
    57f6:	94 e1       	ldi	r25, 0x14	; 20
    57f8:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    57fc:	4a e0       	ldi	r20, 0x0A	; 10
    57fe:	50 e0       	ldi	r21, 0x00	; 0
    5800:	64 2d       	mov	r22, r4
    5802:	82 e5       	ldi	r24, 0x52	; 82
    5804:	94 e1       	ldi	r25, 0x14	; 20
    5806:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
								_kSERIAL_MON_CLEAR();
    580a:	82 e5       	ldi	r24, 0x52	; 82
    580c:	94 e1       	ldi	r25, 0x14	; 20
    580e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5812:	bd e0       	ldi	r27, 0x0D	; 13
    5814:	4b 9e       	mul	r4, r27
    5816:	40 01       	movw	r8, r0
    5818:	11 24       	eor	r1, r1
    581a:	51 2c       	mov	r5, r1
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    581c:	ed e0       	ldi	r30, 0x0D	; 13
    581e:	e4 9d       	mul	r30, r4
    5820:	c0 01       	movw	r24, r0
    5822:	11 24       	eor	r1, r1
    5824:	9c 01       	movw	r18, r24
    5826:	29 54       	subi	r18, 0x49	; 73
    5828:	34 4f       	sbci	r19, 0xF4	; 244
    582a:	a9 01       	movw	r20, r18
    582c:	45 5f       	subi	r20, 0xF5	; 245
    582e:	5f 4f       	sbci	r21, 0xFF	; 255
    5830:	5c ab       	std	Y+52, r21	; 0x34
    5832:	4b ab       	std	Y+51, r20	; 0x33
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5834:	69 01       	movw	r12, r18
    5836:	58 e0       	ldi	r21, 0x08	; 8
    5838:	c5 0e       	add	r12, r21
    583a:	d1 1c       	adc	r13, r1
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
											Serial.println();
											_kSERIAL_MON_CLEAR();
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    583c:	dc 01       	movw	r26, r24
    583e:	a8 54       	subi	r26, 0x48	; 72
    5840:	b4 4f       	sbci	r27, 0xF4	; 244
    5842:	5d 01       	movw	r10, r26
// 									{
// 										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
// 										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 									}
// 								}
								data_send_counter++;
    5844:	53 94       	inc	r5
							
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    5846:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    584a:	81 30       	cpi	r24, 0x01	; 1
    584c:	51 f4       	brne	.+20     	; 0x5862 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa16>
								{
									_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    584e:	66 eb       	ldi	r22, 0xB6	; 182
    5850:	75 e0       	ldi	r23, 0x05	; 5
    5852:	82 e5       	ldi	r24, 0x52	; 82
    5854:	94 e1       	ldi	r25, 0x14	; 20
    5856:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    585a:	82 e5       	ldi	r24, 0x52	; 82
    585c:	94 e1       	ldi	r25, 0x14	; 20
    585e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								
								Display_Update_1();    // 20/1/2022
    5862:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
								_kLORA_SEND_DATA(count);
    5866:	8c e0       	ldi	r24, 0x0C	; 12
    5868:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
							
								if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    586c:	88 eb       	ldi	r24, 0xB8	; 184
    586e:	9b e0       	ldi	r25, 0x0B	; 11
    5870:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
    5874:	88 23       	and	r24, r24
    5876:	09 f4       	brne	.+2      	; 0x587a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa2e>
    5878:	7f c1       	rjmp	.+766    	; 0x5b78 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd2c>
								{
									/**************************** update the received data in buff lora rx_tx **********************/
									if(_kLORA_RECV_DATA())            /* check the received data */
    587a:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
    587e:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5882:	88 23       	and	r24, r24
    5884:	09 f4       	brne	.+2      	; 0x5888 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa3c>
    5886:	20 c1       	rjmp	.+576    	; 0x5ac8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc7c>
// 												Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 											}
// 										}
										//RF95_setModeRx_Continuous();
										/* check the id get matched to the valve or not */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5888:	91 30       	cpi	r25, 0x01	; 1
    588a:	59 f5       	brne	.+86     	; 0x58e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa96>
										{
											_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    588c:	60 ea       	ldi	r22, 0xA0	; 160
    588e:	75 e0       	ldi	r23, 0x05	; 5
    5890:	82 e5       	ldi	r24, 0x52	; 82
    5892:	94 e1       	ldi	r25, 0x14	; 20
    5894:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    5898:	4a e0       	ldi	r20, 0x0A	; 10
    589a:	50 e0       	ldi	r21, 0x00	; 0
    589c:	6d e8       	ldi	r22, 0x8D	; 141
    589e:	73 e1       	ldi	r23, 0x13	; 19
    58a0:	82 e5       	ldi	r24, 0x52	; 82
    58a2:	94 e1       	ldi	r25, 0x14	; 20
    58a4:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
											Serial.println();
    58a8:	82 e5       	ldi	r24, 0x52	; 82
    58aa:	94 e1       	ldi	r25, 0x14	; 20
    58ac:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    58b0:	82 e5       	ldi	r24, 0x52	; 82
    58b2:	94 e1       	ldi	r25, 0x14	; 20
    58b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    58b8:	62 e8       	ldi	r22, 0x82	; 130
    58ba:	75 e0       	ldi	r23, 0x05	; 5
    58bc:	82 e5       	ldi	r24, 0x52	; 82
    58be:	94 e1       	ldi	r25, 0x14	; 20
    58c0:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    58c4:	47 e0       	ldi	r20, 0x07	; 7
    58c6:	50 e0       	ldi	r21, 0x00	; 0
    58c8:	b5 01       	movw	r22, r10
    58ca:	82 e5       	ldi	r24, 0x52	; 82
    58cc:	94 e1       	ldi	r25, 0x14	; 20
    58ce:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
											Serial.println();
    58d2:	82 e5       	ldi	r24, 0x52	; 82
    58d4:	94 e1       	ldi	r25, 0x14	; 20
    58d6:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    58da:	82 e5       	ldi	r24, 0x52	; 82
    58dc:	94 e1       	ldi	r25, 0x14	; 20
    58de:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    58e2:	ad e8       	ldi	r26, 0x8D	; 141
    58e4:	b3 e1       	ldi	r27, 0x13	; 19
    58e6:	80 e0       	ldi	r24, 0x00	; 0
    58e8:	90 e0       	ldi	r25, 0x00	; 0
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
										{
											if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    58ea:	2d 91       	ld	r18, X+
    58ec:	f4 01       	movw	r30, r8
    58ee:	e8 0f       	add	r30, r24
    58f0:	f9 1f       	adc	r31, r25
    58f2:	e9 54       	subi	r30, 0x49	; 73
    58f4:	f4 4f       	sbci	r31, 0xF4	; 244
    58f6:	31 81       	ldd	r19, Z+1	; 0x01
    58f8:	32 17       	cp	r19, r18
    58fa:	09 f4       	brne	.+2      	; 0x58fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xab2>
    58fc:	7a c0       	rjmp	.+244    	; 0x59f2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba6>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    58fe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5902:	81 30       	cpi	r24, 0x01	; 1
    5904:	51 f4       	brne	.+20     	; 0x591a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xace>
												{
													_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    5906:	67 e5       	ldi	r22, 0x57	; 87
    5908:	75 e0       	ldi	r23, 0x05	; 5
    590a:	82 e5       	ldi	r24, 0x52	; 82
    590c:	94 e1       	ldi	r25, 0x14	; 20
    590e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    5912:	82 e5       	ldi	r24, 0x52	; 82
    5914:	94 e1       	ldi	r25, 0x14	; 20
    5916:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    591a:	b2 e0       	ldi	r27, 0x02	; 2
    591c:	5b 16       	cp	r5, r27
    591e:	a9 f0       	breq	.+42     	; 0x594a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xafe>
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5920:	eb a9       	ldd	r30, Y+51	; 0x33
    5922:	fc a9       	ldd	r31, Y+52	; 0x34
    5924:	20 82       	st	Z, r2
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5926:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    592a:	90 e0       	ldi	r25, 0x00	; 0
    592c:	98 2f       	mov	r25, r24
    592e:	88 27       	eor	r24, r24
    5930:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
    5934:	82 2b       	or	r24, r18
    5936:	d6 01       	movw	r26, r12
    5938:	8d 93       	st	X+, r24
    593a:	9c 93       	st	X, r25
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    593c:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
    5940:	78 12       	cpse	r7, r24
    5942:	5d c0       	rjmp	.+186    	; 0x59fe <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbb2>
												return 0;
											}
										}
										else
										{
											data_send_counter = 3;
    5944:	e3 e0       	ldi	r30, 0x03	; 3
    5946:	5e 2e       	mov	r5, r30
    5948:	71 c1       	rjmp	.+738    	; 0x5c2c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xde0>
													_kSERIAL_MON_CLEAR();
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
												{
													_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    594a:	86 e0       	ldi	r24, 0x06	; 6
    594c:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
													_gfault_Occure = _kFAULT_RESET_TIMER;
    5950:	84 e6       	ldi	r24, 0x64	; 100
    5952:	90 e0       	ldi	r25, 0x00	; 0
    5954:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    5958:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    595c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5960:	81 30       	cpi	r24, 0x01	; 1
    5962:	31 f4       	brne	.+12     	; 0x5970 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb24>
													{
														_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 0");
    5964:	6a e3       	ldi	r22, 0x3A	; 58
    5966:	75 e0       	ldi	r23, 0x05	; 5
    5968:	82 e5       	ldi	r24, 0x52	; 82
    596a:	94 e1       	ldi	r25, 0x14	; 20
    596c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5970:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5974:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5978:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    597c:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5980:	a0 62       	ori	r26, 0x20	; 32
    5982:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5986:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    598a:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    598e:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
													_sRuble_Parameters.Last_Valve = current_valve_number;
    5992:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5996:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    599a:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    599e:	82 60       	ori	r24, 0x02	; 2
    59a0:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    59a4:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    59a8:	86 e0       	ldi	r24, 0x06	; 6
    59aa:	8e 9d       	mul	r24, r14
    59ac:	80 01       	movw	r16, r0
    59ae:	8f 9d       	mul	r24, r15
    59b0:	10 0d       	add	r17, r0
    59b2:	11 24       	eor	r1, r1
    59b4:	e1 2c       	mov	r14, r1
    59b6:	f1 2c       	mov	r15, r1
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
													{
														if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    59b8:	f8 01       	movw	r30, r16
    59ba:	ee 0d       	add	r30, r14
    59bc:	ff 1d       	adc	r31, r15
    59be:	e3 50       	subi	r30, 0x03	; 3
    59c0:	f3 4f       	sbci	r31, 0xF3	; 243
    59c2:	e1 81       	ldd	r30, Z+1	; 0x01
    59c4:	e6 31       	cpi	r30, 0x16	; 22
    59c6:	68 f0       	brcs	.+26     	; 0x59e2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb96>
														{
															/********************************* turn on/off the wired valve *********************************/
															_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    59c8:	f0 e0       	ldi	r31, 0x00	; 0
    59ca:	ef 53       	subi	r30, 0x3F	; 63
    59cc:	fc 4e       	sbci	r31, 0xEC	; 236
    59ce:	61 e0       	ldi	r22, 0x01	; 1
    59d0:	80 81       	ld	r24, Z
    59d2:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
															_kDELAY_MS(200);
    59d6:	68 ec       	ldi	r22, 0xC8	; 200
    59d8:	70 e0       	ldi	r23, 0x00	; 0
    59da:	80 e0       	ldi	r24, 0x00	; 0
    59dc:	90 e0       	ldi	r25, 0x00	; 0
    59de:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    59e2:	bf ef       	ldi	r27, 0xFF	; 255
    59e4:	eb 1a       	sub	r14, r27
    59e6:	fb 0a       	sbc	r15, r27
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
													_sRuble_Parameters.Last_Valve = current_valve_number;
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    59e8:	e5 e0       	ldi	r30, 0x05	; 5
    59ea:	ee 16       	cp	r14, r30
    59ec:	f1 04       	cpc	r15, r1
    59ee:	21 f7       	brne	.-56     	; 0x59b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb6c>
    59f0:	39 c4       	rjmp	.+2162   	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1418>
    59f2:	01 96       	adiw	r24, 0x01	; 1
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
											Serial.println();
											_kSERIAL_MON_CLEAR();
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
    59f4:	86 30       	cpi	r24, 0x06	; 6
    59f6:	91 05       	cpc	r25, r1
    59f8:	09 f0       	breq	.+2      	; 0x59fc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbb0>
    59fa:	77 cf       	rjmp	.-274    	; 0x58ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa9e>
    59fc:	91 cf       	rjmp	.-222    	; 0x5920 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xad4>
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    59fe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5a02:	81 30       	cpi	r24, 0x01	; 1
    5a04:	51 f4       	brne	.+20     	; 0x5a1a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbce>
											{
												_kSERAIL_MON_WRITE("Euro Feedback fail");
    5a06:	67 e2       	ldi	r22, 0x27	; 39
    5a08:	75 e0       	ldi	r23, 0x05	; 5
    5a0a:	82 e5       	ldi	r24, 0x52	; 82
    5a0c:	94 e1       	ldi	r25, 0x14	; 20
    5a0e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    5a12:	82 e5       	ldi	r24, 0x52	; 82
    5a14:	94 e1       	ldi	r25, 0x14	; 20
    5a16:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5a1a:	f2 e0       	ldi	r31, 0x02	; 2
    5a1c:	5f 12       	cpse	r5, r31
    5a1e:	06 c1       	rjmp	.+524    	; 0x5c2c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xde0>
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5a20:	86 e0       	ldi	r24, 0x06	; 6
    5a22:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    5a26:	84 e6       	ldi	r24, 0x64	; 100
    5a28:	90 e0       	ldi	r25, 0x00	; 0
    5a2a:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    5a2e:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5a32:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5a36:	81 30       	cpi	r24, 0x01	; 1
    5a38:	31 f4       	brne	.+12     	; 0x5a46 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbfa>
												{
													_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 1");
    5a3a:	6a e0       	ldi	r22, 0x0A	; 10
    5a3c:	75 e0       	ldi	r23, 0x05	; 5
    5a3e:	82 e5       	ldi	r24, 0x52	; 82
    5a40:	94 e1       	ldi	r25, 0x14	; 20
    5a42:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5a46:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5a4a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5a4e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    5a52:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5a56:	a0 62       	ori	r26, 0x20	; 32
    5a58:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5a5c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5a60:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    5a64:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    5a68:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5a6c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    5a70:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    5a74:	82 60       	ori	r24, 0x02	; 2
    5a76:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    5a7a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    5a7e:	86 e0       	ldi	r24, 0x06	; 6
    5a80:	8e 9d       	mul	r24, r14
    5a82:	80 01       	movw	r16, r0
    5a84:	8f 9d       	mul	r24, r15
    5a86:	10 0d       	add	r17, r0
    5a88:	11 24       	eor	r1, r1
    5a8a:	e1 2c       	mov	r14, r1
    5a8c:	f1 2c       	mov	r15, r1
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5a8e:	f8 01       	movw	r30, r16
    5a90:	ee 0d       	add	r30, r14
    5a92:	ff 1d       	adc	r31, r15
    5a94:	e3 50       	subi	r30, 0x03	; 3
    5a96:	f3 4f       	sbci	r31, 0xF3	; 243
    5a98:	e1 81       	ldd	r30, Z+1	; 0x01
    5a9a:	e6 31       	cpi	r30, 0x16	; 22
    5a9c:	68 f0       	brcs	.+26     	; 0x5ab8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc6c>
													{
														/********************************* turn on/off the wired valve *********************************/
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5a9e:	f0 e0       	ldi	r31, 0x00	; 0
    5aa0:	ef 53       	subi	r30, 0x3F	; 63
    5aa2:	fc 4e       	sbci	r31, 0xEC	; 236
    5aa4:	61 e0       	ldi	r22, 0x01	; 1
    5aa6:	80 81       	ld	r24, Z
    5aa8:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
														_kDELAY_MS(200);
    5aac:	68 ec       	ldi	r22, 0xC8	; 200
    5aae:	70 e0       	ldi	r23, 0x00	; 0
    5ab0:	80 e0       	ldi	r24, 0x00	; 0
    5ab2:	90 e0       	ldi	r25, 0x00	; 0
    5ab4:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    5ab8:	2f ef       	ldi	r18, 0xFF	; 255
    5aba:	e2 1a       	sub	r14, r18
    5abc:	f2 0a       	sbc	r15, r18
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5abe:	35 e0       	ldi	r19, 0x05	; 5
    5ac0:	e3 16       	cp	r14, r19
    5ac2:	f1 04       	cpc	r15, r1
    5ac4:	21 f7       	brne	.-56     	; 0x5a8e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc42>
    5ac6:	ce c3       	rjmp	.+1948   	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1418>
											data_send_counter = 3;
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ac8:	91 30       	cpi	r25, 0x01	; 1
    5aca:	51 f4       	brne	.+20     	; 0x5ae0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc94>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    5acc:	6f ec       	ldi	r22, 0xCF	; 207
    5ace:	74 e0       	ldi	r23, 0x04	; 4
    5ad0:	82 e5       	ldi	r24, 0x52	; 82
    5ad2:	94 e1       	ldi	r25, 0x14	; 20
    5ad4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    5ad8:	82 e5       	ldi	r24, 0x52	; 82
    5ada:	94 e1       	ldi	r25, 0x14	; 20
    5adc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    5ae0:	42 e0       	ldi	r20, 0x02	; 2
    5ae2:	54 12       	cpse	r5, r20
    5ae4:	a3 c0       	rjmp	.+326    	; 0x5c2c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xde0>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5ae6:	26 e0       	ldi	r18, 0x06	; 6
    5ae8:	20 93 45 13 	sts	0x1345, r18	; 0x801345 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    5aec:	84 e6       	ldi	r24, 0x64	; 100
    5aee:	90 e0       	ldi	r25, 0x00	; 0
    5af0:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    5af4:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5af8:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5afc:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5b00:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    5b04:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5b08:	a0 62       	ori	r26, 0x20	; 32
    5b0a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5b0e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5b12:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    5b16:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    5b1a:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5b1e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    5b22:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    5b26:	82 60       	ori	r24, 0x02	; 2
    5b28:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    5b2c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    5b30:	2e 9d       	mul	r18, r14
    5b32:	80 01       	movw	r16, r0
    5b34:	2f 9d       	mul	r18, r15
    5b36:	10 0d       	add	r17, r0
    5b38:	11 24       	eor	r1, r1
    5b3a:	e1 2c       	mov	r14, r1
    5b3c:	f1 2c       	mov	r15, r1
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5b3e:	f8 01       	movw	r30, r16
    5b40:	ee 0d       	add	r30, r14
    5b42:	ff 1d       	adc	r31, r15
    5b44:	e3 50       	subi	r30, 0x03	; 3
    5b46:	f3 4f       	sbci	r31, 0xF3	; 243
    5b48:	e1 81       	ldd	r30, Z+1	; 0x01
    5b4a:	e6 31       	cpi	r30, 0x16	; 22
    5b4c:	68 f0       	brcs	.+26     	; 0x5b68 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd1c>
												{
													/********************************* turn on/off the wired valve *********************************/
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5b4e:	f0 e0       	ldi	r31, 0x00	; 0
    5b50:	ef 53       	subi	r30, 0x3F	; 63
    5b52:	fc 4e       	sbci	r31, 0xEC	; 236
    5b54:	61 e0       	ldi	r22, 0x01	; 1
    5b56:	80 81       	ld	r24, Z
    5b58:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
													_kDELAY_MS(200);
    5b5c:	68 ec       	ldi	r22, 0xC8	; 200
    5b5e:	70 e0       	ldi	r23, 0x00	; 0
    5b60:	80 e0       	ldi	r24, 0x00	; 0
    5b62:	90 e0       	ldi	r25, 0x00	; 0
    5b64:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    5b68:	5f ef       	ldi	r21, 0xFF	; 255
    5b6a:	e5 1a       	sub	r14, r21
    5b6c:	f5 0a       	sbc	r15, r21
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
											_gfault_Occure = _kFAULT_RESET_TIMER;
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5b6e:	85 e0       	ldi	r24, 0x05	; 5
    5b70:	e8 16       	cp	r14, r24
    5b72:	f1 04       	cpc	r15, r1
    5b74:	21 f7       	brne	.-56     	; 0x5b3e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcf2>
    5b76:	76 c3       	rjmp	.+1772   	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1418>
										}
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5b78:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5b7c:	81 30       	cpi	r24, 0x01	; 1
    5b7e:	51 f4       	brne	.+20     	; 0x5b94 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd48>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    5b80:	64 e9       	ldi	r22, 0x94	; 148
    5b82:	74 e0       	ldi	r23, 0x04	; 4
    5b84:	82 e5       	ldi	r24, 0x52	; 82
    5b86:	94 e1       	ldi	r25, 0x14	; 20
    5b88:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5b8c:	82 e5       	ldi	r24, 0x52	; 82
    5b8e:	94 e1       	ldi	r25, 0x14	; 20
    5b90:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									}
									//RF95_setModeRx_Continuous();
								
									if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5b94:	92 e0       	ldi	r25, 0x02	; 2
    5b96:	59 12       	cpse	r5, r25
    5b98:	49 c0       	rjmp	.+146    	; 0x5c2c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xde0>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5b9a:	26 e0       	ldi	r18, 0x06	; 6
    5b9c:	20 93 45 13 	sts	0x1345, r18	; 0x801345 <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    5ba0:	84 e6       	ldi	r24, 0x64	; 100
    5ba2:	90 e0       	ldi	r25, 0x00	; 0
    5ba4:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    5ba8:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5bac:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    5bb0:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    5bb4:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    5bb8:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    5bbc:	a0 62       	ori	r26, 0x20	; 32
    5bbe:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    5bc2:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    5bc6:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    5bca:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    5bce:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5bd2:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    5bd6:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    5bda:	82 60       	ori	r24, 0x02	; 2
    5bdc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    5be0:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    5be4:	2e 9d       	mul	r18, r14
    5be6:	80 01       	movw	r16, r0
    5be8:	2f 9d       	mul	r18, r15
    5bea:	10 0d       	add	r17, r0
    5bec:	11 24       	eor	r1, r1
    5bee:	e1 2c       	mov	r14, r1
    5bf0:	f1 2c       	mov	r15, r1
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5bf2:	f8 01       	movw	r30, r16
    5bf4:	ee 0d       	add	r30, r14
    5bf6:	ff 1d       	adc	r31, r15
    5bf8:	e3 50       	subi	r30, 0x03	; 3
    5bfa:	f3 4f       	sbci	r31, 0xF3	; 243
    5bfc:	e1 81       	ldd	r30, Z+1	; 0x01
    5bfe:	e6 31       	cpi	r30, 0x16	; 22
    5c00:	68 f0       	brcs	.+26     	; 0x5c1c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdd0>
											{
												/********************************* turn on/off the wired valve *********************************/
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5c02:	f0 e0       	ldi	r31, 0x00	; 0
    5c04:	ef 53       	subi	r30, 0x3F	; 63
    5c06:	fc 4e       	sbci	r31, 0xEC	; 236
    5c08:	61 e0       	ldi	r22, 0x01	; 1
    5c0a:	80 81       	ld	r24, Z
    5c0c:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
												_kDELAY_MS(200);
    5c10:	68 ec       	ldi	r22, 0xC8	; 200
    5c12:	70 e0       	ldi	r23, 0x00	; 0
    5c14:	80 e0       	ldi	r24, 0x00	; 0
    5c16:	90 e0       	ldi	r25, 0x00	; 0
    5c18:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    5c1c:	af ef       	ldi	r26, 0xFF	; 255
    5c1e:	ea 1a       	sub	r14, r26
    5c20:	fa 0a       	sbc	r15, r26
										_gfault_Occure = _kFAULT_RESET_TIMER;
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5c22:	b5 e0       	ldi	r27, 0x05	; 5
    5c24:	eb 16       	cp	r14, r27
    5c26:	f1 04       	cpc	r15, r1
    5c28:	21 f7       	brne	.-56     	; 0x5bf2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xda6>
    5c2a:	1c c3       	rjmp	.+1592   	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1418>
											}
										}
										return 0;          /* no data available */
									}
								}
								_kDELAY_MS(1000);
    5c2c:	68 ee       	ldi	r22, 0xE8	; 232
    5c2e:	73 e0       	ldi	r23, 0x03	; 3
    5c30:	80 e0       	ldi	r24, 0x00	; 0
    5c32:	90 e0       	ldi	r25, 0x00	; 0
    5c34:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
								_kSERIAL_MON_CLEAR();
							}
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    5c38:	e3 e0       	ldi	r30, 0x03	; 3
    5c3a:	5e 12       	cpse	r5, r30
    5c3c:	03 ce       	rjmp	.-1018   	; 0x5844 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9f8>
    5c3e:	2e c0       	rjmp	.+92     	; 0x5c9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe50>
						
						}
					
						/******************************************************** handle wired valve *******************************************************************/
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
    5c40:	8a ee       	ldi	r24, 0xEA	; 234
    5c42:	8d 0d       	add	r24, r13
    5c44:	8e 34       	cpi	r24, 0x4E	; 78
    5c46:	78 f4       	brcc	.+30     	; 0x5c66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe1a>
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5c48:	ed 2d       	mov	r30, r13
    5c4a:	f0 e0       	ldi	r31, 0x00	; 0
    5c4c:	ef 53       	subi	r30, 0x3F	; 63
    5c4e:	fc 4e       	sbci	r31, 0xEC	; 236
    5c50:	6d a9       	ldd	r22, Y+53	; 0x35
    5c52:	80 81       	ld	r24, Z
    5c54:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
							_kDELAY_MS(200);
    5c58:	68 ec       	ldi	r22, 0xC8	; 200
    5c5a:	70 e0       	ldi	r23, 0x00	; 0
    5c5c:	80 e0       	ldi	r24, 0x00	; 0
    5c5e:	90 e0       	ldi	r25, 0x00	; 0
    5c60:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    5c64:	1b c0       	rjmp	.+54     	; 0x5c9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe50>
							
							}
						}
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
						{
							if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    5c66:	f5 e6       	ldi	r31, 0x65	; 101
    5c68:	df 12       	cpse	r13, r31
    5c6a:	18 c0       	rjmp	.+48     	; 0x5c9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe50>
    5c6c:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
							{
								if(on_off == _kON)
    5c70:	21 e0       	ldi	r18, 0x01	; 1
    5c72:	72 12       	cpse	r7, r18
    5c74:	05 c0       	rjmp	.+10     	; 0x5c80 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe34>
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5c76:	88 23       	and	r24, r24
    5c78:	89 f0       	breq	.+34     	; 0x5c9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe50>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    5c7a:	70 92 06 14 	sts	0x1406, r7	; 0x801406 <_sRuble_Parameters+0xbf>
    5c7e:	05 c0       	rjmp	.+10     	; 0x5c8a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe3e>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
									}
								}
								else
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5c80:	88 23       	and	r24, r24
    5c82:	61 f0       	breq	.+24     	; 0x5c9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe50>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5c84:	82 e0       	ldi	r24, 0x02	; 2
    5c86:	80 93 06 14 	sts	0x1406, r24	; 0x801406 <_sRuble_Parameters+0xbf>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    5c8a:	66 e0       	ldi	r22, 0x06	; 6
    5c8c:	74 e1       	ldi	r23, 0x14	; 20
    5c8e:	88 ea       	ldi	r24, 0xA8	; 168
    5c90:	9c e0       	ldi	r25, 0x0C	; 12
    5c92:	0e 94 d4 23 	call	0x47a8	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    5c96:	02 c0       	rjmp	.+4      	; 0x5c9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe50>
    5c98:	81 e0       	ldi	r24, 0x01	; 1
    5c9a:	01 c0       	rjmp	.+2      	; 0x5c9e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe52>
    5c9c:	80 e0       	ldi	r24, 0x00	; 0
    5c9e:	3a 94       	dec	r3
    5ca0:	0f 5f       	subi	r16, 0xFF	; 255
    5ca2:	1f 4f       	sbci	r17, 0xFF	; 255
					_kSERIAL_MON_CLEAR();
				}
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    5ca4:	31 10       	cpse	r3, r1
    5ca6:	dc cc       	rjmp	.-1608   	; 0x5660 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x814>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ca8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5cac:	81 30       	cpi	r24, 0x01	; 1
    5cae:	09 f0       	breq	.+2      	; 0x5cb2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe66>
    5cb0:	2a c3       	rjmp	.+1620   	; 0x6306 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14ba>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    5cb2:	65 e7       	ldi	r22, 0x75	; 117
    5cb4:	74 e0       	ldi	r23, 0x04	; 4
    5cb6:	1d c3       	rjmp	.+1594   	; 0x62f2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14a6>
				}
				return 1;
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5cb8:	81 30       	cpi	r24, 0x01	; 1
    5cba:	51 f4       	brne	.+20     	; 0x5cd0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe84>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5cbc:	67 e6       	ldi	r22, 0x67	; 103
    5cbe:	74 e0       	ldi	r23, 0x04	; 4
    5cc0:	82 e5       	ldi	r24, 0x52	; 82
    5cc2:	94 e1       	ldi	r25, 0x14	; 20
    5cc4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5cc8:	82 e5       	ldi	r24, 0x52	; 82
    5cca:	94 e1       	ldi	r25, 0x14	; 20
    5ccc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5cd0:	3b e1       	ldi	r19, 0x1B	; 27
    5cd2:	63 9e       	mul	r6, r19
    5cd4:	50 01       	movw	r10, r0
    5cd6:	11 24       	eor	r1, r1
    5cd8:	e1 2c       	mov	r14, r1
    5cda:	f1 2c       	mov	r15, r1
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
				{
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
    5cdc:	06 2d       	mov	r16, r6
    5cde:	10 e0       	ldi	r17, 0x00	; 0
    5ce0:	68 01       	movw	r12, r16
    5ce2:	45 e6       	ldi	r20, 0x65	; 101
    5ce4:	c4 1a       	sub	r12, r20
    5ce6:	d1 08       	sbc	r13, r1
    5ce8:	f5 01       	movw	r30, r10
    5cea:	ee 0d       	add	r30, r14
    5cec:	ff 1d       	adc	r31, r15
    5cee:	e1 52       	subi	r30, 0x21	; 33
    5cf0:	fd 4f       	sbci	r31, 0xFD	; 253
    5cf2:	4a e0       	ldi	r20, 0x0A	; 10
    5cf4:	50 e0       	ldi	r21, 0x00	; 0
    5cf6:	60 81       	ld	r22, Z
    5cf8:	82 e5       	ldi	r24, 0x52	; 82
    5cfa:	94 e1       	ldi	r25, 0x14	; 20
    5cfc:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
					_kSERAIL_MON_WRITE_NO_LN(" ");
    5d00:	65 e6       	ldi	r22, 0x65	; 101
    5d02:	74 e0       	ldi	r23, 0x04	; 4
    5d04:	82 e5       	ldi	r24, 0x52	; 82
    5d06:	94 e1       	ldi	r25, 0x14	; 20
    5d08:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5d0c:	82 e5       	ldi	r24, 0x52	; 82
    5d0e:	94 e1       	ldi	r25, 0x14	; 20
    5d10:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5d14:	5f ef       	ldi	r21, 0xFF	; 255
    5d16:	e5 1a       	sub	r14, r21
    5d18:	f5 0a       	sbc	r15, r21
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5d1a:	85 e0       	ldi	r24, 0x05	; 5
    5d1c:	e8 16       	cp	r14, r24
    5d1e:	f1 04       	cpc	r15, r1
    5d20:	19 f7       	brne	.-58     	; 0x5ce8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe9c>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
					_kSERAIL_MON_WRITE_NO_LN(" ");
					_kSERIAL_MON_CLEAR();
				}
				
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5d22:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5d26:	81 30       	cpi	r24, 0x01	; 1
    5d28:	99 f4       	brne	.+38     	; 0x5d50 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf04>
				{
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
    5d2a:	6f e4       	ldi	r22, 0x4F	; 79
    5d2c:	74 e0       	ldi	r23, 0x04	; 4
    5d2e:	82 e5       	ldi	r24, 0x52	; 82
    5d30:	94 e1       	ldi	r25, 0x14	; 20
    5d32:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5d36:	b8 01       	movw	r22, r16
    5d38:	61 50       	subi	r22, 0x01	; 1
    5d3a:	71 09       	sbc	r23, r1
    5d3c:	4a e0       	ldi	r20, 0x0A	; 10
    5d3e:	50 e0       	ldi	r21, 0x00	; 0
    5d40:	82 e5       	ldi	r24, 0x52	; 82
    5d42:	94 e1       	ldi	r25, 0x14	; 20
    5d44:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5d48:	82 e5       	ldi	r24, 0x52	; 82
    5d4a:	94 e1       	ldi	r25, 0x14	; 20
    5d4c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5d50:	2b e1       	ldi	r18, 0x1B	; 27
    5d52:	2c 9d       	mul	r18, r12
    5d54:	c0 01       	movw	r24, r0
    5d56:	2d 9d       	mul	r18, r13
    5d58:	90 0d       	add	r25, r0
    5d5a:	11 24       	eor	r1, r1
    5d5c:	dc 01       	movw	r26, r24
    5d5e:	af 57       	subi	r26, 0x7F	; 127
    5d60:	b2 4f       	sbci	r27, 0xF2	; 242
    5d62:	5d 01       	movw	r10, r26
    5d64:	26 e0       	ldi	r18, 0x06	; 6
    5d66:	62 9e       	mul	r6, r18
    5d68:	f0 01       	movw	r30, r0
    5d6a:	11 24       	eor	r1, r1
    5d6c:	fc ab       	std	Y+52, r31	; 0x34
    5d6e:	eb ab       	std	Y+51, r30	; 0x33
    5d70:	00 e0       	ldi	r16, 0x00	; 0
    5d72:	10 e0       	ldi	r17, 0x00	; 0
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5d74:	52 e0       	ldi	r21, 0x02	; 2
    5d76:	f5 2e       	mov	r15, r21
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    5d78:	ee 24       	eor	r14, r14
    5d7a:	e3 94       	inc	r14
    5d7c:	87 2d       	mov	r24, r7
    5d7e:	8e 25       	eor	r24, r14
    5d80:	81 70       	andi	r24, 0x01	; 1
    5d82:	58 2e       	mov	r5, r24
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5d84:	64 e1       	ldi	r22, 0x14	; 20
    5d86:	66 2e       	mov	r6, r22
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5d88:	7d e0       	ldi	r23, 0x0D	; 13
    5d8a:	d7 2e       	mov	r13, r23
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > 0)
    5d8c:	f5 01       	movw	r30, r10
    5d8e:	e0 0f       	add	r30, r16
    5d90:	f1 1f       	adc	r31, r17
    5d92:	95 80       	ldd	r9, Z+5	; 0x05
    5d94:	8f ef       	ldi	r24, 0xFF	; 255
    5d96:	89 0d       	add	r24, r9
    5d98:	85 31       	cpi	r24, 0x15	; 21
    5d9a:	08 f0       	brcs	.+2      	; 0x5d9e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf52>
    5d9c:	6f c2       	rjmp	.+1246   	; 0x627c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1430>
						unsigned char valve_number =0;
						unsigned char euro_valve_num=0,command_valve=0;
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5d9e:	33 e0       	ldi	r19, 0x03	; 3
    5da0:	39 15       	cp	r19, r9
    5da2:	90 f4       	brcc	.+36     	; 0x5dc8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf7c>
							euro_valve_num = 1;
							command_valve = valve_number;
						}
						else
						{
							if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5da4:	8b ea       	ldi	r24, 0xAB	; 171
    5da6:	98 9e       	mul	r9, r24
    5da8:	c1 2c       	mov	r12, r1
    5daa:	11 24       	eor	r1, r1
    5dac:	8c 2d       	mov	r24, r12
    5dae:	86 95       	lsr	r24
    5db0:	98 2f       	mov	r25, r24
    5db2:	99 0f       	add	r25, r25
    5db4:	89 0f       	add	r24, r25
    5db6:	98 1a       	sub	r9, r24
    5db8:	c6 94       	lsr	r12
    5dba:	99 20       	and	r9, r9
    5dbc:	11 f0       	breq	.+4      	; 0x5dc2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf76>
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5dbe:	c3 94       	inc	r12
    5dc0:	05 c0       	rjmp	.+10     	; 0x5dcc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf80>
								command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							else
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    5dc2:	43 e0       	ldi	r20, 0x03	; 3
    5dc4:	94 2e       	mov	r9, r20
    5dc6:	02 c0       	rjmp	.+4      	; 0x5dcc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf80>
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
						{
							euro_valve_num = 1;
    5dc8:	cc 24       	eor	r12, r12
    5dca:	c3 94       	inc	r12
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							
						}
						/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5dcc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5dd0:	81 30       	cpi	r24, 0x01	; 1
    5dd2:	89 f4       	brne	.+34     	; 0x5df6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfaa>
						{
							_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5dd4:	6b e3       	ldi	r22, 0x3B	; 59
    5dd6:	74 e0       	ldi	r23, 0x04	; 4
    5dd8:	82 e5       	ldi	r24, 0x52	; 82
    5dda:	94 e1       	ldi	r25, 0x14	; 20
    5ddc:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    5de0:	4a e0       	ldi	r20, 0x0A	; 10
    5de2:	50 e0       	ldi	r21, 0x00	; 0
    5de4:	6c 2d       	mov	r22, r12
    5de6:	82 e5       	ldi	r24, 0x52	; 82
    5de8:	94 e1       	ldi	r25, 0x14	; 20
    5dea:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
							_kSERIAL_MON_CLEAR();
    5dee:	82 e5       	ldi	r24, 0x52	; 82
    5df0:	94 e1       	ldi	r25, 0x14	; 20
    5df2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						
						
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5df6:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
    5dfa:	81 11       	cpse	r24, r1
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5dfc:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5e00:	a9 e7       	ldi	r26, 0x79	; 121
    5e02:	b3 e1       	ldi	r27, 0x13	; 19
    5e04:	e6 2d       	mov	r30, r6
    5e06:	1d 92       	st	X+, r1
    5e08:	ea 95       	dec	r30
    5e0a:	e9 f7       	brne	.-6      	; 0x5e06 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfba>
						count = _kRESET;
						/********************************** wireless valve command (on/off) **********************************/
						/* valve id, on/off command, pump run timer */
						
						/************************************* copy the euro valve ID *********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5e0c:	2c 2d       	mov	r18, r12
    5e0e:	30 e0       	ldi	r19, 0x00	; 0
    5e10:	21 50       	subi	r18, 0x01	; 1
    5e12:	31 09       	sbc	r19, r1
    5e14:	f7 e0       	ldi	r31, 0x07	; 7
    5e16:	f2 9f       	mul	r31, r18
    5e18:	c0 01       	movw	r24, r0
    5e1a:	f3 9f       	mul	r31, r19
    5e1c:	90 0d       	add	r25, r0
    5e1e:	11 24       	eor	r1, r1
    5e20:	89 5b       	subi	r24, 0xB9	; 185
    5e22:	9c 4e       	sbci	r25, 0xEC	; 236
    5e24:	fc 01       	movw	r30, r24
    5e26:	e1 5a       	subi	r30, 0xA1	; 161
    5e28:	ff 4f       	sbci	r31, 0xFF	; 255
    5e2a:	20 81       	ld	r18, Z
    5e2c:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5e30:	31 96       	adiw	r30, 0x01	; 1
    5e32:	20 81       	ld	r18, Z
    5e34:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5e38:	31 96       	adiw	r30, 0x01	; 1
    5e3a:	20 81       	ld	r18, Z
    5e3c:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5e40:	31 96       	adiw	r30, 0x01	; 1
    5e42:	20 81       	ld	r18, Z
    5e44:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5e48:	31 96       	adiw	r30, 0x01	; 1
    5e4a:	20 81       	ld	r18, Z
    5e4c:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    5e50:	31 96       	adiw	r30, 0x01	; 1
    5e52:	20 81       	ld	r18, Z
    5e54:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
						
						/*********************************** packet_id ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5e58:	f0 92 7f 13 	sts	0x137F, r15	; 0x80137f <_sRuble_Parameters+0x38>
						
						/*********************************** copy on/off command ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    5e5c:	70 92 80 13 	sts	0x1380, r7	; 0x801380 <_sRuble_Parameters+0x39>
						
						/********************************** copy operation mode ************************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5e60:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    5e64:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
						
						/******************************** copy pump timer (used if selected mode is timer) *********************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    5e68:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
    5e6c:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    5e70:	90 92 84 13 	sts	0x1384, r9	; 0x801384 <_sRuble_Parameters+0x3d>
    5e74:	40 e0       	ldi	r20, 0x00	; 0
    5e76:	50 e0       	ldi	r21, 0x00	; 0
    5e78:	84 2e       	mov	r8, r20
    5e7a:	91 2c       	mov	r9, r1
    5e7c:	c1 2c       	mov	r12, r1
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5e7e:	d4 9e       	mul	r13, r20
    5e80:	b0 01       	movw	r22, r0
    5e82:	d5 9e       	mul	r13, r21
    5e84:	70 0d       	add	r23, r0
    5e86:	11 24       	eor	r1, r1
    5e88:	69 54       	subi	r22, 0x49	; 73
    5e8a:	74 4f       	sbci	r23, 0xF4	; 244
    5e8c:	2c 2d       	mov	r18, r12
    5e8e:	30 e0       	ldi	r19, 0x00	; 0
    5e90:	fb 01       	movw	r30, r22
    5e92:	e2 0f       	add	r30, r18
    5e94:	f3 1f       	adc	r31, r19
    5e96:	28 0f       	add	r18, r24
    5e98:	39 1f       	adc	r19, r25
    5e9a:	d9 01       	movw	r26, r18
    5e9c:	a1 5a       	subi	r26, 0xA1	; 161
    5e9e:	bf 4f       	sbci	r27, 0xFF	; 255
    5ea0:	21 81       	ldd	r18, Z+1	; 0x01
    5ea2:	3c 91       	ld	r19, X
    5ea4:	23 17       	cp	r18, r19
    5ea6:	19 f0       	breq	.+6      	; 0x5eae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1062>
								{
									compare_id = _kVALVE_ID_LEN;
									id_len = _kRESET;
    5ea8:	91 2c       	mov	r9, r1
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
								{
									compare_id = _kVALVE_ID_LEN;
    5eaa:	36 e0       	ldi	r19, 0x06	; 6
    5eac:	c3 2e       	mov	r12, r19
									id_len = _kRESET;
								}
								id_len++;
    5eae:	93 94       	inc	r9
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5eb0:	c3 94       	inc	r12
    5eb2:	25 e0       	ldi	r18, 0x05	; 5
    5eb4:	2c 15       	cp	r18, r12
    5eb6:	50 f7       	brcc	.-44     	; 0x5e8c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1040>
									id_len = _kRESET;
								}
								id_len++;
							}
							
							if(id_len == _kVALVE_ID_LEN)
    5eb8:	36 e0       	ldi	r19, 0x06	; 6
    5eba:	93 16       	cp	r9, r19
    5ebc:	31 f0       	breq	.+12     	; 0x5eca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x107e>
    5ebe:	4f 5f       	subi	r20, 0xFF	; 255
    5ec0:	5f 4f       	sbci	r21, 0xFF	; 255
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
    5ec2:	47 30       	cpi	r20, 0x07	; 7
    5ec4:	51 05       	cpc	r21, r1
    5ec6:	c1 f6       	brne	.-80     	; 0x5e78 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x102c>
    5ec8:	01 c0       	rjmp	.+2      	; 0x5ecc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1080>
    5eca:	48 2c       	mov	r4, r8
							{
								current_valve_number = j;    /* data send will update of this valve because valve get match */
								break;
							}
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ecc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5ed0:	81 30       	cpi	r24, 0x01	; 1
    5ed2:	89 f4       	brne	.+34     	; 0x5ef6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10aa>
						{
							_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    5ed4:	65 e2       	ldi	r22, 0x25	; 37
    5ed6:	74 e0       	ldi	r23, 0x04	; 4
    5ed8:	82 e5       	ldi	r24, 0x52	; 82
    5eda:	94 e1       	ldi	r25, 0x14	; 20
    5edc:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    5ee0:	4a e0       	ldi	r20, 0x0A	; 10
    5ee2:	50 e0       	ldi	r21, 0x00	; 0
    5ee4:	64 2d       	mov	r22, r4
    5ee6:	82 e5       	ldi	r24, 0x52	; 82
    5ee8:	94 e1       	ldi	r25, 0x14	; 20
    5eea:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
							_kSERIAL_MON_CLEAR();
    5eee:	82 e5       	ldi	r24, 0x52	; 82
    5ef0:	94 e1       	ldi	r25, 0x14	; 20
    5ef2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5ef6:	4d e0       	ldi	r20, 0x0D	; 13
    5ef8:	44 9e       	mul	r4, r20
    5efa:	10 01       	movw	r2, r0
    5efc:	11 24       	eor	r1, r1
    5efe:	c1 2c       	mov	r12, r1
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5f00:	d4 9c       	mul	r13, r4
    5f02:	c0 01       	movw	r24, r0
    5f04:	11 24       	eor	r1, r1
    5f06:	9c 01       	movw	r18, r24
    5f08:	29 54       	subi	r18, 0x49	; 73
    5f0a:	34 4f       	sbci	r19, 0xF4	; 244
    5f0c:	d9 01       	movw	r26, r18
    5f0e:	1b 96       	adiw	r26, 0x0b	; 11
    5f10:	be ab       	std	Y+54, r27	; 0x36
    5f12:	ad ab       	std	Y+53, r26	; 0x35
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5f14:	f9 01       	movw	r30, r18
    5f16:	38 96       	adiw	r30, 0x08	; 8
    5f18:	f8 af       	std	Y+56, r31	; 0x38
    5f1a:	ef ab       	std	Y+55, r30	; 0x37
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5f1c:	9c 01       	movw	r18, r24
    5f1e:	28 54       	subi	r18, 0x48	; 72
    5f20:	34 4f       	sbci	r19, 0xF4	; 244
    5f22:	49 01       	movw	r8, r18
// 								{
// 									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
// 									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 								}
// 							}
							data_send_counter++;
    5f24:	c3 94       	inc	r12
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f26:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5f2a:	81 30       	cpi	r24, 0x01	; 1
    5f2c:	51 f4       	brne	.+20     	; 0x5f42 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10f6>
							{
								_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    5f2e:	61 e0       	ldi	r22, 0x01	; 1
    5f30:	74 e0       	ldi	r23, 0x04	; 4
    5f32:	82 e5       	ldi	r24, 0x52	; 82
    5f34:	94 e1       	ldi	r25, 0x14	; 20
    5f36:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    5f3a:	82 e5       	ldi	r24, 0x52	; 82
    5f3c:	94 e1       	ldi	r25, 0x14	; 20
    5f3e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    5f42:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    5f46:	8c e0       	ldi	r24, 0x0C	; 12
    5f48:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5f4c:	88 eb       	ldi	r24, 0xB8	; 184
    5f4e:	9b e0       	ldi	r25, 0x0B	; 11
    5f50:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
    5f54:	88 23       	and	r24, r24
    5f56:	09 f4       	brne	.+2      	; 0x5f5a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x110e>
    5f58:	4f c1       	rjmp	.+670    	; 0x61f8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13ac>
							{
								/**************************** update the received data in buff lora rx_tx **********************/
								if(_kLORA_RECV_DATA())            /* check the received data */
    5f5a:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
    5f5e:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5f62:	88 23       	and	r24, r24
    5f64:	09 f4       	brne	.+2      	; 0x5f68 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x111c>
    5f66:	f9 c0       	rjmp	.+498    	; 0x615a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x130e>
// 											Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 										}
// 									}
									//RF95_setModeRx_Continuous();
									/* check the id get matched to the valve or not */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f68:	91 30       	cpi	r25, 0x01	; 1
    5f6a:	59 f5       	brne	.+86     	; 0x5fc2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1176>
									{
										_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    5f6c:	6b ee       	ldi	r22, 0xEB	; 235
    5f6e:	73 e0       	ldi	r23, 0x03	; 3
    5f70:	82 e5       	ldi	r24, 0x52	; 82
    5f72:	94 e1       	ldi	r25, 0x14	; 20
    5f74:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    5f78:	4a e0       	ldi	r20, 0x0A	; 10
    5f7a:	50 e0       	ldi	r21, 0x00	; 0
    5f7c:	6d e8       	ldi	r22, 0x8D	; 141
    5f7e:	73 e1       	ldi	r23, 0x13	; 19
    5f80:	82 e5       	ldi	r24, 0x52	; 82
    5f82:	94 e1       	ldi	r25, 0x14	; 20
    5f84:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
										Serial.println();
    5f88:	82 e5       	ldi	r24, 0x52	; 82
    5f8a:	94 e1       	ldi	r25, 0x14	; 20
    5f8c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    5f90:	82 e5       	ldi	r24, 0x52	; 82
    5f92:	94 e1       	ldi	r25, 0x14	; 20
    5f94:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    5f98:	6d ec       	ldi	r22, 0xCD	; 205
    5f9a:	73 e0       	ldi	r23, 0x03	; 3
    5f9c:	82 e5       	ldi	r24, 0x52	; 82
    5f9e:	94 e1       	ldi	r25, 0x14	; 20
    5fa0:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5fa4:	47 e0       	ldi	r20, 0x07	; 7
    5fa6:	50 e0       	ldi	r21, 0x00	; 0
    5fa8:	b4 01       	movw	r22, r8
    5faa:	82 e5       	ldi	r24, 0x52	; 82
    5fac:	94 e1       	ldi	r25, 0x14	; 20
    5fae:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
										Serial.println();
    5fb2:	82 e5       	ldi	r24, 0x52	; 82
    5fb4:	94 e1       	ldi	r25, 0x14	; 20
    5fb6:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    5fba:	82 e5       	ldi	r24, 0x52	; 82
    5fbc:	94 e1       	ldi	r25, 0x14	; 20
    5fbe:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    5fc2:	ad e8       	ldi	r26, 0x8D	; 141
    5fc4:	b3 e1       	ldi	r27, 0x13	; 19
    5fc6:	80 e0       	ldi	r24, 0x00	; 0
    5fc8:	90 e0       	ldi	r25, 0x00	; 0
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
									{
										if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    5fca:	2d 91       	ld	r18, X+
    5fcc:	f1 01       	movw	r30, r2
    5fce:	e8 0f       	add	r30, r24
    5fd0:	f9 1f       	adc	r31, r25
    5fd2:	e9 54       	subi	r30, 0x49	; 73
    5fd4:	f4 4f       	sbci	r31, 0xF4	; 244
    5fd6:	31 81       	ldd	r19, Z+1	; 0x01
    5fd8:	32 17       	cp	r19, r18
    5fda:	09 f4       	brne	.+2      	; 0x5fde <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1192>
    5fdc:	67 c0       	rjmp	.+206    	; 0x60ac <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1260>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    5fde:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    5fe2:	81 30       	cpi	r24, 0x01	; 1
    5fe4:	51 f4       	brne	.+20     	; 0x5ffa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11ae>
											{
												_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    5fe6:	62 ea       	ldi	r22, 0xA2	; 162
    5fe8:	73 e0       	ldi	r23, 0x03	; 3
    5fea:	82 e5       	ldi	r24, 0x52	; 82
    5fec:	94 e1       	ldi	r25, 0x14	; 20
    5fee:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    5ff2:	82 e5       	ldi	r24, 0x52	; 82
    5ff4:	94 e1       	ldi	r25, 0x14	; 20
    5ff6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5ffa:	32 e0       	ldi	r19, 0x02	; 2
    5ffc:	c3 16       	cp	r12, r19
    5ffe:	b1 f0       	breq	.+44     	; 0x602c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11e0>
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    6000:	ad a9       	ldd	r26, Y+53	; 0x35
    6002:	be a9       	ldd	r27, Y+54	; 0x36
    6004:	ec 92       	st	X, r14
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    6006:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    600a:	90 e0       	ldi	r25, 0x00	; 0
    600c:	98 2f       	mov	r25, r24
    600e:	88 27       	eor	r24, r24
    6010:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
    6014:	82 2b       	or	r24, r18
    6016:	ef a9       	ldd	r30, Y+55	; 0x37
    6018:	f8 ad       	ldd	r31, Y+56	; 0x38
    601a:	91 83       	std	Z+1, r25	; 0x01
    601c:	80 83       	st	Z, r24
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    601e:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
    6022:	78 12       	cpse	r7, r24
    6024:	49 c0       	rjmp	.+146    	; 0x60b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x126c>
											return 0;
										}
									}
									else
									{
										data_send_counter = 3;
    6026:	83 e0       	ldi	r24, 0x03	; 3
    6028:	c8 2e       	mov	r12, r24
    602a:	1e c1       	rjmp	.+572    	; 0x6268 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x141c>
												_kSERIAL_MON_CLEAR();
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    602c:	86 e0       	ldi	r24, 0x06	; 6
    602e:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    6032:	84 e6       	ldi	r24, 0x64	; 100
    6034:	90 e0       	ldi	r25, 0x00	; 0
    6036:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    603a:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    603e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    6042:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    6046:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    604a:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    604e:	a0 62       	ori	r26, 0x20	; 32
    6050:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    6054:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    6058:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    605c:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    6060:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    6064:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    6068:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    606c:	82 60       	ori	r24, 0x02	; 2
    606e:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    6072:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    6076:	00 e0       	ldi	r16, 0x00	; 0
    6078:	10 e0       	ldi	r17, 0x00	; 0
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    607a:	f5 01       	movw	r30, r10
    607c:	e0 0f       	add	r30, r16
    607e:	f1 1f       	adc	r31, r17
    6080:	e5 81       	ldd	r30, Z+5	; 0x05
    6082:	e6 31       	cpi	r30, 0x16	; 22
    6084:	68 f0       	brcs	.+26     	; 0x60a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1254>
													{
														/********************************* turn on/off the wired valve *********************************/
														
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6086:	f0 e0       	ldi	r31, 0x00	; 0
    6088:	ef 53       	subi	r30, 0x3F	; 63
    608a:	fc 4e       	sbci	r31, 0xEC	; 236
    608c:	61 e0       	ldi	r22, 0x01	; 1
    608e:	80 81       	ld	r24, Z
    6090:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
														_kDELAY_MS(200);
    6094:	68 ec       	ldi	r22, 0xC8	; 200
    6096:	70 e0       	ldi	r23, 0x00	; 0
    6098:	80 e0       	ldi	r24, 0x00	; 0
    609a:	90 e0       	ldi	r25, 0x00	; 0
    609c:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    60a0:	0f 5f       	subi	r16, 0xFF	; 255
    60a2:	1f 4f       	sbci	r17, 0xFF	; 255
												_gfault_Occure = _kFAULT_RESET_TIMER;
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    60a4:	05 30       	cpi	r16, 0x05	; 5
    60a6:	11 05       	cpc	r17, r1
    60a8:	41 f7       	brne	.-48     	; 0x607a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x122e>
    60aa:	dc c0       	rjmp	.+440    	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1418>
    60ac:	01 96       	adiw	r24, 0x01	; 1
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
    60ae:	86 30       	cpi	r24, 0x06	; 6
    60b0:	91 05       	cpc	r25, r1
    60b2:	09 f0       	breq	.+2      	; 0x60b6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x126a>
    60b4:	8a cf       	rjmp	.-236    	; 0x5fca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x117e>
    60b6:	a4 cf       	rjmp	.-184    	; 0x6000 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11b4>
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    60b8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    60bc:	81 30       	cpi	r24, 0x01	; 1
    60be:	51 f4       	brne	.+20     	; 0x60d4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1288>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail");
    60c0:	6f e8       	ldi	r22, 0x8F	; 143
    60c2:	73 e0       	ldi	r23, 0x03	; 3
    60c4:	82 e5       	ldi	r24, 0x52	; 82
    60c6:	94 e1       	ldi	r25, 0x14	; 20
    60c8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    60cc:	82 e5       	ldi	r24, 0x52	; 82
    60ce:	94 e1       	ldi	r25, 0x14	; 20
    60d0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    60d4:	f2 e0       	ldi	r31, 0x02	; 2
    60d6:	cf 12       	cpse	r12, r31
    60d8:	c7 c0       	rjmp	.+398    	; 0x6268 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x141c>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    60da:	86 e0       	ldi	r24, 0x06	; 6
    60dc:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    60e0:	84 e6       	ldi	r24, 0x64	; 100
    60e2:	90 e0       	ldi	r25, 0x00	; 0
    60e4:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    60e8:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    60ec:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    60f0:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    60f4:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    60f8:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    60fc:	a0 62       	ori	r26, 0x20	; 32
    60fe:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    6102:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    6106:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    610a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    610e:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    6112:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    6116:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    611a:	82 60       	ori	r24, 0x02	; 2
    611c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    6120:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    6124:	00 e0       	ldi	r16, 0x00	; 0
    6126:	10 e0       	ldi	r17, 0x00	; 0
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6128:	f5 01       	movw	r30, r10
    612a:	e0 0f       	add	r30, r16
    612c:	f1 1f       	adc	r31, r17
    612e:	e5 81       	ldd	r30, Z+5	; 0x05
    6130:	e6 31       	cpi	r30, 0x16	; 22
    6132:	68 f0       	brcs	.+26     	; 0x614e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1302>
												{
													/********************************* turn on/off the wired valve *********************************/
													
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6134:	f0 e0       	ldi	r31, 0x00	; 0
    6136:	ef 53       	subi	r30, 0x3F	; 63
    6138:	fc 4e       	sbci	r31, 0xEC	; 236
    613a:	61 e0       	ldi	r22, 0x01	; 1
    613c:	80 81       	ld	r24, Z
    613e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
													_kDELAY_MS(200);
    6142:	68 ec       	ldi	r22, 0xC8	; 200
    6144:	70 e0       	ldi	r23, 0x00	; 0
    6146:	80 e0       	ldi	r24, 0x00	; 0
    6148:	90 e0       	ldi	r25, 0x00	; 0
    614a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    614e:	0f 5f       	subi	r16, 0xFF	; 255
    6150:	1f 4f       	sbci	r17, 0xFF	; 255
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6152:	05 30       	cpi	r16, 0x05	; 5
    6154:	11 05       	cpc	r17, r1
    6156:	41 f7       	brne	.-48     	; 0x6128 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12dc>
    6158:	85 c0       	rjmp	.+266    	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1418>
										data_send_counter = 3;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    615a:	91 30       	cpi	r25, 0x01	; 1
    615c:	51 f4       	brne	.+20     	; 0x6172 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1326>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    615e:	64 e5       	ldi	r22, 0x54	; 84
    6160:	73 e0       	ldi	r23, 0x03	; 3
    6162:	82 e5       	ldi	r24, 0x52	; 82
    6164:	94 e1       	ldi	r25, 0x14	; 20
    6166:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    616a:	82 e5       	ldi	r24, 0x52	; 82
    616c:	94 e1       	ldi	r25, 0x14	; 20
    616e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									}
									if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    6172:	22 e0       	ldi	r18, 0x02	; 2
    6174:	c2 12       	cpse	r12, r18
    6176:	78 c0       	rjmp	.+240    	; 0x6268 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x141c>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6178:	86 e0       	ldi	r24, 0x06	; 6
    617a:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    617e:	84 e6       	ldi	r24, 0x64	; 100
    6180:	90 e0       	ldi	r25, 0x00	; 0
    6182:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    6186:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    618a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    618e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    6192:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    6196:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    619a:	a0 62       	ori	r26, 0x20	; 32
    619c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    61a0:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    61a4:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    61a8:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    61ac:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    61b0:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    61b4:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    61b8:	82 60       	ori	r24, 0x02	; 2
    61ba:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    61be:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    61c2:	00 e0       	ldi	r16, 0x00	; 0
    61c4:	10 e0       	ldi	r17, 0x00	; 0
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    61c6:	f5 01       	movw	r30, r10
    61c8:	e0 0f       	add	r30, r16
    61ca:	f1 1f       	adc	r31, r17
    61cc:	e5 81       	ldd	r30, Z+5	; 0x05
    61ce:	e6 31       	cpi	r30, 0x16	; 22
    61d0:	68 f0       	brcs	.+26     	; 0x61ec <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13a0>
											{
												/********************************* turn on/off the wired valve *********************************/
												
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    61d2:	f0 e0       	ldi	r31, 0x00	; 0
    61d4:	ef 53       	subi	r30, 0x3F	; 63
    61d6:	fc 4e       	sbci	r31, 0xEC	; 236
    61d8:	61 e0       	ldi	r22, 0x01	; 1
    61da:	80 81       	ld	r24, Z
    61dc:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
												_kDELAY_MS(200);
    61e0:	68 ec       	ldi	r22, 0xC8	; 200
    61e2:	70 e0       	ldi	r23, 0x00	; 0
    61e4:	80 e0       	ldi	r24, 0x00	; 0
    61e6:	90 e0       	ldi	r25, 0x00	; 0
    61e8:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    61ec:	0f 5f       	subi	r16, 0xFF	; 255
    61ee:	1f 4f       	sbci	r17, 0xFF	; 255
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    61f0:	05 30       	cpi	r16, 0x05	; 5
    61f2:	11 05       	cpc	r17, r1
    61f4:	41 f7       	brne	.-48     	; 0x61c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x137a>
    61f6:	36 c0       	rjmp	.+108    	; 0x6264 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1418>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    61f8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    61fc:	81 30       	cpi	r24, 0x01	; 1
    61fe:	51 f4       	brne	.+20     	; 0x6214 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13c8>
								{
									_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    6200:	69 e1       	ldi	r22, 0x19	; 25
    6202:	73 e0       	ldi	r23, 0x03	; 3
    6204:	82 e5       	ldi	r24, 0x52	; 82
    6206:	94 e1       	ldi	r25, 0x14	; 20
    6208:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    620c:	82 e5       	ldi	r24, 0x52	; 82
    620e:	94 e1       	ldi	r25, 0x14	; 20
    6210:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								//RF95_setModeRx_Continuous();
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    6214:	32 e0       	ldi	r19, 0x02	; 2
    6216:	c3 12       	cpse	r12, r19
    6218:	27 c0       	rjmp	.+78     	; 0x6268 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x141c>
								{
									_gfault_Occure = _kFAULT_RESET_TIMER;
    621a:	84 e6       	ldi	r24, 0x64	; 100
    621c:	90 e0       	ldi	r25, 0x00	; 0
    621e:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    6222:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6226:	86 e0       	ldi	r24, 0x06	; 6
    6228:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    622c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    6230:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    6234:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    6238:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    623c:	a0 62       	ori	r26, 0x20	; 32
    623e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    6242:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    6246:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    624a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    624e:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    6252:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    6256:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    625a:	82 60       	ori	r24, 0x02	; 2
    625c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    6260:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
									return 0;          /* no data available */
    6264:	80 e0       	ldi	r24, 0x00	; 0
    6266:	50 c0       	rjmp	.+160    	; 0x6308 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14bc>
								}
							}
							_kDELAY_MS(1000);
    6268:	68 ee       	ldi	r22, 0xE8	; 232
    626a:	73 e0       	ldi	r23, 0x03	; 3
    626c:	80 e0       	ldi	r24, 0x00	; 0
    626e:	90 e0       	ldi	r25, 0x00	; 0
    6270:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
							_kSERIAL_MON_CLEAR();
						}
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    6274:	43 e0       	ldi	r20, 0x03	; 3
    6276:	c4 12       	cpse	r12, r20
    6278:	55 ce       	rjmp	.-854    	; 0x5f24 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10d8>
    627a:	2f c0       	rjmp	.+94     	; 0x62da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148e>
						}
					}
					
					/******************************************************** handle wired valve *******************************************************************/
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    627c:	55 e1       	ldi	r21, 0x15	; 21
    627e:	59 15       	cp	r21, r9
    6280:	78 f4       	brcc	.+30     	; 0x62a0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1454>
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    6282:	e9 2d       	mov	r30, r9
    6284:	f0 e0       	ldi	r31, 0x00	; 0
    6286:	ef 53       	subi	r30, 0x3F	; 63
    6288:	fc 4e       	sbci	r31, 0xEC	; 236
    628a:	65 2d       	mov	r22, r5
    628c:	80 81       	ld	r24, Z
    628e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
						_kDELAY_MS(200);
    6292:	68 ec       	ldi	r22, 0xC8	; 200
    6294:	70 e0       	ldi	r23, 0x00	; 0
    6296:	80 e0       	ldi	r24, 0x00	; 0
    6298:	90 e0       	ldi	r25, 0x00	; 0
    629a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    629e:	1d c0       	rjmp	.+58     	; 0x62da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148e>
    62a0:	eb a9       	ldd	r30, Y+51	; 0x33
    62a2:	fc a9       	ldd	r31, Y+52	; 0x34
    62a4:	e0 0f       	add	r30, r16
    62a6:	f1 1f       	adc	r31, r17
						if(on_off == _kON)
						{
						}
					}
					
					else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
    62a8:	e8 50       	subi	r30, 0x08	; 8
    62aa:	f3 4f       	sbci	r31, 0xF3	; 243
					{
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    62ac:	80 81       	ld	r24, Z
    62ae:	85 36       	cpi	r24, 0x65	; 101
    62b0:	a1 f4       	brne	.+40     	; 0x62da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148e>
    62b2:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
						{
							if(on_off == _kON)
    62b6:	91 e0       	ldi	r25, 0x01	; 1
    62b8:	79 12       	cpse	r7, r25
    62ba:	05 c0       	rjmp	.+10     	; 0x62c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x147a>
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    62bc:	88 23       	and	r24, r24
    62be:	69 f0       	breq	.+26     	; 0x62da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148e>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    62c0:	70 92 06 14 	sts	0x1406, r7	; 0x801406 <_sRuble_Parameters+0xbf>
    62c4:	04 c0       	rjmp	.+8      	; 0x62ce <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1482>
								}
								
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    62c6:	88 23       	and	r24, r24
    62c8:	41 f0       	breq	.+16     	; 0x62da <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148e>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    62ca:	f0 92 06 14 	sts	0x1406, r15	; 0x801406 <_sRuble_Parameters+0xbf>
									_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    62ce:	66 e0       	ldi	r22, 0x06	; 6
    62d0:	74 e1       	ldi	r23, 0x14	; 20
    62d2:	88 ea       	ldi	r24, 0xA8	; 168
    62d4:	9c e0       	ldi	r25, 0x0C	; 12
    62d6:	0e 94 d4 23 	call	0x47a8	; 0x47a8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    62da:	0f 5f       	subi	r16, 0xFF	; 255
    62dc:	1f 4f       	sbci	r17, 0xFF	; 255
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    62de:	05 30       	cpi	r16, 0x05	; 5
    62e0:	11 05       	cpc	r17, r1
    62e2:	09 f0       	breq	.+2      	; 0x62e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x149a>
    62e4:	53 cd       	rjmp	.-1370   	; 0x5d8c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf40>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    62e6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    62ea:	81 30       	cpi	r24, 0x01	; 1
    62ec:	61 f4       	brne	.+24     	; 0x6306 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14ba>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    62ee:	6a ef       	ldi	r22, 0xFA	; 250
    62f0:	72 e0       	ldi	r23, 0x02	; 2
    62f2:	82 e5       	ldi	r24, 0x52	; 82
    62f4:	94 e1       	ldi	r25, 0x14	; 20
    62f6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    62fa:	82 e5       	ldi	r24, 0x52	; 82
    62fc:	94 e1       	ldi	r25, 0x14	; 20
    62fe:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    6302:	01 c0       	rjmp	.+2      	; 0x6306 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14ba>
				return 1;
			}
			
		}break;
	}
}
    6304:	01 c0       	rjmp	.+2      	; 0x6308 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14bc>
						_kDELAY_MS(200);
					}
				}
			}
		}
		return 1;
    6306:	81 e0       	ldi	r24, 0x01	; 1
				return 1;
			}
			
		}break;
	}
}
    6308:	e8 96       	adiw	r28, 0x38	; 56
    630a:	0f b6       	in	r0, 0x3f	; 63
    630c:	f8 94       	cli
    630e:	de bf       	out	0x3e, r29	; 62
    6310:	0f be       	out	0x3f, r0	; 63
    6312:	cd bf       	out	0x3d, r28	; 61
    6314:	df 91       	pop	r29
    6316:	cf 91       	pop	r28
    6318:	1f 91       	pop	r17
    631a:	0f 91       	pop	r16
    631c:	ff 90       	pop	r15
    631e:	ef 90       	pop	r14
    6320:	df 90       	pop	r13
    6322:	cf 90       	pop	r12
    6324:	bf 90       	pop	r11
    6326:	af 90       	pop	r10
    6328:	9f 90       	pop	r9
    632a:	8f 90       	pop	r8
    632c:	7f 90       	pop	r7
    632e:	6f 90       	pop	r6
    6330:	5f 90       	pop	r5
    6332:	4f 90       	pop	r4
    6334:	3f 90       	pop	r3
    6336:	2f 90       	pop	r2
    6338:	08 95       	ret

0000633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>:
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
		_kSERIAL_MON_CLEAR();
	}
}
    633a:	ff 92       	push	r15
    633c:	0f 93       	push	r16
    633e:	1f 93       	push	r17
    6340:	cf 93       	push	r28
    6342:	df 93       	push	r29
    6344:	0e e1       	ldi	r16, 0x1E	; 30
    6346:	19 e0       	ldi	r17, 0x09	; 9
    6348:	ca e1       	ldi	r28, 0x1A	; 26
    634a:	d5 e0       	ldi	r29, 0x05	; 5
    634c:	f8 01       	movw	r30, r16
    634e:	f1 90       	ld	r15, Z+
    6350:	8f 01       	movw	r16, r30
    6352:	ce 01       	movw	r24, r28
    6354:	0e 94 3a ed 	call	0x1da74	; 0x1da74 <eeprom_read_byte>
    6358:	f8 16       	cp	r15, r24
    635a:	21 f0       	breq	.+8      	; 0x6364 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x2a>
    635c:	6f 2d       	mov	r22, r15
    635e:	ce 01       	movw	r24, r28
    6360:	0e 94 42 ed 	call	0x1da84	; 0x1da84 <eeprom_write_byte>
    6364:	21 96       	adiw	r28, 0x01	; 1
    6366:	c2 39       	cpi	r28, 0x92	; 146
    6368:	f7 e0       	ldi	r31, 0x07	; 7
    636a:	df 07       	cpc	r29, r31
    636c:	79 f7       	brne	.-34     	; 0x634c <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x12>
    636e:	8e e1       	ldi	r24, 0x1E	; 30
    6370:	99 e0       	ldi	r25, 0x09	; 9
    6372:	df 91       	pop	r29
    6374:	cf 91       	pop	r28
    6376:	1f 91       	pop	r17
    6378:	0f 91       	pop	r16
    637a:	ff 90       	pop	r15
    637c:	08 95       	ret

0000637e <_Z24Return_Previous_Day_Datev>:
    637e:	90 91 76 13 	lds	r25, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    6382:	20 91 77 13 	lds	r18, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    6386:	42 2f       	mov	r20, r18
    6388:	50 e0       	ldi	r21, 0x00	; 0
    638a:	fa 01       	movw	r30, r20
    638c:	31 97       	sbiw	r30, 0x01	; 1
    638e:	ec 30       	cpi	r30, 0x0C	; 12
    6390:	f1 05       	cpc	r31, r1
    6392:	08 f0       	brcs	.+2      	; 0x6396 <_Z24Return_Previous_Day_Datev+0x18>
    6394:	52 c0       	rjmp	.+164    	; 0x643a <_Z24Return_Previous_Day_Datev+0xbc>
    6396:	88 27       	eor	r24, r24
    6398:	ee 58       	subi	r30, 0x8E	; 142
    639a:	ff 4f       	sbci	r31, 0xFF	; 255
    639c:	8f 4f       	sbci	r24, 0xFF	; 255
    639e:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
    63a2:	91 30       	cpi	r25, 0x01	; 1
    63a4:	89 f5       	brne	.+98     	; 0x6408 <_Z24Return_Previous_Day_Datev+0x8a>
    63a6:	fa 01       	movw	r30, r20
    63a8:	31 97       	sbiw	r30, 0x01	; 1
    63aa:	eb 30       	cpi	r30, 0x0B	; 11
    63ac:	f1 05       	cpc	r31, r1
    63ae:	58 f4       	brcc	.+22     	; 0x63c6 <_Z24Return_Previous_Day_Datev+0x48>
    63b0:	88 27       	eor	r24, r24
    63b2:	e2 58       	subi	r30, 0x82	; 130
    63b4:	ff 4f       	sbci	r31, 0xFF	; 255
    63b6:	8f 4f       	sbci	r24, 0xFF	; 255
    63b8:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
    63bc:	8c e0       	ldi	r24, 0x0C	; 12
    63be:	01 c0       	rjmp	.+2      	; 0x63c2 <_Z24Return_Previous_Day_Datev+0x44>
    63c0:	81 e0       	ldi	r24, 0x01	; 1
    63c2:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    63c6:	8f e1       	ldi	r24, 0x1F	; 31
    63c8:	08 95       	ret
    63ca:	83 e0       	ldi	r24, 0x03	; 3
    63cc:	fa cf       	rjmp	.-12     	; 0x63c2 <_Z24Return_Previous_Day_Datev+0x44>
    63ce:	85 e0       	ldi	r24, 0x05	; 5
    63d0:	f8 cf       	rjmp	.-16     	; 0x63c2 <_Z24Return_Previous_Day_Datev+0x44>
    63d2:	87 e0       	ldi	r24, 0x07	; 7
    63d4:	f6 cf       	rjmp	.-20     	; 0x63c2 <_Z24Return_Previous_Day_Datev+0x44>
    63d6:	88 e0       	ldi	r24, 0x08	; 8
    63d8:	f4 cf       	rjmp	.-24     	; 0x63c2 <_Z24Return_Previous_Day_Datev+0x44>
    63da:	8a e0       	ldi	r24, 0x0A	; 10
    63dc:	f2 cf       	rjmp	.-28     	; 0x63c2 <_Z24Return_Previous_Day_Datev+0x44>
    63de:	91 30       	cpi	r25, 0x01	; 1
    63e0:	99 f4       	brne	.+38     	; 0x6408 <_Z24Return_Previous_Day_Datev+0x8a>
    63e2:	27 30       	cpi	r18, 0x07	; 7
    63e4:	59 f0       	breq	.+22     	; 0x63fc <_Z24Return_Previous_Day_Datev+0x7e>
    63e6:	20 f4       	brcc	.+8      	; 0x63f0 <_Z24Return_Previous_Day_Datev+0x72>
    63e8:	25 30       	cpi	r18, 0x05	; 5
    63ea:	41 f5       	brne	.+80     	; 0x643c <_Z24Return_Previous_Day_Datev+0xbe>
    63ec:	84 e0       	ldi	r24, 0x04	; 4
    63ee:	09 c0       	rjmp	.+18     	; 0x6402 <_Z24Return_Previous_Day_Datev+0x84>
    63f0:	2a 30       	cpi	r18, 0x0A	; 10
    63f2:	31 f0       	breq	.+12     	; 0x6400 <_Z24Return_Previous_Day_Datev+0x82>
    63f4:	2c 30       	cpi	r18, 0x0C	; 12
    63f6:	11 f5       	brne	.+68     	; 0x643c <_Z24Return_Previous_Day_Datev+0xbe>
    63f8:	8b e0       	ldi	r24, 0x0B	; 11
    63fa:	03 c0       	rjmp	.+6      	; 0x6402 <_Z24Return_Previous_Day_Datev+0x84>
    63fc:	86 e0       	ldi	r24, 0x06	; 6
    63fe:	01 c0       	rjmp	.+2      	; 0x6402 <_Z24Return_Previous_Day_Datev+0x84>
    6400:	89 e0       	ldi	r24, 0x09	; 9
    6402:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6406:	1a c0       	rjmp	.+52     	; 0x643c <_Z24Return_Previous_Day_Datev+0xbe>
    6408:	20 93 2b 09 	sts	0x092B, r18	; 0x80092b <_sSchedules+0xd>
    640c:	13 c0       	rjmp	.+38     	; 0x6434 <_Z24Return_Previous_Day_Datev+0xb6>
    640e:	91 30       	cpi	r25, 0x01	; 1
    6410:	71 f4       	brne	.+28     	; 0x642e <_Z24Return_Previous_Day_Datev+0xb0>
    6412:	80 91 78 13 	lds	r24, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
    6416:	83 70       	andi	r24, 0x03	; 3
    6418:	29 f0       	breq	.+10     	; 0x6424 <_Z24Return_Previous_Day_Datev+0xa6>
    641a:	82 e0       	ldi	r24, 0x02	; 2
    641c:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6420:	8c e1       	ldi	r24, 0x1C	; 28
    6422:	08 95       	ret
    6424:	82 e0       	ldi	r24, 0x02	; 2
    6426:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    642a:	8d e1       	ldi	r24, 0x1D	; 29
    642c:	08 95       	ret
    642e:	83 e0       	ldi	r24, 0x03	; 3
    6430:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
    6434:	8f ef       	ldi	r24, 0xFF	; 255
    6436:	89 0f       	add	r24, r25
    6438:	08 95       	ret
    643a:	08 95       	ret
    643c:	8e e1       	ldi	r24, 0x1E	; 30
    643e:	08 95       	ret

00006440 <_Z15Delete_Scheduleh>:
    6440:	88 23       	and	r24, r24
    6442:	a9 f1       	breq	.+106    	; 0x64ae <_Z15Delete_Scheduleh+0x6e>
    6444:	30 91 7a 0b 	lds	r19, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    6448:	33 23       	and	r19, r19
    644a:	89 f1       	breq	.+98     	; 0x64ae <_Z15Delete_Scheduleh+0x6e>
    644c:	30 91 7a 0b 	lds	r19, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    6450:	83 13       	cpse	r24, r19
    6452:	2d c0       	rjmp	.+90     	; 0x64ae <_Z15Delete_Scheduleh+0x6e>
    6454:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
    6458:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
    645c:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    6460:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
    6464:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    6468:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    646c:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    6470:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    6474:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    6478:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
    647c:	23 30       	cpi	r18, 0x03	; 3
    647e:	51 f0       	breq	.+20     	; 0x6494 <_Z15Delete_Scheduleh+0x54>
    6480:	e2 2f       	mov	r30, r18
    6482:	f0 e0       	ldi	r31, 0x00	; 0
    6484:	ee 0f       	add	r30, r30
    6486:	ff 1f       	adc	r31, r31
    6488:	ec 5d       	subi	r30, 0xDC	; 220
    648a:	f4 4f       	sbci	r31, 0xF4	; 244
    648c:	11 82       	std	Z+1, r1	; 0x01
    648e:	10 82       	st	Z, r1
    6490:	2f 5f       	subi	r18, 0xFF	; 255
    6492:	f4 cf       	rjmp	.-24     	; 0x647c <_Z15Delete_Scheduleh+0x3c>
    6494:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    6498:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    649c:	93 30       	cpi	r25, 0x03	; 3
    649e:	39 f0       	breq	.+14     	; 0x64ae <_Z15Delete_Scheduleh+0x6e>
    64a0:	e9 2f       	mov	r30, r25
    64a2:	f0 e0       	ldi	r31, 0x00	; 0
    64a4:	e0 5e       	subi	r30, 0xE0	; 224
    64a6:	f4 4f       	sbci	r31, 0xF4	; 244
    64a8:	10 82       	st	Z, r1
    64aa:	9f 5f       	subi	r25, 0xFF	; 255
    64ac:	f7 cf       	rjmp	.-18     	; 0x649c <_Z15Delete_Scheduleh+0x5c>
    64ae:	08 95       	ret

000064b0 <_Z35Return_Calculated_Previous_Day_Dateh>:

unsigned char Return_Calculated_Previous_Day_Date(unsigned char days_in_bet_schedule)
{
    64b0:	ff 92       	push	r15
    64b2:	0f 93       	push	r16
    64b4:	1f 93       	push	r17
    64b6:	cf 93       	push	r28
    64b8:	df 93       	push	r29
	int make_date;
	unsigned char return_date, return_month;
	unsigned char year;
	year  = _sRuble_Parameters.Update_Local_Date[2];
    64ba:	f0 90 78 13 	lds	r15, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
	
	if(_sSchedules.Irrigating_Date == 0)
    64be:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    64c2:	81 11       	cpse	r24, r1
    64c4:	20 c0       	rjmp	.+64     	; 0x6506 <_Z35Return_Calculated_Previous_Day_Dateh+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    64c6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    64ca:	81 30       	cpi	r24, 0x01	; 1
    64cc:	51 f4       	brne	.+20     	; 0x64e2 <_Z35Return_Calculated_Previous_Day_Dateh+0x32>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 1///////////////////////////////////////////");
    64ce:	63 e8       	ldi	r22, 0x83	; 131
    64d0:	7d e1       	ldi	r23, 0x1D	; 29
    64d2:	82 e5       	ldi	r24, 0x52	; 82
    64d4:	94 e1       	ldi	r25, 0x14	; 20
    64d6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    64da:	82 e5       	ldi	r24, 0x52	; 82
    64dc:	94 e1       	ldi	r25, 0x14	; 20
    64de:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Irrigating_Date = _sRuble_Parameters.Update_Local_Date[0];
    64e2:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    64e6:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    64ea:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    64ee:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		make_date = _sSchedules.Irrigating_Date - (_sSchedules.Days_In_Between_Schedules+1);
    64f2:	00 91 28 09 	lds	r16, 0x0928	; 0x800928 <_sSchedules+0xa>
    64f6:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    64fa:	10 e0       	ldi	r17, 0x00	; 0
    64fc:	90 e0       	ldi	r25, 0x00	; 0
    64fe:	01 96       	adiw	r24, 0x01	; 1
    6500:	08 1b       	sub	r16, r24
    6502:	19 0b       	sbc	r17, r25
    6504:	13 c0       	rjmp	.+38     	; 0x652c <_Z35Return_Calculated_Previous_Day_Dateh+0x7c>
		if(_sSchedules.Irrigating_Month == 0)
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
		}*/
		
		make_date = _sRuble_Parameters.Update_Local_Date[0] - (_sSchedules.Days_In_Between_Schedules+1);
    6506:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    650a:	00 91 76 13 	lds	r16, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    650e:	10 e0       	ldi	r17, 0x00	; 0
    6510:	90 e0       	ldi	r25, 0x00	; 0
    6512:	01 96       	adiw	r24, 0x01	; 1
    6514:	08 1b       	sub	r16, r24
    6516:	19 0b       	sbc	r17, r25
		if(_sSchedules.Irrigating_Month == 0)
    6518:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    651c:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    6520:	91 11       	cpse	r25, r1
    6522:	02 c0       	rjmp	.+4      	; 0x6528 <_Z35Return_Calculated_Previous_Day_Dateh+0x78>
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    6524:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		}
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    6528:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
	}
	
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    652c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6530:	81 30       	cpi	r24, 0x01	; 1
    6532:	89 f4       	brne	.+34     	; 0x6556 <_Z35Return_Calculated_Previous_Day_Dateh+0xa6>
	{
		_kSERAIL_MON_WRITE("sc make date");
    6534:	66 e7       	ldi	r22, 0x76	; 118
    6536:	7d e1       	ldi	r23, 0x1D	; 29
    6538:	82 e5       	ldi	r24, 0x52	; 82
    653a:	94 e1       	ldi	r25, 0x14	; 20
    653c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(make_date);
    6540:	4a e0       	ldi	r20, 0x0A	; 10
    6542:	50 e0       	ldi	r21, 0x00	; 0
    6544:	b8 01       	movw	r22, r16
    6546:	82 e5       	ldi	r24, 0x52	; 82
    6548:	94 e1       	ldi	r25, 0x14	; 20
    654a:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
		_kSERIAL_MON_CLEAR();
    654e:	82 e5       	ldi	r24, 0x52	; 82
    6550:	94 e1       	ldi	r25, 0x14	; 20
    6552:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if(make_date > 0)
    6556:	10 16       	cp	r1, r16
    6558:	11 06       	cpc	r1, r17
    655a:	24 f4       	brge	.+8      	; 0x6564 <_Z35Return_Calculated_Previous_Day_Dateh+0xb4>
	{
		return_date = make_date;
    655c:	d0 2f       	mov	r29, r16
		return_month = _sSchedules.Irrigating_Month;
    655e:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    6562:	71 c0       	rjmp	.+226    	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
	}
	else if(make_date == 0)
	{
		switch(_sSchedules.Irrigating_Month)
    6564:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6568:	8e 2f       	mov	r24, r30
    656a:	90 e0       	ldi	r25, 0x00	; 0
    656c:	fc 01       	movw	r30, r24
    656e:	31 97       	sbiw	r30, 0x01	; 1
	if(make_date > 0)
	{
		return_date = make_date;
		return_month = _sSchedules.Irrigating_Month;
	}
	else if(make_date == 0)
    6570:	01 15       	cp	r16, r1
    6572:	11 05       	cpc	r17, r1
    6574:	49 f5       	brne	.+82     	; 0x65c8 <_Z35Return_Calculated_Previous_Day_Dateh+0x118>
	{
		switch(_sSchedules.Irrigating_Month)
    6576:	ec 30       	cpi	r30, 0x0C	; 12
    6578:	f1 05       	cpc	r31, r1
    657a:	08 f0       	brcs	.+2      	; 0x657e <_Z35Return_Calculated_Previous_Day_Dateh+0xce>
    657c:	64 c0       	rjmp	.+200    	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    657e:	88 27       	eor	r24, r24
    6580:	e7 57       	subi	r30, 0x77	; 119
    6582:	ff 4f       	sbci	r31, 0xFF	; 255
    6584:	8f 4f       	sbci	r24, 0xFF	; 255
    6586:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31;
				return_month = _eDEC;
    658a:	cc e0       	ldi	r28, 0x0C	; 12
    658c:	18 c0       	rjmp	.+48     	; 0x65be <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eFEB:
			{
				return_date = 31;
				return_month = _eJAN;
    658e:	c1 e0       	ldi	r28, 0x01	; 1
    6590:	16 c0       	rjmp	.+44     	; 0x65be <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMARCH:
			{
				if(year%4)
    6592:	8f 2d       	mov	r24, r15
    6594:	83 70       	andi	r24, 0x03	; 3
				else
				{
					return_date = 29;
				}
				
				return_month = _eFEB;
    6596:	c2 e0       	ldi	r28, 0x02	; 2
				return_date = 31;
				return_month = _eJAN;
			}break;
			case _eMARCH:
			{
				if(year%4)
    6598:	09 f0       	breq	.+2      	; 0x659c <_Z35Return_Calculated_Previous_Day_Dateh+0xec>
    659a:	54 c0       	rjmp	.+168    	; 0x6644 <_Z35Return_Calculated_Previous_Day_Dateh+0x194>
				{
					return_date = 28;
				}
				else
				{
					return_date = 29;
    659c:	dd e1       	ldi	r29, 0x1D	; 29
    659e:	53 c0       	rjmp	.+166    	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
				return_month = _eFEB;
			}break;
			case _eAPR:
			{
				return_date = 31;
				return_month = _eMARCH;
    65a0:	c3 e0       	ldi	r28, 0x03	; 3
    65a2:	0d c0       	rjmp	.+26     	; 0x65be <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMAY:
			{
				return_date = 30;
				return_month = _eAPR;
    65a4:	c4 e0       	ldi	r28, 0x04	; 4
    65a6:	0e c0       	rjmp	.+28     	; 0x65c4 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eJUN:
			{
				return_date = 31;
				return_month = _eMAY;
    65a8:	c5 e0       	ldi	r28, 0x05	; 5
    65aa:	09 c0       	rjmp	.+18     	; 0x65be <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eJUL:
			{
				return_date = 30;
				return_month = _eJUN;
    65ac:	c6 e0       	ldi	r28, 0x06	; 6
    65ae:	0a c0       	rjmp	.+20     	; 0x65c4 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eAUG:
			{
				return_date = 31;
				return_month = _eJUL;
    65b0:	c7 e0       	ldi	r28, 0x07	; 7
    65b2:	05 c0       	rjmp	.+10     	; 0x65be <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eSEP:
			{
				return_date = 31;
				return_month = _eAUG;
    65b4:	c8 e0       	ldi	r28, 0x08	; 8
    65b6:	03 c0       	rjmp	.+6      	; 0x65be <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eOCT:
			{
				return_date = 30;
				return_month = _eSEP;
    65b8:	c9 e0       	ldi	r28, 0x09	; 9
    65ba:	04 c0       	rjmp	.+8      	; 0x65c4 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eNOV:
			{
				return_date = 31;
				return_month = _eOCT;
    65bc:	ca e0       	ldi	r28, 0x0A	; 10
				return_date = 30;
				return_month = _eSEP;
			}break;
			case _eNOV:
			{
				return_date = 31;
    65be:	df e1       	ldi	r29, 0x1F	; 31
				return_month = _eOCT;
			}break;
    65c0:	42 c0       	rjmp	.+132    	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30;
				return_month = _eNOV;
    65c2:	cb e0       	ldi	r28, 0x0B	; 11
				return_date = 31;
				return_month = _eOCT;
			}break;
			case _eDEC:
			{
				return_date = 30;
    65c4:	de e1       	ldi	r29, 0x1E	; 30
				return_month = _eNOV;
			}break;
    65c6:	3f c0       	rjmp	.+126    	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
		}
	}
	
	else if(make_date < 0)
	{
		switch(_sSchedules.Irrigating_Month)
    65c8:	ec 30       	cpi	r30, 0x0C	; 12
    65ca:	f1 05       	cpc	r31, r1
    65cc:	e0 f5       	brcc	.+120    	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    65ce:	88 27       	eor	r24, r24
    65d0:	eb 56       	subi	r30, 0x6B	; 107
    65d2:	ff 4f       	sbci	r31, 0xFF	; 255
    65d4:	8f 4f       	sbci	r24, 0xFF	; 255
    65d6:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31 +  make_date;
    65da:	df e1       	ldi	r29, 0x1F	; 31
    65dc:	d0 0f       	add	r29, r16
				return_month = _eDEC;
    65de:	cc e0       	ldi	r28, 0x0C	; 12
			}break;
    65e0:	32 c0       	rjmp	.+100    	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eFEB:
			{
				return_date = 31+  make_date;
    65e2:	df e1       	ldi	r29, 0x1F	; 31
    65e4:	d0 0f       	add	r29, r16
				return_month = _eJAN;
    65e6:	c1 e0       	ldi	r28, 0x01	; 1
			}break;
    65e8:	2e c0       	rjmp	.+92     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMARCH:
			{
				if(year%4)
    65ea:	8f 2d       	mov	r24, r15
    65ec:	83 70       	andi	r24, 0x03	; 3
    65ee:	11 f0       	breq	.+4      	; 0x65f4 <_Z35Return_Calculated_Previous_Day_Dateh+0x144>
				{
					return_date = 28+  make_date;
    65f0:	dc e1       	ldi	r29, 0x1C	; 28
    65f2:	01 c0       	rjmp	.+2      	; 0x65f6 <_Z35Return_Calculated_Previous_Day_Dateh+0x146>
				}
				else
				{
					return_date = 29+  make_date;
    65f4:	dd e1       	ldi	r29, 0x1D	; 29
    65f6:	d0 0f       	add	r29, r16
				}
				
				return_month = _eFEB;
    65f8:	c2 e0       	ldi	r28, 0x02	; 2
    65fa:	25 c0       	rjmp	.+74     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eAPR:
			{
				return_date = 31+  make_date;
    65fc:	df e1       	ldi	r29, 0x1F	; 31
    65fe:	d0 0f       	add	r29, r16
				return_month = _eMARCH;
    6600:	c3 e0       	ldi	r28, 0x03	; 3
			}break;
    6602:	21 c0       	rjmp	.+66     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMAY:
			{
				return_date = 30+  make_date;
    6604:	de e1       	ldi	r29, 0x1E	; 30
    6606:	d0 0f       	add	r29, r16
				return_month = _eAPR;
    6608:	c4 e0       	ldi	r28, 0x04	; 4
			}break;
    660a:	1d c0       	rjmp	.+58     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUN:
			{
				return_date = 31+  make_date;
    660c:	df e1       	ldi	r29, 0x1F	; 31
    660e:	d0 0f       	add	r29, r16
				return_month = _eMAY;
    6610:	c5 e0       	ldi	r28, 0x05	; 5
			}break;
    6612:	19 c0       	rjmp	.+50     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUL:
			{
				return_date = 30+  make_date;
    6614:	de e1       	ldi	r29, 0x1E	; 30
    6616:	d0 0f       	add	r29, r16
				return_month = _eJUN;
    6618:	c6 e0       	ldi	r28, 0x06	; 6
			}break;
    661a:	15 c0       	rjmp	.+42     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eAUG:
			{
				return_date = 31+  make_date;
    661c:	df e1       	ldi	r29, 0x1F	; 31
    661e:	d0 0f       	add	r29, r16
				return_month = _eJUL;
    6620:	c7 e0       	ldi	r28, 0x07	; 7
			}break;
    6622:	11 c0       	rjmp	.+34     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eSEP:
			{
				return_date = 31+  make_date;
    6624:	df e1       	ldi	r29, 0x1F	; 31
    6626:	d0 0f       	add	r29, r16
				return_month = _eAUG;
    6628:	c8 e0       	ldi	r28, 0x08	; 8
			}break;
    662a:	0d c0       	rjmp	.+26     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eOCT:
			{
				return_date = 30+  make_date;
    662c:	de e1       	ldi	r29, 0x1E	; 30
    662e:	d0 0f       	add	r29, r16
				return_month = _eSEP;
    6630:	c9 e0       	ldi	r28, 0x09	; 9
			}break;
    6632:	09 c0       	rjmp	.+18     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eNOV:
			{
				return_date = 31+  make_date;
    6634:	df e1       	ldi	r29, 0x1F	; 31
    6636:	d0 0f       	add	r29, r16
				return_month = _eOCT;
    6638:	ca e0       	ldi	r28, 0x0A	; 10
			}break;
    663a:	05 c0       	rjmp	.+10     	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30+  make_date;
    663c:	de e1       	ldi	r29, 0x1E	; 30
    663e:	d0 0f       	add	r29, r16
				return_month = _eNOV;
    6640:	cb e0       	ldi	r28, 0x0B	; 11
			}break;
    6642:	01 c0       	rjmp	.+2      	; 0x6646 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eMARCH:
			{
				if(year%4)
				{
					return_date = 28;
    6644:	dc e1       	ldi	r29, 0x1C	; 28
			}break;
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6646:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    664a:	81 30       	cpi	r24, 0x01	; 1
    664c:	51 f4       	brne	.+20     	; 0x6662 <_Z35Return_Calculated_Previous_Day_Dateh+0x1b2>
	{
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_date");
    664e:	6d e5       	ldi	r22, 0x5D	; 93
    6650:	7d e1       	ldi	r23, 0x1D	; 29
    6652:	82 e5       	ldi	r24, 0x52	; 82
    6654:	94 e1       	ldi	r25, 0x14	; 20
    6656:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    665a:	82 e5       	ldi	r24, 0x52	; 82
    665c:	94 e1       	ldi	r25, 0x14	; 20
    665e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_date  = return_date;
    6662:	d0 93 8e 0b 	sts	0x0B8E, r29	; 0x800b8e <_sSchedules+0x270>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6666:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    666a:	81 30       	cpi	r24, 0x01	; 1
    666c:	91 f4       	brne	.+36     	; 0x6692 <_Z35Return_Calculated_Previous_Day_Dateh+0x1e2>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_date);
    666e:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    6672:	4a e0       	ldi	r20, 0x0A	; 10
    6674:	50 e0       	ldi	r21, 0x00	; 0
    6676:	82 e5       	ldi	r24, 0x52	; 82
    6678:	94 e1       	ldi	r25, 0x14	; 20
    667a:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_Month");
    667e:	63 e4       	ldi	r22, 0x43	; 67
    6680:	7d e1       	ldi	r23, 0x1D	; 29
    6682:	82 e5       	ldi	r24, 0x52	; 82
    6684:	94 e1       	ldi	r25, 0x14	; 20
    6686:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    668a:	82 e5       	ldi	r24, 0x52	; 82
    668c:	94 e1       	ldi	r25, 0x14	; 20
    668e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_Month = return_month;
    6692:	c0 93 8f 0b 	sts	0x0B8F, r28	; 0x800b8f <_sSchedules+0x271>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6696:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    669a:	81 30       	cpi	r24, 0x01	; 1
    669c:	61 f4       	brne	.+24     	; 0x66b6 <_Z35Return_Calculated_Previous_Day_Dateh+0x206>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
    669e:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    66a2:	4a e0       	ldi	r20, 0x0A	; 10
    66a4:	50 e0       	ldi	r21, 0x00	; 0
    66a6:	82 e5       	ldi	r24, 0x52	; 82
    66a8:	94 e1       	ldi	r25, 0x14	; 20
    66aa:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    66ae:	82 e5       	ldi	r24, 0x52	; 82
    66b0:	94 e1       	ldi	r25, 0x14	; 20
    66b2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
}
    66b6:	df 91       	pop	r29
    66b8:	cf 91       	pop	r28
    66ba:	1f 91       	pop	r17
    66bc:	0f 91       	pop	r16
    66be:	ff 90       	pop	r15
    66c0:	08 95       	ret

000066c2 <_Z22Day_In_Bet_Schedullingh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules)
{
    66c2:	bf 92       	push	r11
    66c4:	cf 92       	push	r12
    66c6:	df 92       	push	r13
    66c8:	ef 92       	push	r14
    66ca:	ff 92       	push	r15
    66cc:	0f 93       	push	r16
    66ce:	1f 93       	push	r17
    66d0:	cf 93       	push	r28
    66d2:	df 93       	push	r29
    66d4:	e8 2e       	mov	r14, r24
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	date  = _sRuble_Parameters.Update_Local_Date[0];
    66d6:	00 91 76 13 	lds	r16, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
	month = _sRuble_Parameters.Update_Local_Date[1];
    66da:	d0 91 77 13 	lds	r29, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
	year  = _sRuble_Parameters.Update_Local_Date[2];
    66de:	b0 90 78 13 	lds	r11, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    66e2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    66e6:	81 30       	cpi	r24, 0x01	; 1
    66e8:	09 f0       	breq	.+2      	; 0x66ec <_Z22Day_In_Bet_Schedullingh+0x2a>
    66ea:	5a c0       	rjmp	.+180    	; 0x67a0 <_Z22Day_In_Bet_Schedullingh+0xde>
	{
		_kSERAIL_MON_WRITE("date : ");
    66ec:	6b e3       	ldi	r22, 0x3B	; 59
    66ee:	7d e1       	ldi	r23, 0x1D	; 29
    66f0:	82 e5       	ldi	r24, 0x52	; 82
    66f2:	94 e1       	ldi	r25, 0x14	; 20
    66f4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    66f8:	4a e0       	ldi	r20, 0x0A	; 10
    66fa:	50 e0       	ldi	r21, 0x00	; 0
    66fc:	60 91 76 13 	lds	r22, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    6700:	82 e5       	ldi	r24, 0x52	; 82
    6702:	94 e1       	ldi	r25, 0x14	; 20
    6704:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6708:	82 e5       	ldi	r24, 0x52	; 82
    670a:	94 e1       	ldi	r25, 0x14	; 20
    670c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("month : ");
    6710:	62 e3       	ldi	r22, 0x32	; 50
    6712:	7d e1       	ldi	r23, 0x1D	; 29
    6714:	82 e5       	ldi	r24, 0x52	; 82
    6716:	94 e1       	ldi	r25, 0x14	; 20
    6718:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    671c:	4a e0       	ldi	r20, 0x0A	; 10
    671e:	50 e0       	ldi	r21, 0x00	; 0
    6720:	60 91 77 13 	lds	r22, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    6724:	82 e5       	ldi	r24, 0x52	; 82
    6726:	94 e1       	ldi	r25, 0x14	; 20
    6728:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    672c:	82 e5       	ldi	r24, 0x52	; 82
    672e:	94 e1       	ldi	r25, 0x14	; 20
    6730:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("year : ");
    6734:	6a e2       	ldi	r22, 0x2A	; 42
    6736:	7d e1       	ldi	r23, 0x1D	; 29
    6738:	82 e5       	ldi	r24, 0x52	; 82
    673a:	94 e1       	ldi	r25, 0x14	; 20
    673c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    6740:	4a e0       	ldi	r20, 0x0A	; 10
    6742:	50 e0       	ldi	r21, 0x00	; 0
    6744:	60 91 78 13 	lds	r22, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
    6748:	82 e5       	ldi	r24, 0x52	; 82
    674a:	94 e1       	ldi	r25, 0x14	; 20
    674c:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6750:	82 e5       	ldi	r24, 0x52	; 82
    6752:	94 e1       	ldi	r25, 0x14	; 20
    6754:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating date : ");
    6758:	67 e1       	ldi	r22, 0x17	; 23
    675a:	7d e1       	ldi	r23, 0x1D	; 29
    675c:	82 e5       	ldi	r24, 0x52	; 82
    675e:	94 e1       	ldi	r25, 0x14	; 20
    6760:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Date);
    6764:	60 91 28 09 	lds	r22, 0x0928	; 0x800928 <_sSchedules+0xa>
    6768:	4a e0       	ldi	r20, 0x0A	; 10
    676a:	50 e0       	ldi	r21, 0x00	; 0
    676c:	82 e5       	ldi	r24, 0x52	; 82
    676e:	94 e1       	ldi	r25, 0x14	; 20
    6770:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6774:	82 e5       	ldi	r24, 0x52	; 82
    6776:	94 e1       	ldi	r25, 0x14	; 20
    6778:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating month : ");
    677c:	63 e0       	ldi	r22, 0x03	; 3
    677e:	7d e1       	ldi	r23, 0x1D	; 29
    6780:	82 e5       	ldi	r24, 0x52	; 82
    6782:	94 e1       	ldi	r25, 0x14	; 20
    6784:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Month);
    6788:	60 91 29 09 	lds	r22, 0x0929	; 0x800929 <_sSchedules+0xb>
    678c:	4a e0       	ldi	r20, 0x0A	; 10
    678e:	50 e0       	ldi	r21, 0x00	; 0
    6790:	82 e5       	ldi	r24, 0x52	; 82
    6792:	94 e1       	ldi	r25, 0x14	; 20
    6794:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6798:	82 e5       	ldi	r24, 0x52	; 82
    679a:	94 e1       	ldi	r25, 0x14	; 20
    679c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    67a0:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    67a4:	cc 24       	eor	r12, r12
    67a6:	c3 94       	inc	r12
    67a8:	ce 0c       	add	r12, r14
    67aa:	d1 2c       	mov	r13, r1
    67ac:	10 e0       	ldi	r17, 0x00	; 0
    67ae:	96 01       	movw	r18, r12
    67b0:	28 0f       	add	r18, r24
    67b2:	31 1d       	adc	r19, r1
    67b4:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    67b8:	02 17       	cp	r16, r18
    67ba:	13 07       	cpc	r17, r19
    67bc:	0c f4       	brge	.+2      	; 0x67c0 <_Z22Day_In_Bet_Schedullingh+0xfe>
    67be:	44 c0       	rjmp	.+136    	; 0x6848 <_Z22Day_In_Bet_Schedullingh+0x186>
    67c0:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    67c4:	d8 13       	cpse	r29, r24
    67c6:	40 c0       	rjmp	.+128    	; 0x6848 <_Z22Day_In_Bet_Schedullingh+0x186>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    67c8:	91 30       	cpi	r25, 0x01	; 1
    67ca:	d9 f5       	brne	.+118    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    67cc:	66 ef       	ldi	r22, 0xF6	; 246
    67ce:	7c e1       	ldi	r23, 0x1C	; 28
    67d0:	1f c0       	rjmp	.+62     	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    67d2:	91 30       	cpi	r25, 0x01	; 1
    67d4:	51 f4       	brne	.+20     	; 0x67ea <_Z22Day_In_Bet_Schedullingh+0x128>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    67d6:	69 ee       	ldi	r22, 0xE9	; 233
    67d8:	7c e1       	ldi	r23, 0x1C	; 28
    67da:	82 e5       	ldi	r24, 0x52	; 82
    67dc:	94 e1       	ldi	r25, 0x14	; 20
    67de:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    67e2:	82 e5       	ldi	r24, 0x52	; 82
    67e4:	94 e1       	ldi	r25, 0x14	; 20
    67e6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    67ea:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    67ee:	d1 30       	cpi	r29, 0x01	; 1
    67f0:	41 f5       	brne	.+80     	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    67f2:	8f e1       	ldi	r24, 0x1F	; 31
    67f4:	89 1b       	sub	r24, r25
    67f6:	98 01       	movw	r18, r16
    67f8:	28 0f       	add	r18, r24
    67fa:	31 1d       	adc	r19, r1
    67fc:	2c 15       	cp	r18, r12
    67fe:	3d 05       	cpc	r19, r13
    6800:	0c f4       	brge	.+2      	; 0x6804 <_Z22Day_In_Bet_Schedullingh+0x142>
    6802:	bb c1       	rjmp	.+886    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6804:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6808:	81 30       	cpi	r24, 0x01	; 1
    680a:	d9 f4       	brne	.+54     	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    680c:	6c ed       	ldi	r22, 0xDC	; 220
    680e:	7c e1       	ldi	r23, 0x1C	; 28
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6810:	82 e5       	ldi	r24, 0x52	; 82
    6812:	94 e1       	ldi	r25, 0x14	; 20
    6814:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6818:	82 e5       	ldi	r24, 0x52	; 82
    681a:	94 e1       	ldi	r25, 0x14	; 20
    681c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    6820:	10 c0       	rjmp	.+32     	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6822:	91 30       	cpi	r25, 0x01	; 1
    6824:	51 f4       	brne	.+20     	; 0x683a <_Z22Day_In_Bet_Schedullingh+0x178>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6826:	6f ec       	ldi	r22, 0xCF	; 207
    6828:	7c e1       	ldi	r23, 0x1C	; 28
    682a:	82 e5       	ldi	r24, 0x52	; 82
    682c:	94 e1       	ldi	r25, 0x14	; 20
    682e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6832:	82 e5       	ldi	r24, 0x52	; 82
    6834:	94 e1       	ldi	r25, 0x14	; 20
    6836:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    683a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    683e:	d2 30       	cpi	r29, 0x02	; 2
    6840:	c1 f0       	breq	.+48     	; 0x6872 <_Z22Day_In_Bet_Schedullingh+0x1b0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("day in btw 1");
				_kSERIAL_MON_CLEAR();
			}
			return 2;
    6842:	c2 e0       	ldi	r28, 0x02	; 2
    6844:	8c 2f       	mov	r24, r28
    6846:	a9 c3       	rjmp	.+1874   	; 0x6f9a <_Z22Day_In_Bet_Schedullingh+0x8d8>
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6848:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    684c:	d8 17       	cp	r29, r24
    684e:	09 f4       	brne	.+2      	; 0x6852 <_Z22Day_In_Bet_Schedullingh+0x190>
    6850:	9b c1       	rjmp	.+822    	; 0x6b88 <_Z22Day_In_Bet_Schedullingh+0x4c6>
			{
				switch(_sSchedules.Irrigating_Month)
    6852:	c0 91 29 09 	lds	r28, 0x0929	; 0x800929 <_sSchedules+0xb>
    6856:	4c 2f       	mov	r20, r28
    6858:	50 e0       	ldi	r21, 0x00	; 0
    685a:	fa 01       	movw	r30, r20
    685c:	31 97       	sbiw	r30, 0x01	; 1
    685e:	ec 30       	cpi	r30, 0x0C	; 12
    6860:	f1 05       	cpc	r31, r1
    6862:	08 f0       	brcs	.+2      	; 0x6866 <_Z22Day_In_Bet_Schedullingh+0x1a4>
    6864:	8a c1       	rjmp	.+788    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
    6866:	88 27       	eor	r24, r24
    6868:	ef 55       	subi	r30, 0x5F	; 95
    686a:	ff 4f       	sbci	r31, 0xFF	; 255
    686c:	8f 4f       	sbci	r24, 0xFF	; 255
    686e:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eFEB)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6872:	8f e1       	ldi	r24, 0x1F	; 31
    6874:	89 1b       	sub	r24, r25
    6876:	98 01       	movw	r18, r16
    6878:	28 0f       	add	r18, r24
    687a:	31 1d       	adc	r19, r1
    687c:	2c 15       	cp	r18, r12
    687e:	3d 05       	cpc	r19, r13
    6880:	0c f4       	brge	.+2      	; 0x6884 <_Z22Day_In_Bet_Schedullingh+0x1c2>
    6882:	7b c1       	rjmp	.+758    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6884:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6888:	81 30       	cpi	r24, 0x01	; 1
    688a:	d9 f6       	brne	.-74     	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    688c:	62 ec       	ldi	r22, 0xC2	; 194
    688e:	7c e1       	ldi	r23, 0x1C	; 28
    6890:	bf cf       	rjmp	.-130    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6892:	91 30       	cpi	r25, 0x01	; 1
    6894:	51 f4       	brne	.+20     	; 0x68aa <_Z22Day_In_Bet_Schedullingh+0x1e8>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6896:	65 eb       	ldi	r22, 0xB5	; 181
    6898:	7c e1       	ldi	r23, 0x1C	; 28
    689a:	82 e5       	ldi	r24, 0x52	; 82
    689c:	94 e1       	ldi	r25, 0x14	; 20
    689e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    68a2:	82 e5       	ldi	r24, 0x52	; 82
    68a4:	94 e1       	ldi	r25, 0x14	; 20
    68a6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    68aa:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    68ae:	d4 30       	cpi	r29, 0x04	; 4
    68b0:	41 f6       	brne	.-112    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    68b2:	8f e1       	ldi	r24, 0x1F	; 31
    68b4:	89 1b       	sub	r24, r25
    68b6:	98 01       	movw	r18, r16
    68b8:	28 0f       	add	r18, r24
    68ba:	31 1d       	adc	r19, r1
    68bc:	2c 15       	cp	r18, r12
    68be:	3d 05       	cpc	r19, r13
    68c0:	0c f4       	brge	.+2      	; 0x68c4 <_Z22Day_In_Bet_Schedullingh+0x202>
    68c2:	5b c1       	rjmp	.+694    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    68c4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    68c8:	81 30       	cpi	r24, 0x01	; 1
    68ca:	09 f0       	breq	.+2      	; 0x68ce <_Z22Day_In_Bet_Schedullingh+0x20c>
    68cc:	ba cf       	rjmp	.-140    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    68ce:	68 ea       	ldi	r22, 0xA8	; 168
    68d0:	7c e1       	ldi	r23, 0x1C	; 28
    68d2:	9e cf       	rjmp	.-196    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    68d4:	91 30       	cpi	r25, 0x01	; 1
    68d6:	51 f4       	brne	.+20     	; 0x68ec <_Z22Day_In_Bet_Schedullingh+0x22a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    68d8:	6b e9       	ldi	r22, 0x9B	; 155
    68da:	7c e1       	ldi	r23, 0x1C	; 28
    68dc:	82 e5       	ldi	r24, 0x52	; 82
    68de:	94 e1       	ldi	r25, 0x14	; 20
    68e0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    68e4:	82 e5       	ldi	r24, 0x52	; 82
    68e6:	94 e1       	ldi	r25, 0x14	; 20
    68e8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    68ec:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    68f0:	d6 30       	cpi	r29, 0x06	; 6
    68f2:	09 f0       	breq	.+2      	; 0x68f6 <_Z22Day_In_Bet_Schedullingh+0x234>
    68f4:	a6 cf       	rjmp	.-180    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    68f6:	8f e1       	ldi	r24, 0x1F	; 31
    68f8:	89 1b       	sub	r24, r25
    68fa:	98 01       	movw	r18, r16
    68fc:	28 0f       	add	r18, r24
    68fe:	31 1d       	adc	r19, r1
    6900:	2c 15       	cp	r18, r12
    6902:	3d 05       	cpc	r19, r13
    6904:	0c f4       	brge	.+2      	; 0x6908 <_Z22Day_In_Bet_Schedullingh+0x246>
    6906:	39 c1       	rjmp	.+626    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6908:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    690c:	81 30       	cpi	r24, 0x01	; 1
    690e:	09 f0       	breq	.+2      	; 0x6912 <_Z22Day_In_Bet_Schedullingh+0x250>
    6910:	98 cf       	rjmp	.-208    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6912:	6e e8       	ldi	r22, 0x8E	; 142
    6914:	7c e1       	ldi	r23, 0x1C	; 28
    6916:	7c cf       	rjmp	.-264    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6918:	91 30       	cpi	r25, 0x01	; 1
    691a:	51 f4       	brne	.+20     	; 0x6930 <_Z22Day_In_Bet_Schedullingh+0x26e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    691c:	61 e8       	ldi	r22, 0x81	; 129
    691e:	7c e1       	ldi	r23, 0x1C	; 28
    6920:	82 e5       	ldi	r24, 0x52	; 82
    6922:	94 e1       	ldi	r25, 0x14	; 20
    6924:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6928:	82 e5       	ldi	r24, 0x52	; 82
    692a:	94 e1       	ldi	r25, 0x14	; 20
    692c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6930:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6934:	d8 30       	cpi	r29, 0x08	; 8
    6936:	09 f0       	breq	.+2      	; 0x693a <_Z22Day_In_Bet_Schedullingh+0x278>
    6938:	84 cf       	rjmp	.-248    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    693a:	8f e1       	ldi	r24, 0x1F	; 31
    693c:	89 1b       	sub	r24, r25
    693e:	98 01       	movw	r18, r16
    6940:	28 0f       	add	r18, r24
    6942:	31 1d       	adc	r19, r1
    6944:	2c 15       	cp	r18, r12
    6946:	3d 05       	cpc	r19, r13
    6948:	0c f4       	brge	.+2      	; 0x694c <_Z22Day_In_Bet_Schedullingh+0x28a>
    694a:	17 c1       	rjmp	.+558    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    694c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6950:	81 30       	cpi	r24, 0x01	; 1
    6952:	09 f0       	breq	.+2      	; 0x6956 <_Z22Day_In_Bet_Schedullingh+0x294>
    6954:	76 cf       	rjmp	.-276    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6956:	64 e7       	ldi	r22, 0x74	; 116
    6958:	7c e1       	ldi	r23, 0x1C	; 28
    695a:	5a cf       	rjmp	.-332    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    695c:	91 30       	cpi	r25, 0x01	; 1
    695e:	51 f4       	brne	.+20     	; 0x6974 <_Z22Day_In_Bet_Schedullingh+0x2b2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6960:	67 e6       	ldi	r22, 0x67	; 103
    6962:	7c e1       	ldi	r23, 0x1C	; 28
    6964:	82 e5       	ldi	r24, 0x52	; 82
    6966:	94 e1       	ldi	r25, 0x14	; 20
    6968:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    696c:	82 e5       	ldi	r24, 0x52	; 82
    696e:	94 e1       	ldi	r25, 0x14	; 20
    6970:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6974:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6978:	d9 30       	cpi	r29, 0x09	; 9
    697a:	09 f0       	breq	.+2      	; 0x697e <_Z22Day_In_Bet_Schedullingh+0x2bc>
    697c:	62 cf       	rjmp	.-316    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    697e:	8f e1       	ldi	r24, 0x1F	; 31
    6980:	89 1b       	sub	r24, r25
    6982:	98 01       	movw	r18, r16
    6984:	28 0f       	add	r18, r24
    6986:	31 1d       	adc	r19, r1
    6988:	2c 15       	cp	r18, r12
    698a:	3d 05       	cpc	r19, r13
    698c:	0c f4       	brge	.+2      	; 0x6990 <_Z22Day_In_Bet_Schedullingh+0x2ce>
    698e:	f5 c0       	rjmp	.+490    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6990:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6994:	81 30       	cpi	r24, 0x01	; 1
    6996:	09 f0       	breq	.+2      	; 0x699a <_Z22Day_In_Bet_Schedullingh+0x2d8>
    6998:	54 cf       	rjmp	.-344    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    699a:	6a e5       	ldi	r22, 0x5A	; 90
    699c:	7c e1       	ldi	r23, 0x1C	; 28
    699e:	38 cf       	rjmp	.-400    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    69a0:	91 30       	cpi	r25, 0x01	; 1
    69a2:	51 f4       	brne	.+20     	; 0x69b8 <_Z22Day_In_Bet_Schedullingh+0x2f6>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    69a4:	6d e4       	ldi	r22, 0x4D	; 77
    69a6:	7c e1       	ldi	r23, 0x1C	; 28
    69a8:	82 e5       	ldi	r24, 0x52	; 82
    69aa:	94 e1       	ldi	r25, 0x14	; 20
    69ac:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    69b0:	82 e5       	ldi	r24, 0x52	; 82
    69b2:	94 e1       	ldi	r25, 0x14	; 20
    69b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    69b8:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    69bc:	db 30       	cpi	r29, 0x0B	; 11
    69be:	09 f0       	breq	.+2      	; 0x69c2 <_Z22Day_In_Bet_Schedullingh+0x300>
    69c0:	40 cf       	rjmp	.-384    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    69c2:	8f e1       	ldi	r24, 0x1F	; 31
    69c4:	89 1b       	sub	r24, r25
    69c6:	98 01       	movw	r18, r16
    69c8:	28 0f       	add	r18, r24
    69ca:	31 1d       	adc	r19, r1
    69cc:	2c 15       	cp	r18, r12
    69ce:	3d 05       	cpc	r19, r13
    69d0:	0c f4       	brge	.+2      	; 0x69d4 <_Z22Day_In_Bet_Schedullingh+0x312>
    69d2:	d3 c0       	rjmp	.+422    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    69d4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    69d8:	81 30       	cpi	r24, 0x01	; 1
    69da:	09 f0       	breq	.+2      	; 0x69de <_Z22Day_In_Bet_Schedullingh+0x31c>
    69dc:	32 cf       	rjmp	.-412    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    69de:	60 e4       	ldi	r22, 0x40	; 64
    69e0:	7c e1       	ldi	r23, 0x1C	; 28
    69e2:	16 cf       	rjmp	.-468    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    69e4:	8b 2d       	mov	r24, r11
    69e6:	83 70       	andi	r24, 0x03	; 3
    69e8:	11 f1       	breq	.+68     	; 0x6a2e <_Z22Day_In_Bet_Schedullingh+0x36c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    69ea:	91 30       	cpi	r25, 0x01	; 1
    69ec:	51 f4       	brne	.+20     	; 0x6a02 <_Z22Day_In_Bet_Schedullingh+0x340>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    69ee:	63 e3       	ldi	r22, 0x33	; 51
    69f0:	7c e1       	ldi	r23, 0x1C	; 28
    69f2:	82 e5       	ldi	r24, 0x52	; 82
    69f4:	94 e1       	ldi	r25, 0x14	; 20
    69f6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    69fa:	82 e5       	ldi	r24, 0x52	; 82
    69fc:	94 e1       	ldi	r25, 0x14	; 20
    69fe:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6a02:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6a06:	d3 30       	cpi	r29, 0x03	; 3
    6a08:	09 f0       	breq	.+2      	; 0x6a0c <_Z22Day_In_Bet_Schedullingh+0x34a>
    6a0a:	b7 c0       	rjmp	.+366    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6a0c:	8c e1       	ldi	r24, 0x1C	; 28
    6a0e:	89 1b       	sub	r24, r25
    6a10:	98 01       	movw	r18, r16
    6a12:	28 0f       	add	r18, r24
    6a14:	31 1d       	adc	r19, r1
    6a16:	2c 15       	cp	r18, r12
    6a18:	3d 05       	cpc	r19, r13
    6a1a:	0c f4       	brge	.+2      	; 0x6a1e <_Z22Day_In_Bet_Schedullingh+0x35c>
    6a1c:	ae c0       	rjmp	.+348    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a1e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6a22:	81 30       	cpi	r24, 0x01	; 1
    6a24:	09 f0       	breq	.+2      	; 0x6a28 <_Z22Day_In_Bet_Schedullingh+0x366>
    6a26:	0d cf       	rjmp	.-486    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6a28:	66 e2       	ldi	r22, 0x26	; 38
    6a2a:	7c e1       	ldi	r23, 0x1C	; 28
    6a2c:	cc c0       	rjmp	.+408    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
								}
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a2e:	91 30       	cpi	r25, 0x01	; 1
    6a30:	51 f4       	brne	.+20     	; 0x6a46 <_Z22Day_In_Bet_Schedullingh+0x384>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6a32:	69 e1       	ldi	r22, 0x19	; 25
    6a34:	7c e1       	ldi	r23, 0x1C	; 28
    6a36:	82 e5       	ldi	r24, 0x52	; 82
    6a38:	94 e1       	ldi	r25, 0x14	; 20
    6a3a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6a3e:	82 e5       	ldi	r24, 0x52	; 82
    6a40:	94 e1       	ldi	r25, 0x14	; 20
    6a42:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6a46:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6a4a:	d3 30       	cpi	r29, 0x03	; 3
    6a4c:	09 f0       	breq	.+2      	; 0x6a50 <_Z22Day_In_Bet_Schedullingh+0x38e>
    6a4e:	f9 ce       	rjmp	.-526    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6a50:	8d e1       	ldi	r24, 0x1D	; 29
    6a52:	89 1b       	sub	r24, r25
    6a54:	98 01       	movw	r18, r16
    6a56:	28 0f       	add	r18, r24
    6a58:	31 1d       	adc	r19, r1
    6a5a:	2c 15       	cp	r18, r12
    6a5c:	3d 05       	cpc	r19, r13
    6a5e:	0c f4       	brge	.+2      	; 0x6a62 <_Z22Day_In_Bet_Schedullingh+0x3a0>
    6a60:	8c c0       	rjmp	.+280    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a62:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6a66:	81 30       	cpi	r24, 0x01	; 1
    6a68:	09 f0       	breq	.+2      	; 0x6a6c <_Z22Day_In_Bet_Schedullingh+0x3aa>
    6a6a:	eb ce       	rjmp	.-554    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6a6c:	6c e0       	ldi	r22, 0x0C	; 12
    6a6e:	7c e1       	ldi	r23, 0x1C	; 28
    6a70:	aa c0       	rjmp	.+340    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a72:	91 30       	cpi	r25, 0x01	; 1
    6a74:	51 f4       	brne	.+20     	; 0x6a8a <_Z22Day_In_Bet_Schedullingh+0x3c8>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6a76:	6f ef       	ldi	r22, 0xFF	; 255
    6a78:	7b e1       	ldi	r23, 0x1B	; 27
    6a7a:	82 e5       	ldi	r24, 0x52	; 82
    6a7c:	94 e1       	ldi	r25, 0x14	; 20
    6a7e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a82:	82 e5       	ldi	r24, 0x52	; 82
    6a84:	94 e1       	ldi	r25, 0x14	; 20
    6a86:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6a8a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    6a8e:	d5 30       	cpi	r29, 0x05	; 5
    6a90:	09 f0       	breq	.+2      	; 0x6a94 <_Z22Day_In_Bet_Schedullingh+0x3d2>
    6a92:	73 c0       	rjmp	.+230    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a94:	8e e1       	ldi	r24, 0x1E	; 30
    6a96:	89 1b       	sub	r24, r25
    6a98:	98 01       	movw	r18, r16
    6a9a:	28 0f       	add	r18, r24
    6a9c:	31 1d       	adc	r19, r1
    6a9e:	2c 15       	cp	r18, r12
    6aa0:	3d 05       	cpc	r19, r13
    6aa2:	0c f4       	brge	.+2      	; 0x6aa6 <_Z22Day_In_Bet_Schedullingh+0x3e4>
    6aa4:	6a c0       	rjmp	.+212    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aa6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6aaa:	81 30       	cpi	r24, 0x01	; 1
    6aac:	09 f0       	breq	.+2      	; 0x6ab0 <_Z22Day_In_Bet_Schedullingh+0x3ee>
    6aae:	c9 ce       	rjmp	.-622    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6ab0:	62 ef       	ldi	r22, 0xF2	; 242
    6ab2:	7b e1       	ldi	r23, 0x1B	; 27
    6ab4:	ad ce       	rjmp	.-678    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ab6:	91 30       	cpi	r25, 0x01	; 1
    6ab8:	51 f4       	brne	.+20     	; 0x6ace <_Z22Day_In_Bet_Schedullingh+0x40c>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6aba:	65 ee       	ldi	r22, 0xE5	; 229
    6abc:	7b e1       	ldi	r23, 0x1B	; 27
    6abe:	82 e5       	ldi	r24, 0x52	; 82
    6ac0:	94 e1       	ldi	r25, 0x14	; 20
    6ac2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ac6:	82 e5       	ldi	r24, 0x52	; 82
    6ac8:	94 e1       	ldi	r25, 0x14	; 20
    6aca:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6ace:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    6ad2:	d7 30       	cpi	r29, 0x07	; 7
    6ad4:	09 f0       	breq	.+2      	; 0x6ad8 <_Z22Day_In_Bet_Schedullingh+0x416>
    6ad6:	51 c0       	rjmp	.+162    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ad8:	8e e1       	ldi	r24, 0x1E	; 30
    6ada:	89 1b       	sub	r24, r25
    6adc:	98 01       	movw	r18, r16
    6ade:	28 0f       	add	r18, r24
    6ae0:	31 1d       	adc	r19, r1
    6ae2:	2c 15       	cp	r18, r12
    6ae4:	3d 05       	cpc	r19, r13
    6ae6:	0c f4       	brge	.+2      	; 0x6aea <_Z22Day_In_Bet_Schedullingh+0x428>
    6ae8:	48 c0       	rjmp	.+144    	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aea:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6aee:	81 30       	cpi	r24, 0x01	; 1
    6af0:	09 f0       	breq	.+2      	; 0x6af4 <_Z22Day_In_Bet_Schedullingh+0x432>
    6af2:	a7 ce       	rjmp	.-690    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6af4:	68 ed       	ldi	r22, 0xD8	; 216
    6af6:	7b e1       	ldi	r23, 0x1B	; 27
    6af8:	8b ce       	rjmp	.-746    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6afa:	91 30       	cpi	r25, 0x01	; 1
    6afc:	51 f4       	brne	.+20     	; 0x6b12 <_Z22Day_In_Bet_Schedullingh+0x450>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6afe:	6b ec       	ldi	r22, 0xCB	; 203
    6b00:	7b e1       	ldi	r23, 0x1B	; 27
    6b02:	82 e5       	ldi	r24, 0x52	; 82
    6b04:	94 e1       	ldi	r25, 0x14	; 20
    6b06:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b0a:	82 e5       	ldi	r24, 0x52	; 82
    6b0c:	94 e1       	ldi	r25, 0x14	; 20
    6b0e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6b12:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    6b16:	da 30       	cpi	r29, 0x0A	; 10
    6b18:	81 f5       	brne	.+96     	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b1a:	8e e1       	ldi	r24, 0x1E	; 30
    6b1c:	89 1b       	sub	r24, r25
    6b1e:	98 01       	movw	r18, r16
    6b20:	28 0f       	add	r18, r24
    6b22:	31 1d       	adc	r19, r1
    6b24:	2c 15       	cp	r18, r12
    6b26:	3d 05       	cpc	r19, r13
    6b28:	44 f1       	brlt	.+80     	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b2a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6b2e:	81 30       	cpi	r24, 0x01	; 1
    6b30:	09 f0       	breq	.+2      	; 0x6b34 <_Z22Day_In_Bet_Schedullingh+0x472>
    6b32:	87 ce       	rjmp	.-754    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6b34:	6e eb       	ldi	r22, 0xBE	; 190
    6b36:	7b e1       	ldi	r23, 0x1B	; 27
    6b38:	6b ce       	rjmp	.-810    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b3a:	91 30       	cpi	r25, 0x01	; 1
    6b3c:	51 f4       	brne	.+20     	; 0x6b52 <_Z22Day_In_Bet_Schedullingh+0x490>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6b3e:	61 eb       	ldi	r22, 0xB1	; 177
    6b40:	7b e1       	ldi	r23, 0x1B	; 27
    6b42:	82 e5       	ldi	r24, 0x52	; 82
    6b44:	94 e1       	ldi	r25, 0x14	; 20
    6b46:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b4a:	82 e5       	ldi	r24, 0x52	; 82
    6b4c:	94 e1       	ldi	r25, 0x14	; 20
    6b4e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6b52:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    6b56:	dc 30       	cpi	r29, 0x0C	; 12
    6b58:	81 f4       	brne	.+32     	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b5a:	8e e1       	ldi	r24, 0x1E	; 30
    6b5c:	89 1b       	sub	r24, r25
    6b5e:	98 01       	movw	r18, r16
    6b60:	28 0f       	add	r18, r24
    6b62:	31 1d       	adc	r19, r1
    6b64:	2c 15       	cp	r18, r12
    6b66:	3d 05       	cpc	r19, r13
    6b68:	44 f0       	brlt	.+16     	; 0x6b7a <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b6a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6b6e:	81 30       	cpi	r24, 0x01	; 1
    6b70:	09 f0       	breq	.+2      	; 0x6b74 <_Z22Day_In_Bet_Schedullingh+0x4b2>
    6b72:	67 ce       	rjmp	.-818    	; 0x6842 <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6b74:	64 ea       	ldi	r22, 0xA4	; 164
    6b76:	7b e1       	ldi	r23, 0x1B	; 27
    6b78:	4b ce       	rjmp	.-874    	; 0x6810 <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b7a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6b7e:	81 30       	cpi	r24, 0x01	; 1
    6b80:	79 f4       	brne	.+30     	; 0x6ba0 <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6b82:	66 e9       	ldi	r22, 0x96	; 150
    6b84:	7b e1       	ldi	r23, 0x1B	; 27
    6b86:	04 c0       	rjmp	.+8      	; 0x6b90 <_Z22Day_In_Bet_Schedullingh+0x4ce>
					_kSERIAL_MON_CLEAR();
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b88:	91 30       	cpi	r25, 0x01	; 1
    6b8a:	51 f4       	brne	.+20     	; 0x6ba0 <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6b8c:	68 e8       	ldi	r22, 0x88	; 136
    6b8e:	7b e1       	ldi	r23, 0x1B	; 27
    6b90:	82 e5       	ldi	r24, 0x52	; 82
    6b92:	94 e1       	ldi	r25, 0x14	; 20
    6b94:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6b98:	82 e5       	ldi	r24, 0x52	; 82
    6b9a:	94 e1       	ldi	r25, 0x14	; 20
    6b9c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		
		//printf("\n");
		
		Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    6ba0:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <_sSchedules+0xa>
    6ba4:	f1 2c       	mov	r15, r1
    6ba6:	97 01       	movw	r18, r14
    6ba8:	28 0f       	add	r18, r24
    6baa:	31 1d       	adc	r19, r1
    6bac:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6bb0:	02 17       	cp	r16, r18
    6bb2:	13 07       	cpc	r17, r19
    6bb4:	1c f1       	brlt	.+70     	; 0x6bfc <_Z22Day_In_Bet_Schedullingh+0x53a>
    6bb6:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6bba:	d8 13       	cpse	r29, r24
    6bbc:	1f c0       	rjmp	.+62     	; 0x6bfc <_Z22Day_In_Bet_Schedullingh+0x53a>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bbe:	c1 30       	cpi	r28, 0x01	; 1
    6bc0:	d9 f4       	brne	.+54     	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6bc2:	6b e7       	ldi	r22, 0x7B	; 123
    6bc4:	7b e1       	ldi	r23, 0x1B	; 27
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6bc6:	82 e5       	ldi	r24, 0x52	; 82
    6bc8:	94 e1       	ldi	r25, 0x14	; 20
    6bca:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6bce:	82 e5       	ldi	r24, 0x52	; 82
    6bd0:	94 e1       	ldi	r25, 0x14	; 20
    6bd2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    6bd6:	36 ce       	rjmp	.-916    	; 0x6844 <_Z22Day_In_Bet_Schedullingh+0x182>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bd8:	c1 30       	cpi	r28, 0x01	; 1
    6bda:	51 f4       	brne	.+20     	; 0x6bf0 <_Z22Day_In_Bet_Schedullingh+0x52e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6bdc:	6e e6       	ldi	r22, 0x6E	; 110
    6bde:	7b e1       	ldi	r23, 0x1B	; 27
    6be0:	82 e5       	ldi	r24, 0x52	; 82
    6be2:	94 e1       	ldi	r25, 0x14	; 20
    6be4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6be8:	82 e5       	ldi	r24, 0x52	; 82
    6bea:	94 e1       	ldi	r25, 0x14	; 20
    6bec:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6bf0:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJAN)
    6bf4:	d1 30       	cpi	r29, 0x01	; 1
    6bf6:	b9 f0       	breq	.+46     	; 0x6c26 <_Z22Day_In_Bet_Schedullingh+0x564>
								return 1;
							}
						}
						else
						{
							return 1;
    6bf8:	c1 e0       	ldi	r28, 0x01	; 1
    6bfa:	24 ce       	rjmp	.-952    	; 0x6844 <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			return 1;
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6bfc:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <_sSchedules+0xb>
    6c00:	d8 17       	cp	r29, r24
    6c02:	09 f4       	brne	.+2      	; 0x6c06 <_Z22Day_In_Bet_Schedullingh+0x544>
    6c04:	ba c1       	rjmp	.+884    	; 0x6f7a <_Z22Day_In_Bet_Schedullingh+0x8b8>
			{
				switch(_sSchedules.Irrigating_Month)
    6c06:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <_sSchedules+0xb>
    6c0a:	8e 2f       	mov	r24, r30
    6c0c:	90 e0       	ldi	r25, 0x00	; 0
    6c0e:	fc 01       	movw	r30, r24
    6c10:	31 97       	sbiw	r30, 0x01	; 1
    6c12:	ec 30       	cpi	r30, 0x0C	; 12
    6c14:	f1 05       	cpc	r31, r1
    6c16:	08 f0       	brcs	.+2      	; 0x6c1a <_Z22Day_In_Bet_Schedullingh+0x558>
    6c18:	a1 c1       	rjmp	.+834    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
    6c1a:	88 27       	eor	r24, r24
    6c1c:	e3 55       	subi	r30, 0x53	; 83
    6c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    6c20:	8f 4f       	sbci	r24, 0xFF	; 255
    6c22:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eJAN)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6c26:	8f e1       	ldi	r24, 0x1F	; 31
    6c28:	89 1b       	sub	r24, r25
    6c2a:	08 0f       	add	r16, r24
    6c2c:	11 1d       	adc	r17, r1
    6c2e:	0e 15       	cp	r16, r14
    6c30:	1f 05       	cpc	r17, r15
    6c32:	0c f4       	brge	.+2      	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x574>
    6c34:	93 c1       	rjmp	.+806    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c36:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6c3a:	c1 30       	cpi	r28, 0x01	; 1
    6c3c:	e9 f6       	brne	.-70     	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6c3e:	61 e6       	ldi	r22, 0x61	; 97
    6c40:	7b e1       	ldi	r23, 0x1B	; 27
    6c42:	c1 cf       	rjmp	.-126    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c44:	c1 30       	cpi	r28, 0x01	; 1
    6c46:	51 f4       	brne	.+20     	; 0x6c5c <_Z22Day_In_Bet_Schedullingh+0x59a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6c48:	64 e5       	ldi	r22, 0x54	; 84
    6c4a:	7b e1       	ldi	r23, 0x1B	; 27
    6c4c:	82 e5       	ldi	r24, 0x52	; 82
    6c4e:	94 e1       	ldi	r25, 0x14	; 20
    6c50:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6c54:	82 e5       	ldi	r24, 0x52	; 82
    6c56:	94 e1       	ldi	r25, 0x14	; 20
    6c58:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6c5c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eFEB)
    6c60:	d2 30       	cpi	r29, 0x02	; 2
    6c62:	51 f6       	brne	.-108    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6c64:	8f e1       	ldi	r24, 0x1F	; 31
    6c66:	89 1b       	sub	r24, r25
    6c68:	08 0f       	add	r16, r24
    6c6a:	11 1d       	adc	r17, r1
    6c6c:	0e 15       	cp	r16, r14
    6c6e:	1f 05       	cpc	r17, r15
    6c70:	0c f4       	brge	.+2      	; 0x6c74 <_Z22Day_In_Bet_Schedullingh+0x5b2>
    6c72:	74 c1       	rjmp	.+744    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c74:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6c78:	c1 30       	cpi	r28, 0x01	; 1
    6c7a:	09 f0       	breq	.+2      	; 0x6c7e <_Z22Day_In_Bet_Schedullingh+0x5bc>
    6c7c:	bd cf       	rjmp	.-134    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6c7e:	67 e4       	ldi	r22, 0x47	; 71
    6c80:	7b e1       	ldi	r23, 0x1B	; 27
    6c82:	a1 cf       	rjmp	.-190    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c84:	c1 30       	cpi	r28, 0x01	; 1
    6c86:	51 f4       	brne	.+20     	; 0x6c9c <_Z22Day_In_Bet_Schedullingh+0x5da>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6c88:	6a e3       	ldi	r22, 0x3A	; 58
    6c8a:	7b e1       	ldi	r23, 0x1B	; 27
    6c8c:	82 e5       	ldi	r24, 0x52	; 82
    6c8e:	94 e1       	ldi	r25, 0x14	; 20
    6c90:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6c94:	82 e5       	ldi	r24, 0x52	; 82
    6c96:	94 e1       	ldi	r25, 0x14	; 20
    6c98:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6c9c:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAPR)
    6ca0:	d4 30       	cpi	r29, 0x04	; 4
    6ca2:	09 f0       	breq	.+2      	; 0x6ca6 <_Z22Day_In_Bet_Schedullingh+0x5e4>
    6ca4:	a9 cf       	rjmp	.-174    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ca6:	8f e1       	ldi	r24, 0x1F	; 31
    6ca8:	89 1b       	sub	r24, r25
    6caa:	08 0f       	add	r16, r24
    6cac:	11 1d       	adc	r17, r1
    6cae:	0e 15       	cp	r16, r14
    6cb0:	1f 05       	cpc	r17, r15
    6cb2:	0c f4       	brge	.+2      	; 0x6cb6 <_Z22Day_In_Bet_Schedullingh+0x5f4>
    6cb4:	53 c1       	rjmp	.+678    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cb6:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6cba:	c1 30       	cpi	r28, 0x01	; 1
    6cbc:	09 f0       	breq	.+2      	; 0x6cc0 <_Z22Day_In_Bet_Schedullingh+0x5fe>
    6cbe:	9c cf       	rjmp	.-200    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6cc0:	6d e2       	ldi	r22, 0x2D	; 45
    6cc2:	7b e1       	ldi	r23, 0x1B	; 27
    6cc4:	80 cf       	rjmp	.-256    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cc6:	c1 30       	cpi	r28, 0x01	; 1
    6cc8:	51 f4       	brne	.+20     	; 0x6cde <_Z22Day_In_Bet_Schedullingh+0x61c>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6cca:	60 e2       	ldi	r22, 0x20	; 32
    6ccc:	7b e1       	ldi	r23, 0x1B	; 27
    6cce:	82 e5       	ldi	r24, 0x52	; 82
    6cd0:	94 e1       	ldi	r25, 0x14	; 20
    6cd2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6cd6:	82 e5       	ldi	r24, 0x52	; 82
    6cd8:	94 e1       	ldi	r25, 0x14	; 20
    6cda:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6cde:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUN)
    6ce2:	d6 30       	cpi	r29, 0x06	; 6
    6ce4:	09 f0       	breq	.+2      	; 0x6ce8 <_Z22Day_In_Bet_Schedullingh+0x626>
    6ce6:	88 cf       	rjmp	.-240    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ce8:	8f e1       	ldi	r24, 0x1F	; 31
    6cea:	89 1b       	sub	r24, r25
    6cec:	08 0f       	add	r16, r24
    6cee:	11 1d       	adc	r17, r1
    6cf0:	0e 15       	cp	r16, r14
    6cf2:	1f 05       	cpc	r17, r15
    6cf4:	0c f4       	brge	.+2      	; 0x6cf8 <_Z22Day_In_Bet_Schedullingh+0x636>
    6cf6:	32 c1       	rjmp	.+612    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cf8:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6cfc:	c1 30       	cpi	r28, 0x01	; 1
    6cfe:	09 f0       	breq	.+2      	; 0x6d02 <_Z22Day_In_Bet_Schedullingh+0x640>
    6d00:	7b cf       	rjmp	.-266    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6d02:	63 e1       	ldi	r22, 0x13	; 19
    6d04:	7b e1       	ldi	r23, 0x1B	; 27
    6d06:	5f cf       	rjmp	.-322    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d08:	c1 30       	cpi	r28, 0x01	; 1
    6d0a:	51 f4       	brne	.+20     	; 0x6d20 <_Z22Day_In_Bet_Schedullingh+0x65e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6d0c:	66 e0       	ldi	r22, 0x06	; 6
    6d0e:	7b e1       	ldi	r23, 0x1B	; 27
    6d10:	82 e5       	ldi	r24, 0x52	; 82
    6d12:	94 e1       	ldi	r25, 0x14	; 20
    6d14:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d18:	82 e5       	ldi	r24, 0x52	; 82
    6d1a:	94 e1       	ldi	r25, 0x14	; 20
    6d1c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6d20:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eAUG)
    6d24:	d8 30       	cpi	r29, 0x08	; 8
    6d26:	09 f0       	breq	.+2      	; 0x6d2a <_Z22Day_In_Bet_Schedullingh+0x668>
    6d28:	67 cf       	rjmp	.-306    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d2a:	8f e1       	ldi	r24, 0x1F	; 31
    6d2c:	89 1b       	sub	r24, r25
    6d2e:	08 0f       	add	r16, r24
    6d30:	11 1d       	adc	r17, r1
    6d32:	0e 15       	cp	r16, r14
    6d34:	1f 05       	cpc	r17, r15
    6d36:	0c f4       	brge	.+2      	; 0x6d3a <_Z22Day_In_Bet_Schedullingh+0x678>
    6d38:	11 c1       	rjmp	.+546    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d3a:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6d3e:	c1 30       	cpi	r28, 0x01	; 1
    6d40:	09 f0       	breq	.+2      	; 0x6d44 <_Z22Day_In_Bet_Schedullingh+0x682>
    6d42:	5a cf       	rjmp	.-332    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6d44:	69 ef       	ldi	r22, 0xF9	; 249
    6d46:	7a e1       	ldi	r23, 0x1A	; 26
    6d48:	3e cf       	rjmp	.-388    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d4a:	c1 30       	cpi	r28, 0x01	; 1
    6d4c:	51 f4       	brne	.+20     	; 0x6d62 <_Z22Day_In_Bet_Schedullingh+0x6a0>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6d4e:	6c ee       	ldi	r22, 0xEC	; 236
    6d50:	7a e1       	ldi	r23, 0x1A	; 26
    6d52:	82 e5       	ldi	r24, 0x52	; 82
    6d54:	94 e1       	ldi	r25, 0x14	; 20
    6d56:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d5a:	82 e5       	ldi	r24, 0x52	; 82
    6d5c:	94 e1       	ldi	r25, 0x14	; 20
    6d5e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6d62:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eSEP)
    6d66:	d9 30       	cpi	r29, 0x09	; 9
    6d68:	09 f0       	breq	.+2      	; 0x6d6c <_Z22Day_In_Bet_Schedullingh+0x6aa>
    6d6a:	46 cf       	rjmp	.-372    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d6c:	8f e1       	ldi	r24, 0x1F	; 31
    6d6e:	89 1b       	sub	r24, r25
    6d70:	08 0f       	add	r16, r24
    6d72:	11 1d       	adc	r17, r1
    6d74:	0e 15       	cp	r16, r14
    6d76:	1f 05       	cpc	r17, r15
    6d78:	0c f4       	brge	.+2      	; 0x6d7c <_Z22Day_In_Bet_Schedullingh+0x6ba>
    6d7a:	f0 c0       	rjmp	.+480    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d7c:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6d80:	c1 30       	cpi	r28, 0x01	; 1
    6d82:	09 f0       	breq	.+2      	; 0x6d86 <_Z22Day_In_Bet_Schedullingh+0x6c4>
    6d84:	39 cf       	rjmp	.-398    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6d86:	6f ed       	ldi	r22, 0xDF	; 223
    6d88:	7a e1       	ldi	r23, 0x1A	; 26
    6d8a:	1d cf       	rjmp	.-454    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d8c:	c1 30       	cpi	r28, 0x01	; 1
    6d8e:	51 f4       	brne	.+20     	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x6e2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6d90:	62 ed       	ldi	r22, 0xD2	; 210
    6d92:	7a e1       	ldi	r23, 0x1A	; 26
    6d94:	82 e5       	ldi	r24, 0x52	; 82
    6d96:	94 e1       	ldi	r25, 0x14	; 20
    6d98:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d9c:	82 e5       	ldi	r24, 0x52	; 82
    6d9e:	94 e1       	ldi	r25, 0x14	; 20
    6da0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6da4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eNOV)
    6da8:	db 30       	cpi	r29, 0x0B	; 11
    6daa:	09 f0       	breq	.+2      	; 0x6dae <_Z22Day_In_Bet_Schedullingh+0x6ec>
    6dac:	25 cf       	rjmp	.-438    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6dae:	8f e1       	ldi	r24, 0x1F	; 31
    6db0:	89 1b       	sub	r24, r25
    6db2:	08 0f       	add	r16, r24
    6db4:	11 1d       	adc	r17, r1
    6db6:	0e 15       	cp	r16, r14
    6db8:	1f 05       	cpc	r17, r15
    6dba:	0c f4       	brge	.+2      	; 0x6dbe <_Z22Day_In_Bet_Schedullingh+0x6fc>
    6dbc:	cf c0       	rjmp	.+414    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6dbe:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6dc2:	c1 30       	cpi	r28, 0x01	; 1
    6dc4:	09 f0       	breq	.+2      	; 0x6dc8 <_Z22Day_In_Bet_Schedullingh+0x706>
    6dc6:	18 cf       	rjmp	.-464    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6dc8:	65 ec       	ldi	r22, 0xC5	; 197
    6dca:	7a e1       	ldi	r23, 0x1A	; 26
    6dcc:	fc ce       	rjmp	.-520    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6dce:	8b 2d       	mov	r24, r11
    6dd0:	83 70       	andi	r24, 0x03	; 3
    6dd2:	09 f1       	breq	.+66     	; 0x6e16 <_Z22Day_In_Bet_Schedullingh+0x754>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6dd4:	c1 30       	cpi	r28, 0x01	; 1
    6dd6:	51 f4       	brne	.+20     	; 0x6dec <_Z22Day_In_Bet_Schedullingh+0x72a>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6dd8:	68 eb       	ldi	r22, 0xB8	; 184
    6dda:	7a e1       	ldi	r23, 0x1A	; 26
    6ddc:	82 e5       	ldi	r24, 0x52	; 82
    6dde:	94 e1       	ldi	r25, 0x14	; 20
    6de0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6de4:	82 e5       	ldi	r24, 0x52	; 82
    6de6:	94 e1       	ldi	r25, 0x14	; 20
    6de8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6dec:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6df0:	d3 30       	cpi	r29, 0x03	; 3
    6df2:	09 f0       	breq	.+2      	; 0x6df6 <_Z22Day_In_Bet_Schedullingh+0x734>
    6df4:	01 cf       	rjmp	.-510    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6df6:	8c e1       	ldi	r24, 0x1C	; 28
    6df8:	89 1b       	sub	r24, r25
    6dfa:	08 0f       	add	r16, r24
    6dfc:	11 1d       	adc	r17, r1
    6dfe:	0e 15       	cp	r16, r14
    6e00:	1f 05       	cpc	r17, r15
    6e02:	0c f4       	brge	.+2      	; 0x6e06 <_Z22Day_In_Bet_Schedullingh+0x744>
    6e04:	ab c0       	rjmp	.+342    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e06:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6e0a:	c1 30       	cpi	r28, 0x01	; 1
    6e0c:	09 f0       	breq	.+2      	; 0x6e10 <_Z22Day_In_Bet_Schedullingh+0x74e>
    6e0e:	f4 ce       	rjmp	.-536    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6e10:	6b ea       	ldi	r22, 0xAB	; 171
    6e12:	7a e1       	ldi	r23, 0x1A	; 26
    6e14:	d8 ce       	rjmp	.-592    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
								return 1;
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e16:	c1 30       	cpi	r28, 0x01	; 1
    6e18:	51 f4       	brne	.+20     	; 0x6e2e <_Z22Day_In_Bet_Schedullingh+0x76c>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6e1a:	6e e9       	ldi	r22, 0x9E	; 158
    6e1c:	7a e1       	ldi	r23, 0x1A	; 26
    6e1e:	82 e5       	ldi	r24, 0x52	; 82
    6e20:	94 e1       	ldi	r25, 0x14	; 20
    6e22:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6e26:	82 e5       	ldi	r24, 0x52	; 82
    6e28:	94 e1       	ldi	r25, 0x14	; 20
    6e2a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6e2e:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6e32:	d3 30       	cpi	r29, 0x03	; 3
    6e34:	09 f0       	breq	.+2      	; 0x6e38 <_Z22Day_In_Bet_Schedullingh+0x776>
    6e36:	e0 ce       	rjmp	.-576    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6e38:	8d e1       	ldi	r24, 0x1D	; 29
    6e3a:	89 1b       	sub	r24, r25
    6e3c:	08 0f       	add	r16, r24
    6e3e:	11 1d       	adc	r17, r1
    6e40:	0e 15       	cp	r16, r14
    6e42:	1f 05       	cpc	r17, r15
    6e44:	0c f4       	brge	.+2      	; 0x6e48 <_Z22Day_In_Bet_Schedullingh+0x786>
    6e46:	8a c0       	rjmp	.+276    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e48:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6e4c:	c1 30       	cpi	r28, 0x01	; 1
    6e4e:	09 f0       	breq	.+2      	; 0x6e52 <_Z22Day_In_Bet_Schedullingh+0x790>
    6e50:	d3 ce       	rjmp	.-602    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6e52:	61 e9       	ldi	r22, 0x91	; 145
    6e54:	7a e1       	ldi	r23, 0x1A	; 26
    6e56:	b7 ce       	rjmp	.-658    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e58:	c1 30       	cpi	r28, 0x01	; 1
    6e5a:	51 f4       	brne	.+20     	; 0x6e70 <_Z22Day_In_Bet_Schedullingh+0x7ae>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6e5c:	64 e8       	ldi	r22, 0x84	; 132
    6e5e:	7a e1       	ldi	r23, 0x1A	; 26
    6e60:	82 e5       	ldi	r24, 0x52	; 82
    6e62:	94 e1       	ldi	r25, 0x14	; 20
    6e64:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e68:	82 e5       	ldi	r24, 0x52	; 82
    6e6a:	94 e1       	ldi	r25, 0x14	; 20
    6e6c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6e70:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eMAY)
    6e74:	d5 30       	cpi	r29, 0x05	; 5
    6e76:	09 f0       	breq	.+2      	; 0x6e7a <_Z22Day_In_Bet_Schedullingh+0x7b8>
    6e78:	bf ce       	rjmp	.-642    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e7a:	8e e1       	ldi	r24, 0x1E	; 30
    6e7c:	89 1b       	sub	r24, r25
    6e7e:	08 0f       	add	r16, r24
    6e80:	11 1d       	adc	r17, r1
    6e82:	0e 15       	cp	r16, r14
    6e84:	1f 05       	cpc	r17, r15
    6e86:	0c f4       	brge	.+2      	; 0x6e8a <_Z22Day_In_Bet_Schedullingh+0x7c8>
    6e88:	69 c0       	rjmp	.+210    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e8a:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6e8e:	c1 30       	cpi	r28, 0x01	; 1
    6e90:	09 f0       	breq	.+2      	; 0x6e94 <_Z22Day_In_Bet_Schedullingh+0x7d2>
    6e92:	b2 ce       	rjmp	.-668    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6e94:	67 e7       	ldi	r22, 0x77	; 119
    6e96:	7a e1       	ldi	r23, 0x1A	; 26
    6e98:	96 ce       	rjmp	.-724    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e9a:	c1 30       	cpi	r28, 0x01	; 1
    6e9c:	51 f4       	brne	.+20     	; 0x6eb2 <_Z22Day_In_Bet_Schedullingh+0x7f0>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6e9e:	6a e6       	ldi	r22, 0x6A	; 106
    6ea0:	7a e1       	ldi	r23, 0x1A	; 26
    6ea2:	82 e5       	ldi	r24, 0x52	; 82
    6ea4:	94 e1       	ldi	r25, 0x14	; 20
    6ea6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6eaa:	82 e5       	ldi	r24, 0x52	; 82
    6eac:	94 e1       	ldi	r25, 0x14	; 20
    6eae:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6eb2:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eJUL)
    6eb6:	d7 30       	cpi	r29, 0x07	; 7
    6eb8:	09 f0       	breq	.+2      	; 0x6ebc <_Z22Day_In_Bet_Schedullingh+0x7fa>
    6eba:	9e ce       	rjmp	.-708    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ebc:	8e e1       	ldi	r24, 0x1E	; 30
    6ebe:	89 1b       	sub	r24, r25
    6ec0:	08 0f       	add	r16, r24
    6ec2:	11 1d       	adc	r17, r1
    6ec4:	0e 15       	cp	r16, r14
    6ec6:	1f 05       	cpc	r17, r15
    6ec8:	0c f4       	brge	.+2      	; 0x6ecc <_Z22Day_In_Bet_Schedullingh+0x80a>
    6eca:	48 c0       	rjmp	.+144    	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ecc:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6ed0:	c1 30       	cpi	r28, 0x01	; 1
    6ed2:	09 f0       	breq	.+2      	; 0x6ed6 <_Z22Day_In_Bet_Schedullingh+0x814>
    6ed4:	91 ce       	rjmp	.-734    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6ed6:	6d e5       	ldi	r22, 0x5D	; 93
    6ed8:	7a e1       	ldi	r23, 0x1A	; 26
    6eda:	75 ce       	rjmp	.-790    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6edc:	c1 30       	cpi	r28, 0x01	; 1
    6ede:	51 f4       	brne	.+20     	; 0x6ef4 <_Z22Day_In_Bet_Schedullingh+0x832>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6ee0:	60 e5       	ldi	r22, 0x50	; 80
    6ee2:	7a e1       	ldi	r23, 0x1A	; 26
    6ee4:	82 e5       	ldi	r24, 0x52	; 82
    6ee6:	94 e1       	ldi	r25, 0x14	; 20
    6ee8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6eec:	82 e5       	ldi	r24, 0x52	; 82
    6eee:	94 e1       	ldi	r25, 0x14	; 20
    6ef0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6ef4:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eOCT)
    6ef8:	da 30       	cpi	r29, 0x0A	; 10
    6efa:	09 f0       	breq	.+2      	; 0x6efe <_Z22Day_In_Bet_Schedullingh+0x83c>
    6efc:	7d ce       	rjmp	.-774    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6efe:	8e e1       	ldi	r24, 0x1E	; 30
    6f00:	89 1b       	sub	r24, r25
    6f02:	08 0f       	add	r16, r24
    6f04:	11 1d       	adc	r17, r1
    6f06:	0e 15       	cp	r16, r14
    6f08:	1f 05       	cpc	r17, r15
    6f0a:	44 f1       	brlt	.+80     	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f0c:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6f10:	c1 30       	cpi	r28, 0x01	; 1
    6f12:	09 f0       	breq	.+2      	; 0x6f16 <_Z22Day_In_Bet_Schedullingh+0x854>
    6f14:	71 ce       	rjmp	.-798    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6f16:	63 e4       	ldi	r22, 0x43	; 67
    6f18:	7a e1       	ldi	r23, 0x1A	; 26
    6f1a:	55 ce       	rjmp	.-854    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f1c:	c1 30       	cpi	r28, 0x01	; 1
    6f1e:	51 f4       	brne	.+20     	; 0x6f34 <_Z22Day_In_Bet_Schedullingh+0x872>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6f20:	66 e3       	ldi	r22, 0x36	; 54
    6f22:	7a e1       	ldi	r23, 0x1A	; 26
    6f24:	82 e5       	ldi	r24, 0x52	; 82
    6f26:	94 e1       	ldi	r25, 0x14	; 20
    6f28:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f2c:	82 e5       	ldi	r24, 0x52	; 82
    6f2e:	94 e1       	ldi	r25, 0x14	; 20
    6f30:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6f34:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
						
						if(month == _eDEC)
    6f38:	dc 30       	cpi	r29, 0x0C	; 12
    6f3a:	09 f0       	breq	.+2      	; 0x6f3e <_Z22Day_In_Bet_Schedullingh+0x87c>
    6f3c:	5d ce       	rjmp	.-838    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f3e:	8e e1       	ldi	r24, 0x1E	; 30
    6f40:	89 1b       	sub	r24, r25
    6f42:	08 0f       	add	r16, r24
    6f44:	11 1d       	adc	r17, r1
    6f46:	0e 15       	cp	r16, r14
    6f48:	1f 05       	cpc	r17, r15
    6f4a:	44 f0       	brlt	.+16     	; 0x6f5c <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f4c:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6f50:	c1 30       	cpi	r28, 0x01	; 1
    6f52:	09 f0       	breq	.+2      	; 0x6f56 <_Z22Day_In_Bet_Schedullingh+0x894>
    6f54:	51 ce       	rjmp	.-862    	; 0x6bf8 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6f56:	69 e2       	ldi	r22, 0x29	; 41
    6f58:	7a e1       	ldi	r23, 0x1A	; 26
    6f5a:	35 ce       	rjmp	.-918    	; 0x6bc6 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f5c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6f60:	81 30       	cpi	r24, 0x01	; 1
    6f62:	c1 f4       	brne	.+48     	; 0x6f94 <_Z22Day_In_Bet_Schedullingh+0x8d2>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6f64:	6b e1       	ldi	r22, 0x1B	; 27
    6f66:	7a e1       	ldi	r23, 0x1A	; 26
    6f68:	82 e5       	ldi	r24, 0x52	; 82
    6f6a:	94 e1       	ldi	r25, 0x14	; 20
    6f6c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6f70:	82 e5       	ldi	r24, 0x52	; 82
    6f72:	94 e1       	ldi	r25, 0x14	; 20
    6f74:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    6f78:	0d c0       	rjmp	.+26     	; 0x6f94 <_Z22Day_In_Bet_Schedullingh+0x8d2>
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f7a:	c1 30       	cpi	r28, 0x01	; 1
    6f7c:	61 f4       	brne	.+24     	; 0x6f96 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6f7e:	6d e0       	ldi	r22, 0x0D	; 13
    6f80:	7a e1       	ldi	r23, 0x1A	; 26
    6f82:	82 e5       	ldi	r24, 0x52	; 82
    6f84:	94 e1       	ldi	r25, 0x14	; 20
    6f86:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6f8a:	82 e5       	ldi	r24, 0x52	; 82
    6f8c:	94 e1       	ldi	r25, 0x14	; 20
    6f8e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    6f92:	01 c0       	rjmp	.+2      	; 0x6f96 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				//printf("deny 4");
				return 0;
			}
			
		}
}
    6f94:	02 c0       	rjmp	.+4      	; 0x6f9a <_Z22Day_In_Bet_Schedullingh+0x8d8>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
					_kSERIAL_MON_CLEAR();
				}
				//printf("deny 4");
				return 0;
    6f96:	c0 e0       	ldi	r28, 0x00	; 0
    6f98:	55 cc       	rjmp	.-1878   	; 0x6844 <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			
		}
}
    6f9a:	df 91       	pop	r29
    6f9c:	cf 91       	pop	r28
    6f9e:	1f 91       	pop	r17
    6fa0:	0f 91       	pop	r16
    6fa2:	ff 90       	pop	r15
    6fa4:	ef 90       	pop	r14
    6fa6:	df 90       	pop	r13
    6fa8:	cf 90       	pop	r12
    6faa:	bf 90       	pop	r11
    6fac:	08 95       	ret

00006fae <_Z22Day_In_Bet_Schedullinghhh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules, unsigned char last_schedule_date,
unsigned char last_schedule_month)
{
    6fae:	7f 92       	push	r7
    6fb0:	8f 92       	push	r8
    6fb2:	9f 92       	push	r9
    6fb4:	af 92       	push	r10
    6fb6:	bf 92       	push	r11
    6fb8:	cf 92       	push	r12
    6fba:	df 92       	push	r13
    6fbc:	ef 92       	push	r14
    6fbe:	ff 92       	push	r15
    6fc0:	0f 93       	push	r16
    6fc2:	1f 93       	push	r17
    6fc4:	cf 93       	push	r28
    6fc6:	df 93       	push	r29
    6fc8:	c8 2e       	mov	r12, r24
    6fca:	f6 2e       	mov	r15, r22
    6fcc:	74 2e       	mov	r7, r20
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fce:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    6fd2:	81 30       	cpi	r24, 0x01	; 1
    6fd4:	69 f4       	brne	.+26     	; 0x6ff0 <_Z22Day_In_Bet_Schedullinghhh+0x42>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
    6fd6:	6a ef       	ldi	r22, 0xFA	; 250
    6fd8:	79 e1       	ldi	r23, 0x19	; 25
    6fda:	82 e5       	ldi	r24, 0x52	; 82
    6fdc:	94 e1       	ldi	r25, 0x14	; 20
    6fde:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(Days_In_Between_Schedules);
    6fe2:	4a e0       	ldi	r20, 0x0A	; 10
    6fe4:	50 e0       	ldi	r21, 0x00	; 0
    6fe6:	6c 2d       	mov	r22, r12
    6fe8:	82 e5       	ldi	r24, 0x52	; 82
    6fea:	94 e1       	ldi	r25, 0x14	; 20
    6fec:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
	}
	
	
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6ff0:	e0 90 78 13 	lds	r14, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
	
	if(_sSchedules.Started_Date != 0)
    6ff4:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    6ff8:	88 23       	and	r24, r24
    6ffa:	71 f0       	breq	.+28     	; 0x7018 <_Z22Day_In_Bet_Schedullinghhh+0x6a>
	{
		if(_sSchedules.Which_Sheduler_Is_Running == 1)
    6ffc:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7000:	81 30       	cpi	r24, 0x01	; 1
    7002:	29 f4       	brne	.+10     	; 0x700e <_Z22Day_In_Bet_Schedullinghhh+0x60>
		{
			date  = _sSchedules.Started_Date;
    7004:	00 91 2a 09 	lds	r16, 0x092A	; 0x80092a <_sSchedules+0xc>
			month = _sSchedules.Started_Month;
    7008:	d0 91 2b 09 	lds	r29, 0x092B	; 0x80092b <_sSchedules+0xd>
    700c:	09 c0       	rjmp	.+18     	; 0x7020 <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		else
		{
			date  = _sSchedules.First_Schedule_Irrigated_Date;
    700e:	00 91 90 0b 	lds	r16, 0x0B90	; 0x800b90 <_sSchedules+0x272>
			month = _sSchedules.First_Schedule_Irrigated_Month;
    7012:	d0 91 91 0b 	lds	r29, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    7016:	04 c0       	rjmp	.+8      	; 0x7020 <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		
	}
	else
	{
		date  = _sRuble_Parameters.Update_Local_Date[0];
    7018:	00 91 76 13 	lds	r16, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
		month = _sRuble_Parameters.Update_Local_Date[1];
    701c:	d0 91 77 13 	lds	r29, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
	}
	
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
    7020:	aa 24       	eor	r10, r10
    7022:	a3 94       	inc	r10
    7024:	ac 0c       	add	r10, r12
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7026:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    702a:	81 30       	cpi	r24, 0x01	; 1
    702c:	09 f0       	breq	.+2      	; 0x7030 <_Z22Day_In_Bet_Schedullinghhh+0x82>
    702e:	71 c0       	rjmp	.+226    	; 0x7112 <_Z22Day_In_Bet_Schedullinghhh+0x164>
	{
		_kSERAIL_MON_WRITE("date : ");
    7030:	62 ef       	ldi	r22, 0xF2	; 242
    7032:	79 e1       	ldi	r23, 0x19	; 25
    7034:	82 e5       	ldi	r24, 0x52	; 82
    7036:	94 e1       	ldi	r25, 0x14	; 20
    7038:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    703c:	4a e0       	ldi	r20, 0x0A	; 10
    703e:	50 e0       	ldi	r21, 0x00	; 0
    7040:	60 2f       	mov	r22, r16
    7042:	82 e5       	ldi	r24, 0x52	; 82
    7044:	94 e1       	ldi	r25, 0x14	; 20
    7046:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    704a:	82 e5       	ldi	r24, 0x52	; 82
    704c:	94 e1       	ldi	r25, 0x14	; 20
    704e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("month : ");
    7052:	69 ee       	ldi	r22, 0xE9	; 233
    7054:	79 e1       	ldi	r23, 0x19	; 25
    7056:	82 e5       	ldi	r24, 0x52	; 82
    7058:	94 e1       	ldi	r25, 0x14	; 20
    705a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(month);
    705e:	4a e0       	ldi	r20, 0x0A	; 10
    7060:	50 e0       	ldi	r21, 0x00	; 0
    7062:	6d 2f       	mov	r22, r29
    7064:	82 e5       	ldi	r24, 0x52	; 82
    7066:	94 e1       	ldi	r25, 0x14	; 20
    7068:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    706c:	82 e5       	ldi	r24, 0x52	; 82
    706e:	94 e1       	ldi	r25, 0x14	; 20
    7070:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>

		_kSERAIL_MON_WRITE("year : ");
    7074:	61 ee       	ldi	r22, 0xE1	; 225
    7076:	79 e1       	ldi	r23, 0x19	; 25
    7078:	82 e5       	ldi	r24, 0x52	; 82
    707a:	94 e1       	ldi	r25, 0x14	; 20
    707c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    7080:	4a e0       	ldi	r20, 0x0A	; 10
    7082:	50 e0       	ldi	r21, 0x00	; 0
    7084:	60 91 78 13 	lds	r22, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
    7088:	82 e5       	ldi	r24, 0x52	; 82
    708a:	94 e1       	ldi	r25, 0x14	; 20
    708c:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7090:	82 e5       	ldi	r24, 0x52	; 82
    7092:	94 e1       	ldi	r25, 0x14	; 20
    7094:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last date: ");
    7098:	65 ed       	ldi	r22, 0xD5	; 213
    709a:	79 e1       	ldi	r23, 0x19	; 25
    709c:	82 e5       	ldi	r24, 0x52	; 82
    709e:	94 e1       	ldi	r25, 0x14	; 20
    70a0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_date);
    70a4:	4a e0       	ldi	r20, 0x0A	; 10
    70a6:	50 e0       	ldi	r21, 0x00	; 0
    70a8:	6f 2d       	mov	r22, r15
    70aa:	82 e5       	ldi	r24, 0x52	; 82
    70ac:	94 e1       	ldi	r25, 0x14	; 20
    70ae:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    70b2:	82 e5       	ldi	r24, 0x52	; 82
    70b4:	94 e1       	ldi	r25, 0x14	; 20
    70b6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last month : ");
    70ba:	67 ec       	ldi	r22, 0xC7	; 199
    70bc:	79 e1       	ldi	r23, 0x19	; 25
    70be:	82 e5       	ldi	r24, 0x52	; 82
    70c0:	94 e1       	ldi	r25, 0x14	; 20
    70c2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_month);
    70c6:	4a e0       	ldi	r20, 0x0A	; 10
    70c8:	50 e0       	ldi	r21, 0x00	; 0
    70ca:	67 2d       	mov	r22, r7
    70cc:	82 e5       	ldi	r24, 0x52	; 82
    70ce:	94 e1       	ldi	r25, 0x14	; 20
    70d0:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    70d4:	82 e5       	ldi	r24, 0x52	; 82
    70d6:	94 e1       	ldi	r25, 0x14	; 20
    70d8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("day in btw started");
    70dc:	64 eb       	ldi	r22, 0xB4	; 180
    70de:	79 e1       	ldi	r23, 0x19	; 25
    70e0:	82 e5       	ldi	r24, 0x52	; 82
    70e2:	94 e1       	ldi	r25, 0x14	; 20
    70e4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    70e8:	82 e5       	ldi	r24, 0x52	; 82
    70ea:	94 e1       	ldi	r25, 0x14	; 20
    70ec:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("No of days in bet : ");
    70f0:	6f e9       	ldi	r22, 0x9F	; 159
    70f2:	79 e1       	ldi	r23, 0x19	; 25
    70f4:	82 e5       	ldi	r24, 0x52	; 82
    70f6:	94 e1       	ldi	r25, 0x14	; 20
    70f8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    70fc:	4a e0       	ldi	r20, 0x0A	; 10
    70fe:	50 e0       	ldi	r21, 0x00	; 0
    7100:	6a 2d       	mov	r22, r10
    7102:	82 e5       	ldi	r24, 0x52	; 82
    7104:	94 e1       	ldi	r25, 0x14	; 20
    7106:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    710a:	82 e5       	ldi	r24, 0x52	; 82
    710c:	94 e1       	ldi	r25, 0x14	; 20
    710e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
	
	
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    7112:	8f 2c       	mov	r8, r15
    7114:	91 2c       	mov	r9, r1
    7116:	b1 2c       	mov	r11, r1
    7118:	10 e0       	ldi	r17, 0x00	; 0
    711a:	94 01       	movw	r18, r8
    711c:	2a 0d       	add	r18, r10
    711e:	3b 1d       	adc	r19, r11
    7120:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7124:	02 17       	cp	r16, r18
    7126:	13 07       	cpc	r17, r19
    7128:	44 f0       	brlt	.+16     	; 0x713a <_Z22Day_In_Bet_Schedullinghhh+0x18c>
    712a:	d7 11       	cpse	r29, r7
    712c:	09 c0       	rjmp	.+18     	; 0x7140 <_Z22Day_In_Bet_Schedullinghhh+0x192>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    712e:	91 30       	cpi	r25, 0x01	; 1
    7130:	09 f0       	breq	.+2      	; 0x7134 <_Z22Day_In_Bet_Schedullinghhh+0x186>
    7132:	be c3       	rjmp	.+1916   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
    7134:	62 e9       	ldi	r22, 0x92	; 146
    7136:	79 e1       	ldi	r23, 0x19	; 25
    7138:	30 c0       	rjmp	.+96     	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
		
		return 2;
	}
	else
	{
		if(last_schedule_month != month)
    713a:	d7 15       	cp	r29, r7
    713c:	09 f4       	brne	.+2      	; 0x7140 <_Z22Day_In_Bet_Schedullinghhh+0x192>
    713e:	be c1       	rjmp	.+892    	; 0x74bc <_Z22Day_In_Bet_Schedullinghhh+0x50e>
		{
			switch(last_schedule_month)
    7140:	47 2d       	mov	r20, r7
    7142:	50 e0       	ldi	r21, 0x00	; 0
    7144:	fa 01       	movw	r30, r20
    7146:	31 97       	sbiw	r30, 0x01	; 1
    7148:	ec 30       	cpi	r30, 0x0C	; 12
    714a:	f1 05       	cpc	r31, r1
    714c:	08 f0       	brcs	.+2      	; 0x7150 <_Z22Day_In_Bet_Schedullinghhh+0x1a2>
    714e:	af c1       	rjmp	.+862    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
    7150:	88 27       	eor	r24, r24
    7152:	e7 54       	subi	r30, 0x47	; 71
    7154:	ff 4f       	sbci	r31, 0xFF	; 255
    7156:	8f 4f       	sbci	r24, 0xFF	; 255
    7158:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    715c:	91 30       	cpi	r25, 0x01	; 1
    715e:	51 f4       	brne	.+20     	; 0x7174 <_Z22Day_In_Bet_Schedullinghhh+0x1c6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    7160:	65 e8       	ldi	r22, 0x85	; 133
    7162:	79 e1       	ldi	r23, 0x19	; 25
    7164:	82 e5       	ldi	r24, 0x52	; 82
    7166:	94 e1       	ldi	r25, 0x14	; 20
    7168:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    716c:	82 e5       	ldi	r24, 0x52	; 82
    716e:	94 e1       	ldi	r25, 0x14	; 20
    7170:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    7174:	d1 30       	cpi	r29, 0x01	; 1
    7176:	09 f0       	breq	.+2      	; 0x717a <_Z22Day_In_Bet_Schedullinghhh+0x1cc>
    7178:	9b c3       	rjmp	.+1846   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    717a:	8f e1       	ldi	r24, 0x1F	; 31
    717c:	8f 19       	sub	r24, r15
    717e:	98 01       	movw	r18, r16
    7180:	28 0f       	add	r18, r24
    7182:	31 1d       	adc	r19, r1
    7184:	2a 15       	cp	r18, r10
    7186:	3b 05       	cpc	r19, r11
    7188:	0c f4       	brge	.+2      	; 0x718c <_Z22Day_In_Bet_Schedullinghhh+0x1de>
    718a:	91 c1       	rjmp	.+802    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    718c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7190:	81 30       	cpi	r24, 0x01	; 1
    7192:	09 f0       	breq	.+2      	; 0x7196 <_Z22Day_In_Bet_Schedullinghhh+0x1e8>
    7194:	8d c3       	rjmp	.+1818   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7196:	68 e7       	ldi	r22, 0x78	; 120
    7198:	79 e1       	ldi	r23, 0x19	; 25
    719a:	82 e5       	ldi	r24, 0x52	; 82
    719c:	94 e1       	ldi	r25, 0x14	; 20
    719e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    71a2:	82 e5       	ldi	r24, 0x52	; 82
    71a4:	94 e1       	ldi	r25, 0x14	; 20
    71a6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    71aa:	82 c3       	rjmp	.+1796   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    71ac:	91 30       	cpi	r25, 0x01	; 1
    71ae:	51 f4       	brne	.+20     	; 0x71c4 <_Z22Day_In_Bet_Schedullinghhh+0x216>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    71b0:	6b e6       	ldi	r22, 0x6B	; 107
    71b2:	79 e1       	ldi	r23, 0x19	; 25
    71b4:	82 e5       	ldi	r24, 0x52	; 82
    71b6:	94 e1       	ldi	r25, 0x14	; 20
    71b8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    71bc:	82 e5       	ldi	r24, 0x52	; 82
    71be:	94 e1       	ldi	r25, 0x14	; 20
    71c0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    71c4:	d2 30       	cpi	r29, 0x02	; 2
    71c6:	09 f0       	breq	.+2      	; 0x71ca <_Z22Day_In_Bet_Schedullinghhh+0x21c>
    71c8:	73 c3       	rjmp	.+1766   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    71ca:	8f e1       	ldi	r24, 0x1F	; 31
    71cc:	8f 19       	sub	r24, r15
    71ce:	98 01       	movw	r18, r16
    71d0:	28 0f       	add	r18, r24
    71d2:	31 1d       	adc	r19, r1
    71d4:	2a 15       	cp	r18, r10
    71d6:	3b 05       	cpc	r19, r11
    71d8:	0c f4       	brge	.+2      	; 0x71dc <_Z22Day_In_Bet_Schedullinghhh+0x22e>
    71da:	69 c1       	rjmp	.+722    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    71dc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    71e0:	81 30       	cpi	r24, 0x01	; 1
    71e2:	09 f0       	breq	.+2      	; 0x71e6 <_Z22Day_In_Bet_Schedullinghhh+0x238>
    71e4:	65 c3       	rjmp	.+1738   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    71e6:	6e e5       	ldi	r22, 0x5E	; 94
    71e8:	79 e1       	ldi	r23, 0x19	; 25
    71ea:	d7 cf       	rjmp	.-82     	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    71ec:	91 30       	cpi	r25, 0x01	; 1
    71ee:	51 f4       	brne	.+20     	; 0x7204 <_Z22Day_In_Bet_Schedullinghhh+0x256>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    71f0:	61 e5       	ldi	r22, 0x51	; 81
    71f2:	79 e1       	ldi	r23, 0x19	; 25
    71f4:	82 e5       	ldi	r24, 0x52	; 82
    71f6:	94 e1       	ldi	r25, 0x14	; 20
    71f8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    71fc:	82 e5       	ldi	r24, 0x52	; 82
    71fe:	94 e1       	ldi	r25, 0x14	; 20
    7200:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    7204:	d4 30       	cpi	r29, 0x04	; 4
    7206:	09 f0       	breq	.+2      	; 0x720a <_Z22Day_In_Bet_Schedullinghhh+0x25c>
    7208:	53 c3       	rjmp	.+1702   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    720a:	8f e1       	ldi	r24, 0x1F	; 31
    720c:	8f 19       	sub	r24, r15
    720e:	98 01       	movw	r18, r16
    7210:	28 0f       	add	r18, r24
    7212:	31 1d       	adc	r19, r1
    7214:	2a 15       	cp	r18, r10
    7216:	3b 05       	cpc	r19, r11
    7218:	0c f4       	brge	.+2      	; 0x721c <_Z22Day_In_Bet_Schedullinghhh+0x26e>
    721a:	49 c1       	rjmp	.+658    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    721c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7220:	81 30       	cpi	r24, 0x01	; 1
    7222:	09 f0       	breq	.+2      	; 0x7226 <_Z22Day_In_Bet_Schedullinghhh+0x278>
    7224:	45 c3       	rjmp	.+1674   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7226:	64 e4       	ldi	r22, 0x44	; 68
    7228:	79 e1       	ldi	r23, 0x19	; 25
    722a:	b7 cf       	rjmp	.-146    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    722c:	91 30       	cpi	r25, 0x01	; 1
    722e:	51 f4       	brne	.+20     	; 0x7244 <_Z22Day_In_Bet_Schedullinghhh+0x296>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    7230:	67 e3       	ldi	r22, 0x37	; 55
    7232:	79 e1       	ldi	r23, 0x19	; 25
    7234:	82 e5       	ldi	r24, 0x52	; 82
    7236:	94 e1       	ldi	r25, 0x14	; 20
    7238:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    723c:	82 e5       	ldi	r24, 0x52	; 82
    723e:	94 e1       	ldi	r25, 0x14	; 20
    7240:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    7244:	d6 30       	cpi	r29, 0x06	; 6
    7246:	09 f0       	breq	.+2      	; 0x724a <_Z22Day_In_Bet_Schedullinghhh+0x29c>
    7248:	33 c3       	rjmp	.+1638   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    724a:	8f e1       	ldi	r24, 0x1F	; 31
    724c:	8f 19       	sub	r24, r15
    724e:	98 01       	movw	r18, r16
    7250:	28 0f       	add	r18, r24
    7252:	31 1d       	adc	r19, r1
    7254:	2a 15       	cp	r18, r10
    7256:	3b 05       	cpc	r19, r11
    7258:	0c f4       	brge	.+2      	; 0x725c <_Z22Day_In_Bet_Schedullinghhh+0x2ae>
    725a:	29 c1       	rjmp	.+594    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    725c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7260:	81 30       	cpi	r24, 0x01	; 1
    7262:	09 f0       	breq	.+2      	; 0x7266 <_Z22Day_In_Bet_Schedullinghhh+0x2b8>
    7264:	25 c3       	rjmp	.+1610   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7266:	6a e2       	ldi	r22, 0x2A	; 42
    7268:	79 e1       	ldi	r23, 0x19	; 25
    726a:	97 cf       	rjmp	.-210    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    726c:	91 30       	cpi	r25, 0x01	; 1
    726e:	51 f4       	brne	.+20     	; 0x7284 <_Z22Day_In_Bet_Schedullinghhh+0x2d6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    7270:	6d e1       	ldi	r22, 0x1D	; 29
    7272:	79 e1       	ldi	r23, 0x19	; 25
    7274:	82 e5       	ldi	r24, 0x52	; 82
    7276:	94 e1       	ldi	r25, 0x14	; 20
    7278:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    727c:	82 e5       	ldi	r24, 0x52	; 82
    727e:	94 e1       	ldi	r25, 0x14	; 20
    7280:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    7284:	d8 30       	cpi	r29, 0x08	; 8
    7286:	09 f0       	breq	.+2      	; 0x728a <_Z22Day_In_Bet_Schedullinghhh+0x2dc>
    7288:	13 c3       	rjmp	.+1574   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    728a:	8f e1       	ldi	r24, 0x1F	; 31
    728c:	8f 19       	sub	r24, r15
    728e:	98 01       	movw	r18, r16
    7290:	28 0f       	add	r18, r24
    7292:	31 1d       	adc	r19, r1
    7294:	2a 15       	cp	r18, r10
    7296:	3b 05       	cpc	r19, r11
    7298:	0c f4       	brge	.+2      	; 0x729c <_Z22Day_In_Bet_Schedullinghhh+0x2ee>
    729a:	09 c1       	rjmp	.+530    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    729c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    72a0:	81 30       	cpi	r24, 0x01	; 1
    72a2:	09 f0       	breq	.+2      	; 0x72a6 <_Z22Day_In_Bet_Schedullinghhh+0x2f8>
    72a4:	05 c3       	rjmp	.+1546   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    72a6:	60 e1       	ldi	r22, 0x10	; 16
    72a8:	79 e1       	ldi	r23, 0x19	; 25
    72aa:	77 cf       	rjmp	.-274    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    72ac:	91 30       	cpi	r25, 0x01	; 1
    72ae:	51 f4       	brne	.+20     	; 0x72c4 <_Z22Day_In_Bet_Schedullinghhh+0x316>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    72b0:	63 e0       	ldi	r22, 0x03	; 3
    72b2:	79 e1       	ldi	r23, 0x19	; 25
    72b4:	82 e5       	ldi	r24, 0x52	; 82
    72b6:	94 e1       	ldi	r25, 0x14	; 20
    72b8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    72bc:	82 e5       	ldi	r24, 0x52	; 82
    72be:	94 e1       	ldi	r25, 0x14	; 20
    72c0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    72c4:	d9 30       	cpi	r29, 0x09	; 9
    72c6:	09 f0       	breq	.+2      	; 0x72ca <_Z22Day_In_Bet_Schedullinghhh+0x31c>
    72c8:	f3 c2       	rjmp	.+1510   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    72ca:	8f e1       	ldi	r24, 0x1F	; 31
    72cc:	8f 19       	sub	r24, r15
    72ce:	98 01       	movw	r18, r16
    72d0:	28 0f       	add	r18, r24
    72d2:	31 1d       	adc	r19, r1
    72d4:	2a 15       	cp	r18, r10
    72d6:	3b 05       	cpc	r19, r11
    72d8:	0c f4       	brge	.+2      	; 0x72dc <_Z22Day_In_Bet_Schedullinghhh+0x32e>
    72da:	e9 c0       	rjmp	.+466    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    72dc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    72e0:	81 30       	cpi	r24, 0x01	; 1
    72e2:	09 f0       	breq	.+2      	; 0x72e6 <_Z22Day_In_Bet_Schedullinghhh+0x338>
    72e4:	e5 c2       	rjmp	.+1482   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    72e6:	66 ef       	ldi	r22, 0xF6	; 246
    72e8:	78 e1       	ldi	r23, 0x18	; 24
    72ea:	57 cf       	rjmp	.-338    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    72ec:	91 30       	cpi	r25, 0x01	; 1
    72ee:	51 f4       	brne	.+20     	; 0x7304 <_Z22Day_In_Bet_Schedullinghhh+0x356>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    72f0:	69 ee       	ldi	r22, 0xE9	; 233
    72f2:	78 e1       	ldi	r23, 0x18	; 24
    72f4:	82 e5       	ldi	r24, 0x52	; 82
    72f6:	94 e1       	ldi	r25, 0x14	; 20
    72f8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    72fc:	82 e5       	ldi	r24, 0x52	; 82
    72fe:	94 e1       	ldi	r25, 0x14	; 20
    7300:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    7304:	db 30       	cpi	r29, 0x0B	; 11
    7306:	09 f0       	breq	.+2      	; 0x730a <_Z22Day_In_Bet_Schedullinghhh+0x35c>
    7308:	d3 c2       	rjmp	.+1446   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    730a:	8f e1       	ldi	r24, 0x1F	; 31
    730c:	8f 19       	sub	r24, r15
    730e:	98 01       	movw	r18, r16
    7310:	28 0f       	add	r18, r24
    7312:	31 1d       	adc	r19, r1
    7314:	2a 15       	cp	r18, r10
    7316:	3b 05       	cpc	r19, r11
    7318:	0c f4       	brge	.+2      	; 0x731c <_Z22Day_In_Bet_Schedullinghhh+0x36e>
    731a:	c9 c0       	rjmp	.+402    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    731c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7320:	81 30       	cpi	r24, 0x01	; 1
    7322:	09 f0       	breq	.+2      	; 0x7326 <_Z22Day_In_Bet_Schedullinghhh+0x378>
    7324:	c5 c2       	rjmp	.+1418   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7326:	6c ed       	ldi	r22, 0xDC	; 220
    7328:	78 e1       	ldi	r23, 0x18	; 24
    732a:	37 cf       	rjmp	.-402    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    732c:	8e 2d       	mov	r24, r14
    732e:	83 70       	andi	r24, 0x03	; 3
    7330:	01 f1       	breq	.+64     	; 0x7372 <_Z22Day_In_Bet_Schedullinghhh+0x3c4>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7332:	91 30       	cpi	r25, 0x01	; 1
    7334:	51 f4       	brne	.+20     	; 0x734a <_Z22Day_In_Bet_Schedullinghhh+0x39c>
						{
							_kSERAIL_MON_WRITE("day in btw 4");
    7336:	6f ec       	ldi	r22, 0xCF	; 207
    7338:	78 e1       	ldi	r23, 0x18	; 24
    733a:	82 e5       	ldi	r24, 0x52	; 82
    733c:	94 e1       	ldi	r25, 0x14	; 20
    733e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7342:	82 e5       	ldi	r24, 0x52	; 82
    7344:	94 e1       	ldi	r25, 0x14	; 20
    7346:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    734a:	d3 30       	cpi	r29, 0x03	; 3
    734c:	09 f0       	breq	.+2      	; 0x7350 <_Z22Day_In_Bet_Schedullinghhh+0x3a2>
    734e:	b0 c2       	rjmp	.+1376   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    7350:	8c e1       	ldi	r24, 0x1C	; 28
    7352:	8f 19       	sub	r24, r15
    7354:	98 01       	movw	r18, r16
    7356:	28 0f       	add	r18, r24
    7358:	31 1d       	adc	r19, r1
    735a:	2a 15       	cp	r18, r10
    735c:	3b 05       	cpc	r19, r11
    735e:	0c f4       	brge	.+2      	; 0x7362 <_Z22Day_In_Bet_Schedullinghhh+0x3b4>
    7360:	a6 c0       	rjmp	.+332    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7362:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7366:	81 30       	cpi	r24, 0x01	; 1
    7368:	09 f0       	breq	.+2      	; 0x736c <_Z22Day_In_Bet_Schedullinghhh+0x3be>
    736a:	a2 c2       	rjmp	.+1348   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 5");
    736c:	62 ec       	ldi	r22, 0xC2	; 194
    736e:	78 e1       	ldi	r23, 0x18	; 24
    7370:	14 cf       	rjmp	.-472    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
							return 2;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7372:	91 30       	cpi	r25, 0x01	; 1
    7374:	51 f4       	brne	.+20     	; 0x738a <_Z22Day_In_Bet_Schedullinghhh+0x3dc>
						{
							_kSERAIL_MON_WRITE("day in btw 6");
    7376:	65 eb       	ldi	r22, 0xB5	; 181
    7378:	78 e1       	ldi	r23, 0x18	; 24
    737a:	82 e5       	ldi	r24, 0x52	; 82
    737c:	94 e1       	ldi	r25, 0x14	; 20
    737e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7382:	82 e5       	ldi	r24, 0x52	; 82
    7384:	94 e1       	ldi	r25, 0x14	; 20
    7386:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    738a:	d3 30       	cpi	r29, 0x03	; 3
    738c:	09 f0       	breq	.+2      	; 0x7390 <_Z22Day_In_Bet_Schedullinghhh+0x3e2>
    738e:	90 c2       	rjmp	.+1312   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    7390:	8d e1       	ldi	r24, 0x1D	; 29
    7392:	8f 19       	sub	r24, r15
    7394:	98 01       	movw	r18, r16
    7396:	28 0f       	add	r18, r24
    7398:	31 1d       	adc	r19, r1
    739a:	2a 15       	cp	r18, r10
    739c:	3b 05       	cpc	r19, r11
    739e:	0c f4       	brge	.+2      	; 0x73a2 <_Z22Day_In_Bet_Schedullinghhh+0x3f4>
    73a0:	86 c0       	rjmp	.+268    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    73a2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    73a6:	81 30       	cpi	r24, 0x01	; 1
    73a8:	09 f0       	breq	.+2      	; 0x73ac <_Z22Day_In_Bet_Schedullinghhh+0x3fe>
    73aa:	82 c2       	rjmp	.+1284   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 7");
    73ac:	68 ea       	ldi	r22, 0xA8	; 168
    73ae:	78 e1       	ldi	r23, 0x18	; 24
    73b0:	f4 ce       	rjmp	.-536    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73b2:	91 30       	cpi	r25, 0x01	; 1
    73b4:	51 f4       	brne	.+20     	; 0x73ca <_Z22Day_In_Bet_Schedullinghhh+0x41c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    73b6:	6b e9       	ldi	r22, 0x9B	; 155
    73b8:	78 e1       	ldi	r23, 0x18	; 24
    73ba:	82 e5       	ldi	r24, 0x52	; 82
    73bc:	94 e1       	ldi	r25, 0x14	; 20
    73be:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    73c2:	82 e5       	ldi	r24, 0x52	; 82
    73c4:	94 e1       	ldi	r25, 0x14	; 20
    73c6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    73ca:	d5 30       	cpi	r29, 0x05	; 5
    73cc:	09 f0       	breq	.+2      	; 0x73d0 <_Z22Day_In_Bet_Schedullinghhh+0x422>
    73ce:	70 c2       	rjmp	.+1248   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73d0:	8e e1       	ldi	r24, 0x1E	; 30
    73d2:	8f 19       	sub	r24, r15
    73d4:	98 01       	movw	r18, r16
    73d6:	28 0f       	add	r18, r24
    73d8:	31 1d       	adc	r19, r1
    73da:	2a 15       	cp	r18, r10
    73dc:	3b 05       	cpc	r19, r11
    73de:	0c f4       	brge	.+2      	; 0x73e2 <_Z22Day_In_Bet_Schedullinghhh+0x434>
    73e0:	66 c0       	rjmp	.+204    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73e2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    73e6:	81 30       	cpi	r24, 0x01	; 1
    73e8:	09 f0       	breq	.+2      	; 0x73ec <_Z22Day_In_Bet_Schedullinghhh+0x43e>
    73ea:	62 c2       	rjmp	.+1220   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    73ec:	6e e8       	ldi	r22, 0x8E	; 142
    73ee:	78 e1       	ldi	r23, 0x18	; 24
    73f0:	d4 ce       	rjmp	.-600    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73f2:	91 30       	cpi	r25, 0x01	; 1
    73f4:	51 f4       	brne	.+20     	; 0x740a <_Z22Day_In_Bet_Schedullinghhh+0x45c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    73f6:	61 e8       	ldi	r22, 0x81	; 129
    73f8:	78 e1       	ldi	r23, 0x18	; 24
    73fa:	82 e5       	ldi	r24, 0x52	; 82
    73fc:	94 e1       	ldi	r25, 0x14	; 20
    73fe:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7402:	82 e5       	ldi	r24, 0x52	; 82
    7404:	94 e1       	ldi	r25, 0x14	; 20
    7406:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    740a:	d7 30       	cpi	r29, 0x07	; 7
    740c:	09 f0       	breq	.+2      	; 0x7410 <_Z22Day_In_Bet_Schedullinghhh+0x462>
    740e:	50 c2       	rjmp	.+1184   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7410:	8e e1       	ldi	r24, 0x1E	; 30
    7412:	8f 19       	sub	r24, r15
    7414:	98 01       	movw	r18, r16
    7416:	28 0f       	add	r18, r24
    7418:	31 1d       	adc	r19, r1
    741a:	2a 15       	cp	r18, r10
    741c:	3b 05       	cpc	r19, r11
    741e:	0c f4       	brge	.+2      	; 0x7422 <_Z22Day_In_Bet_Schedullinghhh+0x474>
    7420:	46 c0       	rjmp	.+140    	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7422:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7426:	81 30       	cpi	r24, 0x01	; 1
    7428:	09 f0       	breq	.+2      	; 0x742c <_Z22Day_In_Bet_Schedullinghhh+0x47e>
    742a:	42 c2       	rjmp	.+1156   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    742c:	64 e7       	ldi	r22, 0x74	; 116
    742e:	78 e1       	ldi	r23, 0x18	; 24
    7430:	b4 ce       	rjmp	.-664    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7432:	91 30       	cpi	r25, 0x01	; 1
    7434:	51 f4       	brne	.+20     	; 0x744a <_Z22Day_In_Bet_Schedullinghhh+0x49c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7436:	67 e6       	ldi	r22, 0x67	; 103
    7438:	78 e1       	ldi	r23, 0x18	; 24
    743a:	82 e5       	ldi	r24, 0x52	; 82
    743c:	94 e1       	ldi	r25, 0x14	; 20
    743e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7442:	82 e5       	ldi	r24, 0x52	; 82
    7444:	94 e1       	ldi	r25, 0x14	; 20
    7446:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    744a:	da 30       	cpi	r29, 0x0A	; 10
    744c:	09 f0       	breq	.+2      	; 0x7450 <_Z22Day_In_Bet_Schedullinghhh+0x4a2>
    744e:	30 c2       	rjmp	.+1120   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7450:	8e e1       	ldi	r24, 0x1E	; 30
    7452:	8f 19       	sub	r24, r15
    7454:	98 01       	movw	r18, r16
    7456:	28 0f       	add	r18, r24
    7458:	31 1d       	adc	r19, r1
    745a:	2a 15       	cp	r18, r10
    745c:	3b 05       	cpc	r19, r11
    745e:	3c f1       	brlt	.+78     	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7460:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7464:	81 30       	cpi	r24, 0x01	; 1
    7466:	09 f0       	breq	.+2      	; 0x746a <_Z22Day_In_Bet_Schedullinghhh+0x4bc>
    7468:	23 c2       	rjmp	.+1094   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    746a:	6a e5       	ldi	r22, 0x5A	; 90
    746c:	78 e1       	ldi	r23, 0x18	; 24
    746e:	95 ce       	rjmp	.-726    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
						return 2;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7470:	91 30       	cpi	r25, 0x01	; 1
    7472:	51 f4       	brne	.+20     	; 0x7488 <_Z22Day_In_Bet_Schedullinghhh+0x4da>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7474:	6d e4       	ldi	r22, 0x4D	; 77
    7476:	78 e1       	ldi	r23, 0x18	; 24
    7478:	82 e5       	ldi	r24, 0x52	; 82
    747a:	94 e1       	ldi	r25, 0x14	; 20
    747c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7480:	82 e5       	ldi	r24, 0x52	; 82
    7482:	94 e1       	ldi	r25, 0x14	; 20
    7484:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7488:	dc 30       	cpi	r29, 0x0C	; 12
    748a:	09 f0       	breq	.+2      	; 0x748e <_Z22Day_In_Bet_Schedullinghhh+0x4e0>
    748c:	11 c2       	rjmp	.+1058   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    748e:	8e e1       	ldi	r24, 0x1E	; 30
    7490:	8f 19       	sub	r24, r15
    7492:	98 01       	movw	r18, r16
    7494:	28 0f       	add	r18, r24
    7496:	31 1d       	adc	r19, r1
    7498:	2a 15       	cp	r18, r10
    749a:	3b 05       	cpc	r19, r11
    749c:	44 f0       	brlt	.+16     	; 0x74ae <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    749e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    74a2:	81 30       	cpi	r24, 0x01	; 1
    74a4:	09 f0       	breq	.+2      	; 0x74a8 <_Z22Day_In_Bet_Schedullinghhh+0x4fa>
    74a6:	04 c2       	rjmp	.+1032   	; 0x78b0 <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    74a8:	60 e4       	ldi	r22, 0x40	; 64
    74aa:	78 e1       	ldi	r23, 0x18	; 24
    74ac:	76 ce       	rjmp	.-788    	; 0x719a <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    74ae:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    74b2:	81 30       	cpi	r24, 0x01	; 1
    74b4:	21 f5       	brne	.+72     	; 0x74fe <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 10");
    74b6:	62 e3       	ldi	r22, 0x32	; 50
    74b8:	78 e1       	ldi	r23, 0x18	; 24
    74ba:	04 c0       	rjmp	.+8      	; 0x74c4 <_Z22Day_In_Bet_Schedullinghhh+0x516>
				_kSERIAL_MON_CLEAR();
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    74bc:	91 30       	cpi	r25, 0x01	; 1
    74be:	f9 f4       	brne	.+62     	; 0x74fe <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 11");
    74c0:	64 e2       	ldi	r22, 0x24	; 36
    74c2:	78 e1       	ldi	r23, 0x18	; 24
    74c4:	82 e5       	ldi	r24, 0x52	; 82
    74c6:	94 e1       	ldi	r25, 0x14	; 20
    74c8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    74cc:	82 e5       	ldi	r24, 0x52	; 82
    74ce:	94 e1       	ldi	r25, 0x14	; 20
    74d0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
	//printf("\n");
	
	Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    74d4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    74d8:	81 30       	cpi	r24, 0x01	; 1
    74da:	89 f4       	brne	.+34     	; 0x74fe <_Z22Day_In_Bet_Schedullinghhh+0x550>
	{
		_kSERAIL_MON_WRITE("No of days in bet 1: ");
    74dc:	6e e0       	ldi	r22, 0x0E	; 14
    74de:	78 e1       	ldi	r23, 0x18	; 24
    74e0:	82 e5       	ldi	r24, 0x52	; 82
    74e2:	94 e1       	ldi	r25, 0x14	; 20
    74e4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    74e8:	4a e0       	ldi	r20, 0x0A	; 10
    74ea:	50 e0       	ldi	r21, 0x00	; 0
    74ec:	6c 2d       	mov	r22, r12
    74ee:	82 e5       	ldi	r24, 0x52	; 82
    74f0:	94 e1       	ldi	r25, 0x14	; 20
    74f2:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    74f6:	82 e5       	ldi	r24, 0x52	; 82
    74f8:	94 e1       	ldi	r25, 0x14	; 20
    74fa:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    74fe:	d1 2c       	mov	r13, r1
    7500:	8c 0c       	add	r8, r12
    7502:	9d 1c       	adc	r9, r13
    7504:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7508:	08 15       	cp	r16, r8
    750a:	19 05       	cpc	r17, r9
    750c:	4c f0       	brlt	.+18     	; 0x7520 <_Z22Day_In_Bet_Schedullinghhh+0x572>
    750e:	d7 11       	cpse	r29, r7
    7510:	0a c0       	rjmp	.+20     	; 0x7526 <_Z22Day_In_Bet_Schedullinghhh+0x578>
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    7512:	c1 30       	cpi	r28, 0x01	; 1
    7514:	11 f0       	breq	.+4      	; 0x751a <_Z22Day_In_Bet_Schedullinghhh+0x56c>
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 1;
    7516:	c1 e0       	ldi	r28, 0x01	; 1
    7518:	ce c1       	rjmp	.+924    	; 0x78b6 <_Z22Day_In_Bet_Schedullinghhh+0x908>
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
	{
		//printf("running 0.1");
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
    751a:	6f ef       	ldi	r22, 0xFF	; 255
    751c:	77 e1       	ldi	r23, 0x17	; 23
    751e:	84 c1       	rjmp	.+776    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
		
		return 1;
	}
	else
	{
		if(last_schedule_month != month)
    7520:	d7 15       	cp	r29, r7
    7522:	09 f4       	brne	.+2      	; 0x7526 <_Z22Day_In_Bet_Schedullinghhh+0x578>
    7524:	b7 c1       	rjmp	.+878    	; 0x7894 <_Z22Day_In_Bet_Schedullinghhh+0x8e6>
		{
			switch(last_schedule_month)
    7526:	47 2d       	mov	r20, r7
    7528:	50 e0       	ldi	r21, 0x00	; 0
    752a:	fa 01       	movw	r30, r20
    752c:	31 97       	sbiw	r30, 0x01	; 1
    752e:	ec 30       	cpi	r30, 0x0C	; 12
    7530:	f1 05       	cpc	r31, r1
    7532:	08 f0       	brcs	.+2      	; 0x7536 <_Z22Day_In_Bet_Schedullinghhh+0x588>
    7534:	a0 c1       	rjmp	.+832    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
    7536:	88 27       	eor	r24, r24
    7538:	eb 53       	subi	r30, 0x3B	; 59
    753a:	ff 4f       	sbci	r31, 0xFF	; 255
    753c:	8f 4f       	sbci	r24, 0xFF	; 255
    753e:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7542:	c1 30       	cpi	r28, 0x01	; 1
    7544:	51 f4       	brne	.+20     	; 0x755a <_Z22Day_In_Bet_Schedullinghhh+0x5ac>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7546:	60 ef       	ldi	r22, 0xF0	; 240
    7548:	77 e1       	ldi	r23, 0x17	; 23
    754a:	82 e5       	ldi	r24, 0x52	; 82
    754c:	94 e1       	ldi	r25, 0x14	; 20
    754e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7552:	82 e5       	ldi	r24, 0x52	; 82
    7554:	94 e1       	ldi	r25, 0x14	; 20
    7556:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    755a:	d1 30       	cpi	r29, 0x01	; 1
    755c:	e1 f6       	brne	.-72     	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    755e:	8f e1       	ldi	r24, 0x1F	; 31
    7560:	8f 19       	sub	r24, r15
    7562:	08 0f       	add	r16, r24
    7564:	11 1d       	adc	r17, r1
    7566:	0c 15       	cp	r16, r12
    7568:	1d 05       	cpc	r17, r13
    756a:	0c f4       	brge	.+2      	; 0x756e <_Z22Day_In_Bet_Schedullinghhh+0x5c0>
    756c:	84 c1       	rjmp	.+776    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    756e:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7572:	c1 30       	cpi	r28, 0x01	; 1
    7574:	81 f6       	brne	.-96     	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7576:	61 ee       	ldi	r22, 0xE1	; 225
    7578:	77 e1       	ldi	r23, 0x17	; 23
    757a:	56 c1       	rjmp	.+684    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    757c:	c1 30       	cpi	r28, 0x01	; 1
    757e:	51 f4       	brne	.+20     	; 0x7594 <_Z22Day_In_Bet_Schedullinghhh+0x5e6>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7580:	62 ed       	ldi	r22, 0xD2	; 210
    7582:	77 e1       	ldi	r23, 0x17	; 23
    7584:	82 e5       	ldi	r24, 0x52	; 82
    7586:	94 e1       	ldi	r25, 0x14	; 20
    7588:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    758c:	82 e5       	ldi	r24, 0x52	; 82
    758e:	94 e1       	ldi	r25, 0x14	; 20
    7590:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    7594:	d2 30       	cpi	r29, 0x02	; 2
    7596:	09 f0       	breq	.+2      	; 0x759a <_Z22Day_In_Bet_Schedullinghhh+0x5ec>
    7598:	be cf       	rjmp	.-132    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    759a:	8f e1       	ldi	r24, 0x1F	; 31
    759c:	8f 19       	sub	r24, r15
    759e:	08 0f       	add	r16, r24
    75a0:	11 1d       	adc	r17, r1
    75a2:	0c 15       	cp	r16, r12
    75a4:	1d 05       	cpc	r17, r13
    75a6:	0c f4       	brge	.+2      	; 0x75aa <_Z22Day_In_Bet_Schedullinghhh+0x5fc>
    75a8:	66 c1       	rjmp	.+716    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    75aa:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    75ae:	c1 30       	cpi	r28, 0x01	; 1
    75b0:	09 f0       	breq	.+2      	; 0x75b4 <_Z22Day_In_Bet_Schedullinghhh+0x606>
    75b2:	b1 cf       	rjmp	.-158    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    75b4:	63 ec       	ldi	r22, 0xC3	; 195
    75b6:	77 e1       	ldi	r23, 0x17	; 23
    75b8:	37 c1       	rjmp	.+622    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75ba:	c1 30       	cpi	r28, 0x01	; 1
    75bc:	51 f4       	brne	.+20     	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x624>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    75be:	64 eb       	ldi	r22, 0xB4	; 180
    75c0:	77 e1       	ldi	r23, 0x17	; 23
    75c2:	82 e5       	ldi	r24, 0x52	; 82
    75c4:	94 e1       	ldi	r25, 0x14	; 20
    75c6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    75ca:	82 e5       	ldi	r24, 0x52	; 82
    75cc:	94 e1       	ldi	r25, 0x14	; 20
    75ce:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    75d2:	d4 30       	cpi	r29, 0x04	; 4
    75d4:	09 f0       	breq	.+2      	; 0x75d8 <_Z22Day_In_Bet_Schedullinghhh+0x62a>
    75d6:	9f cf       	rjmp	.-194    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    75d8:	8f e1       	ldi	r24, 0x1F	; 31
    75da:	8f 19       	sub	r24, r15
    75dc:	08 0f       	add	r16, r24
    75de:	11 1d       	adc	r17, r1
    75e0:	0c 15       	cp	r16, r12
    75e2:	1d 05       	cpc	r17, r13
    75e4:	0c f4       	brge	.+2      	; 0x75e8 <_Z22Day_In_Bet_Schedullinghhh+0x63a>
    75e6:	47 c1       	rjmp	.+654    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    75e8:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    75ec:	c1 30       	cpi	r28, 0x01	; 1
    75ee:	09 f0       	breq	.+2      	; 0x75f2 <_Z22Day_In_Bet_Schedullinghhh+0x644>
    75f0:	92 cf       	rjmp	.-220    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    75f2:	65 ea       	ldi	r22, 0xA5	; 165
    75f4:	77 e1       	ldi	r23, 0x17	; 23
    75f6:	18 c1       	rjmp	.+560    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75f8:	c1 30       	cpi	r28, 0x01	; 1
    75fa:	51 f4       	brne	.+20     	; 0x7610 <_Z22Day_In_Bet_Schedullinghhh+0x662>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    75fc:	66 e9       	ldi	r22, 0x96	; 150
    75fe:	77 e1       	ldi	r23, 0x17	; 23
    7600:	82 e5       	ldi	r24, 0x52	; 82
    7602:	94 e1       	ldi	r25, 0x14	; 20
    7604:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7608:	82 e5       	ldi	r24, 0x52	; 82
    760a:	94 e1       	ldi	r25, 0x14	; 20
    760c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    7610:	d6 30       	cpi	r29, 0x06	; 6
    7612:	09 f0       	breq	.+2      	; 0x7616 <_Z22Day_In_Bet_Schedullinghhh+0x668>
    7614:	80 cf       	rjmp	.-256    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7616:	8f e1       	ldi	r24, 0x1F	; 31
    7618:	8f 19       	sub	r24, r15
    761a:	08 0f       	add	r16, r24
    761c:	11 1d       	adc	r17, r1
    761e:	0c 15       	cp	r16, r12
    7620:	1d 05       	cpc	r17, r13
    7622:	0c f4       	brge	.+2      	; 0x7626 <_Z22Day_In_Bet_Schedullinghhh+0x678>
    7624:	28 c1       	rjmp	.+592    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7626:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    762a:	c1 30       	cpi	r28, 0x01	; 1
    762c:	09 f0       	breq	.+2      	; 0x7630 <_Z22Day_In_Bet_Schedullinghhh+0x682>
    762e:	73 cf       	rjmp	.-282    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7630:	67 e8       	ldi	r22, 0x87	; 135
    7632:	77 e1       	ldi	r23, 0x17	; 23
    7634:	f9 c0       	rjmp	.+498    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7636:	c1 30       	cpi	r28, 0x01	; 1
    7638:	51 f4       	brne	.+20     	; 0x764e <_Z22Day_In_Bet_Schedullinghhh+0x6a0>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    763a:	68 e7       	ldi	r22, 0x78	; 120
    763c:	77 e1       	ldi	r23, 0x17	; 23
    763e:	82 e5       	ldi	r24, 0x52	; 82
    7640:	94 e1       	ldi	r25, 0x14	; 20
    7642:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7646:	82 e5       	ldi	r24, 0x52	; 82
    7648:	94 e1       	ldi	r25, 0x14	; 20
    764a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    764e:	d8 30       	cpi	r29, 0x08	; 8
    7650:	09 f0       	breq	.+2      	; 0x7654 <_Z22Day_In_Bet_Schedullinghhh+0x6a6>
    7652:	61 cf       	rjmp	.-318    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7654:	8f e1       	ldi	r24, 0x1F	; 31
    7656:	8f 19       	sub	r24, r15
    7658:	08 0f       	add	r16, r24
    765a:	11 1d       	adc	r17, r1
    765c:	0c 15       	cp	r16, r12
    765e:	1d 05       	cpc	r17, r13
    7660:	0c f4       	brge	.+2      	; 0x7664 <_Z22Day_In_Bet_Schedullinghhh+0x6b6>
    7662:	09 c1       	rjmp	.+530    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7664:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7668:	c1 30       	cpi	r28, 0x01	; 1
    766a:	09 f0       	breq	.+2      	; 0x766e <_Z22Day_In_Bet_Schedullinghhh+0x6c0>
    766c:	54 cf       	rjmp	.-344    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    766e:	69 e6       	ldi	r22, 0x69	; 105
    7670:	77 e1       	ldi	r23, 0x17	; 23
    7672:	da c0       	rjmp	.+436    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7674:	c1 30       	cpi	r28, 0x01	; 1
    7676:	51 f4       	brne	.+20     	; 0x768c <_Z22Day_In_Bet_Schedullinghhh+0x6de>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7678:	6a e5       	ldi	r22, 0x5A	; 90
    767a:	77 e1       	ldi	r23, 0x17	; 23
    767c:	82 e5       	ldi	r24, 0x52	; 82
    767e:	94 e1       	ldi	r25, 0x14	; 20
    7680:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7684:	82 e5       	ldi	r24, 0x52	; 82
    7686:	94 e1       	ldi	r25, 0x14	; 20
    7688:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    768c:	d9 30       	cpi	r29, 0x09	; 9
    768e:	09 f0       	breq	.+2      	; 0x7692 <_Z22Day_In_Bet_Schedullinghhh+0x6e4>
    7690:	42 cf       	rjmp	.-380    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7692:	8f e1       	ldi	r24, 0x1F	; 31
    7694:	8f 19       	sub	r24, r15
    7696:	08 0f       	add	r16, r24
    7698:	11 1d       	adc	r17, r1
    769a:	0c 15       	cp	r16, r12
    769c:	1d 05       	cpc	r17, r13
    769e:	0c f4       	brge	.+2      	; 0x76a2 <_Z22Day_In_Bet_Schedullinghhh+0x6f4>
    76a0:	ea c0       	rjmp	.+468    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    76a2:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    76a6:	c1 30       	cpi	r28, 0x01	; 1
    76a8:	09 f0       	breq	.+2      	; 0x76ac <_Z22Day_In_Bet_Schedullinghhh+0x6fe>
    76aa:	35 cf       	rjmp	.-406    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    76ac:	6b e4       	ldi	r22, 0x4B	; 75
    76ae:	77 e1       	ldi	r23, 0x17	; 23
    76b0:	bb c0       	rjmp	.+374    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    76b2:	c1 30       	cpi	r28, 0x01	; 1
    76b4:	51 f4       	brne	.+20     	; 0x76ca <_Z22Day_In_Bet_Schedullinghhh+0x71c>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    76b6:	6c e3       	ldi	r22, 0x3C	; 60
    76b8:	77 e1       	ldi	r23, 0x17	; 23
    76ba:	82 e5       	ldi	r24, 0x52	; 82
    76bc:	94 e1       	ldi	r25, 0x14	; 20
    76be:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    76c2:	82 e5       	ldi	r24, 0x52	; 82
    76c4:	94 e1       	ldi	r25, 0x14	; 20
    76c6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    76ca:	db 30       	cpi	r29, 0x0B	; 11
    76cc:	09 f0       	breq	.+2      	; 0x76d0 <_Z22Day_In_Bet_Schedullinghhh+0x722>
    76ce:	23 cf       	rjmp	.-442    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    76d0:	8f e1       	ldi	r24, 0x1F	; 31
    76d2:	8f 19       	sub	r24, r15
    76d4:	08 0f       	add	r16, r24
    76d6:	11 1d       	adc	r17, r1
    76d8:	0c 15       	cp	r16, r12
    76da:	1d 05       	cpc	r17, r13
    76dc:	0c f4       	brge	.+2      	; 0x76e0 <_Z22Day_In_Bet_Schedullinghhh+0x732>
    76de:	cb c0       	rjmp	.+406    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    76e0:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    76e4:	c1 30       	cpi	r28, 0x01	; 1
    76e6:	09 f0       	breq	.+2      	; 0x76ea <_Z22Day_In_Bet_Schedullinghhh+0x73c>
    76e8:	16 cf       	rjmp	.-468    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    76ea:	6d e2       	ldi	r22, 0x2D	; 45
    76ec:	77 e1       	ldi	r23, 0x17	; 23
    76ee:	9c c0       	rjmp	.+312    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    76f0:	8e 2d       	mov	r24, r14
    76f2:	83 70       	andi	r24, 0x03	; 3
    76f4:	f9 f0       	breq	.+62     	; 0x7734 <_Z22Day_In_Bet_Schedullinghhh+0x786>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    76f6:	c1 30       	cpi	r28, 0x01	; 1
    76f8:	51 f4       	brne	.+20     	; 0x770e <_Z22Day_In_Bet_Schedullinghhh+0x760>
						{
							_kSERAIL_MON_WRITE("day in btw 4.1");
    76fa:	6e e1       	ldi	r22, 0x1E	; 30
    76fc:	77 e1       	ldi	r23, 0x17	; 23
    76fe:	82 e5       	ldi	r24, 0x52	; 82
    7700:	94 e1       	ldi	r25, 0x14	; 20
    7702:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7706:	82 e5       	ldi	r24, 0x52	; 82
    7708:	94 e1       	ldi	r25, 0x14	; 20
    770a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    770e:	d3 30       	cpi	r29, 0x03	; 3
    7710:	09 f0       	breq	.+2      	; 0x7714 <_Z22Day_In_Bet_Schedullinghhh+0x766>
    7712:	01 cf       	rjmp	.-510    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    7714:	8c e1       	ldi	r24, 0x1C	; 28
    7716:	8f 19       	sub	r24, r15
    7718:	08 0f       	add	r16, r24
    771a:	11 1d       	adc	r17, r1
    771c:	0c 15       	cp	r16, r12
    771e:	1d 05       	cpc	r17, r13
    7720:	0c f4       	brge	.+2      	; 0x7724 <_Z22Day_In_Bet_Schedullinghhh+0x776>
    7722:	a9 c0       	rjmp	.+338    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7724:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7728:	c1 30       	cpi	r28, 0x01	; 1
    772a:	09 f0       	breq	.+2      	; 0x772e <_Z22Day_In_Bet_Schedullinghhh+0x780>
    772c:	f4 ce       	rjmp	.-536    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 5.1");
    772e:	6f e0       	ldi	r22, 0x0F	; 15
    7730:	77 e1       	ldi	r23, 0x17	; 23
    7732:	7a c0       	rjmp	.+244    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
							return 1;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7734:	c1 30       	cpi	r28, 0x01	; 1
    7736:	51 f4       	brne	.+20     	; 0x774c <_Z22Day_In_Bet_Schedullinghhh+0x79e>
						{
							_kSERAIL_MON_WRITE("day in btw 6.1");
    7738:	60 e0       	ldi	r22, 0x00	; 0
    773a:	77 e1       	ldi	r23, 0x17	; 23
    773c:	82 e5       	ldi	r24, 0x52	; 82
    773e:	94 e1       	ldi	r25, 0x14	; 20
    7740:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7744:	82 e5       	ldi	r24, 0x52	; 82
    7746:	94 e1       	ldi	r25, 0x14	; 20
    7748:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    774c:	d3 30       	cpi	r29, 0x03	; 3
    774e:	09 f0       	breq	.+2      	; 0x7752 <_Z22Day_In_Bet_Schedullinghhh+0x7a4>
    7750:	e2 ce       	rjmp	.-572    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    7752:	8d e1       	ldi	r24, 0x1D	; 29
    7754:	8f 19       	sub	r24, r15
    7756:	08 0f       	add	r16, r24
    7758:	11 1d       	adc	r17, r1
    775a:	0c 15       	cp	r16, r12
    775c:	1d 05       	cpc	r17, r13
    775e:	0c f4       	brge	.+2      	; 0x7762 <_Z22Day_In_Bet_Schedullinghhh+0x7b4>
    7760:	8a c0       	rjmp	.+276    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7762:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7766:	c1 30       	cpi	r28, 0x01	; 1
    7768:	09 f0       	breq	.+2      	; 0x776c <_Z22Day_In_Bet_Schedullinghhh+0x7be>
    776a:	d5 ce       	rjmp	.-598    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 7.1");
    776c:	61 ef       	ldi	r22, 0xF1	; 241
    776e:	76 e1       	ldi	r23, 0x16	; 22
    7770:	5b c0       	rjmp	.+182    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7772:	c1 30       	cpi	r28, 0x01	; 1
    7774:	51 f4       	brne	.+20     	; 0x778a <_Z22Day_In_Bet_Schedullinghhh+0x7dc>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    7776:	62 ee       	ldi	r22, 0xE2	; 226
    7778:	76 e1       	ldi	r23, 0x16	; 22
    777a:	82 e5       	ldi	r24, 0x52	; 82
    777c:	94 e1       	ldi	r25, 0x14	; 20
    777e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7782:	82 e5       	ldi	r24, 0x52	; 82
    7784:	94 e1       	ldi	r25, 0x14	; 20
    7786:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    778a:	d5 30       	cpi	r29, 0x05	; 5
    778c:	09 f0       	breq	.+2      	; 0x7790 <_Z22Day_In_Bet_Schedullinghhh+0x7e2>
    778e:	c3 ce       	rjmp	.-634    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7790:	8e e1       	ldi	r24, 0x1E	; 30
    7792:	8f 19       	sub	r24, r15
    7794:	08 0f       	add	r16, r24
    7796:	11 1d       	adc	r17, r1
    7798:	0c 15       	cp	r16, r12
    779a:	1d 05       	cpc	r17, r13
    779c:	0c f4       	brge	.+2      	; 0x77a0 <_Z22Day_In_Bet_Schedullinghhh+0x7f2>
    779e:	6b c0       	rjmp	.+214    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    77a0:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    77a4:	c1 30       	cpi	r28, 0x01	; 1
    77a6:	09 f0       	breq	.+2      	; 0x77aa <_Z22Day_In_Bet_Schedullinghhh+0x7fc>
    77a8:	b6 ce       	rjmp	.-660    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    77aa:	63 ed       	ldi	r22, 0xD3	; 211
    77ac:	76 e1       	ldi	r23, 0x16	; 22
    77ae:	3c c0       	rjmp	.+120    	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77b0:	c1 30       	cpi	r28, 0x01	; 1
    77b2:	51 f4       	brne	.+20     	; 0x77c8 <_Z22Day_In_Bet_Schedullinghhh+0x81a>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    77b4:	66 ec       	ldi	r22, 0xC6	; 198
    77b6:	76 e1       	ldi	r23, 0x16	; 22
    77b8:	82 e5       	ldi	r24, 0x52	; 82
    77ba:	94 e1       	ldi	r25, 0x14	; 20
    77bc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77c0:	82 e5       	ldi	r24, 0x52	; 82
    77c2:	94 e1       	ldi	r25, 0x14	; 20
    77c4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    77c8:	d7 30       	cpi	r29, 0x07	; 7
    77ca:	09 f0       	breq	.+2      	; 0x77ce <_Z22Day_In_Bet_Schedullinghhh+0x820>
    77cc:	a4 ce       	rjmp	.-696    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    77ce:	8e e1       	ldi	r24, 0x1E	; 30
    77d0:	8f 19       	sub	r24, r15
    77d2:	08 0f       	add	r16, r24
    77d4:	11 1d       	adc	r17, r1
    77d6:	0c 15       	cp	r16, r12
    77d8:	1d 05       	cpc	r17, r13
    77da:	0c f4       	brge	.+2      	; 0x77de <_Z22Day_In_Bet_Schedullinghhh+0x830>
    77dc:	4c c0       	rjmp	.+152    	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    77de:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    77e2:	c1 30       	cpi	r28, 0x01	; 1
    77e4:	09 f0       	breq	.+2      	; 0x77e8 <_Z22Day_In_Bet_Schedullinghhh+0x83a>
    77e6:	97 ce       	rjmp	.-722    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    77e8:	67 eb       	ldi	r22, 0xB7	; 183
    77ea:	76 e1       	ldi	r23, 0x16	; 22
    77ec:	1d c0       	rjmp	.+58     	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    77ee:	c1 30       	cpi	r28, 0x01	; 1
    77f0:	51 f4       	brne	.+20     	; 0x7806 <_Z22Day_In_Bet_Schedullinghhh+0x858>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    77f2:	6a ea       	ldi	r22, 0xAA	; 170
    77f4:	76 e1       	ldi	r23, 0x16	; 22
    77f6:	82 e5       	ldi	r24, 0x52	; 82
    77f8:	94 e1       	ldi	r25, 0x14	; 20
    77fa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    77fe:	82 e5       	ldi	r24, 0x52	; 82
    7800:	94 e1       	ldi	r25, 0x14	; 20
    7802:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    7806:	da 30       	cpi	r29, 0x0A	; 10
    7808:	09 f0       	breq	.+2      	; 0x780c <_Z22Day_In_Bet_Schedullinghhh+0x85e>
    780a:	85 ce       	rjmp	.-758    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    780c:	8e e1       	ldi	r24, 0x1E	; 30
    780e:	8f 19       	sub	r24, r15
    7810:	08 0f       	add	r16, r24
    7812:	11 1d       	adc	r17, r1
    7814:	0c 15       	cp	r16, r12
    7816:	1d 05       	cpc	r17, r13
    7818:	74 f1       	brlt	.+92     	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    781a:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    781e:	c1 30       	cpi	r28, 0x01	; 1
    7820:	09 f0       	breq	.+2      	; 0x7824 <_Z22Day_In_Bet_Schedullinghhh+0x876>
    7822:	79 ce       	rjmp	.-782    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7824:	6b e9       	ldi	r22, 0x9B	; 155
    7826:	76 e1       	ldi	r23, 0x16	; 22
    7828:	82 e5       	ldi	r24, 0x52	; 82
    782a:	94 e1       	ldi	r25, 0x14	; 20
    782c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    7830:	82 e5       	ldi	r24, 0x52	; 82
    7832:	94 e1       	ldi	r25, 0x14	; 20
    7834:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    7838:	3e c0       	rjmp	.+124    	; 0x78b6 <_Z22Day_In_Bet_Schedullinghhh+0x908>
						return 1;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    783a:	c1 30       	cpi	r28, 0x01	; 1
    783c:	51 f4       	brne	.+20     	; 0x7852 <_Z22Day_In_Bet_Schedullinghhh+0x8a4>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    783e:	6c e8       	ldi	r22, 0x8C	; 140
    7840:	76 e1       	ldi	r23, 0x16	; 22
    7842:	82 e5       	ldi	r24, 0x52	; 82
    7844:	94 e1       	ldi	r25, 0x14	; 20
    7846:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    784a:	82 e5       	ldi	r24, 0x52	; 82
    784c:	94 e1       	ldi	r25, 0x14	; 20
    784e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7852:	dc 30       	cpi	r29, 0x0C	; 12
    7854:	09 f0       	breq	.+2      	; 0x7858 <_Z22Day_In_Bet_Schedullinghhh+0x8aa>
    7856:	5f ce       	rjmp	.-834    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7858:	8e e1       	ldi	r24, 0x1E	; 30
    785a:	8f 19       	sub	r24, r15
    785c:	08 0f       	add	r16, r24
    785e:	11 1d       	adc	r17, r1
    7860:	0c 15       	cp	r16, r12
    7862:	1d 05       	cpc	r17, r13
    7864:	44 f0       	brlt	.+16     	; 0x7876 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7866:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    786a:	c1 30       	cpi	r28, 0x01	; 1
    786c:	09 f0       	breq	.+2      	; 0x7870 <_Z22Day_In_Bet_Schedullinghhh+0x8c2>
    786e:	53 ce       	rjmp	.-858    	; 0x7516 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7870:	6d e7       	ldi	r22, 0x7D	; 125
    7872:	76 e1       	ldi	r23, 0x16	; 22
    7874:	d9 cf       	rjmp	.-78     	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
			}
			//printf("deny 3");
			//return 0;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7876:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    787a:	81 30       	cpi	r24, 0x01	; 1
    787c:	c1 f4       	brne	.+48     	; 0x78ae <_Z22Day_In_Bet_Schedullinghhh+0x900>
			{
				_kSERAIL_MON_WRITE("day in btw 10.1");
    787e:	6d e6       	ldi	r22, 0x6D	; 109
    7880:	76 e1       	ldi	r23, 0x16	; 22
    7882:	82 e5       	ldi	r24, 0x52	; 82
    7884:	94 e1       	ldi	r25, 0x14	; 20
    7886:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    788a:	82 e5       	ldi	r24, 0x52	; 82
    788c:	94 e1       	ldi	r25, 0x14	; 20
    788e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    7892:	0d c0       	rjmp	.+26     	; 0x78ae <_Z22Day_In_Bet_Schedullinghhh+0x900>
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7894:	c1 30       	cpi	r28, 0x01	; 1
    7896:	71 f4       	brne	.+28     	; 0x78b4 <_Z22Day_In_Bet_Schedullinghhh+0x906>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
    7898:	6d e5       	ldi	r22, 0x5D	; 93
    789a:	76 e1       	ldi	r23, 0x16	; 22
    789c:	82 e5       	ldi	r24, 0x52	; 82
    789e:	94 e1       	ldi	r25, 0x14	; 20
    78a0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    78a4:	82 e5       	ldi	r24, 0x52	; 82
    78a6:	94 e1       	ldi	r25, 0x14	; 20
    78a8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    78ac:	03 c0       	rjmp	.+6      	; 0x78b4 <_Z22Day_In_Bet_Schedullinghhh+0x906>
			return 0;
		}
		
	}
	
}	
    78ae:	04 c0       	rjmp	.+8      	; 0x78b8 <_Z22Day_In_Bet_Schedullinghhh+0x90a>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 2;
    78b0:	c2 e0       	ldi	r28, 0x02	; 2
    78b2:	01 c0       	rjmp	.+2      	; 0x78b6 <_Z22Day_In_Bet_Schedullinghhh+0x908>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
				_kSERIAL_MON_CLEAR();
			}
			//printf("deny 4");
			return 0;
    78b4:	c0 e0       	ldi	r28, 0x00	; 0
    78b6:	8c 2f       	mov	r24, r28
		}
		
	}
	
}	
    78b8:	df 91       	pop	r29
    78ba:	cf 91       	pop	r28
    78bc:	1f 91       	pop	r17
    78be:	0f 91       	pop	r16
    78c0:	ff 90       	pop	r15
    78c2:	ef 90       	pop	r14
    78c4:	df 90       	pop	r13
    78c6:	cf 90       	pop	r12
    78c8:	bf 90       	pop	r11
    78ca:	af 90       	pop	r10
    78cc:	9f 90       	pop	r9
    78ce:	8f 90       	pop	r8
    78d0:	7f 90       	pop	r7
    78d2:	08 95       	ret

000078d4 <_Z28Turn_Off_All_Tank_For_Safetyv>:
	
	return 1;
}

char Turn_Off_All_Tank_For_Safety(void)
{
    78d4:	8f 92       	push	r8
    78d6:	9f 92       	push	r9
    78d8:	af 92       	push	r10
    78da:	bf 92       	push	r11
    78dc:	cf 92       	push	r12
    78de:	df 92       	push	r13
    78e0:	ef 92       	push	r14
    78e2:	ff 92       	push	r15
    78e4:	0f 93       	push	r16
    78e6:	1f 93       	push	r17
    78e8:	cf 93       	push	r28
    78ea:	df 93       	push	r29
    78ec:	cd b7       	in	r28, 0x3d	; 61
    78ee:	de b7       	in	r29, 0x3e	; 62
    78f0:	aa 97       	sbiw	r28, 0x2a	; 42
    78f2:	0f b6       	in	r0, 0x3f	; 63
    78f4:	f8 94       	cli
    78f6:	de bf       	out	0x3e, r29	; 62
    78f8:	0f be       	out	0x3f, r0	; 63
    78fa:	cd bf       	out	0x3d, r28	; 61
	unsigned char tank_number_list[_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK], tank_number;
	
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
    78fc:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    7900:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    7904:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
    7908:	9e 01       	movw	r18, r28
    790a:	2f 5f       	subi	r18, 0xFF	; 255
    790c:	3f 4f       	sbci	r19, 0xFF	; 255
    790e:	69 01       	movw	r12, r18
    7910:	ce 01       	movw	r24, r28
    7912:	8b 96       	adiw	r24, 0x2b	; 43
    7914:	f9 01       	movw	r30, r18
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
	{
		tank_number_list[i] = 0;
    7916:	11 92       	st	Z+, r1
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
	}
	
	for(int i=0; i<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK); i++)
    7918:	e8 17       	cp	r30, r24
    791a:	f9 07       	cpc	r31, r25
    791c:	e1 f7       	brne	.-8      	; 0x7916 <_Z28Turn_Off_All_Tank_For_Safetyv+0x42>
    791e:	20 e0       	ldi	r18, 0x00	; 0
    7920:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
	{
		if(check_tank == 0)
    7922:	21 15       	cp	r18, r1
    7924:	31 05       	cpc	r19, r1
    7926:	39 f4       	brne	.+14     	; 0x7936 <_Z28Turn_Off_All_Tank_For_Safetyv+0x62>
		{
			if(tank_number_list[check_tank] == 0)
    7928:	89 81       	ldd	r24, Y+1	; 0x01
    792a:	81 11       	cpse	r24, r1
    792c:	1a c0       	rjmp	.+52     	; 0x7962 <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
			{
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    792e:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <_sSchedules+0x7a>
    7932:	89 83       	std	Y+1, r24	; 0x01
    7934:	16 c0       	rjmp	.+44     	; 0x7962 <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
    7936:	f6 01       	movw	r30, r12
    7938:	80 e0       	ldi	r24, 0x00	; 0
    793a:	90 e0       	ldi	r25, 0x00	; 0
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
			{
				if(tank_number_list[check_tank2] == _sSchedules.Fertilizer_Tank_Number[check_tank])
    793c:	d9 01       	movw	r26, r18
    793e:	a8 56       	subi	r26, 0x68	; 104
    7940:	b6 4f       	sbci	r27, 0xF6	; 246
    7942:	41 91       	ld	r20, Z+
    7944:	5c 91       	ld	r21, X
    7946:	45 17       	cp	r20, r21
    7948:	61 f0       	breq	.+24     	; 0x7962 <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				{
					break;
				}
				if(tank_number_list[check_tank2] == 0)
    794a:	41 11       	cpse	r20, r1
    794c:	06 c0       	rjmp	.+12     	; 0x795a <_Z28Turn_Off_All_Tank_For_Safetyv+0x86>
				{
					tank_number_list[check_tank2] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    794e:	4c 91       	ld	r20, X
    7950:	f6 01       	movw	r30, r12
    7952:	e8 0f       	add	r30, r24
    7954:	f9 1f       	adc	r31, r25
    7956:	40 83       	st	Z, r20
					break;
    7958:	04 c0       	rjmp	.+8      	; 0x7962 <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
			}
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK; check_tank2++)
    795a:	01 96       	adiw	r24, 0x01	; 1
    795c:	8a 32       	cpi	r24, 0x2A	; 42
    795e:	91 05       	cpc	r25, r1
    7960:	81 f7       	brne	.-32     	; 0x7942 <_Z28Turn_Off_All_Tank_For_Safetyv+0x6e>
	{
		tank_number_list[i] = 0;
	}
	
	
	for(int check_tank =0; check_tank<(_kNUMBER_OF_SCHEDULES*_kMAX_FERTILIZER_TANK) ; check_tank++)
    7962:	2f 5f       	subi	r18, 0xFF	; 255
    7964:	3f 4f       	sbci	r19, 0xFF	; 255
    7966:	2a 32       	cpi	r18, 0x2A	; 42
    7968:	31 05       	cpc	r19, r1
    796a:	d9 f6       	brne	.-74     	; 0x7922 <_Z28Turn_Off_All_Tank_For_Safetyv+0x4e>
					break;
				}
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    796c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7970:	81 30       	cpi	r24, 0x01	; 1
    7972:	51 f4       	brne	.+20     	; 0x7988 <_Z28Turn_Off_All_Tank_For_Safetyv+0xb4>
	{
		_kSERAIL_MON_WRITE("tank number list");
    7974:	68 e3       	ldi	r22, 0x38	; 56
    7976:	7f e0       	ldi	r23, 0x0F	; 15
    7978:	82 e5       	ldi	r24, 0x52	; 82
    797a:	94 e1       	ldi	r25, 0x14	; 20
    797c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7980:	82 e5       	ldi	r24, 0x52	; 82
    7982:	94 e1       	ldi	r25, 0x14	; 20
    7984:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7988:	8b e1       	ldi	r24, 0x1B	; 27
    798a:	e8 2e       	mov	r14, r24
						_kSERIAL_MON_CLEAR();
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    798c:	92 e0       	ldi	r25, 0x02	; 2
    798e:	89 2e       	mov	r8, r25
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7990:	25 e0       	ldi	r18, 0x05	; 5
    7992:	92 2e       	mov	r9, r18
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7994:	f6 01       	movw	r30, r12
    7996:	f1 90       	ld	r15, Z+
    7998:	6f 01       	movw	r12, r30
    799a:	ff 20       	and	r15, r15
    799c:	09 f4       	brne	.+2      	; 0x79a0 <_Z28Turn_Off_All_Tank_For_Safetyv+0xcc>
    799e:	4c c0       	rjmp	.+152    	; 0x7a38 <_Z28Turn_Off_All_Tank_For_Safetyv+0x164>
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
    79a0:	4a e0       	ldi	r20, 0x0A	; 10
    79a2:	50 e0       	ldi	r21, 0x00	; 0
    79a4:	6f 2d       	mov	r22, r15
    79a6:	82 e5       	ldi	r24, 0x52	; 82
    79a8:	94 e1       	ldi	r25, 0x14	; 20
    79aa:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    79ae:	0f 2d       	mov	r16, r15
    79b0:	10 e0       	ldi	r17, 0x00	; 0
    79b2:	05 56       	subi	r16, 0x65	; 101
    79b4:	11 09       	sbc	r17, r1
    79b6:	e0 9e       	mul	r14, r16
    79b8:	c0 01       	movw	r24, r0
    79ba:	e1 9e       	mul	r14, r17
    79bc:	90 0d       	add	r25, r0
    79be:	11 24       	eor	r1, r1
    79c0:	9c 01       	movw	r18, r24
    79c2:	2f 57       	subi	r18, 0x7F	; 127
    79c4:	32 4f       	sbci	r19, 0xF2	; 242
    79c6:	59 01       	movw	r10, r18
    79c8:	f9 01       	movw	r30, r18
    79ca:	80 81       	ld	r24, Z
    79cc:	81 11       	cpse	r24, r1
    79ce:	e2 cf       	rjmp	.-60     	; 0x7994 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
		{
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM))
    79d0:	6b e9       	ldi	r22, 0x9B	; 155
    79d2:	6f 0d       	add	r22, r15
    79d4:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    79d8:	88 23       	and	r24, r24
    79da:	e1 f2       	breq	.-72     	; 0x7994 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			{
				if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    79dc:	f5 01       	movw	r30, r10
    79de:	82 81       	ldd	r24, Z+2	; 0x02
    79e0:	85 30       	cpi	r24, 0x05	; 5
    79e2:	c1 f2       	breq	.-80     	; 0x7994 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    79e4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    79e8:	81 30       	cpi	r24, 0x01	; 1
    79ea:	89 f4       	brne	.+34     	; 0x7a0e <_Z28Turn_Off_All_Tank_For_Safetyv+0x13a>
					{
						_kSERAIL_MON_WRITE("tank number gets to off safely");
    79ec:	69 e1       	ldi	r22, 0x19	; 25
    79ee:	7f e0       	ldi	r23, 0x0F	; 15
    79f0:	82 e5       	ldi	r24, 0x52	; 82
    79f2:	94 e1       	ldi	r25, 0x14	; 20
    79f4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM);
    79f8:	4a e0       	ldi	r20, 0x0A	; 10
    79fa:	50 e0       	ldi	r21, 0x00	; 0
    79fc:	b8 01       	movw	r22, r16
    79fe:	82 e5       	ldi	r24, 0x52	; 82
    7a00:	94 e1       	ldi	r25, 0x14	; 20
    7a02:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
						_kSERIAL_MON_CLEAR();
    7a06:	82 e5       	ldi	r24, 0x52	; 82
    7a08:	94 e1       	ldi	r25, 0x14	; 20
    7a0a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7a0e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    7a12:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    7a16:	90 62       	ori	r25, 0x20	; 32
    7a18:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    7a1c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
    7a20:	f0 92 fd 13 	sts	0x13FD, r15	; 0x8013fd <_sRuble_Parameters+0xb6>
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7a24:	e0 9e       	mul	r14, r16
    7a26:	f0 01       	movw	r30, r0
    7a28:	e1 9e       	mul	r14, r17
    7a2a:	f0 0d       	add	r31, r0
    7a2c:	11 24       	eor	r1, r1
    7a2e:	ef 57       	subi	r30, 0x7F	; 127
    7a30:	f2 4f       	sbci	r31, 0xF2	; 242
    7a32:	82 8e       	std	Z+26, r8	; 0x1a
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7a34:	92 82       	std	Z+2, r9	; 0x02
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7a36:	ae cf       	rjmp	.-164    	; 0x7994 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				
			}
		}
	}
	
}
    7a38:	aa 96       	adiw	r28, 0x2a	; 42
    7a3a:	0f b6       	in	r0, 0x3f	; 63
    7a3c:	f8 94       	cli
    7a3e:	de bf       	out	0x3e, r29	; 62
    7a40:	0f be       	out	0x3f, r0	; 63
    7a42:	cd bf       	out	0x3d, r28	; 61
    7a44:	df 91       	pop	r29
    7a46:	cf 91       	pop	r28
    7a48:	1f 91       	pop	r17
    7a4a:	0f 91       	pop	r16
    7a4c:	ff 90       	pop	r15
    7a4e:	ef 90       	pop	r14
    7a50:	df 90       	pop	r13
    7a52:	cf 90       	pop	r12
    7a54:	bf 90       	pop	r11
    7a56:	af 90       	pop	r10
    7a58:	9f 90       	pop	r9
    7a5a:	8f 90       	pop	r8
    7a5c:	08 95       	ret

00007a5e <_Z17Blower_Monitoringh>:

char Blower_Monitoring(unsigned char Forcefully_Off)
{	
    7a5e:	cf 92       	push	r12
    7a60:	df 92       	push	r13
    7a62:	ef 92       	push	r14
    7a64:	ff 92       	push	r15
    7a66:	0f 93       	push	r16
    7a68:	1f 93       	push	r17
	unsigned char tank_number,time_buffer;
	static unsigned char temp_number;
	
	if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Extra_Plot_Number == _kBLOWER_PLOT_NUMBER)
    7a6a:	90 91 9d 0d 	lds	r25, 0x0D9D	; 0x800d9d <_sExtra_Plot+0x1c>
    7a6e:	96 36       	cpi	r25, 0x66	; 102
    7a70:	09 f0       	breq	.+2      	; 0x7a74 <_Z17Blower_Monitoringh+0x16>
    7a72:	49 c0       	rjmp	.+146    	; 0x7b06 <_Z17Blower_Monitoringh+0xa8>
	{
		
		if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status == _kRESET)
    7a74:	90 91 9c 0d 	lds	r25, 0x0D9C	; 0x800d9c <_sExtra_Plot+0x1b>
    7a78:	91 11       	cpse	r25, r1
    7a7a:	45 c0       	rjmp	.+138    	; 0x7b06 <_Z17Blower_Monitoringh+0xa8>
		{
			if(Forcefully_Off == _kFORCEFULYY_OFF)
    7a7c:	83 30       	cpi	r24, 0x03	; 3
    7a7e:	09 f0       	breq	.+2      	; 0x7a82 <_Z17Blower_Monitoringh+0x24>
    7a80:	42 c0       	rjmp	.+132    	; 0x7b06 <_Z17Blower_Monitoringh+0xa8>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a82:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7a86:	81 30       	cpi	r24, 0x01	; 1
    7a88:	51 f4       	brne	.+20     	; 0x7a9e <_Z17Blower_Monitoringh+0x40>
				{
					_kSERAIL_MON_WRITE("blower gets 1.1 : ");
    7a8a:	66 e0       	ldi	r22, 0x06	; 6
    7a8c:	7f e0       	ldi	r23, 0x0F	; 15
    7a8e:	82 e5       	ldi	r24, 0x52	; 82
    7a90:	94 e1       	ldi	r25, 0x14	; 20
    7a92:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7a96:	82 e5       	ldi	r24, 0x52	; 82
    7a98:	94 e1       	ldi	r25, 0x14	; 20
    7a9a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				
				_sSchedules.Blower_On_Scheduler_Status =_kOFF;
    7a9e:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
				_sSchedules.Blower_On_Retry = _kRESET;
    7aa2:	10 92 2e 0b 	sts	0x0B2E, r1	; 0x800b2e <_sSchedules+0x210>
				_sSchedules.Blower_On_Time = _kRESET;
    7aa6:	10 92 2c 0b 	sts	0x0B2C, r1	; 0x800b2c <_sSchedules+0x20e>
				temp_number = 0;
				/* turn off blower */
				
				if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7aaa:	61 e0       	ldi	r22, 0x01	; 1
    7aac:	80 e0       	ldi	r24, 0x00	; 0
    7aae:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7ab2:	88 23       	and	r24, r24
    7ab4:	21 f1       	breq	.+72     	; 0x7afe <_Z17Blower_Monitoringh+0xa0>
				{
					//_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					//_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
					
					if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7ab6:	80 91 9e 0d 	lds	r24, 0x0D9E	; 0x800d9e <_sExtra_Plot+0x1d>
    7aba:	85 30       	cpi	r24, 0x05	; 5
    7abc:	01 f1       	breq	.+64     	; 0x7afe <_Z17Blower_Monitoringh+0xa0>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7abe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7ac2:	81 30       	cpi	r24, 0x01	; 1
    7ac4:	51 f4       	brne	.+20     	; 0x7ada <_Z17Blower_Monitoringh+0x7c>
						{
							_kSERAIL_MON_WRITE("blower gets 2.1 : ");
    7ac6:	63 ef       	ldi	r22, 0xF3	; 243
    7ac8:	7e e0       	ldi	r23, 0x0E	; 14
    7aca:	82 e5       	ldi	r24, 0x52	; 82
    7acc:	94 e1       	ldi	r25, 0x14	; 20
    7ace:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7ad2:	82 e5       	ldi	r24, 0x52	; 82
    7ad4:	94 e1       	ldi	r25, 0x14	; 20
    7ad6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7ada:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    7ade:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    7ae2:	90 62       	ori	r25, 0x20	; 32
    7ae4:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    7ae8:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7aec:	81 e0       	ldi	r24, 0x01	; 1
    7aee:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7af2:	82 e0       	ldi	r24, 0x02	; 2
    7af4:	80 93 b6 0d 	sts	0x0DB6, r24	; 0x800db6 <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7af8:	85 e0       	ldi	r24, 0x05	; 5
    7afa:	80 93 9e 0d 	sts	0x0D9E, r24	; 0x800d9e <_sExtra_Plot+0x1d>
					}
				}
				
				_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    7afe:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
				return 1;
    7b02:	81 e0       	ldi	r24, 0x01	; 1
    7b04:	d5 c1       	rjmp	.+938    	; 0x7eb0 <_Z17Blower_Monitoringh+0x452>
				
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
    7b06:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b0a:	90 e0       	ldi	r25, 0x00	; 0
    7b0c:	01 97       	sbiw	r24, 0x01	; 1
    7b0e:	fc 01       	movw	r30, r24
    7b10:	ee 0f       	add	r30, r30
    7b12:	ff 1f       	adc	r31, r31
    7b14:	e8 0f       	add	r30, r24
    7b16:	f9 1f       	adc	r31, r25
    7b18:	ee 0f       	add	r30, r30
    7b1a:	ff 1f       	adc	r31, r31
    7b1c:	ed 53       	subi	r30, 0x3D	; 61
    7b1e:	f6 4f       	sbci	r31, 0xF6	; 246
    7b20:	20 81       	ld	r18, Z
    7b22:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7b24:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b28:	90 e0       	ldi	r25, 0x00	; 0
    7b2a:	01 97       	sbiw	r24, 0x01	; 1
    7b2c:	fc 01       	movw	r30, r24
    7b2e:	ee 0f       	add	r30, r30
    7b30:	ff 1f       	adc	r31, r31
    7b32:	e8 0f       	add	r30, r24
    7b34:	f9 1f       	adc	r31, r25
    7b36:	ee 0f       	add	r30, r30
    7b38:	ff 1f       	adc	r31, r31
    7b3a:	e7 5e       	subi	r30, 0xE7	; 231
    7b3c:	f5 4f       	sbci	r31, 0xF5	; 245
    7b3e:	40 81       	ld	r20, Z
    7b40:	51 81       	ldd	r21, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
    7b42:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b46:	90 e0       	ldi	r25, 0x00	; 0
    7b48:	01 97       	sbiw	r24, 0x01	; 1
    7b4a:	fc 01       	movw	r30, r24
    7b4c:	ee 0f       	add	r30, r30
    7b4e:	ff 1f       	adc	r31, r31
    7b50:	8e 0f       	add	r24, r30
    7b52:	9f 1f       	adc	r25, r31
    7b54:	fc 01       	movw	r30, r24
    7b56:	e1 59       	subi	r30, 0x91	; 145
    7b58:	f5 4f       	sbci	r31, 0xF5	; 245
    7b5a:	80 81       	ld	r24, Z
    7b5c:	81 30       	cpi	r24, 0x01	; 1
    7b5e:	29 f4       	brne	.+10     	; 0x7b6a <_Z17Blower_Monitoringh+0x10c>
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7b60:	42 0f       	add	r20, r18
    7b62:	53 1f       	adc	r21, r19
    7b64:	60 e0       	ldi	r22, 0x00	; 0
    7b66:	70 e0       	ldi	r23, 0x00	; 0
    7b68:	03 c0       	rjmp	.+6      	; 0x7b70 <_Z17Blower_Monitoringh+0x112>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
	{
		tank1_time = _kRESET;
    7b6a:	40 e0       	ldi	r20, 0x00	; 0
    7b6c:	50 e0       	ldi	r21, 0x00	; 0
    7b6e:	ba 01       	movw	r22, r20
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
    7b70:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b74:	90 e0       	ldi	r25, 0x00	; 0
    7b76:	01 97       	sbiw	r24, 0x01	; 1
    7b78:	fc 01       	movw	r30, r24
    7b7a:	ee 0f       	add	r30, r30
    7b7c:	ff 1f       	adc	r31, r31
    7b7e:	e8 0f       	add	r30, r24
    7b80:	f9 1f       	adc	r31, r25
    7b82:	ee 0f       	add	r30, r30
    7b84:	ff 1f       	adc	r31, r31
    7b86:	eb 53       	subi	r30, 0x3B	; 59
    7b88:	f6 4f       	sbci	r31, 0xF6	; 246
    7b8a:	20 81       	ld	r18, Z
    7b8c:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7b8e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7b92:	90 e0       	ldi	r25, 0x00	; 0
    7b94:	01 97       	sbiw	r24, 0x01	; 1
    7b96:	fc 01       	movw	r30, r24
    7b98:	ee 0f       	add	r30, r30
    7b9a:	ff 1f       	adc	r31, r31
    7b9c:	e8 0f       	add	r30, r24
    7b9e:	f9 1f       	adc	r31, r25
    7ba0:	ee 0f       	add	r30, r30
    7ba2:	ff 1f       	adc	r31, r31
    7ba4:	e5 5e       	subi	r30, 0xE5	; 229
    7ba6:	f5 4f       	sbci	r31, 0xF5	; 245
    7ba8:	c0 80       	ld	r12, Z
    7baa:	d1 80       	ldd	r13, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
    7bac:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7bb0:	90 e0       	ldi	r25, 0x00	; 0
    7bb2:	01 97       	sbiw	r24, 0x01	; 1
    7bb4:	fc 01       	movw	r30, r24
    7bb6:	ee 0f       	add	r30, r30
    7bb8:	ff 1f       	adc	r31, r31
    7bba:	8e 0f       	add	r24, r30
    7bbc:	9f 1f       	adc	r25, r31
    7bbe:	fc 01       	movw	r30, r24
    7bc0:	e0 59       	subi	r30, 0x90	; 144
    7bc2:	f5 4f       	sbci	r31, 0xF5	; 245
    7bc4:	80 81       	ld	r24, Z
    7bc6:	81 30       	cpi	r24, 0x01	; 1
    7bc8:	29 f4       	brne	.+10     	; 0x7bd4 <_Z17Blower_Monitoringh+0x176>
	{
		tank1_time = _kRESET;
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7bca:	c2 0e       	add	r12, r18
    7bcc:	d3 1e       	adc	r13, r19
    7bce:	e1 2c       	mov	r14, r1
    7bd0:	f1 2c       	mov	r15, r1
    7bd2:	03 c0       	rjmp	.+6      	; 0x7bda <_Z17Blower_Monitoringh+0x17c>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
	{
		tank2_time = _kRESET;
    7bd4:	c1 2c       	mov	r12, r1
    7bd6:	d1 2c       	mov	r13, r1
    7bd8:	76 01       	movw	r14, r12
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
    7bda:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7bde:	90 e0       	ldi	r25, 0x00	; 0
    7be0:	01 97       	sbiw	r24, 0x01	; 1
    7be2:	fc 01       	movw	r30, r24
    7be4:	ee 0f       	add	r30, r30
    7be6:	ff 1f       	adc	r31, r31
    7be8:	e8 0f       	add	r30, r24
    7bea:	f9 1f       	adc	r31, r25
    7bec:	ee 0f       	add	r30, r30
    7bee:	ff 1f       	adc	r31, r31
    7bf0:	e9 53       	subi	r30, 0x39	; 57
    7bf2:	f6 4f       	sbci	r31, 0xF6	; 246
    7bf4:	20 81       	ld	r18, Z
    7bf6:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7bf8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7bfc:	90 e0       	ldi	r25, 0x00	; 0
    7bfe:	01 97       	sbiw	r24, 0x01	; 1
    7c00:	fc 01       	movw	r30, r24
    7c02:	ee 0f       	add	r30, r30
    7c04:	ff 1f       	adc	r31, r31
    7c06:	e8 0f       	add	r30, r24
    7c08:	f9 1f       	adc	r31, r25
    7c0a:	ee 0f       	add	r30, r30
    7c0c:	ff 1f       	adc	r31, r31
    7c0e:	e3 5e       	subi	r30, 0xE3	; 227
    7c10:	f5 4f       	sbci	r31, 0xF5	; 245
    7c12:	00 81       	ld	r16, Z
    7c14:	11 81       	ldd	r17, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
    7c16:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7c1a:	90 e0       	ldi	r25, 0x00	; 0
    7c1c:	01 97       	sbiw	r24, 0x01	; 1
    7c1e:	fc 01       	movw	r30, r24
    7c20:	ee 0f       	add	r30, r30
    7c22:	ff 1f       	adc	r31, r31
    7c24:	8e 0f       	add	r24, r30
    7c26:	9f 1f       	adc	r25, r31
    7c28:	fc 01       	movw	r30, r24
    7c2a:	ef 58       	subi	r30, 0x8F	; 143
    7c2c:	f5 4f       	sbci	r31, 0xF5	; 245
    7c2e:	80 81       	ld	r24, Z
    7c30:	81 30       	cpi	r24, 0x01	; 1
    7c32:	29 f4       	brne	.+10     	; 0x7c3e <_Z17Blower_Monitoringh+0x1e0>
	{
		tank2_time = _kRESET;
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7c34:	02 0f       	add	r16, r18
    7c36:	13 1f       	adc	r17, r19
    7c38:	20 e0       	ldi	r18, 0x00	; 0
    7c3a:	30 e0       	ldi	r19, 0x00	; 0
    7c3c:	03 c0       	rjmp	.+6      	; 0x7c44 <_Z17Blower_Monitoringh+0x1e6>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
	{
		tank3_time = _kRESET;
    7c3e:	00 e0       	ldi	r16, 0x00	; 0
    7c40:	10 e0       	ldi	r17, 0x00	; 0
    7c42:	98 01       	movw	r18, r16
	}
	
	if(_sSchedules.Blower_On_Retry != 0 || _sSchedules.Scheduler_Retry_Timer != 0)
    7c44:	80 91 2e 0b 	lds	r24, 0x0B2E	; 0x800b2e <_sSchedules+0x210>
    7c48:	81 11       	cpse	r24, r1
    7c4a:	06 c0       	rjmp	.+12     	; 0x7c58 <_Z17Blower_Monitoringh+0x1fa>
    7c4c:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    7c50:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    7c54:	89 2b       	or	r24, r25
    7c56:	11 f0       	breq	.+4      	; 0x7c5c <_Z17Blower_Monitoringh+0x1fe>
	{
		return 0;
    7c58:	80 e0       	ldi	r24, 0x00	; 0
    7c5a:	2a c1       	rjmp	.+596    	; 0x7eb0 <_Z17Blower_Monitoringh+0x452>
	_kSERAIL_MON_WRITE("tank2_time : ");
	_kSERIAL_MON_PRINT_NUM(tank2_time);
	_kSERAIL_MON_WRITE("tank3_time : ");
	_kSERIAL_MON_PRINT_NUM(tank3_time);*/
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
    7c5c:	80 91 2d 0b 	lds	r24, 0x0B2D	; 0x800b2d <_sSchedules+0x20f>
    7c60:	81 30       	cpi	r24, 0x01	; 1
    7c62:	89 f1       	breq	.+98     	; 0x7cc6 <_Z17Blower_Monitoringh+0x268>
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
    7c64:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7c68:	90 e0       	ldi	r25, 0x00	; 0
    7c6a:	01 97       	sbiw	r24, 0x01	; 1
    7c6c:	fc 01       	movw	r30, r24
    7c6e:	ee 0f       	add	r30, r30
    7c70:	ff 1f       	adc	r31, r31
    7c72:	8e 0f       	add	r24, r30
    7c74:	9f 1f       	adc	r25, r31
    7c76:	fc 01       	movw	r30, r24
    7c78:	e1 59       	subi	r30, 0x91	; 145
    7c7a:	f5 4f       	sbci	r31, 0xF5	; 245
    7c7c:	80 81       	ld	r24, Z
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7c7e:	81 30       	cpi	r24, 0x01	; 1
    7c80:	09 f4       	brne	.+2      	; 0x7c84 <_Z17Blower_Monitoringh+0x226>
    7c82:	cf c0       	rjmp	.+414    	; 0x7e22 <_Z17Blower_Monitoringh+0x3c4>
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
    7c84:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7c88:	90 e0       	ldi	r25, 0x00	; 0
    7c8a:	01 97       	sbiw	r24, 0x01	; 1
    7c8c:	fc 01       	movw	r30, r24
    7c8e:	ee 0f       	add	r30, r30
    7c90:	ff 1f       	adc	r31, r31
    7c92:	8e 0f       	add	r24, r30
    7c94:	9f 1f       	adc	r25, r31
    7c96:	fc 01       	movw	r30, r24
    7c98:	e0 59       	subi	r30, 0x90	; 144
    7c9a:	f5 4f       	sbci	r31, 0xF5	; 245
    7c9c:	80 81       	ld	r24, Z
    7c9e:	81 30       	cpi	r24, 0x01	; 1
    7ca0:	09 f4       	brne	.+2      	; 0x7ca4 <_Z17Blower_Monitoringh+0x246>
    7ca2:	bf c0       	rjmp	.+382    	; 0x7e22 <_Z17Blower_Monitoringh+0x3c4>
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7ca4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7ca8:	90 e0       	ldi	r25, 0x00	; 0
    7caa:	01 97       	sbiw	r24, 0x01	; 1
    7cac:	fc 01       	movw	r30, r24
    7cae:	ee 0f       	add	r30, r30
    7cb0:	ff 1f       	adc	r31, r31
    7cb2:	8e 0f       	add	r24, r30
    7cb4:	9f 1f       	adc	r25, r31
    7cb6:	fc 01       	movw	r30, r24
    7cb8:	ef 58       	subi	r30, 0x8F	; 143
    7cba:	f5 4f       	sbci	r31, 0xF5	; 245
    7cbc:	80 81       	ld	r24, Z
    7cbe:	81 30       	cpi	r24, 0x01	; 1
    7cc0:	09 f0       	breq	.+2      	; 0x7cc4 <_Z17Blower_Monitoringh+0x266>
    7cc2:	ae c0       	rjmp	.+348    	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
    7cc4:	ae c0       	rjmp	.+348    	; 0x7e22 <_Z17Blower_Monitoringh+0x3c4>
		
	}
	else
	{
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
    7cc6:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <_sSchedules+0x20e>
    7cca:	88 23       	and	r24, r24
    7ccc:	21 f1       	breq	.+72     	; 0x7d16 <_Z17Blower_Monitoringh+0x2b8>
    7cce:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7cd2:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7cd6:	a0 e0       	ldi	r26, 0x00	; 0
    7cd8:	b0 e0       	ldi	r27, 0x00	; 0
    7cda:	84 17       	cp	r24, r20
    7cdc:	95 07       	cpc	r25, r21
    7cde:	a6 07       	cpc	r26, r22
    7ce0:	b7 07       	cpc	r27, r23
    7ce2:	08 f4       	brcc	.+2      	; 0x7ce6 <_Z17Blower_Monitoringh+0x288>
    7ce4:	9d c0       	rjmp	.+314    	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
    7ce6:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7cea:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7cee:	a0 e0       	ldi	r26, 0x00	; 0
    7cf0:	b0 e0       	ldi	r27, 0x00	; 0
    7cf2:	8c 15       	cp	r24, r12
    7cf4:	9d 05       	cpc	r25, r13
    7cf6:	ae 05       	cpc	r26, r14
    7cf8:	bf 05       	cpc	r27, r15
    7cfa:	08 f4       	brcc	.+2      	; 0x7cfe <_Z17Blower_Monitoringh+0x2a0>
    7cfc:	91 c0       	rjmp	.+290    	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
    7cfe:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7d02:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7d06:	a0 e0       	ldi	r26, 0x00	; 0
    7d08:	b0 e0       	ldi	r27, 0x00	; 0
    7d0a:	80 17       	cp	r24, r16
    7d0c:	91 07       	cpc	r25, r17
    7d0e:	a2 07       	cpc	r26, r18
    7d10:	b3 07       	cpc	r27, r19
    7d12:	08 f4       	brcc	.+2      	; 0x7d16 <_Z17Blower_Monitoringh+0x2b8>
    7d14:	85 c0       	rjmp	.+266    	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
    7d16:	20 e0       	ldi	r18, 0x00	; 0
    7d18:	30 e0       	ldi	r19, 0x00	; 0
    7d1a:	40 e0       	ldi	r20, 0x00	; 0
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
    7d1c:	5b e1       	ldi	r21, 0x1B	; 27
    7d1e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d22:	90 e0       	ldi	r25, 0x00	; 0
    7d24:	01 97       	sbiw	r24, 0x01	; 1
    7d26:	fc 01       	movw	r30, r24
    7d28:	ee 0f       	add	r30, r30
    7d2a:	ff 1f       	adc	r31, r31
    7d2c:	e8 0f       	add	r30, r24
    7d2e:	f9 1f       	adc	r31, r25
    7d30:	e2 0f       	add	r30, r18
    7d32:	f3 1f       	adc	r31, r19
    7d34:	e8 56       	subi	r30, 0x68	; 104
    7d36:	f6 4f       	sbci	r31, 0xF6	; 246
    7d38:	80 81       	ld	r24, Z
    7d3a:	90 e0       	ldi	r25, 0x00	; 0
    7d3c:	85 56       	subi	r24, 0x65	; 101
    7d3e:	91 09       	sbc	r25, r1
    7d40:	58 9f       	mul	r21, r24
    7d42:	f0 01       	movw	r30, r0
    7d44:	59 9f       	mul	r21, r25
    7d46:	f0 0d       	add	r31, r0
    7d48:	11 24       	eor	r1, r1
    7d4a:	ef 57       	subi	r30, 0x7F	; 127
    7d4c:	f2 4f       	sbci	r31, 0xF2	; 242
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7d4e:	81 81       	ldd	r24, Z+1	; 0x01
    7d50:	88 23       	and	r24, r24
    7d52:	b9 f1       	breq	.+110    	; 0x7dc2 <_Z17Blower_Monitoringh+0x364>
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
    7d54:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d58:	90 e0       	ldi	r25, 0x00	; 0
    7d5a:	01 97       	sbiw	r24, 0x01	; 1
    7d5c:	fc 01       	movw	r30, r24
    7d5e:	ee 0f       	add	r30, r30
    7d60:	ff 1f       	adc	r31, r31
    7d62:	e8 0f       	add	r30, r24
    7d64:	f9 1f       	adc	r31, r25
    7d66:	e2 0f       	add	r30, r18
    7d68:	f3 1f       	adc	r31, r19
    7d6a:	e8 56       	subi	r30, 0x68	; 104
    7d6c:	f6 4f       	sbci	r31, 0xF6	; 246
    7d6e:	80 81       	ld	r24, Z
    7d70:	90 e0       	ldi	r25, 0x00	; 0
    7d72:	85 56       	subi	r24, 0x65	; 101
    7d74:	91 09       	sbc	r25, r1
    7d76:	58 9f       	mul	r21, r24
    7d78:	f0 01       	movw	r30, r0
    7d7a:	59 9f       	mul	r21, r25
    7d7c:	f0 0d       	add	r31, r0
    7d7e:	11 24       	eor	r1, r1
    7d80:	ef 57       	subi	r30, 0x7F	; 127
    7d82:	f2 4f       	sbci	r31, 0xF2	; 242
    7d84:	81 81       	ldd	r24, Z+1	; 0x01
    7d86:	85 36       	cpi	r24, 0x65	; 101
    7d88:	e0 f0       	brcs	.+56     	; 0x7dc2 <_Z17Blower_Monitoringh+0x364>
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7d8a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    7d8e:	90 e0       	ldi	r25, 0x00	; 0
    7d90:	01 97       	sbiw	r24, 0x01	; 1
    7d92:	fc 01       	movw	r30, r24
    7d94:	ee 0f       	add	r30, r30
    7d96:	ff 1f       	adc	r31, r31
    7d98:	e8 0f       	add	r30, r24
    7d9a:	f9 1f       	adc	r31, r25
    7d9c:	e2 0f       	add	r30, r18
    7d9e:	f3 1f       	adc	r31, r19
    7da0:	e8 56       	subi	r30, 0x68	; 104
    7da2:	f6 4f       	sbci	r31, 0xF6	; 246
    7da4:	80 81       	ld	r24, Z
    7da6:	90 e0       	ldi	r25, 0x00	; 0
    7da8:	85 56       	subi	r24, 0x65	; 101
    7daa:	91 09       	sbc	r25, r1
    7dac:	58 9f       	mul	r21, r24
    7dae:	f0 01       	movw	r30, r0
    7db0:	59 9f       	mul	r21, r25
    7db2:	f0 0d       	add	r31, r0
    7db4:	11 24       	eor	r1, r1
    7db6:	ef 57       	subi	r30, 0x7F	; 127
    7db8:	f2 4f       	sbci	r31, 0xF2	; 242
    7dba:	82 81       	ldd	r24, Z+2	; 0x02
    7dbc:	84 30       	cpi	r24, 0x04	; 4
    7dbe:	09 f4       	brne	.+2      	; 0x7dc2 <_Z17Blower_Monitoringh+0x364>
				{
					check_tank_status = 1;
    7dc0:	41 e0       	ldi	r20, 0x01	; 1
    7dc2:	2f 5f       	subi	r18, 0xFF	; 255
    7dc4:	3f 4f       	sbci	r19, 0xFF	; 255
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    7dc6:	23 30       	cpi	r18, 0x03	; 3
    7dc8:	31 05       	cpc	r19, r1
    7dca:	09 f0       	breq	.+2      	; 0x7dce <_Z17Blower_Monitoringh+0x370>
    7dcc:	a8 cf       	rjmp	.-176    	; 0x7d1e <_Z17Blower_Monitoringh+0x2c0>
				{
					check_tank_status = 1;
				}
			}
			
			if(check_tank_status)
    7dce:	44 23       	and	r20, r20
    7dd0:	19 f0       	breq	.+6      	; 0x7dd8 <_Z17Blower_Monitoringh+0x37a>
			{
				_gWait_Blower_Time = _kMAX_BLOWER_REPEAT_TIME;
    7dd2:	88 e0       	ldi	r24, 0x08	; 8
    7dd4:	97 e0       	ldi	r25, 0x07	; 7
    7dd6:	02 c0       	rjmp	.+4      	; 0x7ddc <_Z17Blower_Monitoringh+0x37e>
			}
			else
			{
				_gWait_Blower_Time = 60 * 60;
    7dd8:	80 e1       	ldi	r24, 0x10	; 16
    7dda:	9e e0       	ldi	r25, 0x0E	; 14
    7ddc:	90 93 9e 0c 	sts	0x0C9E, r25	; 0x800c9e <_gWait_Blower_Time+0x1>
    7de0:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gWait_Blower_Time>
			}
			
			_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    7de4:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
			//_kSERAIL_MON_WRITE("blower gets 5 : ");
			
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7de8:	61 e0       	ldi	r22, 0x01	; 1
    7dea:	80 e0       	ldi	r24, 0x00	; 0
    7dec:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7df0:	88 23       	and	r24, r24
    7df2:	b1 f0       	breq	.+44     	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 6 : ");
				//_kSERIAL_MON_CLEAR();
				if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7df4:	80 91 9e 0d 	lds	r24, 0x0D9E	; 0x800d9e <_sExtra_Plot+0x1d>
    7df8:	85 30       	cpi	r24, 0x05	; 5
    7dfa:	91 f0       	breq	.+36     	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
				{
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7dfc:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    7e00:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    7e04:	90 62       	ori	r25, 0x20	; 32
    7e06:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    7e0a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7e0e:	81 e0       	ldi	r24, 0x01	; 1
    7e10:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7e14:	82 e0       	ldi	r24, 0x02	; 2
    7e16:	80 93 b6 0d 	sts	0x0DB6, r24	; 0x800db6 <_sExtra_Plot+0x35>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7e1a:	85 e0       	ldi	r24, 0x05	; 5
    7e1c:	80 93 9e 0d 	sts	0x0D9E, r24	; 0x800d9e <_sExtra_Plot+0x1d>
				}
			}
		}
	}	
}
    7e20:	47 c0       	rjmp	.+142    	; 0x7eb0 <_Z17Blower_Monitoringh+0x452>
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
		{
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
    7e22:	80 91 9d 0c 	lds	r24, 0x0C9D	; 0x800c9d <_gWait_Blower_Time>
    7e26:	90 91 9e 0c 	lds	r25, 0x0C9E	; 0x800c9e <_gWait_Blower_Time+0x1>
    7e2a:	89 2b       	or	r24, r25
    7e2c:	c9 f7       	brne	.-14     	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
    7e2e:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7e32:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    7e36:	a0 e0       	ldi	r26, 0x00	; 0
    7e38:	b0 e0       	ldi	r27, 0x00	; 0
    7e3a:	84 17       	cp	r24, r20
    7e3c:	95 07       	cpc	r25, r21
    7e3e:	a6 07       	cpc	r26, r22
    7e40:	b7 07       	cpc	r27, r23
    7e42:	b0 f0       	brcs	.+44     	; 0x7e70 <_Z17Blower_Monitoringh+0x412>
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
    7e44:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7e48:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7e4c:	a0 e0       	ldi	r26, 0x00	; 0
    7e4e:	b0 e0       	ldi	r27, 0x00	; 0
    7e50:	8c 15       	cp	r24, r12
    7e52:	9d 05       	cpc	r25, r13
    7e54:	ae 05       	cpc	r26, r14
    7e56:	bf 05       	cpc	r27, r15
    7e58:	58 f0       	brcs	.+22     	; 0x7e70 <_Z17Blower_Monitoringh+0x412>
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    7e5a:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    7e5e:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    7e62:	a0 e0       	ldi	r26, 0x00	; 0
    7e64:	b0 e0       	ldi	r27, 0x00	; 0
    7e66:	80 17       	cp	r24, r16
    7e68:	91 07       	cpc	r25, r17
    7e6a:	a2 07       	cpc	r26, r18
    7e6c:	b3 07       	cpc	r27, r19
    7e6e:	c0 f6       	brcc	.-80     	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
				{
					if(Extra_Plot_Valve_Grouping_Handler(_kON, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7e70:	61 e0       	ldi	r22, 0x01	; 1
    7e72:	81 e0       	ldi	r24, 0x01	; 1
    7e74:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7e78:	88 23       	and	r24, r24
    7e7a:	b1 f0       	breq	.+44     	; 0x7ea8 <_Z17Blower_Monitoringh+0x44a>
					{
						//_kSERAIL_MON_WRITE("blower gets 4 : ");
						//_kSERIAL_MON_CLEAR();
						_sSchedules.Blower_On_Scheduler_Status = _kON;
    7e7c:	21 e0       	ldi	r18, 0x01	; 1
    7e7e:	20 93 2d 0b 	sts	0x0B2D, r18	; 0x800b2d <_sSchedules+0x20f>
						_sSchedules.Blower_On_Time = _kBLOWER_ON_TIME;
    7e82:	8a e5       	ldi	r24, 0x5A	; 90
    7e84:	80 93 2c 0b 	sts	0x0B2C, r24	; 0x800b2c <_sSchedules+0x20e>
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7e88:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    7e8c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    7e90:	90 62       	ori	r25, 0x20	; 32
    7e92:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    7e96:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7e9a:	20 93 fd 13 	sts	0x13FD, r18	; 0x8013fd <_sRuble_Parameters+0xb6>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7e9e:	82 e0       	ldi	r24, 0x02	; 2
    7ea0:	80 93 b6 0d 	sts	0x0DB6, r24	; 0x800db6 <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    7ea4:	84 e0       	ldi	r24, 0x04	; 4
    7ea6:	ba cf       	rjmp	.-140    	; 0x7e1c <_Z17Blower_Monitoringh+0x3be>
					}
					else
					{
						_sSchedules.Blower_On_Retry = _kMAX_BLOWER_RETRY_TIME;
    7ea8:	84 eb       	ldi	r24, 0xB4	; 180
    7eaa:	80 93 2e 0b 	sts	0x0B2E, r24	; 0x800b2e <_sSchedules+0x210>
    7eae:	b8 cf       	rjmp	.-144    	; 0x7e20 <_Z17Blower_Monitoringh+0x3c2>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
				}
			}
		}
	}	
}
    7eb0:	1f 91       	pop	r17
    7eb2:	0f 91       	pop	r16
    7eb4:	ff 90       	pop	r15
    7eb6:	ef 90       	pop	r14
    7eb8:	df 90       	pop	r13
    7eba:	cf 90       	pop	r12
    7ebc:	08 95       	ret

00007ebe <_Z18Edited_In_Schedulev>:
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    7ebe:	ef 92       	push	r14
    7ec0:	ff 92       	push	r15
    7ec2:	0f 93       	push	r16
    7ec4:	1f 93       	push	r17
    7ec6:	cf 93       	push	r28
    7ec8:	df 93       	push	r29
	/* edit in the current schedule */
	/* edit in the current schedule */
	if(_sSchedules.Running_Schedule_At == 0)
    7eca:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    7ece:	81 11       	cpse	r24, r1
    7ed0:	ca c0       	rjmp	.+404    	; 0x8066 <_Z18Edited_In_Schedulev+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    7ed2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7ed6:	81 30       	cpi	r24, 0x01	; 1
    7ed8:	51 f4       	brne	.+20     	; 0x7eee <_Z18Edited_In_Schedulev+0x30>
		{
			_kSERAIL_MON_WRITE("my 14");
    7eda:	6d ee       	ldi	r22, 0xED	; 237
    7edc:	7e e0       	ldi	r23, 0x0E	; 14
    7ede:	82 e5       	ldi	r24, 0x52	; 82
    7ee0:	94 e1       	ldi	r25, 0x14	; 20
    7ee2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    7ee6:	82 e5       	ldi	r24, 0x52	; 82
    7ee8:	94 e1       	ldi	r25, 0x14	; 20
    7eea:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    7eee:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    7ef2:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    7ef6:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    7efa:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    7efe:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    7f02:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    7f06:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    7f0a:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    7f0e:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    7f12:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    7f16:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    7f1a:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    7f1e:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    7f22:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    7f26:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    7f2a:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    7f2e:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    7f32:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    7f36:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    7f3a:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    7f3e:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
		}
		
		//_sSchedules.Schedule_Start_From_Today = 1;
		
		if(_sSchedules.Schedule_Start_From_Today != 1)
    7f42:	80 91 94 0b 	lds	r24, 0x0B94	; 0x800b94 <_sSchedules+0x276>
    7f46:	81 30       	cpi	r24, 0x01	; 1
    7f48:	21 f0       	breq	.+8      	; 0x7f52 <_Z18Edited_In_Schedulev+0x94>
		{
			Return_Calculated_Previous_Day_Date(1);
    7f4a:	81 e0       	ldi	r24, 0x01	; 1
    7f4c:	0e 94 58 32 	call	0x64b0	; 0x64b0 <_Z35Return_Calculated_Previous_Day_Dateh>
    7f50:	18 c0       	rjmp	.+48     	; 0x7f82 <_Z18Edited_In_Schedulev+0xc4>
		}
		else
		{
			_sSchedules.Temp_date  = _sRuble_Parameters.Update_Local_Date[0];
    7f52:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    7f56:	80 93 8e 0b 	sts	0x0B8E, r24	; 0x800b8e <_sSchedules+0x270>
			_sSchedules.Temp_Month = _sRuble_Parameters.Update_Local_Date[1];
    7f5a:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    7f5e:	80 93 8f 0b 	sts	0x0B8F, r24	; 0x800b8f <_sSchedules+0x271>
			_sSchedules.Started_Date = _sSchedules.Temp_date;
    7f62:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7f66:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
			_sSchedules.Started_Month = _sSchedules.Temp_Month;
    7f6a:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    7f6e:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
    7f72:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7f76:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
    7f7a:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    7f7e:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    7f82:	00 e0       	ldi	r16, 0x00	; 0
    7f84:	10 e0       	ldi	r17, 0x00	; 0
    7f86:	e1 2c       	mov	r14, r1
    7f88:	f1 2c       	mov	r15, r1
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7f8a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    7f8e:	e7 01       	movw	r28, r14
    7f90:	c2 5e       	subi	r28, 0xE2	; 226
    7f92:	d6 4f       	sbci	r29, 0xF6	; 246
    7f94:	81 30       	cpi	r24, 0x01	; 1
    7f96:	01 f5       	brne	.+64     	; 0x7fd8 <_Z18Edited_In_Schedulev+0x11a>
			{
				Serial.println(F("Running list date "));
    7f98:	6a ed       	ldi	r22, 0xDA	; 218
    7f9a:	7e e0       	ldi	r23, 0x0E	; 14
    7f9c:	82 e5       	ldi	r24, 0x52	; 82
    7f9e:	94 e1       	ldi	r25, 0x14	; 20
    7fa0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run[index_num]);
    7fa4:	fe 01       	movw	r30, r28
    7fa6:	e5 5a       	subi	r30, 0xA5	; 165
    7fa8:	ff 4f       	sbci	r31, 0xFF	; 255
    7faa:	60 81       	ld	r22, Z
    7fac:	4a e0       	ldi	r20, 0x0A	; 10
    7fae:	50 e0       	ldi	r21, 0x00	; 0
    7fb0:	82 e5       	ldi	r24, 0x52	; 82
    7fb2:	94 e1       	ldi	r25, 0x14	; 20
    7fb4:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
				Serial.println(F("Running list month "));
    7fb8:	66 ec       	ldi	r22, 0xC6	; 198
    7fba:	7e e0       	ldi	r23, 0x0E	; 14
    7fbc:	82 e5       	ldi	r24, 0x52	; 82
    7fbe:	94 e1       	ldi	r25, 0x14	; 20
    7fc0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run_Month[index_num]);
    7fc4:	fe 01       	movw	r30, r28
    7fc6:	e6 59       	subi	r30, 0x96	; 150
    7fc8:	ff 4f       	sbci	r31, 0xFF	; 255
    7fca:	60 81       	ld	r22, Z
    7fcc:	4a e0       	ldi	r20, 0x0A	; 10
    7fce:	50 e0       	ldi	r21, 0x00	; 0
    7fd0:	82 e5       	ldi	r24, 0x52	; 82
    7fd2:	94 e1       	ldi	r25, 0x14	; 20
    7fd4:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
			}
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    7fd8:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7fdc:	fe 01       	movw	r30, r28
    7fde:	e5 5a       	subi	r30, 0xA5	; 165
    7fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    7fe2:	80 83       	st	Z, r24
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    7fe4:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    7fe8:	c6 59       	subi	r28, 0x96	; 150
    7fea:	df 4f       	sbci	r29, 0xFF	; 255
    7fec:	88 83       	st	Y, r24
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    7fee:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    7ff2:	90 e0       	ldi	r25, 0x00	; 0
    7ff4:	f8 01       	movw	r30, r16
    7ff6:	ee 0f       	add	r30, r30
    7ff8:	ff 1f       	adc	r31, r31
    7ffa:	eb 53       	subi	r30, 0x3B	; 59
    7ffc:	f5 4f       	sbci	r31, 0xF5	; 245
    7ffe:	91 83       	std	Z+1, r25	; 0x01
    8000:	80 83       	st	Z, r24
    8002:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8006:	90 e0       	ldi	r25, 0x00	; 0
    8008:	f8 01       	movw	r30, r16
    800a:	ee 0f       	add	r30, r30
    800c:	ff 1f       	adc	r31, r31
    800e:	e9 53       	subi	r30, 0x39	; 57
    8010:	f5 4f       	sbci	r31, 0xF5	; 245
    8012:	91 83       	std	Z+1, r25	; 0x01
    8014:	80 83       	st	Z, r24
    8016:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    801a:	90 e0       	ldi	r25, 0x00	; 0
    801c:	f8 01       	movw	r30, r16
    801e:	ee 0f       	add	r30, r30
    8020:	ff 1f       	adc	r31, r31
    8022:	e7 53       	subi	r30, 0x37	; 55
    8024:	f5 4f       	sbci	r31, 0xF5	; 245
    8026:	91 83       	std	Z+1, r25	; 0x01
    8028:	80 83       	st	Z, r24
    802a:	2f ef       	ldi	r18, 0xFF	; 255
    802c:	e2 1a       	sub	r14, r18
    802e:	f2 0a       	sbc	r15, r18
    8030:	0d 5f       	subi	r16, 0xFD	; 253
    8032:	1f 4f       	sbci	r17, 0xFF	; 255
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
		}
		
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    8034:	8e e0       	ldi	r24, 0x0E	; 14
    8036:	e8 16       	cp	r14, r24
    8038:	f1 04       	cpc	r15, r1
    803a:	09 f0       	breq	.+2      	; 0x803e <_Z18Edited_In_Schedulev+0x180>
    803c:	a6 cf       	rjmp	.-180    	; 0x7f8a <_Z18Edited_In_Schedulev+0xcc>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    803e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8042:	81 30       	cpi	r24, 0x01	; 1
    8044:	31 f4       	brne	.+12     	; 0x8052 <_Z18Edited_In_Schedulev+0x194>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8046:	61 e8       	ldi	r22, 0x81	; 129
    8048:	7e e0       	ldi	r23, 0x0E	; 14
    804a:	82 e5       	ldi	r24, 0x52	; 82
    804c:	94 e1       	ldi	r25, 0x14	; 20
    804e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    8052:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8056:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    805a:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    805e:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		return 1;
    8062:	81 e0       	ldi	r24, 0x01	; 1
    8064:	c0 c4       	rjmp	.+2432   	; 0x89e6 <_Z18Edited_In_Schedulev+0xb28>
		/* add previous dates here */
	}
	
	if(_sSchedules.Scheduler_Retry_Timer == _kRESET && _sSchedules.Running_Schedule_At !=0)
    8066:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    806a:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    806e:	89 2b       	or	r24, r25
    8070:	09 f0       	breq	.+2      	; 0x8074 <_Z18Edited_In_Schedulev+0x1b6>
    8072:	18 c4       	rjmp	.+2096   	; 0x88a4 <_Z18Edited_In_Schedulev+0x9e6>
    8074:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8078:	88 23       	and	r24, r24
    807a:	09 f4       	brne	.+2      	; 0x807e <_Z18Edited_In_Schedulev+0x1c0>
    807c:	13 c4       	rjmp	.+2086   	; 0x88a4 <_Z18Edited_In_Schedulev+0x9e6>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    807e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8082:	81 30       	cpi	r24, 0x01	; 1
    8084:	31 f4       	brne	.+12     	; 0x8092 <_Z18Edited_In_Schedulev+0x1d4>
		{
			_kSERAIL_MON_WRITE("my 0");
    8086:	6c e7       	ldi	r22, 0x7C	; 124
    8088:	7e e0       	ldi	r23, 0x0E	; 14
    808a:	82 e5       	ldi	r24, 0x52	; 82
    808c:	94 e1       	ldi	r25, 0x14	; 20
    808e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sSchedules.Back_Up_Running_Scheduler_Number)
    8092:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8096:	88 23       	and	r24, r24
    8098:	09 f4       	brne	.+2      	; 0x809c <_Z18Edited_In_Schedulev+0x1de>
    809a:	8f c4       	rjmp	.+2334   	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    809c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    80a0:	81 30       	cpi	r24, 0x01	; 1
    80a2:	31 f4       	brne	.+12     	; 0x80b0 <_Z18Edited_In_Schedulev+0x1f2>
			{
				_kSERAIL_MON_WRITE("my 1");
    80a4:	67 e7       	ldi	r22, 0x77	; 119
    80a6:	7e e0       	ldi	r23, 0x0E	; 14
    80a8:	82 e5       	ldi	r24, 0x52	; 82
    80aa:	94 e1       	ldi	r25, 0x14	; 20
    80ac:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			
			if(_sSchedules.Back_Up_Running_Schedule_Plot_Number)
    80b0:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
    80b4:	88 23       	and	r24, r24
    80b6:	09 f4       	brne	.+2      	; 0x80ba <_Z18Edited_In_Schedulev+0x1fc>
    80b8:	80 c4       	rjmp	.+2304   	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    80ba:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    80be:	81 30       	cpi	r24, 0x01	; 1
    80c0:	51 f5       	brne	.+84     	; 0x8116 <_Z18Edited_In_Schedulev+0x258>
				{
					_kSERAIL_MON_WRITE("my 2");
    80c2:	62 e7       	ldi	r22, 0x72	; 114
    80c4:	7e e0       	ldi	r23, 0x0E	; 14
    80c6:	82 e5       	ldi	r24, 0x52	; 82
    80c8:	94 e1       	ldi	r25, 0x14	; 20
    80ca:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("Running schedule :");
    80ce:	6f e5       	ldi	r22, 0x5F	; 95
    80d0:	7e e0       	ldi	r23, 0x0E	; 14
    80d2:	82 e5       	ldi	r24, 0x52	; 82
    80d4:	94 e1       	ldi	r25, 0x14	; 20
    80d6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    80da:	82 e5       	ldi	r24, 0x52	; 82
    80dc:	94 e1       	ldi	r25, 0x14	; 20
    80de:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Running_Schedule_At);
    80e2:	60 91 88 0b 	lds	r22, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    80e6:	4a e0       	ldi	r20, 0x0A	; 10
    80e8:	50 e0       	ldi	r21, 0x00	; 0
    80ea:	82 e5       	ldi	r24, 0x52	; 82
    80ec:	94 e1       	ldi	r25, 0x14	; 20
    80ee:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
					_kSERAIL_MON_WRITE("Back up schedule :");
    80f2:	6c e4       	ldi	r22, 0x4C	; 76
    80f4:	7e e0       	ldi	r23, 0x0E	; 14
    80f6:	82 e5       	ldi	r24, 0x52	; 82
    80f8:	94 e1       	ldi	r25, 0x14	; 20
    80fa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    80fe:	82 e5       	ldi	r24, 0x52	; 82
    8100:	94 e1       	ldi	r25, 0x14	; 20
    8102:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Back_Up_Running_Scheduler_Number);
    8106:	60 91 7a 0b 	lds	r22, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    810a:	4a e0       	ldi	r20, 0x0A	; 10
    810c:	50 e0       	ldi	r21, 0x00	; 0
    810e:	82 e5       	ldi	r24, 0x52	; 82
    8110:	94 e1       	ldi	r25, 0x14	; 20
    8112:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
				}
				
				if(_sSchedules.Running_Schedule_At == _sSchedules.Back_Up_Running_Scheduler_Number)
    8116:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    811a:	90 91 7a 0b 	lds	r25, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    811e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8122:	29 13       	cpse	r18, r25
    8124:	1f c1       	rjmp	.+574    	; 0x8364 <_Z18Edited_In_Schedulev+0x4a6>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8126:	81 30       	cpi	r24, 0x01	; 1
    8128:	51 f4       	brne	.+20     	; 0x813e <_Z18Edited_In_Schedulev+0x280>
					{
						_kSERAIL_MON_WRITE("my 3");
    812a:	67 e4       	ldi	r22, 0x47	; 71
    812c:	7e e0       	ldi	r23, 0x0E	; 14
    812e:	82 e5       	ldi	r24, 0x52	; 82
    8130:	94 e1       	ldi	r25, 0x14	; 20
    8132:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8136:	82 e5       	ldi	r24, 0x52	; 82
    8138:	94 e1       	ldi	r25, 0x14	; 20
    813a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					
					if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    813e:	e0 91 7a 0b 	lds	r30, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8142:	f0 e0       	ldi	r31, 0x00	; 0
    8144:	e7 59       	subi	r30, 0x97	; 151
    8146:	f6 4f       	sbci	r31, 0xF6	; 246
    8148:	90 81       	ld	r25, Z
    814a:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
					|| _sSchedules.Running_Schedule_At == _kRESET)
    814e:	98 13       	cpse	r25, r24
    8150:	04 c0       	rjmp	.+8      	; 0x815a <_Z18Edited_In_Schedulev+0x29c>
    8152:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8156:	81 11       	cpse	r24, r1
    8158:	41 c0       	rjmp	.+130    	; 0x81dc <_Z18Edited_In_Schedulev+0x31e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    815a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    815e:	81 30       	cpi	r24, 0x01	; 1
    8160:	51 f4       	brne	.+20     	; 0x8176 <_Z18Edited_In_Schedulev+0x2b8>
						{
							_kSERAIL_MON_WRITE("my 4");
    8162:	62 e4       	ldi	r22, 0x42	; 66
    8164:	7e e0       	ldi	r23, 0x0E	; 14
    8166:	82 e5       	ldi	r24, 0x52	; 82
    8168:	94 e1       	ldi	r25, 0x14	; 20
    816a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    816e:	82 e5       	ldi	r24, 0x52	; 82
    8170:	94 e1       	ldi	r25, 0x14	; 20
    8172:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Running_Schedule_At != _kRESET)
    8176:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    817a:	88 23       	and	r24, r24
    817c:	09 f4       	brne	.+2      	; 0x8180 <_Z18Edited_In_Schedulev+0x2c2>
    817e:	2a c4       	rjmp	.+2132   	; 0x89d4 <_Z18Edited_In_Schedulev+0xb16>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    8180:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8184:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8188:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
						_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    818c:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
						_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8190:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    8194:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
						
						for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
						{
							_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8198:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    819c:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    81a0:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    81a4:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    81a8:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    81ac:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
						}
				
						for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    81b0:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    81b4:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    81b8:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    81bc:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    81c0:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    81c4:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
						}
				
						_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    81c8:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    81cc:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
						for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Running_Tank[tank_number] = _kOFF;
    81d0:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    81d4:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    81d8:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
    81dc:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    81e0:	82 30       	cpi	r24, 0x02	; 2
    81e2:	08 f4       	brcc	.+2      	; 0x81e6 <_Z18Edited_In_Schedulev+0x328>
    81e4:	82 c0       	rjmp	.+260    	; 0x82ea <_Z18Edited_In_Schedulev+0x42c>
    81e6:	40 e0       	ldi	r20, 0x00	; 0
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    81e8:	84 2f       	mov	r24, r20
    81ea:	90 e0       	ldi	r25, 0x00	; 0
    81ec:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    81f0:	30 e0       	ldi	r19, 0x00	; 0
    81f2:	21 50       	subi	r18, 0x01	; 1
    81f4:	31 09       	sbc	r19, r1
    81f6:	82 17       	cp	r24, r18
    81f8:	93 07       	cpc	r25, r19
    81fa:	84 f5       	brge	.+96     	; 0x825c <_Z18Edited_In_Schedulev+0x39e>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    81fc:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8200:	82 5e       	subi	r24, 0xE2	; 226
    8202:	96 4f       	sbci	r25, 0xF6	; 246
    8204:	fc 01       	movw	r30, r24
    8206:	e5 5a       	subi	r30, 0xA5	; 165
    8208:	ff 4f       	sbci	r31, 0xFF	; 255
    820a:	20 83       	st	Z, r18
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    820c:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    8210:	3f 96       	adiw	r30, 0x0f	; 15
    8212:	20 83       	st	Z, r18
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    8214:	23 e0       	ldi	r18, 0x03	; 3
    8216:	42 9f       	mul	r20, r18
    8218:	c0 01       	movw	r24, r0
    821a:	11 24       	eor	r1, r1
    821c:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8220:	30 e0       	ldi	r19, 0x00	; 0
    8222:	fc 01       	movw	r30, r24
    8224:	ee 0f       	add	r30, r30
    8226:	ff 1f       	adc	r31, r31
    8228:	eb 53       	subi	r30, 0x3B	; 59
    822a:	f5 4f       	sbci	r31, 0xF5	; 245
    822c:	31 83       	std	Z+1, r19	; 0x01
    822e:	20 83       	st	Z, r18
    8230:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8234:	30 e0       	ldi	r19, 0x00	; 0
    8236:	fc 01       	movw	r30, r24
    8238:	ee 0f       	add	r30, r30
    823a:	ff 1f       	adc	r31, r31
    823c:	e9 53       	subi	r30, 0x39	; 57
    823e:	f5 4f       	sbci	r31, 0xF5	; 245
    8240:	31 83       	std	Z+1, r19	; 0x01
    8242:	20 83       	st	Z, r18
    8244:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8248:	30 e0       	ldi	r19, 0x00	; 0
    824a:	88 0f       	add	r24, r24
    824c:	99 1f       	adc	r25, r25
    824e:	fc 01       	movw	r30, r24
    8250:	e7 53       	subi	r30, 0x37	; 55
    8252:	f5 4f       	sbci	r31, 0xF5	; 245
    8254:	31 83       	std	Z+1, r19	; 0x01
    8256:	20 83       	st	Z, r18
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8258:	4f 5f       	subi	r20, 0xFF	; 255
    825a:	c6 cf       	rjmp	.-116    	; 0x81e8 <_Z18Edited_In_Schedulev+0x32a>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    825c:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8260:	81 50       	subi	r24, 0x01	; 1
    8262:	8f 30       	cpi	r24, 0x0F	; 15
    8264:	90 f5       	brcc	.+100    	; 0x82ca <_Z18Edited_In_Schedulev+0x40c>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8266:	28 2f       	mov	r18, r24
    8268:	30 e0       	ldi	r19, 0x00	; 0
    826a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    826e:	22 5e       	subi	r18, 0xE2	; 226
    8270:	36 4f       	sbci	r19, 0xF6	; 246
    8272:	f9 01       	movw	r30, r18
    8274:	e5 5a       	subi	r30, 0xA5	; 165
    8276:	ff 4f       	sbci	r31, 0xFF	; 255
    8278:	90 83       	st	Z, r25
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    827a:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    827e:	3f 96       	adiw	r30, 0x0f	; 15
    8280:	90 83       	st	Z, r25
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    8282:	93 e0       	ldi	r25, 0x03	; 3
    8284:	89 9f       	mul	r24, r25
    8286:	90 01       	movw	r18, r0
    8288:	11 24       	eor	r1, r1
    828a:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    828e:	50 e0       	ldi	r21, 0x00	; 0
    8290:	f9 01       	movw	r30, r18
    8292:	ee 0f       	add	r30, r30
    8294:	ff 1f       	adc	r31, r31
    8296:	eb 53       	subi	r30, 0x3B	; 59
    8298:	f5 4f       	sbci	r31, 0xF5	; 245
    829a:	51 83       	std	Z+1, r21	; 0x01
    829c:	40 83       	st	Z, r20
    829e:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    82a2:	50 e0       	ldi	r21, 0x00	; 0
    82a4:	f9 01       	movw	r30, r18
    82a6:	ee 0f       	add	r30, r30
    82a8:	ff 1f       	adc	r31, r31
    82aa:	e9 53       	subi	r30, 0x39	; 57
    82ac:	f5 4f       	sbci	r31, 0xF5	; 245
    82ae:	51 83       	std	Z+1, r21	; 0x01
    82b0:	40 83       	st	Z, r20
    82b2:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    82b6:	50 e0       	ldi	r21, 0x00	; 0
    82b8:	22 0f       	add	r18, r18
    82ba:	33 1f       	adc	r19, r19
    82bc:	f9 01       	movw	r30, r18
    82be:	e7 53       	subi	r30, 0x37	; 55
    82c0:	f5 4f       	sbci	r31, 0xF5	; 245
    82c2:	51 83       	std	Z+1, r21	; 0x01
    82c4:	40 83       	st	Z, r20
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    82c6:	8f 5f       	subi	r24, 0xFF	; 255
    82c8:	cc cf       	rjmp	.-104    	; 0x8262 <_Z18Edited_In_Schedulev+0x3a4>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
							}
						}
						_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    82ca:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    82ce:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    82d2:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    82d6:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    82da:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    82de:	81 30       	cpi	r24, 0x01	; 1
    82e0:	09 f0       	breq	.+2      	; 0x82e4 <_Z18Edited_In_Schedulev+0x426>
    82e2:	6b c3       	rjmp	.+1750   	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
						{
							_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 3//// :");
    82e4:	60 e1       	ldi	r22, 0x10	; 16
    82e6:	7e e0       	ldi	r23, 0x0E	; 14
    82e8:	45 c1       	rjmp	.+650    	; 0x8574 <_Z18Edited_In_Schedulev+0x6b6>
							_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
							_kSERIAL_MON_CLEAR();
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
    82ea:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    82ee:	81 30       	cpi	r24, 0x01	; 1
    82f0:	09 f0       	breq	.+2      	; 0x82f4 <_Z18Edited_In_Schedulev+0x436>
    82f2:	63 c3       	rjmp	.+1734   	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
					{
						Return_Calculated_Previous_Day_Date(1);
    82f4:	0e 94 58 32 	call	0x64b0	; 0x64b0 <_Z35Return_Calculated_Previous_Day_Dateh>
    82f8:	80 e0       	ldi	r24, 0x00	; 0
    82fa:	90 e0       	ldi	r25, 0x00	; 0
    82fc:	20 e0       	ldi	r18, 0x00	; 0
    82fe:	30 e0       	ldi	r19, 0x00	; 0
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8300:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8304:	a9 01       	movw	r20, r18
    8306:	42 5e       	subi	r20, 0xE2	; 226
    8308:	56 4f       	sbci	r21, 0xF6	; 246
    830a:	fa 01       	movw	r30, r20
    830c:	e5 5a       	subi	r30, 0xA5	; 165
    830e:	ff 4f       	sbci	r31, 0xFF	; 255
    8310:	60 83       	st	Z, r22
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    8312:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    8316:	3f 96       	adiw	r30, 0x0f	; 15
    8318:	60 83       	st	Z, r22
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    831a:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    831e:	50 e0       	ldi	r21, 0x00	; 0
    8320:	fc 01       	movw	r30, r24
    8322:	ee 0f       	add	r30, r30
    8324:	ff 1f       	adc	r31, r31
    8326:	eb 53       	subi	r30, 0x3B	; 59
    8328:	f5 4f       	sbci	r31, 0xF5	; 245
    832a:	51 83       	std	Z+1, r21	; 0x01
    832c:	40 83       	st	Z, r20
    832e:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8332:	50 e0       	ldi	r21, 0x00	; 0
    8334:	fc 01       	movw	r30, r24
    8336:	ee 0f       	add	r30, r30
    8338:	ff 1f       	adc	r31, r31
    833a:	e9 53       	subi	r30, 0x39	; 57
    833c:	f5 4f       	sbci	r31, 0xF5	; 245
    833e:	51 83       	std	Z+1, r21	; 0x01
    8340:	40 83       	st	Z, r20
    8342:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8346:	50 e0       	ldi	r21, 0x00	; 0
    8348:	fc 01       	movw	r30, r24
    834a:	ee 0f       	add	r30, r30
    834c:	ff 1f       	adc	r31, r31
    834e:	e7 53       	subi	r30, 0x37	; 55
    8350:	f5 4f       	sbci	r31, 0xF5	; 245
    8352:	51 83       	std	Z+1, r21	; 0x01
    8354:	40 83       	st	Z, r20
    8356:	2f 5f       	subi	r18, 0xFF	; 255
    8358:	3f 4f       	sbci	r19, 0xFF	; 255
    835a:	03 96       	adiw	r24, 0x03	; 3
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
					{
						Return_Calculated_Previous_Day_Date(1);
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    835c:	2f 30       	cpi	r18, 0x0F	; 15
    835e:	31 05       	cpc	r19, r1
    8360:	79 f6       	brne	.-98     	; 0x8300 <_Z18Edited_In_Schedulev+0x442>
    8362:	23 c3       	rjmp	.+1606   	; 0x89aa <_Z18Edited_In_Schedulev+0xaec>
						_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
					}
				}
				else 
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8364:	81 30       	cpi	r24, 0x01	; 1
    8366:	51 f4       	brne	.+20     	; 0x837c <_Z18Edited_In_Schedulev+0x4be>
					{
						_kSERAIL_MON_WRITE("my 5");
    8368:	6b e0       	ldi	r22, 0x0B	; 11
    836a:	7e e0       	ldi	r23, 0x0E	; 14
    836c:	82 e5       	ldi	r24, 0x52	; 82
    836e:	94 e1       	ldi	r25, 0x14	; 20
    8370:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8374:	82 e5       	ldi	r24, 0x52	; 82
    8376:	94 e1       	ldi	r25, 0x14	; 20
    8378:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Running_Schedule_At < _sSchedules.Back_Up_Running_Scheduler_Number)
    837c:	90 91 88 0b 	lds	r25, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8380:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8384:	98 17       	cp	r25, r24
    8386:	08 f0       	brcs	.+2      	; 0x838a <_Z18Edited_In_Schedulev+0x4cc>
    8388:	43 c1       	rjmp	.+646    	; 0x8610 <_Z18Edited_In_Schedulev+0x752>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    838a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    838e:	81 30       	cpi	r24, 0x01	; 1
    8390:	51 f4       	brne	.+20     	; 0x83a6 <_Z18Edited_In_Schedulev+0x4e8>
						{
							_kSERAIL_MON_WRITE("my 6");
    8392:	66 e0       	ldi	r22, 0x06	; 6
    8394:	7e e0       	ldi	r23, 0x0E	; 14
    8396:	82 e5       	ldi	r24, 0x52	; 82
    8398:	94 e1       	ldi	r25, 0x14	; 20
    839a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    839e:	82 e5       	ldi	r24, 0x52	; 82
    83a0:	94 e1       	ldi	r25, 0x14	; 20
    83a2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    83a6:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    83aa:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    83ae:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    83b2:	81 30       	cpi	r24, 0x01	; 1
    83b4:	51 f4       	brne	.+20     	; 0x83ca <_Z18Edited_In_Schedulev+0x50c>
						{
							_kSERAIL_MON_WRITE("my 6.1");
    83b6:	6f ef       	ldi	r22, 0xFF	; 255
    83b8:	7d e0       	ldi	r23, 0x0D	; 13
    83ba:	82 e5       	ldi	r24, 0x52	; 82
    83bc:	94 e1       	ldi	r25, 0x14	; 20
    83be:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    83c2:	82 e5       	ldi	r24, 0x52	; 82
    83c4:	94 e1       	ldi	r25, 0x14	; 20
    83c6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    83ca:	e0 91 7a 0b 	lds	r30, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    83ce:	f0 e0       	ldi	r31, 0x00	; 0
    83d0:	e7 59       	subi	r30, 0x97	; 151
    83d2:	f6 4f       	sbci	r31, 0xF6	; 246
    83d4:	90 81       	ld	r25, Z
    83d6:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    83da:	98 13       	cpse	r25, r24
    83dc:	04 c0       	rjmp	.+8      	; 0x83e6 <_Z18Edited_In_Schedulev+0x528>
    83de:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    83e2:	81 11       	cpse	r24, r1
    83e4:	41 c0       	rjmp	.+130    	; 0x8468 <_Z18Edited_In_Schedulev+0x5aa>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    83e6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    83ea:	81 30       	cpi	r24, 0x01	; 1
    83ec:	51 f4       	brne	.+20     	; 0x8402 <_Z18Edited_In_Schedulev+0x544>
							{
								_kSERAIL_MON_WRITE("my 6.2");
    83ee:	68 ef       	ldi	r22, 0xF8	; 248
    83f0:	7d e0       	ldi	r23, 0x0D	; 13
    83f2:	82 e5       	ldi	r24, 0x52	; 82
    83f4:	94 e1       	ldi	r25, 0x14	; 20
    83f6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    83fa:	82 e5       	ldi	r24, 0x52	; 82
    83fc:	94 e1       	ldi	r25, 0x14	; 20
    83fe:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    8402:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8406:	88 23       	and	r24, r24
    8408:	09 f4       	brne	.+2      	; 0x840c <_Z18Edited_In_Schedulev+0x54e>
    840a:	e7 c2       	rjmp	.+1486   	; 0x89da <_Z18Edited_In_Schedulev+0xb1c>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    840c:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8410:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8414:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8418:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    841c:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    8420:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8424:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    8428:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    842c:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    8430:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    8434:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    8438:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    843c:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    8440:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    8444:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    8448:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    844c:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    8450:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8454:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8458:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    845c:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    8460:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    8464:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8468:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    846c:	82 30       	cpi	r24, 0x02	; 2
    846e:	08 f4       	brcc	.+2      	; 0x8472 <_Z18Edited_In_Schedulev+0x5b4>
    8470:	92 c0       	rjmp	.+292    	; 0x8596 <_Z18Edited_In_Schedulev+0x6d8>
    8472:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8474:	84 2f       	mov	r24, r20
    8476:	90 e0       	ldi	r25, 0x00	; 0
    8478:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    847c:	30 e0       	ldi	r19, 0x00	; 0
    847e:	21 50       	subi	r18, 0x01	; 1
    8480:	31 09       	sbc	r19, r1
    8482:	82 17       	cp	r24, r18
    8484:	93 07       	cpc	r25, r19
    8486:	84 f5       	brge	.+96     	; 0x84e8 <_Z18Edited_In_Schedulev+0x62a>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8488:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    848c:	82 5e       	subi	r24, 0xE2	; 226
    848e:	96 4f       	sbci	r25, 0xF6	; 246
    8490:	fc 01       	movw	r30, r24
    8492:	e5 5a       	subi	r30, 0xA5	; 165
    8494:	ff 4f       	sbci	r31, 0xFF	; 255
    8496:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8498:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    849c:	3f 96       	adiw	r30, 0x0f	; 15
    849e:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    84a0:	23 e0       	ldi	r18, 0x03	; 3
    84a2:	42 9f       	mul	r20, r18
    84a4:	c0 01       	movw	r24, r0
    84a6:	11 24       	eor	r1, r1
    84a8:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    84ac:	30 e0       	ldi	r19, 0x00	; 0
    84ae:	fc 01       	movw	r30, r24
    84b0:	ee 0f       	add	r30, r30
    84b2:	ff 1f       	adc	r31, r31
    84b4:	eb 53       	subi	r30, 0x3B	; 59
    84b6:	f5 4f       	sbci	r31, 0xF5	; 245
    84b8:	31 83       	std	Z+1, r19	; 0x01
    84ba:	20 83       	st	Z, r18
    84bc:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    84c0:	30 e0       	ldi	r19, 0x00	; 0
    84c2:	fc 01       	movw	r30, r24
    84c4:	ee 0f       	add	r30, r30
    84c6:	ff 1f       	adc	r31, r31
    84c8:	e9 53       	subi	r30, 0x39	; 57
    84ca:	f5 4f       	sbci	r31, 0xF5	; 245
    84cc:	31 83       	std	Z+1, r19	; 0x01
    84ce:	20 83       	st	Z, r18
    84d0:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    84d4:	30 e0       	ldi	r19, 0x00	; 0
    84d6:	88 0f       	add	r24, r24
    84d8:	99 1f       	adc	r25, r25
    84da:	fc 01       	movw	r30, r24
    84dc:	e7 53       	subi	r30, 0x37	; 55
    84de:	f5 4f       	sbci	r31, 0xF5	; 245
    84e0:	31 83       	std	Z+1, r19	; 0x01
    84e2:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    84e4:	4f 5f       	subi	r20, 0xFF	; 255
    84e6:	c6 cf       	rjmp	.-116    	; 0x8474 <_Z18Edited_In_Schedulev+0x5b6>
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    84e8:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    84ec:	81 50       	subi	r24, 0x01	; 1
    84ee:	8f 30       	cpi	r24, 0x0F	; 15
    84f0:	90 f5       	brcc	.+100    	; 0x8556 <_Z18Edited_In_Schedulev+0x698>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    84f2:	28 2f       	mov	r18, r24
    84f4:	30 e0       	ldi	r19, 0x00	; 0
    84f6:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    84fa:	22 5e       	subi	r18, 0xE2	; 226
    84fc:	36 4f       	sbci	r19, 0xF6	; 246
    84fe:	f9 01       	movw	r30, r18
    8500:	e5 5a       	subi	r30, 0xA5	; 165
    8502:	ff 4f       	sbci	r31, 0xFF	; 255
    8504:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8506:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    850a:	3f 96       	adiw	r30, 0x0f	; 15
    850c:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    850e:	93 e0       	ldi	r25, 0x03	; 3
    8510:	89 9f       	mul	r24, r25
    8512:	90 01       	movw	r18, r0
    8514:	11 24       	eor	r1, r1
    8516:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    851a:	50 e0       	ldi	r21, 0x00	; 0
    851c:	f9 01       	movw	r30, r18
    851e:	ee 0f       	add	r30, r30
    8520:	ff 1f       	adc	r31, r31
    8522:	eb 53       	subi	r30, 0x3B	; 59
    8524:	f5 4f       	sbci	r31, 0xF5	; 245
    8526:	51 83       	std	Z+1, r21	; 0x01
    8528:	40 83       	st	Z, r20
    852a:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    852e:	50 e0       	ldi	r21, 0x00	; 0
    8530:	f9 01       	movw	r30, r18
    8532:	ee 0f       	add	r30, r30
    8534:	ff 1f       	adc	r31, r31
    8536:	e9 53       	subi	r30, 0x39	; 57
    8538:	f5 4f       	sbci	r31, 0xF5	; 245
    853a:	51 83       	std	Z+1, r21	; 0x01
    853c:	40 83       	st	Z, r20
    853e:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    8542:	50 e0       	ldi	r21, 0x00	; 0
    8544:	22 0f       	add	r18, r18
    8546:	33 1f       	adc	r19, r19
    8548:	f9 01       	movw	r30, r18
    854a:	e7 53       	subi	r30, 0x37	; 55
    854c:	f5 4f       	sbci	r31, 0xF5	; 245
    854e:	51 83       	std	Z+1, r21	; 0x01
    8550:	40 83       	st	Z, r20
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    8552:	8f 5f       	subi	r24, 0xFF	; 255
    8554:	cc cf       	rjmp	.-104    	; 0x84ee <_Z18Edited_In_Schedulev+0x630>
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8556:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    855a:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    855e:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8562:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8566:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    856a:	81 30       	cpi	r24, 0x01	; 1
    856c:	09 f0       	breq	.+2      	; 0x8570 <_Z18Edited_In_Schedulev+0x6b2>
    856e:	25 c2       	rjmp	.+1098   	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 1//// :");
    8570:	66 ec       	ldi	r22, 0xC6	; 198
    8572:	7d e0       	ldi	r23, 0x0D	; 13
    8574:	82 e5       	ldi	r24, 0x52	; 82
    8576:	94 e1       	ldi	r25, 0x14	; 20
    8578:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    857c:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    8580:	4a e0       	ldi	r20, 0x0A	; 10
    8582:	50 e0       	ldi	r21, 0x00	; 0
    8584:	82 e5       	ldi	r24, 0x52	; 82
    8586:	94 e1       	ldi	r25, 0x14	; 20
    8588:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    858c:	82 e5       	ldi	r24, 0x52	; 82
    858e:	94 e1       	ldi	r25, 0x14	; 20
    8590:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    8594:	12 c2       	rjmp	.+1060   	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    8596:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    859a:	81 30       	cpi	r24, 0x01	; 1
    859c:	09 f0       	breq	.+2      	; 0x85a0 <_Z18Edited_In_Schedulev+0x6e2>
    859e:	0d c2       	rjmp	.+1050   	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    85a0:	0e 94 58 32 	call	0x64b0	; 0x64b0 <_Z35Return_Calculated_Previous_Day_Dateh>
    85a4:	80 e0       	ldi	r24, 0x00	; 0
    85a6:	90 e0       	ldi	r25, 0x00	; 0
    85a8:	20 e0       	ldi	r18, 0x00	; 0
    85aa:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    85ac:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    85b0:	a9 01       	movw	r20, r18
    85b2:	42 5e       	subi	r20, 0xE2	; 226
    85b4:	56 4f       	sbci	r21, 0xF6	; 246
    85b6:	fa 01       	movw	r30, r20
    85b8:	e5 5a       	subi	r30, 0xA5	; 165
    85ba:	ff 4f       	sbci	r31, 0xFF	; 255
    85bc:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    85be:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    85c2:	3f 96       	adiw	r30, 0x0f	; 15
    85c4:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    85c6:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    85ca:	50 e0       	ldi	r21, 0x00	; 0
    85cc:	fc 01       	movw	r30, r24
    85ce:	ee 0f       	add	r30, r30
    85d0:	ff 1f       	adc	r31, r31
    85d2:	eb 53       	subi	r30, 0x3B	; 59
    85d4:	f5 4f       	sbci	r31, 0xF5	; 245
    85d6:	51 83       	std	Z+1, r21	; 0x01
    85d8:	40 83       	st	Z, r20
    85da:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    85de:	50 e0       	ldi	r21, 0x00	; 0
    85e0:	fc 01       	movw	r30, r24
    85e2:	ee 0f       	add	r30, r30
    85e4:	ff 1f       	adc	r31, r31
    85e6:	e9 53       	subi	r30, 0x39	; 57
    85e8:	f5 4f       	sbci	r31, 0xF5	; 245
    85ea:	51 83       	std	Z+1, r21	; 0x01
    85ec:	40 83       	st	Z, r20
    85ee:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    85f2:	50 e0       	ldi	r21, 0x00	; 0
    85f4:	fc 01       	movw	r30, r24
    85f6:	ee 0f       	add	r30, r30
    85f8:	ff 1f       	adc	r31, r31
    85fa:	e7 53       	subi	r30, 0x37	; 55
    85fc:	f5 4f       	sbci	r31, 0xF5	; 245
    85fe:	51 83       	std	Z+1, r21	; 0x01
    8600:	40 83       	st	Z, r20
    8602:	2f 5f       	subi	r18, 0xFF	; 255
    8604:	3f 4f       	sbci	r19, 0xFF	; 255
    8606:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8608:	2f 30       	cpi	r18, 0x0F	; 15
    860a:	31 05       	cpc	r19, r1
    860c:	79 f6       	brne	.-98     	; 0x85ac <_Z18Edited_In_Schedulev+0x6ee>
    860e:	cd c1       	rjmp	.+922    	; 0x89aa <_Z18Edited_In_Schedulev+0xaec>
							_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
						}
						
					}
					
					else if(_sSchedules.Running_Schedule_At > _sSchedules.Back_Up_Running_Scheduler_Number)
    8610:	90 91 88 0b 	lds	r25, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8614:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8618:	89 17       	cp	r24, r25
    861a:	08 f0       	brcs	.+2      	; 0x861e <_Z18Edited_In_Schedulev+0x760>
    861c:	ce c1       	rjmp	.+924    	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    861e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8622:	81 30       	cpi	r24, 0x01	; 1
    8624:	51 f4       	brne	.+20     	; 0x863a <_Z18Edited_In_Schedulev+0x77c>
						{
							_kSERAIL_MON_WRITE("my 7");
    8626:	61 ec       	ldi	r22, 0xC1	; 193
    8628:	7d e0       	ldi	r23, 0x0D	; 13
    862a:	82 e5       	ldi	r24, 0x52	; 82
    862c:	94 e1       	ldi	r25, 0x14	; 20
    862e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8632:	82 e5       	ldi	r24, 0x52	; 82
    8634:	94 e1       	ldi	r25, 0x14	; 20
    8636:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    863a:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    863e:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8642:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8646:	81 30       	cpi	r24, 0x01	; 1
    8648:	51 f4       	brne	.+20     	; 0x865e <_Z18Edited_In_Schedulev+0x7a0>
						{
							_kSERAIL_MON_WRITE("my 8");
    864a:	6c eb       	ldi	r22, 0xBC	; 188
    864c:	7d e0       	ldi	r23, 0x0D	; 13
    864e:	82 e5       	ldi	r24, 0x52	; 82
    8650:	94 e1       	ldi	r25, 0x14	; 20
    8652:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8656:	82 e5       	ldi	r24, 0x52	; 82
    8658:	94 e1       	ldi	r25, 0x14	; 20
    865a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    865e:	e0 91 7a 0b 	lds	r30, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    8662:	f0 e0       	ldi	r31, 0x00	; 0
    8664:	e7 59       	subi	r30, 0x97	; 151
    8666:	f6 4f       	sbci	r31, 0xF6	; 246
    8668:	90 81       	ld	r25, Z
    866a:	80 91 7b 0b 	lds	r24, 0x0B7B	; 0x800b7b <_sSchedules+0x25d>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    866e:	98 13       	cpse	r25, r24
    8670:	04 c0       	rjmp	.+8      	; 0x867a <_Z18Edited_In_Schedulev+0x7bc>
    8672:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8676:	81 11       	cpse	r24, r1
    8678:	41 c0       	rjmp	.+130    	; 0x86fc <_Z18Edited_In_Schedulev+0x83e>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    867a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    867e:	81 30       	cpi	r24, 0x01	; 1
    8680:	51 f4       	brne	.+20     	; 0x8696 <_Z18Edited_In_Schedulev+0x7d8>
							{
								_kSERAIL_MON_WRITE("my 9");
    8682:	67 eb       	ldi	r22, 0xB7	; 183
    8684:	7d e0       	ldi	r23, 0x0D	; 13
    8686:	82 e5       	ldi	r24, 0x52	; 82
    8688:	94 e1       	ldi	r25, 0x14	; 20
    868a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    868e:	82 e5       	ldi	r24, 0x52	; 82
    8690:	94 e1       	ldi	r25, 0x14	; 20
    8692:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    8696:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    869a:	88 23       	and	r24, r24
    869c:	09 f4       	brne	.+2      	; 0x86a0 <_Z18Edited_In_Schedulev+0x7e2>
    869e:	a0 c1       	rjmp	.+832    	; 0x89e0 <_Z18Edited_In_Schedulev+0xb22>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    86a0:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    86a4:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    86a8:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    86ac:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    86b0:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    86b4:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    86b8:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    86bc:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    86c0:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    86c4:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    86c8:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    86cc:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    86d0:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    86d4:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    86d8:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    86dc:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    86e0:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    86e4:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    86e8:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    86ec:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    86f0:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    86f4:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    86f8:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    86fc:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8700:	82 30       	cpi	r24, 0x02	; 2
    8702:	08 f4       	brcc	.+2      	; 0x8706 <_Z18Edited_In_Schedulev+0x848>
    8704:	92 c0       	rjmp	.+292    	; 0x882a <_Z18Edited_In_Schedulev+0x96c>
    8706:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8708:	84 2f       	mov	r24, r20
    870a:	90 e0       	ldi	r25, 0x00	; 0
    870c:	20 91 88 0b 	lds	r18, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8710:	30 e0       	ldi	r19, 0x00	; 0
    8712:	21 50       	subi	r18, 0x01	; 1
    8714:	31 09       	sbc	r19, r1
    8716:	82 17       	cp	r24, r18
    8718:	93 07       	cpc	r25, r19
    871a:	84 f5       	brge	.+96     	; 0x877c <_Z18Edited_In_Schedulev+0x8be>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    871c:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8720:	82 5e       	subi	r24, 0xE2	; 226
    8722:	96 4f       	sbci	r25, 0xF6	; 246
    8724:	fc 01       	movw	r30, r24
    8726:	e5 5a       	subi	r30, 0xA5	; 165
    8728:	ff 4f       	sbci	r31, 0xFF	; 255
    872a:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    872c:	20 91 2b 09 	lds	r18, 0x092B	; 0x80092b <_sSchedules+0xd>
    8730:	3f 96       	adiw	r30, 0x0f	; 15
    8732:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    8734:	23 e0       	ldi	r18, 0x03	; 3
    8736:	42 9f       	mul	r20, r18
    8738:	c0 01       	movw	r24, r0
    873a:	11 24       	eor	r1, r1
    873c:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8740:	30 e0       	ldi	r19, 0x00	; 0
    8742:	fc 01       	movw	r30, r24
    8744:	ee 0f       	add	r30, r30
    8746:	ff 1f       	adc	r31, r31
    8748:	eb 53       	subi	r30, 0x3B	; 59
    874a:	f5 4f       	sbci	r31, 0xF5	; 245
    874c:	31 83       	std	Z+1, r19	; 0x01
    874e:	20 83       	st	Z, r18
    8750:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8754:	30 e0       	ldi	r19, 0x00	; 0
    8756:	fc 01       	movw	r30, r24
    8758:	ee 0f       	add	r30, r30
    875a:	ff 1f       	adc	r31, r31
    875c:	e9 53       	subi	r30, 0x39	; 57
    875e:	f5 4f       	sbci	r31, 0xF5	; 245
    8760:	31 83       	std	Z+1, r19	; 0x01
    8762:	20 83       	st	Z, r18
    8764:	20 91 2a 09 	lds	r18, 0x092A	; 0x80092a <_sSchedules+0xc>
    8768:	30 e0       	ldi	r19, 0x00	; 0
    876a:	88 0f       	add	r24, r24
    876c:	99 1f       	adc	r25, r25
    876e:	fc 01       	movw	r30, r24
    8770:	e7 53       	subi	r30, 0x37	; 55
    8772:	f5 4f       	sbci	r31, 0xF5	; 245
    8774:	31 83       	std	Z+1, r19	; 0x01
    8776:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8778:	4f 5f       	subi	r20, 0xFF	; 255
    877a:	c6 cf       	rjmp	.-116    	; 0x8708 <_Z18Edited_In_Schedulev+0x84a>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    877c:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    8780:	81 50       	subi	r24, 0x01	; 1
    8782:	8f 30       	cpi	r24, 0x0F	; 15
    8784:	90 f5       	brcc	.+100    	; 0x87ea <_Z18Edited_In_Schedulev+0x92c>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8786:	28 2f       	mov	r18, r24
    8788:	30 e0       	ldi	r19, 0x00	; 0
    878a:	90 91 28 09 	lds	r25, 0x0928	; 0x800928 <_sSchedules+0xa>
    878e:	22 5e       	subi	r18, 0xE2	; 226
    8790:	36 4f       	sbci	r19, 0xF6	; 246
    8792:	f9 01       	movw	r30, r18
    8794:	e5 5a       	subi	r30, 0xA5	; 165
    8796:	ff 4f       	sbci	r31, 0xFF	; 255
    8798:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    879a:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <_sSchedules+0xb>
    879e:	3f 96       	adiw	r30, 0x0f	; 15
    87a0:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    87a2:	93 e0       	ldi	r25, 0x03	; 3
    87a4:	89 9f       	mul	r24, r25
    87a6:	90 01       	movw	r18, r0
    87a8:	11 24       	eor	r1, r1
    87aa:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    87ae:	50 e0       	ldi	r21, 0x00	; 0
    87b0:	f9 01       	movw	r30, r18
    87b2:	ee 0f       	add	r30, r30
    87b4:	ff 1f       	adc	r31, r31
    87b6:	eb 53       	subi	r30, 0x3B	; 59
    87b8:	f5 4f       	sbci	r31, 0xF5	; 245
    87ba:	51 83       	std	Z+1, r21	; 0x01
    87bc:	40 83       	st	Z, r20
    87be:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    87c2:	50 e0       	ldi	r21, 0x00	; 0
    87c4:	f9 01       	movw	r30, r18
    87c6:	ee 0f       	add	r30, r30
    87c8:	ff 1f       	adc	r31, r31
    87ca:	e9 53       	subi	r30, 0x39	; 57
    87cc:	f5 4f       	sbci	r31, 0xF5	; 245
    87ce:	51 83       	std	Z+1, r21	; 0x01
    87d0:	40 83       	st	Z, r20
    87d2:	40 91 28 09 	lds	r20, 0x0928	; 0x800928 <_sSchedules+0xa>
    87d6:	50 e0       	ldi	r21, 0x00	; 0
    87d8:	22 0f       	add	r18, r18
    87da:	33 1f       	adc	r19, r19
    87dc:	f9 01       	movw	r30, r18
    87de:	e7 53       	subi	r30, 0x37	; 55
    87e0:	f5 4f       	sbci	r31, 0xF5	; 245
    87e2:	51 83       	std	Z+1, r21	; 0x01
    87e4:	40 83       	st	Z, r20
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++ )
    87e6:	8f 5f       	subi	r24, 0xFF	; 255
    87e8:	cc cf       	rjmp	.-104    	; 0x8782 <_Z18Edited_In_Schedulev+0x8c4>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    87ea:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    87ee:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    87f2:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    87f6:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    87fa:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    87fe:	81 30       	cpi	r24, 0x01	; 1
    8800:	09 f0       	breq	.+2      	; 0x8804 <_Z18Edited_In_Schedulev+0x946>
    8802:	db c0       	rjmp	.+438    	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 4//// :");
    8804:	65 e8       	ldi	r22, 0x85	; 133
    8806:	7d e0       	ldi	r23, 0x0D	; 13
    8808:	82 e5       	ldi	r24, 0x52	; 82
    880a:	94 e1       	ldi	r25, 0x14	; 20
    880c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    8810:	82 e5       	ldi	r24, 0x52	; 82
    8812:	94 e1       	ldi	r25, 0x14	; 20
    8814:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    8818:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    881c:	4a e0       	ldi	r20, 0x0A	; 10
    881e:	50 e0       	ldi	r21, 0x00	; 0
    8820:	82 e5       	ldi	r24, 0x52	; 82
    8822:	94 e1       	ldi	r25, 0x14	; 20
    8824:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
    8828:	c8 c0       	rjmp	.+400    	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    882a:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    882e:	81 30       	cpi	r24, 0x01	; 1
    8830:	09 f0       	breq	.+2      	; 0x8834 <_Z18Edited_In_Schedulev+0x976>
    8832:	c3 c0       	rjmp	.+390    	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    8834:	0e 94 58 32 	call	0x64b0	; 0x64b0 <_Z35Return_Calculated_Previous_Day_Dateh>
    8838:	80 e0       	ldi	r24, 0x00	; 0
    883a:	90 e0       	ldi	r25, 0x00	; 0
    883c:	20 e0       	ldi	r18, 0x00	; 0
    883e:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8840:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8844:	a9 01       	movw	r20, r18
    8846:	42 5e       	subi	r20, 0xE2	; 226
    8848:	56 4f       	sbci	r21, 0xF6	; 246
    884a:	fa 01       	movw	r30, r20
    884c:	e5 5a       	subi	r30, 0xA5	; 165
    884e:	ff 4f       	sbci	r31, 0xFF	; 255
    8850:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    8852:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    8856:	3f 96       	adiw	r30, 0x0f	; 15
    8858:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    885a:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    885e:	50 e0       	ldi	r21, 0x00	; 0
    8860:	fc 01       	movw	r30, r24
    8862:	ee 0f       	add	r30, r30
    8864:	ff 1f       	adc	r31, r31
    8866:	eb 53       	subi	r30, 0x3B	; 59
    8868:	f5 4f       	sbci	r31, 0xF5	; 245
    886a:	51 83       	std	Z+1, r21	; 0x01
    886c:	40 83       	st	Z, r20
    886e:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8872:	50 e0       	ldi	r21, 0x00	; 0
    8874:	fc 01       	movw	r30, r24
    8876:	ee 0f       	add	r30, r30
    8878:	ff 1f       	adc	r31, r31
    887a:	e9 53       	subi	r30, 0x39	; 57
    887c:	f5 4f       	sbci	r31, 0xF5	; 245
    887e:	51 83       	std	Z+1, r21	; 0x01
    8880:	40 83       	st	Z, r20
    8882:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8886:	50 e0       	ldi	r21, 0x00	; 0
    8888:	fc 01       	movw	r30, r24
    888a:	ee 0f       	add	r30, r30
    888c:	ff 1f       	adc	r31, r31
    888e:	e7 53       	subi	r30, 0x37	; 55
    8890:	f5 4f       	sbci	r31, 0xF5	; 245
    8892:	51 83       	std	Z+1, r21	; 0x01
    8894:	40 83       	st	Z, r20
    8896:	2f 5f       	subi	r18, 0xFF	; 255
    8898:	3f 4f       	sbci	r19, 0xFF	; 255
    889a:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    889c:	2f 30       	cpi	r18, 0x0F	; 15
    889e:	31 05       	cpc	r19, r1
    88a0:	79 f6       	brne	.-98     	; 0x8840 <_Z18Edited_In_Schedulev+0x982>
    88a2:	83 c0       	rjmp	.+262    	; 0x89aa <_Z18Edited_In_Schedulev+0xaec>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    88a4:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    88a8:	81 11       	cpse	r24, r1
    88aa:	88 c0       	rjmp	.+272    	; 0x89bc <_Z18Edited_In_Schedulev+0xafe>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    88ac:	80 91 7a 0b 	lds	r24, 0x0B7A	; 0x800b7a <_sSchedules+0x25c>
    88b0:	88 23       	and	r24, r24
    88b2:	09 f4       	brne	.+2      	; 0x88b6 <_Z18Edited_In_Schedulev+0x9f8>
    88b4:	83 c0       	rjmp	.+262    	; 0x89bc <_Z18Edited_In_Schedulev+0xafe>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    88b6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    88ba:	81 30       	cpi	r24, 0x01	; 1
    88bc:	51 f4       	brne	.+20     	; 0x88d2 <_Z18Edited_In_Schedulev+0xa14>
		{
			_kSERAIL_MON_WRITE("my 14");
    88be:	6f e7       	ldi	r22, 0x7F	; 127
    88c0:	7d e0       	ldi	r23, 0x0D	; 13
    88c2:	82 e5       	ldi	r24, 0x52	; 82
    88c4:	94 e1       	ldi	r25, 0x14	; 20
    88c6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    88ca:	82 e5       	ldi	r24, 0x52	; 82
    88cc:	94 e1       	ldi	r25, 0x14	; 20
    88ce:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    88d2:	10 92 7a 0b 	sts	0x0B7A, r1	; 0x800b7a <_sSchedules+0x25c>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    88d6:	10 92 7b 0b 	sts	0x0B7B, r1	; 0x800b7b <_sSchedules+0x25d>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    88da:	10 92 7d 0b 	sts	0x0B7D, r1	; 0x800b7d <_sSchedules+0x25f>
    88de:	10 92 7c 0b 	sts	0x0B7C, r1	; 0x800b7c <_sSchedules+0x25e>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    88e2:	10 92 7f 0b 	sts	0x0B7F, r1	; 0x800b7f <_sSchedules+0x261>
    88e6:	10 92 7e 0b 	sts	0x0B7E, r1	; 0x800b7e <_sSchedules+0x260>
    88ea:	10 92 81 0b 	sts	0x0B81, r1	; 0x800b81 <_sSchedules+0x263>
    88ee:	10 92 80 0b 	sts	0x0B80, r1	; 0x800b80 <_sSchedules+0x262>
    88f2:	10 92 83 0b 	sts	0x0B83, r1	; 0x800b83 <_sSchedules+0x265>
    88f6:	10 92 82 0b 	sts	0x0B82, r1	; 0x800b82 <_sSchedules+0x264>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    88fa:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
    88fe:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
    8902:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
    8906:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
    890a:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
    890e:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8912:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8916:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    891a:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    891e:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    8922:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
		}
		
		Return_Calculated_Previous_Day_Date(1);
    8926:	81 e0       	ldi	r24, 0x01	; 1
    8928:	0e 94 58 32 	call	0x64b0	; 0x64b0 <_Z35Return_Calculated_Previous_Day_Dateh>
    892c:	80 e0       	ldi	r24, 0x00	; 0
    892e:	90 e0       	ldi	r25, 0x00	; 0
    8930:	20 e0       	ldi	r18, 0x00	; 0
    8932:	30 e0       	ldi	r19, 0x00	; 0
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
		{
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    8934:	60 91 8e 0b 	lds	r22, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8938:	a9 01       	movw	r20, r18
    893a:	42 5e       	subi	r20, 0xE2	; 226
    893c:	56 4f       	sbci	r21, 0xF6	; 246
    893e:	fa 01       	movw	r30, r20
    8940:	e5 5a       	subi	r30, 0xA5	; 165
    8942:	ff 4f       	sbci	r31, 0xFF	; 255
    8944:	60 83       	st	Z, r22
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    8946:	60 91 8f 0b 	lds	r22, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    894a:	3f 96       	adiw	r30, 0x0f	; 15
    894c:	60 83       	st	Z, r22
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    894e:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8952:	50 e0       	ldi	r21, 0x00	; 0
    8954:	fc 01       	movw	r30, r24
    8956:	ee 0f       	add	r30, r30
    8958:	ff 1f       	adc	r31, r31
    895a:	eb 53       	subi	r30, 0x3B	; 59
    895c:	f5 4f       	sbci	r31, 0xF5	; 245
    895e:	51 83       	std	Z+1, r21	; 0x01
    8960:	40 83       	st	Z, r20
    8962:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    8966:	50 e0       	ldi	r21, 0x00	; 0
    8968:	fc 01       	movw	r30, r24
    896a:	ee 0f       	add	r30, r30
    896c:	ff 1f       	adc	r31, r31
    896e:	e9 53       	subi	r30, 0x39	; 57
    8970:	f5 4f       	sbci	r31, 0xF5	; 245
    8972:	51 83       	std	Z+1, r21	; 0x01
    8974:	40 83       	st	Z, r20
    8976:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    897a:	50 e0       	ldi	r21, 0x00	; 0
    897c:	fc 01       	movw	r30, r24
    897e:	ee 0f       	add	r30, r30
    8980:	ff 1f       	adc	r31, r31
    8982:	e7 53       	subi	r30, 0x37	; 55
    8984:	f5 4f       	sbci	r31, 0xF5	; 245
    8986:	51 83       	std	Z+1, r21	; 0x01
    8988:	40 83       	st	Z, r20
    898a:	2f 5f       	subi	r18, 0xFF	; 255
    898c:	3f 4f       	sbci	r19, 0xFF	; 255
    898e:	03 96       	adiw	r24, 0x03	; 3
			_sSchedules.Running_Tank[tank_number] = _kOFF;
		}
		
		Return_Calculated_Previous_Day_Date(1);
		
		for(unsigned char index_num = 0; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    8990:	2e 30       	cpi	r18, 0x0E	; 14
    8992:	31 05       	cpc	r19, r1
    8994:	79 f6       	brne	.-98     	; 0x8934 <_Z18Edited_In_Schedulev+0xa76>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8996:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    899a:	81 30       	cpi	r24, 0x01	; 1
    899c:	31 f4       	brne	.+12     	; 0x89aa <_Z18Edited_In_Schedulev+0xaec>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    899e:	6a e3       	ldi	r22, 0x3A	; 58
    89a0:	7d e0       	ldi	r23, 0x0D	; 13
    89a2:	82 e5       	ldi	r24, 0x52	; 82
    89a4:	94 e1       	ldi	r25, 0x14	; 20
    89a6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    89aa:	80 91 8e 0b 	lds	r24, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    89ae:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    89b2:	80 91 8f 0b 	lds	r24, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    89b6:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    89ba:	15 c0       	rjmp	.+42     	; 0x89e6 <_Z18Edited_In_Schedulev+0xb28>
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    89bc:	80 91 88 0b 	lds	r24, 0x0B88	; 0x800b88 <_sSchedules+0x26a>
    89c0:	81 11       	cpse	r24, r1
    89c2:	fb cf       	rjmp	.-10     	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
    89c4:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    89c8:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    89cc:	89 2b       	or	r24, r25
    89ce:	09 f4       	brne	.+2      	; 0x89d2 <_Z18Edited_In_Schedulev+0xb14>
    89d0:	72 cf       	rjmp	.-284    	; 0x88b6 <_Z18Edited_In_Schedulev+0x9f8>
    89d2:	f3 cf       	rjmp	.-26     	; 0x89ba <_Z18Edited_In_Schedulev+0xafc>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
						}
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    89d4:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    89d8:	d7 cb       	rjmp	.-2130   	; 0x8188 <_Z18Edited_In_Schedulev+0x2ca>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    89da:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    89de:	1a cd       	rjmp	.-1484   	; 0x8414 <_Z18Edited_In_Schedulev+0x556>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    89e0:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
    89e4:	61 ce       	rjmp	.-830    	; 0x86a8 <_Z18Edited_In_Schedulev+0x7ea>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    89e6:	df 91       	pop	r29
    89e8:	cf 91       	pop	r28
    89ea:	1f 91       	pop	r17
    89ec:	0f 91       	pop	r16
    89ee:	ff 90       	pop	r15
    89f0:	ef 90       	pop	r14
    89f2:	08 95       	ret

000089f4 <_Z18Next_Day_Calculatehh>:
		return 0;
	}
}

unsigned char Next_Day_Calculate(unsigned char date,unsigned char month)
{
    89f4:	1f 93       	push	r17
    89f6:	cf 93       	push	r28
    89f8:	df 93       	push	r29
    89fa:	c8 2f       	mov	r28, r24
    89fc:	16 2f       	mov	r17, r22
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    89fe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8a02:	81 30       	cpi	r24, 0x01	; 1
    8a04:	89 f4       	brne	.+34     	; 0x8a28 <_Z18Next_Day_Calculatehh+0x34>
	{
		_kSERAIL_MON_WRITE("Current date 1: ");
    8a06:	6f e7       	ldi	r22, 0x7F	; 127
    8a08:	7c e0       	ldi	r23, 0x0C	; 12
    8a0a:	82 e5       	ldi	r24, 0x52	; 82
    8a0c:	94 e1       	ldi	r25, 0x14	; 20
    8a0e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8a12:	4a e0       	ldi	r20, 0x0A	; 10
    8a14:	50 e0       	ldi	r21, 0x00	; 0
    8a16:	6c 2f       	mov	r22, r28
    8a18:	82 e5       	ldi	r24, 0x52	; 82
    8a1a:	94 e1       	ldi	r25, 0x14	; 20
    8a1c:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8a20:	82 e5       	ldi	r24, 0x52	; 82
    8a22:	94 e1       	ldi	r25, 0x14	; 20
    8a24:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	date = date + _sSchedules.Days_In_Between_Schedules;
    8a28:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8a2c:	c8 0f       	add	r28, r24
	unsigned char c_month = month;
	unsigned char year = _sRuble_Parameters.Update_Local_Date[2];
    8a2e:	d0 91 78 13 	lds	r29, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8a32:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8a36:	81 30       	cpi	r24, 0x01	; 1
    8a38:	19 f5       	brne	.+70     	; 0x8a80 <_Z18Next_Day_Calculatehh+0x8c>
	{
		_kSERAIL_MON_WRITE("Current date 2: ");
    8a3a:	6e e6       	ldi	r22, 0x6E	; 110
    8a3c:	7c e0       	ldi	r23, 0x0C	; 12
    8a3e:	82 e5       	ldi	r24, 0x52	; 82
    8a40:	94 e1       	ldi	r25, 0x14	; 20
    8a42:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8a46:	4a e0       	ldi	r20, 0x0A	; 10
    8a48:	50 e0       	ldi	r21, 0x00	; 0
    8a4a:	6c 2f       	mov	r22, r28
    8a4c:	82 e5       	ldi	r24, 0x52	; 82
    8a4e:	94 e1       	ldi	r25, 0x14	; 20
    8a50:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8a54:	82 e5       	ldi	r24, 0x52	; 82
    8a56:	94 e1       	ldi	r25, 0x14	; 20
    8a58:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("diays in beteweeen .............: ");
    8a5c:	6b e4       	ldi	r22, 0x4B	; 75
    8a5e:	7c e0       	ldi	r23, 0x0C	; 12
    8a60:	82 e5       	ldi	r24, 0x52	; 82
    8a62:	94 e1       	ldi	r25, 0x14	; 20
    8a64:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
    8a68:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
    8a6c:	4a e0       	ldi	r20, 0x0A	; 10
    8a6e:	50 e0       	ldi	r21, 0x00	; 0
    8a70:	82 e5       	ldi	r24, 0x52	; 82
    8a72:	94 e1       	ldi	r25, 0x14	; 20
    8a74:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8a78:	82 e5       	ldi	r24, 0x52	; 82
    8a7a:	94 e1       	ldi	r25, 0x14	; 20
    8a7c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	switch(month)
    8a80:	81 2f       	mov	r24, r17
    8a82:	90 e0       	ldi	r25, 0x00	; 0
    8a84:	fc 01       	movw	r30, r24
    8a86:	31 97       	sbiw	r30, 0x01	; 1
    8a88:	ec 30       	cpi	r30, 0x0C	; 12
    8a8a:	f1 05       	cpc	r31, r1
    8a8c:	08 f0       	brcs	.+2      	; 0x8a90 <_Z18Next_Day_Calculatehh+0x9c>
    8a8e:	56 c0       	rjmp	.+172    	; 0x8b3c <_Z18Next_Day_Calculatehh+0x148>
    8a90:	88 27       	eor	r24, r24
    8a92:	ef 52       	subi	r30, 0x2F	; 47
    8a94:	ff 4f       	sbci	r31, 0xFF	; 255
    8a96:	8f 4f       	sbci	r24, 0xFF	; 255
    8a98:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
    8a9c:	8d 2f       	mov	r24, r29
    8a9e:	83 70       	andi	r24, 0x03	; 3
			
		}break;
		
		case _eFEB:
		{
			if(year%4)
    8aa0:	61 f0       	breq	.+24     	; 0x8aba <_Z18Next_Day_Calculatehh+0xc6>
			{
				if(date > 28)
    8aa2:	cd 31       	cpi	r28, 0x1D	; 29
    8aa4:	08 f0       	brcs	.+2      	; 0x8aa8 <_Z18Next_Day_Calculatehh+0xb4>
    8aa6:	4a c0       	rjmp	.+148    	; 0x8b3c <_Z18Next_Day_Calculatehh+0x148>
					
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >=  date)
    8aa8:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8aac:	8c 17       	cp	r24, r28
    8aae:	08 f4       	brcc	.+2      	; 0x8ab2 <_Z18Next_Day_Calculatehh+0xbe>
    8ab0:	45 c0       	rjmp	.+138    	; 0x8b3c <_Z18Next_Day_Calculatehh+0x148>
				{
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8ab2:	c8 13       	cpse	r28, r24
    8ab4:	0b c0       	rjmp	.+22     	; 0x8acc <_Z18Next_Day_Calculatehh+0xd8>
					{
						return 1;
    8ab6:	81 e0       	ldi	r24, 0x01	; 1
    8ab8:	42 c0       	rjmp	.+132    	; 0x8b3e <_Z18Next_Day_Calculatehh+0x14a>
					}
				}
			}
			else
			{
				if(date > 29)
    8aba:	ce 31       	cpi	r28, 0x1E	; 30
    8abc:	08 f0       	brcs	.+2      	; 0x8ac0 <_Z18Next_Day_Calculatehh+0xcc>
    8abe:	3f c0       	rjmp	.+126    	; 0x8b3e <_Z18Next_Day_Calculatehh+0x14a>
						}
					}
				}
				else
				{
					if( _sRuble_Parameters.Update_Local_Date[0] >=   date)
    8ac0:	90 91 76 13 	lds	r25, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8ac4:	9c 17       	cp	r25, r28
    8ac6:	d8 f1       	brcs	.+118    	; 0x8b3e <_Z18Next_Day_Calculatehh+0x14a>
					{
						if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8ac8:	c9 17       	cp	r28, r25
    8aca:	a9 f3       	breq	.-22     	; 0x8ab6 <_Z18Next_Day_Calculatehh+0xc2>
					{
						return 1;
					}
					else
					{
						return 2;
    8acc:	82 e0       	ldi	r24, 0x02	; 2
    8ace:	37 c0       	rjmp	.+110    	; 0x8b3e <_Z18Next_Day_Calculatehh+0x14a>
			
		}break;
		
		case _eMARCH:
		{
			if(date > 31)
    8ad0:	c0 32       	cpi	r28, 0x20	; 32
    8ad2:	a0 f5       	brcc	.+104    	; 0x8b3c <_Z18Next_Day_Calculatehh+0x148>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >= date)
    8ad4:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8ad8:	8c 17       	cp	r24, r28
    8ada:	80 f1       	brcs	.+96     	; 0x8b3c <_Z18Next_Day_Calculatehh+0x148>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8adc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8ae0:	81 30       	cpi	r24, 0x01	; 1
    8ae2:	19 f5       	brne	.+70     	; 0x8b2a <_Z18Next_Day_Calculatehh+0x136>
					{
						_kSERAIL_MON_WRITE("Required date : ");
    8ae4:	6a e3       	ldi	r22, 0x3A	; 58
    8ae6:	7c e0       	ldi	r23, 0x0C	; 12
    8ae8:	82 e5       	ldi	r24, 0x52	; 82
    8aea:	94 e1       	ldi	r25, 0x14	; 20
    8aec:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(date);
    8af0:	4a e0       	ldi	r20, 0x0A	; 10
    8af2:	50 e0       	ldi	r21, 0x00	; 0
    8af4:	6c 2f       	mov	r22, r28
    8af6:	82 e5       	ldi	r24, 0x52	; 82
    8af8:	94 e1       	ldi	r25, 0x14	; 20
    8afa:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8afe:	82 e5       	ldi	r24, 0x52	; 82
    8b00:	94 e1       	ldi	r25, 0x14	; 20
    8b02:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						
						_kSERAIL_MON_WRITE("Current date : ");
    8b06:	6a e2       	ldi	r22, 0x2A	; 42
    8b08:	7c e0       	ldi	r23, 0x0C	; 12
    8b0a:	82 e5       	ldi	r24, 0x52	; 82
    8b0c:	94 e1       	ldi	r25, 0x14	; 20
    8b0e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    8b12:	4a e0       	ldi	r20, 0x0A	; 10
    8b14:	50 e0       	ldi	r21, 0x00	; 0
    8b16:	60 91 76 13 	lds	r22, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8b1a:	82 e5       	ldi	r24, 0x52	; 82
    8b1c:	94 e1       	ldi	r25, 0x14	; 20
    8b1e:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    8b22:	82 e5       	ldi	r24, 0x52	; 82
    8b24:	94 e1       	ldi	r25, 0x14	; 20
    8b26:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					
					
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8b2a:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8b2e:	c1 cf       	rjmp	.-126    	; 0x8ab2 <_Z18Next_Day_Calculatehh+0xbe>
			
		}break;
		
		case _eNOV:
		{
			if(date > 30)
    8b30:	cf 31       	cpi	r28, 0x1F	; 31
    8b32:	20 f4       	brcc	.+8      	; 0x8b3c <_Z18Next_Day_Calculatehh+0x148>
    8b34:	b9 cf       	rjmp	.-142    	; 0x8aa8 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
		case _eDEC:
		{
			if(date > 31)
    8b36:	c0 32       	cpi	r28, 0x20	; 32
    8b38:	08 f4       	brcc	.+2      	; 0x8b3c <_Z18Next_Day_Calculatehh+0x148>
    8b3a:	b6 cf       	rjmp	.-148    	; 0x8aa8 <_Z18Next_Day_Calculatehh+0xb4>
			
		}break;
		
	}
	
	return 0;
    8b3c:	80 e0       	ldi	r24, 0x00	; 0
	
}
    8b3e:	df 91       	pop	r29
    8b40:	cf 91       	pop	r28
    8b42:	1f 91       	pop	r17
    8b44:	08 95       	ret

00008b46 <_Z22Do_Not_Repeat_Schedulev>:
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}

unsigned char Do_Not_Repeat_Schedule(void)
{
    8b46:	cf 93       	push	r28
	unsigned char check_for_repeat;
	
	if(_sSchedules.Cyclic_Schedule_Flag != _kSET)
    8b48:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    8b4c:	81 30       	cpi	r24, 0x01	; 1
    8b4e:	09 f4       	brne	.+2      	; 0x8b52 <_Z22Do_Not_Repeat_Schedulev+0xc>
    8b50:	4b c0       	rjmp	.+150    	; 0x8be8 <_Z22Do_Not_Repeat_Schedulev+0xa2>
	{
		if(_sSchedules.Which_Sheduler_Is_Running)
    8b52:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8b56:	88 23       	and	r24, r24
    8b58:	09 f4       	brne	.+2      	; 0x8b5c <_Z22Do_Not_Repeat_Schedulev+0x16>
    8b5a:	46 c0       	rjmp	.+140    	; 0x8be8 <_Z22Do_Not_Repeat_Schedulev+0xa2>
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8b5c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8b60:	81 30       	cpi	r24, 0x01	; 1
    8b62:	29 f4       	brne	.+10     	; 0x8b6e <_Z22Do_Not_Repeat_Schedulev+0x28>
			{
				
				check_for_repeat = Next_Day_Calculate(_sSchedules.Started_Date,_sSchedules.Started_Month);
    8b64:	60 91 2b 09 	lds	r22, 0x092B	; 0x80092b <_sSchedules+0xd>
    8b68:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8b6c:	04 c0       	rjmp	.+8      	; 0x8b76 <_Z22Do_Not_Repeat_Schedulev+0x30>
			}
			else
			{
				check_for_repeat = Next_Day_Calculate(_sSchedules.First_Schedule_Irrigated_Date,_sSchedules.First_Schedule_Irrigated_Month);
    8b6e:	60 91 91 0b 	lds	r22, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    8b72:	80 91 90 0b 	lds	r24, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    8b76:	3e df       	rcall	.-388    	; 0x89f4 <_Z18Next_Day_Calculatehh>
			}
			
			if(check_for_repeat == 1)
    8b78:	81 30       	cpi	r24, 0x01	; 1
    8b7a:	09 f0       	breq	.+2      	; 0x8b7e <_Z22Do_Not_Repeat_Schedulev+0x38>
    8b7c:	53 c0       	rjmp	.+166    	; 0x8c24 <_Z22Do_Not_Repeat_Schedulev+0xde>
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8b7e:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8b82:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8b86:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8b8a:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8b8e:	80 91 57 13 	lds	r24, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    8b92:	90 91 58 13 	lds	r25, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    8b96:	a0 91 59 13 	lds	r26, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    8b9a:	b0 91 5a 13 	lds	r27, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    8b9e:	48 17       	cp	r20, r24
    8ba0:	59 07       	cpc	r21, r25
    8ba2:	6a 07       	cpc	r22, r26
    8ba4:	7b 07       	cpc	r23, r27
    8ba6:	00 f5       	brcc	.+64     	; 0x8be8 <_Z22Do_Not_Repeat_Schedulev+0xa2>
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8ba8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8bac:	81 30       	cpi	r24, 0x01	; 1
    8bae:	f1 f4       	brne	.+60     	; 0x8bec <_Z22Do_Not_Repeat_Schedulev+0xa6>
						/*for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
						}*/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8bb0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8bb4:	81 30       	cpi	r24, 0x01	; 1
    8bb6:	51 f4       	brne	.+20     	; 0x8bcc <_Z22Do_Not_Repeat_Schedulev+0x86>
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1 ##############################");
    8bb8:	62 e0       	ldi	r22, 0x02	; 2
    8bba:	7d e0       	ldi	r23, 0x0D	; 13
    8bbc:	82 e5       	ldi	r24, 0x52	; 82
    8bbe:	94 e1       	ldi	r25, 0x14	; 20
    8bc0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8bc4:	82 e5       	ldi	r24, 0x52	; 82
    8bc6:	94 e1       	ldi	r25, 0x14	; 20
    8bc8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
    8bcc:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    8bd0:	f0 e0       	ldi	r31, 0x00	; 0
    8bd2:	ee 0f       	add	r30, r30
    8bd4:	ff 1f       	adc	r31, r31
    8bd6:	e4 5e       	subi	r30, 0xE4	; 228
    8bd8:	f6 4f       	sbci	r31, 0xF6	; 246
    8bda:	87 8d       	ldd	r24, Z+31	; 0x1f
    8bdc:	90 a1       	ldd	r25, Z+32	; 0x20
    8bde:	01 96       	adiw	r24, 0x01	; 1
    8be0:	90 93 27 09 	sts	0x0927, r25	; 0x800927 <_sSchedules+0x9>
    8be4:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <_sSchedules+0x8>
						return 0;
    8be8:	c0 e0       	ldi	r28, 0x00	; 0
    8bea:	3f c0       	rjmp	.+126    	; 0x8c6a <_Z22Do_Not_Repeat_Schedulev+0x124>
			
			if(check_for_repeat == 1)
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8bec:	80 e0       	ldi	r24, 0x00	; 0
    8bee:	90 e0       	ldi	r25, 0x00	; 0
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8bf0:	40 91 90 0b 	lds	r20, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    8bf4:	9c 01       	movw	r18, r24
    8bf6:	22 5e       	subi	r18, 0xE2	; 226
    8bf8:	36 4f       	sbci	r19, 0xF6	; 246
    8bfa:	f9 01       	movw	r30, r18
    8bfc:	e5 5a       	subi	r30, 0xA5	; 165
    8bfe:	ff 4f       	sbci	r31, 0xFF	; 255
    8c00:	40 83       	st	Z, r20
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8c02:	40 91 91 0b 	lds	r20, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    8c06:	3f 96       	adiw	r30, 0x0f	; 15
    8c08:	40 83       	st	Z, r20
    8c0a:	01 96       	adiw	r24, 0x01	; 1
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
						return 0;
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kNUMBER_OF_SCHEDULES+1; index_num++)
    8c0c:	8f 30       	cpi	r24, 0x0F	; 15
    8c0e:	91 05       	cpc	r25, r1
    8c10:	79 f7       	brne	.-34     	; 0x8bf0 <_Z22Do_Not_Repeat_Schedulev+0xaa>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c12:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8c16:	c1 30       	cpi	r28, 0x01	; 1
    8c18:	11 f0       	breq	.+4      	; 0x8c1e <_Z22Do_Not_Repeat_Schedulev+0xd8>
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
							_kSERIAL_MON_CLEAR();
						}
					}
					
					return 1;
    8c1a:	c1 e0       	ldi	r28, 0x01	; 1
    8c1c:	26 c0       	rjmp	.+76     	; 0x8c6a <_Z22Do_Not_Repeat_Schedulev+0x124>
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
    8c1e:	68 ec       	ldi	r22, 0xC8	; 200
    8c20:	7c e0       	ldi	r23, 0x0C	; 12
    8c22:	1b c0       	rjmp	.+54     	; 0x8c5a <_Z22Do_Not_Repeat_Schedulev+0x114>
					}
					
					return 1;
				}
			}
			if(check_for_repeat == 2)
    8c24:	82 30       	cpi	r24, 0x02	; 2
    8c26:	01 f7       	brne	.-64     	; 0x8be8 <_Z22Do_Not_Repeat_Schedulev+0xa2>
    8c28:	80 e0       	ldi	r24, 0x00	; 0
    8c2a:	90 e0       	ldi	r25, 0x00	; 0
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8c2c:	40 91 90 0b 	lds	r20, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    8c30:	9c 01       	movw	r18, r24
    8c32:	22 5e       	subi	r18, 0xE2	; 226
    8c34:	36 4f       	sbci	r19, 0xF6	; 246
    8c36:	f9 01       	movw	r30, r18
    8c38:	e5 5a       	subi	r30, 0xA5	; 165
    8c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    8c3c:	40 83       	st	Z, r20
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8c3e:	40 91 91 0b 	lds	r20, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    8c42:	3f 96       	adiw	r30, 0x0f	; 15
    8c44:	40 83       	st	Z, r20
    8c46:	01 96       	adiw	r24, 0x01	; 1
					return 1;
				}
			}
			if(check_for_repeat == 2)
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8c48:	8f 30       	cpi	r24, 0x0F	; 15
    8c4a:	91 05       	cpc	r25, r1
    8c4c:	79 f7       	brne	.-34     	; 0x8c2c <_Z22Do_Not_Repeat_Schedulev+0xe6>
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c4e:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8c52:	c1 30       	cpi	r28, 0x01	; 1
    8c54:	11 f7       	brne	.-60     	; 0x8c1a <_Z22Do_Not_Repeat_Schedulev+0xd4>
				{
					_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 2 ##############################");
    8c56:	60 e9       	ldi	r22, 0x90	; 144
    8c58:	7c e0       	ldi	r23, 0x0C	; 12
    8c5a:	82 e5       	ldi	r24, 0x52	; 82
    8c5c:	94 e1       	ldi	r25, 0x14	; 20
    8c5e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8c62:	82 e5       	ldi	r24, 0x52	; 82
    8c64:	94 e1       	ldi	r25, 0x14	; 20
    8c66:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	else
	{
		return 0;
	}
}
    8c6a:	8c 2f       	mov	r24, r28
    8c6c:	cf 91       	pop	r28
    8c6e:	08 95       	ret

00008c70 <_Z34Check_Time_For_Schedule_To_Triggerhh>:
	return 0;
	
}

unsigned char Check_Time_For_Schedule_To_Trigger(unsigned char Case_Number, unsigned char check_days)
{
    8c70:	cf 93       	push	r28
    8c72:	df 93       	push	r29
    8c74:	c8 2f       	mov	r28, r24
    8c76:	d6 2f       	mov	r29, r22
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;   /* turn on the last schedule or new schedule */
    8c78:	81 e0       	ldi	r24, 0x01	; 1
    8c7a:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
	
	if(_sSchedules.Which_Sheduler_Is_Running == _kRESET)
    8c7e:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8c82:	91 11       	cpse	r25, r1
    8c84:	06 c0       	rjmp	.+12     	; 0x8c92 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22>
	{
		//_kSERAIL_MON_WRITE("sc enter 28");
		_sSchedules.Which_Sheduler_Is_Running = _kSET;
    8c86:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8c8a:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    8c8e:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
	}
	
	/* check weather schedules are already started save in eeprom */
	if(_sSchedules.Schedule_Are_Started == _kRESET || (_sSchedules.Which_Sheduler_Is_Running == 1))
    8c92:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    8c96:	88 23       	and	r24, r24
    8c98:	29 f0       	breq	.+10     	; 0x8ca4 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8c9a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8c9e:	81 30       	cpi	r24, 0x01	; 1
    8ca0:	09 f0       	breq	.+2      	; 0x8ca4 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8ca2:	79 c1       	rjmp	.+754    	; 0x8f96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
	{
		//_kSERAIL_MON_WRITE("sc enter 29");
		_sSchedules.Schedule_Are_Started = _kSET;
    8ca4:	81 e0       	ldi	r24, 0x01	; 1
    8ca6:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
		
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8caa:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8cae:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8cb2:	91 30       	cpi	r25, 0x01	; 1
    8cb4:	91 f4       	brne	.+36     	; 0x8cda <_Z34Check_Time_For_Schedule_To_Triggerhh+0x6a>
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8cb6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8cba:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8cbe:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8cc2:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8cc6:	43 34       	cpi	r20, 0x43	; 67
    8cc8:	51 45       	sbci	r21, 0x51	; 81
    8cca:	61 40       	sbci	r22, 0x01	; 1
    8ccc:	71 05       	cpc	r23, r1
    8cce:	08 f0       	brcs	.+2      	; 0x8cd2 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x62>
    8cd0:	56 c0       	rjmp	.+172    	; 0x8d7e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8cd2:	c1 30       	cpi	r28, 0x01	; 1
    8cd4:	09 f0       	breq	.+2      	; 0x8cd8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x68>
    8cd6:	53 c0       	rjmp	.+166    	; 0x8d7e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8cd8:	6f c0       	rjmp	.+222    	; 0x8db8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x148>
				
			}
		}
		else
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1 && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    8cda:	90 91 21 09 	lds	r25, 0x0921	; 0x800921 <_sSchedules+0x3>
    8cde:	91 30       	cpi	r25, 0x01	; 1
    8ce0:	d1 f5       	brne	.+116    	; 0x8d56 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
    8ce2:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    8ce6:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    8cea:	23 2b       	or	r18, r19
    8cec:	a1 f5       	brne	.+104    	; 0x8d56 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
    8cee:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8cf2:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8cf6:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8cfa:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8cfe:	48 35       	cpi	r20, 0x58	; 88
    8d00:	52 40       	sbci	r21, 0x02	; 2
    8d02:	61 05       	cpc	r22, r1
    8d04:	71 05       	cpc	r23, r1
    8d06:	08 f4       	brcc	.+2      	; 0x8d0a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x9a>
    8d08:	d5 c0       	rjmp	.+426    	; 0x8eb4 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x244>
					_sSchedules.Trigger_Time = 600;
					_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
				}
				else
				{
					if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    8d0a:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8d0e:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8d12:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8d16:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8d1a:	4c 32       	cpi	r20, 0x2C	; 44
    8d1c:	51 40       	sbci	r21, 0x01	; 1
    8d1e:	61 05       	cpc	r22, r1
    8d20:	71 05       	cpc	r23, r1
    8d22:	08 f0       	brcs	.+2      	; 0x8d26 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xb6>
    8d24:	e0 c0       	rjmp	.+448    	; 0x8ee6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x276>
					{
						_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    8d26:	47 e1       	ldi	r20, 0x17	; 23
    8d28:	50 e5       	ldi	r21, 0x50	; 80
    8d2a:	61 e0       	ldi	r22, 0x01	; 1
    8d2c:	70 e0       	ldi	r23, 0x00	; 0
    8d2e:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    8d32:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    8d36:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    8d3a:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d3e:	81 30       	cpi	r24, 0x01	; 1
    8d40:	51 f4       	brne	.+20     	; 0x8d56 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
						{
							_kSERAIL_MON_WRITE("sc enter 11.1.0.1");
    8d42:	63 e7       	ldi	r22, 0x73	; 115
    8d44:	7b e0       	ldi	r23, 0x0B	; 11
    8d46:	82 e5       	ldi	r24, 0x52	; 82
    8d48:	94 e1       	ldi	r25, 0x14	; 20
    8d4a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8d4e:	82 e5       	ldi	r24, 0x52	; 82
    8d50:	94 e1       	ldi	r25, 0x14	; 20
    8d52:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
					}
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8d56:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8d5a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8d5e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8d62:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8d66:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8d6a:	43 34       	cpi	r20, 0x43	; 67
    8d6c:	51 45       	sbci	r21, 0x51	; 81
    8d6e:	61 40       	sbci	r22, 0x01	; 1
    8d70:	71 05       	cpc	r23, r1
    8d72:	08 f0       	brcs	.+2      	; 0x8d76 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x106>
    8d74:	63 c0       	rjmp	.+198    	; 0x8e3c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8d76:	c1 30       	cpi	r28, 0x01	; 1
    8d78:	09 f0       	breq	.+2      	; 0x8d7c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10c>
    8d7a:	60 c0       	rjmp	.+192    	; 0x8e3c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8d7c:	34 c0       	rjmp	.+104    	; 0x8de6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x176>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d7e:	81 30       	cpi	r24, 0x01	; 1
    8d80:	51 f4       	brne	.+20     	; 0x8d96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x126>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8d82:	69 e9       	ldi	r22, 0x99	; 153
    8d84:	7b e0       	ldi	r23, 0x0B	; 11
    8d86:	82 e5       	ldi	r24, 0x52	; 82
    8d88:	94 e1       	ldi	r25, 0x14	; 20
    8d8a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8d8e:	82 e5       	ldi	r24, 0x52	; 82
    8d90:	94 e1       	ldi	r25, 0x14	; 20
    8d92:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8d96:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8d9a:	81 30       	cpi	r24, 0x01	; 1
    8d9c:	09 f0       	breq	.+2      	; 0x8da0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x130>
    8d9e:	fb c0       	rjmp	.+502    	; 0x8f96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8da0:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8da4:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8da8:	89 2b       	or	r24, r25
    8daa:	09 f0       	breq	.+2      	; 0x8dae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x13e>
    8dac:	f4 c0       	rjmp	.+488    	; 0x8f96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
    8dae:	0e 94 bf 31 	call	0x637e	; 0x637e <_Z24Return_Previous_Day_Datev>
    8db2:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    8db6:	7b c0       	rjmp	.+246    	; 0x8eae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x23e>
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				//_kSERAIL_MON_WRITE("sc enter 30");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8db8:	81 30       	cpi	r24, 0x01	; 1
    8dba:	51 f4       	brne	.+20     	; 0x8dd0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x160>
				{
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8dbc:	6d ed       	ldi	r22, 0xDD	; 221
    8dbe:	7b e0       	ldi	r23, 0x0B	; 11
    8dc0:	82 e5       	ldi	r24, 0x52	; 82
    8dc2:	94 e1       	ldi	r25, 0x14	; 20
    8dc4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8dc8:	82 e5       	ldi	r24, 0x52	; 82
    8dca:	94 e1       	ldi	r25, 0x14	; 20
    8dcc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8dd0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8dd4:	81 30       	cpi	r24, 0x01	; 1
    8dd6:	f1 f4       	brne	.+60     	; 0x8e14 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8dd8:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8ddc:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8de0:	89 2b       	or	r24, r25
    8de2:	09 f1       	breq	.+66     	; 0x8e26 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1b6>
    8de4:	17 c0       	rjmp	.+46     	; 0x8e14 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8de6:	81 30       	cpi	r24, 0x01	; 1
    8de8:	81 f4       	brne	.+32     	; 0x8e0a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x19a>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
    8dea:	61 e5       	ldi	r22, 0x51	; 81
    8dec:	7b e0       	ldi	r23, 0x0B	; 11
    8dee:	82 e5       	ldi	r24, 0x52	; 82
    8df0:	94 e1       	ldi	r25, 0x14	; 20
    8df2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8df6:	64 e0       	ldi	r22, 0x04	; 4
    8df8:	7b e0       	ldi	r23, 0x0B	; 11
    8dfa:	82 e5       	ldi	r24, 0x52	; 82
    8dfc:	94 e1       	ldi	r25, 0x14	; 20
    8dfe:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8e02:	82 e5       	ldi	r24, 0x52	; 82
    8e04:	94 e1       	ldi	r25, 0x14	; 20
    8e06:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8e0a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8e0e:	81 30       	cpi	r24, 0x01	; 1
    8e10:	09 f4       	brne	.+2      	; 0x8e14 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8e12:	8a c0       	rjmp	.+276    	; 0x8f28 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2b8>
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
				}
				
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
    8e14:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <_sSchedules+0xc>
    8e18:	4a e0       	ldi	r20, 0x0A	; 10
    8e1a:	50 e0       	ldi	r21, 0x00	; 0
    8e1c:	82 e5       	ldi	r24, 0x52	; 82
    8e1e:	94 e1       	ldi	r25, 0x14	; 20
    8e20:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
    8e24:	b8 c0       	rjmp	.+368    	; 0x8f96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8e26:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8e2a:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8e2e:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    8e32:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    8e36:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    8e3a:	ec cf       	rjmp	.-40     	; 0x8e14 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31.1.2");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e3c:	81 30       	cpi	r24, 0x01	; 1
    8e3e:	51 f4       	brne	.+20     	; 0x8e54 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1e4>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8e40:	61 e7       	ldi	r22, 0x71	; 113
    8e42:	7a e0       	ldi	r23, 0x0A	; 10
    8e44:	82 e5       	ldi	r24, 0x52	; 82
    8e46:	94 e1       	ldi	r25, 0x14	; 20
    8e48:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8e4c:	82 e5       	ldi	r24, 0x52	; 82
    8e4e:	94 e1       	ldi	r25, 0x14	; 20
    8e50:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8e54:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    8e58:	81 30       	cpi	r24, 0x01	; 1
    8e5a:	09 f0       	breq	.+2      	; 0x8e5e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1ee>
    8e5c:	9c c0       	rjmp	.+312    	; 0x8f96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8e5e:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8e62:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8e66:	89 2b       	or	r24, r25
    8e68:	09 f0       	breq	.+2      	; 0x8e6c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1fc>
    8e6a:	95 c0       	rjmp	.+298    	; 0x8f96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8e6c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
				{
					if(check_days == 2)
    8e70:	d2 30       	cpi	r29, 0x02	; 2
    8e72:	09 f0       	breq	.+2      	; 0x8e76 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x206>
    8e74:	7f c0       	rjmp	.+254    	; 0x8f74 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x304>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e76:	81 30       	cpi	r24, 0x01	; 1
    8e78:	51 f4       	brne	.+20     	; 0x8e8e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x21e>
						{
							_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 5.1///////////////////////////////////////////");
    8e7a:	62 e2       	ldi	r22, 0x22	; 34
    8e7c:	7a e0       	ldi	r23, 0x0A	; 10
    8e7e:	82 e5       	ldi	r24, 0x52	; 82
    8e80:	94 e1       	ldi	r25, 0x14	; 20
    8e82:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8e86:	82 e5       	ldi	r24, 0x52	; 82
    8e88:	94 e1       	ldi	r25, 0x14	; 20
    8e8a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8e8e:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8e92:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
						_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8e96:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    8e9a:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
							_kSERIAL_MON_CLEAR();
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
						_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    8e9e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8ea2:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8ea6:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8eaa:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    8eae:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
    8eb2:	71 c0       	rjmp	.+226    	; 0x8f96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8eb4:	81 30       	cpi	r24, 0x01	; 1
    8eb6:	51 f4       	brne	.+20     	; 0x8ecc <_Z34Check_Time_For_Schedule_To_Triggerhh+0x25c>
					{
						_kSERAIL_MON_WRITE("sc enter 11.1.0.0.0");
    8eb8:	65 e8       	ldi	r22, 0x85	; 133
    8eba:	7b e0       	ldi	r23, 0x0B	; 11
    8ebc:	82 e5       	ldi	r24, 0x52	; 82
    8ebe:	94 e1       	ldi	r25, 0x14	; 20
    8ec0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8ec4:	82 e5       	ldi	r24, 0x52	; 82
    8ec6:	94 e1       	ldi	r25, 0x14	; 20
    8ec8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					_sSchedules.Trigger_Time = 600;
    8ecc:	88 e5       	ldi	r24, 0x58	; 88
    8ece:	92 e0       	ldi	r25, 0x02	; 2
    8ed0:	a0 e0       	ldi	r26, 0x00	; 0
    8ed2:	b0 e0       	ldi	r27, 0x00	; 0
    8ed4:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    8ed8:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    8edc:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    8ee0:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
    8ee4:	0c c0       	rjmp	.+24     	; 0x8efe <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
							_kSERIAL_MON_CLEAR();
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ee6:	81 30       	cpi	r24, 0x01	; 1
    8ee8:	51 f4       	brne	.+20     	; 0x8efe <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
						{
							_kSERAIL_MON_WRITE("sc enter 11.2.0.2");
    8eea:	61 e6       	ldi	r22, 0x61	; 97
    8eec:	7b e0       	ldi	r23, 0x0B	; 11
    8eee:	82 e5       	ldi	r24, 0x52	; 82
    8ef0:	94 e1       	ldi	r25, 0x14	; 20
    8ef2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8ef6:	82 e5       	ldi	r24, 0x52	; 82
    8ef8:	94 e1       	ldi	r25, 0x14	; 20
    8efa:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    8efe:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    8f02:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    8f06:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    8f0a:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    8f0e:	8c 52       	subi	r24, 0x2C	; 44
    8f10:	91 40       	sbci	r25, 0x01	; 1
    8f12:	a1 09       	sbc	r26, r1
    8f14:	b1 09       	sbc	r27, r1
    8f16:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    8f1a:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    8f1e:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    8f22:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
    8f26:	17 cf       	rjmp	.-466    	; 0x8d56 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8f28:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    8f2c:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    8f30:	89 2b       	or	r24, r25
    8f32:	09 f0       	breq	.+2      	; 0x8f36 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2c6>
    8f34:	6f cf       	rjmp	.-290    	; 0x8e14 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f36:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8f3a:	81 30       	cpi	r24, 0x01	; 1
    8f3c:	51 f4       	brne	.+20     	; 0x8f52 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2e2>
					{
						_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4.1///////////////////////////////////////////");
    8f3e:	65 eb       	ldi	r22, 0xB5	; 181
    8f40:	7a e0       	ldi	r23, 0x0A	; 10
    8f42:	82 e5       	ldi	r24, 0x52	; 82
    8f44:	94 e1       	ldi	r25, 0x14	; 20
    8f46:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8f4a:	82 e5       	ldi	r24, 0x52	; 82
    8f4c:	94 e1       	ldi	r25, 0x14	; 20
    8f4e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8f52:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8f56:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8f5a:	80 91 77 13 	lds	r24, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    8f5e:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    8f62:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    8f66:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8f6a:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    8f6e:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
    8f72:	61 cf       	rjmp	.-318    	; 0x8e36 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1c6>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
						_sSchedules.Pump_On_In_Scheduler = _kRESET;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f74:	81 30       	cpi	r24, 0x01	; 1
    8f76:	51 f4       	brne	.+20     	; 0x8f8c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x31c>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
    8f78:	6c ed       	ldi	r22, 0xDC	; 220
    8f7a:	79 e0       	ldi	r23, 0x09	; 9
    8f7c:	82 e5       	ldi	r24, 0x52	; 82
    8f7e:	94 e1       	ldi	r25, 0x14	; 20
    8f80:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8f84:	82 e5       	ldi	r24, 0x52	; 82
    8f86:	94 e1       	ldi	r25, 0x14	; 20
    8f88:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
    8f8c:	0e 94 bf 31 	call	0x637e	; 0x637e <_Z24Return_Previous_Day_Datev>
    8f90:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
    8f94:	84 cf       	rjmp	.-248    	; 0x8e9e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22e>
			}
		}
		/* save in eeprom */
	}
	
	_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    8f96:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
}
    8f9a:	80 e0       	ldi	r24, 0x00	; 0
    8f9c:	df 91       	pop	r29
    8f9e:	cf 91       	pop	r28
    8fa0:	08 95       	ret

00008fa2 <_Z30Compare_Trigger_And_Reset_Timev>:

unsigned char Compare_Trigger_And_Reset_Time(void)
{
    8fa2:	0f 93       	push	r16
    8fa4:	1f 93       	push	r17
    8fa6:	cf 93       	push	r28
	unsigned char check_true_condition = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8fa8:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <_sSchedules+0x1b>
    8fac:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    8fb0:	91 30       	cpi	r25, 0x01	; 1
    8fb2:	09 f0       	breq	.+2      	; 0x8fb6 <_Z30Compare_Trigger_And_Reset_Timev+0x14>
    8fb4:	51 c0       	rjmp	.+162    	; 0x9058 <_Z30Compare_Trigger_And_Reset_Timev+0xb6>
	{
		if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    8fb6:	20 91 79 0b 	lds	r18, 0x0B79	; 0x800b79 <_sSchedules+0x25b>
    8fba:	90 91 76 13 	lds	r25, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    8fbe:	29 13       	cpse	r18, r25
    8fc0:	17 c0       	rjmp	.+46     	; 0x8ff0 <_Z30Compare_Trigger_And_Reset_Timev+0x4e>
		{
			if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8fc2:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    8fc6:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    8fca:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    8fce:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    8fd2:	80 91 57 13 	lds	r24, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    8fd6:	90 91 58 13 	lds	r25, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    8fda:	a0 91 59 13 	lds	r26, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    8fde:	b0 91 5a 13 	lds	r27, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    8fe2:	48 17       	cp	r20, r24
    8fe4:	59 07       	cpc	r21, r25
    8fe6:	6a 07       	cpc	r22, r26
    8fe8:	7b 07       	cpc	r23, r27
    8fea:	08 f4       	brcc	.+2      	; 0x8fee <_Z30Compare_Trigger_And_Reset_Timev+0x4c>
    8fec:	7f c0       	rjmp	.+254    	; 0x90ec <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
    8fee:	f9 c0       	rjmp	.+498    	; 0x91e2 <_Z30Compare_Trigger_And_Reset_Timev+0x240>
		}
		else
		{
			/* check which is the current date */
			//_kSERAIL_MON_WRITE("sc enter 21.1");
			if(_sSchedules.all_schedule_done_flag == _eSET)
    8ff0:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    8ff4:	92 30       	cpi	r25, 0x02	; 2
    8ff6:	09 f0       	breq	.+2      	; 0x8ffa <_Z30Compare_Trigger_And_Reset_Timev+0x58>
    8ff8:	f6 c0       	rjmp	.+492    	; 0x91e6 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ffa:	81 30       	cpi	r24, 0x01	; 1
    8ffc:	51 f4       	brne	.+20     	; 0x9012 <_Z30Compare_Trigger_And_Reset_Timev+0x70>
				{
					_kSERAIL_MON_WRITE("sc enter 22");
    8ffe:	60 ed       	ldi	r22, 0xD0	; 208
    9000:	79 e0       	ldi	r23, 0x09	; 9
    9002:	82 e5       	ldi	r24, 0x52	; 82
    9004:	94 e1       	ldi	r25, 0x14	; 20
    9006:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    900a:	82 e5       	ldi	r24, 0x52	; 82
    900c:	94 e1       	ldi	r25, 0x14	; 20
    900e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				
				check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    9012:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    9016:	0e 94 61 33 	call	0x66c2	; 0x66c2 <_Z22Day_In_Bet_Schedullingh>
    901a:	c8 2f       	mov	r28, r24
				
				if(check_true_condition == 2)
    901c:	82 30       	cpi	r24, 0x02	; 2
    901e:	41 f4       	brne	.+16     	; 0x9030 <_Z30Compare_Trigger_And_Reset_Timev+0x8e>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9020:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9024:	81 30       	cpi	r24, 0x01	; 1
    9026:	09 f0       	breq	.+2      	; 0x902a <_Z30Compare_Trigger_And_Reset_Timev+0x88>
    9028:	b2 c0       	rjmp	.+356    	; 0x918e <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
					{
						_kSERAIL_MON_WRITE("sc enter 23");
    902a:	64 ec       	ldi	r22, 0xC4	; 196
    902c:	79 e0       	ldi	r23, 0x09	; 9
    902e:	a7 c0       	rjmp	.+334    	; 0x917e <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
					_sSchedules.all_schedule_done_flag = _eNOT_SET;
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
				}
				else
				{
					if(check_true_condition == 1)
    9030:	81 30       	cpi	r24, 0x01	; 1
    9032:	09 f0       	breq	.+2      	; 0x9036 <_Z30Compare_Trigger_And_Reset_Timev+0x94>
    9034:	d6 c0       	rjmp	.+428    	; 0x91e2 <_Z30Compare_Trigger_And_Reset_Timev+0x240>
					{
						if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9036:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    903a:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    903e:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    9042:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    9046:	83 34       	cpi	r24, 0x43	; 67
    9048:	91 45       	sbci	r25, 0x51	; 81
    904a:	a1 40       	sbci	r26, 0x01	; 1
    904c:	b1 05       	cpc	r27, r1
    904e:	08 f0       	brcs	.+2      	; 0x9052 <_Z30Compare_Trigger_And_Reset_Timev+0xb0>
    9050:	c8 c0       	rjmp	.+400    	; 0x91e2 <_Z30Compare_Trigger_And_Reset_Timev+0x240>
						{
							//_kSERAIL_MON_WRITE("sc enter 24");
							check_true_condition = 1;
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
    9052:	c0 93 3c 09 	sts	0x093C, r28	; 0x80093c <_sSchedules+0x1e>
    9056:	9e c0       	rjmp	.+316    	; 0x9194 <_Z30Compare_Trigger_And_Reset_Timev+0x1f2>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9058:	20 91 39 09 	lds	r18, 0x0939	; 0x800939 <_sSchedules+0x1b>
    905c:	90 91 f5 13 	lds	r25, 0x13F5	; 0x8013f5 <_sRuble_Parameters+0xae>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    9060:	21 11       	cpse	r18, r1
    9062:	1a c0       	rjmp	.+52     	; 0x9098 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    9064:	20 91 21 09 	lds	r18, 0x0921	; 0x800921 <_sSchedules+0x3>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    9068:	21 11       	cpse	r18, r1
    906a:	16 c0       	rjmp	.+44     	; 0x9098 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    906c:	91 30       	cpi	r25, 0x01	; 1
    906e:	a1 f4       	brne	.+40     	; 0x9098 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    9070:	20 91 7c 0b 	lds	r18, 0x0B7C	; 0x800b7c <_sSchedules+0x25e>
    9074:	30 91 7d 0b 	lds	r19, 0x0B7D	; 0x800b7d <_sSchedules+0x25f>
    9078:	23 2b       	or	r18, r19
    907a:	89 f4       	brne	.+34     	; 0x909e <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    907c:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    9080:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    9084:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9088:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    908c:	45 2b       	or	r20, r21
    908e:	46 2b       	or	r20, r22
    9090:	47 2b       	or	r20, r23
    9092:	09 f4       	brne	.+2      	; 0x9096 <_Z30Compare_Trigger_And_Reset_Timev+0xf4>
    9094:	bf c0       	rjmp	.+382    	; 0x9214 <_Z30Compare_Trigger_And_Reset_Timev+0x272>
    9096:	03 c0       	rjmp	.+6      	; 0x909e <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
			}
			check_true_condition = 1;
		}
		else
		{
			if(_sRuble_Parameters.Electricity_Status == _kON)
    9098:	91 30       	cpi	r25, 0x01	; 1
    909a:	09 f0       	breq	.+2      	; 0x909e <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    909c:	96 c0       	rjmp	.+300    	; 0x91ca <_Z30Compare_Trigger_And_Reset_Timev+0x228>
			{
				if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    909e:	20 91 79 0b 	lds	r18, 0x0B79	; 0x800b79 <_sSchedules+0x25b>
    90a2:	90 91 76 13 	lds	r25, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    90a6:	29 13       	cpse	r18, r25
    90a8:	2a c0       	rjmp	.+84     	; 0x90fe <_Z30Compare_Trigger_And_Reset_Timev+0x15c>
				{
					if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    90aa:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    90ae:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    90b2:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    90b6:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    90ba:	40 91 57 13 	lds	r20, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    90be:	50 91 58 13 	lds	r21, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    90c2:	60 91 59 13 	lds	r22, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    90c6:	70 91 5a 13 	lds	r23, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    90ca:	04 17       	cp	r16, r20
    90cc:	15 07       	cpc	r17, r21
    90ce:	26 07       	cpc	r18, r22
    90d0:	37 07       	cpc	r19, r23
    90d2:	78 f4       	brcc	.+30     	; 0x90f2 <_Z30Compare_Trigger_And_Reset_Timev+0x150>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    90d4:	81 30       	cpi	r24, 0x01	; 1
    90d6:	51 f4       	brne	.+20     	; 0x90ec <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.1");
    90d8:	60 ea       	ldi	r22, 0xA0	; 160
    90da:	79 e0       	ldi	r23, 0x09	; 9
    90dc:	82 e5       	ldi	r24, 0x52	; 82
    90de:	94 e1       	ldi	r25, 0x14	; 20
    90e0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    90e4:	82 e5       	ldi	r24, 0x52	; 82
    90e6:	94 e1       	ldi	r25, 0x14	; 20
    90e8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.New_Schedul_Date = _kRESET;
    90ec:	10 92 79 0b 	sts	0x0B79, r1	; 0x800b79 <_sSchedules+0x25b>
    90f0:	7a c0       	rjmp	.+244    	; 0x91e6 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
						check_true_condition = 1;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    90f2:	81 30       	cpi	r24, 0x01	; 1
    90f4:	09 f0       	breq	.+2      	; 0x90f8 <_Z30Compare_Trigger_And_Reset_Timev+0x156>
    90f6:	93 c0       	rjmp	.+294    	; 0x921e <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.2");
    90f8:	6c e8       	ldi	r22, 0x8C	; 140
    90fa:	79 e0       	ldi	r23, 0x09	; 9
    90fc:	6a c0       	rjmp	.+212    	; 0x91d2 <_Z30Compare_Trigger_And_Reset_Timev+0x230>
						check_true_condition = _kRESET;
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    90fe:	81 30       	cpi	r24, 0x01	; 1
    9100:	51 f4       	brne	.+20     	; 0x9116 <_Z30Compare_Trigger_And_Reset_Timev+0x174>
					{
						_kSERAIL_MON_WRITE("sc 1 enter 12");
    9102:	6e e7       	ldi	r22, 0x7E	; 126
    9104:	79 e0       	ldi	r23, 0x09	; 9
    9106:	82 e5       	ldi	r24, 0x52	; 82
    9108:	94 e1       	ldi	r25, 0x14	; 20
    910a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    910e:	82 e5       	ldi	r24, 0x52	; 82
    9110:	94 e1       	ldi	r25, 0x14	; 20
    9112:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.all_schedule_done_flag == _eSET)
    9116:	90 91 3c 09 	lds	r25, 0x093C	; 0x80093c <_sSchedules+0x1e>
    911a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    911e:	92 30       	cpi	r25, 0x02	; 2
    9120:	09 f0       	breq	.+2      	; 0x9124 <_Z30Compare_Trigger_And_Reset_Timev+0x182>
    9122:	46 c0       	rjmp	.+140    	; 0x91b0 <_Z30Compare_Trigger_And_Reset_Timev+0x20e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9124:	81 30       	cpi	r24, 0x01	; 1
    9126:	51 f4       	brne	.+20     	; 0x913c <_Z30Compare_Trigger_And_Reset_Timev+0x19a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 13");
    9128:	60 e7       	ldi	r22, 0x70	; 112
    912a:	79 e0       	ldi	r23, 0x09	; 9
    912c:	82 e5       	ldi	r24, 0x52	; 82
    912e:	94 e1       	ldi	r25, 0x14	; 20
    9130:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9134:	82 e5       	ldi	r24, 0x52	; 82
    9136:	94 e1       	ldi	r25, 0x14	; 20
    9138:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    913c:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
    9140:	0e 94 61 33 	call	0x66c2	; 0x66c2 <_Z22Day_In_Bet_Schedullingh>
    9144:	c8 2f       	mov	r28, r24
    9146:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
							
						if(check_true_condition == 2)
    914a:	c2 30       	cpi	r28, 0x02	; 2
    914c:	29 f4       	brne	.+10     	; 0x9158 <_Z30Compare_Trigger_And_Reset_Timev+0x1b6>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    914e:	81 30       	cpi	r24, 0x01	; 1
    9150:	f1 f4       	brne	.+60     	; 0x918e <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
							{
								_kSERAIL_MON_WRITE("sc 1 enter 14");
    9152:	62 e6       	ldi	r22, 0x62	; 98
    9154:	79 e0       	ldi	r23, 0x09	; 9
    9156:	13 c0       	rjmp	.+38     	; 0x917e <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
						}
						else
						{
							if(check_true_condition == 1)
    9158:	c1 30       	cpi	r28, 0x01	; 1
    915a:	29 f5       	brne	.+74     	; 0x91a6 <_Z30Compare_Trigger_And_Reset_Timev+0x204>
							{
								if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    915c:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    9160:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    9164:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    9168:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    916c:	43 34       	cpi	r20, 0x43	; 67
    916e:	51 45       	sbci	r21, 0x51	; 81
    9170:	61 40       	sbci	r22, 0x01	; 1
    9172:	71 05       	cpc	r23, r1
    9174:	90 f4       	brcc	.+36     	; 0x919a <_Z30Compare_Trigger_And_Reset_Timev+0x1f8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    9176:	81 30       	cpi	r24, 0x01	; 1
    9178:	51 f4       	brne	.+20     	; 0x918e <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15");
    917a:	64 e5       	ldi	r22, 0x54	; 84
    917c:	79 e0       	ldi	r23, 0x09	; 9
    917e:	82 e5       	ldi	r24, 0x52	; 82
    9180:	94 e1       	ldi	r25, 0x14	; 20
    9182:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    9186:	82 e5       	ldi	r24, 0x52	; 82
    9188:	94 e1       	ldi	r25, 0x14	; 20
    918a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									}
									check_true_condition = 1;
									_sSchedules.all_schedule_done_flag = _eNOT_SET;
    918e:	81 e0       	ldi	r24, 0x01	; 1
    9190:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    9194:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
    9198:	27 c0       	rjmp	.+78     	; 0x91e8 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    919a:	81 30       	cpi	r24, 0x01	; 1
    919c:	09 f0       	breq	.+2      	; 0x91a0 <_Z30Compare_Trigger_And_Reset_Timev+0x1fe>
    919e:	3f c0       	rjmp	.+126    	; 0x921e <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15.1");
    91a0:	64 e4       	ldi	r22, 0x44	; 68
    91a2:	79 e0       	ldi	r23, 0x09	; 9
    91a4:	16 c0       	rjmp	.+44     	; 0x91d2 <_Z30Compare_Trigger_And_Reset_Timev+0x230>
									check_true_condition = 0;
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    91a6:	81 30       	cpi	r24, 0x01	; 1
    91a8:	d1 f5       	brne	.+116    	; 0x921e <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
								{
									_kSERAIL_MON_WRITE("sc 1 enter 15.2");
    91aa:	64 e3       	ldi	r22, 0x34	; 52
    91ac:	79 e0       	ldi	r23, 0x09	; 9
    91ae:	11 c0       	rjmp	.+34     	; 0x91d2 <_Z30Compare_Trigger_And_Reset_Timev+0x230>
							}
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    91b0:	81 30       	cpi	r24, 0x01	; 1
    91b2:	b9 f5       	brne	.+110    	; 0x9222 <_Z30Compare_Trigger_And_Reset_Timev+0x280>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 15.3");
    91b4:	64 e2       	ldi	r22, 0x24	; 36
    91b6:	79 e0       	ldi	r23, 0x09	; 9
    91b8:	82 e5       	ldi	r24, 0x52	; 82
    91ba:	94 e1       	ldi	r25, 0x14	; 20
    91bc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    91c0:	82 e5       	ldi	r24, 0x52	; 82
    91c2:	94 e1       	ldi	r25, 0x14	; 20
    91c4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    91c8:	0e c0       	rjmp	.+28     	; 0x91e6 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    91ca:	81 30       	cpi	r24, 0x01	; 1
    91cc:	41 f5       	brne	.+80     	; 0x921e <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
				{
					_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.4");
    91ce:	60 e1       	ldi	r22, 0x10	; 16
    91d0:	79 e0       	ldi	r23, 0x09	; 9
    91d2:	82 e5       	ldi	r24, 0x52	; 82
    91d4:	94 e1       	ldi	r25, 0x14	; 20
    91d6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    91da:	82 e5       	ldi	r24, 0x52	; 82
    91dc:	94 e1       	ldi	r25, 0x14	; 20
    91de:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				check_true_condition = _kRESET;
    91e2:	c0 e0       	ldi	r28, 0x00	; 0
    91e4:	01 c0       	rjmp	.+2      	; 0x91e8 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    91e6:	c1 e0       	ldi	r28, 0x01	; 1
				}
				check_true_condition = _kRESET;
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    91e8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    91ec:	81 30       	cpi	r24, 0x01	; 1
    91ee:	d1 f4       	brne	.+52     	; 0x9224 <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		_kSERAIL_MON_WRITE("check_true_condition");
    91f0:	6b ef       	ldi	r22, 0xFB	; 251
    91f2:	78 e0       	ldi	r23, 0x08	; 8
    91f4:	82 e5       	ldi	r24, 0x52	; 82
    91f6:	94 e1       	ldi	r25, 0x14	; 20
    91f8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
    91fc:	4a e0       	ldi	r20, 0x0A	; 10
    91fe:	50 e0       	ldi	r21, 0x00	; 0
    9200:	6c 2f       	mov	r22, r28
    9202:	82 e5       	ldi	r24, 0x52	; 82
    9204:	94 e1       	ldi	r25, 0x14	; 20
    9206:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    920a:	82 e5       	ldi	r24, 0x52	; 82
    920c:	94 e1       	ldi	r25, 0x14	; 20
    920e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    9212:	08 c0       	rjmp	.+16     	; 0x9224 <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9214:	81 30       	cpi	r24, 0x01	; 1
    9216:	29 f4       	brne	.+10     	; 0x9222 <_Z30Compare_Trigger_And_Reset_Timev+0x280>
			{
				_kSERAIL_MON_WRITE("sc 1 enter 12.0");
    9218:	64 eb       	ldi	r22, 0xB4	; 180
    921a:	79 e0       	ldi	r23, 0x09	; 9
    921c:	cd cf       	rjmp	.-102    	; 0x91b8 <_Z30Compare_Trigger_And_Reset_Timev+0x216>
				check_true_condition = 1;
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 21.0.1");
				check_true_condition = 0;
    921e:	c0 e0       	ldi	r28, 0x00	; 0
    9220:	01 c0       	rjmp	.+2      	; 0x9224 <_Z30Compare_Trigger_And_Reset_Timev+0x282>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    9222:	c1 e0       	ldi	r28, 0x01	; 1
		_kSERAIL_MON_WRITE("check_true_condition");
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
		_kSERIAL_MON_CLEAR();
	}
	return check_true_condition;
}
    9224:	8c 2f       	mov	r24, r28
    9226:	cf 91       	pop	r28
    9228:	1f 91       	pop	r17
    922a:	0f 91       	pop	r16
    922c:	08 95       	ret

0000922e <_Z16Set_Trigger_Timev>:

unsigned char Set_Trigger_Time(void)
{
	unsigned char i = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY)
    922e:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    9232:	81 11       	cpse	r24, r1
    9234:	2a c0       	rjmp	.+84     	; 0x928a <_Z16Set_Trigger_Timev+0x5c>
	{
		for(i=0; _sSchedules.Schedule_Status[i]>0; i++)
    9236:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <_sSchedules+0x3d>
		{
			break;
		}
		
		if(_sSchedules.Which_Sheduler_Is_Running-1 == i && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    923a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    923e:	81 30       	cpi	r24, 0x01	; 1
    9240:	21 f5       	brne	.+72     	; 0x928a <_Z16Set_Trigger_Timev+0x5c>
    9242:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    9246:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    924a:	89 2b       	or	r24, r25
    924c:	f1 f4       	brne	.+60     	; 0x928a <_Z16Set_Trigger_Timev+0x5c>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    924e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9252:	81 30       	cpi	r24, 0x01	; 1
    9254:	51 f4       	brne	.+20     	; 0x926a <_Z16Set_Trigger_Timev+0x3c>
			{
				_kSERAIL_MON_WRITE("trigger time set");
    9256:	6a ee       	ldi	r22, 0xEA	; 234
    9258:	78 e0       	ldi	r23, 0x08	; 8
    925a:	82 e5       	ldi	r24, 0x52	; 82
    925c:	94 e1       	ldi	r25, 0x14	; 20
    925e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    9262:	82 e5       	ldi	r24, 0x52	; 82
    9264:	94 e1       	ldi	r25, 0x14	; 20
    9266:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			_sSchedules.Trigger_Time = _sRuble_Parameters.Current_Time_In_Sec;
    926a:	80 91 57 13 	lds	r24, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    926e:	90 91 58 13 	lds	r25, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    9272:	a0 91 59 13 	lds	r26, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    9276:	b0 91 5a 13 	lds	r27, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    927a:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
    927e:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
    9282:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
    9286:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
			//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
		}
	}	
}
    928a:	80 e0       	ldi	r24, 0x00	; 0
    928c:	08 95       	ret

0000928e <_Z17Doser_Pump_On_Offh>:
	
	return 1;
}

char Doser_Pump_On_Off(unsigned char on_off)
{
    928e:	2f 92       	push	r2
    9290:	3f 92       	push	r3
    9292:	4f 92       	push	r4
    9294:	5f 92       	push	r5
    9296:	6f 92       	push	r6
    9298:	7f 92       	push	r7
    929a:	8f 92       	push	r8
    929c:	9f 92       	push	r9
    929e:	af 92       	push	r10
    92a0:	bf 92       	push	r11
    92a2:	cf 92       	push	r12
    92a4:	df 92       	push	r13
    92a6:	ef 92       	push	r14
    92a8:	ff 92       	push	r15
    92aa:	0f 93       	push	r16
    92ac:	1f 93       	push	r17
    92ae:	cf 93       	push	r28
    92b0:	df 93       	push	r29
    92b2:	58 2e       	mov	r5, r24
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	unsigned char tank_number,number_of_running_tanks; 
	number_of_running_tanks = 0;
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number == 0 || 
    92b4:	80 91 82 0d 	lds	r24, 0x0D82	; 0x800d82 <_sExtra_Plot+0x1>
    92b8:	84 36       	cpi	r24, 0x64	; 100
    92ba:	08 f4       	brcc	.+2      	; 0x92be <_Z17Doser_Pump_On_Offh+0x30>
    92bc:	17 c3       	rjmp	.+1582   	; 0x98ec <_Z17Doser_Pump_On_Offh+0x65e>
	_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number < 100)
	{
		return 1;
	}
	
	if(on_off == _kON && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    92be:	21 e0       	ldi	r18, 0x01	; 1
    92c0:	52 12       	cpse	r5, r18
    92c2:	05 c0       	rjmp	.+10     	; 0x92ce <_Z17Doser_Pump_On_Offh+0x40>
    92c4:	80 91 83 0d 	lds	r24, 0x0D83	; 0x800d83 <_sExtra_Plot+0x2>
    92c8:	84 30       	cpi	r24, 0x04	; 4
    92ca:	c9 f4       	brne	.+50     	; 0x92fe <_Z17Doser_Pump_On_Offh+0x70>
    92cc:	0f c3       	rjmp	.+1566   	; 0x98ec <_Z17Doser_Pump_On_Offh+0x65e>
	{
		return 1;
	}
	
	if(on_off == _kOFF)
    92ce:	51 10       	cpse	r5, r1
    92d0:	12 c0       	rjmp	.+36     	; 0x92f6 <_Z17Doser_Pump_On_Offh+0x68>
    92d2:	80 e0       	ldi	r24, 0x00	; 0
    92d4:	90 e0       	ldi	r25, 0x00	; 0
    92d6:	20 e0       	ldi	r18, 0x00	; 0
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
		{
			if(_sSchedules.Running_Tank[tank_number] == _kON)
    92d8:	fc 01       	movw	r30, r24
    92da:	e0 5e       	subi	r30, 0xE0	; 224
    92dc:	f4 4f       	sbci	r31, 0xF4	; 244
    92de:	30 81       	ld	r19, Z
    92e0:	31 30       	cpi	r19, 0x01	; 1
    92e2:	09 f4       	brne	.+2      	; 0x92e6 <_Z17Doser_Pump_On_Offh+0x58>
			{
				number_of_running_tanks++;
    92e4:	2f 5f       	subi	r18, 0xFF	; 255
    92e6:	01 96       	adiw	r24, 0x01	; 1
		return 1;
	}
	
	if(on_off == _kOFF)
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    92e8:	83 30       	cpi	r24, 0x03	; 3
    92ea:	91 05       	cpc	r25, r1
    92ec:	a9 f7       	brne	.-22     	; 0x92d8 <_Z17Doser_Pump_On_Offh+0x4a>
			if(_sSchedules.Running_Tank[tank_number] == _kON)
			{
				number_of_running_tanks++;
			}
		}
		if(number_of_running_tanks > 1)
    92ee:	22 30       	cpi	r18, 0x02	; 2
    92f0:	08 f0       	brcs	.+2      	; 0x92f4 <_Z17Doser_Pump_On_Offh+0x66>
    92f2:	fc c2       	rjmp	.+1528   	; 0x98ec <_Z17Doser_Pump_On_Offh+0x65e>
    92f4:	04 c0       	rjmp	.+8      	; 0x92fe <_Z17Doser_Pump_On_Offh+0x70>
			return 1;
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
    92f6:	33 e0       	ldi	r19, 0x03	; 3
    92f8:	53 12       	cpse	r5, r19
    92fa:	01 c0       	rjmp	.+2      	; 0x92fe <_Z17Doser_Pump_On_Offh+0x70>
	{
		on_off = _kOFF;
    92fc:	51 2c       	mov	r5, r1
	}
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].On_Off_Status == _kSET)
    92fe:	80 91 81 0d 	lds	r24, 0x0D81	; 0x800d81 <_sExtra_Plot>
    9302:	81 11       	cpse	r24, r1
    9304:	f3 c2       	rjmp	.+1510   	; 0x98ec <_Z17Doser_Pump_On_Offh+0x65e>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9306:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    930a:	81 30       	cpi	r24, 0x01	; 1
    930c:	09 f5       	brne	.+66     	; 0x9350 <_Z17Doser_Pump_On_Offh+0xc2>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
    930e:	60 ea       	ldi	r22, 0xA0	; 160
    9310:	70 e1       	ldi	r23, 0x10	; 16
    9312:	82 e5       	ldi	r24, 0x52	; 82
    9314:	94 e1       	ldi	r25, 0x14	; 20
    9316:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    931a:	82 e5       	ldi	r24, 0x52	; 82
    931c:	94 e1       	ldi	r25, 0x14	; 20
    931e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    9322:	c6 e8       	ldi	r28, 0x86	; 134
    9324:	dd e0       	ldi	r29, 0x0D	; 13
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]);
    9326:	69 91       	ld	r22, Y+
    9328:	4a e0       	ldi	r20, 0x0A	; 10
    932a:	50 e0       	ldi	r21, 0x00	; 0
    932c:	82 e5       	ldi	r24, 0x52	; 82
    932e:	94 e1       	ldi	r25, 0x14	; 20
    9330:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    9334:	6e e9       	ldi	r22, 0x9E	; 158
    9336:	70 e1       	ldi	r23, 0x10	; 16
    9338:	82 e5       	ldi	r24, 0x52	; 82
    933a:	94 e1       	ldi	r25, 0x14	; 20
    933c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    9340:	82 e5       	ldi	r24, 0x52	; 82
    9342:	94 e1       	ldi	r25, 0x14	; 20
    9344:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9348:	4d e0       	ldi	r20, 0x0D	; 13
    934a:	cb 38       	cpi	r28, 0x8B	; 139
    934c:	d4 07       	cpc	r29, r20
    934e:	59 f7       	brne	.-42     	; 0x9326 <_Z17Doser_Pump_On_Offh+0x98>
    9350:	c6 e8       	ldi	r28, 0x86	; 134
    9352:	dd e0       	ldi	r29, 0x0D	; 13
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		on_off = _kOFF;
    9354:	6e 01       	movw	r12, r28
    9356:	41 2c       	mov	r4, r1
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9358:	39 e7       	ldi	r19, 0x79	; 121
    935a:	63 2e       	mov	r6, r19
    935c:	33 e1       	ldi	r19, 0x13	; 19
    935e:	73 2e       	mov	r7, r19
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9360:	4d e0       	ldi	r20, 0x0D	; 13
    9362:	34 2e       	mov	r3, r20
    9364:	49 c1       	rjmp	.+658    	; 0x95f8 <_Z17Doser_Pump_On_Offh+0x36a>
			unsigned char valve_number =0;
			unsigned char euro_valve_num=0,command_valve=0;
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9366:	14 30       	cpi	r17, 0x04	; 4
    9368:	08 f4       	brcc	.+2      	; 0x936c <_Z17Doser_Pump_On_Offh+0xde>
    936a:	53 c1       	rjmp	.+678    	; 0x9612 <_Z17Doser_Pump_On_Offh+0x384>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    936c:	81 2f       	mov	r24, r17
    936e:	63 e0       	ldi	r22, 0x03	; 3
    9370:	0e 94 ab e7 	call	0x1cf56	; 0x1cf56 <__udivmodqi4>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9374:	2b ea       	ldi	r18, 0xAB	; 171
    9376:	12 9f       	mul	r17, r18
    9378:	21 2d       	mov	r18, r1
    937a:	11 24       	eor	r1, r1
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    937c:	99 23       	and	r25, r25
    937e:	09 f4       	brne	.+2      	; 0x9382 <_Z17Doser_Pump_On_Offh+0xf4>
    9380:	44 c1       	rjmp	.+648    	; 0x960a <_Z17Doser_Pump_On_Offh+0x37c>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9382:	26 95       	lsr	r18
    9384:	01 e0       	ldi	r16, 0x01	; 1
    9386:	02 0f       	add	r16, r18
    9388:	19 2f       	mov	r17, r25
				}
				
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    938a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    938e:	81 30       	cpi	r24, 0x01	; 1
    9390:	89 f4       	brne	.+34     	; 0x93b4 <_Z17Doser_Pump_On_Offh+0x126>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9392:	6a e8       	ldi	r22, 0x8A	; 138
    9394:	70 e1       	ldi	r23, 0x10	; 16
    9396:	82 e5       	ldi	r24, 0x52	; 82
    9398:	94 e1       	ldi	r25, 0x14	; 20
    939a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    939e:	4a e0       	ldi	r20, 0x0A	; 10
    93a0:	50 e0       	ldi	r21, 0x00	; 0
    93a2:	60 2f       	mov	r22, r16
    93a4:	82 e5       	ldi	r24, 0x52	; 82
    93a6:	94 e1       	ldi	r25, 0x14	; 20
    93a8:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    93ac:	82 e5       	ldi	r24, 0x52	; 82
    93ae:	94 e1       	ldi	r25, 0x14	; 20
    93b0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    93b4:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
    93b8:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    93ba:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    93be:	f3 01       	movw	r30, r6
    93c0:	24 e1       	ldi	r18, 0x14	; 20
    93c2:	11 92       	st	Z+, r1
    93c4:	2a 95       	dec	r18
    93c6:	e9 f7       	brne	.-6      	; 0x93c2 <_Z17Doser_Pump_On_Offh+0x134>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    93c8:	20 2f       	mov	r18, r16
    93ca:	30 e0       	ldi	r19, 0x00	; 0
    93cc:	21 50       	subi	r18, 0x01	; 1
    93ce:	31 09       	sbc	r19, r1
    93d0:	47 e0       	ldi	r20, 0x07	; 7
    93d2:	42 9f       	mul	r20, r18
    93d4:	c0 01       	movw	r24, r0
    93d6:	43 9f       	mul	r20, r19
    93d8:	90 0d       	add	r25, r0
    93da:	11 24       	eor	r1, r1
    93dc:	89 5b       	subi	r24, 0xB9	; 185
    93de:	9c 4e       	sbci	r25, 0xEC	; 236
    93e0:	fc 01       	movw	r30, r24
    93e2:	e1 5a       	subi	r30, 0xA1	; 161
    93e4:	ff 4f       	sbci	r31, 0xFF	; 255
    93e6:	20 81       	ld	r18, Z
    93e8:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    93ec:	31 96       	adiw	r30, 0x01	; 1
    93ee:	20 81       	ld	r18, Z
    93f0:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    93f4:	31 96       	adiw	r30, 0x01	; 1
    93f6:	20 81       	ld	r18, Z
    93f8:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    93fc:	31 96       	adiw	r30, 0x01	; 1
    93fe:	20 81       	ld	r18, Z
    9400:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9404:	31 96       	adiw	r30, 0x01	; 1
    9406:	20 81       	ld	r18, Z
    9408:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    940c:	31 96       	adiw	r30, 0x01	; 1
    940e:	20 81       	ld	r18, Z
    9410:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9414:	e2 e0       	ldi	r30, 0x02	; 2
    9416:	e0 93 7f 13 	sts	0x137F, r30	; 0x80137f <_sRuble_Parameters+0x38>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    941a:	50 92 80 13 	sts	0x1380, r5	; 0x801380 <_sRuble_Parameters+0x39>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    941e:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    9422:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9426:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
    942a:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    942e:	10 93 84 13 	sts	0x1384, r17	; 0x801384 <_sRuble_Parameters+0x3d>
    9432:	40 e0       	ldi	r20, 0x00	; 0
    9434:	50 e0       	ldi	r21, 0x00	; 0
    9436:	f4 2e       	mov	r15, r20
    9438:	00 e0       	ldi	r16, 0x00	; 0
    943a:	10 e0       	ldi	r17, 0x00	; 0
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    943c:	34 9e       	mul	r3, r20
    943e:	b0 01       	movw	r22, r0
    9440:	35 9e       	mul	r3, r21
    9442:	70 0d       	add	r23, r0
    9444:	11 24       	eor	r1, r1
    9446:	69 54       	subi	r22, 0x49	; 73
    9448:	74 4f       	sbci	r23, 0xF4	; 244
    944a:	21 2f       	mov	r18, r17
    944c:	30 e0       	ldi	r19, 0x00	; 0
    944e:	fb 01       	movw	r30, r22
    9450:	e2 0f       	add	r30, r18
    9452:	f3 1f       	adc	r31, r19
    9454:	28 0f       	add	r18, r24
    9456:	39 1f       	adc	r19, r25
    9458:	d9 01       	movw	r26, r18
    945a:	a1 5a       	subi	r26, 0xA1	; 161
    945c:	bf 4f       	sbci	r27, 0xFF	; 255
    945e:	31 81       	ldd	r19, Z+1	; 0x01
    9460:	2c 91       	ld	r18, X
    9462:	32 17       	cp	r19, r18
    9464:	11 f0       	breq	.+4      	; 0x946a <_Z17Doser_Pump_On_Offh+0x1dc>
					{
						compare_id = _kVALVE_ID_LEN;
    9466:	16 e0       	ldi	r17, 0x06	; 6
						id_len = _kRESET;
    9468:	00 e0       	ldi	r16, 0x00	; 0
					}
					id_len++;
    946a:	0f 5f       	subi	r16, 0xFF	; 255
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    946c:	1f 5f       	subi	r17, 0xFF	; 255
    946e:	16 30       	cpi	r17, 0x06	; 6
    9470:	60 f3       	brcs	.-40     	; 0x944a <_Z17Doser_Pump_On_Offh+0x1bc>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9472:	06 30       	cpi	r16, 0x06	; 6
    9474:	09 f4       	brne	.+2      	; 0x9478 <_Z17Doser_Pump_On_Offh+0x1ea>
    9476:	cf c0       	rjmp	.+414    	; 0x9616 <_Z17Doser_Pump_On_Offh+0x388>
    9478:	4f 5f       	subi	r20, 0xFF	; 255
    947a:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    947c:	47 30       	cpi	r20, 0x07	; 7
    947e:	51 05       	cpc	r21, r1
    9480:	d1 f6       	brne	.-76     	; 0x9436 <_Z17Doser_Pump_On_Offh+0x1a8>
				{
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9482:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9486:	81 30       	cpi	r24, 0x01	; 1
    9488:	89 f4       	brne	.+34     	; 0x94ac <_Z17Doser_Pump_On_Offh+0x21e>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    948a:	64 e7       	ldi	r22, 0x74	; 116
    948c:	70 e1       	ldi	r23, 0x10	; 16
    948e:	82 e5       	ldi	r24, 0x52	; 82
    9490:	94 e1       	ldi	r25, 0x14	; 20
    9492:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9496:	4a e0       	ldi	r20, 0x0A	; 10
    9498:	50 e0       	ldi	r21, 0x00	; 0
    949a:	64 2d       	mov	r22, r4
    949c:	82 e5       	ldi	r24, 0x52	; 82
    949e:	94 e1       	ldi	r25, 0x14	; 20
    94a0:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    94a4:	82 e5       	ldi	r24, 0x52	; 82
    94a6:	94 e1       	ldi	r25, 0x14	; 20
    94a8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    94ac:	fd e0       	ldi	r31, 0x0D	; 13
    94ae:	4f 9e       	mul	r4, r31
    94b0:	40 01       	movw	r8, r0
    94b2:	11 24       	eor	r1, r1
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    94b4:	21 2c       	mov	r2, r1
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    94b6:	34 9c       	mul	r3, r4
    94b8:	c0 01       	movw	r24, r0
    94ba:	11 24       	eor	r1, r1
    94bc:	8c 01       	movw	r16, r24
    94be:	09 54       	subi	r16, 0x49	; 73
    94c0:	14 4f       	sbci	r17, 0xF4	; 244
    94c2:	58 01       	movw	r10, r16
    94c4:	2b e0       	ldi	r18, 0x0B	; 11
    94c6:	a2 0e       	add	r10, r18
    94c8:	b1 1c       	adc	r11, r1
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    94ca:	08 5f       	subi	r16, 0xF8	; 248
    94cc:	1f 4f       	sbci	r17, 0xFF	; 255
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    94ce:	fc 01       	movw	r30, r24
    94d0:	e8 54       	subi	r30, 0x48	; 72
    94d2:	f4 4f       	sbci	r31, 0xF4	; 244
    94d4:	7f 01       	movw	r14, r30
// 					{
// 						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
// 					}
// 				}
				data_send_counter++;
    94d6:	23 94       	inc	r2
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    94d8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    94dc:	81 30       	cpi	r24, 0x01	; 1
    94de:	51 f4       	brne	.+20     	; 0x94f4 <_Z17Doser_Pump_On_Offh+0x266>
				{
					_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    94e0:	60 e5       	ldi	r22, 0x50	; 80
    94e2:	70 e1       	ldi	r23, 0x10	; 16
    94e4:	82 e5       	ldi	r24, 0x52	; 82
    94e6:	94 e1       	ldi	r25, 0x14	; 20
    94e8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    94ec:	82 e5       	ldi	r24, 0x52	; 82
    94ee:	94 e1       	ldi	r25, 0x14	; 20
    94f0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				Display_Update_1();    // 20/1/2022
    94f4:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    94f8:	8c e0       	ldi	r24, 0x0C	; 12
    94fa:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    94fe:	88 eb       	ldi	r24, 0xB8	; 184
    9500:	9b e0       	ldi	r25, 0x0B	; 11
    9502:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
    9506:	88 23       	and	r24, r24
    9508:	09 f4       	brne	.+2      	; 0x950c <_Z17Doser_Pump_On_Offh+0x27e>
    950a:	5c c1       	rjmp	.+696    	; 0x97c4 <_Z17Doser_Pump_On_Offh+0x536>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    950c:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
    9510:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9514:	88 23       	and	r24, r24
    9516:	09 f4       	brne	.+2      	; 0x951a <_Z17Doser_Pump_On_Offh+0x28c>
    9518:	0c c1       	rjmp	.+536    	; 0x9732 <_Z17Doser_Pump_On_Offh+0x4a4>
// 								Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 							}
// 						}
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    951a:	91 30       	cpi	r25, 0x01	; 1
    951c:	59 f5       	brne	.+86     	; 0x9574 <_Z17Doser_Pump_On_Offh+0x2e6>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    951e:	6a e3       	ldi	r22, 0x3A	; 58
    9520:	70 e1       	ldi	r23, 0x10	; 16
    9522:	82 e5       	ldi	r24, 0x52	; 82
    9524:	94 e1       	ldi	r25, 0x14	; 20
    9526:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    952a:	4a e0       	ldi	r20, 0x0A	; 10
    952c:	50 e0       	ldi	r21, 0x00	; 0
    952e:	6d e8       	ldi	r22, 0x8D	; 141
    9530:	73 e1       	ldi	r23, 0x13	; 19
    9532:	82 e5       	ldi	r24, 0x52	; 82
    9534:	94 e1       	ldi	r25, 0x14	; 20
    9536:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    953a:	82 e5       	ldi	r24, 0x52	; 82
    953c:	94 e1       	ldi	r25, 0x14	; 20
    953e:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9542:	82 e5       	ldi	r24, 0x52	; 82
    9544:	94 e1       	ldi	r25, 0x14	; 20
    9546:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    954a:	6c e1       	ldi	r22, 0x1C	; 28
    954c:	70 e1       	ldi	r23, 0x10	; 16
    954e:	82 e5       	ldi	r24, 0x52	; 82
    9550:	94 e1       	ldi	r25, 0x14	; 20
    9552:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9556:	47 e0       	ldi	r20, 0x07	; 7
    9558:	50 e0       	ldi	r21, 0x00	; 0
    955a:	b7 01       	movw	r22, r14
    955c:	82 e5       	ldi	r24, 0x52	; 82
    955e:	94 e1       	ldi	r25, 0x14	; 20
    9560:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
							Serial.println();
    9564:	82 e5       	ldi	r24, 0x52	; 82
    9566:	94 e1       	ldi	r25, 0x14	; 20
    9568:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    956c:	82 e5       	ldi	r24, 0x52	; 82
    956e:	94 e1       	ldi	r25, 0x14	; 20
    9570:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    9574:	ad e8       	ldi	r26, 0x8D	; 141
    9576:	b3 e1       	ldi	r27, 0x13	; 19
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9578:	80 e0       	ldi	r24, 0x00	; 0
    957a:	90 e0       	ldi	r25, 0x00	; 0
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    957c:	2d 91       	ld	r18, X+
    957e:	f4 01       	movw	r30, r8
    9580:	e8 0f       	add	r30, r24
    9582:	f9 1f       	adc	r31, r25
    9584:	e9 54       	subi	r30, 0x49	; 73
    9586:	f4 4f       	sbci	r31, 0xF4	; 244
    9588:	31 81       	ldd	r19, Z+1	; 0x01
    958a:	32 17       	cp	r19, r18
    958c:	09 f4       	brne	.+2      	; 0x9590 <_Z17Doser_Pump_On_Offh+0x302>
    958e:	80 c0       	rjmp	.+256    	; 0x9690 <_Z17Doser_Pump_On_Offh+0x402>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9590:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9594:	81 30       	cpi	r24, 0x01	; 1
    9596:	51 f4       	brne	.+20     	; 0x95ac <_Z17Doser_Pump_On_Offh+0x31e>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9598:	61 ef       	ldi	r22, 0xF1	; 241
    959a:	7f e0       	ldi	r23, 0x0F	; 15
    959c:	82 e5       	ldi	r24, 0x52	; 82
    959e:	94 e1       	ldi	r25, 0x14	; 20
    95a0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    95a4:	82 e5       	ldi	r24, 0x52	; 82
    95a6:	94 e1       	ldi	r25, 0x14	; 20
    95a8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    95ac:	f2 e0       	ldi	r31, 0x02	; 2
    95ae:	2f 16       	cp	r2, r31
    95b0:	a1 f1       	breq	.+104    	; 0x961a <_Z17Doser_Pump_On_Offh+0x38c>
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    95b2:	21 e0       	ldi	r18, 0x01	; 1
    95b4:	f5 01       	movw	r30, r10
    95b6:	20 83       	st	Z, r18
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    95b8:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    95bc:	90 e0       	ldi	r25, 0x00	; 0
    95be:	98 2f       	mov	r25, r24
    95c0:	88 27       	eor	r24, r24
    95c2:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
    95c6:	82 2b       	or	r24, r18
    95c8:	f8 01       	movw	r30, r16
    95ca:	91 83       	std	Z+1, r25	; 0x01
    95cc:	80 83       	st	Z, r24
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    95ce:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
    95d2:	58 12       	cpse	r5, r24
    95d4:	63 c0       	rjmp	.+198    	; 0x969c <_Z17Doser_Pump_On_Offh+0x40e>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    95d6:	83 e0       	ldi	r24, 0x03	; 3
    95d8:	28 2e       	mov	r2, r24
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    95da:	68 ee       	ldi	r22, 0xE8	; 232
    95dc:	73 e0       	ldi	r23, 0x03	; 3
    95de:	80 e0       	ldi	r24, 0x00	; 0
    95e0:	90 e0       	ldi	r25, 0x00	; 0
    95e2:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    95e6:	23 e0       	ldi	r18, 0x03	; 3
    95e8:	22 12       	cpse	r2, r18
    95ea:	75 cf       	rjmp	.-278    	; 0x94d6 <_Z17Doser_Pump_On_Offh+0x248>
			_kSERIAL_MON_CLEAR();
		}
	}
	
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    95ec:	3b e8       	ldi	r19, 0x8B	; 139
    95ee:	c3 16       	cp	r12, r19
    95f0:	3d e0       	ldi	r19, 0x0D	; 13
    95f2:	d3 06       	cpc	r13, r19
    95f4:	09 f4       	brne	.+2      	; 0x95f8 <_Z17Doser_Pump_On_Offh+0x36a>
    95f6:	45 c1       	rjmp	.+650    	; 0x9882 <_Z17Doser_Pump_On_Offh+0x5f4>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > 0)
    95f8:	f6 01       	movw	r30, r12
    95fa:	11 91       	ld	r17, Z+
    95fc:	6f 01       	movw	r12, r30
    95fe:	8f ef       	ldi	r24, 0xFF	; 255
    9600:	81 0f       	add	r24, r17
    9602:	85 31       	cpi	r24, 0x15	; 21
    9604:	08 f0       	brcs	.+2      	; 0x9608 <_Z17Doser_Pump_On_Offh+0x37a>
    9606:	29 c1       	rjmp	.+594    	; 0x985a <_Z17Doser_Pump_On_Offh+0x5cc>
    9608:	ae ce       	rjmp	.-676    	; 0x9366 <_Z17Doser_Pump_On_Offh+0xd8>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    960a:	02 2f       	mov	r16, r18
    960c:	06 95       	lsr	r16
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    960e:	13 e0       	ldi	r17, 0x03	; 3
    9610:	bc ce       	rjmp	.-648    	; 0x938a <_Z17Doser_Pump_On_Offh+0xfc>
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    9612:	01 e0       	ldi	r16, 0x01	; 1
    9614:	ba ce       	rjmp	.-652    	; 0x938a <_Z17Doser_Pump_On_Offh+0xfc>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9616:	4f 2c       	mov	r4, r15
    9618:	34 cf       	rjmp	.-408    	; 0x9482 <_Z17Doser_Pump_On_Offh+0x1f4>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    961a:	86 e0       	ldi	r24, 0x06	; 6
    961c:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    9620:	84 e6       	ldi	r24, 0x64	; 100
    9622:	90 e0       	ldi	r25, 0x00	; 0
    9624:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    9628:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    962c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    9630:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    9634:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    9638:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    963c:	a0 62       	ori	r26, 0x20	; 32
    963e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    9642:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    9646:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    964a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    964e:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9652:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    9656:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    965a:	82 60       	ori	r24, 0x02	; 2
    965c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    9660:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
									{
										if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9664:	e9 91       	ld	r30, Y+
    9666:	e6 31       	cpi	r30, 0x16	; 22
    9668:	68 f0       	brcs	.+26     	; 0x9684 <_Z17Doser_Pump_On_Offh+0x3f6>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    966a:	f0 e0       	ldi	r31, 0x00	; 0
    966c:	ef 53       	subi	r30, 0x3F	; 63
    966e:	fc 4e       	sbci	r31, 0xEC	; 236
    9670:	61 e0       	ldi	r22, 0x01	; 1
    9672:	80 81       	ld	r24, Z
    9674:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
											_kDELAY_MS(200);
    9678:	68 ec       	ldi	r22, 0xC8	; 200
    967a:	70 e0       	ldi	r23, 0x00	; 0
    967c:	80 e0       	ldi	r24, 0x00	; 0
    967e:	90 e0       	ldi	r25, 0x00	; 0
    9680:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9684:	fd e0       	ldi	r31, 0x0D	; 13
    9686:	cb 38       	cpi	r28, 0x8B	; 139
    9688:	df 07       	cpc	r29, r31
    968a:	61 f7       	brne	.-40     	; 0x9664 <_Z17Doser_Pump_On_Offh+0x3d6>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    968c:	80 e0       	ldi	r24, 0x00	; 0
    968e:	2f c1       	rjmp	.+606    	; 0x98ee <_Z17Doser_Pump_On_Offh+0x660>
    9690:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    9692:	86 30       	cpi	r24, 0x06	; 6
    9694:	91 05       	cpc	r25, r1
    9696:	09 f0       	breq	.+2      	; 0x969a <_Z17Doser_Pump_On_Offh+0x40c>
    9698:	71 cf       	rjmp	.-286    	; 0x957c <_Z17Doser_Pump_On_Offh+0x2ee>
    969a:	8b cf       	rjmp	.-234    	; 0x95b2 <_Z17Doser_Pump_On_Offh+0x324>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    969c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    96a0:	81 30       	cpi	r24, 0x01	; 1
    96a2:	51 f4       	brne	.+20     	; 0x96b8 <_Z17Doser_Pump_On_Offh+0x42a>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    96a4:	6e ed       	ldi	r22, 0xDE	; 222
    96a6:	7f e0       	ldi	r23, 0x0F	; 15
    96a8:	82 e5       	ldi	r24, 0x52	; 82
    96aa:	94 e1       	ldi	r25, 0x14	; 20
    96ac:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    96b0:	82 e5       	ldi	r24, 0x52	; 82
    96b2:	94 e1       	ldi	r25, 0x14	; 20
    96b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    96b8:	22 e0       	ldi	r18, 0x02	; 2
    96ba:	22 12       	cpse	r2, r18
    96bc:	8e cf       	rjmp	.-228    	; 0x95da <_Z17Doser_Pump_On_Offh+0x34c>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    96be:	86 e0       	ldi	r24, 0x06	; 6
    96c0:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    96c4:	84 e6       	ldi	r24, 0x64	; 100
    96c6:	90 e0       	ldi	r25, 0x00	; 0
    96c8:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    96cc:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    96d0:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    96d4:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    96d8:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    96dc:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    96e0:	a0 62       	ori	r26, 0x20	; 32
    96e2:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    96e6:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    96ea:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    96ee:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    96f2:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    96f6:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    96fa:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    96fe:	82 60       	ori	r24, 0x02	; 2
    9700:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    9704:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
								{
									if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9708:	e9 91       	ld	r30, Y+
    970a:	e6 31       	cpi	r30, 0x16	; 22
    970c:	68 f0       	brcs	.+26     	; 0x9728 <_Z17Doser_Pump_On_Offh+0x49a>
									{
										/********************************* turn on/off the wired valve *********************************/
																				
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    970e:	f0 e0       	ldi	r31, 0x00	; 0
    9710:	ef 53       	subi	r30, 0x3F	; 63
    9712:	fc 4e       	sbci	r31, 0xEC	; 236
    9714:	61 e0       	ldi	r22, 0x01	; 1
    9716:	80 81       	ld	r24, Z
    9718:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
										_kDELAY_MS(200);
    971c:	68 ec       	ldi	r22, 0xC8	; 200
    971e:	70 e0       	ldi	r23, 0x00	; 0
    9720:	80 e0       	ldi	r24, 0x00	; 0
    9722:	90 e0       	ldi	r25, 0x00	; 0
    9724:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9728:	3d e0       	ldi	r19, 0x0D	; 13
    972a:	cb 38       	cpi	r28, 0x8B	; 139
    972c:	d3 07       	cpc	r29, r19
    972e:	61 f7       	brne	.-40     	; 0x9708 <_Z17Doser_Pump_On_Offh+0x47a>
    9730:	ad cf       	rjmp	.-166    	; 0x968c <_Z17Doser_Pump_On_Offh+0x3fe>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9732:	91 30       	cpi	r25, 0x01	; 1
    9734:	51 f4       	brne	.+20     	; 0x974a <_Z17Doser_Pump_On_Offh+0x4bc>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    9736:	63 ea       	ldi	r22, 0xA3	; 163
    9738:	7f e0       	ldi	r23, 0x0F	; 15
    973a:	82 e5       	ldi	r24, 0x52	; 82
    973c:	94 e1       	ldi	r25, 0x14	; 20
    973e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    9742:	82 e5       	ldi	r24, 0x52	; 82
    9744:	94 e1       	ldi	r25, 0x14	; 20
    9746:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    974a:	42 e0       	ldi	r20, 0x02	; 2
    974c:	24 12       	cpse	r2, r20
    974e:	45 cf       	rjmp	.-374    	; 0x95da <_Z17Doser_Pump_On_Offh+0x34c>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9750:	86 e0       	ldi	r24, 0x06	; 6
    9752:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    9756:	84 e6       	ldi	r24, 0x64	; 100
    9758:	90 e0       	ldi	r25, 0x00	; 0
    975a:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    975e:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9762:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    9766:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    976a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    976e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    9772:	a0 62       	ori	r26, 0x20	; 32
    9774:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    9778:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    977c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9780:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    9784:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9788:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    978c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    9790:	82 60       	ori	r24, 0x02	; 2
    9792:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    9796:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
							{
								if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    979a:	e9 91       	ld	r30, Y+
    979c:	e6 31       	cpi	r30, 0x16	; 22
    979e:	68 f0       	brcs	.+26     	; 0x97ba <_Z17Doser_Pump_On_Offh+0x52c>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    97a0:	f0 e0       	ldi	r31, 0x00	; 0
    97a2:	ef 53       	subi	r30, 0x3F	; 63
    97a4:	fc 4e       	sbci	r31, 0xEC	; 236
    97a6:	61 e0       	ldi	r22, 0x01	; 1
    97a8:	80 81       	ld	r24, Z
    97aa:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
									_kDELAY_MS(200);
    97ae:	68 ec       	ldi	r22, 0xC8	; 200
    97b0:	70 e0       	ldi	r23, 0x00	; 0
    97b2:	80 e0       	ldi	r24, 0x00	; 0
    97b4:	90 e0       	ldi	r25, 0x00	; 0
    97b6:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    97ba:	8d e0       	ldi	r24, 0x0D	; 13
    97bc:	cb 38       	cpi	r28, 0x8B	; 139
    97be:	d8 07       	cpc	r29, r24
    97c0:	61 f7       	brne	.-40     	; 0x979a <_Z17Doser_Pump_On_Offh+0x50c>
    97c2:	64 cf       	rjmp	.-312    	; 0x968c <_Z17Doser_Pump_On_Offh+0x3fe>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    97c4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    97c8:	81 30       	cpi	r24, 0x01	; 1
    97ca:	51 f4       	brne	.+20     	; 0x97e0 <_Z17Doser_Pump_On_Offh+0x552>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    97cc:	68 e6       	ldi	r22, 0x68	; 104
    97ce:	7f e0       	ldi	r23, 0x0F	; 15
    97d0:	82 e5       	ldi	r24, 0x52	; 82
    97d2:	94 e1       	ldi	r25, 0x14	; 20
    97d4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    97d8:	82 e5       	ldi	r24, 0x52	; 82
    97da:	94 e1       	ldi	r25, 0x14	; 20
    97dc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					//RF95_setModeRx_Continuous();
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    97e0:	e2 e0       	ldi	r30, 0x02	; 2
    97e2:	2e 12       	cpse	r2, r30
    97e4:	fa ce       	rjmp	.-524    	; 0x95da <_Z17Doser_Pump_On_Offh+0x34c>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    97e6:	86 e0       	ldi	r24, 0x06	; 6
    97e8:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    97ec:	84 e6       	ldi	r24, 0x64	; 100
    97ee:	90 e0       	ldi	r25, 0x00	; 0
    97f0:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    97f4:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    97f8:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    97fc:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    9800:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    9804:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    9808:	a0 62       	ori	r26, 0x20	; 32
    980a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    980e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    9812:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9816:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    981a:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    981e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    9822:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    9826:	82 60       	ori	r24, 0x02	; 2
    9828:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    982c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
						{
							if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9830:	e9 91       	ld	r30, Y+
    9832:	e6 31       	cpi	r30, 0x16	; 22
    9834:	68 f0       	brcs	.+26     	; 0x9850 <_Z17Doser_Pump_On_Offh+0x5c2>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9836:	f0 e0       	ldi	r31, 0x00	; 0
    9838:	ef 53       	subi	r30, 0x3F	; 63
    983a:	fc 4e       	sbci	r31, 0xEC	; 236
    983c:	61 e0       	ldi	r22, 0x01	; 1
    983e:	80 81       	ld	r24, Z
    9840:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
								_kDELAY_MS(200);
    9844:	68 ec       	ldi	r22, 0xC8	; 200
    9846:	70 e0       	ldi	r23, 0x00	; 0
    9848:	80 e0       	ldi	r24, 0x00	; 0
    984a:	90 e0       	ldi	r25, 0x00	; 0
    984c:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9850:	fd e0       	ldi	r31, 0x0D	; 13
    9852:	cb 38       	cpi	r28, 0x8B	; 139
    9854:	df 07       	cpc	r29, r31
    9856:	61 f7       	brne	.-40     	; 0x9830 <_Z17Doser_Pump_On_Offh+0x5a2>
    9858:	19 cf       	rjmp	.-462    	; 0x968c <_Z17Doser_Pump_On_Offh+0x3fe>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    985a:	16 31       	cpi	r17, 0x16	; 22
    985c:	08 f4       	brcc	.+2      	; 0x9860 <_Z17Doser_Pump_On_Offh+0x5d2>
    985e:	c6 ce       	rjmp	.-628    	; 0x95ec <_Z17Doser_Pump_On_Offh+0x35e>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9860:	61 e0       	ldi	r22, 0x01	; 1
    9862:	51 10       	cpse	r5, r1
    9864:	60 e0       	ldi	r22, 0x00	; 0
    9866:	e1 2f       	mov	r30, r17
    9868:	f0 e0       	ldi	r31, 0x00	; 0
    986a:	ef 53       	subi	r30, 0x3F	; 63
    986c:	fc 4e       	sbci	r31, 0xEC	; 236
    986e:	80 81       	ld	r24, Z
    9870:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
			_kDELAY_MS(200);
    9874:	68 ec       	ldi	r22, 0xC8	; 200
    9876:	70 e0       	ldi	r23, 0x00	; 0
    9878:	80 e0       	ldi	r24, 0x00	; 0
    987a:	90 e0       	ldi	r25, 0x00	; 0
    987c:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    9880:	b5 ce       	rjmp	.-662    	; 0x95ec <_Z17Doser_Pump_On_Offh+0x35e>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9882:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9886:	81 30       	cpi	r24, 0x01	; 1
    9888:	51 f4       	brne	.+20     	; 0x989e <_Z17Doser_Pump_On_Offh+0x610>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    988a:	69 e4       	ldi	r22, 0x49	; 73
    988c:	7f e0       	ldi	r23, 0x0F	; 15
    988e:	82 e5       	ldi	r24, 0x52	; 82
    9890:	94 e1       	ldi	r25, 0x14	; 20
    9892:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9896:	82 e5       	ldi	r24, 0x52	; 82
    9898:	94 e1       	ldi	r25, 0x14	; 20
    989a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	
	
	if(on_off == _kOFF)
    989e:	51 10       	cpse	r5, r1
    98a0:	14 c0       	rjmp	.+40     	; 0x98ca <_Z17Doser_Pump_On_Offh+0x63c>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status != _kSCHEDULER_OFF)
    98a2:	80 91 83 0d 	lds	r24, 0x0D83	; 0x800d83 <_sExtra_Plot+0x2>
    98a6:	85 30       	cpi	r24, 0x05	; 5
    98a8:	09 f1       	breq	.+66     	; 0x98ec <_Z17Doser_Pump_On_Offh+0x65e>
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    98aa:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    98ae:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    98b2:	90 62       	ori	r25, 0x20	; 32
    98b4:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    98b8:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    98bc:	10 92 fd 13 	sts	0x13FD, r1	; 0x8013fd <_sRuble_Parameters+0xb6>
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    98c0:	82 e0       	ldi	r24, 0x02	; 2
    98c2:	80 93 9b 0d 	sts	0x0D9B, r24	; 0x800d9b <_sExtra_Plot+0x1a>
			
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_OFF;
    98c6:	85 e0       	ldi	r24, 0x05	; 5
    98c8:	0f c0       	rjmp	.+30     	; 0x98e8 <_Z17Doser_Pump_On_Offh+0x65a>
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    98ca:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    98ce:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    98d2:	90 62       	ori	r25, 0x20	; 32
    98d4:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    98d8:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    98dc:	10 92 fd 13 	sts	0x13FD, r1	; 0x8013fd <_sRuble_Parameters+0xb6>
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    98e0:	82 e0       	ldi	r24, 0x02	; 2
    98e2:	80 93 9b 0d 	sts	0x0D9B, r24	; 0x800d9b <_sExtra_Plot+0x1a>
		
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_ON;
    98e6:	84 e0       	ldi	r24, 0x04	; 4
    98e8:	80 93 83 0d 	sts	0x0D83, r24	; 0x800d83 <_sExtra_Plot+0x2>
	}
	
	return 1;
    98ec:	81 e0       	ldi	r24, 0x01	; 1
}
    98ee:	df 91       	pop	r29
    98f0:	cf 91       	pop	r28
    98f2:	1f 91       	pop	r17
    98f4:	0f 91       	pop	r16
    98f6:	ff 90       	pop	r15
    98f8:	ef 90       	pop	r14
    98fa:	df 90       	pop	r13
    98fc:	cf 90       	pop	r12
    98fe:	bf 90       	pop	r11
    9900:	af 90       	pop	r10
    9902:	9f 90       	pop	r9
    9904:	8f 90       	pop	r8
    9906:	7f 90       	pop	r7
    9908:	6f 90       	pop	r6
    990a:	5f 90       	pop	r5
    990c:	4f 90       	pop	r4
    990e:	3f 90       	pop	r3
    9910:	2f 90       	pop	r2
    9912:	08 95       	ret

00009914 <_Z22Fertilizer_Tank_On_Offhh>:
		}
	}
}

char Fertilizer_Tank_On_Off(unsigned char tank_number, unsigned char on_off)
{
    9914:	2f 92       	push	r2
    9916:	3f 92       	push	r3
    9918:	4f 92       	push	r4
    991a:	5f 92       	push	r5
    991c:	6f 92       	push	r6
    991e:	7f 92       	push	r7
    9920:	8f 92       	push	r8
    9922:	9f 92       	push	r9
    9924:	af 92       	push	r10
    9926:	bf 92       	push	r11
    9928:	cf 92       	push	r12
    992a:	df 92       	push	r13
    992c:	ef 92       	push	r14
    992e:	ff 92       	push	r15
    9930:	0f 93       	push	r16
    9932:	1f 93       	push	r17
    9934:	cf 93       	push	r28
    9936:	df 93       	push	r29
    9938:	00 d0       	rcall	.+0      	; 0x993a <_Z22Fertilizer_Tank_On_Offhh+0x26>
    993a:	1f 92       	push	r1
    993c:	cd b7       	in	r28, 0x3d	; 61
    993e:	de b7       	in	r29, 0x3e	; 62
    9940:	f8 2e       	mov	r15, r24
    9942:	b6 2e       	mov	r11, r22
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	
	if(_sSchedules.Fertilizer_Tank_Number[tank_number] < 100)
    9944:	28 2f       	mov	r18, r24
    9946:	30 e0       	ldi	r19, 0x00	; 0
    9948:	22 5e       	subi	r18, 0xE2	; 226
    994a:	36 4f       	sbci	r19, 0xF6	; 246
    994c:	3c 83       	std	Y+4, r19	; 0x04
    994e:	2b 83       	std	Y+3, r18	; 0x03
    9950:	89 01       	movw	r16, r18
    9952:	06 58       	subi	r16, 0x86	; 134
    9954:	1f 4f       	sbci	r17, 0xFF	; 255
    9956:	f8 01       	movw	r30, r16
    9958:	80 81       	ld	r24, Z
    995a:	84 36       	cpi	r24, 0x64	; 100
    995c:	60 f4       	brcc	.+24     	; 0x9976 <_Z22Fertilizer_Tank_On_Offhh+0x62>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    995e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9962:	81 30       	cpi	r24, 0x01	; 1
    9964:	09 f0       	breq	.+2      	; 0x9968 <_Z22Fertilizer_Tank_On_Offhh+0x54>
    9966:	38 c2       	rjmp	.+1136   	; 0x9dd8 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
		{
			_kSERAIL_MON_WRITE("fertilizer tank number is less than 100 : ");
    9968:	62 ea       	ldi	r22, 0xA2	; 162
    996a:	72 e1       	ldi	r23, 0x12	; 18
    996c:	82 e5       	ldi	r24, 0x52	; 82
    996e:	94 e1       	ldi	r25, 0x14	; 20
    9970:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    9974:	2d c2       	rjmp	.+1114   	; 0x9dd0 <_Z22Fertilizer_Tank_On_Offhh+0x4bc>
			_kSERIAL_MON_CLEAR();
		}
		return 1;
	}
	
	if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number] - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET)
    9976:	f8 01       	movw	r30, r16
    9978:	80 81       	ld	r24, Z
    997a:	90 e0       	ldi	r25, 0x00	; 0
    997c:	85 56       	subi	r24, 0x65	; 101
    997e:	91 09       	sbc	r25, r1
    9980:	2b e1       	ldi	r18, 0x1B	; 27
    9982:	28 9f       	mul	r18, r24
    9984:	f0 01       	movw	r30, r0
    9986:	29 9f       	mul	r18, r25
    9988:	f0 0d       	add	r31, r0
    998a:	11 24       	eor	r1, r1
    998c:	ef 57       	subi	r30, 0x7F	; 127
    998e:	f2 4f       	sbci	r31, 0xF2	; 242
    9990:	80 81       	ld	r24, Z
    9992:	81 11       	cpse	r24, r1
    9994:	21 c2       	rjmp	.+1090   	; 0x9dd8 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9996:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    999a:	81 30       	cpi	r24, 0x01	; 1
    999c:	79 f0       	breq	.+30     	; 0x99bc <_Z22Fertilizer_Tank_On_Offhh+0xa8>
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
		_kSERIAL_MON_CLEAR();
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
    999e:	00 e0       	ldi	r16, 0x00	; 0
    99a0:	10 e0       	ldi	r17, 0x00	; 0
    99a2:	f1 2c       	mov	r15, r1
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    99a4:	cb 80       	ldd	r12, Y+3	; 0x03
    99a6:	dc 80       	ldd	r13, Y+4	; 0x04
    99a8:	fa e7       	ldi	r31, 0x7A	; 122
    99aa:	cf 0e       	add	r12, r31
    99ac:	d1 1c       	adc	r13, r1
    99ae:	bb e1       	ldi	r27, 0x1B	; 27
    99b0:	eb 2e       	mov	r14, r27
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    99b2:	87 e0       	ldi	r24, 0x07	; 7
    99b4:	98 2e       	mov	r9, r24
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    99b6:	9d e0       	ldi	r25, 0x0D	; 13
    99b8:	a9 2e       	mov	r10, r25
    99ba:	b7 c1       	rjmp	.+878    	; 0x9d2a <_Z22Fertilizer_Tank_On_Offhh+0x416>
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
    99bc:	68 e8       	ldi	r22, 0x88	; 136
    99be:	72 e1       	ldi	r23, 0x12	; 18
    99c0:	82 e5       	ldi	r24, 0x52	; 82
    99c2:	94 e1       	ldi	r25, 0x14	; 20
    99c4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    99c8:	82 e5       	ldi	r24, 0x52	; 82
    99ca:	94 e1       	ldi	r25, 0x14	; 20
    99cc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
    99d0:	4a e0       	ldi	r20, 0x0A	; 10
    99d2:	50 e0       	ldi	r21, 0x00	; 0
    99d4:	6f 2d       	mov	r22, r15
    99d6:	82 e5       	ldi	r24, 0x52	; 82
    99d8:	94 e1       	ldi	r25, 0x14	; 20
    99da:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
		_kSERIAL_MON_CLEAR();
    99de:	82 e5       	ldi	r24, 0x52	; 82
    99e0:	94 e1       	ldi	r25, 0x14	; 20
    99e2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
    99e6:	6a e6       	ldi	r22, 0x6A	; 106
    99e8:	72 e1       	ldi	r23, 0x12	; 18
    99ea:	82 e5       	ldi	r24, 0x52	; 82
    99ec:	94 e1       	ldi	r25, 0x14	; 20
    99ee:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    99f2:	82 e5       	ldi	r24, 0x52	; 82
    99f4:	94 e1       	ldi	r25, 0x14	; 20
    99f6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    99fa:	e1 2c       	mov	r14, r1
    99fc:	f1 2c       	mov	r15, r1
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]);
    99fe:	ab e1       	ldi	r26, 0x1B	; 27
    9a00:	da 2e       	mov	r13, r26
    9a02:	f8 01       	movw	r30, r16
    9a04:	80 81       	ld	r24, Z
    9a06:	90 e0       	ldi	r25, 0x00	; 0
    9a08:	85 56       	subi	r24, 0x65	; 101
    9a0a:	91 09       	sbc	r25, r1
    9a0c:	d8 9e       	mul	r13, r24
    9a0e:	f0 01       	movw	r30, r0
    9a10:	d9 9e       	mul	r13, r25
    9a12:	f0 0d       	add	r31, r0
    9a14:	11 24       	eor	r1, r1
    9a16:	ef 57       	subi	r30, 0x7F	; 127
    9a18:	f2 4f       	sbci	r31, 0xF2	; 242
    9a1a:	ee 0d       	add	r30, r14
    9a1c:	ff 1d       	adc	r31, r15
    9a1e:	4a e0       	ldi	r20, 0x0A	; 10
    9a20:	50 e0       	ldi	r21, 0x00	; 0
    9a22:	65 81       	ldd	r22, Z+5	; 0x05
    9a24:	82 e5       	ldi	r24, 0x52	; 82
    9a26:	94 e1       	ldi	r25, 0x14	; 20
    9a28:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    9a2c:	68 e6       	ldi	r22, 0x68	; 104
    9a2e:	72 e1       	ldi	r23, 0x12	; 18
    9a30:	82 e5       	ldi	r24, 0x52	; 82
    9a32:	94 e1       	ldi	r25, 0x14	; 20
    9a34:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    9a38:	ff ef       	ldi	r31, 0xFF	; 255
    9a3a:	ef 1a       	sub	r14, r31
    9a3c:	ff 0a       	sbc	r15, r31
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9a3e:	25 e0       	ldi	r18, 0x05	; 5
    9a40:	e2 16       	cp	r14, r18
    9a42:	f1 04       	cpc	r15, r1
    9a44:	f1 f6       	brne	.-68     	; 0x9a02 <_Z22Fertilizer_Tank_On_Offhh+0xee>
    9a46:	ab cf       	rjmp	.-170    	; 0x999e <_Z22Fertilizer_Tank_On_Offhh+0x8a>
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9a48:	f6 01       	movw	r30, r12
    9a4a:	80 81       	ld	r24, Z
    9a4c:	90 e0       	ldi	r25, 0x00	; 0
    9a4e:	85 56       	subi	r24, 0x65	; 101
    9a50:	91 09       	sbc	r25, r1
    9a52:	e8 9e       	mul	r14, r24
    9a54:	f0 01       	movw	r30, r0
    9a56:	e9 9e       	mul	r14, r25
    9a58:	f0 0d       	add	r31, r0
    9a5a:	11 24       	eor	r1, r1
    9a5c:	ef 57       	subi	r30, 0x7F	; 127
    9a5e:	f2 4f       	sbci	r31, 0xF2	; 242
    9a60:	e0 0f       	add	r30, r16
    9a62:	f1 1f       	adc	r31, r17
    9a64:	85 81       	ldd	r24, Z+5	; 0x05
    9a66:	88 23       	and	r24, r24
    9a68:	09 f4       	brne	.+2      	; 0x9a6c <_Z22Fertilizer_Tank_On_Offhh+0x158>
    9a6a:	b8 c1       	rjmp	.+880    	; 0x9ddc <_Z22Fertilizer_Tank_On_Offhh+0x4c8>
		{
			unsigned char valve_number = 0;
			unsigned char euro_valve_num = 0,command_valve = 0;
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
    9a6c:	f6 01       	movw	r30, r12
    9a6e:	80 81       	ld	r24, Z
    9a70:	90 e0       	ldi	r25, 0x00	; 0
    9a72:	85 56       	subi	r24, 0x65	; 101
    9a74:	91 09       	sbc	r25, r1
    9a76:	e8 9e       	mul	r14, r24
    9a78:	f0 01       	movw	r30, r0
    9a7a:	e9 9e       	mul	r14, r25
    9a7c:	f0 0d       	add	r31, r0
    9a7e:	11 24       	eor	r1, r1
    9a80:	ef 57       	subi	r30, 0x7F	; 127
    9a82:	f2 4f       	sbci	r31, 0xF2	; 242
    9a84:	e0 0f       	add	r30, r16
    9a86:	f1 1f       	adc	r31, r17
    9a88:	85 80       	ldd	r8, Z+5	; 0x05
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9a8a:	f3 e0       	ldi	r31, 0x03	; 3
    9a8c:	f8 15       	cp	r31, r8
    9a8e:	08 f0       	brcs	.+2      	; 0x9a92 <_Z22Fertilizer_Tank_On_Offhh+0x17e>
    9a90:	58 c2       	rjmp	.+1200   	; 0x9f42 <_Z22Fertilizer_Tank_On_Offhh+0x62e>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9a92:	6b ea       	ldi	r22, 0xAB	; 171
    9a94:	86 9e       	mul	r8, r22
    9a96:	71 2c       	mov	r7, r1
    9a98:	11 24       	eor	r1, r1
    9a9a:	87 2d       	mov	r24, r7
    9a9c:	86 95       	lsr	r24
    9a9e:	98 2f       	mov	r25, r24
    9aa0:	99 0f       	add	r25, r25
    9aa2:	89 0f       	add	r24, r25
    9aa4:	88 1a       	sub	r8, r24
    9aa6:	67 2d       	mov	r22, r7
    9aa8:	66 95       	lsr	r22
    9aaa:	88 20       	and	r8, r8
    9aac:	09 f4       	brne	.+2      	; 0x9ab0 <_Z22Fertilizer_Tank_On_Offhh+0x19c>
    9aae:	45 c2       	rjmp	.+1162   	; 0x9f3a <_Z22Fertilizer_Tank_On_Offhh+0x626>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9ab0:	77 24       	eor	r7, r7
    9ab2:	73 94       	inc	r7
    9ab4:	76 0e       	add	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9ab6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9aba:	81 30       	cpi	r24, 0x01	; 1
    9abc:	89 f4       	brne	.+34     	; 0x9ae0 <_Z22Fertilizer_Tank_On_Offhh+0x1cc>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9abe:	64 e5       	ldi	r22, 0x54	; 84
    9ac0:	72 e1       	ldi	r23, 0x12	; 18
    9ac2:	82 e5       	ldi	r24, 0x52	; 82
    9ac4:	94 e1       	ldi	r25, 0x14	; 20
    9ac6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    9aca:	4a e0       	ldi	r20, 0x0A	; 10
    9acc:	50 e0       	ldi	r21, 0x00	; 0
    9ace:	67 2d       	mov	r22, r7
    9ad0:	82 e5       	ldi	r24, 0x52	; 82
    9ad2:	94 e1       	ldi	r25, 0x14	; 20
    9ad4:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    9ad8:	82 e5       	ldi	r24, 0x52	; 82
    9ada:	94 e1       	ldi	r25, 0x14	; 20
    9adc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9ae0:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
    9ae4:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9ae6:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9aea:	e9 e7       	ldi	r30, 0x79	; 121
    9aec:	f3 e1       	ldi	r31, 0x13	; 19
    9aee:	24 e1       	ldi	r18, 0x14	; 20
    9af0:	11 92       	st	Z+, r1
    9af2:	2a 95       	dec	r18
    9af4:	e9 f7       	brne	.-6      	; 0x9af0 <_Z22Fertilizer_Tank_On_Offhh+0x1dc>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9af6:	67 2d       	mov	r22, r7
    9af8:	70 e0       	ldi	r23, 0x00	; 0
    9afa:	61 50       	subi	r22, 0x01	; 1
    9afc:	71 09       	sbc	r23, r1
    9afe:	96 9e       	mul	r9, r22
    9b00:	c0 01       	movw	r24, r0
    9b02:	97 9e       	mul	r9, r23
    9b04:	90 0d       	add	r25, r0
    9b06:	11 24       	eor	r1, r1
    9b08:	89 5b       	subi	r24, 0xB9	; 185
    9b0a:	9c 4e       	sbci	r25, 0xEC	; 236
    9b0c:	fc 01       	movw	r30, r24
    9b0e:	e1 5a       	subi	r30, 0xA1	; 161
    9b10:	ff 4f       	sbci	r31, 0xFF	; 255
    9b12:	20 81       	ld	r18, Z
    9b14:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9b18:	31 96       	adiw	r30, 0x01	; 1
    9b1a:	20 81       	ld	r18, Z
    9b1c:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9b20:	31 96       	adiw	r30, 0x01	; 1
    9b22:	20 81       	ld	r18, Z
    9b24:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9b28:	31 96       	adiw	r30, 0x01	; 1
    9b2a:	20 81       	ld	r18, Z
    9b2c:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9b30:	31 96       	adiw	r30, 0x01	; 1
    9b32:	20 81       	ld	r18, Z
    9b34:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9b38:	31 96       	adiw	r30, 0x01	; 1
    9b3a:	20 81       	ld	r18, Z
    9b3c:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9b40:	22 e0       	ldi	r18, 0x02	; 2
    9b42:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x38>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9b46:	b0 92 80 13 	sts	0x1380, r11	; 0x801380 <_sRuble_Parameters+0x39>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    9b4a:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    9b4e:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9b52:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
    9b56:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9b5a:	80 92 84 13 	sts	0x1384, r8	; 0x801384 <_sRuble_Parameters+0x3d>
    9b5e:	40 e0       	ldi	r20, 0x00	; 0
    9b60:	50 e0       	ldi	r21, 0x00	; 0
    9b62:	64 2e       	mov	r6, r20
    9b64:	81 2c       	mov	r8, r1
    9b66:	71 2c       	mov	r7, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9b68:	a4 9e       	mul	r10, r20
    9b6a:	b0 01       	movw	r22, r0
    9b6c:	a5 9e       	mul	r10, r21
    9b6e:	70 0d       	add	r23, r0
    9b70:	11 24       	eor	r1, r1
    9b72:	69 54       	subi	r22, 0x49	; 73
    9b74:	74 4f       	sbci	r23, 0xF4	; 244
    9b76:	28 2d       	mov	r18, r8
    9b78:	30 e0       	ldi	r19, 0x00	; 0
    9b7a:	fb 01       	movw	r30, r22
    9b7c:	e2 0f       	add	r30, r18
    9b7e:	f3 1f       	adc	r31, r19
    9b80:	28 0f       	add	r18, r24
    9b82:	39 1f       	adc	r19, r25
    9b84:	d9 01       	movw	r26, r18
    9b86:	a1 5a       	subi	r26, 0xA1	; 161
    9b88:	bf 4f       	sbci	r27, 0xFF	; 255
    9b8a:	31 81       	ldd	r19, Z+1	; 0x01
    9b8c:	2c 91       	ld	r18, X
    9b8e:	32 17       	cp	r19, r18
    9b90:	19 f0       	breq	.+6      	; 0x9b98 <_Z22Fertilizer_Tank_On_Offhh+0x284>
					{
						compare_id = _kVALVE_ID_LEN;
    9b92:	e6 e0       	ldi	r30, 0x06	; 6
    9b94:	8e 2e       	mov	r8, r30
						id_len = _kRESET;
    9b96:	71 2c       	mov	r7, r1
					}
					id_len++;
    9b98:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    9b9a:	83 94       	inc	r8
    9b9c:	35 e0       	ldi	r19, 0x05	; 5
    9b9e:	38 15       	cp	r19, r8
    9ba0:	50 f7       	brcc	.-44     	; 0x9b76 <_Z22Fertilizer_Tank_On_Offhh+0x262>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9ba2:	e6 e0       	ldi	r30, 0x06	; 6
    9ba4:	7e 16       	cp	r7, r30
    9ba6:	09 f4       	brne	.+2      	; 0x9baa <_Z22Fertilizer_Tank_On_Offhh+0x296>
    9ba8:	cf c1       	rjmp	.+926    	; 0x9f48 <_Z22Fertilizer_Tank_On_Offhh+0x634>
    9baa:	4f 5f       	subi	r20, 0xFF	; 255
    9bac:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    9bae:	47 30       	cpi	r20, 0x07	; 7
    9bb0:	51 05       	cpc	r21, r1
    9bb2:	b9 f6       	brne	.-82     	; 0x9b62 <_Z22Fertilizer_Tank_On_Offhh+0x24e>
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9bb4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9bb8:	81 30       	cpi	r24, 0x01	; 1
    9bba:	89 f4       	brne	.+34     	; 0x9bde <_Z22Fertilizer_Tank_On_Offhh+0x2ca>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    9bbc:	6e e3       	ldi	r22, 0x3E	; 62
    9bbe:	72 e1       	ldi	r23, 0x12	; 18
    9bc0:	82 e5       	ldi	r24, 0x52	; 82
    9bc2:	94 e1       	ldi	r25, 0x14	; 20
    9bc4:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9bc8:	4a e0       	ldi	r20, 0x0A	; 10
    9bca:	50 e0       	ldi	r21, 0x00	; 0
    9bcc:	6f 2d       	mov	r22, r15
    9bce:	82 e5       	ldi	r24, 0x52	; 82
    9bd0:	94 e1       	ldi	r25, 0x14	; 20
    9bd2:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9bd6:	82 e5       	ldi	r24, 0x52	; 82
    9bd8:	94 e1       	ldi	r25, 0x14	; 20
    9bda:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    9bde:	fd e0       	ldi	r31, 0x0D	; 13
    9be0:	ff 9e       	mul	r15, r31
    9be2:	20 01       	movw	r4, r0
    9be4:	11 24       	eor	r1, r1
    9be6:	81 2c       	mov	r8, r1
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9be8:	af 9c       	mul	r10, r15
    9bea:	c0 01       	movw	r24, r0
    9bec:	11 24       	eor	r1, r1
    9bee:	9c 01       	movw	r18, r24
    9bf0:	29 54       	subi	r18, 0x49	; 73
    9bf2:	34 4f       	sbci	r19, 0xF4	; 244
    9bf4:	a9 01       	movw	r20, r18
    9bf6:	45 5f       	subi	r20, 0xF5	; 245
    9bf8:	5f 4f       	sbci	r21, 0xFF	; 255
    9bfa:	5a 83       	std	Y+2, r21	; 0x02
    9bfc:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9bfe:	19 01       	movw	r2, r18
    9c00:	58 e0       	ldi	r21, 0x08	; 8
    9c02:	25 0e       	add	r2, r21
    9c04:	31 1c       	adc	r3, r1
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9c06:	fc 01       	movw	r30, r24
    9c08:	e8 54       	subi	r30, 0x48	; 72
    9c0a:	f4 4f       	sbci	r31, 0xF4	; 244
    9c0c:	3f 01       	movw	r6, r30
// 					{
// 						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
// 						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
// 					}
// 				}
				data_send_counter++;
    9c0e:	83 94       	inc	r8
				
				_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9c10:	6a e1       	ldi	r22, 0x1A	; 26
    9c12:	72 e1       	ldi	r23, 0x12	; 18
    9c14:	82 e5       	ldi	r24, 0x52	; 82
    9c16:	94 e1       	ldi	r25, 0x14	; 20
    9c18:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    9c1c:	82 e5       	ldi	r24, 0x52	; 82
    9c1e:	94 e1       	ldi	r25, 0x14	; 20
    9c20:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				Display_Update_1();    // 20/1/2022
    9c24:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9c28:	8c e0       	ldi	r24, 0x0C	; 12
    9c2a:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    9c2e:	88 eb       	ldi	r24, 0xB8	; 184
    9c30:	9b e0       	ldi	r25, 0x0B	; 11
    9c32:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
    9c36:	88 23       	and	r24, r24
    9c38:	09 f4       	brne	.+2      	; 0x9c3c <_Z22Fertilizer_Tank_On_Offhh+0x328>
    9c3a:	db c2       	rjmp	.+1462   	; 0xa1f2 <_Z22Fertilizer_Tank_On_Offhh+0x8de>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    9c3c:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
    9c40:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9c44:	88 23       	and	r24, r24
    9c46:	09 f4       	brne	.+2      	; 0x9c4a <_Z22Fertilizer_Tank_On_Offhh+0x336>
    9c48:	61 c2       	rjmp	.+1218   	; 0xa10c <_Z22Fertilizer_Tank_On_Offhh+0x7f8>
// 							}
// 						}
						
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c4a:	91 30       	cpi	r25, 0x01	; 1
    9c4c:	59 f5       	brne	.+86     	; 0x9ca4 <_Z22Fertilizer_Tank_On_Offhh+0x390>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9c4e:	64 e0       	ldi	r22, 0x04	; 4
    9c50:	72 e1       	ldi	r23, 0x12	; 18
    9c52:	82 e5       	ldi	r24, 0x52	; 82
    9c54:	94 e1       	ldi	r25, 0x14	; 20
    9c56:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    9c5a:	4a e0       	ldi	r20, 0x0A	; 10
    9c5c:	50 e0       	ldi	r21, 0x00	; 0
    9c5e:	6d e8       	ldi	r22, 0x8D	; 141
    9c60:	73 e1       	ldi	r23, 0x13	; 19
    9c62:	82 e5       	ldi	r24, 0x52	; 82
    9c64:	94 e1       	ldi	r25, 0x14	; 20
    9c66:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    9c6a:	82 e5       	ldi	r24, 0x52	; 82
    9c6c:	94 e1       	ldi	r25, 0x14	; 20
    9c6e:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9c72:	82 e5       	ldi	r24, 0x52	; 82
    9c74:	94 e1       	ldi	r25, 0x14	; 20
    9c76:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9c7a:	66 ee       	ldi	r22, 0xE6	; 230
    9c7c:	71 e1       	ldi	r23, 0x11	; 17
    9c7e:	82 e5       	ldi	r24, 0x52	; 82
    9c80:	94 e1       	ldi	r25, 0x14	; 20
    9c82:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9c86:	47 e0       	ldi	r20, 0x07	; 7
    9c88:	50 e0       	ldi	r21, 0x00	; 0
    9c8a:	b3 01       	movw	r22, r6
    9c8c:	82 e5       	ldi	r24, 0x52	; 82
    9c8e:	94 e1       	ldi	r25, 0x14	; 20
    9c90:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
							Serial.println();
    9c94:	82 e5       	ldi	r24, 0x52	; 82
    9c96:	94 e1       	ldi	r25, 0x14	; 20
    9c98:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9c9c:	82 e5       	ldi	r24, 0x52	; 82
    9c9e:	94 e1       	ldi	r25, 0x14	; 20
    9ca0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    9ca4:	ad e8       	ldi	r26, 0x8D	; 141
    9ca6:	b3 e1       	ldi	r27, 0x13	; 19
    9ca8:	80 e0       	ldi	r24, 0x00	; 0
    9caa:	90 e0       	ldi	r25, 0x00	; 0
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    9cac:	2d 91       	ld	r18, X+
    9cae:	fc 01       	movw	r30, r24
    9cb0:	e4 0d       	add	r30, r4
    9cb2:	f5 1d       	adc	r31, r5
    9cb4:	e9 54       	subi	r30, 0x49	; 73
    9cb6:	f4 4f       	sbci	r31, 0xF4	; 244
    9cb8:	31 81       	ldd	r19, Z+1	; 0x01
    9cba:	32 17       	cp	r19, r18
    9cbc:	09 f4       	brne	.+2      	; 0x9cc0 <_Z22Fertilizer_Tank_On_Offhh+0x3ac>
    9cbe:	ab c1       	rjmp	.+854    	; 0xa016 <_Z22Fertilizer_Tank_On_Offhh+0x702>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9cc0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9cc4:	81 30       	cpi	r24, 0x01	; 1
    9cc6:	51 f4       	brne	.+20     	; 0x9cdc <_Z22Fertilizer_Tank_On_Offhh+0x3c8>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9cc8:	6b eb       	ldi	r22, 0xBB	; 187
    9cca:	71 e1       	ldi	r23, 0x11	; 17
    9ccc:	82 e5       	ldi	r24, 0x52	; 82
    9cce:	94 e1       	ldi	r25, 0x14	; 20
    9cd0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9cd4:	82 e5       	ldi	r24, 0x52	; 82
    9cd6:	94 e1       	ldi	r25, 0x14	; 20
    9cd8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9cdc:	f2 e0       	ldi	r31, 0x02	; 2
    9cde:	8f 16       	cp	r8, r31
    9ce0:	09 f4       	brne	.+2      	; 0x9ce4 <_Z22Fertilizer_Tank_On_Offhh+0x3d0>
    9ce2:	34 c1       	rjmp	.+616    	; 0x9f4c <_Z22Fertilizer_Tank_On_Offhh+0x638>
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9ce4:	21 e0       	ldi	r18, 0x01	; 1
    9ce6:	e9 81       	ldd	r30, Y+1	; 0x01
    9ce8:	fa 81       	ldd	r31, Y+2	; 0x02
    9cea:	20 83       	st	Z, r18
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9cec:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    9cf0:	90 e0       	ldi	r25, 0x00	; 0
    9cf2:	98 2f       	mov	r25, r24
    9cf4:	88 27       	eor	r24, r24
    9cf6:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
    9cfa:	82 2b       	or	r24, r18
    9cfc:	f1 01       	movw	r30, r2
    9cfe:	91 83       	std	Z+1, r25	; 0x01
    9d00:	80 83       	st	Z, r24
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    9d02:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
    9d06:	b8 12       	cpse	r11, r24
    9d08:	8c c1       	rjmp	.+792    	; 0xa022 <_Z22Fertilizer_Tank_On_Offhh+0x70e>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    9d0a:	43 e0       	ldi	r20, 0x03	; 3
    9d0c:	84 2e       	mov	r8, r20
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    9d0e:	68 ee       	ldi	r22, 0xE8	; 232
    9d10:	73 e0       	ldi	r23, 0x03	; 3
    9d12:	80 e0       	ldi	r24, 0x00	; 0
    9d14:	90 e0       	ldi	r25, 0x00	; 0
    9d16:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    9d1a:	f3 e0       	ldi	r31, 0x03	; 3
    9d1c:	8f 12       	cpse	r8, r31
    9d1e:	77 cf       	rjmp	.-274    	; 0x9c0e <_Z22Fertilizer_Tank_On_Offhh+0x2fa>
    9d20:	0f 5f       	subi	r16, 0xFF	; 255
    9d22:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    9d24:	05 30       	cpi	r16, 0x05	; 5
    9d26:	11 05       	cpc	r17, r1
    9d28:	99 f0       	breq	.+38     	; 0x9d50 <_Z22Fertilizer_Tank_On_Offhh+0x43c>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9d2a:	f6 01       	movw	r30, r12
    9d2c:	80 81       	ld	r24, Z
    9d2e:	90 e0       	ldi	r25, 0x00	; 0
    9d30:	85 56       	subi	r24, 0x65	; 101
    9d32:	91 09       	sbc	r25, r1
    9d34:	e8 9e       	mul	r14, r24
    9d36:	f0 01       	movw	r30, r0
    9d38:	e9 9e       	mul	r14, r25
    9d3a:	f0 0d       	add	r31, r0
    9d3c:	11 24       	eor	r1, r1
    9d3e:	ef 57       	subi	r30, 0x7F	; 127
    9d40:	f2 4f       	sbci	r31, 0xF2	; 242
    9d42:	e0 0f       	add	r30, r16
    9d44:	f1 1f       	adc	r31, r17
    9d46:	85 81       	ldd	r24, Z+5	; 0x05
    9d48:	86 31       	cpi	r24, 0x16	; 22
    9d4a:	08 f0       	brcs	.+2      	; 0x9d4e <_Z22Fertilizer_Tank_On_Offhh+0x43a>
    9d4c:	47 c0       	rjmp	.+142    	; 0x9ddc <_Z22Fertilizer_Tank_On_Offhh+0x4c8>
    9d4e:	7c ce       	rjmp	.-776    	; 0x9a48 <_Z22Fertilizer_Tank_On_Offhh+0x134>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9d50:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9d54:	81 30       	cpi	r24, 0x01	; 1
    9d56:	51 f4       	brne	.+20     	; 0x9d6c <_Z22Fertilizer_Tank_On_Offhh+0x458>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9d58:	63 e1       	ldi	r22, 0x13	; 19
    9d5a:	71 e1       	ldi	r23, 0x11	; 17
    9d5c:	82 e5       	ldi	r24, 0x52	; 82
    9d5e:	94 e1       	ldi	r25, 0x14	; 20
    9d60:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9d64:	82 e5       	ldi	r24, 0x52	; 82
    9d66:	94 e1       	ldi	r25, 0x14	; 20
    9d68:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    9d6c:	20 91 37 14 	lds	r18, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
	// 	else
	// 	{
	// 		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
	// 	}
	
	if(on_off == _kOFF)
    9d70:	b1 10       	cpse	r11, r1
    9d72:	a7 c0       	rjmp	.+334    	; 0x9ec2 <_Z22Fertilizer_Tank_On_Offhh+0x5ae>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    9d74:	0b 81       	ldd	r16, Y+3	; 0x03
    9d76:	1c 81       	ldd	r17, Y+4	; 0x04
    9d78:	06 58       	subi	r16, 0x86	; 134
    9d7a:	1f 4f       	sbci	r17, 0xFF	; 255
    9d7c:	f8 01       	movw	r30, r16
    9d7e:	80 81       	ld	r24, Z
    9d80:	90 e0       	ldi	r25, 0x00	; 0
    9d82:	85 56       	subi	r24, 0x65	; 101
    9d84:	91 09       	sbc	r25, r1
    9d86:	3b e1       	ldi	r19, 0x1B	; 27
    9d88:	38 9f       	mul	r19, r24
    9d8a:	f0 01       	movw	r30, r0
    9d8c:	39 9f       	mul	r19, r25
    9d8e:	f0 0d       	add	r31, r0
    9d90:	11 24       	eor	r1, r1
    9d92:	ef 57       	subi	r30, 0x7F	; 127
    9d94:	f2 4f       	sbci	r31, 0xF2	; 242
    9d96:	82 81       	ldd	r24, Z+2	; 0x02
    9d98:	85 30       	cpi	r24, 0x05	; 5
    9d9a:	09 f0       	breq	.+2      	; 0x9d9e <_Z22Fertilizer_Tank_On_Offhh+0x48a>
    9d9c:	50 c0       	rjmp	.+160    	; 0x9e3e <_Z22Fertilizer_Tank_On_Offhh+0x52a>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				_kSERIAL_MON_CLEAR();
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9d9e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    9da2:	81 30       	cpi	r24, 0x01	; 1
    9da4:	c9 f4       	brne	.+50     	; 0x9dd8 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
		{
			_kSERAIL_MON_WRITE("tank to send schedule Off 1 : ");
    9da6:	65 ed       	ldi	r22, 0xD5	; 213
    9da8:	70 e1       	ldi	r23, 0x10	; 16
    9daa:	82 e5       	ldi	r24, 0x52	; 82
    9dac:	94 e1       	ldi	r25, 0x14	; 20
    9dae:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9db2:	2b 81       	ldd	r18, Y+3	; 0x03
    9db4:	3c 81       	ldd	r19, Y+4	; 0x04
    9db6:	26 58       	subi	r18, 0x86	; 134
    9db8:	3f 4f       	sbci	r19, 0xFF	; 255
    9dba:	f9 01       	movw	r30, r18
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9dbc:	60 81       	ld	r22, Z
    9dbe:	70 e0       	ldi	r23, 0x00	; 0
    9dc0:	65 56       	subi	r22, 0x65	; 101
    9dc2:	71 09       	sbc	r23, r1
    9dc4:	4a e0       	ldi	r20, 0x0A	; 10
    9dc6:	50 e0       	ldi	r21, 0x00	; 0
    9dc8:	82 e5       	ldi	r24, 0x52	; 82
    9dca:	94 e1       	ldi	r25, 0x14	; 20
    9dcc:	0e 94 a3 d2 	call	0x1a546	; 0x1a546 <_ZN5Print5printEii>
			_kSERIAL_MON_CLEAR();
    9dd0:	82 e5       	ldi	r24, 0x52	; 82
    9dd2:	94 e1       	ldi	r25, 0x14	; 20
    9dd4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		//_kSERAIL_MON_WRITE("publish status : ");
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
    9dd8:	81 e0       	ldi	r24, 0x01	; 1
    9dda:	80 c2       	rjmp	.+1280   	; 0xa2dc <_Z22Fertilizer_Tank_On_Offhh+0x9c8>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9ddc:	f6 01       	movw	r30, r12
    9dde:	80 81       	ld	r24, Z
    9de0:	90 e0       	ldi	r25, 0x00	; 0
    9de2:	85 56       	subi	r24, 0x65	; 101
    9de4:	91 09       	sbc	r25, r1
    9de6:	e8 9e       	mul	r14, r24
    9de8:	f0 01       	movw	r30, r0
    9dea:	e9 9e       	mul	r14, r25
    9dec:	f0 0d       	add	r31, r0
    9dee:	11 24       	eor	r1, r1
    9df0:	ef 57       	subi	r30, 0x7F	; 127
    9df2:	f2 4f       	sbci	r31, 0xF2	; 242
    9df4:	e0 0f       	add	r30, r16
    9df6:	f1 1f       	adc	r31, r17
    9df8:	85 81       	ldd	r24, Z+5	; 0x05
    9dfa:	86 31       	cpi	r24, 0x16	; 22
    9dfc:	08 f4       	brcc	.+2      	; 0x9e00 <_Z22Fertilizer_Tank_On_Offhh+0x4ec>
    9dfe:	90 cf       	rjmp	.-224    	; 0x9d20 <_Z22Fertilizer_Tank_On_Offhh+0x40c>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    9e00:	f6 01       	movw	r30, r12
    9e02:	80 81       	ld	r24, Z
    9e04:	61 e0       	ldi	r22, 0x01	; 1
    9e06:	b1 10       	cpse	r11, r1
    9e08:	60 e0       	ldi	r22, 0x00	; 0
    9e0a:	90 e0       	ldi	r25, 0x00	; 0
    9e0c:	85 56       	subi	r24, 0x65	; 101
    9e0e:	91 09       	sbc	r25, r1
    9e10:	e8 9e       	mul	r14, r24
    9e12:	f0 01       	movw	r30, r0
    9e14:	e9 9e       	mul	r14, r25
    9e16:	f0 0d       	add	r31, r0
    9e18:	11 24       	eor	r1, r1
    9e1a:	ef 57       	subi	r30, 0x7F	; 127
    9e1c:	f2 4f       	sbci	r31, 0xF2	; 242
    9e1e:	e0 0f       	add	r30, r16
    9e20:	f1 1f       	adc	r31, r17
    9e22:	e5 81       	ldd	r30, Z+5	; 0x05
    9e24:	f0 e0       	ldi	r31, 0x00	; 0
    9e26:	ef 53       	subi	r30, 0x3F	; 63
    9e28:	fc 4e       	sbci	r31, 0xEC	; 236
    9e2a:	80 81       	ld	r24, Z
    9e2c:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
			_kDELAY_MS(200);
    9e30:	68 ec       	ldi	r22, 0xC8	; 200
    9e32:	70 e0       	ldi	r23, 0x00	; 0
    9e34:	80 e0       	ldi	r24, 0x00	; 0
    9e36:	90 e0       	ldi	r25, 0x00	; 0
    9e38:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    9e3c:	71 cf       	rjmp	.-286    	; 0x9d20 <_Z22Fertilizer_Tank_On_Offhh+0x40c>
	
	if(on_off == _kOFF)
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9e3e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    9e42:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    9e46:	90 62       	ori	r25, 0x20	; 32
    9e48:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    9e4c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    9e50:	f8 01       	movw	r30, r16
    9e52:	80 81       	ld	r24, Z
    9e54:	85 56       	subi	r24, 0x65	; 101
    9e56:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9e5a:	80 81       	ld	r24, Z
    9e5c:	90 e0       	ldi	r25, 0x00	; 0
    9e5e:	85 56       	subi	r24, 0x65	; 101
    9e60:	91 09       	sbc	r25, r1
    9e62:	38 9f       	mul	r19, r24
    9e64:	f0 01       	movw	r30, r0
    9e66:	39 9f       	mul	r19, r25
    9e68:	f0 0d       	add	r31, r0
    9e6a:	11 24       	eor	r1, r1
    9e6c:	ef 57       	subi	r30, 0x7F	; 127
    9e6e:	f2 4f       	sbci	r31, 0xF2	; 242
    9e70:	82 e0       	ldi	r24, 0x02	; 2
    9e72:	82 8f       	std	Z+26, r24	; 0x1a
			
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    9e74:	f8 01       	movw	r30, r16
    9e76:	80 81       	ld	r24, Z
    9e78:	90 e0       	ldi	r25, 0x00	; 0
    9e7a:	85 56       	subi	r24, 0x65	; 101
    9e7c:	91 09       	sbc	r25, r1
    9e7e:	38 9f       	mul	r19, r24
    9e80:	f0 01       	movw	r30, r0
    9e82:	39 9f       	mul	r19, r25
    9e84:	f0 0d       	add	r31, r0
    9e86:	11 24       	eor	r1, r1
    9e88:	ef 57       	subi	r30, 0x7F	; 127
    9e8a:	f2 4f       	sbci	r31, 0xF2	; 242
    9e8c:	85 e0       	ldi	r24, 0x05	; 5
    9e8e:	82 83       	std	Z+2, r24	; 0x02
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9e90:	21 30       	cpi	r18, 0x01	; 1
    9e92:	09 f0       	breq	.+2      	; 0x9e96 <_Z22Fertilizer_Tank_On_Offhh+0x582>
    9e94:	a1 cf       	rjmp	.-190    	; 0x9dd8 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
			{
				_kSERAIL_MON_WRITE("tank to send schedule Off 0 : ");
    9e96:	64 ef       	ldi	r22, 0xF4	; 244
    9e98:	70 e1       	ldi	r23, 0x10	; 16
    9e9a:	82 e5       	ldi	r24, 0x52	; 82
    9e9c:	94 e1       	ldi	r25, 0x14	; 20
    9e9e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9ea2:	f8 01       	movw	r30, r16
    9ea4:	60 81       	ld	r22, Z
    9ea6:	70 e0       	ldi	r23, 0x00	; 0
    9ea8:	65 56       	subi	r22, 0x65	; 101
    9eaa:	71 09       	sbc	r23, r1
    9eac:	4a e0       	ldi	r20, 0x0A	; 10
    9eae:	50 e0       	ldi	r21, 0x00	; 0
    9eb0:	82 e5       	ldi	r24, 0x52	; 82
    9eb2:	94 e1       	ldi	r25, 0x14	; 20
    9eb4:	0e 94 a3 d2 	call	0x1a546	; 0x1a546 <_ZN5Print5printEii>
				_kSERIAL_MON_CLEAR();
    9eb8:	82 e5       	ldi	r24, 0x52	; 82
    9eba:	94 e1       	ldi	r25, 0x14	; 20
    9ebc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    9ec0:	6e cf       	rjmp	.-292    	; 0x9d9e <_Z22Fertilizer_Tank_On_Offhh+0x48a>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9ec2:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    9ec6:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    9eca:	90 62       	ori	r25, 0x20	; 32
    9ecc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    9ed0:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    9ed4:	4b 81       	ldd	r20, Y+3	; 0x03
    9ed6:	5c 81       	ldd	r21, Y+4	; 0x04
    9ed8:	46 58       	subi	r20, 0x86	; 134
    9eda:	5f 4f       	sbci	r21, 0xFF	; 255
    9edc:	5a 83       	std	Y+2, r21	; 0x02
    9ede:	49 83       	std	Y+1, r20	; 0x01
    9ee0:	fa 01       	movw	r30, r20
    9ee2:	80 81       	ld	r24, Z
    9ee4:	85 56       	subi	r24, 0x65	; 101
    9ee6:	80 93 fd 13 	sts	0x13FD, r24	; 0x8013fd <_sRuble_Parameters+0xb6>
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    9eea:	80 81       	ld	r24, Z
    9eec:	90 e0       	ldi	r25, 0x00	; 0
    9eee:	85 56       	subi	r24, 0x65	; 101
    9ef0:	91 09       	sbc	r25, r1
    9ef2:	3b e1       	ldi	r19, 0x1B	; 27
    9ef4:	38 9f       	mul	r19, r24
    9ef6:	f0 01       	movw	r30, r0
    9ef8:	39 9f       	mul	r19, r25
    9efa:	f0 0d       	add	r31, r0
    9efc:	11 24       	eor	r1, r1
    9efe:	ef 57       	subi	r30, 0x7F	; 127
    9f00:	f2 4f       	sbci	r31, 0xF2	; 242
    9f02:	82 e0       	ldi	r24, 0x02	; 2
    9f04:	82 8f       	std	Z+26, r24	; 0x1a
		
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    9f06:	fa 01       	movw	r30, r20
    9f08:	80 81       	ld	r24, Z
    9f0a:	90 e0       	ldi	r25, 0x00	; 0
    9f0c:	85 56       	subi	r24, 0x65	; 101
    9f0e:	91 09       	sbc	r25, r1
    9f10:	38 9f       	mul	r19, r24
    9f12:	f0 01       	movw	r30, r0
    9f14:	39 9f       	mul	r19, r25
    9f16:	f0 0d       	add	r31, r0
    9f18:	11 24       	eor	r1, r1
    9f1a:	ef 57       	subi	r30, 0x7F	; 127
    9f1c:	f2 4f       	sbci	r31, 0xF2	; 242
    9f1e:	84 e0       	ldi	r24, 0x04	; 4
    9f20:	82 83       	std	Z+2, r24	; 0x02
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9f22:	21 30       	cpi	r18, 0x01	; 1
    9f24:	09 f0       	breq	.+2      	; 0x9f28 <_Z22Fertilizer_Tank_On_Offhh+0x614>
    9f26:	58 cf       	rjmp	.-336    	; 0x9dd8 <_Z22Fertilizer_Tank_On_Offhh+0x4c4>
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
    9f28:	69 eb       	ldi	r22, 0xB9	; 185
    9f2a:	70 e1       	ldi	r23, 0x10	; 16
    9f2c:	82 e5       	ldi	r24, 0x52	; 82
    9f2e:	94 e1       	ldi	r25, 0x14	; 20
    9f30:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9f34:	e9 81       	ldd	r30, Y+1	; 0x01
    9f36:	fa 81       	ldd	r31, Y+2	; 0x02
    9f38:	41 cf       	rjmp	.-382    	; 0x9dbc <_Z22Fertilizer_Tank_On_Offhh+0x4a8>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9f3a:	76 2e       	mov	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9f3c:	f3 e0       	ldi	r31, 0x03	; 3
    9f3e:	8f 2e       	mov	r8, r31
    9f40:	ba cd       	rjmp	.-1164   	; 0x9ab6 <_Z22Fertilizer_Tank_On_Offhh+0x1a2>
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    9f42:	77 24       	eor	r7, r7
    9f44:	73 94       	inc	r7
    9f46:	b7 cd       	rjmp	.-1170   	; 0x9ab6 <_Z22Fertilizer_Tank_On_Offhh+0x1a2>
    9f48:	f6 2c       	mov	r15, r6
    9f4a:	34 ce       	rjmp	.-920    	; 0x9bb4 <_Z22Fertilizer_Tank_On_Offhh+0x2a0>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9f4c:	86 e0       	ldi	r24, 0x06	; 6
    9f4e:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    9f52:	84 e6       	ldi	r24, 0x64	; 100
    9f54:	90 e0       	ldi	r25, 0x00	; 0
    9f56:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    9f5a:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9f5e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    9f62:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    9f66:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    9f6a:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    9f6e:	a0 62       	ori	r26, 0x20	; 32
    9f70:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    9f74:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    9f78:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    9f7c:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    9f80:	f0 92 f9 13 	sts	0x13F9, r15	; 0x8013f9 <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9f84:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    9f88:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    9f8c:	82 60       	ori	r24, 0x02	; 2
    9f8e:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    9f92:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9f96:	00 e0       	ldi	r16, 0x00	; 0
    9f98:	10 e0       	ldi	r17, 0x00	; 0
									{
										if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9f9a:	2b 81       	ldd	r18, Y+3	; 0x03
    9f9c:	3c 81       	ldd	r19, Y+4	; 0x04
    9f9e:	26 58       	subi	r18, 0x86	; 134
    9fa0:	3f 4f       	sbci	r19, 0xFF	; 255
    9fa2:	3a 83       	std	Y+2, r19	; 0x02
    9fa4:	29 83       	std	Y+1, r18	; 0x01
    9fa6:	3b e1       	ldi	r19, 0x1B	; 27
    9fa8:	f3 2e       	mov	r15, r19
    9faa:	e9 81       	ldd	r30, Y+1	; 0x01
    9fac:	fa 81       	ldd	r31, Y+2	; 0x02
    9fae:	80 81       	ld	r24, Z
    9fb0:	90 e0       	ldi	r25, 0x00	; 0
    9fb2:	85 56       	subi	r24, 0x65	; 101
    9fb4:	91 09       	sbc	r25, r1
    9fb6:	f8 9e       	mul	r15, r24
    9fb8:	f0 01       	movw	r30, r0
    9fba:	f9 9e       	mul	r15, r25
    9fbc:	f0 0d       	add	r31, r0
    9fbe:	11 24       	eor	r1, r1
    9fc0:	ef 57       	subi	r30, 0x7F	; 127
    9fc2:	f2 4f       	sbci	r31, 0xF2	; 242
    9fc4:	e0 0f       	add	r30, r16
    9fc6:	f1 1f       	adc	r31, r17
    9fc8:	85 81       	ldd	r24, Z+5	; 0x05
    9fca:	86 31       	cpi	r24, 0x16	; 22
    9fcc:	e8 f0       	brcs	.+58     	; 0xa008 <_Z22Fertilizer_Tank_On_Offhh+0x6f4>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9fce:	e9 81       	ldd	r30, Y+1	; 0x01
    9fd0:	fa 81       	ldd	r31, Y+2	; 0x02
    9fd2:	80 81       	ld	r24, Z
    9fd4:	90 e0       	ldi	r25, 0x00	; 0
    9fd6:	85 56       	subi	r24, 0x65	; 101
    9fd8:	91 09       	sbc	r25, r1
    9fda:	f8 9e       	mul	r15, r24
    9fdc:	f0 01       	movw	r30, r0
    9fde:	f9 9e       	mul	r15, r25
    9fe0:	f0 0d       	add	r31, r0
    9fe2:	11 24       	eor	r1, r1
    9fe4:	ef 57       	subi	r30, 0x7F	; 127
    9fe6:	f2 4f       	sbci	r31, 0xF2	; 242
    9fe8:	e0 0f       	add	r30, r16
    9fea:	f1 1f       	adc	r31, r17
    9fec:	e5 81       	ldd	r30, Z+5	; 0x05
    9fee:	f0 e0       	ldi	r31, 0x00	; 0
    9ff0:	ef 53       	subi	r30, 0x3F	; 63
    9ff2:	fc 4e       	sbci	r31, 0xEC	; 236
    9ff4:	61 e0       	ldi	r22, 0x01	; 1
    9ff6:	80 81       	ld	r24, Z
    9ff8:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
											_kDELAY_MS(200);
    9ffc:	68 ec       	ldi	r22, 0xC8	; 200
    9ffe:	70 e0       	ldi	r23, 0x00	; 0
    a000:	80 e0       	ldi	r24, 0x00	; 0
    a002:	90 e0       	ldi	r25, 0x00	; 0
    a004:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a008:	0f 5f       	subi	r16, 0xFF	; 255
    a00a:	1f 4f       	sbci	r17, 0xFF	; 255
    a00c:	05 30       	cpi	r16, 0x05	; 5
    a00e:	11 05       	cpc	r17, r1
    a010:	61 f6       	brne	.-104    	; 0x9faa <_Z22Fertilizer_Tank_On_Offhh+0x696>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    a012:	80 e0       	ldi	r24, 0x00	; 0
    a014:	63 c1       	rjmp	.+710    	; 0xa2dc <_Z22Fertilizer_Tank_On_Offhh+0x9c8>
    a016:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    a018:	86 30       	cpi	r24, 0x06	; 6
    a01a:	91 05       	cpc	r25, r1
    a01c:	09 f0       	breq	.+2      	; 0xa020 <_Z22Fertilizer_Tank_On_Offhh+0x70c>
    a01e:	46 ce       	rjmp	.-884    	; 0x9cac <_Z22Fertilizer_Tank_On_Offhh+0x398>
    a020:	61 ce       	rjmp	.-830    	; 0x9ce4 <_Z22Fertilizer_Tank_On_Offhh+0x3d0>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    a022:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a026:	81 30       	cpi	r24, 0x01	; 1
    a028:	51 f4       	brne	.+20     	; 0xa03e <_Z22Fertilizer_Tank_On_Offhh+0x72a>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    a02a:	68 ea       	ldi	r22, 0xA8	; 168
    a02c:	71 e1       	ldi	r23, 0x11	; 17
    a02e:	82 e5       	ldi	r24, 0x52	; 82
    a030:	94 e1       	ldi	r25, 0x14	; 20
    a032:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    a036:	82 e5       	ldi	r24, 0x52	; 82
    a038:	94 e1       	ldi	r25, 0x14	; 20
    a03a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a03e:	f2 e0       	ldi	r31, 0x02	; 2
    a040:	8f 12       	cpse	r8, r31
    a042:	65 ce       	rjmp	.-822    	; 0x9d0e <_Z22Fertilizer_Tank_On_Offhh+0x3fa>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a044:	86 e0       	ldi	r24, 0x06	; 6
    a046:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    a04a:	84 e6       	ldi	r24, 0x64	; 100
    a04c:	90 e0       	ldi	r25, 0x00	; 0
    a04e:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    a052:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a056:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    a05a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    a05e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    a062:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    a066:	a0 62       	ori	r26, 0x20	; 32
    a068:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    a06c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    a070:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    a074:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    a078:	f0 92 f9 13 	sts	0x13F9, r15	; 0x8013f9 <_sRuble_Parameters+0xb2>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a07c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    a080:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    a084:	82 60       	ori	r24, 0x02	; 2
    a086:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    a08a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a08e:	00 e0       	ldi	r16, 0x00	; 0
    a090:	10 e0       	ldi	r17, 0x00	; 0
								{
									if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a092:	2b 81       	ldd	r18, Y+3	; 0x03
    a094:	3c 81       	ldd	r19, Y+4	; 0x04
    a096:	26 58       	subi	r18, 0x86	; 134
    a098:	3f 4f       	sbci	r19, 0xFF	; 255
    a09a:	3a 83       	std	Y+2, r19	; 0x02
    a09c:	29 83       	std	Y+1, r18	; 0x01
    a09e:	2b e1       	ldi	r18, 0x1B	; 27
    a0a0:	f2 2e       	mov	r15, r18
    a0a2:	e9 81       	ldd	r30, Y+1	; 0x01
    a0a4:	fa 81       	ldd	r31, Y+2	; 0x02
    a0a6:	80 81       	ld	r24, Z
    a0a8:	90 e0       	ldi	r25, 0x00	; 0
    a0aa:	85 56       	subi	r24, 0x65	; 101
    a0ac:	91 09       	sbc	r25, r1
    a0ae:	f8 9e       	mul	r15, r24
    a0b0:	f0 01       	movw	r30, r0
    a0b2:	f9 9e       	mul	r15, r25
    a0b4:	f0 0d       	add	r31, r0
    a0b6:	11 24       	eor	r1, r1
    a0b8:	ef 57       	subi	r30, 0x7F	; 127
    a0ba:	f2 4f       	sbci	r31, 0xF2	; 242
    a0bc:	e0 0f       	add	r30, r16
    a0be:	f1 1f       	adc	r31, r17
    a0c0:	85 81       	ldd	r24, Z+5	; 0x05
    a0c2:	86 31       	cpi	r24, 0x16	; 22
    a0c4:	e8 f0       	brcs	.+58     	; 0xa100 <_Z22Fertilizer_Tank_On_Offhh+0x7ec>
									{
										/********************************* turn on/off the wired valve *********************************/
										
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a0c6:	e9 81       	ldd	r30, Y+1	; 0x01
    a0c8:	fa 81       	ldd	r31, Y+2	; 0x02
    a0ca:	80 81       	ld	r24, Z
    a0cc:	90 e0       	ldi	r25, 0x00	; 0
    a0ce:	85 56       	subi	r24, 0x65	; 101
    a0d0:	91 09       	sbc	r25, r1
    a0d2:	f8 9e       	mul	r15, r24
    a0d4:	f0 01       	movw	r30, r0
    a0d6:	f9 9e       	mul	r15, r25
    a0d8:	f0 0d       	add	r31, r0
    a0da:	11 24       	eor	r1, r1
    a0dc:	ef 57       	subi	r30, 0x7F	; 127
    a0de:	f2 4f       	sbci	r31, 0xF2	; 242
    a0e0:	e0 0f       	add	r30, r16
    a0e2:	f1 1f       	adc	r31, r17
    a0e4:	e5 81       	ldd	r30, Z+5	; 0x05
    a0e6:	f0 e0       	ldi	r31, 0x00	; 0
    a0e8:	ef 53       	subi	r30, 0x3F	; 63
    a0ea:	fc 4e       	sbci	r31, 0xEC	; 236
    a0ec:	61 e0       	ldi	r22, 0x01	; 1
    a0ee:	80 81       	ld	r24, Z
    a0f0:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
										_kDELAY_MS(200);
    a0f4:	68 ec       	ldi	r22, 0xC8	; 200
    a0f6:	70 e0       	ldi	r23, 0x00	; 0
    a0f8:	80 e0       	ldi	r24, 0x00	; 0
    a0fa:	90 e0       	ldi	r25, 0x00	; 0
    a0fc:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a100:	0f 5f       	subi	r16, 0xFF	; 255
    a102:	1f 4f       	sbci	r17, 0xFF	; 255
    a104:	05 30       	cpi	r16, 0x05	; 5
    a106:	11 05       	cpc	r17, r1
    a108:	61 f6       	brne	.-104    	; 0xa0a2 <_Z22Fertilizer_Tank_On_Offhh+0x78e>
    a10a:	83 cf       	rjmp	.-250    	; 0xa012 <_Z22Fertilizer_Tank_On_Offhh+0x6fe>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    a10c:	91 30       	cpi	r25, 0x01	; 1
    a10e:	51 f4       	brne	.+20     	; 0xa124 <_Z22Fertilizer_Tank_On_Offhh+0x810>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    a110:	6d e6       	ldi	r22, 0x6D	; 109
    a112:	71 e1       	ldi	r23, 0x11	; 17
    a114:	82 e5       	ldi	r24, 0x52	; 82
    a116:	94 e1       	ldi	r25, 0x14	; 20
    a118:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    a11c:	82 e5       	ldi	r24, 0x52	; 82
    a11e:	94 e1       	ldi	r25, 0x14	; 20
    a120:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    a124:	f2 e0       	ldi	r31, 0x02	; 2
    a126:	8f 12       	cpse	r8, r31
    a128:	f2 cd       	rjmp	.-1052   	; 0x9d0e <_Z22Fertilizer_Tank_On_Offhh+0x3fa>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a12a:	86 e0       	ldi	r24, 0x06	; 6
    a12c:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    a130:	84 e6       	ldi	r24, 0x64	; 100
    a132:	90 e0       	ldi	r25, 0x00	; 0
    a134:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    a138:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a13c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    a140:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    a144:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    a148:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    a14c:	a0 62       	ori	r26, 0x20	; 32
    a14e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    a152:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    a156:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    a15a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    a15e:	f0 92 f9 13 	sts	0x13F9, r15	; 0x8013f9 <_sRuble_Parameters+0xb2>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a162:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    a166:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    a16a:	82 60       	ori	r24, 0x02	; 2
    a16c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    a170:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a174:	00 e0       	ldi	r16, 0x00	; 0
    a176:	10 e0       	ldi	r17, 0x00	; 0
							{
								if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a178:	2b 81       	ldd	r18, Y+3	; 0x03
    a17a:	3c 81       	ldd	r19, Y+4	; 0x04
    a17c:	26 58       	subi	r18, 0x86	; 134
    a17e:	3f 4f       	sbci	r19, 0xFF	; 255
    a180:	3a 83       	std	Y+2, r19	; 0x02
    a182:	29 83       	std	Y+1, r18	; 0x01
    a184:	9b e1       	ldi	r25, 0x1B	; 27
    a186:	f9 2e       	mov	r15, r25
    a188:	e9 81       	ldd	r30, Y+1	; 0x01
    a18a:	fa 81       	ldd	r31, Y+2	; 0x02
    a18c:	80 81       	ld	r24, Z
    a18e:	90 e0       	ldi	r25, 0x00	; 0
    a190:	85 56       	subi	r24, 0x65	; 101
    a192:	91 09       	sbc	r25, r1
    a194:	f8 9e       	mul	r15, r24
    a196:	f0 01       	movw	r30, r0
    a198:	f9 9e       	mul	r15, r25
    a19a:	f0 0d       	add	r31, r0
    a19c:	11 24       	eor	r1, r1
    a19e:	ef 57       	subi	r30, 0x7F	; 127
    a1a0:	f2 4f       	sbci	r31, 0xF2	; 242
    a1a2:	e0 0f       	add	r30, r16
    a1a4:	f1 1f       	adc	r31, r17
    a1a6:	85 81       	ldd	r24, Z+5	; 0x05
    a1a8:	86 31       	cpi	r24, 0x16	; 22
    a1aa:	e8 f0       	brcs	.+58     	; 0xa1e6 <_Z22Fertilizer_Tank_On_Offhh+0x8d2>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a1ac:	e9 81       	ldd	r30, Y+1	; 0x01
    a1ae:	fa 81       	ldd	r31, Y+2	; 0x02
    a1b0:	80 81       	ld	r24, Z
    a1b2:	90 e0       	ldi	r25, 0x00	; 0
    a1b4:	85 56       	subi	r24, 0x65	; 101
    a1b6:	91 09       	sbc	r25, r1
    a1b8:	f8 9e       	mul	r15, r24
    a1ba:	f0 01       	movw	r30, r0
    a1bc:	f9 9e       	mul	r15, r25
    a1be:	f0 0d       	add	r31, r0
    a1c0:	11 24       	eor	r1, r1
    a1c2:	ef 57       	subi	r30, 0x7F	; 127
    a1c4:	f2 4f       	sbci	r31, 0xF2	; 242
    a1c6:	e0 0f       	add	r30, r16
    a1c8:	f1 1f       	adc	r31, r17
    a1ca:	e5 81       	ldd	r30, Z+5	; 0x05
    a1cc:	f0 e0       	ldi	r31, 0x00	; 0
    a1ce:	ef 53       	subi	r30, 0x3F	; 63
    a1d0:	fc 4e       	sbci	r31, 0xEC	; 236
    a1d2:	61 e0       	ldi	r22, 0x01	; 1
    a1d4:	80 81       	ld	r24, Z
    a1d6:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
									_kDELAY_MS(200);
    a1da:	68 ec       	ldi	r22, 0xC8	; 200
    a1dc:	70 e0       	ldi	r23, 0x00	; 0
    a1de:	80 e0       	ldi	r24, 0x00	; 0
    a1e0:	90 e0       	ldi	r25, 0x00	; 0
    a1e2:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a1e6:	0f 5f       	subi	r16, 0xFF	; 255
    a1e8:	1f 4f       	sbci	r17, 0xFF	; 255
    a1ea:	05 30       	cpi	r16, 0x05	; 5
    a1ec:	11 05       	cpc	r17, r1
    a1ee:	61 f6       	brne	.-104    	; 0xa188 <_Z22Fertilizer_Tank_On_Offhh+0x874>
    a1f0:	10 cf       	rjmp	.-480    	; 0xa012 <_Z22Fertilizer_Tank_On_Offhh+0x6fe>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a1f2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a1f6:	81 30       	cpi	r24, 0x01	; 1
    a1f8:	51 f4       	brne	.+20     	; 0xa20e <_Z22Fertilizer_Tank_On_Offhh+0x8fa>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    a1fa:	62 e3       	ldi	r22, 0x32	; 50
    a1fc:	71 e1       	ldi	r23, 0x11	; 17
    a1fe:	82 e5       	ldi	r24, 0x52	; 82
    a200:	94 e1       	ldi	r25, 0x14	; 20
    a202:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a206:	82 e5       	ldi	r24, 0x52	; 82
    a208:	94 e1       	ldi	r25, 0x14	; 20
    a20a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a20e:	f2 e0       	ldi	r31, 0x02	; 2
    a210:	8f 12       	cpse	r8, r31
    a212:	7d cd       	rjmp	.-1286   	; 0x9d0e <_Z22Fertilizer_Tank_On_Offhh+0x3fa>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a214:	86 e0       	ldi	r24, 0x06	; 6
    a216:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    a21a:	84 e6       	ldi	r24, 0x64	; 100
    a21c:	90 e0       	ldi	r25, 0x00	; 0
    a21e:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    a222:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a226:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    a22a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    a22e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    a232:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    a236:	a0 62       	ori	r26, 0x20	; 32
    a238:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    a23c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    a240:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    a244:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    a248:	f0 92 f9 13 	sts	0x13F9, r15	; 0x8013f9 <_sRuble_Parameters+0xb2>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a24c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    a250:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    a254:	82 60       	ori	r24, 0x02	; 2
    a256:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    a25a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a25e:	00 e0       	ldi	r16, 0x00	; 0
    a260:	10 e0       	ldi	r17, 0x00	; 0
						{
							if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a262:	2b 81       	ldd	r18, Y+3	; 0x03
    a264:	3c 81       	ldd	r19, Y+4	; 0x04
    a266:	26 58       	subi	r18, 0x86	; 134
    a268:	3f 4f       	sbci	r19, 0xFF	; 255
    a26a:	3a 83       	std	Y+2, r19	; 0x02
    a26c:	29 83       	std	Y+1, r18	; 0x01
    a26e:	8b e1       	ldi	r24, 0x1B	; 27
    a270:	f8 2e       	mov	r15, r24
    a272:	e9 81       	ldd	r30, Y+1	; 0x01
    a274:	fa 81       	ldd	r31, Y+2	; 0x02
    a276:	80 81       	ld	r24, Z
    a278:	90 e0       	ldi	r25, 0x00	; 0
    a27a:	85 56       	subi	r24, 0x65	; 101
    a27c:	91 09       	sbc	r25, r1
    a27e:	f8 9e       	mul	r15, r24
    a280:	f0 01       	movw	r30, r0
    a282:	f9 9e       	mul	r15, r25
    a284:	f0 0d       	add	r31, r0
    a286:	11 24       	eor	r1, r1
    a288:	ef 57       	subi	r30, 0x7F	; 127
    a28a:	f2 4f       	sbci	r31, 0xF2	; 242
    a28c:	e0 0f       	add	r30, r16
    a28e:	f1 1f       	adc	r31, r17
    a290:	85 81       	ldd	r24, Z+5	; 0x05
    a292:	86 31       	cpi	r24, 0x16	; 22
    a294:	e8 f0       	brcs	.+58     	; 0xa2d0 <_Z22Fertilizer_Tank_On_Offhh+0x9bc>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a296:	e9 81       	ldd	r30, Y+1	; 0x01
    a298:	fa 81       	ldd	r31, Y+2	; 0x02
    a29a:	80 81       	ld	r24, Z
    a29c:	90 e0       	ldi	r25, 0x00	; 0
    a29e:	85 56       	subi	r24, 0x65	; 101
    a2a0:	91 09       	sbc	r25, r1
    a2a2:	f8 9e       	mul	r15, r24
    a2a4:	f0 01       	movw	r30, r0
    a2a6:	f9 9e       	mul	r15, r25
    a2a8:	f0 0d       	add	r31, r0
    a2aa:	11 24       	eor	r1, r1
    a2ac:	ef 57       	subi	r30, 0x7F	; 127
    a2ae:	f2 4f       	sbci	r31, 0xF2	; 242
    a2b0:	e0 0f       	add	r30, r16
    a2b2:	f1 1f       	adc	r31, r17
    a2b4:	e5 81       	ldd	r30, Z+5	; 0x05
    a2b6:	f0 e0       	ldi	r31, 0x00	; 0
    a2b8:	ef 53       	subi	r30, 0x3F	; 63
    a2ba:	fc 4e       	sbci	r31, 0xEC	; 236
    a2bc:	61 e0       	ldi	r22, 0x01	; 1
    a2be:	80 81       	ld	r24, Z
    a2c0:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
								_kDELAY_MS(200);
    a2c4:	68 ec       	ldi	r22, 0xC8	; 200
    a2c6:	70 e0       	ldi	r23, 0x00	; 0
    a2c8:	80 e0       	ldi	r24, 0x00	; 0
    a2ca:	90 e0       	ldi	r25, 0x00	; 0
    a2cc:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a2d0:	0f 5f       	subi	r16, 0xFF	; 255
    a2d2:	1f 4f       	sbci	r17, 0xFF	; 255
    a2d4:	05 30       	cpi	r16, 0x05	; 5
    a2d6:	11 05       	cpc	r17, r1
    a2d8:	61 f6       	brne	.-104    	; 0xa272 <_Z22Fertilizer_Tank_On_Offhh+0x95e>
    a2da:	9b ce       	rjmp	.-714    	; 0xa012 <_Z22Fertilizer_Tank_On_Offhh+0x6fe>
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
}
    a2dc:	0f 90       	pop	r0
    a2de:	0f 90       	pop	r0
    a2e0:	0f 90       	pop	r0
    a2e2:	0f 90       	pop	r0
    a2e4:	df 91       	pop	r29
    a2e6:	cf 91       	pop	r28
    a2e8:	1f 91       	pop	r17
    a2ea:	0f 91       	pop	r16
    a2ec:	ff 90       	pop	r15
    a2ee:	ef 90       	pop	r14
    a2f0:	df 90       	pop	r13
    a2f2:	cf 90       	pop	r12
    a2f4:	bf 90       	pop	r11
    a2f6:	af 90       	pop	r10
    a2f8:	9f 90       	pop	r9
    a2fa:	8f 90       	pop	r8
    a2fc:	7f 90       	pop	r7
    a2fe:	6f 90       	pop	r6
    a300:	5f 90       	pop	r5
    a302:	4f 90       	pop	r4
    a304:	3f 90       	pop	r3
    a306:	2f 90       	pop	r2
    a308:	08 95       	ret

0000a30a <_Z26Fertilizer_Tank_Monitoringv>:
	}
	
}					

void Fertilizer_Tank_Monitoring(void)
{
    a30a:	af 92       	push	r10
    a30c:	bf 92       	push	r11
    a30e:	df 92       	push	r13
    a310:	ef 92       	push	r14
    a312:	ff 92       	push	r15
    a314:	0f 93       	push	r16
    a316:	1f 93       	push	r17
    a318:	cf 93       	push	r28
    a31a:	df 93       	push	r29
	unsigned char tank_number;
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    a31c:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    a320:	81 30       	cpi	r24, 0x01	; 1
    a322:	29 f5       	brne	.+74     	; 0xa36e <_Z26Fertilizer_Tank_Monitoringv+0x64>
	{	
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a324:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a328:	81 30       	cpi	r24, 0x01	; 1
    a32a:	31 f4       	brne	.+12     	; 0xa338 <_Z26Fertilizer_Tank_Monitoringv+0x2e>
		{
			_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring : ");
    a32c:	6d ee       	ldi	r22, 0xED	; 237
    a32e:	72 e1       	ldi	r23, 0x12	; 18
    a330:	82 e5       	ldi	r24, 0x52	; 82
    a332:	94 e1       	ldi	r25, 0x14	; 20
    a334:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    a338:	80 91 83 0d 	lds	r24, 0x0D83	; 0x800d83 <_sExtra_Plot+0x2>
    a33c:	84 30       	cpi	r24, 0x04	; 4
    a33e:	09 f0       	breq	.+2      	; 0xa342 <_Z26Fertilizer_Tank_Monitoringv+0x38>
    a340:	45 c1       	rjmp	.+650    	; 0xa5cc <_Z26Fertilizer_Tank_Monitoringv+0x2c2>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a342:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a346:	81 30       	cpi	r24, 0x01	; 1
    a348:	31 f4       	brne	.+12     	; 0xa356 <_Z26Fertilizer_Tank_Monitoringv+0x4c>
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
    a34a:	6d ec       	ldi	r22, 0xCD	; 205
    a34c:	72 e1       	ldi	r23, 0x12	; 18
    a34e:	82 e5       	ldi	r24, 0x52	; 82
    a350:	94 e1       	ldi	r25, 0x14	; 20
    a352:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a356:	83 e0       	ldi	r24, 0x03	; 3
					}
				}
			}
		}
	}
}
    a358:	df 91       	pop	r29
    a35a:	cf 91       	pop	r28
    a35c:	1f 91       	pop	r17
    a35e:	0f 91       	pop	r16
    a360:	ff 90       	pop	r15
    a362:	ef 90       	pop	r14
    a364:	df 90       	pop	r13
    a366:	bf 90       	pop	r11
    a368:	af 90       	pop	r10
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a36a:	0c 94 47 49 	jmp	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
    a36e:	c0 e0       	ldi	r28, 0x00	; 0
    a370:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a372:	3b e1       	ldi	r19, 0x1B	; 27
    a374:	f3 2e       	mov	r15, r19
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a376:	48 e7       	ldi	r20, 0x78	; 120
    a378:	d4 2e       	mov	r13, r20
    a37a:	ec 2e       	mov	r14, r28
	
	
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
    a37c:	8e 01       	movw	r16, r28
    a37e:	02 5e       	subi	r16, 0xE2	; 226
    a380:	16 4f       	sbci	r17, 0xF6	; 246
    a382:	f8 01       	movw	r30, r16
    a384:	e3 50       	subi	r30, 0x03	; 3
    a386:	fe 4f       	sbci	r31, 0xFE	; 254
    a388:	80 81       	ld	r24, Z
    a38a:	81 11       	cpse	r24, r1
    a38c:	7a c0       	rjmp	.+244    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
    a38e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a392:	90 e0       	ldi	r25, 0x00	; 0
    a394:	01 97       	sbiw	r24, 0x01	; 1
    a396:	fc 01       	movw	r30, r24
    a398:	ee 0f       	add	r30, r30
    a39a:	ff 1f       	adc	r31, r31
    a39c:	e8 0f       	add	r30, r24
    a39e:	f9 1f       	adc	r31, r25
    a3a0:	ec 0f       	add	r30, r28
    a3a2:	fd 1f       	adc	r31, r29
    a3a4:	e1 59       	subi	r30, 0x91	; 145
    a3a6:	f5 4f       	sbci	r31, 0xF5	; 245
    a3a8:	80 81       	ld	r24, Z
    a3aa:	81 30       	cpi	r24, 0x01	; 1
    a3ac:	09 f0       	breq	.+2      	; 0xa3b0 <_Z26Fertilizer_Tank_Monitoringv+0xa6>
    a3ae:	69 c0       	rjmp	.+210    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a3b0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a3b4:	90 e0       	ldi	r25, 0x00	; 0
    a3b6:	01 97       	sbiw	r24, 0x01	; 1
    a3b8:	fc 01       	movw	r30, r24
    a3ba:	ee 0f       	add	r30, r30
    a3bc:	ff 1f       	adc	r31, r31
    a3be:	e8 0f       	add	r30, r24
    a3c0:	f9 1f       	adc	r31, r25
    a3c2:	ec 0f       	add	r30, r28
    a3c4:	fd 1f       	adc	r31, r29
    a3c6:	e8 56       	subi	r30, 0x68	; 104
    a3c8:	f6 4f       	sbci	r31, 0xF6	; 246
    a3ca:	80 81       	ld	r24, Z
    a3cc:	90 e0       	ldi	r25, 0x00	; 0
    a3ce:	85 56       	subi	r24, 0x65	; 101
    a3d0:	91 09       	sbc	r25, r1
    a3d2:	f8 9e       	mul	r15, r24
    a3d4:	f0 01       	movw	r30, r0
    a3d6:	f9 9e       	mul	r15, r25
    a3d8:	f0 0d       	add	r31, r0
    a3da:	11 24       	eor	r1, r1
    a3dc:	ef 57       	subi	r30, 0x7F	; 127
    a3de:	f2 4f       	sbci	r31, 0xF2	; 242
    a3e0:	81 81       	ldd	r24, Z+1	; 0x01
    a3e2:	88 23       	and	r24, r24
    a3e4:	09 f4       	brne	.+2      	; 0xa3e8 <_Z26Fertilizer_Tank_Monitoringv+0xde>
    a3e6:	4d c0       	rjmp	.+154    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
    a3e8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a3ec:	90 e0       	ldi	r25, 0x00	; 0
    a3ee:	01 97       	sbiw	r24, 0x01	; 1
    a3f0:	fc 01       	movw	r30, r24
    a3f2:	ee 0f       	add	r30, r30
    a3f4:	ff 1f       	adc	r31, r31
    a3f6:	e8 0f       	add	r30, r24
    a3f8:	f9 1f       	adc	r31, r25
    a3fa:	ec 0f       	add	r30, r28
    a3fc:	fd 1f       	adc	r31, r29
    a3fe:	e8 56       	subi	r30, 0x68	; 104
    a400:	f6 4f       	sbci	r31, 0xF6	; 246
    a402:	80 81       	ld	r24, Z
    a404:	90 e0       	ldi	r25, 0x00	; 0
    a406:	85 56       	subi	r24, 0x65	; 101
    a408:	91 09       	sbc	r25, r1
    a40a:	f8 9e       	mul	r15, r24
    a40c:	f0 01       	movw	r30, r0
    a40e:	f9 9e       	mul	r15, r25
    a410:	f0 0d       	add	r31, r0
    a412:	11 24       	eor	r1, r1
    a414:	ef 57       	subi	r30, 0x7F	; 127
    a416:	f2 4f       	sbci	r31, 0xF2	; 242
    a418:	81 81       	ldd	r24, Z+1	; 0x01
    a41a:	85 36       	cpi	r24, 0x65	; 101
    a41c:	90 f1       	brcs	.+100    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
				{
					/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 1: ");*/
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    a41e:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a422:	90 e0       	ldi	r25, 0x00	; 0
    a424:	01 97       	sbiw	r24, 0x01	; 1
    a426:	fc 01       	movw	r30, r24
    a428:	ee 0f       	add	r30, r30
    a42a:	ff 1f       	adc	r31, r31
    a42c:	e8 0f       	add	r30, r24
    a42e:	f9 1f       	adc	r31, r25
    a430:	ec 0f       	add	r30, r28
    a432:	fd 1f       	adc	r31, r29
    a434:	e8 56       	subi	r30, 0x68	; 104
    a436:	f6 4f       	sbci	r31, 0xF6	; 246
    a438:	80 81       	ld	r24, Z
    a43a:	90 e0       	ldi	r25, 0x00	; 0
    a43c:	85 56       	subi	r24, 0x65	; 101
    a43e:	91 09       	sbc	r25, r1
    a440:	f8 9e       	mul	r15, r24
    a442:	f0 01       	movw	r30, r0
    a444:	f9 9e       	mul	r15, r25
    a446:	f0 0d       	add	r31, r0
    a448:	11 24       	eor	r1, r1
    a44a:	ef 57       	subi	r30, 0x7F	; 127
    a44c:	f2 4f       	sbci	r31, 0xF2	; 242
    a44e:	80 81       	ld	r24, Z
    a450:	81 11       	cpse	r24, r1
    a452:	17 c0       	rjmp	.+46     	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a454:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a458:	90 e0       	ldi	r25, 0x00	; 0
    a45a:	01 97       	sbiw	r24, 0x01	; 1
    a45c:	fc 01       	movw	r30, r24
    a45e:	ee 0f       	add	r30, r30
    a460:	ff 1f       	adc	r31, r31
    a462:	e8 0f       	add	r30, r24
    a464:	f9 1f       	adc	r31, r25
    a466:	ec 0f       	add	r30, r28
    a468:	fd 1f       	adc	r31, r29
    a46a:	ee 0f       	add	r30, r30
    a46c:	ff 1f       	adc	r31, r31
    a46e:	eb 53       	subi	r30, 0x3B	; 59
    a470:	f5 4f       	sbci	r31, 0xF5	; 245
    a472:	20 81       	ld	r18, Z
    a474:	31 81       	ldd	r19, Z+1	; 0x01
    a476:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a47a:	90 e0       	ldi	r25, 0x00	; 0
    a47c:	28 17       	cp	r18, r24
    a47e:	39 07       	cpc	r19, r25
    a480:	31 f4       	brne	.+12     	; 0xa48e <_Z26Fertilizer_Tank_Monitoringv+0x184>
    a482:	21 96       	adiw	r28, 0x01	; 1
		return;
	}
	
	
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    a484:	c3 30       	cpi	r28, 0x03	; 3
    a486:	d1 05       	cpc	r29, r1
    a488:	09 f0       	breq	.+2      	; 0xa48c <_Z26Fertilizer_Tank_Monitoringv+0x182>
    a48a:	77 cf       	rjmp	.-274    	; 0xa37a <_Z26Fertilizer_Tank_Monitoringv+0x70>
    a48c:	9f c0       	rjmp	.+318    	; 0xa5cc <_Z26Fertilizer_Tank_Monitoringv+0x2c2>
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
						{	
							/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 3: ");*/
							if(_sSchedules.Running_Tank[tank_number] == _kON)
    a48e:	58 01       	movw	r10, r16
    a490:	82 e0       	ldi	r24, 0x02	; 2
    a492:	a8 0e       	add	r10, r24
    a494:	b8 1e       	adc	r11, r24
    a496:	f5 01       	movw	r30, r10
    a498:	80 81       	ld	r24, Z
    a49a:	81 30       	cpi	r24, 0x01	; 1
    a49c:	09 f0       	breq	.+2      	; 0xa4a0 <_Z26Fertilizer_Tank_Monitoringv+0x196>
    a49e:	45 c0       	rjmp	.+138    	; 0xa52a <_Z26Fertilizer_Tank_Monitoringv+0x220>
							{
								Doser_Pump_On_Off(_kON);
    a4a0:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
								/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 4: ");*/
								if(_sSchedules.Tank_Running_Timer[tank_number] > _sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a4a4:	8e 01       	movw	r16, r28
    a4a6:	00 0f       	add	r16, r16
    a4a8:	11 1f       	adc	r17, r17
    a4aa:	0c 5d       	subi	r16, 0xDC	; 220
    a4ac:	14 4f       	sbci	r17, 0xF4	; 244
    a4ae:	f8 01       	movw	r30, r16
    a4b0:	20 81       	ld	r18, Z
    a4b2:	31 81       	ldd	r19, Z+1	; 0x01
    a4b4:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a4b8:	90 e0       	ldi	r25, 0x00	; 0
    a4ba:	01 97       	sbiw	r24, 0x01	; 1
    a4bc:	fc 01       	movw	r30, r24
    a4be:	ee 0f       	add	r30, r30
    a4c0:	ff 1f       	adc	r31, r31
    a4c2:	e8 0f       	add	r30, r24
    a4c4:	f9 1f       	adc	r31, r25
    a4c6:	ec 0f       	add	r30, r28
    a4c8:	fd 1f       	adc	r31, r29
    a4ca:	ee 0f       	add	r30, r30
    a4cc:	ff 1f       	adc	r31, r31
    a4ce:	e7 5e       	subi	r30, 0xE7	; 231
    a4d0:	f5 4f       	sbci	r31, 0xF5	; 245
    a4d2:	80 81       	ld	r24, Z
    a4d4:	91 81       	ldd	r25, Z+1	; 0x01
    a4d6:	82 17       	cp	r24, r18
    a4d8:	93 07       	cpc	r25, r19
    a4da:	98 f6       	brcc	.-90     	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									/* stop tank schedule */
									Doser_Pump_On_Off(_kOFF);
    a4dc:	80 e0       	ldi	r24, 0x00	; 0
    a4de:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
									_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    a4e2:	f8 01       	movw	r30, r16
    a4e4:	11 82       	std	Z+1, r1	; 0x01
    a4e6:	10 82       	st	Z, r1
									_sSchedules.Running_Tank[tank_number] = _kOFF;
    a4e8:	f5 01       	movw	r30, r10
    a4ea:	10 82       	st	Z, r1
									//_sSchedules.Already_Fertilze_Status[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
									_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;	
    a4ec:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a4f0:	90 e0       	ldi	r25, 0x00	; 0
    a4f2:	01 97       	sbiw	r24, 0x01	; 1
    a4f4:	fc 01       	movw	r30, r24
    a4f6:	ee 0f       	add	r30, r30
    a4f8:	ff 1f       	adc	r31, r31
    a4fa:	e8 0f       	add	r30, r24
    a4fc:	f9 1f       	adc	r31, r25
    a4fe:	ec 0f       	add	r30, r28
    a500:	fd 1f       	adc	r31, r29
    a502:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a506:	90 e0       	ldi	r25, 0x00	; 0
    a508:	ee 0f       	add	r30, r30
    a50a:	ff 1f       	adc	r31, r31
    a50c:	eb 53       	subi	r30, 0x3B	; 59
    a50e:	f5 4f       	sbci	r31, 0xF5	; 245
    a510:	91 83       	std	Z+1, r25	; 0x01
    a512:	80 83       	st	Z, r24
									Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kOFF);
    a514:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a518:	90 e0       	ldi	r25, 0x00	; 0
    a51a:	01 97       	sbiw	r24, 0x01	; 1
    a51c:	98 2f       	mov	r25, r24
    a51e:	99 0f       	add	r25, r25
    a520:	89 0f       	add	r24, r25
    a522:	60 e0       	ldi	r22, 0x00	; 0
    a524:	8e 0d       	add	r24, r14
    a526:	f6 d9       	rcall	.-3092   	; 0x9914 <_Z22Fertilizer_Tank_On_Offhh>
    a528:	ac cf       	rjmp	.-168    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									
								}
							}
							else
							{
								if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a52a:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    a52e:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    a532:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a536:	90 e0       	ldi	r25, 0x00	; 0
    a538:	01 97       	sbiw	r24, 0x01	; 1
    a53a:	fc 01       	movw	r30, r24
    a53c:	ee 0f       	add	r30, r30
    a53e:	ff 1f       	adc	r31, r31
    a540:	e8 0f       	add	r30, r24
    a542:	f9 1f       	adc	r31, r25
    a544:	ec 0f       	add	r30, r28
    a546:	fd 1f       	adc	r31, r29
    a548:	ee 0f       	add	r30, r30
    a54a:	ff 1f       	adc	r31, r31
    a54c:	ed 53       	subi	r30, 0x3D	; 61
    a54e:	f6 4f       	sbci	r31, 0xF6	; 246
    a550:	80 81       	ld	r24, Z
    a552:	91 81       	ldd	r25, Z+1	; 0x01
    a554:	82 17       	cp	r24, r18
    a556:	93 07       	cpc	r25, r19
    a558:	08 f0       	brcs	.+2      	; 0xa55c <_Z26Fertilizer_Tank_Monitoringv+0x252>
    a55a:	93 cf       	rjmp	.-218    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a55c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a560:	90 e0       	ldi	r25, 0x00	; 0
    a562:	01 97       	sbiw	r24, 0x01	; 1
    a564:	fc 01       	movw	r30, r24
    a566:	ee 0f       	add	r30, r30
    a568:	ff 1f       	adc	r31, r31
    a56a:	e8 0f       	add	r30, r24
    a56c:	f9 1f       	adc	r31, r25
    a56e:	ec 0f       	add	r30, r28
    a570:	fd 1f       	adc	r31, r29
    a572:	ee 0f       	add	r30, r30
    a574:	ff 1f       	adc	r31, r31
    a576:	eb 53       	subi	r30, 0x3B	; 59
    a578:	f5 4f       	sbci	r31, 0xF5	; 245
    a57a:	20 81       	ld	r18, Z
    a57c:	31 81       	ldd	r19, Z+1	; 0x01
    a57e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a582:	90 e0       	ldi	r25, 0x00	; 0
    a584:	28 17       	cp	r18, r24
    a586:	39 07       	cpc	r19, r25
    a588:	09 f4       	brne	.+2      	; 0xa58c <_Z26Fertilizer_Tank_Monitoringv+0x282>
    a58a:	7b cf       	rjmp	.-266    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									{
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
    a58c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a590:	90 e0       	ldi	r25, 0x00	; 0
    a592:	01 97       	sbiw	r24, 0x01	; 1
    a594:	98 2f       	mov	r25, r24
    a596:	99 0f       	add	r25, r25
    a598:	89 0f       	add	r24, r25
    a59a:	61 e0       	ldi	r22, 0x01	; 1
    a59c:	8e 0d       	add	r24, r14
    a59e:	ba d9       	rcall	.-3212   	; 0x9914 <_Z22Fertilizer_Tank_On_Offhh>
    a5a0:	88 23       	and	r24, r24
    a5a2:	79 f0       	breq	.+30     	; 0xa5c2 <_Z26Fertilizer_Tank_Monitoringv+0x2b8>
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
    a5a4:	10 92 9e 0c 	sts	0x0C9E, r1	; 0x800c9e <_gWait_Blower_Time+0x1>
    a5a8:	10 92 9d 0c 	sts	0x0C9D, r1	; 0x800c9d <_gWait_Blower_Time>
											if(Doser_Pump_On_Off(_kON))
    a5ac:	81 e0       	ldi	r24, 0x01	; 1
    a5ae:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a5b2:	f8 01       	movw	r30, r16
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
											if(Doser_Pump_On_Off(_kON))
    a5b4:	88 23       	and	r24, r24
    a5b6:	31 f0       	breq	.+12     	; 0xa5c4 <_Z26Fertilizer_Tank_Monitoringv+0x2ba>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a5b8:	ee 5f       	subi	r30, 0xFE	; 254
    a5ba:	fd 4f       	sbci	r31, 0xFD	; 253
    a5bc:	81 e0       	ldi	r24, 0x01	; 1
    a5be:	80 83       	st	Z, r24
    a5c0:	60 cf       	rjmp	.-320    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a5c2:	f8 01       	movw	r30, r16
    a5c4:	e3 50       	subi	r30, 0x03	; 3
    a5c6:	fe 4f       	sbci	r31, 0xFE	; 254
    a5c8:	d0 82       	st	Z, r13
    a5ca:	5b cf       	rjmp	.-330    	; 0xa482 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					}
				}
			}
		}
	}
}
    a5cc:	df 91       	pop	r29
    a5ce:	cf 91       	pop	r28
    a5d0:	1f 91       	pop	r17
    a5d2:	0f 91       	pop	r16
    a5d4:	ff 90       	pop	r15
    a5d6:	ef 90       	pop	r14
    a5d8:	df 90       	pop	r13
    a5da:	bf 90       	pop	r11
    a5dc:	af 90       	pop	r10
    a5de:	08 95       	ret

0000a5e0 <_Z20Schedules_Monitoringv>:
	
}	
	
	
void Schedules_Monitoring(void)
{
    a5e0:	0f 93       	push	r16
    a5e2:	1f 93       	push	r17
    a5e4:	cf 93       	push	r28
    a5e6:	df 93       	push	r29
	unsigned char check_new_true_condition;
	unsigned char Check_for_no_repeat;
	static unsigned char irrigation_Start_Set = _kRESET,flush_running_status=_kRESET;
	static unsigned char mode_change = 0;
	
	_sSchedules.Schedule_Pause_Resume = _kRESET;
    a5e8:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
	_sSchedules.Based_On_Trigger_Time = _sSchedules.Based_On_Trigger_Time;
    a5ec:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a5f0:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
	
	switch(_sSchedules.Based_On_Trigger_Time)
    a5f4:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a5f8:	82 30       	cpi	r24, 0x02	; 2
    a5fa:	98 f4       	brcc	.+38     	; 0xa622 <_Z20Schedules_Monitoringv+0x42>
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a5fc:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a600:	81 30       	cpi	r24, 0x01	; 1
    a602:	09 f0       	breq	.+2      	; 0xa606 <_Z20Schedules_Monitoringv+0x26>
    a604:	aa c0       	rjmp	.+340    	; 0xa75a <_Z20Schedules_Monitoringv+0x17a>
	switch(_sSchedules.Based_On_Trigger_Time)
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a606:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <_sSchedules+0x1>
    a60a:	91 11       	cpse	r25, r1
    a60c:	a6 c0       	rjmp	.+332    	; 0xa75a <_Z20Schedules_Monitoringv+0x17a>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a60e:	90 91 87 0b 	lds	r25, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    a612:	91 30       	cpi	r25, 0x01	; 1
    a614:	09 f4       	brne	.+2      	; 0xa618 <_Z20Schedules_Monitoringv+0x38>
    a616:	a1 c0       	rjmp	.+322    	; 0xa75a <_Z20Schedules_Monitoringv+0x17a>
    a618:	90 91 78 13 	lds	r25, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
    a61c:	96 34       	cpi	r25, 0x46	; 70
    a61e:	29 f4       	brne	.+10     	; 0xa62a <_Z20Schedules_Monitoringv+0x4a>
    a620:	9c c0       	rjmp	.+312    	; 0xa75a <_Z20Schedules_Monitoringv+0x17a>
			}
		}break;
		
		default:
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
    a622:	81 e0       	ldi	r24, 0x01	; 1
    a624:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
		}break;
	}
	
}					
    a628:	81 c7       	rjmp	.+3842   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
			_sRuble_Parameters.Update_Local_Date[2] != 70)
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    a62a:	90 91 6e 13 	lds	r25, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    a62e:	95 30       	cpi	r25, 0x05	; 5
    a630:	09 f0       	breq	.+2      	; 0xa634 <_Z20Schedules_Monitoringv+0x54>
    a632:	42 c0       	rjmp	.+132    	; 0xa6b8 <_Z20Schedules_Monitoringv+0xd8>
				{
					mode_change = _kSET;
    a634:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
					if(flush_running_status == _kSET)
    a638:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
    a63c:	81 30       	cpi	r24, 0x01	; 1
    a63e:	61 f4       	brne	.+24     	; 0xa658 <_Z20Schedules_Monitoringv+0x78>
					{
						if(_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    a640:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
    a644:	81 30       	cpi	r24, 0x01	; 1
    a646:	41 f0       	breq	.+16     	; 0xa658 <_Z20Schedules_Monitoringv+0x78>
						&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET)
    a648:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
    a64c:	81 11       	cpse	r24, r1
    a64e:	04 c0       	rjmp	.+8      	; 0xa658 <_Z20Schedules_Monitoringv+0x78>
						{
							flush_running_status = _kRESET;
    a650:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a654:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						{
							
						}
					}
					
					if(irrigation_Start_Set == _kSET)
    a658:	80 91 1b 09 	lds	r24, 0x091B	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
    a65c:	81 30       	cpi	r24, 0x01	; 1
    a65e:	79 f4       	brne	.+30     	; 0xa67e <_Z20Schedules_Monitoringv+0x9e>
					{
						irrigation_Start_Set = _kRESET;
    a660:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a664:	80 91 05 14 	lds	r24, 0x1405	; 0x801405 <_sRuble_Parameters+0xbe>
    a668:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    a66c:	89 17       	cp	r24, r25
    a66e:	39 f0       	breq	.+14     	; 0xa67e <_Z20Schedules_Monitoringv+0x9e>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    a670:	88 23       	and	r24, r24
    a672:	29 f0       	breq	.+10     	; 0xa67e <_Z20Schedules_Monitoringv+0x9e>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    a674:	60 e0       	ldi	r22, 0x00	; 0
    a676:	0e 94 26 27 	call	0x4e4c	; 0x4e4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    a67a:	10 92 05 14 	sts	0x1405, r1	; 0x801405 <_sRuble_Parameters+0xbe>
							}
						}
					}
					
					//_kSERAIL_MON_WRITE("sc enter 0.1");   //1/05
					if(_sSchedules.Scheduler_Retry_Timer == _kRESET)   /* if there is no wait timer to start the schedule again */
    a67e:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a682:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a686:	89 2b       	or	r24, r25
    a688:	41 f4       	brne	.+16     	; 0xa69a <_Z20Schedules_Monitoringv+0xba>
					{
						//_kSERAIL_MON_WRITE("sc enter 0.2");     //1/05
						flush_running_status = _kRESET;
    a68a:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <_ZZ20Schedules_MonitoringvE20flush_running_status>
						if(_sSchedules.Shedule_Run_Status_Is_Triggered == _kSET && flush_running_status == _kRESET)
    a68e:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <_sSchedules+0x6>
    a692:	81 30       	cpi	r24, 0x01	; 1
    a694:	09 f0       	breq	.+2      	; 0xa698 <_Z20Schedules_Monitoringv+0xb8>
    a696:	8c c1       	rjmp	.+792    	; 0xa9b0 <_Z20Schedules_Monitoringv+0x3d0>
    a698:	02 c1       	rjmp	.+516    	; 0xa89e <_Z20Schedules_Monitoringv+0x2be>
							/*********************************************************************************/
						}
					}
					else
					{
						if(_sSchedules.Scheduler_Retry_Timer < 10)
    a69a:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a69e:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a6a2:	0a 97       	sbiw	r24, 0x0a	; 10
    a6a4:	08 f0       	brcs	.+2      	; 0xa6a8 <_Z20Schedules_Monitoringv+0xc8>
    a6a6:	42 c7       	rjmp	.+3716   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
						{	
							if(_sPump_Parameter.Irrigation_Status)
    a6a8:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    a6ac:	88 23       	and	r24, r24
    a6ae:	09 f4       	brne	.+2      	; 0xa6b2 <_Z20Schedules_Monitoringv+0xd2>
    a6b0:	3d c7       	rjmp	.+3706   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
							{
								_sPump_Parameter.Irrigation_Status = _kRESET;
    a6b2:	10 92 45 13 	sts	0x1345, r1	; 0x801345 <_sPump_Parameter+0x8>
    a6b6:	3a c7       	rjmp	.+3700   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
					}
				}
				else
				{
					/* what should happen if scheduler operation mode is not selected */
					if(mode_change)
    a6b8:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
    a6bc:	88 23       	and	r24, r24
    a6be:	09 f4       	brne	.+2      	; 0xa6c2 <_Z20Schedules_Monitoringv+0xe2>
    a6c0:	35 c7       	rjmp	.+3690   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
					{
						mode_change = _kRESET;
    a6c2:	10 92 1d 09 	sts	0x091D, r1	; 0x80091d <_ZZ20Schedules_MonitoringvE11mode_change>
						if(_sPump_Parameter.Irrigation_Status)
    a6c6:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    a6ca:	81 11       	cpse	r24, r1
						{
							_sPump_Parameter.Irrigation_Status = _kRESET;
    a6cc:	10 92 45 13 	sts	0x1345, r1	; 0x801345 <_sPump_Parameter+0x8>
						}
						if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    a6d0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a6d4:	88 23       	and	r24, r24
    a6d6:	89 f1       	breq	.+98     	; 0xa73a <_Z20Schedules_Monitoringv+0x15a>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    a6d8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a6dc:	81 30       	cpi	r24, 0x01	; 1
    a6de:	51 f4       	brne	.+20     	; 0xa6f4 <_Z20Schedules_Monitoringv+0x114>
							{
								_kSERAIL_MON_WRITE("sc enter 58");
    a6e0:	62 e6       	ldi	r22, 0x62	; 98
    a6e2:	73 e1       	ldi	r23, 0x13	; 19
    a6e4:	82 e5       	ldi	r24, 0x52	; 82
    a6e6:	94 e1       	ldi	r25, 0x14	; 20
    a6e8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    a6ec:	82 e5       	ldi	r24, 0x52	; 82
    a6ee:	94 e1       	ldi	r25, 0x14	; 20
    a6f0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a6f4:	83 e0       	ldi	r24, 0x03	; 3
    a6f6:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
							Turn_Off_All_Tank_For_Safety();
    a6fa:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <_Z28Turn_Off_All_Tank_For_Safetyv>
							Blower_Monitoring(_kFORCEFULYY_OFF);    // 11-4
    a6fe:	83 e0       	ldi	r24, 0x03	; 3
    a700:	0e 94 2f 3d 	call	0x7a5e	; 0x7a5e <_Z17Blower_Monitoringh>
							Turn_Off_Blower_For_Safety();
						
							//_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a704:	0e 94 29 be 	call	0x17c52	; 0x17c52 <_Z15Stop_Irrigationv>
    a708:	81 11       	cpse	r24, r1
    a70a:	11 c0       	rjmp	.+34     	; 0xa72e <_Z20Schedules_Monitoringv+0x14e>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    a70c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a710:	81 30       	cpi	r24, 0x01	; 1
    a712:	51 f4       	brne	.+20     	; 0xa728 <_Z20Schedules_Monitoringv+0x148>
								{
									_kSERAIL_MON_WRITE("sc enter 59");
    a714:	66 e5       	ldi	r22, 0x56	; 86
    a716:	73 e1       	ldi	r23, 0x13	; 19
    a718:	82 e5       	ldi	r24, 0x52	; 82
    a71a:	94 e1       	ldi	r25, 0x14	; 20
    a71c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    a720:	82 e5       	ldi	r24, 0x52	; 82
    a722:	94 e1       	ldi	r25, 0x14	; 20
    a724:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								
								_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    a728:	84 e0       	ldi	r24, 0x04	; 4
    a72a:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
							}				
							_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a72e:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
							_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a732:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);	
    a736:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						}
						
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a73a:	80 91 05 14 	lds	r24, 0x1405	; 0x801405 <_sRuble_Parameters+0xbe>
    a73e:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    a742:	89 17       	cp	r24, r25
    a744:	09 f4       	brne	.+2      	; 0xa748 <_Z20Schedules_Monitoringv+0x168>
    a746:	f2 c6       	rjmp	.+3556   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    a748:	88 23       	and	r24, r24
    a74a:	09 f4       	brne	.+2      	; 0xa74e <_Z20Schedules_Monitoringv+0x16e>
    a74c:	ef c6       	rjmp	.+3550   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    a74e:	60 e0       	ldi	r22, 0x00	; 0
    a750:	0e 94 26 27 	call	0x4e4c	; 0x4e4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    a754:	10 92 05 14 	sts	0x1405, r1	; 0x801405 <_sRuble_Parameters+0xbe>
    a758:	e9 c6       	rjmp	.+3538   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a75a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a75e:	88 23       	and	r24, r24
    a760:	21 f0       	breq	.+8      	; 0xa76a <_Z20Schedules_Monitoringv+0x18a>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a762:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    a766:	81 11       	cpse	r24, r1
    a768:	07 c0       	rjmp	.+14     	; 0xa778 <_Z20Schedules_Monitoringv+0x198>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a76a:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    a76e:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    a772:	89 2b       	or	r24, r25
    a774:	09 f4       	brne	.+2      	; 0xa778 <_Z20Schedules_Monitoringv+0x198>
    a776:	67 c0       	rjmp	.+206    	; 0xa846 <_Z20Schedules_Monitoringv+0x266>
				{
					if(_sPump_Parameter.Irrigation_Status)
    a778:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    a77c:	81 11       	cpse	r24, r1
					{
						_sPump_Parameter.Irrigation_Status = _kRESET;
    a77e:	10 92 45 13 	sts	0x1345, r1	; 0x801345 <_sPump_Parameter+0x8>
					}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a782:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a786:	81 30       	cpi	r24, 0x01	; 1
    a788:	51 f4       	brne	.+20     	; 0xa79e <_Z20Schedules_Monitoringv+0x1be>
					{
						_kSERAIL_MON_WRITE("sc enter 60");
    a78a:	6a e4       	ldi	r22, 0x4A	; 74
    a78c:	73 e1       	ldi	r23, 0x13	; 19
    a78e:	82 e5       	ldi	r24, 0x52	; 82
    a790:	94 e1       	ldi	r25, 0x14	; 20
    a792:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a796:	82 e5       	ldi	r24, 0x52	; 82
    a798:	94 e1       	ldi	r25, 0x14	; 20
    a79a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
    a79e:	80 91 87 0b 	lds	r24, 0x0B87	; 0x800b87 <_sSchedules+0x269>
    a7a2:	81 11       	cpse	r24, r1
    a7a4:	81 c6       	rjmp	.+3330   	; 0xb4a8 <_Z20Schedules_Monitoringv+0xec8>
    a7a6:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    a7aa:	81 30       	cpi	r24, 0x01	; 1
    a7ac:	09 f4       	brne	.+2      	; 0xa7b0 <_Z20Schedules_Monitoringv+0x1d0>
    a7ae:	7c c6       	rjmp	.+3320   	; 0xb4a8 <_Z20Schedules_Monitoringv+0xec8>
    a7b0:	80 91 78 13 	lds	r24, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
    a7b4:	86 34       	cpi	r24, 0x46	; 70
    a7b6:	09 f4       	brne	.+2      	; 0xa7ba <_Z20Schedules_Monitoringv+0x1da>
    a7b8:	77 c6       	rjmp	.+3310   	; 0xb4a8 <_Z20Schedules_Monitoringv+0xec8>
					}
					
					
					
					/* what should happen when scheduler mode id not enabled */
					_sSchedules.New_Schedules_Occur = _kRESET;
    a7ba:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    a7be:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    a7c2:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a7c6:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    a7ca:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a7ce:	81 11       	cpse	r24, r1
    a7d0:	4b c6       	rjmp	.+3222   	; 0xb468 <_Z20Schedules_Monitoringv+0xe88>
						Turn_Off_Blower_For_Safety();
					}
					
					//_sSchedules.Which_Sheduler_Is_Running = _kRESET;  // 17/02/2023
					
					if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a7d2:	0e 94 29 be 	call	0x17c52	; 0x17c52 <_Z15Stop_Irrigationv>
    a7d6:	81 11       	cpse	r24, r1
    a7d8:	03 c0       	rjmp	.+6      	; 0xa7e0 <_Z20Schedules_Monitoringv+0x200>
					{
						_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    a7da:	84 e0       	ldi	r24, 0x04	; 4
    a7dc:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
					}
					
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a7e0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a7e4:	81 30       	cpi	r24, 0x01	; 1
    a7e6:	e1 f4       	brne	.+56     	; 0xa820 <_Z20Schedules_Monitoringv+0x240>
					{
						_kSERAIL_MON_WRITE("Scheduler gets off 11 : ");
    a7e8:	69 e1       	ldi	r22, 0x19	; 25
    a7ea:	73 e1       	ldi	r23, 0x13	; 19
    a7ec:	82 e5       	ldi	r24, 0x52	; 82
    a7ee:	94 e1       	ldi	r25, 0x14	; 20
    a7f0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a7f4:	82 e5       	ldi	r24, 0x52	; 82
    a7f6:	94 e1       	ldi	r25, 0x14	; 20
    a7f8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running);
    a7fc:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    a800:	4a e0       	ldi	r20, 0x0A	; 10
    a802:	50 e0       	ldi	r21, 0x00	; 0
    a804:	82 e5       	ldi	r24, 0x52	; 82
    a806:	94 e1       	ldi	r25, 0x14	; 20
    a808:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						
						_kSERAIL_MON_WRITE("sc enter 59.1");
    a80c:	6b e0       	ldi	r22, 0x0B	; 11
    a80e:	73 e1       	ldi	r23, 0x13	; 19
    a810:	82 e5       	ldi	r24, 0x52	; 82
    a812:	94 e1       	ldi	r25, 0x14	; 20
    a814:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a818:	82 e5       	ldi	r24, 0x52	; 82
    a81a:	94 e1       	ldi	r25, 0x14	; 20
    a81c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    a820:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a824:	81 e0       	ldi	r24, 0x01	; 1
    a826:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a82a:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    a82e:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    a832:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a836:	80 91 05 14 	lds	r24, 0x1405	; 0x801405 <_sRuble_Parameters+0xbe>
    a83a:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    a83e:	89 13       	cpse	r24, r25
    a840:	2a c6       	rjmp	.+3156   	; 0xb496 <_Z20Schedules_Monitoringv+0xeb6>
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
						}
					}
					
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a842:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
					
				}
				
				if(_sSchedules.New_Schedules_Occur != _kRESET)
    a846:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    a84a:	88 23       	and	r24, r24
    a84c:	b9 f0       	breq	.+46     	; 0xa87c <_Z20Schedules_Monitoringv+0x29c>
				{
					_sSchedules.New_Schedules_Occur = _kRESET;
    a84e:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    a852:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a856:	81 e0       	ldi	r24, 0x01	; 1
    a858:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a85c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    a860:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    a864:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
					_sSchedules.New_Schedules_Occur = _kRESET;
    a868:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    a86c:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    a870:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a874:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
				
					Edited_In_Schedule();
    a878:	0e 94 5f 3f 	call	0x7ebe	; 0x7ebe <_Z18Edited_In_Schedulev>
				}
				
				if(_sRuble_Parameters.Irrigating_Plot && _sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    a87c:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    a880:	88 23       	and	r24, r24
    a882:	09 f4       	brne	.+2      	; 0xa886 <_Z20Schedules_Monitoringv+0x2a6>
    a884:	53 c6       	rjmp	.+3238   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    a886:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    a88a:	85 30       	cpi	r24, 0x05	; 5
    a88c:	09 f0       	breq	.+2      	; 0xa890 <_Z20Schedules_Monitoringv+0x2b0>
    a88e:	4e c6       	rjmp	.+3228   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
				{
					Stop_Irrigation();
    a890:	0e 94 29 be 	call	0x17c52	; 0x17c52 <_Z15Stop_Irrigationv>
					_sRuble_Parameters.Pump_Run_Timer = _kRESET;
    a894:	10 92 5e 13 	sts	0x135E, r1	; 0x80135e <_sRuble_Parameters+0x17>
    a898:	10 92 5d 13 	sts	0x135D, r1	; 0x80135d <_sRuble_Parameters+0x16>
    a89c:	47 c6       	rjmp	.+3214   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    a89e:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8a2:	f0 e0       	ldi	r31, 0x00	; 0
    a8a4:	e9 57       	subi	r30, 0x79	; 121
    a8a6:	f6 4f       	sbci	r31, 0xF6	; 246
    a8a8:	40 81       	ld	r20, Z
													
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
    a8aa:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8ae:	f0 e0       	ldi	r31, 0x00	; 0
    a8b0:	e8 58       	subi	r30, 0x88	; 136
    a8b2:	f6 4f       	sbci	r31, 0xF6	; 246
    a8b4:	60 81       	ld	r22, Z
    a8b6:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <_sSchedules+0x1c>
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    a8ba:	0e 94 d7 37 	call	0x6fae	; 0x6fae <_Z22Day_In_Bet_Schedullinghhh>
								
								if(check_new_true_condition == 2)
								{
									check_new_true_condition = _kSET;
								}
								else if(check_new_true_condition == 1)
    a8be:	81 50       	subi	r24, 0x01	; 1
    a8c0:	82 30       	cpi	r24, 0x02	; 2
    a8c2:	08 f4       	brcc	.+2      	; 0xa8c6 <_Z20Schedules_Monitoringv+0x2e6>
    a8c4:	8d c1       	rjmp	.+794    	; 0xabe0 <_Z20Schedules_Monitoringv+0x600>
									}
								}
							}
							else
							{
								if(_sSchedules.Which_Sheduler_Is_Running > _kNUMBER_OF_SCHEDULES+1) /* when reach to the last scheduler */
    a8c6:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a8ca:	80 31       	cpi	r24, 0x10	; 16
    a8cc:	90 f1       	brcs	.+100    	; 0xa932 <_Z20Schedules_Monitoringv+0x352>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    a8ce:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a8d2:	81 30       	cpi	r24, 0x01	; 1
    a8d4:	31 f4       	brne	.+12     	; 0xa8e2 <_Z20Schedules_Monitoringv+0x302>
									{
										_kSERAIL_MON_WRITE("sc enter 10");
    a8d6:	63 ec       	ldi	r22, 0xC3	; 195
    a8d8:	74 e1       	ldi	r23, 0x14	; 20
    a8da:	82 e5       	ldi	r24, 0x52	; 82
    a8dc:	94 e1       	ldi	r25, 0x14	; 20
    a8de:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									}
									_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    a8e2:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
									_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a8e6:	81 e0       	ldi	r24, 0x01	; 1
    a8e8:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
									_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a8ec:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
									
									if(_sSchedules.Schedule_Are_Started == _kSET)
    a8f0:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    a8f4:	81 30       	cpi	r24, 0x01	; 1
    a8f6:	61 f4       	brne	.+24     	; 0xa910 <_Z20Schedules_Monitoringv+0x330>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    a8f8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a8fc:	81 30       	cpi	r24, 0x01	; 1
    a8fe:	31 f4       	brne	.+12     	; 0xa90c <_Z20Schedules_Monitoringv+0x32c>
										{
											_kSERAIL_MON_WRITE("sc enter 11");
    a900:	67 eb       	ldi	r22, 0xB7	; 183
    a902:	74 e1       	ldi	r23, 0x14	; 20
    a904:	82 e5       	ldi	r24, 0x52	; 82
    a906:	94 e1       	ldi	r25, 0x14	; 20
    a908:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										}
										_sSchedules.Schedule_Are_Started = _kRESET;
    a90c:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										/* save in eeprom */
									}
									
									_sSchedules.all_schedule_done_flag = _eSET;								
    a910:	82 e0       	ldi	r24, 0x02	; 2
    a912:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
									_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    a916:	80 91 90 0b 	lds	r24, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    a91a:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
									_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    a91e:	80 91 91 0b 	lds	r24, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    a922:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    a926:	df 91       	pop	r29
    a928:	cf 91       	pop	r28
    a92a:	1f 91       	pop	r17
    a92c:	0f 91       	pop	r16
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
										}
																					
										Set_Trigger_Time();								
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a92e:	0c 94 9d 31 	jmp	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									/* save in eeprom */
								}
								else
								{
									_sSchedules.Which_Sheduler_Is_Running++;  /* when time of current schedule over then next scheduler should be select */
    a932:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a936:	8f 5f       	subi	r24, 0xFF	; 255
    a938:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_sSchedules+0x3>
									if(_sSchedules.Which_Sheduler_Is_Running == 1)
    a93c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    a940:	81 30       	cpi	r24, 0x01	; 1
    a942:	09 f0       	breq	.+2      	; 0xa946 <_Z20Schedules_Monitoringv+0x366>
    a944:	f3 c5       	rjmp	.+3046   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
									{
										_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    a946:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    a94a:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
										_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    a94e:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    a952:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    a956:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a95a:	81 30       	cpi	r24, 0x01	; 1
    a95c:	91 f4       	brne	.+36     	; 0xa982 <_Z20Schedules_Monitoringv+0x3a2>
										{
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
    a95e:	65 e8       	ldi	r22, 0x85	; 133
    a960:	74 e1       	ldi	r23, 0x14	; 20
    a962:	82 e5       	ldi	r24, 0x52	; 82
    a964:	94 e1       	ldi	r25, 0x14	; 20
    a966:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
    a96a:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    a96e:	4a e0       	ldi	r20, 0x0A	; 10
    a970:	50 e0       	ldi	r21, 0x00	; 0
    a972:	82 e5       	ldi	r24, 0x52	; 82
    a974:	94 e1       	ldi	r25, 0x14	; 20
    a976:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
											_kSERIAL_MON_CLEAR();
    a97a:	82 e5       	ldi	r24, 0x52	; 82
    a97c:	94 e1       	ldi	r25, 0x14	; 20
    a97e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										Return_Calculated_Previous_Day_Date(1);										
    a982:	81 e0       	ldi	r24, 0x01	; 1
    a984:	0e 94 58 32 	call	0x64b0	; 0x64b0 <_Z35Return_Calculated_Previous_Day_Dateh>
    a988:	81 e0       	ldi	r24, 0x01	; 1
    a98a:	90 e0       	ldi	r25, 0x00	; 0
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
										{
											_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    a98c:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    a990:	9c 01       	movw	r18, r24
    a992:	22 5e       	subi	r18, 0xE2	; 226
    a994:	36 4f       	sbci	r19, 0xF6	; 246
    a996:	f9 01       	movw	r30, r18
    a998:	e5 5a       	subi	r30, 0xA5	; 165
    a99a:	ff 4f       	sbci	r31, 0xFF	; 255
    a99c:	40 83       	st	Z, r20
											_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    a99e:	40 91 8f 0b 	lds	r20, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    a9a2:	3f 96       	adiw	r30, 0x0f	; 15
    a9a4:	40 83       	st	Z, r20
    a9a6:	01 96       	adiw	r24, 0x01	; 1
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
											_kSERIAL_MON_CLEAR();
										}
										Return_Calculated_Previous_Day_Date(1);										
										for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    a9a8:	8e 30       	cpi	r24, 0x0E	; 14
    a9aa:	91 05       	cpc	r25, r1
    a9ac:	79 f7       	brne	.-34     	; 0xa98c <_Z20Schedules_Monitoringv+0x3ac>
    a9ae:	be c5       	rjmp	.+2940   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
// 							{
// 								return;
// 							}
							/* write logic to trigger the schedule */
							/* calculate trigger reset of time *there will be lag of 2 min* */
							if(_sSchedules.Based_On_Trigger_Time == _kSET)
    a9b0:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
    a9b4:	81 30       	cpi	r24, 0x01	; 1
    a9b6:	b1 f5       	brne	.+108    	; 0xaa24 <_Z20Schedules_Monitoringv+0x444>
							{
								if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    a9b8:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    a9bc:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    a9c0:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    a9c4:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    a9c8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    a9cc:	4c 32       	cpi	r20, 0x2C	; 44
    a9ce:	51 40       	sbci	r21, 0x01	; 1
    a9d0:	61 05       	cpc	r22, r1
    a9d2:	71 05       	cpc	r23, r1
    a9d4:	d0 f4       	brcc	.+52     	; 0xaa0a <_Z20Schedules_Monitoringv+0x42a>
								{
									_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    a9d6:	47 e1       	ldi	r20, 0x17	; 23
    a9d8:	50 e5       	ldi	r21, 0x50	; 80
    a9da:	61 e0       	ldi	r22, 0x01	; 1
    a9dc:	70 e0       	ldi	r23, 0x00	; 0
    a9de:	40 93 35 09 	sts	0x0935, r20	; 0x800935 <_sSchedules+0x17>
    a9e2:	50 93 36 09 	sts	0x0936, r21	; 0x800936 <_sSchedules+0x18>
    a9e6:	60 93 37 09 	sts	0x0937, r22	; 0x800937 <_sSchedules+0x19>
    a9ea:	70 93 38 09 	sts	0x0938, r23	; 0x800938 <_sSchedules+0x1a>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9ee:	81 30       	cpi	r24, 0x01	; 1
    a9f0:	09 f0       	breq	.+2      	; 0xa9f4 <_Z20Schedules_Monitoringv+0x414>
    a9f2:	47 c0       	rjmp	.+142    	; 0xaa82 <_Z20Schedules_Monitoringv+0x4a2>
									{
										_kSERAIL_MON_WRITE("sc enter 11.1");
    a9f4:	67 e7       	ldi	r22, 0x77	; 119
    a9f6:	74 e1       	ldi	r23, 0x14	; 20
    a9f8:	82 e5       	ldi	r24, 0x52	; 82
    a9fa:	94 e1       	ldi	r25, 0x14	; 20
    a9fc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    aa00:	82 e5       	ldi	r24, 0x52	; 82
    aa02:	94 e1       	ldi	r25, 0x14	; 20
    aa04:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    aa08:	3c c0       	rjmp	.+120    	; 0xaa82 <_Z20Schedules_Monitoringv+0x4a2>
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    aa0a:	81 30       	cpi	r24, 0x01	; 1
    aa0c:	31 f5       	brne	.+76     	; 0xaa5a <_Z20Schedules_Monitoringv+0x47a>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2");
    aa0e:	69 e6       	ldi	r22, 0x69	; 105
    aa10:	74 e1       	ldi	r23, 0x14	; 20
    aa12:	82 e5       	ldi	r24, 0x52	; 82
    aa14:	94 e1       	ldi	r25, 0x14	; 20
    aa16:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    aa1a:	82 e5       	ldi	r24, 0x52	; 82
    aa1c:	94 e1       	ldi	r25, 0x14	; 20
    aa1e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    aa22:	1b c0       	rjmp	.+54     	; 0xaa5a <_Z20Schedules_Monitoringv+0x47a>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    aa24:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    aa28:	81 11       	cpse	r24, r1
    aa2a:	57 c3       	rjmp	.+1710   	; 0xb0da <_Z20Schedules_Monitoringv+0xafa>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    aa2c:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    aa30:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    aa34:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    aa38:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    aa3c:	89 2b       	or	r24, r25
    aa3e:	8a 2b       	or	r24, r26
    aa40:	8b 2b       	or	r24, r27
    aa42:	09 f0       	breq	.+2      	; 0xaa46 <_Z20Schedules_Monitoringv+0x466>
    aa44:	4a c3       	rjmp	.+1684   	; 0xb0da <_Z20Schedules_Monitoringv+0xafa>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    aa46:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    aa4a:	81 11       	cpse	r24, r1
    aa4c:	46 c3       	rjmp	.+1676   	; 0xb0da <_Z20Schedules_Monitoringv+0xafa>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    aa4e:	80 91 f5 13 	lds	r24, 0x13F5	; 0x8013f5 <_sRuble_Parameters+0xae>
    aa52:	81 30       	cpi	r24, 0x01	; 1
    aa54:	09 f0       	breq	.+2      	; 0xaa58 <_Z20Schedules_Monitoringv+0x478>
    aa56:	41 c3       	rjmp	.+1666   	; 0xb0da <_Z20Schedules_Monitoringv+0xafa>
    aa58:	29 c3       	rjmp	.+1618   	; 0xb0ac <_Z20Schedules_Monitoringv+0xacc>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
										}
										else
										{
											_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    aa5a:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    aa5e:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    aa62:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    aa66:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    aa6a:	8c 52       	subi	r24, 0x2C	; 44
    aa6c:	91 40       	sbci	r25, 0x01	; 1
    aa6e:	a1 09       	sbc	r26, r1
    aa70:	b1 09       	sbc	r27, r1
    aa72:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <_sSchedules+0x17>
    aa76:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <_sSchedules+0x18>
    aa7a:	a0 93 37 09 	sts	0x0937, r26	; 0x800937 <_sSchedules+0x19>
    aa7e:	b0 93 38 09 	sts	0x0938, r27	; 0x800938 <_sSchedules+0x1a>
										}
									}
								}
							}	
							
							irrigation_Start_Set = _kRESET;
    aa82:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    aa86:	80 91 05 14 	lds	r24, 0x1405	; 0x801405 <_sRuble_Parameters+0xbe>
    aa8a:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    aa8e:	89 17       	cp	r24, r25
    aa90:	59 f0       	breq	.+22     	; 0xaaa8 <_Z20Schedules_Monitoringv+0x4c8>
							{
								if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    aa92:	88 23       	and	r24, r24
    aa94:	49 f0       	breq	.+18     	; 0xaaa8 <_Z20Schedules_Monitoringv+0x4c8>
								{
									Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    aa96:	60 e0       	ldi	r22, 0x00	; 0
    aa98:	0e 94 26 27 	call	0x4e4c	; 0x4e4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
									_kSERIAL_MON_CLEAR();
    aa9c:	82 e5       	ldi	r24, 0x52	; 82
    aa9e:	94 e1       	ldi	r25, 0x14	; 20
    aaa0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    aaa4:	10 92 05 14 	sts	0x1405, r1	; 0x801405 <_sRuble_Parameters+0xbe>
								}
							}	
													
							if(_sRuble_Parameters.Irrigating_Plot != _kRESET)
    aaa8:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    aaac:	88 23       	and	r24, r24
    aaae:	09 f4       	brne	.+2      	; 0xaab2 <_Z20Schedules_Monitoringv+0x4d2>
    aab0:	43 c0       	rjmp	.+134    	; 0xab38 <_Z20Schedules_Monitoringv+0x558>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    aab2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    aab6:	81 30       	cpi	r24, 0x01	; 1
    aab8:	51 f4       	brne	.+20     	; 0xaace <_Z20Schedules_Monitoringv+0x4ee>
								{
									_kSERAIL_MON_WRITE("sc enter 6.0..........................");
    aaba:	62 e3       	ldi	r22, 0x32	; 50
    aabc:	74 e1       	ldi	r23, 0x14	; 20
    aabe:	82 e5       	ldi	r24, 0x52	; 82
    aac0:	94 e1       	ldi	r25, 0x14	; 20
    aac2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    aac6:	82 e5       	ldi	r24, 0x52	; 82
    aac8:	94 e1       	ldi	r25, 0x14	; 20
    aaca:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status          !=_kSCHEDULER_ON
    aace:	80 91 ef 0d 	lds	r24, 0x0DEF	; 0x800def <_sExtra_Plot+0x6e>
    aad2:	84 30       	cpi	r24, 0x04	; 4
    aad4:	89 f1       	breq	.+98     	; 0xab38 <_Z20Schedules_Monitoringv+0x558>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    aad6:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    aada:	81 30       	cpi	r24, 0x01	; 1
    aadc:	69 f1       	breq	.+90     	; 0xab38 <_Z20Schedules_Monitoringv+0x558>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET
    aade:	80 91 ed 0d 	lds	r24, 0x0DED	; 0x800ded <_sExtra_Plot+0x6c>
    aae2:	81 11       	cpse	r24, r1
    aae4:	29 c0       	rjmp	.+82     	; 0xab38 <_Z20Schedules_Monitoringv+0x558>
								/*&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET
								&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET*/)
								{
									if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    aae6:	0e 94 29 be 	call	0x17c52	; 0x17c52 <_Z15Stop_Irrigationv>
    aaea:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    aaee:	81 11       	cpse	r24, r1
    aaf0:	13 c0       	rjmp	.+38     	; 0xab18 <_Z20Schedules_Monitoringv+0x538>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    aaf2:	91 30       	cpi	r25, 0x01	; 1
    aaf4:	51 f4       	brne	.+20     	; 0xab0a <_Z20Schedules_Monitoringv+0x52a>
										{
											_kSERAIL_MON_WRITE("sc enter 6.1..........................");
    aaf6:	6b e0       	ldi	r22, 0x0B	; 11
    aaf8:	74 e1       	ldi	r23, 0x14	; 20
    aafa:	82 e5       	ldi	r24, 0x52	; 82
    aafc:	94 e1       	ldi	r25, 0x14	; 20
    aafe:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ab02:	82 e5       	ldi	r24, 0x52	; 82
    ab04:	94 e1       	ldi	r25, 0x14	; 20
    ab06:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ab0a:	88 e5       	ldi	r24, 0x58	; 88
    ab0c:	92 e0       	ldi	r25, 0x02	; 2
    ab0e:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ab12:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    ab16:	0c c0       	rjmp	.+24     	; 0xab30 <_Z20Schedules_Monitoringv+0x550>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    ab18:	91 30       	cpi	r25, 0x01	; 1
    ab1a:	51 f4       	brne	.+20     	; 0xab30 <_Z20Schedules_Monitoringv+0x550>
										{
											_kSERAIL_MON_WRITE("sc enter 7.1");
    ab1c:	6e ef       	ldi	r22, 0xFE	; 254
    ab1e:	73 e1       	ldi	r23, 0x13	; 19
    ab20:	82 e5       	ldi	r24, 0x52	; 82
    ab22:	94 e1       	ldi	r25, 0x14	; 20
    ab24:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    ab28:	82 e5       	ldi	r24, 0x52	; 82
    ab2a:	94 e1       	ldi	r25, 0x14	; 20
    ab2c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ab30:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ab34:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
								}
							}							
							/* check the current time with trigger reset time */
							/*********************************************************************************/
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
    ab38:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    ab3c:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    ab40:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    ab44:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    ab48:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    ab4c:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    ab50:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    ab54:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    ab58:	48 17       	cp	r20, r24
    ab5a:	59 07       	cpc	r21, r25
    ab5c:	6a 07       	cpc	r22, r26
    ab5e:	7b 07       	cpc	r23, r27
    ab60:	80 f4       	brcc	.+32     	; 0xab82 <_Z20Schedules_Monitoringv+0x5a2>
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
    ab62:	0e 94 d1 47 	call	0x8fa2	; 0x8fa2 <_Z30Compare_Trigger_And_Reset_Timev>
    ab66:	c8 2f       	mov	r28, r24
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    ab68:	81 11       	cpse	r24, r1
    ab6a:	d7 c2       	rjmp	.+1454   	; 0xb11a <_Z20Schedules_Monitoringv+0xb3a>
    ab6c:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    ab70:	81 30       	cpi	r24, 0x01	; 1
    ab72:	09 f0       	breq	.+2      	; 0xab76 <_Z20Schedules_Monitoringv+0x596>
    ab74:	db c4       	rjmp	.+2486   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    ab76:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    ab7a:	81 30       	cpi	r24, 0x01	; 1
    ab7c:	09 f0       	breq	.+2      	; 0xab80 <_Z20Schedules_Monitoringv+0x5a0>
    ab7e:	d6 c4       	rjmp	.+2476   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    ab80:	cc c2       	rjmp	.+1432   	; 0xb11a <_Z20Schedules_Monitoringv+0xb3a>
									}
								}
							}
							else
							{
								if(_sSchedules.Trigger_Time >= _sSchedules.Trigger_Reset)
    ab82:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    ab86:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    ab8a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    ab8e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    ab92:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <_sSchedules+0x17>
    ab96:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <_sSchedules+0x18>
    ab9a:	a0 91 37 09 	lds	r26, 0x0937	; 0x800937 <_sSchedules+0x19>
    ab9e:	b0 91 38 09 	lds	r27, 0x0938	; 0x800938 <_sSchedules+0x1a>
    aba2:	48 17       	cp	r20, r24
    aba4:	59 07       	cpc	r21, r25
    aba6:	6a 07       	cpc	r22, r26
    aba8:	7b 07       	cpc	r23, r27
    abaa:	08 f4       	brcc	.+2      	; 0xabae <_Z20Schedules_Monitoringv+0x5ce>
    abac:	bf c4       	rjmp	.+2430   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
								{
									check_true_condition = Compare_Trigger_And_Reset_Time();
    abae:	0e 94 d1 47 	call	0x8fa2	; 0x8fa2 <_Z30Compare_Trigger_And_Reset_Timev>
    abb2:	c8 2f       	mov	r28, r24
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    abb4:	81 11       	cpse	r24, r1
    abb6:	f6 c2       	rjmp	.+1516   	; 0xb1a4 <_Z20Schedules_Monitoringv+0xbc4>
    abb8:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    abbc:	81 30       	cpi	r24, 0x01	; 1
    abbe:	29 f4       	brne	.+10     	; 0xabca <_Z20Schedules_Monitoringv+0x5ea>
    abc0:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    abc4:	81 30       	cpi	r24, 0x01	; 1
    abc6:	09 f4       	brne	.+2      	; 0xabca <_Z20Schedules_Monitoringv+0x5ea>
    abc8:	ed c2       	rjmp	.+1498   	; 0xb1a4 <_Z20Schedules_Monitoringv+0xbc4>
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
										}
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    abca:	80 91 3c 09 	lds	r24, 0x093C	; 0x80093c <_sSchedules+0x1e>
    abce:	81 30       	cpi	r24, 0x01	; 1
    abd0:	09 f0       	breq	.+2      	; 0xabd4 <_Z20Schedules_Monitoringv+0x5f4>
    abd2:	ac c4       	rjmp	.+2392   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    abd4:	80 91 3b 09 	lds	r24, 0x093B	; 0x80093b <_sSchedules+0x1d>
    abd8:	81 30       	cpi	r24, 0x01	; 1
    abda:	09 f0       	breq	.+2      	; 0xabde <_Z20Schedules_Monitoringv+0x5fe>
    abdc:	a7 c4       	rjmp	.+2382   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    abde:	24 c3       	rjmp	.+1608   	; 0xb228 <_Z20Schedules_Monitoringv+0xc48>
									check_new_true_condition = _kRESET;
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
    abe0:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    abe4:	f0 e0       	ldi	r31, 0x00	; 0
    abe6:	e3 5e       	subi	r30, 0xE3	; 227
    abe8:	f6 4f       	sbci	r31, 0xF6	; 246
    abea:	15 ad       	ldd	r17, Z+61	; 0x3d
    abec:	11 30       	cpi	r17, 0x01	; 1
    abee:	09 f0       	breq	.+2      	; 0xabf2 <_Z20Schedules_Monitoringv+0x612>
    abf0:	6a ce       	rjmp	.-812    	; 0xa8c6 <_Z20Schedules_Monitoringv+0x2e6>
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    abf2:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    abf6:	f0 e0       	ldi	r31, 0x00	; 0
    abf8:	e7 59       	subi	r30, 0x97	; 151
    abfa:	f6 4f       	sbci	r31, 0xF6	; 246
    abfc:	80 81       	ld	r24, Z
    abfe:	90 e0       	ldi	r25, 0x00	; 0
    ac00:	01 97       	sbiw	r24, 0x01	; 1
    ac02:	26 e0       	ldi	r18, 0x06	; 6
    ac04:	28 9f       	mul	r18, r24
    ac06:	f0 01       	movw	r30, r0
    ac08:	29 9f       	mul	r18, r25
    ac0a:	f0 0d       	add	r31, r0
    ac0c:	11 24       	eor	r1, r1
    ac0e:	e3 50       	subi	r30, 0x03	; 3
    ac10:	f3 4f       	sbci	r31, 0xF3	; 243
    ac12:	80 81       	ld	r24, Z
    ac14:	88 23       	and	r24, r24
    ac16:	09 f4       	brne	.+2      	; 0xac1a <_Z20Schedules_Monitoringv+0x63a>
    ac18:	56 ce       	rjmp	.-852    	; 0xa8c6 <_Z20Schedules_Monitoringv+0x2e6>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
    ac1a:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac1e:	f0 e0       	ldi	r31, 0x00	; 0
    ac20:	e7 59       	subi	r30, 0x97	; 151
    ac22:	f6 4f       	sbci	r31, 0xF6	; 246
    ac24:	80 81       	ld	r24, Z
    ac26:	90 e0       	ldi	r25, 0x00	; 0
    ac28:	01 97       	sbiw	r24, 0x01	; 1
    ac2a:	28 9f       	mul	r18, r24
    ac2c:	f0 01       	movw	r30, r0
    ac2e:	29 9f       	mul	r18, r25
    ac30:	f0 0d       	add	r31, r0
    ac32:	11 24       	eor	r1, r1
    ac34:	e3 50       	subi	r30, 0x03	; 3
    ac36:	f3 4f       	sbci	r31, 0xF3	; 243
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    ac38:	80 81       	ld	r24, Z
    ac3a:	8f 30       	cpi	r24, 0x0F	; 15
    ac3c:	08 f0       	brcs	.+2      	; 0xac40 <_Z20Schedules_Monitoringv+0x660>
    ac3e:	43 ce       	rjmp	.-890    	; 0xa8c6 <_Z20Schedules_Monitoringv+0x2e6>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
							{
								Check_for_no_repeat = Do_Not_Repeat_Schedule();	
    ac40:	0e 94 a3 45 	call	0x8b46	; 0x8b46 <_Z22Do_Not_Repeat_Schedulev>
    ac44:	d8 2f       	mov	r29, r24
								//_kSERAIL_MON_WRITE("sc enter 0.3");   //1/05
								/* save which scheduler is running in eeprom */
								if(_sSchedules.Pump_On_In_Scheduler == _kSET)   /* turn on scheduler */
    ac46:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <_sSchedules+0x79>
    ac4a:	81 30       	cpi	r24, 0x01	; 1
    ac4c:	09 f0       	breq	.+2      	; 0xac50 <_Z20Schedules_Monitoringv+0x670>
    ac4e:	4a c1       	rjmp	.+660    	; 0xaee4 <_Z20Schedules_Monitoringv+0x904>
								{
									/* save running time in eeprom  when no tank is running */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ac50:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ac54:	81 30       	cpi	r24, 0x01	; 1
    ac56:	89 f5       	brne	.+98     	; 0xacba <_Z20Schedules_Monitoringv+0x6da>
									{
										Serial.println("Running time in sec");
    ac58:	6f ee       	ldi	r22, 0xEF	; 239
    ac5a:	72 e0       	ldi	r23, 0x02	; 2
    ac5c:	82 e5       	ldi	r24, 0x52	; 82
    ac5e:	94 e1       	ldi	r25, 0x14	; 20
    ac60:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Keep_Scheduler_Run_Timer);
    ac64:	60 91 26 09 	lds	r22, 0x0926	; 0x800926 <_sSchedules+0x8>
    ac68:	70 91 27 09 	lds	r23, 0x0927	; 0x800927 <_sSchedules+0x9>
    ac6c:	4a e0       	ldi	r20, 0x0A	; 10
    ac6e:	50 e0       	ldi	r21, 0x00	; 0
    ac70:	82 e5       	ldi	r24, 0x52	; 82
    ac72:	94 e1       	ldi	r25, 0x14	; 20
    ac74:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
										Serial.println();
    ac78:	82 e5       	ldi	r24, 0x52	; 82
    ac7a:	94 e1       	ldi	r25, 0x14	; 20
    ac7c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    ac80:	82 e5       	ldi	r24, 0x52	; 82
    ac82:	94 e1       	ldi	r25, 0x14	; 20
    ac84:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										Serial.println("Running schedule");
    ac88:	63 e0       	ldi	r22, 0x03	; 3
    ac8a:	73 e0       	ldi	r23, 0x03	; 3
    ac8c:	82 e5       	ldi	r24, 0x52	; 82
    ac8e:	94 e1       	ldi	r25, 0x14	; 20
    ac90:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running-1);
    ac94:	60 91 21 09 	lds	r22, 0x0921	; 0x800921 <_sSchedules+0x3>
    ac98:	70 e0       	ldi	r23, 0x00	; 0
    ac9a:	61 50       	subi	r22, 0x01	; 1
    ac9c:	71 09       	sbc	r23, r1
    ac9e:	4a e0       	ldi	r20, 0x0A	; 10
    aca0:	50 e0       	ldi	r21, 0x00	; 0
    aca2:	82 e5       	ldi	r24, 0x52	; 82
    aca4:	94 e1       	ldi	r25, 0x14	; 20
    aca6:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
										Serial.println(); //1/05
    acaa:	82 e5       	ldi	r24, 0x52	; 82
    acac:	94 e1       	ldi	r25, 0x14	; 20
    acae:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    acb2:	82 e5       	ldi	r24, 0x52	; 82
    acb4:	94 e1       	ldi	r25, 0x14	; 20
    acb6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									}
									
									Fertilizer_Tank_Monitoring();
    acba:	27 db       	rcall	.-2482   	; 0xa30a <_Z26Fertilizer_Tank_Monitoringv>
									
									Blower_Monitoring(_kON);  // 11-4
    acbc:	81 e0       	ldi	r24, 0x01	; 1
    acbe:	0e 94 2f 3d 	call	0x7a5e	; 0x7a5e <_Z17Blower_Monitoringh>
									
									if(_sSchedules.Save_Schedule_Data_In_Eeprom > 90)
    acc2:	80 91 78 0b 	lds	r24, 0x0B78	; 0x800b78 <_sSchedules+0x25a>
    acc6:	8b 35       	cpi	r24, 0x5B	; 91
    acc8:	98 f4       	brcc	.+38     	; 0xacf0 <_Z20Schedules_Monitoringv+0x710>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
    acca:	80 91 78 0b 	lds	r24, 0x0B78	; 0x800b78 <_sSchedules+0x25a>
    acce:	84 32       	cpi	r24, 0x24	; 36
    acd0:	98 f0       	brcs	.+38     	; 0xacf8 <_Z20Schedules_Monitoringv+0x718>
    acd2:	80 e0       	ldi	r24, 0x00	; 0
    acd4:	90 e0       	ldi	r25, 0x00	; 0
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
											{
												if(_sSchedules.Running_Tank[tank_number] == _kON)
    acd6:	fc 01       	movw	r30, r24
    acd8:	e0 5e       	subi	r30, 0xE0	; 224
    acda:	f4 4f       	sbci	r31, 0xF4	; 244
    acdc:	20 81       	ld	r18, Z
    acde:	21 30       	cpi	r18, 0x01	; 1
    ace0:	09 f4       	brne	.+2      	; 0xace4 <_Z20Schedules_Monitoringv+0x704>
												{
													number_of_running_tanks++;
    ace2:	cf 5f       	subi	r28, 0xFF	; 255
    ace4:	01 96       	adiw	r24, 0x01	; 1
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    ace6:	83 30       	cpi	r24, 0x03	; 3
    ace8:	91 05       	cpc	r25, r1
    acea:	a9 f7       	brne	.-22     	; 0xacd6 <_Z20Schedules_Monitoringv+0x6f6>
												if(_sSchedules.Running_Tank[tank_number] == _kON)
												{
													number_of_running_tanks++;
												}
											}
											if(number_of_running_tanks > 0)
    acec:	cc 23       	and	r28, r28
    acee:	21 f0       	breq	.+8      	; 0xacf8 <_Z20Schedules_Monitoringv+0x718>
											{
												_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    acf0:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
												_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    acf4:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
											}
										}
									}
									
									/* while running schedule check the time and compare with schedule time with that plot  */
									if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1]
    acf8:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    acfc:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    ad00:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ad04:	f0 e0       	ldi	r31, 0x00	; 0
    ad06:	ee 0f       	add	r30, r30
    ad08:	ff 1f       	adc	r31, r31
    ad0a:	e4 5e       	subi	r30, 0xE4	; 228
    ad0c:	f6 4f       	sbci	r31, 0xF6	; 246
    ad0e:	87 8d       	ldd	r24, Z+31	; 0x1f
    ad10:	90 a1       	ldd	r25, Z+32	; 0x20
									||  Check_for_no_repeat != 0)
    ad12:	82 17       	cp	r24, r18
    ad14:	93 07       	cpc	r25, r19
    ad16:	18 f0       	brcs	.+6      	; 0xad1e <_Z20Schedules_Monitoringv+0x73e>
    ad18:	dd 23       	and	r29, r29
    ad1a:	09 f4       	brne	.+2      	; 0xad1e <_Z20Schedules_Monitoringv+0x73e>
    ad1c:	5f c0       	rjmp	.+190    	; 0xaddc <_Z20Schedules_Monitoringv+0x7fc>
									{
										_sRuble_Parameters.Last_Irrigating_Schedule = _sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    ad1e:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ad22:	f0 e0       	ldi	r31, 0x00	; 0
    ad24:	e7 59       	subi	r30, 0x97	; 151
    ad26:	f6 4f       	sbci	r31, 0xF6	; 246
    ad28:	80 81       	ld	r24, Z
    ad2a:	80 93 05 14 	sts	0x1405, r24	; 0x801405 <_sRuble_Parameters+0xbe>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    ad2e:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										Serial.println("time over");
    ad32:	64 e1       	ldi	r22, 0x14	; 20
    ad34:	73 e0       	ldi	r23, 0x03	; 3
    ad36:	82 e5       	ldi	r24, 0x52	; 82
    ad38:	94 e1       	ldi	r25, 0x14	; 20
    ad3a:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    ad3e:	83 e0       	ldi	r24, 0x03	; 3
    ad40:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    ad44:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    ad48:	83 e0       	ldi	r24, 0x03	; 3
    ad4a:	0e 94 2f 3d 	call	0x7a5e	; 0x7a5e <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    ad4e:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
    ad52:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
    ad56:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
										if(Check_for_no_repeat != 1)
    ad5a:	d1 30       	cpi	r29, 0x01	; 1
    ad5c:	09 f4       	brne	.+2      	; 0xad60 <_Z20Schedules_Monitoringv+0x780>
    ad5e:	30 c1       	rjmp	.+608    	; 0xafc0 <_Z20Schedules_Monitoringv+0x9e0>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad60:	81 30       	cpi	r24, 0x01	; 1
    ad62:	51 f4       	brne	.+20     	; 0xad78 <_Z20Schedules_Monitoringv+0x798>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.//// :");
    ad64:	6a e2       	ldi	r22, 0x2A	; 42
    ad66:	76 e1       	ldi	r23, 0x16	; 22
    ad68:	82 e5       	ldi	r24, 0x52	; 82
    ad6a:	94 e1       	ldi	r25, 0x14	; 20
    ad6c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    ad70:	82 e5       	ldi	r24, 0x52	; 82
    ad72:	94 e1       	ldi	r25, 0x14	; 20
    ad74:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
    ad78:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ad7c:	f0 e0       	ldi	r31, 0x00	; 0
    ad7e:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    ad82:	e8 58       	subi	r30, 0x88	; 136
    ad84:	f6 4f       	sbci	r31, 0xF6	; 246
    ad86:	80 83       	st	Z, r24
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
    ad88:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    ad8c:	f0 e0       	ldi	r31, 0x00	; 0
    ad8e:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    ad92:	e9 57       	subi	r30, 0x79	; 121
    ad94:	f6 4f       	sbci	r31, 0xF6	; 246
    ad96:	80 83       	st	Z, r24
    ad98:	20 e0       	ldi	r18, 0x00	; 0
    ad9a:	30 e0       	ldi	r19, 0x00	; 0
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
											{
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    ad9c:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    ada0:	90 e0       	ldi	r25, 0x00	; 0
    ada2:	01 97       	sbiw	r24, 0x01	; 1
    ada4:	fc 01       	movw	r30, r24
    ada6:	ee 0f       	add	r30, r30
    ada8:	ff 1f       	adc	r31, r31
    adaa:	e8 0f       	add	r30, r24
    adac:	f9 1f       	adc	r31, r25
    adae:	e2 0f       	add	r30, r18
    adb0:	f3 1f       	adc	r31, r19
    adb2:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    adb6:	90 e0       	ldi	r25, 0x00	; 0
    adb8:	ee 0f       	add	r30, r30
    adba:	ff 1f       	adc	r31, r31
    adbc:	eb 53       	subi	r30, 0x3B	; 59
    adbe:	f5 4f       	sbci	r31, 0xF5	; 245
    adc0:	91 83       	std	Z+1, r25	; 0x01
    adc2:	80 83       	st	Z, r24
    adc4:	2f 5f       	subi	r18, 0xFF	; 255
    adc6:	3f 4f       	sbci	r19, 0xFF	; 255
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
    adc8:	23 30       	cpi	r18, 0x03	; 3
    adca:	31 05       	cpc	r19, r1
    adcc:	39 f7       	brne	.-50     	; 0xad9c <_Z20Schedules_Monitoringv+0x7bc>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
    adce:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    add2:	81 30       	cpi	r24, 0x01	; 1
    add4:	09 f4       	brne	.+2      	; 0xadd8 <_Z20Schedules_Monitoringv+0x7f8>
    add6:	35 c1       	rjmp	.+618    	; 0xb042 <_Z20Schedules_Monitoringv+0xa62>
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
											} // 22/8/2023
										}
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    add8:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
									
									if(_sPump_Parameter.Irrigation_Status /*||
    addc:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    ade0:	88 23       	and	r24, r24
    ade2:	09 f4       	brne	.+2      	; 0xade6 <_Z20Schedules_Monitoringv+0x806>
    ade4:	49 c0       	rjmp	.+146    	; 0xae78 <_Z20Schedules_Monitoringv+0x898>
									(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status != _kRESET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation != _kRESET)*/)
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    ade6:	0e 94 29 be 	call	0x17c52	; 0x17c52 <_Z15Stop_Irrigationv>
    adea:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    adee:	81 11       	cpse	r24, r1
    adf0:	05 c0       	rjmp	.+10     	; 0xadfc <_Z20Schedules_Monitoringv+0x81c>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    adf2:	91 30       	cpi	r25, 0x01	; 1
    adf4:	79 f4       	brne	.+30     	; 0xae14 <_Z20Schedules_Monitoringv+0x834>
											{
												_kSERAIL_MON_WRITE("sc enter 4..................");
    adf6:	65 e6       	ldi	r22, 0x65	; 101
    adf8:	75 e1       	ldi	r23, 0x15	; 21
    adfa:	04 c0       	rjmp	.+8      	; 0xae04 <_Z20Schedules_Monitoringv+0x824>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    adfc:	91 30       	cpi	r25, 0x01	; 1
    adfe:	51 f4       	brne	.+20     	; 0xae14 <_Z20Schedules_Monitoringv+0x834>
											{
												_kSERAIL_MON_WRITE("sc enter 5...................");
    ae00:	67 e4       	ldi	r22, 0x47	; 71
    ae02:	75 e1       	ldi	r23, 0x15	; 21
    ae04:	82 e5       	ldi	r24, 0x52	; 82
    ae06:	94 e1       	ldi	r25, 0x14	; 20
    ae08:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    ae0c:	82 e5       	ldi	r24, 0x52	; 82
    ae0e:	94 e1       	ldi	r25, 0x14	; 20
    ae10:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											if(_sPump_Parameter.Irrigation_Status)
    ae14:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    ae18:	88 23       	and	r24, r24
    ae1a:	d1 f0       	breq	.+52     	; 0xae50 <_Z20Schedules_Monitoringv+0x870>
											{
												if(_sRuble_Parameters.Dry_Run_Flag == _kSET)
    ae1c:	80 91 39 14 	lds	r24, 0x1439	; 0x801439 <_sRuble_Parameters+0xf2>
    ae20:	81 30       	cpi	r24, 0x01	; 1
    ae22:	29 f4       	brne	.+10     	; 0xae2e <_Z20Schedules_Monitoringv+0x84e>
												{
													_sRuble_Parameters.Dry_Run_Flag = _kRESET;
    ae24:	10 92 39 14 	sts	0x1439, r1	; 0x801439 <_sRuble_Parameters+0xf2>
													_sSchedules.Scheduler_Retry_Timer = 60*60;
    ae28:	80 e1       	ldi	r24, 0x10	; 16
    ae2a:	9e e0       	ldi	r25, 0x0E	; 14
    ae2c:	0d c0       	rjmp	.+26     	; 0xae48 <_Z20Schedules_Monitoringv+0x868>
												}
												else
												{
													if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    ae2e:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    ae32:	81 30       	cpi	r24, 0x01	; 1
    ae34:	39 f4       	brne	.+14     	; 0xae44 <_Z20Schedules_Monitoringv+0x864>
    ae36:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
    ae3a:	81 30       	cpi	r24, 0x01	; 1
    ae3c:	19 f4       	brne	.+6      	; 0xae44 <_Z20Schedules_Monitoringv+0x864>
													{
														_sSchedules.Scheduler_Retry_Timer = 4*60;
    ae3e:	80 ef       	ldi	r24, 0xF0	; 240
    ae40:	90 e0       	ldi	r25, 0x00	; 0
    ae42:	02 c0       	rjmp	.+4      	; 0xae48 <_Z20Schedules_Monitoringv+0x868>
													}
													else
													{
														_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    ae44:	88 e5       	ldi	r24, 0x58	; 88
    ae46:	92 e0       	ldi	r25, 0x02	; 2
    ae48:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    ae4c:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											}
											else
											{
												//flush_running_status = _kSET;
											}
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ae50:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ae54:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    ae58:	83 e0       	ldi	r24, 0x03	; 3
    ae5a:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    ae5e:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    ae62:	83 e0       	ldi	r24, 0x03	; 3
    ae64:	0e 94 2f 3d 	call	0x7a5e	; 0x7a5e <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    ae68:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ae6c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										
										_sSchedules.Schedule_Are_Started = _kRESET;
    ae70:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    ae74:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
									}
									
									if(_sRuble_Parameters.Switch_To_Battery == _eELECTRICITY_IS_NOT_THERE)
    ae78:	80 91 36 14 	lds	r24, 0x1436	; 0x801436 <_sRuble_Parameters+0xef>
    ae7c:	81 11       	cpse	r24, r1
    ae7e:	56 c3       	rjmp	.+1708   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    ae80:	0e 94 29 be 	call	0x17c52	; 0x17c52 <_Z15Stop_Irrigationv>
    ae84:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ae88:	81 11       	cpse	r24, r1
    ae8a:	05 c0       	rjmp	.+10     	; 0xae96 <_Z20Schedules_Monitoringv+0x8b6>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae8c:	91 30       	cpi	r25, 0x01	; 1
    ae8e:	79 f4       	brne	.+30     	; 0xaeae <_Z20Schedules_Monitoringv+0x8ce>
											{
												_kSERAIL_MON_WRITE("sc enter 6...................");
    ae90:	69 e2       	ldi	r22, 0x29	; 41
    ae92:	75 e1       	ldi	r23, 0x15	; 21
    ae94:	04 c0       	rjmp	.+8      	; 0xae9e <_Z20Schedules_Monitoringv+0x8be>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae96:	91 30       	cpi	r25, 0x01	; 1
    ae98:	51 f4       	brne	.+20     	; 0xaeae <_Z20Schedules_Monitoringv+0x8ce>
											{
												_kSERAIL_MON_WRITE("sc enter 7..............................");
    ae9a:	60 e0       	ldi	r22, 0x00	; 0
    ae9c:	75 e1       	ldi	r23, 0x15	; 21
    ae9e:	82 e5       	ldi	r24, 0x52	; 82
    aea0:	94 e1       	ldi	r25, 0x14	; 20
    aea2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    aea6:	82 e5       	ldi	r24, 0x52	; 82
    aea8:	94 e1       	ldi	r25, 0x14	; 20
    aeaa:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    aeae:	88 e5       	ldi	r24, 0x58	; 88
    aeb0:	92 e0       	ldi	r25, 0x02	; 2
    aeb2:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    aeb6:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    aeba:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aebe:	0e 94 9d 31 	call	0x633a	; 0x633a <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    aec2:	83 e0       	ldi	r24, 0x03	; 3
    aec4:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    aec8:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    aecc:	83 e0       	ldi	r24, 0x03	; 3
    aece:	0e 94 2f 3d 	call	0x7a5e	; 0x7a5e <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    aed2:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    aed6:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Schedule_Are_Started = _kRESET;
    aeda:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    aede:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
    aee2:	24 c3       	rjmp	.+1608   	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
									}
								}
								else
								{
									_sRuble_Parameters.Irrigating_Plot =_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    aee4:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
    aee8:	f0 e0       	ldi	r31, 0x00	; 0
    aeea:	e7 59       	subi	r30, 0x97	; 151
    aeec:	f6 4f       	sbci	r31, 0xF6	; 246
    aeee:	80 81       	ld	r24, Z
    aef0:	80 93 a2 13 	sts	0x13A2, r24	; 0x8013a2 <_sRuble_Parameters+0x5b>
									//_sRuble_Parameters.Pump_Selected_For_Irrigation = _sSchedules.Pump_Selected_For_Schedule;
									_sRuble_Parameters.Pump_Selected_For_Irrigation = _sRuble_Parameters.Pump_Selected_For_Irrigation;
									if(!Start_Irrigation())
    aef4:	0e 94 e5 c1 	call	0x183ca	; 0x183ca <_Z16Start_Irrigationv>
    aef8:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    aefc:	81 11       	cpse	r24, r1
    aefe:	22 c0       	rjmp	.+68     	; 0xaf44 <_Z20Schedules_Monitoringv+0x964>
									{
										/* what should happen if irrigation doesn't start */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    af00:	91 30       	cpi	r25, 0x01	; 1
    af02:	51 f4       	brne	.+20     	; 0xaf18 <_Z20Schedules_Monitoringv+0x938>
										{
											_kSERAIL_MON_WRITE("sc enter 8...........................");
    af04:	6a ed       	ldi	r22, 0xDA	; 218
    af06:	74 e1       	ldi	r23, 0x14	; 20
    af08:	82 e5       	ldi	r24, 0x52	; 82
    af0a:	94 e1       	ldi	r25, 0x14	; 20
    af0c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    af10:	82 e5       	ldi	r24, 0x52	; 82
    af12:	94 e1       	ldi	r25, 0x14	; 20
    af14:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    af18:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;  // 15/09/2023
    af1c:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
										
										if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    af20:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    af24:	81 30       	cpi	r24, 0x01	; 1
    af26:	39 f4       	brne	.+14     	; 0xaf36 <_Z20Schedules_Monitoringv+0x956>
    af28:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
    af2c:	81 30       	cpi	r24, 0x01	; 1
    af2e:	19 f4       	brne	.+6      	; 0xaf36 <_Z20Schedules_Monitoringv+0x956>
										{
											_sSchedules.Scheduler_Retry_Timer = 4*60;
    af30:	80 ef       	ldi	r24, 0xF0	; 240
    af32:	90 e0       	ldi	r25, 0x00	; 0
    af34:	02 c0       	rjmp	.+4      	; 0xaf3a <_Z20Schedules_Monitoringv+0x95a>
										}
										else
										{
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    af36:	88 e5       	ldi	r24, 0x58	; 88
    af38:	92 e0       	ldi	r25, 0x02	; 2
    af3a:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    af3e:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    af42:	f1 cc       	rjmp	.-1566   	; 0xa926 <_Z20Schedules_Monitoringv+0x346>
										
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										irrigation_Start_Set = _kSET;
    af44:	10 93 1b 09 	sts	0x091B, r17	; 0x80091b <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    af48:	91 30       	cpi	r25, 0x01	; 1
    af4a:	51 f4       	brne	.+20     	; 0xaf60 <_Z20Schedules_Monitoringv+0x980>
										{
											_kSERAIL_MON_WRITE("sc enter 9");
    af4c:	6f ec       	ldi	r22, 0xCF	; 207
    af4e:	74 e1       	ldi	r23, 0x14	; 20
    af50:	82 e5       	ldi	r24, 0x52	; 82
    af52:	94 e1       	ldi	r25, 0x14	; 20
    af54:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    af58:	82 e5       	ldi	r24, 0x52	; 82
    af5a:	94 e1       	ldi	r25, 0x14	; 20
    af5c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Pump_On_In_Scheduler = _kSET;   /* pump on by the scheduler */
    af60:	81 e0       	ldi	r24, 0x01	; 1
    af62:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;
    af66:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <_sSchedules+0x6>
										_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    af6a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    af6e:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
										_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    af72:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    af76:	80 93 7b 0b 	sts	0x0B7B, r24	; 0x800b7b <_sSchedules+0x25d>
										_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;						
    af7a:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    af7e:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    af82:	90 93 7d 0b 	sts	0x0B7D, r25	; 0x800b7d <_sSchedules+0x25f>
    af86:	80 93 7c 0b 	sts	0x0B7C, r24	; 0x800b7c <_sSchedules+0x25e>
										
										for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    af8a:	80 91 24 0b 	lds	r24, 0x0B24	; 0x800b24 <_sSchedules+0x206>
    af8e:	90 91 25 0b 	lds	r25, 0x0B25	; 0x800b25 <_sSchedules+0x207>
    af92:	90 93 7f 0b 	sts	0x0B7F, r25	; 0x800b7f <_sSchedules+0x261>
    af96:	80 93 7e 0b 	sts	0x0B7E, r24	; 0x800b7e <_sSchedules+0x260>
    af9a:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <_sSchedules+0x208>
    af9e:	90 91 27 0b 	lds	r25, 0x0B27	; 0x800b27 <_sSchedules+0x209>
    afa2:	90 93 81 0b 	sts	0x0B81, r25	; 0x800b81 <_sSchedules+0x263>
    afa6:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <_sSchedules+0x262>
    afaa:	80 91 28 0b 	lds	r24, 0x0B28	; 0x800b28 <_sSchedules+0x20a>
    afae:	90 91 29 0b 	lds	r25, 0x0B29	; 0x800b29 <_sSchedules+0x20b>
    afb2:	90 93 83 0b 	sts	0x0B83, r25	; 0x800b83 <_sSchedules+0x265>
    afb6:	80 93 82 0b 	sts	0x0B82, r24	; 0x800b82 <_sSchedules+0x264>
										}
																					
										Set_Trigger_Time();								
    afba:	0e 94 17 49 	call	0x922e	; 0x922e <_Z16Set_Trigger_Timev>
    afbe:	b3 cc       	rjmp	.-1690   	; 0xa926 <_Z20Schedules_Monitoringv+0x346>
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
											}
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    afc0:	81 30       	cpi	r24, 0x01	; 1
    afc2:	51 f4       	brne	.+20     	; 0xafd8 <_Z20Schedules_Monitoringv+0x9f8>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0//// :");
    afc4:	66 ef       	ldi	r22, 0xF6	; 246
    afc6:	75 e1       	ldi	r23, 0x15	; 21
    afc8:	82 e5       	ldi	r24, 0x52	; 82
    afca:	94 e1       	ldi	r25, 0x14	; 20
    afcc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    afd0:	82 e5       	ldi	r24, 0x52	; 82
    afd2:	94 e1       	ldi	r25, 0x14	; 20
    afd4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											if(Check_for_no_repeat == 1)
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    afd8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    afdc:	81 30       	cpi	r24, 0x01	; 1
    afde:	51 f4       	brne	.+20     	; 0xaff4 <_Z20Schedules_Monitoringv+0xa14>
												{
													_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0.0//// :");
    afe0:	60 ec       	ldi	r22, 0xC0	; 192
    afe2:	75 e1       	ldi	r23, 0x15	; 21
    afe4:	82 e5       	ldi	r24, 0x52	; 82
    afe6:	94 e1       	ldi	r25, 0x14	; 20
    afe8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    afec:	82 e5       	ldi	r24, 0x52	; 82
    afee:	94 e1       	ldi	r25, 0x14	; 20
    aff0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
												}
												_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    aff4:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_sSchedules+0x3>
												_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    aff8:	81 e0       	ldi	r24, 0x01	; 1
    affa:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <_sSchedules+0x7>
												_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    affe:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
												
												if(_sSchedules.Schedule_Are_Started == _kSET)
    b002:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <_sSchedules+0xe>
    b006:	81 30       	cpi	r24, 0x01	; 1
    b008:	81 f4       	brne	.+32     	; 0xb02a <_Z20Schedules_Monitoringv+0xa4a>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b00a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b00e:	81 30       	cpi	r24, 0x01	; 1
    b010:	51 f4       	brne	.+20     	; 0xb026 <_Z20Schedules_Monitoringv+0xa46>
													{
														_kSERAIL_MON_WRITE("sc enter 11");
    b012:	64 eb       	ldi	r22, 0xB4	; 180
    b014:	75 e1       	ldi	r23, 0x15	; 21
    b016:	82 e5       	ldi	r24, 0x52	; 82
    b018:	94 e1       	ldi	r25, 0x14	; 20
    b01a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b01e:	82 e5       	ldi	r24, 0x52	; 82
    b020:	94 e1       	ldi	r25, 0x14	; 20
    b022:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
													}
													_sSchedules.Schedule_Are_Started = _kRESET;
    b026:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <_sSchedules+0xe>
													/* save in eeprom */
												}
												_sSchedules.all_schedule_done_flag = _eSET;
    b02a:	82 e0       	ldi	r24, 0x02	; 2
    b02c:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <_sSchedules+0x1e>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    b030:	80 91 90 0b 	lds	r24, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    b034:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    b038:	80 91 91 0b 	lds	r24, 0x0B91	; 0x800b91 <_sSchedules+0x273>
    b03c:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
    b040:	c6 ce       	rjmp	.-628    	; 0xadce <_Z20Schedules_Monitoringv+0x7ee>
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
										{
											_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    b042:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <_sSchedules+0xc>
    b046:	80 93 90 0b 	sts	0x0B90, r24	; 0x800b90 <_sSchedules+0x272>
											_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    b04a:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <_sSchedules+0xd>
    b04e:	80 93 91 0b 	sts	0x0B91, r24	; 0x800b91 <_sSchedules+0x273>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b052:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b056:	81 30       	cpi	r24, 0x01	; 1
    b058:	91 f4       	brne	.+36     	; 0xb07e <_Z20Schedules_Monitoringv+0xa9e>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0//// :");
    b05a:	62 e8       	ldi	r22, 0x82	; 130
    b05c:	75 e1       	ldi	r23, 0x15	; 21
    b05e:	82 e5       	ldi	r24, 0x52	; 82
    b060:	94 e1       	ldi	r25, 0x14	; 20
    b062:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    b066:	60 91 90 0b 	lds	r22, 0x0B90	; 0x800b90 <_sSchedules+0x272>
    b06a:	4a e0       	ldi	r20, 0x0A	; 10
    b06c:	50 e0       	ldi	r21, 0x00	; 0
    b06e:	82 e5       	ldi	r24, 0x52	; 82
    b070:	94 e1       	ldi	r25, 0x14	; 20
    b072:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
												_kSERIAL_MON_CLEAR();
    b076:	82 e5       	ldi	r24, 0x52	; 82
    b078:	94 e1       	ldi	r25, 0x14	; 20
    b07a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											Return_Calculated_Previous_Day_Date(1);	
    b07e:	81 e0       	ldi	r24, 0x01	; 1
    b080:	0e 94 58 32 	call	0x64b0	; 0x64b0 <_Z35Return_Calculated_Previous_Day_Dateh>
    b084:	81 e0       	ldi	r24, 0x01	; 1
    b086:	90 e0       	ldi	r25, 0x00	; 0
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    b088:	40 91 8e 0b 	lds	r20, 0x0B8E	; 0x800b8e <_sSchedules+0x270>
    b08c:	9c 01       	movw	r18, r24
    b08e:	22 5e       	subi	r18, 0xE2	; 226
    b090:	36 4f       	sbci	r19, 0xF6	; 246
    b092:	f9 01       	movw	r30, r18
    b094:	e5 5a       	subi	r30, 0xA5	; 165
    b096:	ff 4f       	sbci	r31, 0xFF	; 255
    b098:	40 83       	st	Z, r20
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    b09a:	40 91 8f 0b 	lds	r20, 0x0B8F	; 0x800b8f <_sSchedules+0x271>
    b09e:	3f 96       	adiw	r30, 0x0f	; 15
    b0a0:	40 83       	st	Z, r20
    b0a2:	01 96       	adiw	r24, 0x01	; 1
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
												_kSERIAL_MON_CLEAR();
											}
											Return_Calculated_Previous_Day_Date(1);	
											
											for(unsigned char index_num = 1; index_num<_kNUMBER_OF_SCHEDULES; index_num++)
    b0a4:	8e 30       	cpi	r24, 0x0E	; 14
    b0a6:	91 05       	cpc	r25, r1
    b0a8:	79 f7       	brne	.-34     	; 0xb088 <_Z20Schedules_Monitoringv+0xaa8>
    b0aa:	96 ce       	rjmp	.-724    	; 0xadd8 <_Z20Schedules_Monitoringv+0x7f8>
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b0ac:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b0b0:	81 30       	cpi	r24, 0x01	; 1
    b0b2:	51 f4       	brne	.+20     	; 0xb0c8 <_Z20Schedules_Monitoringv+0xae8>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2.1");
    b0b4:	69 e5       	ldi	r22, 0x59	; 89
    b0b6:	74 e1       	ldi	r23, 0x14	; 20
    b0b8:	82 e5       	ldi	r24, 0x52	; 82
    b0ba:	94 e1       	ldi	r25, 0x14	; 20
    b0bc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b0c0:	82 e5       	ldi	r24, 0x52	; 82
    b0c2:	94 e1       	ldi	r25, 0x14	; 20
    b0c4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									}
									_sSchedules.Trigger_Reset = _kRESET;
    b0c8:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
    b0cc:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
    b0d0:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
    b0d4:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
    b0d8:	d4 cc       	rjmp	.-1624   	; 0xaa82 <_Z20Schedules_Monitoringv+0x4a2>
								}
								else
								{
									if(_sSchedules.Trigger_Time != 0)
    b0da:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b0de:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b0e2:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b0e6:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b0ea:	89 2b       	or	r24, r25
    b0ec:	8a 2b       	or	r24, r26
    b0ee:	8b 2b       	or	r24, r27
    b0f0:	09 f4       	brne	.+2      	; 0xb0f4 <_Z20Schedules_Monitoringv+0xb14>
    b0f2:	c7 cc       	rjmp	.-1650   	; 0xaa82 <_Z20Schedules_Monitoringv+0x4a2>
									{
										if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    b0f4:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <_sSchedules+0x13>
    b0f8:	90 91 32 09 	lds	r25, 0x0932	; 0x800932 <_sSchedules+0x14>
    b0fc:	a0 91 33 09 	lds	r26, 0x0933	; 0x800933 <_sSchedules+0x15>
    b100:	b0 91 34 09 	lds	r27, 0x0934	; 0x800934 <_sSchedules+0x16>
    b104:	8c 32       	cpi	r24, 0x2C	; 44
    b106:	91 40       	sbci	r25, 0x01	; 1
    b108:	a1 05       	cpc	r26, r1
    b10a:	b1 05       	cpc	r27, r1
    b10c:	08 f0       	brcs	.+2      	; 0xb110 <_Z20Schedules_Monitoringv+0xb30>
    b10e:	a5 cc       	rjmp	.-1718   	; 0xaa5a <_Z20Schedules_Monitoringv+0x47a>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    b110:	87 e1       	ldi	r24, 0x17	; 23
    b112:	90 e5       	ldi	r25, 0x50	; 80
    b114:	a1 e0       	ldi	r26, 0x01	; 1
    b116:	b0 e0       	ldi	r27, 0x00	; 0
    b118:	ac cc       	rjmp	.-1704   	; 0xaa72 <_Z20Schedules_Monitoringv+0x492>
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b11a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b11e:	81 30       	cpi	r24, 0x01	; 1
    b120:	51 f4       	brne	.+20     	; 0xb136 <_Z20Schedules_Monitoringv+0xb56>
									{
										_kSERAIL_MON_WRITE("sc enter 16");
    b122:	62 ef       	ldi	r22, 0xF2	; 242
    b124:	73 e1       	ldi	r23, 0x13	; 19
    b126:	82 e5       	ldi	r24, 0x52	; 82
    b128:	94 e1       	ldi	r25, 0x14	; 20
    b12a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b12e:	82 e5       	ldi	r24, 0x52	; 82
    b130:	94 e1       	ldi	r25, 0x14	; 20
    b132:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									}
									if((_sRuble_Parameters.Current_Time_In_Sec >= _sSchedules.Trigger_Time) &&(_sRuble_Parameters.Current_Time_In_Sec < _sSchedules.Trigger_Reset))
    b136:	80 91 57 13 	lds	r24, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    b13a:	90 91 58 13 	lds	r25, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    b13e:	a0 91 59 13 	lds	r26, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    b142:	b0 91 5a 13 	lds	r27, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    b146:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b14a:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b14e:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b152:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b156:	84 17       	cp	r24, r20
    b158:	95 07       	cpc	r25, r21
    b15a:	a6 07       	cpc	r26, r22
    b15c:	b7 07       	cpc	r27, r23
    b15e:	08 f4       	brcc	.+2      	; 0xb162 <_Z20Schedules_Monitoringv+0xb82>
    b160:	e5 c1       	rjmp	.+970    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    b162:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b166:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b16a:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b16e:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b172:	84 17       	cp	r24, r20
    b174:	95 07       	cpc	r25, r21
    b176:	a6 07       	cpc	r26, r22
    b178:	b7 07       	cpc	r27, r23
    b17a:	08 f0       	brcs	.+2      	; 0xb17e <_Z20Schedules_Monitoringv+0xb9e>
    b17c:	d7 c1       	rjmp	.+942    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b17e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b182:	81 30       	cpi	r24, 0x01	; 1
    b184:	51 f4       	brne	.+20     	; 0xb19a <_Z20Schedules_Monitoringv+0xbba>
										{
											_kSERAIL_MON_WRITE("sc enter 17");
    b186:	66 ee       	ldi	r22, 0xE6	; 230
    b188:	73 e1       	ldi	r23, 0x13	; 19
    b18a:	82 e5       	ldi	r24, 0x52	; 82
    b18c:	94 e1       	ldi	r25, 0x14	; 20
    b18e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b192:	82 e5       	ldi	r24, 0x52	; 82
    b194:	94 e1       	ldi	r25, 0x14	; 20
    b196:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										/* set the trigger time for ON */
										Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b19a:	6c 2f       	mov	r22, r28
    b19c:	81 e0       	ldi	r24, 0x01	; 1
    b19e:	0e 94 38 46 	call	0x8c70	; 0x8c70 <_Z34Check_Time_For_Schedule_To_Triggerhh>
    b1a2:	c1 cb       	rjmp	.-2174   	; 0xa926 <_Z20Schedules_Monitoringv+0x346>
									check_true_condition = Compare_Trigger_And_Reset_Time();
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
									{
										/* no need to check next date */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b1a4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b1a8:	81 30       	cpi	r24, 0x01	; 1
    b1aa:	51 f4       	brne	.+20     	; 0xb1c0 <_Z20Schedules_Monitoringv+0xbe0>
										{
											_kSERAIL_MON_WRITE("sc enter 26");
    b1ac:	6a ed       	ldi	r22, 0xDA	; 218
    b1ae:	73 e1       	ldi	r23, 0x13	; 19
    b1b0:	82 e5       	ldi	r24, 0x52	; 82
    b1b2:	94 e1       	ldi	r25, 0x14	; 20
    b1b4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b1b8:	82 e5       	ldi	r24, 0x52	; 82
    b1ba:	94 e1       	ldi	r25, 0x14	; 20
    b1bc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b1c0:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b1c4:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b1c8:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b1cc:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b1d0:	80 91 57 13 	lds	r24, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    b1d4:	90 91 58 13 	lds	r25, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    b1d8:	a0 91 59 13 	lds	r26, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    b1dc:	b0 91 5a 13 	lds	r27, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    b1e0:	84 17       	cp	r24, r20
    b1e2:	95 07       	cpc	r25, r21
    b1e4:	a6 07       	cpc	r26, r22
    b1e6:	b7 07       	cpc	r27, r23
    b1e8:	08 f4       	brcc	.+2      	; 0xb1ec <_Z20Schedules_Monitoringv+0xc0c>
    b1ea:	85 c0       	rjmp	.+266    	; 0xb2f6 <_Z20Schedules_Monitoringv+0xd16>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b1ec:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b1f0:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b1f4:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b1f8:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b1fc:	48 17       	cp	r20, r24
    b1fe:	59 07       	cpc	r21, r25
    b200:	6a 07       	cpc	r22, r26
    b202:	7b 07       	cpc	r23, r27
    b204:	08 f0       	brcs	.+2      	; 0xb208 <_Z20Schedules_Monitoringv+0xc28>
    b206:	77 c0       	rjmp	.+238    	; 0xb2f6 <_Z20Schedules_Monitoringv+0xd16>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b208:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b20c:	81 30       	cpi	r24, 0x01	; 1
    b20e:	51 f4       	brne	.+20     	; 0xb224 <_Z20Schedules_Monitoringv+0xc44>
											{
												_kSERAIL_MON_WRITE("sc enter 27");
    b210:	6e ec       	ldi	r22, 0xCE	; 206
    b212:	73 e1       	ldi	r23, 0x13	; 19
    b214:	82 e5       	ldi	r24, 0x52	; 82
    b216:	94 e1       	ldi	r25, 0x14	; 20
    b218:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b21c:	82 e5       	ldi	r24, 0x52	; 82
    b21e:	94 e1       	ldi	r25, 0x14	; 20
    b220:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
    b224:	6c 2f       	mov	r22, r28
    b226:	65 c0       	rjmp	.+202    	; 0xb2f2 <_Z20Schedules_Monitoringv+0xd12>
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b228:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b22c:	81 30       	cpi	r24, 0x01	; 1
    b22e:	51 f4       	brne	.+20     	; 0xb244 <_Z20Schedules_Monitoringv+0xc64>
											{
												_kSERAIL_MON_WRITE("sc enter 37");
    b230:	66 eb       	ldi	r22, 0xB6	; 182
    b232:	73 e1       	ldi	r23, 0x13	; 19
    b234:	82 e5       	ldi	r24, 0x52	; 82
    b236:	94 e1       	ldi	r25, 0x14	; 20
    b238:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b23c:	82 e5       	ldi	r24, 0x52	; 82
    b23e:	94 e1       	ldi	r25, 0x14	; 20
    b240:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											if(_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec)
    b244:	00 91 31 09 	lds	r16, 0x0931	; 0x800931 <_sSchedules+0x13>
    b248:	10 91 32 09 	lds	r17, 0x0932	; 0x800932 <_sSchedules+0x14>
    b24c:	20 91 33 09 	lds	r18, 0x0933	; 0x800933 <_sSchedules+0x15>
    b250:	30 91 34 09 	lds	r19, 0x0934	; 0x800934 <_sSchedules+0x16>
    b254:	40 91 57 13 	lds	r20, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    b258:	50 91 58 13 	lds	r21, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    b25c:	60 91 59 13 	lds	r22, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    b260:	70 91 5a 13 	lds	r23, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    b264:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b268:	04 17       	cp	r16, r20
    b26a:	15 07       	cpc	r17, r21
    b26c:	26 07       	cpc	r18, r22
    b26e:	37 07       	cpc	r19, r23
    b270:	08 f4       	brcc	.+2      	; 0xb274 <_Z20Schedules_Monitoringv+0xc94>
    b272:	73 c0       	rjmp	.+230    	; 0xb35a <_Z20Schedules_Monitoringv+0xd7a>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b274:	81 30       	cpi	r24, 0x01	; 1
    b276:	51 f4       	brne	.+20     	; 0xb28c <_Z20Schedules_Monitoringv+0xcac>
												{
													_kSERAIL_MON_WRITE("sc enter 38");
    b278:	6a ea       	ldi	r22, 0xAA	; 170
    b27a:	73 e1       	ldi	r23, 0x13	; 19
    b27c:	82 e5       	ldi	r24, 0x52	; 82
    b27e:	94 e1       	ldi	r25, 0x14	; 20
    b280:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b284:	82 e5       	ldi	r24, 0x52	; 82
    b286:	94 e1       	ldi	r25, 0x14	; 20
    b288:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b28c:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b290:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b294:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b298:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b29c:	80 91 57 13 	lds	r24, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    b2a0:	90 91 58 13 	lds	r25, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    b2a4:	a0 91 59 13 	lds	r26, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    b2a8:	b0 91 5a 13 	lds	r27, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    b2ac:	84 17       	cp	r24, r20
    b2ae:	95 07       	cpc	r25, r21
    b2b0:	a6 07       	cpc	r26, r22
    b2b2:	b7 07       	cpc	r27, r23
    b2b4:	08 f4       	brcc	.+2      	; 0xb2b8 <_Z20Schedules_Monitoringv+0xcd8>
    b2b6:	81 c0       	rjmp	.+258    	; 0xb3ba <_Z20Schedules_Monitoringv+0xdda>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b2b8:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b2bc:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b2c0:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b2c4:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 38");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b2c8:	48 17       	cp	r20, r24
    b2ca:	59 07       	cpc	r21, r25
    b2cc:	6a 07       	cpc	r22, r26
    b2ce:	7b 07       	cpc	r23, r27
    b2d0:	08 f0       	brcs	.+2      	; 0xb2d4 <_Z20Schedules_Monitoringv+0xcf4>
    b2d2:	73 c0       	rjmp	.+230    	; 0xb3ba <_Z20Schedules_Monitoringv+0xdda>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b2d4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b2d8:	81 30       	cpi	r24, 0x01	; 1
    b2da:	51 f4       	brne	.+20     	; 0xb2f0 <_Z20Schedules_Monitoringv+0xd10>
													{
														_kSERAIL_MON_WRITE("sc enter 39");
    b2dc:	6e e9       	ldi	r22, 0x9E	; 158
    b2de:	73 e1       	ldi	r23, 0x13	; 19
    b2e0:	82 e5       	ldi	r24, 0x52	; 82
    b2e2:	94 e1       	ldi	r25, 0x14	; 20
    b2e4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b2e8:	82 e5       	ldi	r24, 0x52	; 82
    b2ea:	94 e1       	ldi	r25, 0x14	; 20
    b2ec:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b2f0:	60 e0       	ldi	r22, 0x00	; 0
    b2f2:	81 e0       	ldi	r24, 0x01	; 1
    b2f4:	2c c0       	rjmp	.+88     	; 0xb34e <_Z20Schedules_Monitoringv+0xd6e>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b2f6:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b2fa:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b2fe:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b302:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b306:	48 17       	cp	r20, r24
    b308:	59 07       	cpc	r21, r25
    b30a:	6a 07       	cpc	r22, r26
    b30c:	7b 07       	cpc	r23, r27
    b30e:	08 f4       	brcc	.+2      	; 0xb312 <_Z20Schedules_Monitoringv+0xd32>
    b310:	0d c1       	rjmp	.+538    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b312:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b316:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b31a:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b31e:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b322:	84 17       	cp	r24, r20
    b324:	95 07       	cpc	r25, r21
    b326:	a6 07       	cpc	r26, r22
    b328:	b7 07       	cpc	r27, r23
    b32a:	08 f0       	brcs	.+2      	; 0xb32e <_Z20Schedules_Monitoringv+0xd4e>
    b32c:	ff c0       	rjmp	.+510    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
										{
											/* set the trigger time for ON */
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b32e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b332:	81 30       	cpi	r24, 0x01	; 1
    b334:	51 f4       	brne	.+20     	; 0xb34a <_Z20Schedules_Monitoringv+0xd6a>
											{
												_kSERAIL_MON_WRITE("sc enter 32");
    b336:	62 ec       	ldi	r22, 0xC2	; 194
    b338:	73 e1       	ldi	r23, 0x13	; 19
    b33a:	82 e5       	ldi	r24, 0x52	; 82
    b33c:	94 e1       	ldi	r25, 0x14	; 20
    b33e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b342:	82 e5       	ldi	r24, 0x52	; 82
    b344:	94 e1       	ldi	r25, 0x14	; 20
    b346:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b34a:	6c 2f       	mov	r22, r28
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b34c:	82 e0       	ldi	r24, 0x02	; 2
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b34e:	df 91       	pop	r29
    b350:	cf 91       	pop	r28
    b352:	1f 91       	pop	r17
    b354:	0f 91       	pop	r16
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b356:	0c 94 38 46 	jmp	0x8c70	; 0x8c70 <_Z34Check_Time_For_Schedule_To_Triggerhh>
												}
												
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b35a:	81 30       	cpi	r24, 0x01	; 1
    b35c:	51 f4       	brne	.+20     	; 0xb372 <_Z20Schedules_Monitoringv+0xd92>
												{
													_kSERAIL_MON_WRITE("sc enter 49");
    b35e:	66 e8       	ldi	r22, 0x86	; 134
    b360:	73 e1       	ldi	r23, 0x13	; 19
    b362:	82 e5       	ldi	r24, 0x52	; 82
    b364:	94 e1       	ldi	r25, 0x14	; 20
    b366:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b36a:	82 e5       	ldi	r24, 0x52	; 82
    b36c:	94 e1       	ldi	r25, 0x14	; 20
    b36e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b372:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b376:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b37a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b37e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b382:	80 91 57 13 	lds	r24, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    b386:	90 91 58 13 	lds	r25, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    b38a:	a0 91 59 13 	lds	r26, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    b38e:	b0 91 5a 13 	lds	r27, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    b392:	84 17       	cp	r24, r20
    b394:	95 07       	cpc	r25, r21
    b396:	a6 07       	cpc	r26, r22
    b398:	b7 07       	cpc	r27, r23
    b39a:	d8 f1       	brcs	.+118    	; 0xb412 <_Z20Schedules_Monitoringv+0xe32>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b39c:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b3a0:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b3a4:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b3a8:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 49");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b3ac:	48 17       	cp	r20, r24
    b3ae:	59 07       	cpc	r21, r25
    b3b0:	6a 07       	cpc	r22, r26
    b3b2:	7b 07       	cpc	r23, r27
    b3b4:	08 f4       	brcc	.+2      	; 0xb3b8 <_Z20Schedules_Monitoringv+0xdd8>
    b3b6:	49 c0       	rjmp	.+146    	; 0xb44a <_Z20Schedules_Monitoringv+0xe6a>
    b3b8:	2c c0       	rjmp	.+88     	; 0xb412 <_Z20Schedules_Monitoringv+0xe32>
														_kSERIAL_MON_CLEAR();
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b3ba:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b3be:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b3c2:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b3c6:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b3ca:	48 17       	cp	r20, r24
    b3cc:	59 07       	cpc	r21, r25
    b3ce:	6a 07       	cpc	r22, r26
    b3d0:	7b 07       	cpc	r23, r27
    b3d2:	08 f4       	brcc	.+2      	; 0xb3d6 <_Z20Schedules_Monitoringv+0xdf6>
    b3d4:	ab c0       	rjmp	.+342    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    b3d6:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b3da:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b3de:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b3e2:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b3e6:	84 17       	cp	r24, r20
    b3e8:	95 07       	cpc	r25, r21
    b3ea:	a6 07       	cpc	r26, r22
    b3ec:	b7 07       	cpc	r27, r23
    b3ee:	08 f0       	brcs	.+2      	; 0xb3f2 <_Z20Schedules_Monitoringv+0xe12>
    b3f0:	9d c0       	rjmp	.+314    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b3f2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b3f6:	81 30       	cpi	r24, 0x01	; 1
    b3f8:	51 f4       	brne	.+20     	; 0xb40e <_Z20Schedules_Monitoringv+0xe2e>
													{
														_kSERAIL_MON_WRITE("sc enter 44");
    b3fa:	62 e9       	ldi	r22, 0x92	; 146
    b3fc:	73 e1       	ldi	r23, 0x13	; 19
    b3fe:	82 e5       	ldi	r24, 0x52	; 82
    b400:	94 e1       	ldi	r25, 0x14	; 20
    b402:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b406:	82 e5       	ldi	r24, 0x52	; 82
    b408:	94 e1       	ldi	r25, 0x14	; 20
    b40a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b40e:	60 e0       	ldi	r22, 0x00	; 0
    b410:	9d cf       	rjmp	.-198    	; 0xb34c <_Z20Schedules_Monitoringv+0xd6c>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b412:	40 91 31 09 	lds	r20, 0x0931	; 0x800931 <_sSchedules+0x13>
    b416:	50 91 32 09 	lds	r21, 0x0932	; 0x800932 <_sSchedules+0x14>
    b41a:	60 91 33 09 	lds	r22, 0x0933	; 0x800933 <_sSchedules+0x15>
    b41e:	70 91 34 09 	lds	r23, 0x0934	; 0x800934 <_sSchedules+0x16>
    b422:	48 17       	cp	r20, r24
    b424:	59 07       	cpc	r21, r25
    b426:	6a 07       	cpc	r22, r26
    b428:	7b 07       	cpc	r23, r27
    b42a:	08 f4       	brcc	.+2      	; 0xb42e <_Z20Schedules_Monitoringv+0xe4e>
    b42c:	7f c0       	rjmp	.+254    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
    b42e:	40 91 35 09 	lds	r20, 0x0935	; 0x800935 <_sSchedules+0x17>
    b432:	50 91 36 09 	lds	r21, 0x0936	; 0x800936 <_sSchedules+0x18>
    b436:	60 91 37 09 	lds	r22, 0x0937	; 0x800937 <_sSchedules+0x19>
    b43a:	70 91 38 09 	lds	r23, 0x0938	; 0x800938 <_sSchedules+0x1a>
    b43e:	84 17       	cp	r24, r20
    b440:	95 07       	cpc	r25, r21
    b442:	a6 07       	cpc	r26, r22
    b444:	b7 07       	cpc	r27, r23
    b446:	48 f0       	brcs	.+18     	; 0xb45a <_Z20Schedules_Monitoringv+0xe7a>
    b448:	71 c0       	rjmp	.+226    	; 0xb52c <_Z20Schedules_Monitoringv+0xf4c>
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b44a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b44e:	81 30       	cpi	r24, 0x01	; 1
    b450:	09 f0       	breq	.+2      	; 0xb454 <_Z20Schedules_Monitoringv+0xe74>
    b452:	4e cf       	rjmp	.-356    	; 0xb2f0 <_Z20Schedules_Monitoringv+0xd10>
													{
														_kSERAIL_MON_WRITE("sc enter 50");
    b454:	6a e7       	ldi	r22, 0x7A	; 122
    b456:	73 e1       	ldi	r23, 0x13	; 19
    b458:	43 cf       	rjmp	.-378    	; 0xb2e0 <_Z20Schedules_Monitoringv+0xd00>
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
												{
													/* set the trigger time for ON */
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b45a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b45e:	81 30       	cpi	r24, 0x01	; 1
    b460:	b1 f6       	brne	.-84     	; 0xb40e <_Z20Schedules_Monitoringv+0xe2e>
													{
														_kSERAIL_MON_WRITE("sc enter 55");
    b462:	6e e6       	ldi	r22, 0x6E	; 110
    b464:	73 e1       	ldi	r23, 0x13	; 19
    b466:	cb cf       	rjmp	.-106    	; 0xb3fe <_Z20Schedules_Monitoringv+0xe1e>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    b468:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b46c:	81 30       	cpi	r24, 0x01	; 1
    b46e:	51 f4       	brne	.+20     	; 0xb484 <_Z20Schedules_Monitoringv+0xea4>
						{
							_kSERAIL_MON_WRITE("sc enter 62");
    b470:	62 e3       	ldi	r22, 0x32	; 50
    b472:	73 e1       	ldi	r23, 0x13	; 19
    b474:	82 e5       	ldi	r24, 0x52	; 82
    b476:	94 e1       	ldi	r25, 0x14	; 20
    b478:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    b47c:	82 e5       	ldi	r24, 0x52	; 82
    b47e:	94 e1       	ldi	r25, 0x14	; 20
    b480:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						}
						Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b484:	83 e0       	ldi	r24, 0x03	; 3
    b486:	0e 94 47 49 	call	0x928e	; 0x928e <_Z17Doser_Pump_On_Offh>
						Turn_Off_All_Tank_For_Safety();
    b48a:	0e 94 6a 3c 	call	0x78d4	; 0x78d4 <_Z28Turn_Off_All_Tank_For_Safetyv>
						Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b48e:	83 e0       	ldi	r24, 0x03	; 3
    b490:	0e 94 2f 3d 	call	0x7a5e	; 0x7a5e <_Z17Blower_Monitoringh>
    b494:	9e c9       	rjmp	.-3268   	; 0xa7d2 <_Z20Schedules_Monitoringv+0x1f2>
					_sSchedules.Schedule_Are_Started = _kRESET;
					_sSchedules.all_schedule_done_flag = _kRESET;
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
					{
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    b496:	88 23       	and	r24, r24
    b498:	09 f4       	brne	.+2      	; 0xb49c <_Z20Schedules_Monitoringv+0xebc>
    b49a:	d3 c9       	rjmp	.-3162   	; 0xa842 <_Z20Schedules_Monitoringv+0x262>
						{
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    b49c:	60 e0       	ldi	r22, 0x00	; 0
    b49e:	0e 94 26 27 	call	0x4e4c	; 0x4e4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    b4a2:	10 92 05 14 	sts	0x1405, r1	; 0x801405 <_sRuble_Parameters+0xbe>
    b4a6:	cd c9       	rjmp	.-3174   	; 0xa842 <_Z20Schedules_Monitoringv+0x262>
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
					{
						/* should add what happen if schedule pause */
						/* in ruble data resume section will be there */
						
						if(_sSchedules.Which_Sheduler_Is_Running)
    b4a8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b4ac:	88 23       	and	r24, r24
    b4ae:	b1 f1       	breq	.+108    	; 0xb51c <_Z20Schedules_Monitoringv+0xf3c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b4b0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b4b4:	81 30       	cpi	r24, 0x01	; 1
    b4b6:	51 f4       	brne	.+20     	; 0xb4cc <_Z20Schedules_Monitoringv+0xeec>
							{
								_kSERAIL_MON_WRITE("sc enter 61");
    b4b8:	6e e3       	ldi	r22, 0x3E	; 62
    b4ba:	73 e1       	ldi	r23, 0x13	; 19
    b4bc:	82 e5       	ldi	r24, 0x52	; 82
    b4be:	94 e1       	ldi	r25, 0x14	; 20
    b4c0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b4c4:	82 e5       	ldi	r24, 0x52	; 82
    b4c6:	94 e1       	ldi	r25, 0x14	; 20
    b4c8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b4cc:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
    b4d0:	80 93 7a 0b 	sts	0x0B7A, r24	; 0x800b7a <_sSchedules+0x25c>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b4d4:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    b4d8:	80 93 7b 0b 	sts	0x0B7B, r24	; 0x800b7b <_sSchedules+0x25d>
							_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;
    b4dc:	80 91 26 09 	lds	r24, 0x0926	; 0x800926 <_sSchedules+0x8>
    b4e0:	90 91 27 09 	lds	r25, 0x0927	; 0x800927 <_sSchedules+0x9>
    b4e4:	90 93 7d 0b 	sts	0x0B7D, r25	; 0x800b7d <_sSchedules+0x25f>
    b4e8:	80 93 7c 0b 	sts	0x0B7C, r24	; 0x800b7c <_sSchedules+0x25e>
							
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b4ec:	80 91 24 0b 	lds	r24, 0x0B24	; 0x800b24 <_sSchedules+0x206>
    b4f0:	90 91 25 0b 	lds	r25, 0x0B25	; 0x800b25 <_sSchedules+0x207>
    b4f4:	90 93 7f 0b 	sts	0x0B7F, r25	; 0x800b7f <_sSchedules+0x261>
    b4f8:	80 93 7e 0b 	sts	0x0B7E, r24	; 0x800b7e <_sSchedules+0x260>
    b4fc:	80 91 26 0b 	lds	r24, 0x0B26	; 0x800b26 <_sSchedules+0x208>
    b500:	90 91 27 0b 	lds	r25, 0x0B27	; 0x800b27 <_sSchedules+0x209>
    b504:	90 93 81 0b 	sts	0x0B81, r25	; 0x800b81 <_sSchedules+0x263>
    b508:	80 93 80 0b 	sts	0x0B80, r24	; 0x800b80 <_sSchedules+0x262>
    b50c:	80 91 28 0b 	lds	r24, 0x0B28	; 0x800b28 <_sSchedules+0x20a>
    b510:	90 91 29 0b 	lds	r25, 0x0B29	; 0x800b29 <_sSchedules+0x20b>
    b514:	90 93 83 0b 	sts	0x0B83, r25	; 0x800b83 <_sSchedules+0x265>
    b518:	80 93 82 0b 	sts	0x0B82, r24	; 0x800b82 <_sSchedules+0x264>
							}
							
							/* ########################## add schedule pause to ruble data topic ############# */
						}
						
						if(_sSchedules.New_Schedules_Occur == _kSET)
    b51c:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <_sSchedules+0x1>
    b520:	81 30       	cpi	r24, 0x01	; 1
    b522:	09 f0       	breq	.+2      	; 0xb526 <_Z20Schedules_Monitoringv+0xf46>
    b524:	4a c9       	rjmp	.-3436   	; 0xa7ba <_Z20Schedules_Monitoringv+0x1da>
						{
							Edited_In_Schedule();
    b526:	0e 94 5f 3f 	call	0x7ebe	; 0x7ebe <_Z18Edited_In_Schedulev>
    b52a:	47 c9       	rjmp	.-3442   	; 0xa7ba <_Z20Schedules_Monitoringv+0x1da>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b52c:	df 91       	pop	r29
    b52e:	cf 91       	pop	r28
    b530:	1f 91       	pop	r17
    b532:	0f 91       	pop	r16
    b534:	08 95       	ret

0000b536 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>:
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
        return t;
    }
    
    template< typename T > const T &put( int idx, const T &t ){
    b536:	cf 93       	push	r28
    b538:	df 93       	push	r29
    b53a:	1f 92       	push	r1
    b53c:	1f 92       	push	r1
    b53e:	cd b7       	in	r28, 0x3d	; 61
    b540:	de b7       	in	r29, 0x3e	; 62
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b542:	60 91 07 14 	lds	r22, 0x1407	; 0x801407 <_sRuble_Parameters+0xc0>
    b546:	8d ea       	ldi	r24, 0xAD	; 173
    b548:	9c e0       	ldi	r25, 0x0C	; 12
    b54a:	9a 83       	std	Y+2, r25	; 0x02
    b54c:	89 83       	std	Y+1, r24	; 0x01
    b54e:	ce 01       	movw	r24, r28
    b550:	01 96       	adiw	r24, 0x01	; 1
    b552:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
        return t;
    }
    b556:	87 e0       	ldi	r24, 0x07	; 7
    b558:	94 e1       	ldi	r25, 0x14	; 20
    b55a:	0f 90       	pop	r0
    b55c:	0f 90       	pop	r0
    b55e:	df 91       	pop	r29
    b560:	cf 91       	pop	r28
    b562:	08 95       	ret

0000b564 <_Z16Euro_Data_EEPROMh>:
	}
	return 0;
}

void Euro_Data_EEPROM(unsigned char valve_number)
{
    b564:	cf 92       	push	r12
    b566:	df 92       	push	r13
    b568:	ef 92       	push	r14
    b56a:	ff 92       	push	r15
    b56c:	0f 93       	push	r16
    b56e:	1f 93       	push	r17
    b570:	cf 93       	push	r28
    b572:	df 93       	push	r29
    b574:	1f 92       	push	r1
    b576:	1f 92       	push	r1
    b578:	cd b7       	in	r28, 0x3d	; 61
    b57a:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
    b57c:	94 e1       	ldi	r25, 0x14	; 20
    b57e:	89 9f       	mul	r24, r25
    b580:	90 01       	movw	r18, r0
    b582:	11 24       	eor	r1, r1
    b584:	69 01       	movw	r12, r18
    b586:	e6 e3       	ldi	r30, 0x36	; 54
    b588:	ce 1a       	sub	r12, r30
    b58a:	ec ef       	ldi	r30, 0xFC	; 252
    b58c:	de 0a       	sbc	r13, r30
    b58e:	fd e0       	ldi	r31, 0x0D	; 13
    b590:	8f 9f       	mul	r24, r31
    b592:	80 01       	movw	r16, r0
    b594:	11 24       	eor	r1, r1
    b596:	09 54       	subi	r16, 0x49	; 73
    b598:	14 4f       	sbci	r17, 0xF4	; 244
    b59a:	79 01       	movw	r14, r18
    b59c:	89 e2       	ldi	r24, 0x29	; 41
    b59e:	e8 1a       	sub	r14, r24
    b5a0:	8c ef       	ldi	r24, 0xFC	; 252
    b5a2:	f8 0a       	sbc	r15, r24
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b5a4:	f8 01       	movw	r30, r16
    b5a6:	61 91       	ld	r22, Z+
    b5a8:	8f 01       	movw	r16, r30
    b5aa:	da 82       	std	Y+2, r13	; 0x02
    b5ac:	c9 82       	std	Y+1, r12	; 0x01
    b5ae:	ce 01       	movw	r24, r28
    b5b0:	01 96       	adiw	r24, 0x01	; 1
    b5b2:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
    b5b6:	ff ef       	ldi	r31, 0xFF	; 255
    b5b8:	cf 1a       	sub	r12, r31
    b5ba:	df 0a       	sbc	r13, r31
    b5bc:	ce 14       	cp	r12, r14
    b5be:	df 04       	cpc	r13, r15
    b5c0:	89 f7       	brne	.-30     	; 0xb5a4 <_Z16Euro_Data_EEPROMh+0x40>
	return;
}
    b5c2:	0f 90       	pop	r0
    b5c4:	0f 90       	pop	r0
    b5c6:	df 91       	pop	r29
    b5c8:	cf 91       	pop	r28
    b5ca:	1f 91       	pop	r17
    b5cc:	0f 91       	pop	r16
    b5ce:	ff 90       	pop	r15
    b5d0:	ef 90       	pop	r14
    b5d2:	df 90       	pop	r13
    b5d4:	cf 90       	pop	r12
    b5d6:	08 95       	ret

0000b5d8 <_Z20Wireless_Pump_EEPROMh>:
	
	return 0;
}

void Wireless_Pump_EEPROM(unsigned char Pump_Number)
{
    b5d8:	cf 92       	push	r12
    b5da:	df 92       	push	r13
    b5dc:	ef 92       	push	r14
    b5de:	ff 92       	push	r15
    b5e0:	0f 93       	push	r16
    b5e2:	1f 93       	push	r17
    b5e4:	cf 93       	push	r28
    b5e6:	df 93       	push	r29
    b5e8:	1f 92       	push	r1
    b5ea:	1f 92       	push	r1
    b5ec:	cd b7       	in	r28, 0x3d	; 61
    b5ee:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kWIRELESS_PUMP_DATA_SAVE(Pump_Number), _sWireless_Pump_Param[Pump_Number]);
    b5f0:	94 e1       	ldi	r25, 0x14	; 20
    b5f2:	89 9f       	mul	r24, r25
    b5f4:	90 01       	movw	r18, r0
    b5f6:	11 24       	eor	r1, r1
    b5f8:	69 01       	movw	r12, r18
    b5fa:	e2 e5       	ldi	r30, 0x52	; 82
    b5fc:	ce 1a       	sub	r12, r30
    b5fe:	e3 ef       	ldi	r30, 0xF3	; 243
    b600:	de 0a       	sbc	r13, r30
    b602:	fb e0       	ldi	r31, 0x0B	; 11
    b604:	8f 9f       	mul	r24, r31
    b606:	80 01       	movw	r16, r0
    b608:	11 24       	eor	r1, r1
    b60a:	0a 56       	subi	r16, 0x6A	; 106
    b60c:	14 4f       	sbci	r17, 0xF4	; 244
    b60e:	79 01       	movw	r14, r18
    b610:	87 e4       	ldi	r24, 0x47	; 71
    b612:	e8 1a       	sub	r14, r24
    b614:	83 ef       	ldi	r24, 0xF3	; 243
    b616:	f8 0a       	sbc	r15, r24
    b618:	f8 01       	movw	r30, r16
    b61a:	61 91       	ld	r22, Z+
    b61c:	8f 01       	movw	r16, r30
    b61e:	da 82       	std	Y+2, r13	; 0x02
    b620:	c9 82       	std	Y+1, r12	; 0x01
    b622:	ce 01       	movw	r24, r28
    b624:	01 96       	adiw	r24, 0x01	; 1
    b626:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
    b62a:	ff ef       	ldi	r31, 0xFF	; 255
    b62c:	cf 1a       	sub	r12, r31
    b62e:	df 0a       	sbc	r13, r31
    b630:	ce 14       	cp	r12, r14
    b632:	df 04       	cpc	r13, r15
    b634:	89 f7       	brne	.-30     	; 0xb618 <_Z20Wireless_Pump_EEPROMh+0x40>
	return;
    b636:	0f 90       	pop	r0
    b638:	0f 90       	pop	r0
    b63a:	df 91       	pop	r29
    b63c:	cf 91       	pop	r28
    b63e:	1f 91       	pop	r17
    b640:	0f 91       	pop	r16
    b642:	ff 90       	pop	r15
    b644:	ef 90       	pop	r14
    b646:	df 90       	pop	r13
    b648:	cf 90       	pop	r12
    b64a:	08 95       	ret

0000b64c <_Z22Update_Euro_Valve_DataPh>:
Euro_Valve_Param _sEuro_Valve_Param[_kMAX_EURO_VALVE];
Wireless_Pump_Param _sWireless_Pump_Param[_kMAX_WIRELESS_PUMP];


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
    b64c:	ef 92       	push	r14
    b64e:	ff 92       	push	r15
    b650:	0f 93       	push	r16
    b652:	1f 93       	push	r17
    b654:	cf 93       	push	r28
    b656:	df 93       	push	r29
    b658:	fc 01       	movw	r30, r24
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b65a:	81 e0       	ldi	r24, 0x01	; 1
    b65c:	80 93 96 0b 	sts	0x0B96, r24	; 0x800b96 <_sWireless_Pump_Param>
    b660:	c0 e0       	ldi	r28, 0x00	; 0
    b662:	d0 e0       	ldi	r29, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b664:	8d e0       	ldi	r24, 0x0D	; 13
    b666:	fc 2e       	mov	r15, r28


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b668:	20 e0       	ldi	r18, 0x00	; 0
    b66a:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b66c:	8c 9f       	mul	r24, r28
    b66e:	b0 01       	movw	r22, r0
    b670:	8d 9f       	mul	r24, r29
    b672:	70 0d       	add	r23, r0
    b674:	11 24       	eor	r1, r1
    b676:	69 54       	subi	r22, 0x49	; 73
    b678:	74 4f       	sbci	r23, 0xF4	; 244
    b67a:	49 2f       	mov	r20, r25
    b67c:	50 e0       	ldi	r21, 0x00	; 0
    b67e:	df 01       	movw	r26, r30
    b680:	a4 0f       	add	r26, r20
    b682:	b5 1f       	adc	r27, r21
    b684:	46 0f       	add	r20, r22
    b686:	57 1f       	adc	r21, r23
    b688:	1c 91       	ld	r17, X
    b68a:	da 01       	movw	r26, r20
    b68c:	11 96       	adiw	r26, 0x01	; 1
    b68e:	3c 91       	ld	r19, X
    b690:	13 17       	cp	r17, r19
    b692:	11 f0       	breq	.+4      	; 0xb698 <_Z22Update_Euro_Valve_DataPh+0x4c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    b694:	20 e0       	ldi	r18, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
			{
				i = _kVALVE_ID_LEN;
    b696:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    b698:	2f 5f       	subi	r18, 0xFF	; 255
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    b69a:	9f 5f       	subi	r25, 0xFF	; 255
    b69c:	96 30       	cpi	r25, 0x06	; 6
    b69e:	68 f3       	brcs	.-38     	; 0xb67a <_Z22Update_Euro_Valve_DataPh+0x2e>
			
			id_len++;
		}
		count = 0;
		
		if(id_len == _kVALVE_ID_LEN)
    b6a0:	26 30       	cpi	r18, 0x06	; 6
    b6a2:	09 f0       	breq	.+2      	; 0xb6a6 <_Z22Update_Euro_Valve_DataPh+0x5a>
    b6a4:	b7 c2       	rjmp	.+1390   	; 0xbc14 <_Z22Update_Euro_Valve_DataPh+0x5c8>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6a6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b6aa:	81 30       	cpi	r24, 0x01	; 1
    b6ac:	51 f4       	brne	.+20     	; 0xb6c2 <_Z22Update_Euro_Valve_DataPh+0x76>
			{
				_kSERAIL_MON_WRITE("EURO DATA RECIEVED");                /* for debugging purpose */
    b6ae:	67 e9       	ldi	r22, 0x97	; 151
    b6b0:	7f e1       	ldi	r23, 0x1F	; 31
    b6b2:	82 e5       	ldi	r24, 0x52	; 82
    b6b4:	94 e1       	ldi	r25, 0x14	; 20
    b6b6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    b6ba:	82 e5       	ldi	r24, 0x52	; 82
    b6bc:	94 e1       	ldi	r25, 0x14	; 20
    b6be:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    b6c2:	90 91 93 13 	lds	r25, 0x1393	; 0x801393 <_sRuble_Parameters+0x4c>
    b6c6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b6ca:	91 30       	cpi	r25, 0x01	; 1
    b6cc:	09 f0       	breq	.+2      	; 0xb6d0 <_Z22Update_Euro_Valve_DataPh+0x84>
    b6ce:	3e c1       	rjmp	.+636    	; 0xb94c <_Z22Update_Euro_Valve_DataPh+0x300>
			{
				case _eEURO_VALVE_FAULT_DATA:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6d0:	81 30       	cpi	r24, 0x01	; 1
    b6d2:	51 f4       	brne	.+20     	; 0xb6e8 <_Z22Update_Euro_Valve_DataPh+0x9c>
					{
						_kSERAIL_MON_WRITE("_eEURO_VALVE_FAULT_DATA");                /* for debugging purpose */
    b6d4:	6f e7       	ldi	r22, 0x7F	; 127
    b6d6:	7f e1       	ldi	r23, 0x1F	; 31
    b6d8:	82 e5       	ldi	r24, 0x52	; 82
    b6da:	94 e1       	ldi	r25, 0x14	; 20
    b6dc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    b6e0:	82 e5       	ldi	r24, 0x52	; 82
    b6e2:	94 e1       	ldi	r25, 0x14	; 20
    b6e4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					
					switch(_sRuble_Parameters.Lora_Data_Rx[7])
    b6e8:	90 91 94 13 	lds	r25, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
    b6ec:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b6f0:	99 23       	and	r25, r25
    b6f2:	19 f0       	breq	.+6      	; 0xb6fa <_Z22Update_Euro_Valve_DataPh+0xae>
    b6f4:	91 30       	cpi	r25, 0x01	; 1
    b6f6:	f1 f0       	breq	.+60     	; 0xb734 <_Z22Update_Euro_Valve_DataPh+0xe8>
    b6f8:	64 c0       	rjmp	.+200    	; 0xb7c2 <_Z22Update_Euro_Valve_DataPh+0x176>
					{
						case _eNO_FAULT:
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b6fa:	81 30       	cpi	r24, 0x01	; 1
    b6fc:	51 f4       	brne	.+20     	; 0xb712 <_Z22Update_Euro_Valve_DataPh+0xc6>
							{
								_kSERAIL_MON_WRITE("_eNO_FAULT ");
    b6fe:	63 e7       	ldi	r22, 0x73	; 115
    b700:	7f e1       	ldi	r23, 0x1F	; 31
    b702:	82 e5       	ldi	r24, 0x52	; 82
    b704:	94 e1       	ldi	r25, 0x14	; 20
    b706:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b70a:	82 e5       	ldi	r24, 0x52	; 82
    b70c:	94 e1       	ldi	r25, 0x14	; 20
    b70e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    b712:	8d e0       	ldi	r24, 0x0D	; 13
    b714:	8c 9f       	mul	r24, r28
    b716:	f0 01       	movw	r30, r0
    b718:	8d 9f       	mul	r24, r29
    b71a:	f0 0d       	add	r31, r0
    b71c:	11 24       	eor	r1, r1
    b71e:	e9 54       	subi	r30, 0x49	; 73
    b720:	f4 4f       	sbci	r31, 0xF4	; 244
    b722:	80 91 94 13 	lds	r24, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
    b726:	84 87       	std	Z+12, r24	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
    b728:	81 e0       	ldi	r24, 0x01	; 1
    b72a:	83 87       	std	Z+11, r24	; 0x0b
							_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _sRuble_Parameters.Lora_Data_Rx[9];    /* update valve status data  */
    b72c:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    b730:	82 87       	std	Z+10, r24	; 0x0a
						}break;
    b732:	55 c0       	rjmp	.+170    	; 0xb7de <_Z22Update_Euro_Valve_DataPh+0x192>
						
						case _eLOW_BAT_FAULT:
						{
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    b734:	2d e0       	ldi	r18, 0x0D	; 13
    b736:	2c 9f       	mul	r18, r28
    b738:	f0 01       	movw	r30, r0
    b73a:	2d 9f       	mul	r18, r29
    b73c:	f0 0d       	add	r31, r0
    b73e:	11 24       	eor	r1, r1
    b740:	e9 54       	subi	r30, 0x49	; 73
    b742:	f4 4f       	sbci	r31, 0xF4	; 244
    b744:	94 87       	std	Z+12, r25	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_OFFLINE;
    b746:	13 86       	std	Z+11, r1	; 0x0b
							if(_sRuble_Parameters.Irrigating_Plot == 0) /* if not any plot is irrigating and valve status is still on then off the valve */
    b748:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    b74c:	91 11       	cpse	r25, r1
    b74e:	16 c0       	rjmp	.+44     	; 0xb77c <_Z22Update_Euro_Valve_DataPh+0x130>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    b750:	81 30       	cpi	r24, 0x01	; 1
    b752:	51 f4       	brne	.+20     	; 0xb768 <_Z22Update_Euro_Valve_DataPh+0x11c>
								{
									_kSERAIL_MON_WRITE_NO_LN("not any plot is irrigating");
    b754:	68 e5       	ldi	r22, 0x58	; 88
    b756:	7f e1       	ldi	r23, 0x1F	; 31
    b758:	82 e5       	ldi	r24, 0x52	; 82
    b75a:	94 e1       	ldi	r25, 0x14	; 20
    b75c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    b760:	82 e5       	ldi	r24, 0x52	; 82
    b762:	94 e1       	ldi	r25, 0x14	; 20
    b764:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
								}
								
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    b768:	8d e0       	ldi	r24, 0x0D	; 13
    b76a:	8c 9f       	mul	r24, r28
    b76c:	f0 01       	movw	r30, r0
    b76e:	8d 9f       	mul	r24, r29
    b770:	f0 0d       	add	r31, r0
    b772:	11 24       	eor	r1, r1
    b774:	e9 54       	subi	r30, 0x49	; 73
    b776:	f4 4f       	sbci	r31, 0xF4	; 244
    b778:	81 e0       	ldi	r24, 0x01	; 1
    b77a:	02 c0       	rjmp	.+4      	; 0xb780 <_Z22Update_Euro_Valve_DataPh+0x134>
							}
							else
							{
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status   = _sRuble_Parameters.Lora_Data_Rx[9];
    b77c:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    b780:	82 87       	std	Z+10, r24	; 0x0a
							}
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b782:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b786:	81 30       	cpi	r24, 0x01	; 1
    b788:	51 f4       	brne	.+20     	; 0xb79e <_Z22Update_Euro_Valve_DataPh+0x152>
							{
								_kSERAIL_MON_WRITE_NO_LN("low battery fault");
    b78a:	66 e4       	ldi	r22, 0x46	; 70
    b78c:	7f e1       	ldi	r23, 0x1F	; 31
    b78e:	82 e5       	ldi	r24, 0x52	; 82
    b790:	94 e1       	ldi	r25, 0x14	; 20
    b792:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR(); 
    b796:	82 e5       	ldi	r24, 0x52	; 82
    b798:	94 e1       	ldi	r25, 0x14	; 20
    b79a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							_sGSM_Query.SMS_Alert |= _eEURO_BATT_LOW;
    b79e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    b7a2:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    b7a6:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    b7aa:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    b7ae:	a4 60       	ori	r26, 0x04	; 4
    b7b0:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    b7b4:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    b7b8:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    b7bc:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
						}break;
    b7c0:	0e c0       	rjmp	.+28     	; 0xb7de <_Z22Update_Euro_Valve_DataPh+0x192>
						
						default:
						{
							/* Fault not matched */
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7c2:	81 30       	cpi	r24, 0x01	; 1
    b7c4:	51 f4       	brne	.+20     	; 0xb7da <_Z22Update_Euro_Valve_DataPh+0x18e>
							{
								_kSERAIL_MON_WRITE("default command ");
    b7c6:	65 e3       	ldi	r22, 0x35	; 53
    b7c8:	7f e1       	ldi	r23, 0x1F	; 31
    b7ca:	82 e5       	ldi	r24, 0x52	; 82
    b7cc:	94 e1       	ldi	r25, 0x14	; 20
    b7ce:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b7d2:	82 e5       	ldi	r24, 0x52	; 82
    b7d4:	94 e1       	ldi	r25, 0x14	; 20
    b7d6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
							}
							
							return 0;
    b7da:	80 e0       	ldi	r24, 0x00	; 0
    b7dc:	21 c2       	rjmp	.+1090   	; 0xbc20 <_Z22Update_Euro_Valve_DataPh+0x5d4>
						}break;
					}
					
					_sEuro_Valve_Param[valve_number].Euro_Battery_Level  = (_sRuble_Parameters.Lora_Data_Rx[10]<<8) | (_sRuble_Parameters.Lora_Data_Rx[11]);      /* update battery level */
    b7de:	8d e0       	ldi	r24, 0x0D	; 13
    b7e0:	8c 9f       	mul	r24, r28
    b7e2:	80 01       	movw	r16, r0
    b7e4:	8d 9f       	mul	r24, r29
    b7e6:	10 0d       	add	r17, r0
    b7e8:	11 24       	eor	r1, r1
    b7ea:	09 54       	subi	r16, 0x49	; 73
    b7ec:	14 4f       	sbci	r17, 0xF4	; 244
    b7ee:	80 91 97 13 	lds	r24, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
    b7f2:	90 91 98 13 	lds	r25, 0x1398	; 0x801398 <_sRuble_Parameters+0x51>
    b7f6:	98 27       	eor	r25, r24
    b7f8:	89 27       	eor	r24, r25
    b7fa:	98 27       	eor	r25, r24
    b7fc:	f8 01       	movw	r30, r16
    b7fe:	91 87       	std	Z+9, r25	; 0x09
    b800:	80 87       	std	Z+8, r24	; 0x08
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b802:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b806:	81 30       	cpi	r24, 0x01	; 1
    b808:	09 f0       	breq	.+2      	; 0xb80c <_Z22Update_Euro_Valve_DataPh+0x1c0>
    b80a:	52 c0       	rjmp	.+164    	; 0xb8b0 <_Z22Update_Euro_Valve_DataPh+0x264>
					{
						_kSERAIL_MON_WRITE_NO_LN("Data recvd From Euro : "); 
    b80c:	6d e1       	ldi	r22, 0x1D	; 29
    b80e:	7f e1       	ldi	r23, 0x1F	; 31
    b810:	82 e5       	ldi	r24, 0x52	; 82
    b812:	94 e1       	ldi	r25, 0x14	; 20
    b814:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                         /* for debugging purpose */
    b818:	82 e5       	ldi	r24, 0x52	; 82
    b81a:	94 e1       	ldi	r25, 0x14	; 20
    b81c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Number);
    b820:	4a e0       	ldi	r20, 0x0A	; 10
    b822:	50 e0       	ldi	r21, 0x00	; 0
    b824:	d8 01       	movw	r26, r16
    b826:	6c 91       	ld	r22, X
    b828:	82 e5       	ldi	r24, 0x52	; 82
    b82a:	94 e1       	ldi	r25, 0x14	; 20
    b82c:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    b830:	82 e5       	ldi	r24, 0x52	; 82
    b832:	94 e1       	ldi	r25, 0x14	; 20
    b834:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Battery level : ");                                 /* for debugging purpose */
    b838:	6c e0       	ldi	r22, 0x0C	; 12
    b83a:	7f e1       	ldi	r23, 0x1F	; 31
    b83c:	82 e5       	ldi	r24, 0x52	; 82
    b83e:	94 e1       	ldi	r25, 0x14	; 20
    b840:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Battery_Level);
    b844:	f8 01       	movw	r30, r16
    b846:	60 85       	ldd	r22, Z+8	; 0x08
    b848:	71 85       	ldd	r23, Z+9	; 0x09
    b84a:	4a e0       	ldi	r20, 0x0A	; 10
    b84c:	50 e0       	ldi	r21, 0x00	; 0
    b84e:	82 e5       	ldi	r24, 0x52	; 82
    b850:	94 e1       	ldi	r25, 0x14	; 20
    b852:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
						_kSERIAL_MON_CLEAR();
    b856:	82 e5       	ldi	r24, 0x52	; 82
    b858:	94 e1       	ldi	r25, 0x14	; 20
    b85a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Euro online/offline : ");      
    b85e:	65 ef       	ldi	r22, 0xF5	; 245
    b860:	7e e1       	ldi	r23, 0x1E	; 30
    b862:	82 e5       	ldi	r24, 0x52	; 82
    b864:	94 e1       	ldi	r25, 0x14	; 20
    b866:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                     /* for debugging purpose */
    b86a:	82 e5       	ldi	r24, 0x52	; 82
    b86c:	94 e1       	ldi	r25, 0x14	; 20
    b86e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Online);
    b872:	4a e0       	ldi	r20, 0x0A	; 10
    b874:	50 e0       	ldi	r21, 0x00	; 0
    b876:	d8 01       	movw	r26, r16
    b878:	1b 96       	adiw	r26, 0x0b	; 11
    b87a:	6c 91       	ld	r22, X
    b87c:	82 e5       	ldi	r24, 0x52	; 82
    b87e:	94 e1       	ldi	r25, 0x14	; 20
    b880:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						_kSERAIL_MON_WRITE_NO_LN("Euro status : "); 
    b884:	66 ee       	ldi	r22, 0xE6	; 230
    b886:	7e e1       	ldi	r23, 0x1E	; 30
    b888:	82 e5       	ldi	r24, 0x52	; 82
    b88a:	94 e1       	ldi	r25, 0x14	; 20
    b88c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                                  /* for debugging purpose */
    b890:	82 e5       	ldi	r24, 0x52	; 82
    b892:	94 e1       	ldi	r25, 0x14	; 20
    b894:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Status);
    b898:	4a e0       	ldi	r20, 0x0A	; 10
    b89a:	50 e0       	ldi	r21, 0x00	; 0
    b89c:	f8 01       	movw	r30, r16
    b89e:	62 85       	ldd	r22, Z+10	; 0x0a
    b8a0:	82 e5       	ldi	r24, 0x52	; 82
    b8a2:	94 e1       	ldi	r25, 0x14	; 20
    b8a4:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    b8a8:	82 e5       	ldi	r24, 0x52	; 82
    b8aa:	94 e1       	ldi	r25, 0x14	; 20
    b8ac:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    b8b0:	84 e1       	ldi	r24, 0x14	; 20
    b8b2:	e9 e7       	ldi	r30, 0x79	; 121
    b8b4:	f3 e1       	ldi	r31, 0x13	; 19
    b8b6:	df 01       	movw	r26, r30
    b8b8:	1d 92       	st	X+, r1
    b8ba:	8a 95       	dec	r24
    b8bc:	e9 f7       	brne	.-6      	; 0xb8b8 <_Z22Update_Euro_Valve_DataPh+0x26c>
    b8be:	8f 01       	movw	r16, r30
    b8c0:	8d e0       	ldi	r24, 0x0D	; 13
    b8c2:	8c 9f       	mul	r24, r28
    b8c4:	a0 01       	movw	r20, r0
    b8c6:	8d 9f       	mul	r24, r29
    b8c8:	50 0d       	add	r21, r0
    b8ca:	11 24       	eor	r1, r1
    b8cc:	df 01       	movw	r26, r30
    b8ce:	80 e0       	ldi	r24, 0x00	; 0
    b8d0:	90 e0       	ldi	r25, 0x00	; 0
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
    b8d2:	fa 01       	movw	r30, r20
    b8d4:	e8 0f       	add	r30, r24
    b8d6:	f9 1f       	adc	r31, r25
    b8d8:	e9 54       	subi	r30, 0x49	; 73
    b8da:	f4 4f       	sbci	r31, 0xF4	; 244
    b8dc:	21 81       	ldd	r18, Z+1	; 0x01
    b8de:	2d 93       	st	X+, r18
    b8e0:	01 96       	adiw	r24, 0x01	; 1
						_kSERIAL_MON_CLEAR();
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
    b8e2:	86 30       	cpi	r24, 0x06	; 6
    b8e4:	91 05       	cpc	r25, r1
    b8e6:	a9 f7       	brne	.-22     	; 0xb8d2 <_Z22Update_Euro_Valve_DataPh+0x286>
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
					}
					_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_FAULT_DATA;
    b8e8:	81 e0       	ldi	r24, 0x01	; 1
    b8ea:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x38>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Lora_Data_Rx[7];
    b8ee:	80 91 94 13 	lds	r24, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
    b8f2:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x39>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
    b8f6:	8d e0       	ldi	r24, 0x0D	; 13
    b8f8:	8c 9f       	mul	r24, r28
    b8fa:	f0 01       	movw	r30, r0
    b8fc:	8d 9f       	mul	r24, r29
    b8fe:	f0 0d       	add	r31, r0
    b900:	11 24       	eor	r1, r1
    b902:	e9 54       	subi	r30, 0x49	; 73
    b904:	f4 4f       	sbci	r31, 0xF4	; 244
    b906:	83 85       	ldd	r24, Z+11	; 0x0b
    b908:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x3a>
			switch(_sRuble_Parameters.Lora_Data_TX[6])
			{
				case _eEURO_VALVE_FAULT_DATA:
				case _eVALVE_OFFLINE_FAULT:
				{
					_sRuble_Parameters.Last_Valve = valve_number;   /* update last valve number to publish the data */
    b90c:	f0 92 f9 13 	sts	0x13F9, r15	; 0x8013f9 <_sRuble_Parameters+0xb2>
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
    b910:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    b914:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    b918:	80 68       	ori	r24, 0x80	; 128
    b91a:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    b91e:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
					Euro_Data_EEPROM(valve_number);
    b922:	8f 2d       	mov	r24, r15
    b924:	1f de       	rcall	.-962    	; 0xb564 <_Z16Euro_Data_EEPROMh>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
    b926:	40 91 a2 13 	lds	r20, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    b92a:	ce 01       	movw	r24, r28
    b92c:	88 0f       	add	r24, r24
    b92e:	99 1f       	adc	r25, r25
    b930:	44 23       	and	r20, r20
    b932:	09 f4       	brne	.+2      	; 0xb936 <_Z22Update_Euro_Valve_DataPh+0x2ea>
    b934:	94 c0       	rjmp	.+296    	; 0xba5e <_Z22Update_Euro_Valve_DataPh+0x412>
    b936:	9c 01       	movw	r18, r24
    b938:	2c 0f       	add	r18, r28
    b93a:	3d 1f       	adc	r19, r29
    b93c:	2f 5f       	subi	r18, 0xFF	; 255
    b93e:	3f 4f       	sbci	r19, 0xFF	; 255
    b940:	b6 e0       	ldi	r27, 0x06	; 6
    b942:	4b 9f       	mul	r20, r27
    b944:	a0 01       	movw	r20, r0
    b946:	11 24       	eor	r1, r1
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b948:	e3 e0       	ldi	r30, 0x03	; 3
    b94a:	1b c0       	rjmp	.+54     	; 0xb982 <_Z22Update_Euro_Valve_DataPh+0x336>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
				}break;
				
				default:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b94c:	81 30       	cpi	r24, 0x01	; 1
    b94e:	09 f0       	breq	.+2      	; 0xb952 <_Z22Update_Euro_Valve_DataPh+0x306>
    b950:	44 cf       	rjmp	.-376    	; 0xb7da <_Z22Update_Euro_Valve_DataPh+0x18e>
					{
						_kSERAIL_MON_WRITE("EURO PACKET IS NOT APPLICABLE");
    b952:	68 ec       	ldi	r22, 0xC8	; 200
    b954:	7e e1       	ldi	r23, 0x1E	; 30
    b956:	39 cf       	rjmp	.-398    	; 0xb7ca <_Z22Update_Euro_Valve_DataPh+0x17e>
    b958:	da 01       	movw	r26, r20
    b95a:	a6 0f       	add	r26, r22
    b95c:	b7 1f       	adc	r27, r23
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b95e:	a8 50       	subi	r26, 0x08	; 8
    b960:	b3 4f       	sbci	r27, 0xF3	; 243
    b962:	ac 91       	ld	r26, X
    b964:	b0 e0       	ldi	r27, 0x00	; 0
    b966:	a2 17       	cp	r26, r18
    b968:	b3 07       	cpc	r27, r19
    b96a:	71 f0       	breq	.+28     	; 0xb988 <_Z22Update_Euro_Valve_DataPh+0x33c>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    b96c:	6f 5f       	subi	r22, 0xFF	; 255
    b96e:	7f 4f       	sbci	r23, 0xFF	; 255
    b970:	65 30       	cpi	r22, 0x05	; 5
    b972:	71 05       	cpc	r23, r1
    b974:	89 f7       	brne	.-30     	; 0xb958 <_Z22Update_Euro_Valve_DataPh+0x30c>
    b976:	e1 50       	subi	r30, 0x01	; 1
    b978:	2f 5f       	subi	r18, 0xFF	; 255
    b97a:	3f 4f       	sbci	r19, 0xFF	; 255
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
					Euro_Data_EEPROM(valve_number);
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    b97c:	ee 23       	and	r30, r30
    b97e:	09 f4       	brne	.+2      	; 0xb982 <_Z22Update_Euro_Valve_DataPh+0x336>
    b980:	6e c0       	rjmp	.+220    	; 0xba5e <_Z22Update_Euro_Valve_DataPh+0x412>
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    b982:	60 e0       	ldi	r22, 0x00	; 0
    b984:	70 e0       	ldi	r23, 0x00	; 0
    b986:	e8 cf       	rjmp	.-48     	; 0xb958 <_Z22Update_Euro_Valve_DataPh+0x30c>
								{
									/********* if valve is on and there is some fault then stop the irrigation process **********/
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b988:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b98c:	81 30       	cpi	r24, 0x01	; 1
    b98e:	51 f4       	brne	.+20     	; 0xb9a4 <_Z22Update_Euro_Valve_DataPh+0x358>
									{
										_kSERAIL_MON_WRITE("valve fault occure please turn off the pump");
    b990:	6c e9       	ldi	r22, 0x9C	; 156
    b992:	7e e1       	ldi	r23, 0x1E	; 30
    b994:	82 e5       	ldi	r24, 0x52	; 82
    b996:	94 e1       	ldi	r25, 0x14	; 20
    b998:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b99c:	82 e5       	ldi	r24, 0x52	; 82
    b99e:	94 e1       	ldi	r25, 0x14	; 20
    b9a0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
									}
									_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_SUSPENDED;   // suspend the operation if fault occur in running valve
    b9a4:	81 e0       	ldi	r24, 0x01	; 1
    b9a6:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
									// turn off the pump immediately
									if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    b9aa:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    b9ae:	81 11       	cpse	r24, r1
    b9b0:	13 c0       	rjmp	.+38     	; 0xb9d8 <_Z22Update_Euro_Valve_DataPh+0x38c>
									{
										if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    b9b2:	8a e0       	ldi	r24, 0x0A	; 10
    b9b4:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    b9b8:	01 97       	sbiw	r24, 0x01	; 1
    b9ba:	21 f0       	breq	.+8      	; 0xb9c4 <_Z22Update_Euro_Valve_DataPh+0x378>
										{
											_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    b9bc:	61 e0       	ldi	r22, 0x01	; 1
    b9be:	8a e0       	ldi	r24, 0x0A	; 10
    b9c0:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
										}
										
										if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    b9c4:	8b e0       	ldi	r24, 0x0B	; 11
    b9c6:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    b9ca:	01 97       	sbiw	r24, 0x01	; 1
    b9cc:	71 f1       	breq	.+92     	; 0xba2a <_Z22Update_Euro_Valve_DataPh+0x3de>
										{
											_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    b9ce:	61 e0       	ldi	r22, 0x01	; 1
    b9d0:	8b e0       	ldi	r24, 0x0B	; 11
    b9d2:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
    b9d6:	29 c0       	rjmp	.+82     	; 0xba2a <_Z22Update_Euro_Valve_DataPh+0x3de>
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b9d8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    b9dc:	81 30       	cpi	r24, 0x01	; 1
    b9de:	51 f4       	brne	.+20     	; 0xb9f4 <_Z22Update_Euro_Valve_DataPh+0x3a8>
										{
											_kSERAIL_MON_WRITE("wl pump trigger 11111111111111111111");
    b9e0:	67 e7       	ldi	r22, 0x77	; 119
    b9e2:	7e e1       	ldi	r23, 0x1E	; 30
    b9e4:	82 e5       	ldi	r24, 0x52	; 82
    b9e6:	94 e1       	ldi	r25, 0x14	; 20
    b9e8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b9ec:	82 e5       	ldi	r24, 0x52	; 82
    b9ee:	94 e1       	ldi	r25, 0x14	; 20
    b9f0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
										}
										if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    b9f4:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    b9f8:	62 50       	subi	r22, 0x02	; 2
    b9fa:	84 e0       	ldi	r24, 0x04	; 4
    b9fc:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
    ba00:	81 11       	cpse	r24, r1
    ba02:	10 c0       	rjmp	.+32     	; 0xba24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
										}
										else
										{
											if(_sRuble_Parameters.Irrigating_Plot == _kRESET 
    ba04:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    ba08:	81 11       	cpse	r24, r1
    ba0a:	0c c0       	rjmp	.+24     	; 0xba24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    ba0c:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    ba10:	81 30       	cpi	r24, 0x01	; 1
    ba12:	41 f0       	breq	.+16     	; 0xba24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    ba14:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
    ba18:	81 30       	cpi	r24, 0x01	; 1
    ba1a:	21 f0       	breq	.+8      	; 0xba24 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    ba1c:	81 e0       	ldi	r24, 0x01	; 1
    ba1e:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xc0>
    ba22:	02 c0       	rjmp	.+4      	; 0xba28 <_Z22Update_Euro_Valve_DataPh+0x3dc>
											}
											else
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;	
    ba24:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
											}
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    ba28:	86 dd       	rcall	.-1268   	; 0xb536 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
										}
									}				
									_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    ba2a:	8d e0       	ldi	r24, 0x0D	; 13
    ba2c:	8c 9f       	mul	r24, r28
    ba2e:	f0 01       	movw	r30, r0
    ba30:	8d 9f       	mul	r24, r29
    ba32:	f0 0d       	add	r31, r0
    ba34:	11 24       	eor	r1, r1
    ba36:	e9 54       	subi	r30, 0x49	; 73
    ba38:	f4 4f       	sbci	r31, 0xF4	; 244
    ba3a:	91 e0       	ldi	r25, 0x01	; 1
    ba3c:	92 87       	std	Z+10, r25	; 0x0a
									_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    ba3e:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    ba42:	84 e6       	ldi	r24, 0x64	; 100
    ba44:	90 e0       	ldi	r25, 0x00	; 0
    ba46:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    ba4a:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba4e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ba52:	81 30       	cpi	r24, 0x01	; 1
    ba54:	09 f0       	breq	.+2      	; 0xba58 <_Z22Update_Euro_Valve_DataPh+0x40c>
    ba56:	9b c0       	rjmp	.+310    	; 0xbb8e <_Z22Update_Euro_Valve_DataPh+0x542>
									{
										_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW");
    ba58:	64 e6       	ldi	r22, 0x64	; 100
    ba5a:	7e e1       	ldi	r23, 0x1E	; 30
    ba5c:	94 c0       	rjmp	.+296    	; 0xbb86 <_Z22Update_Euro_Valve_DataPh+0x53a>
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    ba5e:	8c 0f       	add	r24, r28
    ba60:	9d 1f       	adc	r25, r29
    ba62:	e1 e8       	ldi	r30, 0x81	; 129
    ba64:	fd e0       	ldi	r31, 0x0D	; 13
    ba66:	20 e0       	ldi	r18, 0x00	; 0
    ba68:	30 e0       	ldi	r19, 0x00	; 0
    ba6a:	7c 01       	movw	r14, r24
    ba6c:	44 e0       	ldi	r20, 0x04	; 4
    ba6e:	e4 0e       	add	r14, r20
    ba70:	f1 1c       	adc	r15, r1
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
    ba72:	41 81       	ldd	r20, Z+1	; 0x01
    ba74:	44 23       	and	r20, r20
    ba76:	09 f4       	brne	.+2      	; 0xba7a <_Z22Update_Euro_Valve_DataPh+0x42e>
    ba78:	a0 c0       	rjmp	.+320    	; 0xbbba <_Z22Update_Euro_Valve_DataPh+0x56e>
    ba7a:	ac 01       	movw	r20, r24
    ba7c:	4f 5f       	subi	r20, 0xFF	; 255
    ba7e:	5f 4f       	sbci	r21, 0xFF	; 255
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    ba80:	60 e0       	ldi	r22, 0x00	; 0
    ba82:	70 e0       	ldi	r23, 0x00	; 0
    ba84:	df 01       	movw	r26, r30
    ba86:	a6 0f       	add	r26, r22
    ba88:	b7 1f       	adc	r27, r23
    ba8a:	15 96       	adiw	r26, 0x05	; 5
    ba8c:	ac 91       	ld	r26, X
    ba8e:	b0 e0       	ldi	r27, 0x00	; 0
    ba90:	a4 17       	cp	r26, r20
    ba92:	b5 07       	cpc	r27, r21
    ba94:	09 f0       	breq	.+2      	; 0xba98 <_Z22Update_Euro_Valve_DataPh+0x44c>
    ba96:	85 c0       	rjmp	.+266    	; 0xbba2 <_Z22Update_Euro_Valve_DataPh+0x556>
								{
									if(_sExtra_Plot[check_plot].On_Off_Status == _kSET || _sExtra_Plot[check_plot].Auto_Operation == _kSET)
    ba98:	a0 81       	ld	r26, Z
    ba9a:	a1 11       	cpse	r26, r1
    ba9c:	04 c0       	rjmp	.+8      	; 0xbaa6 <_Z22Update_Euro_Valve_DataPh+0x45a>
    ba9e:	a1 8d       	ldd	r26, Z+25	; 0x19
    baa0:	a1 30       	cpi	r26, 0x01	; 1
    baa2:	09 f0       	breq	.+2      	; 0xbaa6 <_Z22Update_Euro_Valve_DataPh+0x45a>
    baa4:	7e c0       	rjmp	.+252    	; 0xbba2 <_Z22Update_Euro_Valve_DataPh+0x556>
									{
										if((check_plot+_kEXTRA_PLOT_START_FROM) == _kFOOGER_PLOT_NUMBER)
    baa6:	23 30       	cpi	r18, 0x03	; 3
    baa8:	31 05       	cpc	r19, r1
    baaa:	09 f0       	breq	.+2      	; 0xbaae <_Z22Update_Euro_Valve_DataPh+0x462>
    baac:	7a c0       	rjmp	.+244    	; 0xbba2 <_Z22Update_Euro_Valve_DataPh+0x556>
										{
											/********* if valve is on and there is some fault then stop the irrigation process **********/
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    baae:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    bab2:	81 30       	cpi	r24, 0x01	; 1
    bab4:	51 f4       	brne	.+20     	; 0xbaca <_Z22Update_Euro_Valve_DataPh+0x47e>
											{
												_kSERAIL_MON_WRITE("fogger: valve fault occure please turn off the pump");
    bab6:	60 e3       	ldi	r22, 0x30	; 48
    bab8:	7e e1       	ldi	r23, 0x1E	; 30
    baba:	82 e5       	ldi	r24, 0x52	; 82
    babc:	94 e1       	ldi	r25, 0x14	; 20
    babe:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();	
    bac2:	82 e5       	ldi	r24, 0x52	; 82
    bac4:	94 e1       	ldi	r25, 0x14	; 20
    bac6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
											}
											if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    baca:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    bace:	81 11       	cpse	r24, r1
    bad0:	13 c0       	rjmp	.+38     	; 0xbaf8 <_Z22Update_Euro_Valve_DataPh+0x4ac>
											{
												if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    bad2:	8a e0       	ldi	r24, 0x0A	; 10
    bad4:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    bad8:	01 97       	sbiw	r24, 0x01	; 1
    bada:	21 f0       	breq	.+8      	; 0xbae4 <_Z22Update_Euro_Valve_DataPh+0x498>
												{
													_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    badc:	61 e0       	ldi	r22, 0x01	; 1
    bade:	8a e0       	ldi	r24, 0x0A	; 10
    bae0:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
												}
												
												if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    bae4:	8b e0       	ldi	r24, 0x0B	; 11
    bae6:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    baea:	01 97       	sbiw	r24, 0x01	; 1
    baec:	71 f1       	breq	.+92     	; 0xbb4a <_Z22Update_Euro_Valve_DataPh+0x4fe>
												{
													_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    baee:	61 e0       	ldi	r22, 0x01	; 1
    baf0:	8b e0       	ldi	r24, 0x0B	; 11
    baf2:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
    baf6:	29 c0       	rjmp	.+82     	; 0xbb4a <_Z22Update_Euro_Valve_DataPh+0x4fe>
												}
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    baf8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    bafc:	81 30       	cpi	r24, 0x01	; 1
    bafe:	51 f4       	brne	.+20     	; 0xbb14 <_Z22Update_Euro_Valve_DataPh+0x4c8>
												{
													_kSERAIL_MON_WRITE("wl pump trigger 000000000000000000");
    bb00:	6d e0       	ldi	r22, 0x0D	; 13
    bb02:	7e e1       	ldi	r23, 0x1E	; 30
    bb04:	82 e5       	ldi	r24, 0x52	; 82
    bb06:	94 e1       	ldi	r25, 0x14	; 20
    bb08:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    bb0c:	82 e5       	ldi	r24, 0x52	; 82
    bb0e:	94 e1       	ldi	r25, 0x14	; 20
    bb10:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
												}
												if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    bb14:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    bb18:	62 50       	subi	r22, 0x02	; 2
    bb1a:	84 e0       	ldi	r24, 0x04	; 4
    bb1c:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
    bb20:	81 11       	cpse	r24, r1
    bb22:	10 c0       	rjmp	.+32     	; 0xbb44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
												}
												else
												{
													if(_sRuble_Parameters.Irrigating_Plot == _kRESET
    bb24:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    bb28:	81 11       	cpse	r24, r1
    bb2a:	0c c0       	rjmp	.+24     	; 0xbb44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    bb2c:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    bb30:	81 30       	cpi	r24, 0x01	; 1
    bb32:	41 f0       	breq	.+16     	; 0xbb44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    bb34:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
    bb38:	81 30       	cpi	r24, 0x01	; 1
    bb3a:	21 f0       	breq	.+8      	; 0xbb44 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    bb3c:	81 e0       	ldi	r24, 0x01	; 1
    bb3e:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xc0>
    bb42:	02 c0       	rjmp	.+4      	; 0xbb48 <_Z22Update_Euro_Valve_DataPh+0x4fc>
													}
													else
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
    bb44:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
													}
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    bb48:	f6 dc       	rcall	.-1556   	; 0xb536 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
												}
											}
											_sExtra_Plot[check_plot].Run_Timer = _kRESET;
    bb4a:	10 92 d6 0d 	sts	0x0DD6, r1	; 0x800dd6 <_sExtra_Plot+0x55>
    bb4e:	10 92 d5 0d 	sts	0x0DD5, r1	; 0x800dd5 <_sExtra_Plot+0x54>
											_sExtra_Plot[check_plot].One_Touch = _kRESET;					
    bb52:	10 92 dc 0d 	sts	0x0DDC, r1	; 0x800ddc <_sExtra_Plot+0x5b>
											_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bb56:	8d e0       	ldi	r24, 0x0D	; 13
    bb58:	8c 9f       	mul	r24, r28
    bb5a:	f0 01       	movw	r30, r0
    bb5c:	8d 9f       	mul	r24, r29
    bb5e:	f0 0d       	add	r31, r0
    bb60:	11 24       	eor	r1, r1
    bb62:	e9 54       	subi	r30, 0x49	; 73
    bb64:	f4 4f       	sbci	r31, 0xF4	; 244
    bb66:	91 e0       	ldi	r25, 0x01	; 1
    bb68:	92 87       	std	Z+10, r25	; 0x0a
											_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bb6a:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    bb6e:	84 e6       	ldi	r24, 0x64	; 100
    bb70:	90 e0       	ldi	r25, 0x00	; 0
    bb72:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    bb76:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb7a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    bb7e:	81 30       	cpi	r24, 0x01	; 1
    bb80:	31 f4       	brne	.+12     	; 0xbb8e <_Z22Update_Euro_Valve_DataPh+0x542>
											{
												_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW 1 ");
    bb82:	67 ef       	ldi	r22, 0xF7	; 247
    bb84:	7d e1       	ldi	r23, 0x1D	; 29
    bb86:	82 e5       	ldi	r24, 0x52	; 82
    bb88:	94 e1       	ldi	r25, 0x14	; 20
    bb8a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
											}
											_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    bb8e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    bb92:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    bb96:	82 60       	ori	r24, 0x02	; 2
    bb98:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    bb9c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    bba0:	34 c0       	rjmp	.+104    	; 0xbc0a <_Z22Update_Euro_Valve_DataPh+0x5be>
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bba2:	6f 5f       	subi	r22, 0xFF	; 255
    bba4:	7f 4f       	sbci	r23, 0xFF	; 255
    bba6:	65 30       	cpi	r22, 0x05	; 5
    bba8:	71 05       	cpc	r23, r1
    bbaa:	09 f0       	breq	.+2      	; 0xbbae <_Z22Update_Euro_Valve_DataPh+0x562>
    bbac:	6b cf       	rjmp	.-298    	; 0xba84 <_Z22Update_Euro_Valve_DataPh+0x438>
    bbae:	4f 5f       	subi	r20, 0xFF	; 255
    bbb0:	5f 4f       	sbci	r21, 0xFF	; 255
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    bbb2:	4e 15       	cp	r20, r14
    bbb4:	5f 05       	cpc	r21, r15
    bbb6:	09 f0       	breq	.+2      	; 0xbbba <_Z22Update_Euro_Valve_DataPh+0x56e>
    bbb8:	63 cf       	rjmp	.-314    	; 0xba80 <_Z22Update_Euro_Valve_DataPh+0x434>
								}
							}
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
    bbba:	2f 5f       	subi	r18, 0xFF	; 255
    bbbc:	3f 4f       	sbci	r19, 0xFF	; 255
    bbbe:	7b 96       	adiw	r30, 0x1b	; 27
    bbc0:	2e 30       	cpi	r18, 0x0E	; 14
    bbc2:	31 05       	cpc	r19, r1
    bbc4:	09 f0       	breq	.+2      	; 0xbbc8 <_Z22Update_Euro_Valve_DataPh+0x57c>
    bbc6:	55 cf       	rjmp	.-342    	; 0xba72 <_Z22Update_Euro_Valve_DataPh+0x426>
							}
						}						
					}
				}
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    bbc8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    bbcc:	81 30       	cpi	r24, 0x01	; 1
    bbce:	c9 f4       	brne	.+50     	; 0xbc02 <_Z22Update_Euro_Valve_DataPh+0x5b6>
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
    bbd0:	63 ee       	ldi	r22, 0xE3	; 227
    bbd2:	7d e1       	ldi	r23, 0x1D	; 29
    bbd4:	82 e5       	ldi	r24, 0x52	; 82
    bbd6:	94 e1       	ldi	r25, 0x14	; 20
    bbd8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    bbdc:	82 e5       	ldi	r24, 0x52	; 82
    bbde:	94 e1       	ldi	r25, 0x14	; 20
    bbe0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    bbe4:	c2 e8       	ldi	r28, 0x82	; 130
    bbe6:	d3 e1       	ldi	r29, 0x13	; 19
					for(int k =0; k<count; k++)
    bbe8:	c0 17       	cp	r28, r16
    bbea:	d1 07       	cpc	r29, r17
    bbec:	51 f0       	breq	.+20     	; 0xbc02 <_Z22Update_Euro_Valve_DataPh+0x5b6>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
    bbee:	d8 01       	movw	r26, r16
    bbf0:	6d 91       	ld	r22, X+
    bbf2:	8d 01       	movw	r16, r26
    bbf4:	4a e0       	ldi	r20, 0x0A	; 10
    bbf6:	50 e0       	ldi	r21, 0x00	; 0
    bbf8:	82 e5       	ldi	r24, 0x52	; 82
    bbfa:	94 e1       	ldi	r25, 0x14	; 20
    bbfc:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
					_kSERIAL_MON_CLEAR();
					for(int k =0; k<count; k++)
    bc00:	f3 cf       	rjmp	.-26     	; 0xbbe8 <_Z22Update_Euro_Valve_DataPh+0x59c>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
    bc02:	82 e5       	ldi	r24, 0x52	; 82
    bc04:	94 e1       	ldi	r25, 0x14	; 20
    bc06:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
					_kLORA_SEND_DATA(count);
    bc0a:	89 e0       	ldi	r24, 0x09	; 9
    bc0c:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
					}
					_kLORA_SEND_DATA(count);
					_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
				}break;
			}
			return 1;
    bc10:	81 e0       	ldi	r24, 0x01	; 1
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
					_kLORA_SEND_DATA(count);
				}break;
    bc12:	06 c0       	rjmp	.+12     	; 0xbc20 <_Z22Update_Euro_Valve_DataPh+0x5d4>
    bc14:	21 96       	adiw	r28, 0x01	; 1
bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
    bc16:	c7 30       	cpi	r28, 0x07	; 7
    bc18:	d1 05       	cpc	r29, r1
    bc1a:	09 f0       	breq	.+2      	; 0xbc1e <_Z22Update_Euro_Valve_DataPh+0x5d2>
    bc1c:	24 cd       	rjmp	.-1464   	; 0xb666 <_Z22Update_Euro_Valve_DataPh+0x1a>
    bc1e:	dd cd       	rjmp	.-1094   	; 0xb7da <_Z22Update_Euro_Valve_DataPh+0x18e>
			}
			return 1;
		}
	}
	return 0;
}
    bc20:	df 91       	pop	r29
    bc22:	cf 91       	pop	r28
    bc24:	1f 91       	pop	r17
    bc26:	0f 91       	pop	r16
    bc28:	ff 90       	pop	r15
    bc2a:	ef 90       	pop	r14
    bc2c:	08 95       	ret

0000bc2e <_Z25Update_Wireless_Pump_DataPh>:
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bc2e:	1f 93       	push	r17
    bc30:	cf 93       	push	r28
    bc32:	df 93       	push	r29
    bc34:	dc 01       	movw	r26, r24
    bc36:	20 e0       	ldi	r18, 0x00	; 0
    bc38:	30 e0       	ldi	r19, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bc3a:	8b e0       	ldi	r24, 0x0B	; 11
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bc3c:	40 e0       	ldi	r20, 0x00	; 0
    bc3e:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bc40:	82 9f       	mul	r24, r18
    bc42:	f0 01       	movw	r30, r0
    bc44:	83 9f       	mul	r24, r19
    bc46:	f0 0d       	add	r31, r0
    bc48:	11 24       	eor	r1, r1
    bc4a:	ea 56       	subi	r30, 0x6A	; 106
    bc4c:	f4 4f       	sbci	r31, 0xF4	; 244
    bc4e:	69 2f       	mov	r22, r25
    bc50:	70 e0       	ldi	r23, 0x00	; 0
    bc52:	ed 01       	movw	r28, r26
    bc54:	c6 0f       	add	r28, r22
    bc56:	d7 1f       	adc	r29, r23
    bc58:	6e 0f       	add	r22, r30
    bc5a:	7f 1f       	adc	r23, r31
    bc5c:	18 81       	ld	r17, Y
    bc5e:	eb 01       	movw	r28, r22
    bc60:	59 81       	ldd	r21, Y+1	; 0x01
    bc62:	15 17       	cp	r17, r21
    bc64:	11 f0       	breq	.+4      	; 0xbc6a <_Z25Update_Wireless_Pump_DataPh+0x3c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    bc66:	40 e0       	ldi	r20, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
			{
				i = _kVALVE_ID_LEN;
    bc68:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    bc6a:	4f 5f       	subi	r20, 0xFF	; 255
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    bc6c:	9f 5f       	subi	r25, 0xFF	; 255
    bc6e:	96 30       	cpi	r25, 0x06	; 6
    bc70:	70 f3       	brcs	.-36     	; 0xbc4e <_Z25Update_Wireless_Pump_DataPh+0x20>
			}
			
			id_len++;
		}
		count = 0;
		if(id_len == _kVALVE_ID_LEN)
    bc72:	46 30       	cpi	r20, 0x06	; 6
    bc74:	09 f0       	breq	.+2      	; 0xbc78 <_Z25Update_Wireless_Pump_DataPh+0x4a>
    bc76:	59 c0       	rjmp	.+178    	; 0xbd2a <_Z25Update_Wireless_Pump_DataPh+0xfc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    bc78:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    bc7c:	81 30       	cpi	r24, 0x01	; 1
    bc7e:	51 f4       	brne	.+20     	; 0xbc94 <_Z25Update_Wireless_Pump_DataPh+0x66>
			{
				_kSERAIL_MON_WRITE("WIRELESS PUMP DATA RECIEVED");
    bc80:	67 ec       	ldi	r22, 0xC7	; 199
    bc82:	7d e1       	ldi	r23, 0x1D	; 29
    bc84:	82 e5       	ldi	r24, 0x52	; 82
    bc86:	94 e1       	ldi	r25, 0x14	; 20
    bc88:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    bc8c:	82 e5       	ldi	r24, 0x52	; 82
    bc8e:	94 e1       	ldi	r25, 0x14	; 20
    bc90:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			
			pump_number =  _sRuble_Parameters.Lora_Data_Rx[10];
    bc94:	c0 91 97 13 	lds	r28, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
			pump_number = pump_number-1;
    bc98:	c1 50       	subi	r28, 0x01	; 1
			
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    bc9a:	80 91 93 13 	lds	r24, 0x1393	; 0x801393 <_sRuble_Parameters+0x4c>
    bc9e:	82 30       	cpi	r24, 0x02	; 2
    bca0:	b9 f0       	breq	.+46     	; 0xbcd0 <_Z25Update_Wireless_Pump_DataPh+0xa2>
    bca2:	83 30       	cpi	r24, 0x03	; 3
    bca4:	01 f5       	brne	.+64     	; 0xbce6 <_Z25Update_Wireless_Pump_DataPh+0xb8>
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
				}break;
				
				case _eWIRELESS_FAULT:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
    bca6:	8b e0       	ldi	r24, 0x0B	; 11
    bca8:	c8 9f       	mul	r28, r24
    bcaa:	f0 01       	movw	r30, r0
    bcac:	11 24       	eor	r1, r1
    bcae:	ea 56       	subi	r30, 0x6A	; 106
    bcb0:	f4 4f       	sbci	r31, 0xF4	; 244
    bcb2:	92 85       	ldd	r25, Z+10	; 0x0a
    bcb4:	80 91 94 13 	lds	r24, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
    bcb8:	89 2b       	or	r24, r25
    bcba:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
    bcbc:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
    bcc0:	90 91 96 13 	lds	r25, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
    bcc4:	98 27       	eor	r25, r24
    bcc6:	89 27       	eor	r24, r25
    bcc8:	98 27       	eor	r25, r24
    bcca:	91 87       	std	Z+9, r25	; 0x09
    bccc:	80 87       	std	Z+8, r24	; 0x08
				}break;
    bcce:	0b c0       	rjmp	.+22     	; 0xbce6 <_Z25Update_Wireless_Pump_DataPh+0xb8>
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
			{
				case _eCALIBRATION_RESPONSE:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
    bcd0:	db e0       	ldi	r29, 0x0B	; 11
    bcd2:	cd 9f       	mul	r28, r29
    bcd4:	f0 01       	movw	r30, r0
    bcd6:	11 24       	eor	r1, r1
    bcd8:	ea 56       	subi	r30, 0x6A	; 106
    bcda:	f4 4f       	sbci	r31, 0xF4	; 244
    bcdc:	92 85       	ldd	r25, Z+10	; 0x0a
    bcde:	80 91 94 13 	lds	r24, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
    bce2:	89 2b       	or	r24, r25
    bce4:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    bce6:	84 e1       	ldi	r24, 0x14	; 20
    bce8:	e9 e7       	ldi	r30, 0x79	; 121
    bcea:	f3 e1       	ldi	r31, 0x13	; 19
    bcec:	df 01       	movw	r26, r30
    bcee:	1d 92       	st	X+, r1
    bcf0:	8a 95       	dec	r24
    bcf2:	e9 f7       	brne	.-6      	; 0xbcee <_Z25Update_Wireless_Pump_DataPh+0xc0>
    bcf4:	df 01       	movw	r26, r30
    bcf6:	db e0       	ldi	r29, 0x0B	; 11
    bcf8:	cd 9f       	mul	r28, r29
    bcfa:	a0 01       	movw	r20, r0
    bcfc:	11 24       	eor	r1, r1
    bcfe:	80 e0       	ldi	r24, 0x00	; 0
    bd00:	90 e0       	ldi	r25, 0x00	; 0
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
    bd02:	fc 01       	movw	r30, r24
    bd04:	e4 0f       	add	r30, r20
    bd06:	f5 1f       	adc	r31, r21
    bd08:	ea 56       	subi	r30, 0x6A	; 106
    bd0a:	f4 4f       	sbci	r31, 0xF4	; 244
    bd0c:	21 81       	ldd	r18, Z+1	; 0x01
    bd0e:	2d 93       	st	X+, r18
    bd10:	01 96       	adiw	r24, 0x01	; 1
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
    bd12:	86 30       	cpi	r24, 0x06	; 6
    bd14:	91 05       	cpc	r25, r1
    bd16:	a9 f7       	brne	.-22     	; 0xbd02 <_Z25Update_Wireless_Pump_DataPh+0xd4>
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
			}
			
			_sRuble_Parameters.Lora_Data_TX[count++] = _eGOT_DATA;
    bd18:	81 e0       	ldi	r24, 0x01	; 1
    bd1a:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x38>
			
			_kLORA_SEND_DATA(count);
    bd1e:	87 e0       	ldi	r24, 0x07	; 7
    bd20:	f2 d7       	rcall	.+4068   	; 0xcd06 <_Z14Lora_Data_Sendh>
			
			Wireless_Pump_EEPROM(pump_number);
    bd22:	8c 2f       	mov	r24, r28
    bd24:	59 dc       	rcall	.-1870   	; 0xb5d8 <_Z20Wireless_Pump_EEPROMh>
			
			return 1;
    bd26:	81 e0       	ldi	r24, 0x01	; 1
    bd28:	07 c0       	rjmp	.+14     	; 0xbd38 <_Z25Update_Wireless_Pump_DataPh+0x10a>
    bd2a:	2f 5f       	subi	r18, 0xFF	; 255
    bd2c:	3f 4f       	sbci	r19, 0xFF	; 255

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
	unsigned char pump_number=0,i=0,count = 0,id_len;
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
    bd2e:	23 30       	cpi	r18, 0x03	; 3
    bd30:	31 05       	cpc	r19, r1
    bd32:	09 f0       	breq	.+2      	; 0xbd36 <_Z25Update_Wireless_Pump_DataPh+0x108>
    bd34:	83 cf       	rjmp	.-250    	; 0xbc3c <_Z25Update_Wireless_Pump_DataPh+0xe>
			return 1;
			
		}
	}
	
	return 0;
    bd36:	80 e0       	ldi	r24, 0x00	; 0
}
    bd38:	df 91       	pop	r29
    bd3a:	cf 91       	pop	r28
    bd3c:	1f 91       	pop	r17
    bd3e:	08 95       	ret

0000bd40 <_Z13Store_All_APNv>:
    bd40:	08 95       	ret

0000bd42 <_Z16Check_GSM_Signalv>:
// 	sprintf(_sSim_APNs.Jio,"jionet");
}


void Check_GSM_Signal(void)
{
    bd42:	cf 93       	push	r28
    bd44:	df 93       	push	r29
	static unsigned char counter;
	int temp_sig_strenght;
	
	counter++;
    bd46:	80 91 12 0c 	lds	r24, 0x0C12	; 0x800c12 <_ZZ16Check_GSM_SignalvE7counter>
    bd4a:	8f 5f       	subi	r24, 0xFF	; 255
    bd4c:	80 93 12 0c 	sts	0x0C12, r24	; 0x800c12 <_ZZ16Check_GSM_SignalvE7counter>
	
	if(_kSERIAL_AT.available() != 0)
    bd50:	8f e0       	ldi	r24, 0x0F	; 15
    bd52:	96 e1       	ldi	r25, 0x16	; 22
    bd54:	0e 94 63 cf 	call	0x19ec6	; 0x19ec6 <_ZN14HardwareSerial9availableEv>
    bd58:	89 2b       	or	r24, r25
    bd5a:	f1 f5       	brne	.+124    	; 0xbdd8 <_Z16Check_GSM_Signalv+0x96>
	{
		return;
	}
		
	if(_sRuble_Parameters.Sim_Check == _eSIM_INSERTED)
    bd5c:	80 91 f6 13 	lds	r24, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xaf>
    bd60:	82 30       	cpi	r24, 0x02	; 2
    bd62:	c9 f4       	brne	.+50     	; 0xbd96 <_Z16Check_GSM_Signalv+0x54>
	{
		Reading_Time = _kSET;
    bd64:	81 e0       	ldi	r24, 0x01	; 1
    bd66:	80 93 90 0c 	sts	0x0C90, r24	; 0x800c90 <Reading_Time>
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */	
    bd6a:	0e 94 80 69 	call	0xd300	; 0xd300 <_Z18_kGSM_SIG_STRENGTHv>
    bd6e:	ec 01       	movw	r28, r24
		Reading_Time = _kRESET;	
    bd70:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <Reading_Time>
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
    bd74:	4a e0       	ldi	r20, 0x0A	; 10
    bd76:	50 e0       	ldi	r21, 0x00	; 0
    bd78:	bc 01       	movw	r22, r24
    bd7a:	82 e5       	ldi	r24, 0x52	; 82
    bd7c:	94 e1       	ldi	r25, 0x14	; 20
    bd7e:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
	else
	{
		temp_sig_strenght = 0;
	}
	
	if(temp_sig_strenght > 19)                 /* if there is weak signal */
    bd82:	c4 31       	cpi	r28, 0x14	; 20
    bd84:	d1 05       	cpc	r29, r1
    bd86:	4c f0       	brlt	.+18     	; 0xbd9a <_Z16Check_GSM_Signalv+0x58>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    bd88:	80 91 47 13 	lds	r24, 0x1347	; 0x801347 <_sRuble_Parameters>
    bd8c:	88 7f       	andi	r24, 0xF8	; 248
    bd8e:	88 60       	ori	r24, 0x08	; 8
    bd90:	80 93 47 13 	sts	0x1347, r24	; 0x801347 <_sRuble_Parameters>
    bd94:	02 c0       	rjmp	.+4      	; 0xbd9a <_Z16Check_GSM_Signalv+0x58>
		Reading_Time = _kRESET;	
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
	}
	else
	{
		temp_sig_strenght = 0;
    bd96:	c0 e0       	ldi	r28, 0x00	; 0
    bd98:	d0 e0       	ldi	r29, 0x00	; 0
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
	}
	 
	if(temp_sig_strenght < 20 && temp_sig_strenght > 13)   /* if there is moderate signal */
    bd9a:	ce 01       	movw	r24, r28
    bd9c:	0e 97       	sbiw	r24, 0x0e	; 14
    bd9e:	06 97       	sbiw	r24, 0x06	; 6
    bda0:	30 f4       	brcc	.+12     	; 0xbdae <_Z16Check_GSM_Signalv+0x6c>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    bda2:	80 91 47 13 	lds	r24, 0x1347	; 0x801347 <_sRuble_Parameters>
    bda6:	84 7f       	andi	r24, 0xF4	; 244
    bda8:	84 60       	ori	r24, 0x04	; 4
    bdaa:	80 93 47 13 	sts	0x1347, r24	; 0x801347 <_sRuble_Parameters>
	}
	 
	 if(temp_sig_strenght < 14 && temp_sig_strenght > 5)   /* if there is strong signal */
    bdae:	ce 01       	movw	r24, r28
    bdb0:	06 97       	sbiw	r24, 0x06	; 6
    bdb2:	08 97       	sbiw	r24, 0x08	; 8
    bdb4:	28 f4       	brcc	.+10     	; 0xbdc0 <_Z16Check_GSM_Signalv+0x7e>
	{
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    bdb6:	80 91 47 13 	lds	r24, 0x1347	; 0x801347 <_sRuble_Parameters>
    bdba:	82 7f       	andi	r24, 0xF2	; 242
    bdbc:	82 60       	ori	r24, 0x02	; 2
    bdbe:	0a c0       	rjmp	.+20     	; 0xbdd4 <_Z16Check_GSM_Signalv+0x92>
	}
	 
	if(temp_sig_strenght < 5)                           /* if there is no signal */
    bdc0:	c5 30       	cpi	r28, 0x05	; 5
    bdc2:	d1 05       	cpc	r29, r1
    bdc4:	1c f0       	brlt	.+6      	; 0xbdcc <_Z16Check_GSM_Signalv+0x8a>
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
	}
	
	if (temp_sig_strenght >= 99) 
    bdc6:	c3 36       	cpi	r28, 0x63	; 99
    bdc8:	d1 05       	cpc	r29, r1
    bdca:	34 f0       	brlt	.+12     	; 0xbdd8 <_Z16Check_GSM_Signalv+0x96>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
    bdcc:	80 91 47 13 	lds	r24, 0x1347	; 0x801347 <_sRuble_Parameters>
    bdd0:	81 7f       	andi	r24, 0xF1	; 241
    bdd2:	81 60       	ori	r24, 0x01	; 1
    bdd4:	80 93 47 13 	sts	0x1347, r24	; 0x801347 <_sRuble_Parameters>
	}
	
}
    bdd8:	df 91       	pop	r29
    bdda:	cf 91       	pop	r28
    bddc:	08 95       	ret

0000bdde <_Z14Get_Local_Timev>:


void Get_Local_Time(void)
{
    bdde:	8f 92       	push	r8
    bde0:	9f 92       	push	r9
    bde2:	af 92       	push	r10
    bde4:	bf 92       	push	r11
    bde6:	ef 92       	push	r14
    bde8:	ff 92       	push	r15
    bdea:	0f 93       	push	r16
    bdec:	1f 93       	push	r17
    bdee:	cf 93       	push	r28
    bdf0:	df 93       	push	r29
	char i;
	
	for(unsigned char count=0; count <2; count++)
    bdf2:	10 e0       	ldi	r17, 0x00	; 0
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    bdf4:	84 ed       	ldi	r24, 0xD4	; 212
    bdf6:	e8 2e       	mov	r14, r24
    bdf8:	83 e0       	ldi	r24, 0x03	; 3
    bdfa:	f8 2e       	mov	r15, r24
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
	{
		if(count == 0)
    bdfc:	11 11       	cpse	r17, r1
    bdfe:	1f c0       	rjmp	.+62     	; 0xbe3e <_Z14Get_Local_Timev+0x60>
		{
			Reset_Buffer();
    be00:	5c d7       	rcall	.+3768   	; 0xccba <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZU=1"));
    be02:	68 ec       	ldi	r22, 0xC8	; 200
    be04:	70 e2       	ldi	r23, 0x20	; 32
    be06:	8f e0       	ldi	r24, 0x0F	; 15
    be08:	96 e1       	ldi	r25, 0x16	; 22
    be0a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
    be0e:	02 e0       	ldi	r16, 0x02	; 2
    be10:	28 eb       	ldi	r18, 0xB8	; 184
    be12:	3b e0       	ldi	r19, 0x0B	; 11
    be14:	40 e0       	ldi	r20, 0x00	; 0
    be16:	50 e0       	ldi	r21, 0x00	; 0
    be18:	6e e1       	ldi	r22, 0x1E	; 30
    be1a:	73 e0       	ldi	r23, 0x03	; 3
    be1c:	80 e0       	ldi	r24, 0x00	; 0
    be1e:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    be20:	b1 d7       	rcall	.+3938   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    be22:	4b d7       	rcall	.+3734   	; 0xccba <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CTZR=1"));
    be24:	6e eb       	ldi	r22, 0xBE	; 190
    be26:	70 e2       	ldi	r23, 0x20	; 32
    be28:	8f e0       	ldi	r24, 0x0F	; 15
    be2a:	96 e1       	ldi	r25, 0x16	; 22
    be2c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK1",  NULL,3000,2);
    be30:	28 eb       	ldi	r18, 0xB8	; 184
    be32:	3b e0       	ldi	r19, 0x0B	; 11
    be34:	40 e0       	ldi	r20, 0x00	; 0
    be36:	50 e0       	ldi	r21, 0x00	; 0
    be38:	61 e2       	ldi	r22, 0x21	; 33
    be3a:	73 e0       	ldi	r23, 0x03	; 3
		}
		else
		{
			Reset_Buffer();
    be3c:	1e c0       	rjmp	.+60     	; 0xbe7a <_Z14Get_Local_Timev+0x9c>
    be3e:	3d d7       	rcall	.+3706   	; 0xccba <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP=\"in.pool.ntp.org\",22"));
    be40:	61 ea       	ldi	r22, 0xA1	; 161
    be42:	70 e2       	ldi	r23, 0x20	; 32
    be44:	8f e0       	ldi	r24, 0x0F	; 15
    be46:	96 e1       	ldi	r25, 0x16	; 22
    be48:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,5000,2);
    be4c:	02 e0       	ldi	r16, 0x02	; 2
    be4e:	28 e8       	ldi	r18, 0x88	; 136
    be50:	33 e1       	ldi	r19, 0x13	; 19
    be52:	40 e0       	ldi	r20, 0x00	; 0
    be54:	50 e0       	ldi	r21, 0x00	; 0
    be56:	6e e1       	ldi	r22, 0x1E	; 30
    be58:	73 e0       	ldi	r23, 0x03	; 3
    be5a:	80 e0       	ldi	r24, 0x00	; 0
    be5c:	90 e0       	ldi	r25, 0x00	; 0
			Reset_Buffer();
    be5e:	92 d7       	rcall	.+3876   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    be60:	2c d7       	rcall	.+3672   	; 0xccba <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(F("AT+CNTP"));
    be62:	69 e9       	ldi	r22, 0x99	; 153
    be64:	70 e2       	ldi	r23, 0x20	; 32
    be66:	8f e0       	ldi	r24, 0x0F	; 15
    be68:	96 e1       	ldi	r25, 0x16	; 22
    be6a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "+CNTP: 0",  NULL,3000,2);
    be6e:	28 eb       	ldi	r18, 0xB8	; 184
    be70:	3b e0       	ldi	r19, 0x0B	; 11
    be72:	40 e0       	ldi	r20, 0x00	; 0
    be74:	50 e0       	ldi	r21, 0x00	; 0
    be76:	65 e2       	ldi	r22, 0x25	; 37
    be78:	73 e0       	ldi	r23, 0x03	; 3
    be7a:	80 e0       	ldi	r24, 0x00	; 0
    be7c:	90 e0       	ldi	r25, 0x00	; 0
		}
		

		Reset_Buffer();
    be7e:	82 d7       	rcall	.+3844   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    be80:	1c d7       	rcall	.+3640   	; 0xccba <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CCLK?"));
    be82:	60 e9       	ldi	r22, 0x90	; 144
    be84:	70 e2       	ldi	r23, 0x20	; 32
    be86:	8f e0       	ldi	r24, 0x0F	; 15
    be88:	96 e1       	ldi	r25, 0x16	; 22
    be8a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK", NULL,2000,2);
    be8e:	02 e0       	ldi	r16, 0x02	; 2
    be90:	20 ed       	ldi	r18, 0xD0	; 208
    be92:	37 e0       	ldi	r19, 0x07	; 7
    be94:	40 e0       	ldi	r20, 0x00	; 0
    be96:	50 e0       	ldi	r21, 0x00	; 0
    be98:	6e e1       	ldi	r22, 0x1E	; 30
    be9a:	73 e0       	ldi	r23, 0x03	; 3
    be9c:	80 e0       	ldi	r24, 0x00	; 0
    be9e:	90 e0       	ldi	r25, 0x00	; 0
    bea0:	71 d7       	rcall	.+3810   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
    bea2:	6e e2       	ldi	r22, 0x2E	; 46
    bea4:	73 e0       	ldi	r23, 0x03	; 3
    bea6:	89 e6       	ldi	r24, 0x69	; 105
    bea8:	9f e0       	ldi	r25, 0x0F	; 15
    beaa:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    beae:	89 2b       	or	r24, r25
    beb0:	09 f4       	brne	.+2      	; 0xbeb4 <_Z14Get_Local_Timev+0xd6>
    beb2:	0f c1       	rjmp	.+542    	; 0xc0d2 <_Z14Get_Local_Timev+0x2f4>
    beb4:	80 e0       	ldi	r24, 0x00	; 0
    beb6:	90 e0       	ldi	r25, 0x00	; 0
    beb8:	c8 2f       	mov	r28, r24
		{
			for(i=0;i<20;i++)
			{
				if(_gPub_Buff[i] == '+' && _gPub_Buff[i+5] == ':')
    beba:	fc 01       	movw	r30, r24
    bebc:	e7 59       	subi	r30, 0x97	; 151
    bebe:	f0 4f       	sbci	r31, 0xF0	; 240
    bec0:	20 81       	ld	r18, Z
    bec2:	2b 32       	cpi	r18, 0x2B	; 43
    bec4:	31 f4       	brne	.+12     	; 0xbed2 <_Z14Get_Local_Timev+0xf4>
    bec6:	fc 01       	movw	r30, r24
    bec8:	e2 59       	subi	r30, 0x92	; 146
    beca:	f0 4f       	sbci	r31, 0xF0	; 240
    becc:	20 81       	ld	r18, Z
    bece:	2a 33       	cpi	r18, 0x3A	; 58
    bed0:	29 f0       	breq	.+10     	; 0xbedc <_Z14Get_Local_Timev+0xfe>
    bed2:	01 96       	adiw	r24, 0x01	; 1
		_kSERIAL_AT.println(F("AT+CCLK?"));
		Send_AT_Command(NULL, "OK", NULL,2000,2);
		
		if(strstr((char *)_gPub_Buff,"+CCLK") != 0)
		{
			for(i=0;i<20;i++)
    bed4:	84 31       	cpi	r24, 0x14	; 20
    bed6:	91 05       	cpc	r25, r1
    bed8:	79 f7       	brne	.-34     	; 0xbeb8 <_Z14Get_Local_Timev+0xda>
    beda:	c4 e1       	ldi	r28, 0x14	; 20
		{
			return;
		}
		
		/*************************************************** UPDATE TIME AND DATE *********************************************/
		_sRuble_Parameters.Update_Local_Time[0] = ((_gPub_Buff[i+17]-0x30)*10) + (_gPub_Buff[i+18]-0x30);    /* hold hour */
    bedc:	d0 e0       	ldi	r29, 0x00	; 0
    bede:	fe 01       	movw	r30, r28
    bee0:	e6 58       	subi	r30, 0x86	; 134
    bee2:	f0 4f       	sbci	r31, 0xF0	; 240
    bee4:	20 81       	ld	r18, Z
    bee6:	fe 01       	movw	r30, r28
    bee8:	e5 58       	subi	r30, 0x85	; 133
    beea:	f0 4f       	sbci	r31, 0xF0	; 240
    beec:	90 81       	ld	r25, Z
    beee:	22 0f       	add	r18, r18
    bef0:	20 56       	subi	r18, 0x60	; 96
    bef2:	82 2f       	mov	r24, r18
    bef4:	88 0f       	add	r24, r24
    bef6:	88 0f       	add	r24, r24
    bef8:	28 0f       	add	r18, r24
    befa:	90 53       	subi	r25, 0x30	; 48
    befc:	82 2f       	mov	r24, r18
    befe:	89 0f       	add	r24, r25
    bf00:	80 93 73 13 	sts	0x1373, r24	; 0x801373 <_sRuble_Parameters+0x2c>
		_sRuble_Parameters.Update_Local_Time[1] = ((_gPub_Buff[i+20]-0X30)*10) + (_gPub_Buff[i+21]-0X30);    /* hold minute */
    bf04:	fe 01       	movw	r30, r28
    bf06:	e3 58       	subi	r30, 0x83	; 131
    bf08:	f0 4f       	sbci	r31, 0xF0	; 240
    bf0a:	90 81       	ld	r25, Z
    bf0c:	fe 01       	movw	r30, r28
    bf0e:	e2 58       	subi	r30, 0x82	; 130
    bf10:	f0 4f       	sbci	r31, 0xF0	; 240
    bf12:	30 81       	ld	r19, Z
    bf14:	99 0f       	add	r25, r25
    bf16:	90 56       	subi	r25, 0x60	; 96
    bf18:	29 2f       	mov	r18, r25
    bf1a:	22 0f       	add	r18, r18
    bf1c:	22 0f       	add	r18, r18
    bf1e:	29 0f       	add	r18, r25
    bf20:	30 53       	subi	r19, 0x30	; 48
    bf22:	42 2f       	mov	r20, r18
    bf24:	43 0f       	add	r20, r19
    bf26:	40 93 74 13 	sts	0x1374, r20	; 0x801374 <_sRuble_Parameters+0x2d>
		_sRuble_Parameters.Update_Local_Time[2] = ((_gPub_Buff[i+23]-0X30)*10) + (_gPub_Buff[i+24]-0X30);    /* hold second */
    bf2a:	fe 01       	movw	r30, r28
    bf2c:	e0 58       	subi	r30, 0x80	; 128
    bf2e:	f0 4f       	sbci	r31, 0xF0	; 240
    bf30:	90 81       	ld	r25, Z
    bf32:	fe 01       	movw	r30, r28
    bf34:	ef 57       	subi	r30, 0x7F	; 127
    bf36:	f0 4f       	sbci	r31, 0xF0	; 240
    bf38:	20 81       	ld	r18, Z
    bf3a:	99 0f       	add	r25, r25
    bf3c:	90 56       	subi	r25, 0x60	; 96
    bf3e:	39 2f       	mov	r19, r25
    bf40:	33 0f       	add	r19, r19
    bf42:	33 0f       	add	r19, r19
    bf44:	93 0f       	add	r25, r19
    bf46:	20 53       	subi	r18, 0x30	; 48
    bf48:	59 2f       	mov	r21, r25
    bf4a:	52 0f       	add	r21, r18
    bf4c:	50 93 75 13 	sts	0x1375, r21	; 0x801375 <_sRuble_Parameters+0x2e>
		
		_sRuble_Parameters.Current_Time_In_Sec = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]) ;
    bf50:	28 2f       	mov	r18, r24
    bf52:	30 e0       	ldi	r19, 0x00	; 0
    bf54:	a0 e1       	ldi	r26, 0x10	; 16
    bf56:	be e0       	ldi	r27, 0x0E	; 14
    bf58:	0e 94 24 e8 	call	0x1d048	; 0x1d048 <__umulhisi3>
    bf5c:	4b 01       	movw	r8, r22
    bf5e:	5c 01       	movw	r10, r24
    bf60:	24 2f       	mov	r18, r20
    bf62:	30 e0       	ldi	r19, 0x00	; 0
    bf64:	ac e3       	ldi	r26, 0x3C	; 60
    bf66:	b0 e0       	ldi	r27, 0x00	; 0
    bf68:	0e 94 24 e8 	call	0x1d048	; 0x1d048 <__umulhisi3>
    bf6c:	dc 01       	movw	r26, r24
    bf6e:	cb 01       	movw	r24, r22
    bf70:	88 0d       	add	r24, r8
    bf72:	99 1d       	adc	r25, r9
    bf74:	aa 1d       	adc	r26, r10
    bf76:	bb 1d       	adc	r27, r11
    bf78:	85 0f       	add	r24, r21
    bf7a:	91 1d       	adc	r25, r1
    bf7c:	a1 1d       	adc	r26, r1
    bf7e:	b1 1d       	adc	r27, r1
    bf80:	80 93 57 13 	sts	0x1357, r24	; 0x801357 <_sRuble_Parameters+0x10>
    bf84:	90 93 58 13 	sts	0x1358, r25	; 0x801358 <_sRuble_Parameters+0x11>
    bf88:	a0 93 59 13 	sts	0x1359, r26	; 0x801359 <_sRuble_Parameters+0x12>
    bf8c:	b0 93 5a 13 	sts	0x135A, r27	; 0x80135a <_sRuble_Parameters+0x13>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    bf90:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    bf94:	81 30       	cpi	r24, 0x01	; 1
    bf96:	91 f4       	brne	.+36     	; 0xbfbc <_Z14Get_Local_Timev+0x1de>
		{
			Serial.println();
    bf98:	82 e5       	ldi	r24, 0x52	; 82
    bf9a:	94 e1       	ldi	r25, 0x14	; 20
    bf9c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
			_kSERIAL_MON_PRINT_NUM((unsigned long int)_sRuble_Parameters.Current_Time_In_Sec);
    bfa0:	40 91 57 13 	lds	r20, 0x1357	; 0x801357 <_sRuble_Parameters+0x10>
    bfa4:	50 91 58 13 	lds	r21, 0x1358	; 0x801358 <_sRuble_Parameters+0x11>
    bfa8:	60 91 59 13 	lds	r22, 0x1359	; 0x801359 <_sRuble_Parameters+0x12>
    bfac:	70 91 5a 13 	lds	r23, 0x135A	; 0x80135a <_sRuble_Parameters+0x13>
    bfb0:	2a e0       	ldi	r18, 0x0A	; 10
    bfb2:	30 e0       	ldi	r19, 0x00	; 0
    bfb4:	82 e5       	ldi	r24, 0x52	; 82
    bfb6:	94 e1       	ldi	r25, 0x14	; 20
    bfb8:	0e 94 4e d2 	call	0x1a49c	; 0x1a49c <_ZN5Print7printlnEmi>
		}
		
		_sRuble_Parameters.Update_Local_Date[2] = ((_gPub_Buff[i+8]-0X30)*10) +  (_gPub_Buff[i+9]-0X30);      /* hold date */
    bfbc:	fe 01       	movw	r30, r28
    bfbe:	ef 58       	subi	r30, 0x8F	; 143
    bfc0:	f0 4f       	sbci	r31, 0xF0	; 240
    bfc2:	80 81       	ld	r24, Z
    bfc4:	fe 01       	movw	r30, r28
    bfc6:	ee 58       	subi	r30, 0x8E	; 142
    bfc8:	f0 4f       	sbci	r31, 0xF0	; 240
    bfca:	90 81       	ld	r25, Z
    bfcc:	88 0f       	add	r24, r24
    bfce:	80 56       	subi	r24, 0x60	; 96
    bfd0:	28 2f       	mov	r18, r24
    bfd2:	22 0f       	add	r18, r18
    bfd4:	22 0f       	add	r18, r18
    bfd6:	82 0f       	add	r24, r18
    bfd8:	90 53       	subi	r25, 0x30	; 48
    bfda:	89 0f       	add	r24, r25
    bfdc:	80 93 78 13 	sts	0x1378, r24	; 0x801378 <_sRuble_Parameters+0x31>
		_sRuble_Parameters.Update_Local_Date[1] = ((_gPub_Buff[i+11]-0X30)*10) + (_gPub_Buff[i+12]-0X30);     /* hold month */
    bfe0:	fe 01       	movw	r30, r28
    bfe2:	ec 58       	subi	r30, 0x8C	; 140
    bfe4:	f0 4f       	sbci	r31, 0xF0	; 240
    bfe6:	80 81       	ld	r24, Z
    bfe8:	fe 01       	movw	r30, r28
    bfea:	eb 58       	subi	r30, 0x8B	; 139
    bfec:	f0 4f       	sbci	r31, 0xF0	; 240
    bfee:	90 81       	ld	r25, Z
    bff0:	88 0f       	add	r24, r24
    bff2:	80 56       	subi	r24, 0x60	; 96
    bff4:	28 2f       	mov	r18, r24
    bff6:	22 0f       	add	r18, r18
    bff8:	22 0f       	add	r18, r18
    bffa:	82 0f       	add	r24, r18
    bffc:	90 53       	subi	r25, 0x30	; 48
    bffe:	89 0f       	add	r24, r25
    c000:	80 93 77 13 	sts	0x1377, r24	; 0x801377 <_sRuble_Parameters+0x30>
		_sRuble_Parameters.Update_Local_Date[0] = ((_gPub_Buff[i+14]-0X30)*10) + (_gPub_Buff[i+15]-0X30);
    c004:	fe 01       	movw	r30, r28
    c006:	e9 58       	subi	r30, 0x89	; 137
    c008:	f0 4f       	sbci	r31, 0xF0	; 240
    c00a:	80 81       	ld	r24, Z
    c00c:	c8 58       	subi	r28, 0x88	; 136
    c00e:	d0 4f       	sbci	r29, 0xF0	; 240
    c010:	98 81       	ld	r25, Y
    c012:	88 0f       	add	r24, r24
    c014:	80 56       	subi	r24, 0x60	; 96
    c016:	28 2f       	mov	r18, r24
    c018:	22 0f       	add	r18, r18
    c01a:	22 0f       	add	r18, r18
    c01c:	82 0f       	add	r24, r18
    c01e:	90 53       	subi	r25, 0x30	; 48
    c020:	89 0f       	add	r24, r25
    c022:	80 93 76 13 	sts	0x1376, r24	; 0x801376 <_sRuble_Parameters+0x2f>
		
		/* hold year */
		_sRuble_Parameters.Update_Local_Date[0] = _sRuble_Parameters.Update_Local_Date[0];
		_sRuble_Parameters.Update_Local_Date[1] = _sRuble_Parameters.Update_Local_Date[1];
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    c026:	e9 e6       	ldi	r30, 0x69	; 105
    c028:	ff e0       	ldi	r31, 0x0F	; 15
    c02a:	df 01       	movw	r26, r30
    c02c:	c7 01       	movw	r24, r14
    c02e:	1d 92       	st	X+, r1
    c030:	01 97       	sbiw	r24, 0x01	; 1
    c032:	e9 f7       	brne	.-6      	; 0xc02e <_Z14Get_Local_Timev+0x250>
		
		_kSERAIL_MON_WRITE("my date : ");
    c034:	65 e8       	ldi	r22, 0x85	; 133
    c036:	70 e2       	ldi	r23, 0x20	; 32
    c038:	82 e5       	ldi	r24, 0x52	; 82
    c03a:	94 e1       	ldi	r25, 0x14	; 20
    c03c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    c040:	4a e0       	ldi	r20, 0x0A	; 10
    c042:	50 e0       	ldi	r21, 0x00	; 0
    c044:	60 91 76 13 	lds	r22, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
    c048:	82 e5       	ldi	r24, 0x52	; 82
    c04a:	94 e1       	ldi	r25, 0x14	; 20
    c04c:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c050:	82 e5       	ldi	r24, 0x52	; 82
    c052:	94 e1       	ldi	r25, 0x14	; 20
    c054:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my month : ");
    c058:	69 e7       	ldi	r22, 0x79	; 121
    c05a:	70 e2       	ldi	r23, 0x20	; 32
    c05c:	82 e5       	ldi	r24, 0x52	; 82
    c05e:	94 e1       	ldi	r25, 0x14	; 20
    c060:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    c064:	4a e0       	ldi	r20, 0x0A	; 10
    c066:	50 e0       	ldi	r21, 0x00	; 0
    c068:	60 91 77 13 	lds	r22, 0x1377	; 0x801377 <_sRuble_Parameters+0x30>
    c06c:	82 e5       	ldi	r24, 0x52	; 82
    c06e:	94 e1       	ldi	r25, 0x14	; 20
    c070:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c074:	82 e5       	ldi	r24, 0x52	; 82
    c076:	94 e1       	ldi	r25, 0x14	; 20
    c078:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my year : ");
    c07c:	6e e6       	ldi	r22, 0x6E	; 110
    c07e:	70 e2       	ldi	r23, 0x20	; 32
    c080:	82 e5       	ldi	r24, 0x52	; 82
    c082:	94 e1       	ldi	r25, 0x14	; 20
    c084:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    c088:	4a e0       	ldi	r20, 0x0A	; 10
    c08a:	50 e0       	ldi	r21, 0x00	; 0
    c08c:	60 91 78 13 	lds	r22, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
    c090:	82 e5       	ldi	r24, 0x52	; 82
    c092:	94 e1       	ldi	r25, 0x14	; 20
    c094:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c098:	82 e5       	ldi	r24, 0x52	; 82
    c09a:	94 e1       	ldi	r25, 0x14	; 20
    c09c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		
		if(_sRuble_Parameters.Update_Local_Time[0] > 23 || _sRuble_Parameters.Update_Local_Time[1] > 59 ||  _sRuble_Parameters.Update_Local_Time[2] > 59)
    c0a0:	80 91 73 13 	lds	r24, 0x1373	; 0x801373 <_sRuble_Parameters+0x2c>
    c0a4:	88 31       	cpi	r24, 0x18	; 24
    c0a6:	a8 f4       	brcc	.+42     	; 0xc0d2 <_Z14Get_Local_Timev+0x2f4>
    c0a8:	80 91 74 13 	lds	r24, 0x1374	; 0x801374 <_sRuble_Parameters+0x2d>
    c0ac:	8c 33       	cpi	r24, 0x3C	; 60
    c0ae:	88 f4       	brcc	.+34     	; 0xc0d2 <_Z14Get_Local_Timev+0x2f4>
    c0b0:	80 91 75 13 	lds	r24, 0x1375	; 0x801375 <_sRuble_Parameters+0x2e>
    c0b4:	8c 33       	cpi	r24, 0x3C	; 60
    c0b6:	68 f4       	brcc	.+26     	; 0xc0d2 <_Z14Get_Local_Timev+0x2f4>
		{
			return;
		}
		_sRuble_Parameters.Display_Update  |= _kTIME_UPDATE;
    c0b8:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    c0bc:	81 60       	ori	r24, 0x01	; 1
    c0be:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sRuble_Parameters+0x1>
		
		if(_sRuble_Parameters.Update_Local_Date[2] != 70)
    c0c2:	80 91 78 13 	lds	r24, 0x1378	; 0x801378 <_sRuble_Parameters+0x31>
    c0c6:	86 34       	cpi	r24, 0x46	; 70
    c0c8:	21 f4       	brne	.+8      	; 0xc0d2 <_Z14Get_Local_Timev+0x2f4>

void Get_Local_Time(void)
{
	char i;
	
	for(unsigned char count=0; count <2; count++)
    c0ca:	1f 5f       	subi	r17, 0xFF	; 255
    c0cc:	12 30       	cpi	r17, 0x02	; 2
    c0ce:	09 f0       	breq	.+2      	; 0xc0d2 <_Z14Get_Local_Timev+0x2f4>
    c0d0:	95 ce       	rjmp	.-726    	; 0xbdfc <_Z14Get_Local_Timev+0x1e>
		{
			return;
		}
	}
	
}
    c0d2:	df 91       	pop	r29
    c0d4:	cf 91       	pop	r28
    c0d6:	1f 91       	pop	r17
    c0d8:	0f 91       	pop	r16
    c0da:	ff 90       	pop	r15
    c0dc:	ef 90       	pop	r14
    c0de:	bf 90       	pop	r11
    c0e0:	af 90       	pop	r10
    c0e2:	9f 90       	pop	r9
    c0e4:	8f 90       	pop	r8
    c0e6:	08 95       	ret

0000c0e8 <_Z16Gsm_Gprs_Networkv>:


bool Gsm_Gprs_Network(void)
{
    c0e8:	ff 92       	push	r15
    c0ea:	0f 93       	push	r16
    c0ec:	1f 93       	push	r17
    c0ee:	cf 93       	push	r28
    c0f0:	df 93       	push	r29
    c0f2:	cd b7       	in	r28, 0x3d	; 61
    c0f4:	de b7       	in	r29, 0x3e	; 62
    c0f6:	c4 56       	subi	r28, 0x64	; 100
    c0f8:	d1 09       	sbc	r29, r1
    c0fa:	0f b6       	in	r0, 0x3f	; 63
    c0fc:	f8 94       	cli
    c0fe:	de bf       	out	0x3e, r29	; 62
    c100:	0f be       	out	0x3f, r0	; 63
    c102:	cd bf       	out	0x3d, r28	; 61
	char temp_data[100];
	unsigned char check_sim;
	/***************************************** wait for the netwrok *******************************************/ 
	check_sim = 0;
	if (_kIS_GSM_CONNECTED())
    c104:	2b d7       	rcall	.+3670   	; 0xcf5c <_Z20Check_Gsm_Connectionv>
    c106:	f8 2e       	mov	r15, r24
    c108:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    c10c:	ff 20       	and	r15, r15
    c10e:	09 f4       	brne	.+2      	; 0xc112 <_Z16Gsm_Gprs_Networkv+0x2a>
    c110:	bf c0       	rjmp	.+382    	; 0xc290 <_Z16Gsm_Gprs_Networkv+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c112:	81 30       	cpi	r24, 0x01	; 1
    c114:	51 f4       	brne	.+20     	; 0xc12a <_Z16Gsm_Gprs_Networkv+0x42>
		{
			_kSERAIL_MON_WRITE("Connected to gsm/GPRS network 0");                /* for debugging purpose */
    c116:	6e e4       	ldi	r22, 0x4E	; 78
    c118:	70 e2       	ldi	r23, 0x20	; 32
    c11a:	82 e5       	ldi	r24, 0x52	; 82
    c11c:	94 e1       	ldi	r25, 0x14	; 20
    c11e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c122:	82 e5       	ldi	r24, 0x52	; 82
    c124:	94 e1       	ldi	r25, 0x14	; 20
    c126:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		memset(temp_data,0,sizeof(temp_data));
    c12a:	8e 01       	movw	r16, r28
    c12c:	0f 5f       	subi	r16, 0xFF	; 255
    c12e:	1f 4f       	sbci	r17, 0xFF	; 255
    c130:	84 e6       	ldi	r24, 0x64	; 100
    c132:	f8 01       	movw	r30, r16
    c134:	11 92       	st	Z+, r1
    c136:	8a 95       	dec	r24
    c138:	e9 f7       	brne	.-6      	; 0xc134 <_Z16Gsm_Gprs_Networkv+0x4c>
		Get_Operator_Name(temp_data);
    c13a:	c8 01       	movw	r24, r16
    c13c:	c1 d7       	rcall	.+3970   	; 0xd0c0 <_Z17Get_Operator_NamePc>
		
		
		if(strstr(temp_data,"Vod") != 0 || strstr(temp_data,"Vi In") != 0)
    c13e:	64 e3       	ldi	r22, 0x34	; 52
    c140:	73 e0       	ldi	r23, 0x03	; 3
    c142:	c8 01       	movw	r24, r16
    c144:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    c148:	89 2b       	or	r24, r25
    c14a:	39 f4       	brne	.+14     	; 0xc15a <_Z16Gsm_Gprs_Networkv+0x72>
    c14c:	68 e3       	ldi	r22, 0x38	; 56
    c14e:	73 e0       	ldi	r23, 0x03	; 3
    c150:	c8 01       	movw	r24, r16
    c152:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    c156:	89 2b       	or	r24, r25
    c158:	49 f0       	breq	.+18     	; 0xc16c <_Z16Gsm_Gprs_Networkv+0x84>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"www"/*_sSim_APNs.Vodafone*/);
    c15a:	6e e3       	ldi	r22, 0x3E	; 62
    c15c:	73 e0       	ldi	r23, 0x03	; 3
    c15e:	84 e5       	ldi	r24, 0x54	; 84
    c160:	9d e0       	ldi	r25, 0x0D	; 13
    c162:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
			_kSERAIL_MON_WRITE("Vodafone");               
    c166:	65 e4       	ldi	r22, 0x45	; 69
    c168:	70 e2       	ldi	r23, 0x20	; 32
    c16a:	2d c0       	rjmp	.+90     	; 0xc1c6 <_Z16Gsm_Gprs_Networkv+0xde>
			_kSERIAL_MON_CLEAR();
			check_sim = 1;
		}
		
		else if (strstr(temp_data,"Air") != 0 || strstr(temp_data,"air") != 0)
    c16c:	62 e4       	ldi	r22, 0x42	; 66
    c16e:	73 e0       	ldi	r23, 0x03	; 3
    c170:	c8 01       	movw	r24, r16
    c172:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    c176:	89 2b       	or	r24, r25
    c178:	39 f4       	brne	.+14     	; 0xc188 <_Z16Gsm_Gprs_Networkv+0xa0>
    c17a:	66 e4       	ldi	r22, 0x46	; 70
    c17c:	73 e0       	ldi	r23, 0x03	; 3
    c17e:	c8 01       	movw	r24, r16
    c180:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    c184:	89 2b       	or	r24, r25
    c186:	49 f0       	breq	.+18     	; 0xc19a <_Z16Gsm_Gprs_Networkv+0xb2>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"airtelgprs.com");
    c188:	6a e4       	ldi	r22, 0x4A	; 74
    c18a:	73 e0       	ldi	r23, 0x03	; 3
    c18c:	84 e5       	ldi	r24, 0x54	; 84
    c18e:	9d e0       	ldi	r25, 0x0D	; 13
    c190:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
			_kSERAIL_MON_WRITE("Airtel");
    c194:	6e e3       	ldi	r22, 0x3E	; 62
    c196:	70 e2       	ldi	r23, 0x20	; 32
    c198:	26 c0       	rjmp	.+76     	; 0xc1e6 <_Z16Gsm_Gprs_Networkv+0xfe>
			/*strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,_sSim_APNs.BSNL);
			_kSERAIL_MON_WRITE("BSNL");               
			_kSERIAL_MON_CLEAR();
		}*/
		
		else if(strstr(temp_data,"jio") != 0  || strstr(temp_data,"Jio")!=0)
    c19a:	69 e5       	ldi	r22, 0x59	; 89
    c19c:	73 e0       	ldi	r23, 0x03	; 3
    c19e:	c8 01       	movw	r24, r16
    c1a0:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    c1a4:	89 2b       	or	r24, r25
    c1a6:	39 f4       	brne	.+14     	; 0xc1b6 <_Z16Gsm_Gprs_Networkv+0xce>
    c1a8:	6d e5       	ldi	r22, 0x5D	; 93
    c1aa:	73 e0       	ldi	r23, 0x03	; 3
    c1ac:	c8 01       	movw	r24, r16
    c1ae:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    c1b2:	89 2b       	or	r24, r25
    c1b4:	b1 f0       	breq	.+44     	; 0xc1e2 <_Z16Gsm_Gprs_Networkv+0xfa>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"jionet"/*_sSim_APNs.Jio*/);
    c1b6:	61 e6       	ldi	r22, 0x61	; 97
    c1b8:	73 e0       	ldi	r23, 0x03	; 3
    c1ba:	84 e5       	ldi	r24, 0x54	; 84
    c1bc:	9d e0       	ldi	r25, 0x0D	; 13
    c1be:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
			_kSERAIL_MON_WRITE("jio");                /* for debugging purpose */
    c1c2:	6a e3       	ldi	r22, 0x3A	; 58
    c1c4:	70 e2       	ldi	r23, 0x20	; 32
    c1c6:	82 e5       	ldi	r24, 0x52	; 82
    c1c8:	94 e1       	ldi	r25, 0x14	; 20
    c1ca:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c1ce:	82 e5       	ldi	r24, 0x52	; 82
    c1d0:	94 e1       	ldi	r25, 0x14	; 20
    c1d2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			//return 0;
		}		
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
    c1d6:	84 e5       	ldi	r24, 0x54	; 84
    c1d8:	9d e0       	ldi	r25, 0x0D	; 13
    c1da:	9f d7       	rcall	.+3902   	; 0xd11a <_Z12Gprs_ConnectPc>
    c1dc:	81 11       	cpse	r24, r1
    c1de:	48 c0       	rjmp	.+144    	; 0xc270 <_Z16Gsm_Gprs_Networkv+0x188>
    c1e0:	0b c0       	rjmp	.+22     	; 0xc1f8 <_Z16Gsm_Gprs_Networkv+0x110>
			check_sim = 1;
		}
		
		else
		{
			_kSERAIL_MON_WRITE("Can't get opeartor Name");                /* for debugging purpose */
    c1e2:	62 e2       	ldi	r22, 0x22	; 34
    c1e4:	70 e2       	ldi	r23, 0x20	; 32
    c1e6:	82 e5       	ldi	r24, 0x52	; 82
    c1e8:	94 e1       	ldi	r25, 0x14	; 20
    c1ea:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c1ee:	82 e5       	ldi	r24, 0x52	; 82
    c1f0:	94 e1       	ldi	r25, 0x14	; 20
    c1f2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    c1f6:	3c c0       	rjmp	.+120    	; 0xc270 <_Z16Gsm_Gprs_Networkv+0x188>
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
			{
				_kSERAIL_MON_WRITE("Fail to Connect GPRS");                /* for debugging purpose */
    c1f8:	6d e0       	ldi	r22, 0x0D	; 13
    c1fa:	70 e2       	ldi	r23, 0x20	; 32
    c1fc:	82 e5       	ldi	r24, 0x52	; 82
    c1fe:	94 e1       	ldi	r25, 0x14	; 20
    c200:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    c204:	82 e5       	ldi	r24, 0x52	; 82
    c206:	94 e1       	ldi	r25, 0x14	; 20
    c208:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				Reset_Buffer();
    c20c:	56 d5       	rcall	.+2732   	; 0xccba <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c20e:	61 e0       	ldi	r22, 0x01	; 1
    c210:	70 e2       	ldi	r23, 0x20	; 32
    c212:	8f e0       	ldi	r24, 0x0F	; 15
    c214:	96 e1       	ldi	r25, 0x16	; 22
    c216:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
    c21a:	01 e0       	ldi	r16, 0x01	; 1
    c21c:	20 e1       	ldi	r18, 0x10	; 16
    c21e:	37 e2       	ldi	r19, 0x27	; 39
    c220:	40 e0       	ldi	r20, 0x00	; 0
    c222:	50 e0       	ldi	r21, 0x00	; 0
    c224:	68 e6       	ldi	r22, 0x68	; 104
    c226:	73 e0       	ldi	r23, 0x03	; 3
    c228:	80 e0       	ldi	r24, 0x00	; 0
    c22a:	90 e0       	ldi	r25, 0x00	; 0
    c22c:	ab d5       	rcall	.+2902   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
				_kDELAY_MS(10000);
    c22e:	60 e1       	ldi	r22, 0x10	; 16
    c230:	77 e2       	ldi	r23, 0x27	; 39
    c232:	80 e0       	ldi	r24, 0x00	; 0
    c234:	90 e0       	ldi	r25, 0x00	; 0
    c236:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
				if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c23a:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
    c23e:	81 30       	cpi	r24, 0x01	; 1
    c240:	31 f0       	breq	.+12     	; 0xc24e <_Z16Gsm_Gprs_Networkv+0x166>
				{
					_kDELAY_MS(120000);
    c242:	60 ec       	ldi	r22, 0xC0	; 192
    c244:	74 ed       	ldi	r23, 0xD4	; 212
    c246:	81 e0       	ldi	r24, 0x01	; 1
    c248:	90 e0       	ldi	r25, 0x00	; 0
    c24a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
				}
				Reset_Buffer();
    c24e:	35 d5       	rcall	.+2666   	; 0xccba <_Z12Reset_Bufferv>
				_kSERIAL_AT.println(F("ATE0"));
    c250:	6c ef       	ldi	r22, 0xFC	; 252
    c252:	7f e1       	ldi	r23, 0x1F	; 31
    c254:	8f e0       	ldi	r24, 0x0F	; 15
    c256:	96 e1       	ldi	r25, 0x16	; 22
    c258:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c25c:	02 e0       	ldi	r16, 0x02	; 2
    c25e:	28 eb       	ldi	r18, 0xB8	; 184
    c260:	3b e0       	ldi	r19, 0x0B	; 11
    c262:	40 e0       	ldi	r20, 0x00	; 0
    c264:	50 e0       	ldi	r21, 0x00	; 0
    c266:	6e e1       	ldi	r22, 0x1E	; 30
    c268:	73 e0       	ldi	r23, 0x03	; 3
    c26a:	80 e0       	ldi	r24, 0x00	; 0
    c26c:	90 e0       	ldi	r25, 0x00	; 0
    c26e:	8a d5       	rcall	.+2836   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
				//return 0;
			}
		}


		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c270:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    c274:	81 30       	cpi	r24, 0x01	; 1
    c276:	09 f0       	breq	.+2      	; 0xc27a <_Z16Gsm_Gprs_Networkv+0x192>
    c278:	49 c0       	rjmp	.+146    	; 0xc30c <_Z16Gsm_Gprs_Networkv+0x224>
		{			
			_kSERAIL_MON_WRITE("Succs Connected to GPRS network");                /* for debugging purpose */
    c27a:	6c ed       	ldi	r22, 0xDC	; 220
    c27c:	7f e1       	ldi	r23, 0x1F	; 31
    c27e:	82 e5       	ldi	r24, 0x52	; 82
    c280:	94 e1       	ldi	r25, 0x14	; 20
    c282:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c286:	82 e5       	ldi	r24, 0x52	; 82
    c288:	94 e1       	ldi	r25, 0x14	; 20
    c28a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    c28e:	3e c0       	rjmp	.+124    	; 0xc30c <_Z16Gsm_Gprs_Networkv+0x224>
		return 1;
		
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c290:	81 30       	cpi	r24, 0x01	; 1
    c292:	51 f4       	brne	.+20     	; 0xc2a8 <_Z16Gsm_Gprs_Networkv+0x1c0>
		{
			_kSERAIL_MON_WRITE("fail to connect gsm/GPRS network");                /* for debugging purpose */
    c294:	6b eb       	ldi	r22, 0xBB	; 187
    c296:	7f e1       	ldi	r23, 0x1F	; 31
    c298:	82 e5       	ldi	r24, 0x52	; 82
    c29a:	94 e1       	ldi	r25, 0x14	; 20
    c29c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c2a0:	82 e5       	ldi	r24, 0x52	; 82
    c2a2:	94 e1       	ldi	r25, 0x14	; 20
    c2a4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		Reset_Buffer();
    c2a8:	08 d5       	rcall	.+2576   	; 0xccba <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c2aa:	6f ea       	ldi	r22, 0xAF	; 175
    c2ac:	7f e1       	ldi	r23, 0x1F	; 31
    c2ae:	8f e0       	ldi	r24, 0x0F	; 15
    c2b0:	96 e1       	ldi	r25, 0x16	; 22
    c2b2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,10000,1);
    c2b6:	01 e0       	ldi	r16, 0x01	; 1
    c2b8:	20 e1       	ldi	r18, 0x10	; 16
    c2ba:	37 e2       	ldi	r19, 0x27	; 39
    c2bc:	40 e0       	ldi	r20, 0x00	; 0
    c2be:	50 e0       	ldi	r21, 0x00	; 0
    c2c0:	6e e1       	ldi	r22, 0x1E	; 30
    c2c2:	73 e0       	ldi	r23, 0x03	; 3
    c2c4:	80 e0       	ldi	r24, 0x00	; 0
    c2c6:	90 e0       	ldi	r25, 0x00	; 0
    c2c8:	5d d5       	rcall	.+2746   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
		_kDELAY_MS(10000);
    c2ca:	60 e1       	ldi	r22, 0x10	; 16
    c2cc:	77 e2       	ldi	r23, 0x27	; 39
    c2ce:	80 e0       	ldi	r24, 0x00	; 0
    c2d0:	90 e0       	ldi	r25, 0x00	; 0
    c2d2:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c2d6:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
    c2da:	81 30       	cpi	r24, 0x01	; 1
		{
			_kDELAY_MS(120000);
    c2dc:	31 f0       	breq	.+12     	; 0xc2ea <_Z16Gsm_Gprs_Networkv+0x202>
    c2de:	60 ec       	ldi	r22, 0xC0	; 192
    c2e0:	74 ed       	ldi	r23, 0xD4	; 212
    c2e2:	81 e0       	ldi	r24, 0x01	; 1
    c2e4:	90 e0       	ldi	r25, 0x00	; 0
    c2e6:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
		}
		Reset_Buffer();
    c2ea:	e7 d4       	rcall	.+2510   	; 0xccba <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(F("ATE0"));
    c2ec:	6a ea       	ldi	r22, 0xAA	; 170
    c2ee:	7f e1       	ldi	r23, 0x1F	; 31
    c2f0:	8f e0       	ldi	r24, 0x0F	; 15
    c2f2:	96 e1       	ldi	r25, 0x16	; 22
    c2f4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c2f8:	02 e0       	ldi	r16, 0x02	; 2
    c2fa:	28 eb       	ldi	r18, 0xB8	; 184
    c2fc:	3b e0       	ldi	r19, 0x0B	; 11
    c2fe:	40 e0       	ldi	r20, 0x00	; 0
    c300:	50 e0       	ldi	r21, 0x00	; 0
    c302:	6e e1       	ldi	r22, 0x1E	; 30
    c304:	73 e0       	ldi	r23, 0x03	; 3
    c306:	80 e0       	ldi	r24, 0x00	; 0
    c308:	90 e0       	ldi	r25, 0x00	; 0
    c30a:	3c d5       	rcall	.+2680   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
		return 0;
	}
	
}
    c30c:	8f 2d       	mov	r24, r15
    c30e:	cc 59       	subi	r28, 0x9C	; 156
    c310:	df 4f       	sbci	r29, 0xFF	; 255
    c312:	0f b6       	in	r0, 0x3f	; 63
    c314:	f8 94       	cli
    c316:	de bf       	out	0x3e, r29	; 62
    c318:	0f be       	out	0x3f, r0	; 63
    c31a:	cd bf       	out	0x3d, r28	; 61
    c31c:	df 91       	pop	r29
    c31e:	cf 91       	pop	r28
    c320:	1f 91       	pop	r17
    c322:	0f 91       	pop	r16
    c324:	ff 90       	pop	r15
    c326:	08 95       	ret

0000c328 <__vector_36>:
		Serial.println(response);
		_kSERIAL_MON_CLEAR();
	}
	sprintf((char *)_gRecvd_Data,"%s",(char *)response);
	return answer;
}
    c328:	1f 92       	push	r1
    c32a:	0f 92       	push	r0
    c32c:	0f b6       	in	r0, 0x3f	; 63
    c32e:	0f 92       	push	r0
    c330:	11 24       	eor	r1, r1
    c332:	0b b6       	in	r0, 0x3b	; 59
    c334:	0f 92       	push	r0
    c336:	2f 93       	push	r18
    c338:	3f 93       	push	r19
    c33a:	8f 93       	push	r24
    c33c:	9f 93       	push	r25
    c33e:	ef 93       	push	r30
    c340:	ff 93       	push	r31
    c342:	80 91 28 0c 	lds	r24, 0x0C28	; 0x800c28 <int_counter>
    c346:	90 91 29 0c 	lds	r25, 0x0C29	; 0x800c29 <int_counter+0x1>
    c34a:	84 3d       	cpi	r24, 0xD4	; 212
    c34c:	93 40       	sbci	r25, 0x03	; 3
    c34e:	a0 f4       	brcc	.+40     	; 0xc378 <__vector_36+0x50>
    c350:	80 91 28 0c 	lds	r24, 0x0C28	; 0x800c28 <int_counter>
    c354:	90 91 29 0c 	lds	r25, 0x0C29	; 0x800c29 <int_counter+0x1>
    c358:	9c 01       	movw	r18, r24
    c35a:	2f 5f       	subi	r18, 0xFF	; 255
    c35c:	3f 4f       	sbci	r19, 0xFF	; 255
    c35e:	30 93 29 0c 	sts	0x0C29, r19	; 0x800c29 <int_counter+0x1>
    c362:	20 93 28 0c 	sts	0x0C28, r18	; 0x800c28 <int_counter>
    c366:	20 91 ce 00 	lds	r18, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
    c36a:	fc 01       	movw	r30, r24
    c36c:	e7 59       	subi	r30, 0x97	; 151
    c36e:	f0 4f       	sbci	r31, 0xF0	; 240
    c370:	20 83       	st	Z, r18
    c372:	81 e0       	ldi	r24, 0x01	; 1
    c374:	80 93 26 0c 	sts	0x0C26, r24	; 0x800c26 <rx_flag>
    c378:	ff 91       	pop	r31
    c37a:	ef 91       	pop	r30
    c37c:	9f 91       	pop	r25
    c37e:	8f 91       	pop	r24
    c380:	3f 91       	pop	r19
    c382:	2f 91       	pop	r18
    c384:	0f 90       	pop	r0
    c386:	0b be       	out	0x3b, r0	; 59
    c388:	0f 90       	pop	r0
    c38a:	0f be       	out	0x3f, r0	; 63
    c38c:	0f 90       	pop	r0
    c38e:	1f 90       	pop	r1
    c390:	18 95       	reti

0000c392 <__vector_12>:
    c392:	1f 92       	push	r1
    c394:	0f 92       	push	r0
    c396:	0f b6       	in	r0, 0x3f	; 63
    c398:	0f 92       	push	r0
    c39a:	11 24       	eor	r1, r1
    c39c:	0b b6       	in	r0, 0x3b	; 59
    c39e:	0f 92       	push	r0
    c3a0:	2f 93       	push	r18
    c3a2:	8f 93       	push	r24
    c3a4:	9f 93       	push	r25
    c3a6:	ef 93       	push	r30
    c3a8:	ff 93       	push	r31
    c3aa:	e7 e0       	ldi	r30, 0x07	; 7
    c3ac:	f1 e0       	ldi	r31, 0x01	; 1
    c3ae:	80 81       	ld	r24, Z
    c3b0:	80 64       	ori	r24, 0x40	; 64
    c3b2:	80 83       	st	Z, r24
    c3b4:	e8 e0       	ldi	r30, 0x08	; 8
    c3b6:	f1 e0       	ldi	r31, 0x01	; 1
    c3b8:	80 81       	ld	r24, Z
    c3ba:	8f 7b       	andi	r24, 0xBF	; 191
    c3bc:	80 83       	st	Z, r24
    c3be:	2f ef       	ldi	r18, 0xFF	; 255
    c3c0:	83 ed       	ldi	r24, 0xD3	; 211
    c3c2:	90 e3       	ldi	r25, 0x30	; 48
    c3c4:	21 50       	subi	r18, 0x01	; 1
    c3c6:	80 40       	sbci	r24, 0x00	; 0
    c3c8:	90 40       	sbci	r25, 0x00	; 0
    c3ca:	e1 f7       	brne	.-8      	; 0xc3c4 <__vector_12+0x32>
    c3cc:	00 c0       	rjmp	.+0      	; 0xc3ce <__vector_12+0x3c>
    c3ce:	00 00       	nop
    c3d0:	80 81       	ld	r24, Z
    c3d2:	80 64       	ori	r24, 0x40	; 64
    c3d4:	80 83       	st	Z, r24
    c3d6:	0f b6       	in	r0, 0x3f	; 63
    c3d8:	f8 94       	cli
    c3da:	a8 95       	wdr
    c3dc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c3e0:	88 61       	ori	r24, 0x18	; 24
    c3e2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c3e6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c3ea:	0f be       	out	0x3f, r0	; 63
    c3ec:	ff 91       	pop	r31
    c3ee:	ef 91       	pop	r30
    c3f0:	9f 91       	pop	r25
    c3f2:	8f 91       	pop	r24
    c3f4:	2f 91       	pop	r18
    c3f6:	0f 90       	pop	r0
    c3f8:	0b be       	out	0x3b, r0	; 59
    c3fa:	0f 90       	pop	r0
    c3fc:	0f be       	out	0x3f, r0	; 63
    c3fe:	0f 90       	pop	r0
    c400:	1f 90       	pop	r1
    c402:	18 95       	reti

0000c404 <_Z20Timer1_Interrupt_Intv>:
    c404:	f8 94       	cli
    c406:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    c40a:	e1 e8       	ldi	r30, 0x81	; 129
    c40c:	f0 e0       	ldi	r31, 0x00	; 0
    c40e:	10 82       	st	Z, r1
    c410:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    c414:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    c418:	88 e0       	ldi	r24, 0x08	; 8
    c41a:	9d e3       	ldi	r25, 0x3D	; 61
    c41c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    c420:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    c424:	80 81       	ld	r24, Z
    c426:	88 60       	ori	r24, 0x08	; 8
    c428:	80 83       	st	Z, r24
    c42a:	80 81       	ld	r24, Z
    c42c:	85 60       	ori	r24, 0x05	; 5
    c42e:	80 83       	st	Z, r24
    c430:	ef e6       	ldi	r30, 0x6F	; 111
    c432:	f0 e0       	ldi	r31, 0x00	; 0
    c434:	80 81       	ld	r24, Z
    c436:	82 60       	ori	r24, 0x02	; 2
    c438:	80 83       	st	Z, r24
    c43a:	78 94       	sei
    c43c:	08 95       	ret

0000c43e <__vector_17>:
    c43e:	1f 92       	push	r1
    c440:	0f 92       	push	r0
    c442:	0f b6       	in	r0, 0x3f	; 63
    c444:	0f 92       	push	r0
    c446:	11 24       	eor	r1, r1
    c448:	0b b6       	in	r0, 0x3b	; 59
    c44a:	0f 92       	push	r0
    c44c:	2f 93       	push	r18
    c44e:	3f 93       	push	r19
    c450:	4f 93       	push	r20
    c452:	5f 93       	push	r21
    c454:	6f 93       	push	r22
    c456:	7f 93       	push	r23
    c458:	8f 93       	push	r24
    c45a:	9f 93       	push	r25
    c45c:	af 93       	push	r26
    c45e:	bf 93       	push	r27
    c460:	ef 93       	push	r30
    c462:	ff 93       	push	r31
    c464:	80 91 9b 0c 	lds	r24, 0x0C9B	; 0x800c9b <_gfault_Occure>
    c468:	90 91 9c 0c 	lds	r25, 0x0C9C	; 0x800c9c <_gfault_Occure+0x1>
    c46c:	00 97       	sbiw	r24, 0x00	; 0
    c46e:	29 f0       	breq	.+10     	; 0xc47a <__vector_17+0x3c>
    c470:	01 97       	sbiw	r24, 0x01	; 1
    c472:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    c476:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
    c47a:	81 e0       	ldi	r24, 0x01	; 1
    c47c:	90 e0       	ldi	r25, 0x00	; 0
    c47e:	a0 e0       	ldi	r26, 0x00	; 0
    c480:	b0 e0       	ldi	r27, 0x00	; 0
    c482:	80 93 7e 0c 	sts	0x0C7E, r24	; 0x800c7e <_g_1Sec_Time>
    c486:	90 93 7f 0c 	sts	0x0C7F, r25	; 0x800c7f <_g_1Sec_Time+0x1>
    c48a:	a0 93 80 0c 	sts	0x0C80, r26	; 0x800c80 <_g_1Sec_Time+0x2>
    c48e:	b0 93 81 0c 	sts	0x0C81, r27	; 0x800c81 <_g_1Sec_Time+0x3>
    c492:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <_gTimer_For_Three_Phase_Testing>
    c496:	8e 33       	cpi	r24, 0x3E	; 62
    c498:	28 f4       	brcc	.+10     	; 0xc4a4 <__vector_17+0x66>
    c49a:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <_gTimer_For_Three_Phase_Testing>
    c49e:	8f 5f       	subi	r24, 0xFF	; 255
    c4a0:	80 93 93 0c 	sts	0x0C93, r24	; 0x800c93 <_gTimer_For_Three_Phase_Testing>
    c4a4:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_gStart_Monitoring_Three_Phase>
    c4a8:	8b 34       	cpi	r24, 0x4B	; 75
    c4aa:	28 f4       	brcc	.+10     	; 0xc4b6 <__vector_17+0x78>
    c4ac:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_gStart_Monitoring_Three_Phase>
    c4b0:	8f 5f       	subi	r24, 0xFF	; 255
    c4b2:	80 93 94 0c 	sts	0x0C94, r24	; 0x800c94 <_gStart_Monitoring_Three_Phase>
    c4b6:	80 91 61 13 	lds	r24, 0x1361	; 0x801361 <_sRuble_Parameters+0x1a>
    c4ba:	90 91 62 13 	lds	r25, 0x1362	; 0x801362 <_sRuble_Parameters+0x1b>
    c4be:	01 96       	adiw	r24, 0x01	; 1
    c4c0:	90 93 62 13 	sts	0x1362, r25	; 0x801362 <_sRuble_Parameters+0x1b>
    c4c4:	80 93 61 13 	sts	0x1361, r24	; 0x801361 <_sRuble_Parameters+0x1a>
    c4c8:	80 91 22 0c 	lds	r24, 0x0C22	; 0x800c22 <_ZZ11__vector_17E14display_conter>
    c4cc:	8f 5f       	subi	r24, 0xFF	; 255
    c4ce:	85 30       	cpi	r24, 0x05	; 5
    c4d0:	18 f4       	brcc	.+6      	; 0xc4d8 <__vector_17+0x9a>
    c4d2:	80 93 22 0c 	sts	0x0C22, r24	; 0x800c22 <_ZZ11__vector_17E14display_conter>
    c4d6:	05 c0       	rjmp	.+10     	; 0xc4e2 <__vector_17+0xa4>
    c4d8:	10 92 22 0c 	sts	0x0C22, r1	; 0x800c22 <_ZZ11__vector_17E14display_conter>
    c4dc:	81 e0       	ldi	r24, 0x01	; 1
    c4de:	80 93 f8 13 	sts	0x13F8, r24	; 0x8013f8 <_sRuble_Parameters+0xb1>
    c4e2:	80 91 21 0c 	lds	r24, 0x0C21	; 0x800c21 <_ZZ11__vector_17E8ct_timer>
    c4e6:	8f 5f       	subi	r24, 0xFF	; 255
    c4e8:	8a 30       	cpi	r24, 0x0A	; 10
    c4ea:	18 f4       	brcc	.+6      	; 0xc4f2 <__vector_17+0xb4>
    c4ec:	80 93 21 0c 	sts	0x0C21, r24	; 0x800c21 <_ZZ11__vector_17E8ct_timer>
    c4f0:	08 c0       	rjmp	.+16     	; 0xc502 <__vector_17+0xc4>
    c4f2:	10 92 21 0c 	sts	0x0C21, r1	; 0x800c21 <_ZZ11__vector_17E8ct_timer>
    c4f6:	81 e0       	ldi	r24, 0x01	; 1
    c4f8:	90 e0       	ldi	r25, 0x00	; 0
    c4fa:	90 93 64 13 	sts	0x1364, r25	; 0x801364 <_sRuble_Parameters+0x1d>
    c4fe:	80 93 63 13 	sts	0x1363, r24	; 0x801363 <_sRuble_Parameters+0x1c>
    c502:	80 91 03 14 	lds	r24, 0x1403	; 0x801403 <_sRuble_Parameters+0xbc>
    c506:	88 23       	and	r24, r24
    c508:	19 f0       	breq	.+6      	; 0xc510 <__vector_17+0xd2>
    c50a:	81 50       	subi	r24, 0x01	; 1
    c50c:	80 93 03 14 	sts	0x1403, r24	; 0x801403 <_sRuble_Parameters+0xbc>
    c510:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c514:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c518:	89 2b       	or	r24, r25
    c51a:	49 f0       	breq	.+18     	; 0xc52e <__vector_17+0xf0>
    c51c:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <_sSchedules+0x4>
    c520:	90 91 23 09 	lds	r25, 0x0923	; 0x800923 <_sSchedules+0x5>
    c524:	01 97       	sbiw	r24, 0x01	; 1
    c526:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <_sSchedules+0x5>
    c52a:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <_sSchedules+0x4>
    c52e:	80 91 1f 0c 	lds	r24, 0x0C1F	; 0x800c1f <_ZZ11__vector_17E22pub_ruble_data_counter>
    c532:	90 91 20 0c 	lds	r25, 0x0C20	; 0x800c20 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c536:	01 96       	adiw	r24, 0x01	; 1
    c538:	8d 32       	cpi	r24, 0x2D	; 45
    c53a:	21 e0       	ldi	r18, 0x01	; 1
    c53c:	92 07       	cpc	r25, r18
    c53e:	28 f4       	brcc	.+10     	; 0xc54a <__vector_17+0x10c>
    c540:	90 93 20 0c 	sts	0x0C20, r25	; 0x800c20 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c544:	80 93 1f 0c 	sts	0x0C1F, r24	; 0x800c1f <_ZZ11__vector_17E22pub_ruble_data_counter>
    c548:	0d c0       	rjmp	.+26     	; 0xc564 <__vector_17+0x126>
    c54a:	10 92 20 0c 	sts	0x0C20, r1	; 0x800c20 <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c54e:	10 92 1f 0c 	sts	0x0C1F, r1	; 0x800c1f <_ZZ11__vector_17E22pub_ruble_data_counter>
    c552:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    c556:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    c55a:	84 60       	ori	r24, 0x04	; 4
    c55c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    c560:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    c564:	e1 e8       	ldi	r30, 0x81	; 129
    c566:	fd e0       	ldi	r31, 0x0D	; 13
    c568:	2b ef       	ldi	r18, 0xFB	; 251
    c56a:	3e e0       	ldi	r19, 0x0E	; 14
    c56c:	83 81       	ldd	r24, Z+3	; 0x03
    c56e:	94 81       	ldd	r25, Z+4	; 0x04
    c570:	00 97       	sbiw	r24, 0x00	; 0
    c572:	19 f0       	breq	.+6      	; 0xc57a <__vector_17+0x13c>
    c574:	01 97       	sbiw	r24, 0x01	; 1
    c576:	94 83       	std	Z+4, r25	; 0x04
    c578:	83 83       	std	Z+3, r24	; 0x03
    c57a:	7b 96       	adiw	r30, 0x1b	; 27
    c57c:	2e 17       	cp	r18, r30
    c57e:	3f 07       	cpc	r19, r31
    c580:	a9 f7       	brne	.-22     	; 0xc56c <__vector_17+0x12e>
    c582:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
    c586:	81 30       	cpi	r24, 0x01	; 1
    c588:	59 f4       	brne	.+22     	; 0xc5a0 <__vector_17+0x162>
    c58a:	80 91 2e 0b 	lds	r24, 0x0B2E	; 0x800b2e <_sSchedules+0x210>
    c58e:	88 23       	and	r24, r24
    c590:	09 f4       	brne	.+2      	; 0xc594 <__vector_17+0x156>
    c592:	75 c0       	rjmp	.+234    	; 0xc67e <__vector_17+0x240>
    c594:	80 91 2e 0b 	lds	r24, 0x0B2E	; 0x800b2e <_sSchedules+0x210>
    c598:	81 50       	subi	r24, 0x01	; 1
    c59a:	80 93 2e 0b 	sts	0x0B2E, r24	; 0x800b2e <_sSchedules+0x210>
    c59e:	6f c0       	rjmp	.+222    	; 0xc67e <__vector_17+0x240>
    c5a0:	20 91 2c 14 	lds	r18, 0x142C	; 0x80142c <_sRuble_Parameters+0xe5>
    c5a4:	80 91 65 13 	lds	r24, 0x1365	; 0x801365 <_sRuble_Parameters+0x1e>
    c5a8:	90 91 66 13 	lds	r25, 0x1366	; 0x801366 <_sRuble_Parameters+0x1f>
    c5ac:	22 23       	and	r18, r18
    c5ae:	e1 f1       	breq	.+120    	; 0xc628 <__vector_17+0x1ea>
    c5b0:	20 91 97 09 	lds	r18, 0x0997	; 0x800997 <_sSchedules+0x79>
    c5b4:	21 30       	cpi	r18, 0x01	; 1
    c5b6:	79 f4       	brne	.+30     	; 0xc5d6 <__vector_17+0x198>
    c5b8:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
    c5bc:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
    c5c0:	2f 5f       	subi	r18, 0xFF	; 255
    c5c2:	3f 4f       	sbci	r19, 0xFF	; 255
    c5c4:	30 93 27 09 	sts	0x0927, r19	; 0x800927 <_sSchedules+0x9>
    c5c8:	20 93 26 09 	sts	0x0926, r18	; 0x800926 <_sSchedules+0x8>
    c5cc:	20 91 78 0b 	lds	r18, 0x0B78	; 0x800b78 <_sSchedules+0x25a>
    c5d0:	2f 5f       	subi	r18, 0xFF	; 255
    c5d2:	20 93 78 0b 	sts	0x0B78, r18	; 0x800b78 <_sSchedules+0x25a>
    c5d6:	20 91 30 14 	lds	r18, 0x1430	; 0x801430 <_sRuble_Parameters+0xe9>
    c5da:	30 91 31 14 	lds	r19, 0x1431	; 0x801431 <_sRuble_Parameters+0xea>
    c5de:	23 2b       	or	r18, r19
    c5e0:	a1 f4       	brne	.+40     	; 0xc60a <__vector_17+0x1cc>
    c5e2:	40 91 26 14 	lds	r20, 0x1426	; 0x801426 <_sRuble_Parameters+0xdf>
    c5e6:	50 91 27 14 	lds	r21, 0x1427	; 0x801427 <_sRuble_Parameters+0xe0>
    c5ea:	60 91 28 14 	lds	r22, 0x1428	; 0x801428 <_sRuble_Parameters+0xe1>
    c5ee:	70 91 29 14 	lds	r23, 0x1429	; 0x801429 <_sRuble_Parameters+0xe2>
    c5f2:	4f 5f       	subi	r20, 0xFF	; 255
    c5f4:	5f 4f       	sbci	r21, 0xFF	; 255
    c5f6:	6f 4f       	sbci	r22, 0xFF	; 255
    c5f8:	7f 4f       	sbci	r23, 0xFF	; 255
    c5fa:	40 93 26 14 	sts	0x1426, r20	; 0x801426 <_sRuble_Parameters+0xdf>
    c5fe:	50 93 27 14 	sts	0x1427, r21	; 0x801427 <_sRuble_Parameters+0xe0>
    c602:	60 93 28 14 	sts	0x1428, r22	; 0x801428 <_sRuble_Parameters+0xe1>
    c606:	70 93 29 14 	sts	0x1429, r23	; 0x801429 <_sRuble_Parameters+0xe2>
    c60a:	00 97       	sbiw	r24, 0x00	; 0
    c60c:	79 f4       	brne	.+30     	; 0xc62c <__vector_17+0x1ee>
    c60e:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
    c612:	30 91 5e 13 	lds	r19, 0x135E	; 0x80135e <_sRuble_Parameters+0x17>
    c616:	21 15       	cp	r18, r1
    c618:	31 05       	cpc	r19, r1
    c61a:	69 f0       	breq	.+26     	; 0xc636 <__vector_17+0x1f8>
    c61c:	21 50       	subi	r18, 0x01	; 1
    c61e:	31 09       	sbc	r19, r1
    c620:	30 93 5e 13 	sts	0x135E, r19	; 0x80135e <_sRuble_Parameters+0x17>
    c624:	20 93 5d 13 	sts	0x135D, r18	; 0x80135d <_sRuble_Parameters+0x16>
    c628:	00 97       	sbiw	r24, 0x00	; 0
    c62a:	29 f0       	breq	.+10     	; 0xc636 <__vector_17+0x1f8>
    c62c:	01 97       	sbiw	r24, 0x01	; 1
    c62e:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <_sRuble_Parameters+0x1f>
    c632:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <_sRuble_Parameters+0x1e>
    c636:	80 e0       	ldi	r24, 0x00	; 0
    c638:	90 e0       	ldi	r25, 0x00	; 0
    c63a:	9c 01       	movw	r18, r24
    c63c:	22 5e       	subi	r18, 0xE2	; 226
    c63e:	36 4f       	sbci	r19, 0xF6	; 246
    c640:	f9 01       	movw	r30, r18
    c642:	e3 50       	subi	r30, 0x03	; 3
    c644:	fe 4f       	sbci	r31, 0xFE	; 254
    c646:	40 81       	ld	r20, Z
    c648:	44 23       	and	r20, r20
    c64a:	19 f0       	breq	.+6      	; 0xc652 <__vector_17+0x214>
    c64c:	40 81       	ld	r20, Z
    c64e:	41 50       	subi	r20, 0x01	; 1
    c650:	40 83       	st	Z, r20
    c652:	f9 01       	movw	r30, r18
    c654:	ee 5f       	subi	r30, 0xFE	; 254
    c656:	fd 4f       	sbci	r31, 0xFD	; 253
    c658:	20 81       	ld	r18, Z
    c65a:	21 30       	cpi	r18, 0x01	; 1
    c65c:	59 f4       	brne	.+22     	; 0xc674 <__vector_17+0x236>
    c65e:	fc 01       	movw	r30, r24
    c660:	ee 0f       	add	r30, r30
    c662:	ff 1f       	adc	r31, r31
    c664:	ec 5d       	subi	r30, 0xDC	; 220
    c666:	f4 4f       	sbci	r31, 0xF4	; 244
    c668:	20 81       	ld	r18, Z
    c66a:	31 81       	ldd	r19, Z+1	; 0x01
    c66c:	2f 5f       	subi	r18, 0xFF	; 255
    c66e:	3f 4f       	sbci	r19, 0xFF	; 255
    c670:	31 83       	std	Z+1, r19	; 0x01
    c672:	20 83       	st	Z, r18
    c674:	01 96       	adiw	r24, 0x01	; 1
    c676:	83 30       	cpi	r24, 0x03	; 3
    c678:	91 05       	cpc	r25, r1
    c67a:	f9 f6       	brne	.-66     	; 0xc63a <__vector_17+0x1fc>
    c67c:	86 cf       	rjmp	.-244    	; 0xc58a <__vector_17+0x14c>
    c67e:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <_sSchedules+0x20e>
    c682:	88 23       	and	r24, r24
    c684:	29 f0       	breq	.+10     	; 0xc690 <__vector_17+0x252>
    c686:	80 91 2c 0b 	lds	r24, 0x0B2C	; 0x800b2c <_sSchedules+0x20e>
    c68a:	81 50       	subi	r24, 0x01	; 1
    c68c:	80 93 2c 0b 	sts	0x0B2C, r24	; 0x800b2c <_sSchedules+0x20e>
    c690:	80 91 30 14 	lds	r24, 0x1430	; 0x801430 <_sRuble_Parameters+0xe9>
    c694:	90 91 31 14 	lds	r25, 0x1431	; 0x801431 <_sRuble_Parameters+0xea>
    c698:	00 97       	sbiw	r24, 0x00	; 0
    c69a:	61 f4       	brne	.+24     	; 0xc6b4 <__vector_17+0x276>
    c69c:	80 91 2a 14 	lds	r24, 0x142A	; 0x80142a <_sRuble_Parameters+0xe3>
    c6a0:	90 91 2b 14 	lds	r25, 0x142B	; 0x80142b <_sRuble_Parameters+0xe4>
    c6a4:	00 97       	sbiw	r24, 0x00	; 0
    c6a6:	59 f0       	breq	.+22     	; 0xc6be <__vector_17+0x280>
    c6a8:	01 97       	sbiw	r24, 0x01	; 1
    c6aa:	90 93 2b 14 	sts	0x142B, r25	; 0x80142b <_sRuble_Parameters+0xe4>
    c6ae:	80 93 2a 14 	sts	0x142A, r24	; 0x80142a <_sRuble_Parameters+0xe3>
    c6b2:	05 c0       	rjmp	.+10     	; 0xc6be <__vector_17+0x280>
    c6b4:	01 97       	sbiw	r24, 0x01	; 1
    c6b6:	90 93 31 14 	sts	0x1431, r25	; 0x801431 <_sRuble_Parameters+0xea>
    c6ba:	80 93 30 14 	sts	0x1430, r24	; 0x801430 <_sRuble_Parameters+0xe9>
    c6be:	80 91 08 14 	lds	r24, 0x1408	; 0x801408 <_sRuble_Parameters+0xc1>
    c6c2:	90 91 09 14 	lds	r25, 0x1409	; 0x801409 <_sRuble_Parameters+0xc2>
    c6c6:	00 97       	sbiw	r24, 0x00	; 0
    c6c8:	29 f0       	breq	.+10     	; 0xc6d4 <__vector_17+0x296>
    c6ca:	01 97       	sbiw	r24, 0x01	; 1
    c6cc:	90 93 09 14 	sts	0x1409, r25	; 0x801409 <_sRuble_Parameters+0xc2>
    c6d0:	80 93 08 14 	sts	0x1408, r24	; 0x801408 <_sRuble_Parameters+0xc1>
    c6d4:	80 91 9f 0c 	lds	r24, 0x0C9F	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
    c6d8:	90 91 a0 0c 	lds	r25, 0x0CA0	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
    c6dc:	01 96       	adiw	r24, 0x01	; 1
    c6de:	90 93 a0 0c 	sts	0x0CA0, r25	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
    c6e2:	80 93 9f 0c 	sts	0x0C9F, r24	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
    c6e6:	80 91 9d 0c 	lds	r24, 0x0C9D	; 0x800c9d <_gWait_Blower_Time>
    c6ea:	90 91 9e 0c 	lds	r25, 0x0C9E	; 0x800c9e <_gWait_Blower_Time+0x1>
    c6ee:	00 97       	sbiw	r24, 0x00	; 0
    c6f0:	29 f0       	breq	.+10     	; 0xc6fc <__vector_17+0x2be>
    c6f2:	01 97       	sbiw	r24, 0x01	; 1
    c6f4:	90 93 9e 0c 	sts	0x0C9E, r25	; 0x800c9e <_gWait_Blower_Time+0x1>
    c6f8:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gWait_Blower_Time>
    c6fc:	80 91 98 0c 	lds	r24, 0x0C98	; 0x800c98 <_gWdt_Counter>
    c700:	90 91 99 0c 	lds	r25, 0x0C99	; 0x800c99 <_gWdt_Counter+0x1>
    c704:	01 96       	adiw	r24, 0x01	; 1
    c706:	90 93 99 0c 	sts	0x0C99, r25	; 0x800c99 <_gWdt_Counter+0x1>
    c70a:	80 93 98 0c 	sts	0x0C98, r24	; 0x800c98 <_gWdt_Counter>
    c70e:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTank_Topic_check>
    c712:	8c 33       	cpi	r24, 0x3C	; 60
    c714:	28 f4       	brcc	.+10     	; 0xc720 <__vector_17+0x2e2>
    c716:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTank_Topic_check>
    c71a:	8f 5f       	subi	r24, 0xFF	; 255
    c71c:	80 93 96 0c 	sts	0x0C96, r24	; 0x800c96 <_gTank_Topic_check>
    c720:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Wdt>
    c724:	81 30       	cpi	r24, 0x01	; 1
    c726:	39 f4       	brne	.+14     	; 0xc736 <__vector_17+0x2f8>
    c728:	80 91 98 0c 	lds	r24, 0x0C98	; 0x800c98 <_gWdt_Counter>
    c72c:	90 91 99 0c 	lds	r25, 0x0C99	; 0x800c99 <_gWdt_Counter+0x1>
    c730:	88 36       	cpi	r24, 0x68	; 104
    c732:	91 40       	sbci	r25, 0x01	; 1
    c734:	08 f4       	brcc	.+2      	; 0xc738 <__vector_17+0x2fa>
    c736:	a8 95       	wdr
    c738:	0e 94 7b 85 	call	0x10af6	; 0x10af6 <_Z18Read_Switch_Statusv>
    c73c:	80 91 27 0c 	lds	r24, 0x0C27	; 0x800c27 <rx_complete>
    c740:	88 23       	and	r24, r24
    c742:	29 f0       	breq	.+10     	; 0xc74e <__vector_17+0x310>
    c744:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <monitor_serial_start>
    c748:	8f 5f       	subi	r24, 0xFF	; 255
    c74a:	80 93 23 0c 	sts	0x0C23, r24	; 0x800c23 <monitor_serial_start>
    c74e:	ff 91       	pop	r31
    c750:	ef 91       	pop	r30
    c752:	bf 91       	pop	r27
    c754:	af 91       	pop	r26
    c756:	9f 91       	pop	r25
    c758:	8f 91       	pop	r24
    c75a:	7f 91       	pop	r23
    c75c:	6f 91       	pop	r22
    c75e:	5f 91       	pop	r21
    c760:	4f 91       	pop	r20
    c762:	3f 91       	pop	r19
    c764:	2f 91       	pop	r18
    c766:	0f 90       	pop	r0
    c768:	0b be       	out	0x3b, r0	; 59
    c76a:	0f 90       	pop	r0
    c76c:	0f be       	out	0x3f, r0	; 63
    c76e:	0f 90       	pop	r0
    c770:	1f 90       	pop	r1
    c772:	18 95       	reti

0000c774 <_Z20Timer0_Interrupt_Intv>:
    c774:	f8 94       	cli
    c776:	a0 eb       	ldi	r26, 0xB0	; 176
    c778:	b0 e0       	ldi	r27, 0x00	; 0
    c77a:	1c 92       	st	X, r1
    c77c:	e1 eb       	ldi	r30, 0xB1	; 177
    c77e:	f0 e0       	ldi	r31, 0x00	; 0
    c780:	10 82       	st	Z, r1
    c782:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    c786:	8c e7       	ldi	r24, 0x7C	; 124
    c788:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
    c78c:	8c 91       	ld	r24, X
    c78e:	82 60       	ori	r24, 0x02	; 2
    c790:	8c 93       	st	X, r24
    c792:	80 81       	ld	r24, Z
    c794:	85 60       	ori	r24, 0x05	; 5
    c796:	80 83       	st	Z, r24
    c798:	e0 e7       	ldi	r30, 0x70	; 112
    c79a:	f0 e0       	ldi	r31, 0x00	; 0
    c79c:	80 81       	ld	r24, Z
    c79e:	82 60       	ori	r24, 0x02	; 2
    c7a0:	80 83       	st	Z, r24
    c7a2:	78 94       	sei
    c7a4:	08 95       	ret

0000c7a6 <__vector_13>:
    c7a6:	1f 92       	push	r1
    c7a8:	0f 92       	push	r0
    c7aa:	0f b6       	in	r0, 0x3f	; 63
    c7ac:	0f 92       	push	r0
    c7ae:	11 24       	eor	r1, r1
    c7b0:	2f 93       	push	r18
    c7b2:	3f 93       	push	r19
    c7b4:	8f 93       	push	r24
    c7b6:	9f 93       	push	r25
    c7b8:	80 91 26 0c 	lds	r24, 0x0C26	; 0x800c26 <rx_flag>
    c7bc:	88 23       	and	r24, r24
    c7be:	49 f0       	breq	.+18     	; 0xc7d2 <__vector_13+0x2c>
    c7c0:	80 91 24 0c 	lds	r24, 0x0C24	; 0x800c24 <my_timer>
    c7c4:	90 91 25 0c 	lds	r25, 0x0C25	; 0x800c25 <my_timer+0x1>
    c7c8:	01 96       	adiw	r24, 0x01	; 1
    c7ca:	90 93 25 0c 	sts	0x0C25, r25	; 0x800c25 <my_timer+0x1>
    c7ce:	80 93 24 0c 	sts	0x0C24, r24	; 0x800c24 <my_timer>
    c7d2:	20 91 24 0c 	lds	r18, 0x0C24	; 0x800c24 <my_timer>
    c7d6:	30 91 25 0c 	lds	r19, 0x0C25	; 0x800c25 <my_timer+0x1>
    c7da:	80 91 91 0c 	lds	r24, 0x0C91	; 0x800c91 <Interrupt_Time_Out>
    c7de:	90 91 92 0c 	lds	r25, 0x0C92	; 0x800c92 <Interrupt_Time_Out+0x1>
    c7e2:	82 17       	cp	r24, r18
    c7e4:	93 07       	cpc	r25, r19
    c7e6:	20 f4       	brcc	.+8      	; 0xc7f0 <__vector_13+0x4a>
    c7e8:	80 91 26 0c 	lds	r24, 0x0C26	; 0x800c26 <rx_flag>
    c7ec:	81 30       	cpi	r24, 0x01	; 1
    c7ee:	c1 f0       	breq	.+48     	; 0xc820 <__vector_13+0x7a>
    c7f0:	90 91 26 0c 	lds	r25, 0x0C26	; 0x800c26 <rx_flag>
    c7f4:	80 91 1e 0c 	lds	r24, 0x0C1E	; 0x800c1e <_ZZ11__vector_13E9timer_int>
    c7f8:	91 30       	cpi	r25, 0x01	; 1
    c7fa:	41 f4       	brne	.+16     	; 0xc80c <__vector_13+0x66>
    c7fc:	81 11       	cpse	r24, r1
    c7fe:	1f c0       	rjmp	.+62     	; 0xc83e <__vector_13+0x98>
    c800:	90 93 1e 0c 	sts	0x0C1E, r25	; 0x800c1e <_ZZ11__vector_13E9timer_int>
    c804:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    c808:	8d 7f       	andi	r24, 0xFD	; 253
    c80a:	07 c0       	rjmp	.+14     	; 0xc81a <__vector_13+0x74>
    c80c:	81 30       	cpi	r24, 0x01	; 1
    c80e:	b9 f4       	brne	.+46     	; 0xc83e <__vector_13+0x98>
    c810:	10 92 1e 0c 	sts	0x0C1E, r1	; 0x800c1e <_ZZ11__vector_13E9timer_int>
    c814:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    c818:	82 60       	ori	r24, 0x02	; 2
    c81a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
    c81e:	0f c0       	rjmp	.+30     	; 0xc83e <__vector_13+0x98>
    c820:	80 93 27 0c 	sts	0x0C27, r24	; 0x800c27 <rx_complete>
    c824:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <rx_flag>
    c828:	10 92 29 0c 	sts	0x0C29, r1	; 0x800c29 <int_counter+0x1>
    c82c:	10 92 28 0c 	sts	0x0C28, r1	; 0x800c28 <int_counter>
    c830:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <my_timer+0x1>
    c834:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <my_timer>
    c838:	10 92 23 0c 	sts	0x0C23, r1	; 0x800c23 <monitor_serial_start>
    c83c:	d9 cf       	rjmp	.-78     	; 0xc7f0 <__vector_13+0x4a>
    c83e:	9f 91       	pop	r25
    c840:	8f 91       	pop	r24
    c842:	3f 91       	pop	r19
    c844:	2f 91       	pop	r18
    c846:	0f 90       	pop	r0
    c848:	0f be       	out	0x3f, r0	; 63
    c84a:	0f 90       	pop	r0
    c84c:	1f 90       	pop	r1
    c84e:	18 95       	reti

0000c850 <_Z8Lcd_Initv>:
    c850:	82 e7       	ldi	r24, 0x72	; 114
    c852:	9c e0       	ldi	r25, 0x0C	; 12
    c854:	0c 94 c3 d7 	jmp	0x1af86	; 0x1af86 <_ZN17LiquidCrystal_I2C4initEv>
    c858:	08 95       	ret

0000c85a <_Z14Lcd_Print_BuffPchhh>:
    c85a:	cf 92       	push	r12
    c85c:	df 92       	push	r13
    c85e:	ef 92       	push	r14
    c860:	ff 92       	push	r15
    c862:	0f 93       	push	r16
    c864:	1f 93       	push	r17
    c866:	cf 93       	push	r28
    c868:	df 93       	push	r29
    c86a:	7c 01       	movw	r14, r24
    c86c:	c4 2e       	mov	r12, r20
    c86e:	ec 01       	movw	r28, r24
    c870:	06 2f       	mov	r16, r22
    c872:	10 e0       	ldi	r17, 0x00	; 0
    c874:	ce 01       	movw	r24, r28
    c876:	8e 19       	sub	r24, r14
    c878:	9f 09       	sbc	r25, r15
    c87a:	80 17       	cp	r24, r16
    c87c:	91 07       	cpc	r25, r17
    c87e:	84 f4       	brge	.+32     	; 0xc8a0 <_Z14Lcd_Print_BuffPchhh+0x46>
    c880:	dd 24       	eor	r13, r13
    c882:	d3 94       	inc	r13
    c884:	d2 0e       	add	r13, r18
    c886:	4c 2d       	mov	r20, r12
    c888:	62 2f       	mov	r22, r18
    c88a:	82 e7       	ldi	r24, 0x72	; 114
    c88c:	9c e0       	ldi	r25, 0x0C	; 12
    c88e:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    c892:	69 91       	ld	r22, Y+
    c894:	82 e7       	ldi	r24, 0x72	; 114
    c896:	9c e0       	ldi	r25, 0x0C	; 12
    c898:	0e 94 a2 d1 	call	0x1a344	; 0x1a344 <_ZN5Print5printEc>
    c89c:	2d 2d       	mov	r18, r13
    c89e:	ea cf       	rjmp	.-44     	; 0xc874 <_Z14Lcd_Print_BuffPchhh+0x1a>
    c8a0:	df 91       	pop	r29
    c8a2:	cf 91       	pop	r28
    c8a4:	1f 91       	pop	r17
    c8a6:	0f 91       	pop	r16
    c8a8:	ff 90       	pop	r15
    c8aa:	ef 90       	pop	r14
    c8ac:	df 90       	pop	r13
    c8ae:	cf 90       	pop	r12
    c8b0:	08 95       	ret

0000c8b2 <_Z9Lcd_Clearv>:
    c8b2:	82 e7       	ldi	r24, 0x72	; 114
    c8b4:	9c e0       	ldi	r25, 0x0C	; 12
    c8b6:	0c 94 04 d7 	jmp	0x1ae08	; 0x1ae08 <_ZN17LiquidCrystal_I2C5clearEv>

0000c8ba <_Z9Lora_Initv>:
    c8ba:	8a e2       	ldi	r24, 0x2A	; 42
    c8bc:	9c e0       	ldi	r25, 0x0C	; 12
    c8be:	0c 94 97 dc 	jmp	0x1b92e	; 0x1b92e <_ZN7RH_RF954initEv>

0000c8c2 <_Z14Lora_Availablev>:
    c8c2:	8a e2       	ldi	r24, 0x2A	; 42
    c8c4:	9c e0       	ldi	r25, 0x0C	; 12
    c8c6:	0c 94 b7 db 	jmp	0x1b76e	; 0x1b76e <_ZN7RH_RF959availableEv>

0000c8ca <_Z17Lora_Data_Receivev>:
    c8ca:	cf 93       	push	r28
    c8cc:	df 93       	push	r29
    c8ce:	1f 92       	push	r1
    c8d0:	cd b7       	in	r28, 0x3d	; 61
    c8d2:	de b7       	in	r29, 0x3e	; 62
    c8d4:	84 e1       	ldi	r24, 0x14	; 20
    c8d6:	ed e8       	ldi	r30, 0x8D	; 141
    c8d8:	f3 e1       	ldi	r31, 0x13	; 19
    c8da:	df 01       	movw	r26, r30
    c8dc:	98 2f       	mov	r25, r24
    c8de:	1d 92       	st	X+, r1
    c8e0:	9a 95       	dec	r25
    c8e2:	e9 f7       	brne	.-6      	; 0xc8de <_Z17Lora_Data_Receivev+0x14>
    c8e4:	89 83       	std	Y+1, r24	; 0x01
    c8e6:	ae 01       	movw	r20, r28
    c8e8:	4f 5f       	subi	r20, 0xFF	; 255
    c8ea:	5f 4f       	sbci	r21, 0xFF	; 255
    c8ec:	bf 01       	movw	r22, r30
    c8ee:	8a e2       	ldi	r24, 0x2A	; 42
    c8f0:	9c e0       	ldi	r25, 0x0C	; 12
    c8f2:	0e 94 38 da 	call	0x1b470	; 0x1b470 <_ZN7RH_RF954recvEPhS0_>
    c8f6:	0f 90       	pop	r0
    c8f8:	df 91       	pop	r29
    c8fa:	cf 91       	pop	r28
    c8fc:	08 95       	ret

0000c8fe <_Z13Lora_Set_Freqv>:
    c8fe:	4a e5       	ldi	r20, 0x5A	; 90
    c900:	54 e4       	ldi	r21, 0x44	; 68
    c902:	68 e5       	ldi	r22, 0x58	; 88
    c904:	74 e4       	ldi	r23, 0x44	; 68
    c906:	8a e2       	ldi	r24, 0x2A	; 42
    c908:	9c e0       	ldi	r25, 0x0C	; 12
    c90a:	0c 94 76 da 	jmp	0x1b4ec	; 0x1b4ec <_ZN7RH_RF9512setFrequencyEf>

0000c90e <_Z14Lora_Set_Powerv>:
    c90e:	40 e0       	ldi	r20, 0x00	; 0
    c910:	64 e1       	ldi	r22, 0x14	; 20
    c912:	8a e2       	ldi	r24, 0x2A	; 42
    c914:	9c e0       	ldi	r25, 0x0C	; 12
    c916:	0c 94 2c dc 	jmp	0x1b858	; 0x1b858 <_ZN7RH_RF9510setTxPowerEab>

0000c91a <_Z15Lora_Set_Configv>:
    c91a:	60 e0       	ldi	r22, 0x00	; 0
    c91c:	8a e2       	ldi	r24, 0x2A	; 42
    c91e:	9c e0       	ldi	r25, 0x0C	; 12
    c920:	0e 94 5f dc 	call	0x1b8be	; 0x1b8be <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
    c924:	6b e0       	ldi	r22, 0x0B	; 11
    c926:	8a e2       	ldi	r24, 0x2A	; 42
    c928:	9c e0       	ldi	r25, 0x0C	; 12
    c92a:	0c 94 9a dd 	jmp	0x1bb34	; 0x1bb34 <_ZN7RH_RF9518setSpreadingFactorEh>

0000c92e <_Z20Check_Data_Availablej>:
    c92e:	bc 01       	movw	r22, r24
    c930:	8a e2       	ldi	r24, 0x2A	; 42
    c932:	9c e0       	ldi	r25, 0x0C	; 12
    c934:	0c 94 1d d8 	jmp	0x1b03a	; 0x1b03a <_ZN15RHGenericDriver20waitAvailableTimeoutEj>

0000c938 <_Z21Seperate_Out_Sub_Datav>:
    c938:	8f 92       	push	r8
    c93a:	9f 92       	push	r9
    c93c:	af 92       	push	r10
    c93e:	bf 92       	push	r11
    c940:	cf 92       	push	r12
    c942:	df 92       	push	r13
    c944:	ef 92       	push	r14
    c946:	ff 92       	push	r15
    c948:	0f 93       	push	r16
    c94a:	1f 93       	push	r17
    c94c:	cf 93       	push	r28
    c94e:	df 93       	push	r29
    c950:	cd b7       	in	r28, 0x3d	; 61
    c952:	de b7       	in	r29, 0x3e	; 62
    c954:	c0 53       	subi	r28, 0x30	; 48
    c956:	d4 40       	sbci	r29, 0x04	; 4
    c958:	0f b6       	in	r0, 0x3f	; 63
    c95a:	f8 94       	cli
    c95c:	de bf       	out	0x3e, r29	; 62
    c95e:	0f be       	out	0x3f, r0	; 63
    c960:	cd bf       	out	0x3d, r28	; 61
    c962:	22 e1       	ldi	r18, 0x12	; 18
    c964:	e3 e7       	ldi	r30, 0x73	; 115
    c966:	f3 e0       	ldi	r31, 0x03	; 3
    c968:	de 01       	movw	r26, r28
    c96a:	a5 5e       	subi	r26, 0xE5	; 229
    c96c:	bb 4f       	sbci	r27, 0xFB	; 251
    c96e:	01 90       	ld	r0, Z+
    c970:	0d 92       	st	X+, r0
    c972:	2a 95       	dec	r18
    c974:	e1 f7       	brne	.-8      	; 0xc96e <_Z21Seperate_Out_Sub_Datav+0x36>
    c976:	24 e1       	ldi	r18, 0x14	; 20
    c978:	e5 e8       	ldi	r30, 0x85	; 133
    c97a:	f3 e0       	ldi	r31, 0x03	; 3
    c97c:	de 01       	movw	r26, r28
    c97e:	a9 5f       	subi	r26, 0xF9	; 249
    c980:	bb 4f       	sbci	r27, 0xFB	; 251
    c982:	01 90       	ld	r0, Z+
    c984:	0d 92       	st	X+, r0
    c986:	2a 95       	dec	r18
    c988:	e1 f7       	brne	.-8      	; 0xc982 <_Z21Seperate_Out_Sub_Datav+0x4a>
    c98a:	8e 01       	movw	r16, r28
    c98c:	0f 5f       	subi	r16, 0xFF	; 255
    c98e:	1f 4f       	sbci	r17, 0xFF	; 255
    c990:	24 ed       	ldi	r18, 0xD4	; 212
    c992:	33 e0       	ldi	r19, 0x03	; 3
    c994:	d8 01       	movw	r26, r16
    c996:	f9 01       	movw	r30, r18
    c998:	1d 92       	st	X+, r1
    c99a:	31 97       	sbiw	r30, 0x01	; 1
    c99c:	e9 f7       	brne	.-6      	; 0xc998 <_Z21Seperate_Out_Sub_Datav+0x60>
    c99e:	be 01       	movw	r22, r28
    c9a0:	6b 52       	subi	r22, 0x2B	; 43
    c9a2:	7c 4f       	sbci	r23, 0xFC	; 252
    c9a4:	22 e3       	ldi	r18, 0x32	; 50
    c9a6:	db 01       	movw	r26, r22
    c9a8:	1d 92       	st	X+, r1
    c9aa:	2a 95       	dec	r18
    c9ac:	e9 f7       	brne	.-6      	; 0xc9a8 <_Z21Seperate_Out_Sub_Datav+0x70>
    c9ae:	88 24       	eor	r8, r8
    c9b0:	83 94       	inc	r8
    c9b2:	91 2c       	mov	r9, r1
    c9b4:	40 e0       	ldi	r20, 0x00	; 0
    c9b6:	50 e0       	ldi	r21, 0x00	; 0
    c9b8:	20 e0       	ldi	r18, 0x00	; 0
    c9ba:	30 e0       	ldi	r19, 0x00	; 0
    c9bc:	fe 01       	movw	r30, r28
    c9be:	e3 5d       	subi	r30, 0xD3	; 211
    c9c0:	fb 4f       	sbci	r31, 0xFB	; 251
    c9c2:	aa e0       	ldi	r26, 0x0A	; 10
    c9c4:	fa 2e       	mov	r15, r26
    c9c6:	b4 e6       	ldi	r27, 0x64	; 100
    c9c8:	eb 2e       	mov	r14, r27
    c9ca:	d9 01       	movw	r26, r18
    c9cc:	a7 59       	subi	r26, 0x97	; 151
    c9ce:	b0 4f       	sbci	r27, 0xF0	; 240
    c9d0:	dc 90       	ld	r13, X
    c9d2:	dd 20       	and	r13, r13
    c9d4:	09 f4       	brne	.+2      	; 0xc9d8 <_Z21Seperate_Out_Sub_Datav+0xa0>
    c9d6:	40 c1       	rjmp	.+640    	; 0xcc58 <_Z21Seperate_Out_Sub_Datav+0x320>
    c9d8:	2f 5f       	subi	r18, 0xFF	; 255
    c9da:	3f 4f       	sbci	r19, 0xFF	; 255
    c9dc:	24 3d       	cpi	r18, 0xD4	; 212
    c9de:	b3 e0       	ldi	r27, 0x03	; 3
    c9e0:	3b 07       	cpc	r19, r27
    c9e2:	08 f0       	brcs	.+2      	; 0xc9e6 <_Z21Seperate_Out_Sub_Datav+0xae>
    c9e4:	55 c1       	rjmp	.+682    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    c9e6:	d9 01       	movw	r26, r18
    c9e8:	a7 59       	subi	r26, 0x97	; 151
    c9ea:	b0 4f       	sbci	r27, 0xF0	; 240
    c9ec:	6d 01       	movw	r12, r26
    c9ee:	b1 e0       	ldi	r27, 0x01	; 1
    c9f0:	8b 16       	cp	r8, r27
    c9f2:	91 04       	cpc	r9, r1
    c9f4:	31 f0       	breq	.+12     	; 0xca02 <_Z21Seperate_Out_Sub_Datav+0xca>
    c9f6:	a2 e0       	ldi	r26, 0x02	; 2
    c9f8:	8a 16       	cp	r8, r26
    c9fa:	91 04       	cpc	r9, r1
    c9fc:	09 f4       	brne	.+2      	; 0xca00 <_Z21Seperate_Out_Sub_Datav+0xc8>
    c9fe:	8f c0       	rjmp	.+286    	; 0xcb1e <_Z21Seperate_Out_Sub_Datav+0x1e6>
    ca00:	e4 cf       	rjmp	.-56     	; 0xc9ca <_Z21Seperate_Out_Sub_Datav+0x92>
    ca02:	d6 01       	movw	r26, r12
    ca04:	bc 90       	ld	r11, X
    ca06:	bb e1       	ldi	r27, 0x1B	; 27
    ca08:	cb 2e       	mov	r12, r27
    ca0a:	b4 e0       	ldi	r27, 0x04	; 4
    ca0c:	db 2e       	mov	r13, r27
    ca0e:	cc 0e       	add	r12, r28
    ca10:	dd 1e       	adc	r13, r29
    ca12:	c4 0e       	add	r12, r20
    ca14:	d5 1e       	adc	r13, r21
    ca16:	d6 01       	movw	r26, r12
    ca18:	dc 90       	ld	r13, X
    ca1a:	bd 14       	cp	r11, r13
    ca1c:	19 f0       	breq	.+6      	; 0xca24 <_Z21Seperate_Out_Sub_Datav+0xec>
    ca1e:	40 e0       	ldi	r20, 0x00	; 0
    ca20:	50 e0       	ldi	r21, 0x00	; 0
    ca22:	d3 cf       	rjmp	.-90     	; 0xc9ca <_Z21Seperate_Out_Sub_Datav+0x92>
    ca24:	4f 5f       	subi	r20, 0xFF	; 255
    ca26:	5f 4f       	sbci	r21, 0xFF	; 255
    ca28:	ab e1       	ldi	r26, 0x1B	; 27
    ca2a:	ca 2e       	mov	r12, r26
    ca2c:	a4 e0       	ldi	r26, 0x04	; 4
    ca2e:	da 2e       	mov	r13, r26
    ca30:	cc 0e       	add	r12, r28
    ca32:	dd 1e       	adc	r13, r29
    ca34:	c4 0e       	add	r12, r20
    ca36:	d5 1e       	adc	r13, r21
    ca38:	d6 01       	movw	r26, r12
    ca3a:	dc 90       	ld	r13, X
    ca3c:	d1 10       	cpse	r13, r1
    ca3e:	c5 cf       	rjmp	.-118    	; 0xc9ca <_Z21Seperate_Out_Sub_Datav+0x92>
    ca40:	af 01       	movw	r20, r30
    ca42:	5a 01       	movw	r10, r20
    ca44:	ae 1a       	sub	r10, r30
    ca46:	bf 0a       	sbc	r11, r31
    ca48:	d9 01       	movw	r26, r18
    ca4a:	a7 59       	subi	r26, 0x97	; 151
    ca4c:	b0 4f       	sbci	r27, 0xF0	; 240
    ca4e:	dc 90       	ld	r13, X
    ca50:	bd e0       	ldi	r27, 0x0D	; 13
    ca52:	db 16       	cp	r13, r27
    ca54:	79 f0       	breq	.+30     	; 0xca74 <_Z21Seperate_Out_Sub_Datav+0x13c>
    ca56:	2f 5f       	subi	r18, 0xFF	; 255
    ca58:	3f 4f       	sbci	r19, 0xFF	; 255
    ca5a:	24 3d       	cpi	r18, 0xD4	; 212
    ca5c:	a3 e0       	ldi	r26, 0x03	; 3
    ca5e:	3a 07       	cpc	r19, r26
    ca60:	09 f4       	brne	.+2      	; 0xca64 <_Z21Seperate_Out_Sub_Datav+0x12c>
    ca62:	16 c1       	rjmp	.+556    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    ca64:	d9 01       	movw	r26, r18
    ca66:	a7 59       	subi	r26, 0x97	; 151
    ca68:	b0 4f       	sbci	r27, 0xF0	; 240
    ca6a:	dc 90       	ld	r13, X
    ca6c:	da 01       	movw	r26, r20
    ca6e:	dd 92       	st	X+, r13
    ca70:	ad 01       	movw	r20, r26
    ca72:	e7 cf       	rjmp	.-50     	; 0xca42 <_Z21Seperate_Out_Sub_Datav+0x10a>
    ca74:	d5 01       	movw	r26, r10
    ca76:	ae 0f       	add	r26, r30
    ca78:	bf 1f       	adc	r27, r31
    ca7a:	1c 92       	st	X, r1
    ca7c:	df 01       	movw	r26, r30
    ca7e:	0d 90       	ld	r0, X+
    ca80:	00 20       	and	r0, r0
    ca82:	e9 f7       	brne	.-6      	; 0xca7e <_Z21Seperate_Out_Sub_Datav+0x146>
    ca84:	11 97       	sbiw	r26, 0x01	; 1
    ca86:	ad 01       	movw	r20, r26
    ca88:	4e 1b       	sub	r20, r30
    ca8a:	5f 0b       	sbc	r21, r31
    ca8c:	42 30       	cpi	r20, 0x02	; 2
    ca8e:	51 05       	cpc	r21, r1
    ca90:	49 f0       	breq	.+18     	; 0xcaa4 <_Z21Seperate_Out_Sub_Datav+0x16c>
    ca92:	08 f4       	brcc	.+2      	; 0xca96 <_Z21Seperate_Out_Sub_Datav+0x15e>
    ca94:	fd c0       	rjmp	.+506    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    ca96:	43 30       	cpi	r20, 0x03	; 3
    ca98:	51 05       	cpc	r21, r1
    ca9a:	49 f0       	breq	.+18     	; 0xcaae <_Z21Seperate_Out_Sub_Datav+0x176>
    ca9c:	44 30       	cpi	r20, 0x04	; 4
    ca9e:	51 05       	cpc	r21, r1
    caa0:	d9 f4       	brne	.+54     	; 0xcad8 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    caa2:	f6 c0       	rjmp	.+492    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    caa4:	80 81       	ld	r24, Z
    caa6:	90 e0       	ldi	r25, 0x00	; 0
    caa8:	c0 97       	sbiw	r24, 0x30	; 48
    caaa:	b1 f4       	brne	.+44     	; 0xcad8 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    caac:	f1 c0       	rjmp	.+482    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    caae:	80 81       	ld	r24, Z
    cab0:	90 e0       	ldi	r25, 0x00	; 0
    cab2:	c0 97       	sbiw	r24, 0x30	; 48
    cab4:	f8 9e       	mul	r15, r24
    cab6:	a0 01       	movw	r20, r0
    cab8:	f9 9e       	mul	r15, r25
    caba:	50 0d       	add	r21, r0
    cabc:	11 24       	eor	r1, r1
    cabe:	91 81       	ldd	r25, Z+1	; 0x01
    cac0:	89 2f       	mov	r24, r25
    cac2:	90 e0       	ldi	r25, 0x00	; 0
    cac4:	c0 97       	sbiw	r24, 0x30	; 48
    cac6:	84 0f       	add	r24, r20
    cac8:	95 1f       	adc	r25, r21
    caca:	ac 01       	movw	r20, r24
    cacc:	41 50       	subi	r20, 0x01	; 1
    cace:	51 09       	sbc	r21, r1
    cad0:	42 33       	cpi	r20, 0x32	; 50
    cad2:	51 05       	cpc	r21, r1
    cad4:	08 f0       	brcs	.+2      	; 0xcad8 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    cad6:	dc c0       	rjmp	.+440    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cad8:	2e 5f       	subi	r18, 0xFE	; 254
    cada:	3f 4f       	sbci	r19, 0xFF	; 255
    cadc:	24 3d       	cpi	r18, 0xD4	; 212
    cade:	b3 e0       	ldi	r27, 0x03	; 3
    cae0:	3b 07       	cpc	r19, r27
    cae2:	08 f0       	brcs	.+2      	; 0xcae6 <_Z21Seperate_Out_Sub_Datav+0x1ae>
    cae4:	d5 c0       	rjmp	.+426    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cae6:	6b 01       	movw	r12, r22
    cae8:	a6 01       	movw	r20, r12
    caea:	46 1b       	sub	r20, r22
    caec:	57 0b       	sbc	r21, r23
    caee:	48 17       	cp	r20, r24
    caf0:	59 07       	cpc	r21, r25
    caf2:	20 f0       	brcs	.+8      	; 0xcafc <_Z21Seperate_Out_Sub_Datav+0x1c4>
    caf4:	42 e0       	ldi	r20, 0x02	; 2
    caf6:	84 2e       	mov	r8, r20
    caf8:	91 2c       	mov	r9, r1
    cafa:	91 cf       	rjmp	.-222    	; 0xca1e <_Z21Seperate_Out_Sub_Datav+0xe6>
    cafc:	a9 01       	movw	r20, r18
    cafe:	4f 5f       	subi	r20, 0xFF	; 255
    cb00:	5f 4f       	sbci	r21, 0xFF	; 255
    cb02:	27 59       	subi	r18, 0x97	; 151
    cb04:	30 4f       	sbci	r19, 0xF0	; 240
    cb06:	d9 01       	movw	r26, r18
    cb08:	2c 91       	ld	r18, X
    cb0a:	d6 01       	movw	r26, r12
    cb0c:	2d 93       	st	X+, r18
    cb0e:	6d 01       	movw	r12, r26
    cb10:	44 3d       	cpi	r20, 0xD4	; 212
    cb12:	b3 e0       	ldi	r27, 0x03	; 3
    cb14:	5b 07       	cpc	r21, r27
    cb16:	09 f4       	brne	.+2      	; 0xcb1a <_Z21Seperate_Out_Sub_Datav+0x1e2>
    cb18:	bb c0       	rjmp	.+374    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cb1a:	9a 01       	movw	r18, r20
    cb1c:	e5 cf       	rjmp	.-54     	; 0xcae8 <_Z21Seperate_Out_Sub_Datav+0x1b0>
    cb1e:	d6 01       	movw	r26, r12
    cb20:	bc 90       	ld	r11, X
    cb22:	b7 e0       	ldi	r27, 0x07	; 7
    cb24:	cb 2e       	mov	r12, r27
    cb26:	b4 e0       	ldi	r27, 0x04	; 4
    cb28:	db 2e       	mov	r13, r27
    cb2a:	cc 0e       	add	r12, r28
    cb2c:	dd 1e       	adc	r13, r29
    cb2e:	c4 0e       	add	r12, r20
    cb30:	d5 1e       	adc	r13, r21
    cb32:	d6 01       	movw	r26, r12
    cb34:	dc 90       	ld	r13, X
    cb36:	bd 10       	cpse	r11, r13
    cb38:	72 cf       	rjmp	.-284    	; 0xca1e <_Z21Seperate_Out_Sub_Datav+0xe6>
    cb3a:	4f 5f       	subi	r20, 0xFF	; 255
    cb3c:	5f 4f       	sbci	r21, 0xFF	; 255
    cb3e:	a7 e0       	ldi	r26, 0x07	; 7
    cb40:	ca 2e       	mov	r12, r26
    cb42:	a4 e0       	ldi	r26, 0x04	; 4
    cb44:	da 2e       	mov	r13, r26
    cb46:	cc 0e       	add	r12, r28
    cb48:	dd 1e       	adc	r13, r29
    cb4a:	c4 0e       	add	r12, r20
    cb4c:	d5 1e       	adc	r13, r21
    cb4e:	d6 01       	movw	r26, r12
    cb50:	dc 90       	ld	r13, X
    cb52:	d1 10       	cpse	r13, r1
    cb54:	3a cf       	rjmp	.-396    	; 0xc9ca <_Z21Seperate_Out_Sub_Datav+0x92>
    cb56:	6f 01       	movw	r12, r30
    cb58:	46 01       	movw	r8, r12
    cb5a:	8e 1a       	sub	r8, r30
    cb5c:	9f 0a       	sbc	r9, r31
    cb5e:	d9 01       	movw	r26, r18
    cb60:	a7 59       	subi	r26, 0x97	; 151
    cb62:	b0 4f       	sbci	r27, 0xF0	; 240
    cb64:	bc 90       	ld	r11, X
    cb66:	bd e0       	ldi	r27, 0x0D	; 13
    cb68:	bb 16       	cp	r11, r27
    cb6a:	79 f0       	breq	.+30     	; 0xcb8a <_Z21Seperate_Out_Sub_Datav+0x252>
    cb6c:	2f 5f       	subi	r18, 0xFF	; 255
    cb6e:	3f 4f       	sbci	r19, 0xFF	; 255
    cb70:	24 3d       	cpi	r18, 0xD4	; 212
    cb72:	a3 e0       	ldi	r26, 0x03	; 3
    cb74:	3a 07       	cpc	r19, r26
    cb76:	09 f4       	brne	.+2      	; 0xcb7a <_Z21Seperate_Out_Sub_Datav+0x242>
    cb78:	8b c0       	rjmp	.+278    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cb7a:	d9 01       	movw	r26, r18
    cb7c:	a7 59       	subi	r26, 0x97	; 151
    cb7e:	b0 4f       	sbci	r27, 0xF0	; 240
    cb80:	bc 90       	ld	r11, X
    cb82:	d6 01       	movw	r26, r12
    cb84:	bd 92       	st	X+, r11
    cb86:	6d 01       	movw	r12, r26
    cb88:	e7 cf       	rjmp	.-50     	; 0xcb58 <_Z21Seperate_Out_Sub_Datav+0x220>
    cb8a:	d4 01       	movw	r26, r8
    cb8c:	ae 0f       	add	r26, r30
    cb8e:	bf 1f       	adc	r27, r31
    cb90:	1c 92       	st	X, r1
    cb92:	df 01       	movw	r26, r30
    cb94:	0d 90       	ld	r0, X+
    cb96:	00 20       	and	r0, r0
    cb98:	e9 f7       	brne	.-6      	; 0xcb94 <_Z21Seperate_Out_Sub_Datav+0x25c>
    cb9a:	11 97       	sbiw	r26, 0x01	; 1
    cb9c:	ae 1b       	sub	r26, r30
    cb9e:	bf 0b       	sbc	r27, r31
    cba0:	a2 30       	cpi	r26, 0x02	; 2
    cba2:	b1 05       	cpc	r27, r1
    cba4:	41 f0       	breq	.+16     	; 0xcbb6 <_Z21Seperate_Out_Sub_Datav+0x27e>
    cba6:	08 f4       	brcc	.+2      	; 0xcbaa <_Z21Seperate_Out_Sub_Datav+0x272>
    cba8:	73 c0       	rjmp	.+230    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cbaa:	a3 30       	cpi	r26, 0x03	; 3
    cbac:	b1 05       	cpc	r27, r1
    cbae:	39 f0       	breq	.+14     	; 0xcbbe <_Z21Seperate_Out_Sub_Datav+0x286>
    cbb0:	14 97       	sbiw	r26, 0x04	; 4
    cbb2:	a9 f0       	breq	.+42     	; 0xcbde <_Z21Seperate_Out_Sub_Datav+0x2a6>
    cbb4:	2f c0       	rjmp	.+94     	; 0xcc14 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cbb6:	80 81       	ld	r24, Z
    cbb8:	90 e0       	ldi	r25, 0x00	; 0
    cbba:	c0 97       	sbiw	r24, 0x30	; 48
    cbbc:	0d c0       	rjmp	.+26     	; 0xcbd8 <_Z21Seperate_Out_Sub_Datav+0x2a0>
    cbbe:	80 81       	ld	r24, Z
    cbc0:	90 e0       	ldi	r25, 0x00	; 0
    cbc2:	c0 97       	sbiw	r24, 0x30	; 48
    cbc4:	f8 9e       	mul	r15, r24
    cbc6:	d0 01       	movw	r26, r0
    cbc8:	f9 9e       	mul	r15, r25
    cbca:	b0 0d       	add	r27, r0
    cbcc:	11 24       	eor	r1, r1
    cbce:	81 81       	ldd	r24, Z+1	; 0x01
    cbd0:	90 e0       	ldi	r25, 0x00	; 0
    cbd2:	c0 97       	sbiw	r24, 0x30	; 48
    cbd4:	8a 0f       	add	r24, r26
    cbd6:	9b 1f       	adc	r25, r27
    cbd8:	00 97       	sbiw	r24, 0x00	; 0
    cbda:	e1 f4       	brne	.+56     	; 0xcc14 <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cbdc:	59 c0       	rjmp	.+178    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cbde:	a0 81       	ld	r26, Z
    cbe0:	b0 e0       	ldi	r27, 0x00	; 0
    cbe2:	d0 97       	sbiw	r26, 0x30	; 48
    cbe4:	ea 9e       	mul	r14, r26
    cbe6:	c0 01       	movw	r24, r0
    cbe8:	eb 9e       	mul	r14, r27
    cbea:	90 0d       	add	r25, r0
    cbec:	11 24       	eor	r1, r1
    cbee:	a1 81       	ldd	r26, Z+1	; 0x01
    cbf0:	b0 e0       	ldi	r27, 0x00	; 0
    cbf2:	d0 97       	sbiw	r26, 0x30	; 48
    cbf4:	fa 9e       	mul	r15, r26
    cbf6:	60 01       	movw	r12, r0
    cbf8:	fb 9e       	mul	r15, r27
    cbfa:	d0 0c       	add	r13, r0
    cbfc:	11 24       	eor	r1, r1
    cbfe:	8c 0d       	add	r24, r12
    cc00:	9d 1d       	adc	r25, r13
    cc02:	a2 81       	ldd	r26, Z+2	; 0x02
    cc04:	b0 e0       	ldi	r27, 0x00	; 0
    cc06:	d0 97       	sbiw	r26, 0x30	; 48
    cc08:	8a 0f       	add	r24, r26
    cc0a:	9b 1f       	adc	r25, r27
    cc0c:	85 3d       	cpi	r24, 0xD5	; 213
    cc0e:	b3 e0       	ldi	r27, 0x03	; 3
    cc10:	9b 07       	cpc	r25, r27
    cc12:	f0 f5       	brcc	.+124    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cc14:	2e 5f       	subi	r18, 0xFE	; 254
    cc16:	3f 4f       	sbci	r19, 0xFF	; 255
    cc18:	24 3d       	cpi	r18, 0xD4	; 212
    cc1a:	a3 e0       	ldi	r26, 0x03	; 3
    cc1c:	3a 07       	cpc	r19, r26
    cc1e:	c0 f5       	brcc	.+112    	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cc20:	58 01       	movw	r10, r16
    cc22:	65 01       	movw	r12, r10
    cc24:	c0 1a       	sub	r12, r16
    cc26:	d1 0a       	sbc	r13, r17
    cc28:	c8 16       	cp	r12, r24
    cc2a:	d9 06       	cpc	r13, r25
    cc2c:	18 f0       	brcs	.+6      	; 0xcc34 <_Z21Seperate_Out_Sub_Datav+0x2fc>
    cc2e:	81 2c       	mov	r8, r1
    cc30:	91 2c       	mov	r9, r1
    cc32:	cb ce       	rjmp	.-618    	; 0xc9ca <_Z21Seperate_Out_Sub_Datav+0x92>
    cc34:	69 01       	movw	r12, r18
    cc36:	bf ef       	ldi	r27, 0xFF	; 255
    cc38:	cb 1a       	sub	r12, r27
    cc3a:	db 0a       	sbc	r13, r27
    cc3c:	27 59       	subi	r18, 0x97	; 151
    cc3e:	30 4f       	sbci	r19, 0xF0	; 240
    cc40:	d9 01       	movw	r26, r18
    cc42:	2c 91       	ld	r18, X
    cc44:	d5 01       	movw	r26, r10
    cc46:	2d 93       	st	X+, r18
    cc48:	5d 01       	movw	r10, r26
    cc4a:	b4 ed       	ldi	r27, 0xD4	; 212
    cc4c:	cb 16       	cp	r12, r27
    cc4e:	b3 e0       	ldi	r27, 0x03	; 3
    cc50:	db 06       	cpc	r13, r27
    cc52:	f1 f0       	breq	.+60     	; 0xcc90 <_Z21Seperate_Out_Sub_Datav+0x358>
    cc54:	96 01       	movw	r18, r12
    cc56:	e5 cf       	rjmp	.-54     	; 0xcc22 <_Z21Seperate_Out_Sub_Datav+0x2ea>
    cc58:	8e e6       	ldi	r24, 0x6E	; 110
    cc5a:	eb ef       	ldi	r30, 0xFB	; 251
    cc5c:	fe e0       	ldi	r31, 0x0E	; 14
    cc5e:	df 01       	movw	r26, r30
    cc60:	1d 92       	st	X+, r1
    cc62:	8a 95       	dec	r24
    cc64:	e9 f7       	brne	.-6      	; 0xcc60 <_Z21Seperate_Out_Sub_Datav+0x328>
    cc66:	84 ed       	ldi	r24, 0xD4	; 212
    cc68:	93 e0       	ldi	r25, 0x03	; 3
    cc6a:	e9 e6       	ldi	r30, 0x69	; 105
    cc6c:	ff e0       	ldi	r31, 0x0F	; 15
    cc6e:	df 01       	movw	r26, r30
    cc70:	9c 01       	movw	r18, r24
    cc72:	1d 92       	st	X+, r1
    cc74:	21 50       	subi	r18, 0x01	; 1
    cc76:	30 40       	sbci	r19, 0x00	; 0
    cc78:	e1 f7       	brne	.-8      	; 0xcc72 <_Z21Seperate_Out_Sub_Datav+0x33a>
    cc7a:	8b ef       	ldi	r24, 0xFB	; 251
    cc7c:	9e e0       	ldi	r25, 0x0E	; 14
    cc7e:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    cc82:	b8 01       	movw	r22, r16
    cc84:	89 e6       	ldi	r24, 0x69	; 105
    cc86:	9f e0       	ldi	r25, 0x0F	; 15
    cc88:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    cc8c:	81 e0       	ldi	r24, 0x01	; 1
    cc8e:	01 c0       	rjmp	.+2      	; 0xcc92 <_Z21Seperate_Out_Sub_Datav+0x35a>
    cc90:	80 e0       	ldi	r24, 0x00	; 0
    cc92:	c0 5d       	subi	r28, 0xD0	; 208
    cc94:	db 4f       	sbci	r29, 0xFB	; 251
    cc96:	0f b6       	in	r0, 0x3f	; 63
    cc98:	f8 94       	cli
    cc9a:	de bf       	out	0x3e, r29	; 62
    cc9c:	0f be       	out	0x3f, r0	; 63
    cc9e:	cd bf       	out	0x3d, r28	; 61
    cca0:	df 91       	pop	r29
    cca2:	cf 91       	pop	r28
    cca4:	1f 91       	pop	r17
    cca6:	0f 91       	pop	r16
    cca8:	ff 90       	pop	r15
    ccaa:	ef 90       	pop	r14
    ccac:	df 90       	pop	r13
    ccae:	cf 90       	pop	r12
    ccb0:	bf 90       	pop	r11
    ccb2:	af 90       	pop	r10
    ccb4:	9f 90       	pop	r9
    ccb6:	8f 90       	pop	r8
    ccb8:	08 95       	ret

0000ccba <_Z12Reset_Bufferv>:
    ccba:	10 92 27 0c 	sts	0x0C27, r1	; 0x800c27 <rx_complete>
    ccbe:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <rx_flag>
    ccc2:	10 92 29 0c 	sts	0x0C29, r1	; 0x800c29 <int_counter+0x1>
    ccc6:	10 92 28 0c 	sts	0x0C28, r1	; 0x800c28 <int_counter>
    ccca:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <my_timer+0x1>
    ccce:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <my_timer>
    ccd2:	84 ed       	ldi	r24, 0xD4	; 212
    ccd4:	93 e0       	ldi	r25, 0x03	; 3
    ccd6:	e9 e6       	ldi	r30, 0x69	; 105
    ccd8:	ff e0       	ldi	r31, 0x0F	; 15
    ccda:	df 01       	movw	r26, r30
    ccdc:	9c 01       	movw	r18, r24
    ccde:	1d 92       	st	X+, r1
    cce0:	21 50       	subi	r18, 0x01	; 1
    cce2:	30 40       	sbci	r19, 0x00	; 0
    cce4:	e1 f7       	brne	.-8      	; 0xccde <_Z12Reset_Bufferv+0x24>
    cce6:	08 95       	ret

0000cce8 <_GLOBAL__sub_I_g_uTick>:
    cce8:	24 e0       	ldi	r18, 0x04	; 4
    ccea:	44 e1       	ldi	r20, 0x14	; 20
    ccec:	67 e2       	ldi	r22, 0x27	; 39
    ccee:	82 e7       	ldi	r24, 0x72	; 114
    ccf0:	9c e0       	ldi	r25, 0x0C	; 12
    ccf2:	0e 94 aa d6 	call	0x1ad54	; 0x1ad54 <_ZN17LiquidCrystal_I2CC1Ehhh>
    ccf6:	25 ed       	ldi	r18, 0xD5	; 213
    ccf8:	37 e1       	ldi	r19, 0x17	; 23
    ccfa:	42 e0       	ldi	r20, 0x02	; 2
    ccfc:	65 e3       	ldi	r22, 0x35	; 53
    ccfe:	8a e2       	ldi	r24, 0x2A	; 42
    cd00:	9c e0       	ldi	r25, 0x0C	; 12
    cd02:	0c 94 f2 d9 	jmp	0x1b3e4	; 0x1b3e4 <_ZN7RH_RF95C1EhhR12RHGenericSPI>

0000cd06 <_Z14Lora_Data_Sendh>:
    cd06:	cf 93       	push	r28
    cd08:	c8 2f       	mov	r28, r24
    cd0a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    cd0e:	81 30       	cpi	r24, 0x01	; 1
    cd10:	89 f4       	brne	.+34     	; 0xcd34 <_Z14Lora_Data_Sendh+0x2e>
    cd12:	69 e6       	ldi	r22, 0x69	; 105
    cd14:	74 e2       	ldi	r23, 0x24	; 36
    cd16:	82 e5       	ldi	r24, 0x52	; 82
    cd18:	94 e1       	ldi	r25, 0x14	; 20
    cd1a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cd1e:	4a e0       	ldi	r20, 0x0A	; 10
    cd20:	50 e0       	ldi	r21, 0x00	; 0
    cd22:	6c 2f       	mov	r22, r28
    cd24:	82 e5       	ldi	r24, 0x52	; 82
    cd26:	94 e1       	ldi	r25, 0x14	; 20
    cd28:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
    cd2c:	82 e5       	ldi	r24, 0x52	; 82
    cd2e:	94 e1       	ldi	r25, 0x14	; 20
    cd30:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    cd34:	4c 2f       	mov	r20, r28
    cd36:	69 e7       	ldi	r22, 0x79	; 121
    cd38:	73 e1       	ldi	r23, 0x13	; 19
    cd3a:	8a e2       	ldi	r24, 0x2A	; 42
    cd3c:	9c e0       	ldi	r25, 0x0C	; 12
    cd3e:	0e 94 e5 db 	call	0x1b7ca	; 0x1b7ca <_ZN7RH_RF954sendEPKhh>
    cd42:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    cd46:	81 30       	cpi	r24, 0x01	; 1
    cd48:	51 f4       	brne	.+20     	; 0xcd5e <_Z14Lora_Data_Sendh+0x58>
    cd4a:	6c e5       	ldi	r22, 0x5C	; 92
    cd4c:	74 e2       	ldi	r23, 0x24	; 36
    cd4e:	82 e5       	ldi	r24, 0x52	; 82
    cd50:	94 e1       	ldi	r25, 0x14	; 20
    cd52:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cd56:	82 e5       	ldi	r24, 0x52	; 82
    cd58:	94 e1       	ldi	r25, 0x14	; 20
    cd5a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    cd5e:	64 ef       	ldi	r22, 0xF4	; 244
    cd60:	71 e0       	ldi	r23, 0x01	; 1
    cd62:	8a e2       	ldi	r24, 0x2A	; 42
    cd64:	9c e0       	ldi	r25, 0x0C	; 12
    cd66:	0e 94 51 d8 	call	0x1b0a2	; 0x1b0a2 <_ZN15RHGenericDriver14waitPacketSentEj>
    cd6a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    cd6e:	81 30       	cpi	r24, 0x01	; 1
    cd70:	39 f4       	brne	.+14     	; 0xcd80 <_Z14Lora_Data_Sendh+0x7a>
    cd72:	62 e5       	ldi	r22, 0x52	; 82
    cd74:	74 e2       	ldi	r23, 0x24	; 36
    cd76:	82 e5       	ldi	r24, 0x52	; 82
    cd78:	94 e1       	ldi	r25, 0x14	; 20
    cd7a:	cf 91       	pop	r28
    cd7c:	0c 94 ad d1 	jmp	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cd80:	cf 91       	pop	r28
    cd82:	08 95       	ret

0000cd84 <_Z15Send_AT_CommandPcS_S_jh>:
    cd84:	4f 92       	push	r4
    cd86:	5f 92       	push	r5
    cd88:	6f 92       	push	r6
    cd8a:	7f 92       	push	r7
    cd8c:	8f 92       	push	r8
    cd8e:	9f 92       	push	r9
    cd90:	af 92       	push	r10
    cd92:	bf 92       	push	r11
    cd94:	cf 92       	push	r12
    cd96:	df 92       	push	r13
    cd98:	ef 92       	push	r14
    cd9a:	ff 92       	push	r15
    cd9c:	0f 93       	push	r16
    cd9e:	1f 93       	push	r17
    cda0:	cf 93       	push	r28
    cda2:	df 93       	push	r29
    cda4:	1f 92       	push	r1
    cda6:	1f 92       	push	r1
    cda8:	cd b7       	in	r28, 0x3d	; 61
    cdaa:	de b7       	in	r29, 0x3e	; 62
    cdac:	5c 01       	movw	r10, r24
    cdae:	7b 01       	movw	r14, r22
    cdb0:	6a 01       	movw	r12, r20
    cdb2:	89 01       	movw	r16, r18
    cdb4:	89 2b       	or	r24, r25
    cdb6:	31 f0       	breq	.+12     	; 0xcdc4 <_Z15Send_AT_CommandPcS_S_jh+0x40>
    cdb8:	64 e6       	ldi	r22, 0x64	; 100
    cdba:	70 e0       	ldi	r23, 0x00	; 0
    cdbc:	80 e0       	ldi	r24, 0x00	; 0
    cdbe:	90 e0       	ldi	r25, 0x00	; 0
    cdc0:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    cdc4:	10 93 92 0c 	sts	0x0C92, r17	; 0x800c92 <Interrupt_Time_Out+0x1>
    cdc8:	00 93 91 0c 	sts	0x0C91, r16	; 0x800c91 <Interrupt_Time_Out>
    cdcc:	a1 14       	cp	r10, r1
    cdce:	b1 04       	cpc	r11, r1
    cdd0:	31 f0       	breq	.+12     	; 0xcdde <_Z15Send_AT_CommandPcS_S_jh+0x5a>
    cdd2:	73 df       	rcall	.-282    	; 0xccba <_Z12Reset_Bufferv>
    cdd4:	b5 01       	movw	r22, r10
    cdd6:	8f e0       	ldi	r24, 0x0F	; 15
    cdd8:	96 e1       	ldi	r25, 0x16	; 22
    cdda:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
    cdde:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    cde2:	4b 01       	movw	r8, r22
    cde4:	5c 01       	movw	r10, r24
    cde6:	28 01       	movw	r4, r16
    cde8:	61 2c       	mov	r6, r1
    cdea:	71 2c       	mov	r7, r1
    cdec:	b7 01       	movw	r22, r14
    cdee:	89 e6       	ldi	r24, 0x69	; 105
    cdf0:	9f e0       	ldi	r25, 0x0F	; 15
    cdf2:	c1 14       	cp	r12, r1
    cdf4:	d1 04       	cpc	r13, r1
    cdf6:	39 f0       	breq	.+14     	; 0xce06 <_Z15Send_AT_CommandPcS_S_jh+0x82>
    cdf8:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    cdfc:	89 2b       	or	r24, r25
    cdfe:	b9 f4       	brne	.+46     	; 0xce2e <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    ce00:	b6 01       	movw	r22, r12
    ce02:	89 e6       	ldi	r24, 0x69	; 105
    ce04:	9f e0       	ldi	r25, 0x0F	; 15
    ce06:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    ce0a:	89 2b       	or	r24, r25
    ce0c:	81 f4       	brne	.+32     	; 0xce2e <_Z15Send_AT_CommandPcS_S_jh+0xaa>
    ce0e:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    ce12:	dc 01       	movw	r26, r24
    ce14:	cb 01       	movw	r24, r22
    ce16:	88 19       	sub	r24, r8
    ce18:	99 09       	sbc	r25, r9
    ce1a:	aa 09       	sbc	r26, r10
    ce1c:	bb 09       	sbc	r27, r11
    ce1e:	84 15       	cp	r24, r4
    ce20:	95 05       	cpc	r25, r5
    ce22:	a6 05       	cpc	r26, r6
    ce24:	b7 05       	cpc	r27, r7
    ce26:	10 f3       	brcs	.-60     	; 0xcdec <_Z15Send_AT_CommandPcS_S_jh+0x68>
    ce28:	00 e0       	ldi	r16, 0x00	; 0
    ce2a:	10 e0       	ldi	r17, 0x00	; 0
    ce2c:	02 c0       	rjmp	.+4      	; 0xce32 <_Z15Send_AT_CommandPcS_S_jh+0xae>
    ce2e:	01 e0       	ldi	r16, 0x01	; 1
    ce30:	10 e0       	ldi	r17, 0x00	; 0
    ce32:	10 92 27 0c 	sts	0x0C27, r1	; 0x800c27 <rx_complete>
    ce36:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <rx_flag>
    ce3a:	10 92 29 0c 	sts	0x0C29, r1	; 0x800c29 <int_counter+0x1>
    ce3e:	10 92 28 0c 	sts	0x0C28, r1	; 0x800c28 <int_counter>
    ce42:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <my_timer+0x1>
    ce46:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <my_timer>
    ce4a:	84 e1       	ldi	r24, 0x14	; 20
    ce4c:	95 e0       	ldi	r25, 0x05	; 5
    ce4e:	90 93 92 0c 	sts	0x0C92, r25	; 0x800c92 <Interrupt_Time_Out+0x1>
    ce52:	80 93 91 0c 	sts	0x0C91, r24	; 0x800c91 <Interrupt_Time_Out>
    ce56:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ce5a:	81 30       	cpi	r24, 0x01	; 1
    ce5c:	51 f4       	brne	.+20     	; 0xce72 <_Z15Send_AT_CommandPcS_S_jh+0xee>
    ce5e:	69 e6       	ldi	r22, 0x69	; 105
    ce60:	7f e0       	ldi	r23, 0x0F	; 15
    ce62:	82 e5       	ldi	r24, 0x52	; 82
    ce64:	94 e1       	ldi	r25, 0x14	; 20
    ce66:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
    ce6a:	82 e5       	ldi	r24, 0x52	; 82
    ce6c:	94 e1       	ldi	r25, 0x14	; 20
    ce6e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    ce72:	64 e6       	ldi	r22, 0x64	; 100
    ce74:	70 e0       	ldi	r23, 0x00	; 0
    ce76:	80 e0       	ldi	r24, 0x00	; 0
    ce78:	90 e0       	ldi	r25, 0x00	; 0
    ce7a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    ce7e:	80 91 90 0c 	lds	r24, 0x0C90	; 0x800c90 <Reading_Time>
    ce82:	81 11       	cpse	r24, r1
    ce84:	0a c0       	rjmp	.+20     	; 0xce9a <_Z15Send_AT_CommandPcS_S_jh+0x116>
    ce86:	84 ed       	ldi	r24, 0xD4	; 212
    ce88:	93 e0       	ldi	r25, 0x03	; 3
    ce8a:	e9 e6       	ldi	r30, 0x69	; 105
    ce8c:	ff e0       	ldi	r31, 0x0F	; 15
    ce8e:	df 01       	movw	r26, r30
    ce90:	9c 01       	movw	r18, r24
    ce92:	1d 92       	st	X+, r1
    ce94:	21 50       	subi	r18, 0x01	; 1
    ce96:	30 40       	sbci	r19, 0x00	; 0
    ce98:	e1 f7       	brne	.-8      	; 0xce92 <_Z15Send_AT_CommandPcS_S_jh+0x10e>
    ce9a:	0e 94 d8 7d 	call	0xfbb0	; 0xfbb0 <_Z17Clear_Serial_Datav>
    ce9e:	01 15       	cp	r16, r1
    cea0:	11 05       	cpc	r17, r1
    cea2:	89 f4       	brne	.+34     	; 0xcec6 <_Z15Send_AT_CommandPcS_S_jh+0x142>
    cea4:	1a 82       	std	Y+2, r1	; 0x02
    cea6:	19 82       	std	Y+1, r1	; 0x01
    cea8:	69 e9       	ldi	r22, 0x99	; 153
    ceaa:	73 e0       	ldi	r23, 0x03	; 3
    ceac:	82 e5       	ldi	r24, 0x52	; 82
    ceae:	94 e1       	ldi	r25, 0x14	; 20
    ceb0:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
    ceb4:	8a e1       	ldi	r24, 0x1A	; 26
    ceb6:	89 83       	std	Y+1, r24	; 0x01
    ceb8:	be 01       	movw	r22, r28
    ceba:	6f 5f       	subi	r22, 0xFF	; 255
    cebc:	7f 4f       	sbci	r23, 0xFF	; 255
    cebe:	8f e0       	ldi	r24, 0x0F	; 15
    cec0:	96 e1       	ldi	r25, 0x16	; 22
    cec2:	0e 94 a0 d1 	call	0x1a340	; 0x1a340 <_ZN5Print5printEPKc>
    cec6:	80 2f       	mov	r24, r16
    cec8:	0f 90       	pop	r0
    ceca:	0f 90       	pop	r0
    cecc:	df 91       	pop	r29
    cece:	cf 91       	pop	r28
    ced0:	1f 91       	pop	r17
    ced2:	0f 91       	pop	r16
    ced4:	ff 90       	pop	r15
    ced6:	ef 90       	pop	r14
    ced8:	df 90       	pop	r13
    ceda:	cf 90       	pop	r12
    cedc:	bf 90       	pop	r11
    cede:	af 90       	pop	r10
    cee0:	9f 90       	pop	r9
    cee2:	8f 90       	pop	r8
    cee4:	7f 90       	pop	r7
    cee6:	6f 90       	pop	r6
    cee8:	5f 90       	pop	r5
    ceea:	4f 90       	pop	r4
    ceec:	08 95       	ret

0000ceee <_Z8Gsm_Initv>:
    ceee:	0f 93       	push	r16
    cef0:	e4 de       	rcall	.-568    	; 0xccba <_Z12Reset_Bufferv>
    cef2:	69 e3       	ldi	r22, 0x39	; 57
    cef4:	74 e2       	ldi	r23, 0x24	; 36
    cef6:	8f e0       	ldi	r24, 0x0F	; 15
    cef8:	96 e1       	ldi	r25, 0x16	; 22
    cefa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cefe:	02 e0       	ldi	r16, 0x02	; 2
    cf00:	28 ee       	ldi	r18, 0xE8	; 232
    cf02:	33 e0       	ldi	r19, 0x03	; 3
    cf04:	40 e0       	ldi	r20, 0x00	; 0
    cf06:	50 e0       	ldi	r21, 0x00	; 0
    cf08:	6e e1       	ldi	r22, 0x1E	; 30
    cf0a:	73 e0       	ldi	r23, 0x03	; 3
    cf0c:	80 e0       	ldi	r24, 0x00	; 0
    cf0e:	90 e0       	ldi	r25, 0x00	; 0
    cf10:	39 df       	rcall	.-398    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    cf12:	88 23       	and	r24, r24
    cf14:	01 f1       	breq	.+64     	; 0xcf56 <_Z8Gsm_Initv+0x68>
    cf16:	d1 de       	rcall	.-606    	; 0xccba <_Z12Reset_Bufferv>
    cf18:	6b e2       	ldi	r22, 0x2B	; 43
    cf1a:	74 e2       	ldi	r23, 0x24	; 36
    cf1c:	8f e0       	ldi	r24, 0x0F	; 15
    cf1e:	96 e1       	ldi	r25, 0x16	; 22
    cf20:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf24:	68 ee       	ldi	r22, 0xE8	; 232
    cf26:	73 e0       	ldi	r23, 0x03	; 3
    cf28:	80 e0       	ldi	r24, 0x00	; 0
    cf2a:	90 e0       	ldi	r25, 0x00	; 0
    cf2c:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    cf30:	c4 de       	rcall	.-632    	; 0xccba <_Z12Reset_Bufferv>
    cf32:	61 e2       	ldi	r22, 0x21	; 33
    cf34:	74 e2       	ldi	r23, 0x24	; 36
    cf36:	8f e0       	ldi	r24, 0x0F	; 15
    cf38:	96 e1       	ldi	r25, 0x16	; 22
    cf3a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf3e:	01 e0       	ldi	r16, 0x01	; 1
    cf40:	28 eb       	ldi	r18, 0xB8	; 184
    cf42:	3b e0       	ldi	r19, 0x0B	; 11
    cf44:	40 e0       	ldi	r20, 0x00	; 0
    cf46:	50 e0       	ldi	r21, 0x00	; 0
    cf48:	6e e1       	ldi	r22, 0x1E	; 30
    cf4a:	73 e0       	ldi	r23, 0x03	; 3
    cf4c:	80 e0       	ldi	r24, 0x00	; 0
    cf4e:	90 e0       	ldi	r25, 0x00	; 0
    cf50:	19 df       	rcall	.-462    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    cf52:	81 e0       	ldi	r24, 0x01	; 1
    cf54:	01 c0       	rjmp	.+2      	; 0xcf58 <_Z8Gsm_Initv+0x6a>
    cf56:	80 e0       	ldi	r24, 0x00	; 0
    cf58:	0f 91       	pop	r16
    cf5a:	08 95       	ret

0000cf5c <_Z20Check_Gsm_Connectionv>:
    cf5c:	0f 93       	push	r16
    cf5e:	ad de       	rcall	.-678    	; 0xccba <_Z12Reset_Bufferv>
    cf60:	66 e1       	ldi	r22, 0x16	; 22
    cf62:	74 e2       	ldi	r23, 0x24	; 36
    cf64:	8f e0       	ldi	r24, 0x0F	; 15
    cf66:	96 e1       	ldi	r25, 0x16	; 22
    cf68:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf6c:	02 e0       	ldi	r16, 0x02	; 2
    cf6e:	28 e8       	ldi	r18, 0x88	; 136
    cf70:	33 e1       	ldi	r19, 0x13	; 19
    cf72:	40 e0       	ldi	r20, 0x00	; 0
    cf74:	50 e0       	ldi	r21, 0x00	; 0
    cf76:	6e e1       	ldi	r22, 0x1E	; 30
    cf78:	73 e0       	ldi	r23, 0x03	; 3
    cf7a:	80 e0       	ldi	r24, 0x00	; 0
    cf7c:	90 e0       	ldi	r25, 0x00	; 0
    cf7e:	02 df       	rcall	.-508    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    cf80:	9c de       	rcall	.-712    	; 0xccba <_Z12Reset_Bufferv>
    cf82:	6c e0       	ldi	r22, 0x0C	; 12
    cf84:	74 e2       	ldi	r23, 0x24	; 36
    cf86:	8f e0       	ldi	r24, 0x0F	; 15
    cf88:	96 e1       	ldi	r25, 0x16	; 22
    cf8a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cf8e:	28 eb       	ldi	r18, 0xB8	; 184
    cf90:	3b e0       	ldi	r19, 0x0B	; 11
    cf92:	40 e0       	ldi	r20, 0x00	; 0
    cf94:	50 e0       	ldi	r21, 0x00	; 0
    cf96:	6e e1       	ldi	r22, 0x1E	; 30
    cf98:	73 e0       	ldi	r23, 0x03	; 3
    cf9a:	80 e0       	ldi	r24, 0x00	; 0
    cf9c:	90 e0       	ldi	r25, 0x00	; 0
    cf9e:	f2 de       	rcall	.-540    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    cfa0:	8c de       	rcall	.-744    	; 0xccba <_Z12Reset_Bufferv>
    cfa2:	63 e0       	ldi	r22, 0x03	; 3
    cfa4:	74 e2       	ldi	r23, 0x24	; 36
    cfa6:	8f e0       	ldi	r24, 0x0F	; 15
    cfa8:	96 e1       	ldi	r25, 0x16	; 22
    cfaa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cfae:	28 eb       	ldi	r18, 0xB8	; 184
    cfb0:	3b e0       	ldi	r19, 0x0B	; 11
    cfb2:	4c ea       	ldi	r20, 0xAC	; 172
    cfb4:	53 e0       	ldi	r21, 0x03	; 3
    cfb6:	67 eb       	ldi	r22, 0xB7	; 183
    cfb8:	73 e0       	ldi	r23, 0x03	; 3
    cfba:	80 e0       	ldi	r24, 0x00	; 0
    cfbc:	90 e0       	ldi	r25, 0x00	; 0
    cfbe:	e2 de       	rcall	.-572    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    cfc0:	81 11       	cpse	r24, r1
    cfc2:	26 c0       	rjmp	.+76     	; 0xd010 <_Z20Check_Gsm_Connectionv+0xb4>
    cfc4:	68 eb       	ldi	r22, 0xB8	; 184
    cfc6:	7b e0       	ldi	r23, 0x0B	; 11
    cfc8:	80 e0       	ldi	r24, 0x00	; 0
    cfca:	90 e0       	ldi	r25, 0x00	; 0
    cfcc:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    cfd0:	74 de       	rcall	.-792    	; 0xccba <_Z12Reset_Bufferv>
    cfd2:	69 ef       	ldi	r22, 0xF9	; 249
    cfd4:	73 e2       	ldi	r23, 0x23	; 35
    cfd6:	8f e0       	ldi	r24, 0x0F	; 15
    cfd8:	96 e1       	ldi	r25, 0x16	; 22
    cfda:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cfde:	28 eb       	ldi	r18, 0xB8	; 184
    cfe0:	3b e0       	ldi	r19, 0x0B	; 11
    cfe2:	40 e0       	ldi	r20, 0x00	; 0
    cfe4:	50 e0       	ldi	r21, 0x00	; 0
    cfe6:	6e e1       	ldi	r22, 0x1E	; 30
    cfe8:	73 e0       	ldi	r23, 0x03	; 3
    cfea:	80 e0       	ldi	r24, 0x00	; 0
    cfec:	90 e0       	ldi	r25, 0x00	; 0
    cfee:	ca de       	rcall	.-620    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    cff0:	64 de       	rcall	.-824    	; 0xccba <_Z12Reset_Bufferv>
    cff2:	60 ef       	ldi	r22, 0xF0	; 240
    cff4:	73 e2       	ldi	r23, 0x23	; 35
    cff6:	8f e0       	ldi	r24, 0x0F	; 15
    cff8:	96 e1       	ldi	r25, 0x16	; 22
    cffa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cffe:	28 eb       	ldi	r18, 0xB8	; 184
    d000:	3b e0       	ldi	r19, 0x0B	; 11
    d002:	4c ea       	ldi	r20, 0xAC	; 172
    d004:	53 e0       	ldi	r21, 0x03	; 3
    d006:	67 eb       	ldi	r22, 0xB7	; 183
    d008:	73 e0       	ldi	r23, 0x03	; 3
    d00a:	80 e0       	ldi	r24, 0x00	; 0
    d00c:	90 e0       	ldi	r25, 0x00	; 0
    d00e:	ba de       	rcall	.-652    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d010:	68 ee       	ldi	r22, 0xE8	; 232
    d012:	73 e0       	ldi	r23, 0x03	; 3
    d014:	80 e0       	ldi	r24, 0x00	; 0
    d016:	90 e0       	ldi	r25, 0x00	; 0
    d018:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    d01c:	4e de       	rcall	.-868    	; 0xccba <_Z12Reset_Bufferv>
    d01e:	65 ee       	ldi	r22, 0xE5	; 229
    d020:	73 e2       	ldi	r23, 0x23	; 35
    d022:	8f e0       	ldi	r24, 0x0F	; 15
    d024:	96 e1       	ldi	r25, 0x16	; 22
    d026:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d02a:	02 e0       	ldi	r16, 0x02	; 2
    d02c:	28 eb       	ldi	r18, 0xB8	; 184
    d02e:	3b e0       	ldi	r19, 0x0B	; 11
    d030:	40 e0       	ldi	r20, 0x00	; 0
    d032:	50 e0       	ldi	r21, 0x00	; 0
    d034:	6e e1       	ldi	r22, 0x1E	; 30
    d036:	73 e0       	ldi	r23, 0x03	; 3
    d038:	80 e0       	ldi	r24, 0x00	; 0
    d03a:	90 e0       	ldi	r25, 0x00	; 0
    d03c:	a3 de       	rcall	.-698    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d03e:	3d de       	rcall	.-902    	; 0xccba <_Z12Reset_Bufferv>
    d040:	6b ed       	ldi	r22, 0xDB	; 219
    d042:	73 e2       	ldi	r23, 0x23	; 35
    d044:	8f e0       	ldi	r24, 0x0F	; 15
    d046:	96 e1       	ldi	r25, 0x16	; 22
    d048:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d04c:	28 eb       	ldi	r18, 0xB8	; 184
    d04e:	3b e0       	ldi	r19, 0x0B	; 11
    d050:	42 ec       	ldi	r20, 0xC2	; 194
    d052:	53 e0       	ldi	r21, 0x03	; 3
    d054:	6e ec       	ldi	r22, 0xCE	; 206
    d056:	73 e0       	ldi	r23, 0x03	; 3
    d058:	80 e0       	ldi	r24, 0x00	; 0
    d05a:	90 e0       	ldi	r25, 0x00	; 0
    d05c:	93 de       	rcall	.-730    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d05e:	81 11       	cpse	r24, r1
    d060:	2b c0       	rjmp	.+86     	; 0xd0b8 <_Z20Check_Gsm_Connectionv+0x15c>
    d062:	68 ee       	ldi	r22, 0xE8	; 232
    d064:	73 e0       	ldi	r23, 0x03	; 3
    d066:	80 e0       	ldi	r24, 0x00	; 0
    d068:	90 e0       	ldi	r25, 0x00	; 0
    d06a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    d06e:	25 de       	rcall	.-950    	; 0xccba <_Z12Reset_Bufferv>
    d070:	60 ed       	ldi	r22, 0xD0	; 208
    d072:	73 e2       	ldi	r23, 0x23	; 35
    d074:	8f e0       	ldi	r24, 0x0F	; 15
    d076:	96 e1       	ldi	r25, 0x16	; 22
    d078:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d07c:	28 eb       	ldi	r18, 0xB8	; 184
    d07e:	3b e0       	ldi	r19, 0x0B	; 11
    d080:	40 e0       	ldi	r20, 0x00	; 0
    d082:	50 e0       	ldi	r21, 0x00	; 0
    d084:	6e e1       	ldi	r22, 0x1E	; 30
    d086:	73 e0       	ldi	r23, 0x03	; 3
    d088:	80 e0       	ldi	r24, 0x00	; 0
    d08a:	90 e0       	ldi	r25, 0x00	; 0
    d08c:	7b de       	rcall	.-778    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d08e:	15 de       	rcall	.-982    	; 0xccba <_Z12Reset_Bufferv>
    d090:	66 ec       	ldi	r22, 0xC6	; 198
    d092:	73 e2       	ldi	r23, 0x23	; 35
    d094:	8f e0       	ldi	r24, 0x0F	; 15
    d096:	96 e1       	ldi	r25, 0x16	; 22
    d098:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d09c:	28 eb       	ldi	r18, 0xB8	; 184
    d09e:	3b e0       	ldi	r19, 0x0B	; 11
    d0a0:	42 ec       	ldi	r20, 0xC2	; 194
    d0a2:	53 e0       	ldi	r21, 0x03	; 3
    d0a4:	6e ec       	ldi	r22, 0xCE	; 206
    d0a6:	73 e0       	ldi	r23, 0x03	; 3
    d0a8:	80 e0       	ldi	r24, 0x00	; 0
    d0aa:	90 e0       	ldi	r25, 0x00	; 0
    d0ac:	6b de       	rcall	.-810    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d0ae:	91 e0       	ldi	r25, 0x01	; 1
    d0b0:	81 11       	cpse	r24, r1
    d0b2:	03 c0       	rjmp	.+6      	; 0xd0ba <_Z20Check_Gsm_Connectionv+0x15e>
    d0b4:	90 e0       	ldi	r25, 0x00	; 0
    d0b6:	01 c0       	rjmp	.+2      	; 0xd0ba <_Z20Check_Gsm_Connectionv+0x15e>
    d0b8:	91 e0       	ldi	r25, 0x01	; 1
    d0ba:	89 2f       	mov	r24, r25
    d0bc:	0f 91       	pop	r16
    d0be:	08 95       	ret

0000d0c0 <_Z17Get_Operator_NamePc>:
    d0c0:	0f 93       	push	r16
    d0c2:	cf 93       	push	r28
    d0c4:	df 93       	push	r29
    d0c6:	ec 01       	movw	r28, r24
    d0c8:	f8 dd       	rcall	.-1040   	; 0xccba <_Z12Reset_Bufferv>
    d0ca:	81 e0       	ldi	r24, 0x01	; 1
    d0cc:	80 93 90 0c 	sts	0x0C90, r24	; 0x800c90 <Reading_Time>
    d0d0:	6d eb       	ldi	r22, 0xBD	; 189
    d0d2:	73 e2       	ldi	r23, 0x23	; 35
    d0d4:	8f e0       	ldi	r24, 0x0F	; 15
    d0d6:	96 e1       	ldi	r25, 0x16	; 22
    d0d8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d0dc:	02 e0       	ldi	r16, 0x02	; 2
    d0de:	28 eb       	ldi	r18, 0xB8	; 184
    d0e0:	3b e0       	ldi	r19, 0x0B	; 11
    d0e2:	40 e0       	ldi	r20, 0x00	; 0
    d0e4:	50 e0       	ldi	r21, 0x00	; 0
    d0e6:	6e e1       	ldi	r22, 0x1E	; 30
    d0e8:	73 e0       	ldi	r23, 0x03	; 3
    d0ea:	80 e0       	ldi	r24, 0x00	; 0
    d0ec:	90 e0       	ldi	r25, 0x00	; 0
    d0ee:	4a de       	rcall	.-876    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d0f0:	69 e6       	ldi	r22, 0x69	; 105
    d0f2:	7f e0       	ldi	r23, 0x0F	; 15
    d0f4:	ce 01       	movw	r24, r28
    d0f6:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    d0fa:	84 ed       	ldi	r24, 0xD4	; 212
    d0fc:	93 e0       	ldi	r25, 0x03	; 3
    d0fe:	e9 e6       	ldi	r30, 0x69	; 105
    d100:	ff e0       	ldi	r31, 0x0F	; 15
    d102:	df 01       	movw	r26, r30
    d104:	9c 01       	movw	r18, r24
    d106:	1d 92       	st	X+, r1
    d108:	21 50       	subi	r18, 0x01	; 1
    d10a:	30 40       	sbci	r19, 0x00	; 0
    d10c:	e1 f7       	brne	.-8      	; 0xd106 <_Z17Get_Operator_NamePc+0x46>
    d10e:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <Reading_Time>
    d112:	df 91       	pop	r29
    d114:	cf 91       	pop	r28
    d116:	0f 91       	pop	r16
    d118:	08 95       	ret

0000d11a <_Z12Gprs_ConnectPc>:
    d11a:	ef 92       	push	r14
    d11c:	ff 92       	push	r15
    d11e:	0f 93       	push	r16
    d120:	cf 93       	push	r28
    d122:	df 93       	push	r29
    d124:	cd b7       	in	r28, 0x3d	; 61
    d126:	de b7       	in	r29, 0x3e	; 62
    d128:	a8 97       	sbiw	r28, 0x28	; 40
    d12a:	0f b6       	in	r0, 0x3f	; 63
    d12c:	f8 94       	cli
    d12e:	de bf       	out	0x3e, r29	; 62
    d130:	0f be       	out	0x3f, r0	; 63
    d132:	cd bf       	out	0x3d, r28	; 61
    d134:	c2 dd       	rcall	.-1148   	; 0xccba <_Z12Reset_Bufferv>
    d136:	84 e5       	ldi	r24, 0x54	; 84
    d138:	9d e0       	ldi	r25, 0x0D	; 13
    d13a:	9f 93       	push	r25
    d13c:	8f 93       	push	r24
    d13e:	8a ed       	ldi	r24, 0xDA	; 218
    d140:	93 e0       	ldi	r25, 0x03	; 3
    d142:	9f 93       	push	r25
    d144:	8f 93       	push	r24
    d146:	ce 01       	movw	r24, r28
    d148:	01 96       	adiw	r24, 0x01	; 1
    d14a:	7c 01       	movw	r14, r24
    d14c:	9f 93       	push	r25
    d14e:	8f 93       	push	r24
    d150:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    d154:	01 e0       	ldi	r16, 0x01	; 1
    d156:	28 ee       	ldi	r18, 0xE8	; 232
    d158:	33 e0       	ldi	r19, 0x03	; 3
    d15a:	40 e0       	ldi	r20, 0x00	; 0
    d15c:	50 e0       	ldi	r21, 0x00	; 0
    d15e:	6e e1       	ldi	r22, 0x1E	; 30
    d160:	73 e0       	ldi	r23, 0x03	; 3
    d162:	c7 01       	movw	r24, r14
    d164:	0f de       	rcall	.-994    	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d166:	64 e9       	ldi	r22, 0x94	; 148
    d168:	73 e2       	ldi	r23, 0x23	; 35
    d16a:	82 e5       	ldi	r24, 0x52	; 82
    d16c:	94 e1       	ldi	r25, 0x14	; 20
    d16e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d172:	0f 90       	pop	r0
    d174:	0f 90       	pop	r0
    d176:	0f 90       	pop	r0
    d178:	0f 90       	pop	r0
    d17a:	0f 90       	pop	r0
    d17c:	0f 90       	pop	r0
    d17e:	81 e0       	ldi	r24, 0x01	; 1
    d180:	a8 96       	adiw	r28, 0x28	; 40
    d182:	0f b6       	in	r0, 0x3f	; 63
    d184:	f8 94       	cli
    d186:	de bf       	out	0x3e, r29	; 62
    d188:	0f be       	out	0x3f, r0	; 63
    d18a:	cd bf       	out	0x3d, r28	; 61
    d18c:	df 91       	pop	r29
    d18e:	cf 91       	pop	r28
    d190:	0f 91       	pop	r16
    d192:	ff 90       	pop	r15
    d194:	ef 90       	pop	r14
    d196:	08 95       	ret

0000d198 <_Z12MQTT_PublishPhS_>:
    d198:	af 92       	push	r10
    d19a:	bf 92       	push	r11
    d19c:	cf 92       	push	r12
    d19e:	df 92       	push	r13
    d1a0:	ef 92       	push	r14
    d1a2:	ff 92       	push	r15
    d1a4:	0f 93       	push	r16
    d1a6:	1f 93       	push	r17
    d1a8:	cf 93       	push	r28
    d1aa:	df 93       	push	r29
    d1ac:	cd b7       	in	r28, 0x3d	; 61
    d1ae:	de b7       	in	r29, 0x3e	; 62
    d1b0:	6e 97       	sbiw	r28, 0x1e	; 30
    d1b2:	0f b6       	in	r0, 0x3f	; 63
    d1b4:	f8 94       	cli
    d1b6:	de bf       	out	0x3e, r29	; 62
    d1b8:	0f be       	out	0x3f, r0	; 63
    d1ba:	cd bf       	out	0x3d, r28	; 61
    d1bc:	5c 01       	movw	r10, r24
    d1be:	6b 01       	movw	r12, r22
    d1c0:	1e e1       	ldi	r17, 0x1E	; 30
    d1c2:	ce 01       	movw	r24, r28
    d1c4:	01 96       	adiw	r24, 0x01	; 1
    d1c6:	7c 01       	movw	r14, r24
    d1c8:	fc 01       	movw	r30, r24
    d1ca:	81 2f       	mov	r24, r17
    d1cc:	11 92       	st	Z+, r1
    d1ce:	8a 95       	dec	r24
    d1d0:	e9 f7       	brne	.-6      	; 0xd1cc <_Z12MQTT_PublishPhS_+0x34>
    d1d2:	73 dd       	rcall	.-1306   	; 0xccba <_Z12Reset_Bufferv>
    d1d4:	f5 01       	movw	r30, r10
    d1d6:	01 90       	ld	r0, Z+
    d1d8:	00 20       	and	r0, r0
    d1da:	e9 f7       	brne	.-6      	; 0xd1d6 <_Z12MQTT_PublishPhS_+0x3e>
    d1dc:	31 97       	sbiw	r30, 0x01	; 1
    d1de:	ea 19       	sub	r30, r10
    d1e0:	fb 09       	sbc	r31, r11
    d1e2:	ff 93       	push	r31
    d1e4:	ef 93       	push	r30
    d1e6:	81 ef       	ldi	r24, 0xF1	; 241
    d1e8:	93 e0       	ldi	r25, 0x03	; 3
    d1ea:	9f 93       	push	r25
    d1ec:	8f 93       	push	r24
    d1ee:	ff 92       	push	r15
    d1f0:	ef 92       	push	r14
    d1f2:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    d1f6:	02 e0       	ldi	r16, 0x02	; 2
    d1f8:	28 eb       	ldi	r18, 0xB8	; 184
    d1fa:	3b e0       	ldi	r19, 0x0B	; 11
    d1fc:	40 e0       	ldi	r20, 0x00	; 0
    d1fe:	50 e0       	ldi	r21, 0x00	; 0
    d200:	64 e0       	ldi	r22, 0x04	; 4
    d202:	74 e0       	ldi	r23, 0x04	; 4
    d204:	c7 01       	movw	r24, r14
    d206:	be dd       	rcall	.-1156   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d208:	0f 90       	pop	r0
    d20a:	0f 90       	pop	r0
    d20c:	0f 90       	pop	r0
    d20e:	0f 90       	pop	r0
    d210:	0f 90       	pop	r0
    d212:	0f 90       	pop	r0
    d214:	81 11       	cpse	r24, r1
    d216:	22 c0       	rjmp	.+68     	; 0xd25c <_Z12MQTT_PublishPhS_+0xc4>
    d218:	50 dd       	rcall	.-1376   	; 0xccba <_Z12Reset_Bufferv>
    d21a:	6a e8       	ldi	r22, 0x8A	; 138
    d21c:	73 e2       	ldi	r23, 0x23	; 35
    d21e:	8f e0       	ldi	r24, 0x0F	; 15
    d220:	96 e1       	ldi	r25, 0x16	; 22
    d222:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d226:	01 e0       	ldi	r16, 0x01	; 1
    d228:	28 ee       	ldi	r18, 0xE8	; 232
    d22a:	33 e0       	ldi	r19, 0x03	; 3
    d22c:	40 e0       	ldi	r20, 0x00	; 0
    d22e:	50 e0       	ldi	r21, 0x00	; 0
    d230:	6e e1       	ldi	r22, 0x1E	; 30
    d232:	73 e0       	ldi	r23, 0x03	; 3
    d234:	80 e0       	ldi	r24, 0x00	; 0
    d236:	90 e0       	ldi	r25, 0x00	; 0
    d238:	a5 dd       	rcall	.-1206   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d23a:	8e e1       	ldi	r24, 0x1E	; 30
    d23c:	f7 01       	movw	r30, r14
    d23e:	11 92       	st	Z+, r1
    d240:	8a 95       	dec	r24
    d242:	e9 f7       	brne	.-6      	; 0xd23e <_Z12MQTT_PublishPhS_+0xa6>
    d244:	8a e1       	ldi	r24, 0x1A	; 26
    d246:	89 83       	std	Y+1, r24	; 0x01
    d248:	28 ec       	ldi	r18, 0xC8	; 200
    d24a:	30 e0       	ldi	r19, 0x00	; 0
    d24c:	40 e0       	ldi	r20, 0x00	; 0
    d24e:	50 e0       	ldi	r21, 0x00	; 0
    d250:	6e e1       	ldi	r22, 0x1E	; 30
    d252:	73 e0       	ldi	r23, 0x03	; 3
    d254:	c7 01       	movw	r24, r14
    d256:	96 dd       	rcall	.-1236   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d258:	80 e0       	ldi	r24, 0x00	; 0
    d25a:	41 c0       	rjmp	.+130    	; 0xd2de <_Z12MQTT_PublishPhS_+0x146>
    d25c:	2e dd       	rcall	.-1444   	; 0xccba <_Z12Reset_Bufferv>
    d25e:	b5 01       	movw	r22, r10
    d260:	8f e0       	ldi	r24, 0x0F	; 15
    d262:	96 e1       	ldi	r25, 0x16	; 22
    d264:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
    d268:	f7 01       	movw	r30, r14
    d26a:	11 92       	st	Z+, r1
    d26c:	1a 95       	dec	r17
    d26e:	e9 f7       	brne	.-6      	; 0xd26a <_Z12MQTT_PublishPhS_+0xd2>
    d270:	24 dd       	rcall	.-1464   	; 0xccba <_Z12Reset_Bufferv>
    d272:	f6 01       	movw	r30, r12
    d274:	01 90       	ld	r0, Z+
    d276:	00 20       	and	r0, r0
    d278:	e9 f7       	brne	.-6      	; 0xd274 <_Z12MQTT_PublishPhS_+0xdc>
    d27a:	31 97       	sbiw	r30, 0x01	; 1
    d27c:	ec 19       	sub	r30, r12
    d27e:	fd 09       	sbc	r31, r13
    d280:	ff 93       	push	r31
    d282:	ef 93       	push	r30
    d284:	86 e0       	ldi	r24, 0x06	; 6
    d286:	94 e0       	ldi	r25, 0x04	; 4
    d288:	9f 93       	push	r25
    d28a:	8f 93       	push	r24
    d28c:	ff 92       	push	r15
    d28e:	ef 92       	push	r14
    d290:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    d294:	02 e0       	ldi	r16, 0x02	; 2
    d296:	28 eb       	ldi	r18, 0xB8	; 184
    d298:	3b e0       	ldi	r19, 0x0B	; 11
    d29a:	40 e0       	ldi	r20, 0x00	; 0
    d29c:	50 e0       	ldi	r21, 0x00	; 0
    d29e:	64 e0       	ldi	r22, 0x04	; 4
    d2a0:	74 e0       	ldi	r23, 0x04	; 4
    d2a2:	c7 01       	movw	r24, r14
    d2a4:	6f dd       	rcall	.-1314   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d2a6:	0f 90       	pop	r0
    d2a8:	0f 90       	pop	r0
    d2aa:	0f 90       	pop	r0
    d2ac:	0f 90       	pop	r0
    d2ae:	0f 90       	pop	r0
    d2b0:	0f 90       	pop	r0
    d2b2:	88 23       	and	r24, r24
    d2b4:	09 f4       	brne	.+2      	; 0xd2b8 <_Z12MQTT_PublishPhS_+0x120>
    d2b6:	b0 cf       	rjmp	.-160    	; 0xd218 <_Z12MQTT_PublishPhS_+0x80>
    d2b8:	00 dd       	rcall	.-1536   	; 0xccba <_Z12Reset_Bufferv>
    d2ba:	b6 01       	movw	r22, r12
    d2bc:	8f e0       	ldi	r24, 0x0F	; 15
    d2be:	96 e1       	ldi	r25, 0x16	; 22
    d2c0:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
    d2c4:	28 eb       	ldi	r18, 0xB8	; 184
    d2c6:	3b e0       	ldi	r19, 0x0B	; 11
    d2c8:	40 e0       	ldi	r20, 0x00	; 0
    d2ca:	50 e0       	ldi	r21, 0x00	; 0
    d2cc:	6b e1       	ldi	r22, 0x1B	; 27
    d2ce:	74 e0       	ldi	r23, 0x04	; 4
    d2d0:	8a e2       	ldi	r24, 0x2A	; 42
    d2d2:	94 e0       	ldi	r25, 0x04	; 4
    d2d4:	57 dd       	rcall	.-1362   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d2d6:	88 23       	and	r24, r24
    d2d8:	09 f4       	brne	.+2      	; 0xd2dc <_Z12MQTT_PublishPhS_+0x144>
    d2da:	9e cf       	rjmp	.-196    	; 0xd218 <_Z12MQTT_PublishPhS_+0x80>
    d2dc:	81 e0       	ldi	r24, 0x01	; 1
    d2de:	6e 96       	adiw	r28, 0x1e	; 30
    d2e0:	0f b6       	in	r0, 0x3f	; 63
    d2e2:	f8 94       	cli
    d2e4:	de bf       	out	0x3e, r29	; 62
    d2e6:	0f be       	out	0x3f, r0	; 63
    d2e8:	cd bf       	out	0x3d, r28	; 61
    d2ea:	df 91       	pop	r29
    d2ec:	cf 91       	pop	r28
    d2ee:	1f 91       	pop	r17
    d2f0:	0f 91       	pop	r16
    d2f2:	ff 90       	pop	r15
    d2f4:	ef 90       	pop	r14
    d2f6:	df 90       	pop	r13
    d2f8:	cf 90       	pop	r12
    d2fa:	bf 90       	pop	r11
    d2fc:	af 90       	pop	r10
    d2fe:	08 95       	ret

0000d300 <_Z18_kGSM_SIG_STRENGTHv>:
    d300:	0f 93       	push	r16
    d302:	db dc       	rcall	.-1610   	; 0xccba <_Z12Reset_Bufferv>
    d304:	6b e4       	ldi	r22, 0x4B	; 75
    d306:	74 e2       	ldi	r23, 0x24	; 36
    d308:	8f e0       	ldi	r24, 0x0F	; 15
    d30a:	96 e1       	ldi	r25, 0x16	; 22
    d30c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d310:	01 e0       	ldi	r16, 0x01	; 1
    d312:	20 ed       	ldi	r18, 0xD0	; 208
    d314:	37 e0       	ldi	r19, 0x07	; 7
    d316:	40 e0       	ldi	r20, 0x00	; 0
    d318:	50 e0       	ldi	r21, 0x00	; 0
    d31a:	6e e1       	ldi	r22, 0x1E	; 30
    d31c:	73 e0       	ldi	r23, 0x03	; 3
    d31e:	80 e0       	ldi	r24, 0x00	; 0
    d320:	90 e0       	ldi	r25, 0x00	; 0
    d322:	30 dd       	rcall	.-1440   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d324:	88 23       	and	r24, r24
    d326:	d1 f1       	breq	.+116    	; 0xd39c <_Z18_kGSM_SIG_STRENGTHv+0x9c>
    d328:	6d e3       	ldi	r22, 0x3D	; 61
    d32a:	74 e0       	ldi	r23, 0x04	; 4
    d32c:	89 e6       	ldi	r24, 0x69	; 105
    d32e:	9f e0       	ldi	r25, 0x0F	; 15
    d330:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    d334:	89 2b       	or	r24, r25
    d336:	91 f1       	breq	.+100    	; 0xd39c <_Z18_kGSM_SIG_STRENGTHv+0x9c>
    d338:	80 e0       	ldi	r24, 0x00	; 0
    d33a:	90 e0       	ldi	r25, 0x00	; 0
    d33c:	28 2f       	mov	r18, r24
    d33e:	fc 01       	movw	r30, r24
    d340:	e7 59       	subi	r30, 0x97	; 151
    d342:	f0 4f       	sbci	r31, 0xF0	; 240
    d344:	30 81       	ld	r19, Z
    d346:	3b 32       	cpi	r19, 0x2B	; 43
    d348:	31 f4       	brne	.+12     	; 0xd356 <_Z18_kGSM_SIG_STRENGTHv+0x56>
    d34a:	fc 01       	movw	r30, r24
    d34c:	e3 59       	subi	r30, 0x93	; 147
    d34e:	f0 4f       	sbci	r31, 0xF0	; 240
    d350:	30 81       	ld	r19, Z
    d352:	3a 33       	cpi	r19, 0x3A	; 58
    d354:	29 f0       	breq	.+10     	; 0xd360 <_Z18_kGSM_SIG_STRENGTHv+0x60>
    d356:	01 96       	adiw	r24, 0x01	; 1
    d358:	84 31       	cpi	r24, 0x14	; 20
    d35a:	91 05       	cpc	r25, r1
    d35c:	79 f7       	brne	.-34     	; 0xd33c <_Z18_kGSM_SIG_STRENGTHv+0x3c>
    d35e:	24 e1       	ldi	r18, 0x14	; 20
    d360:	2a 5f       	subi	r18, 0xFA	; 250
    d362:	30 e0       	ldi	r19, 0x00	; 0
    d364:	f9 01       	movw	r30, r18
    d366:	e7 59       	subi	r30, 0x97	; 151
    d368:	f0 4f       	sbci	r31, 0xF0	; 240
    d36a:	80 81       	ld	r24, Z
    d36c:	f9 01       	movw	r30, r18
    d36e:	e6 59       	subi	r30, 0x96	; 150
    d370:	f0 4f       	sbci	r31, 0xF0	; 240
    d372:	90 81       	ld	r25, Z
    d374:	24 ed       	ldi	r18, 0xD4	; 212
    d376:	33 e0       	ldi	r19, 0x03	; 3
    d378:	e9 e6       	ldi	r30, 0x69	; 105
    d37a:	ff e0       	ldi	r31, 0x0F	; 15
    d37c:	df 01       	movw	r26, r30
    d37e:	a9 01       	movw	r20, r18
    d380:	1d 92       	st	X+, r1
    d382:	41 50       	subi	r20, 0x01	; 1
    d384:	50 40       	sbci	r21, 0x00	; 0
    d386:	e1 f7       	brne	.-8      	; 0xd380 <_Z18_kGSM_SIG_STRENGTHv+0x80>
    d388:	88 0f       	add	r24, r24
    d38a:	80 56       	subi	r24, 0x60	; 96
    d38c:	28 2f       	mov	r18, r24
    d38e:	22 0f       	add	r18, r18
    d390:	22 0f       	add	r18, r18
    d392:	82 0f       	add	r24, r18
    d394:	90 53       	subi	r25, 0x30	; 48
    d396:	89 0f       	add	r24, r25
    d398:	90 e0       	ldi	r25, 0x00	; 0
    d39a:	1a c0       	rjmp	.+52     	; 0xd3d0 <_Z18_kGSM_SIG_STRENGTHv+0xd0>
    d39c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    d3a0:	81 30       	cpi	r24, 0x01	; 1
    d3a2:	51 f4       	brne	.+20     	; 0xd3b8 <_Z18_kGSM_SIG_STRENGTHv+0xb8>
    d3a4:	6c e3       	ldi	r22, 0x3C	; 60
    d3a6:	74 e2       	ldi	r23, 0x24	; 36
    d3a8:	82 e5       	ldi	r24, 0x52	; 82
    d3aa:	94 e1       	ldi	r25, 0x14	; 20
    d3ac:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d3b0:	82 e5       	ldi	r24, 0x52	; 82
    d3b2:	94 e1       	ldi	r25, 0x14	; 20
    d3b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    d3b8:	84 ed       	ldi	r24, 0xD4	; 212
    d3ba:	93 e0       	ldi	r25, 0x03	; 3
    d3bc:	e9 e6       	ldi	r30, 0x69	; 105
    d3be:	ff e0       	ldi	r31, 0x0F	; 15
    d3c0:	df 01       	movw	r26, r30
    d3c2:	9c 01       	movw	r18, r24
    d3c4:	1d 92       	st	X+, r1
    d3c6:	21 50       	subi	r18, 0x01	; 1
    d3c8:	30 40       	sbci	r19, 0x00	; 0
    d3ca:	e1 f7       	brne	.-8      	; 0xd3c4 <_Z18_kGSM_SIG_STRENGTHv+0xc4>
    d3cc:	80 e0       	ldi	r24, 0x00	; 0
    d3ce:	90 e0       	ldi	r25, 0x00	; 0
    d3d0:	0f 91       	pop	r16
    d3d2:	08 95       	ret

0000d3d4 <_Z17Is_MQTT_Connectedv>:
    d3d4:	0f 93       	push	r16
    d3d6:	71 dc       	rcall	.-1822   	; 0xccba <_Z12Reset_Bufferv>
    d3d8:	6e e3       	ldi	r22, 0x3E	; 62
    d3da:	73 e2       	ldi	r23, 0x23	; 35
    d3dc:	8f e0       	ldi	r24, 0x0F	; 15
    d3de:	96 e1       	ldi	r25, 0x16	; 22
    d3e0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d3e4:	01 e0       	ldi	r16, 0x01	; 1
    d3e6:	28 eb       	ldi	r18, 0xB8	; 184
    d3e8:	3b e0       	ldi	r19, 0x0B	; 11
    d3ea:	40 e0       	ldi	r20, 0x00	; 0
    d3ec:	50 e0       	ldi	r21, 0x00	; 0
    d3ee:	61 e4       	ldi	r22, 0x41	; 65
    d3f0:	74 e0       	ldi	r23, 0x04	; 4
    d3f2:	80 e0       	ldi	r24, 0x00	; 0
    d3f4:	90 e0       	ldi	r25, 0x00	; 0
    d3f6:	c6 dc       	rcall	.-1652   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d3f8:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    d3fc:	88 23       	and	r24, r24
    d3fe:	69 f0       	breq	.+26     	; 0xd41a <_Z17Is_MQTT_Connectedv+0x46>
    d400:	91 30       	cpi	r25, 0x01	; 1
    d402:	c1 f4       	brne	.+48     	; 0xd434 <_Z17Is_MQTT_Connectedv+0x60>
    d404:	66 e2       	ldi	r22, 0x26	; 38
    d406:	73 e2       	ldi	r23, 0x23	; 35
    d408:	82 e5       	ldi	r24, 0x52	; 82
    d40a:	94 e1       	ldi	r25, 0x14	; 20
    d40c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d410:	82 e5       	ldi	r24, 0x52	; 82
    d412:	94 e1       	ldi	r25, 0x14	; 20
    d414:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    d418:	0d c0       	rjmp	.+26     	; 0xd434 <_Z17Is_MQTT_Connectedv+0x60>
    d41a:	91 30       	cpi	r25, 0x01	; 1
    d41c:	69 f4       	brne	.+26     	; 0xd438 <_Z17Is_MQTT_Connectedv+0x64>
    d41e:	6a e0       	ldi	r22, 0x0A	; 10
    d420:	73 e2       	ldi	r23, 0x23	; 35
    d422:	82 e5       	ldi	r24, 0x52	; 82
    d424:	94 e1       	ldi	r25, 0x14	; 20
    d426:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d42a:	82 e5       	ldi	r24, 0x52	; 82
    d42c:	94 e1       	ldi	r25, 0x14	; 20
    d42e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    d432:	02 c0       	rjmp	.+4      	; 0xd438 <_Z17Is_MQTT_Connectedv+0x64>
    d434:	81 e0       	ldi	r24, 0x01	; 1
    d436:	01 c0       	rjmp	.+2      	; 0xd43a <_Z17Is_MQTT_Connectedv+0x66>
    d438:	80 e0       	ldi	r24, 0x00	; 0
    d43a:	0f 91       	pop	r16
    d43c:	08 95       	ret

0000d43e <_Z12MQTT_ConnectPKcS0_S0_>:
    d43e:	af 92       	push	r10
    d440:	bf 92       	push	r11
    d442:	cf 92       	push	r12
    d444:	df 92       	push	r13
    d446:	ef 92       	push	r14
    d448:	ff 92       	push	r15
    d44a:	0f 93       	push	r16
    d44c:	1f 93       	push	r17
    d44e:	cf 93       	push	r28
    d450:	df 93       	push	r29
    d452:	cd b7       	in	r28, 0x3d	; 61
    d454:	de b7       	in	r29, 0x3e	; 62
    d456:	c8 57       	subi	r28, 0x78	; 120
    d458:	d1 09       	sbc	r29, r1
    d45a:	0f b6       	in	r0, 0x3f	; 63
    d45c:	f8 94       	cli
    d45e:	de bf       	out	0x3e, r29	; 62
    d460:	0f be       	out	0x3f, r0	; 63
    d462:	cd bf       	out	0x3d, r28	; 61
    d464:	d6 2e       	mov	r13, r22
    d466:	c7 2e       	mov	r12, r23
    d468:	b4 2e       	mov	r11, r20
    d46a:	a5 2e       	mov	r10, r21
    d46c:	18 e7       	ldi	r17, 0x78	; 120
    d46e:	9e 01       	movw	r18, r28
    d470:	2f 5f       	subi	r18, 0xFF	; 255
    d472:	3f 4f       	sbci	r19, 0xFF	; 255
    d474:	79 01       	movw	r14, r18
    d476:	f9 01       	movw	r30, r18
    d478:	21 2f       	mov	r18, r17
    d47a:	11 92       	st	Z+, r1
    d47c:	2a 95       	dec	r18
    d47e:	e9 f7       	brne	.-6      	; 0xd47a <_Z12MQTT_ConnectPKcS0_S0_+0x3c>
    d480:	1c dc       	rcall	.-1992   	; 0xccba <_Z12Reset_Bufferv>
    d482:	6b e6       	ldi	r22, 0x6B	; 107
    d484:	73 e2       	ldi	r23, 0x23	; 35
    d486:	8f e0       	ldi	r24, 0x0F	; 15
    d488:	96 e1       	ldi	r25, 0x16	; 22
    d48a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d48e:	02 e0       	ldi	r16, 0x02	; 2
    d490:	28 eb       	ldi	r18, 0xB8	; 184
    d492:	3b e0       	ldi	r19, 0x0B	; 11
    d494:	40 e0       	ldi	r20, 0x00	; 0
    d496:	50 e0       	ldi	r21, 0x00	; 0
    d498:	67 e5       	ldi	r22, 0x57	; 87
    d49a:	74 e0       	ldi	r23, 0x04	; 4
    d49c:	80 e0       	ldi	r24, 0x00	; 0
    d49e:	90 e0       	ldi	r25, 0x00	; 0
    d4a0:	71 dc       	rcall	.-1822   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d4a2:	0b dc       	rcall	.-2026   	; 0xccba <_Z12Reset_Bufferv>
    d4a4:	6d e5       	ldi	r22, 0x5D	; 93
    d4a6:	73 e2       	ldi	r23, 0x23	; 35
    d4a8:	8f e0       	ldi	r24, 0x0F	; 15
    d4aa:	96 e1       	ldi	r25, 0x16	; 22
    d4ac:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d4b0:	28 eb       	ldi	r18, 0xB8	; 184
    d4b2:	3b e0       	ldi	r19, 0x0B	; 11
    d4b4:	40 e0       	ldi	r20, 0x00	; 0
    d4b6:	50 e0       	ldi	r21, 0x00	; 0
    d4b8:	6e e1       	ldi	r22, 0x1E	; 30
    d4ba:	73 e0       	ldi	r23, 0x03	; 3
    d4bc:	80 e0       	ldi	r24, 0x00	; 0
    d4be:	90 e0       	ldi	r25, 0x00	; 0
    d4c0:	61 dc       	rcall	.-1854   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d4c2:	fb db       	rcall	.-2058   	; 0xccba <_Z12Reset_Bufferv>
    d4c4:	6f e4       	ldi	r22, 0x4F	; 79
    d4c6:	73 e2       	ldi	r23, 0x23	; 35
    d4c8:	8f e0       	ldi	r24, 0x0F	; 15
    d4ca:	96 e1       	ldi	r25, 0x16	; 22
    d4cc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d4d0:	28 eb       	ldi	r18, 0xB8	; 184
    d4d2:	3b e0       	ldi	r19, 0x0B	; 11
    d4d4:	43 e6       	ldi	r20, 0x63	; 99
    d4d6:	54 e0       	ldi	r21, 0x04	; 4
    d4d8:	63 e7       	ldi	r22, 0x73	; 115
    d4da:	74 e0       	ldi	r23, 0x04	; 4
    d4dc:	80 e0       	ldi	r24, 0x00	; 0
    d4de:	90 e0       	ldi	r25, 0x00	; 0
    d4e0:	51 dc       	rcall	.-1886   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d4e2:	eb db       	rcall	.-2090   	; 0xccba <_Z12Reset_Bufferv>
    d4e4:	82 e8       	ldi	r24, 0x82	; 130
    d4e6:	94 e0       	ldi	r25, 0x04	; 4
    d4e8:	9f 93       	push	r25
    d4ea:	8f 93       	push	r24
    d4ec:	89 e8       	ldi	r24, 0x89	; 137
    d4ee:	94 e0       	ldi	r25, 0x04	; 4
    d4f0:	9f 93       	push	r25
    d4f2:	8f 93       	push	r24
    d4f4:	ff 92       	push	r15
    d4f6:	ef 92       	push	r14
    d4f8:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    d4fc:	01 e0       	ldi	r16, 0x01	; 1
    d4fe:	28 eb       	ldi	r18, 0xB8	; 184
    d500:	3b e0       	ldi	r19, 0x0B	; 11
    d502:	40 e0       	ldi	r20, 0x00	; 0
    d504:	50 e0       	ldi	r21, 0x00	; 0
    d506:	6e e1       	ldi	r22, 0x1E	; 30
    d508:	73 e0       	ldi	r23, 0x03	; 3
    d50a:	c7 01       	movw	r24, r14
    d50c:	3b dc       	rcall	.-1930   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d50e:	f7 01       	movw	r30, r14
    d510:	11 92       	st	Z+, r1
    d512:	1a 95       	dec	r17
    d514:	e9 f7       	brne	.-6      	; 0xd510 <_Z12MQTT_ConnectPKcS0_S0_+0xd2>
    d516:	af 92       	push	r10
    d518:	bf 92       	push	r11
    d51a:	cf 92       	push	r12
    d51c:	df 92       	push	r13
    d51e:	87 e0       	ldi	r24, 0x07	; 7
    d520:	8f 93       	push	r24
    d522:	8b e5       	ldi	r24, 0x5B	; 91
    d524:	8f 93       	push	r24
    d526:	8f e9       	ldi	r24, 0x9F	; 159
    d528:	94 e0       	ldi	r25, 0x04	; 4
    d52a:	9f 93       	push	r25
    d52c:	8f 93       	push	r24
    d52e:	8d ea       	ldi	r24, 0xAD	; 173
    d530:	94 e0       	ldi	r25, 0x04	; 4
    d532:	9f 93       	push	r25
    d534:	8f 93       	push	r24
    d536:	ff 92       	push	r15
    d538:	ef 92       	push	r14
    d53a:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    d53e:	28 e8       	ldi	r18, 0x88	; 136
    d540:	33 e1       	ldi	r19, 0x13	; 19
    d542:	40 e0       	ldi	r20, 0x00	; 0
    d544:	50 e0       	ldi	r21, 0x00	; 0
    d546:	6e e1       	ldi	r22, 0x1E	; 30
    d548:	73 e0       	ldi	r23, 0x03	; 3
    d54a:	c7 01       	movw	r24, r14
    d54c:	1b dc       	rcall	.-1994   	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    d54e:	68 eb       	ldi	r22, 0xB8	; 184
    d550:	7b e0       	ldi	r23, 0x0B	; 11
    d552:	80 e0       	ldi	r24, 0x00	; 0
    d554:	90 e0       	ldi	r25, 0x00	; 0
    d556:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    d55a:	3c df       	rcall	.-392    	; 0xd3d4 <_Z17Is_MQTT_Connectedv>
    d55c:	0f b6       	in	r0, 0x3f	; 63
    d55e:	f8 94       	cli
    d560:	de bf       	out	0x3e, r29	; 62
    d562:	0f be       	out	0x3f, r0	; 63
    d564:	cd bf       	out	0x3d, r28	; 61
    d566:	c8 58       	subi	r28, 0x88	; 136
    d568:	df 4f       	sbci	r29, 0xFF	; 255
    d56a:	0f b6       	in	r0, 0x3f	; 63
    d56c:	f8 94       	cli
    d56e:	de bf       	out	0x3e, r29	; 62
    d570:	0f be       	out	0x3f, r0	; 63
    d572:	cd bf       	out	0x3d, r28	; 61
    d574:	df 91       	pop	r29
    d576:	cf 91       	pop	r28
    d578:	1f 91       	pop	r17
    d57a:	0f 91       	pop	r16
    d57c:	ff 90       	pop	r15
    d57e:	ef 90       	pop	r14
    d580:	df 90       	pop	r13
    d582:	cf 90       	pop	r12
    d584:	bf 90       	pop	r11
    d586:	af 90       	pop	r10
    d588:	08 95       	ret

0000d58a <_Z9MQTT_Loopv>:
    d58a:	83 e0       	ldi	r24, 0x03	; 3
    d58c:	db d7       	rcall	.+4022   	; 0xe544 <_Z9Check_Simc>
    d58e:	0e 94 a1 5e 	call	0xbd42	; 0xbd42 <_Z16Check_GSM_Signalv>
    d592:	80 91 f6 13 	lds	r24, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xaf>
    d596:	81 30       	cpi	r24, 0x01	; 1
    d598:	39 f0       	breq	.+14     	; 0xd5a8 <_Z9MQTT_Loopv+0x1e>
    d59a:	1c df       	rcall	.-456    	; 0xd3d4 <_Z17Is_MQTT_Connectedv>
    d59c:	88 23       	and	r24, r24
    d59e:	21 f0       	breq	.+8      	; 0xd5a8 <_Z9MQTT_Loopv+0x1e>
    d5a0:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <_sRuble_Parameters+0x5d>
    d5a4:	81 30       	cpi	r24, 0x01	; 1
    d5a6:	11 f0       	breq	.+4      	; 0xd5ac <_Z9MQTT_Loopv+0x22>
    d5a8:	80 e0       	ldi	r24, 0x00	; 0
    d5aa:	08 95       	ret
    d5ac:	81 e0       	ldi	r24, 0x01	; 1
    d5ae:	08 95       	ret

0000d5b0 <_Z16Lcd_Special_Charhhhh>:
    d5b0:	df 92       	push	r13
    d5b2:	ef 92       	push	r14
    d5b4:	ff 92       	push	r15
    d5b6:	0f 93       	push	r16
    d5b8:	1f 93       	push	r17
    d5ba:	cf 93       	push	r28
    d5bc:	df 93       	push	r29
    d5be:	cd b7       	in	r28, 0x3d	; 61
    d5c0:	de b7       	in	r29, 0x3e	; 62
    d5c2:	28 97       	sbiw	r28, 0x08	; 8
    d5c4:	0f b6       	in	r0, 0x3f	; 63
    d5c6:	f8 94       	cli
    d5c8:	de bf       	out	0x3e, r29	; 62
    d5ca:	0f be       	out	0x3f, r0	; 63
    d5cc:	cd bf       	out	0x3d, r28	; 61
    d5ce:	f8 2e       	mov	r15, r24
    d5d0:	e6 2e       	mov	r14, r22
    d5d2:	d4 2e       	mov	r13, r20
    d5d4:	8e 01       	movw	r16, r28
    d5d6:	0f 5f       	subi	r16, 0xFF	; 255
    d5d8:	1f 4f       	sbci	r17, 0xFF	; 255
    d5da:	88 e0       	ldi	r24, 0x08	; 8
    d5dc:	f8 01       	movw	r30, r16
    d5de:	11 92       	st	Z+, r1
    d5e0:	8a 95       	dec	r24
    d5e2:	e9 f7       	brne	.-6      	; 0xd5de <_Z16Lcd_Special_Charhhhh+0x2e>
    d5e4:	82 2f       	mov	r24, r18
    d5e6:	90 e0       	ldi	r25, 0x00	; 0
    d5e8:	fc 01       	movw	r30, r24
    d5ea:	31 97       	sbiw	r30, 0x01	; 1
    d5ec:	ea 30       	cpi	r30, 0x0A	; 10
    d5ee:	f1 05       	cpc	r31, r1
    d5f0:	08 f0       	brcs	.+2      	; 0xd5f4 <_Z16Lcd_Special_Charhhhh+0x44>
    d5f2:	86 c0       	rjmp	.+268    	; 0xd700 <_Z16Lcd_Special_Charhhhh+0x150>
    d5f4:	88 27       	eor	r24, r24
    d5f6:	e3 52       	subi	r30, 0x23	; 35
    d5f8:	ff 4f       	sbci	r31, 0xFF	; 255
    d5fa:	8f 4f       	sbci	r24, 0xFF	; 255
    d5fc:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
    d600:	8f e1       	ldi	r24, 0x1F	; 31
    d602:	89 83       	std	Y+1, r24	; 0x01
    d604:	81 e1       	ldi	r24, 0x11	; 17
    d606:	8a 83       	std	Y+2, r24	; 0x02
    d608:	8a e0       	ldi	r24, 0x0A	; 10
    d60a:	58 c0       	rjmp	.+176    	; 0xd6bc <_Z16Lcd_Special_Charhhhh+0x10c>
    d60c:	9c e1       	ldi	r25, 0x1C	; 28
    d60e:	99 83       	std	Y+1, r25	; 0x01
    d610:	80 e1       	ldi	r24, 0x10	; 16
    d612:	8a 83       	std	Y+2, r24	; 0x02
    d614:	28 e1       	ldi	r18, 0x18	; 24
    d616:	2b 83       	std	Y+3, r18	; 0x03
    d618:	8c 83       	std	Y+4, r24	; 0x04
    d61a:	9d 83       	std	Y+5, r25	; 0x05
    d61c:	0b c0       	rjmp	.+22     	; 0xd634 <_Z16Lcd_Special_Charhhhh+0x84>
    d61e:	8c e1       	ldi	r24, 0x1C	; 28
    d620:	89 83       	std	Y+1, r24	; 0x01
    d622:	90 e1       	ldi	r25, 0x10	; 16
    d624:	9a 83       	std	Y+2, r25	; 0x02
    d626:	28 e1       	ldi	r18, 0x18	; 24
    d628:	2b 83       	std	Y+3, r18	; 0x03
    d62a:	9c 83       	std	Y+4, r25	; 0x04
    d62c:	8d 83       	std	Y+5, r24	; 0x05
    d62e:	84 e0       	ldi	r24, 0x04	; 4
    d630:	8f 83       	std	Y+7, r24	; 0x07
    d632:	84 e1       	ldi	r24, 0x14	; 20
    d634:	88 87       	std	Y+8, r24	; 0x08
    d636:	64 c0       	rjmp	.+200    	; 0xd700 <_Z16Lcd_Special_Charhhhh+0x150>
    d638:	8c e1       	ldi	r24, 0x1C	; 28
    d63a:	89 83       	std	Y+1, r24	; 0x01
    d63c:	80 e1       	ldi	r24, 0x10	; 16
    d63e:	8a 83       	std	Y+2, r24	; 0x02
    d640:	98 e1       	ldi	r25, 0x18	; 24
    d642:	9b 83       	std	Y+3, r25	; 0x03
    d644:	8c 83       	std	Y+4, r24	; 0x04
    d646:	8d e1       	ldi	r24, 0x1D	; 29
    d648:	8d 83       	std	Y+5, r24	; 0x05
    d64a:	81 e0       	ldi	r24, 0x01	; 1
    d64c:	8e 83       	std	Y+6, r24	; 0x06
    d64e:	85 e0       	ldi	r24, 0x05	; 5
    d650:	8f 83       	std	Y+7, r24	; 0x07
    d652:	85 e1       	ldi	r24, 0x15	; 21
    d654:	ef cf       	rjmp	.-34     	; 0xd634 <_Z16Lcd_Special_Charhhhh+0x84>
    d656:	8c e1       	ldi	r24, 0x1C	; 28
    d658:	89 83       	std	Y+1, r24	; 0x01
    d65a:	90 e1       	ldi	r25, 0x10	; 16
    d65c:	9a 83       	std	Y+2, r25	; 0x02
    d65e:	28 e1       	ldi	r18, 0x18	; 24
    d660:	2b 83       	std	Y+3, r18	; 0x03
    d662:	9c 83       	std	Y+4, r25	; 0x04
    d664:	8d 83       	std	Y+5, r24	; 0x05
    d666:	85 e0       	ldi	r24, 0x05	; 5
    d668:	8e 83       	std	Y+6, r24	; 0x06
    d66a:	92 e0       	ldi	r25, 0x02	; 2
    d66c:	9f 83       	std	Y+7, r25	; 0x07
    d66e:	e2 cf       	rjmp	.-60     	; 0xd634 <_Z16Lcd_Special_Charhhhh+0x84>
    d670:	9e e0       	ldi	r25, 0x0E	; 14
    d672:	99 83       	std	Y+1, r25	; 0x01
    d674:	81 e1       	ldi	r24, 0x11	; 17
    d676:	8a 83       	std	Y+2, r24	; 0x02
    d678:	8b 83       	std	Y+3, r24	; 0x03
    d67a:	8c 83       	std	Y+4, r24	; 0x04
    d67c:	8b e1       	ldi	r24, 0x1B	; 27
    d67e:	8d 83       	std	Y+5, r24	; 0x05
    d680:	25 e1       	ldi	r18, 0x15	; 21
    d682:	2e 83       	std	Y+6, r18	; 0x06
    d684:	8f 83       	std	Y+7, r24	; 0x07
    d686:	98 87       	std	Y+8, r25	; 0x08
    d688:	3b c0       	rjmp	.+118    	; 0xd700 <_Z16Lcd_Special_Charhhhh+0x150>
    d68a:	87 e0       	ldi	r24, 0x07	; 7
    d68c:	89 83       	std	Y+1, r24	; 0x01
    d68e:	89 e0       	ldi	r24, 0x09	; 9
    d690:	8a 83       	std	Y+2, r24	; 0x02
    d692:	81 e1       	ldi	r24, 0x11	; 17
    d694:	8b 83       	std	Y+3, r24	; 0x03
    d696:	8c 83       	std	Y+4, r24	; 0x04
    d698:	8b e1       	ldi	r24, 0x1B	; 27
    d69a:	8d 83       	std	Y+5, r24	; 0x05
    d69c:	95 e1       	ldi	r25, 0x15	; 21
    d69e:	9e 83       	std	Y+6, r25	; 0x06
    d6a0:	8f 83       	std	Y+7, r24	; 0x07
    d6a2:	8f e1       	ldi	r24, 0x1F	; 31
    d6a4:	c7 cf       	rjmp	.-114    	; 0xd634 <_Z16Lcd_Special_Charhhhh+0x84>
    d6a6:	84 e0       	ldi	r24, 0x04	; 4
    d6a8:	89 83       	std	Y+1, r24	; 0x01
    d6aa:	8a 83       	std	Y+2, r24	; 0x02
    d6ac:	8b 83       	std	Y+3, r24	; 0x03
    d6ae:	87 e0       	ldi	r24, 0x07	; 7
    d6b0:	8c 83       	std	Y+4, r24	; 0x04
    d6b2:	26 c0       	rjmp	.+76     	; 0xd700 <_Z16Lcd_Special_Charhhhh+0x150>
    d6b4:	8f e1       	ldi	r24, 0x1F	; 31
    d6b6:	89 83       	std	Y+1, r24	; 0x01
    d6b8:	8a 83       	std	Y+2, r24	; 0x02
    d6ba:	8e e0       	ldi	r24, 0x0E	; 14
    d6bc:	8b 83       	std	Y+3, r24	; 0x03
    d6be:	84 e0       	ldi	r24, 0x04	; 4
    d6c0:	8c 83       	std	Y+4, r24	; 0x04
    d6c2:	8d 83       	std	Y+5, r24	; 0x05
    d6c4:	8e 83       	std	Y+6, r24	; 0x06
    d6c6:	8f 83       	std	Y+7, r24	; 0x07
    d6c8:	1b c0       	rjmp	.+54     	; 0xd700 <_Z16Lcd_Special_Charhhhh+0x150>
    d6ca:	80 91 74 13 	lds	r24, 0x1374	; 0x801374 <_sRuble_Parameters+0x2d>
    d6ce:	1f 92       	push	r1
    d6d0:	8f 93       	push	r24
    d6d2:	80 91 73 13 	lds	r24, 0x1373	; 0x801373 <_sRuble_Parameters+0x2c>
    d6d6:	1f 92       	push	r1
    d6d8:	8f 93       	push	r24
    d6da:	8c ed       	ldi	r24, 0xDC	; 220
    d6dc:	94 e0       	ldi	r25, 0x04	; 4
    d6de:	9f 93       	push	r25
    d6e0:	8f 93       	push	r24
    d6e2:	1f 93       	push	r17
    d6e4:	0f 93       	push	r16
    d6e6:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    d6ea:	2f e0       	ldi	r18, 0x0F	; 15
    d6ec:	40 e0       	ldi	r20, 0x00	; 0
    d6ee:	65 e0       	ldi	r22, 0x05	; 5
    d6f0:	c8 01       	movw	r24, r16
    d6f2:	b3 d8       	rcall	.-3738   	; 0xc85a <_Z14Lcd_Print_BuffPchhh>
    d6f4:	0f b6       	in	r0, 0x3f	; 63
    d6f6:	f8 94       	cli
    d6f8:	de bf       	out	0x3e, r29	; 62
    d6fa:	0f be       	out	0x3f, r0	; 63
    d6fc:	cd bf       	out	0x3d, r28	; 61
    d6fe:	11 c0       	rjmp	.+34     	; 0xd722 <_Z16Lcd_Special_Charhhhh+0x172>
    d700:	a8 01       	movw	r20, r16
    d702:	6f 2d       	mov	r22, r15
    d704:	82 e7       	ldi	r24, 0x72	; 114
    d706:	9c e0       	ldi	r25, 0x0C	; 12
    d708:	0e 94 42 d7 	call	0x1ae84	; 0x1ae84 <_ZN17LiquidCrystal_I2C10createCharEhPh>
    d70c:	4d 2d       	mov	r20, r13
    d70e:	6e 2d       	mov	r22, r14
    d710:	82 e7       	ldi	r24, 0x72	; 114
    d712:	9c e0       	ldi	r25, 0x0C	; 12
    d714:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d718:	6f 2d       	mov	r22, r15
    d71a:	82 e7       	ldi	r24, 0x72	; 114
    d71c:	9c e0       	ldi	r25, 0x0C	; 12
    d71e:	0e 94 69 d7 	call	0x1aed2	; 0x1aed2 <_ZN17LiquidCrystal_I2C5writeEh>
    d722:	28 96       	adiw	r28, 0x08	; 8
    d724:	0f b6       	in	r0, 0x3f	; 63
    d726:	f8 94       	cli
    d728:	de bf       	out	0x3e, r29	; 62
    d72a:	0f be       	out	0x3f, r0	; 63
    d72c:	cd bf       	out	0x3d, r28	; 61
    d72e:	df 91       	pop	r29
    d730:	cf 91       	pop	r28
    d732:	1f 91       	pop	r17
    d734:	0f 91       	pop	r16
    d736:	ff 90       	pop	r15
    d738:	ef 90       	pop	r14
    d73a:	df 90       	pop	r13
    d73c:	08 95       	ret

0000d73e <_Z16Display_Update_1v>:
    d73e:	df 92       	push	r13
    d740:	ef 92       	push	r14
    d742:	ff 92       	push	r15
    d744:	0f 93       	push	r16
    d746:	1f 93       	push	r17
    d748:	cf 93       	push	r28
    d74a:	df 93       	push	r29
    d74c:	cd b7       	in	r28, 0x3d	; 61
    d74e:	de b7       	in	r29, 0x3e	; 62
    d750:	65 97       	sbiw	r28, 0x15	; 21
    d752:	0f b6       	in	r0, 0x3f	; 63
    d754:	f8 94       	cli
    d756:	de bf       	out	0x3e, r29	; 62
    d758:	0f be       	out	0x3f, r0	; 63
    d75a:	cd bf       	out	0x3d, r28	; 61
    d75c:	80 91 71 0c 	lds	r24, 0x0C71	; 0x800c71 <Start_Display_In_Interrupt>
    d760:	81 11       	cpse	r24, r1
    d762:	7a c1       	rjmp	.+756    	; 0xda58 <_Z16Display_Update_1v+0x31a>
    d764:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    d768:	3e 2f       	mov	r19, r30
    d76a:	32 70       	andi	r19, 0x02	; 2
    d76c:	20 e0       	ldi	r18, 0x00	; 0
    d76e:	40 e0       	ldi	r20, 0x00	; 0
    d770:	50 e0       	ldi	r21, 0x00	; 0
    d772:	60 e0       	ldi	r22, 0x00	; 0
    d774:	70 e0       	ldi	r23, 0x00	; 0
    d776:	90 e0       	ldi	r25, 0x00	; 0
    d778:	a0 e0       	ldi	r26, 0x00	; 0
    d77a:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d77e:	71 f0       	breq	.+28     	; 0xd79c <_Z16Display_Update_1v+0x5e>
    d780:	ed 7f       	andi	r30, 0xFD	; 253
    d782:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    d786:	41 e0       	ldi	r20, 0x01	; 1
    d788:	82 e7       	ldi	r24, 0x72	; 114
    d78a:	9c e0       	ldi	r25, 0x0C	; 12
    d78c:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d790:	61 ee       	ldi	r22, 0xE1	; 225
    d792:	72 e2       	ldi	r23, 0x22	; 34
    d794:	82 e7       	ldi	r24, 0x72	; 114
    d796:	9c e0       	ldi	r25, 0x0C	; 12
    d798:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d79c:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    d7a0:	3e 2f       	mov	r19, r30
    d7a2:	34 70       	andi	r19, 0x04	; 4
    d7a4:	20 e0       	ldi	r18, 0x00	; 0
    d7a6:	40 e0       	ldi	r20, 0x00	; 0
    d7a8:	50 e0       	ldi	r21, 0x00	; 0
    d7aa:	60 e0       	ldi	r22, 0x00	; 0
    d7ac:	70 e0       	ldi	r23, 0x00	; 0
    d7ae:	80 e0       	ldi	r24, 0x00	; 0
    d7b0:	90 e0       	ldi	r25, 0x00	; 0
    d7b2:	a0 e0       	ldi	r26, 0x00	; 0
    d7b4:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d7b8:	d1 f0       	breq	.+52     	; 0xd7ee <_Z16Display_Update_1v+0xb0>
    d7ba:	eb 7f       	andi	r30, 0xFB	; 251
    d7bc:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    d7c0:	41 e0       	ldi	r20, 0x01	; 1
    d7c2:	82 e7       	ldi	r24, 0x72	; 114
    d7c4:	9c e0       	ldi	r25, 0x0C	; 12
    d7c6:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d7ca:	6c ec       	ldi	r22, 0xCC	; 204
    d7cc:	72 e2       	ldi	r23, 0x22	; 34
    d7ce:	82 e7       	ldi	r24, 0x72	; 114
    d7d0:	9c e0       	ldi	r25, 0x0C	; 12
    d7d2:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d7d6:	42 e0       	ldi	r20, 0x02	; 2
    d7d8:	60 e0       	ldi	r22, 0x00	; 0
    d7da:	82 e7       	ldi	r24, 0x72	; 114
    d7dc:	9c e0       	ldi	r25, 0x0C	; 12
    d7de:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d7e2:	67 eb       	ldi	r22, 0xB7	; 183
    d7e4:	72 e2       	ldi	r23, 0x22	; 34
    d7e6:	82 e7       	ldi	r24, 0x72	; 114
    d7e8:	9c e0       	ldi	r25, 0x0C	; 12
    d7ea:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d7ee:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    d7f2:	3e 2f       	mov	r19, r30
    d7f4:	38 70       	andi	r19, 0x08	; 8
    d7f6:	20 e0       	ldi	r18, 0x00	; 0
    d7f8:	40 e0       	ldi	r20, 0x00	; 0
    d7fa:	50 e0       	ldi	r21, 0x00	; 0
    d7fc:	60 e0       	ldi	r22, 0x00	; 0
    d7fe:	70 e0       	ldi	r23, 0x00	; 0
    d800:	80 e0       	ldi	r24, 0x00	; 0
    d802:	90 e0       	ldi	r25, 0x00	; 0
    d804:	a0 e0       	ldi	r26, 0x00	; 0
    d806:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d80a:	d1 f0       	breq	.+52     	; 0xd840 <_Z16Display_Update_1v+0x102>
    d80c:	e7 7f       	andi	r30, 0xF7	; 247
    d80e:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    d812:	41 e0       	ldi	r20, 0x01	; 1
    d814:	82 e7       	ldi	r24, 0x72	; 114
    d816:	9c e0       	ldi	r25, 0x0C	; 12
    d818:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d81c:	62 ea       	ldi	r22, 0xA2	; 162
    d81e:	72 e2       	ldi	r23, 0x22	; 34
    d820:	82 e7       	ldi	r24, 0x72	; 114
    d822:	9c e0       	ldi	r25, 0x0C	; 12
    d824:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d828:	42 e0       	ldi	r20, 0x02	; 2
    d82a:	60 e0       	ldi	r22, 0x00	; 0
    d82c:	82 e7       	ldi	r24, 0x72	; 114
    d82e:	9c e0       	ldi	r25, 0x0C	; 12
    d830:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d834:	6d e8       	ldi	r22, 0x8D	; 141
    d836:	72 e2       	ldi	r23, 0x22	; 34
    d838:	82 e7       	ldi	r24, 0x72	; 114
    d83a:	9c e0       	ldi	r25, 0x0C	; 12
    d83c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d840:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    d844:	e0 71       	andi	r30, 0x10	; 16
    d846:	20 e0       	ldi	r18, 0x00	; 0
    d848:	3e 2f       	mov	r19, r30
    d84a:	40 e0       	ldi	r20, 0x00	; 0
    d84c:	50 e0       	ldi	r21, 0x00	; 0
    d84e:	60 e0       	ldi	r22, 0x00	; 0
    d850:	70 e0       	ldi	r23, 0x00	; 0
    d852:	80 e0       	ldi	r24, 0x00	; 0
    d854:	90 e0       	ldi	r25, 0x00	; 0
    d856:	a0 e0       	ldi	r26, 0x00	; 0
    d858:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d85c:	39 f1       	breq	.+78     	; 0xd8ac <_Z16Display_Update_1v+0x16e>
    d85e:	10 92 47 13 	sts	0x1347, r1	; 0x801347 <_sRuble_Parameters>
    d862:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    d866:	10 92 49 13 	sts	0x1349, r1	; 0x801349 <_sRuble_Parameters+0x2>
    d86a:	10 92 4a 13 	sts	0x134A, r1	; 0x80134a <_sRuble_Parameters+0x3>
    d86e:	10 92 4b 13 	sts	0x134B, r1	; 0x80134b <_sRuble_Parameters+0x4>
    d872:	10 92 4c 13 	sts	0x134C, r1	; 0x80134c <_sRuble_Parameters+0x5>
    d876:	10 92 4d 13 	sts	0x134D, r1	; 0x80134d <_sRuble_Parameters+0x6>
    d87a:	10 92 4e 13 	sts	0x134E, r1	; 0x80134e <_sRuble_Parameters+0x7>
    d87e:	41 e0       	ldi	r20, 0x01	; 1
    d880:	82 e7       	ldi	r24, 0x72	; 114
    d882:	9c e0       	ldi	r25, 0x0C	; 12
    d884:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d888:	68 e7       	ldi	r22, 0x78	; 120
    d88a:	72 e2       	ldi	r23, 0x22	; 34
    d88c:	82 e7       	ldi	r24, 0x72	; 114
    d88e:	9c e0       	ldi	r25, 0x0C	; 12
    d890:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d894:	42 e0       	ldi	r20, 0x02	; 2
    d896:	60 e0       	ldi	r22, 0x00	; 0
    d898:	82 e7       	ldi	r24, 0x72	; 114
    d89a:	9c e0       	ldi	r25, 0x0C	; 12
    d89c:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d8a0:	63 e6       	ldi	r22, 0x63	; 99
    d8a2:	72 e2       	ldi	r23, 0x22	; 34
    d8a4:	82 e7       	ldi	r24, 0x72	; 114
    d8a6:	9c e0       	ldi	r25, 0x0C	; 12
    d8a8:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d8ac:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    d8b0:	3e 2f       	mov	r19, r30
    d8b2:	30 72       	andi	r19, 0x20	; 32
    d8b4:	20 e0       	ldi	r18, 0x00	; 0
    d8b6:	40 e0       	ldi	r20, 0x00	; 0
    d8b8:	50 e0       	ldi	r21, 0x00	; 0
    d8ba:	60 e0       	ldi	r22, 0x00	; 0
    d8bc:	70 e0       	ldi	r23, 0x00	; 0
    d8be:	80 e0       	ldi	r24, 0x00	; 0
    d8c0:	90 e0       	ldi	r25, 0x00	; 0
    d8c2:	a0 e0       	ldi	r26, 0x00	; 0
    d8c4:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d8c8:	d1 f0       	breq	.+52     	; 0xd8fe <_Z16Display_Update_1v+0x1c0>
    d8ca:	ef 7d       	andi	r30, 0xDF	; 223
    d8cc:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    d8d0:	41 e0       	ldi	r20, 0x01	; 1
    d8d2:	82 e7       	ldi	r24, 0x72	; 114
    d8d4:	9c e0       	ldi	r25, 0x0C	; 12
    d8d6:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d8da:	6e e4       	ldi	r22, 0x4E	; 78
    d8dc:	72 e2       	ldi	r23, 0x22	; 34
    d8de:	82 e7       	ldi	r24, 0x72	; 114
    d8e0:	9c e0       	ldi	r25, 0x0C	; 12
    d8e2:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d8e6:	42 e0       	ldi	r20, 0x02	; 2
    d8e8:	60 e0       	ldi	r22, 0x00	; 0
    d8ea:	82 e7       	ldi	r24, 0x72	; 114
    d8ec:	9c e0       	ldi	r25, 0x0C	; 12
    d8ee:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d8f2:	69 e3       	ldi	r22, 0x39	; 57
    d8f4:	72 e2       	ldi	r23, 0x22	; 34
    d8f6:	82 e7       	ldi	r24, 0x72	; 114
    d8f8:	9c e0       	ldi	r25, 0x0C	; 12
    d8fa:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d8fe:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    d902:	3e 2f       	mov	r19, r30
    d904:	30 74       	andi	r19, 0x40	; 64
    d906:	20 e0       	ldi	r18, 0x00	; 0
    d908:	40 e0       	ldi	r20, 0x00	; 0
    d90a:	50 e0       	ldi	r21, 0x00	; 0
    d90c:	60 e0       	ldi	r22, 0x00	; 0
    d90e:	70 e0       	ldi	r23, 0x00	; 0
    d910:	80 e0       	ldi	r24, 0x00	; 0
    d912:	90 e0       	ldi	r25, 0x00	; 0
    d914:	a0 e0       	ldi	r26, 0x00	; 0
    d916:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d91a:	d1 f0       	breq	.+52     	; 0xd950 <_Z16Display_Update_1v+0x212>
    d91c:	ef 7b       	andi	r30, 0xBF	; 191
    d91e:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    d922:	41 e0       	ldi	r20, 0x01	; 1
    d924:	82 e7       	ldi	r24, 0x72	; 114
    d926:	9c e0       	ldi	r25, 0x0C	; 12
    d928:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d92c:	64 e2       	ldi	r22, 0x24	; 36
    d92e:	72 e2       	ldi	r23, 0x22	; 34
    d930:	82 e7       	ldi	r24, 0x72	; 114
    d932:	9c e0       	ldi	r25, 0x0C	; 12
    d934:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d938:	42 e0       	ldi	r20, 0x02	; 2
    d93a:	60 e0       	ldi	r22, 0x00	; 0
    d93c:	82 e7       	ldi	r24, 0x72	; 114
    d93e:	9c e0       	ldi	r25, 0x0C	; 12
    d940:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d944:	6f e0       	ldi	r22, 0x0F	; 15
    d946:	72 e2       	ldi	r23, 0x22	; 34
    d948:	82 e7       	ldi	r24, 0x72	; 114
    d94a:	9c e0       	ldi	r25, 0x0C	; 12
    d94c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d950:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    d954:	3e 2f       	mov	r19, r30
    d956:	30 78       	andi	r19, 0x80	; 128
    d958:	20 e0       	ldi	r18, 0x00	; 0
    d95a:	40 e0       	ldi	r20, 0x00	; 0
    d95c:	50 e0       	ldi	r21, 0x00	; 0
    d95e:	60 e0       	ldi	r22, 0x00	; 0
    d960:	70 e0       	ldi	r23, 0x00	; 0
    d962:	80 e0       	ldi	r24, 0x00	; 0
    d964:	90 e0       	ldi	r25, 0x00	; 0
    d966:	a0 e0       	ldi	r26, 0x00	; 0
    d968:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d96c:	d1 f0       	breq	.+52     	; 0xd9a2 <_Z16Display_Update_1v+0x264>
    d96e:	ef 77       	andi	r30, 0x7F	; 127
    d970:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    d974:	41 e0       	ldi	r20, 0x01	; 1
    d976:	82 e7       	ldi	r24, 0x72	; 114
    d978:	9c e0       	ldi	r25, 0x0C	; 12
    d97a:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d97e:	6a ef       	ldi	r22, 0xFA	; 250
    d980:	71 e2       	ldi	r23, 0x21	; 33
    d982:	82 e7       	ldi	r24, 0x72	; 114
    d984:	9c e0       	ldi	r25, 0x0C	; 12
    d986:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d98a:	42 e0       	ldi	r20, 0x02	; 2
    d98c:	60 e0       	ldi	r22, 0x00	; 0
    d98e:	82 e7       	ldi	r24, 0x72	; 114
    d990:	9c e0       	ldi	r25, 0x0C	; 12
    d992:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d996:	65 ee       	ldi	r22, 0xE5	; 229
    d998:	71 e2       	ldi	r23, 0x21	; 33
    d99a:	82 e7       	ldi	r24, 0x72	; 114
    d99c:	9c e0       	ldi	r25, 0x0C	; 12
    d99e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d9a2:	e0 91 49 13 	lds	r30, 0x1349	; 0x801349 <_sRuble_Parameters+0x2>
    d9a6:	4e 2f       	mov	r20, r30
    d9a8:	41 70       	andi	r20, 0x01	; 1
    d9aa:	20 e0       	ldi	r18, 0x00	; 0
    d9ac:	30 e0       	ldi	r19, 0x00	; 0
    d9ae:	50 e0       	ldi	r21, 0x00	; 0
    d9b0:	60 e0       	ldi	r22, 0x00	; 0
    d9b2:	70 e0       	ldi	r23, 0x00	; 0
    d9b4:	80 e0       	ldi	r24, 0x00	; 0
    d9b6:	90 e0       	ldi	r25, 0x00	; 0
    d9b8:	a0 e0       	ldi	r26, 0x00	; 0
    d9ba:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    d9be:	d1 f0       	breq	.+52     	; 0xd9f4 <_Z16Display_Update_1v+0x2b6>
    d9c0:	ee 7f       	andi	r30, 0xFE	; 254
    d9c2:	e0 93 49 13 	sts	0x1349, r30	; 0x801349 <_sRuble_Parameters+0x2>
    d9c6:	41 e0       	ldi	r20, 0x01	; 1
    d9c8:	82 e7       	ldi	r24, 0x72	; 114
    d9ca:	9c e0       	ldi	r25, 0x0C	; 12
    d9cc:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d9d0:	60 ed       	ldi	r22, 0xD0	; 208
    d9d2:	71 e2       	ldi	r23, 0x21	; 33
    d9d4:	82 e7       	ldi	r24, 0x72	; 114
    d9d6:	9c e0       	ldi	r25, 0x0C	; 12
    d9d8:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d9dc:	42 e0       	ldi	r20, 0x02	; 2
    d9de:	60 e0       	ldi	r22, 0x00	; 0
    d9e0:	82 e7       	ldi	r24, 0x72	; 114
    d9e2:	9c e0       	ldi	r25, 0x0C	; 12
    d9e4:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d9e8:	6b eb       	ldi	r22, 0xBB	; 187
    d9ea:	71 e2       	ldi	r23, 0x21	; 33
    d9ec:	82 e7       	ldi	r24, 0x72	; 114
    d9ee:	9c e0       	ldi	r25, 0x0C	; 12
    d9f0:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    d9f4:	e0 91 49 13 	lds	r30, 0x1349	; 0x801349 <_sRuble_Parameters+0x2>
    d9f8:	4e 2f       	mov	r20, r30
    d9fa:	44 70       	andi	r20, 0x04	; 4
    d9fc:	20 e0       	ldi	r18, 0x00	; 0
    d9fe:	30 e0       	ldi	r19, 0x00	; 0
    da00:	50 e0       	ldi	r21, 0x00	; 0
    da02:	60 e0       	ldi	r22, 0x00	; 0
    da04:	70 e0       	ldi	r23, 0x00	; 0
    da06:	80 e0       	ldi	r24, 0x00	; 0
    da08:	90 e0       	ldi	r25, 0x00	; 0
    da0a:	a0 e0       	ldi	r26, 0x00	; 0
    da0c:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    da10:	d9 f0       	breq	.+54     	; 0xda48 <_Z16Display_Update_1v+0x30a>
    da12:	eb 7f       	andi	r30, 0xFB	; 251
    da14:	e0 93 49 13 	sts	0x1349, r30	; 0x801349 <_sRuble_Parameters+0x2>
    da18:	41 e0       	ldi	r20, 0x01	; 1
    da1a:	61 e0       	ldi	r22, 0x01	; 1
    da1c:	82 e7       	ldi	r24, 0x72	; 114
    da1e:	9c e0       	ldi	r25, 0x0C	; 12
    da20:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da24:	69 ea       	ldi	r22, 0xA9	; 169
    da26:	71 e2       	ldi	r23, 0x21	; 33
    da28:	82 e7       	ldi	r24, 0x72	; 114
    da2a:	9c e0       	ldi	r25, 0x0C	; 12
    da2c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    da30:	42 e0       	ldi	r20, 0x02	; 2
    da32:	60 e0       	ldi	r22, 0x00	; 0
    da34:	82 e7       	ldi	r24, 0x72	; 114
    da36:	9c e0       	ldi	r25, 0x0C	; 12
    da38:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    da3c:	64 e9       	ldi	r22, 0x94	; 148
    da3e:	71 e2       	ldi	r23, 0x21	; 33
    da40:	82 e7       	ldi	r24, 0x72	; 114
    da42:	9c e0       	ldi	r25, 0x0C	; 12
    da44:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    da48:	10 92 1a 0c 	sts	0x0C1A, r1	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    da4c:	10 92 1b 0c 	sts	0x0C1B, r1	; 0x800c1b <_ZZ16Display_Update_1vE12temp_display+0x1>
    da50:	10 92 1c 0c 	sts	0x0C1C, r1	; 0x800c1c <_ZZ16Display_Update_1vE12temp_display+0x2>
    da54:	10 92 1d 0c 	sts	0x0C1D, r1	; 0x800c1d <_ZZ16Display_Update_1vE12temp_display+0x3>
    da58:	80 91 71 0c 	lds	r24, 0x0C71	; 0x800c71 <Start_Display_In_Interrupt>
    da5c:	88 23       	and	r24, r24
    da5e:	09 f4       	brne	.+2      	; 0xda62 <_Z16Display_Update_1v+0x324>
    da60:	96 c1       	rjmp	.+812    	; 0xdd8e <_Z16Display_Update_1v+0x650>
    da62:	80 91 18 0c 	lds	r24, 0x0C18	; 0x800c18 <_sGSM_Query+0x5>
    da66:	e0 91 72 13 	lds	r30, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    da6a:	81 30       	cpi	r24, 0x01	; 1
    da6c:	09 f4       	brne	.+2      	; 0xda70 <_Z16Display_Update_1v+0x332>
    da6e:	9f c0       	rjmp	.+318    	; 0xdbae <_Z16Display_Update_1v+0x470>
    da70:	80 91 f6 13 	lds	r24, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xaf>
    da74:	81 30       	cpi	r24, 0x01	; 1
    da76:	09 f4       	brne	.+2      	; 0xda7a <_Z16Display_Update_1v+0x33c>
    da78:	9a c0       	rjmp	.+308    	; 0xdbae <_Z16Display_Update_1v+0x470>
    da7a:	f0 91 47 13 	lds	r31, 0x1347	; 0x801347 <_sRuble_Parameters>
    da7e:	2f 2f       	mov	r18, r31
    da80:	21 70       	andi	r18, 0x01	; 1
    da82:	30 e0       	ldi	r19, 0x00	; 0
    da84:	40 e0       	ldi	r20, 0x00	; 0
    da86:	50 e0       	ldi	r21, 0x00	; 0
    da88:	60 e0       	ldi	r22, 0x00	; 0
    da8a:	70 e0       	ldi	r23, 0x00	; 0
    da8c:	80 e0       	ldi	r24, 0x00	; 0
    da8e:	90 e0       	ldi	r25, 0x00	; 0
    da90:	a0 e0       	ldi	r26, 0x00	; 0
    da92:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    da96:	b9 f0       	breq	.+46     	; 0xdac6 <_Z16Display_Update_1v+0x388>
    da98:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    da9c:	80 fd       	sbrc	r24, 0
    da9e:	0e c0       	rjmp	.+28     	; 0xdabc <_Z16Display_Update_1v+0x37e>
    daa0:	e2 fd       	sbrc	r30, 2
    daa2:	02 c0       	rjmp	.+4      	; 0xdaa8 <_Z16Display_Update_1v+0x36a>
    daa4:	21 e0       	ldi	r18, 0x01	; 1
    daa6:	03 c0       	rjmp	.+6      	; 0xdaae <_Z16Display_Update_1v+0x370>
    daa8:	29 e0       	ldi	r18, 0x09	; 9
    daaa:	40 e0       	ldi	r20, 0x00	; 0
    daac:	60 e0       	ldi	r22, 0x00	; 0
    daae:	80 e0       	ldi	r24, 0x00	; 0
    dab0:	7f dd       	rcall	.-1282   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dab2:	25 e0       	ldi	r18, 0x05	; 5
    dab4:	40 e0       	ldi	r20, 0x00	; 0
    dab6:	61 e0       	ldi	r22, 0x01	; 1
    dab8:	81 e0       	ldi	r24, 0x01	; 1
    daba:	7a dd       	rcall	.-1292   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dabc:	81 ef       	ldi	r24, 0xF1	; 241
    dabe:	9f ef       	ldi	r25, 0xFF	; 255
    dac0:	af ef       	ldi	r26, 0xFF	; 255
    dac2:	b0 e0       	ldi	r27, 0x00	; 0
    dac4:	6b c0       	rjmp	.+214    	; 0xdb9c <_Z16Display_Update_1v+0x45e>
    dac6:	2f 2f       	mov	r18, r31
    dac8:	22 70       	andi	r18, 0x02	; 2
    daca:	30 e0       	ldi	r19, 0x00	; 0
    dacc:	40 e0       	ldi	r20, 0x00	; 0
    dace:	50 e0       	ldi	r21, 0x00	; 0
    dad0:	60 e0       	ldi	r22, 0x00	; 0
    dad2:	70 e0       	ldi	r23, 0x00	; 0
    dad4:	80 e0       	ldi	r24, 0x00	; 0
    dad6:	90 e0       	ldi	r25, 0x00	; 0
    dad8:	a0 e0       	ldi	r26, 0x00	; 0
    dada:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    dade:	b9 f0       	breq	.+46     	; 0xdb0e <_Z16Display_Update_1v+0x3d0>
    dae0:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    dae4:	81 fd       	sbrc	r24, 1
    dae6:	0e c0       	rjmp	.+28     	; 0xdb04 <_Z16Display_Update_1v+0x3c6>
    dae8:	e2 fd       	sbrc	r30, 2
    daea:	02 c0       	rjmp	.+4      	; 0xdaf0 <_Z16Display_Update_1v+0x3b2>
    daec:	21 e0       	ldi	r18, 0x01	; 1
    daee:	03 c0       	rjmp	.+6      	; 0xdaf6 <_Z16Display_Update_1v+0x3b8>
    daf0:	29 e0       	ldi	r18, 0x09	; 9
    daf2:	40 e0       	ldi	r20, 0x00	; 0
    daf4:	60 e0       	ldi	r22, 0x00	; 0
    daf6:	80 e0       	ldi	r24, 0x00	; 0
    daf8:	5b dd       	rcall	.-1354   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dafa:	22 e0       	ldi	r18, 0x02	; 2
    dafc:	40 e0       	ldi	r20, 0x00	; 0
    dafe:	61 e0       	ldi	r22, 0x01	; 1
    db00:	89 e0       	ldi	r24, 0x09	; 9
    db02:	56 dd       	rcall	.-1364   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    db04:	82 ef       	ldi	r24, 0xF2	; 242
    db06:	9f ef       	ldi	r25, 0xFF	; 255
    db08:	af ef       	ldi	r26, 0xFF	; 255
    db0a:	b0 e0       	ldi	r27, 0x00	; 0
    db0c:	47 c0       	rjmp	.+142    	; 0xdb9c <_Z16Display_Update_1v+0x45e>
    db0e:	2f 2f       	mov	r18, r31
    db10:	24 70       	andi	r18, 0x04	; 4
    db12:	30 e0       	ldi	r19, 0x00	; 0
    db14:	40 e0       	ldi	r20, 0x00	; 0
    db16:	50 e0       	ldi	r21, 0x00	; 0
    db18:	60 e0       	ldi	r22, 0x00	; 0
    db1a:	70 e0       	ldi	r23, 0x00	; 0
    db1c:	80 e0       	ldi	r24, 0x00	; 0
    db1e:	90 e0       	ldi	r25, 0x00	; 0
    db20:	a0 e0       	ldi	r26, 0x00	; 0
    db22:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    db26:	b9 f0       	breq	.+46     	; 0xdb56 <_Z16Display_Update_1v+0x418>
    db28:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    db2c:	82 fd       	sbrc	r24, 2
    db2e:	0e c0       	rjmp	.+28     	; 0xdb4c <_Z16Display_Update_1v+0x40e>
    db30:	e2 fd       	sbrc	r30, 2
    db32:	02 c0       	rjmp	.+4      	; 0xdb38 <_Z16Display_Update_1v+0x3fa>
    db34:	21 e0       	ldi	r18, 0x01	; 1
    db36:	03 c0       	rjmp	.+6      	; 0xdb3e <_Z16Display_Update_1v+0x400>
    db38:	29 e0       	ldi	r18, 0x09	; 9
    db3a:	40 e0       	ldi	r20, 0x00	; 0
    db3c:	60 e0       	ldi	r22, 0x00	; 0
    db3e:	80 e0       	ldi	r24, 0x00	; 0
    db40:	37 dd       	rcall	.-1426   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    db42:	23 e0       	ldi	r18, 0x03	; 3
    db44:	40 e0       	ldi	r20, 0x00	; 0
    db46:	61 e0       	ldi	r22, 0x01	; 1
    db48:	8a e0       	ldi	r24, 0x0A	; 10
    db4a:	32 dd       	rcall	.-1436   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    db4c:	84 ef       	ldi	r24, 0xF4	; 244
    db4e:	9f ef       	ldi	r25, 0xFF	; 255
    db50:	af ef       	ldi	r26, 0xFF	; 255
    db52:	b0 e0       	ldi	r27, 0x00	; 0
    db54:	23 c0       	rjmp	.+70     	; 0xdb9c <_Z16Display_Update_1v+0x45e>
    db56:	2f 2f       	mov	r18, r31
    db58:	28 70       	andi	r18, 0x08	; 8
    db5a:	30 e0       	ldi	r19, 0x00	; 0
    db5c:	40 e0       	ldi	r20, 0x00	; 0
    db5e:	50 e0       	ldi	r21, 0x00	; 0
    db60:	60 e0       	ldi	r22, 0x00	; 0
    db62:	70 e0       	ldi	r23, 0x00	; 0
    db64:	80 e0       	ldi	r24, 0x00	; 0
    db66:	90 e0       	ldi	r25, 0x00	; 0
    db68:	a0 e0       	ldi	r26, 0x00	; 0
    db6a:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    db6e:	a9 f1       	breq	.+106    	; 0xdbda <_Z16Display_Update_1v+0x49c>
    db70:	80 91 1a 0c 	lds	r24, 0x0C1A	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    db74:	83 fd       	sbrc	r24, 3
    db76:	0e c0       	rjmp	.+28     	; 0xdb94 <_Z16Display_Update_1v+0x456>
    db78:	e2 fd       	sbrc	r30, 2
    db7a:	02 c0       	rjmp	.+4      	; 0xdb80 <_Z16Display_Update_1v+0x442>
    db7c:	21 e0       	ldi	r18, 0x01	; 1
    db7e:	03 c0       	rjmp	.+6      	; 0xdb86 <_Z16Display_Update_1v+0x448>
    db80:	29 e0       	ldi	r18, 0x09	; 9
    db82:	40 e0       	ldi	r20, 0x00	; 0
    db84:	60 e0       	ldi	r22, 0x00	; 0
    db86:	80 e0       	ldi	r24, 0x00	; 0
    db88:	13 dd       	rcall	.-1498   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    db8a:	24 e0       	ldi	r18, 0x04	; 4
    db8c:	40 e0       	ldi	r20, 0x00	; 0
    db8e:	61 e0       	ldi	r22, 0x01	; 1
    db90:	82 e0       	ldi	r24, 0x02	; 2
    db92:	0e dd       	rcall	.-1508   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    db94:	88 ef       	ldi	r24, 0xF8	; 248
    db96:	9f ef       	ldi	r25, 0xFF	; 255
    db98:	af ef       	ldi	r26, 0xFF	; 255
    db9a:	b0 e0       	ldi	r27, 0x00	; 0
    db9c:	80 93 1a 0c 	sts	0x0C1A, r24	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    dba0:	90 93 1b 0c 	sts	0x0C1B, r25	; 0x800c1b <_ZZ16Display_Update_1vE12temp_display+0x1>
    dba4:	a0 93 1c 0c 	sts	0x0C1C, r26	; 0x800c1c <_ZZ16Display_Update_1vE12temp_display+0x2>
    dba8:	b0 93 1d 0c 	sts	0x0C1D, r27	; 0x800c1d <_ZZ16Display_Update_1vE12temp_display+0x3>
    dbac:	16 c0       	rjmp	.+44     	; 0xdbda <_Z16Display_Update_1v+0x49c>
    dbae:	e2 fd       	sbrc	r30, 2
    dbb0:	02 c0       	rjmp	.+4      	; 0xdbb6 <_Z16Display_Update_1v+0x478>
    dbb2:	21 e0       	ldi	r18, 0x01	; 1
    dbb4:	01 c0       	rjmp	.+2      	; 0xdbb8 <_Z16Display_Update_1v+0x47a>
    dbb6:	29 e0       	ldi	r18, 0x09	; 9
    dbb8:	40 e0       	ldi	r20, 0x00	; 0
    dbba:	60 e0       	ldi	r22, 0x00	; 0
    dbbc:	80 e0       	ldi	r24, 0x00	; 0
    dbbe:	f8 dc       	rcall	.-1552   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dbc0:	27 e0       	ldi	r18, 0x07	; 7
    dbc2:	40 e0       	ldi	r20, 0x00	; 0
    dbc4:	61 e0       	ldi	r22, 0x01	; 1
    dbc6:	82 e0       	ldi	r24, 0x02	; 2
    dbc8:	f3 dc       	rcall	.-1562   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dbca:	10 92 1a 0c 	sts	0x0C1A, r1	; 0x800c1a <_ZZ16Display_Update_1vE12temp_display>
    dbce:	10 92 1b 0c 	sts	0x0C1B, r1	; 0x800c1b <_ZZ16Display_Update_1vE12temp_display+0x1>
    dbd2:	10 92 1c 0c 	sts	0x0C1C, r1	; 0x800c1c <_ZZ16Display_Update_1vE12temp_display+0x2>
    dbd6:	10 92 1d 0c 	sts	0x0C1D, r1	; 0x800c1d <_ZZ16Display_Update_1vE12temp_display+0x3>
    dbda:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    dbde:	82 fd       	sbrc	r24, 2
    dbe0:	02 c0       	rjmp	.+4      	; 0xdbe6 <_Z16Display_Update_1v+0x4a8>
    dbe2:	21 e0       	ldi	r18, 0x01	; 1
    dbe4:	01 c0       	rjmp	.+2      	; 0xdbe8 <_Z16Display_Update_1v+0x4aa>
    dbe6:	29 e0       	ldi	r18, 0x09	; 9
    dbe8:	40 e0       	ldi	r20, 0x00	; 0
    dbea:	60 e0       	ldi	r22, 0x00	; 0
    dbec:	80 e0       	ldi	r24, 0x00	; 0
    dbee:	e0 dc       	rcall	.-1600   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dbf0:	e0 91 48 13 	lds	r30, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    dbf4:	3e 2f       	mov	r19, r30
    dbf6:	31 70       	andi	r19, 0x01	; 1
    dbf8:	20 e0       	ldi	r18, 0x00	; 0
    dbfa:	40 e0       	ldi	r20, 0x00	; 0
    dbfc:	50 e0       	ldi	r21, 0x00	; 0
    dbfe:	60 e0       	ldi	r22, 0x00	; 0
    dc00:	70 e0       	ldi	r23, 0x00	; 0
    dc02:	80 e0       	ldi	r24, 0x00	; 0
    dc04:	90 e0       	ldi	r25, 0x00	; 0
    dc06:	a0 e0       	ldi	r26, 0x00	; 0
    dc08:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    dc0c:	29 f0       	breq	.+10     	; 0xdc18 <_Z16Display_Update_1v+0x4da>
    dc0e:	ee 7f       	andi	r30, 0xFE	; 254
    dc10:	e0 93 48 13 	sts	0x1348, r30	; 0x801348 <_sRuble_Parameters+0x1>
    dc14:	2a e0       	ldi	r18, 0x0A	; 10
    dc16:	cc dc       	rcall	.-1640   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dc18:	ed ef       	ldi	r30, 0xFD	; 253
    dc1a:	fc e0       	ldi	r31, 0x0C	; 12
    dc1c:	21 e5       	ldi	r18, 0x51	; 81
    dc1e:	3d e0       	ldi	r19, 0x0D	; 13
    dc20:	80 e0       	ldi	r24, 0x00	; 0
    dc22:	90 81       	ld	r25, Z
    dc24:	91 11       	cpse	r25, r1
    dc26:	8f 5f       	subi	r24, 0xFF	; 255
    dc28:	36 96       	adiw	r30, 0x06	; 6
    dc2a:	2e 17       	cp	r18, r30
    dc2c:	3f 07       	cpc	r19, r31
    dc2e:	c9 f7       	brne	.-14     	; 0xdc22 <_Z16Display_Update_1v+0x4e4>
    dc30:	80 93 19 0c 	sts	0x0C19, r24	; 0x800c19 <_ZZ16Display_Update_1vE10plot_added>
    dc34:	80 91 f8 13 	lds	r24, 0x13F8	; 0x8013f8 <_sRuble_Parameters+0xb1>
    dc38:	88 23       	and	r24, r24
    dc3a:	09 f4       	brne	.+2      	; 0xdc3e <_Z16Display_Update_1v+0x500>
    dc3c:	a8 c0       	rjmp	.+336    	; 0xdd8e <_Z16Display_Update_1v+0x650>
    dc3e:	10 92 f8 13 	sts	0x13F8, r1	; 0x8013f8 <_sRuble_Parameters+0xb1>
    dc42:	80 91 f7 13 	lds	r24, 0x13F7	; 0x8013f7 <_sRuble_Parameters+0xb0>
    dc46:	81 11       	cpse	r24, r1
    dc48:	05 c0       	rjmp	.+10     	; 0xdc54 <_Z16Display_Update_1v+0x516>
    dc4a:	28 e0       	ldi	r18, 0x08	; 8
    dc4c:	40 e0       	ldi	r20, 0x00	; 0
    dc4e:	62 e0       	ldi	r22, 0x02	; 2
    dc50:	84 e0       	ldi	r24, 0x04	; 4
    dc52:	ae dc       	rcall	.-1700   	; 0xd5b0 <_Z16Lcd_Special_Charhhhh>
    dc54:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    dc58:	83 30       	cpi	r24, 0x03	; 3
    dc5a:	b1 f0       	breq	.+44     	; 0xdc88 <_Z16Display_Update_1v+0x54a>
    dc5c:	85 30       	cpi	r24, 0x05	; 5
    dc5e:	59 f0       	breq	.+22     	; 0xdc76 <_Z16Display_Update_1v+0x538>
    dc60:	82 30       	cpi	r24, 0x02	; 2
    dc62:	f1 f4       	brne	.+60     	; 0xdca0 <_Z16Display_Update_1v+0x562>
    dc64:	41 e0       	ldi	r20, 0x01	; 1
    dc66:	60 e0       	ldi	r22, 0x00	; 0
    dc68:	82 e7       	ldi	r24, 0x72	; 114
    dc6a:	9c e0       	ldi	r25, 0x0C	; 12
    dc6c:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc70:	65 e5       	ldi	r22, 0x55	; 85
    dc72:	71 e2       	ldi	r23, 0x21	; 33
    dc74:	11 c0       	rjmp	.+34     	; 0xdc98 <_Z16Display_Update_1v+0x55a>
    dc76:	41 e0       	ldi	r20, 0x01	; 1
    dc78:	60 e0       	ldi	r22, 0x00	; 0
    dc7a:	82 e7       	ldi	r24, 0x72	; 114
    dc7c:	9c e0       	ldi	r25, 0x0C	; 12
    dc7e:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc82:	6f e7       	ldi	r22, 0x7F	; 127
    dc84:	71 e2       	ldi	r23, 0x21	; 33
    dc86:	08 c0       	rjmp	.+16     	; 0xdc98 <_Z16Display_Update_1v+0x55a>
    dc88:	41 e0       	ldi	r20, 0x01	; 1
    dc8a:	60 e0       	ldi	r22, 0x00	; 0
    dc8c:	82 e7       	ldi	r24, 0x72	; 114
    dc8e:	9c e0       	ldi	r25, 0x0C	; 12
    dc90:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dc94:	6a e6       	ldi	r22, 0x6A	; 106
    dc96:	71 e2       	ldi	r23, 0x21	; 33
    dc98:	82 e7       	ldi	r24, 0x72	; 114
    dc9a:	9c e0       	ldi	r25, 0x0C	; 12
    dc9c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    dca0:	80 91 19 0c 	lds	r24, 0x0C19	; 0x800c19 <_ZZ16Display_Update_1vE10plot_added>
    dca4:	81 11       	cpse	r24, r1
    dca6:	15 c0       	rjmp	.+42     	; 0xdcd2 <_Z16Display_Update_1v+0x594>
    dca8:	42 e0       	ldi	r20, 0x02	; 2
    dcaa:	60 e0       	ldi	r22, 0x00	; 0
    dcac:	82 e7       	ldi	r24, 0x72	; 114
    dcae:	9c e0       	ldi	r25, 0x0C	; 12
    dcb0:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dcb4:	60 e4       	ldi	r22, 0x40	; 64
    dcb6:	71 e2       	ldi	r23, 0x21	; 33
    dcb8:	82 e7       	ldi	r24, 0x72	; 114
    dcba:	9c e0       	ldi	r25, 0x0C	; 12
    dcbc:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    dcc0:	43 e0       	ldi	r20, 0x03	; 3
    dcc2:	60 e0       	ldi	r22, 0x00	; 0
    dcc4:	82 e7       	ldi	r24, 0x72	; 114
    dcc6:	9c e0       	ldi	r25, 0x0C	; 12
    dcc8:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dccc:	6b e2       	ldi	r22, 0x2B	; 43
    dcce:	71 e2       	ldi	r23, 0x21	; 33
    dcd0:	43 c0       	rjmp	.+134    	; 0xdd58 <_Z16Display_Update_1v+0x61a>
    dcd2:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    dcd6:	88 23       	and	r24, r24
    dcd8:	59 f1       	breq	.+86     	; 0xdd30 <_Z16Display_Update_1v+0x5f2>
    dcda:	8e 01       	movw	r16, r28
    dcdc:	0f 5f       	subi	r16, 0xFF	; 255
    dcde:	1f 4f       	sbci	r17, 0xFF	; 255
    dce0:	95 e1       	ldi	r25, 0x15	; 21
    dce2:	f8 01       	movw	r30, r16
    dce4:	11 92       	st	Z+, r1
    dce6:	9a 95       	dec	r25
    dce8:	e9 f7       	brne	.-6      	; 0xdce4 <_Z16Display_Update_1v+0x5a6>
    dcea:	1f 92       	push	r1
    dcec:	8f 93       	push	r24
    dcee:	86 ee       	ldi	r24, 0xE6	; 230
    dcf0:	94 e0       	ldi	r25, 0x04	; 4
    dcf2:	9f 93       	push	r25
    dcf4:	8f 93       	push	r24
    dcf6:	1f 93       	push	r17
    dcf8:	0f 93       	push	r16
    dcfa:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    dcfe:	20 e0       	ldi	r18, 0x00	; 0
    dd00:	42 e0       	ldi	r20, 0x02	; 2
    dd02:	64 e1       	ldi	r22, 0x14	; 20
    dd04:	c8 01       	movw	r24, r16
    dd06:	0e 94 2d 64 	call	0xc85a	; 0xc85a <_Z14Lcd_Print_BuffPchhh>
    dd0a:	43 e0       	ldi	r20, 0x03	; 3
    dd0c:	60 e0       	ldi	r22, 0x00	; 0
    dd0e:	82 e7       	ldi	r24, 0x72	; 114
    dd10:	9c e0       	ldi	r25, 0x0C	; 12
    dd12:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd16:	66 e1       	ldi	r22, 0x16	; 22
    dd18:	71 e2       	ldi	r23, 0x21	; 33
    dd1a:	82 e7       	ldi	r24, 0x72	; 114
    dd1c:	9c e0       	ldi	r25, 0x0C	; 12
    dd1e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    dd22:	0f 90       	pop	r0
    dd24:	0f 90       	pop	r0
    dd26:	0f 90       	pop	r0
    dd28:	0f 90       	pop	r0
    dd2a:	0f 90       	pop	r0
    dd2c:	0f 90       	pop	r0
    dd2e:	18 c0       	rjmp	.+48     	; 0xdd60 <_Z16Display_Update_1v+0x622>
    dd30:	42 e0       	ldi	r20, 0x02	; 2
    dd32:	60 e0       	ldi	r22, 0x00	; 0
    dd34:	82 e7       	ldi	r24, 0x72	; 114
    dd36:	9c e0       	ldi	r25, 0x0C	; 12
    dd38:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd3c:	61 e0       	ldi	r22, 0x01	; 1
    dd3e:	71 e2       	ldi	r23, 0x21	; 33
    dd40:	82 e7       	ldi	r24, 0x72	; 114
    dd42:	9c e0       	ldi	r25, 0x0C	; 12
    dd44:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    dd48:	43 e0       	ldi	r20, 0x03	; 3
    dd4a:	60 e0       	ldi	r22, 0x00	; 0
    dd4c:	82 e7       	ldi	r24, 0x72	; 114
    dd4e:	9c e0       	ldi	r25, 0x0C	; 12
    dd50:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd54:	6c ee       	ldi	r22, 0xEC	; 236
    dd56:	70 e2       	ldi	r23, 0x20	; 32
    dd58:	82 e7       	ldi	r24, 0x72	; 114
    dd5a:	9c e0       	ldi	r25, 0x0C	; 12
    dd5c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    dd60:	80 91 2c 14 	lds	r24, 0x142C	; 0x80142c <_sRuble_Parameters+0xe5>
    dd64:	40 e0       	ldi	r20, 0x00	; 0
    dd66:	63 e0       	ldi	r22, 0x03	; 3
    dd68:	81 30       	cpi	r24, 0x01	; 1
    dd6a:	39 f4       	brne	.+14     	; 0xdd7a <_Z16Display_Update_1v+0x63c>
    dd6c:	82 e7       	ldi	r24, 0x72	; 114
    dd6e:	9c e0       	ldi	r25, 0x0C	; 12
    dd70:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd74:	6f ed       	ldi	r22, 0xDF	; 223
    dd76:	70 e2       	ldi	r23, 0x20	; 32
    dd78:	06 c0       	rjmp	.+12     	; 0xdd86 <_Z16Display_Update_1v+0x648>
    dd7a:	82 e7       	ldi	r24, 0x72	; 114
    dd7c:	9c e0       	ldi	r25, 0x0C	; 12
    dd7e:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    dd82:	62 ed       	ldi	r22, 0xD2	; 210
    dd84:	70 e2       	ldi	r23, 0x20	; 32
    dd86:	82 e7       	ldi	r24, 0x72	; 114
    dd88:	9c e0       	ldi	r25, 0x0C	; 12
    dd8a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    dd8e:	65 96       	adiw	r28, 0x15	; 21
    dd90:	0f b6       	in	r0, 0x3f	; 63
    dd92:	f8 94       	cli
    dd94:	de bf       	out	0x3e, r29	; 62
    dd96:	0f be       	out	0x3f, r0	; 63
    dd98:	cd bf       	out	0x3d, r28	; 61
    dd9a:	df 91       	pop	r29
    dd9c:	cf 91       	pop	r28
    dd9e:	1f 91       	pop	r17
    dda0:	0f 91       	pop	r16
    dda2:	ff 90       	pop	r15
    dda4:	ef 90       	pop	r14
    dda6:	df 90       	pop	r13
    dda8:	08 95       	ret

0000ddaa <_Z19Initialise_Hardwarev>:
    ddaa:	0f 93       	push	r16
    ddac:	1f 93       	push	r17
    ddae:	cf 93       	push	r28
    ddb0:	df 93       	push	r29
    ddb2:	00 d0       	rcall	.+0      	; 0xddb4 <_Z19Initialise_Hardwarev+0xa>
    ddb4:	cd b7       	in	r28, 0x3d	; 61
    ddb6:	de b7       	in	r29, 0x3e	; 62
    ddb8:	18 e1       	ldi	r17, 0x18	; 24
    ddba:	89 e2       	ldi	r24, 0x29	; 41
    ddbc:	0f b6       	in	r0, 0x3f	; 63
    ddbe:	f8 94       	cli
    ddc0:	a8 95       	wdr
    ddc2:	10 93 60 00 	sts	0x0060, r17	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    ddc6:	0f be       	out	0x3f, r0	; 63
    ddc8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    ddcc:	10 92 97 0c 	sts	0x0C97, r1	; 0x800c97 <_gStart_Wdt>
    ddd0:	0e 94 02 62 	call	0xc404	; 0xc404 <_Z20Timer1_Interrupt_Intv>
    ddd4:	0e 94 ba 63 	call	0xc774	; 0xc774 <_Z20Timer0_Interrupt_Intv>
    ddd8:	0e 94 28 64 	call	0xc850	; 0xc850 <_Z8Lcd_Initv>
    dddc:	26 e0       	ldi	r18, 0x06	; 6
    ddde:	40 e8       	ldi	r20, 0x80	; 128
    dde0:	55 e2       	ldi	r21, 0x25	; 37
    dde2:	60 e0       	ldi	r22, 0x00	; 0
    dde4:	70 e0       	ldi	r23, 0x00	; 0
    dde6:	82 e5       	ldi	r24, 0x52	; 82
    dde8:	94 e1       	ldi	r25, 0x14	; 20
    ddea:	0e 94 3d d0 	call	0x1a07a	; 0x1a07a <_ZN14HardwareSerial5beginEmh>
    ddee:	26 e0       	ldi	r18, 0x06	; 6
    ddf0:	40 e8       	ldi	r20, 0x80	; 128
    ddf2:	55 e2       	ldi	r21, 0x25	; 37
    ddf4:	60 e0       	ldi	r22, 0x00	; 0
    ddf6:	70 e0       	ldi	r23, 0x00	; 0
    ddf8:	8f e0       	ldi	r24, 0x0F	; 15
    ddfa:	96 e1       	ldi	r25, 0x16	; 22
    ddfc:	0e 94 3d d0 	call	0x1a07a	; 0x1a07a <_ZN14HardwareSerial5beginEmh>
    de00:	62 e0       	ldi	r22, 0x02	; 2
    de02:	83 e1       	ldi	r24, 0x13	; 19
    de04:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    de08:	41 e0       	ldi	r20, 0x01	; 1
    de0a:	60 e0       	ldi	r22, 0x00	; 0
    de0c:	82 e7       	ldi	r24, 0x72	; 114
    de0e:	9c e0       	ldi	r25, 0x0C	; 12
    de10:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    de14:	68 ef       	ldi	r22, 0xF8	; 248
    de16:	74 e2       	ldi	r23, 0x24	; 36
    de18:	82 e7       	ldi	r24, 0x72	; 114
    de1a:	9c e0       	ldi	r25, 0x0C	; 12
    de1c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    de20:	42 e0       	ldi	r20, 0x02	; 2
    de22:	60 e0       	ldi	r22, 0x00	; 0
    de24:	82 e7       	ldi	r24, 0x72	; 114
    de26:	9c e0       	ldi	r25, 0x0C	; 12
    de28:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    de2c:	63 ee       	ldi	r22, 0xE3	; 227
    de2e:	74 e2       	ldi	r23, 0x24	; 36
    de30:	82 e7       	ldi	r24, 0x72	; 114
    de32:	9c e0       	ldi	r25, 0x0C	; 12
    de34:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    de38:	68 eb       	ldi	r22, 0xB8	; 184
    de3a:	7b e0       	ldi	r23, 0x0B	; 11
    de3c:	80 e0       	ldi	r24, 0x00	; 0
    de3e:	90 e0       	ldi	r25, 0x00	; 0
    de40:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    de44:	41 e0       	ldi	r20, 0x01	; 1
    de46:	60 e0       	ldi	r22, 0x00	; 0
    de48:	82 e7       	ldi	r24, 0x72	; 114
    de4a:	9c e0       	ldi	r25, 0x0C	; 12
    de4c:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    de50:	6e ec       	ldi	r22, 0xCE	; 206
    de52:	74 e2       	ldi	r23, 0x24	; 36
    de54:	82 e7       	ldi	r24, 0x72	; 114
    de56:	9c e0       	ldi	r25, 0x0C	; 12
    de58:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    de5c:	41 e0       	ldi	r20, 0x01	; 1
    de5e:	65 e0       	ldi	r22, 0x05	; 5
    de60:	82 e7       	ldi	r24, 0x72	; 114
    de62:	9c e0       	ldi	r25, 0x0C	; 12
    de64:	0e 94 0e d7 	call	0x1ae1c	; 0x1ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>
    de68:	61 ec       	ldi	r22, 0xC1	; 193
    de6a:	74 e2       	ldi	r23, 0x24	; 36
    de6c:	82 e7       	ldi	r24, 0x72	; 114
    de6e:	9c e0       	ldi	r25, 0x0C	; 12
    de70:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    de74:	82 e5       	ldi	r24, 0x52	; 82
    de76:	94 e1       	ldi	r25, 0x14	; 20
    de78:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    de7c:	61 e0       	ldi	r22, 0x01	; 1
    de7e:	8d e0       	ldi	r24, 0x0D	; 13
    de80:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    de84:	61 e0       	ldi	r22, 0x01	; 1
    de86:	8a e0       	ldi	r24, 0x0A	; 10
    de88:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    de8c:	61 e0       	ldi	r22, 0x01	; 1
    de8e:	8b e0       	ldi	r24, 0x0B	; 11
    de90:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    de94:	61 e0       	ldi	r22, 0x01	; 1
    de96:	86 e1       	ldi	r24, 0x16	; 22
    de98:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    de9c:	61 e0       	ldi	r22, 0x01	; 1
    de9e:	88 e1       	ldi	r24, 0x18	; 24
    dea0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dea4:	61 e0       	ldi	r22, 0x01	; 1
    dea6:	8a e1       	ldi	r24, 0x1A	; 26
    dea8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    deac:	61 e0       	ldi	r22, 0x01	; 1
    deae:	8c e1       	ldi	r24, 0x1C	; 28
    deb0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    deb4:	61 e0       	ldi	r22, 0x01	; 1
    deb6:	85 e2       	ldi	r24, 0x25	; 37
    deb8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    debc:	61 e0       	ldi	r22, 0x01	; 1
    debe:	82 e2       	ldi	r24, 0x22	; 34
    dec0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dec4:	61 e0       	ldi	r22, 0x01	; 1
    dec6:	80 e2       	ldi	r24, 0x20	; 32
    dec8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    decc:	61 e0       	ldi	r22, 0x01	; 1
    dece:	8e e1       	ldi	r24, 0x1E	; 30
    ded0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    ded4:	61 e0       	ldi	r22, 0x01	; 1
    ded6:	87 e1       	ldi	r24, 0x17	; 23
    ded8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dedc:	61 e0       	ldi	r22, 0x01	; 1
    dede:	89 e1       	ldi	r24, 0x19	; 25
    dee0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dee4:	61 e0       	ldi	r22, 0x01	; 1
    dee6:	8b e1       	ldi	r24, 0x1B	; 27
    dee8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    deec:	61 e0       	ldi	r22, 0x01	; 1
    deee:	8d e1       	ldi	r24, 0x1D	; 29
    def0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    def4:	61 e0       	ldi	r22, 0x01	; 1
    def6:	83 e2       	ldi	r24, 0x23	; 35
    def8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    defc:	61 e0       	ldi	r22, 0x01	; 1
    defe:	81 e2       	ldi	r24, 0x21	; 33
    df00:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df04:	61 e0       	ldi	r22, 0x01	; 1
    df06:	8f e1       	ldi	r24, 0x1F	; 31
    df08:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df0c:	61 e0       	ldi	r22, 0x01	; 1
    df0e:	81 e3       	ldi	r24, 0x31	; 49
    df10:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df14:	61 e0       	ldi	r22, 0x01	; 1
    df16:	86 e0       	ldi	r24, 0x06	; 6
    df18:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df1c:	61 e0       	ldi	r22, 0x01	; 1
    df1e:	87 e0       	ldi	r24, 0x07	; 7
    df20:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df24:	61 e0       	ldi	r22, 0x01	; 1
    df26:	88 e0       	ldi	r24, 0x08	; 8
    df28:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df2c:	61 e0       	ldi	r22, 0x01	; 1
    df2e:	89 e0       	ldi	r24, 0x09	; 9
    df30:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df34:	61 e0       	ldi	r22, 0x01	; 1
    df36:	80 e3       	ldi	r24, 0x30	; 48
    df38:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df3c:	61 e0       	ldi	r22, 0x01	; 1
    df3e:	8f e2       	ldi	r24, 0x2F	; 47
    df40:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df44:	61 e0       	ldi	r22, 0x01	; 1
    df46:	8e e2       	ldi	r24, 0x2E	; 46
    df48:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df4c:	61 e0       	ldi	r22, 0x01	; 1
    df4e:	8d e2       	ldi	r24, 0x2D	; 45
    df50:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df54:	61 e0       	ldi	r22, 0x01	; 1
    df56:	85 e3       	ldi	r24, 0x35	; 53
    df58:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df5c:	61 e0       	ldi	r22, 0x01	; 1
    df5e:	84 e2       	ldi	r24, 0x24	; 36
    df60:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df64:	61 e0       	ldi	r22, 0x01	; 1
    df66:	81 e0       	ldi	r24, 0x01	; 1
    df68:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df6c:	61 e0       	ldi	r22, 0x01	; 1
    df6e:	8c e0       	ldi	r24, 0x0C	; 12
    df70:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df74:	61 e0       	ldi	r22, 0x01	; 1
    df76:	87 e2       	ldi	r24, 0x27	; 39
    df78:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df7c:	61 e0       	ldi	r22, 0x01	; 1
    df7e:	8e e1       	ldi	r24, 0x1E	; 30
    df80:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df84:	61 e0       	ldi	r22, 0x01	; 1
    df86:	8e e1       	ldi	r24, 0x1E	; 30
    df88:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
    df8c:	60 e0       	ldi	r22, 0x00	; 0
    df8e:	87 e3       	ldi	r24, 0x37	; 55
    df90:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df94:	60 e0       	ldi	r22, 0x00	; 0
    df96:	88 e3       	ldi	r24, 0x38	; 56
    df98:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    df9c:	62 e0       	ldi	r22, 0x02	; 2
    df9e:	89 e3       	ldi	r24, 0x39	; 57
    dfa0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dfa4:	61 e0       	ldi	r22, 0x01	; 1
    dfa6:	8a e0       	ldi	r24, 0x0A	; 10
    dfa8:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
    dfac:	61 e0       	ldi	r22, 0x01	; 1
    dfae:	8b e0       	ldi	r24, 0x0B	; 11
    dfb0:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
    dfb4:	60 e0       	ldi	r22, 0x00	; 0
    dfb6:	89 e3       	ldi	r24, 0x39	; 57
    dfb8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dfbc:	60 e0       	ldi	r22, 0x00	; 0
    dfbe:	8a e3       	ldi	r24, 0x3A	; 58
    dfc0:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dfc4:	60 e0       	ldi	r22, 0x00	; 0
    dfc6:	8b e3       	ldi	r24, 0x3B	; 59
    dfc8:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    dfcc:	86 e1       	ldi	r24, 0x16	; 22
    dfce:	80 93 d7 13 	sts	0x13D7, r24	; 0x8013d7 <_sRuble_Parameters+0x90>
    dfd2:	10 93 d8 13 	sts	0x13D8, r17	; 0x8013d8 <_sRuble_Parameters+0x91>
    dfd6:	8a e1       	ldi	r24, 0x1A	; 26
    dfd8:	80 93 d9 13 	sts	0x13D9, r24	; 0x8013d9 <_sRuble_Parameters+0x92>
    dfdc:	8c e1       	ldi	r24, 0x1C	; 28
    dfde:	80 93 da 13 	sts	0x13DA, r24	; 0x8013da <_sRuble_Parameters+0x93>
    dfe2:	85 e2       	ldi	r24, 0x25	; 37
    dfe4:	80 93 db 13 	sts	0x13DB, r24	; 0x8013db <_sRuble_Parameters+0x94>
    dfe8:	82 e2       	ldi	r24, 0x22	; 34
    dfea:	80 93 dc 13 	sts	0x13DC, r24	; 0x8013dc <_sRuble_Parameters+0x95>
    dfee:	80 e2       	ldi	r24, 0x20	; 32
    dff0:	80 93 dd 13 	sts	0x13DD, r24	; 0x8013dd <_sRuble_Parameters+0x96>
    dff4:	8e e1       	ldi	r24, 0x1E	; 30
    dff6:	80 93 de 13 	sts	0x13DE, r24	; 0x8013de <_sRuble_Parameters+0x97>
    dffa:	87 e1       	ldi	r24, 0x17	; 23
    dffc:	80 93 df 13 	sts	0x13DF, r24	; 0x8013df <_sRuble_Parameters+0x98>
    e000:	89 e1       	ldi	r24, 0x19	; 25
    e002:	80 93 e0 13 	sts	0x13E0, r24	; 0x8013e0 <_sRuble_Parameters+0x99>
    e006:	8b e1       	ldi	r24, 0x1B	; 27
    e008:	80 93 e1 13 	sts	0x13E1, r24	; 0x8013e1 <_sRuble_Parameters+0x9a>
    e00c:	8d e1       	ldi	r24, 0x1D	; 29
    e00e:	80 93 e2 13 	sts	0x13E2, r24	; 0x8013e2 <_sRuble_Parameters+0x9b>
    e012:	83 e2       	ldi	r24, 0x23	; 35
    e014:	80 93 e3 13 	sts	0x13E3, r24	; 0x8013e3 <_sRuble_Parameters+0x9c>
    e018:	81 e2       	ldi	r24, 0x21	; 33
    e01a:	80 93 e4 13 	sts	0x13E4, r24	; 0x8013e4 <_sRuble_Parameters+0x9d>
    e01e:	8f e1       	ldi	r24, 0x1F	; 31
    e020:	80 93 e5 13 	sts	0x13E5, r24	; 0x8013e5 <_sRuble_Parameters+0x9e>
    e024:	81 e3       	ldi	r24, 0x31	; 49
    e026:	80 93 e6 13 	sts	0x13E6, r24	; 0x8013e6 <_sRuble_Parameters+0x9f>
    e02a:	86 e0       	ldi	r24, 0x06	; 6
    e02c:	80 93 e7 13 	sts	0x13E7, r24	; 0x8013e7 <_sRuble_Parameters+0xa0>
    e030:	87 e0       	ldi	r24, 0x07	; 7
    e032:	80 93 e8 13 	sts	0x13E8, r24	; 0x8013e8 <_sRuble_Parameters+0xa1>
    e036:	88 e0       	ldi	r24, 0x08	; 8
    e038:	80 93 e9 13 	sts	0x13E9, r24	; 0x8013e9 <_sRuble_Parameters+0xa2>
    e03c:	89 e0       	ldi	r24, 0x09	; 9
    e03e:	80 93 ea 13 	sts	0x13EA, r24	; 0x8013ea <_sRuble_Parameters+0xa3>
    e042:	80 e3       	ldi	r24, 0x30	; 48
    e044:	80 93 eb 13 	sts	0x13EB, r24	; 0x8013eb <_sRuble_Parameters+0xa4>
    e048:	8f e2       	ldi	r24, 0x2F	; 47
    e04a:	80 93 ec 13 	sts	0x13EC, r24	; 0x8013ec <_sRuble_Parameters+0xa5>
    e04e:	8e e2       	ldi	r24, 0x2E	; 46
    e050:	80 93 ed 13 	sts	0x13ED, r24	; 0x8013ed <_sRuble_Parameters+0xa6>
    e054:	8d e2       	ldi	r24, 0x2D	; 45
    e056:	80 93 ee 13 	sts	0x13EE, r24	; 0x8013ee <_sRuble_Parameters+0xa7>
    e05a:	62 e0       	ldi	r22, 0x02	; 2
    e05c:	89 e3       	ldi	r24, 0x39	; 57
    e05e:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    e062:	62 e0       	ldi	r22, 0x02	; 2
    e064:	8a e3       	ldi	r24, 0x3A	; 58
    e066:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    e06a:	62 e0       	ldi	r22, 0x02	; 2
    e06c:	8b e3       	ldi	r24, 0x3B	; 59
    e06e:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    e072:	07 ed       	ldi	r16, 0xD7	; 215
    e074:	13 e1       	ldi	r17, 0x13	; 19
    e076:	61 e0       	ldi	r22, 0x01	; 1
    e078:	f8 01       	movw	r30, r16
    e07a:	81 91       	ld	r24, Z+
    e07c:	8f 01       	movw	r16, r30
    e07e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
    e082:	f3 e1       	ldi	r31, 0x13	; 19
    e084:	0f 3e       	cpi	r16, 0xEF	; 239
    e086:	1f 07       	cpc	r17, r31
    e088:	b1 f7       	brne	.-20     	; 0xe076 <_Z19Initialise_Hardwarev+0x2cc>
    e08a:	6e 98       	cbi	0x0d, 6	; 13
    e08c:	76 9a       	sbi	0x0e, 6	; 14
    e08e:	68 ee       	ldi	r22, 0xE8	; 232
    e090:	73 e0       	ldi	r23, 0x03	; 3
    e092:	80 e0       	ldi	r24, 0x00	; 0
    e094:	90 e0       	ldi	r25, 0x00	; 0
    e096:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e09a:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e09e:	88 69       	ori	r24, 0x98	; 152
    e0a0:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
    e0a4:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e0a8:	86 60       	ori	r24, 0x06	; 6
    e0aa:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
    e0ae:	78 94       	sei
    e0b0:	68 ee       	ldi	r22, 0xE8	; 232
    e0b2:	73 e0       	ldi	r23, 0x03	; 3
    e0b4:	80 e0       	ldi	r24, 0x00	; 0
    e0b6:	90 e0       	ldi	r25, 0x00	; 0
    e0b8:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e0bc:	94 d3       	rcall	.+1832   	; 0xe7e6 <_Z11Debug_Checkv>
    e0be:	0e 94 5d 64 	call	0xc8ba	; 0xc8ba <_Z9Lora_Initv>
    e0c2:	88 23       	and	r24, r24
    e0c4:	79 f0       	breq	.+30     	; 0xe0e4 <_Z19Initialise_Hardwarev+0x33a>
    e0c6:	0e 94 7f 64 	call	0xc8fe	; 0xc8fe <_Z13Lora_Set_Freqv>
    e0ca:	0e 94 8d 64 	call	0xc91a	; 0xc91a <_Z15Lora_Set_Configv>
    e0ce:	0e 94 87 64 	call	0xc90e	; 0xc90e <_Z14Lora_Set_Powerv>
    e0d2:	10 92 f7 13 	sts	0x13F7, r1	; 0x8013f7 <_sRuble_Parameters+0xb0>
    e0d6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e0da:	81 30       	cpi	r24, 0x01	; 1
    e0dc:	11 f5       	brne	.+68     	; 0xe122 <_Z19Initialise_Hardwarev+0x378>
    e0de:	62 eb       	ldi	r22, 0xB2	; 178
    e0e0:	74 e2       	ldi	r23, 0x24	; 36
    e0e2:	17 c0       	rjmp	.+46     	; 0xe112 <_Z19Initialise_Hardwarev+0x368>
    e0e4:	80 91 a1 13 	lds	r24, 0x13A1	; 0x8013a1 <_sRuble_Parameters+0x5a>
    e0e8:	82 60       	ori	r24, 0x02	; 2
    e0ea:	80 93 a1 13 	sts	0x13A1, r24	; 0x8013a1 <_sRuble_Parameters+0x5a>
    e0ee:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    e0f2:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    e0f6:	91 60       	ori	r25, 0x01	; 1
    e0f8:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    e0fc:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    e100:	81 e0       	ldi	r24, 0x01	; 1
    e102:	80 93 f7 13 	sts	0x13F7, r24	; 0x8013f7 <_sRuble_Parameters+0xb0>
    e106:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e10a:	81 30       	cpi	r24, 0x01	; 1
    e10c:	51 f4       	brne	.+20     	; 0xe122 <_Z19Initialise_Hardwarev+0x378>
    e10e:	6f e9       	ldi	r22, 0x9F	; 159
    e110:	74 e2       	ldi	r23, 0x24	; 36
    e112:	82 e5       	ldi	r24, 0x52	; 82
    e114:	94 e1       	ldi	r25, 0x14	; 20
    e116:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e11a:	82 e5       	ldi	r24, 0x52	; 82
    e11c:	94 e1       	ldi	r25, 0x14	; 20
    e11e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    e122:	80 9a       	sbi	0x10, 0	; 16
    e124:	88 98       	cbi	0x11, 0	; 17
    e126:	68 e8       	ldi	r22, 0x88	; 136
    e128:	73 e1       	ldi	r23, 0x13	; 19
    e12a:	80 e0       	ldi	r24, 0x00	; 0
    e12c:	90 e0       	ldi	r25, 0x00	; 0
    e12e:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e132:	81 b3       	in	r24, 0x11	; 17
    e134:	8e 6f       	ori	r24, 0xFE	; 254
    e136:	81 bb       	out	0x11, r24	; 17
    e138:	80 91 49 13 	lds	r24, 0x1349	; 0x801349 <_sRuble_Parameters+0x2>
    e13c:	84 60       	ori	r24, 0x04	; 4
    e13e:	80 93 49 13 	sts	0x1349, r24	; 0x801349 <_sRuble_Parameters+0x2>
    e142:	fd da       	rcall	.-2566   	; 0xd73e <_Z16Display_Update_1v>
    e144:	68 e8       	ldi	r22, 0x88	; 136
    e146:	73 e1       	ldi	r23, 0x13	; 19
    e148:	80 e0       	ldi	r24, 0x00	; 0
    e14a:	90 e0       	ldi	r25, 0x00	; 0
    e14c:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e150:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    e154:	82 60       	ori	r24, 0x02	; 2
    e156:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sRuble_Parameters+0x1>
    e15a:	f1 da       	rcall	.-2590   	; 0xd73e <_Z16Display_Update_1v>
    e15c:	68 e8       	ldi	r22, 0x88	; 136
    e15e:	73 e1       	ldi	r23, 0x13	; 19
    e160:	80 e0       	ldi	r24, 0x00	; 0
    e162:	90 e0       	ldi	r25, 0x00	; 0
    e164:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e168:	68 e8       	ldi	r22, 0x88	; 136
    e16a:	73 e1       	ldi	r23, 0x13	; 19
    e16c:	80 e0       	ldi	r24, 0x00	; 0
    e16e:	90 e0       	ldi	r25, 0x00	; 0
    e170:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e174:	68 e8       	ldi	r22, 0x88	; 136
    e176:	73 e1       	ldi	r23, 0x13	; 19
    e178:	80 e0       	ldi	r24, 0x00	; 0
    e17a:	90 e0       	ldi	r25, 0x00	; 0
    e17c:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e180:	68 e8       	ldi	r22, 0x88	; 136
    e182:	73 e1       	ldi	r23, 0x13	; 19
    e184:	80 e0       	ldi	r24, 0x00	; 0
    e186:	90 e0       	ldi	r25, 0x00	; 0
    e188:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e18c:	68 e8       	ldi	r22, 0x88	; 136
    e18e:	73 e1       	ldi	r23, 0x13	; 19
    e190:	80 e0       	ldi	r24, 0x00	; 0
    e192:	90 e0       	ldi	r25, 0x00	; 0
    e194:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e198:	ce 01       	movw	r24, r28
    e19a:	01 96       	adiw	r24, 0x01	; 1
    e19c:	23 e0       	ldi	r18, 0x03	; 3
    e19e:	fc 01       	movw	r30, r24
    e1a0:	11 92       	st	Z+, r1
    e1a2:	2a 95       	dec	r18
    e1a4:	e9 f7       	brne	.-6      	; 0xe1a0 <_Z19Initialise_Hardwarev+0x3f6>
    e1a6:	2a e1       	ldi	r18, 0x1A	; 26
    e1a8:	29 83       	std	Y+1, r18	; 0x01
    e1aa:	01 e0       	ldi	r16, 0x01	; 1
    e1ac:	28 e8       	ldi	r18, 0x88	; 136
    e1ae:	33 e1       	ldi	r19, 0x13	; 19
    e1b0:	40 e0       	ldi	r20, 0x00	; 0
    e1b2:	50 e0       	ldi	r21, 0x00	; 0
    e1b4:	6e e1       	ldi	r22, 0x1E	; 30
    e1b6:	73 e0       	ldi	r23, 0x03	; 3
    e1b8:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    e1bc:	0e 94 77 67 	call	0xceee	; 0xceee <_Z8Gsm_Initv>
    e1c0:	20 91 37 14 	lds	r18, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e1c4:	88 23       	and	r24, r24
    e1c6:	29 f0       	breq	.+10     	; 0xe1d2 <_Z19Initialise_Hardwarev+0x428>
    e1c8:	21 30       	cpi	r18, 0x01	; 1
    e1ca:	e9 f4       	brne	.+58     	; 0xe206 <_Z19Initialise_Hardwarev+0x45c>
    e1cc:	61 e9       	ldi	r22, 0x91	; 145
    e1ce:	74 e2       	ldi	r23, 0x24	; 36
    e1d0:	12 c0       	rjmp	.+36     	; 0xe1f6 <_Z19Initialise_Hardwarev+0x44c>
    e1d2:	80 91 a1 13 	lds	r24, 0x13A1	; 0x8013a1 <_sRuble_Parameters+0x5a>
    e1d6:	81 60       	ori	r24, 0x01	; 1
    e1d8:	80 93 a1 13 	sts	0x13A1, r24	; 0x8013a1 <_sRuble_Parameters+0x5a>
    e1dc:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    e1e0:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    e1e4:	91 60       	ori	r25, 0x01	; 1
    e1e6:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    e1ea:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    e1ee:	21 30       	cpi	r18, 0x01	; 1
    e1f0:	51 f4       	brne	.+20     	; 0xe206 <_Z19Initialise_Hardwarev+0x45c>
    e1f2:	6f e7       	ldi	r22, 0x7F	; 127
    e1f4:	74 e2       	ldi	r23, 0x24	; 36
    e1f6:	82 e5       	ldi	r24, 0x52	; 82
    e1f8:	94 e1       	ldi	r25, 0x14	; 20
    e1fa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e1fe:	82 e5       	ldi	r24, 0x52	; 82
    e200:	94 e1       	ldi	r25, 0x14	; 20
    e202:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    e206:	81 e0       	ldi	r24, 0x01	; 1
    e208:	80 93 36 14 	sts	0x1436, r24	; 0x801436 <_sRuble_Parameters+0xef>
    e20c:	0f 90       	pop	r0
    e20e:	0f 90       	pop	r0
    e210:	0f 90       	pop	r0
    e212:	df 91       	pop	r29
    e214:	cf 91       	pop	r28
    e216:	1f 91       	pop	r17
    e218:	0f 91       	pop	r16
    e21a:	08 95       	ret

0000e21c <_Z14MQTT_SUBSCRIBEPc>:
	return 0;
	
}

bool MQTT_SUBSCRIBE(char topic[])
{
    e21c:	cf 92       	push	r12
    e21e:	df 92       	push	r13
    e220:	ef 92       	push	r14
    e222:	ff 92       	push	r15
    e224:	0f 93       	push	r16
    e226:	cf 93       	push	r28
    e228:	df 93       	push	r29
    e22a:	cd b7       	in	r28, 0x3d	; 61
    e22c:	de b7       	in	r29, 0x3e	; 62
    e22e:	c4 56       	subi	r28, 0x64	; 100
    e230:	d1 09       	sbc	r29, r1
    e232:	0f b6       	in	r0, 0x3f	; 63
    e234:	f8 94       	cli
    e236:	de bf       	out	0x3e, r29	; 62
    e238:	0f be       	out	0x3f, r0	; 63
    e23a:	cd bf       	out	0x3d, r28	; 61
    e23c:	7c 01       	movw	r14, r24
	char temp_data[100];
	memset(temp_data,0,sizeof(temp_data));
    e23e:	ce 01       	movw	r24, r28
    e240:	01 96       	adiw	r24, 0x01	; 1
    e242:	6c 01       	movw	r12, r24
    e244:	84 e6       	ldi	r24, 0x64	; 100
    e246:	f6 01       	movw	r30, r12
    e248:	11 92       	st	Z+, r1
    e24a:	8a 95       	dec	r24
    e24c:	e9 f7       	brne	.-6      	; 0xe248 <_Z14MQTT_SUBSCRIBEPc+0x2c>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    e24e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e252:	81 30       	cpi	r24, 0x01	; 1
    e254:	69 f4       	brne	.+26     	; 0xe270 <_Z14MQTT_SUBSCRIBEPc+0x54>
	{
		_kSERIAL_MON_WRITE(topic,strlen(topic));
    e256:	f7 01       	movw	r30, r14
    e258:	01 90       	ld	r0, Z+
    e25a:	00 20       	and	r0, r0
    e25c:	e9 f7       	brne	.-6      	; 0xe258 <_Z14MQTT_SUBSCRIBEPc+0x3c>
    e25e:	31 97       	sbiw	r30, 0x01	; 1
    e260:	af 01       	movw	r20, r30
    e262:	4e 19       	sub	r20, r14
    e264:	5f 09       	sbc	r21, r15
    e266:	b7 01       	movw	r22, r14
    e268:	82 e5       	ldi	r24, 0x52	; 82
    e26a:	94 e1       	ldi	r25, 0x14	; 20
    e26c:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
	}
	Reset_Buffer();
    e270:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
    e274:	f7 01       	movw	r30, r14
    e276:	01 90       	ld	r0, Z+
    e278:	00 20       	and	r0, r0
    e27a:	e9 f7       	brne	.-6      	; 0xe276 <_Z14MQTT_SUBSCRIBEPc+0x5a>
    e27c:	31 97       	sbiw	r30, 0x01	; 1
    e27e:	ee 19       	sub	r30, r14
    e280:	ff 09       	sbc	r31, r15
    e282:	ff 93       	push	r31
    e284:	ef 93       	push	r30
    e286:	8d ef       	ldi	r24, 0xFD	; 253
    e288:	94 e0       	ldi	r25, 0x04	; 4
    e28a:	9f 93       	push	r25
    e28c:	8f 93       	push	r24
    e28e:	df 92       	push	r13
    e290:	cf 92       	push	r12
    e292:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
    e296:	02 e0       	ldi	r16, 0x02	; 2
    e298:	28 eb       	ldi	r18, 0xB8	; 184
    e29a:	3b e0       	ldi	r19, 0x0B	; 11
    e29c:	40 e0       	ldi	r20, 0x00	; 0
    e29e:	50 e0       	ldi	r21, 0x00	; 0
    e2a0:	64 e0       	ldi	r22, 0x04	; 4
    e2a2:	74 e0       	ldi	r23, 0x04	; 4
    e2a4:	c6 01       	movw	r24, r12
    e2a6:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    e2aa:	0f 90       	pop	r0
    e2ac:	0f 90       	pop	r0
    e2ae:	0f 90       	pop	r0
    e2b0:	0f 90       	pop	r0
    e2b2:	0f 90       	pop	r0
    e2b4:	0f 90       	pop	r0
    e2b6:	81 11       	cpse	r24, r1
    e2b8:	02 c0       	rjmp	.+4      	; 0xe2be <_Z14MQTT_SUBSCRIBEPc+0xa2>
				}
				return 1;
			}
		}
	}
	return 0;
    e2ba:	80 e0       	ldi	r24, 0x00	; 0
    e2bc:	36 c0       	rjmp	.+108    	; 0xe32a <_Z14MQTT_SUBSCRIBEPc+0x10e>
	Reset_Buffer();
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
	{
		Reset_Buffer();
    e2be:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
		_kSERIAL_AT.println(topic);
    e2c2:	b7 01       	movw	r22, r14
    e2c4:	8f e0       	ldi	r24, 0x0F	; 15
    e2c6:	96 e1       	ldi	r25, 0x16	; 22
    e2c8:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
		if(_kSEND_AT_COMMAND("AT+CMQTTSUB=0,10,1,1",">",NULL,3000,2))
    e2cc:	02 e0       	ldi	r16, 0x02	; 2
    e2ce:	28 eb       	ldi	r18, 0xB8	; 184
    e2d0:	3b e0       	ldi	r19, 0x0B	; 11
    e2d2:	40 e0       	ldi	r20, 0x00	; 0
    e2d4:	50 e0       	ldi	r21, 0x00	; 0
    e2d6:	64 e0       	ldi	r22, 0x04	; 4
    e2d8:	74 e0       	ldi	r23, 0x04	; 4
    e2da:	85 e1       	ldi	r24, 0x15	; 21
    e2dc:	95 e0       	ldi	r25, 0x05	; 5
    e2de:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    e2e2:	88 23       	and	r24, r24
    e2e4:	51 f3       	breq	.-44     	; 0xe2ba <_Z14MQTT_SUBSCRIBEPc+0x9e>
		{
			Reset_Buffer();
    e2e6:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
			_kSERIAL_AT.println(topic);
    e2ea:	b7 01       	movw	r22, r14
    e2ec:	8f e0       	ldi	r24, 0x0F	; 15
    e2ee:	96 e1       	ldi	r25, 0x16	; 22
    e2f0:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
			if((_kSEND_AT_COMMAND(NULL,"+CMQTTSUB: 0,0",NULL,5000,2)))
    e2f4:	28 e8       	ldi	r18, 0x88	; 136
    e2f6:	33 e1       	ldi	r19, 0x13	; 19
    e2f8:	40 e0       	ldi	r20, 0x00	; 0
    e2fa:	50 e0       	ldi	r21, 0x00	; 0
    e2fc:	6a e2       	ldi	r22, 0x2A	; 42
    e2fe:	75 e0       	ldi	r23, 0x05	; 5
    e300:	80 e0       	ldi	r24, 0x00	; 0
    e302:	90 e0       	ldi	r25, 0x00	; 0
    e304:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    e308:	88 23       	and	r24, r24
    e30a:	b9 f2       	breq	.-82     	; 0xe2ba <_Z14MQTT_SUBSCRIBEPc+0x9e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    e30c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e310:	81 30       	cpi	r24, 0x01	; 1
    e312:	51 f4       	brne	.+20     	; 0xe328 <_Z14MQTT_SUBSCRIBEPc+0x10c>
				{
					_kSERAIL_MON_WRITE("SUB SUCCESS");
    e314:	6e e7       	ldi	r22, 0x7E	; 126
    e316:	73 e2       	ldi	r23, 0x23	; 35
    e318:	82 e5       	ldi	r24, 0x52	; 82
    e31a:	94 e1       	ldi	r25, 0x14	; 20
    e31c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    e320:	82 e5       	ldi	r24, 0x52	; 82
    e322:	94 e1       	ldi	r25, 0x14	; 20
    e324:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				}
				return 1;
    e328:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	return 0;
}
    e32a:	cc 59       	subi	r28, 0x9C	; 156
    e32c:	df 4f       	sbci	r29, 0xFF	; 255
    e32e:	0f b6       	in	r0, 0x3f	; 63
    e330:	f8 94       	cli
    e332:	de bf       	out	0x3e, r29	; 62
    e334:	0f be       	out	0x3f, r0	; 63
    e336:	cd bf       	out	0x3d, r28	; 61
    e338:	df 91       	pop	r29
    e33a:	cf 91       	pop	r28
    e33c:	0f 91       	pop	r16
    e33e:	ff 90       	pop	r15
    e340:	ef 90       	pop	r14
    e342:	df 90       	pop	r13
    e344:	cf 90       	pop	r12
    e346:	08 95       	ret

0000e348 <_Z21Subscribed_data_checkv>:
}

bool Subscribed_data_check(void)
{
	
	if(rx_complete)
    e348:	80 91 27 0c 	lds	r24, 0x0C27	; 0x800c27 <rx_complete>
    e34c:	88 23       	and	r24, r24
    e34e:	09 f4       	brne	.+2      	; 0xe352 <_Z21Subscribed_data_checkv+0xa>
    e350:	48 c0       	rjmp	.+144    	; 0xe3e2 <_Z21Subscribed_data_checkv+0x9a>
	{
		rx_complete = _kRESET;
    e352:	10 92 27 0c 	sts	0x0C27, r1	; 0x800c27 <rx_complete>
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    e356:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e35a:	81 30       	cpi	r24, 0x01	; 1
    e35c:	a9 f4       	brne	.+42     	; 0xe388 <_Z21Subscribed_data_checkv+0x40>
		{
			_kSERAIL_MON_WRITE("enter 1");
    e35e:	62 e0       	ldi	r22, 0x02	; 2
    e360:	73 e2       	ldi	r23, 0x23	; 35
    e362:	82 e5       	ldi	r24, 0x52	; 82
    e364:	94 e1       	ldi	r25, 0x14	; 20
    e366:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_WRITE((const char*)_gPub_Buff,strlen((const char*)_gPub_Buff));
    e36a:	e9 e6       	ldi	r30, 0x69	; 105
    e36c:	ff e0       	ldi	r31, 0x0F	; 15
    e36e:	01 90       	ld	r0, Z+
    e370:	00 20       	and	r0, r0
    e372:	e9 f7       	brne	.-6      	; 0xe36e <_Z21Subscribed_data_checkv+0x26>
    e374:	31 97       	sbiw	r30, 0x01	; 1
    e376:	af 01       	movw	r20, r30
    e378:	49 56       	subi	r20, 0x69	; 105
    e37a:	5f 40       	sbci	r21, 0x0F	; 15
    e37c:	69 e6       	ldi	r22, 0x69	; 105
    e37e:	7f e0       	ldi	r23, 0x0F	; 15
    e380:	82 e5       	ldi	r24, 0x52	; 82
    e382:	94 e1       	ldi	r25, 0x14	; 20
    e384:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
		}
		if(strstr((const char *)_gPub_Buff,"+CMQTTRX") && monitor_serial_start < 7)
    e388:	69 e3       	ldi	r22, 0x39	; 57
    e38a:	75 e0       	ldi	r23, 0x05	; 5
    e38c:	89 e6       	ldi	r24, 0x69	; 105
    e38e:	9f e0       	ldi	r25, 0x0F	; 15
    e390:	0e 94 45 ea 	call	0x1d48a	; 0x1d48a <strstr>
    e394:	89 2b       	or	r24, r25
    e396:	b1 f0       	breq	.+44     	; 0xe3c4 <_Z21Subscribed_data_checkv+0x7c>
    e398:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <monitor_serial_start>
    e39c:	87 30       	cpi	r24, 0x07	; 7
    e39e:	90 f4       	brcc	.+36     	; 0xe3c4 <_Z21Subscribed_data_checkv+0x7c>
		{
			monitor_serial_start = 0;
    e3a0:	10 92 23 0c 	sts	0x0C23, r1	; 0x800c23 <monitor_serial_start>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    e3a4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e3a8:	81 30       	cpi	r24, 0x01	; 1
    e3aa:	51 f4       	brne	.+20     	; 0xe3c0 <_Z21Subscribed_data_checkv+0x78>
			{
				_kSERAIL_MON_WRITE("TOPIC MATCH");
    e3ac:	66 ef       	ldi	r22, 0xF6	; 246
    e3ae:	72 e2       	ldi	r23, 0x22	; 34
    e3b0:	82 e5       	ldi	r24, 0x52	; 82
    e3b2:	94 e1       	ldi	r25, 0x14	; 20
    e3b4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    e3b8:	82 e5       	ldi	r24, 0x52	; 82
    e3ba:	94 e1       	ldi	r25, 0x14	; 20
    e3bc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			return 1;
    e3c0:	81 e0       	ldi	r24, 0x01	; 1
    e3c2:	08 95       	ret
		}
		
		memset((char*)_gPub_Buff,0,strlen((const char*)_gPub_Buff));
    e3c4:	e9 e6       	ldi	r30, 0x69	; 105
    e3c6:	ff e0       	ldi	r31, 0x0F	; 15
    e3c8:	01 90       	ld	r0, Z+
    e3ca:	00 20       	and	r0, r0
    e3cc:	e9 f7       	brne	.-6      	; 0xe3c8 <_Z21Subscribed_data_checkv+0x80>
    e3ce:	31 97       	sbiw	r30, 0x01	; 1
    e3d0:	af 01       	movw	r20, r30
    e3d2:	49 56       	subi	r20, 0x69	; 105
    e3d4:	5f 40       	sbci	r21, 0x0F	; 15
    e3d6:	60 e0       	ldi	r22, 0x00	; 0
    e3d8:	70 e0       	ldi	r23, 0x00	; 0
    e3da:	89 e6       	ldi	r24, 0x69	; 105
    e3dc:	9f e0       	ldi	r25, 0x0F	; 15
    e3de:	0e 94 2e ea 	call	0x1d45c	; 0x1d45c <memset>
	}
	
	return 0;
    e3e2:	80 e0       	ldi	r24, 0x00	; 0
			return 1;
		}
	}
	
	return 0;
}
    e3e4:	08 95       	ret

0000e3e6 <_ZNK5EERefdeEv>:
	
	if(adc_value < required_current)
	{
		_sPump_Parameter.Irrigation_Status = 1;
	}
}
    e3e6:	fc 01       	movw	r30, r24
    e3e8:	80 81       	ld	r24, Z
    e3ea:	91 81       	ldd	r25, Z+1	; 0x01
    e3ec:	0c 94 3a ed 	jmp	0x1da74	; 0x1da74 <eeprom_read_byte>

0000e3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>:
    e3f0:	0f 93       	push	r16
    e3f2:	1f 93       	push	r17
    e3f4:	cf 93       	push	r28
    e3f6:	df 93       	push	r29
    e3f8:	1f 92       	push	r1
    e3fa:	1f 92       	push	r1
    e3fc:	cd b7       	in	r28, 0x3d	; 61
    e3fe:	de b7       	in	r29, 0x3e	; 62
    e400:	8b 01       	movw	r16, r22
    e402:	9a 83       	std	Y+2, r25	; 0x02
    e404:	89 83       	std	Y+1, r24	; 0x01
    e406:	ce 01       	movw	r24, r28
    e408:	01 96       	adiw	r24, 0x01	; 1
    e40a:	ed df       	rcall	.-38     	; 0xe3e6 <_ZNK5EERefdeEv>
    e40c:	f8 01       	movw	r30, r16
    e40e:	80 83       	st	Z, r24
    e410:	c8 01       	movw	r24, r16
    e412:	0f 90       	pop	r0
    e414:	0f 90       	pop	r0
    e416:	df 91       	pop	r29
    e418:	cf 91       	pop	r28
    e41a:	1f 91       	pop	r17
    e41c:	0f 91       	pop	r16
    e41e:	08 95       	ret

0000e420 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>:
    e420:	af 92       	push	r10
    e422:	bf 92       	push	r11
    e424:	cf 92       	push	r12
    e426:	df 92       	push	r13
    e428:	ef 92       	push	r14
    e42a:	ff 92       	push	r15
    e42c:	0f 93       	push	r16
    e42e:	1f 93       	push	r17
    e430:	cf 93       	push	r28
    e432:	df 93       	push	r29
    e434:	1f 92       	push	r1
    e436:	1f 92       	push	r1
    e438:	cd b7       	in	r28, 0x3d	; 61
    e43a:	de b7       	in	r29, 0x3e	; 62
    e43c:	8b 01       	movw	r16, r22
    e43e:	6b 01       	movw	r12, r22
    e440:	24 e0       	ldi	r18, 0x04	; 4
    e442:	c2 0e       	add	r12, r18
    e444:	d1 1c       	adc	r13, r1
    e446:	7b 01       	movw	r14, r22
    e448:	5c 01       	movw	r10, r24
    e44a:	a6 1a       	sub	r10, r22
    e44c:	b7 0a       	sbc	r11, r23
    e44e:	c5 01       	movw	r24, r10
    e450:	8e 0d       	add	r24, r14
    e452:	9f 1d       	adc	r25, r15
    e454:	9a 83       	std	Y+2, r25	; 0x02
    e456:	89 83       	std	Y+1, r24	; 0x01
    e458:	ce 01       	movw	r24, r28
    e45a:	01 96       	adiw	r24, 0x01	; 1
    e45c:	c4 df       	rcall	.-120    	; 0xe3e6 <_ZNK5EERefdeEv>
    e45e:	f7 01       	movw	r30, r14
    e460:	81 93       	st	Z+, r24
    e462:	7f 01       	movw	r14, r30
    e464:	ec 15       	cp	r30, r12
    e466:	fd 05       	cpc	r31, r13
    e468:	91 f7       	brne	.-28     	; 0xe44e <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4+0x2e>
    e46a:	c8 01       	movw	r24, r16
    e46c:	0f 90       	pop	r0
    e46e:	0f 90       	pop	r0
    e470:	df 91       	pop	r29
    e472:	cf 91       	pop	r28
    e474:	1f 91       	pop	r17
    e476:	0f 91       	pop	r16
    e478:	ff 90       	pop	r15
    e47a:	ef 90       	pop	r14
    e47c:	df 90       	pop	r13
    e47e:	cf 90       	pop	r12
    e480:	bf 90       	pop	r11
    e482:	af 90       	pop	r10
    e484:	08 95       	ret

0000e486 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
    e486:	0f 93       	push	r16
    e488:	1f 93       	push	r17
    e48a:	cf 93       	push	r28
    e48c:	df 93       	push	r29
    e48e:	1f 92       	push	r1
    e490:	1f 92       	push	r1
    e492:	cd b7       	in	r28, 0x3d	; 61
    e494:	de b7       	in	r29, 0x3e	; 62
    e496:	8b 01       	movw	r16, r22
    e498:	fb 01       	movw	r30, r22
    e49a:	60 81       	ld	r22, Z
    e49c:	9a 83       	std	Y+2, r25	; 0x02
    e49e:	89 83       	std	Y+1, r24	; 0x01
    e4a0:	ce 01       	movw	r24, r28
    e4a2:	01 96       	adiw	r24, 0x01	; 1
    e4a4:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
    e4a8:	c8 01       	movw	r24, r16
    e4aa:	0f 90       	pop	r0
    e4ac:	0f 90       	pop	r0
    e4ae:	df 91       	pop	r29
    e4b0:	cf 91       	pop	r28
    e4b2:	1f 91       	pop	r17
    e4b4:	0f 91       	pop	r16
    e4b6:	08 95       	ret

0000e4b8 <_Z11Check_Phasev>:
    e4b8:	cf 93       	push	r28
    e4ba:	87 e3       	ldi	r24, 0x37	; 55
    e4bc:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    e4c0:	89 2b       	or	r24, r25
    e4c2:	69 f0       	breq	.+26     	; 0xe4de <_Z11Check_Phasev+0x26>
    e4c4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e4c8:	81 30       	cpi	r24, 0x01	; 1
    e4ca:	31 f4       	brne	.+12     	; 0xe4d8 <_Z11Check_Phasev+0x20>
    e4cc:	65 ed       	ldi	r22, 0xD5	; 213
    e4ce:	75 e2       	ldi	r23, 0x25	; 37
    e4d0:	82 e5       	ldi	r24, 0x52	; 82
    e4d2:	94 e1       	ldi	r25, 0x14	; 20
    e4d4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e4d8:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_gTimer_For_Three_Phase_Testing>
    e4dc:	2f c0       	rjmp	.+94     	; 0xe53c <_Z11Check_Phasev+0x84>
    e4de:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <_gTimer_For_Three_Phase_Testing>
    e4e2:	8d 33       	cpi	r24, 0x3D	; 61
    e4e4:	38 f0       	brcs	.+14     	; 0xe4f4 <_Z11Check_Phasev+0x3c>
    e4e6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e4ea:	81 30       	cpi	r24, 0x01	; 1
    e4ec:	f9 f4       	brne	.+62     	; 0xe52c <_Z11Check_Phasev+0x74>
    e4ee:	65 ec       	ldi	r22, 0xC5	; 197
    e4f0:	75 e2       	ldi	r23, 0x25	; 37
    e4f2:	18 c0       	rjmp	.+48     	; 0xe524 <_Z11Check_Phasev+0x6c>
    e4f4:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_gStart_Monitoring_Three_Phase>
    e4f8:	8d 33       	cpi	r24, 0x3D	; 61
    e4fa:	d0 f4       	brcc	.+52     	; 0xe530 <_Z11Check_Phasev+0x78>
    e4fc:	87 e3       	ldi	r24, 0x37	; 55
    e4fe:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    e502:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    e506:	89 2b       	or	r24, r25
    e508:	49 f0       	breq	.+18     	; 0xe51c <_Z11Check_Phasev+0x64>
    e50a:	c1 30       	cpi	r28, 0x01	; 1
    e50c:	b9 f4       	brne	.+46     	; 0xe53c <_Z11Check_Phasev+0x84>
    e50e:	6f ea       	ldi	r22, 0xAF	; 175
    e510:	75 e2       	ldi	r23, 0x25	; 37
    e512:	82 e5       	ldi	r24, 0x52	; 82
    e514:	94 e1       	ldi	r25, 0x14	; 20
    e516:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e51a:	11 c0       	rjmp	.+34     	; 0xe53e <_Z11Check_Phasev+0x86>
    e51c:	c1 30       	cpi	r28, 0x01	; 1
    e51e:	31 f4       	brne	.+12     	; 0xe52c <_Z11Check_Phasev+0x74>
    e520:	6d e9       	ldi	r22, 0x9D	; 157
    e522:	75 e2       	ldi	r23, 0x25	; 37
    e524:	82 e5       	ldi	r24, 0x52	; 82
    e526:	94 e1       	ldi	r25, 0x14	; 20
    e528:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e52c:	c0 e0       	ldi	r28, 0x00	; 0
    e52e:	07 c0       	rjmp	.+14     	; 0xe53e <_Z11Check_Phasev+0x86>
    e530:	6b e8       	ldi	r22, 0x8B	; 139
    e532:	75 e2       	ldi	r23, 0x25	; 37
    e534:	82 e5       	ldi	r24, 0x52	; 82
    e536:	94 e1       	ldi	r25, 0x14	; 20
    e538:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e53c:	c1 e0       	ldi	r28, 0x01	; 1
    e53e:	8c 2f       	mov	r24, r28
    e540:	cf 91       	pop	r28
    e542:	08 95       	ret

0000e544 <_Z9Check_Simc>:
    e544:	0f 93       	push	r16
    e546:	cf 93       	push	r28
    e548:	df 93       	push	r29
    e54a:	1f 92       	push	r1
    e54c:	1f 92       	push	r1
    e54e:	cd b7       	in	r28, 0x3d	; 61
    e550:	de b7       	in	r29, 0x3e	; 62
    e552:	90 91 8d 0c 	lds	r25, 0x0C8D	; 0x800c8d <_ZZ9Check_SimcE7counter>
    e556:	9f 5f       	subi	r25, 0xFF	; 255
    e558:	90 93 8d 0c 	sts	0x0C8D, r25	; 0x800c8d <_ZZ9Check_SimcE7counter>
    e55c:	83 30       	cpi	r24, 0x03	; 3
    e55e:	09 f0       	breq	.+2      	; 0xe562 <_Z9Check_Simc+0x1e>
    e560:	62 c0       	rjmp	.+196    	; 0xe626 <_Z9Check_Simc+0xe2>
    e562:	80 91 f6 13 	lds	r24, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xaf>
    e566:	81 30       	cpi	r24, 0x01	; 1
    e568:	d1 f5       	brne	.+116    	; 0xe5de <_Z9Check_Simc+0x9a>
    e56a:	80 91 47 13 	lds	r24, 0x1347	; 0x801347 <_sRuble_Parameters>
    e56e:	80 7f       	andi	r24, 0xF0	; 240
    e570:	80 93 47 13 	sts	0x1347, r24	; 0x801347 <_sRuble_Parameters>
    e574:	1a 82       	std	Y+2, r1	; 0x02
    e576:	19 82       	std	Y+1, r1	; 0x01
    e578:	8a e1       	ldi	r24, 0x1A	; 26
    e57a:	89 83       	std	Y+1, r24	; 0x01
    e57c:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
    e580:	be 01       	movw	r22, r28
    e582:	6f 5f       	subi	r22, 0xFF	; 255
    e584:	7f 4f       	sbci	r23, 0xFF	; 255
    e586:	8f e0       	ldi	r24, 0x0F	; 15
    e588:	96 e1       	ldi	r25, 0x16	; 22
    e58a:	0e 94 bd d1 	call	0x1a37a	; 0x1a37a <_ZN5Print7printlnEPKc>
    e58e:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
    e592:	6f e7       	ldi	r22, 0x7F	; 127
    e594:	75 e2       	ldi	r23, 0x25	; 37
    e596:	8f e0       	ldi	r24, 0x0F	; 15
    e598:	96 e1       	ldi	r25, 0x16	; 22
    e59a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e59e:	01 e0       	ldi	r16, 0x01	; 1
    e5a0:	20 e1       	ldi	r18, 0x10	; 16
    e5a2:	37 e2       	ldi	r19, 0x27	; 39
    e5a4:	40 e0       	ldi	r20, 0x00	; 0
    e5a6:	50 e0       	ldi	r21, 0x00	; 0
    e5a8:	6e e1       	ldi	r22, 0x1E	; 30
    e5aa:	73 e0       	ldi	r23, 0x03	; 3
    e5ac:	80 e0       	ldi	r24, 0x00	; 0
    e5ae:	90 e0       	ldi	r25, 0x00	; 0
    e5b0:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    e5b4:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
    e5b8:	6a e7       	ldi	r22, 0x7A	; 122
    e5ba:	75 e2       	ldi	r23, 0x25	; 37
    e5bc:	8f e0       	ldi	r24, 0x0F	; 15
    e5be:	96 e1       	ldi	r25, 0x16	; 22
    e5c0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e5c4:	02 e0       	ldi	r16, 0x02	; 2
    e5c6:	28 eb       	ldi	r18, 0xB8	; 184
    e5c8:	3b e0       	ldi	r19, 0x0B	; 11
    e5ca:	40 e0       	ldi	r20, 0x00	; 0
    e5cc:	50 e0       	ldi	r21, 0x00	; 0
    e5ce:	6e e1       	ldi	r22, 0x1E	; 30
    e5d0:	73 e0       	ldi	r23, 0x03	; 3
    e5d2:	80 e0       	ldi	r24, 0x00	; 0
    e5d4:	90 e0       	ldi	r25, 0x00	; 0
    e5d6:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    e5da:	0e 94 77 67 	call	0xceee	; 0xceee <_Z8Gsm_Initv>
    e5de:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
    e5e2:	61 e7       	ldi	r22, 0x71	; 113
    e5e4:	75 e2       	ldi	r23, 0x25	; 37
    e5e6:	8f e0       	ldi	r24, 0x0F	; 15
    e5e8:	96 e1       	ldi	r25, 0x16	; 22
    e5ea:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e5ee:	02 e0       	ldi	r16, 0x02	; 2
    e5f0:	20 ed       	ldi	r18, 0xD0	; 208
    e5f2:	37 e0       	ldi	r19, 0x07	; 7
    e5f4:	40 e0       	ldi	r20, 0x00	; 0
    e5f6:	50 e0       	ldi	r21, 0x00	; 0
    e5f8:	6e e1       	ldi	r22, 0x1E	; 30
    e5fa:	73 e0       	ldi	r23, 0x03	; 3
    e5fc:	80 e0       	ldi	r24, 0x00	; 0
    e5fe:	90 e0       	ldi	r25, 0x00	; 0
    e600:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    e604:	81 11       	cpse	r24, r1
    e606:	0a c0       	rjmp	.+20     	; 0xe61c <_Z9Check_Simc+0xd8>
    e608:	80 91 47 13 	lds	r24, 0x1347	; 0x801347 <_sRuble_Parameters>
    e60c:	80 7f       	andi	r24, 0xF0	; 240
    e60e:	80 93 47 13 	sts	0x1347, r24	; 0x801347 <_sRuble_Parameters>
    e612:	81 e0       	ldi	r24, 0x01	; 1
    e614:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0xaf>
    e618:	80 e0       	ldi	r24, 0x00	; 0
    e61a:	05 c0       	rjmp	.+10     	; 0xe626 <_Z9Check_Simc+0xe2>
    e61c:	82 e0       	ldi	r24, 0x02	; 2
    e61e:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0xaf>
    e622:	81 e0       	ldi	r24, 0x01	; 1
    e624:	00 c0       	rjmp	.+0      	; 0xe626 <_Z9Check_Simc+0xe2>
    e626:	0f 90       	pop	r0
    e628:	0f 90       	pop	r0
    e62a:	df 91       	pop	r29
    e62c:	cf 91       	pop	r28
    e62e:	0f 91       	pop	r16
    e630:	08 95       	ret

0000e632 <_Z31Keeps_Monitor_Server_Connectionv>:
    e632:	84 e6       	ldi	r24, 0x64	; 100
    e634:	80 93 8c 0c 	sts	0x0C8C, r24	; 0x800c8c <_ZZ31Keeps_Monitor_Server_ConnectionvE14ping_req_timer>
    e638:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0xac>
    e63c:	81 11       	cpse	r24, r1
    e63e:	40 c0       	rjmp	.+128    	; 0xe6c0 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
    e640:	80 91 8b 0c 	lds	r24, 0x0C8B	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e644:	85 36       	cpi	r24, 0x65	; 101
    e646:	a8 f1       	brcs	.+106    	; 0xe6b2 <_Z31Keeps_Monitor_Server_Connectionv+0x80>
    e648:	10 92 8b 0c 	sts	0x0C8B, r1	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e64c:	0e 94 c5 6a 	call	0xd58a	; 0xd58a <_Z9MQTT_Loopv>
    e650:	81 11       	cpse	r24, r1
    e652:	32 c0       	rjmp	.+100    	; 0xe6b8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e654:	82 e0       	ldi	r24, 0x02	; 2
    e656:	80 93 a4 13 	sts	0x13A4, r24	; 0x8013a4 <_sRuble_Parameters+0x5d>
    e65a:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    e65e:	8b 7f       	andi	r24, 0xFB	; 251
    e660:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
    e664:	80 91 8a 0c 	lds	r24, 0x0C8A	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e668:	83 30       	cpi	r24, 0x03	; 3
    e66a:	78 f4       	brcc	.+30     	; 0xe68a <_Z31Keeps_Monitor_Server_Connectionv+0x58>
    e66c:	10 92 f3 13 	sts	0x13F3, r1	; 0x8013f3 <_sRuble_Parameters+0xac>
    e670:	0e 94 95 7f 	call	0xff2a	; 0xff2a <_Z14Ping_to_Serverv>
    e674:	81 11       	cpse	r24, r1
    e676:	06 c0       	rjmp	.+12     	; 0xe684 <_Z31Keeps_Monitor_Server_Connectionv+0x52>
    e678:	80 91 8a 0c 	lds	r24, 0x0C8A	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e67c:	8f 5f       	subi	r24, 0xFF	; 255
    e67e:	80 93 8a 0c 	sts	0x0C8A, r24	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e682:	1a c0       	rjmp	.+52     	; 0xe6b8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e684:	10 92 8a 0c 	sts	0x0C8A, r1	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e688:	17 c0       	rjmp	.+46     	; 0xe6b8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e68a:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0xac>
    e68e:	81 30       	cpi	r24, 0x01	; 1
    e690:	b9 f0       	breq	.+46     	; 0xe6c0 <_Z31Keeps_Monitor_Server_Connectionv+0x8e>
    e692:	81 e0       	ldi	r24, 0x01	; 1
    e694:	80 93 f3 13 	sts	0x13F3, r24	; 0x8013f3 <_sRuble_Parameters+0xac>
    e698:	8e e1       	ldi	r24, 0x1E	; 30
    e69a:	90 e0       	ldi	r25, 0x00	; 0
    e69c:	a0 e0       	ldi	r26, 0x00	; 0
    e69e:	b0 e0       	ldi	r27, 0x00	; 0
    e6a0:	80 93 86 0c 	sts	0x0C86, r24	; 0x800c86 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e6a4:	90 93 87 0c 	sts	0x0C87, r25	; 0x800c87 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e6a8:	a0 93 88 0c 	sts	0x0C88, r26	; 0x800c88 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e6ac:	b0 93 89 0c 	sts	0x0C89, r27	; 0x800c89 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e6b0:	03 c0       	rjmp	.+6      	; 0xe6b8 <_Z31Keeps_Monitor_Server_Connectionv+0x86>
    e6b2:	8f 5f       	subi	r24, 0xFF	; 255
    e6b4:	80 93 8b 0c 	sts	0x0C8B, r24	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e6b8:	80 91 f3 13 	lds	r24, 0x13F3	; 0x8013f3 <_sRuble_Parameters+0xac>
    e6bc:	88 23       	and	r24, r24
    e6be:	e1 f0       	breq	.+56     	; 0xe6f8 <_Z31Keeps_Monitor_Server_Connectionv+0xc6>
    e6c0:	80 91 86 0c 	lds	r24, 0x0C86	; 0x800c86 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e6c4:	90 91 87 0c 	lds	r25, 0x0C87	; 0x800c87 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e6c8:	a0 91 88 0c 	lds	r26, 0x0C88	; 0x800c88 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e6cc:	b0 91 89 0c 	lds	r27, 0x0C89	; 0x800c89 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e6d0:	00 97       	sbiw	r24, 0x00	; 0
    e6d2:	a1 05       	cpc	r26, r1
    e6d4:	b1 05       	cpc	r27, r1
    e6d6:	61 f0       	breq	.+24     	; 0xe6f0 <_Z31Keeps_Monitor_Server_Connectionv+0xbe>
    e6d8:	01 97       	sbiw	r24, 0x01	; 1
    e6da:	a1 09       	sbc	r26, r1
    e6dc:	b1 09       	sbc	r27, r1
    e6de:	80 93 86 0c 	sts	0x0C86, r24	; 0x800c86 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e6e2:	90 93 87 0c 	sts	0x0C87, r25	; 0x800c87 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e6e6:	a0 93 88 0c 	sts	0x0C88, r26	; 0x800c88 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e6ea:	b0 93 89 0c 	sts	0x0C89, r27	; 0x800c89 <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e6ee:	08 95       	ret
    e6f0:	10 92 f3 13 	sts	0x13F3, r1	; 0x8013f3 <_sRuble_Parameters+0xac>
    e6f4:	10 92 8a 0c 	sts	0x0C8A, r1	; 0x800c8a <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e6f8:	08 95       	ret

0000e6fa <_Z19Pump_Run_Monitoringv>:
    e6fa:	cf 92       	push	r12
    e6fc:	df 92       	push	r13
    e6fe:	ef 92       	push	r14
    e700:	ff 92       	push	r15
    e702:	cf 93       	push	r28
    e704:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
    e708:	81 11       	cpse	r24, r1
    e70a:	50 c0       	rjmp	.+160    	; 0xe7ac <_Z19Pump_Run_Monitoringv+0xb2>
    e70c:	c0 91 04 14 	lds	r28, 0x1404	; 0x801404 <_sRuble_Parameters+0xbd>
    e710:	c1 30       	cpi	r28, 0x01	; 1
    e712:	09 f0       	breq	.+2      	; 0xe716 <_Z19Pump_Run_Monitoringv+0x1c>
    e714:	42 c0       	rjmp	.+132    	; 0xe79a <_Z19Pump_Run_Monitoringv+0xa0>
    e716:	c0 90 3d 13 	lds	r12, 0x133D	; 0x80133d <_sPump_Parameter>
    e71a:	d0 90 3e 13 	lds	r13, 0x133E	; 0x80133e <_sPump_Parameter+0x1>
    e71e:	e0 90 3f 13 	lds	r14, 0x133F	; 0x80133f <_sPump_Parameter+0x2>
    e722:	f0 90 40 13 	lds	r15, 0x1340	; 0x801340 <_sPump_Parameter+0x3>
    e726:	20 e0       	ldi	r18, 0x00	; 0
    e728:	30 e0       	ldi	r19, 0x00	; 0
    e72a:	48 ec       	ldi	r20, 0xC8	; 200
    e72c:	52 e4       	ldi	r21, 0x42	; 66
    e72e:	c7 01       	movw	r24, r14
    e730:	b6 01       	movw	r22, r12
    e732:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
    e736:	20 e0       	ldi	r18, 0x00	; 0
    e738:	30 e0       	ldi	r19, 0x00	; 0
    e73a:	44 eb       	ldi	r20, 0xB4	; 180
    e73c:	52 e4       	ldi	r21, 0x42	; 66
    e73e:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    e742:	9b 01       	movw	r18, r22
    e744:	ac 01       	movw	r20, r24
    e746:	c7 01       	movw	r24, r14
    e748:	b6 01       	movw	r22, r12
    e74a:	0e 94 4d cd 	call	0x19a9a	; 0x19a9a <__subsf3>
    e74e:	9b 01       	movw	r18, r22
    e750:	ac 01       	movw	r20, r24
    e752:	60 91 41 13 	lds	r22, 0x1341	; 0x801341 <_sPump_Parameter+0x4>
    e756:	70 91 42 13 	lds	r23, 0x1342	; 0x801342 <_sPump_Parameter+0x5>
    e75a:	80 91 43 13 	lds	r24, 0x1343	; 0x801343 <_sPump_Parameter+0x6>
    e75e:	90 91 44 13 	lds	r25, 0x1344	; 0x801344 <_sPump_Parameter+0x7>
    e762:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
    e766:	18 16       	cp	r1, r24
    e768:	24 f4       	brge	.+8      	; 0xe772 <_Z19Pump_Run_Monitoringv+0x78>
    e76a:	c0 93 2c 14 	sts	0x142C, r28	; 0x80142c <_sRuble_Parameters+0xe5>
    e76e:	82 e0       	ldi	r24, 0x02	; 2
    e770:	03 c0       	rjmp	.+6      	; 0xe778 <_Z19Pump_Run_Monitoringv+0x7e>
    e772:	10 92 2c 14 	sts	0x142C, r1	; 0x80142c <_sRuble_Parameters+0xe5>
    e776:	84 e0       	ldi	r24, 0x04	; 4
    e778:	80 93 4f 13 	sts	0x134F, r24	; 0x80134f <_sRuble_Parameters+0x8>
    e77c:	10 92 50 13 	sts	0x1350, r1	; 0x801350 <_sRuble_Parameters+0x9>
    e780:	10 92 51 13 	sts	0x1351, r1	; 0x801351 <_sRuble_Parameters+0xa>
    e784:	10 92 52 13 	sts	0x1352, r1	; 0x801352 <_sRuble_Parameters+0xb>
    e788:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0xc>
    e78c:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xd>
    e790:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xe>
    e794:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xf>
    e798:	20 c0       	rjmp	.+64     	; 0xe7da <_Z19Pump_Run_Monitoringv+0xe0>
    e79a:	8a e0       	ldi	r24, 0x0A	; 10
    e79c:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    e7a0:	89 2b       	or	r24, r25
    e7a2:	41 f4       	brne	.+16     	; 0xe7b4 <_Z19Pump_Run_Monitoringv+0xba>
    e7a4:	81 e0       	ldi	r24, 0x01	; 1
    e7a6:	80 93 2c 14 	sts	0x142C, r24	; 0x80142c <_sRuble_Parameters+0xe5>
    e7aa:	17 c0       	rjmp	.+46     	; 0xe7da <_Z19Pump_Run_Monitoringv+0xe0>
    e7ac:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xc0>
    e7b0:	81 30       	cpi	r24, 0x01	; 1
    e7b2:	19 f0       	breq	.+6      	; 0xe7ba <_Z19Pump_Run_Monitoringv+0xc0>
    e7b4:	10 92 2c 14 	sts	0x142C, r1	; 0x80142c <_sRuble_Parameters+0xe5>
    e7b8:	10 c0       	rjmp	.+32     	; 0xe7da <_Z19Pump_Run_Monitoringv+0xe0>
    e7ba:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    e7be:	90 e0       	ldi	r25, 0x00	; 0
    e7c0:	02 97       	sbiw	r24, 0x02	; 2
    e7c2:	2b e0       	ldi	r18, 0x0B	; 11
    e7c4:	28 9f       	mul	r18, r24
    e7c6:	f0 01       	movw	r30, r0
    e7c8:	29 9f       	mul	r18, r25
    e7ca:	f0 0d       	add	r31, r0
    e7cc:	11 24       	eor	r1, r1
    e7ce:	ea 56       	subi	r30, 0x6A	; 106
    e7d0:	f4 4f       	sbci	r31, 0xF4	; 244
    e7d2:	80 85       	ldd	r24, Z+8	; 0x08
    e7d4:	86 ff       	sbrs	r24, 6
    e7d6:	ee cf       	rjmp	.-36     	; 0xe7b4 <_Z19Pump_Run_Monitoringv+0xba>
    e7d8:	e5 cf       	rjmp	.-54     	; 0xe7a4 <_Z19Pump_Run_Monitoringv+0xaa>
    e7da:	cf 91       	pop	r28
    e7dc:	ff 90       	pop	r15
    e7de:	ef 90       	pop	r14
    e7e0:	df 90       	pop	r13
    e7e2:	cf 90       	pop	r12
    e7e4:	08 95       	ret

0000e7e6 <_Z11Debug_Checkv>:
    e7e6:	88 e3       	ldi	r24, 0x38	; 56
    e7e8:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    e7ec:	89 2b       	or	r24, r25
    e7ee:	21 f0       	breq	.+8      	; 0xe7f8 <_Z11Debug_Checkv+0x12>
    e7f0:	10 92 37 14 	sts	0x1437, r1	; 0x801437 <_sRuble_Parameters+0xf0>
    e7f4:	81 e0       	ldi	r24, 0x01	; 1
    e7f6:	08 95       	ret
    e7f8:	81 e0       	ldi	r24, 0x01	; 1
    e7fa:	80 93 37 14 	sts	0x1437, r24	; 0x801437 <_sRuble_Parameters+0xf0>
    e7fe:	80 e0       	ldi	r24, 0x00	; 0
    e800:	08 95       	ret

0000e802 <_Z8My_Delayj>:
    e802:	ef 92       	push	r14
    e804:	ff 92       	push	r15
    e806:	0f 93       	push	r16
    e808:	1f 93       	push	r17
    e80a:	cf 93       	push	r28
    e80c:	68 ee       	ldi	r22, 0xE8	; 232
    e80e:	73 e0       	ldi	r23, 0x03	; 3
    e810:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
    e814:	8b 01       	movw	r16, r22
    e816:	c0 e0       	ldi	r28, 0x00	; 0
    e818:	89 e6       	ldi	r24, 0x69	; 105
    e81a:	e8 2e       	mov	r14, r24
    e81c:	8f e0       	ldi	r24, 0x0F	; 15
    e81e:	f8 2e       	mov	r15, r24
    e820:	8c 2f       	mov	r24, r28
    e822:	90 e0       	ldi	r25, 0x00	; 0
    e824:	80 17       	cp	r24, r16
    e826:	91 07       	cpc	r25, r17
    e828:	f0 f4       	brcc	.+60     	; 0xe866 <_Z8My_Delayj+0x64>
    e82a:	68 ee       	ldi	r22, 0xE8	; 232
    e82c:	73 e0       	ldi	r23, 0x03	; 3
    e82e:	80 e0       	ldi	r24, 0x00	; 0
    e830:	90 e0       	ldi	r25, 0x00	; 0
    e832:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
    e836:	88 dd       	rcall	.-1264   	; 0xe348 <_Z21Subscribed_data_checkv>
    e838:	88 23       	and	r24, r24
    e83a:	99 f0       	breq	.+38     	; 0xe862 <_Z8My_Delayj+0x60>
    e83c:	0e 94 9c 64 	call	0xc938	; 0xc938 <_Z21Seperate_Out_Sub_Datav>
    e840:	88 23       	and	r24, r24
    e842:	79 f0       	breq	.+30     	; 0xe862 <_Z8My_Delayj+0x60>
    e844:	f7 01       	movw	r30, r14
    e846:	01 90       	ld	r0, Z+
    e848:	00 20       	and	r0, r0
    e84a:	e9 f7       	brne	.-6      	; 0xe846 <_Z8My_Delayj+0x44>
    e84c:	31 97       	sbiw	r30, 0x01	; 1
    e84e:	af 01       	movw	r20, r30
    e850:	49 56       	subi	r20, 0x69	; 105
    e852:	5f 40       	sbci	r21, 0x0F	; 15
    e854:	21 e0       	ldi	r18, 0x01	; 1
    e856:	69 e6       	ldi	r22, 0x69	; 105
    e858:	7f e0       	ldi	r23, 0x0F	; 15
    e85a:	8b ef       	ldi	r24, 0xFB	; 251
    e85c:	9e e0       	ldi	r25, 0x0E	; 14
    e85e:	0e 94 f2 91 	call	0x123e4	; 0x123e4 <_Z12Pub_Sub_DataPcPhjh>
    e862:	cf 5f       	subi	r28, 0xFF	; 255
    e864:	dd cf       	rjmp	.-70     	; 0xe820 <_Z8My_Delayj+0x1e>
    e866:	cf 91       	pop	r28
    e868:	1f 91       	pop	r17
    e86a:	0f 91       	pop	r16
    e86c:	ff 90       	pop	r15
    e86e:	ef 90       	pop	r14
    e870:	08 95       	ret

0000e872 <_Z19Calibration_Of_Pumpv>:
    e872:	2f 92       	push	r2
    e874:	3f 92       	push	r3
    e876:	4f 92       	push	r4
    e878:	5f 92       	push	r5
    e87a:	6f 92       	push	r6
    e87c:	7f 92       	push	r7
    e87e:	8f 92       	push	r8
    e880:	9f 92       	push	r9
    e882:	af 92       	push	r10
    e884:	bf 92       	push	r11
    e886:	cf 92       	push	r12
    e888:	df 92       	push	r13
    e88a:	ef 92       	push	r14
    e88c:	ff 92       	push	r15
    e88e:	0f 93       	push	r16
    e890:	1f 93       	push	r17
    e892:	cf 93       	push	r28
    e894:	df 93       	push	r29
    e896:	cd b7       	in	r28, 0x3d	; 61
    e898:	de b7       	in	r29, 0x3e	; 62
    e89a:	c8 56       	subi	r28, 0x68	; 104
    e89c:	d1 09       	sbc	r29, r1
    e89e:	0f b6       	in	r0, 0x3f	; 63
    e8a0:	f8 94       	cli
    e8a2:	de bf       	out	0x3e, r29	; 62
    e8a4:	0f be       	out	0x3f, r0	; 63
    e8a6:	cd bf       	out	0x3d, r28	; 61
    e8a8:	60 91 f2 13 	lds	r22, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0xab>
    e8ac:	61 30       	cpi	r22, 0x01	; 1
    e8ae:	09 f0       	breq	.+2      	; 0xe8b2 <_Z19Calibration_Of_Pumpv+0x40>
    e8b0:	e3 c0       	rjmp	.+454    	; 0xea78 <_Z19Calibration_Of_Pumpv+0x206>
    e8b2:	10 92 f2 13 	sts	0x13F2, r1	; 0x8013f2 <_sRuble_Parameters+0xab>
    e8b6:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    e8ba:	62 30       	cpi	r22, 0x02	; 2
    e8bc:	c0 f1       	brcs	.+112    	; 0xe92e <_Z19Calibration_Of_Pumpv+0xbc>
    e8be:	8e 01       	movw	r16, r28
    e8c0:	07 5d       	subi	r16, 0xD7	; 215
    e8c2:	1f 4f       	sbci	r17, 0xFF	; 255
    e8c4:	88 e2       	ldi	r24, 0x28	; 40
    e8c6:	f8 01       	movw	r30, r16
    e8c8:	11 92       	st	Z+, r1
    e8ca:	8a 95       	dec	r24
    e8cc:	e9 f7       	brne	.-6      	; 0xe8c8 <_Z19Calibration_Of_Pumpv+0x56>
    e8ce:	62 50       	subi	r22, 0x02	; 2
    e8d0:	81 e0       	ldi	r24, 0x01	; 1
    e8d2:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
    e8d6:	88 23       	and	r24, r24
    e8d8:	19 f0       	breq	.+6      	; 0xe8e0 <_Z19Calibration_Of_Pumpv+0x6e>
    e8da:	62 e4       	ldi	r22, 0x42	; 66
    e8dc:	75 e0       	ldi	r23, 0x05	; 5
    e8de:	02 c0       	rjmp	.+4      	; 0xe8e4 <_Z19Calibration_Of_Pumpv+0x72>
    e8e0:	66 e5       	ldi	r22, 0x56	; 86
    e8e2:	75 e0       	ldi	r23, 0x05	; 5
    e8e4:	c8 01       	movw	r24, r16
    e8e6:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    e8ea:	9e 01       	movw	r18, r28
    e8ec:	2f 5f       	subi	r18, 0xFF	; 255
    e8ee:	3f 4f       	sbci	r19, 0xFF	; 255
    e8f0:	79 01       	movw	r14, r18
    e8f2:	88 e2       	ldi	r24, 0x28	; 40
    e8f4:	f9 01       	movw	r30, r18
    e8f6:	11 92       	st	Z+, r1
    e8f8:	8a 95       	dec	r24
    e8fa:	e9 f7       	brne	.-6      	; 0xe8f6 <_Z19Calibration_Of_Pumpv+0x84>
    e8fc:	87 e6       	ldi	r24, 0x67	; 103
    e8fe:	93 e1       	ldi	r25, 0x13	; 19
    e900:	9f 93       	push	r25
    e902:	8f 93       	push	r24
    e904:	8b e6       	ldi	r24, 0x6B	; 107
    e906:	95 e0       	ldi	r25, 0x05	; 5
    e908:	9f 93       	push	r25
    e90a:	8f 93       	push	r24
    e90c:	3f 93       	push	r19
    e90e:	2f 93       	push	r18
    e910:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    e914:	b8 01       	movw	r22, r16
    e916:	c7 01       	movw	r24, r14
    e918:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
    e91c:	81 e0       	ldi	r24, 0x01	; 1
    e91e:	90 e0       	ldi	r25, 0x00	; 0
    e920:	0f 90       	pop	r0
    e922:	0f 90       	pop	r0
    e924:	0f 90       	pop	r0
    e926:	0f 90       	pop	r0
    e928:	0f 90       	pop	r0
    e92a:	0f 90       	pop	r0
    e92c:	51 c1       	rjmp	.+674    	; 0xebd0 <_Z19Calibration_Of_Pumpv+0x35e>
    e92e:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    e932:	a9 96       	adiw	r28, 0x29	; 41
    e934:	6c af       	std	Y+60, r22	; 0x3c
    e936:	7d af       	std	Y+61, r23	; 0x3d
    e938:	8e af       	std	Y+62, r24	; 0x3e
    e93a:	9f af       	std	Y+63, r25	; 0x3f
    e93c:	a9 97       	sbiw	r28, 0x29	; 41
    e93e:	8e 01       	movw	r16, r28
    e940:	0f 5a       	subi	r16, 0xAF	; 175
    e942:	1f 4f       	sbci	r17, 0xFF	; 255
    e944:	78 01       	movw	r14, r16
    e946:	f4 e1       	ldi	r31, 0x14	; 20
    e948:	ef 0e       	add	r14, r31
    e94a:	f1 1c       	adc	r15, r1
    e94c:	68 01       	movw	r12, r16
    e94e:	18 01       	movw	r2, r16
    e950:	68 ec       	ldi	r22, 0xC8	; 200
    e952:	75 e0       	ldi	r23, 0x05	; 5
    e954:	81 ea       	ldi	r24, 0xA1	; 161
    e956:	9c e0       	ldi	r25, 0x0C	; 12
    e958:	0e 94 da d5 	call	0x1abb4	; 0x1abb4 <_ZN13EnergyMonitor8calcIrmsEj>
    e95c:	f6 01       	movw	r30, r12
    e95e:	61 93       	st	Z+, r22
    e960:	71 93       	st	Z+, r23
    e962:	81 93       	st	Z+, r24
    e964:	91 93       	st	Z+, r25
    e966:	6f 01       	movw	r12, r30
    e968:	ee 15       	cp	r30, r14
    e96a:	ff 05       	cpc	r31, r15
    e96c:	89 f7       	brne	.-30     	; 0xe950 <_Z19Calibration_Of_Pumpv+0xde>
    e96e:	e1 2c       	mov	r14, r1
    e970:	e3 94       	inc	r14
    e972:	fe 2c       	mov	r15, r14
    e974:	25 e0       	ldi	r18, 0x05	; 5
    e976:	f2 12       	cpse	r15, r18
    e978:	06 c0       	rjmp	.+12     	; 0xe986 <_Z19Calibration_Of_Pumpv+0x114>
    e97a:	0c 5f       	subi	r16, 0xFC	; 252
    e97c:	1f 4f       	sbci	r17, 0xFF	; 255
    e97e:	f5 e0       	ldi	r31, 0x05	; 5
    e980:	ef 12       	cpse	r14, r31
    e982:	f6 cf       	rjmp	.-20     	; 0xe970 <_Z19Calibration_Of_Pumpv+0xfe>
    e984:	24 c0       	rjmp	.+72     	; 0xe9ce <_Z19Calibration_Of_Pumpv+0x15c>
    e986:	f8 01       	movw	r30, r16
    e988:	40 80       	ld	r4, Z
    e98a:	51 80       	ldd	r5, Z+1	; 0x01
    e98c:	62 80       	ldd	r6, Z+2	; 0x02
    e98e:	73 80       	ldd	r7, Z+3	; 0x03
    e990:	61 01       	movw	r12, r2
    e992:	f4 e0       	ldi	r31, 0x04	; 4
    e994:	ff 9e       	mul	r15, r31
    e996:	c0 0c       	add	r12, r0
    e998:	d1 1c       	adc	r13, r1
    e99a:	11 24       	eor	r1, r1
    e99c:	f6 01       	movw	r30, r12
    e99e:	80 80       	ld	r8, Z
    e9a0:	91 80       	ldd	r9, Z+1	; 0x01
    e9a2:	a2 80       	ldd	r10, Z+2	; 0x02
    e9a4:	b3 80       	ldd	r11, Z+3	; 0x03
    e9a6:	a5 01       	movw	r20, r10
    e9a8:	94 01       	movw	r18, r8
    e9aa:	c3 01       	movw	r24, r6
    e9ac:	b2 01       	movw	r22, r4
    e9ae:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
    e9b2:	18 16       	cp	r1, r24
    e9b4:	54 f4       	brge	.+20     	; 0xe9ca <_Z19Calibration_Of_Pumpv+0x158>
    e9b6:	f8 01       	movw	r30, r16
    e9b8:	80 82       	st	Z, r8
    e9ba:	91 82       	std	Z+1, r9	; 0x01
    e9bc:	a2 82       	std	Z+2, r10	; 0x02
    e9be:	b3 82       	std	Z+3, r11	; 0x03
    e9c0:	f6 01       	movw	r30, r12
    e9c2:	40 82       	st	Z, r4
    e9c4:	51 82       	std	Z+1, r5	; 0x01
    e9c6:	62 82       	std	Z+2, r6	; 0x02
    e9c8:	73 82       	std	Z+3, r7	; 0x03
    e9ca:	f3 94       	inc	r15
    e9cc:	d3 cf       	rjmp	.-90     	; 0xe974 <_Z19Calibration_Of_Pumpv+0x102>
    e9ce:	f1 01       	movw	r30, r2
    e9d0:	60 85       	ldd	r22, Z+8	; 0x08
    e9d2:	71 85       	ldd	r23, Z+9	; 0x09
    e9d4:	82 85       	ldd	r24, Z+10	; 0x0a
    e9d6:	93 85       	ldd	r25, Z+11	; 0x0b
    e9d8:	60 93 41 13 	sts	0x1341, r22	; 0x801341 <_sPump_Parameter+0x4>
    e9dc:	70 93 42 13 	sts	0x1342, r23	; 0x801342 <_sPump_Parameter+0x5>
    e9e0:	80 93 43 13 	sts	0x1343, r24	; 0x801343 <_sPump_Parameter+0x6>
    e9e4:	90 93 44 13 	sts	0x1344, r25	; 0x801344 <_sPump_Parameter+0x7>
    e9e8:	20 e0       	ldi	r18, 0x00	; 0
    e9ea:	30 e0       	ldi	r19, 0x00	; 0
    e9ec:	40 e0       	ldi	r20, 0x00	; 0
    e9ee:	50 e4       	ldi	r21, 0x40	; 64
    e9f0:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
    e9f4:	18 16       	cp	r1, r24
    e9f6:	54 f5       	brge	.+84     	; 0xea4c <_Z19Calibration_Of_Pumpv+0x1da>
    e9f8:	81 e4       	ldi	r24, 0x41	; 65
    e9fa:	e8 2e       	mov	r14, r24
    e9fc:	83 e1       	ldi	r24, 0x13	; 19
    e9fe:	f8 2e       	mov	r15, r24
    ea00:	0f e0       	ldi	r16, 0x0F	; 15
    ea02:	15 e0       	ldi	r17, 0x05	; 5
    ea04:	f7 01       	movw	r30, r14
    ea06:	61 91       	ld	r22, Z+
    ea08:	7f 01       	movw	r14, r30
    ea0a:	1a 83       	std	Y+2, r17	; 0x02
    ea0c:	09 83       	std	Y+1, r16	; 0x01
    ea0e:	ce 01       	movw	r24, r28
    ea10:	01 96       	adiw	r24, 0x01	; 1
    ea12:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
    ea16:	0f 5f       	subi	r16, 0xFF	; 255
    ea18:	1f 4f       	sbci	r17, 0xFF	; 255
    ea1a:	03 31       	cpi	r16, 0x13	; 19
    ea1c:	f5 e0       	ldi	r31, 0x05	; 5
    ea1e:	1f 07       	cpc	r17, r31
    ea20:	89 f7       	brne	.-30     	; 0xea04 <_Z19Calibration_Of_Pumpv+0x192>
    ea22:	6d e3       	ldi	r22, 0x3D	; 61
    ea24:	73 e1       	ldi	r23, 0x13	; 19
    ea26:	8f e0       	ldi	r24, 0x0F	; 15
    ea28:	95 e0       	ldi	r25, 0x05	; 5
    ea2a:	fa dc       	rcall	.-1548   	; 0xe420 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    ea2c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ea30:	81 30       	cpi	r24, 0x01	; 1
    ea32:	09 f0       	breq	.+2      	; 0xea36 <_Z19Calibration_Of_Pumpv+0x1c4>
    ea34:	4e c0       	rjmp	.+156    	; 0xead2 <_Z19Calibration_Of_Pumpv+0x260>
    ea36:	6e e6       	ldi	r22, 0x6E	; 110
    ea38:	76 e2       	ldi	r23, 0x26	; 38
    ea3a:	82 e5       	ldi	r24, 0x52	; 82
    ea3c:	94 e1       	ldi	r25, 0x14	; 20
    ea3e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    ea42:	82 e5       	ldi	r24, 0x52	; 82
    ea44:	94 e1       	ldi	r25, 0x14	; 20
    ea46:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    ea4a:	43 c0       	rjmp	.+134    	; 0xead2 <_Z19Calibration_Of_Pumpv+0x260>
    ea4c:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    ea50:	dc 01       	movw	r26, r24
    ea52:	cb 01       	movw	r24, r22
    ea54:	a9 96       	adiw	r28, 0x29	; 41
    ea56:	2c ad       	ldd	r18, Y+60	; 0x3c
    ea58:	3d ad       	ldd	r19, Y+61	; 0x3d
    ea5a:	4e ad       	ldd	r20, Y+62	; 0x3e
    ea5c:	5f ad       	ldd	r21, Y+63	; 0x3f
    ea5e:	a9 97       	sbiw	r28, 0x29	; 41
    ea60:	82 1b       	sub	r24, r18
    ea62:	93 0b       	sbc	r25, r19
    ea64:	a4 0b       	sbc	r26, r20
    ea66:	b5 0b       	sbc	r27, r21
    ea68:	80 31       	cpi	r24, 0x10	; 16
    ea6a:	97 42       	sbci	r25, 0x27	; 39
    ea6c:	a1 05       	cpc	r26, r1
    ea6e:	b1 05       	cpc	r27, r1
    ea70:	08 f4       	brcc	.+2      	; 0xea74 <_Z19Calibration_Of_Pumpv+0x202>
    ea72:	65 cf       	rjmp	.-310    	; 0xe93e <_Z19Calibration_Of_Pumpv+0xcc>
    ea74:	80 e0       	ldi	r24, 0x00	; 0
    ea76:	2e c0       	rjmp	.+92     	; 0xead4 <_Z19Calibration_Of_Pumpv+0x262>
    ea78:	62 30       	cpi	r22, 0x02	; 2
    ea7a:	08 f4       	brcc	.+2      	; 0xea7e <_Z19Calibration_Of_Pumpv+0x20c>
    ea7c:	61 c0       	rjmp	.+194    	; 0xeb40 <_Z19Calibration_Of_Pumpv+0x2ce>
    ea7e:	62 50       	subi	r22, 0x02	; 2
    ea80:	86 e0       	ldi	r24, 0x06	; 6
    ea82:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
    ea86:	10 92 f2 13 	sts	0x13F2, r1	; 0x8013f2 <_sRuble_Parameters+0xab>
    ea8a:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    ea8e:	6b 01       	movw	r12, r22
    ea90:	7c 01       	movw	r14, r24
    ea92:	1b e0       	ldi	r17, 0x0B	; 11
    ea94:	0e 94 f0 cc 	call	0x199e0	; 0x199e0 <_Z14Lora_Operationv>
    ea98:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0xab>
    ea9c:	90 e0       	ldi	r25, 0x00	; 0
    ea9e:	02 97       	sbiw	r24, 0x02	; 2
    eaa0:	18 9f       	mul	r17, r24
    eaa2:	f0 01       	movw	r30, r0
    eaa4:	19 9f       	mul	r17, r25
    eaa6:	f0 0d       	add	r31, r0
    eaa8:	11 24       	eor	r1, r1
    eaaa:	ea 56       	subi	r30, 0x6A	; 106
    eaac:	f4 4f       	sbci	r31, 0xF4	; 244
    eaae:	82 85       	ldd	r24, Z+10	; 0x0a
    eab0:	80 fd       	sbrc	r24, 0
    eab2:	4a c0       	rjmp	.+148    	; 0xeb48 <_Z19Calibration_Of_Pumpv+0x2d6>
    eab4:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    eab8:	dc 01       	movw	r26, r24
    eaba:	cb 01       	movw	r24, r22
    eabc:	8c 19       	sub	r24, r12
    eabe:	9d 09       	sbc	r25, r13
    eac0:	ae 09       	sbc	r26, r14
    eac2:	bf 09       	sbc	r27, r15
    eac4:	80 31       	cpi	r24, 0x10	; 16
    eac6:	97 42       	sbci	r25, 0x27	; 39
    eac8:	a1 05       	cpc	r26, r1
    eaca:	b1 05       	cpc	r27, r1
    eacc:	18 f3       	brcs	.-58     	; 0xea94 <_Z19Calibration_Of_Pumpv+0x222>
    eace:	80 e0       	ldi	r24, 0x00	; 0
    ead0:	3c c0       	rjmp	.+120    	; 0xeb4a <_Z19Calibration_Of_Pumpv+0x2d8>
    ead2:	81 e0       	ldi	r24, 0x01	; 1
    ead4:	8e 01       	movw	r16, r28
    ead6:	07 5d       	subi	r16, 0xD7	; 215
    ead8:	1f 4f       	sbci	r17, 0xFF	; 255
    eada:	98 e2       	ldi	r25, 0x28	; 40
    eadc:	f8 01       	movw	r30, r16
    eade:	11 92       	st	Z+, r1
    eae0:	9a 95       	dec	r25
    eae2:	e9 f7       	brne	.-6      	; 0xeade <_Z19Calibration_Of_Pumpv+0x26c>
    eae4:	88 23       	and	r24, r24
    eae6:	69 f1       	breq	.+90     	; 0xeb42 <_Z19Calibration_Of_Pumpv+0x2d0>
    eae8:	81 e0       	ldi	r24, 0x01	; 1
    eaea:	80 93 04 14 	sts	0x1404, r24	; 0x801404 <_sRuble_Parameters+0xbd>
    eaee:	64 e0       	ldi	r22, 0x04	; 4
    eaf0:	74 e1       	ldi	r23, 0x14	; 20
    eaf2:	81 ea       	ldi	r24, 0xA1	; 161
    eaf4:	9c e0       	ldi	r25, 0x0C	; 12
    eaf6:	c7 dc       	rcall	.-1650   	; 0xe486 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    eaf8:	62 e4       	ldi	r22, 0x42	; 66
    eafa:	75 e0       	ldi	r23, 0x05	; 5
    eafc:	c8 01       	movw	r24, r16
    eafe:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    eb02:	ae 01       	movw	r20, r28
    eb04:	4f 5f       	subi	r20, 0xFF	; 255
    eb06:	5f 4f       	sbci	r21, 0xFF	; 255
    eb08:	7a 01       	movw	r14, r20
    eb0a:	88 e2       	ldi	r24, 0x28	; 40
    eb0c:	fa 01       	movw	r30, r20
    eb0e:	11 92       	st	Z+, r1
    eb10:	8a 95       	dec	r24
    eb12:	e9 f7       	brne	.-6      	; 0xeb0e <_Z19Calibration_Of_Pumpv+0x29c>
    eb14:	87 e6       	ldi	r24, 0x67	; 103
    eb16:	93 e1       	ldi	r25, 0x13	; 19
    eb18:	9f 93       	push	r25
    eb1a:	8f 93       	push	r24
    eb1c:	8b e6       	ldi	r24, 0x6B	; 107
    eb1e:	95 e0       	ldi	r25, 0x05	; 5
    eb20:	9f 93       	push	r25
    eb22:	8f 93       	push	r24
    eb24:	5f 93       	push	r21
    eb26:	4f 93       	push	r20
    eb28:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    eb2c:	b8 01       	movw	r22, r16
    eb2e:	c7 01       	movw	r24, r14
    eb30:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
    eb34:	0f 90       	pop	r0
    eb36:	0f 90       	pop	r0
    eb38:	0f 90       	pop	r0
    eb3a:	0f 90       	pop	r0
    eb3c:	0f 90       	pop	r0
    eb3e:	0f 90       	pop	r0
    eb40:	47 c0       	rjmp	.+142    	; 0xebd0 <_Z19Calibration_Of_Pumpv+0x35e>
    eb42:	66 e5       	ldi	r22, 0x56	; 86
    eb44:	75 e0       	ldi	r23, 0x05	; 5
    eb46:	da cf       	rjmp	.-76     	; 0xeafc <_Z19Calibration_Of_Pumpv+0x28a>
    eb48:	81 e0       	ldi	r24, 0x01	; 1
    eb4a:	8e 01       	movw	r16, r28
    eb4c:	07 5d       	subi	r16, 0xD7	; 215
    eb4e:	1f 4f       	sbci	r17, 0xFF	; 255
    eb50:	98 e2       	ldi	r25, 0x28	; 40
    eb52:	f8 01       	movw	r30, r16
    eb54:	11 92       	st	Z+, r1
    eb56:	9a 95       	dec	r25
    eb58:	e9 f7       	brne	.-6      	; 0xeb54 <_Z19Calibration_Of_Pumpv+0x2e2>
    eb5a:	88 23       	and	r24, r24
    eb5c:	59 f0       	breq	.+22     	; 0xeb74 <_Z19Calibration_Of_Pumpv+0x302>
    eb5e:	81 e0       	ldi	r24, 0x01	; 1
    eb60:	80 93 04 14 	sts	0x1404, r24	; 0x801404 <_sRuble_Parameters+0xbd>
    eb64:	64 e0       	ldi	r22, 0x04	; 4
    eb66:	74 e1       	ldi	r23, 0x14	; 20
    eb68:	81 ea       	ldi	r24, 0xA1	; 161
    eb6a:	9c e0       	ldi	r25, 0x0C	; 12
    eb6c:	8c dc       	rcall	.-1768   	; 0xe486 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    eb6e:	62 e4       	ldi	r22, 0x42	; 66
    eb70:	75 e0       	ldi	r23, 0x05	; 5
    eb72:	02 c0       	rjmp	.+4      	; 0xeb78 <_Z19Calibration_Of_Pumpv+0x306>
    eb74:	66 e5       	ldi	r22, 0x56	; 86
    eb76:	75 e0       	ldi	r23, 0x05	; 5
    eb78:	c8 01       	movw	r24, r16
    eb7a:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    eb7e:	9e 01       	movw	r18, r28
    eb80:	2f 5f       	subi	r18, 0xFF	; 255
    eb82:	3f 4f       	sbci	r19, 0xFF	; 255
    eb84:	79 01       	movw	r14, r18
    eb86:	88 e2       	ldi	r24, 0x28	; 40
    eb88:	f9 01       	movw	r30, r18
    eb8a:	11 92       	st	Z+, r1
    eb8c:	8a 95       	dec	r24
    eb8e:	e9 f7       	brne	.-6      	; 0xeb8a <_Z19Calibration_Of_Pumpv+0x318>
    eb90:	87 e6       	ldi	r24, 0x67	; 103
    eb92:	93 e1       	ldi	r25, 0x13	; 19
    eb94:	9f 93       	push	r25
    eb96:	8f 93       	push	r24
    eb98:	8b e6       	ldi	r24, 0x6B	; 107
    eb9a:	95 e0       	ldi	r25, 0x05	; 5
    eb9c:	9f 93       	push	r25
    eb9e:	8f 93       	push	r24
    eba0:	3f 93       	push	r19
    eba2:	2f 93       	push	r18
    eba4:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
    eba8:	b8 01       	movw	r22, r16
    ebaa:	c7 01       	movw	r24, r14
    ebac:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
    ebb0:	80 91 f2 13 	lds	r24, 0x13F2	; 0x8013f2 <_sRuble_Parameters+0xab>
    ebb4:	90 e0       	ldi	r25, 0x00	; 0
    ebb6:	02 97       	sbiw	r24, 0x02	; 2
    ebb8:	2b e0       	ldi	r18, 0x0B	; 11
    ebba:	28 9f       	mul	r18, r24
    ebbc:	f0 01       	movw	r30, r0
    ebbe:	29 9f       	mul	r18, r25
    ebc0:	f0 0d       	add	r31, r0
    ebc2:	11 24       	eor	r1, r1
    ebc4:	ea 56       	subi	r30, 0x6A	; 106
    ebc6:	f4 4f       	sbci	r31, 0xF4	; 244
    ebc8:	82 85       	ldd	r24, Z+10	; 0x0a
    ebca:	8c 7f       	andi	r24, 0xFC	; 252
    ebcc:	82 87       	std	Z+10, r24	; 0x0a
    ebce:	b2 cf       	rjmp	.-156    	; 0xeb34 <_Z19Calibration_Of_Pumpv+0x2c2>
    ebd0:	c8 59       	subi	r28, 0x98	; 152
    ebd2:	df 4f       	sbci	r29, 0xFF	; 255
    ebd4:	0f b6       	in	r0, 0x3f	; 63
    ebd6:	f8 94       	cli
    ebd8:	de bf       	out	0x3e, r29	; 62
    ebda:	0f be       	out	0x3f, r0	; 63
    ebdc:	cd bf       	out	0x3d, r28	; 61
    ebde:	df 91       	pop	r29
    ebe0:	cf 91       	pop	r28
    ebe2:	1f 91       	pop	r17
    ebe4:	0f 91       	pop	r16
    ebe6:	ff 90       	pop	r15
    ebe8:	ef 90       	pop	r14
    ebea:	df 90       	pop	r13
    ebec:	cf 90       	pop	r12
    ebee:	bf 90       	pop	r11
    ebf0:	af 90       	pop	r10
    ebf2:	9f 90       	pop	r9
    ebf4:	8f 90       	pop	r8
    ebf6:	7f 90       	pop	r7
    ebf8:	6f 90       	pop	r6
    ebfa:	5f 90       	pop	r5
    ebfc:	4f 90       	pop	r4
    ebfe:	3f 90       	pop	r3
    ec00:	2f 90       	pop	r2
    ec02:	08 95       	ret

0000ec04 <_Z14Faults_Handlerv>:
    ec04:	4f 92       	push	r4
    ec06:	5f 92       	push	r5
    ec08:	6f 92       	push	r6
    ec0a:	7f 92       	push	r7
    ec0c:	8f 92       	push	r8
    ec0e:	9f 92       	push	r9
    ec10:	af 92       	push	r10
    ec12:	bf 92       	push	r11
    ec14:	cf 92       	push	r12
    ec16:	df 92       	push	r13
    ec18:	ef 92       	push	r14
    ec1a:	ff 92       	push	r15
    ec1c:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    ec20:	82 30       	cpi	r24, 0x02	; 2
    ec22:	08 f4       	brcc	.+2      	; 0xec26 <_Z14Faults_Handlerv+0x22>
    ec24:	64 c0       	rjmp	.+200    	; 0xecee <_Z14Faults_Handlerv+0xea>
    ec26:	90 91 6e 13 	lds	r25, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    ec2a:	29 2f       	mov	r18, r25
    ec2c:	2d 7f       	andi	r18, 0xFD	; 253
    ec2e:	21 30       	cpi	r18, 0x01	; 1
    ec30:	19 f0       	breq	.+6      	; 0xec38 <_Z14Faults_Handlerv+0x34>
    ec32:	95 30       	cpi	r25, 0x05	; 5
    ec34:	09 f0       	breq	.+2      	; 0xec38 <_Z14Faults_Handlerv+0x34>
    ec36:	0f c3       	rjmp	.+1566   	; 0xf256 <_Z14Faults_Handlerv+0x652>
    ec38:	90 91 07 14 	lds	r25, 0x1407	; 0x801407 <_sRuble_Parameters+0xc0>
    ec3c:	91 30       	cpi	r25, 0x01	; 1
    ec3e:	09 f0       	breq	.+2      	; 0xec42 <_Z14Faults_Handlerv+0x3e>
    ec40:	0a c3       	rjmp	.+1556   	; 0xf256 <_Z14Faults_Handlerv+0x652>
    ec42:	90 e0       	ldi	r25, 0x00	; 0
    ec44:	02 97       	sbiw	r24, 0x02	; 2
    ec46:	2b e0       	ldi	r18, 0x0B	; 11
    ec48:	28 9f       	mul	r18, r24
    ec4a:	f0 01       	movw	r30, r0
    ec4c:	29 9f       	mul	r18, r25
    ec4e:	f0 0d       	add	r31, r0
    ec50:	11 24       	eor	r1, r1
    ec52:	ea 56       	subi	r30, 0x6A	; 106
    ec54:	f4 4f       	sbci	r31, 0xF4	; 244
    ec56:	80 85       	ldd	r24, Z+8	; 0x08
    ec58:	91 85       	ldd	r25, Z+9	; 0x09
    ec5a:	9c 01       	movw	r18, r24
    ec5c:	23 70       	andi	r18, 0x03	; 3
    ec5e:	33 27       	eor	r19, r19
    ec60:	23 30       	cpi	r18, 0x03	; 3
    ec62:	31 05       	cpc	r19, r1
    ec64:	39 f4       	brne	.+14     	; 0xec74 <_Z14Faults_Handlerv+0x70>
    ec66:	82 ff       	sbrs	r24, 2
    ec68:	05 c0       	rjmp	.+10     	; 0xec74 <_Z14Faults_Handlerv+0x70>
    ec6a:	88 7b       	andi	r24, 0xB8	; 184
    ec6c:	92 70       	andi	r25, 0x02	; 2
    ec6e:	89 2b       	or	r24, r25
    ec70:	09 f4       	brne	.+2      	; 0xec74 <_Z14Faults_Handlerv+0x70>
    ec72:	f1 c2       	rjmp	.+1506   	; 0xf256 <_Z14Faults_Handlerv+0x652>
    ec74:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ec78:	81 30       	cpi	r24, 0x01	; 1
    ec7a:	d1 f4       	brne	.+52     	; 0xecb0 <_Z14Faults_Handlerv+0xac>
    ec7c:	66 e4       	ldi	r22, 0x46	; 70
    ec7e:	76 e2       	ldi	r23, 0x26	; 38
    ec80:	82 e5       	ldi	r24, 0x52	; 82
    ec82:	94 e1       	ldi	r25, 0x14	; 20
    ec84:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    ec88:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    ec8c:	90 e0       	ldi	r25, 0x00	; 0
    ec8e:	02 97       	sbiw	r24, 0x02	; 2
    ec90:	2b e0       	ldi	r18, 0x0B	; 11
    ec92:	28 9f       	mul	r18, r24
    ec94:	f0 01       	movw	r30, r0
    ec96:	29 9f       	mul	r18, r25
    ec98:	f0 0d       	add	r31, r0
    ec9a:	11 24       	eor	r1, r1
    ec9c:	ea 56       	subi	r30, 0x6A	; 106
    ec9e:	f4 4f       	sbci	r31, 0xF4	; 244
    eca0:	60 85       	ldd	r22, Z+8	; 0x08
    eca2:	71 85       	ldd	r23, Z+9	; 0x09
    eca4:	4a e0       	ldi	r20, 0x0A	; 10
    eca6:	50 e0       	ldi	r21, 0x00	; 0
    eca8:	82 e5       	ldi	r24, 0x52	; 82
    ecaa:	94 e1       	ldi	r25, 0x14	; 20
    ecac:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
    ecb0:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    ecb4:	90 e0       	ldi	r25, 0x00	; 0
    ecb6:	02 97       	sbiw	r24, 0x02	; 2
    ecb8:	2b e0       	ldi	r18, 0x0B	; 11
    ecba:	28 9f       	mul	r18, r24
    ecbc:	f0 01       	movw	r30, r0
    ecbe:	29 9f       	mul	r18, r25
    ecc0:	f0 0d       	add	r31, r0
    ecc2:	11 24       	eor	r1, r1
    ecc4:	ea 56       	subi	r30, 0x6A	; 106
    ecc6:	f4 4f       	sbci	r31, 0xF4	; 244
    ecc8:	80 85       	ldd	r24, Z+8	; 0x08
    ecca:	83 ff       	sbrs	r24, 3
    eccc:	03 c0       	rjmp	.+6      	; 0xecd4 <_Z14Faults_Handlerv+0xd0>
    ecce:	81 e0       	ldi	r24, 0x01	; 1
    ecd0:	80 93 39 14 	sts	0x1439, r24	; 0x801439 <_sRuble_Parameters+0xf2>
    ecd4:	84 e0       	ldi	r24, 0x04	; 4
    ecd6:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
    ecda:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    ecde:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    ece2:	82 60       	ori	r24, 0x02	; 2
    ece4:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    ece8:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    ecec:	b4 c2       	rjmp	.+1384   	; 0xf256 <_Z14Faults_Handlerv+0x652>
    ecee:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    ecf2:	88 23       	and	r24, r24
    ecf4:	41 f0       	breq	.+16     	; 0xed06 <_Z14Faults_Handlerv+0x102>
    ecf6:	80 91 9b 0c 	lds	r24, 0x0C9B	; 0x800c9b <_gfault_Occure>
    ecfa:	90 91 9c 0c 	lds	r25, 0x0C9C	; 0x800c9c <_gfault_Occure+0x1>
    ecfe:	89 2b       	or	r24, r25
    ed00:	11 f4       	brne	.+4      	; 0xed06 <_Z14Faults_Handlerv+0x102>
    ed02:	10 92 45 13 	sts	0x1345, r1	; 0x801345 <_sPump_Parameter+0x8>
    ed06:	80 91 63 13 	lds	r24, 0x1363	; 0x801363 <_sRuble_Parameters+0x1c>
    ed0a:	90 91 64 13 	lds	r25, 0x1364	; 0x801364 <_sRuble_Parameters+0x1d>
    ed0e:	89 2b       	or	r24, r25
    ed10:	e9 f0       	breq	.+58     	; 0xed4c <_Z14Faults_Handlerv+0x148>
    ed12:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ed16:	88 23       	and	r24, r24
    ed18:	39 f0       	breq	.+14     	; 0xed28 <_Z14Faults_Handlerv+0x124>
    ed1a:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ed1e:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    ed22:	8f 5f       	subi	r24, 0xFF	; 255
    ed24:	80 93 8e 0c 	sts	0x0C8E, r24	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    ed28:	10 92 64 13 	sts	0x1364, r1	; 0x801364 <_sRuble_Parameters+0x1d>
    ed2c:	10 92 63 13 	sts	0x1363, r1	; 0x801363 <_sRuble_Parameters+0x1c>
    ed30:	68 ec       	ldi	r22, 0xC8	; 200
    ed32:	75 e0       	ldi	r23, 0x05	; 5
    ed34:	81 ea       	ldi	r24, 0xA1	; 161
    ed36:	9c e0       	ldi	r25, 0x0C	; 12
    ed38:	0e 94 da d5 	call	0x1abb4	; 0x1abb4 <_ZN13EnergyMonitor8calcIrmsEj>
    ed3c:	60 93 41 13 	sts	0x1341, r22	; 0x801341 <_sPump_Parameter+0x4>
    ed40:	70 93 42 13 	sts	0x1342, r23	; 0x801342 <_sPump_Parameter+0x5>
    ed44:	80 93 43 13 	sts	0x1343, r24	; 0x801343 <_sPump_Parameter+0x6>
    ed48:	90 93 44 13 	sts	0x1344, r25	; 0x801344 <_sPump_Parameter+0x7>
    ed4c:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    ed50:	81 30       	cpi	r24, 0x01	; 1
    ed52:	51 f5       	brne	.+84     	; 0xeda8 <_Z14Faults_Handlerv+0x1a4>
    ed54:	b1 db       	rcall	.-2206   	; 0xe4b8 <_Z11Check_Phasev>
    ed56:	81 30       	cpi	r24, 0x01	; 1
    ed58:	21 f5       	brne	.+72     	; 0xeda2 <_Z14Faults_Handlerv+0x19e>
    ed5a:	8a e0       	ldi	r24, 0x0A	; 10
    ed5c:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    ed60:	89 2b       	or	r24, r25
    ed62:	59 f4       	brne	.+22     	; 0xed7a <_Z14Faults_Handlerv+0x176>
    ed64:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    ed68:	98 2f       	mov	r25, r24
    ed6a:	9d 7f       	andi	r25, 0xFD	; 253
    ed6c:	91 30       	cpi	r25, 0x01	; 1
    ed6e:	11 f0       	breq	.+4      	; 0xed74 <_Z14Faults_Handlerv+0x170>
    ed70:	85 30       	cpi	r24, 0x05	; 5
    ed72:	19 f4       	brne	.+6      	; 0xed7a <_Z14Faults_Handlerv+0x176>
    ed74:	8c e0       	ldi	r24, 0x0C	; 12
    ed76:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
    ed7a:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
    ed7e:	81 11       	cpse	r24, r1
    ed80:	15 c0       	rjmp	.+42     	; 0xedac <_Z14Faults_Handlerv+0x1a8>
    ed82:	81 e0       	ldi	r24, 0x01	; 1
    ed84:	80 93 fb 13 	sts	0x13FB, r24	; 0x8013fb <_sRuble_Parameters+0xb4>
    ed88:	84 e0       	ldi	r24, 0x04	; 4
    ed8a:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
    ed8e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    ed92:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    ed96:	82 60       	ori	r24, 0x02	; 2
    ed98:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    ed9c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    eda0:	05 c0       	rjmp	.+10     	; 0xedac <_Z14Faults_Handlerv+0x1a8>
    eda2:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
    eda6:	81 11       	cpse	r24, r1
    eda8:	10 92 fb 13 	sts	0x13FB, r1	; 0x8013fb <_sRuble_Parameters+0xb4>
    edac:	80 91 04 14 	lds	r24, 0x1404	; 0x801404 <_sRuble_Parameters+0xbd>
    edb0:	88 23       	and	r24, r24
    edb2:	09 f4       	brne	.+2      	; 0xedb6 <_Z14Faults_Handlerv+0x1b2>
    edb4:	50 c2       	rjmp	.+1184   	; 0xf256 <_Z14Faults_Handlerv+0x652>
    edb6:	c0 90 41 13 	lds	r12, 0x1341	; 0x801341 <_sPump_Parameter+0x4>
    edba:	d0 90 42 13 	lds	r13, 0x1342	; 0x801342 <_sPump_Parameter+0x5>
    edbe:	e0 90 43 13 	lds	r14, 0x1343	; 0x801343 <_sPump_Parameter+0x6>
    edc2:	f0 90 44 13 	lds	r15, 0x1344	; 0x801344 <_sPump_Parameter+0x7>
    edc6:	40 90 3d 13 	lds	r4, 0x133D	; 0x80133d <_sPump_Parameter>
    edca:	50 90 3e 13 	lds	r5, 0x133E	; 0x80133e <_sPump_Parameter+0x1>
    edce:	60 90 3f 13 	lds	r6, 0x133F	; 0x80133f <_sPump_Parameter+0x2>
    edd2:	70 90 40 13 	lds	r7, 0x1340	; 0x801340 <_sPump_Parameter+0x3>
    edd6:	20 e0       	ldi	r18, 0x00	; 0
    edd8:	30 e0       	ldi	r19, 0x00	; 0
    edda:	48 ec       	ldi	r20, 0xC8	; 200
    eddc:	52 e4       	ldi	r21, 0x42	; 66
    edde:	c3 01       	movw	r24, r6
    ede0:	b2 01       	movw	r22, r4
    ede2:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
    ede6:	4b 01       	movw	r8, r22
    ede8:	5c 01       	movw	r10, r24
    edea:	20 e0       	ldi	r18, 0x00	; 0
    edec:	30 e0       	ldi	r19, 0x00	; 0
    edee:	40 e7       	ldi	r20, 0x70	; 112
    edf0:	51 e4       	ldi	r21, 0x41	; 65
    edf2:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    edf6:	9b 01       	movw	r18, r22
    edf8:	ac 01       	movw	r20, r24
    edfa:	c7 01       	movw	r24, r14
    edfc:	b6 01       	movw	r22, r12
    edfe:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
    ee02:	87 ff       	sbrs	r24, 7
    ee04:	43 c0       	rjmp	.+134    	; 0xee8c <_Z14Faults_Handlerv+0x288>
    ee06:	20 91 4f 13 	lds	r18, 0x134F	; 0x80134f <_sRuble_Parameters+0x8>
    ee0a:	30 91 50 13 	lds	r19, 0x1350	; 0x801350 <_sRuble_Parameters+0x9>
    ee0e:	40 91 51 13 	lds	r20, 0x1351	; 0x801351 <_sRuble_Parameters+0xa>
    ee12:	50 91 52 13 	lds	r21, 0x1352	; 0x801352 <_sRuble_Parameters+0xb>
    ee16:	60 91 53 13 	lds	r22, 0x1353	; 0x801353 <_sRuble_Parameters+0xc>
    ee1a:	70 91 54 13 	lds	r23, 0x1354	; 0x801354 <_sRuble_Parameters+0xd>
    ee1e:	80 91 55 13 	lds	r24, 0x1355	; 0x801355 <_sRuble_Parameters+0xe>
    ee22:	90 91 56 13 	lds	r25, 0x1356	; 0x801356 <_sRuble_Parameters+0xf>
    ee26:	a2 e0       	ldi	r26, 0x02	; 2
    ee28:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    ee2c:	79 f5       	brne	.+94     	; 0xee8c <_Z14Faults_Handlerv+0x288>
    ee2e:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    ee32:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    ee36:	84 e0       	ldi	r24, 0x04	; 4
    ee38:	80 93 4f 13 	sts	0x134F, r24	; 0x80134f <_sRuble_Parameters+0x8>
    ee3c:	10 92 50 13 	sts	0x1350, r1	; 0x801350 <_sRuble_Parameters+0x9>
    ee40:	10 92 51 13 	sts	0x1351, r1	; 0x801351 <_sRuble_Parameters+0xa>
    ee44:	10 92 52 13 	sts	0x1352, r1	; 0x801352 <_sRuble_Parameters+0xb>
    ee48:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0xc>
    ee4c:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xd>
    ee50:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xe>
    ee54:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xf>
    ee58:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    ee5c:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    ee60:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    ee64:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    ee68:	84 60       	ori	r24, 0x04	; 4
    ee6a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    ee6e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    ee72:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    ee76:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    ee7a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    ee7e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    ee82:	84 60       	ori	r24, 0x04	; 4
    ee84:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    ee88:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    ee8c:	20 e0       	ldi	r18, 0x00	; 0
    ee8e:	30 e0       	ldi	r19, 0x00	; 0
    ee90:	40 e9       	ldi	r20, 0x90	; 144
    ee92:	51 e4       	ldi	r21, 0x41	; 65
    ee94:	c5 01       	movw	r24, r10
    ee96:	b4 01       	movw	r22, r8
    ee98:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    ee9c:	9b 01       	movw	r18, r22
    ee9e:	ac 01       	movw	r20, r24
    eea0:	c7 01       	movw	r24, r14
    eea2:	b6 01       	movw	r22, r12
    eea4:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
    eea8:	18 16       	cp	r1, r24
    eeaa:	0c f0       	brlt	.+2      	; 0xeeae <_Z14Faults_Handlerv+0x2aa>
    eeac:	43 c0       	rjmp	.+134    	; 0xef34 <_Z14Faults_Handlerv+0x330>
    eeae:	20 91 4f 13 	lds	r18, 0x134F	; 0x80134f <_sRuble_Parameters+0x8>
    eeb2:	30 91 50 13 	lds	r19, 0x1350	; 0x801350 <_sRuble_Parameters+0x9>
    eeb6:	40 91 51 13 	lds	r20, 0x1351	; 0x801351 <_sRuble_Parameters+0xa>
    eeba:	50 91 52 13 	lds	r21, 0x1352	; 0x801352 <_sRuble_Parameters+0xb>
    eebe:	60 91 53 13 	lds	r22, 0x1353	; 0x801353 <_sRuble_Parameters+0xc>
    eec2:	70 91 54 13 	lds	r23, 0x1354	; 0x801354 <_sRuble_Parameters+0xd>
    eec6:	80 91 55 13 	lds	r24, 0x1355	; 0x801355 <_sRuble_Parameters+0xe>
    eeca:	90 91 56 13 	lds	r25, 0x1356	; 0x801356 <_sRuble_Parameters+0xf>
    eece:	a4 e0       	ldi	r26, 0x04	; 4
    eed0:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
    eed4:	79 f5       	brne	.+94     	; 0xef34 <_Z14Faults_Handlerv+0x330>
    eed6:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    eeda:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    eede:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    eee2:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    eee6:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    eeea:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    eeee:	82 60       	ori	r24, 0x02	; 2
    eef0:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    eef4:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    eef8:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    eefc:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    ef00:	82 e0       	ldi	r24, 0x02	; 2
    ef02:	80 93 4f 13 	sts	0x134F, r24	; 0x80134f <_sRuble_Parameters+0x8>
    ef06:	10 92 50 13 	sts	0x1350, r1	; 0x801350 <_sRuble_Parameters+0x9>
    ef0a:	10 92 51 13 	sts	0x1351, r1	; 0x801351 <_sRuble_Parameters+0xa>
    ef0e:	10 92 52 13 	sts	0x1352, r1	; 0x801352 <_sRuble_Parameters+0xb>
    ef12:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0xc>
    ef16:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xd>
    ef1a:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xe>
    ef1e:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xf>
    ef22:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    ef26:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    ef2a:	84 60       	ori	r24, 0x04	; 4
    ef2c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    ef30:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    ef34:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    ef38:	82 30       	cpi	r24, 0x02	; 2
    ef3a:	a9 f0       	breq	.+42     	; 0xef66 <_Z14Faults_Handlerv+0x362>
    ef3c:	80 91 61 13 	lds	r24, 0x1361	; 0x801361 <_sRuble_Parameters+0x1a>
    ef40:	90 91 62 13 	lds	r25, 0x1362	; 0x801362 <_sRuble_Parameters+0x1b>
    ef44:	89 37       	cpi	r24, 0x79	; 121
    ef46:	91 05       	cpc	r25, r1
    ef48:	08 f4       	brcc	.+2      	; 0xef4c <_Z14Faults_Handlerv+0x348>
    ef4a:	85 c1       	rjmp	.+778    	; 0xf256 <_Z14Faults_Handlerv+0x652>
    ef4c:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
    ef50:	81 11       	cpse	r24, r1
    ef52:	09 c0       	rjmp	.+18     	; 0xef66 <_Z14Faults_Handlerv+0x362>
    ef54:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
    ef58:	81 11       	cpse	r24, r1
    ef5a:	05 c0       	rjmp	.+10     	; 0xef66 <_Z14Faults_Handlerv+0x362>
    ef5c:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
    ef60:	81 30       	cpi	r24, 0x01	; 1
    ef62:	09 f0       	breq	.+2      	; 0xef66 <_Z14Faults_Handlerv+0x362>
    ef64:	78 c1       	rjmp	.+752    	; 0xf256 <_Z14Faults_Handlerv+0x652>
    ef66:	89 e7       	ldi	r24, 0x79	; 121
    ef68:	90 e0       	ldi	r25, 0x00	; 0
    ef6a:	90 93 62 13 	sts	0x1362, r25	; 0x801362 <_sRuble_Parameters+0x1b>
    ef6e:	80 93 61 13 	sts	0x1361, r24	; 0x801361 <_sRuble_Parameters+0x1a>
    ef72:	20 e0       	ldi	r18, 0x00	; 0
    ef74:	30 e0       	ldi	r19, 0x00	; 0
    ef76:	40 e0       	ldi	r20, 0x00	; 0
    ef78:	52 e4       	ldi	r21, 0x42	; 66
    ef7a:	c5 01       	movw	r24, r10
    ef7c:	b4 01       	movw	r22, r8
    ef7e:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    ef82:	a3 01       	movw	r20, r6
    ef84:	92 01       	movw	r18, r4
    ef86:	0e 94 4e cd 	call	0x19a9c	; 0x19a9c <__addsf3>
    ef8a:	9b 01       	movw	r18, r22
    ef8c:	ac 01       	movw	r20, r24
    ef8e:	c7 01       	movw	r24, r14
    ef90:	b6 01       	movw	r22, r12
    ef92:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
    ef96:	18 16       	cp	r1, r24
    ef98:	0c f0       	brlt	.+2      	; 0xef9c <_Z14Faults_Handlerv+0x398>
    ef9a:	52 c0       	rjmp	.+164    	; 0xf040 <_Z14Faults_Handlerv+0x43c>
    ef9c:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    efa0:	89 30       	cpi	r24, 0x09	; 9
    efa2:	09 f4       	brne	.+2      	; 0xefa6 <_Z14Faults_Handlerv+0x3a2>
    efa4:	53 c0       	rjmp	.+166    	; 0xf04c <_Z14Faults_Handlerv+0x448>
    efa6:	89 e0       	ldi	r24, 0x09	; 9
    efa8:	80 93 8f 0c 	sts	0x0C8F, r24	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    efac:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    efb0:	81 30       	cpi	r24, 0x01	; 1
    efb2:	71 f4       	brne	.+28     	; 0xefd0 <_Z14Faults_Handlerv+0x3cc>
    efb4:	65 e3       	ldi	r22, 0x35	; 53
    efb6:	76 e2       	ldi	r23, 0x26	; 38
    efb8:	82 e5       	ldi	r24, 0x52	; 82
    efba:	94 e1       	ldi	r25, 0x14	; 20
    efbc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    efc0:	4a e0       	ldi	r20, 0x0A	; 10
    efc2:	50 e0       	ldi	r21, 0x00	; 0
    efc4:	60 91 8e 0c 	lds	r22, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    efc8:	82 e5       	ldi	r24, 0x52	; 82
    efca:	94 e1       	ldi	r25, 0x14	; 20
    efcc:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
    efd0:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    efd4:	84 30       	cpi	r24, 0x04	; 4
    efd6:	d0 f1       	brcs	.+116    	; 0xf04c <_Z14Faults_Handlerv+0x448>
    efd8:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    efdc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    efe0:	81 30       	cpi	r24, 0x01	; 1
    efe2:	51 f4       	brne	.+20     	; 0xeff8 <_Z14Faults_Handlerv+0x3f4>
    efe4:	65 e2       	ldi	r22, 0x25	; 37
    efe6:	76 e2       	ldi	r23, 0x26	; 38
    efe8:	82 e5       	ldi	r24, 0x52	; 82
    efea:	94 e1       	ldi	r25, 0x14	; 20
    efec:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    eff0:	82 e5       	ldi	r24, 0x52	; 82
    eff2:	94 e1       	ldi	r25, 0x14	; 20
    eff4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    eff8:	89 e0       	ldi	r24, 0x09	; 9
    effa:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
    effe:	84 e6       	ldi	r24, 0x64	; 100
    f000:	90 e0       	ldi	r25, 0x00	; 0
    f002:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    f006:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
    f00a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    f00e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    f012:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    f016:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    f01a:	80 62       	ori	r24, 0x20	; 32
    f01c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    f020:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    f024:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    f028:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    f02c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    f030:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    f034:	82 60       	ori	r24, 0x02	; 2
    f036:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    f03a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    f03e:	06 c0       	rjmp	.+12     	; 0xf04c <_Z14Faults_Handlerv+0x448>
    f040:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f044:	89 30       	cpi	r24, 0x09	; 9
    f046:	11 f4       	brne	.+4      	; 0xf04c <_Z14Faults_Handlerv+0x448>
    f048:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f04c:	c0 90 41 13 	lds	r12, 0x1341	; 0x801341 <_sPump_Parameter+0x4>
    f050:	d0 90 42 13 	lds	r13, 0x1342	; 0x801342 <_sPump_Parameter+0x5>
    f054:	e0 90 43 13 	lds	r14, 0x1343	; 0x801343 <_sPump_Parameter+0x6>
    f058:	f0 90 44 13 	lds	r15, 0x1344	; 0x801344 <_sPump_Parameter+0x7>
    f05c:	20 e0       	ldi	r18, 0x00	; 0
    f05e:	30 e0       	ldi	r19, 0x00	; 0
    f060:	48 ec       	ldi	r20, 0xC8	; 200
    f062:	52 e4       	ldi	r21, 0x42	; 66
    f064:	60 91 3d 13 	lds	r22, 0x133D	; 0x80133d <_sPump_Parameter>
    f068:	70 91 3e 13 	lds	r23, 0x133E	; 0x80133e <_sPump_Parameter+0x1>
    f06c:	80 91 3f 13 	lds	r24, 0x133F	; 0x80133f <_sPump_Parameter+0x2>
    f070:	90 91 40 13 	lds	r25, 0x1340	; 0x801340 <_sPump_Parameter+0x3>
    f074:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
    f078:	4b 01       	movw	r8, r22
    f07a:	5c 01       	movw	r10, r24
    f07c:	20 e0       	ldi	r18, 0x00	; 0
    f07e:	30 e0       	ldi	r19, 0x00	; 0
    f080:	48 e6       	ldi	r20, 0x68	; 104
    f082:	52 e4       	ldi	r21, 0x42	; 66
    f084:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    f088:	9b 01       	movw	r18, r22
    f08a:	ac 01       	movw	r20, r24
    f08c:	c7 01       	movw	r24, r14
    f08e:	b6 01       	movw	r22, r12
    f090:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
    f094:	87 ff       	sbrs	r24, 7
    f096:	65 c0       	rjmp	.+202    	; 0xf162 <_Z14Faults_Handlerv+0x55e>
    f098:	20 e0       	ldi	r18, 0x00	; 0
    f09a:	30 e0       	ldi	r19, 0x00	; 0
    f09c:	40 ea       	ldi	r20, 0xA0	; 160
    f09e:	51 e4       	ldi	r21, 0x41	; 65
    f0a0:	c5 01       	movw	r24, r10
    f0a2:	b4 01       	movw	r22, r8
    f0a4:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    f0a8:	9b 01       	movw	r18, r22
    f0aa:	ac 01       	movw	r20, r24
    f0ac:	c7 01       	movw	r24, r14
    f0ae:	b6 01       	movw	r22, r12
    f0b0:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
    f0b4:	18 16       	cp	r1, r24
    f0b6:	0c f0       	brlt	.+2      	; 0xf0ba <_Z14Faults_Handlerv+0x4b6>
    f0b8:	5a c0       	rjmp	.+180    	; 0xf16e <_Z14Faults_Handlerv+0x56a>
    f0ba:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    f0be:	81 30       	cpi	r24, 0x01	; 1
    f0c0:	09 f4       	brne	.+2      	; 0xf0c4 <_Z14Faults_Handlerv+0x4c0>
    f0c2:	55 c0       	rjmp	.+170    	; 0xf16e <_Z14Faults_Handlerv+0x56a>
    f0c4:	81 e0       	ldi	r24, 0x01	; 1
    f0c6:	80 93 8f 0c 	sts	0x0C8F, r24	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f0ca:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f0ce:	81 30       	cpi	r24, 0x01	; 1
    f0d0:	71 f4       	brne	.+28     	; 0xf0ee <_Z14Faults_Handlerv+0x4ea>
    f0d2:	67 e1       	ldi	r22, 0x17	; 23
    f0d4:	76 e2       	ldi	r23, 0x26	; 38
    f0d6:	82 e5       	ldi	r24, 0x52	; 82
    f0d8:	94 e1       	ldi	r25, 0x14	; 20
    f0da:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f0de:	4a e0       	ldi	r20, 0x0A	; 10
    f0e0:	50 e0       	ldi	r21, 0x00	; 0
    f0e2:	60 91 8e 0c 	lds	r22, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f0e6:	82 e5       	ldi	r24, 0x52	; 82
    f0e8:	94 e1       	ldi	r25, 0x14	; 20
    f0ea:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
    f0ee:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f0f2:	84 30       	cpi	r24, 0x04	; 4
    f0f4:	e0 f1       	brcs	.+120    	; 0xf16e <_Z14Faults_Handlerv+0x56a>
    f0f6:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f0fa:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f0fe:	81 30       	cpi	r24, 0x01	; 1
    f100:	51 f4       	brne	.+20     	; 0xf116 <_Z14Faults_Handlerv+0x512>
    f102:	6a e0       	ldi	r22, 0x0A	; 10
    f104:	76 e2       	ldi	r23, 0x26	; 38
    f106:	82 e5       	ldi	r24, 0x52	; 82
    f108:	94 e1       	ldi	r25, 0x14	; 20
    f10a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f10e:	82 e5       	ldi	r24, 0x52	; 82
    f110:	94 e1       	ldi	r25, 0x14	; 20
    f112:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    f116:	81 e0       	ldi	r24, 0x01	; 1
    f118:	80 93 39 14 	sts	0x1439, r24	; 0x801439 <_sRuble_Parameters+0xf2>
    f11c:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
    f120:	84 e6       	ldi	r24, 0x64	; 100
    f122:	90 e0       	ldi	r25, 0x00	; 0
    f124:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    f128:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
    f12c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
    f130:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
    f134:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
    f138:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
    f13c:	90 61       	ori	r25, 0x10	; 16
    f13e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
    f142:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
    f146:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
    f14a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
    f14e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    f152:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    f156:	82 60       	ori	r24, 0x02	; 2
    f158:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    f15c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    f160:	06 c0       	rjmp	.+12     	; 0xf16e <_Z14Faults_Handlerv+0x56a>
    f162:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f166:	81 30       	cpi	r24, 0x01	; 1
    f168:	11 f4       	brne	.+4      	; 0xf16e <_Z14Faults_Handlerv+0x56a>
    f16a:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f16e:	20 e0       	ldi	r18, 0x00	; 0
    f170:	30 e0       	ldi	r19, 0x00	; 0
    f172:	48 ec       	ldi	r20, 0xC8	; 200
    f174:	52 e4       	ldi	r21, 0x42	; 66
    f176:	60 91 3d 13 	lds	r22, 0x133D	; 0x80133d <_sPump_Parameter>
    f17a:	70 91 3e 13 	lds	r23, 0x133E	; 0x80133e <_sPump_Parameter+0x1>
    f17e:	80 91 3f 13 	lds	r24, 0x133F	; 0x80133f <_sPump_Parameter+0x2>
    f182:	90 91 40 13 	lds	r25, 0x1340	; 0x801340 <_sPump_Parameter+0x3>
    f186:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
    f18a:	20 e0       	ldi	r18, 0x00	; 0
    f18c:	30 e0       	ldi	r19, 0x00	; 0
    f18e:	40 e7       	ldi	r20, 0x70	; 112
    f190:	51 e4       	ldi	r21, 0x41	; 65
    f192:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    f196:	9b 01       	movw	r18, r22
    f198:	ac 01       	movw	r20, r24
    f19a:	60 91 41 13 	lds	r22, 0x1341	; 0x801341 <_sPump_Parameter+0x4>
    f19e:	70 91 42 13 	lds	r23, 0x1342	; 0x801342 <_sPump_Parameter+0x5>
    f1a2:	80 91 43 13 	lds	r24, 0x1343	; 0x801343 <_sPump_Parameter+0x6>
    f1a6:	90 91 44 13 	lds	r25, 0x1344	; 0x801344 <_sPump_Parameter+0x7>
    f1aa:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
    f1ae:	87 ff       	sbrs	r24, 7
    f1b0:	46 c0       	rjmp	.+140    	; 0xf23e <_Z14Faults_Handlerv+0x63a>
    f1b2:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    f1b6:	98 2f       	mov	r25, r24
    f1b8:	9d 7f       	andi	r25, 0xFD	; 253
    f1ba:	91 30       	cpi	r25, 0x01	; 1
    f1bc:	19 f0       	breq	.+6      	; 0xf1c4 <_Z14Faults_Handlerv+0x5c0>
    f1be:	85 30       	cpi	r24, 0x05	; 5
    f1c0:	09 f0       	breq	.+2      	; 0xf1c4 <_Z14Faults_Handlerv+0x5c0>
    f1c2:	43 c0       	rjmp	.+134    	; 0xf24a <_Z14Faults_Handlerv+0x646>
    f1c4:	8a e0       	ldi	r24, 0x0A	; 10
    f1c6:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
    f1ca:	89 2b       	or	r24, r25
    f1cc:	f1 f5       	brne	.+124    	; 0xf24a <_Z14Faults_Handlerv+0x646>
    f1ce:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
    f1d2:	84 30       	cpi	r24, 0x04	; 4
    f1d4:	d1 f1       	breq	.+116    	; 0xf24a <_Z14Faults_Handlerv+0x646>
    f1d6:	81 e0       	ldi	r24, 0x01	; 1
    f1d8:	80 93 8f 0c 	sts	0x0C8F, r24	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f1dc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f1e0:	81 30       	cpi	r24, 0x01	; 1
    f1e2:	31 f4       	brne	.+12     	; 0xf1f0 <_Z14Faults_Handlerv+0x5ec>
    f1e4:	69 ef       	ldi	r22, 0xF9	; 249
    f1e6:	75 e2       	ldi	r23, 0x25	; 37
    f1e8:	82 e5       	ldi	r24, 0x52	; 82
    f1ea:	94 e1       	ldi	r25, 0x14	; 20
    f1ec:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f1f0:	80 91 8e 0c 	lds	r24, 0x0C8E	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f1f4:	84 30       	cpi	r24, 0x04	; 4
    f1f6:	48 f1       	brcs	.+82     	; 0xf24a <_Z14Faults_Handlerv+0x646>
    f1f8:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f1fc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f200:	81 30       	cpi	r24, 0x01	; 1
    f202:	51 f4       	brne	.+20     	; 0xf218 <_Z14Faults_Handlerv+0x614>
    f204:	69 ee       	ldi	r22, 0xE9	; 233
    f206:	75 e2       	ldi	r23, 0x25	; 37
    f208:	82 e5       	ldi	r24, 0x52	; 82
    f20a:	94 e1       	ldi	r25, 0x14	; 20
    f20c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f210:	82 e5       	ldi	r24, 0x52	; 82
    f212:	94 e1       	ldi	r25, 0x14	; 20
    f214:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    f218:	84 e0       	ldi	r24, 0x04	; 4
    f21a:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
    f21e:	84 e6       	ldi	r24, 0x64	; 100
    f220:	90 e0       	ldi	r25, 0x00	; 0
    f222:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    f226:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
    f22a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    f22e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    f232:	82 60       	ori	r24, 0x02	; 2
    f234:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    f238:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
    f23c:	06 c0       	rjmp	.+12     	; 0xf24a <_Z14Faults_Handlerv+0x646>
    f23e:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f242:	84 30       	cpi	r24, 0x04	; 4
    f244:	11 f4       	brne	.+4      	; 0xf24a <_Z14Faults_Handlerv+0x646>
    f246:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f24a:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ14Faults_HandlervE12fault_occure>
    f24e:	81 11       	cpse	r24, r1
    f250:	02 c0       	rjmp	.+4      	; 0xf256 <_Z14Faults_Handlerv+0x652>
    f252:	10 92 8e 0c 	sts	0x0C8E, r1	; 0x800c8e <_ZZ14Faults_HandlervE18faults_check_timer>
    f256:	ff 90       	pop	r15
    f258:	ef 90       	pop	r14
    f25a:	df 90       	pop	r13
    f25c:	cf 90       	pop	r12
    f25e:	bf 90       	pop	r11
    f260:	af 90       	pop	r10
    f262:	9f 90       	pop	r9
    f264:	8f 90       	pop	r8
    f266:	7f 90       	pop	r7
    f268:	6f 90       	pop	r6
    f26a:	5f 90       	pop	r5
    f26c:	4f 90       	pop	r4
    f26e:	08 95       	ret

0000f270 <_Z18Local_Time_Settingv>:
    f270:	0f 93       	push	r16
    f272:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
    f276:	6e e6       	ldi	r22, 0x6E	; 110
    f278:	75 e2       	ldi	r23, 0x25	; 37
    f27a:	8f e0       	ldi	r24, 0x0F	; 15
    f27c:	96 e1       	ldi	r25, 0x16	; 22
    f27e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f282:	02 e0       	ldi	r16, 0x02	; 2
    f284:	28 eb       	ldi	r18, 0xB8	; 184
    f286:	3b e0       	ldi	r19, 0x0B	; 11
    f288:	40 e0       	ldi	r20, 0x00	; 0
    f28a:	50 e0       	ldi	r21, 0x00	; 0
    f28c:	6e e1       	ldi	r22, 0x1E	; 30
    f28e:	73 e0       	ldi	r23, 0x03	; 3
    f290:	80 e0       	ldi	r24, 0x00	; 0
    f292:	90 e0       	ldi	r25, 0x00	; 0
    f294:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    f298:	88 23       	and	r24, r24
    f29a:	c1 f1       	breq	.+112    	; 0xf30c <_Z18Local_Time_Settingv+0x9c>
    f29c:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
    f2a0:	69 e6       	ldi	r22, 0x69	; 105
    f2a2:	75 e2       	ldi	r23, 0x25	; 37
    f2a4:	8f e0       	ldi	r24, 0x0F	; 15
    f2a6:	96 e1       	ldi	r25, 0x16	; 22
    f2a8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f2ac:	28 eb       	ldi	r18, 0xB8	; 184
    f2ae:	3b e0       	ldi	r19, 0x0B	; 11
    f2b0:	40 e0       	ldi	r20, 0x00	; 0
    f2b2:	50 e0       	ldi	r21, 0x00	; 0
    f2b4:	6e e1       	ldi	r22, 0x1E	; 30
    f2b6:	73 e0       	ldi	r23, 0x03	; 3
    f2b8:	80 e0       	ldi	r24, 0x00	; 0
    f2ba:	90 e0       	ldi	r25, 0x00	; 0
    f2bc:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    f2c0:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
    f2c4:	60 e6       	ldi	r22, 0x60	; 96
    f2c6:	75 e2       	ldi	r23, 0x25	; 37
    f2c8:	8f e0       	ldi	r24, 0x0F	; 15
    f2ca:	96 e1       	ldi	r25, 0x16	; 22
    f2cc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f2d0:	20 e1       	ldi	r18, 0x10	; 16
    f2d2:	37 e2       	ldi	r19, 0x27	; 39
    f2d4:	40 e0       	ldi	r20, 0x00	; 0
    f2d6:	50 e0       	ldi	r21, 0x00	; 0
    f2d8:	6e e1       	ldi	r22, 0x1E	; 30
    f2da:	73 e0       	ldi	r23, 0x03	; 3
    f2dc:	80 e0       	ldi	r24, 0x00	; 0
    f2de:	90 e0       	ldi	r25, 0x00	; 0
    f2e0:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    f2e4:	81 11       	cpse	r24, r1
    f2e6:	15 c0       	rjmp	.+42     	; 0xf312 <_Z18Local_Time_Settingv+0xa2>
    f2e8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f2ec:	81 30       	cpi	r24, 0x01	; 1
    f2ee:	51 f4       	brne	.+20     	; 0xf304 <_Z18Local_Time_Settingv+0x94>
    f2f0:	63 e5       	ldi	r22, 0x53	; 83
    f2f2:	75 e2       	ldi	r23, 0x25	; 37
    f2f4:	82 e5       	ldi	r24, 0x52	; 82
    f2f6:	94 e1       	ldi	r25, 0x14	; 20
    f2f8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f2fc:	82 e5       	ldi	r24, 0x52	; 82
    f2fe:	94 e1       	ldi	r25, 0x14	; 20
    f300:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    f304:	81 e0       	ldi	r24, 0x01	; 1
    f306:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0xaf>
    f30a:	03 c0       	rjmp	.+6      	; 0xf312 <_Z18Local_Time_Settingv+0xa2>
    f30c:	81 e0       	ldi	r24, 0x01	; 1
    f30e:	80 93 18 0c 	sts	0x0C18, r24	; 0x800c18 <_sGSM_Query+0x5>
    f312:	0f 91       	pop	r16
    f314:	08 95       	ret

0000f316 <_Z21Exra_Plot_Data_EEPROMh>:
    f316:	cf 92       	push	r12
    f318:	df 92       	push	r13
    f31a:	ef 92       	push	r14
    f31c:	ff 92       	push	r15
    f31e:	0f 93       	push	r16
    f320:	1f 93       	push	r17
    f322:	cf 93       	push	r28
    f324:	df 93       	push	r29
    f326:	1f 92       	push	r1
    f328:	1f 92       	push	r1
    f32a:	cd b7       	in	r28, 0x3d	; 61
    f32c:	de b7       	in	r29, 0x3e	; 62
    f32e:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f332:	08 2f       	mov	r16, r24
    f334:	10 e0       	ldi	r17, 0x00	; 0
    f336:	91 30       	cpi	r25, 0x01	; 1
    f338:	d9 f0       	breq	.+54     	; 0xf370 <_Z21Exra_Plot_Data_EEPROMh+0x5a>
    f33a:	01 50       	subi	r16, 0x01	; 1
    f33c:	11 09       	sbc	r17, r1
    f33e:	8e e1       	ldi	r24, 0x1E	; 30
    f340:	80 9f       	mul	r24, r16
    f342:	90 01       	movw	r18, r0
    f344:	81 9f       	mul	r24, r17
    f346:	30 0d       	add	r19, r0
    f348:	11 24       	eor	r1, r1
    f34a:	79 01       	movw	r14, r18
    f34c:	8f e0       	ldi	r24, 0x0F	; 15
    f34e:	e8 1a       	sub	r14, r24
    f350:	86 ef       	ldi	r24, 0xF6	; 246
    f352:	f8 0a       	sbc	r15, r24
    f354:	8b e1       	ldi	r24, 0x1B	; 27
    f356:	80 9f       	mul	r24, r16
    f358:	a0 01       	movw	r20, r0
    f35a:	81 9f       	mul	r24, r17
    f35c:	50 0d       	add	r21, r0
    f35e:	11 24       	eor	r1, r1
    f360:	fa 01       	movw	r30, r20
    f362:	ef 57       	subi	r30, 0x7F	; 127
    f364:	f2 4f       	sbci	r31, 0xF2	; 242
    f366:	6f 01       	movw	r12, r30
    f368:	89 01       	movw	r16, r18
    f36a:	04 5f       	subi	r16, 0xF4	; 244
    f36c:	15 4f       	sbci	r17, 0xF5	; 245
    f36e:	5f c0       	rjmp	.+190    	; 0xf42e <_Z21Exra_Plot_Data_EEPROMh+0x118>
    f370:	82 e5       	ldi	r24, 0x52	; 82
    f372:	94 e1       	ldi	r25, 0x14	; 20
    f374:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
    f378:	65 e4       	ldi	r22, 0x45	; 69
    f37a:	75 e2       	ldi	r23, 0x25	; 37
    f37c:	82 e5       	ldi	r24, 0x52	; 82
    f37e:	94 e1       	ldi	r25, 0x14	; 20
    f380:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    f384:	4a e0       	ldi	r20, 0x0A	; 10
    f386:	50 e0       	ldi	r21, 0x00	; 0
    f388:	b8 01       	movw	r22, r16
    f38a:	82 e5       	ldi	r24, 0x52	; 82
    f38c:	94 e1       	ldi	r25, 0x14	; 20
    f38e:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
    f392:	82 e5       	ldi	r24, 0x52	; 82
    f394:	94 e1       	ldi	r25, 0x14	; 20
    f396:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
    f39a:	82 e5       	ldi	r24, 0x52	; 82
    f39c:	94 e1       	ldi	r25, 0x14	; 20
    f39e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    f3a2:	6e e2       	ldi	r22, 0x2E	; 46
    f3a4:	75 e2       	ldi	r23, 0x25	; 37
    f3a6:	82 e5       	ldi	r24, 0x52	; 82
    f3a8:	94 e1       	ldi	r25, 0x14	; 20
    f3aa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f3ae:	69 e1       	ldi	r22, 0x19	; 25
    f3b0:	75 e2       	ldi	r23, 0x25	; 37
    f3b2:	82 e5       	ldi	r24, 0x52	; 82
    f3b4:	94 e1       	ldi	r25, 0x14	; 20
    f3b6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    f3ba:	c8 01       	movw	r24, r16
    f3bc:	01 97       	sbiw	r24, 0x01	; 1
    f3be:	2b e1       	ldi	r18, 0x1B	; 27
    f3c0:	28 9f       	mul	r18, r24
    f3c2:	60 01       	movw	r12, r0
    f3c4:	29 9f       	mul	r18, r25
    f3c6:	d0 0c       	add	r13, r0
    f3c8:	11 24       	eor	r1, r1
    f3ca:	f6 01       	movw	r30, r12
    f3cc:	ef 57       	subi	r30, 0x7F	; 127
    f3ce:	f2 4f       	sbci	r31, 0xF2	; 242
    f3d0:	4a e0       	ldi	r20, 0x0A	; 10
    f3d2:	50 e0       	ldi	r21, 0x00	; 0
    f3d4:	61 81       	ldd	r22, Z+1	; 0x01
    f3d6:	82 e5       	ldi	r24, 0x52	; 82
    f3d8:	94 e1       	ldi	r25, 0x14	; 20
    f3da:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
    f3de:	82 e5       	ldi	r24, 0x52	; 82
    f3e0:	94 e1       	ldi	r25, 0x14	; 20
    f3e2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    f3e6:	e1 2c       	mov	r14, r1
    f3e8:	f1 2c       	mov	r15, r1
    f3ea:	82 e5       	ldi	r24, 0x52	; 82
    f3ec:	94 e1       	ldi	r25, 0x14	; 20
    f3ee:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
    f3f2:	6d e0       	ldi	r22, 0x0D	; 13
    f3f4:	75 e2       	ldi	r23, 0x25	; 37
    f3f6:	82 e5       	ldi	r24, 0x52	; 82
    f3f8:	94 e1       	ldi	r25, 0x14	; 20
    f3fa:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
    f3fe:	f7 01       	movw	r30, r14
    f400:	ec 0d       	add	r30, r12
    f402:	fd 1d       	adc	r31, r13
    f404:	ef 57       	subi	r30, 0x7F	; 127
    f406:	f2 4f       	sbci	r31, 0xF2	; 242
    f408:	4a e0       	ldi	r20, 0x0A	; 10
    f40a:	50 e0       	ldi	r21, 0x00	; 0
    f40c:	65 81       	ldd	r22, Z+5	; 0x05
    f40e:	82 e5       	ldi	r24, 0x52	; 82
    f410:	94 e1       	ldi	r25, 0x14	; 20
    f412:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
    f416:	82 e5       	ldi	r24, 0x52	; 82
    f418:	94 e1       	ldi	r25, 0x14	; 20
    f41a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    f41e:	ff ef       	ldi	r31, 0xFF	; 255
    f420:	ef 1a       	sub	r14, r31
    f422:	ff 0a       	sbc	r15, r31
    f424:	85 e0       	ldi	r24, 0x05	; 5
    f426:	e8 16       	cp	r14, r24
    f428:	f1 04       	cpc	r15, r1
    f42a:	f9 f6       	brne	.-66     	; 0xf3ea <_Z21Exra_Plot_Data_EEPROMh+0xd4>
    f42c:	86 cf       	rjmp	.-244    	; 0xf33a <_Z21Exra_Plot_Data_EEPROMh+0x24>
    f42e:	f6 01       	movw	r30, r12
    f430:	61 91       	ld	r22, Z+
    f432:	6f 01       	movw	r12, r30
    f434:	fa 82       	std	Y+2, r15	; 0x02
    f436:	e9 82       	std	Y+1, r14	; 0x01
    f438:	ce 01       	movw	r24, r28
    f43a:	01 96       	adiw	r24, 0x01	; 1
    f43c:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
    f440:	ff ef       	ldi	r31, 0xFF	; 255
    f442:	ef 1a       	sub	r14, r31
    f444:	ff 0a       	sbc	r15, r31
    f446:	e0 16       	cp	r14, r16
    f448:	f1 06       	cpc	r15, r17
    f44a:	89 f7       	brne	.-30     	; 0xf42e <_Z21Exra_Plot_Data_EEPROMh+0x118>
    f44c:	0f 90       	pop	r0
    f44e:	0f 90       	pop	r0
    f450:	df 91       	pop	r29
    f452:	cf 91       	pop	r28
    f454:	1f 91       	pop	r17
    f456:	0f 91       	pop	r16
    f458:	ff 90       	pop	r15
    f45a:	ef 90       	pop	r14
    f45c:	df 90       	pop	r13
    f45e:	cf 90       	pop	r12
    f460:	08 95       	ret

0000f462 <_Z11Read_EEPROMv>:
	
}


void Read_EEPROM(void)
{
    f462:	4f 92       	push	r4
    f464:	5f 92       	push	r5
    f466:	6f 92       	push	r6
    f468:	7f 92       	push	r7
    f46a:	8f 92       	push	r8
    f46c:	9f 92       	push	r9
    f46e:	af 92       	push	r10
    f470:	bf 92       	push	r11
    f472:	cf 92       	push	r12
    f474:	df 92       	push	r13
    f476:	ef 92       	push	r14
    f478:	ff 92       	push	r15
    f47a:	0f 93       	push	r16
    f47c:	1f 93       	push	r17
    f47e:	cf 93       	push	r28
    f480:	df 93       	push	r29
    f482:	cd b7       	in	r28, 0x3d	; 61
    f484:	de b7       	in	r29, 0x3e	; 62
    f486:	e4 97       	sbiw	r28, 0x34	; 52
    f488:	0f b6       	in	r0, 0x3f	; 63
    f48a:	f8 94       	cli
    f48c:	de bf       	out	0x3e, r29	; 62
    f48e:	0f be       	out	0x3f, r0	; 63
    f490:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_data[50],count=0,i=0,j=0;
	
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
    f492:	6d e3       	ldi	r22, 0x3D	; 61
    f494:	73 e1       	ldi	r23, 0x13	; 19
    f496:	8f e0       	ldi	r24, 0x0F	; 15
    f498:	95 e0       	ldi	r25, 0x05	; 5
    f49a:	0e 94 10 72 	call	0xe420	; 0xe420 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    f49e:	a7 e6       	ldi	r26, 0x67	; 103
    f4a0:	ea 2e       	mov	r14, r26
    f4a2:	a3 e1       	ldi	r26, 0x13	; 19
    f4a4:	fa 2e       	mov	r15, r26
    f4a6:	67 01       	movw	r12, r14
    f4a8:	00 e0       	ldi	r16, 0x00	; 0
    f4aa:	10 e0       	ldi	r17, 0x00	; 0
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f4ac:	ce 01       	movw	r24, r28
    f4ae:	01 96       	adiw	r24, 0x01	; 1
    f4b0:	3c 01       	movw	r6, r24
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f4b2:	1a 83       	std	Y+2, r17	; 0x02
    f4b4:	09 83       	std	Y+1, r16	; 0x01
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f4b6:	c3 01       	movw	r24, r6
    f4b8:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f4bc:	f6 01       	movw	r30, r12
    f4be:	81 93       	st	Z+, r24
    f4c0:	6f 01       	movw	r12, r30
    f4c2:	0f 5f       	subi	r16, 0xFF	; 255
    f4c4:	1f 4f       	sbci	r17, 0xFF	; 255
    f4c6:	07 30       	cpi	r16, 0x07	; 7
    f4c8:	11 05       	cpc	r17, r1
    f4ca:	99 f7       	brne	.-26     	; 0xf4b2 <_Z11Read_EEPROMv+0x50>
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);
    f4cc:	f7 01       	movw	r30, r14
    f4ce:	61 91       	ld	r22, Z+
    f4d0:	7f 01       	movw	r14, r30
    f4d2:	82 e5       	ldi	r24, 0x52	; 82
    f4d4:	94 e1       	ldi	r25, 0x14	; 20
    f4d6:	0e 94 d2 cf 	call	0x19fa4	; 0x19fa4 <_ZN14HardwareSerial5writeEh>
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
    f4da:	fd e6       	ldi	r31, 0x6D	; 109
    f4dc:	ef 16       	cp	r14, r31
    f4de:	f3 e1       	ldi	r31, 0x13	; 19
    f4e0:	ff 06       	cpc	r15, r31
    f4e2:	a1 f7       	brne	.-24     	; 0xf4cc <_Z11Read_EEPROMv+0x6a>
    f4e4:	ed ef       	ldi	r30, 0xFD	; 253
    f4e6:	ce 2e       	mov	r12, r30
    f4e8:	ec e0       	ldi	r30, 0x0C	; 12
    f4ea:	de 2e       	mov	r13, r30
    f4ec:	08 e0       	ldi	r16, 0x08	; 8
    f4ee:	10 e0       	ldi	r17, 0x00	; 0
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		memset(temp_data,0,sizeof(temp_data));
    f4f0:	f2 e3       	ldi	r31, 0x32	; 50
    f4f2:	5f 2e       	mov	r5, r31
    f4f4:	f3 01       	movw	r30, r6
    f4f6:	35 2d       	mov	r19, r5
    f4f8:	11 92       	st	Z+, r1
    f4fa:	3a 95       	dec	r19
    f4fc:	e9 f7       	brne	.-6      	; 0xf4f8 <_Z11Read_EEPROMv+0x96>
    f4fe:	48 01       	movw	r8, r16
    f500:	86 e0       	ldi	r24, 0x06	; 6
    f502:	88 0e       	add	r8, r24
    f504:	91 1c       	adc	r9, r1
    f506:	56 01       	movw	r10, r12
    f508:	78 01       	movw	r14, r16
    f50a:	fc aa       	std	Y+52, r15	; 0x34
    f50c:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f50e:	ce 01       	movw	r24, r28
    f510:	c3 96       	adiw	r24, 0x33	; 51
    f512:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f516:	f5 01       	movw	r30, r10
    f518:	81 93       	st	Z+, r24
    f51a:	5f 01       	movw	r10, r30
    f51c:	ff ef       	ldi	r31, 0xFF	; 255
    f51e:	ef 1a       	sub	r14, r31
    f520:	ff 0a       	sbc	r15, r31
    f522:	8e 14       	cp	r8, r14
    f524:	9f 04       	cpc	r9, r15
    f526:	89 f7       	brne	.-30     	; 0xf50a <_Z11Read_EEPROMv+0xa8>
    f528:	08 5d       	subi	r16, 0xD8	; 216
    f52a:	1f 4f       	sbci	r17, 0xFF	; 255
    f52c:	36 e0       	ldi	r19, 0x06	; 6
    f52e:	c3 0e       	add	r12, r19
    f530:	d1 1c       	adc	r13, r1
	/************************* Read FC value ******************************/
	//_kEEPROM_READ(_kEEPROM_LOC_FC_VALUE,_sRuble_Parameters.FC_Value_Deafault);
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    f532:	08 33       	cpi	r16, 0x38	; 56
    f534:	82 e0       	ldi	r24, 0x02	; 2
    f536:	18 07       	cpc	r17, r24
    f538:	e9 f6       	brne	.-70     	; 0xf4f4 <_Z11Read_EEPROMv+0x92>
    f53a:	77 eb       	ldi	r23, 0xB7	; 183
    f53c:	67 2e       	mov	r6, r23
    f53e:	7b e0       	ldi	r23, 0x0B	; 11
    f540:	77 2e       	mov	r7, r23
    f542:	63 01       	movw	r12, r6
    f544:	0a ec       	ldi	r16, 0xCA	; 202
    f546:	13 e0       	ldi	r17, 0x03	; 3
    f548:	48 01       	movw	r8, r16
    f54a:	9d e0       	ldi	r25, 0x0D	; 13
    f54c:	89 0e       	add	r8, r25
    f54e:	91 1c       	adc	r9, r1
    f550:	56 01       	movw	r10, r12
    f552:	78 01       	movw	r14, r16
    f554:	fc aa       	std	Y+52, r15	; 0x34
    f556:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f558:	ce 01       	movw	r24, r28
    f55a:	c3 96       	adiw	r24, 0x33	; 51
    f55c:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f560:	f5 01       	movw	r30, r10
    f562:	81 93       	st	Z+, r24
    f564:	5f 01       	movw	r10, r30
    f566:	ff ef       	ldi	r31, 0xFF	; 255
    f568:	ef 1a       	sub	r14, r31
    f56a:	ff 0a       	sbc	r15, r31
    f56c:	e8 14       	cp	r14, r8
    f56e:	f9 04       	cpc	r15, r9
    f570:	89 f7       	brne	.-30     	; 0xf554 <_Z11Read_EEPROMv+0xf2>
    f572:	0c 5e       	subi	r16, 0xEC	; 236
    f574:	1f 4f       	sbci	r17, 0xFF	; 255
    f576:	3d e0       	ldi	r19, 0x0D	; 13
    f578:	c3 0e       	add	r12, r19
    f57a:	d1 1c       	adc	r13, r1
		_kEEPROM_READ(_kEEPROM_LOC_LIRA_SENSOR_DATA(i),_sLira_Node_Param[i]);
	}
	
	/*************************** Update all euro valve data ********************************/
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f57c:	06 35       	cpi	r16, 0x56	; 86
    f57e:	84 e0       	ldi	r24, 0x04	; 4
    f580:	18 07       	cpc	r17, r24
    f582:	11 f7       	brne	.-60     	; 0xf548 <_Z11Read_EEPROMv+0xe6>
    f584:	82 e1       	ldi	r24, 0x12	; 18
    f586:	9c e0       	ldi	r25, 0x0C	; 12
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_sEuro_Valve_Param[i].Euro_Valve_Status = _kUNDEFINED;
    f588:	24 e0       	ldi	r18, 0x04	; 4
    f58a:	f3 01       	movw	r30, r6
    f58c:	22 87       	std	Z+10, r18	; 0x0a
    f58e:	fd e0       	ldi	r31, 0x0D	; 13
    f590:	6f 0e       	add	r6, r31
    f592:	71 1c       	adc	r7, r1
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f594:	86 15       	cp	r24, r6
    f596:	97 05       	cpc	r25, r7
    f598:	c1 f7       	brne	.-16     	; 0xf58a <_Z11Read_EEPROMv+0x128>
	/******************************************* update hardware version **************************/
	//_kEEPROM_READ(_kEEPROM_LOC_HARDWARE_VESRION,_sRuble_Parameters.Hardware_Version);
	
	
	/******************************************* update operation mode **************************/
	_kEEPROM_READ(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f59a:	6e e6       	ldi	r22, 0x6E	; 110
    f59c:	73 e1       	ldi	r23, 0x13	; 19
    f59e:	88 ed       	ldi	r24, 0xD8	; 216
    f5a0:	94 e0       	ldi	r25, 0x04	; 4
    f5a2:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	switch(_sRuble_Parameters.Operation_Mode)
    f5a6:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    f5aa:	83 30       	cpi	r24, 0x03	; 3
    f5ac:	99 f0       	breq	.+38     	; 0xf5d4 <_Z11Read_EEPROMv+0x172>
    f5ae:	28 f4       	brcc	.+10     	; 0xf5ba <_Z11Read_EEPROMv+0x158>
    f5b0:	81 30       	cpi	r24, 0x01	; 1
    f5b2:	39 f0       	breq	.+14     	; 0xf5c2 <_Z11Read_EEPROMv+0x160>
    f5b4:	82 30       	cpi	r24, 0x02	; 2
    f5b6:	d1 f1       	breq	.+116    	; 0xf62c <_Z11Read_EEPROMv+0x1ca>
    f5b8:	42 c0       	rjmp	.+132    	; 0xf63e <_Z11Read_EEPROMv+0x1dc>
    f5ba:	84 30       	cpi	r24, 0x04	; 4
    f5bc:	b9 f1       	breq	.+110    	; 0xf62c <_Z11Read_EEPROMv+0x1ca>
    f5be:	85 30       	cpi	r24, 0x05	; 5
    f5c0:	f1 f5       	brne	.+124    	; 0xf63e <_Z11Read_EEPROMv+0x1dc>
	{
		case _eOPER_MOD_AUTO:
		case _eOPER_MOD_SCHEDULER:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f5c2:	85 e0       	ldi	r24, 0x05	; 5
    f5c4:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f5c8:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    f5cc:	8e 7f       	andi	r24, 0xFE	; 254
    f5ce:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
    f5d2:	38 c0       	rjmp	.+112    	; 0xf644 <_Z11Read_EEPROMv+0x1e2>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
		}break;
		
		case _eOPER_MOD_TIMER:
		{
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f5d4:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    f5d8:	8e 7f       	andi	r24, 0xFE	; 254
    f5da:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f5de:	84 e0       	ldi	r24, 0x04	; 4
    f5e0:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
			
			_kEEPROM_READ(_kTIMER_IRRIGATING_PLOT,_sRuble_Parameters.Temp_Irrigating_Plot);
    f5e4:	60 ef       	ldi	r22, 0xF0	; 240
    f5e6:	73 e1       	ldi	r23, 0x13	; 19
    f5e8:	86 e9       	ldi	r24, 0x96	; 150
    f5ea:	9c e0       	ldi	r25, 0x0C	; 12
    f5ec:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f5f0:	88 e9       	ldi	r24, 0x98	; 152
    f5f2:	9c e0       	ldi	r25, 0x0C	; 12
    f5f4:	9c ab       	std	Y+52, r25	; 0x34
    f5f6:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f5f8:	ce 01       	movw	r24, r28
    f5fa:	c3 96       	adiw	r24, 0x33	; 51
    f5fc:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f600:	80 93 5d 13 	sts	0x135D, r24	; 0x80135d <_sRuble_Parameters+0x16>
    f604:	89 e9       	ldi	r24, 0x99	; 153
    f606:	9c e0       	ldi	r25, 0x0C	; 12
    f608:	9c ab       	std	Y+52, r25	; 0x34
    f60a:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f60c:	ce 01       	movw	r24, r28
    f60e:	c3 96       	adiw	r24, 0x33	; 51
    f610:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f614:	80 93 5e 13 	sts	0x135E, r24	; 0x80135e <_sRuble_Parameters+0x17>
			_kEEPROM_READ(_kPUMP_REMAINING_TIME,_sRuble_Parameters.Pump_Run_Timer);
			//_sRuble_Parameters.Temp_Irrigating_Plot = _sRuble_Parameters.Irrigating_Plot;
			_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    f618:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
    f61c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
    f620:	88 60       	ori	r24, 0x08	; 8
    f622:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
    f626:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
		}break;
    f62a:	15 c0       	rjmp	.+42     	; 0xf656 <_Z11Read_EEPROMv+0x1f4>
		
		case _eOPER_MOD_MANUAL:
		case _eOPER_MOD_DATALOG:
		{
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f62c:	84 e0       	ldi	r24, 0x04	; 4
    f62e:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
			_sRuble_Parameters.lndications   |= _eRUBL_INDI_AUTO_MANUAL;
    f632:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    f636:	81 60       	ori	r24, 0x01	; 1
    f638:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
		}break;
    f63c:	0c c0       	rjmp	.+24     	; 0xf656 <_Z11Read_EEPROMv+0x1f4>
		default:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f63e:	85 e0       	ldi	r24, 0x05	; 5
    f640:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f644:	84 e0       	ldi	r24, 0x04	; 4
    f646:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f64a:	6e e6       	ldi	r22, 0x6E	; 110
    f64c:	73 e1       	ldi	r23, 0x13	; 19
    f64e:	88 ed       	ldi	r24, 0xD8	; 216
    f650:	94 e0       	ldi	r25, 0x04	; 4
    f652:	0e 94 43 72 	call	0xe486	; 0xe486 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
	/***************************************** Update coefficient 3 *************************************/
	//_kEEPROM_READ(_kEEPROM_LOC_COEFF_3,_sRuble_Parameters.Coeff_3);
	
	
	/***************************************** update the sms alert ***********************************/
	_kEEPROM_READ(_kEEPROM_SMS_ALERT_START,_sRuble_Parameters.SMS_Alert_Start);
    f656:	64 ef       	ldi	r22, 0xF4	; 244
    f658:	73 e1       	ldi	r23, 0x13	; 19
    f65a:	88 e1       	ldi	r24, 0x18	; 24
    f65c:	95 e0       	ldi	r25, 0x05	; 5
    f65e:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	
	/**************************************** update the kill switch **********************************/
	_kEEPROM_READ(_kEEPROM_KILL_SWITCH,_sRuble_Parameters.Kill_Switch);
    f662:	6c ef       	ldi	r22, 0xFC	; 252
    f664:	73 e1       	ldi	r23, 0x13	; 19
    f666:	89 e1       	ldi	r24, 0x19	; 25
    f668:	95 e0       	ldi	r25, 0x05	; 5
    f66a:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f66e:	6e e1       	ldi	r22, 0x1E	; 30
    f670:	e6 2e       	mov	r14, r22
    f672:	69 e0       	ldi	r22, 0x09	; 9
    f674:	f6 2e       	mov	r15, r22
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f676:	0a e1       	ldi	r16, 0x1A	; 26
    f678:	15 e0       	ldi	r17, 0x05	; 5
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f67a:	1c ab       	std	Y+52, r17	; 0x34
    f67c:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f67e:	ce 01       	movw	r24, r28
    f680:	c3 96       	adiw	r24, 0x33	; 51
    f682:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f686:	f7 01       	movw	r30, r14
    f688:	81 93       	st	Z+, r24
    f68a:	7f 01       	movw	r14, r30
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f68c:	0f 5f       	subi	r16, 0xFF	; 255
    f68e:	1f 4f       	sbci	r17, 0xFF	; 255
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f690:	02 39       	cpi	r16, 0x92	; 146
    f692:	f7 e0       	ldi	r31, 0x07	; 7
    f694:	1f 07       	cpc	r17, r31
    f696:	89 f7       	brne	.-30     	; 0xf67a <_Z11Read_EEPROMv+0x218>
	
	/*************************************** read schedule data ******************************************/
	_kEEPROM_READ(_kEEPROM_SCHEDULE_DATA, _sSchedules);
	
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
    f698:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
    f69c:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sSchedules.Fertilizer_On_Scheduler_Status = _kRESET;
    f6a0:	10 92 1f 0b 	sts	0x0B1F, r1	; 0x800b1f <_sSchedules+0x201>
	_sSchedules.New_Schedules_Occur = _kRESET;
    f6a4:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    f6a8:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
    f6ac:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    f6b0:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
	_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    f6b4:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
	
	for(unsigned char tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		_sSchedules.Running_Tank[tank_number] = _kRESET;
    f6b8:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
    f6bc:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
    f6c0:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
	
	
	
	
	
	if(_sSchedules.Schedule_Enable)   /* schedules are enable then change the mode from auto to scheduler */
    f6c4:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
    f6c8:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
    f6cc:	99 23       	and	r25, r25
    f6ce:	21 f1       	breq	.+72     	; 0xf718 <_Z11Read_EEPROMv+0x2b6>
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f6d0:	81 30       	cpi	r24, 0x01	; 1
    f6d2:	11 f0       	breq	.+4      	; 0xf6d8 <_Z11Read_EEPROMv+0x276>
    f6d4:	85 30       	cpi	r24, 0x05	; 5
    f6d6:	89 f4       	brne	.+34     	; 0xf6fa <_Z11Read_EEPROMv+0x298>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f6d8:	85 e0       	ldi	r24, 0x05	; 5
    f6da:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f6de:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    f6e2:	8e 7f       	andi	r24, 0xFE	; 254
    f6e4:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f6e8:	84 e0       	ldi	r24, 0x04	; 4
    f6ea:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
				_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f6ee:	6e e6       	ldi	r22, 0x6E	; 110
    f6f0:	73 e1       	ldi	r23, 0x13	; 19
    f6f2:	88 ed       	ldi	r24, 0xD8	; 216
    f6f4:	94 e0       	ldi	r25, 0x04	; 4
    f6f6:	0e 94 43 72 	call	0xe486	; 0xe486 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    f6fa:	01 e8       	ldi	r16, 0x81	; 129
    f6fc:	1d e0       	ldi	r17, 0x0D	; 13
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f6fe:	21 ef       	ldi	r18, 0xF1	; 241
    f700:	e2 2e       	mov	r14, r18
    f702:	29 e0       	ldi	r18, 0x09	; 9
    f704:	f2 2e       	mov	r15, r18
    f706:	3e ef       	ldi	r19, 0xFE	; 254
    f708:	73 2e       	mov	r7, r19
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
				_kSERIAL_MON_CLEAR();
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f70a:	66 24       	eor	r6, r6
    f70c:	63 94       	inc	r6
			
			default:
			{
				if(i < 2 || i > 9)
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    f70e:	45 e0       	ldi	r20, 0x05	; 5
    f710:	54 2e       	mov	r5, r20
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    f712:	52 e0       	ldi	r21, 0x02	; 2
    f714:	45 2e       	mov	r4, r21
    f716:	14 c0       	rjmp	.+40     	; 0xf740 <_Z11Read_EEPROMv+0x2de>
			}break;
		}
	}
	else    /* schedules are not enable then change the mode from scheduler to auto */
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f718:	81 30       	cpi	r24, 0x01	; 1
    f71a:	11 f0       	breq	.+4      	; 0xf720 <_Z11Read_EEPROMv+0x2be>
    f71c:	85 30       	cpi	r24, 0x05	; 5
    f71e:	69 f7       	brne	.-38     	; 0xf6fa <_Z11Read_EEPROMv+0x298>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Manual_Mode_Wait = 0;
    f720:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
    f724:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;   // 5/5
    f728:	85 e0       	ldi	r24, 0x05	; 5
    f72a:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f72e:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    f732:	8e 7f       	andi	r24, 0xFE	; 254
    f734:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f738:	84 e0       	ldi	r24, 0x04	; 4
    f73a:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
			}break;
    f73e:	dd cf       	rjmp	.-70     	; 0xf6fa <_Z11Read_EEPROMv+0x298>
    f740:	47 01       	movw	r8, r14
    f742:	3b e1       	ldi	r19, 0x1B	; 27
    f744:	83 0e       	add	r8, r19
    f746:	91 1c       	adc	r9, r1
    f748:	58 01       	movw	r10, r16
    f74a:	67 01       	movw	r12, r14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f74c:	dc aa       	std	Y+52, r13	; 0x34
    f74e:	cb aa       	std	Y+51, r12	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f750:	ce 01       	movw	r24, r28
    f752:	c3 96       	adiw	r24, 0x33	; 51
    f754:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f758:	f5 01       	movw	r30, r10
    f75a:	81 93       	st	Z+, r24
    f75c:	5f 01       	movw	r10, r30
    f75e:	ff ef       	ldi	r31, 0xFF	; 255
    f760:	cf 1a       	sub	r12, r31
    f762:	df 0a       	sbc	r13, r31
    f764:	8c 14       	cp	r8, r12
    f766:	9d 04       	cpc	r9, r13
    f768:	89 f7       	brne	.-30     	; 0xf74c <_Z11Read_EEPROMv+0x2ea>
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
	{
		_kEEPROM_READ(_kEEPROM_EXTRA_PLOT_DATA(i+1),_sExtra_Plot[i]);
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f76a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f76e:	81 30       	cpi	r24, 0x01	; 1
    f770:	91 f4       	brne	.+36     	; 0xf796 <_Z11Read_EEPROMv+0x334>
		{
			_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number : ");
    f772:	67 ec       	ldi	r22, 0xC7	; 199
    f774:	76 e2       	ldi	r23, 0x26	; 38
    f776:	82 e5       	ldi	r24, 0x52	; 82
    f778:	94 e1       	ldi	r25, 0x14	; 20
    f77a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Extra_Plot_Number);
    f77e:	4a e0       	ldi	r20, 0x0A	; 10
    f780:	50 e0       	ldi	r21, 0x00	; 0
    f782:	f8 01       	movw	r30, r16
    f784:	61 81       	ldd	r22, Z+1	; 0x01
    f786:	82 e5       	ldi	r24, 0x52	; 82
    f788:	94 e1       	ldi	r25, 0x14	; 20
    f78a:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
			_kSERIAL_MON_CLEAR();
    f78e:	82 e5       	ldi	r24, 0x52	; 82
    f790:	94 e1       	ldi	r25, 0x14	; 20
    f792:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_sExtra_Plot[i].Run_Timer)    /* check if timer was set for the extra plot */
    f796:	f8 01       	movw	r30, r16
    f798:	83 81       	ldd	r24, Z+3	; 0x03
    f79a:	94 81       	ldd	r25, Z+4	; 0x04
    f79c:	89 2b       	or	r24, r25
    f79e:	c9 f0       	breq	.+50     	; 0xf7d2 <_Z11Read_EEPROMv+0x370>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f7a0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f7a4:	81 30       	cpi	r24, 0x01	; 1
    f7a6:	99 f4       	brne	.+38     	; 0xf7ce <_Z11Read_EEPROMv+0x36c>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
    f7a8:	6f ea       	ldi	r22, 0xAF	; 175
    f7aa:	76 e2       	ldi	r23, 0x26	; 38
    f7ac:	82 e5       	ldi	r24, 0x52	; 82
    f7ae:	94 e1       	ldi	r25, 0x14	; 20
    f7b0:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
    f7b4:	f8 01       	movw	r30, r16
    f7b6:	63 81       	ldd	r22, Z+3	; 0x03
    f7b8:	74 81       	ldd	r23, Z+4	; 0x04
    f7ba:	4a e0       	ldi	r20, 0x0A	; 10
    f7bc:	50 e0       	ldi	r21, 0x00	; 0
    f7be:	82 e5       	ldi	r24, 0x52	; 82
    f7c0:	94 e1       	ldi	r25, 0x14	; 20
    f7c2:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
				_kSERIAL_MON_CLEAR();
    f7c6:	82 e5       	ldi	r24, 0x52	; 82
    f7c8:	94 e1       	ldi	r25, 0x14	; 20
    f7ca:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f7ce:	f8 01       	movw	r30, r16
    f7d0:	63 86       	std	Z+11, r6	; 0x0b
		}
		
		if(!_sExtra_Plot[i].Run_Timer &&  !_sExtra_Plot[i].One_Touch)   /* if user not took any action earlier */
    f7d2:	f8 01       	movw	r30, r16
    f7d4:	83 81       	ldd	r24, Z+3	; 0x03
    f7d6:	94 81       	ldd	r25, Z+4	; 0x04
    f7d8:	89 2b       	or	r24, r25
    f7da:	a1 f4       	brne	.+40     	; 0xf804 <_Z11Read_EEPROMv+0x3a2>
    f7dc:	82 85       	ldd	r24, Z+10	; 0x0a
    f7de:	81 11       	cpse	r24, r1
    f7e0:	11 c0       	rjmp	.+34     	; 0xf804 <_Z11Read_EEPROMv+0x3a2>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f7e2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f7e6:	81 30       	cpi	r24, 0x01	; 1
    f7e8:	51 f4       	brne	.+20     	; 0xf7fe <_Z11Read_EEPROMv+0x39c>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra not Plot Run Timer : ");
    f7ea:	63 e9       	ldi	r22, 0x93	; 147
    f7ec:	76 e2       	ldi	r23, 0x26	; 38
    f7ee:	82 e5       	ldi	r24, 0x52	; 82
    f7f0:	94 e1       	ldi	r25, 0x14	; 20
    f7f2:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    f7f6:	82 e5       	ldi	r24, 0x52	; 82
    f7f8:	94 e1       	ldi	r25, 0x14	; 20
    f7fa:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    f7fe:	f8 01       	movw	r30, r16
    f800:	62 82       	std	Z+2, r6	; 0x02
			_sExtra_Plot[i].Set_Through_Timer = _kRESET;
    f802:	13 86       	std	Z+11, r1	; 0x0b
		}
		
		_sExtra_Plot[i].On_Off_Status = _kRESET;   /* initially off the status */
    f804:	f8 01       	movw	r30, r16
    f806:	10 82       	st	Z, r1
		
		switch(_sExtra_Plot[i].Status)
    f808:	82 81       	ldd	r24, Z+2	; 0x02
    f80a:	82 30       	cpi	r24, 0x02	; 2
    f80c:	49 f0       	breq	.+18     	; 0xf820 <_Z11Read_EEPROMv+0x3be>
    f80e:	83 30       	cpi	r24, 0x03	; 3
    f810:	11 f4       	brne	.+4      	; 0xf816 <_Z11Read_EEPROMv+0x3b4>
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    f812:	42 82       	std	Z+2, r4	; 0x02
			}break;
    f814:	05 c0       	rjmp	.+10     	; 0xf820 <_Z11Read_EEPROMv+0x3be>
			
			default:
			{
				if(i < 2 || i > 9)
    f816:	f7 e0       	ldi	r31, 0x07	; 7
    f818:	f7 15       	cp	r31, r7
    f81a:	28 f4       	brcc	.+10     	; 0xf826 <_Z11Read_EEPROMv+0x3c4>
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    f81c:	f8 01       	movw	r30, r16
    f81e:	52 82       	std	Z+2, r5	; 0x02
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f820:	c1 2c       	mov	r12, r1
    f822:	d1 2c       	mov	r13, r1
    f824:	0a c0       	rjmp	.+20     	; 0xf83a <_Z11Read_EEPROMv+0x3d8>
					
				}
				else
				{
					_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    f826:	f8 01       	movw	r30, r16
    f828:	62 82       	std	Z+2, r6	; 0x02
    f82a:	fa cf       	rjmp	.-12     	; 0xf820 <_Z11Read_EEPROMv+0x3be>
				}
				//_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
			}break;
		}
		
		for(int k=0;k<_kMAX_VALVE_FOR_1PLOT;k++)
    f82c:	ff ef       	ldi	r31, 0xFF	; 255
    f82e:	cf 1a       	sub	r12, r31
    f830:	df 0a       	sbc	r13, r31
    f832:	35 e0       	ldi	r19, 0x05	; 5
    f834:	c3 16       	cp	r12, r19
    f836:	d1 04       	cpc	r13, r1
    f838:	e9 f0       	breq	.+58     	; 0xf874 <_Z11Read_EEPROMv+0x412>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f83a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    f83e:	81 30       	cpi	r24, 0x01	; 1
    f840:	a9 f7       	brne	.-22     	; 0xf82c <_Z11Read_EEPROMv+0x3ca>
			{
				Serial.println();
    f842:	82 e5       	ldi	r24, 0x52	; 82
    f844:	94 e1       	ldi	r25, 0x14	; 20
    f846:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
				_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    f84a:	67 e8       	ldi	r22, 0x87	; 135
    f84c:	76 e2       	ldi	r23, 0x26	; 38
    f84e:	82 e5       	ldi	r24, 0x52	; 82
    f850:	94 e1       	ldi	r25, 0x14	; 20
    f852:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[i].Euro_Valve_Group[k]);
    f856:	4a e0       	ldi	r20, 0x0A	; 10
    f858:	50 e0       	ldi	r21, 0x00	; 0
    f85a:	f8 01       	movw	r30, r16
    f85c:	ec 0d       	add	r30, r12
    f85e:	fd 1d       	adc	r31, r13
    f860:	65 81       	ldd	r22, Z+5	; 0x05
    f862:	82 e5       	ldi	r24, 0x52	; 82
    f864:	94 e1       	ldi	r25, 0x14	; 20
    f866:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    f86a:	82 e5       	ldi	r24, 0x52	; 82
    f86c:	94 e1       	ldi	r25, 0x14	; 20
    f86e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    f872:	dc cf       	rjmp	.-72     	; 0xf82c <_Z11Read_EEPROMv+0x3ca>
    f874:	05 5e       	subi	r16, 0xE5	; 229
    f876:	1f 4f       	sbci	r17, 0xFF	; 255
    f878:	73 94       	inc	r7
    f87a:	8e e1       	ldi	r24, 0x1E	; 30
    f87c:	e8 0e       	add	r14, r24
    f87e:	f1 1c       	adc	r15, r1
	}
	
	
	/*********************************** update extra plot ***************************/
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    f880:	95 e9       	ldi	r25, 0x95	; 149
    f882:	e9 16       	cp	r14, r25
    f884:	9b e0       	ldi	r25, 0x0B	; 11
    f886:	f9 06       	cpc	r15, r25
    f888:	09 f0       	breq	.+2      	; 0xf88c <_Z11Read_EEPROMv+0x42a>
    f88a:	5a cf       	rjmp	.-332    	; 0xf740 <_Z11Read_EEPROMv+0x2de>
		}
	}
	
	
	
	_kEEPROM_READ(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    f88c:	64 e0       	ldi	r22, 0x04	; 4
    f88e:	74 e1       	ldi	r23, 0x14	; 20
    f890:	81 ea       	ldi	r24, 0xA1	; 161
    f892:	9c e0       	ldi	r25, 0x0C	; 12
    f894:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    f898:	66 e0       	ldi	r22, 0x06	; 6
    f89a:	74 e1       	ldi	r23, 0x14	; 20
    f89c:	88 ea       	ldi	r24, 0xA8	; 168
    f89e:	9c e0       	ldi	r25, 0x0C	; 12
    f8a0:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    f8a4:	67 e0       	ldi	r22, 0x07	; 7
    f8a6:	74 e1       	ldi	r23, 0x14	; 20
    f8a8:	8d ea       	ldi	r24, 0xAD	; 173
    f8aa:	9c e0       	ldi	r25, 0x0C	; 12
    f8ac:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f8b0:	9e e1       	ldi	r25, 0x1E	; 30
    f8b2:	e9 2e       	mov	r14, r25
    f8b4:	94 e1       	ldi	r25, 0x14	; 20
    f8b6:	f9 2e       	mov	r15, r25
    f8b8:	08 e8       	ldi	r16, 0x88	; 136
    f8ba:	1e e0       	ldi	r17, 0x0E	; 14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f8bc:	1c ab       	std	Y+52, r17	; 0x34
    f8be:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f8c0:	ce 01       	movw	r24, r28
    f8c2:	c3 96       	adiw	r24, 0x33	; 51
    f8c4:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f8c8:	f7 01       	movw	r30, r14
    f8ca:	81 93       	st	Z+, r24
    f8cc:	7f 01       	movw	r14, r30
    f8ce:	0f 5f       	subi	r16, 0xFF	; 255
    f8d0:	1f 4f       	sbci	r17, 0xFF	; 255
    f8d2:	0d 38       	cpi	r16, 0x8D	; 141
    f8d4:	fe e0       	ldi	r31, 0x0E	; 14
    f8d6:	1f 07       	cpc	r17, r31
    f8d8:	89 f7       	brne	.-30     	; 0xf8bc <_Z11Read_EEPROMv+0x45a>
	
	_kEEPROM_READ(_kHANDLE_WIRELESS_STATUS_LIST,_sRuble_Parameters.Wireless_Pump_Handle_List);
	
	_kEEPROM_READ(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    f8da:	63 e2       	ldi	r22, 0x23	; 35
    f8dc:	74 e1       	ldi	r23, 0x14	; 20
    f8de:	8b ea       	ldi	r24, 0xAB	; 171
    f8e0:	9e e0       	ldi	r25, 0x0E	; 14
    f8e2:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kRESET || _sRuble_Parameters.Pump_Selected_For_Irrigation > _kMAX_WIRELESS_PUMP+1)
    f8e6:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
    f8ea:	81 50       	subi	r24, 0x01	; 1
    f8ec:	84 30       	cpi	r24, 0x04	; 4
    f8ee:	48 f0       	brcs	.+18     	; 0xf902 <_Z11Read_EEPROMv+0x4a0>
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = _kWIRED_PUMP_NUMBER;
    f8f0:	81 e0       	ldi	r24, 0x01	; 1
    f8f2:	80 93 23 14 	sts	0x1423, r24	; 0x801423 <_sRuble_Parameters+0xdc>
		_kEEPROM_WRITE(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    f8f6:	63 e2       	ldi	r22, 0x23	; 35
    f8f8:	74 e1       	ldi	r23, 0x14	; 20
    f8fa:	8b ea       	ldi	r24, 0xAB	; 171
    f8fc:	9e e0       	ldi	r25, 0x0E	; 14
    f8fe:	0e 94 43 72 	call	0xe486	; 0xe486 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
	}
	
	_kEEPROM_READ(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    f902:	66 e2       	ldi	r22, 0x26	; 38
    f904:	74 e1       	ldi	r23, 0x14	; 20
    f906:	8d ea       	ldi	r24, 0xAD	; 173
    f908:	9e e0       	ldi	r25, 0x0E	; 14
    f90a:	0e 94 10 72 	call	0xe420	; 0xe420 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    f90e:	86 e9       	ldi	r24, 0x96	; 150
    f910:	c8 2e       	mov	r12, r24
    f912:	8b e0       	ldi	r24, 0x0B	; 11
    f914:	d8 2e       	mov	r13, r24
    f916:	0e ea       	ldi	r16, 0xAE	; 174
    f918:	1c e0       	ldi	r17, 0x0C	; 12
    f91a:	48 01       	movw	r8, r16
    f91c:	3b e0       	ldi	r19, 0x0B	; 11
    f91e:	83 0e       	add	r8, r19
    f920:	91 1c       	adc	r9, r1
    f922:	56 01       	movw	r10, r12
    f924:	78 01       	movw	r14, r16
    f926:	fc aa       	std	Y+52, r15	; 0x34
    f928:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f92a:	ce 01       	movw	r24, r28
    f92c:	c3 96       	adiw	r24, 0x33	; 51
    f92e:	0e 94 f3 71 	call	0xe3e6	; 0xe3e6 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f932:	f5 01       	movw	r30, r10
    f934:	81 93       	st	Z+, r24
    f936:	5f 01       	movw	r10, r30
    f938:	ff ef       	ldi	r31, 0xFF	; 255
    f93a:	ef 1a       	sub	r14, r31
    f93c:	ff 0a       	sbc	r15, r31
    f93e:	8e 14       	cp	r8, r14
    f940:	9f 04       	cpc	r9, r15
    f942:	89 f7       	brne	.-30     	; 0xf926 <_Z11Read_EEPROMv+0x4c4>
    f944:	0c 5e       	subi	r16, 0xEC	; 236
    f946:	1f 4f       	sbci	r17, 0xFF	; 255
    f948:	3b e0       	ldi	r19, 0x0B	; 11
    f94a:	c3 0e       	add	r12, r19
    f94c:	d1 1c       	adc	r13, r1
	
	for(unsigned char wl_pump_num=0; wl_pump_num < _kMAX_WIRELESS_PUMP; wl_pump_num++)
    f94e:	0a 3e       	cpi	r16, 0xEA	; 234
    f950:	8c e0       	ldi	r24, 0x0C	; 12
    f952:	18 07       	cpc	r17, r24
    f954:	11 f7       	brne	.-60     	; 0xf91a <_Z11Read_EEPROMv+0x4b8>
	{
		_kEEPROM_READ(_kWIRELESS_PUMP_DATA_SAVE(wl_pump_num), _sWireless_Pump_Param[wl_pump_num]);
	}
	
	_kEEPROM_READ(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    f956:	6a e9       	ldi	r22, 0x9A	; 154
    f958:	7c e0       	ldi	r23, 0x0C	; 12
    f95a:	87 eb       	ldi	r24, 0xB7	; 183
    f95c:	9e e0       	ldi	r25, 0x0E	; 14
    f95e:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
}
    f962:	e4 96       	adiw	r28, 0x34	; 52
    f964:	0f b6       	in	r0, 0x3f	; 63
    f966:	f8 94       	cli
    f968:	de bf       	out	0x3e, r29	; 62
    f96a:	0f be       	out	0x3f, r0	; 63
    f96c:	cd bf       	out	0x3d, r28	; 61
    f96e:	df 91       	pop	r29
    f970:	cf 91       	pop	r28
    f972:	1f 91       	pop	r17
    f974:	0f 91       	pop	r16
    f976:	ff 90       	pop	r15
    f978:	ef 90       	pop	r14
    f97a:	df 90       	pop	r13
    f97c:	cf 90       	pop	r12
    f97e:	bf 90       	pop	r11
    f980:	af 90       	pop	r10
    f982:	9f 90       	pop	r9
    f984:	8f 90       	pop	r8
    f986:	7f 90       	pop	r7
    f988:	6f 90       	pop	r6
    f98a:	5f 90       	pop	r5
    f98c:	4f 90       	pop	r4
    f98e:	08 95       	ret

0000f990 <_Z20Param_Initializationv>:
volatile unsigned int Interrupt_Time_Out;
volatile unsigned char Reading_Time;


void Param_Initialization(void)
{
    f990:	cf 92       	push	r12
    f992:	df 92       	push	r13
    f994:	ef 92       	push	r14
    f996:	ff 92       	push	r15
    f998:	0f 93       	push	r16
    f99a:	1f 93       	push	r17
    f99c:	cf 93       	push	r28
    f99e:	df 93       	push	r29
    f9a0:	00 d0       	rcall	.+0      	; 0xf9a2 <_Z20Param_Initializationv+0x12>
    f9a2:	cd b7       	in	r28, 0x3d	; 61
    f9a4:	de b7       	in	r29, 0x3e	; 62
	char temp = 0;
    f9a6:	1b 82       	std	Y+3, r1	; 0x03
	unsigned int i;
	
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
    f9a8:	62 e8       	ldi	r22, 0x82	; 130
    f9aa:	74 e0       	ldi	r23, 0x04	; 4
    f9ac:	87 e6       	ldi	r24, 0x67	; 103
    f9ae:	93 e1       	ldi	r25, 0x13	; 19
    f9b0:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    f9b4:	87 e6       	ldi	r24, 0x67	; 103
    f9b6:	e8 2e       	mov	r14, r24
    f9b8:	83 e1       	ldi	r24, 0x13	; 19
    f9ba:	f8 2e       	mov	r15, r24
    f9bc:	67 01       	movw	r12, r14
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f9be:	00 e0       	ldi	r16, 0x00	; 0
    f9c0:	10 e0       	ldi	r17, 0x00	; 0
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    f9c2:	f6 01       	movw	r30, r12
    f9c4:	61 91       	ld	r22, Z+
    f9c6:	6f 01       	movw	r12, r30
    f9c8:	1a 83       	std	Y+2, r17	; 0x02
    f9ca:	09 83       	std	Y+1, r16	; 0x01
    f9cc:	ce 01       	movw	r24, r28
    f9ce:	01 96       	adiw	r24, 0x01	; 1
    f9d0:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f9d4:	0f 5f       	subi	r16, 0xFF	; 255
    f9d6:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    f9d8:	07 30       	cpi	r16, 0x07	; 7
    f9da:	11 05       	cpc	r17, r1
    f9dc:	91 f7       	brne	.-28     	; 0xf9c2 <_Z20Param_Initializationv+0x32>
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
    f9de:	82 e5       	ldi	r24, 0x52	; 82
    f9e0:	94 e1       	ldi	r25, 0x14	; 20
    f9e2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	
	_kSERIAL_MON_PRINT_NUM();
    f9e6:	82 e5       	ldi	r24, 0x52	; 82
    f9e8:	94 e1       	ldi	r25, 0x14	; 20
    f9ea:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
    f9ee:	f7 01       	movw	r30, r14
    f9f0:	61 91       	ld	r22, Z+
    f9f2:	7f 01       	movw	r14, r30
    f9f4:	82 e5       	ldi	r24, 0x52	; 82
    f9f6:	94 e1       	ldi	r25, 0x14	; 20
    f9f8:	0e 94 d2 cf 	call	0x19fa4	; 0x19fa4 <_ZN14HardwareSerial5writeEh>
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
	
	_kSERIAL_MON_PRINT_NUM();
	for(i=0;i<6;i++)
    f9fc:	fd e6       	ldi	r31, 0x6D	; 109
    f9fe:	ef 16       	cp	r14, r31
    fa00:	f3 e1       	ldi	r31, 0x13	; 19
    fa02:	ff 06       	cpc	r15, r31
    fa04:	a1 f7       	brne	.-24     	; 0xf9ee <_Z20Param_Initializationv+0x5e>
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
	}
	_kSERIAL_MON_PRINT_NUM();
    fa06:	82 e5       	ldi	r24, 0x52	; 82
    fa08:	94 e1       	ldi	r25, 0x14	; 20
    fa0a:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
	
	Store_MQTT_Pub_Topics();                        /* store all publish topics */
    fa0e:	27 d1       	rcall	.+590    	; 0xfc5e <_Z21Store_MQTT_Pub_Topicsv>
	
	Store_MQTT_Sub_Topics();                        /* store all subscribe topics */
    fa10:	27 d1       	rcall	.+590    	; 0xfc60 <_Z21Store_MQTT_Sub_Topicsv>
    fa12:	0e 94 a0 5e 	call	0xbd40	; 0xbd40 <_Z13Store_All_APNv>
	
	Store_All_APN();                                /* store all operating network's APN */
    fa16:	be 01       	movw	r22, r28
	
	
	_kEEPROM_READ(_kEEPROM_LOC_READ_REGISTRATION,temp);                     /* read that ruble is registered or not */
    fa18:	6d 5f       	subi	r22, 0xFD	; 253
    fa1a:	7f 4f       	sbci	r23, 0xFF	; 255
    fa1c:	84 ef       	ldi	r24, 0xF4	; 244
    fa1e:	94 e0       	ldi	r25, 0x04	; 4
    fa20:	0e 94 f8 71 	call	0xe3f0	; 0xe3f0 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    fa24:	9b 81       	ldd	r25, Y+3	; 0x03

	if(temp == _kCHECK_REGISTRATION)  /* if _kEEPROM_LOC_READ_REGISTRATION location filled with 0x09 it means that ruble controller is already register */
    fa26:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    fa2a:	92 30       	cpi	r25, 0x02	; 2
    fa2c:	81 f4       	brne	.+32     	; 0xfa4e <_Z20Param_Initializationv+0xbe>
    fa2e:	91 e0       	ldi	r25, 0x01	; 1
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_REGISTERED; /* update that ruble is already registered */
    fa30:	90 93 a3 13 	sts	0x13A3, r25	; 0x8013a3 <_sRuble_Parameters+0x5c>
    fa34:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fa36:	e1 f4       	brne	.+56     	; 0xfa70 <_Z20Param_Initializationv+0xe0>
    fa38:	65 e8       	ldi	r22, 0x85	; 133
		{	
			_kSERAIL_MON_WRITE("Ruble is already Registered To Sever");                /* for debugging purpose */
    fa3a:	77 e2       	ldi	r23, 0x27	; 39
    fa3c:	82 e5       	ldi	r24, 0x52	; 82
    fa3e:	94 e1       	ldi	r25, 0x14	; 20
    fa40:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    fa44:	82 e5       	ldi	r24, 0x52	; 82
			_kSERIAL_MON_CLEAR();
    fa46:	94 e1       	ldi	r25, 0x14	; 20
    fa48:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    fa4c:	11 c0       	rjmp	.+34     	; 0xfa70 <_Z20Param_Initializationv+0xe0>
    fa4e:	92 e0       	ldi	r25, 0x02	; 2
		}
	}
	else
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_NOT_REGISTERED;  /* set that ruble is not register to server */
    fa50:	90 93 a3 13 	sts	0x13A3, r25	; 0x8013a3 <_sRuble_Parameters+0x5c>
    fa54:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fa56:	51 f4       	brne	.+20     	; 0xfa6c <_Z20Param_Initializationv+0xdc>
    fa58:	64 e6       	ldi	r22, 0x64	; 100
		{
			_kSERAIL_MON_WRITE("Ruble is not Registered To Sever");                /* for debugging purpose */
    fa5a:	77 e2       	ldi	r23, 0x27	; 39
    fa5c:	82 e5       	ldi	r24, 0x52	; 82
    fa5e:	94 e1       	ldi	r25, 0x14	; 20
    fa60:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    fa64:	82 e5       	ldi	r24, 0x52	; 82
			_kSERIAL_MON_CLEAR();
    fa66:	94 e1       	ldi	r25, 0x14	; 20
    fa68:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    fa6c:	0e 94 b0 85 	call	0x10b60	; 0x10b60 <_Z16Dummy_Data_Storev>
		}
		/****************************** Reset all the epprom location *************************************************/
		Dummy_Data_Store();
    fa70:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	/********************************** Check gsm fault to init the gsm/gprs network and init broker **************************/
	_sRuble_Parameters.Sim_Check = _eSIM_INSERTED;   /* initially set sim is inserted, then we will check sim status using  AT command */
    fa72:	80 93 f6 13 	sts	0x13F6, r24	; 0x8013f6 <_sRuble_Parameters+0xaf>
	
	
	Local_Time_Setting();
    fa76:	fc db       	rcall	.-2056   	; 0xf270 <_Z18Local_Time_Settingv>
    fa78:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
	
	
	if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fa7c:	81 30       	cpi	r24, 0x01	; 1
    fa7e:	e1 f0       	breq	.+56     	; 0xfab8 <_Z20Param_Initializationv+0x128>
    fa80:	90 91 f6 13 	lds	r25, 0x13F6	; 0x8013f6 <_sRuble_Parameters+0xaf>
	{
		if(_sRuble_Parameters.Sim_Check == _eSIM_NOT_INSERTED)
    fa84:	91 30       	cpi	r25, 0x01	; 1
    fa86:	c1 f4       	brne	.+48     	; 0xfab8 <_Z20Param_Initializationv+0x128>
    fa88:	0e 94 59 64 	call	0xc8b2	; 0xc8b2 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fa8c:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: SIM",10,0,5);        /* print company name */
    fa8e:	40 e0       	ldi	r20, 0x00	; 0
    fa90:	6a e0       	ldi	r22, 0x0A	; 10
    fa92:	87 e8       	ldi	r24, 0x87	; 135
    fa94:	95 e0       	ldi	r25, 0x05	; 5
    fa96:	0e 94 2d 64 	call	0xc85a	; 0xc85a <_Z14Lcd_Print_BuffPchhh>
    fa9a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fa9e:	81 30       	cpi	r24, 0x01	; 1
    faa0:	51 f4       	brne	.+20     	; 0xfab6 <_Z20Param_Initializationv+0x126>
    faa2:	6d e4       	ldi	r22, 0x4D	; 77
			{
				_kSERAIL_MON_WRITE("Please Insert Sim Card");  /* for debugging purpose */
    faa4:	77 e2       	ldi	r23, 0x27	; 39
    faa6:	82 e5       	ldi	r24, 0x52	; 82
    faa8:	94 e1       	ldi	r25, 0x14	; 20
    faaa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    faae:	82 e5       	ldi	r24, 0x52	; 82
				_kSERIAL_MON_CLEAR();
    fab0:	94 e1       	ldi	r25, 0x14	; 20
    fab2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    fab6:	ff cf       	rjmp	.-2      	; 0xfab6 <_Z20Param_Initializationv+0x126>
    fab8:	90 91 a1 13 	lds	r25, 0x13A1	; 0x8013a1 <_sRuble_Parameters+0x5a>
			}
			while(1);
		}
	}
	
	if(!(_sRuble_Parameters.Hardware_Faults & _eGSM_INIT_FAIL))
    fabc:	90 fd       	sbrc	r25, 0
    fabe:	09 c0       	rjmp	.+18     	; 0xfad2 <_Z20Param_Initializationv+0x142>
    fac0:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
	{
		_sRuble_Parameters.Display_Update |= _eSEARCHING_FOR_NETWORK;
    fac4:	80 62       	ori	r24, 0x20	; 32
    fac6:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sRuble_Parameters+0x1>
		Display_Update_1();
    faca:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
		Init_Broker();          /* if gsm initialize successfully then call the init_broker() function */
    face:	86 d3       	rcall	.+1804   	; 0x101dc <_Z11Init_Brokerv>
    fad0:	28 c0       	rjmp	.+80     	; 0xfb22 <_Z20Param_Initializationv+0x192>
    fad2:	81 30       	cpi	r24, 0x01	; 1
	}
	else
	{
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fad4:	c1 f0       	breq	.+48     	; 0xfb06 <_Z20Param_Initializationv+0x176>
    fad6:	0e 94 59 64 	call	0xc8b2	; 0xc8b2 <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    fada:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: GSM",10,0,5);        /* print company name */
    fadc:	40 e0       	ldi	r20, 0x00	; 0
    fade:	6a e0       	ldi	r22, 0x0A	; 10
    fae0:	82 e9       	ldi	r24, 0x92	; 146
    fae2:	95 e0       	ldi	r25, 0x05	; 5
    fae4:	0e 94 2d 64 	call	0xc85a	; 0xc85a <_Z14Lcd_Print_BuffPchhh>
    fae8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    faec:	81 30       	cpi	r24, 0x01	; 1
    faee:	51 f4       	brne	.+20     	; 0xfb04 <_Z20Param_Initializationv+0x174>
    faf0:	67 ef       	ldi	r22, 0xF7	; 247
			{
				_kSERAIL_MON_WRITE("NOT REGISTER AND ALSO MODULE NOT WORK, PLEASE CHECK THE MODULE AND RESTART THE DEVICE");  /* for debugging purpose */
    faf2:	76 e2       	ldi	r23, 0x26	; 38
    faf4:	82 e5       	ldi	r24, 0x52	; 82
    faf6:	94 e1       	ldi	r25, 0x14	; 20
    faf8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    fafc:	82 e5       	ldi	r24, 0x52	; 82
				_kSERIAL_MON_CLEAR();
    fafe:	94 e1       	ldi	r25, 0x14	; 20
    fb00:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    fb04:	ff cf       	rjmp	.-2      	; 0xfb04 <_Z20Param_Initializationv+0x174>
    fb06:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
			}
			while(1);
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fb0a:	81 30       	cpi	r24, 0x01	; 1
    fb0c:	51 f4       	brne	.+20     	; 0xfb22 <_Z20Param_Initializationv+0x192>
    fb0e:	6c ed       	ldi	r22, 0xDC	; 220
			{
				_kSERAIL_MON_WRITE("GSM AND MQTT WILL NOT WORK");                /* for debugging purpose */
    fb10:	76 e2       	ldi	r23, 0x26	; 38
    fb12:	82 e5       	ldi	r24, 0x52	; 82
    fb14:	94 e1       	ldi	r25, 0x14	; 20
    fb16:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
    fb1a:	82 e5       	ldi	r24, 0x52	; 82
				_kSERIAL_MON_CLEAR();
    fb1c:	94 e1       	ldi	r25, 0x14	; 20
    fb1e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
		}
	}
	
	Read_EEPROM();                        /* read all the data which is stored in the EEPROM till now */
    fb22:	9f dc       	rcall	.-1730   	; 0xf462 <_Z11Read_EEPROMv>
    fb24:	07 eb       	ldi	r16, 0xB7	; 183
    fb26:	1b e0       	ldi	r17, 0x0B	; 11
    fb28:	e1 2c       	mov	r14, r1
    fb2a:	f1 2c       	mov	r15, r1
    fb2c:	dd 24       	eor	r13, r13
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fb2e:	d3 94       	inc	r13
    fb30:	b8 01       	movw	r22, r16
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
    fb32:	6f 5f       	subi	r22, 0xFF	; 255
    fb34:	7f 4f       	sbci	r23, 0xFF	; 255
    fb36:	c7 01       	movw	r24, r14
    fb38:	8a 55       	subi	r24, 0x5A	; 90
    fb3a:	9c 4e       	sbci	r25, 0xEC	; 236
    fb3c:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
    fb40:	f8 01       	movw	r30, r16
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    fb42:	80 81       	ld	r24, Z
    fb44:	81 11       	cpse	r24, r1
    fb46:	d3 86       	std	Z+11, r13	; 0x0b
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    fb48:	f7 e0       	ldi	r31, 0x07	; 7
    fb4a:	ef 0e       	add	r14, r31
    fb4c:	f1 1c       	adc	r15, r1
    fb4e:	03 5f       	subi	r16, 0xF3	; 243
    fb50:	1f 4f       	sbci	r17, 0xFF	; 255
    fb52:	81 e3       	ldi	r24, 0x31	; 49
	/******************************************************* Read the pump Nominal current **********************************/
	
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    fb54:	e8 16       	cp	r14, r24
    fb56:	f1 04       	cpc	r15, r1
    fb58:	59 f7       	brne	.-42     	; 0xfb30 <_Z20Param_Initializationv+0x1a0>
    fb5a:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
		}
	}
	
	
	/****************************************** set the operation mode if Read EEPROM function is not working *************************/
	switch(_sRuble_Parameters.Operation_Mode)
    fb5e:	81 50       	subi	r24, 0x01	; 1
    fb60:	85 30       	cpi	r24, 0x05	; 5
    fb62:	80 f0       	brcs	.+32     	; 0xfb84 <_Z20Param_Initializationv+0x1f4>
    fb64:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
		{
			
		}break;
		default:
		{
			_sRuble_Parameters.Manual_Mode_Wait = 0;
    fb68:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
    fb6c:	85 e0       	ldi	r24, 0x05	; 5
			_sRuble_Parameters.Operation_Mode   = _eOPER_MOD_SCHEDULER;  // 5/5
    fb6e:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
    fb72:	84 e0       	ldi	r24, 0x04	; 4
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    fb74:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
    fb78:	6e e6       	ldi	r22, 0x6E	; 110
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    fb7a:	73 e1       	ldi	r23, 0x13	; 19
    fb7c:	88 ed       	ldi	r24, 0xD8	; 216
    fb7e:	94 e0       	ldi	r25, 0x04	; 4
    fb80:	0e 94 43 72 	call	0xe486	; 0xe486 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    fb84:	20 e0       	ldi	r18, 0x00	; 0
		}break;
	}
	
	/****************************************** set the CT calibration ************************************************/
	RUBLE_PUMP_CURRENT.current(_kADC_PUMP_CUR, _kCT_CALIBRATION_FACTOR);
    fb86:	30 e0       	ldi	r19, 0x00	; 0
    fb88:	40 ec       	ldi	r20, 0xC0	; 192
    fb8a:	50 e4       	ldi	r21, 0x40	; 64
    fb8c:	65 e4       	ldi	r22, 0x45	; 69
    fb8e:	70 e0       	ldi	r23, 0x00	; 0
    fb90:	81 ea       	ldi	r24, 0xA1	; 161
    fb92:	9c e0       	ldi	r25, 0x0C	; 12
    fb94:	0e 94 9d d5 	call	0x1ab3a	; 0x1ab3a <_ZN13EnergyMonitor7currentEjd>
    fb98:	0f 90       	pop	r0
	
}
    fb9a:	0f 90       	pop	r0
    fb9c:	0f 90       	pop	r0
    fb9e:	df 91       	pop	r29
    fba0:	cf 91       	pop	r28
    fba2:	1f 91       	pop	r17
    fba4:	0f 91       	pop	r16
    fba6:	ff 90       	pop	r15
    fba8:	ef 90       	pop	r14
    fbaa:	df 90       	pop	r13
    fbac:	cf 90       	pop	r12
    fbae:	08 95       	ret

0000fbb0 <_Z17Clear_Serial_Datav>:
    fbb0:	cf 92       	push	r12
	}	
}


void Clear_Serial_Data(void)
{
    fbb2:	df 92       	push	r13
    fbb4:	ef 92       	push	r14
    fbb6:	ff 92       	push	r15
	unsigned long previous;
	previous = millis();
    fbb8:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    fbbc:	6b 01       	movw	r12, r22
    fbbe:	7c 01       	movw	r14, r24
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    fbc0:	8f e0       	ldi	r24, 0x0F	; 15
    fbc2:	96 e1       	ldi	r25, 0x16	; 22
    fbc4:	0e 94 63 cf 	call	0x19ec6	; 0x19ec6 <_ZN14HardwareSerial9availableEv>
    fbc8:	18 16       	cp	r1, r24
    fbca:	19 06       	cpc	r1, r25
    fbcc:	94 f4       	brge	.+36     	; 0xfbf2 <_Z17Clear_Serial_Datav+0x42>
    fbce:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
    fbd2:	dc 01       	movw	r26, r24
    fbd4:	cb 01       	movw	r24, r22
    fbd6:	8c 19       	sub	r24, r12
    fbd8:	9d 09       	sbc	r25, r13
    fbda:	ae 09       	sbc	r26, r14
    fbdc:	bf 09       	sbc	r27, r15
    fbde:	84 36       	cpi	r24, 0x64	; 100
    fbe0:	91 05       	cpc	r25, r1
    fbe2:	a1 05       	cpc	r26, r1
    fbe4:	b1 05       	cpc	r27, r1
    fbe6:	28 f4       	brcc	.+10     	; 0xfbf2 <_Z17Clear_Serial_Datav+0x42>
	{
		_kSERIAL_AT.read(); 
    fbe8:	8f e0       	ldi	r24, 0x0F	; 15
    fbea:	96 e1       	ldi	r25, 0x16	; 22
    fbec:	0e 94 84 cf 	call	0x19f08	; 0x19f08 <_ZN14HardwareSerial4readEv>

void Clear_Serial_Data(void)
{
	unsigned long previous;
	previous = millis();
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    fbf0:	e7 cf       	rjmp	.-50     	; 0xfbc0 <_Z17Clear_Serial_Datav+0x10>
	{
		_kSERIAL_AT.read(); 
	}
}
    fbf2:	ff 90       	pop	r15
    fbf4:	ef 90       	pop	r14
    fbf6:	df 90       	pop	r13
    fbf8:	cf 90       	pop	r12
    fbfa:	08 95       	ret

0000fbfc <_Z23Update_Lira_Sensor_DataPh>:
// 			return 1;    /* if id get matched lira sensor node */
// 		}
// 	}
	
	return 0;           /*  id not matched with any lira sensor node */
}
    fbfc:	80 e0       	ldi	r24, 0x00	; 0
    fbfe:	08 95       	ret

0000fc00 <_Z16Lira_Data_EEPROMh>:


void Lira_Data_EEPROM(unsigned char plot_number)
{
    fc00:	df 92       	push	r13
    fc02:	ef 92       	push	r14
    fc04:	ff 92       	push	r15
    fc06:	0f 93       	push	r16
    fc08:	1f 93       	push	r17
    fc0a:	cf 93       	push	r28
    fc0c:	df 93       	push	r29
	_kEEPROM_WRITE(_kEEPROM_LOC_LIRA_SENSOR_DATA(plot_number), _sLira_Node_Param[plot_number]);
    fc0e:	98 e2       	ldi	r25, 0x28	; 40
    fc10:	89 9f       	mul	r24, r25
    fc12:	90 01       	movw	r18, r0
    fc14:	11 24       	eor	r1, r1
    fc16:	89 01       	movw	r16, r18
    fc18:	08 5f       	subi	r16, 0xF8	; 248
    fc1a:	1f 4f       	sbci	r17, 0xFF	; 255
    fc1c:	96 e0       	ldi	r25, 0x06	; 6
    fc1e:	89 9f       	mul	r24, r25
    fc20:	e0 01       	movw	r28, r0
    fc22:	11 24       	eor	r1, r1
    fc24:	c3 50       	subi	r28, 0x03	; 3
    fc26:	d3 4f       	sbci	r29, 0xF3	; 243
    fc28:	79 01       	movw	r14, r18
    fc2a:	8e e0       	ldi	r24, 0x0E	; 14
    fc2c:	e8 0e       	add	r14, r24
    fc2e:	f1 1c       	adc	r15, r1
    fc30:	d9 90       	ld	r13, Y+

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    fc32:	c8 01       	movw	r24, r16
    fc34:	0e 94 3a ed 	call	0x1da74	; 0x1da74 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    fc38:	d8 16       	cp	r13, r24
    fc3a:	21 f0       	breq	.+8      	; 0xfc44 <_Z16Lira_Data_EEPROMh+0x44>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    fc3c:	6d 2d       	mov	r22, r13
    fc3e:	c8 01       	movw	r24, r16
    fc40:	0e 94 42 ed 	call	0x1da84	; 0x1da84 <eeprom_write_byte>
    fc44:	0f 5f       	subi	r16, 0xFF	; 255
    fc46:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fc48:	0e 15       	cp	r16, r14
    fc4a:	1f 05       	cpc	r17, r15
    fc4c:	89 f7       	brne	.-30     	; 0xfc30 <_Z16Lira_Data_EEPROMh+0x30>
	return;
}
    fc4e:	df 91       	pop	r29
    fc50:	cf 91       	pop	r28
    fc52:	1f 91       	pop	r17
    fc54:	0f 91       	pop	r16
    fc56:	ff 90       	pop	r15
    fc58:	ef 90       	pop	r14
    fc5a:	df 90       	pop	r13
    fc5c:	08 95       	ret

0000fc5e <_Z21Store_MQTT_Pub_Topicsv>:
    fc5e:	08 95       	ret

0000fc60 <_Z21Store_MQTT_Sub_Topicsv>:
		
}


void Store_MQTT_Sub_Topics(void)
{	
    fc60:	08 95       	ret

0000fc62 <_Z21Subscribe_MQTT_Topicsv>:
	}
}


bool Subscribe_MQTT_Topics(void)
{
    fc62:	ff 92       	push	r15
    fc64:	0f 93       	push	r16
    fc66:	1f 93       	push	r17
    fc68:	cf 93       	push	r28
    fc6a:	df 93       	push	r29
    fc6c:	cd b7       	in	r28, 0x3d	; 61
    fc6e:	de b7       	in	r29, 0x3e	; 62
    fc70:	a8 97       	sbiw	r28, 0x28	; 40
    fc72:	0f b6       	in	r0, 0x3f	; 63
    fc74:	f8 94       	cli
    fc76:	de bf       	out	0x3e, r29	; 62
    fc78:	0f be       	out	0x3f, r0	; 63
    fc7a:	cd bf       	out	0x3d, r28	; 61
	
	unsigned char temp_sub_topic[40];
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fc7c:	8e 01       	movw	r16, r28
    fc7e:	0f 5f       	subi	r16, 0xFF	; 255
    fc80:	1f 4f       	sbci	r17, 0xFF	; 255
    fc82:	88 e2       	ldi	r24, 0x28	; 40
    fc84:	f8 01       	movw	r30, r16
    fc86:	11 92       	st	Z+, r1
    fc88:	8a 95       	dec	r24
    fc8a:	e9 f7       	brne	.-6      	; 0xfc86 <_Z21Subscribe_MQTT_Topicsv+0x24>
	sprintf((char *)temp_sub_topic,"SICCA/DELETE/VALVE/%s",_sRuble_Parameters.Ruble_ID);
    fc8c:	87 e6       	ldi	r24, 0x67	; 103
    fc8e:	93 e1       	ldi	r25, 0x13	; 19
    fc90:	9f 93       	push	r25
    fc92:	8f 93       	push	r24
    fc94:	8d e9       	ldi	r24, 0x9D	; 157
    fc96:	95 e0       	ldi	r25, 0x05	; 5
    fc98:	9f 93       	push	r25
    fc9a:	8f 93       	push	r24
    fc9c:	1f 93       	push	r17
    fc9e:	0f 93       	push	r16
    fca0:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fca4:	c8 01       	movw	r24, r16
    fca6:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fcaa:	0f 90       	pop	r0
    fcac:	0f 90       	pop	r0
    fcae:	0f 90       	pop	r0
    fcb0:	0f 90       	pop	r0
    fcb2:	0f 90       	pop	r0
    fcb4:	0f 90       	pop	r0
    fcb6:	81 11       	cpse	r24, r1
    fcb8:	0f c0       	rjmp	.+30     	; 0xfcd8 <_Z21Subscribe_MQTT_Topicsv+0x76>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fcba:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    fcbe:	81 30       	cpi	r24, 0x01	; 1
    fcc0:	69 f4       	brne	.+26     	; 0xfcdc <_Z21Subscribe_MQTT_Topicsv+0x7a>
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
    fcc2:	6a ea       	ldi	r22, 0xAA	; 170
    fcc4:	77 e2       	ldi	r23, 0x27	; 39
    fcc6:	82 e5       	ldi	r24, 0x52	; 82
    fcc8:	94 e1       	ldi	r25, 0x14	; 20
    fcca:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    fcce:	82 e5       	ldi	r24, 0x52	; 82
    fcd0:	94 e1       	ldi	r25, 0x14	; 20
    fcd2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    fcd6:	02 c0       	rjmp	.+4      	; 0xfcdc <_Z21Subscribe_MQTT_Topicsv+0x7a>
}


bool Subscribe_MQTT_Topics(void)
{
	char temp_flag = _kRESET;
    fcd8:	f1 2c       	mov	r15, r1
    fcda:	02 c0       	rjmp	.+4      	; 0xfce0 <_Z21Subscribe_MQTT_Topicsv+0x7e>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		temp_flag = _kSET;
    fcdc:	ff 24       	eor	r15, r15
    fcde:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fce0:	88 e2       	ldi	r24, 0x28	; 40
    fce2:	f8 01       	movw	r30, r16
    fce4:	11 92       	st	Z+, r1
    fce6:	8a 95       	dec	r24
    fce8:	e9 f7       	brne	.-6      	; 0xfce4 <_Z21Subscribe_MQTT_Topicsv+0x82>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/PLOT/%s",_sRuble_Parameters.Ruble_ID);
    fcea:	87 e6       	ldi	r24, 0x67	; 103
    fcec:	93 e1       	ldi	r25, 0x13	; 19
    fcee:	9f 93       	push	r25
    fcf0:	8f 93       	push	r24
    fcf2:	83 eb       	ldi	r24, 0xB3	; 179
    fcf4:	95 e0       	ldi	r25, 0x05	; 5
    fcf6:	9f 93       	push	r25
    fcf8:	8f 93       	push	r24
    fcfa:	1f 93       	push	r17
    fcfc:	0f 93       	push	r16
    fcfe:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	//SICCA/CONFIG/SETUP/PLOT/
		
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fd02:	c8 01       	movw	r24, r16
    fd04:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fd08:	0f 90       	pop	r0
    fd0a:	0f 90       	pop	r0
    fd0c:	0f 90       	pop	r0
    fd0e:	0f 90       	pop	r0
    fd10:	0f 90       	pop	r0
    fd12:	0f 90       	pop	r0
    fd14:	81 11       	cpse	r24, r1
    fd16:	02 c0       	rjmp	.+4      	; 0xfd1c <_Z21Subscribe_MQTT_Topicsv+0xba>
	{
		temp_flag = _kSET;
    fd18:	ff 24       	eor	r15, r15
    fd1a:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fd1c:	88 e2       	ldi	r24, 0x28	; 40
    fd1e:	f8 01       	movw	r30, r16
    fd20:	11 92       	st	Z+, r1
    fd22:	8a 95       	dec	r24
    fd24:	e9 f7       	brne	.-6      	; 0xfd20 <_Z21Subscribe_MQTT_Topicsv+0xbe>
	sprintf((char *)temp_sub_topic,"SICCA/STATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    fd26:	87 e6       	ldi	r24, 0x67	; 103
    fd28:	93 e1       	ldi	r25, 0x13	; 19
    fd2a:	9f 93       	push	r25
    fd2c:	8f 93       	push	r24
    fd2e:	8e ec       	ldi	r24, 0xCE	; 206
    fd30:	95 e0       	ldi	r25, 0x05	; 5
    fd32:	9f 93       	push	r25
    fd34:	8f 93       	push	r24
    fd36:	1f 93       	push	r17
    fd38:	0f 93       	push	r16
    fd3a:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fd3e:	c8 01       	movw	r24, r16
    fd40:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fd44:	0f 90       	pop	r0
    fd46:	0f 90       	pop	r0
    fd48:	0f 90       	pop	r0
    fd4a:	0f 90       	pop	r0
    fd4c:	0f 90       	pop	r0
    fd4e:	0f 90       	pop	r0
    fd50:	81 11       	cpse	r24, r1
    fd52:	02 c0       	rjmp	.+4      	; 0xfd58 <_Z21Subscribe_MQTT_Topicsv+0xf6>
	{
		temp_flag = _kSET;
    fd54:	ff 24       	eor	r15, r15
    fd56:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fd58:	88 e2       	ldi	r24, 0x28	; 40
    fd5a:	f8 01       	movw	r30, r16
    fd5c:	11 92       	st	Z+, r1
    fd5e:	8a 95       	dec	r24
    fd60:	e9 f7       	brne	.-6      	; 0xfd5c <_Z21Subscribe_MQTT_Topicsv+0xfa>
	sprintf((char *)temp_sub_topic,"SICCA/TIMER/%s",_sRuble_Parameters.Ruble_ID);
    fd62:	87 e6       	ldi	r24, 0x67	; 103
    fd64:	93 e1       	ldi	r25, 0x13	; 19
    fd66:	9f 93       	push	r25
    fd68:	8f 93       	push	r24
    fd6a:	86 ee       	ldi	r24, 0xE6	; 230
    fd6c:	95 e0       	ldi	r25, 0x05	; 5
    fd6e:	9f 93       	push	r25
    fd70:	8f 93       	push	r24
    fd72:	1f 93       	push	r17
    fd74:	0f 93       	push	r16
    fd76:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fd7a:	c8 01       	movw	r24, r16
    fd7c:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fd80:	0f 90       	pop	r0
    fd82:	0f 90       	pop	r0
    fd84:	0f 90       	pop	r0
    fd86:	0f 90       	pop	r0
    fd88:	0f 90       	pop	r0
    fd8a:	0f 90       	pop	r0
    fd8c:	81 11       	cpse	r24, r1
    fd8e:	02 c0       	rjmp	.+4      	; 0xfd94 <_Z21Subscribe_MQTT_Topicsv+0x132>
	{
		temp_flag = _kSET;
    fd90:	ff 24       	eor	r15, r15
    fd92:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fd94:	88 e2       	ldi	r24, 0x28	; 40
    fd96:	f8 01       	movw	r30, r16
    fd98:	11 92       	st	Z+, r1
    fd9a:	8a 95       	dec	r24
    fd9c:	e9 f7       	brne	.-6      	; 0xfd98 <_Z21Subscribe_MQTT_Topicsv+0x136>
	sprintf((char *)temp_sub_topic,"SICCA/SOIL/COEFF/%s",_sRuble_Parameters.Ruble_ID);
    fd9e:	87 e6       	ldi	r24, 0x67	; 103
    fda0:	93 e1       	ldi	r25, 0x13	; 19
    fda2:	9f 93       	push	r25
    fda4:	8f 93       	push	r24
    fda6:	85 ef       	ldi	r24, 0xF5	; 245
    fda8:	95 e0       	ldi	r25, 0x05	; 5
    fdaa:	9f 93       	push	r25
    fdac:	8f 93       	push	r24
    fdae:	1f 93       	push	r17
    fdb0:	0f 93       	push	r16
    fdb2:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fdb6:	c8 01       	movw	r24, r16
    fdb8:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fdbc:	0f 90       	pop	r0
    fdbe:	0f 90       	pop	r0
    fdc0:	0f 90       	pop	r0
    fdc2:	0f 90       	pop	r0
    fdc4:	0f 90       	pop	r0
    fdc6:	0f 90       	pop	r0
    fdc8:	81 11       	cpse	r24, r1
    fdca:	02 c0       	rjmp	.+4      	; 0xfdd0 <_Z21Subscribe_MQTT_Topicsv+0x16e>
	{
		temp_flag = _kSET;
    fdcc:	ff 24       	eor	r15, r15
    fdce:	f3 94       	inc	r15
	}
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fdd0:	88 e2       	ldi	r24, 0x28	; 40
    fdd2:	f8 01       	movw	r30, r16
    fdd4:	11 92       	st	Z+, r1
    fdd6:	8a 95       	dec	r24
    fdd8:	e9 f7       	brne	.-6      	; 0xfdd4 <_Z21Subscribe_MQTT_Topicsv+0x172>
	sprintf((char *)temp_sub_topic,"SICCA/CONFIG/SETUP/%s",_sRuble_Parameters.Ruble_ID);
    fdda:	87 e6       	ldi	r24, 0x67	; 103
    fddc:	93 e1       	ldi	r25, 0x13	; 19
    fdde:	9f 93       	push	r25
    fde0:	8f 93       	push	r24
    fde2:	89 e0       	ldi	r24, 0x09	; 9
    fde4:	96 e0       	ldi	r25, 0x06	; 6
    fde6:	9f 93       	push	r25
    fde8:	8f 93       	push	r24
    fdea:	1f 93       	push	r17
    fdec:	0f 93       	push	r16
    fdee:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fdf2:	c8 01       	movw	r24, r16
    fdf4:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fdf8:	0f 90       	pop	r0
    fdfa:	0f 90       	pop	r0
    fdfc:	0f 90       	pop	r0
    fdfe:	0f 90       	pop	r0
    fe00:	0f 90       	pop	r0
    fe02:	0f 90       	pop	r0
    fe04:	81 11       	cpse	r24, r1
    fe06:	02 c0       	rjmp	.+4      	; 0xfe0c <_Z21Subscribe_MQTT_Topicsv+0x1aa>
	{
		temp_flag = _kSET;
    fe08:	ff 24       	eor	r15, r15
    fe0a:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}



	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fe0c:	88 e2       	ldi	r24, 0x28	; 40
    fe0e:	f8 01       	movw	r30, r16
    fe10:	11 92       	st	Z+, r1
    fe12:	8a 95       	dec	r24
    fe14:	e9 f7       	brne	.-6      	; 0xfe10 <_Z21Subscribe_MQTT_Topicsv+0x1ae>
	sprintf((char *)temp_sub_topic,"SICCA/CALIBRATE/%s",_sRuble_Parameters.Ruble_ID);
    fe16:	87 e6       	ldi	r24, 0x67	; 103
    fe18:	93 e1       	ldi	r25, 0x13	; 19
    fe1a:	9f 93       	push	r25
    fe1c:	8f 93       	push	r24
    fe1e:	8f e1       	ldi	r24, 0x1F	; 31
    fe20:	96 e0       	ldi	r25, 0x06	; 6
    fe22:	9f 93       	push	r25
    fe24:	8f 93       	push	r24
    fe26:	1f 93       	push	r17
    fe28:	0f 93       	push	r16
    fe2a:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fe2e:	c8 01       	movw	r24, r16
    fe30:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fe34:	0f 90       	pop	r0
    fe36:	0f 90       	pop	r0
    fe38:	0f 90       	pop	r0
    fe3a:	0f 90       	pop	r0
    fe3c:	0f 90       	pop	r0
    fe3e:	0f 90       	pop	r0
    fe40:	81 11       	cpse	r24, r1
    fe42:	02 c0       	rjmp	.+4      	; 0xfe48 <_Z21Subscribe_MQTT_Topicsv+0x1e6>
	{
		temp_flag = _kSET;
    fe44:	ff 24       	eor	r15, r15
    fe46:	f3 94       	inc	r15
// 		temp_flag = _kSET;
// 	}

	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fe48:	88 e2       	ldi	r24, 0x28	; 40
    fe4a:	f8 01       	movw	r30, r16
    fe4c:	11 92       	st	Z+, r1
    fe4e:	8a 95       	dec	r24
    fe50:	e9 f7       	brne	.-6      	; 0xfe4c <_Z21Subscribe_MQTT_Topicsv+0x1ea>
	sprintf((char *)temp_sub_topic,"SICCA/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
    fe52:	87 e6       	ldi	r24, 0x67	; 103
    fe54:	93 e1       	ldi	r25, 0x13	; 19
    fe56:	9f 93       	push	r25
    fe58:	8f 93       	push	r24
    fe5a:	82 e3       	ldi	r24, 0x32	; 50
    fe5c:	96 e0       	ldi	r25, 0x06	; 6
    fe5e:	9f 93       	push	r25
    fe60:	8f 93       	push	r24
    fe62:	1f 93       	push	r17
    fe64:	0f 93       	push	r16
    fe66:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fe6a:	c8 01       	movw	r24, r16
    fe6c:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fe70:	0f 90       	pop	r0
    fe72:	0f 90       	pop	r0
    fe74:	0f 90       	pop	r0
    fe76:	0f 90       	pop	r0
    fe78:	0f 90       	pop	r0
    fe7a:	0f 90       	pop	r0
    fe7c:	81 11       	cpse	r24, r1
    fe7e:	02 c0       	rjmp	.+4      	; 0xfe84 <_Z21Subscribe_MQTT_Topicsv+0x222>
	{
		temp_flag = _kSET;
    fe80:	ff 24       	eor	r15, r15
    fe82:	f3 94       	inc	r15
	}
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fe84:	88 e2       	ldi	r24, 0x28	; 40
    fe86:	f8 01       	movw	r30, r16
    fe88:	11 92       	st	Z+, r1
    fe8a:	8a 95       	dec	r24
    fe8c:	e9 f7       	brne	.-6      	; 0xfe88 <_Z21Subscribe_MQTT_Topicsv+0x226>
	sprintf((char *)temp_sub_topic,"SICCA/DEVICE/%s",_sRuble_Parameters.Ruble_ID);
    fe8e:	87 e6       	ldi	r24, 0x67	; 103
    fe90:	93 e1       	ldi	r25, 0x13	; 19
    fe92:	9f 93       	push	r25
    fe94:	8f 93       	push	r24
    fe96:	84 e4       	ldi	r24, 0x44	; 68
    fe98:	96 e0       	ldi	r25, 0x06	; 6
    fe9a:	9f 93       	push	r25
    fe9c:	8f 93       	push	r24
    fe9e:	1f 93       	push	r17
    fea0:	0f 93       	push	r16
    fea2:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fea6:	c8 01       	movw	r24, r16
    fea8:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    feac:	0f 90       	pop	r0
    feae:	0f 90       	pop	r0
    feb0:	0f 90       	pop	r0
    feb2:	0f 90       	pop	r0
    feb4:	0f 90       	pop	r0
    feb6:	0f 90       	pop	r0
    feb8:	81 11       	cpse	r24, r1
    feba:	02 c0       	rjmp	.+4      	; 0xfec0 <_Z21Subscribe_MQTT_Topicsv+0x25e>
	{
		temp_flag = _kSET;
    febc:	ff 24       	eor	r15, r15
    febe:	f3 94       	inc	r15
	}
	
	
	
	memset((char *)temp_sub_topic,0,sizeof(temp_sub_topic));
    fec0:	88 e2       	ldi	r24, 0x28	; 40
    fec2:	f8 01       	movw	r30, r16
    fec4:	11 92       	st	Z+, r1
    fec6:	8a 95       	dec	r24
    fec8:	e9 f7       	brne	.-6      	; 0xfec4 <_Z21Subscribe_MQTT_Topicsv+0x262>
	sprintf((char *)temp_sub_topic,"SICCA/TANK/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
    feca:	87 e6       	ldi	r24, 0x67	; 103
    fecc:	93 e1       	ldi	r25, 0x13	; 19
    fece:	9f 93       	push	r25
    fed0:	8f 93       	push	r24
    fed2:	84 e5       	ldi	r24, 0x54	; 84
    fed4:	96 e0       	ldi	r25, 0x06	; 6
    fed6:	9f 93       	push	r25
    fed8:	8f 93       	push	r24
    feda:	1f 93       	push	r17
    fedc:	0f 93       	push	r16
    fede:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	if(!_kMQTT_SUB((char *)temp_sub_topic))
    fee2:	c8 01       	movw	r24, r16
    fee4:	0e 94 0e 71 	call	0xe21c	; 0xe21c <_Z14MQTT_SUBSCRIBEPc>
    fee8:	0f 90       	pop	r0
    feea:	0f 90       	pop	r0
    feec:	0f 90       	pop	r0
    feee:	0f 90       	pop	r0
    fef0:	0f 90       	pop	r0
    fef2:	0f 90       	pop	r0
    fef4:	88 23       	and	r24, r24
    fef6:	11 f0       	breq	.+4      	; 0xfefc <_Z21Subscribe_MQTT_Topicsv+0x29a>
// 	{
// 		temp_flag = _kSET;
// 	}
	
	
	if(temp_flag)
    fef8:	ff 20       	and	r15, r15
    fefa:	31 f0       	breq	.+12     	; 0xff08 <_Z21Subscribe_MQTT_Topicsv+0x2a6>
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
    fefc:	82 e0       	ldi	r24, 0x02	; 2
    fefe:	80 93 a4 13 	sts	0x13A4, r24	; 0x8013a4 <_sRuble_Parameters+0x5d>
    ff02:	ff 24       	eor	r15, r15
    ff04:	f3 94       	inc	r15
    ff06:	03 c0       	rjmp	.+6      	; 0xff0e <_Z21Subscribe_MQTT_Topicsv+0x2ac>
	}
	else
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_SUBSCRIBED;
    ff08:	81 e0       	ldi	r24, 0x01	; 1
    ff0a:	80 93 a4 13 	sts	0x13A4, r24	; 0x8013a4 <_sRuble_Parameters+0x5d>
	}
	
	return !temp_flag;
}
    ff0e:	81 e0       	ldi	r24, 0x01	; 1
    ff10:	8f 25       	eor	r24, r15
    ff12:	a8 96       	adiw	r28, 0x28	; 40
    ff14:	0f b6       	in	r0, 0x3f	; 63
    ff16:	f8 94       	cli
    ff18:	de bf       	out	0x3e, r29	; 62
    ff1a:	0f be       	out	0x3f, r0	; 63
    ff1c:	cd bf       	out	0x3d, r28	; 61
    ff1e:	df 91       	pop	r29
    ff20:	cf 91       	pop	r28
    ff22:	1f 91       	pop	r17
    ff24:	0f 91       	pop	r16
    ff26:	ff 90       	pop	r15
    ff28:	08 95       	ret

0000ff2a <_Z14Ping_to_Serverv>:
	
}


bool Ping_to_Server(void)
{
    ff2a:	0f 93       	push	r16
    ff2c:	cf 93       	push	r28
	Reset_Buffer();
    ff2e:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
   _kSERIAL_AT.println(F("ATE0"));
    ff32:	60 ea       	ldi	r22, 0xA0	; 160
    ff34:	78 e2       	ldi	r23, 0x28	; 40
    ff36:	8f e0       	ldi	r24, 0x0F	; 15
    ff38:	96 e1       	ldi	r25, 0x16	; 22
    ff3a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   Send_AT_Command(NULL, "OK",  NULL,3000,2);
    ff3e:	02 e0       	ldi	r16, 0x02	; 2
    ff40:	28 eb       	ldi	r18, 0xB8	; 184
    ff42:	3b e0       	ldi	r19, 0x0B	; 11
    ff44:	40 e0       	ldi	r20, 0x00	; 0
    ff46:	50 e0       	ldi	r21, 0x00	; 0
    ff48:	6e e1       	ldi	r22, 0x1E	; 30
    ff4a:	73 e0       	ldi	r23, 0x03	; 3
    ff4c:	80 e0       	ldi	r24, 0x00	; 0
    ff4e:	90 e0       	ldi	r25, 0x00	; 0
    ff50:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
	
	
	if (!Check_Sim(_eDIRESCT_CHECK))
    ff54:	83 e0       	ldi	r24, 0x03	; 3
    ff56:	0e 94 a2 72 	call	0xe544	; 0xe544 <_Z9Check_Simc>
    ff5a:	c8 2f       	mov	r28, r24
    ff5c:	81 11       	cpse	r24, r1
    ff5e:	10 c0       	rjmp	.+32     	; 0xff80 <_Z14Ping_to_Serverv+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    ff60:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ff64:	81 30       	cpi	r24, 0x01	; 1
    ff66:	09 f0       	breq	.+2      	; 0xff6a <_Z14Ping_to_Serverv+0x40>
    ff68:	35 c1       	rjmp	.+618    	; 0x101d4 <_Z14Ping_to_Serverv+0x2aa>
		{
			_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
    ff6a:	6f e8       	ldi	r22, 0x8F	; 143
    ff6c:	78 e2       	ldi	r23, 0x28	; 40
    ff6e:	82 e5       	ldi	r24, 0x52	; 82
    ff70:	94 e1       	ldi	r25, 0x14	; 20
    ff72:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    ff76:	82 e5       	ldi	r24, 0x52	; 82
    ff78:	94 e1       	ldi	r25, 0x14	; 20
    ff7a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
    ff7e:	2a c1       	rjmp	.+596    	; 0x101d4 <_Z14Ping_to_Serverv+0x2aa>
		}
		return 0;
	}
	
	
	Reset_Buffer();
    ff80:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
	 _kSERIAL_AT.println(F("AT+QMTCLOSE=0"));
    ff84:	61 e8       	ldi	r22, 0x81	; 129
    ff86:	78 e2       	ldi	r23, 0x28	; 40
    ff88:	8f e0       	ldi	r24, 0x0F	; 15
    ff8a:	96 e1       	ldi	r25, 0x16	; 22
    ff8c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(_kSEND_AT_COMMAND(NULL,"OK",NULL,3000,1))
    ff90:	01 e0       	ldi	r16, 0x01	; 1
    ff92:	28 eb       	ldi	r18, 0xB8	; 184
    ff94:	3b e0       	ldi	r19, 0x0B	; 11
    ff96:	40 e0       	ldi	r20, 0x00	; 0
    ff98:	50 e0       	ldi	r21, 0x00	; 0
    ff9a:	6e e1       	ldi	r22, 0x1E	; 30
    ff9c:	73 e0       	ldi	r23, 0x03	; 3
    ff9e:	80 e0       	ldi	r24, 0x00	; 0
    ffa0:	90 e0       	ldi	r25, 0x00	; 0
    ffa2:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
    ffa6:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
    ffaa:	88 23       	and	r24, r24
    ffac:	29 f0       	breq	.+10     	; 0xffb8 <_Z14Ping_to_Serverv+0x8e>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    ffae:	91 30       	cpi	r25, 0x01	; 1
    ffb0:	79 f4       	brne	.+30     	; 0xffd0 <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE");                /* for debugging purpose */
    ffb2:	65 e7       	ldi	r22, 0x75	; 117
    ffb4:	78 e2       	ldi	r23, 0x28	; 40
    ffb6:	04 c0       	rjmp	.+8      	; 0xffc0 <_Z14Ping_to_Serverv+0x96>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    ffb8:	91 30       	cpi	r25, 0x01	; 1
    ffba:	51 f4       	brne	.+20     	; 0xffd0 <_Z14Ping_to_Serverv+0xa6>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE NOT CLOSE ");                /* for debugging purpose */
    ffbc:	6e e5       	ldi	r22, 0x5E	; 94
    ffbe:	78 e2       	ldi	r23, 0x28	; 40
    ffc0:	82 e5       	ldi	r24, 0x52	; 82
    ffc2:	94 e1       	ldi	r25, 0x14	; 20
    ffc4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    ffc8:	82 e5       	ldi	r24, 0x52	; 82
    ffca:	94 e1       	ldi	r25, 0x14	; 20
    ffcc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
	}
	
	if(!Gsm_Gprs_Network())
    ffd0:	0e 94 74 60 	call	0xc0e8	; 0xc0e8 <_Z16Gsm_Gprs_Networkv>
    ffd4:	c8 2f       	mov	r28, r24
    ffd6:	81 11       	cpse	r24, r1
    ffd8:	06 c0       	rjmp	.+12     	; 0xffe6 <_Z14Ping_to_Serverv+0xbc>
	{
		_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
    ffda:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
    ffde:	8b 7f       	andi	r24, 0xFB	; 251
    ffe0:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
    ffe4:	f7 c0       	rjmp	.+494    	; 0x101d4 <_Z14Ping_to_Serverv+0x2aa>
		return 0;
		
	}
	
	_sRuble_Parameters.Display_Update |= _eNETWORK_SELECTED;
    ffe6:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
    ffea:	80 64       	ori	r24, 0x40	; 64
    ffec:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sRuble_Parameters+0x1>
	 Display_Update_1();  // 20/1/2022
    fff0:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
	
	
	if(!_kIS_MQTT_CONNECTED() ||  _sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)      /* check weather already connected to server */
    fff4:	0e 94 ea 69 	call	0xd3d4	; 0xd3d4 <_Z17Is_MQTT_Connectedv>
    fff8:	c8 2f       	mov	r28, r24
    fffa:	88 23       	and	r24, r24
    fffc:	29 f0       	breq	.+10     	; 0x10008 <_Z14Ping_to_Serverv+0xde>
    fffe:	80 91 a4 13 	lds	r24, 0x13A4	; 0x8013a4 <_sRuble_Parameters+0x5d>
   10002:	82 30       	cpi	r24, 0x02	; 2
   10004:	09 f0       	breq	.+2      	; 0x10008 <_Z14Ping_to_Serverv+0xde>
   10006:	e6 c0       	rjmp	.+460    	; 0x101d4 <_Z14Ping_to_Serverv+0x2aa>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   10008:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1000c:	81 30       	cpi	r24, 0x01	; 1
   1000e:	51 f4       	brne	.+20     	; 0x10024 <_Z14Ping_to_Serverv+0xfa>
		{
			_kSERAIL_MON_WRITE("Try to connect the server");                /* for debugging purpose */
   10010:	64 e4       	ldi	r22, 0x44	; 68
   10012:	78 e2       	ldi	r23, 0x28	; 40
   10014:	82 e5       	ldi	r24, 0x52	; 82
   10016:	94 e1       	ldi	r25, 0x14	; 20
   10018:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   1001c:	82 e5       	ldi	r24, 0x52	; 82
   1001e:	94 e1       	ldi	r25, 0x14	; 20
   10020:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		
		_sRuble_Parameters.Display_Update =  _eCONNECTING_TO_SERVER;
   10024:	10 92 47 13 	sts	0x1347, r1	; 0x801347 <_sRuble_Parameters>
   10028:	84 e0       	ldi	r24, 0x04	; 4
   1002a:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sRuble_Parameters+0x1>
   1002e:	10 92 49 13 	sts	0x1349, r1	; 0x801349 <_sRuble_Parameters+0x2>
   10032:	10 92 4a 13 	sts	0x134A, r1	; 0x80134a <_sRuble_Parameters+0x3>
   10036:	10 92 4b 13 	sts	0x134B, r1	; 0x80134b <_sRuble_Parameters+0x4>
   1003a:	10 92 4c 13 	sts	0x134C, r1	; 0x80134c <_sRuble_Parameters+0x5>
   1003e:	10 92 4d 13 	sts	0x134D, r1	; 0x80134d <_sRuble_Parameters+0x6>
   10042:	10 92 4e 13 	sts	0x134E, r1	; 0x80134e <_sRuble_Parameters+0x7>
		Display_Update_1();    // 20/1/2022
   10046:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
		
		
		if(_kMQTT_CONNCET(_kMQTT_CLIENT_ID,_kMQTT_USER,_kMQTT_PASSWORD))
   1004a:	4b e6       	ldi	r20, 0x6B	; 107
   1004c:	56 e0       	ldi	r21, 0x06	; 6
   1004e:	6c e7       	ldi	r22, 0x7C	; 124
   10050:	76 e0       	ldi	r23, 0x06	; 6
   10052:	cb 01       	movw	r24, r22
   10054:	0e 94 1f 6a 	call	0xd43e	; 0xd43e <_Z12MQTT_ConnectPKcS0_S0_>
   10058:	c8 2f       	mov	r28, r24
   1005a:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1005e:	88 23       	and	r24, r24
   10060:	09 f4       	brne	.+2      	; 0x10064 <_Z14Ping_to_Serverv+0x13a>
   10062:	6c c0       	rjmp	.+216    	; 0x1013c <_Z14Ping_to_Serverv+0x212>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   10064:	91 30       	cpi	r25, 0x01	; 1
   10066:	51 f4       	brne	.+20     	; 0x1007c <_Z14Ping_to_Serverv+0x152>
			{
				_kSERAIL_MON_WRITE("Connected To server");                /* for debugging purpose */
   10068:	60 e3       	ldi	r22, 0x30	; 48
   1006a:	78 e2       	ldi	r23, 0x28	; 40
   1006c:	82 e5       	ldi	r24, 0x52	; 82
   1006e:	94 e1       	ldi	r25, 0x14	; 20
   10070:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   10074:	82 e5       	ldi	r24, 0x52	; 82
   10076:	94 e1       	ldi	r25, 0x14	; 20
   10078:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Display_Update |= _kDISP_RANGE_3;
			
			_sRuble_Parameters.Display_Update |=  _eCONNECTED_TO_SERVER;
   1007c:	90 91 47 13 	lds	r25, 0x1347	; 0x801347 <_sRuble_Parameters>
   10080:	98 60       	ori	r25, 0x08	; 8
   10082:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
   10086:	80 68       	ori	r24, 0x80	; 128
   10088:	90 93 47 13 	sts	0x1347, r25	; 0x801347 <_sRuble_Parameters>
   1008c:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sRuble_Parameters+0x1>
			Display_Update_1();   // 20/1/2022
   10090:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
			
			 if(Subscribe_MQTT_Topics())
   10094:	e6 dd       	rcall	.-1076   	; 0xfc62 <_Z21Subscribe_MQTT_Topicsv>
   10096:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1009a:	88 23       	and	r24, r24
   1009c:	91 f0       	breq	.+36     	; 0x100c2 <_Z14Ping_to_Serverv+0x198>
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1009e:	91 30       	cpi	r25, 0x01	; 1
   100a0:	51 f4       	brne	.+20     	; 0x100b6 <_Z14Ping_to_Serverv+0x18c>
				 {
					 _kSERAIL_MON_WRITE("all topic subscribed");                /* for debugging purpose */
   100a2:	6b e1       	ldi	r22, 0x1B	; 27
   100a4:	78 e2       	ldi	r23, 0x28	; 40
   100a6:	82 e5       	ldi	r24, 0x52	; 82
   100a8:	94 e1       	ldi	r25, 0x14	; 20
   100aa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   100ae:	82 e5       	ldi	r24, 0x52	; 82
   100b0:	94 e1       	ldi	r25, 0x14	; 20
   100b2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
				 }
				  _sRuble_Parameters.lndications   |= _eRUBL_INDI_SERVER_CONN;
   100b6:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   100ba:	84 60       	ori	r24, 0x04	; 4
   100bc:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   100c0:	08 c0       	rjmp	.+16     	; 0x100d2 <_Z14Ping_to_Serverv+0x1a8>
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   100c2:	91 30       	cpi	r25, 0x01	; 1
   100c4:	31 f4       	brne	.+12     	; 0x100d2 <_Z14Ping_to_Serverv+0x1a8>
				 {
					 _kSERAIL_MON_WRITE("all topic not subscribed");                /* for debugging purpose */
   100c6:	62 e0       	ldi	r22, 0x02	; 2
   100c8:	78 e2       	ldi	r23, 0x28	; 40
   100ca:	82 e5       	ldi	r24, 0x52	; 82
   100cc:	94 e1       	ldi	r25, 0x14	; 20
   100ce:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				 }
			 }
			 
			
			 _sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
   100d2:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   100d6:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   100da:	84 60       	ori	r24, 0x04	; 4
   100dc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   100e0:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
			 
			 if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   100e4:	e0 91 a3 13 	lds	r30, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   100e8:	70 91 47 13 	lds	r23, 0x1347	; 0x801347 <_sRuble_Parameters>
   100ec:	90 91 48 13 	lds	r25, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
   100f0:	80 91 49 13 	lds	r24, 0x1349	; 0x801349 <_sRuble_Parameters+0x2>
   100f4:	60 91 4a 13 	lds	r22, 0x134A	; 0x80134a <_sRuble_Parameters+0x3>
   100f8:	50 91 4b 13 	lds	r21, 0x134B	; 0x80134b <_sRuble_Parameters+0x4>
   100fc:	40 91 4c 13 	lds	r20, 0x134C	; 0x80134c <_sRuble_Parameters+0x5>
   10100:	30 91 4d 13 	lds	r19, 0x134D	; 0x80134d <_sRuble_Parameters+0x6>
   10104:	20 91 4e 13 	lds	r18, 0x134E	; 0x80134e <_sRuble_Parameters+0x7>
   10108:	e1 30       	cpi	r30, 0x01	; 1
   1010a:	21 f0       	breq	.+8      	; 0x10114 <_Z14Ping_to_Serverv+0x1ea>
			 {
				  _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   1010c:	98 60       	ori	r25, 0x08	; 8
   1010e:	90 93 48 13 	sts	0x1348, r25	; 0x801348 <_sRuble_Parameters+0x1>
   10112:	11 c0       	rjmp	.+34     	; 0x10136 <_Z14Ping_to_Serverv+0x20c>
				  Display_Update_1();   // 20/1/2022
			 }
			 else
			 {
				  _sRuble_Parameters.Display_Update |= _eTHANK_YOU_FOR_WAITING;
   10114:	81 60       	ori	r24, 0x01	; 1
   10116:	70 93 47 13 	sts	0x1347, r23	; 0x801347 <_sRuble_Parameters>
   1011a:	90 93 48 13 	sts	0x1348, r25	; 0x801348 <_sRuble_Parameters+0x1>
   1011e:	80 93 49 13 	sts	0x1349, r24	; 0x801349 <_sRuble_Parameters+0x2>
   10122:	60 93 4a 13 	sts	0x134A, r22	; 0x80134a <_sRuble_Parameters+0x3>
   10126:	50 93 4b 13 	sts	0x134B, r21	; 0x80134b <_sRuble_Parameters+0x4>
   1012a:	40 93 4c 13 	sts	0x134C, r20	; 0x80134c <_sRuble_Parameters+0x5>
   1012e:	30 93 4d 13 	sts	0x134D, r19	; 0x80134d <_sRuble_Parameters+0x6>
   10132:	20 93 4e 13 	sts	0x134E, r18	; 0x80134e <_sRuble_Parameters+0x7>
				  Display_Update_1();   // 20/1/2022
   10136:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   1013a:	4c c0       	rjmp	.+152    	; 0x101d4 <_Z14Ping_to_Serverv+0x2aa>
			 
			 return 1;
		}
		else
		{
			_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   1013c:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   10140:	8b 7f       	andi	r24, 0xFB	; 251
   10142:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Display_Update |= _kDISP_NO_RANGE;
   10146:	80 91 47 13 	lds	r24, 0x1347	; 0x801347 <_sRuble_Parameters>
   1014a:	81 60       	ori	r24, 0x01	; 1
   1014c:	80 93 47 13 	sts	0x1347, r24	; 0x801347 <_sRuble_Parameters>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   10150:	91 30       	cpi	r25, 0x01	; 1
   10152:	51 f4       	brne	.+20     	; 0x10168 <_Z14Ping_to_Serverv+0x23e>
			{
				_kSERAIL_MON_WRITE("Fail To connect the server");                /* for debugging purpose */
   10154:	67 ee       	ldi	r22, 0xE7	; 231
   10156:	77 e2       	ldi	r23, 0x27	; 39
   10158:	82 e5       	ldi	r24, 0x52	; 82
   1015a:	94 e1       	ldi	r25, 0x14	; 20
   1015c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   10160:	82 e5       	ldi	r24, 0x52	; 82
   10162:	94 e1       	ldi	r25, 0x14	; 20
   10164:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
			}
			
			Reset_Buffer();
   10168:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("AT+CFUN=1,1"));
   1016c:	6b ed       	ldi	r22, 0xDB	; 219
   1016e:	77 e2       	ldi	r23, 0x27	; 39
   10170:	8f e0       	ldi	r24, 0x0F	; 15
   10172:	96 e1       	ldi	r25, 0x16	; 22
   10174:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL,"OK",  NULL,10000,1);     // 22/3/2022
   10178:	01 e0       	ldi	r16, 0x01	; 1
   1017a:	20 e1       	ldi	r18, 0x10	; 16
   1017c:	37 e2       	ldi	r19, 0x27	; 39
   1017e:	40 e0       	ldi	r20, 0x00	; 0
   10180:	50 e0       	ldi	r21, 0x00	; 0
   10182:	6e e1       	ldi	r22, 0x1E	; 30
   10184:	73 e0       	ldi	r23, 0x03	; 3
   10186:	80 e0       	ldi	r24, 0x00	; 0
   10188:	90 e0       	ldi	r25, 0x00	; 0
   1018a:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
			_kDELAY_MS(10000);
   1018e:	60 e1       	ldi	r22, 0x10	; 16
   10190:	77 e2       	ldi	r23, 0x27	; 39
   10192:	80 e0       	ldi	r24, 0x00	; 0
   10194:	90 e0       	ldi	r25, 0x00	; 0
   10196:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
			if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   1019a:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   1019e:	81 30       	cpi	r24, 0x01	; 1
   101a0:	31 f0       	breq	.+12     	; 0x101ae <_Z14Ping_to_Serverv+0x284>
			{
				_kDELAY_MS(120000);
   101a2:	60 ec       	ldi	r22, 0xC0	; 192
   101a4:	74 ed       	ldi	r23, 0xD4	; 212
   101a6:	81 e0       	ldi	r24, 0x01	; 1
   101a8:	90 e0       	ldi	r25, 0x00	; 0
   101aa:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
			}
			
			Reset_Buffer();
   101ae:	0e 94 5d 66 	call	0xccba	; 0xccba <_Z12Reset_Bufferv>
			 _kSERIAL_AT.println(F("ATE0"));
   101b2:	66 ed       	ldi	r22, 0xD6	; 214
   101b4:	77 e2       	ldi	r23, 0x27	; 39
   101b6:	8f e0       	ldi	r24, 0x0F	; 15
   101b8:	96 e1       	ldi	r25, 0x16	; 22
   101ba:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
   101be:	02 e0       	ldi	r16, 0x02	; 2
   101c0:	28 eb       	ldi	r18, 0xB8	; 184
   101c2:	3b e0       	ldi	r19, 0x0B	; 11
   101c4:	40 e0       	ldi	r20, 0x00	; 0
   101c6:	50 e0       	ldi	r21, 0x00	; 0
   101c8:	6e e1       	ldi	r22, 0x1E	; 30
   101ca:	73 e0       	ldi	r23, 0x03	; 3
   101cc:	80 e0       	ldi	r24, 0x00	; 0
   101ce:	90 e0       	ldi	r25, 0x00	; 0
   101d0:	0e 94 c2 66 	call	0xcd84	; 0xcd84 <_Z15Send_AT_CommandPcS_S_jh>
	}
	else
	{
		return 1;
	}
}
   101d4:	8c 2f       	mov	r24, r28
   101d6:	cf 91       	pop	r28
   101d8:	0f 91       	pop	r16
   101da:	08 95       	ret

000101dc <_Z11Init_Brokerv>:
	
}


bool Init_Broker(void)
{
   101dc:	2f 92       	push	r2
   101de:	3f 92       	push	r3
   101e0:	4f 92       	push	r4
   101e2:	5f 92       	push	r5
   101e4:	6f 92       	push	r6
   101e6:	7f 92       	push	r7
   101e8:	8f 92       	push	r8
   101ea:	9f 92       	push	r9
   101ec:	af 92       	push	r10
   101ee:	bf 92       	push	r11
   101f0:	cf 92       	push	r12
   101f2:	df 92       	push	r13
   101f4:	ef 92       	push	r14
   101f6:	ff 92       	push	r15
   101f8:	0f 93       	push	r16
   101fa:	1f 93       	push	r17
   101fc:	cf 93       	push	r28
   101fe:	df 93       	push	r29
   10200:	cd b7       	in	r28, 0x3d	; 61
   10202:	de b7       	in	r29, 0x3e	; 62
   10204:	a8 97       	sbiw	r28, 0x28	; 40
   10206:	0f b6       	in	r0, 0x3f	; 63
   10208:	f8 94       	cli
   1020a:	de bf       	out	0x3e, r29	; 62
   1020c:	0f be       	out	0x3f, r0	; 63
   1020e:	cd bf       	out	0x3d, r28	; 61
	static unsigned char connect_count;
	static unsigned int loop_count;
	unsigned long previous;
	
	if(_sRuble_Parameters.Ruble_Registration_Status == _eRUBLE_REGISTERED)
   10210:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   10214:	81 30       	cpi	r24, 0x01	; 1
   10216:	89 f4       	brne	.+34     	; 0x1023a <_Z11Init_Brokerv+0x5e>
	{
		 if(Ping_to_Server())
   10218:	88 de       	rcall	.-752    	; 0xff2a <_Z14Ping_to_Serverv>
   1021a:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1021e:	88 23       	and	r24, r24
   10220:	c9 f0       	breq	.+50     	; 0x10254 <_Z11Init_Brokerv+0x78>
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10222:	91 30       	cpi	r25, 0x01	; 1
   10224:	51 f4       	brne	.+20     	; 0x1023a <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Ping to server 0");                /* for debugging purpose */
   10226:	68 e1       	ldi	r22, 0x18	; 24
   10228:	79 e2       	ldi	r23, 0x29	; 41
   1022a:	82 e5       	ldi	r24, 0x52	; 82
   1022c:	94 e1       	ldi	r25, 0x14	; 20
   1022e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
				 _kSERIAL_MON_CLEAR();
   10232:	82 e5       	ldi	r24, 0x52	; 82
   10234:	94 e1       	ldi	r25, 0x14	; 20
   10236:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
		 
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   1023a:	3b ef       	ldi	r19, 0xFB	; 251
   1023c:	a3 2e       	mov	r10, r19
   1023e:	3e e0       	ldi	r19, 0x0E	; 14
   10240:	b3 2e       	mov	r11, r19
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
		
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   10242:	47 e6       	ldi	r20, 0x67	; 103
   10244:	e4 2e       	mov	r14, r20
   10246:	43 e1       	ldi	r20, 0x13	; 19
   10248:	f4 2e       	mov	r15, r20
			if(Subscribed_data_check())
			{
				if(Seperate_Out_Sub_Data())
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1024a:	59 e6       	ldi	r21, 0x69	; 105
   1024c:	85 2e       	mov	r8, r21
   1024e:	5f e0       	ldi	r21, 0x0F	; 15
   10250:	95 2e       	mov	r9, r21
   10252:	18 c0       	rjmp	.+48     	; 0x10284 <_Z11Init_Brokerv+0xa8>
				 _kSERIAL_MON_CLEAR();
			 }
		 }
		 else
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10254:	91 30       	cpi	r25, 0x01	; 1
   10256:	89 f7       	brne	.-30     	; 0x1023a <_Z11Init_Brokerv+0x5e>
			 {
				 _kSERAIL_MON_WRITE("Fail to Ping server 0");                /* for debugging purpose */
   10258:	62 e0       	ldi	r22, 0x02	; 2
   1025a:	79 e2       	ldi	r23, 0x29	; 41
   1025c:	e6 cf       	rjmp	.-52     	; 0x1022a <_Z11Init_Brokerv+0x4e>
					 _kSERIAL_MON_CLEAR();
				 }
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1025e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   10262:	81 30       	cpi	r24, 0x01	; 1
   10264:	51 f4       	brne	.+20     	; 0x1027a <_Z11Init_Brokerv+0x9e>
				 {
					_kSERAIL_MON_WRITE("Fail to Ping server");                /* for debugging purpose */
   10266:	6f ed       	ldi	r22, 0xDF	; 223
   10268:	78 e2       	ldi	r23, 0x28	; 40
   1026a:	82 e5       	ldi	r24, 0x52	; 82
   1026c:	94 e1       	ldi	r25, 0x14	; 20
   1026e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
   10272:	82 e5       	ldi	r24, 0x52	; 82
   10274:	94 e1       	ldi	r25, 0x14	; 20
   10276:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   1027a:	80 91 53 0d 	lds	r24, 0x0D53	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
   1027e:	83 30       	cpi	r24, 0x03	; 3
   10280:	08 f4       	brcc	.+2      	; 0x10284 <_Z11Init_Brokerv+0xa8>
   10282:	5c c0       	rjmp	.+184    	; 0x1033c <_Z11Init_Brokerv+0x160>
	
	//_kLCD_CLEAR();
	
	unsigned char temp_topic[40];   
	
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
   10284:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   10288:	8e 01       	movw	r16, r28
   1028a:	0f 5f       	subi	r16, 0xFF	; 255
   1028c:	1f 4f       	sbci	r17, 0xFF	; 255
   1028e:	81 30       	cpi	r24, 0x01	; 1
   10290:	f1 f1       	breq	.+124    	; 0x1030e <_Z11Init_Brokerv+0x132>
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
   10292:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
		 
		memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10296:	8e e6       	ldi	r24, 0x6E	; 110
   10298:	d5 01       	movw	r26, r10
   1029a:	1d 92       	st	X+, r1
   1029c:	8a 95       	dec	r24
   1029e:	e9 f7       	brne	.-6      	; 0x1029a <_Z11Init_Brokerv+0xbe>
		memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   102a0:	88 e2       	ldi	r24, 0x28	; 40
   102a2:	f8 01       	movw	r30, r16
   102a4:	11 92       	st	Z+, r1
   102a6:	8a 95       	dec	r24
   102a8:	e9 f7       	brne	.-6      	; 0x102a4 <_Z11Init_Brokerv+0xc8>
		
		sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   102aa:	67 e8       	ldi	r22, 0x87	; 135
   102ac:	76 e0       	ldi	r23, 0x06	; 6
   102ae:	8b ef       	ldi	r24, 0xFB	; 251
   102b0:	9e e0       	ldi	r25, 0x0E	; 14
   102b2:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
		sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   102b6:	ff 92       	push	r15
   102b8:	ef 92       	push	r14
   102ba:	8a e9       	ldi	r24, 0x9A	; 154
   102bc:	96 e0       	ldi	r25, 0x06	; 6
   102be:	9f 93       	push	r25
   102c0:	8f 93       	push	r24
   102c2:	1f 93       	push	r17
   102c4:	0f 93       	push	r16
   102c6:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
		//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
   102ca:	6b ef       	ldi	r22, 0xFB	; 251
   102cc:	7e e0       	ldi	r23, 0x0E	; 14
   102ce:	cb 01       	movw	r24, r22
   102d0:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
		
		previous = millis();
   102d4:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
   102d8:	2b 01       	movw	r4, r22
   102da:	3c 01       	movw	r6, r24
   102dc:	0f 90       	pop	r0
   102de:	0f 90       	pop	r0
   102e0:	0f 90       	pop	r0
   102e2:	0f 90       	pop	r0
   102e4:	0f 90       	pop	r0
   102e6:	0f 90       	pop	r0
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   102e8:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
   102ec:	dc 01       	movw	r26, r24
   102ee:	cb 01       	movw	r24, r22
   102f0:	84 19       	sub	r24, r4
   102f2:	95 09       	sbc	r25, r5
   102f4:	a6 09       	sbc	r26, r6
   102f6:	b7 09       	sbc	r27, r7
   102f8:	88 39       	cpi	r24, 0x98	; 152
   102fa:	9a 43       	sbci	r25, 0x3A	; 58
   102fc:	a1 05       	cpc	r26, r1
   102fe:	b1 05       	cpc	r27, r1
   10300:	b0 f4       	brcc	.+44     	; 0x1032e <_Z11Init_Brokerv+0x152>
   10302:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   10306:	81 30       	cpi	r24, 0x01	; 1
   10308:	09 f0       	breq	.+2      	; 0x1030c <_Z11Init_Brokerv+0x130>
   1030a:	65 c0       	rjmp	.+202    	; 0x103d6 <_Z11Init_Brokerv+0x1fa>
   1030c:	10 c0       	rjmp	.+32     	; 0x1032e <_Z11Init_Brokerv+0x152>
				}
			}
			loop_count =0;
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   1030e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   10312:	81 30       	cpi	r24, 0x01	; 1
   10314:	09 f0       	breq	.+2      	; 0x10318 <_Z11Init_Brokerv+0x13c>
   10316:	30 c1       	rjmp	.+608    	; 0x10578 <_Z11Init_Brokerv+0x39c>
	{
		_kSERAIL_MON_WRITE("Ruble controller is registered");                /* for debugging purpose */
   10318:	65 ea       	ldi	r22, 0xA5	; 165
   1031a:	78 e2       	ldi	r23, 0x28	; 40
   1031c:	82 e5       	ldi	r24, 0x52	; 82
   1031e:	94 e1       	ldi	r25, 0x14	; 20
   10320:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
 		_kSERIAL_MON_CLEAR();
   10324:	82 e5       	ldi	r24, 0x52	; 82
   10326:	94 e1       	ldi	r25, 0x14	; 20
   10328:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1032c:	25 c1       	rjmp	.+586    	; 0x10578 <_Z11Init_Brokerv+0x39c>
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				}
			}
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   1032e:	10 92 53 0d 	sts	0x0D53, r1	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   10332:	8a e9       	ldi	r24, 0x9A	; 154
   10334:	c8 2e       	mov	r12, r24
   10336:	86 e0       	ldi	r24, 0x06	; 6
   10338:	d8 2e       	mov	r13, r24
   1033a:	9f cf       	rjmp	.-194    	; 0x1027a <_Z11Init_Brokerv+0x9e>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   1033c:	90 91 a3 13 	lds	r25, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   10340:	91 30       	cpi	r25, 0x01	; 1
   10342:	09 f4       	brne	.+2      	; 0x10346 <_Z11Init_Brokerv+0x16a>
   10344:	9f cf       	rjmp	.-194    	; 0x10284 <_Z11Init_Brokerv+0xa8>
		{
			connect_count++;                               /* increase each time to maintain the 30 count */                                
   10346:	8f 5f       	subi	r24, 0xFF	; 255
   10348:	80 93 53 0d 	sts	0x0D53, r24	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
			 if(Ping_to_Server())
   1034c:	ee dd       	rcall	.-1060   	; 0xff2a <_Z14Ping_to_Serverv>
   1034e:	88 23       	and	r24, r24
   10350:	09 f4       	brne	.+2      	; 0x10354 <_Z11Init_Brokerv+0x178>
   10352:	85 cf       	rjmp	.-246    	; 0x1025e <_Z11Init_Brokerv+0x82>
			 {
				 _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   10354:	80 91 48 13 	lds	r24, 0x1348	; 0x801348 <_sRuble_Parameters+0x1>
   10358:	88 60       	ori	r24, 0x08	; 8
   1035a:	80 93 48 13 	sts	0x1348, r24	; 0x801348 <_sRuble_Parameters+0x1>
				 Display_Update_1();   // 20/1/2022
   1035e:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
				 
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10362:	8e e6       	ldi	r24, 0x6E	; 110
   10364:	d5 01       	movw	r26, r10
   10366:	1d 92       	st	X+, r1
   10368:	8a 95       	dec	r24
   1036a:	e9 f7       	brne	.-6      	; 0x10366 <_Z11Init_Brokerv+0x18a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   1036c:	88 e2       	ldi	r24, 0x28	; 40
   1036e:	f8 01       	movw	r30, r16
   10370:	11 92       	st	Z+, r1
   10372:	8a 95       	dec	r24
   10374:	e9 f7       	brne	.-6      	; 0x10370 <_Z11Init_Brokerv+0x194>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   10376:	67 e8       	ldi	r22, 0x87	; 135
   10378:	76 e0       	ldi	r23, 0x06	; 6
   1037a:	8b ef       	ldi	r24, 0xFB	; 251
   1037c:	9e e0       	ldi	r25, 0x0E	; 14
   1037e:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   10382:	ff 92       	push	r15
   10384:	ef 92       	push	r14
   10386:	df 92       	push	r13
   10388:	cf 92       	push	r12
   1038a:	1f 93       	push	r17
   1038c:	0f 93       	push	r16
   1038e:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
				 //MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   10392:	6b ef       	ldi	r22, 0xFB	; 251
   10394:	7e e0       	ldi	r23, 0x0E	; 14
   10396:	c8 01       	movw	r24, r16
   10398:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
				 
				previous = millis();
   1039c:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
   103a0:	2b 01       	movw	r4, r22
   103a2:	3c 01       	movw	r6, r24
   103a4:	0f 90       	pop	r0
   103a6:	0f 90       	pop	r0
   103a8:	0f 90       	pop	r0
   103aa:	0f 90       	pop	r0
   103ac:	0f 90       	pop	r0
   103ae:	0f 90       	pop	r0
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   103b0:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
   103b4:	dc 01       	movw	r26, r24
   103b6:	cb 01       	movw	r24, r22
   103b8:	84 19       	sub	r24, r4
   103ba:	95 09       	sbc	r25, r5
   103bc:	a6 09       	sbc	r26, r6
   103be:	b7 09       	sbc	r27, r7
   103c0:	88 39       	cpi	r24, 0x98	; 152
   103c2:	9a 43       	sbci	r25, 0x3A	; 58
   103c4:	a1 05       	cpc	r26, r1
   103c6:	b1 05       	cpc	r27, r1
   103c8:	00 f5       	brcc	.+64     	; 0x1040a <_Z11Init_Brokerv+0x22e>
   103ca:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   103ce:	81 30       	cpi	r24, 0x01	; 1
   103d0:	09 f0       	breq	.+2      	; 0x103d4 <_Z11Init_Brokerv+0x1f8>
   103d2:	86 c0       	rjmp	.+268    	; 0x104e0 <_Z11Init_Brokerv+0x304>
   103d4:	1a c0       	rjmp	.+52     	; 0x1040a <_Z11Init_Brokerv+0x22e>
		MQTT_Publish((unsigned char *)_gRecvd_Data,(unsigned char *)_gRecvd_Data); 
		
		previous = millis();
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
		{
			if(Subscribed_data_check())
   103d6:	0e 94 a4 71 	call	0xe348	; 0xe348 <_Z21Subscribed_data_checkv>
   103da:	88 23       	and	r24, r24
   103dc:	09 f4       	brne	.+2      	; 0x103e0 <_Z11Init_Brokerv+0x204>
   103de:	84 cf       	rjmp	.-248    	; 0x102e8 <_Z11Init_Brokerv+0x10c>
			{
				if(Seperate_Out_Sub_Data())
   103e0:	0e 94 9c 64 	call	0xc938	; 0xc938 <_Z21Seperate_Out_Sub_Datav>
   103e4:	88 23       	and	r24, r24
   103e6:	09 f4       	brne	.+2      	; 0x103ea <_Z11Init_Brokerv+0x20e>
   103e8:	7f cf       	rjmp	.-258    	; 0x102e8 <_Z11Init_Brokerv+0x10c>
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   103ea:	f4 01       	movw	r30, r8
   103ec:	01 90       	ld	r0, Z+
   103ee:	00 20       	and	r0, r0
   103f0:	e9 f7       	brne	.-6      	; 0x103ec <_Z11Init_Brokerv+0x210>
   103f2:	31 97       	sbiw	r30, 0x01	; 1
   103f4:	af 01       	movw	r20, r30
   103f6:	49 56       	subi	r20, 0x69	; 105
   103f8:	5f 40       	sbci	r21, 0x0F	; 15
   103fa:	21 e0       	ldi	r18, 0x01	; 1
   103fc:	69 e6       	ldi	r22, 0x69	; 105
   103fe:	7f e0       	ldi	r23, 0x0F	; 15
   10400:	8b ef       	ldi	r24, 0xFB	; 251
   10402:	9e e0       	ldi	r25, 0x0E	; 14
   10404:	0e 94 f2 91 	call	0x123e4	; 0x123e4 <_Z12Pub_Sub_DataPcPhjh>
   10408:	6f cf       	rjmp	.-290    	; 0x102e8 <_Z11Init_Brokerv+0x10c>
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						 }
					 }
				}
				 
				 connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   1040a:	10 92 53 0d 	sts	0x0D53, r1	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1040e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   10412:	81 30       	cpi	r24, 0x01	; 1
   10414:	51 f4       	brne	.+20     	; 0x1042a <_Z11Init_Brokerv+0x24e>
				 {
					 _kSERAIL_MON_WRITE("Ping to server");                /* for debugging purpose */
   10416:	63 ef       	ldi	r22, 0xF3	; 243
   10418:	78 e2       	ldi	r23, 0x28	; 40
   1041a:	82 e5       	ldi	r24, 0x52	; 82
   1041c:	94 e1       	ldi	r25, 0x14	; 20
   1041e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   10422:	82 e5       	ldi	r24, 0x52	; 82
   10424:	94 e1       	ldi	r25, 0x14	; 20
   10426:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_CLEAR();
				 }
				 continue;
			 }
			 
			loop_count = 0;
   1042a:	10 92 52 0d 	sts	0x0D52, r1	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   1042e:	10 92 51 0d 	sts	0x0D51, r1	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10432:	9e e6       	ldi	r25, 0x6E	; 110
   10434:	79 2e       	mov	r7, r25
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   10436:	28 e2       	ldi	r18, 0x28	; 40
   10438:	62 2e       	mov	r6, r18
				 continue;
			 }
			 
			loop_count = 0;
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
   1043a:	80 91 51 0d 	lds	r24, 0x0D51	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   1043e:	90 91 52 0d 	lds	r25, 0x0D52	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   10442:	0a 97       	sbiw	r24, 0x0a	; 10
   10444:	08 f0       	brcs	.+2      	; 0x10448 <_Z11Init_Brokerv+0x26c>
   10446:	47 c0       	rjmp	.+142    	; 0x104d6 <_Z11Init_Brokerv+0x2fa>
   10448:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   1044c:	81 30       	cpi	r24, 0x01	; 1
   1044e:	09 f4       	brne	.+2      	; 0x10452 <_Z11Init_Brokerv+0x276>
   10450:	42 c0       	rjmp	.+132    	; 0x104d6 <_Z11Init_Brokerv+0x2fa>
			{	
				 //memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
				 
				 memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10452:	d5 01       	movw	r26, r10
   10454:	e7 2d       	mov	r30, r7
   10456:	1d 92       	st	X+, r1
   10458:	ea 95       	dec	r30
   1045a:	e9 f7       	brne	.-6      	; 0x10456 <_Z11Init_Brokerv+0x27a>
				 memset((char *)temp_topic,0,sizeof(temp_topic));                                        /* clear the publish buff */
   1045c:	d8 01       	movw	r26, r16
   1045e:	e6 2d       	mov	r30, r6
   10460:	1d 92       	st	X+, r1
   10462:	ea 95       	dec	r30
   10464:	e9 f7       	brne	.-6      	; 0x10460 <_Z11Init_Brokerv+0x284>
				 
				 //sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
				 sprintf((char *)_gRecvd_Data,"{\"status\": \"true\"}");
   10466:	67 e8       	ldi	r22, 0x87	; 135
   10468:	76 e0       	ldi	r23, 0x06	; 6
   1046a:	8b ef       	ldi	r24, 0xFB	; 251
   1046c:	9e e0       	ldi	r25, 0x0E	; 14
   1046e:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
				 sprintf((char *)temp_topic,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);
   10472:	ff 92       	push	r15
   10474:	ef 92       	push	r14
   10476:	df 92       	push	r13
   10478:	cf 92       	push	r12
   1047a:	1f 93       	push	r17
   1047c:	0f 93       	push	r16
   1047e:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
				// MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   10482:	6b ef       	ldi	r22, 0xFB	; 251
   10484:	7e e0       	ldi	r23, 0x0E	; 14
   10486:	c8 01       	movw	r24, r16
   10488:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
				
				loop_count++;
   1048c:	80 91 51 0d 	lds	r24, 0x0D51	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   10490:	90 91 52 0d 	lds	r25, 0x0D52	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   10494:	01 96       	adiw	r24, 0x01	; 1
   10496:	90 93 52 0d 	sts	0x0D52, r25	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   1049a:	80 93 51 0d 	sts	0x0D51, r24	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
				
				previous = millis();
   1049e:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
   104a2:	1b 01       	movw	r2, r22
   104a4:	2c 01       	movw	r4, r24
   104a6:	0f 90       	pop	r0
   104a8:	0f 90       	pop	r0
   104aa:	0f 90       	pop	r0
   104ac:	0f 90       	pop	r0
   104ae:	0f 90       	pop	r0
   104b0:	0f 90       	pop	r0
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   104b2:	0e 94 dd d3 	call	0x1a7ba	; 0x1a7ba <millis>
   104b6:	dc 01       	movw	r26, r24
   104b8:	cb 01       	movw	r24, r22
   104ba:	82 19       	sub	r24, r2
   104bc:	93 09       	sbc	r25, r3
   104be:	a4 09       	sbc	r26, r4
   104c0:	b5 09       	sbc	r27, r5
   104c2:	88 3a       	cpi	r24, 0xA8	; 168
   104c4:	91 46       	sbci	r25, 0x61	; 97
   104c6:	a1 05       	cpc	r26, r1
   104c8:	b1 05       	cpc	r27, r1
   104ca:	e0 f5       	brcc	.+120    	; 0x10544 <_Z11Init_Brokerv+0x368>
   104cc:	80 91 a3 13 	lds	r24, 0x13A3	; 0x8013a3 <_sRuble_Parameters+0x5c>
   104d0:	81 30       	cpi	r24, 0x01	; 1
   104d2:	01 f5       	brne	.+64     	; 0x10514 <_Z11Init_Brokerv+0x338>
   104d4:	37 c0       	rjmp	.+110    	; 0x10544 <_Z11Init_Brokerv+0x368>
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
					_kSERIAL_MON_CLEAR();
				}
			}
			loop_count =0;
   104d6:	10 92 52 0d 	sts	0x0D52, r1	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   104da:	10 92 51 0d 	sts	0x0D51, r1	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   104de:	cd ce       	rjmp	.-614    	; 0x1027a <_Z11Init_Brokerv+0x9e>
				 MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
				 
				previous = millis();
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{ 
					 if(Subscribed_data_check())
   104e0:	0e 94 a4 71 	call	0xe348	; 0xe348 <_Z21Subscribed_data_checkv>
   104e4:	88 23       	and	r24, r24
   104e6:	09 f4       	brne	.+2      	; 0x104ea <_Z11Init_Brokerv+0x30e>
   104e8:	63 cf       	rjmp	.-314    	; 0x103b0 <_Z11Init_Brokerv+0x1d4>
					 {
						 if(Seperate_Out_Sub_Data())
   104ea:	0e 94 9c 64 	call	0xc938	; 0xc938 <_Z21Seperate_Out_Sub_Datav>
   104ee:	88 23       	and	r24, r24
   104f0:	09 f4       	brne	.+2      	; 0x104f4 <_Z11Init_Brokerv+0x318>
   104f2:	5e cf       	rjmp	.-324    	; 0x103b0 <_Z11Init_Brokerv+0x1d4>
						 {
							 //mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   104f4:	f4 01       	movw	r30, r8
   104f6:	01 90       	ld	r0, Z+
   104f8:	00 20       	and	r0, r0
   104fa:	e9 f7       	brne	.-6      	; 0x104f6 <_Z11Init_Brokerv+0x31a>
   104fc:	31 97       	sbiw	r30, 0x01	; 1
   104fe:	af 01       	movw	r20, r30
   10500:	49 56       	subi	r20, 0x69	; 105
   10502:	5f 40       	sbci	r21, 0x0F	; 15
   10504:	21 e0       	ldi	r18, 0x01	; 1
   10506:	69 e6       	ldi	r22, 0x69	; 105
   10508:	7f e0       	ldi	r23, 0x0F	; 15
   1050a:	8b ef       	ldi	r24, 0xFB	; 251
   1050c:	9e e0       	ldi	r25, 0x0E	; 14
   1050e:	0e 94 f2 91 	call	0x123e4	; 0x123e4 <_Z12Pub_Sub_DataPcPhjh>
   10512:	4e cf       	rjmp	.-356    	; 0x103b0 <_Z11Init_Brokerv+0x1d4>
				loop_count++;
				
				previous = millis();
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{
					if(Subscribed_data_check())
   10514:	0e 94 a4 71 	call	0xe348	; 0xe348 <_Z21Subscribed_data_checkv>
   10518:	88 23       	and	r24, r24
   1051a:	59 f2       	breq	.-106    	; 0x104b2 <_Z11Init_Brokerv+0x2d6>
					{
						if(Seperate_Out_Sub_Data())
   1051c:	0e 94 9c 64 	call	0xc938	; 0xc938 <_Z21Seperate_Out_Sub_Datav>
   10520:	88 23       	and	r24, r24
   10522:	39 f2       	breq	.-114    	; 0x104b2 <_Z11Init_Brokerv+0x2d6>
						{
							//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10524:	f4 01       	movw	r30, r8
   10526:	01 90       	ld	r0, Z+
   10528:	00 20       	and	r0, r0
   1052a:	e9 f7       	brne	.-6      	; 0x10526 <_Z11Init_Brokerv+0x34a>
   1052c:	31 97       	sbiw	r30, 0x01	; 1
   1052e:	af 01       	movw	r20, r30
   10530:	49 56       	subi	r20, 0x69	; 105
   10532:	5f 40       	sbci	r21, 0x0F	; 15
   10534:	21 e0       	ldi	r18, 0x01	; 1
   10536:	69 e6       	ldi	r22, 0x69	; 105
   10538:	7f e0       	ldi	r23, 0x0F	; 15
   1053a:	8b ef       	ldi	r24, 0xFB	; 251
   1053c:	9e e0       	ldi	r25, 0x0E	; 14
   1053e:	0e 94 f2 91 	call	0x123e4	; 0x123e4 <_Z12Pub_Sub_DataPcPhjh>
   10542:	b7 cf       	rjmp	.-146    	; 0x104b2 <_Z11Init_Brokerv+0x2d6>
						}
					}
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
   10544:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   10548:	81 30       	cpi	r24, 0x01	; 1
   1054a:	09 f0       	breq	.+2      	; 0x1054e <_Z11Init_Brokerv+0x372>
   1054c:	76 cf       	rjmp	.-276    	; 0x1043a <_Z11Init_Brokerv+0x25e>
				{
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
   1054e:	64 ec       	ldi	r22, 0xC4	; 196
   10550:	78 e2       	ldi	r23, 0x28	; 40
   10552:	82 e5       	ldi	r24, 0x52	; 82
   10554:	94 e1       	ldi	r25, 0x14	; 20
   10556:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
   1055a:	60 91 51 0d 	lds	r22, 0x0D51	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   1055e:	70 91 52 0d 	lds	r23, 0x0D52	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   10562:	4a e0       	ldi	r20, 0x0A	; 10
   10564:	50 e0       	ldi	r21, 0x00	; 0
   10566:	82 e5       	ldi	r24, 0x52	; 82
   10568:	94 e1       	ldi	r25, 0x14	; 20
   1056a:	0e 94 39 d2 	call	0x1a472	; 0x1a472 <_ZN5Print5printEji>
					_kSERIAL_MON_CLEAR();
   1056e:	82 e5       	ldi	r24, 0x52	; 82
   10570:	94 e1       	ldi	r25, 0x14	; 20
   10572:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   10576:	61 cf       	rjmp	.-318    	; 0x1043a <_Z11Init_Brokerv+0x25e>

	/******************* published the topic that Ruble is Restarted ********************/
	//unsigned char temp[33];
	//memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
	
	memset((char *)_gRecvd_Data,0,sizeof(_gRecvd_Data));
   10578:	8e e6       	ldi	r24, 0x6E	; 110
   1057a:	eb ef       	ldi	r30, 0xFB	; 251
   1057c:	fe e0       	ldi	r31, 0x0E	; 14
   1057e:	df 01       	movw	r26, r30
   10580:	1d 92       	st	X+, r1
   10582:	8a 95       	dec	r24
   10584:	e9 f7       	brne	.-6      	; 0x10580 <_Z11Init_Brokerv+0x3a4>
	sprintf((char *)_gRecvd_Data,"{\"sicca_start\": \"true\"}");
   10586:	69 ea       	ldi	r22, 0xA9	; 169
   10588:	76 e0       	ldi	r23, 0x06	; 6
   1058a:	cf 01       	movw	r24, r30
   1058c:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
	memset((char *)temp_topic, 0, sizeof(temp_topic));
   10590:	88 e2       	ldi	r24, 0x28	; 40
   10592:	f8 01       	movw	r30, r16
   10594:	11 92       	st	Z+, r1
   10596:	8a 95       	dec	r24
   10598:	e9 f7       	brne	.-6      	; 0x10594 <_Z11Init_Brokerv+0x3b8>
	
	sprintf((char *)temp_topic,"SICCA/CONTROLLER/RESTART/%s",_sRuble_Parameters.Ruble_ID);
   1059a:	87 e6       	ldi	r24, 0x67	; 103
   1059c:	93 e1       	ldi	r25, 0x13	; 19
   1059e:	9f 93       	push	r25
   105a0:	8f 93       	push	r24
   105a2:	81 ec       	ldi	r24, 0xC1	; 193
   105a4:	96 e0       	ldi	r25, 0x06	; 6
   105a6:	9f 93       	push	r25
   105a8:	8f 93       	push	r24
   105aa:	1f 93       	push	r17
   105ac:	0f 93       	push	r16
   105ae:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
	
	//MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gPub_Buff);
	
	MQTT_Publish((unsigned char *)temp_topic,(unsigned char *)_gRecvd_Data);
   105b2:	6b ef       	ldi	r22, 0xFB	; 251
   105b4:	7e e0       	ldi	r23, 0x0E	; 14
   105b6:	c8 01       	movw	r24, r16
   105b8:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
	
	_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_DATA;
   105bc:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   105c0:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   105c4:	84 60       	ori	r24, 0x04	; 4
   105c6:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   105ca:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
	
}
   105ce:	0f 90       	pop	r0
   105d0:	0f 90       	pop	r0
   105d2:	0f 90       	pop	r0
   105d4:	0f 90       	pop	r0
   105d6:	0f 90       	pop	r0
   105d8:	0f 90       	pop	r0
   105da:	80 e0       	ldi	r24, 0x00	; 0
   105dc:	a8 96       	adiw	r28, 0x28	; 40
   105de:	0f b6       	in	r0, 0x3f	; 63
   105e0:	f8 94       	cli
   105e2:	de bf       	out	0x3e, r29	; 62
   105e4:	0f be       	out	0x3f, r0	; 63
   105e6:	cd bf       	out	0x3d, r28	; 61
   105e8:	df 91       	pop	r29
   105ea:	cf 91       	pop	r28
   105ec:	1f 91       	pop	r17
   105ee:	0f 91       	pop	r16
   105f0:	ff 90       	pop	r15
   105f2:	ef 90       	pop	r14
   105f4:	df 90       	pop	r13
   105f6:	cf 90       	pop	r12
   105f8:	bf 90       	pop	r11
   105fa:	af 90       	pop	r10
   105fc:	9f 90       	pop	r9
   105fe:	8f 90       	pop	r8
   10600:	7f 90       	pop	r7
   10602:	6f 90       	pop	r6
   10604:	5f 90       	pop	r5
   10606:	4f 90       	pop	r4
   10608:	3f 90       	pop	r3
   1060a:	2f 90       	pop	r2
   1060c:	08 95       	ret

0001060e <initVariant>:
   1060e:	08 95       	ret

00010610 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
   10610:	0e 94 53 d4 	call	0x1a8a6	; 0x1a8a6 <init>

	initVariant();
   10614:	fc df       	rcall	.-8      	; 0x1060e <initVariant>
 
	static uint32_t tickcount;
	static unsigned char timer_count,i;
	i = 0;
	
	Interrupt_Time_Out = 1300;
   10616:	84 e1       	ldi	r24, 0x14	; 20
   10618:	95 e0       	ldi	r25, 0x05	; 5
   1061a:	90 93 92 0c 	sts	0x0C92, r25	; 0x800c92 <Interrupt_Time_Out+0x1>
   1061e:	80 93 91 0c 	sts	0x0C91, r24	; 0x800c91 <Interrupt_Time_Out>
	
	Initialise_Hardware();
   10622:	0e 94 d5 6e 	call	0xddaa	; 0xddaa <_Z19Initialise_Hardwarev>
	
	Param_Initialization();
   10626:	b4 d9       	rcall	.-3224   	; 0xf990 <_Z20Param_Initializationv>
	
	while (_kSERAIL_AT_CHECK())
   10628:	8f e0       	ldi	r24, 0x0F	; 15
   1062a:	96 e1       	ldi	r25, 0x16	; 22
   1062c:	0e 94 63 cf 	call	0x19ec6	; 0x19ec6 <_ZN14HardwareSerial9availableEv>
   10630:	89 2b       	or	r24, r25
   10632:	29 f0       	breq	.+10     	; 0x1063e <main+0x2e>
	{
		_kSERIAL_AT_READ();
   10634:	8f e0       	ldi	r24, 0x0F	; 15
   10636:	96 e1       	ldi	r25, 0x16	; 22
   10638:	0e 94 84 cf 	call	0x19f08	; 0x19f08 <_ZN14HardwareSerial4readEv>
	
	Initialise_Hardware();
	
	Param_Initialization();
	
	while (_kSERAIL_AT_CHECK())
   1063c:	f5 cf       	rjmp	.-22     	; 0x10628 <main+0x18>
	{
		_kSERIAL_AT_READ();
	}
	
	Reading_Time = _kSET;
   1063e:	c1 e0       	ldi	r28, 0x01	; 1
   10640:	c0 93 90 0c 	sts	0x0C90, r28	; 0x800c90 <Reading_Time>
	Get_Local_Time();
   10644:	0e 94 ef 5e 	call	0xbdde	; 0xbdde <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   10648:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <Reading_Time>
	Check_GSM_Signal();
   1064c:	0e 94 a1 5e 	call	0xbd42	; 0xbd42 <_Z16Check_GSM_Signalv>

	Start_Display_In_Interrupt = 1;
   10650:	c0 93 71 0c 	sts	0x0C71, r28	; 0x800c71 <Start_Display_In_Interrupt>
   _sRuble_Parameters.Display_Refresh = _kSET;
   10654:	c0 93 f8 13 	sts	0x13F8, r28	; 0x8013f8 <_sRuble_Parameters+0xb1>
   
	tickcount = g_uTick;
   10658:	80 91 82 0c 	lds	r24, 0x0C82	; 0x800c82 <g_uTick>
   1065c:	90 91 83 0c 	lds	r25, 0x0C83	; 0x800c83 <g_uTick+0x1>
   10660:	a0 91 84 0c 	lds	r26, 0x0C84	; 0x800c84 <g_uTick+0x2>
   10664:	b0 91 85 0c 	lds	r27, 0x0C85	; 0x800c85 <g_uTick+0x3>
	_sRuble_Parameters.Line_Fault_Flag = _kRESET;
   10668:	10 92 fb 13 	sts	0x13FB, r1	; 0x8013fb <_sRuble_Parameters+0xb4>
	_sRuble_Parameters.Pump_On_Flag =_ePUMP_OFF;
   1066c:	84 e0       	ldi	r24, 0x04	; 4
   1066e:	80 93 4f 13 	sts	0x134F, r24	; 0x80134f <_sRuble_Parameters+0x8>
   10672:	10 92 50 13 	sts	0x1350, r1	; 0x801350 <_sRuble_Parameters+0x9>
   10676:	10 92 51 13 	sts	0x1351, r1	; 0x801351 <_sRuble_Parameters+0xa>
   1067a:	10 92 52 13 	sts	0x1352, r1	; 0x801352 <_sRuble_Parameters+0xb>
   1067e:	10 92 53 13 	sts	0x1353, r1	; 0x801353 <_sRuble_Parameters+0xc>
   10682:	10 92 54 13 	sts	0x1354, r1	; 0x801354 <_sRuble_Parameters+0xd>
   10686:	10 92 55 13 	sts	0x1355, r1	; 0x801355 <_sRuble_Parameters+0xe>
   1068a:	10 92 56 13 	sts	0x1356, r1	; 0x801356 <_sRuble_Parameters+0xf>
	
	Valve_Grouping_Handler(_kFORCEFULYY_OFF);
   1068e:	83 e0       	ldi	r24, 0x03	; 3
   10690:	0e 94 03 ad 	call	0x15a06	; 0x15a06 <_Z22Valve_Grouping_Handlerh>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   10694:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   10698:	81 30       	cpi	r24, 0x01	; 1
   1069a:	c1 f4       	brne	.+48     	; 0x106cc <main+0xbc>
	{
		_kSERAIL_MON_WRITE("NOMINAL CURRENT : ");
   1069c:	6c e3       	ldi	r22, 0x3C	; 60
   1069e:	79 e2       	ldi	r23, 0x29	; 41
   106a0:	82 e5       	ldi	r24, 0x52	; 82
   106a2:	94 e1       	ldi	r25, 0x14	; 20
   106a4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sPump_Parameter.Pump_Nominal_Current);
   106a8:	40 91 3d 13 	lds	r20, 0x133D	; 0x80133d <_sPump_Parameter>
   106ac:	50 91 3e 13 	lds	r21, 0x133E	; 0x80133e <_sPump_Parameter+0x1>
   106b0:	60 91 3f 13 	lds	r22, 0x133F	; 0x80133f <_sPump_Parameter+0x2>
   106b4:	70 91 40 13 	lds	r23, 0x1340	; 0x801340 <_sPump_Parameter+0x3>
   106b8:	22 e0       	ldi	r18, 0x02	; 2
   106ba:	30 e0       	ldi	r19, 0x00	; 0
   106bc:	82 e5       	ldi	r24, 0x52	; 82
   106be:	94 e1       	ldi	r25, 0x14	; 20
   106c0:	0e 94 83 d3 	call	0x1a706	; 0x1a706 <_ZN5Print7printlnEdi>
		_kSERIAL_MON_CLEAR();
   106c4:	82 e5       	ldi	r24, 0x52	; 82
   106c6:	94 e1       	ldi	r25, 0x14	; 20
   106c8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
   106cc:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   106d0:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
	_sRuble_Parameters.Wireless_Pump_Operate_Timer = _kMAX_TIME_TO_MONITOR_WIRELESS_PUMP;
   106d4:	86 e9       	ldi	r24, 0x96	; 150
   106d6:	90 e0       	ldi	r25, 0x00	; 0
   106d8:	90 93 09 14 	sts	0x1409, r25	; 0x801409 <_sRuble_Parameters+0xc2>
   106dc:	80 93 08 14 	sts	0x1408, r24	; 0x801408 <_sRuble_Parameters+0xc1>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   106e0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   106e4:	81 30       	cpi	r24, 0x01	; 1
   106e6:	91 f4       	brne	.+36     	; 0x1070c <main+0xfc>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
   106e8:	69 e2       	ldi	r22, 0x29	; 41
   106ea:	79 e2       	ldi	r23, 0x29	; 41
   106ec:	82 e5       	ldi	r24, 0x52	; 82
   106ee:	94 e1       	ldi	r25, 0x14	; 20
   106f0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
   106f4:	60 91 3a 09 	lds	r22, 0x093A	; 0x80093a <_sSchedules+0x1c>
   106f8:	4a e0       	ldi	r20, 0x0A	; 10
   106fa:	50 e0       	ldi	r21, 0x00	; 0
   106fc:	82 e5       	ldi	r24, 0x52	; 82
   106fe:	94 e1       	ldi	r25, 0x14	; 20
   10700:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
   10704:	82 e5       	ldi	r24, 0x52	; 82
   10706:	94 e1       	ldi	r25, 0x14	; 20
   10708:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Shedule_Run_Status_Is_Triggered  = _kRESET;
   1070c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
	_sRuble_Parameters.Immediately_Turn_Off_Pump = _kRESET;
   10710:	10 92 25 14 	sts	0x1425, r1	; 0x801425 <_sRuble_Parameters+0xde>
	_sRuble_Parameters.Wireless_Pump_Command     = _kRESET;
   10714:	10 92 06 14 	sts	0x1406, r1	; 0x801406 <_sRuble_Parameters+0xbf>
	_sRuble_Parameters.Electricity_Status        = _kON;
   10718:	c1 e0       	ldi	r28, 0x01	; 1
   1071a:	c0 93 f5 13 	sts	0x13F5, r28	; 0x8013f5 <_sRuble_Parameters+0xae>
	
	Select_Operation_Mode();
   1071e:	0e 94 11 bf 	call	0x17e22	; 0x17e22 <_Z21Select_Operation_Modev>

	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10722:	10 92 06 0e 	sts	0x0E06, r1	; 0x800e06 <_sExtra_Plot+0x85>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status  = _kRESET;
   10726:	10 92 ed 0d 	sts	0x0DED, r1	; 0x800ded <_sExtra_Plot+0x6c>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _eSTOP_EXTRA_PLOT_OPERATION;
   1072a:	c0 93 ef 0d 	sts	0x0DEF, r28	; 0x800def <_sExtra_Plot+0x6e>
	
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   1072e:	10 92 9c 0d 	sts	0x0D9C, r1	; 0x800d9c <_sExtra_Plot+0x1b>
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
   10732:	85 e0       	ldi	r24, 0x05	; 5
   10734:	80 93 9e 0d 	sts	0x0D9E, r24	; 0x800d9e <_sExtra_Plot+0x1d>
	
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10738:	10 92 d2 0d 	sts	0x0DD2, r1	; 0x800dd2 <_sExtra_Plot+0x51>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   1073c:	10 92 eb 0d 	sts	0x0DEB, r1	; 0x800deb <_sExtra_Plot+0x6a>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kRESET;
   10740:	10 92 d4 0d 	sts	0x0DD4, r1	; 0x800dd4 <_sExtra_Plot+0x53>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _kRESET;
   10744:	10 92 ec 0d 	sts	0x0DEC, r1	; 0x800dec <_sExtra_Plot+0x6b>
	
	delay(5000);
   10748:	68 e8       	ldi	r22, 0x88	; 136
   1074a:	73 e1       	ldi	r23, 0x13	; 19
   1074c:	80 e0       	ldi	r24, 0x00	; 0
   1074e:	90 e0       	ldi	r25, 0x00	; 0
   10750:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
	Reading_Time = _kSET;
   10754:	c0 93 90 0c 	sts	0x0C90, r28	; 0x800c90 <Reading_Time>
	Get_Local_Time();
   10758:	0e 94 ef 5e 	call	0xbdde	; 0xbdde <_Z14Get_Local_Timev>
	Reading_Time = _kRESET;
   1075c:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <Reading_Time>
	

	unsigned int temp;
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0] !=0 &&
   10760:	80 91 f9 0d 	lds	r24, 0x0DF9	; 0x800df9 <_sExtra_Plot+0x78>
   10764:	90 91 fa 0d 	lds	r25, 0x0DFA	; 0x800dfa <_sExtra_Plot+0x79>
   10768:	00 97       	sbiw	r24, 0x00	; 0
   1076a:	01 f1       	breq	.+64     	; 0x107ac <main+0x19c>
   1076c:	20 91 ee 0d 	lds	r18, 0x0DEE	; 0x800dee <_sExtra_Plot+0x6d>
   10770:	29 36       	cpi	r18, 0x69	; 105
   10772:	e1 f4       	brne	.+56     	; 0x107ac <main+0x19c>
	(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER))
	{
		temp =  _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Max_Value[0];
		_sSchedules.Flush_Schedule_In_Every = temp *3600;
   10774:	60 91 ff 0d 	lds	r22, 0x0DFF	; 0x800dff <_sExtra_Plot+0x7e>
   10778:	70 91 00 0e 	lds	r23, 0x0E00	; 0x800e00 <_sExtra_Plot+0x7f>
   1077c:	40 e1       	ldi	r20, 0x10	; 16
   1077e:	5e e0       	ldi	r21, 0x0E	; 14
   10780:	64 9f       	mul	r22, r20
   10782:	90 01       	movw	r18, r0
   10784:	65 9f       	mul	r22, r21
   10786:	30 0d       	add	r19, r0
   10788:	74 9f       	mul	r23, r20
   1078a:	30 0d       	add	r19, r0
   1078c:	11 24       	eor	r1, r1
   1078e:	30 93 8b 0b 	sts	0x0B8B, r19	; 0x800b8b <_sSchedules+0x26d>
   10792:	20 93 8a 0b 	sts	0x0B8A, r18	; 0x800b8a <_sSchedules+0x26c>
		temp = _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0];
		_sSchedules.Flush_Schedule_For = temp * 60;
   10796:	4c e3       	ldi	r20, 0x3C	; 60
   10798:	48 9f       	mul	r20, r24
   1079a:	90 01       	movw	r18, r0
   1079c:	49 9f       	mul	r20, r25
   1079e:	30 0d       	add	r19, r0
   107a0:	11 24       	eor	r1, r1
   107a2:	30 93 8d 0b 	sts	0x0B8D, r19	; 0x800b8d <_sSchedules+0x26f>
   107a6:	20 93 8c 0b 	sts	0x0B8C, r18	; 0x800b8c <_sSchedules+0x26e>
   107aa:	08 c0       	rjmp	.+16     	; 0x107bc <main+0x1ac>
	}
	else
	{
		_sSchedules.Flush_Schedule_In_Every = 0;
   107ac:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
   107b0:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
		_sSchedules.Flush_Schedule_For = 0;
   107b4:	10 92 8d 0b 	sts	0x0B8D, r1	; 0x800b8d <_sSchedules+0x26f>
   107b8:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
	}
	
	_gStart_Wdt = _kSET;
   107bc:	81 e0       	ldi	r24, 0x01	; 1
   107be:	80 93 97 0c 	sts	0x0C97, r24	; 0x800c97 <_gStart_Wdt>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
   107c2:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
	
	_gStart_Monitoring_Three_Phase = 0;
   107c6:	10 92 94 0c 	sts	0x0C94, r1	; 0x800c94 <_gStart_Monitoring_Three_Phase>
	_gTimer_For_Three_Phase_Testing = _kRESET;
   107ca:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_gTimer_For_Three_Phase_Testing>
			Keeps_Monitor_Server_Connection();	
			
			if(timer_count > 80)          
			{
				timer_count = 0;
				Reading_Time = _kSET;
   107ce:	11 e0       	ldi	r17, 0x01	; 1
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   107d0:	c9 e6       	ldi	r28, 0x69	; 105
   107d2:	df e0       	ldi	r29, 0x0F	; 15
	_gTimer_For_Three_Phase_Testing = _kRESET;
	
	
	while (1)
	{
		if(_g_1Sec_Time)
   107d4:	80 91 7e 0c 	lds	r24, 0x0C7E	; 0x800c7e <_g_1Sec_Time>
   107d8:	90 91 7f 0c 	lds	r25, 0x0C7F	; 0x800c7f <_g_1Sec_Time+0x1>
   107dc:	a0 91 80 0c 	lds	r26, 0x0C80	; 0x800c80 <_g_1Sec_Time+0x2>
   107e0:	b0 91 81 0c 	lds	r27, 0x0C81	; 0x800c81 <_g_1Sec_Time+0x3>
   107e4:	89 2b       	or	r24, r25
   107e6:	8a 2b       	or	r24, r26
   107e8:	8b 2b       	or	r24, r27
   107ea:	09 f4       	brne	.+2      	; 0x107ee <main+0x1de>
   107ec:	48 c0       	rjmp	.+144    	; 0x1087e <main+0x26e>
		{
			_g_1Sec_Time = _kRESET;
   107ee:	10 92 7e 0c 	sts	0x0C7E, r1	; 0x800c7e <_g_1Sec_Time>
   107f2:	10 92 7f 0c 	sts	0x0C7F, r1	; 0x800c7f <_g_1Sec_Time+0x1>
   107f6:	10 92 80 0c 	sts	0x0C80, r1	; 0x800c80 <_g_1Sec_Time+0x2>
   107fa:	10 92 81 0c 	sts	0x0C81, r1	; 0x800c81 <_g_1Sec_Time+0x3>
			tickcount = g_uTick;
   107fe:	80 91 82 0c 	lds	r24, 0x0C82	; 0x800c82 <g_uTick>
   10802:	90 91 83 0c 	lds	r25, 0x0C83	; 0x800c83 <g_uTick+0x1>
   10806:	a0 91 84 0c 	lds	r26, 0x0C84	; 0x800c84 <g_uTick+0x2>
   1080a:	b0 91 85 0c 	lds	r27, 0x0C85	; 0x800c85 <g_uTick+0x3>
			timer_count++;
   1080e:	80 91 68 0d 	lds	r24, 0x0D68	; 0x800d68 <_ZZ4mainE11timer_count>
   10812:	8f 5f       	subi	r24, 0xFF	; 255
   10814:	80 93 68 0d 	sts	0x0D68, r24	; 0x800d68 <_ZZ4mainE11timer_count>
			_gWdt_Counter = 0;
   10818:	10 92 99 0c 	sts	0x0C99, r1	; 0x800c99 <_gWdt_Counter+0x1>
   1081c:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <_gWdt_Counter>
			
			Publish_Data();
   10820:	0e 94 09 a3 	call	0x14612	; 0x14612 <_Z12Publish_Datav>
			
			Lora_Operation();
   10824:	0e 94 f0 cc 	call	0x199e0	; 0x199e0 <_Z14Lora_Operationv>
			
			Run_Extra_Plot_Operation();	
   10828:	0e 94 e4 c7 	call	0x18fc8	; 0x18fc8 <_Z24Run_Extra_Plot_Operationv>
			
			Run_Operation();             
   1082c:	0e 94 d0 c2 	call	0x185a0	; 0x185a0 <_Z13Run_Operationv>
			
			Display_Update_1();
   10830:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
			
			Keeps_Monitor_Server_Connection();	
   10834:	0e 94 19 73 	call	0xe632	; 0xe632 <_Z31Keeps_Monitor_Server_Connectionv>
			
			if(timer_count > 80)          
   10838:	80 91 68 0d 	lds	r24, 0x0D68	; 0x800d68 <_ZZ4mainE11timer_count>
   1083c:	81 35       	cpi	r24, 0x51	; 81
   1083e:	58 f0       	brcs	.+22     	; 0x10856 <main+0x246>
			{
				timer_count = 0;
   10840:	10 92 68 0d 	sts	0x0D68, r1	; 0x800d68 <_ZZ4mainE11timer_count>
				Reading_Time = _kSET;
   10844:	10 93 90 0c 	sts	0x0C90, r17	; 0x800c90 <Reading_Time>
				Get_Local_Time();
   10848:	0e 94 ef 5e 	call	0xbdde	; 0xbdde <_Z14Get_Local_Timev>
				Reading_Time = _kRESET;
   1084c:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <Reading_Time>
				Hard_Coded_Flush_Valve(_kON);	
   10850:	81 e0       	ldi	r24, 0x01	; 1
   10852:	0e 94 15 24 	call	0x482a	; 0x482a <_Z22Hard_Coded_Flush_Valveh>
			}
			
			Wireless_Motor_Enable_Disable_Check(); 
   10856:	0e 94 17 24 	call	0x482e	; 0x482e <_Z35Wireless_Motor_Enable_Disable_Checkv>
			
			Handle_Wireless_Pump();
   1085a:	0e 94 9d c8 	call	0x1913a	; 0x1913a <_Z20Handle_Wireless_Pumpv>
			
			Plot_Status_List_Monitor();
   1085e:	0e 94 7d c9 	call	0x192fa	; 0x192fa <_Z24Plot_Status_List_Monitorv>
			
			Pump_Status_List_Monitor();
   10862:	0e 94 20 c9 	call	0x19240	; 0x19240 <_Z24Pump_Status_List_Monitorv>
			
			Pump_Run_Monitoring();
   10866:	0e 94 7d 73 	call	0xe6fa	; 0xe6fa <_Z19Pump_Run_Monitoringv>
			
			Flush_Controlling();
   1086a:	0e 94 e1 24 	call	0x49c2	; 0x49c2 <_Z17Flush_Controllingv>
			
			Debug_Check();
   1086e:	0e 94 f3 73 	call	0xe7e6	; 0xe7e6 <_Z11Debug_Checkv>
			
			Calibration_Of_Pump();
   10872:	0e 94 39 74 	call	0xe872	; 0xe872 <_Z19Calibration_Of_Pumpv>
			
			Select_Operation_Mode();
   10876:	0e 94 11 bf 	call	0x17e22	; 0x17e22 <_Z21Select_Operation_Modev>
			
			Faults_Handler();
   1087a:	0e 94 02 76 	call	0xec04	; 0xec04 <_Z14Faults_Handlerv>
			
		}	
		
		if(Subscribed_data_check())
   1087e:	0e 94 a4 71 	call	0xe348	; 0xe348 <_Z21Subscribed_data_checkv>
   10882:	88 23       	and	r24, r24
   10884:	09 f4       	brne	.+2      	; 0x10888 <main+0x278>
   10886:	a6 cf       	rjmp	.-180    	; 0x107d4 <main+0x1c4>
		{
			if(Seperate_Out_Sub_Data())
   10888:	0e 94 9c 64 	call	0xc938	; 0xc938 <_Z21Seperate_Out_Sub_Datav>
   1088c:	88 23       	and	r24, r24
   1088e:	09 f4       	brne	.+2      	; 0x10892 <main+0x282>
   10890:	a1 cf       	rjmp	.-190    	; 0x107d4 <main+0x1c4>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10892:	fe 01       	movw	r30, r28
   10894:	01 90       	ld	r0, Z+
   10896:	00 20       	and	r0, r0
   10898:	e9 f7       	brne	.-6      	; 0x10894 <main+0x284>
   1089a:	31 97       	sbiw	r30, 0x01	; 1
   1089c:	af 01       	movw	r20, r30
   1089e:	49 56       	subi	r20, 0x69	; 105
   108a0:	5f 40       	sbci	r21, 0x0F	; 15
   108a2:	21 e0       	ldi	r18, 0x01	; 1
   108a4:	69 e6       	ldi	r22, 0x69	; 105
   108a6:	7f e0       	ldi	r23, 0x0F	; 15
   108a8:	8b ef       	ldi	r24, 0xFB	; 251
   108aa:	9e e0       	ldi	r25, 0x0E	; 14
   108ac:	0e 94 f2 91 	call	0x123e4	; 0x123e4 <_Z12Pub_Sub_DataPcPhjh>
   108b0:	91 cf       	rjmp	.-222    	; 0x107d4 <main+0x1c4>

000108b2 <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj>:
				/* if all valve gets on */
			
			}
		}
	}
}
   108b2:	fc 01       	movw	r30, r24
   108b4:	26 81       	ldd	r18, Z+6	; 0x06
   108b6:	37 81       	ldd	r19, Z+7	; 0x07
   108b8:	62 0f       	add	r22, r18
   108ba:	73 1f       	adc	r23, r19
   108bc:	84 81       	ldd	r24, Z+4	; 0x04
   108be:	95 81       	ldd	r25, Z+5	; 0x05
   108c0:	86 17       	cp	r24, r22
   108c2:	97 07       	cpc	r25, r23
   108c4:	38 f0       	brcs	.+14     	; 0x108d4 <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj+0x22>
   108c6:	82 81       	ldd	r24, Z+2	; 0x02
   108c8:	93 81       	ldd	r25, Z+3	; 0x03
   108ca:	77 83       	std	Z+7, r23	; 0x07
   108cc:	66 83       	std	Z+6, r22	; 0x06
   108ce:	82 0f       	add	r24, r18
   108d0:	93 1f       	adc	r25, r19
   108d2:	08 95       	ret
   108d4:	80 e0       	ldi	r24, 0x00	; 0
   108d6:	90 e0       	ldi	r25, 0x00	; 0
   108d8:	08 95       	ret

000108da <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25>:
   108da:	77 fd       	sbrc	r23, 7
   108dc:	06 c0       	rjmp	.+12     	; 0x108ea <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25+0x10>
   108de:	ab 01       	movw	r20, r22
   108e0:	77 0f       	add	r23, r23
   108e2:	66 0b       	sbc	r22, r22
   108e4:	77 0b       	sbc	r23, r23
   108e6:	24 e0       	ldi	r18, 0x04	; 4
   108e8:	09 c0       	rjmp	.+18     	; 0x108fc <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25+0x22>
   108ea:	44 27       	eor	r20, r20
   108ec:	55 27       	eor	r21, r21
   108ee:	46 1b       	sub	r20, r22
   108f0:	57 0b       	sbc	r21, r23
   108f2:	05 2e       	mov	r0, r21
   108f4:	00 0c       	add	r0, r0
   108f6:	66 0b       	sbc	r22, r22
   108f8:	77 0b       	sbc	r23, r23
   108fa:	25 e0       	ldi	r18, 0x05	; 5
   108fc:	fc 01       	movw	r30, r24
   108fe:	20 83       	st	Z, r18
   10900:	41 83       	std	Z+1, r20	; 0x01
   10902:	52 83       	std	Z+2, r21	; 0x02
   10904:	63 83       	std	Z+3, r22	; 0x03
   10906:	74 83       	std	Z+4, r23	; 0x04
   10908:	81 e0       	ldi	r24, 0x01	; 1
   1090a:	08 95       	ret

0001090c <_ZN5Print5writeEPKc>:
   1090c:	61 15       	cp	r22, r1
   1090e:	71 05       	cpc	r23, r1
   10910:	79 f0       	breq	.+30     	; 0x10930 <_ZN5Print5writeEPKc+0x24>
   10912:	fb 01       	movw	r30, r22
   10914:	01 90       	ld	r0, Z+
   10916:	00 20       	and	r0, r0
   10918:	e9 f7       	brne	.-6      	; 0x10914 <_ZN5Print5writeEPKc+0x8>
   1091a:	31 97       	sbiw	r30, 0x01	; 1
   1091c:	af 01       	movw	r20, r30
   1091e:	46 1b       	sub	r20, r22
   10920:	57 0b       	sbc	r21, r23
   10922:	dc 01       	movw	r26, r24
   10924:	ed 91       	ld	r30, X+
   10926:	fc 91       	ld	r31, X
   10928:	02 80       	ldd	r0, Z+2	; 0x02
   1092a:	f3 81       	ldd	r31, Z+3	; 0x03
   1092c:	e0 2d       	mov	r30, r0
   1092e:	19 94       	eijmp
   10930:	80 e0       	ldi	r24, 0x00	; 0
   10932:	90 e0       	ldi	r25, 0x00	; 0
   10934:	08 95       	ret

00010936 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>:
   10936:	db 01       	movw	r26, r22
   10938:	10 97       	sbiw	r26, 0x00	; 0
   1093a:	49 f0       	breq	.+18     	; 0x1094e <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE+0x18>
   1093c:	ed 91       	ld	r30, X+
   1093e:	fc 91       	ld	r31, X
   10940:	11 97       	sbiw	r26, 0x01	; 1
   10942:	01 90       	ld	r0, Z+
   10944:	f0 81       	ld	r31, Z
   10946:	e0 2d       	mov	r30, r0
   10948:	bc 01       	movw	r22, r24
   1094a:	cd 01       	movw	r24, r26
   1094c:	19 94       	eijmp
   1094e:	80 e0       	ldi	r24, 0x00	; 0
   10950:	90 e0       	ldi	r25, 0x00	; 0
   10952:	08 95       	ret

00010954 <_ZN11ArduinoJson9JsonArray7invalidEv>:
   10954:	80 91 46 14 	lds	r24, 0x1446	; 0x801446 <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10958:	81 11       	cpse	r24, r1
   1095a:	0b c0       	rjmp	.+22     	; 0x10972 <_ZN11ArduinoJson9JsonArray7invalidEv+0x1e>
   1095c:	10 92 4f 14 	sts	0x144F, r1	; 0x80144f <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x1>
   10960:	10 92 4e 14 	sts	0x144E, r1	; 0x80144e <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10964:	10 92 51 14 	sts	0x1451, r1	; 0x801451 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x3>
   10968:	10 92 50 14 	sts	0x1450, r1	; 0x801450 <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x2>
   1096c:	81 e0       	ldi	r24, 0x01	; 1
   1096e:	80 93 46 14 	sts	0x1446, r24	; 0x801446 <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10972:	8e e4       	ldi	r24, 0x4E	; 78
   10974:	94 e1       	ldi	r25, 0x14	; 20
   10976:	08 95       	ret

00010978 <_ZN11ArduinoJson10JsonObject7invalidEv>:
   10978:	80 91 3a 14 	lds	r24, 0x143A	; 0x80143a <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   1097c:	81 11       	cpse	r24, r1
   1097e:	0b c0       	rjmp	.+22     	; 0x10996 <_ZN11ArduinoJson10JsonObject7invalidEv+0x1e>
   10980:	10 92 43 14 	sts	0x1443, r1	; 0x801443 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x1>
   10984:	10 92 42 14 	sts	0x1442, r1	; 0x801442 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10988:	10 92 45 14 	sts	0x1445, r1	; 0x801445 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x3>
   1098c:	10 92 44 14 	sts	0x1444, r1	; 0x801444 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x2>
   10990:	81 e0       	ldi	r24, 0x01	; 1
   10992:	80 93 3a 14 	sts	0x143A, r24	; 0x80143a <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10996:	82 e4       	ldi	r24, 0x42	; 66
   10998:	94 e1       	ldi	r25, 0x14	; 20
   1099a:	08 95       	ret

0001099c <_ZN11ArduinoJson10JsonBuffer12createObjectEv>:
   1099c:	cf 93       	push	r28
   1099e:	df 93       	push	r29
   109a0:	ec 01       	movw	r28, r24
   109a2:	bc 01       	movw	r22, r24
   109a4:	84 e0       	ldi	r24, 0x04	; 4
   109a6:	90 e0       	ldi	r25, 0x00	; 0
   109a8:	c6 df       	rcall	.-116    	; 0x10936 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   109aa:	00 97       	sbiw	r24, 0x00	; 0
   109ac:	41 f0       	breq	.+16     	; 0x109be <_ZN11ArduinoJson10JsonBuffer12createObjectEv+0x22>
   109ae:	fc 01       	movw	r30, r24
   109b0:	d1 83       	std	Z+1, r29	; 0x01
   109b2:	c0 83       	st	Z, r28
   109b4:	13 82       	std	Z+3, r1	; 0x03
   109b6:	12 82       	std	Z+2, r1	; 0x02
   109b8:	df 91       	pop	r29
   109ba:	cf 91       	pop	r28
   109bc:	08 95       	ret
   109be:	df 91       	pop	r29
   109c0:	cf 91       	pop	r28
   109c2:	da cf       	rjmp	.-76     	; 0x10978 <_ZN11ArduinoJson10JsonObject7invalidEv>

000109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
   109c4:	0f 93       	push	r16
   109c6:	1f 93       	push	r17
   109c8:	cf 93       	push	r28
   109ca:	df 93       	push	r29
   109cc:	1f 92       	push	r1
   109ce:	1f 92       	push	r1
   109d0:	cd b7       	in	r28, 0x3d	; 61
   109d2:	de b7       	in	r29, 0x3e	; 62
   109d4:	8b 01       	movw	r16, r22
   109d6:	fb 01       	movw	r30, r22
   109d8:	60 81       	ld	r22, Z
   109da:	9a 83       	std	Y+2, r25	; 0x02
   109dc:	89 83       	std	Y+1, r24	; 0x01
   109de:	ce 01       	movw	r24, r28
   109e0:	01 96       	adiw	r24, 0x01	; 1
   109e2:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
   109e6:	c8 01       	movw	r24, r16
   109e8:	0f 90       	pop	r0
   109ea:	0f 90       	pop	r0
   109ec:	df 91       	pop	r29
   109ee:	cf 91       	pop	r28
   109f0:	1f 91       	pop	r17
   109f2:	0f 91       	pop	r16
   109f4:	08 95       	ret

000109f6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>:
   109f6:	ef 92       	push	r14
   109f8:	ff 92       	push	r15
   109fa:	0f 93       	push	r16
   109fc:	1f 93       	push	r17
   109fe:	cf 93       	push	r28
   10a00:	df 93       	push	r29
   10a02:	1f 92       	push	r1
   10a04:	1f 92       	push	r1
   10a06:	cd b7       	in	r28, 0x3d	; 61
   10a08:	de b7       	in	r29, 0x3e	; 62
   10a0a:	8c 01       	movw	r16, r24
   10a0c:	87 e4       	ldi	r24, 0x47	; 71
   10a0e:	e8 2e       	mov	r14, r24
   10a10:	83 e1       	ldi	r24, 0x13	; 19
   10a12:	f8 2e       	mov	r15, r24
   10a14:	f7 01       	movw	r30, r14
   10a16:	66 89       	ldd	r22, Z+22	; 0x16
   10a18:	1a 83       	std	Y+2, r17	; 0x02
   10a1a:	09 83       	std	Y+1, r16	; 0x01
   10a1c:	ce 01       	movw	r24, r28
   10a1e:	01 96       	adiw	r24, 0x01	; 1
   10a20:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
   10a24:	f7 01       	movw	r30, r14
   10a26:	67 89       	ldd	r22, Z+23	; 0x17
   10a28:	0f 5f       	subi	r16, 0xFF	; 255
   10a2a:	1f 4f       	sbci	r17, 0xFF	; 255
   10a2c:	1a 83       	std	Y+2, r17	; 0x02
   10a2e:	09 83       	std	Y+1, r16	; 0x01
   10a30:	ce 01       	movw	r24, r28
   10a32:	01 96       	adiw	r24, 0x01	; 1
   10a34:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
   10a38:	8d e5       	ldi	r24, 0x5D	; 93
   10a3a:	93 e1       	ldi	r25, 0x13	; 19
   10a3c:	0f 90       	pop	r0
   10a3e:	0f 90       	pop	r0
   10a40:	df 91       	pop	r29
   10a42:	cf 91       	pop	r28
   10a44:	1f 91       	pop	r17
   10a46:	0f 91       	pop	r16
   10a48:	ff 90       	pop	r15
   10a4a:	ef 90       	pop	r14
   10a4c:	08 95       	ret

00010a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>:
   10a4e:	ef 92       	push	r14
   10a50:	ff 92       	push	r15
   10a52:	0f 93       	push	r16
   10a54:	1f 93       	push	r17
   10a56:	cf 93       	push	r28
   10a58:	df 93       	push	r29
   10a5a:	1f 92       	push	r1
   10a5c:	1f 92       	push	r1
   10a5e:	cd b7       	in	r28, 0x3d	; 61
   10a60:	de b7       	in	r29, 0x3e	; 62
   10a62:	8e e1       	ldi	r24, 0x1E	; 30
   10a64:	e8 2e       	mov	r14, r24
   10a66:	84 e1       	ldi	r24, 0x14	; 20
   10a68:	f8 2e       	mov	r15, r24
   10a6a:	08 e8       	ldi	r16, 0x88	; 136
   10a6c:	1e e0       	ldi	r17, 0x0E	; 14
   10a6e:	f7 01       	movw	r30, r14
   10a70:	61 91       	ld	r22, Z+
   10a72:	7f 01       	movw	r14, r30
   10a74:	1a 83       	std	Y+2, r17	; 0x02
   10a76:	09 83       	std	Y+1, r16	; 0x01
   10a78:	ce 01       	movw	r24, r28
   10a7a:	01 96       	adiw	r24, 0x01	; 1
   10a7c:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
   10a80:	0f 5f       	subi	r16, 0xFF	; 255
   10a82:	1f 4f       	sbci	r17, 0xFF	; 255
   10a84:	0d 38       	cpi	r16, 0x8D	; 141
   10a86:	fe e0       	ldi	r31, 0x0E	; 14
   10a88:	1f 07       	cpc	r17, r31
   10a8a:	89 f7       	brne	.-30     	; 0x10a6e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39+0x20>
   10a8c:	8e e1       	ldi	r24, 0x1E	; 30
   10a8e:	94 e1       	ldi	r25, 0x14	; 20
   10a90:	0f 90       	pop	r0
   10a92:	0f 90       	pop	r0
   10a94:	df 91       	pop	r29
   10a96:	cf 91       	pop	r28
   10a98:	1f 91       	pop	r17
   10a9a:	0f 91       	pop	r16
   10a9c:	ff 90       	pop	r15
   10a9e:	ef 90       	pop	r14
   10aa0:	08 95       	ret

00010aa2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>:
   10aa2:	ef 92       	push	r14
   10aa4:	ff 92       	push	r15
   10aa6:	0f 93       	push	r16
   10aa8:	1f 93       	push	r17
   10aaa:	cf 93       	push	r28
   10aac:	df 93       	push	r29
   10aae:	1f 92       	push	r1
   10ab0:	1f 92       	push	r1
   10ab2:	cd b7       	in	r28, 0x3d	; 61
   10ab4:	de b7       	in	r29, 0x3e	; 62
   10ab6:	8e e1       	ldi	r24, 0x1E	; 30
   10ab8:	e8 2e       	mov	r14, r24
   10aba:	89 e0       	ldi	r24, 0x09	; 9
   10abc:	f8 2e       	mov	r15, r24
   10abe:	0a e1       	ldi	r16, 0x1A	; 26
   10ac0:	15 e0       	ldi	r17, 0x05	; 5
   10ac2:	f7 01       	movw	r30, r14
   10ac4:	61 91       	ld	r22, Z+
   10ac6:	7f 01       	movw	r14, r30
   10ac8:	1a 83       	std	Y+2, r17	; 0x02
   10aca:	09 83       	std	Y+1, r16	; 0x01
   10acc:	ce 01       	movw	r24, r28
   10ace:	01 96       	adiw	r24, 0x01	; 1
   10ad0:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
   10ad4:	0f 5f       	subi	r16, 0xFF	; 255
   10ad6:	1f 4f       	sbci	r17, 0xFF	; 255
   10ad8:	02 39       	cpi	r16, 0x92	; 146
   10ada:	f7 e0       	ldi	r31, 0x07	; 7
   10adc:	1f 07       	cpc	r17, r31
   10ade:	89 f7       	brne	.-30     	; 0x10ac2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41+0x20>
   10ae0:	8e e1       	ldi	r24, 0x1E	; 30
   10ae2:	99 e0       	ldi	r25, 0x09	; 9
   10ae4:	0f 90       	pop	r0
   10ae6:	0f 90       	pop	r0
   10ae8:	df 91       	pop	r29
   10aea:	cf 91       	pop	r28
   10aec:	1f 91       	pop	r17
   10aee:	0f 91       	pop	r16
   10af0:	ff 90       	pop	r15
   10af2:	ef 90       	pop	r14
   10af4:	08 95       	ret

00010af6 <_Z18Read_Switch_Statusv>:
   10af6:	61 e0       	ldi	r22, 0x01	; 1
   10af8:	84 e2       	ldi	r24, 0x24	; 36
   10afa:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   10afe:	86 e2       	ldi	r24, 0x26	; 38
   10b00:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   10b04:	30 91 80 0d 	lds	r19, 0x0D80	; 0x800d80 <_ZZ18Read_Switch_StatusvE9key_press>
   10b08:	33 23       	and	r19, r19
   10b0a:	b9 f0       	breq	.+46     	; 0x10b3a <_Z18Read_Switch_Statusv+0x44>
   10b0c:	90 91 7f 0d 	lds	r25, 0x0D7F	; 0x800d7f <_ZZ18Read_Switch_StatusvE10time_count>
   10b10:	94 30       	cpi	r25, 0x04	; 4
   10b12:	30 f0       	brcs	.+12     	; 0x10b20 <_Z18Read_Switch_Statusv+0x2a>
   10b14:	31 30       	cpi	r19, 0x01	; 1
   10b16:	61 f4       	brne	.+24     	; 0x10b30 <_Z18Read_Switch_Statusv+0x3a>
   10b18:	82 e0       	ldi	r24, 0x02	; 2
   10b1a:	80 93 71 13 	sts	0x1371, r24	; 0x801371 <_sRuble_Parameters+0x2a>
   10b1e:	08 c0       	rjmp	.+16     	; 0x10b30 <_Z18Read_Switch_Statusv+0x3a>
   10b20:	21 e0       	ldi	r18, 0x01	; 1
   10b22:	82 27       	eor	r24, r18
   10b24:	38 13       	cpse	r19, r24
   10b26:	04 c0       	rjmp	.+8      	; 0x10b30 <_Z18Read_Switch_Statusv+0x3a>
   10b28:	9f 5f       	subi	r25, 0xFF	; 255
   10b2a:	90 93 7f 0d 	sts	0x0D7F, r25	; 0x800d7f <_ZZ18Read_Switch_StatusvE10time_count>
   10b2e:	08 95       	ret
   10b30:	10 92 7f 0d 	sts	0x0D7F, r1	; 0x800d7f <_ZZ18Read_Switch_StatusvE10time_count>
   10b34:	10 92 80 0d 	sts	0x0D80, r1	; 0x800d80 <_ZZ18Read_Switch_StatusvE9key_press>
   10b38:	08 95       	ret
   10b3a:	91 e0       	ldi	r25, 0x01	; 1
   10b3c:	89 27       	eor	r24, r25
   10b3e:	80 93 80 0d 	sts	0x0D80, r24	; 0x800d80 <_ZZ18Read_Switch_StatusvE9key_press>
   10b42:	81 11       	cpse	r24, r1
   10b44:	0c c0       	rjmp	.+24     	; 0x10b5e <_Z18Read_Switch_Statusv+0x68>
   10b46:	80 91 7e 0d 	lds	r24, 0x0D7E	; 0x800d7e <_ZZ18Read_Switch_StatusvE11time_count2>
   10b4a:	84 30       	cpi	r24, 0x04	; 4
   10b4c:	28 f0       	brcs	.+10     	; 0x10b58 <_Z18Read_Switch_Statusv+0x62>
   10b4e:	10 92 7e 0d 	sts	0x0D7E, r1	; 0x800d7e <_ZZ18Read_Switch_StatusvE11time_count2>
   10b52:	90 93 71 13 	sts	0x1371, r25	; 0x801371 <_sRuble_Parameters+0x2a>
   10b56:	08 95       	ret
   10b58:	8f 5f       	subi	r24, 0xFF	; 255
   10b5a:	80 93 7e 0d 	sts	0x0D7E, r24	; 0x800d7e <_ZZ18Read_Switch_StatusvE11time_count2>
   10b5e:	08 95       	ret

00010b60 <_Z16Dummy_Data_Storev>:
   10b60:	8f 92       	push	r8
   10b62:	9f 92       	push	r9
   10b64:	af 92       	push	r10
   10b66:	bf 92       	push	r11
   10b68:	cf 92       	push	r12
   10b6a:	df 92       	push	r13
   10b6c:	ef 92       	push	r14
   10b6e:	ff 92       	push	r15
   10b70:	0f 93       	push	r16
   10b72:	1f 93       	push	r17
   10b74:	cf 93       	push	r28
   10b76:	df 93       	push	r29
   10b78:	1f 92       	push	r1
   10b7a:	1f 92       	push	r1
   10b7c:	cd b7       	in	r28, 0x3d	; 61
   10b7e:	de b7       	in	r29, 0x3e	; 62
   10b80:	fd ef       	ldi	r31, 0xFD	; 253
   10b82:	ef 2e       	mov	r14, r31
   10b84:	fc e0       	ldi	r31, 0x0C	; 12
   10b86:	ff 2e       	mov	r15, r31
   10b88:	10 e0       	ldi	r17, 0x00	; 0
   10b8a:	f7 01       	movw	r30, r14
   10b8c:	10 82       	st	Z, r1
   10b8e:	81 2f       	mov	r24, r17
   10b90:	37 d8       	rcall	.-3986   	; 0xfc00 <_Z16Lira_Data_EEPROMh>
   10b92:	f6 e0       	ldi	r31, 0x06	; 6
   10b94:	ef 0e       	add	r14, r31
   10b96:	f1 1c       	adc	r15, r1
   10b98:	1f 5f       	subi	r17, 0xFF	; 255
   10b9a:	1e 30       	cpi	r17, 0x0E	; 14
   10b9c:	b1 f7       	brne	.-20     	; 0x10b8a <_Z16Dummy_Data_Storev+0x2a>
   10b9e:	e7 eb       	ldi	r30, 0xB7	; 183
   10ba0:	ee 2e       	mov	r14, r30
   10ba2:	eb e0       	ldi	r30, 0x0B	; 11
   10ba4:	fe 2e       	mov	r15, r30
   10ba6:	10 e0       	ldi	r17, 0x00	; 0
   10ba8:	f7 01       	movw	r30, r14
   10baa:	10 82       	st	Z, r1
   10bac:	81 2f       	mov	r24, r17
   10bae:	0e 94 b2 5a 	call	0xb564	; 0xb564 <_Z16Euro_Data_EEPROMh>
   10bb2:	fd e0       	ldi	r31, 0x0D	; 13
   10bb4:	ef 0e       	add	r14, r31
   10bb6:	f1 1c       	adc	r15, r1
   10bb8:	1f 5f       	subi	r17, 0xFF	; 255
   10bba:	17 30       	cpi	r17, 0x07	; 7
   10bbc:	a9 f7       	brne	.-22     	; 0x10ba8 <_Z16Dummy_Data_Storev+0x48>
   10bbe:	89 e0       	ldi	r24, 0x09	; 9
   10bc0:	80 93 f4 13 	sts	0x13F4, r24	; 0x8013f4 <_sRuble_Parameters+0xad>
   10bc4:	64 ef       	ldi	r22, 0xF4	; 244
   10bc6:	73 e1       	ldi	r23, 0x13	; 19
   10bc8:	88 e1       	ldi	r24, 0x18	; 24
   10bca:	95 e0       	ldi	r25, 0x05	; 5
   10bcc:	fb de       	rcall	.-522    	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10bce:	82 e0       	ldi	r24, 0x02	; 2
   10bd0:	80 93 fc 13 	sts	0x13FC, r24	; 0x8013fc <_sRuble_Parameters+0xb5>
   10bd4:	6c ef       	ldi	r22, 0xFC	; 252
   10bd6:	73 e1       	ldi	r23, 0x13	; 19
   10bd8:	89 e1       	ldi	r24, 0x19	; 25
   10bda:	95 e0       	ldi	r25, 0x05	; 5
   10bdc:	f3 de       	rcall	.-538    	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10bde:	10 92 1e 09 	sts	0x091E, r1	; 0x80091e <_sSchedules>
   10be2:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <_sSchedules+0x1>
   10be6:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <_sSchedules+0x2>
   10bea:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <_sSchedules+0x5>
   10bee:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <_sSchedules+0x4>
   10bf2:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   10bf6:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <_sSchedules+0x7>
   10bfa:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <_sSchedules+0x9>
   10bfe:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <_sSchedules+0x8>
   10c02:	81 e0       	ldi	r24, 0x01	; 1
   10c04:	80 93 28 09 	sts	0x0928, r24	; 0x800928 <_sSchedules+0xa>
   10c08:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <_sSchedules+0xb>
   10c0c:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <_sSchedules+0xc>
   10c10:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <_sSchedules+0xd>
   10c14:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <_sSchedules+0xe>
   10c18:	41 e0       	ldi	r20, 0x01	; 1
   10c1a:	50 e0       	ldi	r21, 0x00	; 0
   10c1c:	60 e0       	ldi	r22, 0x00	; 0
   10c1e:	70 e0       	ldi	r23, 0x00	; 0
   10c20:	40 93 31 09 	sts	0x0931, r20	; 0x800931 <_sSchedules+0x13>
   10c24:	50 93 32 09 	sts	0x0932, r21	; 0x800932 <_sSchedules+0x14>
   10c28:	60 93 33 09 	sts	0x0933, r22	; 0x800933 <_sSchedules+0x15>
   10c2c:	70 93 34 09 	sts	0x0934, r23	; 0x800934 <_sSchedules+0x16>
   10c30:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <_sSchedules+0x17>
   10c34:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <_sSchedules+0x18>
   10c38:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <_sSchedules+0x19>
   10c3c:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <_sSchedules+0x1a>
   10c40:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   10c44:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <_sSchedules+0x1c>
   10c48:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <_sSchedules+0x1d>
   10c4c:	10 92 3c 09 	sts	0x093C, r1	; 0x80093c <_sSchedules+0x1e>
   10c50:	80 e0       	ldi	r24, 0x00	; 0
   10c52:	90 e0       	ldi	r25, 0x00	; 0
   10c54:	fc 01       	movw	r30, r24
   10c56:	ee 0f       	add	r30, r30
   10c58:	ff 1f       	adc	r31, r31
   10c5a:	e2 5e       	subi	r30, 0xE2	; 226
   10c5c:	f6 4f       	sbci	r31, 0xF6	; 246
   10c5e:	10 a2       	std	Z+32, r1	; 0x20
   10c60:	17 8e       	std	Z+31, r1	; 0x1f
   10c62:	01 96       	adiw	r24, 0x01	; 1
   10c64:	8f 30       	cpi	r24, 0x0F	; 15
   10c66:	91 05       	cpc	r25, r1
   10c68:	a9 f7       	brne	.-22     	; 0x10c54 <_Z16Dummy_Data_Storev+0xf4>
   10c6a:	80 e0       	ldi	r24, 0x00	; 0
   10c6c:	90 e0       	ldi	r25, 0x00	; 0
   10c6e:	fc 01       	movw	r30, r24
   10c70:	e2 5e       	subi	r30, 0xE2	; 226
   10c72:	f6 4f       	sbci	r31, 0xF6	; 246
   10c74:	15 ae       	std	Z+61, r1	; 0x3d
   10c76:	01 96       	adiw	r24, 0x01	; 1
   10c78:	8f 30       	cpi	r24, 0x0F	; 15
   10c7a:	91 05       	cpc	r25, r1
   10c7c:	c1 f7       	brne	.-16     	; 0x10c6e <_Z16Dummy_Data_Storev+0x10e>
   10c7e:	80 e0       	ldi	r24, 0x00	; 0
   10c80:	90 e0       	ldi	r25, 0x00	; 0
   10c82:	fc 01       	movw	r30, r24
   10c84:	e6 59       	subi	r30, 0x96	; 150
   10c86:	f6 4f       	sbci	r31, 0xF6	; 246
   10c88:	10 82       	st	Z, r1
   10c8a:	01 96       	adiw	r24, 0x01	; 1
   10c8c:	8f 30       	cpi	r24, 0x0F	; 15
   10c8e:	91 05       	cpc	r25, r1
   10c90:	c1 f7       	brne	.-16     	; 0x10c82 <_Z16Dummy_Data_Storev+0x122>
   10c92:	80 e0       	ldi	r24, 0x00	; 0
   10c94:	90 e0       	ldi	r25, 0x00	; 0
   10c96:	9c 01       	movw	r18, r24
   10c98:	22 5e       	subi	r18, 0xE2	; 226
   10c9a:	36 4f       	sbci	r19, 0xF6	; 246
   10c9c:	f9 01       	movw	r30, r18
   10c9e:	e5 5a       	subi	r30, 0xA5	; 165
   10ca0:	ff 4f       	sbci	r31, 0xFF	; 255
   10ca2:	10 82       	st	Z, r1
   10ca4:	3f 96       	adiw	r30, 0x0f	; 15
   10ca6:	10 82       	st	Z, r1
   10ca8:	01 96       	adiw	r24, 0x01	; 1
   10caa:	8f 30       	cpi	r24, 0x0F	; 15
   10cac:	91 05       	cpc	r25, r1
   10cae:	99 f7       	brne	.-26     	; 0x10c96 <_Z16Dummy_Data_Storev+0x136>
   10cb0:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   10cb4:	80 e0       	ldi	r24, 0x00	; 0
   10cb6:	90 e0       	ldi	r25, 0x00	; 0
   10cb8:	fc 01       	movw	r30, r24
   10cba:	e8 56       	subi	r30, 0x68	; 104
   10cbc:	f6 4f       	sbci	r31, 0xF6	; 246
   10cbe:	10 82       	st	Z, r1
   10cc0:	01 96       	adiw	r24, 0x01	; 1
   10cc2:	8b 32       	cpi	r24, 0x2B	; 43
   10cc4:	91 05       	cpc	r25, r1
   10cc6:	c1 f7       	brne	.-16     	; 0x10cb8 <_Z16Dummy_Data_Storev+0x158>
   10cc8:	80 e0       	ldi	r24, 0x00	; 0
   10cca:	90 e0       	ldi	r25, 0x00	; 0
   10ccc:	fc 01       	movw	r30, r24
   10cce:	e8 56       	subi	r30, 0x68	; 104
   10cd0:	f6 4f       	sbci	r31, 0xF6	; 246
   10cd2:	10 82       	st	Z, r1
   10cd4:	01 96       	adiw	r24, 0x01	; 1
   10cd6:	8b 32       	cpi	r24, 0x2B	; 43
   10cd8:	91 05       	cpc	r25, r1
   10cda:	c1 f7       	brne	.-16     	; 0x10ccc <_Z16Dummy_Data_Storev+0x16c>
   10cdc:	80 e0       	ldi	r24, 0x00	; 0
   10cde:	90 e0       	ldi	r25, 0x00	; 0
   10ce0:	fc 01       	movw	r30, r24
   10ce2:	ee 0f       	add	r30, r30
   10ce4:	ff 1f       	adc	r31, r31
   10ce6:	ed 53       	subi	r30, 0x3D	; 61
   10ce8:	f6 4f       	sbci	r31, 0xF6	; 246
   10cea:	11 82       	std	Z+1, r1	; 0x01
   10cec:	10 82       	st	Z, r1
   10cee:	01 96       	adiw	r24, 0x01	; 1
   10cf0:	8b 32       	cpi	r24, 0x2B	; 43
   10cf2:	91 05       	cpc	r25, r1
   10cf4:	a9 f7       	brne	.-22     	; 0x10ce0 <_Z16Dummy_Data_Storev+0x180>
   10cf6:	80 e0       	ldi	r24, 0x00	; 0
   10cf8:	90 e0       	ldi	r25, 0x00	; 0
   10cfa:	fc 01       	movw	r30, r24
   10cfc:	ee 0f       	add	r30, r30
   10cfe:	ff 1f       	adc	r31, r31
   10d00:	e7 5e       	subi	r30, 0xE7	; 231
   10d02:	f5 4f       	sbci	r31, 0xF5	; 245
   10d04:	11 82       	std	Z+1, r1	; 0x01
   10d06:	10 82       	st	Z, r1
   10d08:	01 96       	adiw	r24, 0x01	; 1
   10d0a:	8b 32       	cpi	r24, 0x2B	; 43
   10d0c:	91 05       	cpc	r25, r1
   10d0e:	a9 f7       	brne	.-22     	; 0x10cfa <_Z16Dummy_Data_Storev+0x19a>
   10d10:	80 e0       	ldi	r24, 0x00	; 0
   10d12:	90 e0       	ldi	r25, 0x00	; 0
   10d14:	fc 01       	movw	r30, r24
   10d16:	e1 59       	subi	r30, 0x91	; 145
   10d18:	f5 4f       	sbci	r31, 0xF5	; 245
   10d1a:	10 82       	st	Z, r1
   10d1c:	01 96       	adiw	r24, 0x01	; 1
   10d1e:	8b 32       	cpi	r24, 0x2B	; 43
   10d20:	91 05       	cpc	r25, r1
   10d22:	c1 f7       	brne	.-16     	; 0x10d14 <_Z16Dummy_Data_Storev+0x1b4>
   10d24:	80 e0       	ldi	r24, 0x00	; 0
   10d26:	90 e0       	ldi	r25, 0x00	; 0
   10d28:	fc 01       	movw	r30, r24
   10d2a:	ee 0f       	add	r30, r30
   10d2c:	ff 1f       	adc	r31, r31
   10d2e:	eb 53       	subi	r30, 0x3B	; 59
   10d30:	f5 4f       	sbci	r31, 0xF5	; 245
   10d32:	11 82       	std	Z+1, r1	; 0x01
   10d34:	10 82       	st	Z, r1
   10d36:	01 96       	adiw	r24, 0x01	; 1
   10d38:	8b 32       	cpi	r24, 0x2B	; 43
   10d3a:	91 05       	cpc	r25, r1
   10d3c:	a9 f7       	brne	.-22     	; 0x10d28 <_Z16Dummy_Data_Storev+0x1c8>
   10d3e:	10 92 1b 0b 	sts	0x0B1B, r1	; 0x800b1b <_sSchedules+0x1fd>
   10d42:	10 92 1c 0b 	sts	0x0B1C, r1	; 0x800b1c <_sSchedules+0x1fe>
   10d46:	10 92 1d 0b 	sts	0x0B1D, r1	; 0x800b1d <_sSchedules+0x1ff>
   10d4a:	10 92 1e 0b 	sts	0x0B1E, r1	; 0x800b1e <_sSchedules+0x200>
   10d4e:	10 92 1f 0b 	sts	0x0B1F, r1	; 0x800b1f <_sSchedules+0x201>
   10d52:	10 92 20 0b 	sts	0x0B20, r1	; 0x800b20 <_sSchedules+0x202>
   10d56:	10 92 21 0b 	sts	0x0B21, r1	; 0x800b21 <_sSchedules+0x203>
   10d5a:	10 92 22 0b 	sts	0x0B22, r1	; 0x800b22 <_sSchedules+0x204>
   10d5e:	10 92 23 0b 	sts	0x0B23, r1	; 0x800b23 <_sSchedules+0x205>
   10d62:	10 92 25 0b 	sts	0x0B25, r1	; 0x800b25 <_sSchedules+0x207>
   10d66:	10 92 24 0b 	sts	0x0B24, r1	; 0x800b24 <_sSchedules+0x206>
   10d6a:	10 92 27 0b 	sts	0x0B27, r1	; 0x800b27 <_sSchedules+0x209>
   10d6e:	10 92 26 0b 	sts	0x0B26, r1	; 0x800b26 <_sSchedules+0x208>
   10d72:	10 92 29 0b 	sts	0x0B29, r1	; 0x800b29 <_sSchedules+0x20b>
   10d76:	10 92 28 0b 	sts	0x0B28, r1	; 0x800b28 <_sSchedules+0x20a>
   10d7a:	10 92 2b 0b 	sts	0x0B2B, r1	; 0x800b2b <_sSchedules+0x20d>
   10d7e:	10 92 2a 0b 	sts	0x0B2A, r1	; 0x800b2a <_sSchedules+0x20c>
   10d82:	10 92 2c 0b 	sts	0x0B2C, r1	; 0x800b2c <_sSchedules+0x20e>
   10d86:	10 92 2d 0b 	sts	0x0B2D, r1	; 0x800b2d <_sSchedules+0x20f>
   10d8a:	10 92 2e 0b 	sts	0x0B2E, r1	; 0x800b2e <_sSchedules+0x210>
   10d8e:	10 92 33 0b 	sts	0x0B33, r1	; 0x800b33 <_sSchedules+0x215>
   10d92:	10 92 34 0b 	sts	0x0B34, r1	; 0x800b34 <_sSchedules+0x216>
   10d96:	10 92 35 0b 	sts	0x0B35, r1	; 0x800b35 <_sSchedules+0x217>
   10d9a:	10 92 36 0b 	sts	0x0B36, r1	; 0x800b36 <_sSchedules+0x218>
   10d9e:	10 92 37 0b 	sts	0x0B37, r1	; 0x800b37 <_sSchedules+0x219>
   10da2:	10 92 38 0b 	sts	0x0B38, r1	; 0x800b38 <_sSchedules+0x21a>
   10da6:	10 92 39 0b 	sts	0x0B39, r1	; 0x800b39 <_sSchedules+0x21b>
   10daa:	10 92 3a 0b 	sts	0x0B3A, r1	; 0x800b3a <_sSchedules+0x21c>
   10dae:	10 92 3b 0b 	sts	0x0B3B, r1	; 0x800b3b <_sSchedules+0x21d>
   10db2:	80 e0       	ldi	r24, 0x00	; 0
   10db4:	90 e0       	ldi	r25, 0x00	; 0
   10db6:	fc 01       	movw	r30, r24
   10db8:	ee 0f       	add	r30, r30
   10dba:	ff 1f       	adc	r31, r31
   10dbc:	e4 5c       	subi	r30, 0xC4	; 196
   10dbe:	f4 4f       	sbci	r31, 0xF4	; 244
   10dc0:	11 82       	std	Z+1, r1	; 0x01
   10dc2:	10 82       	st	Z, r1
   10dc4:	01 96       	adiw	r24, 0x01	; 1
   10dc6:	8f 30       	cpi	r24, 0x0F	; 15
   10dc8:	91 05       	cpc	r25, r1
   10dca:	a9 f7       	brne	.-22     	; 0x10db6 <_Z16Dummy_Data_Storev+0x256>
   10dcc:	80 e0       	ldi	r24, 0x00	; 0
   10dce:	90 e0       	ldi	r25, 0x00	; 0
   10dd0:	fc 01       	movw	r30, r24
   10dd2:	e6 5a       	subi	r30, 0xA6	; 166
   10dd4:	f4 4f       	sbci	r31, 0xF4	; 244
   10dd6:	10 82       	st	Z, r1
   10dd8:	01 96       	adiw	r24, 0x01	; 1
   10dda:	8f 30       	cpi	r24, 0x0F	; 15
   10ddc:	91 05       	cpc	r25, r1
   10dde:	c1 f7       	brne	.-16     	; 0x10dd0 <_Z16Dummy_Data_Storev+0x270>
   10de0:	80 e0       	ldi	r24, 0x00	; 0
   10de2:	90 e0       	ldi	r25, 0x00	; 0
   10de4:	fc 01       	movw	r30, r24
   10de6:	e7 59       	subi	r30, 0x97	; 151
   10de8:	f4 4f       	sbci	r31, 0xF4	; 244
   10dea:	10 82       	st	Z, r1
   10dec:	01 96       	adiw	r24, 0x01	; 1
   10dee:	8f 30       	cpi	r24, 0x0F	; 15
   10df0:	91 05       	cpc	r25, r1
   10df2:	c1 f7       	brne	.-16     	; 0x10de4 <_Z16Dummy_Data_Storev+0x284>
   10df4:	80 e0       	ldi	r24, 0x00	; 0
   10df6:	90 e0       	ldi	r25, 0x00	; 0
   10df8:	fc 01       	movw	r30, r24
   10dfa:	e7 59       	subi	r30, 0x97	; 151
   10dfc:	f4 4f       	sbci	r31, 0xF4	; 244
   10dfe:	10 82       	st	Z, r1
   10e00:	01 96       	adiw	r24, 0x01	; 1
   10e02:	8b 32       	cpi	r24, 0x2B	; 43
   10e04:	91 05       	cpc	r25, r1
   10e06:	c1 f7       	brne	.-16     	; 0x10df8 <_Z16Dummy_Data_Storev+0x298>
   10e08:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
   10e0c:	10 92 2f 0b 	sts	0x0B2F, r1	; 0x800b2f <_sSchedules+0x211>
   10e10:	10 92 30 0b 	sts	0x0B30, r1	; 0x800b30 <_sSchedules+0x212>
   10e14:	10 92 31 0b 	sts	0x0B31, r1	; 0x800b31 <_sSchedules+0x213>
   10e18:	10 92 32 0b 	sts	0x0B32, r1	; 0x800b32 <_sSchedules+0x214>
   10e1c:	42 de       	rcall	.-892    	; 0x10aa2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>
   10e1e:	21 e8       	ldi	r18, 0x81	; 129
   10e20:	e2 2e       	mov	r14, r18
   10e22:	2d e0       	ldi	r18, 0x0D	; 13
   10e24:	f2 2e       	mov	r15, r18
   10e26:	01 ef       	ldi	r16, 0xF1	; 241
   10e28:	19 e0       	ldi	r17, 0x09	; 9
   10e2a:	f7 01       	movw	r30, r14
   10e2c:	11 82       	std	Z+1, r1	; 0x01
   10e2e:	10 92 86 0d 	sts	0x0D86, r1	; 0x800d86 <_sExtra_Plot+0x5>
   10e32:	10 92 a2 0d 	sts	0x0DA2, r1	; 0x800da2 <_sExtra_Plot+0x21>
   10e36:	10 92 be 0d 	sts	0x0DBE, r1	; 0x800dbe <_sExtra_Plot+0x3d>
   10e3a:	10 92 da 0d 	sts	0x0DDA, r1	; 0x800dda <_sExtra_Plot+0x59>
   10e3e:	10 92 f6 0d 	sts	0x0DF6, r1	; 0x800df6 <_sExtra_Plot+0x75>
   10e42:	48 01       	movw	r8, r16
   10e44:	fb e1       	ldi	r31, 0x1B	; 27
   10e46:	8f 0e       	add	r8, r31
   10e48:	91 1c       	adc	r9, r1
   10e4a:	57 01       	movw	r10, r14
   10e4c:	68 01       	movw	r12, r16
   10e4e:	f5 01       	movw	r30, r10
   10e50:	61 91       	ld	r22, Z+
   10e52:	5f 01       	movw	r10, r30
   10e54:	da 82       	std	Y+2, r13	; 0x02
   10e56:	c9 82       	std	Y+1, r12	; 0x01
   10e58:	ce 01       	movw	r24, r28
   10e5a:	01 96       	adiw	r24, 0x01	; 1
   10e5c:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
   10e60:	ff ef       	ldi	r31, 0xFF	; 255
   10e62:	cf 1a       	sub	r12, r31
   10e64:	df 0a       	sbc	r13, r31
   10e66:	8c 14       	cp	r8, r12
   10e68:	9d 04       	cpc	r9, r13
   10e6a:	89 f7       	brne	.-30     	; 0x10e4e <_Z16Dummy_Data_Storev+0x2ee>
   10e6c:	8b e1       	ldi	r24, 0x1B	; 27
   10e6e:	e8 0e       	add	r14, r24
   10e70:	f1 1c       	adc	r15, r1
   10e72:	02 5e       	subi	r16, 0xE2	; 226
   10e74:	1f 4f       	sbci	r17, 0xFF	; 255
   10e76:	05 39       	cpi	r16, 0x95	; 149
   10e78:	eb e0       	ldi	r30, 0x0B	; 11
   10e7a:	1e 07       	cpc	r17, r30
   10e7c:	b1 f6       	brne	.-84     	; 0x10e2a <_Z16Dummy_Data_Storev+0x2ca>
   10e7e:	10 92 5e 13 	sts	0x135E, r1	; 0x80135e <_sRuble_Parameters+0x17>
   10e82:	10 92 5d 13 	sts	0x135D, r1	; 0x80135d <_sRuble_Parameters+0x16>
   10e86:	86 e9       	ldi	r24, 0x96	; 150
   10e88:	9c e0       	ldi	r25, 0x0C	; 12
   10e8a:	b5 dd       	rcall	.-1174   	; 0x109f6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   10e8c:	10 92 f0 13 	sts	0x13F0, r1	; 0x8013f0 <_sRuble_Parameters+0xa9>
   10e90:	60 ef       	ldi	r22, 0xF0	; 240
   10e92:	73 e1       	ldi	r23, 0x13	; 19
   10e94:	86 e9       	ldi	r24, 0x96	; 150
   10e96:	9c e0       	ldi	r25, 0x0C	; 12
   10e98:	95 dd       	rcall	.-1238   	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10e9a:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
   10e9e:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
   10ea2:	85 e0       	ldi	r24, 0x05	; 5
   10ea4:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   10ea8:	6e e6       	ldi	r22, 0x6E	; 110
   10eaa:	73 e1       	ldi	r23, 0x13	; 19
   10eac:	88 ed       	ldi	r24, 0xD8	; 216
   10eae:	94 e0       	ldi	r25, 0x04	; 4
   10eb0:	89 dd       	rcall	.-1262   	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10eb2:	10 92 04 14 	sts	0x1404, r1	; 0x801404 <_sRuble_Parameters+0xbd>
   10eb6:	64 e0       	ldi	r22, 0x04	; 4
   10eb8:	74 e1       	ldi	r23, 0x14	; 20
   10eba:	81 ea       	ldi	r24, 0xA1	; 161
   10ebc:	9c e0       	ldi	r25, 0x0C	; 12
   10ebe:	82 dd       	rcall	.-1276   	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10ec0:	10 92 06 14 	sts	0x1406, r1	; 0x801406 <_sRuble_Parameters+0xbf>
   10ec4:	66 e0       	ldi	r22, 0x06	; 6
   10ec6:	74 e1       	ldi	r23, 0x14	; 20
   10ec8:	88 ea       	ldi	r24, 0xA8	; 168
   10eca:	9c e0       	ldi	r25, 0x0C	; 12
   10ecc:	7b dd       	rcall	.-1290   	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10ece:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   10ed2:	67 e0       	ldi	r22, 0x07	; 7
   10ed4:	74 e1       	ldi	r23, 0x14	; 20
   10ed6:	8d ea       	ldi	r24, 0xAD	; 173
   10ed8:	9c e0       	ldi	r25, 0x0C	; 12
   10eda:	74 dd       	rcall	.-1304   	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10edc:	0e e1       	ldi	r16, 0x1E	; 30
   10ede:	14 e1       	ldi	r17, 0x14	; 20
   10ee0:	93 e2       	ldi	r25, 0x23	; 35
   10ee2:	e9 2e       	mov	r14, r25
   10ee4:	94 e1       	ldi	r25, 0x14	; 20
   10ee6:	f9 2e       	mov	r15, r25
   10ee8:	f8 01       	movw	r30, r16
   10eea:	11 92       	st	Z+, r1
   10eec:	8f 01       	movw	r16, r30
   10eee:	af dd       	rcall	.-1186   	; 0x10a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   10ef0:	e0 16       	cp	r14, r16
   10ef2:	f1 06       	cpc	r15, r17
   10ef4:	c9 f7       	brne	.-14     	; 0x10ee8 <_Z16Dummy_Data_Storev+0x388>
   10ef6:	81 e0       	ldi	r24, 0x01	; 1
   10ef8:	80 93 23 14 	sts	0x1423, r24	; 0x801423 <_sRuble_Parameters+0xdc>
   10efc:	63 e2       	ldi	r22, 0x23	; 35
   10efe:	74 e1       	ldi	r23, 0x14	; 20
   10f00:	8b ea       	ldi	r24, 0xAB	; 171
   10f02:	9e e0       	ldi	r25, 0x0E	; 14
   10f04:	5f dd       	rcall	.-1346   	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10f06:	10 92 26 14 	sts	0x1426, r1	; 0x801426 <_sRuble_Parameters+0xdf>
   10f0a:	10 92 27 14 	sts	0x1427, r1	; 0x801427 <_sRuble_Parameters+0xe0>
   10f0e:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xe1>
   10f12:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xe2>
   10f16:	86 e2       	ldi	r24, 0x26	; 38
   10f18:	e8 2e       	mov	r14, r24
   10f1a:	84 e1       	ldi	r24, 0x14	; 20
   10f1c:	f8 2e       	mov	r15, r24
   10f1e:	0d ea       	ldi	r16, 0xAD	; 173
   10f20:	1e e0       	ldi	r17, 0x0E	; 14
   10f22:	f7 01       	movw	r30, r14
   10f24:	61 91       	ld	r22, Z+
   10f26:	7f 01       	movw	r14, r30
   10f28:	1a 83       	std	Y+2, r17	; 0x02
   10f2a:	09 83       	std	Y+1, r16	; 0x01
   10f2c:	ce 01       	movw	r24, r28
   10f2e:	01 96       	adiw	r24, 0x01	; 1
   10f30:	0e 94 bb 23 	call	0x4776	; 0x4776 <_ZN5EERef6updateEh>
   10f34:	0f 5f       	subi	r16, 0xFF	; 255
   10f36:	1f 4f       	sbci	r17, 0xFF	; 255
   10f38:	01 3b       	cpi	r16, 0xB1	; 177
   10f3a:	fe e0       	ldi	r31, 0x0E	; 14
   10f3c:	1f 07       	cpc	r17, r31
   10f3e:	89 f7       	brne	.-30     	; 0x10f22 <_Z16Dummy_Data_Storev+0x3c2>
   10f40:	06 e9       	ldi	r16, 0x96	; 150
   10f42:	1b e0       	ldi	r17, 0x0B	; 11
   10f44:	f1 2c       	mov	r15, r1
   10f46:	f8 01       	movw	r30, r16
   10f48:	11 86       	std	Z+9, r1	; 0x09
   10f4a:	10 86       	std	Z+8, r1	; 0x08
   10f4c:	10 82       	st	Z, r1
   10f4e:	12 86       	std	Z+10, r1	; 0x0a
   10f50:	8f 2d       	mov	r24, r15
   10f52:	0e 94 ec 5a 	call	0xb5d8	; 0xb5d8 <_Z20Wireless_Pump_EEPROMh>
   10f56:	f3 94       	inc	r15
   10f58:	05 5f       	subi	r16, 0xF5	; 245
   10f5a:	1f 4f       	sbci	r17, 0xFF	; 255
   10f5c:	f3 e0       	ldi	r31, 0x03	; 3
   10f5e:	ff 12       	cpse	r15, r31
   10f60:	f2 cf       	rjmp	.-28     	; 0x10f46 <_Z16Dummy_Data_Storev+0x3e6>
   10f62:	0f 90       	pop	r0
   10f64:	0f 90       	pop	r0
   10f66:	df 91       	pop	r29
   10f68:	cf 91       	pop	r28
   10f6a:	1f 91       	pop	r17
   10f6c:	0f 91       	pop	r16
   10f6e:	ff 90       	pop	r15
   10f70:	ef 90       	pop	r14
   10f72:	df 90       	pop	r13
   10f74:	cf 90       	pop	r12
   10f76:	bf 90       	pop	r11
   10f78:	af 90       	pop	r10
   10f7a:	9f 90       	pop	r9
   10f7c:	8f 90       	pop	r8
   10f7e:	08 95       	ret

00010f80 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   10f80:	0f 93       	push	r16
   10f82:	1f 93       	push	r17
   10f84:	cf 93       	push	r28
   10f86:	df 93       	push	r29
   10f88:	dc 01       	movw	r26, r24
   10f8a:	12 96       	adiw	r26, 0x02	; 2
   10f8c:	ed 91       	ld	r30, X+
   10f8e:	fc 91       	ld	r31, X
   10f90:	13 97       	sbiw	r26, 0x03	; 3
   10f92:	30 97       	sbiw	r30, 0x00	; 0
   10f94:	a1 f0       	breq	.+40     	; 0x10fbe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   10f96:	61 15       	cp	r22, r1
   10f98:	71 05       	cpc	r23, r1
   10f9a:	31 f0       	breq	.+12     	; 0x10fa8 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x28>
   10f9c:	01 90       	ld	r0, Z+
   10f9e:	f0 81       	ld	r31, Z
   10fa0:	e0 2d       	mov	r30, r0
   10fa2:	61 50       	subi	r22, 0x01	; 1
   10fa4:	71 09       	sbc	r23, r1
   10fa6:	f5 cf       	rjmp	.-22     	; 0x10f92 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x12>
   10fa8:	82 81       	ldd	r24, Z+2	; 0x02
   10faa:	83 30       	cpi	r24, 0x03	; 3
   10fac:	08 f0       	brcs	.+2      	; 0x10fb0 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x30>
   10fae:	44 c0       	rjmp	.+136    	; 0x11038 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb8>
   10fb0:	81 30       	cpi	r24, 0x01	; 1
   10fb2:	28 f0       	brcs	.+10     	; 0x10fbe <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   10fb4:	03 80       	ldd	r0, Z+3	; 0x03
   10fb6:	f4 81       	ldd	r31, Z+4	; 0x04
   10fb8:	e0 2d       	mov	r30, r0
   10fba:	30 97       	sbiw	r30, 0x00	; 0
   10fbc:	21 f4       	brne	.+8      	; 0x10fc6 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x46>
   10fbe:	60 e0       	ldi	r22, 0x00	; 0
   10fc0:	70 e0       	ldi	r23, 0x00	; 0
   10fc2:	cb 01       	movw	r24, r22
   10fc4:	4f c0       	rjmp	.+158    	; 0x11064 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10fc6:	80 81       	ld	r24, Z
   10fc8:	84 37       	cpi	r24, 0x74	; 116
   10fca:	71 f1       	breq	.+92     	; 0x11028 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xa8>
   10fcc:	8b 32       	cpi	r24, 0x2B	; 43
   10fce:	29 f0       	breq	.+10     	; 0x10fda <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5a>
   10fd0:	8d 32       	cpi	r24, 0x2D	; 45
   10fd2:	21 f4       	brne	.+8      	; 0x10fdc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5c>
   10fd4:	31 96       	adiw	r30, 0x01	; 1
   10fd6:	d1 e0       	ldi	r29, 0x01	; 1
   10fd8:	02 c0       	rjmp	.+4      	; 0x10fde <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5e>
   10fda:	31 96       	adiw	r30, 0x01	; 1
   10fdc:	d0 e0       	ldi	r29, 0x00	; 0
   10fde:	20 e0       	ldi	r18, 0x00	; 0
   10fe0:	30 e0       	ldi	r19, 0x00	; 0
   10fe2:	a9 01       	movw	r20, r18
   10fe4:	c1 91       	ld	r28, Z+
   10fe6:	80 ed       	ldi	r24, 0xD0	; 208
   10fe8:	8c 0f       	add	r24, r28
   10fea:	8a 30       	cpi	r24, 0x0A	; 10
   10fec:	98 f4       	brcc	.+38     	; 0x11014 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x94>
   10fee:	aa e0       	ldi	r26, 0x0A	; 10
   10ff0:	b0 e0       	ldi	r27, 0x00	; 0
   10ff2:	0e 94 33 e8 	call	0x1d066	; 0x1d066 <__muluhisi3>
   10ff6:	2c 2f       	mov	r18, r28
   10ff8:	30 e0       	ldi	r19, 0x00	; 0
   10ffa:	20 53       	subi	r18, 0x30	; 48
   10ffc:	31 09       	sbc	r19, r1
   10ffe:	89 01       	movw	r16, r18
   11000:	33 0f       	add	r19, r19
   11002:	22 0b       	sbc	r18, r18
   11004:	33 0b       	sbc	r19, r19
   11006:	a9 01       	movw	r20, r18
   11008:	98 01       	movw	r18, r16
   1100a:	26 0f       	add	r18, r22
   1100c:	37 1f       	adc	r19, r23
   1100e:	48 1f       	adc	r20, r24
   11010:	59 1f       	adc	r21, r25
   11012:	e8 cf       	rjmp	.-48     	; 0x10fe4 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x64>
   11014:	dd 23       	and	r29, r29
   11016:	69 f0       	breq	.+26     	; 0x11032 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb2>
   11018:	66 27       	eor	r22, r22
   1101a:	77 27       	eor	r23, r23
   1101c:	cb 01       	movw	r24, r22
   1101e:	62 1b       	sub	r22, r18
   11020:	73 0b       	sbc	r23, r19
   11022:	84 0b       	sbc	r24, r20
   11024:	95 0b       	sbc	r25, r21
   11026:	1e c0       	rjmp	.+60     	; 0x11064 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   11028:	61 e0       	ldi	r22, 0x01	; 1
   1102a:	70 e0       	ldi	r23, 0x00	; 0
   1102c:	80 e0       	ldi	r24, 0x00	; 0
   1102e:	90 e0       	ldi	r25, 0x00	; 0
   11030:	19 c0       	rjmp	.+50     	; 0x11064 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   11032:	ca 01       	movw	r24, r20
   11034:	b9 01       	movw	r22, r18
   11036:	16 c0       	rjmp	.+44     	; 0x11064 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   11038:	85 30       	cpi	r24, 0x05	; 5
   1103a:	28 f4       	brcc	.+10     	; 0x11046 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xc6>
   1103c:	63 81       	ldd	r22, Z+3	; 0x03
   1103e:	74 81       	ldd	r23, Z+4	; 0x04
   11040:	85 81       	ldd	r24, Z+5	; 0x05
   11042:	96 81       	ldd	r25, Z+6	; 0x06
   11044:	0f c0       	rjmp	.+30     	; 0x11064 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   11046:	85 30       	cpi	r24, 0x05	; 5
   11048:	39 f4       	brne	.+14     	; 0x11058 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xd8>
   1104a:	83 81       	ldd	r24, Z+3	; 0x03
   1104c:	94 81       	ldd	r25, Z+4	; 0x04
   1104e:	a5 81       	ldd	r26, Z+5	; 0x05
   11050:	b6 81       	ldd	r27, Z+6	; 0x06
   11052:	9c 01       	movw	r18, r24
   11054:	ad 01       	movw	r20, r26
   11056:	e0 cf       	rjmp	.-64     	; 0x11018 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x98>
   11058:	63 81       	ldd	r22, Z+3	; 0x03
   1105a:	74 81       	ldd	r23, Z+4	; 0x04
   1105c:	85 81       	ldd	r24, Z+5	; 0x05
   1105e:	96 81       	ldd	r25, Z+6	; 0x06
   11060:	0e 94 1e ce 	call	0x19c3c	; 0x19c3c <__fixunssfsi>
   11064:	df 91       	pop	r29
   11066:	cf 91       	pop	r28
   11068:	1f 91       	pop	r17
   1106a:	0f 91       	pop	r16
   1106c:	08 95       	ret

0001106e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>:
   1106e:	fc 01       	movw	r30, r24
   11070:	a0 81       	ld	r26, Z
   11072:	b1 81       	ldd	r27, Z+1	; 0x01
   11074:	8c 91       	ld	r24, X
   11076:	8d 30       	cpi	r24, 0x0D	; 13
   11078:	51 f0       	breq	.+20     	; 0x1108e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   1107a:	20 f4       	brcc	.+8      	; 0x11084 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x16>
   1107c:	89 50       	subi	r24, 0x09	; 9
   1107e:	82 30       	cpi	r24, 0x02	; 2
   11080:	b8 f5       	brcc	.+110    	; 0x110f0 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   11082:	05 c0       	rjmp	.+10     	; 0x1108e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   11084:	80 32       	cpi	r24, 0x20	; 32
   11086:	19 f0       	breq	.+6      	; 0x1108e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   11088:	8f 32       	cpi	r24, 0x2F	; 47
   1108a:	19 f0       	breq	.+6      	; 0x11092 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x24>
   1108c:	08 95       	ret
   1108e:	11 96       	adiw	r26, 0x01	; 1
   11090:	2c c0       	rjmp	.+88     	; 0x110ea <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   11092:	11 96       	adiw	r26, 0x01	; 1
   11094:	8c 91       	ld	r24, X
   11096:	11 97       	sbiw	r26, 0x01	; 1
   11098:	8a 32       	cpi	r24, 0x2A	; 42
   1109a:	19 f0       	breq	.+6      	; 0x110a2 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x34>
   1109c:	8f 32       	cpi	r24, 0x2F	; 47
   1109e:	d1 f0       	breq	.+52     	; 0x110d4 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x66>
   110a0:	08 95       	ret
   110a2:	11 96       	adiw	r26, 0x01	; 1
   110a4:	b1 83       	std	Z+1, r27	; 0x01
   110a6:	a0 83       	st	Z, r26
   110a8:	a0 81       	ld	r26, Z
   110aa:	b1 81       	ldd	r27, Z+1	; 0x01
   110ac:	cd 01       	movw	r24, r26
   110ae:	01 96       	adiw	r24, 0x01	; 1
   110b0:	91 83       	std	Z+1, r25	; 0x01
   110b2:	80 83       	st	Z, r24
   110b4:	11 96       	adiw	r26, 0x01	; 1
   110b6:	8c 91       	ld	r24, X
   110b8:	11 97       	sbiw	r26, 0x01	; 1
   110ba:	88 23       	and	r24, r24
   110bc:	c9 f0       	breq	.+50     	; 0x110f0 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   110be:	8a 32       	cpi	r24, 0x2A	; 42
   110c0:	99 f7       	brne	.-26     	; 0x110a8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   110c2:	12 96       	adiw	r26, 0x02	; 2
   110c4:	8c 91       	ld	r24, X
   110c6:	12 97       	sbiw	r26, 0x02	; 2
   110c8:	8f 32       	cpi	r24, 0x2F	; 47
   110ca:	71 f7       	brne	.-36     	; 0x110a8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   110cc:	13 96       	adiw	r26, 0x03	; 3
   110ce:	0d c0       	rjmp	.+26     	; 0x110ea <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   110d0:	8a 30       	cpi	r24, 0x0A	; 10
   110d2:	71 f2       	breq	.-100    	; 0x11070 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   110d4:	a0 81       	ld	r26, Z
   110d6:	b1 81       	ldd	r27, Z+1	; 0x01
   110d8:	cd 01       	movw	r24, r26
   110da:	01 96       	adiw	r24, 0x01	; 1
   110dc:	91 83       	std	Z+1, r25	; 0x01
   110de:	80 83       	st	Z, r24
   110e0:	11 96       	adiw	r26, 0x01	; 1
   110e2:	8c 91       	ld	r24, X
   110e4:	81 11       	cpse	r24, r1
   110e6:	f4 cf       	rjmp	.-24     	; 0x110d0 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x62>
   110e8:	03 c0       	rjmp	.+6      	; 0x110f0 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   110ea:	b1 83       	std	Z+1, r27	; 0x01
   110ec:	a0 83       	st	Z, r26
   110ee:	c0 cf       	rjmp	.-128    	; 0x11070 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   110f0:	08 95       	ret

000110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>:
   110f2:	1f 93       	push	r17
   110f4:	cf 93       	push	r28
   110f6:	df 93       	push	r29
   110f8:	ec 01       	movw	r28, r24
   110fa:	16 2f       	mov	r17, r22
   110fc:	b8 df       	rcall	.-144    	; 0x1106e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   110fe:	e8 81       	ld	r30, Y
   11100:	f9 81       	ldd	r31, Y+1	; 0x01
   11102:	80 81       	ld	r24, Z
   11104:	18 13       	cpse	r17, r24
   11106:	05 c0       	rjmp	.+10     	; 0x11112 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x20>
   11108:	31 96       	adiw	r30, 0x01	; 1
   1110a:	f9 83       	std	Y+1, r31	; 0x01
   1110c:	e8 83       	st	Y, r30
   1110e:	81 e0       	ldi	r24, 0x01	; 1
   11110:	01 c0       	rjmp	.+2      	; 0x11114 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x22>
   11112:	80 e0       	ldi	r24, 0x00	; 0
   11114:	df 91       	pop	r29
   11116:	cf 91       	pop	r28
   11118:	1f 91       	pop	r17
   1111a:	08 95       	ret

0001111c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>:
   1111c:	0f 93       	push	r16
   1111e:	1f 93       	push	r17
   11120:	cf 93       	push	r28
   11122:	df 93       	push	r29
   11124:	ec 01       	movw	r28, r24
   11126:	0c 81       	ldd	r16, Y+4	; 0x04
   11128:	1d 81       	ldd	r17, Y+5	; 0x05
   1112a:	02 96       	adiw	r24, 0x02	; 2
   1112c:	a0 df       	rcall	.-192    	; 0x1106e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   1112e:	ea 81       	ldd	r30, Y+2	; 0x02
   11130:	fb 81       	ldd	r31, Y+3	; 0x03
   11132:	80 81       	ld	r24, Z
   11134:	87 32       	cpi	r24, 0x27	; 39
   11136:	31 f1       	breq	.+76     	; 0x11184 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11138:	82 32       	cpi	r24, 0x22	; 34
   1113a:	21 f1       	breq	.+72     	; 0x11184 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   1113c:	90 ed       	ldi	r25, 0xD0	; 208
   1113e:	98 0f       	add	r25, r24
   11140:	9a 30       	cpi	r25, 0x0A	; 10
   11142:	70 f0       	brcs	.+28     	; 0x11160 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11144:	91 ea       	ldi	r25, 0xA1	; 161
   11146:	98 0f       	add	r25, r24
   11148:	9c 31       	cpi	r25, 0x1C	; 28
   1114a:	50 f0       	brcs	.+20     	; 0x11160 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   1114c:	9f eb       	ldi	r25, 0xBF	; 191
   1114e:	98 0f       	add	r25, r24
   11150:	9a 31       	cpi	r25, 0x1A	; 26
   11152:	30 f0       	brcs	.+12     	; 0x11160 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11154:	8b 32       	cpi	r24, 0x2B	; 43
   11156:	21 f0       	breq	.+8      	; 0x11160 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11158:	93 ed       	ldi	r25, 0xD3	; 211
   1115a:	98 0f       	add	r25, r24
   1115c:	92 30       	cpi	r25, 0x02	; 2
   1115e:	f0 f5       	brcc	.+124    	; 0x111dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11160:	2a 81       	ldd	r18, Y+2	; 0x02
   11162:	3b 81       	ldd	r19, Y+3	; 0x03
   11164:	2f 5f       	subi	r18, 0xFF	; 255
   11166:	3f 4f       	sbci	r19, 0xFF	; 255
   11168:	3b 83       	std	Y+3, r19	; 0x03
   1116a:	2a 83       	std	Y+2, r18	; 0x02
   1116c:	ec 81       	ldd	r30, Y+4	; 0x04
   1116e:	fd 81       	ldd	r31, Y+5	; 0x05
   11170:	9f 01       	movw	r18, r30
   11172:	2f 5f       	subi	r18, 0xFF	; 255
   11174:	3f 4f       	sbci	r19, 0xFF	; 255
   11176:	3d 83       	std	Y+5, r19	; 0x05
   11178:	2c 83       	std	Y+4, r18	; 0x04
   1117a:	80 83       	st	Z, r24
   1117c:	ea 81       	ldd	r30, Y+2	; 0x02
   1117e:	fb 81       	ldd	r31, Y+3	; 0x03
   11180:	80 81       	ld	r24, Z
   11182:	dc cf       	rjmp	.-72     	; 0x1113c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x20>
   11184:	31 96       	adiw	r30, 0x01	; 1
   11186:	fb 83       	std	Y+3, r31	; 0x03
   11188:	ea 83       	std	Y+2, r30	; 0x02
   1118a:	ea 81       	ldd	r30, Y+2	; 0x02
   1118c:	fb 81       	ldd	r31, Y+3	; 0x03
   1118e:	90 81       	ld	r25, Z
   11190:	99 23       	and	r25, r25
   11192:	21 f1       	breq	.+72     	; 0x111dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11194:	9f 01       	movw	r18, r30
   11196:	2f 5f       	subi	r18, 0xFF	; 255
   11198:	3f 4f       	sbci	r19, 0xFF	; 255
   1119a:	3b 83       	std	Y+3, r19	; 0x03
   1119c:	2a 83       	std	Y+2, r18	; 0x02
   1119e:	98 17       	cp	r25, r24
   111a0:	e9 f0       	breq	.+58     	; 0x111dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   111a2:	9c 35       	cpi	r25, 0x5C	; 92
   111a4:	91 f4       	brne	.+36     	; 0x111ca <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xae>
   111a6:	91 81       	ldd	r25, Z+1	; 0x01
   111a8:	a1 ee       	ldi	r26, 0xE1	; 225
   111aa:	b6 e0       	ldi	r27, 0x06	; 6
   111ac:	2c 91       	ld	r18, X
   111ae:	22 23       	and	r18, r18
   111b0:	39 f0       	breq	.+14     	; 0x111c0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   111b2:	92 13       	cpse	r25, r18
   111b4:	03 c0       	rjmp	.+6      	; 0x111bc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa0>
   111b6:	11 96       	adiw	r26, 0x01	; 1
   111b8:	9c 91       	ld	r25, X
   111ba:	02 c0       	rjmp	.+4      	; 0x111c0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   111bc:	12 96       	adiw	r26, 0x02	; 2
   111be:	f6 cf       	rjmp	.-20     	; 0x111ac <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x90>
   111c0:	99 23       	and	r25, r25
   111c2:	61 f0       	breq	.+24     	; 0x111dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   111c4:	32 96       	adiw	r30, 0x02	; 2
   111c6:	fb 83       	std	Y+3, r31	; 0x03
   111c8:	ea 83       	std	Y+2, r30	; 0x02
   111ca:	ec 81       	ldd	r30, Y+4	; 0x04
   111cc:	fd 81       	ldd	r31, Y+5	; 0x05
   111ce:	9f 01       	movw	r18, r30
   111d0:	2f 5f       	subi	r18, 0xFF	; 255
   111d2:	3f 4f       	sbci	r19, 0xFF	; 255
   111d4:	3d 83       	std	Y+5, r19	; 0x05
   111d6:	2c 83       	std	Y+4, r18	; 0x04
   111d8:	90 83       	st	Z, r25
   111da:	d7 cf       	rjmp	.-82     	; 0x1118a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x6e>
   111dc:	ec 81       	ldd	r30, Y+4	; 0x04
   111de:	fd 81       	ldd	r31, Y+5	; 0x05
   111e0:	cf 01       	movw	r24, r30
   111e2:	01 96       	adiw	r24, 0x01	; 1
   111e4:	9d 83       	std	Y+5, r25	; 0x05
   111e6:	8c 83       	std	Y+4, r24	; 0x04
   111e8:	10 82       	st	Z, r1
   111ea:	c8 01       	movw	r24, r16
   111ec:	df 91       	pop	r29
   111ee:	cf 91       	pop	r28
   111f0:	1f 91       	pop	r17
   111f2:	0f 91       	pop	r16
   111f4:	08 95       	ret

000111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   111f6:	0f 93       	push	r16
   111f8:	1f 93       	push	r17
   111fa:	cf 93       	push	r28
   111fc:	df 93       	push	r29
   111fe:	8b 01       	movw	r16, r22
   11200:	fc 01       	movw	r30, r24
   11202:	c2 81       	ldd	r28, Z+2	; 0x02
   11204:	d3 81       	ldd	r29, Z+3	; 0x03
   11206:	20 97       	sbiw	r28, 0x00	; 0
   11208:	a1 f0       	breq	.+40     	; 0x11232 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   1120a:	8a 81       	ldd	r24, Y+2	; 0x02
   1120c:	9b 81       	ldd	r25, Y+3	; 0x03
   1120e:	01 15       	cp	r16, r1
   11210:	11 05       	cpc	r17, r1
   11212:	11 f0       	breq	.+4      	; 0x11218 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x22>
   11214:	00 97       	sbiw	r24, 0x00	; 0
   11216:	21 f4       	brne	.+8      	; 0x11220 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2a>
   11218:	80 17       	cp	r24, r16
   1121a:	91 07       	cpc	r25, r17
   1121c:	31 f4       	brne	.+12     	; 0x1122a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x34>
   1121e:	09 c0       	rjmp	.+18     	; 0x11232 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11220:	b8 01       	movw	r22, r16
   11222:	0e 94 13 ea 	call	0x1d426	; 0x1d426 <strcmp_P>
   11226:	89 2b       	or	r24, r25
   11228:	21 f0       	breq	.+8      	; 0x11232 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   1122a:	09 90       	ld	r0, Y+
   1122c:	d8 81       	ld	r29, Y
   1122e:	c0 2d       	mov	r28, r0
   11230:	ea cf       	rjmp	.-44     	; 0x11206 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   11232:	ce 01       	movw	r24, r28
   11234:	df 91       	pop	r29
   11236:	cf 91       	pop	r28
   11238:	1f 91       	pop	r17
   1123a:	0f 91       	pop	r16
   1123c:	08 95       	ret

0001123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>:
   1123e:	cf 93       	push	r28
   11240:	df 93       	push	r29
   11242:	ec 01       	movw	r28, r24
   11244:	68 81       	ld	r22, Y
   11246:	79 81       	ldd	r23, Y+1	; 0x01
   11248:	89 e0       	ldi	r24, 0x09	; 9
   1124a:	90 e0       	ldi	r25, 0x00	; 0
   1124c:	74 db       	rcall	.-2328   	; 0x10936 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   1124e:	00 97       	sbiw	r24, 0x00	; 0
   11250:	21 f0       	breq	.+8      	; 0x1125a <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x1c>
   11252:	fc 01       	movw	r30, r24
   11254:	11 82       	std	Z+1, r1	; 0x01
   11256:	10 82       	st	Z, r1
   11258:	14 82       	std	Z+4, r1	; 0x04
   1125a:	ea 81       	ldd	r30, Y+2	; 0x02
   1125c:	fb 81       	ldd	r31, Y+3	; 0x03
   1125e:	30 97       	sbiw	r30, 0x00	; 0
   11260:	51 f0       	breq	.+20     	; 0x11276 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x38>
   11262:	20 81       	ld	r18, Z
   11264:	31 81       	ldd	r19, Z+1	; 0x01
   11266:	21 15       	cp	r18, r1
   11268:	31 05       	cpc	r19, r1
   1126a:	11 f0       	breq	.+4      	; 0x11270 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x32>
   1126c:	f9 01       	movw	r30, r18
   1126e:	f9 cf       	rjmp	.-14     	; 0x11262 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x24>
   11270:	91 83       	std	Z+1, r25	; 0x01
   11272:	80 83       	st	Z, r24
   11274:	02 c0       	rjmp	.+4      	; 0x1127a <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x3c>
   11276:	9b 83       	std	Y+3, r25	; 0x03
   11278:	8a 83       	std	Y+2, r24	; 0x02
   1127a:	df 91       	pop	r29
   1127c:	cf 91       	pop	r28
   1127e:	08 95       	ret

00011280 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>:
   11280:	cf 92       	push	r12
   11282:	df 92       	push	r13
   11284:	ef 92       	push	r14
   11286:	ff 92       	push	r15
   11288:	0f 93       	push	r16
   1128a:	1f 93       	push	r17
   1128c:	cf 93       	push	r28
   1128e:	df 93       	push	r29
   11290:	41 15       	cp	r20, r1
   11292:	51 05       	cpc	r21, r1
   11294:	e1 f0       	breq	.+56     	; 0x112ce <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x4e>
   11296:	ea 01       	movw	r28, r20
   11298:	8b 01       	movw	r16, r22
   1129a:	7c 01       	movw	r14, r24
   1129c:	ca 01       	movw	r24, r20
   1129e:	0e 94 1c ea 	call	0x1d438	; 0x1d438 <__strlen_P>
   112a2:	01 96       	adiw	r24, 0x01	; 1
   112a4:	6c 01       	movw	r12, r24
   112a6:	d7 01       	movw	r26, r14
   112a8:	ed 91       	ld	r30, X+
   112aa:	fc 91       	ld	r31, X
   112ac:	01 90       	ld	r0, Z+
   112ae:	f0 81       	ld	r31, Z
   112b0:	e0 2d       	mov	r30, r0
   112b2:	bc 01       	movw	r22, r24
   112b4:	c7 01       	movw	r24, r14
   112b6:	19 95       	eicall
   112b8:	7c 01       	movw	r14, r24
   112ba:	00 97       	sbiw	r24, 0x00	; 0
   112bc:	69 f0       	breq	.+26     	; 0x112d8 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x58>
   112be:	a6 01       	movw	r20, r12
   112c0:	be 01       	movw	r22, r28
   112c2:	0e 94 0a ea 	call	0x1d414	; 0x1d414 <memcpy_P>
   112c6:	f8 01       	movw	r30, r16
   112c8:	f1 82       	std	Z+1, r15	; 0x01
   112ca:	e0 82       	st	Z, r14
   112cc:	03 c0       	rjmp	.+6      	; 0x112d4 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x54>
   112ce:	db 01       	movw	r26, r22
   112d0:	1d 92       	st	X+, r1
   112d2:	1c 92       	st	X, r1
   112d4:	81 e0       	ldi	r24, 0x01	; 1
   112d6:	01 c0       	rjmp	.+2      	; 0x112da <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x5a>
   112d8:	80 e0       	ldi	r24, 0x00	; 0
   112da:	df 91       	pop	r29
   112dc:	cf 91       	pop	r28
   112de:	1f 91       	pop	r17
   112e0:	0f 91       	pop	r16
   112e2:	ff 90       	pop	r15
   112e4:	ef 90       	pop	r14
   112e6:	df 90       	pop	r13
   112e8:	cf 90       	pop	r12
   112ea:	08 95       	ret

000112ec <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>:
   112ec:	cf 92       	push	r12
   112ee:	df 92       	push	r13
   112f0:	ef 92       	push	r14
   112f2:	ff 92       	push	r15
   112f4:	0f 93       	push	r16
   112f6:	1f 93       	push	r17
   112f8:	cf 93       	push	r28
   112fa:	df 93       	push	r29
   112fc:	61 15       	cp	r22, r1
   112fe:	71 05       	cpc	r23, r1
   11300:	11 f4       	brne	.+4      	; 0x11306 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   11302:	80 e0       	ldi	r24, 0x00	; 0
   11304:	22 c0       	rjmp	.+68     	; 0x1134a <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11306:	6a 01       	movw	r12, r20
   11308:	7b 01       	movw	r14, r22
   1130a:	8c 01       	movw	r16, r24
   1130c:	74 df       	rcall	.-280    	; 0x111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1130e:	ec 01       	movw	r28, r24
   11310:	89 2b       	or	r24, r25
   11312:	79 f4       	brne	.+30     	; 0x11332 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x46>
   11314:	c8 01       	movw	r24, r16
   11316:	93 df       	rcall	.-218    	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11318:	ec 01       	movw	r28, r24
   1131a:	00 97       	sbiw	r24, 0x00	; 0
   1131c:	91 f3       	breq	.-28     	; 0x11302 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1131e:	a7 01       	movw	r20, r14
   11320:	bc 01       	movw	r22, r24
   11322:	6e 5f       	subi	r22, 0xFE	; 254
   11324:	7f 4f       	sbci	r23, 0xFF	; 255
   11326:	f8 01       	movw	r30, r16
   11328:	80 81       	ld	r24, Z
   1132a:	91 81       	ldd	r25, Z+1	; 0x01
   1132c:	a9 df       	rcall	.-174    	; 0x11280 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   1132e:	88 23       	and	r24, r24
   11330:	41 f3       	breq	.-48     	; 0x11302 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11332:	f6 01       	movw	r30, r12
   11334:	80 81       	ld	r24, Z
   11336:	90 e0       	ldi	r25, 0x00	; 0
   11338:	a0 e0       	ldi	r26, 0x00	; 0
   1133a:	b0 e0       	ldi	r27, 0x00	; 0
   1133c:	23 e0       	ldi	r18, 0x03	; 3
   1133e:	2c 83       	std	Y+4, r18	; 0x04
   11340:	8d 83       	std	Y+5, r24	; 0x05
   11342:	9e 83       	std	Y+6, r25	; 0x06
   11344:	af 83       	std	Y+7, r26	; 0x07
   11346:	b8 87       	std	Y+8, r27	; 0x08
   11348:	81 e0       	ldi	r24, 0x01	; 1
   1134a:	df 91       	pop	r29
   1134c:	cf 91       	pop	r28
   1134e:	1f 91       	pop	r17
   11350:	0f 91       	pop	r16
   11352:	ff 90       	pop	r15
   11354:	ef 90       	pop	r14
   11356:	df 90       	pop	r13
   11358:	cf 90       	pop	r12
   1135a:	08 95       	ret

0001135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>:
   1135c:	cf 92       	push	r12
   1135e:	df 92       	push	r13
   11360:	ef 92       	push	r14
   11362:	ff 92       	push	r15
   11364:	0f 93       	push	r16
   11366:	1f 93       	push	r17
   11368:	cf 93       	push	r28
   1136a:	df 93       	push	r29
   1136c:	61 15       	cp	r22, r1
   1136e:	71 05       	cpc	r23, r1
   11370:	11 f4       	brne	.+4      	; 0x11376 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   11372:	80 e0       	ldi	r24, 0x00	; 0
   11374:	22 c0       	rjmp	.+68     	; 0x113ba <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11376:	6a 01       	movw	r12, r20
   11378:	7b 01       	movw	r14, r22
   1137a:	8c 01       	movw	r16, r24
   1137c:	3c df       	rcall	.-392    	; 0x111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1137e:	ec 01       	movw	r28, r24
   11380:	89 2b       	or	r24, r25
   11382:	79 f4       	brne	.+30     	; 0x113a2 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x46>
   11384:	c8 01       	movw	r24, r16
   11386:	5b df       	rcall	.-330    	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11388:	ec 01       	movw	r28, r24
   1138a:	00 97       	sbiw	r24, 0x00	; 0
   1138c:	91 f3       	breq	.-28     	; 0x11372 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1138e:	a7 01       	movw	r20, r14
   11390:	bc 01       	movw	r22, r24
   11392:	6e 5f       	subi	r22, 0xFE	; 254
   11394:	7f 4f       	sbci	r23, 0xFF	; 255
   11396:	f8 01       	movw	r30, r16
   11398:	80 81       	ld	r24, Z
   1139a:	91 81       	ldd	r25, Z+1	; 0x01
   1139c:	71 df       	rcall	.-286    	; 0x11280 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   1139e:	88 23       	and	r24, r24
   113a0:	41 f3       	breq	.-48     	; 0x11372 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   113a2:	f6 01       	movw	r30, r12
   113a4:	80 81       	ld	r24, Z
   113a6:	91 81       	ldd	r25, Z+1	; 0x01
   113a8:	a0 e0       	ldi	r26, 0x00	; 0
   113aa:	b0 e0       	ldi	r27, 0x00	; 0
   113ac:	24 e0       	ldi	r18, 0x04	; 4
   113ae:	2c 83       	std	Y+4, r18	; 0x04
   113b0:	8d 83       	std	Y+5, r24	; 0x05
   113b2:	9e 83       	std	Y+6, r25	; 0x06
   113b4:	af 83       	std	Y+7, r26	; 0x07
   113b6:	b8 87       	std	Y+8, r27	; 0x08
   113b8:	81 e0       	ldi	r24, 0x01	; 1
   113ba:	df 91       	pop	r29
   113bc:	cf 91       	pop	r28
   113be:	1f 91       	pop	r17
   113c0:	0f 91       	pop	r16
   113c2:	ff 90       	pop	r15
   113c4:	ef 90       	pop	r14
   113c6:	df 90       	pop	r13
   113c8:	cf 90       	pop	r12
   113ca:	08 95       	ret

000113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>:
   113cc:	cf 92       	push	r12
   113ce:	df 92       	push	r13
   113d0:	ef 92       	push	r14
   113d2:	ff 92       	push	r15
   113d4:	0f 93       	push	r16
   113d6:	1f 93       	push	r17
   113d8:	cf 93       	push	r28
   113da:	df 93       	push	r29
   113dc:	61 15       	cp	r22, r1
   113de:	71 05       	cpc	r23, r1
   113e0:	21 f1       	breq	.+72     	; 0x1142a <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   113e2:	6a 01       	movw	r12, r20
   113e4:	7b 01       	movw	r14, r22
   113e6:	8c 01       	movw	r16, r24
   113e8:	06 df       	rcall	.-500    	; 0x111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   113ea:	ec 01       	movw	r28, r24
   113ec:	89 2b       	or	r24, r25
   113ee:	79 f4       	brne	.+30     	; 0x1140e <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x42>
   113f0:	c8 01       	movw	r24, r16
   113f2:	25 df       	rcall	.-438    	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   113f4:	ec 01       	movw	r28, r24
   113f6:	00 97       	sbiw	r24, 0x00	; 0
   113f8:	c1 f0       	breq	.+48     	; 0x1142a <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   113fa:	a7 01       	movw	r20, r14
   113fc:	bc 01       	movw	r22, r24
   113fe:	6e 5f       	subi	r22, 0xFE	; 254
   11400:	7f 4f       	sbci	r23, 0xFF	; 255
   11402:	f8 01       	movw	r30, r16
   11404:	80 81       	ld	r24, Z
   11406:	91 81       	ldd	r25, Z+1	; 0x01
   11408:	3b df       	rcall	.-394    	; 0x11280 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   1140a:	88 23       	and	r24, r24
   1140c:	71 f0       	breq	.+28     	; 0x1142a <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1140e:	f6 01       	movw	r30, r12
   11410:	60 81       	ld	r22, Z
   11412:	71 81       	ldd	r23, Z+1	; 0x01
   11414:	ce 01       	movw	r24, r28
   11416:	04 96       	adiw	r24, 0x04	; 4
   11418:	df 91       	pop	r29
   1141a:	cf 91       	pop	r28
   1141c:	1f 91       	pop	r17
   1141e:	0f 91       	pop	r16
   11420:	ff 90       	pop	r15
   11422:	ef 90       	pop	r14
   11424:	df 90       	pop	r13
   11426:	cf 90       	pop	r12
   11428:	58 ca       	rjmp	.-2896   	; 0x108da <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25>
   1142a:	80 e0       	ldi	r24, 0x00	; 0
   1142c:	df 91       	pop	r29
   1142e:	cf 91       	pop	r28
   11430:	1f 91       	pop	r17
   11432:	0f 91       	pop	r16
   11434:	ff 90       	pop	r15
   11436:	ef 90       	pop	r14
   11438:	df 90       	pop	r13
   1143a:	cf 90       	pop	r12
   1143c:	08 95       	ret

0001143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>:
   1143e:	cf 92       	push	r12
   11440:	df 92       	push	r13
   11442:	ef 92       	push	r14
   11444:	ff 92       	push	r15
   11446:	0f 93       	push	r16
   11448:	1f 93       	push	r17
   1144a:	cf 93       	push	r28
   1144c:	df 93       	push	r29
   1144e:	61 15       	cp	r22, r1
   11450:	71 05       	cpc	r23, r1
   11452:	11 f4       	brne	.+4      	; 0x11458 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   11454:	80 e0       	ldi	r24, 0x00	; 0
   11456:	22 c0       	rjmp	.+68     	; 0x1149c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11458:	6a 01       	movw	r12, r20
   1145a:	7b 01       	movw	r14, r22
   1145c:	8c 01       	movw	r16, r24
   1145e:	cb de       	rcall	.-618    	; 0x111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11460:	ec 01       	movw	r28, r24
   11462:	89 2b       	or	r24, r25
   11464:	79 f4       	brne	.+30     	; 0x11484 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x46>
   11466:	c8 01       	movw	r24, r16
   11468:	ea de       	rcall	.-556    	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1146a:	ec 01       	movw	r28, r24
   1146c:	00 97       	sbiw	r24, 0x00	; 0
   1146e:	91 f3       	breq	.-28     	; 0x11454 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11470:	a7 01       	movw	r20, r14
   11472:	bc 01       	movw	r22, r24
   11474:	6e 5f       	subi	r22, 0xFE	; 254
   11476:	7f 4f       	sbci	r23, 0xFF	; 255
   11478:	f8 01       	movw	r30, r16
   1147a:	80 81       	ld	r24, Z
   1147c:	91 81       	ldd	r25, Z+1	; 0x01
   1147e:	00 df       	rcall	.-512    	; 0x11280 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11480:	88 23       	and	r24, r24
   11482:	41 f3       	breq	.-48     	; 0x11454 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11484:	f6 01       	movw	r30, r12
   11486:	80 81       	ld	r24, Z
   11488:	90 e0       	ldi	r25, 0x00	; 0
   1148a:	a0 e0       	ldi	r26, 0x00	; 0
   1148c:	b0 e0       	ldi	r27, 0x00	; 0
   1148e:	24 e0       	ldi	r18, 0x04	; 4
   11490:	2c 83       	std	Y+4, r18	; 0x04
   11492:	8d 83       	std	Y+5, r24	; 0x05
   11494:	9e 83       	std	Y+6, r25	; 0x06
   11496:	af 83       	std	Y+7, r26	; 0x07
   11498:	b8 87       	std	Y+8, r27	; 0x08
   1149a:	81 e0       	ldi	r24, 0x01	; 1
   1149c:	df 91       	pop	r29
   1149e:	cf 91       	pop	r28
   114a0:	1f 91       	pop	r17
   114a2:	0f 91       	pop	r16
   114a4:	ff 90       	pop	r15
   114a6:	ef 90       	pop	r14
   114a8:	df 90       	pop	r13
   114aa:	cf 90       	pop	r12
   114ac:	08 95       	ret

000114ae <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   114ae:	0f 93       	push	r16
   114b0:	1f 93       	push	r17
   114b2:	cf 93       	push	r28
   114b4:	df 93       	push	r29
   114b6:	8b 01       	movw	r16, r22
   114b8:	fc 01       	movw	r30, r24
   114ba:	c2 81       	ldd	r28, Z+2	; 0x02
   114bc:	d3 81       	ldd	r29, Z+3	; 0x03
   114be:	20 97       	sbiw	r28, 0x00	; 0
   114c0:	a9 f0       	breq	.+42     	; 0x114ec <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   114c2:	6a 81       	ldd	r22, Y+2	; 0x02
   114c4:	7b 81       	ldd	r23, Y+3	; 0x03
   114c6:	01 15       	cp	r16, r1
   114c8:	11 05       	cpc	r17, r1
   114ca:	19 f0       	breq	.+6      	; 0x114d2 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x24>
   114cc:	61 15       	cp	r22, r1
   114ce:	71 05       	cpc	r23, r1
   114d0:	21 f4       	brne	.+8      	; 0x114da <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2c>
   114d2:	60 17       	cp	r22, r16
   114d4:	71 07       	cpc	r23, r17
   114d6:	31 f4       	brne	.+12     	; 0x114e4 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x36>
   114d8:	09 c0       	rjmp	.+18     	; 0x114ec <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   114da:	c8 01       	movw	r24, r16
   114dc:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   114e0:	89 2b       	or	r24, r25
   114e2:	21 f0       	breq	.+8      	; 0x114ec <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   114e4:	09 90       	ld	r0, Y+
   114e6:	d8 81       	ld	r29, Y
   114e8:	c0 2d       	mov	r28, r0
   114ea:	e9 cf       	rjmp	.-46     	; 0x114be <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   114ec:	ce 01       	movw	r24, r28
   114ee:	df 91       	pop	r29
   114f0:	cf 91       	pop	r28
   114f2:	1f 91       	pop	r17
   114f4:	0f 91       	pop	r16
   114f6:	08 95       	ret

000114f8 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>:
   114f8:	ef 92       	push	r14
   114fa:	ff 92       	push	r15
   114fc:	0f 93       	push	r16
   114fe:	1f 93       	push	r17
   11500:	cf 93       	push	r28
   11502:	df 93       	push	r29
   11504:	61 15       	cp	r22, r1
   11506:	71 05       	cpc	r23, r1
   11508:	c1 f0       	breq	.+48     	; 0x1153a <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   1150a:	7a 01       	movw	r14, r20
   1150c:	eb 01       	movw	r28, r22
   1150e:	8c 01       	movw	r16, r24
   11510:	ce df       	rcall	.-100    	; 0x114ae <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11512:	00 97       	sbiw	r24, 0x00	; 0
   11514:	39 f4       	brne	.+14     	; 0x11524 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x2c>
   11516:	c8 01       	movw	r24, r16
   11518:	92 de       	rcall	.-732    	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1151a:	00 97       	sbiw	r24, 0x00	; 0
   1151c:	71 f0       	breq	.+28     	; 0x1153a <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   1151e:	fc 01       	movw	r30, r24
   11520:	d3 83       	std	Z+3, r29	; 0x03
   11522:	c2 83       	std	Z+2, r28	; 0x02
   11524:	f7 01       	movw	r30, r14
   11526:	60 81       	ld	r22, Z
   11528:	71 81       	ldd	r23, Z+1	; 0x01
   1152a:	04 96       	adiw	r24, 0x04	; 4
   1152c:	df 91       	pop	r29
   1152e:	cf 91       	pop	r28
   11530:	1f 91       	pop	r17
   11532:	0f 91       	pop	r16
   11534:	ff 90       	pop	r15
   11536:	ef 90       	pop	r14
   11538:	d0 c9       	rjmp	.-3168   	; 0x108da <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.25>
   1153a:	80 e0       	ldi	r24, 0x00	; 0
   1153c:	df 91       	pop	r29
   1153e:	cf 91       	pop	r28
   11540:	1f 91       	pop	r17
   11542:	0f 91       	pop	r16
   11544:	ff 90       	pop	r15
   11546:	ef 90       	pop	r14
   11548:	08 95       	ret

0001154a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>:
   1154a:	cf 92       	push	r12
   1154c:	df 92       	push	r13
   1154e:	ef 92       	push	r14
   11550:	ff 92       	push	r15
   11552:	0f 93       	push	r16
   11554:	1f 93       	push	r17
   11556:	cf 93       	push	r28
   11558:	df 93       	push	r29
   1155a:	00 d0       	rcall	.+0      	; 0x1155c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x12>
   1155c:	1f 92       	push	r1
   1155e:	1f 92       	push	r1
   11560:	cd b7       	in	r28, 0x3d	; 61
   11562:	de b7       	in	r29, 0x3e	; 62
   11564:	7c 01       	movw	r14, r24
   11566:	fc 01       	movw	r30, r24
   11568:	86 81       	ldd	r24, Z+6	; 0x06
   1156a:	88 23       	and	r24, r24
   1156c:	09 f4       	brne	.+2      	; 0x11570 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x26>
   1156e:	67 c0       	rjmp	.+206    	; 0x1163e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11570:	81 50       	subi	r24, 0x01	; 1
   11572:	f7 01       	movw	r30, r14
   11574:	86 83       	std	Z+6, r24	; 0x06
   11576:	00 81       	ld	r16, Z
   11578:	11 81       	ldd	r17, Z+1	; 0x01
   1157a:	b8 01       	movw	r22, r16
   1157c:	84 e0       	ldi	r24, 0x04	; 4
   1157e:	90 e0       	ldi	r25, 0x00	; 0
   11580:	da d9       	rcall	.-3148   	; 0x10936 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   11582:	00 97       	sbiw	r24, 0x00	; 0
   11584:	09 f4       	brne	.+2      	; 0x11588 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x3e>
   11586:	5d c0       	rjmp	.+186    	; 0x11642 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf8>
   11588:	fc 01       	movw	r30, r24
   1158a:	11 83       	std	Z+1, r17	; 0x01
   1158c:	00 83       	st	Z, r16
   1158e:	13 82       	std	Z+3, r1	; 0x03
   11590:	12 82       	std	Z+2, r1	; 0x02
   11592:	8c 01       	movw	r16, r24
   11594:	67 01       	movw	r12, r14
   11596:	f2 e0       	ldi	r31, 0x02	; 2
   11598:	cf 0e       	add	r12, r31
   1159a:	d1 1c       	adc	r13, r1
   1159c:	6b e5       	ldi	r22, 0x5B	; 91
   1159e:	c6 01       	movw	r24, r12
   115a0:	a8 dd       	rcall	.-1200   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   115a2:	88 23       	and	r24, r24
   115a4:	09 f4       	brne	.+2      	; 0x115a8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x5e>
   115a6:	4b c0       	rjmp	.+150    	; 0x1163e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   115a8:	6d e5       	ldi	r22, 0x5D	; 93
   115aa:	c6 01       	movw	r24, r12
   115ac:	a2 dd       	rcall	.-1212   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   115ae:	81 11       	cpse	r24, r1
   115b0:	40 c0       	rjmp	.+128    	; 0x11632 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   115b2:	19 82       	std	Y+1, r1	; 0x01
   115b4:	be 01       	movw	r22, r28
   115b6:	6f 5f       	subi	r22, 0xFF	; 255
   115b8:	7f 4f       	sbci	r23, 0xFF	; 255
   115ba:	c7 01       	movw	r24, r14
   115bc:	52 d0       	rcall	.+164    	; 0x11662 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   115be:	88 23       	and	r24, r24
   115c0:	09 f4       	brne	.+2      	; 0x115c4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x7a>
   115c2:	3d c0       	rjmp	.+122    	; 0x1163e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   115c4:	f8 01       	movw	r30, r16
   115c6:	60 81       	ld	r22, Z
   115c8:	71 81       	ldd	r23, Z+1	; 0x01
   115ca:	87 e0       	ldi	r24, 0x07	; 7
   115cc:	90 e0       	ldi	r25, 0x00	; 0
   115ce:	b3 d9       	rcall	.-3226   	; 0x10936 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   115d0:	dc 01       	movw	r26, r24
   115d2:	89 2b       	or	r24, r25
   115d4:	31 f0       	breq	.+12     	; 0x115e2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x98>
   115d6:	11 96       	adiw	r26, 0x01	; 1
   115d8:	1c 92       	st	X, r1
   115da:	1e 92       	st	-X, r1
   115dc:	12 96       	adiw	r26, 0x02	; 2
   115de:	1c 92       	st	X, r1
   115e0:	12 97       	sbiw	r26, 0x02	; 2
   115e2:	f8 01       	movw	r30, r16
   115e4:	22 81       	ldd	r18, Z+2	; 0x02
   115e6:	33 81       	ldd	r19, Z+3	; 0x03
   115e8:	21 15       	cp	r18, r1
   115ea:	31 05       	cpc	r19, r1
   115ec:	51 f0       	breq	.+20     	; 0x11602 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb8>
   115ee:	f9 01       	movw	r30, r18
   115f0:	80 81       	ld	r24, Z
   115f2:	91 81       	ldd	r25, Z+1	; 0x01
   115f4:	00 97       	sbiw	r24, 0x00	; 0
   115f6:	11 f0       	breq	.+4      	; 0x115fc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb2>
   115f8:	9c 01       	movw	r18, r24
   115fa:	f9 cf       	rjmp	.-14     	; 0x115ee <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xa4>
   115fc:	b1 83       	std	Z+1, r27	; 0x01
   115fe:	a0 83       	st	Z, r26
   11600:	03 c0       	rjmp	.+6      	; 0x11608 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xbe>
   11602:	f8 01       	movw	r30, r16
   11604:	b3 83       	std	Z+3, r27	; 0x03
   11606:	a2 83       	std	Z+2, r26	; 0x02
   11608:	10 97       	sbiw	r26, 0x00	; 0
   1160a:	c9 f0       	breq	.+50     	; 0x1163e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   1160c:	85 e0       	ldi	r24, 0x05	; 5
   1160e:	fe 01       	movw	r30, r28
   11610:	31 96       	adiw	r30, 0x01	; 1
   11612:	12 96       	adiw	r26, 0x02	; 2
   11614:	01 90       	ld	r0, Z+
   11616:	0d 92       	st	X+, r0
   11618:	8a 95       	dec	r24
   1161a:	e1 f7       	brne	.-8      	; 0x11614 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xca>
   1161c:	6d e5       	ldi	r22, 0x5D	; 93
   1161e:	c6 01       	movw	r24, r12
   11620:	68 dd       	rcall	.-1328   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11622:	81 11       	cpse	r24, r1
   11624:	06 c0       	rjmp	.+12     	; 0x11632 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   11626:	6c e2       	ldi	r22, 0x2C	; 44
   11628:	c6 01       	movw	r24, r12
   1162a:	63 dd       	rcall	.-1338   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1162c:	81 11       	cpse	r24, r1
   1162e:	c1 cf       	rjmp	.-126    	; 0x115b2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x68>
   11630:	06 c0       	rjmp	.+12     	; 0x1163e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11632:	f7 01       	movw	r30, r14
   11634:	86 81       	ldd	r24, Z+6	; 0x06
   11636:	8f 5f       	subi	r24, 0xFF	; 255
   11638:	86 83       	std	Z+6, r24	; 0x06
   1163a:	c8 01       	movw	r24, r16
   1163c:	04 c0       	rjmp	.+8      	; 0x11646 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   1163e:	8a d9       	rcall	.-3308   	; 0x10954 <_ZN11ArduinoJson9JsonArray7invalidEv>
   11640:	02 c0       	rjmp	.+4      	; 0x11646 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   11642:	88 d9       	rcall	.-3312   	; 0x10954 <_ZN11ArduinoJson9JsonArray7invalidEv>
   11644:	a6 cf       	rjmp	.-180    	; 0x11592 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x48>
   11646:	0f 90       	pop	r0
   11648:	0f 90       	pop	r0
   1164a:	0f 90       	pop	r0
   1164c:	0f 90       	pop	r0
   1164e:	0f 90       	pop	r0
   11650:	df 91       	pop	r29
   11652:	cf 91       	pop	r28
   11654:	1f 91       	pop	r17
   11656:	0f 91       	pop	r16
   11658:	ff 90       	pop	r15
   1165a:	ef 90       	pop	r14
   1165c:	df 90       	pop	r13
   1165e:	cf 90       	pop	r12
   11660:	08 95       	ret

00011662 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>:
   11662:	ef 92       	push	r14
   11664:	ff 92       	push	r15
   11666:	0f 93       	push	r16
   11668:	1f 93       	push	r17
   1166a:	cf 93       	push	r28
   1166c:	7c 01       	movw	r14, r24
   1166e:	8b 01       	movw	r16, r22
   11670:	02 96       	adiw	r24, 0x02	; 2
   11672:	fd dc       	rcall	.-1542   	; 0x1106e <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11674:	d7 01       	movw	r26, r14
   11676:	12 96       	adiw	r26, 0x02	; 2
   11678:	ed 91       	ld	r30, X+
   1167a:	fc 91       	ld	r31, X
   1167c:	13 97       	sbiw	r26, 0x03	; 3
   1167e:	80 81       	ld	r24, Z
   11680:	8b 35       	cpi	r24, 0x5B	; 91
   11682:	19 f0       	breq	.+6      	; 0x1168a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x28>
   11684:	8b 37       	cpi	r24, 0x7B	; 123
   11686:	61 f0       	breq	.+24     	; 0x116a0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3e>
   11688:	14 c0       	rjmp	.+40     	; 0x116b2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x50>
   1168a:	c7 01       	movw	r24, r14
   1168c:	5e df       	rcall	.-324    	; 0x1154a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>
   1168e:	fc 01       	movw	r30, r24
   11690:	20 81       	ld	r18, Z
   11692:	31 81       	ldd	r19, Z+1	; 0x01
   11694:	23 2b       	or	r18, r19
   11696:	11 f4       	brne	.+4      	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3a>
   11698:	c0 e0       	ldi	r28, 0x00	; 0
   1169a:	25 c0       	rjmp	.+74     	; 0x116e6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   1169c:	26 e0       	ldi	r18, 0x06	; 6
   1169e:	1c c0       	rjmp	.+56     	; 0x116d8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   116a0:	c7 01       	movw	r24, r14
   116a2:	28 d0       	rcall	.+80     	; 0x116f4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   116a4:	fc 01       	movw	r30, r24
   116a6:	20 81       	ld	r18, Z
   116a8:	31 81       	ldd	r19, Z+1	; 0x01
   116aa:	23 2b       	or	r18, r19
   116ac:	a9 f3       	breq	.-22     	; 0x11698 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   116ae:	27 e0       	ldi	r18, 0x07	; 7
   116b0:	13 c0       	rjmp	.+38     	; 0x116d8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   116b2:	c1 e0       	ldi	r28, 0x01	; 1
   116b4:	87 32       	cpi	r24, 0x27	; 39
   116b6:	19 f0       	breq	.+6      	; 0x116be <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   116b8:	82 32       	cpi	r24, 0x22	; 34
   116ba:	09 f0       	breq	.+2      	; 0x116be <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   116bc:	c0 e0       	ldi	r28, 0x00	; 0
   116be:	c7 01       	movw	r24, r14
   116c0:	2d dd       	rcall	.-1446   	; 0x1111c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   116c2:	00 97       	sbiw	r24, 0x00	; 0
   116c4:	49 f3       	breq	.-46     	; 0x11698 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   116c6:	cc 23       	and	r28, r28
   116c8:	31 f0       	breq	.+12     	; 0x116d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x74>
   116ca:	22 e0       	ldi	r18, 0x02	; 2
   116cc:	f8 01       	movw	r30, r16
   116ce:	20 83       	st	Z, r18
   116d0:	92 83       	std	Z+2, r25	; 0x02
   116d2:	81 83       	std	Z+1, r24	; 0x01
   116d4:	08 c0       	rjmp	.+16     	; 0x116e6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   116d6:	21 e0       	ldi	r18, 0x01	; 1
   116d8:	d8 01       	movw	r26, r16
   116da:	2c 93       	st	X, r18
   116dc:	12 96       	adiw	r26, 0x02	; 2
   116de:	9c 93       	st	X, r25
   116e0:	8e 93       	st	-X, r24
   116e2:	11 97       	sbiw	r26, 0x01	; 1
   116e4:	c1 e0       	ldi	r28, 0x01	; 1
   116e6:	8c 2f       	mov	r24, r28
   116e8:	cf 91       	pop	r28
   116ea:	1f 91       	pop	r17
   116ec:	0f 91       	pop	r16
   116ee:	ff 90       	pop	r15
   116f0:	ef 90       	pop	r14
   116f2:	08 95       	ret

000116f4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>:
   116f4:	af 92       	push	r10
   116f6:	bf 92       	push	r11
   116f8:	cf 92       	push	r12
   116fa:	df 92       	push	r13
   116fc:	ef 92       	push	r14
   116fe:	ff 92       	push	r15
   11700:	0f 93       	push	r16
   11702:	1f 93       	push	r17
   11704:	cf 93       	push	r28
   11706:	df 93       	push	r29
   11708:	00 d0       	rcall	.+0      	; 0x1170a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x16>
   1170a:	1f 92       	push	r1
   1170c:	1f 92       	push	r1
   1170e:	cd b7       	in	r28, 0x3d	; 61
   11710:	de b7       	in	r29, 0x3e	; 62
   11712:	7c 01       	movw	r14, r24
   11714:	fc 01       	movw	r30, r24
   11716:	86 81       	ldd	r24, Z+6	; 0x06
   11718:	88 23       	and	r24, r24
   1171a:	09 f4       	brne	.+2      	; 0x1171e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x2a>
   1171c:	4b c0       	rjmp	.+150    	; 0x117b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   1171e:	81 50       	subi	r24, 0x01	; 1
   11720:	f7 01       	movw	r30, r14
   11722:	86 83       	std	Z+6, r24	; 0x06
   11724:	81 91       	ld	r24, Z+
   11726:	91 91       	ld	r25, Z+
   11728:	6f 01       	movw	r12, r30
   1172a:	38 d9       	rcall	.-3472   	; 0x1099c <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   1172c:	8c 01       	movw	r16, r24
   1172e:	6b e7       	ldi	r22, 0x7B	; 123
   11730:	c6 01       	movw	r24, r12
   11732:	df dc       	rcall	.-1602   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11734:	88 23       	and	r24, r24
   11736:	09 f4       	brne	.+2      	; 0x1173a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x46>
   11738:	3d c0       	rjmp	.+122    	; 0x117b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   1173a:	6d e7       	ldi	r22, 0x7D	; 125
   1173c:	c6 01       	movw	r24, r12
   1173e:	d9 dc       	rcall	.-1614   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11740:	81 11       	cpse	r24, r1
   11742:	32 c0       	rjmp	.+100    	; 0x117a8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   11744:	c7 01       	movw	r24, r14
   11746:	ea dc       	rcall	.-1580   	; 0x1111c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   11748:	5c 01       	movw	r10, r24
   1174a:	89 2b       	or	r24, r25
   1174c:	99 f1       	breq	.+102    	; 0x117b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   1174e:	6a e3       	ldi	r22, 0x3A	; 58
   11750:	c6 01       	movw	r24, r12
   11752:	cf dc       	rcall	.-1634   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11754:	88 23       	and	r24, r24
   11756:	71 f1       	breq	.+92     	; 0x117b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11758:	19 82       	std	Y+1, r1	; 0x01
   1175a:	be 01       	movw	r22, r28
   1175c:	6f 5f       	subi	r22, 0xFF	; 255
   1175e:	7f 4f       	sbci	r23, 0xFF	; 255
   11760:	c7 01       	movw	r24, r14
   11762:	7f df       	rcall	.-258    	; 0x11662 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   11764:	88 23       	and	r24, r24
   11766:	31 f1       	breq	.+76     	; 0x117b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11768:	b5 01       	movw	r22, r10
   1176a:	c8 01       	movw	r24, r16
   1176c:	a0 de       	rcall	.-704    	; 0x114ae <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1176e:	00 97       	sbiw	r24, 0x00	; 0
   11770:	39 f4       	brne	.+14     	; 0x11780 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x8c>
   11772:	c8 01       	movw	r24, r16
   11774:	64 dd       	rcall	.-1336   	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11776:	00 97       	sbiw	r24, 0x00	; 0
   11778:	e9 f0       	breq	.+58     	; 0x117b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   1177a:	fc 01       	movw	r30, r24
   1177c:	b3 82       	std	Z+3, r11	; 0x03
   1177e:	a2 82       	std	Z+2, r10	; 0x02
   11780:	25 e0       	ldi	r18, 0x05	; 5
   11782:	fe 01       	movw	r30, r28
   11784:	31 96       	adiw	r30, 0x01	; 1
   11786:	dc 01       	movw	r26, r24
   11788:	14 96       	adiw	r26, 0x04	; 4
   1178a:	01 90       	ld	r0, Z+
   1178c:	0d 92       	st	X+, r0
   1178e:	2a 95       	dec	r18
   11790:	e1 f7       	brne	.-8      	; 0x1178a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x96>
   11792:	6d e7       	ldi	r22, 0x7D	; 125
   11794:	c6 01       	movw	r24, r12
   11796:	ad dc       	rcall	.-1702   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11798:	81 11       	cpse	r24, r1
   1179a:	06 c0       	rjmp	.+12     	; 0x117a8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   1179c:	6c e2       	ldi	r22, 0x2C	; 44
   1179e:	c6 01       	movw	r24, r12
   117a0:	a8 dc       	rcall	.-1712   	; 0x110f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   117a2:	81 11       	cpse	r24, r1
   117a4:	cf cf       	rjmp	.-98     	; 0x11744 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x50>
   117a6:	06 c0       	rjmp	.+12     	; 0x117b4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   117a8:	f7 01       	movw	r30, r14
   117aa:	86 81       	ldd	r24, Z+6	; 0x06
   117ac:	8f 5f       	subi	r24, 0xFF	; 255
   117ae:	86 83       	std	Z+6, r24	; 0x06
   117b0:	c8 01       	movw	r24, r16
   117b2:	01 c0       	rjmp	.+2      	; 0x117b6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc2>
   117b4:	e1 d8       	rcall	.-3646   	; 0x10978 <_ZN11ArduinoJson10JsonObject7invalidEv>
   117b6:	0f 90       	pop	r0
   117b8:	0f 90       	pop	r0
   117ba:	0f 90       	pop	r0
   117bc:	0f 90       	pop	r0
   117be:	0f 90       	pop	r0
   117c0:	df 91       	pop	r29
   117c2:	cf 91       	pop	r28
   117c4:	1f 91       	pop	r17
   117c6:	0f 91       	pop	r16
   117c8:	ff 90       	pop	r15
   117ca:	ef 90       	pop	r14
   117cc:	df 90       	pop	r13
   117ce:	cf 90       	pop	r12
   117d0:	bf 90       	pop	r11
   117d2:	af 90       	pop	r10
   117d4:	08 95       	ret

000117d6 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>:
   117d6:	0f cd       	rjmp	.-1506   	; 0x111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   117d8:	08 95       	ret

000117da <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   117da:	1f 93       	push	r17
   117dc:	cf 93       	push	r28
   117de:	df 93       	push	r29
   117e0:	fa df       	rcall	.-12     	; 0x117d6 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   117e2:	ec 01       	movw	r28, r24
   117e4:	89 2b       	or	r24, r25
   117e6:	a1 f0       	breq	.+40     	; 0x11810 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   117e8:	1c 81       	ldd	r17, Y+4	; 0x04
   117ea:	11 30       	cpi	r17, 0x01	; 1
   117ec:	59 f4       	brne	.+22     	; 0x11804 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   117ee:	6d 81       	ldd	r22, Y+5	; 0x05
   117f0:	7e 81       	ldd	r23, Y+6	; 0x06
   117f2:	61 15       	cp	r22, r1
   117f4:	71 05       	cpc	r23, r1
   117f6:	31 f0       	breq	.+12     	; 0x11804 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   117f8:	8c ee       	ldi	r24, 0xEC	; 236
   117fa:	96 e0       	ldi	r25, 0x06	; 6
   117fc:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   11800:	89 2b       	or	r24, r25
   11802:	31 f0       	breq	.+12     	; 0x11810 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   11804:	11 50       	subi	r17, 0x01	; 1
   11806:	12 30       	cpi	r17, 0x02	; 2
   11808:	18 f4       	brcc	.+6      	; 0x11810 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   1180a:	8d 81       	ldd	r24, Y+5	; 0x05
   1180c:	9e 81       	ldd	r25, Y+6	; 0x06
   1180e:	02 c0       	rjmp	.+4      	; 0x11814 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x3a>
   11810:	80 e0       	ldi	r24, 0x00	; 0
   11812:	90 e0       	ldi	r25, 0x00	; 0
   11814:	df 91       	pop	r29
   11816:	cf 91       	pop	r28
   11818:	1f 91       	pop	r17
   1181a:	08 95       	ret

0001181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   1181c:	dc df       	rcall	.-72     	; 0x117d6 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   1181e:	00 97       	sbiw	r24, 0x00	; 0
   11820:	39 f0       	breq	.+14     	; 0x11830 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11822:	fc 01       	movw	r30, r24
   11824:	24 81       	ldd	r18, Z+4	; 0x04
   11826:	26 30       	cpi	r18, 0x06	; 6
   11828:	19 f4       	brne	.+6      	; 0x11830 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   1182a:	85 81       	ldd	r24, Z+5	; 0x05
   1182c:	96 81       	ldd	r25, Z+6	; 0x06
   1182e:	08 95       	ret
   11830:	91 c8       	rjmp	.-3806   	; 0x10954 <_ZN11ArduinoJson9JsonArray7invalidEv>

00011832 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>:
   11832:	fc 01       	movw	r30, r24
   11834:	80 81       	ld	r24, Z
   11836:	83 30       	cpi	r24, 0x03	; 3
   11838:	18 f4       	brcc	.+6      	; 0x11840 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0xe>
   1183a:	81 30       	cpi	r24, 0x01	; 1
   1183c:	e8 f1       	brcs	.+122    	; 0x118b8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   1183e:	0a c0       	rjmp	.+20     	; 0x11854 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x22>
   11840:	85 30       	cpi	r24, 0x05	; 5
   11842:	28 f0       	brcs	.+10     	; 0x1184e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x1c>
   11844:	85 30       	cpi	r24, 0x05	; 5
   11846:	89 f5       	brne	.+98     	; 0x118aa <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x78>
   11848:	61 81       	ldd	r22, Z+1	; 0x01
   1184a:	72 81       	ldd	r23, Z+2	; 0x02
   1184c:	29 c0       	rjmp	.+82     	; 0x118a0 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6e>
   1184e:	81 81       	ldd	r24, Z+1	; 0x01
   11850:	92 81       	ldd	r25, Z+2	; 0x02
   11852:	08 95       	ret
   11854:	01 80       	ldd	r0, Z+1	; 0x01
   11856:	f2 81       	ldd	r31, Z+2	; 0x02
   11858:	e0 2d       	mov	r30, r0
   1185a:	30 97       	sbiw	r30, 0x00	; 0
   1185c:	69 f1       	breq	.+90     	; 0x118b8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   1185e:	80 81       	ld	r24, Z
   11860:	84 37       	cpi	r24, 0x74	; 116
   11862:	69 f1       	breq	.+90     	; 0x118be <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x8c>
   11864:	8b 32       	cpi	r24, 0x2B	; 43
   11866:	29 f0       	breq	.+10     	; 0x11872 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x40>
   11868:	8d 32       	cpi	r24, 0x2D	; 45
   1186a:	21 f4       	brne	.+8      	; 0x11874 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x42>
   1186c:	31 96       	adiw	r30, 0x01	; 1
   1186e:	91 e0       	ldi	r25, 0x01	; 1
   11870:	02 c0       	rjmp	.+4      	; 0x11876 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x44>
   11872:	31 96       	adiw	r30, 0x01	; 1
   11874:	90 e0       	ldi	r25, 0x00	; 0
   11876:	60 e0       	ldi	r22, 0x00	; 0
   11878:	70 e0       	ldi	r23, 0x00	; 0
   1187a:	4a e0       	ldi	r20, 0x0A	; 10
   1187c:	81 91       	ld	r24, Z+
   1187e:	20 ed       	ldi	r18, 0xD0	; 208
   11880:	28 0f       	add	r18, r24
   11882:	2a 30       	cpi	r18, 0x0A	; 10
   11884:	58 f4       	brcc	.+22     	; 0x1189c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6a>
   11886:	46 9f       	mul	r20, r22
   11888:	90 01       	movw	r18, r0
   1188a:	47 9f       	mul	r20, r23
   1188c:	30 0d       	add	r19, r0
   1188e:	11 24       	eor	r1, r1
   11890:	b9 01       	movw	r22, r18
   11892:	60 53       	subi	r22, 0x30	; 48
   11894:	71 09       	sbc	r23, r1
   11896:	68 0f       	add	r22, r24
   11898:	71 1d       	adc	r23, r1
   1189a:	f0 cf       	rjmp	.-32     	; 0x1187c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x4a>
   1189c:	99 23       	and	r25, r25
   1189e:	91 f0       	breq	.+36     	; 0x118c4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   118a0:	88 27       	eor	r24, r24
   118a2:	99 27       	eor	r25, r25
   118a4:	86 1b       	sub	r24, r22
   118a6:	97 0b       	sbc	r25, r23
   118a8:	08 95       	ret
   118aa:	61 81       	ldd	r22, Z+1	; 0x01
   118ac:	72 81       	ldd	r23, Z+2	; 0x02
   118ae:	83 81       	ldd	r24, Z+3	; 0x03
   118b0:	94 81       	ldd	r25, Z+4	; 0x04
   118b2:	0e 94 1e ce 	call	0x19c3c	; 0x19c3c <__fixunssfsi>
   118b6:	06 c0       	rjmp	.+12     	; 0x118c4 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   118b8:	80 e0       	ldi	r24, 0x00	; 0
   118ba:	90 e0       	ldi	r25, 0x00	; 0
   118bc:	08 95       	ret
   118be:	81 e0       	ldi	r24, 0x01	; 1
   118c0:	90 e0       	ldi	r25, 0x00	; 0
   118c2:	08 95       	ret
   118c4:	cb 01       	movw	r24, r22
   118c6:	08 95       	ret

000118c8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   118c8:	86 df       	rcall	.-244    	; 0x117d6 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   118ca:	00 97       	sbiw	r24, 0x00	; 0
   118cc:	11 f0       	breq	.+4      	; 0x118d2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   118ce:	04 96       	adiw	r24, 0x04	; 4
   118d0:	b0 cf       	rjmp	.-160    	; 0x11832 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   118d2:	80 e0       	ldi	r24, 0x00	; 0
   118d4:	90 e0       	ldi	r25, 0x00	; 0
   118d6:	08 95       	ret

000118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   118d8:	fc 01       	movw	r30, r24
   118da:	82 81       	ldd	r24, Z+2	; 0x02
   118dc:	93 81       	ldd	r25, Z+3	; 0x03
   118de:	00 97       	sbiw	r24, 0x00	; 0
   118e0:	59 f0       	breq	.+22     	; 0x118f8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   118e2:	61 15       	cp	r22, r1
   118e4:	71 05       	cpc	r23, r1
   118e6:	31 f0       	breq	.+12     	; 0x118f4 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   118e8:	fc 01       	movw	r30, r24
   118ea:	80 81       	ld	r24, Z
   118ec:	91 81       	ldd	r25, Z+1	; 0x01
   118ee:	61 50       	subi	r22, 0x01	; 1
   118f0:	71 09       	sbc	r23, r1
   118f2:	f5 cf       	rjmp	.-22     	; 0x118de <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   118f4:	02 96       	adiw	r24, 0x02	; 2
   118f6:	9d cf       	rjmp	.-198    	; 0x11832 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   118f8:	80 e0       	ldi	r24, 0x00	; 0
   118fa:	90 e0       	ldi	r25, 0x00	; 0
   118fc:	08 95       	ret

000118fe <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>:
   118fe:	fc 01       	movw	r30, r24
   11900:	80 81       	ld	r24, Z
   11902:	83 30       	cpi	r24, 0x03	; 3
   11904:	18 f4       	brcc	.+6      	; 0x1190c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0xe>
   11906:	81 30       	cpi	r24, 0x01	; 1
   11908:	98 f1       	brcs	.+102    	; 0x11970 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   1190a:	08 c0       	rjmp	.+16     	; 0x1191c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1e>
   1190c:	85 30       	cpi	r24, 0x05	; 5
   1190e:	20 f0       	brcs	.+8      	; 0x11918 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1a>
   11910:	85 30       	cpi	r24, 0x05	; 5
   11912:	39 f5       	brne	.+78     	; 0x11962 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x64>
   11914:	61 81       	ldd	r22, Z+1	; 0x01
   11916:	23 c0       	rjmp	.+70     	; 0x1195e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x60>
   11918:	61 81       	ldd	r22, Z+1	; 0x01
   1191a:	2d c0       	rjmp	.+90     	; 0x11976 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   1191c:	01 80       	ldd	r0, Z+1	; 0x01
   1191e:	f2 81       	ldd	r31, Z+2	; 0x02
   11920:	e0 2d       	mov	r30, r0
   11922:	30 97       	sbiw	r30, 0x00	; 0
   11924:	29 f1       	breq	.+74     	; 0x11970 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11926:	80 81       	ld	r24, Z
   11928:	84 37       	cpi	r24, 0x74	; 116
   1192a:	21 f1       	breq	.+72     	; 0x11974 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x76>
   1192c:	8b 32       	cpi	r24, 0x2B	; 43
   1192e:	29 f0       	breq	.+10     	; 0x1193a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3c>
   11930:	8d 32       	cpi	r24, 0x2D	; 45
   11932:	21 f4       	brne	.+8      	; 0x1193c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3e>
   11934:	31 96       	adiw	r30, 0x01	; 1
   11936:	91 e0       	ldi	r25, 0x01	; 1
   11938:	02 c0       	rjmp	.+4      	; 0x1193e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x40>
   1193a:	31 96       	adiw	r30, 0x01	; 1
   1193c:	90 e0       	ldi	r25, 0x00	; 0
   1193e:	60 e0       	ldi	r22, 0x00	; 0
   11940:	21 91       	ld	r18, Z+
   11942:	80 ed       	ldi	r24, 0xD0	; 208
   11944:	82 0f       	add	r24, r18
   11946:	8a 30       	cpi	r24, 0x0A	; 10
   11948:	40 f4       	brcc	.+16     	; 0x1195a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x5c>
   1194a:	66 0f       	add	r22, r22
   1194c:	86 2f       	mov	r24, r22
   1194e:	88 0f       	add	r24, r24
   11950:	88 0f       	add	r24, r24
   11952:	68 0f       	add	r22, r24
   11954:	60 53       	subi	r22, 0x30	; 48
   11956:	62 0f       	add	r22, r18
   11958:	f3 cf       	rjmp	.-26     	; 0x11940 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x42>
   1195a:	99 23       	and	r25, r25
   1195c:	61 f0       	breq	.+24     	; 0x11976 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   1195e:	61 95       	neg	r22
   11960:	0a c0       	rjmp	.+20     	; 0x11976 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11962:	61 81       	ldd	r22, Z+1	; 0x01
   11964:	72 81       	ldd	r23, Z+2	; 0x02
   11966:	83 81       	ldd	r24, Z+3	; 0x03
   11968:	94 81       	ldd	r25, Z+4	; 0x04
   1196a:	0e 94 1e ce 	call	0x19c3c	; 0x19c3c <__fixunssfsi>
   1196e:	03 c0       	rjmp	.+6      	; 0x11976 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11970:	60 e0       	ldi	r22, 0x00	; 0
   11972:	01 c0       	rjmp	.+2      	; 0x11976 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11974:	61 e0       	ldi	r22, 0x01	; 1
   11976:	86 2f       	mov	r24, r22
   11978:	08 95       	ret

0001197a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   1197a:	fc 01       	movw	r30, r24
   1197c:	82 81       	ldd	r24, Z+2	; 0x02
   1197e:	93 81       	ldd	r25, Z+3	; 0x03
   11980:	00 97       	sbiw	r24, 0x00	; 0
   11982:	59 f0       	breq	.+22     	; 0x1199a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   11984:	61 15       	cp	r22, r1
   11986:	71 05       	cpc	r23, r1
   11988:	31 f0       	breq	.+12     	; 0x11996 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   1198a:	fc 01       	movw	r30, r24
   1198c:	80 81       	ld	r24, Z
   1198e:	91 81       	ldd	r25, Z+1	; 0x01
   11990:	61 50       	subi	r22, 0x01	; 1
   11992:	71 09       	sbc	r23, r1
   11994:	f5 cf       	rjmp	.-22     	; 0x11980 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11996:	02 96       	adiw	r24, 0x02	; 2
   11998:	b2 cf       	rjmp	.-156    	; 0x118fe <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   1199a:	80 e0       	ldi	r24, 0x00	; 0
   1199c:	08 95       	ret

0001199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   1199e:	1b df       	rcall	.-458    	; 0x117d6 <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   119a0:	00 97       	sbiw	r24, 0x00	; 0
   119a2:	11 f0       	breq	.+4      	; 0x119a8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   119a4:	04 96       	adiw	r24, 0x04	; 4
   119a6:	ab cf       	rjmp	.-170    	; 0x118fe <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   119a8:	80 e0       	ldi	r24, 0x00	; 0
   119aa:	08 95       	ret

000119ac <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>:
   119ac:	2f 92       	push	r2
   119ae:	3f 92       	push	r3
   119b0:	4f 92       	push	r4
   119b2:	5f 92       	push	r5
   119b4:	6f 92       	push	r6
   119b6:	7f 92       	push	r7
   119b8:	8f 92       	push	r8
   119ba:	9f 92       	push	r9
   119bc:	af 92       	push	r10
   119be:	bf 92       	push	r11
   119c0:	cf 92       	push	r12
   119c2:	df 92       	push	r13
   119c4:	ef 92       	push	r14
   119c6:	ff 92       	push	r15
   119c8:	0f 93       	push	r16
   119ca:	1f 93       	push	r17
   119cc:	cf 93       	push	r28
   119ce:	df 93       	push	r29
   119d0:	00 d0       	rcall	.+0      	; 0x119d2 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x26>
   119d2:	1f 92       	push	r1
   119d4:	cd b7       	in	r28, 0x3d	; 61
   119d6:	de b7       	in	r29, 0x3e	; 62
   119d8:	1c 01       	movw	r2, r24
   119da:	6a 01       	movw	r12, r20
   119dc:	7b 01       	movw	r14, r22
   119de:	86 e0       	ldi	r24, 0x06	; 6
   119e0:	d1 01       	movw	r26, r2
   119e2:	1a 96       	adiw	r26, 0x0a	; 10
   119e4:	8c 93       	st	X, r24
   119e6:	20 e8       	ldi	r18, 0x80	; 128
   119e8:	36 e9       	ldi	r19, 0x96	; 150
   119ea:	48 e1       	ldi	r20, 0x18	; 24
   119ec:	5b e4       	ldi	r21, 0x4B	; 75
   119ee:	c7 01       	movw	r24, r14
   119f0:	b6 01       	movw	r22, r12
   119f2:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
   119f6:	87 fd       	sbrc	r24, 7
   119f8:	3a c0       	rjmp	.+116    	; 0x11a6e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xc2>
   119fa:	52 e5       	ldi	r21, 0x52	; 82
   119fc:	85 2e       	mov	r8, r21
   119fe:	52 e0       	ldi	r21, 0x02	; 2
   11a00:	95 2e       	mov	r9, r21
   11a02:	62 e2       	ldi	r22, 0x22	; 34
   11a04:	a6 2e       	mov	r10, r22
   11a06:	62 e0       	ldi	r22, 0x02	; 2
   11a08:	b6 2e       	mov	r11, r22
   11a0a:	e0 e2       	ldi	r30, 0x20	; 32
   11a0c:	f0 e0       	ldi	r31, 0x00	; 0
   11a0e:	fa 83       	std	Y+2, r31	; 0x02
   11a10:	e9 83       	std	Y+1, r30	; 0x01
   11a12:	00 e0       	ldi	r16, 0x00	; 0
   11a14:	10 e0       	ldi	r17, 0x00	; 0
   11a16:	a7 01       	movw	r20, r14
   11a18:	96 01       	movw	r18, r12
   11a1a:	d4 01       	movw	r26, r8
   11a1c:	9e 91       	ld	r25, -X
   11a1e:	8e 91       	ld	r24, -X
   11a20:	7e 91       	ld	r23, -X
   11a22:	6e 91       	ld	r22, -X
   11a24:	4d 01       	movw	r8, r26
   11a26:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
   11a2a:	18 16       	cp	r1, r24
   11a2c:	7c f0       	brlt	.+30     	; 0x11a4c <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xa0>
   11a2e:	f5 01       	movw	r30, r10
   11a30:	24 89       	ldd	r18, Z+20	; 0x14
   11a32:	35 89       	ldd	r19, Z+21	; 0x15
   11a34:	46 89       	ldd	r20, Z+22	; 0x16
   11a36:	57 89       	ldd	r21, Z+23	; 0x17
   11a38:	c7 01       	movw	r24, r14
   11a3a:	b6 01       	movw	r22, r12
   11a3c:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
   11a40:	6b 01       	movw	r12, r22
   11a42:	7c 01       	movw	r14, r24
   11a44:	89 81       	ldd	r24, Y+1	; 0x01
   11a46:	9a 81       	ldd	r25, Y+2	; 0x02
   11a48:	08 0f       	add	r16, r24
   11a4a:	19 1f       	adc	r17, r25
   11a4c:	a9 81       	ldd	r26, Y+1	; 0x01
   11a4e:	ba 81       	ldd	r27, Y+2	; 0x02
   11a50:	b5 95       	asr	r27
   11a52:	a7 95       	ror	r26
   11a54:	ba 83       	std	Y+2, r27	; 0x02
   11a56:	a9 83       	std	Y+1, r26	; 0x01
   11a58:	b4 e0       	ldi	r27, 0x04	; 4
   11a5a:	ab 1a       	sub	r10, r27
   11a5c:	b1 08       	sbc	r11, r1
   11a5e:	ea e3       	ldi	r30, 0x3A	; 58
   11a60:	8e 16       	cp	r8, r30
   11a62:	e2 e0       	ldi	r30, 0x02	; 2
   11a64:	9e 06       	cpc	r9, r30
   11a66:	b9 f6       	brne	.-82     	; 0x11a16 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x6a>
   11a68:	bb 24       	eor	r11, r11
   11a6a:	ba 94       	dec	r11
   11a6c:	08 c0       	rjmp	.+16     	; 0x11a7e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xd2>
   11a6e:	80 e2       	ldi	r24, 0x20	; 32
   11a70:	90 e0       	ldi	r25, 0x00	; 0
   11a72:	9a 83       	std	Y+2, r25	; 0x02
   11a74:	89 83       	std	Y+1, r24	; 0x01
   11a76:	35 e0       	ldi	r19, 0x05	; 5
   11a78:	b3 2e       	mov	r11, r19
   11a7a:	00 e0       	ldi	r16, 0x00	; 0
   11a7c:	10 e0       	ldi	r17, 0x00	; 0
   11a7e:	20 e0       	ldi	r18, 0x00	; 0
   11a80:	30 e0       	ldi	r19, 0x00	; 0
   11a82:	a9 01       	movw	r20, r18
   11a84:	c7 01       	movw	r24, r14
   11a86:	b6 01       	movw	r22, r12
   11a88:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
   11a8c:	18 16       	cp	r1, r24
   11a8e:	c4 f5       	brge	.+112    	; 0x11b00 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11a90:	2c ea       	ldi	r18, 0xAC	; 172
   11a92:	35 ec       	ldi	r19, 0xC5	; 197
   11a94:	47 e2       	ldi	r20, 0x27	; 39
   11a96:	57 e3       	ldi	r21, 0x37	; 55
   11a98:	c7 01       	movw	r24, r14
   11a9a:	b6 01       	movw	r22, r12
   11a9c:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
   11aa0:	18 16       	cp	r1, r24
   11aa2:	74 f1       	brlt	.+92     	; 0x11b00 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11aa4:	9f ef       	ldi	r25, 0xFF	; 255
   11aa6:	b9 16       	cp	r11, r25
   11aa8:	59 f1       	breq	.+86     	; 0x11b00 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11aaa:	ab 2d       	mov	r26, r11
   11aac:	b4 e0       	ldi	r27, 0x04	; 4
   11aae:	ab 02       	muls	r26, r27
   11ab0:	40 01       	movw	r8, r0
   11ab2:	11 24       	eor	r1, r1
   11ab4:	f4 01       	movw	r30, r8
   11ab6:	e6 5f       	subi	r30, 0xF6	; 246
   11ab8:	fd 4f       	sbci	r31, 0xFD	; 253
   11aba:	a7 01       	movw	r20, r14
   11abc:	96 01       	movw	r18, r12
   11abe:	60 81       	ld	r22, Z
   11ac0:	71 81       	ldd	r23, Z+1	; 0x01
   11ac2:	82 81       	ldd	r24, Z+2	; 0x02
   11ac4:	93 81       	ldd	r25, Z+3	; 0x03
   11ac6:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
   11aca:	18 16       	cp	r1, r24
   11acc:	8c f4       	brge	.+34     	; 0x11af0 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x144>
   11ace:	f4 01       	movw	r30, r8
   11ad0:	e6 5c       	subi	r30, 0xC6	; 198
   11ad2:	fd 4f       	sbci	r31, 0xFD	; 253
   11ad4:	20 81       	ld	r18, Z
   11ad6:	31 81       	ldd	r19, Z+1	; 0x01
   11ad8:	42 81       	ldd	r20, Z+2	; 0x02
   11ada:	53 81       	ldd	r21, Z+3	; 0x03
   11adc:	c7 01       	movw	r24, r14
   11ade:	b6 01       	movw	r22, r12
   11ae0:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
   11ae4:	6b 01       	movw	r12, r22
   11ae6:	7c 01       	movw	r14, r24
   11ae8:	e9 81       	ldd	r30, Y+1	; 0x01
   11aea:	fa 81       	ldd	r31, Y+2	; 0x02
   11aec:	0e 1b       	sub	r16, r30
   11aee:	1f 0b       	sbc	r17, r31
   11af0:	89 81       	ldd	r24, Y+1	; 0x01
   11af2:	9a 81       	ldd	r25, Y+2	; 0x02
   11af4:	95 95       	asr	r25
   11af6:	87 95       	ror	r24
   11af8:	9a 83       	std	Y+2, r25	; 0x02
   11afa:	89 83       	std	Y+1, r24	; 0x01
   11afc:	ba 94       	dec	r11
   11afe:	d2 cf       	rjmp	.-92     	; 0x11aa4 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xf8>
   11b00:	d1 01       	movw	r26, r2
   11b02:	19 96       	adiw	r26, 0x09	; 9
   11b04:	1c 93       	st	X, r17
   11b06:	0e 93       	st	-X, r16
   11b08:	18 97       	sbiw	r26, 0x08	; 8
   11b0a:	c7 01       	movw	r24, r14
   11b0c:	b6 01       	movw	r22, r12
   11b0e:	0e 94 1e ce 	call	0x19c3c	; 0x19c3c <__fixunssfsi>
   11b12:	69 83       	std	Y+1, r22	; 0x01
   11b14:	7a 83       	std	Y+2, r23	; 0x02
   11b16:	8b 83       	std	Y+3, r24	; 0x03
   11b18:	9c 83       	std	Y+4, r25	; 0x04
   11b1a:	f1 01       	movw	r30, r2
   11b1c:	60 83       	st	Z, r22
   11b1e:	71 83       	std	Z+1, r23	; 0x01
   11b20:	82 83       	std	Z+2, r24	; 0x02
   11b22:	93 83       	std	Z+3, r25	; 0x03
   11b24:	2b 01       	movw	r4, r22
   11b26:	3c 01       	movw	r6, r24
   11b28:	90 e4       	ldi	r25, 0x40	; 64
   11b2a:	89 2e       	mov	r8, r25
   11b2c:	92 e4       	ldi	r25, 0x42	; 66
   11b2e:	99 2e       	mov	r9, r25
   11b30:	9f e0       	ldi	r25, 0x0F	; 15
   11b32:	a9 2e       	mov	r10, r25
   11b34:	b1 2c       	mov	r11, r1
   11b36:	fa e0       	ldi	r31, 0x0A	; 10
   11b38:	4f 16       	cp	r4, r31
   11b3a:	51 04       	cpc	r5, r1
   11b3c:	61 04       	cpc	r6, r1
   11b3e:	71 04       	cpc	r7, r1
   11b40:	e0 f0       	brcs	.+56     	; 0x11b7a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x1ce>
   11b42:	c5 01       	movw	r24, r10
   11b44:	b4 01       	movw	r22, r8
   11b46:	2a e0       	ldi	r18, 0x0A	; 10
   11b48:	30 e0       	ldi	r19, 0x00	; 0
   11b4a:	40 e0       	ldi	r20, 0x00	; 0
   11b4c:	50 e0       	ldi	r21, 0x00	; 0
   11b4e:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   11b52:	49 01       	movw	r8, r18
   11b54:	5a 01       	movw	r10, r20
   11b56:	d1 01       	movw	r26, r2
   11b58:	1a 96       	adiw	r26, 0x0a	; 10
   11b5a:	8c 91       	ld	r24, X
   11b5c:	1a 97       	sbiw	r26, 0x0a	; 10
   11b5e:	81 50       	subi	r24, 0x01	; 1
   11b60:	1a 96       	adiw	r26, 0x0a	; 10
   11b62:	8c 93       	st	X, r24
   11b64:	c3 01       	movw	r24, r6
   11b66:	b2 01       	movw	r22, r4
   11b68:	2a e0       	ldi	r18, 0x0A	; 10
   11b6a:	30 e0       	ldi	r19, 0x00	; 0
   11b6c:	40 e0       	ldi	r20, 0x00	; 0
   11b6e:	50 e0       	ldi	r21, 0x00	; 0
   11b70:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   11b74:	29 01       	movw	r4, r18
   11b76:	3a 01       	movw	r6, r20
   11b78:	de cf       	rjmp	.-68     	; 0x11b36 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x18a>
   11b7a:	69 81       	ldd	r22, Y+1	; 0x01
   11b7c:	7a 81       	ldd	r23, Y+2	; 0x02
   11b7e:	8b 81       	ldd	r24, Y+3	; 0x03
   11b80:	9c 81       	ldd	r25, Y+4	; 0x04
   11b82:	0e 94 4a ce 	call	0x19c94	; 0x19c94 <__floatunsisf>
   11b86:	9b 01       	movw	r18, r22
   11b88:	ac 01       	movw	r20, r24
   11b8a:	c7 01       	movw	r24, r14
   11b8c:	b6 01       	movw	r22, r12
   11b8e:	0e 94 4d cd 	call	0x19a9a	; 0x19a9a <__subsf3>
   11b92:	6b 01       	movw	r12, r22
   11b94:	7c 01       	movw	r14, r24
   11b96:	c5 01       	movw	r24, r10
   11b98:	b4 01       	movw	r22, r8
   11b9a:	0e 94 4a ce 	call	0x19c94	; 0x19c94 <__floatunsisf>
   11b9e:	9b 01       	movw	r18, r22
   11ba0:	ac 01       	movw	r20, r24
   11ba2:	c7 01       	movw	r24, r14
   11ba4:	b6 01       	movw	r22, r12
   11ba6:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
   11baa:	2b 01       	movw	r4, r22
   11bac:	3c 01       	movw	r6, r24
   11bae:	0e 94 1e ce 	call	0x19c3c	; 0x19c3c <__fixunssfsi>
   11bb2:	6b 01       	movw	r12, r22
   11bb4:	7c 01       	movw	r14, r24
   11bb6:	0e 94 4a ce 	call	0x19c94	; 0x19c94 <__floatunsisf>
   11bba:	9b 01       	movw	r18, r22
   11bbc:	ac 01       	movw	r20, r24
   11bbe:	c3 01       	movw	r24, r6
   11bc0:	b2 01       	movw	r22, r4
   11bc2:	0e 94 4d cd 	call	0x19a9a	; 0x19a9a <__subsf3>
   11bc6:	9b 01       	movw	r18, r22
   11bc8:	ac 01       	movw	r20, r24
   11bca:	0e 94 4e cd 	call	0x19a9c	; 0x19a9c <__addsf3>
   11bce:	0e 94 1e ce 	call	0x19c3c	; 0x19c3c <__fixunssfsi>
   11bd2:	c6 0e       	add	r12, r22
   11bd4:	d7 1e       	adc	r13, r23
   11bd6:	e8 1e       	adc	r14, r24
   11bd8:	f9 1e       	adc	r15, r25
   11bda:	c8 14       	cp	r12, r8
   11bdc:	d9 04       	cpc	r13, r9
   11bde:	ea 04       	cpc	r14, r10
   11be0:	fb 04       	cpc	r15, r11
   11be2:	30 f4       	brcc	.+12     	; 0x11bf0 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x244>
   11be4:	f1 01       	movw	r30, r2
   11be6:	c4 82       	std	Z+4, r12	; 0x04
   11be8:	d5 82       	std	Z+5, r13	; 0x05
   11bea:	e6 82       	std	Z+6, r14	; 0x06
   11bec:	f7 82       	std	Z+7, r15	; 0x07
   11bee:	26 c0       	rjmp	.+76     	; 0x11c3c <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11bf0:	d1 01       	movw	r26, r2
   11bf2:	14 96       	adiw	r26, 0x04	; 4
   11bf4:	1d 92       	st	X+, r1
   11bf6:	1d 92       	st	X+, r1
   11bf8:	1d 92       	st	X+, r1
   11bfa:	1c 92       	st	X, r1
   11bfc:	17 97       	sbiw	r26, 0x07	; 7
   11bfe:	89 81       	ldd	r24, Y+1	; 0x01
   11c00:	9a 81       	ldd	r25, Y+2	; 0x02
   11c02:	ab 81       	ldd	r26, Y+3	; 0x03
   11c04:	bc 81       	ldd	r27, Y+4	; 0x04
   11c06:	01 96       	adiw	r24, 0x01	; 1
   11c08:	a1 1d       	adc	r26, r1
   11c0a:	b1 1d       	adc	r27, r1
   11c0c:	f1 01       	movw	r30, r2
   11c0e:	80 83       	st	Z, r24
   11c10:	91 83       	std	Z+1, r25	; 0x01
   11c12:	a2 83       	std	Z+2, r26	; 0x02
   11c14:	b3 83       	std	Z+3, r27	; 0x03
   11c16:	01 15       	cp	r16, r1
   11c18:	11 05       	cpc	r17, r1
   11c1a:	81 f0       	breq	.+32     	; 0x11c3c <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11c1c:	0a 97       	sbiw	r24, 0x0a	; 10
   11c1e:	a1 05       	cpc	r26, r1
   11c20:	b1 05       	cpc	r27, r1
   11c22:	60 f0       	brcs	.+24     	; 0x11c3c <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11c24:	c8 01       	movw	r24, r16
   11c26:	01 96       	adiw	r24, 0x01	; 1
   11c28:	91 87       	std	Z+9, r25	; 0x09
   11c2a:	80 87       	std	Z+8, r24	; 0x08
   11c2c:	81 e0       	ldi	r24, 0x01	; 1
   11c2e:	90 e0       	ldi	r25, 0x00	; 0
   11c30:	a0 e0       	ldi	r26, 0x00	; 0
   11c32:	b0 e0       	ldi	r27, 0x00	; 0
   11c34:	80 83       	st	Z, r24
   11c36:	91 83       	std	Z+1, r25	; 0x01
   11c38:	a2 83       	std	Z+2, r26	; 0x02
   11c3a:	b3 83       	std	Z+3, r27	; 0x03
   11c3c:	8a e0       	ldi	r24, 0x0A	; 10
   11c3e:	c8 2e       	mov	r12, r24
   11c40:	d1 2c       	mov	r13, r1
   11c42:	e1 2c       	mov	r14, r1
   11c44:	f1 2c       	mov	r15, r1
   11c46:	d1 01       	movw	r26, r2
   11c48:	14 96       	adiw	r26, 0x04	; 4
   11c4a:	6d 91       	ld	r22, X+
   11c4c:	7d 91       	ld	r23, X+
   11c4e:	8d 91       	ld	r24, X+
   11c50:	9c 91       	ld	r25, X
   11c52:	17 97       	sbiw	r26, 0x07	; 7
   11c54:	a7 01       	movw	r20, r14
   11c56:	96 01       	movw	r18, r12
   11c58:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   11c5c:	67 2b       	or	r22, r23
   11c5e:	68 2b       	or	r22, r24
   11c60:	69 2b       	or	r22, r25
   11c62:	59 f4       	brne	.+22     	; 0x11c7a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11c64:	f1 01       	movw	r30, r2
   11c66:	82 85       	ldd	r24, Z+10	; 0x0a
   11c68:	18 16       	cp	r1, r24
   11c6a:	3c f4       	brge	.+14     	; 0x11c7a <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11c6c:	24 83       	std	Z+4, r18	; 0x04
   11c6e:	35 83       	std	Z+5, r19	; 0x05
   11c70:	46 83       	std	Z+6, r20	; 0x06
   11c72:	57 83       	std	Z+7, r21	; 0x07
   11c74:	81 50       	subi	r24, 0x01	; 1
   11c76:	82 87       	std	Z+10, r24	; 0x0a
   11c78:	e6 cf       	rjmp	.-52     	; 0x11c46 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x29a>
   11c7a:	0f 90       	pop	r0
   11c7c:	0f 90       	pop	r0
   11c7e:	0f 90       	pop	r0
   11c80:	0f 90       	pop	r0
   11c82:	df 91       	pop	r29
   11c84:	cf 91       	pop	r28
   11c86:	1f 91       	pop	r17
   11c88:	0f 91       	pop	r16
   11c8a:	ff 90       	pop	r15
   11c8c:	ef 90       	pop	r14
   11c8e:	df 90       	pop	r13
   11c90:	cf 90       	pop	r12
   11c92:	bf 90       	pop	r11
   11c94:	af 90       	pop	r10
   11c96:	9f 90       	pop	r9
   11c98:	8f 90       	pop	r8
   11c9a:	7f 90       	pop	r7
   11c9c:	6f 90       	pop	r6
   11c9e:	5f 90       	pop	r5
   11ca0:	4f 90       	pop	r4
   11ca2:	3f 90       	pop	r3
   11ca4:	2f 90       	pop	r2
   11ca6:	08 95       	ret

00011ca8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>:
   11ca8:	cf 93       	push	r28
   11caa:	df 93       	push	r29
   11cac:	fc 01       	movw	r30, r24
   11cae:	82 81       	ldd	r24, Z+2	; 0x02
   11cb0:	87 ff       	sbrs	r24, 7
   11cb2:	32 c0       	rjmp	.+100    	; 0x11d18 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x70>
   11cb4:	40 e0       	ldi	r20, 0x00	; 0
   11cb6:	50 e0       	ldi	r21, 0x00	; 0
   11cb8:	20 e0       	ldi	r18, 0x00	; 0
   11cba:	30 e0       	ldi	r19, 0x00	; 0
   11cbc:	70 e2       	ldi	r23, 0x20	; 32
   11cbe:	92 81       	ldd	r25, Z+2	; 0x02
   11cc0:	89 2f       	mov	r24, r25
   11cc2:	8f 70       	andi	r24, 0x0F	; 15
   11cc4:	92 95       	swap	r25
   11cc6:	97 70       	andi	r25, 0x07	; 7
   11cc8:	89 9f       	mul	r24, r25
   11cca:	c0 01       	movw	r24, r0
   11ccc:	11 24       	eor	r1, r1
   11cce:	48 17       	cp	r20, r24
   11cd0:	59 07       	cpc	r21, r25
   11cd2:	24 f5       	brge	.+72     	; 0x11d1c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x74>
   11cd4:	a0 81       	ld	r26, Z
   11cd6:	b1 81       	ldd	r27, Z+1	; 0x01
   11cd8:	12 96       	adiw	r26, 0x02	; 2
   11cda:	cd 91       	ld	r28, X+
   11cdc:	dc 91       	ld	r29, X
   11cde:	13 97       	sbiw	r26, 0x03	; 3
   11ce0:	8d 91       	ld	r24, X+
   11ce2:	9c 91       	ld	r25, X
   11ce4:	11 97       	sbiw	r26, 0x01	; 1
   11ce6:	c8 17       	cp	r28, r24
   11ce8:	d9 07       	cpc	r29, r25
   11cea:	78 f4       	brcc	.+30     	; 0x11d0a <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x62>
   11cec:	ce 01       	movw	r24, r28
   11cee:	01 96       	adiw	r24, 0x01	; 1
   11cf0:	13 96       	adiw	r26, 0x03	; 3
   11cf2:	9c 93       	st	X, r25
   11cf4:	8e 93       	st	-X, r24
   11cf6:	12 97       	sbiw	r26, 0x02	; 2
   11cf8:	78 83       	st	Y, r23
   11cfa:	12 96       	adiw	r26, 0x02	; 2
   11cfc:	0d 90       	ld	r0, X+
   11cfe:	bc 91       	ld	r27, X
   11d00:	a0 2d       	mov	r26, r0
   11d02:	1c 92       	st	X, r1
   11d04:	81 e0       	ldi	r24, 0x01	; 1
   11d06:	90 e0       	ldi	r25, 0x00	; 0
   11d08:	02 c0       	rjmp	.+4      	; 0x11d0e <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x66>
   11d0a:	80 e0       	ldi	r24, 0x00	; 0
   11d0c:	90 e0       	ldi	r25, 0x00	; 0
   11d0e:	28 0f       	add	r18, r24
   11d10:	39 1f       	adc	r19, r25
   11d12:	4f 5f       	subi	r20, 0xFF	; 255
   11d14:	5f 4f       	sbci	r21, 0xFF	; 255
   11d16:	d3 cf       	rjmp	.-90     	; 0x11cbe <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x16>
   11d18:	20 e0       	ldi	r18, 0x00	; 0
   11d1a:	30 e0       	ldi	r19, 0x00	; 0
   11d1c:	a0 81       	ld	r26, Z
   11d1e:	b1 81       	ldd	r27, Z+1	; 0x01
   11d20:	12 96       	adiw	r26, 0x02	; 2
   11d22:	cd 91       	ld	r28, X+
   11d24:	dc 91       	ld	r29, X
   11d26:	13 97       	sbiw	r26, 0x03	; 3
   11d28:	8d 91       	ld	r24, X+
   11d2a:	9c 91       	ld	r25, X
   11d2c:	11 97       	sbiw	r26, 0x01	; 1
   11d2e:	c8 17       	cp	r28, r24
   11d30:	d9 07       	cpc	r29, r25
   11d32:	78 f4       	brcc	.+30     	; 0x11d52 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xaa>
   11d34:	ce 01       	movw	r24, r28
   11d36:	01 96       	adiw	r24, 0x01	; 1
   11d38:	13 96       	adiw	r26, 0x03	; 3
   11d3a:	9c 93       	st	X, r25
   11d3c:	8e 93       	st	-X, r24
   11d3e:	12 97       	sbiw	r26, 0x02	; 2
   11d40:	68 83       	st	Y, r22
   11d42:	12 96       	adiw	r26, 0x02	; 2
   11d44:	0d 90       	ld	r0, X+
   11d46:	bc 91       	ld	r27, X
   11d48:	a0 2d       	mov	r26, r0
   11d4a:	1c 92       	st	X, r1
   11d4c:	81 e0       	ldi	r24, 0x01	; 1
   11d4e:	90 e0       	ldi	r25, 0x00	; 0
   11d50:	02 c0       	rjmp	.+4      	; 0x11d56 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xae>
   11d52:	80 e0       	ldi	r24, 0x00	; 0
   11d54:	90 e0       	ldi	r25, 0x00	; 0
   11d56:	51 e0       	ldi	r21, 0x01	; 1
   11d58:	6a 30       	cpi	r22, 0x0A	; 10
   11d5a:	09 f0       	breq	.+2      	; 0x11d5e <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xb6>
   11d5c:	50 e0       	ldi	r21, 0x00	; 0
   11d5e:	42 81       	ldd	r20, Z+2	; 0x02
   11d60:	50 fb       	bst	r21, 0
   11d62:	47 f9       	bld	r20, 7
   11d64:	42 83       	std	Z+2, r20	; 0x02
   11d66:	82 0f       	add	r24, r18
   11d68:	93 1f       	adc	r25, r19
   11d6a:	df 91       	pop	r29
   11d6c:	cf 91       	pop	r28
   11d6e:	08 95       	ret

00011d70 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>:
   11d70:	ef 92       	push	r14
   11d72:	ff 92       	push	r15
   11d74:	0f 93       	push	r16
   11d76:	1f 93       	push	r17
   11d78:	cf 93       	push	r28
   11d7a:	df 93       	push	r29
   11d7c:	7c 01       	movw	r14, r24
   11d7e:	8b 01       	movw	r16, r22
   11d80:	c0 e0       	ldi	r28, 0x00	; 0
   11d82:	d0 e0       	ldi	r29, 0x00	; 0
   11d84:	f8 01       	movw	r30, r16
   11d86:	61 91       	ld	r22, Z+
   11d88:	8f 01       	movw	r16, r30
   11d8a:	66 23       	and	r22, r22
   11d8c:	29 f0       	breq	.+10     	; 0x11d98 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x28>
   11d8e:	c7 01       	movw	r24, r14
   11d90:	8b df       	rcall	.-234    	; 0x11ca8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11d92:	c8 0f       	add	r28, r24
   11d94:	d9 1f       	adc	r29, r25
   11d96:	f6 cf       	rjmp	.-20     	; 0x11d84 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x14>
   11d98:	ce 01       	movw	r24, r28
   11d9a:	df 91       	pop	r29
   11d9c:	cf 91       	pop	r28
   11d9e:	1f 91       	pop	r17
   11da0:	0f 91       	pop	r16
   11da2:	ff 90       	pop	r15
   11da4:	ef 90       	pop	r14
   11da6:	08 95       	ret

00011da8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>:
   11da8:	fc 01       	movw	r30, r24
   11daa:	90 81       	ld	r25, Z
   11dac:	9f 7d       	andi	r25, 0xDF	; 223
   11dae:	9b 35       	cpi	r25, 0x5B	; 91
   11db0:	99 f4       	brne	.+38     	; 0x11dd8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x30>
   11db2:	01 80       	ldd	r0, Z+1	; 0x01
   11db4:	f2 81       	ldd	r31, Z+2	; 0x02
   11db6:	e0 2d       	mov	r30, r0
   11db8:	32 81       	ldd	r19, Z+2	; 0x02
   11dba:	93 2f       	mov	r25, r19
   11dbc:	9f 70       	andi	r25, 0x0F	; 15
   11dbe:	9f 30       	cpi	r25, 0x0F	; 15
   11dc0:	39 f0       	breq	.+14     	; 0x11dd0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x28>
   11dc2:	9f 5f       	subi	r25, 0xFF	; 255
   11dc4:	29 2f       	mov	r18, r25
   11dc6:	2f 70       	andi	r18, 0x0F	; 15
   11dc8:	93 2f       	mov	r25, r19
   11dca:	90 7f       	andi	r25, 0xF0	; 240
   11dcc:	92 2b       	or	r25, r18
   11dce:	92 83       	std	Z+2, r25	; 0x02
   11dd0:	65 ef       	ldi	r22, 0xF5	; 245
   11dd2:	76 e0       	ldi	r23, 0x06	; 6
   11dd4:	cf 01       	movw	r24, r30
   11dd6:	cc cf       	rjmp	.-104    	; 0x11d70 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11dd8:	80 e0       	ldi	r24, 0x00	; 0
   11dda:	90 e0       	ldi	r25, 0x00	; 0
   11ddc:	08 95       	ret

00011dde <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>:
   11dde:	ff 92       	push	r15
   11de0:	0f 93       	push	r16
   11de2:	1f 93       	push	r17
   11de4:	cf 93       	push	r28
   11de6:	df 93       	push	r29
   11de8:	8c 01       	movw	r16, r24
   11dea:	f6 2e       	mov	r15, r22
   11dec:	8b e5       	ldi	r24, 0x5B	; 91
   11dee:	68 17       	cp	r22, r24
   11df0:	f9 f0       	breq	.+62     	; 0x11e30 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   11df2:	86 17       	cp	r24, r22
   11df4:	98 f0       	brcs	.+38     	; 0x11e1c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x3e>
   11df6:	ac e2       	ldi	r26, 0x2C	; 44
   11df8:	6a 17       	cp	r22, r26
   11dfa:	09 f4       	brne	.+2      	; 0x11dfe <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x20>
   11dfc:	43 c0       	rjmp	.+134    	; 0x11e84 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xa6>
   11dfe:	ba e3       	ldi	r27, 0x3A	; 58
   11e00:	6b 17       	cp	r22, r27
   11e02:	c1 f1       	breq	.+112    	; 0x11e74 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x96>
   11e04:	e2 e2       	ldi	r30, 0x22	; 34
   11e06:	6e 13       	cpse	r22, r30
   11e08:	4c c0       	rjmp	.+152    	; 0x11ea2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   11e0a:	81 e0       	ldi	r24, 0x01	; 1
   11e0c:	d8 01       	movw	r26, r16
   11e0e:	13 96       	adiw	r26, 0x03	; 3
   11e10:	8c 93       	st	X, r24
   11e12:	c8 01       	movw	r24, r16
   11e14:	c9 df       	rcall	.-110    	; 0x11da8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11e16:	ec 01       	movw	r28, r24
   11e18:	62 e2       	ldi	r22, 0x22	; 34
   11e1a:	3f c0       	rjmp	.+126    	; 0x11e9a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   11e1c:	fb e7       	ldi	r31, 0x7B	; 123
   11e1e:	6f 17       	cp	r22, r31
   11e20:	39 f0       	breq	.+14     	; 0x11e30 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   11e22:	8d e7       	ldi	r24, 0x7D	; 125
   11e24:	68 17       	cp	r22, r24
   11e26:	39 f0       	breq	.+14     	; 0x11e36 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   11e28:	ad e5       	ldi	r26, 0x5D	; 93
   11e2a:	6a 13       	cpse	r22, r26
   11e2c:	3a c0       	rjmp	.+116    	; 0x11ea2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   11e2e:	03 c0       	rjmp	.+6      	; 0x11e36 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   11e30:	c8 01       	movw	r24, r16
   11e32:	ba df       	rcall	.-140    	; 0x11da8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11e34:	1c c0       	rjmp	.+56     	; 0x11e6e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x90>
   11e36:	d8 01       	movw	r26, r16
   11e38:	8c 91       	ld	r24, X
   11e3a:	8f 7d       	andi	r24, 0xDF	; 223
   11e3c:	8b 35       	cpi	r24, 0x5B	; 91
   11e3e:	19 f4       	brne	.+6      	; 0x11e46 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x68>
   11e40:	c0 e0       	ldi	r28, 0x00	; 0
   11e42:	d0 e0       	ldi	r29, 0x00	; 0
   11e44:	15 c0       	rjmp	.+42     	; 0x11e70 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x92>
   11e46:	d8 01       	movw	r26, r16
   11e48:	11 96       	adiw	r26, 0x01	; 1
   11e4a:	ed 91       	ld	r30, X+
   11e4c:	fc 91       	ld	r31, X
   11e4e:	12 97       	sbiw	r26, 0x02	; 2
   11e50:	32 81       	ldd	r19, Z+2	; 0x02
   11e52:	93 2f       	mov	r25, r19
   11e54:	9f 70       	andi	r25, 0x0F	; 15
   11e56:	39 f0       	breq	.+14     	; 0x11e66 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x88>
   11e58:	91 5f       	subi	r25, 0xF1	; 241
   11e5a:	29 2f       	mov	r18, r25
   11e5c:	2f 70       	andi	r18, 0x0F	; 15
   11e5e:	93 2f       	mov	r25, r19
   11e60:	90 7f       	andi	r25, 0xF0	; 240
   11e62:	92 2b       	or	r25, r18
   11e64:	92 83       	std	Z+2, r25	; 0x02
   11e66:	65 ef       	ldi	r22, 0xF5	; 245
   11e68:	76 e0       	ldi	r23, 0x06	; 6
   11e6a:	cf 01       	movw	r24, r30
   11e6c:	81 df       	rcall	.-254    	; 0x11d70 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11e6e:	ec 01       	movw	r28, r24
   11e70:	6f 2d       	mov	r22, r15
   11e72:	13 c0       	rjmp	.+38     	; 0x11e9a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   11e74:	61 ef       	ldi	r22, 0xF1	; 241
   11e76:	76 e0       	ldi	r23, 0x06	; 6
   11e78:	d8 01       	movw	r26, r16
   11e7a:	11 96       	adiw	r26, 0x01	; 1
   11e7c:	8d 91       	ld	r24, X+
   11e7e:	9c 91       	ld	r25, X
   11e80:	12 97       	sbiw	r26, 0x02	; 2
   11e82:	05 c0       	rjmp	.+10     	; 0x11e8e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xb0>
   11e84:	64 ef       	ldi	r22, 0xF4	; 244
   11e86:	76 e0       	ldi	r23, 0x06	; 6
   11e88:	f8 01       	movw	r30, r16
   11e8a:	81 81       	ldd	r24, Z+1	; 0x01
   11e8c:	92 81       	ldd	r25, Z+2	; 0x02
   11e8e:	df 91       	pop	r29
   11e90:	cf 91       	pop	r28
   11e92:	1f 91       	pop	r17
   11e94:	0f 91       	pop	r16
   11e96:	ff 90       	pop	r15
   11e98:	6b cf       	rjmp	.-298    	; 0x11d70 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11e9a:	f8 01       	movw	r30, r16
   11e9c:	81 81       	ldd	r24, Z+1	; 0x01
   11e9e:	92 81       	ldd	r25, Z+2	; 0x02
   11ea0:	09 c0       	rjmp	.+18     	; 0x11eb4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xd6>
   11ea2:	c8 01       	movw	r24, r16
   11ea4:	81 df       	rcall	.-254    	; 0x11da8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11ea6:	ec 01       	movw	r28, r24
   11ea8:	6f 2d       	mov	r22, r15
   11eaa:	d8 01       	movw	r26, r16
   11eac:	11 96       	adiw	r26, 0x01	; 1
   11eae:	8d 91       	ld	r24, X+
   11eb0:	9c 91       	ld	r25, X
   11eb2:	12 97       	sbiw	r26, 0x02	; 2
   11eb4:	f9 de       	rcall	.-526    	; 0x11ca8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11eb6:	8c 0f       	add	r24, r28
   11eb8:	9d 1f       	adc	r25, r29
   11eba:	df 91       	pop	r29
   11ebc:	cf 91       	pop	r28
   11ebe:	1f 91       	pop	r17
   11ec0:	0f 91       	pop	r16
   11ec2:	ff 90       	pop	r15
   11ec4:	08 95       	ret

00011ec6 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>:
   11ec6:	1f 93       	push	r17
   11ec8:	cf 93       	push	r28
   11eca:	df 93       	push	r29
   11ecc:	ec 01       	movw	r28, r24
   11ece:	16 2f       	mov	r17, r22
   11ed0:	8b 81       	ldd	r24, Y+3	; 0x03
   11ed2:	88 23       	and	r24, r24
   11ed4:	51 f0       	breq	.+20     	; 0x11eea <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x24>
   11ed6:	62 32       	cpi	r22, 0x22	; 34
   11ed8:	19 f4       	brne	.+6      	; 0x11ee0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>
   11eda:	88 81       	ld	r24, Y
   11edc:	8c 35       	cpi	r24, 0x5C	; 92
   11ede:	61 f4       	brne	.+24     	; 0x11ef8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x32>
   11ee0:	61 2f       	mov	r22, r17
   11ee2:	89 81       	ldd	r24, Y+1	; 0x01
   11ee4:	9a 81       	ldd	r25, Y+2	; 0x02
   11ee6:	e0 de       	rcall	.-576    	; 0x11ca8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11ee8:	02 c0       	rjmp	.+4      	; 0x11eee <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x28>
   11eea:	ce 01       	movw	r24, r28
   11eec:	78 df       	rcall	.-272    	; 0x11dde <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>
   11eee:	18 83       	st	Y, r17
   11ef0:	df 91       	pop	r29
   11ef2:	cf 91       	pop	r28
   11ef4:	1f 91       	pop	r17
   11ef6:	08 95       	ret
   11ef8:	1b 82       	std	Y+3, r1	; 0x03
   11efa:	f2 cf       	rjmp	.-28     	; 0x11ee0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>

00011efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>:
   11efc:	cf 93       	push	r28
   11efe:	df 93       	push	r29
   11f00:	ec 01       	movw	r28, r24
   11f02:	88 81       	ld	r24, Y
   11f04:	99 81       	ldd	r25, Y+1	; 0x01
   11f06:	df df       	rcall	.-66     	; 0x11ec6 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   11f08:	2a 81       	ldd	r18, Y+2	; 0x02
   11f0a:	3b 81       	ldd	r19, Y+3	; 0x03
   11f0c:	82 0f       	add	r24, r18
   11f0e:	93 1f       	adc	r25, r19
   11f10:	9b 83       	std	Y+3, r25	; 0x03
   11f12:	8a 83       	std	Y+2, r24	; 0x02
   11f14:	df 91       	pop	r29
   11f16:	cf 91       	pop	r28
   11f18:	08 95       	ret

00011f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>:
   11f1a:	cf 92       	push	r12
   11f1c:	df 92       	push	r13
   11f1e:	ef 92       	push	r14
   11f20:	ff 92       	push	r15
   11f22:	0f 93       	push	r16
   11f24:	1f 93       	push	r17
   11f26:	cf 93       	push	r28
   11f28:	df 93       	push	r29
   11f2a:	7c 01       	movw	r14, r24
   11f2c:	fc 01       	movw	r30, r24
   11f2e:	c0 80       	ld	r12, Z
   11f30:	d1 80       	ldd	r13, Z+1	; 0x01
   11f32:	8b 01       	movw	r16, r22
   11f34:	c0 e0       	ldi	r28, 0x00	; 0
   11f36:	d0 e0       	ldi	r29, 0x00	; 0
   11f38:	f8 01       	movw	r30, r16
   11f3a:	61 91       	ld	r22, Z+
   11f3c:	8f 01       	movw	r16, r30
   11f3e:	66 23       	and	r22, r22
   11f40:	29 f0       	breq	.+10     	; 0x11f4c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x32>
   11f42:	c6 01       	movw	r24, r12
   11f44:	c0 df       	rcall	.-128    	; 0x11ec6 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   11f46:	c8 0f       	add	r28, r24
   11f48:	d9 1f       	adc	r29, r25
   11f4a:	f6 cf       	rjmp	.-20     	; 0x11f38 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x1e>
   11f4c:	f7 01       	movw	r30, r14
   11f4e:	82 81       	ldd	r24, Z+2	; 0x02
   11f50:	93 81       	ldd	r25, Z+3	; 0x03
   11f52:	c8 0f       	add	r28, r24
   11f54:	d9 1f       	adc	r29, r25
   11f56:	d3 83       	std	Z+3, r29	; 0x03
   11f58:	c2 83       	std	Z+2, r28	; 0x02
   11f5a:	df 91       	pop	r29
   11f5c:	cf 91       	pop	r28
   11f5e:	1f 91       	pop	r17
   11f60:	0f 91       	pop	r16
   11f62:	ff 90       	pop	r15
   11f64:	ef 90       	pop	r14
   11f66:	df 90       	pop	r13
   11f68:	cf 90       	pop	r12
   11f6a:	08 95       	ret

00011f6c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>:
   11f6c:	ff 92       	push	r15
   11f6e:	0f 93       	push	r16
   11f70:	1f 93       	push	r17
   11f72:	cf 93       	push	r28
   11f74:	df 93       	push	r29
   11f76:	61 15       	cp	r22, r1
   11f78:	71 05       	cpc	r23, r1
   11f7a:	41 f4       	brne	.+16     	; 0x11f8c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x20>
   11f7c:	6c ee       	ldi	r22, 0xEC	; 236
   11f7e:	76 e0       	ldi	r23, 0x06	; 6
   11f80:	df 91       	pop	r29
   11f82:	cf 91       	pop	r28
   11f84:	1f 91       	pop	r17
   11f86:	0f 91       	pop	r16
   11f88:	ff 90       	pop	r15
   11f8a:	c7 cf       	rjmp	.-114    	; 0x11f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   11f8c:	8b 01       	movw	r16, r22
   11f8e:	ec 01       	movw	r28, r24
   11f90:	62 e2       	ldi	r22, 0x22	; 34
   11f92:	ce 01       	movw	r24, r28
   11f94:	b3 df       	rcall	.-154    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11f96:	f8 01       	movw	r30, r16
   11f98:	61 91       	ld	r22, Z+
   11f9a:	8f 01       	movw	r16, r30
   11f9c:	66 23       	and	r22, r22
   11f9e:	51 f0       	breq	.+20     	; 0x11fb4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x48>
   11fa0:	ed ed       	ldi	r30, 0xDD	; 221
   11fa2:	f6 e0       	ldi	r31, 0x06	; 6
   11fa4:	f0 80       	ld	r15, Z
   11fa6:	ff 20       	and	r15, r15
   11fa8:	a1 f3       	breq	.-24     	; 0x11f92 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>
   11faa:	81 81       	ldd	r24, Z+1	; 0x01
   11fac:	68 17       	cp	r22, r24
   11fae:	51 f0       	breq	.+20     	; 0x11fc4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x58>
   11fb0:	32 96       	adiw	r30, 0x02	; 2
   11fb2:	f8 cf       	rjmp	.-16     	; 0x11fa4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x38>
   11fb4:	62 e2       	ldi	r22, 0x22	; 34
   11fb6:	ce 01       	movw	r24, r28
   11fb8:	df 91       	pop	r29
   11fba:	cf 91       	pop	r28
   11fbc:	1f 91       	pop	r17
   11fbe:	0f 91       	pop	r16
   11fc0:	ff 90       	pop	r15
   11fc2:	9c cf       	rjmp	.-200    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11fc4:	6c e5       	ldi	r22, 0x5C	; 92
   11fc6:	ce 01       	movw	r24, r28
   11fc8:	99 df       	rcall	.-206    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11fca:	6f 2d       	mov	r22, r15
   11fcc:	e2 cf       	rjmp	.-60     	; 0x11f92 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>

00011fce <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>:
   11fce:	0f 93       	push	r16
   11fd0:	1f 93       	push	r17
   11fd2:	cf 93       	push	r28
   11fd4:	df 93       	push	r29
   11fd6:	cd b7       	in	r28, 0x3d	; 61
   11fd8:	de b7       	in	r29, 0x3e	; 62
   11fda:	66 97       	sbiw	r28, 0x16	; 22
   11fdc:	0f b6       	in	r0, 0x3f	; 63
   11fde:	f8 94       	cli
   11fe0:	de bf       	out	0x3e, r29	; 62
   11fe2:	0f be       	out	0x3f, r0	; 63
   11fe4:	cd bf       	out	0x3d, r28	; 61
   11fe6:	9c 01       	movw	r18, r24
   11fe8:	cb 01       	movw	r24, r22
   11fea:	1e 8a       	std	Y+22, r1	; 0x16
   11fec:	fe 01       	movw	r30, r28
   11fee:	76 96       	adiw	r30, 0x16	; 22
   11ff0:	0a e0       	ldi	r16, 0x0A	; 10
   11ff2:	10 e0       	ldi	r17, 0x00	; 0
   11ff4:	b8 01       	movw	r22, r16
   11ff6:	0e 94 cb e7 	call	0x1cf96	; 0x1cf96 <__divmodhi4>
   11ffa:	80 5d       	subi	r24, 0xD0	; 208
   11ffc:	82 93       	st	-Z, r24
   11ffe:	cb 01       	movw	r24, r22
   12000:	00 97       	sbiw	r24, 0x00	; 0
   12002:	c1 f7       	brne	.-16     	; 0x11ff4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_+0x26>
   12004:	bf 01       	movw	r22, r30
   12006:	c9 01       	movw	r24, r18
   12008:	88 df       	rcall	.-240    	; 0x11f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1200a:	66 96       	adiw	r28, 0x16	; 22
   1200c:	0f b6       	in	r0, 0x3f	; 63
   1200e:	f8 94       	cli
   12010:	de bf       	out	0x3e, r29	; 62
   12012:	0f be       	out	0x3f, r0	; 63
   12014:	cd bf       	out	0x3d, r28	; 61
   12016:	df 91       	pop	r29
   12018:	cf 91       	pop	r28
   1201a:	1f 91       	pop	r17
   1201c:	0f 91       	pop	r16
   1201e:	08 95       	ret

00012020 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>:
   12020:	8f 92       	push	r8
   12022:	9f 92       	push	r9
   12024:	af 92       	push	r10
   12026:	bf 92       	push	r11
   12028:	ef 92       	push	r14
   1202a:	ff 92       	push	r15
   1202c:	0f 93       	push	r16
   1202e:	1f 93       	push	r17
   12030:	cf 93       	push	r28
   12032:	df 93       	push	r29
   12034:	cd b7       	in	r28, 0x3d	; 61
   12036:	de b7       	in	r29, 0x3e	; 62
   12038:	66 97       	sbiw	r28, 0x16	; 22
   1203a:	0f b6       	in	r0, 0x3f	; 63
   1203c:	f8 94       	cli
   1203e:	de bf       	out	0x3e, r29	; 62
   12040:	0f be       	out	0x3f, r0	; 63
   12042:	cd bf       	out	0x3d, r28	; 61
   12044:	7c 01       	movw	r14, r24
   12046:	1e 8a       	std	Y+22, r1	; 0x16
   12048:	8e 01       	movw	r16, r28
   1204a:	0a 5e       	subi	r16, 0xEA	; 234
   1204c:	1f 4f       	sbci	r17, 0xFF	; 255
   1204e:	8a e0       	ldi	r24, 0x0A	; 10
   12050:	88 2e       	mov	r8, r24
   12052:	91 2c       	mov	r9, r1
   12054:	a1 2c       	mov	r10, r1
   12056:	b1 2c       	mov	r11, r1
   12058:	cb 01       	movw	r24, r22
   1205a:	ba 01       	movw	r22, r20
   1205c:	a5 01       	movw	r20, r10
   1205e:	94 01       	movw	r18, r8
   12060:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   12064:	94 2f       	mov	r25, r20
   12066:	85 2f       	mov	r24, r21
   12068:	60 5d       	subi	r22, 0xD0	; 208
   1206a:	f8 01       	movw	r30, r16
   1206c:	62 93       	st	-Z, r22
   1206e:	8f 01       	movw	r16, r30
   12070:	a9 01       	movw	r20, r18
   12072:	69 2f       	mov	r22, r25
   12074:	78 2f       	mov	r23, r24
   12076:	41 15       	cp	r20, r1
   12078:	51 05       	cpc	r21, r1
   1207a:	61 05       	cpc	r22, r1
   1207c:	71 05       	cpc	r23, r1
   1207e:	61 f7       	brne	.-40     	; 0x12058 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_+0x38>
   12080:	bf 01       	movw	r22, r30
   12082:	c7 01       	movw	r24, r14
   12084:	4a df       	rcall	.-364    	; 0x11f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12086:	66 96       	adiw	r28, 0x16	; 22
   12088:	0f b6       	in	r0, 0x3f	; 63
   1208a:	f8 94       	cli
   1208c:	de bf       	out	0x3e, r29	; 62
   1208e:	0f be       	out	0x3f, r0	; 63
   12090:	cd bf       	out	0x3d, r28	; 61
   12092:	df 91       	pop	r29
   12094:	cf 91       	pop	r28
   12096:	1f 91       	pop	r17
   12098:	0f 91       	pop	r16
   1209a:	ff 90       	pop	r15
   1209c:	ef 90       	pop	r14
   1209e:	bf 90       	pop	r11
   120a0:	af 90       	pop	r10
   120a2:	9f 90       	pop	r9
   120a4:	8f 90       	pop	r8
   120a6:	08 95       	ret

000120a8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>:
   120a8:	4f 92       	push	r4
   120aa:	5f 92       	push	r5
   120ac:	6f 92       	push	r6
   120ae:	7f 92       	push	r7
   120b0:	af 92       	push	r10
   120b2:	bf 92       	push	r11
   120b4:	cf 92       	push	r12
   120b6:	df 92       	push	r13
   120b8:	ef 92       	push	r14
   120ba:	ff 92       	push	r15
   120bc:	0f 93       	push	r16
   120be:	1f 93       	push	r17
   120c0:	cf 93       	push	r28
   120c2:	df 93       	push	r29
   120c4:	cd b7       	in	r28, 0x3d	; 61
   120c6:	de b7       	in	r29, 0x3e	; 62
   120c8:	6b 97       	sbiw	r28, 0x1b	; 27
   120ca:	0f b6       	in	r0, 0x3f	; 63
   120cc:	f8 94       	cli
   120ce:	de bf       	out	0x3e, r29	; 62
   120d0:	0f be       	out	0x3f, r0	; 63
   120d2:	cd bf       	out	0x3d, r28	; 61
   120d4:	8c 01       	movw	r16, r24
   120d6:	6a 01       	movw	r12, r20
   120d8:	7b 01       	movw	r14, r22
   120da:	9a 01       	movw	r18, r20
   120dc:	ab 01       	movw	r20, r22
   120de:	c7 01       	movw	r24, r14
   120e0:	b6 01       	movw	r22, r12
   120e2:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
   120e6:	88 23       	and	r24, r24
   120e8:	19 f0       	breq	.+6      	; 0x120f0 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x48>
   120ea:	68 ef       	ldi	r22, 0xF8	; 248
   120ec:	76 e0       	ldi	r23, 0x06	; 6
   120ee:	29 c0       	rjmp	.+82     	; 0x12142 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x9a>
   120f0:	20 e0       	ldi	r18, 0x00	; 0
   120f2:	30 e0       	ldi	r19, 0x00	; 0
   120f4:	a9 01       	movw	r20, r18
   120f6:	c7 01       	movw	r24, r14
   120f8:	b6 01       	movw	r22, r12
   120fa:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
   120fe:	87 ff       	sbrs	r24, 7
   12100:	07 c0       	rjmp	.+14     	; 0x12110 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x68>
   12102:	6d e2       	ldi	r22, 0x2D	; 45
   12104:	c8 01       	movw	r24, r16
   12106:	fa de       	rcall	.-524    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12108:	f7 fa       	bst	r15, 7
   1210a:	f0 94       	com	r15
   1210c:	f7 f8       	bld	r15, 7
   1210e:	f0 94       	com	r15
   12110:	20 e0       	ldi	r18, 0x00	; 0
   12112:	30 e0       	ldi	r19, 0x00	; 0
   12114:	a9 01       	movw	r20, r18
   12116:	c7 01       	movw	r24, r14
   12118:	b6 01       	movw	r22, r12
   1211a:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
   1211e:	88 23       	and	r24, r24
   12120:	99 f0       	breq	.+38     	; 0x12148 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   12122:	a7 01       	movw	r20, r14
   12124:	96 01       	movw	r18, r12
   12126:	c7 01       	movw	r24, r14
   12128:	b6 01       	movw	r22, r12
   1212a:	0e 94 4e cd 	call	0x19a9c	; 0x19a9c <__addsf3>
   1212e:	9b 01       	movw	r18, r22
   12130:	ac 01       	movw	r20, r24
   12132:	c7 01       	movw	r24, r14
   12134:	b6 01       	movw	r22, r12
   12136:	0e 94 b2 cd 	call	0x19b64	; 0x19b64 <__cmpsf2>
   1213a:	81 11       	cpse	r24, r1
   1213c:	05 c0       	rjmp	.+10     	; 0x12148 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   1213e:	6f ef       	ldi	r22, 0xFF	; 255
   12140:	76 e0       	ldi	r23, 0x06	; 6
   12142:	c8 01       	movw	r24, r16
   12144:	ea de       	rcall	.-556    	; 0x11f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12146:	51 c0       	rjmp	.+162    	; 0x121ea <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   12148:	b7 01       	movw	r22, r14
   1214a:	a6 01       	movw	r20, r12
   1214c:	ce 01       	movw	r24, r28
   1214e:	41 96       	adiw	r24, 0x11	; 17
   12150:	2d dc       	rcall	.-1958   	; 0x119ac <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>
   12152:	49 89       	ldd	r20, Y+17	; 0x11
   12154:	5a 89       	ldd	r21, Y+18	; 0x12
   12156:	6b 89       	ldd	r22, Y+19	; 0x13
   12158:	7c 89       	ldd	r23, Y+20	; 0x14
   1215a:	c8 01       	movw	r24, r16
   1215c:	61 df       	rcall	.-318    	; 0x12020 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   1215e:	bb 8c       	ldd	r11, Y+27	; 0x1b
   12160:	bb 20       	and	r11, r11
   12162:	41 f1       	breq	.+80     	; 0x121b4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x10c>
   12164:	6d 89       	ldd	r22, Y+21	; 0x15
   12166:	7e 89       	ldd	r23, Y+22	; 0x16
   12168:	8f 89       	ldd	r24, Y+23	; 0x17
   1216a:	98 8d       	ldd	r25, Y+24	; 0x18
   1216c:	18 8a       	std	Y+16, r1	; 0x10
   1216e:	ab 2c       	mov	r10, r11
   12170:	6e 01       	movw	r12, r28
   12172:	20 e1       	ldi	r18, 0x10	; 16
   12174:	c2 0e       	add	r12, r18
   12176:	d1 1c       	adc	r13, r1
   12178:	76 01       	movw	r14, r12
   1217a:	2a e0       	ldi	r18, 0x0A	; 10
   1217c:	42 2e       	mov	r4, r18
   1217e:	51 2c       	mov	r5, r1
   12180:	61 2c       	mov	r6, r1
   12182:	71 2c       	mov	r7, r1
   12184:	aa 94       	dec	r10
   12186:	ef ef       	ldi	r30, 0xFF	; 255
   12188:	ae 16       	cp	r10, r30
   1218a:	59 f0       	breq	.+22     	; 0x121a2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xfa>
   1218c:	a3 01       	movw	r20, r6
   1218e:	92 01       	movw	r18, r4
   12190:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   12194:	60 5d       	subi	r22, 0xD0	; 208
   12196:	f6 01       	movw	r30, r12
   12198:	62 93       	st	-Z, r22
   1219a:	6f 01       	movw	r12, r30
   1219c:	b9 01       	movw	r22, r18
   1219e:	ca 01       	movw	r24, r20
   121a0:	f1 cf       	rjmp	.-30     	; 0x12184 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xdc>
   121a2:	b7 01       	movw	r22, r14
   121a4:	6b 19       	sub	r22, r11
   121a6:	71 09       	sbc	r23, r1
   121a8:	8e e2       	ldi	r24, 0x2E	; 46
   121aa:	fb 01       	movw	r30, r22
   121ac:	82 93       	st	-Z, r24
   121ae:	bf 01       	movw	r22, r30
   121b0:	c8 01       	movw	r24, r16
   121b2:	b3 de       	rcall	.-666    	; 0x11f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   121b4:	89 8d       	ldd	r24, Y+25	; 0x19
   121b6:	9a 8d       	ldd	r25, Y+26	; 0x1a
   121b8:	97 ff       	sbrs	r25, 7
   121ba:	0b c0       	rjmp	.+22     	; 0x121d2 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x12a>
   121bc:	6c ef       	ldi	r22, 0xFC	; 252
   121be:	76 e0       	ldi	r23, 0x06	; 6
   121c0:	c8 01       	movw	r24, r16
   121c2:	ab de       	rcall	.-682    	; 0x11f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   121c4:	69 8d       	ldd	r22, Y+25	; 0x19
   121c6:	7a 8d       	ldd	r23, Y+26	; 0x1a
   121c8:	71 95       	neg	r23
   121ca:	61 95       	neg	r22
   121cc:	71 09       	sbc	r23, r1
   121ce:	c8 01       	movw	r24, r16
   121d0:	fe de       	rcall	.-516    	; 0x11fce <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   121d2:	89 8d       	ldd	r24, Y+25	; 0x19
   121d4:	9a 8d       	ldd	r25, Y+26	; 0x1a
   121d6:	18 16       	cp	r1, r24
   121d8:	19 06       	cpc	r1, r25
   121da:	3c f4       	brge	.+14     	; 0x121ea <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   121dc:	65 e6       	ldi	r22, 0x65	; 101
   121de:	c8 01       	movw	r24, r16
   121e0:	8d de       	rcall	.-742    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   121e2:	69 8d       	ldd	r22, Y+25	; 0x19
   121e4:	7a 8d       	ldd	r23, Y+26	; 0x1a
   121e6:	c8 01       	movw	r24, r16
   121e8:	f2 de       	rcall	.-540    	; 0x11fce <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   121ea:	6b 96       	adiw	r28, 0x1b	; 27
   121ec:	0f b6       	in	r0, 0x3f	; 63
   121ee:	f8 94       	cli
   121f0:	de bf       	out	0x3e, r29	; 62
   121f2:	0f be       	out	0x3f, r0	; 63
   121f4:	cd bf       	out	0x3d, r28	; 61
   121f6:	df 91       	pop	r29
   121f8:	cf 91       	pop	r28
   121fa:	1f 91       	pop	r17
   121fc:	0f 91       	pop	r16
   121fe:	ff 90       	pop	r15
   12200:	ef 90       	pop	r14
   12202:	df 90       	pop	r13
   12204:	cf 90       	pop	r12
   12206:	bf 90       	pop	r11
   12208:	af 90       	pop	r10
   1220a:	7f 90       	pop	r7
   1220c:	6f 90       	pop	r6
   1220e:	5f 90       	pop	r5
   12210:	4f 90       	pop	r4
   12212:	08 95       	ret

00012214 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>:
   12214:	0f 93       	push	r16
   12216:	1f 93       	push	r17
   12218:	cf 93       	push	r28
   1221a:	df 93       	push	r29
   1221c:	eb 01       	movw	r28, r22
   1221e:	dc 01       	movw	r26, r24
   12220:	ec 91       	ld	r30, X
   12222:	4e 2f       	mov	r20, r30
   12224:	50 e0       	ldi	r21, 0x00	; 0
   12226:	fa 01       	movw	r30, r20
   12228:	31 97       	sbiw	r30, 0x01	; 1
   1222a:	e8 30       	cpi	r30, 0x08	; 8
   1222c:	f1 05       	cpc	r31, r1
   1222e:	08 f0       	brcs	.+2      	; 0x12232 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x1e>
   12230:	6e c0       	rjmp	.+220    	; 0x1230e <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xfa>
   12232:	8c 01       	movw	r16, r24
   12234:	88 27       	eor	r24, r24
   12236:	e9 51       	subi	r30, 0x19	; 25
   12238:	ff 4f       	sbci	r31, 0xFF	; 255
   1223a:	8f 4f       	sbci	r24, 0xFF	; 255
   1223c:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
   12240:	fd 01       	movw	r30, r26
   12242:	41 81       	ldd	r20, Z+1	; 0x01
   12244:	52 81       	ldd	r21, Z+2	; 0x02
   12246:	63 81       	ldd	r22, Z+3	; 0x03
   12248:	74 81       	ldd	r23, Z+4	; 0x04
   1224a:	ce 01       	movw	r24, r28
   1224c:	df 91       	pop	r29
   1224e:	cf 91       	pop	r28
   12250:	1f 91       	pop	r17
   12252:	0f 91       	pop	r16
   12254:	29 cf       	rjmp	.-430    	; 0x120a8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>
   12256:	11 96       	adiw	r26, 0x01	; 1
   12258:	0d 91       	ld	r16, X+
   1225a:	1c 91       	ld	r17, X
   1225c:	12 97       	sbiw	r26, 0x02	; 2
   1225e:	6b e5       	ldi	r22, 0x5B	; 91
   12260:	ce 01       	movw	r24, r28
   12262:	4c de       	rcall	.-872    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12264:	f8 01       	movw	r30, r16
   12266:	02 81       	ldd	r16, Z+2	; 0x02
   12268:	13 81       	ldd	r17, Z+3	; 0x03
   1226a:	01 15       	cp	r16, r1
   1226c:	11 05       	cpc	r17, r1
   1226e:	71 f0       	breq	.+28     	; 0x1228c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   12270:	be 01       	movw	r22, r28
   12272:	c8 01       	movw	r24, r16
   12274:	02 96       	adiw	r24, 0x02	; 2
   12276:	ce df       	rcall	.-100    	; 0x12214 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   12278:	d8 01       	movw	r26, r16
   1227a:	0d 91       	ld	r16, X+
   1227c:	1c 91       	ld	r17, X
   1227e:	01 15       	cp	r16, r1
   12280:	11 05       	cpc	r17, r1
   12282:	21 f0       	breq	.+8      	; 0x1228c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   12284:	6c e2       	ldi	r22, 0x2C	; 44
   12286:	ce 01       	movw	r24, r28
   12288:	39 de       	rcall	.-910    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1228a:	ef cf       	rjmp	.-34     	; 0x1226a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x56>
   1228c:	6d e5       	ldi	r22, 0x5D	; 93
   1228e:	ce 01       	movw	r24, r28
   12290:	df 91       	pop	r29
   12292:	cf 91       	pop	r28
   12294:	1f 91       	pop	r17
   12296:	0f 91       	pop	r16
   12298:	31 ce       	rjmp	.-926    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1229a:	fd 01       	movw	r30, r26
   1229c:	81 81       	ldd	r24, Z+1	; 0x01
   1229e:	92 81       	ldd	r25, Z+2	; 0x02
   122a0:	df 91       	pop	r29
   122a2:	cf 91       	pop	r28
   122a4:	1f 91       	pop	r17
   122a6:	0f 91       	pop	r16
   122a8:	37 c0       	rjmp	.+110    	; 0x12318 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   122aa:	11 96       	adiw	r26, 0x01	; 1
   122ac:	6d 91       	ld	r22, X+
   122ae:	7c 91       	ld	r23, X
   122b0:	12 97       	sbiw	r26, 0x02	; 2
   122b2:	ce 01       	movw	r24, r28
   122b4:	df 91       	pop	r29
   122b6:	cf 91       	pop	r28
   122b8:	1f 91       	pop	r17
   122ba:	0f 91       	pop	r16
   122bc:	57 ce       	rjmp	.-850    	; 0x11f6c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   122be:	fd 01       	movw	r30, r26
   122c0:	61 81       	ldd	r22, Z+1	; 0x01
   122c2:	72 81       	ldd	r23, Z+2	; 0x02
   122c4:	1e c0       	rjmp	.+60     	; 0x12302 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   122c6:	6d e2       	ldi	r22, 0x2D	; 45
   122c8:	ce 01       	movw	r24, r28
   122ca:	18 de       	rcall	.-976    	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   122cc:	d8 01       	movw	r26, r16
   122ce:	11 96       	adiw	r26, 0x01	; 1
   122d0:	4d 91       	ld	r20, X+
   122d2:	5d 91       	ld	r21, X+
   122d4:	6d 91       	ld	r22, X+
   122d6:	7c 91       	ld	r23, X
   122d8:	14 97       	sbiw	r26, 0x04	; 4
   122da:	ce 01       	movw	r24, r28
   122dc:	df 91       	pop	r29
   122de:	cf 91       	pop	r28
   122e0:	1f 91       	pop	r17
   122e2:	0f 91       	pop	r16
   122e4:	9d ce       	rjmp	.-710    	; 0x12020 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   122e6:	fd 01       	movw	r30, r26
   122e8:	81 81       	ldd	r24, Z+1	; 0x01
   122ea:	92 81       	ldd	r25, Z+2	; 0x02
   122ec:	a3 81       	ldd	r26, Z+3	; 0x03
   122ee:	b4 81       	ldd	r27, Z+4	; 0x04
   122f0:	89 2b       	or	r24, r25
   122f2:	8a 2b       	or	r24, r26
   122f4:	8b 2b       	or	r24, r27
   122f6:	19 f4       	brne	.+6      	; 0x122fe <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xea>
   122f8:	6d e0       	ldi	r22, 0x0D	; 13
   122fa:	77 e0       	ldi	r23, 0x07	; 7
   122fc:	02 c0       	rjmp	.+4      	; 0x12302 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   122fe:	68 e0       	ldi	r22, 0x08	; 8
   12300:	77 e0       	ldi	r23, 0x07	; 7
   12302:	ce 01       	movw	r24, r28
   12304:	df 91       	pop	r29
   12306:	cf 91       	pop	r28
   12308:	1f 91       	pop	r17
   1230a:	0f 91       	pop	r16
   1230c:	06 ce       	rjmp	.-1012   	; 0x11f1a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1230e:	df 91       	pop	r29
   12310:	cf 91       	pop	r28
   12312:	1f 91       	pop	r17
   12314:	0f 91       	pop	r16
   12316:	08 95       	ret

00012318 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>:
   12318:	0f 93       	push	r16
   1231a:	1f 93       	push	r17
   1231c:	cf 93       	push	r28
   1231e:	df 93       	push	r29
   12320:	8c 01       	movw	r16, r24
   12322:	eb 01       	movw	r28, r22
   12324:	6b e7       	ldi	r22, 0x7B	; 123
   12326:	ce 01       	movw	r24, r28
   12328:	e9 dd       	rcall	.-1070   	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1232a:	f8 01       	movw	r30, r16
   1232c:	02 81       	ldd	r16, Z+2	; 0x02
   1232e:	13 81       	ldd	r17, Z+3	; 0x03
   12330:	01 15       	cp	r16, r1
   12332:	11 05       	cpc	r17, r1
   12334:	b1 f0       	breq	.+44     	; 0x12362 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   12336:	f8 01       	movw	r30, r16
   12338:	62 81       	ldd	r22, Z+2	; 0x02
   1233a:	73 81       	ldd	r23, Z+3	; 0x03
   1233c:	ce 01       	movw	r24, r28
   1233e:	16 de       	rcall	.-980    	; 0x11f6c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   12340:	6a e3       	ldi	r22, 0x3A	; 58
   12342:	ce 01       	movw	r24, r28
   12344:	db dd       	rcall	.-1098   	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12346:	be 01       	movw	r22, r28
   12348:	c8 01       	movw	r24, r16
   1234a:	04 96       	adiw	r24, 0x04	; 4
   1234c:	63 df       	rcall	.-314    	; 0x12214 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   1234e:	f8 01       	movw	r30, r16
   12350:	00 81       	ld	r16, Z
   12352:	11 81       	ldd	r17, Z+1	; 0x01
   12354:	01 15       	cp	r16, r1
   12356:	11 05       	cpc	r17, r1
   12358:	21 f0       	breq	.+8      	; 0x12362 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   1235a:	6c e2       	ldi	r22, 0x2C	; 44
   1235c:	ce 01       	movw	r24, r28
   1235e:	ce dd       	rcall	.-1124   	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12360:	e7 cf       	rjmp	.-50     	; 0x12330 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x18>
   12362:	6d e7       	ldi	r22, 0x7D	; 125
   12364:	ce 01       	movw	r24, r28
   12366:	df 91       	pop	r29
   12368:	cf 91       	pop	r28
   1236a:	1f 91       	pop	r17
   1236c:	0f 91       	pop	r16
   1236e:	c6 cd       	rjmp	.-1140   	; 0x11efc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>

00012370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>:
   12370:	cf 93       	push	r28
   12372:	df 93       	push	r29
   12374:	cd b7       	in	r28, 0x3d	; 61
   12376:	de b7       	in	r29, 0x3e	; 62
   12378:	2f 97       	sbiw	r28, 0x0f	; 15
   1237a:	0f b6       	in	r0, 0x3f	; 63
   1237c:	f8 94       	cli
   1237e:	de bf       	out	0x3e, r29	; 62
   12380:	0f be       	out	0x3f, r0	; 63
   12382:	cd bf       	out	0x3d, r28	; 61
   12384:	41 50       	subi	r20, 0x01	; 1
   12386:	51 09       	sbc	r21, r1
   12388:	46 0f       	add	r20, r22
   1238a:	57 1f       	adc	r21, r23
   1238c:	5a 87       	std	Y+10, r21	; 0x0a
   1238e:	49 87       	std	Y+9, r20	; 0x09
   12390:	7c 87       	std	Y+12, r23	; 0x0c
   12392:	6b 87       	std	Y+11, r22	; 0x0b
   12394:	fb 01       	movw	r30, r22
   12396:	10 82       	st	Z, r1
   12398:	9e 01       	movw	r18, r28
   1239a:	27 5f       	subi	r18, 0xF7	; 247
   1239c:	3f 4f       	sbci	r19, 0xFF	; 255
   1239e:	3e 87       	std	Y+14, r19	; 0x0e
   123a0:	2d 87       	std	Y+13, r18	; 0x0d
   123a2:	2f 85       	ldd	r18, Y+15	; 0x0f
   123a4:	20 78       	andi	r18, 0x80	; 128
   123a6:	20 62       	ori	r18, 0x20	; 32
   123a8:	20 68       	ori	r18, 0x80	; 128
   123aa:	2f 87       	std	Y+15, r18	; 0x0f
   123ac:	9e 01       	movw	r18, r28
   123ae:	23 5f       	subi	r18, 0xF3	; 243
   123b0:	3f 4f       	sbci	r19, 0xFF	; 255
   123b2:	3f 83       	std	Y+7, r19	; 0x07
   123b4:	2e 83       	std	Y+6, r18	; 0x06
   123b6:	1d 82       	std	Y+5, r1	; 0x05
   123b8:	18 86       	std	Y+8, r1	; 0x08
   123ba:	28 50       	subi	r18, 0x08	; 8
   123bc:	31 09       	sbc	r19, r1
   123be:	3a 83       	std	Y+2, r19	; 0x02
   123c0:	29 83       	std	Y+1, r18	; 0x01
   123c2:	1c 82       	std	Y+4, r1	; 0x04
   123c4:	1b 82       	std	Y+3, r1	; 0x03
   123c6:	be 01       	movw	r22, r28
   123c8:	6f 5f       	subi	r22, 0xFF	; 255
   123ca:	7f 4f       	sbci	r23, 0xFF	; 255
   123cc:	a5 df       	rcall	.-182    	; 0x12318 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   123ce:	8b 81       	ldd	r24, Y+3	; 0x03
   123d0:	9c 81       	ldd	r25, Y+4	; 0x04
   123d2:	2f 96       	adiw	r28, 0x0f	; 15
   123d4:	0f b6       	in	r0, 0x3f	; 63
   123d6:	f8 94       	cli
   123d8:	de bf       	out	0x3e, r29	; 62
   123da:	0f be       	out	0x3f, r0	; 63
   123dc:	cd bf       	out	0x3d, r28	; 61
   123de:	df 91       	pop	r29
   123e0:	cf 91       	pop	r28
   123e2:	08 95       	ret

000123e4 <_Z12Pub_Sub_DataPcPhjh>:
   123e4:	2f 92       	push	r2
   123e6:	3f 92       	push	r3
   123e8:	4f 92       	push	r4
   123ea:	5f 92       	push	r5
   123ec:	6f 92       	push	r6
   123ee:	7f 92       	push	r7
   123f0:	8f 92       	push	r8
   123f2:	9f 92       	push	r9
   123f4:	af 92       	push	r10
   123f6:	bf 92       	push	r11
   123f8:	cf 92       	push	r12
   123fa:	df 92       	push	r13
   123fc:	ef 92       	push	r14
   123fe:	ff 92       	push	r15
   12400:	0f 93       	push	r16
   12402:	1f 93       	push	r17
   12404:	cf 93       	push	r28
   12406:	df 93       	push	r29
   12408:	cd b7       	in	r28, 0x3d	; 61
   1240a:	de b7       	in	r29, 0x3e	; 62
   1240c:	ce 5b       	subi	r28, 0xBE	; 190
   1240e:	d6 40       	sbci	r29, 0x06	; 6
   12410:	0f b6       	in	r0, 0x3f	; 63
   12412:	f8 94       	cli
   12414:	de bf       	out	0x3e, r29	; 62
   12416:	0f be       	out	0x3f, r0	; 63
   12418:	cd bf       	out	0x3d, r28	; 61
   1241a:	ae 01       	movw	r20, r28
   1241c:	47 5f       	subi	r20, 0xF7	; 247
   1241e:	5f 4f       	sbci	r21, 0xFF	; 255
   12420:	5c 83       	std	Y+4, r21	; 0x04
   12422:	4b 83       	std	Y+3, r20	; 0x03
   12424:	4c e2       	ldi	r20, 0x2C	; 44
   12426:	56 e0       	ldi	r21, 0x06	; 6
   12428:	5e 83       	std	Y+6, r21	; 0x06
   1242a:	4d 83       	std	Y+5, r20	; 0x05
   1242c:	18 86       	std	Y+8, r1	; 0x08
   1242e:	1f 82       	std	Y+7, r1	; 0x07
   12430:	43 ed       	ldi	r20, 0xD3	; 211
   12432:	57 e0       	ldi	r21, 0x07	; 7
   12434:	5a 83       	std	Y+2, r21	; 0x02
   12436:	49 83       	std	Y+1, r20	; 0x01
   12438:	21 30       	cpi	r18, 0x01	; 1
   1243a:	11 f0       	breq	.+4      	; 0x12440 <_Z12Pub_Sub_DataPcPhjh+0x5c>
   1243c:	0c 94 ef a2 	jmp	0x145de	; 0x145de <_Z12Pub_Sub_DataPcPhjh+0x21fa>
   12440:	61 15       	cp	r22, r1
   12442:	71 05       	cpc	r23, r1
   12444:	19 f4       	brne	.+6      	; 0x1244c <_Z12Pub_Sub_DataPcPhjh+0x68>
   12446:	2b ee       	ldi	r18, 0xEB	; 235
   12448:	36 e0       	ldi	r19, 0x06	; 6
   1244a:	01 c0       	rjmp	.+2      	; 0x1244e <_Z12Pub_Sub_DataPcPhjh+0x6a>
   1244c:	9b 01       	movw	r18, r22
   1244e:	ca 54       	subi	r28, 0x4A	; 74
   12450:	d9 4f       	sbci	r29, 0xF9	; 249
   12452:	99 83       	std	Y+1, r25	; 0x01
   12454:	88 83       	st	Y, r24
   12456:	c6 5b       	subi	r28, 0xB6	; 182
   12458:	d6 40       	sbci	r29, 0x06	; 6
   1245a:	ae 01       	movw	r20, r28
   1245c:	4b 5c       	subi	r20, 0xCB	; 203
   1245e:	59 4f       	sbci	r21, 0xF9	; 249
   12460:	c2 55       	subi	r28, 0x52	; 82
   12462:	d9 4f       	sbci	r29, 0xF9	; 249
   12464:	59 83       	std	Y+1, r21	; 0x01
   12466:	48 83       	st	Y, r20
   12468:	ce 5a       	subi	r28, 0xAE	; 174
   1246a:	d6 40       	sbci	r29, 0x06	; 6
   1246c:	ce 01       	movw	r24, r28
   1246e:	01 96       	adiw	r24, 0x01	; 1
   12470:	cb 5c       	subi	r28, 0xCB	; 203
   12472:	d9 4f       	sbci	r29, 0xF9	; 249
   12474:	99 83       	std	Y+1, r25	; 0x01
   12476:	88 83       	st	Y, r24
   12478:	c5 53       	subi	r28, 0x35	; 53
   1247a:	d6 40       	sbci	r29, 0x06	; 6
   1247c:	c9 5c       	subi	r28, 0xC9	; 201
   1247e:	d9 4f       	sbci	r29, 0xF9	; 249
   12480:	39 83       	std	Y+1, r19	; 0x01
   12482:	28 83       	st	Y, r18
   12484:	c7 53       	subi	r28, 0x37	; 55
   12486:	d6 40       	sbci	r29, 0x06	; 6
   12488:	c7 5c       	subi	r28, 0xC7	; 199
   1248a:	d9 4f       	sbci	r29, 0xF9	; 249
   1248c:	79 83       	std	Y+1, r23	; 0x01
   1248e:	68 83       	st	Y, r22
   12490:	c9 53       	subi	r28, 0x39	; 57
   12492:	d6 40       	sbci	r29, 0x06	; 6
   12494:	8a e0       	ldi	r24, 0x0A	; 10
   12496:	c5 5c       	subi	r28, 0xC5	; 197
   12498:	d9 4f       	sbci	r29, 0xF9	; 249
   1249a:	88 83       	st	Y, r24
   1249c:	cb 53       	subi	r28, 0x3B	; 59
   1249e:	d6 40       	sbci	r29, 0x06	; 6
   124a0:	ca 01       	movw	r24, r20
   124a2:	28 d9       	rcall	.-3504   	; 0x116f4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   124a4:	2c 01       	movw	r4, r24
   124a6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   124aa:	81 30       	cpi	r24, 0x01	; 1
   124ac:	31 f4       	brne	.+12     	; 0x124ba <_Z12Pub_Sub_DataPcPhjh+0xd6>
   124ae:	69 ed       	ldi	r22, 0xD9	; 217
   124b0:	7a e3       	ldi	r23, 0x3A	; 58
   124b2:	82 e5       	ldi	r24, 0x52	; 82
   124b4:	94 e1       	ldi	r25, 0x14	; 20
   124b6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   124ba:	d2 01       	movw	r26, r4
   124bc:	8d 91       	ld	r24, X+
   124be:	9c 91       	ld	r25, X
   124c0:	89 2b       	or	r24, r25
   124c2:	11 f4       	brne	.+4      	; 0x124c8 <_Z12Pub_Sub_DataPcPhjh+0xe4>
   124c4:	0c 94 ef a2 	jmp	0x145de	; 0x145de <_Z12Pub_Sub_DataPcPhjh+0x21fa>
   124c8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   124cc:	81 30       	cpi	r24, 0x01	; 1
   124ce:	31 f4       	brne	.+12     	; 0x124dc <_Z12Pub_Sub_DataPcPhjh+0xf8>
   124d0:	60 ec       	ldi	r22, 0xC0	; 192
   124d2:	7a e3       	ldi	r23, 0x3A	; 58
   124d4:	82 e5       	ldi	r24, 0x52	; 82
   124d6:	94 e1       	ldi	r25, 0x14	; 20
   124d8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   124dc:	8e 01       	movw	r16, r28
   124de:	0b 57       	subi	r16, 0x7B	; 123
   124e0:	19 4f       	sbci	r17, 0xF9	; 249
   124e2:	88 e2       	ldi	r24, 0x28	; 40
   124e4:	f8 01       	movw	r30, r16
   124e6:	11 92       	st	Z+, r1
   124e8:	8a 95       	dec	r24
   124ea:	e9 f7       	brne	.-6      	; 0x124e6 <_Z12Pub_Sub_DataPcPhjh+0x102>
   124ec:	87 e6       	ldi	r24, 0x67	; 103
   124ee:	93 e1       	ldi	r25, 0x13	; 19
   124f0:	9f 93       	push	r25
   124f2:	8f 93       	push	r24
   124f4:	8e ec       	ldi	r24, 0xCE	; 206
   124f6:	95 e0       	ldi	r25, 0x05	; 5
   124f8:	9f 93       	push	r25
   124fa:	8f 93       	push	r24
   124fc:	1f 93       	push	r17
   124fe:	0f 93       	push	r16
   12500:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   12504:	ca 54       	subi	r28, 0x4A	; 74
   12506:	d9 4f       	sbci	r29, 0xF9	; 249
   12508:	68 81       	ld	r22, Y
   1250a:	79 81       	ldd	r23, Y+1	; 0x01
   1250c:	c6 5b       	subi	r28, 0xB6	; 182
   1250e:	d6 40       	sbci	r29, 0x06	; 6
   12510:	c8 01       	movw	r24, r16
   12512:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   12516:	0f 90       	pop	r0
   12518:	0f 90       	pop	r0
   1251a:	0f 90       	pop	r0
   1251c:	0f 90       	pop	r0
   1251e:	0f 90       	pop	r0
   12520:	0f 90       	pop	r0
   12522:	89 2b       	or	r24, r25
   12524:	39 f5       	brne	.+78     	; 0x12574 <_Z12Pub_Sub_DataPcPhjh+0x190>
   12526:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1252a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1252e:	81 30       	cpi	r24, 0x01	; 1
   12530:	51 f4       	brne	.+20     	; 0x12546 <_Z12Pub_Sub_DataPcPhjh+0x162>
   12532:	64 e9       	ldi	r22, 0x94	; 148
   12534:	7a e3       	ldi	r23, 0x3A	; 58
   12536:	82 e5       	ldi	r24, 0x52	; 82
   12538:	94 e1       	ldi	r25, 0x14	; 20
   1253a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1253e:	82 e5       	ldi	r24, 0x52	; 82
   12540:	94 e1       	ldi	r25, 0x14	; 20
   12542:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12546:	81 e0       	ldi	r24, 0x01	; 1
   12548:	80 93 a3 13 	sts	0x13A3, r24	; 0x8013a3 <_sRuble_Parameters+0x5c>
   1254c:	82 e0       	ldi	r24, 0x02	; 2
   1254e:	c3 55       	subi	r28, 0x53	; 83
   12550:	d9 4f       	sbci	r29, 0xF9	; 249
   12552:	88 83       	st	Y, r24
   12554:	cd 5a       	subi	r28, 0xAD	; 173
   12556:	d6 40       	sbci	r29, 0x06	; 6
   12558:	be 01       	movw	r22, r28
   1255a:	63 55       	subi	r22, 0x53	; 83
   1255c:	79 4f       	sbci	r23, 0xF9	; 249
   1255e:	84 ef       	ldi	r24, 0xF4	; 244
   12560:	94 e0       	ldi	r25, 0x04	; 4
   12562:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   12566:	f1 e0       	ldi	r31, 0x01	; 1
   12568:	c0 55       	subi	r28, 0x50	; 80
   1256a:	d9 4f       	sbci	r29, 0xF9	; 249
   1256c:	f8 83       	st	Y, r31
   1256e:	c0 5b       	subi	r28, 0xB0	; 176
   12570:	d6 40       	sbci	r29, 0x06	; 6
   12572:	05 c0       	rjmp	.+10     	; 0x1257e <_Z12Pub_Sub_DataPcPhjh+0x19a>
   12574:	c0 55       	subi	r28, 0x50	; 80
   12576:	d9 4f       	sbci	r29, 0xF9	; 249
   12578:	18 82       	st	Y, r1
   1257a:	c0 5b       	subi	r28, 0xB0	; 176
   1257c:	d6 40       	sbci	r29, 0x06	; 6
   1257e:	88 e2       	ldi	r24, 0x28	; 40
   12580:	d8 01       	movw	r26, r16
   12582:	1d 92       	st	X+, r1
   12584:	8a 95       	dec	r24
   12586:	e9 f7       	brne	.-6      	; 0x12582 <_Z12Pub_Sub_DataPcPhjh+0x19e>
   12588:	87 e6       	ldi	r24, 0x67	; 103
   1258a:	93 e1       	ldi	r25, 0x13	; 19
   1258c:	9f 93       	push	r25
   1258e:	8f 93       	push	r24
   12590:	86 ee       	ldi	r24, 0xE6	; 230
   12592:	95 e0       	ldi	r25, 0x05	; 5
   12594:	9f 93       	push	r25
   12596:	8f 93       	push	r24
   12598:	1f 93       	push	r17
   1259a:	0f 93       	push	r16
   1259c:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   125a0:	ca 54       	subi	r28, 0x4A	; 74
   125a2:	d9 4f       	sbci	r29, 0xF9	; 249
   125a4:	68 81       	ld	r22, Y
   125a6:	79 81       	ldd	r23, Y+1	; 0x01
   125a8:	c6 5b       	subi	r28, 0xB6	; 182
   125aa:	d6 40       	sbci	r29, 0x06	; 6
   125ac:	c8 01       	movw	r24, r16
   125ae:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   125b2:	0f 90       	pop	r0
   125b4:	0f 90       	pop	r0
   125b6:	0f 90       	pop	r0
   125b8:	0f 90       	pop	r0
   125ba:	0f 90       	pop	r0
   125bc:	0f 90       	pop	r0
   125be:	89 2b       	or	r24, r25
   125c0:	09 f0       	breq	.+2      	; 0x125c4 <_Z12Pub_Sub_DataPcPhjh+0x1e0>
   125c2:	bd c0       	rjmp	.+378    	; 0x1273e <_Z12Pub_Sub_DataPcPhjh+0x35a>
   125c4:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_gStart_Monitoring_Three_Phase>
   125c8:	86 34       	cpi	r24, 0x46	; 70
   125ca:	10 f4       	brcc	.+4      	; 0x125d0 <_Z12Pub_Sub_DataPcPhjh+0x1ec>
   125cc:	0c 94 ef a2 	jmp	0x145de	; 0x145de <_Z12Pub_Sub_DataPcPhjh+0x21fa>
   125d0:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   125d4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   125d8:	81 30       	cpi	r24, 0x01	; 1
   125da:	51 f4       	brne	.+20     	; 0x125f0 <_Z12Pub_Sub_DataPcPhjh+0x20c>
   125dc:	6e e7       	ldi	r22, 0x7E	; 126
   125de:	7a e3       	ldi	r23, 0x3A	; 58
   125e0:	82 e5       	ldi	r24, 0x52	; 82
   125e2:	94 e1       	ldi	r25, 0x14	; 20
   125e4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   125e8:	82 e5       	ldi	r24, 0x52	; 82
   125ea:	94 e1       	ldi	r25, 0x14	; 20
   125ec:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   125f0:	80 91 fc 13 	lds	r24, 0x13FC	; 0x8013fc <_sRuble_Parameters+0xb5>
   125f4:	81 30       	cpi	r24, 0x01	; 1
   125f6:	09 f4       	brne	.+2      	; 0x125fa <_Z12Pub_Sub_DataPcPhjh+0x216>
   125f8:	8e c0       	rjmp	.+284    	; 0x12716 <_Z12Pub_Sub_DataPcPhjh+0x332>
   125fa:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   125fe:	82 30       	cpi	r24, 0x02	; 2
   12600:	09 f4       	brne	.+2      	; 0x12604 <_Z12Pub_Sub_DataPcPhjh+0x220>
   12602:	90 c0       	rjmp	.+288    	; 0x12724 <_Z12Pub_Sub_DataPcPhjh+0x340>
   12604:	84 30       	cpi	r24, 0x04	; 4
   12606:	09 f4       	brne	.+2      	; 0x1260a <_Z12Pub_Sub_DataPcPhjh+0x226>
   12608:	94 c0       	rjmp	.+296    	; 0x12732 <_Z12Pub_Sub_DataPcPhjh+0x34e>
   1260a:	6a e7       	ldi	r22, 0x7A	; 122
   1260c:	7a e3       	ldi	r23, 0x3A	; 58
   1260e:	c2 01       	movw	r24, r4
   12610:	c6 d9       	rcall	.-3188   	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12612:	88 23       	and	r24, r24
   12614:	09 f4       	brne	.+2      	; 0x12618 <_Z12Pub_Sub_DataPcPhjh+0x234>
   12616:	76 c0       	rjmp	.+236    	; 0x12704 <_Z12Pub_Sub_DataPcPhjh+0x320>
   12618:	8f 30       	cpi	r24, 0x0F	; 15
   1261a:	98 f4       	brcc	.+38     	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   1261c:	28 2f       	mov	r18, r24
   1261e:	30 e0       	ldi	r19, 0x00	; 0
   12620:	21 50       	subi	r18, 0x01	; 1
   12622:	31 09       	sbc	r19, r1
   12624:	96 e0       	ldi	r25, 0x06	; 6
   12626:	92 9f       	mul	r25, r18
   12628:	f0 01       	movw	r30, r0
   1262a:	93 9f       	mul	r25, r19
   1262c:	f0 0d       	add	r31, r0
   1262e:	11 24       	eor	r1, r1
   12630:	e3 50       	subi	r30, 0x03	; 3
   12632:	f3 4f       	sbci	r31, 0xF3	; 243
   12634:	90 81       	ld	r25, Z
   12636:	99 23       	and	r25, r25
   12638:	21 f0       	breq	.+8      	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   1263a:	80 93 f0 13 	sts	0x13F0, r24	; 0x8013f0 <_sRuble_Parameters+0xa9>
   1263e:	81 30       	cpi	r24, 0x01	; 1
   12640:	61 f4       	brne	.+24     	; 0x1265a <_Z12Pub_Sub_DataPcPhjh+0x276>
   12642:	84 ed       	ldi	r24, 0xD4	; 212
   12644:	93 e0       	ldi	r25, 0x03	; 3
   12646:	e9 e6       	ldi	r30, 0x69	; 105
   12648:	ff e0       	ldi	r31, 0x0F	; 15
   1264a:	df 01       	movw	r26, r30
   1264c:	9c 01       	movw	r18, r24
   1264e:	1d 92       	st	X+, r1
   12650:	21 50       	subi	r18, 0x01	; 1
   12652:	30 40       	sbci	r19, 0x00	; 0
   12654:	e1 f7       	brne	.-8      	; 0x1264e <_Z12Pub_Sub_DataPcPhjh+0x26a>
   12656:	0c 94 ef a2 	jmp	0x145de	; 0x145de <_Z12Pub_Sub_DataPcPhjh+0x21fa>
   1265a:	68 e7       	ldi	r22, 0x78	; 120
   1265c:	7a e3       	ldi	r23, 0x3A	; 58
   1265e:	c2 01       	movw	r24, r4
   12660:	33 d9       	rcall	.-3482   	; 0x118c8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12662:	2c e3       	ldi	r18, 0x3C	; 60
   12664:	ac 01       	movw	r20, r24
   12666:	24 9f       	mul	r18, r20
   12668:	c0 01       	movw	r24, r0
   1266a:	25 9f       	mul	r18, r21
   1266c:	90 0d       	add	r25, r0
   1266e:	11 24       	eor	r1, r1
   12670:	90 93 5e 13 	sts	0x135E, r25	; 0x80135e <_sRuble_Parameters+0x17>
   12674:	80 93 5d 13 	sts	0x135D, r24	; 0x80135d <_sRuble_Parameters+0x16>
   12678:	83 e0       	ldi	r24, 0x03	; 3
   1267a:	80 93 70 13 	sts	0x1370, r24	; 0x801370 <_sRuble_Parameters+0x29>
   1267e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12682:	81 30       	cpi	r24, 0x01	; 1
   12684:	31 f5       	brne	.+76     	; 0x126d2 <_Z12Pub_Sub_DataPcPhjh+0x2ee>
   12686:	69 e6       	ldi	r22, 0x69	; 105
   12688:	7a e3       	ldi	r23, 0x3A	; 58
   1268a:	82 e5       	ldi	r24, 0x52	; 82
   1268c:	94 e1       	ldi	r25, 0x14	; 20
   1268e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12692:	82 e5       	ldi	r24, 0x52	; 82
   12694:	94 e1       	ldi	r25, 0x14	; 20
   12696:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1269a:	60 91 5d 13 	lds	r22, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   1269e:	70 91 5e 13 	lds	r23, 0x135E	; 0x80135e <_sRuble_Parameters+0x17>
   126a2:	4a e0       	ldi	r20, 0x0A	; 10
   126a4:	50 e0       	ldi	r21, 0x00	; 0
   126a6:	82 e5       	ldi	r24, 0x52	; 82
   126a8:	94 e1       	ldi	r25, 0x14	; 20
   126aa:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
   126ae:	69 e5       	ldi	r22, 0x59	; 89
   126b0:	7a e3       	ldi	r23, 0x3A	; 58
   126b2:	82 e5       	ldi	r24, 0x52	; 82
   126b4:	94 e1       	ldi	r25, 0x14	; 20
   126b6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   126ba:	82 e5       	ldi	r24, 0x52	; 82
   126bc:	94 e1       	ldi	r25, 0x14	; 20
   126be:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   126c2:	4a e0       	ldi	r20, 0x0A	; 10
   126c4:	50 e0       	ldi	r21, 0x00	; 0
   126c6:	60 91 f0 13 	lds	r22, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0xa9>
   126ca:	82 e5       	ldi	r24, 0x52	; 82
   126cc:	94 e1       	ldi	r25, 0x14	; 20
   126ce:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   126d2:	10 92 66 13 	sts	0x1366, r1	; 0x801366 <_sRuble_Parameters+0x1f>
   126d6:	10 92 65 13 	sts	0x1365, r1	; 0x801365 <_sRuble_Parameters+0x1e>
   126da:	10 92 fd 13 	sts	0x13FD, r1	; 0x8013fd <_sRuble_Parameters+0xb6>
   126de:	10 92 25 14 	sts	0x1425, r1	; 0x801425 <_sRuble_Parameters+0xde>
   126e2:	88 e9       	ldi	r24, 0x98	; 152
   126e4:	9c e0       	ldi	r25, 0x0C	; 12
   126e6:	0e 94 fb 84 	call	0x109f6	; 0x109f6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   126ea:	63 e2       	ldi	r22, 0x23	; 35
   126ec:	74 e1       	ldi	r23, 0x14	; 20
   126ee:	8b ea       	ldi	r24, 0xAB	; 171
   126f0:	9e e0       	ldi	r25, 0x0E	; 14
   126f2:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   126f6:	51 e0       	ldi	r21, 0x01	; 1
   126f8:	c0 55       	subi	r28, 0x50	; 80
   126fa:	d9 4f       	sbci	r29, 0xF9	; 249
   126fc:	58 83       	st	Y, r21
   126fe:	c0 5b       	subi	r28, 0xB0	; 176
   12700:	d6 40       	sbci	r29, 0x06	; 6
   12702:	1d c0       	rjmp	.+58     	; 0x1273e <_Z12Pub_Sub_DataPcPhjh+0x35a>
   12704:	10 92 f0 13 	sts	0x13F0, r1	; 0x8013f0 <_sRuble_Parameters+0xa9>
   12708:	81 e0       	ldi	r24, 0x01	; 1
   1270a:	c0 55       	subi	r28, 0x50	; 80
   1270c:	d9 4f       	sbci	r29, 0xF9	; 249
   1270e:	88 83       	st	Y, r24
   12710:	c0 5b       	subi	r28, 0xB0	; 176
   12712:	d6 40       	sbci	r29, 0x06	; 6
   12714:	14 c0       	rjmp	.+40     	; 0x1273e <_Z12Pub_Sub_DataPcPhjh+0x35a>
   12716:	91 e0       	ldi	r25, 0x01	; 1
   12718:	c0 55       	subi	r28, 0x50	; 80
   1271a:	d9 4f       	sbci	r29, 0xF9	; 249
   1271c:	98 83       	st	Y, r25
   1271e:	c0 5b       	subi	r28, 0xB0	; 176
   12720:	d6 40       	sbci	r29, 0x06	; 6
   12722:	0d c0       	rjmp	.+26     	; 0x1273e <_Z12Pub_Sub_DataPcPhjh+0x35a>
   12724:	a1 e0       	ldi	r26, 0x01	; 1
   12726:	c0 55       	subi	r28, 0x50	; 80
   12728:	d9 4f       	sbci	r29, 0xF9	; 249
   1272a:	a8 83       	st	Y, r26
   1272c:	c0 5b       	subi	r28, 0xB0	; 176
   1272e:	d6 40       	sbci	r29, 0x06	; 6
   12730:	06 c0       	rjmp	.+12     	; 0x1273e <_Z12Pub_Sub_DataPcPhjh+0x35a>
   12732:	b1 e0       	ldi	r27, 0x01	; 1
   12734:	c0 55       	subi	r28, 0x50	; 80
   12736:	d9 4f       	sbci	r29, 0xF9	; 249
   12738:	b8 83       	st	Y, r27
   1273a:	c0 5b       	subi	r28, 0xB0	; 176
   1273c:	d6 40       	sbci	r29, 0x06	; 6
   1273e:	88 e2       	ldi	r24, 0x28	; 40
   12740:	f8 01       	movw	r30, r16
   12742:	11 92       	st	Z+, r1
   12744:	8a 95       	dec	r24
   12746:	e9 f7       	brne	.-6      	; 0x12742 <_Z12Pub_Sub_DataPcPhjh+0x35e>
   12748:	87 e6       	ldi	r24, 0x67	; 103
   1274a:	93 e1       	ldi	r25, 0x13	; 19
   1274c:	9f 93       	push	r25
   1274e:	8f 93       	push	r24
   12750:	85 ef       	ldi	r24, 0xF5	; 245
   12752:	95 e0       	ldi	r25, 0x05	; 5
   12754:	9f 93       	push	r25
   12756:	8f 93       	push	r24
   12758:	1f 93       	push	r17
   1275a:	0f 93       	push	r16
   1275c:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   12760:	ca 54       	subi	r28, 0x4A	; 74
   12762:	d9 4f       	sbci	r29, 0xF9	; 249
   12764:	68 81       	ld	r22, Y
   12766:	79 81       	ldd	r23, Y+1	; 0x01
   12768:	c6 5b       	subi	r28, 0xB6	; 182
   1276a:	d6 40       	sbci	r29, 0x06	; 6
   1276c:	c8 01       	movw	r24, r16
   1276e:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   12772:	0f 90       	pop	r0
   12774:	0f 90       	pop	r0
   12776:	0f 90       	pop	r0
   12778:	0f 90       	pop	r0
   1277a:	0f 90       	pop	r0
   1277c:	0f 90       	pop	r0
   1277e:	89 2b       	or	r24, r25
   12780:	e9 f4       	brne	.+58     	; 0x127bc <_Z12Pub_Sub_DataPcPhjh+0x3d8>
   12782:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   12786:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1278a:	81 30       	cpi	r24, 0x01	; 1
   1278c:	89 f4       	brne	.+34     	; 0x127b0 <_Z12Pub_Sub_DataPcPhjh+0x3cc>
   1278e:	67 e3       	ldi	r22, 0x37	; 55
   12790:	7a e3       	ldi	r23, 0x3A	; 58
   12792:	82 e5       	ldi	r24, 0x52	; 82
   12794:	94 e1       	ldi	r25, 0x14	; 20
   12796:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1279a:	82 e5       	ldi	r24, 0x52	; 82
   1279c:	94 e1       	ldi	r25, 0x14	; 20
   1279e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   127a2:	f1 e0       	ldi	r31, 0x01	; 1
   127a4:	c0 55       	subi	r28, 0x50	; 80
   127a6:	d9 4f       	sbci	r29, 0xF9	; 249
   127a8:	f8 83       	st	Y, r31
   127aa:	c0 5b       	subi	r28, 0xB0	; 176
   127ac:	d6 40       	sbci	r29, 0x06	; 6
   127ae:	06 c0       	rjmp	.+12     	; 0x127bc <_Z12Pub_Sub_DataPcPhjh+0x3d8>
   127b0:	21 e0       	ldi	r18, 0x01	; 1
   127b2:	c0 55       	subi	r28, 0x50	; 80
   127b4:	d9 4f       	sbci	r29, 0xF9	; 249
   127b6:	28 83       	st	Y, r18
   127b8:	c0 5b       	subi	r28, 0xB0	; 176
   127ba:	d6 40       	sbci	r29, 0x06	; 6
   127bc:	88 e2       	ldi	r24, 0x28	; 40
   127be:	d8 01       	movw	r26, r16
   127c0:	1d 92       	st	X+, r1
   127c2:	8a 95       	dec	r24
   127c4:	e9 f7       	brne	.-6      	; 0x127c0 <_Z12Pub_Sub_DataPcPhjh+0x3dc>
   127c6:	87 e6       	ldi	r24, 0x67	; 103
   127c8:	93 e1       	ldi	r25, 0x13	; 19
   127ca:	9f 93       	push	r25
   127cc:	8f 93       	push	r24
   127ce:	83 eb       	ldi	r24, 0xB3	; 179
   127d0:	95 e0       	ldi	r25, 0x05	; 5
   127d2:	9f 93       	push	r25
   127d4:	8f 93       	push	r24
   127d6:	1f 93       	push	r17
   127d8:	0f 93       	push	r16
   127da:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   127de:	ca 54       	subi	r28, 0x4A	; 74
   127e0:	d9 4f       	sbci	r29, 0xF9	; 249
   127e2:	68 81       	ld	r22, Y
   127e4:	79 81       	ldd	r23, Y+1	; 0x01
   127e6:	c6 5b       	subi	r28, 0xB6	; 182
   127e8:	d6 40       	sbci	r29, 0x06	; 6
   127ea:	c8 01       	movw	r24, r16
   127ec:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   127f0:	0f 90       	pop	r0
   127f2:	0f 90       	pop	r0
   127f4:	0f 90       	pop	r0
   127f6:	0f 90       	pop	r0
   127f8:	0f 90       	pop	r0
   127fa:	0f 90       	pop	r0
   127fc:	89 2b       	or	r24, r25
   127fe:	09 f0       	breq	.+2      	; 0x12802 <_Z12Pub_Sub_DataPcPhjh+0x41e>
   12800:	94 c6       	rjmp	.+3368   	; 0x1352a <_Z12Pub_Sub_DataPcPhjh+0x1146>
   12802:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   12806:	63 e3       	ldi	r22, 0x33	; 51
   12808:	7a e3       	ldi	r23, 0x3A	; 58
   1280a:	c2 01       	movw	r24, r4
   1280c:	c8 d8       	rcall	.-3696   	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1280e:	98 2e       	mov	r9, r24
   12810:	b8 e6       	ldi	r27, 0x68	; 104
   12812:	8b 17       	cp	r24, r27
   12814:	11 f4       	brne	.+4      	; 0x1281a <_Z12Pub_Sub_DataPcPhjh+0x436>
   12816:	0c 94 ef a2 	jmp	0x145de	; 0x145de <_Z12Pub_Sub_DataPcPhjh+0x21fa>
   1281a:	ef ef       	ldi	r30, 0xFF	; 255
   1281c:	e8 0f       	add	r30, r24
   1281e:	c8 54       	subi	r28, 0x48	; 72
   12820:	d9 4f       	sbci	r29, 0xF9	; 249
   12822:	e8 83       	st	Y, r30
   12824:	c8 5b       	subi	r28, 0xB8	; 184
   12826:	d6 40       	sbci	r29, 0x06	; 6
   12828:	e2 37       	cpi	r30, 0x72	; 114
   1282a:	08 f0       	brcs	.+2      	; 0x1282e <_Z12Pub_Sub_DataPcPhjh+0x44a>
   1282c:	7e c6       	rjmp	.+3324   	; 0x1352a <_Z12Pub_Sub_DataPcPhjh+0x1146>
   1282e:	fe e0       	ldi	r31, 0x0E	; 14
   12830:	f8 17       	cp	r31, r24
   12832:	60 f0       	brcs	.+24     	; 0x1284c <_Z12Pub_Sub_DataPcPhjh+0x468>
   12834:	90 e0       	ldi	r25, 0x00	; 0
   12836:	01 97       	sbiw	r24, 0x01	; 1
   12838:	26 e0       	ldi	r18, 0x06	; 6
   1283a:	28 9f       	mul	r18, r24
   1283c:	f0 01       	movw	r30, r0
   1283e:	29 9f       	mul	r18, r25
   12840:	f0 0d       	add	r31, r0
   12842:	11 24       	eor	r1, r1
   12844:	e3 50       	subi	r30, 0x03	; 3
   12846:	f3 4f       	sbci	r31, 0xF3	; 243
   12848:	90 82       	st	Z, r9
   1284a:	0f c0       	rjmp	.+30     	; 0x1286a <_Z12Pub_Sub_DataPcPhjh+0x486>
   1284c:	24 e6       	ldi	r18, 0x64	; 100
   1284e:	28 17       	cp	r18, r24
   12850:	60 f4       	brcc	.+24     	; 0x1286a <_Z12Pub_Sub_DataPcPhjh+0x486>
   12852:	90 e0       	ldi	r25, 0x00	; 0
   12854:	85 56       	subi	r24, 0x65	; 101
   12856:	91 09       	sbc	r25, r1
   12858:	2b e1       	ldi	r18, 0x1B	; 27
   1285a:	28 9f       	mul	r18, r24
   1285c:	f0 01       	movw	r30, r0
   1285e:	29 9f       	mul	r18, r25
   12860:	f0 0d       	add	r31, r0
   12862:	11 24       	eor	r1, r1
   12864:	ef 57       	subi	r30, 0x7F	; 127
   12866:	f2 4f       	sbci	r31, 0xF2	; 242
   12868:	91 82       	std	Z+1, r9	; 0x01
   1286a:	3e 01       	movw	r6, r28
   1286c:	33 ea       	ldi	r19, 0xA3	; 163
   1286e:	63 1a       	sub	r6, r19
   12870:	39 ef       	ldi	r19, 0xF9	; 249
   12872:	73 0a       	sbc	r7, r19
   12874:	88 e0       	ldi	r24, 0x08	; 8
   12876:	d3 01       	movw	r26, r6
   12878:	e8 2f       	mov	r30, r24
   1287a:	1d 92       	st	X+, r1
   1287c:	ea 95       	dec	r30
   1287e:	e9 f7       	brne	.-6      	; 0x1287a <_Z12Pub_Sub_DataPcPhjh+0x496>
   12880:	53 01       	movw	r10, r6
   12882:	f8 e0       	ldi	r31, 0x08	; 8
   12884:	af 0e       	add	r10, r31
   12886:	b1 1c       	adc	r11, r1
   12888:	d5 01       	movw	r26, r10
   1288a:	e8 2f       	mov	r30, r24
   1288c:	1d 92       	st	X+, r1
   1288e:	ea 95       	dec	r30
   12890:	e9 f7       	brne	.-6      	; 0x1288c <_Z12Pub_Sub_DataPcPhjh+0x4a8>
   12892:	63 01       	movw	r12, r6
   12894:	f0 e1       	ldi	r31, 0x10	; 16
   12896:	cf 0e       	add	r12, r31
   12898:	d1 1c       	adc	r13, r1
   1289a:	d6 01       	movw	r26, r12
   1289c:	e8 2f       	mov	r30, r24
   1289e:	1d 92       	st	X+, r1
   128a0:	ea 95       	dec	r30
   128a2:	e9 f7       	brne	.-6      	; 0x1289e <_Z12Pub_Sub_DataPcPhjh+0x4ba>
   128a4:	73 01       	movw	r14, r6
   128a6:	f8 e1       	ldi	r31, 0x18	; 24
   128a8:	ef 0e       	add	r14, r31
   128aa:	f1 1c       	adc	r15, r1
   128ac:	d7 01       	movw	r26, r14
   128ae:	e8 2f       	mov	r30, r24
   128b0:	1d 92       	st	X+, r1
   128b2:	ea 95       	dec	r30
   128b4:	e9 f7       	brne	.-6      	; 0x128b0 <_Z12Pub_Sub_DataPcPhjh+0x4cc>
   128b6:	83 01       	movw	r16, r6
   128b8:	00 5e       	subi	r16, 0xE0	; 224
   128ba:	1f 4f       	sbci	r17, 0xFF	; 255
   128bc:	d8 01       	movw	r26, r16
   128be:	1d 92       	st	X+, r1
   128c0:	8a 95       	dec	r24
   128c2:	e9 f7       	brne	.-6      	; 0x128be <_Z12Pub_Sub_DataPcPhjh+0x4da>
   128c4:	6c e2       	ldi	r22, 0x2C	; 44
   128c6:	7a e3       	ldi	r23, 0x3A	; 58
   128c8:	c2 01       	movw	r24, r4
   128ca:	0e 94 ed 8b 	call	0x117da	; 0x117da <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   128ce:	bc 01       	movw	r22, r24
   128d0:	c3 01       	movw	r24, r6
   128d2:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   128d6:	65 e2       	ldi	r22, 0x25	; 37
   128d8:	7a e3       	ldi	r23, 0x3A	; 58
   128da:	c2 01       	movw	r24, r4
   128dc:	0e 94 ed 8b 	call	0x117da	; 0x117da <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   128e0:	bc 01       	movw	r22, r24
   128e2:	c5 01       	movw	r24, r10
   128e4:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   128e8:	6e e1       	ldi	r22, 0x1E	; 30
   128ea:	7a e3       	ldi	r23, 0x3A	; 58
   128ec:	c2 01       	movw	r24, r4
   128ee:	0e 94 ed 8b 	call	0x117da	; 0x117da <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   128f2:	bc 01       	movw	r22, r24
   128f4:	c6 01       	movw	r24, r12
   128f6:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   128fa:	67 e1       	ldi	r22, 0x17	; 23
   128fc:	7a e3       	ldi	r23, 0x3A	; 58
   128fe:	c2 01       	movw	r24, r4
   12900:	0e 94 ed 8b 	call	0x117da	; 0x117da <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12904:	bc 01       	movw	r22, r24
   12906:	c7 01       	movw	r24, r14
   12908:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   1290c:	60 e1       	ldi	r22, 0x10	; 16
   1290e:	7a e3       	ldi	r23, 0x3A	; 58
   12910:	c2 01       	movw	r24, r4
   12912:	0e 94 ed 8b 	call	0x117da	; 0x117da <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12916:	bc 01       	movw	r22, r24
   12918:	c8 01       	movw	r24, r16
   1291a:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   1291e:	be e0       	ldi	r27, 0x0E	; 14
   12920:	b9 15       	cp	r27, r9
   12922:	98 f1       	brcs	.+102    	; 0x1298a <_Z12Pub_Sub_DataPcPhjh+0x5a6>
   12924:	89 2d       	mov	r24, r9
   12926:	90 e0       	ldi	r25, 0x00	; 0
   12928:	01 97       	sbiw	r24, 0x01	; 1
   1292a:	26 e0       	ldi	r18, 0x06	; 6
   1292c:	28 9f       	mul	r18, r24
   1292e:	f0 01       	movw	r30, r0
   12930:	29 9f       	mul	r18, r25
   12932:	f0 0d       	add	r31, r0
   12934:	11 24       	eor	r1, r1
   12936:	e2 50       	subi	r30, 0x02	; 2
   12938:	f3 4f       	sbci	r31, 0xF3	; 243
   1293a:	85 e0       	ldi	r24, 0x05	; 5
   1293c:	df 01       	movw	r26, r30
   1293e:	1d 92       	st	X+, r1
   12940:	8a 95       	dec	r24
   12942:	e9 f7       	brne	.-6      	; 0x1293e <_Z12Pub_Sub_DataPcPhjh+0x55a>
   12944:	13 01       	movw	r2, r6
   12946:	26 e0       	ldi	r18, 0x06	; 6
   12948:	92 9e       	mul	r9, r18
   1294a:	f0 01       	movw	r30, r0
   1294c:	11 24       	eor	r1, r1
   1294e:	c5 54       	subi	r28, 0x45	; 69
   12950:	d9 4f       	sbci	r29, 0xF9	; 249
   12952:	f9 83       	std	Y+1, r31	; 0x01
   12954:	e8 83       	st	Y, r30
   12956:	cb 5b       	subi	r28, 0xBB	; 187
   12958:	d6 40       	sbci	r29, 0x06	; 6
   1295a:	e8 50       	subi	r30, 0x08	; 8
   1295c:	f3 4f       	sbci	r31, 0xF3	; 243
   1295e:	7f 01       	movw	r14, r30
   12960:	3b e1       	ldi	r19, 0x1B	; 27
   12962:	93 9e       	mul	r9, r19
   12964:	c0 01       	movw	r24, r0
   12966:	11 24       	eor	r1, r1
   12968:	ac 01       	movw	r20, r24
   1296a:	41 52       	subi	r20, 0x21	; 33
   1296c:	5d 4f       	sbci	r21, 0xFD	; 253
   1296e:	6a 01       	movw	r12, r20
   12970:	c3 01       	movw	r24, r6
   12972:	88 96       	adiw	r24, 0x28	; 40
   12974:	c3 54       	subi	r28, 0x43	; 67
   12976:	d9 4f       	sbci	r29, 0xF9	; 249
   12978:	99 83       	std	Y+1, r25	; 0x01
   1297a:	88 83       	st	Y, r24
   1297c:	cd 5b       	subi	r28, 0xBD	; 189
   1297e:	d6 40       	sbci	r29, 0x06	; 6
   12980:	96 e6       	ldi	r25, 0x66	; 102
   12982:	89 2e       	mov	r8, r25
   12984:	25 e6       	ldi	r18, 0x65	; 101
   12986:	a2 2e       	mov	r10, r18
   12988:	3a c0       	rjmp	.+116    	; 0x129fe <_Z12Pub_Sub_DataPcPhjh+0x61a>
   1298a:	94 e6       	ldi	r25, 0x64	; 100
   1298c:	99 15       	cp	r25, r9
   1298e:	d0 f6       	brcc	.-76     	; 0x12944 <_Z12Pub_Sub_DataPcPhjh+0x560>
   12990:	89 2d       	mov	r24, r9
   12992:	90 e0       	ldi	r25, 0x00	; 0
   12994:	85 56       	subi	r24, 0x65	; 101
   12996:	91 09       	sbc	r25, r1
   12998:	2b e1       	ldi	r18, 0x1B	; 27
   1299a:	28 9f       	mul	r18, r24
   1299c:	f0 01       	movw	r30, r0
   1299e:	29 9f       	mul	r18, r25
   129a0:	f0 0d       	add	r31, r0
   129a2:	11 24       	eor	r1, r1
   129a4:	ea 57       	subi	r30, 0x7A	; 122
   129a6:	f2 4f       	sbci	r31, 0xF2	; 242
   129a8:	c8 cf       	rjmp	.-112    	; 0x1293a <_Z12Pub_Sub_DataPcPhjh+0x556>
   129aa:	90 35       	cpi	r25, 0x50	; 80
   129ac:	09 f4       	brne	.+2      	; 0x129b0 <_Z12Pub_Sub_DataPcPhjh+0x5cc>
   129ae:	44 c2       	rjmp	.+1160   	; 0x12e38 <_Z12Pub_Sub_DataPcPhjh+0xa54>
   129b0:	80 33       	cpi	r24, 0x30	; 48
   129b2:	c9 f1       	breq	.+114    	; 0x12a26 <_Z12Pub_Sub_DataPcPhjh+0x642>
   129b4:	88 23       	and	r24, r24
   129b6:	b9 f1       	breq	.+110    	; 0x12a26 <_Z12Pub_Sub_DataPcPhjh+0x642>
   129b8:	80 53       	subi	r24, 0x30	; 48
   129ba:	91 81       	ldd	r25, Z+1	; 0x01
   129bc:	99 23       	and	r25, r25
   129be:	31 f0       	breq	.+12     	; 0x129cc <_Z12Pub_Sub_DataPcPhjh+0x5e8>
   129c0:	90 53       	subi	r25, 0x30	; 48
   129c2:	fa e0       	ldi	r31, 0x0A	; 10
   129c4:	8f 9f       	mul	r24, r31
   129c6:	90 0d       	add	r25, r0
   129c8:	11 24       	eor	r1, r1
   129ca:	89 2f       	mov	r24, r25
   129cc:	2e e0       	ldi	r18, 0x0E	; 14
   129ce:	29 15       	cp	r18, r9
   129d0:	e8 f4       	brcc	.+58     	; 0x12a0c <_Z12Pub_Sub_DataPcPhjh+0x628>
   129d2:	f4 e6       	ldi	r31, 0x64	; 100
   129d4:	f9 15       	cp	r31, r9
   129d6:	08 f1       	brcs	.+66     	; 0x12a1a <_Z12Pub_Sub_DataPcPhjh+0x636>
   129d8:	38 e0       	ldi	r19, 0x08	; 8
   129da:	23 0e       	add	r2, r19
   129dc:	31 1c       	adc	r3, r1
   129de:	4f ef       	ldi	r20, 0xFF	; 255
   129e0:	e4 1a       	sub	r14, r20
   129e2:	f4 0a       	sbc	r15, r20
   129e4:	5f ef       	ldi	r21, 0xFF	; 255
   129e6:	c5 1a       	sub	r12, r21
   129e8:	d5 0a       	sbc	r13, r21
   129ea:	c3 54       	subi	r28, 0x43	; 67
   129ec:	d9 4f       	sbci	r29, 0xF9	; 249
   129ee:	88 81       	ld	r24, Y
   129f0:	99 81       	ldd	r25, Y+1	; 0x01
   129f2:	cd 5b       	subi	r28, 0xBD	; 189
   129f4:	d6 40       	sbci	r29, 0x06	; 6
   129f6:	28 16       	cp	r2, r24
   129f8:	39 06       	cpc	r3, r25
   129fa:	09 f4       	brne	.+2      	; 0x129fe <_Z12Pub_Sub_DataPcPhjh+0x61a>
   129fc:	5b c3       	rjmp	.+1718   	; 0x130b4 <_Z12Pub_Sub_DataPcPhjh+0xcd0>
   129fe:	f1 01       	movw	r30, r2
   12a00:	80 81       	ld	r24, Z
   12a02:	98 2f       	mov	r25, r24
   12a04:	9f 7d       	andi	r25, 0xDF	; 223
   12a06:	96 35       	cpi	r25, 0x56	; 86
   12a08:	81 f6       	brne	.-96     	; 0x129aa <_Z12Pub_Sub_DataPcPhjh+0x5c6>
   12a0a:	19 c0       	rjmp	.+50     	; 0x12a3e <_Z12Pub_Sub_DataPcPhjh+0x65a>
   12a0c:	8b 5e       	subi	r24, 0xEB	; 235
   12a0e:	8e 32       	cpi	r24, 0x2E	; 46
   12a10:	10 f4       	brcc	.+4      	; 0x12a16 <_Z12Pub_Sub_DataPcPhjh+0x632>
   12a12:	d7 01       	movw	r26, r14
   12a14:	06 c0       	rjmp	.+12     	; 0x12a22 <_Z12Pub_Sub_DataPcPhjh+0x63e>
   12a16:	f7 01       	movw	r30, r14
   12a18:	10 c0       	rjmp	.+32     	; 0x12a3a <_Z12Pub_Sub_DataPcPhjh+0x656>
   12a1a:	8b 5e       	subi	r24, 0xEB	; 235
   12a1c:	8e 32       	cpi	r24, 0x2E	; 46
   12a1e:	60 f4       	brcc	.+24     	; 0x12a38 <_Z12Pub_Sub_DataPcPhjh+0x654>
   12a20:	d6 01       	movw	r26, r12
   12a22:	8c 93       	st	X, r24
   12a24:	d9 cf       	rjmp	.-78     	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12a26:	fe e0       	ldi	r31, 0x0E	; 14
   12a28:	f9 15       	cp	r31, r9
   12a2a:	18 f0       	brcs	.+6      	; 0x12a32 <_Z12Pub_Sub_DataPcPhjh+0x64e>
   12a2c:	d7 01       	movw	r26, r14
   12a2e:	1c 92       	st	X, r1
   12a30:	d3 cf       	rjmp	.-90     	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12a32:	b4 e6       	ldi	r27, 0x64	; 100
   12a34:	b9 15       	cp	r27, r9
   12a36:	80 f6       	brcc	.-96     	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12a38:	f6 01       	movw	r30, r12
   12a3a:	10 82       	st	Z, r1
   12a3c:	cd cf       	rjmp	.-102    	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12a3e:	47 e4       	ldi	r20, 0x47	; 71
   12a40:	53 e1       	ldi	r21, 0x13	; 19
   12a42:	80 e0       	ldi	r24, 0x00	; 0
   12a44:	90 e0       	ldi	r25, 0x00	; 0
   12a46:	68 2f       	mov	r22, r24
   12a48:	20 e0       	ldi	r18, 0x00	; 0
   12a4a:	30 e0       	ldi	r19, 0x00	; 0
   12a4c:	70 e0       	ldi	r23, 0x00	; 0
   12a4e:	f9 01       	movw	r30, r18
   12a50:	e1 5a       	subi	r30, 0xA1	; 161
   12a52:	ff 4f       	sbci	r31, 0xFF	; 255
   12a54:	e4 0f       	add	r30, r20
   12a56:	f5 1f       	adc	r31, r21
   12a58:	a0 81       	ld	r26, Z
   12a5a:	f1 01       	movw	r30, r2
   12a5c:	e2 0f       	add	r30, r18
   12a5e:	f3 1f       	adc	r31, r19
   12a60:	e0 81       	ld	r30, Z
   12a62:	ae 13       	cpse	r26, r30
   12a64:	01 c0       	rjmp	.+2      	; 0x12a68 <_Z12Pub_Sub_DataPcPhjh+0x684>
   12a66:	7f 5f       	subi	r23, 0xFF	; 255
   12a68:	2f 5f       	subi	r18, 0xFF	; 255
   12a6a:	3f 4f       	sbci	r19, 0xFF	; 255
   12a6c:	26 30       	cpi	r18, 0x06	; 6
   12a6e:	31 05       	cpc	r19, r1
   12a70:	71 f7       	brne	.-36     	; 0x12a4e <_Z12Pub_Sub_DataPcPhjh+0x66a>
   12a72:	76 30       	cpi	r23, 0x06	; 6
   12a74:	09 f0       	breq	.+2      	; 0x12a78 <_Z12Pub_Sub_DataPcPhjh+0x694>
   12a76:	7a c0       	rjmp	.+244    	; 0x12b6c <_Z12Pub_Sub_DataPcPhjh+0x788>
   12a78:	20 91 37 14 	lds	r18, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12a7c:	fe e0       	ldi	r31, 0x0E	; 14
   12a7e:	f9 15       	cp	r31, r9
   12a80:	70 f1       	brcs	.+92     	; 0x12ade <_Z12Pub_Sub_DataPcPhjh+0x6fa>
   12a82:	d1 01       	movw	r26, r2
   12a84:	17 96       	adiw	r26, 0x07	; 7
   12a86:	3c 91       	ld	r19, X
   12a88:	32 33       	cpi	r19, 0x32	; 50
   12a8a:	89 f0       	breq	.+34     	; 0x12aae <_Z12Pub_Sub_DataPcPhjh+0x6ca>
   12a8c:	33 33       	cpi	r19, 0x33	; 51
   12a8e:	d9 f0       	breq	.+54     	; 0x12ac6 <_Z12Pub_Sub_DataPcPhjh+0x6e2>
   12a90:	31 33       	cpi	r19, 0x31	; 49
   12a92:	09 f0       	breq	.+2      	; 0x12a96 <_Z12Pub_Sub_DataPcPhjh+0x6b2>
   12a94:	5c c0       	rjmp	.+184    	; 0x12b4e <_Z12Pub_Sub_DataPcPhjh+0x76a>
   12a96:	86 2f       	mov	r24, r22
   12a98:	88 0f       	add	r24, r24
   12a9a:	68 0f       	add	r22, r24
   12a9c:	6f 5f       	subi	r22, 0xFF	; 255
   12a9e:	f7 01       	movw	r30, r14
   12aa0:	60 83       	st	Z, r22
   12aa2:	21 30       	cpi	r18, 0x01	; 1
   12aa4:	09 f0       	breq	.+2      	; 0x12aa8 <_Z12Pub_Sub_DataPcPhjh+0x6c4>
   12aa6:	69 c0       	rjmp	.+210    	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12aa8:	65 ef       	ldi	r22, 0xF5	; 245
   12aaa:	79 e3       	ldi	r23, 0x39	; 57
   12aac:	44 c0       	rjmp	.+136    	; 0x12b36 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12aae:	86 2f       	mov	r24, r22
   12ab0:	88 0f       	add	r24, r24
   12ab2:	68 0f       	add	r22, r24
   12ab4:	6e 5f       	subi	r22, 0xFE	; 254
   12ab6:	d7 01       	movw	r26, r14
   12ab8:	6c 93       	st	X, r22
   12aba:	21 30       	cpi	r18, 0x01	; 1
   12abc:	09 f0       	breq	.+2      	; 0x12ac0 <_Z12Pub_Sub_DataPcPhjh+0x6dc>
   12abe:	5d c0       	rjmp	.+186    	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12ac0:	6a ed       	ldi	r22, 0xDA	; 218
   12ac2:	79 e3       	ldi	r23, 0x39	; 57
   12ac4:	38 c0       	rjmp	.+112    	; 0x12b36 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12ac6:	01 96       	adiw	r24, 0x01	; 1
   12ac8:	98 2f       	mov	r25, r24
   12aca:	99 0f       	add	r25, r25
   12acc:	89 0f       	add	r24, r25
   12ace:	f7 01       	movw	r30, r14
   12ad0:	80 83       	st	Z, r24
   12ad2:	21 30       	cpi	r18, 0x01	; 1
   12ad4:	09 f0       	breq	.+2      	; 0x12ad8 <_Z12Pub_Sub_DataPcPhjh+0x6f4>
   12ad6:	51 c0       	rjmp	.+162    	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12ad8:	6f eb       	ldi	r22, 0xBF	; 191
   12ada:	79 e3       	ldi	r23, 0x39	; 57
   12adc:	2c c0       	rjmp	.+88     	; 0x12b36 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12ade:	f4 e6       	ldi	r31, 0x64	; 100
   12ae0:	f9 15       	cp	r31, r9
   12ae2:	a8 f5       	brcc	.+106    	; 0x12b4e <_Z12Pub_Sub_DataPcPhjh+0x76a>
   12ae4:	d1 01       	movw	r26, r2
   12ae6:	17 96       	adiw	r26, 0x07	; 7
   12ae8:	3c 91       	ld	r19, X
   12aea:	32 33       	cpi	r19, 0x32	; 50
   12aec:	79 f0       	breq	.+30     	; 0x12b0c <_Z12Pub_Sub_DataPcPhjh+0x728>
   12aee:	33 33       	cpi	r19, 0x33	; 51
   12af0:	c1 f0       	breq	.+48     	; 0x12b22 <_Z12Pub_Sub_DataPcPhjh+0x73e>
   12af2:	31 33       	cpi	r19, 0x31	; 49
   12af4:	61 f5       	brne	.+88     	; 0x12b4e <_Z12Pub_Sub_DataPcPhjh+0x76a>
   12af6:	86 2f       	mov	r24, r22
   12af8:	88 0f       	add	r24, r24
   12afa:	68 0f       	add	r22, r24
   12afc:	6f 5f       	subi	r22, 0xFF	; 255
   12afe:	f6 01       	movw	r30, r12
   12b00:	60 83       	st	Z, r22
   12b02:	21 30       	cpi	r18, 0x01	; 1
   12b04:	d1 f5       	brne	.+116    	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12b06:	64 ea       	ldi	r22, 0xA4	; 164
   12b08:	79 e3       	ldi	r23, 0x39	; 57
   12b0a:	15 c0       	rjmp	.+42     	; 0x12b36 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12b0c:	86 2f       	mov	r24, r22
   12b0e:	88 0f       	add	r24, r24
   12b10:	68 0f       	add	r22, r24
   12b12:	6e 5f       	subi	r22, 0xFE	; 254
   12b14:	d6 01       	movw	r26, r12
   12b16:	6c 93       	st	X, r22
   12b18:	21 30       	cpi	r18, 0x01	; 1
   12b1a:	79 f5       	brne	.+94     	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12b1c:	69 e8       	ldi	r22, 0x89	; 137
   12b1e:	79 e3       	ldi	r23, 0x39	; 57
   12b20:	0a c0       	rjmp	.+20     	; 0x12b36 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12b22:	01 96       	adiw	r24, 0x01	; 1
   12b24:	98 2f       	mov	r25, r24
   12b26:	99 0f       	add	r25, r25
   12b28:	89 0f       	add	r24, r25
   12b2a:	f6 01       	movw	r30, r12
   12b2c:	80 83       	st	Z, r24
   12b2e:	21 30       	cpi	r18, 0x01	; 1
   12b30:	21 f5       	brne	.+72     	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12b32:	6e e6       	ldi	r22, 0x6E	; 110
   12b34:	79 e3       	ldi	r23, 0x39	; 57
   12b36:	82 e5       	ldi	r24, 0x52	; 82
   12b38:	94 e1       	ldi	r25, 0x14	; 20
   12b3a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12b3e:	82 e5       	ldi	r24, 0x52	; 82
   12b40:	94 e1       	ldi	r25, 0x14	; 20
   12b42:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12b46:	82 e5       	ldi	r24, 0x52	; 82
   12b48:	94 e1       	ldi	r25, 0x14	; 20
   12b4a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12b4e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12b52:	81 30       	cpi	r24, 0x01	; 1
   12b54:	91 f4       	brne	.+36     	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12b56:	6d e5       	ldi	r22, 0x5D	; 93
   12b58:	79 e3       	ldi	r23, 0x39	; 57
   12b5a:	82 e5       	ldi	r24, 0x52	; 82
   12b5c:	94 e1       	ldi	r25, 0x14	; 20
   12b5e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12b62:	82 e5       	ldi	r24, 0x52	; 82
   12b64:	94 e1       	ldi	r25, 0x14	; 20
   12b66:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12b6a:	07 c0       	rjmp	.+14     	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12b6c:	01 96       	adiw	r24, 0x01	; 1
   12b6e:	49 5f       	subi	r20, 0xF9	; 249
   12b70:	5f 4f       	sbci	r21, 0xFF	; 255
   12b72:	86 30       	cpi	r24, 0x06	; 6
   12b74:	91 05       	cpc	r25, r1
   12b76:	09 f0       	breq	.+2      	; 0x12b7a <_Z12Pub_Sub_DataPcPhjh+0x796>
   12b78:	66 cf       	rjmp	.-308    	; 0x12a46 <_Z12Pub_Sub_DataPcPhjh+0x662>
   12b7a:	d7 01       	movw	r26, r14
   12b7c:	8c 91       	ld	r24, X
   12b7e:	81 11       	cpse	r24, r1
   12b80:	03 c0       	rjmp	.+6      	; 0x12b88 <_Z12Pub_Sub_DataPcPhjh+0x7a4>
   12b82:	be e0       	ldi	r27, 0x0E	; 14
   12b84:	b9 15       	cp	r27, r9
   12b86:	40 f4       	brcc	.+16     	; 0x12b98 <_Z12Pub_Sub_DataPcPhjh+0x7b4>
   12b88:	f6 01       	movw	r30, r12
   12b8a:	80 81       	ld	r24, Z
   12b8c:	81 11       	cpse	r24, r1
   12b8e:	24 cf       	rjmp	.-440    	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12b90:	fe e0       	ldi	r31, 0x0E	; 14
   12b92:	f9 15       	cp	r31, r9
   12b94:	08 f0       	brcs	.+2      	; 0x12b98 <_Z12Pub_Sub_DataPcPhjh+0x7b4>
   12b96:	20 cf       	rjmp	.-448    	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12b98:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12b9c:	81 30       	cpi	r24, 0x01	; 1
   12b9e:	51 f4       	brne	.+20     	; 0x12bb4 <_Z12Pub_Sub_DataPcPhjh+0x7d0>
   12ba0:	64 e4       	ldi	r22, 0x44	; 68
   12ba2:	79 e3       	ldi	r23, 0x39	; 57
   12ba4:	82 e5       	ldi	r24, 0x52	; 82
   12ba6:	94 e1       	ldi	r25, 0x14	; 20
   12ba8:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12bac:	82 e5       	ldi	r24, 0x52	; 82
   12bae:	94 e1       	ldi	r25, 0x14	; 20
   12bb0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12bb4:	e7 eb       	ldi	r30, 0xB7	; 183
   12bb6:	fb e0       	ldi	r31, 0x0B	; 11
   12bb8:	b1 2c       	mov	r11, r1
   12bba:	80 81       	ld	r24, Z
   12bbc:	88 23       	and	r24, r24
   12bbe:	29 f0       	breq	.+10     	; 0x12bca <_Z12Pub_Sub_DataPcPhjh+0x7e6>
   12bc0:	b3 94       	inc	r11
   12bc2:	3d 96       	adiw	r30, 0x0d	; 13
   12bc4:	26 e0       	ldi	r18, 0x06	; 6
   12bc6:	b2 12       	cpse	r11, r18
   12bc8:	f8 cf       	rjmp	.-16     	; 0x12bba <_Z12Pub_Sub_DataPcPhjh+0x7d6>
   12bca:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12bce:	81 30       	cpi	r24, 0x01	; 1
   12bd0:	c9 f4       	brne	.+50     	; 0x12c04 <_Z12Pub_Sub_DataPcPhjh+0x820>
   12bd2:	82 e5       	ldi	r24, 0x52	; 82
   12bd4:	94 e1       	ldi	r25, 0x14	; 20
   12bd6:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12bda:	60 e3       	ldi	r22, 0x30	; 48
   12bdc:	79 e3       	ldi	r23, 0x39	; 57
   12bde:	82 e5       	ldi	r24, 0x52	; 82
   12be0:	94 e1       	ldi	r25, 0x14	; 20
   12be2:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12be6:	82 e5       	ldi	r24, 0x52	; 82
   12be8:	94 e1       	ldi	r25, 0x14	; 20
   12bea:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12bee:	4a e0       	ldi	r20, 0x0A	; 10
   12bf0:	50 e0       	ldi	r21, 0x00	; 0
   12bf2:	6b 2d       	mov	r22, r11
   12bf4:	82 e5       	ldi	r24, 0x52	; 82
   12bf6:	94 e1       	ldi	r25, 0x14	; 20
   12bf8:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   12bfc:	82 e5       	ldi	r24, 0x52	; 82
   12bfe:	94 e1       	ldi	r25, 0x14	; 20
   12c00:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12c04:	3d e0       	ldi	r19, 0x0D	; 13
   12c06:	b3 9e       	mul	r11, r19
   12c08:	a0 01       	movw	r20, r0
   12c0a:	11 24       	eor	r1, r1
   12c0c:	80 e0       	ldi	r24, 0x00	; 0
   12c0e:	90 e0       	ldi	r25, 0x00	; 0
   12c10:	0b 2d       	mov	r16, r11
   12c12:	10 e0       	ldi	r17, 0x00	; 0
   12c14:	fa 01       	movw	r30, r20
   12c16:	e8 0f       	add	r30, r24
   12c18:	f9 1f       	adc	r31, r25
   12c1a:	e9 54       	subi	r30, 0x49	; 73
   12c1c:	f4 4f       	sbci	r31, 0xF4	; 244
   12c1e:	d1 01       	movw	r26, r2
   12c20:	a8 0f       	add	r26, r24
   12c22:	b9 1f       	adc	r27, r25
   12c24:	2c 91       	ld	r18, X
   12c26:	21 83       	std	Z+1, r18	; 0x01
   12c28:	01 96       	adiw	r24, 0x01	; 1
   12c2a:	86 30       	cpi	r24, 0x06	; 6
   12c2c:	91 05       	cpc	r25, r1
   12c2e:	91 f7       	brne	.-28     	; 0x12c14 <_Z12Pub_Sub_DataPcPhjh+0x830>
   12c30:	8d e0       	ldi	r24, 0x0D	; 13
   12c32:	80 9f       	mul	r24, r16
   12c34:	a0 01       	movw	r20, r0
   12c36:	81 9f       	mul	r24, r17
   12c38:	50 0d       	add	r21, r0
   12c3a:	11 24       	eor	r1, r1
   12c3c:	cc 54       	subi	r28, 0x4C	; 76
   12c3e:	d9 4f       	sbci	r29, 0xF9	; 249
   12c40:	59 83       	std	Y+1, r21	; 0x01
   12c42:	48 83       	st	Y, r20
   12c44:	c4 5b       	subi	r28, 0xB4	; 180
   12c46:	d6 40       	sbci	r29, 0x06	; 6
   12c48:	48 54       	subi	r20, 0x48	; 72
   12c4a:	54 4f       	sbci	r21, 0xF4	; 244
   12c4c:	c7 54       	subi	r28, 0x47	; 71
   12c4e:	d9 4f       	sbci	r29, 0xF9	; 249
   12c50:	59 83       	std	Y+1, r21	; 0x01
   12c52:	48 83       	st	Y, r20
   12c54:	c9 5b       	subi	r28, 0xB9	; 185
   12c56:	d6 40       	sbci	r29, 0x06	; 6
   12c58:	a7 e0       	ldi	r26, 0x07	; 7
   12c5a:	a0 9f       	mul	r26, r16
   12c5c:	c0 01       	movw	r24, r0
   12c5e:	a1 9f       	mul	r26, r17
   12c60:	90 0d       	add	r25, r0
   12c62:	11 24       	eor	r1, r1
   12c64:	ba 01       	movw	r22, r20
   12c66:	8a 55       	subi	r24, 0x5A	; 90
   12c68:	9c 4e       	sbci	r25, 0xEC	; 236
   12c6a:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   12c6e:	cc 54       	subi	r28, 0x4C	; 76
   12c70:	d9 4f       	sbci	r29, 0xF9	; 249
   12c72:	e8 81       	ld	r30, Y
   12c74:	f9 81       	ldd	r31, Y+1	; 0x01
   12c76:	c4 5b       	subi	r28, 0xB4	; 180
   12c78:	d6 40       	sbci	r29, 0x06	; 6
   12c7a:	e9 54       	subi	r30, 0x49	; 73
   12c7c:	f4 4f       	sbci	r31, 0xF4	; 244
   12c7e:	cc 54       	subi	r28, 0x4C	; 76
   12c80:	d9 4f       	sbci	r29, 0xF9	; 249
   12c82:	f9 83       	std	Y+1, r31	; 0x01
   12c84:	e8 83       	st	Y, r30
   12c86:	c4 5b       	subi	r28, 0xB4	; 180
   12c88:	d6 40       	sbci	r29, 0x06	; 6
   12c8a:	81 e0       	ldi	r24, 0x01	; 1
   12c8c:	8b 0d       	add	r24, r11
   12c8e:	80 83       	st	Z, r24
   12c90:	2f ef       	ldi	r18, 0xFF	; 255
   12c92:	30 e0       	ldi	r19, 0x00	; 0
   12c94:	31 87       	std	Z+9, r19	; 0x09
   12c96:	20 87       	std	Z+8, r18	; 0x08
   12c98:	31 e0       	ldi	r19, 0x01	; 1
   12c9a:	33 87       	std	Z+11, r19	; 0x0b
   12c9c:	12 86       	std	Z+10, r1	; 0x0a
   12c9e:	14 86       	std	Z+12, r1	; 0x0c
   12ca0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12ca4:	81 30       	cpi	r24, 0x01	; 1
   12ca6:	09 f0       	breq	.+2      	; 0x12caa <_Z12Pub_Sub_DataPcPhjh+0x8c6>
   12ca8:	45 c0       	rjmp	.+138    	; 0x12d34 <_Z12Pub_Sub_DataPcPhjh+0x950>
   12caa:	82 e5       	ldi	r24, 0x52	; 82
   12cac:	94 e1       	ldi	r25, 0x14	; 20
   12cae:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12cb2:	65 e1       	ldi	r22, 0x15	; 21
   12cb4:	79 e3       	ldi	r23, 0x39	; 57
   12cb6:	82 e5       	ldi	r24, 0x52	; 82
   12cb8:	94 e1       	ldi	r25, 0x14	; 20
   12cba:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12cbe:	82 e5       	ldi	r24, 0x52	; 82
   12cc0:	94 e1       	ldi	r25, 0x14	; 20
   12cc2:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12cc6:	82 e5       	ldi	r24, 0x52	; 82
   12cc8:	94 e1       	ldi	r25, 0x14	; 20
   12cca:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12cce:	6a e0       	ldi	r22, 0x0A	; 10
   12cd0:	79 e3       	ldi	r23, 0x39	; 57
   12cd2:	82 e5       	ldi	r24, 0x52	; 82
   12cd4:	94 e1       	ldi	r25, 0x14	; 20
   12cd6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12cda:	4a e0       	ldi	r20, 0x0A	; 10
   12cdc:	50 e0       	ldi	r21, 0x00	; 0
   12cde:	cc 54       	subi	r28, 0x4C	; 76
   12ce0:	d9 4f       	sbci	r29, 0xF9	; 249
   12ce2:	a8 81       	ld	r26, Y
   12ce4:	b9 81       	ldd	r27, Y+1	; 0x01
   12ce6:	c4 5b       	subi	r28, 0xB4	; 180
   12ce8:	d6 40       	sbci	r29, 0x06	; 6
   12cea:	6c 91       	ld	r22, X
   12cec:	82 e5       	ldi	r24, 0x52	; 82
   12cee:	94 e1       	ldi	r25, 0x14	; 20
   12cf0:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   12cf4:	82 e5       	ldi	r24, 0x52	; 82
   12cf6:	94 e1       	ldi	r25, 0x14	; 20
   12cf8:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12cfc:	82 e5       	ldi	r24, 0x52	; 82
   12cfe:	94 e1       	ldi	r25, 0x14	; 20
   12d00:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12d04:	6f ef       	ldi	r22, 0xFF	; 255
   12d06:	78 e3       	ldi	r23, 0x38	; 56
   12d08:	82 e5       	ldi	r24, 0x52	; 82
   12d0a:	94 e1       	ldi	r25, 0x14	; 20
   12d0c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12d10:	c7 54       	subi	r28, 0x47	; 71
   12d12:	d9 4f       	sbci	r29, 0xF9	; 249
   12d14:	68 81       	ld	r22, Y
   12d16:	79 81       	ldd	r23, Y+1	; 0x01
   12d18:	c9 5b       	subi	r28, 0xB9	; 185
   12d1a:	d6 40       	sbci	r29, 0x06	; 6
   12d1c:	82 e5       	ldi	r24, 0x52	; 82
   12d1e:	94 e1       	ldi	r25, 0x14	; 20
   12d20:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   12d24:	82 e5       	ldi	r24, 0x52	; 82
   12d26:	94 e1       	ldi	r25, 0x14	; 20
   12d28:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12d2c:	82 e5       	ldi	r24, 0x52	; 82
   12d2e:	94 e1       	ldi	r25, 0x14	; 20
   12d30:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12d34:	be e0       	ldi	r27, 0x0E	; 14
   12d36:	b9 15       	cp	r27, r9
   12d38:	a0 f1       	brcs	.+104    	; 0x12da2 <_Z12Pub_Sub_DataPcPhjh+0x9be>
   12d3a:	f1 01       	movw	r30, r2
   12d3c:	87 81       	ldd	r24, Z+7	; 0x07
   12d3e:	82 33       	cpi	r24, 0x32	; 50
   12d40:	99 f0       	breq	.+38     	; 0x12d68 <_Z12Pub_Sub_DataPcPhjh+0x984>
   12d42:	83 33       	cpi	r24, 0x33	; 51
   12d44:	f9 f0       	breq	.+62     	; 0x12d84 <_Z12Pub_Sub_DataPcPhjh+0x9a0>
   12d46:	81 33       	cpi	r24, 0x31	; 49
   12d48:	09 f0       	breq	.+2      	; 0x12d4c <_Z12Pub_Sub_DataPcPhjh+0x968>
   12d4a:	72 c0       	rjmp	.+228    	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d4c:	8b 2d       	mov	r24, r11
   12d4e:	88 0f       	add	r24, r24
   12d50:	8b 0d       	add	r24, r11
   12d52:	8f 5f       	subi	r24, 0xFF	; 255
   12d54:	d7 01       	movw	r26, r14
   12d56:	8c 93       	st	X, r24
   12d58:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12d5c:	81 30       	cpi	r24, 0x01	; 1
   12d5e:	09 f0       	breq	.+2      	; 0x12d62 <_Z12Pub_Sub_DataPcPhjh+0x97e>
   12d60:	67 c0       	rjmp	.+206    	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d62:	60 ee       	ldi	r22, 0xE0	; 224
   12d64:	78 e3       	ldi	r23, 0x38	; 56
   12d66:	58 c0       	rjmp	.+176    	; 0x12e18 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12d68:	8b 2d       	mov	r24, r11
   12d6a:	88 0f       	add	r24, r24
   12d6c:	8b 0d       	add	r24, r11
   12d6e:	8e 5f       	subi	r24, 0xFE	; 254
   12d70:	f7 01       	movw	r30, r14
   12d72:	80 83       	st	Z, r24
   12d74:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12d78:	81 30       	cpi	r24, 0x01	; 1
   12d7a:	09 f0       	breq	.+2      	; 0x12d7e <_Z12Pub_Sub_DataPcPhjh+0x99a>
   12d7c:	59 c0       	rjmp	.+178    	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d7e:	61 ec       	ldi	r22, 0xC1	; 193
   12d80:	78 e3       	ldi	r23, 0x38	; 56
   12d82:	4a c0       	rjmp	.+148    	; 0x12e18 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12d84:	0f 5f       	subi	r16, 0xFF	; 255
   12d86:	1f 4f       	sbci	r17, 0xFF	; 255
   12d88:	80 2f       	mov	r24, r16
   12d8a:	88 0f       	add	r24, r24
   12d8c:	08 0f       	add	r16, r24
   12d8e:	d7 01       	movw	r26, r14
   12d90:	0c 93       	st	X, r16
   12d92:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12d96:	81 30       	cpi	r24, 0x01	; 1
   12d98:	09 f0       	breq	.+2      	; 0x12d9c <_Z12Pub_Sub_DataPcPhjh+0x9b8>
   12d9a:	4a c0       	rjmp	.+148    	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12d9c:	62 ea       	ldi	r22, 0xA2	; 162
   12d9e:	78 e3       	ldi	r23, 0x38	; 56
   12da0:	3b c0       	rjmp	.+118    	; 0x12e18 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12da2:	b4 e6       	ldi	r27, 0x64	; 100
   12da4:	b9 15       	cp	r27, r9
   12da6:	08 f0       	brcs	.+2      	; 0x12daa <_Z12Pub_Sub_DataPcPhjh+0x9c6>
   12da8:	43 c0       	rjmp	.+134    	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12daa:	f1 01       	movw	r30, r2
   12dac:	87 81       	ldd	r24, Z+7	; 0x07
   12dae:	82 33       	cpi	r24, 0x32	; 50
   12db0:	c9 f0       	breq	.+50     	; 0x12de4 <_Z12Pub_Sub_DataPcPhjh+0xa00>
   12db2:	83 33       	cpi	r24, 0x33	; 51
   12db4:	21 f1       	breq	.+72     	; 0x12dfe <_Z12Pub_Sub_DataPcPhjh+0xa1a>
   12db6:	81 33       	cpi	r24, 0x31	; 49
   12db8:	d9 f5       	brne	.+118    	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12dba:	8b 2d       	mov	r24, r11
   12dbc:	88 0f       	add	r24, r24
   12dbe:	8b 0d       	add	r24, r11
   12dc0:	8f 5f       	subi	r24, 0xFF	; 255
   12dc2:	d6 01       	movw	r26, r12
   12dc4:	8c 93       	st	X, r24
   12dc6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12dca:	81 30       	cpi	r24, 0x01	; 1
   12dcc:	89 f5       	brne	.+98     	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12dce:	67 e8       	ldi	r22, 0x87	; 135
   12dd0:	78 e3       	ldi	r23, 0x38	; 56
   12dd2:	82 e5       	ldi	r24, 0x52	; 82
   12dd4:	94 e1       	ldi	r25, 0x14	; 20
   12dd6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12dda:	82 e5       	ldi	r24, 0x52	; 82
   12ddc:	94 e1       	ldi	r25, 0x14	; 20
   12dde:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12de2:	26 c0       	rjmp	.+76     	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12de4:	8b 2d       	mov	r24, r11
   12de6:	88 0f       	add	r24, r24
   12de8:	8b 0d       	add	r24, r11
   12dea:	8e 5f       	subi	r24, 0xFE	; 254
   12dec:	f6 01       	movw	r30, r12
   12dee:	80 83       	st	Z, r24
   12df0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12df4:	81 30       	cpi	r24, 0x01	; 1
   12df6:	e1 f4       	brne	.+56     	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12df8:	6c e6       	ldi	r22, 0x6C	; 108
   12dfa:	78 e3       	ldi	r23, 0x38	; 56
   12dfc:	0d c0       	rjmp	.+26     	; 0x12e18 <_Z12Pub_Sub_DataPcPhjh+0xa34>
   12dfe:	0f 5f       	subi	r16, 0xFF	; 255
   12e00:	1f 4f       	sbci	r17, 0xFF	; 255
   12e02:	80 2f       	mov	r24, r16
   12e04:	88 0f       	add	r24, r24
   12e06:	08 0f       	add	r16, r24
   12e08:	d6 01       	movw	r26, r12
   12e0a:	0c 93       	st	X, r16
   12e0c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12e10:	81 30       	cpi	r24, 0x01	; 1
   12e12:	71 f4       	brne	.+28     	; 0x12e30 <_Z12Pub_Sub_DataPcPhjh+0xa4c>
   12e14:	61 e5       	ldi	r22, 0x51	; 81
   12e16:	78 e3       	ldi	r23, 0x38	; 56
   12e18:	82 e5       	ldi	r24, 0x52	; 82
   12e1a:	94 e1       	ldi	r25, 0x14	; 20
   12e1c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12e20:	82 e5       	ldi	r24, 0x52	; 82
   12e22:	94 e1       	ldi	r25, 0x14	; 20
   12e24:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12e28:	82 e5       	ldi	r24, 0x52	; 82
   12e2a:	94 e1       	ldi	r25, 0x14	; 20
   12e2c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12e30:	8b 2d       	mov	r24, r11
   12e32:	0e 94 b2 5a 	call	0xb564	; 0xb564 <_Z16Euro_Data_EEPROMh>
   12e36:	d0 cd       	rjmp	.-1120   	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12e38:	47 e4       	ldi	r20, 0x47	; 71
   12e3a:	53 e1       	ldi	r21, 0x13	; 19
   12e3c:	27 e0       	ldi	r18, 0x07	; 7
   12e3e:	80 e0       	ldi	r24, 0x00	; 0
   12e40:	90 e0       	ldi	r25, 0x00	; 0
   12e42:	30 e0       	ldi	r19, 0x00	; 0
   12e44:	fc 01       	movw	r30, r24
   12e46:	e1 5a       	subi	r30, 0xA1	; 161
   12e48:	ff 4f       	sbci	r31, 0xFF	; 255
   12e4a:	e4 0f       	add	r30, r20
   12e4c:	f5 1f       	adc	r31, r21
   12e4e:	70 81       	ld	r23, Z
   12e50:	f1 01       	movw	r30, r2
   12e52:	e8 0f       	add	r30, r24
   12e54:	f9 1f       	adc	r31, r25
   12e56:	60 81       	ld	r22, Z
   12e58:	76 13       	cpse	r23, r22
   12e5a:	01 c0       	rjmp	.+2      	; 0x12e5e <_Z12Pub_Sub_DataPcPhjh+0xa7a>
   12e5c:	3f 5f       	subi	r19, 0xFF	; 255
   12e5e:	01 96       	adiw	r24, 0x01	; 1
   12e60:	86 30       	cpi	r24, 0x06	; 6
   12e62:	91 05       	cpc	r25, r1
   12e64:	79 f7       	brne	.-34     	; 0x12e44 <_Z12Pub_Sub_DataPcPhjh+0xa60>
   12e66:	36 30       	cpi	r19, 0x06	; 6
   12e68:	09 f0       	breq	.+2      	; 0x12e6c <_Z12Pub_Sub_DataPcPhjh+0xa88>
   12e6a:	63 c0       	rjmp	.+198    	; 0x12f32 <_Z12Pub_Sub_DataPcPhjh+0xb4e>
   12e6c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12e70:	be e0       	ldi	r27, 0x0E	; 14
   12e72:	b9 15       	cp	r27, r9
   12e74:	10 f1       	brcs	.+68     	; 0x12eba <_Z12Pub_Sub_DataPcPhjh+0xad6>
   12e76:	f1 01       	movw	r30, r2
   12e78:	97 81       	ldd	r25, Z+7	; 0x07
   12e7a:	92 33       	cpi	r25, 0x32	; 50
   12e7c:	69 f0       	breq	.+26     	; 0x12e98 <_Z12Pub_Sub_DataPcPhjh+0xab4>
   12e7e:	93 33       	cpi	r25, 0x33	; 51
   12e80:	99 f0       	breq	.+38     	; 0x12ea8 <_Z12Pub_Sub_DataPcPhjh+0xac4>
   12e82:	91 33       	cpi	r25, 0x31	; 49
   12e84:	09 f0       	breq	.+2      	; 0x12e88 <_Z12Pub_Sub_DataPcPhjh+0xaa4>
   12e86:	46 c0       	rjmp	.+140    	; 0x12f14 <_Z12Pub_Sub_DataPcPhjh+0xb30>
   12e88:	d7 01       	movw	r26, r14
   12e8a:	ac 92       	st	X, r10
   12e8c:	81 30       	cpi	r24, 0x01	; 1
   12e8e:	09 f0       	breq	.+2      	; 0x12e92 <_Z12Pub_Sub_DataPcPhjh+0xaae>
   12e90:	55 c0       	rjmp	.+170    	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12e92:	66 e3       	ldi	r22, 0x36	; 54
   12e94:	78 e3       	ldi	r23, 0x38	; 56
   12e96:	32 c0       	rjmp	.+100    	; 0x12efc <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12e98:	f7 01       	movw	r30, r14
   12e9a:	80 82       	st	Z, r8
   12e9c:	81 30       	cpi	r24, 0x01	; 1
   12e9e:	09 f0       	breq	.+2      	; 0x12ea2 <_Z12Pub_Sub_DataPcPhjh+0xabe>
   12ea0:	4d c0       	rjmp	.+154    	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12ea2:	6b e1       	ldi	r22, 0x1B	; 27
   12ea4:	78 e3       	ldi	r23, 0x38	; 56
   12ea6:	2a c0       	rjmp	.+84     	; 0x12efc <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12ea8:	e7 e6       	ldi	r30, 0x67	; 103
   12eaa:	d7 01       	movw	r26, r14
   12eac:	ec 93       	st	X, r30
   12eae:	81 30       	cpi	r24, 0x01	; 1
   12eb0:	09 f0       	breq	.+2      	; 0x12eb4 <_Z12Pub_Sub_DataPcPhjh+0xad0>
   12eb2:	44 c0       	rjmp	.+136    	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12eb4:	60 e0       	ldi	r22, 0x00	; 0
   12eb6:	78 e3       	ldi	r23, 0x38	; 56
   12eb8:	21 c0       	rjmp	.+66     	; 0x12efc <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12eba:	f4 e6       	ldi	r31, 0x64	; 100
   12ebc:	f9 15       	cp	r31, r9
   12ebe:	50 f5       	brcc	.+84     	; 0x12f14 <_Z12Pub_Sub_DataPcPhjh+0xb30>
   12ec0:	d1 01       	movw	r26, r2
   12ec2:	17 96       	adiw	r26, 0x07	; 7
   12ec4:	9c 91       	ld	r25, X
   12ec6:	92 33       	cpi	r25, 0x32	; 50
   12ec8:	59 f0       	breq	.+22     	; 0x12ee0 <_Z12Pub_Sub_DataPcPhjh+0xafc>
   12eca:	93 33       	cpi	r25, 0x33	; 51
   12ecc:	81 f0       	breq	.+32     	; 0x12eee <_Z12Pub_Sub_DataPcPhjh+0xb0a>
   12ece:	91 33       	cpi	r25, 0x31	; 49
   12ed0:	09 f5       	brne	.+66     	; 0x12f14 <_Z12Pub_Sub_DataPcPhjh+0xb30>
   12ed2:	f6 01       	movw	r30, r12
   12ed4:	a0 82       	st	Z, r10
   12ed6:	81 30       	cpi	r24, 0x01	; 1
   12ed8:	89 f5       	brne	.+98     	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12eda:	65 ee       	ldi	r22, 0xE5	; 229
   12edc:	77 e3       	ldi	r23, 0x37	; 55
   12ede:	0e c0       	rjmp	.+28     	; 0x12efc <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12ee0:	d6 01       	movw	r26, r12
   12ee2:	8c 92       	st	X, r8
   12ee4:	81 30       	cpi	r24, 0x01	; 1
   12ee6:	51 f5       	brne	.+84     	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12ee8:	6a ec       	ldi	r22, 0xCA	; 202
   12eea:	77 e3       	ldi	r23, 0x37	; 55
   12eec:	07 c0       	rjmp	.+14     	; 0x12efc <_Z12Pub_Sub_DataPcPhjh+0xb18>
   12eee:	27 e6       	ldi	r18, 0x67	; 103
   12ef0:	f6 01       	movw	r30, r12
   12ef2:	20 83       	st	Z, r18
   12ef4:	81 30       	cpi	r24, 0x01	; 1
   12ef6:	11 f5       	brne	.+68     	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12ef8:	6f ea       	ldi	r22, 0xAF	; 175
   12efa:	77 e3       	ldi	r23, 0x37	; 55
   12efc:	82 e5       	ldi	r24, 0x52	; 82
   12efe:	94 e1       	ldi	r25, 0x14	; 20
   12f00:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12f04:	82 e5       	ldi	r24, 0x52	; 82
   12f06:	94 e1       	ldi	r25, 0x14	; 20
   12f08:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12f0c:	82 e5       	ldi	r24, 0x52	; 82
   12f0e:	94 e1       	ldi	r25, 0x14	; 20
   12f10:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12f14:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12f18:	81 30       	cpi	r24, 0x01	; 1
   12f1a:	81 f4       	brne	.+32     	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12f1c:	6e e9       	ldi	r22, 0x9E	; 158
   12f1e:	77 e3       	ldi	r23, 0x37	; 55
   12f20:	82 e5       	ldi	r24, 0x52	; 82
   12f22:	94 e1       	ldi	r25, 0x14	; 20
   12f24:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12f28:	82 e5       	ldi	r24, 0x52	; 82
   12f2a:	94 e1       	ldi	r25, 0x14	; 20
   12f2c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12f30:	05 c0       	rjmp	.+10     	; 0x12f3c <_Z12Pub_Sub_DataPcPhjh+0xb58>
   12f32:	21 50       	subi	r18, 0x01	; 1
   12f34:	49 5f       	subi	r20, 0xF9	; 249
   12f36:	5f 4f       	sbci	r21, 0xFF	; 255
   12f38:	21 11       	cpse	r18, r1
   12f3a:	81 cf       	rjmp	.-254    	; 0x12e3e <_Z12Pub_Sub_DataPcPhjh+0xa5a>
   12f3c:	d7 01       	movw	r26, r14
   12f3e:	8c 91       	ld	r24, X
   12f40:	81 11       	cpse	r24, r1
   12f42:	03 c0       	rjmp	.+6      	; 0x12f4a <_Z12Pub_Sub_DataPcPhjh+0xb66>
   12f44:	be e0       	ldi	r27, 0x0E	; 14
   12f46:	b9 15       	cp	r27, r9
   12f48:	40 f4       	brcc	.+16     	; 0x12f5a <_Z12Pub_Sub_DataPcPhjh+0xb76>
   12f4a:	f6 01       	movw	r30, r12
   12f4c:	80 81       	ld	r24, Z
   12f4e:	81 11       	cpse	r24, r1
   12f50:	43 cd       	rjmp	.-1402   	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12f52:	fe e0       	ldi	r31, 0x0E	; 14
   12f54:	f9 15       	cp	r31, r9
   12f56:	08 f0       	brcs	.+2      	; 0x12f5a <_Z12Pub_Sub_DataPcPhjh+0xb76>
   12f58:	3f cd       	rjmp	.-1410   	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   12f5a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12f5e:	81 30       	cpi	r24, 0x01	; 1
   12f60:	51 f4       	brne	.+20     	; 0x12f76 <_Z12Pub_Sub_DataPcPhjh+0xb92>
   12f62:	65 e8       	ldi	r22, 0x85	; 133
   12f64:	77 e3       	ldi	r23, 0x37	; 55
   12f66:	82 e5       	ldi	r24, 0x52	; 82
   12f68:	94 e1       	ldi	r25, 0x14	; 20
   12f6a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12f6e:	82 e5       	ldi	r24, 0x52	; 82
   12f70:	94 e1       	ldi	r25, 0x14	; 20
   12f72:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12f76:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   12f7a:	81 30       	cpi	r24, 0x01	; 1
   12f7c:	c9 f4       	brne	.+50     	; 0x12fb0 <_Z12Pub_Sub_DataPcPhjh+0xbcc>
   12f7e:	82 e5       	ldi	r24, 0x52	; 82
   12f80:	94 e1       	ldi	r25, 0x14	; 20
   12f82:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12f86:	61 e7       	ldi	r22, 0x71	; 113
   12f88:	77 e3       	ldi	r23, 0x37	; 55
   12f8a:	82 e5       	ldi	r24, 0x52	; 82
   12f8c:	94 e1       	ldi	r25, 0x14	; 20
   12f8e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   12f92:	82 e5       	ldi	r24, 0x52	; 82
   12f94:	94 e1       	ldi	r25, 0x14	; 20
   12f96:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   12f9a:	4a e0       	ldi	r20, 0x0A	; 10
   12f9c:	50 e0       	ldi	r21, 0x00	; 0
   12f9e:	66 e0       	ldi	r22, 0x06	; 6
   12fa0:	82 e5       	ldi	r24, 0x52	; 82
   12fa2:	94 e1       	ldi	r25, 0x14	; 20
   12fa4:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   12fa8:	82 e5       	ldi	r24, 0x52	; 82
   12faa:	94 e1       	ldi	r25, 0x14	; 20
   12fac:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   12fb0:	e7 e9       	ldi	r30, 0x97	; 151
   12fb2:	fb e0       	ldi	r31, 0x0B	; 11
   12fb4:	80 e0       	ldi	r24, 0x00	; 0
   12fb6:	90 e0       	ldi	r25, 0x00	; 0
   12fb8:	d1 01       	movw	r26, r2
   12fba:	a8 0f       	add	r26, r24
   12fbc:	b9 1f       	adc	r27, r25
   12fbe:	2c 91       	ld	r18, X
   12fc0:	21 93       	st	Z+, r18
   12fc2:	22 87       	std	Z+10, r18	; 0x0a
   12fc4:	25 8b       	std	Z+21, r18	; 0x15
   12fc6:	01 96       	adiw	r24, 0x01	; 1
   12fc8:	86 30       	cpi	r24, 0x06	; 6
   12fca:	91 05       	cpc	r25, r1
   12fcc:	a9 f7       	brne	.-22     	; 0x12fb8 <_Z12Pub_Sub_DataPcPhjh+0xbd4>
   12fce:	21 e0       	ldi	r18, 0x01	; 1
   12fd0:	20 93 96 0b 	sts	0x0B96, r18	; 0x800b96 <_sWireless_Pump_Param>
   12fd4:	32 e0       	ldi	r19, 0x02	; 2
   12fd6:	30 93 a1 0b 	sts	0x0BA1, r19	; 0x800ba1 <_sWireless_Pump_Param+0xb>
   12fda:	43 e0       	ldi	r20, 0x03	; 3
   12fdc:	40 93 ac 0b 	sts	0x0BAC, r20	; 0x800bac <_sWireless_Pump_Param+0x16>
   12fe0:	10 92 a0 0b 	sts	0x0BA0, r1	; 0x800ba0 <_sWireless_Pump_Param+0xa>
   12fe4:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sWireless_Pump_Param+0x15>
   12fe8:	10 92 b6 0b 	sts	0x0BB6, r1	; 0x800bb6 <_sWireless_Pump_Param+0x20>
   12fec:	10 92 9f 0b 	sts	0x0B9F, r1	; 0x800b9f <_sWireless_Pump_Param+0x9>
   12ff0:	10 92 9e 0b 	sts	0x0B9E, r1	; 0x800b9e <_sWireless_Pump_Param+0x8>
   12ff4:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sWireless_Pump_Param+0x14>
   12ff8:	10 92 a9 0b 	sts	0x0BA9, r1	; 0x800ba9 <_sWireless_Pump_Param+0x13>
   12ffc:	10 92 b5 0b 	sts	0x0BB5, r1	; 0x800bb5 <_sWireless_Pump_Param+0x1f>
   13000:	10 92 b4 0b 	sts	0x0BB4, r1	; 0x800bb4 <_sWireless_Pump_Param+0x1e>
   13004:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13008:	81 30       	cpi	r24, 0x01	; 1
   1300a:	91 f4       	brne	.+36     	; 0x13030 <_Z12Pub_Sub_DataPcPhjh+0xc4c>
   1300c:	82 e5       	ldi	r24, 0x52	; 82
   1300e:	94 e1       	ldi	r25, 0x14	; 20
   13010:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   13014:	6e e4       	ldi	r22, 0x4E	; 78
   13016:	77 e3       	ldi	r23, 0x37	; 55
   13018:	82 e5       	ldi	r24, 0x52	; 82
   1301a:	94 e1       	ldi	r25, 0x14	; 20
   1301c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13020:	82 e5       	ldi	r24, 0x52	; 82
   13022:	94 e1       	ldi	r25, 0x14	; 20
   13024:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   13028:	82 e5       	ldi	r24, 0x52	; 82
   1302a:	94 e1       	ldi	r25, 0x14	; 20
   1302c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13030:	54 e6       	ldi	r21, 0x64	; 100
   13032:	59 15       	cp	r21, r9
   13034:	30 f5       	brcc	.+76     	; 0x13082 <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   13036:	d1 01       	movw	r26, r2
   13038:	17 96       	adiw	r26, 0x07	; 7
   1303a:	8c 91       	ld	r24, X
   1303c:	82 33       	cpi	r24, 0x32	; 50
   1303e:	69 f0       	breq	.+26     	; 0x1305a <_Z12Pub_Sub_DataPcPhjh+0xc76>
   13040:	83 33       	cpi	r24, 0x33	; 51
   13042:	09 f1       	breq	.+66     	; 0x13086 <_Z12Pub_Sub_DataPcPhjh+0xca2>
   13044:	81 33       	cpi	r24, 0x31	; 49
   13046:	e9 f4       	brne	.+58     	; 0x13082 <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   13048:	f6 01       	movw	r30, r12
   1304a:	a0 82       	st	Z, r10
   1304c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13050:	81 30       	cpi	r24, 0x01	; 1
   13052:	b9 f4       	brne	.+46     	; 0x13082 <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   13054:	63 e3       	ldi	r22, 0x33	; 51
   13056:	77 e3       	ldi	r23, 0x37	; 55
   13058:	08 c0       	rjmp	.+16     	; 0x1306a <_Z12Pub_Sub_DataPcPhjh+0xc86>
   1305a:	d6 01       	movw	r26, r12
   1305c:	8c 92       	st	X, r8
   1305e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13062:	81 30       	cpi	r24, 0x01	; 1
   13064:	71 f4       	brne	.+28     	; 0x13082 <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   13066:	68 e1       	ldi	r22, 0x18	; 24
   13068:	77 e3       	ldi	r23, 0x37	; 55
   1306a:	82 e5       	ldi	r24, 0x52	; 82
   1306c:	94 e1       	ldi	r25, 0x14	; 20
   1306e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13072:	82 e5       	ldi	r24, 0x52	; 82
   13074:	94 e1       	ldi	r25, 0x14	; 20
   13076:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   1307a:	82 e5       	ldi	r24, 0x52	; 82
   1307c:	94 e1       	ldi	r25, 0x14	; 20
   1307e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13082:	10 e0       	ldi	r17, 0x00	; 0
   13084:	0a c0       	rjmp	.+20     	; 0x1309a <_Z12Pub_Sub_DataPcPhjh+0xcb6>
   13086:	27 e6       	ldi	r18, 0x67	; 103
   13088:	f6 01       	movw	r30, r12
   1308a:	20 83       	st	Z, r18
   1308c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13090:	81 30       	cpi	r24, 0x01	; 1
   13092:	b9 f7       	brne	.-18     	; 0x13082 <_Z12Pub_Sub_DataPcPhjh+0xc9e>
   13094:	6d ef       	ldi	r22, 0xFD	; 253
   13096:	76 e3       	ldi	r23, 0x36	; 54
   13098:	e8 cf       	rjmp	.-48     	; 0x1306a <_Z12Pub_Sub_DataPcPhjh+0xc86>
   1309a:	81 2f       	mov	r24, r17
   1309c:	0e 94 ec 5a 	call	0xb5d8	; 0xb5d8 <_Z20Wireless_Pump_EEPROMh>
   130a0:	64 e6       	ldi	r22, 0x64	; 100
   130a2:	70 e0       	ldi	r23, 0x00	; 0
   130a4:	80 e0       	ldi	r24, 0x00	; 0
   130a6:	90 e0       	ldi	r25, 0x00	; 0
   130a8:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   130ac:	1f 5f       	subi	r17, 0xFF	; 255
   130ae:	13 30       	cpi	r17, 0x03	; 3
   130b0:	a1 f7       	brne	.-24     	; 0x1309a <_Z12Pub_Sub_DataPcPhjh+0xcb6>
   130b2:	92 cc       	rjmp	.-1756   	; 0x129d8 <_Z12Pub_Sub_DataPcPhjh+0x5f4>
   130b4:	9e e0       	ldi	r25, 0x0E	; 14
   130b6:	99 15       	cp	r25, r9
   130b8:	08 f4       	brcc	.+2      	; 0x130bc <_Z12Pub_Sub_DataPcPhjh+0xcd8>
   130ba:	f5 c0       	rjmp	.+490    	; 0x132a6 <_Z12Pub_Sub_DataPcPhjh+0xec2>
   130bc:	66 ef       	ldi	r22, 0xF6	; 246
   130be:	76 e3       	ldi	r23, 0x36	; 54
   130c0:	c2 01       	movw	r24, r4
   130c2:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   130c6:	c3 55       	subi	r28, 0x53	; 83
   130c8:	d9 4f       	sbci	r29, 0xF9	; 249
   130ca:	88 83       	st	Y, r24
   130cc:	cd 5a       	subi	r28, 0xAD	; 173
   130ce:	d6 40       	sbci	r29, 0x06	; 6
   130d0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   130d4:	81 30       	cpi	r24, 0x01	; 1
   130d6:	09 f0       	breq	.+2      	; 0x130da <_Z12Pub_Sub_DataPcPhjh+0xcf6>
   130d8:	91 c0       	rjmp	.+290    	; 0x131fc <_Z12Pub_Sub_DataPcPhjh+0xe18>
   130da:	6a ed       	ldi	r22, 0xDA	; 218
   130dc:	76 e3       	ldi	r23, 0x36	; 54
   130de:	82 e5       	ldi	r24, 0x52	; 82
   130e0:	94 e1       	ldi	r25, 0x14	; 20
   130e2:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   130e6:	6d ec       	ldi	r22, 0xCD	; 205
   130e8:	76 e3       	ldi	r23, 0x36	; 54
   130ea:	82 e5       	ldi	r24, 0x52	; 82
   130ec:	94 e1       	ldi	r25, 0x14	; 20
   130ee:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   130f2:	82 e5       	ldi	r24, 0x52	; 82
   130f4:	94 e1       	ldi	r25, 0x14	; 20
   130f6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   130fa:	89 2d       	mov	r24, r9
   130fc:	90 e0       	ldi	r25, 0x00	; 0
   130fe:	01 97       	sbiw	r24, 0x01	; 1
   13100:	26 e0       	ldi	r18, 0x06	; 6
   13102:	28 9f       	mul	r18, r24
   13104:	f0 01       	movw	r30, r0
   13106:	29 9f       	mul	r18, r25
   13108:	f0 0d       	add	r31, r0
   1310a:	11 24       	eor	r1, r1
   1310c:	e3 50       	subi	r30, 0x03	; 3
   1310e:	f3 4f       	sbci	r31, 0xF3	; 243
   13110:	4a e0       	ldi	r20, 0x0A	; 10
   13112:	50 e0       	ldi	r21, 0x00	; 0
   13114:	60 81       	ld	r22, Z
   13116:	82 e5       	ldi	r24, 0x52	; 82
   13118:	94 e1       	ldi	r25, 0x14	; 20
   1311a:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   1311e:	82 e5       	ldi	r24, 0x52	; 82
   13120:	94 e1       	ldi	r25, 0x14	; 20
   13122:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   13126:	82 e5       	ldi	r24, 0x52	; 82
   13128:	94 e1       	ldi	r25, 0x14	; 20
   1312a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1312e:	63 ec       	ldi	r22, 0xC3	; 195
   13130:	76 e3       	ldi	r23, 0x36	; 54
   13132:	82 e5       	ldi	r24, 0x52	; 82
   13134:	94 e1       	ldi	r25, 0x14	; 20
   13136:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1313a:	b3 01       	movw	r22, r6
   1313c:	82 e5       	ldi	r24, 0x52	; 82
   1313e:	94 e1       	ldi	r25, 0x14	; 20
   13140:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   13144:	82 e5       	ldi	r24, 0x52	; 82
   13146:	94 e1       	ldi	r25, 0x14	; 20
   13148:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   1314c:	82 e5       	ldi	r24, 0x52	; 82
   1314e:	94 e1       	ldi	r25, 0x14	; 20
   13150:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13154:	69 eb       	ldi	r22, 0xB9	; 185
   13156:	76 e3       	ldi	r23, 0x36	; 54
   13158:	82 e5       	ldi	r24, 0x52	; 82
   1315a:	94 e1       	ldi	r25, 0x14	; 20
   1315c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13160:	b3 01       	movw	r22, r6
   13162:	68 5f       	subi	r22, 0xF8	; 248
   13164:	7f 4f       	sbci	r23, 0xFF	; 255
   13166:	82 e5       	ldi	r24, 0x52	; 82
   13168:	94 e1       	ldi	r25, 0x14	; 20
   1316a:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   1316e:	82 e5       	ldi	r24, 0x52	; 82
   13170:	94 e1       	ldi	r25, 0x14	; 20
   13172:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   13176:	82 e5       	ldi	r24, 0x52	; 82
   13178:	94 e1       	ldi	r25, 0x14	; 20
   1317a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1317e:	6f ea       	ldi	r22, 0xAF	; 175
   13180:	76 e3       	ldi	r23, 0x36	; 54
   13182:	82 e5       	ldi	r24, 0x52	; 82
   13184:	94 e1       	ldi	r25, 0x14	; 20
   13186:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1318a:	b3 01       	movw	r22, r6
   1318c:	60 5f       	subi	r22, 0xF0	; 240
   1318e:	7f 4f       	sbci	r23, 0xFF	; 255
   13190:	82 e5       	ldi	r24, 0x52	; 82
   13192:	94 e1       	ldi	r25, 0x14	; 20
   13194:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   13198:	82 e5       	ldi	r24, 0x52	; 82
   1319a:	94 e1       	ldi	r25, 0x14	; 20
   1319c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   131a0:	82 e5       	ldi	r24, 0x52	; 82
   131a2:	94 e1       	ldi	r25, 0x14	; 20
   131a4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   131a8:	65 ea       	ldi	r22, 0xA5	; 165
   131aa:	76 e3       	ldi	r23, 0x36	; 54
   131ac:	82 e5       	ldi	r24, 0x52	; 82
   131ae:	94 e1       	ldi	r25, 0x14	; 20
   131b0:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   131b4:	b3 01       	movw	r22, r6
   131b6:	68 5e       	subi	r22, 0xE8	; 232
   131b8:	7f 4f       	sbci	r23, 0xFF	; 255
   131ba:	82 e5       	ldi	r24, 0x52	; 82
   131bc:	94 e1       	ldi	r25, 0x14	; 20
   131be:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   131c2:	82 e5       	ldi	r24, 0x52	; 82
   131c4:	94 e1       	ldi	r25, 0x14	; 20
   131c6:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   131ca:	82 e5       	ldi	r24, 0x52	; 82
   131cc:	94 e1       	ldi	r25, 0x14	; 20
   131ce:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   131d2:	6b e9       	ldi	r22, 0x9B	; 155
   131d4:	76 e3       	ldi	r23, 0x36	; 54
   131d6:	82 e5       	ldi	r24, 0x52	; 82
   131d8:	94 e1       	ldi	r25, 0x14	; 20
   131da:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   131de:	b3 01       	movw	r22, r6
   131e0:	60 5e       	subi	r22, 0xE0	; 224
   131e2:	7f 4f       	sbci	r23, 0xFF	; 255
   131e4:	82 e5       	ldi	r24, 0x52	; 82
   131e6:	94 e1       	ldi	r25, 0x14	; 20
   131e8:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   131ec:	82 e5       	ldi	r24, 0x52	; 82
   131ee:	94 e1       	ldi	r25, 0x14	; 20
   131f0:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   131f4:	82 e5       	ldi	r24, 0x52	; 82
   131f6:	94 e1       	ldi	r25, 0x14	; 20
   131f8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   131fc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13200:	81 30       	cpi	r24, 0x01	; 1
   13202:	71 f0       	breq	.+28     	; 0x13220 <_Z12Pub_Sub_DataPcPhjh+0xe3c>
   13204:	c8 54       	subi	r28, 0x48	; 72
   13206:	d9 4f       	sbci	r29, 0xF9	; 249
   13208:	88 81       	ld	r24, Y
   1320a:	c8 5b       	subi	r28, 0xB8	; 184
   1320c:	d6 40       	sbci	r29, 0x06	; 6
   1320e:	0e 94 00 7e 	call	0xfc00	; 0xfc00 <_Z16Lira_Data_EEPROMh>
   13212:	a1 e0       	ldi	r26, 0x01	; 1
   13214:	c0 55       	subi	r28, 0x50	; 80
   13216:	d9 4f       	sbci	r29, 0xF9	; 249
   13218:	a8 83       	st	Y, r26
   1321a:	c0 5b       	subi	r28, 0xB0	; 176
   1321c:	d6 40       	sbci	r29, 0x06	; 6
   1321e:	85 c1       	rjmp	.+778    	; 0x1352a <_Z12Pub_Sub_DataPcPhjh+0x1146>
   13220:	00 e0       	ldi	r16, 0x00	; 0
   13222:	10 e0       	ldi	r17, 0x00	; 0
   13224:	82 e5       	ldi	r24, 0x52	; 82
   13226:	94 e1       	ldi	r25, 0x14	; 20
   13228:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   1322c:	6f e8       	ldi	r22, 0x8F	; 143
   1322e:	76 e3       	ldi	r23, 0x36	; 54
   13230:	82 e5       	ldi	r24, 0x52	; 82
   13232:	94 e1       	ldi	r25, 0x14	; 20
   13234:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13238:	c5 54       	subi	r28, 0x45	; 69
   1323a:	d9 4f       	sbci	r29, 0xF9	; 249
   1323c:	e8 81       	ld	r30, Y
   1323e:	f9 81       	ldd	r31, Y+1	; 0x01
   13240:	cb 5b       	subi	r28, 0xBB	; 187
   13242:	d6 40       	sbci	r29, 0x06	; 6
   13244:	e0 0f       	add	r30, r16
   13246:	f1 1f       	adc	r31, r17
   13248:	e8 50       	subi	r30, 0x08	; 8
   1324a:	f3 4f       	sbci	r31, 0xF3	; 243
   1324c:	4a e0       	ldi	r20, 0x0A	; 10
   1324e:	50 e0       	ldi	r21, 0x00	; 0
   13250:	60 81       	ld	r22, Z
   13252:	82 e5       	ldi	r24, 0x52	; 82
   13254:	94 e1       	ldi	r25, 0x14	; 20
   13256:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   1325a:	82 e5       	ldi	r24, 0x52	; 82
   1325c:	94 e1       	ldi	r25, 0x14	; 20
   1325e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13262:	0f 5f       	subi	r16, 0xFF	; 255
   13264:	1f 4f       	sbci	r17, 0xFF	; 255
   13266:	05 30       	cpi	r16, 0x05	; 5
   13268:	11 05       	cpc	r17, r1
   1326a:	e1 f6       	brne	.-72     	; 0x13224 <_Z12Pub_Sub_DataPcPhjh+0xe40>
   1326c:	00 e0       	ldi	r16, 0x00	; 0
   1326e:	10 e0       	ldi	r17, 0x00	; 0
   13270:	82 e5       	ldi	r24, 0x52	; 82
   13272:	94 e1       	ldi	r25, 0x14	; 20
   13274:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   13278:	64 e8       	ldi	r22, 0x84	; 132
   1327a:	76 e3       	ldi	r23, 0x36	; 54
   1327c:	82 e5       	ldi	r24, 0x52	; 82
   1327e:	94 e1       	ldi	r25, 0x14	; 20
   13280:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13284:	b8 01       	movw	r22, r16
   13286:	68 54       	subi	r22, 0x48	; 72
   13288:	74 4f       	sbci	r23, 0xF4	; 244
   1328a:	82 e5       	ldi	r24, 0x52	; 82
   1328c:	94 e1       	ldi	r25, 0x14	; 20
   1328e:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   13292:	82 e5       	ldi	r24, 0x52	; 82
   13294:	94 e1       	ldi	r25, 0x14	; 20
   13296:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1329a:	03 5f       	subi	r16, 0xF3	; 243
   1329c:	1f 4f       	sbci	r17, 0xFF	; 255
   1329e:	0b 35       	cpi	r16, 0x5B	; 91
   132a0:	11 05       	cpc	r17, r1
   132a2:	31 f7       	brne	.-52     	; 0x13270 <_Z12Pub_Sub_DataPcPhjh+0xe8c>
   132a4:	af cf       	rjmp	.-162    	; 0x13204 <_Z12Pub_Sub_DataPcPhjh+0xe20>
   132a6:	b4 e6       	ldi	r27, 0x64	; 100
   132a8:	b9 15       	cp	r27, r9
   132aa:	08 f0       	brcs	.+2      	; 0x132ae <_Z12Pub_Sub_DataPcPhjh+0xeca>
   132ac:	3e c1       	rjmp	.+636    	; 0x1352a <_Z12Pub_Sub_DataPcPhjh+0x1146>
   132ae:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   132b2:	09 2d       	mov	r16, r9
   132b4:	10 e0       	ldi	r17, 0x00	; 0
   132b6:	81 30       	cpi	r24, 0x01	; 1
   132b8:	09 f4       	brne	.+2      	; 0x132bc <_Z12Pub_Sub_DataPcPhjh+0xed8>
   132ba:	57 c0       	rjmp	.+174    	; 0x1336a <_Z12Pub_Sub_DataPcPhjh+0xf86>
   132bc:	78 01       	movw	r14, r16
   132be:	e5 e6       	ldi	r30, 0x65	; 101
   132c0:	ee 1a       	sub	r14, r30
   132c2:	f1 08       	sbc	r15, r1
   132c4:	63 e4       	ldi	r22, 0x43	; 67
   132c6:	76 e3       	ldi	r23, 0x36	; 54
   132c8:	c2 01       	movw	r24, r4
   132ca:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   132ce:	60 e0       	ldi	r22, 0x00	; 0
   132d0:	70 e0       	ldi	r23, 0x00	; 0
   132d2:	0e 94 6c 8c 	call	0x118d8	; 0x118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   132d6:	2b e1       	ldi	r18, 0x1B	; 27
   132d8:	2e 9d       	mul	r18, r14
   132da:	80 01       	movw	r16, r0
   132dc:	2f 9d       	mul	r18, r15
   132de:	10 0d       	add	r17, r0
   132e0:	11 24       	eor	r1, r1
   132e2:	0f 57       	subi	r16, 0x7F	; 127
   132e4:	12 4f       	sbci	r17, 0xF2	; 242
   132e6:	d8 01       	movw	r26, r16
   132e8:	1d 96       	adiw	r26, 0x0d	; 13
   132ea:	9c 93       	st	X, r25
   132ec:	8e 93       	st	-X, r24
   132ee:	1c 97       	sbiw	r26, 0x0c	; 12
   132f0:	6f e3       	ldi	r22, 0x3F	; 63
   132f2:	76 e3       	ldi	r23, 0x36	; 54
   132f4:	c2 01       	movw	r24, r4
   132f6:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   132fa:	61 e0       	ldi	r22, 0x01	; 1
   132fc:	70 e0       	ldi	r23, 0x00	; 0
   132fe:	0e 94 6c 8c 	call	0x118d8	; 0x118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13302:	f8 01       	movw	r30, r16
   13304:	97 87       	std	Z+15, r25	; 0x0f
   13306:	86 87       	std	Z+14, r24	; 0x0e
   13308:	6b e3       	ldi	r22, 0x3B	; 59
   1330a:	76 e3       	ldi	r23, 0x36	; 54
   1330c:	c2 01       	movw	r24, r4
   1330e:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13312:	60 e0       	ldi	r22, 0x00	; 0
   13314:	70 e0       	ldi	r23, 0x00	; 0
   13316:	0e 94 6c 8c 	call	0x118d8	; 0x118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1331a:	d8 01       	movw	r26, r16
   1331c:	53 96       	adiw	r26, 0x13	; 19
   1331e:	9c 93       	st	X, r25
   13320:	8e 93       	st	-X, r24
   13322:	52 97       	sbiw	r26, 0x12	; 18
   13324:	67 e3       	ldi	r22, 0x37	; 55
   13326:	76 e3       	ldi	r23, 0x36	; 54
   13328:	c2 01       	movw	r24, r4
   1332a:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1332e:	61 e0       	ldi	r22, 0x01	; 1
   13330:	70 e0       	ldi	r23, 0x00	; 0
   13332:	0e 94 6c 8c 	call	0x118d8	; 0x118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13336:	f8 01       	movw	r30, r16
   13338:	95 8b       	std	Z+21, r25	; 0x15
   1333a:	84 8b       	std	Z+20, r24	; 0x14
   1333c:	6e e2       	ldi	r22, 0x2E	; 46
   1333e:	76 e3       	ldi	r23, 0x36	; 54
   13340:	c2 01       	movw	r24, r4
   13342:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13346:	d8 01       	movw	r26, r16
   13348:	58 96       	adiw	r26, 0x18	; 24
   1334a:	8c 93       	st	X, r24
   1334c:	58 97       	sbiw	r26, 0x18	; 24
   1334e:	1a 96       	adiw	r26, 0x0a	; 10
   13350:	1c 92       	st	X, r1
   13352:	1a 97       	sbiw	r26, 0x0a	; 10
   13354:	1b 96       	adiw	r26, 0x0b	; 11
   13356:	1c 92       	st	X, r1
   13358:	1b 97       	sbiw	r26, 0x0b	; 11
   1335a:	14 96       	adiw	r26, 0x04	; 4
   1335c:	1c 92       	st	X, r1
   1335e:	1e 92       	st	-X, r1
   13360:	13 97       	sbiw	r26, 0x03	; 3
   13362:	b9 e6       	ldi	r27, 0x69	; 105
   13364:	9b 12       	cpse	r9, r27
   13366:	7b c0       	rjmp	.+246    	; 0x1345e <_Z12Pub_Sub_DataPcPhjh+0x107a>
   13368:	47 c0       	rjmp	.+142    	; 0x133f8 <_Z12Pub_Sub_DataPcPhjh+0x1014>
   1336a:	68 e6       	ldi	r22, 0x68	; 104
   1336c:	76 e3       	ldi	r23, 0x36	; 54
   1336e:	82 e5       	ldi	r24, 0x52	; 82
   13370:	94 e1       	ldi	r25, 0x14	; 20
   13372:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   13376:	63 e5       	ldi	r22, 0x53	; 83
   13378:	76 e3       	ldi	r23, 0x36	; 54
   1337a:	82 e5       	ldi	r24, 0x52	; 82
   1337c:	94 e1       	ldi	r25, 0x14	; 20
   1337e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13382:	c8 01       	movw	r24, r16
   13384:	85 56       	subi	r24, 0x65	; 101
   13386:	91 09       	sbc	r25, r1
   13388:	2b e1       	ldi	r18, 0x1B	; 27
   1338a:	28 9f       	mul	r18, r24
   1338c:	60 01       	movw	r12, r0
   1338e:	29 9f       	mul	r18, r25
   13390:	d0 0c       	add	r13, r0
   13392:	11 24       	eor	r1, r1
   13394:	f6 01       	movw	r30, r12
   13396:	ef 57       	subi	r30, 0x7F	; 127
   13398:	f2 4f       	sbci	r31, 0xF2	; 242
   1339a:	4a e0       	ldi	r20, 0x0A	; 10
   1339c:	50 e0       	ldi	r21, 0x00	; 0
   1339e:	61 81       	ldd	r22, Z+1	; 0x01
   133a0:	82 e5       	ldi	r24, 0x52	; 82
   133a2:	94 e1       	ldi	r25, 0x14	; 20
   133a4:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   133a8:	82 e5       	ldi	r24, 0x52	; 82
   133aa:	94 e1       	ldi	r25, 0x14	; 20
   133ac:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   133b0:	e1 2c       	mov	r14, r1
   133b2:	f1 2c       	mov	r15, r1
   133b4:	82 e5       	ldi	r24, 0x52	; 82
   133b6:	94 e1       	ldi	r25, 0x14	; 20
   133b8:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   133bc:	67 e4       	ldi	r22, 0x47	; 71
   133be:	76 e3       	ldi	r23, 0x36	; 54
   133c0:	82 e5       	ldi	r24, 0x52	; 82
   133c2:	94 e1       	ldi	r25, 0x14	; 20
   133c4:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   133c8:	f6 01       	movw	r30, r12
   133ca:	ee 0d       	add	r30, r14
   133cc:	ff 1d       	adc	r31, r15
   133ce:	ef 57       	subi	r30, 0x7F	; 127
   133d0:	f2 4f       	sbci	r31, 0xF2	; 242
   133d2:	4a e0       	ldi	r20, 0x0A	; 10
   133d4:	50 e0       	ldi	r21, 0x00	; 0
   133d6:	65 81       	ldd	r22, Z+5	; 0x05
   133d8:	82 e5       	ldi	r24, 0x52	; 82
   133da:	94 e1       	ldi	r25, 0x14	; 20
   133dc:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   133e0:	82 e5       	ldi	r24, 0x52	; 82
   133e2:	94 e1       	ldi	r25, 0x14	; 20
   133e4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   133e8:	ef ef       	ldi	r30, 0xFF	; 255
   133ea:	ee 1a       	sub	r14, r30
   133ec:	fe 0a       	sbc	r15, r30
   133ee:	f5 e0       	ldi	r31, 0x05	; 5
   133f0:	ef 16       	cp	r14, r31
   133f2:	f1 04       	cpc	r15, r1
   133f4:	f9 f6       	brne	.-66     	; 0x133b4 <_Z12Pub_Sub_DataPcPhjh+0xfd0>
   133f6:	62 cf       	rjmp	.-316    	; 0x132bc <_Z12Pub_Sub_DataPcPhjh+0xed8>
   133f8:	10 92 26 14 	sts	0x1426, r1	; 0x801426 <_sRuble_Parameters+0xdf>
   133fc:	10 92 27 14 	sts	0x1427, r1	; 0x801427 <_sRuble_Parameters+0xe0>
   13400:	10 92 28 14 	sts	0x1428, r1	; 0x801428 <_sRuble_Parameters+0xe1>
   13404:	10 92 29 14 	sts	0x1429, r1	; 0x801429 <_sRuble_Parameters+0xe2>
   13408:	d8 01       	movw	r26, r16
   1340a:	1c 96       	adiw	r26, 0x0c	; 12
   1340c:	8d 91       	ld	r24, X+
   1340e:	9c 91       	ld	r25, X
   13410:	1d 97       	sbiw	r26, 0x0d	; 13
   13412:	00 97       	sbiw	r24, 0x00	; 0
   13414:	e1 f0       	breq	.+56     	; 0x1344e <_Z12Pub_Sub_DataPcPhjh+0x106a>
   13416:	52 96       	adiw	r26, 0x12	; 18
   13418:	6d 91       	ld	r22, X+
   1341a:	7c 91       	ld	r23, X
   1341c:	53 97       	sbiw	r26, 0x13	; 19
   1341e:	40 e1       	ldi	r20, 0x10	; 16
   13420:	5e e0       	ldi	r21, 0x0E	; 14
   13422:	64 9f       	mul	r22, r20
   13424:	90 01       	movw	r18, r0
   13426:	65 9f       	mul	r22, r21
   13428:	30 0d       	add	r19, r0
   1342a:	74 9f       	mul	r23, r20
   1342c:	30 0d       	add	r19, r0
   1342e:	11 24       	eor	r1, r1
   13430:	30 93 8b 0b 	sts	0x0B8B, r19	; 0x800b8b <_sSchedules+0x26d>
   13434:	20 93 8a 0b 	sts	0x0B8A, r18	; 0x800b8a <_sSchedules+0x26c>
   13438:	4c e3       	ldi	r20, 0x3C	; 60
   1343a:	48 9f       	mul	r20, r24
   1343c:	90 01       	movw	r18, r0
   1343e:	49 9f       	mul	r20, r25
   13440:	30 0d       	add	r19, r0
   13442:	11 24       	eor	r1, r1
   13444:	30 93 8d 0b 	sts	0x0B8D, r19	; 0x800b8d <_sSchedules+0x26f>
   13448:	20 93 8c 0b 	sts	0x0B8C, r18	; 0x800b8c <_sSchedules+0x26e>
   1344c:	08 c0       	rjmp	.+16     	; 0x1345e <_Z12Pub_Sub_DataPcPhjh+0x107a>
   1344e:	10 92 8d 0b 	sts	0x0B8D, r1	; 0x800b8d <_sSchedules+0x26f>
   13452:	10 92 8c 0b 	sts	0x0B8C, r1	; 0x800b8c <_sSchedules+0x26e>
   13456:	10 92 8b 0b 	sts	0x0B8B, r1	; 0x800b8b <_sSchedules+0x26d>
   1345a:	10 92 8a 0b 	sts	0x0B8A, r1	; 0x800b8a <_sSchedules+0x26c>
   1345e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13462:	81 30       	cpi	r24, 0x01	; 1
   13464:	09 f0       	breq	.+2      	; 0x13468 <_Z12Pub_Sub_DataPcPhjh+0x1084>
   13466:	57 c0       	rjmp	.+174    	; 0x13516 <_Z12Pub_Sub_DataPcPhjh+0x1132>
   13468:	8b e1       	ldi	r24, 0x1B	; 27
   1346a:	8e 9d       	mul	r24, r14
   1346c:	80 01       	movw	r16, r0
   1346e:	8f 9d       	mul	r24, r15
   13470:	10 0d       	add	r17, r0
   13472:	11 24       	eor	r1, r1
   13474:	03 57       	subi	r16, 0x73	; 115
   13476:	12 4f       	sbci	r17, 0xF2	; 242
   13478:	82 e0       	ldi	r24, 0x02	; 2
   1347a:	d8 2e       	mov	r13, r24
   1347c:	82 e5       	ldi	r24, 0x52	; 82
   1347e:	94 e1       	ldi	r25, 0x14	; 20
   13480:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   13484:	67 e2       	ldi	r22, 0x27	; 39
   13486:	76 e3       	ldi	r23, 0x36	; 54
   13488:	82 e5       	ldi	r24, 0x52	; 82
   1348a:	94 e1       	ldi	r25, 0x14	; 20
   1348c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13490:	f8 01       	movw	r30, r16
   13492:	61 91       	ld	r22, Z+
   13494:	71 91       	ld	r23, Z+
   13496:	8f 01       	movw	r16, r30
   13498:	4a e0       	ldi	r20, 0x0A	; 10
   1349a:	50 e0       	ldi	r21, 0x00	; 0
   1349c:	82 e5       	ldi	r24, 0x52	; 82
   1349e:	94 e1       	ldi	r25, 0x14	; 20
   134a0:	0e 94 39 d2 	call	0x1a472	; 0x1a472 <_ZN5Print5printEji>
   134a4:	82 e5       	ldi	r24, 0x52	; 82
   134a6:	94 e1       	ldi	r25, 0x14	; 20
   134a8:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   134ac:	60 e2       	ldi	r22, 0x20	; 32
   134ae:	76 e3       	ldi	r23, 0x36	; 54
   134b0:	82 e5       	ldi	r24, 0x52	; 82
   134b2:	94 e1       	ldi	r25, 0x14	; 20
   134b4:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   134b8:	d8 01       	movw	r26, r16
   134ba:	14 96       	adiw	r26, 0x04	; 4
   134bc:	6d 91       	ld	r22, X+
   134be:	7c 91       	ld	r23, X
   134c0:	15 97       	sbiw	r26, 0x05	; 5
   134c2:	4a e0       	ldi	r20, 0x0A	; 10
   134c4:	50 e0       	ldi	r21, 0x00	; 0
   134c6:	82 e5       	ldi	r24, 0x52	; 82
   134c8:	94 e1       	ldi	r25, 0x14	; 20
   134ca:	0e 94 39 d2 	call	0x1a472	; 0x1a472 <_ZN5Print5printEji>
   134ce:	82 e5       	ldi	r24, 0x52	; 82
   134d0:	94 e1       	ldi	r25, 0x14	; 20
   134d2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   134d6:	da 94       	dec	r13
   134d8:	d1 10       	cpse	r13, r1
   134da:	d0 cf       	rjmp	.-96     	; 0x1347c <_Z12Pub_Sub_DataPcPhjh+0x1098>
   134dc:	82 e5       	ldi	r24, 0x52	; 82
   134de:	94 e1       	ldi	r25, 0x14	; 20
   134e0:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   134e4:	64 e1       	ldi	r22, 0x14	; 20
   134e6:	76 e3       	ldi	r23, 0x36	; 54
   134e8:	82 e5       	ldi	r24, 0x52	; 82
   134ea:	94 e1       	ldi	r25, 0x14	; 20
   134ec:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   134f0:	8b e1       	ldi	r24, 0x1B	; 27
   134f2:	8e 9d       	mul	r24, r14
   134f4:	f0 01       	movw	r30, r0
   134f6:	8f 9d       	mul	r24, r15
   134f8:	f0 0d       	add	r31, r0
   134fa:	11 24       	eor	r1, r1
   134fc:	ef 57       	subi	r30, 0x7F	; 127
   134fe:	f2 4f       	sbci	r31, 0xF2	; 242
   13500:	4a e0       	ldi	r20, 0x0A	; 10
   13502:	50 e0       	ldi	r21, 0x00	; 0
   13504:	60 8d       	ldd	r22, Z+24	; 0x18
   13506:	82 e5       	ldi	r24, 0x52	; 82
   13508:	94 e1       	ldi	r25, 0x14	; 20
   1350a:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   1350e:	82 e5       	ldi	r24, 0x52	; 82
   13510:	94 e1       	ldi	r25, 0x14	; 20
   13512:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13516:	8c e9       	ldi	r24, 0x9C	; 156
   13518:	89 0d       	add	r24, r9
   1351a:	0e 94 8b 79 	call	0xf316	; 0xf316 <_Z21Exra_Plot_Data_EEPROMh>
   1351e:	b1 e0       	ldi	r27, 0x01	; 1
   13520:	c0 55       	subi	r28, 0x50	; 80
   13522:	d9 4f       	sbci	r29, 0xF9	; 249
   13524:	b8 83       	st	Y, r27
   13526:	c0 5b       	subi	r28, 0xB0	; 176
   13528:	d6 40       	sbci	r29, 0x06	; 6
   1352a:	8e 01       	movw	r16, r28
   1352c:	0b 57       	subi	r16, 0x7B	; 123
   1352e:	19 4f       	sbci	r17, 0xF9	; 249
   13530:	88 e2       	ldi	r24, 0x28	; 40
   13532:	f8 01       	movw	r30, r16
   13534:	11 92       	st	Z+, r1
   13536:	8a 95       	dec	r24
   13538:	e9 f7       	brne	.-6      	; 0x13534 <_Z12Pub_Sub_DataPcPhjh+0x1150>
   1353a:	87 e6       	ldi	r24, 0x67	; 103
   1353c:	93 e1       	ldi	r25, 0x13	; 19
   1353e:	9f 93       	push	r25
   13540:	8f 93       	push	r24
   13542:	8d e9       	ldi	r24, 0x9D	; 157
   13544:	95 e0       	ldi	r25, 0x05	; 5
   13546:	9f 93       	push	r25
   13548:	8f 93       	push	r24
   1354a:	1f 93       	push	r17
   1354c:	0f 93       	push	r16
   1354e:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   13552:	ca 54       	subi	r28, 0x4A	; 74
   13554:	d9 4f       	sbci	r29, 0xF9	; 249
   13556:	68 81       	ld	r22, Y
   13558:	79 81       	ldd	r23, Y+1	; 0x01
   1355a:	c6 5b       	subi	r28, 0xB6	; 182
   1355c:	d6 40       	sbci	r29, 0x06	; 6
   1355e:	c8 01       	movw	r24, r16
   13560:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   13564:	0f 90       	pop	r0
   13566:	0f 90       	pop	r0
   13568:	0f 90       	pop	r0
   1356a:	0f 90       	pop	r0
   1356c:	0f 90       	pop	r0
   1356e:	0f 90       	pop	r0
   13570:	89 2b       	or	r24, r25
   13572:	09 f0       	breq	.+2      	; 0x13576 <_Z12Pub_Sub_DataPcPhjh+0x1192>
   13574:	f4 c1       	rjmp	.+1000   	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   13576:	6f e0       	ldi	r22, 0x0F	; 15
   13578:	76 e3       	ldi	r23, 0x36	; 54
   1357a:	c2 01       	movw	r24, r4
   1357c:	0e 94 64 8c 	call	0x118c8	; 0x118c8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13580:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   13584:	fc 01       	movw	r30, r24
   13586:	31 97       	sbiw	r30, 0x01	; 1
   13588:	e8 30       	cpi	r30, 0x08	; 8
   1358a:	f1 05       	cpc	r31, r1
   1358c:	08 f0       	brcs	.+2      	; 0x13590 <_Z12Pub_Sub_DataPcPhjh+0x11ac>
   1358e:	e1 c1       	rjmp	.+962    	; 0x13952 <_Z12Pub_Sub_DataPcPhjh+0x156e>
   13590:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13594:	88 27       	eor	r24, r24
   13596:	e1 51       	subi	r30, 0x11	; 17
   13598:	ff 4f       	sbci	r31, 0xFF	; 255
   1359a:	8f 4f       	sbci	r24, 0xFF	; 255
   1359c:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
   135a0:	91 30       	cpi	r25, 0x01	; 1
   135a2:	51 f4       	brne	.+20     	; 0x135b8 <_Z12Pub_Sub_DataPcPhjh+0x11d4>
   135a4:	69 ef       	ldi	r22, 0xF9	; 249
   135a6:	75 e3       	ldi	r23, 0x35	; 53
   135a8:	82 e5       	ldi	r24, 0x52	; 82
   135aa:	94 e1       	ldi	r25, 0x14	; 20
   135ac:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   135b0:	82 e5       	ldi	r24, 0x52	; 82
   135b2:	94 e1       	ldi	r25, 0x14	; 20
   135b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   135b8:	65 ef       	ldi	r22, 0xF5	; 245
   135ba:	75 e3       	ldi	r23, 0x35	; 53
   135bc:	c2 01       	movw	r24, r4
   135be:	0e 94 ed 8b 	call	0x117da	; 0x117da <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   135c2:	bc 01       	movw	r22, r24
   135c4:	ce 01       	movw	r24, r28
   135c6:	83 5a       	subi	r24, 0xA3	; 163
   135c8:	99 4f       	sbci	r25, 0xF9	; 249
   135ca:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   135ce:	27 eb       	ldi	r18, 0xB7	; 183
   135d0:	3b e0       	ldi	r19, 0x0B	; 11
   135d2:	61 2c       	mov	r6, r1
   135d4:	71 2c       	mov	r7, r1
   135d6:	96 2c       	mov	r9, r6
   135d8:	fe 01       	movw	r30, r28
   135da:	e3 5a       	subi	r30, 0xA3	; 163
   135dc:	f9 4f       	sbci	r31, 0xF9	; 249
   135de:	80 e0       	ldi	r24, 0x00	; 0
   135e0:	90 e0       	ldi	r25, 0x00	; 0
   135e2:	40 e0       	ldi	r20, 0x00	; 0
   135e4:	51 91       	ld	r21, Z+
   135e6:	d9 01       	movw	r26, r18
   135e8:	a8 0f       	add	r26, r24
   135ea:	b9 1f       	adc	r27, r25
   135ec:	11 96       	adiw	r26, 0x01	; 1
   135ee:	6c 91       	ld	r22, X
   135f0:	65 13       	cpse	r22, r21
   135f2:	01 c0       	rjmp	.+2      	; 0x135f6 <_Z12Pub_Sub_DataPcPhjh+0x1212>
   135f4:	4f 5f       	subi	r20, 0xFF	; 255
   135f6:	01 96       	adiw	r24, 0x01	; 1
   135f8:	86 30       	cpi	r24, 0x06	; 6
   135fa:	91 05       	cpc	r25, r1
   135fc:	99 f7       	brne	.-26     	; 0x135e4 <_Z12Pub_Sub_DataPcPhjh+0x1200>
   135fe:	c3 01       	movw	r24, r6
   13600:	01 96       	adiw	r24, 0x01	; 1
   13602:	7c 01       	movw	r14, r24
   13604:	46 30       	cpi	r20, 0x06	; 6
   13606:	09 f0       	breq	.+2      	; 0x1360a <_Z12Pub_Sub_DataPcPhjh+0x1226>
   13608:	b1 c0       	rjmp	.+354    	; 0x1376c <_Z12Pub_Sub_DataPcPhjh+0x1388>
   1360a:	8d e0       	ldi	r24, 0x0D	; 13
   1360c:	86 9d       	mul	r24, r6
   1360e:	60 01       	movw	r12, r0
   13610:	87 9d       	mul	r24, r7
   13612:	d0 0c       	add	r13, r0
   13614:	11 24       	eor	r1, r1
   13616:	d6 01       	movw	r26, r12
   13618:	a8 54       	subi	r26, 0x48	; 72
   1361a:	b4 4f       	sbci	r27, 0xF4	; 244
   1361c:	5d 01       	movw	r10, r26
   1361e:	63 e1       	ldi	r22, 0x13	; 19
   13620:	77 e0       	ldi	r23, 0x07	; 7
   13622:	cd 01       	movw	r24, r26
   13624:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   13628:	27 e0       	ldi	r18, 0x07	; 7
   1362a:	26 9d       	mul	r18, r6
   1362c:	c0 01       	movw	r24, r0
   1362e:	27 9d       	mul	r18, r7
   13630:	90 0d       	add	r25, r0
   13632:	11 24       	eor	r1, r1
   13634:	b5 01       	movw	r22, r10
   13636:	8a 55       	subi	r24, 0x5A	; 90
   13638:	9c 4e       	sbci	r25, 0xEC	; 236
   1363a:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   1363e:	f6 01       	movw	r30, r12
   13640:	e9 54       	subi	r30, 0x49	; 73
   13642:	f4 4f       	sbci	r31, 0xF4	; 244
   13644:	6f 01       	movw	r12, r30
   13646:	10 82       	st	Z, r1
   13648:	8f ef       	ldi	r24, 0xFF	; 255
   1364a:	90 e0       	ldi	r25, 0x00	; 0
   1364c:	91 87       	std	Z+9, r25	; 0x09
   1364e:	80 87       	std	Z+8, r24	; 0x08
   13650:	81 e0       	ldi	r24, 0x01	; 1
   13652:	83 87       	std	Z+11, r24	; 0x0b
   13654:	12 86       	std	Z+10, r1	; 0x0a
   13656:	14 86       	std	Z+12, r1	; 0x0c
   13658:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1365c:	81 30       	cpi	r24, 0x01	; 1
   1365e:	79 f5       	brne	.+94     	; 0x136be <_Z12Pub_Sub_DataPcPhjh+0x12da>
   13660:	6a ed       	ldi	r22, 0xDA	; 218
   13662:	75 e3       	ldi	r23, 0x35	; 53
   13664:	82 e5       	ldi	r24, 0x52	; 82
   13666:	94 e1       	ldi	r25, 0x14	; 20
   13668:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1366c:	82 e5       	ldi	r24, 0x52	; 82
   1366e:	94 e1       	ldi	r25, 0x14	; 20
   13670:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13674:	6f ec       	ldi	r22, 0xCF	; 207
   13676:	75 e3       	ldi	r23, 0x35	; 53
   13678:	82 e5       	ldi	r24, 0x52	; 82
   1367a:	94 e1       	ldi	r25, 0x14	; 20
   1367c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13680:	82 e5       	ldi	r24, 0x52	; 82
   13682:	94 e1       	ldi	r25, 0x14	; 20
   13684:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13688:	4a e0       	ldi	r20, 0x0A	; 10
   1368a:	50 e0       	ldi	r21, 0x00	; 0
   1368c:	d6 01       	movw	r26, r12
   1368e:	6c 91       	ld	r22, X
   13690:	82 e5       	ldi	r24, 0x52	; 82
   13692:	94 e1       	ldi	r25, 0x14	; 20
   13694:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   13698:	64 ec       	ldi	r22, 0xC4	; 196
   1369a:	75 e3       	ldi	r23, 0x35	; 53
   1369c:	82 e5       	ldi	r24, 0x52	; 82
   1369e:	94 e1       	ldi	r25, 0x14	; 20
   136a0:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   136a4:	82 e5       	ldi	r24, 0x52	; 82
   136a6:	94 e1       	ldi	r25, 0x14	; 20
   136a8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   136ac:	b5 01       	movw	r22, r10
   136ae:	82 e5       	ldi	r24, 0x52	; 82
   136b0:	94 e1       	ldi	r25, 0x14	; 20
   136b2:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   136b6:	82 e5       	ldi	r24, 0x52	; 82
   136b8:	94 e1       	ldi	r25, 0x14	; 20
   136ba:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   136be:	89 2d       	mov	r24, r9
   136c0:	0e 94 b2 5a 	call	0xb564	; 0xb564 <_Z16Euro_Data_EEPROMh>
   136c4:	b5 e0       	ldi	r27, 0x05	; 5
   136c6:	6b 0e       	add	r6, r27
   136c8:	71 1c       	adc	r7, r1
   136ca:	ad ef       	ldi	r26, 0xFD	; 253
   136cc:	8a 2e       	mov	r8, r26
   136ce:	ac e0       	ldi	r26, 0x0C	; 12
   136d0:	9a 2e       	mov	r9, r26
   136d2:	cc 24       	eor	r12, r12
   136d4:	c3 94       	inc	r12
   136d6:	d1 2c       	mov	r13, r1
   136d8:	22 24       	eor	r2, r2
   136da:	2a 94       	dec	r2
   136dc:	2c 0c       	add	r2, r12
   136de:	54 01       	movw	r10, r8
   136e0:	f5 e0       	ldi	r31, 0x05	; 5
   136e2:	3f 2e       	mov	r3, r31
   136e4:	f5 01       	movw	r30, r10
   136e6:	81 81       	ldd	r24, Z+1	; 0x01
   136e8:	88 23       	and	r24, r24
   136ea:	09 f1       	breq	.+66     	; 0x1372e <_Z12Pub_Sub_DataPcPhjh+0x134a>
   136ec:	90 e0       	ldi	r25, 0x00	; 0
   136ee:	8e 15       	cp	r24, r14
   136f0:	9f 05       	cpc	r25, r15
   136f2:	e9 f4       	brne	.+58     	; 0x1372e <_Z12Pub_Sub_DataPcPhjh+0x134a>
   136f4:	11 82       	std	Z+1, r1	; 0x01
   136f6:	82 2d       	mov	r24, r2
   136f8:	0e 94 00 7e 	call	0xfc00	; 0xfc00 <_Z16Lira_Data_EEPROMh>
   136fc:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13700:	81 30       	cpi	r24, 0x01	; 1
   13702:	a9 f4       	brne	.+42     	; 0x1372e <_Z12Pub_Sub_DataPcPhjh+0x134a>
   13704:	67 ea       	ldi	r22, 0xA7	; 167
   13706:	75 e3       	ldi	r23, 0x35	; 53
   13708:	82 e5       	ldi	r24, 0x52	; 82
   1370a:	94 e1       	ldi	r25, 0x14	; 20
   1370c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13710:	82 e5       	ldi	r24, 0x52	; 82
   13712:	94 e1       	ldi	r25, 0x14	; 20
   13714:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13718:	4a e0       	ldi	r20, 0x0A	; 10
   1371a:	50 e0       	ldi	r21, 0x00	; 0
   1371c:	b6 01       	movw	r22, r12
   1371e:	82 e5       	ldi	r24, 0x52	; 82
   13720:	94 e1       	ldi	r25, 0x14	; 20
   13722:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
   13726:	82 e5       	ldi	r24, 0x52	; 82
   13728:	94 e1       	ldi	r25, 0x14	; 20
   1372a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1372e:	3a 94       	dec	r3
   13730:	ff ef       	ldi	r31, 0xFF	; 255
   13732:	af 1a       	sub	r10, r31
   13734:	bf 0a       	sbc	r11, r31
   13736:	31 10       	cpse	r3, r1
   13738:	d5 cf       	rjmp	.-86     	; 0x136e4 <_Z12Pub_Sub_DataPcPhjh+0x1300>
   1373a:	2f ef       	ldi	r18, 0xFF	; 255
   1373c:	c2 1a       	sub	r12, r18
   1373e:	d2 0a       	sbc	r13, r18
   13740:	36 e0       	ldi	r19, 0x06	; 6
   13742:	83 0e       	add	r8, r19
   13744:	91 1c       	adc	r9, r1
   13746:	4f e0       	ldi	r20, 0x0F	; 15
   13748:	c4 16       	cp	r12, r20
   1374a:	d1 04       	cpc	r13, r1
   1374c:	29 f6       	brne	.-118    	; 0x136d8 <_Z12Pub_Sub_DataPcPhjh+0x12f4>
   1374e:	5f ef       	ldi	r21, 0xFF	; 255
   13750:	e5 1a       	sub	r14, r21
   13752:	f5 0a       	sbc	r15, r21
   13754:	6e 14       	cp	r6, r14
   13756:	7f 04       	cpc	r7, r15
   13758:	09 f0       	breq	.+2      	; 0x1375c <_Z12Pub_Sub_DataPcPhjh+0x1378>
   1375a:	b7 cf       	rjmp	.-146    	; 0x136ca <_Z12Pub_Sub_DataPcPhjh+0x12e6>
   1375c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13760:	81 30       	cpi	r24, 0x01	; 1
   13762:	09 f0       	breq	.+2      	; 0x13766 <_Z12Pub_Sub_DataPcPhjh+0x1382>
   13764:	ef c0       	rjmp	.+478    	; 0x13944 <_Z12Pub_Sub_DataPcPhjh+0x1560>
   13766:	e1 2c       	mov	r14, r1
   13768:	f1 2c       	mov	r15, r1
   1376a:	09 c0       	rjmp	.+18     	; 0x1377e <_Z12Pub_Sub_DataPcPhjh+0x139a>
   1376c:	3c 01       	movw	r6, r24
   1376e:	23 5f       	subi	r18, 0xF3	; 243
   13770:	3f 4f       	sbci	r19, 0xFF	; 255
   13772:	87 e0       	ldi	r24, 0x07	; 7
   13774:	e8 16       	cp	r14, r24
   13776:	f1 04       	cpc	r15, r1
   13778:	09 f0       	breq	.+2      	; 0x1377c <_Z12Pub_Sub_DataPcPhjh+0x1398>
   1377a:	2d cf       	rjmp	.-422    	; 0x135d6 <_Z12Pub_Sub_DataPcPhjh+0x11f2>
   1377c:	ef cf       	rjmp	.-34     	; 0x1375c <_Z12Pub_Sub_DataPcPhjh+0x1378>
   1377e:	82 e5       	ldi	r24, 0x52	; 82
   13780:	94 e1       	ldi	r25, 0x14	; 20
   13782:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   13786:	6c e9       	ldi	r22, 0x9C	; 156
   13788:	75 e3       	ldi	r23, 0x35	; 53
   1378a:	82 e5       	ldi	r24, 0x52	; 82
   1378c:	94 e1       	ldi	r25, 0x14	; 20
   1378e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13792:	82 e5       	ldi	r24, 0x52	; 82
   13794:	94 e1       	ldi	r25, 0x14	; 20
   13796:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1379a:	b7 01       	movw	r22, r14
   1379c:	68 54       	subi	r22, 0x48	; 72
   1379e:	74 4f       	sbci	r23, 0xF4	; 244
   137a0:	82 e5       	ldi	r24, 0x52	; 82
   137a2:	94 e1       	ldi	r25, 0x14	; 20
   137a4:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   137a8:	82 e5       	ldi	r24, 0x52	; 82
   137aa:	94 e1       	ldi	r25, 0x14	; 20
   137ac:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   137b0:	ad e0       	ldi	r26, 0x0D	; 13
   137b2:	ea 0e       	add	r14, r26
   137b4:	f1 1c       	adc	r15, r1
   137b6:	bb e5       	ldi	r27, 0x5B	; 91
   137b8:	eb 16       	cp	r14, r27
   137ba:	f1 04       	cpc	r15, r1
   137bc:	01 f7       	brne	.-64     	; 0x1377e <_Z12Pub_Sub_DataPcPhjh+0x139a>
   137be:	c2 c0       	rjmp	.+388    	; 0x13944 <_Z12Pub_Sub_DataPcPhjh+0x1560>
   137c0:	91 30       	cpi	r25, 0x01	; 1
   137c2:	51 f4       	brne	.+20     	; 0x137d8 <_Z12Pub_Sub_DataPcPhjh+0x13f4>
   137c4:	67 e8       	ldi	r22, 0x87	; 135
   137c6:	75 e3       	ldi	r23, 0x35	; 53
   137c8:	82 e5       	ldi	r24, 0x52	; 82
   137ca:	94 e1       	ldi	r25, 0x14	; 20
   137cc:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   137d0:	82 e5       	ldi	r24, 0x52	; 82
   137d2:	94 e1       	ldi	r25, 0x14	; 20
   137d4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   137d8:	6e e7       	ldi	r22, 0x7E	; 126
   137da:	75 e3       	ldi	r23, 0x35	; 53
   137dc:	c2 01       	movw	r24, r4
   137de:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   137e2:	90 e0       	ldi	r25, 0x00	; 0
   137e4:	01 97       	sbiw	r24, 0x01	; 1
   137e6:	26 e0       	ldi	r18, 0x06	; 6
   137e8:	28 9f       	mul	r18, r24
   137ea:	f0 01       	movw	r30, r0
   137ec:	29 9f       	mul	r18, r25
   137ee:	f0 0d       	add	r31, r0
   137f0:	11 24       	eor	r1, r1
   137f2:	e3 50       	subi	r30, 0x03	; 3
   137f4:	f3 4f       	sbci	r31, 0xF3	; 243
   137f6:	10 82       	st	Z, r1
   137f8:	e1 e0       	ldi	r30, 0x01	; 1
   137fa:	c0 55       	subi	r28, 0x50	; 80
   137fc:	d9 4f       	sbci	r29, 0xF9	; 249
   137fe:	e8 83       	st	Y, r30
   13800:	c0 5b       	subi	r28, 0xB0	; 176
   13802:	d6 40       	sbci	r29, 0x06	; 6
   13804:	ac c0       	rjmp	.+344    	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   13806:	91 30       	cpi	r25, 0x01	; 1
   13808:	51 f4       	brne	.+20     	; 0x1381e <_Z12Pub_Sub_DataPcPhjh+0x143a>
   1380a:	60 e6       	ldi	r22, 0x60	; 96
   1380c:	75 e3       	ldi	r23, 0x35	; 53
   1380e:	82 e5       	ldi	r24, 0x52	; 82
   13810:	94 e1       	ldi	r25, 0x14	; 20
   13812:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13816:	82 e5       	ldi	r24, 0x52	; 82
   13818:	94 e1       	ldi	r25, 0x14	; 20
   1381a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1381e:	66 e5       	ldi	r22, 0x56	; 86
   13820:	75 e3       	ldi	r23, 0x35	; 53
   13822:	c2 01       	movw	r24, r4
   13824:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13828:	0e 94 20 32 	call	0x6440	; 0x6440 <_Z15Delete_Scheduleh>
   1382c:	f1 e0       	ldi	r31, 0x01	; 1
   1382e:	c0 55       	subi	r28, 0x50	; 80
   13830:	d9 4f       	sbci	r29, 0xF9	; 249
   13832:	f8 83       	st	Y, r31
   13834:	c0 5b       	subi	r28, 0xB0	; 176
   13836:	d6 40       	sbci	r29, 0x06	; 6
   13838:	92 c0       	rjmp	.+292    	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   1383a:	91 30       	cpi	r25, 0x01	; 1
   1383c:	51 f4       	brne	.+20     	; 0x13852 <_Z12Pub_Sub_DataPcPhjh+0x146e>
   1383e:	6b e3       	ldi	r22, 0x3B	; 59
   13840:	75 e3       	ldi	r23, 0x35	; 53
   13842:	82 e5       	ldi	r24, 0x52	; 82
   13844:	94 e1       	ldi	r25, 0x14	; 20
   13846:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1384a:	82 e5       	ldi	r24, 0x52	; 82
   1384c:	94 e1       	ldi	r25, 0x14	; 20
   1384e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13852:	62 e3       	ldi	r22, 0x32	; 50
   13854:	75 e3       	ldi	r23, 0x35	; 53
   13856:	c2 01       	movw	r24, r4
   13858:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1385c:	85 56       	subi	r24, 0x65	; 101
   1385e:	2b e1       	ldi	r18, 0x1B	; 27
   13860:	82 9f       	mul	r24, r18
   13862:	f0 01       	movw	r30, r0
   13864:	11 24       	eor	r1, r1
   13866:	ef 57       	subi	r30, 0x7F	; 127
   13868:	f2 4f       	sbci	r31, 0xF2	; 242
   1386a:	11 8e       	std	Z+25, r1	; 0x19
   1386c:	11 82       	std	Z+1, r1	; 0x01
   1386e:	13 8a       	std	Z+19, r1	; 0x13
   13870:	12 8a       	std	Z+18, r1	; 0x12
   13872:	15 8a       	std	Z+21, r1	; 0x15
   13874:	14 8a       	std	Z+20, r1	; 0x14
   13876:	17 8a       	std	Z+23, r1	; 0x17
   13878:	16 8a       	std	Z+22, r1	; 0x16
   1387a:	15 86       	std	Z+13, r1	; 0x0d
   1387c:	14 86       	std	Z+12, r1	; 0x0c
   1387e:	17 86       	std	Z+15, r1	; 0x0f
   13880:	16 86       	std	Z+14, r1	; 0x0e
   13882:	10 82       	st	Z, r1
   13884:	12 86       	std	Z+10, r1	; 0x0a
   13886:	12 8e       	std	Z+26, r1	; 0x1a
   13888:	14 82       	std	Z+4, r1	; 0x04
   1388a:	13 82       	std	Z+3, r1	; 0x03
   1388c:	10 8e       	std	Z+24, r1	; 0x18
   1388e:	13 86       	std	Z+11, r1	; 0x0b
   13890:	12 82       	std	Z+2, r1	; 0x02
   13892:	31 e0       	ldi	r19, 0x01	; 1
   13894:	c0 55       	subi	r28, 0x50	; 80
   13896:	d9 4f       	sbci	r29, 0xF9	; 249
   13898:	38 83       	st	Y, r19
   1389a:	c0 5b       	subi	r28, 0xB0	; 176
   1389c:	d6 40       	sbci	r29, 0x06	; 6
   1389e:	5f c0       	rjmp	.+190    	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   138a0:	91 30       	cpi	r25, 0x01	; 1
   138a2:	51 f4       	brne	.+20     	; 0x138b8 <_Z12Pub_Sub_DataPcPhjh+0x14d4>
   138a4:	6a e1       	ldi	r22, 0x1A	; 26
   138a6:	75 e3       	ldi	r23, 0x35	; 53
   138a8:	82 e5       	ldi	r24, 0x52	; 82
   138aa:	94 e1       	ldi	r25, 0x14	; 20
   138ac:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   138b0:	82 e5       	ldi	r24, 0x52	; 82
   138b2:	94 e1       	ldi	r25, 0x14	; 20
   138b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   138b8:	81 e0       	ldi	r24, 0x01	; 1
   138ba:	80 93 87 0b 	sts	0x0B87, r24	; 0x800b87 <_sSchedules+0x269>
   138be:	0e 94 51 85 	call	0x10aa2	; 0x10aa2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>
   138c2:	41 e0       	ldi	r20, 0x01	; 1
   138c4:	c0 55       	subi	r28, 0x50	; 80
   138c6:	d9 4f       	sbci	r29, 0xF9	; 249
   138c8:	48 83       	st	Y, r20
   138ca:	c0 5b       	subi	r28, 0xB0	; 176
   138cc:	d6 40       	sbci	r29, 0x06	; 6
   138ce:	47 c0       	rjmp	.+142    	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   138d0:	91 30       	cpi	r25, 0x01	; 1
   138d2:	51 f4       	brne	.+20     	; 0x138e8 <_Z12Pub_Sub_DataPcPhjh+0x1504>
   138d4:	61 e0       	ldi	r22, 0x01	; 1
   138d6:	75 e3       	ldi	r23, 0x35	; 53
   138d8:	82 e5       	ldi	r24, 0x52	; 82
   138da:	94 e1       	ldi	r25, 0x14	; 20
   138dc:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   138e0:	82 e5       	ldi	r24, 0x52	; 82
   138e2:	94 e1       	ldi	r25, 0x14	; 20
   138e4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   138e8:	10 92 87 0b 	sts	0x0B87, r1	; 0x800b87 <_sSchedules+0x269>
   138ec:	0e 94 51 85 	call	0x10aa2	; 0x10aa2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>
   138f0:	51 e0       	ldi	r21, 0x01	; 1
   138f2:	c0 55       	subi	r28, 0x50	; 80
   138f4:	d9 4f       	sbci	r29, 0xF9	; 249
   138f6:	58 83       	st	Y, r21
   138f8:	c0 5b       	subi	r28, 0xB0	; 176
   138fa:	d6 40       	sbci	r29, 0x06	; 6
   138fc:	30 c0       	rjmp	.+96     	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   138fe:	91 30       	cpi	r25, 0x01	; 1
   13900:	51 f4       	brne	.+20     	; 0x13916 <_Z12Pub_Sub_DataPcPhjh+0x1532>
   13902:	6d ee       	ldi	r22, 0xED	; 237
   13904:	74 e3       	ldi	r23, 0x34	; 52
   13906:	82 e5       	ldi	r24, 0x52	; 82
   13908:	94 e1       	ldi	r25, 0x14	; 20
   1390a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1390e:	82 e5       	ldi	r24, 0x52	; 82
   13910:	94 e1       	ldi	r25, 0x14	; 20
   13912:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13916:	81 e0       	ldi	r24, 0x01	; 1
   13918:	80 93 2d 14 	sts	0x142D, r24	; 0x80142d <_sRuble_Parameters+0xe6>
   1391c:	c0 55       	subi	r28, 0x50	; 80
   1391e:	d9 4f       	sbci	r29, 0xF9	; 249
   13920:	88 83       	st	Y, r24
   13922:	c0 5b       	subi	r28, 0xB0	; 176
   13924:	d6 40       	sbci	r29, 0x06	; 6
   13926:	1b c0       	rjmp	.+54     	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   13928:	91 30       	cpi	r25, 0x01	; 1
   1392a:	51 f4       	brne	.+20     	; 0x13940 <_Z12Pub_Sub_DataPcPhjh+0x155c>
   1392c:	62 ed       	ldi	r22, 0xD2	; 210
   1392e:	74 e3       	ldi	r23, 0x34	; 52
   13930:	82 e5       	ldi	r24, 0x52	; 82
   13932:	94 e1       	ldi	r25, 0x14	; 20
   13934:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13938:	82 e5       	ldi	r24, 0x52	; 82
   1393a:	94 e1       	ldi	r25, 0x14	; 20
   1393c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13940:	10 92 2d 14 	sts	0x142D, r1	; 0x80142d <_sRuble_Parameters+0xe6>
   13944:	91 e0       	ldi	r25, 0x01	; 1
   13946:	c0 55       	subi	r28, 0x50	; 80
   13948:	d9 4f       	sbci	r29, 0xF9	; 249
   1394a:	98 83       	st	Y, r25
   1394c:	c0 5b       	subi	r28, 0xB0	; 176
   1394e:	d6 40       	sbci	r29, 0x06	; 6
   13950:	06 c0       	rjmp	.+12     	; 0x1395e <_Z12Pub_Sub_DataPcPhjh+0x157a>
   13952:	a1 e0       	ldi	r26, 0x01	; 1
   13954:	c0 55       	subi	r28, 0x50	; 80
   13956:	d9 4f       	sbci	r29, 0xF9	; 249
   13958:	a8 83       	st	Y, r26
   1395a:	c0 5b       	subi	r28, 0xB0	; 176
   1395c:	d6 40       	sbci	r29, 0x06	; 6
   1395e:	88 e2       	ldi	r24, 0x28	; 40
   13960:	f8 01       	movw	r30, r16
   13962:	11 92       	st	Z+, r1
   13964:	8a 95       	dec	r24
   13966:	e9 f7       	brne	.-6      	; 0x13962 <_Z12Pub_Sub_DataPcPhjh+0x157e>
   13968:	87 e6       	ldi	r24, 0x67	; 103
   1396a:	93 e1       	ldi	r25, 0x13	; 19
   1396c:	9f 93       	push	r25
   1396e:	8f 93       	push	r24
   13970:	89 e0       	ldi	r24, 0x09	; 9
   13972:	96 e0       	ldi	r25, 0x06	; 6
   13974:	9f 93       	push	r25
   13976:	8f 93       	push	r24
   13978:	1f 93       	push	r17
   1397a:	0f 93       	push	r16
   1397c:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   13980:	ca 54       	subi	r28, 0x4A	; 74
   13982:	d9 4f       	sbci	r29, 0xF9	; 249
   13984:	68 81       	ld	r22, Y
   13986:	79 81       	ldd	r23, Y+1	; 0x01
   13988:	c6 5b       	subi	r28, 0xB6	; 182
   1398a:	d6 40       	sbci	r29, 0x06	; 6
   1398c:	c8 01       	movw	r24, r16
   1398e:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   13992:	0f 90       	pop	r0
   13994:	0f 90       	pop	r0
   13996:	0f 90       	pop	r0
   13998:	0f 90       	pop	r0
   1399a:	0f 90       	pop	r0
   1399c:	0f 90       	pop	r0
   1399e:	89 2b       	or	r24, r25
   139a0:	09 f0       	breq	.+2      	; 0x139a4 <_Z12Pub_Sub_DataPcPhjh+0x15c0>
   139a2:	53 c0       	rjmp	.+166    	; 0x13a4a <_Z12Pub_Sub_DataPcPhjh+0x1666>
   139a4:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   139a8:	6e ec       	ldi	r22, 0xCE	; 206
   139aa:	74 e3       	ldi	r23, 0x34	; 52
   139ac:	c2 01       	movw	r24, r4
   139ae:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   139b2:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   139b6:	81 30       	cpi	r24, 0x01	; 1
   139b8:	69 f5       	brne	.+90     	; 0x13a14 <_Z12Pub_Sub_DataPcPhjh+0x1630>
   139ba:	91 30       	cpi	r25, 0x01	; 1
   139bc:	51 f4       	brne	.+20     	; 0x139d2 <_Z12Pub_Sub_DataPcPhjh+0x15ee>
   139be:	61 ec       	ldi	r22, 0xC1	; 193
   139c0:	74 e3       	ldi	r23, 0x34	; 52
   139c2:	82 e5       	ldi	r24, 0x52	; 82
   139c4:	94 e1       	ldi	r25, 0x14	; 20
   139c6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   139ca:	82 e5       	ldi	r24, 0x52	; 82
   139cc:	94 e1       	ldi	r25, 0x14	; 20
   139ce:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   139d2:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   139d6:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   139da:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   139de:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   139e2:	a0 68       	ori	r26, 0x80	; 128
   139e4:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   139e8:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   139ec:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   139f0:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   139f4:	88 e0       	ldi	r24, 0x08	; 8
   139f6:	80 93 f4 13 	sts	0x13F4, r24	; 0x8013f4 <_sRuble_Parameters+0xad>
   139fa:	64 ef       	ldi	r22, 0xF4	; 244
   139fc:	73 e1       	ldi	r23, 0x13	; 19
   139fe:	88 e1       	ldi	r24, 0x18	; 24
   13a00:	95 e0       	ldi	r25, 0x05	; 5
   13a02:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   13a06:	f1 e0       	ldi	r31, 0x01	; 1
   13a08:	c0 55       	subi	r28, 0x50	; 80
   13a0a:	d9 4f       	sbci	r29, 0xF9	; 249
   13a0c:	f8 83       	st	Y, r31
   13a0e:	c0 5b       	subi	r28, 0xB0	; 176
   13a10:	d6 40       	sbci	r29, 0x06	; 6
   13a12:	1b c0       	rjmp	.+54     	; 0x13a4a <_Z12Pub_Sub_DataPcPhjh+0x1666>
   13a14:	91 30       	cpi	r25, 0x01	; 1
   13a16:	51 f4       	brne	.+20     	; 0x13a2c <_Z12Pub_Sub_DataPcPhjh+0x1648>
   13a18:	63 eb       	ldi	r22, 0xB3	; 179
   13a1a:	74 e3       	ldi	r23, 0x34	; 52
   13a1c:	82 e5       	ldi	r24, 0x52	; 82
   13a1e:	94 e1       	ldi	r25, 0x14	; 20
   13a20:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   13a24:	82 e5       	ldi	r24, 0x52	; 82
   13a26:	94 e1       	ldi	r25, 0x14	; 20
   13a28:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13a2c:	89 e0       	ldi	r24, 0x09	; 9
   13a2e:	80 93 f4 13 	sts	0x13F4, r24	; 0x8013f4 <_sRuble_Parameters+0xad>
   13a32:	64 ef       	ldi	r22, 0xF4	; 244
   13a34:	73 e1       	ldi	r23, 0x13	; 19
   13a36:	88 e1       	ldi	r24, 0x18	; 24
   13a38:	95 e0       	ldi	r25, 0x05	; 5
   13a3a:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   13a3e:	21 e0       	ldi	r18, 0x01	; 1
   13a40:	c0 55       	subi	r28, 0x50	; 80
   13a42:	d9 4f       	sbci	r29, 0xF9	; 249
   13a44:	28 83       	st	Y, r18
   13a46:	c0 5b       	subi	r28, 0xB0	; 176
   13a48:	d6 40       	sbci	r29, 0x06	; 6
   13a4a:	88 e2       	ldi	r24, 0x28	; 40
   13a4c:	d8 01       	movw	r26, r16
   13a4e:	1d 92       	st	X+, r1
   13a50:	8a 95       	dec	r24
   13a52:	e9 f7       	brne	.-6      	; 0x13a4e <_Z12Pub_Sub_DataPcPhjh+0x166a>
   13a54:	87 e6       	ldi	r24, 0x67	; 103
   13a56:	93 e1       	ldi	r25, 0x13	; 19
   13a58:	9f 93       	push	r25
   13a5a:	8f 93       	push	r24
   13a5c:	82 e3       	ldi	r24, 0x32	; 50
   13a5e:	96 e0       	ldi	r25, 0x06	; 6
   13a60:	9f 93       	push	r25
   13a62:	8f 93       	push	r24
   13a64:	1f 93       	push	r17
   13a66:	0f 93       	push	r16
   13a68:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   13a6c:	ca 54       	subi	r28, 0x4A	; 74
   13a6e:	d9 4f       	sbci	r29, 0xF9	; 249
   13a70:	68 81       	ld	r22, Y
   13a72:	79 81       	ldd	r23, Y+1	; 0x01
   13a74:	c6 5b       	subi	r28, 0xB6	; 182
   13a76:	d6 40       	sbci	r29, 0x06	; 6
   13a78:	c8 01       	movw	r24, r16
   13a7a:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   13a7e:	0f 90       	pop	r0
   13a80:	0f 90       	pop	r0
   13a82:	0f 90       	pop	r0
   13a84:	0f 90       	pop	r0
   13a86:	0f 90       	pop	r0
   13a88:	0f 90       	pop	r0
   13a8a:	89 2b       	or	r24, r25
   13a8c:	09 f0       	breq	.+2      	; 0x13a90 <_Z12Pub_Sub_DataPcPhjh+0x16ac>
   13a8e:	53 c1       	rjmp	.+678    	; 0x13d36 <_Z12Pub_Sub_DataPcPhjh+0x1952>
   13a90:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_gStart_Monitoring_Three_Phase>
   13a94:	86 34       	cpi	r24, 0x46	; 70
   13a96:	10 f4       	brcc	.+4      	; 0x13a9c <_Z12Pub_Sub_DataPcPhjh+0x16b8>
   13a98:	0c 94 21 93 	jmp	0x12642	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13a9c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13aa0:	81 30       	cpi	r24, 0x01	; 1
   13aa2:	51 f4       	brne	.+20     	; 0x13ab8 <_Z12Pub_Sub_DataPcPhjh+0x16d4>
   13aa4:	61 e9       	ldi	r22, 0x91	; 145
   13aa6:	74 e3       	ldi	r23, 0x34	; 52
   13aa8:	82 e5       	ldi	r24, 0x52	; 82
   13aaa:	94 e1       	ldi	r25, 0x14	; 20
   13aac:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13ab0:	82 e5       	ldi	r24, 0x52	; 82
   13ab2:	94 e1       	ldi	r25, 0x14	; 20
   13ab4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13ab8:	6d e8       	ldi	r22, 0x8D	; 141
   13aba:	74 e3       	ldi	r23, 0x34	; 52
   13abc:	c2 01       	movw	r24, r4
   13abe:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ac2:	80 93 33 0b 	sts	0x0B33, r24	; 0x800b33 <_sSchedules+0x215>
   13ac6:	81 e0       	ldi	r24, 0x01	; 1
   13ac8:	80 93 3b 0b 	sts	0x0B3B, r24	; 0x800b3b <_sSchedules+0x21d>
   13acc:	10 92 34 0b 	sts	0x0B34, r1	; 0x800b34 <_sSchedules+0x216>
   13ad0:	80 93 36 0b 	sts	0x0B36, r24	; 0x800b36 <_sSchedules+0x218>
   13ad4:	10 92 89 0b 	sts	0x0B89, r1	; 0x800b89 <_sSchedules+0x26b>
   13ad8:	68 e8       	ldi	r22, 0x88	; 136
   13ada:	74 e3       	ldi	r23, 0x34	; 52
   13adc:	c2 01       	movw	r24, r4
   13ade:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ae2:	60 e0       	ldi	r22, 0x00	; 0
   13ae4:	70 e0       	ldi	r23, 0x00	; 0
   13ae6:	0e 94 c0 87 	call	0x10f80	; 0x10f80 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13aea:	60 93 37 0b 	sts	0x0B37, r22	; 0x800b37 <_sSchedules+0x219>
   13aee:	70 93 38 0b 	sts	0x0B38, r23	; 0x800b38 <_sSchedules+0x21a>
   13af2:	80 93 39 0b 	sts	0x0B39, r24	; 0x800b39 <_sSchedules+0x21b>
   13af6:	90 93 3a 0b 	sts	0x0B3A, r25	; 0x800b3a <_sSchedules+0x21c>
   13afa:	60 91 37 0b 	lds	r22, 0x0B37	; 0x800b37 <_sSchedules+0x219>
   13afe:	70 91 38 0b 	lds	r23, 0x0B38	; 0x800b38 <_sSchedules+0x21a>
   13b02:	80 91 39 0b 	lds	r24, 0x0B39	; 0x800b39 <_sSchedules+0x21b>
   13b06:	90 91 3a 0b 	lds	r25, 0x0B3A	; 0x800b3a <_sSchedules+0x21c>
   13b0a:	20 91 37 0b 	lds	r18, 0x0B37	; 0x800b37 <_sSchedules+0x219>
   13b0e:	30 91 38 0b 	lds	r19, 0x0B38	; 0x800b38 <_sSchedules+0x21a>
   13b12:	40 91 39 0b 	lds	r20, 0x0B39	; 0x800b39 <_sSchedules+0x21b>
   13b16:	50 91 3a 0b 	lds	r21, 0x0B3A	; 0x800b3a <_sSchedules+0x21c>
   13b1a:	c0 55       	subi	r28, 0x50	; 80
   13b1c:	d9 4f       	sbci	r29, 0xF9	; 249
   13b1e:	28 83       	st	Y, r18
   13b20:	39 83       	std	Y+1, r19	; 0x01
   13b22:	4a 83       	std	Y+2, r20	; 0x02
   13b24:	5b 83       	std	Y+3, r21	; 0x03
   13b26:	c0 5b       	subi	r28, 0xB0	; 176
   13b28:	d6 40       	sbci	r29, 0x06	; 6
   13b2a:	e4 e6       	ldi	r30, 0x64	; 100
   13b2c:	ce 2e       	mov	r12, r30
   13b2e:	d1 2c       	mov	r13, r1
   13b30:	e1 2c       	mov	r14, r1
   13b32:	f1 2c       	mov	r15, r1
   13b34:	a7 01       	movw	r20, r14
   13b36:	96 01       	movw	r18, r12
   13b38:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   13b3c:	a0 e1       	ldi	r26, 0x10	; 16
   13b3e:	be e0       	ldi	r27, 0x0E	; 14
   13b40:	0e 94 33 e8 	call	0x1d066	; 0x1d066 <__muluhisi3>
   13b44:	4b 01       	movw	r8, r22
   13b46:	5c 01       	movw	r10, r24
   13b48:	c0 55       	subi	r28, 0x50	; 80
   13b4a:	d9 4f       	sbci	r29, 0xF9	; 249
   13b4c:	68 81       	ld	r22, Y
   13b4e:	79 81       	ldd	r23, Y+1	; 0x01
   13b50:	8a 81       	ldd	r24, Y+2	; 0x02
   13b52:	9b 81       	ldd	r25, Y+3	; 0x03
   13b54:	c0 5b       	subi	r28, 0xB0	; 176
   13b56:	d6 40       	sbci	r29, 0x06	; 6
   13b58:	a7 01       	movw	r20, r14
   13b5a:	96 01       	movw	r18, r12
   13b5c:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   13b60:	9b 01       	movw	r18, r22
   13b62:	ac 01       	movw	r20, r24
   13b64:	ac e3       	ldi	r26, 0x3C	; 60
   13b66:	b0 e0       	ldi	r27, 0x00	; 0
   13b68:	0e 94 33 e8 	call	0x1d066	; 0x1d066 <__muluhisi3>
   13b6c:	86 0e       	add	r8, r22
   13b6e:	97 1e       	adc	r9, r23
   13b70:	a8 1e       	adc	r10, r24
   13b72:	b9 1e       	adc	r11, r25
   13b74:	80 92 37 0b 	sts	0x0B37, r8	; 0x800b37 <_sSchedules+0x219>
   13b78:	90 92 38 0b 	sts	0x0B38, r9	; 0x800b38 <_sSchedules+0x21a>
   13b7c:	a0 92 39 0b 	sts	0x0B39, r10	; 0x800b39 <_sSchedules+0x21b>
   13b80:	b0 92 3a 0b 	sts	0x0B3A, r11	; 0x800b3a <_sSchedules+0x21c>
   13b84:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   13b88:	80 93 93 0b 	sts	0x0B93, r24	; 0x800b93 <_sSchedules+0x275>
   13b8c:	62 e8       	ldi	r22, 0x82	; 130
   13b8e:	74 e3       	ldi	r23, 0x34	; 52
   13b90:	c2 01       	movw	r24, r4
   13b92:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13b96:	60 e0       	ldi	r22, 0x00	; 0
   13b98:	70 e0       	ldi	r23, 0x00	; 0
   13b9a:	0e 94 bd 8c 	call	0x1197a	; 0x1197a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13b9e:	80 93 95 0b 	sts	0x0B95, r24	; 0x800b95 <_sSchedules+0x277>
   13ba2:	e1 2c       	mov	r14, r1
   13ba4:	f1 2c       	mov	r15, r1
   13ba6:	67 01       	movw	r12, r14
   13ba8:	4f ef       	ldi	r20, 0xFF	; 255
   13baa:	c4 1a       	sub	r12, r20
   13bac:	d4 0a       	sbc	r13, r20
   13bae:	6c e7       	ldi	r22, 0x7C	; 124
   13bb0:	74 e3       	ldi	r23, 0x34	; 52
   13bb2:	c2 01       	movw	r24, r4
   13bb4:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13bb8:	b6 01       	movw	r22, r12
   13bba:	0e 94 bd 8c 	call	0x1197a	; 0x1197a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13bbe:	d7 01       	movw	r26, r14
   13bc0:	a7 59       	subi	r26, 0x97	; 151
   13bc2:	b4 4f       	sbci	r27, 0xF4	; 244
   13bc4:	7d 01       	movw	r14, r26
   13bc6:	8c 93       	st	X, r24
   13bc8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13bcc:	81 30       	cpi	r24, 0x01	; 1
   13bce:	89 f0       	breq	.+34     	; 0x13bf2 <_Z12Pub_Sub_DataPcPhjh+0x180e>
   13bd0:	76 01       	movw	r14, r12
   13bd2:	3d e0       	ldi	r19, 0x0D	; 13
   13bd4:	c3 16       	cp	r12, r19
   13bd6:	d1 04       	cpc	r13, r1
   13bd8:	31 f7       	brne	.-52     	; 0x13ba6 <_Z12Pub_Sub_DataPcPhjh+0x17c2>
   13bda:	e1 2c       	mov	r14, r1
   13bdc:	f1 2c       	mov	r15, r1
   13bde:	54 e6       	ldi	r21, 0x64	; 100
   13be0:	a5 2e       	mov	r10, r21
   13be2:	b1 2c       	mov	r11, r1
   13be4:	60 e1       	ldi	r22, 0x10	; 16
   13be6:	86 2e       	mov	r8, r22
   13be8:	6e e0       	ldi	r22, 0x0E	; 14
   13bea:	96 2e       	mov	r9, r22
   13bec:	7c e3       	ldi	r23, 0x3C	; 60
   13bee:	77 2e       	mov	r7, r23
   13bf0:	13 c0       	rjmp	.+38     	; 0x13c18 <_Z12Pub_Sub_DataPcPhjh+0x1834>
   13bf2:	62 e7       	ldi	r22, 0x72	; 114
   13bf4:	74 e3       	ldi	r23, 0x34	; 52
   13bf6:	82 e5       	ldi	r24, 0x52	; 82
   13bf8:	94 e1       	ldi	r25, 0x14	; 20
   13bfa:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13bfe:	f7 01       	movw	r30, r14
   13c00:	60 81       	ld	r22, Z
   13c02:	4a e0       	ldi	r20, 0x0A	; 10
   13c04:	50 e0       	ldi	r21, 0x00	; 0
   13c06:	82 e5       	ldi	r24, 0x52	; 82
   13c08:	94 e1       	ldi	r25, 0x14	; 20
   13c0a:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   13c0e:	82 e5       	ldi	r24, 0x52	; 82
   13c10:	94 e1       	ldi	r25, 0x14	; 20
   13c12:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13c16:	dc cf       	rjmp	.-72     	; 0x13bd0 <_Z12Pub_Sub_DataPcPhjh+0x17ec>
   13c18:	67 01       	movw	r12, r14
   13c1a:	2f ef       	ldi	r18, 0xFF	; 255
   13c1c:	c2 1a       	sub	r12, r18
   13c1e:	d2 0a       	sbc	r13, r18
   13c20:	6d e6       	ldi	r22, 0x6D	; 109
   13c22:	74 e3       	ldi	r23, 0x34	; 52
   13c24:	c2 01       	movw	r24, r4
   13c26:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c2a:	b6 01       	movw	r22, r12
   13c2c:	0e 94 6c 8c 	call	0x118d8	; 0x118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13c30:	97 01       	movw	r18, r14
   13c32:	22 0f       	add	r18, r18
   13c34:	33 1f       	adc	r19, r19
   13c36:	a9 01       	movw	r20, r18
   13c38:	44 5c       	subi	r20, 0xC4	; 196
   13c3a:	54 4f       	sbci	r21, 0xF4	; 244
   13c3c:	7a 01       	movw	r14, r20
   13c3e:	da 01       	movw	r26, r20
   13c40:	11 96       	adiw	r26, 0x01	; 1
   13c42:	9c 93       	st	X, r25
   13c44:	8e 93       	st	-X, r24
   13c46:	8d 91       	ld	r24, X+
   13c48:	9c 91       	ld	r25, X
   13c4a:	11 97       	sbiw	r26, 0x01	; 1
   13c4c:	2d 91       	ld	r18, X+
   13c4e:	3c 91       	ld	r19, X
   13c50:	b5 01       	movw	r22, r10
   13c52:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   13c56:	68 9d       	mul	r22, r8
   13c58:	f0 01       	movw	r30, r0
   13c5a:	69 9d       	mul	r22, r9
   13c5c:	f0 0d       	add	r31, r0
   13c5e:	78 9d       	mul	r23, r8
   13c60:	f0 0d       	add	r31, r0
   13c62:	11 24       	eor	r1, r1
   13c64:	c9 01       	movw	r24, r18
   13c66:	b5 01       	movw	r22, r10
   13c68:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   13c6c:	78 9e       	mul	r7, r24
   13c6e:	90 01       	movw	r18, r0
   13c70:	79 9e       	mul	r7, r25
   13c72:	30 0d       	add	r19, r0
   13c74:	11 24       	eor	r1, r1
   13c76:	cf 01       	movw	r24, r30
   13c78:	82 0f       	add	r24, r18
   13c7a:	93 1f       	adc	r25, r19
   13c7c:	f7 01       	movw	r30, r14
   13c7e:	91 83       	std	Z+1, r25	; 0x01
   13c80:	80 83       	st	Z, r24
   13c82:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13c86:	81 30       	cpi	r24, 0x01	; 1
   13c88:	41 f0       	breq	.+16     	; 0x13c9a <_Z12Pub_Sub_DataPcPhjh+0x18b6>
   13c8a:	76 01       	movw	r14, r12
   13c8c:	fd e0       	ldi	r31, 0x0D	; 13
   13c8e:	cf 16       	cp	r12, r31
   13c90:	d1 04       	cpc	r13, r1
   13c92:	11 f6       	brne	.-124    	; 0x13c18 <_Z12Pub_Sub_DataPcPhjh+0x1834>
   13c94:	e1 2c       	mov	r14, r1
   13c96:	f1 2c       	mov	r15, r1
   13c98:	14 c0       	rjmp	.+40     	; 0x13cc2 <_Z12Pub_Sub_DataPcPhjh+0x18de>
   13c9a:	6b e5       	ldi	r22, 0x5B	; 91
   13c9c:	74 e3       	ldi	r23, 0x34	; 52
   13c9e:	82 e5       	ldi	r24, 0x52	; 82
   13ca0:	94 e1       	ldi	r25, 0x14	; 20
   13ca2:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13ca6:	d7 01       	movw	r26, r14
   13ca8:	6d 91       	ld	r22, X+
   13caa:	7c 91       	ld	r23, X
   13cac:	4a e0       	ldi	r20, 0x0A	; 10
   13cae:	50 e0       	ldi	r21, 0x00	; 0
   13cb0:	82 e5       	ldi	r24, 0x52	; 82
   13cb2:	94 e1       	ldi	r25, 0x14	; 20
   13cb4:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
   13cb8:	82 e5       	ldi	r24, 0x52	; 82
   13cba:	94 e1       	ldi	r25, 0x14	; 20
   13cbc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13cc0:	e4 cf       	rjmp	.-56     	; 0x13c8a <_Z12Pub_Sub_DataPcPhjh+0x18a6>
   13cc2:	67 01       	movw	r12, r14
   13cc4:	ef ef       	ldi	r30, 0xFF	; 255
   13cc6:	ce 1a       	sub	r12, r30
   13cc8:	de 0a       	sbc	r13, r30
   13cca:	64 e5       	ldi	r22, 0x54	; 84
   13ccc:	74 e3       	ldi	r23, 0x34	; 52
   13cce:	c2 01       	movw	r24, r4
   13cd0:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13cd4:	b6 01       	movw	r22, r12
   13cd6:	0e 94 bd 8c 	call	0x1197a	; 0x1197a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13cda:	97 01       	movw	r18, r14
   13cdc:	26 5a       	subi	r18, 0xA6	; 166
   13cde:	34 4f       	sbci	r19, 0xF4	; 244
   13ce0:	79 01       	movw	r14, r18
   13ce2:	d9 01       	movw	r26, r18
   13ce4:	8c 93       	st	X, r24
   13ce6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13cea:	81 30       	cpi	r24, 0x01	; 1
   13cec:	89 f0       	breq	.+34     	; 0x13d10 <_Z12Pub_Sub_DataPcPhjh+0x192c>
   13cee:	76 01       	movw	r14, r12
   13cf0:	bd e0       	ldi	r27, 0x0D	; 13
   13cf2:	cb 16       	cp	r12, r27
   13cf4:	d1 04       	cpc	r13, r1
   13cf6:	29 f7       	brne	.-54     	; 0x13cc2 <_Z12Pub_Sub_DataPcPhjh+0x18de>
   13cf8:	81 e0       	ldi	r24, 0x01	; 1
   13cfa:	80 93 95 0c 	sts	0x0C95, r24	; 0x800c95 <plot_schedule_topic>
   13cfe:	10 92 96 0c 	sts	0x0C96, r1	; 0x800c96 <_gTank_Topic_check>
   13d02:	f1 e0       	ldi	r31, 0x01	; 1
   13d04:	c0 55       	subi	r28, 0x50	; 80
   13d06:	d9 4f       	sbci	r29, 0xF9	; 249
   13d08:	f8 83       	st	Y, r31
   13d0a:	c0 5b       	subi	r28, 0xB0	; 176
   13d0c:	d6 40       	sbci	r29, 0x06	; 6
   13d0e:	13 c0       	rjmp	.+38     	; 0x13d36 <_Z12Pub_Sub_DataPcPhjh+0x1952>
   13d10:	69 e4       	ldi	r22, 0x49	; 73
   13d12:	74 e3       	ldi	r23, 0x34	; 52
   13d14:	82 e5       	ldi	r24, 0x52	; 82
   13d16:	94 e1       	ldi	r25, 0x14	; 20
   13d18:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   13d1c:	f7 01       	movw	r30, r14
   13d1e:	60 81       	ld	r22, Z
   13d20:	4a e0       	ldi	r20, 0x0A	; 10
   13d22:	50 e0       	ldi	r21, 0x00	; 0
   13d24:	82 e5       	ldi	r24, 0x52	; 82
   13d26:	94 e1       	ldi	r25, 0x14	; 20
   13d28:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   13d2c:	82 e5       	ldi	r24, 0x52	; 82
   13d2e:	94 e1       	ldi	r25, 0x14	; 20
   13d30:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13d34:	dc cf       	rjmp	.-72     	; 0x13cee <_Z12Pub_Sub_DataPcPhjh+0x190a>
   13d36:	88 e2       	ldi	r24, 0x28	; 40
   13d38:	d8 01       	movw	r26, r16
   13d3a:	1d 92       	st	X+, r1
   13d3c:	8a 95       	dec	r24
   13d3e:	e9 f7       	brne	.-6      	; 0x13d3a <_Z12Pub_Sub_DataPcPhjh+0x1956>
   13d40:	87 e6       	ldi	r24, 0x67	; 103
   13d42:	93 e1       	ldi	r25, 0x13	; 19
   13d44:	9f 93       	push	r25
   13d46:	8f 93       	push	r24
   13d48:	84 e5       	ldi	r24, 0x54	; 84
   13d4a:	96 e0       	ldi	r25, 0x06	; 6
   13d4c:	9f 93       	push	r25
   13d4e:	8f 93       	push	r24
   13d50:	1f 93       	push	r17
   13d52:	0f 93       	push	r16
   13d54:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   13d58:	ca 54       	subi	r28, 0x4A	; 74
   13d5a:	d9 4f       	sbci	r29, 0xF9	; 249
   13d5c:	68 81       	ld	r22, Y
   13d5e:	79 81       	ldd	r23, Y+1	; 0x01
   13d60:	c6 5b       	subi	r28, 0xB6	; 182
   13d62:	d6 40       	sbci	r29, 0x06	; 6
   13d64:	c8 01       	movw	r24, r16
   13d66:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   13d6a:	0f 90       	pop	r0
   13d6c:	0f 90       	pop	r0
   13d6e:	0f 90       	pop	r0
   13d70:	0f 90       	pop	r0
   13d72:	0f 90       	pop	r0
   13d74:	0f 90       	pop	r0
   13d76:	89 2b       	or	r24, r25
   13d78:	09 f0       	breq	.+2      	; 0x13d7c <_Z12Pub_Sub_DataPcPhjh+0x1998>
   13d7a:	cc c2       	rjmp	.+1432   	; 0x14314 <_Z12Pub_Sub_DataPcPhjh+0x1f30>
   13d7c:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_gStart_Monitoring_Three_Phase>
   13d80:	86 34       	cpi	r24, 0x46	; 70
   13d82:	10 f4       	brcc	.+4      	; 0x13d88 <_Z12Pub_Sub_DataPcPhjh+0x19a4>
   13d84:	0c 94 21 93 	jmp	0x12642	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13d88:	80 91 95 0c 	lds	r24, 0x0C95	; 0x800c95 <plot_schedule_topic>
   13d8c:	88 23       	and	r24, r24
   13d8e:	11 f4       	brne	.+4      	; 0x13d94 <_Z12Pub_Sub_DataPcPhjh+0x19b0>
   13d90:	0c 94 21 93 	jmp	0x12642	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13d94:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTank_Topic_check>
   13d98:	83 33       	cpi	r24, 0x33	; 51
   13d9a:	10 f0       	brcs	.+4      	; 0x13da0 <_Z12Pub_Sub_DataPcPhjh+0x19bc>
   13d9c:	0c 94 21 93 	jmp	0x12642	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   13da0:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   13da4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   13da8:	81 30       	cpi	r24, 0x01	; 1
   13daa:	51 f4       	brne	.+20     	; 0x13dc0 <_Z12Pub_Sub_DataPcPhjh+0x19dc>
   13dac:	6b e2       	ldi	r22, 0x2B	; 43
   13dae:	74 e3       	ldi	r23, 0x34	; 52
   13db0:	82 e5       	ldi	r24, 0x52	; 82
   13db2:	94 e1       	ldi	r25, 0x14	; 20
   13db4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   13db8:	82 e5       	ldi	r24, 0x52	; 82
   13dba:	94 e1       	ldi	r25, 0x14	; 20
   13dbc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   13dc0:	81 e0       	ldi	r24, 0x01	; 1
   13dc2:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <_sSchedules+0x1>
   13dc6:	80 91 33 0b 	lds	r24, 0x0B33	; 0x800b33 <_sSchedules+0x215>
   13dca:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <_sSchedules>
   13dce:	e1 2c       	mov	r14, r1
   13dd0:	f1 2c       	mov	r15, r1
   13dd2:	66 e2       	ldi	r22, 0x26	; 38
   13dd4:	74 e3       	ldi	r23, 0x34	; 52
   13dd6:	c2 01       	movw	r24, r4
   13dd8:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ddc:	b7 01       	movw	r22, r14
   13dde:	6d 5f       	subi	r22, 0xFD	; 253
   13de0:	7f 4f       	sbci	r23, 0xFF	; 255
   13de2:	0e 94 bd 8c 	call	0x1197a	; 0x1197a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13de6:	f7 01       	movw	r30, r14
   13de8:	e1 59       	subi	r30, 0x91	; 145
   13dea:	f5 4f       	sbci	r31, 0xF5	; 245
   13dec:	80 83       	st	Z, r24
   13dee:	bf ef       	ldi	r27, 0xFF	; 255
   13df0:	eb 1a       	sub	r14, r27
   13df2:	fb 0a       	sbc	r15, r27
   13df4:	e7 e2       	ldi	r30, 0x27	; 39
   13df6:	ee 16       	cp	r14, r30
   13df8:	f1 04       	cpc	r15, r1
   13dfa:	59 f7       	brne	.-42     	; 0x13dd2 <_Z12Pub_Sub_DataPcPhjh+0x19ee>
   13dfc:	e1 2c       	mov	r14, r1
   13dfe:	f1 2c       	mov	r15, r1
   13e00:	61 e2       	ldi	r22, 0x21	; 33
   13e02:	74 e3       	ldi	r23, 0x34	; 52
   13e04:	c2 01       	movw	r24, r4
   13e06:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e0a:	b7 01       	movw	r22, r14
   13e0c:	6d 5f       	subi	r22, 0xFD	; 253
   13e0e:	7f 4f       	sbci	r23, 0xFF	; 255
   13e10:	0e 94 bd 8c 	call	0x1197a	; 0x1197a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13e14:	f7 01       	movw	r30, r14
   13e16:	e8 56       	subi	r30, 0x68	; 104
   13e18:	f6 4f       	sbci	r31, 0xF6	; 246
   13e1a:	80 83       	st	Z, r24
   13e1c:	ff ef       	ldi	r31, 0xFF	; 255
   13e1e:	ef 1a       	sub	r14, r31
   13e20:	ff 0a       	sbc	r15, r31
   13e22:	27 e2       	ldi	r18, 0x27	; 39
   13e24:	e2 16       	cp	r14, r18
   13e26:	f1 04       	cpc	r15, r1
   13e28:	59 f7       	brne	.-42     	; 0x13e00 <_Z12Pub_Sub_DataPcPhjh+0x1a1c>
   13e2a:	e1 2c       	mov	r14, r1
   13e2c:	f1 2c       	mov	r15, r1
   13e2e:	b4 e6       	ldi	r27, 0x64	; 100
   13e30:	cb 2e       	mov	r12, r27
   13e32:	d1 2c       	mov	r13, r1
   13e34:	80 e1       	ldi	r24, 0x10	; 16
   13e36:	a8 2e       	mov	r10, r24
   13e38:	8e e0       	ldi	r24, 0x0E	; 14
   13e3a:	b8 2e       	mov	r11, r24
   13e3c:	9c e3       	ldi	r25, 0x3C	; 60
   13e3e:	79 2e       	mov	r7, r25
   13e40:	6c e1       	ldi	r22, 0x1C	; 28
   13e42:	74 e3       	ldi	r23, 0x34	; 52
   13e44:	c2 01       	movw	r24, r4
   13e46:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13e4a:	b7 01       	movw	r22, r14
   13e4c:	6d 5f       	subi	r22, 0xFD	; 253
   13e4e:	7f 4f       	sbci	r23, 0xFF	; 255
   13e50:	0e 94 6c 8c 	call	0x118d8	; 0x118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13e54:	f7 01       	movw	r30, r14
   13e56:	ee 0f       	add	r30, r30
   13e58:	ff 1f       	adc	r31, r31
   13e5a:	ed 53       	subi	r30, 0x3D	; 61
   13e5c:	f6 4f       	sbci	r31, 0xF6	; 246
   13e5e:	91 83       	std	Z+1, r25	; 0x01
   13e60:	80 83       	st	Z, r24
   13e62:	80 81       	ld	r24, Z
   13e64:	91 81       	ldd	r25, Z+1	; 0x01
   13e66:	80 80       	ld	r8, Z
   13e68:	91 80       	ldd	r9, Z+1	; 0x01
   13e6a:	b6 01       	movw	r22, r12
   13e6c:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   13e70:	6a 9d       	mul	r22, r10
   13e72:	90 01       	movw	r18, r0
   13e74:	6b 9d       	mul	r22, r11
   13e76:	30 0d       	add	r19, r0
   13e78:	7a 9d       	mul	r23, r10
   13e7a:	30 0d       	add	r19, r0
   13e7c:	11 24       	eor	r1, r1
   13e7e:	c4 01       	movw	r24, r8
   13e80:	b6 01       	movw	r22, r12
   13e82:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   13e86:	78 9e       	mul	r7, r24
   13e88:	a0 01       	movw	r20, r0
   13e8a:	79 9e       	mul	r7, r25
   13e8c:	50 0d       	add	r21, r0
   13e8e:	11 24       	eor	r1, r1
   13e90:	24 0f       	add	r18, r20
   13e92:	35 1f       	adc	r19, r21
   13e94:	31 83       	std	Z+1, r19	; 0x01
   13e96:	20 83       	st	Z, r18
   13e98:	3f ef       	ldi	r19, 0xFF	; 255
   13e9a:	e3 1a       	sub	r14, r19
   13e9c:	f3 0a       	sbc	r15, r19
   13e9e:	47 e2       	ldi	r20, 0x27	; 39
   13ea0:	e4 16       	cp	r14, r20
   13ea2:	f1 04       	cpc	r15, r1
   13ea4:	69 f6       	brne	.-102    	; 0x13e40 <_Z12Pub_Sub_DataPcPhjh+0x1a5c>
   13ea6:	e1 2c       	mov	r14, r1
   13ea8:	f1 2c       	mov	r15, r1
   13eaa:	64 e6       	ldi	r22, 0x64	; 100
   13eac:	c6 2e       	mov	r12, r22
   13eae:	d1 2c       	mov	r13, r1
   13eb0:	70 e1       	ldi	r23, 0x10	; 16
   13eb2:	a7 2e       	mov	r10, r23
   13eb4:	7e e0       	ldi	r23, 0x0E	; 14
   13eb6:	b7 2e       	mov	r11, r23
   13eb8:	ec e3       	ldi	r30, 0x3C	; 60
   13eba:	7e 2e       	mov	r7, r30
   13ebc:	67 e1       	ldi	r22, 0x17	; 23
   13ebe:	74 e3       	ldi	r23, 0x34	; 52
   13ec0:	c2 01       	movw	r24, r4
   13ec2:	0e 94 0e 8c 	call	0x1181c	; 0x1181c <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ec6:	b7 01       	movw	r22, r14
   13ec8:	6d 5f       	subi	r22, 0xFD	; 253
   13eca:	7f 4f       	sbci	r23, 0xFF	; 255
   13ecc:	0e 94 6c 8c 	call	0x118d8	; 0x118d8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13ed0:	f7 01       	movw	r30, r14
   13ed2:	ee 0f       	add	r30, r30
   13ed4:	ff 1f       	adc	r31, r31
   13ed6:	e7 5e       	subi	r30, 0xE7	; 231
   13ed8:	f5 4f       	sbci	r31, 0xF5	; 245
   13eda:	91 83       	std	Z+1, r25	; 0x01
   13edc:	80 83       	st	Z, r24
   13ede:	80 81       	ld	r24, Z
   13ee0:	91 81       	ldd	r25, Z+1	; 0x01
   13ee2:	80 80       	ld	r8, Z
   13ee4:	91 80       	ldd	r9, Z+1	; 0x01
   13ee6:	b6 01       	movw	r22, r12
   13ee8:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   13eec:	6a 9d       	mul	r22, r10
   13eee:	90 01       	movw	r18, r0
   13ef0:	6b 9d       	mul	r22, r11
   13ef2:	30 0d       	add	r19, r0
   13ef4:	7a 9d       	mul	r23, r10
   13ef6:	30 0d       	add	r19, r0
   13ef8:	11 24       	eor	r1, r1
   13efa:	c4 01       	movw	r24, r8
   13efc:	b6 01       	movw	r22, r12
   13efe:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   13f02:	78 9e       	mul	r7, r24
   13f04:	a0 01       	movw	r20, r0
   13f06:	79 9e       	mul	r7, r25
   13f08:	50 0d       	add	r21, r0
   13f0a:	11 24       	eor	r1, r1
   13f0c:	24 0f       	add	r18, r20
   13f0e:	35 1f       	adc	r19, r21
   13f10:	31 83       	std	Z+1, r19	; 0x01
   13f12:	20 83       	st	Z, r18
   13f14:	5f ef       	ldi	r21, 0xFF	; 255
   13f16:	e5 1a       	sub	r14, r21
   13f18:	f5 0a       	sbc	r15, r21
   13f1a:	87 e2       	ldi	r24, 0x27	; 39
   13f1c:	e8 16       	cp	r14, r24
   13f1e:	f1 04       	cpc	r15, r1
   13f20:	69 f6       	brne	.-102    	; 0x13ebc <_Z12Pub_Sub_DataPcPhjh+0x1ad8>
   13f22:	80 e0       	ldi	r24, 0x00	; 0
   13f24:	90 e0       	ldi	r25, 0x00	; 0
   13f26:	fc 01       	movw	r30, r24
   13f28:	e2 5e       	subi	r30, 0xE2	; 226
   13f2a:	f6 4f       	sbci	r31, 0xF6	; 246
   13f2c:	df 01       	movw	r26, r30
   13f2e:	a4 5c       	subi	r26, 0xC4	; 196
   13f30:	bd 4f       	sbci	r27, 0xFD	; 253
   13f32:	2c 91       	ld	r18, X
   13f34:	25 af       	std	Z+61, r18	; 0x3d
   13f36:	01 96       	adiw	r24, 0x01	; 1
   13f38:	8e 30       	cpi	r24, 0x0E	; 14
   13f3a:	91 05       	cpc	r25, r1
   13f3c:	a1 f7       	brne	.-24     	; 0x13f26 <_Z12Pub_Sub_DataPcPhjh+0x1b42>
   13f3e:	80 e0       	ldi	r24, 0x00	; 0
   13f40:	90 e0       	ldi	r25, 0x00	; 0
   13f42:	fc 01       	movw	r30, r24
   13f44:	ee 0f       	add	r30, r30
   13f46:	ff 1f       	adc	r31, r31
   13f48:	e4 5c       	subi	r30, 0xC4	; 196
   13f4a:	f4 4f       	sbci	r31, 0xF4	; 244
   13f4c:	20 81       	ld	r18, Z
   13f4e:	31 81       	ldd	r19, Z+1	; 0x01
   13f50:	fc 01       	movw	r30, r24
   13f52:	ee 0f       	add	r30, r30
   13f54:	ff 1f       	adc	r31, r31
   13f56:	e2 5e       	subi	r30, 0xE2	; 226
   13f58:	f6 4f       	sbci	r31, 0xF6	; 246
   13f5a:	30 a3       	std	Z+32, r19	; 0x20
   13f5c:	27 8f       	std	Z+31, r18	; 0x1f
   13f5e:	01 96       	adiw	r24, 0x01	; 1
   13f60:	8e 30       	cpi	r24, 0x0E	; 14
   13f62:	91 05       	cpc	r25, r1
   13f64:	71 f7       	brne	.-36     	; 0x13f42 <_Z12Pub_Sub_DataPcPhjh+0x1b5e>
   13f66:	80 e0       	ldi	r24, 0x00	; 0
   13f68:	90 e0       	ldi	r25, 0x00	; 0
   13f6a:	9c 01       	movw	r18, r24
   13f6c:	22 5e       	subi	r18, 0xE2	; 226
   13f6e:	36 4f       	sbci	r19, 0xF6	; 246
   13f70:	f9 01       	movw	r30, r18
   13f72:	e5 5b       	subi	r30, 0xB5	; 181
   13f74:	fd 4f       	sbci	r31, 0xFD	; 253
   13f76:	40 81       	ld	r20, Z
   13f78:	ef 5f       	subi	r30, 0xFF	; 255
   13f7a:	f1 40       	sbci	r31, 0x01	; 1
   13f7c:	40 83       	st	Z, r20
   13f7e:	01 96       	adiw	r24, 0x01	; 1
   13f80:	8e 30       	cpi	r24, 0x0E	; 14
   13f82:	91 05       	cpc	r25, r1
   13f84:	91 f7       	brne	.-28     	; 0x13f6a <_Z12Pub_Sub_DataPcPhjh+0x1b86>
   13f86:	e1 2c       	mov	r14, r1
   13f88:	f1 2c       	mov	r15, r1
   13f8a:	40 e0       	ldi	r20, 0x00	; 0
   13f8c:	50 e0       	ldi	r21, 0x00	; 0
   13f8e:	91 2c       	mov	r9, r1
   13f90:	fa 01       	movw	r30, r20
   13f92:	e2 5e       	subi	r30, 0xE2	; 226
   13f94:	f6 4f       	sbci	r31, 0xF6	; 246
   13f96:	85 ad       	ldd	r24, Z+61	; 0x3d
   13f98:	81 30       	cpi	r24, 0x01	; 1
   13f9a:	09 f0       	breq	.+2      	; 0x13f9e <_Z12Pub_Sub_DataPcPhjh+0x1bba>
   13f9c:	6c c0       	rjmp	.+216    	; 0x14076 <_Z12Pub_Sub_DataPcPhjh+0x1c92>
   13f9e:	89 2d       	mov	r24, r9
   13fa0:	90 e0       	ldi	r25, 0x00	; 0
   13fa2:	25 ad       	ldd	r18, Z+61	; 0x3d
   13fa4:	bc 01       	movw	r22, r24
   13fa6:	62 5e       	subi	r22, 0xE2	; 226
   13fa8:	76 4f       	sbci	r23, 0xF6	; 246
   13faa:	db 01       	movw	r26, r22
   13fac:	dd 96       	adiw	r26, 0x3d	; 61
   13fae:	2c 93       	st	X, r18
   13fb0:	9a 01       	movw	r18, r20
   13fb2:	22 0f       	add	r18, r18
   13fb4:	33 1f       	adc	r19, r19
   13fb6:	22 5e       	subi	r18, 0xE2	; 226
   13fb8:	36 4f       	sbci	r19, 0xF6	; 246
   13fba:	d9 01       	movw	r26, r18
   13fbc:	5f 96       	adiw	r26, 0x1f	; 31
   13fbe:	2d 91       	ld	r18, X+
   13fc0:	3c 91       	ld	r19, X
   13fc2:	90 97       	sbiw	r26, 0x20	; 32
   13fc4:	88 0f       	add	r24, r24
   13fc6:	99 1f       	adc	r25, r25
   13fc8:	82 5e       	subi	r24, 0xE2	; 226
   13fca:	96 4f       	sbci	r25, 0xF6	; 246
   13fcc:	dc 01       	movw	r26, r24
   13fce:	90 96       	adiw	r26, 0x20	; 32
   13fd0:	3c 93       	st	X, r19
   13fd2:	2e 93       	st	-X, r18
   13fd4:	5f 97       	sbiw	r26, 0x1f	; 31
   13fd6:	e4 5b       	subi	r30, 0xB4	; 180
   13fd8:	ff 4f       	sbci	r31, 0xFF	; 255
   13fda:	80 81       	ld	r24, Z
   13fdc:	db 01       	movw	r26, r22
   13fde:	a4 5b       	subi	r26, 0xB4	; 180
   13fe0:	bf 4f       	sbci	r27, 0xFF	; 255
   13fe2:	8c 93       	st	X, r24
   13fe4:	b3 e0       	ldi	r27, 0x03	; 3
   13fe6:	9b 9e       	mul	r9, r27
   13fe8:	50 01       	movw	r10, r0
   13fea:	11 24       	eor	r1, r1
   13fec:	60 e0       	ldi	r22, 0x00	; 0
   13fee:	70 e0       	ldi	r23, 0x00	; 0
   13ff0:	35 01       	movw	r6, r10
   13ff2:	66 0e       	add	r6, r22
   13ff4:	77 1e       	adc	r7, r23
   13ff6:	97 01       	movw	r18, r14
   13ff8:	26 0f       	add	r18, r22
   13ffa:	37 1f       	adc	r19, r23
   13ffc:	d9 01       	movw	r26, r18
   13ffe:	a2 5e       	subi	r26, 0xE2	; 226
   14000:	b6 4f       	sbci	r27, 0xF6	; 246
   14002:	fd 01       	movw	r30, r26
   14004:	ef 5a       	subi	r30, 0xAF	; 175
   14006:	fe 4f       	sbci	r31, 0xFE	; 254
   14008:	80 80       	ld	r8, Z
   1400a:	f3 01       	movw	r30, r6
   1400c:	e2 5e       	subi	r30, 0xE2	; 226
   1400e:	f6 4f       	sbci	r31, 0xF6	; 246
   14010:	6f 01       	movw	r12, r30
   14012:	ff ea       	ldi	r31, 0xAF	; 175
   14014:	cf 1a       	sub	r12, r31
   14016:	fe ef       	ldi	r31, 0xFE	; 254
   14018:	df 0a       	sbc	r13, r31
   1401a:	f6 01       	movw	r30, r12
   1401c:	80 82       	st	Z, r8
   1401e:	a6 58       	subi	r26, 0x86	; 134
   14020:	bf 4f       	sbci	r27, 0xFF	; 255
   14022:	ac 91       	ld	r26, X
   14024:	e7 5d       	subi	r30, 0xD7	; 215
   14026:	f1 09       	sbc	r31, r1
   14028:	a0 83       	st	Z, r26
   1402a:	22 0f       	add	r18, r18
   1402c:	33 1f       	adc	r19, r19
   1402e:	22 5e       	subi	r18, 0xE2	; 226
   14030:	36 4f       	sbci	r19, 0xF6	; 246
   14032:	f9 01       	movw	r30, r18
   14034:	eb 55       	subi	r30, 0x5B	; 91
   14036:	ff 4f       	sbci	r31, 0xFF	; 255
   14038:	01 90       	ld	r0, Z+
   1403a:	f0 81       	ld	r31, Z
   1403c:	e0 2d       	mov	r30, r0
   1403e:	c3 01       	movw	r24, r6
   14040:	88 0f       	add	r24, r24
   14042:	99 1f       	adc	r25, r25
   14044:	82 5e       	subi	r24, 0xE2	; 226
   14046:	96 4f       	sbci	r25, 0xF6	; 246
   14048:	dc 01       	movw	r26, r24
   1404a:	ab 55       	subi	r26, 0x5B	; 91
   1404c:	bf 4f       	sbci	r27, 0xFF	; 255
   1404e:	11 96       	adiw	r26, 0x01	; 1
   14050:	fc 93       	st	X, r31
   14052:	ee 93       	st	-X, r30
   14054:	f9 01       	movw	r30, r18
   14056:	e5 50       	subi	r30, 0x05	; 5
   14058:	ff 4f       	sbci	r31, 0xFF	; 255
   1405a:	20 81       	ld	r18, Z
   1405c:	31 81       	ldd	r19, Z+1	; 0x01
   1405e:	fc 01       	movw	r30, r24
   14060:	e5 50       	subi	r30, 0x05	; 5
   14062:	ff 4f       	sbci	r31, 0xFF	; 255
   14064:	31 83       	std	Z+1, r19	; 0x01
   14066:	20 83       	st	Z, r18
   14068:	6f 5f       	subi	r22, 0xFF	; 255
   1406a:	7f 4f       	sbci	r23, 0xFF	; 255
   1406c:	63 30       	cpi	r22, 0x03	; 3
   1406e:	71 05       	cpc	r23, r1
   14070:	09 f0       	breq	.+2      	; 0x14074 <_Z12Pub_Sub_DataPcPhjh+0x1c90>
   14072:	be cf       	rjmp	.-132    	; 0x13ff0 <_Z12Pub_Sub_DataPcPhjh+0x1c0c>
   14074:	93 94       	inc	r9
   14076:	4f 5f       	subi	r20, 0xFF	; 255
   14078:	5f 4f       	sbci	r21, 0xFF	; 255
   1407a:	f3 e0       	ldi	r31, 0x03	; 3
   1407c:	ef 0e       	add	r14, r31
   1407e:	f1 1c       	adc	r15, r1
   14080:	4e 30       	cpi	r20, 0x0E	; 14
   14082:	51 05       	cpc	r21, r1
   14084:	09 f0       	breq	.+2      	; 0x14088 <_Z12Pub_Sub_DataPcPhjh+0x1ca4>
   14086:	84 cf       	rjmp	.-248    	; 0x13f90 <_Z12Pub_Sub_DataPcPhjh+0x1bac>
   14088:	2d e0       	ldi	r18, 0x0D	; 13
   1408a:	29 15       	cp	r18, r9
   1408c:	08 f0       	brcs	.+2      	; 0x14090 <_Z12Pub_Sub_DataPcPhjh+0x1cac>
   1408e:	96 c2       	rjmp	.+1324   	; 0x145bc <_Z12Pub_Sub_DataPcPhjh+0x21d8>
   14090:	e1 2c       	mov	r14, r1
   14092:	f1 2c       	mov	r15, r1
   14094:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14098:	81 30       	cpi	r24, 0x01	; 1
   1409a:	a1 f4       	brne	.+40     	; 0x140c4 <_Z12Pub_Sub_DataPcPhjh+0x1ce0>
   1409c:	6c e0       	ldi	r22, 0x0C	; 12
   1409e:	74 e3       	ldi	r23, 0x34	; 52
   140a0:	82 e5       	ldi	r24, 0x52	; 82
   140a2:	94 e1       	ldi	r25, 0x14	; 20
   140a4:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   140a8:	f7 01       	movw	r30, r14
   140aa:	e2 5e       	subi	r30, 0xE2	; 226
   140ac:	f6 4f       	sbci	r31, 0xF6	; 246
   140ae:	65 ad       	ldd	r22, Z+61	; 0x3d
   140b0:	4a e0       	ldi	r20, 0x0A	; 10
   140b2:	50 e0       	ldi	r21, 0x00	; 0
   140b4:	82 e5       	ldi	r24, 0x52	; 82
   140b6:	94 e1       	ldi	r25, 0x14	; 20
   140b8:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   140bc:	82 e5       	ldi	r24, 0x52	; 82
   140be:	94 e1       	ldi	r25, 0x14	; 20
   140c0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   140c4:	4f ef       	ldi	r20, 0xFF	; 255
   140c6:	e4 1a       	sub	r14, r20
   140c8:	f4 0a       	sbc	r15, r20
   140ca:	5e e0       	ldi	r21, 0x0E	; 14
   140cc:	e5 16       	cp	r14, r21
   140ce:	f1 04       	cpc	r15, r1
   140d0:	09 f7       	brne	.-62     	; 0x14094 <_Z12Pub_Sub_DataPcPhjh+0x1cb0>
   140d2:	e1 2c       	mov	r14, r1
   140d4:	f1 2c       	mov	r15, r1
   140d6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   140da:	81 30       	cpi	r24, 0x01	; 1
   140dc:	b9 f4       	brne	.+46     	; 0x1410c <_Z12Pub_Sub_DataPcPhjh+0x1d28>
   140de:	6a ef       	ldi	r22, 0xFA	; 250
   140e0:	73 e3       	ldi	r23, 0x33	; 51
   140e2:	82 e5       	ldi	r24, 0x52	; 82
   140e4:	94 e1       	ldi	r25, 0x14	; 20
   140e6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   140ea:	f7 01       	movw	r30, r14
   140ec:	ee 0f       	add	r30, r30
   140ee:	ff 1f       	adc	r31, r31
   140f0:	e2 5e       	subi	r30, 0xE2	; 226
   140f2:	f6 4f       	sbci	r31, 0xF6	; 246
   140f4:	67 8d       	ldd	r22, Z+31	; 0x1f
   140f6:	70 a1       	ldd	r23, Z+32	; 0x20
   140f8:	4a e0       	ldi	r20, 0x0A	; 10
   140fa:	50 e0       	ldi	r21, 0x00	; 0
   140fc:	82 e5       	ldi	r24, 0x52	; 82
   140fe:	94 e1       	ldi	r25, 0x14	; 20
   14100:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
   14104:	82 e5       	ldi	r24, 0x52	; 82
   14106:	94 e1       	ldi	r25, 0x14	; 20
   14108:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1410c:	8f ef       	ldi	r24, 0xFF	; 255
   1410e:	e8 1a       	sub	r14, r24
   14110:	f8 0a       	sbc	r15, r24
   14112:	9e e0       	ldi	r25, 0x0E	; 14
   14114:	e9 16       	cp	r14, r25
   14116:	f1 04       	cpc	r15, r1
   14118:	f1 f6       	brne	.-68     	; 0x140d6 <_Z12Pub_Sub_DataPcPhjh+0x1cf2>
   1411a:	e1 2c       	mov	r14, r1
   1411c:	f1 2c       	mov	r15, r1
   1411e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14122:	81 30       	cpi	r24, 0x01	; 1
   14124:	a1 f4       	brne	.+40     	; 0x1414e <_Z12Pub_Sub_DataPcPhjh+0x1d6a>
   14126:	60 ef       	ldi	r22, 0xF0	; 240
   14128:	73 e3       	ldi	r23, 0x33	; 51
   1412a:	82 e5       	ldi	r24, 0x52	; 82
   1412c:	94 e1       	ldi	r25, 0x14	; 20
   1412e:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   14132:	f7 01       	movw	r30, r14
   14134:	e6 59       	subi	r30, 0x96	; 150
   14136:	f6 4f       	sbci	r31, 0xF6	; 246
   14138:	60 81       	ld	r22, Z
   1413a:	4a e0       	ldi	r20, 0x0A	; 10
   1413c:	50 e0       	ldi	r21, 0x00	; 0
   1413e:	82 e5       	ldi	r24, 0x52	; 82
   14140:	94 e1       	ldi	r25, 0x14	; 20
   14142:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   14146:	82 e5       	ldi	r24, 0x52	; 82
   14148:	94 e1       	ldi	r25, 0x14	; 20
   1414a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1414e:	af ef       	ldi	r26, 0xFF	; 255
   14150:	ea 1a       	sub	r14, r26
   14152:	fa 0a       	sbc	r15, r26
   14154:	be e0       	ldi	r27, 0x0E	; 14
   14156:	eb 16       	cp	r14, r27
   14158:	f1 04       	cpc	r15, r1
   1415a:	09 f7       	brne	.-62     	; 0x1411e <_Z12Pub_Sub_DataPcPhjh+0x1d3a>
   1415c:	e1 2c       	mov	r14, r1
   1415e:	f1 2c       	mov	r15, r1
   14160:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14164:	81 30       	cpi	r24, 0x01	; 1
   14166:	a1 f4       	brne	.+40     	; 0x14190 <_Z12Pub_Sub_DataPcPhjh+0x1dac>
   14168:	64 ee       	ldi	r22, 0xE4	; 228
   1416a:	73 e3       	ldi	r23, 0x33	; 51
   1416c:	82 e5       	ldi	r24, 0x52	; 82
   1416e:	94 e1       	ldi	r25, 0x14	; 20
   14170:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   14174:	f7 01       	movw	r30, r14
   14176:	e1 59       	subi	r30, 0x91	; 145
   14178:	f5 4f       	sbci	r31, 0xF5	; 245
   1417a:	60 81       	ld	r22, Z
   1417c:	4a e0       	ldi	r20, 0x0A	; 10
   1417e:	50 e0       	ldi	r21, 0x00	; 0
   14180:	82 e5       	ldi	r24, 0x52	; 82
   14182:	94 e1       	ldi	r25, 0x14	; 20
   14184:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   14188:	82 e5       	ldi	r24, 0x52	; 82
   1418a:	94 e1       	ldi	r25, 0x14	; 20
   1418c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14190:	ef ef       	ldi	r30, 0xFF	; 255
   14192:	ee 1a       	sub	r14, r30
   14194:	fe 0a       	sbc	r15, r30
   14196:	f7 e2       	ldi	r31, 0x27	; 39
   14198:	ef 16       	cp	r14, r31
   1419a:	f1 04       	cpc	r15, r1
   1419c:	09 f7       	brne	.-62     	; 0x14160 <_Z12Pub_Sub_DataPcPhjh+0x1d7c>
   1419e:	e1 2c       	mov	r14, r1
   141a0:	f1 2c       	mov	r15, r1
   141a2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   141a6:	81 30       	cpi	r24, 0x01	; 1
   141a8:	a1 f4       	brne	.+40     	; 0x141d2 <_Z12Pub_Sub_DataPcPhjh+0x1dee>
   141aa:	6a ed       	ldi	r22, 0xDA	; 218
   141ac:	73 e3       	ldi	r23, 0x33	; 51
   141ae:	82 e5       	ldi	r24, 0x52	; 82
   141b0:	94 e1       	ldi	r25, 0x14	; 20
   141b2:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   141b6:	f7 01       	movw	r30, r14
   141b8:	e8 56       	subi	r30, 0x68	; 104
   141ba:	f6 4f       	sbci	r31, 0xF6	; 246
   141bc:	60 81       	ld	r22, Z
   141be:	4a e0       	ldi	r20, 0x0A	; 10
   141c0:	50 e0       	ldi	r21, 0x00	; 0
   141c2:	82 e5       	ldi	r24, 0x52	; 82
   141c4:	94 e1       	ldi	r25, 0x14	; 20
   141c6:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   141ca:	82 e5       	ldi	r24, 0x52	; 82
   141cc:	94 e1       	ldi	r25, 0x14	; 20
   141ce:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   141d2:	2f ef       	ldi	r18, 0xFF	; 255
   141d4:	e2 1a       	sub	r14, r18
   141d6:	f2 0a       	sbc	r15, r18
   141d8:	37 e2       	ldi	r19, 0x27	; 39
   141da:	e3 16       	cp	r14, r19
   141dc:	f1 04       	cpc	r15, r1
   141de:	09 f7       	brne	.-62     	; 0x141a2 <_Z12Pub_Sub_DataPcPhjh+0x1dbe>
   141e0:	e1 2c       	mov	r14, r1
   141e2:	f1 2c       	mov	r15, r1
   141e4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   141e8:	81 30       	cpi	r24, 0x01	; 1
   141ea:	b9 f4       	brne	.+46     	; 0x1421a <_Z12Pub_Sub_DataPcPhjh+0x1e36>
   141ec:	6a ec       	ldi	r22, 0xCA	; 202
   141ee:	73 e3       	ldi	r23, 0x33	; 51
   141f0:	82 e5       	ldi	r24, 0x52	; 82
   141f2:	94 e1       	ldi	r25, 0x14	; 20
   141f4:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   141f8:	f7 01       	movw	r30, r14
   141fa:	ee 0f       	add	r30, r30
   141fc:	ff 1f       	adc	r31, r31
   141fe:	ed 53       	subi	r30, 0x3D	; 61
   14200:	f6 4f       	sbci	r31, 0xF6	; 246
   14202:	60 81       	ld	r22, Z
   14204:	71 81       	ldd	r23, Z+1	; 0x01
   14206:	4a e0       	ldi	r20, 0x0A	; 10
   14208:	50 e0       	ldi	r21, 0x00	; 0
   1420a:	82 e5       	ldi	r24, 0x52	; 82
   1420c:	94 e1       	ldi	r25, 0x14	; 20
   1420e:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
   14212:	82 e5       	ldi	r24, 0x52	; 82
   14214:	94 e1       	ldi	r25, 0x14	; 20
   14216:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1421a:	4f ef       	ldi	r20, 0xFF	; 255
   1421c:	e4 1a       	sub	r14, r20
   1421e:	f4 0a       	sbc	r15, r20
   14220:	57 e2       	ldi	r21, 0x27	; 39
   14222:	e5 16       	cp	r14, r21
   14224:	f1 04       	cpc	r15, r1
   14226:	f1 f6       	brne	.-68     	; 0x141e4 <_Z12Pub_Sub_DataPcPhjh+0x1e00>
   14228:	e1 2c       	mov	r14, r1
   1422a:	f1 2c       	mov	r15, r1
   1422c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14230:	81 30       	cpi	r24, 0x01	; 1
   14232:	b9 f4       	brne	.+46     	; 0x14262 <_Z12Pub_Sub_DataPcPhjh+0x1e7e>
   14234:	6a eb       	ldi	r22, 0xBA	; 186
   14236:	73 e3       	ldi	r23, 0x33	; 51
   14238:	82 e5       	ldi	r24, 0x52	; 82
   1423a:	94 e1       	ldi	r25, 0x14	; 20
   1423c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   14240:	f7 01       	movw	r30, r14
   14242:	ee 0f       	add	r30, r30
   14244:	ff 1f       	adc	r31, r31
   14246:	e7 5e       	subi	r30, 0xE7	; 231
   14248:	f5 4f       	sbci	r31, 0xF5	; 245
   1424a:	60 81       	ld	r22, Z
   1424c:	71 81       	ldd	r23, Z+1	; 0x01
   1424e:	4a e0       	ldi	r20, 0x0A	; 10
   14250:	50 e0       	ldi	r21, 0x00	; 0
   14252:	82 e5       	ldi	r24, 0x52	; 82
   14254:	94 e1       	ldi	r25, 0x14	; 20
   14256:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
   1425a:	82 e5       	ldi	r24, 0x52	; 82
   1425c:	94 e1       	ldi	r25, 0x14	; 20
   1425e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14262:	8f ef       	ldi	r24, 0xFF	; 255
   14264:	e8 1a       	sub	r14, r24
   14266:	f8 0a       	sbc	r15, r24
   14268:	97 e2       	ldi	r25, 0x27	; 39
   1426a:	e9 16       	cp	r14, r25
   1426c:	f1 04       	cpc	r15, r1
   1426e:	f1 f6       	brne	.-68     	; 0x1422c <_Z12Pub_Sub_DataPcPhjh+0x1e48>
   14270:	80 91 3b 0b 	lds	r24, 0x0B3B	; 0x800b3b <_sSchedules+0x21d>
   14274:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   14278:	80 91 34 0b 	lds	r24, 0x0B34	; 0x800b34 <_sSchedules+0x216>
   1427c:	80 93 3b 09 	sts	0x093B, r24	; 0x80093b <_sSchedules+0x1d>
   14280:	80 91 36 0b 	lds	r24, 0x0B36	; 0x800b36 <_sSchedules+0x218>
   14284:	80 93 3a 09 	sts	0x093A, r24	; 0x80093a <_sSchedules+0x1c>
   14288:	80 91 37 0b 	lds	r24, 0x0B37	; 0x800b37 <_sSchedules+0x219>
   1428c:	90 91 38 0b 	lds	r25, 0x0B38	; 0x800b38 <_sSchedules+0x21a>
   14290:	a0 91 39 0b 	lds	r26, 0x0B39	; 0x800b39 <_sSchedules+0x21b>
   14294:	b0 91 3a 0b 	lds	r27, 0x0B3A	; 0x800b3a <_sSchedules+0x21c>
   14298:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <_sSchedules+0x13>
   1429c:	90 93 32 09 	sts	0x0932, r25	; 0x800932 <_sSchedules+0x14>
   142a0:	a0 93 33 09 	sts	0x0933, r26	; 0x800933 <_sSchedules+0x15>
   142a4:	b0 93 34 09 	sts	0x0934, r27	; 0x800934 <_sSchedules+0x16>
   142a8:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <_sSchedules+0x1b>
   142ac:	88 e6       	ldi	r24, 0x68	; 104
   142ae:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <_sSchedules+0x1b>
   142b2:	80 91 76 13 	lds	r24, 0x1376	; 0x801376 <_sRuble_Parameters+0x2f>
   142b6:	80 93 79 0b 	sts	0x0B79, r24	; 0x800b79 <_sSchedules+0x25b>
   142ba:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <_sSchedules+0x6>
   142be:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <_sSchedules+0x79>
   142c2:	10 92 78 0b 	sts	0x0B78, r1	; 0x800b78 <_sSchedules+0x25a>
   142c6:	80 91 89 0b 	lds	r24, 0x0B89	; 0x800b89 <_sSchedules+0x26b>
   142ca:	80 93 88 0b 	sts	0x0B88, r24	; 0x800b88 <_sSchedules+0x26a>
   142ce:	80 91 93 0b 	lds	r24, 0x0B93	; 0x800b93 <_sSchedules+0x275>
   142d2:	80 93 92 0b 	sts	0x0B92, r24	; 0x800b92 <_sSchedules+0x274>
   142d6:	80 91 95 0b 	lds	r24, 0x0B95	; 0x800b95 <_sSchedules+0x277>
   142da:	80 93 94 0b 	sts	0x0B94, r24	; 0x800b94 <_sSchedules+0x276>
   142de:	0e 94 51 85 	call	0x10aa2	; 0x10aa2 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.41>
   142e2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   142e6:	81 30       	cpi	r24, 0x01	; 1
   142e8:	09 f0       	breq	.+2      	; 0x142ec <_Z12Pub_Sub_DataPcPhjh+0x1f08>
   142ea:	72 c1       	rjmp	.+740    	; 0x145d0 <_Z12Pub_Sub_DataPcPhjh+0x21ec>
   142ec:	69 ea       	ldi	r22, 0xA9	; 169
   142ee:	73 e3       	ldi	r23, 0x33	; 51
   142f0:	82 e5       	ldi	r24, 0x52	; 82
   142f2:	94 e1       	ldi	r25, 0x14	; 20
   142f4:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   142f8:	60 91 94 0b 	lds	r22, 0x0B94	; 0x800b94 <_sSchedules+0x276>
   142fc:	4a e0       	ldi	r20, 0x0A	; 10
   142fe:	50 e0       	ldi	r21, 0x00	; 0
   14300:	82 e5       	ldi	r24, 0x52	; 82
   14302:	94 e1       	ldi	r25, 0x14	; 20
   14304:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   14308:	a1 e0       	ldi	r26, 0x01	; 1
   1430a:	c0 55       	subi	r28, 0x50	; 80
   1430c:	d9 4f       	sbci	r29, 0xF9	; 249
   1430e:	a8 83       	st	Y, r26
   14310:	c0 5b       	subi	r28, 0xB0	; 176
   14312:	d6 40       	sbci	r29, 0x06	; 6
   14314:	88 e2       	ldi	r24, 0x28	; 40
   14316:	f8 01       	movw	r30, r16
   14318:	11 92       	st	Z+, r1
   1431a:	8a 95       	dec	r24
   1431c:	e9 f7       	brne	.-6      	; 0x14318 <_Z12Pub_Sub_DataPcPhjh+0x1f34>
   1431e:	87 e6       	ldi	r24, 0x67	; 103
   14320:	93 e1       	ldi	r25, 0x13	; 19
   14322:	9f 93       	push	r25
   14324:	8f 93       	push	r24
   14326:	8f e1       	ldi	r24, 0x1F	; 31
   14328:	96 e0       	ldi	r25, 0x06	; 6
   1432a:	9f 93       	push	r25
   1432c:	8f 93       	push	r24
   1432e:	1f 93       	push	r17
   14330:	0f 93       	push	r16
   14332:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   14336:	ca 54       	subi	r28, 0x4A	; 74
   14338:	d9 4f       	sbci	r29, 0xF9	; 249
   1433a:	68 81       	ld	r22, Y
   1433c:	79 81       	ldd	r23, Y+1	; 0x01
   1433e:	c6 5b       	subi	r28, 0xB6	; 182
   14340:	d6 40       	sbci	r29, 0x06	; 6
   14342:	c8 01       	movw	r24, r16
   14344:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   14348:	0f 90       	pop	r0
   1434a:	0f 90       	pop	r0
   1434c:	0f 90       	pop	r0
   1434e:	0f 90       	pop	r0
   14350:	0f 90       	pop	r0
   14352:	0f 90       	pop	r0
   14354:	89 2b       	or	r24, r25
   14356:	09 f0       	breq	.+2      	; 0x1435a <_Z12Pub_Sub_DataPcPhjh+0x1f76>
   14358:	4f c0       	rjmp	.+158    	; 0x143f8 <_Z12Pub_Sub_DataPcPhjh+0x2014>
   1435a:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1435e:	10 92 38 14 	sts	0x1438, r1	; 0x801438 <_sRuble_Parameters+0xf1>
   14362:	6d e9       	ldi	r22, 0x9D	; 157
   14364:	73 e3       	ldi	r23, 0x33	; 51
   14366:	c2 01       	movw	r24, r4
   14368:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1436c:	88 23       	and	r24, r24
   1436e:	e9 f0       	breq	.+58     	; 0x143aa <_Z12Pub_Sub_DataPcPhjh+0x1fc6>
   14370:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   14374:	82 30       	cpi	r24, 0x02	; 2
   14376:	09 f0       	breq	.+2      	; 0x1437a <_Z12Pub_Sub_DataPcPhjh+0x1f96>
   14378:	3f c0       	rjmp	.+126    	; 0x143f8 <_Z12Pub_Sub_DataPcPhjh+0x2014>
   1437a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1437e:	81 30       	cpi	r24, 0x01	; 1
   14380:	51 f4       	brne	.+20     	; 0x14396 <_Z12Pub_Sub_DataPcPhjh+0x1fb2>
   14382:	6b e7       	ldi	r22, 0x7B	; 123
   14384:	73 e3       	ldi	r23, 0x33	; 51
   14386:	82 e5       	ldi	r24, 0x52	; 82
   14388:	94 e1       	ldi	r25, 0x14	; 20
   1438a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1438e:	82 e5       	ldi	r24, 0x52	; 82
   14390:	94 e1       	ldi	r25, 0x14	; 20
   14392:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14396:	81 e0       	ldi	r24, 0x01	; 1
   14398:	80 93 f2 13 	sts	0x13F2, r24	; 0x8013f2 <_sRuble_Parameters+0xab>
   1439c:	f1 e0       	ldi	r31, 0x01	; 1
   1439e:	c0 55       	subi	r28, 0x50	; 80
   143a0:	d9 4f       	sbci	r29, 0xF9	; 249
   143a2:	f8 83       	st	Y, r31
   143a4:	c0 5b       	subi	r28, 0xB0	; 176
   143a6:	d6 40       	sbci	r29, 0x06	; 6
   143a8:	27 c0       	rjmp	.+78     	; 0x143f8 <_Z12Pub_Sub_DataPcPhjh+0x2014>
   143aa:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   143ae:	82 30       	cpi	r24, 0x02	; 2
   143b0:	90 f0       	brcs	.+36     	; 0x143d6 <_Z12Pub_Sub_DataPcPhjh+0x1ff2>
   143b2:	64 e6       	ldi	r22, 0x64	; 100
   143b4:	73 e3       	ldi	r23, 0x33	; 51
   143b6:	82 e5       	ldi	r24, 0x52	; 82
   143b8:	94 e1       	ldi	r25, 0x14	; 20
   143ba:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   143be:	81 e0       	ldi	r24, 0x01	; 1
   143c0:	80 93 f2 13 	sts	0x13F2, r24	; 0x8013f2 <_sRuble_Parameters+0xab>
   143c4:	80 93 38 14 	sts	0x1438, r24	; 0x801438 <_sRuble_Parameters+0xf1>
   143c8:	21 e0       	ldi	r18, 0x01	; 1
   143ca:	c0 55       	subi	r28, 0x50	; 80
   143cc:	d9 4f       	sbci	r29, 0xF9	; 249
   143ce:	28 83       	st	Y, r18
   143d0:	c0 5b       	subi	r28, 0xB0	; 176
   143d2:	d6 40       	sbci	r29, 0x06	; 6
   143d4:	11 c0       	rjmp	.+34     	; 0x143f8 <_Z12Pub_Sub_DataPcPhjh+0x2014>
   143d6:	82 e0       	ldi	r24, 0x02	; 2
   143d8:	80 93 38 14 	sts	0x1438, r24	; 0x801438 <_sRuble_Parameters+0xf1>
   143dc:	10 92 04 14 	sts	0x1404, r1	; 0x801404 <_sRuble_Parameters+0xbd>
   143e0:	64 e0       	ldi	r22, 0x04	; 4
   143e2:	74 e1       	ldi	r23, 0x14	; 20
   143e4:	81 ea       	ldi	r24, 0xA1	; 161
   143e6:	9c e0       	ldi	r25, 0x0C	; 12
   143e8:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   143ec:	31 e0       	ldi	r19, 0x01	; 1
   143ee:	c0 55       	subi	r28, 0x50	; 80
   143f0:	d9 4f       	sbci	r29, 0xF9	; 249
   143f2:	38 83       	st	Y, r19
   143f4:	c0 5b       	subi	r28, 0xB0	; 176
   143f6:	d6 40       	sbci	r29, 0x06	; 6
   143f8:	88 e2       	ldi	r24, 0x28	; 40
   143fa:	d8 01       	movw	r26, r16
   143fc:	1d 92       	st	X+, r1
   143fe:	8a 95       	dec	r24
   14400:	e9 f7       	brne	.-6      	; 0x143fc <_Z12Pub_Sub_DataPcPhjh+0x2018>
   14402:	87 e6       	ldi	r24, 0x67	; 103
   14404:	93 e1       	ldi	r25, 0x13	; 19
   14406:	9f 93       	push	r25
   14408:	8f 93       	push	r24
   1440a:	84 e4       	ldi	r24, 0x44	; 68
   1440c:	96 e0       	ldi	r25, 0x06	; 6
   1440e:	9f 93       	push	r25
   14410:	8f 93       	push	r24
   14412:	1f 93       	push	r17
   14414:	0f 93       	push	r16
   14416:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   1441a:	ca 54       	subi	r28, 0x4A	; 74
   1441c:	d9 4f       	sbci	r29, 0xF9	; 249
   1441e:	68 81       	ld	r22, Y
   14420:	79 81       	ldd	r23, Y+1	; 0x01
   14422:	c6 5b       	subi	r28, 0xB6	; 182
   14424:	d6 40       	sbci	r29, 0x06	; 6
   14426:	c8 01       	movw	r24, r16
   14428:	0e 94 35 ea 	call	0x1d46a	; 0x1d46a <strcmp>
   1442c:	0f 90       	pop	r0
   1442e:	0f 90       	pop	r0
   14430:	0f 90       	pop	r0
   14432:	0f 90       	pop	r0
   14434:	0f 90       	pop	r0
   14436:	0f 90       	pop	r0
   14438:	89 2b       	or	r24, r25
   1443a:	09 f0       	breq	.+2      	; 0x1443e <_Z12Pub_Sub_DataPcPhjh+0x205a>
   1443c:	73 c0       	rjmp	.+230    	; 0x14524 <_Z12Pub_Sub_DataPcPhjh+0x2140>
   1443e:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   14442:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   14446:	82 30       	cpi	r24, 0x02	; 2
   14448:	09 f4       	brne	.+2      	; 0x1444c <_Z12Pub_Sub_DataPcPhjh+0x2068>
   1444a:	6c c0       	rjmp	.+216    	; 0x14524 <_Z12Pub_Sub_DataPcPhjh+0x2140>
   1444c:	60 e6       	ldi	r22, 0x60	; 96
   1444e:	73 e3       	ldi	r23, 0x33	; 51
   14450:	c2 01       	movw	r24, r4
   14452:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14456:	18 2f       	mov	r17, r24
   14458:	69 e5       	ldi	r22, 0x59	; 89
   1445a:	73 e3       	ldi	r23, 0x33	; 51
   1445c:	c2 01       	movw	r24, r4
   1445e:	0e 94 cf 8c 	call	0x1199e	; 0x1199e <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14462:	08 2f       	mov	r16, r24
   14464:	17 36       	cpi	r17, 0x67	; 103
   14466:	21 f0       	breq	.+8      	; 0x14470 <_Z12Pub_Sub_DataPcPhjh+0x208c>
   14468:	1d 36       	cpi	r17, 0x6D	; 109
   1446a:	11 f0       	breq	.+4      	; 0x14470 <_Z12Pub_Sub_DataPcPhjh+0x208c>
   1446c:	0c 94 21 93 	jmp	0x12642	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   14470:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14474:	81 30       	cpi	r24, 0x01	; 1
   14476:	51 f4       	brne	.+20     	; 0x1448c <_Z12Pub_Sub_DataPcPhjh+0x20a8>
   14478:	68 e1       	ldi	r22, 0x18	; 24
   1447a:	73 e3       	ldi	r23, 0x33	; 51
   1447c:	82 e5       	ldi	r24, 0x52	; 82
   1447e:	94 e1       	ldi	r25, 0x14	; 20
   14480:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14484:	82 e5       	ldi	r24, 0x52	; 82
   14486:	94 e1       	ldi	r25, 0x14	; 20
   14488:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1448c:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   14490:	88 23       	and	r24, r24
   14492:	21 f0       	breq	.+8      	; 0x1449c <_Z12Pub_Sub_DataPcPhjh+0x20b8>
   14494:	1d 36       	cpi	r17, 0x6D	; 109
   14496:	11 f4       	brne	.+4      	; 0x1449c <_Z12Pub_Sub_DataPcPhjh+0x20b8>
   14498:	0c 94 21 93 	jmp	0x12642	; 0x12642 <_Z12Pub_Sub_DataPcPhjh+0x25e>
   1449c:	15 36       	cpi	r17, 0x65	; 101
   1449e:	08 f4       	brcc	.+2      	; 0x144a2 <_Z12Pub_Sub_DataPcPhjh+0x20be>
   144a0:	41 c0       	rjmp	.+130    	; 0x14524 <_Z12Pub_Sub_DataPcPhjh+0x2140>
   144a2:	81 2f       	mov	r24, r17
   144a4:	90 e0       	ldi	r25, 0x00	; 0
   144a6:	85 56       	subi	r24, 0x65	; 101
   144a8:	91 09       	sbc	r25, r1
   144aa:	4b e1       	ldi	r20, 0x1B	; 27
   144ac:	48 9f       	mul	r20, r24
   144ae:	f0 01       	movw	r30, r0
   144b0:	49 9f       	mul	r20, r25
   144b2:	f0 0d       	add	r31, r0
   144b4:	11 24       	eor	r1, r1
   144b6:	ef 57       	subi	r30, 0x7F	; 127
   144b8:	f2 4f       	sbci	r31, 0xF2	; 242
   144ba:	81 81       	ldd	r24, Z+1	; 0x01
   144bc:	88 23       	and	r24, r24
   144be:	91 f1       	breq	.+100    	; 0x14524 <_Z12Pub_Sub_DataPcPhjh+0x2140>
   144c0:	9b e9       	ldi	r25, 0x9B	; 155
   144c2:	91 0f       	add	r25, r17
   144c4:	29 2f       	mov	r18, r25
   144c6:	30 e0       	ldi	r19, 0x00	; 0
   144c8:	42 9f       	mul	r20, r18
   144ca:	f0 01       	movw	r30, r0
   144cc:	43 9f       	mul	r20, r19
   144ce:	f0 0d       	add	r31, r0
   144d0:	11 24       	eor	r1, r1
   144d2:	ef 57       	subi	r30, 0x7F	; 127
   144d4:	f2 4f       	sbci	r31, 0xF2	; 242
   144d6:	82 81       	ldd	r24, Z+2	; 0x02
   144d8:	84 30       	cpi	r24, 0x04	; 4
   144da:	21 f1       	breq	.+72     	; 0x14524 <_Z12Pub_Sub_DataPcPhjh+0x2140>
   144dc:	94 30       	cpi	r25, 0x04	; 4
   144de:	11 f1       	breq	.+68     	; 0x14524 <_Z12Pub_Sub_DataPcPhjh+0x2140>
   144e0:	43 81       	ldd	r20, Z+3	; 0x03
   144e2:	54 81       	ldd	r21, Z+4	; 0x04
   144e4:	45 2b       	or	r20, r21
   144e6:	f1 f4       	brne	.+60     	; 0x14524 <_Z12Pub_Sub_DataPcPhjh+0x2140>
   144e8:	00 23       	and	r16, r16
   144ea:	31 f0       	breq	.+12     	; 0x144f8 <_Z12Pub_Sub_DataPcPhjh+0x2114>
   144ec:	81 e0       	ldi	r24, 0x01	; 1
   144ee:	82 87       	std	Z+10, r24	; 0x0a
   144f0:	82 e0       	ldi	r24, 0x02	; 2
   144f2:	82 83       	std	Z+2, r24	; 0x02
   144f4:	83 87       	std	Z+11, r24	; 0x0b
   144f6:	11 c0       	rjmp	.+34     	; 0x1451a <_Z12Pub_Sub_DataPcPhjh+0x2136>
   144f8:	82 30       	cpi	r24, 0x02	; 2
   144fa:	19 f4       	brne	.+6      	; 0x14502 <_Z12Pub_Sub_DataPcPhjh+0x211e>
   144fc:	93 e0       	ldi	r25, 0x03	; 3
   144fe:	92 83       	std	Z+2, r25	; 0x02
   14500:	02 c0       	rjmp	.+4      	; 0x14506 <_Z12Pub_Sub_DataPcPhjh+0x2122>
   14502:	82 e0       	ldi	r24, 0x02	; 2
   14504:	82 83       	std	Z+2, r24	; 0x02
   14506:	83 87       	std	Z+11, r24	; 0x0b
   14508:	8b e1       	ldi	r24, 0x1B	; 27
   1450a:	82 9f       	mul	r24, r18
   1450c:	f0 01       	movw	r30, r0
   1450e:	83 9f       	mul	r24, r19
   14510:	f0 0d       	add	r31, r0
   14512:	11 24       	eor	r1, r1
   14514:	ef 57       	subi	r30, 0x7F	; 127
   14516:	f2 4f       	sbci	r31, 0xF2	; 242
   14518:	12 86       	std	Z+10, r1	; 0x0a
   1451a:	8c e9       	ldi	r24, 0x9C	; 156
   1451c:	81 0f       	add	r24, r17
   1451e:	0e 94 8b 79 	call	0xf316	; 0xf316 <_Z21Exra_Plot_Data_EEPROMh>
   14522:	08 c0       	rjmp	.+16     	; 0x14534 <_Z12Pub_Sub_DataPcPhjh+0x2150>
   14524:	c0 55       	subi	r28, 0x50	; 80
   14526:	d9 4f       	sbci	r29, 0xF9	; 249
   14528:	b8 81       	ld	r27, Y
   1452a:	c0 5b       	subi	r28, 0xB0	; 176
   1452c:	d6 40       	sbci	r29, 0x06	; 6
   1452e:	b1 30       	cpi	r27, 0x01	; 1
   14530:	09 f0       	breq	.+2      	; 0x14534 <_Z12Pub_Sub_DataPcPhjh+0x2150>
   14532:	55 c0       	rjmp	.+170    	; 0x145de <_Z12Pub_Sub_DataPcPhjh+0x21fa>
   14534:	8e e6       	ldi	r24, 0x6E	; 110
   14536:	eb ef       	ldi	r30, 0xFB	; 251
   14538:	fe e0       	ldi	r31, 0x0E	; 14
   1453a:	df 01       	movw	r26, r30
   1453c:	1d 92       	st	X+, r1
   1453e:	8a 95       	dec	r24
   14540:	e9 f7       	brne	.-6      	; 0x1453c <_Z12Pub_Sub_DataPcPhjh+0x2158>
   14542:	62 e4       	ldi	r22, 0x42	; 66
   14544:	75 e0       	ldi	r23, 0x05	; 5
   14546:	cf 01       	movw	r24, r30
   14548:	0e 94 3e ea 	call	0x1d47c	; 0x1d47c <strcpy>
   1454c:	88 e2       	ldi	r24, 0x28	; 40
   1454e:	c2 55       	subi	r28, 0x52	; 82
   14550:	d9 4f       	sbci	r29, 0xF9	; 249
   14552:	e8 81       	ld	r30, Y
   14554:	f9 81       	ldd	r31, Y+1	; 0x01
   14556:	ce 5a       	subi	r28, 0xAE	; 174
   14558:	d6 40       	sbci	r29, 0x06	; 6
   1455a:	11 92       	st	Z+, r1
   1455c:	8a 95       	dec	r24
   1455e:	e9 f7       	brne	.-6      	; 0x1455a <_Z12Pub_Sub_DataPcPhjh+0x2176>
   14560:	87 e6       	ldi	r24, 0x67	; 103
   14562:	93 e1       	ldi	r25, 0x13	; 19
   14564:	9f 93       	push	r25
   14566:	8f 93       	push	r24
   14568:	8a e1       	ldi	r24, 0x1A	; 26
   1456a:	97 e0       	ldi	r25, 0x07	; 7
   1456c:	9f 93       	push	r25
   1456e:	8f 93       	push	r24
   14570:	c1 55       	subi	r28, 0x51	; 81
   14572:	d9 4f       	sbci	r29, 0xF9	; 249
   14574:	f8 81       	ld	r31, Y
   14576:	cf 5a       	subi	r28, 0xAF	; 175
   14578:	d6 40       	sbci	r29, 0x06	; 6
   1457a:	ff 93       	push	r31
   1457c:	c2 55       	subi	r28, 0x52	; 82
   1457e:	d9 4f       	sbci	r29, 0xF9	; 249
   14580:	28 81       	ld	r18, Y
   14582:	ce 5a       	subi	r28, 0xAE	; 174
   14584:	d6 40       	sbci	r29, 0x06	; 6
   14586:	2f 93       	push	r18
   14588:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   1458c:	6b ef       	ldi	r22, 0xFB	; 251
   1458e:	7e e0       	ldi	r23, 0x0E	; 14
   14590:	ce 01       	movw	r24, r28
   14592:	8b 5c       	subi	r24, 0xCB	; 203
   14594:	99 4f       	sbci	r25, 0xF9	; 249
   14596:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   1459a:	84 ed       	ldi	r24, 0xD4	; 212
   1459c:	93 e0       	ldi	r25, 0x03	; 3
   1459e:	e9 e6       	ldi	r30, 0x69	; 105
   145a0:	ff e0       	ldi	r31, 0x0F	; 15
   145a2:	df 01       	movw	r26, r30
   145a4:	9c 01       	movw	r18, r24
   145a6:	1d 92       	st	X+, r1
   145a8:	21 50       	subi	r18, 0x01	; 1
   145aa:	30 40       	sbci	r19, 0x00	; 0
   145ac:	e1 f7       	brne	.-8      	; 0x145a6 <_Z12Pub_Sub_DataPcPhjh+0x21c2>
   145ae:	0f 90       	pop	r0
   145b0:	0f 90       	pop	r0
   145b2:	0f 90       	pop	r0
   145b4:	0f 90       	pop	r0
   145b6:	0f 90       	pop	r0
   145b8:	0f 90       	pop	r0
   145ba:	11 c0       	rjmp	.+34     	; 0x145de <_Z12Pub_Sub_DataPcPhjh+0x21fa>
   145bc:	e9 2d       	mov	r30, r9
   145be:	f0 e0       	ldi	r31, 0x00	; 0
   145c0:	e2 5e       	subi	r30, 0xE2	; 226
   145c2:	f6 4f       	sbci	r31, 0xF6	; 246
   145c4:	15 ae       	std	Z+61, r1	; 0x3d
   145c6:	93 94       	inc	r9
   145c8:	3e e0       	ldi	r19, 0x0E	; 14
   145ca:	93 12       	cpse	r9, r19
   145cc:	f7 cf       	rjmp	.-18     	; 0x145bc <_Z12Pub_Sub_DataPcPhjh+0x21d8>
   145ce:	60 cd       	rjmp	.-1344   	; 0x14090 <_Z12Pub_Sub_DataPcPhjh+0x1cac>
   145d0:	b1 e0       	ldi	r27, 0x01	; 1
   145d2:	c0 55       	subi	r28, 0x50	; 80
   145d4:	d9 4f       	sbci	r29, 0xF9	; 249
   145d6:	b8 83       	st	Y, r27
   145d8:	c0 5b       	subi	r28, 0xB0	; 176
   145da:	d6 40       	sbci	r29, 0x06	; 6
   145dc:	9b ce       	rjmp	.-714    	; 0x14314 <_Z12Pub_Sub_DataPcPhjh+0x1f30>
   145de:	c2 54       	subi	r28, 0x42	; 66
   145e0:	d9 4f       	sbci	r29, 0xF9	; 249
   145e2:	0f b6       	in	r0, 0x3f	; 63
   145e4:	f8 94       	cli
   145e6:	de bf       	out	0x3e, r29	; 62
   145e8:	0f be       	out	0x3f, r0	; 63
   145ea:	cd bf       	out	0x3d, r28	; 61
   145ec:	df 91       	pop	r29
   145ee:	cf 91       	pop	r28
   145f0:	1f 91       	pop	r17
   145f2:	0f 91       	pop	r16
   145f4:	ff 90       	pop	r15
   145f6:	ef 90       	pop	r14
   145f8:	df 90       	pop	r13
   145fa:	cf 90       	pop	r12
   145fc:	bf 90       	pop	r11
   145fe:	af 90       	pop	r10
   14600:	9f 90       	pop	r9
   14602:	8f 90       	pop	r8
   14604:	7f 90       	pop	r7
   14606:	6f 90       	pop	r6
   14608:	5f 90       	pop	r5
   1460a:	4f 90       	pop	r4
   1460c:	3f 90       	pop	r3
   1460e:	2f 90       	pop	r2
   14610:	08 95       	ret

00014612 <_Z12Publish_Datav>:
   14612:	6f 92       	push	r6
   14614:	7f 92       	push	r7
   14616:	8f 92       	push	r8
   14618:	9f 92       	push	r9
   1461a:	af 92       	push	r10
   1461c:	bf 92       	push	r11
   1461e:	cf 92       	push	r12
   14620:	df 92       	push	r13
   14622:	ef 92       	push	r14
   14624:	ff 92       	push	r15
   14626:	0f 93       	push	r16
   14628:	1f 93       	push	r17
   1462a:	cf 93       	push	r28
   1462c:	df 93       	push	r29
   1462e:	cd b7       	in	r28, 0x3d	; 61
   14630:	de b7       	in	r29, 0x3e	; 62
   14632:	c4 5f       	subi	r28, 0xF4	; 244
   14634:	d1 40       	sbci	r29, 0x01	; 1
   14636:	0f b6       	in	r0, 0x3f	; 63
   14638:	f8 94       	cli
   1463a:	de bf       	out	0x3e, r29	; 62
   1463c:	0f be       	out	0x3f, r0	; 63
   1463e:	cd bf       	out	0x3d, r28	; 61
   14640:	82 e0       	ldi	r24, 0x02	; 2
   14642:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14646:	ce 01       	movw	r24, r28
   14648:	09 96       	adiw	r24, 0x09	; 9
   1464a:	9c 83       	std	Y+4, r25	; 0x04
   1464c:	8b 83       	std	Y+3, r24	; 0x03
   1464e:	8e e0       	ldi	r24, 0x0E	; 14
   14650:	91 e0       	ldi	r25, 0x01	; 1
   14652:	9e 83       	std	Y+6, r25	; 0x06
   14654:	8d 83       	std	Y+5, r24	; 0x05
   14656:	18 86       	std	Y+8, r1	; 0x08
   14658:	1f 82       	std	Y+7, r1	; 0x07
   1465a:	89 ed       	ldi	r24, 0xD9	; 217
   1465c:	97 e0       	ldi	r25, 0x07	; 7
   1465e:	9a 83       	std	Y+2, r25	; 0x02
   14660:	89 83       	std	Y+1, r24	; 0x01
   14662:	ce 01       	movw	r24, r28
   14664:	01 96       	adiw	r24, 0x01	; 1
   14666:	0e 94 ce 84 	call	0x1099c	; 0x1099c <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   1466a:	8c 01       	movw	r16, r24
   1466c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   14670:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14674:	81 ff       	sbrs	r24, 1
   14676:	69 c0       	rjmp	.+210    	; 0x1474a <_Z12Publish_Datav+0x138>
   14678:	7e 01       	movw	r14, r28
   1467a:	29 ee       	ldi	r18, 0xE9	; 233
   1467c:	e2 1a       	sub	r14, r18
   1467e:	2e ef       	ldi	r18, 0xFE	; 254
   14680:	f2 0a       	sbc	r15, r18
   14682:	8c ed       	ldi	r24, 0xDC	; 220
   14684:	d7 01       	movw	r26, r14
   14686:	1d 92       	st	X+, r1
   14688:	8a 95       	dec	r24
   1468a:	e9 f7       	brne	.-6      	; 0x14686 <_Z12Publish_Datav+0x74>
   1468c:	45 e4       	ldi	r20, 0x45	; 69
   1468e:	53 e1       	ldi	r21, 0x13	; 19
   14690:	62 e1       	ldi	r22, 0x12	; 18
   14692:	73 e3       	ldi	r23, 0x33	; 51
   14694:	c8 01       	movw	r24, r16
   14696:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1469a:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   1469e:	82 30       	cpi	r24, 0x02	; 2
   146a0:	80 f0       	brcs	.+32     	; 0x146c2 <_Z12Publish_Datav+0xb0>
   146a2:	90 e0       	ldi	r25, 0x00	; 0
   146a4:	02 97       	sbiw	r24, 0x02	; 2
   146a6:	2b e0       	ldi	r18, 0x0B	; 11
   146a8:	28 9f       	mul	r18, r24
   146aa:	a0 01       	movw	r20, r0
   146ac:	29 9f       	mul	r18, r25
   146ae:	50 0d       	add	r21, r0
   146b0:	11 24       	eor	r1, r1
   146b2:	42 56       	subi	r20, 0x62	; 98
   146b4:	54 4f       	sbci	r21, 0xF4	; 244
   146b6:	6d e0       	ldi	r22, 0x0D	; 13
   146b8:	73 e3       	ldi	r23, 0x33	; 51
   146ba:	c8 01       	movw	r24, r16
   146bc:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   146c0:	0e c0       	rjmp	.+28     	; 0x146de <_Z12Publish_Datav+0xcc>
   146c2:	cd 50       	subi	r28, 0x0D	; 13
   146c4:	de 4f       	sbci	r29, 0xFE	; 254
   146c6:	19 82       	std	Y+1, r1	; 0x01
   146c8:	18 82       	st	Y, r1
   146ca:	c3 5f       	subi	r28, 0xF3	; 243
   146cc:	d1 40       	sbci	r29, 0x01	; 1
   146ce:	ae 01       	movw	r20, r28
   146d0:	4d 50       	subi	r20, 0x0D	; 13
   146d2:	5e 4f       	sbci	r21, 0xFE	; 254
   146d4:	68 e0       	ldi	r22, 0x08	; 8
   146d6:	73 e3       	ldi	r23, 0x33	; 51
   146d8:	c8 01       	movw	r24, r16
   146da:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   146de:	4c ed       	ldi	r20, 0xDC	; 220
   146e0:	50 e0       	ldi	r21, 0x00	; 0
   146e2:	b7 01       	movw	r22, r14
   146e4:	c8 01       	movw	r24, r16
   146e6:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   146ea:	eb ef       	ldi	r30, 0xFB	; 251
   146ec:	fe e0       	ldi	r31, 0x0E	; 14
   146ee:	8e e6       	ldi	r24, 0x6E	; 110
   146f0:	df 01       	movw	r26, r30
   146f2:	1d 92       	st	X+, r1
   146f4:	8a 95       	dec	r24
   146f6:	e9 f7       	brne	.-6      	; 0x146f2 <_Z12Publish_Datav+0xe0>
   146f8:	87 e6       	ldi	r24, 0x67	; 103
   146fa:	93 e1       	ldi	r25, 0x13	; 19
   146fc:	9f 93       	push	r25
   146fe:	8f 93       	push	r24
   14700:	8c e2       	ldi	r24, 0x2C	; 44
   14702:	97 e0       	ldi	r25, 0x07	; 7
   14704:	9f 93       	push	r25
   14706:	8f 93       	push	r24
   14708:	ff 93       	push	r31
   1470a:	ef 93       	push	r30
   1470c:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   14710:	0f 90       	pop	r0
   14712:	0f 90       	pop	r0
   14714:	0f 90       	pop	r0
   14716:	0f 90       	pop	r0
   14718:	0f 90       	pop	r0
   1471a:	0f 90       	pop	r0
   1471c:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14720:	88 23       	and	r24, r24
   14722:	69 f0       	breq	.+26     	; 0x1473e <_Z12Publish_Datav+0x12c>
   14724:	b7 01       	movw	r22, r14
   14726:	8b ef       	ldi	r24, 0xFB	; 251
   14728:	9e e0       	ldi	r25, 0x0E	; 14
   1472a:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   1472e:	81 11       	cpse	r24, r1
   14730:	06 c0       	rjmp	.+12     	; 0x1473e <_Z12Publish_Datav+0x12c>
   14732:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14736:	81 50       	subi	r24, 0x01	; 1
   14738:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   1473c:	ef cf       	rjmp	.-34     	; 0x1471c <_Z12Publish_Datav+0x10a>
   1473e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   14742:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14746:	8d 7f       	andi	r24, 0xFD	; 253
   14748:	a5 c0       	rjmp	.+330    	; 0x14894 <_Z12Publish_Datav+0x282>
   1474a:	83 ff       	sbrs	r24, 3
   1474c:	a9 c0       	rjmp	.+338    	; 0x148a0 <_Z12Publish_Datav+0x28e>
   1474e:	7e 01       	movw	r14, r28
   14750:	b9 ee       	ldi	r27, 0xE9	; 233
   14752:	eb 1a       	sub	r14, r27
   14754:	be ef       	ldi	r27, 0xFE	; 254
   14756:	fb 0a       	sbc	r15, r27
   14758:	8c ed       	ldi	r24, 0xDC	; 220
   1475a:	f7 01       	movw	r30, r14
   1475c:	11 92       	st	Z+, r1
   1475e:	8a 95       	dec	r24
   14760:	e9 f7       	brne	.-6      	; 0x1475c <_Z12Publish_Datav+0x14a>
   14762:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14766:	81 30       	cpi	r24, 0x01	; 1
   14768:	51 f4       	brne	.+20     	; 0x1477e <_Z12Publish_Datav+0x16c>
   1476a:	63 ef       	ldi	r22, 0xF3	; 243
   1476c:	72 e3       	ldi	r23, 0x32	; 50
   1476e:	82 e5       	ldi	r24, 0x52	; 82
   14770:	94 e1       	ldi	r25, 0x14	; 20
   14772:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14776:	82 e5       	ldi	r24, 0x52	; 82
   14778:	94 e1       	ldi	r25, 0x14	; 20
   1477a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1477e:	8a e0       	ldi	r24, 0x0A	; 10
   14780:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   14784:	21 e0       	ldi	r18, 0x01	; 1
   14786:	89 2b       	or	r24, r25
   14788:	09 f0       	breq	.+2      	; 0x1478c <_Z12Publish_Datav+0x17a>
   1478a:	20 e0       	ldi	r18, 0x00	; 0
   1478c:	cd 50       	subi	r28, 0x0D	; 13
   1478e:	de 4f       	sbci	r29, 0xFE	; 254
   14790:	28 83       	st	Y, r18
   14792:	c3 5f       	subi	r28, 0xF3	; 243
   14794:	d1 40       	sbci	r29, 0x01	; 1
   14796:	ae 01       	movw	r20, r28
   14798:	4d 50       	subi	r20, 0x0D	; 13
   1479a:	5e 4f       	sbci	r21, 0xFE	; 254
   1479c:	6b ee       	ldi	r22, 0xEB	; 235
   1479e:	72 e3       	ldi	r23, 0x32	; 50
   147a0:	c8 01       	movw	r24, r16
   147a2:	0e 94 76 89 	call	0x112ec	; 0x112ec <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   147a6:	cd 50       	subi	r28, 0x0D	; 13
   147a8:	de 4f       	sbci	r29, 0xFE	; 254
   147aa:	19 82       	std	Y+1, r1	; 0x01
   147ac:	18 82       	st	Y, r1
   147ae:	c3 5f       	subi	r28, 0xF3	; 243
   147b0:	d1 40       	sbci	r29, 0x01	; 1
   147b2:	ae 01       	movw	r20, r28
   147b4:	4d 50       	subi	r20, 0x0D	; 13
   147b6:	5e 4f       	sbci	r21, 0xFE	; 254
   147b8:	64 ee       	ldi	r22, 0xE4	; 228
   147ba:	72 e3       	ldi	r23, 0x32	; 50
   147bc:	c8 01       	movw	r24, r16
   147be:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   147c2:	80 91 5d 13 	lds	r24, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   147c6:	90 91 5e 13 	lds	r25, 0x135E	; 0x80135e <_sRuble_Parameters+0x17>
   147ca:	00 97       	sbiw	r24, 0x00	; 0
   147cc:	91 f0       	breq	.+36     	; 0x147f2 <_Z12Publish_Datav+0x1e0>
   147ce:	6c e3       	ldi	r22, 0x3C	; 60
   147d0:	70 e0       	ldi	r23, 0x00	; 0
   147d2:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   147d6:	6f 5f       	subi	r22, 0xFF	; 255
   147d8:	7f 4f       	sbci	r23, 0xFF	; 255
   147da:	cd 50       	subi	r28, 0x0D	; 13
   147dc:	de 4f       	sbci	r29, 0xFE	; 254
   147de:	79 83       	std	Y+1, r23	; 0x01
   147e0:	68 83       	st	Y, r22
   147e2:	c3 5f       	subi	r28, 0xF3	; 243
   147e4:	d1 40       	sbci	r29, 0x01	; 1
   147e6:	ae 01       	movw	r20, r28
   147e8:	4d 50       	subi	r20, 0x0D	; 13
   147ea:	5e 4f       	sbci	r21, 0xFE	; 254
   147ec:	6f ed       	ldi	r22, 0xDF	; 223
   147ee:	72 e3       	ldi	r23, 0x32	; 50
   147f0:	04 c0       	rjmp	.+8      	; 0x147fa <_Z12Publish_Datav+0x1e8>
   147f2:	4d e5       	ldi	r20, 0x5D	; 93
   147f4:	53 e1       	ldi	r21, 0x13	; 19
   147f6:	6a ed       	ldi	r22, 0xDA	; 218
   147f8:	72 e3       	ldi	r23, 0x32	; 50
   147fa:	c8 01       	movw	r24, r16
   147fc:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14800:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   14804:	83 30       	cpi	r24, 0x03	; 3
   14806:	41 f4       	brne	.+16     	; 0x14818 <_Z12Publish_Datav+0x206>
   14808:	40 ef       	ldi	r20, 0xF0	; 240
   1480a:	53 e1       	ldi	r21, 0x13	; 19
   1480c:	65 ed       	ldi	r22, 0xD5	; 213
   1480e:	72 e3       	ldi	r23, 0x32	; 50
   14810:	c8 01       	movw	r24, r16
   14812:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14816:	09 c0       	rjmp	.+18     	; 0x1482a <_Z12Publish_Datav+0x218>
   14818:	42 e0       	ldi	r20, 0x02	; 2
   1481a:	54 e1       	ldi	r21, 0x14	; 20
   1481c:	60 ed       	ldi	r22, 0xD0	; 208
   1481e:	72 e3       	ldi	r23, 0x32	; 50
   14820:	c8 01       	movw	r24, r16
   14822:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14826:	10 92 02 14 	sts	0x1402, r1	; 0x801402 <_sRuble_Parameters+0xbb>
   1482a:	4c ed       	ldi	r20, 0xDC	; 220
   1482c:	50 e0       	ldi	r21, 0x00	; 0
   1482e:	b7 01       	movw	r22, r14
   14830:	c8 01       	movw	r24, r16
   14832:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14836:	eb ef       	ldi	r30, 0xFB	; 251
   14838:	fe e0       	ldi	r31, 0x0E	; 14
   1483a:	8e e6       	ldi	r24, 0x6E	; 110
   1483c:	df 01       	movw	r26, r30
   1483e:	1d 92       	st	X+, r1
   14840:	8a 95       	dec	r24
   14842:	e9 f7       	brne	.-6      	; 0x1483e <_Z12Publish_Datav+0x22c>
   14844:	87 e6       	ldi	r24, 0x67	; 103
   14846:	93 e1       	ldi	r25, 0x13	; 19
   14848:	9f 93       	push	r25
   1484a:	8f 93       	push	r24
   1484c:	8b e3       	ldi	r24, 0x3B	; 59
   1484e:	97 e0       	ldi	r25, 0x07	; 7
   14850:	9f 93       	push	r25
   14852:	8f 93       	push	r24
   14854:	ff 93       	push	r31
   14856:	ef 93       	push	r30
   14858:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   1485c:	0f 90       	pop	r0
   1485e:	0f 90       	pop	r0
   14860:	0f 90       	pop	r0
   14862:	0f 90       	pop	r0
   14864:	0f 90       	pop	r0
   14866:	0f 90       	pop	r0
   14868:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   1486c:	88 23       	and	r24, r24
   1486e:	69 f0       	breq	.+26     	; 0x1488a <_Z12Publish_Datav+0x278>
   14870:	b7 01       	movw	r22, r14
   14872:	8b ef       	ldi	r24, 0xFB	; 251
   14874:	9e e0       	ldi	r25, 0x0E	; 14
   14876:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   1487a:	81 11       	cpse	r24, r1
   1487c:	06 c0       	rjmp	.+12     	; 0x1488a <_Z12Publish_Datav+0x278>
   1487e:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14882:	81 50       	subi	r24, 0x01	; 1
   14884:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14888:	ef cf       	rjmp	.-34     	; 0x14868 <_Z12Publish_Datav+0x256>
   1488a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1488e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14892:	87 7f       	andi	r24, 0xF7	; 247
   14894:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   14898:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1489c:	0c 94 ed ac 	jmp	0x159da	; 0x159da <_Z12Publish_Datav+0x13c8>
   148a0:	97 ff       	sbrs	r25, 7
   148a2:	50 c0       	rjmp	.+160    	; 0x14944 <_Z12Publish_Datav+0x332>
   148a4:	7e 01       	movw	r14, r28
   148a6:	b9 ee       	ldi	r27, 0xE9	; 233
   148a8:	eb 1a       	sub	r14, r27
   148aa:	be ef       	ldi	r27, 0xFE	; 254
   148ac:	fb 0a       	sbc	r15, r27
   148ae:	8c ed       	ldi	r24, 0xDC	; 220
   148b0:	f7 01       	movw	r30, r14
   148b2:	11 92       	st	Z+, r1
   148b4:	8a 95       	dec	r24
   148b6:	e9 f7       	brne	.-6      	; 0x148b2 <_Z12Publish_Datav+0x2a0>
   148b8:	86 e0       	ldi	r24, 0x06	; 6
   148ba:	90 e0       	ldi	r25, 0x00	; 0
   148bc:	cd 50       	subi	r28, 0x0D	; 13
   148be:	de 4f       	sbci	r29, 0xFE	; 254
   148c0:	99 83       	std	Y+1, r25	; 0x01
   148c2:	88 83       	st	Y, r24
   148c4:	c3 5f       	subi	r28, 0xF3	; 243
   148c6:	d1 40       	sbci	r29, 0x01	; 1
   148c8:	ae 01       	movw	r20, r28
   148ca:	4d 50       	subi	r20, 0x0D	; 13
   148cc:	5e 4f       	sbci	r21, 0xFE	; 254
   148ce:	6a ec       	ldi	r22, 0xCA	; 202
   148d0:	72 e3       	ldi	r23, 0x32	; 50
   148d2:	c8 01       	movw	r24, r16
   148d4:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   148d8:	4c ed       	ldi	r20, 0xDC	; 220
   148da:	50 e0       	ldi	r21, 0x00	; 0
   148dc:	b7 01       	movw	r22, r14
   148de:	c8 01       	movw	r24, r16
   148e0:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   148e4:	eb ef       	ldi	r30, 0xFB	; 251
   148e6:	fe e0       	ldi	r31, 0x0E	; 14
   148e8:	8e e6       	ldi	r24, 0x6E	; 110
   148ea:	df 01       	movw	r26, r30
   148ec:	1d 92       	st	X+, r1
   148ee:	8a 95       	dec	r24
   148f0:	e9 f7       	brne	.-6      	; 0x148ec <_Z12Publish_Datav+0x2da>
   148f2:	87 e6       	ldi	r24, 0x67	; 103
   148f4:	93 e1       	ldi	r25, 0x13	; 19
   148f6:	9f 93       	push	r25
   148f8:	8f 93       	push	r24
   148fa:	8c e2       	ldi	r24, 0x2C	; 44
   148fc:	97 e0       	ldi	r25, 0x07	; 7
   148fe:	9f 93       	push	r25
   14900:	8f 93       	push	r24
   14902:	ff 93       	push	r31
   14904:	ef 93       	push	r30
   14906:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   1490a:	0f 90       	pop	r0
   1490c:	0f 90       	pop	r0
   1490e:	0f 90       	pop	r0
   14910:	0f 90       	pop	r0
   14912:	0f 90       	pop	r0
   14914:	0f 90       	pop	r0
   14916:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   1491a:	88 23       	and	r24, r24
   1491c:	69 f0       	breq	.+26     	; 0x14938 <_Z12Publish_Datav+0x326>
   1491e:	b7 01       	movw	r22, r14
   14920:	8b ef       	ldi	r24, 0xFB	; 251
   14922:	9e e0       	ldi	r25, 0x0E	; 14
   14924:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   14928:	81 11       	cpse	r24, r1
   1492a:	06 c0       	rjmp	.+12     	; 0x14938 <_Z12Publish_Datav+0x326>
   1492c:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14930:	81 50       	subi	r24, 0x01	; 1
   14932:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14936:	ef cf       	rjmp	.-34     	; 0x14916 <_Z12Publish_Datav+0x304>
   14938:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1493c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14940:	9f 77       	andi	r25, 0x7F	; 127
   14942:	a8 cf       	rjmp	.-176    	; 0x14894 <_Z12Publish_Datav+0x282>
   14944:	86 ff       	sbrs	r24, 6
   14946:	e3 c0       	rjmp	.+454    	; 0x14b0e <_Z12Publish_Datav+0x4fc>
   14948:	7e 01       	movw	r14, r28
   1494a:	b9 ee       	ldi	r27, 0xE9	; 233
   1494c:	eb 1a       	sub	r14, r27
   1494e:	be ef       	ldi	r27, 0xFE	; 254
   14950:	fb 0a       	sbc	r15, r27
   14952:	8c ed       	ldi	r24, 0xDC	; 220
   14954:	f7 01       	movw	r30, r14
   14956:	11 92       	st	Z+, r1
   14958:	8a 95       	dec	r24
   1495a:	e9 f7       	brne	.-6      	; 0x14956 <_Z12Publish_Datav+0x344>
   1495c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14960:	81 30       	cpi	r24, 0x01	; 1
   14962:	51 f4       	brne	.+20     	; 0x14978 <_Z12Publish_Datav+0x366>
   14964:	65 eb       	ldi	r22, 0xB5	; 181
   14966:	72 e3       	ldi	r23, 0x32	; 50
   14968:	82 e5       	ldi	r24, 0x52	; 82
   1496a:	94 e1       	ldi	r25, 0x14	; 20
   1496c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14970:	82 e5       	ldi	r24, 0x52	; 82
   14972:	94 e1       	ldi	r25, 0x14	; 20
   14974:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14978:	cd 50       	subi	r28, 0x0D	; 13
   1497a:	de 4f       	sbci	r29, 0xFE	; 254
   1497c:	19 82       	std	Y+1, r1	; 0x01
   1497e:	18 82       	st	Y, r1
   14980:	c3 5f       	subi	r28, 0xF3	; 243
   14982:	d1 40       	sbci	r29, 0x01	; 1
   14984:	ae 01       	movw	r20, r28
   14986:	4d 50       	subi	r20, 0x0D	; 13
   14988:	5e 4f       	sbci	r21, 0xFE	; 254
   1498a:	6b ea       	ldi	r22, 0xAB	; 171
   1498c:	72 e3       	ldi	r23, 0x32	; 50
   1498e:	c8 01       	movw	r24, r16
   14990:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14994:	cd 50       	subi	r28, 0x0D	; 13
   14996:	de 4f       	sbci	r29, 0xFE	; 254
   14998:	19 82       	std	Y+1, r1	; 0x01
   1499a:	18 82       	st	Y, r1
   1499c:	c3 5f       	subi	r28, 0xF3	; 243
   1499e:	d1 40       	sbci	r29, 0x01	; 1
   149a0:	ae 01       	movw	r20, r28
   149a2:	4d 50       	subi	r20, 0x0D	; 13
   149a4:	5e 4f       	sbci	r21, 0xFE	; 254
   149a6:	67 ea       	ldi	r22, 0xA7	; 167
   149a8:	72 e3       	ldi	r23, 0x32	; 50
   149aa:	c8 01       	movw	r24, r16
   149ac:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149b0:	cd 50       	subi	r28, 0x0D	; 13
   149b2:	de 4f       	sbci	r29, 0xFE	; 254
   149b4:	19 82       	std	Y+1, r1	; 0x01
   149b6:	18 82       	st	Y, r1
   149b8:	c3 5f       	subi	r28, 0xF3	; 243
   149ba:	d1 40       	sbci	r29, 0x01	; 1
   149bc:	ae 01       	movw	r20, r28
   149be:	4d 50       	subi	r20, 0x0D	; 13
   149c0:	5e 4f       	sbci	r21, 0xFE	; 254
   149c2:	63 ea       	ldi	r22, 0xA3	; 163
   149c4:	72 e3       	ldi	r23, 0x32	; 50
   149c6:	c8 01       	movw	r24, r16
   149c8:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149cc:	cd 50       	subi	r28, 0x0D	; 13
   149ce:	de 4f       	sbci	r29, 0xFE	; 254
   149d0:	19 82       	std	Y+1, r1	; 0x01
   149d2:	18 82       	st	Y, r1
   149d4:	c3 5f       	subi	r28, 0xF3	; 243
   149d6:	d1 40       	sbci	r29, 0x01	; 1
   149d8:	ae 01       	movw	r20, r28
   149da:	4d 50       	subi	r20, 0x0D	; 13
   149dc:	5e 4f       	sbci	r21, 0xFE	; 254
   149de:	6f e9       	ldi	r22, 0x9F	; 159
   149e0:	72 e3       	ldi	r23, 0x32	; 50
   149e2:	c8 01       	movw	r24, r16
   149e4:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149e8:	cd 50       	subi	r28, 0x0D	; 13
   149ea:	de 4f       	sbci	r29, 0xFE	; 254
   149ec:	19 82       	std	Y+1, r1	; 0x01
   149ee:	18 82       	st	Y, r1
   149f0:	c3 5f       	subi	r28, 0xF3	; 243
   149f2:	d1 40       	sbci	r29, 0x01	; 1
   149f4:	ae 01       	movw	r20, r28
   149f6:	4d 50       	subi	r20, 0x0D	; 13
   149f8:	5e 4f       	sbci	r21, 0xFE	; 254
   149fa:	6b e9       	ldi	r22, 0x9B	; 155
   149fc:	72 e3       	ldi	r23, 0x32	; 50
   149fe:	c8 01       	movw	r24, r16
   14a00:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a04:	cd 50       	subi	r28, 0x0D	; 13
   14a06:	de 4f       	sbci	r29, 0xFE	; 254
   14a08:	19 82       	std	Y+1, r1	; 0x01
   14a0a:	18 82       	st	Y, r1
   14a0c:	c3 5f       	subi	r28, 0xF3	; 243
   14a0e:	d1 40       	sbci	r29, 0x01	; 1
   14a10:	ae 01       	movw	r20, r28
   14a12:	4d 50       	subi	r20, 0x0D	; 13
   14a14:	5e 4f       	sbci	r21, 0xFE	; 254
   14a16:	61 e9       	ldi	r22, 0x91	; 145
   14a18:	72 e3       	ldi	r23, 0x32	; 50
   14a1a:	c8 01       	movw	r24, r16
   14a1c:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a20:	cd 50       	subi	r28, 0x0D	; 13
   14a22:	de 4f       	sbci	r29, 0xFE	; 254
   14a24:	19 82       	std	Y+1, r1	; 0x01
   14a26:	18 82       	st	Y, r1
   14a28:	c3 5f       	subi	r28, 0xF3	; 243
   14a2a:	d1 40       	sbci	r29, 0x01	; 1
   14a2c:	ae 01       	movw	r20, r28
   14a2e:	4d 50       	subi	r20, 0x0D	; 13
   14a30:	5e 4f       	sbci	r21, 0xFE	; 254
   14a32:	65 e8       	ldi	r22, 0x85	; 133
   14a34:	72 e3       	ldi	r23, 0x32	; 50
   14a36:	c8 01       	movw	r24, r16
   14a38:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a3c:	cd 50       	subi	r28, 0x0D	; 13
   14a3e:	de 4f       	sbci	r29, 0xFE	; 254
   14a40:	19 82       	std	Y+1, r1	; 0x01
   14a42:	18 82       	st	Y, r1
   14a44:	c3 5f       	subi	r28, 0xF3	; 243
   14a46:	d1 40       	sbci	r29, 0x01	; 1
   14a48:	ae 01       	movw	r20, r28
   14a4a:	4d 50       	subi	r20, 0x0D	; 13
   14a4c:	5e 4f       	sbci	r21, 0xFE	; 254
   14a4e:	6c e7       	ldi	r22, 0x7C	; 124
   14a50:	72 e3       	ldi	r23, 0x32	; 50
   14a52:	c8 01       	movw	r24, r16
   14a54:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a58:	cd 50       	subi	r28, 0x0D	; 13
   14a5a:	de 4f       	sbci	r29, 0xFE	; 254
   14a5c:	19 82       	std	Y+1, r1	; 0x01
   14a5e:	18 82       	st	Y, r1
   14a60:	c3 5f       	subi	r28, 0xF3	; 243
   14a62:	d1 40       	sbci	r29, 0x01	; 1
   14a64:	ae 01       	movw	r20, r28
   14a66:	4d 50       	subi	r20, 0x0D	; 13
   14a68:	5e 4f       	sbci	r21, 0xFE	; 254
   14a6a:	66 e7       	ldi	r22, 0x76	; 118
   14a6c:	72 e3       	ldi	r23, 0x32	; 50
   14a6e:	c8 01       	movw	r24, r16
   14a70:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a74:	cd 50       	subi	r28, 0x0D	; 13
   14a76:	de 4f       	sbci	r29, 0xFE	; 254
   14a78:	19 82       	std	Y+1, r1	; 0x01
   14a7a:	18 82       	st	Y, r1
   14a7c:	c3 5f       	subi	r28, 0xF3	; 243
   14a7e:	d1 40       	sbci	r29, 0x01	; 1
   14a80:	ae 01       	movw	r20, r28
   14a82:	4d 50       	subi	r20, 0x0D	; 13
   14a84:	5e 4f       	sbci	r21, 0xFE	; 254
   14a86:	61 e7       	ldi	r22, 0x71	; 113
   14a88:	72 e3       	ldi	r23, 0x32	; 50
   14a8a:	c8 01       	movw	r24, r16
   14a8c:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a90:	4c ed       	ldi	r20, 0xDC	; 220
   14a92:	50 e0       	ldi	r21, 0x00	; 0
   14a94:	b7 01       	movw	r22, r14
   14a96:	c8 01       	movw	r24, r16
   14a98:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14a9c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14aa0:	81 30       	cpi	r24, 0x01	; 1
   14aa2:	29 f4       	brne	.+10     	; 0x14aae <_Z12Publish_Datav+0x49c>
   14aa4:	b7 01       	movw	r22, r14
   14aa6:	82 e5       	ldi	r24, 0x52	; 82
   14aa8:	94 e1       	ldi	r25, 0x14	; 20
   14aaa:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   14aae:	eb ef       	ldi	r30, 0xFB	; 251
   14ab0:	fe e0       	ldi	r31, 0x0E	; 14
   14ab2:	8e e6       	ldi	r24, 0x6E	; 110
   14ab4:	df 01       	movw	r26, r30
   14ab6:	1d 92       	st	X+, r1
   14ab8:	8a 95       	dec	r24
   14aba:	e9 f7       	brne	.-6      	; 0x14ab6 <_Z12Publish_Datav+0x4a4>
   14abc:	83 e1       	ldi	r24, 0x13	; 19
   14abe:	97 e0       	ldi	r25, 0x07	; 7
   14ac0:	9f 93       	push	r25
   14ac2:	8f 93       	push	r24
   14ac4:	83 e5       	ldi	r24, 0x53	; 83
   14ac6:	97 e0       	ldi	r25, 0x07	; 7
   14ac8:	9f 93       	push	r25
   14aca:	8f 93       	push	r24
   14acc:	ff 93       	push	r31
   14ace:	ef 93       	push	r30
   14ad0:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   14ad4:	0f 90       	pop	r0
   14ad6:	0f 90       	pop	r0
   14ad8:	0f 90       	pop	r0
   14ada:	0f 90       	pop	r0
   14adc:	0f 90       	pop	r0
   14ade:	0f 90       	pop	r0
   14ae0:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14ae4:	88 23       	and	r24, r24
   14ae6:	69 f0       	breq	.+26     	; 0x14b02 <_Z12Publish_Datav+0x4f0>
   14ae8:	b7 01       	movw	r22, r14
   14aea:	8b ef       	ldi	r24, 0xFB	; 251
   14aec:	9e e0       	ldi	r25, 0x0E	; 14
   14aee:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   14af2:	81 11       	cpse	r24, r1
   14af4:	06 c0       	rjmp	.+12     	; 0x14b02 <_Z12Publish_Datav+0x4f0>
   14af6:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14afa:	81 50       	subi	r24, 0x01	; 1
   14afc:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14b00:	ef cf       	rjmp	.-34     	; 0x14ae0 <_Z12Publish_Datav+0x4ce>
   14b02:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   14b06:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14b0a:	8f 7b       	andi	r24, 0xBF	; 191
   14b0c:	c3 ce       	rjmp	.-634    	; 0x14894 <_Z12Publish_Datav+0x282>
   14b0e:	87 ff       	sbrs	r24, 7
   14b10:	7e c0       	rjmp	.+252    	; 0x14c0e <_Z12Publish_Datav+0x5fc>
   14b12:	6e 01       	movw	r12, r28
   14b14:	b9 ee       	ldi	r27, 0xE9	; 233
   14b16:	cb 1a       	sub	r12, r27
   14b18:	be ef       	ldi	r27, 0xFE	; 254
   14b1a:	db 0a       	sbc	r13, r27
   14b1c:	8c ed       	ldi	r24, 0xDC	; 220
   14b1e:	f6 01       	movw	r30, r12
   14b20:	11 92       	st	Z+, r1
   14b22:	8a 95       	dec	r24
   14b24:	e9 f7       	brne	.-6      	; 0x14b20 <_Z12Publish_Datav+0x50e>
   14b26:	80 91 f9 13 	lds	r24, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xb2>
   14b2a:	87 30       	cpi	r24, 0x07	; 7
   14b2c:	08 f0       	brcs	.+2      	; 0x14b30 <_Z12Publish_Datav+0x51e>
   14b2e:	69 c0       	rjmp	.+210    	; 0x14c02 <_Z12Publish_Datav+0x5f0>
   14b30:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14b34:	81 30       	cpi	r24, 0x01	; 1
   14b36:	51 f4       	brne	.+20     	; 0x14b4c <_Z12Publish_Datav+0x53a>
   14b38:	6b e5       	ldi	r22, 0x5B	; 91
   14b3a:	72 e3       	ldi	r23, 0x32	; 50
   14b3c:	82 e5       	ldi	r24, 0x52	; 82
   14b3e:	94 e1       	ldi	r25, 0x14	; 20
   14b40:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14b44:	82 e5       	ldi	r24, 0x52	; 82
   14b46:	94 e1       	ldi	r25, 0x14	; 20
   14b48:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14b4c:	40 91 f9 13 	lds	r20, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xb2>
   14b50:	7d e0       	ldi	r23, 0x0D	; 13
   14b52:	f7 2e       	mov	r15, r23
   14b54:	f4 9e       	mul	r15, r20
   14b56:	a0 01       	movw	r20, r0
   14b58:	11 24       	eor	r1, r1
   14b5a:	4e 53       	subi	r20, 0x3E	; 62
   14b5c:	54 4f       	sbci	r21, 0xF4	; 244
   14b5e:	6f e4       	ldi	r22, 0x4F	; 79
   14b60:	72 e3       	ldi	r23, 0x32	; 50
   14b62:	c8 01       	movw	r24, r16
   14b64:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14b68:	40 91 f9 13 	lds	r20, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xb2>
   14b6c:	f4 9e       	mul	r15, r20
   14b6e:	a0 01       	movw	r20, r0
   14b70:	11 24       	eor	r1, r1
   14b72:	41 54       	subi	r20, 0x41	; 65
   14b74:	54 4f       	sbci	r21, 0xF4	; 244
   14b76:	6a e4       	ldi	r22, 0x4A	; 74
   14b78:	72 e3       	ldi	r23, 0x32	; 50
   14b7a:	c8 01       	movw	r24, r16
   14b7c:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14b80:	40 91 f9 13 	lds	r20, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xb2>
   14b84:	f4 9e       	mul	r15, r20
   14b86:	a0 01       	movw	r20, r0
   14b88:	11 24       	eor	r1, r1
   14b8a:	4f 53       	subi	r20, 0x3F	; 63
   14b8c:	54 4f       	sbci	r21, 0xF4	; 244
   14b8e:	60 e4       	ldi	r22, 0x40	; 64
   14b90:	72 e3       	ldi	r23, 0x32	; 50
   14b92:	c8 01       	movw	r24, r16
   14b94:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14b98:	4c ed       	ldi	r20, 0xDC	; 220
   14b9a:	50 e0       	ldi	r21, 0x00	; 0
   14b9c:	b6 01       	movw	r22, r12
   14b9e:	c8 01       	movw	r24, r16
   14ba0:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14ba4:	eb ef       	ldi	r30, 0xFB	; 251
   14ba6:	fe e0       	ldi	r31, 0x0E	; 14
   14ba8:	8e e6       	ldi	r24, 0x6E	; 110
   14baa:	df 01       	movw	r26, r30
   14bac:	1d 92       	st	X+, r1
   14bae:	8a 95       	dec	r24
   14bb0:	e9 f7       	brne	.-6      	; 0x14bac <_Z12Publish_Datav+0x59a>
   14bb2:	80 91 f9 13 	lds	r24, 0x13F9	; 0x8013f9 <_sRuble_Parameters+0xb2>
   14bb6:	f8 9e       	mul	r15, r24
   14bb8:	c0 01       	movw	r24, r0
   14bba:	11 24       	eor	r1, r1
   14bbc:	88 54       	subi	r24, 0x48	; 72
   14bbe:	94 4f       	sbci	r25, 0xF4	; 244
   14bc0:	9f 93       	push	r25
   14bc2:	8f 93       	push	r24
   14bc4:	88 e6       	ldi	r24, 0x68	; 104
   14bc6:	97 e0       	ldi	r25, 0x07	; 7
   14bc8:	9f 93       	push	r25
   14bca:	8f 93       	push	r24
   14bcc:	ff 93       	push	r31
   14bce:	ef 93       	push	r30
   14bd0:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   14bd4:	0f 90       	pop	r0
   14bd6:	0f 90       	pop	r0
   14bd8:	0f 90       	pop	r0
   14bda:	0f 90       	pop	r0
   14bdc:	0f 90       	pop	r0
   14bde:	0f 90       	pop	r0
   14be0:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14be4:	88 23       	and	r24, r24
   14be6:	69 f0       	breq	.+26     	; 0x14c02 <_Z12Publish_Datav+0x5f0>
   14be8:	b6 01       	movw	r22, r12
   14bea:	8b ef       	ldi	r24, 0xFB	; 251
   14bec:	9e e0       	ldi	r25, 0x0E	; 14
   14bee:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   14bf2:	81 11       	cpse	r24, r1
   14bf4:	06 c0       	rjmp	.+12     	; 0x14c02 <_Z12Publish_Datav+0x5f0>
   14bf6:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14bfa:	81 50       	subi	r24, 0x01	; 1
   14bfc:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14c00:	ef cf       	rjmp	.-34     	; 0x14be0 <_Z12Publish_Datav+0x5ce>
   14c02:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   14c06:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14c0a:	8f 77       	andi	r24, 0x7F	; 127
   14c0c:	43 ce       	rjmp	.-890    	; 0x14894 <_Z12Publish_Datav+0x282>
   14c0e:	90 ff       	sbrs	r25, 0
   14c10:	55 c0       	rjmp	.+170    	; 0x14cbc <_Z12Publish_Datav+0x6aa>
   14c12:	7e 01       	movw	r14, r28
   14c14:	b9 ee       	ldi	r27, 0xE9	; 233
   14c16:	eb 1a       	sub	r14, r27
   14c18:	be ef       	ldi	r27, 0xFE	; 254
   14c1a:	fb 0a       	sbc	r15, r27
   14c1c:	8c ed       	ldi	r24, 0xDC	; 220
   14c1e:	f7 01       	movw	r30, r14
   14c20:	11 92       	st	Z+, r1
   14c22:	8a 95       	dec	r24
   14c24:	e9 f7       	brne	.-6      	; 0x14c20 <_Z12Publish_Datav+0x60e>
   14c26:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14c2a:	81 30       	cpi	r24, 0x01	; 1
   14c2c:	51 f4       	brne	.+20     	; 0x14c42 <_Z12Publish_Datav+0x630>
   14c2e:	6a e2       	ldi	r22, 0x2A	; 42
   14c30:	72 e3       	ldi	r23, 0x32	; 50
   14c32:	82 e5       	ldi	r24, 0x52	; 82
   14c34:	94 e1       	ldi	r25, 0x14	; 20
   14c36:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14c3a:	82 e5       	ldi	r24, 0x52	; 82
   14c3c:	94 e1       	ldi	r25, 0x14	; 20
   14c3e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14c42:	41 ea       	ldi	r20, 0xA1	; 161
   14c44:	53 e1       	ldi	r21, 0x13	; 19
   14c46:	64 e2       	ldi	r22, 0x24	; 36
   14c48:	72 e3       	ldi	r23, 0x32	; 50
   14c4a:	c8 01       	movw	r24, r16
   14c4c:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14c50:	4c ed       	ldi	r20, 0xDC	; 220
   14c52:	50 e0       	ldi	r21, 0x00	; 0
   14c54:	b7 01       	movw	r22, r14
   14c56:	c8 01       	movw	r24, r16
   14c58:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14c5c:	eb ef       	ldi	r30, 0xFB	; 251
   14c5e:	fe e0       	ldi	r31, 0x0E	; 14
   14c60:	8e e6       	ldi	r24, 0x6E	; 110
   14c62:	df 01       	movw	r26, r30
   14c64:	1d 92       	st	X+, r1
   14c66:	8a 95       	dec	r24
   14c68:	e9 f7       	brne	.-6      	; 0x14c64 <_Z12Publish_Datav+0x652>
   14c6a:	87 e6       	ldi	r24, 0x67	; 103
   14c6c:	93 e1       	ldi	r25, 0x13	; 19
   14c6e:	9f 93       	push	r25
   14c70:	8f 93       	push	r24
   14c72:	8c e7       	ldi	r24, 0x7C	; 124
   14c74:	97 e0       	ldi	r25, 0x07	; 7
   14c76:	9f 93       	push	r25
   14c78:	8f 93       	push	r24
   14c7a:	ff 93       	push	r31
   14c7c:	ef 93       	push	r30
   14c7e:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   14c82:	0f 90       	pop	r0
   14c84:	0f 90       	pop	r0
   14c86:	0f 90       	pop	r0
   14c88:	0f 90       	pop	r0
   14c8a:	0f 90       	pop	r0
   14c8c:	0f 90       	pop	r0
   14c8e:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14c92:	88 23       	and	r24, r24
   14c94:	69 f0       	breq	.+26     	; 0x14cb0 <_Z12Publish_Datav+0x69e>
   14c96:	b7 01       	movw	r22, r14
   14c98:	8b ef       	ldi	r24, 0xFB	; 251
   14c9a:	9e e0       	ldi	r25, 0x0E	; 14
   14c9c:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   14ca0:	81 11       	cpse	r24, r1
   14ca2:	06 c0       	rjmp	.+12     	; 0x14cb0 <_Z12Publish_Datav+0x69e>
   14ca4:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14ca8:	81 50       	subi	r24, 0x01	; 1
   14caa:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14cae:	ef cf       	rjmp	.-34     	; 0x14c8e <_Z12Publish_Datav+0x67c>
   14cb0:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   14cb4:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14cb8:	9e 7f       	andi	r25, 0xFE	; 254
   14cba:	ec cd       	rjmp	.-1064   	; 0x14894 <_Z12Publish_Datav+0x282>
   14cbc:	94 ff       	sbrs	r25, 4
   14cbe:	3f c1       	rjmp	.+638    	; 0x14f3e <_Z12Publish_Datav+0x92c>
   14cc0:	7e 01       	movw	r14, r28
   14cc2:	b9 ee       	ldi	r27, 0xE9	; 233
   14cc4:	eb 1a       	sub	r14, r27
   14cc6:	be ef       	ldi	r27, 0xFE	; 254
   14cc8:	fb 0a       	sbc	r15, r27
   14cca:	8c ed       	ldi	r24, 0xDC	; 220
   14ccc:	f7 01       	movw	r30, r14
   14cce:	11 92       	st	Z+, r1
   14cd0:	8a 95       	dec	r24
   14cd2:	e9 f7       	brne	.-6      	; 0x14cce <_Z12Publish_Datav+0x6bc>
   14cd4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14cd8:	81 30       	cpi	r24, 0x01	; 1
   14cda:	51 f4       	brne	.+20     	; 0x14cf0 <_Z12Publish_Datav+0x6de>
   14cdc:	60 e1       	ldi	r22, 0x10	; 16
   14cde:	72 e3       	ldi	r23, 0x32	; 50
   14ce0:	82 e5       	ldi	r24, 0x52	; 82
   14ce2:	94 e1       	ldi	r25, 0x14	; 20
   14ce4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14ce8:	82 e5       	ldi	r24, 0x52	; 82
   14cea:	94 e1       	ldi	r25, 0x14	; 20
   14cec:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14cf0:	8a e0       	ldi	r24, 0x0A	; 10
   14cf2:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   14cf6:	21 e0       	ldi	r18, 0x01	; 1
   14cf8:	89 2b       	or	r24, r25
   14cfa:	09 f0       	breq	.+2      	; 0x14cfe <_Z12Publish_Datav+0x6ec>
   14cfc:	20 e0       	ldi	r18, 0x00	; 0
   14cfe:	cd 50       	subi	r28, 0x0D	; 13
   14d00:	de 4f       	sbci	r29, 0xFE	; 254
   14d02:	28 83       	st	Y, r18
   14d04:	c3 5f       	subi	r28, 0xF3	; 243
   14d06:	d1 40       	sbci	r29, 0x01	; 1
   14d08:	ae 01       	movw	r20, r28
   14d0a:	4d 50       	subi	r20, 0x0D	; 13
   14d0c:	5e 4f       	sbci	r21, 0xFE	; 254
   14d0e:	68 e0       	ldi	r22, 0x08	; 8
   14d10:	72 e3       	ldi	r23, 0x32	; 50
   14d12:	c8 01       	movw	r24, r16
   14d14:	0e 94 76 89 	call	0x112ec	; 0x112ec <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   14d18:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   14d1c:	81 11       	cpse	r24, r1
   14d1e:	4e c0       	rjmp	.+156    	; 0x14dbc <_Z12Publish_Datav+0x7aa>
   14d20:	80 91 04 14 	lds	r24, 0x1404	; 0x801404 <_sRuble_Parameters+0xbd>
   14d24:	88 23       	and	r24, r24
   14d26:	09 f4       	brne	.+2      	; 0x14d2a <_Z12Publish_Datav+0x718>
   14d28:	43 c0       	rjmp	.+134    	; 0x14db0 <_Z12Publish_Datav+0x79e>
   14d2a:	90 90 4f 13 	lds	r9, 0x134F	; 0x80134f <_sRuble_Parameters+0x8>
   14d2e:	a0 90 50 13 	lds	r10, 0x1350	; 0x801350 <_sRuble_Parameters+0x9>
   14d32:	b0 90 51 13 	lds	r11, 0x1351	; 0x801351 <_sRuble_Parameters+0xa>
   14d36:	c0 90 52 13 	lds	r12, 0x1352	; 0x801352 <_sRuble_Parameters+0xb>
   14d3a:	d0 90 53 13 	lds	r13, 0x1353	; 0x801353 <_sRuble_Parameters+0xc>
   14d3e:	b0 91 54 13 	lds	r27, 0x1354	; 0x801354 <_sRuble_Parameters+0xd>
   14d42:	f0 91 55 13 	lds	r31, 0x1355	; 0x801355 <_sRuble_Parameters+0xe>
   14d46:	e0 91 56 13 	lds	r30, 0x1356	; 0x801356 <_sRuble_Parameters+0xf>
   14d4a:	29 2d       	mov	r18, r9
   14d4c:	3a 2d       	mov	r19, r10
   14d4e:	4b 2d       	mov	r20, r11
   14d50:	5c 2d       	mov	r21, r12
   14d52:	6d 2d       	mov	r22, r13
   14d54:	7b 2f       	mov	r23, r27
   14d56:	8f 2f       	mov	r24, r31
   14d58:	9e 2f       	mov	r25, r30
   14d5a:	a2 e0       	ldi	r26, 0x02	; 2
   14d5c:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
   14d60:	81 f0       	breq	.+32     	; 0x14d82 <_Z12Publish_Datav+0x770>
   14d62:	a4 e0       	ldi	r26, 0x04	; 4
   14d64:	cd 50       	subi	r28, 0x0D	; 13
   14d66:	de 4f       	sbci	r29, 0xFE	; 254
   14d68:	19 82       	std	Y+1, r1	; 0x01
   14d6a:	18 82       	st	Y, r1
   14d6c:	c3 5f       	subi	r28, 0xF3	; 243
   14d6e:	d1 40       	sbci	r29, 0x01	; 1
   14d70:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
   14d74:	a1 f4       	brne	.+40     	; 0x14d9e <_Z12Publish_Datav+0x78c>
   14d76:	ae 01       	movw	r20, r28
   14d78:	4d 50       	subi	r20, 0x0D	; 13
   14d7a:	5e 4f       	sbci	r21, 0xFE	; 254
   14d7c:	60 e0       	ldi	r22, 0x00	; 0
   14d7e:	72 e3       	ldi	r23, 0x32	; 50
   14d80:	13 c0       	rjmp	.+38     	; 0x14da8 <_Z12Publish_Datav+0x796>
   14d82:	81 e0       	ldi	r24, 0x01	; 1
   14d84:	90 e0       	ldi	r25, 0x00	; 0
   14d86:	cd 50       	subi	r28, 0x0D	; 13
   14d88:	de 4f       	sbci	r29, 0xFE	; 254
   14d8a:	99 83       	std	Y+1, r25	; 0x01
   14d8c:	88 83       	st	Y, r24
   14d8e:	c3 5f       	subi	r28, 0xF3	; 243
   14d90:	d1 40       	sbci	r29, 0x01	; 1
   14d92:	ae 01       	movw	r20, r28
   14d94:	4d 50       	subi	r20, 0x0D	; 13
   14d96:	5e 4f       	sbci	r21, 0xFE	; 254
   14d98:	68 ef       	ldi	r22, 0xF8	; 248
   14d9a:	71 e3       	ldi	r23, 0x31	; 49
   14d9c:	05 c0       	rjmp	.+10     	; 0x14da8 <_Z12Publish_Datav+0x796>
   14d9e:	ae 01       	movw	r20, r28
   14da0:	4d 50       	subi	r20, 0x0D	; 13
   14da2:	5e 4f       	sbci	r21, 0xFE	; 254
   14da4:	60 ef       	ldi	r22, 0xF0	; 240
   14da6:	71 e3       	ldi	r23, 0x31	; 49
   14da8:	c8 01       	movw	r24, r16
   14daa:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14dae:	21 c0       	rjmp	.+66     	; 0x14df2 <_Z12Publish_Datav+0x7e0>
   14db0:	8a e0       	ldi	r24, 0x0A	; 10
   14db2:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   14db6:	89 2b       	or	r24, r25
   14db8:	71 f4       	brne	.+28     	; 0x14dd6 <_Z12Publish_Datav+0x7c4>
   14dba:	04 c0       	rjmp	.+8      	; 0x14dc4 <_Z12Publish_Datav+0x7b2>
   14dbc:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xc0>
   14dc0:	81 30       	cpi	r24, 0x01	; 1
   14dc2:	49 f4       	brne	.+18     	; 0x14dd6 <_Z12Publish_Datav+0x7c4>
   14dc4:	81 e0       	ldi	r24, 0x01	; 1
   14dc6:	90 e0       	ldi	r25, 0x00	; 0
   14dc8:	cd 50       	subi	r28, 0x0D	; 13
   14dca:	de 4f       	sbci	r29, 0xFE	; 254
   14dcc:	99 83       	std	Y+1, r25	; 0x01
   14dce:	88 83       	st	Y, r24
   14dd0:	c3 5f       	subi	r28, 0xF3	; 243
   14dd2:	d1 40       	sbci	r29, 0x01	; 1
   14dd4:	06 c0       	rjmp	.+12     	; 0x14de2 <_Z12Publish_Datav+0x7d0>
   14dd6:	cd 50       	subi	r28, 0x0D	; 13
   14dd8:	de 4f       	sbci	r29, 0xFE	; 254
   14dda:	19 82       	std	Y+1, r1	; 0x01
   14ddc:	18 82       	st	Y, r1
   14dde:	c3 5f       	subi	r28, 0xF3	; 243
   14de0:	d1 40       	sbci	r29, 0x01	; 1
   14de2:	ae 01       	movw	r20, r28
   14de4:	4d 50       	subi	r20, 0x0D	; 13
   14de6:	5e 4f       	sbci	r21, 0xFE	; 254
   14de8:	65 e9       	ldi	r22, 0x95	; 149
   14dea:	77 e0       	ldi	r23, 0x07	; 7
   14dec:	c8 01       	movw	r24, r16
   14dee:	0e 94 7c 8a 	call	0x114f8	; 0x114f8 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   14df2:	cd 50       	subi	r28, 0x0D	; 13
   14df4:	de 4f       	sbci	r29, 0xFE	; 254
   14df6:	19 82       	std	Y+1, r1	; 0x01
   14df8:	18 82       	st	Y, r1
   14dfa:	c3 5f       	subi	r28, 0xF3	; 243
   14dfc:	d1 40       	sbci	r29, 0x01	; 1
   14dfe:	ae 01       	movw	r20, r28
   14e00:	4d 50       	subi	r20, 0x0D	; 13
   14e02:	5e 4f       	sbci	r21, 0xFE	; 254
   14e04:	69 ee       	ldi	r22, 0xE9	; 233
   14e06:	71 e3       	ldi	r23, 0x31	; 49
   14e08:	c8 01       	movw	r24, r16
   14e0a:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e0e:	40 91 fe 13 	lds	r20, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb7>
   14e12:	fb e1       	ldi	r31, 0x1B	; 27
   14e14:	4f 9f       	mul	r20, r31
   14e16:	a0 01       	movw	r20, r0
   14e18:	11 24       	eor	r1, r1
   14e1a:	fa 01       	movw	r30, r20
   14e1c:	ef 57       	subi	r30, 0x7F	; 127
   14e1e:	f2 4f       	sbci	r31, 0xF2	; 242
   14e20:	83 81       	ldd	r24, Z+3	; 0x03
   14e22:	94 81       	ldd	r25, Z+4	; 0x04
   14e24:	00 97       	sbiw	r24, 0x00	; 0
   14e26:	29 f1       	breq	.+74     	; 0x14e72 <_Z12Publish_Datav+0x860>
   14e28:	6c e3       	ldi	r22, 0x3C	; 60
   14e2a:	70 e0       	ldi	r23, 0x00	; 0
   14e2c:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   14e30:	6f 5f       	subi	r22, 0xFF	; 255
   14e32:	7f 4f       	sbci	r23, 0xFF	; 255
   14e34:	cd 50       	subi	r28, 0x0D	; 13
   14e36:	de 4f       	sbci	r29, 0xFE	; 254
   14e38:	79 83       	std	Y+1, r23	; 0x01
   14e3a:	68 83       	st	Y, r22
   14e3c:	c3 5f       	subi	r28, 0xF3	; 243
   14e3e:	d1 40       	sbci	r29, 0x01	; 1
   14e40:	ae 01       	movw	r20, r28
   14e42:	4d 50       	subi	r20, 0x0D	; 13
   14e44:	5e 4f       	sbci	r21, 0xFE	; 254
   14e46:	64 ee       	ldi	r22, 0xE4	; 228
   14e48:	71 e3       	ldi	r23, 0x31	; 49
   14e4a:	c8 01       	movw	r24, r16
   14e4c:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14e50:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb7>
   14e54:	90 e0       	ldi	r25, 0x00	; 0
   14e56:	8b 59       	subi	r24, 0x9B	; 155
   14e58:	9f 4f       	sbci	r25, 0xFF	; 255
   14e5a:	cd 50       	subi	r28, 0x0D	; 13
   14e5c:	de 4f       	sbci	r29, 0xFE	; 254
   14e5e:	99 83       	std	Y+1, r25	; 0x01
   14e60:	88 83       	st	Y, r24
   14e62:	c3 5f       	subi	r28, 0xF3	; 243
   14e64:	d1 40       	sbci	r29, 0x01	; 1
   14e66:	ae 01       	movw	r20, r28
   14e68:	4d 50       	subi	r20, 0x0D	; 13
   14e6a:	5e 4f       	sbci	r21, 0xFE	; 254
   14e6c:	6f ed       	ldi	r22, 0xDF	; 223
   14e6e:	71 e3       	ldi	r23, 0x31	; 49
   14e70:	17 c0       	rjmp	.+46     	; 0x14ea0 <_Z12Publish_Datav+0x88e>
   14e72:	4c 57       	subi	r20, 0x7C	; 124
   14e74:	52 4f       	sbci	r21, 0xF2	; 242
   14e76:	6a ed       	ldi	r22, 0xDA	; 218
   14e78:	71 e3       	ldi	r23, 0x31	; 49
   14e7a:	c8 01       	movw	r24, r16
   14e7c:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14e80:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb7>
   14e84:	90 e0       	ldi	r25, 0x00	; 0
   14e86:	8b 59       	subi	r24, 0x9B	; 155
   14e88:	9f 4f       	sbci	r25, 0xFF	; 255
   14e8a:	cd 50       	subi	r28, 0x0D	; 13
   14e8c:	de 4f       	sbci	r29, 0xFE	; 254
   14e8e:	99 83       	std	Y+1, r25	; 0x01
   14e90:	88 83       	st	Y, r24
   14e92:	c3 5f       	subi	r28, 0xF3	; 243
   14e94:	d1 40       	sbci	r29, 0x01	; 1
   14e96:	ae 01       	movw	r20, r28
   14e98:	4d 50       	subi	r20, 0x0D	; 13
   14e9a:	5e 4f       	sbci	r21, 0xFE	; 254
   14e9c:	65 ed       	ldi	r22, 0xD5	; 213
   14e9e:	71 e3       	ldi	r23, 0x31	; 49
   14ea0:	c8 01       	movw	r24, r16
   14ea2:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ea6:	4c ed       	ldi	r20, 0xDC	; 220
   14ea8:	50 e0       	ldi	r21, 0x00	; 0
   14eaa:	b7 01       	movw	r22, r14
   14eac:	c8 01       	movw	r24, r16
   14eae:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14eb2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14eb6:	81 30       	cpi	r24, 0x01	; 1
   14eb8:	29 f4       	brne	.+10     	; 0x14ec4 <_Z12Publish_Datav+0x8b2>
   14eba:	b7 01       	movw	r22, r14
   14ebc:	82 e5       	ldi	r24, 0x52	; 82
   14ebe:	94 e1       	ldi	r25, 0x14	; 20
   14ec0:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   14ec4:	eb ef       	ldi	r30, 0xFB	; 251
   14ec6:	fe e0       	ldi	r31, 0x0E	; 14
   14ec8:	8e e6       	ldi	r24, 0x6E	; 110
   14eca:	df 01       	movw	r26, r30
   14ecc:	1d 92       	st	X+, r1
   14ece:	8a 95       	dec	r24
   14ed0:	e9 f7       	brne	.-6      	; 0x14ecc <_Z12Publish_Datav+0x8ba>
   14ed2:	87 e6       	ldi	r24, 0x67	; 103
   14ed4:	93 e1       	ldi	r25, 0x13	; 19
   14ed6:	9f 93       	push	r25
   14ed8:	8f 93       	push	r24
   14eda:	8b e3       	ldi	r24, 0x3B	; 59
   14edc:	97 e0       	ldi	r25, 0x07	; 7
   14ede:	9f 93       	push	r25
   14ee0:	8f 93       	push	r24
   14ee2:	ff 93       	push	r31
   14ee4:	ef 93       	push	r30
   14ee6:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   14eea:	0f 90       	pop	r0
   14eec:	0f 90       	pop	r0
   14eee:	0f 90       	pop	r0
   14ef0:	0f 90       	pop	r0
   14ef2:	0f 90       	pop	r0
   14ef4:	0f 90       	pop	r0
   14ef6:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14efa:	88 23       	and	r24, r24
   14efc:	d1 f0       	breq	.+52     	; 0x14f32 <_Z12Publish_Datav+0x920>
   14efe:	b7 01       	movw	r22, r14
   14f00:	8b ef       	ldi	r24, 0xFB	; 251
   14f02:	9e e0       	ldi	r25, 0x0E	; 14
   14f04:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   14f08:	88 23       	and	r24, r24
   14f0a:	69 f0       	breq	.+26     	; 0x14f26 <_Z12Publish_Datav+0x914>
   14f0c:	80 91 fe 13 	lds	r24, 0x13FE	; 0x8013fe <_sRuble_Parameters+0xb7>
   14f10:	bb e1       	ldi	r27, 0x1B	; 27
   14f12:	8b 9f       	mul	r24, r27
   14f14:	f0 01       	movw	r30, r0
   14f16:	11 24       	eor	r1, r1
   14f18:	ef 57       	subi	r30, 0x7F	; 127
   14f1a:	f2 4f       	sbci	r31, 0xF2	; 242
   14f1c:	12 8e       	std	Z+26, r1	; 0x1a
   14f1e:	8f 5f       	subi	r24, 0xFF	; 255
   14f20:	0e 94 8b 79 	call	0xf316	; 0xf316 <_Z21Exra_Plot_Data_EEPROMh>
   14f24:	06 c0       	rjmp	.+12     	; 0x14f32 <_Z12Publish_Datav+0x920>
   14f26:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14f2a:	81 50       	subi	r24, 0x01	; 1
   14f2c:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   14f30:	e2 cf       	rjmp	.-60     	; 0x14ef6 <_Z12Publish_Datav+0x8e4>
   14f32:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   14f36:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   14f3a:	9f 7e       	andi	r25, 0xEF	; 239
   14f3c:	ab cc       	rjmp	.-1706   	; 0x14894 <_Z12Publish_Datav+0x282>
   14f3e:	95 ff       	sbrs	r25, 5
   14f40:	4c c1       	rjmp	.+664    	; 0x151da <_Z12Publish_Datav+0xbc8>
   14f42:	6e 01       	movw	r12, r28
   14f44:	e9 ee       	ldi	r30, 0xE9	; 233
   14f46:	ce 1a       	sub	r12, r30
   14f48:	ee ef       	ldi	r30, 0xFE	; 254
   14f4a:	de 0a       	sbc	r13, r30
   14f4c:	8c ed       	ldi	r24, 0xDC	; 220
   14f4e:	d6 01       	movw	r26, r12
   14f50:	1d 92       	st	X+, r1
   14f52:	8a 95       	dec	r24
   14f54:	e9 f7       	brne	.-6      	; 0x14f50 <_Z12Publish_Datav+0x93e>
   14f56:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14f5a:	81 30       	cpi	r24, 0x01	; 1
   14f5c:	31 f4       	brne	.+12     	; 0x14f6a <_Z12Publish_Datav+0x958>
   14f5e:	62 ec       	ldi	r22, 0xC2	; 194
   14f60:	71 e3       	ldi	r23, 0x31	; 49
   14f62:	82 e5       	ldi	r24, 0x52	; 82
   14f64:	94 e1       	ldi	r25, 0x14	; 20
   14f66:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14f6a:	80 91 fd 13 	lds	r24, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   14f6e:	90 e0       	ldi	r25, 0x00	; 0
   14f70:	8b 59       	subi	r24, 0x9B	; 155
   14f72:	9f 4f       	sbci	r25, 0xFF	; 255
   14f74:	cd 50       	subi	r28, 0x0D	; 13
   14f76:	de 4f       	sbci	r29, 0xFE	; 254
   14f78:	99 83       	std	Y+1, r25	; 0x01
   14f7a:	88 83       	st	Y, r24
   14f7c:	c3 5f       	subi	r28, 0xF3	; 243
   14f7e:	d1 40       	sbci	r29, 0x01	; 1
   14f80:	ae 01       	movw	r20, r28
   14f82:	4d 50       	subi	r20, 0x0D	; 13
   14f84:	5e 4f       	sbci	r21, 0xFE	; 254
   14f86:	6e eb       	ldi	r22, 0xBE	; 190
   14f88:	71 e3       	ldi	r23, 0x31	; 49
   14f8a:	c8 01       	movw	r24, r16
   14f8c:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14f90:	e0 91 fd 13 	lds	r30, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   14f94:	6b e1       	ldi	r22, 0x1B	; 27
   14f96:	f6 2e       	mov	r15, r22
   14f98:	fe 9e       	mul	r15, r30
   14f9a:	f0 01       	movw	r30, r0
   14f9c:	11 24       	eor	r1, r1
   14f9e:	ef 57       	subi	r30, 0x7F	; 127
   14fa0:	f2 4f       	sbci	r31, 0xF2	; 242
   14fa2:	92 81       	ldd	r25, Z+2	; 0x02
   14fa4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   14fa8:	91 30       	cpi	r25, 0x01	; 1
   14faa:	b9 f5       	brne	.+110    	; 0x1501a <_Z12Publish_Datav+0xa08>
   14fac:	91 8d       	ldd	r25, Z+25	; 0x19
   14fae:	91 11       	cpse	r25, r1
   14fb0:	34 c0       	rjmp	.+104    	; 0x1501a <_Z12Publish_Datav+0xa08>
   14fb2:	81 30       	cpi	r24, 0x01	; 1
   14fb4:	31 f5       	brne	.+76     	; 0x15002 <_Z12Publish_Datav+0x9f0>
   14fb6:	6d e9       	ldi	r22, 0x9D	; 157
   14fb8:	71 e3       	ldi	r23, 0x31	; 49
   14fba:	82 e5       	ldi	r24, 0x52	; 82
   14fbc:	94 e1       	ldi	r25, 0x14	; 20
   14fbe:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14fc2:	82 e5       	ldi	r24, 0x52	; 82
   14fc4:	94 e1       	ldi	r25, 0x14	; 20
   14fc6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   14fca:	e0 91 fd 13 	lds	r30, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   14fce:	fe 9e       	mul	r15, r30
   14fd0:	f0 01       	movw	r30, r0
   14fd2:	11 24       	eor	r1, r1
   14fd4:	ef 57       	subi	r30, 0x7F	; 127
   14fd6:	f2 4f       	sbci	r31, 0xF2	; 242
   14fd8:	4a e0       	ldi	r20, 0x0A	; 10
   14fda:	50 e0       	ldi	r21, 0x00	; 0
   14fdc:	62 81       	ldd	r22, Z+2	; 0x02
   14fde:	82 e5       	ldi	r24, 0x52	; 82
   14fe0:	94 e1       	ldi	r25, 0x14	; 20
   14fe2:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   14fe6:	e0 91 fd 13 	lds	r30, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   14fea:	fe 9e       	mul	r15, r30
   14fec:	f0 01       	movw	r30, r0
   14fee:	11 24       	eor	r1, r1
   14ff0:	ef 57       	subi	r30, 0x7F	; 127
   14ff2:	f2 4f       	sbci	r31, 0xF2	; 242
   14ff4:	4a e0       	ldi	r20, 0x0A	; 10
   14ff6:	50 e0       	ldi	r21, 0x00	; 0
   14ff8:	61 8d       	ldd	r22, Z+25	; 0x19
   14ffa:	82 e5       	ldi	r24, 0x52	; 82
   14ffc:	94 e1       	ldi	r25, 0x14	; 20
   14ffe:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   15002:	cd 50       	subi	r28, 0x0D	; 13
   15004:	de 4f       	sbci	r29, 0xFE	; 254
   15006:	19 82       	std	Y+1, r1	; 0x01
   15008:	18 82       	st	Y, r1
   1500a:	c3 5f       	subi	r28, 0xF3	; 243
   1500c:	d1 40       	sbci	r29, 0x01	; 1
   1500e:	ae 01       	movw	r20, r28
   15010:	4d 50       	subi	r20, 0x0D	; 13
   15012:	5e 4f       	sbci	r21, 0xFE	; 254
   15014:	66 e9       	ldi	r22, 0x96	; 150
   15016:	71 e3       	ldi	r23, 0x31	; 49
   15018:	37 c0       	rjmp	.+110    	; 0x15088 <_Z12Publish_Datav+0xa76>
   1501a:	81 30       	cpi	r24, 0x01	; 1
   1501c:	41 f5       	brne	.+80     	; 0x1506e <_Z12Publish_Datav+0xa5c>
   1501e:	64 e7       	ldi	r22, 0x74	; 116
   15020:	71 e3       	ldi	r23, 0x31	; 49
   15022:	82 e5       	ldi	r24, 0x52	; 82
   15024:	94 e1       	ldi	r25, 0x14	; 20
   15026:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1502a:	82 e5       	ldi	r24, 0x52	; 82
   1502c:	94 e1       	ldi	r25, 0x14	; 20
   1502e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15032:	e0 91 fd 13 	lds	r30, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   15036:	5b e1       	ldi	r21, 0x1B	; 27
   15038:	f5 2e       	mov	r15, r21
   1503a:	fe 9e       	mul	r15, r30
   1503c:	f0 01       	movw	r30, r0
   1503e:	11 24       	eor	r1, r1
   15040:	ef 57       	subi	r30, 0x7F	; 127
   15042:	f2 4f       	sbci	r31, 0xF2	; 242
   15044:	4a e0       	ldi	r20, 0x0A	; 10
   15046:	50 e0       	ldi	r21, 0x00	; 0
   15048:	62 81       	ldd	r22, Z+2	; 0x02
   1504a:	82 e5       	ldi	r24, 0x52	; 82
   1504c:	94 e1       	ldi	r25, 0x14	; 20
   1504e:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   15052:	e0 91 fd 13 	lds	r30, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   15056:	fe 9e       	mul	r15, r30
   15058:	f0 01       	movw	r30, r0
   1505a:	11 24       	eor	r1, r1
   1505c:	ef 57       	subi	r30, 0x7F	; 127
   1505e:	f2 4f       	sbci	r31, 0xF2	; 242
   15060:	4a e0       	ldi	r20, 0x0A	; 10
   15062:	50 e0       	ldi	r21, 0x00	; 0
   15064:	61 8d       	ldd	r22, Z+25	; 0x19
   15066:	82 e5       	ldi	r24, 0x52	; 82
   15068:	94 e1       	ldi	r25, 0x14	; 20
   1506a:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   1506e:	81 e0       	ldi	r24, 0x01	; 1
   15070:	90 e0       	ldi	r25, 0x00	; 0
   15072:	cd 50       	subi	r28, 0x0D	; 13
   15074:	de 4f       	sbci	r29, 0xFE	; 254
   15076:	99 83       	std	Y+1, r25	; 0x01
   15078:	88 83       	st	Y, r24
   1507a:	c3 5f       	subi	r28, 0xF3	; 243
   1507c:	d1 40       	sbci	r29, 0x01	; 1
   1507e:	ae 01       	movw	r20, r28
   15080:	4d 50       	subi	r20, 0x0D	; 13
   15082:	5e 4f       	sbci	r21, 0xFE	; 254
   15084:	6d e6       	ldi	r22, 0x6D	; 109
   15086:	71 e3       	ldi	r23, 0x31	; 49
   15088:	c8 01       	movw	r24, r16
   1508a:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1508e:	e0 91 fd 13 	lds	r30, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   15092:	8e ef       	ldi	r24, 0xFE	; 254
   15094:	8e 0f       	add	r24, r30
   15096:	88 30       	cpi	r24, 0x08	; 8
   15098:	08 f4       	brcc	.+2      	; 0x1509c <_Z12Publish_Datav+0xa8a>
   1509a:	5c c0       	rjmp	.+184    	; 0x15154 <_Z12Publish_Datav+0xb42>
   1509c:	bb e1       	ldi	r27, 0x1B	; 27
   1509e:	eb 9f       	mul	r30, r27
   150a0:	f0 01       	movw	r30, r0
   150a2:	11 24       	eor	r1, r1
   150a4:	ef 57       	subi	r30, 0x7F	; 127
   150a6:	f2 4f       	sbci	r31, 0xF2	; 242
   150a8:	82 81       	ldd	r24, Z+2	; 0x02
   150aa:	85 30       	cpi	r24, 0x05	; 5
   150ac:	71 f4       	brne	.+28     	; 0x150ca <_Z12Publish_Datav+0xab8>
   150ae:	cd 50       	subi	r28, 0x0D	; 13
   150b0:	de 4f       	sbci	r29, 0xFE	; 254
   150b2:	19 82       	std	Y+1, r1	; 0x01
   150b4:	18 82       	st	Y, r1
   150b6:	c3 5f       	subi	r28, 0xF3	; 243
   150b8:	d1 40       	sbci	r29, 0x01	; 1
   150ba:	ae 01       	movw	r20, r28
   150bc:	4d 50       	subi	r20, 0x0D	; 13
   150be:	5e 4f       	sbci	r21, 0xFE	; 254
   150c0:	66 e6       	ldi	r22, 0x66	; 102
   150c2:	71 e3       	ldi	r23, 0x31	; 49
   150c4:	c8 01       	movw	r24, r16
   150c6:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   150ca:	e0 91 fd 13 	lds	r30, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   150ce:	2b e1       	ldi	r18, 0x1B	; 27
   150d0:	e2 9f       	mul	r30, r18
   150d2:	f0 01       	movw	r30, r0
   150d4:	11 24       	eor	r1, r1
   150d6:	ef 57       	subi	r30, 0x7F	; 127
   150d8:	f2 4f       	sbci	r31, 0xF2	; 242
   150da:	82 81       	ldd	r24, Z+2	; 0x02
   150dc:	84 30       	cpi	r24, 0x04	; 4
   150de:	81 f4       	brne	.+32     	; 0x15100 <_Z12Publish_Datav+0xaee>
   150e0:	81 e0       	ldi	r24, 0x01	; 1
   150e2:	90 e0       	ldi	r25, 0x00	; 0
   150e4:	cd 50       	subi	r28, 0x0D	; 13
   150e6:	de 4f       	sbci	r29, 0xFE	; 254
   150e8:	99 83       	std	Y+1, r25	; 0x01
   150ea:	88 83       	st	Y, r24
   150ec:	c3 5f       	subi	r28, 0xF3	; 243
   150ee:	d1 40       	sbci	r29, 0x01	; 1
   150f0:	ae 01       	movw	r20, r28
   150f2:	4d 50       	subi	r20, 0x0D	; 13
   150f4:	5e 4f       	sbci	r21, 0xFE	; 254
   150f6:	6f e5       	ldi	r22, 0x5F	; 95
   150f8:	71 e3       	ldi	r23, 0x31	; 49
   150fa:	c8 01       	movw	r24, r16
   150fc:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15100:	80 91 fd 13 	lds	r24, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   15104:	81 30       	cpi	r24, 0x01	; 1
   15106:	31 f5       	brne	.+76     	; 0x15154 <_Z12Publish_Datav+0xb42>
   15108:	e0 91 a1 0d 	lds	r30, 0x0DA1	; 0x800da1 <_sExtra_Plot+0x20>
   1510c:	f0 e0       	ldi	r31, 0x00	; 0
   1510e:	ef 53       	subi	r30, 0x3F	; 63
   15110:	fc 4e       	sbci	r31, 0xEC	; 236
   15112:	80 81       	ld	r24, Z
   15114:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   15118:	89 2b       	or	r24, r25
   1511a:	61 f0       	breq	.+24     	; 0x15134 <_Z12Publish_Datav+0xb22>
   1511c:	cd 50       	subi	r28, 0x0D	; 13
   1511e:	de 4f       	sbci	r29, 0xFE	; 254
   15120:	19 82       	std	Y+1, r1	; 0x01
   15122:	18 82       	st	Y, r1
   15124:	c3 5f       	subi	r28, 0xF3	; 243
   15126:	d1 40       	sbci	r29, 0x01	; 1
   15128:	ae 01       	movw	r20, r28
   1512a:	4d 50       	subi	r20, 0x0D	; 13
   1512c:	5e 4f       	sbci	r21, 0xFE	; 254
   1512e:	68 e5       	ldi	r22, 0x58	; 88
   15130:	71 e3       	ldi	r23, 0x31	; 49
   15132:	0d c0       	rjmp	.+26     	; 0x1514e <_Z12Publish_Datav+0xb3c>
   15134:	81 e0       	ldi	r24, 0x01	; 1
   15136:	90 e0       	ldi	r25, 0x00	; 0
   15138:	cd 50       	subi	r28, 0x0D	; 13
   1513a:	de 4f       	sbci	r29, 0xFE	; 254
   1513c:	99 83       	std	Y+1, r25	; 0x01
   1513e:	88 83       	st	Y, r24
   15140:	c3 5f       	subi	r28, 0xF3	; 243
   15142:	d1 40       	sbci	r29, 0x01	; 1
   15144:	ae 01       	movw	r20, r28
   15146:	4d 50       	subi	r20, 0x0D	; 13
   15148:	5e 4f       	sbci	r21, 0xFE	; 254
   1514a:	61 e5       	ldi	r22, 0x51	; 81
   1514c:	71 e3       	ldi	r23, 0x31	; 49
   1514e:	c8 01       	movw	r24, r16
   15150:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15154:	4c ed       	ldi	r20, 0xDC	; 220
   15156:	50 e0       	ldi	r21, 0x00	; 0
   15158:	b6 01       	movw	r22, r12
   1515a:	c8 01       	movw	r24, r16
   1515c:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15160:	eb ef       	ldi	r30, 0xFB	; 251
   15162:	fe e0       	ldi	r31, 0x0E	; 14
   15164:	8e e6       	ldi	r24, 0x6E	; 110
   15166:	df 01       	movw	r26, r30
   15168:	1d 92       	st	X+, r1
   1516a:	8a 95       	dec	r24
   1516c:	e9 f7       	brne	.-6      	; 0x15168 <_Z12Publish_Datav+0xb56>
   1516e:	87 e6       	ldi	r24, 0x67	; 103
   15170:	93 e1       	ldi	r25, 0x13	; 19
   15172:	9f 93       	push	r25
   15174:	8f 93       	push	r24
   15176:	8d e9       	ldi	r24, 0x9D	; 157
   15178:	97 e0       	ldi	r25, 0x07	; 7
   1517a:	9f 93       	push	r25
   1517c:	8f 93       	push	r24
   1517e:	ff 93       	push	r31
   15180:	ef 93       	push	r30
   15182:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   15186:	0f 90       	pop	r0
   15188:	0f 90       	pop	r0
   1518a:	0f 90       	pop	r0
   1518c:	0f 90       	pop	r0
   1518e:	0f 90       	pop	r0
   15190:	0f 90       	pop	r0
   15192:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   15196:	88 23       	and	r24, r24
   15198:	d1 f0       	breq	.+52     	; 0x151ce <_Z12Publish_Datav+0xbbc>
   1519a:	b6 01       	movw	r22, r12
   1519c:	8b ef       	ldi	r24, 0xFB	; 251
   1519e:	9e e0       	ldi	r25, 0x0E	; 14
   151a0:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   151a4:	88 23       	and	r24, r24
   151a6:	69 f0       	breq	.+26     	; 0x151c2 <_Z12Publish_Datav+0xbb0>
   151a8:	80 91 fd 13 	lds	r24, 0x13FD	; 0x8013fd <_sRuble_Parameters+0xb6>
   151ac:	bb e1       	ldi	r27, 0x1B	; 27
   151ae:	8b 9f       	mul	r24, r27
   151b0:	f0 01       	movw	r30, r0
   151b2:	11 24       	eor	r1, r1
   151b4:	ef 57       	subi	r30, 0x7F	; 127
   151b6:	f2 4f       	sbci	r31, 0xF2	; 242
   151b8:	12 8e       	std	Z+26, r1	; 0x1a
   151ba:	8f 5f       	subi	r24, 0xFF	; 255
   151bc:	0e 94 8b 79 	call	0xf316	; 0xf316 <_Z21Exra_Plot_Data_EEPROMh>
   151c0:	06 c0       	rjmp	.+12     	; 0x151ce <_Z12Publish_Datav+0xbbc>
   151c2:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   151c6:	81 50       	subi	r24, 0x01	; 1
   151c8:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   151cc:	e2 cf       	rjmp	.-60     	; 0x15192 <_Z12Publish_Datav+0xb80>
   151ce:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   151d2:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   151d6:	9f 7d       	andi	r25, 0xDF	; 223
   151d8:	5d cb       	rjmp	.-2374   	; 0x14894 <_Z12Publish_Datav+0x282>
   151da:	82 ff       	sbrs	r24, 2
   151dc:	b0 c1       	rjmp	.+864    	; 0x1553e <_Z12Publish_Datav+0xf2c>
   151de:	7e 01       	movw	r14, r28
   151e0:	e9 ee       	ldi	r30, 0xE9	; 233
   151e2:	ee 1a       	sub	r14, r30
   151e4:	ee ef       	ldi	r30, 0xFE	; 254
   151e6:	fe 0a       	sbc	r15, r30
   151e8:	8c ed       	ldi	r24, 0xDC	; 220
   151ea:	d7 01       	movw	r26, r14
   151ec:	1d 92       	st	X+, r1
   151ee:	8a 95       	dec	r24
   151f0:	e9 f7       	brne	.-6      	; 0x151ec <_Z12Publish_Datav+0xbda>
   151f2:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   151f6:	81 11       	cpse	r24, r1
   151f8:	4e c0       	rjmp	.+156    	; 0x15296 <_Z12Publish_Datav+0xc84>
   151fa:	80 91 04 14 	lds	r24, 0x1404	; 0x801404 <_sRuble_Parameters+0xbd>
   151fe:	88 23       	and	r24, r24
   15200:	09 f4       	brne	.+2      	; 0x15204 <_Z12Publish_Datav+0xbf2>
   15202:	43 c0       	rjmp	.+134    	; 0x1528a <_Z12Publish_Datav+0xc78>
   15204:	90 90 4f 13 	lds	r9, 0x134F	; 0x80134f <_sRuble_Parameters+0x8>
   15208:	a0 90 50 13 	lds	r10, 0x1350	; 0x801350 <_sRuble_Parameters+0x9>
   1520c:	b0 90 51 13 	lds	r11, 0x1351	; 0x801351 <_sRuble_Parameters+0xa>
   15210:	c0 90 52 13 	lds	r12, 0x1352	; 0x801352 <_sRuble_Parameters+0xb>
   15214:	d0 90 53 13 	lds	r13, 0x1353	; 0x801353 <_sRuble_Parameters+0xc>
   15218:	b0 91 54 13 	lds	r27, 0x1354	; 0x801354 <_sRuble_Parameters+0xd>
   1521c:	f0 91 55 13 	lds	r31, 0x1355	; 0x801355 <_sRuble_Parameters+0xe>
   15220:	e0 91 56 13 	lds	r30, 0x1356	; 0x801356 <_sRuble_Parameters+0xf>
   15224:	29 2d       	mov	r18, r9
   15226:	3a 2d       	mov	r19, r10
   15228:	4b 2d       	mov	r20, r11
   1522a:	5c 2d       	mov	r21, r12
   1522c:	6d 2d       	mov	r22, r13
   1522e:	7b 2f       	mov	r23, r27
   15230:	8f 2f       	mov	r24, r31
   15232:	9e 2f       	mov	r25, r30
   15234:	a2 e0       	ldi	r26, 0x02	; 2
   15236:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
   1523a:	81 f0       	breq	.+32     	; 0x1525c <_Z12Publish_Datav+0xc4a>
   1523c:	a4 e0       	ldi	r26, 0x04	; 4
   1523e:	cd 50       	subi	r28, 0x0D	; 13
   15240:	de 4f       	sbci	r29, 0xFE	; 254
   15242:	19 82       	std	Y+1, r1	; 0x01
   15244:	18 82       	st	Y, r1
   15246:	c3 5f       	subi	r28, 0xF3	; 243
   15248:	d1 40       	sbci	r29, 0x01	; 1
   1524a:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
   1524e:	a1 f4       	brne	.+40     	; 0x15278 <_Z12Publish_Datav+0xc66>
   15250:	ae 01       	movw	r20, r28
   15252:	4d 50       	subi	r20, 0x0D	; 13
   15254:	5e 4f       	sbci	r21, 0xFE	; 254
   15256:	69 e4       	ldi	r22, 0x49	; 73
   15258:	71 e3       	ldi	r23, 0x31	; 49
   1525a:	13 c0       	rjmp	.+38     	; 0x15282 <_Z12Publish_Datav+0xc70>
   1525c:	81 e0       	ldi	r24, 0x01	; 1
   1525e:	90 e0       	ldi	r25, 0x00	; 0
   15260:	cd 50       	subi	r28, 0x0D	; 13
   15262:	de 4f       	sbci	r29, 0xFE	; 254
   15264:	99 83       	std	Y+1, r25	; 0x01
   15266:	88 83       	st	Y, r24
   15268:	c3 5f       	subi	r28, 0xF3	; 243
   1526a:	d1 40       	sbci	r29, 0x01	; 1
   1526c:	ae 01       	movw	r20, r28
   1526e:	4d 50       	subi	r20, 0x0D	; 13
   15270:	5e 4f       	sbci	r21, 0xFE	; 254
   15272:	61 e4       	ldi	r22, 0x41	; 65
   15274:	71 e3       	ldi	r23, 0x31	; 49
   15276:	05 c0       	rjmp	.+10     	; 0x15282 <_Z12Publish_Datav+0xc70>
   15278:	ae 01       	movw	r20, r28
   1527a:	4d 50       	subi	r20, 0x0D	; 13
   1527c:	5e 4f       	sbci	r21, 0xFE	; 254
   1527e:	69 e3       	ldi	r22, 0x39	; 57
   15280:	71 e3       	ldi	r23, 0x31	; 49
   15282:	c8 01       	movw	r24, r16
   15284:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15288:	21 c0       	rjmp	.+66     	; 0x152cc <_Z12Publish_Datav+0xcba>
   1528a:	8a e0       	ldi	r24, 0x0A	; 10
   1528c:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   15290:	89 2b       	or	r24, r25
   15292:	71 f4       	brne	.+28     	; 0x152b0 <_Z12Publish_Datav+0xc9e>
   15294:	04 c0       	rjmp	.+8      	; 0x1529e <_Z12Publish_Datav+0xc8c>
   15296:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xc0>
   1529a:	81 30       	cpi	r24, 0x01	; 1
   1529c:	49 f4       	brne	.+18     	; 0x152b0 <_Z12Publish_Datav+0xc9e>
   1529e:	81 e0       	ldi	r24, 0x01	; 1
   152a0:	90 e0       	ldi	r25, 0x00	; 0
   152a2:	cd 50       	subi	r28, 0x0D	; 13
   152a4:	de 4f       	sbci	r29, 0xFE	; 254
   152a6:	99 83       	std	Y+1, r25	; 0x01
   152a8:	88 83       	st	Y, r24
   152aa:	c3 5f       	subi	r28, 0xF3	; 243
   152ac:	d1 40       	sbci	r29, 0x01	; 1
   152ae:	06 c0       	rjmp	.+12     	; 0x152bc <_Z12Publish_Datav+0xcaa>
   152b0:	cd 50       	subi	r28, 0x0D	; 13
   152b2:	de 4f       	sbci	r29, 0xFE	; 254
   152b4:	19 82       	std	Y+1, r1	; 0x01
   152b6:	18 82       	st	Y, r1
   152b8:	c3 5f       	subi	r28, 0xF3	; 243
   152ba:	d1 40       	sbci	r29, 0x01	; 1
   152bc:	ae 01       	movw	r20, r28
   152be:	4d 50       	subi	r20, 0x0D	; 13
   152c0:	5e 4f       	sbci	r21, 0xFE	; 254
   152c2:	65 e9       	ldi	r22, 0x95	; 149
   152c4:	77 e0       	ldi	r23, 0x07	; 7
   152c6:	c8 01       	movw	r24, r16
   152c8:	0e 94 7c 8a 	call	0x114f8	; 0x114f8 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   152cc:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   152d0:	cd 50       	subi	r28, 0x0D	; 13
   152d2:	de 4f       	sbci	r29, 0xFE	; 254
   152d4:	88 83       	st	Y, r24
   152d6:	c3 5f       	subi	r28, 0xF3	; 243
   152d8:	d1 40       	sbci	r29, 0x01	; 1
   152da:	ae 01       	movw	r20, r28
   152dc:	4d 50       	subi	r20, 0x0D	; 13
   152de:	5e 4f       	sbci	r21, 0xFE	; 254
   152e0:	64 e3       	ldi	r22, 0x34	; 52
   152e2:	71 e3       	ldi	r23, 0x31	; 49
   152e4:	c8 01       	movw	r24, r16
   152e6:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   152ea:	61 e2       	ldi	r22, 0x21	; 33
   152ec:	71 e3       	ldi	r23, 0x31	; 49
   152ee:	c8 01       	movw	r24, r16
   152f0:	0e 94 fb 88 	call	0x111f6	; 0x111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   152f4:	6c 01       	movw	r12, r24
   152f6:	89 2b       	or	r24, r25
   152f8:	91 f4       	brne	.+36     	; 0x1531e <_Z12Publish_Datav+0xd0c>
   152fa:	c8 01       	movw	r24, r16
   152fc:	0e 94 1f 89 	call	0x1123e	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   15300:	6c 01       	movw	r12, r24
   15302:	00 97       	sbiw	r24, 0x00	; 0
   15304:	d9 f0       	breq	.+54     	; 0x1533c <_Z12Publish_Datav+0xd2a>
   15306:	41 e2       	ldi	r20, 0x21	; 33
   15308:	51 e3       	ldi	r21, 0x31	; 49
   1530a:	bc 01       	movw	r22, r24
   1530c:	6e 5f       	subi	r22, 0xFE	; 254
   1530e:	7f 4f       	sbci	r23, 0xFF	; 255
   15310:	f8 01       	movw	r30, r16
   15312:	80 81       	ld	r24, Z
   15314:	91 81       	ldd	r25, Z+1	; 0x01
   15316:	0e 94 40 89 	call	0x11280	; 0x11280 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   1531a:	88 23       	and	r24, r24
   1531c:	79 f0       	breq	.+30     	; 0x1533c <_Z12Publish_Datav+0xd2a>
   1531e:	80 91 41 13 	lds	r24, 0x1341	; 0x801341 <_sPump_Parameter+0x4>
   15322:	90 91 42 13 	lds	r25, 0x1342	; 0x801342 <_sPump_Parameter+0x5>
   15326:	a0 91 43 13 	lds	r26, 0x1343	; 0x801343 <_sPump_Parameter+0x6>
   1532a:	b0 91 44 13 	lds	r27, 0x1344	; 0x801344 <_sPump_Parameter+0x7>
   1532e:	28 e0       	ldi	r18, 0x08	; 8
   15330:	f6 01       	movw	r30, r12
   15332:	24 83       	std	Z+4, r18	; 0x04
   15334:	85 83       	std	Z+5, r24	; 0x05
   15336:	96 83       	std	Z+6, r25	; 0x06
   15338:	a7 83       	std	Z+7, r26	; 0x07
   1533a:	b0 87       	std	Z+8, r27	; 0x08
   1533c:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   15340:	82 30       	cpi	r24, 0x02	; 2
   15342:	41 f0       	breq	.+16     	; 0x15354 <_Z12Publish_Datav+0xd42>
   15344:	42 ea       	ldi	r20, 0xA2	; 162
   15346:	53 e1       	ldi	r21, 0x13	; 19
   15348:	6c e1       	ldi	r22, 0x1C	; 28
   1534a:	71 e3       	ldi	r23, 0x31	; 49
   1534c:	c8 01       	movw	r24, r16
   1534e:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15352:	0e c0       	rjmp	.+28     	; 0x15370 <_Z12Publish_Datav+0xd5e>
   15354:	cd 50       	subi	r28, 0x0D	; 13
   15356:	de 4f       	sbci	r29, 0xFE	; 254
   15358:	19 82       	std	Y+1, r1	; 0x01
   1535a:	18 82       	st	Y, r1
   1535c:	c3 5f       	subi	r28, 0xF3	; 243
   1535e:	d1 40       	sbci	r29, 0x01	; 1
   15360:	ae 01       	movw	r20, r28
   15362:	4d 50       	subi	r20, 0x0D	; 13
   15364:	5e 4f       	sbci	r21, 0xFE	; 254
   15366:	67 e1       	ldi	r22, 0x17	; 23
   15368:	71 e3       	ldi	r23, 0x31	; 49
   1536a:	c8 01       	movw	r24, r16
   1536c:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15370:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   15374:	85 30       	cpi	r24, 0x05	; 5
   15376:	09 f0       	breq	.+2      	; 0x1537a <_Z12Publish_Datav+0xd68>
   15378:	67 c0       	rjmp	.+206    	; 0x15448 <_Z12Publish_Datav+0xe36>
   1537a:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   1537e:	88 23       	and	r24, r24
   15380:	09 f4       	brne	.+2      	; 0x15384 <_Z12Publish_Datav+0xd72>
   15382:	48 c0       	rjmp	.+144    	; 0x15414 <_Z12Publish_Datav+0xe02>
   15384:	6e e0       	ldi	r22, 0x0E	; 14
   15386:	71 e3       	ldi	r23, 0x31	; 49
   15388:	c8 01       	movw	r24, r16
   1538a:	0e 94 fb 88 	call	0x111f6	; 0x111f6 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   1538e:	6c 01       	movw	r12, r24
   15390:	89 2b       	or	r24, r25
   15392:	91 f4       	brne	.+36     	; 0x153b8 <_Z12Publish_Datav+0xda6>
   15394:	c8 01       	movw	r24, r16
   15396:	0e 94 1f 89 	call	0x1123e	; 0x1123e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1539a:	6c 01       	movw	r12, r24
   1539c:	00 97       	sbiw	r24, 0x00	; 0
   1539e:	c1 f0       	breq	.+48     	; 0x153d0 <_Z12Publish_Datav+0xdbe>
   153a0:	4e e0       	ldi	r20, 0x0E	; 14
   153a2:	51 e3       	ldi	r21, 0x31	; 49
   153a4:	bc 01       	movw	r22, r24
   153a6:	6e 5f       	subi	r22, 0xFE	; 254
   153a8:	7f 4f       	sbci	r23, 0xFF	; 255
   153aa:	d8 01       	movw	r26, r16
   153ac:	8d 91       	ld	r24, X+
   153ae:	9c 91       	ld	r25, X
   153b0:	0e 94 40 89 	call	0x11280	; 0x11280 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   153b4:	88 23       	and	r24, r24
   153b6:	61 f0       	breq	.+24     	; 0x153d0 <_Z12Publish_Datav+0xdbe>
   153b8:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_sSchedules+0x3>
   153bc:	94 e0       	ldi	r25, 0x04	; 4
   153be:	f6 01       	movw	r30, r12
   153c0:	94 83       	std	Z+4, r25	; 0x04
   153c2:	90 e0       	ldi	r25, 0x00	; 0
   153c4:	a0 e0       	ldi	r26, 0x00	; 0
   153c6:	b0 e0       	ldi	r27, 0x00	; 0
   153c8:	85 83       	std	Z+5, r24	; 0x05
   153ca:	96 83       	std	Z+6, r25	; 0x06
   153cc:	a7 83       	std	Z+7, r26	; 0x07
   153ce:	b0 87       	std	Z+8, r27	; 0x08
   153d0:	e0 91 21 09 	lds	r30, 0x0921	; 0x800921 <_sSchedules+0x3>
   153d4:	f0 e0       	ldi	r31, 0x00	; 0
   153d6:	ee 0f       	add	r30, r30
   153d8:	ff 1f       	adc	r31, r31
   153da:	e4 5e       	subi	r30, 0xE4	; 228
   153dc:	f6 4f       	sbci	r31, 0xF6	; 246
   153de:	87 8d       	ldd	r24, Z+31	; 0x1f
   153e0:	90 a1       	ldd	r25, Z+32	; 0x20
   153e2:	20 91 26 09 	lds	r18, 0x0926	; 0x800926 <_sSchedules+0x8>
   153e6:	30 91 27 09 	lds	r19, 0x0927	; 0x800927 <_sSchedules+0x9>
   153ea:	82 1b       	sub	r24, r18
   153ec:	93 0b       	sbc	r25, r19
   153ee:	6c e3       	ldi	r22, 0x3C	; 60
   153f0:	70 e0       	ldi	r23, 0x00	; 0
   153f2:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   153f6:	cd 50       	subi	r28, 0x0D	; 13
   153f8:	de 4f       	sbci	r29, 0xFE	; 254
   153fa:	79 83       	std	Y+1, r23	; 0x01
   153fc:	68 83       	st	Y, r22
   153fe:	c3 5f       	subi	r28, 0xF3	; 243
   15400:	d1 40       	sbci	r29, 0x01	; 1
   15402:	ae 01       	movw	r20, r28
   15404:	4d 50       	subi	r20, 0x0D	; 13
   15406:	5e 4f       	sbci	r21, 0xFE	; 254
   15408:	6f ef       	ldi	r22, 0xFF	; 255
   1540a:	70 e3       	ldi	r23, 0x30	; 48
   1540c:	c8 01       	movw	r24, r16
   1540e:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15412:	36 c0       	rjmp	.+108    	; 0x15480 <_Z12Publish_Datav+0xe6e>
   15414:	cd 50       	subi	r28, 0x0D	; 13
   15416:	de 4f       	sbci	r29, 0xFE	; 254
   15418:	19 82       	std	Y+1, r1	; 0x01
   1541a:	18 82       	st	Y, r1
   1541c:	c3 5f       	subi	r28, 0xF3	; 243
   1541e:	d1 40       	sbci	r29, 0x01	; 1
   15420:	ae 01       	movw	r20, r28
   15422:	4d 50       	subi	r20, 0x0D	; 13
   15424:	5e 4f       	sbci	r21, 0xFE	; 254
   15426:	66 ef       	ldi	r22, 0xF6	; 246
   15428:	70 e3       	ldi	r23, 0x30	; 48
   1542a:	c8 01       	movw	r24, r16
   1542c:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15430:	cd 50       	subi	r28, 0x0D	; 13
   15432:	de 4f       	sbci	r29, 0xFE	; 254
   15434:	19 82       	std	Y+1, r1	; 0x01
   15436:	18 82       	st	Y, r1
   15438:	c3 5f       	subi	r28, 0xF3	; 243
   1543a:	d1 40       	sbci	r29, 0x01	; 1
   1543c:	ae 01       	movw	r20, r28
   1543e:	4d 50       	subi	r20, 0x0D	; 13
   15440:	5e 4f       	sbci	r21, 0xFE	; 254
   15442:	67 ee       	ldi	r22, 0xE7	; 231
   15444:	70 e3       	ldi	r23, 0x30	; 48
   15446:	19 c0       	rjmp	.+50     	; 0x1547a <_Z12Publish_Datav+0xe68>
   15448:	cd 50       	subi	r28, 0x0D	; 13
   1544a:	de 4f       	sbci	r29, 0xFE	; 254
   1544c:	19 82       	std	Y+1, r1	; 0x01
   1544e:	18 82       	st	Y, r1
   15450:	c3 5f       	subi	r28, 0xF3	; 243
   15452:	d1 40       	sbci	r29, 0x01	; 1
   15454:	ae 01       	movw	r20, r28
   15456:	4d 50       	subi	r20, 0x0D	; 13
   15458:	5e 4f       	sbci	r21, 0xFE	; 254
   1545a:	6e ed       	ldi	r22, 0xDE	; 222
   1545c:	70 e3       	ldi	r23, 0x30	; 48
   1545e:	c8 01       	movw	r24, r16
   15460:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15464:	cd 50       	subi	r28, 0x0D	; 13
   15466:	de 4f       	sbci	r29, 0xFE	; 254
   15468:	19 82       	std	Y+1, r1	; 0x01
   1546a:	18 82       	st	Y, r1
   1546c:	c3 5f       	subi	r28, 0xF3	; 243
   1546e:	d1 40       	sbci	r29, 0x01	; 1
   15470:	ae 01       	movw	r20, r28
   15472:	4d 50       	subi	r20, 0x0D	; 13
   15474:	5e 4f       	sbci	r21, 0xFE	; 254
   15476:	6f ec       	ldi	r22, 0xCF	; 207
   15478:	70 e3       	ldi	r23, 0x30	; 48
   1547a:	c8 01       	movw	r24, r16
   1547c:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15480:	43 e2       	ldi	r20, 0x23	; 35
   15482:	54 e1       	ldi	r21, 0x14	; 20
   15484:	66 ec       	ldi	r22, 0xC6	; 198
   15486:	70 e3       	ldi	r23, 0x30	; 48
   15488:	c8 01       	movw	r24, r16
   1548a:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1548e:	4b ef       	ldi	r20, 0xFB	; 251
   15490:	53 e1       	ldi	r21, 0x13	; 19
   15492:	6a eb       	ldi	r22, 0xBA	; 186
   15494:	70 e3       	ldi	r23, 0x30	; 48
   15496:	c8 01       	movw	r24, r16
   15498:	0e 94 1f 8a 	call	0x1143e	; 0x1143e <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   1549c:	4c ed       	ldi	r20, 0xDC	; 220
   1549e:	50 e0       	ldi	r21, 0x00	; 0
   154a0:	b7 01       	movw	r22, r14
   154a2:	c8 01       	movw	r24, r16
   154a4:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   154a8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   154ac:	81 30       	cpi	r24, 0x01	; 1
   154ae:	31 f4       	brne	.+12     	; 0x154bc <_Z12Publish_Datav+0xeaa>
   154b0:	69 e6       	ldi	r22, 0x69	; 105
   154b2:	7f e0       	ldi	r23, 0x0F	; 15
   154b4:	82 e5       	ldi	r24, 0x52	; 82
   154b6:	94 e1       	ldi	r25, 0x14	; 20
   154b8:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   154bc:	80 91 7b 0d 	lds	r24, 0x0D7B	; 0x800d7b <_ZZ12Publish_DatavE26ruble_data_success_counter>
   154c0:	8f 5f       	subi	r24, 0xFF	; 255
   154c2:	80 93 7b 0d 	sts	0x0D7B, r24	; 0x800d7b <_ZZ12Publish_DatavE26ruble_data_success_counter>
   154c6:	eb ef       	ldi	r30, 0xFB	; 251
   154c8:	fe e0       	ldi	r31, 0x0E	; 14
   154ca:	8e e6       	ldi	r24, 0x6E	; 110
   154cc:	df 01       	movw	r26, r30
   154ce:	1d 92       	st	X+, r1
   154d0:	8a 95       	dec	r24
   154d2:	e9 f7       	brne	.-6      	; 0x154ce <_Z12Publish_Datav+0xebc>
   154d4:	87 e6       	ldi	r24, 0x67	; 103
   154d6:	93 e1       	ldi	r25, 0x13	; 19
   154d8:	9f 93       	push	r25
   154da:	8f 93       	push	r24
   154dc:	86 eb       	ldi	r24, 0xB6	; 182
   154de:	97 e0       	ldi	r25, 0x07	; 7
   154e0:	9f 93       	push	r25
   154e2:	8f 93       	push	r24
   154e4:	ff 93       	push	r31
   154e6:	ef 93       	push	r30
   154e8:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   154ec:	0f 90       	pop	r0
   154ee:	0f 90       	pop	r0
   154f0:	0f 90       	pop	r0
   154f2:	0f 90       	pop	r0
   154f4:	0f 90       	pop	r0
   154f6:	0f 90       	pop	r0
   154f8:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   154fc:	88 23       	and	r24, r24
   154fe:	81 f0       	breq	.+32     	; 0x15520 <_Z12Publish_Datav+0xf0e>
   15500:	b7 01       	movw	r22, r14
   15502:	8b ef       	ldi	r24, 0xFB	; 251
   15504:	9e e0       	ldi	r25, 0x0E	; 14
   15506:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   1550a:	88 23       	and	r24, r24
   1550c:	19 f0       	breq	.+6      	; 0x15514 <_Z12Publish_Datav+0xf02>
   1550e:	10 92 7b 0d 	sts	0x0D7B, r1	; 0x800d7b <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15512:	06 c0       	rjmp	.+12     	; 0x15520 <_Z12Publish_Datav+0xf0e>
   15514:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   15518:	81 50       	subi	r24, 0x01	; 1
   1551a:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   1551e:	ec cf       	rjmp	.-40     	; 0x154f8 <_Z12Publish_Datav+0xee6>
   15520:	80 91 7b 0d 	lds	r24, 0x0D7B	; 0x800d7b <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15524:	84 30       	cpi	r24, 0x04	; 4
   15526:	28 f0       	brcs	.+10     	; 0x15532 <_Z12Publish_Datav+0xf20>
   15528:	82 e0       	ldi	r24, 0x02	; 2
   1552a:	80 93 a4 13 	sts	0x13A4, r24	; 0x8013a4 <_sRuble_Parameters+0x5d>
   1552e:	0e 94 95 7f 	call	0xff2a	; 0xff2a <_Z14Ping_to_Serverv>
   15532:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   15536:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1553a:	8b 7f       	andi	r24, 0xFB	; 251
   1553c:	ab c9       	rjmp	.-3242   	; 0x14894 <_Z12Publish_Datav+0x282>
   1553e:	80 91 79 0d 	lds	r24, 0x0D79	; 0x800d79 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   15542:	90 91 7a 0d 	lds	r25, 0x0D7A	; 0x800d7a <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15546:	00 97       	sbiw	r24, 0x00	; 0
   15548:	09 f0       	breq	.+2      	; 0x1554c <_Z12Publish_Datav+0xf3a>
   1554a:	42 c2       	rjmp	.+1156   	; 0x159d0 <_Z12Publish_Datav+0x13be>
   1554c:	31 e8       	ldi	r19, 0x81	; 129
   1554e:	c3 2e       	mov	r12, r19
   15550:	3d e0       	ldi	r19, 0x0D	; 13
   15552:	d3 2e       	mov	r13, r19
   15554:	e1 2c       	mov	r14, r1
   15556:	f1 2c       	mov	r15, r1
   15558:	7e 2c       	mov	r7, r14
   1555a:	f6 01       	movw	r30, r12
   1555c:	81 81       	ldd	r24, Z+1	; 0x01
   1555e:	85 36       	cpi	r24, 0x65	; 101
   15560:	08 f4       	brcc	.+2      	; 0x15564 <_Z12Publish_Datav+0xf52>
   15562:	2a c2       	rjmp	.+1108   	; 0x159b8 <_Z12Publish_Datav+0x13a6>
   15564:	62 8d       	ldd	r22, Z+26	; 0x1a
   15566:	66 23       	and	r22, r22
   15568:	09 f4       	brne	.+2      	; 0x1556c <_Z12Publish_Datav+0xf5a>
   1556a:	26 c2       	rjmp	.+1100   	; 0x159b8 <_Z12Publish_Datav+0x13a6>
   1556c:	4a e0       	ldi	r20, 0x0A	; 10
   1556e:	50 e0       	ldi	r21, 0x00	; 0
   15570:	82 e5       	ldi	r24, 0x52	; 82
   15572:	94 e1       	ldi	r25, 0x14	; 20
   15574:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   15578:	d6 01       	movw	r26, r12
   1557a:	5a 96       	adiw	r26, 0x1a	; 26
   1557c:	8c 91       	ld	r24, X
   1557e:	81 30       	cpi	r24, 0x01	; 1
   15580:	09 f4       	brne	.+2      	; 0x15584 <_Z12Publish_Datav+0xf72>
   15582:	f8 c0       	rjmp	.+496    	; 0x15774 <_Z12Publish_Datav+0x1162>
   15584:	82 30       	cpi	r24, 0x02	; 2
   15586:	09 f0       	breq	.+2      	; 0x1558a <_Z12Publish_Datav+0xf78>
   15588:	17 c2       	rjmp	.+1070   	; 0x159b8 <_Z12Publish_Datav+0x13a6>
   1558a:	6e 01       	movw	r12, r28
   1558c:	b9 ee       	ldi	r27, 0xE9	; 233
   1558e:	cb 1a       	sub	r12, r27
   15590:	be ef       	ldi	r27, 0xFE	; 254
   15592:	db 0a       	sbc	r13, r27
   15594:	8c ed       	ldi	r24, 0xDC	; 220
   15596:	f6 01       	movw	r30, r12
   15598:	11 92       	st	Z+, r1
   1559a:	8a 95       	dec	r24
   1559c:	e9 f7       	brne	.-6      	; 0x15598 <_Z12Publish_Datav+0xf86>
   1559e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   155a2:	81 30       	cpi	r24, 0x01	; 1
   155a4:	51 f4       	brne	.+20     	; 0x155ba <_Z12Publish_Datav+0xfa8>
   155a6:	6f e9       	ldi	r22, 0x9F	; 159
   155a8:	70 e3       	ldi	r23, 0x30	; 48
   155aa:	82 e5       	ldi	r24, 0x52	; 82
   155ac:	94 e1       	ldi	r25, 0x14	; 20
   155ae:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   155b2:	82 e5       	ldi	r24, 0x52	; 82
   155b4:	94 e1       	ldi	r25, 0x14	; 20
   155b6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   155ba:	c7 01       	movw	r24, r14
   155bc:	8b 59       	subi	r24, 0x9B	; 155
   155be:	9f 4f       	sbci	r25, 0xFF	; 255
   155c0:	cd 50       	subi	r28, 0x0D	; 13
   155c2:	de 4f       	sbci	r29, 0xFE	; 254
   155c4:	99 83       	std	Y+1, r25	; 0x01
   155c6:	88 83       	st	Y, r24
   155c8:	c3 5f       	subi	r28, 0xF3	; 243
   155ca:	d1 40       	sbci	r29, 0x01	; 1
   155cc:	ae 01       	movw	r20, r28
   155ce:	4d 50       	subi	r20, 0x0D	; 13
   155d0:	5e 4f       	sbci	r21, 0xFE	; 254
   155d2:	6b e9       	ldi	r22, 0x9B	; 155
   155d4:	70 e3       	ldi	r23, 0x30	; 48
   155d6:	c8 01       	movw	r24, r16
   155d8:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   155dc:	8b e1       	ldi	r24, 0x1B	; 27
   155de:	8e 9d       	mul	r24, r14
   155e0:	f0 01       	movw	r30, r0
   155e2:	8f 9d       	mul	r24, r15
   155e4:	f0 0d       	add	r31, r0
   155e6:	11 24       	eor	r1, r1
   155e8:	ef 57       	subi	r30, 0x7F	; 127
   155ea:	f2 4f       	sbci	r31, 0xF2	; 242
   155ec:	82 81       	ldd	r24, Z+2	; 0x02
   155ee:	81 30       	cpi	r24, 0x01	; 1
   155f0:	79 f4       	brne	.+30     	; 0x15610 <_Z12Publish_Datav+0xffe>
   155f2:	81 8d       	ldd	r24, Z+25	; 0x19
   155f4:	81 11       	cpse	r24, r1
   155f6:	0c c0       	rjmp	.+24     	; 0x15610 <_Z12Publish_Datav+0xffe>
   155f8:	cd 50       	subi	r28, 0x0D	; 13
   155fa:	de 4f       	sbci	r29, 0xFE	; 254
   155fc:	19 82       	std	Y+1, r1	; 0x01
   155fe:	18 82       	st	Y, r1
   15600:	c3 5f       	subi	r28, 0xF3	; 243
   15602:	d1 40       	sbci	r29, 0x01	; 1
   15604:	ae 01       	movw	r20, r28
   15606:	4d 50       	subi	r20, 0x0D	; 13
   15608:	5e 4f       	sbci	r21, 0xFE	; 254
   1560a:	64 e9       	ldi	r22, 0x94	; 148
   1560c:	70 e3       	ldi	r23, 0x30	; 48
   1560e:	0d c0       	rjmp	.+26     	; 0x1562a <_Z12Publish_Datav+0x1018>
   15610:	81 e0       	ldi	r24, 0x01	; 1
   15612:	90 e0       	ldi	r25, 0x00	; 0
   15614:	cd 50       	subi	r28, 0x0D	; 13
   15616:	de 4f       	sbci	r29, 0xFE	; 254
   15618:	99 83       	std	Y+1, r25	; 0x01
   1561a:	88 83       	st	Y, r24
   1561c:	c3 5f       	subi	r28, 0xF3	; 243
   1561e:	d1 40       	sbci	r29, 0x01	; 1
   15620:	ae 01       	movw	r20, r28
   15622:	4d 50       	subi	r20, 0x0D	; 13
   15624:	5e 4f       	sbci	r21, 0xFE	; 254
   15626:	6d e8       	ldi	r22, 0x8D	; 141
   15628:	70 e3       	ldi	r23, 0x30	; 48
   1562a:	c8 01       	movw	r24, r16
   1562c:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15630:	8e ef       	ldi	r24, 0xFE	; 254
   15632:	87 0d       	add	r24, r7
   15634:	88 30       	cpi	r24, 0x08	; 8
   15636:	08 f4       	brcc	.+2      	; 0x1563a <_Z12Publish_Datav+0x1028>
   15638:	64 c0       	rjmp	.+200    	; 0x15702 <_Z12Publish_Datav+0x10f0>
   1563a:	8b e1       	ldi	r24, 0x1B	; 27
   1563c:	8e 9d       	mul	r24, r14
   1563e:	f0 01       	movw	r30, r0
   15640:	8f 9d       	mul	r24, r15
   15642:	f0 0d       	add	r31, r0
   15644:	11 24       	eor	r1, r1
   15646:	ef 57       	subi	r30, 0x7F	; 127
   15648:	f2 4f       	sbci	r31, 0xF2	; 242
   1564a:	82 81       	ldd	r24, Z+2	; 0x02
   1564c:	85 30       	cpi	r24, 0x05	; 5
   1564e:	71 f4       	brne	.+28     	; 0x1566c <_Z12Publish_Datav+0x105a>
   15650:	cd 50       	subi	r28, 0x0D	; 13
   15652:	de 4f       	sbci	r29, 0xFE	; 254
   15654:	19 82       	std	Y+1, r1	; 0x01
   15656:	18 82       	st	Y, r1
   15658:	c3 5f       	subi	r28, 0xF3	; 243
   1565a:	d1 40       	sbci	r29, 0x01	; 1
   1565c:	ae 01       	movw	r20, r28
   1565e:	4d 50       	subi	r20, 0x0D	; 13
   15660:	5e 4f       	sbci	r21, 0xFE	; 254
   15662:	66 e8       	ldi	r22, 0x86	; 134
   15664:	70 e3       	ldi	r23, 0x30	; 48
   15666:	c8 01       	movw	r24, r16
   15668:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1566c:	8b e1       	ldi	r24, 0x1B	; 27
   1566e:	8e 9d       	mul	r24, r14
   15670:	f0 01       	movw	r30, r0
   15672:	8f 9d       	mul	r24, r15
   15674:	f0 0d       	add	r31, r0
   15676:	11 24       	eor	r1, r1
   15678:	ef 57       	subi	r30, 0x7F	; 127
   1567a:	f2 4f       	sbci	r31, 0xF2	; 242
   1567c:	82 81       	ldd	r24, Z+2	; 0x02
   1567e:	84 30       	cpi	r24, 0x04	; 4
   15680:	81 f4       	brne	.+32     	; 0x156a2 <_Z12Publish_Datav+0x1090>
   15682:	81 e0       	ldi	r24, 0x01	; 1
   15684:	90 e0       	ldi	r25, 0x00	; 0
   15686:	cd 50       	subi	r28, 0x0D	; 13
   15688:	de 4f       	sbci	r29, 0xFE	; 254
   1568a:	99 83       	std	Y+1, r25	; 0x01
   1568c:	88 83       	st	Y, r24
   1568e:	c3 5f       	subi	r28, 0xF3	; 243
   15690:	d1 40       	sbci	r29, 0x01	; 1
   15692:	ae 01       	movw	r20, r28
   15694:	4d 50       	subi	r20, 0x0D	; 13
   15696:	5e 4f       	sbci	r21, 0xFE	; 254
   15698:	6f e7       	ldi	r22, 0x7F	; 127
   1569a:	70 e3       	ldi	r23, 0x30	; 48
   1569c:	c8 01       	movw	r24, r16
   1569e:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   156a2:	f1 e0       	ldi	r31, 0x01	; 1
   156a4:	7f 12       	cpse	r7, r31
   156a6:	2d c0       	rjmp	.+90     	; 0x15702 <_Z12Publish_Datav+0x10f0>
   156a8:	8b e1       	ldi	r24, 0x1B	; 27
   156aa:	8e 9d       	mul	r24, r14
   156ac:	f0 01       	movw	r30, r0
   156ae:	8f 9d       	mul	r24, r15
   156b0:	f0 0d       	add	r31, r0
   156b2:	11 24       	eor	r1, r1
   156b4:	ef 57       	subi	r30, 0x7F	; 127
   156b6:	f2 4f       	sbci	r31, 0xF2	; 242
   156b8:	e5 81       	ldd	r30, Z+5	; 0x05
   156ba:	f0 e0       	ldi	r31, 0x00	; 0
   156bc:	ef 53       	subi	r30, 0x3F	; 63
   156be:	fc 4e       	sbci	r31, 0xEC	; 236
   156c0:	80 81       	ld	r24, Z
   156c2:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   156c6:	89 2b       	or	r24, r25
   156c8:	61 f0       	breq	.+24     	; 0x156e2 <_Z12Publish_Datav+0x10d0>
   156ca:	cd 50       	subi	r28, 0x0D	; 13
   156cc:	de 4f       	sbci	r29, 0xFE	; 254
   156ce:	19 82       	std	Y+1, r1	; 0x01
   156d0:	18 82       	st	Y, r1
   156d2:	c3 5f       	subi	r28, 0xF3	; 243
   156d4:	d1 40       	sbci	r29, 0x01	; 1
   156d6:	ae 01       	movw	r20, r28
   156d8:	4d 50       	subi	r20, 0x0D	; 13
   156da:	5e 4f       	sbci	r21, 0xFE	; 254
   156dc:	68 e7       	ldi	r22, 0x78	; 120
   156de:	70 e3       	ldi	r23, 0x30	; 48
   156e0:	0d c0       	rjmp	.+26     	; 0x156fc <_Z12Publish_Datav+0x10ea>
   156e2:	81 e0       	ldi	r24, 0x01	; 1
   156e4:	90 e0       	ldi	r25, 0x00	; 0
   156e6:	cd 50       	subi	r28, 0x0D	; 13
   156e8:	de 4f       	sbci	r29, 0xFE	; 254
   156ea:	99 83       	std	Y+1, r25	; 0x01
   156ec:	88 83       	st	Y, r24
   156ee:	c3 5f       	subi	r28, 0xF3	; 243
   156f0:	d1 40       	sbci	r29, 0x01	; 1
   156f2:	ae 01       	movw	r20, r28
   156f4:	4d 50       	subi	r20, 0x0D	; 13
   156f6:	5e 4f       	sbci	r21, 0xFE	; 254
   156f8:	61 e7       	ldi	r22, 0x71	; 113
   156fa:	70 e3       	ldi	r23, 0x30	; 48
   156fc:	c8 01       	movw	r24, r16
   156fe:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15702:	4c ed       	ldi	r20, 0xDC	; 220
   15704:	50 e0       	ldi	r21, 0x00	; 0
   15706:	b6 01       	movw	r22, r12
   15708:	c8 01       	movw	r24, r16
   1570a:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   1570e:	0b ef       	ldi	r16, 0xFB	; 251
   15710:	1e e0       	ldi	r17, 0x0E	; 14
   15712:	8e e6       	ldi	r24, 0x6E	; 110
   15714:	68 2e       	mov	r6, r24
   15716:	97 e6       	ldi	r25, 0x67	; 103
   15718:	a9 2e       	mov	r10, r25
   1571a:	93 e1       	ldi	r25, 0x13	; 19
   1571c:	b9 2e       	mov	r11, r25
   1571e:	2d e9       	ldi	r18, 0x9D	; 157
   15720:	82 2e       	mov	r8, r18
   15722:	27 e0       	ldi	r18, 0x07	; 7
   15724:	92 2e       	mov	r9, r18
   15726:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   1572a:	88 23       	and	r24, r24
   1572c:	01 f1       	breq	.+64     	; 0x1576e <_Z12Publish_Datav+0x115c>
   1572e:	d8 01       	movw	r26, r16
   15730:	e6 2d       	mov	r30, r6
   15732:	1d 92       	st	X+, r1
   15734:	ea 95       	dec	r30
   15736:	e9 f7       	brne	.-6      	; 0x15732 <_Z12Publish_Datav+0x1120>
   15738:	bf 92       	push	r11
   1573a:	af 92       	push	r10
   1573c:	9f 92       	push	r9
   1573e:	8f 92       	push	r8
   15740:	1f 93       	push	r17
   15742:	0f 93       	push	r16
   15744:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   15748:	b6 01       	movw	r22, r12
   1574a:	8b ef       	ldi	r24, 0xFB	; 251
   1574c:	9e e0       	ldi	r25, 0x0E	; 14
   1574e:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   15752:	0f 90       	pop	r0
   15754:	0f 90       	pop	r0
   15756:	0f 90       	pop	r0
   15758:	0f 90       	pop	r0
   1575a:	0f 90       	pop	r0
   1575c:	0f 90       	pop	r0
   1575e:	81 11       	cpse	r24, r1
   15760:	13 c1       	rjmp	.+550    	; 0x15988 <_Z12Publish_Datav+0x1376>
   15762:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   15766:	81 50       	subi	r24, 0x01	; 1
   15768:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   1576c:	dc cf       	rjmp	.-72     	; 0x15726 <_Z12Publish_Datav+0x1114>
   1576e:	8c e3       	ldi	r24, 0x3C	; 60
   15770:	90 e0       	ldi	r25, 0x00	; 0
   15772:	2f c1       	rjmp	.+606    	; 0x159d2 <_Z12Publish_Datav+0x13c0>
   15774:	6e 01       	movw	r12, r28
   15776:	f9 ee       	ldi	r31, 0xE9	; 233
   15778:	cf 1a       	sub	r12, r31
   1577a:	fe ef       	ldi	r31, 0xFE	; 254
   1577c:	df 0a       	sbc	r13, r31
   1577e:	8c ed       	ldi	r24, 0xDC	; 220
   15780:	d6 01       	movw	r26, r12
   15782:	1d 92       	st	X+, r1
   15784:	8a 95       	dec	r24
   15786:	e9 f7       	brne	.-6      	; 0x15782 <_Z12Publish_Datav+0x1170>
   15788:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1578c:	81 30       	cpi	r24, 0x01	; 1
   1578e:	51 f4       	brne	.+20     	; 0x157a4 <_Z12Publish_Datav+0x1192>
   15790:	65 e5       	ldi	r22, 0x55	; 85
   15792:	70 e3       	ldi	r23, 0x30	; 48
   15794:	82 e5       	ldi	r24, 0x52	; 82
   15796:	94 e1       	ldi	r25, 0x14	; 20
   15798:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1579c:	82 e5       	ldi	r24, 0x52	; 82
   1579e:	94 e1       	ldi	r25, 0x14	; 20
   157a0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   157a4:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   157a8:	81 11       	cpse	r24, r1
   157aa:	4e c0       	rjmp	.+156    	; 0x15848 <_Z12Publish_Datav+0x1236>
   157ac:	80 91 04 14 	lds	r24, 0x1404	; 0x801404 <_sRuble_Parameters+0xbd>
   157b0:	88 23       	and	r24, r24
   157b2:	09 f4       	brne	.+2      	; 0x157b6 <_Z12Publish_Datav+0x11a4>
   157b4:	43 c0       	rjmp	.+134    	; 0x1583c <_Z12Publish_Datav+0x122a>
   157b6:	60 90 4f 13 	lds	r6, 0x134F	; 0x80134f <_sRuble_Parameters+0x8>
   157ba:	80 90 50 13 	lds	r8, 0x1350	; 0x801350 <_sRuble_Parameters+0x9>
   157be:	90 90 51 13 	lds	r9, 0x1351	; 0x801351 <_sRuble_Parameters+0xa>
   157c2:	a0 90 52 13 	lds	r10, 0x1352	; 0x801352 <_sRuble_Parameters+0xb>
   157c6:	b0 90 53 13 	lds	r11, 0x1353	; 0x801353 <_sRuble_Parameters+0xc>
   157ca:	b0 91 54 13 	lds	r27, 0x1354	; 0x801354 <_sRuble_Parameters+0xd>
   157ce:	f0 91 55 13 	lds	r31, 0x1355	; 0x801355 <_sRuble_Parameters+0xe>
   157d2:	e0 91 56 13 	lds	r30, 0x1356	; 0x801356 <_sRuble_Parameters+0xf>
   157d6:	26 2d       	mov	r18, r6
   157d8:	38 2d       	mov	r19, r8
   157da:	49 2d       	mov	r20, r9
   157dc:	5a 2d       	mov	r21, r10
   157de:	6b 2d       	mov	r22, r11
   157e0:	7b 2f       	mov	r23, r27
   157e2:	8f 2f       	mov	r24, r31
   157e4:	9e 2f       	mov	r25, r30
   157e6:	a2 e0       	ldi	r26, 0x02	; 2
   157e8:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
   157ec:	81 f0       	breq	.+32     	; 0x1580e <_Z12Publish_Datav+0x11fc>
   157ee:	a4 e0       	ldi	r26, 0x04	; 4
   157f0:	cd 50       	subi	r28, 0x0D	; 13
   157f2:	de 4f       	sbci	r29, 0xFE	; 254
   157f4:	19 82       	std	Y+1, r1	; 0x01
   157f6:	18 82       	st	Y, r1
   157f8:	c3 5f       	subi	r28, 0xF3	; 243
   157fa:	d1 40       	sbci	r29, 0x01	; 1
   157fc:	0e 94 3d e8 	call	0x1d07a	; 0x1d07a <__cmpdi2_s8>
   15800:	a1 f4       	brne	.+40     	; 0x1582a <_Z12Publish_Datav+0x1218>
   15802:	ae 01       	movw	r20, r28
   15804:	4d 50       	subi	r20, 0x0D	; 13
   15806:	5e 4f       	sbci	r21, 0xFE	; 254
   15808:	6d e4       	ldi	r22, 0x4D	; 77
   1580a:	70 e3       	ldi	r23, 0x30	; 48
   1580c:	13 c0       	rjmp	.+38     	; 0x15834 <_Z12Publish_Datav+0x1222>
   1580e:	81 e0       	ldi	r24, 0x01	; 1
   15810:	90 e0       	ldi	r25, 0x00	; 0
   15812:	cd 50       	subi	r28, 0x0D	; 13
   15814:	de 4f       	sbci	r29, 0xFE	; 254
   15816:	99 83       	std	Y+1, r25	; 0x01
   15818:	88 83       	st	Y, r24
   1581a:	c3 5f       	subi	r28, 0xF3	; 243
   1581c:	d1 40       	sbci	r29, 0x01	; 1
   1581e:	ae 01       	movw	r20, r28
   15820:	4d 50       	subi	r20, 0x0D	; 13
   15822:	5e 4f       	sbci	r21, 0xFE	; 254
   15824:	65 e4       	ldi	r22, 0x45	; 69
   15826:	70 e3       	ldi	r23, 0x30	; 48
   15828:	05 c0       	rjmp	.+10     	; 0x15834 <_Z12Publish_Datav+0x1222>
   1582a:	ae 01       	movw	r20, r28
   1582c:	4d 50       	subi	r20, 0x0D	; 13
   1582e:	5e 4f       	sbci	r21, 0xFE	; 254
   15830:	6d e3       	ldi	r22, 0x3D	; 61
   15832:	70 e3       	ldi	r23, 0x30	; 48
   15834:	c8 01       	movw	r24, r16
   15836:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1583a:	21 c0       	rjmp	.+66     	; 0x1587e <_Z12Publish_Datav+0x126c>
   1583c:	8a e0       	ldi	r24, 0x0A	; 10
   1583e:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   15842:	89 2b       	or	r24, r25
   15844:	71 f4       	brne	.+28     	; 0x15862 <_Z12Publish_Datav+0x1250>
   15846:	04 c0       	rjmp	.+8      	; 0x15850 <_Z12Publish_Datav+0x123e>
   15848:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xc0>
   1584c:	81 30       	cpi	r24, 0x01	; 1
   1584e:	49 f4       	brne	.+18     	; 0x15862 <_Z12Publish_Datav+0x1250>
   15850:	81 e0       	ldi	r24, 0x01	; 1
   15852:	90 e0       	ldi	r25, 0x00	; 0
   15854:	cd 50       	subi	r28, 0x0D	; 13
   15856:	de 4f       	sbci	r29, 0xFE	; 254
   15858:	99 83       	std	Y+1, r25	; 0x01
   1585a:	88 83       	st	Y, r24
   1585c:	c3 5f       	subi	r28, 0xF3	; 243
   1585e:	d1 40       	sbci	r29, 0x01	; 1
   15860:	06 c0       	rjmp	.+12     	; 0x1586e <_Z12Publish_Datav+0x125c>
   15862:	cd 50       	subi	r28, 0x0D	; 13
   15864:	de 4f       	sbci	r29, 0xFE	; 254
   15866:	19 82       	std	Y+1, r1	; 0x01
   15868:	18 82       	st	Y, r1
   1586a:	c3 5f       	subi	r28, 0xF3	; 243
   1586c:	d1 40       	sbci	r29, 0x01	; 1
   1586e:	ae 01       	movw	r20, r28
   15870:	4d 50       	subi	r20, 0x0D	; 13
   15872:	5e 4f       	sbci	r21, 0xFE	; 254
   15874:	65 e9       	ldi	r22, 0x95	; 149
   15876:	77 e0       	ldi	r23, 0x07	; 7
   15878:	c8 01       	movw	r24, r16
   1587a:	0e 94 7c 8a 	call	0x114f8	; 0x114f8 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   1587e:	cd 50       	subi	r28, 0x0D	; 13
   15880:	de 4f       	sbci	r29, 0xFE	; 254
   15882:	19 82       	std	Y+1, r1	; 0x01
   15884:	18 82       	st	Y, r1
   15886:	c3 5f       	subi	r28, 0xF3	; 243
   15888:	d1 40       	sbci	r29, 0x01	; 1
   1588a:	ae 01       	movw	r20, r28
   1588c:	4d 50       	subi	r20, 0x0D	; 13
   1588e:	5e 4f       	sbci	r21, 0xFE	; 254
   15890:	66 e3       	ldi	r22, 0x36	; 54
   15892:	70 e3       	ldi	r23, 0x30	; 48
   15894:	c8 01       	movw	r24, r16
   15896:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1589a:	8b e1       	ldi	r24, 0x1B	; 27
   1589c:	8e 9d       	mul	r24, r14
   1589e:	a0 01       	movw	r20, r0
   158a0:	8f 9d       	mul	r24, r15
   158a2:	50 0d       	add	r21, r0
   158a4:	11 24       	eor	r1, r1
   158a6:	fa 01       	movw	r30, r20
   158a8:	ef 57       	subi	r30, 0x7F	; 127
   158aa:	f2 4f       	sbci	r31, 0xF2	; 242
   158ac:	83 81       	ldd	r24, Z+3	; 0x03
   158ae:	94 81       	ldd	r25, Z+4	; 0x04
   158b0:	f7 01       	movw	r30, r14
   158b2:	eb 59       	subi	r30, 0x9B	; 155
   158b4:	ff 4f       	sbci	r31, 0xFF	; 255
   158b6:	5f 01       	movw	r10, r30
   158b8:	00 97       	sbiw	r24, 0x00	; 0
   158ba:	01 f1       	breq	.+64     	; 0x158fc <_Z12Publish_Datav+0x12ea>
   158bc:	6c e3       	ldi	r22, 0x3C	; 60
   158be:	70 e0       	ldi	r23, 0x00	; 0
   158c0:	0e 94 b7 e7 	call	0x1cf6e	; 0x1cf6e <__udivmodhi4>
   158c4:	6f 5f       	subi	r22, 0xFF	; 255
   158c6:	7f 4f       	sbci	r23, 0xFF	; 255
   158c8:	cd 50       	subi	r28, 0x0D	; 13
   158ca:	de 4f       	sbci	r29, 0xFE	; 254
   158cc:	79 83       	std	Y+1, r23	; 0x01
   158ce:	68 83       	st	Y, r22
   158d0:	c3 5f       	subi	r28, 0xF3	; 243
   158d2:	d1 40       	sbci	r29, 0x01	; 1
   158d4:	ae 01       	movw	r20, r28
   158d6:	4d 50       	subi	r20, 0x0D	; 13
   158d8:	5e 4f       	sbci	r21, 0xFE	; 254
   158da:	61 e3       	ldi	r22, 0x31	; 49
   158dc:	70 e3       	ldi	r23, 0x30	; 48
   158de:	c8 01       	movw	r24, r16
   158e0:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   158e4:	cd 50       	subi	r28, 0x0D	; 13
   158e6:	de 4f       	sbci	r29, 0xFE	; 254
   158e8:	b9 82       	std	Y+1, r11	; 0x01
   158ea:	a8 82       	st	Y, r10
   158ec:	c3 5f       	subi	r28, 0xF3	; 243
   158ee:	d1 40       	sbci	r29, 0x01	; 1
   158f0:	ae 01       	movw	r20, r28
   158f2:	4d 50       	subi	r20, 0x0D	; 13
   158f4:	5e 4f       	sbci	r21, 0xFE	; 254
   158f6:	6c e2       	ldi	r22, 0x2C	; 44
   158f8:	70 e3       	ldi	r23, 0x30	; 48
   158fa:	12 c0       	rjmp	.+36     	; 0x15920 <_Z12Publish_Datav+0x130e>
   158fc:	4c 57       	subi	r20, 0x7C	; 124
   158fe:	52 4f       	sbci	r21, 0xF2	; 242
   15900:	67 e2       	ldi	r22, 0x27	; 39
   15902:	70 e3       	ldi	r23, 0x30	; 48
   15904:	c8 01       	movw	r24, r16
   15906:	0e 94 ae 89 	call	0x1135c	; 0x1135c <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1590a:	cd 50       	subi	r28, 0x0D	; 13
   1590c:	de 4f       	sbci	r29, 0xFE	; 254
   1590e:	b9 82       	std	Y+1, r11	; 0x01
   15910:	a8 82       	st	Y, r10
   15912:	c3 5f       	subi	r28, 0xF3	; 243
   15914:	d1 40       	sbci	r29, 0x01	; 1
   15916:	ae 01       	movw	r20, r28
   15918:	4d 50       	subi	r20, 0x0D	; 13
   1591a:	5e 4f       	sbci	r21, 0xFE	; 254
   1591c:	62 e2       	ldi	r22, 0x22	; 34
   1591e:	70 e3       	ldi	r23, 0x30	; 48
   15920:	c8 01       	movw	r24, r16
   15922:	0e 94 e6 89 	call	0x113cc	; 0x113cc <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15926:	4c ed       	ldi	r20, 0xDC	; 220
   15928:	50 e0       	ldi	r21, 0x00	; 0
   1592a:	b6 01       	movw	r22, r12
   1592c:	c8 01       	movw	r24, r16
   1592e:	0e 94 b8 91 	call	0x12370	; 0x12370 <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15932:	b6 01       	movw	r22, r12
   15934:	82 e5       	ldi	r24, 0x52	; 82
   15936:	94 e1       	ldi	r25, 0x14	; 20
   15938:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   1593c:	eb ef       	ldi	r30, 0xFB	; 251
   1593e:	fe e0       	ldi	r31, 0x0E	; 14
   15940:	8e e6       	ldi	r24, 0x6E	; 110
   15942:	df 01       	movw	r26, r30
   15944:	1d 92       	st	X+, r1
   15946:	8a 95       	dec	r24
   15948:	e9 f7       	brne	.-6      	; 0x15944 <_Z12Publish_Datav+0x1332>
   1594a:	87 e6       	ldi	r24, 0x67	; 103
   1594c:	93 e1       	ldi	r25, 0x13	; 19
   1594e:	9f 93       	push	r25
   15950:	8f 93       	push	r24
   15952:	8b e3       	ldi	r24, 0x3B	; 59
   15954:	97 e0       	ldi	r25, 0x07	; 7
   15956:	9f 93       	push	r25
   15958:	8f 93       	push	r24
   1595a:	ff 93       	push	r31
   1595c:	ef 93       	push	r30
   1595e:	0e 94 5f ea 	call	0x1d4be	; 0x1d4be <sprintf>
   15962:	0f 90       	pop	r0
   15964:	0f 90       	pop	r0
   15966:	0f 90       	pop	r0
   15968:	0f 90       	pop	r0
   1596a:	0f 90       	pop	r0
   1596c:	0f 90       	pop	r0
   1596e:	0c e3       	ldi	r16, 0x3C	; 60
   15970:	10 e0       	ldi	r17, 0x00	; 0
   15972:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   15976:	88 23       	and	r24, r24
   15978:	81 f1       	breq	.+96     	; 0x159da <_Z12Publish_Datav+0x13c8>
   1597a:	b6 01       	movw	r22, r12
   1597c:	8b ef       	ldi	r24, 0xFB	; 251
   1597e:	9e e0       	ldi	r25, 0x0E	; 14
   15980:	0e 94 cc 68 	call	0xd198	; 0xd198 <_Z12MQTT_PublishPhS_>
   15984:	88 23       	and	r24, r24
   15986:	71 f0       	breq	.+28     	; 0x159a4 <_Z12Publish_Datav+0x1392>
   15988:	8b e1       	ldi	r24, 0x1B	; 27
   1598a:	8e 9d       	mul	r24, r14
   1598c:	f0 01       	movw	r30, r0
   1598e:	8f 9d       	mul	r24, r15
   15990:	f0 0d       	add	r31, r0
   15992:	11 24       	eor	r1, r1
   15994:	ef 57       	subi	r30, 0x7F	; 127
   15996:	f2 4f       	sbci	r31, 0xF2	; 242
   15998:	12 8e       	std	Z+26, r1	; 0x1a
   1599a:	81 e0       	ldi	r24, 0x01	; 1
   1599c:	87 0d       	add	r24, r7
   1599e:	0e 94 8b 79 	call	0xf316	; 0xf316 <_Z21Exra_Plot_Data_EEPROMh>
   159a2:	1b c0       	rjmp	.+54     	; 0x159da <_Z12Publish_Datav+0x13c8>
   159a4:	10 93 7a 0d 	sts	0x0D7A, r17	; 0x800d7a <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   159a8:	00 93 79 0d 	sts	0x0D79, r16	; 0x800d79 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   159ac:	80 91 7c 0d 	lds	r24, 0x0D7C	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   159b0:	81 50       	subi	r24, 0x01	; 1
   159b2:	80 93 7c 0d 	sts	0x0D7C, r24	; 0x800d7c <_ZZ12Publish_DatavE5retry>
   159b6:	dd cf       	rjmp	.-70     	; 0x15972 <_Z12Publish_Datav+0x1360>
   159b8:	bf ef       	ldi	r27, 0xFF	; 255
   159ba:	eb 1a       	sub	r14, r27
   159bc:	fb 0a       	sbc	r15, r27
   159be:	eb e1       	ldi	r30, 0x1B	; 27
   159c0:	ce 0e       	add	r12, r30
   159c2:	d1 1c       	adc	r13, r1
   159c4:	fe e0       	ldi	r31, 0x0E	; 14
   159c6:	ef 16       	cp	r14, r31
   159c8:	f1 04       	cpc	r15, r1
   159ca:	09 f0       	breq	.+2      	; 0x159ce <_Z12Publish_Datav+0x13bc>
   159cc:	c5 cd       	rjmp	.-1142   	; 0x15558 <_Z12Publish_Datav+0xf46>
   159ce:	05 c0       	rjmp	.+10     	; 0x159da <_Z12Publish_Datav+0x13c8>
   159d0:	01 97       	sbiw	r24, 0x01	; 1
   159d2:	90 93 7a 0d 	sts	0x0D7A, r25	; 0x800d7a <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   159d6:	80 93 79 0d 	sts	0x0D79, r24	; 0x800d79 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   159da:	cc 50       	subi	r28, 0x0C	; 12
   159dc:	de 4f       	sbci	r29, 0xFE	; 254
   159de:	0f b6       	in	r0, 0x3f	; 63
   159e0:	f8 94       	cli
   159e2:	de bf       	out	0x3e, r29	; 62
   159e4:	0f be       	out	0x3f, r0	; 63
   159e6:	cd bf       	out	0x3d, r28	; 61
   159e8:	df 91       	pop	r29
   159ea:	cf 91       	pop	r28
   159ec:	1f 91       	pop	r17
   159ee:	0f 91       	pop	r16
   159f0:	ff 90       	pop	r15
   159f2:	ef 90       	pop	r14
   159f4:	df 90       	pop	r13
   159f6:	cf 90       	pop	r12
   159f8:	bf 90       	pop	r11
   159fa:	af 90       	pop	r10
   159fc:	9f 90       	pop	r9
   159fe:	8f 90       	pop	r8
   15a00:	7f 90       	pop	r7
   15a02:	6f 90       	pop	r6
   15a04:	08 95       	ret

00015a06 <_Z22Valve_Grouping_Handlerh>:
   15a06:	2f 92       	push	r2
   15a08:	3f 92       	push	r3
   15a0a:	4f 92       	push	r4
   15a0c:	5f 92       	push	r5
   15a0e:	6f 92       	push	r6
   15a10:	7f 92       	push	r7
   15a12:	8f 92       	push	r8
   15a14:	9f 92       	push	r9
   15a16:	af 92       	push	r10
   15a18:	bf 92       	push	r11
   15a1a:	cf 92       	push	r12
   15a1c:	df 92       	push	r13
   15a1e:	ef 92       	push	r14
   15a20:	ff 92       	push	r15
   15a22:	0f 93       	push	r16
   15a24:	1f 93       	push	r17
   15a26:	cf 93       	push	r28
   15a28:	df 93       	push	r29
   15a2a:	cd b7       	in	r28, 0x3d	; 61
   15a2c:	de b7       	in	r29, 0x3e	; 62
   15a2e:	e6 97       	sbiw	r28, 0x36	; 54
   15a30:	0f b6       	in	r0, 0x3f	; 63
   15a32:	f8 94       	cli
   15a34:	de bf       	out	0x3e, r29	; 62
   15a36:	0f be       	out	0x3f, r0	; 63
   15a38:	cd bf       	out	0x3d, r28	; 61
   15a3a:	58 2e       	mov	r5, r24
   15a3c:	88 e0       	ldi	r24, 0x08	; 8
   15a3e:	eb e6       	ldi	r30, 0x6B	; 107
   15a40:	f2 e0       	ldi	r31, 0x02	; 2
   15a42:	de 01       	movw	r26, r28
   15a44:	9b 96       	adiw	r26, 0x2b	; 43
   15a46:	01 90       	ld	r0, Z+
   15a48:	0d 92       	st	X+, r0
   15a4a:	8a 95       	dec	r24
   15a4c:	e1 f7       	brne	.-8      	; 0x15a46 <_Z22Valve_Grouping_Handlerh+0x40>
   15a4e:	9e 01       	movw	r18, r28
   15a50:	2f 5f       	subi	r18, 0xFF	; 255
   15a52:	3f 4f       	sbci	r19, 0xFF	; 255
   15a54:	39 01       	movw	r6, r18
   15a56:	8a e2       	ldi	r24, 0x2A	; 42
   15a58:	d9 01       	movw	r26, r18
   15a5a:	1d 92       	st	X+, r1
   15a5c:	8a 95       	dec	r24
   15a5e:	e9 f7       	brne	.-6      	; 0x15a5a <_Z22Valve_Grouping_Handlerh+0x54>
   15a60:	ad ef       	ldi	r26, 0xFD	; 253
   15a62:	aa 2e       	mov	r10, r26
   15a64:	ac e0       	ldi	r26, 0x0C	; 12
   15a66:	ba 2e       	mov	r11, r26
   15a68:	41 e5       	ldi	r20, 0x51	; 81
   15a6a:	5d e0       	ldi	r21, 0x0D	; 13
   15a6c:	75 01       	movw	r14, r10
   15a6e:	10 e0       	ldi	r17, 0x00	; 0
   15a70:	f7 01       	movw	r30, r14
   15a72:	80 81       	ld	r24, Z
   15a74:	81 50       	subi	r24, 0x01	; 1
   15a76:	8e 30       	cpi	r24, 0x0E	; 14
   15a78:	d8 f5       	brcc	.+118    	; 0x15af0 <_Z22Valve_Grouping_Handlerh+0xea>
   15a7a:	d7 01       	movw	r26, r14
   15a7c:	25 e0       	ldi	r18, 0x05	; 5
   15a7e:	89 81       	ldd	r24, Y+1	; 0x01
   15a80:	88 23       	and	r24, r24
   15a82:	f9 f0       	breq	.+62     	; 0x15ac2 <_Z22Valve_Grouping_Handlerh+0xbc>
   15a84:	00 e0       	ldi	r16, 0x00	; 0
   15a86:	30 e0       	ldi	r19, 0x00	; 0
   15a88:	83 2f       	mov	r24, r19
   15a8a:	90 e0       	ldi	r25, 0x00	; 0
   15a8c:	b3 01       	movw	r22, r6
   15a8e:	68 0f       	add	r22, r24
   15a90:	79 1f       	adc	r23, r25
   15a92:	fb 01       	movw	r30, r22
   15a94:	70 81       	ld	r23, Z
   15a96:	77 23       	and	r23, r23
   15a98:	d1 f0       	breq	.+52     	; 0x15ace <_Z22Valve_Grouping_Handlerh+0xc8>
   15a9a:	11 96       	adiw	r26, 0x01	; 1
   15a9c:	6c 91       	ld	r22, X
   15a9e:	11 97       	sbiw	r26, 0x01	; 1
   15aa0:	66 23       	and	r22, r22
   15aa2:	69 f0       	breq	.+26     	; 0x15abe <_Z22Valve_Grouping_Handlerh+0xb8>
   15aa4:	76 17       	cp	r23, r22
   15aa6:	99 f0       	breq	.+38     	; 0x15ace <_Z22Valve_Grouping_Handlerh+0xc8>
   15aa8:	62 e0       	ldi	r22, 0x02	; 2
   15aaa:	70 e0       	ldi	r23, 0x00	; 0
   15aac:	6c 0f       	add	r22, r28
   15aae:	7d 1f       	adc	r23, r29
   15ab0:	86 0f       	add	r24, r22
   15ab2:	97 1f       	adc	r25, r23
   15ab4:	fc 01       	movw	r30, r24
   15ab6:	80 81       	ld	r24, Z
   15ab8:	81 11       	cpse	r24, r1
   15aba:	01 c0       	rjmp	.+2      	; 0x15abe <_Z22Valve_Grouping_Handlerh+0xb8>
   15abc:	01 e0       	ldi	r16, 0x01	; 1
   15abe:	3f 5f       	subi	r19, 0xFF	; 255
   15ac0:	e3 cf       	rjmp	.-58     	; 0x15a88 <_Z22Valve_Grouping_Handlerh+0x82>
   15ac2:	11 96       	adiw	r26, 0x01	; 1
   15ac4:	8c 91       	ld	r24, X
   15ac6:	11 97       	sbiw	r26, 0x01	; 1
   15ac8:	81 11       	cpse	r24, r1
   15aca:	03 c0       	rjmp	.+6      	; 0x15ad2 <_Z22Valve_Grouping_Handlerh+0xcc>
   15acc:	0d c0       	rjmp	.+26     	; 0x15ae8 <_Z22Valve_Grouping_Handlerh+0xe2>
   15ace:	00 23       	and	r16, r16
   15ad0:	59 f0       	breq	.+22     	; 0x15ae8 <_Z22Valve_Grouping_Handlerh+0xe2>
   15ad2:	11 96       	adiw	r26, 0x01	; 1
   15ad4:	8c 91       	ld	r24, X
   15ad6:	11 97       	sbiw	r26, 0x01	; 1
   15ad8:	86 31       	cpi	r24, 0x16	; 22
   15ada:	30 f4       	brcc	.+12     	; 0x15ae8 <_Z22Valve_Grouping_Handlerh+0xe2>
   15adc:	b3 01       	movw	r22, r6
   15ade:	61 0f       	add	r22, r17
   15ae0:	71 1d       	adc	r23, r1
   15ae2:	fb 01       	movw	r30, r22
   15ae4:	80 83       	st	Z, r24
   15ae6:	1f 5f       	subi	r17, 0xFF	; 255
   15ae8:	21 50       	subi	r18, 0x01	; 1
   15aea:	11 96       	adiw	r26, 0x01	; 1
   15aec:	21 11       	cpse	r18, r1
   15aee:	c7 cf       	rjmp	.-114    	; 0x15a7e <_Z22Valve_Grouping_Handlerh+0x78>
   15af0:	f6 e0       	ldi	r31, 0x06	; 6
   15af2:	ef 0e       	add	r14, r31
   15af4:	f1 1c       	adc	r15, r1
   15af6:	4e 15       	cp	r20, r14
   15af8:	5f 05       	cpc	r21, r15
   15afa:	09 f0       	breq	.+2      	; 0x15afe <_Z22Valve_Grouping_Handlerh+0xf8>
   15afc:	b9 cf       	rjmp	.-142    	; 0x15a70 <_Z22Valve_Grouping_Handlerh+0x6a>
   15afe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15b02:	81 30       	cpi	r24, 0x01	; 1
   15b04:	51 f4       	brne	.+20     	; 0x15b1a <_Z22Valve_Grouping_Handlerh+0x114>
   15b06:	69 ed       	ldi	r22, 0xD9	; 217
   15b08:	7f e3       	ldi	r23, 0x3F	; 63
   15b0a:	82 e5       	ldi	r24, 0x52	; 82
   15b0c:	94 e1       	ldi	r25, 0x14	; 20
   15b0e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15b12:	82 e5       	ldi	r24, 0x52	; 82
   15b14:	94 e1       	ldi	r25, 0x14	; 20
   15b16:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15b1a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15b1e:	81 30       	cpi	r24, 0x01	; 1
   15b20:	e9 f4       	brne	.+58     	; 0x15b5c <_Z22Valve_Grouping_Handlerh+0x156>
   15b22:	00 e0       	ldi	r16, 0x00	; 0
   15b24:	73 01       	movw	r14, r6
   15b26:	e0 0e       	add	r14, r16
   15b28:	f1 1c       	adc	r15, r1
   15b2a:	d7 01       	movw	r26, r14
   15b2c:	8c 91       	ld	r24, X
   15b2e:	88 23       	and	r24, r24
   15b30:	a9 f0       	breq	.+42     	; 0x15b5c <_Z22Valve_Grouping_Handlerh+0x156>
   15b32:	67 ec       	ldi	r22, 0xC7	; 199
   15b34:	7f e3       	ldi	r23, 0x3F	; 63
   15b36:	82 e5       	ldi	r24, 0x52	; 82
   15b38:	94 e1       	ldi	r25, 0x14	; 20
   15b3a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15b3e:	f7 01       	movw	r30, r14
   15b40:	60 81       	ld	r22, Z
   15b42:	70 e0       	ldi	r23, 0x00	; 0
   15b44:	4a e0       	ldi	r20, 0x0A	; 10
   15b46:	50 e0       	ldi	r21, 0x00	; 0
   15b48:	82 e5       	ldi	r24, 0x52	; 82
   15b4a:	94 e1       	ldi	r25, 0x14	; 20
   15b4c:	0e 94 a3 d2 	call	0x1a546	; 0x1a546 <_ZN5Print5printEii>
   15b50:	82 e5       	ldi	r24, 0x52	; 82
   15b52:	94 e1       	ldi	r25, 0x14	; 20
   15b54:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   15b58:	0f 5f       	subi	r16, 0xFF	; 255
   15b5a:	e4 cf       	rjmp	.-56     	; 0x15b24 <_Z22Valve_Grouping_Handlerh+0x11e>
   15b5c:	f3 e0       	ldi	r31, 0x03	; 3
   15b5e:	5f 12       	cpse	r5, r31
   15b60:	81 c0       	rjmp	.+258    	; 0x15c64 <_Z22Valve_Grouping_Handlerh+0x25e>
   15b62:	f1 e8       	ldi	r31, 0x81	; 129
   15b64:	ef 2e       	mov	r14, r31
   15b66:	fd e0       	ldi	r31, 0x0D	; 13
   15b68:	ff 2e       	mov	r15, r31
   15b6a:	4b ef       	ldi	r20, 0xFB	; 251
   15b6c:	5e e0       	ldi	r21, 0x0E	; 14
   15b6e:	d7 01       	movw	r26, r14
   15b70:	11 96       	adiw	r26, 0x01	; 1
   15b72:	8c 91       	ld	r24, X
   15b74:	11 97       	sbiw	r26, 0x01	; 1
   15b76:	85 56       	subi	r24, 0x65	; 101
   15b78:	8e 30       	cpi	r24, 0x0E	; 14
   15b7a:	d0 f5       	brcc	.+116    	; 0x15bf0 <_Z22Valve_Grouping_Handlerh+0x1ea>
   15b7c:	25 e0       	ldi	r18, 0x05	; 5
   15b7e:	89 81       	ldd	r24, Y+1	; 0x01
   15b80:	88 23       	and	r24, r24
   15b82:	f9 f0       	breq	.+62     	; 0x15bc2 <_Z22Valve_Grouping_Handlerh+0x1bc>
   15b84:	00 e0       	ldi	r16, 0x00	; 0
   15b86:	30 e0       	ldi	r19, 0x00	; 0
   15b88:	83 2f       	mov	r24, r19
   15b8a:	90 e0       	ldi	r25, 0x00	; 0
   15b8c:	b3 01       	movw	r22, r6
   15b8e:	68 0f       	add	r22, r24
   15b90:	79 1f       	adc	r23, r25
   15b92:	fb 01       	movw	r30, r22
   15b94:	70 81       	ld	r23, Z
   15b96:	77 23       	and	r23, r23
   15b98:	d1 f0       	breq	.+52     	; 0x15bce <_Z22Valve_Grouping_Handlerh+0x1c8>
   15b9a:	15 96       	adiw	r26, 0x05	; 5
   15b9c:	6c 91       	ld	r22, X
   15b9e:	15 97       	sbiw	r26, 0x05	; 5
   15ba0:	66 23       	and	r22, r22
   15ba2:	69 f0       	breq	.+26     	; 0x15bbe <_Z22Valve_Grouping_Handlerh+0x1b8>
   15ba4:	76 17       	cp	r23, r22
   15ba6:	99 f0       	breq	.+38     	; 0x15bce <_Z22Valve_Grouping_Handlerh+0x1c8>
   15ba8:	62 e0       	ldi	r22, 0x02	; 2
   15baa:	70 e0       	ldi	r23, 0x00	; 0
   15bac:	6c 0f       	add	r22, r28
   15bae:	7d 1f       	adc	r23, r29
   15bb0:	86 0f       	add	r24, r22
   15bb2:	97 1f       	adc	r25, r23
   15bb4:	fc 01       	movw	r30, r24
   15bb6:	80 81       	ld	r24, Z
   15bb8:	81 11       	cpse	r24, r1
   15bba:	01 c0       	rjmp	.+2      	; 0x15bbe <_Z22Valve_Grouping_Handlerh+0x1b8>
   15bbc:	01 e0       	ldi	r16, 0x01	; 1
   15bbe:	3f 5f       	subi	r19, 0xFF	; 255
   15bc0:	e3 cf       	rjmp	.-58     	; 0x15b88 <_Z22Valve_Grouping_Handlerh+0x182>
   15bc2:	15 96       	adiw	r26, 0x05	; 5
   15bc4:	8c 91       	ld	r24, X
   15bc6:	15 97       	sbiw	r26, 0x05	; 5
   15bc8:	81 11       	cpse	r24, r1
   15bca:	03 c0       	rjmp	.+6      	; 0x15bd2 <_Z22Valve_Grouping_Handlerh+0x1cc>
   15bcc:	0d c0       	rjmp	.+26     	; 0x15be8 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15bce:	00 23       	and	r16, r16
   15bd0:	59 f0       	breq	.+22     	; 0x15be8 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15bd2:	15 96       	adiw	r26, 0x05	; 5
   15bd4:	8c 91       	ld	r24, X
   15bd6:	15 97       	sbiw	r26, 0x05	; 5
   15bd8:	86 31       	cpi	r24, 0x16	; 22
   15bda:	30 f4       	brcc	.+12     	; 0x15be8 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15bdc:	b3 01       	movw	r22, r6
   15bde:	61 0f       	add	r22, r17
   15be0:	71 1d       	adc	r23, r1
   15be2:	fb 01       	movw	r30, r22
   15be4:	80 83       	st	Z, r24
   15be6:	1f 5f       	subi	r17, 0xFF	; 255
   15be8:	21 50       	subi	r18, 0x01	; 1
   15bea:	11 96       	adiw	r26, 0x01	; 1
   15bec:	21 11       	cpse	r18, r1
   15bee:	c7 cf       	rjmp	.-114    	; 0x15b7e <_Z22Valve_Grouping_Handlerh+0x178>
   15bf0:	fb e1       	ldi	r31, 0x1B	; 27
   15bf2:	ef 0e       	add	r14, r31
   15bf4:	f1 1c       	adc	r15, r1
   15bf6:	4e 15       	cp	r20, r14
   15bf8:	5f 05       	cpc	r21, r15
   15bfa:	09 f0       	breq	.+2      	; 0x15bfe <_Z22Valve_Grouping_Handlerh+0x1f8>
   15bfc:	b8 cf       	rjmp	.-144    	; 0x15b6e <_Z22Valve_Grouping_Handlerh+0x168>
   15bfe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15c02:	81 30       	cpi	r24, 0x01	; 1
   15c04:	51 f4       	brne	.+20     	; 0x15c1a <_Z22Valve_Grouping_Handlerh+0x214>
   15c06:	66 eb       	ldi	r22, 0xB6	; 182
   15c08:	7f e3       	ldi	r23, 0x3F	; 63
   15c0a:	82 e5       	ldi	r24, 0x52	; 82
   15c0c:	94 e1       	ldi	r25, 0x14	; 20
   15c0e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15c12:	82 e5       	ldi	r24, 0x52	; 82
   15c14:	94 e1       	ldi	r25, 0x14	; 20
   15c16:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15c1a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15c1e:	81 30       	cpi	r24, 0x01	; 1
   15c20:	91 f5       	brne	.+100    	; 0x15c86 <_Z22Valve_Grouping_Handlerh+0x280>
   15c22:	10 e0       	ldi	r17, 0x00	; 0
   15c24:	73 01       	movw	r14, r6
   15c26:	e1 0e       	add	r14, r17
   15c28:	f1 1c       	adc	r15, r1
   15c2a:	d7 01       	movw	r26, r14
   15c2c:	8c 91       	ld	r24, X
   15c2e:	88 23       	and	r24, r24
   15c30:	e1 f0       	breq	.+56     	; 0x15c6a <_Z22Valve_Grouping_Handlerh+0x264>
   15c32:	64 ea       	ldi	r22, 0xA4	; 164
   15c34:	7f e3       	ldi	r23, 0x3F	; 63
   15c36:	82 e5       	ldi	r24, 0x52	; 82
   15c38:	94 e1       	ldi	r25, 0x14	; 20
   15c3a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15c3e:	f7 01       	movw	r30, r14
   15c40:	60 81       	ld	r22, Z
   15c42:	70 e0       	ldi	r23, 0x00	; 0
   15c44:	4a e0       	ldi	r20, 0x0A	; 10
   15c46:	50 e0       	ldi	r21, 0x00	; 0
   15c48:	82 e5       	ldi	r24, 0x52	; 82
   15c4a:	94 e1       	ldi	r25, 0x14	; 20
   15c4c:	0e 94 a3 d2 	call	0x1a546	; 0x1a546 <_ZN5Print5printEii>
   15c50:	82 e5       	ldi	r24, 0x52	; 82
   15c52:	94 e1       	ldi	r25, 0x14	; 20
   15c54:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15c58:	82 e5       	ldi	r24, 0x52	; 82
   15c5a:	94 e1       	ldi	r25, 0x14	; 20
   15c5c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   15c60:	1f 5f       	subi	r17, 0xFF	; 255
   15c62:	e0 cf       	rjmp	.-64     	; 0x15c24 <_Z22Valve_Grouping_Handlerh+0x21e>
   15c64:	85 e0       	ldi	r24, 0x05	; 5
   15c66:	58 12       	cpse	r5, r24
   15c68:	5e c1       	rjmp	.+700    	; 0x15f26 <_Z22Valve_Grouping_Handlerh+0x520>
   15c6a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15c6e:	81 30       	cpi	r24, 0x01	; 1
   15c70:	51 f4       	brne	.+20     	; 0x15c86 <_Z22Valve_Grouping_Handlerh+0x280>
   15c72:	69 e7       	ldi	r22, 0x79	; 121
   15c74:	7f e3       	ldi	r23, 0x3F	; 63
   15c76:	82 e5       	ldi	r24, 0x52	; 82
   15c78:	94 e1       	ldi	r25, 0x14	; 20
   15c7a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15c7e:	82 e5       	ldi	r24, 0x52	; 82
   15c80:	94 e1       	ldi	r25, 0x14	; 20
   15c82:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15c86:	07 eb       	ldi	r16, 0xB7	; 183
   15c88:	1b e0       	ldi	r17, 0x0B	; 11
   15c8a:	e4 e0       	ldi	r30, 0x04	; 4
   15c8c:	ce 2e       	mov	r12, r30
   15c8e:	d1 2c       	mov	r13, r1
   15c90:	e1 2c       	mov	r14, r1
   15c92:	f1 2c       	mov	r15, r1
   15c94:	d8 01       	movw	r26, r16
   15c96:	8c 91       	ld	r24, X
   15c98:	88 23       	and	r24, r24
   15c9a:	21 f1       	breq	.+72     	; 0x15ce4 <_Z22Valve_Grouping_Handlerh+0x2de>
   15c9c:	81 2c       	mov	r8, r1
   15c9e:	40 e0       	ldi	r20, 0x00	; 0
   15ca0:	39 c0       	rjmp	.+114    	; 0x15d14 <_Z22Valve_Grouping_Handlerh+0x30e>
   15ca2:	9e 01       	movw	r18, r28
   15ca4:	25 5d       	subi	r18, 0xD5	; 213
   15ca6:	3f 4f       	sbci	r19, 0xFF	; 255
   15ca8:	3c ab       	std	Y+52, r19	; 0x34
   15caa:	2b ab       	std	Y+51, r18	; 0x33
   15cac:	99 24       	eor	r9, r9
   15cae:	93 94       	inc	r9
   15cb0:	3d e0       	ldi	r19, 0x0D	; 13
   15cb2:	3e 9d       	mul	r19, r14
   15cb4:	c0 01       	movw	r24, r0
   15cb6:	3f 9d       	mul	r19, r15
   15cb8:	90 0d       	add	r25, r0
   15cba:	11 24       	eor	r1, r1
   15cbc:	ac 01       	movw	r20, r24
   15cbe:	49 54       	subi	r20, 0x49	; 73
   15cc0:	54 4f       	sbci	r21, 0xF4	; 244
   15cc2:	5e ab       	std	Y+54, r21	; 0x36
   15cc4:	4d ab       	std	Y+53, r20	; 0x35
   15cc6:	17 01       	movw	r2, r14
   15cc8:	5f ef       	ldi	r21, 0xFF	; 255
   15cca:	25 1a       	sub	r2, r21
   15ccc:	35 0a       	sbc	r3, r21
   15cce:	ab a9       	ldd	r26, Y+51	; 0x33
   15cd0:	bc a9       	ldd	r27, Y+52	; 0x34
   15cd2:	8d 91       	ld	r24, X+
   15cd4:	bc ab       	std	Y+52, r27	; 0x34
   15cd6:	ab ab       	std	Y+51, r26	; 0x33
   15cd8:	88 21       	and	r24, r8
   15cda:	49 f5       	brne	.+82     	; 0x15d2e <_Z22Valve_Grouping_Handlerh+0x328>
   15cdc:	93 94       	inc	r9
   15cde:	34 e0       	ldi	r19, 0x04	; 4
   15ce0:	93 12       	cpse	r9, r19
   15ce2:	f5 cf       	rjmp	.-22     	; 0x15cce <_Z22Valve_Grouping_Handlerh+0x2c8>
   15ce4:	bf ef       	ldi	r27, 0xFF	; 255
   15ce6:	eb 1a       	sub	r14, r27
   15ce8:	fb 0a       	sbc	r15, r27
   15cea:	03 5f       	subi	r16, 0xF3	; 243
   15cec:	1f 4f       	sbci	r17, 0xFF	; 255
   15cee:	e3 e0       	ldi	r30, 0x03	; 3
   15cf0:	ce 0e       	add	r12, r30
   15cf2:	d1 1c       	adc	r13, r1
   15cf4:	f6 e0       	ldi	r31, 0x06	; 6
   15cf6:	ef 16       	cp	r14, r31
   15cf8:	f1 04       	cpc	r15, r1
   15cfa:	61 f6       	brne	.-104    	; 0x15c94 <_Z22Valve_Grouping_Handlerh+0x28e>
   15cfc:	c9 c0       	rjmp	.+402    	; 0x15e90 <_Z22Valve_Grouping_Handlerh+0x48a>
   15cfe:	82 17       	cp	r24, r18
   15d00:	93 07       	cpc	r25, r19
   15d02:	11 f4       	brne	.+4      	; 0x15d08 <_Z22Valve_Grouping_Handlerh+0x302>
   15d04:	50 81       	ld	r21, Z
   15d06:	85 2a       	or	r8, r21
   15d08:	01 96       	adiw	r24, 0x01	; 1
   15d0a:	31 96       	adiw	r30, 0x01	; 1
   15d0c:	c8 16       	cp	r12, r24
   15d0e:	d9 06       	cpc	r13, r25
   15d10:	b1 f7       	brne	.-20     	; 0x15cfe <_Z22Valve_Grouping_Handlerh+0x2f8>
   15d12:	4f 5f       	subi	r20, 0xFF	; 255
   15d14:	f3 01       	movw	r30, r6
   15d16:	e4 0f       	add	r30, r20
   15d18:	f1 1d       	adc	r31, r1
   15d1a:	20 81       	ld	r18, Z
   15d1c:	22 23       	and	r18, r18
   15d1e:	09 f4       	brne	.+2      	; 0x15d22 <_Z22Valve_Grouping_Handlerh+0x31c>
   15d20:	c0 cf       	rjmp	.-128    	; 0x15ca2 <_Z22Valve_Grouping_Handlerh+0x29c>
   15d22:	c6 01       	movw	r24, r12
   15d24:	03 97       	sbiw	r24, 0x03	; 3
   15d26:	fe 01       	movw	r30, r28
   15d28:	bb 96       	adiw	r30, 0x2b	; 43
   15d2a:	30 e0       	ldi	r19, 0x00	; 0
   15d2c:	e8 cf       	rjmp	.-48     	; 0x15cfe <_Z22Valve_Grouping_Handlerh+0x2f8>
   15d2e:	e9 e7       	ldi	r30, 0x79	; 121
   15d30:	f3 e1       	ldi	r31, 0x13	; 19
   15d32:	24 e1       	ldi	r18, 0x14	; 20
   15d34:	11 92       	st	Z+, r1
   15d36:	2a 95       	dec	r18
   15d38:	e9 f7       	brne	.-6      	; 0x15d34 <_Z22Valve_Grouping_Handlerh+0x32e>
   15d3a:	d8 01       	movw	r26, r16
   15d3c:	11 96       	adiw	r26, 0x01	; 1
   15d3e:	8c 91       	ld	r24, X
   15d40:	11 97       	sbiw	r26, 0x01	; 1
   15d42:	80 93 79 13 	sts	0x1379, r24	; 0x801379 <_sRuble_Parameters+0x32>
   15d46:	12 96       	adiw	r26, 0x02	; 2
   15d48:	8c 91       	ld	r24, X
   15d4a:	12 97       	sbiw	r26, 0x02	; 2
   15d4c:	80 93 7a 13 	sts	0x137A, r24	; 0x80137a <_sRuble_Parameters+0x33>
   15d50:	13 96       	adiw	r26, 0x03	; 3
   15d52:	8c 91       	ld	r24, X
   15d54:	13 97       	sbiw	r26, 0x03	; 3
   15d56:	80 93 7b 13 	sts	0x137B, r24	; 0x80137b <_sRuble_Parameters+0x34>
   15d5a:	14 96       	adiw	r26, 0x04	; 4
   15d5c:	8c 91       	ld	r24, X
   15d5e:	14 97       	sbiw	r26, 0x04	; 4
   15d60:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x35>
   15d64:	15 96       	adiw	r26, 0x05	; 5
   15d66:	8c 91       	ld	r24, X
   15d68:	15 97       	sbiw	r26, 0x05	; 5
   15d6a:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x36>
   15d6e:	16 96       	adiw	r26, 0x06	; 6
   15d70:	8c 91       	ld	r24, X
   15d72:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x37>
   15d76:	b2 e0       	ldi	r27, 0x02	; 2
   15d78:	b0 93 7f 13 	sts	0x137F, r27	; 0x80137f <_sRuble_Parameters+0x38>
   15d7c:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   15d80:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x3a>
   15d84:	90 92 84 13 	sts	0x1384, r9	; 0x801384 <_sRuble_Parameters+0x3d>
   15d88:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15d8c:	81 30       	cpi	r24, 0x01	; 1
   15d8e:	39 f5       	brne	.+78     	; 0x15dde <_Z22Valve_Grouping_Handlerh+0x3d8>
   15d90:	66 e5       	ldi	r22, 0x56	; 86
   15d92:	7f e3       	ldi	r23, 0x3F	; 63
   15d94:	82 e5       	ldi	r24, 0x52	; 82
   15d96:	94 e1       	ldi	r25, 0x14	; 20
   15d98:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   15d9c:	4a e0       	ldi	r20, 0x0A	; 10
   15d9e:	50 e0       	ldi	r21, 0x00	; 0
   15da0:	b1 01       	movw	r22, r2
   15da2:	82 e5       	ldi	r24, 0x52	; 82
   15da4:	94 e1       	ldi	r25, 0x14	; 20
   15da6:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
   15daa:	82 e5       	ldi	r24, 0x52	; 82
   15dac:	94 e1       	ldi	r25, 0x14	; 20
   15dae:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15db2:	61 e4       	ldi	r22, 0x41	; 65
   15db4:	7f e3       	ldi	r23, 0x3F	; 63
   15db6:	82 e5       	ldi	r24, 0x52	; 82
   15db8:	94 e1       	ldi	r25, 0x14	; 20
   15dba:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   15dbe:	4c e0       	ldi	r20, 0x0C	; 12
   15dc0:	50 e0       	ldi	r21, 0x00	; 0
   15dc2:	69 e7       	ldi	r22, 0x79	; 121
   15dc4:	73 e1       	ldi	r23, 0x13	; 19
   15dc6:	82 e5       	ldi	r24, 0x52	; 82
   15dc8:	94 e1       	ldi	r25, 0x14	; 20
   15dca:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   15dce:	82 e5       	ldi	r24, 0x52	; 82
   15dd0:	94 e1       	ldi	r25, 0x14	; 20
   15dd2:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   15dd6:	82 e5       	ldi	r24, 0x52	; 82
   15dd8:	94 e1       	ldi	r25, 0x14	; 20
   15dda:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15dde:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   15de2:	8c e0       	ldi	r24, 0x0C	; 12
   15de4:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   15de8:	88 eb       	ldi	r24, 0xB8	; 184
   15dea:	9b e0       	ldi	r25, 0x0B	; 11
   15dec:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
   15df0:	88 23       	and	r24, r24
   15df2:	c9 f1       	breq	.+114    	; 0x15e66 <_Z22Valve_Grouping_Handlerh+0x460>
   15df4:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   15df8:	90 e0       	ldi	r25, 0x00	; 0
   15dfa:	80 e0       	ldi	r24, 0x00	; 0
   15dfc:	28 2f       	mov	r18, r24
   15dfe:	30 e0       	ldi	r19, 0x00	; 0
   15e00:	ed a9       	ldd	r30, Y+53	; 0x35
   15e02:	fe a9       	ldd	r31, Y+54	; 0x36
   15e04:	e2 0f       	add	r30, r18
   15e06:	f3 1f       	adc	r31, r19
   15e08:	d9 01       	movw	r26, r18
   15e0a:	a3 57       	subi	r26, 0x73	; 115
   15e0c:	bc 4e       	sbci	r27, 0xEC	; 236
   15e0e:	41 81       	ldd	r20, Z+1	; 0x01
   15e10:	2c 91       	ld	r18, X
   15e12:	42 17       	cp	r20, r18
   15e14:	11 f0       	breq	.+4      	; 0x15e1a <_Z22Valve_Grouping_Handlerh+0x414>
   15e16:	90 e0       	ldi	r25, 0x00	; 0
   15e18:	86 e0       	ldi	r24, 0x06	; 6
   15e1a:	9f 5f       	subi	r25, 0xFF	; 255
   15e1c:	8f 5f       	subi	r24, 0xFF	; 255
   15e1e:	86 30       	cpi	r24, 0x06	; 6
   15e20:	68 f3       	brcs	.-38     	; 0x15dfc <_Z22Valve_Grouping_Handlerh+0x3f6>
   15e22:	96 30       	cpi	r25, 0x06	; 6
   15e24:	c9 f4       	brne	.+50     	; 0x15e58 <_Z22Valve_Grouping_Handlerh+0x452>
   15e26:	21 e0       	ldi	r18, 0x01	; 1
   15e28:	f8 01       	movw	r30, r16
   15e2a:	23 87       	std	Z+11, r18	; 0x0b
   15e2c:	20 91 95 13 	lds	r18, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
   15e30:	22 87       	std	Z+10, r18	; 0x0a
   15e32:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
   15e36:	90 e0       	ldi	r25, 0x00	; 0
   15e38:	98 2f       	mov	r25, r24
   15e3a:	88 27       	eor	r24, r24
   15e3c:	30 91 97 13 	lds	r19, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
   15e40:	83 2b       	or	r24, r19
   15e42:	91 87       	std	Z+9, r25	; 0x09
   15e44:	80 87       	std	Z+8, r24	; 0x08
   15e46:	22 23       	and	r18, r18
   15e48:	e1 f0       	breq	.+56     	; 0x15e82 <_Z22Valve_Grouping_Handlerh+0x47c>
   15e4a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15e4e:	81 30       	cpi	r24, 0x01	; 1
   15e50:	c1 f4       	brne	.+48     	; 0x15e82 <_Z22Valve_Grouping_Handlerh+0x47c>
   15e52:	6c e1       	ldi	r22, 0x1C	; 28
   15e54:	7f e3       	ldi	r23, 0x3F	; 63
   15e56:	0d c0       	rjmp	.+26     	; 0x15e72 <_Z22Valve_Grouping_Handlerh+0x46c>
   15e58:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15e5c:	81 30       	cpi	r24, 0x01	; 1
   15e5e:	89 f4       	brne	.+34     	; 0x15e82 <_Z22Valve_Grouping_Handlerh+0x47c>
   15e60:	6b ef       	ldi	r22, 0xFB	; 251
   15e62:	7e e3       	ldi	r23, 0x3E	; 62
   15e64:	06 c0       	rjmp	.+12     	; 0x15e72 <_Z22Valve_Grouping_Handlerh+0x46c>
   15e66:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15e6a:	81 30       	cpi	r24, 0x01	; 1
   15e6c:	51 f4       	brne	.+20     	; 0x15e82 <_Z22Valve_Grouping_Handlerh+0x47c>
   15e6e:	64 ed       	ldi	r22, 0xD4	; 212
   15e70:	7e e3       	ldi	r23, 0x3E	; 62
   15e72:	82 e5       	ldi	r24, 0x52	; 82
   15e74:	94 e1       	ldi	r25, 0x14	; 20
   15e76:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15e7a:	82 e5       	ldi	r24, 0x52	; 82
   15e7c:	94 e1       	ldi	r25, 0x14	; 20
   15e7e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15e82:	68 ee       	ldi	r22, 0xE8	; 232
   15e84:	73 e0       	ldi	r23, 0x03	; 3
   15e86:	80 e0       	ldi	r24, 0x00	; 0
   15e88:	90 e0       	ldi	r25, 0x00	; 0
   15e8a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   15e8e:	26 cf       	rjmp	.-436    	; 0x15cdc <_Z22Valve_Grouping_Handlerh+0x2d6>
   15e90:	43 e0       	ldi	r20, 0x03	; 3
   15e92:	54 16       	cp	r5, r20
   15e94:	11 f4       	brne	.+4      	; 0x15e9a <_Z22Valve_Grouping_Handlerh+0x494>
   15e96:	0c 94 58 b7 	jmp	0x16eb0	; 0x16eb0 <_Z22Valve_Grouping_Handlerh+0x14aa>
   15e9a:	55 e0       	ldi	r21, 0x05	; 5
   15e9c:	55 12       	cpse	r5, r21
   15e9e:	43 c0       	rjmp	.+134    	; 0x15f26 <_Z22Valve_Grouping_Handlerh+0x520>
   15ea0:	6e e0       	ldi	r22, 0x0E	; 14
   15ea2:	f6 2e       	mov	r15, r22
   15ea4:	00 e0       	ldi	r16, 0x00	; 0
   15ea6:	10 e0       	ldi	r17, 0x00	; 0
   15ea8:	f5 01       	movw	r30, r10
   15eaa:	e0 0f       	add	r30, r16
   15eac:	f1 1f       	adc	r31, r17
   15eae:	e1 81       	ldd	r30, Z+1	; 0x01
   15eb0:	e6 31       	cpi	r30, 0x16	; 22
   15eb2:	68 f0       	brcs	.+26     	; 0x15ece <_Z22Valve_Grouping_Handlerh+0x4c8>
   15eb4:	f0 e0       	ldi	r31, 0x00	; 0
   15eb6:	ef 53       	subi	r30, 0x3F	; 63
   15eb8:	fc 4e       	sbci	r31, 0xEC	; 236
   15eba:	61 e0       	ldi	r22, 0x01	; 1
   15ebc:	80 81       	ld	r24, Z
   15ebe:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   15ec2:	68 ec       	ldi	r22, 0xC8	; 200
   15ec4:	70 e0       	ldi	r23, 0x00	; 0
   15ec6:	80 e0       	ldi	r24, 0x00	; 0
   15ec8:	90 e0       	ldi	r25, 0x00	; 0
   15eca:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   15ece:	0f 5f       	subi	r16, 0xFF	; 255
   15ed0:	1f 4f       	sbci	r17, 0xFF	; 255
   15ed2:	05 30       	cpi	r16, 0x05	; 5
   15ed4:	11 05       	cpc	r17, r1
   15ed6:	41 f7       	brne	.-48     	; 0x15ea8 <_Z22Valve_Grouping_Handlerh+0x4a2>
   15ed8:	fa 94       	dec	r15
   15eda:	66 e0       	ldi	r22, 0x06	; 6
   15edc:	a6 0e       	add	r10, r22
   15ede:	b1 1c       	adc	r11, r1
   15ee0:	f1 10       	cpse	r15, r1
   15ee2:	e0 cf       	rjmp	.-64     	; 0x15ea4 <_Z22Valve_Grouping_Handlerh+0x49e>
   15ee4:	80 91 d3 0d 	lds	r24, 0x0DD3	; 0x800dd3 <_sExtra_Plot+0x52>
   15ee8:	88 36       	cpi	r24, 0x68	; 104
   15eea:	09 f0       	breq	.+2      	; 0x15eee <_Z22Valve_Grouping_Handlerh+0x4e8>
   15eec:	e1 c7       	rjmp	.+4034   	; 0x16eb0 <_Z22Valve_Grouping_Handlerh+0x14aa>
   15eee:	07 ed       	ldi	r16, 0xD7	; 215
   15ef0:	1d e0       	ldi	r17, 0x0D	; 13
   15ef2:	5c ed       	ldi	r21, 0xDC	; 220
   15ef4:	e5 2e       	mov	r14, r21
   15ef6:	5d e0       	ldi	r21, 0x0D	; 13
   15ef8:	f5 2e       	mov	r15, r21
   15efa:	d8 01       	movw	r26, r16
   15efc:	ed 91       	ld	r30, X+
   15efe:	8d 01       	movw	r16, r26
   15f00:	e6 31       	cpi	r30, 0x16	; 22
   15f02:	68 f0       	brcs	.+26     	; 0x15f1e <_Z22Valve_Grouping_Handlerh+0x518>
   15f04:	f0 e0       	ldi	r31, 0x00	; 0
   15f06:	ef 53       	subi	r30, 0x3F	; 63
   15f08:	fc 4e       	sbci	r31, 0xEC	; 236
   15f0a:	61 e0       	ldi	r22, 0x01	; 1
   15f0c:	80 81       	ld	r24, Z
   15f0e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   15f12:	68 ec       	ldi	r22, 0xC8	; 200
   15f14:	70 e0       	ldi	r23, 0x00	; 0
   15f16:	80 e0       	ldi	r24, 0x00	; 0
   15f18:	90 e0       	ldi	r25, 0x00	; 0
   15f1a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   15f1e:	e0 16       	cp	r14, r16
   15f20:	f1 06       	cpc	r15, r17
   15f22:	59 f7       	brne	.-42     	; 0x15efa <_Z22Valve_Grouping_Handlerh+0x4f4>
   15f24:	c5 c7       	rjmp	.+3978   	; 0x16eb0 <_Z22Valve_Grouping_Handlerh+0x14aa>
   15f26:	b1 e0       	ldi	r27, 0x01	; 1
   15f28:	5b 12       	cpse	r5, r27
   15f2a:	0f c1       	rjmp	.+542    	; 0x1614a <_Z22Valve_Grouping_Handlerh+0x744>
   15f2c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   15f30:	81 30       	cpi	r24, 0x01	; 1
   15f32:	51 f4       	brne	.+20     	; 0x15f48 <_Z22Valve_Grouping_Handlerh+0x542>
   15f34:	69 ea       	ldi	r22, 0xA9	; 169
   15f36:	7e e3       	ldi	r23, 0x3E	; 62
   15f38:	82 e5       	ldi	r24, 0x52	; 82
   15f3a:	94 e1       	ldi	r25, 0x14	; 20
   15f3c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15f40:	82 e5       	ldi	r24, 0x52	; 82
   15f42:	94 e1       	ldi	r25, 0x14	; 20
   15f44:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   15f48:	07 eb       	ldi	r16, 0xB7	; 183
   15f4a:	1b e0       	ldi	r17, 0x0B	; 11
   15f4c:	44 e0       	ldi	r20, 0x04	; 4
   15f4e:	c4 2e       	mov	r12, r20
   15f50:	d1 2c       	mov	r13, r1
   15f52:	e1 2c       	mov	r14, r1
   15f54:	f1 2c       	mov	r15, r1
   15f56:	f8 01       	movw	r30, r16
   15f58:	82 85       	ldd	r24, Z+10	; 0x0a
   15f5a:	88 23       	and	r24, r24
   15f5c:	09 f1       	breq	.+66     	; 0x15fa0 <_Z22Valve_Grouping_Handlerh+0x59a>
   15f5e:	21 2c       	mov	r2, r1
   15f60:	40 e0       	ldi	r20, 0x00	; 0
   15f62:	36 c0       	rjmp	.+108    	; 0x15fd0 <_Z22Valve_Grouping_Handlerh+0x5ca>
   15f64:	ae 01       	movw	r20, r28
   15f66:	45 5d       	subi	r20, 0xD5	; 213
   15f68:	5f 4f       	sbci	r21, 0xFF	; 255
   15f6a:	5a 01       	movw	r10, r20
   15f6c:	33 24       	eor	r3, r3
   15f6e:	33 94       	inc	r3
   15f70:	5d e0       	ldi	r21, 0x0D	; 13
   15f72:	5e 9d       	mul	r21, r14
   15f74:	c0 01       	movw	r24, r0
   15f76:	5f 9d       	mul	r21, r15
   15f78:	90 0d       	add	r25, r0
   15f7a:	11 24       	eor	r1, r1
   15f7c:	bc 01       	movw	r22, r24
   15f7e:	69 54       	subi	r22, 0x49	; 73
   15f80:	74 4f       	sbci	r23, 0xF4	; 244
   15f82:	7c ab       	std	Y+52, r23	; 0x34
   15f84:	6b ab       	std	Y+51, r22	; 0x33
   15f86:	47 01       	movw	r8, r14
   15f88:	7f ef       	ldi	r23, 0xFF	; 255
   15f8a:	87 1a       	sub	r8, r23
   15f8c:	97 0a       	sbc	r9, r23
   15f8e:	d5 01       	movw	r26, r10
   15f90:	8d 91       	ld	r24, X+
   15f92:	5d 01       	movw	r10, r26
   15f94:	82 21       	and	r24, r2
   15f96:	41 f5       	brne	.+80     	; 0x15fe8 <_Z22Valve_Grouping_Handlerh+0x5e2>
   15f98:	33 94       	inc	r3
   15f9a:	34 e0       	ldi	r19, 0x04	; 4
   15f9c:	33 12       	cpse	r3, r19
   15f9e:	f7 cf       	rjmp	.-18     	; 0x15f8e <_Z22Valve_Grouping_Handlerh+0x588>
   15fa0:	ff ef       	ldi	r31, 0xFF	; 255
   15fa2:	ef 1a       	sub	r14, r31
   15fa4:	ff 0a       	sbc	r15, r31
   15fa6:	03 5f       	subi	r16, 0xF3	; 243
   15fa8:	1f 4f       	sbci	r17, 0xFF	; 255
   15faa:	23 e0       	ldi	r18, 0x03	; 3
   15fac:	c2 0e       	add	r12, r18
   15fae:	d1 1c       	adc	r13, r1
   15fb0:	37 e0       	ldi	r19, 0x07	; 7
   15fb2:	e3 16       	cp	r14, r19
   15fb4:	f1 04       	cpc	r15, r1
   15fb6:	79 f6       	brne	.-98     	; 0x15f56 <_Z22Valve_Grouping_Handlerh+0x550>
   15fb8:	cc c0       	rjmp	.+408    	; 0x16152 <_Z22Valve_Grouping_Handlerh+0x74c>
   15fba:	28 17       	cp	r18, r24
   15fbc:	39 07       	cpc	r19, r25
   15fbe:	11 f4       	brne	.+4      	; 0x15fc4 <_Z22Valve_Grouping_Handlerh+0x5be>
   15fc0:	50 81       	ld	r21, Z
   15fc2:	25 2a       	or	r2, r21
   15fc4:	01 96       	adiw	r24, 0x01	; 1
   15fc6:	31 96       	adiw	r30, 0x01	; 1
   15fc8:	c8 16       	cp	r12, r24
   15fca:	d9 06       	cpc	r13, r25
   15fcc:	b1 f7       	brne	.-20     	; 0x15fba <_Z22Valve_Grouping_Handlerh+0x5b4>
   15fce:	4f 5f       	subi	r20, 0xFF	; 255
   15fd0:	f3 01       	movw	r30, r6
   15fd2:	e4 0f       	add	r30, r20
   15fd4:	f1 1d       	adc	r31, r1
   15fd6:	20 81       	ld	r18, Z
   15fd8:	22 23       	and	r18, r18
   15fda:	21 f2       	breq	.-120    	; 0x15f64 <_Z22Valve_Grouping_Handlerh+0x55e>
   15fdc:	c6 01       	movw	r24, r12
   15fde:	03 97       	sbiw	r24, 0x03	; 3
   15fe0:	fe 01       	movw	r30, r28
   15fe2:	bb 96       	adiw	r30, 0x2b	; 43
   15fe4:	30 e0       	ldi	r19, 0x00	; 0
   15fe6:	e9 cf       	rjmp	.-46     	; 0x15fba <_Z22Valve_Grouping_Handlerh+0x5b4>
   15fe8:	e9 e7       	ldi	r30, 0x79	; 121
   15fea:	f3 e1       	ldi	r31, 0x13	; 19
   15fec:	24 e1       	ldi	r18, 0x14	; 20
   15fee:	11 92       	st	Z+, r1
   15ff0:	2a 95       	dec	r18
   15ff2:	e9 f7       	brne	.-6      	; 0x15fee <_Z22Valve_Grouping_Handlerh+0x5e8>
   15ff4:	d8 01       	movw	r26, r16
   15ff6:	11 96       	adiw	r26, 0x01	; 1
   15ff8:	8c 91       	ld	r24, X
   15ffa:	11 97       	sbiw	r26, 0x01	; 1
   15ffc:	80 93 79 13 	sts	0x1379, r24	; 0x801379 <_sRuble_Parameters+0x32>
   16000:	12 96       	adiw	r26, 0x02	; 2
   16002:	8c 91       	ld	r24, X
   16004:	12 97       	sbiw	r26, 0x02	; 2
   16006:	80 93 7a 13 	sts	0x137A, r24	; 0x80137a <_sRuble_Parameters+0x33>
   1600a:	13 96       	adiw	r26, 0x03	; 3
   1600c:	8c 91       	ld	r24, X
   1600e:	13 97       	sbiw	r26, 0x03	; 3
   16010:	80 93 7b 13 	sts	0x137B, r24	; 0x80137b <_sRuble_Parameters+0x34>
   16014:	14 96       	adiw	r26, 0x04	; 4
   16016:	8c 91       	ld	r24, X
   16018:	14 97       	sbiw	r26, 0x04	; 4
   1601a:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x35>
   1601e:	15 96       	adiw	r26, 0x05	; 5
   16020:	8c 91       	ld	r24, X
   16022:	15 97       	sbiw	r26, 0x05	; 5
   16024:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x36>
   16028:	16 96       	adiw	r26, 0x06	; 6
   1602a:	8c 91       	ld	r24, X
   1602c:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x37>
   16030:	b2 e0       	ldi	r27, 0x02	; 2
   16032:	b0 93 7f 13 	sts	0x137F, r27	; 0x80137f <_sRuble_Parameters+0x38>
   16036:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   1603a:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x3a>
   1603e:	30 92 84 13 	sts	0x1384, r3	; 0x801384 <_sRuble_Parameters+0x3d>
   16042:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16046:	81 30       	cpi	r24, 0x01	; 1
   16048:	39 f5       	brne	.+78     	; 0x16098 <_Z22Valve_Grouping_Handlerh+0x692>
   1604a:	65 e8       	ldi	r22, 0x85	; 133
   1604c:	7e e3       	ldi	r23, 0x3E	; 62
   1604e:	82 e5       	ldi	r24, 0x52	; 82
   16050:	94 e1       	ldi	r25, 0x14	; 20
   16052:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16056:	4a e0       	ldi	r20, 0x0A	; 10
   16058:	50 e0       	ldi	r21, 0x00	; 0
   1605a:	b4 01       	movw	r22, r8
   1605c:	82 e5       	ldi	r24, 0x52	; 82
   1605e:	94 e1       	ldi	r25, 0x14	; 20
   16060:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
   16064:	82 e5       	ldi	r24, 0x52	; 82
   16066:	94 e1       	ldi	r25, 0x14	; 20
   16068:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1606c:	60 e7       	ldi	r22, 0x70	; 112
   1606e:	7e e3       	ldi	r23, 0x3E	; 62
   16070:	82 e5       	ldi	r24, 0x52	; 82
   16072:	94 e1       	ldi	r25, 0x14	; 20
   16074:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16078:	46 e0       	ldi	r20, 0x06	; 6
   1607a:	50 e0       	ldi	r21, 0x00	; 0
   1607c:	69 e7       	ldi	r22, 0x79	; 121
   1607e:	73 e1       	ldi	r23, 0x13	; 19
   16080:	82 e5       	ldi	r24, 0x52	; 82
   16082:	94 e1       	ldi	r25, 0x14	; 20
   16084:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   16088:	82 e5       	ldi	r24, 0x52	; 82
   1608a:	94 e1       	ldi	r25, 0x14	; 20
   1608c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   16090:	82 e5       	ldi	r24, 0x52	; 82
   16092:	94 e1       	ldi	r25, 0x14	; 20
   16094:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16098:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   1609c:	8c e0       	ldi	r24, 0x0C	; 12
   1609e:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   160a2:	88 eb       	ldi	r24, 0xB8	; 184
   160a4:	9b e0       	ldi	r25, 0x0B	; 11
   160a6:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
   160aa:	88 23       	and	r24, r24
   160ac:	c9 f1       	breq	.+114    	; 0x16120 <_Z22Valve_Grouping_Handlerh+0x71a>
   160ae:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   160b2:	90 e0       	ldi	r25, 0x00	; 0
   160b4:	80 e0       	ldi	r24, 0x00	; 0
   160b6:	28 2f       	mov	r18, r24
   160b8:	30 e0       	ldi	r19, 0x00	; 0
   160ba:	eb a9       	ldd	r30, Y+51	; 0x33
   160bc:	fc a9       	ldd	r31, Y+52	; 0x34
   160be:	e2 0f       	add	r30, r18
   160c0:	f3 1f       	adc	r31, r19
   160c2:	d9 01       	movw	r26, r18
   160c4:	a3 57       	subi	r26, 0x73	; 115
   160c6:	bc 4e       	sbci	r27, 0xEC	; 236
   160c8:	41 81       	ldd	r20, Z+1	; 0x01
   160ca:	2c 91       	ld	r18, X
   160cc:	42 17       	cp	r20, r18
   160ce:	11 f0       	breq	.+4      	; 0x160d4 <_Z22Valve_Grouping_Handlerh+0x6ce>
   160d0:	90 e0       	ldi	r25, 0x00	; 0
   160d2:	86 e0       	ldi	r24, 0x06	; 6
   160d4:	9f 5f       	subi	r25, 0xFF	; 255
   160d6:	8f 5f       	subi	r24, 0xFF	; 255
   160d8:	86 30       	cpi	r24, 0x06	; 6
   160da:	68 f3       	brcs	.-38     	; 0x160b6 <_Z22Valve_Grouping_Handlerh+0x6b0>
   160dc:	96 30       	cpi	r25, 0x06	; 6
   160de:	c9 f4       	brne	.+50     	; 0x16112 <_Z22Valve_Grouping_Handlerh+0x70c>
   160e0:	21 e0       	ldi	r18, 0x01	; 1
   160e2:	f8 01       	movw	r30, r16
   160e4:	23 87       	std	Z+11, r18	; 0x0b
   160e6:	20 91 95 13 	lds	r18, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
   160ea:	22 87       	std	Z+10, r18	; 0x0a
   160ec:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
   160f0:	90 e0       	ldi	r25, 0x00	; 0
   160f2:	98 2f       	mov	r25, r24
   160f4:	88 27       	eor	r24, r24
   160f6:	30 91 97 13 	lds	r19, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
   160fa:	83 2b       	or	r24, r19
   160fc:	91 87       	std	Z+9, r25	; 0x09
   160fe:	80 87       	std	Z+8, r24	; 0x08
   16100:	22 23       	and	r18, r18
   16102:	e1 f0       	breq	.+56     	; 0x1613c <_Z22Valve_Grouping_Handlerh+0x736>
   16104:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16108:	81 30       	cpi	r24, 0x01	; 1
   1610a:	c1 f4       	brne	.+48     	; 0x1613c <_Z22Valve_Grouping_Handlerh+0x736>
   1610c:	6a e4       	ldi	r22, 0x4A	; 74
   1610e:	7e e3       	ldi	r23, 0x3E	; 62
   16110:	0d c0       	rjmp	.+26     	; 0x1612c <_Z22Valve_Grouping_Handlerh+0x726>
   16112:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16116:	81 30       	cpi	r24, 0x01	; 1
   16118:	89 f4       	brne	.+34     	; 0x1613c <_Z22Valve_Grouping_Handlerh+0x736>
   1611a:	68 e2       	ldi	r22, 0x28	; 40
   1611c:	7e e3       	ldi	r23, 0x3E	; 62
   1611e:	06 c0       	rjmp	.+12     	; 0x1612c <_Z22Valve_Grouping_Handlerh+0x726>
   16120:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16124:	81 30       	cpi	r24, 0x01	; 1
   16126:	51 f4       	brne	.+20     	; 0x1613c <_Z22Valve_Grouping_Handlerh+0x736>
   16128:	6a ef       	ldi	r22, 0xFA	; 250
   1612a:	7d e3       	ldi	r23, 0x3D	; 61
   1612c:	82 e5       	ldi	r24, 0x52	; 82
   1612e:	94 e1       	ldi	r25, 0x14	; 20
   16130:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16134:	82 e5       	ldi	r24, 0x52	; 82
   16136:	94 e1       	ldi	r25, 0x14	; 20
   16138:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1613c:	68 ee       	ldi	r22, 0xE8	; 232
   1613e:	73 e0       	ldi	r23, 0x03	; 3
   16140:	80 e0       	ldi	r24, 0x00	; 0
   16142:	90 e0       	ldi	r25, 0x00	; 0
   16144:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16148:	27 cf       	rjmp	.-434    	; 0x15f98 <_Z22Valve_Grouping_Handlerh+0x592>
   1614a:	41 e0       	ldi	r20, 0x01	; 1
   1614c:	45 15       	cp	r20, r5
   1614e:	08 f4       	brcc	.+2      	; 0x16152 <_Z22Valve_Grouping_Handlerh+0x74c>
   16150:	ae c6       	rjmp	.+3420   	; 0x16eae <_Z22Valve_Grouping_Handlerh+0x14a8>
   16152:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16156:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1615a:	9f 30       	cpi	r25, 0x0F	; 15
   1615c:	08 f0       	brcs	.+2      	; 0x16160 <_Z22Valve_Grouping_Handlerh+0x75a>
   1615e:	5e c3       	rjmp	.+1724   	; 0x1681c <_Z22Valve_Grouping_Handlerh+0xe16>
   16160:	81 30       	cpi	r24, 0x01	; 1
   16162:	51 f4       	brne	.+20     	; 0x16178 <_Z22Valve_Grouping_Handlerh+0x772>
   16164:	6c ee       	ldi	r22, 0xEC	; 236
   16166:	7d e3       	ldi	r23, 0x3D	; 61
   16168:	82 e5       	ldi	r24, 0x52	; 82
   1616a:	94 e1       	ldi	r25, 0x14	; 20
   1616c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16170:	82 e5       	ldi	r24, 0x52	; 82
   16172:	94 e1       	ldi	r25, 0x14	; 20
   16174:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16178:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1617c:	81 30       	cpi	r24, 0x01	; 1
   1617e:	c1 f5       	brne	.+112    	; 0x161f0 <_Z22Valve_Grouping_Handlerh+0x7ea>
   16180:	00 e0       	ldi	r16, 0x00	; 0
   16182:	10 e0       	ldi	r17, 0x00	; 0
   16184:	b6 e0       	ldi	r27, 0x06	; 6
   16186:	fb 2e       	mov	r15, r27
   16188:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   1618c:	90 e0       	ldi	r25, 0x00	; 0
   1618e:	01 97       	sbiw	r24, 0x01	; 1
   16190:	f8 9e       	mul	r15, r24
   16192:	f0 01       	movw	r30, r0
   16194:	f9 9e       	mul	r15, r25
   16196:	f0 0d       	add	r31, r0
   16198:	11 24       	eor	r1, r1
   1619a:	e3 50       	subi	r30, 0x03	; 3
   1619c:	f3 4f       	sbci	r31, 0xF3	; 243
   1619e:	e0 0f       	add	r30, r16
   161a0:	f1 1f       	adc	r31, r17
   161a2:	4a e0       	ldi	r20, 0x0A	; 10
   161a4:	50 e0       	ldi	r21, 0x00	; 0
   161a6:	61 81       	ldd	r22, Z+1	; 0x01
   161a8:	82 e5       	ldi	r24, 0x52	; 82
   161aa:	94 e1       	ldi	r25, 0x14	; 20
   161ac:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   161b0:	6a ee       	ldi	r22, 0xEA	; 234
   161b2:	7d e3       	ldi	r23, 0x3D	; 61
   161b4:	82 e5       	ldi	r24, 0x52	; 82
   161b6:	94 e1       	ldi	r25, 0x14	; 20
   161b8:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   161bc:	0f 5f       	subi	r16, 0xFF	; 255
   161be:	1f 4f       	sbci	r17, 0xFF	; 255
   161c0:	05 30       	cpi	r16, 0x05	; 5
   161c2:	11 05       	cpc	r17, r1
   161c4:	09 f7       	brne	.-62     	; 0x16188 <_Z22Valve_Grouping_Handlerh+0x782>
   161c6:	64 ed       	ldi	r22, 0xD4	; 212
   161c8:	7d e3       	ldi	r23, 0x3D	; 61
   161ca:	82 e5       	ldi	r24, 0x52	; 82
   161cc:	94 e1       	ldi	r25, 0x14	; 20
   161ce:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   161d2:	60 91 a2 13 	lds	r22, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   161d6:	70 e0       	ldi	r23, 0x00	; 0
   161d8:	61 50       	subi	r22, 0x01	; 1
   161da:	71 09       	sbc	r23, r1
   161dc:	4a e0       	ldi	r20, 0x0A	; 10
   161de:	50 e0       	ldi	r21, 0x00	; 0
   161e0:	82 e5       	ldi	r24, 0x52	; 82
   161e2:	94 e1       	ldi	r25, 0x14	; 20
   161e4:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
   161e8:	82 e5       	ldi	r24, 0x52	; 82
   161ea:	94 e1       	ldi	r25, 0x14	; 20
   161ec:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   161f0:	00 e0       	ldi	r16, 0x00	; 0
   161f2:	10 e0       	ldi	r17, 0x00	; 0
   161f4:	81 e0       	ldi	r24, 0x01	; 1
   161f6:	85 25       	eor	r24, r5
   161f8:	81 70       	andi	r24, 0x01	; 1
   161fa:	8d ab       	std	Y+53, r24	; 0x35
   161fc:	ad e0       	ldi	r26, 0x0D	; 13
   161fe:	2a 2e       	mov	r2, r26
   16200:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16204:	90 e0       	ldi	r25, 0x00	; 0
   16206:	01 97       	sbiw	r24, 0x01	; 1
   16208:	56 e0       	ldi	r21, 0x06	; 6
   1620a:	58 9f       	mul	r21, r24
   1620c:	f0 01       	movw	r30, r0
   1620e:	59 9f       	mul	r21, r25
   16210:	f0 0d       	add	r31, r0
   16212:	11 24       	eor	r1, r1
   16214:	e3 50       	subi	r30, 0x03	; 3
   16216:	f3 4f       	sbci	r31, 0xF3	; 243
   16218:	e0 0f       	add	r30, r16
   1621a:	f1 1f       	adc	r31, r17
   1621c:	f1 80       	ldd	r15, Z+1	; 0x01
   1621e:	8f ef       	ldi	r24, 0xFF	; 255
   16220:	8f 0d       	add	r24, r15
   16222:	85 31       	cpi	r24, 0x15	; 21
   16224:	08 f0       	brcs	.+2      	; 0x16228 <_Z22Valve_Grouping_Handlerh+0x822>
   16226:	c1 c2       	rjmp	.+1410   	; 0x167aa <_Z22Valve_Grouping_Handlerh+0xda4>
   16228:	63 e0       	ldi	r22, 0x03	; 3
   1622a:	6f 15       	cp	r22, r15
   1622c:	a0 f4       	brcc	.+40     	; 0x16256 <_Z22Valve_Grouping_Handlerh+0x850>
   1622e:	8f 2d       	mov	r24, r15
   16230:	0e 94 ab e7 	call	0x1cf56	; 0x1cf56 <__udivmodqi4>
   16234:	2b ea       	ldi	r18, 0xAB	; 171
   16236:	f2 9e       	mul	r15, r18
   16238:	21 2d       	mov	r18, r1
   1623a:	11 24       	eor	r1, r1
   1623c:	99 23       	and	r25, r25
   1623e:	31 f0       	breq	.+12     	; 0x1624c <_Z22Valve_Grouping_Handlerh+0x846>
   16240:	26 95       	lsr	r18
   16242:	ee 24       	eor	r14, r14
   16244:	e3 94       	inc	r14
   16246:	e2 0e       	add	r14, r18
   16248:	f9 2e       	mov	r15, r25
   1624a:	07 c0       	rjmp	.+14     	; 0x1625a <_Z22Valve_Grouping_Handlerh+0x854>
   1624c:	e2 2e       	mov	r14, r18
   1624e:	e6 94       	lsr	r14
   16250:	f3 e0       	ldi	r31, 0x03	; 3
   16252:	ff 2e       	mov	r15, r31
   16254:	02 c0       	rjmp	.+4      	; 0x1625a <_Z22Valve_Grouping_Handlerh+0x854>
   16256:	ee 24       	eor	r14, r14
   16258:	e3 94       	inc	r14
   1625a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1625e:	81 30       	cpi	r24, 0x01	; 1
   16260:	89 f4       	brne	.+34     	; 0x16284 <_Z22Valve_Grouping_Handlerh+0x87e>
   16262:	60 ec       	ldi	r22, 0xC0	; 192
   16264:	7d e3       	ldi	r23, 0x3D	; 61
   16266:	82 e5       	ldi	r24, 0x52	; 82
   16268:	94 e1       	ldi	r25, 0x14	; 20
   1626a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1626e:	4a e0       	ldi	r20, 0x0A	; 10
   16270:	50 e0       	ldi	r21, 0x00	; 0
   16272:	6e 2d       	mov	r22, r14
   16274:	82 e5       	ldi	r24, 0x52	; 82
   16276:	94 e1       	ldi	r25, 0x14	; 20
   16278:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   1627c:	82 e5       	ldi	r24, 0x52	; 82
   1627e:	94 e1       	ldi	r25, 0x14	; 20
   16280:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16284:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   16288:	81 11       	cpse	r24, r1
   1628a:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   1628e:	a9 e7       	ldi	r26, 0x79	; 121
   16290:	b3 e1       	ldi	r27, 0x13	; 19
   16292:	e4 e1       	ldi	r30, 0x14	; 20
   16294:	1d 92       	st	X+, r1
   16296:	ea 95       	dec	r30
   16298:	e9 f7       	brne	.-6      	; 0x16294 <_Z22Valve_Grouping_Handlerh+0x88e>
   1629a:	2e 2d       	mov	r18, r14
   1629c:	30 e0       	ldi	r19, 0x00	; 0
   1629e:	21 50       	subi	r18, 0x01	; 1
   162a0:	31 09       	sbc	r19, r1
   162a2:	f7 e0       	ldi	r31, 0x07	; 7
   162a4:	f2 9f       	mul	r31, r18
   162a6:	c0 01       	movw	r24, r0
   162a8:	f3 9f       	mul	r31, r19
   162aa:	90 0d       	add	r25, r0
   162ac:	11 24       	eor	r1, r1
   162ae:	89 5b       	subi	r24, 0xB9	; 185
   162b0:	9c 4e       	sbci	r25, 0xEC	; 236
   162b2:	fc 01       	movw	r30, r24
   162b4:	e1 5a       	subi	r30, 0xA1	; 161
   162b6:	ff 4f       	sbci	r31, 0xFF	; 255
   162b8:	20 81       	ld	r18, Z
   162ba:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
   162be:	31 96       	adiw	r30, 0x01	; 1
   162c0:	20 81       	ld	r18, Z
   162c2:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
   162c6:	31 96       	adiw	r30, 0x01	; 1
   162c8:	20 81       	ld	r18, Z
   162ca:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
   162ce:	31 96       	adiw	r30, 0x01	; 1
   162d0:	20 81       	ld	r18, Z
   162d2:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
   162d6:	31 96       	adiw	r30, 0x01	; 1
   162d8:	20 81       	ld	r18, Z
   162da:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
   162de:	31 96       	adiw	r30, 0x01	; 1
   162e0:	20 81       	ld	r18, Z
   162e2:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
   162e6:	22 e0       	ldi	r18, 0x02	; 2
   162e8:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x38>
   162ec:	50 92 80 13 	sts	0x1380, r5	; 0x801380 <_sRuble_Parameters+0x39>
   162f0:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   162f4:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
   162f8:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   162fc:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
   16300:	f0 92 84 13 	sts	0x1384, r15	; 0x801384 <_sRuble_Parameters+0x3d>
   16304:	40 e0       	ldi	r20, 0x00	; 0
   16306:	50 e0       	ldi	r21, 0x00	; 0
   16308:	d4 2e       	mov	r13, r20
   1630a:	e1 2c       	mov	r14, r1
   1630c:	f1 2c       	mov	r15, r1
   1630e:	24 9e       	mul	r2, r20
   16310:	b0 01       	movw	r22, r0
   16312:	25 9e       	mul	r2, r21
   16314:	70 0d       	add	r23, r0
   16316:	11 24       	eor	r1, r1
   16318:	69 54       	subi	r22, 0x49	; 73
   1631a:	74 4f       	sbci	r23, 0xF4	; 244
   1631c:	2f 2d       	mov	r18, r15
   1631e:	30 e0       	ldi	r19, 0x00	; 0
   16320:	fb 01       	movw	r30, r22
   16322:	e2 0f       	add	r30, r18
   16324:	f3 1f       	adc	r31, r19
   16326:	28 0f       	add	r18, r24
   16328:	39 1f       	adc	r19, r25
   1632a:	d9 01       	movw	r26, r18
   1632c:	a1 5a       	subi	r26, 0xA1	; 161
   1632e:	bf 4f       	sbci	r27, 0xFF	; 255
   16330:	31 81       	ldd	r19, Z+1	; 0x01
   16332:	2c 91       	ld	r18, X
   16334:	32 17       	cp	r19, r18
   16336:	19 f0       	breq	.+6      	; 0x1633e <_Z22Valve_Grouping_Handlerh+0x938>
   16338:	e1 2c       	mov	r14, r1
   1633a:	e6 e0       	ldi	r30, 0x06	; 6
   1633c:	fe 2e       	mov	r15, r30
   1633e:	e3 94       	inc	r14
   16340:	f3 94       	inc	r15
   16342:	35 e0       	ldi	r19, 0x05	; 5
   16344:	3f 15       	cp	r19, r15
   16346:	50 f7       	brcc	.-44     	; 0x1631c <_Z22Valve_Grouping_Handlerh+0x916>
   16348:	66 e0       	ldi	r22, 0x06	; 6
   1634a:	e6 16       	cp	r14, r22
   1634c:	31 f0       	breq	.+12     	; 0x1635a <_Z22Valve_Grouping_Handlerh+0x954>
   1634e:	4f 5f       	subi	r20, 0xFF	; 255
   16350:	5f 4f       	sbci	r21, 0xFF	; 255
   16352:	47 30       	cpi	r20, 0x07	; 7
   16354:	51 05       	cpc	r21, r1
   16356:	c1 f6       	brne	.-80     	; 0x16308 <_Z22Valve_Grouping_Handlerh+0x902>
   16358:	01 c0       	rjmp	.+2      	; 0x1635c <_Z22Valve_Grouping_Handlerh+0x956>
   1635a:	4d 2c       	mov	r4, r13
   1635c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16360:	81 30       	cpi	r24, 0x01	; 1
   16362:	89 f4       	brne	.+34     	; 0x16386 <_Z22Valve_Grouping_Handlerh+0x980>
   16364:	6a ea       	ldi	r22, 0xAA	; 170
   16366:	7d e3       	ldi	r23, 0x3D	; 61
   16368:	82 e5       	ldi	r24, 0x52	; 82
   1636a:	94 e1       	ldi	r25, 0x14	; 20
   1636c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16370:	4a e0       	ldi	r20, 0x0A	; 10
   16372:	50 e0       	ldi	r21, 0x00	; 0
   16374:	64 2d       	mov	r22, r4
   16376:	82 e5       	ldi	r24, 0x52	; 82
   16378:	94 e1       	ldi	r25, 0x14	; 20
   1637a:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   1637e:	82 e5       	ldi	r24, 0x52	; 82
   16380:	94 e1       	ldi	r25, 0x14	; 20
   16382:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16386:	7d e0       	ldi	r23, 0x0D	; 13
   16388:	47 9e       	mul	r4, r23
   1638a:	40 01       	movw	r8, r0
   1638c:	11 24       	eor	r1, r1
   1638e:	31 2c       	mov	r3, r1
   16390:	24 9c       	mul	r2, r4
   16392:	c0 01       	movw	r24, r0
   16394:	11 24       	eor	r1, r1
   16396:	9c 01       	movw	r18, r24
   16398:	29 54       	subi	r18, 0x49	; 73
   1639a:	34 4f       	sbci	r19, 0xF4	; 244
   1639c:	d9 01       	movw	r26, r18
   1639e:	1b 96       	adiw	r26, 0x0b	; 11
   163a0:	bc ab       	std	Y+52, r27	; 0x34
   163a2:	ab ab       	std	Y+51, r26	; 0x33
   163a4:	39 01       	movw	r6, r18
   163a6:	b8 e0       	ldi	r27, 0x08	; 8
   163a8:	6b 0e       	add	r6, r27
   163aa:	71 1c       	adc	r7, r1
   163ac:	fc 01       	movw	r30, r24
   163ae:	e8 54       	subi	r30, 0x48	; 72
   163b0:	f4 4f       	sbci	r31, 0xF4	; 244
   163b2:	7f 01       	movw	r14, r30
   163b4:	33 94       	inc	r3
   163b6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   163ba:	81 30       	cpi	r24, 0x01	; 1
   163bc:	51 f4       	brne	.+20     	; 0x163d2 <_Z22Valve_Grouping_Handlerh+0x9cc>
   163be:	66 e8       	ldi	r22, 0x86	; 134
   163c0:	7d e3       	ldi	r23, 0x3D	; 61
   163c2:	82 e5       	ldi	r24, 0x52	; 82
   163c4:	94 e1       	ldi	r25, 0x14	; 20
   163c6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   163ca:	82 e5       	ldi	r24, 0x52	; 82
   163cc:	94 e1       	ldi	r25, 0x14	; 20
   163ce:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   163d2:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   163d6:	8c e0       	ldi	r24, 0x0C	; 12
   163d8:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   163dc:	88 eb       	ldi	r24, 0xB8	; 184
   163de:	9b e0       	ldi	r25, 0x0B	; 11
   163e0:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
   163e4:	88 23       	and	r24, r24
   163e6:	09 f4       	brne	.+2      	; 0x163ea <_Z22Valve_Grouping_Handlerh+0x9e4>
   163e8:	77 c1       	rjmp	.+750    	; 0x166d8 <_Z22Valve_Grouping_Handlerh+0xcd2>
   163ea:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   163ee:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   163f2:	88 23       	and	r24, r24
   163f4:	09 f4       	brne	.+2      	; 0x163f8 <_Z22Valve_Grouping_Handlerh+0x9f2>
   163f6:	15 c1       	rjmp	.+554    	; 0x16622 <_Z22Valve_Grouping_Handlerh+0xc1c>
   163f8:	91 30       	cpi	r25, 0x01	; 1
   163fa:	59 f5       	brne	.+86     	; 0x16452 <_Z22Valve_Grouping_Handlerh+0xa4c>
   163fc:	60 e7       	ldi	r22, 0x70	; 112
   163fe:	7d e3       	ldi	r23, 0x3D	; 61
   16400:	82 e5       	ldi	r24, 0x52	; 82
   16402:	94 e1       	ldi	r25, 0x14	; 20
   16404:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16408:	4a e0       	ldi	r20, 0x0A	; 10
   1640a:	50 e0       	ldi	r21, 0x00	; 0
   1640c:	6d e8       	ldi	r22, 0x8D	; 141
   1640e:	73 e1       	ldi	r23, 0x13	; 19
   16410:	82 e5       	ldi	r24, 0x52	; 82
   16412:	94 e1       	ldi	r25, 0x14	; 20
   16414:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   16418:	82 e5       	ldi	r24, 0x52	; 82
   1641a:	94 e1       	ldi	r25, 0x14	; 20
   1641c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   16420:	82 e5       	ldi	r24, 0x52	; 82
   16422:	94 e1       	ldi	r25, 0x14	; 20
   16424:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16428:	62 e5       	ldi	r22, 0x52	; 82
   1642a:	7d e3       	ldi	r23, 0x3D	; 61
   1642c:	82 e5       	ldi	r24, 0x52	; 82
   1642e:	94 e1       	ldi	r25, 0x14	; 20
   16430:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16434:	47 e0       	ldi	r20, 0x07	; 7
   16436:	50 e0       	ldi	r21, 0x00	; 0
   16438:	b7 01       	movw	r22, r14
   1643a:	82 e5       	ldi	r24, 0x52	; 82
   1643c:	94 e1       	ldi	r25, 0x14	; 20
   1643e:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
   16442:	82 e5       	ldi	r24, 0x52	; 82
   16444:	94 e1       	ldi	r25, 0x14	; 20
   16446:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   1644a:	82 e5       	ldi	r24, 0x52	; 82
   1644c:	94 e1       	ldi	r25, 0x14	; 20
   1644e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16452:	7d e8       	ldi	r23, 0x8D	; 141
   16454:	a7 2e       	mov	r10, r23
   16456:	73 e1       	ldi	r23, 0x13	; 19
   16458:	b7 2e       	mov	r11, r23
   1645a:	c1 2c       	mov	r12, r1
   1645c:	d1 2c       	mov	r13, r1
   1645e:	d5 01       	movw	r26, r10
   16460:	8d 91       	ld	r24, X+
   16462:	5d 01       	movw	r10, r26
   16464:	f4 01       	movw	r30, r8
   16466:	ec 0d       	add	r30, r12
   16468:	fd 1d       	adc	r31, r13
   1646a:	e9 54       	subi	r30, 0x49	; 73
   1646c:	f4 4f       	sbci	r31, 0xF4	; 244
   1646e:	91 81       	ldd	r25, Z+1	; 0x01
   16470:	98 17       	cp	r25, r24
   16472:	09 f4       	brne	.+2      	; 0x16476 <_Z22Valve_Grouping_Handlerh+0xa70>
   16474:	5d c0       	rjmp	.+186    	; 0x16530 <_Z22Valve_Grouping_Handlerh+0xb2a>
   16476:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1647a:	81 30       	cpi	r24, 0x01	; 1
   1647c:	51 f4       	brne	.+20     	; 0x16492 <_Z22Valve_Grouping_Handlerh+0xa8c>
   1647e:	67 e2       	ldi	r22, 0x27	; 39
   16480:	7d e3       	ldi	r23, 0x3D	; 61
   16482:	82 e5       	ldi	r24, 0x52	; 82
   16484:	94 e1       	ldi	r25, 0x14	; 20
   16486:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1648a:	82 e5       	ldi	r24, 0x52	; 82
   1648c:	94 e1       	ldi	r25, 0x14	; 20
   1648e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16492:	b2 e0       	ldi	r27, 0x02	; 2
   16494:	3b 12       	cpse	r3, r27
   16496:	4c c0       	rjmp	.+152    	; 0x16530 <_Z22Valve_Grouping_Handlerh+0xb2a>
   16498:	86 e0       	ldi	r24, 0x06	; 6
   1649a:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   1649e:	84 e6       	ldi	r24, 0x64	; 100
   164a0:	90 e0       	ldi	r25, 0x00	; 0
   164a2:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   164a6:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   164aa:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   164ae:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   164b2:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   164b6:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   164ba:	a0 62       	ori	r26, 0x20	; 32
   164bc:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   164c0:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   164c4:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   164c8:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   164cc:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   164d0:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   164d4:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   164d8:	82 60       	ori	r24, 0x02	; 2
   164da:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   164de:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   164e2:	00 e0       	ldi	r16, 0x00	; 0
   164e4:	10 e0       	ldi	r17, 0x00	; 0
   164e6:	66 e0       	ldi	r22, 0x06	; 6
   164e8:	f6 2e       	mov	r15, r22
   164ea:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   164ee:	90 e0       	ldi	r25, 0x00	; 0
   164f0:	01 97       	sbiw	r24, 0x01	; 1
   164f2:	f8 9e       	mul	r15, r24
   164f4:	f0 01       	movw	r30, r0
   164f6:	f9 9e       	mul	r15, r25
   164f8:	f0 0d       	add	r31, r0
   164fa:	11 24       	eor	r1, r1
   164fc:	e3 50       	subi	r30, 0x03	; 3
   164fe:	f3 4f       	sbci	r31, 0xF3	; 243
   16500:	e0 0f       	add	r30, r16
   16502:	f1 1f       	adc	r31, r17
   16504:	e1 81       	ldd	r30, Z+1	; 0x01
   16506:	e6 31       	cpi	r30, 0x16	; 22
   16508:	68 f0       	brcs	.+26     	; 0x16524 <_Z22Valve_Grouping_Handlerh+0xb1e>
   1650a:	f0 e0       	ldi	r31, 0x00	; 0
   1650c:	ef 53       	subi	r30, 0x3F	; 63
   1650e:	fc 4e       	sbci	r31, 0xEC	; 236
   16510:	61 e0       	ldi	r22, 0x01	; 1
   16512:	80 81       	ld	r24, Z
   16514:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   16518:	68 ec       	ldi	r22, 0xC8	; 200
   1651a:	70 e0       	ldi	r23, 0x00	; 0
   1651c:	80 e0       	ldi	r24, 0x00	; 0
   1651e:	90 e0       	ldi	r25, 0x00	; 0
   16520:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16524:	0f 5f       	subi	r16, 0xFF	; 255
   16526:	1f 4f       	sbci	r17, 0xFF	; 255
   16528:	05 30       	cpi	r16, 0x05	; 5
   1652a:	11 05       	cpc	r17, r1
   1652c:	f1 f6       	brne	.-68     	; 0x164ea <_Z22Valve_Grouping_Handlerh+0xae4>
   1652e:	6a c4       	rjmp	.+2260   	; 0x16e04 <_Z22Valve_Grouping_Handlerh+0x13fe>
   16530:	ef ef       	ldi	r30, 0xFF	; 255
   16532:	ce 1a       	sub	r12, r30
   16534:	de 0a       	sbc	r13, r30
   16536:	f6 e0       	ldi	r31, 0x06	; 6
   16538:	cf 16       	cp	r12, r31
   1653a:	d1 04       	cpc	r13, r1
   1653c:	09 f0       	breq	.+2      	; 0x16540 <_Z22Valve_Grouping_Handlerh+0xb3a>
   1653e:	8f cf       	rjmp	.-226    	; 0x1645e <_Z22Valve_Grouping_Handlerh+0xa58>
   16540:	e1 e0       	ldi	r30, 0x01	; 1
   16542:	ab a9       	ldd	r26, Y+51	; 0x33
   16544:	bc a9       	ldd	r27, Y+52	; 0x34
   16546:	ec 93       	st	X, r30
   16548:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
   1654c:	90 e0       	ldi	r25, 0x00	; 0
   1654e:	98 2f       	mov	r25, r24
   16550:	88 27       	eor	r24, r24
   16552:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
   16556:	82 2b       	or	r24, r18
   16558:	d3 01       	movw	r26, r6
   1655a:	8d 93       	st	X+, r24
   1655c:	9c 93       	st	X, r25
   1655e:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
   16562:	58 16       	cp	r5, r24
   16564:	09 f4       	brne	.+2      	; 0x16568 <_Z22Valve_Grouping_Handlerh+0xb62>
   16566:	15 c1       	rjmp	.+554    	; 0x16792 <_Z22Valve_Grouping_Handlerh+0xd8c>
   16568:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1656c:	81 30       	cpi	r24, 0x01	; 1
   1656e:	51 f4       	brne	.+20     	; 0x16584 <_Z22Valve_Grouping_Handlerh+0xb7e>
   16570:	64 e1       	ldi	r22, 0x14	; 20
   16572:	7d e3       	ldi	r23, 0x3D	; 61
   16574:	82 e5       	ldi	r24, 0x52	; 82
   16576:	94 e1       	ldi	r25, 0x14	; 20
   16578:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1657c:	82 e5       	ldi	r24, 0x52	; 82
   1657e:	94 e1       	ldi	r25, 0x14	; 20
   16580:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16584:	b2 e0       	ldi	r27, 0x02	; 2
   16586:	3b 12       	cpse	r3, r27
   16588:	06 c1       	rjmp	.+524    	; 0x16796 <_Z22Valve_Grouping_Handlerh+0xd90>
   1658a:	86 e0       	ldi	r24, 0x06	; 6
   1658c:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   16590:	84 e6       	ldi	r24, 0x64	; 100
   16592:	90 e0       	ldi	r25, 0x00	; 0
   16594:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16598:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   1659c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   165a0:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   165a4:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   165a8:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   165ac:	a0 62       	ori	r26, 0x20	; 32
   165ae:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   165b2:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   165b6:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   165ba:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   165be:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   165c2:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   165c6:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   165ca:	82 60       	ori	r24, 0x02	; 2
   165cc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   165d0:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   165d4:	00 e0       	ldi	r16, 0x00	; 0
   165d6:	10 e0       	ldi	r17, 0x00	; 0
   165d8:	46 e0       	ldi	r20, 0x06	; 6
   165da:	f4 2e       	mov	r15, r20
   165dc:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   165e0:	90 e0       	ldi	r25, 0x00	; 0
   165e2:	01 97       	sbiw	r24, 0x01	; 1
   165e4:	f8 9e       	mul	r15, r24
   165e6:	f0 01       	movw	r30, r0
   165e8:	f9 9e       	mul	r15, r25
   165ea:	f0 0d       	add	r31, r0
   165ec:	11 24       	eor	r1, r1
   165ee:	e3 50       	subi	r30, 0x03	; 3
   165f0:	f3 4f       	sbci	r31, 0xF3	; 243
   165f2:	e0 0f       	add	r30, r16
   165f4:	f1 1f       	adc	r31, r17
   165f6:	e1 81       	ldd	r30, Z+1	; 0x01
   165f8:	e6 31       	cpi	r30, 0x16	; 22
   165fa:	68 f0       	brcs	.+26     	; 0x16616 <_Z22Valve_Grouping_Handlerh+0xc10>
   165fc:	f0 e0       	ldi	r31, 0x00	; 0
   165fe:	ef 53       	subi	r30, 0x3F	; 63
   16600:	fc 4e       	sbci	r31, 0xEC	; 236
   16602:	61 e0       	ldi	r22, 0x01	; 1
   16604:	80 81       	ld	r24, Z
   16606:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1660a:	68 ec       	ldi	r22, 0xC8	; 200
   1660c:	70 e0       	ldi	r23, 0x00	; 0
   1660e:	80 e0       	ldi	r24, 0x00	; 0
   16610:	90 e0       	ldi	r25, 0x00	; 0
   16612:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16616:	0f 5f       	subi	r16, 0xFF	; 255
   16618:	1f 4f       	sbci	r17, 0xFF	; 255
   1661a:	05 30       	cpi	r16, 0x05	; 5
   1661c:	11 05       	cpc	r17, r1
   1661e:	f1 f6       	brne	.-68     	; 0x165dc <_Z22Valve_Grouping_Handlerh+0xbd6>
   16620:	f1 c3       	rjmp	.+2018   	; 0x16e04 <_Z22Valve_Grouping_Handlerh+0x13fe>
   16622:	91 30       	cpi	r25, 0x01	; 1
   16624:	51 f4       	brne	.+20     	; 0x1663a <_Z22Valve_Grouping_Handlerh+0xc34>
   16626:	69 ed       	ldi	r22, 0xD9	; 217
   16628:	7c e3       	ldi	r23, 0x3C	; 60
   1662a:	82 e5       	ldi	r24, 0x52	; 82
   1662c:	94 e1       	ldi	r25, 0x14	; 20
   1662e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16632:	82 e5       	ldi	r24, 0x52	; 82
   16634:	94 e1       	ldi	r25, 0x14	; 20
   16636:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1663a:	e2 e0       	ldi	r30, 0x02	; 2
   1663c:	3e 12       	cpse	r3, r30
   1663e:	ab c0       	rjmp	.+342    	; 0x16796 <_Z22Valve_Grouping_Handlerh+0xd90>
   16640:	86 e0       	ldi	r24, 0x06	; 6
   16642:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   16646:	84 e6       	ldi	r24, 0x64	; 100
   16648:	90 e0       	ldi	r25, 0x00	; 0
   1664a:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   1664e:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16652:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16656:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1665a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1665e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16662:	a0 62       	ori	r26, 0x20	; 32
   16664:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16668:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1666c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16670:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16674:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   16678:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1667c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   16680:	82 60       	ori	r24, 0x02	; 2
   16682:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   16686:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1668a:	00 e0       	ldi	r16, 0x00	; 0
   1668c:	10 e0       	ldi	r17, 0x00	; 0
   1668e:	36 e0       	ldi	r19, 0x06	; 6
   16690:	f3 2e       	mov	r15, r19
   16692:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16696:	90 e0       	ldi	r25, 0x00	; 0
   16698:	01 97       	sbiw	r24, 0x01	; 1
   1669a:	f8 9e       	mul	r15, r24
   1669c:	f0 01       	movw	r30, r0
   1669e:	f9 9e       	mul	r15, r25
   166a0:	f0 0d       	add	r31, r0
   166a2:	11 24       	eor	r1, r1
   166a4:	e3 50       	subi	r30, 0x03	; 3
   166a6:	f3 4f       	sbci	r31, 0xF3	; 243
   166a8:	e0 0f       	add	r30, r16
   166aa:	f1 1f       	adc	r31, r17
   166ac:	e1 81       	ldd	r30, Z+1	; 0x01
   166ae:	e6 31       	cpi	r30, 0x16	; 22
   166b0:	68 f0       	brcs	.+26     	; 0x166cc <_Z22Valve_Grouping_Handlerh+0xcc6>
   166b2:	f0 e0       	ldi	r31, 0x00	; 0
   166b4:	ef 53       	subi	r30, 0x3F	; 63
   166b6:	fc 4e       	sbci	r31, 0xEC	; 236
   166b8:	61 e0       	ldi	r22, 0x01	; 1
   166ba:	80 81       	ld	r24, Z
   166bc:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   166c0:	68 ec       	ldi	r22, 0xC8	; 200
   166c2:	70 e0       	ldi	r23, 0x00	; 0
   166c4:	80 e0       	ldi	r24, 0x00	; 0
   166c6:	90 e0       	ldi	r25, 0x00	; 0
   166c8:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   166cc:	0f 5f       	subi	r16, 0xFF	; 255
   166ce:	1f 4f       	sbci	r17, 0xFF	; 255
   166d0:	05 30       	cpi	r16, 0x05	; 5
   166d2:	11 05       	cpc	r17, r1
   166d4:	f1 f6       	brne	.-68     	; 0x16692 <_Z22Valve_Grouping_Handlerh+0xc8c>
   166d6:	96 c3       	rjmp	.+1836   	; 0x16e04 <_Z22Valve_Grouping_Handlerh+0x13fe>
   166d8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   166dc:	81 30       	cpi	r24, 0x01	; 1
   166de:	51 f4       	brne	.+20     	; 0x166f4 <_Z22Valve_Grouping_Handlerh+0xcee>
   166e0:	6e e9       	ldi	r22, 0x9E	; 158
   166e2:	7c e3       	ldi	r23, 0x3C	; 60
   166e4:	82 e5       	ldi	r24, 0x52	; 82
   166e6:	94 e1       	ldi	r25, 0x14	; 20
   166e8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   166ec:	82 e5       	ldi	r24, 0x52	; 82
   166ee:	94 e1       	ldi	r25, 0x14	; 20
   166f0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   166f4:	f2 e0       	ldi	r31, 0x02	; 2
   166f6:	3f 12       	cpse	r3, r31
   166f8:	4e c0       	rjmp	.+156    	; 0x16796 <_Z22Valve_Grouping_Handlerh+0xd90>
   166fa:	86 e0       	ldi	r24, 0x06	; 6
   166fc:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   16700:	84 e6       	ldi	r24, 0x64	; 100
   16702:	90 e0       	ldi	r25, 0x00	; 0
   16704:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16708:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   1670c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16710:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16714:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16718:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   1671c:	a0 62       	ori	r26, 0x20	; 32
   1671e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16722:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16726:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   1672a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   1672e:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   16732:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   16736:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1673a:	82 60       	ori	r24, 0x02	; 2
   1673c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   16740:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   16744:	00 e0       	ldi	r16, 0x00	; 0
   16746:	10 e0       	ldi	r17, 0x00	; 0
   16748:	26 e0       	ldi	r18, 0x06	; 6
   1674a:	f2 2e       	mov	r15, r18
   1674c:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16750:	90 e0       	ldi	r25, 0x00	; 0
   16752:	01 97       	sbiw	r24, 0x01	; 1
   16754:	f8 9e       	mul	r15, r24
   16756:	f0 01       	movw	r30, r0
   16758:	f9 9e       	mul	r15, r25
   1675a:	f0 0d       	add	r31, r0
   1675c:	11 24       	eor	r1, r1
   1675e:	e3 50       	subi	r30, 0x03	; 3
   16760:	f3 4f       	sbci	r31, 0xF3	; 243
   16762:	e0 0f       	add	r30, r16
   16764:	f1 1f       	adc	r31, r17
   16766:	e1 81       	ldd	r30, Z+1	; 0x01
   16768:	e6 31       	cpi	r30, 0x16	; 22
   1676a:	68 f0       	brcs	.+26     	; 0x16786 <_Z22Valve_Grouping_Handlerh+0xd80>
   1676c:	f0 e0       	ldi	r31, 0x00	; 0
   1676e:	ef 53       	subi	r30, 0x3F	; 63
   16770:	fc 4e       	sbci	r31, 0xEC	; 236
   16772:	61 e0       	ldi	r22, 0x01	; 1
   16774:	80 81       	ld	r24, Z
   16776:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1677a:	68 ec       	ldi	r22, 0xC8	; 200
   1677c:	70 e0       	ldi	r23, 0x00	; 0
   1677e:	80 e0       	ldi	r24, 0x00	; 0
   16780:	90 e0       	ldi	r25, 0x00	; 0
   16782:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16786:	0f 5f       	subi	r16, 0xFF	; 255
   16788:	1f 4f       	sbci	r17, 0xFF	; 255
   1678a:	05 30       	cpi	r16, 0x05	; 5
   1678c:	11 05       	cpc	r17, r1
   1678e:	f1 f6       	brne	.-68     	; 0x1674c <_Z22Valve_Grouping_Handlerh+0xd46>
   16790:	39 c3       	rjmp	.+1650   	; 0x16e04 <_Z22Valve_Grouping_Handlerh+0x13fe>
   16792:	93 e0       	ldi	r25, 0x03	; 3
   16794:	39 2e       	mov	r3, r25
   16796:	68 ee       	ldi	r22, 0xE8	; 232
   16798:	73 e0       	ldi	r23, 0x03	; 3
   1679a:	80 e0       	ldi	r24, 0x00	; 0
   1679c:	90 e0       	ldi	r25, 0x00	; 0
   1679e:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   167a2:	23 e0       	ldi	r18, 0x03	; 3
   167a4:	32 12       	cpse	r3, r18
   167a6:	06 ce       	rjmp	.-1012   	; 0x163b4 <_Z22Valve_Grouping_Handlerh+0x9ae>
   167a8:	2b c0       	rjmp	.+86     	; 0x16800 <_Z22Valve_Grouping_Handlerh+0xdfa>
   167aa:	8a ee       	ldi	r24, 0xEA	; 234
   167ac:	8f 0d       	add	r24, r15
   167ae:	8e 34       	cpi	r24, 0x4E	; 78
   167b0:	78 f4       	brcc	.+30     	; 0x167d0 <_Z22Valve_Grouping_Handlerh+0xdca>
   167b2:	ef 2d       	mov	r30, r15
   167b4:	f0 e0       	ldi	r31, 0x00	; 0
   167b6:	ef 53       	subi	r30, 0x3F	; 63
   167b8:	fc 4e       	sbci	r31, 0xEC	; 236
   167ba:	6d a9       	ldd	r22, Y+53	; 0x35
   167bc:	80 81       	ld	r24, Z
   167be:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   167c2:	68 ec       	ldi	r22, 0xC8	; 200
   167c4:	70 e0       	ldi	r23, 0x00	; 0
   167c6:	80 e0       	ldi	r24, 0x00	; 0
   167c8:	90 e0       	ldi	r25, 0x00	; 0
   167ca:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   167ce:	18 c0       	rjmp	.+48     	; 0x16800 <_Z22Valve_Grouping_Handlerh+0xdfa>
   167d0:	35 e6       	ldi	r19, 0x65	; 101
   167d2:	f3 12       	cpse	r15, r19
   167d4:	15 c0       	rjmp	.+42     	; 0x16800 <_Z22Valve_Grouping_Handlerh+0xdfa>
   167d6:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   167da:	41 e0       	ldi	r20, 0x01	; 1
   167dc:	54 12       	cpse	r5, r20
   167de:	05 c0       	rjmp	.+10     	; 0x167ea <_Z22Valve_Grouping_Handlerh+0xde4>
   167e0:	88 23       	and	r24, r24
   167e2:	71 f0       	breq	.+28     	; 0x16800 <_Z22Valve_Grouping_Handlerh+0xdfa>
   167e4:	50 92 06 14 	sts	0x1406, r5	; 0x801406 <_sRuble_Parameters+0xbf>
   167e8:	05 c0       	rjmp	.+10     	; 0x167f4 <_Z22Valve_Grouping_Handlerh+0xdee>
   167ea:	88 23       	and	r24, r24
   167ec:	49 f0       	breq	.+18     	; 0x16800 <_Z22Valve_Grouping_Handlerh+0xdfa>
   167ee:	52 e0       	ldi	r21, 0x02	; 2
   167f0:	50 93 06 14 	sts	0x1406, r21	; 0x801406 <_sRuble_Parameters+0xbf>
   167f4:	66 e0       	ldi	r22, 0x06	; 6
   167f6:	74 e1       	ldi	r23, 0x14	; 20
   167f8:	88 ea       	ldi	r24, 0xA8	; 168
   167fa:	9c e0       	ldi	r25, 0x0C	; 12
   167fc:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16800:	0f 5f       	subi	r16, 0xFF	; 255
   16802:	1f 4f       	sbci	r17, 0xFF	; 255
   16804:	05 30       	cpi	r16, 0x05	; 5
   16806:	11 05       	cpc	r17, r1
   16808:	09 f0       	breq	.+2      	; 0x1680c <_Z22Valve_Grouping_Handlerh+0xe06>
   1680a:	fa cc       	rjmp	.-1548   	; 0x16200 <_Z22Valve_Grouping_Handlerh+0x7fa>
   1680c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16810:	81 30       	cpi	r24, 0x01	; 1
   16812:	09 f0       	breq	.+2      	; 0x16816 <_Z22Valve_Grouping_Handlerh+0xe10>
   16814:	4d c3       	rjmp	.+1690   	; 0x16eb0 <_Z22Valve_Grouping_Handlerh+0x14aa>
   16816:	6f e7       	ldi	r22, 0x7F	; 127
   16818:	7c e3       	ldi	r23, 0x3C	; 60
   1681a:	40 c3       	rjmp	.+1664   	; 0x16e9c <_Z22Valve_Grouping_Handlerh+0x1496>
   1681c:	81 30       	cpi	r24, 0x01	; 1
   1681e:	51 f4       	brne	.+20     	; 0x16834 <_Z22Valve_Grouping_Handlerh+0xe2e>
   16820:	61 e7       	ldi	r22, 0x71	; 113
   16822:	7c e3       	ldi	r23, 0x3C	; 60
   16824:	82 e5       	ldi	r24, 0x52	; 82
   16826:	94 e1       	ldi	r25, 0x14	; 20
   16828:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1682c:	82 e5       	ldi	r24, 0x52	; 82
   1682e:	94 e1       	ldi	r25, 0x14	; 20
   16830:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16834:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16838:	81 30       	cpi	r24, 0x01	; 1
   1683a:	d1 f0       	breq	.+52     	; 0x16870 <_Z22Valve_Grouping_Handlerh+0xe6a>
   1683c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16840:	81 30       	cpi	r24, 0x01	; 1
   16842:	d9 f5       	brne	.+118    	; 0x168ba <_Z22Valve_Grouping_Handlerh+0xeb4>
   16844:	69 e5       	ldi	r22, 0x59	; 89
   16846:	7c e3       	ldi	r23, 0x3C	; 60
   16848:	82 e5       	ldi	r24, 0x52	; 82
   1684a:	94 e1       	ldi	r25, 0x14	; 20
   1684c:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16850:	60 91 a2 13 	lds	r22, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16854:	70 e0       	ldi	r23, 0x00	; 0
   16856:	61 50       	subi	r22, 0x01	; 1
   16858:	71 09       	sbc	r23, r1
   1685a:	4a e0       	ldi	r20, 0x0A	; 10
   1685c:	50 e0       	ldi	r21, 0x00	; 0
   1685e:	82 e5       	ldi	r24, 0x52	; 82
   16860:	94 e1       	ldi	r25, 0x14	; 20
   16862:	0e 94 a9 d2 	call	0x1a552	; 0x1a552 <_ZN5Print7printlnEii>
   16866:	82 e5       	ldi	r24, 0x52	; 82
   16868:	94 e1       	ldi	r25, 0x14	; 20
   1686a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1686e:	25 c0       	rjmp	.+74     	; 0x168ba <_Z22Valve_Grouping_Handlerh+0xeb4>
   16870:	00 e0       	ldi	r16, 0x00	; 0
   16872:	10 e0       	ldi	r17, 0x00	; 0
   16874:	8b e1       	ldi	r24, 0x1B	; 27
   16876:	f8 2e       	mov	r15, r24
   16878:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   1687c:	90 e0       	ldi	r25, 0x00	; 0
   1687e:	85 56       	subi	r24, 0x65	; 101
   16880:	91 09       	sbc	r25, r1
   16882:	f8 9e       	mul	r15, r24
   16884:	f0 01       	movw	r30, r0
   16886:	f9 9e       	mul	r15, r25
   16888:	f0 0d       	add	r31, r0
   1688a:	11 24       	eor	r1, r1
   1688c:	ef 57       	subi	r30, 0x7F	; 127
   1688e:	f2 4f       	sbci	r31, 0xF2	; 242
   16890:	e0 0f       	add	r30, r16
   16892:	f1 1f       	adc	r31, r17
   16894:	4a e0       	ldi	r20, 0x0A	; 10
   16896:	50 e0       	ldi	r21, 0x00	; 0
   16898:	65 81       	ldd	r22, Z+5	; 0x05
   1689a:	82 e5       	ldi	r24, 0x52	; 82
   1689c:	94 e1       	ldi	r25, 0x14	; 20
   1689e:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   168a2:	6f e6       	ldi	r22, 0x6F	; 111
   168a4:	7c e3       	ldi	r23, 0x3C	; 60
   168a6:	82 e5       	ldi	r24, 0x52	; 82
   168a8:	94 e1       	ldi	r25, 0x14	; 20
   168aa:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   168ae:	0f 5f       	subi	r16, 0xFF	; 255
   168b0:	1f 4f       	sbci	r17, 0xFF	; 255
   168b2:	05 30       	cpi	r16, 0x05	; 5
   168b4:	11 05       	cpc	r17, r1
   168b6:	01 f7       	brne	.-64     	; 0x16878 <_Z22Valve_Grouping_Handlerh+0xe72>
   168b8:	c1 cf       	rjmp	.-126    	; 0x1683c <_Z22Valve_Grouping_Handlerh+0xe36>
   168ba:	00 e0       	ldi	r16, 0x00	; 0
   168bc:	10 e0       	ldi	r17, 0x00	; 0
   168be:	a2 e0       	ldi	r26, 0x02	; 2
   168c0:	6a 2e       	mov	r6, r26
   168c2:	33 24       	eor	r3, r3
   168c4:	33 94       	inc	r3
   168c6:	85 2d       	mov	r24, r5
   168c8:	83 25       	eor	r24, r3
   168ca:	81 70       	andi	r24, 0x01	; 1
   168cc:	8b ab       	std	Y+51, r24	; 0x33
   168ce:	bd e0       	ldi	r27, 0x0D	; 13
   168d0:	2b 2e       	mov	r2, r27
   168d2:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   168d6:	90 e0       	ldi	r25, 0x00	; 0
   168d8:	9c 01       	movw	r18, r24
   168da:	25 56       	subi	r18, 0x65	; 101
   168dc:	31 09       	sbc	r19, r1
   168de:	6b e1       	ldi	r22, 0x1B	; 27
   168e0:	62 9f       	mul	r22, r18
   168e2:	f0 01       	movw	r30, r0
   168e4:	63 9f       	mul	r22, r19
   168e6:	f0 0d       	add	r31, r0
   168e8:	11 24       	eor	r1, r1
   168ea:	ef 57       	subi	r30, 0x7F	; 127
   168ec:	f2 4f       	sbci	r31, 0xF2	; 242
   168ee:	e0 0f       	add	r30, r16
   168f0:	f1 1f       	adc	r31, r17
   168f2:	f5 80       	ldd	r15, Z+5	; 0x05
   168f4:	2f ef       	ldi	r18, 0xFF	; 255
   168f6:	2f 0d       	add	r18, r15
   168f8:	25 31       	cpi	r18, 0x15	; 21
   168fa:	08 f0       	brcs	.+2      	; 0x168fe <_Z22Valve_Grouping_Handlerh+0xef8>
   168fc:	8f c2       	rjmp	.+1310   	; 0x16e1c <_Z22Valve_Grouping_Handlerh+0x1416>
   168fe:	73 e0       	ldi	r23, 0x03	; 3
   16900:	7f 15       	cp	r23, r15
   16902:	a8 f4       	brcc	.+42     	; 0x1692e <_Z22Valve_Grouping_Handlerh+0xf28>
   16904:	6b ea       	ldi	r22, 0xAB	; 171
   16906:	f6 9e       	mul	r15, r22
   16908:	61 2d       	mov	r22, r1
   1690a:	11 24       	eor	r1, r1
   1690c:	86 2f       	mov	r24, r22
   1690e:	86 95       	lsr	r24
   16910:	98 2f       	mov	r25, r24
   16912:	99 0f       	add	r25, r25
   16914:	89 0f       	add	r24, r25
   16916:	f8 1a       	sub	r15, r24
   16918:	66 95       	lsr	r22
   1691a:	ff 20       	and	r15, r15
   1691c:	21 f0       	breq	.+8      	; 0x16926 <_Z22Valve_Grouping_Handlerh+0xf20>
   1691e:	ee 24       	eor	r14, r14
   16920:	e3 94       	inc	r14
   16922:	e6 0e       	add	r14, r22
   16924:	06 c0       	rjmp	.+12     	; 0x16932 <_Z22Valve_Grouping_Handlerh+0xf2c>
   16926:	e6 2e       	mov	r14, r22
   16928:	f3 e0       	ldi	r31, 0x03	; 3
   1692a:	ff 2e       	mov	r15, r31
   1692c:	02 c0       	rjmp	.+4      	; 0x16932 <_Z22Valve_Grouping_Handlerh+0xf2c>
   1692e:	ee 24       	eor	r14, r14
   16930:	e3 94       	inc	r14
   16932:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16936:	81 30       	cpi	r24, 0x01	; 1
   16938:	89 f4       	brne	.+34     	; 0x1695c <_Z22Valve_Grouping_Handlerh+0xf56>
   1693a:	65 e4       	ldi	r22, 0x45	; 69
   1693c:	7c e3       	ldi	r23, 0x3C	; 60
   1693e:	82 e5       	ldi	r24, 0x52	; 82
   16940:	94 e1       	ldi	r25, 0x14	; 20
   16942:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16946:	4a e0       	ldi	r20, 0x0A	; 10
   16948:	50 e0       	ldi	r21, 0x00	; 0
   1694a:	6e 2d       	mov	r22, r14
   1694c:	82 e5       	ldi	r24, 0x52	; 82
   1694e:	94 e1       	ldi	r25, 0x14	; 20
   16950:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   16954:	82 e5       	ldi	r24, 0x52	; 82
   16956:	94 e1       	ldi	r25, 0x14	; 20
   16958:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1695c:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   16960:	81 11       	cpse	r24, r1
   16962:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   16966:	84 e1       	ldi	r24, 0x14	; 20
   16968:	a9 e7       	ldi	r26, 0x79	; 121
   1696a:	b3 e1       	ldi	r27, 0x13	; 19
   1696c:	1d 92       	st	X+, r1
   1696e:	8a 95       	dec	r24
   16970:	e9 f7       	brne	.-6      	; 0x1696c <_Z22Valve_Grouping_Handlerh+0xf66>
   16972:	6e 2d       	mov	r22, r14
   16974:	70 e0       	ldi	r23, 0x00	; 0
   16976:	61 50       	subi	r22, 0x01	; 1
   16978:	71 09       	sbc	r23, r1
   1697a:	b7 e0       	ldi	r27, 0x07	; 7
   1697c:	b6 9f       	mul	r27, r22
   1697e:	c0 01       	movw	r24, r0
   16980:	b7 9f       	mul	r27, r23
   16982:	90 0d       	add	r25, r0
   16984:	11 24       	eor	r1, r1
   16986:	89 5b       	subi	r24, 0xB9	; 185
   16988:	9c 4e       	sbci	r25, 0xEC	; 236
   1698a:	fc 01       	movw	r30, r24
   1698c:	e1 5a       	subi	r30, 0xA1	; 161
   1698e:	ff 4f       	sbci	r31, 0xFF	; 255
   16990:	20 81       	ld	r18, Z
   16992:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
   16996:	31 96       	adiw	r30, 0x01	; 1
   16998:	20 81       	ld	r18, Z
   1699a:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
   1699e:	31 96       	adiw	r30, 0x01	; 1
   169a0:	20 81       	ld	r18, Z
   169a2:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
   169a6:	31 96       	adiw	r30, 0x01	; 1
   169a8:	20 81       	ld	r18, Z
   169aa:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
   169ae:	31 96       	adiw	r30, 0x01	; 1
   169b0:	20 81       	ld	r18, Z
   169b2:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
   169b6:	31 96       	adiw	r30, 0x01	; 1
   169b8:	20 81       	ld	r18, Z
   169ba:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
   169be:	60 92 7f 13 	sts	0x137F, r6	; 0x80137f <_sRuble_Parameters+0x38>
   169c2:	50 92 80 13 	sts	0x1380, r5	; 0x801380 <_sRuble_Parameters+0x39>
   169c6:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   169ca:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
   169ce:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   169d2:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
   169d6:	f0 92 84 13 	sts	0x1384, r15	; 0x801384 <_sRuble_Parameters+0x3d>
   169da:	40 e0       	ldi	r20, 0x00	; 0
   169dc:	50 e0       	ldi	r21, 0x00	; 0
   169de:	d4 2e       	mov	r13, r20
   169e0:	e1 2c       	mov	r14, r1
   169e2:	f1 2c       	mov	r15, r1
   169e4:	24 9e       	mul	r2, r20
   169e6:	b0 01       	movw	r22, r0
   169e8:	25 9e       	mul	r2, r21
   169ea:	70 0d       	add	r23, r0
   169ec:	11 24       	eor	r1, r1
   169ee:	69 54       	subi	r22, 0x49	; 73
   169f0:	74 4f       	sbci	r23, 0xF4	; 244
   169f2:	2f 2d       	mov	r18, r15
   169f4:	30 e0       	ldi	r19, 0x00	; 0
   169f6:	fb 01       	movw	r30, r22
   169f8:	e2 0f       	add	r30, r18
   169fa:	f3 1f       	adc	r31, r19
   169fc:	28 0f       	add	r18, r24
   169fe:	39 1f       	adc	r19, r25
   16a00:	d9 01       	movw	r26, r18
   16a02:	a1 5a       	subi	r26, 0xA1	; 161
   16a04:	bf 4f       	sbci	r27, 0xFF	; 255
   16a06:	31 81       	ldd	r19, Z+1	; 0x01
   16a08:	2c 91       	ld	r18, X
   16a0a:	32 17       	cp	r19, r18
   16a0c:	19 f0       	breq	.+6      	; 0x16a14 <_Z22Valve_Grouping_Handlerh+0x100e>
   16a0e:	e1 2c       	mov	r14, r1
   16a10:	e6 e0       	ldi	r30, 0x06	; 6
   16a12:	fe 2e       	mov	r15, r30
   16a14:	e3 94       	inc	r14
   16a16:	f3 94       	inc	r15
   16a18:	e5 e0       	ldi	r30, 0x05	; 5
   16a1a:	ef 15       	cp	r30, r15
   16a1c:	50 f7       	brcc	.-44     	; 0x169f2 <_Z22Valve_Grouping_Handlerh+0xfec>
   16a1e:	f6 e0       	ldi	r31, 0x06	; 6
   16a20:	ef 16       	cp	r14, r31
   16a22:	31 f0       	breq	.+12     	; 0x16a30 <_Z22Valve_Grouping_Handlerh+0x102a>
   16a24:	4f 5f       	subi	r20, 0xFF	; 255
   16a26:	5f 4f       	sbci	r21, 0xFF	; 255
   16a28:	47 30       	cpi	r20, 0x07	; 7
   16a2a:	51 05       	cpc	r21, r1
   16a2c:	c1 f6       	brne	.-80     	; 0x169de <_Z22Valve_Grouping_Handlerh+0xfd8>
   16a2e:	01 c0       	rjmp	.+2      	; 0x16a32 <_Z22Valve_Grouping_Handlerh+0x102c>
   16a30:	4d 2c       	mov	r4, r13
   16a32:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16a36:	81 30       	cpi	r24, 0x01	; 1
   16a38:	89 f4       	brne	.+34     	; 0x16a5c <_Z22Valve_Grouping_Handlerh+0x1056>
   16a3a:	6f e2       	ldi	r22, 0x2F	; 47
   16a3c:	7c e3       	ldi	r23, 0x3C	; 60
   16a3e:	82 e5       	ldi	r24, 0x52	; 82
   16a40:	94 e1       	ldi	r25, 0x14	; 20
   16a42:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16a46:	4a e0       	ldi	r20, 0x0A	; 10
   16a48:	50 e0       	ldi	r21, 0x00	; 0
   16a4a:	64 2d       	mov	r22, r4
   16a4c:	82 e5       	ldi	r24, 0x52	; 82
   16a4e:	94 e1       	ldi	r25, 0x14	; 20
   16a50:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   16a54:	82 e5       	ldi	r24, 0x52	; 82
   16a56:	94 e1       	ldi	r25, 0x14	; 20
   16a58:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16a5c:	2d e0       	ldi	r18, 0x0D	; 13
   16a5e:	42 9e       	mul	r4, r18
   16a60:	50 01       	movw	r10, r0
   16a62:	11 24       	eor	r1, r1
   16a64:	71 2c       	mov	r7, r1
   16a66:	24 9c       	mul	r2, r4
   16a68:	c0 01       	movw	r24, r0
   16a6a:	11 24       	eor	r1, r1
   16a6c:	9c 01       	movw	r18, r24
   16a6e:	29 54       	subi	r18, 0x49	; 73
   16a70:	34 4f       	sbci	r19, 0xF4	; 244
   16a72:	49 01       	movw	r8, r18
   16a74:	4b e0       	ldi	r20, 0x0B	; 11
   16a76:	84 0e       	add	r8, r20
   16a78:	91 1c       	adc	r9, r1
   16a7a:	79 01       	movw	r14, r18
   16a7c:	58 e0       	ldi	r21, 0x08	; 8
   16a7e:	e5 0e       	add	r14, r21
   16a80:	f1 1c       	adc	r15, r1
   16a82:	bc 01       	movw	r22, r24
   16a84:	68 54       	subi	r22, 0x48	; 72
   16a86:	74 4f       	sbci	r23, 0xF4	; 244
   16a88:	6b 01       	movw	r12, r22
   16a8a:	73 94       	inc	r7
   16a8c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16a90:	81 30       	cpi	r24, 0x01	; 1
   16a92:	51 f4       	brne	.+20     	; 0x16aa8 <_Z22Valve_Grouping_Handlerh+0x10a2>
   16a94:	6b e0       	ldi	r22, 0x0B	; 11
   16a96:	7c e3       	ldi	r23, 0x3C	; 60
   16a98:	82 e5       	ldi	r24, 0x52	; 82
   16a9a:	94 e1       	ldi	r25, 0x14	; 20
   16a9c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16aa0:	82 e5       	ldi	r24, 0x52	; 82
   16aa2:	94 e1       	ldi	r25, 0x14	; 20
   16aa4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16aa8:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   16aac:	8c e0       	ldi	r24, 0x0C	; 12
   16aae:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   16ab2:	88 eb       	ldi	r24, 0xB8	; 184
   16ab4:	9b e0       	ldi	r25, 0x0B	; 11
   16ab6:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
   16aba:	88 23       	and	r24, r24
   16abc:	09 f4       	brne	.+2      	; 0x16ac0 <_Z22Valve_Grouping_Handlerh+0x10ba>
   16abe:	6c c1       	rjmp	.+728    	; 0x16d98 <_Z22Valve_Grouping_Handlerh+0x1392>
   16ac0:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   16ac4:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16ac8:	88 23       	and	r24, r24
   16aca:	09 f4       	brne	.+2      	; 0x16ace <_Z22Valve_Grouping_Handlerh+0x10c8>
   16acc:	09 c1       	rjmp	.+530    	; 0x16ce0 <_Z22Valve_Grouping_Handlerh+0x12da>
   16ace:	91 30       	cpi	r25, 0x01	; 1
   16ad0:	19 f5       	brne	.+70     	; 0x16b18 <_Z22Valve_Grouping_Handlerh+0x1112>
   16ad2:	65 ef       	ldi	r22, 0xF5	; 245
   16ad4:	7b e3       	ldi	r23, 0x3B	; 59
   16ad6:	82 e5       	ldi	r24, 0x52	; 82
   16ad8:	94 e1       	ldi	r25, 0x14	; 20
   16ada:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16ade:	4a e0       	ldi	r20, 0x0A	; 10
   16ae0:	50 e0       	ldi	r21, 0x00	; 0
   16ae2:	6d e8       	ldi	r22, 0x8D	; 141
   16ae4:	73 e1       	ldi	r23, 0x13	; 19
   16ae6:	82 e5       	ldi	r24, 0x52	; 82
   16ae8:	94 e1       	ldi	r25, 0x14	; 20
   16aea:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   16aee:	82 e5       	ldi	r24, 0x52	; 82
   16af0:	94 e1       	ldi	r25, 0x14	; 20
   16af2:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   16af6:	67 ed       	ldi	r22, 0xD7	; 215
   16af8:	7b e3       	ldi	r23, 0x3B	; 59
   16afa:	82 e5       	ldi	r24, 0x52	; 82
   16afc:	94 e1       	ldi	r25, 0x14	; 20
   16afe:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16b02:	47 e0       	ldi	r20, 0x07	; 7
   16b04:	50 e0       	ldi	r21, 0x00	; 0
   16b06:	b6 01       	movw	r22, r12
   16b08:	82 e5       	ldi	r24, 0x52	; 82
   16b0a:	94 e1       	ldi	r25, 0x14	; 20
   16b0c:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
   16b10:	82 e5       	ldi	r24, 0x52	; 82
   16b12:	94 e1       	ldi	r25, 0x14	; 20
   16b14:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   16b18:	ad e8       	ldi	r26, 0x8D	; 141
   16b1a:	b3 e1       	ldi	r27, 0x13	; 19
   16b1c:	80 e0       	ldi	r24, 0x00	; 0
   16b1e:	90 e0       	ldi	r25, 0x00	; 0
   16b20:	2d 91       	ld	r18, X+
   16b22:	f5 01       	movw	r30, r10
   16b24:	e8 0f       	add	r30, r24
   16b26:	f9 1f       	adc	r31, r25
   16b28:	e9 54       	subi	r30, 0x49	; 73
   16b2a:	f4 4f       	sbci	r31, 0xF4	; 244
   16b2c:	31 81       	ldd	r19, Z+1	; 0x01
   16b2e:	32 17       	cp	r19, r18
   16b30:	09 f4       	brne	.+2      	; 0x16b34 <_Z22Valve_Grouping_Handlerh+0x112e>
   16b32:	72 c0       	rjmp	.+228    	; 0x16c18 <_Z22Valve_Grouping_Handlerh+0x1212>
   16b34:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16b38:	81 30       	cpi	r24, 0x01	; 1
   16b3a:	51 f4       	brne	.+20     	; 0x16b50 <_Z22Valve_Grouping_Handlerh+0x114a>
   16b3c:	6c ea       	ldi	r22, 0xAC	; 172
   16b3e:	7b e3       	ldi	r23, 0x3B	; 59
   16b40:	82 e5       	ldi	r24, 0x52	; 82
   16b42:	94 e1       	ldi	r25, 0x14	; 20
   16b44:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16b48:	82 e5       	ldi	r24, 0x52	; 82
   16b4a:	94 e1       	ldi	r25, 0x14	; 20
   16b4c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16b50:	72 e0       	ldi	r23, 0x02	; 2
   16b52:	77 16       	cp	r7, r23
   16b54:	a1 f0       	breq	.+40     	; 0x16b7e <_Z22Valve_Grouping_Handlerh+0x1178>
   16b56:	d4 01       	movw	r26, r8
   16b58:	3c 92       	st	X, r3
   16b5a:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
   16b5e:	90 e0       	ldi	r25, 0x00	; 0
   16b60:	98 2f       	mov	r25, r24
   16b62:	88 27       	eor	r24, r24
   16b64:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
   16b68:	82 2b       	or	r24, r18
   16b6a:	f7 01       	movw	r30, r14
   16b6c:	91 83       	std	Z+1, r25	; 0x01
   16b6e:	80 83       	st	Z, r24
   16b70:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
   16b74:	58 12       	cpse	r5, r24
   16b76:	56 c0       	rjmp	.+172    	; 0x16c24 <_Z22Valve_Grouping_Handlerh+0x121e>
   16b78:	33 e0       	ldi	r19, 0x03	; 3
   16b7a:	73 2e       	mov	r7, r19
   16b7c:	45 c1       	rjmp	.+650    	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1402>
   16b7e:	86 e0       	ldi	r24, 0x06	; 6
   16b80:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   16b84:	84 e6       	ldi	r24, 0x64	; 100
   16b86:	90 e0       	ldi	r25, 0x00	; 0
   16b88:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16b8c:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16b90:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16b94:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16b98:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16b9c:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16ba0:	a0 62       	ori	r26, 0x20	; 32
   16ba2:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16ba6:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16baa:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16bae:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16bb2:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   16bb6:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   16bba:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   16bbe:	82 60       	ori	r24, 0x02	; 2
   16bc0:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   16bc4:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   16bc8:	00 e0       	ldi	r16, 0x00	; 0
   16bca:	10 e0       	ldi	r17, 0x00	; 0
   16bcc:	2b e1       	ldi	r18, 0x1B	; 27
   16bce:	f2 2e       	mov	r15, r18
   16bd0:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16bd4:	90 e0       	ldi	r25, 0x00	; 0
   16bd6:	85 56       	subi	r24, 0x65	; 101
   16bd8:	91 09       	sbc	r25, r1
   16bda:	f8 9e       	mul	r15, r24
   16bdc:	f0 01       	movw	r30, r0
   16bde:	f9 9e       	mul	r15, r25
   16be0:	f0 0d       	add	r31, r0
   16be2:	11 24       	eor	r1, r1
   16be4:	ef 57       	subi	r30, 0x7F	; 127
   16be6:	f2 4f       	sbci	r31, 0xF2	; 242
   16be8:	e0 0f       	add	r30, r16
   16bea:	f1 1f       	adc	r31, r17
   16bec:	e5 81       	ldd	r30, Z+5	; 0x05
   16bee:	e6 31       	cpi	r30, 0x16	; 22
   16bf0:	68 f0       	brcs	.+26     	; 0x16c0c <_Z22Valve_Grouping_Handlerh+0x1206>
   16bf2:	f0 e0       	ldi	r31, 0x00	; 0
   16bf4:	ef 53       	subi	r30, 0x3F	; 63
   16bf6:	fc 4e       	sbci	r31, 0xEC	; 236
   16bf8:	61 e0       	ldi	r22, 0x01	; 1
   16bfa:	80 81       	ld	r24, Z
   16bfc:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   16c00:	68 ec       	ldi	r22, 0xC8	; 200
   16c02:	70 e0       	ldi	r23, 0x00	; 0
   16c04:	80 e0       	ldi	r24, 0x00	; 0
   16c06:	90 e0       	ldi	r25, 0x00	; 0
   16c08:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16c0c:	0f 5f       	subi	r16, 0xFF	; 255
   16c0e:	1f 4f       	sbci	r17, 0xFF	; 255
   16c10:	05 30       	cpi	r16, 0x05	; 5
   16c12:	11 05       	cpc	r17, r1
   16c14:	e9 f6       	brne	.-70     	; 0x16bd0 <_Z22Valve_Grouping_Handlerh+0x11ca>
   16c16:	f6 c0       	rjmp	.+492    	; 0x16e04 <_Z22Valve_Grouping_Handlerh+0x13fe>
   16c18:	01 96       	adiw	r24, 0x01	; 1
   16c1a:	86 30       	cpi	r24, 0x06	; 6
   16c1c:	91 05       	cpc	r25, r1
   16c1e:	09 f0       	breq	.+2      	; 0x16c22 <_Z22Valve_Grouping_Handlerh+0x121c>
   16c20:	7f cf       	rjmp	.-258    	; 0x16b20 <_Z22Valve_Grouping_Handlerh+0x111a>
   16c22:	99 cf       	rjmp	.-206    	; 0x16b56 <_Z22Valve_Grouping_Handlerh+0x1150>
   16c24:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16c28:	81 30       	cpi	r24, 0x01	; 1
   16c2a:	51 f4       	brne	.+20     	; 0x16c40 <_Z22Valve_Grouping_Handlerh+0x123a>
   16c2c:	69 e9       	ldi	r22, 0x99	; 153
   16c2e:	7b e3       	ldi	r23, 0x3B	; 59
   16c30:	82 e5       	ldi	r24, 0x52	; 82
   16c32:	94 e1       	ldi	r25, 0x14	; 20
   16c34:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16c38:	82 e5       	ldi	r24, 0x52	; 82
   16c3a:	94 e1       	ldi	r25, 0x14	; 20
   16c3c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16c40:	f2 e0       	ldi	r31, 0x02	; 2
   16c42:	7f 12       	cpse	r7, r31
   16c44:	e1 c0       	rjmp	.+450    	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1402>
   16c46:	86 e0       	ldi	r24, 0x06	; 6
   16c48:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   16c4c:	84 e6       	ldi	r24, 0x64	; 100
   16c4e:	90 e0       	ldi	r25, 0x00	; 0
   16c50:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16c54:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16c58:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16c5c:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16c60:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16c64:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16c68:	a0 62       	ori	r26, 0x20	; 32
   16c6a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16c6e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16c72:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16c76:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16c7a:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   16c7e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   16c82:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   16c86:	82 60       	ori	r24, 0x02	; 2
   16c88:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   16c8c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   16c90:	00 e0       	ldi	r16, 0x00	; 0
   16c92:	10 e0       	ldi	r17, 0x00	; 0
   16c94:	9b e1       	ldi	r25, 0x1B	; 27
   16c96:	f9 2e       	mov	r15, r25
   16c98:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16c9c:	90 e0       	ldi	r25, 0x00	; 0
   16c9e:	85 56       	subi	r24, 0x65	; 101
   16ca0:	91 09       	sbc	r25, r1
   16ca2:	f8 9e       	mul	r15, r24
   16ca4:	f0 01       	movw	r30, r0
   16ca6:	f9 9e       	mul	r15, r25
   16ca8:	f0 0d       	add	r31, r0
   16caa:	11 24       	eor	r1, r1
   16cac:	ef 57       	subi	r30, 0x7F	; 127
   16cae:	f2 4f       	sbci	r31, 0xF2	; 242
   16cb0:	e0 0f       	add	r30, r16
   16cb2:	f1 1f       	adc	r31, r17
   16cb4:	e5 81       	ldd	r30, Z+5	; 0x05
   16cb6:	e6 31       	cpi	r30, 0x16	; 22
   16cb8:	68 f0       	brcs	.+26     	; 0x16cd4 <_Z22Valve_Grouping_Handlerh+0x12ce>
   16cba:	f0 e0       	ldi	r31, 0x00	; 0
   16cbc:	ef 53       	subi	r30, 0x3F	; 63
   16cbe:	fc 4e       	sbci	r31, 0xEC	; 236
   16cc0:	61 e0       	ldi	r22, 0x01	; 1
   16cc2:	80 81       	ld	r24, Z
   16cc4:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   16cc8:	68 ec       	ldi	r22, 0xC8	; 200
   16cca:	70 e0       	ldi	r23, 0x00	; 0
   16ccc:	80 e0       	ldi	r24, 0x00	; 0
   16cce:	90 e0       	ldi	r25, 0x00	; 0
   16cd0:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16cd4:	0f 5f       	subi	r16, 0xFF	; 255
   16cd6:	1f 4f       	sbci	r17, 0xFF	; 255
   16cd8:	05 30       	cpi	r16, 0x05	; 5
   16cda:	11 05       	cpc	r17, r1
   16cdc:	e9 f6       	brne	.-70     	; 0x16c98 <_Z22Valve_Grouping_Handlerh+0x1292>
   16cde:	92 c0       	rjmp	.+292    	; 0x16e04 <_Z22Valve_Grouping_Handlerh+0x13fe>
   16ce0:	91 30       	cpi	r25, 0x01	; 1
   16ce2:	51 f4       	brne	.+20     	; 0x16cf8 <_Z22Valve_Grouping_Handlerh+0x12f2>
   16ce4:	6e e5       	ldi	r22, 0x5E	; 94
   16ce6:	7b e3       	ldi	r23, 0x3B	; 59
   16ce8:	82 e5       	ldi	r24, 0x52	; 82
   16cea:	94 e1       	ldi	r25, 0x14	; 20
   16cec:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16cf0:	82 e5       	ldi	r24, 0x52	; 82
   16cf2:	94 e1       	ldi	r25, 0x14	; 20
   16cf4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16cf8:	22 e0       	ldi	r18, 0x02	; 2
   16cfa:	72 12       	cpse	r7, r18
   16cfc:	85 c0       	rjmp	.+266    	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1402>
   16cfe:	86 e0       	ldi	r24, 0x06	; 6
   16d00:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   16d04:	84 e6       	ldi	r24, 0x64	; 100
   16d06:	90 e0       	ldi	r25, 0x00	; 0
   16d08:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16d0c:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16d10:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16d14:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16d18:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16d1c:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16d20:	a0 62       	ori	r26, 0x20	; 32
   16d22:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16d26:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16d2a:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16d2e:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16d32:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   16d36:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   16d3a:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   16d3e:	82 60       	ori	r24, 0x02	; 2
   16d40:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   16d44:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   16d48:	00 e0       	ldi	r16, 0x00	; 0
   16d4a:	10 e0       	ldi	r17, 0x00	; 0
   16d4c:	8b e1       	ldi	r24, 0x1B	; 27
   16d4e:	f8 2e       	mov	r15, r24
   16d50:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   16d54:	90 e0       	ldi	r25, 0x00	; 0
   16d56:	85 56       	subi	r24, 0x65	; 101
   16d58:	91 09       	sbc	r25, r1
   16d5a:	f8 9e       	mul	r15, r24
   16d5c:	f0 01       	movw	r30, r0
   16d5e:	f9 9e       	mul	r15, r25
   16d60:	f0 0d       	add	r31, r0
   16d62:	11 24       	eor	r1, r1
   16d64:	ef 57       	subi	r30, 0x7F	; 127
   16d66:	f2 4f       	sbci	r31, 0xF2	; 242
   16d68:	e0 0f       	add	r30, r16
   16d6a:	f1 1f       	adc	r31, r17
   16d6c:	e5 81       	ldd	r30, Z+5	; 0x05
   16d6e:	e6 31       	cpi	r30, 0x16	; 22
   16d70:	68 f0       	brcs	.+26     	; 0x16d8c <_Z22Valve_Grouping_Handlerh+0x1386>
   16d72:	f0 e0       	ldi	r31, 0x00	; 0
   16d74:	ef 53       	subi	r30, 0x3F	; 63
   16d76:	fc 4e       	sbci	r31, 0xEC	; 236
   16d78:	61 e0       	ldi	r22, 0x01	; 1
   16d7a:	80 81       	ld	r24, Z
   16d7c:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   16d80:	68 ec       	ldi	r22, 0xC8	; 200
   16d82:	70 e0       	ldi	r23, 0x00	; 0
   16d84:	80 e0       	ldi	r24, 0x00	; 0
   16d86:	90 e0       	ldi	r25, 0x00	; 0
   16d88:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16d8c:	0f 5f       	subi	r16, 0xFF	; 255
   16d8e:	1f 4f       	sbci	r17, 0xFF	; 255
   16d90:	05 30       	cpi	r16, 0x05	; 5
   16d92:	11 05       	cpc	r17, r1
   16d94:	e9 f6       	brne	.-70     	; 0x16d50 <_Z22Valve_Grouping_Handlerh+0x134a>
   16d96:	36 c0       	rjmp	.+108    	; 0x16e04 <_Z22Valve_Grouping_Handlerh+0x13fe>
   16d98:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16d9c:	81 30       	cpi	r24, 0x01	; 1
   16d9e:	51 f4       	brne	.+20     	; 0x16db4 <_Z22Valve_Grouping_Handlerh+0x13ae>
   16da0:	63 e2       	ldi	r22, 0x23	; 35
   16da2:	7b e3       	ldi	r23, 0x3B	; 59
   16da4:	82 e5       	ldi	r24, 0x52	; 82
   16da6:	94 e1       	ldi	r25, 0x14	; 20
   16da8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16dac:	82 e5       	ldi	r24, 0x52	; 82
   16dae:	94 e1       	ldi	r25, 0x14	; 20
   16db0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16db4:	32 e0       	ldi	r19, 0x02	; 2
   16db6:	73 12       	cpse	r7, r19
   16db8:	27 c0       	rjmp	.+78     	; 0x16e08 <_Z22Valve_Grouping_Handlerh+0x1402>
   16dba:	86 e0       	ldi	r24, 0x06	; 6
   16dbc:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   16dc0:	84 e6       	ldi	r24, 0x64	; 100
   16dc2:	90 e0       	ldi	r25, 0x00	; 0
   16dc4:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16dc8:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16dcc:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   16dd0:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   16dd4:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   16dd8:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   16ddc:	a0 62       	ori	r26, 0x20	; 32
   16dde:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   16de2:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   16de6:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   16dea:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   16dee:	40 92 f9 13 	sts	0x13F9, r4	; 0x8013f9 <_sRuble_Parameters+0xb2>
   16df2:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   16df6:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   16dfa:	82 60       	ori	r24, 0x02	; 2
   16dfc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   16e00:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   16e04:	80 e0       	ldi	r24, 0x00	; 0
   16e06:	55 c0       	rjmp	.+170    	; 0x16eb2 <_Z22Valve_Grouping_Handlerh+0x14ac>
   16e08:	68 ee       	ldi	r22, 0xE8	; 232
   16e0a:	73 e0       	ldi	r23, 0x03	; 3
   16e0c:	80 e0       	ldi	r24, 0x00	; 0
   16e0e:	90 e0       	ldi	r25, 0x00	; 0
   16e10:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16e14:	43 e0       	ldi	r20, 0x03	; 3
   16e16:	74 12       	cpse	r7, r20
   16e18:	38 ce       	rjmp	.-912    	; 0x16a8a <_Z22Valve_Grouping_Handlerh+0x1084>
   16e1a:	34 c0       	rjmp	.+104    	; 0x16e84 <_Z22Valve_Grouping_Handlerh+0x147e>
   16e1c:	55 e1       	ldi	r21, 0x15	; 21
   16e1e:	5f 15       	cp	r21, r15
   16e20:	78 f4       	brcc	.+30     	; 0x16e40 <_Z22Valve_Grouping_Handlerh+0x143a>
   16e22:	ef 2d       	mov	r30, r15
   16e24:	f0 e0       	ldi	r31, 0x00	; 0
   16e26:	ef 53       	subi	r30, 0x3F	; 63
   16e28:	fc 4e       	sbci	r31, 0xEC	; 236
   16e2a:	6b a9       	ldd	r22, Y+51	; 0x33
   16e2c:	80 81       	ld	r24, Z
   16e2e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   16e32:	68 ec       	ldi	r22, 0xC8	; 200
   16e34:	70 e0       	ldi	r23, 0x00	; 0
   16e36:	80 e0       	ldi	r24, 0x00	; 0
   16e38:	90 e0       	ldi	r25, 0x00	; 0
   16e3a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   16e3e:	22 c0       	rjmp	.+68     	; 0x16e84 <_Z22Valve_Grouping_Handlerh+0x147e>
   16e40:	01 97       	sbiw	r24, 0x01	; 1
   16e42:	66 e0       	ldi	r22, 0x06	; 6
   16e44:	68 9f       	mul	r22, r24
   16e46:	f0 01       	movw	r30, r0
   16e48:	69 9f       	mul	r22, r25
   16e4a:	f0 0d       	add	r31, r0
   16e4c:	11 24       	eor	r1, r1
   16e4e:	e3 50       	subi	r30, 0x03	; 3
   16e50:	f3 4f       	sbci	r31, 0xF3	; 243
   16e52:	e0 0f       	add	r30, r16
   16e54:	f1 1f       	adc	r31, r17
   16e56:	81 81       	ldd	r24, Z+1	; 0x01
   16e58:	85 36       	cpi	r24, 0x65	; 101
   16e5a:	a1 f4       	brne	.+40     	; 0x16e84 <_Z22Valve_Grouping_Handlerh+0x147e>
   16e5c:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   16e60:	71 e0       	ldi	r23, 0x01	; 1
   16e62:	57 12       	cpse	r5, r23
   16e64:	05 c0       	rjmp	.+10     	; 0x16e70 <_Z22Valve_Grouping_Handlerh+0x146a>
   16e66:	88 23       	and	r24, r24
   16e68:	69 f0       	breq	.+26     	; 0x16e84 <_Z22Valve_Grouping_Handlerh+0x147e>
   16e6a:	50 92 06 14 	sts	0x1406, r5	; 0x801406 <_sRuble_Parameters+0xbf>
   16e6e:	04 c0       	rjmp	.+8      	; 0x16e78 <_Z22Valve_Grouping_Handlerh+0x1472>
   16e70:	88 23       	and	r24, r24
   16e72:	41 f0       	breq	.+16     	; 0x16e84 <_Z22Valve_Grouping_Handlerh+0x147e>
   16e74:	60 92 06 14 	sts	0x1406, r6	; 0x801406 <_sRuble_Parameters+0xbf>
   16e78:	66 e0       	ldi	r22, 0x06	; 6
   16e7a:	74 e1       	ldi	r23, 0x14	; 20
   16e7c:	88 ea       	ldi	r24, 0xA8	; 168
   16e7e:	9c e0       	ldi	r25, 0x0C	; 12
   16e80:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16e84:	0f 5f       	subi	r16, 0xFF	; 255
   16e86:	1f 4f       	sbci	r17, 0xFF	; 255
   16e88:	05 30       	cpi	r16, 0x05	; 5
   16e8a:	11 05       	cpc	r17, r1
   16e8c:	09 f0       	breq	.+2      	; 0x16e90 <_Z22Valve_Grouping_Handlerh+0x148a>
   16e8e:	21 cd       	rjmp	.-1470   	; 0x168d2 <_Z22Valve_Grouping_Handlerh+0xecc>
   16e90:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16e94:	81 30       	cpi	r24, 0x01	; 1
   16e96:	61 f4       	brne	.+24     	; 0x16eb0 <_Z22Valve_Grouping_Handlerh+0x14aa>
   16e98:	64 e0       	ldi	r22, 0x04	; 4
   16e9a:	7b e3       	ldi	r23, 0x3B	; 59
   16e9c:	82 e5       	ldi	r24, 0x52	; 82
   16e9e:	94 e1       	ldi	r25, 0x14	; 20
   16ea0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16ea4:	82 e5       	ldi	r24, 0x52	; 82
   16ea6:	94 e1       	ldi	r25, 0x14	; 20
   16ea8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16eac:	01 c0       	rjmp	.+2      	; 0x16eb0 <_Z22Valve_Grouping_Handlerh+0x14aa>
   16eae:	01 c0       	rjmp	.+2      	; 0x16eb2 <_Z22Valve_Grouping_Handlerh+0x14ac>
   16eb0:	81 e0       	ldi	r24, 0x01	; 1
   16eb2:	e6 96       	adiw	r28, 0x36	; 54
   16eb4:	0f b6       	in	r0, 0x3f	; 63
   16eb6:	f8 94       	cli
   16eb8:	de bf       	out	0x3e, r29	; 62
   16eba:	0f be       	out	0x3f, r0	; 63
   16ebc:	cd bf       	out	0x3d, r28	; 61
   16ebe:	df 91       	pop	r29
   16ec0:	cf 91       	pop	r28
   16ec2:	1f 91       	pop	r17
   16ec4:	0f 91       	pop	r16
   16ec6:	ff 90       	pop	r15
   16ec8:	ef 90       	pop	r14
   16eca:	df 90       	pop	r13
   16ecc:	cf 90       	pop	r12
   16ece:	bf 90       	pop	r11
   16ed0:	af 90       	pop	r10
   16ed2:	9f 90       	pop	r9
   16ed4:	8f 90       	pop	r8
   16ed6:	7f 90       	pop	r7
   16ed8:	6f 90       	pop	r6
   16eda:	5f 90       	pop	r5
   16edc:	4f 90       	pop	r4
   16ede:	3f 90       	pop	r3
   16ee0:	2f 90       	pop	r2
   16ee2:	08 95       	ret

00016ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>:
   16ee4:	2f 92       	push	r2
   16ee6:	3f 92       	push	r3
   16ee8:	4f 92       	push	r4
   16eea:	5f 92       	push	r5
   16eec:	6f 92       	push	r6
   16eee:	7f 92       	push	r7
   16ef0:	8f 92       	push	r8
   16ef2:	9f 92       	push	r9
   16ef4:	af 92       	push	r10
   16ef6:	bf 92       	push	r11
   16ef8:	cf 92       	push	r12
   16efa:	df 92       	push	r13
   16efc:	ef 92       	push	r14
   16efe:	ff 92       	push	r15
   16f00:	0f 93       	push	r16
   16f02:	1f 93       	push	r17
   16f04:	cf 93       	push	r28
   16f06:	df 93       	push	r29
   16f08:	48 2e       	mov	r4, r24
   16f0a:	c6 2f       	mov	r28, r22
   16f0c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16f10:	81 30       	cpi	r24, 0x01	; 1
   16f12:	31 f4       	brne	.+12     	; 0x16f20 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3c>
   16f14:	63 ef       	ldi	r22, 0xF3	; 243
   16f16:	7e e2       	ldi	r23, 0x2E	; 46
   16f18:	82 e5       	ldi	r24, 0x52	; 82
   16f1a:	94 e1       	ldi	r25, 0x14	; 20
   16f1c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16f20:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   16f24:	81 30       	cpi	r24, 0x01	; 1
   16f26:	71 f5       	brne	.+92     	; 0x16f84 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xa0>
   16f28:	2b e1       	ldi	r18, 0x1B	; 27
   16f2a:	c2 9f       	mul	r28, r18
   16f2c:	70 01       	movw	r14, r0
   16f2e:	11 24       	eor	r1, r1
   16f30:	00 e0       	ldi	r16, 0x00	; 0
   16f32:	10 e0       	ldi	r17, 0x00	; 0
   16f34:	f7 01       	movw	r30, r14
   16f36:	e0 0f       	add	r30, r16
   16f38:	f1 1f       	adc	r31, r17
   16f3a:	ef 57       	subi	r30, 0x7F	; 127
   16f3c:	f2 4f       	sbci	r31, 0xF2	; 242
   16f3e:	4a e0       	ldi	r20, 0x0A	; 10
   16f40:	50 e0       	ldi	r21, 0x00	; 0
   16f42:	65 81       	ldd	r22, Z+5	; 0x05
   16f44:	82 e5       	ldi	r24, 0x52	; 82
   16f46:	94 e1       	ldi	r25, 0x14	; 20
   16f48:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   16f4c:	61 ef       	ldi	r22, 0xF1	; 241
   16f4e:	7e e2       	ldi	r23, 0x2E	; 46
   16f50:	82 e5       	ldi	r24, 0x52	; 82
   16f52:	94 e1       	ldi	r25, 0x14	; 20
   16f54:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16f58:	0f 5f       	subi	r16, 0xFF	; 255
   16f5a:	1f 4f       	sbci	r17, 0xFF	; 255
   16f5c:	05 30       	cpi	r16, 0x05	; 5
   16f5e:	11 05       	cpc	r17, r1
   16f60:	49 f7       	brne	.-46     	; 0x16f34 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x50>
   16f62:	65 ed       	ldi	r22, 0xD5	; 213
   16f64:	7e e2       	ldi	r23, 0x2E	; 46
   16f66:	82 e5       	ldi	r24, 0x52	; 82
   16f68:	94 e1       	ldi	r25, 0x14	; 20
   16f6a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   16f6e:	4a e0       	ldi	r20, 0x0A	; 10
   16f70:	50 e0       	ldi	r21, 0x00	; 0
   16f72:	6c 2f       	mov	r22, r28
   16f74:	82 e5       	ldi	r24, 0x52	; 82
   16f76:	94 e1       	ldi	r25, 0x14	; 20
   16f78:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   16f7c:	82 e5       	ldi	r24, 0x52	; 82
   16f7e:	94 e1       	ldi	r25, 0x14	; 20
   16f80:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   16f84:	c4 30       	cpi	r28, 0x04	; 4
   16f86:	19 f4       	brne	.+6      	; 0x16f8e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xaa>
   16f88:	31 e0       	ldi	r19, 0x01	; 1
   16f8a:	43 16       	cp	r4, r19
   16f8c:	69 f0       	breq	.+26     	; 0x16fa8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xc4>
   16f8e:	4b e1       	ldi	r20, 0x1B	; 27
   16f90:	c4 9f       	mul	r28, r20
   16f92:	e0 01       	movw	r28, r0
   16f94:	11 24       	eor	r1, r1
   16f96:	00 e0       	ldi	r16, 0x00	; 0
   16f98:	10 e0       	ldi	r17, 0x00	; 0
   16f9a:	59 e7       	ldi	r21, 0x79	; 121
   16f9c:	65 2e       	mov	r6, r21
   16f9e:	53 e1       	ldi	r21, 0x13	; 19
   16fa0:	75 2e       	mov	r7, r21
   16fa2:	6d e0       	ldi	r22, 0x0D	; 13
   16fa4:	36 2e       	mov	r3, r22
   16fa6:	8a c1       	rjmp	.+788    	; 0x172bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3d8>
   16fa8:	e2 ef       	ldi	r30, 0xF2	; 242
   16faa:	fd e0       	ldi	r31, 0x0D	; 13
   16fac:	80 e0       	ldi	r24, 0x00	; 0
   16fae:	91 91       	ld	r25, Z+
   16fb0:	91 11       	cpse	r25, r1
   16fb2:	8f 5f       	subi	r24, 0xFF	; 255
   16fb4:	9d e0       	ldi	r25, 0x0D	; 13
   16fb6:	e7 3f       	cpi	r30, 0xF7	; 247
   16fb8:	f9 07       	cpc	r31, r25
   16fba:	c9 f7       	brne	.-14     	; 0x16fae <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xca>
   16fbc:	82 30       	cpi	r24, 0x02	; 2
   16fbe:	18 f4       	brcc	.+6      	; 0x16fc6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xe2>
   16fc0:	91 e0       	ldi	r25, 0x01	; 1
   16fc2:	90 93 9a 0c 	sts	0x0C9A, r25	; 0x800c9a <_gRunning_Flush_Num>
   16fc6:	90 91 9a 0c 	lds	r25, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
   16fca:	99 23       	and	r25, r25
   16fcc:	11 f0       	breq	.+4      	; 0x16fd2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xee>
   16fce:	89 17       	cp	r24, r25
   16fd0:	48 f4       	brcc	.+18     	; 0x16fe4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x100>
   16fd2:	81 e0       	ldi	r24, 0x01	; 1
   16fd4:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
   16fd8:	6a e9       	ldi	r22, 0x9A	; 154
   16fda:	7c e0       	ldi	r23, 0x0C	; 12
   16fdc:	87 eb       	ldi	r24, 0xB7	; 183
   16fde:	9e e0       	ldi	r25, 0x0E	; 14
   16fe0:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16fe4:	e0 91 9a 0c 	lds	r30, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
   16fe8:	f0 e0       	ldi	r31, 0x00	; 0
   16fea:	ef 50       	subi	r30, 0x0F	; 15
   16fec:	f2 4f       	sbci	r31, 0xF2	; 242
   16fee:	e0 81       	ld	r30, Z
   16ff0:	e6 31       	cpi	r30, 0x16	; 22
   16ff2:	20 f4       	brcc	.+8      	; 0x16ffc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x118>
   16ff4:	80 91 f7 0d 	lds	r24, 0x0DF7	; 0x800df7 <_sExtra_Plot+0x76>
   16ff8:	81 11       	cpse	r24, r1
   16ffa:	d8 c2       	rjmp	.+1456   	; 0x175ac <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6c8>
   16ffc:	f0 e0       	ldi	r31, 0x00	; 0
   16ffe:	ef 53       	subi	r30, 0x3F	; 63
   17000:	fc 4e       	sbci	r31, 0xEC	; 236
   17002:	60 e0       	ldi	r22, 0x00	; 0
   17004:	80 81       	ld	r24, Z
   17006:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1700a:	68 ec       	ldi	r22, 0xC8	; 200
   1700c:	70 e0       	ldi	r23, 0x00	; 0
   1700e:	80 e0       	ldi	r24, 0x00	; 0
   17010:	90 e0       	ldi	r25, 0x00	; 0
   17012:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   17016:	ca c2       	rjmp	.+1428   	; 0x175ac <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6c8>
   17018:	e3 e0       	ldi	r30, 0x03	; 3
   1701a:	ef 15       	cp	r30, r15
   1701c:	08 f0       	brcs	.+2      	; 0x17020 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x13c>
   1701e:	5e c1       	rjmp	.+700    	; 0x172dc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3f8>
   17020:	fb ea       	ldi	r31, 0xAB	; 171
   17022:	ff 9e       	mul	r15, r31
   17024:	e1 2c       	mov	r14, r1
   17026:	11 24       	eor	r1, r1
   17028:	8e 2d       	mov	r24, r14
   1702a:	86 95       	lsr	r24
   1702c:	98 2f       	mov	r25, r24
   1702e:	99 0f       	add	r25, r25
   17030:	89 0f       	add	r24, r25
   17032:	f8 1a       	sub	r15, r24
   17034:	6e 2d       	mov	r22, r14
   17036:	66 95       	lsr	r22
   17038:	ff 20       	and	r15, r15
   1703a:	09 f4       	brne	.+2      	; 0x1703e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x15a>
   1703c:	4b c1       	rjmp	.+662    	; 0x172d4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3f0>
   1703e:	ee 24       	eor	r14, r14
   17040:	e3 94       	inc	r14
   17042:	e6 0e       	add	r14, r22
   17044:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17048:	81 30       	cpi	r24, 0x01	; 1
   1704a:	89 f4       	brne	.+34     	; 0x1706e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x18a>
   1704c:	61 ec       	ldi	r22, 0xC1	; 193
   1704e:	7e e2       	ldi	r23, 0x2E	; 46
   17050:	82 e5       	ldi	r24, 0x52	; 82
   17052:	94 e1       	ldi	r25, 0x14	; 20
   17054:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17058:	82 e5       	ldi	r24, 0x52	; 82
   1705a:	94 e1       	ldi	r25, 0x14	; 20
   1705c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17060:	4a e0       	ldi	r20, 0x0A	; 10
   17062:	50 e0       	ldi	r21, 0x00	; 0
   17064:	6e 2d       	mov	r22, r14
   17066:	82 e5       	ldi	r24, 0x52	; 82
   17068:	94 e1       	ldi	r25, 0x14	; 20
   1706a:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   1706e:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   17072:	81 11       	cpse	r24, r1
   17074:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   17078:	f3 01       	movw	r30, r6
   1707a:	24 e1       	ldi	r18, 0x14	; 20
   1707c:	11 92       	st	Z+, r1
   1707e:	2a 95       	dec	r18
   17080:	e9 f7       	brne	.-6      	; 0x1707c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x198>
   17082:	6e 2d       	mov	r22, r14
   17084:	70 e0       	ldi	r23, 0x00	; 0
   17086:	61 50       	subi	r22, 0x01	; 1
   17088:	71 09       	sbc	r23, r1
   1708a:	37 e0       	ldi	r19, 0x07	; 7
   1708c:	36 9f       	mul	r19, r22
   1708e:	c0 01       	movw	r24, r0
   17090:	37 9f       	mul	r19, r23
   17092:	90 0d       	add	r25, r0
   17094:	11 24       	eor	r1, r1
   17096:	89 5b       	subi	r24, 0xB9	; 185
   17098:	9c 4e       	sbci	r25, 0xEC	; 236
   1709a:	fc 01       	movw	r30, r24
   1709c:	e1 5a       	subi	r30, 0xA1	; 161
   1709e:	ff 4f       	sbci	r31, 0xFF	; 255
   170a0:	20 81       	ld	r18, Z
   170a2:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
   170a6:	31 96       	adiw	r30, 0x01	; 1
   170a8:	20 81       	ld	r18, Z
   170aa:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
   170ae:	31 96       	adiw	r30, 0x01	; 1
   170b0:	20 81       	ld	r18, Z
   170b2:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
   170b6:	31 96       	adiw	r30, 0x01	; 1
   170b8:	20 81       	ld	r18, Z
   170ba:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
   170be:	31 96       	adiw	r30, 0x01	; 1
   170c0:	20 81       	ld	r18, Z
   170c2:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
   170c6:	31 96       	adiw	r30, 0x01	; 1
   170c8:	20 81       	ld	r18, Z
   170ca:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
   170ce:	42 e0       	ldi	r20, 0x02	; 2
   170d0:	40 93 7f 13 	sts	0x137F, r20	; 0x80137f <_sRuble_Parameters+0x38>
   170d4:	40 92 80 13 	sts	0x1380, r4	; 0x801380 <_sRuble_Parameters+0x39>
   170d8:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   170dc:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
   170e0:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   170e4:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
   170e8:	f0 92 84 13 	sts	0x1384, r15	; 0x801384 <_sRuble_Parameters+0x3d>
   170ec:	40 e0       	ldi	r20, 0x00	; 0
   170ee:	50 e0       	ldi	r21, 0x00	; 0
   170f0:	d4 2e       	mov	r13, r20
   170f2:	e1 2c       	mov	r14, r1
   170f4:	f1 2c       	mov	r15, r1
   170f6:	34 9e       	mul	r3, r20
   170f8:	b0 01       	movw	r22, r0
   170fa:	35 9e       	mul	r3, r21
   170fc:	70 0d       	add	r23, r0
   170fe:	11 24       	eor	r1, r1
   17100:	69 54       	subi	r22, 0x49	; 73
   17102:	74 4f       	sbci	r23, 0xF4	; 244
   17104:	2f 2d       	mov	r18, r15
   17106:	30 e0       	ldi	r19, 0x00	; 0
   17108:	fb 01       	movw	r30, r22
   1710a:	e2 0f       	add	r30, r18
   1710c:	f3 1f       	adc	r31, r19
   1710e:	28 0f       	add	r18, r24
   17110:	39 1f       	adc	r19, r25
   17112:	d9 01       	movw	r26, r18
   17114:	a1 5a       	subi	r26, 0xA1	; 161
   17116:	bf 4f       	sbci	r27, 0xFF	; 255
   17118:	31 81       	ldd	r19, Z+1	; 0x01
   1711a:	2c 91       	ld	r18, X
   1711c:	32 17       	cp	r19, r18
   1711e:	19 f0       	breq	.+6      	; 0x17126 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x242>
   17120:	e1 2c       	mov	r14, r1
   17122:	36 e0       	ldi	r19, 0x06	; 6
   17124:	f3 2e       	mov	r15, r19
   17126:	e3 94       	inc	r14
   17128:	f3 94       	inc	r15
   1712a:	e5 e0       	ldi	r30, 0x05	; 5
   1712c:	ef 15       	cp	r30, r15
   1712e:	50 f7       	brcc	.-44     	; 0x17104 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x220>
   17130:	f6 e0       	ldi	r31, 0x06	; 6
   17132:	ef 16       	cp	r14, r31
   17134:	09 f4       	brne	.+2      	; 0x17138 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x254>
   17136:	d5 c0       	rjmp	.+426    	; 0x172e2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3fe>
   17138:	4f 5f       	subi	r20, 0xFF	; 255
   1713a:	5f 4f       	sbci	r21, 0xFF	; 255
   1713c:	47 30       	cpi	r20, 0x07	; 7
   1713e:	51 05       	cpc	r21, r1
   17140:	b9 f6       	brne	.-82     	; 0x170f0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x20c>
   17142:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17146:	81 30       	cpi	r24, 0x01	; 1
   17148:	89 f4       	brne	.+34     	; 0x1716c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x288>
   1714a:	6b ea       	ldi	r22, 0xAB	; 171
   1714c:	7e e2       	ldi	r23, 0x2E	; 46
   1714e:	82 e5       	ldi	r24, 0x52	; 82
   17150:	94 e1       	ldi	r25, 0x14	; 20
   17152:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17156:	4a e0       	ldi	r20, 0x0A	; 10
   17158:	50 e0       	ldi	r21, 0x00	; 0
   1715a:	65 2d       	mov	r22, r5
   1715c:	82 e5       	ldi	r24, 0x52	; 82
   1715e:	94 e1       	ldi	r25, 0x14	; 20
   17160:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   17164:	82 e5       	ldi	r24, 0x52	; 82
   17166:	94 e1       	ldi	r25, 0x14	; 20
   17168:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1716c:	2d e0       	ldi	r18, 0x0D	; 13
   1716e:	52 9e       	mul	r5, r18
   17170:	40 01       	movw	r8, r0
   17172:	11 24       	eor	r1, r1
   17174:	21 2c       	mov	r2, r1
   17176:	35 9c       	mul	r3, r5
   17178:	c0 01       	movw	r24, r0
   1717a:	11 24       	eor	r1, r1
   1717c:	9c 01       	movw	r18, r24
   1717e:	29 54       	subi	r18, 0x49	; 73
   17180:	34 4f       	sbci	r19, 0xF4	; 244
   17182:	59 01       	movw	r10, r18
   17184:	4b e0       	ldi	r20, 0x0B	; 11
   17186:	a4 0e       	add	r10, r20
   17188:	b1 1c       	adc	r11, r1
   1718a:	79 01       	movw	r14, r18
   1718c:	e8 e0       	ldi	r30, 0x08	; 8
   1718e:	ee 0e       	add	r14, r30
   17190:	f1 1c       	adc	r15, r1
   17192:	9c 01       	movw	r18, r24
   17194:	28 54       	subi	r18, 0x48	; 72
   17196:	34 4f       	sbci	r19, 0xF4	; 244
   17198:	69 01       	movw	r12, r18
   1719a:	23 94       	inc	r2
   1719c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   171a0:	81 30       	cpi	r24, 0x01	; 1
   171a2:	51 f4       	brne	.+20     	; 0x171b8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d4>
   171a4:	67 e8       	ldi	r22, 0x87	; 135
   171a6:	7e e2       	ldi	r23, 0x2E	; 46
   171a8:	82 e5       	ldi	r24, 0x52	; 82
   171aa:	94 e1       	ldi	r25, 0x14	; 20
   171ac:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   171b0:	82 e5       	ldi	r24, 0x52	; 82
   171b2:	94 e1       	ldi	r25, 0x14	; 20
   171b4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   171b8:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   171bc:	8c e0       	ldi	r24, 0x0C	; 12
   171be:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   171c2:	88 eb       	ldi	r24, 0xB8	; 184
   171c4:	9b e0       	ldi	r25, 0x0B	; 11
   171c6:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
   171ca:	88 23       	and	r24, r24
   171cc:	09 f4       	brne	.+2      	; 0x171d0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2ec>
   171ce:	78 c1       	rjmp	.+752    	; 0x174c0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5dc>
   171d0:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   171d4:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   171d8:	88 23       	and	r24, r24
   171da:	09 f4       	brne	.+2      	; 0x171de <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2fa>
   171dc:	20 c1       	rjmp	.+576    	; 0x1741e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x53a>
   171de:	91 30       	cpi	r25, 0x01	; 1
   171e0:	59 f5       	brne	.+86     	; 0x17238 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x354>
   171e2:	61 e7       	ldi	r22, 0x71	; 113
   171e4:	7e e2       	ldi	r23, 0x2E	; 46
   171e6:	82 e5       	ldi	r24, 0x52	; 82
   171e8:	94 e1       	ldi	r25, 0x14	; 20
   171ea:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   171ee:	4a e0       	ldi	r20, 0x0A	; 10
   171f0:	50 e0       	ldi	r21, 0x00	; 0
   171f2:	6d e8       	ldi	r22, 0x8D	; 141
   171f4:	73 e1       	ldi	r23, 0x13	; 19
   171f6:	82 e5       	ldi	r24, 0x52	; 82
   171f8:	94 e1       	ldi	r25, 0x14	; 20
   171fa:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   171fe:	82 e5       	ldi	r24, 0x52	; 82
   17200:	94 e1       	ldi	r25, 0x14	; 20
   17202:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17206:	82 e5       	ldi	r24, 0x52	; 82
   17208:	94 e1       	ldi	r25, 0x14	; 20
   1720a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1720e:	63 e5       	ldi	r22, 0x53	; 83
   17210:	7e e2       	ldi	r23, 0x2E	; 46
   17212:	82 e5       	ldi	r24, 0x52	; 82
   17214:	94 e1       	ldi	r25, 0x14	; 20
   17216:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1721a:	47 e0       	ldi	r20, 0x07	; 7
   1721c:	50 e0       	ldi	r21, 0x00	; 0
   1721e:	b6 01       	movw	r22, r12
   17220:	82 e5       	ldi	r24, 0x52	; 82
   17222:	94 e1       	ldi	r25, 0x14	; 20
   17224:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
   17228:	82 e5       	ldi	r24, 0x52	; 82
   1722a:	94 e1       	ldi	r25, 0x14	; 20
   1722c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17230:	82 e5       	ldi	r24, 0x52	; 82
   17232:	94 e1       	ldi	r25, 0x14	; 20
   17234:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17238:	ad e8       	ldi	r26, 0x8D	; 141
   1723a:	b3 e1       	ldi	r27, 0x13	; 19
   1723c:	80 e0       	ldi	r24, 0x00	; 0
   1723e:	90 e0       	ldi	r25, 0x00	; 0
   17240:	2d 91       	ld	r18, X+
   17242:	f4 01       	movw	r30, r8
   17244:	e8 0f       	add	r30, r24
   17246:	f9 1f       	adc	r31, r25
   17248:	e9 54       	subi	r30, 0x49	; 73
   1724a:	f4 4f       	sbci	r31, 0xF4	; 244
   1724c:	31 81       	ldd	r19, Z+1	; 0x01
   1724e:	32 17       	cp	r19, r18
   17250:	09 f4       	brne	.+2      	; 0x17254 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x370>
   17252:	8c c0       	rjmp	.+280    	; 0x1736c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x488>
   17254:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17258:	81 30       	cpi	r24, 0x01	; 1
   1725a:	51 f4       	brne	.+20     	; 0x17270 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x38c>
   1725c:	68 e2       	ldi	r22, 0x28	; 40
   1725e:	7e e2       	ldi	r23, 0x2E	; 46
   17260:	82 e5       	ldi	r24, 0x52	; 82
   17262:	94 e1       	ldi	r25, 0x14	; 20
   17264:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17268:	82 e5       	ldi	r24, 0x52	; 82
   1726a:	94 e1       	ldi	r25, 0x14	; 20
   1726c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17270:	32 e0       	ldi	r19, 0x02	; 2
   17272:	23 16       	cp	r2, r19
   17274:	c1 f1       	breq	.+112    	; 0x172e6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x402>
   17276:	21 e0       	ldi	r18, 0x01	; 1
   17278:	f5 01       	movw	r30, r10
   1727a:	20 83       	st	Z, r18
   1727c:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
   17280:	90 e0       	ldi	r25, 0x00	; 0
   17282:	98 2f       	mov	r25, r24
   17284:	88 27       	eor	r24, r24
   17286:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
   1728a:	82 2b       	or	r24, r18
   1728c:	f7 01       	movw	r30, r14
   1728e:	91 83       	std	Z+1, r25	; 0x01
   17290:	80 83       	st	Z, r24
   17292:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
   17296:	48 12       	cpse	r4, r24
   17298:	6f c0       	rjmp	.+222    	; 0x17378 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x494>
   1729a:	83 e0       	ldi	r24, 0x03	; 3
   1729c:	28 2e       	mov	r2, r24
   1729e:	68 ee       	ldi	r22, 0xE8	; 232
   172a0:	73 e0       	ldi	r23, 0x03	; 3
   172a2:	80 e0       	ldi	r24, 0x00	; 0
   172a4:	90 e0       	ldi	r25, 0x00	; 0
   172a6:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   172aa:	43 e0       	ldi	r20, 0x03	; 3
   172ac:	24 12       	cpse	r2, r20
   172ae:	75 cf       	rjmp	.-278    	; 0x1719a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2b6>
   172b0:	0f 5f       	subi	r16, 0xFF	; 255
   172b2:	1f 4f       	sbci	r17, 0xFF	; 255
   172b4:	05 30       	cpi	r16, 0x05	; 5
   172b6:	11 05       	cpc	r17, r1
   172b8:	09 f4       	brne	.+2      	; 0x172bc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3d8>
   172ba:	6a c1       	rjmp	.+724    	; 0x17590 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6ac>
   172bc:	f8 01       	movw	r30, r16
   172be:	ec 0f       	add	r30, r28
   172c0:	fd 1f       	adc	r31, r29
   172c2:	ef 57       	subi	r30, 0x7F	; 127
   172c4:	f2 4f       	sbci	r31, 0xF2	; 242
   172c6:	f5 80       	ldd	r15, Z+5	; 0x05
   172c8:	8f ef       	ldi	r24, 0xFF	; 255
   172ca:	8f 0d       	add	r24, r15
   172cc:	85 31       	cpi	r24, 0x15	; 21
   172ce:	08 f0       	brcs	.+2      	; 0x172d2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ee>
   172d0:	4a c1       	rjmp	.+660    	; 0x17566 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x682>
   172d2:	a2 ce       	rjmp	.-700    	; 0x17018 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x134>
   172d4:	e6 2e       	mov	r14, r22
   172d6:	43 e0       	ldi	r20, 0x03	; 3
   172d8:	f4 2e       	mov	r15, r20
   172da:	b4 ce       	rjmp	.-664    	; 0x17044 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x160>
   172dc:	ee 24       	eor	r14, r14
   172de:	e3 94       	inc	r14
   172e0:	b1 ce       	rjmp	.-670    	; 0x17044 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x160>
   172e2:	5d 2c       	mov	r5, r13
   172e4:	2e cf       	rjmp	.-420    	; 0x17142 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x25e>
   172e6:	86 e0       	ldi	r24, 0x06	; 6
   172e8:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   172ec:	84 e6       	ldi	r24, 0x64	; 100
   172ee:	90 e0       	ldi	r25, 0x00	; 0
   172f0:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   172f4:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   172f8:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   172fc:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17300:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17304:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17308:	a0 62       	ori	r26, 0x20	; 32
   1730a:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1730e:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17312:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17316:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   1731a:	50 92 f9 13 	sts	0x13F9, r5	; 0x8013f9 <_sRuble_Parameters+0xb2>
   1731e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17322:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17326:	82 60       	ori	r24, 0x02	; 2
   17328:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1732c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17330:	00 e0       	ldi	r16, 0x00	; 0
   17332:	10 e0       	ldi	r17, 0x00	; 0
   17334:	fe 01       	movw	r30, r28
   17336:	e0 0f       	add	r30, r16
   17338:	f1 1f       	adc	r31, r17
   1733a:	ef 57       	subi	r30, 0x7F	; 127
   1733c:	f2 4f       	sbci	r31, 0xF2	; 242
   1733e:	e5 81       	ldd	r30, Z+5	; 0x05
   17340:	e6 31       	cpi	r30, 0x16	; 22
   17342:	68 f0       	brcs	.+26     	; 0x1735e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x47a>
   17344:	f0 e0       	ldi	r31, 0x00	; 0
   17346:	ef 53       	subi	r30, 0x3F	; 63
   17348:	fc 4e       	sbci	r31, 0xEC	; 236
   1734a:	61 e0       	ldi	r22, 0x01	; 1
   1734c:	80 81       	ld	r24, Z
   1734e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   17352:	68 ec       	ldi	r22, 0xC8	; 200
   17354:	70 e0       	ldi	r23, 0x00	; 0
   17356:	80 e0       	ldi	r24, 0x00	; 0
   17358:	90 e0       	ldi	r25, 0x00	; 0
   1735a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   1735e:	0f 5f       	subi	r16, 0xFF	; 255
   17360:	1f 4f       	sbci	r17, 0xFF	; 255
   17362:	05 30       	cpi	r16, 0x05	; 5
   17364:	11 05       	cpc	r17, r1
   17366:	31 f7       	brne	.-52     	; 0x17334 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x450>
   17368:	80 e0       	ldi	r24, 0x00	; 0
   1736a:	21 c1       	rjmp	.+578    	; 0x175ae <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6ca>
   1736c:	01 96       	adiw	r24, 0x01	; 1
   1736e:	86 30       	cpi	r24, 0x06	; 6
   17370:	91 05       	cpc	r25, r1
   17372:	09 f0       	breq	.+2      	; 0x17376 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x492>
   17374:	65 cf       	rjmp	.-310    	; 0x17240 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x35c>
   17376:	7f cf       	rjmp	.-258    	; 0x17276 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x392>
   17378:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1737c:	81 30       	cpi	r24, 0x01	; 1
   1737e:	51 f4       	brne	.+20     	; 0x17394 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4b0>
   17380:	65 e1       	ldi	r22, 0x15	; 21
   17382:	7e e2       	ldi	r23, 0x2E	; 46
   17384:	82 e5       	ldi	r24, 0x52	; 82
   17386:	94 e1       	ldi	r25, 0x14	; 20
   17388:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1738c:	82 e5       	ldi	r24, 0x52	; 82
   1738e:	94 e1       	ldi	r25, 0x14	; 20
   17390:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17394:	f2 e0       	ldi	r31, 0x02	; 2
   17396:	2f 12       	cpse	r2, r31
   17398:	82 cf       	rjmp	.-252    	; 0x1729e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ba>
   1739a:	86 e0       	ldi	r24, 0x06	; 6
   1739c:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   173a0:	84 e6       	ldi	r24, 0x64	; 100
   173a2:	90 e0       	ldi	r25, 0x00	; 0
   173a4:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   173a8:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   173ac:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   173b0:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   173b4:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   173b8:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   173bc:	a0 62       	ori	r26, 0x20	; 32
   173be:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   173c2:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   173c6:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   173ca:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   173ce:	50 92 f9 13 	sts	0x13F9, r5	; 0x8013f9 <_sRuble_Parameters+0xb2>
   173d2:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   173d6:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   173da:	82 60       	ori	r24, 0x02	; 2
   173dc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   173e0:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   173e4:	00 e0       	ldi	r16, 0x00	; 0
   173e6:	10 e0       	ldi	r17, 0x00	; 0
   173e8:	fe 01       	movw	r30, r28
   173ea:	e0 0f       	add	r30, r16
   173ec:	f1 1f       	adc	r31, r17
   173ee:	ef 57       	subi	r30, 0x7F	; 127
   173f0:	f2 4f       	sbci	r31, 0xF2	; 242
   173f2:	e5 81       	ldd	r30, Z+5	; 0x05
   173f4:	e6 31       	cpi	r30, 0x16	; 22
   173f6:	68 f0       	brcs	.+26     	; 0x17412 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x52e>
   173f8:	f0 e0       	ldi	r31, 0x00	; 0
   173fa:	ef 53       	subi	r30, 0x3F	; 63
   173fc:	fc 4e       	sbci	r31, 0xEC	; 236
   173fe:	61 e0       	ldi	r22, 0x01	; 1
   17400:	80 81       	ld	r24, Z
   17402:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   17406:	68 ec       	ldi	r22, 0xC8	; 200
   17408:	70 e0       	ldi	r23, 0x00	; 0
   1740a:	80 e0       	ldi	r24, 0x00	; 0
   1740c:	90 e0       	ldi	r25, 0x00	; 0
   1740e:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   17412:	0f 5f       	subi	r16, 0xFF	; 255
   17414:	1f 4f       	sbci	r17, 0xFF	; 255
   17416:	05 30       	cpi	r16, 0x05	; 5
   17418:	11 05       	cpc	r17, r1
   1741a:	31 f7       	brne	.-52     	; 0x173e8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x504>
   1741c:	a5 cf       	rjmp	.-182    	; 0x17368 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x484>
   1741e:	91 30       	cpi	r25, 0x01	; 1
   17420:	51 f4       	brne	.+20     	; 0x17436 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x552>
   17422:	6a ed       	ldi	r22, 0xDA	; 218
   17424:	7d e2       	ldi	r23, 0x2D	; 45
   17426:	82 e5       	ldi	r24, 0x52	; 82
   17428:	94 e1       	ldi	r25, 0x14	; 20
   1742a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1742e:	82 e5       	ldi	r24, 0x52	; 82
   17430:	94 e1       	ldi	r25, 0x14	; 20
   17432:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17436:	22 e0       	ldi	r18, 0x02	; 2
   17438:	22 12       	cpse	r2, r18
   1743a:	31 cf       	rjmp	.-414    	; 0x1729e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ba>
   1743c:	86 e0       	ldi	r24, 0x06	; 6
   1743e:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   17442:	84 e6       	ldi	r24, 0x64	; 100
   17444:	90 e0       	ldi	r25, 0x00	; 0
   17446:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   1744a:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   1744e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17452:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17456:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1745a:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   1745e:	a0 62       	ori	r26, 0x20	; 32
   17460:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17464:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17468:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   1746c:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17470:	50 92 f9 13 	sts	0x13F9, r5	; 0x8013f9 <_sRuble_Parameters+0xb2>
   17474:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17478:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1747c:	82 60       	ori	r24, 0x02	; 2
   1747e:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17482:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17486:	00 e0       	ldi	r16, 0x00	; 0
   17488:	10 e0       	ldi	r17, 0x00	; 0
   1748a:	fe 01       	movw	r30, r28
   1748c:	e0 0f       	add	r30, r16
   1748e:	f1 1f       	adc	r31, r17
   17490:	ef 57       	subi	r30, 0x7F	; 127
   17492:	f2 4f       	sbci	r31, 0xF2	; 242
   17494:	e5 81       	ldd	r30, Z+5	; 0x05
   17496:	e6 31       	cpi	r30, 0x16	; 22
   17498:	68 f0       	brcs	.+26     	; 0x174b4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5d0>
   1749a:	f0 e0       	ldi	r31, 0x00	; 0
   1749c:	ef 53       	subi	r30, 0x3F	; 63
   1749e:	fc 4e       	sbci	r31, 0xEC	; 236
   174a0:	61 e0       	ldi	r22, 0x01	; 1
   174a2:	80 81       	ld	r24, Z
   174a4:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   174a8:	68 ec       	ldi	r22, 0xC8	; 200
   174aa:	70 e0       	ldi	r23, 0x00	; 0
   174ac:	80 e0       	ldi	r24, 0x00	; 0
   174ae:	90 e0       	ldi	r25, 0x00	; 0
   174b0:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   174b4:	0f 5f       	subi	r16, 0xFF	; 255
   174b6:	1f 4f       	sbci	r17, 0xFF	; 255
   174b8:	05 30       	cpi	r16, 0x05	; 5
   174ba:	11 05       	cpc	r17, r1
   174bc:	31 f7       	brne	.-52     	; 0x1748a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5a6>
   174be:	54 cf       	rjmp	.-344    	; 0x17368 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x484>
   174c0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   174c4:	81 30       	cpi	r24, 0x01	; 1
   174c6:	51 f4       	brne	.+20     	; 0x174dc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5f8>
   174c8:	6f e9       	ldi	r22, 0x9F	; 159
   174ca:	7d e2       	ldi	r23, 0x2D	; 45
   174cc:	82 e5       	ldi	r24, 0x52	; 82
   174ce:	94 e1       	ldi	r25, 0x14	; 20
   174d0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   174d4:	82 e5       	ldi	r24, 0x52	; 82
   174d6:	94 e1       	ldi	r25, 0x14	; 20
   174d8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   174dc:	32 e0       	ldi	r19, 0x02	; 2
   174de:	23 12       	cpse	r2, r19
   174e0:	de ce       	rjmp	.-580    	; 0x1729e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ba>
   174e2:	86 e0       	ldi	r24, 0x06	; 6
   174e4:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   174e8:	84 e6       	ldi	r24, 0x64	; 100
   174ea:	90 e0       	ldi	r25, 0x00	; 0
   174ec:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   174f0:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   174f4:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   174f8:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   174fc:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17500:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17504:	a0 62       	ori	r26, 0x20	; 32
   17506:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1750a:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1750e:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17512:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17516:	50 92 f9 13 	sts	0x13F9, r5	; 0x8013f9 <_sRuble_Parameters+0xb2>
   1751a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1751e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17522:	82 60       	ori	r24, 0x02	; 2
   17524:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17528:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1752c:	00 e0       	ldi	r16, 0x00	; 0
   1752e:	10 e0       	ldi	r17, 0x00	; 0
   17530:	fe 01       	movw	r30, r28
   17532:	e0 0f       	add	r30, r16
   17534:	f1 1f       	adc	r31, r17
   17536:	ef 57       	subi	r30, 0x7F	; 127
   17538:	f2 4f       	sbci	r31, 0xF2	; 242
   1753a:	e5 81       	ldd	r30, Z+5	; 0x05
   1753c:	e6 31       	cpi	r30, 0x16	; 22
   1753e:	68 f0       	brcs	.+26     	; 0x1755a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x676>
   17540:	f0 e0       	ldi	r31, 0x00	; 0
   17542:	ef 53       	subi	r30, 0x3F	; 63
   17544:	fc 4e       	sbci	r31, 0xEC	; 236
   17546:	61 e0       	ldi	r22, 0x01	; 1
   17548:	80 81       	ld	r24, Z
   1754a:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1754e:	68 ec       	ldi	r22, 0xC8	; 200
   17550:	70 e0       	ldi	r23, 0x00	; 0
   17552:	80 e0       	ldi	r24, 0x00	; 0
   17554:	90 e0       	ldi	r25, 0x00	; 0
   17556:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   1755a:	0f 5f       	subi	r16, 0xFF	; 255
   1755c:	1f 4f       	sbci	r17, 0xFF	; 255
   1755e:	05 30       	cpi	r16, 0x05	; 5
   17560:	11 05       	cpc	r17, r1
   17562:	31 f7       	brne	.-52     	; 0x17530 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x64c>
   17564:	01 cf       	rjmp	.-510    	; 0x17368 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x484>
   17566:	85 e1       	ldi	r24, 0x15	; 21
   17568:	8f 15       	cp	r24, r15
   1756a:	08 f0       	brcs	.+2      	; 0x1756e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x68a>
   1756c:	a1 ce       	rjmp	.-702    	; 0x172b0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3cc>
   1756e:	61 e0       	ldi	r22, 0x01	; 1
   17570:	41 10       	cpse	r4, r1
   17572:	60 e0       	ldi	r22, 0x00	; 0
   17574:	ef 2d       	mov	r30, r15
   17576:	f0 e0       	ldi	r31, 0x00	; 0
   17578:	ef 53       	subi	r30, 0x3F	; 63
   1757a:	fc 4e       	sbci	r31, 0xEC	; 236
   1757c:	80 81       	ld	r24, Z
   1757e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   17582:	68 ec       	ldi	r22, 0xC8	; 200
   17584:	70 e0       	ldi	r23, 0x00	; 0
   17586:	80 e0       	ldi	r24, 0x00	; 0
   17588:	90 e0       	ldi	r25, 0x00	; 0
   1758a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   1758e:	90 ce       	rjmp	.-736    	; 0x172b0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3cc>
   17590:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17594:	81 30       	cpi	r24, 0x01	; 1
   17596:	51 f4       	brne	.+20     	; 0x175ac <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6c8>
   17598:	60 e8       	ldi	r22, 0x80	; 128
   1759a:	7d e2       	ldi	r23, 0x2D	; 45
   1759c:	82 e5       	ldi	r24, 0x52	; 82
   1759e:	94 e1       	ldi	r25, 0x14	; 20
   175a0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   175a4:	82 e5       	ldi	r24, 0x52	; 82
   175a6:	94 e1       	ldi	r25, 0x14	; 20
   175a8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   175ac:	81 e0       	ldi	r24, 0x01	; 1
   175ae:	df 91       	pop	r29
   175b0:	cf 91       	pop	r28
   175b2:	1f 91       	pop	r17
   175b4:	0f 91       	pop	r16
   175b6:	ff 90       	pop	r15
   175b8:	ef 90       	pop	r14
   175ba:	df 90       	pop	r13
   175bc:	cf 90       	pop	r12
   175be:	bf 90       	pop	r11
   175c0:	af 90       	pop	r10
   175c2:	9f 90       	pop	r9
   175c4:	8f 90       	pop	r8
   175c6:	7f 90       	pop	r7
   175c8:	6f 90       	pop	r6
   175ca:	5f 90       	pop	r5
   175cc:	4f 90       	pop	r4
   175ce:	3f 90       	pop	r3
   175d0:	2f 90       	pop	r2
   175d2:	08 95       	ret

000175d4 <_Z20Wireless_Pump_On_Offhh>:
   175d4:	6f 92       	push	r6
   175d6:	7f 92       	push	r7
   175d8:	8f 92       	push	r8
   175da:	9f 92       	push	r9
   175dc:	af 92       	push	r10
   175de:	bf 92       	push	r11
   175e0:	cf 92       	push	r12
   175e2:	df 92       	push	r13
   175e4:	ef 92       	push	r14
   175e6:	ff 92       	push	r15
   175e8:	0f 93       	push	r16
   175ea:	1f 93       	push	r17
   175ec:	cf 93       	push	r28
   175ee:	df 93       	push	r29
   175f0:	78 2e       	mov	r7, r24
   175f2:	c6 2f       	mov	r28, r22
   175f4:	80 91 6a 0d 	lds	r24, 0x0D6A	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   175f8:	8f 5f       	subi	r24, 0xFF	; 255
   175fa:	80 93 6a 0d 	sts	0x0D6A, r24	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   175fe:	22 e0       	ldi	r18, 0x02	; 2
   17600:	72 16       	cp	r7, r18
   17602:	39 f0       	breq	.+14     	; 0x17612 <_Z20Wireless_Pump_On_Offhh+0x3e>
   17604:	34 e0       	ldi	r19, 0x04	; 4
   17606:	73 16       	cp	r7, r19
   17608:	21 f0       	breq	.+8      	; 0x17612 <_Z20Wireless_Pump_On_Offhh+0x3e>
   1760a:	81 e0       	ldi	r24, 0x01	; 1
   1760c:	78 12       	cpse	r7, r24
   1760e:	0f c3       	rjmp	.+1566   	; 0x17c2e <_Z20Wireless_Pump_On_Offhh+0x65a>
   17610:	42 c2       	rjmp	.+1156   	; 0x17a96 <_Z20Wireless_Pump_On_Offhh+0x4c2>
   17612:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17616:	81 30       	cpi	r24, 0x01	; 1
   17618:	89 f4       	brne	.+34     	; 0x1763c <_Z20Wireless_Pump_On_Offhh+0x68>
   1761a:	63 e1       	ldi	r22, 0x13	; 19
   1761c:	7d e2       	ldi	r23, 0x2D	; 45
   1761e:	82 e5       	ldi	r24, 0x52	; 82
   17620:	94 e1       	ldi	r25, 0x14	; 20
   17622:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17626:	4a e0       	ldi	r20, 0x0A	; 10
   17628:	50 e0       	ldi	r21, 0x00	; 0
   1762a:	6c 2f       	mov	r22, r28
   1762c:	82 e5       	ldi	r24, 0x52	; 82
   1762e:	94 e1       	ldi	r25, 0x14	; 20
   17630:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   17634:	82 e5       	ldi	r24, 0x52	; 82
   17636:	94 e1       	ldi	r25, 0x14	; 20
   17638:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1763c:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   17640:	81 11       	cpse	r24, r1
   17642:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   17646:	84 e1       	ldi	r24, 0x14	; 20
   17648:	e9 e7       	ldi	r30, 0x79	; 121
   1764a:	f3 e1       	ldi	r31, 0x13	; 19
   1764c:	df 01       	movw	r26, r30
   1764e:	1d 92       	st	X+, r1
   17650:	8a 95       	dec	r24
   17652:	e9 f7       	brne	.-6      	; 0x1764e <_Z20Wireless_Pump_On_Offhh+0x7a>
   17654:	0c 2f       	mov	r16, r28
   17656:	10 e0       	ldi	r17, 0x00	; 0
   17658:	bb e0       	ldi	r27, 0x0B	; 11
   1765a:	cb 9f       	mul	r28, r27
   1765c:	c0 01       	movw	r24, r0
   1765e:	11 24       	eor	r1, r1
   17660:	fc 01       	movw	r30, r24
   17662:	ea 56       	subi	r30, 0x6A	; 106
   17664:	f4 4f       	sbci	r31, 0xF4	; 244
   17666:	21 81       	ldd	r18, Z+1	; 0x01
   17668:	20 93 79 13 	sts	0x1379, r18	; 0x801379 <_sRuble_Parameters+0x32>
   1766c:	22 81       	ldd	r18, Z+2	; 0x02
   1766e:	20 93 7a 13 	sts	0x137A, r18	; 0x80137a <_sRuble_Parameters+0x33>
   17672:	23 81       	ldd	r18, Z+3	; 0x03
   17674:	20 93 7b 13 	sts	0x137B, r18	; 0x80137b <_sRuble_Parameters+0x34>
   17678:	24 81       	ldd	r18, Z+4	; 0x04
   1767a:	20 93 7c 13 	sts	0x137C, r18	; 0x80137c <_sRuble_Parameters+0x35>
   1767e:	25 81       	ldd	r18, Z+5	; 0x05
   17680:	20 93 7d 13 	sts	0x137D, r18	; 0x80137d <_sRuble_Parameters+0x36>
   17684:	26 81       	ldd	r18, Z+6	; 0x06
   17686:	20 93 7e 13 	sts	0x137E, r18	; 0x80137e <_sRuble_Parameters+0x37>
   1768a:	21 e0       	ldi	r18, 0x01	; 1
   1768c:	20 93 7f 13 	sts	0x137F, r18	; 0x80137f <_sRuble_Parameters+0x38>
   17690:	70 92 80 13 	sts	0x1380, r7	; 0x801380 <_sRuble_Parameters+0x39>
   17694:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   17698:	20 93 81 13 	sts	0x1381, r18	; 0x801381 <_sRuble_Parameters+0x3a>
   1769c:	20 91 5d 13 	lds	r18, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   176a0:	20 93 83 13 	sts	0x1383, r18	; 0x801383 <_sRuble_Parameters+0x3c>
   176a4:	21 e0       	ldi	r18, 0x01	; 1
   176a6:	2c 0f       	add	r18, r28
   176a8:	20 93 84 13 	sts	0x1384, r18	; 0x801384 <_sRuble_Parameters+0x3d>
   176ac:	23 e5       	ldi	r18, 0x53	; 83
   176ae:	20 93 85 13 	sts	0x1385, r18	; 0x801385 <_sRuble_Parameters+0x3e>
   176b2:	4c 01       	movw	r8, r24
   176b4:	d0 e0       	ldi	r29, 0x00	; 0
   176b6:	9c 01       	movw	r18, r24
   176b8:	29 56       	subi	r18, 0x69	; 105
   176ba:	34 4f       	sbci	r19, 0xF4	; 244
   176bc:	79 01       	movw	r14, r18
   176be:	df 5f       	subi	r29, 0xFF	; 255
   176c0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   176c4:	81 30       	cpi	r24, 0x01	; 1
   176c6:	51 f4       	brne	.+20     	; 0x176dc <_Z20Wireless_Pump_On_Offhh+0x108>
   176c8:	6c ee       	ldi	r22, 0xEC	; 236
   176ca:	7c e2       	ldi	r23, 0x2C	; 44
   176cc:	82 e5       	ldi	r24, 0x52	; 82
   176ce:	94 e1       	ldi	r25, 0x14	; 20
   176d0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   176d4:	82 e5       	ldi	r24, 0x52	; 82
   176d6:	94 e1       	ldi	r25, 0x14	; 20
   176d8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   176dc:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   176e0:	10 92 a0 0c 	sts	0x0CA0, r1	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
   176e4:	10 92 9f 0c 	sts	0x0C9F, r1	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
   176e8:	8d e0       	ldi	r24, 0x0D	; 13
   176ea:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   176ee:	61 2c       	mov	r6, r1
   176f0:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   176f4:	88 23       	and	r24, r24
   176f6:	09 f4       	brne	.+2      	; 0x176fa <_Z20Wireless_Pump_On_Offhh+0x126>
   176f8:	68 c1       	rjmp	.+720    	; 0x179ca <_Z20Wireless_Pump_On_Offhh+0x3f6>
   176fa:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   176fe:	81 30       	cpi	r24, 0x01	; 1
   17700:	71 f4       	brne	.+28     	; 0x1771e <_Z20Wireless_Pump_On_Offhh+0x14a>
   17702:	60 ed       	ldi	r22, 0xD0	; 208
   17704:	7c e2       	ldi	r23, 0x2C	; 44
   17706:	82 e5       	ldi	r24, 0x52	; 82
   17708:	94 e1       	ldi	r25, 0x14	; 20
   1770a:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1770e:	82 e5       	ldi	r24, 0x52	; 82
   17710:	94 e1       	ldi	r25, 0x14	; 20
   17712:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17716:	82 e5       	ldi	r24, 0x52	; 82
   17718:	94 e1       	ldi	r25, 0x14	; 20
   1771a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1771e:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   17722:	88 23       	and	r24, r24
   17724:	09 f4       	brne	.+2      	; 0x17728 <_Z20Wireless_Pump_On_Offhh+0x154>
   17726:	51 c1       	rjmp	.+674    	; 0x179ca <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17728:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1772c:	81 30       	cpi	r24, 0x01	; 1
   1772e:	59 f5       	brne	.+86     	; 0x17786 <_Z20Wireless_Pump_On_Offhh+0x1b2>
   17730:	67 eb       	ldi	r22, 0xB7	; 183
   17732:	7c e2       	ldi	r23, 0x2C	; 44
   17734:	82 e5       	ldi	r24, 0x52	; 82
   17736:	94 e1       	ldi	r25, 0x14	; 20
   17738:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1773c:	4a e0       	ldi	r20, 0x0A	; 10
   1773e:	50 e0       	ldi	r21, 0x00	; 0
   17740:	6d e8       	ldi	r22, 0x8D	; 141
   17742:	73 e1       	ldi	r23, 0x13	; 19
   17744:	82 e5       	ldi	r24, 0x52	; 82
   17746:	94 e1       	ldi	r25, 0x14	; 20
   17748:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   1774c:	82 e5       	ldi	r24, 0x52	; 82
   1774e:	94 e1       	ldi	r25, 0x14	; 20
   17750:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17754:	82 e5       	ldi	r24, 0x52	; 82
   17756:	94 e1       	ldi	r25, 0x14	; 20
   17758:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1775c:	60 e9       	ldi	r22, 0x90	; 144
   1775e:	7c e2       	ldi	r23, 0x2C	; 44
   17760:	82 e5       	ldi	r24, 0x52	; 82
   17762:	94 e1       	ldi	r25, 0x14	; 20
   17764:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17768:	47 e0       	ldi	r20, 0x07	; 7
   1776a:	50 e0       	ldi	r21, 0x00	; 0
   1776c:	b7 01       	movw	r22, r14
   1776e:	82 e5       	ldi	r24, 0x52	; 82
   17770:	94 e1       	ldi	r25, 0x14	; 20
   17772:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
   17776:	82 e5       	ldi	r24, 0x52	; 82
   17778:	94 e1       	ldi	r25, 0x14	; 20
   1777a:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   1777e:	82 e5       	ldi	r24, 0x52	; 82
   17780:	94 e1       	ldi	r25, 0x14	; 20
   17782:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17786:	8d e8       	ldi	r24, 0x8D	; 141
   17788:	a8 2e       	mov	r10, r24
   1778a:	83 e1       	ldi	r24, 0x13	; 19
   1778c:	b8 2e       	mov	r11, r24
   1778e:	c1 2c       	mov	r12, r1
   17790:	d1 2c       	mov	r13, r1
   17792:	d5 01       	movw	r26, r10
   17794:	8d 91       	ld	r24, X+
   17796:	5d 01       	movw	r10, r26
   17798:	f4 01       	movw	r30, r8
   1779a:	ec 0d       	add	r30, r12
   1779c:	fd 1d       	adc	r31, r13
   1779e:	ea 56       	subi	r30, 0x6A	; 106
   177a0:	f4 4f       	sbci	r31, 0xF4	; 244
   177a2:	91 81       	ldd	r25, Z+1	; 0x01
   177a4:	98 17       	cp	r25, r24
   177a6:	09 f4       	brne	.+2      	; 0x177aa <_Z20Wireless_Pump_On_Offhh+0x1d6>
   177a8:	54 c0       	rjmp	.+168    	; 0x17852 <_Z20Wireless_Pump_On_Offhh+0x27e>
   177aa:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   177ae:	81 30       	cpi	r24, 0x01	; 1
   177b0:	51 f4       	brne	.+20     	; 0x177c6 <_Z20Wireless_Pump_On_Offhh+0x1f2>
   177b2:	64 e6       	ldi	r22, 0x64	; 100
   177b4:	7c e2       	ldi	r23, 0x2C	; 44
   177b6:	82 e5       	ldi	r24, 0x52	; 82
   177b8:	94 e1       	ldi	r25, 0x14	; 20
   177ba:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   177be:	82 e5       	ldi	r24, 0x52	; 82
   177c0:	94 e1       	ldi	r25, 0x14	; 20
   177c2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   177c6:	68 ee       	ldi	r22, 0xE8	; 232
   177c8:	73 e0       	ldi	r23, 0x03	; 3
   177ca:	80 e0       	ldi	r24, 0x00	; 0
   177cc:	90 e0       	ldi	r25, 0x00	; 0
   177ce:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   177d2:	80 91 9f 0c 	lds	r24, 0x0C9F	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
   177d6:	90 91 a0 0c 	lds	r25, 0x0CA0	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
   177da:	0b 97       	sbiw	r24, 0x0b	; 11
   177dc:	a0 f0       	brcs	.+40     	; 0x17806 <_Z20Wireless_Pump_On_Offhh+0x232>
   177de:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   177e2:	81 30       	cpi	r24, 0x01	; 1
   177e4:	09 f0       	breq	.+2      	; 0x177e8 <_Z20Wireless_Pump_On_Offhh+0x214>
   177e6:	91 c0       	rjmp	.+290    	; 0x1790a <_Z20Wireless_Pump_On_Offhh+0x336>
   177e8:	66 e4       	ldi	r22, 0x46	; 70
   177ea:	7c e2       	ldi	r23, 0x2C	; 44
   177ec:	82 e5       	ldi	r24, 0x52	; 82
   177ee:	94 e1       	ldi	r25, 0x14	; 20
   177f0:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   177f4:	82 e5       	ldi	r24, 0x52	; 82
   177f6:	94 e1       	ldi	r25, 0x14	; 20
   177f8:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   177fc:	82 e5       	ldi	r24, 0x52	; 82
   177fe:	94 e1       	ldi	r25, 0x14	; 20
   17800:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17804:	82 c0       	rjmp	.+260    	; 0x1790a <_Z20Wireless_Pump_On_Offhh+0x336>
   17806:	d3 30       	cpi	r29, 0x03	; 3
   17808:	10 f1       	brcs	.+68     	; 0x1784e <_Z20Wireless_Pump_On_Offhh+0x27a>
   1780a:	80 91 6a 0d 	lds	r24, 0x0D6A	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1780e:	83 30       	cpi	r24, 0x03	; 3
   17810:	f0 f0       	brcs	.+60     	; 0x1784e <_Z20Wireless_Pump_On_Offhh+0x27a>
   17812:	10 92 6a 0d 	sts	0x0D6A, r1	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17816:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   1781a:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1781e:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17822:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17826:	a0 62       	ori	r26, 0x20	; 32
   17828:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1782c:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17830:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17834:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17838:	c0 93 fa 13 	sts	0x13FA, r28	; 0x8013fa <_sRuble_Parameters+0xb3>
   1783c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17840:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17844:	90 68       	ori	r25, 0x80	; 128
   17846:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1784a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1784e:	66 24       	eor	r6, r6
   17850:	63 94       	inc	r6
   17852:	bf ef       	ldi	r27, 0xFF	; 255
   17854:	cb 1a       	sub	r12, r27
   17856:	db 0a       	sbc	r13, r27
   17858:	e6 e0       	ldi	r30, 0x06	; 6
   1785a:	ce 16       	cp	r12, r30
   1785c:	d1 04       	cpc	r13, r1
   1785e:	09 f0       	breq	.+2      	; 0x17862 <_Z20Wireless_Pump_On_Offhh+0x28e>
   17860:	98 cf       	rjmp	.-208    	; 0x17792 <_Z20Wireless_Pump_On_Offhh+0x1be>
   17862:	61 10       	cpse	r6, r1
   17864:	b2 c0       	rjmp	.+356    	; 0x179ca <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17866:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1786a:	81 30       	cpi	r24, 0x01	; 1
   1786c:	71 f4       	brne	.+28     	; 0x1788a <_Z20Wireless_Pump_On_Offhh+0x2b6>
   1786e:	6a e2       	ldi	r22, 0x2A	; 42
   17870:	7c e2       	ldi	r23, 0x2C	; 44
   17872:	82 e5       	ldi	r24, 0x52	; 82
   17874:	94 e1       	ldi	r25, 0x14	; 20
   17876:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1787a:	82 e5       	ldi	r24, 0x52	; 82
   1787c:	94 e1       	ldi	r25, 0x14	; 20
   1787e:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17882:	82 e5       	ldi	r24, 0x52	; 82
   17884:	94 e1       	ldi	r25, 0x14	; 20
   17886:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1788a:	68 ee       	ldi	r22, 0xE8	; 232
   1788c:	73 e0       	ldi	r23, 0x03	; 3
   1788e:	80 e0       	ldi	r24, 0x00	; 0
   17890:	90 e0       	ldi	r25, 0x00	; 0
   17892:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   17896:	f2 e0       	ldi	r31, 0x02	; 2
   17898:	7f 12       	cpse	r7, r31
   1789a:	3f c0       	rjmp	.+126    	; 0x1791a <_Z20Wireless_Pump_On_Offhh+0x346>
   1789c:	90 91 94 13 	lds	r25, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
   178a0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   178a4:	92 30       	cpi	r25, 0x02	; 2
   178a6:	31 f4       	brne	.+12     	; 0x178b4 <_Z20Wireless_Pump_On_Offhh+0x2e0>
   178a8:	81 30       	cpi	r24, 0x01	; 1
   178aa:	09 f0       	breq	.+2      	; 0x178ae <_Z20Wireless_Pump_On_Offhh+0x2da>
   178ac:	47 c0       	rjmp	.+142    	; 0x1793c <_Z20Wireless_Pump_On_Offhh+0x368>
   178ae:	60 e2       	ldi	r22, 0x20	; 32
   178b0:	7c e2       	ldi	r23, 0x2C	; 44
   178b2:	40 c0       	rjmp	.+128    	; 0x17934 <_Z20Wireless_Pump_On_Offhh+0x360>
   178b4:	98 30       	cpi	r25, 0x08	; 8
   178b6:	59 f5       	brne	.+86     	; 0x1790e <_Z20Wireless_Pump_On_Offhh+0x33a>
   178b8:	81 30       	cpi	r24, 0x01	; 1
   178ba:	31 f4       	brne	.+12     	; 0x178c8 <_Z20Wireless_Pump_On_Offhh+0x2f4>
   178bc:	62 e0       	ldi	r22, 0x02	; 2
   178be:	7c e2       	ldi	r23, 0x2C	; 44
   178c0:	82 e5       	ldi	r24, 0x52	; 82
   178c2:	94 e1       	ldi	r25, 0x14	; 20
   178c4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   178c8:	10 92 6a 0d 	sts	0x0D6A, r1	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   178cc:	c0 93 fa 13 	sts	0x13FA, r28	; 0x8013fa <_sRuble_Parameters+0xb3>
   178d0:	84 e0       	ldi	r24, 0x04	; 4
   178d2:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   178d6:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   178da:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   178de:	82 60       	ori	r24, 0x02	; 2
   178e0:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   178e4:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   178e8:	8b e0       	ldi	r24, 0x0B	; 11
   178ea:	80 9f       	mul	r24, r16
   178ec:	f0 01       	movw	r30, r0
   178ee:	81 9f       	mul	r24, r17
   178f0:	f0 0d       	add	r31, r0
   178f2:	11 24       	eor	r1, r1
   178f4:	ea 56       	subi	r30, 0x6A	; 106
   178f6:	f4 4f       	sbci	r31, 0xF4	; 244
   178f8:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x51>
   178fc:	90 91 99 13 	lds	r25, 0x1399	; 0x801399 <_sRuble_Parameters+0x52>
   17900:	98 27       	eor	r25, r24
   17902:	89 27       	eor	r24, r25
   17904:	98 27       	eor	r25, r24
   17906:	91 87       	std	Z+9, r25	; 0x09
   17908:	80 87       	std	Z+8, r24	; 0x08
   1790a:	c0 e0       	ldi	r28, 0x00	; 0
   1790c:	92 c1       	rjmp	.+804    	; 0x17c32 <_Z20Wireless_Pump_On_Offhh+0x65e>
   1790e:	81 30       	cpi	r24, 0x01	; 1
   17910:	09 f0       	breq	.+2      	; 0x17914 <_Z20Wireless_Pump_On_Offhh+0x340>
   17912:	5d c0       	rjmp	.+186    	; 0x179ce <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17914:	66 ee       	ldi	r22, 0xE6	; 230
   17916:	7b e2       	ldi	r23, 0x2B	; 43
   17918:	4f c0       	rjmp	.+158    	; 0x179b8 <_Z20Wireless_Pump_On_Offhh+0x3e4>
   1791a:	24 e0       	ldi	r18, 0x04	; 4
   1791c:	72 12       	cpse	r7, r18
   1791e:	57 c0       	rjmp	.+174    	; 0x179ce <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17920:	90 91 94 13 	lds	r25, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
   17924:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17928:	94 30       	cpi	r25, 0x04	; 4
   1792a:	e1 f4       	brne	.+56     	; 0x17964 <_Z20Wireless_Pump_On_Offhh+0x390>
   1792c:	81 30       	cpi	r24, 0x01	; 1
   1792e:	31 f4       	brne	.+12     	; 0x1793c <_Z20Wireless_Pump_On_Offhh+0x368>
   17930:	6b ed       	ldi	r22, 0xDB	; 219
   17932:	7b e2       	ldi	r23, 0x2B	; 43
   17934:	82 e5       	ldi	r24, 0x52	; 82
   17936:	94 e1       	ldi	r25, 0x14	; 20
   17938:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1793c:	10 92 6a 0d 	sts	0x0D6A, r1	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17940:	8b e0       	ldi	r24, 0x0B	; 11
   17942:	80 9f       	mul	r24, r16
   17944:	f0 01       	movw	r30, r0
   17946:	81 9f       	mul	r24, r17
   17948:	f0 0d       	add	r31, r0
   1794a:	11 24       	eor	r1, r1
   1794c:	ea 56       	subi	r30, 0x6A	; 106
   1794e:	f4 4f       	sbci	r31, 0xF4	; 244
   17950:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x51>
   17954:	90 91 99 13 	lds	r25, 0x1399	; 0x801399 <_sRuble_Parameters+0x52>
   17958:	98 27       	eor	r25, r24
   1795a:	89 27       	eor	r24, r25
   1795c:	98 27       	eor	r25, r24
   1795e:	91 87       	std	Z+9, r25	; 0x09
   17960:	80 87       	std	Z+8, r24	; 0x08
   17962:	66 c1       	rjmp	.+716    	; 0x17c30 <_Z20Wireless_Pump_On_Offhh+0x65c>
   17964:	98 30       	cpi	r25, 0x08	; 8
   17966:	21 f5       	brne	.+72     	; 0x179b0 <_Z20Wireless_Pump_On_Offhh+0x3dc>
   17968:	81 30       	cpi	r24, 0x01	; 1
   1796a:	31 f4       	brne	.+12     	; 0x17978 <_Z20Wireless_Pump_On_Offhh+0x3a4>
   1796c:	6d eb       	ldi	r22, 0xBD	; 189
   1796e:	7b e2       	ldi	r23, 0x2B	; 43
   17970:	82 e5       	ldi	r24, 0x52	; 82
   17972:	94 e1       	ldi	r25, 0x14	; 20
   17974:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17978:	10 92 6a 0d 	sts	0x0D6A, r1	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1797c:	8b e0       	ldi	r24, 0x0B	; 11
   1797e:	80 9f       	mul	r24, r16
   17980:	f0 01       	movw	r30, r0
   17982:	81 9f       	mul	r24, r17
   17984:	f0 0d       	add	r31, r0
   17986:	11 24       	eor	r1, r1
   17988:	ea 56       	subi	r30, 0x6A	; 106
   1798a:	f4 4f       	sbci	r31, 0xF4	; 244
   1798c:	80 91 98 13 	lds	r24, 0x1398	; 0x801398 <_sRuble_Parameters+0x51>
   17990:	90 91 99 13 	lds	r25, 0x1399	; 0x801399 <_sRuble_Parameters+0x52>
   17994:	98 27       	eor	r25, r24
   17996:	89 27       	eor	r24, r25
   17998:	98 27       	eor	r25, r24
   1799a:	91 87       	std	Z+9, r25	; 0x09
   1799c:	80 87       	std	Z+8, r24	; 0x08
   1799e:	84 e0       	ldi	r24, 0x04	; 4
   179a0:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   179a4:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   179a8:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   179ac:	82 60       	ori	r24, 0x02	; 2
   179ae:	6e c0       	rjmp	.+220    	; 0x17a8c <_Z20Wireless_Pump_On_Offhh+0x4b8>
   179b0:	81 30       	cpi	r24, 0x01	; 1
   179b2:	69 f4       	brne	.+26     	; 0x179ce <_Z20Wireless_Pump_On_Offhh+0x3fa>
   179b4:	61 ea       	ldi	r22, 0xA1	; 161
   179b6:	7b e2       	ldi	r23, 0x2B	; 43
   179b8:	82 e5       	ldi	r24, 0x52	; 82
   179ba:	94 e1       	ldi	r25, 0x14	; 20
   179bc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   179c0:	82 e5       	ldi	r24, 0x52	; 82
   179c2:	94 e1       	ldi	r25, 0x14	; 20
   179c4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   179c8:	02 c0       	rjmp	.+4      	; 0x179ce <_Z20Wireless_Pump_On_Offhh+0x3fa>
   179ca:	80 e0       	ldi	r24, 0x00	; 0
   179cc:	02 c0       	rjmp	.+4      	; 0x179d2 <_Z20Wireless_Pump_On_Offhh+0x3fe>
   179ce:	81 e0       	ldi	r24, 0x01	; 1
   179d0:	d3 e0       	ldi	r29, 0x03	; 3
   179d2:	20 91 9f 0c 	lds	r18, 0x0C9F	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
   179d6:	30 91 a0 0c 	lds	r19, 0x0CA0	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
   179da:	28 30       	cpi	r18, 0x08	; 8
   179dc:	31 05       	cpc	r19, r1
   179de:	20 f4       	brcc	.+8      	; 0x179e8 <_Z20Wireless_Pump_On_Offhh+0x414>
   179e0:	88 23       	and	r24, r24
   179e2:	09 f4       	brne	.+2      	; 0x179e6 <_Z20Wireless_Pump_On_Offhh+0x412>
   179e4:	85 ce       	rjmp	.-758    	; 0x176f0 <_Z20Wireless_Pump_On_Offhh+0x11c>
   179e6:	02 c0       	rjmp	.+4      	; 0x179ec <_Z20Wireless_Pump_On_Offhh+0x418>
   179e8:	81 30       	cpi	r24, 0x01	; 1
   179ea:	b1 f4       	brne	.+44     	; 0x17a18 <_Z20Wireless_Pump_On_Offhh+0x444>
   179ec:	10 92 6a 0d 	sts	0x0D6A, r1	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   179f0:	c0 91 37 14 	lds	r28, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   179f4:	c1 30       	cpi	r28, 0x01	; 1
   179f6:	09 f0       	breq	.+2      	; 0x179fa <_Z20Wireless_Pump_On_Offhh+0x426>
   179f8:	1b c1       	rjmp	.+566    	; 0x17c30 <_Z20Wireless_Pump_On_Offhh+0x65c>
   179fa:	65 e8       	ldi	r22, 0x85	; 133
   179fc:	7b e2       	ldi	r23, 0x2B	; 43
   179fe:	82 e5       	ldi	r24, 0x52	; 82
   17a00:	94 e1       	ldi	r25, 0x14	; 20
   17a02:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17a06:	82 e5       	ldi	r24, 0x52	; 82
   17a08:	94 e1       	ldi	r25, 0x14	; 20
   17a0a:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17a0e:	82 e5       	ldi	r24, 0x52	; 82
   17a10:	94 e1       	ldi	r25, 0x14	; 20
   17a12:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17a16:	0d c1       	rjmp	.+538    	; 0x17c32 <_Z20Wireless_Pump_On_Offhh+0x65e>
   17a18:	80 91 6a 0d 	lds	r24, 0x0D6A	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17a1c:	83 30       	cpi	r24, 0x03	; 3
   17a1e:	a8 f0       	brcs	.+42     	; 0x17a4a <_Z20Wireless_Pump_On_Offhh+0x476>
   17a20:	10 92 6a 0d 	sts	0x0D6A, r1	; 0x800d6a <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17a24:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17a28:	81 30       	cpi	r24, 0x01	; 1
   17a2a:	c1 f4       	brne	.+48     	; 0x17a5c <_Z20Wireless_Pump_On_Offhh+0x488>
   17a2c:	69 e6       	ldi	r22, 0x69	; 105
   17a2e:	7b e2       	ldi	r23, 0x2B	; 43
   17a30:	82 e5       	ldi	r24, 0x52	; 82
   17a32:	94 e1       	ldi	r25, 0x14	; 20
   17a34:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17a38:	82 e5       	ldi	r24, 0x52	; 82
   17a3a:	94 e1       	ldi	r25, 0x14	; 20
   17a3c:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17a40:	82 e5       	ldi	r24, 0x52	; 82
   17a42:	94 e1       	ldi	r25, 0x14	; 20
   17a44:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17a48:	09 c0       	rjmp	.+18     	; 0x17a5c <_Z20Wireless_Pump_On_Offhh+0x488>
   17a4a:	68 ee       	ldi	r22, 0xE8	; 232
   17a4c:	73 e0       	ldi	r23, 0x03	; 3
   17a4e:	80 e0       	ldi	r24, 0x00	; 0
   17a50:	90 e0       	ldi	r25, 0x00	; 0
   17a52:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   17a56:	d3 30       	cpi	r29, 0x03	; 3
   17a58:	08 f4       	brcc	.+2      	; 0x17a5c <_Z20Wireless_Pump_On_Offhh+0x488>
   17a5a:	31 ce       	rjmp	.-926    	; 0x176be <_Z20Wireless_Pump_On_Offhh+0xea>
   17a5c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17a60:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17a64:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17a68:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17a6c:	a0 62       	ori	r26, 0x20	; 32
   17a6e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17a72:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17a76:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17a7a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17a7e:	c0 93 fa 13 	sts	0x13FA, r28	; 0x8013fa <_sRuble_Parameters+0xb3>
   17a82:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17a86:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17a8a:	90 68       	ori	r25, 0x80	; 128
   17a8c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17a90:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17a94:	3a cf       	rjmp	.-396    	; 0x1790a <_Z20Wireless_Pump_On_Offhh+0x336>
   17a96:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17a9a:	81 30       	cpi	r24, 0x01	; 1
   17a9c:	89 f4       	brne	.+34     	; 0x17ac0 <_Z20Wireless_Pump_On_Offhh+0x4ec>
   17a9e:	66 e5       	ldi	r22, 0x56	; 86
   17aa0:	7b e2       	ldi	r23, 0x2B	; 43
   17aa2:	82 e5       	ldi	r24, 0x52	; 82
   17aa4:	94 e1       	ldi	r25, 0x14	; 20
   17aa6:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17aaa:	4a e0       	ldi	r20, 0x0A	; 10
   17aac:	50 e0       	ldi	r21, 0x00	; 0
   17aae:	6c 2f       	mov	r22, r28
   17ab0:	82 e5       	ldi	r24, 0x52	; 82
   17ab2:	94 e1       	ldi	r25, 0x14	; 20
   17ab4:	0e 94 29 d2 	call	0x1a452	; 0x1a452 <_ZN5Print7printlnEhi>
   17ab8:	82 e5       	ldi	r24, 0x52	; 82
   17aba:	94 e1       	ldi	r25, 0x14	; 20
   17abc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17ac0:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   17ac4:	81 11       	cpse	r24, r1
   17ac6:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   17aca:	84 e1       	ldi	r24, 0x14	; 20
   17acc:	e9 e7       	ldi	r30, 0x79	; 121
   17ace:	f3 e1       	ldi	r31, 0x13	; 19
   17ad0:	df 01       	movw	r26, r30
   17ad2:	1d 92       	st	X+, r1
   17ad4:	8a 95       	dec	r24
   17ad6:	e9 f7       	brne	.-6      	; 0x17ad2 <_Z20Wireless_Pump_On_Offhh+0x4fe>
   17ad8:	bb e0       	ldi	r27, 0x0B	; 11
   17ada:	cb 9f       	mul	r28, r27
   17adc:	80 01       	movw	r16, r0
   17ade:	11 24       	eor	r1, r1
   17ae0:	f8 01       	movw	r30, r16
   17ae2:	ea 56       	subi	r30, 0x6A	; 106
   17ae4:	f4 4f       	sbci	r31, 0xF4	; 244
   17ae6:	81 81       	ldd	r24, Z+1	; 0x01
   17ae8:	80 93 79 13 	sts	0x1379, r24	; 0x801379 <_sRuble_Parameters+0x32>
   17aec:	82 81       	ldd	r24, Z+2	; 0x02
   17aee:	80 93 7a 13 	sts	0x137A, r24	; 0x80137a <_sRuble_Parameters+0x33>
   17af2:	83 81       	ldd	r24, Z+3	; 0x03
   17af4:	80 93 7b 13 	sts	0x137B, r24	; 0x80137b <_sRuble_Parameters+0x34>
   17af8:	84 81       	ldd	r24, Z+4	; 0x04
   17afa:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x35>
   17afe:	85 81       	ldd	r24, Z+5	; 0x05
   17b00:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x36>
   17b04:	86 81       	ldd	r24, Z+6	; 0x06
   17b06:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x37>
   17b0a:	81 e0       	ldi	r24, 0x01	; 1
   17b0c:	80 93 7f 13 	sts	0x137F, r24	; 0x80137f <_sRuble_Parameters+0x38>
   17b10:	80 93 80 13 	sts	0x1380, r24	; 0x801380 <_sRuble_Parameters+0x39>
   17b14:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   17b18:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x3a>
   17b1c:	80 91 5d 13 	lds	r24, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   17b20:	80 93 83 13 	sts	0x1383, r24	; 0x801383 <_sRuble_Parameters+0x3c>
   17b24:	81 e0       	ldi	r24, 0x01	; 1
   17b26:	8c 0f       	add	r24, r28
   17b28:	80 93 84 13 	sts	0x1384, r24	; 0x801384 <_sRuble_Parameters+0x3d>
   17b2c:	83 e5       	ldi	r24, 0x53	; 83
   17b2e:	80 93 85 13 	sts	0x1385, r24	; 0x801385 <_sRuble_Parameters+0x3e>
   17b32:	80 91 38 14 	lds	r24, 0x1438	; 0x801438 <_sRuble_Parameters+0xf1>
   17b36:	80 93 86 13 	sts	0x1386, r24	; 0x801386 <_sRuble_Parameters+0x3f>
   17b3a:	78 01       	movw	r14, r16
   17b3c:	d0 e0       	ldi	r29, 0x00	; 0
   17b3e:	09 56       	subi	r16, 0x69	; 105
   17b40:	14 4f       	sbci	r17, 0xF4	; 244
   17b42:	df 5f       	subi	r29, 0xFF	; 255
   17b44:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17b48:	81 30       	cpi	r24, 0x01	; 1
   17b4a:	51 f4       	brne	.+20     	; 0x17b60 <_Z20Wireless_Pump_On_Offhh+0x58c>
   17b4c:	6f e2       	ldi	r22, 0x2F	; 47
   17b4e:	7b e2       	ldi	r23, 0x2B	; 43
   17b50:	82 e5       	ldi	r24, 0x52	; 82
   17b52:	94 e1       	ldi	r25, 0x14	; 20
   17b54:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17b58:	82 e5       	ldi	r24, 0x52	; 82
   17b5a:	94 e1       	ldi	r25, 0x14	; 20
   17b5c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17b60:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   17b64:	8e e0       	ldi	r24, 0x0E	; 14
   17b66:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   17b6a:	80 ee       	ldi	r24, 0xE0	; 224
   17b6c:	9e e2       	ldi	r25, 0x2E	; 46
   17b6e:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
   17b72:	88 23       	and	r24, r24
   17b74:	09 f4       	brne	.+2      	; 0x17b78 <_Z20Wireless_Pump_On_Offhh+0x5a4>
   17b76:	4f c0       	rjmp	.+158    	; 0x17c16 <_Z20Wireless_Pump_On_Offhh+0x642>
   17b78:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   17b7c:	88 23       	and	r24, r24
   17b7e:	09 f4       	brne	.+2      	; 0x17b82 <_Z20Wireless_Pump_On_Offhh+0x5ae>
   17b80:	4a c0       	rjmp	.+148    	; 0x17c16 <_Z20Wireless_Pump_On_Offhh+0x642>
   17b82:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17b86:	81 30       	cpi	r24, 0x01	; 1
   17b88:	59 f5       	brne	.+86     	; 0x17be0 <_Z20Wireless_Pump_On_Offhh+0x60c>
   17b8a:	66 e1       	ldi	r22, 0x16	; 22
   17b8c:	7b e2       	ldi	r23, 0x2B	; 43
   17b8e:	82 e5       	ldi	r24, 0x52	; 82
   17b90:	94 e1       	ldi	r25, 0x14	; 20
   17b92:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17b96:	4a e0       	ldi	r20, 0x0A	; 10
   17b98:	50 e0       	ldi	r21, 0x00	; 0
   17b9a:	6d e8       	ldi	r22, 0x8D	; 141
   17b9c:	73 e1       	ldi	r23, 0x13	; 19
   17b9e:	82 e5       	ldi	r24, 0x52	; 82
   17ba0:	94 e1       	ldi	r25, 0x14	; 20
   17ba2:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   17ba6:	82 e5       	ldi	r24, 0x52	; 82
   17ba8:	94 e1       	ldi	r25, 0x14	; 20
   17baa:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17bae:	82 e5       	ldi	r24, 0x52	; 82
   17bb0:	94 e1       	ldi	r25, 0x14	; 20
   17bb2:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17bb6:	68 ef       	ldi	r22, 0xF8	; 248
   17bb8:	7a e2       	ldi	r23, 0x2A	; 42
   17bba:	82 e5       	ldi	r24, 0x52	; 82
   17bbc:	94 e1       	ldi	r25, 0x14	; 20
   17bbe:	0e 94 7c d1 	call	0x1a2f8	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   17bc2:	47 e0       	ldi	r20, 0x07	; 7
   17bc4:	50 e0       	ldi	r21, 0x00	; 0
   17bc6:	b8 01       	movw	r22, r16
   17bc8:	82 e5       	ldi	r24, 0x52	; 82
   17bca:	94 e1       	ldi	r25, 0x14	; 20
   17bcc:	0e 94 52 d1 	call	0x1a2a4	; 0x1a2a4 <_ZN5Print5writeEPKhj>
   17bd0:	82 e5       	ldi	r24, 0x52	; 82
   17bd2:	94 e1       	ldi	r25, 0x14	; 20
   17bd4:	0e 94 a9 d1 	call	0x1a352	; 0x1a352 <_ZN5Print7printlnEv>
   17bd8:	82 e5       	ldi	r24, 0x52	; 82
   17bda:	94 e1       	ldi	r25, 0x14	; 20
   17bdc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17be0:	ad e8       	ldi	r26, 0x8D	; 141
   17be2:	b3 e1       	ldi	r27, 0x13	; 19
   17be4:	80 e0       	ldi	r24, 0x00	; 0
   17be6:	90 e0       	ldi	r25, 0x00	; 0
   17be8:	2d 91       	ld	r18, X+
   17bea:	f7 01       	movw	r30, r14
   17bec:	e8 0f       	add	r30, r24
   17bee:	f9 1f       	adc	r31, r25
   17bf0:	ea 56       	subi	r30, 0x6A	; 106
   17bf2:	f4 4f       	sbci	r31, 0xF4	; 244
   17bf4:	31 81       	ldd	r19, Z+1	; 0x01
   17bf6:	32 17       	cp	r19, r18
   17bf8:	19 f0       	breq	.+6      	; 0x17c00 <_Z20Wireless_Pump_On_Offhh+0x62c>
   17bfa:	d1 30       	cpi	r29, 0x01	; 1
   17bfc:	09 f0       	breq	.+2      	; 0x17c00 <_Z20Wireless_Pump_On_Offhh+0x62c>
   17bfe:	85 ce       	rjmp	.-758    	; 0x1790a <_Z20Wireless_Pump_On_Offhh+0x336>
   17c00:	01 96       	adiw	r24, 0x01	; 1
   17c02:	86 30       	cpi	r24, 0x06	; 6
   17c04:	91 05       	cpc	r25, r1
   17c06:	81 f7       	brne	.-32     	; 0x17be8 <_Z20Wireless_Pump_On_Offhh+0x614>
   17c08:	80 91 94 13 	lds	r24, 0x1394	; 0x801394 <_sRuble_Parameters+0x4d>
   17c0c:	81 30       	cpi	r24, 0x01	; 1
   17c0e:	19 f4       	brne	.+6      	; 0x17c16 <_Z20Wireless_Pump_On_Offhh+0x642>
   17c10:	d3 30       	cpi	r29, 0x03	; 3
   17c12:	31 f0       	breq	.+12     	; 0x17c20 <_Z20Wireless_Pump_On_Offhh+0x64c>
   17c14:	96 cf       	rjmp	.-212    	; 0x17b42 <_Z20Wireless_Pump_On_Offhh+0x56e>
   17c16:	d1 30       	cpi	r29, 0x01	; 1
   17c18:	09 f0       	breq	.+2      	; 0x17c1c <_Z20Wireless_Pump_On_Offhh+0x648>
   17c1a:	77 ce       	rjmp	.-786    	; 0x1790a <_Z20Wireless_Pump_On_Offhh+0x336>
   17c1c:	d1 e0       	ldi	r29, 0x01	; 1
   17c1e:	91 cf       	rjmp	.-222    	; 0x17b42 <_Z20Wireless_Pump_On_Offhh+0x56e>
   17c20:	c1 e0       	ldi	r28, 0x01	; 1
   17c22:	80 91 9a 13 	lds	r24, 0x139A	; 0x80139a <_sRuble_Parameters+0x53>
   17c26:	81 30       	cpi	r24, 0x01	; 1
   17c28:	09 f0       	breq	.+2      	; 0x17c2c <_Z20Wireless_Pump_On_Offhh+0x658>
   17c2a:	6f ce       	rjmp	.-802    	; 0x1790a <_Z20Wireless_Pump_On_Offhh+0x336>
   17c2c:	02 c0       	rjmp	.+4      	; 0x17c32 <_Z20Wireless_Pump_On_Offhh+0x65e>
   17c2e:	02 c0       	rjmp	.+4      	; 0x17c34 <_Z20Wireless_Pump_On_Offhh+0x660>
   17c30:	c1 e0       	ldi	r28, 0x01	; 1
   17c32:	8c 2f       	mov	r24, r28
   17c34:	df 91       	pop	r29
   17c36:	cf 91       	pop	r28
   17c38:	1f 91       	pop	r17
   17c3a:	0f 91       	pop	r16
   17c3c:	ff 90       	pop	r15
   17c3e:	ef 90       	pop	r14
   17c40:	df 90       	pop	r13
   17c42:	cf 90       	pop	r12
   17c44:	bf 90       	pop	r11
   17c46:	af 90       	pop	r10
   17c48:	9f 90       	pop	r9
   17c4a:	8f 90       	pop	r8
   17c4c:	7f 90       	pop	r7
   17c4e:	6f 90       	pop	r6
   17c50:	08 95       	ret

00017c52 <_Z15Stop_Irrigationv>:
   17c52:	cf 93       	push	r28
   17c54:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17c58:	81 30       	cpi	r24, 0x01	; 1
   17c5a:	51 f4       	brne	.+20     	; 0x17c70 <_Z15Stop_Irrigationv+0x1e>
   17c5c:	6e e4       	ldi	r22, 0x4E	; 78
   17c5e:	70 e4       	ldi	r23, 0x40	; 64
   17c60:	82 e5       	ldi	r24, 0x52	; 82
   17c62:	94 e1       	ldi	r25, 0x14	; 20
   17c64:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17c68:	82 e5       	ldi	r24, 0x52	; 82
   17c6a:	94 e1       	ldi	r25, 0x14	; 20
   17c6c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17c70:	c0 91 25 14 	lds	r28, 0x1425	; 0x801425 <_sRuble_Parameters+0xde>
   17c74:	8f ef       	ldi	r24, 0xFF	; 255
   17c76:	8c 0f       	add	r24, r28
   17c78:	83 30       	cpi	r24, 0x03	; 3
   17c7a:	18 f4       	brcc	.+6      	; 0x17c82 <_Z15Stop_Irrigationv+0x30>
   17c7c:	10 92 25 14 	sts	0x1425, r1	; 0x801425 <_sRuble_Parameters+0xde>
   17c80:	02 c0       	rjmp	.+4      	; 0x17c86 <_Z15Stop_Irrigationv+0x34>
   17c82:	c0 91 23 14 	lds	r28, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   17c86:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   17c8a:	81 30       	cpi	r24, 0x01	; 1
   17c8c:	59 f4       	brne	.+22     	; 0x17ca4 <_Z15Stop_Irrigationv+0x52>
   17c8e:	c2 30       	cpi	r28, 0x02	; 2
   17c90:	48 f0       	brcs	.+18     	; 0x17ca4 <_Z15Stop_Irrigationv+0x52>
   17c92:	82 e0       	ldi	r24, 0x02	; 2
   17c94:	80 93 06 14 	sts	0x1406, r24	; 0x801406 <_sRuble_Parameters+0xbf>
   17c98:	66 e0       	ldi	r22, 0x06	; 6
   17c9a:	74 e1       	ldi	r23, 0x14	; 20
   17c9c:	88 ea       	ldi	r24, 0xA8	; 168
   17c9e:	9c e0       	ldi	r25, 0x0C	; 12
   17ca0:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17ca4:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
   17ca8:	81 30       	cpi	r24, 0x01	; 1
   17caa:	29 f4       	brne	.+10     	; 0x17cb6 <_Z15Stop_Irrigationv+0x64>
   17cac:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
   17cb0:	81 30       	cpi	r24, 0x01	; 1
   17cb2:	09 f0       	breq	.+2      	; 0x17cb6 <_Z15Stop_Irrigationv+0x64>
   17cb4:	6b c0       	rjmp	.+214    	; 0x17d8c <_Z15Stop_Irrigationv+0x13a>
   17cb6:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   17cba:	81 11       	cpse	r24, r1
   17cbc:	16 c0       	rjmp	.+44     	; 0x17cea <_Z15Stop_Irrigationv+0x98>
   17cbe:	c1 30       	cpi	r28, 0x01	; 1
   17cc0:	a1 f4       	brne	.+40     	; 0x17cea <_Z15Stop_Irrigationv+0x98>
   17cc2:	8a e0       	ldi	r24, 0x0A	; 10
   17cc4:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   17cc8:	01 97       	sbiw	r24, 0x01	; 1
   17cca:	21 f0       	breq	.+8      	; 0x17cd4 <_Z15Stop_Irrigationv+0x82>
   17ccc:	61 e0       	ldi	r22, 0x01	; 1
   17cce:	8a e0       	ldi	r24, 0x0A	; 10
   17cd0:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   17cd4:	8b e0       	ldi	r24, 0x0B	; 11
   17cd6:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   17cda:	01 97       	sbiw	r24, 0x01	; 1
   17cdc:	09 f4       	brne	.+2      	; 0x17ce0 <_Z15Stop_Irrigationv+0x8e>
   17cde:	56 c0       	rjmp	.+172    	; 0x17d8c <_Z15Stop_Irrigationv+0x13a>
   17ce0:	61 e0       	ldi	r22, 0x01	; 1
   17ce2:	8b e0       	ldi	r24, 0x0B	; 11
   17ce4:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   17ce8:	51 c0       	rjmp	.+162    	; 0x17d8c <_Z15Stop_Irrigationv+0x13a>
   17cea:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17cee:	81 30       	cpi	r24, 0x01	; 1
   17cf0:	31 f4       	brne	.+12     	; 0x17cfe <_Z15Stop_Irrigationv+0xac>
   17cf2:	64 e2       	ldi	r22, 0x24	; 36
   17cf4:	70 e4       	ldi	r23, 0x40	; 64
   17cf6:	82 e5       	ldi	r24, 0x52	; 82
   17cf8:	94 e1       	ldi	r25, 0x14	; 20
   17cfa:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17cfe:	6e ef       	ldi	r22, 0xFE	; 254
   17d00:	6c 0f       	add	r22, r28
   17d02:	84 e0       	ldi	r24, 0x04	; 4
   17d04:	67 dc       	rcall	.-1842   	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
   17d06:	2c 2f       	mov	r18, r28
   17d08:	30 e0       	ldi	r19, 0x00	; 0
   17d0a:	e0 91 a2 13 	lds	r30, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   17d0e:	d9 01       	movw	r26, r18
   17d10:	a3 5e       	subi	r26, 0xE3	; 227
   17d12:	bb 4e       	sbci	r27, 0xEB	; 235
   17d14:	1c 92       	st	X, r1
   17d16:	f0 e0       	ldi	r31, 0x00	; 0
   17d18:	e7 5f       	subi	r30, 0xF7	; 247
   17d1a:	fb 4e       	sbci	r31, 0xEB	; 235
   17d1c:	88 23       	and	r24, r24
   17d1e:	61 f0       	breq	.+24     	; 0x17d38 <_Z15Stop_Irrigationv+0xe6>
   17d20:	10 82       	st	Z, r1
   17d22:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   17d26:	67 e0       	ldi	r22, 0x07	; 7
   17d28:	74 e1       	ldi	r23, 0x14	; 20
   17d2a:	8d ea       	ldi	r24, 0xAD	; 173
   17d2c:	9c e0       	ldi	r25, 0x0C	; 12
   17d2e:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17d32:	0e 94 27 85 	call	0x10a4e	; 0x10a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   17d36:	2a c0       	rjmp	.+84     	; 0x17d8c <_Z15Stop_Irrigationv+0x13a>
   17d38:	81 e0       	ldi	r24, 0x01	; 1
   17d3a:	80 83       	st	Z, r24
   17d3c:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   17d40:	67 e0       	ldi	r22, 0x07	; 7
   17d42:	74 e1       	ldi	r23, 0x14	; 20
   17d44:	8d ea       	ldi	r24, 0xAD	; 173
   17d46:	9c e0       	ldi	r25, 0x0C	; 12
   17d48:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17d4c:	0e 94 27 85 	call	0x10a4e	; 0x10a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   17d50:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   17d54:	8d 7f       	andi	r24, 0xFD	; 253
   17d56:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   17d5a:	10 92 a2 13 	sts	0x13A2, r1	; 0x8013a2 <_sRuble_Parameters+0x5b>
   17d5e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17d62:	81 30       	cpi	r24, 0x01	; 1
   17d64:	51 f4       	brne	.+20     	; 0x17d7a <_Z15Stop_Irrigationv+0x128>
   17d66:	63 e1       	ldi	r22, 0x13	; 19
   17d68:	70 e4       	ldi	r23, 0x40	; 64
   17d6a:	82 e5       	ldi	r24, 0x52	; 82
   17d6c:	94 e1       	ldi	r25, 0x14	; 20
   17d6e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17d72:	82 e5       	ldi	r24, 0x52	; 82
   17d74:	94 e1       	ldi	r25, 0x14	; 20
   17d76:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17d7a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17d7e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17d82:	84 60       	ori	r24, 0x04	; 4
   17d84:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17d88:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17d8c:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   17d90:	88 23       	and	r24, r24
   17d92:	09 f4       	brne	.+2      	; 0x17d96 <_Z15Stop_Irrigationv+0x144>
   17d94:	41 c0       	rjmp	.+130    	; 0x17e18 <_Z15Stop_Irrigationv+0x1c6>
   17d96:	80 93 02 14 	sts	0x1402, r24	; 0x801402 <_sRuble_Parameters+0xbb>
   17d9a:	83 e0       	ldi	r24, 0x03	; 3
   17d9c:	0e 94 15 24 	call	0x482a	; 0x482a <_Z22Hard_Coded_Flush_Valveh>
   17da0:	80 e0       	ldi	r24, 0x00	; 0
   17da2:	0e 94 03 ad 	call	0x15a06	; 0x15a06 <_Z22Valve_Grouping_Handlerh>
   17da6:	20 91 37 14 	lds	r18, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17daa:	88 23       	and	r24, r24
   17dac:	e9 f0       	breq	.+58     	; 0x17de8 <_Z15Stop_Irrigationv+0x196>
   17dae:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   17db2:	8d 7f       	andi	r24, 0xFD	; 253
   17db4:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   17db8:	10 92 a2 13 	sts	0x13A2, r1	; 0x8013a2 <_sRuble_Parameters+0x5b>
   17dbc:	21 30       	cpi	r18, 0x01	; 1
   17dbe:	51 f4       	brne	.+20     	; 0x17dd4 <_Z15Stop_Irrigationv+0x182>
   17dc0:	62 e0       	ldi	r22, 0x02	; 2
   17dc2:	70 e4       	ldi	r23, 0x40	; 64
   17dc4:	82 e5       	ldi	r24, 0x52	; 82
   17dc6:	94 e1       	ldi	r25, 0x14	; 20
   17dc8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17dcc:	82 e5       	ldi	r24, 0x52	; 82
   17dce:	94 e1       	ldi	r25, 0x14	; 20
   17dd0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17dd4:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17dd8:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17ddc:	84 60       	ori	r24, 0x04	; 4
   17dde:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17de2:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17de6:	18 c0       	rjmp	.+48     	; 0x17e18 <_Z15Stop_Irrigationv+0x1c6>
   17de8:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17dec:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17df0:	84 60       	ori	r24, 0x04	; 4
   17df2:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17df6:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17dfa:	10 92 a2 13 	sts	0x13A2, r1	; 0x8013a2 <_sRuble_Parameters+0x5b>
   17dfe:	21 30       	cpi	r18, 0x01	; 1
   17e00:	69 f4       	brne	.+26     	; 0x17e1c <_Z15Stop_Irrigationv+0x1ca>
   17e02:	6a ee       	ldi	r22, 0xEA	; 234
   17e04:	7f e3       	ldi	r23, 0x3F	; 63
   17e06:	82 e5       	ldi	r24, 0x52	; 82
   17e08:	94 e1       	ldi	r25, 0x14	; 20
   17e0a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e0e:	82 e5       	ldi	r24, 0x52	; 82
   17e10:	94 e1       	ldi	r25, 0x14	; 20
   17e12:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17e16:	02 c0       	rjmp	.+4      	; 0x17e1c <_Z15Stop_Irrigationv+0x1ca>
   17e18:	81 e0       	ldi	r24, 0x01	; 1
   17e1a:	01 c0       	rjmp	.+2      	; 0x17e1e <_Z15Stop_Irrigationv+0x1cc>
   17e1c:	80 e0       	ldi	r24, 0x00	; 0
   17e1e:	cf 91       	pop	r28
   17e20:	08 95       	ret

00017e22 <_Z21Select_Operation_Modev>:
   17e22:	90 91 70 13 	lds	r25, 0x1370	; 0x801370 <_sRuble_Parameters+0x29>
   17e26:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   17e2a:	93 30       	cpi	r25, 0x03	; 3
   17e2c:	09 f4       	brne	.+2      	; 0x17e30 <_Z21Select_Operation_Modev+0xe>
   17e2e:	c5 c0       	rjmp	.+394    	; 0x17fba <_Z21Select_Operation_Modev+0x198>
   17e30:	94 30       	cpi	r25, 0x04	; 4
   17e32:	09 f4       	brne	.+2      	; 0x17e36 <_Z21Select_Operation_Modev+0x14>
   17e34:	7e c0       	rjmp	.+252    	; 0x17f32 <_Z21Select_Operation_Modev+0x110>
   17e36:	91 30       	cpi	r25, 0x01	; 1
   17e38:	09 f0       	breq	.+2      	; 0x17e3c <_Z21Select_Operation_Modev+0x1a>
   17e3a:	0d c1       	rjmp	.+538    	; 0x18056 <_Z21Select_Operation_Modev+0x234>
   17e3c:	2d ef       	ldi	r18, 0xFD	; 253
   17e3e:	28 0f       	add	r18, r24
   17e40:	22 30       	cpi	r18, 0x02	; 2
   17e42:	08 f0       	brcs	.+2      	; 0x17e46 <_Z21Select_Operation_Modev+0x24>
   17e44:	08 c1       	rjmp	.+528    	; 0x18056 <_Z21Select_Operation_Modev+0x234>
   17e46:	10 92 70 13 	sts	0x1370, r1	; 0x801370 <_sRuble_Parameters+0x29>
   17e4a:	83 30       	cpi	r24, 0x03	; 3
   17e4c:	21 f4       	brne	.+8      	; 0x17e56 <_Z21Select_Operation_Modev+0x34>
   17e4e:	82 e0       	ldi	r24, 0x02	; 2
   17e50:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   17e54:	02 c0       	rjmp	.+4      	; 0x17e5a <_Z21Select_Operation_Modev+0x38>
   17e56:	90 93 6f 13 	sts	0x136F, r25	; 0x80136f <_sRuble_Parameters+0x28>
   17e5a:	90 91 71 13 	lds	r25, 0x1371	; 0x801371 <_sRuble_Parameters+0x2a>
   17e5e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17e62:	92 30       	cpi	r25, 0x02	; 2
   17e64:	79 f1       	breq	.+94     	; 0x17ec4 <_Z21Select_Operation_Modev+0xa2>
   17e66:	81 30       	cpi	r24, 0x01	; 1
   17e68:	51 f4       	brne	.+20     	; 0x17e7e <_Z21Select_Operation_Modev+0x5c>
   17e6a:	64 eb       	ldi	r22, 0xB4	; 180
   17e6c:	75 e4       	ldi	r23, 0x45	; 69
   17e6e:	82 e5       	ldi	r24, 0x52	; 82
   17e70:	94 e1       	ldi	r25, 0x14	; 20
   17e72:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e76:	82 e5       	ldi	r24, 0x52	; 82
   17e78:	94 e1       	ldi	r25, 0x14	; 20
   17e7a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17e7e:	85 e0       	ldi	r24, 0x05	; 5
   17e80:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   17e84:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17e88:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17e8c:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17e90:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17e94:	80 61       	ori	r24, 0x10	; 16
   17e96:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17e9a:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17e9e:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17ea2:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17ea6:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   17eaa:	8e 7f       	andi	r24, 0xFE	; 254
   17eac:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   17eb0:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17eb4:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17eb8:	84 60       	ori	r24, 0x04	; 4
   17eba:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17ebe:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17ec2:	25 c0       	rjmp	.+74     	; 0x17f0e <_Z21Select_Operation_Modev+0xec>
   17ec4:	81 30       	cpi	r24, 0x01	; 1
   17ec6:	51 f4       	brne	.+20     	; 0x17edc <_Z21Select_Operation_Modev+0xba>
   17ec8:	68 e9       	ldi	r22, 0x98	; 152
   17eca:	75 e4       	ldi	r23, 0x45	; 69
   17ecc:	82 e5       	ldi	r24, 0x52	; 82
   17ece:	94 e1       	ldi	r25, 0x14	; 20
   17ed0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ed4:	82 e5       	ldi	r24, 0x52	; 82
   17ed6:	94 e1       	ldi	r25, 0x14	; 20
   17ed8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17edc:	85 e0       	ldi	r24, 0x05	; 5
   17ede:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   17ee2:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17ee6:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17eea:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17eee:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17ef2:	80 61       	ori	r24, 0x10	; 16
   17ef4:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17ef8:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17efc:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17f00:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17f04:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   17f08:	81 60       	ori	r24, 0x01	; 1
   17f0a:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   17f0e:	10 92 5e 13 	sts	0x135E, r1	; 0x80135e <_sRuble_Parameters+0x17>
   17f12:	10 92 5d 13 	sts	0x135D, r1	; 0x80135d <_sRuble_Parameters+0x16>
   17f16:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17f1a:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17f1e:	84 60       	ori	r24, 0x04	; 4
   17f20:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17f24:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17f28:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
   17f2c:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
   17f30:	3d c0       	rjmp	.+122    	; 0x17fac <_Z21Select_Operation_Modev+0x18a>
   17f32:	81 50       	subi	r24, 0x01	; 1
   17f34:	83 30       	cpi	r24, 0x03	; 3
   17f36:	08 f0       	brcs	.+2      	; 0x17f3a <_Z21Select_Operation_Modev+0x118>
   17f38:	8e c0       	rjmp	.+284    	; 0x18056 <_Z21Select_Operation_Modev+0x234>
   17f3a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17f3e:	81 30       	cpi	r24, 0x01	; 1
   17f40:	51 f4       	brne	.+20     	; 0x17f56 <_Z21Select_Operation_Modev+0x134>
   17f42:	6e e7       	ldi	r22, 0x7E	; 126
   17f44:	75 e4       	ldi	r23, 0x45	; 69
   17f46:	82 e5       	ldi	r24, 0x52	; 82
   17f48:	94 e1       	ldi	r25, 0x14	; 20
   17f4a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17f4e:	82 e5       	ldi	r24, 0x52	; 82
   17f50:	94 e1       	ldi	r25, 0x14	; 20
   17f52:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   17f56:	10 92 70 13 	sts	0x1370, r1	; 0x801370 <_sRuble_Parameters+0x29>
   17f5a:	81 e0       	ldi	r24, 0x01	; 1
   17f5c:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   17f60:	84 e0       	ldi	r24, 0x04	; 4
   17f62:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   17f66:	10 92 5e 13 	sts	0x135E, r1	; 0x80135e <_sRuble_Parameters+0x17>
   17f6a:	10 92 5d 13 	sts	0x135D, r1	; 0x80135d <_sRuble_Parameters+0x16>
   17f6e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   17f72:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   17f76:	84 60       	ori	r24, 0x04	; 4
   17f78:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   17f7c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   17f80:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   17f84:	81 60       	ori	r24, 0x01	; 1
   17f86:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   17f8a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   17f8e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   17f92:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   17f96:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   17f9a:	84 60       	ori	r24, 0x04	; 4
   17f9c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   17fa0:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   17fa4:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   17fa8:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   17fac:	6e e6       	ldi	r22, 0x6E	; 110
   17fae:	73 e1       	ldi	r23, 0x13	; 19
   17fb0:	88 ed       	ldi	r24, 0xD8	; 216
   17fb2:	94 e0       	ldi	r25, 0x04	; 4
   17fb4:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17fb8:	4e c0       	rjmp	.+156    	; 0x18056 <_Z21Select_Operation_Modev+0x234>
   17fba:	81 30       	cpi	r24, 0x01	; 1
   17fbc:	19 f0       	breq	.+6      	; 0x17fc4 <_Z21Select_Operation_Modev+0x1a2>
   17fbe:	85 30       	cpi	r24, 0x05	; 5
   17fc0:	69 f0       	breq	.+26     	; 0x17fdc <_Z21Select_Operation_Modev+0x1ba>
   17fc2:	47 c0       	rjmp	.+142    	; 0x18052 <_Z21Select_Operation_Modev+0x230>
   17fc4:	10 92 70 13 	sts	0x1370, r1	; 0x801370 <_sRuble_Parameters+0x29>
   17fc8:	82 e0       	ldi	r24, 0x02	; 2
   17fca:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   17fce:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17fd2:	81 30       	cpi	r24, 0x01	; 1
   17fd4:	b1 f4       	brne	.+44     	; 0x18002 <_Z21Select_Operation_Modev+0x1e0>
   17fd6:	6a e6       	ldi	r22, 0x6A	; 106
   17fd8:	75 e4       	ldi	r23, 0x45	; 69
   17fda:	0b c0       	rjmp	.+22     	; 0x17ff2 <_Z21Select_Operation_Modev+0x1d0>
   17fdc:	10 92 70 13 	sts	0x1370, r1	; 0x801370 <_sRuble_Parameters+0x29>
   17fe0:	82 e0       	ldi	r24, 0x02	; 2
   17fe2:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   17fe6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   17fea:	81 30       	cpi	r24, 0x01	; 1
   17fec:	51 f4       	brne	.+20     	; 0x18002 <_Z21Select_Operation_Modev+0x1e0>
   17fee:	66 e5       	ldi	r22, 0x56	; 86
   17ff0:	75 e4       	ldi	r23, 0x45	; 69
   17ff2:	82 e5       	ldi	r24, 0x52	; 82
   17ff4:	94 e1       	ldi	r25, 0x14	; 20
   17ff6:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ffa:	82 e5       	ldi	r24, 0x52	; 82
   17ffc:	94 e1       	ldi	r25, 0x14	; 20
   17ffe:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18002:	83 e0       	ldi	r24, 0x03	; 3
   18004:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   18008:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1800c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18010:	8c 60       	ori	r24, 0x0C	; 12
   18012:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18016:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1801a:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   1801e:	8e 7f       	andi	r24, 0xFE	; 254
   18020:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   18024:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   18028:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1802c:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   18030:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   18034:	80 62       	ori	r24, 0x20	; 32
   18036:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1803a:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1803e:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   18042:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   18046:	6e e6       	ldi	r22, 0x6E	; 110
   18048:	73 e1       	ldi	r23, 0x13	; 19
   1804a:	88 ed       	ldi	r24, 0xD8	; 216
   1804c:	94 e0       	ldi	r25, 0x04	; 4
   1804e:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18052:	10 92 70 13 	sts	0x1370, r1	; 0x801370 <_sRuble_Parameters+0x29>
   18056:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   1805a:	82 30       	cpi	r24, 0x02	; 2
   1805c:	09 f4       	brne	.+2      	; 0x18060 <_Z21Select_Operation_Modev+0x23e>
   1805e:	66 c1       	rjmp	.+716    	; 0x1832c <_Z21Select_Operation_Modev+0x50a>
   18060:	20 f4       	brcc	.+8      	; 0x1806a <_Z21Select_Operation_Modev+0x248>
   18062:	81 30       	cpi	r24, 0x01	; 1
   18064:	09 f4       	brne	.+2      	; 0x18068 <_Z21Select_Operation_Modev+0x246>
   18066:	c6 c0       	rjmp	.+396    	; 0x181f4 <_Z21Select_Operation_Modev+0x3d2>
   18068:	08 95       	ret
   1806a:	83 30       	cpi	r24, 0x03	; 3
   1806c:	21 f0       	breq	.+8      	; 0x18076 <_Z21Select_Operation_Modev+0x254>
   1806e:	85 30       	cpi	r24, 0x05	; 5
   18070:	09 f4       	brne	.+2      	; 0x18074 <_Z21Select_Operation_Modev+0x252>
   18072:	17 c1       	rjmp	.+558    	; 0x182a2 <_Z21Select_Operation_Modev+0x480>
   18074:	08 95       	ret
   18076:	80 91 5d 13 	lds	r24, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   1807a:	90 91 5e 13 	lds	r25, 0x135E	; 0x80135e <_sRuble_Parameters+0x17>
   1807e:	89 2b       	or	r24, r25
   18080:	09 f0       	breq	.+2      	; 0x18084 <_Z21Select_Operation_Modev+0x262>
   18082:	5f c0       	rjmp	.+190    	; 0x18142 <_Z21Select_Operation_Modev+0x320>
   18084:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   18088:	88 23       	and	r24, r24
   1808a:	e1 f0       	breq	.+56     	; 0x180c4 <_Z21Select_Operation_Modev+0x2a2>
   1808c:	e2 dd       	rcall	.-1084   	; 0x17c52 <_Z15Stop_Irrigationv>
   1808e:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18092:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18096:	84 60       	ori	r24, 0x04	; 4
   18098:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1809c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   180a0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   180a4:	81 30       	cpi	r24, 0x01	; 1
   180a6:	51 f4       	brne	.+20     	; 0x180bc <_Z21Select_Operation_Modev+0x29a>
   180a8:	63 e4       	ldi	r22, 0x43	; 67
   180aa:	75 e4       	ldi	r23, 0x45	; 69
   180ac:	82 e5       	ldi	r24, 0x52	; 82
   180ae:	94 e1       	ldi	r25, 0x14	; 20
   180b0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   180b4:	82 e5       	ldi	r24, 0x52	; 82
   180b6:	94 e1       	ldi	r25, 0x14	; 20
   180b8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   180bc:	85 e0       	ldi	r24, 0x05	; 5
   180be:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   180c2:	1e c0       	rjmp	.+60     	; 0x18100 <_Z21Select_Operation_Modev+0x2de>
   180c4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   180c8:	81 30       	cpi	r24, 0x01	; 1
   180ca:	51 f4       	brne	.+20     	; 0x180e0 <_Z21Select_Operation_Modev+0x2be>
   180cc:	67 e2       	ldi	r22, 0x27	; 39
   180ce:	75 e4       	ldi	r23, 0x45	; 69
   180d0:	82 e5       	ldi	r24, 0x52	; 82
   180d2:	94 e1       	ldi	r25, 0x14	; 20
   180d4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   180d8:	82 e5       	ldi	r24, 0x52	; 82
   180da:	94 e1       	ldi	r25, 0x14	; 20
   180dc:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   180e0:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
   180e4:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
   180e8:	85 e0       	ldi	r24, 0x05	; 5
   180ea:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   180ee:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   180f2:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   180f6:	84 60       	ori	r24, 0x04	; 4
   180f8:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   180fc:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18100:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18104:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18108:	20 91 72 13 	lds	r18, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   1810c:	2e 7f       	andi	r18, 0xFE	; 254
   1810e:	20 93 72 13 	sts	0x1372, r18	; 0x801372 <_sRuble_Parameters+0x2b>
   18112:	24 e0       	ldi	r18, 0x04	; 4
   18114:	20 93 6f 13 	sts	0x136F, r18	; 0x80136f <_sRuble_Parameters+0x28>
   18118:	8c 60       	ori	r24, 0x0C	; 12
   1811a:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1811e:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18122:	6e e6       	ldi	r22, 0x6E	; 110
   18124:	73 e1       	ldi	r23, 0x13	; 19
   18126:	88 ed       	ldi	r24, 0xD8	; 216
   18128:	94 e0       	ldi	r25, 0x04	; 4
   1812a:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1812e:	62 ea       	ldi	r22, 0xA2	; 162
   18130:	73 e1       	ldi	r23, 0x13	; 19
   18132:	86 e9       	ldi	r24, 0x96	; 150
   18134:	9c e0       	ldi	r25, 0x0C	; 12
   18136:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1813a:	88 e9       	ldi	r24, 0x98	; 152
   1813c:	9c e0       	ldi	r25, 0x0C	; 12
   1813e:	0e 94 fb 84 	call	0x109f6	; 0x109f6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   18142:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x2a>
   18146:	82 30       	cpi	r24, 0x02	; 2
   18148:	09 f4       	brne	.+2      	; 0x1814c <_Z21Select_Operation_Modev+0x32a>
   1814a:	3e c1       	rjmp	.+636    	; 0x183c8 <_Z21Select_Operation_Modev+0x5a6>
   1814c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18150:	81 30       	cpi	r24, 0x01	; 1
   18152:	51 f4       	brne	.+20     	; 0x18168 <_Z21Select_Operation_Modev+0x346>
   18154:	62 e1       	ldi	r22, 0x12	; 18
   18156:	75 e4       	ldi	r23, 0x45	; 69
   18158:	82 e5       	ldi	r24, 0x52	; 82
   1815a:	94 e1       	ldi	r25, 0x14	; 20
   1815c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18160:	82 e5       	ldi	r24, 0x52	; 82
   18162:	94 e1       	ldi	r25, 0x14	; 20
   18164:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18168:	10 92 5e 13 	sts	0x135E, r1	; 0x80135e <_sRuble_Parameters+0x17>
   1816c:	10 92 5d 13 	sts	0x135D, r1	; 0x80135d <_sRuble_Parameters+0x16>
   18170:	22 e0       	ldi	r18, 0x02	; 2
   18172:	20 93 6e 13 	sts	0x136E, r18	; 0x80136e <_sRuble_Parameters+0x27>
   18176:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1817a:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1817e:	88 60       	ori	r24, 0x08	; 8
   18180:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18184:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18188:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   1818c:	81 60       	ori	r24, 0x01	; 1
   1818e:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   18192:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   18196:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1819a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1819e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   181a2:	92 60       	ori	r25, 0x02	; 2
   181a4:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   181a8:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   181ac:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   181b0:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   181b4:	81 e0       	ldi	r24, 0x01	; 1
   181b6:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   181ba:	20 93 fc 13 	sts	0x13FC, r18	; 0x8013fc <_sRuble_Parameters+0xb5>
   181be:	6c ef       	ldi	r22, 0xFC	; 252
   181c0:	73 e1       	ldi	r23, 0x13	; 19
   181c2:	89 e1       	ldi	r24, 0x19	; 25
   181c4:	95 e0       	ldi	r25, 0x05	; 5
   181c6:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   181ca:	6e e6       	ldi	r22, 0x6E	; 110
   181cc:	73 e1       	ldi	r23, 0x13	; 19
   181ce:	88 ed       	ldi	r24, 0xD8	; 216
   181d0:	94 e0       	ldi	r25, 0x04	; 4
   181d2:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   181d6:	62 ea       	ldi	r22, 0xA2	; 162
   181d8:	73 e1       	ldi	r23, 0x13	; 19
   181da:	86 e9       	ldi	r24, 0x96	; 150
   181dc:	9c e0       	ldi	r25, 0x0C	; 12
   181de:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   181e2:	88 e9       	ldi	r24, 0x98	; 152
   181e4:	9c e0       	ldi	r25, 0x0C	; 12
   181e6:	0e 94 fb 84 	call	0x109f6	; 0x109f6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   181ea:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
   181ee:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
   181f2:	08 95       	ret
   181f4:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x2a>
   181f8:	82 30       	cpi	r24, 0x02	; 2
   181fa:	09 f4       	brne	.+2      	; 0x181fe <_Z21Select_Operation_Modev+0x3dc>
   181fc:	45 c0       	rjmp	.+138    	; 0x18288 <_Z21Select_Operation_Modev+0x466>
   181fe:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18202:	81 30       	cpi	r24, 0x01	; 1
   18204:	51 f4       	brne	.+20     	; 0x1821a <_Z21Select_Operation_Modev+0x3f8>
   18206:	6d ef       	ldi	r22, 0xFD	; 253
   18208:	74 e4       	ldi	r23, 0x44	; 68
   1820a:	82 e5       	ldi	r24, 0x52	; 82
   1820c:	94 e1       	ldi	r25, 0x14	; 20
   1820e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18212:	82 e5       	ldi	r24, 0x52	; 82
   18214:	94 e1       	ldi	r25, 0x14	; 20
   18216:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1821a:	22 e0       	ldi	r18, 0x02	; 2
   1821c:	20 93 6e 13 	sts	0x136E, r18	; 0x80136e <_sRuble_Parameters+0x27>
   18220:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18224:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18228:	84 60       	ori	r24, 0x04	; 4
   1822a:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1822e:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18232:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   18236:	81 60       	ori	r24, 0x01	; 1
   18238:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   1823c:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   18240:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   18244:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   18248:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   1824c:	88 60       	ori	r24, 0x08	; 8
   1824e:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   18252:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   18256:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   1825a:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   1825e:	81 e0       	ldi	r24, 0x01	; 1
   18260:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   18264:	20 93 fc 13 	sts	0x13FC, r18	; 0x8013fc <_sRuble_Parameters+0xb5>
   18268:	6c ef       	ldi	r22, 0xFC	; 252
   1826a:	73 e1       	ldi	r23, 0x13	; 19
   1826c:	89 e1       	ldi	r24, 0x19	; 25
   1826e:	95 e0       	ldi	r25, 0x05	; 5
   18270:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18274:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
   18278:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
   1827c:	6e e6       	ldi	r22, 0x6E	; 110
   1827e:	73 e1       	ldi	r23, 0x13	; 19
   18280:	88 ed       	ldi	r24, 0xD8	; 216
   18282:	94 e0       	ldi	r25, 0x04	; 4
   18284:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18288:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <_sSchedules>
   1828c:	88 23       	and	r24, r24
   1828e:	09 f4       	brne	.+2      	; 0x18292 <_Z21Select_Operation_Modev+0x470>
   18290:	9b c0       	rjmp	.+310    	; 0x183c8 <_Z21Select_Operation_Modev+0x5a6>
   18292:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18296:	81 30       	cpi	r24, 0x01	; 1
   18298:	09 f0       	breq	.+2      	; 0x1829c <_Z21Select_Operation_Modev+0x47a>
   1829a:	70 c0       	rjmp	.+224    	; 0x1837c <_Z21Select_Operation_Modev+0x55a>
   1829c:	6a ee       	ldi	r22, 0xEA	; 234
   1829e:	74 e4       	ldi	r23, 0x44	; 68
   182a0:	54 c0       	rjmp	.+168    	; 0x1834a <_Z21Select_Operation_Modev+0x528>
   182a2:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x2a>
   182a6:	82 30       	cpi	r24, 0x02	; 2
   182a8:	09 f4       	brne	.+2      	; 0x182ac <_Z21Select_Operation_Modev+0x48a>
   182aa:	8e c0       	rjmp	.+284    	; 0x183c8 <_Z21Select_Operation_Modev+0x5a6>
   182ac:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   182b0:	81 30       	cpi	r24, 0x01	; 1
   182b2:	51 f4       	brne	.+20     	; 0x182c8 <_Z21Select_Operation_Modev+0x4a6>
   182b4:	65 ed       	ldi	r22, 0xD5	; 213
   182b6:	74 e4       	ldi	r23, 0x44	; 68
   182b8:	82 e5       	ldi	r24, 0x52	; 82
   182ba:	94 e1       	ldi	r25, 0x14	; 20
   182bc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   182c0:	82 e5       	ldi	r24, 0x52	; 82
   182c2:	94 e1       	ldi	r25, 0x14	; 20
   182c4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   182c8:	22 e0       	ldi	r18, 0x02	; 2
   182ca:	20 93 6e 13 	sts	0x136E, r18	; 0x80136e <_sRuble_Parameters+0x27>
   182ce:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   182d2:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   182d6:	84 60       	ori	r24, 0x04	; 4
   182d8:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   182dc:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   182e0:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   182e4:	81 60       	ori	r24, 0x01	; 1
   182e6:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   182ea:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   182ee:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   182f2:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   182f6:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   182fa:	88 60       	ori	r24, 0x08	; 8
   182fc:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   18300:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   18304:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   18308:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   1830c:	81 e0       	ldi	r24, 0x01	; 1
   1830e:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   18312:	20 93 fc 13 	sts	0x13FC, r18	; 0x8013fc <_sRuble_Parameters+0xb5>
   18316:	6c ef       	ldi	r22, 0xFC	; 252
   18318:	73 e1       	ldi	r23, 0x13	; 19
   1831a:	89 e1       	ldi	r24, 0x19	; 25
   1831c:	95 e0       	ldi	r25, 0x05	; 5
   1831e:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18322:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
   18326:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
   1832a:	48 c0       	rjmp	.+144    	; 0x183bc <_Z21Select_Operation_Modev+0x59a>
   1832c:	80 91 71 13 	lds	r24, 0x1371	; 0x801371 <_sRuble_Parameters+0x2a>
   18330:	82 30       	cpi	r24, 0x02	; 2
   18332:	09 f0       	breq	.+2      	; 0x18336 <_Z21Select_Operation_Modev+0x514>
   18334:	49 c0       	rjmp	.+146    	; 0x183c8 <_Z21Select_Operation_Modev+0x5a6>
   18336:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <_sSchedules>
   1833a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1833e:	99 23       	and	r25, r25
   18340:	69 f0       	breq	.+26     	; 0x1835c <_Z21Select_Operation_Modev+0x53a>
   18342:	81 30       	cpi	r24, 0x01	; 1
   18344:	d9 f4       	brne	.+54     	; 0x1837c <_Z21Select_Operation_Modev+0x55a>
   18346:	62 ec       	ldi	r22, 0xC2	; 194
   18348:	74 e4       	ldi	r23, 0x44	; 68
   1834a:	82 e5       	ldi	r24, 0x52	; 82
   1834c:	94 e1       	ldi	r25, 0x14	; 20
   1834e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18352:	82 e5       	ldi	r24, 0x52	; 82
   18354:	94 e1       	ldi	r25, 0x14	; 20
   18356:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1835a:	10 c0       	rjmp	.+32     	; 0x1837c <_Z21Select_Operation_Modev+0x55a>
   1835c:	81 30       	cpi	r24, 0x01	; 1
   1835e:	51 f4       	brne	.+20     	; 0x18374 <_Z21Select_Operation_Modev+0x552>
   18360:	6f ea       	ldi	r22, 0xAF	; 175
   18362:	74 e4       	ldi	r23, 0x44	; 68
   18364:	82 e5       	ldi	r24, 0x52	; 82
   18366:	94 e1       	ldi	r25, 0x14	; 20
   18368:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1836c:	82 e5       	ldi	r24, 0x52	; 82
   1836e:	94 e1       	ldi	r25, 0x14	; 20
   18370:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18374:	10 92 2f 14 	sts	0x142F, r1	; 0x80142f <_sRuble_Parameters+0xe8>
   18378:	10 92 2e 14 	sts	0x142E, r1	; 0x80142e <_sRuble_Parameters+0xe7>
   1837c:	85 e0       	ldi	r24, 0x05	; 5
   1837e:	80 93 6e 13 	sts	0x136E, r24	; 0x80136e <_sRuble_Parameters+0x27>
   18382:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18386:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1838a:	84 60       	ori	r24, 0x04	; 4
   1838c:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18390:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18394:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   18398:	8e 7f       	andi	r24, 0xFE	; 254
   1839a:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   1839e:	80 e1       	ldi	r24, 0x10	; 16
   183a0:	90 e0       	ldi	r25, 0x00	; 0
   183a2:	a0 e0       	ldi	r26, 0x00	; 0
   183a4:	b0 e0       	ldi	r27, 0x00	; 0
   183a6:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   183aa:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   183ae:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   183b2:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   183b6:	81 e0       	ldi	r24, 0x01	; 1
   183b8:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   183bc:	6e e6       	ldi	r22, 0x6E	; 110
   183be:	73 e1       	ldi	r23, 0x13	; 19
   183c0:	88 ed       	ldi	r24, 0xD8	; 216
   183c2:	94 e0       	ldi	r25, 0x04	; 4
   183c4:	0c 94 e2 84 	jmp	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   183c8:	08 95       	ret

000183ca <_Z16Start_Irrigationv>:
   183ca:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   183ce:	81 30       	cpi	r24, 0x01	; 1
   183d0:	31 f4       	brne	.+12     	; 0x183de <_Z16Start_Irrigationv+0x14>
   183d2:	6b ef       	ldi	r22, 0xFB	; 251
   183d4:	70 e4       	ldi	r23, 0x40	; 64
   183d6:	82 e5       	ldi	r24, 0x52	; 82
   183d8:	94 e1       	ldi	r25, 0x14	; 20
   183da:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   183de:	10 92 45 13 	sts	0x1345, r1	; 0x801345 <_sPump_Parameter+0x8>
   183e2:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   183e6:	81 30       	cpi	r24, 0x01	; 1
   183e8:	29 f4       	brne	.+10     	; 0x183f4 <_Z16Start_Irrigationv+0x2a>
   183ea:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
   183ee:	81 30       	cpi	r24, 0x01	; 1
   183f0:	09 f4       	brne	.+2      	; 0x183f4 <_Z16Start_Irrigationv+0x2a>
   183f2:	d4 c0       	rjmp	.+424    	; 0x1859c <_Z16Start_Irrigationv+0x1d2>
   183f4:	82 e0       	ldi	r24, 0x02	; 2
   183f6:	0e 94 15 24 	call	0x482a	; 0x482a <_Z22Hard_Coded_Flush_Valveh>
   183fa:	81 e0       	ldi	r24, 0x01	; 1
   183fc:	0e 94 03 ad 	call	0x15a06	; 0x15a06 <_Z22Valve_Grouping_Handlerh>
   18400:	88 23       	and	r24, r24
   18402:	09 f4       	brne	.+2      	; 0x18406 <_Z16Start_Irrigationv+0x3c>
   18404:	b3 c0       	rjmp	.+358    	; 0x1856c <_Z16Start_Irrigationv+0x1a2>
   18406:	10 92 62 13 	sts	0x1362, r1	; 0x801362 <_sRuble_Parameters+0x1b>
   1840a:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x1a>
   1840e:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   18412:	81 11       	cpse	r24, r1
   18414:	22 c0       	rjmp	.+68     	; 0x1845a <_Z16Start_Irrigationv+0x90>
   18416:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   1841a:	81 30       	cpi	r24, 0x01	; 1
   1841c:	f1 f4       	brne	.+60     	; 0x1845a <_Z16Start_Irrigationv+0x90>
   1841e:	8a e0       	ldi	r24, 0x0A	; 10
   18420:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   18424:	89 2b       	or	r24, r25
   18426:	21 f0       	breq	.+8      	; 0x18430 <_Z16Start_Irrigationv+0x66>
   18428:	60 e0       	ldi	r22, 0x00	; 0
   1842a:	8a e0       	ldi	r24, 0x0A	; 10
   1842c:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   18430:	80 e3       	ldi	r24, 0x30	; 48
   18432:	95 e7       	ldi	r25, 0x75	; 117
   18434:	0e 94 01 74 	call	0xe802	; 0xe802 <_Z8My_Delayj>
   18438:	8b e0       	ldi	r24, 0x0B	; 11
   1843a:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   1843e:	89 2b       	or	r24, r25
   18440:	21 f0       	breq	.+8      	; 0x1844a <_Z16Start_Irrigationv+0x80>
   18442:	60 e0       	ldi	r22, 0x00	; 0
   18444:	8b e0       	ldi	r24, 0x0B	; 11
   18446:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1844a:	e0 91 23 14 	lds	r30, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   1844e:	f0 e0       	ldi	r31, 0x00	; 0
   18450:	e3 5e       	subi	r30, 0xE3	; 227
   18452:	fb 4e       	sbci	r31, 0xEB	; 235
   18454:	81 e0       	ldi	r24, 0x01	; 1
   18456:	80 83       	st	Z, r24
   18458:	32 c0       	rjmp	.+100    	; 0x184be <_Z16Start_Irrigationv+0xf4>
   1845a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1845e:	81 30       	cpi	r24, 0x01	; 1
   18460:	51 f4       	brne	.+20     	; 0x18476 <_Z16Start_Irrigationv+0xac>
   18462:	64 ed       	ldi	r22, 0xD4	; 212
   18464:	70 e4       	ldi	r23, 0x40	; 64
   18466:	82 e5       	ldi	r24, 0x52	; 82
   18468:	94 e1       	ldi	r25, 0x14	; 20
   1846a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1846e:	82 e5       	ldi	r24, 0x52	; 82
   18470:	94 e1       	ldi	r25, 0x14	; 20
   18472:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18476:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   1847a:	62 50       	subi	r22, 0x02	; 2
   1847c:	82 e0       	ldi	r24, 0x02	; 2
   1847e:	aa d8       	rcall	.-3756   	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
   18480:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18484:	88 23       	and	r24, r24
   18486:	b9 f1       	breq	.+110    	; 0x184f6 <_Z16Start_Irrigationv+0x12c>
   18488:	91 30       	cpi	r25, 0x01	; 1
   1848a:	51 f4       	brne	.+20     	; 0x184a0 <_Z16Start_Irrigationv+0xd6>
   1848c:	6f eb       	ldi	r22, 0xBF	; 191
   1848e:	70 e4       	ldi	r23, 0x40	; 64
   18490:	82 e5       	ldi	r24, 0x52	; 82
   18492:	94 e1       	ldi	r25, 0x14	; 20
   18494:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18498:	82 e5       	ldi	r24, 0x52	; 82
   1849a:	94 e1       	ldi	r25, 0x14	; 20
   1849c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   184a0:	e0 91 23 14 	lds	r30, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   184a4:	f0 e0       	ldi	r31, 0x00	; 0
   184a6:	e3 5e       	subi	r30, 0xE3	; 227
   184a8:	fb 4e       	sbci	r31, 0xEB	; 235
   184aa:	81 e0       	ldi	r24, 0x01	; 1
   184ac:	80 83       	st	Z, r24
   184ae:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xc0>
   184b2:	67 e0       	ldi	r22, 0x07	; 7
   184b4:	74 e1       	ldi	r23, 0x14	; 20
   184b6:	8d ea       	ldi	r24, 0xAD	; 173
   184b8:	9c e0       	ldi	r25, 0x0C	; 12
   184ba:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   184be:	0e 94 27 85 	call	0x10a4e	; 0x10a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   184c2:	86 e9       	ldi	r24, 0x96	; 150
   184c4:	90 e0       	ldi	r25, 0x00	; 0
   184c6:	90 93 09 14 	sts	0x1409, r25	; 0x801409 <_sRuble_Parameters+0xc2>
   184ca:	80 93 08 14 	sts	0x1408, r24	; 0x801408 <_sRuble_Parameters+0xc1>
   184ce:	80 91 72 13 	lds	r24, 0x1372	; 0x801372 <_sRuble_Parameters+0x2b>
   184d2:	82 60       	ori	r24, 0x02	; 2
   184d4:	80 93 72 13 	sts	0x1372, r24	; 0x801372 <_sRuble_Parameters+0x2b>
   184d8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   184dc:	81 30       	cpi	r24, 0x01	; 1
   184de:	d9 f5       	brne	.+118    	; 0x18556 <_Z16Start_Irrigationv+0x18c>
   184e0:	6b e7       	ldi	r22, 0x7B	; 123
   184e2:	70 e4       	ldi	r23, 0x40	; 64
   184e4:	82 e5       	ldi	r24, 0x52	; 82
   184e6:	94 e1       	ldi	r25, 0x14	; 20
   184e8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   184ec:	82 e5       	ldi	r24, 0x52	; 82
   184ee:	94 e1       	ldi	r25, 0x14	; 20
   184f0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   184f4:	30 c0       	rjmp	.+96     	; 0x18556 <_Z16Start_Irrigationv+0x18c>
   184f6:	91 30       	cpi	r25, 0x01	; 1
   184f8:	51 f4       	brne	.+20     	; 0x1850e <_Z16Start_Irrigationv+0x144>
   184fa:	62 ea       	ldi	r22, 0xA2	; 162
   184fc:	70 e4       	ldi	r23, 0x40	; 64
   184fe:	82 e5       	ldi	r24, 0x52	; 82
   18500:	94 e1       	ldi	r25, 0x14	; 20
   18502:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18506:	82 e5       	ldi	r24, 0x52	; 82
   18508:	94 e1       	ldi	r25, 0x14	; 20
   1850a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1850e:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   18512:	67 e0       	ldi	r22, 0x07	; 7
   18514:	74 e1       	ldi	r23, 0x14	; 20
   18516:	8d ea       	ldi	r24, 0xAD	; 173
   18518:	9c e0       	ldi	r25, 0x0C	; 12
   1851a:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1851e:	e0 91 23 14 	lds	r30, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   18522:	f0 e0       	ldi	r31, 0x00	; 0
   18524:	e3 5e       	subi	r30, 0xE3	; 227
   18526:	fb 4e       	sbci	r31, 0xEB	; 235
   18528:	10 82       	st	Z, r1
   1852a:	0e 94 27 85 	call	0x10a4e	; 0x10a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   1852e:	91 db       	rcall	.-2270   	; 0x17c52 <_Z15Stop_Irrigationv>
   18530:	64 e0       	ldi	r22, 0x04	; 4
   18532:	80 e0       	ldi	r24, 0x00	; 0
   18534:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18538:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1853c:	81 30       	cpi	r24, 0x01	; 1
   1853e:	71 f5       	brne	.+92     	; 0x1859c <_Z16Start_Irrigationv+0x1d2>
   18540:	6c e8       	ldi	r22, 0x8C	; 140
   18542:	70 e4       	ldi	r23, 0x40	; 64
   18544:	82 e5       	ldi	r24, 0x52	; 82
   18546:	94 e1       	ldi	r25, 0x14	; 20
   18548:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1854c:	82 e5       	ldi	r24, 0x52	; 82
   1854e:	94 e1       	ldi	r25, 0x14	; 20
   18550:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18554:	23 c0       	rjmp	.+70     	; 0x1859c <_Z16Start_Irrigationv+0x1d2>
   18556:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1855a:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1855e:	84 60       	ori	r24, 0x04	; 4
   18560:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18564:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18568:	81 e0       	ldi	r24, 0x01	; 1
   1856a:	08 95       	ret
   1856c:	72 db       	rcall	.-2332   	; 0x17c52 <_Z15Stop_Irrigationv>
   1856e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18572:	81 30       	cpi	r24, 0x01	; 1
   18574:	51 f4       	brne	.+20     	; 0x1858a <_Z16Start_Irrigationv+0x1c0>
   18576:	65 e6       	ldi	r22, 0x65	; 101
   18578:	70 e4       	ldi	r23, 0x40	; 64
   1857a:	82 e5       	ldi	r24, 0x52	; 82
   1857c:	94 e1       	ldi	r25, 0x14	; 20
   1857e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18582:	82 e5       	ldi	r24, 0x52	; 82
   18584:	94 e1       	ldi	r25, 0x14	; 20
   18586:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1858a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1858e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18592:	84 60       	ori	r24, 0x04	; 4
   18594:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18598:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1859c:	80 e0       	ldi	r24, 0x00	; 0
   1859e:	08 95       	ret

000185a0 <_Z13Run_Operationv>:
   185a0:	0f 93       	push	r16
   185a2:	1f 93       	push	r17
   185a4:	cf 93       	push	r28
   185a6:	df 93       	push	r29
   185a8:	1f 92       	push	r1
   185aa:	1f 92       	push	r1
   185ac:	cd b7       	in	r28, 0x3d	; 61
   185ae:	de b7       	in	r29, 0x3e	; 62
   185b0:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_gStart_Monitoring_Three_Phase>
   185b4:	86 34       	cpi	r24, 0x46	; 70
   185b6:	08 f4       	brcc	.+2      	; 0x185ba <_Z13Run_Operationv+0x1a>
   185b8:	01 c3       	rjmp	.+1538   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   185ba:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   185be:	82 30       	cpi	r24, 0x02	; 2
   185c0:	61 f0       	breq	.+24     	; 0x185da <_Z13Run_Operationv+0x3a>
   185c2:	20 f4       	brcc	.+8      	; 0x185cc <_Z13Run_Operationv+0x2c>
   185c4:	81 30       	cpi	r24, 0x01	; 1
   185c6:	09 f4       	brne	.+2      	; 0x185ca <_Z13Run_Operationv+0x2a>
   185c8:	42 c0       	rjmp	.+132    	; 0x1864e <_Z13Run_Operationv+0xae>
   185ca:	f8 c2       	rjmp	.+1520   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   185cc:	83 30       	cpi	r24, 0x03	; 3
   185ce:	09 f4       	brne	.+2      	; 0x185d2 <_Z13Run_Operationv+0x32>
   185d0:	d5 c0       	rjmp	.+426    	; 0x1877c <_Z13Run_Operationv+0x1dc>
   185d2:	85 30       	cpi	r24, 0x05	; 5
   185d4:	09 f4       	brne	.+2      	; 0x185d8 <_Z13Run_Operationv+0x38>
   185d6:	ce c2       	rjmp	.+1436   	; 0x18b74 <_Z13Run_Operationv+0x5d4>
   185d8:	f1 c2       	rjmp	.+1506   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   185da:	80 91 6f 13 	lds	r24, 0x136F	; 0x80136f <_sRuble_Parameters+0x28>
   185de:	81 30       	cpi	r24, 0x01	; 1
   185e0:	19 f0       	breq	.+6      	; 0x185e8 <_Z13Run_Operationv+0x48>
   185e2:	84 30       	cpi	r24, 0x04	; 4
   185e4:	09 f0       	breq	.+2      	; 0x185e8 <_Z13Run_Operationv+0x48>
   185e6:	ea c2       	rjmp	.+1492   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   185e8:	0e 94 f0 52 	call	0xa5e0	; 0xa5e0 <_Z20Schedules_Monitoringv>
   185ec:	80 91 2e 14 	lds	r24, 0x142E	; 0x80142e <_sRuble_Parameters+0xe7>
   185f0:	90 91 2f 14 	lds	r25, 0x142F	; 0x80142f <_sRuble_Parameters+0xe8>
   185f4:	89 2b       	or	r24, r25
   185f6:	09 f0       	breq	.+2      	; 0x185fa <_Z13Run_Operationv+0x5a>
   185f8:	e1 c2       	rjmp	.+1474   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   185fa:	2b db       	rcall	.-2474   	; 0x17c52 <_Z15Stop_Irrigationv>
   185fc:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18600:	88 23       	and	r24, r24
   18602:	49 f0       	breq	.+18     	; 0x18616 <_Z13Run_Operationv+0x76>
   18604:	83 e0       	ldi	r24, 0x03	; 3
   18606:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   1860a:	91 30       	cpi	r25, 0x01	; 1
   1860c:	09 f0       	breq	.+2      	; 0x18610 <_Z13Run_Operationv+0x70>
   1860e:	d6 c2       	rjmp	.+1452   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18610:	67 e8       	ldi	r22, 0x87	; 135
   18612:	74 e4       	ldi	r23, 0x44	; 68
   18614:	0e c0       	rjmp	.+28     	; 0x18632 <_Z13Run_Operationv+0x92>
   18616:	84 e0       	ldi	r24, 0x04	; 4
   18618:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   1861c:	28 e5       	ldi	r18, 0x58	; 88
   1861e:	32 e0       	ldi	r19, 0x02	; 2
   18620:	30 93 2f 14 	sts	0x142F, r19	; 0x80142f <_sRuble_Parameters+0xe8>
   18624:	20 93 2e 14 	sts	0x142E, r18	; 0x80142e <_sRuble_Parameters+0xe7>
   18628:	91 30       	cpi	r25, 0x01	; 1
   1862a:	09 f0       	breq	.+2      	; 0x1862e <_Z13Run_Operationv+0x8e>
   1862c:	c7 c2       	rjmp	.+1422   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   1862e:	6f e5       	ldi	r22, 0x5F	; 95
   18630:	74 e4       	ldi	r23, 0x44	; 68
   18632:	82 e5       	ldi	r24, 0x52	; 82
   18634:	94 e1       	ldi	r25, 0x14	; 20
   18636:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1863a:	82 e5       	ldi	r24, 0x52	; 82
   1863c:	94 e1       	ldi	r25, 0x14	; 20
   1863e:	0f 90       	pop	r0
   18640:	0f 90       	pop	r0
   18642:	df 91       	pop	r29
   18644:	cf 91       	pop	r28
   18646:	1f 91       	pop	r17
   18648:	0f 91       	pop	r16
   1864a:	0c 94 1c d0 	jmp	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1864e:	80 91 6f 13 	lds	r24, 0x136F	; 0x80136f <_sRuble_Parameters+0x28>
   18652:	83 30       	cpi	r24, 0x03	; 3
   18654:	09 f4       	brne	.+2      	; 0x18658 <_Z13Run_Operationv+0xb8>
   18656:	48 c0       	rjmp	.+144    	; 0x186e8 <_Z13Run_Operationv+0x148>
   18658:	20 f4       	brcc	.+8      	; 0x18662 <_Z13Run_Operationv+0xc2>
   1865a:	81 30       	cpi	r24, 0x01	; 1
   1865c:	08 f4       	brcc	.+2      	; 0x18660 <_Z13Run_Operationv+0xc0>
   1865e:	ae c2       	rjmp	.+1372   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18660:	03 c0       	rjmp	.+6      	; 0x18668 <_Z13Run_Operationv+0xc8>
   18662:	84 30       	cpi	r24, 0x04	; 4
   18664:	09 f0       	breq	.+2      	; 0x18668 <_Z13Run_Operationv+0xc8>
   18666:	aa c2       	rjmp	.+1364   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18668:	80 91 ff 13 	lds	r24, 0x13FF	; 0x8013ff <_sRuble_Parameters+0xb8>
   1866c:	81 11       	cpse	r24, r1
   1866e:	a6 c2       	rjmp	.+1356   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18670:	0e 94 f0 52 	call	0xa5e0	; 0xa5e0 <_Z20Schedules_Monitoringv>
   18674:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   18678:	88 23       	and	r24, r24
   1867a:	59 f1       	breq	.+86     	; 0x186d2 <_Z13Run_Operationv+0x132>
   1867c:	80 91 2e 14 	lds	r24, 0x142E	; 0x80142e <_sRuble_Parameters+0xe7>
   18680:	90 91 2f 14 	lds	r25, 0x142F	; 0x80142f <_sRuble_Parameters+0xe8>
   18684:	89 2b       	or	r24, r25
   18686:	09 f0       	breq	.+2      	; 0x1868a <_Z13Run_Operationv+0xea>
   18688:	99 c2       	rjmp	.+1330   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   1868a:	e3 da       	rcall	.-2618   	; 0x17c52 <_Z15Stop_Irrigationv>
   1868c:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18690:	88 23       	and	r24, r24
   18692:	49 f0       	breq	.+18     	; 0x186a6 <_Z13Run_Operationv+0x106>
   18694:	83 e0       	ldi	r24, 0x03	; 3
   18696:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   1869a:	91 30       	cpi	r25, 0x01	; 1
   1869c:	09 f0       	breq	.+2      	; 0x186a0 <_Z13Run_Operationv+0x100>
   1869e:	8e c2       	rjmp	.+1308   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   186a0:	6d e3       	ldi	r22, 0x3D	; 61
   186a2:	74 e4       	ldi	r23, 0x44	; 68
   186a4:	c6 cf       	rjmp	.-116    	; 0x18632 <_Z13Run_Operationv+0x92>
   186a6:	84 e0       	ldi	r24, 0x04	; 4
   186a8:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   186ac:	91 30       	cpi	r25, 0x01	; 1
   186ae:	51 f4       	brne	.+20     	; 0x186c4 <_Z13Run_Operationv+0x124>
   186b0:	62 e1       	ldi	r22, 0x12	; 18
   186b2:	74 e4       	ldi	r23, 0x44	; 68
   186b4:	82 e5       	ldi	r24, 0x52	; 82
   186b6:	94 e1       	ldi	r25, 0x14	; 20
   186b8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   186bc:	82 e5       	ldi	r24, 0x52	; 82
   186be:	94 e1       	ldi	r25, 0x14	; 20
   186c0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   186c4:	88 e5       	ldi	r24, 0x58	; 88
   186c6:	92 e0       	ldi	r25, 0x02	; 2
   186c8:	90 93 2f 14 	sts	0x142F, r25	; 0x80142f <_sRuble_Parameters+0xe8>
   186cc:	80 93 2e 14 	sts	0x142E, r24	; 0x80142e <_sRuble_Parameters+0xe7>
   186d0:	75 c2       	rjmp	.+1258   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   186d2:	83 e0       	ldi	r24, 0x03	; 3
   186d4:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   186d8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   186dc:	81 30       	cpi	r24, 0x01	; 1
   186de:	09 f0       	breq	.+2      	; 0x186e2 <_Z13Run_Operationv+0x142>
   186e0:	6d c2       	rjmp	.+1242   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   186e2:	61 ef       	ldi	r22, 0xF1	; 241
   186e4:	73 e4       	ldi	r23, 0x43	; 67
   186e6:	a5 cf       	rjmp	.-182    	; 0x18632 <_Z13Run_Operationv+0x92>
   186e8:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
   186ec:	88 23       	and	r24, r24
   186ee:	a1 f0       	breq	.+40     	; 0x18718 <_Z13Run_Operationv+0x178>
   186f0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   186f4:	81 30       	cpi	r24, 0x01	; 1
   186f6:	51 f4       	brne	.+20     	; 0x1870c <_Z13Run_Operationv+0x16c>
   186f8:	62 ec       	ldi	r22, 0xC2	; 194
   186fa:	73 e4       	ldi	r23, 0x43	; 67
   186fc:	82 e5       	ldi	r24, 0x52	; 82
   186fe:	94 e1       	ldi	r25, 0x14	; 20
   18700:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18704:	82 e5       	ldi	r24, 0x52	; 82
   18706:	94 e1       	ldi	r25, 0x14	; 20
   18708:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1870c:	a2 da       	rcall	.-2748   	; 0x17c52 <_Z15Stop_Irrigationv>
   1870e:	81 11       	cpse	r24, r1
   18710:	03 c0       	rjmp	.+6      	; 0x18718 <_Z13Run_Operationv+0x178>
   18712:	84 e0       	ldi	r24, 0x04	; 4
   18714:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   18718:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
   1871c:	81 11       	cpse	r24, r1
   1871e:	04 c0       	rjmp	.+8      	; 0x18728 <_Z13Run_Operationv+0x188>
   18720:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   18724:	88 23       	and	r24, r24
   18726:	a1 f0       	breq	.+40     	; 0x18750 <_Z13Run_Operationv+0x1b0>
   18728:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1872c:	81 30       	cpi	r24, 0x01	; 1
   1872e:	51 f4       	brne	.+20     	; 0x18744 <_Z13Run_Operationv+0x1a4>
   18730:	67 ea       	ldi	r22, 0xA7	; 167
   18732:	73 e4       	ldi	r23, 0x43	; 67
   18734:	82 e5       	ldi	r24, 0x52	; 82
   18736:	94 e1       	ldi	r25, 0x14	; 20
   18738:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1873c:	82 e5       	ldi	r24, 0x52	; 82
   1873e:	94 e1       	ldi	r25, 0x14	; 20
   18740:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18744:	86 da       	rcall	.-2804   	; 0x17c52 <_Z15Stop_Irrigationv>
   18746:	81 11       	cpse	r24, r1
   18748:	03 c0       	rjmp	.+6      	; 0x18750 <_Z13Run_Operationv+0x1b0>
   1874a:	84 e0       	ldi	r24, 0x04	; 4
   1874c:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   18750:	80 91 ff 13 	lds	r24, 0x13FF	; 0x8013ff <_sRuble_Parameters+0xb8>
   18754:	88 23       	and	r24, r24
   18756:	09 f4       	brne	.+2      	; 0x1875a <_Z13Run_Operationv+0x1ba>
   18758:	31 c2       	rjmp	.+1122   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   1875a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1875e:	81 30       	cpi	r24, 0x01	; 1
   18760:	51 f4       	brne	.+20     	; 0x18776 <_Z13Run_Operationv+0x1d6>
   18762:	6e e7       	ldi	r22, 0x7E	; 126
   18764:	73 e4       	ldi	r23, 0x43	; 67
   18766:	82 e5       	ldi	r24, 0x52	; 82
   18768:	94 e1       	ldi	r25, 0x14	; 20
   1876a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1876e:	82 e5       	ldi	r24, 0x52	; 82
   18770:	94 e1       	ldi	r25, 0x14	; 20
   18772:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18776:	6d da       	rcall	.-2854   	; 0x17c52 <_Z15Stop_Irrigationv>
   18778:	84 e0       	ldi	r24, 0x04	; 4
   1877a:	55 c0       	rjmp	.+170    	; 0x18826 <_Z13Run_Operationv+0x286>
   1877c:	80 91 6f 13 	lds	r24, 0x136F	; 0x80136f <_sRuble_Parameters+0x28>
   18780:	83 30       	cpi	r24, 0x03	; 3
   18782:	09 f4       	brne	.+2      	; 0x18786 <_Z13Run_Operationv+0x1e6>
   18784:	76 c0       	rjmp	.+236    	; 0x18872 <_Z13Run_Operationv+0x2d2>
   18786:	20 f4       	brcc	.+8      	; 0x18790 <_Z13Run_Operationv+0x1f0>
   18788:	81 30       	cpi	r24, 0x01	; 1
   1878a:	08 f4       	brcc	.+2      	; 0x1878e <_Z13Run_Operationv+0x1ee>
   1878c:	17 c2       	rjmp	.+1070   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   1878e:	03 c0       	rjmp	.+6      	; 0x18796 <_Z13Run_Operationv+0x1f6>
   18790:	84 30       	cpi	r24, 0x04	; 4
   18792:	09 f0       	breq	.+2      	; 0x18796 <_Z13Run_Operationv+0x1f6>
   18794:	13 c2       	rjmp	.+1062   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18796:	80 91 65 13 	lds	r24, 0x1365	; 0x801365 <_sRuble_Parameters+0x1e>
   1879a:	90 91 66 13 	lds	r25, 0x1366	; 0x801366 <_sRuble_Parameters+0x1f>
   1879e:	89 2b       	or	r24, r25
   187a0:	09 f0       	breq	.+2      	; 0x187a4 <_Z13Run_Operationv+0x204>
   187a2:	0c c2       	rjmp	.+1048   	; 0x18bbc <_Z13Run_Operationv+0x61c>
   187a4:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   187a8:	81 30       	cpi	r24, 0x01	; 1
   187aa:	b1 f4       	brne	.+44     	; 0x187d8 <_Z13Run_Operationv+0x238>
   187ac:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
   187b0:	81 30       	cpi	r24, 0x01	; 1
   187b2:	91 f4       	brne	.+36     	; 0x187d8 <_Z13Run_Operationv+0x238>
   187b4:	80 ef       	ldi	r24, 0xF0	; 240
   187b6:	90 e0       	ldi	r25, 0x00	; 0
   187b8:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <_sRuble_Parameters+0x1f>
   187bc:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <_sRuble_Parameters+0x1e>
   187c0:	60 ef       	ldi	r22, 0xF0	; 240
   187c2:	73 e1       	ldi	r23, 0x13	; 19
   187c4:	86 e9       	ldi	r24, 0x96	; 150
   187c6:	9c e0       	ldi	r25, 0x0C	; 12
   187c8:	0f 90       	pop	r0
   187ca:	0f 90       	pop	r0
   187cc:	df 91       	pop	r29
   187ce:	cf 91       	pop	r28
   187d0:	1f 91       	pop	r17
   187d2:	0f 91       	pop	r16
   187d4:	0c 94 e2 84 	jmp	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   187d8:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
   187dc:	81 11       	cpse	r24, r1
   187de:	04 c0       	rjmp	.+8      	; 0x187e8 <_Z13Run_Operationv+0x248>
   187e0:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   187e4:	88 23       	and	r24, r24
   187e6:	39 f0       	breq	.+14     	; 0x187f6 <_Z13Run_Operationv+0x256>
   187e8:	8c e3       	ldi	r24, 0x3C	; 60
   187ea:	90 e0       	ldi	r25, 0x00	; 0
   187ec:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <_sRuble_Parameters+0x1f>
   187f0:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <_sRuble_Parameters+0x1e>
   187f4:	e3 c1       	rjmp	.+966    	; 0x18bbc <_Z13Run_Operationv+0x61c>
   187f6:	10 92 7d 0d 	sts	0x0D7D, r1	; 0x800d7d <_ZZ13Run_OperationvE12eeprom_timer>
   187fa:	10 92 03 14 	sts	0x1403, r1	; 0x801403 <_sRuble_Parameters+0xbc>
   187fe:	0e 94 f0 52 	call	0xa5e0	; 0xa5e0 <_Z20Schedules_Monitoringv>
   18802:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   18806:	88 23       	and	r24, r24
   18808:	69 f0       	breq	.+26     	; 0x18824 <_Z13Run_Operationv+0x284>
   1880a:	23 da       	rcall	.-3002   	; 0x17c52 <_Z15Stop_Irrigationv>
   1880c:	88 23       	and	r24, r24
   1880e:	71 f0       	breq	.+28     	; 0x1882c <_Z13Run_Operationv+0x28c>
   18810:	6c e5       	ldi	r22, 0x5C	; 92
   18812:	73 e4       	ldi	r23, 0x43	; 67
   18814:	82 e5       	ldi	r24, 0x52	; 82
   18816:	94 e1       	ldi	r25, 0x14	; 20
   18818:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1881c:	82 e5       	ldi	r24, 0x52	; 82
   1881e:	94 e1       	ldi	r25, 0x14	; 20
   18820:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18824:	83 e0       	ldi	r24, 0x03	; 3
   18826:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   1882a:	c8 c1       	rjmp	.+912    	; 0x18bbc <_Z13Run_Operationv+0x61c>
   1882c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18830:	81 30       	cpi	r24, 0x01	; 1
   18832:	51 f4       	brne	.+20     	; 0x18848 <_Z13Run_Operationv+0x2a8>
   18834:	69 e1       	ldi	r22, 0x19	; 25
   18836:	73 e4       	ldi	r23, 0x43	; 67
   18838:	82 e5       	ldi	r24, 0x52	; 82
   1883a:	94 e1       	ldi	r25, 0x14	; 20
   1883c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18840:	82 e5       	ldi	r24, 0x52	; 82
   18842:	94 e1       	ldi	r25, 0x14	; 20
   18844:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18848:	83 e0       	ldi	r24, 0x03	; 3
   1884a:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   1884e:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   18852:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   18856:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1885a:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   1885e:	92 60       	ori	r25, 0x02	; 2
   18860:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   18864:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   18868:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   1886c:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   18870:	a5 c1       	rjmp	.+842    	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18872:	80 91 7d 0d 	lds	r24, 0x0D7D	; 0x800d7d <_ZZ13Run_OperationvE12eeprom_timer>
   18876:	8f 5f       	subi	r24, 0xFF	; 255
   18878:	8b 3a       	cpi	r24, 0xAB	; 171
   1887a:	18 f4       	brcc	.+6      	; 0x18882 <_Z13Run_Operationv+0x2e2>
   1887c:	80 93 7d 0d 	sts	0x0D7D, r24	; 0x800d7d <_ZZ13Run_OperationvE12eeprom_timer>
   18880:	06 c0       	rjmp	.+12     	; 0x1888e <_Z13Run_Operationv+0x2ee>
   18882:	10 92 7d 0d 	sts	0x0D7D, r1	; 0x800d7d <_ZZ13Run_OperationvE12eeprom_timer>
   18886:	88 e9       	ldi	r24, 0x98	; 152
   18888:	9c e0       	ldi	r25, 0x0C	; 12
   1888a:	0e 94 fb 84 	call	0x109f6	; 0x109f6 <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.38>
   1888e:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   18892:	81 11       	cpse	r24, r1
   18894:	95 c0       	rjmp	.+298    	; 0x189c0 <_Z13Run_Operationv+0x420>
   18896:	00 91 5f 13 	lds	r16, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1889a:	10 91 60 13 	lds	r17, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1889e:	c8 01       	movw	r24, r16
   188a0:	88 60       	ori	r24, 0x08	; 8
   188a2:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   188a6:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   188aa:	88 e9       	ldi	r24, 0x98	; 152
   188ac:	9c e0       	ldi	r25, 0x0C	; 12
   188ae:	0e 94 3a ed 	call	0x1da74	; 0x1da74 <eeprom_read_byte>
   188b2:	89 83       	std	Y+1, r24	; 0x01
   188b4:	89 e9       	ldi	r24, 0x99	; 153
   188b6:	9c e0       	ldi	r25, 0x0C	; 12
   188b8:	0e 94 3a ed 	call	0x1da74	; 0x1da74 <eeprom_read_byte>
   188bc:	8a 83       	std	Y+2, r24	; 0x02
   188be:	89 81       	ldd	r24, Y+1	; 0x01
   188c0:	9a 81       	ldd	r25, Y+2	; 0x02
   188c2:	90 93 5e 13 	sts	0x135E, r25	; 0x80135e <_sRuble_Parameters+0x17>
   188c6:	80 93 5d 13 	sts	0x135D, r24	; 0x80135d <_sRuble_Parameters+0x16>
   188ca:	10 92 62 13 	sts	0x1362, r1	; 0x801362 <_sRuble_Parameters+0x1b>
   188ce:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x1a>
   188d2:	88 e7       	ldi	r24, 0x78	; 120
   188d4:	80 93 03 14 	sts	0x1403, r24	; 0x801403 <_sRuble_Parameters+0xbc>
   188d8:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
   188dc:	81 11       	cpse	r24, r1
   188de:	62 c0       	rjmp	.+196    	; 0x189a4 <_Z13Run_Operationv+0x404>
   188e0:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   188e4:	81 11       	cpse	r24, r1
   188e6:	5e c0       	rjmp	.+188    	; 0x189a4 <_Z13Run_Operationv+0x404>
   188e8:	80 91 f0 13 	lds	r24, 0x13F0	; 0x8013f0 <_sRuble_Parameters+0xa9>
   188ec:	80 93 a2 13 	sts	0x13A2, r24	; 0x8013a2 <_sRuble_Parameters+0x5b>
   188f0:	62 ea       	ldi	r22, 0xA2	; 162
   188f2:	73 e1       	ldi	r23, 0x13	; 19
   188f4:	86 e9       	ldi	r24, 0x96	; 150
   188f6:	9c e0       	ldi	r25, 0x0C	; 12
   188f8:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   188fc:	66 dd       	rcall	.-1332   	; 0x183ca <_Z16Start_Irrigationv>
   188fe:	81 11       	cpse	r24, r1
   18900:	2c c0       	rjmp	.+88     	; 0x1895a <_Z13Run_Operationv+0x3ba>
   18902:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18906:	81 30       	cpi	r24, 0x01	; 1
   18908:	51 f4       	brne	.+20     	; 0x1891e <_Z13Run_Operationv+0x37e>
   1890a:	61 ed       	ldi	r22, 0xD1	; 209
   1890c:	72 e4       	ldi	r23, 0x42	; 66
   1890e:	82 e5       	ldi	r24, 0x52	; 82
   18910:	94 e1       	ldi	r25, 0x14	; 20
   18912:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18916:	82 e5       	ldi	r24, 0x52	; 82
   18918:	94 e1       	ldi	r25, 0x14	; 20
   1891a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1891e:	81 e0       	ldi	r24, 0x01	; 1
   18920:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   18924:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18928:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   1892c:	84 60       	ori	r24, 0x04	; 4
   1892e:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18932:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18936:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   1893a:	81 30       	cpi	r24, 0x01	; 1
   1893c:	39 f4       	brne	.+14     	; 0x1894c <_Z13Run_Operationv+0x3ac>
   1893e:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
   18942:	81 30       	cpi	r24, 0x01	; 1
   18944:	19 f4       	brne	.+6      	; 0x1894c <_Z13Run_Operationv+0x3ac>
   18946:	80 ef       	ldi	r24, 0xF0	; 240
   18948:	90 e0       	ldi	r25, 0x00	; 0
   1894a:	02 c0       	rjmp	.+4      	; 0x18950 <_Z13Run_Operationv+0x3b0>
   1894c:	88 e5       	ldi	r24, 0x58	; 88
   1894e:	92 e0       	ldi	r25, 0x02	; 2
   18950:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <_sRuble_Parameters+0x1f>
   18954:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <_sRuble_Parameters+0x1e>
   18958:	33 c0       	rjmp	.+102    	; 0x189c0 <_Z13Run_Operationv+0x420>
   1895a:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   1895e:	81 11       	cpse	r24, r1
   18960:	2f c0       	rjmp	.+94     	; 0x189c0 <_Z13Run_Operationv+0x420>
   18962:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18966:	81 30       	cpi	r24, 0x01	; 1
   18968:	51 f4       	brne	.+20     	; 0x1897e <_Z13Run_Operationv+0x3de>
   1896a:	69 e8       	ldi	r22, 0x89	; 137
   1896c:	72 e4       	ldi	r23, 0x42	; 66
   1896e:	82 e5       	ldi	r24, 0x52	; 82
   18970:	94 e1       	ldi	r25, 0x14	; 20
   18972:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18976:	82 e5       	ldi	r24, 0x52	; 82
   18978:	94 e1       	ldi	r25, 0x14	; 20
   1897a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1897e:	88 e5       	ldi	r24, 0x58	; 88
   18980:	92 e0       	ldi	r25, 0x02	; 2
   18982:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <_sRuble_Parameters+0x1f>
   18986:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <_sRuble_Parameters+0x1e>
   1898a:	81 e0       	ldi	r24, 0x01	; 1
   1898c:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   18990:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18994:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18998:	84 60       	ori	r24, 0x04	; 4
   1899a:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1899e:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   189a2:	0e c0       	rjmp	.+28     	; 0x189c0 <_Z13Run_Operationv+0x420>
   189a4:	88 e5       	ldi	r24, 0x58	; 88
   189a6:	92 e0       	ldi	r25, 0x02	; 2
   189a8:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <_sRuble_Parameters+0x1f>
   189ac:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <_sRuble_Parameters+0x1e>
   189b0:	81 e0       	ldi	r24, 0x01	; 1
   189b2:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   189b6:	0c 60       	ori	r16, 0x0C	; 12
   189b8:	10 93 60 13 	sts	0x1360, r17	; 0x801360 <_sRuble_Parameters+0x19>
   189bc:	00 93 5f 13 	sts	0x135F, r16	; 0x80135f <_sRuble_Parameters+0x18>
   189c0:	80 91 5d 13 	lds	r24, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   189c4:	90 91 5e 13 	lds	r25, 0x135E	; 0x80135e <_sRuble_Parameters+0x17>
   189c8:	89 2b       	or	r24, r25
   189ca:	a9 f0       	breq	.+42     	; 0x189f6 <_Z13Run_Operationv+0x456>
   189cc:	6e e6       	ldi	r22, 0x6E	; 110
   189ce:	72 e4       	ldi	r23, 0x42	; 66
   189d0:	82 e5       	ldi	r24, 0x52	; 82
   189d2:	94 e1       	ldi	r25, 0x14	; 20
   189d4:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   189d8:	60 91 5d 13 	lds	r22, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   189dc:	70 91 5e 13 	lds	r23, 0x135E	; 0x80135e <_sRuble_Parameters+0x17>
   189e0:	4a e0       	ldi	r20, 0x0A	; 10
   189e2:	50 e0       	ldi	r21, 0x00	; 0
   189e4:	82 e5       	ldi	r24, 0x52	; 82
   189e6:	94 e1       	ldi	r25, 0x14	; 20
   189e8:	0e 94 3e d2 	call	0x1a47c	; 0x1a47c <_ZN5Print7printlnEji>
   189ec:	82 e5       	ldi	r24, 0x52	; 82
   189ee:	94 e1       	ldi	r25, 0x14	; 20
   189f0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   189f4:	13 c0       	rjmp	.+38     	; 0x18a1c <_Z13Run_Operationv+0x47c>
   189f6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   189fa:	81 30       	cpi	r24, 0x01	; 1
   189fc:	51 f4       	brne	.+20     	; 0x18a12 <_Z13Run_Operationv+0x472>
   189fe:	61 e5       	ldi	r22, 0x51	; 81
   18a00:	72 e4       	ldi	r23, 0x42	; 66
   18a02:	82 e5       	ldi	r24, 0x52	; 82
   18a04:	94 e1       	ldi	r25, 0x14	; 20
   18a06:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a0a:	82 e5       	ldi	r24, 0x52	; 82
   18a0c:	94 e1       	ldi	r25, 0x14	; 20
   18a0e:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18a12:	1f d9       	rcall	.-3522   	; 0x17c52 <_Z15Stop_Irrigationv>
   18a14:	10 92 5e 13 	sts	0x135E, r1	; 0x80135e <_sRuble_Parameters+0x17>
   18a18:	10 92 5d 13 	sts	0x135D, r1	; 0x80135d <_sRuble_Parameters+0x16>
   18a1c:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
   18a20:	81 11       	cpse	r24, r1
   18a22:	09 c0       	rjmp	.+18     	; 0x18a36 <_Z13Run_Operationv+0x496>
   18a24:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
   18a28:	81 11       	cpse	r24, r1
   18a2a:	11 c0       	rjmp	.+34     	; 0x18a4e <_Z13Run_Operationv+0x4ae>
   18a2c:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   18a30:	81 11       	cpse	r24, r1
   18a32:	0d c0       	rjmp	.+26     	; 0x18a4e <_Z13Run_Operationv+0x4ae>
   18a34:	93 c0       	rjmp	.+294    	; 0x18b5c <_Z13Run_Operationv+0x5bc>
   18a36:	98 2f       	mov	r25, r24
   18a38:	97 7f       	andi	r25, 0xF7	; 247
   18a3a:	91 30       	cpi	r25, 0x01	; 1
   18a3c:	89 f0       	breq	.+34     	; 0x18a60 <_Z13Run_Operationv+0x4c0>
   18a3e:	98 2f       	mov	r25, r24
   18a40:	9d 7f       	andi	r25, 0xFD	; 253
   18a42:	94 30       	cpi	r25, 0x04	; 4
   18a44:	69 f0       	breq	.+26     	; 0x18a60 <_Z13Run_Operationv+0x4c0>
   18a46:	8c 30       	cpi	r24, 0x0C	; 12
   18a48:	59 f0       	breq	.+22     	; 0x18a60 <_Z13Run_Operationv+0x4c0>
   18a4a:	8f 30       	cpi	r24, 0x0F	; 15
   18a4c:	49 f0       	breq	.+18     	; 0x18a60 <_Z13Run_Operationv+0x4c0>
   18a4e:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
   18a52:	81 11       	cpse	r24, r1
   18a54:	05 c0       	rjmp	.+10     	; 0x18a60 <_Z13Run_Operationv+0x4c0>
   18a56:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   18a5a:	88 23       	and	r24, r24
   18a5c:	09 f4       	brne	.+2      	; 0x18a60 <_Z13Run_Operationv+0x4c0>
   18a5e:	52 c0       	rjmp	.+164    	; 0x18b04 <_Z13Run_Operationv+0x564>
   18a60:	f8 d8       	rcall	.-3600   	; 0x17c52 <_Z15Stop_Irrigationv>
   18a62:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18a66:	81 30       	cpi	r24, 0x01	; 1
   18a68:	51 f4       	brne	.+20     	; 0x18a7e <_Z13Run_Operationv+0x4de>
   18a6a:	6e e1       	ldi	r22, 0x1E	; 30
   18a6c:	72 e4       	ldi	r23, 0x42	; 66
   18a6e:	82 e5       	ldi	r24, 0x52	; 82
   18a70:	94 e1       	ldi	r25, 0x14	; 20
   18a72:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a76:	82 e5       	ldi	r24, 0x52	; 82
   18a78:	94 e1       	ldi	r25, 0x14	; 20
   18a7a:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18a7e:	90 91 d2 0d 	lds	r25, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
   18a82:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18a86:	91 11       	cpse	r25, r1
   18a88:	04 c0       	rjmp	.+8      	; 0x18a92 <_Z13Run_Operationv+0x4f2>
   18a8a:	90 91 eb 0d 	lds	r25, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   18a8e:	99 23       	and	r25, r25
   18a90:	79 f0       	breq	.+30     	; 0x18ab0 <_Z13Run_Operationv+0x510>
   18a92:	81 30       	cpi	r24, 0x01	; 1
   18a94:	51 f4       	brne	.+20     	; 0x18aaa <_Z13Run_Operationv+0x50a>
   18a96:	6b ee       	ldi	r22, 0xEB	; 235
   18a98:	71 e4       	ldi	r23, 0x41	; 65
   18a9a:	82 e5       	ldi	r24, 0x52	; 82
   18a9c:	94 e1       	ldi	r25, 0x14	; 20
   18a9e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18aa2:	82 e5       	ldi	r24, 0x52	; 82
   18aa4:	94 e1       	ldi	r25, 0x14	; 20
   18aa6:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18aaa:	8c e3       	ldi	r24, 0x3C	; 60
   18aac:	90 e0       	ldi	r25, 0x00	; 0
   18aae:	22 c0       	rjmp	.+68     	; 0x18af4 <_Z13Run_Operationv+0x554>
   18ab0:	81 30       	cpi	r24, 0x01	; 1
   18ab2:	51 f4       	brne	.+20     	; 0x18ac8 <_Z13Run_Operationv+0x528>
   18ab4:	68 eb       	ldi	r22, 0xB8	; 184
   18ab6:	71 e4       	ldi	r23, 0x41	; 65
   18ab8:	82 e5       	ldi	r24, 0x52	; 82
   18aba:	94 e1       	ldi	r25, 0x14	; 20
   18abc:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ac0:	82 e5       	ldi	r24, 0x52	; 82
   18ac2:	94 e1       	ldi	r25, 0x14	; 20
   18ac4:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18ac8:	80 91 39 14 	lds	r24, 0x1439	; 0x801439 <_sRuble_Parameters+0xf2>
   18acc:	81 30       	cpi	r24, 0x01	; 1
   18ace:	29 f4       	brne	.+10     	; 0x18ada <_Z13Run_Operationv+0x53a>
   18ad0:	10 92 39 14 	sts	0x1439, r1	; 0x801439 <_sRuble_Parameters+0xf2>
   18ad4:	80 e1       	ldi	r24, 0x10	; 16
   18ad6:	9e e0       	ldi	r25, 0x0E	; 14
   18ad8:	0d c0       	rjmp	.+26     	; 0x18af4 <_Z13Run_Operationv+0x554>
   18ada:	80 91 23 14 	lds	r24, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   18ade:	81 30       	cpi	r24, 0x01	; 1
   18ae0:	39 f4       	brne	.+14     	; 0x18af0 <_Z13Run_Operationv+0x550>
   18ae2:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
   18ae6:	81 30       	cpi	r24, 0x01	; 1
   18ae8:	19 f4       	brne	.+6      	; 0x18af0 <_Z13Run_Operationv+0x550>
   18aea:	80 ef       	ldi	r24, 0xF0	; 240
   18aec:	90 e0       	ldi	r25, 0x00	; 0
   18aee:	02 c0       	rjmp	.+4      	; 0x18af4 <_Z13Run_Operationv+0x554>
   18af0:	88 e5       	ldi	r24, 0x58	; 88
   18af2:	92 e0       	ldi	r25, 0x02	; 2
   18af4:	90 93 66 13 	sts	0x1366, r25	; 0x801366 <_sRuble_Parameters+0x1f>
   18af8:	80 93 65 13 	sts	0x1365, r24	; 0x801365 <_sRuble_Parameters+0x1e>
   18afc:	81 e0       	ldi	r24, 0x01	; 1
   18afe:	80 93 6f 13 	sts	0x136F, r24	; 0x80136f <_sRuble_Parameters+0x28>
   18b02:	2c c0       	rjmp	.+88     	; 0x18b5c <_Z13Run_Operationv+0x5bc>
   18b04:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18b08:	81 30       	cpi	r24, 0x01	; 1
   18b0a:	51 f4       	brne	.+20     	; 0x18b20 <_Z13Run_Operationv+0x580>
   18b0c:	65 e8       	ldi	r22, 0x85	; 133
   18b0e:	71 e4       	ldi	r23, 0x41	; 65
   18b10:	82 e5       	ldi	r24, 0x52	; 82
   18b12:	94 e1       	ldi	r25, 0x14	; 20
   18b14:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b18:	82 e5       	ldi	r24, 0x52	; 82
   18b1a:	94 e1       	ldi	r25, 0x14	; 20
   18b1c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18b20:	98 d8       	rcall	.-3792   	; 0x17c52 <_Z15Stop_Irrigationv>
   18b22:	80 91 d2 0d 	lds	r24, 0x0DD2	; 0x800dd2 <_sExtra_Plot+0x51>
   18b26:	88 23       	and	r24, r24
   18b28:	21 f0       	breq	.+8      	; 0x18b32 <_Z13Run_Operationv+0x592>
   18b2a:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   18b2e:	81 11       	cpse	r24, r1
   18b30:	04 c0       	rjmp	.+8      	; 0x18b3a <_Z13Run_Operationv+0x59a>
   18b32:	10 92 5e 13 	sts	0x135E, r1	; 0x80135e <_sRuble_Parameters+0x17>
   18b36:	10 92 5d 13 	sts	0x135D, r1	; 0x80135d <_sRuble_Parameters+0x16>
   18b3a:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   18b3e:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   18b42:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   18b46:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   18b4a:	92 60       	ori	r25, 0x02	; 2
   18b4c:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   18b50:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   18b54:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   18b58:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   18b5c:	80 91 ff 13 	lds	r24, 0x13FF	; 0x8013ff <_sRuble_Parameters+0xb8>
   18b60:	88 23       	and	r24, r24
   18b62:	61 f1       	breq	.+88     	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18b64:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18b68:	81 30       	cpi	r24, 0x01	; 1
   18b6a:	09 f0       	breq	.+2      	; 0x18b6e <_Z13Run_Operationv+0x5ce>
   18b6c:	04 ce       	rjmp	.-1016   	; 0x18776 <_Z13Run_Operationv+0x1d6>
   18b6e:	6b e5       	ldi	r22, 0x5B	; 91
   18b70:	71 e4       	ldi	r23, 0x41	; 65
   18b72:	f9 cd       	rjmp	.-1038   	; 0x18766 <_Z13Run_Operationv+0x1c6>
   18b74:	80 91 6f 13 	lds	r24, 0x136F	; 0x80136f <_sRuble_Parameters+0x28>
   18b78:	83 30       	cpi	r24, 0x03	; 3
   18b7a:	c1 f0       	breq	.+48     	; 0x18bac <_Z13Run_Operationv+0x60c>
   18b7c:	18 f4       	brcc	.+6      	; 0x18b84 <_Z13Run_Operationv+0x5e4>
   18b7e:	81 30       	cpi	r24, 0x01	; 1
   18b80:	e8 f0       	brcs	.+58     	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18b82:	02 c0       	rjmp	.+4      	; 0x18b88 <_Z13Run_Operationv+0x5e8>
   18b84:	84 30       	cpi	r24, 0x04	; 4
   18b86:	d1 f4       	brne	.+52     	; 0x18bbc <_Z13Run_Operationv+0x61c>
   18b88:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   18b8c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18b90:	99 23       	and	r25, r25
   18b92:	31 f0       	breq	.+12     	; 0x18ba0 <_Z13Run_Operationv+0x600>
   18b94:	81 30       	cpi	r24, 0x01	; 1
   18b96:	09 f0       	breq	.+2      	; 0x18b9a <_Z13Run_Operationv+0x5fa>
   18b98:	45 ce       	rjmp	.-886    	; 0x18824 <_Z13Run_Operationv+0x284>
   18b9a:	64 e3       	ldi	r22, 0x34	; 52
   18b9c:	71 e4       	ldi	r23, 0x41	; 65
   18b9e:	3a ce       	rjmp	.-908    	; 0x18814 <_Z13Run_Operationv+0x274>
   18ba0:	81 30       	cpi	r24, 0x01	; 1
   18ba2:	09 f0       	breq	.+2      	; 0x18ba6 <_Z13Run_Operationv+0x606>
   18ba4:	3f ce       	rjmp	.-898    	; 0x18824 <_Z13Run_Operationv+0x284>
   18ba6:	67 e1       	ldi	r22, 0x17	; 23
   18ba8:	71 e4       	ldi	r23, 0x41	; 65
   18baa:	34 ce       	rjmp	.-920    	; 0x18814 <_Z13Run_Operationv+0x274>
   18bac:	0f 90       	pop	r0
   18bae:	0f 90       	pop	r0
   18bb0:	df 91       	pop	r29
   18bb2:	cf 91       	pop	r28
   18bb4:	1f 91       	pop	r17
   18bb6:	0f 91       	pop	r16
   18bb8:	0c 94 f0 52 	jmp	0xa5e0	; 0xa5e0 <_Z20Schedules_Monitoringv>
   18bbc:	0f 90       	pop	r0
   18bbe:	0f 90       	pop	r0
   18bc0:	df 91       	pop	r29
   18bc2:	cf 91       	pop	r28
   18bc4:	1f 91       	pop	r17
   18bc6:	0f 91       	pop	r16
   18bc8:	08 95       	ret

00018bca <_Z26Start_Extra_Plot_Operationh>:
   18bca:	1f 93       	push	r17
   18bcc:	cf 93       	push	r28
   18bce:	df 93       	push	r29
   18bd0:	c8 2f       	mov	r28, r24
   18bd2:	65 ef       	ldi	r22, 0xF5	; 245
   18bd4:	7f e2       	ldi	r23, 0x2F	; 47
   18bd6:	82 e5       	ldi	r24, 0x52	; 82
   18bd8:	94 e1       	ldi	r25, 0x14	; 20
   18bda:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18bde:	4a e0       	ldi	r20, 0x0A	; 10
   18be0:	50 e0       	ldi	r21, 0x00	; 0
   18be2:	6c 2f       	mov	r22, r28
   18be4:	82 e5       	ldi	r24, 0x52	; 82
   18be6:	94 e1       	ldi	r25, 0x14	; 20
   18be8:	0e 94 23 d2 	call	0x1a446	; 0x1a446 <_ZN5Print5printEhi>
   18bec:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18bf0:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18bf4:	84 60       	ori	r24, 0x04	; 4
   18bf6:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18bfa:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18bfe:	1d ef       	ldi	r17, 0xFD	; 253
   18c00:	1c 0f       	add	r17, r28
   18c02:	12 30       	cpi	r17, 0x02	; 2
   18c04:	10 f4       	brcc	.+4      	; 0x18c0a <_Z26Start_Extra_Plot_Operationh+0x40>
   18c06:	10 92 45 13 	sts	0x1345, r1	; 0x801345 <_sPump_Parameter+0x8>
   18c0a:	6c 2f       	mov	r22, r28
   18c0c:	81 e0       	ldi	r24, 0x01	; 1
   18c0e:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18c12:	d8 2f       	mov	r29, r24
   18c14:	88 23       	and	r24, r24
   18c16:	09 f4       	brne	.+2      	; 0x18c1a <_Z26Start_Extra_Plot_Operationh+0x50>
   18c18:	81 c0       	rjmp	.+258    	; 0x18d1c <_Z26Start_Extra_Plot_Operationh+0x152>
   18c1a:	12 30       	cpi	r17, 0x02	; 2
   18c1c:	08 f0       	brcs	.+2      	; 0x18c20 <_Z26Start_Extra_Plot_Operationh+0x56>
   18c1e:	4c c0       	rjmp	.+152    	; 0x18cb8 <_Z26Start_Extra_Plot_Operationh+0xee>
   18c20:	c4 30       	cpi	r28, 0x04	; 4
   18c22:	19 f0       	breq	.+6      	; 0x18c2a <_Z26Start_Extra_Plot_Operationh+0x60>
   18c24:	82 e0       	ldi	r24, 0x02	; 2
   18c26:	0e 94 15 24 	call	0x482a	; 0x482a <_Z22Hard_Coded_Flush_Valveh>
   18c2a:	10 92 62 13 	sts	0x1362, r1	; 0x801362 <_sRuble_Parameters+0x1b>
   18c2e:	10 92 61 13 	sts	0x1361, r1	; 0x801361 <_sRuble_Parameters+0x1a>
   18c32:	10 92 45 13 	sts	0x1345, r1	; 0x801345 <_sPump_Parameter+0x8>
   18c36:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   18c3a:	81 11       	cpse	r24, r1
   18c3c:	13 c0       	rjmp	.+38     	; 0x18c64 <_Z26Start_Extra_Plot_Operationh+0x9a>
   18c3e:	8a e0       	ldi	r24, 0x0A	; 10
   18c40:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   18c44:	89 2b       	or	r24, r25
   18c46:	21 f0       	breq	.+8      	; 0x18c50 <_Z26Start_Extra_Plot_Operationh+0x86>
   18c48:	60 e0       	ldi	r22, 0x00	; 0
   18c4a:	8a e0       	ldi	r24, 0x0A	; 10
   18c4c:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   18c50:	8b e0       	ldi	r24, 0x0B	; 11
   18c52:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   18c56:	89 2b       	or	r24, r25
   18c58:	79 f1       	breq	.+94     	; 0x18cb8 <_Z26Start_Extra_Plot_Operationh+0xee>
   18c5a:	60 e0       	ldi	r22, 0x00	; 0
   18c5c:	8b e0       	ldi	r24, 0x0B	; 11
   18c5e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   18c62:	2a c0       	rjmp	.+84     	; 0x18cb8 <_Z26Start_Extra_Plot_Operationh+0xee>
   18c64:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18c68:	81 30       	cpi	r24, 0x01	; 1
   18c6a:	51 f4       	brne	.+20     	; 0x18c80 <_Z26Start_Extra_Plot_Operationh+0xb6>
   18c6c:	60 ed       	ldi	r22, 0xD0	; 208
   18c6e:	7f e2       	ldi	r23, 0x2F	; 47
   18c70:	82 e5       	ldi	r24, 0x52	; 82
   18c72:	94 e1       	ldi	r25, 0x14	; 20
   18c74:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c78:	82 e5       	ldi	r24, 0x52	; 82
   18c7a:	94 e1       	ldi	r25, 0x14	; 20
   18c7c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18c80:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   18c84:	62 50       	subi	r22, 0x02	; 2
   18c86:	82 e0       	ldi	r24, 0x02	; 2
   18c88:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
   18c8c:	88 23       	and	r24, r24
   18c8e:	51 f0       	breq	.+20     	; 0x18ca4 <_Z26Start_Extra_Plot_Operationh+0xda>
   18c90:	81 e0       	ldi	r24, 0x01	; 1
   18c92:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xc0>
   18c96:	67 e0       	ldi	r22, 0x07	; 7
   18c98:	74 e1       	ldi	r23, 0x14	; 20
   18c9a:	8d ea       	ldi	r24, 0xAD	; 173
   18c9c:	9c e0       	ldi	r25, 0x0C	; 12
   18c9e:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18ca2:	0a c0       	rjmp	.+20     	; 0x18cb8 <_Z26Start_Extra_Plot_Operationh+0xee>
   18ca4:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   18ca8:	67 e0       	ldi	r22, 0x07	; 7
   18caa:	74 e1       	ldi	r23, 0x14	; 20
   18cac:	8d ea       	ldi	r24, 0xAD	; 173
   18cae:	9c e0       	ldi	r25, 0x0C	; 12
   18cb0:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18cb4:	d0 e0       	ldi	r29, 0x00	; 0
   18cb6:	40 c0       	rjmp	.+128    	; 0x18d38 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18cb8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18cbc:	81 30       	cpi	r24, 0x01	; 1
   18cbe:	51 f4       	brne	.+20     	; 0x18cd4 <_Z26Start_Extra_Plot_Operationh+0x10a>
   18cc0:	62 ec       	ldi	r22, 0xC2	; 194
   18cc2:	7f e2       	ldi	r23, 0x2F	; 47
   18cc4:	82 e5       	ldi	r24, 0x52	; 82
   18cc6:	94 e1       	ldi	r25, 0x14	; 20
   18cc8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18ccc:	82 e5       	ldi	r24, 0x52	; 82
   18cce:	94 e1       	ldi	r25, 0x14	; 20
   18cd0:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18cd4:	8b e1       	ldi	r24, 0x1B	; 27
   18cd6:	c8 9f       	mul	r28, r24
   18cd8:	f0 01       	movw	r30, r0
   18cda:	11 24       	eor	r1, r1
   18cdc:	ef 57       	subi	r30, 0x7F	; 127
   18cde:	f2 4f       	sbci	r31, 0xF2	; 242
   18ce0:	81 e0       	ldi	r24, 0x01	; 1
   18ce2:	80 83       	st	Z, r24
   18ce4:	23 85       	ldd	r18, Z+11	; 0x0b
   18ce6:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18cea:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18cee:	21 30       	cpi	r18, 0x01	; 1
   18cf0:	51 f4       	brne	.+20     	; 0x18d06 <_Z26Start_Extra_Plot_Operationh+0x13c>
   18cf2:	90 61       	ori	r25, 0x10	; 16
   18cf4:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18cf8:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18cfc:	12 86       	std	Z+10, r1	; 0x0a
   18cfe:	c0 93 fe 13 	sts	0x13FE, r28	; 0x8013fe <_sRuble_Parameters+0xb7>
   18d02:	22 8f       	std	Z+26, r18	; 0x1a
   18d04:	19 c0       	rjmp	.+50     	; 0x18d38 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18d06:	90 62       	ori	r25, 0x20	; 32
   18d08:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18d0c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18d10:	13 86       	std	Z+11, r1	; 0x0b
   18d12:	c0 93 fd 13 	sts	0x13FD, r28	; 0x8013fd <_sRuble_Parameters+0xb6>
   18d16:	82 e0       	ldi	r24, 0x02	; 2
   18d18:	82 8f       	std	Z+26, r24	; 0x1a
   18d1a:	0e c0       	rjmp	.+28     	; 0x18d38 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18d1c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18d20:	81 30       	cpi	r24, 0x01	; 1
   18d22:	51 f4       	brne	.+20     	; 0x18d38 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18d24:	6b ea       	ldi	r22, 0xAB	; 171
   18d26:	7f e2       	ldi	r23, 0x2F	; 47
   18d28:	82 e5       	ldi	r24, 0x52	; 82
   18d2a:	94 e1       	ldi	r25, 0x14	; 20
   18d2c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d30:	82 e5       	ldi	r24, 0x52	; 82
   18d32:	94 e1       	ldi	r25, 0x14	; 20
   18d34:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18d38:	8d 2f       	mov	r24, r29
   18d3a:	df 91       	pop	r29
   18d3c:	cf 91       	pop	r28
   18d3e:	1f 91       	pop	r17
   18d40:	08 95       	ret

00018d42 <_Z25Stop_Extra_Plot_Operationh>:
   18d42:	0f 93       	push	r16
   18d44:	1f 93       	push	r17
   18d46:	cf 93       	push	r28
   18d48:	df 93       	push	r29
   18d4a:	c8 2f       	mov	r28, r24
   18d4c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18d50:	81 30       	cpi	r24, 0x01	; 1
   18d52:	51 f4       	brne	.+20     	; 0x18d68 <_Z25Stop_Extra_Plot_Operationh+0x26>
   18d54:	69 e9       	ldi	r22, 0x99	; 153
   18d56:	7f e2       	ldi	r23, 0x2F	; 47
   18d58:	82 e5       	ldi	r24, 0x52	; 82
   18d5a:	94 e1       	ldi	r25, 0x14	; 20
   18d5c:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18d60:	82 e5       	ldi	r24, 0x52	; 82
   18d62:	94 e1       	ldi	r25, 0x14	; 20
   18d64:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18d68:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18d6c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18d70:	84 60       	ori	r24, 0x04	; 4
   18d72:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18d76:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18d7a:	0c 2f       	mov	r16, r28
   18d7c:	10 e0       	ldi	r17, 0x00	; 0
   18d7e:	8b e1       	ldi	r24, 0x1B	; 27
   18d80:	c8 9f       	mul	r28, r24
   18d82:	f0 01       	movw	r30, r0
   18d84:	11 24       	eor	r1, r1
   18d86:	ef 57       	subi	r30, 0x7F	; 127
   18d88:	f2 4f       	sbci	r31, 0xF2	; 242
   18d8a:	10 82       	st	Z, r1
   18d8c:	8d ef       	ldi	r24, 0xFD	; 253
   18d8e:	8c 0f       	add	r24, r28
   18d90:	82 30       	cpi	r24, 0x02	; 2
   18d92:	20 f4       	brcc	.+8      	; 0x18d9c <_Z25Stop_Extra_Plot_Operationh+0x5a>
   18d94:	90 91 6e 13 	lds	r25, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   18d98:	93 30       	cpi	r25, 0x03	; 3
   18d9a:	a9 f4       	brne	.+42     	; 0x18dc6 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18d9c:	90 91 45 13 	lds	r25, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
   18da0:	99 23       	and	r25, r25
   18da2:	11 f0       	breq	.+4      	; 0x18da8 <_Z25Stop_Extra_Plot_Operationh+0x66>
   18da4:	82 30       	cpi	r24, 0x02	; 2
   18da6:	78 f0       	brcs	.+30     	; 0x18dc6 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18da8:	90 91 6e 13 	lds	r25, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   18dac:	93 30       	cpi	r25, 0x03	; 3
   18dae:	31 f4       	brne	.+12     	; 0x18dbc <_Z25Stop_Extra_Plot_Operationh+0x7a>
   18db0:	90 91 a2 13 	lds	r25, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   18db4:	91 11       	cpse	r25, r1
   18db6:	02 c0       	rjmp	.+4      	; 0x18dbc <_Z25Stop_Extra_Plot_Operationh+0x7a>
   18db8:	82 30       	cpi	r24, 0x02	; 2
   18dba:	28 f0       	brcs	.+10     	; 0x18dc6 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18dbc:	80 91 fb 13 	lds	r24, 0x13FB	; 0x8013fb <_sRuble_Parameters+0xb4>
   18dc0:	81 30       	cpi	r24, 0x01	; 1
   18dc2:	09 f0       	breq	.+2      	; 0x18dc6 <_Z25Stop_Extra_Plot_Operationh+0x84>
   18dc4:	aa c0       	rjmp	.+340    	; 0x18f1a <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18dc6:	83 e0       	ldi	r24, 0x03	; 3
   18dc8:	0e 94 15 24 	call	0x482a	; 0x482a <_Z22Hard_Coded_Flush_Valveh>
   18dcc:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   18dd0:	81 11       	cpse	r24, r1
   18dd2:	a3 c0       	rjmp	.+326    	; 0x18f1a <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18dd4:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   18dd8:	81 11       	cpse	r24, r1
   18dda:	14 c0       	rjmp	.+40     	; 0x18e04 <_Z25Stop_Extra_Plot_Operationh+0xc2>
   18ddc:	8a e0       	ldi	r24, 0x0A	; 10
   18dde:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   18de2:	01 97       	sbiw	r24, 0x01	; 1
   18de4:	21 f0       	breq	.+8      	; 0x18dee <_Z25Stop_Extra_Plot_Operationh+0xac>
   18de6:	61 e0       	ldi	r22, 0x01	; 1
   18de8:	8a e0       	ldi	r24, 0x0A	; 10
   18dea:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   18dee:	8b e0       	ldi	r24, 0x0B	; 11
   18df0:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   18df4:	01 97       	sbiw	r24, 0x01	; 1
   18df6:	09 f4       	brne	.+2      	; 0x18dfa <_Z25Stop_Extra_Plot_Operationh+0xb8>
   18df8:	90 c0       	rjmp	.+288    	; 0x18f1a <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18dfa:	61 e0       	ldi	r22, 0x01	; 1
   18dfc:	8b e0       	ldi	r24, 0x0B	; 11
   18dfe:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   18e02:	8b c0       	rjmp	.+278    	; 0x18f1a <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18e04:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18e08:	81 30       	cpi	r24, 0x01	; 1
   18e0a:	51 f4       	brne	.+20     	; 0x18e20 <_Z25Stop_Extra_Plot_Operationh+0xde>
   18e0c:	63 e7       	ldi	r22, 0x73	; 115
   18e0e:	7f e2       	ldi	r23, 0x2F	; 47
   18e10:	82 e5       	ldi	r24, 0x52	; 82
   18e12:	94 e1       	ldi	r25, 0x14	; 20
   18e14:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e18:	82 e5       	ldi	r24, 0x52	; 82
   18e1a:	94 e1       	ldi	r25, 0x14	; 20
   18e1c:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18e20:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   18e24:	62 50       	subi	r22, 0x02	; 2
   18e26:	84 e0       	ldi	r24, 0x04	; 4
   18e28:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
   18e2c:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18e30:	88 23       	and	r24, r24
   18e32:	b9 f0       	breq	.+46     	; 0x18e62 <_Z25Stop_Extra_Plot_Operationh+0x120>
   18e34:	91 30       	cpi	r25, 0x01	; 1
   18e36:	51 f4       	brne	.+20     	; 0x18e4c <_Z25Stop_Extra_Plot_Operationh+0x10a>
   18e38:	63 e5       	ldi	r22, 0x53	; 83
   18e3a:	7f e2       	ldi	r23, 0x2F	; 47
   18e3c:	82 e5       	ldi	r24, 0x52	; 82
   18e3e:	94 e1       	ldi	r25, 0x14	; 20
   18e40:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e44:	82 e5       	ldi	r24, 0x52	; 82
   18e46:	94 e1       	ldi	r25, 0x14	; 20
   18e48:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18e4c:	10 92 17 14 	sts	0x1417, r1	; 0x801417 <_sRuble_Parameters+0xd0>
   18e50:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   18e54:	67 e0       	ldi	r22, 0x07	; 7
   18e56:	74 e1       	ldi	r23, 0x14	; 20
   18e58:	8d ea       	ldi	r24, 0xAD	; 173
   18e5a:	9c e0       	ldi	r25, 0x0C	; 12
   18e5c:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18e60:	5c c0       	rjmp	.+184    	; 0x18f1a <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18e62:	91 30       	cpi	r25, 0x01	; 1
   18e64:	51 f4       	brne	.+20     	; 0x18e7a <_Z25Stop_Extra_Plot_Operationh+0x138>
   18e66:	6b e2       	ldi	r22, 0x2B	; 43
   18e68:	7f e2       	ldi	r23, 0x2F	; 47
   18e6a:	82 e5       	ldi	r24, 0x52	; 82
   18e6c:	94 e1       	ldi	r25, 0x14	; 20
   18e6e:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e72:	82 e5       	ldi	r24, 0x52	; 82
   18e74:	94 e1       	ldi	r25, 0x14	; 20
   18e76:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18e7a:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   18e7e:	81 11       	cpse	r24, r1
   18e80:	0c c0       	rjmp	.+24     	; 0x18e9a <_Z25Stop_Extra_Plot_Operationh+0x158>
   18e82:	80 91 06 0e 	lds	r24, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
   18e86:	81 30       	cpi	r24, 0x01	; 1
   18e88:	41 f0       	breq	.+16     	; 0x18e9a <_Z25Stop_Extra_Plot_Operationh+0x158>
   18e8a:	80 91 eb 0d 	lds	r24, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   18e8e:	81 30       	cpi	r24, 0x01	; 1
   18e90:	21 f0       	breq	.+8      	; 0x18e9a <_Z25Stop_Extra_Plot_Operationh+0x158>
   18e92:	81 e0       	ldi	r24, 0x01	; 1
   18e94:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xc0>
   18e98:	02 c0       	rjmp	.+4      	; 0x18e9e <_Z25Stop_Extra_Plot_Operationh+0x15c>
   18e9a:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   18e9e:	67 e0       	ldi	r22, 0x07	; 7
   18ea0:	74 e1       	ldi	r23, 0x14	; 20
   18ea2:	8d ea       	ldi	r24, 0xAD	; 173
   18ea4:	9c e0       	ldi	r25, 0x0C	; 12
   18ea6:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18eaa:	67 e0       	ldi	r22, 0x07	; 7
   18eac:	74 e1       	ldi	r23, 0x14	; 20
   18eae:	8d ea       	ldi	r24, 0xAD	; 173
   18eb0:	9c e0       	ldi	r25, 0x0C	; 12
   18eb2:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18eb6:	81 e0       	ldi	r24, 0x01	; 1
   18eb8:	80 93 17 14 	sts	0x1417, r24	; 0x801417 <_sRuble_Parameters+0xd0>
   18ebc:	8b e1       	ldi	r24, 0x1B	; 27
   18ebe:	80 9f       	mul	r24, r16
   18ec0:	f0 01       	movw	r30, r0
   18ec2:	81 9f       	mul	r24, r17
   18ec4:	f0 0d       	add	r31, r0
   18ec6:	11 24       	eor	r1, r1
   18ec8:	ef 57       	subi	r30, 0x7F	; 127
   18eca:	f2 4f       	sbci	r31, 0xF2	; 242
   18ecc:	23 85       	ldd	r18, Z+11	; 0x0b
   18ece:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18ed2:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18ed6:	21 30       	cpi	r18, 0x01	; 1
   18ed8:	51 f4       	brne	.+20     	; 0x18eee <_Z25Stop_Extra_Plot_Operationh+0x1ac>
   18eda:	90 61       	ori	r25, 0x10	; 16
   18edc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18ee0:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18ee4:	13 86       	std	Z+11, r1	; 0x0b
   18ee6:	c0 93 fe 13 	sts	0x13FE, r28	; 0x8013fe <_sRuble_Parameters+0xb7>
   18eea:	22 8f       	std	Z+26, r18	; 0x1a
   18eec:	0b c0       	rjmp	.+22     	; 0x18f04 <_Z25Stop_Extra_Plot_Operationh+0x1c2>
   18eee:	90 62       	ori	r25, 0x20	; 32
   18ef0:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18ef4:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18ef8:	12 86       	std	Z+10, r1	; 0x0a
   18efa:	c0 93 fd 13 	sts	0x13FD, r28	; 0x8013fd <_sRuble_Parameters+0xb6>
   18efe:	13 86       	std	Z+11, r1	; 0x0b
   18f00:	82 e0       	ldi	r24, 0x02	; 2
   18f02:	82 8f       	std	Z+26, r24	; 0x1a
   18f04:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18f08:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18f0c:	84 60       	ori	r24, 0x04	; 4
   18f0e:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18f12:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18f16:	d1 e0       	ldi	r29, 0x01	; 1
   18f18:	51 c0       	rjmp	.+162    	; 0x18fbc <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18f1a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18f1e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18f22:	84 60       	ori	r24, 0x04	; 4
   18f24:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18f28:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18f2c:	6c 2f       	mov	r22, r28
   18f2e:	80 e0       	ldi	r24, 0x00	; 0
   18f30:	0e 94 72 b7 	call	0x16ee4	; 0x16ee4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18f34:	d8 2f       	mov	r29, r24
   18f36:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   18f3a:	dd 23       	and	r29, r29
   18f3c:	99 f1       	breq	.+102    	; 0x18fa4 <_Z25Stop_Extra_Plot_Operationh+0x262>
   18f3e:	81 30       	cpi	r24, 0x01	; 1
   18f40:	51 f4       	brne	.+20     	; 0x18f56 <_Z25Stop_Extra_Plot_Operationh+0x214>
   18f42:	6a e1       	ldi	r22, 0x1A	; 26
   18f44:	7f e2       	ldi	r23, 0x2F	; 47
   18f46:	82 e5       	ldi	r24, 0x52	; 82
   18f48:	94 e1       	ldi	r25, 0x14	; 20
   18f4a:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18f4e:	82 e5       	ldi	r24, 0x52	; 82
   18f50:	94 e1       	ldi	r25, 0x14	; 20
   18f52:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18f56:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   18f5a:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   18f5e:	2b e1       	ldi	r18, 0x1B	; 27
   18f60:	20 9f       	mul	r18, r16
   18f62:	f0 01       	movw	r30, r0
   18f64:	21 9f       	mul	r18, r17
   18f66:	f0 0d       	add	r31, r0
   18f68:	11 24       	eor	r1, r1
   18f6a:	ef 57       	subi	r30, 0x7F	; 127
   18f6c:	f2 4f       	sbci	r31, 0xF2	; 242
   18f6e:	23 85       	ldd	r18, Z+11	; 0x0b
   18f70:	21 30       	cpi	r18, 0x01	; 1
   18f72:	59 f4       	brne	.+22     	; 0x18f8a <_Z25Stop_Extra_Plot_Operationh+0x248>
   18f74:	84 60       	ori	r24, 0x04	; 4
   18f76:	90 61       	ori	r25, 0x10	; 16
   18f78:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18f7c:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18f80:	13 86       	std	Z+11, r1	; 0x0b
   18f82:	c0 93 fe 13 	sts	0x13FE, r28	; 0x8013fe <_sRuble_Parameters+0xb7>
   18f86:	22 8f       	std	Z+26, r18	; 0x1a
   18f88:	19 c0       	rjmp	.+50     	; 0x18fbc <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18f8a:	84 60       	ori	r24, 0x04	; 4
   18f8c:	90 62       	ori	r25, 0x20	; 32
   18f8e:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   18f92:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   18f96:	12 86       	std	Z+10, r1	; 0x0a
   18f98:	c0 93 fd 13 	sts	0x13FD, r28	; 0x8013fd <_sRuble_Parameters+0xb6>
   18f9c:	13 86       	std	Z+11, r1	; 0x0b
   18f9e:	82 e0       	ldi	r24, 0x02	; 2
   18fa0:	82 8f       	std	Z+26, r24	; 0x1a
   18fa2:	0c c0       	rjmp	.+24     	; 0x18fbc <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18fa4:	81 30       	cpi	r24, 0x01	; 1
   18fa6:	51 f4       	brne	.+20     	; 0x18fbc <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18fa8:	61 e0       	ldi	r22, 0x01	; 1
   18faa:	7f e2       	ldi	r23, 0x2F	; 47
   18fac:	82 e5       	ldi	r24, 0x52	; 82
   18fae:	94 e1       	ldi	r25, 0x14	; 20
   18fb0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18fb4:	82 e5       	ldi	r24, 0x52	; 82
   18fb6:	94 e1       	ldi	r25, 0x14	; 20
   18fb8:	0e 94 1c d0 	call	0x1a038	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   18fbc:	8d 2f       	mov	r24, r29
   18fbe:	df 91       	pop	r29
   18fc0:	cf 91       	pop	r28
   18fc2:	1f 91       	pop	r17
   18fc4:	0f 91       	pop	r16
   18fc6:	08 95       	ret

00018fc8 <_Z24Run_Extra_Plot_Operationv>:
   18fc8:	cf 92       	push	r12
   18fca:	df 92       	push	r13
   18fcc:	ef 92       	push	r14
   18fce:	ff 92       	push	r15
   18fd0:	1f 93       	push	r17
   18fd2:	cf 93       	push	r28
   18fd4:	df 93       	push	r29
   18fd6:	81 e8       	ldi	r24, 0x81	; 129
   18fd8:	e8 2e       	mov	r14, r24
   18fda:	8d e0       	ldi	r24, 0x0D	; 13
   18fdc:	f8 2e       	mov	r15, r24
   18fde:	9b e6       	ldi	r25, 0x6B	; 107
   18fe0:	c9 2e       	mov	r12, r25
   18fe2:	9d e0       	ldi	r25, 0x0D	; 13
   18fe4:	d9 2e       	mov	r13, r25
   18fe6:	c0 e0       	ldi	r28, 0x00	; 0
   18fe8:	d0 e0       	ldi	r29, 0x00	; 0
   18fea:	1c 2f       	mov	r17, r28
   18fec:	f7 01       	movw	r30, r14
   18fee:	81 81       	ldd	r24, Z+1	; 0x01
   18ff0:	81 50       	subi	r24, 0x01	; 1
   18ff2:	82 37       	cpi	r24, 0x72	; 114
   18ff4:	08 f0       	brcs	.+2      	; 0x18ff8 <_Z24Run_Extra_Plot_Operationv+0x30>
   18ff6:	8e c0       	rjmp	.+284    	; 0x19114 <_Z24Run_Extra_Plot_Operationv+0x14c>
   18ff8:	82 81       	ldd	r24, Z+2	; 0x02
   18ffa:	82 30       	cpi	r24, 0x02	; 2
   18ffc:	19 f0       	breq	.+6      	; 0x19004 <_Z24Run_Extra_Plot_Operationv+0x3c>
   18ffe:	83 30       	cpi	r24, 0x03	; 3
   19000:	21 f1       	breq	.+72     	; 0x1904a <_Z24Run_Extra_Plot_Operationv+0x82>
   19002:	88 c0       	rjmp	.+272    	; 0x19114 <_Z24Run_Extra_Plot_Operationv+0x14c>
   19004:	8b e1       	ldi	r24, 0x1B	; 27
   19006:	8c 9f       	mul	r24, r28
   19008:	f0 01       	movw	r30, r0
   1900a:	8d 9f       	mul	r24, r29
   1900c:	f0 0d       	add	r31, r0
   1900e:	11 24       	eor	r1, r1
   19010:	ef 57       	subi	r30, 0x7F	; 127
   19012:	f2 4f       	sbci	r31, 0xF2	; 242
   19014:	83 81       	ldd	r24, Z+3	; 0x03
   19016:	94 81       	ldd	r25, Z+4	; 0x04
   19018:	89 2b       	or	r24, r25
   1901a:	41 f4       	brne	.+16     	; 0x1902c <_Z24Run_Extra_Plot_Operationv+0x64>
   1901c:	82 85       	ldd	r24, Z+10	; 0x0a
   1901e:	81 11       	cpse	r24, r1
   19020:	05 c0       	rjmp	.+10     	; 0x1902c <_Z24Run_Extra_Plot_Operationv+0x64>
   19022:	81 e0       	ldi	r24, 0x01	; 1
   19024:	82 83       	std	Z+2, r24	; 0x02
   19026:	14 82       	std	Z+4, r1	; 0x04
   19028:	13 82       	std	Z+3, r1	; 0x03
   1902a:	44 c0       	rjmp	.+136    	; 0x190b4 <_Z24Run_Extra_Plot_Operationv+0xec>
   1902c:	81 2f       	mov	r24, r17
   1902e:	cd dd       	rcall	.-1126   	; 0x18bca <_Z26Start_Extra_Plot_Operationh>
   19030:	88 23       	and	r24, r24
   19032:	d1 f0       	breq	.+52     	; 0x19068 <_Z24Run_Extra_Plot_Operationv+0xa0>
   19034:	8b e1       	ldi	r24, 0x1B	; 27
   19036:	8c 9f       	mul	r24, r28
   19038:	f0 01       	movw	r30, r0
   1903a:	8d 9f       	mul	r24, r29
   1903c:	f0 0d       	add	r31, r0
   1903e:	11 24       	eor	r1, r1
   19040:	ef 57       	subi	r30, 0x7F	; 127
   19042:	f2 4f       	sbci	r31, 0xF2	; 242
   19044:	83 e0       	ldi	r24, 0x03	; 3
   19046:	82 83       	std	Z+2, r24	; 0x02
   19048:	70 c0       	rjmp	.+224    	; 0x1912a <_Z24Run_Extra_Plot_Operationv+0x162>
   1904a:	f7 01       	movw	r30, r14
   1904c:	83 81       	ldd	r24, Z+3	; 0x03
   1904e:	94 81       	ldd	r25, Z+4	; 0x04
   19050:	00 97       	sbiw	r24, 0x00	; 0
   19052:	19 f1       	breq	.+70     	; 0x1909a <_Z24Run_Extra_Plot_Operationv+0xd2>
   19054:	20 91 6e 13 	lds	r18, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   19058:	22 30       	cpi	r18, 0x02	; 2
   1905a:	71 f5       	brne	.+92     	; 0x190b8 <_Z24Run_Extra_Plot_Operationv+0xf0>
   1905c:	18 30       	cpi	r17, 0x08	; 8
   1905e:	09 f4       	brne	.+2      	; 0x19062 <_Z24Run_Extra_Plot_Operationv+0x9a>
   19060:	64 c0       	rjmp	.+200    	; 0x1912a <_Z24Run_Extra_Plot_Operationv+0x162>
   19062:	14 30       	cpi	r17, 0x04	; 4
   19064:	09 f4       	brne	.+2      	; 0x19068 <_Z24Run_Extra_Plot_Operationv+0xa0>
   19066:	61 c0       	rjmp	.+194    	; 0x1912a <_Z24Run_Extra_Plot_Operationv+0x162>
   19068:	8b e1       	ldi	r24, 0x1B	; 27
   1906a:	8c 9f       	mul	r24, r28
   1906c:	f0 01       	movw	r30, r0
   1906e:	8d 9f       	mul	r24, r29
   19070:	f0 0d       	add	r31, r0
   19072:	11 24       	eor	r1, r1
   19074:	ef 57       	subi	r30, 0x7F	; 127
   19076:	f2 4f       	sbci	r31, 0xF2	; 242
   19078:	81 e0       	ldi	r24, 0x01	; 1
   1907a:	82 83       	std	Z+2, r24	; 0x02
   1907c:	14 82       	std	Z+4, r1	; 0x04
   1907e:	13 82       	std	Z+3, r1	; 0x03
   19080:	81 2f       	mov	r24, r17
   19082:	5f de       	rcall	.-834    	; 0x18d42 <_Z25Stop_Extra_Plot_Operationh>
   19084:	81 e0       	ldi	r24, 0x01	; 1
   19086:	81 0f       	add	r24, r17
   19088:	df 91       	pop	r29
   1908a:	cf 91       	pop	r28
   1908c:	1f 91       	pop	r17
   1908e:	ff 90       	pop	r15
   19090:	ef 90       	pop	r14
   19092:	df 90       	pop	r13
   19094:	cf 90       	pop	r12
   19096:	0c 94 8b 79 	jmp	0xf316	; 0xf316 <_Z21Exra_Plot_Data_EEPROMh>
   1909a:	22 85       	ldd	r18, Z+10	; 0x0a
   1909c:	21 11       	cpse	r18, r1
   1909e:	da cf       	rjmp	.-76     	; 0x19054 <_Z24Run_Extra_Plot_Operationv+0x8c>
   190a0:	8b e1       	ldi	r24, 0x1B	; 27
   190a2:	8c 9f       	mul	r24, r28
   190a4:	f0 01       	movw	r30, r0
   190a6:	8d 9f       	mul	r24, r29
   190a8:	f0 0d       	add	r31, r0
   190aa:	11 24       	eor	r1, r1
   190ac:	ef 57       	subi	r30, 0x7F	; 127
   190ae:	f2 4f       	sbci	r31, 0xF2	; 242
   190b0:	81 e0       	ldi	r24, 0x01	; 1
   190b2:	82 83       	std	Z+2, r24	; 0x02
   190b4:	8c 2f       	mov	r24, r28
   190b6:	e5 cf       	rjmp	.-54     	; 0x19082 <_Z24Run_Extra_Plot_Operationv+0xba>
   190b8:	89 2b       	or	r24, r25
   190ba:	69 f0       	breq	.+26     	; 0x190d6 <_Z24Run_Extra_Plot_Operationv+0x10e>
   190bc:	f6 01       	movw	r30, r12
   190be:	80 81       	ld	r24, Z
   190c0:	8f 5f       	subi	r24, 0xFF	; 255
   190c2:	83 33       	cpi	r24, 0x33	; 51
   190c4:	10 f4       	brcc	.+4      	; 0x190ca <_Z24Run_Extra_Plot_Operationv+0x102>
   190c6:	80 83       	st	Z, r24
   190c8:	06 c0       	rjmp	.+12     	; 0x190d6 <_Z24Run_Extra_Plot_Operationv+0x10e>
   190ca:	f6 01       	movw	r30, r12
   190cc:	10 82       	st	Z, r1
   190ce:	81 e0       	ldi	r24, 0x01	; 1
   190d0:	81 0f       	add	r24, r17
   190d2:	0e 94 8b 79 	call	0xf316	; 0xf316 <_Z21Exra_Plot_Data_EEPROMh>
   190d6:	13 30       	cpi	r17, 0x03	; 3
   190d8:	e9 f4       	brne	.+58     	; 0x19114 <_Z24Run_Extra_Plot_Operationv+0x14c>
   190da:	80 91 45 13 	lds	r24, 0x1345	; 0x801345 <_sPump_Parameter+0x8>
   190de:	98 2f       	mov	r25, r24
   190e0:	97 7f       	andi	r25, 0xF7	; 247
   190e2:	91 30       	cpi	r25, 0x01	; 1
   190e4:	29 f0       	breq	.+10     	; 0x190f0 <_Z24Run_Extra_Plot_Operationv+0x128>
   190e6:	84 30       	cpi	r24, 0x04	; 4
   190e8:	19 f0       	breq	.+6      	; 0x190f0 <_Z24Run_Extra_Plot_Operationv+0x128>
   190ea:	8c 50       	subi	r24, 0x0C	; 12
   190ec:	82 30       	cpi	r24, 0x02	; 2
   190ee:	90 f4       	brcc	.+36     	; 0x19114 <_Z24Run_Extra_Plot_Operationv+0x14c>
   190f0:	6d e0       	ldi	r22, 0x0D	; 13
   190f2:	70 e3       	ldi	r23, 0x30	; 48
   190f4:	82 e5       	ldi	r24, 0x52	; 82
   190f6:	94 e1       	ldi	r25, 0x14	; 20
   190f8:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   190fc:	82 e5       	ldi	r24, 0x52	; 82
   190fe:	94 e1       	ldi	r25, 0x14	; 20
   19100:	9b d7       	rcall	.+3894   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19102:	83 e0       	ldi	r24, 0x03	; 3
   19104:	df 91       	pop	r29
   19106:	cf 91       	pop	r28
   19108:	1f 91       	pop	r17
   1910a:	ff 90       	pop	r15
   1910c:	ef 90       	pop	r14
   1910e:	df 90       	pop	r13
   19110:	cf 90       	pop	r12
   19112:	17 ce       	rjmp	.-978    	; 0x18d42 <_Z25Stop_Extra_Plot_Operationh>
   19114:	21 96       	adiw	r28, 0x01	; 1
   19116:	fb e1       	ldi	r31, 0x1B	; 27
   19118:	ef 0e       	add	r14, r31
   1911a:	f1 1c       	adc	r15, r1
   1911c:	8f ef       	ldi	r24, 0xFF	; 255
   1911e:	c8 1a       	sub	r12, r24
   19120:	d8 0a       	sbc	r13, r24
   19122:	ce 30       	cpi	r28, 0x0E	; 14
   19124:	d1 05       	cpc	r29, r1
   19126:	09 f0       	breq	.+2      	; 0x1912a <_Z24Run_Extra_Plot_Operationv+0x162>
   19128:	60 cf       	rjmp	.-320    	; 0x18fea <_Z24Run_Extra_Plot_Operationv+0x22>
   1912a:	df 91       	pop	r29
   1912c:	cf 91       	pop	r28
   1912e:	1f 91       	pop	r17
   19130:	ff 90       	pop	r15
   19132:	ef 90       	pop	r14
   19134:	df 90       	pop	r13
   19136:	cf 90       	pop	r12
   19138:	08 95       	ret

0001913a <_Z20Handle_Wireless_Pumpv>:
   1913a:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   1913e:	88 23       	and	r24, r24
   19140:	09 f4       	brne	.+2      	; 0x19144 <_Z20Handle_Wireless_Pumpv+0xa>
   19142:	7d c0       	rjmp	.+250    	; 0x1923e <_Z20Handle_Wireless_Pumpv+0x104>
   19144:	20 91 a2 13 	lds	r18, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   19148:	80 91 08 14 	lds	r24, 0x1408	; 0x801408 <_sRuble_Parameters+0xc1>
   1914c:	90 91 09 14 	lds	r25, 0x1409	; 0x801409 <_sRuble_Parameters+0xc2>
   19150:	21 11       	cpse	r18, r1
   19152:	09 c0       	rjmp	.+18     	; 0x19166 <_Z20Handle_Wireless_Pumpv+0x2c>
   19154:	20 91 eb 0d 	lds	r18, 0x0DEB	; 0x800deb <_sExtra_Plot+0x6a>
   19158:	21 11       	cpse	r18, r1
   1915a:	05 c0       	rjmp	.+10     	; 0x19166 <_Z20Handle_Wireless_Pumpv+0x2c>
   1915c:	20 91 06 0e 	lds	r18, 0x0E06	; 0x800e06 <_sExtra_Plot+0x85>
   19160:	22 23       	and	r18, r18
   19162:	09 f4       	brne	.+2      	; 0x19166 <_Z20Handle_Wireless_Pumpv+0x2c>
   19164:	40 c0       	rjmp	.+128    	; 0x191e6 <_Z20Handle_Wireless_Pumpv+0xac>
   19166:	89 2b       	or	r24, r25
   19168:	09 f0       	breq	.+2      	; 0x1916c <_Z20Handle_Wireless_Pumpv+0x32>
   1916a:	69 c0       	rjmp	.+210    	; 0x1923e <_Z20Handle_Wireless_Pumpv+0x104>
   1916c:	86 e9       	ldi	r24, 0x96	; 150
   1916e:	90 e0       	ldi	r25, 0x00	; 0
   19170:	90 93 09 14 	sts	0x1409, r25	; 0x801409 <_sRuble_Parameters+0xc2>
   19174:	80 93 08 14 	sts	0x1408, r24	; 0x801408 <_sRuble_Parameters+0xc1>
   19178:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   1917c:	81 30       	cpi	r24, 0x01	; 1
   1917e:	49 f4       	brne	.+18     	; 0x19192 <_Z20Handle_Wireless_Pumpv+0x58>
   19180:	65 e5       	ldi	r22, 0x55	; 85
   19182:	7d e2       	ldi	r23, 0x2D	; 45
   19184:	82 e5       	ldi	r24, 0x52	; 82
   19186:	94 e1       	ldi	r25, 0x14	; 20
   19188:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1918c:	82 e5       	ldi	r24, 0x52	; 82
   1918e:	94 e1       	ldi	r25, 0x14	; 20
   19190:	53 d7       	rcall	.+3750   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19192:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   19196:	62 50       	subi	r22, 0x02	; 2
   19198:	82 e0       	ldi	r24, 0x02	; 2
   1919a:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
   1919e:	88 23       	and	r24, r24
   191a0:	21 f0       	breq	.+8      	; 0x191aa <_Z20Handle_Wireless_Pumpv+0x70>
   191a2:	81 e0       	ldi	r24, 0x01	; 1
   191a4:	80 93 07 14 	sts	0x1407, r24	; 0x801407 <_sRuble_Parameters+0xc0>
   191a8:	0e c0       	rjmp	.+28     	; 0x191c6 <_Z20Handle_Wireless_Pumpv+0x8c>
   191aa:	86 e0       	ldi	r24, 0x06	; 6
   191ac:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   191b0:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   191b4:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   191b8:	90 68       	ori	r25, 0x80	; 128
   191ba:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   191be:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   191c2:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   191c6:	67 e0       	ldi	r22, 0x07	; 7
   191c8:	74 e1       	ldi	r23, 0x14	; 20
   191ca:	8d ea       	ldi	r24, 0xAD	; 173
   191cc:	9c e0       	ldi	r25, 0x0C	; 12
   191ce:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   191d2:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   191d6:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   191da:	84 60       	ori	r24, 0x04	; 4
   191dc:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   191e0:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   191e4:	08 95       	ret
   191e6:	89 2b       	or	r24, r25
   191e8:	51 f5       	brne	.+84     	; 0x1923e <_Z20Handle_Wireless_Pumpv+0x104>
   191ea:	88 e5       	ldi	r24, 0x58	; 88
   191ec:	92 e0       	ldi	r25, 0x02	; 2
   191ee:	90 93 09 14 	sts	0x1409, r25	; 0x801409 <_sRuble_Parameters+0xc2>
   191f2:	80 93 08 14 	sts	0x1408, r24	; 0x801408 <_sRuble_Parameters+0xc1>
   191f6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   191fa:	81 30       	cpi	r24, 0x01	; 1
   191fc:	49 f4       	brne	.+18     	; 0x19210 <_Z20Handle_Wireless_Pumpv+0xd6>
   191fe:	66 e2       	ldi	r22, 0x26	; 38
   19200:	7d e2       	ldi	r23, 0x2D	; 45
   19202:	82 e5       	ldi	r24, 0x52	; 82
   19204:	94 e1       	ldi	r25, 0x14	; 20
   19206:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1920a:	82 e5       	ldi	r24, 0x52	; 82
   1920c:	94 e1       	ldi	r25, 0x14	; 20
   1920e:	14 d7       	rcall	.+3624   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19210:	60 91 23 14 	lds	r22, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   19214:	62 50       	subi	r22, 0x02	; 2
   19216:	84 e0       	ldi	r24, 0x04	; 4
   19218:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
   1921c:	10 92 07 14 	sts	0x1407, r1	; 0x801407 <_sRuble_Parameters+0xc0>
   19220:	67 e0       	ldi	r22, 0x07	; 7
   19222:	74 e1       	ldi	r23, 0x14	; 20
   19224:	8d ea       	ldi	r24, 0xAD	; 173
   19226:	9c e0       	ldi	r25, 0x0C	; 12
   19228:	0e 94 e2 84 	call	0x109c4	; 0x109c4 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1922c:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   19230:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   19234:	84 60       	ori	r24, 0x04	; 4
   19236:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1923a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1923e:	08 95       	ret

00019240 <_Z24Pump_Status_List_Monitorv>:
   19240:	0f 93       	push	r16
   19242:	1f 93       	push	r17
   19244:	cf 93       	push	r28
   19246:	df 93       	push	r29
   19248:	80 91 69 0d 	lds	r24, 0x0D69	; 0x800d69 <_ZZ24Pump_Status_List_MonitorvE7counter>
   1924c:	89 37       	cpi	r24, 0x79	; 121
   1924e:	08 f4       	brcc	.+2      	; 0x19252 <_Z24Pump_Status_List_Monitorv+0x12>
   19250:	4a c0       	rjmp	.+148    	; 0x192e6 <_Z24Pump_Status_List_Monitorv+0xa6>
   19252:	20 91 23 14 	lds	r18, 0x1423	; 0x801423 <_sRuble_Parameters+0xdc>
   19256:	30 e0       	ldi	r19, 0x00	; 0
   19258:	ee e1       	ldi	r30, 0x1E	; 30
   1925a:	f4 e1       	ldi	r31, 0x14	; 20
   1925c:	80 e0       	ldi	r24, 0x00	; 0
   1925e:	90 e0       	ldi	r25, 0x00	; 0
   19260:	08 2f       	mov	r16, r24
   19262:	ec 01       	movw	r28, r24
   19264:	11 91       	ld	r17, Z+
   19266:	01 96       	adiw	r24, 0x01	; 1
   19268:	11 30       	cpi	r17, 0x01	; 1
   1926a:	c1 f5       	brne	.+112    	; 0x192dc <_Z24Pump_Status_List_Monitorv+0x9c>
   1926c:	28 17       	cp	r18, r24
   1926e:	39 07       	cpc	r19, r25
   19270:	a9 f1       	breq	.+106    	; 0x192dc <_Z24Pump_Status_List_Monitorv+0x9c>
   19272:	10 92 69 0d 	sts	0x0D69, r1	; 0x800d69 <_ZZ24Pump_Status_List_MonitorvE7counter>
   19276:	01 11       	cpse	r16, r1
   19278:	13 c0       	rjmp	.+38     	; 0x192a0 <_Z24Pump_Status_List_Monitorv+0x60>
   1927a:	8a e0       	ldi	r24, 0x0A	; 10
   1927c:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   19280:	01 97       	sbiw	r24, 0x01	; 1
   19282:	21 f0       	breq	.+8      	; 0x1928c <_Z24Pump_Status_List_Monitorv+0x4c>
   19284:	61 e0       	ldi	r22, 0x01	; 1
   19286:	8a e0       	ldi	r24, 0x0A	; 10
   19288:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1928c:	8b e0       	ldi	r24, 0x0B	; 11
   1928e:	0e 94 75 d5 	call	0x1aaea	; 0x1aaea <digitalRead>
   19292:	01 97       	sbiw	r24, 0x01	; 1
   19294:	c9 f0       	breq	.+50     	; 0x192c8 <_Z24Pump_Status_List_Monitorv+0x88>
   19296:	61 e0       	ldi	r22, 0x01	; 1
   19298:	8b e0       	ldi	r24, 0x0B	; 11
   1929a:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1929e:	14 c0       	rjmp	.+40     	; 0x192c8 <_Z24Pump_Status_List_Monitorv+0x88>
   192a0:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   192a4:	81 30       	cpi	r24, 0x01	; 1
   192a6:	49 f4       	brne	.+18     	; 0x192ba <_Z24Pump_Status_List_Monitorv+0x7a>
   192a8:	6f e4       	ldi	r22, 0x4F	; 79
   192aa:	79 e2       	ldi	r23, 0x29	; 41
   192ac:	82 e5       	ldi	r24, 0x52	; 82
   192ae:	94 e1       	ldi	r25, 0x14	; 20
   192b0:	0e 94 ad d1 	call	0x1a35a	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   192b4:	82 e5       	ldi	r24, 0x52	; 82
   192b6:	94 e1       	ldi	r25, 0x14	; 20
   192b8:	bf d6       	rcall	.+3454   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   192ba:	6f ef       	ldi	r22, 0xFF	; 255
   192bc:	60 0f       	add	r22, r16
   192be:	84 e0       	ldi	r24, 0x04	; 4
   192c0:	0e 94 ea ba 	call	0x175d4	; 0x175d4 <_Z20Wireless_Pump_On_Offhh>
   192c4:	88 23       	and	r24, r24
   192c6:	31 f0       	breq	.+12     	; 0x192d4 <_Z24Pump_Status_List_Monitorv+0x94>
   192c8:	c2 5e       	subi	r28, 0xE2	; 226
   192ca:	db 4e       	sbci	r29, 0xEB	; 235
   192cc:	18 82       	st	Y, r1
   192ce:	0e 94 27 85 	call	0x10a4e	; 0x10a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   192d2:	0d c0       	rjmp	.+26     	; 0x192ee <_Z24Pump_Status_List_Monitorv+0xae>
   192d4:	0e 94 27 85 	call	0x10a4e	; 0x10a4e <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.39>
   192d8:	10 e0       	ldi	r17, 0x00	; 0
   192da:	09 c0       	rjmp	.+18     	; 0x192ee <_Z24Pump_Status_List_Monitorv+0xae>
   192dc:	84 30       	cpi	r24, 0x04	; 4
   192de:	91 05       	cpc	r25, r1
   192e0:	09 f0       	breq	.+2      	; 0x192e4 <_Z24Pump_Status_List_Monitorv+0xa4>
   192e2:	be cf       	rjmp	.-132    	; 0x19260 <_Z24Pump_Status_List_Monitorv+0x20>
   192e4:	03 c0       	rjmp	.+6      	; 0x192ec <_Z24Pump_Status_List_Monitorv+0xac>
   192e6:	8f 5f       	subi	r24, 0xFF	; 255
   192e8:	80 93 69 0d 	sts	0x0D69, r24	; 0x800d69 <_ZZ24Pump_Status_List_MonitorvE7counter>
   192ec:	01 c0       	rjmp	.+2      	; 0x192f0 <_Z24Pump_Status_List_Monitorv+0xb0>
   192ee:	81 2f       	mov	r24, r17
   192f0:	df 91       	pop	r29
   192f2:	cf 91       	pop	r28
   192f4:	1f 91       	pop	r17
   192f6:	0f 91       	pop	r16
   192f8:	08 95       	ret

000192fa <_Z24Plot_Status_List_Monitorv>:
   192fa:	2f 92       	push	r2
   192fc:	3f 92       	push	r3
   192fe:	4f 92       	push	r4
   19300:	5f 92       	push	r5
   19302:	6f 92       	push	r6
   19304:	7f 92       	push	r7
   19306:	8f 92       	push	r8
   19308:	9f 92       	push	r9
   1930a:	af 92       	push	r10
   1930c:	bf 92       	push	r11
   1930e:	cf 92       	push	r12
   19310:	df 92       	push	r13
   19312:	ef 92       	push	r14
   19314:	ff 92       	push	r15
   19316:	0f 93       	push	r16
   19318:	1f 93       	push	r17
   1931a:	cf 93       	push	r28
   1931c:	df 93       	push	r29
   1931e:	cd b7       	in	r28, 0x3d	; 61
   19320:	de b7       	in	r29, 0x3e	; 62
   19322:	29 97       	sbiw	r28, 0x09	; 9
   19324:	0f b6       	in	r0, 0x3f	; 63
   19326:	f8 94       	cli
   19328:	de bf       	out	0x3e, r29	; 62
   1932a:	0f be       	out	0x3f, r0	; 63
   1932c:	cd bf       	out	0x3d, r28	; 61
   1932e:	80 91 06 14 	lds	r24, 0x1406	; 0x801406 <_sRuble_Parameters+0xbf>
   19332:	88 23       	and	r24, r24
   19334:	09 f4       	brne	.+2      	; 0x19338 <_Z24Plot_Status_List_Monitorv+0x3e>
   19336:	39 c3       	rjmp	.+1650   	; 0x199aa <_Z24Plot_Status_List_Monitorv+0x6b0>
   19338:	80 91 07 14 	lds	r24, 0x1407	; 0x801407 <_sRuble_Parameters+0xc0>
   1933c:	88 23       	and	r24, r24
   1933e:	49 f0       	breq	.+18     	; 0x19352 <_Z24Plot_Status_List_Monitorv+0x58>
   19340:	80 91 a2 13 	lds	r24, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   19344:	81 11       	cpse	r24, r1
   19346:	05 c0       	rjmp	.+10     	; 0x19352 <_Z24Plot_Status_List_Monitorv+0x58>
   19348:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   1934c:	82 30       	cpi	r24, 0x02	; 2
   1934e:	09 f0       	breq	.+2      	; 0x19352 <_Z24Plot_Status_List_Monitorv+0x58>
   19350:	2c c3       	rjmp	.+1624   	; 0x199aa <_Z24Plot_Status_List_Monitorv+0x6b0>
   19352:	ea e0       	ldi	r30, 0x0A	; 10
   19354:	f4 e1       	ldi	r31, 0x14	; 20
   19356:	e1 2c       	mov	r14, r1
   19358:	f1 2c       	mov	r15, r1
   1935a:	de 2c       	mov	r13, r14
   1935c:	c1 90       	ld	r12, Z+
   1935e:	21 e0       	ldi	r18, 0x01	; 1
   19360:	c2 12       	cpse	r12, r18
   19362:	1b c3       	rjmp	.+1590   	; 0x1999a <_Z24Plot_Status_List_Monitorv+0x6a0>
   19364:	20 91 a2 13 	lds	r18, 0x13A2	; 0x8013a2 <_sRuble_Parameters+0x5b>
   19368:	82 2f       	mov	r24, r18
   1936a:	90 e0       	ldi	r25, 0x00	; 0
   1936c:	01 97       	sbiw	r24, 0x01	; 1
   1936e:	e8 16       	cp	r14, r24
   19370:	f9 06       	cpc	r15, r25
   19372:	09 f4       	brne	.+2      	; 0x19376 <_Z24Plot_Status_List_Monitorv+0x7c>
   19374:	1b c3       	rjmp	.+1590   	; 0x199ac <_Z24Plot_Status_List_Monitorv+0x6b2>
   19376:	8e 01       	movw	r16, r28
   19378:	0f 5f       	subi	r16, 0xFF	; 255
   1937a:	1f 4f       	sbci	r17, 0xFF	; 255
   1937c:	22 23       	and	r18, r18
   1937e:	09 f4       	brne	.+2      	; 0x19382 <_Z24Plot_Status_List_Monitorv+0x88>
   19380:	4a c0       	rjmp	.+148    	; 0x19416 <_Z24Plot_Status_List_Monitorv+0x11c>
   19382:	25 e0       	ldi	r18, 0x05	; 5
   19384:	d8 01       	movw	r26, r16
   19386:	1d 92       	st	X+, r1
   19388:	2a 95       	dec	r18
   1938a:	e9 f7       	brne	.-6      	; 0x19386 <_Z24Plot_Status_List_Monitorv+0x8c>
   1938c:	26 e0       	ldi	r18, 0x06	; 6
   1938e:	2e 9d       	mul	r18, r14
   19390:	f0 01       	movw	r30, r0
   19392:	2f 9d       	mul	r18, r15
   19394:	f0 0d       	add	r31, r0
   19396:	11 24       	eor	r1, r1
   19398:	28 9f       	mul	r18, r24
   1939a:	b0 01       	movw	r22, r0
   1939c:	29 9f       	mul	r18, r25
   1939e:	70 0d       	add	r23, r0
   193a0:	11 24       	eor	r1, r1
   193a2:	80 e0       	ldi	r24, 0x00	; 0
   193a4:	90 e0       	ldi	r25, 0x00	; 0
   193a6:	40 e0       	ldi	r20, 0x00	; 0
   193a8:	dc 01       	movw	r26, r24
   193aa:	ae 0f       	add	r26, r30
   193ac:	bf 1f       	adc	r27, r31
   193ae:	a3 50       	subi	r26, 0x03	; 3
   193b0:	b3 4f       	sbci	r27, 0xF3	; 243
   193b2:	11 96       	adiw	r26, 0x01	; 1
   193b4:	5c 91       	ld	r21, X
   193b6:	20 e0       	ldi	r18, 0x00	; 0
   193b8:	30 e0       	ldi	r19, 0x00	; 0
   193ba:	b1 2c       	mov	r11, r1
   193bc:	db 01       	movw	r26, r22
   193be:	a2 0f       	add	r26, r18
   193c0:	b3 1f       	adc	r27, r19
   193c2:	a3 50       	subi	r26, 0x03	; 3
   193c4:	b3 4f       	sbci	r27, 0xF3	; 243
   193c6:	11 96       	adiw	r26, 0x01	; 1
   193c8:	ac 91       	ld	r26, X
   193ca:	5a 13       	cpse	r21, r26
   193cc:	02 c0       	rjmp	.+4      	; 0x193d2 <_Z24Plot_Status_List_Monitorv+0xd8>
   193ce:	bb 24       	eor	r11, r11
   193d0:	b3 94       	inc	r11
   193d2:	2f 5f       	subi	r18, 0xFF	; 255
   193d4:	3f 4f       	sbci	r19, 0xFF	; 255
   193d6:	25 30       	cpi	r18, 0x05	; 5
   193d8:	31 05       	cpc	r19, r1
   193da:	81 f7       	brne	.-32     	; 0x193bc <_Z24Plot_Status_List_Monitorv+0xc2>
   193dc:	b1 10       	cpse	r11, r1
   193de:	05 c0       	rjmp	.+10     	; 0x193ea <_Z24Plot_Status_List_Monitorv+0xf0>
   193e0:	d8 01       	movw	r26, r16
   193e2:	a4 0f       	add	r26, r20
   193e4:	b1 1d       	adc	r27, r1
   193e6:	5c 93       	st	X, r21
   193e8:	4f 5f       	subi	r20, 0xFF	; 255
   193ea:	01 96       	adiw	r24, 0x01	; 1
   193ec:	85 30       	cpi	r24, 0x05	; 5
   193ee:	91 05       	cpc	r25, r1
   193f0:	d9 f6       	brne	.-74     	; 0x193a8 <_Z24Plot_Status_List_Monitorv+0xae>
   193f2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   193f6:	fe 01       	movw	r30, r28
   193f8:	36 96       	adiw	r30, 0x06	; 6
   193fa:	5f 01       	movw	r10, r30
   193fc:	81 30       	cpi	r24, 0x01	; 1
   193fe:	09 f0       	breq	.+2      	; 0x19402 <_Z24Plot_Status_List_Monitorv+0x108>
   19400:	3d c0       	rjmp	.+122    	; 0x1947c <_Z24Plot_Status_List_Monitorv+0x182>
   19402:	6f ed       	ldi	r22, 0xDF	; 223
   19404:	7a e2       	ldi	r23, 0x2A	; 42
   19406:	82 e5       	ldi	r24, 0x52	; 82
   19408:	94 e1       	ldi	r25, 0x14	; 20
   1940a:	a7 d7       	rcall	.+3918   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1940c:	82 e5       	ldi	r24, 0x52	; 82
   1940e:	94 e1       	ldi	r25, 0x14	; 20
   19410:	13 d6       	rcall	.+3110   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19412:	48 01       	movw	r8, r16
   19414:	15 c0       	rjmp	.+42     	; 0x19440 <_Z24Plot_Status_List_Monitorv+0x146>
   19416:	d8 01       	movw	r26, r16
   19418:	86 e0       	ldi	r24, 0x06	; 6
   1941a:	8e 9d       	mul	r24, r14
   1941c:	a0 01       	movw	r20, r0
   1941e:	8f 9d       	mul	r24, r15
   19420:	50 0d       	add	r21, r0
   19422:	11 24       	eor	r1, r1
   19424:	80 e0       	ldi	r24, 0x00	; 0
   19426:	90 e0       	ldi	r25, 0x00	; 0
   19428:	fa 01       	movw	r30, r20
   1942a:	e8 0f       	add	r30, r24
   1942c:	f9 1f       	adc	r31, r25
   1942e:	e3 50       	subi	r30, 0x03	; 3
   19430:	f3 4f       	sbci	r31, 0xF3	; 243
   19432:	21 81       	ldd	r18, Z+1	; 0x01
   19434:	2d 93       	st	X+, r18
   19436:	01 96       	adiw	r24, 0x01	; 1
   19438:	85 30       	cpi	r24, 0x05	; 5
   1943a:	91 05       	cpc	r25, r1
   1943c:	a9 f7       	brne	.-22     	; 0x19428 <_Z24Plot_Status_List_Monitorv+0x12e>
   1943e:	d9 cf       	rjmp	.-78     	; 0x193f2 <_Z24Plot_Status_List_Monitorv+0xf8>
   19440:	d4 01       	movw	r26, r8
   19442:	6d 91       	ld	r22, X+
   19444:	4d 01       	movw	r8, r26
   19446:	4a e0       	ldi	r20, 0x0A	; 10
   19448:	50 e0       	ldi	r21, 0x00	; 0
   1944a:	82 e5       	ldi	r24, 0x52	; 82
   1944c:	94 e1       	ldi	r25, 0x14	; 20
   1944e:	fb d7       	rcall	.+4086   	; 0x1a446 <_ZN5Print5printEhi>
   19450:	6d ed       	ldi	r22, 0xDD	; 221
   19452:	7a e2       	ldi	r23, 0x2A	; 42
   19454:	82 e5       	ldi	r24, 0x52	; 82
   19456:	94 e1       	ldi	r25, 0x14	; 20
   19458:	4f d7       	rcall	.+3742   	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1945a:	a8 14       	cp	r10, r8
   1945c:	b9 04       	cpc	r11, r9
   1945e:	81 f7       	brne	.-32     	; 0x19440 <_Z24Plot_Status_List_Monitorv+0x146>
   19460:	6d ec       	ldi	r22, 0xCD	; 205
   19462:	7a e2       	ldi	r23, 0x2A	; 42
   19464:	82 e5       	ldi	r24, 0x52	; 82
   19466:	94 e1       	ldi	r25, 0x14	; 20
   19468:	47 d7       	rcall	.+3726   	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1946a:	4a e0       	ldi	r20, 0x0A	; 10
   1946c:	50 e0       	ldi	r21, 0x00	; 0
   1946e:	6d 2d       	mov	r22, r13
   19470:	82 e5       	ldi	r24, 0x52	; 82
   19472:	94 e1       	ldi	r25, 0x14	; 20
   19474:	ee d7       	rcall	.+4060   	; 0x1a452 <_ZN5Print7printlnEhi>
   19476:	82 e5       	ldi	r24, 0x52	; 82
   19478:	94 e1       	ldi	r25, 0x14	; 20
   1947a:	de d5       	rcall	.+3004   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1947c:	28 01       	movw	r4, r16
   1947e:	d1 2c       	mov	r13, r1
   19480:	ad e0       	ldi	r26, 0x0D	; 13
   19482:	9a 2e       	mov	r9, r26
   19484:	f2 01       	movw	r30, r4
   19486:	71 90       	ld	r7, Z+
   19488:	2f 01       	movw	r4, r30
   1948a:	8f ef       	ldi	r24, 0xFF	; 255
   1948c:	87 0d       	add	r24, r7
   1948e:	85 31       	cpi	r24, 0x15	; 21
   19490:	08 f0       	brcs	.+2      	; 0x19494 <_Z24Plot_Status_List_Monitorv+0x19a>
   19492:	5b c2       	rjmp	.+1206   	; 0x1994a <_Z24Plot_Status_List_Monitorv+0x650>
   19494:	f3 e0       	ldi	r31, 0x03	; 3
   19496:	f7 15       	cp	r31, r7
   19498:	90 f4       	brcc	.+36     	; 0x194be <_Z24Plot_Status_List_Monitorv+0x1c4>
   1949a:	2b ea       	ldi	r18, 0xAB	; 171
   1949c:	72 9e       	mul	r7, r18
   1949e:	81 2c       	mov	r8, r1
   194a0:	11 24       	eor	r1, r1
   194a2:	88 2d       	mov	r24, r8
   194a4:	86 95       	lsr	r24
   194a6:	98 2f       	mov	r25, r24
   194a8:	99 0f       	add	r25, r25
   194aa:	89 0f       	add	r24, r25
   194ac:	78 1a       	sub	r7, r24
   194ae:	86 94       	lsr	r8
   194b0:	77 20       	and	r7, r7
   194b2:	11 f0       	breq	.+4      	; 0x194b8 <_Z24Plot_Status_List_Monitorv+0x1be>
   194b4:	83 94       	inc	r8
   194b6:	05 c0       	rjmp	.+10     	; 0x194c2 <_Z24Plot_Status_List_Monitorv+0x1c8>
   194b8:	f3 e0       	ldi	r31, 0x03	; 3
   194ba:	7f 2e       	mov	r7, r31
   194bc:	02 c0       	rjmp	.+4      	; 0x194c2 <_Z24Plot_Status_List_Monitorv+0x1c8>
   194be:	88 24       	eor	r8, r8
   194c0:	83 94       	inc	r8
   194c2:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   194c6:	81 30       	cpi	r24, 0x01	; 1
   194c8:	71 f4       	brne	.+28     	; 0x194e6 <_Z24Plot_Status_List_Monitorv+0x1ec>
   194ca:	69 eb       	ldi	r22, 0xB9	; 185
   194cc:	7a e2       	ldi	r23, 0x2A	; 42
   194ce:	82 e5       	ldi	r24, 0x52	; 82
   194d0:	94 e1       	ldi	r25, 0x14	; 20
   194d2:	12 d7       	rcall	.+3620   	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   194d4:	4a e0       	ldi	r20, 0x0A	; 10
   194d6:	50 e0       	ldi	r21, 0x00	; 0
   194d8:	68 2d       	mov	r22, r8
   194da:	82 e5       	ldi	r24, 0x52	; 82
   194dc:	94 e1       	ldi	r25, 0x14	; 20
   194de:	b9 d7       	rcall	.+3954   	; 0x1a452 <_ZN5Print7printlnEhi>
   194e0:	82 e5       	ldi	r24, 0x52	; 82
   194e2:	94 e1       	ldi	r25, 0x14	; 20
   194e4:	a9 d5       	rcall	.+2898   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   194e6:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   194ea:	81 11       	cpse	r24, r1
   194ec:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   194f0:	a9 e7       	ldi	r26, 0x79	; 121
   194f2:	b3 e1       	ldi	r27, 0x13	; 19
   194f4:	e4 e1       	ldi	r30, 0x14	; 20
   194f6:	1d 92       	st	X+, r1
   194f8:	ea 95       	dec	r30
   194fa:	e9 f7       	brne	.-6      	; 0x194f6 <_Z24Plot_Status_List_Monitorv+0x1fc>
   194fc:	88 2d       	mov	r24, r8
   194fe:	90 e0       	ldi	r25, 0x00	; 0
   19500:	01 97       	sbiw	r24, 0x01	; 1
   19502:	f7 e0       	ldi	r31, 0x07	; 7
   19504:	f8 9f       	mul	r31, r24
   19506:	90 01       	movw	r18, r0
   19508:	f9 9f       	mul	r31, r25
   1950a:	30 0d       	add	r19, r0
   1950c:	11 24       	eor	r1, r1
   1950e:	29 5b       	subi	r18, 0xB9	; 185
   19510:	3c 4e       	sbci	r19, 0xEC	; 236
   19512:	f9 01       	movw	r30, r18
   19514:	e1 5a       	subi	r30, 0xA1	; 161
   19516:	ff 4f       	sbci	r31, 0xFF	; 255
   19518:	80 81       	ld	r24, Z
   1951a:	80 93 79 13 	sts	0x1379, r24	; 0x801379 <_sRuble_Parameters+0x32>
   1951e:	31 96       	adiw	r30, 0x01	; 1
   19520:	80 81       	ld	r24, Z
   19522:	80 93 7a 13 	sts	0x137A, r24	; 0x80137a <_sRuble_Parameters+0x33>
   19526:	31 96       	adiw	r30, 0x01	; 1
   19528:	80 81       	ld	r24, Z
   1952a:	80 93 7b 13 	sts	0x137B, r24	; 0x80137b <_sRuble_Parameters+0x34>
   1952e:	31 96       	adiw	r30, 0x01	; 1
   19530:	80 81       	ld	r24, Z
   19532:	80 93 7c 13 	sts	0x137C, r24	; 0x80137c <_sRuble_Parameters+0x35>
   19536:	31 96       	adiw	r30, 0x01	; 1
   19538:	80 81       	ld	r24, Z
   1953a:	80 93 7d 13 	sts	0x137D, r24	; 0x80137d <_sRuble_Parameters+0x36>
   1953e:	31 96       	adiw	r30, 0x01	; 1
   19540:	80 81       	ld	r24, Z
   19542:	80 93 7e 13 	sts	0x137E, r24	; 0x80137e <_sRuble_Parameters+0x37>
   19546:	42 e0       	ldi	r20, 0x02	; 2
   19548:	40 93 7f 13 	sts	0x137F, r20	; 0x80137f <_sRuble_Parameters+0x38>
   1954c:	80 91 6e 13 	lds	r24, 0x136E	; 0x80136e <_sRuble_Parameters+0x27>
   19550:	80 93 81 13 	sts	0x1381, r24	; 0x801381 <_sRuble_Parameters+0x3a>
   19554:	80 91 5d 13 	lds	r24, 0x135D	; 0x80135d <_sRuble_Parameters+0x16>
   19558:	80 93 83 13 	sts	0x1383, r24	; 0x801383 <_sRuble_Parameters+0x3c>
   1955c:	70 92 84 13 	sts	0x1384, r7	; 0x801384 <_sRuble_Parameters+0x3d>
   19560:	40 e0       	ldi	r20, 0x00	; 0
   19562:	50 e0       	ldi	r21, 0x00	; 0
   19564:	64 2e       	mov	r6, r20
   19566:	81 2c       	mov	r8, r1
   19568:	71 2c       	mov	r7, r1
   1956a:	94 9e       	mul	r9, r20
   1956c:	b0 01       	movw	r22, r0
   1956e:	95 9e       	mul	r9, r21
   19570:	70 0d       	add	r23, r0
   19572:	11 24       	eor	r1, r1
   19574:	69 54       	subi	r22, 0x49	; 73
   19576:	74 4f       	sbci	r23, 0xF4	; 244
   19578:	88 2d       	mov	r24, r8
   1957a:	90 e0       	ldi	r25, 0x00	; 0
   1957c:	fb 01       	movw	r30, r22
   1957e:	e8 0f       	add	r30, r24
   19580:	f9 1f       	adc	r31, r25
   19582:	82 0f       	add	r24, r18
   19584:	93 1f       	adc	r25, r19
   19586:	dc 01       	movw	r26, r24
   19588:	a1 5a       	subi	r26, 0xA1	; 161
   1958a:	bf 4f       	sbci	r27, 0xFF	; 255
   1958c:	81 81       	ldd	r24, Z+1	; 0x01
   1958e:	9c 91       	ld	r25, X
   19590:	89 17       	cp	r24, r25
   19592:	19 f0       	breq	.+6      	; 0x1959a <_Z24Plot_Status_List_Monitorv+0x2a0>
   19594:	e6 e0       	ldi	r30, 0x06	; 6
   19596:	8e 2e       	mov	r8, r30
   19598:	71 2c       	mov	r7, r1
   1959a:	73 94       	inc	r7
   1959c:	83 94       	inc	r8
   1959e:	85 e0       	ldi	r24, 0x05	; 5
   195a0:	88 15       	cp	r24, r8
   195a2:	50 f7       	brcc	.-44     	; 0x19578 <_Z24Plot_Status_List_Monitorv+0x27e>
   195a4:	a6 e0       	ldi	r26, 0x06	; 6
   195a6:	7a 16       	cp	r7, r26
   195a8:	31 f0       	breq	.+12     	; 0x195b6 <_Z24Plot_Status_List_Monitorv+0x2bc>
   195aa:	4f 5f       	subi	r20, 0xFF	; 255
   195ac:	5f 4f       	sbci	r21, 0xFF	; 255
   195ae:	47 30       	cpi	r20, 0x07	; 7
   195b0:	51 05       	cpc	r21, r1
   195b2:	c1 f6       	brne	.-80     	; 0x19564 <_Z24Plot_Status_List_Monitorv+0x26a>
   195b4:	01 c0       	rjmp	.+2      	; 0x195b8 <_Z24Plot_Status_List_Monitorv+0x2be>
   195b6:	d6 2c       	mov	r13, r6
   195b8:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   195bc:	81 30       	cpi	r24, 0x01	; 1
   195be:	71 f4       	brne	.+28     	; 0x195dc <_Z24Plot_Status_List_Monitorv+0x2e2>
   195c0:	63 ea       	ldi	r22, 0xA3	; 163
   195c2:	7a e2       	ldi	r23, 0x2A	; 42
   195c4:	82 e5       	ldi	r24, 0x52	; 82
   195c6:	94 e1       	ldi	r25, 0x14	; 20
   195c8:	97 d6       	rcall	.+3374   	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   195ca:	4a e0       	ldi	r20, 0x0A	; 10
   195cc:	50 e0       	ldi	r21, 0x00	; 0
   195ce:	6d 2d       	mov	r22, r13
   195d0:	82 e5       	ldi	r24, 0x52	; 82
   195d2:	94 e1       	ldi	r25, 0x14	; 20
   195d4:	38 d7       	rcall	.+3696   	; 0x1a446 <_ZN5Print5printEhi>
   195d6:	82 e5       	ldi	r24, 0x52	; 82
   195d8:	94 e1       	ldi	r25, 0x14	; 20
   195da:	2e d5       	rcall	.+2652   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   195dc:	bd e0       	ldi	r27, 0x0D	; 13
   195de:	db 9e       	mul	r13, r27
   195e0:	10 01       	movw	r2, r0
   195e2:	11 24       	eor	r1, r1
   195e4:	81 2c       	mov	r8, r1
   195e6:	9d 9c       	mul	r9, r13
   195e8:	c0 01       	movw	r24, r0
   195ea:	11 24       	eor	r1, r1
   195ec:	9c 01       	movw	r18, r24
   195ee:	29 54       	subi	r18, 0x49	; 73
   195f0:	34 4f       	sbci	r19, 0xF4	; 244
   195f2:	f9 01       	movw	r30, r18
   195f4:	3b 96       	adiw	r30, 0x0b	; 11
   195f6:	ff 83       	std	Y+7, r31	; 0x07
   195f8:	ee 83       	std	Y+6, r30	; 0x06
   195fa:	a9 01       	movw	r20, r18
   195fc:	48 5f       	subi	r20, 0xF8	; 248
   195fe:	5f 4f       	sbci	r21, 0xFF	; 255
   19600:	59 87       	std	Y+9, r21	; 0x09
   19602:	48 87       	std	Y+8, r20	; 0x08
   19604:	dc 01       	movw	r26, r24
   19606:	a8 54       	subi	r26, 0x48	; 72
   19608:	b4 4f       	sbci	r27, 0xF4	; 244
   1960a:	3d 01       	movw	r6, r26
   1960c:	83 94       	inc	r8
   1960e:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   19612:	81 30       	cpi	r24, 0x01	; 1
   19614:	41 f4       	brne	.+16     	; 0x19626 <_Z24Plot_Status_List_Monitorv+0x32c>
   19616:	6f e7       	ldi	r22, 0x7F	; 127
   19618:	7a e2       	ldi	r23, 0x2A	; 42
   1961a:	82 e5       	ldi	r24, 0x52	; 82
   1961c:	94 e1       	ldi	r25, 0x14	; 20
   1961e:	9d d6       	rcall	.+3386   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   19620:	82 e5       	ldi	r24, 0x52	; 82
   19622:	94 e1       	ldi	r25, 0x14	; 20
   19624:	09 d5       	rcall	.+2578   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19626:	0e 94 9f 6b 	call	0xd73e	; 0xd73e <_Z16Display_Update_1v>
   1962a:	8c e0       	ldi	r24, 0x0C	; 12
   1962c:	0e 94 83 66 	call	0xcd06	; 0xcd06 <_Z14Lora_Data_Sendh>
   19630:	88 eb       	ldi	r24, 0xB8	; 184
   19632:	9b e0       	ldi	r25, 0x0B	; 11
   19634:	0e 94 97 64 	call	0xc92e	; 0xc92e <_Z20Check_Data_Availablej>
   19638:	88 23       	and	r24, r24
   1963a:	09 f4       	brne	.+2      	; 0x1963e <_Z24Plot_Status_List_Monitorv+0x344>
   1963c:	34 c1       	rjmp	.+616    	; 0x198a6 <_Z24Plot_Status_List_Monitorv+0x5ac>
   1963e:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   19642:	90 91 37 14 	lds	r25, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   19646:	88 23       	and	r24, r24
   19648:	09 f4       	brne	.+2      	; 0x1964c <_Z24Plot_Status_List_Monitorv+0x352>
   1964a:	e6 c0       	rjmp	.+460    	; 0x19818 <_Z24Plot_Status_List_Monitorv+0x51e>
   1964c:	91 30       	cpi	r25, 0x01	; 1
   1964e:	21 f5       	brne	.+72     	; 0x19698 <_Z24Plot_Status_List_Monitorv+0x39e>
   19650:	69 e6       	ldi	r22, 0x69	; 105
   19652:	7a e2       	ldi	r23, 0x2A	; 42
   19654:	82 e5       	ldi	r24, 0x52	; 82
   19656:	94 e1       	ldi	r25, 0x14	; 20
   19658:	4f d6       	rcall	.+3230   	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1965a:	4a e0       	ldi	r20, 0x0A	; 10
   1965c:	50 e0       	ldi	r21, 0x00	; 0
   1965e:	6d e8       	ldi	r22, 0x8D	; 141
   19660:	73 e1       	ldi	r23, 0x13	; 19
   19662:	82 e5       	ldi	r24, 0x52	; 82
   19664:	94 e1       	ldi	r25, 0x14	; 20
   19666:	0e 94 b4 23 	call	0x4768	; 0x4768 <_ZN5Print5writeEPKcj>
   1966a:	82 e5       	ldi	r24, 0x52	; 82
   1966c:	94 e1       	ldi	r25, 0x14	; 20
   1966e:	71 d6       	rcall	.+3298   	; 0x1a352 <_ZN5Print7printlnEv>
   19670:	82 e5       	ldi	r24, 0x52	; 82
   19672:	94 e1       	ldi	r25, 0x14	; 20
   19674:	e1 d4       	rcall	.+2498   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19676:	6b e4       	ldi	r22, 0x4B	; 75
   19678:	7a e2       	ldi	r23, 0x2A	; 42
   1967a:	82 e5       	ldi	r24, 0x52	; 82
   1967c:	94 e1       	ldi	r25, 0x14	; 20
   1967e:	3c d6       	rcall	.+3192   	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   19680:	47 e0       	ldi	r20, 0x07	; 7
   19682:	50 e0       	ldi	r21, 0x00	; 0
   19684:	b3 01       	movw	r22, r6
   19686:	82 e5       	ldi	r24, 0x52	; 82
   19688:	94 e1       	ldi	r25, 0x14	; 20
   1968a:	0c d6       	rcall	.+3096   	; 0x1a2a4 <_ZN5Print5writeEPKhj>
   1968c:	82 e5       	ldi	r24, 0x52	; 82
   1968e:	94 e1       	ldi	r25, 0x14	; 20
   19690:	60 d6       	rcall	.+3264   	; 0x1a352 <_ZN5Print7printlnEv>
   19692:	82 e5       	ldi	r24, 0x52	; 82
   19694:	94 e1       	ldi	r25, 0x14	; 20
   19696:	d0 d4       	rcall	.+2464   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19698:	ad e8       	ldi	r26, 0x8D	; 141
   1969a:	b3 e1       	ldi	r27, 0x13	; 19
   1969c:	80 e0       	ldi	r24, 0x00	; 0
   1969e:	90 e0       	ldi	r25, 0x00	; 0
   196a0:	2d 91       	ld	r18, X+
   196a2:	f1 01       	movw	r30, r2
   196a4:	e8 0f       	add	r30, r24
   196a6:	f9 1f       	adc	r31, r25
   196a8:	e9 54       	subi	r30, 0x49	; 73
   196aa:	f4 4f       	sbci	r31, 0xF4	; 244
   196ac:	31 81       	ldd	r19, Z+1	; 0x01
   196ae:	32 17       	cp	r19, r18
   196b0:	09 f4       	brne	.+2      	; 0x196b4 <_Z24Plot_Status_List_Monitorv+0x3ba>
   196b2:	62 c0       	rjmp	.+196    	; 0x19778 <_Z24Plot_Status_List_Monitorv+0x47e>
   196b4:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   196b8:	81 30       	cpi	r24, 0x01	; 1
   196ba:	41 f4       	brne	.+16     	; 0x196cc <_Z24Plot_Status_List_Monitorv+0x3d2>
   196bc:	60 e2       	ldi	r22, 0x20	; 32
   196be:	7a e2       	ldi	r23, 0x2A	; 42
   196c0:	82 e5       	ldi	r24, 0x52	; 82
   196c2:	94 e1       	ldi	r25, 0x14	; 20
   196c4:	4a d6       	rcall	.+3220   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   196c6:	82 e5       	ldi	r24, 0x52	; 82
   196c8:	94 e1       	ldi	r25, 0x14	; 20
   196ca:	b6 d4       	rcall	.+2412   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   196cc:	b2 e0       	ldi	r27, 0x02	; 2
   196ce:	8b 16       	cp	r8, r27
   196d0:	b9 f0       	breq	.+46     	; 0x19700 <_Z24Plot_Status_List_Monitorv+0x406>
   196d2:	21 e0       	ldi	r18, 0x01	; 1
   196d4:	ee 81       	ldd	r30, Y+6	; 0x06
   196d6:	ff 81       	ldd	r31, Y+7	; 0x07
   196d8:	20 83       	st	Z, r18
   196da:	80 91 96 13 	lds	r24, 0x1396	; 0x801396 <_sRuble_Parameters+0x4f>
   196de:	90 e0       	ldi	r25, 0x00	; 0
   196e0:	98 2f       	mov	r25, r24
   196e2:	88 27       	eor	r24, r24
   196e4:	20 91 97 13 	lds	r18, 0x1397	; 0x801397 <_sRuble_Parameters+0x50>
   196e8:	82 2b       	or	r24, r18
   196ea:	a8 85       	ldd	r26, Y+8	; 0x08
   196ec:	b9 85       	ldd	r27, Y+9	; 0x09
   196ee:	8d 93       	st	X+, r24
   196f0:	9c 93       	st	X, r25
   196f2:	80 91 95 13 	lds	r24, 0x1395	; 0x801395 <_sRuble_Parameters+0x4e>
   196f6:	81 11       	cpse	r24, r1
   196f8:	45 c0       	rjmp	.+138    	; 0x19784 <_Z24Plot_Status_List_Monitorv+0x48a>
   196fa:	83 e0       	ldi	r24, 0x03	; 3
   196fc:	88 2e       	mov	r8, r24
   196fe:	1c c1       	rjmp	.+568    	; 0x19938 <_Z24Plot_Status_List_Monitorv+0x63e>
   19700:	86 e0       	ldi	r24, 0x06	; 6
   19702:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   19706:	84 e6       	ldi	r24, 0x64	; 100
   19708:	90 e0       	ldi	r25, 0x00	; 0
   1970a:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   1970e:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   19712:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   19716:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1971a:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   1971e:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   19722:	a0 62       	ori	r26, 0x20	; 32
   19724:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   19728:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1972c:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   19730:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   19734:	d0 92 f9 13 	sts	0x13F9, r13	; 0x8013f9 <_sRuble_Parameters+0xb2>
   19738:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1973c:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   19740:	82 60       	ori	r24, 0x02	; 2
   19742:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   19746:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1974a:	d8 01       	movw	r26, r16
   1974c:	ed 91       	ld	r30, X+
   1974e:	8d 01       	movw	r16, r26
   19750:	e6 31       	cpi	r30, 0x16	; 22
   19752:	68 f0       	brcs	.+26     	; 0x1976e <_Z24Plot_Status_List_Monitorv+0x474>
   19754:	f0 e0       	ldi	r31, 0x00	; 0
   19756:	ef 53       	subi	r30, 0x3F	; 63
   19758:	fc 4e       	sbci	r31, 0xEC	; 236
   1975a:	61 e0       	ldi	r22, 0x01	; 1
   1975c:	80 81       	ld	r24, Z
   1975e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   19762:	68 ec       	ldi	r22, 0xC8	; 200
   19764:	70 e0       	ldi	r23, 0x00	; 0
   19766:	80 e0       	ldi	r24, 0x00	; 0
   19768:	90 e0       	ldi	r25, 0x00	; 0
   1976a:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   1976e:	a0 16       	cp	r10, r16
   19770:	b1 06       	cpc	r11, r17
   19772:	59 f7       	brne	.-42     	; 0x1974a <_Z24Plot_Status_List_Monitorv+0x450>
   19774:	c1 2c       	mov	r12, r1
   19776:	1a c1       	rjmp	.+564    	; 0x199ac <_Z24Plot_Status_List_Monitorv+0x6b2>
   19778:	01 96       	adiw	r24, 0x01	; 1
   1977a:	86 30       	cpi	r24, 0x06	; 6
   1977c:	91 05       	cpc	r25, r1
   1977e:	09 f0       	breq	.+2      	; 0x19782 <_Z24Plot_Status_List_Monitorv+0x488>
   19780:	8f cf       	rjmp	.-226    	; 0x196a0 <_Z24Plot_Status_List_Monitorv+0x3a6>
   19782:	a7 cf       	rjmp	.-178    	; 0x196d2 <_Z24Plot_Status_List_Monitorv+0x3d8>
   19784:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   19788:	81 30       	cpi	r24, 0x01	; 1
   1978a:	41 f4       	brne	.+16     	; 0x1979c <_Z24Plot_Status_List_Monitorv+0x4a2>
   1978c:	6d e0       	ldi	r22, 0x0D	; 13
   1978e:	7a e2       	ldi	r23, 0x2A	; 42
   19790:	82 e5       	ldi	r24, 0x52	; 82
   19792:	94 e1       	ldi	r25, 0x14	; 20
   19794:	e2 d5       	rcall	.+3012   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   19796:	82 e5       	ldi	r24, 0x52	; 82
   19798:	94 e1       	ldi	r25, 0x14	; 20
   1979a:	4e d4       	rcall	.+2204   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1979c:	b2 e0       	ldi	r27, 0x02	; 2
   1979e:	8b 12       	cpse	r8, r27
   197a0:	cb c0       	rjmp	.+406    	; 0x19938 <_Z24Plot_Status_List_Monitorv+0x63e>
   197a2:	86 e0       	ldi	r24, 0x06	; 6
   197a4:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   197a8:	84 e6       	ldi	r24, 0x64	; 100
   197aa:	90 e0       	ldi	r25, 0x00	; 0
   197ac:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   197b0:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   197b4:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   197b8:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   197bc:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   197c0:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   197c4:	a0 62       	ori	r26, 0x20	; 32
   197c6:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   197ca:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   197ce:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   197d2:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   197d6:	d0 92 f9 13 	sts	0x13F9, r13	; 0x8013f9 <_sRuble_Parameters+0xb2>
   197da:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   197de:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   197e2:	82 60       	ori	r24, 0x02	; 2
   197e4:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   197e8:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   197ec:	d8 01       	movw	r26, r16
   197ee:	ed 91       	ld	r30, X+
   197f0:	8d 01       	movw	r16, r26
   197f2:	e6 31       	cpi	r30, 0x16	; 22
   197f4:	68 f0       	brcs	.+26     	; 0x19810 <_Z24Plot_Status_List_Monitorv+0x516>
   197f6:	f0 e0       	ldi	r31, 0x00	; 0
   197f8:	ef 53       	subi	r30, 0x3F	; 63
   197fa:	fc 4e       	sbci	r31, 0xEC	; 236
   197fc:	61 e0       	ldi	r22, 0x01	; 1
   197fe:	80 81       	ld	r24, Z
   19800:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   19804:	68 ec       	ldi	r22, 0xC8	; 200
   19806:	70 e0       	ldi	r23, 0x00	; 0
   19808:	80 e0       	ldi	r24, 0x00	; 0
   1980a:	90 e0       	ldi	r25, 0x00	; 0
   1980c:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   19810:	a0 16       	cp	r10, r16
   19812:	b1 06       	cpc	r11, r17
   19814:	59 f7       	brne	.-42     	; 0x197ec <_Z24Plot_Status_List_Monitorv+0x4f2>
   19816:	ae cf       	rjmp	.-164    	; 0x19774 <_Z24Plot_Status_List_Monitorv+0x47a>
   19818:	91 30       	cpi	r25, 0x01	; 1
   1981a:	41 f4       	brne	.+16     	; 0x1982c <_Z24Plot_Status_List_Monitorv+0x532>
   1981c:	62 ed       	ldi	r22, 0xD2	; 210
   1981e:	79 e2       	ldi	r23, 0x29	; 41
   19820:	82 e5       	ldi	r24, 0x52	; 82
   19822:	94 e1       	ldi	r25, 0x14	; 20
   19824:	9a d5       	rcall	.+2868   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   19826:	82 e5       	ldi	r24, 0x52	; 82
   19828:	94 e1       	ldi	r25, 0x14	; 20
   1982a:	06 d4       	rcall	.+2060   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   1982c:	b2 e0       	ldi	r27, 0x02	; 2
   1982e:	8b 12       	cpse	r8, r27
   19830:	83 c0       	rjmp	.+262    	; 0x19938 <_Z24Plot_Status_List_Monitorv+0x63e>
   19832:	86 e0       	ldi	r24, 0x06	; 6
   19834:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   19838:	84 e6       	ldi	r24, 0x64	; 100
   1983a:	90 e0       	ldi	r25, 0x00	; 0
   1983c:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   19840:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   19844:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   19848:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   1984c:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   19850:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   19854:	a0 62       	ori	r26, 0x20	; 32
   19856:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   1985a:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   1985e:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   19862:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   19866:	d0 92 f9 13 	sts	0x13F9, r13	; 0x8013f9 <_sRuble_Parameters+0xb2>
   1986a:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   1986e:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   19872:	82 60       	ori	r24, 0x02	; 2
   19874:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   19878:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1987c:	d8 01       	movw	r26, r16
   1987e:	ed 91       	ld	r30, X+
   19880:	8d 01       	movw	r16, r26
   19882:	e6 31       	cpi	r30, 0x16	; 22
   19884:	60 f0       	brcs	.+24     	; 0x1989e <_Z24Plot_Status_List_Monitorv+0x5a4>
   19886:	f0 e0       	ldi	r31, 0x00	; 0
   19888:	ef 53       	subi	r30, 0x3F	; 63
   1988a:	fc 4e       	sbci	r31, 0xEC	; 236
   1988c:	61 e0       	ldi	r22, 0x01	; 1
   1988e:	80 81       	ld	r24, Z
   19890:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   19894:	68 ec       	ldi	r22, 0xC8	; 200
   19896:	70 e0       	ldi	r23, 0x00	; 0
   19898:	80 e0       	ldi	r24, 0x00	; 0
   1989a:	90 e0       	ldi	r25, 0x00	; 0
   1989c:	bf d7       	rcall	.+3966   	; 0x1a81c <delay>
   1989e:	a0 16       	cp	r10, r16
   198a0:	b1 06       	cpc	r11, r17
   198a2:	61 f7       	brne	.-40     	; 0x1987c <_Z24Plot_Status_List_Monitorv+0x582>
   198a4:	67 cf       	rjmp	.-306    	; 0x19774 <_Z24Plot_Status_List_Monitorv+0x47a>
   198a6:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   198aa:	81 30       	cpi	r24, 0x01	; 1
   198ac:	41 f4       	brne	.+16     	; 0x198be <_Z24Plot_Status_List_Monitorv+0x5c4>
   198ae:	67 e9       	ldi	r22, 0x97	; 151
   198b0:	79 e2       	ldi	r23, 0x29	; 41
   198b2:	82 e5       	ldi	r24, 0x52	; 82
   198b4:	94 e1       	ldi	r25, 0x14	; 20
   198b6:	51 d5       	rcall	.+2722   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   198b8:	82 e5       	ldi	r24, 0x52	; 82
   198ba:	94 e1       	ldi	r25, 0x14	; 20
   198bc:	bd d3       	rcall	.+1914   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   198be:	b2 e0       	ldi	r27, 0x02	; 2
   198c0:	8b 12       	cpse	r8, r27
   198c2:	3a c0       	rjmp	.+116    	; 0x19938 <_Z24Plot_Status_List_Monitorv+0x63e>
   198c4:	86 e0       	ldi	r24, 0x06	; 6
   198c6:	80 93 45 13 	sts	0x1345, r24	; 0x801345 <_sPump_Parameter+0x8>
   198ca:	84 e6       	ldi	r24, 0x64	; 100
   198cc:	90 e0       	ldi	r25, 0x00	; 0
   198ce:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   198d2:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   198d6:	80 91 13 0c 	lds	r24, 0x0C13	; 0x800c13 <_sGSM_Query>
   198da:	90 91 14 0c 	lds	r25, 0x0C14	; 0x800c14 <_sGSM_Query+0x1>
   198de:	a0 91 15 0c 	lds	r26, 0x0C15	; 0x800c15 <_sGSM_Query+0x2>
   198e2:	b0 91 16 0c 	lds	r27, 0x0C16	; 0x800c16 <_sGSM_Query+0x3>
   198e6:	a0 62       	ori	r26, 0x20	; 32
   198e8:	80 93 13 0c 	sts	0x0C13, r24	; 0x800c13 <_sGSM_Query>
   198ec:	90 93 14 0c 	sts	0x0C14, r25	; 0x800c14 <_sGSM_Query+0x1>
   198f0:	a0 93 15 0c 	sts	0x0C15, r26	; 0x800c15 <_sGSM_Query+0x2>
   198f4:	b0 93 16 0c 	sts	0x0C16, r27	; 0x800c16 <_sGSM_Query+0x3>
   198f8:	d0 92 f9 13 	sts	0x13F9, r13	; 0x8013f9 <_sRuble_Parameters+0xb2>
   198fc:	80 91 5f 13 	lds	r24, 0x135F	; 0x80135f <_sRuble_Parameters+0x18>
   19900:	90 91 60 13 	lds	r25, 0x1360	; 0x801360 <_sRuble_Parameters+0x19>
   19904:	82 60       	ori	r24, 0x02	; 2
   19906:	90 93 60 13 	sts	0x1360, r25	; 0x801360 <_sRuble_Parameters+0x19>
   1990a:	80 93 5f 13 	sts	0x135F, r24	; 0x80135f <_sRuble_Parameters+0x18>
   1990e:	d8 01       	movw	r26, r16
   19910:	ed 91       	ld	r30, X+
   19912:	8d 01       	movw	r16, r26
   19914:	e6 31       	cpi	r30, 0x16	; 22
   19916:	60 f0       	brcs	.+24     	; 0x19930 <_Z24Plot_Status_List_Monitorv+0x636>
   19918:	f0 e0       	ldi	r31, 0x00	; 0
   1991a:	ef 53       	subi	r30, 0x3F	; 63
   1991c:	fc 4e       	sbci	r31, 0xEC	; 236
   1991e:	61 e0       	ldi	r22, 0x01	; 1
   19920:	80 81       	ld	r24, Z
   19922:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   19926:	68 ec       	ldi	r22, 0xC8	; 200
   19928:	70 e0       	ldi	r23, 0x00	; 0
   1992a:	80 e0       	ldi	r24, 0x00	; 0
   1992c:	90 e0       	ldi	r25, 0x00	; 0
   1992e:	76 d7       	rcall	.+3820   	; 0x1a81c <delay>
   19930:	a0 16       	cp	r10, r16
   19932:	b1 06       	cpc	r11, r17
   19934:	61 f7       	brne	.-40     	; 0x1990e <_Z24Plot_Status_List_Monitorv+0x614>
   19936:	1e cf       	rjmp	.-452    	; 0x19774 <_Z24Plot_Status_List_Monitorv+0x47a>
   19938:	68 ee       	ldi	r22, 0xE8	; 232
   1993a:	73 e0       	ldi	r23, 0x03	; 3
   1993c:	80 e0       	ldi	r24, 0x00	; 0
   1993e:	90 e0       	ldi	r25, 0x00	; 0
   19940:	6d d7       	rcall	.+3802   	; 0x1a81c <delay>
   19942:	b3 e0       	ldi	r27, 0x03	; 3
   19944:	8b 12       	cpse	r8, r27
   19946:	62 ce       	rjmp	.-828    	; 0x1960c <_Z24Plot_Status_List_Monitorv+0x312>
   19948:	11 c0       	rjmp	.+34     	; 0x1996c <_Z24Plot_Status_List_Monitorv+0x672>
   1994a:	8a ee       	ldi	r24, 0xEA	; 234
   1994c:	87 0d       	add	r24, r7
   1994e:	8e 34       	cpi	r24, 0x4E	; 78
   19950:	68 f4       	brcc	.+26     	; 0x1996c <_Z24Plot_Status_List_Monitorv+0x672>
   19952:	e7 2d       	mov	r30, r7
   19954:	f0 e0       	ldi	r31, 0x00	; 0
   19956:	ef 53       	subi	r30, 0x3F	; 63
   19958:	fc 4e       	sbci	r31, 0xEC	; 236
   1995a:	61 e0       	ldi	r22, 0x01	; 1
   1995c:	80 81       	ld	r24, Z
   1995e:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   19962:	68 ec       	ldi	r22, 0xC8	; 200
   19964:	70 e0       	ldi	r23, 0x00	; 0
   19966:	80 e0       	ldi	r24, 0x00	; 0
   19968:	90 e0       	ldi	r25, 0x00	; 0
   1996a:	58 d7       	rcall	.+3760   	; 0x1a81c <delay>
   1996c:	4a 14       	cp	r4, r10
   1996e:	5b 04       	cpc	r5, r11
   19970:	09 f0       	breq	.+2      	; 0x19974 <_Z24Plot_Status_List_Monitorv+0x67a>
   19972:	88 cd       	rjmp	.-1264   	; 0x19484 <_Z24Plot_Status_List_Monitorv+0x18a>
   19974:	f7 01       	movw	r30, r14
   19976:	e6 5f       	subi	r30, 0xF6	; 246
   19978:	fb 4e       	sbci	r31, 0xEB	; 235
   1997a:	10 82       	st	Z, r1
   1997c:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   19980:	81 30       	cpi	r24, 0x01	; 1
   19982:	a1 f4       	brne	.+40     	; 0x199ac <_Z24Plot_Status_List_Monitorv+0x6b2>
   19984:	68 e7       	ldi	r22, 0x78	; 120
   19986:	79 e2       	ldi	r23, 0x29	; 41
   19988:	82 e5       	ldi	r24, 0x52	; 82
   1998a:	94 e1       	ldi	r25, 0x14	; 20
   1998c:	e6 d4       	rcall	.+2508   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1998e:	82 e5       	ldi	r24, 0x52	; 82
   19990:	94 e1       	ldi	r25, 0x14	; 20
   19992:	52 d3       	rcall	.+1700   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
   19994:	cc 24       	eor	r12, r12
   19996:	c3 94       	inc	r12
   19998:	09 c0       	rjmp	.+18     	; 0x199ac <_Z24Plot_Status_List_Monitorv+0x6b2>
   1999a:	2f ef       	ldi	r18, 0xFF	; 255
   1999c:	e2 1a       	sub	r14, r18
   1999e:	f2 0a       	sbc	r15, r18
   199a0:	3e e0       	ldi	r19, 0x0E	; 14
   199a2:	e3 16       	cp	r14, r19
   199a4:	f1 04       	cpc	r15, r1
   199a6:	09 f0       	breq	.+2      	; 0x199aa <_Z24Plot_Status_List_Monitorv+0x6b0>
   199a8:	d8 cc       	rjmp	.-1616   	; 0x1935a <_Z24Plot_Status_List_Monitorv+0x60>
   199aa:	01 c0       	rjmp	.+2      	; 0x199ae <_Z24Plot_Status_List_Monitorv+0x6b4>
   199ac:	8c 2d       	mov	r24, r12
   199ae:	29 96       	adiw	r28, 0x09	; 9
   199b0:	0f b6       	in	r0, 0x3f	; 63
   199b2:	f8 94       	cli
   199b4:	de bf       	out	0x3e, r29	; 62
   199b6:	0f be       	out	0x3f, r0	; 63
   199b8:	cd bf       	out	0x3d, r28	; 61
   199ba:	df 91       	pop	r29
   199bc:	cf 91       	pop	r28
   199be:	1f 91       	pop	r17
   199c0:	0f 91       	pop	r16
   199c2:	ff 90       	pop	r15
   199c4:	ef 90       	pop	r14
   199c6:	df 90       	pop	r13
   199c8:	cf 90       	pop	r12
   199ca:	bf 90       	pop	r11
   199cc:	af 90       	pop	r10
   199ce:	9f 90       	pop	r9
   199d0:	8f 90       	pop	r8
   199d2:	7f 90       	pop	r7
   199d4:	6f 90       	pop	r6
   199d6:	5f 90       	pop	r5
   199d8:	4f 90       	pop	r4
   199da:	3f 90       	pop	r3
   199dc:	2f 90       	pop	r2
   199de:	08 95       	ret

000199e0 <_Z14Lora_Operationv>:
		}break;
	}
}

void Lora_Operation(void)
{
   199e0:	0f 93       	push	r16
   199e2:	1f 93       	push	r17
   199e4:	cf 93       	push	r28
   199e6:	df 93       	push	r29
   199e8:	00 d0       	rcall	.+0      	; 0x199ea <_Z14Lora_Operationv+0xa>
   199ea:	00 d0       	rcall	.+0      	; 0x199ec <_Z14Lora_Operationv+0xc>
   199ec:	cd b7       	in	r28, 0x3d	; 61
   199ee:	de b7       	in	r29, 0x3e	; 62
	unsigned char temp_id[_kVALVE_ID_LEN],i;
	
	if(_kLORA_DATA_AVAIALABLE())     /* check weather data is available */
   199f0:	0e 94 61 64 	call	0xc8c2	; 0xc8c2 <_Z14Lora_Availablev>
   199f4:	88 23       	and	r24, r24
   199f6:	09 f4       	brne	.+2      	; 0x199fa <_Z14Lora_Operationv+0x1a>
   199f8:	45 c0       	rjmp	.+138    	; 0x19a84 <_Z14Lora_Operationv+0xa4>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   199fa:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   199fe:	81 30       	cpi	r24, 0x01	; 1
   19a00:	41 f4       	brne	.+16     	; 0x19a12 <_Z14Lora_Operationv+0x32>
		{
			_kSERAIL_MON_WRITE("Lora Data Recived");                /* for debugging purpose */
   19a02:	62 ef       	ldi	r22, 0xF2	; 242
   19a04:	7a e3       	ldi	r23, 0x3A	; 58
   19a06:	82 e5       	ldi	r24, 0x52	; 82
   19a08:	94 e1       	ldi	r25, 0x14	; 20
   19a0a:	a7 d4       	rcall	.+2382   	; 0x1a35a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   19a0c:	82 e5       	ldi	r24, 0x52	; 82
   19a0e:	94 e1       	ldi	r25, 0x14	; 20
   19a10:	13 d3       	rcall	.+1574   	; 0x1a038 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
   19a12:	0e 94 65 64 	call	0xc8ca	; 0xc8ca <_Z17Lora_Data_Receivev>
   19a16:	88 23       	and	r24, r24
   19a18:	a9 f1       	breq	.+106    	; 0x19a84 <_Z14Lora_Operationv+0xa4>
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   19a1a:	80 91 37 14 	lds	r24, 0x1437	; 0x801437 <_sRuble_Parameters+0xf0>
   19a1e:	81 30       	cpi	r24, 0x01	; 1
   19a20:	11 f4       	brne	.+4      	; 0x19a26 <_Z14Lora_Operationv+0x46>
   19a22:	10 e0       	ldi	r17, 0x00	; 0
   19a24:	08 c0       	rjmp	.+16     	; 0x19a36 <_Z14Lora_Operationv+0x56>
   19a26:	ad e8       	ldi	r26, 0x8D	; 141
   19a28:	b3 e1       	ldi	r27, 0x13	; 19
   19a2a:	fe 01       	movw	r30, r28
   19a2c:	31 96       	adiw	r30, 0x01	; 1
   19a2e:	ce 01       	movw	r24, r28
   19a30:	07 96       	adiw	r24, 0x07	; 7
   19a32:	8f 01       	movw	r16, r30
   19a34:	0c c0       	rjmp	.+24     	; 0x19a4e <_Z14Lora_Operationv+0x6e>
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   19a36:	e1 2f       	mov	r30, r17
   19a38:	f0 e0       	ldi	r31, 0x00	; 0
   19a3a:	e3 57       	subi	r30, 0x73	; 115
   19a3c:	fc 4e       	sbci	r31, 0xEC	; 236
   19a3e:	60 81       	ld	r22, Z
   19a40:	66 23       	and	r22, r22
   19a42:	89 f3       	breq	.-30     	; 0x19a26 <_Z14Lora_Operationv+0x46>
				{
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
   19a44:	82 e5       	ldi	r24, 0x52	; 82
   19a46:	94 e1       	ldi	r25, 0x14	; 20
   19a48:	ad d2       	rcall	.+1370   	; 0x19fa4 <_ZN14HardwareSerial5writeEh>
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   19a4a:	1f 5f       	subi	r17, 0xFF	; 255
   19a4c:	f4 cf       	rjmp	.-24     	; 0x19a36 <_Z14Lora_Operationv+0x56>
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
   19a4e:	2d 91       	ld	r18, X+
   19a50:	21 93       	st	Z+, r18
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
				}
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
   19a52:	e8 17       	cp	r30, r24
   19a54:	f9 07       	cpc	r31, r25
   19a56:	d9 f7       	brne	.-10     	; 0x19a4e <_Z14Lora_Operationv+0x6e>
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
			}
			
			if(!Update_Lira_Sensor_Data(temp_id))    /* check weather is lira node has send the packet */
   19a58:	c8 01       	movw	r24, r16
   19a5a:	0e 94 fe 7d 	call	0xfbfc	; 0xfbfc <_Z23Update_Lira_Sensor_DataPh>
   19a5e:	81 11       	cpse	r24, r1
   19a60:	11 c0       	rjmp	.+34     	; 0x19a84 <_Z14Lora_Operationv+0xa4>
			{
				if(!Update_Euro_Valve_Data(temp_id))   /* check weather EURO valve have sent the packet */
   19a62:	c8 01       	movw	r24, r16
   19a64:	0e 94 26 5b 	call	0xb64c	; 0xb64c <_Z22Update_Euro_Valve_DataPh>
   19a68:	81 11       	cpse	r24, r1
   19a6a:	0c c0       	rjmp	.+24     	; 0x19a84 <_Z14Lora_Operationv+0xa4>
				{
					if(!Update_Wireless_Pump_Data(temp_id))
   19a6c:	c8 01       	movw	r24, r16
   19a6e:	0e 94 17 5e 	call	0xbc2e	; 0xbc2e <_Z25Update_Wireless_Pump_DataPh>
   19a72:	81 11       	cpse	r24, r1
   19a74:	07 c0       	rjmp	.+14     	; 0x19a84 <_Z14Lora_Operationv+0xa4>
					{
						memset(_sRuble_Parameters.Lora_Data_Rx,0,sizeof(_sRuble_Parameters.Lora_Data_Rx));  /* discard the package */
   19a76:	84 e1       	ldi	r24, 0x14	; 20
   19a78:	ed e8       	ldi	r30, 0x8D	; 141
   19a7a:	f3 e1       	ldi	r31, 0x13	; 19
   19a7c:	df 01       	movw	r26, r30
   19a7e:	1d 92       	st	X+, r1
   19a80:	8a 95       	dec	r24
   19a82:	e9 f7       	brne	.-6      	; 0x19a7e <_Z14Lora_Operationv+0x9e>
					}	
				}
			}
		}
	}
}
   19a84:	26 96       	adiw	r28, 0x06	; 6
   19a86:	0f b6       	in	r0, 0x3f	; 63
   19a88:	f8 94       	cli
   19a8a:	de bf       	out	0x3e, r29	; 62
   19a8c:	0f be       	out	0x3f, r0	; 63
   19a8e:	cd bf       	out	0x3d, r28	; 61
   19a90:	df 91       	pop	r29
   19a92:	cf 91       	pop	r28
   19a94:	1f 91       	pop	r17
   19a96:	0f 91       	pop	r16
   19a98:	08 95       	ret

00019a9a <__subsf3>:
   19a9a:	50 58       	subi	r21, 0x80	; 128

00019a9c <__addsf3>:
   19a9c:	bb 27       	eor	r27, r27
   19a9e:	aa 27       	eor	r26, r26
   19aa0:	0e d0       	rcall	.+28     	; 0x19abe <__addsf3x>
   19aa2:	70 c1       	rjmp	.+736    	; 0x19d84 <__fp_round>
   19aa4:	61 d1       	rcall	.+706    	; 0x19d68 <__fp_pscA>
   19aa6:	30 f0       	brcs	.+12     	; 0x19ab4 <__addsf3+0x18>
   19aa8:	66 d1       	rcall	.+716    	; 0x19d76 <__fp_pscB>
   19aaa:	20 f0       	brcs	.+8      	; 0x19ab4 <__addsf3+0x18>
   19aac:	31 f4       	brne	.+12     	; 0x19aba <__addsf3+0x1e>
   19aae:	9f 3f       	cpi	r25, 0xFF	; 255
   19ab0:	11 f4       	brne	.+4      	; 0x19ab6 <__addsf3+0x1a>
   19ab2:	1e f4       	brtc	.+6      	; 0x19aba <__addsf3+0x1e>
   19ab4:	56 c1       	rjmp	.+684    	; 0x19d62 <__fp_nan>
   19ab6:	0e f4       	brtc	.+2      	; 0x19aba <__addsf3+0x1e>
   19ab8:	e0 95       	com	r30
   19aba:	e7 fb       	bst	r30, 7
   19abc:	4c c1       	rjmp	.+664    	; 0x19d56 <__fp_inf>

00019abe <__addsf3x>:
   19abe:	e9 2f       	mov	r30, r25
   19ac0:	72 d1       	rcall	.+740    	; 0x19da6 <__fp_split3>
   19ac2:	80 f3       	brcs	.-32     	; 0x19aa4 <__addsf3+0x8>
   19ac4:	ba 17       	cp	r27, r26
   19ac6:	62 07       	cpc	r22, r18
   19ac8:	73 07       	cpc	r23, r19
   19aca:	84 07       	cpc	r24, r20
   19acc:	95 07       	cpc	r25, r21
   19ace:	18 f0       	brcs	.+6      	; 0x19ad6 <__addsf3x+0x18>
   19ad0:	71 f4       	brne	.+28     	; 0x19aee <__addsf3x+0x30>
   19ad2:	9e f5       	brtc	.+102    	; 0x19b3a <__addsf3x+0x7c>
   19ad4:	8a c1       	rjmp	.+788    	; 0x19dea <__fp_zero>
   19ad6:	0e f4       	brtc	.+2      	; 0x19ada <__addsf3x+0x1c>
   19ad8:	e0 95       	com	r30
   19ada:	0b 2e       	mov	r0, r27
   19adc:	ba 2f       	mov	r27, r26
   19ade:	a0 2d       	mov	r26, r0
   19ae0:	0b 01       	movw	r0, r22
   19ae2:	b9 01       	movw	r22, r18
   19ae4:	90 01       	movw	r18, r0
   19ae6:	0c 01       	movw	r0, r24
   19ae8:	ca 01       	movw	r24, r20
   19aea:	a0 01       	movw	r20, r0
   19aec:	11 24       	eor	r1, r1
   19aee:	ff 27       	eor	r31, r31
   19af0:	59 1b       	sub	r21, r25
   19af2:	99 f0       	breq	.+38     	; 0x19b1a <__addsf3x+0x5c>
   19af4:	59 3f       	cpi	r21, 0xF9	; 249
   19af6:	50 f4       	brcc	.+20     	; 0x19b0c <__addsf3x+0x4e>
   19af8:	50 3e       	cpi	r21, 0xE0	; 224
   19afa:	68 f1       	brcs	.+90     	; 0x19b56 <__addsf3x+0x98>
   19afc:	1a 16       	cp	r1, r26
   19afe:	f0 40       	sbci	r31, 0x00	; 0
   19b00:	a2 2f       	mov	r26, r18
   19b02:	23 2f       	mov	r18, r19
   19b04:	34 2f       	mov	r19, r20
   19b06:	44 27       	eor	r20, r20
   19b08:	58 5f       	subi	r21, 0xF8	; 248
   19b0a:	f3 cf       	rjmp	.-26     	; 0x19af2 <__addsf3x+0x34>
   19b0c:	46 95       	lsr	r20
   19b0e:	37 95       	ror	r19
   19b10:	27 95       	ror	r18
   19b12:	a7 95       	ror	r26
   19b14:	f0 40       	sbci	r31, 0x00	; 0
   19b16:	53 95       	inc	r21
   19b18:	c9 f7       	brne	.-14     	; 0x19b0c <__addsf3x+0x4e>
   19b1a:	7e f4       	brtc	.+30     	; 0x19b3a <__addsf3x+0x7c>
   19b1c:	1f 16       	cp	r1, r31
   19b1e:	ba 0b       	sbc	r27, r26
   19b20:	62 0b       	sbc	r22, r18
   19b22:	73 0b       	sbc	r23, r19
   19b24:	84 0b       	sbc	r24, r20
   19b26:	ba f0       	brmi	.+46     	; 0x19b56 <__addsf3x+0x98>
   19b28:	91 50       	subi	r25, 0x01	; 1
   19b2a:	a1 f0       	breq	.+40     	; 0x19b54 <__addsf3x+0x96>
   19b2c:	ff 0f       	add	r31, r31
   19b2e:	bb 1f       	adc	r27, r27
   19b30:	66 1f       	adc	r22, r22
   19b32:	77 1f       	adc	r23, r23
   19b34:	88 1f       	adc	r24, r24
   19b36:	c2 f7       	brpl	.-16     	; 0x19b28 <__addsf3x+0x6a>
   19b38:	0e c0       	rjmp	.+28     	; 0x19b56 <__addsf3x+0x98>
   19b3a:	ba 0f       	add	r27, r26
   19b3c:	62 1f       	adc	r22, r18
   19b3e:	73 1f       	adc	r23, r19
   19b40:	84 1f       	adc	r24, r20
   19b42:	48 f4       	brcc	.+18     	; 0x19b56 <__addsf3x+0x98>
   19b44:	87 95       	ror	r24
   19b46:	77 95       	ror	r23
   19b48:	67 95       	ror	r22
   19b4a:	b7 95       	ror	r27
   19b4c:	f7 95       	ror	r31
   19b4e:	9e 3f       	cpi	r25, 0xFE	; 254
   19b50:	08 f0       	brcs	.+2      	; 0x19b54 <__addsf3x+0x96>
   19b52:	b3 cf       	rjmp	.-154    	; 0x19aba <__addsf3+0x1e>
   19b54:	93 95       	inc	r25
   19b56:	88 0f       	add	r24, r24
   19b58:	08 f0       	brcs	.+2      	; 0x19b5c <__addsf3x+0x9e>
   19b5a:	99 27       	eor	r25, r25
   19b5c:	ee 0f       	add	r30, r30
   19b5e:	97 95       	ror	r25
   19b60:	87 95       	ror	r24
   19b62:	08 95       	ret

00019b64 <__cmpsf2>:
   19b64:	d4 d0       	rcall	.+424    	; 0x19d0e <__fp_cmp>
   19b66:	08 f4       	brcc	.+2      	; 0x19b6a <__cmpsf2+0x6>
   19b68:	81 e0       	ldi	r24, 0x01	; 1
   19b6a:	08 95       	ret

00019b6c <__divsf3>:
   19b6c:	0c d0       	rcall	.+24     	; 0x19b86 <__divsf3x>
   19b6e:	0a c1       	rjmp	.+532    	; 0x19d84 <__fp_round>
   19b70:	02 d1       	rcall	.+516    	; 0x19d76 <__fp_pscB>
   19b72:	40 f0       	brcs	.+16     	; 0x19b84 <__divsf3+0x18>
   19b74:	f9 d0       	rcall	.+498    	; 0x19d68 <__fp_pscA>
   19b76:	30 f0       	brcs	.+12     	; 0x19b84 <__divsf3+0x18>
   19b78:	21 f4       	brne	.+8      	; 0x19b82 <__divsf3+0x16>
   19b7a:	5f 3f       	cpi	r21, 0xFF	; 255
   19b7c:	19 f0       	breq	.+6      	; 0x19b84 <__divsf3+0x18>
   19b7e:	eb c0       	rjmp	.+470    	; 0x19d56 <__fp_inf>
   19b80:	51 11       	cpse	r21, r1
   19b82:	34 c1       	rjmp	.+616    	; 0x19dec <__fp_szero>
   19b84:	ee c0       	rjmp	.+476    	; 0x19d62 <__fp_nan>

00019b86 <__divsf3x>:
   19b86:	0f d1       	rcall	.+542    	; 0x19da6 <__fp_split3>
   19b88:	98 f3       	brcs	.-26     	; 0x19b70 <__divsf3+0x4>

00019b8a <__divsf3_pse>:
   19b8a:	99 23       	and	r25, r25
   19b8c:	c9 f3       	breq	.-14     	; 0x19b80 <__divsf3+0x14>
   19b8e:	55 23       	and	r21, r21
   19b90:	b1 f3       	breq	.-20     	; 0x19b7e <__divsf3+0x12>
   19b92:	95 1b       	sub	r25, r21
   19b94:	55 0b       	sbc	r21, r21
   19b96:	bb 27       	eor	r27, r27
   19b98:	aa 27       	eor	r26, r26
   19b9a:	62 17       	cp	r22, r18
   19b9c:	73 07       	cpc	r23, r19
   19b9e:	84 07       	cpc	r24, r20
   19ba0:	38 f0       	brcs	.+14     	; 0x19bb0 <__divsf3_pse+0x26>
   19ba2:	9f 5f       	subi	r25, 0xFF	; 255
   19ba4:	5f 4f       	sbci	r21, 0xFF	; 255
   19ba6:	22 0f       	add	r18, r18
   19ba8:	33 1f       	adc	r19, r19
   19baa:	44 1f       	adc	r20, r20
   19bac:	aa 1f       	adc	r26, r26
   19bae:	a9 f3       	breq	.-22     	; 0x19b9a <__divsf3_pse+0x10>
   19bb0:	33 d0       	rcall	.+102    	; 0x19c18 <__divsf3_pse+0x8e>
   19bb2:	0e 2e       	mov	r0, r30
   19bb4:	3a f0       	brmi	.+14     	; 0x19bc4 <__divsf3_pse+0x3a>
   19bb6:	e0 e8       	ldi	r30, 0x80	; 128
   19bb8:	30 d0       	rcall	.+96     	; 0x19c1a <__divsf3_pse+0x90>
   19bba:	91 50       	subi	r25, 0x01	; 1
   19bbc:	50 40       	sbci	r21, 0x00	; 0
   19bbe:	e6 95       	lsr	r30
   19bc0:	00 1c       	adc	r0, r0
   19bc2:	ca f7       	brpl	.-14     	; 0x19bb6 <__divsf3_pse+0x2c>
   19bc4:	29 d0       	rcall	.+82     	; 0x19c18 <__divsf3_pse+0x8e>
   19bc6:	fe 2f       	mov	r31, r30
   19bc8:	27 d0       	rcall	.+78     	; 0x19c18 <__divsf3_pse+0x8e>
   19bca:	66 0f       	add	r22, r22
   19bcc:	77 1f       	adc	r23, r23
   19bce:	88 1f       	adc	r24, r24
   19bd0:	bb 1f       	adc	r27, r27
   19bd2:	26 17       	cp	r18, r22
   19bd4:	37 07       	cpc	r19, r23
   19bd6:	48 07       	cpc	r20, r24
   19bd8:	ab 07       	cpc	r26, r27
   19bda:	b0 e8       	ldi	r27, 0x80	; 128
   19bdc:	09 f0       	breq	.+2      	; 0x19be0 <__divsf3_pse+0x56>
   19bde:	bb 0b       	sbc	r27, r27
   19be0:	80 2d       	mov	r24, r0
   19be2:	bf 01       	movw	r22, r30
   19be4:	ff 27       	eor	r31, r31
   19be6:	93 58       	subi	r25, 0x83	; 131
   19be8:	5f 4f       	sbci	r21, 0xFF	; 255
   19bea:	2a f0       	brmi	.+10     	; 0x19bf6 <__divsf3_pse+0x6c>
   19bec:	9e 3f       	cpi	r25, 0xFE	; 254
   19bee:	51 05       	cpc	r21, r1
   19bf0:	68 f0       	brcs	.+26     	; 0x19c0c <__divsf3_pse+0x82>
   19bf2:	b1 c0       	rjmp	.+354    	; 0x19d56 <__fp_inf>
   19bf4:	fb c0       	rjmp	.+502    	; 0x19dec <__fp_szero>
   19bf6:	5f 3f       	cpi	r21, 0xFF	; 255
   19bf8:	ec f3       	brlt	.-6      	; 0x19bf4 <__divsf3_pse+0x6a>
   19bfa:	98 3e       	cpi	r25, 0xE8	; 232
   19bfc:	dc f3       	brlt	.-10     	; 0x19bf4 <__divsf3_pse+0x6a>
   19bfe:	86 95       	lsr	r24
   19c00:	77 95       	ror	r23
   19c02:	67 95       	ror	r22
   19c04:	b7 95       	ror	r27
   19c06:	f7 95       	ror	r31
   19c08:	9f 5f       	subi	r25, 0xFF	; 255
   19c0a:	c9 f7       	brne	.-14     	; 0x19bfe <__divsf3_pse+0x74>
   19c0c:	88 0f       	add	r24, r24
   19c0e:	91 1d       	adc	r25, r1
   19c10:	96 95       	lsr	r25
   19c12:	87 95       	ror	r24
   19c14:	97 f9       	bld	r25, 7
   19c16:	08 95       	ret
   19c18:	e1 e0       	ldi	r30, 0x01	; 1
   19c1a:	66 0f       	add	r22, r22
   19c1c:	77 1f       	adc	r23, r23
   19c1e:	88 1f       	adc	r24, r24
   19c20:	bb 1f       	adc	r27, r27
   19c22:	62 17       	cp	r22, r18
   19c24:	73 07       	cpc	r23, r19
   19c26:	84 07       	cpc	r24, r20
   19c28:	ba 07       	cpc	r27, r26
   19c2a:	20 f0       	brcs	.+8      	; 0x19c34 <__divsf3_pse+0xaa>
   19c2c:	62 1b       	sub	r22, r18
   19c2e:	73 0b       	sbc	r23, r19
   19c30:	84 0b       	sbc	r24, r20
   19c32:	ba 0b       	sbc	r27, r26
   19c34:	ee 1f       	adc	r30, r30
   19c36:	88 f7       	brcc	.-30     	; 0x19c1a <__divsf3_pse+0x90>
   19c38:	e0 95       	com	r30
   19c3a:	08 95       	ret

00019c3c <__fixunssfsi>:
   19c3c:	bc d0       	rcall	.+376    	; 0x19db6 <__fp_splitA>
   19c3e:	88 f0       	brcs	.+34     	; 0x19c62 <__fixunssfsi+0x26>
   19c40:	9f 57       	subi	r25, 0x7F	; 127
   19c42:	90 f0       	brcs	.+36     	; 0x19c68 <__fixunssfsi+0x2c>
   19c44:	b9 2f       	mov	r27, r25
   19c46:	99 27       	eor	r25, r25
   19c48:	b7 51       	subi	r27, 0x17	; 23
   19c4a:	a0 f0       	brcs	.+40     	; 0x19c74 <__fixunssfsi+0x38>
   19c4c:	d1 f0       	breq	.+52     	; 0x19c82 <__fixunssfsi+0x46>
   19c4e:	66 0f       	add	r22, r22
   19c50:	77 1f       	adc	r23, r23
   19c52:	88 1f       	adc	r24, r24
   19c54:	99 1f       	adc	r25, r25
   19c56:	1a f0       	brmi	.+6      	; 0x19c5e <__fixunssfsi+0x22>
   19c58:	ba 95       	dec	r27
   19c5a:	c9 f7       	brne	.-14     	; 0x19c4e <__fixunssfsi+0x12>
   19c5c:	12 c0       	rjmp	.+36     	; 0x19c82 <__fixunssfsi+0x46>
   19c5e:	b1 30       	cpi	r27, 0x01	; 1
   19c60:	81 f0       	breq	.+32     	; 0x19c82 <__fixunssfsi+0x46>
   19c62:	c3 d0       	rcall	.+390    	; 0x19dea <__fp_zero>
   19c64:	b1 e0       	ldi	r27, 0x01	; 1
   19c66:	08 95       	ret
   19c68:	c0 c0       	rjmp	.+384    	; 0x19dea <__fp_zero>
   19c6a:	67 2f       	mov	r22, r23
   19c6c:	78 2f       	mov	r23, r24
   19c6e:	88 27       	eor	r24, r24
   19c70:	b8 5f       	subi	r27, 0xF8	; 248
   19c72:	39 f0       	breq	.+14     	; 0x19c82 <__fixunssfsi+0x46>
   19c74:	b9 3f       	cpi	r27, 0xF9	; 249
   19c76:	cc f3       	brlt	.-14     	; 0x19c6a <__fixunssfsi+0x2e>
   19c78:	86 95       	lsr	r24
   19c7a:	77 95       	ror	r23
   19c7c:	67 95       	ror	r22
   19c7e:	b3 95       	inc	r27
   19c80:	d9 f7       	brne	.-10     	; 0x19c78 <__fixunssfsi+0x3c>
   19c82:	3e f4       	brtc	.+14     	; 0x19c92 <__fixunssfsi+0x56>
   19c84:	90 95       	com	r25
   19c86:	80 95       	com	r24
   19c88:	70 95       	com	r23
   19c8a:	61 95       	neg	r22
   19c8c:	7f 4f       	sbci	r23, 0xFF	; 255
   19c8e:	8f 4f       	sbci	r24, 0xFF	; 255
   19c90:	9f 4f       	sbci	r25, 0xFF	; 255
   19c92:	08 95       	ret

00019c94 <__floatunsisf>:
   19c94:	e8 94       	clt
   19c96:	09 c0       	rjmp	.+18     	; 0x19caa <__floatsisf+0x12>

00019c98 <__floatsisf>:
   19c98:	97 fb       	bst	r25, 7
   19c9a:	3e f4       	brtc	.+14     	; 0x19caa <__floatsisf+0x12>
   19c9c:	90 95       	com	r25
   19c9e:	80 95       	com	r24
   19ca0:	70 95       	com	r23
   19ca2:	61 95       	neg	r22
   19ca4:	7f 4f       	sbci	r23, 0xFF	; 255
   19ca6:	8f 4f       	sbci	r24, 0xFF	; 255
   19ca8:	9f 4f       	sbci	r25, 0xFF	; 255
   19caa:	99 23       	and	r25, r25
   19cac:	a9 f0       	breq	.+42     	; 0x19cd8 <__floatsisf+0x40>
   19cae:	f9 2f       	mov	r31, r25
   19cb0:	96 e9       	ldi	r25, 0x96	; 150
   19cb2:	bb 27       	eor	r27, r27
   19cb4:	93 95       	inc	r25
   19cb6:	f6 95       	lsr	r31
   19cb8:	87 95       	ror	r24
   19cba:	77 95       	ror	r23
   19cbc:	67 95       	ror	r22
   19cbe:	b7 95       	ror	r27
   19cc0:	f1 11       	cpse	r31, r1
   19cc2:	f8 cf       	rjmp	.-16     	; 0x19cb4 <__floatsisf+0x1c>
   19cc4:	fa f4       	brpl	.+62     	; 0x19d04 <__floatsisf+0x6c>
   19cc6:	bb 0f       	add	r27, r27
   19cc8:	11 f4       	brne	.+4      	; 0x19cce <__floatsisf+0x36>
   19cca:	60 ff       	sbrs	r22, 0
   19ccc:	1b c0       	rjmp	.+54     	; 0x19d04 <__floatsisf+0x6c>
   19cce:	6f 5f       	subi	r22, 0xFF	; 255
   19cd0:	7f 4f       	sbci	r23, 0xFF	; 255
   19cd2:	8f 4f       	sbci	r24, 0xFF	; 255
   19cd4:	9f 4f       	sbci	r25, 0xFF	; 255
   19cd6:	16 c0       	rjmp	.+44     	; 0x19d04 <__floatsisf+0x6c>
   19cd8:	88 23       	and	r24, r24
   19cda:	11 f0       	breq	.+4      	; 0x19ce0 <__floatsisf+0x48>
   19cdc:	96 e9       	ldi	r25, 0x96	; 150
   19cde:	11 c0       	rjmp	.+34     	; 0x19d02 <__floatsisf+0x6a>
   19ce0:	77 23       	and	r23, r23
   19ce2:	21 f0       	breq	.+8      	; 0x19cec <__floatsisf+0x54>
   19ce4:	9e e8       	ldi	r25, 0x8E	; 142
   19ce6:	87 2f       	mov	r24, r23
   19ce8:	76 2f       	mov	r23, r22
   19cea:	05 c0       	rjmp	.+10     	; 0x19cf6 <__floatsisf+0x5e>
   19cec:	66 23       	and	r22, r22
   19cee:	71 f0       	breq	.+28     	; 0x19d0c <__floatsisf+0x74>
   19cf0:	96 e8       	ldi	r25, 0x86	; 134
   19cf2:	86 2f       	mov	r24, r22
   19cf4:	70 e0       	ldi	r23, 0x00	; 0
   19cf6:	60 e0       	ldi	r22, 0x00	; 0
   19cf8:	2a f0       	brmi	.+10     	; 0x19d04 <__floatsisf+0x6c>
   19cfa:	9a 95       	dec	r25
   19cfc:	66 0f       	add	r22, r22
   19cfe:	77 1f       	adc	r23, r23
   19d00:	88 1f       	adc	r24, r24
   19d02:	da f7       	brpl	.-10     	; 0x19cfa <__floatsisf+0x62>
   19d04:	88 0f       	add	r24, r24
   19d06:	96 95       	lsr	r25
   19d08:	87 95       	ror	r24
   19d0a:	97 f9       	bld	r25, 7
   19d0c:	08 95       	ret

00019d0e <__fp_cmp>:
   19d0e:	99 0f       	add	r25, r25
   19d10:	00 08       	sbc	r0, r0
   19d12:	55 0f       	add	r21, r21
   19d14:	aa 0b       	sbc	r26, r26
   19d16:	e0 e8       	ldi	r30, 0x80	; 128
   19d18:	fe ef       	ldi	r31, 0xFE	; 254
   19d1a:	16 16       	cp	r1, r22
   19d1c:	17 06       	cpc	r1, r23
   19d1e:	e8 07       	cpc	r30, r24
   19d20:	f9 07       	cpc	r31, r25
   19d22:	c0 f0       	brcs	.+48     	; 0x19d54 <__fp_cmp+0x46>
   19d24:	12 16       	cp	r1, r18
   19d26:	13 06       	cpc	r1, r19
   19d28:	e4 07       	cpc	r30, r20
   19d2a:	f5 07       	cpc	r31, r21
   19d2c:	98 f0       	brcs	.+38     	; 0x19d54 <__fp_cmp+0x46>
   19d2e:	62 1b       	sub	r22, r18
   19d30:	73 0b       	sbc	r23, r19
   19d32:	84 0b       	sbc	r24, r20
   19d34:	95 0b       	sbc	r25, r21
   19d36:	39 f4       	brne	.+14     	; 0x19d46 <__fp_cmp+0x38>
   19d38:	0a 26       	eor	r0, r26
   19d3a:	61 f0       	breq	.+24     	; 0x19d54 <__fp_cmp+0x46>
   19d3c:	23 2b       	or	r18, r19
   19d3e:	24 2b       	or	r18, r20
   19d40:	25 2b       	or	r18, r21
   19d42:	21 f4       	brne	.+8      	; 0x19d4c <__fp_cmp+0x3e>
   19d44:	08 95       	ret
   19d46:	0a 26       	eor	r0, r26
   19d48:	09 f4       	brne	.+2      	; 0x19d4c <__fp_cmp+0x3e>
   19d4a:	a1 40       	sbci	r26, 0x01	; 1
   19d4c:	a6 95       	lsr	r26
   19d4e:	8f ef       	ldi	r24, 0xFF	; 255
   19d50:	81 1d       	adc	r24, r1
   19d52:	81 1d       	adc	r24, r1
   19d54:	08 95       	ret

00019d56 <__fp_inf>:
   19d56:	97 f9       	bld	r25, 7
   19d58:	9f 67       	ori	r25, 0x7F	; 127
   19d5a:	80 e8       	ldi	r24, 0x80	; 128
   19d5c:	70 e0       	ldi	r23, 0x00	; 0
   19d5e:	60 e0       	ldi	r22, 0x00	; 0
   19d60:	08 95       	ret

00019d62 <__fp_nan>:
   19d62:	9f ef       	ldi	r25, 0xFF	; 255
   19d64:	80 ec       	ldi	r24, 0xC0	; 192
   19d66:	08 95       	ret

00019d68 <__fp_pscA>:
   19d68:	00 24       	eor	r0, r0
   19d6a:	0a 94       	dec	r0
   19d6c:	16 16       	cp	r1, r22
   19d6e:	17 06       	cpc	r1, r23
   19d70:	18 06       	cpc	r1, r24
   19d72:	09 06       	cpc	r0, r25
   19d74:	08 95       	ret

00019d76 <__fp_pscB>:
   19d76:	00 24       	eor	r0, r0
   19d78:	0a 94       	dec	r0
   19d7a:	12 16       	cp	r1, r18
   19d7c:	13 06       	cpc	r1, r19
   19d7e:	14 06       	cpc	r1, r20
   19d80:	05 06       	cpc	r0, r21
   19d82:	08 95       	ret

00019d84 <__fp_round>:
   19d84:	09 2e       	mov	r0, r25
   19d86:	03 94       	inc	r0
   19d88:	00 0c       	add	r0, r0
   19d8a:	11 f4       	brne	.+4      	; 0x19d90 <__fp_round+0xc>
   19d8c:	88 23       	and	r24, r24
   19d8e:	52 f0       	brmi	.+20     	; 0x19da4 <__fp_round+0x20>
   19d90:	bb 0f       	add	r27, r27
   19d92:	40 f4       	brcc	.+16     	; 0x19da4 <__fp_round+0x20>
   19d94:	bf 2b       	or	r27, r31
   19d96:	11 f4       	brne	.+4      	; 0x19d9c <__fp_round+0x18>
   19d98:	60 ff       	sbrs	r22, 0
   19d9a:	04 c0       	rjmp	.+8      	; 0x19da4 <__fp_round+0x20>
   19d9c:	6f 5f       	subi	r22, 0xFF	; 255
   19d9e:	7f 4f       	sbci	r23, 0xFF	; 255
   19da0:	8f 4f       	sbci	r24, 0xFF	; 255
   19da2:	9f 4f       	sbci	r25, 0xFF	; 255
   19da4:	08 95       	ret

00019da6 <__fp_split3>:
   19da6:	57 fd       	sbrc	r21, 7
   19da8:	90 58       	subi	r25, 0x80	; 128
   19daa:	44 0f       	add	r20, r20
   19dac:	55 1f       	adc	r21, r21
   19dae:	59 f0       	breq	.+22     	; 0x19dc6 <__fp_splitA+0x10>
   19db0:	5f 3f       	cpi	r21, 0xFF	; 255
   19db2:	71 f0       	breq	.+28     	; 0x19dd0 <__fp_splitA+0x1a>
   19db4:	47 95       	ror	r20

00019db6 <__fp_splitA>:
   19db6:	88 0f       	add	r24, r24
   19db8:	97 fb       	bst	r25, 7
   19dba:	99 1f       	adc	r25, r25
   19dbc:	61 f0       	breq	.+24     	; 0x19dd6 <__fp_splitA+0x20>
   19dbe:	9f 3f       	cpi	r25, 0xFF	; 255
   19dc0:	79 f0       	breq	.+30     	; 0x19de0 <__fp_splitA+0x2a>
   19dc2:	87 95       	ror	r24
   19dc4:	08 95       	ret
   19dc6:	12 16       	cp	r1, r18
   19dc8:	13 06       	cpc	r1, r19
   19dca:	14 06       	cpc	r1, r20
   19dcc:	55 1f       	adc	r21, r21
   19dce:	f2 cf       	rjmp	.-28     	; 0x19db4 <__fp_split3+0xe>
   19dd0:	46 95       	lsr	r20
   19dd2:	f1 df       	rcall	.-30     	; 0x19db6 <__fp_splitA>
   19dd4:	08 c0       	rjmp	.+16     	; 0x19de6 <__fp_splitA+0x30>
   19dd6:	16 16       	cp	r1, r22
   19dd8:	17 06       	cpc	r1, r23
   19dda:	18 06       	cpc	r1, r24
   19ddc:	99 1f       	adc	r25, r25
   19dde:	f1 cf       	rjmp	.-30     	; 0x19dc2 <__fp_splitA+0xc>
   19de0:	86 95       	lsr	r24
   19de2:	71 05       	cpc	r23, r1
   19de4:	61 05       	cpc	r22, r1
   19de6:	08 94       	sec
   19de8:	08 95       	ret

00019dea <__fp_zero>:
   19dea:	e8 94       	clt

00019dec <__fp_szero>:
   19dec:	bb 27       	eor	r27, r27
   19dee:	66 27       	eor	r22, r22
   19df0:	77 27       	eor	r23, r23
   19df2:	cb 01       	movw	r24, r22
   19df4:	97 f9       	bld	r25, 7
   19df6:	08 95       	ret

00019df8 <__gesf2>:
   19df8:	8a df       	rcall	.-236    	; 0x19d0e <__fp_cmp>
   19dfa:	08 f4       	brcc	.+2      	; 0x19dfe <__gesf2+0x6>
   19dfc:	8f ef       	ldi	r24, 0xFF	; 255
   19dfe:	08 95       	ret

00019e00 <__mulsf3>:
   19e00:	0b d0       	rcall	.+22     	; 0x19e18 <__mulsf3x>
   19e02:	c0 cf       	rjmp	.-128    	; 0x19d84 <__fp_round>
   19e04:	b1 df       	rcall	.-158    	; 0x19d68 <__fp_pscA>
   19e06:	28 f0       	brcs	.+10     	; 0x19e12 <__mulsf3+0x12>
   19e08:	b6 df       	rcall	.-148    	; 0x19d76 <__fp_pscB>
   19e0a:	18 f0       	brcs	.+6      	; 0x19e12 <__mulsf3+0x12>
   19e0c:	95 23       	and	r25, r21
   19e0e:	09 f0       	breq	.+2      	; 0x19e12 <__mulsf3+0x12>
   19e10:	a2 cf       	rjmp	.-188    	; 0x19d56 <__fp_inf>
   19e12:	a7 cf       	rjmp	.-178    	; 0x19d62 <__fp_nan>
   19e14:	11 24       	eor	r1, r1
   19e16:	ea cf       	rjmp	.-44     	; 0x19dec <__fp_szero>

00019e18 <__mulsf3x>:
   19e18:	c6 df       	rcall	.-116    	; 0x19da6 <__fp_split3>
   19e1a:	a0 f3       	brcs	.-24     	; 0x19e04 <__mulsf3+0x4>

00019e1c <__mulsf3_pse>:
   19e1c:	95 9f       	mul	r25, r21
   19e1e:	d1 f3       	breq	.-12     	; 0x19e14 <__mulsf3+0x14>
   19e20:	95 0f       	add	r25, r21
   19e22:	50 e0       	ldi	r21, 0x00	; 0
   19e24:	55 1f       	adc	r21, r21
   19e26:	62 9f       	mul	r22, r18
   19e28:	f0 01       	movw	r30, r0
   19e2a:	72 9f       	mul	r23, r18
   19e2c:	bb 27       	eor	r27, r27
   19e2e:	f0 0d       	add	r31, r0
   19e30:	b1 1d       	adc	r27, r1
   19e32:	63 9f       	mul	r22, r19
   19e34:	aa 27       	eor	r26, r26
   19e36:	f0 0d       	add	r31, r0
   19e38:	b1 1d       	adc	r27, r1
   19e3a:	aa 1f       	adc	r26, r26
   19e3c:	64 9f       	mul	r22, r20
   19e3e:	66 27       	eor	r22, r22
   19e40:	b0 0d       	add	r27, r0
   19e42:	a1 1d       	adc	r26, r1
   19e44:	66 1f       	adc	r22, r22
   19e46:	82 9f       	mul	r24, r18
   19e48:	22 27       	eor	r18, r18
   19e4a:	b0 0d       	add	r27, r0
   19e4c:	a1 1d       	adc	r26, r1
   19e4e:	62 1f       	adc	r22, r18
   19e50:	73 9f       	mul	r23, r19
   19e52:	b0 0d       	add	r27, r0
   19e54:	a1 1d       	adc	r26, r1
   19e56:	62 1f       	adc	r22, r18
   19e58:	83 9f       	mul	r24, r19
   19e5a:	a0 0d       	add	r26, r0
   19e5c:	61 1d       	adc	r22, r1
   19e5e:	22 1f       	adc	r18, r18
   19e60:	74 9f       	mul	r23, r20
   19e62:	33 27       	eor	r19, r19
   19e64:	a0 0d       	add	r26, r0
   19e66:	61 1d       	adc	r22, r1
   19e68:	23 1f       	adc	r18, r19
   19e6a:	84 9f       	mul	r24, r20
   19e6c:	60 0d       	add	r22, r0
   19e6e:	21 1d       	adc	r18, r1
   19e70:	82 2f       	mov	r24, r18
   19e72:	76 2f       	mov	r23, r22
   19e74:	6a 2f       	mov	r22, r26
   19e76:	11 24       	eor	r1, r1
   19e78:	9f 57       	subi	r25, 0x7F	; 127
   19e7a:	50 40       	sbci	r21, 0x00	; 0
   19e7c:	8a f0       	brmi	.+34     	; 0x19ea0 <__mulsf3_pse+0x84>
   19e7e:	e1 f0       	breq	.+56     	; 0x19eb8 <__mulsf3_pse+0x9c>
   19e80:	88 23       	and	r24, r24
   19e82:	4a f0       	brmi	.+18     	; 0x19e96 <__mulsf3_pse+0x7a>
   19e84:	ee 0f       	add	r30, r30
   19e86:	ff 1f       	adc	r31, r31
   19e88:	bb 1f       	adc	r27, r27
   19e8a:	66 1f       	adc	r22, r22
   19e8c:	77 1f       	adc	r23, r23
   19e8e:	88 1f       	adc	r24, r24
   19e90:	91 50       	subi	r25, 0x01	; 1
   19e92:	50 40       	sbci	r21, 0x00	; 0
   19e94:	a9 f7       	brne	.-22     	; 0x19e80 <__mulsf3_pse+0x64>
   19e96:	9e 3f       	cpi	r25, 0xFE	; 254
   19e98:	51 05       	cpc	r21, r1
   19e9a:	70 f0       	brcs	.+28     	; 0x19eb8 <__mulsf3_pse+0x9c>
   19e9c:	5c cf       	rjmp	.-328    	; 0x19d56 <__fp_inf>
   19e9e:	a6 cf       	rjmp	.-180    	; 0x19dec <__fp_szero>
   19ea0:	5f 3f       	cpi	r21, 0xFF	; 255
   19ea2:	ec f3       	brlt	.-6      	; 0x19e9e <__mulsf3_pse+0x82>
   19ea4:	98 3e       	cpi	r25, 0xE8	; 232
   19ea6:	dc f3       	brlt	.-10     	; 0x19e9e <__mulsf3_pse+0x82>
   19ea8:	86 95       	lsr	r24
   19eaa:	77 95       	ror	r23
   19eac:	67 95       	ror	r22
   19eae:	b7 95       	ror	r27
   19eb0:	f7 95       	ror	r31
   19eb2:	e7 95       	ror	r30
   19eb4:	9f 5f       	subi	r25, 0xFF	; 255
   19eb6:	c1 f7       	brne	.-16     	; 0x19ea8 <__mulsf3_pse+0x8c>
   19eb8:	fe 2b       	or	r31, r30
   19eba:	88 0f       	add	r24, r24
   19ebc:	91 1d       	adc	r25, r1
   19ebe:	96 95       	lsr	r25
   19ec0:	87 95       	ror	r24
   19ec2:	97 f9       	bld	r25, 7
   19ec4:	08 95       	ret

00019ec6 <_ZN14HardwareSerial9availableEv>:
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
   19ec6:	fc 01       	movw	r30, r24
   19ec8:	91 8d       	ldd	r25, Z+25	; 0x19
   19eca:	22 8d       	ldd	r18, Z+26	; 0x1a
   19ecc:	89 2f       	mov	r24, r25
   19ece:	90 e0       	ldi	r25, 0x00	; 0
   19ed0:	80 53       	subi	r24, 0x30	; 48
   19ed2:	9f 4f       	sbci	r25, 0xFF	; 255
   19ed4:	82 1b       	sub	r24, r18
   19ed6:	91 09       	sbc	r25, r1
   19ed8:	8f 70       	andi	r24, 0x0F	; 15
   19eda:	99 27       	eor	r25, r25
   19edc:	2d e0       	ldi	r18, 0x0D	; 13
   19ede:	ac 01       	movw	r20, r24
   19ee0:	24 9f       	mul	r18, r20
   19ee2:	c0 01       	movw	r24, r0
   19ee4:	25 9f       	mul	r18, r21
   19ee6:	90 0d       	add	r25, r0
   19ee8:	11 24       	eor	r1, r1
   19eea:	08 95       	ret

00019eec <_ZN14HardwareSerial4peekEv>:
   19eec:	fc 01       	movw	r30, r24
   19eee:	91 8d       	ldd	r25, Z+25	; 0x19
   19ef0:	82 8d       	ldd	r24, Z+26	; 0x1a
   19ef2:	98 17       	cp	r25, r24
   19ef4:	31 f0       	breq	.+12     	; 0x19f02 <_ZN14HardwareSerial4peekEv+0x16>
   19ef6:	82 8d       	ldd	r24, Z+26	; 0x1a
   19ef8:	e8 0f       	add	r30, r24
   19efa:	f1 1d       	adc	r31, r1
   19efc:	85 8d       	ldd	r24, Z+29	; 0x1d
   19efe:	90 e0       	ldi	r25, 0x00	; 0
   19f00:	08 95       	ret
   19f02:	8f ef       	ldi	r24, 0xFF	; 255
   19f04:	9f ef       	ldi	r25, 0xFF	; 255
   19f06:	08 95       	ret

00019f08 <_ZN14HardwareSerial4readEv>:
   19f08:	fc 01       	movw	r30, r24
   19f0a:	91 8d       	ldd	r25, Z+25	; 0x19
   19f0c:	82 8d       	ldd	r24, Z+26	; 0x1a
   19f0e:	98 17       	cp	r25, r24
   19f10:	81 f0       	breq	.+32     	; 0x19f32 <_ZN14HardwareSerial4readEv+0x2a>
   19f12:	82 8d       	ldd	r24, Z+26	; 0x1a
   19f14:	df 01       	movw	r26, r30
   19f16:	a8 0f       	add	r26, r24
   19f18:	b1 1d       	adc	r27, r1
   19f1a:	5d 96       	adiw	r26, 0x1d	; 29
   19f1c:	8c 91       	ld	r24, X
   19f1e:	92 8d       	ldd	r25, Z+26	; 0x1a
   19f20:	9f 5f       	subi	r25, 0xFF	; 255
   19f22:	9f 70       	andi	r25, 0x0F	; 15
   19f24:	2d e0       	ldi	r18, 0x0D	; 13
   19f26:	92 9f       	mul	r25, r18
   19f28:	90 2d       	mov	r25, r0
   19f2a:	11 24       	eor	r1, r1
   19f2c:	92 8f       	std	Z+26, r25	; 0x1a
   19f2e:	90 e0       	ldi	r25, 0x00	; 0
   19f30:	08 95       	ret
   19f32:	8f ef       	ldi	r24, 0xFF	; 255
   19f34:	9f ef       	ldi	r25, 0xFF	; 255
   19f36:	08 95       	ret

00019f38 <_ZN14HardwareSerial17availableForWriteEv>:
   19f38:	fc 01       	movw	r30, r24
   19f3a:	53 8d       	ldd	r21, Z+27	; 0x1b
   19f3c:	44 8d       	ldd	r20, Z+28	; 0x1c
   19f3e:	25 2f       	mov	r18, r21
   19f40:	30 e0       	ldi	r19, 0x00	; 0
   19f42:	84 2f       	mov	r24, r20
   19f44:	90 e0       	ldi	r25, 0x00	; 0
   19f46:	82 1b       	sub	r24, r18
   19f48:	93 0b       	sbc	r25, r19
   19f4a:	54 17       	cp	r21, r20
   19f4c:	18 f0       	brcs	.+6      	; 0x19f54 <_ZN14HardwareSerial17availableForWriteEv+0x1c>
   19f4e:	81 53       	subi	r24, 0x31	; 49
   19f50:	9f 4f       	sbci	r25, 0xFF	; 255
   19f52:	08 95       	ret
   19f54:	01 97       	sbiw	r24, 0x01	; 1
   19f56:	08 95       	ret

00019f58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
   19f58:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
   19f5a:	84 8d       	ldd	r24, Z+28	; 0x1c
   19f5c:	df 01       	movw	r26, r30
   19f5e:	a8 0f       	add	r26, r24
   19f60:	b1 1d       	adc	r27, r1
   19f62:	a3 51       	subi	r26, 0x13	; 19
   19f64:	bf 4f       	sbci	r27, 0xFF	; 255
   19f66:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
   19f68:	84 8d       	ldd	r24, Z+28	; 0x1c
   19f6a:	90 e0       	ldi	r25, 0x00	; 0
   19f6c:	01 96       	adiw	r24, 0x01	; 1
   19f6e:	8f 70       	andi	r24, 0x0F	; 15
   19f70:	99 27       	eor	r25, r25
   19f72:	9d e0       	ldi	r25, 0x0D	; 13
   19f74:	89 9f       	mul	r24, r25
   19f76:	80 2d       	mov	r24, r0
   19f78:	11 24       	eor	r1, r1
   19f7a:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
   19f7c:	a6 89       	ldd	r26, Z+22	; 0x16
   19f7e:	b7 89       	ldd	r27, Z+23	; 0x17
   19f80:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   19f82:	a0 89       	ldd	r26, Z+16	; 0x10
   19f84:	b1 89       	ldd	r27, Z+17	; 0x11
   19f86:	8c 91       	ld	r24, X
   19f88:	83 70       	andi	r24, 0x03	; 3
   19f8a:	80 64       	ori	r24, 0x40	; 64
   19f8c:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
   19f8e:	93 8d       	ldd	r25, Z+27	; 0x1b
   19f90:	84 8d       	ldd	r24, Z+28	; 0x1c
   19f92:	98 13       	cpse	r25, r24
   19f94:	06 c0       	rjmp	.+12     	; 0x19fa2 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x4a>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
   19f96:	02 88       	ldd	r0, Z+18	; 0x12
   19f98:	f3 89       	ldd	r31, Z+19	; 0x13
   19f9a:	e0 2d       	mov	r30, r0
   19f9c:	80 81       	ld	r24, Z
   19f9e:	8f 7d       	andi	r24, 0xDF	; 223
   19fa0:	80 83       	st	Z, r24
   19fa2:	08 95       	ret

00019fa4 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
   19fa4:	0f 93       	push	r16
   19fa6:	1f 93       	push	r17
   19fa8:	cf 93       	push	r28
   19faa:	df 93       	push	r29
   19fac:	ec 01       	movw	r28, r24
  _written = true;
   19fae:	81 e0       	ldi	r24, 0x01	; 1
   19fb0:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
   19fb2:	9b 8d       	ldd	r25, Y+27	; 0x1b
   19fb4:	8c 8d       	ldd	r24, Y+28	; 0x1c
   19fb6:	98 13       	cpse	r25, r24
   19fb8:	05 c0       	rjmp	.+10     	; 0x19fc4 <_ZN14HardwareSerial5writeEh+0x20>
   19fba:	e8 89       	ldd	r30, Y+16	; 0x10
   19fbc:	f9 89       	ldd	r31, Y+17	; 0x11
   19fbe:	80 81       	ld	r24, Z
   19fc0:	85 fd       	sbrc	r24, 5
   19fc2:	27 c0       	rjmp	.+78     	; 0x1a012 <_ZN14HardwareSerial5writeEh+0x6e>
   19fc4:	06 2f       	mov	r16, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
   19fc6:	8b 8d       	ldd	r24, Y+27	; 0x1b
   19fc8:	90 e0       	ldi	r25, 0x00	; 0
   19fca:	01 96       	adiw	r24, 0x01	; 1
   19fcc:	8f 70       	andi	r24, 0x0F	; 15
   19fce:	99 27       	eor	r25, r25
   19fd0:	1d e0       	ldi	r17, 0x0D	; 13
   19fd2:	81 9f       	mul	r24, r17
   19fd4:	10 2d       	mov	r17, r0
   19fd6:	11 24       	eor	r1, r1
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
   19fd8:	8c 8d       	ldd	r24, Y+28	; 0x1c
   19fda:	18 13       	cpse	r17, r24
   19fdc:	0b c0       	rjmp	.+22     	; 0x19ff4 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
   19fde:	0f b6       	in	r0, 0x3f	; 63
   19fe0:	07 fc       	sbrc	r0, 7
   19fe2:	fa cf       	rjmp	.-12     	; 0x19fd8 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
   19fe4:	e8 89       	ldd	r30, Y+16	; 0x10
   19fe6:	f9 89       	ldd	r31, Y+17	; 0x11
   19fe8:	80 81       	ld	r24, Z
   19fea:	85 ff       	sbrs	r24, 5
   19fec:	f5 cf       	rjmp	.-22     	; 0x19fd8 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
   19fee:	ce 01       	movw	r24, r28
   19ff0:	b3 df       	rcall	.-154    	; 0x19f58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   19ff2:	f2 cf       	rjmp	.-28     	; 0x19fd8 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
   19ff4:	8b 8d       	ldd	r24, Y+27	; 0x1b
   19ff6:	fe 01       	movw	r30, r28
   19ff8:	e8 0f       	add	r30, r24
   19ffa:	f1 1d       	adc	r31, r1
   19ffc:	e3 51       	subi	r30, 0x13	; 19
   19ffe:	ff 4f       	sbci	r31, 0xFF	; 255
   1a000:	00 83       	st	Z, r16

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a002:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
   1a004:	f8 94       	cli
    _tx_buffer_head = i;
   1a006:	1b 8f       	std	Y+27, r17	; 0x1b
    sbi(*_ucsrb, UDRIE0);
   1a008:	ea 89       	ldd	r30, Y+18	; 0x12
   1a00a:	fb 89       	ldd	r31, Y+19	; 0x13
   1a00c:	80 81       	ld	r24, Z
   1a00e:	80 62       	ori	r24, 0x20	; 32
   1a010:	0a c0       	rjmp	.+20     	; 0x1a026 <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   1a012:	9f b7       	in	r25, 0x3f	; 63
   1a014:	f8 94       	cli
      *_udr = c;
   1a016:	ee 89       	ldd	r30, Y+22	; 0x16
   1a018:	ff 89       	ldd	r31, Y+23	; 0x17
   1a01a:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   1a01c:	e8 89       	ldd	r30, Y+16	; 0x10
   1a01e:	f9 89       	ldd	r31, Y+17	; 0x11
   1a020:	80 81       	ld	r24, Z
   1a022:	83 70       	andi	r24, 0x03	; 3
   1a024:	80 64       	ori	r24, 0x40	; 64
   1a026:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
   1a028:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
   1a02a:	81 e0       	ldi	r24, 0x01	; 1
   1a02c:	90 e0       	ldi	r25, 0x00	; 0
   1a02e:	df 91       	pop	r29
   1a030:	cf 91       	pop	r28
   1a032:	1f 91       	pop	r17
   1a034:	0f 91       	pop	r16
   1a036:	08 95       	ret

0001a038 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
   1a038:	cf 93       	push	r28
   1a03a:	df 93       	push	r29
   1a03c:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
   1a03e:	88 8d       	ldd	r24, Y+24	; 0x18
   1a040:	88 23       	and	r24, r24
   1a042:	c1 f0       	breq	.+48     	; 0x1a074 <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
   1a044:	ea 89       	ldd	r30, Y+18	; 0x12
   1a046:	fb 89       	ldd	r31, Y+19	; 0x13
   1a048:	80 81       	ld	r24, Z
   1a04a:	85 fd       	sbrc	r24, 5
   1a04c:	05 c0       	rjmp	.+10     	; 0x1a058 <_ZN14HardwareSerial5flushEv+0x20>
   1a04e:	a8 89       	ldd	r26, Y+16	; 0x10
   1a050:	b9 89       	ldd	r27, Y+17	; 0x11
   1a052:	8c 91       	ld	r24, X
   1a054:	86 fd       	sbrc	r24, 6
   1a056:	0e c0       	rjmp	.+28     	; 0x1a074 <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
   1a058:	0f b6       	in	r0, 0x3f	; 63
   1a05a:	07 fc       	sbrc	r0, 7
   1a05c:	f5 cf       	rjmp	.-22     	; 0x1a048 <_ZN14HardwareSerial5flushEv+0x10>
   1a05e:	80 81       	ld	r24, Z
   1a060:	85 ff       	sbrs	r24, 5
   1a062:	f2 cf       	rjmp	.-28     	; 0x1a048 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
   1a064:	a8 89       	ldd	r26, Y+16	; 0x10
   1a066:	b9 89       	ldd	r27, Y+17	; 0x11
   1a068:	8c 91       	ld	r24, X
   1a06a:	85 ff       	sbrs	r24, 5
   1a06c:	ed cf       	rjmp	.-38     	; 0x1a048 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
   1a06e:	ce 01       	movw	r24, r28
   1a070:	73 df       	rcall	.-282    	; 0x19f58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a072:	e8 cf       	rjmp	.-48     	; 0x1a044 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
   1a074:	df 91       	pop	r29
   1a076:	cf 91       	pop	r28
   1a078:	08 95       	ret

0001a07a <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
   1a07a:	cf 92       	push	r12
   1a07c:	df 92       	push	r13
   1a07e:	ef 92       	push	r14
   1a080:	ff 92       	push	r15
   1a082:	1f 93       	push	r17
   1a084:	cf 93       	push	r28
   1a086:	df 93       	push	r29
   1a088:	ec 01       	movw	r28, r24
   1a08a:	6a 01       	movw	r12, r20
   1a08c:	7b 01       	movw	r14, r22
   1a08e:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
   1a090:	e8 89       	ldd	r30, Y+16	; 0x10
   1a092:	f9 89       	ldd	r31, Y+17	; 0x11
   1a094:	82 e0       	ldi	r24, 0x02	; 2
   1a096:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a098:	41 15       	cp	r20, r1
   1a09a:	51 4e       	sbci	r21, 0xE1	; 225
   1a09c:	61 05       	cpc	r22, r1
   1a09e:	71 05       	cpc	r23, r1
   1a0a0:	b1 f0       	breq	.+44     	; 0x1a0ce <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
   1a0a2:	60 e0       	ldi	r22, 0x00	; 0
   1a0a4:	79 e0       	ldi	r23, 0x09	; 9
   1a0a6:	8d e3       	ldi	r24, 0x3D	; 61
   1a0a8:	90 e0       	ldi	r25, 0x00	; 0
   1a0aa:	a7 01       	movw	r20, r14
   1a0ac:	96 01       	movw	r18, r12
   1a0ae:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   1a0b2:	da 01       	movw	r26, r20
   1a0b4:	c9 01       	movw	r24, r18
   1a0b6:	01 97       	sbiw	r24, 0x01	; 1
   1a0b8:	a1 09       	sbc	r26, r1
   1a0ba:	b1 09       	sbc	r27, r1
   1a0bc:	b6 95       	lsr	r27
   1a0be:	a7 95       	ror	r26
   1a0c0:	97 95       	ror	r25
   1a0c2:	87 95       	ror	r24
   1a0c4:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   1a0c6:	21 15       	cp	r18, r1
   1a0c8:	80 e1       	ldi	r24, 0x10	; 16
   1a0ca:	38 07       	cpc	r19, r24
   1a0cc:	a8 f0       	brcs	.+42     	; 0x1a0f8 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
   1a0ce:	e8 89       	ldd	r30, Y+16	; 0x10
   1a0d0:	f9 89       	ldd	r31, Y+17	; 0x11
   1a0d2:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
   1a0d4:	60 e8       	ldi	r22, 0x80	; 128
   1a0d6:	74 e8       	ldi	r23, 0x84	; 132
   1a0d8:	8e e1       	ldi	r24, 0x1E	; 30
   1a0da:	90 e0       	ldi	r25, 0x00	; 0
   1a0dc:	a7 01       	movw	r20, r14
   1a0de:	96 01       	movw	r18, r12
   1a0e0:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   1a0e4:	da 01       	movw	r26, r20
   1a0e6:	c9 01       	movw	r24, r18
   1a0e8:	01 97       	sbiw	r24, 0x01	; 1
   1a0ea:	a1 09       	sbc	r26, r1
   1a0ec:	b1 09       	sbc	r27, r1
   1a0ee:	b6 95       	lsr	r27
   1a0f0:	a7 95       	ror	r26
   1a0f2:	97 95       	ror	r25
   1a0f4:	87 95       	ror	r24
   1a0f6:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
   1a0f8:	ec 85       	ldd	r30, Y+12	; 0x0c
   1a0fa:	fd 85       	ldd	r31, Y+13	; 0x0d
   1a0fc:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
   1a0fe:	ee 85       	ldd	r30, Y+14	; 0x0e
   1a100:	ff 85       	ldd	r31, Y+15	; 0x0f
   1a102:	20 83       	st	Z, r18

  _written = false;
   1a104:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
   1a106:	ec 89       	ldd	r30, Y+20	; 0x14
   1a108:	fd 89       	ldd	r31, Y+21	; 0x15
   1a10a:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
   1a10c:	ea 89       	ldd	r30, Y+18	; 0x12
   1a10e:	fb 89       	ldd	r31, Y+19	; 0x13
   1a110:	80 81       	ld	r24, Z
   1a112:	80 61       	ori	r24, 0x10	; 16
   1a114:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
   1a116:	ea 89       	ldd	r30, Y+18	; 0x12
   1a118:	fb 89       	ldd	r31, Y+19	; 0x13
   1a11a:	80 81       	ld	r24, Z
   1a11c:	88 60       	ori	r24, 0x08	; 8
   1a11e:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
   1a120:	ea 89       	ldd	r30, Y+18	; 0x12
   1a122:	fb 89       	ldd	r31, Y+19	; 0x13
   1a124:	80 81       	ld	r24, Z
   1a126:	80 68       	ori	r24, 0x80	; 128
   1a128:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
   1a12a:	ea 89       	ldd	r30, Y+18	; 0x12
   1a12c:	fb 89       	ldd	r31, Y+19	; 0x13
   1a12e:	80 81       	ld	r24, Z
   1a130:	8f 7d       	andi	r24, 0xDF	; 223
   1a132:	80 83       	st	Z, r24
}
   1a134:	df 91       	pop	r29
   1a136:	cf 91       	pop	r28
   1a138:	1f 91       	pop	r17
   1a13a:	ff 90       	pop	r15
   1a13c:	ef 90       	pop	r14
   1a13e:	df 90       	pop	r13
   1a140:	cf 90       	pop	r12
   1a142:	08 95       	ret

0001a144 <_ZN5Print17availableForWriteEv>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
}
   1a144:	80 e0       	ldi	r24, 0x00	; 0
   1a146:	90 e0       	ldi	r25, 0x00	; 0
   1a148:	08 95       	ret

0001a14a <_ZN5Print5flushEv>:
   1a14a:	08 95       	ret

0001a14c <__vector_26>:
   1a14c:	1f 92       	push	r1
   1a14e:	0f 92       	push	r0
   1a150:	0f b6       	in	r0, 0x3f	; 63
   1a152:	0f 92       	push	r0
   1a154:	11 24       	eor	r1, r1
   1a156:	0b b6       	in	r0, 0x3b	; 59
   1a158:	0f 92       	push	r0
   1a15a:	2f 93       	push	r18
   1a15c:	3f 93       	push	r19
   1a15e:	4f 93       	push	r20
   1a160:	5f 93       	push	r21
   1a162:	6f 93       	push	r22
   1a164:	7f 93       	push	r23
   1a166:	8f 93       	push	r24
   1a168:	9f 93       	push	r25
   1a16a:	af 93       	push	r26
   1a16c:	bf 93       	push	r27
   1a16e:	ef 93       	push	r30
   1a170:	ff 93       	push	r31
   1a172:	82 e5       	ldi	r24, 0x52	; 82
   1a174:	94 e1       	ldi	r25, 0x14	; 20
   1a176:	f0 de       	rcall	.-544    	; 0x19f58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a178:	ff 91       	pop	r31
   1a17a:	ef 91       	pop	r30
   1a17c:	bf 91       	pop	r27
   1a17e:	af 91       	pop	r26
   1a180:	9f 91       	pop	r25
   1a182:	8f 91       	pop	r24
   1a184:	7f 91       	pop	r23
   1a186:	6f 91       	pop	r22
   1a188:	5f 91       	pop	r21
   1a18a:	4f 91       	pop	r20
   1a18c:	3f 91       	pop	r19
   1a18e:	2f 91       	pop	r18
   1a190:	0f 90       	pop	r0
   1a192:	0b be       	out	0x3b, r0	; 59
   1a194:	0f 90       	pop	r0
   1a196:	0f be       	out	0x3f, r0	; 63
   1a198:	0f 90       	pop	r0
   1a19a:	1f 90       	pop	r1
   1a19c:	18 95       	reti

0001a19e <_GLOBAL__sub_I___vector_26>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
   1a19e:	e2 e5       	ldi	r30, 0x52	; 82
   1a1a0:	f4 e1       	ldi	r31, 0x14	; 20
   1a1a2:	13 82       	std	Z+3, r1	; 0x03
   1a1a4:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
   1a1a6:	88 ee       	ldi	r24, 0xE8	; 232
   1a1a8:	93 e0       	ldi	r25, 0x03	; 3
   1a1aa:	a0 e0       	ldi	r26, 0x00	; 0
   1a1ac:	b0 e0       	ldi	r27, 0x00	; 0
   1a1ae:	84 83       	std	Z+4, r24	; 0x04
   1a1b0:	95 83       	std	Z+5, r25	; 0x05
   1a1b2:	a6 83       	std	Z+6, r26	; 0x06
   1a1b4:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
   1a1b6:	8f ed       	ldi	r24, 0xDF	; 223
   1a1b8:	97 e0       	ldi	r25, 0x07	; 7
   1a1ba:	91 83       	std	Z+1, r25	; 0x01
   1a1bc:	80 83       	st	Z, r24
   1a1be:	85 ec       	ldi	r24, 0xC5	; 197
   1a1c0:	90 e0       	ldi	r25, 0x00	; 0
   1a1c2:	95 87       	std	Z+13, r25	; 0x0d
   1a1c4:	84 87       	std	Z+12, r24	; 0x0c
   1a1c6:	84 ec       	ldi	r24, 0xC4	; 196
   1a1c8:	90 e0       	ldi	r25, 0x00	; 0
   1a1ca:	97 87       	std	Z+15, r25	; 0x0f
   1a1cc:	86 87       	std	Z+14, r24	; 0x0e
   1a1ce:	80 ec       	ldi	r24, 0xC0	; 192
   1a1d0:	90 e0       	ldi	r25, 0x00	; 0
   1a1d2:	91 8b       	std	Z+17, r25	; 0x11
   1a1d4:	80 8b       	std	Z+16, r24	; 0x10
   1a1d6:	81 ec       	ldi	r24, 0xC1	; 193
   1a1d8:	90 e0       	ldi	r25, 0x00	; 0
   1a1da:	93 8b       	std	Z+19, r25	; 0x13
   1a1dc:	82 8b       	std	Z+18, r24	; 0x12
   1a1de:	82 ec       	ldi	r24, 0xC2	; 194
   1a1e0:	90 e0       	ldi	r25, 0x00	; 0
   1a1e2:	95 8b       	std	Z+21, r25	; 0x15
   1a1e4:	84 8b       	std	Z+20, r24	; 0x14
   1a1e6:	86 ec       	ldi	r24, 0xC6	; 198
   1a1e8:	90 e0       	ldi	r25, 0x00	; 0
   1a1ea:	97 8b       	std	Z+23, r25	; 0x17
   1a1ec:	86 8b       	std	Z+22, r24	; 0x16
   1a1ee:	11 8e       	std	Z+25, r1	; 0x19
   1a1f0:	12 8e       	std	Z+26, r1	; 0x1a
   1a1f2:	13 8e       	std	Z+27, r1	; 0x1b
   1a1f4:	14 8e       	std	Z+28, r1	; 0x1c
   1a1f6:	08 95       	ret

0001a1f8 <__vector_37>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
}
   1a1f8:	1f 92       	push	r1
   1a1fa:	0f 92       	push	r0
   1a1fc:	0f b6       	in	r0, 0x3f	; 63
   1a1fe:	0f 92       	push	r0
   1a200:	11 24       	eor	r1, r1
   1a202:	0b b6       	in	r0, 0x3b	; 59
   1a204:	0f 92       	push	r0
   1a206:	2f 93       	push	r18
   1a208:	3f 93       	push	r19
   1a20a:	4f 93       	push	r20
   1a20c:	5f 93       	push	r21
   1a20e:	6f 93       	push	r22
   1a210:	7f 93       	push	r23
   1a212:	8f 93       	push	r24
   1a214:	9f 93       	push	r25
   1a216:	af 93       	push	r26
   1a218:	bf 93       	push	r27
   1a21a:	ef 93       	push	r30
   1a21c:	ff 93       	push	r31
   1a21e:	8f e0       	ldi	r24, 0x0F	; 15
   1a220:	96 e1       	ldi	r25, 0x16	; 22
   1a222:	9a de       	rcall	.-716    	; 0x19f58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a224:	ff 91       	pop	r31
   1a226:	ef 91       	pop	r30
   1a228:	bf 91       	pop	r27
   1a22a:	af 91       	pop	r26
   1a22c:	9f 91       	pop	r25
   1a22e:	8f 91       	pop	r24
   1a230:	7f 91       	pop	r23
   1a232:	6f 91       	pop	r22
   1a234:	5f 91       	pop	r21
   1a236:	4f 91       	pop	r20
   1a238:	3f 91       	pop	r19
   1a23a:	2f 91       	pop	r18
   1a23c:	0f 90       	pop	r0
   1a23e:	0b be       	out	0x3b, r0	; 59
   1a240:	0f 90       	pop	r0
   1a242:	0f be       	out	0x3f, r0	; 63
   1a244:	0f 90       	pop	r0
   1a246:	1f 90       	pop	r1
   1a248:	18 95       	reti

0001a24a <_GLOBAL__sub_I___vector_37>:
   1a24a:	ef e0       	ldi	r30, 0x0F	; 15
   1a24c:	f6 e1       	ldi	r31, 0x16	; 22
   1a24e:	13 82       	std	Z+3, r1	; 0x03
   1a250:	12 82       	std	Z+2, r1	; 0x02
   1a252:	88 ee       	ldi	r24, 0xE8	; 232
   1a254:	93 e0       	ldi	r25, 0x03	; 3
   1a256:	a0 e0       	ldi	r26, 0x00	; 0
   1a258:	b0 e0       	ldi	r27, 0x00	; 0
   1a25a:	84 83       	std	Z+4, r24	; 0x04
   1a25c:	95 83       	std	Z+5, r25	; 0x05
   1a25e:	a6 83       	std	Z+6, r26	; 0x06
   1a260:	b7 83       	std	Z+7, r27	; 0x07
   1a262:	8f ed       	ldi	r24, 0xDF	; 223
   1a264:	97 e0       	ldi	r25, 0x07	; 7
   1a266:	91 83       	std	Z+1, r25	; 0x01
   1a268:	80 83       	st	Z, r24
   1a26a:	8d ec       	ldi	r24, 0xCD	; 205
   1a26c:	90 e0       	ldi	r25, 0x00	; 0
   1a26e:	95 87       	std	Z+13, r25	; 0x0d
   1a270:	84 87       	std	Z+12, r24	; 0x0c
   1a272:	8c ec       	ldi	r24, 0xCC	; 204
   1a274:	90 e0       	ldi	r25, 0x00	; 0
   1a276:	97 87       	std	Z+15, r25	; 0x0f
   1a278:	86 87       	std	Z+14, r24	; 0x0e
   1a27a:	88 ec       	ldi	r24, 0xC8	; 200
   1a27c:	90 e0       	ldi	r25, 0x00	; 0
   1a27e:	91 8b       	std	Z+17, r25	; 0x11
   1a280:	80 8b       	std	Z+16, r24	; 0x10
   1a282:	89 ec       	ldi	r24, 0xC9	; 201
   1a284:	90 e0       	ldi	r25, 0x00	; 0
   1a286:	93 8b       	std	Z+19, r25	; 0x13
   1a288:	82 8b       	std	Z+18, r24	; 0x12
   1a28a:	8a ec       	ldi	r24, 0xCA	; 202
   1a28c:	90 e0       	ldi	r25, 0x00	; 0
   1a28e:	95 8b       	std	Z+21, r25	; 0x15
   1a290:	84 8b       	std	Z+20, r24	; 0x14
   1a292:	8e ec       	ldi	r24, 0xCE	; 206
   1a294:	90 e0       	ldi	r25, 0x00	; 0
   1a296:	97 8b       	std	Z+23, r25	; 0x17
   1a298:	86 8b       	std	Z+22, r24	; 0x16
   1a29a:	11 8e       	std	Z+25, r1	; 0x19
   1a29c:	12 8e       	std	Z+26, r1	; 0x1a
   1a29e:	13 8e       	std	Z+27, r1	; 0x1b
   1a2a0:	14 8e       	std	Z+28, r1	; 0x1c
   1a2a2:	08 95       	ret

0001a2a4 <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a2a4:	cf 92       	push	r12
   1a2a6:	df 92       	push	r13
   1a2a8:	ef 92       	push	r14
   1a2aa:	ff 92       	push	r15
   1a2ac:	0f 93       	push	r16
   1a2ae:	1f 93       	push	r17
   1a2b0:	cf 93       	push	r28
   1a2b2:	df 93       	push	r29
   1a2b4:	6c 01       	movw	r12, r24
   1a2b6:	7a 01       	movw	r14, r20
   1a2b8:	8b 01       	movw	r16, r22
   1a2ba:	c0 e0       	ldi	r28, 0x00	; 0
   1a2bc:	d0 e0       	ldi	r29, 0x00	; 0
   1a2be:	ce 15       	cp	r28, r14
   1a2c0:	df 05       	cpc	r29, r15
   1a2c2:	81 f0       	breq	.+32     	; 0x1a2e4 <_ZN5Print5writeEPKhj+0x40>
   1a2c4:	d8 01       	movw	r26, r16
   1a2c6:	6d 91       	ld	r22, X+
   1a2c8:	8d 01       	movw	r16, r26
   1a2ca:	d6 01       	movw	r26, r12
   1a2cc:	ed 91       	ld	r30, X+
   1a2ce:	fc 91       	ld	r31, X
   1a2d0:	01 90       	ld	r0, Z+
   1a2d2:	f0 81       	ld	r31, Z
   1a2d4:	e0 2d       	mov	r30, r0
   1a2d6:	c6 01       	movw	r24, r12
   1a2d8:	19 95       	eicall
   1a2da:	89 2b       	or	r24, r25
   1a2dc:	11 f0       	breq	.+4      	; 0x1a2e2 <_ZN5Print5writeEPKhj+0x3e>
   1a2de:	21 96       	adiw	r28, 0x01	; 1
   1a2e0:	ee cf       	rjmp	.-36     	; 0x1a2be <_ZN5Print5writeEPKhj+0x1a>
   1a2e2:	7e 01       	movw	r14, r28
   1a2e4:	c7 01       	movw	r24, r14
   1a2e6:	df 91       	pop	r29
   1a2e8:	cf 91       	pop	r28
   1a2ea:	1f 91       	pop	r17
   1a2ec:	0f 91       	pop	r16
   1a2ee:	ff 90       	pop	r15
   1a2f0:	ef 90       	pop	r14
   1a2f2:	df 90       	pop	r13
   1a2f4:	cf 90       	pop	r12
   1a2f6:	08 95       	ret

0001a2f8 <_ZN5Print5printEPK19__FlashStringHelper>:
   1a2f8:	ef 92       	push	r14
   1a2fa:	ff 92       	push	r15
   1a2fc:	0f 93       	push	r16
   1a2fe:	1f 93       	push	r17
   1a300:	cf 93       	push	r28
   1a302:	df 93       	push	r29
   1a304:	8c 01       	movw	r16, r24
   1a306:	7b 01       	movw	r14, r22
   1a308:	c0 e0       	ldi	r28, 0x00	; 0
   1a30a:	d0 e0       	ldi	r29, 0x00	; 0
   1a30c:	f7 01       	movw	r30, r14
   1a30e:	ec 0f       	add	r30, r28
   1a310:	fd 1f       	adc	r31, r29
   1a312:	64 91       	lpm	r22, Z
   1a314:	66 23       	and	r22, r22
   1a316:	61 f0       	breq	.+24     	; 0x1a330 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a318:	d8 01       	movw	r26, r16
   1a31a:	ed 91       	ld	r30, X+
   1a31c:	fc 91       	ld	r31, X
   1a31e:	01 90       	ld	r0, Z+
   1a320:	f0 81       	ld	r31, Z
   1a322:	e0 2d       	mov	r30, r0
   1a324:	c8 01       	movw	r24, r16
   1a326:	19 95       	eicall
   1a328:	89 2b       	or	r24, r25
   1a32a:	11 f0       	breq	.+4      	; 0x1a330 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a32c:	21 96       	adiw	r28, 0x01	; 1
   1a32e:	ee cf       	rjmp	.-36     	; 0x1a30c <_ZN5Print5printEPK19__FlashStringHelper+0x14>
   1a330:	ce 01       	movw	r24, r28
   1a332:	df 91       	pop	r29
   1a334:	cf 91       	pop	r28
   1a336:	1f 91       	pop	r17
   1a338:	0f 91       	pop	r16
   1a33a:	ff 90       	pop	r15
   1a33c:	ef 90       	pop	r14
   1a33e:	08 95       	ret

0001a340 <_ZN5Print5printEPKc>:
   1a340:	0c 94 86 84 	jmp	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>

0001a344 <_ZN5Print5printEc>:
   1a344:	dc 01       	movw	r26, r24
   1a346:	ed 91       	ld	r30, X+
   1a348:	fc 91       	ld	r31, X
   1a34a:	01 90       	ld	r0, Z+
   1a34c:	f0 81       	ld	r31, Z
   1a34e:	e0 2d       	mov	r30, r0
   1a350:	19 94       	eijmp

0001a352 <_ZN5Print7printlnEv>:
   1a352:	65 ef       	ldi	r22, 0xF5	; 245
   1a354:	76 e0       	ldi	r23, 0x06	; 6
   1a356:	0c 94 86 84 	jmp	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>

0001a35a <_ZN5Print7printlnEPK19__FlashStringHelper>:
   1a35a:	0f 93       	push	r16
   1a35c:	1f 93       	push	r17
   1a35e:	cf 93       	push	r28
   1a360:	df 93       	push	r29
   1a362:	ec 01       	movw	r28, r24
   1a364:	c9 df       	rcall	.-110    	; 0x1a2f8 <_ZN5Print5printEPK19__FlashStringHelper>
   1a366:	8c 01       	movw	r16, r24
   1a368:	ce 01       	movw	r24, r28
   1a36a:	f3 df       	rcall	.-26     	; 0x1a352 <_ZN5Print7printlnEv>
   1a36c:	80 0f       	add	r24, r16
   1a36e:	91 1f       	adc	r25, r17
   1a370:	df 91       	pop	r29
   1a372:	cf 91       	pop	r28
   1a374:	1f 91       	pop	r17
   1a376:	0f 91       	pop	r16
   1a378:	08 95       	ret

0001a37a <_ZN5Print7printlnEPKc>:
   1a37a:	0f 93       	push	r16
   1a37c:	1f 93       	push	r17
   1a37e:	cf 93       	push	r28
   1a380:	df 93       	push	r29
   1a382:	ec 01       	movw	r28, r24
   1a384:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   1a388:	8c 01       	movw	r16, r24
   1a38a:	ce 01       	movw	r24, r28
   1a38c:	e2 df       	rcall	.-60     	; 0x1a352 <_ZN5Print7printlnEv>
   1a38e:	80 0f       	add	r24, r16
   1a390:	91 1f       	adc	r25, r17
   1a392:	df 91       	pop	r29
   1a394:	cf 91       	pop	r28
   1a396:	1f 91       	pop	r17
   1a398:	0f 91       	pop	r16
   1a39a:	08 95       	ret

0001a39c <_ZN5Print11printNumberEmh>:
   1a39c:	8f 92       	push	r8
   1a39e:	9f 92       	push	r9
   1a3a0:	af 92       	push	r10
   1a3a2:	bf 92       	push	r11
   1a3a4:	ef 92       	push	r14
   1a3a6:	ff 92       	push	r15
   1a3a8:	0f 93       	push	r16
   1a3aa:	1f 93       	push	r17
   1a3ac:	cf 93       	push	r28
   1a3ae:	df 93       	push	r29
   1a3b0:	cd b7       	in	r28, 0x3d	; 61
   1a3b2:	de b7       	in	r29, 0x3e	; 62
   1a3b4:	a1 97       	sbiw	r28, 0x21	; 33
   1a3b6:	0f b6       	in	r0, 0x3f	; 63
   1a3b8:	f8 94       	cli
   1a3ba:	de bf       	out	0x3e, r29	; 62
   1a3bc:	0f be       	out	0x3f, r0	; 63
   1a3be:	cd bf       	out	0x3d, r28	; 61
   1a3c0:	7c 01       	movw	r14, r24
   1a3c2:	fa 01       	movw	r30, r20
   1a3c4:	cb 01       	movw	r24, r22
   1a3c6:	19 a2       	std	Y+33, r1	; 0x21
   1a3c8:	22 30       	cpi	r18, 0x02	; 2
   1a3ca:	08 f4       	brcc	.+2      	; 0x1a3ce <_ZN5Print11printNumberEmh+0x32>
   1a3cc:	2a e0       	ldi	r18, 0x0A	; 10
   1a3ce:	8e 01       	movw	r16, r28
   1a3d0:	0f 5d       	subi	r16, 0xDF	; 223
   1a3d2:	1f 4f       	sbci	r17, 0xFF	; 255
   1a3d4:	82 2e       	mov	r8, r18
   1a3d6:	91 2c       	mov	r9, r1
   1a3d8:	a1 2c       	mov	r10, r1
   1a3da:	b1 2c       	mov	r11, r1
   1a3dc:	bf 01       	movw	r22, r30
   1a3de:	a5 01       	movw	r20, r10
   1a3e0:	94 01       	movw	r18, r8
   1a3e2:	0e 94 de e7 	call	0x1cfbc	; 0x1cfbc <__udivmodsi4>
   1a3e6:	f9 01       	movw	r30, r18
   1a3e8:	ca 01       	movw	r24, r20
   1a3ea:	01 50       	subi	r16, 0x01	; 1
   1a3ec:	11 09       	sbc	r17, r1
   1a3ee:	6a 30       	cpi	r22, 0x0A	; 10
   1a3f0:	10 f4       	brcc	.+4      	; 0x1a3f6 <_ZN5Print11printNumberEmh+0x5a>
   1a3f2:	60 5d       	subi	r22, 0xD0	; 208
   1a3f4:	01 c0       	rjmp	.+2      	; 0x1a3f8 <_ZN5Print11printNumberEmh+0x5c>
   1a3f6:	69 5c       	subi	r22, 0xC9	; 201
   1a3f8:	d8 01       	movw	r26, r16
   1a3fa:	6c 93       	st	X, r22
   1a3fc:	23 2b       	or	r18, r19
   1a3fe:	24 2b       	or	r18, r20
   1a400:	25 2b       	or	r18, r21
   1a402:	61 f7       	brne	.-40     	; 0x1a3dc <_ZN5Print11printNumberEmh+0x40>
   1a404:	b8 01       	movw	r22, r16
   1a406:	c7 01       	movw	r24, r14
   1a408:	0e 94 86 84 	call	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   1a40c:	a1 96       	adiw	r28, 0x21	; 33
   1a40e:	0f b6       	in	r0, 0x3f	; 63
   1a410:	f8 94       	cli
   1a412:	de bf       	out	0x3e, r29	; 62
   1a414:	0f be       	out	0x3f, r0	; 63
   1a416:	cd bf       	out	0x3d, r28	; 61
   1a418:	df 91       	pop	r29
   1a41a:	cf 91       	pop	r28
   1a41c:	1f 91       	pop	r17
   1a41e:	0f 91       	pop	r16
   1a420:	ff 90       	pop	r15
   1a422:	ef 90       	pop	r14
   1a424:	bf 90       	pop	r11
   1a426:	af 90       	pop	r10
   1a428:	9f 90       	pop	r9
   1a42a:	8f 90       	pop	r8
   1a42c:	08 95       	ret

0001a42e <_ZN5Print5printEmi>:
   1a42e:	21 15       	cp	r18, r1
   1a430:	31 05       	cpc	r19, r1
   1a432:	41 f4       	brne	.+16     	; 0x1a444 <_ZN5Print5printEmi+0x16>
   1a434:	dc 01       	movw	r26, r24
   1a436:	ed 91       	ld	r30, X+
   1a438:	fc 91       	ld	r31, X
   1a43a:	01 90       	ld	r0, Z+
   1a43c:	f0 81       	ld	r31, Z
   1a43e:	e0 2d       	mov	r30, r0
   1a440:	64 2f       	mov	r22, r20
   1a442:	19 94       	eijmp
   1a444:	ab cf       	rjmp	.-170    	; 0x1a39c <_ZN5Print11printNumberEmh>

0001a446 <_ZN5Print5printEhi>:
   1a446:	9a 01       	movw	r18, r20
   1a448:	46 2f       	mov	r20, r22
   1a44a:	50 e0       	ldi	r21, 0x00	; 0
   1a44c:	60 e0       	ldi	r22, 0x00	; 0
   1a44e:	70 e0       	ldi	r23, 0x00	; 0
   1a450:	ee cf       	rjmp	.-36     	; 0x1a42e <_ZN5Print5printEmi>

0001a452 <_ZN5Print7printlnEhi>:
   1a452:	0f 93       	push	r16
   1a454:	1f 93       	push	r17
   1a456:	cf 93       	push	r28
   1a458:	df 93       	push	r29
   1a45a:	ec 01       	movw	r28, r24
   1a45c:	f4 df       	rcall	.-24     	; 0x1a446 <_ZN5Print5printEhi>
   1a45e:	8c 01       	movw	r16, r24
   1a460:	ce 01       	movw	r24, r28
   1a462:	77 df       	rcall	.-274    	; 0x1a352 <_ZN5Print7printlnEv>
   1a464:	80 0f       	add	r24, r16
   1a466:	91 1f       	adc	r25, r17
   1a468:	df 91       	pop	r29
   1a46a:	cf 91       	pop	r28
   1a46c:	1f 91       	pop	r17
   1a46e:	0f 91       	pop	r16
   1a470:	08 95       	ret

0001a472 <_ZN5Print5printEji>:
   1a472:	9a 01       	movw	r18, r20
   1a474:	ab 01       	movw	r20, r22
   1a476:	60 e0       	ldi	r22, 0x00	; 0
   1a478:	70 e0       	ldi	r23, 0x00	; 0
   1a47a:	d9 cf       	rjmp	.-78     	; 0x1a42e <_ZN5Print5printEmi>

0001a47c <_ZN5Print7printlnEji>:
   1a47c:	0f 93       	push	r16
   1a47e:	1f 93       	push	r17
   1a480:	cf 93       	push	r28
   1a482:	df 93       	push	r29
   1a484:	ec 01       	movw	r28, r24
   1a486:	f5 df       	rcall	.-22     	; 0x1a472 <_ZN5Print5printEji>
   1a488:	8c 01       	movw	r16, r24
   1a48a:	ce 01       	movw	r24, r28
   1a48c:	62 df       	rcall	.-316    	; 0x1a352 <_ZN5Print7printlnEv>
   1a48e:	80 0f       	add	r24, r16
   1a490:	91 1f       	adc	r25, r17
   1a492:	df 91       	pop	r29
   1a494:	cf 91       	pop	r28
   1a496:	1f 91       	pop	r17
   1a498:	0f 91       	pop	r16
   1a49a:	08 95       	ret

0001a49c <_ZN5Print7printlnEmi>:
   1a49c:	0f 93       	push	r16
   1a49e:	1f 93       	push	r17
   1a4a0:	cf 93       	push	r28
   1a4a2:	df 93       	push	r29
   1a4a4:	ec 01       	movw	r28, r24
   1a4a6:	c3 df       	rcall	.-122    	; 0x1a42e <_ZN5Print5printEmi>
   1a4a8:	8c 01       	movw	r16, r24
   1a4aa:	ce 01       	movw	r24, r28
   1a4ac:	52 df       	rcall	.-348    	; 0x1a352 <_ZN5Print7printlnEv>
   1a4ae:	80 0f       	add	r24, r16
   1a4b0:	91 1f       	adc	r25, r17
   1a4b2:	df 91       	pop	r29
   1a4b4:	cf 91       	pop	r28
   1a4b6:	1f 91       	pop	r17
   1a4b8:	0f 91       	pop	r16
   1a4ba:	08 95       	ret

0001a4bc <_ZN5Print5printEli>:
   1a4bc:	cf 92       	push	r12
   1a4be:	df 92       	push	r13
   1a4c0:	ef 92       	push	r14
   1a4c2:	ff 92       	push	r15
   1a4c4:	0f 93       	push	r16
   1a4c6:	1f 93       	push	r17
   1a4c8:	cf 93       	push	r28
   1a4ca:	df 93       	push	r29
   1a4cc:	21 15       	cp	r18, r1
   1a4ce:	31 05       	cpc	r19, r1
   1a4d0:	81 f4       	brne	.+32     	; 0x1a4f2 <_ZN5Print5printEli+0x36>
   1a4d2:	dc 01       	movw	r26, r24
   1a4d4:	ed 91       	ld	r30, X+
   1a4d6:	fc 91       	ld	r31, X
   1a4d8:	01 90       	ld	r0, Z+
   1a4da:	f0 81       	ld	r31, Z
   1a4dc:	e0 2d       	mov	r30, r0
   1a4de:	64 2f       	mov	r22, r20
   1a4e0:	df 91       	pop	r29
   1a4e2:	cf 91       	pop	r28
   1a4e4:	1f 91       	pop	r17
   1a4e6:	0f 91       	pop	r16
   1a4e8:	ff 90       	pop	r15
   1a4ea:	ef 90       	pop	r14
   1a4ec:	df 90       	pop	r13
   1a4ee:	cf 90       	pop	r12
   1a4f0:	19 94       	eijmp
   1a4f2:	2a 30       	cpi	r18, 0x0A	; 10
   1a4f4:	31 05       	cpc	r19, r1
   1a4f6:	f1 f4       	brne	.+60     	; 0x1a534 <_ZN5Print5printEli+0x78>
   1a4f8:	77 ff       	sbrs	r23, 7
   1a4fa:	1b c0       	rjmp	.+54     	; 0x1a532 <_ZN5Print5printEli+0x76>
   1a4fc:	6a 01       	movw	r12, r20
   1a4fe:	7b 01       	movw	r14, r22
   1a500:	ec 01       	movw	r28, r24
   1a502:	6d e2       	ldi	r22, 0x2D	; 45
   1a504:	1f df       	rcall	.-450    	; 0x1a344 <_ZN5Print5printEc>
   1a506:	8c 01       	movw	r16, r24
   1a508:	44 27       	eor	r20, r20
   1a50a:	55 27       	eor	r21, r21
   1a50c:	ba 01       	movw	r22, r20
   1a50e:	4c 19       	sub	r20, r12
   1a510:	5d 09       	sbc	r21, r13
   1a512:	6e 09       	sbc	r22, r14
   1a514:	7f 09       	sbc	r23, r15
   1a516:	2a e0       	ldi	r18, 0x0A	; 10
   1a518:	ce 01       	movw	r24, r28
   1a51a:	40 df       	rcall	.-384    	; 0x1a39c <_ZN5Print11printNumberEmh>
   1a51c:	80 0f       	add	r24, r16
   1a51e:	91 1f       	adc	r25, r17
   1a520:	df 91       	pop	r29
   1a522:	cf 91       	pop	r28
   1a524:	1f 91       	pop	r17
   1a526:	0f 91       	pop	r16
   1a528:	ff 90       	pop	r15
   1a52a:	ef 90       	pop	r14
   1a52c:	df 90       	pop	r13
   1a52e:	cf 90       	pop	r12
   1a530:	08 95       	ret
   1a532:	2a e0       	ldi	r18, 0x0A	; 10
   1a534:	df 91       	pop	r29
   1a536:	cf 91       	pop	r28
   1a538:	1f 91       	pop	r17
   1a53a:	0f 91       	pop	r16
   1a53c:	ff 90       	pop	r15
   1a53e:	ef 90       	pop	r14
   1a540:	df 90       	pop	r13
   1a542:	cf 90       	pop	r12
   1a544:	2b cf       	rjmp	.-426    	; 0x1a39c <_ZN5Print11printNumberEmh>

0001a546 <_ZN5Print5printEii>:
   1a546:	9a 01       	movw	r18, r20
   1a548:	ab 01       	movw	r20, r22
   1a54a:	77 0f       	add	r23, r23
   1a54c:	66 0b       	sbc	r22, r22
   1a54e:	77 0b       	sbc	r23, r23
   1a550:	b5 cf       	rjmp	.-150    	; 0x1a4bc <_ZN5Print5printEli>

0001a552 <_ZN5Print7printlnEii>:
   1a552:	0f 93       	push	r16
   1a554:	1f 93       	push	r17
   1a556:	cf 93       	push	r28
   1a558:	df 93       	push	r29
   1a55a:	ec 01       	movw	r28, r24
   1a55c:	f4 df       	rcall	.-24     	; 0x1a546 <_ZN5Print5printEii>
   1a55e:	8c 01       	movw	r16, r24
   1a560:	ce 01       	movw	r24, r28
   1a562:	f7 de       	rcall	.-530    	; 0x1a352 <_ZN5Print7printlnEv>
   1a564:	80 0f       	add	r24, r16
   1a566:	91 1f       	adc	r25, r17
   1a568:	df 91       	pop	r29
   1a56a:	cf 91       	pop	r28
   1a56c:	1f 91       	pop	r17
   1a56e:	0f 91       	pop	r16
   1a570:	08 95       	ret

0001a572 <_ZN5Print10printFloatEdh>:
   1a572:	7f 92       	push	r7
   1a574:	8f 92       	push	r8
   1a576:	9f 92       	push	r9
   1a578:	af 92       	push	r10
   1a57a:	bf 92       	push	r11
   1a57c:	cf 92       	push	r12
   1a57e:	df 92       	push	r13
   1a580:	ef 92       	push	r14
   1a582:	ff 92       	push	r15
   1a584:	0f 93       	push	r16
   1a586:	1f 93       	push	r17
   1a588:	cf 93       	push	r28
   1a58a:	df 93       	push	r29
   1a58c:	8c 01       	movw	r16, r24
   1a58e:	6a 01       	movw	r12, r20
   1a590:	7b 01       	movw	r14, r22
   1a592:	72 2e       	mov	r7, r18
   1a594:	9a 01       	movw	r18, r20
   1a596:	ab 01       	movw	r20, r22
   1a598:	c7 01       	movw	r24, r14
   1a59a:	b6 01       	movw	r22, r12
   1a59c:	0e 94 71 e6 	call	0x1cce2	; 0x1cce2 <__unordsf2>
   1a5a0:	88 23       	and	r24, r24
   1a5a2:	19 f0       	breq	.+6      	; 0x1a5aa <_ZN5Print10printFloatEdh+0x38>
   1a5a4:	6d ee       	ldi	r22, 0xED	; 237
   1a5a6:	77 e0       	ldi	r23, 0x07	; 7
   1a5a8:	25 c0       	rjmp	.+74     	; 0x1a5f4 <_ZN5Print10printFloatEdh+0x82>
   1a5aa:	46 01       	movw	r8, r12
   1a5ac:	57 01       	movw	r10, r14
   1a5ae:	e8 94       	clt
   1a5b0:	b7 f8       	bld	r11, 7
   1a5b2:	2f ef       	ldi	r18, 0xFF	; 255
   1a5b4:	3f ef       	ldi	r19, 0xFF	; 255
   1a5b6:	4f e7       	ldi	r20, 0x7F	; 127
   1a5b8:	5f e7       	ldi	r21, 0x7F	; 127
   1a5ba:	c5 01       	movw	r24, r10
   1a5bc:	b4 01       	movw	r22, r8
   1a5be:	0e 94 71 e6 	call	0x1cce2	; 0x1cce2 <__unordsf2>
   1a5c2:	81 11       	cpse	r24, r1
   1a5c4:	0c c0       	rjmp	.+24     	; 0x1a5de <_ZN5Print10printFloatEdh+0x6c>
   1a5c6:	2f ef       	ldi	r18, 0xFF	; 255
   1a5c8:	3f ef       	ldi	r19, 0xFF	; 255
   1a5ca:	4f e7       	ldi	r20, 0x7F	; 127
   1a5cc:	5f e7       	ldi	r21, 0x7F	; 127
   1a5ce:	c5 01       	movw	r24, r10
   1a5d0:	b4 01       	movw	r22, r8
   1a5d2:	c8 da       	rcall	.-2672   	; 0x19b64 <__cmpsf2>
   1a5d4:	18 16       	cp	r1, r24
   1a5d6:	1c f4       	brge	.+6      	; 0x1a5de <_ZN5Print10printFloatEdh+0x6c>
   1a5d8:	61 ef       	ldi	r22, 0xF1	; 241
   1a5da:	77 e0       	ldi	r23, 0x07	; 7
   1a5dc:	0b c0       	rjmp	.+22     	; 0x1a5f4 <_ZN5Print10printFloatEdh+0x82>
   1a5de:	2f ef       	ldi	r18, 0xFF	; 255
   1a5e0:	3f ef       	ldi	r19, 0xFF	; 255
   1a5e2:	4f e7       	ldi	r20, 0x7F	; 127
   1a5e4:	5f e4       	ldi	r21, 0x4F	; 79
   1a5e6:	c7 01       	movw	r24, r14
   1a5e8:	b6 01       	movw	r22, r12
   1a5ea:	06 dc       	rcall	.-2036   	; 0x19df8 <__gesf2>
   1a5ec:	18 16       	cp	r1, r24
   1a5ee:	94 f4       	brge	.+36     	; 0x1a614 <_ZN5Print10printFloatEdh+0xa2>
   1a5f0:	65 ef       	ldi	r22, 0xF5	; 245
   1a5f2:	77 e0       	ldi	r23, 0x07	; 7
   1a5f4:	c8 01       	movw	r24, r16
   1a5f6:	df 91       	pop	r29
   1a5f8:	cf 91       	pop	r28
   1a5fa:	1f 91       	pop	r17
   1a5fc:	0f 91       	pop	r16
   1a5fe:	ff 90       	pop	r15
   1a600:	ef 90       	pop	r14
   1a602:	df 90       	pop	r13
   1a604:	cf 90       	pop	r12
   1a606:	bf 90       	pop	r11
   1a608:	af 90       	pop	r10
   1a60a:	9f 90       	pop	r9
   1a60c:	8f 90       	pop	r8
   1a60e:	7f 90       	pop	r7
   1a610:	0c 94 86 84 	jmp	0x1090c	; 0x1090c <_ZN5Print5writeEPKc>
   1a614:	2f ef       	ldi	r18, 0xFF	; 255
   1a616:	3f ef       	ldi	r19, 0xFF	; 255
   1a618:	4f e7       	ldi	r20, 0x7F	; 127
   1a61a:	5f ec       	ldi	r21, 0xCF	; 207
   1a61c:	c7 01       	movw	r24, r14
   1a61e:	b6 01       	movw	r22, r12
   1a620:	a1 da       	rcall	.-2750   	; 0x19b64 <__cmpsf2>
   1a622:	87 fd       	sbrc	r24, 7
   1a624:	e5 cf       	rjmp	.-54     	; 0x1a5f0 <_ZN5Print10printFloatEdh+0x7e>
   1a626:	20 e0       	ldi	r18, 0x00	; 0
   1a628:	30 e0       	ldi	r19, 0x00	; 0
   1a62a:	a9 01       	movw	r20, r18
   1a62c:	c7 01       	movw	r24, r14
   1a62e:	b6 01       	movw	r22, r12
   1a630:	99 da       	rcall	.-2766   	; 0x19b64 <__cmpsf2>
   1a632:	87 ff       	sbrs	r24, 7
   1a634:	09 c0       	rjmp	.+18     	; 0x1a648 <_ZN5Print10printFloatEdh+0xd6>
   1a636:	6d e2       	ldi	r22, 0x2D	; 45
   1a638:	c8 01       	movw	r24, r16
   1a63a:	84 de       	rcall	.-760    	; 0x1a344 <_ZN5Print5printEc>
   1a63c:	ec 01       	movw	r28, r24
   1a63e:	f7 fa       	bst	r15, 7
   1a640:	f0 94       	com	r15
   1a642:	f7 f8       	bld	r15, 7
   1a644:	f0 94       	com	r15
   1a646:	02 c0       	rjmp	.+4      	; 0x1a64c <_ZN5Print10printFloatEdh+0xda>
   1a648:	c0 e0       	ldi	r28, 0x00	; 0
   1a64a:	d0 e0       	ldi	r29, 0x00	; 0
   1a64c:	b1 2c       	mov	r11, r1
   1a64e:	60 e0       	ldi	r22, 0x00	; 0
   1a650:	70 e0       	ldi	r23, 0x00	; 0
   1a652:	80 e0       	ldi	r24, 0x00	; 0
   1a654:	9f e3       	ldi	r25, 0x3F	; 63
   1a656:	7b 14       	cp	r7, r11
   1a658:	39 f0       	breq	.+14     	; 0x1a668 <_ZN5Print10printFloatEdh+0xf6>
   1a65a:	20 e0       	ldi	r18, 0x00	; 0
   1a65c:	30 e0       	ldi	r19, 0x00	; 0
   1a65e:	40 e2       	ldi	r20, 0x20	; 32
   1a660:	51 e4       	ldi	r21, 0x41	; 65
   1a662:	84 da       	rcall	.-2808   	; 0x19b6c <__divsf3>
   1a664:	b3 94       	inc	r11
   1a666:	f7 cf       	rjmp	.-18     	; 0x1a656 <_ZN5Print10printFloatEdh+0xe4>
   1a668:	a7 01       	movw	r20, r14
   1a66a:	96 01       	movw	r18, r12
   1a66c:	17 da       	rcall	.-3026   	; 0x19a9c <__addsf3>
   1a66e:	6b 01       	movw	r12, r22
   1a670:	7c 01       	movw	r14, r24
   1a672:	e4 da       	rcall	.-2616   	; 0x19c3c <__fixunssfsi>
   1a674:	4b 01       	movw	r8, r22
   1a676:	5c 01       	movw	r10, r24
   1a678:	2a e0       	ldi	r18, 0x0A	; 10
   1a67a:	ab 01       	movw	r20, r22
   1a67c:	bc 01       	movw	r22, r24
   1a67e:	c8 01       	movw	r24, r16
   1a680:	8d de       	rcall	.-742    	; 0x1a39c <_ZN5Print11printNumberEmh>
   1a682:	c8 0f       	add	r28, r24
   1a684:	d9 1f       	adc	r29, r25
   1a686:	77 20       	and	r7, r7
   1a688:	79 f1       	breq	.+94     	; 0x1a6e8 <_ZN5Print10printFloatEdh+0x176>
   1a68a:	c5 01       	movw	r24, r10
   1a68c:	b4 01       	movw	r22, r8
   1a68e:	02 db       	rcall	.-2556   	; 0x19c94 <__floatunsisf>
   1a690:	9b 01       	movw	r18, r22
   1a692:	ac 01       	movw	r20, r24
   1a694:	c7 01       	movw	r24, r14
   1a696:	b6 01       	movw	r22, r12
   1a698:	00 da       	rcall	.-3072   	; 0x19a9a <__subsf3>
   1a69a:	6b 01       	movw	r12, r22
   1a69c:	7c 01       	movw	r14, r24
   1a69e:	6e e2       	ldi	r22, 0x2E	; 46
   1a6a0:	c8 01       	movw	r24, r16
   1a6a2:	50 de       	rcall	.-864    	; 0x1a344 <_ZN5Print5printEc>
   1a6a4:	c8 0f       	add	r28, r24
   1a6a6:	d9 1f       	adc	r29, r25
   1a6a8:	20 e0       	ldi	r18, 0x00	; 0
   1a6aa:	30 e0       	ldi	r19, 0x00	; 0
   1a6ac:	40 e2       	ldi	r20, 0x20	; 32
   1a6ae:	51 e4       	ldi	r21, 0x41	; 65
   1a6b0:	c7 01       	movw	r24, r14
   1a6b2:	b6 01       	movw	r22, r12
   1a6b4:	a5 db       	rcall	.-2230   	; 0x19e00 <__mulsf3>
   1a6b6:	4b 01       	movw	r8, r22
   1a6b8:	5c 01       	movw	r10, r24
   1a6ba:	c0 da       	rcall	.-2688   	; 0x19c3c <__fixunssfsi>
   1a6bc:	6b 01       	movw	r12, r22
   1a6be:	7c 01       	movw	r14, r24
   1a6c0:	4a e0       	ldi	r20, 0x0A	; 10
   1a6c2:	50 e0       	ldi	r21, 0x00	; 0
   1a6c4:	c8 01       	movw	r24, r16
   1a6c6:	d5 de       	rcall	.-598    	; 0x1a472 <_ZN5Print5printEji>
   1a6c8:	c8 0f       	add	r28, r24
   1a6ca:	d9 1f       	adc	r29, r25
   1a6cc:	b6 01       	movw	r22, r12
   1a6ce:	80 e0       	ldi	r24, 0x00	; 0
   1a6d0:	90 e0       	ldi	r25, 0x00	; 0
   1a6d2:	e0 da       	rcall	.-2624   	; 0x19c94 <__floatunsisf>
   1a6d4:	9b 01       	movw	r18, r22
   1a6d6:	ac 01       	movw	r20, r24
   1a6d8:	c5 01       	movw	r24, r10
   1a6da:	b4 01       	movw	r22, r8
   1a6dc:	de d9       	rcall	.-3140   	; 0x19a9a <__subsf3>
   1a6de:	6b 01       	movw	r12, r22
   1a6e0:	7c 01       	movw	r14, r24
   1a6e2:	7a 94       	dec	r7
   1a6e4:	71 10       	cpse	r7, r1
   1a6e6:	e0 cf       	rjmp	.-64     	; 0x1a6a8 <_ZN5Print10printFloatEdh+0x136>
   1a6e8:	ce 01       	movw	r24, r28
   1a6ea:	df 91       	pop	r29
   1a6ec:	cf 91       	pop	r28
   1a6ee:	1f 91       	pop	r17
   1a6f0:	0f 91       	pop	r16
   1a6f2:	ff 90       	pop	r15
   1a6f4:	ef 90       	pop	r14
   1a6f6:	df 90       	pop	r13
   1a6f8:	cf 90       	pop	r12
   1a6fa:	bf 90       	pop	r11
   1a6fc:	af 90       	pop	r10
   1a6fe:	9f 90       	pop	r9
   1a700:	8f 90       	pop	r8
   1a702:	7f 90       	pop	r7
   1a704:	08 95       	ret

0001a706 <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
   1a706:	0f 93       	push	r16
   1a708:	1f 93       	push	r17
   1a70a:	cf 93       	push	r28
   1a70c:	df 93       	push	r29
   1a70e:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a710:	30 df       	rcall	.-416    	; 0x1a572 <_ZN5Print10printFloatEdh>
   1a712:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
   1a714:	ce 01       	movw	r24, r28
   1a716:	1d de       	rcall	.-966    	; 0x1a352 <_ZN5Print7printlnEv>
  return n;
}
   1a718:	80 0f       	add	r24, r16
   1a71a:	91 1f       	adc	r25, r17
   1a71c:	df 91       	pop	r29
   1a71e:	cf 91       	pop	r28
   1a720:	1f 91       	pop	r17
   1a722:	0f 91       	pop	r16
   1a724:	08 95       	ret

0001a726 <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
   1a726:	1f 92       	push	r1
   1a728:	0f 92       	push	r0
   1a72a:	0f b6       	in	r0, 0x3f	; 63
   1a72c:	0f 92       	push	r0
   1a72e:	11 24       	eor	r1, r1
   1a730:	2f 93       	push	r18
   1a732:	3f 93       	push	r19
   1a734:	8f 93       	push	r24
   1a736:	9f 93       	push	r25
   1a738:	af 93       	push	r26
   1a73a:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
   1a73c:	80 91 cd 17 	lds	r24, 0x17CD	; 0x8017cd <timer0_millis>
   1a740:	90 91 ce 17 	lds	r25, 0x17CE	; 0x8017ce <timer0_millis+0x1>
   1a744:	a0 91 cf 17 	lds	r26, 0x17CF	; 0x8017cf <timer0_millis+0x2>
   1a748:	b0 91 d0 17 	lds	r27, 0x17D0	; 0x8017d0 <timer0_millis+0x3>
	unsigned char f = timer0_fract;
   1a74c:	30 91 cc 17 	lds	r19, 0x17CC	; 0x8017cc <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
   1a750:	23 e0       	ldi	r18, 0x03	; 3
   1a752:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
   1a754:	2d 37       	cpi	r18, 0x7D	; 125
   1a756:	20 f4       	brcc	.+8      	; 0x1a760 <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
   1a758:	01 96       	adiw	r24, 0x01	; 1
   1a75a:	a1 1d       	adc	r26, r1
   1a75c:	b1 1d       	adc	r27, r1
   1a75e:	05 c0       	rjmp	.+10     	; 0x1a76a <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
   1a760:	26 e8       	ldi	r18, 0x86	; 134
   1a762:	23 0f       	add	r18, r19
		m += 1;
   1a764:	02 96       	adiw	r24, 0x02	; 2
   1a766:	a1 1d       	adc	r26, r1
   1a768:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
   1a76a:	20 93 cc 17 	sts	0x17CC, r18	; 0x8017cc <timer0_fract>
	timer0_millis = m;
   1a76e:	80 93 cd 17 	sts	0x17CD, r24	; 0x8017cd <timer0_millis>
   1a772:	90 93 ce 17 	sts	0x17CE, r25	; 0x8017ce <timer0_millis+0x1>
   1a776:	a0 93 cf 17 	sts	0x17CF, r26	; 0x8017cf <timer0_millis+0x2>
   1a77a:	b0 93 d0 17 	sts	0x17D0, r27	; 0x8017d0 <timer0_millis+0x3>
	timer0_overflow_count++;
   1a77e:	80 91 d1 17 	lds	r24, 0x17D1	; 0x8017d1 <timer0_overflow_count>
   1a782:	90 91 d2 17 	lds	r25, 0x17D2	; 0x8017d2 <timer0_overflow_count+0x1>
   1a786:	a0 91 d3 17 	lds	r26, 0x17D3	; 0x8017d3 <timer0_overflow_count+0x2>
   1a78a:	b0 91 d4 17 	lds	r27, 0x17D4	; 0x8017d4 <timer0_overflow_count+0x3>
   1a78e:	01 96       	adiw	r24, 0x01	; 1
   1a790:	a1 1d       	adc	r26, r1
   1a792:	b1 1d       	adc	r27, r1
   1a794:	80 93 d1 17 	sts	0x17D1, r24	; 0x8017d1 <timer0_overflow_count>
   1a798:	90 93 d2 17 	sts	0x17D2, r25	; 0x8017d2 <timer0_overflow_count+0x1>
   1a79c:	a0 93 d3 17 	sts	0x17D3, r26	; 0x8017d3 <timer0_overflow_count+0x2>
   1a7a0:	b0 93 d4 17 	sts	0x17D4, r27	; 0x8017d4 <timer0_overflow_count+0x3>
}
   1a7a4:	bf 91       	pop	r27
   1a7a6:	af 91       	pop	r26
   1a7a8:	9f 91       	pop	r25
   1a7aa:	8f 91       	pop	r24
   1a7ac:	3f 91       	pop	r19
   1a7ae:	2f 91       	pop	r18
   1a7b0:	0f 90       	pop	r0
   1a7b2:	0f be       	out	0x3f, r0	; 63
   1a7b4:	0f 90       	pop	r0
   1a7b6:	1f 90       	pop	r1
   1a7b8:	18 95       	reti

0001a7ba <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
   1a7ba:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
   1a7bc:	f8 94       	cli
	m = timer0_millis;
   1a7be:	60 91 cd 17 	lds	r22, 0x17CD	; 0x8017cd <timer0_millis>
   1a7c2:	70 91 ce 17 	lds	r23, 0x17CE	; 0x8017ce <timer0_millis+0x1>
   1a7c6:	80 91 cf 17 	lds	r24, 0x17CF	; 0x8017cf <timer0_millis+0x2>
   1a7ca:	90 91 d0 17 	lds	r25, 0x17D0	; 0x8017d0 <timer0_millis+0x3>
	SREG = oldSREG;
   1a7ce:	2f bf       	out	0x3f, r18	; 63

	return m;
}
   1a7d0:	08 95       	ret

0001a7d2 <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
   1a7d2:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
   1a7d4:	f8 94       	cli
	m = timer0_overflow_count;
   1a7d6:	80 91 d1 17 	lds	r24, 0x17D1	; 0x8017d1 <timer0_overflow_count>
   1a7da:	90 91 d2 17 	lds	r25, 0x17D2	; 0x8017d2 <timer0_overflow_count+0x1>
   1a7de:	a0 91 d3 17 	lds	r26, 0x17D3	; 0x8017d3 <timer0_overflow_count+0x2>
   1a7e2:	b0 91 d4 17 	lds	r27, 0x17D4	; 0x8017d4 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
   1a7e6:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
   1a7e8:	a8 9b       	sbis	0x15, 0	; 21
   1a7ea:	05 c0       	rjmp	.+10     	; 0x1a7f6 <micros+0x24>
   1a7ec:	2f 3f       	cpi	r18, 0xFF	; 255
   1a7ee:	19 f0       	breq	.+6      	; 0x1a7f6 <micros+0x24>
		m++;
   1a7f0:	01 96       	adiw	r24, 0x01	; 1
   1a7f2:	a1 1d       	adc	r26, r1
   1a7f4:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
   1a7f6:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
   1a7f8:	ba 2f       	mov	r27, r26
   1a7fa:	a9 2f       	mov	r26, r25
   1a7fc:	98 2f       	mov	r25, r24
   1a7fe:	88 27       	eor	r24, r24
   1a800:	82 0f       	add	r24, r18
   1a802:	91 1d       	adc	r25, r1
   1a804:	a1 1d       	adc	r26, r1
   1a806:	b1 1d       	adc	r27, r1
   1a808:	bc 01       	movw	r22, r24
   1a80a:	cd 01       	movw	r24, r26
   1a80c:	42 e0       	ldi	r20, 0x02	; 2
   1a80e:	66 0f       	add	r22, r22
   1a810:	77 1f       	adc	r23, r23
   1a812:	88 1f       	adc	r24, r24
   1a814:	99 1f       	adc	r25, r25
   1a816:	4a 95       	dec	r20
   1a818:	d1 f7       	brne	.-12     	; 0x1a80e <micros+0x3c>
}
   1a81a:	08 95       	ret

0001a81c <delay>:

void delay(unsigned long ms)
{
   1a81c:	8f 92       	push	r8
   1a81e:	9f 92       	push	r9
   1a820:	af 92       	push	r10
   1a822:	bf 92       	push	r11
   1a824:	cf 92       	push	r12
   1a826:	df 92       	push	r13
   1a828:	ef 92       	push	r14
   1a82a:	ff 92       	push	r15
   1a82c:	6b 01       	movw	r12, r22
   1a82e:	7c 01       	movw	r14, r24
	uint32_t start = micros();
   1a830:	d0 df       	rcall	.-96     	; 0x1a7d2 <micros>
   1a832:	4b 01       	movw	r8, r22
   1a834:	5c 01       	movw	r10, r24

	while (ms > 0) {
   1a836:	c1 14       	cp	r12, r1
   1a838:	d1 04       	cpc	r13, r1
   1a83a:	e1 04       	cpc	r14, r1
   1a83c:	f1 04       	cpc	r15, r1
   1a83e:	f9 f0       	breq	.+62     	; 0x1a87e <delay+0x62>
		yield();
   1a840:	0e 94 3c df 	call	0x1be78	; 0x1be78 <yield>
		while ( ms > 0 && (micros() - start) >= 1000) {
   1a844:	c6 df       	rcall	.-116    	; 0x1a7d2 <micros>
   1a846:	dc 01       	movw	r26, r24
   1a848:	cb 01       	movw	r24, r22
   1a84a:	88 19       	sub	r24, r8
   1a84c:	99 09       	sbc	r25, r9
   1a84e:	aa 09       	sbc	r26, r10
   1a850:	bb 09       	sbc	r27, r11
   1a852:	88 3e       	cpi	r24, 0xE8	; 232
   1a854:	93 40       	sbci	r25, 0x03	; 3
   1a856:	a1 05       	cpc	r26, r1
   1a858:	b1 05       	cpc	r27, r1
   1a85a:	68 f3       	brcs	.-38     	; 0x1a836 <delay+0x1a>
			ms--;
   1a85c:	21 e0       	ldi	r18, 0x01	; 1
   1a85e:	c2 1a       	sub	r12, r18
   1a860:	d1 08       	sbc	r13, r1
   1a862:	e1 08       	sbc	r14, r1
   1a864:	f1 08       	sbc	r15, r1
			start += 1000;
   1a866:	88 ee       	ldi	r24, 0xE8	; 232
   1a868:	88 0e       	add	r8, r24
   1a86a:	83 e0       	ldi	r24, 0x03	; 3
   1a86c:	98 1e       	adc	r9, r24
   1a86e:	a1 1c       	adc	r10, r1
   1a870:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
   1a872:	c1 14       	cp	r12, r1
   1a874:	d1 04       	cpc	r13, r1
   1a876:	e1 04       	cpc	r14, r1
   1a878:	f1 04       	cpc	r15, r1
   1a87a:	21 f7       	brne	.-56     	; 0x1a844 <delay+0x28>
   1a87c:	dc cf       	rjmp	.-72     	; 0x1a836 <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
   1a87e:	ff 90       	pop	r15
   1a880:	ef 90       	pop	r14
   1a882:	df 90       	pop	r13
   1a884:	cf 90       	pop	r12
   1a886:	bf 90       	pop	r11
   1a888:	af 90       	pop	r10
   1a88a:	9f 90       	pop	r9
   1a88c:	8f 90       	pop	r8
   1a88e:	08 95       	ret

0001a890 <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
   1a890:	82 30       	cpi	r24, 0x02	; 2
   1a892:	91 05       	cpc	r25, r1
   1a894:	38 f0       	brcs	.+14     	; 0x1a8a4 <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
   1a896:	88 0f       	add	r24, r24
   1a898:	99 1f       	adc	r25, r25
   1a89a:	88 0f       	add	r24, r24
   1a89c:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
   1a89e:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
   1a8a0:	01 97       	sbiw	r24, 0x01	; 1
   1a8a2:	f1 f7       	brne	.-4      	; 0x1a8a0 <delayMicroseconds+0x10>
   1a8a4:	08 95       	ret

0001a8a6 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
   1a8a6:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
   1a8a8:	84 b5       	in	r24, 0x24	; 36
   1a8aa:	82 60       	ori	r24, 0x02	; 2
   1a8ac:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
   1a8ae:	84 b5       	in	r24, 0x24	; 36
   1a8b0:	81 60       	ori	r24, 0x01	; 1
   1a8b2:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
   1a8b4:	85 b5       	in	r24, 0x25	; 37
   1a8b6:	82 60       	ori	r24, 0x02	; 2
   1a8b8:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
   1a8ba:	85 b5       	in	r24, 0x25	; 37
   1a8bc:	81 60       	ori	r24, 0x01	; 1
   1a8be:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
   1a8c0:	ee e6       	ldi	r30, 0x6E	; 110
   1a8c2:	f0 e0       	ldi	r31, 0x00	; 0
   1a8c4:	80 81       	ld	r24, Z
   1a8c6:	81 60       	ori	r24, 0x01	; 1
   1a8c8:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
   1a8ca:	e1 e8       	ldi	r30, 0x81	; 129
   1a8cc:	f0 e0       	ldi	r31, 0x00	; 0
   1a8ce:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
   1a8d0:	80 81       	ld	r24, Z
   1a8d2:	82 60       	ori	r24, 0x02	; 2
   1a8d4:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
   1a8d6:	80 81       	ld	r24, Z
   1a8d8:	81 60       	ori	r24, 0x01	; 1
   1a8da:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
   1a8dc:	e0 e8       	ldi	r30, 0x80	; 128
   1a8de:	f0 e0       	ldi	r31, 0x00	; 0
   1a8e0:	80 81       	ld	r24, Z
   1a8e2:	81 60       	ori	r24, 0x01	; 1
   1a8e4:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
   1a8e6:	e1 eb       	ldi	r30, 0xB1	; 177
   1a8e8:	f0 e0       	ldi	r31, 0x00	; 0
   1a8ea:	80 81       	ld	r24, Z
   1a8ec:	84 60       	ori	r24, 0x04	; 4
   1a8ee:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
   1a8f0:	e0 eb       	ldi	r30, 0xB0	; 176
   1a8f2:	f0 e0       	ldi	r31, 0x00	; 0
   1a8f4:	80 81       	ld	r24, Z
   1a8f6:	81 60       	ori	r24, 0x01	; 1
   1a8f8:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
   1a8fa:	e1 e9       	ldi	r30, 0x91	; 145
   1a8fc:	f0 e0       	ldi	r31, 0x00	; 0
   1a8fe:	80 81       	ld	r24, Z
   1a900:	82 60       	ori	r24, 0x02	; 2
   1a902:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
   1a904:	80 81       	ld	r24, Z
   1a906:	81 60       	ori	r24, 0x01	; 1
   1a908:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
   1a90a:	e0 e9       	ldi	r30, 0x90	; 144
   1a90c:	f0 e0       	ldi	r31, 0x00	; 0
   1a90e:	80 81       	ld	r24, Z
   1a910:	81 60       	ori	r24, 0x01	; 1
   1a912:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
   1a914:	e1 ea       	ldi	r30, 0xA1	; 161
   1a916:	f0 e0       	ldi	r31, 0x00	; 0
   1a918:	80 81       	ld	r24, Z
   1a91a:	82 60       	ori	r24, 0x02	; 2
   1a91c:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
   1a91e:	80 81       	ld	r24, Z
   1a920:	81 60       	ori	r24, 0x01	; 1
   1a922:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
   1a924:	e0 ea       	ldi	r30, 0xA0	; 160
   1a926:	f0 e0       	ldi	r31, 0x00	; 0
   1a928:	80 81       	ld	r24, Z
   1a92a:	81 60       	ori	r24, 0x01	; 1
   1a92c:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
   1a92e:	e1 e2       	ldi	r30, 0x21	; 33
   1a930:	f1 e0       	ldi	r31, 0x01	; 1
   1a932:	80 81       	ld	r24, Z
   1a934:	82 60       	ori	r24, 0x02	; 2
   1a936:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
   1a938:	80 81       	ld	r24, Z
   1a93a:	81 60       	ori	r24, 0x01	; 1
   1a93c:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
   1a93e:	e0 e2       	ldi	r30, 0x20	; 32
   1a940:	f1 e0       	ldi	r31, 0x01	; 1
   1a942:	80 81       	ld	r24, Z
   1a944:	81 60       	ori	r24, 0x01	; 1
   1a946:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
   1a948:	ea e7       	ldi	r30, 0x7A	; 122
   1a94a:	f0 e0       	ldi	r31, 0x00	; 0
   1a94c:	80 81       	ld	r24, Z
   1a94e:	84 60       	ori	r24, 0x04	; 4
   1a950:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
   1a952:	80 81       	ld	r24, Z
   1a954:	82 60       	ori	r24, 0x02	; 2
   1a956:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
   1a958:	80 81       	ld	r24, Z
   1a95a:	81 60       	ori	r24, 0x01	; 1
   1a95c:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
   1a95e:	80 81       	ld	r24, Z
   1a960:	80 68       	ori	r24, 0x80	; 128
   1a962:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
   1a964:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
   1a968:	08 95       	ret

0001a96a <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
   1a96a:	90 e0       	ldi	r25, 0x00	; 0
   1a96c:	fc 01       	movw	r30, r24
   1a96e:	31 97       	sbiw	r30, 0x01	; 1
   1a970:	e2 31       	cpi	r30, 0x12	; 18
   1a972:	f1 05       	cpc	r31, r1
   1a974:	08 f0       	brcs	.+2      	; 0x1a978 <turnOffPWM+0xe>
   1a976:	4e c0       	rjmp	.+156    	; 0x1aa14 <turnOffPWM+0xaa>
   1a978:	88 27       	eor	r24, r24
   1a97a:	e9 50       	subi	r30, 0x09	; 9
   1a97c:	ff 4f       	sbci	r31, 0xFF	; 255
   1a97e:	8f 4f       	sbci	r24, 0xFF	; 255
   1a980:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
   1a984:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a988:	8f 77       	andi	r24, 0x7F	; 127
   1a98a:	03 c0       	rjmp	.+6      	; 0x1a992 <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
   1a98c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a990:	8f 7d       	andi	r24, 0xDF	; 223
   1a992:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a996:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
   1a998:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a99c:	87 7f       	andi	r24, 0xF7	; 247
   1a99e:	f9 cf       	rjmp	.-14     	; 0x1a992 <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
   1a9a0:	84 b5       	in	r24, 0x24	; 36
   1a9a2:	8f 77       	andi	r24, 0x7F	; 127
   1a9a4:	02 c0       	rjmp	.+4      	; 0x1a9aa <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
   1a9a6:	84 b5       	in	r24, 0x24	; 36
   1a9a8:	8f 7d       	andi	r24, 0xDF	; 223
   1a9aa:	84 bd       	out	0x24, r24	; 36
   1a9ac:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
   1a9ae:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a9b2:	8f 77       	andi	r24, 0x7F	; 127
   1a9b4:	03 c0       	rjmp	.+6      	; 0x1a9bc <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
   1a9b6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a9ba:	8f 7d       	andi	r24, 0xDF	; 223
   1a9bc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a9c0:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
   1a9c2:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a9c6:	8f 77       	andi	r24, 0x7F	; 127
   1a9c8:	07 c0       	rjmp	.+14     	; 0x1a9d8 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
   1a9ca:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a9ce:	8f 7d       	andi	r24, 0xDF	; 223
   1a9d0:	03 c0       	rjmp	.+6      	; 0x1a9d8 <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
   1a9d2:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a9d6:	87 7f       	andi	r24, 0xF7	; 247
   1a9d8:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a9dc:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
   1a9de:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a9e2:	8f 77       	andi	r24, 0x7F	; 127
   1a9e4:	07 c0       	rjmp	.+14     	; 0x1a9f4 <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
   1a9e6:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a9ea:	8f 7d       	andi	r24, 0xDF	; 223
   1a9ec:	03 c0       	rjmp	.+6      	; 0x1a9f4 <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
   1a9ee:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a9f2:	87 7f       	andi	r24, 0xF7	; 247
   1a9f4:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a9f8:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
   1a9fa:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a9fe:	8f 77       	andi	r24, 0x7F	; 127
   1aa00:	07 c0       	rjmp	.+14     	; 0x1aa10 <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
   1aa02:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1aa06:	8f 7d       	andi	r24, 0xDF	; 223
   1aa08:	03 c0       	rjmp	.+6      	; 0x1aa10 <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
   1aa0a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1aa0e:	87 7f       	andi	r24, 0xF7	; 247
   1aa10:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1aa14:	08 95       	ret

0001aa16 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
   1aa16:	cf 93       	push	r28
   1aa18:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
   1aa1a:	90 e0       	ldi	r25, 0x00	; 0
   1aa1c:	fc 01       	movw	r30, r24
   1aa1e:	e1 5f       	subi	r30, 0xF1	; 241
   1aa20:	f9 4b       	sbci	r31, 0xB9	; 185
   1aa22:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
   1aa24:	fc 01       	movw	r30, r24
   1aa26:	eb 5a       	subi	r30, 0xAB	; 171
   1aa28:	f9 4b       	sbci	r31, 0xB9	; 185
   1aa2a:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
   1aa2c:	88 23       	and	r24, r24
   1aa2e:	61 f1       	breq	.+88     	; 0x1aa88 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
   1aa30:	90 e0       	ldi	r25, 0x00	; 0
   1aa32:	88 0f       	add	r24, r24
   1aa34:	99 1f       	adc	r25, r25
   1aa36:	fc 01       	movw	r30, r24
   1aa38:	e1 53       	subi	r30, 0x31	; 49
   1aa3a:	f9 4b       	sbci	r31, 0xB9	; 185
   1aa3c:	c5 91       	lpm	r28, Z+
   1aa3e:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
   1aa40:	fc 01       	movw	r30, r24
   1aa42:	eb 54       	subi	r30, 0x4B	; 75
   1aa44:	f9 4b       	sbci	r31, 0xB9	; 185
   1aa46:	a5 91       	lpm	r26, Z+
   1aa48:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
   1aa4a:	61 11       	cpse	r22, r1
   1aa4c:	09 c0       	rjmp	.+18     	; 0x1aa60 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
   1aa4e:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1aa50:	f8 94       	cli
		*reg &= ~bit;
   1aa52:	88 81       	ld	r24, Y
   1aa54:	20 95       	com	r18
   1aa56:	82 23       	and	r24, r18
   1aa58:	88 83       	st	Y, r24
		*out &= ~bit;
   1aa5a:	ec 91       	ld	r30, X
   1aa5c:	2e 23       	and	r18, r30
   1aa5e:	0b c0       	rjmp	.+22     	; 0x1aa76 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
   1aa60:	62 30       	cpi	r22, 0x02	; 2
   1aa62:	61 f4       	brne	.+24     	; 0x1aa7c <pinMode+0x66>
		uint8_t oldSREG = SREG;
   1aa64:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1aa66:	f8 94       	cli
		*reg &= ~bit;
   1aa68:	88 81       	ld	r24, Y
   1aa6a:	32 2f       	mov	r19, r18
   1aa6c:	30 95       	com	r19
   1aa6e:	83 23       	and	r24, r19
   1aa70:	88 83       	st	Y, r24
		*out |= bit;
   1aa72:	ec 91       	ld	r30, X
   1aa74:	2e 2b       	or	r18, r30
   1aa76:	2c 93       	st	X, r18
		SREG = oldSREG;
   1aa78:	9f bf       	out	0x3f, r25	; 63
   1aa7a:	06 c0       	rjmp	.+12     	; 0x1aa88 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
   1aa7c:	8f b7       	in	r24, 0x3f	; 63
                cli();
   1aa7e:	f8 94       	cli
		*reg |= bit;
   1aa80:	e8 81       	ld	r30, Y
   1aa82:	2e 2b       	or	r18, r30
   1aa84:	28 83       	st	Y, r18
		SREG = oldSREG;
   1aa86:	8f bf       	out	0x3f, r24	; 63
	}
}
   1aa88:	df 91       	pop	r29
   1aa8a:	cf 91       	pop	r28
   1aa8c:	08 95       	ret

0001aa8e <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
   1aa8e:	1f 93       	push	r17
   1aa90:	cf 93       	push	r28
   1aa92:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1aa94:	28 2f       	mov	r18, r24
   1aa96:	30 e0       	ldi	r19, 0x00	; 0
   1aa98:	f9 01       	movw	r30, r18
   1aa9a:	e7 53       	subi	r30, 0x37	; 55
   1aa9c:	fa 4b       	sbci	r31, 0xBA	; 186
   1aa9e:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1aaa0:	f9 01       	movw	r30, r18
   1aaa2:	e1 5f       	subi	r30, 0xF1	; 241
   1aaa4:	f9 4b       	sbci	r31, 0xB9	; 185
   1aaa6:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1aaa8:	f9 01       	movw	r30, r18
   1aaaa:	eb 5a       	subi	r30, 0xAB	; 171
   1aaac:	f9 4b       	sbci	r31, 0xB9	; 185
   1aaae:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
   1aab0:	cc 23       	and	r28, r28
   1aab2:	b9 f0       	breq	.+46     	; 0x1aae2 <digitalWrite+0x54>
   1aab4:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1aab6:	81 11       	cpse	r24, r1
   1aab8:	58 df       	rcall	.-336    	; 0x1a96a <turnOffPWM>

	out = portOutputRegister(port);
   1aaba:	ec 2f       	mov	r30, r28
   1aabc:	f0 e0       	ldi	r31, 0x00	; 0
   1aabe:	ee 0f       	add	r30, r30
   1aac0:	ff 1f       	adc	r31, r31
   1aac2:	eb 54       	subi	r30, 0x4B	; 75
   1aac4:	f9 4b       	sbci	r31, 0xB9	; 185
   1aac6:	a5 91       	lpm	r26, Z+
   1aac8:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
   1aaca:	9f b7       	in	r25, 0x3f	; 63
	cli();
   1aacc:	f8 94       	cli

	if (val == LOW) {
   1aace:	11 11       	cpse	r17, r1
   1aad0:	04 c0       	rjmp	.+8      	; 0x1aada <digitalWrite+0x4c>
		*out &= ~bit;
   1aad2:	8c 91       	ld	r24, X
   1aad4:	d0 95       	com	r29
   1aad6:	d8 23       	and	r29, r24
   1aad8:	02 c0       	rjmp	.+4      	; 0x1aade <digitalWrite+0x50>
	} else {
		*out |= bit;
   1aada:	ec 91       	ld	r30, X
   1aadc:	de 2b       	or	r29, r30
   1aade:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
   1aae0:	9f bf       	out	0x3f, r25	; 63
}
   1aae2:	df 91       	pop	r29
   1aae4:	cf 91       	pop	r28
   1aae6:	1f 91       	pop	r17
   1aae8:	08 95       	ret

0001aaea <digitalRead>:

int digitalRead(uint8_t pin)
{
   1aaea:	cf 93       	push	r28
   1aaec:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1aaee:	28 2f       	mov	r18, r24
   1aaf0:	30 e0       	ldi	r19, 0x00	; 0
   1aaf2:	f9 01       	movw	r30, r18
   1aaf4:	e7 53       	subi	r30, 0x37	; 55
   1aaf6:	fa 4b       	sbci	r31, 0xBA	; 186
   1aaf8:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1aafa:	f9 01       	movw	r30, r18
   1aafc:	e1 5f       	subi	r30, 0xF1	; 241
   1aafe:	f9 4b       	sbci	r31, 0xB9	; 185
   1ab00:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1ab02:	f9 01       	movw	r30, r18
   1ab04:	eb 5a       	subi	r30, 0xAB	; 171
   1ab06:	f9 4b       	sbci	r31, 0xB9	; 185
   1ab08:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
   1ab0a:	cc 23       	and	r28, r28
   1ab0c:	89 f0       	breq	.+34     	; 0x1ab30 <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1ab0e:	81 11       	cpse	r24, r1
   1ab10:	2c df       	rcall	.-424    	; 0x1a96a <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
   1ab12:	ec 2f       	mov	r30, r28
   1ab14:	f0 e0       	ldi	r31, 0x00	; 0
   1ab16:	ee 0f       	add	r30, r30
   1ab18:	ff 1f       	adc	r31, r31
   1ab1a:	e5 56       	subi	r30, 0x65	; 101
   1ab1c:	f9 4b       	sbci	r31, 0xB9	; 185
   1ab1e:	a5 91       	lpm	r26, Z+
   1ab20:	b4 91       	lpm	r27, Z
   1ab22:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
   1ab24:	ed 23       	and	r30, r29
   1ab26:	81 e0       	ldi	r24, 0x01	; 1
   1ab28:	90 e0       	ldi	r25, 0x00	; 0
   1ab2a:	21 f4       	brne	.+8      	; 0x1ab34 <digitalRead+0x4a>
   1ab2c:	80 e0       	ldi	r24, 0x00	; 0
   1ab2e:	02 c0       	rjmp	.+4      	; 0x1ab34 <digitalRead+0x4a>
   1ab30:	80 e0       	ldi	r24, 0x00	; 0
   1ab32:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
   1ab34:	df 91       	pop	r29
   1ab36:	cf 91       	pop	r28
   1ab38:	08 95       	ret

0001ab3a <_ZN13EnergyMonitor7currentEjd>:
    //    - every 2 crosses we will have sampled 1 wavelength
    //    - so this method allows us to sample an integer number of half wavelengths which increases accuracy
    //-----------------------------------------------------------------------------
    lastVCross = checkVCross;
    if (sampleV > startV) checkVCross = true;
                     else checkVCross = false;
   1ab3a:	fc 01       	movw	r30, r24
   1ab3c:	77 8b       	std	Z+23, r23	; 0x17
   1ab3e:	66 8b       	std	Z+22, r22	; 0x16
   1ab40:	24 8f       	std	Z+28, r18	; 0x1c
   1ab42:	35 8f       	std	Z+29, r19	; 0x1d
   1ab44:	46 8f       	std	Z+30, r20	; 0x1e
   1ab46:	57 8f       	std	Z+31, r21	; 0x1f
   1ab48:	80 e0       	ldi	r24, 0x00	; 0
   1ab4a:	90 e0       	ldi	r25, 0x00	; 0
   1ab4c:	a0 e0       	ldi	r26, 0x00	; 0
   1ab4e:	b4 e4       	ldi	r27, 0x44	; 68
   1ab50:	80 af       	std	Z+56, r24	; 0x38
   1ab52:	91 af       	std	Z+57, r25	; 0x39
   1ab54:	a2 af       	std	Z+58, r26	; 0x3a
   1ab56:	b3 af       	std	Z+59, r27	; 0x3b
   1ab58:	08 95       	ret

0001ab5a <_ZN13EnergyMonitor7readVccEv>:
   1ab5a:	8e e5       	ldi	r24, 0x5E	; 94
   1ab5c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
   1ab60:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1ab64:	87 7f       	andi	r24, 0xF7	; 247
   1ab66:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1ab6a:	62 e0       	ldi	r22, 0x02	; 2
   1ab6c:	70 e0       	ldi	r23, 0x00	; 0
   1ab6e:	80 e0       	ldi	r24, 0x00	; 0
   1ab70:	90 e0       	ldi	r25, 0x00	; 0
   1ab72:	54 de       	rcall	.-856    	; 0x1a81c <delay>
   1ab74:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1ab78:	80 64       	ori	r24, 0x40	; 64
   1ab7a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1ab7e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1ab82:	86 fd       	sbrc	r24, 6
   1ab84:	fc cf       	rjmp	.-8      	; 0x1ab7e <_ZN13EnergyMonitor7readVccEv+0x24>
   1ab86:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
   1ab8a:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
   1ab8e:	30 e0       	ldi	r19, 0x00	; 0
   1ab90:	32 2f       	mov	r19, r18
   1ab92:	22 27       	eor	r18, r18
   1ab94:	a9 01       	movw	r20, r18
   1ab96:	33 0f       	add	r19, r19
   1ab98:	66 0b       	sbc	r22, r22
   1ab9a:	77 0b       	sbc	r23, r23
   1ab9c:	9a 01       	movw	r18, r20
   1ab9e:	ab 01       	movw	r20, r22
   1aba0:	28 2b       	or	r18, r24
   1aba2:	60 e0       	ldi	r22, 0x00	; 0
   1aba4:	70 e3       	ldi	r23, 0x30	; 48
   1aba6:	81 e1       	ldi	r24, 0x11	; 17
   1aba8:	90 e0       	ldi	r25, 0x00	; 0
   1abaa:	0e 94 00 e8 	call	0x1d000	; 0x1d000 <__divmodsi4>
   1abae:	ca 01       	movw	r24, r20
   1abb0:	b9 01       	movw	r22, r18
   1abb2:	08 95       	ret

0001abb4 <_ZN13EnergyMonitor8calcIrmsEj>:
//--------------------------------------------------------------------------------------
}

//--------------------------------------------------------------------------------------
double EnergyMonitor::calcIrms(unsigned int Number_of_Samples)
{
   1abb4:	2f 92       	push	r2
   1abb6:	3f 92       	push	r3
   1abb8:	4f 92       	push	r4
   1abba:	5f 92       	push	r5
   1abbc:	6f 92       	push	r6
   1abbe:	7f 92       	push	r7
   1abc0:	8f 92       	push	r8
   1abc2:	9f 92       	push	r9
   1abc4:	af 92       	push	r10
   1abc6:	bf 92       	push	r11
   1abc8:	cf 92       	push	r12
   1abca:	df 92       	push	r13
   1abcc:	ef 92       	push	r14
   1abce:	ff 92       	push	r15
   1abd0:	0f 93       	push	r16
   1abd2:	1f 93       	push	r17
   1abd4:	cf 93       	push	r28
   1abd6:	df 93       	push	r29
   1abd8:	00 d0       	rcall	.+0      	; 0x1abda <_ZN13EnergyMonitor8calcIrmsEj+0x26>
   1abda:	00 d0       	rcall	.+0      	; 0x1abdc <_ZN13EnergyMonitor8calcIrmsEj+0x28>
   1abdc:	cd b7       	in	r28, 0x3d	; 61
   1abde:	de b7       	in	r29, 0x3e	; 62
   1abe0:	9e 83       	std	Y+6, r25	; 0x06
   1abe2:	8d 83       	std	Y+5, r24	; 0x05
   1abe4:	7a 83       	std	Y+2, r23	; 0x02
   1abe6:	69 83       	std	Y+1, r22	; 0x01

  #if defined emonTxV3
    int SupplyVoltage=3300;
  #else
    int SupplyVoltage = readVcc();
   1abe8:	b8 df       	rcall	.-144    	; 0x1ab5a <_ZN13EnergyMonitor7readVccEv>
   1abea:	6b 01       	movw	r12, r22
   1abec:	7c 01       	movw	r14, r24
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1abee:	00 e0       	ldi	r16, 0x00	; 0
   1abf0:	10 e0       	ldi	r17, 0x00	; 0
   1abf2:	8d 81       	ldd	r24, Y+5	; 0x05
   1abf4:	9e 81       	ldd	r25, Y+6	; 0x06
   1abf6:	84 5b       	subi	r24, 0xB4	; 180
   1abf8:	9f 4f       	sbci	r25, 0xFF	; 255
   1abfa:	1c 01       	movw	r2, r24
    offsetI = (offsetI + (sampleI-offsetI)/1024);
    filteredI = sampleI - offsetI;

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1abfc:	ed 81       	ldd	r30, Y+5	; 0x05
   1abfe:	fe 81       	ldd	r31, Y+6	; 0x06
   1ac00:	e8 5b       	subi	r30, 0xB8	; 184
   1ac02:	ff 4f       	sbci	r31, 0xFF	; 255
   1ac04:	fc 83       	std	Y+4, r31	; 0x04
   1ac06:	eb 83       	std	Y+3, r30	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1ac08:	89 81       	ldd	r24, Y+1	; 0x01
   1ac0a:	9a 81       	ldd	r25, Y+2	; 0x02
   1ac0c:	08 17       	cp	r16, r24
   1ac0e:	19 07       	cpc	r17, r25
   1ac10:	09 f4       	brne	.+2      	; 0x1ac14 <_ZN13EnergyMonitor8calcIrmsEj+0x60>
   1ac12:	4f c0       	rjmp	.+158    	; 0x1acb2 <_ZN13EnergyMonitor8calcIrmsEj+0xfe>
  {
    sampleI = analogRead(inPinI);
   1ac14:	ed 81       	ldd	r30, Y+5	; 0x05
   1ac16:	fe 81       	ldd	r31, Y+6	; 0x06
   1ac18:	86 89       	ldd	r24, Z+22	; 0x16
   1ac1a:	0e 94 0c e1 	call	0x1c218	; 0x1c218 <analogRead>
   1ac1e:	ed 81       	ldd	r30, Y+5	; 0x05
   1ac20:	fe 81       	ldd	r31, Y+6	; 0x06
   1ac22:	97 a3       	std	Z+39, r25	; 0x27
   1ac24:	86 a3       	std	Z+38, r24	; 0x26

    // Digital low pass filter extracts the 2.5 V or 1.65 V dc offset,
    //  then subtract this - signal is now centered on 0 counts.
    offsetI = (offsetI + (sampleI-offsetI)/1024);
   1ac26:	bc 01       	movw	r22, r24
   1ac28:	99 0f       	add	r25, r25
   1ac2a:	88 0b       	sbc	r24, r24
   1ac2c:	99 0b       	sbc	r25, r25
   1ac2e:	34 d8       	rcall	.-3992   	; 0x19c98 <__floatsisf>
   1ac30:	4b 01       	movw	r8, r22
   1ac32:	5c 01       	movw	r10, r24
   1ac34:	ed 81       	ldd	r30, Y+5	; 0x05
   1ac36:	fe 81       	ldd	r31, Y+6	; 0x06
   1ac38:	40 ac       	ldd	r4, Z+56	; 0x38
   1ac3a:	51 ac       	ldd	r5, Z+57	; 0x39
   1ac3c:	62 ac       	ldd	r6, Z+58	; 0x3a
   1ac3e:	73 ac       	ldd	r7, Z+59	; 0x3b
   1ac40:	a3 01       	movw	r20, r6
   1ac42:	92 01       	movw	r18, r4
   1ac44:	0e 94 4d cd 	call	0x19a9a	; 0x19a9a <__subsf3>
   1ac48:	20 e0       	ldi	r18, 0x00	; 0
   1ac4a:	30 e0       	ldi	r19, 0x00	; 0
   1ac4c:	40 e8       	ldi	r20, 0x80	; 128
   1ac4e:	5a e3       	ldi	r21, 0x3A	; 58
   1ac50:	d7 d8       	rcall	.-3666   	; 0x19e00 <__mulsf3>
   1ac52:	a3 01       	movw	r20, r6
   1ac54:	92 01       	movw	r18, r4
   1ac56:	0e 94 4e cd 	call	0x19a9c	; 0x19a9c <__addsf3>
   1ac5a:	9b 01       	movw	r18, r22
   1ac5c:	ac 01       	movw	r20, r24
   1ac5e:	ed 81       	ldd	r30, Y+5	; 0x05
   1ac60:	fe 81       	ldd	r31, Y+6	; 0x06
   1ac62:	60 af       	std	Z+56, r22	; 0x38
   1ac64:	71 af       	std	Z+57, r23	; 0x39
   1ac66:	82 af       	std	Z+58, r24	; 0x3a
   1ac68:	93 af       	std	Z+59, r25	; 0x3b
    filteredI = sampleI - offsetI;
   1ac6a:	c5 01       	movw	r24, r10
   1ac6c:	b4 01       	movw	r22, r8
   1ac6e:	0e 94 4d cd 	call	0x19a9a	; 0x19a9a <__subsf3>
   1ac72:	ed 81       	ldd	r30, Y+5	; 0x05
   1ac74:	fe 81       	ldd	r31, Y+6	; 0x06
   1ac76:	60 ab       	std	Z+48, r22	; 0x30
   1ac78:	71 ab       	std	Z+49, r23	; 0x31
   1ac7a:	82 ab       	std	Z+50, r24	; 0x32

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1ac7c:	93 ab       	std	Z+51, r25	; 0x33
   1ac7e:	9b 01       	movw	r18, r22
   1ac80:	ac 01       	movw	r20, r24
   1ac82:	be d8       	rcall	.-3716   	; 0x19e00 <__mulsf3>
   1ac84:	9b 01       	movw	r18, r22
   1ac86:	ac 01       	movw	r20, r24
   1ac88:	eb 81       	ldd	r30, Y+3	; 0x03
   1ac8a:	fc 81       	ldd	r31, Y+4	; 0x04
   1ac8c:	60 83       	st	Z, r22
   1ac8e:	71 83       	std	Z+1, r23	; 0x01
   1ac90:	82 83       	std	Z+2, r24	; 0x02
   1ac92:	93 83       	std	Z+3, r25	; 0x03
    // 2) sum
    sumI += sqI;
   1ac94:	f1 01       	movw	r30, r2
   1ac96:	60 81       	ld	r22, Z
   1ac98:	71 81       	ldd	r23, Z+1	; 0x01
   1ac9a:	82 81       	ldd	r24, Z+2	; 0x02
   1ac9c:	93 81       	ldd	r25, Z+3	; 0x03
   1ac9e:	0e 94 4e cd 	call	0x19a9c	; 0x19a9c <__addsf3>
   1aca2:	f1 01       	movw	r30, r2
   1aca4:	60 83       	st	Z, r22
   1aca6:	71 83       	std	Z+1, r23	; 0x01
   1aca8:	82 83       	std	Z+2, r24	; 0x02
   1acaa:	93 83       	std	Z+3, r25	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1acac:	0f 5f       	subi	r16, 0xFF	; 255
   1acae:	1f 4f       	sbci	r17, 0xFF	; 255
   1acb0:	ab cf       	rjmp	.-170    	; 0x1ac08 <_ZN13EnergyMonitor8calcIrmsEj+0x54>
    // 2) sum
    sumI += sqI;
  }

  double I_RATIO = ICAL *((SupplyVoltage/1000.0) / (ADC_COUNTS));
  Irms = I_RATIO * sqrt(sumI / Number_of_Samples);
   1acb2:	b8 01       	movw	r22, r16
   1acb4:	80 e0       	ldi	r24, 0x00	; 0
   1acb6:	90 e0       	ldi	r25, 0x00	; 0
   1acb8:	0e 94 4a ce 	call	0x19c94	; 0x19c94 <__floatunsisf>
   1acbc:	9b 01       	movw	r18, r22
   1acbe:	ac 01       	movw	r20, r24
   1acc0:	f1 01       	movw	r30, r2
   1acc2:	60 81       	ld	r22, Z
   1acc4:	71 81       	ldd	r23, Z+1	; 0x01
   1acc6:	82 81       	ldd	r24, Z+2	; 0x02
   1acc8:	93 81       	ldd	r25, Z+3	; 0x03
   1acca:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
   1acce:	0e 94 32 e6 	call	0x1cc64	; 0x1cc64 <sqrt>
   1acd2:	4b 01       	movw	r8, r22
   1acd4:	5c 01       	movw	r10, r24
   1acd6:	b6 01       	movw	r22, r12
   1acd8:	dd 0c       	add	r13, r13
   1acda:	88 0b       	sbc	r24, r24
   1acdc:	99 0b       	sbc	r25, r25
   1acde:	0e 94 4c ce 	call	0x19c98	; 0x19c98 <__floatsisf>
   1ace2:	20 e0       	ldi	r18, 0x00	; 0
   1ace4:	30 e0       	ldi	r19, 0x00	; 0
   1ace6:	4a e7       	ldi	r20, 0x7A	; 122
   1ace8:	54 e4       	ldi	r21, 0x44	; 68
   1acea:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
   1acee:	20 e0       	ldi	r18, 0x00	; 0
   1acf0:	30 e0       	ldi	r19, 0x00	; 0
   1acf2:	40 e8       	ldi	r20, 0x80	; 128
   1acf4:	5a e3       	ldi	r21, 0x3A	; 58
   1acf6:	84 d8       	rcall	.-3832   	; 0x19e00 <__mulsf3>
   1acf8:	ed 81       	ldd	r30, Y+5	; 0x05
   1acfa:	fe 81       	ldd	r31, Y+6	; 0x06
   1acfc:	24 8d       	ldd	r18, Z+28	; 0x1c
   1acfe:	35 8d       	ldd	r19, Z+29	; 0x1d
   1ad00:	46 8d       	ldd	r20, Z+30	; 0x1e
   1ad02:	57 8d       	ldd	r21, Z+31	; 0x1f
   1ad04:	7d d8       	rcall	.-3846   	; 0x19e00 <__mulsf3>
   1ad06:	a5 01       	movw	r20, r10
   1ad08:	94 01       	movw	r18, r8
   1ad0a:	7a d8       	rcall	.-3852   	; 0x19e00 <__mulsf3>
   1ad0c:	ed 81       	ldd	r30, Y+5	; 0x05
   1ad0e:	fe 81       	ldd	r31, Y+6	; 0x06
   1ad10:	60 8b       	std	Z+16, r22	; 0x10
   1ad12:	71 8b       	std	Z+17, r23	; 0x11
   1ad14:	82 8b       	std	Z+18, r24	; 0x12
   1ad16:	93 8b       	std	Z+19, r25	; 0x13

  //Reset accumulators
  sumI = 0;
   1ad18:	f1 01       	movw	r30, r2
   1ad1a:	10 82       	st	Z, r1
   1ad1c:	11 82       	std	Z+1, r1	; 0x01
   1ad1e:	12 82       	std	Z+2, r1	; 0x02
   1ad20:	13 82       	std	Z+3, r1	; 0x03
  //--------------------------------------------------------------------------------------

  return Irms;
}
   1ad22:	26 96       	adiw	r28, 0x06	; 6
   1ad24:	0f b6       	in	r0, 0x3f	; 63
   1ad26:	f8 94       	cli
   1ad28:	de bf       	out	0x3e, r29	; 62
   1ad2a:	0f be       	out	0x3f, r0	; 63
   1ad2c:	cd bf       	out	0x3d, r28	; 61
   1ad2e:	df 91       	pop	r29
   1ad30:	cf 91       	pop	r28
   1ad32:	1f 91       	pop	r17
   1ad34:	0f 91       	pop	r16
   1ad36:	ff 90       	pop	r15
   1ad38:	ef 90       	pop	r14
   1ad3a:	df 90       	pop	r13
   1ad3c:	cf 90       	pop	r12
   1ad3e:	bf 90       	pop	r11
   1ad40:	af 90       	pop	r10
   1ad42:	9f 90       	pop	r9
   1ad44:	8f 90       	pop	r8
   1ad46:	7f 90       	pop	r7
   1ad48:	6f 90       	pop	r6
   1ad4a:	5f 90       	pop	r5
   1ad4c:	4f 90       	pop	r4
   1ad4e:	3f 90       	pop	r3
   1ad50:	2f 90       	pop	r2
   1ad52:	08 95       	ret

0001ad54 <_ZN17LiquidCrystal_I2CC1Ehhh>:
void LiquidCrystal_I2C::blink_off(){
	noBlink();
}

void LiquidCrystal_I2C::load_custom_character(uint8_t char_num, uint8_t *rows){
		createChar(char_num, rows);
   1ad54:	fc 01       	movw	r30, r24
   1ad56:	13 82       	std	Z+3, r1	; 0x03
   1ad58:	12 82       	std	Z+2, r1	; 0x02
   1ad5a:	8d ef       	ldi	r24, 0xFD	; 253
   1ad5c:	97 e0       	ldi	r25, 0x07	; 7
   1ad5e:	91 83       	std	Z+1, r25	; 0x01
   1ad60:	80 83       	st	Z, r24
   1ad62:	64 83       	std	Z+4, r22	; 0x04
   1ad64:	41 87       	std	Z+9, r20	; 0x09
   1ad66:	22 87       	std	Z+10, r18	; 0x0a
   1ad68:	13 86       	std	Z+11, r1	; 0x0b
   1ad6a:	08 95       	ret

0001ad6c <_ZN17LiquidCrystal_I2C13expanderWriteEh>:
   1ad6c:	1f 93       	push	r17
   1ad6e:	cf 93       	push	r28
   1ad70:	df 93       	push	r29
   1ad72:	ec 01       	movw	r28, r24
   1ad74:	16 2f       	mov	r17, r22
   1ad76:	6c 81       	ldd	r22, Y+4	; 0x04
   1ad78:	87 ee       	ldi	r24, 0xE7	; 231
   1ad7a:	97 e1       	ldi	r25, 0x17	; 23
   1ad7c:	0e 94 19 df 	call	0x1be32	; 0x1be32 <_ZN7TwoWire17beginTransmissionEh>
   1ad80:	6b 85       	ldd	r22, Y+11	; 0x0b
   1ad82:	61 2b       	or	r22, r17
   1ad84:	87 ee       	ldi	r24, 0xE7	; 231
   1ad86:	97 e1       	ldi	r25, 0x17	; 23
   1ad88:	0e 94 cc de 	call	0x1bd98	; 0x1bd98 <_ZN7TwoWire5writeEh>
   1ad8c:	87 ee       	ldi	r24, 0xE7	; 231
   1ad8e:	97 e1       	ldi	r25, 0x17	; 23
   1ad90:	df 91       	pop	r29
   1ad92:	cf 91       	pop	r28
   1ad94:	1f 91       	pop	r17
   1ad96:	0c 94 35 df 	jmp	0x1be6a	; 0x1be6a <_ZN7TwoWire15endTransmissionEv>

0001ad9a <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
   1ad9a:	0f 93       	push	r16
   1ad9c:	1f 93       	push	r17
   1ad9e:	cf 93       	push	r28
   1ada0:	8c 01       	movw	r16, r24
   1ada2:	c6 2f       	mov	r28, r22
   1ada4:	64 60       	ori	r22, 0x04	; 4
   1ada6:	e2 df       	rcall	.-60     	; 0x1ad6c <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1ada8:	81 e0       	ldi	r24, 0x01	; 1
   1adaa:	90 e0       	ldi	r25, 0x00	; 0
   1adac:	71 dd       	rcall	.-1310   	; 0x1a890 <delayMicroseconds>
   1adae:	6c 2f       	mov	r22, r28
   1adb0:	6b 7f       	andi	r22, 0xFB	; 251
   1adb2:	c8 01       	movw	r24, r16
   1adb4:	db df       	rcall	.-74     	; 0x1ad6c <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1adb6:	82 e3       	ldi	r24, 0x32	; 50
   1adb8:	90 e0       	ldi	r25, 0x00	; 0
   1adba:	cf 91       	pop	r28
   1adbc:	1f 91       	pop	r17
   1adbe:	0f 91       	pop	r16
   1adc0:	67 cd       	rjmp	.-1330   	; 0x1a890 <delayMicroseconds>

0001adc2 <_ZN17LiquidCrystal_I2C10write4bitsEh>:
   1adc2:	1f 93       	push	r17
   1adc4:	cf 93       	push	r28
   1adc6:	df 93       	push	r29
   1adc8:	ec 01       	movw	r28, r24
   1adca:	16 2f       	mov	r17, r22
   1adcc:	cf df       	rcall	.-98     	; 0x1ad6c <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1adce:	61 2f       	mov	r22, r17
   1add0:	ce 01       	movw	r24, r28
   1add2:	df 91       	pop	r29
   1add4:	cf 91       	pop	r28
   1add6:	1f 91       	pop	r17
   1add8:	e0 cf       	rjmp	.-64     	; 0x1ad9a <_ZN17LiquidCrystal_I2C11pulseEnableEh>

0001adda <_ZN17LiquidCrystal_I2C4sendEhh>:
   1adda:	0f 93       	push	r16
   1addc:	1f 93       	push	r17
   1adde:	cf 93       	push	r28
   1ade0:	df 93       	push	r29
   1ade2:	8c 01       	movw	r16, r24
   1ade4:	c6 2f       	mov	r28, r22
   1ade6:	d4 2f       	mov	r29, r20
   1ade8:	60 7f       	andi	r22, 0xF0	; 240
   1adea:	64 2b       	or	r22, r20
   1adec:	ea df       	rcall	.-44     	; 0x1adc2 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   1adee:	80 e1       	ldi	r24, 0x10	; 16
   1adf0:	c8 9f       	mul	r28, r24
   1adf2:	b0 01       	movw	r22, r0
   1adf4:	11 24       	eor	r1, r1
   1adf6:	6d 2b       	or	r22, r29
   1adf8:	c8 01       	movw	r24, r16
   1adfa:	df 91       	pop	r29
   1adfc:	cf 91       	pop	r28
   1adfe:	1f 91       	pop	r17
   1ae00:	0f 91       	pop	r16
   1ae02:	df cf       	rjmp	.-66     	; 0x1adc2 <_ZN17LiquidCrystal_I2C10write4bitsEh>

0001ae04 <_ZN17LiquidCrystal_I2C7commandEh>:
   1ae04:	40 e0       	ldi	r20, 0x00	; 0
   1ae06:	e9 cf       	rjmp	.-46     	; 0x1adda <_ZN17LiquidCrystal_I2C4sendEhh>

0001ae08 <_ZN17LiquidCrystal_I2C5clearEv>:
   1ae08:	61 e0       	ldi	r22, 0x01	; 1
   1ae0a:	fc df       	rcall	.-8      	; 0x1ae04 <_ZN17LiquidCrystal_I2C7commandEh>
   1ae0c:	80 ed       	ldi	r24, 0xD0	; 208
   1ae0e:	97 e0       	ldi	r25, 0x07	; 7
   1ae10:	3f cd       	rjmp	.-1410   	; 0x1a890 <delayMicroseconds>

0001ae12 <_ZN17LiquidCrystal_I2C4homeEv>:
   1ae12:	62 e0       	ldi	r22, 0x02	; 2
   1ae14:	f7 df       	rcall	.-18     	; 0x1ae04 <_ZN17LiquidCrystal_I2C7commandEh>
   1ae16:	80 ed       	ldi	r24, 0xD0	; 208
   1ae18:	97 e0       	ldi	r25, 0x07	; 7
   1ae1a:	3a cd       	rjmp	.-1420   	; 0x1a890 <delayMicroseconds>

0001ae1c <_ZN17LiquidCrystal_I2C9setCursorEhh>:
   1ae1c:	cf 93       	push	r28
   1ae1e:	df 93       	push	r29
   1ae20:	cd b7       	in	r28, 0x3d	; 61
   1ae22:	de b7       	in	r29, 0x3e	; 62
   1ae24:	28 97       	sbiw	r28, 0x08	; 8
   1ae26:	0f b6       	in	r0, 0x3f	; 63
   1ae28:	f8 94       	cli
   1ae2a:	de bf       	out	0x3e, r29	; 62
   1ae2c:	0f be       	out	0x3f, r0	; 63
   1ae2e:	cd bf       	out	0x3d, r28	; 61
   1ae30:	9c 01       	movw	r18, r24
   1ae32:	88 e0       	ldi	r24, 0x08	; 8
   1ae34:	e3 e7       	ldi	r30, 0x73	; 115
   1ae36:	f2 e0       	ldi	r31, 0x02	; 2
   1ae38:	de 01       	movw	r26, r28
   1ae3a:	11 96       	adiw	r26, 0x01	; 1
   1ae3c:	01 90       	ld	r0, Z+
   1ae3e:	0d 92       	st	X+, r0
   1ae40:	8a 95       	dec	r24
   1ae42:	e1 f7       	brne	.-8      	; 0x1ae3c <_ZN17LiquidCrystal_I2C9setCursorEhh+0x20>
   1ae44:	f9 01       	movw	r30, r18
   1ae46:	80 85       	ldd	r24, Z+8	; 0x08
   1ae48:	84 17       	cp	r24, r20
   1ae4a:	10 f4       	brcc	.+4      	; 0x1ae50 <_ZN17LiquidCrystal_I2C9setCursorEhh+0x34>
   1ae4c:	4f ef       	ldi	r20, 0xFF	; 255
   1ae4e:	48 0f       	add	r20, r24
   1ae50:	fe 01       	movw	r30, r28
   1ae52:	31 96       	adiw	r30, 0x01	; 1
   1ae54:	e4 0f       	add	r30, r20
   1ae56:	f1 1d       	adc	r31, r1
   1ae58:	e4 0f       	add	r30, r20
   1ae5a:	f1 1d       	adc	r31, r1
   1ae5c:	90 81       	ld	r25, Z
   1ae5e:	69 0f       	add	r22, r25
   1ae60:	60 68       	ori	r22, 0x80	; 128
   1ae62:	c9 01       	movw	r24, r18
   1ae64:	28 96       	adiw	r28, 0x08	; 8
   1ae66:	0f b6       	in	r0, 0x3f	; 63
   1ae68:	f8 94       	cli
   1ae6a:	de bf       	out	0x3e, r29	; 62
   1ae6c:	0f be       	out	0x3f, r0	; 63
   1ae6e:	cd bf       	out	0x3d, r28	; 61
   1ae70:	df 91       	pop	r29
   1ae72:	cf 91       	pop	r28
   1ae74:	c7 cf       	rjmp	.-114    	; 0x1ae04 <_ZN17LiquidCrystal_I2C7commandEh>

0001ae76 <_ZN17LiquidCrystal_I2C7displayEv>:
   1ae76:	fc 01       	movw	r30, r24
   1ae78:	66 81       	ldd	r22, Z+6	; 0x06
   1ae7a:	26 2f       	mov	r18, r22
   1ae7c:	24 60       	ori	r18, 0x04	; 4
   1ae7e:	26 83       	std	Z+6, r18	; 0x06
   1ae80:	6c 60       	ori	r22, 0x0C	; 12
   1ae82:	c0 cf       	rjmp	.-128    	; 0x1ae04 <_ZN17LiquidCrystal_I2C7commandEh>

0001ae84 <_ZN17LiquidCrystal_I2C10createCharEhPh>:
   1ae84:	ef 92       	push	r14
   1ae86:	ff 92       	push	r15
   1ae88:	0f 93       	push	r16
   1ae8a:	1f 93       	push	r17
   1ae8c:	cf 93       	push	r28
   1ae8e:	df 93       	push	r29
   1ae90:	8c 01       	movw	r16, r24
   1ae92:	7a 01       	movw	r14, r20
   1ae94:	67 70       	andi	r22, 0x07	; 7
   1ae96:	88 e0       	ldi	r24, 0x08	; 8
   1ae98:	68 9f       	mul	r22, r24
   1ae9a:	b0 01       	movw	r22, r0
   1ae9c:	11 24       	eor	r1, r1
   1ae9e:	60 64       	ori	r22, 0x40	; 64
   1aea0:	c8 01       	movw	r24, r16
   1aea2:	b0 df       	rcall	.-160    	; 0x1ae04 <_ZN17LiquidCrystal_I2C7commandEh>
   1aea4:	e7 01       	movw	r28, r14
   1aea6:	a8 e0       	ldi	r26, 0x08	; 8
   1aea8:	ea 0e       	add	r14, r26
   1aeaa:	f1 1c       	adc	r15, r1
   1aeac:	69 91       	ld	r22, Y+
   1aeae:	d8 01       	movw	r26, r16
   1aeb0:	ed 91       	ld	r30, X+
   1aeb2:	fc 91       	ld	r31, X
   1aeb4:	01 90       	ld	r0, Z+
   1aeb6:	f0 81       	ld	r31, Z
   1aeb8:	e0 2d       	mov	r30, r0
   1aeba:	c8 01       	movw	r24, r16
   1aebc:	19 95       	eicall
   1aebe:	ce 15       	cp	r28, r14
   1aec0:	df 05       	cpc	r29, r15
   1aec2:	a1 f7       	brne	.-24     	; 0x1aeac <_ZN17LiquidCrystal_I2C10createCharEhPh+0x28>
   1aec4:	df 91       	pop	r29
   1aec6:	cf 91       	pop	r28
   1aec8:	1f 91       	pop	r17
   1aeca:	0f 91       	pop	r16
   1aecc:	ff 90       	pop	r15
   1aece:	ef 90       	pop	r14
   1aed0:	08 95       	ret

0001aed2 <_ZN17LiquidCrystal_I2C5writeEh>:

#include "Arduino.h"

#define printIIC(args)	Wire.write(args)
inline size_t LiquidCrystal_I2C::write(uint8_t value) {
	send(value, Rs);
   1aed2:	41 e0       	ldi	r20, 0x01	; 1
   1aed4:	82 df       	rcall	.-252    	; 0x1adda <_ZN17LiquidCrystal_I2C4sendEhh>
	return 1;
}
   1aed6:	81 e0       	ldi	r24, 0x01	; 1
   1aed8:	90 e0       	ldi	r25, 0x00	; 0
   1aeda:	08 95       	ret

0001aedc <_ZN17LiquidCrystal_I2C5beginEhhh>:
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
}

void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
   1aedc:	cf 93       	push	r28
   1aede:	df 93       	push	r29
   1aee0:	ec 01       	movw	r28, r24
	if (lines > 1) {
   1aee2:	42 30       	cpi	r20, 0x02	; 2
   1aee4:	18 f0       	brcs	.+6      	; 0x1aeec <_ZN17LiquidCrystal_I2C5beginEhhh+0x10>
		_displayfunction |= LCD_2LINE;
   1aee6:	8d 81       	ldd	r24, Y+5	; 0x05
   1aee8:	88 60       	ori	r24, 0x08	; 8
   1aeea:	8d 83       	std	Y+5, r24	; 0x05
	}
	_numlines = lines;
   1aeec:	48 87       	std	Y+8, r20	; 0x08

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotsize != 0) && (lines == 1)) {
   1aeee:	22 23       	and	r18, r18
   1aef0:	29 f0       	breq	.+10     	; 0x1aefc <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
   1aef2:	41 30       	cpi	r20, 0x01	; 1
   1aef4:	19 f4       	brne	.+6      	; 0x1aefc <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
		_displayfunction |= LCD_5x10DOTS;
   1aef6:	8d 81       	ldd	r24, Y+5	; 0x05
   1aef8:	84 60       	ori	r24, 0x04	; 4
   1aefa:	8d 83       	std	Y+5, r24	; 0x05
	}

	// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	delay(50); 
   1aefc:	62 e3       	ldi	r22, 0x32	; 50
   1aefe:	70 e0       	ldi	r23, 0x00	; 0
   1af00:	80 e0       	ldi	r24, 0x00	; 0
   1af02:	90 e0       	ldi	r25, 0x00	; 0
   1af04:	8b dc       	rcall	.-1770   	; 0x1a81c <delay>
  
	// Now we pull both RS and R/W low to begin commands
// 	expanderWrite(_backlightval);	// reset expanderand turn backlight off (Bit 8 =1)   // kishorr
// 	delay(1000);
	
	_backlightval=LCD_BACKLIGHT;   // kishorr
   1af06:	88 e0       	ldi	r24, 0x08	; 8
   1af08:	8b 87       	std	Y+11, r24	; 0x0b
	expanderWrite(0);
   1af0a:	60 e0       	ldi	r22, 0x00	; 0
   1af0c:	ce 01       	movw	r24, r28
   1af0e:	2e df       	rcall	.-420    	; 0x1ad6c <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    delay(1000);
   1af10:	68 ee       	ldi	r22, 0xE8	; 232
   1af12:	73 e0       	ldi	r23, 0x03	; 3
   1af14:	80 e0       	ldi	r24, 0x00	; 0
   1af16:	90 e0       	ldi	r25, 0x00	; 0
   1af18:	81 dc       	rcall	.-1790   	; 0x1a81c <delay>
  	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	  // we start in 8bit mode, try to set 4 bit mode
   write4bits(0x03 << 4);
   1af1a:	60 e3       	ldi	r22, 0x30	; 48
   1af1c:	ce 01       	movw	r24, r28
   1af1e:	51 df       	rcall	.-350    	; 0x1adc2 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1af20:	84 e9       	ldi	r24, 0x94	; 148
   1af22:	91 e1       	ldi	r25, 0x11	; 17
   1af24:	b5 dc       	rcall	.-1686   	; 0x1a890 <delayMicroseconds>
   
   // second try
   write4bits(0x03 << 4);
   1af26:	60 e3       	ldi	r22, 0x30	; 48
   1af28:	ce 01       	movw	r24, r28
   1af2a:	4b df       	rcall	.-362    	; 0x1adc2 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1af2c:	84 e9       	ldi	r24, 0x94	; 148
   1af2e:	91 e1       	ldi	r25, 0x11	; 17
   1af30:	af dc       	rcall	.-1698   	; 0x1a890 <delayMicroseconds>
   
   // third go!
   write4bits(0x03 << 4); 
   1af32:	60 e3       	ldi	r22, 0x30	; 48
   1af34:	ce 01       	movw	r24, r28
   1af36:	45 df       	rcall	.-374    	; 0x1adc2 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(150);
   1af38:	86 e9       	ldi	r24, 0x96	; 150
   1af3a:	90 e0       	ldi	r25, 0x00	; 0
   1af3c:	a9 dc       	rcall	.-1710   	; 0x1a890 <delayMicroseconds>
   
   // finally, set to 4-bit interface
   write4bits(0x02 << 4); 
   1af3e:	60 e2       	ldi	r22, 0x20	; 32
   1af40:	ce 01       	movw	r24, r28
   1af42:	3f df       	rcall	.-386    	; 0x1adc2 <_ZN17LiquidCrystal_I2C10write4bitsEh>


	// set # lines, font size, etc.
	command(LCD_FUNCTIONSET | _displayfunction);  
   1af44:	6d 81       	ldd	r22, Y+5	; 0x05
   1af46:	60 62       	ori	r22, 0x20	; 32
   1af48:	ce 01       	movw	r24, r28
   1af4a:	5c df       	rcall	.-328    	; 0x1ae04 <_ZN17LiquidCrystal_I2C7commandEh>
	
	// turn the display on with no cursor or blinking default
	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
   1af4c:	84 e0       	ldi	r24, 0x04	; 4
   1af4e:	8e 83       	std	Y+6, r24	; 0x06
	display();
   1af50:	ce 01       	movw	r24, r28
   1af52:	91 df       	rcall	.-222    	; 0x1ae76 <_ZN17LiquidCrystal_I2C7displayEv>
	
	// clear it off
	clear();
   1af54:	ce 01       	movw	r24, r28
   1af56:	58 df       	rcall	.-336    	; 0x1ae08 <_ZN17LiquidCrystal_I2C5clearEv>
   1af58:	82 e0       	ldi	r24, 0x02	; 2
	
	// Initialize to default text direction (for roman languages)
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
   1af5a:	8f 83       	std	Y+7, r24	; 0x07
   1af5c:	66 e0       	ldi	r22, 0x06	; 6
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
   1af5e:	ce 01       	movw	r24, r28
   1af60:	51 df       	rcall	.-350    	; 0x1ae04 <_ZN17LiquidCrystal_I2C7commandEh>
   1af62:	ce 01       	movw	r24, r28
   1af64:	df 91       	pop	r29
	
	home();
   1af66:	cf 91       	pop	r28
  
}
   1af68:	54 cf       	rjmp	.-344    	; 0x1ae12 <_ZN17LiquidCrystal_I2C4homeEv>

0001af6a <_ZN17LiquidCrystal_I2C9init_privEv>:
   1af6a:	cf 93       	push	r28
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
	
	home();
   1af6c:	df 93       	push	r29
   1af6e:	ec 01       	movw	r28, r24
	init_priv();
}

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
   1af70:	87 ee       	ldi	r24, 0xE7	; 231
   1af72:	97 e1       	ldi	r25, 0x17	; 23
   1af74:	4f d7       	rcall	.+3742   	; 0x1be14 <_ZN7TwoWire5beginEv>
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
   1af76:	1d 82       	std	Y+5, r1	; 0x05
	begin(_cols, _rows);  
   1af78:	20 e0       	ldi	r18, 0x00	; 0
   1af7a:	4a 85       	ldd	r20, Y+10	; 0x0a
   1af7c:	69 85       	ldd	r22, Y+9	; 0x09
   1af7e:	ce 01       	movw	r24, r28
}
   1af80:	df 91       	pop	r29

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
   1af82:	cf 91       	pop	r28
   1af84:	ab cf       	rjmp	.-170    	; 0x1aedc <_ZN17LiquidCrystal_I2C5beginEhhh>

0001af86 <_ZN17LiquidCrystal_I2C4initEv>:
  _rows = lcd_rows;
  _backlightval = LCD_NOBACKLIGHT;
}

void LiquidCrystal_I2C::init(){
	init_priv();
   1af86:	f1 cf       	rjmp	.-30     	; 0x1af6a <_ZN17LiquidCrystal_I2C9init_privEv>

0001af88 <_ZN15RHGenericDriver4initEv>:
}

bool RHGenericDriver::init()
{
    return true;
}
   1af88:	81 e0       	ldi	r24, 0x01	; 1
   1af8a:	08 95       	ret

0001af8c <_ZN15RHGenericDriver14setPromiscuousEb>:
    return false;
}

void RHGenericDriver::setPromiscuous(bool promiscuous)
{
    _promiscuous = promiscuous;
   1af8c:	fc 01       	movw	r30, r24
   1af8e:	64 83       	std	Z+4, r22	; 0x04
   1af90:	08 95       	ret

0001af92 <_ZN15RHGenericDriver14setThisAddressEh>:
}

void RHGenericDriver::setThisAddress(uint8_t address)
{
    _thisAddress = address;
   1af92:	fc 01       	movw	r30, r24
   1af94:	63 83       	std	Z+3, r22	; 0x03
   1af96:	08 95       	ret

0001af98 <_ZN15RHGenericDriver11setHeaderToEh>:
}

void RHGenericDriver::setHeaderTo(uint8_t to)
{
    _txHeaderTo = to;
   1af98:	fc 01       	movw	r30, r24
   1af9a:	61 87       	std	Z+9, r22	; 0x09
   1af9c:	08 95       	ret

0001af9e <_ZN15RHGenericDriver13setHeaderFromEh>:
}

void RHGenericDriver::setHeaderFrom(uint8_t from)
{
    _txHeaderFrom = from;
   1af9e:	fc 01       	movw	r30, r24
   1afa0:	62 87       	std	Z+10, r22	; 0x0a
   1afa2:	08 95       	ret

0001afa4 <_ZN15RHGenericDriver11setHeaderIdEh>:
}

void RHGenericDriver::setHeaderId(uint8_t id)
{
    _txHeaderId = id;
   1afa4:	fc 01       	movw	r30, r24
   1afa6:	63 87       	std	Z+11, r22	; 0x0b
   1afa8:	08 95       	ret

0001afaa <_ZN15RHGenericDriver14setHeaderFlagsEhh>:
}

void RHGenericDriver::setHeaderFlags(uint8_t set, uint8_t clear)
{
   1afaa:	fc 01       	movw	r30, r24
    _txHeaderFlags &= ~clear;
    _txHeaderFlags |= set;
   1afac:	40 95       	com	r20
   1afae:	94 85       	ldd	r25, Z+12	; 0x0c
   1afb0:	49 23       	and	r20, r25
   1afb2:	64 2b       	or	r22, r20
   1afb4:	64 87       	std	Z+12, r22	; 0x0c
   1afb6:	08 95       	ret

0001afb8 <_ZN15RHGenericDriver8headerToEv>:
}

uint8_t RHGenericDriver::headerTo()
{
    return _rxHeaderTo;
   1afb8:	fc 01       	movw	r30, r24
   1afba:	85 81       	ldd	r24, Z+5	; 0x05
}
   1afbc:	08 95       	ret

0001afbe <_ZN15RHGenericDriver10headerFromEv>:

uint8_t RHGenericDriver::headerFrom()
{
    return _rxHeaderFrom;
   1afbe:	fc 01       	movw	r30, r24
   1afc0:	86 81       	ldd	r24, Z+6	; 0x06
}
   1afc2:	08 95       	ret

0001afc4 <_ZN15RHGenericDriver8headerIdEv>:

uint8_t RHGenericDriver::headerId()
{
    return _rxHeaderId;
   1afc4:	fc 01       	movw	r30, r24
   1afc6:	87 81       	ldd	r24, Z+7	; 0x07
}
   1afc8:	08 95       	ret

0001afca <_ZN15RHGenericDriver11headerFlagsEv>:

uint8_t RHGenericDriver::headerFlags()
{
    return _rxHeaderFlags;
   1afca:	fc 01       	movw	r30, r24
   1afcc:	80 85       	ldd	r24, Z+8	; 0x08
}
   1afce:	08 95       	ret

0001afd0 <_ZN15RHGenericDriver8lastRssiEv>:

int16_t RHGenericDriver::lastRssi()
{
    return _lastRssi;
   1afd0:	fc 01       	movw	r30, r24
   1afd2:	85 85       	ldd	r24, Z+13	; 0x0d
   1afd4:	96 85       	ldd	r25, Z+14	; 0x0e
}
   1afd6:	08 95       	ret

0001afd8 <_ZN15RHGenericDriver4modeEv>:

RHGenericDriver::RHMode  RHGenericDriver::mode()
{
    return _mode;
   1afd8:	fc 01       	movw	r30, r24
   1afda:	82 81       	ldd	r24, Z+2	; 0x02
}
   1afdc:	08 95       	ret

0001afde <_ZN15RHGenericDriver7setModeENS_6RHModeE>:

void  RHGenericDriver::setMode(RHMode mode)
{
    _mode = mode;
   1afde:	fc 01       	movw	r30, r24
   1afe0:	62 83       	std	Z+2, r22	; 0x02
   1afe2:	08 95       	ret

0001afe4 <_ZN15RHGenericDriver15isChannelActiveEv>:
}

bool  RHGenericDriver::sleep()
{
    return false;
}
   1afe4:	80 e0       	ldi	r24, 0x00	; 0
   1afe6:	08 95       	ret

0001afe8 <_ZN15RHGenericDriver5rxBadEv>:
#endif
}

uint16_t RHGenericDriver::rxBad()
{
    return _rxBad;
   1afe8:	fc 01       	movw	r30, r24
   1afea:	87 85       	ldd	r24, Z+15	; 0x0f
   1afec:	90 89       	ldd	r25, Z+16	; 0x10
}
   1afee:	08 95       	ret

0001aff0 <_ZN15RHGenericDriver6rxGoodEv>:

uint16_t RHGenericDriver::rxGood()
{
    return _rxGood;
   1aff0:	fc 01       	movw	r30, r24
   1aff2:	81 89       	ldd	r24, Z+17	; 0x11
   1aff4:	92 89       	ldd	r25, Z+18	; 0x12
}
   1aff6:	08 95       	ret

0001aff8 <_ZN15RHGenericDriver6txGoodEv>:

uint16_t RHGenericDriver::txGood()
{
    return _txGood;
   1aff8:	fc 01       	movw	r30, r24
   1affa:	83 89       	ldd	r24, Z+19	; 0x13
   1affc:	94 89       	ldd	r25, Z+20	; 0x14
}
   1affe:	08 95       	ret

0001b000 <_ZN15RHGenericDriver13waitAvailableEv>:
    return true;
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
   1b000:	cf 93       	push	r28
   1b002:	df 93       	push	r29
   1b004:	ec 01       	movw	r28, r24
    while (!available())
   1b006:	e8 81       	ld	r30, Y
   1b008:	f9 81       	ldd	r31, Y+1	; 0x01
   1b00a:	06 80       	ldd	r0, Z+6	; 0x06
   1b00c:	f7 81       	ldd	r31, Z+7	; 0x07
   1b00e:	e0 2d       	mov	r30, r0
   1b010:	ce 01       	movw	r24, r28
   1b012:	19 95       	eicall
   1b014:	81 11       	cpse	r24, r1
   1b016:	02 c0       	rjmp	.+4      	; 0x1b01c <_ZN15RHGenericDriver13waitAvailableEv+0x1c>
	YIELD;
   1b018:	2f d7       	rcall	.+3678   	; 0x1be78 <yield>
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
    while (!available())
   1b01a:	f5 cf       	rjmp	.-22     	; 0x1b006 <_ZN15RHGenericDriver13waitAvailableEv+0x6>
	YIELD;
}
   1b01c:	df 91       	pop	r29
   1b01e:	cf 91       	pop	r28
   1b020:	08 95       	ret

0001b022 <_ZN15RHGenericDriver14waitPacketSentEv>:
    }
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
   1b022:	cf 93       	push	r28
   1b024:	df 93       	push	r29
   1b026:	ec 01       	movw	r28, r24
    while (_mode == RHModeTx)
   1b028:	8a 81       	ldd	r24, Y+2	; 0x02
   1b02a:	83 30       	cpi	r24, 0x03	; 3
   1b02c:	11 f4       	brne	.+4      	; 0x1b032 <_ZN15RHGenericDriver14waitPacketSentEv+0x10>
	YIELD; // Wait for any previous transmit to finish
   1b02e:	24 d7       	rcall	.+3656   	; 0x1be78 <yield>
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
    while (_mode == RHModeTx)
   1b030:	fb cf       	rjmp	.-10     	; 0x1b028 <_ZN15RHGenericDriver14waitPacketSentEv+0x6>
	YIELD; // Wait for any previous transmit to finish
    return true;
}
   1b032:	81 e0       	ldi	r24, 0x01	; 1
   1b034:	df 91       	pop	r29
   1b036:	cf 91       	pop	r28
   1b038:	08 95       	ret

0001b03a <_ZN15RHGenericDriver20waitAvailableTimeoutEj>:

// Blocks until a valid message is received or timeout expires
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
   1b03a:	8f 92       	push	r8
   1b03c:	9f 92       	push	r9
   1b03e:	af 92       	push	r10
   1b040:	bf 92       	push	r11
   1b042:	cf 92       	push	r12
   1b044:	df 92       	push	r13
   1b046:	ef 92       	push	r14
   1b048:	ff 92       	push	r15
   1b04a:	cf 93       	push	r28
   1b04c:	df 93       	push	r29
   1b04e:	ec 01       	movw	r28, r24
   1b050:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b052:	b3 db       	rcall	.-2202   	; 0x1a7ba <millis>
   1b054:	4b 01       	movw	r8, r22
   1b056:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b058:	e1 2c       	mov	r14, r1
   1b05a:	f1 2c       	mov	r15, r1
   1b05c:	ae db       	rcall	.-2212   	; 0x1a7ba <millis>
   1b05e:	dc 01       	movw	r26, r24
   1b060:	cb 01       	movw	r24, r22
   1b062:	88 19       	sub	r24, r8
   1b064:	99 09       	sbc	r25, r9
   1b066:	aa 09       	sbc	r26, r10
   1b068:	bb 09       	sbc	r27, r11
   1b06a:	8c 15       	cp	r24, r12
   1b06c:	9d 05       	cpc	r25, r13
   1b06e:	ae 05       	cpc	r26, r14
   1b070:	bf 05       	cpc	r27, r15
   1b072:	58 f4       	brcc	.+22     	; 0x1b08a <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x50>
    {
        if (available())
   1b074:	e8 81       	ld	r30, Y
   1b076:	f9 81       	ldd	r31, Y+1	; 0x01
   1b078:	06 80       	ldd	r0, Z+6	; 0x06
   1b07a:	f7 81       	ldd	r31, Z+7	; 0x07
   1b07c:	e0 2d       	mov	r30, r0
   1b07e:	ce 01       	movw	r24, r28
   1b080:	19 95       	eicall
   1b082:	81 11       	cpse	r24, r1
	{
           return true;
	}
	YIELD;
   1b084:	03 c0       	rjmp	.+6      	; 0x1b08c <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x52>
   1b086:	f8 d6       	rcall	.+3568   	; 0x1be78 <yield>
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b088:	e9 cf       	rjmp	.-46     	; 0x1b05c <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x22>
	{
           return true;
	}
	YIELD;
    }
    return false;
   1b08a:	80 e0       	ldi	r24, 0x00	; 0
}
   1b08c:	df 91       	pop	r29
   1b08e:	cf 91       	pop	r28
   1b090:	ff 90       	pop	r15
   1b092:	ef 90       	pop	r14
   1b094:	df 90       	pop	r13
   1b096:	cf 90       	pop	r12
   1b098:	bf 90       	pop	r11
   1b09a:	af 90       	pop	r10
   1b09c:	9f 90       	pop	r9
   1b09e:	8f 90       	pop	r8
   1b0a0:	08 95       	ret

0001b0a2 <_ZN15RHGenericDriver14waitPacketSentEj>:
	YIELD; // Wait for any previous transmit to finish
    return true;
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
   1b0a2:	8f 92       	push	r8
   1b0a4:	9f 92       	push	r9
   1b0a6:	af 92       	push	r10
   1b0a8:	bf 92       	push	r11
   1b0aa:	cf 92       	push	r12
   1b0ac:	df 92       	push	r13
   1b0ae:	ef 92       	push	r14
   1b0b0:	ff 92       	push	r15
   1b0b2:	cf 93       	push	r28
   1b0b4:	df 93       	push	r29
   1b0b6:	ec 01       	movw	r28, r24
   1b0b8:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1b0ba:	7f db       	rcall	.-2306   	; 0x1a7ba <millis>
   1b0bc:	4b 01       	movw	r8, r22
   1b0be:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1b0c0:	e1 2c       	mov	r14, r1
   1b0c2:	f1 2c       	mov	r15, r1
   1b0c4:	7a db       	rcall	.-2316   	; 0x1a7ba <millis>
   1b0c6:	dc 01       	movw	r26, r24
   1b0c8:	cb 01       	movw	r24, r22
   1b0ca:	88 19       	sub	r24, r8
   1b0cc:	99 09       	sbc	r25, r9
   1b0ce:	aa 09       	sbc	r26, r10
   1b0d0:	bb 09       	sbc	r27, r11
   1b0d2:	8c 15       	cp	r24, r12
   1b0d4:	9d 05       	cpc	r25, r13
   1b0d6:	ae 05       	cpc	r26, r14
   1b0d8:	bf 05       	cpc	r27, r15
   1b0da:	28 f4       	brcc	.+10     	; 0x1b0e6 <_ZN15RHGenericDriver14waitPacketSentEj+0x44>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
   1b0dc:	8a 81       	ldd	r24, Y+2	; 0x02
   1b0de:	83 30       	cpi	r24, 0x03	; 3
           return true;
	YIELD;
   1b0e0:	21 f4       	brne	.+8      	; 0x1b0ea <_ZN15RHGenericDriver14waitPacketSentEj+0x48>
   1b0e2:	ca d6       	rcall	.+3476   	; 0x1be78 <yield>
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1b0e4:	ef cf       	rjmp	.-34     	; 0x1b0c4 <_ZN15RHGenericDriver14waitPacketSentEj+0x22>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
	YIELD;
    }
    return false;
   1b0e6:	80 e0       	ldi	r24, 0x00	; 0
   1b0e8:	01 c0       	rjmp	.+2      	; 0x1b0ec <_ZN15RHGenericDriver14waitPacketSentEj+0x4a>
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
   1b0ea:	81 e0       	ldi	r24, 0x01	; 1
	YIELD;
    }
    return false;
}
   1b0ec:	df 91       	pop	r29
   1b0ee:	cf 91       	pop	r28
   1b0f0:	ff 90       	pop	r15
   1b0f2:	ef 90       	pop	r14
   1b0f4:	df 90       	pop	r13
   1b0f6:	cf 90       	pop	r12
   1b0f8:	bf 90       	pop	r11
   1b0fa:	af 90       	pop	r10
   1b0fc:	9f 90       	pop	r9
   1b0fe:	8f 90       	pop	r8
   1b100:	08 95       	ret

0001b102 <_ZN15RHGenericDriver7waitCADEv>:

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
   1b102:	cf 92       	push	r12
   1b104:	df 92       	push	r13
   1b106:	ef 92       	push	r14
   1b108:	ff 92       	push	r15
   1b10a:	cf 93       	push	r28
   1b10c:	df 93       	push	r29
    if (!_cad_timeout)
   1b10e:	fc 01       	movw	r30, r24
   1b110:	26 89       	ldd	r18, Z+22	; 0x16
   1b112:	37 89       	ldd	r19, Z+23	; 0x17
   1b114:	23 2b       	or	r18, r19
   1b116:	79 f1       	breq	.+94     	; 0x1b176 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b118:	ec 01       	movw	r28, r24
    // Wait for any channel activity to finish or timeout
    // Sophisticated DCF function...
    // DCF : BackoffTime = random() x aSlotTime
    // 100 - 1000 ms
    // 10 sec timeout
    unsigned long t = millis();
   1b11a:	4f db       	rcall	.-2402   	; 0x1a7ba <millis>
   1b11c:	6b 01       	movw	r12, r22
   1b11e:	7c 01       	movw	r14, r24
    while (isChannelActive())
   1b120:	e8 81       	ld	r30, Y
   1b122:	f9 81       	ldd	r31, Y+1	; 0x01
   1b124:	00 8c       	ldd	r0, Z+24	; 0x18
   1b126:	f1 8d       	ldd	r31, Z+25	; 0x19
   1b128:	e0 2d       	mov	r30, r0
   1b12a:	ce 01       	movw	r24, r28
   1b12c:	19 95       	eicall
   1b12e:	88 23       	and	r24, r24
    {
         if (millis() - t > _cad_timeout) 
   1b130:	11 f1       	breq	.+68     	; 0x1b176 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b132:	43 db       	rcall	.-2426   	; 0x1a7ba <millis>
   1b134:	ab 01       	movw	r20, r22
   1b136:	bc 01       	movw	r22, r24
   1b138:	4c 19       	sub	r20, r12
   1b13a:	5d 09       	sbc	r21, r13
   1b13c:	6e 09       	sbc	r22, r14
   1b13e:	7f 09       	sbc	r23, r15
   1b140:	8e 89       	ldd	r24, Y+22	; 0x16
   1b142:	9f 89       	ldd	r25, Y+23	; 0x17
   1b144:	a0 e0       	ldi	r26, 0x00	; 0
   1b146:	b0 e0       	ldi	r27, 0x00	; 0
   1b148:	84 17       	cp	r24, r20
   1b14a:	95 07       	cpc	r25, r21
   1b14c:	a6 07       	cpc	r26, r22
   1b14e:	b7 07       	cpc	r27, r23
   1b150:	a0 f0       	brcs	.+40     	; 0x1b17a <_ZN15RHGenericDriver7waitCADEv+0x78>
	     return false;
#if (RH_PLATFORM == RH_PLATFORM_STM32) // stdlib on STMF103 gets confused if random is redefined
	 delay(_random(1, 10) * 100);
#else
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
   1b152:	2a e0       	ldi	r18, 0x0A	; 10
   1b154:	30 e0       	ldi	r19, 0x00	; 0
   1b156:	40 e0       	ldi	r20, 0x00	; 0
   1b158:	50 e0       	ldi	r21, 0x00	; 0
   1b15a:	61 e0       	ldi	r22, 0x01	; 1
   1b15c:	70 e0       	ldi	r23, 0x00	; 0
   1b15e:	80 e0       	ldi	r24, 0x00	; 0
   1b160:	90 e0       	ldi	r25, 0x00	; 0
   1b162:	0e 94 4a e1 	call	0x1c294	; 0x1c294 <_Z6randomll>
   1b166:	9b 01       	movw	r18, r22
   1b168:	ac 01       	movw	r20, r24
   1b16a:	a4 e6       	ldi	r26, 0x64	; 100
   1b16c:	b0 e0       	ldi	r27, 0x00	; 0
   1b16e:	0e 94 33 e8 	call	0x1d066	; 0x1d066 <__muluhisi3>
   1b172:	54 db       	rcall	.-2392   	; 0x1a81c <delay>
   1b174:	d5 cf       	rjmp	.-86     	; 0x1b120 <_ZN15RHGenericDriver7waitCADEv+0x1e>

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
    if (!_cad_timeout)
	return true;
   1b176:	81 e0       	ldi	r24, 0x01	; 1
   1b178:	01 c0       	rjmp	.+2      	; 0x1b17c <_ZN15RHGenericDriver7waitCADEv+0x7a>
    // 10 sec timeout
    unsigned long t = millis();
    while (isChannelActive())
    {
         if (millis() - t > _cad_timeout) 
	     return false;
   1b17a:	80 e0       	ldi	r24, 0x00	; 0
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
#endif
    }

    return true;
}
   1b17c:	df 91       	pop	r29
   1b17e:	cf 91       	pop	r28
   1b180:	ff 90       	pop	r15
   1b182:	ef 90       	pop	r14
   1b184:	df 90       	pop	r13
   1b186:	cf 90       	pop	r12
   1b188:	08 95       	ret

0001b18a <_ZN15RHGenericDriverC1Ev>:
// Copyright (C) 2014 Mike McCauley
// $Id: RHGenericDriver.cpp,v 1.24 2020/01/07 23:35:02 mikem Exp $

#include <RHGenericDriver.h>

RHGenericDriver::RHGenericDriver()
   1b18a:	fc 01       	movw	r30, r24
    _txHeaderId(0),
    _txHeaderFlags(0),
    _rxBad(0),
    _rxGood(0),
    _txGood(0),
    _cad_timeout(0)
   1b18c:	89 e0       	ldi	r24, 0x09	; 9
   1b18e:	98 e0       	ldi	r25, 0x08	; 8
   1b190:	91 83       	std	Z+1, r25	; 0x01
   1b192:	80 83       	st	Z, r24
   1b194:	12 82       	std	Z+2, r1	; 0x02
   1b196:	8f ef       	ldi	r24, 0xFF	; 255
   1b198:	83 83       	std	Z+3, r24	; 0x03
   1b19a:	81 87       	std	Z+9, r24	; 0x09
   1b19c:	82 87       	std	Z+10, r24	; 0x0a
   1b19e:	13 86       	std	Z+11, r1	; 0x0b
   1b1a0:	14 86       	std	Z+12, r1	; 0x0c
   1b1a2:	10 8a       	std	Z+16, r1	; 0x10
   1b1a4:	17 86       	std	Z+15, r1	; 0x0f
   1b1a6:	12 8a       	std	Z+18, r1	; 0x12
   1b1a8:	11 8a       	std	Z+17, r1	; 0x11
   1b1aa:	14 8a       	std	Z+20, r1	; 0x14
   1b1ac:	13 8a       	std	Z+19, r1	; 0x13
   1b1ae:	17 8a       	std	Z+23, r1	; 0x17
   1b1b0:	16 8a       	std	Z+22, r1	; 0x16
   1b1b2:	08 95       	ret

0001b1b4 <_ZN13RHHardwareSPI8transferEh>:
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    SPDR = data;
   1b1b4:	6e bd       	out	0x2e, r22	; 46
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
   1b1b6:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
   1b1b8:	0d b4       	in	r0, 0x2d	; 45
   1b1ba:	07 fe       	sbrs	r0, 7
   1b1bc:	fd cf       	rjmp	.-6      	; 0x1b1b8 <_ZN13RHHardwareSPI8transferEh+0x4>
    return SPDR;
   1b1be:	8e b5       	in	r24, 0x2e	; 46
}

uint8_t RHHardwareSPI::transfer(uint8_t data) 
{
    return SPI.transfer(data);
}
   1b1c0:	08 95       	ret

0001b1c2 <_ZN13RHHardwareSPI15attachInterruptEv>:
    SPSR = (SPSR & ~SPI_2XCLOCK_MASK) | ((clockDiv >> 2) & SPI_2XCLOCK_MASK);
  }
  // These undocumented functions should not be used.  SPI.transfer()
  // polls the hardware flag which is automatically cleared as the
  // AVR responds to SPI's interrupt
  inline static void attachInterrupt() { SPCR |= _BV(SPIE); }
   1b1c2:	8c b5       	in	r24, 0x2c	; 44
   1b1c4:	80 68       	ori	r24, 0x80	; 128
   1b1c6:	8c bd       	out	0x2c, r24	; 44
   1b1c8:	08 95       	ret

0001b1ca <_ZN13RHHardwareSPI15detachInterruptEv>:
  inline static void detachInterrupt() { SPCR &= ~_BV(SPIE); }
   1b1ca:	8c b5       	in	r24, 0x2c	; 44
   1b1cc:	8f 77       	andi	r24, 0x7F	; 127
   1b1ce:	8c bd       	out	0x2c, r24	; 44
   1b1d0:	08 95       	ret

0001b1d2 <_ZN13RHHardwareSPI16beginTransactionEv>:
{
    return SPI.end();
}

void RHHardwareSPI::beginTransaction()
{
   1b1d2:	fc 01       	movw	r30, r24
   1b1d4:	45 81       	ldd	r20, Z+5	; 0x05
   1b1d6:	36 81       	ldd	r19, Z+6	; 0x06

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    if (interruptMode > 0) {
   1b1d8:	80 91 e5 17 	lds	r24, 0x17E5	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
   1b1dc:	88 23       	and	r24, r24
   1b1de:	99 f0       	breq	.+38     	; 0x1b206 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      uint8_t sreg = SREG;
   1b1e0:	2f b7       	in	r18, 0x3f	; 63
      noInterrupts();
   1b1e2:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b1e4:	80 91 e5 17 	lds	r24, 0x17E5	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
   1b1e8:	81 30       	cpi	r24, 0x01	; 1
   1b1ea:	59 f4       	brne	.+22     	; 0x1b202 <_ZN13RHHardwareSPI16beginTransactionEv+0x30>
        interruptSave = SPI_AVR_EIMSK;
   1b1ec:	8d b3       	in	r24, 0x1d	; 29
   1b1ee:	80 93 e3 17 	sts	0x17E3, r24	; 0x8017e3 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
   1b1f2:	9d b3       	in	r25, 0x1d	; 29
   1b1f4:	80 91 e4 17 	lds	r24, 0x17E4	; 0x8017e4 <_ZN8SPIClass13interruptMaskE>
   1b1f8:	80 95       	com	r24
   1b1fa:	89 23       	and	r24, r25
   1b1fc:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b1fe:	2f bf       	out	0x3f, r18	; 63
   1b200:	02 c0       	rjmp	.+4      	; 0x1b206 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      } else
      #endif
      {
        interruptSave = sreg;
   1b202:	20 93 e3 17 	sts	0x17E3, r18	; 0x8017e3 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
   1b206:	4c bd       	out	0x2c, r20	; 44
    SPSR = settings.spsr;
   1b208:	3d bd       	out	0x2d, r19	; 45
   1b20a:	08 95       	ret

0001b20c <_ZN13RHHardwareSPI5beginEv>:
    SPI.detachInterrupt();
#endif
}
    
void RHHardwareSPI::begin() 
{
   1b20c:	0f 93       	push	r16
   1b20e:	1f 93       	push	r17
   1b210:	fc 01       	movw	r30, r24
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
   1b212:	82 81       	ldd	r24, Z+2	; 0x02
   1b214:	84 30       	cpi	r24, 0x04	; 4
   1b216:	59 f0       	breq	.+22     	; 0x1b22e <_ZN13RHHardwareSPI5beginEv+0x22>
       frequency = 16000000;
   else if (_frequency == Frequency8MHz)
   1b218:	83 30       	cpi	r24, 0x03	; 3
   1b21a:	71 f0       	breq	.+28     	; 0x1b238 <_ZN13RHHardwareSPI5beginEv+0x2c>
       frequency = 8000000;
   else if (_frequency == Frequency4MHz)
   1b21c:	82 30       	cpi	r24, 0x02	; 2
   1b21e:	89 f0       	breq	.+34     	; 0x1b242 <_ZN13RHHardwareSPI5beginEv+0x36>
       frequency = 4000000;
   else if (_frequency == Frequency2MHz)
   1b220:	81 30       	cpi	r24, 0x01	; 1
   1b222:	a1 f0       	breq	.+40     	; 0x1b24c <_ZN13RHHardwareSPI5beginEv+0x40>
       frequency = 2000000;
   else
       frequency = 1000000;
   1b224:	40 e4       	ldi	r20, 0x40	; 64
   1b226:	52 e4       	ldi	r21, 0x42	; 66
   1b228:	6f e0       	ldi	r22, 0x0F	; 15
   1b22a:	70 e0       	ldi	r23, 0x00	; 0
   1b22c:	13 c0       	rjmp	.+38     	; 0x1b254 <_ZN13RHHardwareSPI5beginEv+0x48>
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
       frequency = 16000000;
   1b22e:	40 e0       	ldi	r20, 0x00	; 0
   1b230:	54 e2       	ldi	r21, 0x24	; 36
   1b232:	64 ef       	ldi	r22, 0xF4	; 244
   1b234:	70 e0       	ldi	r23, 0x00	; 0
   1b236:	0e c0       	rjmp	.+28     	; 0x1b254 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency8MHz)
       frequency = 8000000;
   1b238:	40 e0       	ldi	r20, 0x00	; 0
   1b23a:	52 e1       	ldi	r21, 0x12	; 18
   1b23c:	6a e7       	ldi	r22, 0x7A	; 122
   1b23e:	70 e0       	ldi	r23, 0x00	; 0
   1b240:	09 c0       	rjmp	.+18     	; 0x1b254 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency4MHz)
       frequency = 4000000;
   1b242:	40 e0       	ldi	r20, 0x00	; 0
   1b244:	59 e0       	ldi	r21, 0x09	; 9
   1b246:	6d e3       	ldi	r22, 0x3D	; 61
   1b248:	70 e0       	ldi	r23, 0x00	; 0
   1b24a:	04 c0       	rjmp	.+8      	; 0x1b254 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency2MHz)
       frequency = 2000000;
   1b24c:	40 e8       	ldi	r20, 0x80	; 128
   1b24e:	54 e8       	ldi	r21, 0x84	; 132
   1b250:	6e e1       	ldi	r22, 0x1E	; 30
   1b252:	70 e0       	ldi	r23, 0x00	; 0
       bitOrder = LSBFIRST;
   else
       bitOrder = MSBFIRST;
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
   1b254:	84 81       	ldd	r24, Z+4	; 0x04
   1b256:	88 23       	and	r24, r24
   1b258:	61 f0       	breq	.+24     	; 0x1b272 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
   1b25a:	81 30       	cpi	r24, 0x01	; 1
   1b25c:	31 f0       	breq	.+12     	; 0x1b26a <_ZN13RHHardwareSPI5beginEv+0x5e>
	dataMode = SPI_MODE1;
    else if (_dataMode == DataMode2)
   1b25e:	82 30       	cpi	r24, 0x02	; 2
   1b260:	31 f0       	breq	.+12     	; 0x1b26e <_ZN13RHHardwareSPI5beginEv+0x62>
	dataMode = SPI_MODE2;
    else if (_dataMode == DataMode3)
   1b262:	83 30       	cpi	r24, 0x03	; 3
   1b264:	31 f4       	brne	.+12     	; 0x1b272 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE3;
   1b266:	9c e0       	ldi	r25, 0x0C	; 12
   1b268:	05 c0       	rjmp	.+10     	; 0x1b274 <_ZN13RHHardwareSPI5beginEv+0x68>
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
	dataMode = SPI_MODE1;
   1b26a:	94 e0       	ldi	r25, 0x04	; 4
   1b26c:	03 c0       	rjmp	.+6      	; 0x1b274 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode2)
	dataMode = SPI_MODE2;
   1b26e:	98 e0       	ldi	r25, 0x08	; 8
   1b270:	01 c0       	rjmp	.+2      	; 0x1b274 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode3)
	dataMode = SPI_MODE3;
    else
	dataMode = SPI_MODE0;
   1b272:	90 e0       	ldi	r25, 0x00	; 0
   1b274:	00 e0       	ldi	r16, 0x00	; 0
   1b276:	12 e1       	ldi	r17, 0x12	; 18
   1b278:	2a e7       	ldi	r18, 0x7A	; 122
   1b27a:	30 e0       	ldi	r19, 0x00	; 0
   1b27c:	80 e0       	ldi	r24, 0x00	; 0
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b27e:	40 17       	cp	r20, r16
   1b280:	51 07       	cpc	r21, r17
   1b282:	62 07       	cpc	r22, r18
   1b284:	73 07       	cpc	r23, r19
   1b286:	40 f4       	brcc	.+16     	; 0x1b298 <_ZN13RHHardwareSPI5beginEv+0x8c>
        clockSetting /= 2;
   1b288:	36 95       	lsr	r19
   1b28a:	27 95       	ror	r18
   1b28c:	17 95       	ror	r17
   1b28e:	07 95       	ror	r16
        clockDiv++;
   1b290:	8f 5f       	subi	r24, 0xFF	; 255
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b292:	86 30       	cpi	r24, 0x06	; 6
   1b294:	a1 f7       	brne	.-24     	; 0x1b27e <_ZN13RHHardwareSPI5beginEv+0x72>
      }
    }

    // Compensate for the duplicate fosc/64
    if (clockDiv == 6)
    clockDiv = 7;
   1b296:	87 e0       	ldi	r24, 0x07	; 7

    // Invert the SPI2X bit
    clockDiv ^= 0x1;
   1b298:	21 e0       	ldi	r18, 0x01	; 1
   1b29a:	28 27       	eor	r18, r24

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b29c:	83 81       	ldd	r24, Z+3	; 0x03
   1b29e:	81 30       	cpi	r24, 0x01	; 1
   1b2a0:	11 f0       	breq	.+4      	; 0x1b2a6 <_ZN13RHHardwareSPI5beginEv+0x9a>
   1b2a2:	80 e5       	ldi	r24, 0x50	; 80
   1b2a4:	01 c0       	rjmp	.+2      	; 0x1b2a8 <_ZN13RHHardwareSPI5beginEv+0x9c>
   1b2a6:	80 e7       	ldi	r24, 0x70	; 112

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   1b2a8:	32 2f       	mov	r19, r18
   1b2aa:	36 95       	lsr	r19
   1b2ac:	93 2b       	or	r25, r19
   1b2ae:	98 2b       	or	r25, r24
   1b2b0:	95 83       	std	Z+5, r25	; 0x05
   1b2b2:	21 70       	andi	r18, 0x01	; 1
   1b2b4:	26 83       	std	Z+6, r18	; 0x06
#else
 #warning RHHardwareSPI does not support this platform yet. Consider adding it and contributing a patch.
#endif

#endif // SPI_HAS_TRANSACTION
}
   1b2b6:	1f 91       	pop	r17
   1b2b8:	0f 91       	pop	r16
    else
	dataMode = SPI_MODE0;

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   SPI.begin();
   1b2ba:	67 c4       	rjmp	.+2254   	; 0x1bb8a <_ZN8SPIClass5beginEv>

0001b2bc <_ZN13RHHardwareSPI3endEv>:
#endif // SPI_HAS_TRANSACTION
}

void RHHardwareSPI::end() 
{
    return SPI.end();
   1b2bc:	9c c4       	rjmp	.+2360   	; 0x1bbf6 <_ZN8SPIClass3endEv>

0001b2be <_ZN13RHHardwareSPI14usingInterruptEh>:
    SPI.endTransaction();
#endif
}

void RHHardwareSPI::usingInterrupt(uint8_t interrupt)
{
   1b2be:	86 2f       	mov	r24, r22
#if defined(SPI_HAS_TRANSACTION) && !defined(RH_MISSING_SPIUSINGINTERRUPT)
    SPI.usingInterrupt(interrupt);
   1b2c0:	ae c4       	rjmp	.+2396   	; 0x1bc1e <_ZN8SPIClass14usingInterruptEh>

0001b2c2 <_ZN13RHHardwareSPI14endTransactionEv>:
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
   1b2c2:	80 91 e5 17 	lds	r24, 0x17E5	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
   1b2c6:	88 23       	and	r24, r24
   1b2c8:	61 f0       	breq	.+24     	; 0x1b2e2 <_ZN13RHHardwareSPI14endTransactionEv+0x20>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
   1b2ca:	9f b7       	in	r25, 0x3f	; 63
      #endif
      noInterrupts();
   1b2cc:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b2ce:	20 91 e5 17 	lds	r18, 0x17E5	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
   1b2d2:	80 91 e3 17 	lds	r24, 0x17E3	; 0x8017e3 <_ZN8SPIClass13interruptSaveE>
   1b2d6:	21 30       	cpi	r18, 0x01	; 1
   1b2d8:	19 f4       	brne	.+6      	; 0x1b2e0 <_ZN13RHHardwareSPI14endTransactionEv+0x1e>
        SPI_AVR_EIMSK = interruptSave;
   1b2da:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b2dc:	9f bf       	out	0x3f, r25	; 63
   1b2de:	08 95       	ret
      } else
      #endif
      {
        SREG = interruptSave;
   1b2e0:	8f bf       	out	0x3f, r24	; 63
   1b2e2:	08 95       	ret

0001b2e4 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>:
 #define SPI_CLOCK_DIV4  (VARIANT_MCK/21000000) // 4MHz
 #define SPI_CLOCK_DIV2  (VARIANT_MCK/10500000) // 8MHz
 #define SPI_CLOCK_DIV1  (VARIANT_MCK/5250000)  // 16MHz
#endif

RHHardwareSPI::RHHardwareSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1b2e4:	cf 93       	push	r28
   1b2e6:	df 93       	push	r29
   1b2e8:	ec 01       	movw	r28, r24
    :
    RHGenericSPI(frequency, bitOrder, dataMode)
   1b2ea:	0e 94 79 e1 	call	0x1c2f2	; 0x1c2f2 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>
   1b2ee:	89 e4       	ldi	r24, 0x49	; 73
   1b2f0:	98 e0       	ldi	r25, 0x08	; 8
   1b2f2:	99 83       	std	Y+1, r25	; 0x01
   1b2f4:	88 83       	st	Y, r24
    // Invert the SPI2X bit
    clockDiv ^= 0x1;

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b2f6:	80 e5       	ldi	r24, 0x50	; 80
   1b2f8:	8d 83       	std	Y+5, r24	; 0x05
    spsr = clockDiv & SPI_2XCLOCK_MASK;
   1b2fa:	1e 82       	std	Y+6, r1	; 0x06
{
}
   1b2fc:	df 91       	pop	r29
   1b2fe:	cf 91       	pop	r28
   1b300:	08 95       	ret

0001b302 <_GLOBAL__sub_I_hardware_spi>:
#include <RHHardwareSPI.h>

#ifdef RH_HAVE_HARDWARE_SPI

// Declare a single default instance of the hardware SPI interface class
RHHardwareSPI hardware_spi;
   1b302:	20 e0       	ldi	r18, 0x00	; 0
   1b304:	40 e0       	ldi	r20, 0x00	; 0
   1b306:	60 e0       	ldi	r22, 0x00	; 0
   1b308:	85 ed       	ldi	r24, 0xD5	; 213
   1b30a:	97 e1       	ldi	r25, 0x17	; 23
   1b30c:	eb cf       	rjmp	.-42     	; 0x1b2e4 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>

0001b30e <_ZN7RH_RF9514modeWillChangeEN15RHGenericDriver6RHModeE>:
	cr = RH_RF95_CODING_RATE_4_7;
    else if (denominator >= 8)
	cr = RH_RF95_CODING_RATE_4_8;
 
    // CR is bits 3..1 of RH_RF95_REG_1D_MODEM_CONFIG1
    spiWrite(RH_RF95_REG_1D_MODEM_CONFIG1, (spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) & ~RH_RF95_CODING_RATE) | cr);
   1b30e:	81 e0       	ldi	r24, 0x01	; 1
   1b310:	08 95       	ret

0001b312 <_ZN7RH_RF9516maxMessageLengthEv>:
   1b312:	8f e1       	ldi	r24, 0x1F	; 31
   1b314:	08 95       	ret

0001b316 <_ZN7RH_RF95D1Ev>:
   1b316:	08 95       	ret

0001b318 <_ZN7RH_RF9515isChannelActiveEv>:
   1b318:	cf 93       	push	r28
   1b31a:	df 93       	push	r29
   1b31c:	ec 01       	movw	r28, r24
   1b31e:	8a 81       	ldd	r24, Y+2	; 0x02
   1b320:	85 30       	cpi	r24, 0x05	; 5
   1b322:	b1 f0       	breq	.+44     	; 0x1b350 <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b324:	e8 81       	ld	r30, Y
   1b326:	f9 81       	ldd	r31, Y+1	; 0x01
   1b328:	e0 5c       	subi	r30, 0xC0	; 192
   1b32a:	ff 4f       	sbci	r31, 0xFF	; 255
   1b32c:	01 90       	ld	r0, Z+
   1b32e:	f0 81       	ld	r31, Z
   1b330:	e0 2d       	mov	r30, r0
   1b332:	65 e0       	ldi	r22, 0x05	; 5
   1b334:	ce 01       	movw	r24, r28
   1b336:	19 95       	eicall
   1b338:	47 e0       	ldi	r20, 0x07	; 7
   1b33a:	61 e0       	ldi	r22, 0x01	; 1
   1b33c:	ce 01       	movw	r24, r28
   1b33e:	0e 94 0b e2 	call	0x1c416	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b342:	40 e8       	ldi	r20, 0x80	; 128
   1b344:	60 e4       	ldi	r22, 0x40	; 64
   1b346:	ce 01       	movw	r24, r28
   1b348:	0e 94 0b e2 	call	0x1c416	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b34c:	85 e0       	ldi	r24, 0x05	; 5
   1b34e:	8a 83       	std	Y+2, r24	; 0x02
   1b350:	8a 81       	ldd	r24, Y+2	; 0x02
   1b352:	85 30       	cpi	r24, 0x05	; 5
   1b354:	11 f4       	brne	.+4      	; 0x1b35a <_ZN7RH_RF9515isChannelActiveEv+0x42>
   1b356:	90 d5       	rcall	.+2848   	; 0x1be78 <yield>
   1b358:	fb cf       	rjmp	.-10     	; 0x1b350 <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b35a:	8d 89       	ldd	r24, Y+21	; 0x15
   1b35c:	df 91       	pop	r29
   1b35e:	cf 91       	pop	r28
   1b360:	08 95       	ret

0001b362 <_ZN7RH_RF95D0Ev>:
   1b362:	8b c5       	rjmp	.+2838   	; 0x1be7a <_ZdlPv>

0001b364 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>:
   1b364:	0f 93       	push	r16
   1b366:	1f 93       	push	r17
   1b368:	cf 93       	push	r28
   1b36a:	8c 01       	movw	r16, r24
   1b36c:	c6 2f       	mov	r28, r22
   1b36e:	65 31       	cpi	r22, 0x15	; 21
   1b370:	2c f4       	brge	.+10     	; 0x1b37c <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x18>
   1b372:	62 30       	cpi	r22, 0x02	; 2
   1b374:	5c f0       	brlt	.+22     	; 0x1b38c <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x28>
   1b376:	62 31       	cpi	r22, 0x12	; 18
   1b378:	54 f0       	brlt	.+20     	; 0x1b38e <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x2a>
   1b37a:	01 c0       	rjmp	.+2      	; 0x1b37e <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x1a>
   1b37c:	c4 e1       	ldi	r28, 0x14	; 20
   1b37e:	47 e0       	ldi	r20, 0x07	; 7
   1b380:	6d e4       	ldi	r22, 0x4D	; 77
   1b382:	c8 01       	movw	r24, r16
   1b384:	0e 94 0b e2 	call	0x1c416	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b388:	c3 50       	subi	r28, 0x03	; 3
   1b38a:	06 c0       	rjmp	.+12     	; 0x1b398 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x34>
   1b38c:	c2 e0       	ldi	r28, 0x02	; 2
   1b38e:	44 e0       	ldi	r20, 0x04	; 4
   1b390:	6d e4       	ldi	r22, 0x4D	; 77
   1b392:	c8 01       	movw	r24, r16
   1b394:	0e 94 0b e2 	call	0x1c416	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b398:	4e ef       	ldi	r20, 0xFE	; 254
   1b39a:	4c 0f       	add	r20, r28
   1b39c:	40 68       	ori	r20, 0x80	; 128
   1b39e:	69 e0       	ldi	r22, 0x09	; 9
   1b3a0:	c8 01       	movw	r24, r16
   1b3a2:	cf 91       	pop	r28
   1b3a4:	1f 91       	pop	r17
   1b3a6:	0f 91       	pop	r16
   1b3a8:	0c 94 0b e2 	jmp	0x1c416	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>

0001b3ac <_ZN7RH_RF955sleepEv>:
   1b3ac:	cf 93       	push	r28
   1b3ae:	df 93       	push	r29
   1b3b0:	fc 01       	movw	r30, r24
   1b3b2:	22 81       	ldd	r18, Z+2	; 0x02
   1b3b4:	21 30       	cpi	r18, 0x01	; 1
   1b3b6:	91 f0       	breq	.+36     	; 0x1b3dc <_ZN7RH_RF955sleepEv+0x30>
   1b3b8:	ec 01       	movw	r28, r24
   1b3ba:	01 90       	ld	r0, Z+
   1b3bc:	f0 81       	ld	r31, Z
   1b3be:	e0 2d       	mov	r30, r0
   1b3c0:	e0 5c       	subi	r30, 0xC0	; 192
   1b3c2:	ff 4f       	sbci	r31, 0xFF	; 255
   1b3c4:	01 90       	ld	r0, Z+
   1b3c6:	f0 81       	ld	r31, Z
   1b3c8:	e0 2d       	mov	r30, r0
   1b3ca:	61 e0       	ldi	r22, 0x01	; 1
   1b3cc:	19 95       	eicall
   1b3ce:	40 e0       	ldi	r20, 0x00	; 0
   1b3d0:	61 e0       	ldi	r22, 0x01	; 1
   1b3d2:	ce 01       	movw	r24, r28
   1b3d4:	0e 94 0b e2 	call	0x1c416	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b3d8:	81 e0       	ldi	r24, 0x01	; 1
   1b3da:	8a 83       	std	Y+2, r24	; 0x02
   1b3dc:	81 e0       	ldi	r24, 0x01	; 1
   1b3de:	df 91       	pop	r29
   1b3e0:	cf 91       	pop	r28
   1b3e2:	08 95       	ret

0001b3e4 <_ZN7RH_RF95C1EhhR12RHGenericSPI>:
   1b3e4:	1f 93       	push	r17
   1b3e6:	cf 93       	push	r28
   1b3e8:	df 93       	push	r29
   1b3ea:	ec 01       	movw	r28, r24
   1b3ec:	14 2f       	mov	r17, r20
   1b3ee:	a9 01       	movw	r20, r18
   1b3f0:	b6 d7       	rcall	.+3948   	; 0x1c35e <_ZN11RHSPIDriverC1EhR12RHGenericSPI>
   1b3f2:	83 e6       	ldi	r24, 0x63	; 99
   1b3f4:	98 e0       	ldi	r25, 0x08	; 8
   1b3f6:	99 83       	std	Y+1, r25	; 0x01
   1b3f8:	88 83       	st	Y, r24
   1b3fa:	fe 01       	movw	r30, r28
   1b3fc:	ee 5b       	subi	r30, 0xBE	; 190
   1b3fe:	ff 4f       	sbci	r31, 0xFF	; 255
   1b400:	10 82       	st	Z, r1
   1b402:	34 96       	adiw	r30, 0x04	; 4
   1b404:	10 82       	st	Z, r1
   1b406:	1c 8f       	std	Y+28, r17	; 0x1c
   1b408:	8f ef       	ldi	r24, 0xFF	; 255
   1b40a:	8d 8f       	std	Y+29, r24	; 0x1d
   1b40c:	31 97       	sbiw	r30, 0x01	; 1
   1b40e:	81 e0       	ldi	r24, 0x01	; 1
   1b410:	80 83       	st	Z, r24
   1b412:	1b 8e       	std	Y+27, r1	; 0x1b
   1b414:	df 91       	pop	r29
   1b416:	cf 91       	pop	r28
   1b418:	1f 91       	pop	r17
   1b41a:	08 95       	ret

0001b41c <_ZN7RH_RF9513validateRxBufEv>:
   1b41c:	fc 01       	movw	r30, r24
   1b41e:	86 8d       	ldd	r24, Z+30	; 0x1e
   1b420:	84 30       	cpi	r24, 0x04	; 4
   1b422:	d8 f0       	brcs	.+54     	; 0x1b45a <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1b424:	87 8d       	ldd	r24, Z+31	; 0x1f
   1b426:	85 83       	std	Z+5, r24	; 0x05
   1b428:	80 a1       	ldd	r24, Z+32	; 0x20
   1b42a:	86 83       	std	Z+6, r24	; 0x06
   1b42c:	81 a1       	ldd	r24, Z+33	; 0x21
   1b42e:	87 83       	std	Z+7, r24	; 0x07
   1b430:	82 a1       	ldd	r24, Z+34	; 0x22
   1b432:	80 87       	std	Z+8, r24	; 0x08
   1b434:	84 81       	ldd	r24, Z+4	; 0x04
   1b436:	81 11       	cpse	r24, r1
   1b438:	07 c0       	rjmp	.+14     	; 0x1b448 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1b43a:	95 81       	ldd	r25, Z+5	; 0x05
   1b43c:	83 81       	ldd	r24, Z+3	; 0x03
   1b43e:	98 17       	cp	r25, r24
   1b440:	19 f0       	breq	.+6      	; 0x1b448 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1b442:	85 81       	ldd	r24, Z+5	; 0x05
   1b444:	8f 3f       	cpi	r24, 0xFF	; 255
   1b446:	49 f4       	brne	.+18     	; 0x1b45a <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1b448:	81 89       	ldd	r24, Z+17	; 0x11
   1b44a:	92 89       	ldd	r25, Z+18	; 0x12
   1b44c:	01 96       	adiw	r24, 0x01	; 1
   1b44e:	92 8b       	std	Z+18, r25	; 0x12
   1b450:	81 8b       	std	Z+17, r24	; 0x11
   1b452:	ee 5b       	subi	r30, 0xBE	; 190
   1b454:	ff 4f       	sbci	r31, 0xFF	; 255
   1b456:	81 e0       	ldi	r24, 0x01	; 1
   1b458:	80 83       	st	Z, r24
   1b45a:	08 95       	ret

0001b45c <_ZN7RH_RF9510clearRxBufEv>:
   1b45c:	2f b7       	in	r18, 0x3f	; 63
   1b45e:	f8 94       	cli
   1b460:	fc 01       	movw	r30, r24
   1b462:	ee 5b       	subi	r30, 0xBE	; 190
   1b464:	ff 4f       	sbci	r31, 0xFF	; 255
   1b466:	10 82       	st	Z, r1
   1b468:	fc 01       	movw	r30, r24
   1b46a:	16 8e       	std	Z+30, r1	; 0x1e
   1b46c:	2f bf       	out	0x3f, r18	; 63
   1b46e:	08 95       	ret

0001b470 <_ZN7RH_RF954recvEPhS0_>:
   1b470:	cf 92       	push	r12
   1b472:	df 92       	push	r13
   1b474:	ef 92       	push	r14
   1b476:	ff 92       	push	r15
   1b478:	0f 93       	push	r16
   1b47a:	1f 93       	push	r17
   1b47c:	cf 93       	push	r28
   1b47e:	df 93       	push	r29
   1b480:	ec 01       	movw	r28, r24
   1b482:	7b 01       	movw	r14, r22
   1b484:	8a 01       	movw	r16, r20
   1b486:	e8 81       	ld	r30, Y
   1b488:	f9 81       	ldd	r31, Y+1	; 0x01
   1b48a:	06 80       	ldd	r0, Z+6	; 0x06
   1b48c:	f7 81       	ldd	r31, Z+7	; 0x07
   1b48e:	e0 2d       	mov	r30, r0
   1b490:	19 95       	eicall
   1b492:	d8 2e       	mov	r13, r24
   1b494:	88 23       	and	r24, r24
   1b496:	01 f1       	breq	.+64     	; 0x1b4d8 <_ZN7RH_RF954recvEPhS0_+0x68>
   1b498:	e1 14       	cp	r14, r1
   1b49a:	f1 04       	cpc	r15, r1
   1b49c:	d9 f0       	breq	.+54     	; 0x1b4d4 <_ZN7RH_RF954recvEPhS0_+0x64>
   1b49e:	01 15       	cp	r16, r1
   1b4a0:	11 05       	cpc	r17, r1
   1b4a2:	c1 f0       	breq	.+48     	; 0x1b4d4 <_ZN7RH_RF954recvEPhS0_+0x64>
   1b4a4:	cf b6       	in	r12, 0x3f	; 63
   1b4a6:	f8 94       	cli
   1b4a8:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1b4aa:	90 e0       	ldi	r25, 0x00	; 0
   1b4ac:	03 97       	sbiw	r24, 0x03	; 3
   1b4ae:	f8 01       	movw	r30, r16
   1b4b0:	20 81       	ld	r18, Z
   1b4b2:	30 e0       	ldi	r19, 0x00	; 0
   1b4b4:	28 17       	cp	r18, r24
   1b4b6:	39 07       	cpc	r19, r25
   1b4b8:	1c f0       	brlt	.+6      	; 0x1b4c0 <_ZN7RH_RF954recvEPhS0_+0x50>
   1b4ba:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1b4bc:	84 50       	subi	r24, 0x04	; 4
   1b4be:	80 83       	st	Z, r24
   1b4c0:	f8 01       	movw	r30, r16
   1b4c2:	40 81       	ld	r20, Z
   1b4c4:	50 e0       	ldi	r21, 0x00	; 0
   1b4c6:	be 01       	movw	r22, r28
   1b4c8:	6d 5d       	subi	r22, 0xDD	; 221
   1b4ca:	7f 4f       	sbci	r23, 0xFF	; 255
   1b4cc:	c7 01       	movw	r24, r14
   1b4ce:	0e 94 25 ea 	call	0x1d44a	; 0x1d44a <memcpy>
   1b4d2:	cf be       	out	0x3f, r12	; 63
   1b4d4:	ce 01       	movw	r24, r28
   1b4d6:	c2 df       	rcall	.-124    	; 0x1b45c <_ZN7RH_RF9510clearRxBufEv>
   1b4d8:	8d 2d       	mov	r24, r13
   1b4da:	df 91       	pop	r29
   1b4dc:	cf 91       	pop	r28
   1b4de:	1f 91       	pop	r17
   1b4e0:	0f 91       	pop	r16
   1b4e2:	ff 90       	pop	r15
   1b4e4:	ef 90       	pop	r14
   1b4e6:	df 90       	pop	r13
   1b4e8:	cf 90       	pop	r12
   1b4ea:	08 95       	ret

0001b4ec <_ZN7RH_RF9512setFrequencyEf>:
   1b4ec:	8f 92       	push	r8
   1b4ee:	9f 92       	push	r9
   1b4f0:	af 92       	push	r10
   1b4f2:	bf 92       	push	r11
   1b4f4:	cf 92       	push	r12
   1b4f6:	df 92       	push	r13
   1b4f8:	ef 92       	push	r14
   1b4fa:	ff 92       	push	r15
   1b4fc:	1f 93       	push	r17
   1b4fe:	cf 93       	push	r28
   1b500:	df 93       	push	r29
   1b502:	ec 01       	movw	r28, r24
   1b504:	4a 01       	movw	r8, r20
   1b506:	5b 01       	movw	r10, r22
   1b508:	20 e0       	ldi	r18, 0x00	; 0
   1b50a:	34 e2       	ldi	r19, 0x24	; 36
   1b50c:	44 e7       	ldi	r20, 0x74	; 116
   1b50e:	59 e4       	ldi	r21, 0x49	; 73
   1b510:	c5 01       	movw	r24, r10
   1b512:	b4 01       	movw	r22, r8
   1b514:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
   1b518:	20 e0       	ldi	r18, 0x00	; 0
   1b51a:	34 e2       	ldi	r19, 0x24	; 36
   1b51c:	44 e7       	ldi	r20, 0x74	; 116
   1b51e:	52 e4       	ldi	r21, 0x42	; 66
   1b520:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
   1b524:	0e 94 1e ce 	call	0x19c3c	; 0x19c3c <__fixunssfsi>
   1b528:	6b 01       	movw	r12, r22
   1b52a:	7c 01       	movw	r14, r24
   1b52c:	a7 01       	movw	r20, r14
   1b52e:	66 27       	eor	r22, r22
   1b530:	77 27       	eor	r23, r23
   1b532:	66 e0       	ldi	r22, 0x06	; 6
   1b534:	ce 01       	movw	r24, r28
   1b536:	6f d7       	rcall	.+3806   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b538:	77 27       	eor	r23, r23
   1b53a:	6f 2d       	mov	r22, r15
   1b53c:	5e 2d       	mov	r21, r14
   1b53e:	4d 2d       	mov	r20, r13
   1b540:	67 e0       	ldi	r22, 0x07	; 7
   1b542:	ce 01       	movw	r24, r28
   1b544:	68 d7       	rcall	.+3792   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b546:	4c 2d       	mov	r20, r12
   1b548:	68 e0       	ldi	r22, 0x08	; 8
   1b54a:	ce 01       	movw	r24, r28
   1b54c:	64 d7       	rcall	.+3784   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b54e:	cd 5b       	subi	r28, 0xBD	; 189
   1b550:	df 4f       	sbci	r29, 0xFF	; 255
   1b552:	11 e0       	ldi	r17, 0x01	; 1
   1b554:	20 e0       	ldi	r18, 0x00	; 0
   1b556:	30 ec       	ldi	r19, 0xC0	; 192
   1b558:	42 e4       	ldi	r20, 0x42	; 66
   1b55a:	54 e4       	ldi	r21, 0x44	; 68
   1b55c:	c5 01       	movw	r24, r10
   1b55e:	b4 01       	movw	r22, r8
   1b560:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
   1b564:	87 fd       	sbrc	r24, 7
   1b566:	10 e0       	ldi	r17, 0x00	; 0
   1b568:	18 83       	st	Y, r17
   1b56a:	81 e0       	ldi	r24, 0x01	; 1
   1b56c:	df 91       	pop	r29
   1b56e:	cf 91       	pop	r28
   1b570:	1f 91       	pop	r17
   1b572:	ff 90       	pop	r15
   1b574:	ef 90       	pop	r14
   1b576:	df 90       	pop	r13
   1b578:	cf 90       	pop	r12
   1b57a:	bf 90       	pop	r11
   1b57c:	af 90       	pop	r10
   1b57e:	9f 90       	pop	r9
   1b580:	8f 90       	pop	r8
   1b582:	08 95       	ret

0001b584 <_ZN7RH_RF9511setModeIdleEv>:
   1b584:	cf 93       	push	r28
   1b586:	df 93       	push	r29
   1b588:	fc 01       	movw	r30, r24
   1b58a:	22 81       	ldd	r18, Z+2	; 0x02
   1b58c:	22 30       	cpi	r18, 0x02	; 2
   1b58e:	89 f0       	breq	.+34     	; 0x1b5b2 <_ZN7RH_RF9511setModeIdleEv+0x2e>
   1b590:	ec 01       	movw	r28, r24
   1b592:	01 90       	ld	r0, Z+
   1b594:	f0 81       	ld	r31, Z
   1b596:	e0 2d       	mov	r30, r0
   1b598:	e0 5c       	subi	r30, 0xC0	; 192
   1b59a:	ff 4f       	sbci	r31, 0xFF	; 255
   1b59c:	01 90       	ld	r0, Z+
   1b59e:	f0 81       	ld	r31, Z
   1b5a0:	e0 2d       	mov	r30, r0
   1b5a2:	62 e0       	ldi	r22, 0x02	; 2
   1b5a4:	19 95       	eicall
   1b5a6:	41 e0       	ldi	r20, 0x01	; 1
   1b5a8:	61 e0       	ldi	r22, 0x01	; 1
   1b5aa:	ce 01       	movw	r24, r28
   1b5ac:	34 d7       	rcall	.+3688   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b5ae:	82 e0       	ldi	r24, 0x02	; 2
   1b5b0:	8a 83       	std	Y+2, r24	; 0x02
   1b5b2:	df 91       	pop	r29
   1b5b4:	cf 91       	pop	r28
   1b5b6:	08 95       	ret

0001b5b8 <_ZN7RH_RF9515handleInterruptEv>:
   1b5b8:	0f 93       	push	r16
   1b5ba:	1f 93       	push	r17
   1b5bc:	cf 93       	push	r28
   1b5be:	df 93       	push	r29
   1b5c0:	ec 01       	movw	r28, r24
   1b5c2:	62 e1       	ldi	r22, 0x12	; 18
   1b5c4:	e3 d6       	rcall	.+3526   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1b5c6:	18 2f       	mov	r17, r24
   1b5c8:	6c e1       	ldi	r22, 0x1C	; 28
   1b5ca:	ce 01       	movw	r24, r28
   1b5cc:	df d6       	rcall	.+3518   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1b5ce:	08 2f       	mov	r16, r24
   1b5d0:	4f ef       	ldi	r20, 0xFF	; 255
   1b5d2:	62 e1       	ldi	r22, 0x12	; 18
   1b5d4:	ce 01       	movw	r24, r28
   1b5d6:	1f d7       	rcall	.+3646   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b5d8:	8a 81       	ldd	r24, Y+2	; 0x02
   1b5da:	84 30       	cpi	r24, 0x04	; 4
   1b5dc:	b1 f4       	brne	.+44     	; 0x1b60a <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b5de:	81 2f       	mov	r24, r17
   1b5e0:	80 7a       	andi	r24, 0xA0	; 160
   1b5e2:	41 f4       	brne	.+16     	; 0x1b5f4 <_ZN7RH_RF9515handleInterruptEv+0x3c>
   1b5e4:	fe 01       	movw	r30, r28
   1b5e6:	eb 5b       	subi	r30, 0xBB	; 187
   1b5e8:	ff 4f       	sbci	r31, 0xFF	; 255
   1b5ea:	80 81       	ld	r24, Z
   1b5ec:	88 23       	and	r24, r24
   1b5ee:	69 f0       	breq	.+26     	; 0x1b60a <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b5f0:	06 fd       	sbrc	r16, 6
   1b5f2:	0b c0       	rjmp	.+22     	; 0x1b60a <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b5f4:	8f 85       	ldd	r24, Y+15	; 0x0f
   1b5f6:	98 89       	ldd	r25, Y+16	; 0x10
   1b5f8:	01 96       	adiw	r24, 0x01	; 1
   1b5fa:	98 8b       	std	Y+16, r25	; 0x10
   1b5fc:	8f 87       	std	Y+15, r24	; 0x0f
   1b5fe:	ce 01       	movw	r24, r28
   1b600:	df 91       	pop	r29
   1b602:	cf 91       	pop	r28
   1b604:	1f 91       	pop	r17
   1b606:	0f 91       	pop	r16
   1b608:	29 cf       	rjmp	.-430    	; 0x1b45c <_ZN7RH_RF9510clearRxBufEv>
   1b60a:	8a 81       	ldd	r24, Y+2	; 0x02
   1b60c:	84 30       	cpi	r24, 0x04	; 4
   1b60e:	11 f4       	brne	.+4      	; 0x1b614 <_ZN7RH_RF9515handleInterruptEv+0x5c>
   1b610:	16 fd       	sbrc	r17, 6
   1b612:	0c c0       	rjmp	.+24     	; 0x1b62c <_ZN7RH_RF9515handleInterruptEv+0x74>
   1b614:	8a 81       	ldd	r24, Y+2	; 0x02
   1b616:	83 30       	cpi	r24, 0x03	; 3
   1b618:	09 f0       	breq	.+2      	; 0x1b61c <_ZN7RH_RF9515handleInterruptEv+0x64>
   1b61a:	61 c0       	rjmp	.+194    	; 0x1b6de <_ZN7RH_RF9515handleInterruptEv+0x126>
   1b61c:	13 ff       	sbrs	r17, 3
   1b61e:	5f c0       	rjmp	.+190    	; 0x1b6de <_ZN7RH_RF9515handleInterruptEv+0x126>
   1b620:	8b 89       	ldd	r24, Y+19	; 0x13
   1b622:	9c 89       	ldd	r25, Y+20	; 0x14
   1b624:	01 96       	adiw	r24, 0x01	; 1
   1b626:	9c 8b       	std	Y+20, r25	; 0x14
   1b628:	8b 8b       	std	Y+19, r24	; 0x13
   1b62a:	60 c0       	rjmp	.+192    	; 0x1b6ec <_ZN7RH_RF9515handleInterruptEv+0x134>
   1b62c:	63 e1       	ldi	r22, 0x13	; 19
   1b62e:	ce 01       	movw	r24, r28
   1b630:	ad d6       	rcall	.+3418   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1b632:	18 2f       	mov	r17, r24
   1b634:	60 e1       	ldi	r22, 0x10	; 16
   1b636:	ce 01       	movw	r24, r28
   1b638:	a9 d6       	rcall	.+3410   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1b63a:	48 2f       	mov	r20, r24
   1b63c:	6d e0       	ldi	r22, 0x0D	; 13
   1b63e:	ce 01       	movw	r24, r28
   1b640:	ea d6       	rcall	.+3540   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b642:	21 2f       	mov	r18, r17
   1b644:	ae 01       	movw	r20, r28
   1b646:	41 5e       	subi	r20, 0xE1	; 225
   1b648:	5f 4f       	sbci	r21, 0xFF	; 255
   1b64a:	60 e0       	ldi	r22, 0x00	; 0
   1b64c:	ce 01       	movw	r24, r28
   1b64e:	2b d7       	rcall	.+3670   	; 0x1c4a6 <_ZN11RHSPIDriver12spiBurstReadEhPhh>
   1b650:	1e 8f       	std	Y+30, r17	; 0x1e
   1b652:	69 e1       	ldi	r22, 0x19	; 25
   1b654:	ce 01       	movw	r24, r28
   1b656:	9a d6       	rcall	.+3380   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1b658:	8e 01       	movw	r16, r28
   1b65a:	0c 5b       	subi	r16, 0xBC	; 188
   1b65c:	1f 4f       	sbci	r17, 0xFF	; 255
   1b65e:	87 fd       	sbrc	r24, 7
   1b660:	8d 5f       	subi	r24, 0xFD	; 253
   1b662:	85 95       	asr	r24
   1b664:	85 95       	asr	r24
   1b666:	f8 01       	movw	r30, r16
   1b668:	80 83       	st	Z, r24
   1b66a:	6a e1       	ldi	r22, 0x1A	; 26
   1b66c:	ce 01       	movw	r24, r28
   1b66e:	8e d6       	rcall	.+3356   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1b670:	90 e0       	ldi	r25, 0x00	; 0
   1b672:	9e 87       	std	Y+14, r25	; 0x0e
   1b674:	8d 87       	std	Y+13, r24	; 0x0d
   1b676:	f8 01       	movw	r30, r16
   1b678:	20 81       	ld	r18, Z
   1b67a:	27 ff       	sbrs	r18, 7
   1b67c:	09 c0       	rjmp	.+18     	; 0x1b690 <_ZN7RH_RF9515handleInterruptEv+0xd8>
   1b67e:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b680:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b682:	82 0f       	add	r24, r18
   1b684:	91 1d       	adc	r25, r1
   1b686:	27 fd       	sbrc	r18, 7
   1b688:	9a 95       	dec	r25
   1b68a:	9e 87       	std	Y+14, r25	; 0x0e
   1b68c:	8d 87       	std	Y+13, r24	; 0x0d
   1b68e:	0d c0       	rjmp	.+26     	; 0x1b6aa <_ZN7RH_RF9515handleInterruptEv+0xf2>
   1b690:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b692:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b694:	24 e0       	ldi	r18, 0x04	; 4
   1b696:	88 0f       	add	r24, r24
   1b698:	99 1f       	adc	r25, r25
   1b69a:	2a 95       	dec	r18
   1b69c:	e1 f7       	brne	.-8      	; 0x1b696 <_ZN7RH_RF9515handleInterruptEv+0xde>
   1b69e:	6f e0       	ldi	r22, 0x0F	; 15
   1b6a0:	70 e0       	ldi	r23, 0x00	; 0
   1b6a2:	0e 94 cb e7 	call	0x1cf96	; 0x1cf96 <__divmodhi4>
   1b6a6:	7e 87       	std	Y+14, r23	; 0x0e
   1b6a8:	6d 87       	std	Y+13, r22	; 0x0d
   1b6aa:	fe 01       	movw	r30, r28
   1b6ac:	ed 5b       	subi	r30, 0xBD	; 189
   1b6ae:	ff 4f       	sbci	r31, 0xFF	; 255
   1b6b0:	80 81       	ld	r24, Z
   1b6b2:	88 23       	and	r24, r24
   1b6b4:	29 f0       	breq	.+10     	; 0x1b6c0 <_ZN7RH_RF9515handleInterruptEv+0x108>
   1b6b6:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b6b8:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b6ba:	8d 59       	subi	r24, 0x9D	; 157
   1b6bc:	91 09       	sbc	r25, r1
   1b6be:	04 c0       	rjmp	.+8      	; 0x1b6c8 <_ZN7RH_RF9515handleInterruptEv+0x110>
   1b6c0:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b6c2:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b6c4:	84 5a       	subi	r24, 0xA4	; 164
   1b6c6:	91 09       	sbc	r25, r1
   1b6c8:	9e 87       	std	Y+14, r25	; 0x0e
   1b6ca:	8d 87       	std	Y+13, r24	; 0x0d
   1b6cc:	ce 01       	movw	r24, r28
   1b6ce:	a6 de       	rcall	.-692    	; 0x1b41c <_ZN7RH_RF9513validateRxBufEv>
   1b6d0:	fe 01       	movw	r30, r28
   1b6d2:	ee 5b       	subi	r30, 0xBE	; 190
   1b6d4:	ff 4f       	sbci	r31, 0xFF	; 255
   1b6d6:	80 81       	ld	r24, Z
   1b6d8:	88 23       	and	r24, r24
   1b6da:	71 f0       	breq	.+28     	; 0x1b6f8 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b6dc:	07 c0       	rjmp	.+14     	; 0x1b6ec <_ZN7RH_RF9515handleInterruptEv+0x134>
   1b6de:	8a 81       	ldd	r24, Y+2	; 0x02
   1b6e0:	85 30       	cpi	r24, 0x05	; 5
   1b6e2:	51 f4       	brne	.+20     	; 0x1b6f8 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b6e4:	12 ff       	sbrs	r17, 2
   1b6e6:	08 c0       	rjmp	.+16     	; 0x1b6f8 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b6e8:	11 70       	andi	r17, 0x01	; 1
   1b6ea:	1d 8b       	std	Y+21, r17	; 0x15
   1b6ec:	ce 01       	movw	r24, r28
   1b6ee:	df 91       	pop	r29
   1b6f0:	cf 91       	pop	r28
   1b6f2:	1f 91       	pop	r17
   1b6f4:	0f 91       	pop	r16
   1b6f6:	46 cf       	rjmp	.-372    	; 0x1b584 <_ZN7RH_RF9511setModeIdleEv>
   1b6f8:	df 91       	pop	r29
   1b6fa:	cf 91       	pop	r28
   1b6fc:	1f 91       	pop	r17
   1b6fe:	0f 91       	pop	r16
   1b700:	08 95       	ret

0001b702 <_ZN7RH_RF954isr0Ev>:
   1b702:	80 91 dd 17 	lds	r24, 0x17DD	; 0x8017dd <_ZN7RH_RF9519_deviceForInterruptE>
   1b706:	90 91 de 17 	lds	r25, 0x17DE	; 0x8017de <_ZN7RH_RF9519_deviceForInterruptE+0x1>
   1b70a:	00 97       	sbiw	r24, 0x00	; 0
   1b70c:	09 f0       	breq	.+2      	; 0x1b710 <_ZN7RH_RF954isr0Ev+0xe>
   1b70e:	54 cf       	rjmp	.-344    	; 0x1b5b8 <_ZN7RH_RF9515handleInterruptEv>
   1b710:	08 95       	ret

0001b712 <_ZN7RH_RF954isr1Ev>:
   1b712:	80 91 df 17 	lds	r24, 0x17DF	; 0x8017df <_ZN7RH_RF9519_deviceForInterruptE+0x2>
   1b716:	90 91 e0 17 	lds	r25, 0x17E0	; 0x8017e0 <_ZN7RH_RF9519_deviceForInterruptE+0x3>
   1b71a:	00 97       	sbiw	r24, 0x00	; 0
   1b71c:	09 f0       	breq	.+2      	; 0x1b720 <_ZN7RH_RF954isr1Ev+0xe>
   1b71e:	4c cf       	rjmp	.-360    	; 0x1b5b8 <_ZN7RH_RF9515handleInterruptEv>
   1b720:	08 95       	ret

0001b722 <_ZN7RH_RF954isr2Ev>:
   1b722:	80 91 e1 17 	lds	r24, 0x17E1	; 0x8017e1 <_ZN7RH_RF9519_deviceForInterruptE+0x4>
   1b726:	90 91 e2 17 	lds	r25, 0x17E2	; 0x8017e2 <_ZN7RH_RF9519_deviceForInterruptE+0x5>
   1b72a:	00 97       	sbiw	r24, 0x00	; 0
   1b72c:	09 f0       	breq	.+2      	; 0x1b730 <_ZN7RH_RF954isr2Ev+0xe>
   1b72e:	44 cf       	rjmp	.-376    	; 0x1b5b8 <_ZN7RH_RF9515handleInterruptEv>
   1b730:	08 95       	ret

0001b732 <_ZN7RH_RF959setModeRxEv>:
   1b732:	cf 93       	push	r28
   1b734:	df 93       	push	r29
   1b736:	fc 01       	movw	r30, r24
   1b738:	22 81       	ldd	r18, Z+2	; 0x02
   1b73a:	24 30       	cpi	r18, 0x04	; 4
   1b73c:	a9 f0       	breq	.+42     	; 0x1b768 <_ZN7RH_RF959setModeRxEv+0x36>
   1b73e:	ec 01       	movw	r28, r24
   1b740:	01 90       	ld	r0, Z+
   1b742:	f0 81       	ld	r31, Z
   1b744:	e0 2d       	mov	r30, r0
   1b746:	e0 5c       	subi	r30, 0xC0	; 192
   1b748:	ff 4f       	sbci	r31, 0xFF	; 255
   1b74a:	01 90       	ld	r0, Z+
   1b74c:	f0 81       	ld	r31, Z
   1b74e:	e0 2d       	mov	r30, r0
   1b750:	64 e0       	ldi	r22, 0x04	; 4
   1b752:	19 95       	eicall
   1b754:	45 e0       	ldi	r20, 0x05	; 5
   1b756:	61 e0       	ldi	r22, 0x01	; 1
   1b758:	ce 01       	movw	r24, r28
   1b75a:	5d d6       	rcall	.+3258   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b75c:	40 e0       	ldi	r20, 0x00	; 0
   1b75e:	60 e4       	ldi	r22, 0x40	; 64
   1b760:	ce 01       	movw	r24, r28
   1b762:	59 d6       	rcall	.+3250   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b764:	84 e0       	ldi	r24, 0x04	; 4
   1b766:	8a 83       	std	Y+2, r24	; 0x02
   1b768:	df 91       	pop	r29
   1b76a:	cf 91       	pop	r28
   1b76c:	08 95       	ret

0001b76e <_ZN7RH_RF959availableEv>:
   1b76e:	cf 93       	push	r28
   1b770:	df 93       	push	r29
   1b772:	fc 01       	movw	r30, r24
   1b774:	22 81       	ldd	r18, Z+2	; 0x02
   1b776:	23 30       	cpi	r18, 0x03	; 3
   1b778:	31 f0       	breq	.+12     	; 0x1b786 <_ZN7RH_RF959availableEv+0x18>
   1b77a:	ec 01       	movw	r28, r24
   1b77c:	da df       	rcall	.-76     	; 0x1b732 <_ZN7RH_RF959setModeRxEv>
   1b77e:	ce 5b       	subi	r28, 0xBE	; 190
   1b780:	df 4f       	sbci	r29, 0xFF	; 255
   1b782:	88 81       	ld	r24, Y
   1b784:	01 c0       	rjmp	.+2      	; 0x1b788 <_ZN7RH_RF959availableEv+0x1a>
   1b786:	80 e0       	ldi	r24, 0x00	; 0
   1b788:	df 91       	pop	r29
   1b78a:	cf 91       	pop	r28
   1b78c:	08 95       	ret

0001b78e <_ZN7RH_RF959setModeTxEv>:
   1b78e:	cf 93       	push	r28
   1b790:	df 93       	push	r29
   1b792:	fc 01       	movw	r30, r24
   1b794:	22 81       	ldd	r18, Z+2	; 0x02
   1b796:	23 30       	cpi	r18, 0x03	; 3
   1b798:	a9 f0       	breq	.+42     	; 0x1b7c4 <_ZN7RH_RF959setModeTxEv+0x36>
   1b79a:	ec 01       	movw	r28, r24
   1b79c:	01 90       	ld	r0, Z+
   1b79e:	f0 81       	ld	r31, Z
   1b7a0:	e0 2d       	mov	r30, r0
   1b7a2:	e0 5c       	subi	r30, 0xC0	; 192
   1b7a4:	ff 4f       	sbci	r31, 0xFF	; 255
   1b7a6:	01 90       	ld	r0, Z+
   1b7a8:	f0 81       	ld	r31, Z
   1b7aa:	e0 2d       	mov	r30, r0
   1b7ac:	63 e0       	ldi	r22, 0x03	; 3
   1b7ae:	19 95       	eicall
   1b7b0:	43 e0       	ldi	r20, 0x03	; 3
   1b7b2:	61 e0       	ldi	r22, 0x01	; 1
   1b7b4:	ce 01       	movw	r24, r28
   1b7b6:	2f d6       	rcall	.+3166   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b7b8:	40 e4       	ldi	r20, 0x40	; 64
   1b7ba:	60 e4       	ldi	r22, 0x40	; 64
   1b7bc:	ce 01       	movw	r24, r28
   1b7be:	2b d6       	rcall	.+3158   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b7c0:	83 e0       	ldi	r24, 0x03	; 3
   1b7c2:	8a 83       	std	Y+2, r24	; 0x02
   1b7c4:	df 91       	pop	r29
   1b7c6:	cf 91       	pop	r28
   1b7c8:	08 95       	ret

0001b7ca <_ZN7RH_RF954sendEPKhh>:
   1b7ca:	ef 92       	push	r14
   1b7cc:	ff 92       	push	r15
   1b7ce:	0f 93       	push	r16
   1b7d0:	1f 93       	push	r17
   1b7d2:	cf 93       	push	r28
   1b7d4:	df 93       	push	r29
   1b7d6:	40 32       	cpi	r20, 0x20	; 32
   1b7d8:	10 f0       	brcs	.+4      	; 0x1b7de <_ZN7RH_RF954sendEPKhh+0x14>
   1b7da:	00 e0       	ldi	r16, 0x00	; 0
   1b7dc:	35 c0       	rjmp	.+106    	; 0x1b848 <_ZN7RH_RF954sendEPKhh+0x7e>
   1b7de:	14 2f       	mov	r17, r20
   1b7e0:	7b 01       	movw	r14, r22
   1b7e2:	ec 01       	movw	r28, r24
   1b7e4:	e8 81       	ld	r30, Y
   1b7e6:	f9 81       	ldd	r31, Y+1	; 0x01
   1b7e8:	00 88       	ldd	r0, Z+16	; 0x10
   1b7ea:	f1 89       	ldd	r31, Z+17	; 0x11
   1b7ec:	e0 2d       	mov	r30, r0
   1b7ee:	19 95       	eicall
   1b7f0:	ce 01       	movw	r24, r28
   1b7f2:	c8 de       	rcall	.-624    	; 0x1b584 <_ZN7RH_RF9511setModeIdleEv>
   1b7f4:	e8 81       	ld	r30, Y
   1b7f6:	f9 81       	ldd	r31, Y+1	; 0x01
   1b7f8:	06 88       	ldd	r0, Z+22	; 0x16
   1b7fa:	f7 89       	ldd	r31, Z+23	; 0x17
   1b7fc:	e0 2d       	mov	r30, r0
   1b7fe:	ce 01       	movw	r24, r28
   1b800:	19 95       	eicall
   1b802:	08 2f       	mov	r16, r24
   1b804:	88 23       	and	r24, r24
   1b806:	49 f3       	breq	.-46     	; 0x1b7da <_ZN7RH_RF954sendEPKhh+0x10>
   1b808:	40 e0       	ldi	r20, 0x00	; 0
   1b80a:	6d e0       	ldi	r22, 0x0D	; 13
   1b80c:	ce 01       	movw	r24, r28
   1b80e:	03 d6       	rcall	.+3078   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b810:	49 85       	ldd	r20, Y+9	; 0x09
   1b812:	60 e0       	ldi	r22, 0x00	; 0
   1b814:	ce 01       	movw	r24, r28
   1b816:	ff d5       	rcall	.+3070   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b818:	4a 85       	ldd	r20, Y+10	; 0x0a
   1b81a:	60 e0       	ldi	r22, 0x00	; 0
   1b81c:	ce 01       	movw	r24, r28
   1b81e:	fb d5       	rcall	.+3062   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b820:	4b 85       	ldd	r20, Y+11	; 0x0b
   1b822:	60 e0       	ldi	r22, 0x00	; 0
   1b824:	ce 01       	movw	r24, r28
   1b826:	f7 d5       	rcall	.+3054   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b828:	4c 85       	ldd	r20, Y+12	; 0x0c
   1b82a:	60 e0       	ldi	r22, 0x00	; 0
   1b82c:	ce 01       	movw	r24, r28
   1b82e:	f3 d5       	rcall	.+3046   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b830:	21 2f       	mov	r18, r17
   1b832:	a7 01       	movw	r20, r14
   1b834:	60 e0       	ldi	r22, 0x00	; 0
   1b836:	ce 01       	movw	r24, r28
   1b838:	91 d6       	rcall	.+3362   	; 0x1c55c <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>
   1b83a:	44 e0       	ldi	r20, 0x04	; 4
   1b83c:	41 0f       	add	r20, r17
   1b83e:	62 e2       	ldi	r22, 0x22	; 34
   1b840:	ce 01       	movw	r24, r28
   1b842:	e9 d5       	rcall	.+3026   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b844:	ce 01       	movw	r24, r28
   1b846:	a3 df       	rcall	.-186    	; 0x1b78e <_ZN7RH_RF959setModeTxEv>
   1b848:	80 2f       	mov	r24, r16
   1b84a:	df 91       	pop	r29
   1b84c:	cf 91       	pop	r28
   1b84e:	1f 91       	pop	r17
   1b850:	0f 91       	pop	r16
   1b852:	ff 90       	pop	r15
   1b854:	ef 90       	pop	r14
   1b856:	08 95       	ret

0001b858 <_ZN7RH_RF9510setTxPowerEab>:
   1b858:	cf 93       	push	r28
   1b85a:	df 93       	push	r29
   1b85c:	ec 01       	movw	r28, r24
   1b85e:	4b 8f       	std	Y+27, r20	; 0x1b
   1b860:	44 23       	and	r20, r20
   1b862:	91 f0       	breq	.+36     	; 0x1b888 <_ZN7RH_RF9510setTxPowerEab+0x30>
   1b864:	60 31       	cpi	r22, 0x10	; 16
   1b866:	24 f4       	brge	.+8      	; 0x1b870 <_ZN7RH_RF9510setTxPowerEab+0x18>
   1b868:	67 ff       	sbrs	r22, 7
   1b86a:	03 c0       	rjmp	.+6      	; 0x1b872 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1b86c:	60 e0       	ldi	r22, 0x00	; 0
   1b86e:	01 c0       	rjmp	.+2      	; 0x1b872 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1b870:	6f e0       	ldi	r22, 0x0F	; 15
   1b872:	46 2f       	mov	r20, r22
   1b874:	40 67       	ori	r20, 0x70	; 112
   1b876:	69 e0       	ldi	r22, 0x09	; 9
   1b878:	ce 01       	movw	r24, r28
   1b87a:	cd d5       	rcall	.+2970   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b87c:	44 e0       	ldi	r20, 0x04	; 4
   1b87e:	6d e4       	ldi	r22, 0x4D	; 77
   1b880:	ce 01       	movw	r24, r28
   1b882:	df 91       	pop	r29
   1b884:	cf 91       	pop	r28
   1b886:	c7 c5       	rjmp	.+2958   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b888:	df 91       	pop	r29
   1b88a:	cf 91       	pop	r28
   1b88c:	6b cd       	rjmp	.-1322   	; 0x1b364 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>

0001b88e <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>:
   1b88e:	0f 93       	push	r16
   1b890:	1f 93       	push	r17
   1b892:	cf 93       	push	r28
   1b894:	df 93       	push	r29
   1b896:	ec 01       	movw	r28, r24
   1b898:	8b 01       	movw	r16, r22
   1b89a:	fb 01       	movw	r30, r22
   1b89c:	40 81       	ld	r20, Z
   1b89e:	6d e1       	ldi	r22, 0x1D	; 29
   1b8a0:	ba d5       	rcall	.+2932   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b8a2:	f8 01       	movw	r30, r16
   1b8a4:	41 81       	ldd	r20, Z+1	; 0x01
   1b8a6:	6e e1       	ldi	r22, 0x1E	; 30
   1b8a8:	ce 01       	movw	r24, r28
   1b8aa:	b5 d5       	rcall	.+2922   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b8ac:	f8 01       	movw	r30, r16
   1b8ae:	42 81       	ldd	r20, Z+2	; 0x02
   1b8b0:	66 e2       	ldi	r22, 0x26	; 38
   1b8b2:	ce 01       	movw	r24, r28
   1b8b4:	df 91       	pop	r29
   1b8b6:	cf 91       	pop	r28
   1b8b8:	1f 91       	pop	r17
   1b8ba:	0f 91       	pop	r16
   1b8bc:	ac c5       	rjmp	.+2904   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>

0001b8be <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>:
   1b8be:	0f 93       	push	r16
   1b8c0:	1f 93       	push	r17
   1b8c2:	cf 93       	push	r28
   1b8c4:	df 93       	push	r29
   1b8c6:	00 d0       	rcall	.+0      	; 0x1b8c8 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0xa>
   1b8c8:	cd b7       	in	r28, 0x3d	; 61
   1b8ca:	de b7       	in	r29, 0x3e	; 62
   1b8cc:	70 e0       	ldi	r23, 0x00	; 0
   1b8ce:	66 30       	cpi	r22, 0x06	; 6
   1b8d0:	71 05       	cpc	r23, r1
   1b8d2:	ac f4       	brge	.+42     	; 0x1b8fe <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x40>
   1b8d4:	8c 01       	movw	r16, r24
   1b8d6:	cb 01       	movw	r24, r22
   1b8d8:	88 0f       	add	r24, r24
   1b8da:	99 1f       	adc	r25, r25
   1b8dc:	68 0f       	add	r22, r24
   1b8de:	79 1f       	adc	r23, r25
   1b8e0:	67 51       	subi	r22, 0x17	; 23
   1b8e2:	79 4b       	sbci	r23, 0xB9	; 185
   1b8e4:	43 e0       	ldi	r20, 0x03	; 3
   1b8e6:	50 e0       	ldi	r21, 0x00	; 0
   1b8e8:	ce 01       	movw	r24, r28
   1b8ea:	01 96       	adiw	r24, 0x01	; 1
   1b8ec:	0e 94 0a ea 	call	0x1d414	; 0x1d414 <memcpy_P>
   1b8f0:	be 01       	movw	r22, r28
   1b8f2:	6f 5f       	subi	r22, 0xFF	; 255
   1b8f4:	7f 4f       	sbci	r23, 0xFF	; 255
   1b8f6:	c8 01       	movw	r24, r16
   1b8f8:	ca df       	rcall	.-108    	; 0x1b88e <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>
   1b8fa:	81 e0       	ldi	r24, 0x01	; 1
   1b8fc:	01 c0       	rjmp	.+2      	; 0x1b900 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x42>
   1b8fe:	80 e0       	ldi	r24, 0x00	; 0
   1b900:	0f 90       	pop	r0
   1b902:	0f 90       	pop	r0
   1b904:	0f 90       	pop	r0
   1b906:	df 91       	pop	r29
   1b908:	cf 91       	pop	r28
   1b90a:	1f 91       	pop	r17
   1b90c:	0f 91       	pop	r16
   1b90e:	08 95       	ret

0001b910 <_ZN7RH_RF9517setPreambleLengthEj>:
   1b910:	1f 93       	push	r17
   1b912:	cf 93       	push	r28
   1b914:	df 93       	push	r29
   1b916:	ec 01       	movw	r28, r24
   1b918:	16 2f       	mov	r17, r22
   1b91a:	47 2f       	mov	r20, r23
   1b91c:	60 e2       	ldi	r22, 0x20	; 32
   1b91e:	7b d5       	rcall	.+2806   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b920:	41 2f       	mov	r20, r17
   1b922:	61 e2       	ldi	r22, 0x21	; 33
   1b924:	ce 01       	movw	r24, r28
   1b926:	df 91       	pop	r29
   1b928:	cf 91       	pop	r28
   1b92a:	1f 91       	pop	r17
   1b92c:	74 c5       	rjmp	.+2792   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>

0001b92e <_ZN7RH_RF954initEv>:
   1b92e:	ff 92       	push	r15
   1b930:	0f 93       	push	r16
   1b932:	1f 93       	push	r17
   1b934:	cf 93       	push	r28
   1b936:	df 93       	push	r29
   1b938:	ec 01       	movw	r28, r24
   1b93a:	e4 d4       	rcall	.+2504   	; 0x1c304 <_ZN11RHSPIDriver4initEv>
   1b93c:	f8 2e       	mov	r15, r24
   1b93e:	81 11       	cpse	r24, r1
   1b940:	02 c0       	rjmp	.+4      	; 0x1b946 <_ZN7RH_RF954initEv+0x18>
   1b942:	f1 2c       	mov	r15, r1
   1b944:	79 c0       	rjmp	.+242    	; 0x1ba38 <_ZN7RH_RF954initEv+0x10a>
   1b946:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1b948:	8f 3f       	cpi	r24, 0xFF	; 255
   1b94a:	79 f0       	breq	.+30     	; 0x1b96a <_ZN7RH_RF954initEv+0x3c>
   1b94c:	82 30       	cpi	r24, 0x02	; 2
   1b94e:	09 f4       	brne	.+2      	; 0x1b952 <_ZN7RH_RF954initEv+0x24>
   1b950:	6a c0       	rjmp	.+212    	; 0x1ba26 <_ZN7RH_RF954initEv+0xf8>
   1b952:	83 30       	cpi	r24, 0x03	; 3
   1b954:	09 f4       	brne	.+2      	; 0x1b958 <_ZN7RH_RF954initEv+0x2a>
   1b956:	6a c0       	rjmp	.+212    	; 0x1ba2c <_ZN7RH_RF954initEv+0xfe>
   1b958:	9e ee       	ldi	r25, 0xEE	; 238
   1b95a:	98 0f       	add	r25, r24
   1b95c:	94 30       	cpi	r25, 0x04	; 4
   1b95e:	88 f7       	brcc	.-30     	; 0x1b942 <_ZN7RH_RF954initEv+0x14>
   1b960:	07 e1       	ldi	r16, 0x17	; 23
   1b962:	10 e0       	ldi	r17, 0x00	; 0
   1b964:	08 1b       	sub	r16, r24
   1b966:	11 09       	sbc	r17, r1
   1b968:	63 c0       	rjmp	.+198    	; 0x1ba30 <_ZN7RH_RF954initEv+0x102>
   1b96a:	0f ef       	ldi	r16, 0xFF	; 255
   1b96c:	1f ef       	ldi	r17, 0xFF	; 255
   1b96e:	40 e8       	ldi	r20, 0x80	; 128
   1b970:	61 e0       	ldi	r22, 0x01	; 1
   1b972:	ce 01       	movw	r24, r28
   1b974:	50 d5       	rcall	.+2720   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b976:	6a e0       	ldi	r22, 0x0A	; 10
   1b978:	70 e0       	ldi	r23, 0x00	; 0
   1b97a:	80 e0       	ldi	r24, 0x00	; 0
   1b97c:	90 e0       	ldi	r25, 0x00	; 0
   1b97e:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   1b982:	61 e0       	ldi	r22, 0x01	; 1
   1b984:	ce 01       	movw	r24, r28
   1b986:	02 d5       	rcall	.+2564   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1b988:	80 38       	cpi	r24, 0x80	; 128
   1b98a:	d9 f6       	brne	.-74     	; 0x1b942 <_ZN7RH_RF954initEv+0x14>
   1b98c:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1b98e:	8f 3f       	cpi	r24, 0xFF	; 255
   1b990:	71 f1       	breq	.+92     	; 0x1b9ee <_ZN7RH_RF954initEv+0xc0>
   1b992:	60 e0       	ldi	r22, 0x00	; 0
   1b994:	40 d8       	rcall	.-3968   	; 0x1aa16 <pinMode>
   1b996:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1b998:	8f 3f       	cpi	r24, 0xFF	; 255
   1b99a:	49 f4       	brne	.+18     	; 0x1b9ae <_ZN7RH_RF954initEv+0x80>
   1b99c:	80 91 dc 17 	lds	r24, 0x17DC	; 0x8017dc <_ZN7RH_RF9515_interruptCountE>
   1b9a0:	84 30       	cpi	r24, 0x04	; 4
   1b9a2:	78 f6       	brcc	.-98     	; 0x1b942 <_ZN7RH_RF954initEv+0x14>
   1b9a4:	91 e0       	ldi	r25, 0x01	; 1
   1b9a6:	98 0f       	add	r25, r24
   1b9a8:	90 93 dc 17 	sts	0x17DC, r25	; 0x8017dc <_ZN7RH_RF9515_interruptCountE>
   1b9ac:	8d 8f       	std	Y+29, r24	; 0x1d
   1b9ae:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1b9b0:	e8 2f       	mov	r30, r24
   1b9b2:	f0 e0       	ldi	r31, 0x00	; 0
   1b9b4:	ee 0f       	add	r30, r30
   1b9b6:	ff 1f       	adc	r31, r31
   1b9b8:	e3 52       	subi	r30, 0x23	; 35
   1b9ba:	f8 4e       	sbci	r31, 0xE8	; 232
   1b9bc:	d1 83       	std	Z+1, r29	; 0x01
   1b9be:	c0 83       	st	Z, r28
   1b9c0:	81 11       	cpse	r24, r1
   1b9c2:	05 c0       	rjmp	.+10     	; 0x1b9ce <_ZN7RH_RF954initEv+0xa0>
   1b9c4:	43 e0       	ldi	r20, 0x03	; 3
   1b9c6:	50 e0       	ldi	r21, 0x00	; 0
   1b9c8:	61 e8       	ldi	r22, 0x81	; 129
   1b9ca:	7b ed       	ldi	r23, 0xDB	; 219
   1b9cc:	0e c0       	rjmp	.+28     	; 0x1b9ea <_ZN7RH_RF954initEv+0xbc>
   1b9ce:	81 30       	cpi	r24, 0x01	; 1
   1b9d0:	29 f4       	brne	.+10     	; 0x1b9dc <_ZN7RH_RF954initEv+0xae>
   1b9d2:	43 e0       	ldi	r20, 0x03	; 3
   1b9d4:	50 e0       	ldi	r21, 0x00	; 0
   1b9d6:	69 e8       	ldi	r22, 0x89	; 137
   1b9d8:	7b ed       	ldi	r23, 0xDB	; 219
   1b9da:	07 c0       	rjmp	.+14     	; 0x1b9ea <_ZN7RH_RF954initEv+0xbc>
   1b9dc:	82 30       	cpi	r24, 0x02	; 2
   1b9de:	09 f0       	breq	.+2      	; 0x1b9e2 <_ZN7RH_RF954initEv+0xb4>
   1b9e0:	b0 cf       	rjmp	.-160    	; 0x1b942 <_ZN7RH_RF954initEv+0x14>
   1b9e2:	43 e0       	ldi	r20, 0x03	; 3
   1b9e4:	50 e0       	ldi	r21, 0x00	; 0
   1b9e6:	61 e9       	ldi	r22, 0x91	; 145
   1b9e8:	7b ed       	ldi	r23, 0xDB	; 219
   1b9ea:	80 2f       	mov	r24, r16
   1b9ec:	49 d2       	rcall	.+1170   	; 0x1be80 <attachInterrupt>
   1b9ee:	40 e0       	ldi	r20, 0x00	; 0
   1b9f0:	6e e0       	ldi	r22, 0x0E	; 14
   1b9f2:	ce 01       	movw	r24, r28
   1b9f4:	10 d5       	rcall	.+2592   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b9f6:	40 e0       	ldi	r20, 0x00	; 0
   1b9f8:	6f e0       	ldi	r22, 0x0F	; 15
   1b9fa:	ce 01       	movw	r24, r28
   1b9fc:	0c d5       	rcall	.+2584   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   1b9fe:	ce 01       	movw	r24, r28
   1ba00:	c1 dd       	rcall	.-1150   	; 0x1b584 <_ZN7RH_RF9511setModeIdleEv>
   1ba02:	60 e0       	ldi	r22, 0x00	; 0
   1ba04:	ce 01       	movw	r24, r28
   1ba06:	5b df       	rcall	.-330    	; 0x1b8be <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
   1ba08:	68 e0       	ldi	r22, 0x08	; 8
   1ba0a:	70 e0       	ldi	r23, 0x00	; 0
   1ba0c:	ce 01       	movw	r24, r28
   1ba0e:	80 df       	rcall	.-256    	; 0x1b910 <_ZN7RH_RF9517setPreambleLengthEj>
   1ba10:	40 e0       	ldi	r20, 0x00	; 0
   1ba12:	50 e0       	ldi	r21, 0x00	; 0
   1ba14:	69 ed       	ldi	r22, 0xD9	; 217
   1ba16:	73 e4       	ldi	r23, 0x43	; 67
   1ba18:	ce 01       	movw	r24, r28
   1ba1a:	68 dd       	rcall	.-1328   	; 0x1b4ec <_ZN7RH_RF9512setFrequencyEf>
   1ba1c:	1b 8e       	std	Y+27, r1	; 0x1b
   1ba1e:	6d e0       	ldi	r22, 0x0D	; 13
   1ba20:	ce 01       	movw	r24, r28
   1ba22:	a0 dc       	rcall	.-1728   	; 0x1b364 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>
   1ba24:	09 c0       	rjmp	.+18     	; 0x1ba38 <_ZN7RH_RF954initEv+0x10a>
   1ba26:	00 e0       	ldi	r16, 0x00	; 0
   1ba28:	10 e0       	ldi	r17, 0x00	; 0
   1ba2a:	02 c0       	rjmp	.+4      	; 0x1ba30 <_ZN7RH_RF954initEv+0x102>
   1ba2c:	01 e0       	ldi	r16, 0x01	; 1
   1ba2e:	10 e0       	ldi	r17, 0x00	; 0
   1ba30:	60 2f       	mov	r22, r16
   1ba32:	ce 01       	movw	r24, r28
   1ba34:	ed d5       	rcall	.+3034   	; 0x1c610 <_ZN11RHSPIDriver17spiUsingInterruptEh>
   1ba36:	9b cf       	rjmp	.-202    	; 0x1b96e <_ZN7RH_RF954initEv+0x40>
   1ba38:	8f 2d       	mov	r24, r15
   1ba3a:	df 91       	pop	r29
   1ba3c:	cf 91       	pop	r28
   1ba3e:	1f 91       	pop	r17
   1ba40:	0f 91       	pop	r16
   1ba42:	ff 90       	pop	r15
   1ba44:	08 95       	ret

0001ba46 <_ZN7RH_RF9514setLowDatarateEv>:
}
 
void RH_RF95::setLowDatarate()
{
   1ba46:	8f 92       	push	r8
   1ba48:	9f 92       	push	r9
   1ba4a:	af 92       	push	r10
   1ba4c:	bf 92       	push	r11
   1ba4e:	ef 92       	push	r14
   1ba50:	ff 92       	push	r15
   1ba52:	1f 93       	push	r17
   1ba54:	cf 93       	push	r28
   1ba56:	df 93       	push	r29
   1ba58:	cd b7       	in	r28, 0x3d	; 61
   1ba5a:	de b7       	in	r29, 0x3e	; 62
   1ba5c:	a8 97       	sbiw	r28, 0x28	; 40
   1ba5e:	0f b6       	in	r0, 0x3f	; 63
   1ba60:	f8 94       	cli
   1ba62:	de bf       	out	0x3e, r29	; 62
   1ba64:	0f be       	out	0x3f, r0	; 63
   1ba66:	cd bf       	out	0x3d, r28	; 61
   1ba68:	7c 01       	movw	r14, r24
    // "To avoid issues surrounding  drift  of  the  crystal  reference  oscillator  due  to  either  temperature  change  
    // or  motion,the  low  data  rate optimization  bit  is  used. Specifically for 125  kHz  bandwidth  and  SF  =  11  and  12,  
    // this  adds  a  small  overhead  to increase robustness to reference frequency variations over the timescale of the LoRa packet."
 
    // read current value for BW and SF
    uint8_t BW = spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) >> 4;	// bw is in bits 7..4
   1ba6a:	6d e1       	ldi	r22, 0x1D	; 29
   1ba6c:	8f d4       	rcall	.+2334   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1ba6e:	18 2f       	mov	r17, r24
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   1ba70:	6e e1       	ldi	r22, 0x1E	; 30
   1ba72:	c7 01       	movw	r24, r14
   1ba74:	8b d4       	rcall	.+2326   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   1ba76:	98 e2       	ldi	r25, 0x28	; 40
   1ba78:	e7 ec       	ldi	r30, 0xC7	; 199
   1ba7a:	f2 e0       	ldi	r31, 0x02	; 2
   1ba7c:	de 01       	movw	r26, r28
   1ba7e:	11 96       	adiw	r26, 0x01	; 1
   1ba80:	01 90       	ld	r0, Z+
   1ba82:	0d 92       	st	X+, r0
   1ba84:	9a 95       	dec	r25
   1ba86:	e1 f7       	brne	.-8      	; 0x1ba80 <_ZN7RH_RF9514setLowDatarateEv+0x3a>
   
    float bandwidth = bw_tab[BW];
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1ba88:	68 2f       	mov	r22, r24
   1ba8a:	70 e0       	ldi	r23, 0x00	; 0
   1ba8c:	84 e0       	ldi	r24, 0x04	; 4
   1ba8e:	75 95       	asr	r23
   1ba90:	67 95       	ror	r22
   1ba92:	8a 95       	dec	r24
   1ba94:	e1 f7       	brne	.-8      	; 0x1ba8e <_ZN7RH_RF9514setLowDatarateEv+0x48>
   1ba96:	70 e0       	ldi	r23, 0x00	; 0
   1ba98:	80 e0       	ldi	r24, 0x00	; 0
   1ba9a:	90 e0       	ldi	r25, 0x00	; 0
   1ba9c:	0e 94 4a ce 	call	0x19c94	; 0x19c94 <__floatunsisf>
   1baa0:	9b 01       	movw	r18, r22
   1baa2:	ac 01       	movw	r20, r24
   1baa4:	60 e0       	ldi	r22, 0x00	; 0
   1baa6:	70 e0       	ldi	r23, 0x00	; 0
   1baa8:	80 e0       	ldi	r24, 0x00	; 0
   1baaa:	90 e4       	ldi	r25, 0x40	; 64
   1baac:	0e 94 df e5 	call	0x1cbbe	; 0x1cbbe <pow>
   1bab0:	20 e0       	ldi	r18, 0x00	; 0
   1bab2:	30 e0       	ldi	r19, 0x00	; 0
   1bab4:	4a e7       	ldi	r20, 0x7A	; 122
   1bab6:	54 e4       	ldi	r21, 0x44	; 68
   1bab8:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   
    float bandwidth = bw_tab[BW];
   1babc:	e1 2f       	mov	r30, r17
   1babe:	f0 e0       	ldi	r31, 0x00	; 0
   1bac0:	24 e0       	ldi	r18, 0x04	; 4
   1bac2:	f5 95       	asr	r31
   1bac4:	e7 95       	ror	r30
   1bac6:	2a 95       	dec	r18
   1bac8:	e1 f7       	brne	.-8      	; 0x1bac2 <_ZN7RH_RF9514setLowDatarateEv+0x7c>
   1baca:	ee 0f       	add	r30, r30
   1bacc:	ff 1f       	adc	r31, r31
   1bace:	ee 0f       	add	r30, r30
   1bad0:	ff 1f       	adc	r31, r31
   1bad2:	21 e0       	ldi	r18, 0x01	; 1
   1bad4:	30 e0       	ldi	r19, 0x00	; 0
   1bad6:	2c 0f       	add	r18, r28
   1bad8:	3d 1f       	adc	r19, r29
   1bada:	e2 0f       	add	r30, r18
   1badc:	f3 1f       	adc	r31, r19
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1bade:	20 81       	ld	r18, Z
   1bae0:	31 81       	ldd	r19, Z+1	; 0x01
   1bae2:	42 81       	ldd	r20, Z+2	; 0x02
   1bae4:	53 81       	ldd	r21, Z+3	; 0x03
   1bae6:	0e 94 b6 cd 	call	0x19b6c	; 0x19b6c <__divsf3>
   1baea:	4b 01       	movw	r8, r22
   1baec:	5c 01       	movw	r10, r24
    // https://www.thethingsnetwork.org/forum/t/a-point-to-note-lora-low-data-rate-optimisation-flag/12007
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
   1baee:	66 e2       	ldi	r22, 0x26	; 38
   1baf0:	c7 01       	movw	r24, r14
   1baf2:	4c d4       	rcall	.+2200   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1baf4:	18 2f       	mov	r17, r24
   1baf6:	17 7f       	andi	r17, 0xF7	; 247
    if (symbolTime > 16.0)
   1baf8:	20 e0       	ldi	r18, 0x00	; 0
   1bafa:	30 e0       	ldi	r19, 0x00	; 0
   1bafc:	40 e8       	ldi	r20, 0x80	; 128
   1bafe:	51 e4       	ldi	r21, 0x41	; 65
   1bb00:	c5 01       	movw	r24, r10
   1bb02:	b4 01       	movw	r22, r8
   1bb04:	0e 94 fc ce 	call	0x19df8	; 0x19df8 <__gesf2>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1bb08:	41 2f       	mov	r20, r17
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
   1bb0a:	18 16       	cp	r1, r24
   1bb0c:	0c f4       	brge	.+2      	; 0x1bb10 <_ZN7RH_RF9514setLowDatarateEv+0xca>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1bb0e:	48 60       	ori	r20, 0x08	; 8
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1bb10:	66 e2       	ldi	r22, 0x26	; 38
   1bb12:	c7 01       	movw	r24, r14
   
}
   1bb14:	a8 96       	adiw	r28, 0x28	; 40
   1bb16:	0f b6       	in	r0, 0x3f	; 63
   1bb18:	f8 94       	cli
   1bb1a:	de bf       	out	0x3e, r29	; 62
   1bb1c:	0f be       	out	0x3f, r0	; 63
   1bb1e:	cd bf       	out	0x3d, r28	; 61
   1bb20:	df 91       	pop	r29
   1bb22:	cf 91       	pop	r28
   1bb24:	1f 91       	pop	r17
   1bb26:	ff 90       	pop	r15
   1bb28:	ef 90       	pop	r14
   1bb2a:	bf 90       	pop	r11
   1bb2c:	af 90       	pop	r10
   1bb2e:	9f 90       	pop	r9
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1bb30:	8f 90       	pop	r8
   1bb32:	71 c4       	rjmp	.+2274   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>

0001bb34 <_ZN7RH_RF9518setSpreadingFactorEh>:
 // a bit more intuitive
 //
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   1bb34:	0f 93       	push	r16
   1bb36:	1f 93       	push	r17
   1bb38:	cf 93       	push	r28
   1bb3a:	8c 01       	movw	r16, r24
   if (sf <= 6) 
   1bb3c:	67 30       	cpi	r22, 0x07	; 7
   1bb3e:	60 f0       	brcs	.+24     	; 0x1bb58 <_ZN7RH_RF9518setSpreadingFactorEh+0x24>
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   else if (sf == 7) 
   1bb40:	67 30       	cpi	r22, 0x07	; 7
   1bb42:	61 f0       	breq	.+24     	; 0x1bb5c <_ZN7RH_RF9518setSpreadingFactorEh+0x28>
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   else if (sf == 8) 
   1bb44:	68 30       	cpi	r22, 0x08	; 8
   1bb46:	61 f0       	breq	.+24     	; 0x1bb60 <_ZN7RH_RF9518setSpreadingFactorEh+0x2c>
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   else if (sf == 9)
   1bb48:	69 30       	cpi	r22, 0x09	; 9
   1bb4a:	61 f0       	breq	.+24     	; 0x1bb64 <_ZN7RH_RF9518setSpreadingFactorEh+0x30>
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   else if (sf == 10)
   1bb4c:	6a 30       	cpi	r22, 0x0A	; 10
   1bb4e:	61 f0       	breq	.+24     	; 0x1bb68 <_ZN7RH_RF9518setSpreadingFactorEh+0x34>
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   else if (sf == 11) 
   1bb50:	6b 30       	cpi	r22, 0x0B	; 11
   1bb52:	61 f4       	brne	.+24     	; 0x1bb6c <_ZN7RH_RF9518setSpreadingFactorEh+0x38>
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   1bb54:	c0 eb       	ldi	r28, 0xB0	; 176
   1bb56:	0b c0       	rjmp	.+22     	; 0x1bb6e <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   if (sf <= 6) 
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   1bb58:	c0 e6       	ldi	r28, 0x60	; 96
   1bb5a:	09 c0       	rjmp	.+18     	; 0x1bb6e <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 7) 
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   1bb5c:	c0 e7       	ldi	r28, 0x70	; 112
   1bb5e:	07 c0       	rjmp	.+14     	; 0x1bb6e <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 8) 
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   1bb60:	c0 e8       	ldi	r28, 0x80	; 128
   1bb62:	05 c0       	rjmp	.+10     	; 0x1bb6e <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 9)
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   1bb64:	c0 e9       	ldi	r28, 0x90	; 144
   1bb66:	03 c0       	rjmp	.+6      	; 0x1bb6e <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 10)
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   1bb68:	c0 ea       	ldi	r28, 0xA0	; 160
   1bb6a:	01 c0       	rjmp	.+2      	; 0x1bb6e <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 11) 
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   else if (sf >= 12)
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
   1bb6c:	c0 ec       	ldi	r28, 0xC0	; 192
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   1bb6e:	6e e1       	ldi	r22, 0x1E	; 30
   1bb70:	c8 01       	movw	r24, r16
   1bb72:	0c d4       	rcall	.+2072   	; 0x1c38c <_ZN11RHSPIDriver7spiReadEh>
   1bb74:	8f 70       	andi	r24, 0x0F	; 15
   1bb76:	48 2f       	mov	r20, r24
   1bb78:	4c 2b       	or	r20, r28
   1bb7a:	6e e1       	ldi	r22, 0x1E	; 30
   1bb7c:	c8 01       	movw	r24, r16
   1bb7e:	4b d4       	rcall	.+2198   	; 0x1c416 <_ZN11RHSPIDriver8spiWriteEhh>
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1bb80:	c8 01       	movw	r24, r16
 }
   1bb82:	cf 91       	pop	r28
   1bb84:	1f 91       	pop	r17
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1bb86:	0f 91       	pop	r16
   1bb88:	5e cf       	rjmp	.-324    	; 0x1ba46 <_ZN7RH_RF9514setLowDatarateEv>

0001bb8a <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
   1bb8a:	cf 93       	push	r28
  uint8_t sreg = SREG;
   1bb8c:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1bb8e:	f8 94       	cli
  if (!initialized) {
   1bb90:	80 91 e6 17 	lds	r24, 0x17E6	; 0x8017e6 <_ZN8SPIClass11initializedE>
   1bb94:	81 11       	cpse	r24, r1
   1bb96:	27 c0       	rjmp	.+78     	; 0x1bbe6 <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
   1bb98:	ea e8       	ldi	r30, 0x8A	; 138
   1bb9a:	f6 e4       	ldi	r31, 0x46	; 70
   1bb9c:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
   1bb9e:	e4 e4       	ldi	r30, 0x44	; 68
   1bba0:	f6 e4       	ldi	r31, 0x46	; 70
   1bba2:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
   1bba4:	e8 2f       	mov	r30, r24
   1bba6:	f0 e0       	ldi	r31, 0x00	; 0
   1bba8:	ee 0f       	add	r30, r30
   1bbaa:	ff 1f       	adc	r31, r31
   1bbac:	e1 53       	subi	r30, 0x31	; 49
   1bbae:	f9 4b       	sbci	r31, 0xB9	; 185
   1bbb0:	a5 91       	lpm	r26, Z+
   1bbb2:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
   1bbb4:	ec 91       	ld	r30, X
   1bbb6:	e9 23       	and	r30, r25
   1bbb8:	21 f4       	brne	.+8      	; 0x1bbc2 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
   1bbba:	61 e0       	ldi	r22, 0x01	; 1
   1bbbc:	85 e3       	ldi	r24, 0x35	; 53
   1bbbe:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
   1bbc2:	61 e0       	ldi	r22, 0x01	; 1
   1bbc4:	85 e3       	ldi	r24, 0x35	; 53
   1bbc6:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
   1bbca:	8c b5       	in	r24, 0x2c	; 44
   1bbcc:	80 61       	ori	r24, 0x10	; 16
   1bbce:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
   1bbd0:	8c b5       	in	r24, 0x2c	; 44
   1bbd2:	80 64       	ori	r24, 0x40	; 64
   1bbd4:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
   1bbd6:	61 e0       	ldi	r22, 0x01	; 1
   1bbd8:	84 e3       	ldi	r24, 0x34	; 52
   1bbda:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
    pinMode(MOSI, OUTPUT);
   1bbde:	61 e0       	ldi	r22, 0x01	; 1
   1bbe0:	83 e3       	ldi	r24, 0x33	; 51
   1bbe2:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
  }
  initialized++; // reference count
   1bbe6:	80 91 e6 17 	lds	r24, 0x17E6	; 0x8017e6 <_ZN8SPIClass11initializedE>
   1bbea:	8f 5f       	subi	r24, 0xFF	; 255
   1bbec:	80 93 e6 17 	sts	0x17E6, r24	; 0x8017e6 <_ZN8SPIClass11initializedE>
  SREG = sreg;
   1bbf0:	cf bf       	out	0x3f, r28	; 63
}
   1bbf2:	cf 91       	pop	r28
   1bbf4:	08 95       	ret

0001bbf6 <_ZN8SPIClass3endEv>:

void SPIClass::end() {
  uint8_t sreg = SREG;
   1bbf6:	9f b7       	in	r25, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1bbf8:	f8 94       	cli
  // Decrease the reference counter
  if (initialized)
   1bbfa:	80 91 e6 17 	lds	r24, 0x17E6	; 0x8017e6 <_ZN8SPIClass11initializedE>
   1bbfe:	88 23       	and	r24, r24
   1bc00:	19 f0       	breq	.+6      	; 0x1bc08 <_ZN8SPIClass3endEv+0x12>
    initialized--;
   1bc02:	81 50       	subi	r24, 0x01	; 1
   1bc04:	80 93 e6 17 	sts	0x17E6, r24	; 0x8017e6 <_ZN8SPIClass11initializedE>
  // If there are no more references disable SPI
  if (!initialized) {
   1bc08:	80 91 e6 17 	lds	r24, 0x17E6	; 0x8017e6 <_ZN8SPIClass11initializedE>
   1bc0c:	81 11       	cpse	r24, r1
   1bc0e:	05 c0       	rjmp	.+10     	; 0x1bc1a <_ZN8SPIClass3endEv+0x24>
    SPCR &= ~_BV(SPE);
   1bc10:	8c b5       	in	r24, 0x2c	; 44
   1bc12:	8f 7b       	andi	r24, 0xBF	; 191
   1bc14:	8c bd       	out	0x2c, r24	; 44
    interruptMode = 0;
   1bc16:	10 92 e5 17 	sts	0x17E5, r1	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
    #ifdef SPI_TRANSACTION_MISMATCH_LED
    inTransactionFlag = 0;
    #endif
  }
  SREG = sreg;
   1bc1a:	9f bf       	out	0x3f, r25	; 63
   1bc1c:	08 95       	ret

0001bc1e <_ZN8SPIClass14usingInterruptEh>:
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
  uint8_t sreg = SREG;
   1bc1e:	2f b7       	in	r18, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1bc20:	f8 94       	cli
  switch (interruptNumber) {
   1bc22:	90 e0       	ldi	r25, 0x00	; 0
   1bc24:	88 30       	cpi	r24, 0x08	; 8
   1bc26:	91 05       	cpc	r25, r1
   1bc28:	a8 f4       	brcc	.+42     	; 0x1bc54 <_ZN8SPIClass14usingInterruptEh+0x36>
   1bc2a:	fc 01       	movw	r30, r24
   1bc2c:	88 27       	eor	r24, r24
   1bc2e:	e7 5f       	subi	r30, 0xF7	; 247
   1bc30:	fe 4f       	sbci	r31, 0xFE	; 254
   1bc32:	8f 4f       	sbci	r24, 0xFF	; 255
   1bc34:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
  #endif
  #ifdef SPI_INT1_MASK
  case 1: mask = SPI_INT1_MASK; break;
   1bc38:	80 e2       	ldi	r24, 0x20	; 32
   1bc3a:	12 c0       	rjmp	.+36     	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT2_MASK
  case 2: mask = SPI_INT2_MASK; break;
   1bc3c:	81 e0       	ldi	r24, 0x01	; 1
   1bc3e:	10 c0       	rjmp	.+32     	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT3_MASK
  case 3: mask = SPI_INT3_MASK; break;
   1bc40:	82 e0       	ldi	r24, 0x02	; 2
   1bc42:	0e c0       	rjmp	.+28     	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT4_MASK
  case 4: mask = SPI_INT4_MASK; break;
   1bc44:	84 e0       	ldi	r24, 0x04	; 4
   1bc46:	0c c0       	rjmp	.+24     	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT5_MASK
  case 5: mask = SPI_INT5_MASK; break;
   1bc48:	88 e0       	ldi	r24, 0x08	; 8
   1bc4a:	0a c0       	rjmp	.+20     	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT6_MASK
  case 6: mask = SPI_INT6_MASK; break;
   1bc4c:	80 e4       	ldi	r24, 0x40	; 64
   1bc4e:	08 c0       	rjmp	.+16     	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
   1bc50:	80 e8       	ldi	r24, 0x80	; 128
   1bc52:	06 c0       	rjmp	.+12     	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  default:
    interruptMode = 2;
   1bc54:	82 e0       	ldi	r24, 0x02	; 2
   1bc56:	80 93 e5 17 	sts	0x17E5, r24	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
  #endif
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
   1bc5a:	80 e0       	ldi	r24, 0x00	; 0
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
  #endif
  default:
    interruptMode = 2;
    break;
   1bc5c:	01 c0       	rjmp	.+2      	; 0x1bc60 <_ZN8SPIClass14usingInterruptEh+0x42>
  uint8_t mask = 0;
  uint8_t sreg = SREG;
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
  switch (interruptNumber) {
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
   1bc5e:	80 e1       	ldi	r24, 0x10	; 16
  #endif
  default:
    interruptMode = 2;
    break;
  }
  interruptMask |= mask;
   1bc60:	90 91 e4 17 	lds	r25, 0x17E4	; 0x8017e4 <_ZN8SPIClass13interruptMaskE>
   1bc64:	89 2b       	or	r24, r25
   1bc66:	80 93 e4 17 	sts	0x17E4, r24	; 0x8017e4 <_ZN8SPIClass13interruptMaskE>
  if (!interruptMode)
   1bc6a:	80 91 e5 17 	lds	r24, 0x17E5	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
   1bc6e:	81 11       	cpse	r24, r1
   1bc70:	03 c0       	rjmp	.+6      	; 0x1bc78 <_ZN8SPIClass14usingInterruptEh+0x5a>
    interruptMode = 1;
   1bc72:	81 e0       	ldi	r24, 0x01	; 1
   1bc74:	80 93 e5 17 	sts	0x17E5, r24	; 0x8017e5 <_ZN8SPIClass13interruptModeE>
  SREG = sreg;
   1bc78:	2f bf       	out	0x3f, r18	; 63
   1bc7a:	08 95       	ret

0001bc7c <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
   1bc7c:	80 91 1b 18 	lds	r24, 0x181B	; 0x80181b <_ZN7TwoWire14rxBufferLengthE>
   1bc80:	90 e0       	ldi	r25, 0x00	; 0
   1bc82:	20 91 1c 18 	lds	r18, 0x181C	; 0x80181c <_ZN7TwoWire13rxBufferIndexE>
   1bc86:	82 1b       	sub	r24, r18
   1bc88:	91 09       	sbc	r25, r1
   1bc8a:	08 95       	ret

0001bc8c <_ZN7TwoWire4readEv>:
   1bc8c:	90 91 1c 18 	lds	r25, 0x181C	; 0x80181c <_ZN7TwoWire13rxBufferIndexE>
   1bc90:	80 91 1b 18 	lds	r24, 0x181B	; 0x80181b <_ZN7TwoWire14rxBufferLengthE>
   1bc94:	98 17       	cp	r25, r24
   1bc96:	50 f4       	brcc	.+20     	; 0x1bcac <_ZN7TwoWire4readEv+0x20>
   1bc98:	e9 2f       	mov	r30, r25
   1bc9a:	f0 e0       	ldi	r31, 0x00	; 0
   1bc9c:	e3 5e       	subi	r30, 0xE3	; 227
   1bc9e:	f7 4e       	sbci	r31, 0xE7	; 231
   1bca0:	20 81       	ld	r18, Z
   1bca2:	30 e0       	ldi	r19, 0x00	; 0
   1bca4:	9f 5f       	subi	r25, 0xFF	; 255
   1bca6:	90 93 1c 18 	sts	0x181C, r25	; 0x80181c <_ZN7TwoWire13rxBufferIndexE>
   1bcaa:	02 c0       	rjmp	.+4      	; 0x1bcb0 <_ZN7TwoWire4readEv+0x24>
   1bcac:	2f ef       	ldi	r18, 0xFF	; 255
   1bcae:	3f ef       	ldi	r19, 0xFF	; 255
   1bcb0:	c9 01       	movw	r24, r18
   1bcb2:	08 95       	ret

0001bcb4 <_ZN7TwoWire4peekEv>:
   1bcb4:	e0 91 1c 18 	lds	r30, 0x181C	; 0x80181c <_ZN7TwoWire13rxBufferIndexE>
   1bcb8:	80 91 1b 18 	lds	r24, 0x181B	; 0x80181b <_ZN7TwoWire14rxBufferLengthE>
   1bcbc:	e8 17       	cp	r30, r24
   1bcbe:	30 f4       	brcc	.+12     	; 0x1bccc <_ZN7TwoWire4peekEv+0x18>
   1bcc0:	f0 e0       	ldi	r31, 0x00	; 0
   1bcc2:	e3 5e       	subi	r30, 0xE3	; 227
   1bcc4:	f7 4e       	sbci	r31, 0xE7	; 231
   1bcc6:	80 81       	ld	r24, Z
   1bcc8:	90 e0       	ldi	r25, 0x00	; 0
   1bcca:	08 95       	ret
   1bccc:	8f ef       	ldi	r24, 0xFF	; 255
   1bcce:	9f ef       	ldi	r25, 0xFF	; 255
   1bcd0:	08 95       	ret

0001bcd2 <_ZN7TwoWire5flushEv>:
   1bcd2:	08 95       	ret

0001bcd4 <_ZN7TwoWire16onReceiveServiceEPhi>:
   1bcd4:	cf 93       	push	r28
   1bcd6:	df 93       	push	r29
   1bcd8:	ec 01       	movw	r28, r24
   1bcda:	e0 91 f3 17 	lds	r30, 0x17F3	; 0x8017f3 <_ZN7TwoWire14user_onReceiveE>
   1bcde:	f0 91 f4 17 	lds	r31, 0x17F4	; 0x8017f4 <_ZN7TwoWire14user_onReceiveE+0x1>
   1bce2:	30 97       	sbiw	r30, 0x00	; 0
   1bce4:	f1 f0       	breq	.+60     	; 0x1bd22 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1bce6:	90 91 1c 18 	lds	r25, 0x181C	; 0x80181c <_ZN7TwoWire13rxBufferIndexE>
   1bcea:	80 91 1b 18 	lds	r24, 0x181B	; 0x80181b <_ZN7TwoWire14rxBufferLengthE>
   1bcee:	98 17       	cp	r25, r24
   1bcf0:	c0 f0       	brcs	.+48     	; 0x1bd22 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1bcf2:	90 e0       	ldi	r25, 0x00	; 0
   1bcf4:	29 2f       	mov	r18, r25
   1bcf6:	30 e0       	ldi	r19, 0x00	; 0
   1bcf8:	26 17       	cp	r18, r22
   1bcfa:	37 07       	cpc	r19, r23
   1bcfc:	54 f4       	brge	.+20     	; 0x1bd12 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
   1bcfe:	de 01       	movw	r26, r28
   1bd00:	a2 0f       	add	r26, r18
   1bd02:	b3 1f       	adc	r27, r19
   1bd04:	4c 91       	ld	r20, X
   1bd06:	d9 01       	movw	r26, r18
   1bd08:	a3 5e       	subi	r26, 0xE3	; 227
   1bd0a:	b7 4e       	sbci	r27, 0xE7	; 231
   1bd0c:	4c 93       	st	X, r20
   1bd0e:	9f 5f       	subi	r25, 0xFF	; 255
   1bd10:	f1 cf       	rjmp	.-30     	; 0x1bcf4 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
   1bd12:	10 92 1c 18 	sts	0x181C, r1	; 0x80181c <_ZN7TwoWire13rxBufferIndexE>
   1bd16:	60 93 1b 18 	sts	0x181B, r22	; 0x80181b <_ZN7TwoWire14rxBufferLengthE>
   1bd1a:	cb 01       	movw	r24, r22
   1bd1c:	df 91       	pop	r29
   1bd1e:	cf 91       	pop	r28
   1bd20:	19 94       	eijmp
   1bd22:	df 91       	pop	r29
   1bd24:	cf 91       	pop	r28
   1bd26:	08 95       	ret

0001bd28 <_ZN7TwoWire16onRequestServiceEv>:
   1bd28:	e0 91 f5 17 	lds	r30, 0x17F5	; 0x8017f5 <_ZN7TwoWire14user_onRequestE>
   1bd2c:	f0 91 f6 17 	lds	r31, 0x17F6	; 0x8017f6 <_ZN7TwoWire14user_onRequestE+0x1>
   1bd30:	30 97       	sbiw	r30, 0x00	; 0
   1bd32:	29 f0       	breq	.+10     	; 0x1bd3e <_ZN7TwoWire16onRequestServiceEv+0x16>
   1bd34:	10 92 f9 17 	sts	0x17F9, r1	; 0x8017f9 <_ZN7TwoWire13txBufferIndexE>
   1bd38:	10 92 f8 17 	sts	0x17F8, r1	; 0x8017f8 <_ZN7TwoWire14txBufferLengthE>
   1bd3c:	19 94       	eijmp
   1bd3e:	08 95       	ret

0001bd40 <_ZN7TwoWire5writeEPKhj>:
   1bd40:	cf 92       	push	r12
   1bd42:	df 92       	push	r13
   1bd44:	ef 92       	push	r14
   1bd46:	ff 92       	push	r15
   1bd48:	0f 93       	push	r16
   1bd4a:	1f 93       	push	r17
   1bd4c:	cf 93       	push	r28
   1bd4e:	df 93       	push	r29
   1bd50:	7c 01       	movw	r14, r24
   1bd52:	cb 01       	movw	r24, r22
   1bd54:	8a 01       	movw	r16, r20
   1bd56:	20 91 f7 17 	lds	r18, 0x17F7	; 0x8017f7 <_ZN7TwoWire12transmittingE>
   1bd5a:	22 23       	and	r18, r18
   1bd5c:	89 f0       	breq	.+34     	; 0x1bd80 <_ZN7TwoWire5writeEPKhj+0x40>
   1bd5e:	eb 01       	movw	r28, r22
   1bd60:	6b 01       	movw	r12, r22
   1bd62:	c4 0e       	add	r12, r20
   1bd64:	d5 1e       	adc	r13, r21
   1bd66:	cc 15       	cp	r28, r12
   1bd68:	dd 05       	cpc	r29, r13
   1bd6a:	61 f0       	breq	.+24     	; 0x1bd84 <_ZN7TwoWire5writeEPKhj+0x44>
   1bd6c:	69 91       	ld	r22, Y+
   1bd6e:	d7 01       	movw	r26, r14
   1bd70:	ed 91       	ld	r30, X+
   1bd72:	fc 91       	ld	r31, X
   1bd74:	01 90       	ld	r0, Z+
   1bd76:	f0 81       	ld	r31, Z
   1bd78:	e0 2d       	mov	r30, r0
   1bd7a:	c7 01       	movw	r24, r14
   1bd7c:	19 95       	eicall
   1bd7e:	f3 cf       	rjmp	.-26     	; 0x1bd66 <_ZN7TwoWire5writeEPKhj+0x26>
   1bd80:	64 2f       	mov	r22, r20
   1bd82:	7d d4       	rcall	.+2298   	; 0x1c67e <twi_transmit>
   1bd84:	c8 01       	movw	r24, r16
   1bd86:	df 91       	pop	r29
   1bd88:	cf 91       	pop	r28
   1bd8a:	1f 91       	pop	r17
   1bd8c:	0f 91       	pop	r16
   1bd8e:	ff 90       	pop	r15
   1bd90:	ef 90       	pop	r14
   1bd92:	df 90       	pop	r13
   1bd94:	cf 90       	pop	r12
   1bd96:	08 95       	ret

0001bd98 <_ZN7TwoWire5writeEh>:
   1bd98:	cf 93       	push	r28
   1bd9a:	df 93       	push	r29
   1bd9c:	1f 92       	push	r1
   1bd9e:	cd b7       	in	r28, 0x3d	; 61
   1bda0:	de b7       	in	r29, 0x3e	; 62
   1bda2:	69 83       	std	Y+1, r22	; 0x01
   1bda4:	20 91 f7 17 	lds	r18, 0x17F7	; 0x8017f7 <_ZN7TwoWire12transmittingE>
   1bda8:	22 23       	and	r18, r18
   1bdaa:	d1 f0       	breq	.+52     	; 0x1bde0 <_ZN7TwoWire5writeEh+0x48>
   1bdac:	20 91 f8 17 	lds	r18, 0x17F8	; 0x8017f8 <_ZN7TwoWire14txBufferLengthE>
   1bdb0:	20 32       	cpi	r18, 0x20	; 32
   1bdb2:	40 f0       	brcs	.+16     	; 0x1bdc4 <_ZN7TwoWire5writeEh+0x2c>
   1bdb4:	21 e0       	ldi	r18, 0x01	; 1
   1bdb6:	30 e0       	ldi	r19, 0x00	; 0
   1bdb8:	fc 01       	movw	r30, r24
   1bdba:	33 83       	std	Z+3, r19	; 0x03
   1bdbc:	22 83       	std	Z+2, r18	; 0x02
   1bdbe:	80 e0       	ldi	r24, 0x00	; 0
   1bdc0:	90 e0       	ldi	r25, 0x00	; 0
   1bdc2:	14 c0       	rjmp	.+40     	; 0x1bdec <_ZN7TwoWire5writeEh+0x54>
   1bdc4:	80 91 f9 17 	lds	r24, 0x17F9	; 0x8017f9 <_ZN7TwoWire13txBufferIndexE>
   1bdc8:	e8 2f       	mov	r30, r24
   1bdca:	f0 e0       	ldi	r31, 0x00	; 0
   1bdcc:	e6 50       	subi	r30, 0x06	; 6
   1bdce:	f8 4e       	sbci	r31, 0xE8	; 232
   1bdd0:	99 81       	ldd	r25, Y+1	; 0x01
   1bdd2:	90 83       	st	Z, r25
   1bdd4:	8f 5f       	subi	r24, 0xFF	; 255
   1bdd6:	80 93 f9 17 	sts	0x17F9, r24	; 0x8017f9 <_ZN7TwoWire13txBufferIndexE>
   1bdda:	80 93 f8 17 	sts	0x17F8, r24	; 0x8017f8 <_ZN7TwoWire14txBufferLengthE>
   1bdde:	04 c0       	rjmp	.+8      	; 0x1bde8 <_ZN7TwoWire5writeEh+0x50>
   1bde0:	61 e0       	ldi	r22, 0x01	; 1
   1bde2:	ce 01       	movw	r24, r28
   1bde4:	01 96       	adiw	r24, 0x01	; 1
   1bde6:	4b d4       	rcall	.+2198   	; 0x1c67e <twi_transmit>
   1bde8:	81 e0       	ldi	r24, 0x01	; 1
   1bdea:	90 e0       	ldi	r25, 0x00	; 0
   1bdec:	0f 90       	pop	r0
   1bdee:	df 91       	pop	r29
   1bdf0:	cf 91       	pop	r28
   1bdf2:	08 95       	ret

0001bdf4 <_ZN7TwoWireC1Ev>:
   1bdf4:	fc 01       	movw	r30, r24
   1bdf6:	13 82       	std	Z+3, r1	; 0x03
   1bdf8:	12 82       	std	Z+2, r1	; 0x02
   1bdfa:	88 ee       	ldi	r24, 0xE8	; 232
   1bdfc:	93 e0       	ldi	r25, 0x03	; 3
   1bdfe:	a0 e0       	ldi	r26, 0x00	; 0
   1be00:	b0 e0       	ldi	r27, 0x00	; 0
   1be02:	84 83       	std	Z+4, r24	; 0x04
   1be04:	95 83       	std	Z+5, r25	; 0x05
   1be06:	a6 83       	std	Z+6, r26	; 0x06
   1be08:	b7 83       	std	Z+7, r27	; 0x07
   1be0a:	89 ea       	ldi	r24, 0xA9	; 169
   1be0c:	98 e0       	ldi	r25, 0x08	; 8
   1be0e:	91 83       	std	Z+1, r25	; 0x01
   1be10:	80 83       	st	Z, r24
   1be12:	08 95       	ret

0001be14 <_ZN7TwoWire5beginEv>:
   1be14:	10 92 1c 18 	sts	0x181C, r1	; 0x80181c <_ZN7TwoWire13rxBufferIndexE>
   1be18:	10 92 1b 18 	sts	0x181B, r1	; 0x80181b <_ZN7TwoWire14rxBufferLengthE>
   1be1c:	10 92 f9 17 	sts	0x17F9, r1	; 0x8017f9 <_ZN7TwoWire13txBufferIndexE>
   1be20:	10 92 f8 17 	sts	0x17F8, r1	; 0x8017f8 <_ZN7TwoWire14txBufferLengthE>
   1be24:	01 d4       	rcall	.+2050   	; 0x1c628 <twi_init>
   1be26:	84 e9       	ldi	r24, 0x94	; 148
   1be28:	9e ed       	ldi	r25, 0xDE	; 222
   1be2a:	56 d4       	rcall	.+2220   	; 0x1c6d8 <twi_attachSlaveTxEvent>
   1be2c:	8a e6       	ldi	r24, 0x6A	; 106
   1be2e:	9e ed       	ldi	r25, 0xDE	; 222
   1be30:	4e c4       	rjmp	.+2204   	; 0x1c6ce <twi_attachSlaveRxEvent>

0001be32 <_ZN7TwoWire17beginTransmissionEh>:
   1be32:	81 e0       	ldi	r24, 0x01	; 1
   1be34:	80 93 f7 17 	sts	0x17F7, r24	; 0x8017f7 <_ZN7TwoWire12transmittingE>
   1be38:	60 93 1a 18 	sts	0x181A, r22	; 0x80181a <_ZN7TwoWire9txAddressE>
   1be3c:	10 92 f9 17 	sts	0x17F9, r1	; 0x8017f9 <_ZN7TwoWire13txBufferIndexE>
   1be40:	10 92 f8 17 	sts	0x17F8, r1	; 0x8017f8 <_ZN7TwoWire14txBufferLengthE>
   1be44:	08 95       	ret

0001be46 <_ZN7TwoWire15endTransmissionEh>:
   1be46:	0f 93       	push	r16
   1be48:	06 2f       	mov	r16, r22
   1be4a:	21 e0       	ldi	r18, 0x01	; 1
   1be4c:	40 91 f8 17 	lds	r20, 0x17F8	; 0x8017f8 <_ZN7TwoWire14txBufferLengthE>
   1be50:	6a ef       	ldi	r22, 0xFA	; 250
   1be52:	77 e1       	ldi	r23, 0x17	; 23
   1be54:	80 91 1a 18 	lds	r24, 0x181A	; 0x80181a <_ZN7TwoWire9txAddressE>
   1be58:	5e d4       	rcall	.+2236   	; 0x1c716 <twi_writeTo>
   1be5a:	10 92 f9 17 	sts	0x17F9, r1	; 0x8017f9 <_ZN7TwoWire13txBufferIndexE>
   1be5e:	10 92 f8 17 	sts	0x17F8, r1	; 0x8017f8 <_ZN7TwoWire14txBufferLengthE>
   1be62:	10 92 f7 17 	sts	0x17F7, r1	; 0x8017f7 <_ZN7TwoWire12transmittingE>
   1be66:	0f 91       	pop	r16
   1be68:	08 95       	ret

0001be6a <_ZN7TwoWire15endTransmissionEv>:
   1be6a:	61 e0       	ldi	r22, 0x01	; 1
   1be6c:	ec cf       	rjmp	.-40     	; 0x1be46 <_ZN7TwoWire15endTransmissionEh>

0001be6e <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
   1be6e:	87 ee       	ldi	r24, 0xE7	; 231
   1be70:	97 e1       	ldi	r25, 0x17	; 23
   1be72:	c0 cf       	rjmp	.-128    	; 0x1bdf4 <_ZN7TwoWireC1Ev>

0001be74 <__cxa_pure_virtual>:
   1be74:	0e 94 06 ea 	call	0x1d40c	; 0x1d40c <abort>

0001be78 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
   1be78:	08 95       	ret

0001be7a <_ZdlPv>:
   1be7a:	0c 94 e1 e8 	jmp	0x1d1c2	; 0x1d1c2 <free>

0001be7e <nothing>:
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
   1be7e:	08 95       	ret

0001be80 <attachInterrupt>:
   1be80:	88 30       	cpi	r24, 0x08	; 8
   1be82:	08 f0       	brcs	.+2      	; 0x1be86 <attachInterrupt+0x6>
   1be84:	70 c0       	rjmp	.+224    	; 0x1bf66 <attachInterrupt+0xe6>
   1be86:	a8 2f       	mov	r26, r24
   1be88:	b0 e0       	ldi	r27, 0x00	; 0
   1be8a:	aa 0f       	add	r26, r26
   1be8c:	bb 1f       	adc	r27, r27
   1be8e:	ae 5a       	subi	r26, 0xAE	; 174
   1be90:	bd 4f       	sbci	r27, 0xFD	; 253
   1be92:	11 96       	adiw	r26, 0x01	; 1
   1be94:	7c 93       	st	X, r23
   1be96:	6e 93       	st	-X, r22
   1be98:	90 e0       	ldi	r25, 0x00	; 0
   1be9a:	fc 01       	movw	r30, r24
   1be9c:	31 97       	sbiw	r30, 0x01	; 1
   1be9e:	e7 30       	cpi	r30, 0x07	; 7
   1bea0:	f1 05       	cpc	r31, r1
   1bea2:	a0 f5       	brcc	.+104    	; 0x1bf0c <attachInterrupt+0x8c>
   1bea4:	88 27       	eor	r24, r24
   1bea6:	ef 5e       	subi	r30, 0xEF	; 239
   1bea8:	fe 4f       	sbci	r31, 0xFE	; 254
   1beaa:	8f 4f       	sbci	r24, 0xFF	; 255
   1beac:	0c 94 1c e8 	jmp	0x1d038	; 0x1d038 <__tablejump2__>
   1beb0:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1beb4:	8c 7f       	andi	r24, 0xFC	; 252
   1beb6:	48 2b       	or	r20, r24
   1beb8:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bebc:	e8 9a       	sbi	0x1d, 0	; 29
   1bebe:	08 95       	ret
   1bec0:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bec4:	83 7f       	andi	r24, 0xF3	; 243
   1bec6:	44 0f       	add	r20, r20
   1bec8:	55 1f       	adc	r21, r21
   1beca:	44 0f       	add	r20, r20
   1becc:	55 1f       	adc	r21, r21
   1bece:	48 2b       	or	r20, r24
   1bed0:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bed4:	e9 9a       	sbi	0x1d, 1	; 29
   1bed6:	08 95       	ret
   1bed8:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bedc:	8f 7c       	andi	r24, 0xCF	; 207
   1bede:	74 e0       	ldi	r23, 0x04	; 4
   1bee0:	44 0f       	add	r20, r20
   1bee2:	55 1f       	adc	r21, r21
   1bee4:	7a 95       	dec	r23
   1bee6:	e1 f7       	brne	.-8      	; 0x1bee0 <attachInterrupt+0x60>
   1bee8:	48 2b       	or	r20, r24
   1beea:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1beee:	ea 9a       	sbi	0x1d, 2	; 29
   1bef0:	08 95       	ret
   1bef2:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bef6:	8f 73       	andi	r24, 0x3F	; 63
   1bef8:	66 e0       	ldi	r22, 0x06	; 6
   1befa:	44 0f       	add	r20, r20
   1befc:	55 1f       	adc	r21, r21
   1befe:	6a 95       	dec	r22
   1bf00:	e1 f7       	brne	.-8      	; 0x1befa <attachInterrupt+0x7a>
   1bf02:	48 2b       	or	r20, r24
   1bf04:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bf08:	eb 9a       	sbi	0x1d, 3	; 29
   1bf0a:	08 95       	ret
   1bf0c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf10:	8c 7f       	andi	r24, 0xFC	; 252
   1bf12:	48 2b       	or	r20, r24
   1bf14:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf18:	ec 9a       	sbi	0x1d, 4	; 29
   1bf1a:	08 95       	ret
   1bf1c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf20:	83 7f       	andi	r24, 0xF3	; 243
   1bf22:	44 0f       	add	r20, r20
   1bf24:	55 1f       	adc	r21, r21
   1bf26:	44 0f       	add	r20, r20
   1bf28:	55 1f       	adc	r21, r21
   1bf2a:	48 2b       	or	r20, r24
   1bf2c:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf30:	ed 9a       	sbi	0x1d, 5	; 29
   1bf32:	08 95       	ret
   1bf34:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf38:	8f 7c       	andi	r24, 0xCF	; 207
   1bf3a:	24 e0       	ldi	r18, 0x04	; 4
   1bf3c:	44 0f       	add	r20, r20
   1bf3e:	55 1f       	adc	r21, r21
   1bf40:	2a 95       	dec	r18
   1bf42:	e1 f7       	brne	.-8      	; 0x1bf3c <attachInterrupt+0xbc>
   1bf44:	48 2b       	or	r20, r24
   1bf46:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf4a:	ee 9a       	sbi	0x1d, 6	; 29
   1bf4c:	08 95       	ret
   1bf4e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf52:	8f 73       	andi	r24, 0x3F	; 63
   1bf54:	96 e0       	ldi	r25, 0x06	; 6
   1bf56:	44 0f       	add	r20, r20
   1bf58:	55 1f       	adc	r21, r21
   1bf5a:	9a 95       	dec	r25
   1bf5c:	e1 f7       	brne	.-8      	; 0x1bf56 <attachInterrupt+0xd6>
   1bf5e:	48 2b       	or	r20, r24
   1bf60:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bf64:	ef 9a       	sbi	0x1d, 7	; 29
   1bf66:	08 95       	ret

0001bf68 <__vector_1>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)

#elif defined(EICRA) && defined(EICRB)

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_2)
   1bf68:	1f 92       	push	r1
   1bf6a:	0f 92       	push	r0
   1bf6c:	0f b6       	in	r0, 0x3f	; 63
   1bf6e:	0f 92       	push	r0
   1bf70:	11 24       	eor	r1, r1
   1bf72:	0b b6       	in	r0, 0x3b	; 59
   1bf74:	0f 92       	push	r0
   1bf76:	2f 93       	push	r18
   1bf78:	3f 93       	push	r19
   1bf7a:	4f 93       	push	r20
   1bf7c:	5f 93       	push	r21
   1bf7e:	6f 93       	push	r22
   1bf80:	7f 93       	push	r23
   1bf82:	8f 93       	push	r24
   1bf84:	9f 93       	push	r25
   1bf86:	af 93       	push	r26
   1bf88:	bf 93       	push	r27
   1bf8a:	ef 93       	push	r30
   1bf8c:	ff 93       	push	r31
   1bf8e:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <intFunc+0x4>
   1bf92:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <intFunc+0x5>
   1bf96:	19 95       	eicall
   1bf98:	ff 91       	pop	r31
   1bf9a:	ef 91       	pop	r30
   1bf9c:	bf 91       	pop	r27
   1bf9e:	af 91       	pop	r26
   1bfa0:	9f 91       	pop	r25
   1bfa2:	8f 91       	pop	r24
   1bfa4:	7f 91       	pop	r23
   1bfa6:	6f 91       	pop	r22
   1bfa8:	5f 91       	pop	r21
   1bfaa:	4f 91       	pop	r20
   1bfac:	3f 91       	pop	r19
   1bfae:	2f 91       	pop	r18
   1bfb0:	0f 90       	pop	r0
   1bfb2:	0b be       	out	0x3b, r0	; 59
   1bfb4:	0f 90       	pop	r0
   1bfb6:	0f be       	out	0x3f, r0	; 63
   1bfb8:	0f 90       	pop	r0
   1bfba:	1f 90       	pop	r1
   1bfbc:	18 95       	reti

0001bfbe <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_3)
   1bfbe:	1f 92       	push	r1
   1bfc0:	0f 92       	push	r0
   1bfc2:	0f b6       	in	r0, 0x3f	; 63
   1bfc4:	0f 92       	push	r0
   1bfc6:	11 24       	eor	r1, r1
   1bfc8:	0b b6       	in	r0, 0x3b	; 59
   1bfca:	0f 92       	push	r0
   1bfcc:	2f 93       	push	r18
   1bfce:	3f 93       	push	r19
   1bfd0:	4f 93       	push	r20
   1bfd2:	5f 93       	push	r21
   1bfd4:	6f 93       	push	r22
   1bfd6:	7f 93       	push	r23
   1bfd8:	8f 93       	push	r24
   1bfda:	9f 93       	push	r25
   1bfdc:	af 93       	push	r26
   1bfde:	bf 93       	push	r27
   1bfe0:	ef 93       	push	r30
   1bfe2:	ff 93       	push	r31
   1bfe4:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <intFunc+0x6>
   1bfe8:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <intFunc+0x7>
   1bfec:	19 95       	eicall
   1bfee:	ff 91       	pop	r31
   1bff0:	ef 91       	pop	r30
   1bff2:	bf 91       	pop	r27
   1bff4:	af 91       	pop	r26
   1bff6:	9f 91       	pop	r25
   1bff8:	8f 91       	pop	r24
   1bffa:	7f 91       	pop	r23
   1bffc:	6f 91       	pop	r22
   1bffe:	5f 91       	pop	r21
   1c000:	4f 91       	pop	r20
   1c002:	3f 91       	pop	r19
   1c004:	2f 91       	pop	r18
   1c006:	0f 90       	pop	r0
   1c008:	0b be       	out	0x3b, r0	; 59
   1c00a:	0f 90       	pop	r0
   1c00c:	0f be       	out	0x3f, r0	; 63
   1c00e:	0f 90       	pop	r0
   1c010:	1f 90       	pop	r1
   1c012:	18 95       	reti

0001c014 <__vector_3>:
IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_4)
   1c014:	1f 92       	push	r1
   1c016:	0f 92       	push	r0
   1c018:	0f b6       	in	r0, 0x3f	; 63
   1c01a:	0f 92       	push	r0
   1c01c:	11 24       	eor	r1, r1
   1c01e:	0b b6       	in	r0, 0x3b	; 59
   1c020:	0f 92       	push	r0
   1c022:	2f 93       	push	r18
   1c024:	3f 93       	push	r19
   1c026:	4f 93       	push	r20
   1c028:	5f 93       	push	r21
   1c02a:	6f 93       	push	r22
   1c02c:	7f 93       	push	r23
   1c02e:	8f 93       	push	r24
   1c030:	9f 93       	push	r25
   1c032:	af 93       	push	r26
   1c034:	bf 93       	push	r27
   1c036:	ef 93       	push	r30
   1c038:	ff 93       	push	r31
   1c03a:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <intFunc+0x8>
   1c03e:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <intFunc+0x9>
   1c042:	19 95       	eicall
   1c044:	ff 91       	pop	r31
   1c046:	ef 91       	pop	r30
   1c048:	bf 91       	pop	r27
   1c04a:	af 91       	pop	r26
   1c04c:	9f 91       	pop	r25
   1c04e:	8f 91       	pop	r24
   1c050:	7f 91       	pop	r23
   1c052:	6f 91       	pop	r22
   1c054:	5f 91       	pop	r21
   1c056:	4f 91       	pop	r20
   1c058:	3f 91       	pop	r19
   1c05a:	2f 91       	pop	r18
   1c05c:	0f 90       	pop	r0
   1c05e:	0b be       	out	0x3b, r0	; 59
   1c060:	0f 90       	pop	r0
   1c062:	0f be       	out	0x3f, r0	; 63
   1c064:	0f 90       	pop	r0
   1c066:	1f 90       	pop	r1
   1c068:	18 95       	reti

0001c06a <__vector_4>:
IMPLEMENT_ISR(INT3_vect, EXTERNAL_INT_5)
   1c06a:	1f 92       	push	r1
   1c06c:	0f 92       	push	r0
   1c06e:	0f b6       	in	r0, 0x3f	; 63
   1c070:	0f 92       	push	r0
   1c072:	11 24       	eor	r1, r1
   1c074:	0b b6       	in	r0, 0x3b	; 59
   1c076:	0f 92       	push	r0
   1c078:	2f 93       	push	r18
   1c07a:	3f 93       	push	r19
   1c07c:	4f 93       	push	r20
   1c07e:	5f 93       	push	r21
   1c080:	6f 93       	push	r22
   1c082:	7f 93       	push	r23
   1c084:	8f 93       	push	r24
   1c086:	9f 93       	push	r25
   1c088:	af 93       	push	r26
   1c08a:	bf 93       	push	r27
   1c08c:	ef 93       	push	r30
   1c08e:	ff 93       	push	r31
   1c090:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <intFunc+0xa>
   1c094:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <intFunc+0xb>
   1c098:	19 95       	eicall
   1c09a:	ff 91       	pop	r31
   1c09c:	ef 91       	pop	r30
   1c09e:	bf 91       	pop	r27
   1c0a0:	af 91       	pop	r26
   1c0a2:	9f 91       	pop	r25
   1c0a4:	8f 91       	pop	r24
   1c0a6:	7f 91       	pop	r23
   1c0a8:	6f 91       	pop	r22
   1c0aa:	5f 91       	pop	r21
   1c0ac:	4f 91       	pop	r20
   1c0ae:	3f 91       	pop	r19
   1c0b0:	2f 91       	pop	r18
   1c0b2:	0f 90       	pop	r0
   1c0b4:	0b be       	out	0x3b, r0	; 59
   1c0b6:	0f 90       	pop	r0
   1c0b8:	0f be       	out	0x3f, r0	; 63
   1c0ba:	0f 90       	pop	r0
   1c0bc:	1f 90       	pop	r1
   1c0be:	18 95       	reti

0001c0c0 <__vector_5>:
IMPLEMENT_ISR(INT4_vect, EXTERNAL_INT_0)
   1c0c0:	1f 92       	push	r1
   1c0c2:	0f 92       	push	r0
   1c0c4:	0f b6       	in	r0, 0x3f	; 63
   1c0c6:	0f 92       	push	r0
   1c0c8:	11 24       	eor	r1, r1
   1c0ca:	0b b6       	in	r0, 0x3b	; 59
   1c0cc:	0f 92       	push	r0
   1c0ce:	2f 93       	push	r18
   1c0d0:	3f 93       	push	r19
   1c0d2:	4f 93       	push	r20
   1c0d4:	5f 93       	push	r21
   1c0d6:	6f 93       	push	r22
   1c0d8:	7f 93       	push	r23
   1c0da:	8f 93       	push	r24
   1c0dc:	9f 93       	push	r25
   1c0de:	af 93       	push	r26
   1c0e0:	bf 93       	push	r27
   1c0e2:	ef 93       	push	r30
   1c0e4:	ff 93       	push	r31
   1c0e6:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <intFunc>
   1c0ea:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <intFunc+0x1>
   1c0ee:	19 95       	eicall
   1c0f0:	ff 91       	pop	r31
   1c0f2:	ef 91       	pop	r30
   1c0f4:	bf 91       	pop	r27
   1c0f6:	af 91       	pop	r26
   1c0f8:	9f 91       	pop	r25
   1c0fa:	8f 91       	pop	r24
   1c0fc:	7f 91       	pop	r23
   1c0fe:	6f 91       	pop	r22
   1c100:	5f 91       	pop	r21
   1c102:	4f 91       	pop	r20
   1c104:	3f 91       	pop	r19
   1c106:	2f 91       	pop	r18
   1c108:	0f 90       	pop	r0
   1c10a:	0b be       	out	0x3b, r0	; 59
   1c10c:	0f 90       	pop	r0
   1c10e:	0f be       	out	0x3f, r0	; 63
   1c110:	0f 90       	pop	r0
   1c112:	1f 90       	pop	r1
   1c114:	18 95       	reti

0001c116 <__vector_6>:
IMPLEMENT_ISR(INT5_vect, EXTERNAL_INT_1)
   1c116:	1f 92       	push	r1
   1c118:	0f 92       	push	r0
   1c11a:	0f b6       	in	r0, 0x3f	; 63
   1c11c:	0f 92       	push	r0
   1c11e:	11 24       	eor	r1, r1
   1c120:	0b b6       	in	r0, 0x3b	; 59
   1c122:	0f 92       	push	r0
   1c124:	2f 93       	push	r18
   1c126:	3f 93       	push	r19
   1c128:	4f 93       	push	r20
   1c12a:	5f 93       	push	r21
   1c12c:	6f 93       	push	r22
   1c12e:	7f 93       	push	r23
   1c130:	8f 93       	push	r24
   1c132:	9f 93       	push	r25
   1c134:	af 93       	push	r26
   1c136:	bf 93       	push	r27
   1c138:	ef 93       	push	r30
   1c13a:	ff 93       	push	r31
   1c13c:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <intFunc+0x2>
   1c140:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <intFunc+0x3>
   1c144:	19 95       	eicall
   1c146:	ff 91       	pop	r31
   1c148:	ef 91       	pop	r30
   1c14a:	bf 91       	pop	r27
   1c14c:	af 91       	pop	r26
   1c14e:	9f 91       	pop	r25
   1c150:	8f 91       	pop	r24
   1c152:	7f 91       	pop	r23
   1c154:	6f 91       	pop	r22
   1c156:	5f 91       	pop	r21
   1c158:	4f 91       	pop	r20
   1c15a:	3f 91       	pop	r19
   1c15c:	2f 91       	pop	r18
   1c15e:	0f 90       	pop	r0
   1c160:	0b be       	out	0x3b, r0	; 59
   1c162:	0f 90       	pop	r0
   1c164:	0f be       	out	0x3f, r0	; 63
   1c166:	0f 90       	pop	r0
   1c168:	1f 90       	pop	r1
   1c16a:	18 95       	reti

0001c16c <__vector_7>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
   1c16c:	1f 92       	push	r1
   1c16e:	0f 92       	push	r0
   1c170:	0f b6       	in	r0, 0x3f	; 63
   1c172:	0f 92       	push	r0
   1c174:	11 24       	eor	r1, r1
   1c176:	0b b6       	in	r0, 0x3b	; 59
   1c178:	0f 92       	push	r0
   1c17a:	2f 93       	push	r18
   1c17c:	3f 93       	push	r19
   1c17e:	4f 93       	push	r20
   1c180:	5f 93       	push	r21
   1c182:	6f 93       	push	r22
   1c184:	7f 93       	push	r23
   1c186:	8f 93       	push	r24
   1c188:	9f 93       	push	r25
   1c18a:	af 93       	push	r26
   1c18c:	bf 93       	push	r27
   1c18e:	ef 93       	push	r30
   1c190:	ff 93       	push	r31
   1c192:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <intFunc+0xc>
   1c196:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <intFunc+0xd>
   1c19a:	19 95       	eicall
   1c19c:	ff 91       	pop	r31
   1c19e:	ef 91       	pop	r30
   1c1a0:	bf 91       	pop	r27
   1c1a2:	af 91       	pop	r26
   1c1a4:	9f 91       	pop	r25
   1c1a6:	8f 91       	pop	r24
   1c1a8:	7f 91       	pop	r23
   1c1aa:	6f 91       	pop	r22
   1c1ac:	5f 91       	pop	r21
   1c1ae:	4f 91       	pop	r20
   1c1b0:	3f 91       	pop	r19
   1c1b2:	2f 91       	pop	r18
   1c1b4:	0f 90       	pop	r0
   1c1b6:	0b be       	out	0x3b, r0	; 59
   1c1b8:	0f 90       	pop	r0
   1c1ba:	0f be       	out	0x3f, r0	; 63
   1c1bc:	0f 90       	pop	r0
   1c1be:	1f 90       	pop	r1
   1c1c0:	18 95       	reti

0001c1c2 <__vector_8>:
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)
   1c1c2:	1f 92       	push	r1
   1c1c4:	0f 92       	push	r0
   1c1c6:	0f b6       	in	r0, 0x3f	; 63
   1c1c8:	0f 92       	push	r0
   1c1ca:	11 24       	eor	r1, r1
   1c1cc:	0b b6       	in	r0, 0x3b	; 59
   1c1ce:	0f 92       	push	r0
   1c1d0:	2f 93       	push	r18
   1c1d2:	3f 93       	push	r19
   1c1d4:	4f 93       	push	r20
   1c1d6:	5f 93       	push	r21
   1c1d8:	6f 93       	push	r22
   1c1da:	7f 93       	push	r23
   1c1dc:	8f 93       	push	r24
   1c1de:	9f 93       	push	r25
   1c1e0:	af 93       	push	r26
   1c1e2:	bf 93       	push	r27
   1c1e4:	ef 93       	push	r30
   1c1e6:	ff 93       	push	r31
   1c1e8:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <intFunc+0xe>
   1c1ec:	f0 91 61 02 	lds	r31, 0x0261	; 0x800261 <intFunc+0xf>
   1c1f0:	19 95       	eicall
   1c1f2:	ff 91       	pop	r31
   1c1f4:	ef 91       	pop	r30
   1c1f6:	bf 91       	pop	r27
   1c1f8:	af 91       	pop	r26
   1c1fa:	9f 91       	pop	r25
   1c1fc:	8f 91       	pop	r24
   1c1fe:	7f 91       	pop	r23
   1c200:	6f 91       	pop	r22
   1c202:	5f 91       	pop	r21
   1c204:	4f 91       	pop	r20
   1c206:	3f 91       	pop	r19
   1c208:	2f 91       	pop	r18
   1c20a:	0f 90       	pop	r0
   1c20c:	0b be       	out	0x3b, r0	; 59
   1c20e:	0f 90       	pop	r0
   1c210:	0f be       	out	0x3f, r0	; 63
   1c212:	0f 90       	pop	r0
   1c214:	1f 90       	pop	r1
   1c216:	18 95       	reti

0001c218 <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
   1c218:	86 33       	cpi	r24, 0x36	; 54
   1c21a:	08 f0       	brcs	.+2      	; 0x1c21e <analogRead+0x6>
   1c21c:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
   1c21e:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1c222:	28 2f       	mov	r18, r24
   1c224:	28 70       	andi	r18, 0x08	; 8
   1c226:	97 7f       	andi	r25, 0xF7	; 247
   1c228:	92 2b       	or	r25, r18
   1c22a:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
   1c22e:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <analog_reference>
   1c232:	90 e4       	ldi	r25, 0x40	; 64
   1c234:	29 9f       	mul	r18, r25
   1c236:	90 01       	movw	r18, r0
   1c238:	11 24       	eor	r1, r1
   1c23a:	87 70       	andi	r24, 0x07	; 7
   1c23c:	82 2b       	or	r24, r18
   1c23e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
   1c242:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c246:	80 64       	ori	r24, 0x40	; 64
   1c248:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
   1c24c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c250:	86 fd       	sbrc	r24, 6
   1c252:	fc cf       	rjmp	.-8      	; 0x1c24c <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
   1c254:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	high = ADCH;
   1c258:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
   1c25c:	90 e0       	ldi	r25, 0x00	; 0
}
   1c25e:	92 2b       	or	r25, r18
   1c260:	08 95       	ret

0001c262 <_Z6randoml>:
    srandom(seed);
  }
}

long random(long howbig)
{
   1c262:	cf 92       	push	r12
   1c264:	df 92       	push	r13
   1c266:	ef 92       	push	r14
   1c268:	ff 92       	push	r15
  if (howbig == 0) {
   1c26a:	61 15       	cp	r22, r1
   1c26c:	71 05       	cpc	r23, r1
   1c26e:	81 05       	cpc	r24, r1
   1c270:	91 05       	cpc	r25, r1
   1c272:	41 f0       	breq	.+16     	; 0x1c284 <_Z6randoml+0x22>
   1c274:	6b 01       	movw	r12, r22
   1c276:	7c 01       	movw	r14, r24
    return 0;
  }
  return random() % howbig;
   1c278:	0e 94 b2 e9 	call	0x1d364	; 0x1d364 <random>
   1c27c:	a7 01       	movw	r20, r14
   1c27e:	96 01       	movw	r18, r12
   1c280:	bf d6       	rcall	.+3454   	; 0x1d000 <__divmodsi4>
   1c282:	03 c0       	rjmp	.+6      	; 0x1c28a <_Z6randoml+0x28>
}

long random(long howbig)
{
  if (howbig == 0) {
    return 0;
   1c284:	60 e0       	ldi	r22, 0x00	; 0
   1c286:	70 e0       	ldi	r23, 0x00	; 0
   1c288:	cb 01       	movw	r24, r22
  }
  return random() % howbig;
}
   1c28a:	ff 90       	pop	r15
   1c28c:	ef 90       	pop	r14
   1c28e:	df 90       	pop	r13
   1c290:	cf 90       	pop	r12
   1c292:	08 95       	ret

0001c294 <_Z6randomll>:

long random(long howsmall, long howbig)
{
   1c294:	cf 92       	push	r12
   1c296:	df 92       	push	r13
   1c298:	ef 92       	push	r14
   1c29a:	ff 92       	push	r15
   1c29c:	0f 93       	push	r16
   1c29e:	1f 93       	push	r17
  if (howsmall >= howbig) {
   1c2a0:	62 17       	cp	r22, r18
   1c2a2:	73 07       	cpc	r23, r19
   1c2a4:	84 07       	cpc	r24, r20
   1c2a6:	95 07       	cpc	r25, r21
   1c2a8:	7c f4       	brge	.+30     	; 0x1c2c8 <_Z6randomll+0x34>
   1c2aa:	89 01       	movw	r16, r18
   1c2ac:	9a 01       	movw	r18, r20
   1c2ae:	6b 01       	movw	r12, r22
   1c2b0:	7c 01       	movw	r14, r24
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
   1c2b2:	c9 01       	movw	r24, r18
   1c2b4:	b8 01       	movw	r22, r16
   1c2b6:	6c 19       	sub	r22, r12
   1c2b8:	7d 09       	sbc	r23, r13
   1c2ba:	8e 09       	sbc	r24, r14
   1c2bc:	9f 09       	sbc	r25, r15
   1c2be:	d1 df       	rcall	.-94     	; 0x1c262 <_Z6randoml>
   1c2c0:	6c 0d       	add	r22, r12
   1c2c2:	7d 1d       	adc	r23, r13
   1c2c4:	8e 1d       	adc	r24, r14
   1c2c6:	9f 1d       	adc	r25, r15
}
   1c2c8:	1f 91       	pop	r17
   1c2ca:	0f 91       	pop	r16
   1c2cc:	ff 90       	pop	r15
   1c2ce:	ef 90       	pop	r14
   1c2d0:	df 90       	pop	r13
   1c2d2:	cf 90       	pop	r12
   1c2d4:	08 95       	ret

0001c2d6 <_ZN12RHGenericSPI15attachInterruptEv>:
#endif

    /// SPI Configuration methods
    /// Enable SPI interrupts (if supported)
    /// This can be used in an SPI slave to indicate when an SPI message has been received
    virtual void attachInterrupt() {};
   1c2d6:	08 95       	ret

0001c2d8 <_ZN12RHGenericSPI15detachInterruptEv>:

    /// Disable SPI interrupts (if supported)
    /// This can be used to diable the SPI interrupt in slaves where that is supported.
    virtual void detachInterrupt() {};
   1c2d8:	08 95       	ret

0001c2da <_ZN12RHGenericSPI16beginTransactionEv>:
    /// Signal the start of an SPI transaction that must not be interrupted by other SPI actions
    /// In subclasses that support transactions this will ensure that other SPI transactions
    /// are blocked until this one is completed by endTransaction().
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void beginTransaction(){}
   1c2da:	08 95       	ret

0001c2dc <_ZN12RHGenericSPI14endTransactionEv>:

    /// Signal the end of an SPI transaction
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void endTransaction(){}
   1c2dc:	08 95       	ret

0001c2de <_ZN12RHGenericSPI14usingInterruptEh>:
    /// Tells the SPI support software that SPI transactions will occur with the interrupt
    /// handler assocated with interruptNumber
    /// Base does nothing
    /// Might be overridden in subclass
    /// \param[in] interruptNumber The number of the interrupt
    virtual void usingInterrupt(uint8_t interruptNumber){
   1c2de:	08 95       	ret

0001c2e0 <_ZN12RHGenericSPI11setBitOrderENS_8BitOrderE>:
{
}

void RHGenericSPI::setBitOrder(BitOrder bitOrder)
{
    _bitOrder = bitOrder;
   1c2e0:	fc 01       	movw	r30, r24
   1c2e2:	63 83       	std	Z+3, r22	; 0x03
   1c2e4:	08 95       	ret

0001c2e6 <_ZN12RHGenericSPI11setDataModeENS_8DataModeE>:
}

void RHGenericSPI::setDataMode(DataMode dataMode)
{
    _dataMode = dataMode; 
   1c2e6:	fc 01       	movw	r30, r24
   1c2e8:	64 83       	std	Z+4, r22	; 0x04
   1c2ea:	08 95       	ret

0001c2ec <_ZN12RHGenericSPI12setFrequencyENS_9FrequencyE>:
}

void RHGenericSPI::setFrequency(Frequency frequency)
{
    _frequency = frequency;
   1c2ec:	fc 01       	movw	r30, r24
   1c2ee:	62 83       	std	Z+2, r22	; 0x02
   1c2f0:	08 95       	ret

0001c2f2 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>:
// Contributed by Joanna Rutkowska
// $Id: RHGenericSPI.cpp,v 1.2 2014/04/12 05:26:05 mikem Exp $

#include <RHGenericSPI.h>

RHGenericSPI::RHGenericSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1c2f2:	fc 01       	movw	r30, r24
    :
    _frequency(frequency),
    _bitOrder(bitOrder),
    _dataMode(dataMode)
   1c2f4:	8b eb       	ldi	r24, 0xBB	; 187
   1c2f6:	98 e0       	ldi	r25, 0x08	; 8
   1c2f8:	91 83       	std	Z+1, r25	; 0x01
   1c2fa:	80 83       	st	Z, r24
   1c2fc:	62 83       	std	Z+2, r22	; 0x02
   1c2fe:	43 83       	std	Z+3, r20	; 0x03
   1c300:	24 83       	std	Z+4, r18	; 0x04
   1c302:	08 95       	ret

0001c304 <_ZN11RHSPIDriver4initEv>:
    return status;
}

void RHSPIDriver::setSlaveSelectPin(uint8_t slaveSelectPin)
{
    _slaveSelectPin = slaveSelectPin;
   1c304:	cf 93       	push	r28
   1c306:	df 93       	push	r29
   1c308:	ec 01       	movw	r28, r24
   1c30a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c30c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c30e:	dc 01       	movw	r26, r24
   1c310:	ed 91       	ld	r30, X+
   1c312:	fc 91       	ld	r31, X
   1c314:	06 80       	ldd	r0, Z+6	; 0x06
   1c316:	f7 81       	ldd	r31, Z+7	; 0x07
   1c318:	e0 2d       	mov	r30, r0
   1c31a:	19 95       	eicall
   1c31c:	8a 8d       	ldd	r24, Y+26	; 0x1a
   1c31e:	8f 3f       	cpi	r24, 0xFF	; 255
   1c320:	19 f0       	breq	.+6      	; 0x1c328 <_ZN11RHSPIDriver4initEv+0x24>
   1c322:	61 e0       	ldi	r22, 0x01	; 1
   1c324:	0e 94 0b d5 	call	0x1aa16	; 0x1aa16 <pinMode>
   1c328:	e8 81       	ld	r30, Y
   1c32a:	f9 81       	ldd	r31, Y+1	; 0x01
   1c32c:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c32e:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c330:	e0 2d       	mov	r30, r0
   1c332:	ce 01       	movw	r24, r28
   1c334:	19 95       	eicall
   1c336:	64 e6       	ldi	r22, 0x64	; 100
   1c338:	70 e0       	ldi	r23, 0x00	; 0
   1c33a:	80 e0       	ldi	r24, 0x00	; 0
   1c33c:	90 e0       	ldi	r25, 0x00	; 0
   1c33e:	0e 94 0e d4 	call	0x1a81c	; 0x1a81c <delay>
   1c342:	81 e0       	ldi	r24, 0x01	; 1
   1c344:	df 91       	pop	r29
   1c346:	cf 91       	pop	r28
   1c348:	08 95       	ret

0001c34a <_ZN11RHSPIDriver11selectSlaveEv>:
   1c34a:	60 e0       	ldi	r22, 0x00	; 0
   1c34c:	fc 01       	movw	r30, r24
   1c34e:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c350:	0c 94 47 d5 	jmp	0x1aa8e	; 0x1aa8e <digitalWrite>

0001c354 <_ZN11RHSPIDriver13deselectSlaveEv>:
   1c354:	61 e0       	ldi	r22, 0x01	; 1
   1c356:	fc 01       	movw	r30, r24
   1c358:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c35a:	0c 94 47 d5 	jmp	0x1aa8e	; 0x1aa8e <digitalWrite>

0001c35e <_ZN11RHSPIDriverC1EhR12RHGenericSPI>:
   1c35e:	ef 92       	push	r14
   1c360:	ff 92       	push	r15
   1c362:	1f 93       	push	r17
   1c364:	cf 93       	push	r28
   1c366:	df 93       	push	r29
   1c368:	ec 01       	movw	r28, r24
   1c36a:	16 2f       	mov	r17, r22
   1c36c:	7a 01       	movw	r14, r20
   1c36e:	0e 94 c5 d8 	call	0x1b18a	; 0x1b18a <_ZN15RHGenericDriverC1Ev>
   1c372:	85 ed       	ldi	r24, 0xD5	; 213
   1c374:	98 e0       	ldi	r25, 0x08	; 8
   1c376:	99 83       	std	Y+1, r25	; 0x01
   1c378:	88 83       	st	Y, r24
   1c37a:	f9 8e       	std	Y+25, r15	; 0x19
   1c37c:	e8 8e       	std	Y+24, r14	; 0x18
   1c37e:	1a 8f       	std	Y+26, r17	; 0x1a
   1c380:	df 91       	pop	r29
   1c382:	cf 91       	pop	r28
   1c384:	1f 91       	pop	r17
   1c386:	ff 90       	pop	r15
   1c388:	ef 90       	pop	r14
   1c38a:	08 95       	ret

0001c38c <_ZN11RHSPIDriver7spiReadEh>:
   1c38c:	0f 93       	push	r16
   1c38e:	1f 93       	push	r17
   1c390:	cf 93       	push	r28
   1c392:	df 93       	push	r29
   1c394:	ec 01       	movw	r28, r24
   1c396:	16 2f       	mov	r17, r22
   1c398:	0f b7       	in	r16, 0x3f	; 63
   1c39a:	f8 94       	cli
   1c39c:	88 8d       	ldd	r24, Y+24	; 0x18
   1c39e:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3a0:	dc 01       	movw	r26, r24
   1c3a2:	ed 91       	ld	r30, X+
   1c3a4:	fc 91       	ld	r31, X
   1c3a6:	00 88       	ldd	r0, Z+16	; 0x10
   1c3a8:	f1 89       	ldd	r31, Z+17	; 0x11
   1c3aa:	e0 2d       	mov	r30, r0
   1c3ac:	19 95       	eicall
   1c3ae:	e8 81       	ld	r30, Y
   1c3b0:	f9 81       	ldd	r31, Y+1	; 0x01
   1c3b2:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c3b4:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c3b6:	e0 2d       	mov	r30, r0
   1c3b8:	ce 01       	movw	r24, r28
   1c3ba:	19 95       	eicall
   1c3bc:	88 8d       	ldd	r24, Y+24	; 0x18
   1c3be:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3c0:	61 2f       	mov	r22, r17
   1c3c2:	6f 77       	andi	r22, 0x7F	; 127
   1c3c4:	dc 01       	movw	r26, r24
   1c3c6:	ed 91       	ld	r30, X+
   1c3c8:	fc 91       	ld	r31, X
   1c3ca:	01 90       	ld	r0, Z+
   1c3cc:	f0 81       	ld	r31, Z
   1c3ce:	e0 2d       	mov	r30, r0
   1c3d0:	19 95       	eicall
   1c3d2:	88 8d       	ldd	r24, Y+24	; 0x18
   1c3d4:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3d6:	dc 01       	movw	r26, r24
   1c3d8:	ed 91       	ld	r30, X+
   1c3da:	fc 91       	ld	r31, X
   1c3dc:	01 90       	ld	r0, Z+
   1c3de:	f0 81       	ld	r31, Z
   1c3e0:	e0 2d       	mov	r30, r0
   1c3e2:	60 e0       	ldi	r22, 0x00	; 0
   1c3e4:	19 95       	eicall
   1c3e6:	18 2f       	mov	r17, r24
   1c3e8:	e8 81       	ld	r30, Y
   1c3ea:	f9 81       	ldd	r31, Y+1	; 0x01
   1c3ec:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c3ee:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c3f0:	e0 2d       	mov	r30, r0
   1c3f2:	ce 01       	movw	r24, r28
   1c3f4:	19 95       	eicall
   1c3f6:	88 8d       	ldd	r24, Y+24	; 0x18
   1c3f8:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3fa:	dc 01       	movw	r26, r24
   1c3fc:	ed 91       	ld	r30, X+
   1c3fe:	fc 91       	ld	r31, X
   1c400:	02 88       	ldd	r0, Z+18	; 0x12
   1c402:	f3 89       	ldd	r31, Z+19	; 0x13
   1c404:	e0 2d       	mov	r30, r0
   1c406:	19 95       	eicall
   1c408:	0f bf       	out	0x3f, r16	; 63
   1c40a:	81 2f       	mov	r24, r17
   1c40c:	df 91       	pop	r29
   1c40e:	cf 91       	pop	r28
   1c410:	1f 91       	pop	r17
   1c412:	0f 91       	pop	r16
   1c414:	08 95       	ret

0001c416 <_ZN11RHSPIDriver8spiWriteEhh>:
   1c416:	ff 92       	push	r15
   1c418:	0f 93       	push	r16
   1c41a:	1f 93       	push	r17
   1c41c:	cf 93       	push	r28
   1c41e:	df 93       	push	r29
   1c420:	ec 01       	movw	r28, r24
   1c422:	16 2f       	mov	r17, r22
   1c424:	f4 2e       	mov	r15, r20
   1c426:	0f b7       	in	r16, 0x3f	; 63
   1c428:	f8 94       	cli
   1c42a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c42c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c42e:	dc 01       	movw	r26, r24
   1c430:	ed 91       	ld	r30, X+
   1c432:	fc 91       	ld	r31, X
   1c434:	00 88       	ldd	r0, Z+16	; 0x10
   1c436:	f1 89       	ldd	r31, Z+17	; 0x11
   1c438:	e0 2d       	mov	r30, r0
   1c43a:	19 95       	eicall
   1c43c:	e8 81       	ld	r30, Y
   1c43e:	f9 81       	ldd	r31, Y+1	; 0x01
   1c440:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c442:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c444:	e0 2d       	mov	r30, r0
   1c446:	ce 01       	movw	r24, r28
   1c448:	19 95       	eicall
   1c44a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c44c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c44e:	61 2f       	mov	r22, r17
   1c450:	60 68       	ori	r22, 0x80	; 128
   1c452:	dc 01       	movw	r26, r24
   1c454:	ed 91       	ld	r30, X+
   1c456:	fc 91       	ld	r31, X
   1c458:	01 90       	ld	r0, Z+
   1c45a:	f0 81       	ld	r31, Z
   1c45c:	e0 2d       	mov	r30, r0
   1c45e:	19 95       	eicall
   1c460:	18 2f       	mov	r17, r24
   1c462:	88 8d       	ldd	r24, Y+24	; 0x18
   1c464:	99 8d       	ldd	r25, Y+25	; 0x19
   1c466:	dc 01       	movw	r26, r24
   1c468:	ed 91       	ld	r30, X+
   1c46a:	fc 91       	ld	r31, X
   1c46c:	01 90       	ld	r0, Z+
   1c46e:	f0 81       	ld	r31, Z
   1c470:	e0 2d       	mov	r30, r0
   1c472:	6f 2d       	mov	r22, r15
   1c474:	19 95       	eicall
   1c476:	e8 81       	ld	r30, Y
   1c478:	f9 81       	ldd	r31, Y+1	; 0x01
   1c47a:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c47c:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c47e:	e0 2d       	mov	r30, r0
   1c480:	ce 01       	movw	r24, r28
   1c482:	19 95       	eicall
   1c484:	88 8d       	ldd	r24, Y+24	; 0x18
   1c486:	99 8d       	ldd	r25, Y+25	; 0x19
   1c488:	dc 01       	movw	r26, r24
   1c48a:	ed 91       	ld	r30, X+
   1c48c:	fc 91       	ld	r31, X
   1c48e:	02 88       	ldd	r0, Z+18	; 0x12
   1c490:	f3 89       	ldd	r31, Z+19	; 0x13
   1c492:	e0 2d       	mov	r30, r0
   1c494:	19 95       	eicall
   1c496:	0f bf       	out	0x3f, r16	; 63
   1c498:	81 2f       	mov	r24, r17
   1c49a:	df 91       	pop	r29
   1c49c:	cf 91       	pop	r28
   1c49e:	1f 91       	pop	r17
   1c4a0:	0f 91       	pop	r16
   1c4a2:	ff 90       	pop	r15
   1c4a4:	08 95       	ret

0001c4a6 <_ZN11RHSPIDriver12spiBurstReadEhPhh>:
   1c4a6:	bf 92       	push	r11
   1c4a8:	cf 92       	push	r12
   1c4aa:	df 92       	push	r13
   1c4ac:	ef 92       	push	r14
   1c4ae:	ff 92       	push	r15
   1c4b0:	0f 93       	push	r16
   1c4b2:	1f 93       	push	r17
   1c4b4:	cf 93       	push	r28
   1c4b6:	df 93       	push	r29
   1c4b8:	ec 01       	movw	r28, r24
   1c4ba:	06 2f       	mov	r16, r22
   1c4bc:	b4 2e       	mov	r11, r20
   1c4be:	c5 2e       	mov	r12, r21
   1c4c0:	12 2f       	mov	r17, r18
   1c4c2:	df b6       	in	r13, 0x3f	; 63
   1c4c4:	f8 94       	cli
   1c4c6:	88 8d       	ldd	r24, Y+24	; 0x18
   1c4c8:	99 8d       	ldd	r25, Y+25	; 0x19
   1c4ca:	dc 01       	movw	r26, r24
   1c4cc:	ed 91       	ld	r30, X+
   1c4ce:	fc 91       	ld	r31, X
   1c4d0:	00 88       	ldd	r0, Z+16	; 0x10
   1c4d2:	f1 89       	ldd	r31, Z+17	; 0x11
   1c4d4:	e0 2d       	mov	r30, r0
   1c4d6:	19 95       	eicall
   1c4d8:	e8 81       	ld	r30, Y
   1c4da:	f9 81       	ldd	r31, Y+1	; 0x01
   1c4dc:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c4de:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c4e0:	e0 2d       	mov	r30, r0
   1c4e2:	ce 01       	movw	r24, r28
   1c4e4:	19 95       	eicall
   1c4e6:	88 8d       	ldd	r24, Y+24	; 0x18
   1c4e8:	99 8d       	ldd	r25, Y+25	; 0x19
   1c4ea:	60 2f       	mov	r22, r16
   1c4ec:	6f 77       	andi	r22, 0x7F	; 127
   1c4ee:	dc 01       	movw	r26, r24
   1c4f0:	ed 91       	ld	r30, X+
   1c4f2:	fc 91       	ld	r31, X
   1c4f4:	01 90       	ld	r0, Z+
   1c4f6:	f0 81       	ld	r31, Z
   1c4f8:	e0 2d       	mov	r30, r0
   1c4fa:	19 95       	eicall
   1c4fc:	08 2f       	mov	r16, r24
   1c4fe:	eb 2c       	mov	r14, r11
   1c500:	fc 2c       	mov	r15, r12
   1c502:	11 23       	and	r17, r17
   1c504:	79 f0       	breq	.+30     	; 0x1c524 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x7e>
   1c506:	88 8d       	ldd	r24, Y+24	; 0x18
   1c508:	99 8d       	ldd	r25, Y+25	; 0x19
   1c50a:	dc 01       	movw	r26, r24
   1c50c:	ed 91       	ld	r30, X+
   1c50e:	fc 91       	ld	r31, X
   1c510:	01 90       	ld	r0, Z+
   1c512:	f0 81       	ld	r31, Z
   1c514:	e0 2d       	mov	r30, r0
   1c516:	60 e0       	ldi	r22, 0x00	; 0
   1c518:	19 95       	eicall
   1c51a:	f7 01       	movw	r30, r14
   1c51c:	81 93       	st	Z+, r24
   1c51e:	7f 01       	movw	r14, r30
   1c520:	11 50       	subi	r17, 0x01	; 1
   1c522:	ef cf       	rjmp	.-34     	; 0x1c502 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x5c>
   1c524:	e8 81       	ld	r30, Y
   1c526:	f9 81       	ldd	r31, Y+1	; 0x01
   1c528:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c52a:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c52c:	e0 2d       	mov	r30, r0
   1c52e:	ce 01       	movw	r24, r28
   1c530:	19 95       	eicall
   1c532:	88 8d       	ldd	r24, Y+24	; 0x18
   1c534:	99 8d       	ldd	r25, Y+25	; 0x19
   1c536:	dc 01       	movw	r26, r24
   1c538:	ed 91       	ld	r30, X+
   1c53a:	fc 91       	ld	r31, X
   1c53c:	02 88       	ldd	r0, Z+18	; 0x12
   1c53e:	f3 89       	ldd	r31, Z+19	; 0x13
   1c540:	e0 2d       	mov	r30, r0
   1c542:	19 95       	eicall
   1c544:	df be       	out	0x3f, r13	; 63
   1c546:	80 2f       	mov	r24, r16
   1c548:	df 91       	pop	r29
   1c54a:	cf 91       	pop	r28
   1c54c:	1f 91       	pop	r17
   1c54e:	0f 91       	pop	r16
   1c550:	ff 90       	pop	r15
   1c552:	ef 90       	pop	r14
   1c554:	df 90       	pop	r13
   1c556:	cf 90       	pop	r12
   1c558:	bf 90       	pop	r11
   1c55a:	08 95       	ret

0001c55c <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>:
   1c55c:	bf 92       	push	r11
   1c55e:	cf 92       	push	r12
   1c560:	df 92       	push	r13
   1c562:	ef 92       	push	r14
   1c564:	ff 92       	push	r15
   1c566:	0f 93       	push	r16
   1c568:	1f 93       	push	r17
   1c56a:	cf 93       	push	r28
   1c56c:	df 93       	push	r29
   1c56e:	ec 01       	movw	r28, r24
   1c570:	06 2f       	mov	r16, r22
   1c572:	b4 2e       	mov	r11, r20
   1c574:	c5 2e       	mov	r12, r21
   1c576:	12 2f       	mov	r17, r18
   1c578:	df b6       	in	r13, 0x3f	; 63
   1c57a:	f8 94       	cli
   1c57c:	88 8d       	ldd	r24, Y+24	; 0x18
   1c57e:	99 8d       	ldd	r25, Y+25	; 0x19
   1c580:	dc 01       	movw	r26, r24
   1c582:	ed 91       	ld	r30, X+
   1c584:	fc 91       	ld	r31, X
   1c586:	00 88       	ldd	r0, Z+16	; 0x10
   1c588:	f1 89       	ldd	r31, Z+17	; 0x11
   1c58a:	e0 2d       	mov	r30, r0
   1c58c:	19 95       	eicall
   1c58e:	e8 81       	ld	r30, Y
   1c590:	f9 81       	ldd	r31, Y+1	; 0x01
   1c592:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c594:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c596:	e0 2d       	mov	r30, r0
   1c598:	ce 01       	movw	r24, r28
   1c59a:	19 95       	eicall
   1c59c:	88 8d       	ldd	r24, Y+24	; 0x18
   1c59e:	99 8d       	ldd	r25, Y+25	; 0x19
   1c5a0:	60 2f       	mov	r22, r16
   1c5a2:	60 68       	ori	r22, 0x80	; 128
   1c5a4:	dc 01       	movw	r26, r24
   1c5a6:	ed 91       	ld	r30, X+
   1c5a8:	fc 91       	ld	r31, X
   1c5aa:	01 90       	ld	r0, Z+
   1c5ac:	f0 81       	ld	r31, Z
   1c5ae:	e0 2d       	mov	r30, r0
   1c5b0:	19 95       	eicall
   1c5b2:	08 2f       	mov	r16, r24
   1c5b4:	eb 2c       	mov	r14, r11
   1c5b6:	fc 2c       	mov	r15, r12
   1c5b8:	11 23       	and	r17, r17
   1c5ba:	71 f0       	breq	.+28     	; 0x1c5d8 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x7c>
   1c5bc:	88 8d       	ldd	r24, Y+24	; 0x18
   1c5be:	99 8d       	ldd	r25, Y+25	; 0x19
   1c5c0:	f7 01       	movw	r30, r14
   1c5c2:	61 91       	ld	r22, Z+
   1c5c4:	7f 01       	movw	r14, r30
   1c5c6:	dc 01       	movw	r26, r24
   1c5c8:	ed 91       	ld	r30, X+
   1c5ca:	fc 91       	ld	r31, X
   1c5cc:	01 90       	ld	r0, Z+
   1c5ce:	f0 81       	ld	r31, Z
   1c5d0:	e0 2d       	mov	r30, r0
   1c5d2:	19 95       	eicall
   1c5d4:	11 50       	subi	r17, 0x01	; 1
   1c5d6:	f0 cf       	rjmp	.-32     	; 0x1c5b8 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x5c>
   1c5d8:	e8 81       	ld	r30, Y
   1c5da:	f9 81       	ldd	r31, Y+1	; 0x01
   1c5dc:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c5de:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c5e0:	e0 2d       	mov	r30, r0
   1c5e2:	ce 01       	movw	r24, r28
   1c5e4:	19 95       	eicall
   1c5e6:	88 8d       	ldd	r24, Y+24	; 0x18
   1c5e8:	99 8d       	ldd	r25, Y+25	; 0x19
   1c5ea:	dc 01       	movw	r26, r24
   1c5ec:	ed 91       	ld	r30, X+
   1c5ee:	fc 91       	ld	r31, X
   1c5f0:	02 88       	ldd	r0, Z+18	; 0x12
   1c5f2:	f3 89       	ldd	r31, Z+19	; 0x13
   1c5f4:	e0 2d       	mov	r30, r0
   1c5f6:	19 95       	eicall
   1c5f8:	df be       	out	0x3f, r13	; 63
   1c5fa:	80 2f       	mov	r24, r16
   1c5fc:	df 91       	pop	r29
   1c5fe:	cf 91       	pop	r28
   1c600:	1f 91       	pop	r17
   1c602:	0f 91       	pop	r16
   1c604:	ff 90       	pop	r15
   1c606:	ef 90       	pop	r14
   1c608:	df 90       	pop	r13
   1c60a:	cf 90       	pop	r12
   1c60c:	bf 90       	pop	r11
   1c60e:	08 95       	ret

0001c610 <_ZN11RHSPIDriver17spiUsingInterruptEh>:
}

void RHSPIDriver::spiUsingInterrupt(uint8_t interruptNumber)
{
    _spi.usingInterrupt(interruptNumber);
   1c610:	dc 01       	movw	r26, r24
   1c612:	58 96       	adiw	r26, 0x18	; 24
   1c614:	8d 91       	ld	r24, X+
   1c616:	9c 91       	ld	r25, X
   1c618:	59 97       	sbiw	r26, 0x19	; 25
   1c61a:	dc 01       	movw	r26, r24
   1c61c:	ed 91       	ld	r30, X+
   1c61e:	fc 91       	ld	r31, X
   1c620:	04 88       	ldd	r0, Z+20	; 0x14
   1c622:	f5 89       	ldd	r31, Z+21	; 0x15
   1c624:	e0 2d       	mov	r30, r0
   1c626:	19 94       	eijmp

0001c628 <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
   1c628:	10 92 b0 18 	sts	0x18B0, r1	; 0x8018b0 <twi_state>
   1c62c:	81 e0       	ldi	r24, 0x01	; 1
   1c62e:	80 93 ae 18 	sts	0x18AE, r24	; 0x8018ae <twi_sendStop>
   1c632:	10 92 ad 18 	sts	0x18AD, r1	; 0x8018ad <twi_inRepStart>
   1c636:	61 e0       	ldi	r22, 0x01	; 1
   1c638:	84 e1       	ldi	r24, 0x14	; 20
   1c63a:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1c63e:	61 e0       	ldi	r22, 0x01	; 1
   1c640:	85 e1       	ldi	r24, 0x15	; 21
   1c642:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1c646:	e9 eb       	ldi	r30, 0xB9	; 185
   1c648:	f0 e0       	ldi	r31, 0x00	; 0
   1c64a:	80 81       	ld	r24, Z
   1c64c:	8e 7f       	andi	r24, 0xFE	; 254
   1c64e:	80 83       	st	Z, r24
   1c650:	80 81       	ld	r24, Z
   1c652:	8d 7f       	andi	r24, 0xFD	; 253
   1c654:	80 83       	st	Z, r24
   1c656:	88 e4       	ldi	r24, 0x48	; 72
   1c658:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c65c:	85 e4       	ldi	r24, 0x45	; 69
   1c65e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c662:	08 95       	ret

0001c664 <twi_disable>:
   1c664:	ec eb       	ldi	r30, 0xBC	; 188
   1c666:	f0 e0       	ldi	r31, 0x00	; 0
   1c668:	80 81       	ld	r24, Z
   1c66a:	8a 7b       	andi	r24, 0xBA	; 186
   1c66c:	80 83       	st	Z, r24
   1c66e:	60 e0       	ldi	r22, 0x00	; 0
   1c670:	84 e1       	ldi	r24, 0x14	; 20
   1c672:	0e 94 47 d5 	call	0x1aa8e	; 0x1aa8e <digitalWrite>
   1c676:	60 e0       	ldi	r22, 0x00	; 0
   1c678:	85 e1       	ldi	r24, 0x15	; 21
   1c67a:	0c 94 47 d5 	jmp	0x1aa8e	; 0x1aa8e <digitalWrite>

0001c67e <twi_transmit>:
   1c67e:	40 91 5f 18 	lds	r20, 0x185F	; 0x80185f <twi_txBufferLength>
   1c682:	26 2f       	mov	r18, r22
   1c684:	30 e0       	ldi	r19, 0x00	; 0
   1c686:	24 0f       	add	r18, r20
   1c688:	31 1d       	adc	r19, r1
   1c68a:	21 32       	cpi	r18, 0x21	; 33
   1c68c:	31 05       	cpc	r19, r1
   1c68e:	dc f4       	brge	.+54     	; 0x1c6c6 <twi_transmit+0x48>
   1c690:	20 91 b0 18 	lds	r18, 0x18B0	; 0x8018b0 <twi_state>
   1c694:	24 30       	cpi	r18, 0x04	; 4
   1c696:	c9 f4       	brne	.+50     	; 0x1c6ca <twi_transmit+0x4c>
   1c698:	fc 01       	movw	r30, r24
   1c69a:	80 e0       	ldi	r24, 0x00	; 0
   1c69c:	90 e0       	ldi	r25, 0x00	; 0
   1c69e:	86 17       	cp	r24, r22
   1c6a0:	58 f4       	brcc	.+22     	; 0x1c6b8 <twi_transmit+0x3a>
   1c6a2:	30 91 5f 18 	lds	r19, 0x185F	; 0x80185f <twi_txBufferLength>
   1c6a6:	21 91       	ld	r18, Z+
   1c6a8:	dc 01       	movw	r26, r24
   1c6aa:	af 59       	subi	r26, 0x9F	; 159
   1c6ac:	b7 4e       	sbci	r27, 0xE7	; 231
   1c6ae:	a3 0f       	add	r26, r19
   1c6b0:	b1 1d       	adc	r27, r1
   1c6b2:	2c 93       	st	X, r18
   1c6b4:	01 96       	adiw	r24, 0x01	; 1
   1c6b6:	f3 cf       	rjmp	.-26     	; 0x1c69e <twi_transmit+0x20>
   1c6b8:	80 91 5f 18 	lds	r24, 0x185F	; 0x80185f <twi_txBufferLength>
   1c6bc:	68 0f       	add	r22, r24
   1c6be:	60 93 5f 18 	sts	0x185F, r22	; 0x80185f <twi_txBufferLength>
   1c6c2:	80 e0       	ldi	r24, 0x00	; 0
   1c6c4:	08 95       	ret
   1c6c6:	81 e0       	ldi	r24, 0x01	; 1
   1c6c8:	08 95       	ret
   1c6ca:	82 e0       	ldi	r24, 0x02	; 2
   1c6cc:	08 95       	ret

0001c6ce <twi_attachSlaveRxEvent>:
   1c6ce:	90 93 a4 18 	sts	0x18A4, r25	; 0x8018a4 <twi_onSlaveReceive+0x1>
   1c6d2:	80 93 a3 18 	sts	0x18A3, r24	; 0x8018a3 <twi_onSlaveReceive>
   1c6d6:	08 95       	ret

0001c6d8 <twi_attachSlaveTxEvent>:
   1c6d8:	90 93 a6 18 	sts	0x18A6, r25	; 0x8018a6 <twi_onSlaveTransmit+0x1>
   1c6dc:	80 93 a5 18 	sts	0x18A5, r24	; 0x8018a5 <twi_onSlaveTransmit>
   1c6e0:	08 95       	ret

0001c6e2 <twi_releaseBus>:
   1c6e2:	85 ec       	ldi	r24, 0xC5	; 197
   1c6e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c6e8:	10 92 b0 18 	sts	0x18B0, r1	; 0x8018b0 <twi_state>
   1c6ec:	08 95       	ret

0001c6ee <twi_handleTimeout>:
   1c6ee:	cf 93       	push	r28
   1c6f0:	df 93       	push	r29
   1c6f2:	91 e0       	ldi	r25, 0x01	; 1
   1c6f4:	90 93 a8 18 	sts	0x18A8, r25	; 0x8018a8 <twi_timed_out_flag>
   1c6f8:	88 23       	and	r24, r24
   1c6fa:	51 f0       	breq	.+20     	; 0x1c710 <twi_handleTimeout+0x22>
   1c6fc:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c700:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1c704:	af df       	rcall	.-162    	; 0x1c664 <twi_disable>
   1c706:	90 df       	rcall	.-224    	; 0x1c628 <twi_init>
   1c708:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1c70c:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c710:	df 91       	pop	r29
   1c712:	cf 91       	pop	r28
   1c714:	08 95       	ret

0001c716 <twi_writeTo>:
   1c716:	4f 92       	push	r4
   1c718:	5f 92       	push	r5
   1c71a:	6f 92       	push	r6
   1c71c:	7f 92       	push	r7
   1c71e:	8f 92       	push	r8
   1c720:	9f 92       	push	r9
   1c722:	af 92       	push	r10
   1c724:	bf 92       	push	r11
   1c726:	cf 92       	push	r12
   1c728:	df 92       	push	r13
   1c72a:	ef 92       	push	r14
   1c72c:	ff 92       	push	r15
   1c72e:	0f 93       	push	r16
   1c730:	1f 93       	push	r17
   1c732:	cf 93       	push	r28
   1c734:	df 93       	push	r29
   1c736:	41 32       	cpi	r20, 0x21	; 33
   1c738:	08 f0       	brcs	.+2      	; 0x1c73c <twi_writeTo+0x26>
   1c73a:	c5 c0       	rjmp	.+394    	; 0x1c8c6 <twi_writeTo+0x1b0>
   1c73c:	12 2f       	mov	r17, r18
   1c73e:	f4 2e       	mov	r15, r20
   1c740:	d7 2e       	mov	r13, r23
   1c742:	e6 2e       	mov	r14, r22
   1c744:	d8 2f       	mov	r29, r24
   1c746:	0e 94 e9 d3 	call	0x1a7d2	; 0x1a7d2 <micros>
   1c74a:	4b 01       	movw	r8, r22
   1c74c:	5c 01       	movw	r10, r24
   1c74e:	c0 91 b0 18 	lds	r28, 0x18B0	; 0x8018b0 <twi_state>
   1c752:	cc 23       	and	r28, r28
   1c754:	11 f1       	breq	.+68     	; 0x1c79a <twi_writeTo+0x84>
   1c756:	80 91 a9 18 	lds	r24, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c75a:	90 91 aa 18 	lds	r25, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c75e:	a0 91 ab 18 	lds	r26, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c762:	b0 91 ac 18 	lds	r27, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c766:	89 2b       	or	r24, r25
   1c768:	8a 2b       	or	r24, r26
   1c76a:	8b 2b       	or	r24, r27
   1c76c:	81 f3       	breq	.-32     	; 0x1c74e <twi_writeTo+0x38>
   1c76e:	0e 94 e9 d3 	call	0x1a7d2	; 0x1a7d2 <micros>
   1c772:	40 90 a9 18 	lds	r4, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c776:	50 90 aa 18 	lds	r5, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c77a:	60 90 ab 18 	lds	r6, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c77e:	70 90 ac 18 	lds	r7, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c782:	dc 01       	movw	r26, r24
   1c784:	cb 01       	movw	r24, r22
   1c786:	88 19       	sub	r24, r8
   1c788:	99 09       	sbc	r25, r9
   1c78a:	aa 09       	sbc	r26, r10
   1c78c:	bb 09       	sbc	r27, r11
   1c78e:	48 16       	cp	r4, r24
   1c790:	59 06       	cpc	r5, r25
   1c792:	6a 06       	cpc	r6, r26
   1c794:	7b 06       	cpc	r7, r27
   1c796:	d8 f6       	brcc	.-74     	; 0x1c74e <twi_writeTo+0x38>
   1c798:	83 c0       	rjmp	.+262    	; 0x1c8a0 <twi_writeTo+0x18a>
   1c79a:	82 e0       	ldi	r24, 0x02	; 2
   1c79c:	80 93 b0 18 	sts	0x18B0, r24	; 0x8018b0 <twi_state>
   1c7a0:	00 93 ae 18 	sts	0x18AE, r16	; 0x8018ae <twi_sendStop>
   1c7a4:	8f ef       	ldi	r24, 0xFF	; 255
   1c7a6:	80 93 3d 18 	sts	0x183D, r24	; 0x80183d <twi_error>
   1c7aa:	10 92 82 18 	sts	0x1882, r1	; 0x801882 <twi_masterBufferIndex>
   1c7ae:	f0 92 81 18 	sts	0x1881, r15	; 0x801881 <twi_masterBufferLength>
   1c7b2:	9e 2d       	mov	r25, r14
   1c7b4:	a3 e8       	ldi	r26, 0x83	; 131
   1c7b6:	b8 e1       	ldi	r27, 0x18	; 24
   1c7b8:	ee 2d       	mov	r30, r14
   1c7ba:	fd 2d       	mov	r31, r13
   1c7bc:	8e 2f       	mov	r24, r30
   1c7be:	89 1b       	sub	r24, r25
   1c7c0:	8f 15       	cp	r24, r15
   1c7c2:	18 f4       	brcc	.+6      	; 0x1c7ca <twi_writeTo+0xb4>
   1c7c4:	81 91       	ld	r24, Z+
   1c7c6:	8d 93       	st	X+, r24
   1c7c8:	f9 cf       	rjmp	.-14     	; 0x1c7bc <twi_writeTo+0xa6>
   1c7ca:	10 92 af 18 	sts	0x18AF, r1	; 0x8018af <twi_slarw>
   1c7ce:	90 91 af 18 	lds	r25, 0x18AF	; 0x8018af <twi_slarw>
   1c7d2:	dd 0f       	add	r29, r29
   1c7d4:	d9 2b       	or	r29, r25
   1c7d6:	d0 93 af 18 	sts	0x18AF, r29	; 0x8018af <twi_slarw>
   1c7da:	80 91 ad 18 	lds	r24, 0x18AD	; 0x8018ad <twi_inRepStart>
   1c7de:	81 30       	cpi	r24, 0x01	; 1
   1c7e0:	89 f5       	brne	.+98     	; 0x1c844 <twi_writeTo+0x12e>
   1c7e2:	10 92 ad 18 	sts	0x18AD, r1	; 0x8018ad <twi_inRepStart>
   1c7e6:	0e 94 e9 d3 	call	0x1a7d2	; 0x1a7d2 <micros>
   1c7ea:	6b 01       	movw	r12, r22
   1c7ec:	7c 01       	movw	r14, r24
   1c7ee:	80 91 af 18 	lds	r24, 0x18AF	; 0x8018af <twi_slarw>
   1c7f2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c7f6:	80 91 a9 18 	lds	r24, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c7fa:	90 91 aa 18 	lds	r25, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c7fe:	a0 91 ab 18 	lds	r26, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c802:	b0 91 ac 18 	lds	r27, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c806:	89 2b       	or	r24, r25
   1c808:	8a 2b       	or	r24, r26
   1c80a:	8b 2b       	or	r24, r27
   1c80c:	a9 f0       	breq	.+42     	; 0x1c838 <twi_writeTo+0x122>
   1c80e:	0e 94 e9 d3 	call	0x1a7d2	; 0x1a7d2 <micros>
   1c812:	80 90 a9 18 	lds	r8, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c816:	90 90 aa 18 	lds	r9, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c81a:	a0 90 ab 18 	lds	r10, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c81e:	b0 90 ac 18 	lds	r11, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c822:	dc 01       	movw	r26, r24
   1c824:	cb 01       	movw	r24, r22
   1c826:	8c 19       	sub	r24, r12
   1c828:	9d 09       	sbc	r25, r13
   1c82a:	ae 09       	sbc	r26, r14
   1c82c:	bf 09       	sbc	r27, r15
   1c82e:	88 16       	cp	r8, r24
   1c830:	99 06       	cpc	r9, r25
   1c832:	aa 06       	cpc	r10, r26
   1c834:	bb 06       	cpc	r11, r27
   1c836:	a0 f1       	brcs	.+104    	; 0x1c8a0 <twi_writeTo+0x18a>
   1c838:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c83c:	83 fd       	sbrc	r24, 3
   1c83e:	d7 cf       	rjmp	.-82     	; 0x1c7ee <twi_writeTo+0xd8>
   1c840:	85 ec       	ldi	r24, 0xC5	; 197
   1c842:	01 c0       	rjmp	.+2      	; 0x1c846 <twi_writeTo+0x130>
   1c844:	85 ee       	ldi	r24, 0xE5	; 229
   1c846:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c84a:	0e 94 e9 d3 	call	0x1a7d2	; 0x1a7d2 <micros>
   1c84e:	6b 01       	movw	r12, r22
   1c850:	7c 01       	movw	r14, r24
   1c852:	11 23       	and	r17, r17
   1c854:	51 f1       	breq	.+84     	; 0x1c8aa <twi_writeTo+0x194>
   1c856:	80 91 b0 18 	lds	r24, 0x18B0	; 0x8018b0 <twi_state>
   1c85a:	82 30       	cpi	r24, 0x02	; 2
   1c85c:	31 f5       	brne	.+76     	; 0x1c8aa <twi_writeTo+0x194>
   1c85e:	80 91 a9 18 	lds	r24, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c862:	90 91 aa 18 	lds	r25, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c866:	a0 91 ab 18 	lds	r26, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c86a:	b0 91 ac 18 	lds	r27, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c86e:	89 2b       	or	r24, r25
   1c870:	8a 2b       	or	r24, r26
   1c872:	8b 2b       	or	r24, r27
   1c874:	71 f3       	breq	.-36     	; 0x1c852 <twi_writeTo+0x13c>
   1c876:	0e 94 e9 d3 	call	0x1a7d2	; 0x1a7d2 <micros>
   1c87a:	80 90 a9 18 	lds	r8, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c87e:	90 90 aa 18 	lds	r9, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c882:	a0 90 ab 18 	lds	r10, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c886:	b0 90 ac 18 	lds	r11, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c88a:	dc 01       	movw	r26, r24
   1c88c:	cb 01       	movw	r24, r22
   1c88e:	8c 19       	sub	r24, r12
   1c890:	9d 09       	sbc	r25, r13
   1c892:	ae 09       	sbc	r26, r14
   1c894:	bf 09       	sbc	r27, r15
   1c896:	88 16       	cp	r8, r24
   1c898:	99 06       	cpc	r9, r25
   1c89a:	aa 06       	cpc	r10, r26
   1c89c:	bb 06       	cpc	r11, r27
   1c89e:	c8 f6       	brcc	.-78     	; 0x1c852 <twi_writeTo+0x13c>
   1c8a0:	80 91 a7 18 	lds	r24, 0x18A7	; 0x8018a7 <twi_do_reset_on_timeout>
   1c8a4:	24 df       	rcall	.-440    	; 0x1c6ee <twi_handleTimeout>
   1c8a6:	c5 e0       	ldi	r28, 0x05	; 5
   1c8a8:	13 c0       	rjmp	.+38     	; 0x1c8d0 <twi_writeTo+0x1ba>
   1c8aa:	80 91 3d 18 	lds	r24, 0x183D	; 0x80183d <twi_error>
   1c8ae:	8f 3f       	cpi	r24, 0xFF	; 255
   1c8b0:	79 f0       	breq	.+30     	; 0x1c8d0 <twi_writeTo+0x1ba>
   1c8b2:	80 91 3d 18 	lds	r24, 0x183D	; 0x80183d <twi_error>
   1c8b6:	80 32       	cpi	r24, 0x20	; 32
   1c8b8:	41 f0       	breq	.+16     	; 0x1c8ca <twi_writeTo+0x1b4>
   1c8ba:	80 91 3d 18 	lds	r24, 0x183D	; 0x80183d <twi_error>
   1c8be:	80 33       	cpi	r24, 0x30	; 48
   1c8c0:	31 f0       	breq	.+12     	; 0x1c8ce <twi_writeTo+0x1b8>
   1c8c2:	c4 e0       	ldi	r28, 0x04	; 4
   1c8c4:	05 c0       	rjmp	.+10     	; 0x1c8d0 <twi_writeTo+0x1ba>
   1c8c6:	c1 e0       	ldi	r28, 0x01	; 1
   1c8c8:	03 c0       	rjmp	.+6      	; 0x1c8d0 <twi_writeTo+0x1ba>
   1c8ca:	c2 e0       	ldi	r28, 0x02	; 2
   1c8cc:	01 c0       	rjmp	.+2      	; 0x1c8d0 <twi_writeTo+0x1ba>
   1c8ce:	c3 e0       	ldi	r28, 0x03	; 3
   1c8d0:	8c 2f       	mov	r24, r28
   1c8d2:	df 91       	pop	r29
   1c8d4:	cf 91       	pop	r28
   1c8d6:	1f 91       	pop	r17
   1c8d8:	0f 91       	pop	r16
   1c8da:	ff 90       	pop	r15
   1c8dc:	ef 90       	pop	r14
   1c8de:	df 90       	pop	r13
   1c8e0:	cf 90       	pop	r12
   1c8e2:	bf 90       	pop	r11
   1c8e4:	af 90       	pop	r10
   1c8e6:	9f 90       	pop	r9
   1c8e8:	8f 90       	pop	r8
   1c8ea:	7f 90       	pop	r7
   1c8ec:	6f 90       	pop	r6
   1c8ee:	5f 90       	pop	r5
   1c8f0:	4f 90       	pop	r4
   1c8f2:	08 95       	ret

0001c8f4 <twi_stop>:
   1c8f4:	85 ed       	ldi	r24, 0xD5	; 213
   1c8f6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c8fa:	80 91 a9 18 	lds	r24, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c8fe:	90 91 aa 18 	lds	r25, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c902:	a0 91 ab 18 	lds	r26, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c906:	b0 91 ac 18 	lds	r27, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c90a:	07 96       	adiw	r24, 0x07	; 7
   1c90c:	a1 1d       	adc	r26, r1
   1c90e:	b1 1d       	adc	r27, r1
   1c910:	23 e0       	ldi	r18, 0x03	; 3
   1c912:	b6 95       	lsr	r27
   1c914:	a7 95       	ror	r26
   1c916:	97 95       	ror	r25
   1c918:	87 95       	ror	r24
   1c91a:	2a 95       	dec	r18
   1c91c:	d1 f7       	brne	.-12     	; 0x1c912 <twi_stop+0x1e>
   1c91e:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c922:	24 ff       	sbrs	r18, 4
   1c924:	1b c0       	rjmp	.+54     	; 0x1c95c <twi_stop+0x68>
   1c926:	40 91 a9 18 	lds	r20, 0x18A9	; 0x8018a9 <twi_timeout_us>
   1c92a:	50 91 aa 18 	lds	r21, 0x18AA	; 0x8018aa <twi_timeout_us+0x1>
   1c92e:	60 91 ab 18 	lds	r22, 0x18AB	; 0x8018ab <twi_timeout_us+0x2>
   1c932:	70 91 ac 18 	lds	r23, 0x18AC	; 0x8018ac <twi_timeout_us+0x3>
   1c936:	45 2b       	or	r20, r21
   1c938:	46 2b       	or	r20, r22
   1c93a:	47 2b       	or	r20, r23
   1c93c:	81 f3       	breq	.-32     	; 0x1c91e <twi_stop+0x2a>
   1c93e:	00 97       	sbiw	r24, 0x00	; 0
   1c940:	a1 05       	cpc	r26, r1
   1c942:	b1 05       	cpc	r27, r1
   1c944:	41 f0       	breq	.+16     	; 0x1c956 <twi_stop+0x62>
   1c946:	25 e3       	ldi	r18, 0x35	; 53
   1c948:	2a 95       	dec	r18
   1c94a:	f1 f7       	brne	.-4      	; 0x1c948 <twi_stop+0x54>
   1c94c:	00 00       	nop
   1c94e:	01 97       	sbiw	r24, 0x01	; 1
   1c950:	a1 09       	sbc	r26, r1
   1c952:	b1 09       	sbc	r27, r1
   1c954:	e4 cf       	rjmp	.-56     	; 0x1c91e <twi_stop+0x2a>
   1c956:	80 91 a7 18 	lds	r24, 0x18A7	; 0x8018a7 <twi_do_reset_on_timeout>
   1c95a:	c9 ce       	rjmp	.-622    	; 0x1c6ee <twi_handleTimeout>
   1c95c:	10 92 b0 18 	sts	0x18B0, r1	; 0x8018b0 <twi_state>
   1c960:	08 95       	ret

0001c962 <__vector_39>:

ISR(TWI_vect)
{
   1c962:	1f 92       	push	r1
   1c964:	0f 92       	push	r0
   1c966:	0f b6       	in	r0, 0x3f	; 63
   1c968:	0f 92       	push	r0
   1c96a:	11 24       	eor	r1, r1
   1c96c:	0b b6       	in	r0, 0x3b	; 59
   1c96e:	0f 92       	push	r0
   1c970:	2f 93       	push	r18
   1c972:	3f 93       	push	r19
   1c974:	4f 93       	push	r20
   1c976:	5f 93       	push	r21
   1c978:	6f 93       	push	r22
   1c97a:	7f 93       	push	r23
   1c97c:	8f 93       	push	r24
   1c97e:	9f 93       	push	r25
   1c980:	af 93       	push	r26
   1c982:	bf 93       	push	r27
   1c984:	ef 93       	push	r30
   1c986:	ff 93       	push	r31
  switch(TW_STATUS){
   1c988:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
   1c98c:	88 7f       	andi	r24, 0xF8	; 248
   1c98e:	80 36       	cpi	r24, 0x60	; 96
   1c990:	09 f4       	brne	.+2      	; 0x1c994 <__vector_39+0x32>
   1c992:	9d c0       	rjmp	.+314    	; 0x1cace <__vector_39+0x16c>
   1c994:	70 f5       	brcc	.+92     	; 0x1c9f2 <__vector_39+0x90>
   1c996:	88 32       	cpi	r24, 0x28	; 40
   1c998:	09 f4       	brne	.+2      	; 0x1c99c <__vector_39+0x3a>
   1c99a:	5c c0       	rjmp	.+184    	; 0x1ca54 <__vector_39+0xf2>
   1c99c:	90 f4       	brcc	.+36     	; 0x1c9c2 <__vector_39+0x60>
   1c99e:	80 31       	cpi	r24, 0x10	; 16
   1c9a0:	09 f4       	brne	.+2      	; 0x1c9a4 <__vector_39+0x42>
   1c9a2:	55 c0       	rjmp	.+170    	; 0x1ca4e <__vector_39+0xec>
   1c9a4:	38 f4       	brcc	.+14     	; 0x1c9b4 <__vector_39+0x52>
   1c9a6:	88 23       	and	r24, r24
   1c9a8:	09 f4       	brne	.+2      	; 0x1c9ac <__vector_39+0x4a>
   1c9aa:	f3 c0       	rjmp	.+486    	; 0x1cb92 <__vector_39+0x230>
   1c9ac:	88 30       	cpi	r24, 0x08	; 8
   1c9ae:	09 f4       	brne	.+2      	; 0x1c9b2 <__vector_39+0x50>
   1c9b0:	4e c0       	rjmp	.+156    	; 0x1ca4e <__vector_39+0xec>
   1c9b2:	f2 c0       	rjmp	.+484    	; 0x1cb98 <__vector_39+0x236>
   1c9b4:	88 31       	cpi	r24, 0x18	; 24
   1c9b6:	09 f4       	brne	.+2      	; 0x1c9ba <__vector_39+0x58>
   1c9b8:	4d c0       	rjmp	.+154    	; 0x1ca54 <__vector_39+0xf2>
   1c9ba:	80 32       	cpi	r24, 0x20	; 32
   1c9bc:	09 f4       	brne	.+2      	; 0x1c9c0 <__vector_39+0x5e>
   1c9be:	5e c0       	rjmp	.+188    	; 0x1ca7c <__vector_39+0x11a>
   1c9c0:	eb c0       	rjmp	.+470    	; 0x1cb98 <__vector_39+0x236>
   1c9c2:	80 34       	cpi	r24, 0x40	; 64
   1c9c4:	09 f4       	brne	.+2      	; 0x1c9c8 <__vector_39+0x66>
   1c9c6:	69 c0       	rjmp	.+210    	; 0x1ca9a <__vector_39+0x138>
   1c9c8:	50 f4       	brcc	.+20     	; 0x1c9de <__vector_39+0x7c>
   1c9ca:	80 33       	cpi	r24, 0x30	; 48
   1c9cc:	09 f4       	brne	.+2      	; 0x1c9d0 <__vector_39+0x6e>
   1c9ce:	56 c0       	rjmp	.+172    	; 0x1ca7c <__vector_39+0x11a>
   1c9d0:	88 33       	cpi	r24, 0x38	; 56
   1c9d2:	09 f0       	breq	.+2      	; 0x1c9d6 <__vector_39+0x74>
   1c9d4:	e1 c0       	rjmp	.+450    	; 0x1cb98 <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
   1c9d6:	80 93 3d 18 	sts	0x183D, r24	; 0x80183d <twi_error>
      twi_releaseBus();
   1c9da:	83 de       	rcall	.-762    	; 0x1c6e2 <twi_releaseBus>
      break;
   1c9dc:	dd c0       	rjmp	.+442    	; 0x1cb98 <__vector_39+0x236>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
   1c9de:	80 35       	cpi	r24, 0x50	; 80
   1c9e0:	09 f4       	brne	.+2      	; 0x1c9e4 <__vector_39+0x82>
   1c9e2:	4f c0       	rjmp	.+158    	; 0x1ca82 <__vector_39+0x120>
   1c9e4:	88 35       	cpi	r24, 0x58	; 88
   1c9e6:	09 f4       	brne	.+2      	; 0x1c9ea <__vector_39+0x88>
   1c9e8:	5d c0       	rjmp	.+186    	; 0x1caa4 <__vector_39+0x142>
   1c9ea:	88 34       	cpi	r24, 0x48	; 72
   1c9ec:	09 f0       	breq	.+2      	; 0x1c9f0 <__vector_39+0x8e>
   1c9ee:	d4 c0       	rjmp	.+424    	; 0x1cb98 <__vector_39+0x236>
   1c9f0:	d2 c0       	rjmp	.+420    	; 0x1cb96 <__vector_39+0x234>
   1c9f2:	88 39       	cpi	r24, 0x98	; 152
   1c9f4:	09 f4       	brne	.+2      	; 0x1c9f8 <__vector_39+0x96>
   1c9f6:	c3 c0       	rjmp	.+390    	; 0x1cb7e <__vector_39+0x21c>
   1c9f8:	a8 f4       	brcc	.+42     	; 0x1ca24 <__vector_39+0xc2>
   1c9fa:	88 37       	cpi	r24, 0x78	; 120
   1c9fc:	09 f4       	brne	.+2      	; 0x1ca00 <__vector_39+0x9e>
   1c9fe:	67 c0       	rjmp	.+206    	; 0x1cace <__vector_39+0x16c>
   1ca00:	38 f4       	brcc	.+14     	; 0x1ca10 <__vector_39+0xae>
   1ca02:	88 36       	cpi	r24, 0x68	; 104
   1ca04:	09 f4       	brne	.+2      	; 0x1ca08 <__vector_39+0xa6>
   1ca06:	63 c0       	rjmp	.+198    	; 0x1cace <__vector_39+0x16c>
   1ca08:	80 37       	cpi	r24, 0x70	; 112
   1ca0a:	09 f4       	brne	.+2      	; 0x1ca0e <__vector_39+0xac>
   1ca0c:	60 c0       	rjmp	.+192    	; 0x1cace <__vector_39+0x16c>
   1ca0e:	c4 c0       	rjmp	.+392    	; 0x1cb98 <__vector_39+0x236>
   1ca10:	88 38       	cpi	r24, 0x88	; 136
   1ca12:	09 f4       	brne	.+2      	; 0x1ca16 <__vector_39+0xb4>
   1ca14:	b4 c0       	rjmp	.+360    	; 0x1cb7e <__vector_39+0x21c>
   1ca16:	80 39       	cpi	r24, 0x90	; 144
   1ca18:	09 f4       	brne	.+2      	; 0x1ca1c <__vector_39+0xba>
   1ca1a:	5f c0       	rjmp	.+190    	; 0x1cada <__vector_39+0x178>
   1ca1c:	80 38       	cpi	r24, 0x80	; 128
   1ca1e:	09 f0       	breq	.+2      	; 0x1ca22 <__vector_39+0xc0>
   1ca20:	bb c0       	rjmp	.+374    	; 0x1cb98 <__vector_39+0x236>
   1ca22:	5b c0       	rjmp	.+182    	; 0x1cada <__vector_39+0x178>
   1ca24:	80 3b       	cpi	r24, 0xB0	; 176
   1ca26:	09 f4       	brne	.+2      	; 0x1ca2a <__vector_39+0xc8>
   1ca28:	82 c0       	rjmp	.+260    	; 0x1cb2e <__vector_39+0x1cc>
   1ca2a:	38 f4       	brcc	.+14     	; 0x1ca3a <__vector_39+0xd8>
   1ca2c:	80 3a       	cpi	r24, 0xA0	; 160
   1ca2e:	09 f4       	brne	.+2      	; 0x1ca32 <__vector_39+0xd0>
   1ca30:	66 c0       	rjmp	.+204    	; 0x1cafe <__vector_39+0x19c>
   1ca32:	88 3a       	cpi	r24, 0xA8	; 168
   1ca34:	09 f4       	brne	.+2      	; 0x1ca38 <__vector_39+0xd6>
   1ca36:	7b c0       	rjmp	.+246    	; 0x1cb2e <__vector_39+0x1cc>
   1ca38:	af c0       	rjmp	.+350    	; 0x1cb98 <__vector_39+0x236>
   1ca3a:	80 3c       	cpi	r24, 0xC0	; 192
   1ca3c:	09 f4       	brne	.+2      	; 0x1ca40 <__vector_39+0xde>
   1ca3e:	a3 c0       	rjmp	.+326    	; 0x1cb86 <__vector_39+0x224>
   1ca40:	88 3c       	cpi	r24, 0xC8	; 200
   1ca42:	09 f4       	brne	.+2      	; 0x1ca46 <__vector_39+0xe4>
   1ca44:	a0 c0       	rjmp	.+320    	; 0x1cb86 <__vector_39+0x224>
   1ca46:	88 3b       	cpi	r24, 0xB8	; 184
   1ca48:	09 f4       	brne	.+2      	; 0x1ca4c <__vector_39+0xea>
   1ca4a:	86 c0       	rjmp	.+268    	; 0x1cb58 <__vector_39+0x1f6>
   1ca4c:	a5 c0       	rjmp	.+330    	; 0x1cb98 <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
   1ca4e:	80 91 af 18 	lds	r24, 0x18AF	; 0x8018af <twi_slarw>
   1ca52:	10 c0       	rjmp	.+32     	; 0x1ca74 <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1ca54:	90 91 82 18 	lds	r25, 0x1882	; 0x801882 <twi_masterBufferIndex>
   1ca58:	80 91 81 18 	lds	r24, 0x1881	; 0x801881 <twi_masterBufferLength>
   1ca5c:	98 17       	cp	r25, r24
   1ca5e:	70 f5       	brcc	.+92     	; 0x1cabc <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
   1ca60:	e0 91 82 18 	lds	r30, 0x1882	; 0x801882 <twi_masterBufferIndex>
   1ca64:	81 e0       	ldi	r24, 0x01	; 1
   1ca66:	8e 0f       	add	r24, r30
   1ca68:	80 93 82 18 	sts	0x1882, r24	; 0x801882 <twi_masterBufferIndex>
   1ca6c:	f0 e0       	ldi	r31, 0x00	; 0
   1ca6e:	ed 57       	subi	r30, 0x7D	; 125
   1ca70:	f7 4e       	sbci	r31, 0xE7	; 231
   1ca72:	80 81       	ld	r24, Z
   1ca74:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1ca78:	85 ec       	ldi	r24, 0xC5	; 197
   1ca7a:	82 c0       	rjmp	.+260    	; 0x1cb80 <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
   1ca7c:	80 93 3d 18 	sts	0x183D, r24	; 0x80183d <twi_error>
   1ca80:	8a c0       	rjmp	.+276    	; 0x1cb96 <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1ca82:	e0 91 82 18 	lds	r30, 0x1882	; 0x801882 <twi_masterBufferIndex>
   1ca86:	81 e0       	ldi	r24, 0x01	; 1
   1ca88:	8e 0f       	add	r24, r30
   1ca8a:	80 93 82 18 	sts	0x1882, r24	; 0x801882 <twi_masterBufferIndex>
   1ca8e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1ca92:	f0 e0       	ldi	r31, 0x00	; 0
   1ca94:	ed 57       	subi	r30, 0x7D	; 125
   1ca96:	f7 4e       	sbci	r31, 0xE7	; 231
   1ca98:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1ca9a:	90 91 82 18 	lds	r25, 0x1882	; 0x801882 <twi_masterBufferIndex>
   1ca9e:	80 91 81 18 	lds	r24, 0x1881	; 0x801881 <twi_masterBufferLength>
   1caa2:	6a c0       	rjmp	.+212    	; 0x1cb78 <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1caa4:	e0 91 82 18 	lds	r30, 0x1882	; 0x801882 <twi_masterBufferIndex>
   1caa8:	81 e0       	ldi	r24, 0x01	; 1
   1caaa:	8e 0f       	add	r24, r30
   1caac:	80 93 82 18 	sts	0x1882, r24	; 0x801882 <twi_masterBufferIndex>
   1cab0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1cab4:	f0 e0       	ldi	r31, 0x00	; 0
   1cab6:	ed 57       	subi	r30, 0x7D	; 125
   1cab8:	f7 4e       	sbci	r31, 0xE7	; 231
   1caba:	80 83       	st	Z, r24
      if (twi_sendStop){
   1cabc:	80 91 ae 18 	lds	r24, 0x18AE	; 0x8018ae <twi_sendStop>
   1cac0:	81 11       	cpse	r24, r1
   1cac2:	69 c0       	rjmp	.+210    	; 0x1cb96 <__vector_39+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
   1cac4:	81 e0       	ldi	r24, 0x01	; 1
   1cac6:	80 93 ad 18 	sts	0x18AD, r24	; 0x8018ad <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
   1caca:	84 ea       	ldi	r24, 0xA4	; 164
   1cacc:	5d c0       	rjmp	.+186    	; 0x1cb88 <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
   1cace:	83 e0       	ldi	r24, 0x03	; 3
   1cad0:	80 93 b0 18 	sts	0x18B0, r24	; 0x8018b0 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
   1cad4:	10 92 3e 18 	sts	0x183E, r1	; 0x80183e <twi_rxBufferIndex>
   1cad8:	cf cf       	rjmp	.-98     	; 0x1ca78 <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1cada:	80 91 3e 18 	lds	r24, 0x183E	; 0x80183e <twi_rxBufferIndex>
   1cade:	80 32       	cpi	r24, 0x20	; 32
   1cae0:	08 f0       	brcs	.+2      	; 0x1cae4 <__vector_39+0x182>
   1cae2:	4d c0       	rjmp	.+154    	; 0x1cb7e <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
   1cae4:	e0 91 3e 18 	lds	r30, 0x183E	; 0x80183e <twi_rxBufferIndex>
   1cae8:	81 e0       	ldi	r24, 0x01	; 1
   1caea:	8e 0f       	add	r24, r30
   1caec:	80 93 3e 18 	sts	0x183E, r24	; 0x80183e <twi_rxBufferIndex>
   1caf0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1caf4:	f0 e0       	ldi	r31, 0x00	; 0
   1caf6:	e1 5c       	subi	r30, 0xC1	; 193
   1caf8:	f7 4e       	sbci	r31, 0xE7	; 231
   1cafa:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
   1cafc:	bd cf       	rjmp	.-134    	; 0x1ca78 <__vector_39+0x116>
   1cafe:	f1 dd       	rcall	.-1054   	; 0x1c6e2 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1cb00:	80 91 3e 18 	lds	r24, 0x183E	; 0x80183e <twi_rxBufferIndex>
   1cb04:	80 32       	cpi	r24, 0x20	; 32
   1cb06:	30 f4       	brcc	.+12     	; 0x1cb14 <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
   1cb08:	e0 91 3e 18 	lds	r30, 0x183E	; 0x80183e <twi_rxBufferIndex>
   1cb0c:	f0 e0       	ldi	r31, 0x00	; 0
   1cb0e:	e1 5c       	subi	r30, 0xC1	; 193
   1cb10:	f7 4e       	sbci	r31, 0xE7	; 231
   1cb12:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
   1cb14:	60 91 3e 18 	lds	r22, 0x183E	; 0x80183e <twi_rxBufferIndex>
   1cb18:	70 e0       	ldi	r23, 0x00	; 0
   1cb1a:	e0 91 a3 18 	lds	r30, 0x18A3	; 0x8018a3 <twi_onSlaveReceive>
   1cb1e:	f0 91 a4 18 	lds	r31, 0x18A4	; 0x8018a4 <twi_onSlaveReceive+0x1>
   1cb22:	8f e3       	ldi	r24, 0x3F	; 63
   1cb24:	98 e1       	ldi	r25, 0x18	; 24
   1cb26:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
   1cb28:	10 92 3e 18 	sts	0x183E, r1	; 0x80183e <twi_rxBufferIndex>
      break;
   1cb2c:	35 c0       	rjmp	.+106    	; 0x1cb98 <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
   1cb2e:	84 e0       	ldi	r24, 0x04	; 4
   1cb30:	80 93 b0 18 	sts	0x18B0, r24	; 0x8018b0 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
   1cb34:	10 92 60 18 	sts	0x1860, r1	; 0x801860 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
   1cb38:	10 92 5f 18 	sts	0x185F, r1	; 0x80185f <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
   1cb3c:	e0 91 a5 18 	lds	r30, 0x18A5	; 0x8018a5 <twi_onSlaveTransmit>
   1cb40:	f0 91 a6 18 	lds	r31, 0x18A6	; 0x8018a6 <twi_onSlaveTransmit+0x1>
   1cb44:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
   1cb46:	80 91 5f 18 	lds	r24, 0x185F	; 0x80185f <twi_txBufferLength>
   1cb4a:	81 11       	cpse	r24, r1
   1cb4c:	05 c0       	rjmp	.+10     	; 0x1cb58 <__vector_39+0x1f6>
        twi_txBufferLength = 1;
   1cb4e:	81 e0       	ldi	r24, 0x01	; 1
   1cb50:	80 93 5f 18 	sts	0x185F, r24	; 0x80185f <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
   1cb54:	10 92 61 18 	sts	0x1861, r1	; 0x801861 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
   1cb58:	e0 91 60 18 	lds	r30, 0x1860	; 0x801860 <twi_txBufferIndex>
   1cb5c:	81 e0       	ldi	r24, 0x01	; 1
   1cb5e:	8e 0f       	add	r24, r30
   1cb60:	80 93 60 18 	sts	0x1860, r24	; 0x801860 <twi_txBufferIndex>
   1cb64:	f0 e0       	ldi	r31, 0x00	; 0
   1cb66:	ef 59       	subi	r30, 0x9F	; 159
   1cb68:	f7 4e       	sbci	r31, 0xE7	; 231
   1cb6a:	80 81       	ld	r24, Z
   1cb6c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
   1cb70:	90 91 60 18 	lds	r25, 0x1860	; 0x801860 <twi_txBufferIndex>
   1cb74:	80 91 5f 18 	lds	r24, 0x185F	; 0x80185f <twi_txBufferLength>
   1cb78:	98 17       	cp	r25, r24
   1cb7a:	08 f4       	brcc	.+2      	; 0x1cb7e <__vector_39+0x21c>
   1cb7c:	7d cf       	rjmp	.-262    	; 0x1ca78 <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
   1cb7e:	85 e8       	ldi	r24, 0x85	; 133
   1cb80:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1cb84:	09 c0       	rjmp	.+18     	; 0x1cb98 <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1cb86:	85 ec       	ldi	r24, 0xC5	; 197
   1cb88:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
   1cb8c:	10 92 b0 18 	sts	0x18B0, r1	; 0x8018b0 <twi_state>
      break;
   1cb90:	03 c0       	rjmp	.+6      	; 0x1cb98 <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
   1cb92:	10 92 3d 18 	sts	0x183D, r1	; 0x80183d <twi_error>
      twi_stop();
   1cb96:	ae de       	rcall	.-676    	; 0x1c8f4 <twi_stop>
      break;
  }
}
   1cb98:	ff 91       	pop	r31
   1cb9a:	ef 91       	pop	r30
   1cb9c:	bf 91       	pop	r27
   1cb9e:	af 91       	pop	r26
   1cba0:	9f 91       	pop	r25
   1cba2:	8f 91       	pop	r24
   1cba4:	7f 91       	pop	r23
   1cba6:	6f 91       	pop	r22
   1cba8:	5f 91       	pop	r21
   1cbaa:	4f 91       	pop	r20
   1cbac:	3f 91       	pop	r19
   1cbae:	2f 91       	pop	r18
   1cbb0:	0f 90       	pop	r0
   1cbb2:	0b be       	out	0x3b, r0	; 59
   1cbb4:	0f 90       	pop	r0
   1cbb6:	0f be       	out	0x3f, r0	; 63
   1cbb8:	0f 90       	pop	r0
   1cbba:	1f 90       	pop	r1
   1cbbc:	18 95       	reti

0001cbbe <pow>:
   1cbbe:	fa 01       	movw	r30, r20
   1cbc0:	ee 0f       	add	r30, r30
   1cbc2:	ff 1f       	adc	r31, r31
   1cbc4:	30 96       	adiw	r30, 0x00	; 0
   1cbc6:	21 05       	cpc	r18, r1
   1cbc8:	31 05       	cpc	r19, r1
   1cbca:	a1 f1       	breq	.+104    	; 0x1cc34 <pow+0x76>
   1cbcc:	61 15       	cp	r22, r1
   1cbce:	71 05       	cpc	r23, r1
   1cbd0:	61 f4       	brne	.+24     	; 0x1cbea <pow+0x2c>
   1cbd2:	80 38       	cpi	r24, 0x80	; 128
   1cbd4:	bf e3       	ldi	r27, 0x3F	; 63
   1cbd6:	9b 07       	cpc	r25, r27
   1cbd8:	49 f1       	breq	.+82     	; 0x1cc2c <pow+0x6e>
   1cbda:	68 94       	set
   1cbdc:	90 38       	cpi	r25, 0x80	; 128
   1cbde:	81 05       	cpc	r24, r1
   1cbe0:	61 f0       	breq	.+24     	; 0x1cbfa <pow+0x3c>
   1cbe2:	80 38       	cpi	r24, 0x80	; 128
   1cbe4:	bf ef       	ldi	r27, 0xFF	; 255
   1cbe6:	9b 07       	cpc	r25, r27
   1cbe8:	41 f0       	breq	.+16     	; 0x1cbfa <pow+0x3c>
   1cbea:	99 23       	and	r25, r25
   1cbec:	4a f5       	brpl	.+82     	; 0x1cc40 <pow+0x82>
   1cbee:	ff 3f       	cpi	r31, 0xFF	; 255
   1cbf0:	e1 05       	cpc	r30, r1
   1cbf2:	31 05       	cpc	r19, r1
   1cbf4:	21 05       	cpc	r18, r1
   1cbf6:	19 f1       	breq	.+70     	; 0x1cc3e <pow+0x80>
   1cbf8:	e8 94       	clt
   1cbfa:	08 94       	sec
   1cbfc:	e7 95       	ror	r30
   1cbfe:	d9 01       	movw	r26, r18
   1cc00:	aa 23       	and	r26, r26
   1cc02:	29 f4       	brne	.+10     	; 0x1cc0e <pow+0x50>
   1cc04:	ab 2f       	mov	r26, r27
   1cc06:	be 2f       	mov	r27, r30
   1cc08:	f8 5f       	subi	r31, 0xF8	; 248
   1cc0a:	d0 f3       	brcs	.-12     	; 0x1cc00 <pow+0x42>
   1cc0c:	10 c0       	rjmp	.+32     	; 0x1cc2e <pow+0x70>
   1cc0e:	ff 5f       	subi	r31, 0xFF	; 255
   1cc10:	70 f4       	brcc	.+28     	; 0x1cc2e <pow+0x70>
   1cc12:	a6 95       	lsr	r26
   1cc14:	e0 f7       	brcc	.-8      	; 0x1cc0e <pow+0x50>
   1cc16:	f7 39       	cpi	r31, 0x97	; 151
   1cc18:	50 f0       	brcs	.+20     	; 0x1cc2e <pow+0x70>
   1cc1a:	19 f0       	breq	.+6      	; 0x1cc22 <pow+0x64>
   1cc1c:	ff 3a       	cpi	r31, 0xAF	; 175
   1cc1e:	38 f4       	brcc	.+14     	; 0x1cc2e <pow+0x70>
   1cc20:	9f 77       	andi	r25, 0x7F	; 127
   1cc22:	9f 93       	push	r25
   1cc24:	0d d0       	rcall	.+26     	; 0x1cc40 <pow+0x82>
   1cc26:	0f 90       	pop	r0
   1cc28:	07 fc       	sbrc	r0, 7
   1cc2a:	90 58       	subi	r25, 0x80	; 128
   1cc2c:	08 95       	ret
   1cc2e:	46 f0       	brts	.+16     	; 0x1cc40 <pow+0x82>
   1cc30:	0c 94 b1 ce 	jmp	0x19d62	; 0x19d62 <__fp_nan>
   1cc34:	60 e0       	ldi	r22, 0x00	; 0
   1cc36:	70 e0       	ldi	r23, 0x00	; 0
   1cc38:	80 e8       	ldi	r24, 0x80	; 128
   1cc3a:	9f e3       	ldi	r25, 0x3F	; 63
   1cc3c:	08 95       	ret
   1cc3e:	4f e7       	ldi	r20, 0x7F	; 127
   1cc40:	9f 77       	andi	r25, 0x7F	; 127
   1cc42:	5f 93       	push	r21
   1cc44:	4f 93       	push	r20
   1cc46:	3f 93       	push	r19
   1cc48:	2f 93       	push	r18
   1cc4a:	0a d1       	rcall	.+532    	; 0x1ce60 <log>
   1cc4c:	2f 91       	pop	r18
   1cc4e:	3f 91       	pop	r19
   1cc50:	4f 91       	pop	r20
   1cc52:	5f 91       	pop	r21
   1cc54:	0e 94 00 cf 	call	0x19e00	; 0x19e00 <__mulsf3>
   1cc58:	51 c0       	rjmp	.+162    	; 0x1ccfc <exp>
   1cc5a:	19 f4       	brne	.+6      	; 0x1cc62 <pow+0xa4>
   1cc5c:	16 f4       	brtc	.+4      	; 0x1cc62 <pow+0xa4>
   1cc5e:	0c 94 b1 ce 	jmp	0x19d62	; 0x19d62 <__fp_nan>
   1cc62:	7a c0       	rjmp	.+244    	; 0x1cd58 <__fp_mpack>

0001cc64 <sqrt>:
   1cc64:	0e 94 db ce 	call	0x19db6	; 0x19db6 <__fp_splitA>
   1cc68:	c0 f3       	brcs	.-16     	; 0x1cc5a <pow+0x9c>
   1cc6a:	99 23       	and	r25, r25
   1cc6c:	d1 f3       	breq	.-12     	; 0x1cc62 <pow+0xa4>
   1cc6e:	be f3       	brts	.-18     	; 0x1cc5e <pow+0xa0>
   1cc70:	9f 57       	subi	r25, 0x7F	; 127
   1cc72:	55 0b       	sbc	r21, r21
   1cc74:	87 ff       	sbrs	r24, 7
   1cc76:	7e d0       	rcall	.+252    	; 0x1cd74 <__fp_norm2>
   1cc78:	00 24       	eor	r0, r0
   1cc7a:	a0 e6       	ldi	r26, 0x60	; 96
   1cc7c:	40 ea       	ldi	r20, 0xA0	; 160
   1cc7e:	90 01       	movw	r18, r0
   1cc80:	80 58       	subi	r24, 0x80	; 128
   1cc82:	56 95       	lsr	r21
   1cc84:	97 95       	ror	r25
   1cc86:	28 f4       	brcc	.+10     	; 0x1cc92 <sqrt+0x2e>
   1cc88:	80 5c       	subi	r24, 0xC0	; 192
   1cc8a:	66 0f       	add	r22, r22
   1cc8c:	77 1f       	adc	r23, r23
   1cc8e:	88 1f       	adc	r24, r24
   1cc90:	20 f0       	brcs	.+8      	; 0x1cc9a <sqrt+0x36>
   1cc92:	26 17       	cp	r18, r22
   1cc94:	37 07       	cpc	r19, r23
   1cc96:	48 07       	cpc	r20, r24
   1cc98:	30 f4       	brcc	.+12     	; 0x1cca6 <sqrt+0x42>
   1cc9a:	62 1b       	sub	r22, r18
   1cc9c:	73 0b       	sbc	r23, r19
   1cc9e:	84 0b       	sbc	r24, r20
   1cca0:	20 29       	or	r18, r0
   1cca2:	31 29       	or	r19, r1
   1cca4:	4a 2b       	or	r20, r26
   1cca6:	a6 95       	lsr	r26
   1cca8:	17 94       	ror	r1
   1ccaa:	07 94       	ror	r0
   1ccac:	20 25       	eor	r18, r0
   1ccae:	31 25       	eor	r19, r1
   1ccb0:	4a 27       	eor	r20, r26
   1ccb2:	58 f7       	brcc	.-42     	; 0x1cc8a <sqrt+0x26>
   1ccb4:	66 0f       	add	r22, r22
   1ccb6:	77 1f       	adc	r23, r23
   1ccb8:	88 1f       	adc	r24, r24
   1ccba:	20 f0       	brcs	.+8      	; 0x1ccc4 <sqrt+0x60>
   1ccbc:	26 17       	cp	r18, r22
   1ccbe:	37 07       	cpc	r19, r23
   1ccc0:	48 07       	cpc	r20, r24
   1ccc2:	30 f4       	brcc	.+12     	; 0x1ccd0 <sqrt+0x6c>
   1ccc4:	62 0b       	sbc	r22, r18
   1ccc6:	73 0b       	sbc	r23, r19
   1ccc8:	84 0b       	sbc	r24, r20
   1ccca:	20 0d       	add	r18, r0
   1cccc:	31 1d       	adc	r19, r1
   1ccce:	41 1d       	adc	r20, r1
   1ccd0:	a0 95       	com	r26
   1ccd2:	81 f7       	brne	.-32     	; 0x1ccb4 <sqrt+0x50>
   1ccd4:	b9 01       	movw	r22, r18
   1ccd6:	84 2f       	mov	r24, r20
   1ccd8:	91 58       	subi	r25, 0x81	; 129
   1ccda:	88 0f       	add	r24, r24
   1ccdc:	96 95       	lsr	r25
   1ccde:	87 95       	ror	r24
   1cce0:	08 95       	ret

0001cce2 <__unordsf2>:
   1cce2:	0e 94 87 ce 	call	0x19d0e	; 0x19d0e <__fp_cmp>
   1cce6:	88 0b       	sbc	r24, r24
   1cce8:	99 0b       	sbc	r25, r25
   1ccea:	08 95       	ret
   1ccec:	29 f4       	brne	.+10     	; 0x1ccf8 <__unordsf2+0x16>
   1ccee:	16 f0       	brts	.+4      	; 0x1ccf4 <__unordsf2+0x12>
   1ccf0:	0c 94 ab ce 	jmp	0x19d56	; 0x19d56 <__fp_inf>
   1ccf4:	0c 94 f5 ce 	jmp	0x19dea	; 0x19dea <__fp_zero>
   1ccf8:	0c 94 b1 ce 	jmp	0x19d62	; 0x19d62 <__fp_nan>

0001ccfc <exp>:
   1ccfc:	0e 94 db ce 	call	0x19db6	; 0x19db6 <__fp_splitA>
   1cd00:	a8 f3       	brcs	.-22     	; 0x1ccec <__unordsf2+0xa>
   1cd02:	96 38       	cpi	r25, 0x86	; 134
   1cd04:	a0 f7       	brcc	.-24     	; 0x1ccee <__unordsf2+0xc>
   1cd06:	07 f8       	bld	r0, 7
   1cd08:	0f 92       	push	r0
   1cd0a:	e8 94       	clt
   1cd0c:	2b e3       	ldi	r18, 0x3B	; 59
   1cd0e:	3a ea       	ldi	r19, 0xAA	; 170
   1cd10:	48 eb       	ldi	r20, 0xB8	; 184
   1cd12:	5f e7       	ldi	r21, 0x7F	; 127
   1cd14:	0e 94 0e cf 	call	0x19e1c	; 0x19e1c <__mulsf3_pse>
   1cd18:	0f 92       	push	r0
   1cd1a:	0f 92       	push	r0
   1cd1c:	0f 92       	push	r0
   1cd1e:	4d b7       	in	r20, 0x3d	; 61
   1cd20:	5e b7       	in	r21, 0x3e	; 62
   1cd22:	0f 92       	push	r0
   1cd24:	e4 d0       	rcall	.+456    	; 0x1ceee <modf>
   1cd26:	e0 e3       	ldi	r30, 0x30	; 48
   1cd28:	f2 e0       	ldi	r31, 0x02	; 2
   1cd2a:	2b d0       	rcall	.+86     	; 0x1cd82 <__fp_powser>
   1cd2c:	4f 91       	pop	r20
   1cd2e:	5f 91       	pop	r21
   1cd30:	ef 91       	pop	r30
   1cd32:	ff 91       	pop	r31
   1cd34:	e5 95       	asr	r30
   1cd36:	ee 1f       	adc	r30, r30
   1cd38:	ff 1f       	adc	r31, r31
   1cd3a:	49 f0       	breq	.+18     	; 0x1cd4e <exp+0x52>
   1cd3c:	fe 57       	subi	r31, 0x7E	; 126
   1cd3e:	e0 68       	ori	r30, 0x80	; 128
   1cd40:	44 27       	eor	r20, r20
   1cd42:	ee 0f       	add	r30, r30
   1cd44:	44 1f       	adc	r20, r20
   1cd46:	fa 95       	dec	r31
   1cd48:	e1 f7       	brne	.-8      	; 0x1cd42 <exp+0x46>
   1cd4a:	41 95       	neg	r20
   1cd4c:	55 0b       	sbc	r21, r21
   1cd4e:	4b d0       	rcall	.+150    	; 0x1cde6 <ldexp>
   1cd50:	0f 90       	pop	r0
   1cd52:	07 fe       	sbrs	r0, 7
   1cd54:	3d c0       	rjmp	.+122    	; 0x1cdd0 <inverse>
   1cd56:	08 95       	ret

0001cd58 <__fp_mpack>:
   1cd58:	9f 3f       	cpi	r25, 0xFF	; 255
   1cd5a:	31 f0       	breq	.+12     	; 0x1cd68 <__fp_mpack_finite+0xc>

0001cd5c <__fp_mpack_finite>:
   1cd5c:	91 50       	subi	r25, 0x01	; 1
   1cd5e:	20 f4       	brcc	.+8      	; 0x1cd68 <__fp_mpack_finite+0xc>
   1cd60:	87 95       	ror	r24
   1cd62:	77 95       	ror	r23
   1cd64:	67 95       	ror	r22
   1cd66:	b7 95       	ror	r27
   1cd68:	88 0f       	add	r24, r24
   1cd6a:	91 1d       	adc	r25, r1
   1cd6c:	96 95       	lsr	r25
   1cd6e:	87 95       	ror	r24
   1cd70:	97 f9       	bld	r25, 7
   1cd72:	08 95       	ret

0001cd74 <__fp_norm2>:
   1cd74:	91 50       	subi	r25, 0x01	; 1
   1cd76:	50 40       	sbci	r21, 0x00	; 0
   1cd78:	66 0f       	add	r22, r22
   1cd7a:	77 1f       	adc	r23, r23
   1cd7c:	88 1f       	adc	r24, r24
   1cd7e:	d2 f7       	brpl	.-12     	; 0x1cd74 <__fp_norm2>
   1cd80:	08 95       	ret

0001cd82 <__fp_powser>:
   1cd82:	df 93       	push	r29
   1cd84:	cf 93       	push	r28
   1cd86:	1f 93       	push	r17
   1cd88:	0f 93       	push	r16
   1cd8a:	ff 92       	push	r15
   1cd8c:	ef 92       	push	r14
   1cd8e:	df 92       	push	r13
   1cd90:	7b 01       	movw	r14, r22
   1cd92:	8c 01       	movw	r16, r24
   1cd94:	68 94       	set
   1cd96:	06 c0       	rjmp	.+12     	; 0x1cda4 <__fp_powser+0x22>
   1cd98:	da 2e       	mov	r13, r26
   1cd9a:	ef 01       	movw	r28, r30
   1cd9c:	0e 94 0c cf 	call	0x19e18	; 0x19e18 <__mulsf3x>
   1cda0:	fe 01       	movw	r30, r28
   1cda2:	e8 94       	clt
   1cda4:	a5 91       	lpm	r26, Z+
   1cda6:	25 91       	lpm	r18, Z+
   1cda8:	35 91       	lpm	r19, Z+
   1cdaa:	45 91       	lpm	r20, Z+
   1cdac:	55 91       	lpm	r21, Z+
   1cdae:	a6 f3       	brts	.-24     	; 0x1cd98 <__fp_powser+0x16>
   1cdb0:	ef 01       	movw	r28, r30
   1cdb2:	0e 94 5f cd 	call	0x19abe	; 0x19abe <__addsf3x>
   1cdb6:	fe 01       	movw	r30, r28
   1cdb8:	97 01       	movw	r18, r14
   1cdba:	a8 01       	movw	r20, r16
   1cdbc:	da 94       	dec	r13
   1cdbe:	69 f7       	brne	.-38     	; 0x1cd9a <__fp_powser+0x18>
   1cdc0:	df 90       	pop	r13
   1cdc2:	ef 90       	pop	r14
   1cdc4:	ff 90       	pop	r15
   1cdc6:	0f 91       	pop	r16
   1cdc8:	1f 91       	pop	r17
   1cdca:	cf 91       	pop	r28
   1cdcc:	df 91       	pop	r29
   1cdce:	08 95       	ret

0001cdd0 <inverse>:
   1cdd0:	9b 01       	movw	r18, r22
   1cdd2:	ac 01       	movw	r20, r24
   1cdd4:	60 e0       	ldi	r22, 0x00	; 0
   1cdd6:	70 e0       	ldi	r23, 0x00	; 0
   1cdd8:	80 e8       	ldi	r24, 0x80	; 128
   1cdda:	9f e3       	ldi	r25, 0x3F	; 63
   1cddc:	0c 94 b6 cd 	jmp	0x19b6c	; 0x19b6c <__divsf3>
   1cde0:	0c 94 ab ce 	jmp	0x19d56	; 0x19d56 <__fp_inf>
   1cde4:	b9 cf       	rjmp	.-142    	; 0x1cd58 <__fp_mpack>

0001cde6 <ldexp>:
   1cde6:	0e 94 db ce 	call	0x19db6	; 0x19db6 <__fp_splitA>
   1cdea:	e0 f3       	brcs	.-8      	; 0x1cde4 <inverse+0x14>
   1cdec:	99 23       	and	r25, r25
   1cdee:	d1 f3       	breq	.-12     	; 0x1cde4 <inverse+0x14>
   1cdf0:	94 0f       	add	r25, r20
   1cdf2:	51 1d       	adc	r21, r1
   1cdf4:	ab f3       	brvs	.-22     	; 0x1cde0 <inverse+0x10>
   1cdf6:	91 50       	subi	r25, 0x01	; 1
   1cdf8:	50 40       	sbci	r21, 0x00	; 0
   1cdfa:	94 f0       	brlt	.+36     	; 0x1ce20 <ldexp+0x3a>
   1cdfc:	59 f0       	breq	.+22     	; 0x1ce14 <ldexp+0x2e>
   1cdfe:	88 23       	and	r24, r24
   1ce00:	32 f0       	brmi	.+12     	; 0x1ce0e <ldexp+0x28>
   1ce02:	66 0f       	add	r22, r22
   1ce04:	77 1f       	adc	r23, r23
   1ce06:	88 1f       	adc	r24, r24
   1ce08:	91 50       	subi	r25, 0x01	; 1
   1ce0a:	50 40       	sbci	r21, 0x00	; 0
   1ce0c:	c1 f7       	brne	.-16     	; 0x1cdfe <ldexp+0x18>
   1ce0e:	9e 3f       	cpi	r25, 0xFE	; 254
   1ce10:	51 05       	cpc	r21, r1
   1ce12:	34 f7       	brge	.-52     	; 0x1cde0 <inverse+0x10>
   1ce14:	88 0f       	add	r24, r24
   1ce16:	91 1d       	adc	r25, r1
   1ce18:	96 95       	lsr	r25
   1ce1a:	87 95       	ror	r24
   1ce1c:	97 f9       	bld	r25, 7
   1ce1e:	08 95       	ret
   1ce20:	5f 3f       	cpi	r21, 0xFF	; 255
   1ce22:	ac f0       	brlt	.+42     	; 0x1ce4e <ldexp+0x68>
   1ce24:	98 3e       	cpi	r25, 0xE8	; 232
   1ce26:	9c f0       	brlt	.+38     	; 0x1ce4e <ldexp+0x68>
   1ce28:	bb 27       	eor	r27, r27
   1ce2a:	86 95       	lsr	r24
   1ce2c:	77 95       	ror	r23
   1ce2e:	67 95       	ror	r22
   1ce30:	b7 95       	ror	r27
   1ce32:	08 f4       	brcc	.+2      	; 0x1ce36 <ldexp+0x50>
   1ce34:	b1 60       	ori	r27, 0x01	; 1
   1ce36:	93 95       	inc	r25
   1ce38:	c1 f7       	brne	.-16     	; 0x1ce2a <ldexp+0x44>
   1ce3a:	bb 0f       	add	r27, r27
   1ce3c:	58 f7       	brcc	.-42     	; 0x1ce14 <ldexp+0x2e>
   1ce3e:	11 f4       	brne	.+4      	; 0x1ce44 <ldexp+0x5e>
   1ce40:	60 ff       	sbrs	r22, 0
   1ce42:	e8 cf       	rjmp	.-48     	; 0x1ce14 <ldexp+0x2e>
   1ce44:	6f 5f       	subi	r22, 0xFF	; 255
   1ce46:	7f 4f       	sbci	r23, 0xFF	; 255
   1ce48:	8f 4f       	sbci	r24, 0xFF	; 255
   1ce4a:	9f 4f       	sbci	r25, 0xFF	; 255
   1ce4c:	e3 cf       	rjmp	.-58     	; 0x1ce14 <ldexp+0x2e>
   1ce4e:	0c 94 f6 ce 	jmp	0x19dec	; 0x19dec <__fp_szero>
   1ce52:	0e f0       	brts	.+2      	; 0x1ce56 <ldexp+0x70>
   1ce54:	81 cf       	rjmp	.-254    	; 0x1cd58 <__fp_mpack>
   1ce56:	0c 94 b1 ce 	jmp	0x19d62	; 0x19d62 <__fp_nan>
   1ce5a:	68 94       	set
   1ce5c:	0c 94 ab ce 	jmp	0x19d56	; 0x19d56 <__fp_inf>

0001ce60 <log>:
   1ce60:	0e 94 db ce 	call	0x19db6	; 0x19db6 <__fp_splitA>
   1ce64:	b0 f3       	brcs	.-20     	; 0x1ce52 <ldexp+0x6c>
   1ce66:	99 23       	and	r25, r25
   1ce68:	c1 f3       	breq	.-16     	; 0x1ce5a <ldexp+0x74>
   1ce6a:	ae f3       	brts	.-22     	; 0x1ce56 <ldexp+0x70>
   1ce6c:	df 93       	push	r29
   1ce6e:	cf 93       	push	r28
   1ce70:	1f 93       	push	r17
   1ce72:	0f 93       	push	r16
   1ce74:	ff 92       	push	r15
   1ce76:	c9 2f       	mov	r28, r25
   1ce78:	dd 27       	eor	r29, r29
   1ce7a:	88 23       	and	r24, r24
   1ce7c:	2a f0       	brmi	.+10     	; 0x1ce88 <log+0x28>
   1ce7e:	21 97       	sbiw	r28, 0x01	; 1
   1ce80:	66 0f       	add	r22, r22
   1ce82:	77 1f       	adc	r23, r23
   1ce84:	88 1f       	adc	r24, r24
   1ce86:	da f7       	brpl	.-10     	; 0x1ce7e <log+0x1e>
   1ce88:	20 e0       	ldi	r18, 0x00	; 0
   1ce8a:	30 e0       	ldi	r19, 0x00	; 0
   1ce8c:	40 e8       	ldi	r20, 0x80	; 128
   1ce8e:	5f eb       	ldi	r21, 0xBF	; 191
   1ce90:	9f e3       	ldi	r25, 0x3F	; 63
   1ce92:	88 39       	cpi	r24, 0x98	; 152
   1ce94:	20 f0       	brcs	.+8      	; 0x1ce9e <log+0x3e>
   1ce96:	80 3e       	cpi	r24, 0xE0	; 224
   1ce98:	38 f0       	brcs	.+14     	; 0x1cea8 <log+0x48>
   1ce9a:	21 96       	adiw	r28, 0x01	; 1
   1ce9c:	8f 77       	andi	r24, 0x7F	; 127
   1ce9e:	0e 94 4e cd 	call	0x19a9c	; 0x19a9c <__addsf3>
   1cea2:	e8 e5       	ldi	r30, 0x58	; 88
   1cea4:	f2 e0       	ldi	r31, 0x02	; 2
   1cea6:	04 c0       	rjmp	.+8      	; 0x1ceb0 <log+0x50>
   1cea8:	0e 94 4e cd 	call	0x19a9c	; 0x19a9c <__addsf3>
   1ceac:	e5 e8       	ldi	r30, 0x85	; 133
   1ceae:	f2 e0       	ldi	r31, 0x02	; 2
   1ceb0:	68 df       	rcall	.-304    	; 0x1cd82 <__fp_powser>
   1ceb2:	8b 01       	movw	r16, r22
   1ceb4:	be 01       	movw	r22, r28
   1ceb6:	ec 01       	movw	r28, r24
   1ceb8:	fb 2e       	mov	r15, r27
   1ceba:	6f 57       	subi	r22, 0x7F	; 127
   1cebc:	71 09       	sbc	r23, r1
   1cebe:	75 95       	asr	r23
   1cec0:	77 1f       	adc	r23, r23
   1cec2:	88 0b       	sbc	r24, r24
   1cec4:	99 0b       	sbc	r25, r25
   1cec6:	0e 94 4c ce 	call	0x19c98	; 0x19c98 <__floatsisf>
   1ceca:	28 e1       	ldi	r18, 0x18	; 24
   1cecc:	32 e7       	ldi	r19, 0x72	; 114
   1cece:	41 e3       	ldi	r20, 0x31	; 49
   1ced0:	5f e3       	ldi	r21, 0x3F	; 63
   1ced2:	0e 94 0c cf 	call	0x19e18	; 0x19e18 <__mulsf3x>
   1ced6:	af 2d       	mov	r26, r15
   1ced8:	98 01       	movw	r18, r16
   1ceda:	ae 01       	movw	r20, r28
   1cedc:	ff 90       	pop	r15
   1cede:	0f 91       	pop	r16
   1cee0:	1f 91       	pop	r17
   1cee2:	cf 91       	pop	r28
   1cee4:	df 91       	pop	r29
   1cee6:	0e 94 5f cd 	call	0x19abe	; 0x19abe <__addsf3x>
   1ceea:	0c 94 c2 ce 	jmp	0x19d84	; 0x19d84 <__fp_round>

0001ceee <modf>:
   1ceee:	fa 01       	movw	r30, r20
   1cef0:	dc 01       	movw	r26, r24
   1cef2:	aa 0f       	add	r26, r26
   1cef4:	bb 1f       	adc	r27, r27
   1cef6:	9b 01       	movw	r18, r22
   1cef8:	ac 01       	movw	r20, r24
   1cefa:	bf 57       	subi	r27, 0x7F	; 127
   1cefc:	28 f4       	brcc	.+10     	; 0x1cf08 <modf+0x1a>
   1cefe:	22 27       	eor	r18, r18
   1cf00:	33 27       	eor	r19, r19
   1cf02:	44 27       	eor	r20, r20
   1cf04:	50 78       	andi	r21, 0x80	; 128
   1cf06:	20 c0       	rjmp	.+64     	; 0x1cf48 <modf+0x5a>
   1cf08:	b7 51       	subi	r27, 0x17	; 23
   1cf0a:	90 f4       	brcc	.+36     	; 0x1cf30 <modf+0x42>
   1cf0c:	ab 2f       	mov	r26, r27
   1cf0e:	00 24       	eor	r0, r0
   1cf10:	46 95       	lsr	r20
   1cf12:	37 95       	ror	r19
   1cf14:	27 95       	ror	r18
   1cf16:	01 1c       	adc	r0, r1
   1cf18:	a3 95       	inc	r26
   1cf1a:	d2 f3       	brmi	.-12     	; 0x1cf10 <modf+0x22>
   1cf1c:	00 20       	and	r0, r0
   1cf1e:	71 f0       	breq	.+28     	; 0x1cf3c <modf+0x4e>
   1cf20:	22 0f       	add	r18, r18
   1cf22:	33 1f       	adc	r19, r19
   1cf24:	44 1f       	adc	r20, r20
   1cf26:	b3 95       	inc	r27
   1cf28:	da f3       	brmi	.-10     	; 0x1cf20 <modf+0x32>
   1cf2a:	0e d0       	rcall	.+28     	; 0x1cf48 <modf+0x5a>
   1cf2c:	0c 94 4d cd 	jmp	0x19a9a	; 0x19a9a <__subsf3>
   1cf30:	61 30       	cpi	r22, 0x01	; 1
   1cf32:	71 05       	cpc	r23, r1
   1cf34:	a0 e8       	ldi	r26, 0x80	; 128
   1cf36:	8a 07       	cpc	r24, r26
   1cf38:	b9 46       	sbci	r27, 0x69	; 105
   1cf3a:	30 f4       	brcc	.+12     	; 0x1cf48 <modf+0x5a>
   1cf3c:	9b 01       	movw	r18, r22
   1cf3e:	ac 01       	movw	r20, r24
   1cf40:	66 27       	eor	r22, r22
   1cf42:	77 27       	eor	r23, r23
   1cf44:	88 27       	eor	r24, r24
   1cf46:	90 78       	andi	r25, 0x80	; 128
   1cf48:	30 96       	adiw	r30, 0x00	; 0
   1cf4a:	21 f0       	breq	.+8      	; 0x1cf54 <modf+0x66>
   1cf4c:	20 83       	st	Z, r18
   1cf4e:	31 83       	std	Z+1, r19	; 0x01
   1cf50:	42 83       	std	Z+2, r20	; 0x02
   1cf52:	53 83       	std	Z+3, r21	; 0x03
   1cf54:	08 95       	ret

0001cf56 <__udivmodqi4>:
   1cf56:	99 1b       	sub	r25, r25
   1cf58:	79 e0       	ldi	r23, 0x09	; 9
   1cf5a:	04 c0       	rjmp	.+8      	; 0x1cf64 <__udivmodqi4_ep>

0001cf5c <__udivmodqi4_loop>:
   1cf5c:	99 1f       	adc	r25, r25
   1cf5e:	96 17       	cp	r25, r22
   1cf60:	08 f0       	brcs	.+2      	; 0x1cf64 <__udivmodqi4_ep>
   1cf62:	96 1b       	sub	r25, r22

0001cf64 <__udivmodqi4_ep>:
   1cf64:	88 1f       	adc	r24, r24
   1cf66:	7a 95       	dec	r23
   1cf68:	c9 f7       	brne	.-14     	; 0x1cf5c <__udivmodqi4_loop>
   1cf6a:	80 95       	com	r24
   1cf6c:	08 95       	ret

0001cf6e <__udivmodhi4>:
   1cf6e:	aa 1b       	sub	r26, r26
   1cf70:	bb 1b       	sub	r27, r27
   1cf72:	51 e1       	ldi	r21, 0x11	; 17
   1cf74:	07 c0       	rjmp	.+14     	; 0x1cf84 <__udivmodhi4_ep>

0001cf76 <__udivmodhi4_loop>:
   1cf76:	aa 1f       	adc	r26, r26
   1cf78:	bb 1f       	adc	r27, r27
   1cf7a:	a6 17       	cp	r26, r22
   1cf7c:	b7 07       	cpc	r27, r23
   1cf7e:	10 f0       	brcs	.+4      	; 0x1cf84 <__udivmodhi4_ep>
   1cf80:	a6 1b       	sub	r26, r22
   1cf82:	b7 0b       	sbc	r27, r23

0001cf84 <__udivmodhi4_ep>:
   1cf84:	88 1f       	adc	r24, r24
   1cf86:	99 1f       	adc	r25, r25
   1cf88:	5a 95       	dec	r21
   1cf8a:	a9 f7       	brne	.-22     	; 0x1cf76 <__udivmodhi4_loop>
   1cf8c:	80 95       	com	r24
   1cf8e:	90 95       	com	r25
   1cf90:	bc 01       	movw	r22, r24
   1cf92:	cd 01       	movw	r24, r26
   1cf94:	08 95       	ret

0001cf96 <__divmodhi4>:
   1cf96:	97 fb       	bst	r25, 7
   1cf98:	07 2e       	mov	r0, r23
   1cf9a:	16 f4       	brtc	.+4      	; 0x1cfa0 <__divmodhi4+0xa>
   1cf9c:	00 94       	com	r0
   1cf9e:	06 d0       	rcall	.+12     	; 0x1cfac <__divmodhi4_neg1>
   1cfa0:	77 fd       	sbrc	r23, 7
   1cfa2:	08 d0       	rcall	.+16     	; 0x1cfb4 <__divmodhi4_neg2>
   1cfa4:	e4 df       	rcall	.-56     	; 0x1cf6e <__udivmodhi4>
   1cfa6:	07 fc       	sbrc	r0, 7
   1cfa8:	05 d0       	rcall	.+10     	; 0x1cfb4 <__divmodhi4_neg2>
   1cfaa:	3e f4       	brtc	.+14     	; 0x1cfba <__divmodhi4_exit>

0001cfac <__divmodhi4_neg1>:
   1cfac:	90 95       	com	r25
   1cfae:	81 95       	neg	r24
   1cfb0:	9f 4f       	sbci	r25, 0xFF	; 255
   1cfb2:	08 95       	ret

0001cfb4 <__divmodhi4_neg2>:
   1cfb4:	70 95       	com	r23
   1cfb6:	61 95       	neg	r22
   1cfb8:	7f 4f       	sbci	r23, 0xFF	; 255

0001cfba <__divmodhi4_exit>:
   1cfba:	08 95       	ret

0001cfbc <__udivmodsi4>:
   1cfbc:	a1 e2       	ldi	r26, 0x21	; 33
   1cfbe:	1a 2e       	mov	r1, r26
   1cfc0:	aa 1b       	sub	r26, r26
   1cfc2:	bb 1b       	sub	r27, r27
   1cfc4:	fd 01       	movw	r30, r26
   1cfc6:	0d c0       	rjmp	.+26     	; 0x1cfe2 <__udivmodsi4_ep>

0001cfc8 <__udivmodsi4_loop>:
   1cfc8:	aa 1f       	adc	r26, r26
   1cfca:	bb 1f       	adc	r27, r27
   1cfcc:	ee 1f       	adc	r30, r30
   1cfce:	ff 1f       	adc	r31, r31
   1cfd0:	a2 17       	cp	r26, r18
   1cfd2:	b3 07       	cpc	r27, r19
   1cfd4:	e4 07       	cpc	r30, r20
   1cfd6:	f5 07       	cpc	r31, r21
   1cfd8:	20 f0       	brcs	.+8      	; 0x1cfe2 <__udivmodsi4_ep>
   1cfda:	a2 1b       	sub	r26, r18
   1cfdc:	b3 0b       	sbc	r27, r19
   1cfde:	e4 0b       	sbc	r30, r20
   1cfe0:	f5 0b       	sbc	r31, r21

0001cfe2 <__udivmodsi4_ep>:
   1cfe2:	66 1f       	adc	r22, r22
   1cfe4:	77 1f       	adc	r23, r23
   1cfe6:	88 1f       	adc	r24, r24
   1cfe8:	99 1f       	adc	r25, r25
   1cfea:	1a 94       	dec	r1
   1cfec:	69 f7       	brne	.-38     	; 0x1cfc8 <__udivmodsi4_loop>
   1cfee:	60 95       	com	r22
   1cff0:	70 95       	com	r23
   1cff2:	80 95       	com	r24
   1cff4:	90 95       	com	r25
   1cff6:	9b 01       	movw	r18, r22
   1cff8:	ac 01       	movw	r20, r24
   1cffa:	bd 01       	movw	r22, r26
   1cffc:	cf 01       	movw	r24, r30
   1cffe:	08 95       	ret

0001d000 <__divmodsi4>:
   1d000:	05 2e       	mov	r0, r21
   1d002:	97 fb       	bst	r25, 7
   1d004:	16 f4       	brtc	.+4      	; 0x1d00a <__divmodsi4+0xa>
   1d006:	00 94       	com	r0
   1d008:	0f d0       	rcall	.+30     	; 0x1d028 <__negsi2>
   1d00a:	57 fd       	sbrc	r21, 7
   1d00c:	05 d0       	rcall	.+10     	; 0x1d018 <__divmodsi4_neg2>
   1d00e:	d6 df       	rcall	.-84     	; 0x1cfbc <__udivmodsi4>
   1d010:	07 fc       	sbrc	r0, 7
   1d012:	02 d0       	rcall	.+4      	; 0x1d018 <__divmodsi4_neg2>
   1d014:	46 f4       	brtc	.+16     	; 0x1d026 <__divmodsi4_exit>
   1d016:	08 c0       	rjmp	.+16     	; 0x1d028 <__negsi2>

0001d018 <__divmodsi4_neg2>:
   1d018:	50 95       	com	r21
   1d01a:	40 95       	com	r20
   1d01c:	30 95       	com	r19
   1d01e:	21 95       	neg	r18
   1d020:	3f 4f       	sbci	r19, 0xFF	; 255
   1d022:	4f 4f       	sbci	r20, 0xFF	; 255
   1d024:	5f 4f       	sbci	r21, 0xFF	; 255

0001d026 <__divmodsi4_exit>:
   1d026:	08 95       	ret

0001d028 <__negsi2>:
   1d028:	90 95       	com	r25
   1d02a:	80 95       	com	r24
   1d02c:	70 95       	com	r23
   1d02e:	61 95       	neg	r22
   1d030:	7f 4f       	sbci	r23, 0xFF	; 255
   1d032:	8f 4f       	sbci	r24, 0xFF	; 255
   1d034:	9f 4f       	sbci	r25, 0xFF	; 255
   1d036:	08 95       	ret

0001d038 <__tablejump2__>:
   1d038:	ee 0f       	add	r30, r30
   1d03a:	ff 1f       	adc	r31, r31
   1d03c:	88 1f       	adc	r24, r24
   1d03e:	8b bf       	out	0x3b, r24	; 59
   1d040:	07 90       	elpm	r0, Z+
   1d042:	f6 91       	elpm	r31, Z
   1d044:	e0 2d       	mov	r30, r0
   1d046:	19 94       	eijmp

0001d048 <__umulhisi3>:
   1d048:	a2 9f       	mul	r26, r18
   1d04a:	b0 01       	movw	r22, r0
   1d04c:	b3 9f       	mul	r27, r19
   1d04e:	c0 01       	movw	r24, r0
   1d050:	a3 9f       	mul	r26, r19
   1d052:	70 0d       	add	r23, r0
   1d054:	81 1d       	adc	r24, r1
   1d056:	11 24       	eor	r1, r1
   1d058:	91 1d       	adc	r25, r1
   1d05a:	b2 9f       	mul	r27, r18
   1d05c:	70 0d       	add	r23, r0
   1d05e:	81 1d       	adc	r24, r1
   1d060:	11 24       	eor	r1, r1
   1d062:	91 1d       	adc	r25, r1
   1d064:	08 95       	ret

0001d066 <__muluhisi3>:
   1d066:	f0 df       	rcall	.-32     	; 0x1d048 <__umulhisi3>
   1d068:	a5 9f       	mul	r26, r21
   1d06a:	90 0d       	add	r25, r0
   1d06c:	b4 9f       	mul	r27, r20
   1d06e:	90 0d       	add	r25, r0
   1d070:	a4 9f       	mul	r26, r20
   1d072:	80 0d       	add	r24, r0
   1d074:	91 1d       	adc	r25, r1
   1d076:	11 24       	eor	r1, r1
   1d078:	08 95       	ret

0001d07a <__cmpdi2_s8>:
   1d07a:	00 24       	eor	r0, r0
   1d07c:	a7 fd       	sbrc	r26, 7
   1d07e:	00 94       	com	r0
   1d080:	2a 17       	cp	r18, r26
   1d082:	30 05       	cpc	r19, r0
   1d084:	40 05       	cpc	r20, r0
   1d086:	50 05       	cpc	r21, r0
   1d088:	60 05       	cpc	r22, r0
   1d08a:	70 05       	cpc	r23, r0
   1d08c:	80 05       	cpc	r24, r0
   1d08e:	90 05       	cpc	r25, r0
   1d090:	08 95       	ret

0001d092 <malloc>:
   1d092:	0f 93       	push	r16
   1d094:	1f 93       	push	r17
   1d096:	cf 93       	push	r28
   1d098:	df 93       	push	r29
   1d09a:	82 30       	cpi	r24, 0x02	; 2
   1d09c:	91 05       	cpc	r25, r1
   1d09e:	10 f4       	brcc	.+4      	; 0x1d0a4 <malloc+0x12>
   1d0a0:	82 e0       	ldi	r24, 0x02	; 2
   1d0a2:	90 e0       	ldi	r25, 0x00	; 0
   1d0a4:	e0 91 b3 18 	lds	r30, 0x18B3	; 0x8018b3 <__flp>
   1d0a8:	f0 91 b4 18 	lds	r31, 0x18B4	; 0x8018b4 <__flp+0x1>
   1d0ac:	20 e0       	ldi	r18, 0x00	; 0
   1d0ae:	30 e0       	ldi	r19, 0x00	; 0
   1d0b0:	a0 e0       	ldi	r26, 0x00	; 0
   1d0b2:	b0 e0       	ldi	r27, 0x00	; 0
   1d0b4:	30 97       	sbiw	r30, 0x00	; 0
   1d0b6:	19 f1       	breq	.+70     	; 0x1d0fe <malloc+0x6c>
   1d0b8:	40 81       	ld	r20, Z
   1d0ba:	51 81       	ldd	r21, Z+1	; 0x01
   1d0bc:	02 81       	ldd	r16, Z+2	; 0x02
   1d0be:	13 81       	ldd	r17, Z+3	; 0x03
   1d0c0:	48 17       	cp	r20, r24
   1d0c2:	59 07       	cpc	r21, r25
   1d0c4:	c8 f0       	brcs	.+50     	; 0x1d0f8 <malloc+0x66>
   1d0c6:	84 17       	cp	r24, r20
   1d0c8:	95 07       	cpc	r25, r21
   1d0ca:	69 f4       	brne	.+26     	; 0x1d0e6 <malloc+0x54>
   1d0cc:	10 97       	sbiw	r26, 0x00	; 0
   1d0ce:	31 f0       	breq	.+12     	; 0x1d0dc <malloc+0x4a>
   1d0d0:	12 96       	adiw	r26, 0x02	; 2
   1d0d2:	0c 93       	st	X, r16
   1d0d4:	12 97       	sbiw	r26, 0x02	; 2
   1d0d6:	13 96       	adiw	r26, 0x03	; 3
   1d0d8:	1c 93       	st	X, r17
   1d0da:	27 c0       	rjmp	.+78     	; 0x1d12a <malloc+0x98>
   1d0dc:	00 93 b3 18 	sts	0x18B3, r16	; 0x8018b3 <__flp>
   1d0e0:	10 93 b4 18 	sts	0x18B4, r17	; 0x8018b4 <__flp+0x1>
   1d0e4:	22 c0       	rjmp	.+68     	; 0x1d12a <malloc+0x98>
   1d0e6:	21 15       	cp	r18, r1
   1d0e8:	31 05       	cpc	r19, r1
   1d0ea:	19 f0       	breq	.+6      	; 0x1d0f2 <malloc+0x60>
   1d0ec:	42 17       	cp	r20, r18
   1d0ee:	53 07       	cpc	r21, r19
   1d0f0:	18 f4       	brcc	.+6      	; 0x1d0f8 <malloc+0x66>
   1d0f2:	9a 01       	movw	r18, r20
   1d0f4:	bd 01       	movw	r22, r26
   1d0f6:	ef 01       	movw	r28, r30
   1d0f8:	df 01       	movw	r26, r30
   1d0fa:	f8 01       	movw	r30, r16
   1d0fc:	db cf       	rjmp	.-74     	; 0x1d0b4 <malloc+0x22>
   1d0fe:	21 15       	cp	r18, r1
   1d100:	31 05       	cpc	r19, r1
   1d102:	f9 f0       	breq	.+62     	; 0x1d142 <malloc+0xb0>
   1d104:	28 1b       	sub	r18, r24
   1d106:	39 0b       	sbc	r19, r25
   1d108:	24 30       	cpi	r18, 0x04	; 4
   1d10a:	31 05       	cpc	r19, r1
   1d10c:	80 f4       	brcc	.+32     	; 0x1d12e <malloc+0x9c>
   1d10e:	8a 81       	ldd	r24, Y+2	; 0x02
   1d110:	9b 81       	ldd	r25, Y+3	; 0x03
   1d112:	61 15       	cp	r22, r1
   1d114:	71 05       	cpc	r23, r1
   1d116:	21 f0       	breq	.+8      	; 0x1d120 <malloc+0x8e>
   1d118:	fb 01       	movw	r30, r22
   1d11a:	93 83       	std	Z+3, r25	; 0x03
   1d11c:	82 83       	std	Z+2, r24	; 0x02
   1d11e:	04 c0       	rjmp	.+8      	; 0x1d128 <malloc+0x96>
   1d120:	90 93 b4 18 	sts	0x18B4, r25	; 0x8018b4 <__flp+0x1>
   1d124:	80 93 b3 18 	sts	0x18B3, r24	; 0x8018b3 <__flp>
   1d128:	fe 01       	movw	r30, r28
   1d12a:	32 96       	adiw	r30, 0x02	; 2
   1d12c:	44 c0       	rjmp	.+136    	; 0x1d1b6 <malloc+0x124>
   1d12e:	fe 01       	movw	r30, r28
   1d130:	e2 0f       	add	r30, r18
   1d132:	f3 1f       	adc	r31, r19
   1d134:	81 93       	st	Z+, r24
   1d136:	91 93       	st	Z+, r25
   1d138:	22 50       	subi	r18, 0x02	; 2
   1d13a:	31 09       	sbc	r19, r1
   1d13c:	39 83       	std	Y+1, r19	; 0x01
   1d13e:	28 83       	st	Y, r18
   1d140:	3a c0       	rjmp	.+116    	; 0x1d1b6 <malloc+0x124>
   1d142:	20 91 b1 18 	lds	r18, 0x18B1	; 0x8018b1 <__brkval>
   1d146:	30 91 b2 18 	lds	r19, 0x18B2	; 0x8018b2 <__brkval+0x1>
   1d14a:	23 2b       	or	r18, r19
   1d14c:	41 f4       	brne	.+16     	; 0x1d15e <malloc+0xcc>
   1d14e:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
   1d152:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
   1d156:	30 93 b2 18 	sts	0x18B2, r19	; 0x8018b2 <__brkval+0x1>
   1d15a:	20 93 b1 18 	sts	0x18B1, r18	; 0x8018b1 <__brkval>
   1d15e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
   1d162:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
   1d166:	21 15       	cp	r18, r1
   1d168:	31 05       	cpc	r19, r1
   1d16a:	41 f4       	brne	.+16     	; 0x1d17c <malloc+0xea>
   1d16c:	2d b7       	in	r18, 0x3d	; 61
   1d16e:	3e b7       	in	r19, 0x3e	; 62
   1d170:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
   1d174:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
   1d178:	24 1b       	sub	r18, r20
   1d17a:	35 0b       	sbc	r19, r21
   1d17c:	e0 91 b1 18 	lds	r30, 0x18B1	; 0x8018b1 <__brkval>
   1d180:	f0 91 b2 18 	lds	r31, 0x18B2	; 0x8018b2 <__brkval+0x1>
   1d184:	e2 17       	cp	r30, r18
   1d186:	f3 07       	cpc	r31, r19
   1d188:	a0 f4       	brcc	.+40     	; 0x1d1b2 <malloc+0x120>
   1d18a:	2e 1b       	sub	r18, r30
   1d18c:	3f 0b       	sbc	r19, r31
   1d18e:	28 17       	cp	r18, r24
   1d190:	39 07       	cpc	r19, r25
   1d192:	78 f0       	brcs	.+30     	; 0x1d1b2 <malloc+0x120>
   1d194:	ac 01       	movw	r20, r24
   1d196:	4e 5f       	subi	r20, 0xFE	; 254
   1d198:	5f 4f       	sbci	r21, 0xFF	; 255
   1d19a:	24 17       	cp	r18, r20
   1d19c:	35 07       	cpc	r19, r21
   1d19e:	48 f0       	brcs	.+18     	; 0x1d1b2 <malloc+0x120>
   1d1a0:	4e 0f       	add	r20, r30
   1d1a2:	5f 1f       	adc	r21, r31
   1d1a4:	50 93 b2 18 	sts	0x18B2, r21	; 0x8018b2 <__brkval+0x1>
   1d1a8:	40 93 b1 18 	sts	0x18B1, r20	; 0x8018b1 <__brkval>
   1d1ac:	81 93       	st	Z+, r24
   1d1ae:	91 93       	st	Z+, r25
   1d1b0:	02 c0       	rjmp	.+4      	; 0x1d1b6 <malloc+0x124>
   1d1b2:	e0 e0       	ldi	r30, 0x00	; 0
   1d1b4:	f0 e0       	ldi	r31, 0x00	; 0
   1d1b6:	cf 01       	movw	r24, r30
   1d1b8:	df 91       	pop	r29
   1d1ba:	cf 91       	pop	r28
   1d1bc:	1f 91       	pop	r17
   1d1be:	0f 91       	pop	r16
   1d1c0:	08 95       	ret

0001d1c2 <free>:
   1d1c2:	cf 93       	push	r28
   1d1c4:	df 93       	push	r29
   1d1c6:	00 97       	sbiw	r24, 0x00	; 0
   1d1c8:	09 f4       	brne	.+2      	; 0x1d1cc <free+0xa>
   1d1ca:	81 c0       	rjmp	.+258    	; 0x1d2ce <free+0x10c>
   1d1cc:	fc 01       	movw	r30, r24
   1d1ce:	32 97       	sbiw	r30, 0x02	; 2
   1d1d0:	13 82       	std	Z+3, r1	; 0x03
   1d1d2:	12 82       	std	Z+2, r1	; 0x02
   1d1d4:	a0 91 b3 18 	lds	r26, 0x18B3	; 0x8018b3 <__flp>
   1d1d8:	b0 91 b4 18 	lds	r27, 0x18B4	; 0x8018b4 <__flp+0x1>
   1d1dc:	10 97       	sbiw	r26, 0x00	; 0
   1d1de:	81 f4       	brne	.+32     	; 0x1d200 <free+0x3e>
   1d1e0:	20 81       	ld	r18, Z
   1d1e2:	31 81       	ldd	r19, Z+1	; 0x01
   1d1e4:	82 0f       	add	r24, r18
   1d1e6:	93 1f       	adc	r25, r19
   1d1e8:	20 91 b1 18 	lds	r18, 0x18B1	; 0x8018b1 <__brkval>
   1d1ec:	30 91 b2 18 	lds	r19, 0x18B2	; 0x8018b2 <__brkval+0x1>
   1d1f0:	28 17       	cp	r18, r24
   1d1f2:	39 07       	cpc	r19, r25
   1d1f4:	51 f5       	brne	.+84     	; 0x1d24a <free+0x88>
   1d1f6:	f0 93 b2 18 	sts	0x18B2, r31	; 0x8018b2 <__brkval+0x1>
   1d1fa:	e0 93 b1 18 	sts	0x18B1, r30	; 0x8018b1 <__brkval>
   1d1fe:	67 c0       	rjmp	.+206    	; 0x1d2ce <free+0x10c>
   1d200:	ed 01       	movw	r28, r26
   1d202:	20 e0       	ldi	r18, 0x00	; 0
   1d204:	30 e0       	ldi	r19, 0x00	; 0
   1d206:	ce 17       	cp	r28, r30
   1d208:	df 07       	cpc	r29, r31
   1d20a:	40 f4       	brcc	.+16     	; 0x1d21c <free+0x5a>
   1d20c:	4a 81       	ldd	r20, Y+2	; 0x02
   1d20e:	5b 81       	ldd	r21, Y+3	; 0x03
   1d210:	9e 01       	movw	r18, r28
   1d212:	41 15       	cp	r20, r1
   1d214:	51 05       	cpc	r21, r1
   1d216:	f1 f0       	breq	.+60     	; 0x1d254 <free+0x92>
   1d218:	ea 01       	movw	r28, r20
   1d21a:	f5 cf       	rjmp	.-22     	; 0x1d206 <free+0x44>
   1d21c:	d3 83       	std	Z+3, r29	; 0x03
   1d21e:	c2 83       	std	Z+2, r28	; 0x02
   1d220:	40 81       	ld	r20, Z
   1d222:	51 81       	ldd	r21, Z+1	; 0x01
   1d224:	84 0f       	add	r24, r20
   1d226:	95 1f       	adc	r25, r21
   1d228:	c8 17       	cp	r28, r24
   1d22a:	d9 07       	cpc	r29, r25
   1d22c:	59 f4       	brne	.+22     	; 0x1d244 <free+0x82>
   1d22e:	88 81       	ld	r24, Y
   1d230:	99 81       	ldd	r25, Y+1	; 0x01
   1d232:	84 0f       	add	r24, r20
   1d234:	95 1f       	adc	r25, r21
   1d236:	02 96       	adiw	r24, 0x02	; 2
   1d238:	91 83       	std	Z+1, r25	; 0x01
   1d23a:	80 83       	st	Z, r24
   1d23c:	8a 81       	ldd	r24, Y+2	; 0x02
   1d23e:	9b 81       	ldd	r25, Y+3	; 0x03
   1d240:	93 83       	std	Z+3, r25	; 0x03
   1d242:	82 83       	std	Z+2, r24	; 0x02
   1d244:	21 15       	cp	r18, r1
   1d246:	31 05       	cpc	r19, r1
   1d248:	29 f4       	brne	.+10     	; 0x1d254 <free+0x92>
   1d24a:	f0 93 b4 18 	sts	0x18B4, r31	; 0x8018b4 <__flp+0x1>
   1d24e:	e0 93 b3 18 	sts	0x18B3, r30	; 0x8018b3 <__flp>
   1d252:	3d c0       	rjmp	.+122    	; 0x1d2ce <free+0x10c>
   1d254:	e9 01       	movw	r28, r18
   1d256:	fb 83       	std	Y+3, r31	; 0x03
   1d258:	ea 83       	std	Y+2, r30	; 0x02
   1d25a:	49 91       	ld	r20, Y+
   1d25c:	59 91       	ld	r21, Y+
   1d25e:	c4 0f       	add	r28, r20
   1d260:	d5 1f       	adc	r29, r21
   1d262:	ec 17       	cp	r30, r28
   1d264:	fd 07       	cpc	r31, r29
   1d266:	61 f4       	brne	.+24     	; 0x1d280 <free+0xbe>
   1d268:	80 81       	ld	r24, Z
   1d26a:	91 81       	ldd	r25, Z+1	; 0x01
   1d26c:	84 0f       	add	r24, r20
   1d26e:	95 1f       	adc	r25, r21
   1d270:	02 96       	adiw	r24, 0x02	; 2
   1d272:	e9 01       	movw	r28, r18
   1d274:	99 83       	std	Y+1, r25	; 0x01
   1d276:	88 83       	st	Y, r24
   1d278:	82 81       	ldd	r24, Z+2	; 0x02
   1d27a:	93 81       	ldd	r25, Z+3	; 0x03
   1d27c:	9b 83       	std	Y+3, r25	; 0x03
   1d27e:	8a 83       	std	Y+2, r24	; 0x02
   1d280:	e0 e0       	ldi	r30, 0x00	; 0
   1d282:	f0 e0       	ldi	r31, 0x00	; 0
   1d284:	12 96       	adiw	r26, 0x02	; 2
   1d286:	8d 91       	ld	r24, X+
   1d288:	9c 91       	ld	r25, X
   1d28a:	13 97       	sbiw	r26, 0x03	; 3
   1d28c:	00 97       	sbiw	r24, 0x00	; 0
   1d28e:	19 f0       	breq	.+6      	; 0x1d296 <free+0xd4>
   1d290:	fd 01       	movw	r30, r26
   1d292:	dc 01       	movw	r26, r24
   1d294:	f7 cf       	rjmp	.-18     	; 0x1d284 <free+0xc2>
   1d296:	8d 91       	ld	r24, X+
   1d298:	9c 91       	ld	r25, X
   1d29a:	11 97       	sbiw	r26, 0x01	; 1
   1d29c:	9d 01       	movw	r18, r26
   1d29e:	2e 5f       	subi	r18, 0xFE	; 254
   1d2a0:	3f 4f       	sbci	r19, 0xFF	; 255
   1d2a2:	82 0f       	add	r24, r18
   1d2a4:	93 1f       	adc	r25, r19
   1d2a6:	20 91 b1 18 	lds	r18, 0x18B1	; 0x8018b1 <__brkval>
   1d2aa:	30 91 b2 18 	lds	r19, 0x18B2	; 0x8018b2 <__brkval+0x1>
   1d2ae:	28 17       	cp	r18, r24
   1d2b0:	39 07       	cpc	r19, r25
   1d2b2:	69 f4       	brne	.+26     	; 0x1d2ce <free+0x10c>
   1d2b4:	30 97       	sbiw	r30, 0x00	; 0
   1d2b6:	29 f4       	brne	.+10     	; 0x1d2c2 <free+0x100>
   1d2b8:	10 92 b4 18 	sts	0x18B4, r1	; 0x8018b4 <__flp+0x1>
   1d2bc:	10 92 b3 18 	sts	0x18B3, r1	; 0x8018b3 <__flp>
   1d2c0:	02 c0       	rjmp	.+4      	; 0x1d2c6 <free+0x104>
   1d2c2:	13 82       	std	Z+3, r1	; 0x03
   1d2c4:	12 82       	std	Z+2, r1	; 0x02
   1d2c6:	b0 93 b2 18 	sts	0x18B2, r27	; 0x8018b2 <__brkval+0x1>
   1d2ca:	a0 93 b1 18 	sts	0x18B1, r26	; 0x8018b1 <__brkval>
   1d2ce:	df 91       	pop	r29
   1d2d0:	cf 91       	pop	r28
   1d2d2:	08 95       	ret

0001d2d4 <random_r>:
   1d2d4:	8f 92       	push	r8
   1d2d6:	9f 92       	push	r9
   1d2d8:	af 92       	push	r10
   1d2da:	bf 92       	push	r11
   1d2dc:	cf 92       	push	r12
   1d2de:	df 92       	push	r13
   1d2e0:	ef 92       	push	r14
   1d2e2:	ff 92       	push	r15
   1d2e4:	cf 93       	push	r28
   1d2e6:	df 93       	push	r29
   1d2e8:	ec 01       	movw	r28, r24
   1d2ea:	68 81       	ld	r22, Y
   1d2ec:	79 81       	ldd	r23, Y+1	; 0x01
   1d2ee:	8a 81       	ldd	r24, Y+2	; 0x02
   1d2f0:	9b 81       	ldd	r25, Y+3	; 0x03
   1d2f2:	61 15       	cp	r22, r1
   1d2f4:	71 05       	cpc	r23, r1
   1d2f6:	81 05       	cpc	r24, r1
   1d2f8:	91 05       	cpc	r25, r1
   1d2fa:	21 f4       	brne	.+8      	; 0x1d304 <random_r+0x30>
   1d2fc:	64 e2       	ldi	r22, 0x24	; 36
   1d2fe:	79 ed       	ldi	r23, 0xD9	; 217
   1d300:	8b e5       	ldi	r24, 0x5B	; 91
   1d302:	97 e0       	ldi	r25, 0x07	; 7
   1d304:	2d e1       	ldi	r18, 0x1D	; 29
   1d306:	33 ef       	ldi	r19, 0xF3	; 243
   1d308:	41 e0       	ldi	r20, 0x01	; 1
   1d30a:	50 e0       	ldi	r21, 0x00	; 0
   1d30c:	79 de       	rcall	.-782    	; 0x1d000 <__divmodsi4>
   1d30e:	49 01       	movw	r8, r18
   1d310:	5a 01       	movw	r10, r20
   1d312:	9b 01       	movw	r18, r22
   1d314:	ac 01       	movw	r20, r24
   1d316:	a7 ea       	ldi	r26, 0xA7	; 167
   1d318:	b1 e4       	ldi	r27, 0x41	; 65
   1d31a:	a5 de       	rcall	.-694    	; 0x1d066 <__muluhisi3>
   1d31c:	6b 01       	movw	r12, r22
   1d31e:	7c 01       	movw	r14, r24
   1d320:	ac ee       	ldi	r26, 0xEC	; 236
   1d322:	b4 ef       	ldi	r27, 0xF4	; 244
   1d324:	a5 01       	movw	r20, r10
   1d326:	94 01       	movw	r18, r8
   1d328:	bd d3       	rcall	.+1914   	; 0x1daa4 <__mulohisi3>
   1d32a:	dc 01       	movw	r26, r24
   1d32c:	cb 01       	movw	r24, r22
   1d32e:	8c 0d       	add	r24, r12
   1d330:	9d 1d       	adc	r25, r13
   1d332:	ae 1d       	adc	r26, r14
   1d334:	bf 1d       	adc	r27, r15
   1d336:	b7 ff       	sbrs	r27, 7
   1d338:	03 c0       	rjmp	.+6      	; 0x1d340 <random_r+0x6c>
   1d33a:	01 97       	sbiw	r24, 0x01	; 1
   1d33c:	a1 09       	sbc	r26, r1
   1d33e:	b0 48       	sbci	r27, 0x80	; 128
   1d340:	88 83       	st	Y, r24
   1d342:	99 83       	std	Y+1, r25	; 0x01
   1d344:	aa 83       	std	Y+2, r26	; 0x02
   1d346:	bb 83       	std	Y+3, r27	; 0x03
   1d348:	bc 01       	movw	r22, r24
   1d34a:	cd 01       	movw	r24, r26
   1d34c:	9f 77       	andi	r25, 0x7F	; 127
   1d34e:	df 91       	pop	r29
   1d350:	cf 91       	pop	r28
   1d352:	ff 90       	pop	r15
   1d354:	ef 90       	pop	r14
   1d356:	df 90       	pop	r13
   1d358:	cf 90       	pop	r12
   1d35a:	bf 90       	pop	r11
   1d35c:	af 90       	pop	r10
   1d35e:	9f 90       	pop	r9
   1d360:	8f 90       	pop	r8
   1d362:	08 95       	ret

0001d364 <random>:
   1d364:	8f 92       	push	r8
   1d366:	9f 92       	push	r9
   1d368:	af 92       	push	r10
   1d36a:	bf 92       	push	r11
   1d36c:	cf 92       	push	r12
   1d36e:	df 92       	push	r13
   1d370:	ef 92       	push	r14
   1d372:	ff 92       	push	r15
   1d374:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <next>
   1d378:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <next+0x1>
   1d37c:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <next+0x2>
   1d380:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <next+0x3>
   1d384:	61 15       	cp	r22, r1
   1d386:	71 05       	cpc	r23, r1
   1d388:	81 05       	cpc	r24, r1
   1d38a:	91 05       	cpc	r25, r1
   1d38c:	21 f4       	brne	.+8      	; 0x1d396 <random+0x32>
   1d38e:	64 e2       	ldi	r22, 0x24	; 36
   1d390:	79 ed       	ldi	r23, 0xD9	; 217
   1d392:	8b e5       	ldi	r24, 0x5B	; 91
   1d394:	97 e0       	ldi	r25, 0x07	; 7
   1d396:	2d e1       	ldi	r18, 0x1D	; 29
   1d398:	33 ef       	ldi	r19, 0xF3	; 243
   1d39a:	41 e0       	ldi	r20, 0x01	; 1
   1d39c:	50 e0       	ldi	r21, 0x00	; 0
   1d39e:	30 de       	rcall	.-928    	; 0x1d000 <__divmodsi4>
   1d3a0:	49 01       	movw	r8, r18
   1d3a2:	5a 01       	movw	r10, r20
   1d3a4:	9b 01       	movw	r18, r22
   1d3a6:	ac 01       	movw	r20, r24
   1d3a8:	a7 ea       	ldi	r26, 0xA7	; 167
   1d3aa:	b1 e4       	ldi	r27, 0x41	; 65
   1d3ac:	5c de       	rcall	.-840    	; 0x1d066 <__muluhisi3>
   1d3ae:	6b 01       	movw	r12, r22
   1d3b0:	7c 01       	movw	r14, r24
   1d3b2:	ac ee       	ldi	r26, 0xEC	; 236
   1d3b4:	b4 ef       	ldi	r27, 0xF4	; 244
   1d3b6:	a5 01       	movw	r20, r10
   1d3b8:	94 01       	movw	r18, r8
   1d3ba:	74 d3       	rcall	.+1768   	; 0x1daa4 <__mulohisi3>
   1d3bc:	dc 01       	movw	r26, r24
   1d3be:	cb 01       	movw	r24, r22
   1d3c0:	8c 0d       	add	r24, r12
   1d3c2:	9d 1d       	adc	r25, r13
   1d3c4:	ae 1d       	adc	r26, r14
   1d3c6:	bf 1d       	adc	r27, r15
   1d3c8:	b7 ff       	sbrs	r27, 7
   1d3ca:	03 c0       	rjmp	.+6      	; 0x1d3d2 <random+0x6e>
   1d3cc:	01 97       	sbiw	r24, 0x01	; 1
   1d3ce:	a1 09       	sbc	r26, r1
   1d3d0:	b0 48       	sbci	r27, 0x80	; 128
   1d3d2:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
   1d3d6:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
   1d3da:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
   1d3de:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
   1d3e2:	bc 01       	movw	r22, r24
   1d3e4:	cd 01       	movw	r24, r26
   1d3e6:	9f 77       	andi	r25, 0x7F	; 127
   1d3e8:	ff 90       	pop	r15
   1d3ea:	ef 90       	pop	r14
   1d3ec:	df 90       	pop	r13
   1d3ee:	cf 90       	pop	r12
   1d3f0:	bf 90       	pop	r11
   1d3f2:	af 90       	pop	r10
   1d3f4:	9f 90       	pop	r9
   1d3f6:	8f 90       	pop	r8
   1d3f8:	08 95       	ret

0001d3fa <srandom>:
   1d3fa:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <next>
   1d3fe:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <next+0x1>
   1d402:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <next+0x2>
   1d406:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <next+0x3>
   1d40a:	08 95       	ret

0001d40c <abort>:
   1d40c:	81 e0       	ldi	r24, 0x01	; 1
   1d40e:	90 e0       	ldi	r25, 0x00	; 0
   1d410:	f8 94       	cli
   1d412:	4c c3       	rjmp	.+1688   	; 0x1daac <_exit>

0001d414 <memcpy_P>:
   1d414:	fb 01       	movw	r30, r22
   1d416:	dc 01       	movw	r26, r24
   1d418:	02 c0       	rjmp	.+4      	; 0x1d41e <memcpy_P+0xa>
   1d41a:	05 90       	lpm	r0, Z+
   1d41c:	0d 92       	st	X+, r0
   1d41e:	41 50       	subi	r20, 0x01	; 1
   1d420:	50 40       	sbci	r21, 0x00	; 0
   1d422:	d8 f7       	brcc	.-10     	; 0x1d41a <memcpy_P+0x6>
   1d424:	08 95       	ret

0001d426 <strcmp_P>:
   1d426:	fb 01       	movw	r30, r22
   1d428:	dc 01       	movw	r26, r24
   1d42a:	8d 91       	ld	r24, X+
   1d42c:	05 90       	lpm	r0, Z+
   1d42e:	80 19       	sub	r24, r0
   1d430:	01 10       	cpse	r0, r1
   1d432:	d9 f3       	breq	.-10     	; 0x1d42a <strcmp_P+0x4>
   1d434:	99 0b       	sbc	r25, r25
   1d436:	08 95       	ret

0001d438 <__strlen_P>:
   1d438:	fc 01       	movw	r30, r24
   1d43a:	05 90       	lpm	r0, Z+
   1d43c:	00 20       	and	r0, r0
   1d43e:	e9 f7       	brne	.-6      	; 0x1d43a <__strlen_P+0x2>
   1d440:	80 95       	com	r24
   1d442:	90 95       	com	r25
   1d444:	8e 0f       	add	r24, r30
   1d446:	9f 1f       	adc	r25, r31
   1d448:	08 95       	ret

0001d44a <memcpy>:
   1d44a:	fb 01       	movw	r30, r22
   1d44c:	dc 01       	movw	r26, r24
   1d44e:	02 c0       	rjmp	.+4      	; 0x1d454 <memcpy+0xa>
   1d450:	01 90       	ld	r0, Z+
   1d452:	0d 92       	st	X+, r0
   1d454:	41 50       	subi	r20, 0x01	; 1
   1d456:	50 40       	sbci	r21, 0x00	; 0
   1d458:	d8 f7       	brcc	.-10     	; 0x1d450 <memcpy+0x6>
   1d45a:	08 95       	ret

0001d45c <memset>:
   1d45c:	dc 01       	movw	r26, r24
   1d45e:	01 c0       	rjmp	.+2      	; 0x1d462 <memset+0x6>
   1d460:	6d 93       	st	X+, r22
   1d462:	41 50       	subi	r20, 0x01	; 1
   1d464:	50 40       	sbci	r21, 0x00	; 0
   1d466:	e0 f7       	brcc	.-8      	; 0x1d460 <memset+0x4>
   1d468:	08 95       	ret

0001d46a <strcmp>:
   1d46a:	fb 01       	movw	r30, r22
   1d46c:	dc 01       	movw	r26, r24
   1d46e:	8d 91       	ld	r24, X+
   1d470:	01 90       	ld	r0, Z+
   1d472:	80 19       	sub	r24, r0
   1d474:	01 10       	cpse	r0, r1
   1d476:	d9 f3       	breq	.-10     	; 0x1d46e <strcmp+0x4>
   1d478:	99 0b       	sbc	r25, r25
   1d47a:	08 95       	ret

0001d47c <strcpy>:
   1d47c:	fb 01       	movw	r30, r22
   1d47e:	dc 01       	movw	r26, r24
   1d480:	01 90       	ld	r0, Z+
   1d482:	0d 92       	st	X+, r0
   1d484:	00 20       	and	r0, r0
   1d486:	e1 f7       	brne	.-8      	; 0x1d480 <strcpy+0x4>
   1d488:	08 95       	ret

0001d48a <strstr>:
   1d48a:	fb 01       	movw	r30, r22
   1d48c:	51 91       	ld	r21, Z+
   1d48e:	55 23       	and	r21, r21
   1d490:	a9 f0       	breq	.+42     	; 0x1d4bc <strstr+0x32>
   1d492:	bf 01       	movw	r22, r30
   1d494:	dc 01       	movw	r26, r24
   1d496:	4d 91       	ld	r20, X+
   1d498:	45 17       	cp	r20, r21
   1d49a:	41 11       	cpse	r20, r1
   1d49c:	e1 f7       	brne	.-8      	; 0x1d496 <strstr+0xc>
   1d49e:	59 f4       	brne	.+22     	; 0x1d4b6 <strstr+0x2c>
   1d4a0:	cd 01       	movw	r24, r26
   1d4a2:	01 90       	ld	r0, Z+
   1d4a4:	00 20       	and	r0, r0
   1d4a6:	49 f0       	breq	.+18     	; 0x1d4ba <strstr+0x30>
   1d4a8:	4d 91       	ld	r20, X+
   1d4aa:	40 15       	cp	r20, r0
   1d4ac:	41 11       	cpse	r20, r1
   1d4ae:	c9 f3       	breq	.-14     	; 0x1d4a2 <strstr+0x18>
   1d4b0:	fb 01       	movw	r30, r22
   1d4b2:	41 11       	cpse	r20, r1
   1d4b4:	ef cf       	rjmp	.-34     	; 0x1d494 <strstr+0xa>
   1d4b6:	81 e0       	ldi	r24, 0x01	; 1
   1d4b8:	90 e0       	ldi	r25, 0x00	; 0
   1d4ba:	01 97       	sbiw	r24, 0x01	; 1
   1d4bc:	08 95       	ret

0001d4be <sprintf>:
   1d4be:	0f 93       	push	r16
   1d4c0:	1f 93       	push	r17
   1d4c2:	cf 93       	push	r28
   1d4c4:	df 93       	push	r29
   1d4c6:	cd b7       	in	r28, 0x3d	; 61
   1d4c8:	de b7       	in	r29, 0x3e	; 62
   1d4ca:	2e 97       	sbiw	r28, 0x0e	; 14
   1d4cc:	0f b6       	in	r0, 0x3f	; 63
   1d4ce:	f8 94       	cli
   1d4d0:	de bf       	out	0x3e, r29	; 62
   1d4d2:	0f be       	out	0x3f, r0	; 63
   1d4d4:	cd bf       	out	0x3d, r28	; 61
   1d4d6:	0e 89       	ldd	r16, Y+22	; 0x16
   1d4d8:	1f 89       	ldd	r17, Y+23	; 0x17
   1d4da:	86 e0       	ldi	r24, 0x06	; 6
   1d4dc:	8c 83       	std	Y+4, r24	; 0x04
   1d4de:	1a 83       	std	Y+2, r17	; 0x02
   1d4e0:	09 83       	std	Y+1, r16	; 0x01
   1d4e2:	8f ef       	ldi	r24, 0xFF	; 255
   1d4e4:	9f e7       	ldi	r25, 0x7F	; 127
   1d4e6:	9e 83       	std	Y+6, r25	; 0x06
   1d4e8:	8d 83       	std	Y+5, r24	; 0x05
   1d4ea:	ae 01       	movw	r20, r28
   1d4ec:	46 5e       	subi	r20, 0xE6	; 230
   1d4ee:	5f 4f       	sbci	r21, 0xFF	; 255
   1d4f0:	68 8d       	ldd	r22, Y+24	; 0x18
   1d4f2:	79 8d       	ldd	r23, Y+25	; 0x19
   1d4f4:	ce 01       	movw	r24, r28
   1d4f6:	01 96       	adiw	r24, 0x01	; 1
   1d4f8:	10 d0       	rcall	.+32     	; 0x1d51a <vfprintf>
   1d4fa:	ef 81       	ldd	r30, Y+7	; 0x07
   1d4fc:	f8 85       	ldd	r31, Y+8	; 0x08
   1d4fe:	e0 0f       	add	r30, r16
   1d500:	f1 1f       	adc	r31, r17
   1d502:	10 82       	st	Z, r1
   1d504:	2e 96       	adiw	r28, 0x0e	; 14
   1d506:	0f b6       	in	r0, 0x3f	; 63
   1d508:	f8 94       	cli
   1d50a:	de bf       	out	0x3e, r29	; 62
   1d50c:	0f be       	out	0x3f, r0	; 63
   1d50e:	cd bf       	out	0x3d, r28	; 61
   1d510:	df 91       	pop	r29
   1d512:	cf 91       	pop	r28
   1d514:	1f 91       	pop	r17
   1d516:	0f 91       	pop	r16
   1d518:	08 95       	ret

0001d51a <vfprintf>:
   1d51a:	2f 92       	push	r2
   1d51c:	3f 92       	push	r3
   1d51e:	4f 92       	push	r4
   1d520:	5f 92       	push	r5
   1d522:	6f 92       	push	r6
   1d524:	7f 92       	push	r7
   1d526:	8f 92       	push	r8
   1d528:	9f 92       	push	r9
   1d52a:	af 92       	push	r10
   1d52c:	bf 92       	push	r11
   1d52e:	cf 92       	push	r12
   1d530:	df 92       	push	r13
   1d532:	ef 92       	push	r14
   1d534:	ff 92       	push	r15
   1d536:	0f 93       	push	r16
   1d538:	1f 93       	push	r17
   1d53a:	cf 93       	push	r28
   1d53c:	df 93       	push	r29
   1d53e:	cd b7       	in	r28, 0x3d	; 61
   1d540:	de b7       	in	r29, 0x3e	; 62
   1d542:	2b 97       	sbiw	r28, 0x0b	; 11
   1d544:	0f b6       	in	r0, 0x3f	; 63
   1d546:	f8 94       	cli
   1d548:	de bf       	out	0x3e, r29	; 62
   1d54a:	0f be       	out	0x3f, r0	; 63
   1d54c:	cd bf       	out	0x3d, r28	; 61
   1d54e:	6c 01       	movw	r12, r24
   1d550:	7b 01       	movw	r14, r22
   1d552:	8a 01       	movw	r16, r20
   1d554:	fc 01       	movw	r30, r24
   1d556:	17 82       	std	Z+7, r1	; 0x07
   1d558:	16 82       	std	Z+6, r1	; 0x06
   1d55a:	83 81       	ldd	r24, Z+3	; 0x03
   1d55c:	81 ff       	sbrs	r24, 1
   1d55e:	bf c1       	rjmp	.+894    	; 0x1d8de <vfprintf+0x3c4>
   1d560:	ce 01       	movw	r24, r28
   1d562:	01 96       	adiw	r24, 0x01	; 1
   1d564:	3c 01       	movw	r6, r24
   1d566:	f6 01       	movw	r30, r12
   1d568:	93 81       	ldd	r25, Z+3	; 0x03
   1d56a:	f7 01       	movw	r30, r14
   1d56c:	93 fd       	sbrc	r25, 3
   1d56e:	85 91       	lpm	r24, Z+
   1d570:	93 ff       	sbrs	r25, 3
   1d572:	81 91       	ld	r24, Z+
   1d574:	7f 01       	movw	r14, r30
   1d576:	88 23       	and	r24, r24
   1d578:	09 f4       	brne	.+2      	; 0x1d57c <vfprintf+0x62>
   1d57a:	ad c1       	rjmp	.+858    	; 0x1d8d6 <vfprintf+0x3bc>
   1d57c:	85 32       	cpi	r24, 0x25	; 37
   1d57e:	39 f4       	brne	.+14     	; 0x1d58e <vfprintf+0x74>
   1d580:	93 fd       	sbrc	r25, 3
   1d582:	85 91       	lpm	r24, Z+
   1d584:	93 ff       	sbrs	r25, 3
   1d586:	81 91       	ld	r24, Z+
   1d588:	7f 01       	movw	r14, r30
   1d58a:	85 32       	cpi	r24, 0x25	; 37
   1d58c:	21 f4       	brne	.+8      	; 0x1d596 <vfprintf+0x7c>
   1d58e:	b6 01       	movw	r22, r12
   1d590:	90 e0       	ldi	r25, 0x00	; 0
   1d592:	d6 d1       	rcall	.+940    	; 0x1d940 <fputc>
   1d594:	e8 cf       	rjmp	.-48     	; 0x1d566 <vfprintf+0x4c>
   1d596:	91 2c       	mov	r9, r1
   1d598:	21 2c       	mov	r2, r1
   1d59a:	31 2c       	mov	r3, r1
   1d59c:	ff e1       	ldi	r31, 0x1F	; 31
   1d59e:	f3 15       	cp	r31, r3
   1d5a0:	d8 f0       	brcs	.+54     	; 0x1d5d8 <vfprintf+0xbe>
   1d5a2:	8b 32       	cpi	r24, 0x2B	; 43
   1d5a4:	79 f0       	breq	.+30     	; 0x1d5c4 <vfprintf+0xaa>
   1d5a6:	38 f4       	brcc	.+14     	; 0x1d5b6 <vfprintf+0x9c>
   1d5a8:	80 32       	cpi	r24, 0x20	; 32
   1d5aa:	79 f0       	breq	.+30     	; 0x1d5ca <vfprintf+0xb0>
   1d5ac:	83 32       	cpi	r24, 0x23	; 35
   1d5ae:	a1 f4       	brne	.+40     	; 0x1d5d8 <vfprintf+0xbe>
   1d5b0:	23 2d       	mov	r18, r3
   1d5b2:	20 61       	ori	r18, 0x10	; 16
   1d5b4:	1d c0       	rjmp	.+58     	; 0x1d5f0 <vfprintf+0xd6>
   1d5b6:	8d 32       	cpi	r24, 0x2D	; 45
   1d5b8:	61 f0       	breq	.+24     	; 0x1d5d2 <vfprintf+0xb8>
   1d5ba:	80 33       	cpi	r24, 0x30	; 48
   1d5bc:	69 f4       	brne	.+26     	; 0x1d5d8 <vfprintf+0xbe>
   1d5be:	23 2d       	mov	r18, r3
   1d5c0:	21 60       	ori	r18, 0x01	; 1
   1d5c2:	16 c0       	rjmp	.+44     	; 0x1d5f0 <vfprintf+0xd6>
   1d5c4:	83 2d       	mov	r24, r3
   1d5c6:	82 60       	ori	r24, 0x02	; 2
   1d5c8:	38 2e       	mov	r3, r24
   1d5ca:	e3 2d       	mov	r30, r3
   1d5cc:	e4 60       	ori	r30, 0x04	; 4
   1d5ce:	3e 2e       	mov	r3, r30
   1d5d0:	2a c0       	rjmp	.+84     	; 0x1d626 <vfprintf+0x10c>
   1d5d2:	f3 2d       	mov	r31, r3
   1d5d4:	f8 60       	ori	r31, 0x08	; 8
   1d5d6:	1d c0       	rjmp	.+58     	; 0x1d612 <vfprintf+0xf8>
   1d5d8:	37 fc       	sbrc	r3, 7
   1d5da:	2d c0       	rjmp	.+90     	; 0x1d636 <vfprintf+0x11c>
   1d5dc:	20 ed       	ldi	r18, 0xD0	; 208
   1d5de:	28 0f       	add	r18, r24
   1d5e0:	2a 30       	cpi	r18, 0x0A	; 10
   1d5e2:	40 f0       	brcs	.+16     	; 0x1d5f4 <vfprintf+0xda>
   1d5e4:	8e 32       	cpi	r24, 0x2E	; 46
   1d5e6:	b9 f4       	brne	.+46     	; 0x1d616 <vfprintf+0xfc>
   1d5e8:	36 fc       	sbrc	r3, 6
   1d5ea:	75 c1       	rjmp	.+746    	; 0x1d8d6 <vfprintf+0x3bc>
   1d5ec:	23 2d       	mov	r18, r3
   1d5ee:	20 64       	ori	r18, 0x40	; 64
   1d5f0:	32 2e       	mov	r3, r18
   1d5f2:	19 c0       	rjmp	.+50     	; 0x1d626 <vfprintf+0x10c>
   1d5f4:	36 fe       	sbrs	r3, 6
   1d5f6:	06 c0       	rjmp	.+12     	; 0x1d604 <vfprintf+0xea>
   1d5f8:	8a e0       	ldi	r24, 0x0A	; 10
   1d5fa:	98 9e       	mul	r9, r24
   1d5fc:	20 0d       	add	r18, r0
   1d5fe:	11 24       	eor	r1, r1
   1d600:	92 2e       	mov	r9, r18
   1d602:	11 c0       	rjmp	.+34     	; 0x1d626 <vfprintf+0x10c>
   1d604:	ea e0       	ldi	r30, 0x0A	; 10
   1d606:	2e 9e       	mul	r2, r30
   1d608:	20 0d       	add	r18, r0
   1d60a:	11 24       	eor	r1, r1
   1d60c:	22 2e       	mov	r2, r18
   1d60e:	f3 2d       	mov	r31, r3
   1d610:	f0 62       	ori	r31, 0x20	; 32
   1d612:	3f 2e       	mov	r3, r31
   1d614:	08 c0       	rjmp	.+16     	; 0x1d626 <vfprintf+0x10c>
   1d616:	8c 36       	cpi	r24, 0x6C	; 108
   1d618:	21 f4       	brne	.+8      	; 0x1d622 <vfprintf+0x108>
   1d61a:	83 2d       	mov	r24, r3
   1d61c:	80 68       	ori	r24, 0x80	; 128
   1d61e:	38 2e       	mov	r3, r24
   1d620:	02 c0       	rjmp	.+4      	; 0x1d626 <vfprintf+0x10c>
   1d622:	88 36       	cpi	r24, 0x68	; 104
   1d624:	41 f4       	brne	.+16     	; 0x1d636 <vfprintf+0x11c>
   1d626:	f7 01       	movw	r30, r14
   1d628:	93 fd       	sbrc	r25, 3
   1d62a:	85 91       	lpm	r24, Z+
   1d62c:	93 ff       	sbrs	r25, 3
   1d62e:	81 91       	ld	r24, Z+
   1d630:	7f 01       	movw	r14, r30
   1d632:	81 11       	cpse	r24, r1
   1d634:	b3 cf       	rjmp	.-154    	; 0x1d59c <vfprintf+0x82>
   1d636:	98 2f       	mov	r25, r24
   1d638:	9f 7d       	andi	r25, 0xDF	; 223
   1d63a:	95 54       	subi	r25, 0x45	; 69
   1d63c:	93 30       	cpi	r25, 0x03	; 3
   1d63e:	28 f4       	brcc	.+10     	; 0x1d64a <vfprintf+0x130>
   1d640:	0c 5f       	subi	r16, 0xFC	; 252
   1d642:	1f 4f       	sbci	r17, 0xFF	; 255
   1d644:	9f e3       	ldi	r25, 0x3F	; 63
   1d646:	99 83       	std	Y+1, r25	; 0x01
   1d648:	0d c0       	rjmp	.+26     	; 0x1d664 <vfprintf+0x14a>
   1d64a:	83 36       	cpi	r24, 0x63	; 99
   1d64c:	31 f0       	breq	.+12     	; 0x1d65a <vfprintf+0x140>
   1d64e:	83 37       	cpi	r24, 0x73	; 115
   1d650:	71 f0       	breq	.+28     	; 0x1d66e <vfprintf+0x154>
   1d652:	83 35       	cpi	r24, 0x53	; 83
   1d654:	09 f0       	breq	.+2      	; 0x1d658 <vfprintf+0x13e>
   1d656:	55 c0       	rjmp	.+170    	; 0x1d702 <vfprintf+0x1e8>
   1d658:	20 c0       	rjmp	.+64     	; 0x1d69a <vfprintf+0x180>
   1d65a:	f8 01       	movw	r30, r16
   1d65c:	80 81       	ld	r24, Z
   1d65e:	89 83       	std	Y+1, r24	; 0x01
   1d660:	0e 5f       	subi	r16, 0xFE	; 254
   1d662:	1f 4f       	sbci	r17, 0xFF	; 255
   1d664:	88 24       	eor	r8, r8
   1d666:	83 94       	inc	r8
   1d668:	91 2c       	mov	r9, r1
   1d66a:	53 01       	movw	r10, r6
   1d66c:	12 c0       	rjmp	.+36     	; 0x1d692 <vfprintf+0x178>
   1d66e:	28 01       	movw	r4, r16
   1d670:	f2 e0       	ldi	r31, 0x02	; 2
   1d672:	4f 0e       	add	r4, r31
   1d674:	51 1c       	adc	r5, r1
   1d676:	f8 01       	movw	r30, r16
   1d678:	a0 80       	ld	r10, Z
   1d67a:	b1 80       	ldd	r11, Z+1	; 0x01
   1d67c:	36 fe       	sbrs	r3, 6
   1d67e:	03 c0       	rjmp	.+6      	; 0x1d686 <vfprintf+0x16c>
   1d680:	69 2d       	mov	r22, r9
   1d682:	70 e0       	ldi	r23, 0x00	; 0
   1d684:	02 c0       	rjmp	.+4      	; 0x1d68a <vfprintf+0x170>
   1d686:	6f ef       	ldi	r22, 0xFF	; 255
   1d688:	7f ef       	ldi	r23, 0xFF	; 255
   1d68a:	c5 01       	movw	r24, r10
   1d68c:	4e d1       	rcall	.+668    	; 0x1d92a <strnlen>
   1d68e:	4c 01       	movw	r8, r24
   1d690:	82 01       	movw	r16, r4
   1d692:	f3 2d       	mov	r31, r3
   1d694:	ff 77       	andi	r31, 0x7F	; 127
   1d696:	3f 2e       	mov	r3, r31
   1d698:	15 c0       	rjmp	.+42     	; 0x1d6c4 <vfprintf+0x1aa>
   1d69a:	28 01       	movw	r4, r16
   1d69c:	22 e0       	ldi	r18, 0x02	; 2
   1d69e:	42 0e       	add	r4, r18
   1d6a0:	51 1c       	adc	r5, r1
   1d6a2:	f8 01       	movw	r30, r16
   1d6a4:	a0 80       	ld	r10, Z
   1d6a6:	b1 80       	ldd	r11, Z+1	; 0x01
   1d6a8:	36 fe       	sbrs	r3, 6
   1d6aa:	03 c0       	rjmp	.+6      	; 0x1d6b2 <vfprintf+0x198>
   1d6ac:	69 2d       	mov	r22, r9
   1d6ae:	70 e0       	ldi	r23, 0x00	; 0
   1d6b0:	02 c0       	rjmp	.+4      	; 0x1d6b6 <vfprintf+0x19c>
   1d6b2:	6f ef       	ldi	r22, 0xFF	; 255
   1d6b4:	7f ef       	ldi	r23, 0xFF	; 255
   1d6b6:	c5 01       	movw	r24, r10
   1d6b8:	2d d1       	rcall	.+602    	; 0x1d914 <strnlen_P>
   1d6ba:	4c 01       	movw	r8, r24
   1d6bc:	f3 2d       	mov	r31, r3
   1d6be:	f0 68       	ori	r31, 0x80	; 128
   1d6c0:	3f 2e       	mov	r3, r31
   1d6c2:	82 01       	movw	r16, r4
   1d6c4:	33 fc       	sbrc	r3, 3
   1d6c6:	19 c0       	rjmp	.+50     	; 0x1d6fa <vfprintf+0x1e0>
   1d6c8:	82 2d       	mov	r24, r2
   1d6ca:	90 e0       	ldi	r25, 0x00	; 0
   1d6cc:	88 16       	cp	r8, r24
   1d6ce:	99 06       	cpc	r9, r25
   1d6d0:	a0 f4       	brcc	.+40     	; 0x1d6fa <vfprintf+0x1e0>
   1d6d2:	b6 01       	movw	r22, r12
   1d6d4:	80 e2       	ldi	r24, 0x20	; 32
   1d6d6:	90 e0       	ldi	r25, 0x00	; 0
   1d6d8:	33 d1       	rcall	.+614    	; 0x1d940 <fputc>
   1d6da:	2a 94       	dec	r2
   1d6dc:	f5 cf       	rjmp	.-22     	; 0x1d6c8 <vfprintf+0x1ae>
   1d6de:	f5 01       	movw	r30, r10
   1d6e0:	37 fc       	sbrc	r3, 7
   1d6e2:	85 91       	lpm	r24, Z+
   1d6e4:	37 fe       	sbrs	r3, 7
   1d6e6:	81 91       	ld	r24, Z+
   1d6e8:	5f 01       	movw	r10, r30
   1d6ea:	b6 01       	movw	r22, r12
   1d6ec:	90 e0       	ldi	r25, 0x00	; 0
   1d6ee:	28 d1       	rcall	.+592    	; 0x1d940 <fputc>
   1d6f0:	21 10       	cpse	r2, r1
   1d6f2:	2a 94       	dec	r2
   1d6f4:	21 e0       	ldi	r18, 0x01	; 1
   1d6f6:	82 1a       	sub	r8, r18
   1d6f8:	91 08       	sbc	r9, r1
   1d6fa:	81 14       	cp	r8, r1
   1d6fc:	91 04       	cpc	r9, r1
   1d6fe:	79 f7       	brne	.-34     	; 0x1d6de <vfprintf+0x1c4>
   1d700:	e1 c0       	rjmp	.+450    	; 0x1d8c4 <vfprintf+0x3aa>
   1d702:	84 36       	cpi	r24, 0x64	; 100
   1d704:	11 f0       	breq	.+4      	; 0x1d70a <vfprintf+0x1f0>
   1d706:	89 36       	cpi	r24, 0x69	; 105
   1d708:	39 f5       	brne	.+78     	; 0x1d758 <vfprintf+0x23e>
   1d70a:	f8 01       	movw	r30, r16
   1d70c:	37 fe       	sbrs	r3, 7
   1d70e:	07 c0       	rjmp	.+14     	; 0x1d71e <vfprintf+0x204>
   1d710:	60 81       	ld	r22, Z
   1d712:	71 81       	ldd	r23, Z+1	; 0x01
   1d714:	82 81       	ldd	r24, Z+2	; 0x02
   1d716:	93 81       	ldd	r25, Z+3	; 0x03
   1d718:	0c 5f       	subi	r16, 0xFC	; 252
   1d71a:	1f 4f       	sbci	r17, 0xFF	; 255
   1d71c:	08 c0       	rjmp	.+16     	; 0x1d72e <vfprintf+0x214>
   1d71e:	60 81       	ld	r22, Z
   1d720:	71 81       	ldd	r23, Z+1	; 0x01
   1d722:	07 2e       	mov	r0, r23
   1d724:	00 0c       	add	r0, r0
   1d726:	88 0b       	sbc	r24, r24
   1d728:	99 0b       	sbc	r25, r25
   1d72a:	0e 5f       	subi	r16, 0xFE	; 254
   1d72c:	1f 4f       	sbci	r17, 0xFF	; 255
   1d72e:	f3 2d       	mov	r31, r3
   1d730:	ff 76       	andi	r31, 0x6F	; 111
   1d732:	3f 2e       	mov	r3, r31
   1d734:	97 ff       	sbrs	r25, 7
   1d736:	09 c0       	rjmp	.+18     	; 0x1d74a <vfprintf+0x230>
   1d738:	90 95       	com	r25
   1d73a:	80 95       	com	r24
   1d73c:	70 95       	com	r23
   1d73e:	61 95       	neg	r22
   1d740:	7f 4f       	sbci	r23, 0xFF	; 255
   1d742:	8f 4f       	sbci	r24, 0xFF	; 255
   1d744:	9f 4f       	sbci	r25, 0xFF	; 255
   1d746:	f0 68       	ori	r31, 0x80	; 128
   1d748:	3f 2e       	mov	r3, r31
   1d74a:	2a e0       	ldi	r18, 0x0A	; 10
   1d74c:	30 e0       	ldi	r19, 0x00	; 0
   1d74e:	a3 01       	movw	r20, r6
   1d750:	33 d1       	rcall	.+614    	; 0x1d9b8 <__ultoa_invert>
   1d752:	88 2e       	mov	r8, r24
   1d754:	86 18       	sub	r8, r6
   1d756:	44 c0       	rjmp	.+136    	; 0x1d7e0 <vfprintf+0x2c6>
   1d758:	85 37       	cpi	r24, 0x75	; 117
   1d75a:	31 f4       	brne	.+12     	; 0x1d768 <vfprintf+0x24e>
   1d75c:	23 2d       	mov	r18, r3
   1d75e:	2f 7e       	andi	r18, 0xEF	; 239
   1d760:	b2 2e       	mov	r11, r18
   1d762:	2a e0       	ldi	r18, 0x0A	; 10
   1d764:	30 e0       	ldi	r19, 0x00	; 0
   1d766:	25 c0       	rjmp	.+74     	; 0x1d7b2 <vfprintf+0x298>
   1d768:	93 2d       	mov	r25, r3
   1d76a:	99 7f       	andi	r25, 0xF9	; 249
   1d76c:	b9 2e       	mov	r11, r25
   1d76e:	8f 36       	cpi	r24, 0x6F	; 111
   1d770:	c1 f0       	breq	.+48     	; 0x1d7a2 <vfprintf+0x288>
   1d772:	18 f4       	brcc	.+6      	; 0x1d77a <vfprintf+0x260>
   1d774:	88 35       	cpi	r24, 0x58	; 88
   1d776:	79 f0       	breq	.+30     	; 0x1d796 <vfprintf+0x27c>
   1d778:	ae c0       	rjmp	.+348    	; 0x1d8d6 <vfprintf+0x3bc>
   1d77a:	80 37       	cpi	r24, 0x70	; 112
   1d77c:	19 f0       	breq	.+6      	; 0x1d784 <vfprintf+0x26a>
   1d77e:	88 37       	cpi	r24, 0x78	; 120
   1d780:	21 f0       	breq	.+8      	; 0x1d78a <vfprintf+0x270>
   1d782:	a9 c0       	rjmp	.+338    	; 0x1d8d6 <vfprintf+0x3bc>
   1d784:	e9 2f       	mov	r30, r25
   1d786:	e0 61       	ori	r30, 0x10	; 16
   1d788:	be 2e       	mov	r11, r30
   1d78a:	b4 fe       	sbrs	r11, 4
   1d78c:	0d c0       	rjmp	.+26     	; 0x1d7a8 <vfprintf+0x28e>
   1d78e:	fb 2d       	mov	r31, r11
   1d790:	f4 60       	ori	r31, 0x04	; 4
   1d792:	bf 2e       	mov	r11, r31
   1d794:	09 c0       	rjmp	.+18     	; 0x1d7a8 <vfprintf+0x28e>
   1d796:	34 fe       	sbrs	r3, 4
   1d798:	0a c0       	rjmp	.+20     	; 0x1d7ae <vfprintf+0x294>
   1d79a:	29 2f       	mov	r18, r25
   1d79c:	26 60       	ori	r18, 0x06	; 6
   1d79e:	b2 2e       	mov	r11, r18
   1d7a0:	06 c0       	rjmp	.+12     	; 0x1d7ae <vfprintf+0x294>
   1d7a2:	28 e0       	ldi	r18, 0x08	; 8
   1d7a4:	30 e0       	ldi	r19, 0x00	; 0
   1d7a6:	05 c0       	rjmp	.+10     	; 0x1d7b2 <vfprintf+0x298>
   1d7a8:	20 e1       	ldi	r18, 0x10	; 16
   1d7aa:	30 e0       	ldi	r19, 0x00	; 0
   1d7ac:	02 c0       	rjmp	.+4      	; 0x1d7b2 <vfprintf+0x298>
   1d7ae:	20 e1       	ldi	r18, 0x10	; 16
   1d7b0:	32 e0       	ldi	r19, 0x02	; 2
   1d7b2:	f8 01       	movw	r30, r16
   1d7b4:	b7 fe       	sbrs	r11, 7
   1d7b6:	07 c0       	rjmp	.+14     	; 0x1d7c6 <vfprintf+0x2ac>
   1d7b8:	60 81       	ld	r22, Z
   1d7ba:	71 81       	ldd	r23, Z+1	; 0x01
   1d7bc:	82 81       	ldd	r24, Z+2	; 0x02
   1d7be:	93 81       	ldd	r25, Z+3	; 0x03
   1d7c0:	0c 5f       	subi	r16, 0xFC	; 252
   1d7c2:	1f 4f       	sbci	r17, 0xFF	; 255
   1d7c4:	06 c0       	rjmp	.+12     	; 0x1d7d2 <vfprintf+0x2b8>
   1d7c6:	60 81       	ld	r22, Z
   1d7c8:	71 81       	ldd	r23, Z+1	; 0x01
   1d7ca:	80 e0       	ldi	r24, 0x00	; 0
   1d7cc:	90 e0       	ldi	r25, 0x00	; 0
   1d7ce:	0e 5f       	subi	r16, 0xFE	; 254
   1d7d0:	1f 4f       	sbci	r17, 0xFF	; 255
   1d7d2:	a3 01       	movw	r20, r6
   1d7d4:	f1 d0       	rcall	.+482    	; 0x1d9b8 <__ultoa_invert>
   1d7d6:	88 2e       	mov	r8, r24
   1d7d8:	86 18       	sub	r8, r6
   1d7da:	fb 2d       	mov	r31, r11
   1d7dc:	ff 77       	andi	r31, 0x7F	; 127
   1d7de:	3f 2e       	mov	r3, r31
   1d7e0:	36 fe       	sbrs	r3, 6
   1d7e2:	0d c0       	rjmp	.+26     	; 0x1d7fe <vfprintf+0x2e4>
   1d7e4:	23 2d       	mov	r18, r3
   1d7e6:	2e 7f       	andi	r18, 0xFE	; 254
   1d7e8:	a2 2e       	mov	r10, r18
   1d7ea:	89 14       	cp	r8, r9
   1d7ec:	58 f4       	brcc	.+22     	; 0x1d804 <vfprintf+0x2ea>
   1d7ee:	34 fe       	sbrs	r3, 4
   1d7f0:	0b c0       	rjmp	.+22     	; 0x1d808 <vfprintf+0x2ee>
   1d7f2:	32 fc       	sbrc	r3, 2
   1d7f4:	09 c0       	rjmp	.+18     	; 0x1d808 <vfprintf+0x2ee>
   1d7f6:	83 2d       	mov	r24, r3
   1d7f8:	8e 7e       	andi	r24, 0xEE	; 238
   1d7fa:	a8 2e       	mov	r10, r24
   1d7fc:	05 c0       	rjmp	.+10     	; 0x1d808 <vfprintf+0x2ee>
   1d7fe:	b8 2c       	mov	r11, r8
   1d800:	a3 2c       	mov	r10, r3
   1d802:	03 c0       	rjmp	.+6      	; 0x1d80a <vfprintf+0x2f0>
   1d804:	b8 2c       	mov	r11, r8
   1d806:	01 c0       	rjmp	.+2      	; 0x1d80a <vfprintf+0x2f0>
   1d808:	b9 2c       	mov	r11, r9
   1d80a:	a4 fe       	sbrs	r10, 4
   1d80c:	0f c0       	rjmp	.+30     	; 0x1d82c <vfprintf+0x312>
   1d80e:	fe 01       	movw	r30, r28
   1d810:	e8 0d       	add	r30, r8
   1d812:	f1 1d       	adc	r31, r1
   1d814:	80 81       	ld	r24, Z
   1d816:	80 33       	cpi	r24, 0x30	; 48
   1d818:	21 f4       	brne	.+8      	; 0x1d822 <vfprintf+0x308>
   1d81a:	9a 2d       	mov	r25, r10
   1d81c:	99 7e       	andi	r25, 0xE9	; 233
   1d81e:	a9 2e       	mov	r10, r25
   1d820:	09 c0       	rjmp	.+18     	; 0x1d834 <vfprintf+0x31a>
   1d822:	a2 fe       	sbrs	r10, 2
   1d824:	06 c0       	rjmp	.+12     	; 0x1d832 <vfprintf+0x318>
   1d826:	b3 94       	inc	r11
   1d828:	b3 94       	inc	r11
   1d82a:	04 c0       	rjmp	.+8      	; 0x1d834 <vfprintf+0x31a>
   1d82c:	8a 2d       	mov	r24, r10
   1d82e:	86 78       	andi	r24, 0x86	; 134
   1d830:	09 f0       	breq	.+2      	; 0x1d834 <vfprintf+0x31a>
   1d832:	b3 94       	inc	r11
   1d834:	a3 fc       	sbrc	r10, 3
   1d836:	10 c0       	rjmp	.+32     	; 0x1d858 <vfprintf+0x33e>
   1d838:	a0 fe       	sbrs	r10, 0
   1d83a:	06 c0       	rjmp	.+12     	; 0x1d848 <vfprintf+0x32e>
   1d83c:	b2 14       	cp	r11, r2
   1d83e:	80 f4       	brcc	.+32     	; 0x1d860 <vfprintf+0x346>
   1d840:	28 0c       	add	r2, r8
   1d842:	92 2c       	mov	r9, r2
   1d844:	9b 18       	sub	r9, r11
   1d846:	0d c0       	rjmp	.+26     	; 0x1d862 <vfprintf+0x348>
   1d848:	b2 14       	cp	r11, r2
   1d84a:	58 f4       	brcc	.+22     	; 0x1d862 <vfprintf+0x348>
   1d84c:	b6 01       	movw	r22, r12
   1d84e:	80 e2       	ldi	r24, 0x20	; 32
   1d850:	90 e0       	ldi	r25, 0x00	; 0
   1d852:	76 d0       	rcall	.+236    	; 0x1d940 <fputc>
   1d854:	b3 94       	inc	r11
   1d856:	f8 cf       	rjmp	.-16     	; 0x1d848 <vfprintf+0x32e>
   1d858:	b2 14       	cp	r11, r2
   1d85a:	18 f4       	brcc	.+6      	; 0x1d862 <vfprintf+0x348>
   1d85c:	2b 18       	sub	r2, r11
   1d85e:	02 c0       	rjmp	.+4      	; 0x1d864 <vfprintf+0x34a>
   1d860:	98 2c       	mov	r9, r8
   1d862:	21 2c       	mov	r2, r1
   1d864:	a4 fe       	sbrs	r10, 4
   1d866:	0f c0       	rjmp	.+30     	; 0x1d886 <vfprintf+0x36c>
   1d868:	b6 01       	movw	r22, r12
   1d86a:	80 e3       	ldi	r24, 0x30	; 48
   1d86c:	90 e0       	ldi	r25, 0x00	; 0
   1d86e:	68 d0       	rcall	.+208    	; 0x1d940 <fputc>
   1d870:	a2 fe       	sbrs	r10, 2
   1d872:	16 c0       	rjmp	.+44     	; 0x1d8a0 <vfprintf+0x386>
   1d874:	a1 fc       	sbrc	r10, 1
   1d876:	03 c0       	rjmp	.+6      	; 0x1d87e <vfprintf+0x364>
   1d878:	88 e7       	ldi	r24, 0x78	; 120
   1d87a:	90 e0       	ldi	r25, 0x00	; 0
   1d87c:	02 c0       	rjmp	.+4      	; 0x1d882 <vfprintf+0x368>
   1d87e:	88 e5       	ldi	r24, 0x58	; 88
   1d880:	90 e0       	ldi	r25, 0x00	; 0
   1d882:	b6 01       	movw	r22, r12
   1d884:	0c c0       	rjmp	.+24     	; 0x1d89e <vfprintf+0x384>
   1d886:	8a 2d       	mov	r24, r10
   1d888:	86 78       	andi	r24, 0x86	; 134
   1d88a:	51 f0       	breq	.+20     	; 0x1d8a0 <vfprintf+0x386>
   1d88c:	a1 fe       	sbrs	r10, 1
   1d88e:	02 c0       	rjmp	.+4      	; 0x1d894 <vfprintf+0x37a>
   1d890:	8b e2       	ldi	r24, 0x2B	; 43
   1d892:	01 c0       	rjmp	.+2      	; 0x1d896 <vfprintf+0x37c>
   1d894:	80 e2       	ldi	r24, 0x20	; 32
   1d896:	a7 fc       	sbrc	r10, 7
   1d898:	8d e2       	ldi	r24, 0x2D	; 45
   1d89a:	b6 01       	movw	r22, r12
   1d89c:	90 e0       	ldi	r25, 0x00	; 0
   1d89e:	50 d0       	rcall	.+160    	; 0x1d940 <fputc>
   1d8a0:	89 14       	cp	r8, r9
   1d8a2:	30 f4       	brcc	.+12     	; 0x1d8b0 <vfprintf+0x396>
   1d8a4:	b6 01       	movw	r22, r12
   1d8a6:	80 e3       	ldi	r24, 0x30	; 48
   1d8a8:	90 e0       	ldi	r25, 0x00	; 0
   1d8aa:	4a d0       	rcall	.+148    	; 0x1d940 <fputc>
   1d8ac:	9a 94       	dec	r9
   1d8ae:	f8 cf       	rjmp	.-16     	; 0x1d8a0 <vfprintf+0x386>
   1d8b0:	8a 94       	dec	r8
   1d8b2:	f3 01       	movw	r30, r6
   1d8b4:	e8 0d       	add	r30, r8
   1d8b6:	f1 1d       	adc	r31, r1
   1d8b8:	80 81       	ld	r24, Z
   1d8ba:	b6 01       	movw	r22, r12
   1d8bc:	90 e0       	ldi	r25, 0x00	; 0
   1d8be:	40 d0       	rcall	.+128    	; 0x1d940 <fputc>
   1d8c0:	81 10       	cpse	r8, r1
   1d8c2:	f6 cf       	rjmp	.-20     	; 0x1d8b0 <vfprintf+0x396>
   1d8c4:	22 20       	and	r2, r2
   1d8c6:	09 f4       	brne	.+2      	; 0x1d8ca <vfprintf+0x3b0>
   1d8c8:	4e ce       	rjmp	.-868    	; 0x1d566 <vfprintf+0x4c>
   1d8ca:	b6 01       	movw	r22, r12
   1d8cc:	80 e2       	ldi	r24, 0x20	; 32
   1d8ce:	90 e0       	ldi	r25, 0x00	; 0
   1d8d0:	37 d0       	rcall	.+110    	; 0x1d940 <fputc>
   1d8d2:	2a 94       	dec	r2
   1d8d4:	f7 cf       	rjmp	.-18     	; 0x1d8c4 <vfprintf+0x3aa>
   1d8d6:	f6 01       	movw	r30, r12
   1d8d8:	86 81       	ldd	r24, Z+6	; 0x06
   1d8da:	97 81       	ldd	r25, Z+7	; 0x07
   1d8dc:	02 c0       	rjmp	.+4      	; 0x1d8e2 <vfprintf+0x3c8>
   1d8de:	8f ef       	ldi	r24, 0xFF	; 255
   1d8e0:	9f ef       	ldi	r25, 0xFF	; 255
   1d8e2:	2b 96       	adiw	r28, 0x0b	; 11
   1d8e4:	0f b6       	in	r0, 0x3f	; 63
   1d8e6:	f8 94       	cli
   1d8e8:	de bf       	out	0x3e, r29	; 62
   1d8ea:	0f be       	out	0x3f, r0	; 63
   1d8ec:	cd bf       	out	0x3d, r28	; 61
   1d8ee:	df 91       	pop	r29
   1d8f0:	cf 91       	pop	r28
   1d8f2:	1f 91       	pop	r17
   1d8f4:	0f 91       	pop	r16
   1d8f6:	ff 90       	pop	r15
   1d8f8:	ef 90       	pop	r14
   1d8fa:	df 90       	pop	r13
   1d8fc:	cf 90       	pop	r12
   1d8fe:	bf 90       	pop	r11
   1d900:	af 90       	pop	r10
   1d902:	9f 90       	pop	r9
   1d904:	8f 90       	pop	r8
   1d906:	7f 90       	pop	r7
   1d908:	6f 90       	pop	r6
   1d90a:	5f 90       	pop	r5
   1d90c:	4f 90       	pop	r4
   1d90e:	3f 90       	pop	r3
   1d910:	2f 90       	pop	r2
   1d912:	08 95       	ret

0001d914 <strnlen_P>:
   1d914:	fc 01       	movw	r30, r24
   1d916:	05 90       	lpm	r0, Z+
   1d918:	61 50       	subi	r22, 0x01	; 1
   1d91a:	70 40       	sbci	r23, 0x00	; 0
   1d91c:	01 10       	cpse	r0, r1
   1d91e:	d8 f7       	brcc	.-10     	; 0x1d916 <strnlen_P+0x2>
   1d920:	80 95       	com	r24
   1d922:	90 95       	com	r25
   1d924:	8e 0f       	add	r24, r30
   1d926:	9f 1f       	adc	r25, r31
   1d928:	08 95       	ret

0001d92a <strnlen>:
   1d92a:	fc 01       	movw	r30, r24
   1d92c:	61 50       	subi	r22, 0x01	; 1
   1d92e:	70 40       	sbci	r23, 0x00	; 0
   1d930:	01 90       	ld	r0, Z+
   1d932:	01 10       	cpse	r0, r1
   1d934:	d8 f7       	brcc	.-10     	; 0x1d92c <strnlen+0x2>
   1d936:	80 95       	com	r24
   1d938:	90 95       	com	r25
   1d93a:	8e 0f       	add	r24, r30
   1d93c:	9f 1f       	adc	r25, r31
   1d93e:	08 95       	ret

0001d940 <fputc>:
   1d940:	0f 93       	push	r16
   1d942:	1f 93       	push	r17
   1d944:	cf 93       	push	r28
   1d946:	df 93       	push	r29
   1d948:	fb 01       	movw	r30, r22
   1d94a:	23 81       	ldd	r18, Z+3	; 0x03
   1d94c:	21 fd       	sbrc	r18, 1
   1d94e:	03 c0       	rjmp	.+6      	; 0x1d956 <fputc+0x16>
   1d950:	8f ef       	ldi	r24, 0xFF	; 255
   1d952:	9f ef       	ldi	r25, 0xFF	; 255
   1d954:	2c c0       	rjmp	.+88     	; 0x1d9ae <fputc+0x6e>
   1d956:	22 ff       	sbrs	r18, 2
   1d958:	16 c0       	rjmp	.+44     	; 0x1d986 <fputc+0x46>
   1d95a:	46 81       	ldd	r20, Z+6	; 0x06
   1d95c:	57 81       	ldd	r21, Z+7	; 0x07
   1d95e:	24 81       	ldd	r18, Z+4	; 0x04
   1d960:	35 81       	ldd	r19, Z+5	; 0x05
   1d962:	42 17       	cp	r20, r18
   1d964:	53 07       	cpc	r21, r19
   1d966:	44 f4       	brge	.+16     	; 0x1d978 <fputc+0x38>
   1d968:	a0 81       	ld	r26, Z
   1d96a:	b1 81       	ldd	r27, Z+1	; 0x01
   1d96c:	9d 01       	movw	r18, r26
   1d96e:	2f 5f       	subi	r18, 0xFF	; 255
   1d970:	3f 4f       	sbci	r19, 0xFF	; 255
   1d972:	31 83       	std	Z+1, r19	; 0x01
   1d974:	20 83       	st	Z, r18
   1d976:	8c 93       	st	X, r24
   1d978:	26 81       	ldd	r18, Z+6	; 0x06
   1d97a:	37 81       	ldd	r19, Z+7	; 0x07
   1d97c:	2f 5f       	subi	r18, 0xFF	; 255
   1d97e:	3f 4f       	sbci	r19, 0xFF	; 255
   1d980:	37 83       	std	Z+7, r19	; 0x07
   1d982:	26 83       	std	Z+6, r18	; 0x06
   1d984:	14 c0       	rjmp	.+40     	; 0x1d9ae <fputc+0x6e>
   1d986:	8b 01       	movw	r16, r22
   1d988:	ec 01       	movw	r28, r24
   1d98a:	fb 01       	movw	r30, r22
   1d98c:	00 84       	ldd	r0, Z+8	; 0x08
   1d98e:	f1 85       	ldd	r31, Z+9	; 0x09
   1d990:	e0 2d       	mov	r30, r0
   1d992:	19 95       	eicall
   1d994:	89 2b       	or	r24, r25
   1d996:	e1 f6       	brne	.-72     	; 0x1d950 <fputc+0x10>
   1d998:	d8 01       	movw	r26, r16
   1d99a:	16 96       	adiw	r26, 0x06	; 6
   1d99c:	8d 91       	ld	r24, X+
   1d99e:	9c 91       	ld	r25, X
   1d9a0:	17 97       	sbiw	r26, 0x07	; 7
   1d9a2:	01 96       	adiw	r24, 0x01	; 1
   1d9a4:	17 96       	adiw	r26, 0x07	; 7
   1d9a6:	9c 93       	st	X, r25
   1d9a8:	8e 93       	st	-X, r24
   1d9aa:	16 97       	sbiw	r26, 0x06	; 6
   1d9ac:	ce 01       	movw	r24, r28
   1d9ae:	df 91       	pop	r29
   1d9b0:	cf 91       	pop	r28
   1d9b2:	1f 91       	pop	r17
   1d9b4:	0f 91       	pop	r16
   1d9b6:	08 95       	ret

0001d9b8 <__ultoa_invert>:
   1d9b8:	fa 01       	movw	r30, r20
   1d9ba:	aa 27       	eor	r26, r26
   1d9bc:	28 30       	cpi	r18, 0x08	; 8
   1d9be:	51 f1       	breq	.+84     	; 0x1da14 <__ultoa_invert+0x5c>
   1d9c0:	20 31       	cpi	r18, 0x10	; 16
   1d9c2:	81 f1       	breq	.+96     	; 0x1da24 <__ultoa_invert+0x6c>
   1d9c4:	e8 94       	clt
   1d9c6:	6f 93       	push	r22
   1d9c8:	6e 7f       	andi	r22, 0xFE	; 254
   1d9ca:	6e 5f       	subi	r22, 0xFE	; 254
   1d9cc:	7f 4f       	sbci	r23, 0xFF	; 255
   1d9ce:	8f 4f       	sbci	r24, 0xFF	; 255
   1d9d0:	9f 4f       	sbci	r25, 0xFF	; 255
   1d9d2:	af 4f       	sbci	r26, 0xFF	; 255
   1d9d4:	b1 e0       	ldi	r27, 0x01	; 1
   1d9d6:	3e d0       	rcall	.+124    	; 0x1da54 <__ultoa_invert+0x9c>
   1d9d8:	b4 e0       	ldi	r27, 0x04	; 4
   1d9da:	3c d0       	rcall	.+120    	; 0x1da54 <__ultoa_invert+0x9c>
   1d9dc:	67 0f       	add	r22, r23
   1d9de:	78 1f       	adc	r23, r24
   1d9e0:	89 1f       	adc	r24, r25
   1d9e2:	9a 1f       	adc	r25, r26
   1d9e4:	a1 1d       	adc	r26, r1
   1d9e6:	68 0f       	add	r22, r24
   1d9e8:	79 1f       	adc	r23, r25
   1d9ea:	8a 1f       	adc	r24, r26
   1d9ec:	91 1d       	adc	r25, r1
   1d9ee:	a1 1d       	adc	r26, r1
   1d9f0:	6a 0f       	add	r22, r26
   1d9f2:	71 1d       	adc	r23, r1
   1d9f4:	81 1d       	adc	r24, r1
   1d9f6:	91 1d       	adc	r25, r1
   1d9f8:	a1 1d       	adc	r26, r1
   1d9fa:	20 d0       	rcall	.+64     	; 0x1da3c <__ultoa_invert+0x84>
   1d9fc:	09 f4       	brne	.+2      	; 0x1da00 <__ultoa_invert+0x48>
   1d9fe:	68 94       	set
   1da00:	3f 91       	pop	r19
   1da02:	2a e0       	ldi	r18, 0x0A	; 10
   1da04:	26 9f       	mul	r18, r22
   1da06:	11 24       	eor	r1, r1
   1da08:	30 19       	sub	r19, r0
   1da0a:	30 5d       	subi	r19, 0xD0	; 208
   1da0c:	31 93       	st	Z+, r19
   1da0e:	de f6       	brtc	.-74     	; 0x1d9c6 <__ultoa_invert+0xe>
   1da10:	cf 01       	movw	r24, r30
   1da12:	08 95       	ret
   1da14:	46 2f       	mov	r20, r22
   1da16:	47 70       	andi	r20, 0x07	; 7
   1da18:	40 5d       	subi	r20, 0xD0	; 208
   1da1a:	41 93       	st	Z+, r20
   1da1c:	b3 e0       	ldi	r27, 0x03	; 3
   1da1e:	0f d0       	rcall	.+30     	; 0x1da3e <__ultoa_invert+0x86>
   1da20:	c9 f7       	brne	.-14     	; 0x1da14 <__ultoa_invert+0x5c>
   1da22:	f6 cf       	rjmp	.-20     	; 0x1da10 <__ultoa_invert+0x58>
   1da24:	46 2f       	mov	r20, r22
   1da26:	4f 70       	andi	r20, 0x0F	; 15
   1da28:	40 5d       	subi	r20, 0xD0	; 208
   1da2a:	4a 33       	cpi	r20, 0x3A	; 58
   1da2c:	18 f0       	brcs	.+6      	; 0x1da34 <__ultoa_invert+0x7c>
   1da2e:	49 5d       	subi	r20, 0xD9	; 217
   1da30:	31 fd       	sbrc	r19, 1
   1da32:	40 52       	subi	r20, 0x20	; 32
   1da34:	41 93       	st	Z+, r20
   1da36:	02 d0       	rcall	.+4      	; 0x1da3c <__ultoa_invert+0x84>
   1da38:	a9 f7       	brne	.-22     	; 0x1da24 <__ultoa_invert+0x6c>
   1da3a:	ea cf       	rjmp	.-44     	; 0x1da10 <__ultoa_invert+0x58>
   1da3c:	b4 e0       	ldi	r27, 0x04	; 4
   1da3e:	a6 95       	lsr	r26
   1da40:	97 95       	ror	r25
   1da42:	87 95       	ror	r24
   1da44:	77 95       	ror	r23
   1da46:	67 95       	ror	r22
   1da48:	ba 95       	dec	r27
   1da4a:	c9 f7       	brne	.-14     	; 0x1da3e <__ultoa_invert+0x86>
   1da4c:	00 97       	sbiw	r24, 0x00	; 0
   1da4e:	61 05       	cpc	r22, r1
   1da50:	71 05       	cpc	r23, r1
   1da52:	08 95       	ret
   1da54:	9b 01       	movw	r18, r22
   1da56:	ac 01       	movw	r20, r24
   1da58:	0a 2e       	mov	r0, r26
   1da5a:	06 94       	lsr	r0
   1da5c:	57 95       	ror	r21
   1da5e:	47 95       	ror	r20
   1da60:	37 95       	ror	r19
   1da62:	27 95       	ror	r18
   1da64:	ba 95       	dec	r27
   1da66:	c9 f7       	brne	.-14     	; 0x1da5a <__ultoa_invert+0xa2>
   1da68:	62 0f       	add	r22, r18
   1da6a:	73 1f       	adc	r23, r19
   1da6c:	84 1f       	adc	r24, r20
   1da6e:	95 1f       	adc	r25, r21
   1da70:	a0 1d       	adc	r26, r0
   1da72:	08 95       	ret

0001da74 <eeprom_read_byte>:
   1da74:	f9 99       	sbic	0x1f, 1	; 31
   1da76:	fe cf       	rjmp	.-4      	; 0x1da74 <eeprom_read_byte>
   1da78:	92 bd       	out	0x22, r25	; 34
   1da7a:	81 bd       	out	0x21, r24	; 33
   1da7c:	f8 9a       	sbi	0x1f, 0	; 31
   1da7e:	99 27       	eor	r25, r25
   1da80:	80 b5       	in	r24, 0x20	; 32
   1da82:	08 95       	ret

0001da84 <eeprom_write_byte>:
   1da84:	26 2f       	mov	r18, r22

0001da86 <eeprom_write_r18>:
   1da86:	f9 99       	sbic	0x1f, 1	; 31
   1da88:	fe cf       	rjmp	.-4      	; 0x1da86 <eeprom_write_r18>
   1da8a:	1f ba       	out	0x1f, r1	; 31
   1da8c:	92 bd       	out	0x22, r25	; 34
   1da8e:	81 bd       	out	0x21, r24	; 33
   1da90:	20 bd       	out	0x20, r18	; 32
   1da92:	0f b6       	in	r0, 0x3f	; 63
   1da94:	f8 94       	cli
   1da96:	fa 9a       	sbi	0x1f, 2	; 31
   1da98:	f9 9a       	sbi	0x1f, 1	; 31
   1da9a:	0f be       	out	0x3f, r0	; 63
   1da9c:	01 96       	adiw	r24, 0x01	; 1
   1da9e:	08 95       	ret

0001daa0 <__mulshisi3>:
   1daa0:	b7 ff       	sbrs	r27, 7
   1daa2:	e1 ca       	rjmp	.-2622   	; 0x1d066 <__muluhisi3>

0001daa4 <__mulohisi3>:
   1daa4:	e0 da       	rcall	.-2624   	; 0x1d066 <__muluhisi3>
   1daa6:	82 1b       	sub	r24, r18
   1daa8:	93 0b       	sbc	r25, r19
   1daaa:	08 95       	ret

0001daac <_exit>:
   1daac:	f8 94       	cli

0001daae <__stop_program>:
   1daae:	ff cf       	rjmp	.-2      	; 0x1daae <__stop_program>
